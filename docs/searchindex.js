Search.setIndex({"docnames": ["about/myself/contact", "about/myself/cv-de", "about/myself/index", "about/myself/projects-de", "about/myself/skills-de", "about/site/courses/angebot-2023-10-12", "about/site/courses/index", "about/site/courses/samples/detail/2021-04-12/Notebook", "about/site/courses/samples/detail/2021-04-12/index", "about/site/courses/samples/detail/2021-04-12/notebook-wrapper", "about/site/courses/samples/detail/index", "about/site/courses/samples/index", "about/site/courses/templates", "about/site/index", "about/site/opentraining/index", "about/site/opentraining/misc/draft-topics/index", "about/site/opentraining/misc/index", "about/site/opentraining/misc/s5/index", "about/site/opentraining/misc/s5/tests/index", "about/site/opentraining/misc/s5/tests/test-slides", "about/site/opentraining/misc/screencast", "about/site/opentraining/misc/topics-to-write", "about/site/opentraining/netidee/index", "about/site/opentraining/netidee/netidee-antrag", "about/site/opentraining/netidee/netidee-video-2min", "about/site/opentraining/usecases/agenda-subtract-known", "about/site/opentraining/usecases/duration", "about/site/opentraining/usecases/index", "about/site/opentraining/usecases/linking", "about/site/opentraining/usecases/menu", "about/site/opentraining/usecases/slides", "about/site/recipes/camera-ssh", "about/site/recipes/emoji", "about/site/recipes/index", "about/site/recipes/isoamsa", "about/site/recipes/isoamsr", "about/site/recipes/isonum", "about/site/recipes/layout-test", "about/site/recipes/mathml", "about/site/recipes/rst-cheatsheet", "about/site/recipes/sphinxish", "about/site/work-in-progress/2022-04-13/index", "about/site/work-in-progress/2022-04-13/seminar/block-before-googletest", "about/site/work-in-progress/2022-04-13/seminar/clean-code-craftsmanship", "about/site/work-in-progress/2022-04-13/seminar/enter-googletest", "about/site/work-in-progress/2022-04-13/seminar/index", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/find-error", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/group", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/overwrite-existing-files", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/overwrite-store-content-on-read", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/csv", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/group", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/other-indexes", "about/site/work-in-progress/2022-04-13/seminar/tasks/group", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/backingstore-interface", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/backingstore-monolithic", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/group", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/pass-store-in-ctor", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/store-enum-switch", "about/site/work-in-progress/blink/glt2023/index", "about/site/work-in-progress/blink/glt2023/installation", "about/site/work-in-progress/blink/glt2023/pycon-2023", "about/site/work-in-progress/blink/glt2023/screenplay", "about/site/work-in-progress/blink/glt2023/submission", "about/site/work-in-progress/blink/glt2024/index", "about/site/work-in-progress/blink/glt2024/script", "about/site/work-in-progress/blink/glt2024/slides", "about/site/work-in-progress/blink/glt2024/submission", "about/site/work-in-progress/blink/index", "about/site/work-in-progress/fh-joanneum/2019/cxx", "about/site/work-in-progress/fh-joanneum/2019/cxx_build", "about/site/work-in-progress/fh-joanneum/2019/cxx_iface", "about/site/work-in-progress/fh-joanneum/2019/cxx_oo_basics", "about/site/work-in-progress/fh-joanneum/2019/cxx_unittest", "about/site/work-in-progress/fh-joanneum/2019/ec", "about/site/work-in-progress/fh-joanneum/2019/embedded-computing-1", "about/site/work-in-progress/fh-joanneum/2019/embedded-computing-2", "about/site/work-in-progress/fh-joanneum/2019/exercise_mt_race", "about/site/work-in-progress/fh-joanneum/2019/exercise_mt_race_fixed", "about/site/work-in-progress/fh-joanneum/2019/git", "about/site/work-in-progress/fh-joanneum/2019/index", "about/site/work-in-progress/fh-joanneum/2019/linux", "about/site/work-in-progress/fh-joanneum/2019/linux_basics", "about/site/work-in-progress/fh-joanneum/2019/linux_dev_mgmt", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_avg_sensor", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_avg_sensor_parallel", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_led_display", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_sensors", "about/site/work-in-progress/fh-joanneum/2019/linux_gpio", "about/site/work-in-progress/fh-joanneum/2019/mt", "about/site/work-in-progress/fh-joanneum/2019/mt_lock", "about/site/work-in-progress/fh-joanneum/2019/mt_wait", "about/site/work-in-progress/fh-joanneum/2019/py_basics", "about/site/work-in-progress/fh-joanneum/2019/py_exercise_avg_display", "about/site/work-in-progress/fh-joanneum/2019/py_exercise_sensors", "about/site/work-in-progress/fh-joanneum/2019/py_web", "about/site/work-in-progress/fh-joanneum/2019/py_web_sensors", "about/site/work-in-progress/fh-joanneum/2019/python", "about/site/work-in-progress/fh-joanneum/2020/index", "about/site/work-in-progress/fh-joanneum/2020/ss2022", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-08", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-10", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-10-homework", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-21", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-22,24", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-28", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-04-01", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/index", "about/site/work-in-progress/fh-joanneum/2020/ws2022", "about/site/work-in-progress/fh-joanneum/2020/ws2022-questions-code-general", "about/site/work-in-progress/fh-joanneum/2020/ws2022-questions-yesno", "about/site/work-in-progress/fh-joanneum/2020/ws2022/lab-exam-2023-01-17", "about/site/work-in-progress/fh-joanneum/2021/exam-2023-06-30", "about/site/work-in-progress/fh-joanneum/2021/exam-2023-06-30-solved", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/exam-2024-01-26", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/exam-2024-02-02", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/exam-2024-02-02-sample", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/index", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/index", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/q-const", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/q-param-passing", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/q-solid--hysteresis-with-display", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/q-solid--sensor-with-id", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/q-virtual-method", "about/site/work-in-progress/fh-joanneum/2021/git/git", "about/site/work-in-progress/fh-joanneum/2021/index", "about/site/work-in-progress/fh-joanneum/2021/ss2023", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot-basic-integration", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot-display", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot-full-integration", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger-csv-sink", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger-integration", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger-mqtt-sink", "about/site/work-in-progress/fh-joanneum/2021/tasks/display-infrastructure", "about/site/work-in-progress/fh-joanneum/2021/tasks/group", "about/site/work-in-progress/fh-joanneum/2021/tasks/libgpiod-switch", "about/site/work-in-progress/fh-joanneum/2021/tasks/mqtt-tkinter", "about/site/work-in-progress/fh-joanneum/2021/tasks/pwm-display", "about/site/work-in-progress/fh-joanneum/2021/tasks/sensor-interface", "about/site/work-in-progress/fh-joanneum/2021/tasks/sensor-w1", "about/site/work-in-progress/fh-joanneum/2021/tasks/switch-interface", "about/site/work-in-progress/fh-joanneum/2021/tasks/sysfs-gpio-switch", "about/site/work-in-progress/fh-joanneum/2021/ws2023-2024", "about/site/work-in-progress/fh-joanneum/2022/index", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-03-04/gluehwein", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-03-04/index", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-03-21/index", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-04-14/index", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-04-17/index", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-04-22/index", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-05-06/exercise", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-05-06/index", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-05-13/index", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-05-27/index", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-06-17/index", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-06-19/index", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-06-20/index", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-06-28/handout", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-06-28/index", "about/site/work-in-progress/fh-joanneum/2022/ss2024/index", "about/site/work-in-progress/fh-joanneum/2022/ss2024/material", "about/site/work-in-progress/fh-joanneum/2022/ss2024/syllabus", "about/site/work-in-progress/fh-joanneum/2022/ws2024-25/index", "about/site/work-in-progress/fh-joanneum/2022/ws2024-25/material", "about/site/work-in-progress/fh-joanneum/2022/ws2024-25/syllabus", "about/site/work-in-progress/fh-joanneum/index", "about/site/work-in-progress/git", "about/site/work-in-progress/index", "about/site/work-in-progress/packaging/index", "about/site/work-in-progress/playground/gaphor/index", "about/site/work-in-progress/playground/hochkoenig/index", "about/site/work-in-progress/playground/index", "about/site/work-in-progress/playground/sphinx", "about/site/work-in-progress/project-xxx/audio-chip", "about/site/work-in-progress/project-xxx/debian-config", "about/site/work-in-progress/project-xxx/debian-kernel-package", "about/site/work-in-progress/project-xxx/hardware-bringup", "about/site/work-in-progress/project-xxx/index", "about/site/work-in-progress/project-xxx/kernel-upgrade-dirty", "about/site/work-in-progress/project-xxx/wait-hardware", "about/site/work-in-progress/project-xxx/yocto-kernel", "about/site/work-in-progress/python-training", "about/site/work-in-progress/screencast", "about/site/work-in-progress/seo", "about/site/work-in-progress/stacks", "about/site/work-in-progress/todo-misc", "about/site/work-in-progress/web", "blog/2010/07/beagleboard-how-to-repair-nand-also-known-as-40w", "blog/2011/01/porting-to-linux-there-s-always-a-better-way", "blog/2011/01/saving-solid-state-disk-life--gentoo", "blog/2012/04/Why-ps-sucks", "blog/2020/02/fedora-kernel-build", "blog/2020/03/custom-domain-gh-pages", "blog/2020/03/ms-teams-on-linux", "blog/2020/03/sphinx-gh-pages", "blog/2020/04/bbb", "blog/2020/09/traunstein", "blog/2021/08/grintovec", "blog/2021/09/xps13-shim-mok-brick/index", "blog/2022/09/cross-raspi", "blog/index", "index", "trainings/codex", "trainings/exercises", "trainings/index", "trainings/log/detail/2013-10-01/index", "trainings/log/detail/2015-11-30/index", "trainings/log/detail/2019-10-28/LiveHacking", "trainings/log/detail/2019-10-28/index", "trainings/log/detail/2019-11-12/code/BigPlan", "trainings/log/detail/2019-11-12/code/LiveHacking", "trainings/log/detail/2019-11-12/index", "trainings/log/detail/2020-01-10/Proposal", "trainings/log/detail/2020-01-10/index", "trainings/log/detail/2020-03-30/code/exercise-string/index", "trainings/log/detail/2020-03-30/index", "trainings/log/detail/2020-03-30/install-googletest", "trainings/log/detail/2020-03-30/setup", "trainings/log/detail/2020-03-30/vs-code", "trainings/log/detail/2020-05-12/code/index", "trainings/log/detail/2020-05-12/index", "trainings/log/detail/2020-05-18/Livehacking", "trainings/log/detail/2020-05-18/code/index", "trainings/log/detail/2020-05-18/index", "trainings/log/detail/2020-09-07/index", "trainings/log/detail/2020-09-28/index", "trainings/log/detail/2020-10-19/Notebook", "trainings/log/detail/2020-10-19/index", "trainings/log/detail/2020-11-03/index", "trainings/log/detail/2020-11-23/index", "trainings/log/detail/2020-11-30/index", "trainings/log/detail/2021-01-13/Notebook", "trainings/log/detail/2021-01-13/index", "trainings/log/detail/2021-01-13/notebook-wrapper", "trainings/log/detail/2021-02-22/index", "trainings/log/detail/2021-03-08/index", "trainings/log/detail/2021-03-15/Notebook", "trainings/log/detail/2021-03-15/index", "trainings/log/detail/2021-03-22/Notebook", "trainings/log/detail/2021-03-22/index", "trainings/log/detail/2021-03-29/index", "trainings/log/detail/2021-04-12/Notebook", "trainings/log/detail/2021-04-12/index", "trainings/log/detail/2021-04-12/notebook-wrapper", "trainings/log/detail/2021-05-03/Notebook", "trainings/log/detail/2021-05-03/index", "trainings/log/detail/2021-05-03/notebook-wrapper", "trainings/log/detail/2021-05-25/Notebook", "trainings/log/detail/2021-05-25/index", "trainings/log/detail/2021-06-14/index", "trainings/log/detail/2021-07-12/index", "trainings/log/detail/2021-08-02/index", "trainings/log/detail/2021-08-02/notebook", "trainings/log/detail/2021-08-23/Notebook", "trainings/log/detail/2021-08-23/exercises/sap-cleaned", "trainings/log/detail/2021-08-23/index", "trainings/log/detail/2021-08-23/notebook-wrapper", "trainings/log/detail/2021-08-31/Notebook", "trainings/log/detail/2021-08-31/index", "trainings/log/detail/2021-08-31/notebook-wrapper", "trainings/log/detail/2021-11-17/Notebook", "trainings/log/detail/2021-11-17/index", "trainings/log/detail/2021-11-17/notebook-wrapper", "trainings/log/detail/2021-12-01/2021-12-01", "trainings/log/detail/2021-12-01/index", "trainings/log/detail/2021-12-01/notebook-wrapper", "trainings/log/detail/2021-12-06/index", "trainings/log/detail/2022-01-17/index", "trainings/log/detail/2022-01-17/notebook", "trainings/log/detail/2022-01-17/notebook-wrapper", "trainings/log/detail/2022-02-23/Notebook", "trainings/log/detail/2022-02-23/index", "trainings/log/detail/2022-02-23/notebook-wrapper", "trainings/log/detail/2022-03-15/Notebook", "trainings/log/detail/2022-03-15/index", "trainings/log/detail/2022-03-15/notebook-wrapper", "trainings/log/detail/2022-03-23/Notebook", "trainings/log/detail/2022-03-23/index", "trainings/log/detail/2022-03-23/notebook-wrapper", "trainings/log/detail/2022-04-05/index", "trainings/log/detail/2022-04-05/notebook", "trainings/log/detail/2022-04-05/notebook-wrapper", "trainings/log/detail/2022-04-25/index", "trainings/log/detail/2022-04-25/notebook", "trainings/log/detail/2022-04-25/notebook-wrapper", "trainings/log/detail/2022-05-02/index", "trainings/log/detail/2022-05-02/notebook", "trainings/log/detail/2022-05-02/notebook-wrapper", "trainings/log/detail/2022-05-16/index", "trainings/log/detail/2022-05-16/notebook", "trainings/log/detail/2022-05-16/notebook-wrapper", "trainings/log/detail/2022-06-14/2022-05-11", "trainings/log/detail/2022-06-14/index", "trainings/log/detail/2022-07-26/index", "trainings/log/detail/2022-10-03/index", "trainings/log/detail/2022-10-11/index", "trainings/log/detail/2022-10-24/index", "trainings/log/detail/2022-11-07/index", "trainings/log/detail/2022-11-07/notebook", "trainings/log/detail/2022-11-07/notebook-wrapper", "trainings/log/detail/2022-11-16/index", "trainings/log/detail/2022-11-16/notebook", "trainings/log/detail/2022-11-16/notebook-wrapper", "trainings/log/detail/2023-01-23/index", "trainings/log/detail/2023-02-13/index", "trainings/log/detail/2023-03-13-Python-SAP/Demo/demo-notebook", "trainings/log/detail/2023-03-13-Python-SAP/demo", "trainings/log/detail/2023-03-13-Python-SAP/index", "trainings/log/detail/2023-03-13-Python-SAP/notebook", "trainings/log/detail/2023-03-13-Python-SAP/notebook-wrapper", "trainings/log/detail/2023-03-13-Python-SAP/original-agenda", "trainings/log/detail/2023-03-13-Python-SAP/sap-dataset/index", "trainings/log/detail/2023-03-13-Python-SAP/sap-dataset/sap-dataset", "trainings/log/detail/2023-03-20--C++-embedded/index", "trainings/log/detail/2023-03-28--Python-Clean-Code/index", "trainings/log/detail/2023-04-18--C++-embedded/index", "trainings/log/detail/2023-04-24--Python-Advanced/agenda", "trainings/log/detail/2023-04-24--Python-Advanced/index", "trainings/log/detail/2023-04-24--Python-Advanced/notebook", "trainings/log/detail/2023-04-24--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-05-15--Python-Basics/agenda", "trainings/log/detail/2023-05-15--Python-Basics/index", "trainings/log/detail/2023-05-15--Python-Basics/notebook", "trainings/log/detail/2023-05-15--Python-Basics/notebook-wrapper", "trainings/log/detail/2023-05-23--Linux-Basics/agenda", "trainings/log/detail/2023-05-23--Linux-Basics/index", "trainings/log/detail/2023-06-20--Python-Basics/agenda", "trainings/log/detail/2023-06-20--Python-Basics/index", "trainings/log/detail/2023-06-20--Python-Basics/notebook", "trainings/log/detail/2023-06-20--Python-Basics/notebook-wrapper", "trainings/log/detail/2023-07-03--CMake/agenda", "trainings/log/detail/2023-07-03--CMake/index", "trainings/log/detail/2023-09-25--Python-Advanced/index", "trainings/log/detail/2023-09-25--Python-Advanced/notebook", "trainings/log/detail/2023-09-25--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-10-09--Python-Advanced/index", "trainings/log/detail/2023-10-09--Python-Advanced/notebook", "trainings/log/detail/2023-10-09--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-10-24--Python-Advanced/agenda", "trainings/log/detail/2023-10-24--Python-Advanced/index", "trainings/log/detail/2023-10-24--Python-Advanced/notebook", "trainings/log/detail/2023-10-24--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-11-22--Python-Advanced/agenda", "trainings/log/detail/2023-11-22--Python-Advanced/index", "trainings/log/detail/2023-11-22--Python-Advanced/notebook", "trainings/log/detail/2023-11-22--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-11-27--CMake/agenda", "trainings/log/detail/2023-11-27--CMake/index", "trainings/log/detail/2023-11-29--Python-Basics/agenda", "trainings/log/detail/2023-11-29--Python-Basics/index", "trainings/log/detail/2023-11-29--Python-Basics/notebook", "trainings/log/detail/2023-11-29--Python-Basics/notebook-wrapper", "trainings/log/detail/2023-12-04--C++-Advanced/agenda", "trainings/log/detail/2023-12-04--C++-Advanced/index", "trainings/log/detail/2023-12-18--Python-Basics/agenda", "trainings/log/detail/2023-12-18--Python-Basics/index", "trainings/log/detail/2023-12-18--Python-Basics/notebook", "trainings/log/detail/2023-12-18--Python-Basics/notebook-wrapper", "trainings/log/detail/2023-XX-XX-C++-embedded/index", "trainings/log/detail/2023-XX-XX-Python-SAP/index", "trainings/log/detail/2024-01-15--Python-Advanced/agenda", "trainings/log/detail/2024-01-15--Python-Advanced/index", "trainings/log/detail/2024-01-15--Python-Advanced/notebook", "trainings/log/detail/2024-01-15--Python-Advanced/notebook-wrapper", "trainings/log/detail/2024-01-29--Python-Basics/agenda", "trainings/log/detail/2024-01-29--Python-Basics/index", "trainings/log/detail/2024-01-29--Python-Basics/notebook", "trainings/log/detail/2024-01-29--Python-Basics/notebook-wrapper", "trainings/log/detail/2024-03-11--Linux-Basics/agenda", "trainings/log/detail/2024-03-11--Linux-Basics/index", "trainings/log/detail/2024-04-09--TDD-Python-Delphi/index", "trainings/log/detail/2024-06-03--C++/agenda", "trainings/log/detail/2024-06-03--C++/index", "trainings/log/detail/2024-06-11--CMake-Advanced/agenda", "trainings/log/detail/2024-06-11--CMake-Advanced/index", "trainings/log/detail/2024-06-18--CMake-Basics/index", "trainings/log/detail/2024-07-01--CMake-Advanced/agenda", "trainings/log/detail/2024-07-01--CMake-Advanced/index", "trainings/log/detail/2024-XX-XX--C++/agenda", "trainings/log/detail/2024-XX-XX--C++/index", "trainings/log/detail/FH-ECE-19/EC1/2021-05-12/screenplay-checker", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-abc", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-oo", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-unittest", "trainings/log/detail/FH-ECE-19/EC1/Exercises/fh-group", "trainings/log/detail/FH-ECE-19/EC1/Exercises/file-read", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/2021-05-20-G2", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/2021-05-21", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Checker-Explanations", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Datatypes", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Functions", "trainings/log/detail/FH-ECE-19/EC1/cloud-computer", "trainings/log/detail/FH-ECE-19/EC1/formales", "trainings/log/detail/FH-ECE-19/EC1/index", "trainings/log/detail/FH-ECE-19/EC1/log", "trainings/log/detail/FH-ECE-19/EC1/lv-de", "trainings/log/detail/FH-ECE-19/EC1/lv-en", "trainings/log/detail/FH-ECE-19/EC1/plan", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-07", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-12", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-28", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-11-15", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-11-29", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-12-14", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-01-10", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-01-12", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-02-15", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/index", "trainings/log/detail/FH-ECE-19/EC2/index", "trainings/log/detail/FH-ECE-19/EC2/test-material", "trainings/log/detail/FH-ECE-19/index", "trainings/log/detail/index", "trainings/log/index", "trainings/material/index", "trainings/material/soup/c/010-introduction/000-installation/topic", "trainings/material/soup/c/010-introduction/010-introduction/topic", "trainings/material/soup/c/010-introduction/020-getting-started/topic", "trainings/material/soup/c/010-introduction/030-variables-and-arithmetic-expressions/topic", "trainings/material/soup/c/010-introduction/040-exercise-fahrenheit-float/topic", "trainings/material/soup/c/010-introduction/050-the-for-statement/topic", "trainings/material/soup/c/010-introduction/060-exercise-fahrenheit-for/topic", "trainings/material/soup/c/010-introduction/070-symbolic-constants/topic", "trainings/material/soup/c/010-introduction/080-exercise-fahrenheit-cpp/topic", "trainings/material/soup/c/010-introduction/090-character-input-and-output/topic", "trainings/material/soup/c/010-introduction/100-exercise-wc/topic", "trainings/material/soup/c/010-introduction/110-arrays/topic", "trainings/material/soup/c/010-introduction/120-exercise-histogram/topic", "trainings/material/soup/c/010-introduction/130-functions/topic", "trainings/material/soup/c/010-introduction/140-exercise-power-declaration/topic", "trainings/material/soup/c/010-introduction/150-character-arrays/topic", "trainings/material/soup/c/010-introduction/160-exercise-string-read-line/topic", "trainings/material/soup/c/010-introduction/170-external-variables-and-scope/topic", "trainings/material/soup/c/010-introduction/group", "trainings/material/soup/c/020-types-operators-expressions/010-introduction/topic", "trainings/material/soup/c/020-types-operators-expressions/020-variable-names/topic", "trainings/material/soup/c/020-types-operators-expressions/030-data-types-and-sizes/topic", "trainings/material/soup/c/020-types-operators-expressions/040-constants/topic", "trainings/material/soup/c/020-types-operators-expressions/050-declarations/topic", "trainings/material/soup/c/020-types-operators-expressions/060-arithmetic-operators/topic", "trainings/material/soup/c/020-types-operators-expressions/070-relational-and-logical-operators/topic", "trainings/material/soup/c/020-types-operators-expressions/080-type-conversions/topic", "trainings/material/soup/c/020-types-operators-expressions/090-increment-and-decrement-operators/topic", "trainings/material/soup/c/020-types-operators-expressions/100-exercise-string-reduce/topic", "trainings/material/soup/c/020-types-operators-expressions/110-bitwise-operators/topic", "trainings/material/soup/c/020-types-operators-expressions/120-assignment-operators-and-expressions/topic", "trainings/material/soup/c/020-types-operators-expressions/130-conditional-expressions/topic", "trainings/material/soup/c/020-types-operators-expressions/140-precedence-and-order-of-evaluation/topic", "trainings/material/soup/c/020-types-operators-expressions/group", "trainings/material/soup/c/030-program-flow/010-statements-and-blocks/topic", "trainings/material/soup/c/030-program-flow/020-if-else/topic", "trainings/material/soup/c/030-program-flow/030-else-if/topic", "trainings/material/soup/c/030-program-flow/040-switch/topic", "trainings/material/soup/c/030-program-flow/050-loops-while-and-for/topic", "trainings/material/soup/c/030-program-flow/060-loops-do-while/topic", "trainings/material/soup/c/030-program-flow/070-break-and-continue/topic", "trainings/material/soup/c/030-program-flow/080-goto-and-labels/topic", "trainings/material/soup/c/030-program-flow/group", "trainings/material/soup/c/040-functions-and-program-structure/010-basics-of-functions/topic", "trainings/material/soup/c/040-functions-and-program-structure/020-external-variables/topic", "trainings/material/soup/c/040-functions-and-program-structure/030-header-files/topic", "trainings/material/soup/c/040-functions-and-program-structure/040-static-variables/topic", "trainings/material/soup/c/040-functions-and-program-structure/050-c-preprocessor/topic", "trainings/material/soup/c/040-functions-and-program-structure/060-c-preprocessor-advanced/topic", "trainings/material/soup/c/040-functions-and-program-structure/group", "trainings/material/soup/c/050-pointers-and-arrays/010-pointers-and-addresses/topic", "trainings/material/soup/c/050-pointers-and-arrays/020-pointers-and-function-arguments/topic", "trainings/material/soup/c/050-pointers-and-arrays/030-exercise-swap/topic", "trainings/material/soup/c/050-pointers-and-arrays/040-pointers-and-arrays/topic", "trainings/material/soup/c/050-pointers-and-arrays/050-command-line-arguments/topic", "trainings/material/soup/c/050-pointers-and-arrays/group", "trainings/material/soup/c/060-structures/010-basics-of-structures/topic", "trainings/material/soup/c/060-structures/020-structures-and-functions/topic", "trainings/material/soup/c/060-structures/030-typedef/topic", "trainings/material/soup/c/060-structures/group", "trainings/material/soup/c/070-memory/010-malloc/topic", "trainings/material/soup/c/070-memory/020-exercise-linked-list/topic", "trainings/material/soup/c/070-memory/group", "trainings/material/soup/c/080-advanced-language-features/010-volatile/topic", "trainings/material/soup/c/080-advanced-language-features/020-atomic/topic", "trainings/material/soup/c/080-advanced-language-features/030-alignment/topic", "trainings/material/soup/c/080-advanced-language-features/group", "trainings/material/soup/c/090-program-sanity/010-introduction/topic", "trainings/material/soup/c/090-program-sanity/020-integral-types/topic", "trainings/material/soup/c/090-program-sanity/030-discrete-values/topic", "trainings/material/soup/c/090-program-sanity/040-static/topic", "trainings/material/soup/c/090-program-sanity/050-const/topic", "trainings/material/soup/c/090-program-sanity/060-struct-initialization/topic", "trainings/material/soup/c/090-program-sanity/070-explicit-type-safety/topic", "trainings/material/soup/c/090-program-sanity/080-valgrind/topic", "trainings/material/soup/c/090-program-sanity/group", "trainings/material/soup/c/100-performance/010-introduction/topic", "trainings/material/soup/c/100-performance/020-computebound/topic", "trainings/material/soup/c/100-performance/030-memory/topic", "trainings/material/soup/c/100-performance/group", "trainings/material/soup/c/110-profiling/010-introduction/topic", "trainings/material/soup/c/110-profiling/020-gprof/topic", "trainings/material/soup/c/110-profiling/030-callgrind/topic", "trainings/material/soup/c/110-profiling/040-oprofile/topic", "trainings/material/soup/c/110-profiling/group", "trainings/material/soup/c/group", "trainings/material/soup/clean-code/book-messages", "trainings/material/soup/clean-code/craft-sw", "trainings/material/soup/clean-code/group", "trainings/material/soup/clean-code/intro-python/livehacking", "trainings/material/soup/cmake/advanced/code-generators/screenplay", "trainings/material/soup/cmake/advanced/conditional-code-approach-1/topic", "trainings/material/soup/cmake/advanced/conditional-code-approach-2/topic", "trainings/material/soup/cmake/advanced/conditional-code-problem/topic", "trainings/material/soup/cmake/advanced/configure-file/topic", "trainings/material/soup/cmake/advanced/external-dependencies/screenplay-mosquitto", "trainings/material/soup/cmake/advanced/external-dependencies/screenplay-sqlite3", "trainings/material/soup/cmake/advanced/external-dependencies/screenplay-sqlite3-optional-configured-file", "trainings/material/soup/cmake/advanced/external-dependencies/screenplay-sqlite3-optional-graph", "trainings/material/soup/cmake/advanced/external-dependencies/topic", "trainings/material/soup/cmake/advanced/group", "trainings/material/soup/cmake/advanced/language/basics/topic", "trainings/material/soup/cmake/advanced/language/datatypes/topic", "trainings/material/soup/cmake/advanced/language/file-etc/topic", "trainings/material/soup/cmake/advanced/language/foreach/topic", "trainings/material/soup/cmake/advanced/language/functions-and-macros/topic", "trainings/material/soup/cmake/advanced/language/group", "trainings/material/soup/cmake/advanced/language/if-and-conditions/topic", "trainings/material/soup/cmake/advanced/language/scripts/topic", "trainings/material/soup/cmake/advanced/language/variables/topic", "trainings/material/soup/cmake/advanced/language/while/topic", "trainings/material/soup/cmake/advanced/library-function/screenplay", "trainings/material/soup/cmake/advanced/targets-properties/global-incdir", "trainings/material/soup/cmake/advanced/targets-properties/screenplay", "trainings/material/soup/cmake/advanced/targets-properties/topic", "trainings/material/soup/cmake/advanced/testing/topic", "trainings/material/soup/cmake/group", "trainings/material/soup/cmake/intro/basics", "trainings/material/soup/cmake/intro/cxx-and-rants", "trainings/material/soup/cmake/intro/group", "trainings/material/soup/cmake/intro/installation", "trainings/material/soup/cmake/intro/libraries", "trainings/material/soup/cmake/intro/shared-libraries", "trainings/material/soup/cmake/intro/structure", "trainings/material/soup/cxx-code/index", "trainings/material/soup/cxx-design-patterns/abstract-factory/abstract-factory", "trainings/material/soup/cxx-design-patterns/adapter/adapter", "trainings/material/soup/cxx-design-patterns/command/command", "trainings/material/soup/cxx-design-patterns/command/socialdb", "trainings/material/soup/cxx-design-patterns/composite/composite", "trainings/material/soup/cxx-design-patterns/decorator/decorator", "trainings/material/soup/cxx-design-patterns/group", "trainings/material/soup/cxx-design-patterns/heating-screenplay/heating-screenplay", "trainings/material/soup/cxx-design-patterns/interpreter/interpreter", "trainings/material/soup/cxx-design-patterns/observer/observer", "trainings/material/soup/cxx-design-patterns/oo-principles", "trainings/material/soup/cxx-design-patterns/proxy/proxy", "trainings/material/soup/cxx-design-patterns/sensor-hierarchy", "trainings/material/soup/cxx-design-patterns/singleton/singleton", "trainings/material/soup/cxx-design-patterns/uml/uml", "trainings/material/soup/cxx-exercises/design-patterns/abstract-factory", "trainings/material/soup/cxx-exercises/design-patterns/adapter", "trainings/material/soup/cxx-exercises/design-patterns/command", "trainings/material/soup/cxx-exercises/design-patterns/composite", "trainings/material/soup/cxx-exercises/design-patterns/decorator", "trainings/material/soup/cxx-exercises/design-patterns/group", "trainings/material/soup/cxx-exercises/design-patterns/interpreter-and-adapter", "trainings/material/soup/cxx-exercises/design-patterns/interpreter-basic", "trainings/material/soup/cxx-exercises/design-patterns/observer", "trainings/material/soup/cxx-exercises/design-patterns/proxy-remote", "trainings/material/soup/cxx-exercises/design-patterns/proxy-round", "trainings/material/soup/cxx-exercises/design-patterns/singleton-flexible", "trainings/material/soup/cxx-exercises/design-patterns/singleton-flexible-strict", "trainings/material/soup/cxx-exercises/design-patterns/singleton-inflexible", "trainings/material/soup/cxx-exercises/design-patterns/solutions/abstract-factory", "trainings/material/soup/cxx-exercises/design-patterns/solutions/adapter", "trainings/material/soup/cxx-exercises/design-patterns/solutions/command", "trainings/material/soup/cxx-exercises/design-patterns/solutions/composite", "trainings/material/soup/cxx-exercises/design-patterns/solutions/decorator", "trainings/material/soup/cxx-exercises/design-patterns/solutions/group", "trainings/material/soup/cxx-exercises/design-patterns/solutions/interpreter-and-adapter", "trainings/material/soup/cxx-exercises/design-patterns/solutions/interpreter-basic", "trainings/material/soup/cxx-exercises/design-patterns/solutions/observer", "trainings/material/soup/cxx-exercises/design-patterns/solutions/proxy-remote", "trainings/material/soup/cxx-exercises/design-patterns/solutions/proxy-round", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-flexible", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-flexible-strict", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-inflexible", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-loop-function", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-no-polymorphism", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-random-sensor", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/group", "trainings/material/soup/cxx-exercises/group", "trainings/material/soup/cxx-exercises/nopoly-display-led-stripe/display-led-stripe-nopoly", "trainings/material/soup/cxx-exercises/nopoly-hysteresis/hysteresis-nopoly", "trainings/material/soup/cxx-exercises/nopoly-sensor-avg/sensor-avg-nopoly", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-const-nopoly", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-mock-nopoly", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-random-nopoly", "trainings/material/soup/cxx-exercises/nopoly-switch-mock/switch-mock-nopoly", "trainings/material/soup/cxx-exercises/oo-shapes/shapes", "trainings/material/soup/cxx-exercises/project-setup", "trainings/material/soup/cxx-exercises/sensor-interface/sensor-interface", "trainings/material/soup/cxx-exercises/sensor-w1-factory/sensor-w1-factory", "trainings/material/soup/cxx-exercises/sensor-w1/sensor-w1", "trainings/material/soup/cxx-exercises/stl/algo", "trainings/material/soup/cxx-exercises/stl/filter-generic", "trainings/material/soup/cxx-exercises/stl/filter-greater-10", "trainings/material/soup/cxx-exercises/stl/filter-odd", "trainings/material/soup/cxx-exercises/stl/group", "trainings/material/soup/cxx-exercises/stl/map", "trainings/material/soup/cxx-exercises/stl/sensor-repository/group", "trainings/material/soup/cxx-exercises/stl/sensor-repository/insert-no-overwrite", "trainings/material/soup/cxx-exercises/stl/sensor-repository/insert-sunny", "trainings/material/soup/cxx-exercises/stl/sensor-repository/lookup-not-found", "trainings/material/soup/cxx-exercises/stl/sensor-repository/lookup-sunny", "trainings/material/soup/cxx-exercises/stl/sensor-repository/no-memleak", "trainings/material/soup/cxx-exercises/stl/sensor-repository/remove-not-found", "trainings/material/soup/cxx-exercises/stl/sensor-repository/remove-sunny", "trainings/material/soup/cxx-exercises/stl/sensor-repository/size-const", "trainings/material/soup/cxx-exercises/stl/uniq", "trainings/material/soup/cxx-exercises/stl/vector", "trainings/material/soup/cxx-todo/index", "trainings/material/soup/cxx/cxx_class_templates/code/index", "trainings/material/soup/cxx/cxx_class_templates/screenplay", "trainings/material/soup/cxx/cxx_class_templates/topic", "trainings/material/soup/cxx/cxx_dynamic_memory/code/index", "trainings/material/soup/cxx/cxx_dynamic_memory/screenplay", "trainings/material/soup/cxx/cxx_dynamic_memory/topic", "trainings/material/soup/cxx/cxx_global_initialization/code/index", "trainings/material/soup/cxx/cxx_global_initialization/screenplay", "trainings/material/soup/cxx/cxx_global_initialization/topic", "trainings/material/soup/cxx/cxx_inheritance_virtual/code/index", "trainings/material/soup/cxx/cxx_inheritance_virtual/screenplay", "trainings/material/soup/cxx/cxx_inheritance_virtual/topic", "trainings/material/soup/cxx/cxx_ownership_raii/code/index", "trainings/material/soup/cxx/cxx_ownership_raii/screenplay", "trainings/material/soup/cxx/cxx_ownership_raii/topic", "trainings/material/soup/cxx/cxx_stl_container_intro/code/index", "trainings/material/soup/cxx/cxx_stl_container_intro/screenplay", "trainings/material/soup/cxx/cxx_stl_container_intro/topic", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/code/index", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/screenplay", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/topic", "trainings/material/soup/cxx/group", "trainings/material/soup/cxx03/001-introduction/topic", "trainings/material/soup/cxx03/020-data-encapsulation/c", "trainings/material/soup/cxx03/020-data-encapsulation/copy-basics", "trainings/material/soup/cxx03/020-data-encapsulation/cpp-introduction", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-custom", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-default", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-dtor", "trainings/material/soup/cxx03/020-data-encapsulation/group", "trainings/material/soup/cxx03/020-data-encapsulation/initializer-list", "trainings/material/soup/cxx03/020-data-encapsulation/object-copy", "trainings/material/soup/cxx03/030-functions-and-methods/010-overloading/topic", "trainings/material/soup/cxx03/030-functions-and-methods/020-methods/topic", "trainings/material/soup/cxx03/030-functions-and-methods/030-const/topic", "trainings/material/soup/cxx03/030-functions-and-methods/040-this/topic", "trainings/material/soup/cxx03/030-functions-and-methods/050-references/topic", "trainings/material/soup/cxx03/030-functions-and-methods/060-static/topic", "trainings/material/soup/cxx03/030-functions-and-methods/065-static-member-variables/topic", "trainings/material/soup/cxx03/030-functions-and-methods/070-operators/topic", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-cuboid", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-point", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-point3d", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-rectangle", "trainings/material/soup/cxx03/030-functions-and-methods/group", "trainings/material/soup/cxx03/040-exceptions/010-basics/topic", "trainings/material/soup/cxx03/040-exceptions/020-try-catch/topic", "trainings/material/soup/cxx03/040-exceptions/group", "trainings/material/soup/cxx03/050-templates/010-function-templates/topic", "trainings/material/soup/cxx03/050-templates/020-class-templates/topic", "trainings/material/soup/cxx03/050-templates/group", "trainings/material/soup/cxx03/060-stl/010-basics/algo-copy", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-algo", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-basics", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-difference", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-out-of-range", "trainings/material/soup/cxx03/060-stl/010-basics/topic", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/topic", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-and-copy", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-basic", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-pointer-arith", "trainings/material/soup/cxx03/060-stl/020-algorithm/binary_search", "trainings/material/soup/cxx03/060-stl/020-algorithm/copy", "trainings/material/soup/cxx03/060-stl/020-algorithm/find", "trainings/material/soup/cxx03/060-stl/020-algorithm/find_if", "trainings/material/soup/cxx03/060-stl/020-algorithm/for_each", "trainings/material/soup/cxx03/060-stl/020-algorithm/group", "trainings/material/soup/cxx03/060-stl/020-algorithm/lower_bound", "trainings/material/soup/cxx03/060-stl/020-algorithm/reverse", "trainings/material/soup/cxx03/060-stl/020-algorithm/reverse_copy", "trainings/material/soup/cxx03/060-stl/020-algorithm/sort", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/basics", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/group", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/list", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/vector", "trainings/material/soup/cxx03/060-stl/050-associative-containers/basics", "trainings/material/soup/cxx03/060-stl/050-associative-containers/group", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-init-fill", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-insert", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-remove", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-search", "trainings/material/soup/cxx03/060-stl/050-associative-containers/multimap", "trainings/material/soup/cxx03/060-stl/allocators/allocator_basics", "trainings/material/soup/cxx03/060-stl/allocators/group", "trainings/material/soup/cxx03/060-stl/exercises/group", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/exercise", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/group", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/solution", "trainings/material/soup/cxx03/060-stl/group", "trainings/material/soup/cxx03/070-dynamic-memory/000-todo/topic", "trainings/material/soup/cxx03/070-dynamic-memory/group", "trainings/material/soup/cxx03/100-inheritance-oo-design/basics", "trainings/material/soup/cxx03/100-inheritance-oo-design/destructor", "trainings/material/soup/cxx03/100-inheritance-oo-design/group", "trainings/material/soup/cxx03/100-inheritance-oo-design/interface", "trainings/material/soup/cxx03/100-inheritance-oo-design/polymorphism", "trainings/material/soup/cxx03/100-inheritance-oo-design/private-protected", "trainings/material/soup/cxx03/100-inheritance-oo-design/virtual-destructor", "trainings/material/soup/cxx03/100-inheritance-oo-design/virtual-method", "trainings/material/soup/cxx03/900-standard-library-miscellanea/group", "trainings/material/soup/cxx03/900-standard-library-miscellanea/string/topic", "trainings/material/soup/cxx03/exercises-misc/american-flag/exercise", "trainings/material/soup/cxx03/exercises-misc/fh-questions", "trainings/material/soup/cxx03/exercises-misc/group", "trainings/material/soup/cxx03/exercises-misc/passwd-parser/exercise", "trainings/material/soup/cxx03/exercises-misc/sum-integers-from-stdin/exercise", "trainings/material/soup/cxx03/exercises-userdb/group", "trainings/material/soup/cxx03/exercises-userdb/user-access-methods/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-const-members/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-const/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-default-ctor/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-simple-method/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-to-cxx-ctor/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-insert/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-search-find_if/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-search-notfound-exception/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-search/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-vector/exercise", "trainings/material/soup/cxx03/group", "trainings/material/soup/cxx11/010-introduction/group", "trainings/material/soup/cxx11/010-introduction/history", "trainings/material/soup/cxx11/010-introduction/overview-livehacking", "trainings/material/soup/cxx11/020-new-language-features/010-strongly-typed-enums/topic", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/group", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/implementor-view", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/intro", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/mess", "trainings/material/soup/cxx11/020-new-language-features/050-delegating-ctor/topic", "trainings/material/soup/cxx11/020-new-language-features/055-constexpr/topic", "trainings/material/soup/cxx11/020-new-language-features/060-move/afterword", "trainings/material/soup/cxx11/020-new-language-features/060-move/group", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-smartptr-move", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-string-move", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-using-string-move", "trainings/material/soup/cxx11/020-new-language-features/060-move/overview", "trainings/material/soup/cxx11/020-new-language-features/070-miscellaneous/topic", "trainings/material/soup/cxx11/020-new-language-features/auto", "trainings/material/soup/cxx11/020-new-language-features/concepts/group", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-1-conceptless", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-2-conceptless-error", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-3-concept-integral", "trainings/material/soup/cxx11/020-new-language-features/concepts/links", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-1-good-old-func", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-2-need-template", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-4-concept-has-size", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-5-concept-index-ret-double", "trainings/material/soup/cxx11/020-new-language-features/coroutines/group", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/fibo-generator", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/fibonacci", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/generator-h", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/generator-hello", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/simplest", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend-iter", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend-next", "trainings/material/soup/cxx11/020-new-language-features/default", "trainings/material/soup/cxx11/020-new-language-features/delete", "trainings/material/soup/cxx11/020-new-language-features/final", "trainings/material/soup/cxx11/020-new-language-features/group", "trainings/material/soup/cxx11/020-new-language-features/lambda/group", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-capture", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-is-functor", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-is-functor-pitfall", "trainings/material/soup/cxx11/020-new-language-features/modules", "trainings/material/soup/cxx11/020-new-language-features/override", "trainings/material/soup/cxx11/020-new-language-features/range-based-for", "trainings/material/soup/cxx11/020-new-language-features/range-based-for-map", "trainings/material/soup/cxx11/020-new-language-features/ranges/good-bad", "trainings/material/soup/cxx11/020-new-language-features/ranges/group", "trainings/material/soup/cxx11/020-new-language-features/ranges/intro", "trainings/material/soup/cxx11/020-new-language-features/ranges/links", "trainings/material/soup/cxx11/020-new-language-features/structured-binding", "trainings/material/soup/cxx11/030-smart-pointers/040-closing-words/topic", "trainings/material/soup/cxx11/030-smart-pointers/group", "trainings/material/soup/cxx11/030-smart-pointers/introduction", "trainings/material/soup/cxx11/030-smart-pointers/introduction-livehack", "trainings/material/soup/cxx11/030-smart-pointers/sharedptr", "trainings/material/soup/cxx11/030-smart-pointers/uniqueptr", "trainings/material/soup/cxx11/030-smart-pointers/weakptr", "trainings/material/soup/cxx11/035-perfect-forwarding/topic", "trainings/material/soup/cxx11/040-bind-function/010-bind/topic", "trainings/material/soup/cxx11/040-bind-function/020-function/topic", "trainings/material/soup/cxx11/040-bind-function/group", "trainings/material/soup/cxx11/050-multithreading/010-introduction/topic", "trainings/material/soup/cxx11/050-multithreading/020-thread/topic", "trainings/material/soup/cxx11/050-multithreading/030-race-conditions/topic", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/atomics", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/mutex", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/scoped-locking", "trainings/material/soup/cxx11/050-multithreading/condition-variable", "trainings/material/soup/cxx11/050-multithreading/group", "trainings/material/soup/cxx11/050-multithreading/promise-future", "trainings/material/soup/cxx11/100-miscellaneous/010-chrono/topic", "trainings/material/soup/cxx11/100-miscellaneous/any-variant-optional/any", "trainings/material/soup/cxx11/100-miscellaneous/any-variant-optional/variant", "trainings/material/soup/cxx11/100-miscellaneous/group", "trainings/material/soup/cxx11/drafts/crtp", "trainings/material/soup/cxx11/drafts/embedded-problems/allocator", "trainings/material/soup/cxx11/drafts/embedded-problems/classic-virtual", "trainings/material/soup/cxx11/drafts/embedded-problems/group", "trainings/material/soup/cxx11/drafts/embedded-problems/related-no-virtual", "trainings/material/soup/cxx11/drafts/embedded-problems/type-erasure", "trainings/material/soup/cxx11/drafts/embedded-problems/unrelated", "trainings/material/soup/cxx11/drafts/embedded-problems/variant-automatic-visit", "trainings/material/soup/cxx11/drafts/embedded-problems/variant-manual-if", "trainings/material/soup/cxx11/drafts/embedded-problems/variant-manual-visit", "trainings/material/soup/cxx11/drafts/embedded-problems/why-replace-virtual", "trainings/material/soup/cxx11/drafts/group", "trainings/material/soup/cxx11/exercises/bag-copy", "trainings/material/soup/cxx11/exercises/bag-shared", "trainings/material/soup/cxx11/exercises/bag-unique", "trainings/material/soup/cxx11/exercises/group", "trainings/material/soup/cxx11/filesystem/topic", "trainings/material/soup/cxx11/group", "trainings/material/soup/graph", "trainings/material/soup/index", "trainings/material/soup/kernel/cdev-auto/screenplay", "trainings/material/soup/kernel/cdev-auto/slides", "trainings/material/soup/kernel/cdev-auto/topic", "trainings/material/soup/kernel/cdev-file-operations/screenplay", "trainings/material/soup/kernel/cdev-file-operations/slides", "trainings/material/soup/kernel/cdev-file-operations/topic", "trainings/material/soup/kernel/cdev-first-functionality/slides", "trainings/material/soup/kernel/cdev-first-functionality/topic", "trainings/material/soup/kernel/cdev-manual/screenplay", "trainings/material/soup/kernel/cdev-manual/slides", "trainings/material/soup/kernel/cdev-manual/topic", "trainings/material/soup/kernel/cdev-multiple-devices/slides", "trainings/material/soup/kernel/cdev-multiple-devices/topic", "trainings/material/soup/kernel/cdev-refactoring/screenplay", "trainings/material/soup/kernel/cdev-refactoring/slides", "trainings/material/soup/kernel/cdev-refactoring/topic", "trainings/material/soup/kernel/dma/slides", "trainings/material/soup/kernel/dma/topic", "trainings/material/soup/kernel/fedora-kernel-build/screenplay", "trainings/material/soup/kernel/fedora-kernel-build/topic", "trainings/material/soup/kernel/fedora-module-build/screenplay", "trainings/material/soup/kernel/fedora-module-build/topic", "trainings/material/soup/kernel/group", "trainings/material/soup/kernel/hello-world/slides", "trainings/material/soup/kernel/hello-world/topic", "trainings/material/soup/kernel/interrupt-coding/slides", "trainings/material/soup/kernel/interrupt-coding/topic", "trainings/material/soup/kernel/interrupt/slides", "trainings/material/soup/kernel/interrupt/topic", "trainings/material/soup/kernel/iomemory/slides", "trainings/material/soup/kernel/iomemory/topic", "trainings/material/soup/kernel/kmalloc/slides", "trainings/material/soup/kernel/kmalloc/topic", "trainings/material/soup/kernel/list/slides", "trainings/material/soup/kernel/list/topic", "trainings/material/soup/kernel/mutex-coding/slides", "trainings/material/soup/kernel/mutex-coding/topic", "trainings/material/soup/kernel/mutex/slides", "trainings/material/soup/kernel/mutex/topic", "trainings/material/soup/kernel/netdev/slides", "trainings/material/soup/kernel/netdev/topic", "trainings/material/soup/kernel/pci/slides", "trainings/material/soup/kernel/pci/topic", "trainings/material/soup/kernel/process-vs-atomic/slides", "trainings/material/soup/kernel/process-vs-atomic/topic", "trainings/material/soup/kernel/raspi-kernel-build/story", "trainings/material/soup/kernel/raspi-kernel-build/topic", "trainings/material/soup/kernel/sample-project", "trainings/material/soup/kernel/spinlock-coding/slides", "trainings/material/soup/kernel/spinlock-coding/topic", "trainings/material/soup/kernel/spinlock/slides", "trainings/material/soup/kernel/spinlock/topic", "trainings/material/soup/kernel/stub-sysprog-dup/topic", "trainings/material/soup/kernel/time_timer-coding/slides", "trainings/material/soup/kernel/time_timer-coding/topic", "trainings/material/soup/kernel/time_timer/slides", "trainings/material/soup/kernel/time_timer/topic", "trainings/material/soup/kernel/todo", "trainings/material/soup/kernel/usermem/screenplay", "trainings/material/soup/kernel/usermem/slides", "trainings/material/soup/kernel/usermem/topic", "trainings/material/soup/kernel/waitqueue/screenplay", "trainings/material/soup/kernel/waitqueue/slides", "trainings/material/soup/kernel/waitqueue/topic", "trainings/material/soup/kernel/workqueue/screenplay", "trainings/material/soup/kernel/workqueue/slides", "trainings/material/soup/kernel/workqueue/topic", "trainings/material/soup/linux/basics/archiving-compression/exercises", "trainings/material/soup/linux/basics/archiving-compression/group", "trainings/material/soup/linux/basics/archiving-compression/gzip", "trainings/material/soup/linux/basics/archiving-compression/overview", "trainings/material/soup/linux/basics/archiving-compression/tar", "trainings/material/soup/linux/basics/exercises/FH-SS2022-EXAM-01-G1", "trainings/material/soup/linux/basics/exercises/FH-SS2022-EXAM-01-G2", "trainings/material/soup/linux/basics/exercises/group", "trainings/material/soup/linux/basics/group", "trainings/material/soup/linux/basics/intro/demo-everything-is-a-file", "trainings/material/soup/linux/basics/intro/environment", "trainings/material/soup/linux/basics/intro/exercises/fh-questions", "trainings/material/soup/linux/basics/intro/exercises/fh-solutions", "trainings/material/soup/linux/basics/intro/group", "trainings/material/soup/linux/basics/intro/login", "trainings/material/soup/linux/basics/intro/overview", "trainings/material/soup/linux/basics/intro/process", "trainings/material/soup/linux/basics/intro/process-tree", "trainings/material/soup/linux/basics/intro/wsl", "trainings/material/soup/linux/basics/io-redirection-pipes/exercises", "trainings/material/soup/linux/basics/io-redirection-pipes/group", "trainings/material/soup/linux/basics/io-redirection-pipes/io-redirection", "trainings/material/soup/linux/basics/io-redirection-pipes/io-redirection-swap-stdout-stderr", "trainings/material/soup/linux/basics/io-redirection-pipes/pipes", "trainings/material/soup/linux/basics/permissions/basics", "trainings/material/soup/linux/basics/permissions/exercises/credentials", "trainings/material/soup/linux/basics/permissions/exercises/fh-questions", "trainings/material/soup/linux/basics/permissions/exercises/fh-questions-nocheat", "trainings/material/soup/linux/basics/permissions/exercises/group", "trainings/material/soup/linux/basics/permissions/exercises/private-directory", "trainings/material/soup/linux/basics/permissions/exercises/private-directory-question", "trainings/material/soup/linux/basics/permissions/exercises/public-directory", "trainings/material/soup/linux/basics/permissions/exercises/public-directory-question", "trainings/material/soup/linux/basics/permissions/exercises/shared-file", "trainings/material/soup/linux/basics/permissions/group", "trainings/material/soup/linux/basics/permissions/setuid", "trainings/material/soup/linux/basics/permissions/setuid-livedemo", "trainings/material/soup/linux/basics/permissions/sticky", "trainings/material/soup/linux/basics/permissions/umask", "trainings/material/soup/linux/basics/shell/commandline", "trainings/material/soup/linux/basics/shell/configfiles", "trainings/material/soup/linux/basics/shell/cp", "trainings/material/soup/linux/basics/shell/cwd", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/copy-tree", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-copy-files", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-create-files", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-move-files", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/group", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/mkdir-p-rm-r", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/rm-rf", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/rm-tree", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/verify-hierarchy", "trainings/material/soup/linux/basics/shell/exercises/fh-questions", "trainings/material/soup/linux/basics/shell/exercises/group", "trainings/material/soup/linux/basics/shell/exercises/ls/dev-types", "trainings/material/soup/linux/basics/shell/exercises/ls/etc-passwd-size", "trainings/material/soup/linux/basics/shell/exercises/ls/group", "trainings/material/soup/linux/basics/shell/exercises/ls/home-permissions", "trainings/material/soup/linux/basics/shell/file_dir_create_rm", "trainings/material/soup/linux/basics/shell/group", "trainings/material/soup/linux/basics/shell/links", "trainings/material/soup/linux/basics/shell/ls", "trainings/material/soup/linux/basics/shell/mv", "trainings/material/soup/linux/basics/shell/paths", "trainings/material/soup/linux/basics/text-tools/cat", "trainings/material/soup/linux/basics/text-tools/cut", "trainings/material/soup/linux/basics/text-tools/exercises", "trainings/material/soup/linux/basics/text-tools/find", "trainings/material/soup/linux/basics/text-tools/grep", "trainings/material/soup/linux/basics/text-tools/group", "trainings/material/soup/linux/basics/text-tools/head-tail", "trainings/material/soup/linux/basics/text-tools/less", "trainings/material/soup/linux/basics/text-tools/overview", "trainings/material/soup/linux/drafts/group", "trainings/material/soup/linux/drafts/yocto", "trainings/material/soup/linux/group", "trainings/material/soup/linux/hardware/brushless-motor/topic", "trainings/material/soup/linux/hardware/can/10-intro", "trainings/material/soup/linux/hardware/can/20-interfaces", "trainings/material/soup/linux/hardware/can/30-programming", "trainings/material/soup/linux/hardware/can/40-harware", "trainings/material/soup/linux/hardware/can/group", "trainings/material/soup/linux/hardware/group", "trainings/material/soup/linux/hardware/i2c/topic", "trainings/material/soup/linux/hardware/pwm/topic", "trainings/material/soup/linux/hardware/w1/topic", "trainings/material/soup/linux/ssh/basics", "trainings/material/soup/linux/ssh/exercises/copy-file", "trainings/material/soup/linux/ssh/exercises/copy-tree", "trainings/material/soup/linux/ssh/exercises/group", "trainings/material/soup/linux/ssh/exercises/pubkey", "trainings/material/soup/linux/ssh/group", "trainings/material/soup/linux/ssh/key-pair", "trainings/material/soup/linux/ssh/links", "trainings/material/soup/linux/ssh/portforwarding", "trainings/material/soup/linux/ssh/scp", "trainings/material/soup/linux/ssh/sshfs", "trainings/material/soup/linux/sysprog/basics/errorhandling", "trainings/material/soup/linux/sysprog/basics/group", "trainings/material/soup/linux/sysprog/basics/syscalls", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-file", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-network", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-timer", "trainings/material/soup/linux/sysprog/blocking-io/group", "trainings/material/soup/linux/sysprog/file-io/basics", "trainings/material/soup/linux/sysprog/file-io/basics-exercise-copy/exercise", "trainings/material/soup/linux/sysprog/file-io/basics-exercise-hole", "trainings/material/soup/linux/sysprog/file-io/duplicate", "trainings/material/soup/linux/sysprog/file-io/example-O_CREAT", "trainings/material/soup/linux/sysprog/file-io/example-O_EXCL", "trainings/material/soup/linux/sysprog/file-io/example-O_RDONLY", "trainings/material/soup/linux/sysprog/file-io/example-O_WRONLY", "trainings/material/soup/linux/sysprog/file-io/exercise-sensor-read", "trainings/material/soup/linux/sysprog/file-io/group", "trainings/material/soup/linux/sysprog/file-io/misc", "trainings/material/soup/linux/sysprog/group", "trainings/material/soup/linux/sysprog/intro-hw/get", "trainings/material/soup/linux/sysprog/intro-hw/group", "trainings/material/soup/linux/sysprog/intro-hw/sysfs-gpio", "trainings/material/soup/linux/sysprog/intro-hw/watch", "trainings/material/soup/linux/sysprog/posix-threads/010-introduction/topic", "trainings/material/soup/linux/sysprog/posix-threads/020-lifecycle/topic", "trainings/material/soup/linux/sysprog/posix-threads/030-exercise-pthcreate-race-condition/topic", "trainings/material/soup/linux/sysprog/posix-threads/040-mutex/topic", "trainings/material/soup/linux/sysprog/posix-threads/050-exercise-mutex/topic", "trainings/material/soup/linux/sysprog/posix-threads/060-condition-variable/topic", "trainings/material/soup/linux/sysprog/posix-threads/070-exercise-condition-variable/topic", "trainings/material/soup/linux/sysprog/posix-threads/080-miscellaneous/topic", "trainings/material/soup/linux/sysprog/posix-threads/090-last-warning/topic", "trainings/material/soup/linux/sysprog/posix-threads/group", "trainings/material/soup/linux/sysprog/posix-threads/locked-trylock", "trainings/material/soup/linux/sysprog/process/commandline", "trainings/material/soup/linux/sysprog/process/group", "trainings/material/soup/linux/sysprog/process/tree", "trainings/material/soup/linux/sysprog/scheduling/basics", "trainings/material/soup/linux/sysprog/scheduling/group", "trainings/material/soup/linux/sysprog/scheduling/processes-and-threads", "trainings/material/soup/linux/sysprog/scheduling/questions", "trainings/material/soup/linux/sysprog/scheduling/realtime", "trainings/material/soup/linux/sysprog/scheduling/realtime-api", "trainings/material/soup/linux/sysprog/scheduling/wakup-latency", "trainings/material/soup/linux/sysprog/sysprog_events/code/index", "trainings/material/soup/linux/sysprog/sysprog_events/screenplay", "trainings/material/soup/linux/sysprog/sysprog_events/topic", "trainings/material/soup/linux/sysprog/sysprog_ipc/code/index", "trainings/material/soup/linux/sysprog/sysprog_ipc/screenplay", "trainings/material/soup/linux/sysprog/sysprog_ipc/slides", "trainings/material/soup/linux/sysprog/sysprog_ipc/topic", "trainings/material/soup/linux/sysprog/sysprog_signals/code/index", "trainings/material/soup/linux/sysprog/sysprog_signals/screenplay", "trainings/material/soup/linux/sysprog/sysprog_signals/slides", "trainings/material/soup/linux/sysprog/sysprog_signals/topic", "trainings/material/soup/linux/toolchain/basics/topic", "trainings/material/soup/linux/toolchain/cmake/cross", "trainings/material/soup/linux/toolchain/cmake/local", "trainings/material/soup/linux/toolchain/cross/basics", "trainings/material/soup/linux/toolchain/cross/group", "trainings/material/soup/linux/toolchain/exercises/cross-build", "trainings/material/soup/linux/toolchain/exercises/fh-questions", "trainings/material/soup/linux/toolchain/exercises/fh-solutions", "trainings/material/soup/linux/toolchain/exercises/group", "trainings/material/soup/linux/toolchain/exercises/native-build", "trainings/material/soup/linux/toolchain/exercises/raspberry-toolchain", "trainings/material/soup/linux/toolchain/group", "trainings/material/soup/linux/toolchain/raspberry-pi/group", "trainings/material/soup/linux/toolchain/raspberry-pi/linaro", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-build-details", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-build-docker-fedora", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-setup", "trainings/material/soup/linux/toolchain/separate-compilation/topic", "trainings/material/soup/linux/toolchain/shared-libraries/topic", "trainings/material/soup/linux/toolchain/static-library/topic", "trainings/material/soup/python/advanced/closures/topic", "trainings/material/soup/python/advanced/comprehensions/topic", "trainings/material/soup/python/advanced/context-mgr/topic", "trainings/material/soup/python/advanced/decorators/topic", "trainings/material/soup/python/advanced/exceptions/topic", "trainings/material/soup/python/advanced/exec/topic", "trainings/material/soup/python/advanced/group", "trainings/material/soup/python/advanced/iteration-generation/iteration-generation/topic", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/fibonacci-generator", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/iterator-protocol", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/topic", "trainings/material/soup/python/advanced/iteration-generation/topic", "trainings/material/soup/python/advanced/modules", "trainings/material/soup/python/advanced/multithreading/basics", "trainings/material/soup/python/advanced/multithreading/group", "trainings/material/soup/python/advanced/multithreading/mutex", "trainings/material/soup/python/advanced/multithreading/questions", "trainings/material/soup/python/advanced/oo/abc/topic", "trainings/material/soup/python/advanced/oo/classes-and-dicts/topic", "trainings/material/soup/python/advanced/oo/constructor/topic", "trainings/material/soup/python/advanced/oo/group", "trainings/material/soup/python/advanced/oo/inheritance/topic", "trainings/material/soup/python/advanced/oo/methods/topic", "trainings/material/soup/python/advanced/oo/namedtuple/topic", "trainings/material/soup/python/advanced/oo/operator-overloading/topic", "trainings/material/soup/python/advanced/oo/properties/topic", "trainings/material/soup/python/advanced/oo/str-repr/topic", "trainings/material/soup/python/advanced/starargs/topic", "trainings/material/soup/python/basics/group", "trainings/material/soup/python/basics/installation", "trainings/material/soup/python/basics/python_0110_blahblah/topic", "trainings/material/soup/python/basics/python_0120_helloworld/topic", "trainings/material/soup/python/basics/python_0125_running/topic", "trainings/material/soup/python/basics/python_0130_syntax_etc/topic", "trainings/material/soup/python/basics/python_0139_commandline_argv/topic", "trainings/material/soup/python/basics/python_0140_variables/topic", "trainings/material/soup/python/basics/python_0150_datatypes_overview/topic", "trainings/material/soup/python/basics/python_0150_datatypes_overview_compound/topic", "trainings/material/soup/python/basics/python_0160_boolean/topic", "trainings/material/soup/python/basics/python_0170_if/topic", "trainings/material/soup/python/basics/python_0193_while/topic", "trainings/material/soup/python/basics/python_0200_sequential_types/topic", "trainings/material/soup/python/basics/python_0210_indexing_slicing/topic", "trainings/material/soup/python/basics/python_0220_for/topic", "trainings/material/soup/python/basics/python_0225_range/topic", "trainings/material/soup/python/basics/python_0250_refs_flat_deep_copy/topic", "trainings/material/soup/python/basics/python_0270_functions/screenplay-scoping", "trainings/material/soup/python/basics/python_0270_functions/slideshow", "trainings/material/soup/python/basics/python_0270_functions/topic", "trainings/material/soup/python/basics/python_0300_strings/topic", "trainings/material/soup/python/basics/python_0310_strings_formatting/topic", "trainings/material/soup/python/basics/python_0320_strings_methods/topic", "trainings/material/soup/python/basics/python_0400_lists/topic", "trainings/material/soup/python/basics/python_0450_dictionaries/topic", "trainings/material/soup/python/basics/python_0460_sets/topic", "trainings/material/soup/python/basics/python_0500_files/topic", "trainings/material/soup/python/basics/python_1000_function_objects/topic", "trainings/material/soup/python/drafts/argparse/topic", "trainings/material/soup/python/drafts/asyncio/topic", "trainings/material/soup/python/drafts/group", "trainings/material/soup/python/drafts/matplotlib/topic", "trainings/material/soup/python/drafts/setuptools/topic", "trainings/material/soup/python/exercises/csv/csv-db", "trainings/material/soup/python/exercises/csv/csv-module", "trainings/material/soup/python/exercises/csv/group", "trainings/material/soup/python/exercises/group", "trainings/material/soup/python/exercises/herdt/boolean", "trainings/material/soup/python/exercises/herdt/exercise_while_even_numbers", "trainings/material/soup/python/exercises/herdt/greet", "trainings/material/soup/python/exercises/herdt/group", "trainings/material/soup/python/exercises/herdt/max_numbers", "trainings/material/soup/python/exercises/herdt/swap", "trainings/material/soup/python/exercises/herdt/username_password", "trainings/material/soup/python/exercises/legacy/cmdline_digit", "trainings/material/soup/python/exercises/legacy/dict_keyerror", "trainings/material/soup/python/exercises/legacy/distill", "trainings/material/soup/python/exercises/legacy/fibonacci-generator", "trainings/material/soup/python/exercises/legacy/for_primeness", "trainings/material/soup/python/exercises/legacy/group", "trainings/material/soup/python/exercises/legacy/join_function", "trainings/material/soup/python/exercises/legacy/max_numbers", "trainings/material/soup/python/exercises/legacy/max_numbers_function", "trainings/material/soup/python/exercises/legacy/mixed_list_executable", "trainings/material/soup/python/exercises/legacy/mixed_list_interactive", "trainings/material/soup/python/exercises/legacy/passwd", "trainings/material/soup/python/exercises/legacy/primeness_function", "trainings/material/soup/python/exercises/legacy/revert", "trainings/material/soup/python/exercises/legacy/string-rightjustify", "trainings/material/soup/python/exercises/legacy/uniq_function", "trainings/material/soup/python/exercises/legacy/uniq_generator", "trainings/material/soup/python/exercises/legacy/wc", "trainings/material/soup/python/exercises/legacy/while_primeness", "trainings/material/soup/python/exercises/sensors/group", "trainings/material/soup/python/exercises/sensors/project-setup", "trainings/material/soup/python/exercises/sensors/sensor-const", "trainings/material/soup/python/exercises/userdb/csvdictreader", "trainings/material/soup/python/exercises/userdb/csvdictreader-function", "trainings/material/soup/python/exercises/userdb/csvreader", "trainings/material/soup/python/exercises/userdb/csvreader-function", "trainings/material/soup/python/exercises/userdb/group", "trainings/material/soup/python/exercises/userdb/mqtt-publish-csv", "trainings/material/soup/python/exercises/userdb/user-class-person", "trainings/material/soup/python/exercises/userdb/user_json", "trainings/material/soup/python/exercises/userdb/userdb_csv", "trainings/material/soup/python/graph", "trainings/material/soup/python/group", "trainings/material/soup/python/link-collection", "trainings/material/soup/python/misc/ai/group", "trainings/material/soup/python/misc/ai/k-means", "trainings/material/soup/python/misc/ai/linear-regression/code", "trainings/material/soup/python/misc/ai/linear-regression/history_data", "trainings/material/soup/python/misc/ai/linear-regression/linear_regression", "trainings/material/soup/python/misc/ai/linear-regression/topic", "trainings/material/soup/python/misc/ai/machine-learning-intro", "trainings/material/soup/python/misc/csv/topic", "trainings/material/soup/python/misc/db/dbapi2", "trainings/material/soup/python/misc/db/group", "trainings/material/soup/python/misc/db/postgres", "trainings/material/soup/python/misc/db/sqlite3", "trainings/material/soup/python/misc/encoding/topic", "trainings/material/soup/python/misc/group", "trainings/material/soup/python/misc/import", "trainings/material/soup/python/misc/mqtt/topic", "trainings/material/soup/python/misc/pandas/add_row", "trainings/material/soup/python/misc/pandas/basics", "trainings/material/soup/python/misc/pandas/filters", "trainings/material/soup/python/misc/pandas/group", "trainings/material/soup/python/misc/pandas/iloc", "trainings/material/soup/python/misc/pandas/indexes", "trainings/material/soup/python/misc/pandas/loc", "trainings/material/soup/python/misc/pandas/mod_col", "trainings/material/soup/python/misc/python_5550_xml_etree/topic", "trainings/material/soup/python/misc/vscode", "trainings/material/soup/python/swdev/group", "trainings/material/soup/python/swdev/pip/screenplay", "trainings/material/soup/python/swdev/pip/slides", "trainings/material/soup/python/swdev/pip/topic", "trainings/material/soup/python/swdev/pypi", "trainings/material/soup/python/swdev/pytest/group", "trainings/material/soup/python/swdev/pytest/intro", "trainings/material/soup/python/swdev/unittest", "trainings/material/soup/python/swdev/venv/screenplay", "trainings/material/soup/python/swdev/venv/slides", "trainings/material/soup/python/swdev/venv/topic", "trainings/material/soup/unittest/group", "trainings/material/soup/unittest/unittest_gtest_basics/code/index", "trainings/material/soup/unittest/unittest_gtest_basics/screenplay", "trainings/material/soup/unittest/unittest_gtest_basics/topic", "trainings/material/soup/unittest/unittest_gtest_cmake/screenplay", "trainings/material/soup/unittest/unittest_gtest_cmake/topic", "trainings/material/soup/unittest/unittest_gtest_fixture/code/index", "trainings/material/soup/unittest/unittest_gtest_fixture/screenplay", "trainings/material/soup/unittest/unittest_gtest_fixture/topic", "trainings/org", "trainings/repertoire/_hidden/kettner-lfs-2013-09-16", "trainings/repertoire/bash", "trainings/repertoire/c-like/c", "trainings/repertoire/c-like/c-advanced", "trainings/repertoire/c-like/cxx", "trainings/repertoire/c-like/cxx11", "trainings/repertoire/c-like/index", "trainings/repertoire/cmake", "trainings/repertoire/design-patterns/design-patterns", "trainings/repertoire/embedded", "trainings/repertoire/kernel-programming-basics", "trainings/repertoire/linux-basics", "trainings/repertoire/make", "trainings/repertoire/python/advanced", "trainings/repertoire/python/basics", "trainings/repertoire/python/herdt", "trainings/repertoire/raspi-hands-on", "trainings/repertoire/svn", "trainings/repertoire/sysprog/basics", "trainings/repertoire/sysprog/fortgeschrittenes", "trainings/repertoire/sysprog/index", "trainings/repertoire/sysprog/multithreading", "trainings/repertoire/sysprog/network", "trainings/repertoire/unittests"], "filenames": ["about/myself/contact.rst", "about/myself/cv-de.rst", "about/myself/index.rst", "about/myself/projects-de.rst", "about/myself/skills-de.rst", "about/site/courses/angebot-2023-10-12.rst", "about/site/courses/index.rst", "about/site/courses/samples/detail/2021-04-12/Notebook.ipynb", "about/site/courses/samples/detail/2021-04-12/index.rst", "about/site/courses/samples/detail/2021-04-12/notebook-wrapper.rst", "about/site/courses/samples/detail/index.rst", "about/site/courses/samples/index.rst", "about/site/courses/templates.rst", "about/site/index.rst", "about/site/opentraining/index.rst", "about/site/opentraining/misc/draft-topics/index.rst", "about/site/opentraining/misc/index.rst", "about/site/opentraining/misc/s5/index.rst", "about/site/opentraining/misc/s5/tests/index.rst", "about/site/opentraining/misc/s5/tests/test-slides.rst", "about/site/opentraining/misc/screencast.rst", "about/site/opentraining/misc/topics-to-write.rst", "about/site/opentraining/netidee/index.rst", "about/site/opentraining/netidee/netidee-antrag.rst", "about/site/opentraining/netidee/netidee-video-2min.rst", "about/site/opentraining/usecases/agenda-subtract-known.rst", "about/site/opentraining/usecases/duration.rst", "about/site/opentraining/usecases/index.rst", "about/site/opentraining/usecases/linking.rst", "about/site/opentraining/usecases/menu.rst", "about/site/opentraining/usecases/slides.rst", "about/site/recipes/camera-ssh.rst", "about/site/recipes/emoji.rst", "about/site/recipes/index.rst", "about/site/recipes/isoamsa.rst", "about/site/recipes/isoamsr.rst", "about/site/recipes/isonum.rst", "about/site/recipes/layout-test.rst", "about/site/recipes/mathml.rst", "about/site/recipes/rst-cheatsheet.rst", "about/site/recipes/sphinxish.rst", "about/site/work-in-progress/2022-04-13/index.rst", "about/site/work-in-progress/2022-04-13/seminar/block-before-googletest.rst", "about/site/work-in-progress/2022-04-13/seminar/clean-code-craftsmanship.rst", "about/site/work-in-progress/2022-04-13/seminar/enter-googletest.rst", "about/site/work-in-progress/2022-04-13/seminar/index.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/find-error.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/group.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/overwrite-existing-files.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/overwrite-store-content-on-read.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/csv.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/group.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/other-indexes.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/group.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/backingstore-interface.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/backingstore-monolithic.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/group.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/pass-store-in-ctor.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/store-enum-switch.rst", "about/site/work-in-progress/blink/glt2023/index.rst", "about/site/work-in-progress/blink/glt2023/installation.rst", "about/site/work-in-progress/blink/glt2023/pycon-2023.rst", "about/site/work-in-progress/blink/glt2023/screenplay.rst", "about/site/work-in-progress/blink/glt2023/submission.rst", "about/site/work-in-progress/blink/glt2024/index.rst", "about/site/work-in-progress/blink/glt2024/script.rst", "about/site/work-in-progress/blink/glt2024/slides.rst", "about/site/work-in-progress/blink/glt2024/submission.rst", "about/site/work-in-progress/blink/index.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx_build.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx_iface.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx_oo_basics.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx_unittest.rst", "about/site/work-in-progress/fh-joanneum/2019/ec.rst", "about/site/work-in-progress/fh-joanneum/2019/embedded-computing-1.rst", "about/site/work-in-progress/fh-joanneum/2019/embedded-computing-2.rst", "about/site/work-in-progress/fh-joanneum/2019/exercise_mt_race.rst", "about/site/work-in-progress/fh-joanneum/2019/exercise_mt_race_fixed.rst", "about/site/work-in-progress/fh-joanneum/2019/git.rst", "about/site/work-in-progress/fh-joanneum/2019/index.rst", "about/site/work-in-progress/fh-joanneum/2019/linux.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_basics.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_dev_mgmt.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_avg_sensor.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_avg_sensor_parallel.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_led_display.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_sensors.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_gpio.rst", "about/site/work-in-progress/fh-joanneum/2019/mt.rst", "about/site/work-in-progress/fh-joanneum/2019/mt_lock.rst", "about/site/work-in-progress/fh-joanneum/2019/mt_wait.rst", "about/site/work-in-progress/fh-joanneum/2019/py_basics.rst", "about/site/work-in-progress/fh-joanneum/2019/py_exercise_avg_display.rst", "about/site/work-in-progress/fh-joanneum/2019/py_exercise_sensors.rst", "about/site/work-in-progress/fh-joanneum/2019/py_web.rst", "about/site/work-in-progress/fh-joanneum/2019/py_web_sensors.rst", "about/site/work-in-progress/fh-joanneum/2019/python.rst", "about/site/work-in-progress/fh-joanneum/2020/index.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-08.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-10.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-10-homework.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-21.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-22,24.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-28.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-04-01.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/index.rst", "about/site/work-in-progress/fh-joanneum/2020/ws2022.rst", "about/site/work-in-progress/fh-joanneum/2020/ws2022-questions-code-general.rst", "about/site/work-in-progress/fh-joanneum/2020/ws2022-questions-yesno.rst", "about/site/work-in-progress/fh-joanneum/2020/ws2022/lab-exam-2023-01-17.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2023-06-30.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2023-06-30-solved.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/exam-2024-01-26.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/exam-2024-02-02.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/exam-2024-02-02-sample.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/index.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/index.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/q-const.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/q-param-passing.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/q-solid--hysteresis-with-display.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/q-solid--sensor-with-id.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/q-virtual-method.rst", "about/site/work-in-progress/fh-joanneum/2021/git/git.rst", "about/site/work-in-progress/fh-joanneum/2021/index.rst", "about/site/work-in-progress/fh-joanneum/2021/ss2023.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot-basic-integration.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot-display.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot-full-integration.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger-csv-sink.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger-integration.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger-mqtt-sink.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/display-infrastructure.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/group.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/libgpiod-switch.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/mqtt-tkinter.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/pwm-display.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/sensor-interface.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/sensor-w1.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/switch-interface.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/sysfs-gpio-switch.rst", "about/site/work-in-progress/fh-joanneum/2021/ws2023-2024.rst", "about/site/work-in-progress/fh-joanneum/2022/index.rst", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-03-04/gluehwein.rst", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-03-04/index.rst", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-03-21/index.rst", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-04-14/index.rst", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-04-17/index.rst", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-04-22/index.rst", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-05-06/exercise.rst", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-05-06/index.rst", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-05-13/index.rst", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-05-27/index.rst", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-06-17/index.rst", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-06-19/index.rst", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-06-20/index.rst", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-06-28/handout.rst", "about/site/work-in-progress/fh-joanneum/2022/ss2024/2024-06-28/index.rst", "about/site/work-in-progress/fh-joanneum/2022/ss2024/index.rst", "about/site/work-in-progress/fh-joanneum/2022/ss2024/material.rst", "about/site/work-in-progress/fh-joanneum/2022/ss2024/syllabus.rst", "about/site/work-in-progress/fh-joanneum/2022/ws2024-25/index.rst", "about/site/work-in-progress/fh-joanneum/2022/ws2024-25/material.rst", "about/site/work-in-progress/fh-joanneum/2022/ws2024-25/syllabus.rst", "about/site/work-in-progress/fh-joanneum/index.rst", "about/site/work-in-progress/git.rst", "about/site/work-in-progress/index.rst", "about/site/work-in-progress/packaging/index.rst", "about/site/work-in-progress/playground/gaphor/index.rst", "about/site/work-in-progress/playground/hochkoenig/index.rst", "about/site/work-in-progress/playground/index.rst", "about/site/work-in-progress/playground/sphinx.rst", "about/site/work-in-progress/project-xxx/audio-chip.rst", "about/site/work-in-progress/project-xxx/debian-config.rst", "about/site/work-in-progress/project-xxx/debian-kernel-package.rst", "about/site/work-in-progress/project-xxx/hardware-bringup.rst", "about/site/work-in-progress/project-xxx/index.rst", "about/site/work-in-progress/project-xxx/kernel-upgrade-dirty.rst", "about/site/work-in-progress/project-xxx/wait-hardware.rst", "about/site/work-in-progress/project-xxx/yocto-kernel.rst", "about/site/work-in-progress/python-training.rst", "about/site/work-in-progress/screencast.rst", "about/site/work-in-progress/seo.rst", "about/site/work-in-progress/stacks.rst", "about/site/work-in-progress/todo-misc.rst", "about/site/work-in-progress/web.rst", "blog/2010/07/beagleboard-how-to-repair-nand-also-known-as-40w.rst", "blog/2011/01/porting-to-linux-there-s-always-a-better-way.rst", "blog/2011/01/saving-solid-state-disk-life--gentoo.rst", "blog/2012/04/Why-ps-sucks.rst", "blog/2020/02/fedora-kernel-build.rst", "blog/2020/03/custom-domain-gh-pages.rst", "blog/2020/03/ms-teams-on-linux.rst", "blog/2020/03/sphinx-gh-pages.rst", "blog/2020/04/bbb.rst", "blog/2020/09/traunstein.rst", "blog/2021/08/grintovec.rst", "blog/2021/09/xps13-shim-mok-brick/index.rst", "blog/2022/09/cross-raspi.rst", "blog/index.rst", "index.rst", "trainings/codex.rst", "trainings/exercises.rst", "trainings/index.rst", "trainings/log/detail/2013-10-01/index.rst", "trainings/log/detail/2015-11-30/index.rst", "trainings/log/detail/2019-10-28/LiveHacking.ipynb", "trainings/log/detail/2019-10-28/index.rst", "trainings/log/detail/2019-11-12/code/BigPlan.ipynb", "trainings/log/detail/2019-11-12/code/LiveHacking.ipynb", "trainings/log/detail/2019-11-12/index.rst", "trainings/log/detail/2020-01-10/Proposal.rst", "trainings/log/detail/2020-01-10/index.rst", "trainings/log/detail/2020-03-30/code/exercise-string/index.rst", "trainings/log/detail/2020-03-30/index.rst", "trainings/log/detail/2020-03-30/install-googletest.rst", "trainings/log/detail/2020-03-30/setup.rst", "trainings/log/detail/2020-03-30/vs-code.rst", "trainings/log/detail/2020-05-12/code/index.rst", "trainings/log/detail/2020-05-12/index.rst", "trainings/log/detail/2020-05-18/Livehacking.ipynb", "trainings/log/detail/2020-05-18/code/index.rst", "trainings/log/detail/2020-05-18/index.rst", "trainings/log/detail/2020-09-07/index.rst", "trainings/log/detail/2020-09-28/index.rst", "trainings/log/detail/2020-10-19/Notebook.ipynb", "trainings/log/detail/2020-10-19/index.rst", "trainings/log/detail/2020-11-03/index.rst", "trainings/log/detail/2020-11-23/index.rst", "trainings/log/detail/2020-11-30/index.rst", "trainings/log/detail/2021-01-13/Notebook.ipynb", "trainings/log/detail/2021-01-13/index.rst", "trainings/log/detail/2021-01-13/notebook-wrapper.rst", "trainings/log/detail/2021-02-22/index.rst", "trainings/log/detail/2021-03-08/index.rst", "trainings/log/detail/2021-03-15/Notebook.ipynb", "trainings/log/detail/2021-03-15/index.rst", "trainings/log/detail/2021-03-22/Notebook.ipynb", "trainings/log/detail/2021-03-22/index.rst", "trainings/log/detail/2021-03-29/index.rst", "trainings/log/detail/2021-04-12/Notebook.ipynb", "trainings/log/detail/2021-04-12/index.rst", "trainings/log/detail/2021-04-12/notebook-wrapper.rst", "trainings/log/detail/2021-05-03/Notebook.ipynb", "trainings/log/detail/2021-05-03/index.rst", "trainings/log/detail/2021-05-03/notebook-wrapper.rst", "trainings/log/detail/2021-05-25/Notebook.ipynb", "trainings/log/detail/2021-05-25/index.rst", "trainings/log/detail/2021-06-14/index.rst", "trainings/log/detail/2021-07-12/index.rst", "trainings/log/detail/2021-08-02/index.rst", "trainings/log/detail/2021-08-02/notebook.ipynb", "trainings/log/detail/2021-08-23/Notebook.ipynb", "trainings/log/detail/2021-08-23/exercises/sap-cleaned.rst", "trainings/log/detail/2021-08-23/index.rst", "trainings/log/detail/2021-08-23/notebook-wrapper.rst", "trainings/log/detail/2021-08-31/Notebook.ipynb", "trainings/log/detail/2021-08-31/index.rst", "trainings/log/detail/2021-08-31/notebook-wrapper.rst", "trainings/log/detail/2021-11-17/Notebook.ipynb", "trainings/log/detail/2021-11-17/index.rst", "trainings/log/detail/2021-11-17/notebook-wrapper.rst", "trainings/log/detail/2021-12-01/2021-12-01.ipynb", "trainings/log/detail/2021-12-01/index.rst", "trainings/log/detail/2021-12-01/notebook-wrapper.rst", "trainings/log/detail/2021-12-06/index.rst", "trainings/log/detail/2022-01-17/index.rst", "trainings/log/detail/2022-01-17/notebook.ipynb", "trainings/log/detail/2022-01-17/notebook-wrapper.rst", "trainings/log/detail/2022-02-23/Notebook.ipynb", "trainings/log/detail/2022-02-23/index.rst", "trainings/log/detail/2022-02-23/notebook-wrapper.rst", "trainings/log/detail/2022-03-15/Notebook.ipynb", "trainings/log/detail/2022-03-15/index.rst", "trainings/log/detail/2022-03-15/notebook-wrapper.rst", "trainings/log/detail/2022-03-23/Notebook.ipynb", "trainings/log/detail/2022-03-23/index.rst", "trainings/log/detail/2022-03-23/notebook-wrapper.rst", "trainings/log/detail/2022-04-05/index.rst", "trainings/log/detail/2022-04-05/notebook.ipynb", "trainings/log/detail/2022-04-05/notebook-wrapper.rst", "trainings/log/detail/2022-04-25/index.rst", "trainings/log/detail/2022-04-25/notebook.ipynb", "trainings/log/detail/2022-04-25/notebook-wrapper.rst", "trainings/log/detail/2022-05-02/index.rst", "trainings/log/detail/2022-05-02/notebook.ipynb", "trainings/log/detail/2022-05-02/notebook-wrapper.rst", "trainings/log/detail/2022-05-16/index.rst", "trainings/log/detail/2022-05-16/notebook.ipynb", "trainings/log/detail/2022-05-16/notebook-wrapper.rst", "trainings/log/detail/2022-06-14/2022-05-11.rst", "trainings/log/detail/2022-06-14/index.rst", "trainings/log/detail/2022-07-26/index.rst", "trainings/log/detail/2022-10-03/index.rst", "trainings/log/detail/2022-10-11/index.rst", "trainings/log/detail/2022-10-24/index.rst", "trainings/log/detail/2022-11-07/index.rst", "trainings/log/detail/2022-11-07/notebook.ipynb", "trainings/log/detail/2022-11-07/notebook-wrapper.rst", "trainings/log/detail/2022-11-16/index.rst", "trainings/log/detail/2022-11-16/notebook.ipynb", "trainings/log/detail/2022-11-16/notebook-wrapper.rst", "trainings/log/detail/2023-01-23/index.rst", "trainings/log/detail/2023-02-13/index.rst", "trainings/log/detail/2023-03-13-Python-SAP/Demo/demo-notebook.ipynb", "trainings/log/detail/2023-03-13-Python-SAP/demo.rst", "trainings/log/detail/2023-03-13-Python-SAP/index.rst", "trainings/log/detail/2023-03-13-Python-SAP/notebook.ipynb", "trainings/log/detail/2023-03-13-Python-SAP/notebook-wrapper.rst", "trainings/log/detail/2023-03-13-Python-SAP/original-agenda.rst", "trainings/log/detail/2023-03-13-Python-SAP/sap-dataset/index.rst", "trainings/log/detail/2023-03-13-Python-SAP/sap-dataset/sap-dataset.ipynb", "trainings/log/detail/2023-03-20--C++-embedded/index.rst", "trainings/log/detail/2023-03-28--Python-Clean-Code/index.rst", "trainings/log/detail/2023-04-18--C++-embedded/index.rst", "trainings/log/detail/2023-04-24--Python-Advanced/agenda.rst", "trainings/log/detail/2023-04-24--Python-Advanced/index.rst", "trainings/log/detail/2023-04-24--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-04-24--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-05-15--Python-Basics/agenda.rst", "trainings/log/detail/2023-05-15--Python-Basics/index.rst", "trainings/log/detail/2023-05-15--Python-Basics/notebook.ipynb", "trainings/log/detail/2023-05-15--Python-Basics/notebook-wrapper.rst", "trainings/log/detail/2023-05-23--Linux-Basics/agenda.rst", "trainings/log/detail/2023-05-23--Linux-Basics/index.rst", "trainings/log/detail/2023-06-20--Python-Basics/agenda.rst", "trainings/log/detail/2023-06-20--Python-Basics/index.rst", "trainings/log/detail/2023-06-20--Python-Basics/notebook.ipynb", "trainings/log/detail/2023-06-20--Python-Basics/notebook-wrapper.rst", "trainings/log/detail/2023-07-03--CMake/agenda.rst", "trainings/log/detail/2023-07-03--CMake/index.rst", "trainings/log/detail/2023-09-25--Python-Advanced/index.rst", "trainings/log/detail/2023-09-25--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-09-25--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-10-09--Python-Advanced/index.rst", "trainings/log/detail/2023-10-09--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-10-09--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-10-24--Python-Advanced/agenda.rst", "trainings/log/detail/2023-10-24--Python-Advanced/index.rst", "trainings/log/detail/2023-10-24--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-10-24--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-11-22--Python-Advanced/agenda.rst", "trainings/log/detail/2023-11-22--Python-Advanced/index.rst", "trainings/log/detail/2023-11-22--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-11-22--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-11-27--CMake/agenda.rst", "trainings/log/detail/2023-11-27--CMake/index.rst", "trainings/log/detail/2023-11-29--Python-Basics/agenda.rst", "trainings/log/detail/2023-11-29--Python-Basics/index.rst", "trainings/log/detail/2023-11-29--Python-Basics/notebook.ipynb", "trainings/log/detail/2023-11-29--Python-Basics/notebook-wrapper.rst", "trainings/log/detail/2023-12-04--C++-Advanced/agenda.rst", "trainings/log/detail/2023-12-04--C++-Advanced/index.rst", "trainings/log/detail/2023-12-18--Python-Basics/agenda.rst", "trainings/log/detail/2023-12-18--Python-Basics/index.rst", "trainings/log/detail/2023-12-18--Python-Basics/notebook.ipynb", "trainings/log/detail/2023-12-18--Python-Basics/notebook-wrapper.rst", "trainings/log/detail/2023-XX-XX-C++-embedded/index.rst", "trainings/log/detail/2023-XX-XX-Python-SAP/index.rst", "trainings/log/detail/2024-01-15--Python-Advanced/agenda.rst", "trainings/log/detail/2024-01-15--Python-Advanced/index.rst", "trainings/log/detail/2024-01-15--Python-Advanced/notebook.ipynb", "trainings/log/detail/2024-01-15--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2024-01-29--Python-Basics/agenda.rst", "trainings/log/detail/2024-01-29--Python-Basics/index.rst", "trainings/log/detail/2024-01-29--Python-Basics/notebook.ipynb", "trainings/log/detail/2024-01-29--Python-Basics/notebook-wrapper.rst", "trainings/log/detail/2024-03-11--Linux-Basics/agenda.rst", "trainings/log/detail/2024-03-11--Linux-Basics/index.rst", "trainings/log/detail/2024-04-09--TDD-Python-Delphi/index.rst", "trainings/log/detail/2024-06-03--C++/agenda.rst", "trainings/log/detail/2024-06-03--C++/index.rst", "trainings/log/detail/2024-06-11--CMake-Advanced/agenda.rst", "trainings/log/detail/2024-06-11--CMake-Advanced/index.rst", "trainings/log/detail/2024-06-18--CMake-Basics/index.rst", "trainings/log/detail/2024-07-01--CMake-Advanced/agenda.rst", "trainings/log/detail/2024-07-01--CMake-Advanced/index.rst", "trainings/log/detail/2024-XX-XX--C++/agenda.rst", "trainings/log/detail/2024-XX-XX--C++/index.rst", "trainings/log/detail/FH-ECE-19/EC1/2021-05-12/screenplay-checker.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-abc.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-oo.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-unittest.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/fh-group.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/file-read.rst", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/2021-05-20-G2.ipynb", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/2021-05-21.ipynb", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Checker-Explanations.ipynb", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Datatypes.ipynb", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Functions.ipynb", "trainings/log/detail/FH-ECE-19/EC1/cloud-computer.rst", "trainings/log/detail/FH-ECE-19/EC1/formales.rst", "trainings/log/detail/FH-ECE-19/EC1/index.rst", "trainings/log/detail/FH-ECE-19/EC1/log.rst", "trainings/log/detail/FH-ECE-19/EC1/lv-de.rst", "trainings/log/detail/FH-ECE-19/EC1/lv-en.rst", "trainings/log/detail/FH-ECE-19/EC1/plan.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-07.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-12.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-28.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-11-15.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-11-29.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-12-14.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-01-10.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-01-12.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-02-15.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/index.rst", "trainings/log/detail/FH-ECE-19/EC2/index.rst", "trainings/log/detail/FH-ECE-19/EC2/test-material.rst", "trainings/log/detail/FH-ECE-19/index.rst", "trainings/log/detail/index.rst", "trainings/log/index.rst", "trainings/material/index.rst", "trainings/material/soup/c/010-introduction/000-installation/topic.rst", "trainings/material/soup/c/010-introduction/010-introduction/topic.rst", "trainings/material/soup/c/010-introduction/020-getting-started/topic.rst", "trainings/material/soup/c/010-introduction/030-variables-and-arithmetic-expressions/topic.rst", "trainings/material/soup/c/010-introduction/040-exercise-fahrenheit-float/topic.rst", "trainings/material/soup/c/010-introduction/050-the-for-statement/topic.rst", "trainings/material/soup/c/010-introduction/060-exercise-fahrenheit-for/topic.rst", "trainings/material/soup/c/010-introduction/070-symbolic-constants/topic.rst", "trainings/material/soup/c/010-introduction/080-exercise-fahrenheit-cpp/topic.rst", "trainings/material/soup/c/010-introduction/090-character-input-and-output/topic.rst", "trainings/material/soup/c/010-introduction/100-exercise-wc/topic.rst", "trainings/material/soup/c/010-introduction/110-arrays/topic.rst", "trainings/material/soup/c/010-introduction/120-exercise-histogram/topic.rst", "trainings/material/soup/c/010-introduction/130-functions/topic.rst", "trainings/material/soup/c/010-introduction/140-exercise-power-declaration/topic.rst", "trainings/material/soup/c/010-introduction/150-character-arrays/topic.rst", "trainings/material/soup/c/010-introduction/160-exercise-string-read-line/topic.rst", "trainings/material/soup/c/010-introduction/170-external-variables-and-scope/topic.rst", "trainings/material/soup/c/010-introduction/group.rst", "trainings/material/soup/c/020-types-operators-expressions/010-introduction/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/020-variable-names/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/030-data-types-and-sizes/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/040-constants/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/050-declarations/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/060-arithmetic-operators/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/070-relational-and-logical-operators/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/080-type-conversions/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/090-increment-and-decrement-operators/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/100-exercise-string-reduce/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/110-bitwise-operators/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/120-assignment-operators-and-expressions/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/130-conditional-expressions/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/140-precedence-and-order-of-evaluation/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/group.rst", "trainings/material/soup/c/030-program-flow/010-statements-and-blocks/topic.rst", "trainings/material/soup/c/030-program-flow/020-if-else/topic.rst", "trainings/material/soup/c/030-program-flow/030-else-if/topic.rst", "trainings/material/soup/c/030-program-flow/040-switch/topic.rst", "trainings/material/soup/c/030-program-flow/050-loops-while-and-for/topic.rst", "trainings/material/soup/c/030-program-flow/060-loops-do-while/topic.rst", "trainings/material/soup/c/030-program-flow/070-break-and-continue/topic.rst", "trainings/material/soup/c/030-program-flow/080-goto-and-labels/topic.rst", "trainings/material/soup/c/030-program-flow/group.rst", "trainings/material/soup/c/040-functions-and-program-structure/010-basics-of-functions/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/020-external-variables/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/030-header-files/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/040-static-variables/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/050-c-preprocessor/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/060-c-preprocessor-advanced/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/group.rst", "trainings/material/soup/c/050-pointers-and-arrays/010-pointers-and-addresses/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/020-pointers-and-function-arguments/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/030-exercise-swap/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/040-pointers-and-arrays/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/050-command-line-arguments/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/group.rst", "trainings/material/soup/c/060-structures/010-basics-of-structures/topic.rst", "trainings/material/soup/c/060-structures/020-structures-and-functions/topic.rst", "trainings/material/soup/c/060-structures/030-typedef/topic.rst", "trainings/material/soup/c/060-structures/group.rst", "trainings/material/soup/c/070-memory/010-malloc/topic.rst", "trainings/material/soup/c/070-memory/020-exercise-linked-list/topic.rst", "trainings/material/soup/c/070-memory/group.rst", "trainings/material/soup/c/080-advanced-language-features/010-volatile/topic.rst", "trainings/material/soup/c/080-advanced-language-features/020-atomic/topic.rst", "trainings/material/soup/c/080-advanced-language-features/030-alignment/topic.rst", "trainings/material/soup/c/080-advanced-language-features/group.rst", "trainings/material/soup/c/090-program-sanity/010-introduction/topic.rst", "trainings/material/soup/c/090-program-sanity/020-integral-types/topic.rst", "trainings/material/soup/c/090-program-sanity/030-discrete-values/topic.rst", "trainings/material/soup/c/090-program-sanity/040-static/topic.rst", "trainings/material/soup/c/090-program-sanity/050-const/topic.rst", "trainings/material/soup/c/090-program-sanity/060-struct-initialization/topic.rst", "trainings/material/soup/c/090-program-sanity/070-explicit-type-safety/topic.rst", "trainings/material/soup/c/090-program-sanity/080-valgrind/topic.rst", "trainings/material/soup/c/090-program-sanity/group.rst", "trainings/material/soup/c/100-performance/010-introduction/topic.rst", "trainings/material/soup/c/100-performance/020-computebound/topic.rst", "trainings/material/soup/c/100-performance/030-memory/topic.rst", "trainings/material/soup/c/100-performance/group.rst", "trainings/material/soup/c/110-profiling/010-introduction/topic.rst", "trainings/material/soup/c/110-profiling/020-gprof/topic.rst", "trainings/material/soup/c/110-profiling/030-callgrind/topic.rst", "trainings/material/soup/c/110-profiling/040-oprofile/topic.rst", "trainings/material/soup/c/110-profiling/group.rst", "trainings/material/soup/c/group.rst", "trainings/material/soup/clean-code/book-messages.rst", "trainings/material/soup/clean-code/craft-sw.rst", "trainings/material/soup/clean-code/group.rst", "trainings/material/soup/clean-code/intro-python/livehacking.rst", "trainings/material/soup/cmake/advanced/code-generators/screenplay.rst", "trainings/material/soup/cmake/advanced/conditional-code-approach-1/topic.rst", "trainings/material/soup/cmake/advanced/conditional-code-approach-2/topic.rst", "trainings/material/soup/cmake/advanced/conditional-code-problem/topic.rst", "trainings/material/soup/cmake/advanced/configure-file/topic.rst", "trainings/material/soup/cmake/advanced/external-dependencies/screenplay-mosquitto.rst", "trainings/material/soup/cmake/advanced/external-dependencies/screenplay-sqlite3.rst", "trainings/material/soup/cmake/advanced/external-dependencies/screenplay-sqlite3-optional-configured-file.rst", "trainings/material/soup/cmake/advanced/external-dependencies/screenplay-sqlite3-optional-graph.rst", "trainings/material/soup/cmake/advanced/external-dependencies/topic.rst", "trainings/material/soup/cmake/advanced/group.rst", "trainings/material/soup/cmake/advanced/language/basics/topic.rst", "trainings/material/soup/cmake/advanced/language/datatypes/topic.rst", "trainings/material/soup/cmake/advanced/language/file-etc/topic.rst", "trainings/material/soup/cmake/advanced/language/foreach/topic.rst", "trainings/material/soup/cmake/advanced/language/functions-and-macros/topic.rst", "trainings/material/soup/cmake/advanced/language/group.rst", "trainings/material/soup/cmake/advanced/language/if-and-conditions/topic.rst", "trainings/material/soup/cmake/advanced/language/scripts/topic.rst", "trainings/material/soup/cmake/advanced/language/variables/topic.rst", "trainings/material/soup/cmake/advanced/language/while/topic.rst", "trainings/material/soup/cmake/advanced/library-function/screenplay.rst", "trainings/material/soup/cmake/advanced/targets-properties/global-incdir.rst", "trainings/material/soup/cmake/advanced/targets-properties/screenplay.rst", "trainings/material/soup/cmake/advanced/targets-properties/topic.rst", "trainings/material/soup/cmake/advanced/testing/topic.rst", "trainings/material/soup/cmake/group.rst", "trainings/material/soup/cmake/intro/basics.rst", "trainings/material/soup/cmake/intro/cxx-and-rants.rst", "trainings/material/soup/cmake/intro/group.rst", "trainings/material/soup/cmake/intro/installation.rst", "trainings/material/soup/cmake/intro/libraries.rst", "trainings/material/soup/cmake/intro/shared-libraries.rst", "trainings/material/soup/cmake/intro/structure.rst", "trainings/material/soup/cxx-code/index.rst", "trainings/material/soup/cxx-design-patterns/abstract-factory/abstract-factory.rst", "trainings/material/soup/cxx-design-patterns/adapter/adapter.rst", "trainings/material/soup/cxx-design-patterns/command/command.rst", "trainings/material/soup/cxx-design-patterns/command/socialdb.rst", "trainings/material/soup/cxx-design-patterns/composite/composite.rst", "trainings/material/soup/cxx-design-patterns/decorator/decorator.rst", "trainings/material/soup/cxx-design-patterns/group.rst", "trainings/material/soup/cxx-design-patterns/heating-screenplay/heating-screenplay.rst", "trainings/material/soup/cxx-design-patterns/interpreter/interpreter.rst", "trainings/material/soup/cxx-design-patterns/observer/observer.rst", "trainings/material/soup/cxx-design-patterns/oo-principles.rst", "trainings/material/soup/cxx-design-patterns/proxy/proxy.rst", "trainings/material/soup/cxx-design-patterns/sensor-hierarchy.rst", "trainings/material/soup/cxx-design-patterns/singleton/singleton.rst", "trainings/material/soup/cxx-design-patterns/uml/uml.rst", "trainings/material/soup/cxx-exercises/design-patterns/abstract-factory.rst", "trainings/material/soup/cxx-exercises/design-patterns/adapter.rst", "trainings/material/soup/cxx-exercises/design-patterns/command.rst", "trainings/material/soup/cxx-exercises/design-patterns/composite.rst", "trainings/material/soup/cxx-exercises/design-patterns/decorator.rst", "trainings/material/soup/cxx-exercises/design-patterns/group.rst", "trainings/material/soup/cxx-exercises/design-patterns/interpreter-and-adapter.rst", "trainings/material/soup/cxx-exercises/design-patterns/interpreter-basic.rst", "trainings/material/soup/cxx-exercises/design-patterns/observer.rst", "trainings/material/soup/cxx-exercises/design-patterns/proxy-remote.rst", "trainings/material/soup/cxx-exercises/design-patterns/proxy-round.rst", "trainings/material/soup/cxx-exercises/design-patterns/singleton-flexible.rst", "trainings/material/soup/cxx-exercises/design-patterns/singleton-flexible-strict.rst", "trainings/material/soup/cxx-exercises/design-patterns/singleton-inflexible.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/abstract-factory.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/adapter.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/command.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/composite.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/decorator.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/group.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/interpreter-and-adapter.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/interpreter-basic.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/observer.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/proxy-remote.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/proxy-round.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-flexible.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-flexible-strict.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-inflexible.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-loop-function.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-no-polymorphism.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-random-sensor.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/group.rst", "trainings/material/soup/cxx-exercises/group.rst", "trainings/material/soup/cxx-exercises/nopoly-display-led-stripe/display-led-stripe-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-hysteresis/hysteresis-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-sensor-avg/sensor-avg-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-const-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-mock-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-random-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-switch-mock/switch-mock-nopoly.rst", "trainings/material/soup/cxx-exercises/oo-shapes/shapes.rst", "trainings/material/soup/cxx-exercises/project-setup.rst", "trainings/material/soup/cxx-exercises/sensor-interface/sensor-interface.rst", "trainings/material/soup/cxx-exercises/sensor-w1-factory/sensor-w1-factory.rst", "trainings/material/soup/cxx-exercises/sensor-w1/sensor-w1.rst", "trainings/material/soup/cxx-exercises/stl/algo.rst", "trainings/material/soup/cxx-exercises/stl/filter-generic.rst", "trainings/material/soup/cxx-exercises/stl/filter-greater-10.rst", "trainings/material/soup/cxx-exercises/stl/filter-odd.rst", "trainings/material/soup/cxx-exercises/stl/group.rst", "trainings/material/soup/cxx-exercises/stl/map.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/group.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/insert-no-overwrite.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/insert-sunny.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/lookup-not-found.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/lookup-sunny.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/no-memleak.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/remove-not-found.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/remove-sunny.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/size-const.rst", "trainings/material/soup/cxx-exercises/stl/uniq.rst", "trainings/material/soup/cxx-exercises/stl/vector.rst", "trainings/material/soup/cxx-todo/index.rst", "trainings/material/soup/cxx/cxx_class_templates/code/index.rst", "trainings/material/soup/cxx/cxx_class_templates/screenplay.rst", "trainings/material/soup/cxx/cxx_class_templates/topic.rst", "trainings/material/soup/cxx/cxx_dynamic_memory/code/index.rst", "trainings/material/soup/cxx/cxx_dynamic_memory/screenplay.rst", "trainings/material/soup/cxx/cxx_dynamic_memory/topic.rst", "trainings/material/soup/cxx/cxx_global_initialization/code/index.rst", "trainings/material/soup/cxx/cxx_global_initialization/screenplay.rst", "trainings/material/soup/cxx/cxx_global_initialization/topic.rst", "trainings/material/soup/cxx/cxx_inheritance_virtual/code/index.rst", "trainings/material/soup/cxx/cxx_inheritance_virtual/screenplay.rst", "trainings/material/soup/cxx/cxx_inheritance_virtual/topic.rst", "trainings/material/soup/cxx/cxx_ownership_raii/code/index.rst", "trainings/material/soup/cxx/cxx_ownership_raii/screenplay.rst", "trainings/material/soup/cxx/cxx_ownership_raii/topic.rst", "trainings/material/soup/cxx/cxx_stl_container_intro/code/index.rst", "trainings/material/soup/cxx/cxx_stl_container_intro/screenplay.rst", "trainings/material/soup/cxx/cxx_stl_container_intro/topic.rst", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/code/index.rst", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/screenplay.rst", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/topic.rst", "trainings/material/soup/cxx/group.rst", "trainings/material/soup/cxx03/001-introduction/topic.rst", "trainings/material/soup/cxx03/020-data-encapsulation/c.rst", "trainings/material/soup/cxx03/020-data-encapsulation/copy-basics.rst", "trainings/material/soup/cxx03/020-data-encapsulation/cpp-introduction.rst", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-custom.rst", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-default.rst", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-dtor.rst", "trainings/material/soup/cxx03/020-data-encapsulation/group.rst", "trainings/material/soup/cxx03/020-data-encapsulation/initializer-list.rst", "trainings/material/soup/cxx03/020-data-encapsulation/object-copy.rst", "trainings/material/soup/cxx03/030-functions-and-methods/010-overloading/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/020-methods/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/030-const/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/040-this/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/050-references/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/060-static/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/065-static-member-variables/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/070-operators/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-cuboid.rst", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-point.rst", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-point3d.rst", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-rectangle.rst", "trainings/material/soup/cxx03/030-functions-and-methods/group.rst", "trainings/material/soup/cxx03/040-exceptions/010-basics/topic.rst", "trainings/material/soup/cxx03/040-exceptions/020-try-catch/topic.rst", "trainings/material/soup/cxx03/040-exceptions/group.rst", "trainings/material/soup/cxx03/050-templates/010-function-templates/topic.rst", "trainings/material/soup/cxx03/050-templates/020-class-templates/topic.rst", "trainings/material/soup/cxx03/050-templates/group.rst", "trainings/material/soup/cxx03/060-stl/010-basics/algo-copy.rst", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-algo.rst", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-basics.rst", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-difference.rst", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-out-of-range.rst", "trainings/material/soup/cxx03/060-stl/010-basics/topic.rst", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/topic.rst", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-and-copy.rst", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-basic.rst", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-pointer-arith.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/binary_search.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/copy.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/find.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/find_if.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/for_each.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/group.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/lower_bound.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/reverse.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/reverse_copy.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/sort.rst", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/basics.rst", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/group.rst", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/list.rst", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/vector.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/basics.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/group.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-init-fill.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-insert.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-remove.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-search.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/multimap.rst", "trainings/material/soup/cxx03/060-stl/allocators/allocator_basics.rst", "trainings/material/soup/cxx03/060-stl/allocators/group.rst", "trainings/material/soup/cxx03/060-stl/exercises/group.rst", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/exercise.rst", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/group.rst", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/solution.rst", "trainings/material/soup/cxx03/060-stl/group.rst", "trainings/material/soup/cxx03/070-dynamic-memory/000-todo/topic.rst", "trainings/material/soup/cxx03/070-dynamic-memory/group.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/basics.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/destructor.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/group.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/interface.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/polymorphism.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/private-protected.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/virtual-destructor.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/virtual-method.rst", "trainings/material/soup/cxx03/900-standard-library-miscellanea/group.rst", "trainings/material/soup/cxx03/900-standard-library-miscellanea/string/topic.rst", "trainings/material/soup/cxx03/exercises-misc/american-flag/exercise.rst", "trainings/material/soup/cxx03/exercises-misc/fh-questions.rst", "trainings/material/soup/cxx03/exercises-misc/group.rst", "trainings/material/soup/cxx03/exercises-misc/passwd-parser/exercise.rst", "trainings/material/soup/cxx03/exercises-misc/sum-integers-from-stdin/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/group.rst", "trainings/material/soup/cxx03/exercises-userdb/user-access-methods/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-const-members/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-const/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-default-ctor/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-simple-method/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-to-cxx-ctor/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-insert/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-search-find_if/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-search-notfound-exception/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-search/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-vector/exercise.rst", "trainings/material/soup/cxx03/group.rst", "trainings/material/soup/cxx11/010-introduction/group.rst", "trainings/material/soup/cxx11/010-introduction/history.rst", "trainings/material/soup/cxx11/010-introduction/overview-livehacking.rst", "trainings/material/soup/cxx11/020-new-language-features/010-strongly-typed-enums/topic.rst", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/group.rst", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/implementor-view.rst", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/intro.rst", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/mess.rst", "trainings/material/soup/cxx11/020-new-language-features/050-delegating-ctor/topic.rst", "trainings/material/soup/cxx11/020-new-language-features/055-constexpr/topic.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/afterword.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/group.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-smartptr-move.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-string-move.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-using-string-move.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/overview.rst", "trainings/material/soup/cxx11/020-new-language-features/070-miscellaneous/topic.rst", "trainings/material/soup/cxx11/020-new-language-features/auto.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/group.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-1-conceptless.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-2-conceptless-error.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-3-concept-integral.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/links.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-1-good-old-func.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-2-need-template.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-4-concept-has-size.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-5-concept-index-ret-double.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/group.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/fibo-generator.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/fibonacci.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/generator-h.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/generator-hello.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/simplest.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend-iter.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend-next.rst", "trainings/material/soup/cxx11/020-new-language-features/default.rst", "trainings/material/soup/cxx11/020-new-language-features/delete.rst", "trainings/material/soup/cxx11/020-new-language-features/final.rst", "trainings/material/soup/cxx11/020-new-language-features/group.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/group.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-capture.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-is-functor.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-is-functor-pitfall.rst", "trainings/material/soup/cxx11/020-new-language-features/modules.rst", "trainings/material/soup/cxx11/020-new-language-features/override.rst", "trainings/material/soup/cxx11/020-new-language-features/range-based-for.rst", "trainings/material/soup/cxx11/020-new-language-features/range-based-for-map.rst", "trainings/material/soup/cxx11/020-new-language-features/ranges/good-bad.rst", "trainings/material/soup/cxx11/020-new-language-features/ranges/group.rst", "trainings/material/soup/cxx11/020-new-language-features/ranges/intro.rst", "trainings/material/soup/cxx11/020-new-language-features/ranges/links.rst", "trainings/material/soup/cxx11/020-new-language-features/structured-binding.rst", "trainings/material/soup/cxx11/030-smart-pointers/040-closing-words/topic.rst", "trainings/material/soup/cxx11/030-smart-pointers/group.rst", "trainings/material/soup/cxx11/030-smart-pointers/introduction.rst", "trainings/material/soup/cxx11/030-smart-pointers/introduction-livehack.rst", "trainings/material/soup/cxx11/030-smart-pointers/sharedptr.rst", "trainings/material/soup/cxx11/030-smart-pointers/uniqueptr.rst", "trainings/material/soup/cxx11/030-smart-pointers/weakptr.rst", "trainings/material/soup/cxx11/035-perfect-forwarding/topic.rst", "trainings/material/soup/cxx11/040-bind-function/010-bind/topic.rst", "trainings/material/soup/cxx11/040-bind-function/020-function/topic.rst", "trainings/material/soup/cxx11/040-bind-function/group.rst", "trainings/material/soup/cxx11/050-multithreading/010-introduction/topic.rst", "trainings/material/soup/cxx11/050-multithreading/020-thread/topic.rst", "trainings/material/soup/cxx11/050-multithreading/030-race-conditions/topic.rst", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/atomics.rst", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/mutex.rst", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/scoped-locking.rst", "trainings/material/soup/cxx11/050-multithreading/condition-variable.rst", "trainings/material/soup/cxx11/050-multithreading/group.rst", "trainings/material/soup/cxx11/050-multithreading/promise-future.rst", "trainings/material/soup/cxx11/100-miscellaneous/010-chrono/topic.rst", "trainings/material/soup/cxx11/100-miscellaneous/any-variant-optional/any.rst", "trainings/material/soup/cxx11/100-miscellaneous/any-variant-optional/variant.rst", "trainings/material/soup/cxx11/100-miscellaneous/group.rst", "trainings/material/soup/cxx11/drafts/crtp.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/allocator.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/classic-virtual.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/group.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/related-no-virtual.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/type-erasure.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/unrelated.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/variant-automatic-visit.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/variant-manual-if.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/variant-manual-visit.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/why-replace-virtual.rst", "trainings/material/soup/cxx11/drafts/group.rst", "trainings/material/soup/cxx11/exercises/bag-copy.rst", "trainings/material/soup/cxx11/exercises/bag-shared.rst", "trainings/material/soup/cxx11/exercises/bag-unique.rst", "trainings/material/soup/cxx11/exercises/group.rst", "trainings/material/soup/cxx11/filesystem/topic.rst", "trainings/material/soup/cxx11/group.rst", "trainings/material/soup/graph.rst", "trainings/material/soup/index.rst", "trainings/material/soup/kernel/cdev-auto/screenplay.rst", "trainings/material/soup/kernel/cdev-auto/slides.rst", "trainings/material/soup/kernel/cdev-auto/topic.rst", "trainings/material/soup/kernel/cdev-file-operations/screenplay.rst", "trainings/material/soup/kernel/cdev-file-operations/slides.rst", "trainings/material/soup/kernel/cdev-file-operations/topic.rst", "trainings/material/soup/kernel/cdev-first-functionality/slides.rst", "trainings/material/soup/kernel/cdev-first-functionality/topic.rst", "trainings/material/soup/kernel/cdev-manual/screenplay.rst", "trainings/material/soup/kernel/cdev-manual/slides.rst", "trainings/material/soup/kernel/cdev-manual/topic.rst", "trainings/material/soup/kernel/cdev-multiple-devices/slides.rst", "trainings/material/soup/kernel/cdev-multiple-devices/topic.rst", "trainings/material/soup/kernel/cdev-refactoring/screenplay.rst", "trainings/material/soup/kernel/cdev-refactoring/slides.rst", "trainings/material/soup/kernel/cdev-refactoring/topic.rst", "trainings/material/soup/kernel/dma/slides.rst", "trainings/material/soup/kernel/dma/topic.rst", "trainings/material/soup/kernel/fedora-kernel-build/screenplay.rst", "trainings/material/soup/kernel/fedora-kernel-build/topic.rst", "trainings/material/soup/kernel/fedora-module-build/screenplay.rst", "trainings/material/soup/kernel/fedora-module-build/topic.rst", "trainings/material/soup/kernel/group.rst", "trainings/material/soup/kernel/hello-world/slides.rst", "trainings/material/soup/kernel/hello-world/topic.rst", "trainings/material/soup/kernel/interrupt-coding/slides.rst", "trainings/material/soup/kernel/interrupt-coding/topic.rst", "trainings/material/soup/kernel/interrupt/slides.rst", "trainings/material/soup/kernel/interrupt/topic.rst", "trainings/material/soup/kernel/iomemory/slides.rst", "trainings/material/soup/kernel/iomemory/topic.rst", "trainings/material/soup/kernel/kmalloc/slides.rst", "trainings/material/soup/kernel/kmalloc/topic.rst", "trainings/material/soup/kernel/list/slides.rst", "trainings/material/soup/kernel/list/topic.rst", "trainings/material/soup/kernel/mutex-coding/slides.rst", "trainings/material/soup/kernel/mutex-coding/topic.rst", "trainings/material/soup/kernel/mutex/slides.rst", "trainings/material/soup/kernel/mutex/topic.rst", "trainings/material/soup/kernel/netdev/slides.rst", "trainings/material/soup/kernel/netdev/topic.rst", "trainings/material/soup/kernel/pci/slides.rst", "trainings/material/soup/kernel/pci/topic.rst", "trainings/material/soup/kernel/process-vs-atomic/slides.rst", "trainings/material/soup/kernel/process-vs-atomic/topic.rst", "trainings/material/soup/kernel/raspi-kernel-build/story.rst", "trainings/material/soup/kernel/raspi-kernel-build/topic.rst", "trainings/material/soup/kernel/sample-project.rst", "trainings/material/soup/kernel/spinlock-coding/slides.rst", "trainings/material/soup/kernel/spinlock-coding/topic.rst", "trainings/material/soup/kernel/spinlock/slides.rst", "trainings/material/soup/kernel/spinlock/topic.rst", "trainings/material/soup/kernel/stub-sysprog-dup/topic.rst", "trainings/material/soup/kernel/time_timer-coding/slides.rst", "trainings/material/soup/kernel/time_timer-coding/topic.rst", "trainings/material/soup/kernel/time_timer/slides.rst", "trainings/material/soup/kernel/time_timer/topic.rst", "trainings/material/soup/kernel/todo.rst", "trainings/material/soup/kernel/usermem/screenplay.rst", "trainings/material/soup/kernel/usermem/slides.rst", "trainings/material/soup/kernel/usermem/topic.rst", "trainings/material/soup/kernel/waitqueue/screenplay.rst", "trainings/material/soup/kernel/waitqueue/slides.rst", "trainings/material/soup/kernel/waitqueue/topic.rst", "trainings/material/soup/kernel/workqueue/screenplay.rst", "trainings/material/soup/kernel/workqueue/slides.rst", "trainings/material/soup/kernel/workqueue/topic.rst", "trainings/material/soup/linux/basics/archiving-compression/exercises.rst", "trainings/material/soup/linux/basics/archiving-compression/group.rst", "trainings/material/soup/linux/basics/archiving-compression/gzip.rst", "trainings/material/soup/linux/basics/archiving-compression/overview.rst", "trainings/material/soup/linux/basics/archiving-compression/tar.rst", "trainings/material/soup/linux/basics/exercises/FH-SS2022-EXAM-01-G1.rst", "trainings/material/soup/linux/basics/exercises/FH-SS2022-EXAM-01-G2.rst", "trainings/material/soup/linux/basics/exercises/group.rst", "trainings/material/soup/linux/basics/group.rst", "trainings/material/soup/linux/basics/intro/demo-everything-is-a-file.rst", "trainings/material/soup/linux/basics/intro/environment.rst", "trainings/material/soup/linux/basics/intro/exercises/fh-questions.rst", "trainings/material/soup/linux/basics/intro/exercises/fh-solutions.rst", "trainings/material/soup/linux/basics/intro/group.rst", "trainings/material/soup/linux/basics/intro/login.rst", "trainings/material/soup/linux/basics/intro/overview.rst", "trainings/material/soup/linux/basics/intro/process.rst", "trainings/material/soup/linux/basics/intro/process-tree.rst", "trainings/material/soup/linux/basics/intro/wsl.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/exercises.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/group.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/io-redirection.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/io-redirection-swap-stdout-stderr.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/pipes.rst", "trainings/material/soup/linux/basics/permissions/basics.rst", "trainings/material/soup/linux/basics/permissions/exercises/credentials.rst", "trainings/material/soup/linux/basics/permissions/exercises/fh-questions.rst", "trainings/material/soup/linux/basics/permissions/exercises/fh-questions-nocheat.rst", "trainings/material/soup/linux/basics/permissions/exercises/group.rst", "trainings/material/soup/linux/basics/permissions/exercises/private-directory.rst", "trainings/material/soup/linux/basics/permissions/exercises/private-directory-question.rst", "trainings/material/soup/linux/basics/permissions/exercises/public-directory.rst", "trainings/material/soup/linux/basics/permissions/exercises/public-directory-question.rst", "trainings/material/soup/linux/basics/permissions/exercises/shared-file.rst", "trainings/material/soup/linux/basics/permissions/group.rst", "trainings/material/soup/linux/basics/permissions/setuid.rst", "trainings/material/soup/linux/basics/permissions/setuid-livedemo.rst", "trainings/material/soup/linux/basics/permissions/sticky.rst", "trainings/material/soup/linux/basics/permissions/umask.rst", "trainings/material/soup/linux/basics/shell/commandline.rst", "trainings/material/soup/linux/basics/shell/configfiles.rst", "trainings/material/soup/linux/basics/shell/cp.rst", "trainings/material/soup/linux/basics/shell/cwd.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/copy-tree.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-copy-files.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-create-files.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-move-files.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/group.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/mkdir-p-rm-r.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/rm-rf.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/rm-tree.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/verify-hierarchy.rst", "trainings/material/soup/linux/basics/shell/exercises/fh-questions.rst", "trainings/material/soup/linux/basics/shell/exercises/group.rst", "trainings/material/soup/linux/basics/shell/exercises/ls/dev-types.rst", "trainings/material/soup/linux/basics/shell/exercises/ls/etc-passwd-size.rst", "trainings/material/soup/linux/basics/shell/exercises/ls/group.rst", "trainings/material/soup/linux/basics/shell/exercises/ls/home-permissions.rst", "trainings/material/soup/linux/basics/shell/file_dir_create_rm.rst", "trainings/material/soup/linux/basics/shell/group.rst", "trainings/material/soup/linux/basics/shell/links.rst", "trainings/material/soup/linux/basics/shell/ls.rst", "trainings/material/soup/linux/basics/shell/mv.rst", "trainings/material/soup/linux/basics/shell/paths.rst", "trainings/material/soup/linux/basics/text-tools/cat.rst", "trainings/material/soup/linux/basics/text-tools/cut.rst", "trainings/material/soup/linux/basics/text-tools/exercises.rst", "trainings/material/soup/linux/basics/text-tools/find.rst", "trainings/material/soup/linux/basics/text-tools/grep.rst", "trainings/material/soup/linux/basics/text-tools/group.rst", "trainings/material/soup/linux/basics/text-tools/head-tail.rst", "trainings/material/soup/linux/basics/text-tools/less.rst", "trainings/material/soup/linux/basics/text-tools/overview.rst", "trainings/material/soup/linux/drafts/group.rst", "trainings/material/soup/linux/drafts/yocto.rst", "trainings/material/soup/linux/group.rst", "trainings/material/soup/linux/hardware/brushless-motor/topic.rst", "trainings/material/soup/linux/hardware/can/10-intro.rst", "trainings/material/soup/linux/hardware/can/20-interfaces.rst", "trainings/material/soup/linux/hardware/can/30-programming.rst", "trainings/material/soup/linux/hardware/can/40-harware.rst", "trainings/material/soup/linux/hardware/can/group.rst", "trainings/material/soup/linux/hardware/group.rst", "trainings/material/soup/linux/hardware/i2c/topic.rst", "trainings/material/soup/linux/hardware/pwm/topic.rst", "trainings/material/soup/linux/hardware/w1/topic.rst", "trainings/material/soup/linux/ssh/basics.rst", "trainings/material/soup/linux/ssh/exercises/copy-file.rst", "trainings/material/soup/linux/ssh/exercises/copy-tree.rst", "trainings/material/soup/linux/ssh/exercises/group.rst", "trainings/material/soup/linux/ssh/exercises/pubkey.rst", "trainings/material/soup/linux/ssh/group.rst", "trainings/material/soup/linux/ssh/key-pair.rst", "trainings/material/soup/linux/ssh/links.rst", "trainings/material/soup/linux/ssh/portforwarding.rst", "trainings/material/soup/linux/ssh/scp.rst", "trainings/material/soup/linux/ssh/sshfs.rst", "trainings/material/soup/linux/sysprog/basics/errorhandling.rst", "trainings/material/soup/linux/sysprog/basics/group.rst", "trainings/material/soup/linux/sysprog/basics/syscalls.rst", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io.rst", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-file.rst", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-network.rst", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-timer.rst", "trainings/material/soup/linux/sysprog/blocking-io/group.rst", "trainings/material/soup/linux/sysprog/file-io/basics.rst", "trainings/material/soup/linux/sysprog/file-io/basics-exercise-copy/exercise.rst", "trainings/material/soup/linux/sysprog/file-io/basics-exercise-hole.rst", "trainings/material/soup/linux/sysprog/file-io/duplicate.rst", "trainings/material/soup/linux/sysprog/file-io/example-O_CREAT.rst", "trainings/material/soup/linux/sysprog/file-io/example-O_EXCL.rst", "trainings/material/soup/linux/sysprog/file-io/example-O_RDONLY.rst", "trainings/material/soup/linux/sysprog/file-io/example-O_WRONLY.rst", "trainings/material/soup/linux/sysprog/file-io/exercise-sensor-read.rst", "trainings/material/soup/linux/sysprog/file-io/group.rst", "trainings/material/soup/linux/sysprog/file-io/misc.rst", "trainings/material/soup/linux/sysprog/group.rst", "trainings/material/soup/linux/sysprog/intro-hw/get.rst", "trainings/material/soup/linux/sysprog/intro-hw/group.rst", "trainings/material/soup/linux/sysprog/intro-hw/sysfs-gpio.rst", "trainings/material/soup/linux/sysprog/intro-hw/watch.rst", "trainings/material/soup/linux/sysprog/posix-threads/010-introduction/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/020-lifecycle/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/030-exercise-pthcreate-race-condition/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/040-mutex/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/050-exercise-mutex/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/060-condition-variable/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/070-exercise-condition-variable/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/080-miscellaneous/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/090-last-warning/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/group.rst", "trainings/material/soup/linux/sysprog/posix-threads/locked-trylock.rst", "trainings/material/soup/linux/sysprog/process/commandline.rst", "trainings/material/soup/linux/sysprog/process/group.rst", "trainings/material/soup/linux/sysprog/process/tree.rst", "trainings/material/soup/linux/sysprog/scheduling/basics.rst", "trainings/material/soup/linux/sysprog/scheduling/group.rst", "trainings/material/soup/linux/sysprog/scheduling/processes-and-threads.rst", "trainings/material/soup/linux/sysprog/scheduling/questions.rst", "trainings/material/soup/linux/sysprog/scheduling/realtime.rst", "trainings/material/soup/linux/sysprog/scheduling/realtime-api.rst", "trainings/material/soup/linux/sysprog/scheduling/wakup-latency.rst", "trainings/material/soup/linux/sysprog/sysprog_events/code/index.rst", "trainings/material/soup/linux/sysprog/sysprog_events/screenplay.rst", "trainings/material/soup/linux/sysprog/sysprog_events/topic.rst", "trainings/material/soup/linux/sysprog/sysprog_ipc/code/index.rst", "trainings/material/soup/linux/sysprog/sysprog_ipc/screenplay.rst", "trainings/material/soup/linux/sysprog/sysprog_ipc/slides.rst", "trainings/material/soup/linux/sysprog/sysprog_ipc/topic.rst", "trainings/material/soup/linux/sysprog/sysprog_signals/code/index.rst", "trainings/material/soup/linux/sysprog/sysprog_signals/screenplay.rst", "trainings/material/soup/linux/sysprog/sysprog_signals/slides.rst", "trainings/material/soup/linux/sysprog/sysprog_signals/topic.rst", "trainings/material/soup/linux/toolchain/basics/topic.rst", "trainings/material/soup/linux/toolchain/cmake/cross.rst", "trainings/material/soup/linux/toolchain/cmake/local.rst", "trainings/material/soup/linux/toolchain/cross/basics.rst", "trainings/material/soup/linux/toolchain/cross/group.rst", "trainings/material/soup/linux/toolchain/exercises/cross-build.rst", "trainings/material/soup/linux/toolchain/exercises/fh-questions.rst", "trainings/material/soup/linux/toolchain/exercises/fh-solutions.rst", "trainings/material/soup/linux/toolchain/exercises/group.rst", "trainings/material/soup/linux/toolchain/exercises/native-build.rst", "trainings/material/soup/linux/toolchain/exercises/raspberry-toolchain.rst", "trainings/material/soup/linux/toolchain/group.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/group.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/linaro.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-build-details.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-build-docker-fedora.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-setup.rst", "trainings/material/soup/linux/toolchain/separate-compilation/topic.rst", "trainings/material/soup/linux/toolchain/shared-libraries/topic.rst", "trainings/material/soup/linux/toolchain/static-library/topic.rst", "trainings/material/soup/python/advanced/closures/topic.rst", "trainings/material/soup/python/advanced/comprehensions/topic.rst", "trainings/material/soup/python/advanced/context-mgr/topic.rst", "trainings/material/soup/python/advanced/decorators/topic.rst", "trainings/material/soup/python/advanced/exceptions/topic.rst", "trainings/material/soup/python/advanced/exec/topic.rst", "trainings/material/soup/python/advanced/group.rst", "trainings/material/soup/python/advanced/iteration-generation/iteration-generation/topic.rst", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/fibonacci-generator.rst", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/iterator-protocol.rst", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/topic.rst", "trainings/material/soup/python/advanced/iteration-generation/topic.rst", "trainings/material/soup/python/advanced/modules.rst", "trainings/material/soup/python/advanced/multithreading/basics.rst", "trainings/material/soup/python/advanced/multithreading/group.rst", "trainings/material/soup/python/advanced/multithreading/mutex.rst", "trainings/material/soup/python/advanced/multithreading/questions.rst", "trainings/material/soup/python/advanced/oo/abc/topic.rst", "trainings/material/soup/python/advanced/oo/classes-and-dicts/topic.rst", "trainings/material/soup/python/advanced/oo/constructor/topic.rst", "trainings/material/soup/python/advanced/oo/group.rst", "trainings/material/soup/python/advanced/oo/inheritance/topic.rst", "trainings/material/soup/python/advanced/oo/methods/topic.rst", "trainings/material/soup/python/advanced/oo/namedtuple/topic.rst", "trainings/material/soup/python/advanced/oo/operator-overloading/topic.rst", "trainings/material/soup/python/advanced/oo/properties/topic.rst", "trainings/material/soup/python/advanced/oo/str-repr/topic.rst", "trainings/material/soup/python/advanced/starargs/topic.rst", "trainings/material/soup/python/basics/group.rst", "trainings/material/soup/python/basics/installation.rst", "trainings/material/soup/python/basics/python_0110_blahblah/topic.rst", "trainings/material/soup/python/basics/python_0120_helloworld/topic.rst", "trainings/material/soup/python/basics/python_0125_running/topic.rst", "trainings/material/soup/python/basics/python_0130_syntax_etc/topic.rst", "trainings/material/soup/python/basics/python_0139_commandline_argv/topic.rst", "trainings/material/soup/python/basics/python_0140_variables/topic.rst", "trainings/material/soup/python/basics/python_0150_datatypes_overview/topic.rst", "trainings/material/soup/python/basics/python_0150_datatypes_overview_compound/topic.rst", "trainings/material/soup/python/basics/python_0160_boolean/topic.rst", "trainings/material/soup/python/basics/python_0170_if/topic.rst", "trainings/material/soup/python/basics/python_0193_while/topic.rst", "trainings/material/soup/python/basics/python_0200_sequential_types/topic.rst", "trainings/material/soup/python/basics/python_0210_indexing_slicing/topic.rst", "trainings/material/soup/python/basics/python_0220_for/topic.rst", "trainings/material/soup/python/basics/python_0225_range/topic.rst", "trainings/material/soup/python/basics/python_0250_refs_flat_deep_copy/topic.rst", "trainings/material/soup/python/basics/python_0270_functions/screenplay-scoping.rst", "trainings/material/soup/python/basics/python_0270_functions/slideshow.rst", "trainings/material/soup/python/basics/python_0270_functions/topic.rst", "trainings/material/soup/python/basics/python_0300_strings/topic.rst", "trainings/material/soup/python/basics/python_0310_strings_formatting/topic.rst", "trainings/material/soup/python/basics/python_0320_strings_methods/topic.rst", "trainings/material/soup/python/basics/python_0400_lists/topic.rst", "trainings/material/soup/python/basics/python_0450_dictionaries/topic.rst", "trainings/material/soup/python/basics/python_0460_sets/topic.rst", "trainings/material/soup/python/basics/python_0500_files/topic.rst", "trainings/material/soup/python/basics/python_1000_function_objects/topic.rst", "trainings/material/soup/python/drafts/argparse/topic.rst", "trainings/material/soup/python/drafts/asyncio/topic.rst", "trainings/material/soup/python/drafts/group.rst", "trainings/material/soup/python/drafts/matplotlib/topic.rst", "trainings/material/soup/python/drafts/setuptools/topic.rst", "trainings/material/soup/python/exercises/csv/csv-db.rst", "trainings/material/soup/python/exercises/csv/csv-module.rst", "trainings/material/soup/python/exercises/csv/group.rst", "trainings/material/soup/python/exercises/group.rst", "trainings/material/soup/python/exercises/herdt/boolean.rst", "trainings/material/soup/python/exercises/herdt/exercise_while_even_numbers.rst", "trainings/material/soup/python/exercises/herdt/greet.rst", "trainings/material/soup/python/exercises/herdt/group.rst", "trainings/material/soup/python/exercises/herdt/max_numbers.rst", "trainings/material/soup/python/exercises/herdt/swap.rst", "trainings/material/soup/python/exercises/herdt/username_password.rst", "trainings/material/soup/python/exercises/legacy/cmdline_digit.rst", "trainings/material/soup/python/exercises/legacy/dict_keyerror.rst", "trainings/material/soup/python/exercises/legacy/distill.rst", "trainings/material/soup/python/exercises/legacy/fibonacci-generator.rst", "trainings/material/soup/python/exercises/legacy/for_primeness.rst", "trainings/material/soup/python/exercises/legacy/group.rst", "trainings/material/soup/python/exercises/legacy/join_function.rst", "trainings/material/soup/python/exercises/legacy/max_numbers.rst", "trainings/material/soup/python/exercises/legacy/max_numbers_function.rst", "trainings/material/soup/python/exercises/legacy/mixed_list_executable.rst", "trainings/material/soup/python/exercises/legacy/mixed_list_interactive.rst", "trainings/material/soup/python/exercises/legacy/passwd.rst", "trainings/material/soup/python/exercises/legacy/primeness_function.rst", "trainings/material/soup/python/exercises/legacy/revert.rst", "trainings/material/soup/python/exercises/legacy/string-rightjustify.rst", "trainings/material/soup/python/exercises/legacy/uniq_function.rst", "trainings/material/soup/python/exercises/legacy/uniq_generator.rst", "trainings/material/soup/python/exercises/legacy/wc.rst", "trainings/material/soup/python/exercises/legacy/while_primeness.rst", "trainings/material/soup/python/exercises/sensors/group.rst", "trainings/material/soup/python/exercises/sensors/project-setup.rst", "trainings/material/soup/python/exercises/sensors/sensor-const.rst", "trainings/material/soup/python/exercises/userdb/csvdictreader.rst", "trainings/material/soup/python/exercises/userdb/csvdictreader-function.rst", "trainings/material/soup/python/exercises/userdb/csvreader.rst", "trainings/material/soup/python/exercises/userdb/csvreader-function.rst", "trainings/material/soup/python/exercises/userdb/group.rst", "trainings/material/soup/python/exercises/userdb/mqtt-publish-csv.rst", "trainings/material/soup/python/exercises/userdb/user-class-person.rst", "trainings/material/soup/python/exercises/userdb/user_json.rst", "trainings/material/soup/python/exercises/userdb/userdb_csv.rst", "trainings/material/soup/python/graph.rst", "trainings/material/soup/python/group.rst", "trainings/material/soup/python/link-collection.rst", "trainings/material/soup/python/misc/ai/group.rst", "trainings/material/soup/python/misc/ai/k-means.rst", "trainings/material/soup/python/misc/ai/linear-regression/code.rst", "trainings/material/soup/python/misc/ai/linear-regression/history_data.rst", "trainings/material/soup/python/misc/ai/linear-regression/linear_regression.ipynb", "trainings/material/soup/python/misc/ai/linear-regression/topic.rst", "trainings/material/soup/python/misc/ai/machine-learning-intro.rst", "trainings/material/soup/python/misc/csv/topic.rst", "trainings/material/soup/python/misc/db/dbapi2.rst", "trainings/material/soup/python/misc/db/group.rst", "trainings/material/soup/python/misc/db/postgres.rst", "trainings/material/soup/python/misc/db/sqlite3.rst", "trainings/material/soup/python/misc/encoding/topic.rst", "trainings/material/soup/python/misc/group.rst", "trainings/material/soup/python/misc/import.rst", "trainings/material/soup/python/misc/mqtt/topic.rst", "trainings/material/soup/python/misc/pandas/add_row.rst", "trainings/material/soup/python/misc/pandas/basics.rst", "trainings/material/soup/python/misc/pandas/filters.rst", "trainings/material/soup/python/misc/pandas/group.rst", "trainings/material/soup/python/misc/pandas/iloc.rst", "trainings/material/soup/python/misc/pandas/indexes.rst", "trainings/material/soup/python/misc/pandas/loc.rst", "trainings/material/soup/python/misc/pandas/mod_col.rst", "trainings/material/soup/python/misc/python_5550_xml_etree/topic.rst", "trainings/material/soup/python/misc/vscode.rst", "trainings/material/soup/python/swdev/group.rst", "trainings/material/soup/python/swdev/pip/screenplay.rst", "trainings/material/soup/python/swdev/pip/slides.rst", "trainings/material/soup/python/swdev/pip/topic.rst", "trainings/material/soup/python/swdev/pypi.rst", "trainings/material/soup/python/swdev/pytest/group.rst", "trainings/material/soup/python/swdev/pytest/intro.rst", "trainings/material/soup/python/swdev/unittest.rst", "trainings/material/soup/python/swdev/venv/screenplay.rst", "trainings/material/soup/python/swdev/venv/slides.rst", "trainings/material/soup/python/swdev/venv/topic.rst", "trainings/material/soup/unittest/group.rst", "trainings/material/soup/unittest/unittest_gtest_basics/code/index.rst", "trainings/material/soup/unittest/unittest_gtest_basics/screenplay.rst", "trainings/material/soup/unittest/unittest_gtest_basics/topic.rst", "trainings/material/soup/unittest/unittest_gtest_cmake/screenplay.rst", "trainings/material/soup/unittest/unittest_gtest_cmake/topic.rst", "trainings/material/soup/unittest/unittest_gtest_fixture/code/index.rst", "trainings/material/soup/unittest/unittest_gtest_fixture/screenplay.rst", "trainings/material/soup/unittest/unittest_gtest_fixture/topic.rst", "trainings/org.rst", "trainings/repertoire/_hidden/kettner-lfs-2013-09-16.rst", "trainings/repertoire/bash.rst", "trainings/repertoire/c-like/c.rst", "trainings/repertoire/c-like/c-advanced.rst", "trainings/repertoire/c-like/cxx.rst", "trainings/repertoire/c-like/cxx11.rst", "trainings/repertoire/c-like/index.rst", "trainings/repertoire/cmake.rst", "trainings/repertoire/design-patterns/design-patterns.rst", "trainings/repertoire/embedded.rst", "trainings/repertoire/kernel-programming-basics.rst", "trainings/repertoire/linux-basics.rst", "trainings/repertoire/make.rst", "trainings/repertoire/python/advanced.rst", "trainings/repertoire/python/basics.rst", "trainings/repertoire/python/herdt.rst", "trainings/repertoire/raspi-hands-on.rst", "trainings/repertoire/svn.rst", "trainings/repertoire/sysprog/basics.rst", "trainings/repertoire/sysprog/fortgeschrittenes.rst", "trainings/repertoire/sysprog/index.rst", "trainings/repertoire/sysprog/multithreading.rst", "trainings/repertoire/sysprog/network.rst", "trainings/repertoire/unittests.rst"], "titles": ["Kontakt", "Curriculum Vitae", "\u00dcber Mich", "Projekte", "Skills", "Angebot: In-House Schulungen", "Course Material", "Einleitung", "Python Basics (2021-xx-xx - 2021-yy-yy)", "Programmierung Grundlagen (Jupyter Notebook)", "Details", "Course List", "Templates for Course Descriptions", "About This Site", "OpenTraining", "Draft Topics", "Miscellaneous", "S5 Integration", "S5 Slide Tests", "Level 1 Heading", "Screencasts", "Topics to be Written", "Netidee F\u00f6rderantrag", "Netidee F\u00f6rderantrag: OpenTraining", "Video Screenplay", "Use Case: Custom Training, Subtract Known", "Use Case: Calculate Minimum Training Duration", "Use Cases", "Use Case: Use Training Material From Other Sites", "Use Case: Menu to Choose From", "Use Case: Slide Show Material as Plain-Text Files", "Sending A V4L Camera Device Output Over SSH", "Emoji Codes (<code class=\"docutils literal notranslate\"><span class=\"pre\">sphinxemoji</span></code>)", "Recipes", "<code class=\"docutils literal notranslate\"><span class=\"pre\">isoamsa.txt</span></code>: Added Mathematical Symbols: Arrows", "<code class=\"docutils literal notranslate\"><span class=\"pre\">isoamsr.txt</span></code>: Added Mathematical Symbols: Relations", "<code class=\"docutils literal notranslate\"><span class=\"pre\">isonum.txt</span></code>: Added Mathematical Symbols: Binary Operators", "Layout Test Page", "<code class=\"docutils literal notranslate\"><span class=\"pre\">mmlalias.txt</span></code>: MathML aliases for entities from other sets", "reStructuredText Cheat Sheet", "Sphinxish", "Seminar on \u201cClean Code\u201d (2022-04-13)", "Live Hacking Before (Formal) Unit Testing", "Clean Code: Messages From The Book", "Live Hacking: Switch To <code class=\"docutils literal notranslate\"><span class=\"pre\">googletest</span></code>", "Is Software A Craft? Software Is A Craft!", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB::find()</span></code> Crashes If User Not Found", "Bugs", "Existing Files Are Overwritten", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB::read()</span></code>: What If Done Twice?", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB</span></code>: Alternative Output Format - CSV", "Features", "Search By Other Indexes", "Backlog: What Needs To Change, Or We Will All Die", "<code class=\"docutils literal notranslate\"><span class=\"pre\">BackingStore</span></code> Has Too Many Responsibilities \u27f6 Interface", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB</span></code> Has Too Many Responsibilities \u27f6 <code class=\"docutils literal notranslate\"><span class=\"pre\">BackingStore</span></code>", "Refactoring", "Load From BackingStore in Constructor", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB::{read,write}()</span></code>: <code class=\"docutils literal notranslate\"><span class=\"pre\">bool</span></code>, Really?", "GLT 2023: Pointless Blinking With Python, <code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> (and a Raspberry Pi of Course)", "Installation Notes", "Submission: Pointless Blinking With Python, <code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> (and a Raspberry Pi of Course)", "Screenplay: Pointless Blinking With Python, <code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> (and a Raspberry Pi of Course)", "GLT 2023 Submission: Pointless Blinking With Python, <code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> (and a Raspberry Pi of Course)", "GLT 2024: Python, asyncio, libgpiod, and Pointless Blinking", "Talk Script: Python, asyncio, libgpiod, and Pointless Blinking", "Slide Material: Python, asyncio, libgpiod, and Pointless Blinking", "Submission: Python, asyncio, libgpiod, and Pointless Blinking", "Pointless Blinking", "C++", "C++: Building with CMake", "C++: Interfaces", "C++: OO Basics", "C++: Unit Testing", "Graph", "Embedded Computing 1", "Embedded Computing 2", "EX: Race Conditions", "EX: Avoiding Race Condition", "Git Introduction", "Embedded Computing (STECE-2019)", "Linux", "Introduction to Linux and Unix", "Linux Hardware Device Management", "EX: Averaging Sensor", "EX: Averaging Sensor (parallel)", "EX: LED Temperature Display", "EX: Temperature Sensors", "GPIO", "Multithreading", "Avoiding Race Conditions: Semaphore/Mutex", "Communication: Waiting for Something", "Python Basics", "EX: Averaging Sensor, Display", "EX: Temperature Sensors", "Simple Web Programming", "Sensors Web Pages", "Python", "Embedded Computing STECE-2020)", "SS2022", "2022-03-08", "2022-03-10", "2022-03-10 (Homework until 2022-03-21)", "2022-03-21", "2022-03-22, 2022-03-24 (KU)", "2022-03-28", "2022-04-01", "SS2022: Logs", "WS2022", "FH Joanneum (Embedded Computing): WS2022/2023 (Questions About Code)", "FH Joanneum (Embedded Computing): WS2022/2023 (Yes/No Questions)", "Lab Exam 2023-01-17", "SS2023: Exam 2023-06-30 (Handout)", "SS2023: Exam 2023-06-30 (Solved)", "Exam: Embedded Computing 2 (2024-01-26)", "Exam: Embedded Computing 2 (2024-02-02)", "WS2023/2024: Exam 2024-02-02 (Sample)", "Exam WS2023/2024", "Questions 2024", "<code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code> Objects", "Parameter Passing", "SOLID: Hysteresis With Display", "SOLID: Sensor Has ID", "To Be Or Not To Be Virtual", "Working with Git In Our <code class=\"docutils literal notranslate\"><span class=\"pre\">FH-ECE21</span></code> Project", "Embedded Computing (STECE-2021)", "SS2023", "(DONE) Boiling Pot (The Beginning)", "Boiling Pot: Basic Integration", "Boiling Pot: Display, And Status Reporting", "Boiling Pot: Full Integration (Display And IoT)", "(DONE) Data Logger", "Data Logger: CSV Sink", "Data Logger: Integration", "Data Logger: MQTT Sink", "Display Interface/Infrastructure", "WS2023/24: Group Project - Tasks", "<code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> Switch", "Python MQTT Subscriber", "Temperature Display: LED Via A PWM Controller", "(DONE) Sensor Interface", "(DONE) Onewire Sensor", "(DONE) Switch Interface", "SysFS GPIO Switch", "WS2023/24", "Embedded Computing (STECE-2022)", "Gl\u00fchwein Trinken?", "2024-03-04(6): Introduction", "2024-03-21(6): OS Concepts, Shell, SSH", "2024-04-14(6): SSH, Permissions (Incl. Exercise)", "2024-04-17(6): Toolchain, Makefiles, CMake", "2024-04-22(6): CMake, Systems Programming/File-IO, Homework", "Exercise: Reading A Sensor (Driven By Tests)", "2024-05-06(3): Homework Recap, Exercise: Reading Sensor, Test Driven Development", "2024-05-13(3): Homework Recap, Cross Development Intro", "2024-05-27(6): Cross Development, Toolchain Installation", "2024-06-17(6): Container Templates", "2024-06-19(6): Sorting And Searching", "2024-06-20(3): Lab Exercise", "SS2024: Exam 2024-06-28 (Handout)", "2024-06-28: Written Exam", "Embedded Computing 1 (STECE-2022): Summer", "Embedded Computing 1 (STECE-2022): Material", "Embedded Computing 1 (STECE-2022): Syllabus", "Embedded Computing 2 (STECE-2022): Winter", "Embedded Computing 2 (STECE-2022): Material", "Embedded Computing 2 (STECE-2022): Syllabus", "Embedded Computing (FH Joanneum Graz)", "Git Notes", "Work in Progress", "Packaging this Site on PyPI", "Gaphor", "Hochk\u00f6nig", "Playground", "Sphinx", "Audio Chip Bringup", "Get Debian 10 Kernel Config", "Finish: Debian Kernel Package etc.", "Yocto Kernel Bringup on Customer Hardware", "I2S Audio for a Kontron SMARC Module", "Dirty Upgrade Path", "Wait for Customer Hardware", "Extract Kernel from Intel Yocto BSP", "Python Training Improvements", "Creating Screencasts", "SEO", "Stacks (Hanging)", "Miscellaneous To Do", "Learning The Web", "Beagleboard: How to Repair NAND (also known as 40W)", "Porting to Linux (There\u2019s Always A Better Way)", "Saving Solid State Disk Life (Gentoo)", "\u201cWhy <code class=\"docutils literal notranslate\"><span class=\"pre\">ps</span></code> Sucks\u201d or \u201cCounting Memory Consumption\u201d", "Patching and Building the Fedora Kernel", "Adding a Custom Domain to a Github Pages Project Site", "Using Microsoft Teams on Linux", "Deploying Sphinx Generated Documentation to Github Pages", "Using BigBlueButton for Online Training", "Traunstein via Zierlersteig", "Grintovec (via Plan\u0161arsko Jezero, \u010ce\u0161ka Ko\u010da)", "How to Brick a \u20ac1399 Dell XPS 13", "Building A Cross Toolchain For The Raspberry Pi, Using <code class=\"docutils literal notranslate\"><span class=\"pre\">crosstool-ng</span></code>", "Posts", "Linux und Open Source", "Richtlinien zur Ver\u00f6ffentlichung von Kursmaterial", "Exercises", "Courses: Overview", "Qualivision, Z\u00fcrich, 1.10.2013", "Kursnotizen: Linux Embedded 2015-11-30", "Live Hacking", "Python Individualtraining (5 Tage, beginnend 28.10.2019)", "Goals of this Training", "Random Live Hacking", "Python (12.11.2019 - 14.11.2019 in Graz)", "Proposal", "IPC in Linux (10.1.2020 in Graz)", "\u00dcbung: handgestrickter String, um die Fallen von C++ lustvoll zu erleiden", "C++ f\u00fcr Embedded C Programmierer (30.3.2020 - 3.4.2020 Baden W\u00fcrttemberg)", "Installing <code class=\"docutils literal notranslate\"><span class=\"pre\">googletest</span></code> By Hand", "Software Setup, Build", "Argh: Using This Site With Visual Studio Code", "Code", "Python Grundlagen (13.5.2020 - 14.5.2020 bei einer Firma in Graz)", "Python Schulung 18. und 19.5.2020", "Code", "Python Individualtraining (18.5.2020 - 19.5.2020)", "Python Advanced (7.9.2020 - 10.9.2020)", "Python Basics (28.9.2020 - 30.9.2020)", "Iterables", "Python Basic and Advanced (19.10.2020 - 22.10.2020)", "Linux on Raspberry Pi", "Python Basics (23.11.2020 - 25.11.2020)", "Linux Basics (30.11.2020 - 3.12.2020)", "6 Grundlegende Sprachelemente", "Programmierung Grundlagen (13. und 14.1.2021)", "Programmierung Grundlagen (Jupyter Notebook)", "Python Basics (22.2.2021 - 24.2.2021)", "Linux Kernel Driver Development Basics (14.12.2020)", "Python Advanced", "2021-03-15", "Hallo Jupyter Notebook", "Python Basic and Advanced (22.3.2021 - 25.3.2021)", "Linux Basics, Shell Scripting (2021-03-29)", "Einleitung", "Programmierung Grundlagen (12. und 13.4.2021)", "Programmierung Grundlagen (Jupyter Notebook)", "Syntax etc.", "Python Grundlagen (2021-05-03 - 2021-05-05)", "Python Grundlagen (Jupyter Notebook)", "Das <code class=\"docutils literal notranslate\"><span class=\"pre\">with</span></code> Statement", "Python Advanced (2021-05-25 - 2021-05-27)", "Programmieren mit C (2021-06-14 - 2021-06-18)", "The C++ Programming Language (2021-07-12 - 2021-07-16)", "Programmierung Grundlagen, anhand von Python (2. und 3.8.2021)", "Datenstrukturen", "Compound Datatypes", "Read a Cleaned-Up SAP Export", "Python Grundlagen (2021-08-23 - 2021-08-25)", "Jupyter Notebook", "Initial Terminology", "Python Basics (2021-08-31 - 2021-09-01)", "Python Grundlagen (Jupyter Notebook)", "2021-11-17", "Python Basics (2021-11-17 - 2021-11-19)", "Python Grundlagen (Jupyter Notebook)", "Notebook", "Python Advanced (2021-12-01 - 2021-12-03)", "Python Grundlagen (Jupyter Notebook)", "C/C++ Programming (2021-12-06 - 2021-12-10, 2022-01-24 - 2022-02-04)", "Programmierung Grundlagen, anhand von Python (2022-01-17 - 2022-01-10)", "2022-01-17", "Programmierung Grundlagen (Jupyter Notebook)", "Datatypes", "Python Basics (2022-02-23 - 2022-02-25)", "Jupyter Notebook", "Wiederholung", "Python Advanced (2022-03-15 - 2022-03-17, 2022-03-31)", "Jupyter Notebook", "Hello World", "Python (2022-03-23, 2022-03-30, 2022-04-19 - 2022-03-21)", "Jupyter Notebook", "Programmierung Grundlagen, anhand von Python (2022-04-05 - 2022-04-08)", "BlahBlah", "Programmierung Grundlagen (Jupyter Notebook)", "Python Basics (2022-04-25 - 2022-04-27)", "BlahBlah", "Python Grundlagen (Jupyter Notebook)", "Python (2022-05-02 - 2022-05-05)", "Hello Jupyter Notebook", "Python Grundlagen (Jupyter Notebook)", "Python Advanced (2022-05-16 - 2022-05-18)", "Assert", "Python Grundlagen (Jupyter Notebook)", "Vorbesprechung 2022-05-11", "C++: A New Language Starting In 2011", "C++: A New Language Starting In 2011", "Linux Basics (2022-10-03 - 2022-10-05)", "C++: A New Language Starting In 2011 (2022-10-11 - 2022-10-13)", "Design- and Architectural Patterns With C++ (2022-10-24 - 2022-10-26)", "Python: Tour-De-Force (2022-11-07 - 2022-11-10, 2022-12-01)", "Python (2022-10-17)", "Python Grundlagen (Jupyter Notebook)", "Python (2022-11-16 - 2022-11-18)", "Python (2022-11-16 - 2022-11-18)", "Python Grundlagen (Jupyter Notebook)", "Linux Basics (2023-01-23 - 2023-01-26)", "Embedded Linux Systems Programming (2023-02-13 - 2023-02-17)", "Whetting Your Appetite (Jupyter Notebook)", "Whetting Your Appetite (Livehacking Demo)", "Python For SAP Developers (2023-03-13 - 2023-03-15)", "2023-03-13", "Python For SAP Developers (Jupyter Notebook)", "Original Agenda: Python For SAP Developers (2023-03-13 - 2023-03-15)", "Hacking About On A SAP Test Dataset", "Some Usecases On A Test Dataset From SAP", "C++ For Embedded Developers (2023-03-20 - 2023-03-23)", "Clean Code Development With Python (2023-03-28 - 2023-03-29)", "C++ For Embedded Developers (2023-04-18 - 2023-04-20)", "Agenda: Python Advanced (2023-04-24 - 2023-04-26)", "Python Advanced (2023-04-24 - 2023-04-26)", "Jupyter Notebook: Python Advanced (2023-04-24 - 2023-04-26)", "Jupyter Notebook (Structure): Python Advanced (2023-04-24 - 2023-04-26)", "Agenda: Python Basics (2023-05-15 - 2023-05-17)", "Python Basics (2023-05-15 - 2023-05-17)", "Python Basics (2023-05-15 - 2023-05-17)", "Python Grundlagen (Jupyter Notebook)", "Agenda: Linux Basics (2023-05-23 - 2023-05-25)", "Linux Basics (2023-05-23 - 2023-05-25)", "Agenda: Python Basics (2023-06-20 - 2023-06-22)", "Python Basics (2023-06-20 - 2023-06-22)", "Python Basics (2023-06-20 - 2023-06-22)", "Python Basics (Jupyter Notebook)", "Agenda: CMake (2023-07-03)", "CMake: An Introduction (2023-07-18)", "Python Advanced (2023-09-25 - 2023-09-27)", "Python Advanced (2023-09-25 - 2023-09-27)", "Python Advanced, Jupyter Notebook (2023-09-25 - 2023-09-27)", "Python Advanced (2023-10-09 - 2023-10-11)", "Python Advanced (2023-10-09 - 2023-10-09)", "Python Advanced, Jupyter Notebook (2023-09-25 - 2023-09-27)", "Agenda: Python Advanced (2023-10-24 - 2023-10-26)", "Python Advanced (2023-10-24 - 2023-10-26)", "Jupyter Notebook: Python Advanced", "Jupyter Notebook (Structure): Python Advanced (2023-10-24 - 2023-10-26)", "Agenda: Python Advanced (2023-11-22 - 2023-11-24)", "Python Advanced (2023-11-22 - 2023-22-24)", "Jupyter Notebook: Python Advanced (2023-11-22 - 2023-11-24)", "Jupyter Notebook (Structure): Python Advanced (2023-11-22 - 2023-11-24)", "Agenda: CMake (2023-11-27)", "CMake: An Introduction (2023-11-27)", "Agenda: Python Basics (2023-11-29 - 2023-12-01)", "Python Basics (2023-11-29 - 2023-12-01)", "Python Basics (2023-11-29 - 2023-12-01)", "Python Basics (Jupyter Notebook)", "Agenda: C++: Advanced Topics", "C++: Advanced Topics (2023-12-04 - 2023-12-06)", "Agenda: Python Basics (2023-12-18 - 2023-12-20)", "Python Basics (2023-12-18 - 2023-12-20)", "Python Basics (2023-12-18 - 2023-12-20)", "Python Basics (2023-12-18 - 2023-12-20)", "C++ For Embedded Developers (Beginning of 2023)", "Python/SAP", "Agenda: Python Advanced (2024-01-15 - 2024-01-17)", "Python Advanced (2024-01-15 - 2024-01-17)", "Python Advanced (2023-01-15 - 2024-01-17)", "Python Advanced (2024-01-15 - 2024-01-17)", "Agenda: Python Basics (2024-01-29 - 2024-01-31)", "Python Basics (2024-01-29 - 2024-01-31)", "Python Basics (2024-01-29 - 2024-01-31)", "Jupyter Notebook: Python Basics (2024-01-29 - 2024-01-31)", "Agenda: Linux Basics (2024-03-11 - 2024-03-13)", "Linux Basics (2024-03-11 - 2024-03-13)", "Refactoring, Unit Testing, And Test Driven Development In Python (2024-04-09 - 2024-04-11)", "Agenda: C++: A Thorough Overview (2024-06-03)", "C++: A Thorough Overview (2024-06-03)", "Agenda: CMake: Advanced Topics (2024-06-11)", "CMake: Advanced Topics (2024-06-11)", "CMake: An Introduction (2024-06-18)", "Agenda: CMake: Advanced Topics (2024-06-11)", "CMake: Advanced Topics (2024-07-01)", "Agenda: C++: A Thorough Overview", "C++: A Thorough Overview", "Screenplay Checker", "GPIO: Blinklicht", "GPIO: Blinklicht Interface", "GPIO: Object Oriented Blinklicht", "GPIO: Blinklicht Unittests", "ECE19: Exercises and Custom Topics", "Reading a File", "2021-05-20 (G2)", "2021-05-21", "Tuple Unpacking", "Basics", "An Example", "Cloud Computer, SSH Login", "Formalit\u00e4ten", "Embedded Computing 1 (ECE 19)", "Daily Log", "Embedded Computing 1 (Deutsch)", "Embedded Computing 1 (English)", "Plan for Summer 2021", "2021-10-07", "2021-10-12 (Bringing Newcomers Up-to-Date)", "2021-10-28", "2021-11-15", "2021-11-29", "2021-12-1{4,5}", "2022-01-10", "2022-01-12", "2022-02-15", "Agenda/Log", "Embedded Computing 2 (ECE 19)", "Exam Material Overview", "Embedded Computing 1+2, ECE 19", "Details", "Bisher Gehaltene", "Training Material: Overview and Download", "Installation", "Introduction", "Hello World", "Variables and Arithmetic", "Exercise: A Better Fahrenheit Table", "<code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code> Loops", "Exercise: Fahrenheit Table Using <code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code>", "Symbolic Constants", "Exercise: Fahrenheit Table Using Macros", "Character I/O", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">wc</span></code> For The Poor", "Arrays", "Exercise: Character Histogram", "Functions", "Exercise: Forward Declaration", "Character Arrays", "Exercise: Read Line Into String from <code class=\"docutils literal notranslate\"><span class=\"pre\">stdin</span></code>", "Lifetime of Variables", "Introduction", "Type System", "Variable Names", "Data Types, Sizes", "Constants", "Variable Definitions", "Arithmetic Operators", "Relational and Logical Operators", "Type Conversions", "Increment, Decrement", "Exercise: Copy and Reduce String", "Bit-Operators", "Assignment with Calculation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">?:</span></code> - Conditional Expression", "Precedence, Associativity", "Types, Operators, Expressions", "Statements and Blocks", "<code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code> - <code class=\"docutils literal notranslate\"><span class=\"pre\">else</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">else</span></code> - <code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">switch</span></code>", "Loops: <code class=\"docutils literal notranslate\"><span class=\"pre\">while</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code>", "Loops: <code class=\"docutils literal notranslate\"><span class=\"pre\">do</span> <span class=\"pre\">-</span> <span class=\"pre\">while</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">break</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">continue</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">goto</span></code> and Labels", "Program Flow", "Basics", "Extern/Global Variables", "Header Files", "Static Variables", "C Preprocessor: Basics", "C Preprocessor: More", "Functions and Program Structure", "Pointers and Addresses", "Pointers as Function Parameters", "Exercise: Function That Swaps Two Variables", "Pointers and Arrays", "Commandline Arguments", "Pointers and Arrays", "<code class=\"docutils literal notranslate\"><span class=\"pre\">struct</span></code>: Basics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">struct</span></code>: Functions", "<code class=\"docutils literal notranslate\"><span class=\"pre\">typedef</span></code>: Type Alias", "Structures", "Dynamic Memory", "Singly Linked List", "Memory", "Volatile", "Compiler Intrinsics", "Alignment", "Advanced Language Features", "Sanity and Readabilty", "Know Your Integers", "Discrete Values - <code class=\"docutils literal notranslate\"><span class=\"pre\">enum</span></code>", "Visibility - <code class=\"docutils literal notranslate\"><span class=\"pre\">static</span></code>", "Correctness - <code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code>", "Struct Initialization", "Explict Type Safety", "<code class=\"docutils literal notranslate\"><span class=\"pre\">valgrind</span></code>", "Program Sanity", "Optimization", "Optimizations: Compute Bound Code", "Optimizations: Memory Optimizations", "Performance", "Introduction", "GNU Profiler - <code class=\"docutils literal notranslate\"><span class=\"pre\">gprof</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">callgrind</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">oprofile</span></code>", "Profiling", "The C Programming Language", "Messages From The Book", "What\u2019s There? What Have We Accomplished?", "Is Software A Craft? Software Is A Craft! \u27f6 <em>Clean Code</em>", "A Typical Project (Livehacking Screenplay: My Own Bookkeeping Effort)", "Screenplay: Generated Code (<code class=\"docutils literal notranslate\"><span class=\"pre\">add_custom_command()</span></code>)", "Optional Code, Approach 1: Optional <code class=\"docutils literal notranslate\"><span class=\"pre\">blacklist</span></code>, C Macro  (Global Flags)", "Optional Code, Approach 2: Pushing Optionality Down In Module <em>Interface</em>", "Optional Code: Problem Definition, <code class=\"docutils literal notranslate\"><span class=\"pre\">OPTION()</span></code>", "\u201cConfigured\u201d Header Files", "Screenplay: Integrating <code class=\"docutils literal notranslate\"><span class=\"pre\">libmosquitto</span></code> (MQTT - Handwritten Find-Module)", "Screenplay: Adding <code class=\"docutils literal notranslate\"><span class=\"pre\">SQLite3</span></code> External Dependency", "Screenplay: Making <code class=\"docutils literal notranslate\"><span class=\"pre\">SQLite3</span></code> Optional (<code class=\"docutils literal notranslate\"><span class=\"pre\">configure_file()</span></code>)", "Screenplay: Making <code class=\"docutils literal notranslate\"><span class=\"pre\">SQLite3</span></code> Optional (<code class=\"docutils literal notranslate\"><span class=\"pre\">target_compile_definitions()</span></code>)", "External Dependencies", "CMake: Advanced Topics", "Language Basics", "Datatypes", "Filesystem Interaction, Pathname Manipulation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">foreach</span></code> Loops", "Functions And Macros", "The Language", "<code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code>, And Conditions", "Scripts", "Variables", "<code class=\"docutils literal notranslate\"><span class=\"pre\">while</span></code> Loops", "Screenplay: Function Wrapping <code class=\"docutils literal notranslate\"><span class=\"pre\">add_library()</span></code>", "Why Noy Use <code class=\"docutils literal notranslate\"><span class=\"pre\">include_directories()</span></code> For That", "Screenplay: Public And Private Include Directories", "Targets, Properties, And More", "Running Tests", "CMake", "Basics: Boilerplate, And Executables", "C++, Debug/Release, CMake \u201cProgramming\u201d, Rants", "CMake: Introduction", "Installation (\u201cDeployment\u201d)", "Libraries, And <em>Dependencies</em>", "Shared Libraries (Preview)", "Structure - Subdirectories, Dependencies, and Include Paths", "C++ Code", "Abstract Factory", "Adapter", "Command", "SocialDB Source Code", "Composite", "Decorator", "Design Patterns With C++", "Case Study/Livehacking: Heating Control (Reading Sensors)", "Interpreter", "Observer", "OO Design Principles", "Proxy", "Exercise Foundation: <code class=\"docutils literal notranslate\"><span class=\"pre\">Sensor</span></code> Hierarchy", "Singleton", "UML Short Introduction", "Exercise: Abstract Factory", "Exercise: Adapter", "Exercise: Command", "Exercise: Composite", "Exercise: Decorator", "Exercises: Design Patterns", "Exercise: Interpreter Combined With Adapter (And A Proxy)", "Exercise: Arithmetic Expression Interpreter", "Exercise: Adapter", "Exercise: Proxy (Remote Thermometer)", "Exercise: Proxy (Rounding Thermometer)", "Exercise: Singleton (Flexible)", "Exercise: Singleton (Flexible <em>And</em> Strict)", "Exercise: Singleton (Inflexible)", "Solution: Abstract Factory", "Solution: Adapter", "Solution: Command", "Solution: Composite", "Solution: Decorator", "Solutions", "Solution: Interpreter Combined With Adapter (And A Proxy)", "Solution: Arithmetic Expression Interpreter", "Solution: Observer", "Solution: Proxy (Remote Thermometer)", "Solution: Proxy (Rounding Thermometer)", "Solution: Singleton (Flexible)", "Solution: Singleton (Flexible <em>And</em> Strict)", "Solution: Singleton (Inflexible)", "Exercise (FH): Introducing a Sensor Class", "Exercise (FH): Extract Measurement Loop Into Function", "Exercise (FH): Replace Sensor", "Exercise (FH): Write A Sensor Class: <code class=\"docutils literal notranslate\"><span class=\"pre\">RandomSensor</span></code>", "FH Sensor OO (First Try)", "C++ Exercises", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">LEDStripeDisplay_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">Hysteresis_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">AveragingSensor_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">ConstantSensor_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">MockSensor_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">RandomSensor_nopoly</span></code> (Non-Polymorphic)", "Exercise: Mocking Switch (Non-Polymorphic)", "OO Basics, Interfaces (Shapes)", "Working On Exercise Projects", "Exercise: Sensor Interface", "Exercise: OneWire Sensor Factory", "Exercise: OneWire Sensor Class", "Exercise: Algorithms", "Exercise: Generic Filter", "Exercise: Filter Elements Greater Than 10", "Exercise: Filter Odd Elements", "C++ Exercises: Standard Template Library", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::map&lt;&gt;</span></code>", "Exercises: Sensor Repository (<code class=\"docutils literal notranslate\"><span class=\"pre\">std::map</span></code>)", "Insert - Not Overwriting Existing Elements", "Insert - Sunny Case", "Lookup - Not Found", "Lookup - Sunny Case", "Memory Leaks?", "Remove - Not Found", "Remove - Sunny Case", "<code class=\"docutils literal notranslate\"><span class=\"pre\">.size()</span></code> Is <code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code>", "Exercise: Uniquify A Sequence", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector&lt;&gt;</span></code>", "C++: TODO List", "Code: C++: Class Templates", "Screenplay: C++: Class Templates", "C++: Class Templates", "Code: C++: Dynamic Memory", "Screenplay: C++: Dynamic Memory", "C++: Dynamic Memory", "Code: C++: Global Objects Initialization", "Screenplay: C++: Global Objects Initialization", "C++: Global Objects Initialization", "Code: C++: Inheritance, Interfaces, <code class=\"docutils literal notranslate\"><span class=\"pre\">virtual</span></code>", "Screenplay: C++: Inheritance, Interfaces, <code class=\"docutils literal notranslate\"><span class=\"pre\">virtual</span></code>", "C++: Inheritance, Interfaces, <code class=\"docutils literal notranslate\"><span class=\"pre\">virtual</span></code>", "Code: C++: Ownership/RAII", "Screenplay: C++: Ownership/RAII", "C++: Ownership/RAII", "Code: C++: STL Containers (Intro)", "Screenplay: C++: STL Containers (Intro)", "C++: STL Containers (Intro)", "Code: C++: Templates vs. Interfaces", "Screenplay: C++: Templates vs. Interfaces", "C++: Templates vs. Interfaces", "C++: Miscellaneous Live-Hacking", "Introduction", "Object Oriented Programming In Good Ol\u2019 C", "Copy Constructor, Assignment Operator", "Classes and Objects", "Custom Constructor", "Default Constructor", "More Constructors, Destructors", "Data Encapsulation", "Constructors: Member Initialization", "Object Copy (And Resource Management): There Be Dragons", "Overloading", "Methods", "<code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">this</span></code>", "References", "<code class=\"docutils literal notranslate\"><span class=\"pre\">static</span></code> Methods", "<code class=\"docutils literal notranslate\"><span class=\"pre\">static</span></code> Member Variables", "Operator Overloading", "Exercise (FH): <code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">cuboid</span></code>", "Exercise (FH): <code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">point</span></code>", "Exercise (FH): <code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">point3d</span></code>", "Exercise (FH): <code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">rectangle</span></code>", "Functions and Methods", "Basics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">try</span></code> - <code class=\"docutils literal notranslate\"><span class=\"pre\">catch</span></code>", "Exceptions", "Function Templates", "Class Templates", "C++ Template Basics", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::copy&lt;&gt;()</span></code> From <code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;algorithm&gt;</span></code>", "Screenplay: Pointer Arithmetic, And Algorithms", "Screenplay: Pointer Arithmetic Basics", "Screenplay: Pointer Difference", "Screenplay: Out Of Range Errors", "Standard Template Library: Basics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector</span></code> (And <code class=\"docutils literal notranslate\"><span class=\"pre\">std::copy()</span></code>)", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">std::copy()</span></code>", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector</span></code> Basics", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector</span></code>, And Pointer Arithmetics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">binary_search&lt;&gt;</span></code>: On Sorted Sequence", "<code class=\"docutils literal notranslate\"><span class=\"pre\">copy&lt;&gt;</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find&lt;&gt;</span></code>: Sequential Search, by Equality", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find_if&lt;&gt;</span></code>: Sequential Search, Customizable", "<code class=\"docutils literal notranslate\"><span class=\"pre\">for_each&lt;&gt;</span></code>", "Algorithms", "<code class=\"docutils literal notranslate\"><span class=\"pre\">lower_bound&lt;&gt;</span></code>: On Sorted Sequence", "<code class=\"docutils literal notranslate\"><span class=\"pre\">reverse&lt;&gt;</span></code>: Reversing In-Place", "<code class=\"docutils literal notranslate\"><span class=\"pre\">reverse_copy&lt;&gt;</span></code>: Copying <em>and</em> Reversing", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sort&lt;&gt;</span></code>", "Sequential Containers", "Sequential Containers", "<code class=\"docutils literal notranslate\"><span class=\"pre\">list&lt;&gt;</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">vector&lt;&gt;</span></code>", "Associative Containers", "Associative Containers", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::map</span></code>", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::map</span></code> Initialization And Inserting", "Screenplay: Inserting Elements", "Screenplay: Removing (Erasing) Elements", "Screenplay: Searching", "<code class=\"docutils literal notranslate\"><span class=\"pre\">multimap&lt;&gt;</span></code>", "Allocator Basics", "Allocators", "STL: Exercises", "Exercise: Reverse a String", "Exercise: Reverse A String", "Solution: Reverse a String", "Standard Template Library", "Dynamic Memory (To Be Done)", "Dynamic Memory Allocation, Resource Management", "Inheritance Basics", "Destructors And Inheritance", "Inheritance And Object Oriented Design", "C++ \u201cInterfaces\u201d", "<em>Polymorphic</em> Usage Of Objects", "Inheritance: <code class=\"docutils literal notranslate\"><span class=\"pre\">private</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">protected</span></code> (Implementation Inheritance)", "Virtual Destructors", "Virtual Methods", "The Standard Library: Miscellaneous Topics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::string</span></code>", "Exercise: Paint the American Flag Onto Standard Output", "FH/Moodle Quiz: C++", "Exercises: Miscellaneous", "Exercise: Parse A Line From <code class=\"docutils literal notranslate\"><span class=\"pre\">/etc/passwd</span></code>", "Exercise: Sum of Integers Coming From <code class=\"docutils literal notranslate\"><span class=\"pre\">cin</span></code>", "Exercises: User Database", "Exercise: Access Methods for Members", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code> Members", "Exercise: Use <code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code>", "Exercise: Default Constructor (was: Arrays of Objects)", "Exercise: Simple Method (Users Age By <code class=\"docutils literal notranslate\"><span class=\"pre\">n</span></code> Years)", "Exercise: Transform <code class=\"docutils literal notranslate\"><span class=\"pre\">struct</span> <span class=\"pre\">User</span></code> Into A Class", "Exercise: Insert a User into UserDB", "Exercise: Search a User By Lastname (<code class=\"docutils literal notranslate\"><span class=\"pre\">std::find_if</span></code>)", "Exercise: Search, \u201cUser Not Found\u201d Exception", "Exercise: Search a User By Lastname", "Exercise: Use std::vector in UserDB", "C++", "Introduction", "History, Background", "A Live-Hacked Tour Around The New C++", "Strongly Typed <code class=\"docutils literal notranslate\"><span class=\"pre\">enum</span></code>", "Brace Initialization (Uniform Initialization)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::initializer_list</span></code>: Brace Initialization, Implementor\u2019s View", "Brace Initialization: Introduction", "Brace Initialization: A Mess", "Delegating Constructor", "<code class=\"docutils literal notranslate\"><span class=\"pre\">constexpr</span></code>", "Afterword, Further Reading", "Move Semantics, Rvalue References", "<code class=\"docutils literal notranslate\"><span class=\"pre\">SmartPtr</span></code> With Move Semantics", "Implementing Move Semantics (<code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">String</span></code>, Live Hacked)", "Using Move Semantics In Own Code", "Lvalues, Rvalues, And Moving", "Miscellaneous", "Duck Typing (Err, <code class=\"docutils literal notranslate\"><span class=\"pre\">auto</span></code>) Without A Duck", "Concepts", "Concepts: Overview", "<code class=\"docutils literal notranslate\"><span class=\"pre\">toolcase-1-conceptless.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">toolcase-2-conceptless-error.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">toolcase-3-concept-integral.cpp</span></code>", "Concepts: Links", "Writing Your Own Concepts", "<code class=\"docutils literal notranslate\"><span class=\"pre\">example-1-good-old-func.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">example-2-need-template.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">example-4-concept-has-size.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">example-5-concept-index-ret-double.cpp</span></code>", "Coroutines", "Coroutines: An Overview", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fibo-generator.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fibonacci.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">generator.h</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">generator-hello.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">simplest.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">suspend.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">suspend-iter.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">suspend-next.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">=</span> <span class=\"pre\">default</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">=</span> <span class=\"pre\">delete</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">final</span></code>", "New Language Features", "Lambda", "Lambda", "Lambda: More Capturing", "Live Hacking: Handwritten Functors (Too Much Boilerplate)", "Live Hacking: Handwritten Functors, And Capturing By Reference (Pitfalls)", "Modules", "<code class=\"docutils literal notranslate\"><span class=\"pre\">override</span></code>", "Range Based <code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code> Loops: Introduction", "Case Study: Range Based <code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code> On <code class=\"docutils literal notranslate\"><span class=\"pre\">std::map</span></code>", "Ranges And Views: Good Or Bad?", "Ranges", "Ranges: Overview", "Ranges And Views: Links", "Tuple Unpacking (Err, Structured Binding)", "Smart Pointers: Closing Words", "Smart Pointers (<code class=\"docutils literal notranslate\"><span class=\"pre\">std::unique_ptr</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">std::shared_ptr</span></code>)", "Introduction", "(Trying To) Handwrite A Smart Pointer Class in C++ Before C++11", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::shared_ptr</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::unique_ptr</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::weak_ptr</span></code>", "Perfect Forwarding", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::bind</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::function</span></code>", "Functions, Functions", "Threads Introduction", "Threads in C++", "Race Conditions", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::atomic</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::mutex</span></code> And Friends", "Scoped Locking", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::condition_variable</span></code> (Live Hacking Multithreaded Queue)", "Multithreading", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::promise</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">std::future</span></code> (And Some <code class=\"docutils literal notranslate\"><span class=\"pre\">std::chrono</span></code>) (Some Live Hacking)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::chrono</span></code>", "A Better <code class=\"docutils literal notranslate\"><span class=\"pre\">void*</span></code>: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::any</span></code>", "New-Style Union: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::variant</span></code>", "Miscellaneous", "CRTP", "std::vector&lt;&gt;: Allocators (<em>Very</em> Incomplete)", "Classic Virtual", "Embedded Problems? Code Bloat? Type Erasure? Solutions?", "Non-Virtual, But Related", "Type Erasure (Static vs. Dynamic Polymorphism), CRTP", "Unrelated (Duck-Typed)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::variant</span></code> (Automatic Virtual Dispatch Using Template Method)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::variant</span></code> (Manual Virtual Dispatch, Using <code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code>)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::variant</span></code> (Manual Virtual Dispatch, Using <code class=\"docutils literal notranslate\"><span class=\"pre\">std::visit</span></code>)", "Why Replace <code class=\"docutils literal notranslate\"><span class=\"pre\">virtual</span></code>?", "Drafts", "Exercise: Bag Of Items, By Copy", "Exercise: Bag Of Items, By Shared Reference", "Exercise: Bag Of Items, By Unique Reference", "Exercises", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::filesystem</span></code>", "The New C++ (11-\u2026)", "Generated Topic Graph", "Topics", "Modern Character Devices (Screenplay)", "Modern Character Devices (Slideshow)", "Modern Character Devices", "File Operations on Character Devices (Screenplay)", "File Operations on Character Devices (Slideshow)", "File Operations on Character Devices", "Coding: First Functionality (Slideshow)", "Coding: First Functionality", "Character Device Basics (Livehacking Screenplay)", "Character Device Basics (Slideshow)", "Character Device Basics", "Coding: Multiple Devices (Slideshow)", "Coding: Multiple Devices", "Coding: Refactoring (Screenplay)", "Coding: Refactoring (Slideshow)", "Coding: Refactoring", "DMA (Slideshow)", "DMA", "Building a Fedora Kernel (Screenplay)", "Fedora: Building the Kernel", "Fedora: Building External Kernel Modules (Screenplay)", "Fedora: Building External Kernel Modules", "Linux Kernel Driver Development", "Module Loading, Hello World (Slideshow)", "Module Loading, Hello World", "Coding: Raspi GPIO Interrupts (Slideshow)", "Coding: Raspi GPIO Interrupts", "Interrupts (Slideshow)", "Interrupts", "IO Memory (Slideshow)", "IO Memory", "Dynamic Memory: <code class=\"docutils literal notranslate\"><span class=\"pre\">kmalloc()</span></code> (Slideshow)", "Dynamic Memory: <code class=\"docutils literal notranslate\"><span class=\"pre\">kmalloc()</span></code>", "Doubly Linked Lists (Slideshow)", "Doubly Linked Lists", "Coding: Fix Race Condition (Mutex) (Slideshow)", "Coding: Fix Race Condition (Mutex)", "Mutex (and RT Mutex) (Slideshow)", "Mutex (and RT Mutex)", "Network Devices (Slideshow)", "Network Devices", "PCI (Slideshow)", "PCI", "Process vs.Atomic Context (Slideshow)", "Process vs.Atomic Context", "Rasperry Pi: Kernel Build", "Raspberry Pi: Building the Kernel", "Sample Code Maintenance", "Coding: Fix <em>Sleep While Atomic</em> (Slideshow)", "Coding: Fix <em>Sleep While Atomic</em>", "Spinlock (vs. Mutex) (Slideshow)", "Spinlock (vs. Mutex)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">dup()</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">fork()</span></code>, and Reference Counting (Stub)", "Coding: Timed Event (Slideshow)", "Coding: Timed Event", "Timer Management (Slideshow)", "Timer Management", "To Do List", "Accessing Userspace Memory (Screenplay)", "Accessing Userspace Memory (Slideshow)", "Accessing Userspace Memory", "Waiting for Something (Screenplay)", "Waiting for Something (Slideshow)", "Waiting for Something", "Workqueue (Screenplay)", "Workqueue (Slideshow)", "Workqueue", "Exercises: Archiving And Compression", "Archiving and Compression", "<code class=\"docutils literal notranslate\"><span class=\"pre\">gzip</span></code>", "Archiving and Compression", "<code class=\"docutils literal notranslate\"><span class=\"pre\">tar</span></code>", "Exam (ECE/SS2022/G1): Do A Lot With Files And Directories", "Exam (ECE/SS2022/G2): Do A Lot With Files And Directories", "Exercises/Exams: Linux Basics", "Linux Basics", "Everything Is A File (Live Demo)", "Environment (Variables)", "Quiz: Linux Basics", "Quiz: Linux Basics (Solution)", "Introduction: Concepts and Terminology", "Login? What Is That?", "Overview", "Processes, Scheduling, Address Spaces", "Process Hierarchy (Parent, Child Process)", "Windows Subsystem for Linux (WSL)", "Exercises: IO-Redirection, Pipes", "I/O Redirection And Pipes", "I/O Redirection", "I/O Redirection: Swap <code class=\"docutils literal notranslate\"><span class=\"pre\">stdout</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">stderr</span></code>", "Pipes", "Permissions: Mode, User and Group Ownership", "Exercise: Determine Your User Credentials", "FH/Moodle Quiz: Permissions", "FH/Moodle Quiz: Permissions", "Exercises: File System Permissions", "Exercise: Create Private Directory", "Question: Private Directory", "Exercise: Create Public Directory", "Question: Public Directory", "Exercise: Create Group-Shared File", "File System Permissions", "SetUID Programs: <code class=\"docutils literal notranslate\"><span class=\"pre\">passwd</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">sudo</span></code>, \u2026", "SetUID: Live Demo", "Ugly Hack: Sticky Bit", "Default Permissions: <code class=\"docutils literal notranslate\"><span class=\"pre\">umask</span></code>", "Commandline", "Shell Configuration File: <code class=\"docutils literal notranslate\"><span class=\"pre\">~/.bashrc</span></code>", "Copying: <code class=\"docutils literal notranslate\"><span class=\"pre\">cp</span></code>", "Current Working Directory", "Exercise: Copy Directory Tree", "Exercise: Copy Files", "Exercise: Create Files (I/O Redirection)", "Exercise: Move Files", "Exercises: Create/Copy/Move/Remove", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">mkdir</span></code>", "Exercise: Funny Stuff", "Exercise: Remove Directory Tree", "Exercise: Verify, Repeat", "FH/Moodle Quiz: Shell", "The Shell - Exercises", "Exercise: File Types in <code class=\"docutils literal notranslate\"><span class=\"pre\">/dev</span></code>", "Exercise: Size of <code class=\"docutils literal notranslate\"><span class=\"pre\">/etc/passwd</span></code>", "Exercises: The <code class=\"docutils literal notranslate\"><span class=\"pre\">ls</span></code> Command", "Exercise: Permissions of Home Directory", "Creating And Removing Files and Directories", "The Shell (Bash - \u201cBourne Again Shell\u201d)", "Symbolic Links, Hard Links", "Directory Listings: The <code class=\"docutils literal notranslate\"><span class=\"pre\">ls</span></code> Command", "Moving and Renaming: <code class=\"docutils literal notranslate\"><span class=\"pre\">mv</span></code>", "Absolute and Relative Paths", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cat</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cut</span></code>", "Exercises: Inspecting Text Files", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">grep</span></code>", "Tools: Inspecting Text Files", "<code class=\"docutils literal notranslate\"><span class=\"pre\">head</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">tail</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">less</span></code>", "Overview", "Drafts", "Yocto", "Linux", "Controlling a Brushless Motor With Raspberry Pi", "CAN/Linux Basics", "CAN Interfaces", "Programming", "Hardware, Kernel", "CAN Bus With Linux And Python", "Linux Hardware Interfaces", "Linux and I2C (using LM73 Temperature Sensor as Slave)", "PWM Userspace Interface (using PCA9685)", "Linux and OneWire (using DS18B20 Temperature Sensor as Slave)", "SSH: Basics", "Exercise: Copy a File To Remote Machine, And Verify", "Exercise: Copy a Tree To Remote Machine (And Adjust Permissions)", "Exercises: SSH", "Exercise: Create SSH Key Pair", "SSH: Secure Shell", "SSH: Public Key Authentication", "SSH: Links", "SSH: Port Forwarding", "SSH: Secure Copy (<code class=\"docutils literal notranslate\"><span class=\"pre\">scp</span></code>)", "SSH File System (<code class=\"docutils literal notranslate\"><span class=\"pre\">sshfs</span></code>)", "Error Handling", "Linux Systems Programming: Basics", "System Calls vs. Library Functions", "Blocking I/O: What is That? (\u201cEverything is a file\u201d)", "Blocking I/O (On A File): What is That?", "Blocking I/O: On A Network Socket", "Blocking I/O: On A Timer? WTF?", "Blocking I/O: What Is That?", "File I/O: Basics", "Exercise: Copy A File", "Exercise: Create File With Hole", "Duplicating (Whats Going On?)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">O_CREAT</span></code>: Creating A File", "<code class=\"docutils literal notranslate\"><span class=\"pre\">O_EXCL</span></code>: Creating A File, But Failing If It Already Exists", "<code class=\"docutils literal notranslate\"><span class=\"pre\">O_RDONLY</span></code>: Reading a File", "<code class=\"docutils literal notranslate\"><span class=\"pre\">O_WRONLY</span></code>: Writing A File (Which Must Exist)", "Exercise: Read Temperature From Onewire Sensor", "File I/O", "Miscellaneous", "Linux Systems Programming", "Get Value Of GPIO", "Introductory Live Hacking, Hardware-Wise (<code class=\"docutils literal notranslate\"><span class=\"pre\">sysfs</span></code> GPIO)", "Intro: <code class=\"docutils literal notranslate\"><span class=\"pre\">sysfs</span></code> GPIO", "Interrupts In Userspace", "Basics", "Thread Life Cycle", "Thread Creation, Race Condition", "Synchronization", "Mutex: Solve Load/Modify/Store Conflict", "Communication: Condition Variable", "Condition Variable: Message Queue", "Miscellaneous", "Last Warning", "POSIX Threads", "Trylock/islocked", "Process: Arguments, Exit Status", "Processes", "The Process Tree (And Environment, And <code class=\"docutils literal notranslate\"><span class=\"pre\">procfs</span></code>)", "Scheduling (and Multitasking)", "Scheduling", "Tasks? Processes? Threads?", "Scheduling: Exam Questions", "Realtime", "Realtime API", "Wakeup Latency, CPU Frequency (Gotcha)", "Code: Sysprog: Event Driven Programming", "Screenplay: Sysprog: POSIX IPC", "Sysprog: Events", "Code: Sysprog: POSIX IPC", "Screenplay: Sysprog: POSIX IPC", "Slides: Sysprog: POSIX IPC", "Sysprog: POSIX IPC", "Code: Sysprog: Signals", "Screenplay: Sysprog: Signals", "Slides: Sysprog: Signals", "Sysprog: Signals", "Toolchain: Basics", "CMake: Cross Build", "CMake: Local Build", "Cross Development", "Cross Development", "Exercise: Build Software Package (Cross, Raspberry)", "Quiz: Toolchain", "Quiz: Toolchain (Solutions)", "Exercises: Toolchain", "Exercise: Build Software Package (Native)", "Exercise: Install And Check Raspberry Toolchain", "Toolchain, And Cross Development", "Case Study: Raspberry Toolchain", "Linaro Toolchain For The Pi (Defunct)", "Building A Cross Toolchain For The Raspberry Pi, Using <code class=\"docutils literal notranslate\"><span class=\"pre\">crosstool-ng</span></code>", "Building A Toolchain <em>On</em> Fedora <em>For</em> Ubuntu 18.04 (WSL)", "Cross Toolchain Setup", "Zooming In: Separate Compilation, and Linking <em>Statically</em>", "Shared Libraries (Shared Objects)", "Object Code Archives/Static Libraries", "Closures", "Comprehensions (List, Dictionary, Set)", "Context Managers: The <code class=\"docutils literal notranslate\"><span class=\"pre\">with</span></code> Statement", "Decorators", "Exception Handling", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">exec()</span></code> Function", "Python: More Language Features", "Iteration, Comprehensions, and Generators", "Implementing A Fibonacci Number Generator", "The Iterator Protocol", "Iteration, Generators, And <code class=\"docutils literal notranslate\"><span class=\"pre\">yield</span></code>", "Iterating Intelligently: Generators, and the Iterator Protocol", "Modules and Packages", "Multithreading (Python)", "Multithreading", "Race Conditions, and Mutexes", "Multithreading: Exam Questions", "Abstract Base Classes (<code class=\"docutils literal notranslate\"><span class=\"pre\">abc</span></code>), And Duck Typing", "Classes And Dictionaries", "Constructor", "Object Oriented Programming", "Inheritance", "Methods", "<code class=\"docutils literal notranslate\"><span class=\"pre\">collections.namedtuple</span></code>", "Operator Overloading", "Properties", "<code class=\"docutils literal notranslate\"><span class=\"pre\">str()</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">repr()</span></code>", "Positional and Keyword Arguments", "Python: The Language Fundamentals", "Python Installation", "Blahblah", "Hello World", "Running Python Programs", "Syntax etc.", "Commandline Arguments (<code class=\"docutils literal notranslate\"><span class=\"pre\">sys.argv</span></code>)", "Variables", "Datatypes", "Compound Datatypes", "Boolean", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code> Statement", "<code class=\"docutils literal notranslate\"><span class=\"pre\">while</span></code> Loops", "Sequential Datatypes", "Indexing and Slicing", "<code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code> Loops", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">range</span></code> Function", "References, (Im)mutability", "Functions: Global and Local Scope (Livehacking Screenplay)", "Functions (Slideshow)", "Functions", "More About Strings", "String Formatting", "Miscellaneous String Methods", "More About Lists", "More About Dictionaries", "More About Sets", "File I/O", "Function Objects", "Commandline Parsing with <code class=\"docutils literal notranslate\"><span class=\"pre\">argparse</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code>", "Python: Draft Topics", "Matplotlib", "Package Installation (<code class=\"docutils literal notranslate\"><span class=\"pre\">setuptools</span></code>)", "Exercise: Read CSV File, Write into Sqlite3 Database", "Exercise: Read CSV File", "CSV and Databases", "Exercises", "Exercise: Boolean Expressions", "Exercise: Even Numbers (<code class=\"docutils literal notranslate\"><span class=\"pre\">while</span></code>)", "Exercise: Greeting, Depending on Time of Day", "Exercises (External)", "Exercise: Determine Maximum of Two Numbers", "Exercise: Swap Two Variables", "Exercise: Username/Password Check", "Exercise: Digit to English Word", "Exercise: Dictionary: Errors?", "Exercise: Eliminate Empty/Comment-Only Lines", "Exercise: Generator: Fibonacci", "Exercise: Primeness (<code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code>)", "Exercises (Legacy)", "Exercise: Functions: <code class=\"docutils literal notranslate\"><span class=\"pre\">join()</span></code>", "Exercise: Determine Maximum of Two Numbers", "Exercise: Determine Maximum of Two Numbers (Function)", "Exercise: Mixed List (Executable Program)", "Exercise: Mixed List (Interactive Interpreter)", "Exercise: Parsing <code class=\"docutils literal notranslate\"><span class=\"pre\">/etc/passwd</span></code>", "Exercise: Primeness (Function)", "Exercise: Reverting Lines of a File", "Exercise: String (Right-Justify)", "Exercise: Function: <code class=\"docutils literal notranslate\"><span class=\"pre\">uniq()</span></code>", "Exercise: Generator: <code class=\"docutils literal notranslate\"><span class=\"pre\">uniq()</span></code>", "Exercise: Counting Lines, Words, Characters", "Exercise: Primeness (<code class=\"docutils literal notranslate\"><span class=\"pre\">while</span></code>)", "Sensors, And Data Acquisition (Exercise Series)", "Project Setup", "Exercise: Basic \u201cSensor\u201d", "Exercise: Read CSV File (<code class=\"docutils literal notranslate\"><span class=\"pre\">csv.dictreader</span></code>)", "Exercise: Refactoring - Extract CSV Reading Into Function (<code class=\"docutils literal notranslate\"><span class=\"pre\">csv.dictreader</span></code>)", "Exercise: Read CSV File (<code class=\"docutils literal notranslate\"><span class=\"pre\">csv.reader</span></code>)", "Exercise: Refactoring - Extract CSV Reading Into Function (<code class=\"docutils literal notranslate\"><span class=\"pre\">csv.reader</span></code>)", "User Database (Exercise Series)", "Exercise: MQTT: Publish User Records", "Exercise: Away From Raw Dictionaries", "Exercise: Convert User Record To JSON And Back", "Exercise: Refactoring - Extract Both CSV Formats Into Module", "Python: All Material, Interrelated", "Python Programming: From Absolute Beginner to Advanced Productivity", "Python Links", "Machine Learning, Artificial Intelligence", "K-Means", "Linear Regression: Running Code (<em>no Notebook!</em>)", "Weather History Dataset", "Linear Regression: Jupyter Notebook", "Linear Regression", "Machine Learning: Concepts and Terminology", "CSV Files", "DBAPI 2", "Databases", "DBAPI 2: PostgreSQL", "DBAPI 2: <code class=\"docutils literal notranslate\"><span class=\"pre\">sqlite3</span></code>", "Encoding", "Python: Miscellaneous Topics", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">import</span></code> Statement (incomplete)", "MQTT", "Pandas: Adding Rows", "Pandas: Basics (<code class=\"docutils literal notranslate\"><span class=\"pre\">DataFrame</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">Series</span></code>)", "Pandas: Filters", "Pandas", "Pandas: Selecting Rows (And Columns) With <code class=\"docutils literal notranslate\"><span class=\"pre\">iloc[]</span></code>", "Pandas: Indexes", "Pandas: Selecting Rows (And Columns) With <code class=\"docutils literal notranslate\"><span class=\"pre\">loc[]</span></code>", "Pandas: Adding/Modifying Columns", "XML: ElementTree (<code class=\"docutils literal notranslate\"><span class=\"pre\">etree</span></code>)", "Visual Studio Code for Python Programming", "Python: Project/Package Management", "Python Package Index (Livehacking Screenplay)", "Python Package Index (Slideshow)", "Python Package Index", "Packaging, PyPI Upload (Link Collection)", "PyTest", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pytest</span></code> Introduction, By Example", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">unittest</span></code> Module", "Virtual Environments (Livehacking Screenplay)", "Virtual Environments (Slideshow)", "Virtual Environments", "Unit Testing With <code class=\"docutils literal notranslate\"><span class=\"pre\">googletest</span></code>", "Code: Unittest: GTest Basics", "Screenplay: Unittest: GTest Basics", "Unittest: GTest Basics", "Screenplay: Unittest: GTest and CMake", "Unittest: GTest and CMake", "Code: Unittest: GTest Fixtures", "Screenplay: Unittest: GTest Fixtures", "Unittest: GTest Fixtures", "Organisatorisches: Buchung, Kursablauf", "Linux from Scratch, 16.9.2013, M\u00fcnchen", "Shell Scripting/Bourne Again Shell (Bash)", "C: Einf\u00fchrung", "C f\u00fcr Fortgeschrittene", "C++: Einf\u00fchrung und \u00dcberblick", "An Introduction to Modern C++, In Three Days", "C and C++ Programming", "CMake", "Design Patterns For C++ Developers", "Embedded Software Development: Hardware, Realtime, and Memory Management", "Linux Kernel Driver Development", "Linux Basics: Eine Einf\u00fchrung Anhand von Beispielen", "GNU Make: Die Mutter aller Build Tools", "Advanced Python", "Basic Python", "Herdt", "Eine Woche mit dem Raspberry Pi", "Subversion (SVN)", "Linux Systems Programming: Introduction", "Linux Systems Programming: Virtual Memory, IPC, Shared Libraries", "Linux Systems Programming", "Linux Systems Programming: Multithreading", "Linux Systems Programming: Network Programming", "Unittesting and Test Driven Development"], "terms": {"di": [0, 23, 204, 207, 275, 506, 1177, 1179, 1183, 1185], "j\u00f6rg": [0, 23, 163, 166, 208, 242, 250, 254, 269, 272, 275, 285, 288, 303, 324, 330, 342, 345, 346, 352, 358, 364, 368, 388, 389, 391, 393, 458, 552, 726, 1084, 1087, 1125, 1150, 1177, 1178, 1179, 1180, 1183, 1184, 1185], "faschingbau": [0, 12, 23, 37, 50, 61, 63, 67, 163, 166, 168, 189, 196, 197, 205, 223, 226, 227, 229, 230, 231, 232, 242, 249, 254, 255, 262, 265, 270, 272, 275, 278, 282, 285, 288, 291, 303, 310, 320, 324, 330, 335, 342, 345, 346, 352, 358, 364, 388, 389, 391, 394, 397, 402, 458, 489, 506, 517, 519, 524, 525, 536, 544, 551, 552, 585, 601, 657, 703, 726, 733, 734, 735, 736, 737, 738, 755, 914, 915, 923, 925, 930, 944, 960, 973, 979, 1004, 1041, 1084, 1087, 1088, 1100, 1101, 1103, 1104, 1105, 1107, 1108, 1110, 1116, 1138, 1143, 1166, 1177, 1178, 1179, 1180, 1183, 1184, 1185, 1187, 1196, 1202, 1205, 1206, 1207, 1209, 1210, 1211, 1212, 1215, 1235, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259], "offic": [0, 32, 195, 211], "co": [0, 12, 32, 37, 168, 186, 197, 226, 227, 229, 230, 231, 232, 293, 310, 314, 397, 402, 504, 517, 536, 751, 1088, 1110, 1187, 1202, 1205, 1206, 1207, 1209, 1210, 1211, 1212, 1215, 1233, 1235, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259], "43": [0, 7, 193, 200, 212, 223, 233, 238, 240, 243, 246, 249, 254, 255, 259, 262, 265, 270, 272, 278, 282, 285, 288, 291, 300, 303, 307, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 389, 391, 392, 481, 494, 506, 685, 756, 806, 835, 970, 979, 992, 994, 1033, 1097], "0": [0, 5, 7, 21, 23, 32, 60, 62, 109, 112, 113, 116, 121, 122, 123, 124, 131, 135, 139, 143, 163, 166, 170, 176, 186, 189, 191, 192, 193, 195, 201, 205, 209, 210, 211, 212, 213, 223, 226, 228, 230, 233, 238, 240, 241, 242, 243, 246, 249, 250, 251, 254, 255, 259, 262, 263, 265, 268, 270, 272, 275, 278, 281, 282, 285, 288, 290, 291, 293, 295, 300, 303, 306, 307, 308, 310, 314, 318, 319, 320, 324, 330, 340, 342, 346, 352, 358, 364, 368, 374, 383, 389, 390, 391, 392, 393, 394, 397, 419, 420, 422, 424, 426, 428, 429, 430, 432, 439, 440, 442, 443, 444, 452, 455, 457, 458, 464, 465, 467, 470, 485, 486, 487, 488, 490, 491, 494, 495, 498, 500, 504, 506, 508, 509, 512, 513, 514, 516, 519, 520, 524, 532, 534, 539, 543, 544, 549, 551, 554, 556, 563, 564, 566, 568, 569, 570, 571, 573, 574, 575, 578, 579, 582, 583, 584, 588, 591, 592, 596, 598, 599, 600, 601, 602, 610, 616, 617, 625, 628, 634, 637, 644, 645, 646, 648, 649, 652, 653, 654, 655, 657, 659, 660, 661, 662, 663, 664, 667, 672, 673, 674, 675, 676, 677, 679, 680, 681, 682, 683, 685, 686, 689, 690, 691, 695, 699, 700, 701, 702, 703, 707, 709, 713, 714, 716, 717, 719, 720, 722, 724, 727, 732, 733, 734, 735, 736, 737, 738, 739, 743, 747, 748, 751, 754, 755, 756, 758, 760, 761, 762, 763, 765, 766, 767, 768, 769, 771, 772, 773, 775, 776, 777, 778, 779, 780, 781, 785, 787, 788, 790, 792, 793, 795, 797, 801, 802, 804, 805, 806, 807, 812, 815, 817, 820, 824, 826, 828, 830, 834, 838, 842, 845, 846, 850, 853, 865, 867, 877, 900, 901, 903, 918, 923, 925, 930, 933, 944, 945, 948, 970, 972, 973, 974, 979, 985, 987, 988, 992, 993, 994, 1003, 1005, 1008, 1010, 1011, 1012, 1014, 1015, 1017, 1018, 1019, 1020, 1021, 1024, 1026, 1028, 1029, 1035, 1043, 1044, 1046, 1048, 1049, 1050, 1052, 1055, 1056, 1059, 1060, 1062, 1063, 1065, 1075, 1078, 1079, 1081, 1083, 1085, 1086, 1089, 1091, 1095, 1097, 1099, 1112, 1115, 1116, 1117, 1118, 1122, 1124, 1126, 1129, 1131, 1132, 1133, 1137, 1139, 1142, 1143, 1145, 1148, 1149, 1150, 1155, 1157, 1166, 1176, 1183, 1185, 1191, 1192, 1193, 1200, 1201, 1204, 1205, 1206, 1207, 1209, 1210, 1211, 1212, 1216, 1221, 1223, 1228, 1233], "664": [0, 265, 933], "5783814": 0, "gpg": 0, "kei": [0, 9, 32, 42, 99, 103, 104, 110, 126, 148, 149, 185, 187, 189, 201, 209, 218, 223, 228, 230, 231, 233, 238, 240, 242, 245, 246, 247, 249, 254, 255, 257, 259, 260, 262, 263, 265, 270, 272, 273, 275, 278, 282, 285, 287, 288, 292, 296, 299, 300, 303, 305, 306, 310, 320, 323, 324, 326, 327, 329, 330, 342, 346, 352, 357, 359, 364, 368, 370, 371, 391, 394, 397, 402, 430, 478, 698, 700, 703, 743, 792, 840, 914, 915, 923, 980, 984, 996, 997, 998, 1000, 1005, 1087, 1091, 1100, 1118, 1119, 1135, 1145, 1155, 1156, 1178, 1180, 1188, 1196, 1209, 1210, 1216, 1241, 1247], "prankergass": [0, 249, 270, 960], "33": [0, 7, 187, 200, 212, 223, 228, 233, 238, 240, 243, 246, 249, 254, 255, 259, 262, 265, 270, 272, 275, 278, 282, 285, 291, 300, 303, 307, 310, 314, 320, 324, 330, 342, 346, 352, 358, 364, 368, 391, 392, 393, 506, 547, 918, 960, 1062, 1192, 1193], "8020": [0, 249, 265, 270, 308, 506, 914, 915, 954, 960], "graz": [0, 1, 3, 23, 61, 63, 67, 169, 231, 249, 308, 341, 344, 414, 506, 914, 915, 954, 960, 1187], "uid": [0, 270, 275, 278, 346, 364, 397, 402, 726, 838, 914, 915, 923, 933, 1005, 1020, 1077, 1166], "vat": [0, 234, 1251], "atu63522469": 0, "write": [0, 13, 16, 27, 29, 37, 43, 48, 53, 54, 55, 56, 57, 61, 62, 63, 67, 72, 80, 99, 116, 120, 123, 127, 131, 132, 134, 135, 137, 139, 143, 144, 147, 151, 174, 190, 191, 192, 201, 206, 210, 223, 226, 227, 229, 230, 231, 242, 247, 249, 250, 251, 252, 257, 259, 260, 263, 266, 268, 270, 276, 278, 287, 290, 297, 299, 306, 316, 323, 329, 341, 354, 372, 374, 376, 379, 383, 386, 388, 397, 399, 401, 403, 408, 424, 427, 428, 433, 445, 447, 469, 480, 484, 490, 491, 494, 504, 506, 512, 549, 552, 564, 566, 569, 580, 589, 590, 601, 602, 604, 609, 620, 626, 631, 637, 642, 644, 645, 648, 658, 660, 707, 714, 723, 726, 727, 729, 743, 748, 759, 771, 783, 792, 798, 807, 822, 828, 834, 838, 839, 840, 846, 848, 858, 860, 867, 871, 887, 903, 914, 915, 918, 925, 930, 931, 933, 934, 935, 936, 942, 944, 946, 949, 967, 979, 981, 984, 988, 992, 993, 994, 1001, 1008, 1010, 1011, 1012, 1015, 1017, 1018, 1019, 1020, 1022, 1023, 1024, 1025, 1026, 1028, 1029, 1032, 1036, 1042, 1046, 1055, 1056, 1059, 1060, 1062, 1064, 1067, 1071, 1089, 1100, 1105, 1106, 1110, 1133, 1134, 1139, 1145, 1146, 1147, 1149, 1152, 1153, 1154, 1155, 1157, 1158, 1161, 1162, 1164, 1166, 1168, 1169, 1170, 1172, 1173, 1177, 1179, 1182, 1186, 1188, 1201, 1212, 1221, 1222, 1223, 1241, 1242, 1254], "review": [0, 191, 214, 225, 319, 421], "http": [0, 3, 4, 8, 13, 20, 23, 32, 37, 39, 44, 60, 61, 63, 65, 66, 67, 87, 108, 124, 126, 138, 147, 148, 152, 155, 162, 165, 170, 171, 176, 186, 194, 195, 196, 197, 201, 205, 207, 209, 217, 218, 219, 220, 226, 227, 230, 231, 239, 244, 250, 252, 253, 259, 265, 266, 268, 275, 278, 282, 290, 295, 297, 306, 309, 315, 316, 317, 319, 323, 329, 333, 334, 337, 341, 343, 345, 349, 351, 355, 357, 363, 367, 372, 374, 375, 376, 377, 378, 379, 381, 396, 397, 402, 417, 507, 512, 513, 514, 515, 517, 528, 530, 585, 599, 620, 662, 722, 796, 800, 805, 823, 827, 843, 858, 860, 864, 887, 888, 987, 989, 992, 1028, 1075, 1077, 1132, 1143, 1199, 1201, 1216, 1217], "g": [0, 32, 48, 62, 99, 126, 139, 144, 193, 197, 201, 205, 210, 211, 213, 223, 238, 242, 251, 255, 259, 262, 265, 270, 272, 275, 278, 282, 300, 306, 314, 330, 355, 364, 371, 372, 376, 379, 419, 439, 443, 446, 449, 454, 460, 461, 462, 464, 467, 482, 486, 494, 498, 499, 506, 522, 524, 530, 531, 534, 535, 537, 540, 552, 556, 564, 585, 598, 601, 644, 648, 649, 678, 698, 716, 717, 726, 747, 751, 754, 756, 765, 785, 806, 814, 818, 824, 838, 846, 865, 887, 906, 926, 933, 948, 970, 977, 980, 987, 1005, 1014, 1024, 1044, 1046, 1048, 1059, 1060, 1062, 1063, 1064, 1065, 1077, 1082, 1084, 1086, 1094, 1106, 1108, 1109, 1127, 1132, 1133, 1197, 1201, 1212, 1223, 1228, 1244], "page": [0, 33, 39, 60, 74, 76, 80, 108, 126, 144, 152, 185, 186, 187, 189, 190, 192, 193, 197, 202, 222, 227, 230, 251, 276, 306, 332, 348, 368, 404, 428, 429, 432, 477, 488, 548, 585, 840, 846, 865, 871, 873, 885, 911, 914, 915, 932, 981, 985, 994, 1005, 1015, 1018, 1046, 1195], "r": [0, 7, 13, 31, 32, 38, 43, 60, 171, 193, 195, 196, 200, 201, 209, 211, 212, 213, 222, 223, 226, 228, 229, 233, 238, 240, 243, 246, 249, 251, 255, 256, 259, 262, 265, 268, 270, 272, 275, 278, 282, 285, 288, 290, 291, 300, 303, 307, 308, 310, 320, 324, 330, 342, 346, 352, 355, 358, 364, 368, 389, 392, 397, 406, 418, 439, 464, 494, 506, 538, 547, 566, 567, 596, 600, 664, 691, 795, 803, 838, 851, 860, 865, 883, 887, 888, 918, 925, 930, 933, 944, 947, 948, 950, 970, 977, 985, 992, 993, 994, 996, 997, 1005, 1016, 1019, 1020, 1028, 1062, 1063, 1064, 1065, 1075, 1077, 1078, 1085, 1106, 1111, 1114, 1120, 1131, 1137, 1143, 1175, 1201, 1223, 1259], "ctb02zug3crheb0": 0, "geboren": [1, 23], "am": [1, 3, 7, 17, 32, 37, 61, 63, 66, 109, 168, 190, 191, 192, 193, 195, 196, 197, 198, 199, 209, 222, 234, 243, 279, 283, 310, 352, 364, 655, 793, 887, 927, 976, 981, 994, 1003, 1005, 1020, 1131, 1235, 1236, 1238, 1251, 1254, 1258], "19": [1, 7, 23, 65, 126, 162, 200, 202, 211, 212, 213, 222, 228, 231, 233, 238, 240, 242, 243, 246, 249, 254, 255, 259, 262, 265, 266, 270, 272, 275, 278, 282, 285, 288, 291, 300, 303, 307, 310, 314, 320, 324, 330, 335, 342, 346, 352, 358, 364, 368, 390, 391, 392, 394, 402, 405, 414, 482, 506, 538, 803, 838, 948, 970, 994, 1075, 1107, 1113, 1177, 1178, 1179, 1180, 1183, 1184, 1185, 1187, 1192, 1193, 1197, 1205, 1216, 1221, 1223], "6": [1, 7, 32, 60, 62, 111, 124, 162, 171, 191, 193, 201, 205, 207, 210, 211, 212, 213, 223, 228, 230, 235, 238, 240, 241, 243, 246, 249, 250, 251, 253, 256, 258, 259, 262, 263, 265, 270, 272, 275, 278, 282, 285, 289, 291, 300, 303, 307, 310, 314, 320, 324, 330, 338, 342, 346, 352, 358, 364, 368, 374, 389, 390, 392, 393, 397, 421, 422, 444, 481, 487, 498, 563, 564, 603, 604, 605, 606, 618, 637, 644, 646, 649, 652, 653, 656, 658, 661, 662, 663, 664, 682, 683, 684, 685, 691, 722, 723, 760, 806, 819, 838, 944, 967, 970, 974, 979, 985, 987, 992, 993, 994, 1008, 1016, 1029, 1062, 1065, 1075, 1077, 1080, 1085, 1086, 1089, 1095, 1099, 1118, 1119, 1122, 1124, 1126, 1133, 1143, 1149, 1166, 1173, 1177, 1178, 1179, 1180, 1183, 1184, 1185, 1192, 1193, 1197, 1201, 1216, 1221, 1222, 1223, 1228, 1252], "1966": [1, 23, 231, 265, 275, 285, 288, 1177, 1178, 1179, 1180, 1183, 1184, 1185, 1197], "diplom": [1, 23], "au": [1, 5, 8, 23, 32, 163, 166, 198, 199, 207, 208, 209, 213, 223, 234, 244, 246, 253, 269, 272, 278, 279, 281, 293, 330, 346, 392, 397, 398, 415, 1236, 1238, 1239, 1240, 1245, 1251, 1254], "technisch": [1, 23, 415, 1253], "mathematik": [1, 23], "an": [1, 3, 5, 13, 17, 21, 23, 28, 31, 38, 40, 43, 45, 46, 48, 54, 55, 57, 58, 61, 63, 67, 71, 75, 76, 80, 84, 85, 87, 94, 109, 110, 112, 113, 116, 120, 123, 126, 131, 134, 139, 142, 143, 144, 152, 159, 178, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 220, 222, 223, 226, 228, 229, 230, 233, 241, 242, 246, 247, 249, 250, 251, 252, 254, 257, 259, 262, 263, 266, 267, 268, 270, 273, 275, 276, 278, 282, 288, 290, 291, 295, 297, 299, 306, 309, 312, 314, 315, 316, 317, 319, 323, 324, 334, 337, 341, 345, 352, 354, 363, 368, 373, 374, 375, 378, 380, 383, 384, 408, 414, 416, 420, 422, 426, 429, 430, 443, 452, 460, 464, 467, 470, 471, 482, 485, 486, 487, 488, 490, 493, 500, 504, 506, 513, 516, 519, 520, 524, 526, 531, 538, 542, 543, 544, 547, 548, 552, 553, 554, 563, 564, 566, 567, 568, 569, 585, 587, 591, 596, 598, 600, 601, 604, 605, 606, 618, 620, 644, 645, 647, 649, 652, 653, 654, 658, 660, 661, 662, 663, 664, 677, 682, 695, 698, 701, 702, 707, 713, 716, 717, 722, 724, 726, 730, 734, 736, 737, 738, 739, 743, 744, 747, 751, 755, 764, 770, 783, 785, 793, 795, 802, 803, 805, 806, 807, 813, 824, 825, 838, 839, 840, 846, 851, 853, 856, 858, 865, 887, 895, 900, 913, 914, 915, 919, 920, 921, 925, 933, 942, 947, 948, 951, 954, 973, 975, 985, 992, 994, 996, 997, 1002, 1005, 1010, 1011, 1012, 1013, 1015, 1019, 1020, 1021, 1022, 1026, 1028, 1029, 1035, 1041, 1043, 1044, 1047, 1048, 1049, 1050, 1056, 1060, 1062, 1063, 1068, 1069, 1073, 1078, 1079, 1082, 1083, 1086, 1092, 1093, 1094, 1098, 1099, 1103, 1104, 1106, 1108, 1109, 1110, 1114, 1115, 1116, 1118, 1122, 1128, 1137, 1138, 1139, 1143, 1145, 1158, 1164, 1165, 1166, 1182, 1188, 1190, 1192, 1193, 1194, 1195, 1200, 1201, 1204, 1209, 1210, 1214, 1216, 1221, 1222, 1224, 1233, 1235, 1236, 1238, 1239, 1240, 1242, 1244, 1245, 1246, 1247, 1248, 1252, 1254, 1255, 1259], "der": [1, 3, 5, 7, 8, 11, 172, 186, 198, 199, 200, 204, 207, 208, 209, 210, 213, 215, 217, 223, 225, 234, 235, 236, 239, 240, 243, 244, 246, 249, 253, 269, 270, 272, 278, 281, 282, 285, 293, 342, 368, 389, 397, 402, 1235, 1237, 1238, 1239, 1240, 1245, 1247, 1248, 1251, 1252, 1253, 1254, 1255, 1257, 1258, 1259], "tu": [1, 23], "iicm": [1, 23], "1993": [1, 23], "universit\u00e4tsassist": [1, 23], "ebendort": [1, 23], "bi": [1, 3, 23, 32, 198, 199, 223, 233, 330, 358, 1236, 1255], "1998": [1, 3, 23, 201, 209, 265, 643], "vorlesungen": 1, "programmieren": [1, 5, 163, 166, 209, 213, 398, 414, 1240, 1245, 1248, 1252, 1254, 1258, 1259], "basi": [1, 3, 5, 7, 24, 80, 214, 222, 243, 252, 266, 278, 312, 372, 392, 467, 1244, 1255, 1256], "c": [1, 3, 4, 6, 9, 12, 21, 23, 38, 42, 43, 62, 66, 74, 75, 76, 80, 87, 89, 108, 111, 125, 134, 144, 149, 150, 159, 163, 165, 166, 175, 185, 186, 189, 190, 191, 192, 193, 196, 203, 206, 208, 210, 218, 219, 223, 228, 229, 235, 238, 240, 245, 246, 249, 250, 259, 262, 263, 265, 269, 270, 272, 275, 278, 282, 285, 290, 291, 300, 303, 310, 316, 320, 324, 330, 333, 341, 342, 346, 349, 352, 358, 364, 368, 375, 377, 378, 379, 383, 392, 396, 398, 399, 404, 410, 411, 414, 416, 417, 418, 419, 420, 422, 426, 428, 430, 431, 432, 435, 438, 440, 442, 443, 444, 446, 450, 454, 455, 458, 459, 460, 461, 462, 466, 468, 470, 471, 472, 476, 477, 479, 480, 482, 483, 484, 486, 487, 488, 490, 491, 492, 494, 495, 496, 498, 499, 500, 501, 510, 512, 513, 516, 517, 518, 519, 522, 523, 524, 526, 533, 534, 536, 537, 538, 539, 540, 543, 544, 546, 547, 552, 556, 562, 564, 567, 573, 585, 588, 591, 592, 593, 594, 595, 597, 598, 600, 601, 603, 609, 643, 645, 647, 648, 649, 650, 654, 655, 656, 660, 661, 663, 665, 668, 673, 678, 680, 681, 685, 687, 691, 693, 695, 697, 698, 699, 700, 703, 705, 706, 707, 709, 710, 712, 713, 714, 715, 717, 720, 721, 723, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 745, 751, 752, 756, 757, 758, 759, 760, 764, 770, 771, 782, 783, 784, 786, 787, 788, 789, 790, 791, 794, 795, 796, 797, 799, 800, 802, 803, 805, 806, 807, 808, 809, 811, 816, 817, 821, 822, 823, 824, 825, 828, 837, 838, 840, 841, 843, 846, 850, 851, 855, 856, 860, 862, 865, 867, 877, 887, 889, 890, 895, 903, 906, 911, 913, 919, 925, 927, 930, 945, 948, 970, 976, 979, 985, 986, 992, 993, 994, 1006, 1010, 1011, 1012, 1015, 1017, 1018, 1019, 1020, 1021, 1030, 1033, 1038, 1046, 1049, 1051, 1052, 1055, 1058, 1059, 1060, 1062, 1063, 1064, 1065, 1068, 1069, 1071, 1073, 1075, 1079, 1080, 1081, 1082, 1084, 1085, 1109, 1117, 1118, 1126, 1127, 1131, 1137, 1145, 1199, 1200, 1204, 1222, 1223, 1230, 1233, 1243, 1245, 1246, 1248, 1254, 1255, 1256, 1257, 1258, 1259], "und": [1, 3, 4, 5, 6, 7, 8, 37, 39, 163, 166, 183, 198, 199, 204, 208, 209, 213, 215, 217, 225, 229, 235, 239, 241, 243, 248, 250, 254, 259, 270, 274, 275, 280, 282, 286, 292, 293, 310, 320, 330, 346, 359, 369, 392, 393, 397, 402, 414, 416, 452, 460, 928, 975, 976, 995, 1235, 1236, 1237, 1238, 1239, 1243, 1245, 1247, 1248, 1252, 1253, 1254, 1255, 1257, 1258, 1259], "\u00fcbertragungsprotokol": [1, 203], "forschungst\u00e4tigkeit": 1, "volltextsuch": 1, "hyperwav": [1, 3, 23], "2001": [1, 3, 23, 259, 265, 275, 278, 303], "leitung": 1, "serverprogrammierung": 1, "oo": [1, 43, 74, 75, 76, 80, 108, 126, 155, 203, 226, 239, 241, 250, 269, 277, 280, 306, 310, 316, 318, 319, 323, 401, 410, 411, 506, 548, 590, 642, 643, 650, 713, 714, 717, 719, 720, 743, 807, 840, 879, 889, 1088, 1102, 1241, 1244], "design": [1, 3, 20, 23, 53, 57, 76, 80, 82, 84, 87, 108, 186, 187, 190, 203, 206, 226, 252, 253, 269, 315, 317, 372, 374, 405, 414, 416, 443, 473, 493, 494, 497, 505, 508, 541, 542, 543, 544, 546, 547, 549, 551, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 590, 598, 600, 642, 643, 649, 651, 667, 740, 789, 802, 806, 807, 809, 825, 838, 839, 840, 841, 993, 1062, 1183, 1222, 1240, 1243], "analys": [1, 3, 203, 1238], "ration": [1, 3, 38, 196], "rose": [1, 3, 32], "f\u00fcr": [1, 3, 5, 163, 166, 172, 198, 199, 204, 208, 210, 213, 234, 235, 246, 253, 269, 281, 293, 307, 397, 402, 414, 416, 950, 1235, 1236, 1238, 1245, 1251, 1252, 1254, 1257], "java": [1, 9, 233, 234, 245, 257, 266, 358, 703, 716, 802, 807, 814, 1099, 1112, 1118, 1127, 1251, 1259], "releasemanag": [1, 3, 23, 203, 1253], "cv": [1, 3, 23, 32, 186, 260, 1253], "subvers": [1, 3, 416, 970], "systemnah": [1, 3, 5, 23, 185, 203, 1052, 1055, 1059, 1254], "programmierung": [1, 3, 4, 5, 6, 8, 23, 183, 203, 257, 284, 293, 414, 1236, 1237, 1238, 1240, 1245, 1252, 1254, 1257], "unter": [1, 3, 23, 163, 166, 172, 199, 207, 208, 225, 233, 398, 976, 1236, 1237, 1240, 1245, 1248, 1252, 1255, 1257, 1258], "unix": [1, 74, 75, 76, 80, 99, 125, 163, 166, 187, 190, 219, 242, 306, 383, 397, 398, 399, 410, 411, 415, 432, 486, 552, 726, 727, 818, 838, 840, 844, 846, 879, 912, 913, 914, 930, 932, 944, 972, 975, 981, 985, 988, 993, 1005, 1030, 1046, 1056, 1113, 1137, 1166, 1236, 1237, 1239, 1243, 1245, 1247, 1248, 1252, 1254, 1255, 1256, 1258], "window": [1, 3, 32, 99, 100, 105, 106, 126, 147, 149, 171, 178, 190, 195, 197, 207, 209, 222, 230, 247, 261, 263, 265, 276, 279, 290, 295, 297, 299, 305, 306, 318, 334, 340, 371, 376, 379, 383, 394, 397, 400, 402, 415, 427, 494, 809, 812, 840, 917, 922, 948, 984, 1014, 1030, 1035, 1111, 1113, 1114, 1137, 1188, 1223], "nt": 1, "salomon": [1, 3, 23], "friesach": [1, 3, 23], "bei": [1, 3, 5, 23, 198, 199, 204, 208, 213, 217, 223, 225, 234, 235, 238, 240, 278, 293, 389, 414, 1048, 1235, 1236, 1251, 1253], "2006": [1, 3, 23, 265], "magicdraw": 1, "datenbankdesign": [1, 3], "einer": [1, 3, 163, 166, 198, 199, 204, 209, 217, 223, 225, 234, 235, 240, 247, 392, 414, 976, 1048, 1235, 1236, 1240, 1251, 1252, 1257], "objektrelationalen": [1, 3], "datenbankschnittstel": [1, 3], "sp\u00e4ter": [1, 198, 208, 279, 1238], "softwarearchitekt": 1, "leiter": [1, 23], "abteilung": [1, 234, 1251], "forschung": 1, "entwicklung": [1, 3, 4, 163, 166, 398, 1247, 1253], "atron": [1, 3, 23], "unterpremst\u00e4tten": [1, 3, 23], "2010": [1, 3, 23, 186, 202, 265, 1112], "enterpris": 1, "architect": [1, 508, 1215], "softwarearchitektur": [1, 3, 23], "versionsmanag": 1, "ibm": 1, "clearcas": [1, 196, 1253], "massgeblich": 1, "portierung": [1, 3, 4, 203], "spielautomatensoftwar": 1, "von": [1, 3, 4, 5, 6, 7, 8, 163, 166, 168, 172, 198, 199, 207, 208, 217, 225, 229, 230, 232, 234, 235, 238, 241, 243, 244, 246, 255, 272, 279, 284, 291, 300, 307, 342, 358, 364, 369, 397, 398, 402, 414, 416, 912, 975, 976, 1235, 1236, 1237, 1238, 1239, 1240, 1243, 1245, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258], "enea": [1, 3, 190], "os": [1, 3, 190], "nach": [1, 3, 4, 5, 163, 166, 198, 199, 203, 204, 209, 213, 217, 233, 234, 240, 278, 279, 285, 364, 415, 909, 1235, 1251], "linux": [1, 3, 4, 6, 24, 37, 39, 43, 60, 61, 62, 63, 67, 74, 75, 76, 80, 86, 87, 88, 89, 100, 105, 106, 108, 125, 128, 144, 147, 151, 163, 166, 175, 182, 185, 186, 187, 189, 191, 192, 193, 197, 200, 201, 202, 207, 214, 217, 222, 229, 251, 252, 259, 265, 268, 275, 278, 279, 282, 287, 290, 295, 297, 299, 308, 315, 317, 318, 334, 340, 354, 358, 375, 376, 378, 379, 383, 394, 396, 397, 398, 399, 403, 404, 410, 411, 414, 416, 458, 480, 488, 497, 500, 507, 526, 539, 548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 601, 602, 628, 642, 810, 816, 838, 839, 840, 841, 843, 844, 846, 847, 849, 851, 852, 854, 856, 857, 858, 859, 860, 861, 863, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 878, 879, 880, 881, 882, 883, 884, 886, 887, 888, 891, 892, 893, 896, 897, 898, 901, 902, 904, 905, 907, 908, 910, 912, 913, 914, 915, 922, 924, 926, 929, 932, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 948, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 968, 976, 978, 981, 985, 987, 988, 989, 993, 995, 996, 997, 998, 999, 1000, 1001, 1003, 1004, 1005, 1008, 1010, 1011, 1012, 1013, 1014, 1015, 1020, 1022, 1023, 1026, 1027, 1028, 1029, 1031, 1039, 1042, 1045, 1047, 1052, 1055, 1056, 1059, 1062, 1063, 1064, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1077, 1078, 1079, 1080, 1081, 1111, 1113, 1176, 1201, 1221, 1224, 1237, 1238, 1239, 1240, 1243, 1245, 1248, 1252], "beteiligt": [1, 23], "seit": [1, 5, 23, 217, 223, 233, 238, 1236, 1245], "april": [1, 3, 23], "selbstst\u00e4ndig": [1, 23], "fh": [1, 23, 99, 108, 111, 112, 113, 125, 126, 143, 144, 147, 148, 152, 155, 162, 165, 169, 195, 242, 371, 394, 396, 397, 402, 403, 405, 590, 601, 622, 642, 650, 665, 725, 740, 840, 917, 937, 943, 962, 968, 984, 1073, 1230], "joanneum": [1, 169, 195, 1230], "kapfenberg": 1, "2011": [1, 3, 5, 186, 187, 202, 315, 317, 414, 418, 643, 743], "2015": [1, 23, 250, 276, 314, 345, 414, 750, 1188], "lehrveranstaltung": [1, 398], "im": [1, 3, 5, 8, 29, 32, 38, 92, 163, 166, 198, 199, 208, 209, 213, 217, 222, 223, 225, 226, 229, 231, 234, 235, 238, 240, 244, 246, 247, 253, 254, 257, 260, 261, 263, 266, 269, 273, 274, 275, 281, 282, 284, 286, 287, 289, 302, 304, 309, 311, 312, 316, 318, 319, 322, 323, 325, 328, 329, 331, 340, 341, 343, 344, 345, 347, 350, 356, 357, 362, 363, 365, 366, 367, 369, 383, 384, 385, 386, 387, 388, 397, 402, 840, 1088, 1110, 1145, 1146, 1147, 1157, 1160, 1168, 1169, 1171, 1172, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1193, 1201, 1202, 1223, 1236, 1239, 1245, 1247, 1251, 1252, 1254, 1255, 1258, 1259], "lehrgang": 1, "softwar": [1, 5, 13, 23, 24, 41, 46, 47, 51, 53, 55, 56, 66, 70, 75, 76, 80, 87, 99, 106, 126, 137, 143, 150, 151, 163, 166, 189, 197, 200, 201, 206, 217, 223, 229, 233, 242, 259, 265, 266, 275, 276, 278, 303, 315, 317, 318, 319, 332, 348, 373, 394, 415, 416, 482, 508, 542, 543, 552, 554, 720, 807, 840, 841, 871, 918, 932, 984, 985, 992, 993, 1008, 1060, 1070, 1073, 1143, 1190, 1243, 1244, 1246, 1259], "avl": [1, 23, 187], "2018": [1, 23, 193, 265, 748], "2019": [1, 40, 167, 186, 228, 250, 299, 323, 341, 344, 345, 414, 620, 748, 789, 970, 1187, 1188, 1190], "linuxexpert": [1, 23], "architekt": [1, 23], "build": [1, 4, 17, 28, 40, 42, 44, 50, 66, 74, 75, 76, 80, 86, 89, 99, 106, 110, 126, 149, 152, 155, 159, 162, 163, 170, 180, 186, 190, 195, 196, 202, 206, 217, 220, 230, 251, 268, 271, 295, 297, 299, 306, 315, 317, 320, 327, 332, 333, 348, 349, 354, 375, 377, 378, 400, 403, 404, 415, 416, 419, 460, 473, 488, 500, 507, 508, 510, 513, 514, 519, 525, 526, 537, 538, 540, 548, 562, 568, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 600, 601, 602, 620, 625, 628, 642, 726, 734, 771, 791, 801, 815, 840, 844, 847, 849, 852, 854, 856, 857, 864, 866, 867, 868, 872, 878, 883, 884, 889, 891, 896, 902, 905, 908, 945, 984, 993, 994, 1015, 1018, 1019, 1020, 1021, 1035, 1054, 1058, 1062, 1068, 1069, 1070, 1073, 1074, 1078, 1125, 1136, 1143, 1216, 1221, 1227, 1231, 1236, 1241, 1243], "manag": [1, 5, 14, 23, 29, 62, 70, 74, 75, 76, 80, 96, 99, 110, 163, 189, 191, 200, 205, 206, 214, 217, 219, 222, 226, 229, 230, 236, 237, 241, 246, 247, 250, 252, 262, 268, 271, 276, 278, 279, 285, 288, 303, 310, 317, 319, 320, 323, 324, 327, 345, 346, 352, 354, 355, 358, 364, 369, 371, 374, 375, 378, 400, 401, 403, 410, 411, 415, 416, 477, 494, 505, 517, 543, 556, 614, 620, 645, 650, 740, 751, 752, 754, 783, 788, 799, 800, 802, 803, 804, 808, 816, 837, 839, 840, 858, 864, 871, 873, 896, 902, 905, 908, 918, 923, 924, 979, 984, 993, 1001, 1013, 1046, 1047, 1060, 1077, 1088, 1097, 1116, 1141, 1145, 1186, 1187, 1188, 1189, 1190, 1194, 1202, 1204, 1216, 1218, 1220, 1221, 1225, 1230, 1241, 1243, 1246, 1253], "schittstel": 1, "zum": [1, 3, 5, 163, 166, 198, 199, 208, 213, 217, 223, 233, 246, 253, 270, 330, 415, 1236, 1238, 1239, 1240, 1252, 1255, 1257], "weiser": 1, "alter": [1, 225, 226, 276, 299, 415, 646, 654, 975, 1188], "mann": 1, "2020": [1, 23, 126, 144, 147, 167, 186, 187, 193, 197, 198, 202, 205, 209, 228, 230, 265, 414, 601, 602, 751, 764, 914, 915, 995, 1004, 1022, 1112, 1187, 1192, 1230, 1252], "embed": [1, 3, 4, 5, 23, 74, 89, 106, 117, 147, 169, 185, 186, 187, 190, 192, 206, 230, 232, 255, 354, 395, 400, 402, 414, 416, 809, 820, 833, 839, 840, 875, 887, 926, 948, 994, 1005, 1046, 1062, 1090, 1131, 1237, 1238, 1239, 1243, 1244, 1247, 1248, 1252, 1256], "comput": [1, 23, 28, 29, 32, 74, 86, 89, 103, 117, 139, 169, 193, 232, 282, 291, 315, 317, 341, 342, 380, 382, 395, 397, 400, 402, 414, 423, 496, 501, 502, 547, 644, 654, 657, 663, 696, 793, 806, 818, 840, 909, 916, 985, 993, 995, 996, 1003, 1030, 1044, 1047, 1112, 1201, 1216, 1246], "electron": [1, 195, 415, 993], "engin": [1, 163, 166, 193, 266, 268, 334, 337, 415, 486, 490, 494, 504, 555, 588, 596, 993, 1110, 1259], "kontakt": [2, 23], "curriculum": [2, 5], "vita": [2, 5], "skill": [2, 87, 186, 1046, 1110], "projekt": [2, 187, 208, 1248, 1252], "stand": [3, 200, 249, 400, 887, 994, 1079, 1196], "j\u00e4nner": [3, 23], "2014": [3, 187, 208, 229, 265, 299, 314, 323, 345, 990, 1188], "devicedriv": 3, "die": [3, 5, 7, 8, 37, 45, 61, 63, 67, 163, 166, 172, 186, 199, 204, 207, 208, 209, 210, 213, 217, 223, 225, 233, 234, 236, 238, 240, 243, 244, 246, 249, 253, 262, 269, 272, 275, 278, 281, 282, 285, 310, 338, 364, 392, 397, 398, 402, 415, 416, 570, 584, 975, 976, 1048, 1188, 1235, 1236, 1237, 1238, 1239, 1240, 1245, 1247, 1251, 1252, 1253, 1254, 1255, 1257, 1258, 1259], "pci": [3, 237, 840, 864, 865, 927, 984, 992, 1028, 1246], "hardwar": [3, 5, 67, 71, 74, 75, 76, 80, 82, 139, 143, 152, 175, 179, 189, 190, 193, 203, 206, 265, 266, 278, 315, 318, 319, 340, 344, 380, 383, 398, 399, 400, 415, 416, 432, 443, 446, 482, 500, 504, 594, 595, 596, 597, 601, 818, 840, 867, 887, 918, 924, 925, 984, 985, 986, 987, 990, 993, 1009, 1011, 1012, 1025, 1028, 1060, 1235, 1244, 1246, 1252], "ein": [3, 5, 7, 8, 37, 163, 166, 198, 199, 204, 207, 208, 209, 210, 213, 215, 217, 225, 229, 230, 232, 233, 234, 236, 238, 240, 241, 243, 244, 246, 247, 249, 253, 255, 259, 262, 263, 269, 270, 272, 275, 278, 279, 281, 282, 285, 293, 300, 303, 310, 320, 324, 330, 338, 342, 346, 352, 358, 368, 389, 392, 397, 402, 415, 416, 460, 608, 913, 975, 976, 1048, 1117, 1235, 1236, 1237, 1238, 1239, 1240, 1243, 1245, 1248, 1251, 1253, 1254, 1255, 1256, 1257, 1258, 1259], "messger\u00e4teherstel": 3, "de": [3, 5, 7, 8, 32, 37, 163, 166, 186, 198, 200, 204, 207, 208, 213, 217, 223, 225, 233, 234, 243, 244, 253, 269, 278, 281, 285, 397, 414, 491, 805, 823, 827, 909, 911, 976, 989, 1187, 1213, 1235, 1236, 1237, 1238, 1240, 1245, 1247, 1251, 1252, 1254, 1255, 1257, 1258, 1259], "untenstehenden": 3, "zeit": [3, 5, 199, 234, 352, 1236, 1238, 1258], "dato": 3, "ort": 3, "raum": [3, 213], "anbindung": 3, "verschieden": [3, 23, 223, 415, 1237, 1238, 1239, 1245, 1252, 1257], "hardwareinterfac": 3, "i2c": [3, 4, 80, 83, 87, 165, 175, 178, 190, 191, 217, 230, 306, 400, 403, 408, 415, 541, 571, 630, 631, 639, 840, 887, 984, 991, 993, 1028, 1245, 1252], "spi": [3, 4, 80, 190, 208, 217, 415, 630, 631, 639, 986, 987, 988, 993, 1028, 1245, 1252], "can": [3, 12, 17, 29, 57, 58, 67, 70, 77, 82, 85, 110, 112, 113, 126, 127, 134, 138, 152, 159, 171, 184, 187, 189, 190, 191, 192, 194, 195, 196, 197, 201, 205, 206, 207, 210, 212, 214, 218, 219, 220, 222, 226, 227, 228, 242, 249, 251, 259, 262, 265, 266, 268, 275, 278, 282, 285, 288, 306, 309, 312, 314, 315, 317, 320, 324, 330, 332, 345, 346, 348, 352, 358, 372, 374, 376, 383, 389, 391, 394, 397, 402, 408, 415, 420, 422, 426, 430, 434, 440, 443, 454, 458, 464, 465, 468, 475, 480, 482, 486, 487, 488, 489, 490, 493, 494, 498, 499, 500, 504, 506, 507, 509, 514, 518, 519, 520, 522, 524, 526, 534, 535, 539, 540, 544, 549, 552, 553, 556, 563, 564, 568, 569, 570, 582, 586, 595, 602, 628, 634, 644, 646, 651, 653, 654, 659, 660, 667, 678, 682, 698, 699, 704, 713, 717, 720, 724, 730, 735, 737, 738, 739, 748, 750, 753, 754, 755, 756, 760, 765, 789, 792, 793, 795, 801, 802, 805, 806, 807, 810, 813, 815, 820, 836, 838, 840, 846, 858, 873, 877, 881, 885, 887, 892, 895, 901, 913, 914, 915, 918, 919, 920, 921, 923, 925, 926, 927, 928, 930, 931, 933, 938, 940, 942, 944, 946, 948, 949, 984, 985, 991, 992, 993, 994, 997, 999, 1001, 1003, 1004, 1005, 1012, 1014, 1018, 1022, 1031, 1033, 1044, 1047, 1048, 1056, 1060, 1064, 1075, 1080, 1082, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1094, 1097, 1098, 1099, 1106, 1107, 1109, 1110, 1115, 1118, 1119, 1122, 1127, 1129, 1135, 1137, 1139, 1143, 1145, 1152, 1162, 1173, 1183, 1184, 1185, 1187, 1193, 1195, 1200, 1201, 1207, 1209, 1214, 1216, 1221, 1241, 1243, 1245, 1252, 1256, 1258], "custom": [3, 27, 29, 32, 39, 99, 175, 179, 183, 186, 190, 193, 195, 196, 202, 206, 219, 227, 229, 231, 259, 265, 268, 275, 278, 279, 306, 308, 315, 317, 342, 380, 383, 384, 385, 386, 388, 396, 397, 415, 504, 535, 548, 562, 590, 593, 596, 598, 600, 620, 642, 644, 650, 715, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 752, 771, 773, 783, 788, 799, 808, 816, 825, 837, 839, 840, 860, 887, 1004, 1035, 1060, 1187, 1229], "firmwar": [3, 128, 130, 144, 178, 190, 191, 193, 200, 209, 507, 512, 513, 514, 515, 985, 992, 1028], "kunden": [3, 5, 23, 204, 308, 415, 1235], "dezemb": [3, 23], "2012": [3, 23, 186, 202, 265], "backport": 3, "integr": [3, 16, 23, 38, 43, 124, 136, 144, 152, 187, 195, 197, 205, 217, 222, 242, 332, 341, 348, 376, 379, 399, 404, 405, 406, 494, 517, 519, 523, 532, 533, 543, 547, 760, 840, 860, 869, 927, 948, 985, 987, 993, 994, 1213, 1221, 1224, 1243, 1245, 1252], "touchcontrol": 3, "driver": [3, 5, 80, 87, 165, 175, 178, 190, 193, 195, 203, 206, 207, 306, 398, 399, 414, 416, 500, 840, 841, 843, 844, 846, 847, 848, 849, 850, 851, 852, 854, 856, 857, 858, 859, 861, 862, 863, 866, 867, 868, 870, 871, 872, 874, 876, 878, 880, 881, 882, 884, 886, 887, 888, 891, 893, 896, 898, 902, 905, 908, 918, 924, 927, 984, 993, 994, 1014, 1028, 1236, 1256, 1258], "systemintegrationsfirma": 3, "stuttgart": 3, "mai": [3, 43, 110, 112, 113, 127, 143, 159, 178, 190, 194, 196, 201, 205, 249, 259, 265, 272, 275, 278, 282, 288, 315, 324, 352, 368, 430, 437, 439, 443, 452, 517, 524, 535, 538, 566, 651, 704, 803, 813, 817, 838, 869, 871, 879, 887, 920, 921, 930, 935, 936, 948, 993, 994, 1016, 1018, 1019, 1020, 1022, 1078, 1079, 1087, 1129, 1213, 1223], "2013": [3, 23, 186, 414], "python": [3, 4, 6, 7, 10, 13, 21, 23, 24, 28, 29, 40, 60, 68, 74, 76, 80, 87, 93, 94, 136, 148, 169, 170, 171, 185, 186, 187, 203, 205, 206, 209, 211, 219, 234, 235, 239, 242, 243, 244, 246, 249, 251, 258, 259, 265, 274, 275, 278, 282, 285, 306, 308, 317, 383, 384, 385, 386, 387, 388, 392, 393, 396, 398, 399, 404, 405, 406, 410, 411, 412, 414, 416, 428, 600, 742, 760, 779, 791, 797, 814, 840, 841, 948, 970, 984, 986, 991, 992, 1033, 1082, 1083, 1084, 1085, 1087, 1089, 1090, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1102, 1106, 1107, 1113, 1117, 1121, 1122, 1128, 1130, 1132, 1133, 1135, 1138, 1139, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1189, 1190, 1191, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1203, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1219, 1220, 1221, 1223, 1224, 1225, 1241, 1245, 1251, 1252, 1259], "programm": [3, 61, 63, 208, 209, 213, 222, 233, 238, 242, 246, 278, 303, 315, 316, 317, 344, 358, 392, 398, 415, 464, 477, 484, 490, 494, 644, 646, 647, 716, 751, 785, 788, 924, 930, 981, 993, 1014, 1048, 1110, 1111, 1115, 1137, 1195, 1202, 1215, 1238, 1241, 1246, 1254, 1255, 1257, 1259], "zur": [3, 198, 213, 217, 225, 235, 246, 392, 397, 402, 415, 1048, 1236, 1238, 1239, 1240, 1252, 1257, 1258, 1259], "IT": [3, 306, 308, 415, 648, 1140], "wie": [3, 5, 163, 166, 198, 199, 207, 208, 209, 213, 217, 223, 225, 233, 238, 241, 248, 272, 368, 392, 415, 1235, 1236, 1238, 1239, 1240, 1245, 1248, 1252, 1253, 1255, 1257, 1258], "beispiel": [3, 5, 23, 163, 166, 209, 233, 234, 256, 262, 283, 415, 1238, 1239, 1240, 1251, 1252, 1254, 1255, 1257, 1259], "e": [3, 5, 7, 32, 37, 38, 42, 48, 62, 99, 126, 138, 139, 144, 193, 195, 196, 197, 198, 199, 201, 204, 205, 207, 208, 209, 211, 212, 213, 217, 223, 225, 233, 234, 238, 240, 242, 243, 246, 249, 250, 251, 254, 255, 259, 262, 263, 265, 268, 270, 272, 275, 278, 279, 282, 285, 288, 291, 300, 303, 306, 307, 310, 312, 314, 320, 324, 330, 342, 346, 352, 355, 358, 364, 368, 371, 372, 376, 379, 390, 391, 392, 393, 397, 402, 415, 419, 436, 439, 443, 446, 449, 454, 464, 467, 482, 486, 490, 493, 494, 506, 522, 524, 530, 531, 534, 535, 537, 540, 543, 552, 556, 564, 569, 573, 585, 598, 601, 602, 637, 644, 648, 649, 659, 667, 678, 698, 716, 717, 726, 732, 737, 744, 747, 751, 754, 765, 771, 785, 806, 815, 817, 818, 824, 838, 846, 865, 906, 913, 914, 915, 925, 926, 930, 931, 932, 933, 948, 970, 977, 992, 993, 994, 1005, 1014, 1024, 1026, 1044, 1047, 1048, 1059, 1060, 1062, 1064, 1065, 1077, 1082, 1086, 1094, 1106, 1108, 1109, 1127, 1132, 1133, 1157, 1197, 1201, 1206, 1209, 1212, 1215, 1221, 1223, 1235, 1236, 1238, 1240, 1244, 1245, 1251, 1252, 1254, 1255, 1257, 1259], "bill": [3, 310], "email": [3, 32, 42, 168, 191, 197, 201, 206, 230, 246, 310, 408, 1001, 1201, 1205, 1206, 1207, 1209, 1210, 1211], "kommunik": [3, 23, 1252, 1255, 1257, 1258, 1259], "extrakt": 3, "attach": [3, 211, 259, 265, 275, 278, 547, 869, 993, 1046, 1195], "signaturverifik": 3, "informationssystem": 3, "februar": 3, "juni": 3, "vollautomatisch": 3, "instal": [3, 29, 32, 45, 59, 68, 92, 99, 100, 106, 126, 143, 149, 162, 170, 186, 187, 190, 191, 195, 217, 220, 226, 227, 229, 231, 242, 257, 259, 260, 263, 265, 268, 273, 275, 278, 279, 287, 290, 299, 302, 309, 312, 315, 316, 317, 322, 323, 327, 328, 329, 333, 334, 344, 349, 350, 351, 356, 357, 362, 366, 367, 375, 376, 377, 378, 379, 380, 435, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 507, 513, 516, 517, 523, 528, 530, 533, 536, 539, 548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 607, 609, 614, 642, 650, 665, 668, 671, 687, 693, 697, 706, 709, 710, 715, 724, 725, 726, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 745, 752, 783, 799, 808, 816, 825, 837, 839, 840, 860, 867, 883, 887, 888, 927, 984, 987, 992, 994, 1059, 1061, 1064, 1065, 1067, 1070, 1073, 1094, 1110, 1114, 1141, 1186, 1199, 1206, 1216, 1217, 1224, 1229, 1231], "serveranlagen": 3, "herstel": 3, "radar\u00fcberwachungssystemen": 3, "septemb": 3, "unterschleissheim": 3, "m\u00fcnchen": 3, "instandhaltungsarbeiten": 3, "hauseigenen": 3, "system": [3, 5, 14, 23, 37, 45, 75, 80, 82, 99, 103, 104, 110, 112, 113, 126, 139, 147, 148, 159, 162, 163, 166, 171, 186, 187, 190, 191, 196, 197, 201, 203, 205, 206, 207, 208, 214, 217, 219, 220, 230, 242, 247, 250, 257, 259, 262, 263, 267, 268, 273, 275, 276, 278, 285, 288, 294, 295, 296, 303, 305, 310, 315, 320, 323, 324, 326, 346, 352, 358, 365, 370, 394, 397, 398, 399, 400, 401, 402, 408, 410, 411, 414, 416, 450, 459, 466, 470, 472, 476, 479, 483, 490, 491, 492, 496, 497, 501, 502, 504, 508, 526, 535, 537, 547, 548, 555, 568, 590, 601, 642, 677, 720, 726, 745, 783, 816, 817, 818, 837, 838, 839, 840, 843, 846, 858, 860, 879, 885, 887, 917, 918, 919, 920, 921, 922, 923, 924, 926, 927, 928, 931, 932, 934, 935, 936, 938, 939, 940, 941, 942, 945, 948, 974, 975, 979, 984, 988, 993, 994, 995, 1000, 1006, 1010, 1011, 1012, 1013, 1015, 1018, 1020, 1023, 1024, 1026, 1027, 1028, 1029, 1039, 1042, 1045, 1047, 1048, 1050, 1056, 1059, 1060, 1062, 1063, 1064, 1086, 1087, 1098, 1114, 1143, 1188, 1223, 1237, 1244, 1246, 1247], "auf": [3, 5, 8, 23, 163, 166, 172, 186, 191, 199, 204, 207, 208, 209, 213, 217, 223, 225, 233, 234, 238, 244, 246, 253, 254, 269, 272, 279, 281, 293, 368, 392, 397, 398, 402, 415, 976, 1235, 1236, 1237, 1238, 1239, 1240, 1245, 1247, 1248, 1251, 1255, 1258, 1259], "gentoo": [3, 186, 189, 202, 500, 1236], "updat": [3, 44, 138, 143, 189, 191, 205, 209, 237, 262, 270, 285, 295, 297, 303, 310, 315, 317, 324, 330, 342, 358, 364, 368, 397, 404, 599, 601, 662, 897, 1046, 1077, 1078, 1079, 1080, 1081, 1135, 1137, 1212, 1224, 1230, 1253], "betriebssystem": [3, 1245, 1247, 1252, 1254], "usb": [3, 4, 62, 189, 190, 191, 193, 415, 493, 865, 918, 987, 1245], "touchscreen": 3, "cheat": [3, 33, 230, 242, 371, 497, 771, 948], "detect": [3, 32, 108, 210, 222, 462, 465, 499, 534, 625, 652, 756, 781, 802, 881, 993, 994, 1020, 1029, 1052, 1063, 1064, 1167], "m\u00fcnzeinwurf": 3, "via": [3, 17, 62, 87, 129, 135, 136, 163, 166, 190, 193, 197, 202, 211, 226, 227, 249, 255, 276, 278, 306, 309, 312, 315, 324, 341, 396, 403, 415, 513, 514, 528, 544, 549, 569, 654, 678, 790, 804, 840, 867, 887, 890, 918, 924, 930, 945, 981, 992, 1003, 1004, 1011, 1018, 1028, 1049, 1056, 1075, 1142, 1241], "gpio": [3, 4, 61, 63, 65, 66, 67, 74, 75, 76, 80, 86, 126, 127, 128, 130, 135, 136, 137, 147, 187, 306, 315, 345, 387, 400, 402, 406, 840, 864, 889, 891, 896, 902, 905, 908, 984, 989, 993, 1025, 1029, 1245, 1252], "interrupt": [3, 62, 67, 68, 88, 112, 113, 159, 208, 237, 306, 500, 840, 858, 864, 879, 881, 882, 884, 885, 889, 890, 891, 895, 896, 899, 902, 905, 906, 908, 918, 920, 921, 924, 927, 984, 989, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1025, 1027, 1028, 1044, 1047, 1048, 1050, 1059, 1060, 1245, 1246, 1252], "m\u00e4rz": 3, "firma": [3, 204, 213, 308, 414, 1235, 1245, 1252], "spielo": 3, "intern": [3, 57, 86, 127, 131, 132, 137, 143, 223, 228, 251, 259, 262, 263, 265, 275, 278, 309, 312, 341, 390, 404, 433, 463, 478, 493, 535, 540, 543, 657, 698, 746, 789, 834, 838, 865, 873, 899, 992, 993, 994, 1035, 1087, 1091, 1135, 1145, 1201, 1206], "datenkonvertierung": 3, "einem": [3, 5, 23, 163, 166, 198, 208, 209, 213, 217, 223, 225, 233, 234, 238, 240, 246, 272, 278, 285, 300, 397, 398, 402, 415, 1236, 1238, 1240, 1245, 1254, 1258, 1259], "konvertierung": [3, 23, 1238], "asterix": 3, "format": [3, 17, 23, 29, 30, 31, 42, 51, 53, 54, 55, 56, 92, 131, 132, 134, 152, 168, 193, 209, 210, 212, 213, 220, 227, 229, 231, 234, 238, 247, 250, 257, 258, 260, 266, 271, 272, 276, 278, 279, 284, 287, 288, 299, 302, 303, 308, 322, 323, 324, 328, 329, 331, 337, 340, 341, 344, 345, 350, 351, 352, 357, 359, 362, 363, 366, 367, 420, 421, 426, 462, 506, 507, 518, 840, 841, 887, 918, 925, 948, 1008, 1062, 1102, 1110, 1147, 1157, 1160, 1168, 1169, 1171, 1172, 1181, 1182, 1183, 1184, 1186, 1188, 1193, 1204, 1216, 1251, 1255], "zweck": [3, 223, 1252], "extern": [3, 13, 21, 23, 29, 62, 87, 189, 193, 197, 219, 222, 229, 251, 252, 257, 268, 273, 278, 287, 308, 323, 333, 341, 349, 377, 397, 402, 430, 434, 460, 462, 464, 466, 472, 476, 479, 483, 487, 492, 496, 501, 502, 507, 514, 515, 517, 523, 528, 533, 537, 628, 745, 783, 789, 837, 839, 840, 844, 847, 849, 852, 854, 857, 860, 864, 865, 866, 868, 872, 878, 884, 887, 891, 896, 897, 902, 905, 908, 984, 994, 1044, 1111, 1147, 1148, 1149, 1150, 1152, 1153, 1154, 1186, 1188, 1228, 1230, 1238, 1245, 1252], "datenquellen": 3, "export": [3, 40, 60, 139, 143, 190, 201, 226, 251, 252, 255, 257, 358, 383, 789, 843, 919, 949, 985, 993, 1026, 1028, 1029, 1075, 1077, 1080, 1179, 1196], "daten": [3, 223, 225, 238, 248, 253, 338, 1048, 1258], "soap": [3, 32], "ip": [3, 168, 194, 197, 207, 214, 242, 368, 394, 397, 403, 408, 625, 637, 987, 1005, 1011, 1047, 1216, 1245, 1252, 1256, 1258], "kamera": 3, "einen": [3, 5, 23, 198, 199, 209, 213, 217, 223, 225, 233, 246, 282, 415, 703, 975, 1235, 1236, 1237, 1238, 1240, 1247, 1255, 1257, 1258, 1259], "videomautsystemen": 3, "implement": [3, 16, 23, 24, 28, 42, 50, 53, 54, 55, 61, 62, 63, 67, 71, 84, 86, 87, 99, 112, 113, 116, 122, 124, 126, 142, 159, 175, 190, 192, 195, 210, 218, 226, 228, 246, 251, 252, 259, 265, 269, 272, 273, 275, 280, 282, 297, 303, 312, 315, 316, 317, 318, 319, 324, 340, 344, 355, 372, 373, 374, 380, 384, 385, 390, 397, 408, 431, 433, 465, 475, 477, 478, 494, 504, 510, 531, 532, 535, 542, 543, 544, 546, 547, 548, 551, 552, 554, 563, 564, 568, 569, 570, 585, 589, 591, 592, 593, 594, 595, 597, 598, 599, 603, 604, 605, 606, 608, 610, 615, 618, 619, 643, 645, 649, 653, 661, 662, 663, 664, 669, 698, 704, 713, 715, 716, 717, 724, 726, 733, 734, 735, 736, 737, 738, 739, 740, 746, 751, 752, 753, 755, 765, 780, 781, 782, 783, 789, 790, 792, 801, 805, 807, 809, 815, 831, 834, 835, 838, 839, 840, 846, 853, 856, 873, 901, 918, 920, 921, 925, 927, 985, 992, 994, 1005, 1008, 1014, 1030, 1035, 1056, 1081, 1085, 1086, 1091, 1092, 1093, 1099, 1103, 1127, 1163, 1167, 1176, 1183, 1188, 1197, 1200, 1204, 1241, 1246], "gige": 3, "vision": [3, 308, 415], "clientlibrari": 3, "softwarebasiert": 3, "kamerasimul": 3, "t\u00e4tigkeiten": 3, "hardwareteil": 3, "rs232": [3, 4, 230], "lagesensor": 3, "anpassung": 3, "cryptsetup": 3, "filesystemverschl\u00fcsselung": 3, "anforderungen": [3, 1235], "applik": [3, 207], "august": [3, 23], "logistik": 3, "autom": [3, 229, 242, 273, 287, 329, 372, 415, 985, 996, 1003, 1077, 1079, 1087, 1188], "beteiligten": 3, "protokol": [3, 4, 1245, 1252, 1257], "server": [3, 65, 168, 194, 197, 203, 209, 230, 242, 253, 262, 278, 285, 288, 299, 303, 310, 320, 324, 346, 352, 358, 364, 500, 566, 580, 913, 988, 1001, 1003, 1011, 1056, 1200, 1216, 1233, 1252], "zu": [3, 6, 8, 163, 166, 198, 199, 204, 207, 208, 213, 217, 223, 234, 235, 238, 240, 244, 253, 254, 269, 270, 279, 281, 285, 293, 300, 397, 402, 415, 909, 1235, 1236, 1237, 1238, 1239, 1240, 1245, 1248, 1251, 1252, 1253, 1254, 1255, 1257, 1258, 1259], "sp": [3, 753], "tcp": [3, 190, 197, 214, 230, 335, 986, 1011, 1204, 1245, 1252, 1256, 1258], "autonomen": 3, "fahrzeugen": 3, "kundenapplikationen": 3, "autonom": [3, 232, 985, 1195], "fahrzeug": 3, "mikrocontrol": 3, "seriel": [3, 4, 1245, 1247], "beratend": 3, "versionskontrol": [3, 23, 203, 1253], "architektur": [3, 23, 203, 415], "2008": [3, 201, 265, 1112], "ylog": [3, 23], "gmbh": [3, 23, 506], "dobl": [3, 23], "heizsystem": 3, "parametrisierung": 3, "anlag": [3, 238], "mit": [3, 4, 5, 7, 8, 23, 186, 198, 199, 207, 208, 209, 213, 215, 217, 225, 229, 230, 234, 235, 236, 239, 240, 243, 244, 246, 253, 254, 255, 256, 269, 278, 279, 281, 282, 285, 293, 324, 368, 393, 397, 398, 402, 414, 416, 975, 1143, 1235, 1237, 1238, 1239, 1240, 1245, 1247, 1251, 1253, 1254, 1255, 1257, 1258, 1259], "iar": 3, "arm": [3, 189, 201, 242, 438, 867, 887, 888, 992, 1005, 1059, 1062, 1063, 1065, 1075], "workbench": 3, "segger": [3, 190], "embo": [3, 190], "vba": 3, "excel": [3, 80, 191, 229, 255, 524, 1179, 1193], "verteilung": 3, "microsoft": [3, 11, 196, 197, 200, 202, 206, 217, 225, 295, 297, 306, 315, 317, 415, 417, 465, 481, 927, 1179, 1235], "net": [3, 23, 39, 43, 66, 126, 144, 147, 176, 207, 208, 233, 285, 291, 358, 372, 505, 601, 602, 881, 887, 914, 915, 976, 1011, 1201], "versionskontrollinfrastruktur": 3, "assoziiert": [3, 209, 1254, 1255], "script": [3, 38, 60, 64, 68, 180, 183, 186, 189, 191, 196, 197, 206, 221, 229, 230, 232, 257, 259, 265, 275, 278, 305, 306, 326, 370, 376, 379, 388, 397, 414, 416, 498, 506, 517, 519, 523, 528, 533, 539, 789, 840, 887, 930, 933, 948, 1015, 1077, 1088, 1114, 1115, 1139, 1143, 1223, 1236, 1247], "shell": [3, 4, 32, 99, 101, 103, 106, 126, 162, 163, 206, 210, 229, 230, 232, 270, 278, 296, 305, 326, 346, 358, 370, 382, 383, 396, 397, 398, 399, 402, 414, 416, 418, 500, 506, 519, 548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 642, 726, 816, 838, 839, 840, 887, 910, 914, 915, 916, 917, 920, 921, 922, 923, 925, 926, 929, 930, 932, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 948, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 963, 964, 965, 966, 976, 977, 978, 981, 984, 985, 995, 996, 997, 998, 999, 1007, 1013, 1014, 1015, 1023, 1025, 1028, 1029, 1039, 1042, 1045, 1047, 1062, 1064, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1077, 1113, 1114, 1116, 1137, 1139, 1166, 1228, 1236, 1243, 1245, 1247, 1248, 1252, 1253, 1254, 1256], "oststeiermark": 3, "erweiterung": [3, 415], "buildumgebung": 3, "cmake": [3, 4, 5, 44, 74, 75, 76, 80, 89, 99, 108, 126, 149, 155, 162, 187, 196, 201, 206, 217, 220, 252, 268, 295, 297, 315, 317, 373, 400, 414, 416, 417, 507, 510, 511, 512, 513, 514, 515, 516, 518, 519, 520, 522, 523, 525, 526, 528, 530, 531, 532, 537, 538, 539, 540, 548, 562, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 600, 601, 602, 642, 662, 840, 841, 984, 1015, 1073, 1226, 1248], "www": [3, 20, 23, 61, 63, 66, 67, 87, 165, 186, 196, 205, 207, 227, 230, 231, 303, 375, 378, 417, 805, 843, 858, 864, 888, 1028, 1199, 1201], "org": [3, 4, 23, 60, 65, 66, 171, 176, 182, 186, 189, 193, 197, 201, 207, 209, 220, 230, 233, 250, 259, 265, 266, 275, 278, 282, 303, 316, 343, 368, 375, 378, 401, 417, 514, 517, 843, 858, 860, 864, 887, 888, 1028, 1075, 1077, 1111, 1132, 1143, 1182, 1199, 1216, 1217], "confix": [3, 187], "2009": [3, 1188], "schulungen": [3, 6, 23, 186, 187, 204], "dem": [3, 5, 8, 23, 163, 166, 198, 199, 207, 208, 209, 213, 217, 230, 234, 244, 253, 256, 269, 270, 279, 281, 293, 324, 364, 397, 402, 415, 416, 1048, 1235, 1236, 1237, 1239, 1240, 1245, 1247, 1254, 1255, 1257], "umkrei": 3, "softwareentwicklung": [3, 4, 203], "nicht": [3, 5, 7, 23, 37, 163, 166, 198, 199, 204, 207, 213, 217, 234, 235, 238, 243, 246, 265, 270, 272, 278, 285, 291, 310, 320, 392, 397, 415, 976, 1236, 1237, 1238, 1239, 1240, 1245, 1247, 1248, 1251, 1252, 1253, 1254, 1257, 1258, 1259], "from": [3, 5, 8, 13, 21, 27, 33, 34, 35, 36, 39, 44, 53, 54, 56, 60, 62, 67, 70, 75, 76, 80, 83, 84, 86, 88, 92, 99, 100, 101, 103, 104, 105, 108, 111, 112, 113, 116, 126, 127, 128, 129, 130, 132, 133, 138, 143, 148, 149, 150, 151, 156, 157, 159, 162, 168, 171, 179, 183, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 200, 203, 205, 206, 207, 209, 210, 212, 213, 218, 222, 223, 226, 227, 229, 230, 231, 232, 234, 240, 241, 242, 247, 249, 250, 251, 252, 254, 256, 257, 259, 263, 265, 266, 272, 273, 275, 276, 279, 280, 282, 285, 287, 290, 294, 295, 297, 299, 300, 302, 305, 308, 312, 315, 316, 317, 318, 319, 322, 324, 326, 327, 328, 329, 334, 337, 340, 342, 344, 345, 350, 351, 352, 354, 355, 356, 357, 362, 363, 366, 367, 368, 370, 371, 373, 374, 376, 379, 382, 383, 384, 385, 386, 387, 388, 390, 394, 396, 397, 399, 400, 401, 402, 404, 405, 418, 419, 425, 427, 428, 432, 435, 438, 441, 442, 443, 446, 450, 457, 459, 460, 465, 466, 472, 473, 476, 479, 480, 482, 483, 484, 486, 488, 492, 493, 494, 496, 500, 501, 502, 504, 505, 509, 510, 511, 512, 513, 514, 518, 520, 526, 528, 530, 532, 534, 537, 539, 540, 542, 543, 544, 549, 553, 563, 567, 569, 585, 586, 587, 588, 590, 593, 596, 598, 599, 600, 601, 602, 620, 628, 631, 637, 642, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 657, 659, 660, 662, 663, 673, 677, 678, 695, 707, 714, 717, 719, 725, 729, 736, 740, 743, 744, 745, 747, 751, 756, 760, 765, 771, 777, 782, 783, 795, 797, 801, 802, 803, 804, 807, 809, 815, 817, 822, 830, 835, 836, 837, 838, 839, 840, 841, 842, 843, 846, 856, 858, 862, 867, 869, 875, 879, 887, 888, 889, 890, 895, 897, 899, 907, 912, 913, 914, 915, 918, 919, 923, 924, 925, 927, 930, 931, 932, 938, 940, 945, 947, 948, 949, 950, 951, 953, 954, 967, 972, 980, 981, 984, 985, 987, 988, 989, 990, 993, 994, 997, 1001, 1005, 1008, 1009, 1010, 1011, 1012, 1015, 1018, 1020, 1021, 1023, 1025, 1028, 1031, 1036, 1041, 1042, 1047, 1048, 1050, 1059, 1060, 1065, 1075, 1077, 1079, 1081, 1086, 1087, 1088, 1091, 1094, 1095, 1096, 1097, 1098, 1099, 1102, 1106, 1109, 1110, 1111, 1114, 1115, 1118, 1121, 1130, 1133, 1134, 1136, 1137, 1141, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1184, 1185, 1186, 1189, 1190, 1191, 1192, 1194, 1196, 1198, 1200, 1201, 1202, 1203, 1204, 1208, 1209, 1210, 1213, 1215, 1216, 1218, 1220, 1221, 1223, 1225, 1228, 1230, 1233, 1244, 1251], "scratch": [3, 42, 222, 992, 1195], "mathia": [3, 1236], "kettner": [3, 186], "novemb": [3, 23], "bodenseo": [3, 1252], "singen": 3, "bodense": [3, 1252], "spielesoftwar": 3, "entwurf": [3, 23], "systemschnittstellen": [3, 1254], "driverentwicklung": [3, 203], "powerpc": 3, "vanilla": [3, 193], "kernel": [3, 4, 5, 43, 60, 66, 80, 112, 113, 159, 165, 168, 175, 179, 180, 185, 186, 187, 189, 190, 192, 200, 201, 202, 203, 206, 208, 223, 230, 262, 275, 278, 285, 288, 303, 306, 310, 320, 324, 346, 352, 358, 364, 383, 403, 414, 416, 458, 480, 493, 840, 841, 842, 843, 844, 846, 847, 848, 849, 850, 852, 854, 856, 857, 858, 859, 866, 867, 868, 870, 872, 873, 874, 875, 876, 877, 878, 880, 882, 883, 884, 885, 886, 891, 893, 896, 898, 899, 900, 901, 902, 905, 907, 908, 912, 918, 923, 925, 926, 927, 932, 976, 981, 984, 988, 990, 991, 993, 994, 1005, 1008, 1011, 1012, 1014, 1017, 1028, 1030, 1031, 1044, 1046, 1047, 1050, 1055, 1059, 1060, 1062, 1236, 1245, 1256], "abteilungsleitung": 3, "ag": [3, 32, 195, 197, 209, 223, 265, 268, 310, 391, 489, 728, 729, 730, 731, 732, 734, 735, 736, 737, 738, 739, 740, 840, 912, 1062, 1205, 1206, 1207, 1209, 1210, 1211, 1212, 1213], "realtim": [4, 5, 80, 82, 163, 203, 206, 207, 306, 398, 399, 410, 411, 416, 815, 817, 840, 885, 889, 892, 895, 906, 984, 988, 993, 994, 1025, 1044, 1045, 1047, 1056, 1255, 1256, 1257], "hardwareintegr": [4, 203], "netzwerkprogrammierung": [4, 1245, 1258], "multithread": [4, 29, 61, 63, 67, 74, 75, 76, 77, 80, 185, 186, 190, 192, 203, 222, 226, 257, 266, 276, 293, 315, 317, 345, 406, 410, 411, 415, 416, 481, 491, 743, 771, 809, 839, 840, 1033, 1038, 1047, 1060, 1061, 1088, 1097, 1186, 1188, 1241, 1245, 1256], "kerneldriv": 4, "rs485": 4, "In": [4, 6, 7, 23, 42, 44, 50, 62, 65, 67, 99, 105, 106, 108, 112, 113, 125, 126, 143, 144, 149, 150, 152, 159, 163, 166, 171, 178, 189, 190, 191, 192, 194, 196, 199, 201, 203, 205, 206, 214, 218, 223, 228, 235, 238, 242, 243, 251, 259, 265, 268, 272, 275, 276, 278, 279, 282, 290, 306, 315, 317, 324, 333, 349, 355, 368, 373, 374, 375, 378, 382, 392, 397, 414, 438, 452, 505, 507, 513, 515, 516, 517, 523, 524, 526, 528, 533, 534, 539, 542, 547, 548, 549, 562, 563, 564, 566, 568, 569, 585, 588, 590, 591, 592, 593, 594, 595, 597, 598, 599, 600, 602, 607, 609, 642, 646, 649, 650, 653, 657, 658, 665, 668, 671, 687, 693, 697, 706, 709, 710, 715, 720, 722, 724, 725, 726, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 743, 744, 752, 756, 760, 765, 783, 790, 793, 799, 803, 808, 810, 816, 825, 837, 838, 839, 840, 848, 853, 860, 885, 887, 899, 916, 919, 920, 921, 930, 932, 934, 938, 940, 942, 944, 959, 960, 984, 986, 992, 994, 997, 1001, 1004, 1011, 1019, 1022, 1025, 1027, 1035, 1041, 1046, 1048, 1056, 1063, 1067, 1068, 1069, 1070, 1071, 1073, 1084, 1085, 1087, 1091, 1094, 1095, 1099, 1100, 1106, 1107, 1111, 1114, 1128, 1129, 1132, 1133, 1134, 1145, 1146, 1156, 1165, 1171, 1176, 1184, 1188, 1197, 1200, 1204, 1209, 1210, 1212, 1213, 1223, 1224, 1238, 1242, 1245, 1252, 1254], "userspac": [4, 83, 87, 88, 139, 144, 147, 175, 190, 191, 262, 278, 285, 288, 303, 306, 310, 320, 324, 346, 352, 358, 364, 415, 493, 500, 840, 845, 856, 864, 865, 873, 879, 885, 889, 895, 899, 903, 905, 924, 926, 984, 987, 991, 994, 1005, 1025, 1027, 1028, 1046, 1050, 1056, 1245, 1246], "host": [4, 110, 189, 196, 201, 358, 394, 408, 867, 888, 986, 992, 1063, 1065, 1075, 1199, 1204, 1216], "devic": [4, 33, 71, 74, 75, 76, 80, 86, 91, 121, 127, 144, 152, 163, 175, 189, 190, 195, 208, 229, 237, 319, 374, 398, 399, 400, 585, 601, 602, 813, 815, 817, 838, 840, 849, 856, 857, 858, 864, 865, 868, 869, 871, 878, 887, 889, 891, 896, 902, 903, 905, 906, 908, 920, 921, 924, 927, 930, 970, 984, 993, 1005, 1008, 1014, 1022, 1028, 1047, 1050, 1051, 1053, 1056, 1073, 1098, 1236, 1245, 1246, 1247, 1252], "libusb": [4, 190], "gadgetf": [4, 190], "modbu": [4, 207], "verschiedenen": [4, 23, 217, 234, 1238, 1239, 1251, 1257], "rto": [4, 190], "yocto": [4, 175, 179, 180, 201, 517, 840, 887, 982, 1065, 1236], "programmiersprachen": [4, 8, 234, 244, 253, 269, 281, 1240, 1257], "incl": [4, 23, 162, 187, 1247], "buildsystem": 4, "autoconf": [4, 60, 201], "automak": [4, 196, 201, 1077, 1248], "meson": [4, 196, 201, 1054, 1058, 1077], "ninja": [4, 32, 201, 534, 1064, 1077], "make": [4, 13, 17, 43, 44, 45, 60, 62, 65, 66, 70, 72, 80, 82, 111, 128, 129, 131, 139, 144, 149, 171, 175, 180, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201, 205, 206, 210, 211, 214, 218, 219, 222, 226, 227, 228, 232, 241, 242, 249, 251, 252, 263, 266, 278, 282, 295, 297, 319, 324, 327, 332, 341, 348, 376, 379, 397, 400, 416, 449, 461, 465, 473, 480, 482, 484, 494, 500, 504, 509, 510, 511, 513, 517, 523, 532, 533, 534, 535, 538, 540, 542, 543, 544, 547, 563, 564, 569, 570, 587, 600, 602, 614, 620, 625, 631, 649, 660, 662, 664, 667, 679, 714, 716, 730, 743, 751, 756, 760, 797, 802, 803, 807, 817, 825, 834, 835, 840, 848, 855, 856, 860, 862, 865, 867, 887, 888, 904, 916, 927, 931, 933, 954, 967, 986, 987, 992, 993, 994, 1015, 1018, 1020, 1041, 1044, 1046, 1048, 1050, 1055, 1059, 1062, 1075, 1077, 1078, 1079, 1080, 1084, 1088, 1091, 1094, 1106, 1137, 1145, 1158, 1166, 1193, 1206, 1243, 1244, 1254], "perl": [4, 201, 785, 977, 1114], "leider": [4, 198, 265, 278, 285, 300, 1236, 1238], "objektorientiert": [4, 415, 1240], "ooa": 4, "ood": 4, "unit": [4, 74, 75, 76, 80, 84, 86, 99, 108, 126, 127, 134, 163, 192, 210, 225, 226, 229, 230, 241, 250, 268, 282, 307, 308, 315, 319, 332, 348, 406, 410, 411, 414, 487, 506, 532, 534, 566, 589, 595, 599, 628, 659, 789, 817, 818, 840, 841, 994, 1046, 1129, 1137, 1188, 1200, 1222, 1243, 1244], "test": [4, 16, 17, 33, 40, 74, 75, 76, 80, 84, 86, 99, 126, 129, 142, 144, 154, 155, 162, 163, 186, 190, 192, 193, 195, 196, 197, 203, 206, 209, 210, 216, 217, 218, 221, 225, 226, 229, 241, 247, 250, 263, 265, 266, 268, 278, 295, 297, 317, 324, 333, 345, 349, 355, 406, 408, 410, 414, 416, 417, 429, 491, 504, 505, 509, 517, 519, 523, 524, 533, 542, 543, 544, 545, 546, 547, 548, 551, 552, 554, 555, 564, 566, 567, 589, 591, 592, 593, 594, 595, 596, 597, 598, 600, 603, 604, 605, 606, 608, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 621, 625, 637, 639, 644, 645, 646, 657, 658, 660, 661, 663, 664, 722, 734, 735, 736, 737, 738, 739, 748, 750, 753, 754, 755, 786, 792, 797, 801, 802, 803, 804, 806, 819, 820, 834, 835, 836, 838, 840, 841, 845, 877, 887, 890, 892, 895, 903, 948, 986, 987, 992, 1015, 1071, 1079, 1110, 1119, 1129, 1133, 1136, 1157, 1182, 1188, 1194, 1195, 1200, 1208, 1227, 1229, 1231, 1234, 1244], "driven": [4, 45, 67, 73, 80, 84, 154, 155, 162, 190, 203, 206, 217, 226, 241, 268, 306, 308, 334, 337, 414, 416, 504, 551, 661, 663, 664, 1046, 1052, 1053, 1213, 1221, 1244], "develop": [4, 5, 21, 45, 73, 75, 80, 82, 84, 105, 106, 124, 150, 151, 163, 171, 191, 193, 195, 196, 197, 201, 203, 206, 214, 217, 225, 226, 229, 234, 241, 247, 252, 253, 260, 262, 263, 268, 273, 298, 303, 308, 333, 334, 337, 349, 376, 377, 379, 396, 398, 399, 408, 414, 416, 482, 494, 500, 504, 524, 526, 528, 535, 539, 548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 601, 602, 642, 661, 663, 664, 717, 742, 816, 839, 840, 841, 844, 847, 849, 850, 852, 854, 857, 859, 860, 861, 863, 866, 868, 870, 872, 874, 876, 878, 880, 882, 884, 886, 887, 888, 891, 893, 896, 898, 902, 905, 908, 917, 920, 921, 922, 924, 927, 984, 986, 987, 1007, 1013, 1015, 1023, 1025, 1039, 1042, 1045, 1047, 1063, 1064, 1067, 1068, 1069, 1070, 1071, 1072, 1074, 1080, 1112, 1143, 1145, 1188, 1221, 1222, 1243, 1256], "gui": [4, 127, 143, 189, 195, 201, 205, 268, 404, 405, 927, 1030, 1254], "gtk": [4, 186], "qt": 4, "fast": [5, 43, 124, 197, 205, 229, 251, 266, 268, 282, 291, 341, 494, 620, 793, 807, 1135, 1217, 1253], "40": [5, 7, 23, 108, 163, 166, 186, 193, 200, 212, 223, 233, 238, 240, 243, 246, 249, 254, 255, 259, 262, 265, 270, 272, 275, 278, 282, 285, 288, 290, 291, 300, 303, 307, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 389, 392, 428, 506, 547, 549, 563, 633, 634, 655, 802, 803, 804, 838, 970, 989, 992, 993, 994, 1075, 1089, 1090, 1114], "jahren": 5, "wesentlichen": [5, 23, 225, 1237], "programmier": [5, 37, 414, 415, 1239, 1240, 1245, 1247, 1248, 1253, 1254], "bin": [5, 13, 23, 50, 62, 124, 126, 127, 131, 134, 137, 139, 143, 155, 186, 189, 191, 201, 210, 213, 223, 240, 250, 259, 262, 265, 270, 275, 278, 282, 285, 288, 300, 303, 308, 310, 320, 324, 346, 352, 358, 364, 368, 397, 405, 507, 508, 509, 511, 516, 520, 526, 532, 534, 535, 537, 538, 540, 585, 600, 601, 865, 887, 919, 923, 925, 930, 933, 944, 948, 949, 973, 974, 979, 992, 994, 1010, 1017, 1020, 1026, 1040, 1041, 1050, 1062, 1063, 1064, 1075, 1077, 1080, 1084, 1090, 1114, 1142, 1143, 1166, 1175, 1176, 1191, 1204, 1216, 1221, 1223, 1235], "ich": [5, 23, 172, 198, 199, 207, 208, 209, 213, 223, 233, 241, 272, 324, 397, 415, 1199, 1235, 1236, 1245, 1252, 1253, 1259], "heut": [5, 415, 1240, 1255], "feinen": 5, "situat": [5, 122, 124, 178, 190, 192, 201, 222, 249, 528, 598, 599, 602, 614, 676, 754, 881, 887, 939, 941, 985, 1001, 1020, 1048, 1065, 1075, 1078, 1079, 1127, 1236, 1241], "repertoir": [5, 8, 28, 205, 234, 244, 548], "schulungsmateri": [5, 23], "anbieten": 5, "k\u00f6nnen": [5, 23, 163, 166, 204, 207, 217, 223, 235, 248, 397, 398, 402, 415, 976, 1235, 1237, 1238, 1248, 1258, 1259], "da": [5, 7, 8, 172, 198, 199, 204, 207, 208, 209, 210, 217, 225, 229, 233, 234, 238, 241, 243, 244, 246, 250, 253, 254, 255, 259, 262, 269, 270, 272, 275, 278, 279, 281, 283, 291, 293, 300, 310, 320, 324, 342, 345, 352, 354, 358, 368, 389, 392, 397, 402, 415, 976, 1235, 1236, 1237, 1238, 1239, 1240, 1245, 1247, 1251, 1252, 1253, 1254, 1255, 1258, 1259], "sich": [5, 23, 37, 163, 166, 198, 199, 204, 207, 208, 209, 213, 223, 225, 233, 254, 272, 275, 285, 398, 1235, 1236, 1238, 1239, 1240, 1245, 1248, 1252, 1253, 1254, 1257, 1258, 1259], "jahrelangen": 5, "erfahrung": [5, 279, 1237], "entwickelt": [5, 217, 1245, 1252, 1254], "hat": [5, 8, 23, 37, 163, 166, 193, 198, 199, 207, 208, 209, 210, 213, 217, 223, 225, 233, 234, 238, 240, 244, 255, 275, 330, 342, 390, 397, 415, 1113, 1235, 1238, 1240, 1245, 1252, 1253, 1254, 1257, 1258, 1259], "al": [5, 8, 23, 32, 99, 163, 166, 198, 199, 204, 207, 208, 209, 213, 215, 217, 225, 234, 235, 242, 244, 246, 254, 272, 273, 275, 283, 287, 329, 398, 415, 652, 802, 912, 949, 970, 975, 976, 1008, 1188, 1235, 1238, 1240, 1245, 1251, 1252, 1253, 1254, 1257], "einzelunternehm": [5, 23], "werd": [5, 1235], "erster": 5, "lini": 5, "firmen": [5, 23], "gebucht": [5, 11, 199, 213, 225, 415], "um": [5, 23, 32, 163, 166, 198, 199, 207, 209, 213, 217, 223, 233, 234, 272, 285, 300, 364, 415, 1235, 1237, 1238, 1239, 1240, 1245, 1251, 1255], "mitarbeit": [5, 23], "weiterzubilden": 5, "entwickeln": [5, 217], "oder": [5, 23, 163, 166, 186, 207, 213, 217, 223, 234, 235, 240, 254, 263, 272, 279, 948, 976, 1213, 1235, 1238, 1239, 1245, 1248, 1251, 1252, 1253, 1255, 1258, 1259], "damit": [5, 23, 198, 223, 253, 279, 397, 402, 415, 1236, 1254, 1258], "arbeiten": [5, 23, 223, 234, 1251], "softwaretest": 5, "produktingenieur": 5, "program": [5, 8, 29, 30, 42, 61, 63, 67, 74, 75, 76, 78, 80, 86, 87, 92, 99, 103, 112, 113, 116, 117, 122, 125, 126, 127, 131, 134, 137, 139, 143, 144, 147, 149, 159, 162, 163, 166, 183, 185, 186, 187, 189, 190, 191, 192, 195, 197, 200, 201, 203, 205, 208, 210, 211, 213, 214, 218, 225, 226, 227, 229, 230, 231, 236, 241, 242, 247, 250, 251, 257, 259, 260, 263, 266, 269, 273, 276, 279, 280, 281, 287, 292, 296, 305, 308, 309, 312, 315, 317, 325, 326, 327, 329, 333, 349, 351, 357, 359, 370, 371, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 394, 396, 397, 398, 399, 400, 401, 402, 403, 408, 410, 411, 414, 416, 421, 423, 424, 427, 429, 430, 432, 433, 434, 435, 438, 440, 443, 445, 450, 463, 472, 476, 477, 479, 481, 483, 484, 491, 493, 496, 498, 499, 500, 501, 505, 506, 507, 510, 517, 523, 532, 533, 534, 536, 537, 539, 542, 548, 552, 562, 563, 564, 568, 569, 570, 585, 587, 589, 590, 591, 592, 593, 594, 595, 596, 597, 600, 602, 607, 609, 631, 637, 642, 643, 649, 650, 665, 668, 671, 687, 693, 697, 706, 707, 709, 710, 715, 723, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 745, 752, 783, 785, 788, 793, 798, 799, 803, 808, 810, 816, 825, 837, 839, 840, 841, 845, 856, 858, 867, 887, 901, 903, 904, 917, 919, 920, 921, 922, 923, 924, 925, 928, 930, 931, 932, 943, 948, 951, 977, 981, 984, 985, 987, 990, 991, 992, 993, 1001, 1005, 1008, 1010, 1011, 1012, 1013, 1014, 1015, 1018, 1019, 1020, 1021, 1023, 1027, 1028, 1032, 1036, 1039, 1042, 1045, 1046, 1047, 1048, 1052, 1053, 1055, 1060, 1061, 1063, 1071, 1075, 1077, 1079, 1080, 1081, 1082, 1087, 1088, 1090, 1096, 1097, 1098, 1099, 1110, 1113, 1117, 1118, 1121, 1122, 1125, 1129, 1130, 1132, 1139, 1141, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1159, 1160, 1161, 1162, 1163, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1189, 1190, 1191, 1193, 1194, 1195, 1197, 1198, 1200, 1201, 1202, 1204, 1208, 1215, 1216, 1218, 1220, 1221, 1225, 1228, 1237, 1238, 1239, 1240, 1241, 1243, 1244, 1246, 1247, 1248], "gem\u00e4\u00df": [5, 23, 199], "herkunft": [5, 1259], "mein": [5, 23, 198, 199, 204, 208, 209, 223, 233, 234, 253, 358, 364, 415, 987, 1055, 1236, 1251], "muttersprach": [5, 23], "ist": [5, 7, 8, 163, 166, 198, 199, 204, 207, 208, 209, 213, 217, 225, 233, 234, 238, 240, 243, 244, 246, 249, 253, 255, 259, 262, 263, 268, 269, 270, 272, 275, 278, 281, 285, 291, 300, 310, 324, 342, 352, 358, 368, 389, 392, 393, 397, 402, 415, 460, 528, 1048, 1206, 1235, 1236, 1237, 1238, 1239, 1240, 1245, 1248, 1251, 1252, 1253, 1254, 1255, 1257, 1258, 1259], "umfasst": [5, 199], "weiterf\u00fchrend": [5, 23], "materi": [5, 8, 12, 13, 14, 17, 23, 27, 64, 68, 99, 108, 161, 164, 183, 186, 187, 190, 204, 205, 222, 225, 226, 227, 229, 231, 232, 234, 236, 237, 241, 244, 247, 250, 252, 253, 256, 257, 260, 263, 266, 268, 269, 281, 284, 287, 290, 294, 295, 297, 299, 302, 309, 312, 318, 319, 323, 329, 333, 334, 337, 340, 341, 344, 345, 349, 351, 357, 363, 367, 371, 372, 377, 397, 405, 415, 509, 510, 516, 517, 520, 526, 532, 535, 536, 537, 538, 540, 542, 543, 544, 545, 546, 547, 549, 551, 554, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 598, 600, 603, 604, 605, 606, 608, 610, 611, 612, 613, 615, 616, 617, 618, 619, 642, 803, 838, 841, 990, 1001, 1026, 1029, 1087, 1088, 1090, 1110, 1111, 1139, 1190, 1202, 1203, 1215, 1226, 1230, 1238, 1240, 1243, 1245, 1246, 1252], "stark": 5, "gefragt": 5, "sind": [5, 7, 23, 163, 166, 198, 199, 208, 209, 213, 217, 225, 234, 235, 240, 243, 246, 262, 279, 358, 397, 402, 415, 975, 976, 1048, 1235, 1238, 1239, 1240, 1245, 1247, 1248, 1251, 1252, 1254, 1255, 1258, 1259], "letzter": 5, "betreffend": 5, "neuen": [5, 1240], "standard": [5, 34, 35, 36, 38, 108, 126, 156, 163, 182, 197, 218, 222, 227, 229, 231, 252, 259, 265, 274, 275, 278, 282, 293, 306, 308, 332, 348, 355, 380, 388, 397, 398, 399, 400, 402, 418, 419, 420, 426, 427, 432, 433, 437, 482, 590, 609, 628, 642, 643, 687, 693, 697, 704, 705, 706, 707, 709, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 742, 760, 765, 791, 793, 795, 796, 838, 840, 928, 931, 932, 948, 981, 995, 1011, 1017, 1020, 1033, 1036, 1060, 1091, 1110, 1111, 1127, 1201, 1213, 1217, 1231, 1237, 1238, 1240, 1241, 1242, 1243, 1247], "absolut": [5, 8, 29, 92, 101, 126, 148, 188, 192, 197, 203, 206, 213, 223, 226, 227, 229, 231, 242, 247, 251, 259, 265, 266, 273, 275, 276, 278, 279, 282, 287, 290, 296, 299, 302, 305, 306, 309, 312, 318, 319, 323, 326, 327, 329, 334, 337, 340, 341, 344, 345, 351, 357, 363, 367, 370, 371, 383, 384, 385, 386, 387, 388, 394, 396, 397, 400, 415, 500, 520, 524, 548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 642, 813, 816, 839, 840, 841, 885, 897, 913, 914, 915, 916, 917, 920, 921, 922, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 948, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 968, 984, 1004, 1007, 1013, 1015, 1023, 1025, 1039, 1042, 1045, 1047, 1064, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1080, 1088, 1095, 1096, 1097, 1098, 1102, 1110, 1121, 1130, 1141, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1160, 1161, 1162, 1163, 1164, 1165, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1189, 1190, 1194, 1195, 1198, 1201, 1202, 1204, 1208, 1211, 1213, 1215, 1218, 1220, 1225], "beginn": [5, 8, 29, 32, 80, 92, 187, 188, 198, 203, 206, 217, 223, 226, 227, 229, 231, 242, 257, 260, 261, 263, 266, 273, 276, 279, 283, 290, 302, 309, 312, 318, 319, 329, 334, 337, 340, 341, 344, 345, 351, 357, 363, 367, 383, 384, 385, 386, 387, 388, 396, 397, 400, 442, 726, 771, 840, 841, 1088, 1095, 1096, 1097, 1098, 1102, 1110, 1112, 1118, 1121, 1130, 1141, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1160, 1161, 1162, 1163, 1164, 1165, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1189, 1190, 1194, 1195, 1198, 1201, 1202, 1204, 1208, 1215, 1218, 1220, 1225], "advanc": [5, 8, 29, 80, 92, 187, 197, 203, 206, 211, 214, 217, 227, 231, 239, 242, 247, 257, 262, 263, 273, 287, 309, 329, 351, 357, 367, 383, 384, 385, 386, 387, 388, 396, 397, 398, 399, 400, 414, 492, 494, 496, 501, 502, 520, 523, 526, 533, 674, 745, 783, 818, 837, 839, 840, 841, 1029, 1087, 1088, 1090, 1095, 1096, 1097, 1098, 1102, 1110, 1112, 1121, 1130, 1141, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1160, 1161, 1162, 1163, 1164, 1165, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1189, 1190, 1193, 1194, 1195, 1198, 1201, 1202, 1204, 1208, 1215, 1218, 1220, 1225, 1228, 1242], "product": [5, 8, 29, 38, 43, 80, 87, 92, 155, 192, 203, 206, 226, 227, 229, 231, 247, 266, 273, 276, 279, 287, 290, 299, 302, 309, 312, 314, 318, 319, 323, 329, 334, 337, 340, 341, 344, 345, 351, 357, 363, 367, 383, 384, 385, 386, 387, 388, 396, 397, 400, 500, 504, 532, 825, 840, 841, 985, 994, 1065, 1080, 1088, 1095, 1096, 1097, 1098, 1102, 1110, 1121, 1130, 1141, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1160, 1161, 1162, 1163, 1164, 1165, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1189, 1190, 1194, 1195, 1198, 1201, 1202, 1204, 1208, 1215, 1218, 1220, 1225], "gro\u00dfe": [5, 37, 223, 1254], "thema": [5, 23, 208, 225, 279, 293, 397, 402, 1235], "einfach": [5, 209, 223, 234, 238, 320, 1239, 1240, 1245, 1251, 1253, 1255, 1257, 1259], "doch": [5, 246, 320, 330, 415, 1257], "m\u00e4chtig": 5, "vermutlich": [5, 223, 1257], "grund": [5, 1238, 1245], "warum": [5, 7, 23, 234, 235, 243, 285, 1245, 1251, 1252, 1257, 1259], "gern": [5, 223, 1235, 1245, 1252], "nachgefragt": 5, "werden": [5, 8, 37, 163, 166, 198, 199, 204, 207, 208, 209, 217, 223, 225, 234, 235, 238, 244, 253, 254, 269, 281, 293, 976, 1235, 1236, 1237, 1238, 1239, 1240, 1245, 1247, 1248, 1251, 1252, 1254, 1255, 1257, 1258, 1259], "deren": [5, 23, 207, 229, 1240, 1253, 1257, 1258], "kernkompetenz": 5, "liegt": [5, 23, 198, 209, 213, 282, 1239, 1255], "sondern": [5, 209, 223, 234, 1236, 1245, 1248, 1251, 1258], "eher": [5, 198, 234, 1237, 1251], "beiwerk": 5, "ihrem": [5, 23, 1235], "eigentlichen": 5, "job": [5, 201, 222, 232, 291, 487, 519, 985, 1010, 1011, 1012, 1082, 1100, 1112, 1116, 1193, 1221], "schreiben": [5, 213, 235, 397, 398, 402, 1238, 1255, 1257], "physik": [5, 213], "z": [5, 38, 111, 209, 210, 213, 223, 233, 265, 266, 278, 281, 303, 330, 358, 368, 427, 437, 448, 449, 516, 663, 727, 797, 913, 975, 1060, 1113, 1236, 1245, 1247, 1252], "b": [5, 7, 21, 31, 32, 38, 62, 75, 76, 109, 116, 120, 123, 168, 193, 205, 209, 210, 211, 213, 223, 228, 233, 238, 240, 243, 246, 249, 256, 259, 262, 263, 265, 270, 272, 275, 278, 282, 285, 288, 291, 300, 303, 307, 310, 320, 324, 330, 335, 342, 346, 352, 358, 364, 368, 376, 379, 389, 391, 392, 393, 429, 437, 439, 448, 464, 478, 481, 494, 519, 526, 644, 646, 654, 655, 661, 662, 663, 664, 669, 713, 714, 719, 720, 750, 756, 790, 797, 807, 838, 887, 918, 931, 948, 970, 975, 976, 992, 993, 994, 1033, 1049, 1079, 1085, 1094, 1097, 1109, 1117, 1118, 1124, 1127, 1129, 1131, 1132, 1137, 1201, 1204, 1216, 1236, 1245, 1247, 1252], "guter": [5, 1236], "ersatz": [5, 234, 1251], "matlab": [5, 211, 213, 266, 415, 1187, 1190], "tester": [5, 187, 1221, 1247], "basic": [5, 10, 28, 29, 31, 65, 74, 75, 76, 79, 80, 85, 99, 103, 105, 108, 112, 113, 126, 130, 131, 132, 133, 136, 139, 143, 144, 148, 149, 156, 159, 162, 186, 187, 190, 192, 197, 200, 205, 206, 211, 214, 217, 226, 239, 252, 257, 268, 276, 278, 281, 282, 306, 308, 315, 316, 317, 325, 333, 343, 347, 349, 355, 373, 374, 377, 396, 397, 398, 399, 400, 402, 404, 408, 414, 416, 466, 472, 476, 479, 483, 492, 494, 496, 498, 499, 501, 502, 517, 523, 524, 531, 533, 535, 536, 537, 546, 548, 549, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 607, 609, 620, 636, 637, 642, 668, 676, 681, 693, 697, 705, 706, 709, 710, 714, 715, 716, 725, 726, 728, 735, 736, 737, 738, 739, 740, 745, 748, 749, 751, 754, 756, 783, 800, 816, 819, 825, 835, 837, 839, 840, 844, 847, 849, 854, 857, 864, 868, 878, 887, 889, 891, 896, 902, 905, 907, 908, 910, 914, 915, 922, 924, 929, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 968, 978, 984, 990, 991, 996, 997, 998, 999, 1000, 1010, 1011, 1012, 1013, 1015, 1020, 1023, 1025, 1033, 1039, 1042, 1045, 1047, 1055, 1058, 1059, 1063, 1064, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1079, 1080, 1118, 1147, 1174, 1175, 1186, 1187, 1196, 1202, 1208, 1209, 1211, 1226, 1230, 1242, 1243, 1256], "einf\u00fchrung": [5, 213, 217, 230, 232, 416, 1110, 1237, 1242, 1243, 1245, 1254, 1256], "anhand": [5, 6, 208, 217, 230, 232, 234, 235, 284, 414, 416, 1237, 1243, 1251, 1256], "beispielen": [5, 8, 204, 230, 232, 234, 244, 253, 269, 281, 415, 416, 1243, 1256], "memori": [5, 42, 43, 49, 55, 75, 80, 82, 99, 111, 112, 113, 163, 185, 189, 190, 191, 193, 195, 202, 206, 210, 211, 212, 215, 217, 222, 228, 229, 237, 241, 242, 246, 259, 265, 268, 275, 278, 293, 315, 317, 319, 324, 341, 344, 369, 373, 380, 415, 416, 418, 432, 438, 460, 461, 467, 480, 482, 483, 485, 491, 492, 494, 496, 500, 501, 502, 549, 564, 566, 568, 569, 570, 572, 574, 575, 582, 583, 590, 607, 609, 610, 634, 642, 643, 648, 649, 659, 677, 678, 679, 695, 714, 724, 740, 743, 745, 754, 781, 783, 788, 795, 800, 802, 803, 804, 825, 837, 838, 839, 840, 849, 854, 857, 859, 864, 868, 878, 882, 883, 884, 887, 889, 891, 892, 896, 899, 905, 908, 918, 924, 926, 932, 984, 1001, 1010, 1030, 1032, 1033, 1046, 1047, 1080, 1084, 1097, 1098, 1111, 1118, 1200, 1238, 1239, 1242, 1246, 1247, 1256], "weiter": [5, 23, 37, 198, 199, 223, 225, 234, 248, 272, 290, 320, 368, 976, 1235, 1245, 1251, 1252, 1254, 1255, 1259], "standbein": [5, 1245], "mehreren": [5, 163, 166, 223, 239, 1258], "auspr\u00e4gungen": 5, "commandlin": [5, 8, 29, 31, 42, 82, 92, 101, 126, 148, 151, 183, 186, 208, 210, 230, 232, 242, 244, 247, 251, 257, 268, 269, 273, 279, 280, 281, 284, 287, 302, 309, 312, 318, 322, 323, 328, 329, 340, 350, 351, 356, 357, 362, 363, 366, 367, 375, 378, 397, 398, 399, 400, 401, 415, 472, 476, 479, 483, 492, 496, 501, 502, 505, 514, 534, 539, 548, 562, 588, 590, 591, 592, 593, 594, 595, 596, 597, 600, 642, 745, 783, 816, 837, 839, 840, 856, 887, 910, 914, 915, 916, 917, 920, 921, 922, 928, 929, 930, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 949, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 968, 978, 984, 985, 993, 1007, 1013, 1015, 1023, 1025, 1039, 1041, 1042, 1045, 1047, 1061, 1062, 1064, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1081, 1110, 1141, 1144, 1145, 1146, 1147, 1149, 1150, 1151, 1152, 1154, 1155, 1157, 1159, 1160, 1161, 1162, 1163, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1237, 1245, 1247, 1248, 1252, 1253, 1254], "konzept": [5, 23, 415, 1245, 1247, 1254], "zielpublikum": 5, "deckt": 5, "ungef\u00e4hr": [5, 198], "mehr": [5, 11, 23, 198, 207, 209, 233, 239, 259, 368, 415, 1235, 1236, 1238, 1240, 1245, 1252, 1253, 1254, 1259], "kernentwickl": 5, "themen": [5, 23, 204, 215, 217, 1245], "applikationsentwicklung": 5, "direkt": [5, 23, 217, 1238, 1254], "systemschnittstel": 5, "schritt": 5, "geht": [5, 7, 8, 23, 172, 198, 199, 207, 209, 217, 223, 233, 234, 238, 243, 244, 253, 254, 269, 275, 281, 291, 364, 392, 415, 976], "nur": [5, 23, 163, 166, 198, 204, 208, 209, 213, 223, 225, 233, 234, 238, 240, 248, 270, 368, 392, 415, 1237, 1238, 1245, 1248, 1251, 1252, 1253, 1255, 1257, 1258, 1259], "mutig": 5, "pool": [5, 85, 251, 907, 1047, 1049], "absprach": [5, 1235], "individuel": [5, 23, 225, 1235], "zusammengestellt": 5, "schulungsverlauf": 5, "meisten": [5, 23, 217, 223, 415, 1236, 1257], "recht": [5, 7, 132, 172, 198, 199, 209, 217, 223, 234, 243, 358, 1251, 1252], "dynamisch": [5, 217, 248, 1238, 1240, 1255], "teilnehm": [5, 204, 213, 217, 225, 415, 1245, 1252], "haben": [5, 198, 199, 208, 213, 217, 225, 233, 234, 246, 415, 703, 1236, 1237, 1238, 1239, 1240, 1245, 1251, 1253, 1254, 1255, 1258], "oft": [5, 23, 198, 223, 225, 1239], "bed\u00fcrfniss": [5, 23, 225], "vorab": [5, 204, 217, 253], "bekannt": [5, 23, 223, 1240], "waren": [5, 208, 213, 1236, 1240], "wodurch": [5, 23], "auch": [5, 23, 163, 166, 198, 199, 204, 209, 213, 223, 235, 238, 240, 246, 249, 254, 275, 279, 285, 310, 364, 392, 393, 415, 1235, 1236, 1237, 1238, 1239, 1245, 1248, 1252, 1257, 1259], "mal": [5, 199, 213, 223, 234, 285, 352, 415, 1236, 1240, 1251], "agenda": [5, 23, 27, 214, 319, 323, 327, 329, 333, 341, 345, 349, 351, 352, 355, 357, 363, 367, 371, 374, 376, 379, 381], "abgewichen": 5, "wird": [5, 7, 23, 163, 166, 198, 199, 204, 207, 208, 209, 217, 223, 233, 234, 240, 243, 272, 358, 364, 368, 397, 402, 415, 1235, 1236, 1239, 1240, 1245, 1247, 1248, 1251, 1252, 1253, 1254, 1255, 1257, 1258, 1259], "verh\u00e4ltni": 5, "vortrag": [5, 208, 1235], "\u00fcbungen": [5, 8, 163, 166, 204, 217, 225, 234, 235, 244, 253, 269, 281, 415, 1238, 1245, 1247, 1251, 1254], "ca": [5, 23, 32, 198, 200, 827, 1216], "50": [5, 7, 108, 111, 200, 211, 223, 228, 233, 238, 240, 243, 246, 249, 255, 259, 262, 265, 270, 272, 278, 282, 285, 288, 291, 300, 303, 307, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 389, 392, 393, 398, 399, 489, 491, 534, 598, 633, 634, 970, 992, 993, 994, 1089, 1112, 1132, 1145, 1192, 1193, 1205, 1221], "kleiner": [5, 7, 243, 975], "den": [5, 163, 166, 199, 207, 208, 209, 213, 217, 223, 225, 233, 234, 239, 246, 253, 282, 330, 397, 398, 402, 415, 909, 1236, 1237, 1238, 1239, 1240, 1245, 1248, 1251, 1252, 1258, 1259], "teilnehmern": [5, 415, 1259], "pc": [5, 80, 110, 147, 186, 242, 306, 383, 400, 403, 602, 986, 987, 993, 1065, 1236], "erledigt": 5, "speziel": [5, 204, 233, 234, 293, 1248, 1251, 1254, 1258], "fortgeschrittenen": 5, "programmierthemen": 5, "gruppenprojekt": 5, "gegenstand": [5, 1235], "denen": [5, 23, 198, 1245], "zusammenarbeiten": 5, "austauschmedium": 5, "solch": 5, "set": [5, 9, 14, 21, 29, 33, 61, 63, 80, 87, 92, 110, 126, 127, 168, 190, 191, 192, 193, 194, 195, 196, 197, 201, 205, 206, 207, 210, 211, 222, 223, 226, 227, 229, 230, 231, 234, 235, 239, 240, 241, 245, 247, 248, 251, 253, 257, 258, 260, 261, 263, 264, 266, 267, 269, 271, 273, 274, 275, 280, 281, 283, 284, 286, 287, 289, 295, 297, 299, 301, 302, 304, 306, 308, 309, 311, 312, 315, 316, 317, 319, 321, 322, 323, 325, 328, 329, 331, 334, 337, 340, 341, 343, 344, 345, 347, 350, 351, 353, 356, 357, 359, 362, 363, 365, 366, 367, 369, 372, 375, 378, 397, 402, 404, 415, 417, 432, 438, 455, 460, 461, 470, 473, 485, 486, 494, 500, 508, 510, 511, 512, 514, 515, 516, 518, 519, 520, 522, 524, 528, 531, 535, 537, 539, 544, 547, 549, 564, 569, 578, 579, 583, 592, 593, 598, 599, 600, 601, 618, 646, 647, 661, 662, 663, 664, 677, 747, 756, 771, 801, 802, 817, 838, 840, 858, 871, 873, 883, 887, 892, 897, 919, 927, 933, 949, 985, 987, 992, 994, 1001, 1006, 1008, 1014, 1022, 1026, 1030, 1035, 1043, 1044, 1047, 1048, 1059, 1061, 1062, 1063, 1075, 1078, 1084, 1087, 1088, 1091, 1100, 1101, 1110, 1111, 1114, 1118, 1123, 1143, 1165, 1176, 1183, 1184, 1186, 1188, 1190, 1193, 1194, 1195, 1197, 1201, 1215, 1216, 1228, 1230, 1233, 1244, 1251], "gew\u00f6hnlich": [5, 23], "github": [5, 8, 23, 42, 44, 66, 99, 108, 111, 126, 147, 148, 152, 155, 168, 170, 171, 186, 187, 197, 201, 202, 204, 205, 208, 210, 217, 218, 219, 229, 231, 236, 237, 241, 242, 244, 251, 252, 253, 257, 259, 260, 263, 266, 268, 269, 273, 276, 279, 281, 284, 287, 290, 294, 295, 297, 298, 299, 302, 306, 309, 315, 316, 317, 319, 323, 327, 329, 333, 334, 337, 341, 345, 349, 351, 355, 357, 363, 367, 368, 372, 374, 375, 376, 377, 378, 379, 381, 396, 401, 402, 403, 404, 411, 416, 417, 507, 512, 513, 514, 515, 528, 530, 589, 620, 662, 843, 846, 848, 851, 853, 856, 865, 867, 877, 879, 887, 888, 889, 890, 895, 899, 987, 992, 994, 1062, 1063, 1064, 1066, 1073, 1077, 1079, 1080, 1081], "endprodukt": 5, "bleibt": [5, 23, 1255], "homepag": [5, 13, 66, 194, 196, 204, 207, 208, 222, 249, 257, 259, 294, 295, 297, 491, 1075, 1221], "erhalten": 5, "hier": [5, 8, 17, 23, 172, 198, 199, 204, 207, 208, 210, 213, 217, 225, 229, 233, 234, 240, 244, 250, 253, 254, 263, 269, 272, 281, 282, 324, 342, 415, 1235, 1238, 1245, 1251, 1252, 1254, 1255, 1257], "mix": [5, 29, 229, 236, 247, 250, 257, 260, 263, 264, 268, 270, 273, 302, 309, 322, 323, 328, 329, 331, 350, 351, 356, 357, 362, 363, 366, 367, 443, 482, 485, 486, 488, 490, 653, 840, 1115, 1118, 1134, 1137, 1147, 1157, 1160, 1161, 1162, 1163, 1167, 1168, 1169, 1170, 1171, 1172, 1186, 1187, 1201, 1206, 1212, 1256], "j\u00fcngeren": 5, "2023": [5, 68, 98, 108, 125, 126, 307, 308, 311, 314, 325, 331, 342, 353, 363, 365, 375, 378, 414, 505, 506, 796, 1065], "10": [5, 7, 31, 62, 99, 104, 107, 108, 111, 126, 179, 186, 192, 193, 198, 200, 201, 211, 212, 223, 228, 230, 234, 235, 238, 240, 243, 246, 247, 249, 254, 255, 256, 257, 259, 260, 262, 263, 265, 270, 272, 275, 278, 282, 285, 287, 288, 290, 291, 301, 303, 308, 310, 317, 318, 319, 320, 323, 324, 329, 330, 335, 339, 342, 346, 352, 358, 364, 368, 383, 390, 391, 392, 393, 396, 410, 411, 414, 426, 428, 430, 432, 440, 458, 465, 482, 484, 498, 511, 513, 514, 530, 540, 568, 588, 590, 591, 593, 596, 599, 604, 607, 627, 628, 633, 634, 636, 637, 642, 652, 655, 657, 664, 732, 733, 739, 743, 750, 754, 755, 781, 793, 802, 803, 804, 805, 815, 840, 877, 887, 895, 916, 918, 925, 944, 948, 950, 970, 972, 976, 979, 987, 992, 993, 994, 1011, 1020, 1028, 1055, 1058, 1062, 1063, 1064, 1077, 1078, 1084, 1089, 1090, 1100, 1118, 1119, 1126, 1149, 1150, 1170, 1176, 1187, 1188, 1192, 1193, 1216, 1221, 1233, 1251], "09": [5, 99, 124, 166, 186, 193, 202, 226, 242, 307, 342, 352, 394, 414, 506, 535, 970, 993, 994, 1018, 1114, 1192], "11": [5, 7, 40, 62, 108, 126, 186, 187, 202, 211, 212, 217, 218, 222, 223, 228, 229, 230, 234, 235, 238, 240, 243, 246, 249, 252, 254, 255, 256, 259, 264, 265, 266, 270, 272, 275, 278, 282, 285, 288, 291, 294, 295, 300, 304, 307, 310, 314, 320, 324, 330, 338, 341, 342, 353, 354, 358, 364, 368, 373, 379, 389, 390, 391, 392, 393, 400, 403, 410, 411, 414, 416, 418, 432, 498, 500, 508, 546, 599, 627, 636, 637, 643, 645, 646, 648, 652, 654, 655, 661, 663, 673, 678, 680, 685, 698, 699, 700, 703, 716, 741, 745, 748, 751, 752, 757, 758, 759, 760, 770, 782, 783, 784, 785, 786, 787, 788, 790, 793, 794, 797, 799, 802, 803, 805, 806, 808, 815, 816, 817, 821, 823, 825, 837, 838, 840, 841, 912, 926, 970, 979, 1033, 1038, 1062, 1063, 1064, 1113, 1119, 1124, 1143, 1177, 1179, 1183, 1185, 1187, 1190, 1192, 1193, 1204, 1221, 1233, 1240, 1241, 1242, 1251], "introduct": [5, 29, 74, 75, 76, 80, 99, 100, 101, 108, 126, 144, 148, 162, 163, 203, 206, 251, 252, 266, 268, 276, 279, 287, 290, 296, 298, 299, 305, 306, 308, 315, 318, 319, 323, 326, 334, 337, 340, 341, 344, 367, 370, 376, 379, 396, 401, 405, 414, 416, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 513, 517, 523, 533, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 607, 609, 620, 642, 650, 665, 668, 671, 687, 693, 697, 706, 709, 710, 715, 724, 725, 726, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 743, 745, 752, 764, 771, 783, 799, 808, 816, 825, 837, 839, 840, 889, 910, 914, 915, 916, 917, 920, 921, 929, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 968, 978, 983, 984, 996, 997, 998, 999, 1000, 1007, 1013, 1015, 1023, 1025, 1028, 1039, 1042, 1045, 1047, 1064, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1110, 1184, 1185, 1186, 1195, 1215, 1220, 1242, 1256], "07": [5, 99, 108, 126, 186, 200, 202, 213, 226, 255, 256, 290, 295, 307, 308, 314, 330, 396, 410, 411, 414, 537, 914, 915, 992, 1114, 1143, 1187, 1192], "18": [5, 7, 62, 171, 193, 200, 201, 205, 211, 212, 228, 233, 238, 240, 243, 246, 249, 250, 254, 255, 259, 262, 263, 265, 271, 272, 278, 282, 285, 288, 291, 300, 304, 306, 307, 310, 314, 320, 324, 330, 335, 342, 346, 352, 364, 368, 390, 392, 393, 396, 414, 652, 717, 782, 790, 802, 840, 851, 860, 887, 925, 931, 933, 967, 970, 984, 994, 1018, 1020, 1054, 1065, 1073, 1074, 1075, 1078, 1106, 1107, 1143, 1150, 1192, 1193], "For": [5, 40, 124, 126, 188, 189, 190, 194, 197, 200, 202, 203, 205, 206, 211, 214, 219, 220, 222, 226, 242, 247, 250, 257, 260, 263, 268, 278, 281, 283, 287, 295, 297, 298, 299, 323, 329, 334, 345, 408, 414, 416, 428, 429, 435, 450, 459, 466, 472, 476, 479, 481, 483, 492, 496, 501, 502, 520, 530, 531, 564, 620, 645, 652, 656, 669, 678, 698, 745, 783, 790, 793, 797, 802, 807, 837, 839, 840, 858, 873, 887, 914, 915, 925, 948, 984, 985, 993, 994, 995, 1004, 1008, 1035, 1056, 1063, 1064, 1065, 1073, 1074, 1078, 1111, 1112, 1122, 1129, 1137, 1161, 1166, 1188, 1191, 1193, 1195], "04": [5, 99, 107, 126, 162, 169, 186, 197, 200, 202, 217, 218, 242, 290, 306, 307, 310, 314, 342, 394, 396, 414, 534, 840, 984, 1065, 1073, 1074, 1078, 1192, 1221], "20": [5, 7, 8, 23, 62, 114, 115, 162, 171, 186, 193, 195, 200, 209, 210, 211, 212, 223, 228, 233, 234, 238, 240, 243, 244, 246, 249, 254, 255, 259, 262, 265, 270, 272, 275, 278, 282, 285, 288, 290, 291, 300, 303, 307, 310, 314, 316, 320, 324, 331, 334, 335, 337, 342, 346, 352, 364, 368, 392, 393, 396, 414, 420, 422, 424, 440, 464, 504, 520, 526, 564, 592, 593, 598, 627, 628, 633, 634, 636, 637, 652, 750, 753, 754, 755, 764, 771, 793, 795, 796, 801, 802, 803, 804, 827, 906, 912, 933, 948, 970, 985, 992, 993, 994, 1048, 1075, 1086, 1089, 1090, 1114, 1133, 1142, 1143, 1169, 1192, 1193, 1221, 1223, 1230], "clean": [5, 46, 47, 51, 53, 55, 56, 62, 135, 169, 205, 257, 276, 414, 482, 493, 494, 497, 503, 644, 743, 840, 841, 1062, 1064, 1075, 1084, 1137, 1187], "code": [5, 21, 23, 28, 29, 33, 40, 42, 46, 47, 51, 53, 55, 56, 62, 66, 67, 72, 75, 82, 87, 105, 106, 110, 116, 119, 126, 143, 149, 150, 152, 155, 169, 171, 175, 183, 187, 189, 190, 191, 192, 193, 196, 197, 204, 205, 208, 210, 213, 214, 215, 217, 218, 219, 222, 225, 226, 227, 229, 231, 236, 241, 242, 246, 250, 251, 252, 257, 259, 260, 262, 265, 268, 273, 275, 276, 278, 279, 287, 297, 299, 302, 306, 308, 309, 312, 315, 317, 320, 322, 323, 324, 328, 329, 330, 333, 334, 337, 340, 341, 345, 349, 350, 351, 352, 354, 355, 356, 357, 362, 366, 367, 374, 380, 382, 383, 392, 397, 402, 414, 417, 424, 426, 430, 434, 440, 454, 460, 465, 481, 482, 486, 488, 490, 496, 497, 499, 500, 501, 502, 503, 516, 517, 518, 519, 520, 523, 524, 526, 531, 532, 533, 534, 535, 538, 540, 542, 543, 544, 546, 547, 548, 549, 551, 552, 554, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 590, 591, 592, 593, 594, 595, 596, 597, 598, 600, 601, 603, 604, 605, 606, 608, 610, 611, 612, 613, 615, 616, 617, 618, 619, 623, 625, 626, 628, 629, 631, 632, 634, 635, 637, 638, 640, 641, 642, 643, 644, 645, 646, 648, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 670, 672, 673, 674, 675, 676, 679, 680, 681, 682, 683, 685, 686, 689, 690, 691, 695, 699, 700, 701, 702, 703, 707, 713, 714, 716, 717, 719, 720, 722, 726, 729, 732, 736, 737, 743, 744, 748, 750, 752, 753, 754, 756, 758, 760, 771, 780, 781, 782, 783, 785, 786, 787, 788, 790, 792, 797, 801, 802, 804, 805, 806, 807, 815, 817, 819, 820, 822, 824, 826, 828, 829, 830, 831, 833, 834, 835, 836, 838, 839, 840, 841, 846, 851, 864, 865, 879, 885, 887, 892, 899, 902, 903, 905, 908, 927, 954, 984, 985, 993, 994, 1009, 1010, 1015, 1026, 1029, 1033, 1037, 1046, 1050, 1052, 1053, 1055, 1057, 1059, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1070, 1071, 1073, 1075, 1086, 1087, 1089, 1090, 1091, 1095, 1097, 1106, 1108, 1111, 1112, 1114, 1115, 1121, 1122, 1123, 1129, 1133, 1134, 1135, 1143, 1163, 1167, 1186, 1190, 1202, 1204, 1213, 1215, 1221, 1222, 1224, 1228, 1229, 1230, 1233, 1234, 1241, 1246, 1254, 1255, 1259], "With": [5, 29, 68, 114, 115, 117, 118, 125, 144, 178, 191, 197, 217, 278, 287, 306, 308, 309, 312, 317, 324, 332, 334, 337, 341, 345, 348, 362, 366, 367, 374, 414, 455, 484, 500, 516, 532, 541, 550, 562, 576, 590, 642, 752, 783, 839, 840, 841, 887, 916, 917, 984, 991, 992, 1023, 1025, 1042, 1060, 1063, 1075, 1106, 1110, 1186, 1202, 1206, 1208, 1210, 1217, 1241, 1243, 1244, 1246], "03": [5, 99, 107, 126, 162, 186, 187, 195, 200, 202, 209, 217, 252, 273, 275, 278, 307, 308, 311, 314, 320, 333, 352, 393, 396, 400, 414, 416, 498, 505, 506, 534, 588, 620, 637, 643, 645, 646, 648, 652, 653, 655, 657, 660, 742, 950, 1075, 1192, 1230, 1240], "28": [5, 7, 23, 99, 107, 127, 152, 171, 186, 193, 200, 201, 211, 212, 223, 228, 233, 238, 240, 243, 246, 249, 254, 255, 259, 262, 265, 270, 272, 275, 278, 282, 285, 288, 291, 300, 303, 307, 310, 314, 320, 324, 330, 342, 346, 352, 358, 364, 368, 391, 392, 393, 410, 411, 414, 506, 540, 585, 601, 602, 625, 634, 717, 765, 877, 930, 970, 994, 1022, 1063, 1064, 1077, 1145, 1192, 1233], "29": [5, 7, 99, 108, 163, 200, 201, 211, 212, 223, 228, 233, 238, 240, 243, 246, 249, 254, 255, 259, 262, 265, 270, 272, 278, 282, 285, 288, 291, 300, 303, 307, 310, 314, 320, 324, 330, 342, 346, 353, 358, 364, 389, 392, 396, 410, 411, 414, 506, 805, 851, 992, 994, 1062, 1075, 1192], "sap": [5, 257, 308, 414, 1208], "13": [5, 6, 7, 62, 108, 162, 169, 183, 193, 195, 202, 209, 211, 212, 223, 228, 231, 235, 238, 240, 243, 246, 249, 254, 256, 259, 262, 263, 265, 270, 272, 275, 278, 282, 285, 288, 291, 300, 303, 307, 308, 311, 314, 320, 324, 330, 335, 342, 346, 352, 358, 364, 368, 392, 393, 414, 498, 505, 516, 538, 644, 760, 802, 851, 930, 970, 993, 1018, 1028, 1048, 1077, 1084, 1086, 1127, 1138, 1192, 1193, 1216, 1251], "15": [5, 7, 60, 62, 108, 124, 126, 186, 189, 197, 200, 209, 211, 212, 220, 223, 226, 228, 234, 235, 238, 240, 242, 243, 246, 249, 254, 255, 259, 262, 265, 270, 272, 273, 275, 278, 282, 285, 288, 291, 300, 303, 307, 310, 314, 320, 325, 330, 334, 335, 337, 342, 346, 352, 358, 368, 390, 392, 393, 394, 396, 403, 410, 411, 414, 506, 507, 592, 593, 610, 611, 612, 613, 615, 616, 719, 780, 803, 826, 828, 830, 838, 916, 931, 985, 1019, 1028, 1099, 1191, 1192, 1193, 1213, 1216, 1251], "02": [5, 99, 108, 117, 125, 126, 163, 186, 193, 200, 202, 209, 213, 239, 249, 276, 290, 307, 308, 314, 410, 411, 414, 498, 506, 534, 994, 1062, 1063, 1064, 1075, 1077, 1192], "17": [5, 7, 62, 98, 108, 126, 162, 195, 201, 205, 209, 211, 212, 223, 228, 230, 233, 238, 240, 243, 246, 249, 254, 255, 259, 264, 266, 267, 271, 272, 273, 275, 278, 282, 285, 291, 294, 295, 301, 303, 307, 310, 314, 320, 325, 330, 334, 335, 337, 342, 346, 352, 358, 368, 389, 392, 393, 414, 652, 700, 742, 751, 760, 781, 793, 803, 823, 838, 851, 887, 918, 970, 994, 1010, 1016, 1046, 1050, 1065, 1078, 1107, 1150, 1192, 1193, 1201, 1213], "tour": [5, 198, 257, 294, 295, 297, 317, 354, 355, 373, 374, 380, 414, 415, 588, 741, 839, 840, 1187, 1241, 1242], "forc": [5, 31, 35, 189, 191, 195, 218, 278, 414, 415, 489, 504, 552, 648, 923, 1001, 1030, 1064, 1187, 1241], "2022": [5, 99, 107, 108, 167, 169, 202, 265, 271, 275, 278, 294, 295, 301, 304, 352, 410, 411, 414, 506, 539, 599, 771, 796, 800, 822, 825, 838, 948, 950, 1064, 1075, 1143, 1187], "12": [5, 6, 7, 8, 40, 62, 68, 108, 124, 126, 168, 171, 186, 195, 200, 201, 202, 211, 212, 216, 223, 228, 234, 235, 238, 240, 243, 246, 249, 250, 254, 255, 256, 259, 262, 263, 267, 270, 272, 275, 278, 282, 285, 288, 290, 291, 300, 303, 306, 307, 308, 310, 314, 320, 324, 330, 335, 338, 341, 342, 344, 346, 353, 364, 368, 391, 392, 396, 410, 411, 414, 482, 506, 509, 534, 620, 754, 760, 793, 838, 918, 930, 933, 948, 970, 972, 979, 987, 992, 994, 996, 1020, 1028, 1046, 1062, 1075, 1077, 1078, 1084, 1086, 1087, 1090, 1099, 1118, 1129, 1187, 1190, 1192, 1193, 1209, 1210, 1216, 1227, 1251], "01": [5, 62, 98, 99, 107, 108, 117, 125, 126, 166, 186, 187, 195, 200, 202, 209, 213, 231, 242, 249, 256, 265, 271, 278, 290, 307, 308, 310, 314, 353, 394, 396, 410, 411, 414, 493, 506, 532, 534, 627, 628, 818, 916, 944, 994, 1048, 1050, 1078, 1176, 1187, 1192, 1221], "A": [5, 13, 20, 23, 27, 28, 29, 33, 38, 39, 40, 41, 46, 47, 51, 53, 55, 56, 60, 71, 75, 76, 80, 84, 86, 87, 99, 100, 110, 111, 112, 113, 116, 120, 126, 127, 129, 131, 132, 133, 134, 135, 136, 143, 148, 151, 154, 155, 156, 159, 162, 177, 189, 192, 193, 194, 195, 197, 202, 205, 206, 207, 210, 211, 212, 226, 228, 229, 230, 238, 242, 249, 251, 253, 259, 262, 265, 269, 275, 276, 278, 282, 290, 296, 298, 302, 305, 306, 317, 319, 324, 326, 327, 330, 337, 340, 341, 344, 358, 370, 371, 372, 376, 379, 383, 389, 394, 398, 399, 414, 419, 422, 423, 435, 436, 437, 450, 455, 459, 465, 466, 468, 471, 472, 476, 479, 480, 481, 482, 483, 486, 488, 489, 490, 492, 494, 496, 501, 502, 504, 516, 518, 524, 526, 532, 539, 541, 542, 546, 547, 550, 552, 562, 564, 576, 589, 590, 599, 601, 607, 642, 647, 648, 653, 655, 656, 657, 706, 707, 709, 710, 713, 724, 725, 728, 729, 730, 731, 732, 733, 735, 736, 737, 738, 739, 740, 741, 745, 747, 760, 771, 781, 783, 786, 791, 792, 793, 797, 799, 803, 805, 809, 818, 821, 825, 836, 837, 838, 839, 840, 841, 848, 862, 864, 881, 904, 916, 917, 920, 921, 922, 927, 930, 931, 935, 936, 941, 945, 951, 981, 984, 991, 992, 994, 1009, 1013, 1014, 1017, 1023, 1025, 1030, 1031, 1032, 1033, 1042, 1047, 1048, 1059, 1060, 1063, 1065, 1071, 1073, 1074, 1075, 1078, 1079, 1086, 1087, 1091, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1117, 1118, 1125, 1127, 1132, 1138, 1143, 1144, 1145, 1150, 1173, 1176, 1179, 1190, 1194, 1196, 1197, 1200, 1204, 1207, 1208, 1214, 1216, 1222, 1223, 1233, 1241, 1242, 1243, 1244, 1246, 1256], "new": [5, 16, 32, 42, 44, 49, 50, 55, 62, 66, 80, 109, 124, 131, 132, 156, 187, 190, 192, 193, 194, 195, 196, 197, 200, 205, 217, 222, 242, 259, 263, 265, 275, 278, 282, 290, 300, 317, 323, 324, 341, 374, 380, 383, 408, 414, 416, 443, 473, 477, 478, 486, 490, 504, 524, 534, 547, 549, 567, 571, 583, 585, 589, 598, 600, 601, 610, 611, 612, 613, 615, 616, 620, 626, 634, 643, 644, 649, 652, 698, 700, 711, 713, 714, 719, 737, 741, 745, 747, 748, 752, 753, 754, 756, 759, 770, 781, 784, 788, 790, 792, 794, 795, 799, 800, 801, 802, 803, 804, 808, 809, 816, 818, 819, 821, 825, 829, 830, 831, 837, 840, 841, 844, 881, 887, 895, 919, 944, 967, 985, 988, 992, 994, 1017, 1018, 1019, 1028, 1030, 1031, 1037, 1049, 1081, 1100, 1115, 1118, 1127, 1167, 1192, 1193, 1210, 1216, 1221, 1240, 1241, 1242, 1244], "languag": [5, 12, 29, 43, 61, 63, 80, 92, 126, 144, 156, 163, 166, 186, 211, 213, 225, 226, 227, 229, 231, 234, 236, 241, 242, 244, 247, 249, 250, 251, 253, 269, 273, 276, 279, 281, 284, 309, 312, 315, 316, 317, 344, 383, 384, 385, 386, 387, 388, 397, 400, 414, 416, 418, 420, 432, 435, 446, 450, 459, 464, 466, 472, 476, 477, 479, 492, 496, 501, 504, 517, 519, 520, 524, 526, 533, 535, 536, 548, 562, 563, 564, 590, 591, 592, 593, 594, 595, 596, 597, 599, 600, 607, 609, 642, 643, 650, 655, 657, 665, 668, 670, 671, 687, 693, 697, 706, 709, 710, 715, 724, 725, 726, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 745, 747, 752, 759, 760, 770, 784, 789, 791, 794, 799, 803, 806, 807, 808, 816, 824, 825, 837, 839, 840, 841, 919, 977, 985, 986, 1062, 1064, 1082, 1091, 1095, 1096, 1097, 1098, 1099, 1102, 1107, 1111, 1115, 1117, 1118, 1121, 1130, 1138, 1141, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1160, 1161, 1162, 1163, 1164, 1165, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1189, 1190, 1194, 1198, 1201, 1202, 1204, 1208, 1213, 1215, 1218, 1220, 1225, 1230, 1238, 1241, 1242, 1243, 1244, 1246], "start": [5, 8, 42, 65, 112, 113, 131, 132, 149, 152, 159, 171, 184, 186, 189, 190, 191, 192, 195, 200, 201, 205, 209, 214, 219, 226, 227, 229, 230, 231, 232, 234, 236, 237, 238, 241, 242, 244, 247, 251, 252, 257, 263, 272, 278, 279, 288, 290, 303, 306, 308, 310, 312, 315, 317, 319, 324, 327, 342, 344, 345, 352, 355, 358, 364, 368, 371, 372, 383, 400, 414, 417, 424, 427, 428, 437, 440, 454, 477, 498, 499, 518, 532, 537, 544, 547, 554, 620, 631, 637, 703, 714, 719, 722, 726, 743, 795, 818, 838, 848, 887, 900, 914, 915, 919, 920, 921, 924, 926, 927, 948, 949, 961, 970, 972, 985, 1011, 1012, 1021, 1024, 1031, 1032, 1036, 1040, 1041, 1044, 1046, 1049, 1055, 1059, 1062, 1077, 1082, 1089, 1094, 1095, 1097, 1098, 1106, 1116, 1117, 1123, 1133, 1150, 1157, 1158, 1176, 1195, 1197, 1205, 1206, 1210, 1213, 1221, 1229, 1241, 1244], "schluss": [5, 7, 198, 223, 243], "noch": [5, 7, 198, 199, 209, 213, 217, 223, 233, 234, 238, 240, 243, 246, 249, 259, 272, 278, 279, 282, 303, 310, 415, 1240, 1251, 1258], "talk": [5, 42, 45, 50, 64, 66, 67, 68, 86, 126, 127, 143, 190, 194, 205, 210, 214, 222, 226, 229, 234, 266, 268, 269, 345, 399, 504, 505, 788, 797, 887, 906, 985, 990, 994, 1001, 1233], "heurigen": 5, "grazer": [5, 59, 208, 229, 345, 990], "linuxtagen": [5, 208], "pointless": [5, 169, 303, 317, 324, 341, 345, 354, 486, 653], "blink": [5, 60, 169, 317, 320, 341, 345, 383, 386, 985, 1026, 1029], "sollt": [5, 23, 198, 199, 204, 207, 246, 1238, 1257], "interess": [5, 23, 279, 1236, 1247], "anderen": [5, 23, 223, 233, 238, 240, 415, 1235, 1236, 1238, 1240, 1259], "themenkomplex": 5, "bestehen": [5, 1254], "biet": 5, "folgend": [5, 163, 166, 204, 223, 234, 279, 1251], "preisgestaltung": 5, "all": [5, 23, 24, 29, 35, 40, 42, 45, 57, 60, 61, 63, 65, 72, 82, 90, 112, 113, 125, 127, 131, 143, 144, 152, 159, 171, 177, 183, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 204, 205, 206, 210, 211, 212, 217, 219, 222, 223, 225, 226, 228, 233, 238, 242, 248, 250, 251, 259, 262, 265, 266, 270, 275, 276, 278, 295, 297, 300, 303, 306, 308, 315, 317, 324, 341, 345, 372, 376, 379, 382, 384, 385, 392, 408, 420, 424, 434, 438, 439, 442, 443, 444, 455, 463, 464, 470, 480, 482, 484, 486, 487, 490, 493, 494, 497, 499, 504, 506, 508, 511, 512, 513, 515, 516, 520, 522, 524, 525, 528, 530, 531, 534, 535, 538, 540, 542, 543, 547, 549, 552, 554, 555, 563, 564, 569, 570, 591, 593, 601, 602, 620, 648, 649, 652, 654, 659, 677, 678, 695, 700, 713, 714, 726, 729, 737, 739, 754, 756, 758, 771, 781, 785, 790, 791, 793, 803, 804, 807, 810, 812, 815, 831, 846, 848, 855, 858, 860, 865, 873, 877, 879, 883, 885, 887, 895, 901, 904, 913, 914, 915, 919, 920, 921, 923, 924, 926, 928, 930, 931, 932, 933, 948, 949, 960, 967, 970, 972, 974, 975, 976, 977, 979, 985, 986, 987, 988, 992, 993, 994, 1004, 1005, 1009, 1011, 1014, 1015, 1020, 1022, 1031, 1038, 1044, 1047, 1048, 1049, 1060, 1064, 1071, 1075, 1080, 1081, 1085, 1086, 1087, 1098, 1106, 1111, 1112, 1116, 1118, 1131, 1132, 1135, 1136, 1137, 1143, 1149, 1150, 1166, 1167, 1183, 1187, 1188, 1197, 1201, 1210, 1216, 1221, 1223, 1228, 1235, 1236, 1238, 1240, 1244, 1245, 1252, 1253, 1256, 1259], "onlin": [5, 11, 23, 163, 166, 195, 202, 204, 205, 217, 222, 225, 415], "gehalten": [5, 8, 186, 213, 225, 234, 244, 253, 269, 281, 1235, 1240, 1251], "klarerweis": 5, "tagsatz": 5, "anf\u00e4llt": 5, "schulung": [5, 23, 185, 198, 199, 213, 222, 225, 415, 416, 843, 846, 851, 856, 865, 873, 1052, 1055, 1059, 1088, 1090, 1110, 1187, 1202, 1215, 1235, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1246, 1247, 1248, 1256], "980": [5, 262, 265, 278, 285, 288, 743], "reisekosten": [5, 23], "auto": [5, 132, 162, 187, 199, 207, 211, 217, 293, 355, 373, 374, 380, 513, 544, 549, 573, 574, 578, 579, 582, 583, 584, 637, 645, 654, 655, 678, 700, 701, 703, 745, 746, 753, 760, 763, 765, 768, 771, 772, 773, 775, 776, 777, 778, 779, 783, 785, 786, 787, 788, 793, 795, 797, 802, 803, 804, 806, 817, 824, 826, 828, 829, 830, 834, 835, 836, 837, 838, 839, 840, 887, 1059, 1241, 1252, 1257], "42": [5, 7, 21, 42, 60, 132, 134, 207, 209, 210, 212, 223, 233, 238, 240, 243, 246, 249, 254, 255, 259, 262, 265, 270, 272, 275, 278, 282, 285, 288, 291, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 389, 392, 393, 439, 465, 467, 468, 470, 473, 481, 486, 488, 494, 511, 513, 514, 540, 543, 547, 564, 566, 595, 596, 600, 601, 602, 603, 604, 605, 606, 618, 625, 637, 644, 652, 653, 657, 659, 685, 688, 691, 698, 722, 727, 747, 748, 756, 758, 786, 793, 806, 807, 817, 819, 820, 824, 826, 828, 830, 834, 835, 836, 850, 933, 970, 979, 987, 1033, 1041, 1055, 1062, 1063, 1064, 1065, 1085, 1086, 1087, 1094, 1097, 1115, 1117, 1118, 1127, 1128, 1129, 1132, 1152, 1233], "per": [5, 50, 80, 196, 223, 341, 388, 408, 438, 477, 482, 519, 591, 824, 877, 883, 897, 901, 906, 907, 919, 924, 944, 970, 1037, 1046, 1063, 1234, 1259], "kilomet": [5, 192, 785, 948], "anderweitig": 5, "aufwand": [5, 23], "\u00fcbernachtung": [5, 198], "sampl": [6, 117, 125, 126, 134, 190, 201, 247, 250, 251, 263, 267, 273, 279, 282, 299, 315, 341, 358, 374, 377, 383, 500, 588, 815, 987, 1035, 1055, 1139], "log": [6, 98, 132, 171, 187, 195, 196, 205, 212, 217, 220, 229, 249, 259, 265, 275, 278, 306, 308, 320, 337, 358, 396, 516, 535, 549, 807, 850, 887, 916, 924, 926, 948, 985, 987, 995, 999, 1001, 1004, 1005, 1065, 1187, 1190, 1216, 1230], "record": [6, 29, 40, 53, 144, 185, 186, 194, 196, 197, 223, 234, 235, 241, 251, 256, 263, 279, 299, 314, 334, 337, 388, 400, 499, 500, 840, 987, 1082, 1087, 1102, 1145, 1147, 1166, 1177, 1178, 1179, 1180, 1181, 1183, 1186, 1196, 1251], "grundlagen": [6, 8, 23, 163, 166, 183, 284, 323, 414, 1238, 1240, 1247, 1248, 1251, 1252, 1254, 1255, 1258], "4": [6, 7, 8, 32, 60, 62, 108, 111, 114, 115, 124, 163, 166, 171, 182, 187, 189, 193, 195, 201, 209, 210, 211, 212, 213, 216, 223, 228, 230, 234, 235, 238, 240, 243, 246, 249, 250, 254, 255, 256, 257, 259, 260, 262, 263, 265, 270, 272, 273, 275, 278, 282, 285, 287, 288, 291, 299, 300, 303, 307, 308, 310, 314, 320, 323, 324, 329, 330, 335, 342, 346, 352, 357, 358, 364, 368, 390, 391, 392, 394, 397, 410, 411, 414, 428, 444, 464, 467, 470, 487, 491, 494, 495, 505, 506, 511, 514, 520, 524, 546, 549, 588, 592, 593, 594, 595, 596, 598, 600, 601, 603, 619, 621, 637, 644, 646, 654, 655, 658, 660, 661, 662, 663, 664, 676, 677, 685, 695, 746, 748, 750, 765, 766, 767, 769, 771, 780, 782, 786, 793, 795, 806, 819, 838, 887, 888, 926, 974, 977, 979, 987, 992, 993, 994, 1015, 1016, 1029, 1046, 1050, 1062, 1065, 1083, 1084, 1086, 1093, 1095, 1099, 1106, 1107, 1109, 1118, 1119, 1124, 1127, 1128, 1129, 1133, 1134, 1138, 1139, 1142, 1143, 1145, 1149, 1162, 1166, 1177, 1179, 1183, 1185, 1188, 1192, 1193, 1195, 1201, 1205, 1206, 1207, 1209, 1210, 1212, 1216, 1221, 1236, 1251], "2021": [6, 10, 23, 167, 183, 200, 202, 238, 240, 249, 255, 256, 259, 264, 267, 290, 394, 396, 410, 411, 414, 620, 764, 789, 825, 944, 948, 970, 971, 1048, 1062, 1077, 1113, 1230], "templat": [6, 76, 108, 162, 163, 217, 252, 293, 315, 320, 355, 374, 399, 400, 511, 590, 609, 642, 643, 687, 693, 697, 698, 705, 706, 707, 709, 728, 735, 736, 737, 738, 739, 740, 747, 753, 758, 761, 762, 763, 764, 768, 769, 771, 774, 801, 805, 807, 815, 817, 824, 825, 826, 828, 830, 838, 839, 840, 1033, 1240, 1242], "descript": [6, 8, 31, 39, 68, 108, 124, 170, 192, 193, 205, 206, 222, 226, 227, 229, 230, 231, 232, 237, 252, 257, 259, 263, 265, 268, 275, 278, 282, 294, 295, 298, 332, 333, 348, 349, 377, 416, 531, 535, 547, 557, 558, 559, 560, 561, 565, 575, 599, 795, 802, 803, 804, 813, 815, 817, 838, 887, 899, 911, 913, 923, 948, 950, 970, 977, 980, 981, 994, 1006, 1014, 1064, 1077, 1128, 1143, 1166, 1223, 1244], "sidebar": [6, 17, 187, 899], "metadata": [6, 28, 39, 186, 205, 303, 919, 923, 993, 996, 1022, 1085, 1246], "angebot": [6, 204], "hous": [6, 32, 190], "meiner": [6, 23, 279, 415, 1236], "person": [6, 23, 116, 120, 197, 227, 246, 249, 288, 290, 292, 299, 303, 310, 341, 342, 404, 489, 525, 544, 545, 548, 573, 657, 716, 825, 1001, 1100, 1101, 1103, 1104, 1105, 1107, 1108, 1183, 1205, 1206, 1207, 1209, 1210, 1211, 1212, 1221, 1222], "schwerpunk": 6, "schulungsstil": 6, "preis": 6, "einr\u00fcckung": [7, 235, 243], "wichtig": [7, 243, 293, 397, 402, 1259], "1": [7, 32, 39, 42, 50, 60, 62, 66, 74, 76, 89, 108, 111, 112, 113, 117, 122, 124, 125, 143, 145, 159, 165, 166, 168, 171, 182, 183, 186, 191, 193, 196, 197, 199, 200, 201, 205, 206, 208, 209, 210, 211, 212, 213, 218, 219, 220, 223, 225, 228, 235, 238, 239, 240, 243, 246, 249, 250, 254, 255, 256, 259, 262, 265, 268, 270, 272, 275, 278, 282, 285, 288, 290, 291, 295, 300, 303, 307, 308, 310, 314, 320, 324, 330, 333, 335, 338, 342, 346, 349, 352, 357, 358, 364, 368, 375, 378, 382, 383, 389, 390, 391, 392, 393, 394, 395, 397, 400, 402, 410, 411, 414, 428, 429, 451, 458, 467, 471, 473, 481, 498, 505, 506, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 523, 524, 530, 532, 533, 534, 535, 537, 538, 539, 540, 542, 543, 563, 564, 570, 580, 588, 589, 592, 596, 598, 600, 601, 602, 604, 608, 610, 611, 612, 613, 614, 615, 616, 621, 624, 627, 630, 633, 636, 637, 639, 644, 645, 646, 652, 654, 658, 660, 661, 662, 663, 664, 669, 674, 676, 682, 683, 684, 685, 686, 691, 695, 707, 709, 717, 719, 722, 726, 727, 737, 743, 744, 746, 747, 748, 750, 753, 754, 756, 758, 760, 762, 763, 765, 767, 768, 769, 771, 772, 773, 780, 786, 788, 791, 792, 793, 795, 797, 798, 801, 802, 804, 805, 806, 815, 819, 820, 824, 826, 827, 828, 830, 836, 838, 840, 845, 850, 856, 860, 865, 887, 904, 913, 914, 915, 918, 919, 920, 921, 923, 924, 925, 926, 927, 930, 931, 932, 933, 934, 938, 940, 942, 944, 945, 949, 950, 951, 967, 970, 971, 972, 973, 974, 976, 977, 979, 980, 981, 983, 985, 992, 993, 995, 996, 1004, 1005, 1006, 1008, 1010, 1011, 1012, 1014, 1015, 1016, 1018, 1019, 1020, 1021, 1026, 1028, 1029, 1041, 1043, 1044, 1046, 1048, 1050, 1051, 1052, 1055, 1058, 1059, 1061, 1062, 1065, 1075, 1077, 1078, 1079, 1080, 1082, 1083, 1085, 1086, 1087, 1090, 1091, 1093, 1095, 1097, 1099, 1100, 1106, 1107, 1109, 1111, 1112, 1113, 1114, 1116, 1119, 1120, 1121, 1122, 1123, 1126, 1128, 1129, 1134, 1139, 1142, 1143, 1145, 1150, 1153, 1156, 1166, 1170, 1173, 1176, 1177, 1179, 1183, 1184, 1185, 1191, 1192, 1193, 1194, 1200, 1205, 1206, 1207, 1209, 1210, 1211, 1215, 1216, 1221, 1222, 1223, 1228, 1232, 1235, 1241, 1243, 1244, 1248, 1251, 1253, 1258], "i": [7, 12, 13, 14, 17, 21, 27, 28, 29, 30, 31, 32, 38, 39, 40, 41, 42, 43, 46, 47, 49, 51, 53, 54, 55, 56, 57, 60, 61, 62, 63, 66, 67, 70, 71, 80, 82, 84, 86, 87, 89, 91, 92, 93, 99, 100, 101, 102, 106, 108, 109, 110, 111, 112, 113, 116, 117, 121, 122, 124, 125, 126, 127, 131, 134, 135, 137, 138, 139, 143, 144, 147, 148, 152, 155, 159, 162, 165, 171, 174, 175, 177, 178, 183, 184, 186, 187, 189, 190, 193, 194, 195, 196, 197, 200, 201, 205, 206, 207, 210, 211, 212, 213, 214, 217, 218, 219, 220, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 238, 240, 241, 242, 243, 246, 247, 250, 251, 252, 254, 255, 257, 260, 261, 262, 263, 266, 267, 268, 269, 271, 272, 273, 276, 277, 279, 280, 281, 282, 284, 286, 289, 290, 291, 295, 296, 297, 299, 300, 302, 303, 305, 306, 307, 308, 309, 310, 312, 314, 315, 316, 317, 318, 319, 321, 322, 323, 325, 326, 328, 330, 332, 334, 335, 337, 338, 340, 341, 342, 344, 345, 346, 348, 350, 351, 352, 354, 356, 357, 359, 362, 363, 365, 366, 367, 368, 370, 372, 373, 374, 376, 382, 383, 384, 385, 386, 387, 388, 392, 393, 394, 397, 400, 402, 403, 405, 408, 410, 411, 415, 416, 418, 419, 420, 421, 422, 428, 429, 430, 432, 434, 435, 436, 438, 439, 442, 443, 444, 446, 447, 449, 450, 451, 454, 455, 456, 457, 458, 459, 461, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 504, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 519, 522, 525, 526, 528, 530, 531, 532, 534, 535, 536, 537, 538, 542, 544, 546, 547, 548, 549, 552, 555, 556, 563, 564, 566, 567, 568, 569, 570, 583, 585, 586, 588, 590, 591, 592, 593, 594, 595, 596, 599, 600, 601, 602, 603, 604, 607, 609, 614, 618, 620, 625, 628, 631, 634, 637, 642, 643, 645, 646, 647, 648, 649, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 667, 669, 672, 673, 677, 678, 679, 680, 681, 682, 683, 685, 686, 691, 695, 698, 699, 700, 702, 704, 707, 709, 714, 716, 717, 722, 723, 724, 726, 727, 729, 730, 732, 733, 734, 735, 736, 737, 738, 739, 742, 743, 744, 745, 747, 748, 750, 751, 753, 754, 755, 757, 760, 765, 766, 767, 768, 769, 771, 782, 783, 786, 787, 791, 792, 795, 796, 797, 801, 803, 804, 805, 807, 809, 813, 815, 816, 817, 818, 819, 824, 826, 828, 834, 837, 838, 839, 840, 841, 842, 843, 846, 848, 851, 853, 855, 856, 858, 862, 865, 869, 873, 875, 877, 879, 881, 883, 885, 887, 888, 889, 894, 895, 897, 899, 900, 901, 903, 904, 912, 913, 914, 915, 916, 917, 919, 920, 921, 922, 925, 926, 927, 928, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 945, 947, 948, 949, 950, 951, 952, 953, 955, 956, 959, 960, 962, 963, 964, 968, 970, 972, 975, 977, 980, 981, 984, 985, 986, 987, 988, 990, 991, 992, 993, 995, 996, 997, 998, 999, 1000, 1001, 1003, 1008, 1015, 1018, 1020, 1022, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1035, 1036, 1038, 1039, 1042, 1045, 1046, 1047, 1048, 1049, 1050, 1055, 1056, 1059, 1060, 1063, 1064, 1065, 1066, 1068, 1069, 1071, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1081, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1136, 1138, 1139, 1140, 1142, 1143, 1145, 1146, 1147, 1148, 1150, 1157, 1160, 1163, 1166, 1167, 1168, 1170, 1171, 1172, 1173, 1175, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1190, 1191, 1192, 1193, 1194, 1196, 1197, 1200, 1201, 1202, 1203, 1204, 1206, 1207, 1210, 1211, 1213, 1214, 1215, 1216, 1217, 1221, 1222, 1223, 1224, 1226, 1228, 1230, 1234, 1236, 1238, 1241, 1243, 1244, 1245, 1246, 1254, 1255, 1256, 1258], "41": [7, 195, 200, 211, 212, 223, 233, 238, 240, 243, 246, 249, 251, 254, 255, 259, 262, 265, 270, 272, 278, 282, 285, 288, 291, 300, 303, 307, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 389, 391, 392, 549, 806, 838, 877, 970, 993, 1099, 1143, 1145, 1192, 1223], "print": [7, 62, 186, 209, 210, 212, 213, 223, 226, 228, 229, 233, 238, 240, 241, 242, 243, 246, 249, 250, 254, 255, 256, 259, 262, 263, 265, 270, 272, 275, 278, 281, 282, 285, 288, 291, 300, 303, 307, 308, 310, 320, 324, 330, 335, 341, 342, 346, 352, 357, 358, 364, 368, 389, 390, 391, 392, 393, 423, 427, 429, 498, 526, 535, 673, 700, 723, 771, 785, 793, 795, 925, 926, 932, 948, 950, 951, 992, 1040, 1050, 1082, 1085, 1086, 1087, 1089, 1090, 1091, 1095, 1097, 1099, 1100, 1103, 1105, 1108, 1113, 1114, 1115, 1116, 1121, 1122, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1137, 1138, 1153, 1155, 1165, 1166, 1167, 1169, 1170, 1176, 1191, 1196, 1200, 1204, 1213], "ja": [7, 23, 199, 223, 240, 243, 246, 259, 262, 291, 358], "basta": [7, 190, 243, 1118], "2": [7, 29, 32, 42, 50, 60, 62, 66, 74, 106, 108, 117, 124, 125, 127, 145, 163, 171, 183, 186, 191, 193, 199, 200, 201, 207, 209, 210, 211, 212, 213, 224, 228, 234, 235, 238, 239, 243, 246, 249, 250, 254, 255, 256, 259, 264, 265, 270, 272, 275, 276, 278, 282, 285, 288, 290, 291, 300, 303, 307, 308, 310, 314, 320, 324, 330, 333, 335, 338, 342, 346, 349, 352, 358, 364, 368, 375, 378, 383, 389, 390, 391, 392, 393, 394, 397, 398, 399, 400, 406, 414, 427, 428, 440, 446, 447, 467, 471, 498, 504, 505, 506, 510, 513, 516, 517, 518, 519, 520, 522, 523, 524, 526, 531, 532, 533, 534, 537, 539, 540, 542, 564, 588, 589, 592, 598, 600, 601, 604, 608, 610, 611, 612, 613, 615, 616, 620, 635, 637, 644, 645, 646, 652, 654, 655, 658, 660, 661, 662, 663, 664, 669, 674, 678, 682, 683, 684, 685, 686, 691, 695, 699, 700, 701, 702, 707, 717, 722, 743, 746, 747, 748, 750, 753, 756, 758, 760, 761, 763, 765, 768, 769, 771, 781, 782, 785, 786, 791, 792, 793, 795, 797, 798, 801, 802, 803, 804, 805, 806, 815, 817, 819, 827, 838, 840, 846, 887, 914, 915, 923, 926, 927, 930, 931, 932, 944, 967, 970, 973, 974, 979, 981, 983, 985, 989, 992, 993, 1005, 1008, 1010, 1011, 1012, 1014, 1015, 1018, 1019, 1020, 1021, 1022, 1024, 1026, 1028, 1029, 1041, 1043, 1046, 1048, 1050, 1061, 1062, 1065, 1078, 1080, 1082, 1083, 1085, 1086, 1088, 1091, 1093, 1095, 1099, 1103, 1106, 1107, 1109, 1110, 1111, 1112, 1113, 1114, 1116, 1119, 1120, 1121, 1123, 1128, 1129, 1134, 1139, 1142, 1144, 1145, 1146, 1147, 1149, 1153, 1156, 1166, 1170, 1173, 1176, 1177, 1178, 1179, 1180, 1183, 1184, 1185, 1186, 1188, 1191, 1192, 1193, 1198, 1205, 1206, 1207, 1209, 1210, 1211, 1215, 1216, 1221, 1222, 1223, 1227, 1228, 1235, 1243, 1244, 1251, 1254, 1255, 1257, 1258, 1259], "1234": [7, 32, 243, 246, 256, 265, 270, 272, 324, 352, 364, 392, 1003, 1011, 1060, 1118], "3": [7, 32, 60, 62, 65, 68, 108, 111, 112, 113, 114, 115, 117, 125, 131, 152, 163, 166, 168, 171, 186, 195, 200, 201, 205, 207, 209, 210, 211, 212, 213, 220, 222, 223, 228, 234, 235, 238, 239, 240, 243, 246, 249, 250, 254, 256, 258, 259, 264, 265, 268, 270, 272, 275, 278, 282, 285, 287, 289, 290, 291, 293, 300, 303, 307, 308, 310, 314, 320, 324, 330, 335, 337, 338, 343, 346, 352, 358, 364, 368, 390, 391, 392, 393, 397, 398, 399, 402, 414, 428, 440, 441, 442, 455, 464, 465, 486, 487, 495, 498, 500, 505, 506, 509, 513, 516, 520, 522, 524, 526, 530, 534, 546, 563, 564, 588, 589, 593, 596, 598, 599, 600, 601, 603, 604, 605, 606, 610, 611, 612, 613, 615, 616, 618, 620, 637, 644, 646, 652, 653, 654, 656, 657, 658, 660, 661, 662, 663, 664, 669, 672, 673, 674, 675, 676, 677, 678, 679, 681, 682, 683, 684, 685, 686, 691, 707, 717, 722, 724, 726, 746, 747, 748, 750, 758, 760, 761, 765, 766, 767, 768, 769, 771, 786, 791, 793, 795, 797, 802, 803, 805, 806, 819, 823, 838, 845, 851, 887, 926, 931, 945, 948, 970, 972, 974, 979, 981, 987, 989, 992, 993, 994, 996, 1005, 1006, 1008, 1010, 1011, 1012, 1015, 1019, 1020, 1021, 1029, 1030, 1031, 1035, 1041, 1043, 1046, 1049, 1050, 1051, 1054, 1056, 1059, 1060, 1062, 1063, 1064, 1065, 1083, 1085, 1086, 1088, 1091, 1093, 1095, 1099, 1106, 1109, 1110, 1111, 1112, 1113, 1116, 1117, 1119, 1121, 1123, 1124, 1127, 1129, 1134, 1135, 1136, 1138, 1142, 1143, 1145, 1162, 1166, 1170, 1176, 1177, 1179, 1183, 1185, 1188, 1191, 1192, 1193, 1196, 1199, 1205, 1206, 1207, 1209, 1210, 1212, 1216, 1221, 1222, 1223, 1230, 1235, 1237, 1239, 1241, 1244, 1247, 1251], "decim": [7, 243, 278, 282, 324, 352, 368, 383, 420, 506, 1118, 1132], "5": [7, 32, 60, 62, 66, 114, 115, 116, 122, 132, 134, 139, 163, 166, 182, 186, 193, 195, 201, 211, 212, 213, 218, 221, 224, 228, 234, 235, 238, 240, 241, 243, 246, 247, 249, 250, 253, 255, 256, 257, 259, 260, 262, 263, 265, 270, 272, 273, 275, 278, 282, 285, 287, 288, 290, 291, 295, 299, 300, 303, 307, 310, 314, 320, 323, 324, 329, 330, 335, 338, 342, 346, 352, 357, 358, 364, 368, 374, 383, 389, 391, 392, 397, 402, 410, 411, 414, 420, 422, 427, 444, 446, 455, 482, 487, 491, 500, 505, 513, 519, 522, 535, 537, 543, 546, 549, 564, 572, 588, 591, 593, 598, 599, 601, 602, 603, 604, 605, 606, 618, 619, 624, 637, 644, 645, 646, 652, 656, 657, 660, 661, 663, 664, 685, 695, 722, 726, 743, 747, 750, 751, 753, 754, 760, 762, 763, 765, 780, 781, 793, 795, 802, 803, 804, 806, 819, 820, 830, 838, 860, 865, 888, 916, 918, 970, 974, 979, 985, 992, 993, 994, 1010, 1012, 1020, 1029, 1046, 1062, 1075, 1083, 1085, 1086, 1089, 1091, 1095, 1099, 1106, 1107, 1112, 1117, 1118, 1119, 1123, 1124, 1126, 1132, 1134, 1138, 1139, 1143, 1166, 1170, 1177, 1179, 1183, 1185, 1188, 1192, 1193, 1196, 1201, 1212, 1216, 1221, 1223, 1228, 1232, 1238, 1240, 1245, 1246, 1251, 1252], "hexadecim": [7, 243, 282, 439, 993, 1118, 1131, 1132], "16": [7, 62, 186, 195, 197, 198, 200, 209, 211, 212, 217, 218, 223, 228, 233, 238, 240, 243, 246, 249, 254, 255, 259, 262, 265, 270, 272, 275, 278, 282, 285, 288, 291, 300, 304, 307, 310, 314, 320, 324, 330, 335, 342, 346, 352, 358, 364, 368, 389, 390, 391, 392, 393, 397, 402, 403, 414, 438, 482, 489, 500, 534, 664, 722, 802, 865, 877, 970, 987, 992, 994, 1005, 1010, 1011, 1019, 1028, 1062, 1064, 1077, 1078, 1083, 1090, 1093, 1118, 1145, 1192, 1193, 1223], "7": [7, 32, 42, 62, 187, 190, 193, 195, 200, 207, 210, 211, 212, 213, 223, 228, 235, 238, 240, 241, 243, 246, 247, 249, 253, 255, 256, 257, 259, 260, 262, 265, 270, 272, 275, 278, 282, 285, 287, 288, 290, 291, 299, 300, 303, 307, 308, 310, 314, 320, 324, 329, 330, 335, 338, 342, 346, 352, 358, 364, 368, 374, 382, 391, 392, 397, 402, 403, 414, 428, 432, 446, 473, 482, 506, 509, 513, 516, 520, 524, 526, 534, 543, 563, 564, 588, 591, 596, 600, 601, 603, 604, 605, 606, 618, 625, 633, 637, 644, 652, 653, 657, 659, 660, 661, 663, 684, 688, 691, 700, 717, 727, 747, 755, 756, 780, 781, 782, 786, 793, 834, 835, 836, 918, 919, 931, 932, 948, 970, 979, 987, 992, 993, 994, 1011, 1019, 1043, 1046, 1055, 1056, 1059, 1060, 1063, 1064, 1086, 1089, 1095, 1099, 1107, 1112, 1117, 1118, 1119, 1122, 1124, 1126, 1127, 1143, 1155, 1173, 1176, 1188, 1192, 1193, 1196, 1201, 1212, 1221], "0x1234": [7, 243, 1118], "4660": [7, 243, 265, 1118], "8": [7, 32, 62, 111, 186, 192, 193, 197, 201, 209, 210, 211, 212, 213, 217, 222, 223, 226, 228, 235, 238, 240, 241, 243, 246, 247, 249, 250, 255, 256, 257, 259, 260, 262, 263, 265, 269, 270, 272, 275, 278, 282, 285, 287, 288, 291, 299, 300, 303, 306, 307, 310, 314, 320, 324, 327, 329, 330, 335, 338, 341, 342, 346, 352, 358, 364, 368, 371, 389, 390, 391, 392, 397, 414, 438, 482, 494, 500, 506, 509, 516, 524, 537, 563, 595, 630, 637, 644, 649, 652, 657, 661, 663, 664, 754, 802, 838, 860, 883, 887, 918, 925, 933, 970, 972, 979, 985, 986, 987, 988, 992, 993, 1062, 1080, 1086, 1089, 1095, 1118, 1119, 1124, 1132, 1137, 1142, 1143, 1149, 1185, 1188, 1192, 1193, 1199, 1216, 1223], "bin\u00e4r": [7, 23, 243, 246], "9": [7, 8, 32, 60, 62, 124, 186, 191, 195, 198, 205, 209, 210, 211, 212, 213, 221, 223, 225, 228, 229, 230, 231, 232, 235, 236, 238, 240, 241, 242, 243, 244, 246, 247, 249, 250, 251, 253, 255, 256, 257, 259, 262, 263, 265, 270, 272, 275, 278, 279, 282, 285, 288, 290, 291, 300, 303, 306, 307, 310, 314, 315, 317, 320, 324, 330, 335, 342, 346, 352, 358, 364, 368, 377, 389, 390, 392, 393, 397, 402, 414, 420, 422, 428, 437, 440, 498, 506, 513, 543, 563, 572, 591, 637, 639, 655, 664, 755, 765, 793, 865, 944, 967, 970, 992, 993, 994, 1010, 1046, 1083, 1093, 1099, 1112, 1113, 1119, 1124, 1126, 1134, 1138, 1143, 1150, 1155, 1192, 1193, 1201, 1210, 1216, 1221], "0b100110": [7, 243, 272, 1118], "38": [7, 23, 186, 193, 200, 212, 223, 233, 238, 240, 243, 246, 249, 254, 255, 259, 262, 265, 270, 272, 275, 278, 282, 285, 288, 291, 300, 303, 307, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 389, 392, 393, 547, 563, 588, 655, 802, 838, 970, 1075, 1099, 1192, 1193], "arithmet": [7, 110, 210, 243, 248, 268, 271, 283, 298, 315, 397, 421, 435, 442, 443, 449, 450, 459, 465, 466, 472, 476, 479, 481, 482, 483, 492, 496, 501, 502, 541, 550, 562, 563, 576, 590, 638, 642, 672, 676, 677, 680, 685, 743, 745, 783, 792, 793, 837, 839, 840], "man": [7, 32, 37, 126, 152, 190, 192, 198, 199, 207, 213, 217, 223, 225, 233, 234, 240, 243, 246, 251, 253, 255, 266, 272, 279, 282, 306, 327, 346, 397, 402, 404, 415, 526, 537, 625, 634, 646, 726, 809, 838, 846, 865, 913, 914, 915, 918, 919, 923, 930, 931, 932, 933, 934, 938, 940, 942, 945, 949, 950, 951, 967, 970, 971, 973, 974, 976, 977, 979, 980, 994, 1001, 1004, 1005, 1006, 1008, 1010, 1011, 1012, 1014, 1015, 1017, 1018, 1019, 1020, 1021, 1024, 1030, 1031, 1033, 1035, 1037, 1038, 1041, 1043, 1049, 1056, 1059, 1060, 1062, 1079, 1080, 1236, 1237, 1238, 1240, 1248, 1251, 1253, 1254, 1255, 1257, 1258, 1259], "behaviour": [7, 243, 251, 372, 873, 1020, 1137], "erzwingen": [7, 223, 235, 243], "floor": [7, 38, 235, 243, 246, 250, 262, 263, 265, 270, 272, 278, 282, 352, 392, 1106, 1118], "divis": [7, 36, 38, 235, 243, 246, 262, 265, 270, 272, 278, 392, 420, 441, 563, 564, 578, 1106, 1118, 1173], "modul": [7, 12, 21, 23, 29, 66, 169, 180, 186, 193, 195, 200, 212, 218, 220, 222, 225, 226, 227, 228, 229, 236, 237, 243, 246, 250, 252, 257, 259, 260, 263, 265, 266, 269, 270, 272, 273, 275, 276, 278, 279, 281, 282, 284, 285, 289, 290, 293, 299, 301, 302, 303, 308, 310, 318, 319, 322, 324, 328, 329, 332, 333, 334, 337, 342, 344, 346, 348, 349, 350, 351, 352, 357, 358, 362, 363, 364, 366, 367, 368, 375, 376, 377, 378, 379, 382, 383, 392, 398, 399, 400, 402, 408, 415, 460, 504, 506, 513, 516, 517, 523, 524, 528, 531, 532, 533, 539, 552, 742, 783, 839, 840, 843, 844, 846, 847, 849, 851, 852, 853, 854, 856, 857, 864, 867, 868, 872, 878, 883, 884, 888, 889, 891, 896, 899, 902, 905, 908, 984, 985, 992, 994, 1087, 1088, 1102, 1111, 1112, 1115, 1116, 1127, 1129, 1135, 1138, 1139, 1141, 1144, 1145, 1146, 1147, 1181, 1182, 1183, 1184, 1186, 1187, 1189, 1190, 1194, 1197, 1198, 1200, 1201, 1202, 1203, 1204, 1215, 1216, 1218, 1220, 1221, 1224, 1225, 1231, 1243, 1245, 1246, 1252, 1256, 1259], "restklassen": [7, 243], "rest": [7, 17, 40, 197, 199, 209, 233, 243, 246, 250, 252, 270, 278, 310, 324, 342, 345, 392, 418, 428, 453, 534, 675, 676, 738, 795, 875, 927, 988, 1018, 1046, 1106, 1109, 1133, 1163, 1167, 1196, 1211, 1243, 1259], "14": [7, 62, 162, 183, 187, 200, 211, 212, 223, 228, 235, 238, 240, 242, 243, 246, 249, 250, 254, 255, 259, 262, 263, 265, 270, 272, 275, 278, 282, 285, 288, 290, 291, 294, 300, 303, 307, 310, 314, 320, 324, 330, 341, 342, 344, 346, 352, 358, 364, 368, 389, 390, 392, 393, 394, 414, 506, 532, 539, 540, 549, 643, 717, 742, 754, 793, 795, 803, 805, 838, 930, 933, 945, 970, 972, 992, 993, 994, 996, 1011, 1020, 1050, 1062, 1063, 1064, 1084, 1100, 1187, 1192, 1193, 1240, 1251], "oper": [7, 29, 33, 34, 35, 38, 75, 80, 82, 99, 110, 139, 143, 189, 190, 192, 196, 208, 209, 211, 214, 217, 222, 226, 227, 228, 229, 231, 235, 240, 243, 248, 249, 250, 251, 252, 257, 259, 263, 264, 267, 270, 272, 273, 277, 280, 283, 286, 288, 291, 293, 303, 310, 315, 316, 317, 318, 319, 320, 323, 324, 340, 344, 345, 347, 352, 358, 363, 364, 372, 380, 383, 397, 402, 420, 428, 438, 444, 459, 464, 465, 466, 470, 472, 473, 476, 479, 481, 483, 485, 488, 492, 494, 496, 501, 502, 524, 526, 544, 545, 564, 584, 590, 602, 637, 642, 643, 644, 649, 650, 654, 657, 661, 662, 663, 664, 665, 669, 677, 685, 686, 698, 701, 740, 743, 745, 751, 753, 754, 756, 760, 765, 767, 768, 769, 771, 774, 778, 781, 783, 785, 786, 787, 788, 793, 795, 802, 803, 806, 813, 817, 820, 829, 830, 831, 837, 838, 839, 840, 849, 854, 857, 858, 864, 868, 878, 887, 889, 891, 896, 902, 903, 905, 908, 914, 915, 918, 948, 954, 979, 980, 984, 992, 993, 994, 1005, 1010, 1011, 1012, 1013, 1014, 1015, 1026, 1029, 1033, 1035, 1055, 1059, 1063, 1077, 1080, 1088, 1091, 1098, 1099, 1102, 1119, 1123, 1127, 1132, 1133, 1138, 1153, 1186, 1188, 1197, 1206, 1228, 1233, 1240, 1246], "preced": [7, 35, 38, 243, 265, 270, 278, 283, 286, 420, 426, 441, 442, 450, 455, 459, 464, 466, 470, 472, 474, 476, 479, 483, 492, 496, 501, 502, 673, 677, 745, 783, 837, 839, 840, 948, 997], "implizit": [7, 223, 243, 320, 1238, 1255], "klammerung": [7, 243, 976], "durch": [7, 163, 166, 198, 199, 207, 213, 217, 225, 233, 243, 275, 285, 368, 397, 402, 415, 976, 1235, 1236, 1238], "pr\u00e4zedenz": [7, 223, 235, 243], "6666666666666665": [7, 243], "frage": [7, 199, 209, 213, 240, 243, 246, 252, 272, 415, 1245, 1252, 1259], "6665": [7, 243], "6667": [7, 243], "ieee": [7, 243], "floatingpoint": [7, 243, 441, 442, 585, 887, 1165], "representaion": [7, 243], "true": [7, 35, 38, 50, 58, 62, 112, 113, 116, 120, 121, 122, 123, 159, 171, 191, 193, 195, 200, 209, 210, 211, 212, 222, 223, 228, 233, 238, 240, 241, 243, 246, 249, 250, 254, 255, 259, 262, 263, 265, 270, 272, 275, 276, 278, 282, 285, 288, 291, 300, 303, 307, 310, 314, 320, 324, 330, 335, 342, 346, 352, 358, 364, 368, 383, 389, 392, 426, 442, 443, 455, 467, 470, 516, 519, 524, 588, 652, 660, 685, 713, 724, 727, 748, 771, 772, 773, 774, 776, 777, 778, 779, 804, 813, 815, 817, 820, 838, 875, 877, 907, 920, 921, 948, 961, 1029, 1035, 1040, 1041, 1044, 1046, 1047, 1055, 1056, 1059, 1068, 1069, 1084, 1090, 1091, 1095, 1097, 1098, 1099, 1100, 1103, 1106, 1119, 1120, 1122, 1123, 1124, 1127, 1133, 1136, 1137, 1201, 1205, 1207, 1212, 1227, 1228, 1230], "zahlen": [7, 233, 234, 243, 1238, 1251], "vergleichen": [7, 223, 243], "21": [7, 99, 101, 104, 107, 108, 126, 152, 162, 197, 200, 211, 212, 223, 228, 231, 233, 238, 240, 243, 246, 249, 254, 255, 259, 262, 265, 270, 272, 278, 282, 285, 288, 291, 300, 303, 307, 310, 314, 320, 324, 330, 335, 342, 346, 352, 358, 364, 368, 392, 396, 414, 506, 838, 877, 930, 970, 993, 994, 1005, 1077, 1192, 1193], "ab": [7, 23, 32, 198, 200, 223, 233, 234, 243, 278, 282, 285, 300, 303, 324, 352, 519, 644, 646, 654, 663, 750, 806, 1193, 1245, 1251], "0001": [7, 193, 211, 243], "aber": [7, 23, 37, 199, 207, 209, 213, 223, 233, 234, 238, 241, 243, 272, 275, 278, 330, 415, 976, 1236, 1238, 1240, 1247, 1254, 1258, 1259], "unendlich": [7, 8, 234, 243, 244], "lang": [7, 195, 198, 199, 208, 243, 388, 389, 406, 415, 535, 1237, 1253, 1258], "22": [7, 62, 99, 107, 108, 126, 162, 192, 195, 200, 202, 211, 212, 223, 228, 230, 233, 238, 239, 240, 243, 246, 249, 250, 254, 255, 259, 262, 263, 265, 270, 272, 278, 282, 285, 288, 291, 300, 303, 307, 310, 314, 320, 324, 331, 334, 335, 337, 342, 352, 358, 364, 368, 389, 391, 392, 393, 414, 838, 933, 970, 994, 995, 1003, 1004, 1019, 1063, 1064, 1065, 1150, 1187, 1192, 1193, 1252], "1000000": [7, 192, 223, 243, 320, 358, 392, 498, 985, 993], "23": [7, 62, 126, 193, 200, 201, 202, 208, 211, 212, 213, 223, 228, 230, 233, 238, 240, 243, 246, 249, 254, 255, 259, 262, 265, 270, 272, 275, 276, 278, 281, 282, 285, 291, 300, 303, 307, 310, 314, 320, 324, 330, 335, 342, 346, 352, 358, 364, 368, 414, 470, 506, 535, 771, 822, 933, 970, 992, 993, 1075, 1145, 1150, 1192, 1193, 1223, 1230], "32": [7, 200, 201, 207, 209, 212, 223, 228, 233, 238, 240, 243, 246, 249, 252, 254, 255, 259, 262, 265, 270, 272, 275, 278, 282, 285, 288, 291, 300, 303, 307, 310, 314, 320, 324, 330, 342, 346, 352, 358, 364, 368, 392, 420, 422, 438, 443, 482, 543, 549, 572, 588, 601, 883, 912, 918, 944, 970, 986, 988, 1063, 1064, 1065, 1075, 1143], "4294967295": [7, 243, 262, 270, 278], "24": [7, 62, 99, 107, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 143, 193, 200, 208, 211, 212, 213, 223, 228, 233, 238, 240, 243, 246, 249, 254, 255, 259, 262, 265, 270, 272, 275, 278, 282, 285, 288, 291, 300, 303, 307, 310, 314, 324, 330, 335, 342, 352, 358, 364, 368, 389, 390, 392, 393, 414, 524, 539, 736, 738, 760, 802, 803, 840, 887, 914, 915, 970, 992, 1062, 1080, 1086, 1106, 1192, 1193], "64": [7, 192, 195, 200, 223, 228, 233, 238, 240, 243, 246, 249, 251, 252, 255, 259, 262, 265, 270, 272, 275, 278, 282, 285, 288, 291, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 392, 397, 402, 426, 438, 443, 467, 482, 488, 491, 539, 883, 1026, 1029, 1052, 1059, 1062, 1065, 1080, 1145, 1192, 1236], "18446744073709551615": [7, 223, 233, 243, 246, 259, 262, 270, 272, 278, 282, 285, 288, 310, 342, 364, 392], "overflow": [7, 42, 44, 50, 192, 233, 243, 259, 262, 263, 265, 268, 269, 275, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364, 443, 445, 481, 490, 925], "wenn": [7, 23, 198, 199, 204, 209, 217, 223, 225, 233, 234, 240, 243, 279, 285, 320, 975, 1235, 1237, 1238, 1245, 1247, 1248, 1251, 1254, 1259], "verwendet": [7, 23, 213, 217, 223, 243, 285, 364, 1236, 1238, 1248, 1252, 1254, 1259], "wert": [7, 23, 234, 235, 240, 243, 275, 278, 282, 285, 291, 320, 324, 330, 1251, 1259], "w\u00e4re": [7, 207, 233, 243, 279, 1240, 1247], "dort": [7, 163, 166, 172, 199, 207, 209, 217, 233, 234, 243, 415, 1251, 1257, 1259], "25": [7, 62, 99, 200, 201, 211, 212, 213, 223, 228, 233, 238, 240, 243, 246, 249, 254, 255, 259, 262, 265, 270, 272, 275, 276, 278, 281, 282, 285, 288, 290, 291, 300, 303, 307, 310, 314, 320, 324, 330, 337, 342, 346, 352, 358, 364, 368, 383, 392, 393, 414, 636, 637, 760, 797, 822, 867, 970, 994, 1062, 1089, 1132, 1177, 1179, 1183, 1185, 1192, 1193, 1205, 1206, 1207, 1209, 1210, 1211, 1212], "18446744073709551616": [7, 223, 233, 243, 246, 259, 262, 270, 272, 282, 285, 303, 310, 320, 324, 330, 342, 346, 352, 358, 392], "26": [7, 117, 125, 193, 195, 200, 201, 202, 211, 212, 223, 233, 238, 240, 243, 246, 249, 254, 255, 259, 262, 265, 270, 272, 275, 278, 282, 285, 288, 291, 295, 300, 303, 307, 310, 314, 324, 330, 335, 342, 346, 352, 358, 364, 368, 392, 396, 414, 636, 637, 765, 781, 948, 970, 994, 1026, 1028, 1029, 1062, 1064, 1106, 1192, 1193, 1216, 1252], "1000": [7, 23, 223, 233, 243, 246, 249, 259, 262, 265, 270, 272, 278, 282, 285, 288, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 389, 392, 601, 602, 620, 695, 726, 743, 817, 897, 923, 925, 930, 944, 945, 972, 973, 977, 979, 987, 1005, 1012, 1020, 1041, 1046, 1050, 1077, 1084, 1133, 1166], "10715086071862673209484250490600018105614048117055336074437503883703510511249361224931983788156958581275946729175531468251871452856923140435984577574698574803934567774824230985421074605062371141877954182153046474983581941267398767559165543946077062914571196477686542167660429831652624386837205668069376": [7, 223, 233, 243, 246, 259, 282, 285, 303, 330, 358], "27": [7, 62, 99, 126, 162, 200, 202, 211, 212, 223, 233, 238, 240, 242, 243, 246, 249, 254, 255, 259, 262, 265, 270, 272, 275, 278, 281, 282, 285, 288, 290, 291, 300, 303, 307, 310, 314, 320, 324, 330, 337, 342, 346, 352, 358, 364, 368, 375, 378, 389, 391, 392, 394, 414, 506, 524, 600, 625, 793, 970, 992, 994, 1062, 1192, 1205, 1206, 1207, 1209, 1210, 1211, 1212], "10000": [7, 45, 243, 262, 265, 278, 310, 352, 1087, 1103], "19950631168807583848837421626835850838234968318861924548520089498529438830221946631919961684036194597899331129423209124271556491349413781117593785932096323957855730046793794526765246551266059895520550086918193311542508608460618104685509074866089624888090489894838009253941633257850621568309473902556912388065225096643874441046759871626985453222868538161694315775629640762836880760732228535091641476183956381458969463899410840960536267821064621427333394036525565649530603142680234969400335934316651459297773279665775606172582031407994198179607378245683762280037302885487251900834464581454650557929601414833921615734588139257095379769119277800826957735674444123062018757836325502728323789270710373802866393031428133241401624195671690574061419654342324638801248856147305207431992259611796250130992860241708340807605932320161268492288496255841312844061536738951487114256315111089745514203313820202931640957596464756010405845841566072044962867016515061920631004186422275908670900574606417856951911456055068251250406007519842261898059237118054444788072906395242548339221982707404473162376760846613033778706039803413197133493654622700563169937455508241780972810983291314403571877524768509857276937926433221599399876886660808368837838027643282775172273657572744784112294389733810861607423253291974813120197604178281965697475898164531258434135959862784130128185406283476649088690521047580882615823961985770122407044330583075869039319604603404973156583208672105913300903752823415539745394397715257455290510212310947321610753474825740775273986348298498340756937955646638621874569499279016572103701364433135817214311791398222983845847334440270964182851005072927748364550578634501100852987812389473928699540834346158807043959118985815145779177143619698728131459483783202081474982171858011389071228250905826817436220577475921417653715687725614904582904992461028630081535583308130101987675856234343538955409175623400844887526162643568648833519463720377293240094456246923254350400678027273837755376406726898636241037491410966718557050759098100246789880178271925953381282421954028302759408448955014676668389697996886241636313376393903373455801407636741877711055384225739499110186468219696581651485130494222369947714763069155468217682876200362777257723781365331611196811280792669481887201298643660768551639860534602297871557517947385246369446923087894265948217008051120322365496288169035739121368338393591756418733850510970271613915439590991598154654417336311656936031122249937969999226781732358023111862644575299135758175008199839236284615249881088960232244362173771618086357015468484058622329792853875623486556440536962622018963571028812361567512543338303270029097668650568557157505516727518899194129711337690149916181315171544007728650573189557450920330185304847113818315407324053319038462084036421763703911550639789000742853672196280903477974533320468368795868580237952218629120080742819551317948157624448298518461509704888027274721574688131594750409732115080498190455803416826949787141316063210686391511681774304792596709376": [7, 243, 262, 278, 310, 352], "hallo": [7, 223, 233, 238, 241, 243, 246, 254, 262, 265, 272, 275, 278, 282, 285, 291, 303, 307, 310, 330, 342, 346, 352, 358, 392, 440, 652, 838, 918, 967, 995, 1008, 1011, 1017], "39": [7, 171, 187, 200, 209, 211, 212, 223, 228, 233, 238, 240, 242, 243, 246, 249, 254, 255, 259, 262, 265, 270, 272, 275, 278, 282, 285, 288, 291, 300, 303, 307, 310, 314, 320, 324, 330, 335, 338, 342, 346, 352, 358, 364, 368, 389, 390, 391, 392, 393, 394, 563, 717, 765, 933, 1062, 1192, 1193], "30": [7, 23, 62, 99, 108, 111, 125, 126, 186, 187, 192, 200, 202, 212, 222, 223, 228, 233, 238, 240, 242, 243, 246, 249, 254, 255, 259, 262, 265, 270, 272, 275, 278, 282, 285, 288, 291, 300, 303, 310, 314, 320, 324, 327, 330, 342, 346, 352, 358, 364, 368, 389, 391, 392, 394, 414, 427, 441, 506, 588, 592, 627, 628, 633, 634, 636, 637, 754, 755, 802, 803, 804, 825, 827, 944, 970, 976, 992, 993, 994, 1050, 1077, 1089, 1090, 1143, 1192, 1196, 1204, 1221, 1230], "eingebettet": [7, 243], "34": [7, 152, 200, 201, 209, 212, 223, 228, 233, 238, 240, 242, 243, 246, 249, 250, 254, 255, 259, 262, 263, 265, 270, 272, 275, 278, 282, 285, 288, 290, 291, 300, 303, 307, 308, 310, 314, 320, 324, 330, 335, 338, 342, 346, 352, 358, 364, 368, 391, 392, 393, 394, 549, 563, 567, 568, 569, 570, 582, 583, 584, 682, 683, 684, 685, 686, 691, 723, 945, 948, 970, 1099, 1118, 1192, 1193], "31": [7, 108, 126, 193, 195, 200, 212, 223, 228, 233, 238, 240, 243, 246, 249, 254, 255, 259, 262, 265, 270, 272, 273, 275, 278, 282, 285, 288, 291, 300, 303, 307, 310, 314, 320, 324, 330, 342, 346, 352, 358, 364, 391, 392, 414, 478, 506, 538, 780, 970, 1028, 1060, 1078, 1112, 1145, 1192], "eingenbettet": [7, 243], "mississippi": [7, 243, 246, 255, 259, 262, 270, 272, 278, 282, 288, 291, 303, 310, 324, 330, 342, 346, 352, 358, 364, 368, 519, 722], "count": [7, 29, 62, 89, 91, 124, 131, 190, 202, 205, 243, 246, 247, 250, 255, 259, 262, 265, 270, 272, 275, 278, 282, 288, 291, 303, 309, 310, 324, 330, 342, 346, 352, 358, 364, 368, 426, 427, 428, 429, 442, 498, 574, 600, 628, 743, 793, 818, 840, 843, 846, 847, 848, 849, 851, 854, 857, 858, 864, 868, 878, 891, 896, 902, 905, 908, 918, 928, 948, 970, 981, 984, 1014, 1017, 1024, 1035, 1056, 1133, 1147, 1157, 1160, 1168, 1171, 1186, 1193, 1201, 1241], "ss": [7, 32, 243, 246, 255, 259, 262, 270, 272, 278, 282, 288, 291, 303, 310, 324, 330, 342, 346, 352, 358, 364, 368, 519, 722], "35": [7, 186, 200, 212, 223, 230, 233, 238, 240, 243, 246, 249, 254, 255, 259, 262, 265, 270, 272, 275, 278, 282, 285, 288, 291, 300, 303, 307, 310, 314, 320, 324, 330, 342, 346, 352, 358, 364, 368, 389, 391, 392, 393, 563, 592, 736, 738, 754, 1192], "find": [7, 17, 42, 44, 47, 48, 53, 126, 157, 189, 190, 191, 192, 196, 201, 206, 218, 219, 220, 230, 232, 243, 246, 250, 252, 255, 259, 263, 265, 268, 270, 272, 275, 278, 282, 285, 288, 291, 296, 303, 305, 308, 310, 315, 317, 324, 326, 327, 330, 332, 342, 344, 346, 348, 352, 354, 358, 364, 368, 370, 371, 376, 377, 379, 382, 391, 397, 402, 485, 491, 498, 513, 516, 517, 519, 523, 533, 540, 545, 552, 573, 578, 579, 582, 583, 584, 585, 590, 607, 608, 637, 642, 645, 659, 661, 663, 664, 685, 687, 698, 701, 703, 706, 710, 726, 736, 738, 740, 743, 786, 790, 836, 840, 853, 892, 913, 914, 915, 917, 923, 927, 928, 930, 931, 932, 934, 948, 975, 978, 981, 984, 993, 994, 1005, 1033, 1062, 1065, 1080, 1110, 1114, 1125, 1133, 1194, 1231, 1243, 1245, 1246, 1247, 1252], "36": [7, 116, 122, 186, 191, 195, 200, 212, 223, 233, 238, 240, 243, 246, 249, 254, 255, 259, 262, 265, 270, 272, 275, 278, 282, 285, 291, 300, 303, 307, 310, 314, 320, 324, 330, 342, 346, 352, 358, 364, 368, 389, 392, 397, 402, 516, 543, 549, 567, 591, 594, 595, 596, 600, 601, 602, 753, 802, 803, 804, 820, 838, 970, 992, 1099, 1176], "37": [7, 132, 134, 200, 211, 212, 223, 224, 228, 233, 238, 240, 243, 246, 249, 251, 254, 255, 259, 262, 265, 270, 272, 275, 278, 282, 285, 288, 291, 300, 303, 307, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 391, 392, 393, 567, 819, 824, 826, 828, 830, 1192, 1205, 1206, 1207, 1209, 1210, 1211, 1212], "capit": [7, 38, 243, 246, 255, 262, 272, 278, 303, 324, 391, 948, 1145], "zeil": [7, 209, 223, 233, 240, 243, 246, 249, 255, 259, 278, 282, 300, 303, 342, 346, 358, 392], "nnoch": [7, 240, 243, 259], "some": [7, 17, 21, 108, 177, 189, 190, 191, 192, 194, 197, 200, 201, 205, 211, 214, 219, 222, 226, 229, 231, 242, 243, 249, 251, 259, 265, 266, 271, 277, 278, 282, 294, 295, 297, 303, 306, 309, 310, 312, 316, 318, 319, 326, 344, 345, 351, 352, 354, 370, 373, 374, 415, 439, 473, 484, 500, 518, 526, 543, 549, 620, 645, 647, 667, 685, 698, 701, 726, 756, 765, 793, 801, 803, 813, 816, 839, 840, 846, 851, 860, 875, 883, 887, 904, 906, 925, 930, 985, 993, 994, 1015, 1018, 1044, 1046, 1048, 1056, 1086, 1088, 1115, 1131, 1137, 1184, 1202, 1221, 1243, 1244], "name": [7, 23, 39, 40, 57, 112, 113, 114, 115, 116, 124, 126, 131, 144, 159, 168, 171, 182, 186, 189, 190, 192, 193, 194, 197, 204, 205, 210, 212, 214, 219, 222, 223, 226, 229, 231, 233, 238, 243, 246, 249, 250, 261, 263, 264, 265, 268, 270, 272, 275, 280, 282, 285, 300, 303, 307, 308, 310, 314, 324, 346, 352, 358, 364, 368, 376, 379, 382, 388, 391, 392, 393, 408, 430, 444, 450, 458, 459, 465, 466, 472, 476, 479, 483, 484, 487, 489, 492, 496, 498, 500, 501, 502, 504, 506, 508, 509, 510, 511, 512, 516, 518, 522, 528, 531, 532, 534, 535, 537, 538, 539, 540, 547, 549, 564, 568, 569, 570, 575, 578, 582, 583, 584, 599, 601, 604, 609, 614, 621, 636, 646, 656, 658, 660, 724, 726, 738, 744, 745, 755, 756, 765, 783, 785, 789, 795, 803, 837, 838, 839, 840, 843, 851, 855, 865, 869, 881, 883, 907, 913, 914, 915, 918, 927, 928, 930, 933, 934, 948, 954, 970, 976, 981, 988, 992, 993, 994, 996, 997, 1004, 1005, 1008, 1010, 1014, 1022, 1055, 1059, 1062, 1063, 1064, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1085, 1087, 1094, 1099, 1101, 1104, 1108, 1109, 1111, 1112, 1116, 1117, 1125, 1127, 1129, 1131, 1132, 1133, 1138, 1143, 1145, 1150, 1166, 1167, 1177, 1183, 1185, 1193, 1196, 1199, 1200, 1201, 1206, 1207, 1209, 1210, 1211, 1212, 1221, 1228, 1230, 1232, 1240, 1244, 1246, 1247], "directori": [7, 17, 44, 60, 99, 101, 102, 104, 111, 126, 139, 143, 148, 149, 152, 186, 189, 190, 191, 192, 201, 205, 216, 221, 224, 230, 242, 243, 249, 250, 251, 252, 259, 262, 263, 265, 275, 278, 290, 295, 296, 297, 305, 306, 318, 319, 323, 326, 327, 332, 340, 344, 348, 358, 369, 370, 371, 374, 376, 379, 382, 383, 397, 402, 408, 410, 411, 464, 498, 500, 505, 507, 508, 510, 511, 513, 514, 517, 523, 524, 528, 531, 533, 537, 540, 541, 544, 546, 548, 562, 563, 585, 588, 590, 591, 592, 593, 594, 595, 596, 597, 598, 600, 601, 602, 621, 624, 627, 630, 633, 636, 639, 642, 734, 816, 839, 840, 865, 887, 889, 909, 913, 916, 917, 918, 920, 921, 922, 923, 925, 927, 928, 930, 931, 932, 934, 935, 936, 937, 942, 943, 945, 947, 948, 953, 954, 955, 956, 957, 958, 960, 961, 962, 963, 964, 965, 968, 972, 977, 984, 992, 993, 994, 996, 1001, 1005, 1007, 1010, 1013, 1020, 1021, 1022, 1023, 1025, 1028, 1030, 1039, 1042, 1045, 1047, 1051, 1054, 1058, 1062, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1077, 1078, 1079, 1080, 1086, 1094, 1114, 1166, 1175, 1176, 1223, 1227, 1232, 1243, 1247, 1256], "multilin": [7, 233, 243, 258, 261, 265, 270, 278, 282, 342, 353, 397, 465, 1087, 1115], "jetzt": [7, 198, 209, 213, 223, 233, 240, 243, 253, 282, 338, 358, 368], "l": [7, 32, 38, 60, 62, 66, 101, 126, 148, 193, 197, 201, 209, 210, 212, 213, 218, 223, 228, 233, 238, 240, 241, 242, 243, 246, 249, 254, 255, 259, 262, 265, 268, 270, 272, 275, 278, 282, 285, 288, 291, 296, 300, 303, 305, 306, 310, 320, 324, 326, 327, 330, 342, 346, 352, 355, 358, 364, 368, 370, 371, 389, 391, 392, 397, 402, 470, 471, 478, 482, 494, 499, 500, 506, 510, 538, 539, 552, 564, 590, 637, 642, 661, 691, 743, 816, 838, 839, 840, 851, 865, 887, 888, 914, 915, 916, 917, 918, 920, 921, 922, 925, 927, 930, 931, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 952, 955, 956, 959, 960, 962, 963, 964, 966, 967, 968, 972, 977, 981, 984, 985, 987, 992, 993, 994, 995, 996, 1003, 1005, 1010, 1011, 1013, 1015, 1016, 1018, 1019, 1020, 1023, 1025, 1028, 1031, 1039, 1042, 1045, 1046, 1047, 1056, 1060, 1062, 1063, 1064, 1065, 1075, 1077, 1078, 1083, 1085, 1106, 1114, 1116, 1119, 1120, 1124, 1126, 1134, 1143, 1170, 1230, 1247], "44": [7, 186, 193, 200, 212, 223, 233, 238, 240, 243, 246, 249, 254, 255, 259, 262, 265, 270, 272, 275, 278, 282, 285, 288, 291, 300, 303, 307, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 389, 392, 825, 994, 1216], "45": [7, 29, 51, 53, 55, 56, 74, 75, 76, 89, 92, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 143, 171, 179, 182, 195, 198, 200, 212, 222, 223, 226, 228, 233, 238, 240, 243, 246, 247, 249, 255, 259, 262, 265, 270, 272, 278, 282, 285, 288, 291, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 383, 384, 385, 386, 387, 388, 391, 392, 397, 402, 435, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 517, 523, 533, 536, 548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 607, 609, 642, 650, 665, 668, 671, 682, 683, 684, 685, 686, 687, 691, 693, 697, 706, 709, 710, 715, 724, 725, 726, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 745, 752, 759, 770, 783, 784, 794, 799, 808, 816, 821, 825, 837, 838, 839, 840, 844, 847, 849, 852, 854, 857, 859, 863, 864, 866, 868, 870, 872, 878, 880, 882, 884, 891, 893, 896, 898, 902, 905, 908, 910, 914, 915, 916, 917, 920, 921, 922, 929, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 968, 978, 984, 991, 996, 997, 998, 999, 1000, 1007, 1013, 1015, 1023, 1025, 1027, 1039, 1042, 1045, 1047, 1064, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1088, 1095, 1096, 1097, 1098, 1102, 1110, 1121, 1130, 1141, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1160, 1161, 1162, 1163, 1164, 1165, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1188, 1189, 1190, 1192, 1194, 1198, 1201, 1202, 1204, 1208, 1215, 1218, 1220, 1225, 1226], "46": [7, 200, 223, 228, 233, 238, 240, 243, 246, 249, 255, 259, 262, 265, 270, 272, 275, 278, 282, 285, 288, 291, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 389, 392, 823, 970, 994, 1010, 1192, 1193], "47": [7, 193, 195, 200, 223, 228, 233, 238, 240, 243, 246, 249, 255, 259, 262, 265, 270, 272, 278, 282, 285, 288, 291, 300, 303, 307, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 389, 392, 393, 793, 981, 1046, 1062, 1075, 1132, 1192], "try": [7, 27, 126, 131, 139, 152, 155, 186, 189, 190, 192, 197, 209, 212, 222, 223, 226, 230, 233, 238, 240, 243, 246, 249, 252, 255, 257, 259, 262, 265, 268, 270, 272, 275, 278, 282, 285, 287, 288, 290, 291, 294, 295, 297, 299, 300, 303, 306, 307, 310, 317, 318, 319, 320, 323, 324, 330, 341, 342, 346, 352, 354, 358, 364, 368, 373, 380, 383, 390, 391, 392, 393, 397, 401, 402, 412, 490, 494, 513, 518, 524, 532, 544, 551, 568, 573, 582, 590, 598, 607, 609, 642, 650, 668, 671, 687, 693, 697, 702, 706, 709, 710, 722, 725, 726, 728, 730, 732, 735, 736, 737, 738, 739, 740, 771, 779, 783, 793, 799, 803, 817, 820, 834, 836, 838, 839, 840, 892, 895, 993, 1014, 1059, 1084, 1091, 1145, 1188, 1194, 1205, 1206, 1210, 1223], "except": [7, 21, 29, 43, 46, 60, 62, 76, 112, 113, 155, 159, 171, 191, 195, 201, 209, 210, 217, 222, 223, 226, 227, 229, 231, 233, 238, 240, 243, 246, 250, 251, 252, 255, 257, 259, 262, 263, 266, 267, 270, 272, 276, 277, 280, 282, 285, 287, 288, 292, 300, 303, 307, 310, 318, 319, 320, 323, 324, 330, 340, 341, 342, 344, 345, 346, 352, 358, 364, 368, 382, 384, 390, 391, 392, 393, 397, 402, 410, 411, 430, 482, 485, 531, 544, 545, 552, 579, 590, 607, 609, 642, 671, 687, 693, 697, 706, 709, 710, 714, 725, 726, 728, 735, 736, 738, 739, 740, 744, 747, 771, 779, 800, 802, 803, 814, 820, 840, 855, 887, 920, 921, 926, 992, 1046, 1060, 1084, 1088, 1091, 1094, 1097, 1100, 1110, 1112, 1115, 1133, 1135, 1140, 1186, 1188, 1205, 1210, 1223, 1233, 1240], "index": [7, 13, 23, 29, 39, 51, 53, 92, 112, 113, 186, 187, 196, 209, 211, 216, 221, 223, 224, 226, 227, 229, 231, 235, 236, 238, 241, 243, 246, 247, 249, 250, 252, 255, 257, 260, 262, 263, 265, 266, 268, 269, 271, 272, 273, 276, 278, 279, 281, 283, 284, 285, 287, 288, 290, 299, 300, 302, 303, 308, 309, 310, 312, 314, 316, 318, 319, 322, 323, 324, 328, 329, 331, 334, 337, 340, 341, 342, 344, 345, 346, 350, 351, 352, 356, 357, 358, 362, 363, 364, 366, 367, 368, 397, 404, 428, 444, 470, 498, 506, 517, 621, 624, 627, 630, 633, 636, 637, 639, 677, 678, 680, 685, 724, 765, 793, 805, 820, 840, 883, 1051, 1054, 1058, 1110, 1111, 1123, 1126, 1133, 1139, 1141, 1142, 1143, 1145, 1147, 1160, 1166, 1171, 1186, 1188, 1189, 1190, 1192, 1193, 1194, 1202, 1204, 1206, 1208, 1209, 1211, 1215, 1225, 1227, 1232], "out": [7, 31, 44, 45, 50, 55, 62, 77, 87, 108, 116, 122, 124, 126, 128, 131, 139, 143, 176, 182, 183, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 200, 201, 205, 210, 211, 218, 219, 222, 226, 229, 230, 238, 243, 246, 251, 259, 265, 266, 268, 275, 278, 282, 286, 315, 341, 342, 364, 368, 372, 374, 383, 397, 403, 408, 419, 440, 458, 464, 465, 473, 484, 491, 498, 499, 500, 504, 506, 518, 522, 532, 534, 537, 539, 542, 544, 569, 570, 585, 588, 598, 614, 620, 637, 644, 646, 660, 675, 717, 720, 726, 756, 771, 790, 793, 806, 817, 836, 855, 856, 865, 887, 895, 900, 914, 915, 918, 923, 927, 930, 934, 944, 975, 981, 985, 992, 993, 994, 1011, 1012, 1028, 1046, 1049, 1059, 1060, 1062, 1075, 1080, 1087, 1091, 1131, 1132, 1139, 1166, 1169, 1196, 1201, 1203, 1209, 1211, 1212, 1216, 1222, 1241], "rang": [7, 29, 42, 62, 92, 110, 126, 127, 165, 197, 210, 211, 212, 217, 226, 229, 231, 234, 235, 238, 241, 243, 246, 247, 250, 257, 258, 260, 261, 263, 264, 265, 268, 269, 271, 273, 274, 277, 278, 283, 284, 286, 287, 289, 291, 293, 301, 302, 303, 309, 311, 312, 319, 320, 322, 323, 325, 328, 329, 331, 340, 342, 344, 345, 346, 350, 351, 352, 355, 356, 357, 359, 362, 363, 365, 366, 367, 369, 374, 380, 389, 443, 470, 486, 488, 554, 588, 591, 592, 596, 620, 636, 637, 673, 675, 678, 681, 783, 834, 837, 839, 840, 851, 985, 992, 1041, 1047, 1050, 1083, 1086, 1088, 1093, 1095, 1097, 1099, 1109, 1110, 1118, 1122, 1139, 1144, 1145, 1146, 1147, 1157, 1159, 1160, 1161, 1163, 1167, 1168, 1169, 1170, 1171, 1172, 1186, 1198, 1201, 1209, 1211, 1240, 1241, 1251], "48": [7, 193, 200, 209, 223, 228, 233, 238, 240, 243, 246, 249, 255, 262, 265, 270, 272, 275, 278, 282, 285, 288, 291, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 389, 392, 393, 992], "append": [7, 171, 209, 210, 211, 212, 213, 223, 228, 230, 233, 238, 240, 241, 242, 243, 246, 249, 254, 255, 256, 259, 262, 263, 265, 270, 272, 275, 278, 282, 285, 288, 291, 300, 303, 307, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 377, 392, 393, 506, 519, 528, 535, 619, 637, 679, 695, 707, 735, 848, 860, 875, 887, 914, 915, 930, 933, 954, 967, 992, 1001, 1014, 1050, 1083, 1089, 1090, 1103, 1119, 1124, 1127, 1129, 1134, 1137, 1138, 1165, 1213, 1216], "one": [7, 21, 27, 32, 40, 44, 45, 50, 61, 62, 63, 65, 82, 86, 87, 108, 112, 113, 124, 126, 127, 130, 131, 135, 139, 143, 144, 159, 168, 174, 178, 180, 184, 189, 190, 191, 192, 193, 194, 196, 197, 200, 201, 205, 210, 211, 212, 214, 219, 222, 223, 226, 228, 230, 233, 238, 240, 241, 242, 243, 246, 249, 251, 252, 259, 262, 265, 270, 272, 273, 275, 276, 278, 281, 282, 285, 288, 290, 300, 303, 306, 309, 310, 312, 314, 316, 320, 324, 329, 330, 332, 341, 346, 348, 352, 358, 364, 368, 372, 382, 383, 388, 389, 394, 397, 403, 415, 420, 427, 438, 443, 445, 453, 458, 460, 461, 465, 468, 470, 475, 478, 486, 487, 488, 490, 494, 498, 500, 506, 508, 512, 516, 520, 522, 524, 530, 531, 534, 535, 537, 540, 542, 543, 544, 549, 551, 552, 554, 555, 563, 568, 570, 588, 591, 593, 594, 598, 599, 601, 620, 631, 637, 648, 649, 657, 658, 660, 661, 662, 663, 664, 675, 676, 684, 695, 698, 702, 717, 724, 726, 742, 743, 746, 747, 748, 751, 760, 771, 790, 792, 793, 801, 803, 804, 805, 806, 807, 813, 815, 817, 825, 838, 848, 855, 862, 865, 875, 881, 887, 895, 903, 907, 912, 913, 914, 920, 921, 930, 932, 933, 948, 967, 981, 985, 987, 988, 989, 992, 993, 994, 995, 997, 1001, 1004, 1005, 1011, 1012, 1014, 1015, 1018, 1021, 1022, 1024, 1030, 1031, 1032, 1033, 1035, 1038, 1041, 1044, 1046, 1047, 1048, 1055, 1059, 1062, 1065, 1068, 1069, 1075, 1078, 1079, 1081, 1082, 1084, 1086, 1087, 1089, 1095, 1097, 1098, 1100, 1111, 1112, 1115, 1116, 1117, 1119, 1123, 1124, 1126, 1128, 1129, 1133, 1135, 1137, 1138, 1146, 1156, 1159, 1166, 1167, 1192, 1193, 1194, 1195, 1197, 1201, 1202, 1204, 1206, 1212, 1213, 1214, 1217, 1221, 1223, 1228, 1230, 1243, 1246], "49": [7, 200, 209, 223, 228, 233, 238, 240, 243, 246, 249, 255, 259, 262, 265, 270, 272, 278, 282, 285, 288, 291, 300, 303, 307, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 389, 392, 393, 786, 933, 1075, 1089], "extend": [7, 191, 192, 223, 240, 241, 243, 248, 254, 259, 262, 265, 270, 272, 278, 282, 285, 288, 300, 303, 310, 316, 320, 324, 330, 352, 358, 364, 368, 392, 547, 554, 563, 588, 661, 663, 664, 716, 848, 919, 1119, 1124, 1134, 1193, 1205], "slice": [7, 29, 92, 211, 213, 222, 226, 227, 229, 231, 236, 239, 240, 243, 250, 262, 263, 265, 266, 269, 273, 274, 280, 281, 283, 284, 285, 287, 299, 302, 304, 309, 312, 319, 322, 323, 325, 328, 329, 331, 340, 341, 344, 345, 350, 351, 356, 357, 362, 363, 366, 367, 840, 885, 1047, 1110, 1123, 1127, 1147, 1160, 1171, 1186, 1202, 1206, 1208, 1210], "inclus": [7, 229, 243, 270, 282, 464, 677, 1149, 1209], "exclus": [7, 217, 243, 265, 282, 319, 446, 677, 813, 1014, 1047, 1097, 1133, 1137, 1149, 1209], "51": [7, 200, 223, 228, 233, 238, 240, 243, 246, 249, 255, 259, 262, 265, 270, 272, 278, 282, 285, 288, 291, 300, 303, 307, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 389, 392, 699, 700, 701, 702, 970, 972, 1192], "l\u00f6schen": [7, 233, 239, 243, 397], "52": [7, 200, 209, 223, 228, 233, 238, 240, 243, 246, 249, 255, 259, 262, 265, 270, 272, 278, 282, 285, 288, 291, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 392, 393, 994, 1192], "del": [7, 38, 209, 212, 213, 223, 238, 240, 243, 246, 254, 259, 262, 265, 270, 272, 278, 282, 285, 288, 291, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 390, 392, 1094, 1119, 1135], "53": [7, 193, 223, 228, 233, 238, 240, 243, 246, 249, 255, 259, 262, 265, 270, 272, 278, 282, 285, 288, 291, 300, 303, 307, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 389, 392, 404, 568, 569, 796, 867, 970, 992, 1062, 1075, 1086, 1192, 1193], "iter": [7, 24, 29, 62, 65, 67, 131, 132, 210, 213, 217, 222, 226, 227, 229, 231, 234, 235, 239, 241, 243, 247, 248, 250, 251, 253, 257, 258, 260, 261, 263, 264, 266, 267, 268, 269, 271, 273, 274, 277, 280, 282, 284, 285, 289, 301, 304, 310, 318, 319, 321, 325, 330, 340, 343, 344, 345, 347, 353, 359, 364, 369, 382, 397, 403, 455, 457, 470, 506, 551, 601, 620, 637, 679, 680, 681, 685, 688, 695, 698, 700, 702, 707, 758, 765, 774, 795, 834, 840, 1011, 1084, 1088, 1090, 1099, 1112, 1122, 1136, 1137, 1144, 1145, 1146, 1147, 1160, 1171, 1183, 1186, 1188, 1198, 1200, 1210, 1213, 1251], "mittel": [7, 11, 23, 213, 223, 225, 241, 243, 248, 415, 1235, 1238, 1247, 1255], "54": [7, 200, 209, 223, 228, 233, 238, 240, 243, 246, 249, 255, 259, 262, 265, 270, 272, 275, 278, 282, 285, 288, 291, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 389, 391, 392, 404, 513, 699, 700, 701, 702, 803, 877, 970, 992, 1075, 1192], "element": [7, 8, 35, 38, 108, 111, 112, 113, 126, 210, 212, 213, 223, 228, 229, 234, 235, 238, 240, 241, 243, 244, 246, 249, 253, 254, 255, 259, 262, 263, 265, 269, 271, 272, 278, 281, 282, 285, 289, 310, 314, 317, 320, 329, 342, 391, 392, 428, 455, 470, 478, 482, 485, 519, 590, 604, 607, 609, 618, 637, 642, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 688, 692, 695, 699, 702, 724, 743, 746, 748, 765, 779, 793, 795, 840, 848, 1056, 1089, 1091, 1108, 1119, 1124, 1125, 1134, 1136, 1170, 1196, 1213, 1221, 1244, 1251], "55": [7, 200, 209, 223, 228, 233, 238, 240, 243, 246, 249, 255, 259, 262, 265, 270, 272, 278, 282, 285, 288, 291, 300, 303, 307, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 389, 391, 392, 393, 404, 481, 506, 733, 734, 735, 736, 738, 838, 1062, 1145], "def": [7, 62, 65, 209, 210, 213, 223, 228, 229, 233, 238, 240, 241, 243, 246, 249, 250, 255, 256, 259, 262, 263, 265, 270, 272, 275, 278, 282, 285, 288, 291, 300, 303, 308, 310, 320, 324, 330, 335, 338, 342, 346, 352, 358, 364, 368, 392, 393, 506, 785, 1040, 1084, 1085, 1086, 1089, 1090, 1091, 1094, 1095, 1097, 1099, 1101, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1115, 1118, 1128, 1129, 1134, 1138, 1170, 1176, 1183, 1184, 1185, 1204, 1210, 1212, 1221, 1222], "is_integ": [7, 243, 300, 364], "elem": [7, 209, 213, 223, 228, 233, 238, 240, 243, 255, 262, 265, 270, 275, 300, 303, 310, 320, 324, 330, 346, 352, 358, 364, 368, 604, 701, 703, 751, 771, 773, 775, 778, 792, 793, 795, 815, 1091, 1134, 1138], "type": [7, 29, 50, 80, 85, 102, 112, 113, 144, 156, 171, 182, 183, 186, 189, 190, 193, 195, 197, 205, 209, 210, 213, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 239, 240, 242, 243, 246, 249, 250, 251, 254, 255, 259, 264, 267, 268, 270, 272, 277, 280, 282, 286, 288, 290, 291, 293, 301, 303, 306, 307, 310, 318, 319, 320, 323, 324, 330, 335, 339, 340, 341, 343, 344, 345, 346, 351, 352, 355, 358, 363, 365, 368, 371, 374, 380, 389, 390, 391, 392, 397, 399, 400, 408, 430, 441, 442, 449, 454, 459, 460, 464, 466, 470, 472, 473, 476, 479, 480, 481, 482, 483, 486, 488, 489, 491, 492, 496, 501, 502, 506, 507, 518, 519, 522, 524, 530, 542, 544, 553, 556, 564, 570, 600, 604, 625, 634, 644, 646, 652, 653, 657, 659, 660, 670, 678, 707, 713, 717, 720, 722, 724, 726, 727, 733, 745, 746, 751, 756, 757, 765, 771, 782, 783, 785, 790, 791, 792, 793, 802, 803, 805, 806, 807, 812, 823, 824, 826, 830, 831, 833, 835, 836, 837, 838, 839, 840, 843, 846, 848, 853, 856, 875, 887, 913, 917, 930, 933, 945, 948, 951, 962, 964, 965, 968, 976, 984, 985, 987, 992, 996, 1001, 1010, 1011, 1014, 1017, 1018, 1019, 1020, 1021, 1031, 1043, 1052, 1055, 1059, 1060, 1062, 1080, 1082, 1085, 1088, 1091, 1095, 1100, 1101, 1102, 1109, 1113, 1115, 1117, 1118, 1119, 1123, 1125, 1126, 1127, 1132, 1133, 1135, 1137, 1139, 1153, 1164, 1165, 1183, 1186, 1188, 1193, 1197, 1201, 1206, 1207, 1209, 1216, 1221, 1223, 1241, 1242], "int": [7, 21, 46, 109, 112, 113, 116, 119, 122, 123, 139, 192, 201, 210, 212, 223, 229, 233, 238, 240, 241, 243, 246, 250, 251, 256, 259, 262, 263, 265, 268, 270, 272, 275, 278, 282, 285, 288, 291, 300, 303, 309, 310, 312, 320, 324, 330, 338, 342, 346, 352, 357, 358, 364, 368, 390, 392, 393, 419, 420, 422, 424, 426, 428, 429, 430, 432, 433, 434, 438, 439, 440, 442, 443, 444, 448, 458, 460, 461, 462, 463, 464, 465, 467, 468, 470, 471, 473, 474, 475, 478, 480, 481, 485, 486, 487, 488, 489, 490, 494, 495, 549, 556, 563, 564, 568, 569, 570, 571, 574, 577, 578, 580, 582, 583, 584, 586, 588, 596, 598, 600, 602, 603, 604, 605, 606, 608, 618, 620, 625, 628, 634, 637, 644, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 667, 669, 670, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 688, 689, 690, 691, 695, 698, 699, 700, 701, 702, 703, 707, 709, 713, 714, 717, 719, 720, 722, 723, 724, 726, 727, 732, 733, 734, 735, 736, 737, 738, 739, 743, 744, 746, 747, 750, 756, 757, 758, 760, 761, 762, 763, 765, 766, 767, 768, 769, 771, 772, 773, 775, 776, 777, 778, 779, 780, 781, 785, 786, 787, 788, 790, 791, 792, 793, 795, 797, 804, 805, 806, 807, 810, 812, 815, 817, 819, 820, 824, 826, 828, 830, 838, 843, 846, 851, 853, 858, 865, 867, 869, 871, 875, 879, 881, 883, 892, 897, 904, 925, 945, 988, 992, 1006, 1008, 1010, 1011, 1012, 1014, 1017, 1018, 1019, 1020, 1021, 1024, 1026, 1029, 1031, 1033, 1035, 1037, 1043, 1046, 1049, 1050, 1052, 1055, 1056, 1059, 1060, 1062, 1065, 1075, 1079, 1081, 1106, 1117, 1118, 1126, 1127, 1129, 1132, 1138, 1139, 1155, 1178, 1180, 1183, 1184, 1228, 1233], "return": [7, 21, 27, 62, 109, 116, 119, 122, 123, 186, 189, 191, 192, 193, 197, 201, 209, 210, 213, 223, 227, 229, 231, 233, 238, 240, 241, 243, 246, 249, 250, 251, 255, 256, 259, 262, 263, 265, 268, 270, 272, 275, 278, 282, 285, 288, 292, 293, 300, 303, 308, 310, 314, 320, 324, 335, 338, 341, 342, 346, 352, 359, 364, 368, 392, 393, 419, 420, 422, 426, 428, 430, 439, 448, 458, 464, 470, 471, 473, 480, 481, 484, 485, 487, 488, 490, 494, 506, 513, 519, 538, 542, 543, 544, 545, 549, 551, 554, 563, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 588, 595, 596, 600, 601, 604, 620, 628, 634, 637, 644, 645, 646, 648, 649, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 667, 669, 670, 672, 673, 674, 675, 676, 677, 679, 680, 681, 682, 683, 685, 686, 689, 690, 691, 695, 698, 699, 700, 701, 702, 703, 709, 713, 714, 717, 719, 720, 726, 727, 731, 732, 733, 734, 735, 736, 737, 738, 739, 743, 748, 750, 751, 758, 760, 761, 762, 763, 765, 766, 767, 768, 769, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 785, 786, 787, 788, 789, 790, 793, 795, 800, 801, 803, 804, 805, 806, 807, 813, 815, 817, 824, 826, 828, 829, 830, 831, 834, 835, 836, 838, 843, 850, 858, 865, 869, 877, 879, 901, 903, 907, 925, 945, 992, 1006, 1008, 1010, 1011, 1012, 1014, 1015, 1017, 1018, 1019, 1020, 1021, 1026, 1029, 1030, 1031, 1041, 1043, 1046, 1052, 1055, 1056, 1059, 1060, 1062, 1065, 1075, 1079, 1080, 1081, 1082, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1099, 1103, 1104, 1106, 1107, 1108, 1129, 1131, 1133, 1134, 1135, 1138, 1145, 1161, 1163, 1167, 1170, 1171, 1178, 1180, 1183, 1207, 1209, 1210, 1212, 1221, 1228, 1233], "els": [7, 21, 43, 50, 62, 112, 113, 121, 127, 143, 159, 190, 192, 193, 196, 205, 210, 213, 223, 226, 229, 233, 241, 243, 246, 249, 250, 251, 255, 259, 262, 263, 266, 267, 268, 270, 274, 275, 280, 282, 285, 289, 291, 300, 302, 303, 308, 310, 320, 324, 330, 342, 352, 359, 364, 369, 382, 393, 404, 426, 432, 443, 448, 459, 465, 466, 472, 476, 479, 483, 484, 492, 496, 501, 502, 506, 508, 509, 512, 515, 522, 524, 549, 573, 580, 583, 637, 660, 684, 685, 695, 702, 716, 722, 737, 745, 750, 783, 804, 806, 813, 817, 837, 839, 840, 869, 879, 903, 914, 915, 920, 921, 940, 942, 945, 951, 972, 993, 1006, 1009, 1014, 1040, 1041, 1043, 1046, 1048, 1087, 1094, 1106, 1107, 1110, 1121, 1129, 1135, 1210, 1240], "fals": [7, 46, 112, 113, 116, 120, 121, 123, 159, 193, 195, 209, 210, 223, 228, 233, 238, 240, 241, 243, 246, 249, 255, 259, 262, 263, 265, 270, 272, 275, 278, 282, 285, 288, 291, 300, 303, 307, 310, 314, 320, 324, 330, 335, 342, 346, 352, 358, 364, 368, 391, 406, 422, 426, 443, 480, 506, 524, 660, 685, 717, 724, 726, 748, 760, 813, 817, 820, 907, 920, 921, 948, 1040, 1041, 1046, 1048, 1068, 1069, 1084, 1099, 1103, 1106, 1119, 1120, 1122, 1123, 1127, 1206, 1207, 1210, 1212, 1228], "56": [7, 186, 200, 223, 228, 233, 238, 240, 243, 246, 249, 255, 259, 262, 265, 270, 272, 278, 282, 285, 288, 291, 300, 303, 307, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 389, 391, 392, 404, 443, 567, 655, 838, 967, 992, 994, 1192, 1205, 1206, 1207, 1209, 1210, 1211, 1212], "x": [7, 23, 32, 42, 60, 62, 116, 119, 120, 123, 195, 201, 209, 210, 211, 213, 223, 233, 238, 240, 242, 243, 246, 249, 259, 262, 265, 266, 270, 272, 278, 282, 285, 288, 290, 291, 300, 303, 307, 310, 319, 320, 324, 346, 352, 358, 364, 368, 393, 397, 439, 442, 443, 449, 464, 465, 467, 470, 473, 474, 478, 480, 488, 490, 494, 520, 526, 539, 588, 598, 635, 644, 645, 646, 647, 649, 651, 652, 653, 654, 655, 656, 658, 660, 662, 663, 670, 677, 685, 726, 746, 747, 748, 750, 765, 767, 768, 769, 786, 797, 806, 913, 914, 915, 918, 923, 925, 930, 933, 935, 936, 944, 945, 970, 973, 977, 979, 985, 992, 993, 994, 1010, 1020, 1026, 1028, 1029, 1037, 1041, 1062, 1063, 1064, 1065, 1071, 1075, 1077, 1078, 1083, 1084, 1112, 1114, 1120, 1128, 1129, 1131, 1132, 1133, 1136, 1137, 1142, 1166, 1193, 1210, 1221, 1222, 1228], "filter": [7, 29, 108, 111, 126, 207, 210, 243, 250, 263, 280, 303, 309, 312, 316, 317, 324, 341, 343, 346, 353, 358, 362, 366, 367, 520, 590, 607, 642, 801, 802, 840, 912, 932, 981, 1186, 1202, 1208, 1211, 1228], "57": [7, 186, 200, 223, 228, 233, 238, 240, 243, 246, 249, 255, 259, 262, 265, 270, 272, 278, 282, 285, 288, 291, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 389, 392, 393, 538, 540, 970, 992, 1005, 1063, 1064, 1192], "zero": [7, 32, 38, 186, 192, 208, 210, 211, 213, 223, 233, 241, 243, 246, 259, 265, 270, 272, 275, 278, 282, 285, 300, 324, 358, 364, 397, 419, 428, 446, 792, 802, 806, 846, 858, 873, 918, 948, 963, 970, 994, 1014, 1035, 1041, 1044, 1047, 1050, 1055, 1056, 1123], "two": [7, 12, 17, 29, 32, 34, 35, 36, 38, 42, 44, 54, 65, 71, 87, 108, 135, 178, 180, 183, 184, 189, 190, 191, 192, 205, 210, 211, 212, 218, 222, 223, 228, 233, 234, 236, 238, 240, 241, 243, 246, 247, 249, 251, 252, 253, 257, 259, 260, 263, 265, 268, 269, 270, 272, 273, 278, 279, 281, 282, 284, 286, 287, 288, 300, 302, 303, 306, 308, 309, 310, 318, 320, 322, 323, 324, 328, 329, 330, 334, 337, 346, 350, 351, 352, 356, 357, 358, 362, 363, 364, 366, 367, 368, 372, 383, 389, 397, 403, 406, 415, 416, 427, 434, 464, 470, 472, 473, 476, 478, 479, 482, 483, 485, 487, 490, 492, 496, 501, 502, 504, 505, 506, 510, 517, 518, 522, 531, 534, 552, 554, 564, 568, 569, 588, 598, 600, 620, 628, 631, 637, 653, 658, 660, 677, 700, 743, 744, 745, 746, 747, 783, 789, 792, 793, 795, 802, 805, 807, 837, 839, 840, 885, 887, 890, 953, 955, 975, 985, 987, 992, 993, 994, 1011, 1014, 1015, 1022, 1032, 1033, 1041, 1046, 1055, 1060, 1071, 1081, 1089, 1095, 1098, 1101, 1106, 1109, 1110, 1116, 1119, 1122, 1133, 1135, 1137, 1144, 1147, 1149, 1150, 1151, 1154, 1156, 1157, 1160, 1161, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1183, 1186, 1187, 1193, 1195, 1201, 1209, 1222, 1228, 1241, 1251, 1256], "58": [7, 193, 200, 223, 228, 233, 238, 240, 243, 246, 249, 255, 259, 262, 265, 270, 272, 278, 282, 285, 288, 291, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 392, 397, 402, 404, 506, 994, 1063, 1064, 1065, 1075, 1192, 1193], "59": [7, 200, 223, 228, 233, 238, 240, 243, 246, 249, 255, 259, 262, 265, 270, 272, 278, 282, 285, 288, 291, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 389, 392, 404, 1064, 1075, 1192], "three": [7, 12, 32, 36, 38, 43, 62, 112, 113, 131, 159, 191, 203, 206, 210, 211, 222, 223, 226, 227, 233, 238, 240, 241, 243, 249, 257, 259, 262, 265, 270, 272, 275, 278, 282, 285, 288, 300, 303, 308, 309, 310, 312, 318, 319, 320, 324, 329, 330, 342, 346, 352, 358, 364, 368, 372, 397, 415, 484, 522, 679, 724, 920, 921, 930, 933, 948, 985, 992, 994, 1014, 1046, 1055, 1091, 1101, 1119, 1123, 1133, 1135, 1137, 1150, 1156, 1187, 1188, 1242, 1256], "60": [7, 62, 108, 163, 166, 200, 223, 228, 233, 238, 240, 243, 246, 249, 255, 259, 262, 265, 270, 272, 278, 282, 285, 288, 290, 291, 300, 303, 307, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 391, 392, 568, 569, 570, 582, 583, 584, 591, 930, 992, 993, 994, 1065, 1089, 1192, 1193], "61": [7, 62, 163, 166, 200, 211, 223, 228, 233, 238, 240, 243, 246, 249, 255, 262, 265, 270, 272, 278, 282, 285, 291, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 389, 392, 397, 402, 1192, 1193], "62": [7, 200, 223, 228, 233, 238, 240, 243, 246, 249, 255, 259, 262, 265, 270, 272, 278, 282, 285, 288, 291, 300, 303, 307, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 392, 930, 1145, 1192], "63": [7, 200, 223, 228, 233, 238, 240, 243, 246, 249, 255, 262, 265, 270, 272, 278, 282, 285, 288, 291, 300, 303, 307, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 389, 392, 397, 402, 1145, 1192], "k": [7, 29, 192, 211, 213, 223, 226, 238, 240, 243, 246, 250, 251, 262, 265, 270, 272, 275, 278, 285, 288, 300, 303, 309, 310, 320, 330, 340, 342, 344, 346, 352, 358, 364, 368, 398, 399, 418, 566, 699, 743, 805, 824, 840, 948, 995, 1030, 1186, 1189, 1195, 1202, 1221], "v": [7, 20, 23, 31, 32, 65, 90, 124, 134, 168, 186, 190, 197, 211, 214, 217, 223, 227, 229, 231, 235, 237, 238, 241, 242, 243, 248, 250, 251, 252, 253, 259, 262, 263, 265, 266, 268, 269, 271, 277, 280, 281, 283, 286, 288, 292, 299, 300, 303, 306, 311, 319, 321, 325, 329, 330, 336, 342, 346, 352, 355, 358, 364, 368, 374, 380, 383, 397, 494, 529, 540, 543, 564, 590, 624, 642, 699, 719, 743, 747, 751, 756, 757, 758, 765, 766, 767, 768, 769, 774, 777, 778, 779, 785, 791, 792, 793, 816, 820, 823, 825, 836, 839, 840, 849, 854, 857, 859, 864, 868, 870, 874, 878, 879, 880, 882, 884, 887, 889, 891, 895, 896, 898, 902, 905, 908, 913, 917, 920, 921, 922, 925, 948, 950, 977, 984, 1007, 1013, 1015, 1023, 1025, 1039, 1042, 1045, 1047, 1055, 1056, 1062, 1106, 1129, 1223, 1224, 1236, 1238, 1255, 1257], "65": [7, 223, 228, 233, 238, 240, 243, 246, 249, 255, 259, 262, 265, 270, 272, 278, 282, 285, 288, 291, 300, 303, 307, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 389, 392, 733, 1050, 1192, 1193], "item": [7, 190, 210, 212, 223, 228, 233, 238, 240, 243, 246, 249, 250, 254, 255, 259, 262, 263, 265, 270, 272, 275, 278, 282, 285, 288, 290, 294, 295, 297, 300, 303, 308, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 391, 482, 486, 488, 519, 534, 726, 792, 837, 839, 840, 1055, 1056, 1091, 1092, 1093, 1099, 1125, 1132, 1135, 1137, 1176, 1221], "66": [7, 193, 200, 223, 228, 233, 238, 240, 243, 246, 249, 255, 262, 265, 270, 272, 278, 282, 285, 288, 291, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 392, 722, 1145, 1192, 1193], "": [7, 8, 14, 20, 23, 31, 35, 37, 38, 40, 43, 44, 45, 48, 55, 60, 61, 62, 63, 66, 67, 80, 91, 106, 110, 111, 124, 126, 131, 139, 143, 144, 152, 162, 171, 174, 176, 186, 187, 189, 191, 192, 193, 194, 195, 196, 197, 200, 201, 202, 207, 210, 211, 212, 214, 216, 217, 219, 220, 222, 223, 226, 228, 229, 233, 234, 238, 240, 241, 242, 243, 244, 246, 249, 251, 252, 255, 256, 259, 262, 263, 265, 266, 268, 269, 270, 272, 275, 276, 278, 282, 285, 288, 291, 294, 295, 297, 300, 303, 306, 307, 308, 309, 310, 312, 315, 316, 317, 318, 319, 320, 324, 327, 330, 332, 334, 337, 340, 341, 342, 344, 346, 348, 352, 354, 355, 357, 358, 364, 368, 372, 373, 380, 382, 383, 391, 392, 394, 397, 400, 401, 415, 417, 430, 432, 438, 443, 464, 465, 468, 477, 482, 484, 486, 487, 488, 489, 490, 494, 505, 506, 508, 509, 516, 518, 519, 522, 526, 534, 535, 537, 540, 542, 543, 544, 546, 547, 548, 549, 552, 553, 564, 566, 567, 569, 570, 574, 585, 587, 598, 599, 600, 601, 604, 610, 612, 613, 621, 624, 627, 628, 630, 633, 636, 639, 646, 648, 649, 652, 653, 656, 657, 659, 660, 669, 679, 689, 690, 700, 707, 709, 714, 716, 719, 720, 726, 727, 730, 734, 744, 745, 747, 749, 751, 754, 755, 756, 757, 760, 764, 765, 771, 780, 783, 785, 788, 792, 793, 795, 797, 801, 802, 803, 805, 807, 815, 817, 818, 819, 820, 824, 826, 828, 829, 830, 831, 836, 838, 839, 840, 846, 855, 858, 860, 865, 871, 873, 883, 892, 895, 907, 912, 913, 914, 915, 918, 919, 923, 925, 926, 930, 931, 932, 934, 936, 938, 940, 942, 944, 945, 946, 948, 950, 951, 967, 970, 971, 973, 974, 976, 977, 979, 980, 981, 985, 988, 992, 993, 994, 995, 996, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1014, 1015, 1017, 1018, 1019, 1020, 1021, 1022, 1024, 1026, 1028, 1029, 1031, 1032, 1033, 1037, 1038, 1041, 1043, 1046, 1047, 1048, 1050, 1051, 1052, 1054, 1056, 1058, 1059, 1060, 1065, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1084, 1085, 1086, 1089, 1090, 1092, 1093, 1094, 1098, 1099, 1106, 1110, 1111, 1112, 1115, 1119, 1120, 1126, 1129, 1132, 1133, 1136, 1137, 1140, 1145, 1150, 1157, 1168, 1175, 1176, 1177, 1179, 1187, 1194, 1196, 1197, 1200, 1201, 1204, 1211, 1212, 1213, 1214, 1215, 1216, 1221, 1222, 1227, 1230, 1232, 1233, 1236, 1241, 1243, 1246, 1259], "rot": [7, 243, 254], "gruen": [7, 243], "blau": [7, 243, 254], "67": [7, 200, 211, 223, 233, 238, 240, 243, 246, 249, 255, 262, 265, 270, 272, 278, 282, 285, 288, 291, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 392, 397, 402, 506, 591, 1050, 1132, 1145, 1192, 1193], "69": [7, 60, 195, 200, 223, 228, 233, 238, 240, 243, 246, 249, 255, 259, 262, 265, 270, 272, 278, 282, 285, 288, 291, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 392, 1192, 1193, 1212], "schwarz": [7, 243, 254], "70": [7, 60, 163, 166, 192, 200, 223, 228, 230, 233, 238, 240, 243, 246, 249, 255, 262, 265, 270, 272, 278, 282, 285, 288, 291, 300, 303, 307, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 392, 506, 591, 992, 993, 994, 1089, 1192, 1193, 1221], "add": [7, 23, 42, 44, 49, 124, 131, 133, 144, 147, 168, 170, 185, 186, 190, 191, 192, 196, 197, 201, 205, 210, 219, 222, 223, 226, 229, 238, 240, 241, 243, 246, 249, 251, 255, 259, 262, 263, 265, 270, 275, 278, 282, 285, 288, 294, 295, 300, 303, 306, 310, 314, 320, 324, 330, 335, 337, 342, 346, 352, 355, 358, 364, 368, 374, 376, 377, 379, 397, 403, 445, 446, 485, 486, 494, 508, 511, 514, 520, 528, 534, 539, 544, 546, 547, 563, 564, 568, 573, 574, 585, 593, 600, 602, 620, 634, 644, 657, 658, 660, 662, 732, 733, 734, 743, 751, 771, 782, 793, 801, 815, 817, 853, 855, 856, 860, 867, 875, 877, 887, 900, 903, 913, 987, 992, 993, 994, 1022, 1046, 1048, 1050, 1056, 1061, 1075, 1077, 1084, 1085, 1107, 1111, 1119, 1137, 1143, 1210, 1221, 1222, 1228], "71": [7, 163, 166, 200, 223, 228, 233, 238, 240, 243, 246, 249, 255, 262, 265, 270, 272, 278, 282, 285, 288, 291, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 392, 397, 402, 1063, 1064, 1192, 1193], "72": [7, 200, 223, 228, 233, 238, 240, 243, 246, 249, 255, 262, 265, 270, 272, 278, 282, 285, 288, 291, 300, 303, 307, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 389, 392, 397, 402, 652, 979, 1075, 1145, 1192, 1193], "remov": [7, 57, 101, 111, 126, 131, 132, 148, 196, 197, 210, 212, 223, 238, 243, 249, 255, 263, 265, 270, 272, 278, 282, 285, 289, 290, 296, 303, 305, 306, 320, 324, 326, 327, 330, 341, 342, 346, 352, 358, 368, 370, 371, 513, 514, 515, 516, 519, 524, 528, 535, 548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 598, 600, 607, 608, 609, 614, 618, 637, 642, 672, 678, 695, 729, 751, 804, 815, 816, 817, 835, 838, 839, 840, 848, 865, 875, 883, 906, 913, 914, 915, 916, 917, 920, 921, 922, 935, 936, 938, 940, 941, 942, 943, 945, 946, 952, 953, 954, 955, 957, 958, 960, 962, 968, 984, 995, 1005, 1007, 1013, 1015, 1018, 1023, 1025, 1028, 1039, 1042, 1045, 1047, 1064, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1079, 1089, 1109, 1119, 1134, 1135, 1136, 1170], "73": [7, 200, 211, 223, 233, 238, 240, 243, 246, 249, 255, 262, 265, 270, 272, 278, 282, 285, 291, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 389, 392, 1192], "74": [7, 193, 195, 200, 223, 233, 238, 240, 243, 246, 249, 255, 262, 265, 270, 272, 278, 282, 285, 288, 291, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 392, 970, 979, 1145, 1192, 1193], "75": [7, 200, 223, 233, 238, 240, 243, 246, 249, 251, 255, 259, 262, 265, 270, 272, 278, 282, 285, 288, 291, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 392, 506, 1192, 1193], "sum": [7, 38, 62, 223, 243, 247, 248, 262, 263, 265, 268, 270, 278, 281, 282, 285, 288, 303, 310, 352, 358, 364, 368, 455, 470, 485, 487, 488, 490, 574, 600, 620, 644, 658, 660, 673, 677, 725, 740, 824, 826, 828, 830, 840, 1047, 1106, 1122, 1206], "100": [7, 32, 124, 163, 166, 171, 189, 190, 195, 205, 209, 210, 223, 233, 240, 243, 246, 249, 255, 259, 262, 265, 270, 272, 275, 278, 281, 282, 285, 288, 290, 291, 300, 303, 306, 307, 308, 310, 314, 320, 324, 330, 341, 342, 346, 352, 358, 364, 368, 392, 393, 397, 402, 455, 461, 462, 504, 524, 532, 534, 549, 582, 583, 591, 610, 672, 673, 674, 675, 676, 678, 679, 680, 681, 695, 743, 760, 781, 858, 897, 944, 947, 970, 987, 1026, 1048, 1050, 1054, 1055, 1063, 1064, 1090, 1122, 1126, 1145, 1176, 1221], "5050": [7, 223, 243, 265, 278, 285, 310, 352, 358, 364, 368], "bestimmen": [7, 243], "maximum": [7, 29, 183, 223, 233, 234, 236, 238, 241, 243, 246, 247, 253, 257, 259, 260, 262, 263, 265, 269, 270, 272, 273, 275, 278, 279, 281, 282, 284, 286, 287, 302, 303, 309, 310, 322, 323, 324, 328, 329, 350, 351, 356, 357, 358, 362, 363, 364, 366, 367, 368, 393, 445, 739, 817, 840, 848, 925, 985, 1050, 1056, 1129, 1147, 1149, 1150, 1151, 1154, 1157, 1160, 1161, 1167, 1168, 1169, 1170, 1171, 1172, 1186, 1187, 1191, 1192, 1193, 1194, 1216, 1251], "zwei": [7, 163, 166, 172, 199, 209, 217, 223, 235, 238, 240, 243, 246, 259, 262, 270, 275, 278, 282, 288, 310, 330, 338, 342, 346, 368, 392, 608, 699, 700, 701, 702, 975, 1238, 1255], "inlin": [7, 144, 211, 217, 229, 243, 259, 288, 291, 293, 315, 342, 346, 352, 465, 487, 490, 631, 646, 660, 699, 737, 789, 807, 824, 826, 828, 829, 830, 831, 838, 1083, 1163], "ohn": [7, 23, 207, 209, 217, 243, 246, 358, 909, 976, 1237, 1257, 1258, 1259], "funktion": [7, 23, 213, 217, 223, 234, 235, 236, 240, 243, 246, 249, 270, 272, 275, 278, 310, 342, 392, 1251], "666": [7, 42, 50, 109, 116, 122, 132, 134, 209, 210, 223, 233, 238, 240, 243, 246, 249, 255, 259, 262, 265, 270, 272, 275, 278, 282, 285, 288, 291, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 388, 389, 390, 392, 393, 428, 511, 514, 547, 602, 603, 604, 605, 606, 610, 611, 612, 613, 615, 616, 618, 625, 637, 644, 648, 657, 659, 682, 683, 684, 685, 686, 688, 691, 699, 702, 722, 727, 756, 758, 765, 767, 768, 769, 773, 793, 797, 800, 802, 807, 810, 819, 824, 826, 828, 834, 835, 836, 845, 846, 1082, 1086, 1128, 1129, 1132, 1233], "var1": [7, 233, 243, 1153], "var2": [7, 233, 243, 1153], "6712": [7, 243, 265], "isn": [7, 67, 189, 205, 243, 309, 312, 405, 419, 470, 530, 677, 681, 720, 744, 771, 791, 992, 1131, 1228], "fehler": [7, 217, 223, 243, 397, 402], "link": [7, 13, 17, 27, 32, 44, 105, 106, 126, 132, 137, 148, 150, 159, 183, 186, 187, 189, 190, 196, 197, 198, 199, 200, 201, 207, 209, 217, 223, 230, 243, 266, 268, 296, 297, 305, 306, 314, 319, 326, 327, 332, 348, 358, 370, 371, 397, 410, 411, 460, 473, 479, 483, 487, 492, 496, 501, 502, 507, 516, 534, 537, 538, 540, 548, 562, 585, 590, 591, 592, 593, 594, 595, 596, 597, 600, 620, 627, 628, 642, 657, 745, 751, 759, 783, 793, 794, 837, 838, 839, 840, 848, 849, 853, 854, 857, 865, 868, 877, 878, 887, 889, 891, 896, 902, 905, 908, 917, 968, 970, 975, 984, 993, 1000, 1030, 1033, 1035, 1062, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1073, 1075, 1081, 1187, 1215, 1225, 1228, 1235, 1236, 1243], "\u212c": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 226, 227, 229, 230, 231, 232, 234, 236, 237, 244, 247, 250, 251, 252, 253, 257, 260, 263, 266, 268, 269, 273, 276, 279, 281, 284, 290, 294, 295, 296, 297, 298, 305, 306, 308, 315, 316, 317, 318, 319, 326, 327, 332, 333, 334, 337, 340, 341, 344, 345, 348, 349, 354, 355, 360, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 397, 404, 405, 406, 407, 408, 409, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 669, 670, 677, 678, 679, 682, 683, 684, 685, 686, 688, 689, 690, 691, 692, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 707, 709, 711, 713, 714, 716, 717, 718, 719, 720, 722, 723, 726, 727, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 742, 743, 744, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 764, 765, 770, 771, 780, 781, 782, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 804, 805, 806, 807, 809, 810, 811, 812, 813, 814, 815, 817, 818, 819, 820, 824, 826, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 979, 980, 981, 986, 987, 988, 989, 992, 995, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1017, 1018, 1019, 1020, 1021, 1024, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1040, 1041, 1043, 1044, 1046, 1048, 1049, 1050, 1062, 1063, 1064, 1065, 1071, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1091, 1094, 1095, 1097, 1099, 1100, 1101, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1143, 1144, 1145, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1175, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1196, 1197, 1199, 1200, 1201, 1205, 1206, 1207, 1209, 1210, 1211, 1212, 1213, 1217, 1221, 1222, 1223, 1224, 1251], "\u2145": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 226, 227, 229, 230, 231, 232, 234, 236, 237, 244, 247, 250, 251, 252, 253, 257, 260, 263, 266, 268, 269, 273, 276, 279, 281, 284, 290, 294, 295, 296, 297, 298, 305, 306, 308, 315, 316, 317, 318, 319, 326, 327, 332, 333, 334, 337, 340, 341, 344, 345, 348, 349, 354, 355, 360, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 397, 404, 405, 406, 407, 408, 409, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 669, 670, 677, 678, 679, 682, 683, 684, 685, 686, 688, 689, 690, 691, 692, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 707, 709, 711, 713, 714, 716, 717, 718, 719, 720, 722, 723, 726, 727, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 742, 743, 744, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 764, 765, 770, 771, 780, 781, 782, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 804, 805, 806, 807, 809, 810, 811, 812, 813, 814, 815, 817, 818, 819, 820, 824, 826, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 979, 980, 981, 986, 987, 988, 989, 992, 995, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1017, 1018, 1019, 1020, 1021, 1024, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1040, 1041, 1043, 1044, 1046, 1048, 1049, 1050, 1062, 1063, 1064, 1065, 1071, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1091, 1094, 1095, 1097, 1099, 1100, 1101, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1143, 1144, 1145, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1175, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1196, 1197, 1199, 1200, 1201, 1205, 1206, 1207, 1209, 1210, 1211, 1212, 1213, 1217, 1221, 1222, 1223, 1224, 1251], "\u212d": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 226, 227, 229, 230, 231, 232, 234, 236, 237, 244, 247, 250, 251, 252, 253, 257, 260, 263, 266, 268, 269, 273, 276, 279, 281, 284, 290, 294, 295, 296, 297, 298, 305, 306, 308, 315, 316, 317, 318, 319, 326, 327, 332, 333, 334, 337, 340, 341, 344, 345, 348, 349, 354, 355, 360, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 397, 404, 405, 406, 407, 408, 409, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 669, 670, 677, 678, 679, 682, 683, 684, 685, 686, 688, 689, 690, 691, 692, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 707, 709, 711, 713, 714, 716, 717, 718, 719, 720, 722, 723, 726, 727, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 742, 743, 744, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 764, 765, 770, 771, 780, 781, 782, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 804, 805, 806, 807, 809, 810, 811, 812, 813, 814, 815, 817, 818, 819, 820, 824, 826, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 979, 980, 981, 986, 987, 988, 989, 992, 995, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1017, 1018, 1019, 1020, 1021, 1024, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1040, 1041, 1043, 1044, 1046, 1048, 1049, 1050, 1062, 1063, 1064, 1065, 1071, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1091, 1094, 1095, 1097, 1099, 1100, 1101, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1143, 1144, 1145, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1175, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1196, 1197, 1199, 1200, 1201, 1205, 1206, 1207, 1209, 1210, 1211, 1212, 1213, 1217, 1221, 1222, 1223, 1224, 1251], "\u2102": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 226, 227, 229, 230, 231, 232, 234, 236, 237, 244, 247, 250, 251, 252, 253, 257, 260, 263, 266, 268, 269, 273, 276, 279, 281, 284, 290, 294, 295, 296, 297, 298, 305, 306, 308, 315, 316, 317, 318, 319, 326, 327, 332, 333, 334, 337, 340, 341, 344, 345, 348, 349, 354, 355, 360, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 397, 404, 405, 406, 407, 408, 409, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 669, 670, 677, 678, 679, 682, 683, 684, 685, 686, 688, 689, 690, 691, 692, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 707, 709, 711, 713, 714, 716, 717, 718, 719, 720, 722, 723, 726, 727, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 742, 743, 744, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 764, 765, 770, 771, 780, 781, 782, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 804, 805, 806, 807, 809, 810, 811, 812, 813, 814, 815, 817, 818, 819, 820, 824, 826, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 979, 980, 981, 986, 987, 988, 989, 992, 995, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1017, 1018, 1019, 1020, 1021, 1024, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1040, 1041, 1043, 1044, 1046, 1048, 1049, 1050, 1062, 1063, 1064, 1065, 1071, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1091, 1094, 1095, 1097, 1099, 1100, 1101, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1143, 1144, 1145, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1175, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1196, 1197, 1199, 1200, 1201, 1205, 1206, 1207, 1209, 1210, 1211, 1212, 1213, 1217, 1221, 1222, 1223, 1224, 1251], "\u2146": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 226, 227, 229, 230, 231, 232, 234, 236, 237, 244, 247, 250, 251, 252, 253, 257, 260, 263, 266, 268, 269, 273, 276, 279, 281, 284, 290, 294, 295, 296, 297, 298, 305, 306, 308, 315, 316, 317, 318, 319, 326, 327, 332, 333, 334, 337, 340, 341, 344, 345, 348, 349, 354, 355, 360, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 397, 404, 405, 406, 407, 408, 409, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 669, 670, 677, 678, 679, 682, 683, 684, 685, 686, 688, 689, 690, 691, 692, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 707, 709, 711, 713, 714, 716, 717, 718, 719, 720, 722, 723, 726, 727, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 742, 743, 744, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 764, 765, 770, 771, 780, 781, 782, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 804, 805, 806, 807, 809, 810, 811, 812, 813, 814, 815, 817, 818, 819, 820, 824, 826, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 979, 980, 981, 986, 987, 988, 989, 992, 995, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1017, 1018, 1019, 1020, 1021, 1024, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1040, 1041, 1043, 1044, 1046, 1048, 1049, 1050, 1062, 1063, 1064, 1065, 1071, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1091, 1094, 1095, 1097, 1099, 1100, 1101, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1143, 1144, 1145, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1175, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1196, 1197, 1199, 1200, 1201, 1205, 1206, 1207, 1209, 1210, 1211, 1212, 1213, 1217, 1221, 1222, 1223, 1224, 1251], "\u03dd": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 226, 227, 229, 230, 231, 232, 234, 236, 237, 244, 247, 250, 251, 252, 253, 257, 260, 263, 266, 268, 269, 273, 276, 279, 281, 284, 290, 294, 295, 296, 297, 298, 305, 306, 308, 315, 316, 317, 318, 319, 326, 327, 332, 333, 334, 337, 340, 341, 344, 345, 348, 349, 354, 355, 360, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 397, 404, 405, 406, 407, 408, 409, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 669, 670, 677, 678, 679, 682, 683, 684, 685, 686, 688, 689, 690, 691, 692, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 707, 709, 711, 713, 714, 716, 717, 718, 719, 720, 722, 723, 726, 727, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 742, 743, 744, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 764, 765, 770, 771, 780, 781, 782, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 804, 805, 806, 807, 809, 810, 811, 812, 813, 814, 815, 817, 818, 819, 820, 824, 826, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 979, 980, 981, 986, 987, 988, 989, 992, 995, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1017, 1018, 1019, 1020, 1021, 1024, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1040, 1041, 1043, 1044, 1046, 1048, 1049, 1050, 1062, 1063, 1064, 1065, 1071, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1091, 1094, 1095, 1097, 1099, 1100, 1101, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1143, 1144, 1145, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1175, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1196, 1197, 1199, 1200, 1201, 1205, 1206, 1207, 1209, 1210, 1211, 1212, 1213, 1217, 1221, 1222, 1223, 1224, 1251], "\u2130": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 226, 227, 229, 230, 231, 232, 234, 236, 237, 244, 247, 250, 251, 252, 253, 257, 260, 263, 266, 268, 269, 273, 276, 279, 281, 284, 290, 294, 295, 296, 297, 298, 305, 306, 308, 315, 316, 317, 318, 319, 326, 327, 332, 333, 334, 337, 340, 341, 344, 345, 348, 349, 354, 355, 360, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 397, 404, 405, 406, 407, 408, 409, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 669, 670, 677, 678, 679, 682, 683, 684, 685, 686, 688, 689, 690, 691, 692, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 707, 709, 711, 713, 714, 716, 717, 718, 719, 720, 722, 723, 726, 727, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 742, 743, 744, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 764, 765, 770, 771, 780, 781, 782, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 804, 805, 806, 807, 809, 810, 811, 812, 813, 814, 815, 817, 818, 819, 820, 824, 826, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 979, 980, 981, 986, 987, 988, 989, 992, 995, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1017, 1018, 1019, 1020, 1021, 1024, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1040, 1041, 1043, 1044, 1046, 1048, 1049, 1050, 1062, 1063, 1064, 1065, 1071, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1091, 1094, 1095, 1097, 1099, 1100, 1101, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1143, 1144, 1145, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1175, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1196, 1197, 1199, 1200, 1201, 1205, 1206, 1207, 1209, 1210, 1211, 1212, 1213, 1217, 1221, 1222, 1223, 1224, 1251], "\u2147": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 226, 227, 229, 230, 231, 232, 234, 236, 237, 244, 247, 250, 251, 252, 253, 257, 260, 263, 266, 268, 269, 273, 276, 279, 281, 284, 290, 294, 295, 296, 297, 298, 305, 306, 308, 315, 316, 317, 318, 319, 326, 327, 332, 333, 334, 337, 340, 341, 344, 345, 348, 349, 354, 355, 360, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 397, 404, 405, 406, 407, 408, 409, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 669, 670, 677, 678, 679, 682, 683, 684, 685, 686, 688, 689, 690, 691, 692, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 707, 709, 711, 713, 714, 716, 717, 718, 719, 720, 722, 723, 726, 727, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 742, 743, 744, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 764, 765, 770, 771, 780, 781, 782, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 804, 805, 806, 807, 809, 810, 811, 812, 813, 814, 815, 817, 818, 819, 820, 824, 826, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 979, 980, 981, 986, 987, 988, 989, 992, 995, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1017, 1018, 1019, 1020, 1021, 1024, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1040, 1041, 1043, 1044, 1046, 1048, 1049, 1050, 1062, 1063, 1064, 1065, 1071, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1091, 1094, 1095, 1097, 1099, 1100, 1101, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1143, 1144, 1145, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1175, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1196, 1197, 1199, 1200, 1201, 1205, 1206, 1207, 1209, 1210, 1211, 1212, 1213, 1217, 1221, 1222, 1223, 1224, 1251], "\u2131": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 226, 227, 229, 230, 231, 232, 234, 236, 237, 244, 247, 250, 251, 252, 253, 257, 260, 263, 266, 268, 269, 273, 276, 279, 281, 284, 290, 294, 295, 296, 297, 298, 305, 306, 308, 315, 316, 317, 318, 319, 326, 327, 332, 333, 334, 337, 340, 341, 344, 345, 348, 349, 354, 355, 360, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 397, 404, 405, 406, 407, 408, 409, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 669, 670, 677, 678, 679, 682, 683, 684, 685, 686, 688, 689, 690, 691, 692, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 707, 709, 711, 713, 714, 716, 717, 718, 719, 720, 722, 723, 726, 727, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 742, 743, 744, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 764, 765, 770, 771, 780, 781, 782, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 804, 805, 806, 807, 809, 810, 811, 812, 813, 814, 815, 817, 818, 819, 820, 824, 826, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 979, 980, 981, 986, 987, 988, 989, 992, 995, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1017, 1018, 1019, 1020, 1021, 1024, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1040, 1041, 1043, 1044, 1046, 1048, 1049, 1050, 1062, 1063, 1064, 1065, 1071, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1091, 1094, 1095, 1097, 1099, 1100, 1101, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1143, 1144, 1145, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1175, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1196, 1197, 1199, 1200, 1201, 1205, 1206, 1207, 1209, 1210, 1211, 1212, 1213, 1217, 1221, 1222, 1223, 1224, 1251], "\u02c7": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 226, 227, 229, 230, 231, 232, 234, 236, 237, 244, 247, 250, 251, 252, 253, 257, 260, 263, 266, 268, 269, 273, 276, 279, 281, 284, 290, 294, 295, 296, 297, 298, 305, 306, 308, 315, 316, 317, 318, 319, 326, 327, 332, 333, 334, 337, 340, 341, 344, 345, 348, 349, 354, 355, 360, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 397, 404, 405, 406, 407, 408, 409, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 669, 670, 677, 678, 679, 682, 683, 684, 685, 686, 688, 689, 690, 691, 692, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 707, 709, 711, 713, 714, 716, 717, 718, 719, 720, 722, 723, 726, 727, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 742, 743, 744, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 764, 765, 770, 771, 780, 781, 782, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 804, 805, 806, 807, 809, 810, 811, 812, 813, 814, 815, 817, 818, 819, 820, 824, 826, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 979, 980, 981, 986, 987, 988, 989, 992, 995, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1017, 1018, 1019, 1020, 1021, 1024, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1040, 1041, 1043, 1044, 1046, 1048, 1049, 1050, 1062, 1063, 1064, 1065, 1071, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1091, 1094, 1095, 1097, 1099, 1100, 1101, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1143, 1144, 1145, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1175, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1196, 1197, 1199, 1200, 1201, 1205, 1206, 1207, 1209, 1210, 1211, 1212, 1213, 1217, 1221, 1222, 1223, 1224, 1251], "\u210f": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 226, 227, 229, 230, 231, 232, 234, 236, 237, 244, 247, 250, 251, 252, 253, 257, 260, 263, 266, 268, 269, 273, 276, 279, 281, 284, 290, 294, 295, 296, 297, 298, 305, 306, 308, 315, 316, 317, 318, 319, 326, 327, 332, 333, 334, 337, 340, 341, 344, 345, 348, 349, 354, 355, 360, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 397, 404, 405, 406, 407, 408, 409, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 669, 670, 677, 678, 679, 682, 683, 684, 685, 686, 688, 689, 690, 691, 692, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 707, 709, 711, 713, 714, 716, 717, 718, 719, 720, 722, 723, 726, 727, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 742, 743, 744, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 764, 765, 770, 771, 780, 781, 782, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 804, 805, 806, 807, 809, 810, 811, 812, 813, 814, 815, 817, 818, 819, 820, 824, 826, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 979, 980, 981, 986, 987, 988, 989, 992, 995, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1017, 1018, 1019, 1020, 1021, 1024, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1040, 1041, 1043, 1044, 1046, 1048, 1049, 1050, 1062, 1063, 1064, 1065, 1071, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1091, 1094, 1095, 1097, 1099, 1100, 1101, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1143, 1144, 1145, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1175, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1196, 1197, 1199, 1200, 1201, 1205, 1206, 1207, 1209, 1210, 1211, 1212, 1213, 1217, 1221, 1222, 1223, 1224, 1251], "\u210b": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 226, 227, 229, 230, 231, 232, 234, 236, 237, 244, 247, 250, 251, 252, 253, 257, 260, 263, 266, 268, 269, 273, 276, 279, 281, 284, 290, 294, 295, 296, 297, 298, 305, 306, 308, 315, 316, 317, 318, 319, 326, 327, 332, 333, 334, 337, 340, 341, 344, 345, 348, 349, 354, 355, 360, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 397, 404, 405, 406, 407, 408, 409, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 669, 670, 677, 678, 679, 682, 683, 684, 685, 686, 688, 689, 690, 691, 692, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 707, 709, 711, 713, 714, 716, 717, 718, 719, 720, 722, 723, 726, 727, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 742, 743, 744, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 764, 765, 770, 771, 780, 781, 782, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 804, 805, 806, 807, 809, 810, 811, 812, 813, 814, 815, 817, 818, 819, 820, 824, 826, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 979, 980, 981, 986, 987, 988, 989, 992, 995, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1017, 1018, 1019, 1020, 1021, 1024, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1040, 1041, 1043, 1044, 1046, 1048, 1049, 1050, 1062, 1063, 1064, 1065, 1071, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1091, 1094, 1095, 1097, 1099, 1100, 1101, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1143, 1144, 1145, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1175, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1196, 1197, 1199, 1200, 1201, 1205, 1206, 1207, 1209, 1210, 1211, 1212, 1213, 1217, 1221, 1222, 1223, 1224, 1251], "\u2111": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 226, 227, 229, 230, 231, 232, 234, 236, 237, 244, 247, 250, 251, 252, 253, 257, 260, 263, 266, 268, 269, 273, 276, 279, 281, 284, 290, 294, 295, 296, 297, 298, 305, 306, 308, 315, 316, 317, 318, 319, 326, 327, 332, 333, 334, 337, 340, 341, 344, 345, 348, 349, 354, 355, 360, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 397, 404, 405, 406, 407, 408, 409, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 669, 670, 677, 678, 679, 682, 683, 684, 685, 686, 688, 689, 690, 691, 692, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 707, 709, 711, 713, 714, 716, 717, 718, 719, 720, 722, 723, 726, 727, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 742, 743, 744, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 764, 765, 770, 771, 780, 781, 782, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 804, 805, 806, 807, 809, 810, 811, 812, 813, 814, 815, 817, 818, 819, 820, 824, 826, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 979, 980, 981, 986, 987, 988, 989, 992, 995, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1017, 1018, 1019, 1020, 1021, 1024, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1040, 1041, 1043, 1044, 1046, 1048, 1049, 1050, 1062, 1063, 1064, 1065, 1071, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1091, 1094, 1095, 1097, 1099, 1100, 1101, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1143, 1144, 1145, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1175, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1196, 1197, 1199, 1200, 1201, 1205, 1206, 1207, 1209, 1210, 1211, 1212, 1213, 1217, 1221, 1222, 1223, 1224, 1251], "\u2148": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 226, 227, 229, 230, 231, 232, 234, 236, 237, 244, 247, 250, 251, 252, 253, 257, 260, 263, 266, 268, 269, 273, 276, 279, 281, 284, 290, 294, 295, 296, 297, 298, 305, 306, 308, 315, 316, 317, 318, 319, 326, 327, 332, 333, 334, 337, 340, 341, 344, 345, 348, 349, 354, 355, 360, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 397, 404, 405, 406, 407, 408, 409, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 669, 670, 677, 678, 679, 682, 683, 684, 685, 686, 688, 689, 690, 691, 692, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 707, 709, 711, 713, 714, 716, 717, 718, 719, 720, 722, 723, 726, 727, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 742, 743, 744, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 764, 765, 770, 771, 780, 781, 782, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 804, 805, 806, 807, 809, 810, 811, 812, 813, 814, 815, 817, 818, 819, 820, 824, 826, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 979, 980, 981, 986, 987, 988, 989, 992, 995, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1017, 1018, 1019, 1020, 1021, 1024, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1040, 1041, 1043, 1044, 1046, 1048, 1049, 1050, 1062, 1063, 1064, 1065, 1071, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1091, 1094, 1095, 1097, 1099, 1100, 1101, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1143, 1144, 1145, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1175, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1196, 1197, 1199, 1200, 1201, 1205, 1206, 1207, 1209, 1210, 1211, 1212, 1213, 1217, 1221, 1222, 1223, 1224, 1251], "\u2110": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 226, 227, 229, 230, 231, 232, 234, 236, 237, 244, 247, 250, 251, 252, 253, 257, 260, 263, 266, 268, 269, 273, 276, 279, 281, 284, 290, 294, 295, 296, 297, 298, 305, 306, 308, 315, 316, 317, 318, 319, 326, 327, 332, 333, 334, 337, 340, 341, 344, 345, 348, 349, 354, 355, 360, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 397, 404, 405, 406, 407, 408, 409, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 669, 670, 677, 678, 679, 682, 683, 684, 685, 686, 688, 689, 690, 691, 692, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 707, 709, 711, 713, 714, 716, 717, 718, 719, 720, 722, 723, 726, 727, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 742, 743, 744, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 764, 765, 770, 771, 780, 781, 782, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 804, 805, 806, 807, 809, 810, 811, 812, 813, 814, 815, 817, 818, 819, 820, 824, 826, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 979, 980, 981, 986, 987, 988, 989, 992, 995, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1017, 1018, 1019, 1020, 1021, 1024, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1040, 1041, 1043, 1044, 1046, 1048, 1049, 1050, 1062, 1063, 1064, 1065, 1071, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1091, 1094, 1095, 1097, 1099, 1100, 1101, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1143, 1144, 1145, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1175, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1196, 1197, 1199, 1200, 1201, 1205, 1206, 1207, 1209, 1210, 1211, 1212, 1213, 1217, 1221, 1222, 1223, 1224, 1251], "\u2124": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 226, 227, 229, 230, 231, 232, 234, 236, 237, 244, 247, 250, 251, 252, 253, 257, 260, 263, 266, 268, 269, 273, 276, 279, 281, 284, 290, 294, 295, 296, 297, 298, 305, 306, 308, 315, 316, 317, 318, 319, 326, 327, 332, 333, 334, 337, 340, 341, 344, 345, 348, 349, 354, 355, 360, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 397, 404, 405, 406, 407, 408, 409, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 669, 670, 677, 678, 679, 682, 683, 684, 685, 686, 688, 689, 690, 691, 692, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 707, 709, 711, 713, 714, 716, 717, 718, 719, 720, 722, 723, 726, 727, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 742, 743, 744, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 764, 765, 770, 771, 780, 781, 782, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 804, 805, 806, 807, 809, 810, 811, 812, 813, 814, 815, 817, 818, 819, 820, 824, 826, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 979, 980, 981, 986, 987, 988, 989, 992, 995, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1017, 1018, 1019, 1020, 1021, 1024, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1040, 1041, 1043, 1044, 1046, 1048, 1049, 1050, 1062, 1063, 1064, 1065, 1071, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1091, 1094, 1095, 1097, 1099, 1100, 1101, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1143, 1144, 1145, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1175, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1196, 1197, 1199, 1200, 1201, 1205, 1206, 1207, 1209, 1210, 1211, 1212, 1213, 1217, 1221, 1222, 1223, 1224, 1251], "\u2112": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 226, 227, 229, 230, 231, 232, 234, 236, 237, 244, 247, 250, 251, 252, 253, 257, 260, 263, 266, 268, 269, 273, 276, 279, 281, 284, 290, 294, 295, 296, 297, 298, 305, 306, 308, 315, 316, 317, 318, 319, 326, 327, 332, 333, 334, 337, 340, 341, 344, 345, 348, 349, 354, 355, 360, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 397, 404, 405, 406, 407, 408, 409, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 669, 670, 677, 678, 679, 682, 683, 684, 685, 686, 688, 689, 690, 691, 692, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 707, 709, 711, 713, 714, 716, 717, 718, 719, 720, 722, 723, 726, 727, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 742, 743, 744, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 764, 765, 770, 771, 780, 781, 782, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 804, 805, 806, 807, 809, 810, 811, 812, 813, 814, 815, 817, 818, 819, 820, 824, 826, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 979, 980, 981, 986, 987, 988, 989, 992, 995, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1017, 1018, 1019, 1020, 1021, 1024, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1040, 1041, 1043, 1044, 1046, 1048, 1049, 1050, 1062, 1063, 1064, 1065, 1071, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1091, 1094, 1095, 1097, 1099, 1100, 1101, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1143, 1144, 1145, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1175, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1196, 1197, 1199, 1200, 1201, 1205, 1206, 1207, 1209, 1210, 1211, 1212, 1213, 1217, 1221, 1222, 1223, 1224, 1251], "\u2133": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 226, 227, 229, 230, 231, 232, 234, 236, 237, 244, 247, 250, 251, 252, 253, 257, 260, 263, 266, 268, 269, 273, 276, 279, 281, 284, 290, 294, 295, 296, 297, 298, 305, 306, 308, 315, 316, 317, 318, 319, 326, 327, 332, 333, 334, 337, 340, 341, 344, 345, 348, 349, 354, 355, 360, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 397, 404, 405, 406, 407, 408, 409, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 669, 670, 677, 678, 679, 682, 683, 684, 685, 686, 688, 689, 690, 691, 692, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 707, 709, 711, 713, 714, 716, 717, 718, 719, 720, 722, 723, 726, 727, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 742, 743, 744, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 764, 765, 770, 771, 780, 781, 782, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 804, 805, 806, 807, 809, 810, 811, 812, 813, 814, 815, 817, 818, 819, 820, 824, 826, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 979, 980, 981, 986, 987, 988, 989, 992, 995, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1017, 1018, 1019, 1020, 1021, 1024, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1040, 1041, 1043, 1044, 1046, 1048, 1049, 1050, 1062, 1063, 1064, 1065, 1071, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1091, 1094, 1095, 1097, 1099, 1100, 1101, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1143, 1144, 1145, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1175, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1196, 1197, 1199, 1200, 1201, 1205, 1206, 1207, 1209, 1210, 1211, 1212, 1213, 1217, 1221, 1222, 1223, 1224, 1251], "\u2115": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 226, 227, 229, 230, 231, 232, 234, 236, 237, 244, 247, 250, 251, 252, 253, 257, 260, 263, 266, 268, 269, 273, 276, 279, 281, 284, 290, 294, 295, 296, 297, 298, 305, 306, 308, 315, 316, 317, 318, 319, 326, 327, 332, 333, 334, 337, 340, 341, 344, 345, 348, 349, 354, 355, 360, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 397, 404, 405, 406, 407, 408, 409, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 669, 670, 677, 678, 679, 682, 683, 684, 685, 686, 688, 689, 690, 691, 692, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 707, 709, 711, 713, 714, 716, 717, 718, 719, 720, 722, 723, 726, 727, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 742, 743, 744, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 764, 765, 770, 771, 780, 781, 782, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 804, 805, 806, 807, 809, 810, 811, 812, 813, 814, 815, 817, 818, 819, 820, 824, 826, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 979, 980, 981, 986, 987, 988, 989, 992, 995, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1017, 1018, 1019, 1020, 1021, 1024, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1040, 1041, 1043, 1044, 1046, 1048, 1049, 1050, 1062, 1063, 1064, 1065, 1071, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1091, 1094, 1095, 1097, 1099, 1100, 1101, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1143, 1144, 1145, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1175, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1196, 1197, 1199, 1200, 1201, 1205, 1206, 1207, 1209, 1210, 1211, 1212, 1213, 1217, 1221, 1222, 1223, 1224, 1251], "\u2134": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 226, 227, 229, 230, 231, 232, 234, 236, 237, 244, 247, 250, 251, 252, 253, 257, 260, 263, 266, 268, 269, 273, 276, 279, 281, 284, 290, 294, 295, 296, 297, 298, 305, 306, 308, 315, 316, 317, 318, 319, 326, 327, 332, 333, 334, 337, 340, 341, 344, 345, 348, 349, 354, 355, 360, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 397, 404, 405, 406, 407, 408, 409, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 669, 670, 677, 678, 679, 682, 683, 684, 685, 686, 688, 689, 690, 691, 692, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 707, 709, 711, 713, 714, 716, 717, 718, 719, 720, 722, 723, 726, 727, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 742, 743, 744, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 764, 765, 770, 771, 780, 781, 782, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 804, 805, 806, 807, 809, 810, 811, 812, 813, 814, 815, 817, 818, 819, 820, 824, 826, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 979, 980, 981, 986, 987, 988, 989, 992, 995, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1017, 1018, 1019, 1020, 1021, 1024, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1040, 1041, 1043, 1044, 1046, 1048, 1049, 1050, 1062, 1063, 1064, 1065, 1071, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1091, 1094, 1095, 1097, 1099, 1100, 1101, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1143, 1144, 1145, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1175, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1196, 1197, 1199, 1200, 1201, 1205, 1206, 1207, 1209, 1210, 1211, 1212, 1213, 1217, 1221, 1222, 1223, 1224, 1251], "\u210c": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 226, 227, 229, 230, 231, 232, 234, 236, 237, 244, 247, 250, 251, 252, 253, 257, 260, 263, 266, 268, 269, 273, 276, 279, 281, 284, 290, 294, 295, 296, 297, 298, 305, 306, 308, 315, 316, 317, 318, 319, 326, 327, 332, 333, 334, 337, 340, 341, 344, 345, 348, 349, 354, 355, 360, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 397, 404, 405, 406, 407, 408, 409, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 669, 670, 677, 678, 679, 682, 683, 684, 685, 686, 688, 689, 690, 691, 692, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 707, 709, 711, 713, 714, 716, 717, 718, 719, 720, 722, 723, 726, 727, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 742, 743, 744, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 764, 765, 770, 771, 780, 781, 782, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 804, 805, 806, 807, 809, 810, 811, 812, 813, 814, 815, 817, 818, 819, 820, 824, 826, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 979, 980, 981, 986, 987, 988, 989, 992, 995, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1017, 1018, 1019, 1020, 1021, 1024, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1040, 1041, 1043, 1044, 1046, 1048, 1049, 1050, 1062, 1063, 1064, 1065, 1071, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1091, 1094, 1095, 1097, 1099, 1100, 1101, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1143, 1144, 1145, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1175, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1196, 1197, 1199, 1200, 1201, 1205, 1206, 1207, 1209, 1210, 1211, 1212, 1213, 1217, 1221, 1222, 1223, 1224, 1251], "\u2119": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 226, 227, 229, 230, 231, 232, 234, 236, 237, 244, 247, 250, 251, 252, 253, 257, 260, 263, 266, 268, 269, 273, 276, 279, 281, 284, 290, 294, 295, 296, 297, 298, 305, 306, 308, 315, 316, 317, 318, 319, 326, 327, 332, 333, 334, 337, 340, 341, 344, 345, 348, 349, 354, 355, 360, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 397, 404, 405, 406, 407, 408, 409, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 669, 670, 677, 678, 679, 682, 683, 684, 685, 686, 688, 689, 690, 691, 692, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 707, 709, 711, 713, 714, 716, 717, 718, 719, 720, 722, 723, 726, 727, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 742, 743, 744, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 764, 765, 770, 771, 780, 781, 782, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 804, 805, 806, 807, 809, 810, 811, 812, 813, 814, 815, 817, 818, 819, 820, 824, 826, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 979, 980, 981, 986, 987, 988, 989, 992, 995, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1017, 1018, 1019, 1020, 1021, 1024, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1040, 1041, 1043, 1044, 1046, 1048, 1049, 1050, 1062, 1063, 1064, 1065, 1071, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1091, 1094, 1095, 1097, 1099, 1100, 1101, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1143, 1144, 1145, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1175, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1196, 1197, 1199, 1200, 1201, 1205, 1206, 1207, 1209, 1210, 1211, 1212, 1213, 1217, 1221, 1222, 1223, 1224, 1251], "\u210d": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 226, 227, 229, 230, 231, 232, 234, 236, 237, 244, 247, 250, 251, 252, 253, 257, 260, 263, 266, 268, 269, 273, 276, 279, 281, 284, 290, 294, 295, 296, 297, 298, 305, 306, 308, 315, 316, 317, 318, 319, 326, 327, 332, 333, 334, 337, 340, 341, 344, 345, 348, 349, 354, 355, 360, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 397, 404, 405, 406, 407, 408, 409, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 669, 670, 677, 678, 679, 682, 683, 684, 685, 686, 688, 689, 690, 691, 692, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 707, 709, 711, 713, 714, 716, 717, 718, 719, 720, 722, 723, 726, 727, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 742, 743, 744, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 764, 765, 770, 771, 780, 781, 782, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 804, 805, 806, 807, 809, 810, 811, 812, 813, 814, 815, 817, 818, 819, 820, 824, 826, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 979, 980, 981, 986, 987, 988, 989, 992, 995, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1017, 1018, 1019, 1020, 1021, 1024, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1040, 1041, 1043, 1044, 1046, 1048, 1049, 1050, 1062, 1063, 1064, 1065, 1071, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1091, 1094, 1095, 1097, 1099, 1100, 1101, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1143, 1144, 1145, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1175, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1196, 1197, 1199, 1200, 1201, 1205, 1206, 1207, 1209, 1210, 1211, 1212, 1213, 1217, 1221, 1222, 1223, 1224, 1251], "\u211a": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 226, 227, 229, 230, 231, 232, 234, 236, 237, 244, 247, 250, 251, 252, 253, 257, 260, 263, 266, 268, 269, 273, 276, 279, 281, 284, 290, 294, 295, 296, 297, 298, 305, 306, 308, 315, 316, 317, 318, 319, 326, 327, 332, 333, 334, 337, 340, 341, 344, 345, 348, 349, 354, 355, 360, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 397, 404, 405, 406, 407, 408, 409, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 669, 670, 677, 678, 679, 682, 683, 684, 685, 686, 688, 689, 690, 691, 692, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 707, 709, 711, 713, 714, 716, 717, 718, 719, 720, 722, 723, 726, 727, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 742, 743, 744, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 764, 765, 770, 771, 780, 781, 782, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 804, 805, 806, 807, 809, 810, 811, 812, 813, 814, 815, 817, 818, 819, 820, 824, 826, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 979, 980, 981, 986, 987, 988, 989, 992, 995, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1017, 1018, 1019, 1020, 1021, 1024, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1040, 1041, 1043, 1044, 1046, 1048, 1049, 1050, 1062, 1063, 1064, 1065, 1071, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1091, 1094, 1095, 1097, 1099, 1100, 1101, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1143, 1144, 1145, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1175, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1196, 1197, 1199, 1200, 1201, 1205, 1206, 1207, 1209, 1210, 1211, 1212, 1213, 1217, 1221, 1222, 1223, 1224, 1251], "\u211c": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 226, 227, 229, 230, 231, 232, 234, 236, 237, 244, 247, 250, 251, 252, 253, 257, 260, 263, 266, 268, 269, 273, 276, 279, 281, 284, 290, 294, 295, 296, 297, 298, 305, 306, 308, 315, 316, 317, 318, 319, 326, 327, 332, 333, 334, 337, 340, 341, 344, 345, 348, 349, 354, 355, 360, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 397, 404, 405, 406, 407, 408, 409, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 669, 670, 677, 678, 679, 682, 683, 684, 685, 686, 688, 689, 690, 691, 692, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 707, 709, 711, 713, 714, 716, 717, 718, 719, 720, 722, 723, 726, 727, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 742, 743, 744, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 764, 765, 770, 771, 780, 781, 782, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 804, 805, 806, 807, 809, 810, 811, 812, 813, 814, 815, 817, 818, 819, 820, 824, 826, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 979, 980, 981, 986, 987, 988, 989, 992, 995, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1017, 1018, 1019, 1020, 1021, 1024, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1040, 1041, 1043, 1044, 1046, 1048, 1049, 1050, 1062, 1063, 1064, 1065, 1071, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1091, 1094, 1095, 1097, 1099, 1100, 1101, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1143, 1144, 1145, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1175, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1196, 1197, 1199, 1200, 1201, 1205, 1206, 1207, 1209, 1210, 1211, 1212, 1213, 1217, 1221, 1222, 1223, 1224, 1251], "\u211b": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 226, 227, 229, 230, 231, 232, 234, 236, 237, 244, 247, 250, 251, 252, 253, 257, 260, 263, 266, 268, 269, 273, 276, 279, 281, 284, 290, 294, 295, 296, 297, 298, 305, 306, 308, 315, 316, 317, 318, 319, 326, 327, 332, 333, 334, 337, 340, 341, 344, 345, 348, 349, 354, 355, 360, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 397, 404, 405, 406, 407, 408, 409, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 669, 670, 677, 678, 679, 682, 683, 684, 685, 686, 688, 689, 690, 691, 692, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 707, 709, 711, 713, 714, 716, 717, 718, 719, 720, 722, 723, 726, 727, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 742, 743, 744, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 764, 765, 770, 771, 780, 781, 782, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 804, 805, 806, 807, 809, 810, 811, 812, 813, 814, 815, 817, 818, 819, 820, 824, 826, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 979, 980, 981, 986, 987, 988, 989, 992, 995, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1017, 1018, 1019, 1020, 1021, 1024, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1040, 1041, 1043, 1044, 1046, 1048, 1049, 1050, 1062, 1063, 1064, 1065, 1071, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1091, 1094, 1095, 1097, 1099, 1100, 1101, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1143, 1144, 1145, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1175, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1196, 1197, 1199, 1200, 1201, 1205, 1206, 1207, 1209, 1210, 1211, 1212, 1213, 1217, 1221, 1222, 1223, 1224, 1251], "\u211d": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 226, 227, 229, 230, 231, 232, 234, 236, 237, 244, 247, 250, 251, 252, 253, 257, 260, 263, 266, 268, 269, 273, 276, 279, 281, 284, 290, 294, 295, 296, 297, 298, 305, 306, 308, 315, 316, 317, 318, 319, 326, 327, 332, 333, 334, 337, 340, 341, 344, 345, 348, 349, 354, 355, 360, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 397, 404, 405, 406, 407, 408, 409, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 669, 670, 677, 678, 679, 682, 683, 684, 685, 686, 688, 689, 690, 691, 692, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 707, 709, 711, 713, 714, 716, 717, 718, 719, 720, 722, 723, 726, 727, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 742, 743, 744, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 764, 765, 770, 771, 780, 781, 782, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 804, 805, 806, 807, 809, 810, 811, 812, 813, 814, 815, 817, 818, 819, 820, 824, 826, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 979, 980, 981, 986, 987, 988, 989, 992, 995, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1017, 1018, 1019, 1020, 1021, 1024, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1040, 1041, 1043, 1044, 1046, 1048, 1049, 1050, 1062, 1063, 1064, 1065, 1071, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1091, 1094, 1095, 1097, 1099, 1100, 1101, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1143, 1144, 1145, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1175, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1196, 1197, 1199, 1200, 1201, 1205, 1206, 1207, 1209, 1210, 1211, 1212, 1213, 1217, 1221, 1222, 1223, 1224, 1251], "\u03f5": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 226, 227, 229, 230, 231, 232, 234, 236, 237, 244, 247, 250, 251, 252, 253, 257, 260, 263, 266, 268, 269, 273, 276, 279, 281, 284, 290, 294, 295, 296, 297, 298, 305, 306, 308, 315, 316, 317, 318, 319, 326, 327, 332, 333, 334, 337, 340, 341, 344, 345, 348, 349, 354, 355, 360, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 397, 404, 405, 406, 407, 408, 409, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 669, 670, 677, 678, 679, 682, 683, 684, 685, 686, 688, 689, 690, 691, 692, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 707, 709, 711, 713, 714, 716, 717, 718, 719, 720, 722, 723, 726, 727, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 742, 743, 744, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 764, 765, 770, 771, 780, 781, 782, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 804, 805, 806, 807, 809, 810, 811, 812, 813, 814, 815, 817, 818, 819, 820, 824, 826, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 979, 980, 981, 986, 987, 988, 989, 992, 995, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1017, 1018, 1019, 1020, 1021, 1024, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1040, 1041, 1043, 1044, 1046, 1048, 1049, 1050, 1062, 1063, 1064, 1065, 1071, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1091, 1094, 1095, 1097, 1099, 1100, 1101, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1143, 1144, 1145, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1175, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1196, 1197, 1199, 1200, 1201, 1205, 1206, 1207, 1209, 1210, 1211, 1212, 1213, 1217, 1221, 1222, 1223, 1224, 1251], "\u03d5": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 226, 227, 229, 230, 231, 232, 234, 236, 237, 244, 247, 250, 251, 252, 253, 257, 260, 263, 266, 268, 269, 273, 276, 279, 281, 284, 290, 294, 295, 296, 297, 298, 305, 306, 308, 315, 316, 317, 318, 319, 326, 327, 332, 333, 334, 337, 340, 341, 344, 345, 348, 349, 354, 355, 360, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 397, 404, 405, 406, 407, 408, 409, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 669, 670, 677, 678, 679, 682, 683, 684, 685, 686, 688, 689, 690, 691, 692, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 707, 709, 711, 713, 714, 716, 717, 718, 719, 720, 722, 723, 726, 727, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 742, 743, 744, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 764, 765, 770, 771, 780, 781, 782, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 804, 805, 806, 807, 809, 810, 811, 812, 813, 814, 815, 817, 818, 819, 820, 824, 826, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 979, 980, 981, 986, 987, 988, 989, 992, 995, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1017, 1018, 1019, 1020, 1021, 1024, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1040, 1041, 1043, 1044, 1046, 1048, 1049, 1050, 1062, 1063, 1064, 1065, 1071, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1091, 1094, 1095, 1097, 1099, 1100, 1101, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1143, 1144, 1145, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1175, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1196, 1197, 1199, 1200, 1201, 1205, 1206, 1207, 1209, 1210, 1211, 1212, 1213, 1217, 1221, 1222, 1223, 1224, 1251], "\u03c5": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 226, 227, 229, 230, 231, 232, 234, 236, 237, 244, 247, 250, 251, 252, 253, 257, 260, 263, 266, 268, 269, 273, 276, 279, 281, 284, 290, 294, 295, 296, 297, 298, 305, 306, 308, 315, 316, 317, 318, 319, 326, 327, 332, 333, 334, 337, 340, 341, 344, 345, 348, 349, 354, 355, 360, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 397, 404, 405, 406, 407, 408, 409, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 669, 670, 677, 678, 679, 682, 683, 684, 685, 686, 688, 689, 690, 691, 692, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 707, 709, 711, 713, 714, 716, 717, 718, 719, 720, 722, 723, 726, 727, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 742, 743, 744, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 764, 765, 770, 771, 780, 781, 782, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 804, 805, 806, 807, 809, 810, 811, 812, 813, 814, 815, 817, 818, 819, 820, 824, 826, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 979, 980, 981, 986, 987, 988, 989, 992, 995, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1017, 1018, 1019, 1020, 1021, 1024, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1040, 1041, 1043, 1044, 1046, 1048, 1049, 1050, 1062, 1063, 1064, 1065, 1071, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1091, 1094, 1095, 1097, 1099, 1100, 1101, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1143, 1144, 1145, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1175, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1196, 1197, 1199, 1200, 1201, 1205, 1206, 1207, 1209, 1210, 1211, 1212, 1213, 1217, 1221, 1222, 1223, 1224, 1251], "\u03b5": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 226, 227, 229, 230, 231, 232, 234, 236, 237, 244, 247, 250, 251, 252, 253, 257, 260, 263, 266, 268, 269, 273, 276, 279, 281, 284, 290, 294, 295, 296, 297, 298, 305, 306, 308, 315, 316, 317, 318, 319, 326, 327, 332, 333, 334, 337, 340, 341, 344, 345, 348, 349, 354, 355, 360, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 397, 404, 405, 406, 407, 408, 409, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 669, 670, 677, 678, 679, 682, 683, 684, 685, 686, 688, 689, 690, 691, 692, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 707, 709, 711, 713, 714, 716, 717, 718, 719, 720, 722, 723, 726, 727, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 742, 743, 744, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 764, 765, 770, 771, 780, 781, 782, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 804, 805, 806, 807, 809, 810, 811, 812, 813, 814, 815, 817, 818, 819, 820, 824, 826, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 979, 980, 981, 986, 987, 988, 989, 992, 995, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1017, 1018, 1019, 1020, 1021, 1024, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1040, 1041, 1043, 1044, 1046, 1048, 1049, 1050, 1062, 1063, 1064, 1065, 1071, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1091, 1094, 1095, 1097, 1099, 1100, 1101, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1143, 1144, 1145, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1175, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1196, 1197, 1199, 1200, 1201, 1205, 1206, 1207, 1209, 1210, 1211, 1212, 1213, 1217, 1221, 1222, 1223, 1224, 1251], "\u03f0": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 226, 227, 229, 230, 231, 232, 234, 236, 237, 244, 247, 250, 251, 252, 253, 257, 260, 263, 266, 268, 269, 273, 276, 279, 281, 284, 290, 294, 295, 296, 297, 298, 305, 306, 308, 315, 316, 317, 318, 319, 326, 327, 332, 333, 334, 337, 340, 341, 344, 345, 348, 349, 354, 355, 360, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 397, 404, 405, 406, 407, 408, 409, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 669, 670, 677, 678, 679, 682, 683, 684, 685, 686, 688, 689, 690, 691, 692, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 707, 709, 711, 713, 714, 716, 717, 718, 719, 720, 722, 723, 726, 727, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 742, 743, 744, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 764, 765, 770, 771, 780, 781, 782, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 804, 805, 806, 807, 809, 810, 811, 812, 813, 814, 815, 817, 818, 819, 820, 824, 826, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 979, 980, 981, 986, 987, 988, 989, 992, 995, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1017, 1018, 1019, 1020, 1021, 1024, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1040, 1041, 1043, 1044, 1046, 1048, 1049, 1050, 1062, 1063, 1064, 1065, 1071, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1091, 1094, 1095, 1097, 1099, 1100, 1101, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1143, 1144, 1145, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1175, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1196, 1197, 1199, 1200, 1201, 1205, 1206, 1207, 1209, 1210, 1211, 1212, 1213, 1217, 1221, 1222, 1223, 1224, 1251], "\u03c6": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 226, 227, 229, 230, 231, 232, 234, 236, 237, 244, 247, 250, 251, 252, 253, 257, 260, 263, 266, 268, 269, 273, 276, 279, 281, 284, 290, 294, 295, 296, 297, 298, 305, 306, 308, 315, 316, 317, 318, 319, 326, 327, 332, 333, 334, 337, 340, 341, 344, 345, 348, 349, 354, 355, 360, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 397, 404, 405, 406, 407, 408, 409, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 669, 670, 677, 678, 679, 682, 683, 684, 685, 686, 688, 689, 690, 691, 692, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 707, 709, 711, 713, 714, 716, 717, 718, 719, 720, 722, 723, 726, 727, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 742, 743, 744, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 764, 765, 770, 771, 780, 781, 782, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 804, 805, 806, 807, 809, 810, 811, 812, 813, 814, 815, 817, 818, 819, 820, 824, 826, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 979, 980, 981, 986, 987, 988, 989, 992, 995, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1017, 1018, 1019, 1020, 1021, 1024, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1040, 1041, 1043, 1044, 1046, 1048, 1049, 1050, 1062, 1063, 1064, 1065, 1071, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1091, 1094, 1095, 1097, 1099, 1100, 1101, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1143, 1144, 1145, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1175, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1196, 1197, 1199, 1200, 1201, 1205, 1206, 1207, 1209, 1210, 1211, 1212, 1213, 1217, 1221, 1222, 1223, 1224, 1251], "\u03d6": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 226, 227, 229, 230, 231, 232, 234, 236, 237, 244, 247, 250, 251, 252, 253, 257, 260, 263, 266, 268, 269, 273, 276, 279, 281, 284, 290, 294, 295, 296, 297, 298, 305, 306, 308, 315, 316, 317, 318, 319, 326, 327, 332, 333, 334, 337, 340, 341, 344, 345, 348, 349, 354, 355, 360, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 397, 404, 405, 406, 407, 408, 409, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 669, 670, 677, 678, 679, 682, 683, 684, 685, 686, 688, 689, 690, 691, 692, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 707, 709, 711, 713, 714, 716, 717, 718, 719, 720, 722, 723, 726, 727, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 742, 743, 744, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 764, 765, 770, 771, 780, 781, 782, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 804, 805, 806, 807, 809, 810, 811, 812, 813, 814, 815, 817, 818, 819, 820, 824, 826, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 979, 980, 981, 986, 987, 988, 989, 992, 995, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1017, 1018, 1019, 1020, 1021, 1024, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1040, 1041, 1043, 1044, 1046, 1048, 1049, 1050, 1062, 1063, 1064, 1065, 1071, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1091, 1094, 1095, 1097, 1099, 1100, 1101, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1143, 1144, 1145, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1175, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1196, 1197, 1199, 1200, 1201, 1205, 1206, 1207, 1209, 1210, 1211, 1212, 1213, 1217, 1221, 1222, 1223, 1224, 1251], "\u03f1": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 226, 227, 229, 230, 231, 232, 234, 236, 237, 244, 247, 250, 251, 252, 253, 257, 260, 263, 266, 268, 269, 273, 276, 279, 281, 284, 290, 294, 295, 296, 297, 298, 305, 306, 308, 315, 316, 317, 318, 319, 326, 327, 332, 333, 334, 337, 340, 341, 344, 345, 348, 349, 354, 355, 360, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 397, 404, 405, 406, 407, 408, 409, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 669, 670, 677, 678, 679, 682, 683, 684, 685, 686, 688, 689, 690, 691, 692, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 707, 709, 711, 713, 714, 716, 717, 718, 719, 720, 722, 723, 726, 727, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 742, 743, 744, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 764, 765, 770, 771, 780, 781, 782, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 804, 805, 806, 807, 809, 810, 811, 812, 813, 814, 815, 817, 818, 819, 820, 824, 826, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 979, 980, 981, 986, 987, 988, 989, 992, 995, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1017, 1018, 1019, 1020, 1021, 1024, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1040, 1041, 1043, 1044, 1046, 1048, 1049, 1050, 1062, 1063, 1064, 1065, 1071, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1091, 1094, 1095, 1097, 1099, 1100, 1101, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1143, 1144, 1145, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1175, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1196, 1197, 1199, 1200, 1201, 1205, 1206, 1207, 1209, 1210, 1211, 1212, 1213, 1217, 1221, 1222, 1223, 1224, 1251], "\u03c2": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 226, 227, 229, 230, 231, 232, 234, 236, 237, 244, 247, 250, 251, 252, 253, 257, 260, 263, 266, 268, 269, 273, 276, 279, 281, 284, 290, 294, 295, 296, 297, 298, 305, 306, 308, 315, 316, 317, 318, 319, 326, 327, 332, 333, 334, 337, 340, 341, 344, 345, 348, 349, 354, 355, 360, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 397, 404, 405, 406, 407, 408, 409, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 669, 670, 677, 678, 679, 682, 683, 684, 685, 686, 688, 689, 690, 691, 692, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 707, 709, 711, 713, 714, 716, 717, 718, 719, 720, 722, 723, 726, 727, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 742, 743, 744, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 764, 765, 770, 771, 780, 781, 782, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 804, 805, 806, 807, 809, 810, 811, 812, 813, 814, 815, 817, 818, 819, 820, 824, 826, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 979, 980, 981, 986, 987, 988, 989, 992, 995, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1017, 1018, 1019, 1020, 1021, 1024, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1040, 1041, 1043, 1044, 1046, 1048, 1049, 1050, 1062, 1063, 1064, 1065, 1071, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1091, 1094, 1095, 1097, 1099, 1100, 1101, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1143, 1144, 1145, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1175, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1196, 1197, 1199, 1200, 1201, 1205, 1206, 1207, 1209, 1210, 1211, 1212, 1213, 1217, 1221, 1222, 1223, 1224, 1251], "\u03d1": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 226, 227, 229, 230, 231, 232, 234, 236, 237, 244, 247, 250, 251, 252, 253, 257, 260, 263, 266, 268, 269, 273, 276, 279, 281, 284, 290, 294, 295, 296, 297, 298, 305, 306, 308, 315, 316, 317, 318, 319, 326, 327, 332, 333, 334, 337, 340, 341, 344, 345, 348, 349, 354, 355, 360, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 397, 404, 405, 406, 407, 408, 409, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 669, 670, 677, 678, 679, 682, 683, 684, 685, 686, 688, 689, 690, 691, 692, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 707, 709, 711, 713, 714, 716, 717, 718, 719, 720, 722, 723, 726, 727, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 742, 743, 744, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 764, 765, 770, 771, 780, 781, 782, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 804, 805, 806, 807, 809, 810, 811, 812, 813, 814, 815, 817, 818, 819, 820, 824, 826, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 979, 980, 981, 986, 987, 988, 989, 992, 995, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1017, 1018, 1019, 1020, 1021, 1024, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1040, 1041, 1043, 1044, 1046, 1048, 1049, 1050, 1062, 1063, 1064, 1065, 1071, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1091, 1094, 1095, 1097, 1099, 1100, 1101, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1143, 1144, 1145, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1175, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1196, 1197, 1199, 1200, 1201, 1205, 1206, 1207, 1209, 1210, 1211, 1212, 1213, 1217, 1221, 1222, 1223, 1224, 1251], "\u2128": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 65, 66, 75, 76, 99, 108, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 226, 227, 229, 230, 231, 232, 234, 236, 237, 244, 247, 250, 251, 252, 253, 257, 260, 263, 266, 268, 269, 273, 276, 279, 281, 284, 290, 294, 295, 296, 297, 298, 305, 306, 308, 315, 316, 317, 318, 319, 326, 327, 332, 333, 334, 337, 340, 341, 344, 345, 348, 349, 354, 355, 360, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 397, 404, 405, 406, 407, 408, 409, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 563, 564, 571, 572, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 669, 670, 677, 678, 679, 682, 683, 684, 685, 686, 688, 689, 690, 691, 692, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 707, 709, 711, 713, 714, 716, 717, 718, 719, 720, 722, 723, 726, 727, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 742, 743, 744, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 764, 765, 770, 771, 780, 781, 782, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 804, 805, 806, 807, 809, 810, 811, 812, 813, 814, 815, 817, 818, 819, 820, 824, 826, 828, 829, 830, 831, 838, 842, 843, 845, 846, 848, 850, 851, 853, 855, 856, 858, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 889, 890, 892, 894, 895, 897, 900, 901, 903, 904, 906, 907, 909, 911, 912, 913, 918, 919, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 944, 945, 946, 947, 948, 949, 950, 951, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 979, 980, 981, 986, 987, 988, 989, 992, 995, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1017, 1018, 1019, 1020, 1021, 1024, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1040, 1041, 1043, 1044, 1046, 1048, 1049, 1050, 1062, 1063, 1064, 1065, 1071, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1091, 1094, 1095, 1097, 1099, 1100, 1101, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1143, 1144, 1145, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1175, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1196, 1197, 1199, 1200, 1201, 1205, 1206, 1207, 1209, 1210, 1211, 1212, 1213, 1217, 1221, 1222, 1223, 1224, 1251], "mittwoch": [8, 234, 236, 244], "00": [8, 124, 171, 192, 193, 195, 200, 205, 213, 217, 225, 226, 227, 229, 230, 231, 232, 234, 236, 238, 240, 242, 244, 247, 251, 257, 259, 265, 275, 278, 279, 306, 307, 314, 315, 317, 377, 390, 498, 506, 532, 796, 818, 823, 827, 838, 914, 915, 970, 992, 993, 994, 1046, 1075, 1113, 1221], "cours": [8, 13, 40, 68, 106, 144, 162, 168, 186, 187, 188, 189, 190, 192, 205, 218, 219, 229, 237, 241, 247, 252, 257, 268, 279, 296, 298, 306, 315, 317, 318, 332, 333, 341, 344, 345, 348, 349, 372, 377, 397, 415, 416, 418, 467, 468, 484, 517, 536, 542, 548, 554, 599, 838, 862, 887, 899, 914, 915, 977, 986, 1015, 1022, 1064, 1087, 1088, 1110, 1143, 1175, 1184, 1188, 1201, 1202, 1215, 1241, 1244, 1256], "tectrain": [8, 11, 213, 225, 234, 236, 244, 247, 250, 251, 252, 253, 257, 269, 281, 415], "html": [8, 17, 18, 23, 39, 40, 66, 165, 171, 187, 196, 209, 217, 234, 244, 247, 250, 254, 257, 260, 263, 266, 282, 313, 368, 392, 514, 517, 843, 858, 864, 948, 970, 1056, 1060, 1132, 1199], "download": [8, 17, 62, 108, 155, 171, 178, 189, 195, 197, 201, 205, 210, 213, 222, 229, 234, 242, 244, 247, 250, 251, 252, 257, 260, 263, 273, 276, 279, 281, 284, 287, 290, 299, 302, 309, 313, 320, 337, 357, 363, 367, 388, 417, 507, 512, 516, 518, 519, 520, 522, 524, 525, 526, 528, 534, 591, 592, 593, 594, 595, 596, 597, 600, 601, 646, 726, 732, 734, 738, 739, 761, 762, 763, 766, 767, 768, 769, 771, 772, 773, 774, 775, 776, 777, 778, 779, 793, 795, 948, 950, 970, 972, 985, 992, 993, 994, 1004, 1015, 1065, 1071, 1077, 1111, 1145, 1157, 1166, 1176, 1177, 1179, 1190, 1192, 1194, 1216], "repositori": [8, 23, 79, 99, 111, 124, 168, 177, 186, 193, 196, 204, 208, 217, 219, 226, 227, 237, 242, 244, 247, 251, 252, 253, 257, 260, 263, 268, 269, 273, 276, 279, 281, 284, 290, 298, 306, 316, 317, 319, 323, 329, 333, 334, 337, 341, 345, 349, 351, 355, 357, 363, 367, 372, 374, 376, 377, 379, 381, 382, 396, 397, 402, 590, 607, 642, 840, 887, 1230, 1235], "kurssprach": [8, 234, 244, 253, 269, 281], "kurs": [8, 23, 187, 204, 225, 236, 244, 253, 269, 281, 1235, 1236, 1237, 1245, 1252, 1259], "viel": [8, 23, 208, 213, 217, 223, 234, 244, 253, 259, 269, 270, 281, 300, 1238, 1239, 1245, 1253, 1254], "spezifisch": [8, 234, 244, 253, 269, 281, 1236, 1255, 1258], "unterrichtet": [8, 234, 244, 253, 269, 281], "themenreihenfolg": [8, 234, 244, 253, 269, 281], "herdt": [8, 183, 244, 253, 269, 281], "skriptum": [8, 234, 244, 253, 269, 281, 1251], "\u00fcbernommen": [8, 234, 244, 253, 269, 281], "etwa": [8, 23, 198, 199, 208, 213, 223, 225, 234, 244, 246, 253, 269, 281, 415, 1236, 1238, 1245, 1251, 1252, 1254, 1259], "allgemein": [8, 234, 244, 253, 269, 281, 1251], "allgemeinen": [8, 234, 238, 244, 253, 269, 281, 1254], "dadurch": [8, 234, 244, 253, 269, 281, 415, 1238, 1258], "verwirrend": [8, 234, 244, 253, 269, 281, 1251], "weswegen": [8, 234, 244, 253, 269, 281], "vielen": [8, 23, 208, 233, 244, 253, 269, 281, 415, 1245, 1247], "f\u00e4llen": [8, 23, 163, 166, 234, 244, 253, 269, 281], "ausnahmen": [8, 163, 166, 234, 244, 253, 269, 281], "gemacht": [8, 23, 198, 204, 234, 244, 253, 269, 281, 1251, 1259], "kursstruktur": [8, 244], "sieh": [8, 23, 163, 166, 207, 208, 209, 213, 217, 223, 234, 236, 239, 244, 253, 269, 281, 415, 1236, 1237, 1251], "jjj": [8, 137, 187, 231, 236, 244, 266, 314, 319, 406, 842, 843, 844, 848, 856], "hello": [8, 29, 62, 92, 183, 201, 223, 229, 233, 234, 236, 240, 244, 246, 247, 251, 253, 255, 257, 259, 260, 263, 265, 268, 269, 270, 272, 273, 279, 280, 281, 282, 284, 285, 287, 289, 302, 303, 309, 312, 320, 322, 323, 328, 329, 342, 350, 351, 352, 356, 357, 362, 363, 366, 367, 368, 383, 384, 385, 386, 387, 388, 392, 393, 397, 432, 435, 439, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 508, 509, 510, 511, 516, 518, 519, 525, 532, 534, 535, 537, 538, 539, 540, 649, 652, 722, 745, 751, 754, 771, 776, 777, 778, 779, 783, 837, 839, 840, 844, 847, 849, 852, 854, 857, 864, 868, 872, 878, 884, 889, 891, 896, 899, 902, 905, 908, 914, 915, 918, 919, 952, 954, 959, 960, 967, 984, 995, 1017, 1041, 1062, 1063, 1064, 1065, 1075, 1077, 1079, 1080, 1081, 1088, 1095, 1096, 1097, 1098, 1102, 1110, 1114, 1115, 1121, 1124, 1126, 1130, 1131, 1141, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1160, 1161, 1162, 1163, 1164, 1165, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1198, 1201, 1202, 1208, 1212, 1215, 1237, 1251], "py": [8, 17, 21, 32, 40, 62, 65, 66, 170, 171, 186, 205, 209, 210, 213, 221, 222, 223, 226, 227, 229, 231, 241, 244, 250, 256, 259, 263, 265, 266, 269, 270, 273, 275, 276, 278, 279, 281, 282, 288, 290, 302, 308, 309, 310, 318, 319, 323, 324, 329, 340, 341, 346, 359, 367, 368, 382, 397, 506, 507, 785, 992, 1048, 1050, 1084, 1087, 1089, 1090, 1094, 1095, 1097, 1113, 1114, 1116, 1122, 1139, 1142, 1143, 1144, 1145, 1149, 1150, 1152, 1153, 1155, 1157, 1162, 1166, 1168, 1170, 1172, 1173, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1190, 1191, 1196, 1204, 1209, 1210, 1221, 1222], "swap": [8, 29, 192, 228, 234, 244, 246, 253, 265, 268, 269, 281, 286, 287, 296, 305, 306, 326, 327, 368, 370, 472, 476, 479, 483, 492, 496, 501, 502, 620, 745, 783, 837, 839, 840, 873, 917, 929, 930, 984, 1117, 1147, 1149, 1150, 1151, 1152, 1154, 1186, 1251, 1255], "exercis": [8, 29, 80, 95, 99, 104, 106, 108, 126, 127, 139, 142, 143, 144, 148, 150, 151, 154, 162, 187, 209, 217, 222, 229, 230, 234, 236, 241, 244, 247, 253, 257, 260, 263, 264, 266, 269, 273, 276, 279, 281, 284, 286, 287, 296, 298, 305, 309, 311, 312, 326, 327, 331, 345, 349, 356, 370, 375, 377, 378, 382, 383, 384, 385, 386, 388, 396, 399, 402, 410, 411, 428, 435, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 541, 549, 589, 610, 611, 612, 613, 615, 616, 617, 622, 642, 709, 710, 724, 745, 783, 811, 839, 840, 841, 848, 910, 914, 915, 917, 922, 929, 939, 941, 943, 968, 978, 984, 1000, 1023, 1025, 1034, 1042, 1061, 1068, 1069, 1110, 1111, 1146, 1175, 1186, 1187, 1221, 1241, 1244, 1246, 1251, 1256], "greet": [8, 29, 223, 234, 244, 247, 253, 259, 260, 269, 270, 272, 278, 279, 281, 284, 287, 302, 303, 393, 510, 840, 1063, 1064, 1071, 1081, 1147, 1149, 1151, 1154, 1186, 1251], "depend": [8, 13, 28, 29, 62, 80, 116, 121, 122, 126, 144, 183, 186, 187, 190, 191, 197, 201, 220, 222, 234, 244, 247, 252, 253, 259, 260, 265, 266, 269, 275, 278, 279, 281, 284, 287, 302, 319, 327, 333, 349, 373, 374, 377, 380, 397, 412, 420, 436, 438, 446, 449, 465, 482, 494, 500, 504, 507, 509, 511, 514, 518, 531, 537, 542, 549, 555, 589, 601, 627, 629, 637, 717, 744, 792, 815, 838, 840, 846, 899, 910, 917, 922, 929, 932, 943, 968, 978, 985, 993, 1011, 1062, 1063, 1065, 1075, 1079, 1081, 1088, 1110, 1111, 1113, 1147, 1151, 1160, 1186, 1215, 1216, 1246, 1248, 1251], "time": [8, 29, 36, 38, 43, 53, 62, 75, 78, 87, 91, 100, 112, 113, 124, 126, 127, 131, 139, 144, 147, 159, 162, 165, 171, 180, 189, 190, 191, 192, 194, 195, 197, 210, 211, 214, 222, 226, 228, 229, 230, 234, 240, 242, 244, 247, 249, 251, 252, 253, 259, 260, 262, 265, 266, 269, 270, 278, 279, 281, 284, 285, 287, 288, 302, 303, 306, 309, 310, 312, 315, 316, 318, 319, 320, 324, 327, 337, 340, 341, 344, 346, 351, 352, 357, 358, 364, 372, 377, 383, 404, 415, 432, 440, 454, 460, 463, 486, 488, 493, 494, 497, 498, 499, 500, 504, 507, 524, 526, 532, 535, 542, 543, 546, 552, 601, 631, 644, 651, 653, 694, 695, 750, 757, 771, 785, 793, 795, 806, 813, 817, 838, 840, 858, 860, 864, 865, 867, 879, 885, 887, 889, 902, 905, 908, 912, 918, 919, 920, 921, 927, 928, 932, 948, 979, 984, 985, 992, 993, 994, 1004, 1014, 1020, 1021, 1022, 1026, 1029, 1030, 1032, 1035, 1038, 1044, 1046, 1047, 1048, 1049, 1050, 1055, 1078, 1079, 1085, 1089, 1095, 1098, 1099, 1110, 1111, 1112, 1115, 1122, 1125, 1128, 1129, 1147, 1149, 1151, 1154, 1186, 1192, 1201, 1206, 1216, 1246, 1251, 1257], "dai": [8, 12, 29, 191, 192, 194, 200, 203, 206, 209, 210, 214, 228, 234, 244, 247, 253, 255, 264, 269, 278, 279, 281, 284, 287, 302, 310, 314, 337, 403, 405, 406, 415, 505, 516, 517, 536, 542, 563, 840, 904, 944, 1009, 1046, 1088, 1110, 1117, 1126, 1147, 1149, 1151, 1154, 1186, 1187, 1194, 1215, 1242, 1243, 1244, 1246, 1251, 1256], "hen": [8, 244], "vehikelkauf": [8, 244], "datentypen": [8, 213, 217, 234, 235, 241, 244, 275, 293, 398, 1238, 1251, 1258], "\u00fcbersicht": [8, 234, 244, 247, 257, 260, 263], "git": [8, 13, 23, 60, 66, 74, 75, 76, 80, 125, 126, 127, 143, 169, 177, 182, 194, 196, 204, 217, 218, 219, 222, 239, 241, 242, 244, 266, 268, 279, 290, 295, 297, 315, 316, 317, 403, 404, 410, 411, 530, 534, 588, 599, 662, 840, 862, 887, 888, 948, 987, 992, 1077, 1078, 1143, 1230, 1235], "scm": [8, 60, 66, 193, 217, 244, 860], "com": [8, 13, 20, 23, 37, 42, 44, 50, 66, 87, 108, 124, 126, 138, 147, 148, 152, 155, 162, 165, 168, 170, 171, 186, 195, 196, 197, 201, 205, 217, 218, 219, 220, 226, 227, 230, 231, 239, 244, 246, 252, 266, 268, 278, 290, 295, 297, 303, 306, 309, 310, 315, 316, 317, 319, 323, 329, 333, 334, 337, 341, 345, 349, 351, 355, 357, 363, 367, 372, 374, 375, 376, 377, 378, 379, 381, 396, 397, 402, 408, 417, 507, 512, 513, 514, 515, 528, 530, 585, 599, 620, 662, 682, 683, 684, 685, 686, 688, 689, 690, 691, 694, 703, 722, 805, 887, 888, 948, 987, 992, 995, 1003, 1004, 1065, 1077, 1143, 1201, 1205, 1206, 1207, 1209, 1210, 1211, 1212], "pep": [8, 186, 234, 244, 316, 318, 319, 340, 341], "The": [8, 13, 17, 29, 30, 40, 49, 53, 57, 61, 62, 63, 80, 86, 92, 101, 108, 109, 110, 111, 112, 113, 121, 126, 128, 129, 130, 131, 132, 134, 136, 137, 143, 144, 148, 152, 159, 163, 166, 169, 171, 183, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 200, 202, 205, 206, 207, 210, 211, 213, 214, 218, 219, 220, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 241, 242, 244, 247, 250, 253, 257, 258, 259, 260, 263, 264, 265, 268, 269, 272, 273, 275, 276, 278, 281, 282, 284, 287, 289, 292, 294, 295, 296, 297, 299, 302, 305, 308, 309, 312, 315, 317, 319, 322, 323, 325, 326, 328, 329, 345, 347, 350, 351, 352, 356, 357, 359, 362, 363, 366, 367, 369, 370, 372, 373, 374, 383, 384, 385, 386, 387, 388, 394, 397, 398, 399, 400, 402, 403, 414, 415, 416, 419, 421, 429, 435, 443, 445, 447, 448, 449, 450, 455, 459, 463, 466, 472, 476, 479, 482, 483, 486, 492, 494, 496, 501, 505, 517, 519, 533, 534, 535, 542, 543, 544, 547, 548, 553, 562, 563, 564, 566, 568, 570, 585, 588, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 602, 604, 607, 609, 642, 643, 645, 649, 650, 652, 661, 662, 663, 664, 665, 668, 671, 679, 687, 693, 697, 706, 709, 710, 715, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 744, 745, 748, 752, 754, 759, 764, 770, 783, 784, 793, 794, 795, 799, 808, 815, 816, 821, 825, 834, 837, 838, 840, 841, 848, 850, 860, 862, 865, 881, 887, 889, 892, 910, 912, 914, 915, 916, 917, 920, 921, 922, 925, 926, 929, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 945, 947, 950, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 963, 964, 966, 978, 984, 988, 992, 993, 994, 1007, 1009, 1013, 1015, 1018, 1019, 1020, 1021, 1023, 1025, 1028, 1032, 1033, 1035, 1036, 1039, 1042, 1045, 1046, 1047, 1056, 1059, 1060, 1063, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1077, 1078, 1079, 1080, 1081, 1082, 1086, 1088, 1089, 1092, 1093, 1096, 1097, 1098, 1100, 1101, 1102, 1109, 1111, 1113, 1115, 1116, 1123, 1127, 1130, 1134, 1135, 1137, 1138, 1139, 1141, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1194, 1195, 1197, 1198, 1201, 1202, 1204, 1208, 1210, 1215, 1218, 1221, 1223, 1225, 1228, 1238, 1240, 1241, 1242, 1244, 1251], "zen": [8, 193, 234, 244, 272, 283, 316, 760], "corei": [8, 211, 222, 225, 226, 229, 231, 234, 236, 242, 244, 247, 250, 257, 260, 263, 273, 276, 287, 290, 299, 323, 329, 357, 397, 402, 1188, 1206, 1207, 1209, 1210, 1211, 1212, 1214, 1224], "schaefer": [8, 231, 234, 236, 242, 244], "youtub": [8, 20, 197, 211, 222, 225, 227, 229, 231, 234, 236, 244, 251, 318, 319, 340, 344, 358, 383], "channel": [8, 139, 195, 211, 234, 244, 985, 993, 1055], "trainer": [8, 12, 23, 24, 61, 63, 67, 197, 216, 217, 222, 234, 244, 295, 297, 315, 517, 535, 536, 599, 646, 795, 993, 1088, 1095, 1110, 1111, 1187, 1202, 1214, 1215, 1221, 1241, 1246], "hacker": [8, 234, 244, 1246], "schier": [8, 234, 244], "anzahl": [8, 234, 244], "sehr": [8, 23, 37, 163, 166, 198, 199, 213, 217, 223, 225, 233, 234, 238, 244, 275, 415, 1236, 1238, 1245, 1248, 1251, 1252, 1254, 1259], "guten": [8, 213, 223, 225, 234, 244, 278, 282, 415, 1240], "tutori": [8, 171, 197, 211, 222, 225, 230, 234, 242, 244, 250, 251, 253, 260, 263, 273, 276, 299, 329, 341, 357, 383, 397, 402, 948, 994, 1139, 1142, 1206, 1207, 1209, 1210, 1211, 1212, 1214, 1224], "stil": [8, 234, 244], "besser": [8, 23, 198, 209, 233, 234, 244, 254, 1251], "ander": [8, 213, 223, 234, 244, 254, 262, 275, 392, 397, 402, 406, 415, 913, 1236, 1237, 1240, 1245, 1248, 1253, 1257, 1258], "auswahl": [8, 234, 244], "einleitung": [9, 245], "datatyp": [9, 29, 92, 183, 222, 226, 229, 234, 235, 236, 239, 241, 245, 247, 248, 253, 257, 258, 260, 261, 263, 264, 266, 267, 268, 269, 271, 273, 274, 279, 280, 281, 283, 284, 286, 289, 299, 301, 304, 311, 319, 321, 325, 331, 341, 343, 345, 347, 353, 359, 365, 369, 376, 379, 383, 384, 385, 386, 387, 388, 397, 402, 436, 443, 517, 518, 523, 526, 533, 648, 677, 746, 840, 1055, 1088, 1093, 1095, 1096, 1097, 1098, 1102, 1110, 1121, 1130, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1198, 1201, 1202, 1208, 1215, 1251], "number": [9, 24, 27, 29, 36, 53, 57, 61, 62, 63, 70, 80, 82, 84, 86, 87, 112, 113, 124, 127, 131, 133, 143, 159, 180, 183, 189, 191, 192, 195, 197, 200, 201, 205, 208, 210, 213, 219, 222, 226, 229, 232, 233, 234, 236, 241, 242, 245, 247, 248, 250, 253, 257, 259, 260, 262, 263, 265, 266, 269, 271, 272, 273, 275, 278, 279, 281, 283, 284, 286, 287, 288, 290, 295, 297, 299, 302, 303, 309, 310, 315, 316, 317, 318, 319, 320, 322, 323, 324, 328, 329, 332, 340, 341, 344, 345, 346, 348, 350, 351, 352, 356, 357, 358, 362, 363, 366, 367, 368, 372, 383, 388, 397, 404, 415, 420, 422, 424, 426, 428, 429, 430, 436, 440, 442, 443, 454, 465, 481, 485, 490, 494, 498, 504, 506, 510, 514, 518, 519, 524, 554, 555, 563, 588, 596, 598, 601, 603, 614, 620, 647, 667, 675, 678, 685, 701, 726, 727, 736, 739, 748, 760, 786, 793, 795, 838, 840, 846, 848, 855, 858, 867, 869, 881, 883, 889, 897, 901, 912, 920, 921, 928, 954, 973, 975, 977, 979, 981, 993, 1004, 1005, 1008, 1012, 1013, 1014, 1019, 1020, 1021, 1022, 1041, 1046, 1047, 1055, 1056, 1060, 1062, 1086, 1087, 1089, 1091, 1092, 1093, 1103, 1115, 1116, 1117, 1122, 1123, 1133, 1134, 1135, 1137, 1138, 1147, 1150, 1151, 1154, 1157, 1158, 1160, 1161, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1182, 1186, 1187, 1188, 1191, 1196, 1214, 1216, 1221, 1234, 1243, 1246, 1251], "integ": [9, 38, 77, 78, 90, 152, 208, 210, 212, 227, 228, 229, 231, 235, 239, 245, 248, 252, 259, 262, 263, 265, 268, 271, 274, 275, 276, 278, 283, 286, 292, 304, 311, 324, 331, 343, 347, 353, 359, 369, 397, 420, 421, 426, 436, 439, 441, 442, 443, 454, 465, 467, 469, 470, 481, 482, 486, 492, 496, 501, 502, 563, 564, 567, 585, 620, 648, 674, 677, 725, 740, 744, 745, 747, 783, 786, 812, 837, 839, 840, 846, 1022, 1032, 1033, 1034, 1041, 1082, 1095, 1098, 1126, 1132, 1138, 1165, 1209, 1211, 1238, 1242, 1257], "string": [9, 29, 42, 50, 58, 92, 99, 108, 116, 120, 131, 132, 152, 155, 187, 192, 217, 227, 228, 229, 231, 234, 235, 238, 241, 245, 247, 248, 250, 251, 253, 257, 258, 260, 261, 263, 264, 266, 267, 268, 269, 271, 273, 274, 277, 279, 280, 281, 283, 284, 286, 289, 292, 294, 295, 297, 299, 301, 302, 304, 308, 309, 311, 312, 314, 322, 323, 325, 328, 329, 331, 340, 341, 343, 344, 345, 347, 350, 351, 353, 354, 355, 356, 357, 359, 362, 363, 365, 366, 367, 369, 374, 380, 382, 383, 384, 385, 386, 387, 388, 393, 397, 402, 408, 421, 424, 428, 435, 444, 450, 459, 465, 466, 472, 476, 479, 483, 488, 492, 496, 501, 502, 506, 508, 526, 545, 549, 551, 566, 568, 569, 570, 573, 575, 578, 579, 580, 582, 583, 584, 585, 601, 602, 603, 608, 619, 620, 628, 634, 637, 643, 645, 648, 649, 652, 667, 669, 686, 689, 690, 691, 695, 698, 699, 700, 701, 702, 703, 706, 710, 721, 723, 725, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 743, 745, 746, 747, 749, 751, 752, 756, 771, 775, 777, 778, 779, 780, 783, 785, 787, 788, 792, 802, 803, 804, 805, 807, 825, 837, 838, 839, 840, 919, 1011, 1022, 1026, 1029, 1033, 1041, 1046, 1055, 1059, 1087, 1088, 1091, 1099, 1108, 1110, 1115, 1123, 1137, 1145, 1146, 1147, 1152, 1157, 1160, 1161, 1162, 1165, 1168, 1171, 1172, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1188, 1199, 1200, 1201, 1202, 1204, 1207, 1238, 1251], "compound": [9, 29, 92, 183, 226, 229, 234, 235, 236, 245, 247, 253, 257, 258, 260, 261, 263, 264, 266, 267, 269, 271, 273, 274, 279, 280, 281, 283, 284, 286, 287, 289, 301, 302, 309, 312, 319, 321, 322, 323, 325, 328, 329, 331, 340, 341, 343, 344, 345, 347, 350, 351, 356, 357, 359, 362, 363, 365, 366, 367, 369, 383, 384, 385, 386, 387, 388, 397, 420, 451, 470, 840, 1088, 1095, 1096, 1097, 1098, 1102, 1110, 1144, 1145, 1146, 1147, 1155, 1156, 1157, 1160, 1161, 1162, 1163, 1164, 1165, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1198, 1201, 1202, 1208, 1215, 1251], "list": [9, 27, 29, 37, 62, 65, 92, 101, 126, 148, 170, 183, 186, 187, 190, 197, 201, 212, 217, 219, 222, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 238, 241, 242, 245, 247, 248, 250, 253, 257, 258, 260, 261, 263, 264, 266, 267, 268, 269, 271, 273, 274, 275, 280, 281, 283, 284, 286, 287, 289, 291, 295, 296, 299, 301, 302, 304, 305, 306, 309, 311, 312, 315, 316, 317, 321, 322, 323, 325, 326, 327, 328, 329, 331, 340, 341, 343, 344, 345, 346, 350, 351, 353, 356, 357, 359, 362, 363, 365, 366, 367, 369, 370, 371, 373, 377, 382, 389, 392, 394, 397, 401, 402, 403, 415, 473, 479, 483, 484, 492, 496, 498, 500, 501, 502, 506, 513, 516, 518, 520, 522, 528, 531, 534, 546, 548, 549, 588, 590, 598, 601, 634, 636, 638, 642, 646, 647, 652, 677, 693, 706, 710, 730, 740, 745, 748, 783, 791, 797, 802, 815, 816, 837, 838, 839, 840, 841, 849, 853, 854, 857, 864, 865, 868, 878, 889, 891, 895, 896, 902, 905, 908, 913, 914, 915, 916, 917, 920, 921, 922, 928, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 952, 955, 956, 959, 960, 962, 963, 964, 965, 966, 968, 976, 984, 993, 1013, 1015, 1017, 1023, 1025, 1033, 1035, 1039, 1042, 1045, 1047, 1062, 1064, 1080, 1084, 1087, 1088, 1091, 1092, 1093, 1106, 1108, 1110, 1111, 1117, 1118, 1123, 1124, 1125, 1126, 1129, 1135, 1137, 1138, 1139, 1145, 1147, 1157, 1160, 1161, 1162, 1163, 1167, 1168, 1169, 1170, 1171, 1172, 1178, 1180, 1183, 1185, 1186, 1187, 1188, 1193, 1196, 1206, 1209, 1213, 1223, 1228, 1235, 1238, 1251, 1252], "arrai": [9, 99, 110, 126, 213, 234, 235, 240, 245, 247, 251, 252, 254, 260, 268, 273, 278, 287, 290, 294, 295, 315, 323, 329, 368, 374, 420, 429, 435, 439, 450, 459, 466, 476, 479, 483, 485, 487, 488, 491, 492, 496, 501, 502, 600, 603, 626, 634, 637, 675, 676, 678, 680, 682, 685, 686, 691, 695, 707, 728, 735, 736, 737, 738, 739, 740, 743, 745, 783, 791, 806, 824, 837, 839, 840, 858, 919, 925, 1041, 1119, 1123, 1135, 1188, 1191, 1193, 1216, 1251], "javascript": [9, 23, 188, 223, 233, 245, 254, 278, 283, 1082, 1128], "std": [9, 42, 50, 58, 108, 110, 111, 112, 113, 116, 120, 122, 123, 126, 131, 132, 135, 155, 162, 201, 217, 218, 245, 293, 306, 315, 317, 380, 507, 508, 511, 513, 535, 542, 545, 547, 549, 551, 556, 563, 566, 568, 569, 570, 573, 574, 575, 578, 579, 580, 581, 582, 583, 584, 585, 588, 590, 591, 596, 598, 600, 601, 602, 604, 605, 606, 607, 618, 620, 628, 638, 642, 645, 646, 648, 653, 654, 655, 659, 667, 669, 673, 674, 675, 676, 677, 682, 683, 684, 685, 686, 688, 689, 690, 694, 695, 697, 700, 701, 702, 703, 706, 707, 710, 711, 713, 714, 717, 719, 720, 721, 723, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 737, 738, 740, 745, 747, 750, 751, 752, 753, 754, 756, 757, 758, 760, 761, 762, 763, 765, 766, 767, 768, 769, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 783, 785, 787, 788, 790, 795, 798, 801, 805, 808, 810, 816, 821, 824, 826, 828, 834, 836, 837, 839, 840, 992, 1026, 1029, 1033, 1041, 1043, 1055, 1059, 1193, 1228, 1233, 1241], "vector": [9, 13, 108, 110, 112, 113, 126, 131, 132, 135, 162, 217, 245, 251, 268, 294, 295, 308, 314, 315, 317, 355, 368, 380, 547, 549, 573, 574, 590, 591, 598, 604, 605, 606, 607, 618, 636, 638, 642, 646, 648, 653, 658, 682, 684, 685, 686, 688, 691, 693, 706, 710, 724, 727, 728, 735, 736, 737, 738, 740, 746, 747, 751, 756, 757, 758, 765, 766, 767, 768, 769, 771, 791, 792, 795, 819, 825, 834, 836, 840, 1059, 1116, 1195, 1212, 1233], "dictionari": [9, 29, 62, 92, 212, 222, 227, 228, 229, 231, 234, 235, 236, 239, 241, 245, 247, 248, 253, 257, 258, 260, 261, 263, 264, 266, 267, 269, 271, 273, 274, 277, 280, 281, 283, 284, 286, 287, 289, 292, 299, 301, 302, 304, 309, 311, 312, 316, 318, 319, 321, 322, 323, 325, 328, 329, 331, 334, 337, 340, 341, 343, 344, 345, 347, 350, 351, 353, 356, 357, 359, 362, 363, 365, 366, 367, 369, 397, 402, 405, 792, 840, 1088, 1091, 1095, 1096, 1097, 1098, 1101, 1102, 1106, 1110, 1145, 1147, 1155, 1160, 1165, 1166, 1171, 1174, 1175, 1176, 1178, 1180, 1181, 1186, 1188, 1196, 1206, 1213, 1215, 1251], "valu": [9, 58, 86, 110, 126, 127, 131, 132, 138, 143, 144, 152, 190, 192, 194, 205, 207, 209, 210, 211, 223, 227, 229, 231, 233, 238, 240, 245, 246, 247, 249, 250, 251, 252, 254, 255, 257, 259, 260, 262, 263, 265, 266, 268, 270, 272, 273, 275, 278, 282, 285, 287, 288, 299, 300, 303, 306, 308, 310, 320, 323, 324, 329, 330, 342, 346, 352, 355, 357, 359, 364, 368, 374, 383, 391, 397, 419, 424, 426, 428, 429, 439, 442, 443, 444, 452, 454, 455, 463, 465, 467, 468, 473, 484, 488, 490, 492, 496, 501, 502, 506, 507, 508, 510, 514, 518, 519, 524, 525, 526, 531, 535, 544, 547, 549, 563, 564, 566, 569, 573, 575, 578, 580, 581, 583, 594, 595, 596, 598, 601, 608, 620, 637, 646, 647, 648, 651, 657, 660, 698, 700, 702, 703, 722, 745, 747, 748, 754, 765, 771, 774, 777, 778, 779, 783, 792, 803, 817, 819, 834, 837, 839, 840, 843, 846, 865, 867, 869, 871, 887, 897, 919, 933, 984, 993, 1014, 1022, 1024, 1025, 1027, 1028, 1029, 1032, 1035, 1041, 1044, 1055, 1056, 1059, 1060, 1080, 1082, 1084, 1087, 1091, 1095, 1097, 1099, 1106, 1117, 1118, 1119, 1127, 1129, 1132, 1134, 1135, 1139, 1145, 1148, 1153, 1155, 1158, 1165, 1167, 1188, 1191, 1193, 1196, 1199, 1200, 1206, 1207, 1210, 1211, 1212, 1228], "map": [9, 32, 34, 42, 61, 63, 108, 110, 111, 131, 132, 162, 192, 199, 217, 223, 237, 239, 241, 245, 247, 248, 250, 251, 254, 262, 263, 265, 280, 294, 295, 297, 303, 315, 317, 324, 343, 354, 357, 358, 373, 374, 397, 500, 545, 549, 578, 582, 583, 584, 590, 601, 607, 636, 638, 642, 697, 700, 701, 702, 703, 706, 710, 740, 743, 747, 751, 757, 783, 802, 803, 804, 806, 839, 840, 871, 883, 1046, 1055, 1056, 1105, 1109, 1118, 1119, 1138, 1195, 1245, 1255], "mathematisch": [9, 245, 303], "mengen": [9, 234, 235, 245, 1251], "while": [9, 13, 29, 53, 54, 62, 92, 116, 122, 159, 183, 194, 196, 197, 205, 211, 222, 226, 227, 229, 230, 231, 232, 234, 235, 236, 238, 240, 241, 242, 245, 246, 247, 249, 250, 253, 254, 255, 257, 259, 260, 263, 264, 265, 268, 269, 271, 273, 274, 276, 277, 279, 280, 281, 282, 284, 286, 287, 289, 299, 302, 303, 309, 311, 312, 316, 318, 322, 323, 324, 328, 329, 330, 340, 341, 342, 344, 350, 351, 353, 356, 357, 359, 362, 363, 365, 366, 367, 369, 372, 383, 384, 385, 386, 387, 388, 389, 397, 400, 402, 420, 422, 426, 428, 430, 437, 442, 444, 458, 459, 465, 466, 470, 472, 476, 479, 480, 483, 485, 487, 492, 494, 496, 501, 502, 517, 523, 524, 528, 533, 537, 544, 549, 563, 570, 588, 637, 673, 677, 678, 681, 683, 685, 688, 703, 727, 733, 743, 745, 756, 771, 772, 773, 779, 783, 804, 815, 817, 834, 837, 839, 840, 864, 867, 875, 877, 887, 889, 895, 896, 902, 905, 908, 920, 921, 925, 932, 984, 985, 992, 993, 1005, 1010, 1011, 1012, 1013, 1020, 1029, 1035, 1040, 1041, 1044, 1046, 1052, 1055, 1059, 1075, 1080, 1088, 1089, 1090, 1091, 1095, 1098, 1110, 1111, 1115, 1120, 1125, 1137, 1144, 1145, 1146, 1147, 1151, 1157, 1159, 1160, 1161, 1163, 1167, 1168, 1169, 1170, 1171, 1172, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1188, 1194, 1195, 1198, 1202, 1215, 1238, 1242, 1244, 1246, 1251], "function": [9, 21, 29, 38, 50, 61, 62, 63, 80, 82, 84, 92, 99, 112, 113, 126, 127, 144, 147, 152, 155, 183, 187, 190, 192, 201, 209, 222, 223, 225, 226, 227, 229, 230, 231, 232, 234, 235, 236, 238, 241, 242, 245, 247, 248, 250, 251, 253, 257, 258, 260, 261, 263, 264, 265, 266, 268, 269, 271, 273, 274, 275, 276, 279, 280, 281, 283, 284, 285, 289, 292, 293, 300, 302, 304, 306, 308, 309, 311, 312, 315, 317, 318, 319, 320, 322, 323, 325, 328, 329, 330, 336, 343, 345, 346, 353, 359, 365, 369, 374, 376, 379, 382, 392, 393, 399, 400, 402, 415, 419, 420, 426, 429, 433, 434, 435, 440, 445, 449, 450, 458, 459, 460, 461, 463, 465, 470, 472, 473, 476, 477, 478, 479, 481, 483, 484, 485, 487, 492, 494, 496, 498, 501, 502, 505, 517, 518, 523, 531, 533, 538, 547, 552, 564, 585, 589, 590, 601, 604, 605, 606, 607, 609, 618, 631, 637, 642, 646, 649, 652, 654, 655, 656, 657, 663, 671, 673, 687, 693, 697, 706, 709, 710, 717, 720, 722, 723, 724, 725, 728, 729, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 745, 747, 748, 751, 752, 760, 763, 769, 771, 780, 781, 782, 783, 785, 787, 788, 793, 799, 803, 805, 806, 816, 824, 825, 826, 828, 829, 830, 837, 838, 839, 840, 851, 854, 857, 858, 864, 868, 871, 875, 878, 881, 887, 889, 891, 896, 902, 903, 905, 906, 907, 908, 917, 920, 921, 922, 984, 992, 1005, 1007, 1013, 1014, 1015, 1022, 1023, 1025, 1030, 1031, 1032, 1038, 1039, 1041, 1042, 1045, 1047, 1060, 1062, 1071, 1081, 1088, 1091, 1092, 1093, 1094, 1102, 1110, 1112, 1115, 1116, 1120, 1122, 1144, 1145, 1146, 1147, 1150, 1153, 1154, 1157, 1158, 1159, 1160, 1165, 1168, 1169, 1171, 1172, 1173, 1181, 1182, 1183, 1184, 1185, 1186, 1188, 1193, 1198, 1204, 1217, 1221, 1233, 1241, 1242, 1243, 1251], "xx": [10, 259, 290, 324, 330, 346, 352, 368, 381], "yy": 10, "kur": [11, 23, 208, 210, 213, 225, 415, 1236, 1237, 1238, 1239, 1240, 1245, 1247, 1248, 1254, 1255, 1257], "fand": [11, 225, 415], "team": [11, 124, 127, 144, 197, 202, 205, 206, 217, 225, 226, 227, 242, 251, 276, 318, 415, 927, 933, 940, 942, 1089, 1187, 1235, 1243], "statt": [11, 23, 163, 166, 225, 415, 1252, 1253, 1259], "wurd": [11, 199, 213, 217, 223, 225, 234, 397, 402, 415, 1240, 1251, 1252, 1258], "\u00fcber": [11, 23, 163, 166, 198, 199, 204, 208, 209, 213, 217, 225, 234, 235, 239, 248, 253, 279, 398, 415, 1235, 1245, 1251, 1252, 1257, 1258], "meinen": [11, 23, 225, 253, 269, 281, 415], "partner": [11, 23, 225, 415, 1235], "durat": [12, 27, 195, 205, 477, 517, 536, 601, 813, 817, 818, 1088, 1110, 1187, 1215, 1243, 1244, 1246, 1256], "each": [12, 40, 62, 78, 108, 112, 113, 132, 135, 159, 190, 191, 192, 205, 211, 229, 230, 242, 259, 262, 265, 275, 278, 282, 315, 317, 324, 382, 388, 394, 397, 402, 470, 495, 498, 500, 544, 552, 585, 599, 600, 656, 743, 818, 825, 838, 875, 883, 887, 914, 920, 921, 942, 946, 948, 992, 993, 994, 1032, 1036, 1044, 1079, 1091, 1094, 1099, 1105, 1166, 1187, 1193, 1195, 1196, 1197, 1212, 1216, 1246, 1256], "about": [12, 23, 29, 30, 39, 42, 43, 44, 45, 46, 49, 62, 65, 66, 70, 77, 82, 85, 86, 92, 99, 124, 126, 144, 171, 178, 183, 184, 186, 190, 191, 192, 194, 197, 205, 214, 218, 219, 222, 226, 227, 228, 229, 230, 231, 234, 241, 242, 247, 250, 251, 252, 253, 257, 259, 260, 263, 266, 267, 268, 269, 271, 273, 275, 276, 278, 279, 281, 283, 284, 287, 296, 299, 301, 302, 304, 305, 306, 312, 316, 317, 322, 323, 326, 328, 329, 331, 340, 341, 344, 345, 350, 351, 353, 355, 356, 359, 362, 363, 365, 366, 369, 370, 377, 383, 384, 385, 386, 387, 388, 397, 399, 402, 408, 438, 443, 452, 454, 482, 485, 486, 488, 494, 498, 500, 504, 524, 528, 540, 544, 637, 646, 647, 670, 677, 744, 753, 757, 758, 788, 792, 797, 806, 807, 838, 840, 856, 858, 887, 897, 906, 914, 915, 934, 951, 985, 992, 993, 994, 1005, 1009, 1015, 1030, 1047, 1055, 1082, 1088, 1089, 1091, 1098, 1099, 1106, 1110, 1118, 1129, 1137, 1145, 1146, 1147, 1157, 1160, 1168, 1169, 1171, 1172, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1195, 1201, 1202, 1203, 1204, 1208, 1216, 1221, 1230, 1243, 1244, 1251, 1256], "book": [12, 29, 32, 186, 190, 195, 205, 206, 217, 226, 251, 273, 309, 318, 319, 415, 505, 517, 536, 948, 1088, 1110, 1187, 1202, 1215, 1242, 1244, 1246, 1256], "separ": [12, 38, 80, 105, 106, 126, 150, 190, 217, 219, 229, 249, 262, 268, 278, 282, 285, 288, 303, 306, 309, 310, 312, 320, 324, 332, 346, 348, 352, 358, 364, 372, 427, 465, 486, 506, 510, 518, 519, 535, 548, 552, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 620, 637, 642, 667, 789, 817, 838, 840, 855, 856, 889, 924, 928, 933, 979, 981, 984, 994, 1030, 1046, 1062, 1064, 1067, 1068, 1069, 1070, 1071, 1073, 1081, 1086, 1144, 1161, 1166, 1187, 1196, 1228, 1238, 1243, 1256], "requir": [12, 13, 27, 37, 39, 42, 60, 91, 110, 124, 126, 171, 182, 186, 190, 191, 192, 195, 197, 201, 210, 218, 220, 222, 226, 230, 238, 249, 252, 263, 266, 268, 270, 275, 276, 290, 306, 315, 317, 318, 341, 372, 374, 408, 419, 452, 482, 484, 510, 515, 519, 530, 531, 534, 547, 567, 569, 589, 598, 601, 620, 669, 682, 698, 736, 747, 753, 754, 760, 763, 768, 769, 793, 800, 830, 831, 985, 993, 994, 1005, 1010, 1046, 1048, 1055, 1075, 1080, 1088, 1101, 1110, 1111, 1129, 1138, 1139, 1143, 1196, 1202, 1215, 1216, 1221, 1223, 1224, 1230, 1242, 1244, 1246, 1256, 1259], "particip": [12, 195, 197, 219, 222, 306, 337, 372, 415, 585, 987, 1111, 1125, 1146, 1256], "should": [12, 37, 43, 45, 55, 57, 79, 82, 124, 127, 128, 131, 143, 144, 152, 171, 186, 191, 192, 195, 197, 201, 205, 212, 218, 222, 226, 251, 252, 266, 272, 278, 282, 306, 341, 344, 346, 383, 388, 403, 404, 418, 443, 465, 480, 490, 494, 504, 510, 517, 535, 542, 547, 552, 553, 555, 556, 564, 601, 645, 652, 654, 726, 751, 754, 756, 760, 771, 815, 846, 865, 877, 879, 883, 887, 912, 932, 948, 955, 960, 992, 993, 994, 1001, 1020, 1036, 1047, 1086, 1095, 1099, 1107, 1118, 1153, 1157, 1166, 1194, 1204, 1216, 1221, 1222, 1256], "fluent": [12, 329, 398, 399, 1188, 1256], "target": [12, 17, 40, 62, 110, 159, 191, 193, 201, 242, 251, 333, 349, 375, 376, 377, 378, 379, 399, 488, 491, 507, 513, 516, 517, 523, 524, 525, 528, 532, 533, 534, 539, 553, 657, 840, 860, 862, 867, 887, 950, 1015, 1040, 1064, 1065, 1068, 1069, 1075, 1077, 1084, 1088, 1095, 1097, 1110, 1195, 1202, 1215, 1223, 1246], "audienc": [12, 190, 192, 222, 227, 344, 1088, 1110, 1143, 1202, 1215, 1241, 1246], "english": [12, 29, 108, 183, 210, 229, 236, 247, 257, 260, 269, 273, 279, 281, 284, 286, 287, 302, 309, 314, 322, 323, 328, 329, 341, 350, 351, 356, 357, 362, 363, 366, 367, 395, 396, 397, 402, 517, 536, 840, 1088, 1110, 1147, 1157, 1160, 1161, 1163, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1186, 1187, 1201, 1202, 1215], "german": [12, 14, 517, 536, 1088, 1110, 1187, 1201, 1202, 1204, 1215], "see": [12, 13, 23, 27, 29, 31, 42, 43, 45, 46, 50, 53, 55, 57, 62, 79, 80, 87, 91, 101, 108, 124, 126, 127, 129, 131, 132, 133, 134, 135, 137, 139, 142, 143, 144, 147, 155, 158, 160, 171, 175, 176, 178, 183, 186, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 205, 207, 210, 211, 212, 220, 222, 226, 227, 236, 241, 242, 246, 249, 251, 252, 257, 259, 262, 263, 265, 266, 268, 269, 275, 278, 282, 287, 290, 299, 303, 306, 308, 312, 314, 315, 316, 317, 319, 323, 324, 332, 333, 341, 345, 348, 349, 360, 367, 372, 373, 374, 375, 376, 377, 378, 379, 383, 388, 397, 400, 401, 403, 408, 411, 416, 419, 428, 429, 430, 432, 438, 455, 468, 474, 477, 487, 493, 506, 510, 534, 537, 539, 540, 543, 544, 547, 548, 549, 557, 558, 559, 560, 561, 565, 568, 569, 585, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 608, 609, 618, 619, 620, 628, 634, 637, 642, 644, 645, 646, 647, 652, 654, 655, 660, 661, 663, 678, 682, 695, 709, 713, 714, 716, 717, 730, 734, 736, 737, 739, 743, 746, 751, 753, 754, 755, 756, 758, 765, 771, 785, 786, 788, 791, 792, 793, 795, 797, 801, 802, 803, 804, 805, 806, 815, 817, 824, 826, 828, 829, 830, 831, 835, 838, 841, 843, 846, 848, 850, 851, 853, 855, 856, 858, 860, 862, 865, 867, 873, 875, 877, 879, 881, 883, 887, 890, 894, 895, 901, 903, 913, 914, 915, 919, 923, 926, 927, 944, 948, 949, 951, 952, 954, 957, 959, 975, 985, 992, 993, 994, 1015, 1018, 1020, 1021, 1022, 1026, 1029, 1031, 1033, 1036, 1043, 1055, 1059, 1062, 1063, 1064, 1071, 1073, 1076, 1077, 1078, 1079, 1080, 1081, 1084, 1085, 1086, 1087, 1088, 1091, 1099, 1100, 1103, 1104, 1106, 1109, 1111, 1113, 1116, 1124, 1127, 1128, 1129, 1139, 1143, 1146, 1155, 1159, 1162, 1173, 1184, 1185, 1191, 1193, 1196, 1201, 1202, 1204, 1206, 1209, 1210, 1211, 1215, 1218, 1221, 1226, 1228, 1233, 1243, 1244, 1246, 1256], "also": [12, 13, 23, 27, 31, 57, 62, 124, 127, 129, 132, 134, 135, 137, 139, 142, 143, 171, 186, 191, 192, 194, 195, 197, 198, 200, 201, 202, 209, 211, 212, 213, 214, 217, 219, 220, 222, 223, 226, 232, 234, 252, 259, 265, 275, 276, 278, 282, 288, 294, 295, 297, 306, 308, 315, 316, 317, 323, 324, 333, 341, 345, 349, 377, 383, 415, 506, 534, 537, 539, 544, 553, 563, 566, 568, 569, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 608, 609, 619, 644, 645, 646, 647, 652, 654, 660, 678, 695, 698, 713, 714, 716, 743, 751, 754, 755, 756, 758, 771, 782, 785, 788, 791, 792, 793, 795, 797, 801, 803, 806, 807, 815, 817, 824, 829, 830, 831, 838, 877, 887, 892, 913, 926, 932, 933, 948, 952, 954, 957, 959, 979, 985, 995, 1004, 1005, 1018, 1022, 1026, 1033, 1043, 1064, 1073, 1078, 1080, 1082, 1084, 1085, 1086, 1088, 1091, 1099, 1103, 1109, 1111, 1115, 1118, 1128, 1129, 1132, 1143, 1155, 1159, 1162, 1173, 1193, 1194, 1202, 1206, 1209, 1210, 1211, 1215, 1218, 1221, 1243, 1245, 1251, 1252, 1256], "train": [12, 13, 14, 23, 29, 30, 32, 37, 108, 169, 185, 186, 191, 195, 202, 203, 205, 213, 214, 217, 218, 219, 222, 225, 249, 259, 265, 275, 278, 308, 315, 317, 320, 332, 348, 358, 371, 405, 415, 509, 510, 516, 517, 520, 526, 532, 535, 536, 537, 538, 540, 542, 543, 544, 545, 546, 547, 549, 551, 554, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 598, 600, 603, 604, 605, 606, 608, 610, 611, 612, 613, 615, 616, 617, 618, 619, 642, 803, 838, 841, 843, 846, 851, 856, 862, 865, 873, 995, 1001, 1003, 1004, 1005, 1026, 1029, 1052, 1055, 1059, 1087, 1088, 1090, 1110, 1111, 1139, 1143, 1146, 1190, 1191, 1194, 1195, 1202, 1215, 1226, 1230, 1235, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259], "sourc": [13, 23, 28, 30, 39, 60, 66, 70, 75, 88, 112, 113, 126, 144, 152, 159, 171, 189, 190, 191, 192, 195, 196, 197, 201, 205, 207, 208, 210, 211, 218, 231, 236, 241, 259, 265, 273, 275, 278, 282, 287, 295, 297, 299, 302, 303, 306, 327, 334, 376, 379, 460, 461, 464, 499, 508, 509, 511, 516, 531, 535, 537, 538, 539, 540, 548, 599, 602, 603, 717, 751, 754, 760, 765, 771, 801, 855, 885, 888, 899, 932, 948, 949, 981, 1022, 1063, 1065, 1066, 1068, 1069, 1073, 1075, 1077, 1078, 1080, 1118, 1175, 1184, 1223, 1230, 1236, 1246, 1253], "under": [13, 21, 35, 55, 135, 139, 143, 189, 190, 192, 197, 218, 229, 231, 341, 415, 549, 564, 601, 924, 925, 992, 993, 994, 995, 996, 997, 1004, 1005, 1047, 1062, 1087, 1094, 1101, 1135, 1221], "why": [13, 24, 28, 45, 50, 66, 71, 117, 121, 122, 125, 126, 144, 174, 186, 190, 191, 196, 202, 222, 226, 227, 229, 231, 242, 251, 271, 309, 312, 318, 319, 340, 354, 373, 380, 397, 400, 401, 404, 418, 430, 436, 443, 446, 464, 475, 480, 481, 486, 490, 493, 500, 505, 530, 531, 563, 586, 645, 660, 678, 691, 717, 720, 737, 743, 744, 760, 791, 807, 810, 825, 836, 855, 867, 883, 887, 918, 925, 928, 985, 1038, 1041, 1059, 1075, 1077, 1085, 1086, 1089, 1135, 1137, 1188, 1193, 1203, 1211], "appli": [13, 78, 85, 187, 192, 231, 249, 308, 314, 341, 352, 447, 482, 488, 506, 657, 758, 793, 825, 860, 887, 928, 931, 948, 992, 993, 1018, 1080, 1207], "websit": [13, 23, 191, 205, 1217, 1230], "contain": [13, 17, 29, 35, 38, 60, 108, 109, 110, 112, 113, 124, 126, 152, 158, 159, 162, 171, 186, 187, 193, 196, 201, 205, 210, 212, 217, 218, 220, 222, 223, 226, 229, 231, 249, 251, 252, 259, 265, 275, 276, 278, 282, 289, 290, 293, 294, 295, 308, 315, 324, 341, 358, 371, 382, 383, 392, 399, 400, 406, 408, 445, 464, 478, 498, 500, 506, 511, 514, 515, 518, 519, 526, 535, 538, 547, 563, 585, 588, 590, 599, 600, 601, 607, 608, 609, 642, 643, 645, 653, 662, 679, 682, 695, 706, 710, 722, 724, 726, 734, 739, 740, 746, 751, 791, 803, 806, 825, 834, 835, 836, 838, 840, 843, 848, 856, 858, 860, 881, 883, 887, 907, 914, 915, 918, 928, 930, 953, 954, 955, 960, 967, 992, 993, 994, 1001, 1015, 1022, 1030, 1031, 1046, 1056, 1062, 1065, 1068, 1069, 1071, 1075, 1080, 1087, 1089, 1094, 1111, 1133, 1136, 1143, 1145, 1157, 1166, 1170, 1185, 1188, 1190, 1194, 1196, 1199, 1201, 1206, 1216, 1217, 1221, 1227, 1228, 1240, 1241], "give": [13, 27, 40, 53, 61, 63, 67, 112, 113, 131, 159, 183, 187, 189, 190, 192, 197, 200, 211, 214, 218, 219, 226, 231, 242, 250, 282, 287, 299, 315, 317, 345, 416, 430, 431, 446, 462, 465, 473, 498, 504, 506, 535, 544, 596, 598, 614, 631, 667, 682, 726, 729, 737, 760, 789, 887, 913, 920, 921, 939, 941, 993, 994, 1013, 1014, 1026, 1029, 1048, 1050, 1055, 1056, 1062, 1065, 1075, 1084, 1087, 1110, 1127, 1139, 1188, 1192, 1193, 1216, 1221, 1223, 1241, 1244, 1246], "structur": [13, 29, 80, 91, 110, 131, 190, 205, 227, 241, 268, 269, 276, 278, 279, 281, 284, 287, 290, 293, 302, 309, 312, 319, 323, 329, 333, 334, 337, 341, 345, 349, 351, 355, 357, 363, 374, 375, 376, 377, 378, 379, 397, 401, 403, 405, 420, 430, 438, 443, 472, 474, 478, 479, 483, 492, 495, 496, 501, 502, 506, 517, 523, 526, 528, 531, 533, 534, 536, 546, 564, 589, 599, 618, 667, 700, 734, 743, 745, 783, 837, 839, 840, 875, 877, 881, 885, 887, 907, 944, 975, 1011, 1017, 1033, 1038, 1056, 1065, 1127, 1129, 1170, 1176, 1213, 1215, 1222, 1229, 1241], "much": [13, 27, 35, 38, 62, 67, 82, 131, 135, 137, 142, 147, 189, 190, 191, 192, 197, 200, 205, 214, 220, 222, 226, 227, 228, 230, 252, 263, 265, 266, 268, 270, 276, 290, 291, 294, 295, 297, 309, 312, 318, 319, 340, 341, 344, 354, 355, 372, 373, 380, 400, 432, 443, 454, 490, 494, 504, 514, 518, 524, 530, 531, 564, 643, 653, 659, 678, 699, 719, 743, 744, 753, 754, 758, 771, 783, 784, 785, 789, 791, 793, 803, 807, 828, 829, 831, 839, 840, 843, 858, 865, 873, 875, 881, 883, 887, 927, 928, 977, 985, 988, 991, 993, 1005, 1047, 1056, 1059, 1060, 1062, 1064, 1075, 1082, 1085, 1086, 1099, 1100, 1105, 1106, 1109, 1118, 1135, 1188, 1194, 1195, 1221, 1223, 1241], "like": [13, 21, 27, 28, 30, 39, 43, 45, 55, 61, 62, 63, 67, 79, 80, 116, 122, 126, 127, 131, 132, 134, 137, 139, 142, 144, 147, 150, 151, 152, 183, 189, 190, 191, 192, 194, 195, 197, 200, 201, 205, 210, 213, 214, 218, 219, 220, 222, 226, 228, 231, 241, 242, 249, 251, 252, 259, 265, 266, 268, 269, 275, 278, 291, 293, 295, 297, 303, 306, 308, 309, 312, 315, 317, 341, 344, 368, 372, 383, 388, 400, 408, 429, 432, 436, 458, 460, 465, 470, 482, 486, 494, 497, 504, 508, 510, 514, 516, 518, 522, 524, 525, 531, 542, 543, 544, 564, 588, 598, 599, 600, 601, 602, 614, 620, 628, 631, 637, 646, 649, 652, 656, 657, 658, 660, 681, 698, 707, 714, 716, 719, 723, 726, 733, 734, 742, 743, 746, 747, 753, 754, 771, 789, 791, 792, 802, 803, 806, 807, 813, 829, 831, 836, 838, 841, 843, 845, 848, 856, 858, 860, 865, 871, 877, 879, 881, 883, 887, 892, 900, 903, 907, 915, 918, 919, 924, 925, 927, 930, 948, 950, 953, 955, 960, 977, 985, 986, 988, 992, 993, 994, 995, 1004, 1005, 1009, 1013, 1015, 1018, 1022, 1028, 1030, 1031, 1049, 1056, 1060, 1062, 1064, 1065, 1079, 1082, 1084, 1086, 1089, 1091, 1099, 1104, 1109, 1111, 1113, 1115, 1117, 1119, 1123, 1127, 1129, 1132, 1133, 1136, 1139, 1142, 1145, 1153, 1156, 1166, 1167, 1170, 1176, 1177, 1178, 1179, 1180, 1182, 1187, 1190, 1193, 1195, 1196, 1204, 1206, 1207, 1212, 1221, 1222, 1223, 1228, 1230, 1241, 1246], "topic": [13, 16, 27, 28, 29, 61, 63, 71, 80, 92, 99, 108, 114, 115, 126, 183, 187, 192, 196, 197, 210, 214, 227, 230, 231, 232, 234, 242, 247, 257, 260, 266, 276, 278, 279, 294, 295, 299, 317, 319, 323, 345, 383, 384, 385, 386, 388, 396, 397, 402, 403, 408, 410, 411, 414, 416, 523, 533, 620, 661, 663, 725, 726, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 838, 887, 889, 899, 910, 917, 919, 922, 929, 934, 938, 940, 942, 943, 968, 978, 991, 993, 996, 997, 999, 1015, 1075, 1076, 1080, 1088, 1093, 1110, 1111, 1115, 1143, 1145, 1146, 1147, 1157, 1160, 1168, 1171, 1172, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1191, 1195, 1201, 1215, 1218, 1221, 1225, 1243, 1244, 1251], "other": [13, 27, 29, 33, 39, 40, 51, 53, 61, 62, 63, 65, 80, 82, 84, 112, 113, 124, 143, 159, 168, 171, 178, 190, 191, 192, 193, 194, 197, 201, 205, 214, 218, 222, 226, 227, 229, 230, 231, 242, 250, 259, 265, 266, 275, 278, 282, 303, 324, 331, 332, 341, 344, 348, 368, 383, 400, 404, 408, 428, 434, 443, 452, 470, 473, 484, 500, 504, 507, 509, 510, 514, 519, 524, 528, 531, 532, 534, 535, 541, 547, 628, 643, 645, 646, 652, 654, 655, 658, 659, 660, 670, 698, 720, 726, 744, 753, 754, 785, 789, 801, 803, 805, 807, 818, 820, 825, 838, 840, 858, 877, 879, 913, 920, 921, 924, 925, 941, 946, 948, 950, 970, 987, 992, 993, 994, 997, 1001, 1004, 1013, 1014, 1020, 1021, 1033, 1038, 1041, 1047, 1056, 1060, 1062, 1064, 1075, 1082, 1084, 1086, 1095, 1098, 1099, 1100, 1103, 1106, 1109, 1113, 1115, 1116, 1117, 1118, 1124, 1125, 1129, 1131, 1133, 1135, 1136, 1150, 1166, 1193, 1197, 1200, 1202, 1204, 1221, 1233, 1241, 1243, 1244, 1246, 1256], "exampl": [13, 17, 24, 29, 39, 40, 66, 80, 89, 124, 126, 127, 144, 183, 184, 186, 189, 190, 191, 192, 197, 200, 201, 205, 209, 210, 211, 214, 218, 222, 226, 228, 230, 241, 249, 251, 255, 259, 262, 265, 266, 268, 274, 275, 276, 279, 280, 281, 283, 287, 290, 299, 306, 308, 309, 312, 316, 318, 319, 323, 324, 332, 334, 337, 340, 341, 344, 348, 354, 367, 372, 375, 376, 378, 385, 388, 397, 405, 408, 421, 427, 428, 429, 437, 443, 495, 518, 520, 524, 531, 532, 534, 540, 547, 551, 553, 563, 564, 566, 568, 588, 589, 601, 620, 656, 658, 660, 669, 678, 685, 723, 726, 733, 751, 760, 765, 780, 781, 785, 786, 790, 793, 797, 803, 807, 838, 840, 846, 858, 865, 887, 914, 915, 919, 925, 945, 948, 958, 970, 977, 985, 992, 993, 994, 995, 1004, 1008, 1015, 1018, 1019, 1020, 1021, 1022, 1030, 1037, 1056, 1059, 1061, 1062, 1063, 1064, 1066, 1073, 1079, 1080, 1081, 1082, 1085, 1086, 1087, 1091, 1098, 1105, 1108, 1110, 1111, 1112, 1114, 1122, 1127, 1136, 1143, 1145, 1161, 1166, 1184, 1185, 1186, 1194, 1195, 1201, 1203, 1209, 1210, 1215, 1220, 1228, 1230, 1243, 1244], "here": [13, 14, 62, 70, 75, 76, 79, 80, 82, 83, 87, 108, 116, 122, 124, 131, 147, 171, 176, 178, 187, 189, 190, 192, 193, 195, 196, 197, 200, 201, 205, 210, 212, 218, 219, 220, 222, 226, 228, 231, 241, 242, 246, 249, 250, 251, 252, 257, 260, 268, 269, 273, 276, 278, 282, 295, 297, 299, 303, 306, 308, 312, 315, 317, 324, 327, 342, 357, 360, 371, 372, 377, 383, 388, 394, 397, 400, 401, 403, 416, 419, 484, 486, 493, 500, 509, 510, 518, 542, 544, 564, 569, 580, 583, 586, 588, 599, 601, 603, 618, 620, 628, 642, 645, 646, 649, 655, 661, 663, 667, 679, 707, 713, 734, 736, 737, 743, 754, 760, 765, 771, 781, 785, 790, 793, 795, 801, 803, 806, 815, 830, 841, 855, 860, 862, 865, 877, 883, 887, 913, 948, 985, 987, 992, 993, 994, 1001, 1005, 1012, 1018, 1022, 1028, 1033, 1046, 1055, 1059, 1060, 1072, 1075, 1079, 1081, 1084, 1085, 1086, 1087, 1099, 1102, 1106, 1111, 1114, 1115, 1122, 1128, 1138, 1139, 1146, 1167, 1170, 1187, 1193, 1194, 1195, 1196, 1201, 1221, 1223, 1226, 1230, 1244, 1246], "discuss": [13, 42, 50, 65, 126, 222, 226, 227, 229, 231, 266, 276, 312, 316, 317, 340, 355, 373, 374, 376, 397, 401, 404, 405, 408, 410, 411, 415, 507, 529, 530, 531, 539, 625, 628, 631, 634, 637, 640, 811, 817, 867, 900, 948, 1055, 1059, 1089, 1228, 1230, 1233, 1244], "over": [13, 33, 34, 35, 38, 42, 60, 65, 91, 99, 131, 132, 144, 183, 186, 187, 189, 190, 192, 194, 195, 200, 210, 214, 222, 226, 228, 229, 230, 241, 246, 249, 251, 252, 259, 264, 265, 266, 268, 271, 274, 302, 306, 309, 312, 318, 319, 335, 340, 344, 355, 374, 382, 397, 400, 443, 454, 455, 470, 484, 504, 508, 542, 552, 566, 643, 649, 677, 695, 707, 736, 743, 791, 792, 810, 834, 887, 985, 989, 993, 995, 1001, 1022, 1036, 1044, 1047, 1062, 1075, 1077, 1082, 1085, 1122, 1135, 1139], "lwn": [13, 39, 207, 867, 879, 897, 1236], "attribut": [13, 122, 187, 190, 192, 207, 226, 240, 246, 250, 259, 262, 265, 270, 272, 277, 278, 282, 285, 288, 292, 293, 300, 303, 307, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 390, 392, 401, 408, 482, 498, 500, 537, 547, 815, 838, 919, 926, 947, 951, 1018, 1030, 1031, 1048, 1049, 1056, 1060, 1085, 1086, 1099, 1101, 1112, 1138, 1193, 1257], "sharealik": 13, "cc": [13, 23, 32, 168, 208, 216, 217, 218, 295, 534, 549, 598, 600, 601, 621, 624, 627, 628, 630, 631, 633, 634, 636, 637, 639, 662, 801, 802, 807, 865, 1054, 1055, 1058, 1059, 1064, 1227, 1228, 1230, 1232, 1233], "BY": [13, 23, 35, 771], "sa": [13, 23, 32, 1046], "don": [13, 24, 58, 60, 80, 86, 126, 131, 139, 178, 183, 189, 190, 191, 192, 195, 196, 197, 205, 220, 222, 226, 230, 241, 242, 252, 259, 263, 265, 266, 268, 275, 278, 330, 342, 371, 405, 429, 470, 482, 485, 486, 488, 494, 500, 504, 506, 530, 531, 543, 600, 628, 634, 643, 644, 659, 660, 667, 677, 713, 720, 726, 751, 754, 756, 771, 785, 786, 798, 807, 812, 817, 855, 860, 879, 887, 892, 923, 948, 950, 955, 961, 972, 985, 988, 992, 993, 997, 1005, 1009, 1010, 1011, 1012, 1031, 1032, 1033, 1038, 1059, 1060, 1065, 1087, 1095, 1097, 1111, 1114, 1118, 1143, 1197, 1203, 1210, 1216, 1227, 1233], "t": [13, 24, 43, 50, 58, 60, 62, 67, 80, 86, 126, 131, 139, 143, 178, 183, 187, 189, 191, 192, 195, 196, 197, 200, 201, 205, 207, 209, 220, 222, 223, 226, 229, 230, 233, 238, 240, 241, 242, 246, 252, 255, 259, 262, 263, 265, 266, 268, 270, 272, 275, 276, 278, 282, 285, 288, 291, 297, 300, 303, 308, 309, 310, 312, 314, 320, 324, 330, 342, 345, 346, 352, 358, 364, 368, 371, 374, 383, 389, 391, 392, 394, 405, 417, 419, 420, 422, 428, 429, 439, 454, 460, 462, 465, 470, 480, 482, 484, 485, 486, 488, 494, 500, 504, 506, 522, 526, 530, 531, 535, 543, 596, 598, 600, 620, 628, 634, 643, 644, 646, 653, 659, 660, 667, 669, 670, 677, 681, 713, 720, 726, 743, 744, 746, 751, 753, 754, 756, 760, 761, 762, 763, 771, 774, 785, 786, 791, 797, 798, 801, 802, 803, 805, 807, 810, 812, 815, 817, 846, 855, 860, 867, 879, 881, 887, 892, 904, 907, 913, 914, 915, 923, 925, 948, 949, 950, 954, 955, 961, 967, 970, 972, 985, 988, 992, 993, 994, 997, 1001, 1005, 1009, 1010, 1011, 1012, 1019, 1031, 1032, 1033, 1038, 1048, 1055, 1056, 1059, 1060, 1062, 1063, 1065, 1075, 1078, 1081, 1087, 1088, 1095, 1097, 1099, 1111, 1114, 1117, 1118, 1119, 1125, 1131, 1135, 1137, 1138, 1139, 1143, 1145, 1192, 1197, 1201, 1203, 1210, 1216, 1227, 1228, 1233, 1243], "want": [13, 17, 27, 29, 30, 45, 50, 60, 62, 80, 86, 127, 132, 137, 139, 143, 168, 171, 189, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201, 205, 210, 213, 218, 222, 226, 229, 230, 241, 242, 249, 252, 259, 266, 270, 272, 306, 308, 309, 312, 334, 372, 383, 394, 408, 430, 442, 458, 486, 498, 500, 504, 511, 518, 519, 524, 535, 544, 547, 568, 587, 596, 601, 620, 631, 644, 649, 652, 660, 685, 720, 726, 737, 751, 756, 771, 792, 797, 803, 805, 806, 807, 826, 838, 843, 862, 887, 892, 923, 925, 927, 930, 945, 948, 949, 967, 985, 988, 992, 993, 994, 1005, 1009, 1010, 1011, 1012, 1017, 1031, 1046, 1048, 1049, 1050, 1059, 1062, 1064, 1075, 1077, 1079, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1094, 1101, 1106, 1110, 1117, 1126, 1129, 1139, 1144, 1146, 1182, 1187, 1197, 1201, 1202, 1204, 1206, 1210, 1221, 1223, 1224, 1228, 1241, 1246], "anybodi": [13, 190, 195, 222, 241, 242, 487, 1020, 1031, 1233], "monei": [13, 191, 194, 197, 265, 927, 1145], "my": [13, 17, 24, 28, 32, 39, 61, 62, 63, 65, 67, 99, 124, 147, 152, 168, 171, 178, 187, 189, 190, 191, 193, 194, 196, 197, 200, 201, 205, 218, 222, 226, 229, 242, 249, 276, 290, 292, 306, 316, 358, 374, 394, 397, 402, 415, 494, 505, 519, 520, 526, 534, 547, 601, 637, 655, 666, 720, 803, 825, 838, 871, 883, 887, 889, 915, 923, 938, 940, 945, 951, 972, 985, 992, 994, 996, 997, 1004, 1005, 1010, 1011, 1012, 1021, 1056, 1065, 1087, 1090, 1099, 1118, 1142, 1182, 1204, 1209, 1210, 1221, 1241], "without": [13, 121, 156, 189, 190, 191, 192, 200, 201, 226, 270, 334, 355, 373, 374, 380, 430, 454, 461, 487, 490, 494, 499, 504, 509, 520, 522, 525, 547, 552, 564, 631, 637, 643, 649, 713, 720, 743, 744, 745, 771, 783, 789, 791, 792, 797, 803, 809, 810, 817, 837, 839, 840, 858, 871, 887, 927, 928, 970, 994, 996, 1005, 1031, 1050, 1055, 1056, 1060, 1084, 1085, 1088, 1089, 1091, 1098, 1099, 1100, 1102, 1104, 1106, 1113, 1118, 1135, 1221, 1223, 1241, 1246], "modif": [13, 55, 108, 144, 205, 268, 430, 432, 438, 443, 474, 504, 526, 530, 547, 552, 599, 657, 818, 838, 860, 887, 933, 949, 970, 1098, 1118, 1135, 1197, 1233], "back": [13, 29, 32, 62, 65, 124, 174, 191, 192, 195, 201, 226, 228, 230, 255, 263, 268, 279, 281, 299, 314, 334, 337, 372, 480, 495, 566, 591, 620, 640, 660, 674, 679, 717, 726, 751, 765, 800, 807, 820, 840, 855, 860, 869, 887, 889, 918, 951, 985, 992, 1005, 1046, 1056, 1062, 1082, 1089, 1102, 1106, 1118, 1147, 1181, 1182, 1183, 1186, 1212], "m": [13, 23, 32, 38, 60, 170, 171, 176, 191, 192, 193, 195, 197, 200, 205, 218, 223, 228, 233, 242, 246, 255, 256, 257, 259, 263, 278, 282, 288, 290, 295, 307, 342, 352, 368, 393, 397, 398, 399, 404, 418, 506, 549, 595, 598, 599, 600, 601, 637, 662, 771, 793, 802, 855, 856, 862, 865, 897, 925, 927, 948, 987, 992, 1005, 1050, 1104, 1142, 1143, 1150, 1175, 1176, 1193, 1203, 1216, 1221, 1223, 1228], "lawyer": 13, "understand": [13, 126, 189, 190, 192, 196, 197, 200, 201, 205, 214, 222, 226, 251, 278, 309, 312, 315, 317, 318, 319, 334, 337, 340, 344, 374, 399, 408, 436, 484, 493, 500, 524, 552, 588, 730, 751, 760, 781, 792, 887, 927, 933, 985, 1106, 1145, 1188, 1193, 1194, 1211, 1241, 1242, 1243], "permit": [13, 192, 197, 242, 306, 394, 625, 646, 653, 992, 1003, 1047, 1112, 1213], "exactli": [13, 80, 190, 192, 214, 220, 249, 319, 388, 422, 462, 588, 599, 677, 754, 791, 887, 994, 1019, 1020, 1060, 1079, 1196, 1215], "gnu": [13, 201, 206, 242, 251, 394, 400, 416, 501, 502, 534, 535, 652, 802, 840, 867, 888, 948, 1063, 1064, 1065, 1075, 1077, 1079, 1239, 1243], "free": [13, 32, 196, 201, 217, 242, 394, 477, 491, 549, 626, 646, 652, 654, 714, 734, 735, 737, 738, 754, 781, 800, 801, 802, 823, 851, 858, 889, 1010, 1011, 1012, 1024, 1047, 1060, 1062, 1194, 1204, 1213, 1238], "document": [13, 24, 40, 42, 66, 80, 88, 126, 131, 171, 187, 190, 192, 194, 201, 202, 208, 211, 218, 230, 242, 248, 249, 257, 259, 264, 265, 266, 268, 275, 278, 282, 295, 297, 299, 308, 315, 317, 320, 341, 343, 361, 368, 383, 388, 397, 404, 405, 480, 481, 484, 491, 509, 510, 511, 516, 531, 532, 534, 535, 537, 539, 540, 552, 599, 618, 659, 663, 677, 678, 734, 736, 746, 751, 758, 760, 765, 781, 782, 788, 790, 793, 795, 802, 803, 804, 806, 813, 814, 815, 817, 819, 820, 834, 838, 858, 860, 883, 887, 888, 895, 899, 913, 919, 927, 934, 938, 940, 942, 972, 973, 974, 976, 977, 979, 980, 988, 992, 993, 994, 1028, 1035, 1043, 1077, 1080, 1084, 1086, 1087, 1091, 1095, 1097, 1099, 1105, 1122, 1132, 1133, 1184, 1196, 1199, 1206, 1207, 1210, 1212, 1219, 1222, 1229, 1230, 1249, 1250], "ago": [13, 192, 196, 252, 912], "wa": [13, 37, 53, 80, 124, 132, 139, 144, 171, 186, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 205, 207, 209, 210, 211, 213, 217, 218, 223, 225, 226, 229, 233, 239, 240, 246, 249, 252, 255, 256, 266, 268, 270, 272, 279, 282, 291, 303, 310, 316, 319, 324, 342, 354, 358, 372, 373, 397, 402, 415, 418, 465, 490, 516, 522, 524, 528, 634, 642, 643, 652, 653, 698, 728, 735, 736, 737, 738, 739, 740, 747, 751, 754, 809, 838, 840, 862, 869, 877, 883, 923, 945, 975, 977, 985, 994, 1021, 1041, 1060, 1086, 1118, 1193, 1207, 1210, 1216, 1221, 1223, 1226, 1236, 1238, 1239, 1240, 1241, 1253, 1259], "debian": [13, 80, 178, 179, 180, 197, 201, 205, 207, 219, 230, 242, 327, 394, 415, 614, 840, 887, 987, 1064, 1077, 1223, 1228], "resolut": [13, 280, 282, 487, 756, 818, 865, 897, 994], "us": [13, 14, 17, 21, 24, 39, 40, 45, 48, 54, 60, 61, 62, 63, 65, 67, 70, 72, 73, 76, 79, 80, 83, 84, 86, 87, 88, 90, 91, 99, 108, 109, 126, 127, 128, 130, 131, 132, 133, 134, 137, 139, 142, 143, 144, 147, 150, 151, 152, 158, 162, 182, 183, 185, 186, 187, 189, 190, 192, 193, 196, 200, 202, 205, 207, 210, 214, 216, 217, 219, 222, 226, 228, 229, 241, 242, 247, 250, 257, 259, 260, 262, 263, 266, 267, 269, 273, 275, 276, 278, 282, 285, 287, 288, 290, 295, 297, 299, 303, 306, 308, 309, 310, 312, 314, 315, 316, 317, 318, 319, 320, 323, 324, 329, 332, 337, 340, 341, 344, 345, 346, 348, 352, 354, 355, 358, 364, 373, 375, 376, 378, 379, 382, 383, 388, 394, 397, 400, 402, 403, 406, 415, 426, 429, 430, 433, 434, 435, 438, 440, 449, 450, 452, 454, 455, 459, 460, 461, 464, 465, 466, 468, 472, 473, 476, 479, 483, 487, 488, 492, 494, 495, 496, 500, 501, 502, 504, 506, 507, 508, 509, 510, 512, 513, 514, 515, 517, 518, 522, 524, 526, 528, 530, 531, 532, 534, 535, 539, 542, 543, 545, 546, 549, 552, 553, 554, 556, 563, 566, 567, 568, 586, 588, 589, 591, 592, 593, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 608, 609, 614, 618, 619, 620, 621, 624, 627, 630, 633, 636, 639, 644, 646, 647, 651, 652, 655, 657, 659, 660, 661, 663, 664, 672, 673, 674, 675, 676, 678, 679, 680, 681, 682, 683, 686, 689, 690, 691, 695, 698, 699, 700, 701, 702, 703, 707, 713, 716, 717, 719, 720, 723, 724, 726, 728, 730, 732, 733, 734, 735, 736, 737, 738, 740, 742, 743, 745, 746, 747, 748, 750, 752, 754, 758, 760, 765, 771, 773, 780, 781, 783, 785, 786, 788, 790, 793, 798, 802, 803, 804, 805, 807, 809, 813, 815, 818, 824, 825, 834, 837, 838, 839, 840, 845, 846, 848, 850, 853, 855, 856, 858, 860, 862, 865, 867, 871, 873, 875, 879, 881, 883, 887, 888, 890, 892, 900, 901, 903, 906, 907, 913, 914, 915, 918, 923, 924, 927, 928, 930, 932, 934, 940, 945, 948, 950, 953, 954, 955, 957, 967, 973, 975, 979, 984, 985, 988, 989, 991, 995, 996, 997, 1004, 1005, 1008, 1014, 1015, 1018, 1019, 1020, 1022, 1026, 1028, 1029, 1031, 1033, 1034, 1035, 1037, 1038, 1041, 1043, 1044, 1047, 1048, 1051, 1054, 1055, 1056, 1058, 1059, 1060, 1062, 1065, 1073, 1074, 1077, 1078, 1079, 1080, 1081, 1085, 1088, 1089, 1091, 1092, 1093, 1094, 1095, 1098, 1099, 1104, 1106, 1108, 1110, 1111, 1112, 1114, 1118, 1120, 1122, 1126, 1127, 1128, 1129, 1132, 1135, 1137, 1139, 1143, 1145, 1148, 1149, 1150, 1153, 1154, 1155, 1159, 1161, 1164, 1165, 1166, 1167, 1171, 1173, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1187, 1188, 1190, 1191, 1193, 1194, 1195, 1196, 1197, 1200, 1201, 1204, 1206, 1207, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1221, 1224, 1227, 1228, 1230, 1232, 1233, 1241, 1243, 1244, 1246], "gfdl": 13, "becaus": [13, 17, 38, 60, 82, 124, 171, 174, 184, 189, 190, 192, 201, 205, 214, 222, 226, 228, 242, 252, 259, 265, 275, 278, 422, 443, 482, 491, 494, 497, 504, 506, 507, 509, 512, 515, 522, 526, 544, 547, 564, 598, 601, 644, 645, 652, 655, 695, 717, 722, 737, 756, 793, 801, 804, 856, 867, 885, 887, 927, 967, 985, 992, 993, 994, 1003, 1014, 1015, 1018, 1021, 1035, 1041, 1056, 1059, 1060, 1084, 1087, 1113, 1144, 1201, 1216, 1223, 1228, 1241], "too": [13, 27, 53, 56, 62, 82, 139, 190, 192, 197, 206, 219, 222, 238, 249, 251, 268, 278, 282, 285, 294, 295, 297, 308, 310, 318, 319, 324, 340, 342, 354, 355, 373, 380, 439, 484, 494, 504, 518, 528, 540, 544, 643, 657, 756, 765, 767, 771, 783, 784, 785, 791, 797, 803, 828, 838, 839, 840, 885, 887, 892, 919, 985, 994, 995, 1001, 1018, 1031, 1048, 1064, 1084, 1085, 1086, 1089, 1135, 1139, 1217, 1241], "restrict": [13, 191, 220, 230, 482, 487, 510, 544, 551, 586, 667, 838, 885, 914, 915, 1004, 1201], "articl": [13, 205, 207, 867, 879, 897, 992, 994, 1075], "describ": [13, 109, 126, 128, 130, 159, 187, 189, 190, 191, 192, 195, 197, 200, 201, 216, 242, 278, 282, 290, 316, 324, 327, 371, 394, 547, 556, 602, 621, 624, 627, 630, 633, 636, 639, 793, 807, 887, 897, 920, 921, 948, 994, 999, 1051, 1054, 1058, 1063, 1072, 1078, 1079, 1108, 1193, 1227, 1230, 1232], "pretti": [13, 191, 192, 214, 228, 232, 251, 268, 278, 494, 535, 677, 735, 810, 1082, 1213], "same": [13, 17, 24, 28, 31, 39, 40, 43, 44, 131, 144, 190, 191, 192, 194, 196, 197, 200, 201, 205, 210, 211, 212, 214, 222, 223, 228, 231, 242, 250, 254, 259, 265, 268, 275, 276, 278, 281, 282, 300, 309, 312, 318, 319, 324, 340, 341, 342, 352, 368, 384, 385, 394, 401, 426, 430, 441, 442, 443, 460, 461, 465, 470, 473, 482, 484, 488, 490, 494, 495, 498, 499, 507, 518, 522, 524, 528, 530, 535, 547, 551, 554, 555, 566, 585, 586, 594, 598, 618, 620, 627, 629, 643, 646, 652, 655, 658, 677, 680, 686, 695, 698, 699, 700, 724, 736, 744, 749, 756, 758, 760, 763, 765, 789, 790, 793, 805, 806, 807, 813, 855, 856, 860, 865, 867, 869, 877, 879, 885, 887, 903, 919, 926, 932, 948, 949, 951, 975, 985, 987, 992, 993, 994, 995, 1004, 1005, 1011, 1017, 1031, 1032, 1033, 1046, 1050, 1056, 1060, 1062, 1079, 1085, 1086, 1089, 1094, 1095, 1098, 1100, 1104, 1106, 1122, 1124, 1127, 1132, 1134, 1135, 1136, 1170, 1178, 1180, 1194, 1196, 1197, 1200, 1201, 1204, 1206, 1209, 1210, 1211, 1221, 1223, 1228], "issu": [13, 171, 190, 193, 200, 201, 252, 317, 318, 319, 340, 355, 358, 417, 430, 488, 1024, 1050, 1059, 1077, 1095], "how": [13, 23, 24, 37, 42, 45, 50, 65, 67, 72, 73, 77, 79, 80, 83, 84, 86, 87, 88, 89, 90, 93, 106, 124, 126, 131, 138, 139, 147, 159, 176, 178, 186, 187, 190, 193, 195, 196, 197, 201, 202, 205, 210, 212, 214, 218, 219, 225, 226, 227, 228, 229, 230, 231, 242, 247, 249, 250, 251, 257, 259, 260, 262, 263, 265, 266, 268, 271, 273, 276, 287, 290, 294, 295, 299, 306, 309, 312, 314, 315, 316, 317, 318, 319, 323, 329, 332, 334, 340, 341, 344, 345, 348, 372, 374, 376, 383, 399, 400, 404, 415, 430, 436, 461, 468, 470, 471, 482, 484, 486, 488, 493, 497, 504, 506, 509, 511, 517, 519, 520, 524, 549, 555, 585, 588, 596, 599, 620, 637, 644, 652, 653, 656, 667, 677, 716, 720, 727, 737, 743, 765, 802, 805, 806, 807, 817, 822, 834, 835, 841, 848, 850, 851, 865, 877, 887, 892, 903, 914, 915, 920, 921, 928, 948, 967, 975, 981, 985, 992, 993, 994, 1002, 1010, 1011, 1012, 1015, 1018, 1021, 1022, 1028, 1041, 1044, 1047, 1048, 1050, 1055, 1059, 1060, 1073, 1075, 1077, 1079, 1092, 1093, 1110, 1111, 1114, 1128, 1131, 1140, 1146, 1184, 1185, 1188, 1193, 1194, 1207, 1209, 1210, 1213, 1221, 1224, 1230, 1233, 1243, 1244, 1246], "do": [13, 27, 32, 40, 43, 45, 50, 58, 61, 62, 63, 67, 80, 85, 87, 91, 93, 99, 126, 127, 134, 139, 143, 144, 159, 169, 171, 189, 190, 191, 192, 193, 194, 195, 196, 197, 201, 205, 206, 207, 209, 210, 211, 214, 218, 219, 222, 226, 227, 230, 240, 241, 242, 250, 252, 259, 262, 266, 268, 270, 272, 273, 276, 278, 281, 282, 288, 290, 292, 295, 297, 306, 309, 312, 341, 342, 372, 376, 383, 385, 392, 394, 397, 399, 433, 452, 454, 455, 457, 458, 459, 464, 465, 466, 472, 473, 476, 479, 482, 483, 490, 492, 496, 501, 502, 504, 506, 511, 517, 520, 544, 549, 552, 555, 563, 564, 585, 587, 599, 620, 628, 634, 637, 643, 645, 657, 661, 663, 664, 667, 704, 717, 720, 726, 735, 736, 737, 745, 751, 756, 760, 782, 783, 789, 793, 795, 801, 802, 803, 805, 806, 807, 836, 837, 839, 840, 860, 864, 875, 879, 883, 885, 887, 912, 916, 917, 920, 921, 925, 928, 932, 933, 942, 944, 949, 953, 955, 984, 985, 988, 992, 993, 994, 996, 997, 1003, 1005, 1009, 1010, 1011, 1012, 1013, 1014, 1020, 1031, 1032, 1034, 1038, 1044, 1046, 1047, 1050, 1052, 1055, 1060, 1079, 1080, 1082, 1084, 1086, 1087, 1088, 1091, 1100, 1110, 1111, 1112, 1115, 1118, 1122, 1128, 1129, 1143, 1145, 1164, 1188, 1194, 1195, 1202, 1203, 1210, 1213, 1221, 1228, 1230, 1246], "choos": [13, 27, 189, 190, 201, 214, 222, 637, 887, 985, 992, 994, 1078, 1111, 1118, 1131, 1194, 1201, 1223], "altogeth": [13, 200, 249, 318, 319, 340, 754, 895, 1089], "have": [13, 27, 28, 30, 37, 43, 50, 71, 82, 84, 86, 104, 112, 113, 126, 127, 131, 135, 139, 142, 144, 149, 152, 159, 168, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201, 205, 210, 211, 212, 214, 218, 219, 220, 222, 226, 229, 230, 241, 242, 247, 249, 250, 251, 252, 259, 262, 263, 265, 266, 273, 278, 282, 285, 295, 297, 299, 306, 308, 309, 312, 315, 316, 318, 319, 323, 324, 344, 345, 372, 383, 388, 397, 400, 402, 429, 430, 434, 443, 462, 464, 484, 486, 489, 490, 494, 498, 500, 505, 507, 508, 509, 515, 516, 519, 524, 530, 531, 534, 542, 543, 544, 548, 551, 552, 564, 585, 588, 598, 601, 610, 637, 643, 647, 651, 653, 655, 660, 661, 663, 664, 695, 701, 717, 724, 726, 730, 736, 737, 738, 742, 743, 747, 755, 758, 760, 771, 780, 785, 789, 790, 792, 795, 798, 802, 803, 806, 807, 835, 851, 855, 856, 858, 860, 865, 867, 879, 887, 890, 895, 903, 912, 920, 921, 925, 927, 930, 931, 933, 940, 955, 975, 985, 992, 993, 994, 995, 997, 1001, 1003, 1005, 1009, 1010, 1012, 1017, 1022, 1024, 1030, 1038, 1055, 1059, 1060, 1063, 1064, 1073, 1077, 1078, 1081, 1082, 1084, 1087, 1095, 1099, 1100, 1104, 1114, 1117, 1118, 1122, 1129, 1136, 1148, 1152, 1162, 1167, 1183, 1188, 1193, 1195, 1196, 1197, 1201, 1204, 1206, 1210, 1213, 1216, 1221, 1223, 1228, 1230, 1243, 1244], "idea": [13, 14, 138, 189, 190, 250, 263, 272, 282, 315, 317, 318, 319, 334, 337, 344, 488, 733, 755, 793, 801, 822, 887, 985, 1020, 1030, 1050, 1075, 1086, 1110, 1118, 1246], "choosealicens": 13, "appear": [13, 124, 190, 191, 192, 193, 194, 195, 196, 197, 200, 210, 214, 218, 220, 222, 223, 242, 251, 278, 318, 319, 340, 419, 462, 465, 516, 522, 535, 547, 618, 659, 803, 825, 883, 887, 895, 911, 992, 993, 994, 1005, 1063, 1086, 1159, 1160, 1170, 1179, 1205, 1210], "help": [13, 29, 128, 189, 190, 192, 193, 201, 205, 223, 242, 246, 251, 259, 265, 270, 272, 275, 278, 282, 285, 288, 290, 303, 310, 315, 319, 324, 342, 346, 352, 358, 364, 368, 371, 388, 392, 397, 415, 465, 486, 488, 490, 491, 500, 514, 517, 524, 526, 535, 646, 649, 655, 743, 756, 791, 801, 803, 858, 927, 987, 992, 1078, 1110, 1113, 1139, 1143, 1213, 1221, 1228, 1243], "happen": [13, 27, 112, 113, 124, 127, 143, 159, 189, 190, 192, 205, 222, 226, 230, 249, 268, 332, 348, 402, 470, 482, 486, 490, 504, 524, 535, 649, 666, 739, 771, 785, 788, 810, 850, 883, 887, 904, 919, 920, 921, 925, 994, 1018, 1020, 1030, 1035, 1059, 1098, 1099, 1138, 1153, 1156, 1170, 1187, 1193, 1221, 1230, 1243], "clone": [13, 60, 66, 79, 111, 126, 152, 168, 182, 192, 193, 196, 217, 219, 222, 239, 251, 252, 268, 295, 297, 327, 334, 337, 397, 402, 585, 588, 662, 860, 887, 888, 992, 1077, 1078], "jfasch": [13, 40, 43, 60, 66, 108, 124, 126, 144, 147, 148, 152, 155, 162, 165, 168, 171, 186, 187, 193, 194, 195, 200, 201, 205, 209, 218, 219, 220, 223, 226, 239, 249, 259, 262, 265, 266, 268, 270, 275, 278, 285, 288, 290, 295, 297, 303, 306, 308, 309, 310, 315, 316, 317, 319, 320, 323, 324, 329, 333, 334, 337, 341, 345, 346, 349, 351, 352, 355, 357, 358, 363, 364, 367, 372, 374, 375, 376, 377, 378, 379, 381, 396, 397, 402, 405, 507, 509, 510, 512, 513, 514, 515, 516, 520, 526, 528, 530, 532, 534, 535, 537, 538, 540, 549, 585, 599, 600, 601, 602, 620, 662, 726, 801, 802, 803, 838, 860, 862, 887, 913, 914, 915, 918, 919, 923, 925, 930, 933, 944, 949, 950, 951, 967, 970, 972, 973, 977, 979, 981, 992, 995, 1003, 1004, 1005, 1010, 1016, 1018, 1019, 1020, 1041, 1046, 1062, 1063, 1064, 1065, 1075, 1077, 1078, 1079, 1080, 1081, 1084, 1086, 1087, 1090, 1114, 1133, 1139, 1143, 1166, 1209, 1210, 1221, 1223], "home": [13, 32, 40, 42, 43, 50, 60, 66, 102, 124, 152, 168, 171, 186, 187, 191, 193, 194, 195, 197, 201, 205, 218, 219, 220, 223, 242, 249, 259, 262, 263, 265, 270, 275, 278, 285, 288, 290, 295, 297, 303, 306, 308, 310, 320, 324, 346, 352, 358, 364, 371, 405, 500, 509, 510, 516, 520, 526, 532, 534, 535, 537, 538, 540, 549, 599, 600, 601, 602, 662, 726, 756, 801, 802, 803, 838, 840, 862, 887, 913, 914, 915, 917, 923, 925, 927, 928, 930, 933, 938, 940, 942, 944, 945, 948, 949, 951, 952, 953, 954, 955, 959, 962, 965, 968, 970, 972, 973, 979, 984, 995, 996, 1001, 1003, 1004, 1041, 1043, 1059, 1063, 1064, 1065, 1075, 1077, 1078, 1079, 1080, 1081, 1084, 1087, 1090, 1139, 1166, 1175, 1209, 1210, 1221, 1223], "built": [13, 28, 126, 133, 189, 190, 192, 193, 196, 201, 218, 223, 225, 226, 234, 235, 247, 250, 259, 265, 270, 273, 275, 276, 278, 282, 290, 299, 303, 306, 308, 323, 332, 341, 345, 348, 352, 358, 368, 432, 436, 460, 481, 509, 524, 525, 531, 534, 540, 563, 585, 698, 726, 756, 812, 817, 856, 860, 862, 887, 992, 994, 1005, 1063, 1064, 1071, 1079, 1084, 1087, 1091, 1107, 1122, 1138, 1188, 1194, 1195, 1212, 1221, 1223, 1224, 1239, 1243, 1251], "wonder": [13, 855, 873, 900, 1089], "gener": [13, 23, 24, 29, 39, 65, 67, 70, 71, 80, 82, 83, 111, 112, 113, 159, 171, 183, 187, 190, 194, 197, 202, 209, 212, 222, 226, 227, 229, 230, 231, 232, 241, 249, 257, 258, 259, 263, 264, 266, 267, 268, 269, 271, 273, 274, 275, 279, 280, 281, 282, 287, 288, 302, 304, 308, 317, 322, 324, 328, 329, 331, 343, 345, 350, 351, 353, 355, 356, 357, 359, 362, 363, 364, 366, 367, 368, 400, 403, 420, 430, 432, 438, 443, 454, 464, 482, 488, 491, 493, 494, 497, 511, 514, 517, 523, 533, 534, 535, 538, 588, 590, 596, 599, 607, 642, 649, 653, 669, 677, 678, 681, 733, 751, 754, 781, 795, 801, 807, 815, 867, 869, 871, 890, 920, 921, 932, 948, 985, 987, 992, 1005, 1030, 1059, 1060, 1062, 1065, 1077, 1078, 1084, 1085, 1086, 1088, 1106, 1112, 1114, 1115, 1116, 1122, 1126, 1144, 1145, 1146, 1147, 1160, 1186, 1188, 1195, 1197, 1198, 1200, 1201, 1210, 1216, 1221, 1244, 1245, 1252], "content": [13, 27, 39, 49, 50, 57, 62, 124, 162, 222, 229, 230, 231, 242, 250, 268, 270, 278, 300, 306, 346, 389, 464, 467, 469, 518, 519, 602, 645, 695, 703, 726, 792, 819, 889, 892, 913, 914, 915, 930, 933, 935, 936, 970, 973, 981, 993, 997, 1020, 1062, 1118, 1137, 1144, 1157, 1187, 1207, 1223, 1256], "which": [13, 14, 17, 28, 57, 70, 80, 82, 85, 91, 112, 113, 116, 117, 121, 122, 125, 127, 143, 151, 152, 159, 171, 175, 182, 183, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 201, 205, 210, 212, 218, 219, 220, 222, 226, 228, 230, 242, 249, 251, 259, 263, 265, 266, 278, 281, 282, 290, 291, 308, 309, 312, 314, 319, 324, 337, 341, 354, 373, 415, 433, 438, 439, 445, 449, 470, 482, 494, 504, 505, 506, 508, 509, 524, 534, 535, 537, 542, 544, 555, 585, 586, 587, 588, 591, 593, 594, 595, 596, 597, 599, 614, 625, 631, 644, 651, 653, 657, 659, 667, 714, 724, 726, 729, 730, 736, 737, 739, 748, 754, 755, 793, 797, 798, 806, 807, 820, 828, 836, 838, 840, 856, 865, 887, 889, 907, 913, 920, 921, 925, 927, 930, 931, 932, 933, 939, 941, 944, 948, 961, 972, 975, 984, 985, 988, 992, 993, 994, 1005, 1014, 1015, 1018, 1020, 1022, 1023, 1025, 1030, 1035, 1042, 1044, 1046, 1047, 1055, 1060, 1063, 1065, 1068, 1069, 1077, 1081, 1084, 1086, 1088, 1098, 1099, 1103, 1111, 1115, 1118, 1127, 1159, 1178, 1180, 1183, 1185, 1201, 1203, 1204, 1206, 1209, 1223, 1228, 1241], "differ": [13, 35, 38, 61, 63, 71, 78, 83, 87, 90, 177, 189, 190, 195, 197, 201, 211, 218, 222, 226, 238, 262, 263, 306, 308, 314, 315, 317, 324, 342, 354, 383, 418, 430, 438, 443, 444, 460, 461, 464, 482, 488, 490, 494, 504, 506, 514, 518, 526, 543, 544, 588, 599, 601, 620, 627, 628, 637, 646, 647, 651, 657, 659, 660, 669, 673, 678, 717, 720, 724, 747, 760, 763, 790, 805, 818, 824, 838, 860, 865, 879, 885, 887, 907, 912, 918, 923, 924, 926, 945, 970, 985, 988, 992, 994, 1001, 1012, 1020, 1022, 1035, 1044, 1046, 1047, 1067, 1073, 1078, 1080, 1081, 1086, 1099, 1106, 1114, 1127, 1131, 1136, 1137, 1138, 1197, 1206, 1223, 1224, 1244, 1246], "so": [13, 17, 23, 32, 37, 39, 49, 55, 124, 127, 132, 144, 147, 159, 171, 174, 177, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 205, 209, 210, 211, 212, 213, 214, 218, 219, 220, 222, 223, 234, 235, 240, 248, 250, 251, 252, 261, 262, 263, 292, 306, 314, 316, 320, 332, 344, 348, 358, 364, 368, 372, 383, 392, 397, 400, 415, 429, 433, 434, 442, 444, 460, 470, 471, 473, 482, 486, 488, 490, 491, 495, 505, 516, 518, 524, 534, 537, 539, 540, 542, 564, 566, 585, 601, 614, 653, 660, 664, 677, 700, 707, 716, 723, 733, 782, 792, 797, 800, 801, 803, 818, 846, 848, 851, 856, 860, 862, 865, 887, 900, 912, 927, 928, 930, 932, 938, 940, 942, 948, 952, 959, 985, 991, 992, 993, 994, 997, 999, 1001, 1009, 1012, 1015, 1020, 1022, 1030, 1048, 1050, 1059, 1062, 1063, 1064, 1065, 1068, 1069, 1077, 1079, 1080, 1089, 1090, 1094, 1106, 1111, 1113, 1118, 1135, 1137, 1139, 1142, 1152, 1156, 1162, 1166, 1193, 1196, 1204, 1211, 1214, 1221, 1223, 1227, 1228, 1230, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1243, 1245, 1251, 1254, 1259], "ye": [13, 32, 50, 60, 116, 119, 152, 192, 193, 196, 201, 242, 394, 524, 700, 722, 810, 914, 915, 933, 935, 936, 994, 1005, 1062, 1131, 1165], "realli": [13, 21, 43, 50, 53, 55, 56, 144, 191, 192, 193, 195, 197, 211, 222, 226, 229, 543, 760, 797, 807, 820, 840, 879, 993, 994, 1005, 1028, 1062, 1188, 1195, 1201], "great": [13, 80, 195, 197, 252, 272, 282, 504, 643, 658, 815, 887, 993, 1241, 1246], "static": [13, 23, 99, 105, 106, 112, 113, 126, 150, 159, 171, 190, 192, 194, 196, 197, 207, 217, 251, 252, 259, 265, 268, 275, 278, 282, 306, 315, 317, 324, 373, 376, 380, 397, 403, 466, 472, 476, 479, 481, 483, 490, 492, 494, 496, 501, 502, 528, 531, 534, 537, 538, 539, 548, 562, 570, 582, 583, 584, 585, 586, 590, 591, 592, 593, 594, 595, 596, 597, 600, 628, 637, 642, 646, 649, 660, 665, 691, 726, 740, 745, 754, 783, 785, 787, 788, 792, 803, 806, 812, 817, 824, 825, 826, 828, 829, 830, 831, 837, 838, 839, 840, 846, 865, 883, 887, 889, 984, 1030, 1033, 1035, 1037, 1046, 1052, 1059, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1073, 1199, 1233, 1236, 1238, 1239, 1240], "It": [13, 21, 39, 43, 45, 55, 61, 63, 80, 132, 139, 143, 151, 178, 189, 190, 191, 192, 195, 196, 197, 200, 201, 210, 212, 214, 218, 219, 223, 228, 229, 242, 251, 252, 259, 265, 268, 275, 278, 282, 290, 295, 297, 306, 309, 312, 315, 341, 354, 410, 411, 427, 438, 442, 460, 465, 488, 490, 504, 509, 515, 518, 526, 542, 547, 552, 555, 564, 566, 588, 591, 592, 599, 600, 646, 727, 739, 756, 757, 793, 803, 820, 825, 840, 851, 887, 914, 915, 927, 930, 945, 984, 985, 993, 994, 1015, 1020, 1022, 1023, 1025, 1038, 1042, 1047, 1063, 1064, 1075, 1080, 1085, 1087, 1098, 1106, 1110, 1111, 1145, 1161, 1166, 1170, 1173, 1179, 1194, 1200, 1212, 1221, 1222, 1241, 1243, 1244, 1246], "let": [13, 17, 42, 61, 62, 63, 127, 131, 152, 190, 191, 192, 195, 196, 197, 200, 205, 212, 213, 214, 219, 220, 252, 266, 270, 272, 278, 282, 309, 312, 314, 316, 319, 334, 337, 345, 486, 494, 504, 506, 507, 509, 511, 514, 526, 540, 542, 544, 546, 551, 564, 570, 587, 598, 599, 601, 604, 620, 634, 644, 645, 657, 661, 663, 664, 714, 720, 726, 727, 733, 743, 760, 788, 792, 797, 801, 856, 860, 879, 887, 895, 923, 932, 945, 950, 985, 992, 993, 1005, 1018, 1020, 1021, 1035, 1044, 1046, 1062, 1064, 1075, 1078, 1079, 1085, 1087, 1091, 1128, 1135, 1137, 1145, 1153, 1175, 1183, 1188, 1195, 1196, 1201, 1204, 1221, 1241], "me": [13, 23, 32, 37, 61, 63, 67, 126, 171, 184, 189, 190, 191, 192, 195, 196, 197, 200, 201, 205, 218, 219, 220, 222, 226, 249, 251, 252, 276, 327, 345, 371, 397, 486, 488, 489, 504, 519, 534, 631, 655, 720, 756, 797, 803, 860, 923, 950, 985, 993, 994, 1005, 1009, 1062, 1065, 1075, 1091, 1094, 1135, 1188, 1192, 1222], "focu": [13, 193, 197, 200, 214, 222, 226, 309, 312, 372, 493, 497, 549, 742, 771, 985, 993, 995, 1111, 1195, 1215, 1244], "myself": [13, 186, 187, 197, 218, 226, 241, 257, 512, 860, 923, 945, 950, 967], "ey": [13, 32, 37, 275, 278, 288, 310, 352, 358, 364, 368, 1122], "toward": [13, 222, 403, 486, 566, 695], "consist": [13, 27, 222, 237, 278, 344, 388, 405, 419, 422, 460, 462, 500, 519, 591, 599, 644, 756, 948, 1022, 1056, 1111, 1112, 1115, 1157, 1166, 1190, 1211], "won": [13, 143, 200, 201, 278, 308, 383, 417, 484, 530, 535, 598, 600, 646, 797, 803, 855, 867, 993, 1005, 1012, 1065, 1088, 1137], "break": [13, 36, 38, 183, 213, 222, 223, 228, 235, 241, 242, 250, 262, 265, 271, 272, 275, 278, 281, 282, 285, 288, 303, 310, 324, 352, 358, 364, 368, 372, 389, 454, 458, 459, 466, 472, 476, 479, 483, 486, 490, 492, 494, 496, 501, 502, 504, 685, 716, 727, 729, 736, 745, 771, 779, 783, 804, 817, 825, 837, 839, 840, 877, 1010, 1011, 1020, 1046, 1052, 1059, 1091, 1099, 1137, 1201], "move": [13, 54, 62, 101, 116, 120, 126, 139, 148, 170, 178, 187, 191, 201, 219, 227, 230, 241, 252, 268, 293, 296, 305, 306, 317, 326, 327, 361, 370, 371, 382, 397, 400, 504, 505, 528, 531, 540, 582, 591, 620, 645, 646, 653, 654, 655, 656, 658, 704, 751, 771, 783, 793, 795, 799, 802, 804, 805, 808, 815, 816, 817, 836, 837, 839, 840, 856, 889, 911, 914, 915, 916, 917, 951, 952, 953, 954, 957, 958, 959, 960, 962, 968, 984, 985, 1009, 1010, 1047, 1081, 1118, 1217, 1240, 1241, 1242, 1249, 1250], "around": [13, 24, 37, 61, 63, 65, 67, 100, 126, 131, 134, 147, 190, 191, 192, 197, 201, 211, 222, 226, 250, 276, 287, 294, 295, 297, 317, 345, 354, 355, 373, 374, 380, 415, 443, 540, 552, 554, 563, 588, 644, 741, 744, 746, 796, 798, 839, 840, 887, 892, 1020, 1035, 1056, 1059, 1081, 1087, 1103, 1107, 1109, 1131, 1184, 1188, 1190, 1194, 1195, 1206, 1207, 1210], "last": [13, 61, 63, 67, 124, 126, 155, 186, 190, 191, 192, 207, 212, 222, 223, 229, 241, 242, 249, 257, 259, 262, 265, 266, 275, 278, 288, 303, 308, 310, 324, 346, 388, 394, 401, 403, 470, 488, 522, 672, 674, 675, 676, 677, 681, 684, 774, 777, 778, 779, 838, 840, 887, 948, 951, 954, 970, 979, 981, 984, 1012, 1017, 1025, 1034, 1039, 1041, 1046, 1061, 1073, 1084, 1085, 1086, 1087, 1091, 1095, 1099, 1100, 1106, 1107, 1112, 1120, 1128, 1129, 1133, 1135, 1138, 1139, 1150, 1177, 1183, 1185, 1196, 1201, 1209, 1210, 1222, 1229, 1259], "least": [13, 24, 37, 61, 63, 83, 192, 200, 214, 218, 220, 222, 229, 230, 249, 251, 252, 266, 268, 278, 282, 308, 312, 314, 324, 326, 370, 418, 436, 442, 443, 456, 482, 485, 486, 494, 516, 542, 614, 699, 743, 793, 795, 802, 807, 810, 820, 850, 883, 885, 919, 985, 987, 995, 1033, 1056, 1060, 1082, 1091, 1095, 1111, 1112, 1122, 1146, 1194, 1229], "ha": [13, 21, 24, 27, 28, 43, 45, 53, 56, 62, 80, 112, 113, 114, 115, 116, 117, 118, 120, 124, 125, 127, 134, 137, 139, 143, 152, 159, 171, 177, 187, 189, 190, 191, 192, 193, 194, 195, 197, 200, 201, 205, 210, 212, 214, 218, 219, 222, 226, 228, 229, 230, 240, 242, 246, 247, 249, 250, 252, 259, 262, 265, 268, 270, 272, 273, 275, 278, 282, 285, 288, 291, 299, 300, 303, 306, 307, 308, 309, 310, 312, 314, 315, 317, 320, 323, 324, 330, 332, 341, 342, 345, 346, 348, 352, 355, 358, 361, 364, 368, 383, 390, 392, 394, 403, 417, 426, 429, 439, 442, 443, 452, 455, 463, 464, 471, 477, 478, 481, 485, 487, 488, 494, 500, 504, 506, 509, 513, 515, 522, 524, 526, 528, 531, 532, 535, 539, 540, 542, 543, 544, 547, 552, 553, 556, 564, 569, 583, 585, 595, 618, 628, 643, 645, 646, 647, 648, 651, 652, 653, 656, 657, 660, 667, 677, 698, 699, 716, 717, 720, 726, 730, 731, 736, 737, 739, 748, 750, 753, 756, 765, 766, 767, 771, 780, 781, 782, 785, 793, 801, 803, 806, 807, 809, 815, 819, 820, 838, 840, 841, 851, 856, 881, 883, 885, 887, 897, 900, 901, 903, 907, 914, 918, 919, 920, 921, 923, 925, 926, 927, 933, 944, 946, 951, 977, 985, 991, 992, 993, 994, 1003, 1005, 1008, 1014, 1020, 1030, 1032, 1033, 1035, 1043, 1044, 1046, 1047, 1048, 1049, 1056, 1060, 1062, 1077, 1079, 1080, 1082, 1084, 1085, 1086, 1089, 1091, 1094, 1099, 1100, 1101, 1107, 1109, 1111, 1114, 1117, 1118, 1122, 1127, 1128, 1132, 1150, 1170, 1185, 1187, 1188, 1194, 1195, 1196, 1197, 1201, 1209, 1210, 1212, 1214, 1221, 1223, 1228, 1230, 1241, 1243, 1244, 1246, 1249, 1250], "extens": [13, 14, 23, 28, 32, 37, 40, 171, 185, 200, 222, 249, 251, 259, 265, 275, 278, 358, 383, 464, 504, 520, 528, 552, 643, 782, 838, 841, 912, 925, 1062, 1094, 1111, 1114, 1216, 1221], "interfac": [13, 53, 56, 66, 74, 75, 76, 80, 82, 84, 87, 108, 116, 121, 122, 127, 128, 129, 130, 131, 132, 134, 136, 137, 139, 143, 144, 147, 186, 187, 190, 207, 209, 210, 217, 226, 252, 266, 268, 280, 298, 299, 306, 315, 333, 345, 349, 375, 376, 378, 380, 386, 387, 397, 398, 399, 403, 406, 415, 416, 504, 510, 512, 513, 514, 515, 516, 517, 523, 524, 530, 533, 541, 542, 543, 544, 547, 548, 554, 562, 566, 568, 569, 590, 594, 596, 620, 642, 667, 715, 717, 740, 782, 789, 790, 806, 807, 824, 825, 839, 840, 984, 985, 990, 992, 994, 1028, 1062, 1085, 1200, 1240, 1245, 1246, 1252, 1255, 1258], "lot": [13, 71, 94, 99, 187, 189, 190, 192, 197, 201, 219, 222, 226, 242, 319, 400, 436, 485, 490, 494, 500, 508, 637, 714, 840, 871, 881, 887, 916, 917, 927, 948, 984, 993, 1010, 1062, 1078, 1106, 1111, 1133, 1190, 1242], "littl": [13, 27, 44, 192, 194, 197, 200, 201, 210, 222, 250, 259, 265, 266, 268, 275, 278, 300, 306, 317, 372, 415, 465, 493, 494, 505, 654, 657, 660, 716, 722, 803, 806, 843, 985, 987, 993, 1041, 1063, 1134, 1204], "maintain": [13, 28, 30, 54, 72, 82, 187, 189, 190, 197, 219, 228, 249, 251, 259, 263, 265, 275, 278, 287, 397, 411, 490, 504, 692, 743, 754, 865, 887, 895, 897, 899, 1031, 1062, 1063, 1064, 1066, 1073, 1078, 1079, 1080, 1081, 1129, 1193, 1243], "packag": [13, 21, 23, 29, 32, 60, 99, 106, 126, 149, 150, 151, 163, 169, 179, 180, 186, 191, 205, 220, 222, 223, 226, 227, 229, 236, 241, 247, 249, 250, 251, 257, 259, 263, 265, 266, 269, 273, 275, 276, 278, 279, 281, 284, 287, 290, 308, 318, 319, 323, 327, 332, 337, 341, 344, 345, 348, 351, 358, 363, 367, 375, 378, 397, 398, 399, 400, 404, 415, 416, 534, 535, 537, 538, 840, 860, 984, 992, 993, 1015, 1064, 1070, 1073, 1088, 1111, 1118, 1141, 1142, 1144, 1145, 1146, 1147, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1194, 1198, 1202, 1203, 1204, 1209, 1210, 1220, 1221, 1222, 1224, 1225, 1230, 1243], "virtual": [13, 29, 71, 82, 108, 109, 114, 115, 116, 117, 118, 121, 122, 125, 135, 139, 144, 186, 192, 195, 197, 217, 222, 226, 237, 241, 257, 273, 276, 279, 290, 295, 297, 299, 306, 315, 316, 317, 318, 319, 323, 334, 337, 340, 341, 344, 345, 351, 355, 363, 367, 404, 415, 416, 531, 543, 545, 548, 549, 554, 556, 562, 566, 571, 573, 574, 575, 578, 579, 580, 581, 582, 583, 590, 600, 640, 642, 667, 714, 715, 716, 740, 782, 790, 801, 803, 807, 839, 840, 846, 918, 924, 927, 986, 992, 994, 1003, 1012, 1028, 1046, 1056, 1111, 1114, 1141, 1142, 1143, 1186, 1188, 1189, 1190, 1194, 1202, 1204, 1215, 1218, 1221, 1240, 1247, 1256], "environ": [13, 21, 29, 77, 80, 99, 106, 126, 178, 186, 190, 201, 205, 226, 232, 241, 242, 247, 257, 260, 263, 273, 276, 279, 290, 296, 299, 305, 318, 319, 323, 326, 327, 334, 337, 340, 341, 344, 345, 351, 358, 363, 367, 368, 370, 371, 398, 399, 410, 411, 549, 569, 583, 598, 599, 600, 601, 662, 801, 802, 825, 840, 917, 922, 926, 927, 948, 949, 968, 984, 985, 1025, 1042, 1047, 1063, 1073, 1074, 1075, 1080, 1082, 1094, 1114, 1116, 1141, 1142, 1143, 1186, 1188, 1189, 1190, 1194, 1195, 1202, 1204, 1209, 1210, 1215, 1216, 1218, 1221, 1222, 1228, 1232, 1234], "repo": [13, 124, 168, 201, 205, 217, 220, 231, 358, 383, 388, 397, 401, 402, 610, 611, 612, 613, 615, 616, 617, 860, 887, 889, 1077, 1230], "creat": [13, 17, 21, 24, 39, 42, 44, 54, 60, 61, 62, 63, 65, 79, 101, 103, 104, 111, 116, 120, 126, 130, 131, 148, 149, 151, 169, 176, 183, 186, 190, 191, 192, 194, 197, 200, 201, 205, 207, 209, 210, 211, 226, 227, 228, 229, 230, 231, 242, 247, 255, 260, 265, 266, 268, 273, 275, 278, 282, 287, 290, 295, 296, 297, 305, 306, 314, 317, 318, 319, 323, 324, 326, 327, 329, 334, 337, 341, 344, 345, 370, 371, 376, 397, 402, 421, 498, 500, 506, 513, 519, 522, 526, 532, 534, 542, 544, 547, 548, 549, 562, 563, 564, 568, 570, 571, 585, 588, 590, 591, 592, 593, 594, 595, 596, 597, 598, 600, 601, 602, 642, 644, 647, 658, 698, 700, 716, 726, 732, 735, 737, 746, 748, 771, 785, 788, 797, 803, 804, 816, 817, 825, 835, 836, 838, 839, 840, 843, 846, 850, 851, 856, 858, 860, 862, 865, 871, 883, 887, 916, 917, 918, 919, 920, 921, 922, 928, 930, 931, 935, 936, 937, 939, 941, 943, 946, 952, 953, 955, 957, 958, 959, 960, 962, 968, 984, 992, 993, 994, 996, 997, 998, 1000, 1001, 1003, 1005, 1007, 1013, 1014, 1015, 1022, 1023, 1024, 1025, 1030, 1031, 1032, 1038, 1039, 1042, 1045, 1046, 1047, 1054, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1078, 1079, 1084, 1085, 1087, 1089, 1091, 1095, 1099, 1100, 1101, 1103, 1117, 1118, 1127, 1128, 1129, 1138, 1142, 1143, 1144, 1156, 1164, 1165, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1188, 1190, 1191, 1192, 1194, 1197, 1200, 1204, 1213, 1221, 1223, 1224, 1243], "popul": [13, 192, 196, 282, 315, 843], "yourself": [13, 190, 197, 201, 212, 268, 449, 517, 645, 662, 667, 892, 950, 1033, 1056, 1110, 1246], "root": [13, 38, 62, 82, 126, 150, 152, 168, 189, 195, 197, 200, 201, 212, 217, 218, 219, 226, 230, 240, 262, 268, 278, 282, 285, 288, 303, 306, 310, 320, 324, 346, 352, 358, 364, 371, 382, 383, 388, 417, 484, 493, 497, 500, 520, 535, 539, 543, 601, 663, 719, 838, 851, 887, 888, 889, 918, 923, 925, 944, 948, 960, 961, 967, 970, 972, 973, 974, 976, 977, 979, 985, 992, 993, 994, 996, 997, 1001, 1010, 1015, 1020, 1028, 1048, 1062, 1065, 1075, 1077, 1086, 1166, 1175, 1176, 1213, 1221], "activ": [13, 147, 195, 205, 207, 230, 290, 743, 867, 869, 873, 881, 923, 925, 980, 1142, 1221, 1223], "txt": [13, 33, 42, 44, 124, 126, 131, 144, 185, 192, 208, 209, 213, 216, 217, 218, 219, 220, 249, 251, 256, 259, 268, 269, 278, 290, 300, 334, 337, 368, 374, 376, 377, 379, 388, 389, 429, 508, 509, 510, 511, 513, 514, 516, 524, 526, 528, 532, 534, 535, 537, 538, 539, 540, 585, 598, 599, 600, 601, 602, 621, 624, 627, 628, 630, 633, 636, 639, 734, 838, 858, 913, 914, 915, 928, 932, 942, 952, 953, 954, 955, 959, 960, 967, 988, 992, 993, 994, 1028, 1051, 1054, 1058, 1063, 1064, 1075, 1086, 1133, 1157, 1175, 1223, 1224, 1227, 1230, 1232], "fedorish": [13, 860, 1005, 1204], "your": [13, 43, 66, 104, 111, 126, 143, 149, 171, 189, 190, 192, 193, 194, 195, 196, 197, 200, 201, 205, 206, 219, 222, 225, 226, 230, 242, 250, 251, 268, 276, 282, 295, 297, 299, 306, 309, 312, 354, 371, 374, 383, 394, 403, 405, 449, 484, 492, 494, 496, 501, 502, 504, 515, 518, 519, 524, 526, 538, 543, 547, 568, 585, 588, 599, 601, 602, 659, 734, 735, 737, 738, 745, 751, 759, 783, 825, 837, 839, 840, 862, 879, 887, 892, 913, 914, 915, 917, 925, 927, 928, 937, 938, 939, 940, 941, 942, 943, 949, 952, 953, 954, 955, 957, 966, 984, 985, 992, 994, 996, 997, 1001, 1005, 1020, 1022, 1075, 1078, 1089, 1100, 1106, 1111, 1115, 1157, 1171, 1175, 1176, 1188, 1193, 1204, 1214, 1216, 1221, 1222, 1223, 1230, 1246], "mileag": [13, 295, 297, 1204, 1221], "might": [13, 27, 60, 61, 63, 124, 132, 137, 143, 189, 190, 191, 193, 195, 197, 200, 201, 205, 218, 220, 222, 230, 251, 259, 265, 270, 275, 278, 309, 312, 315, 341, 372, 383, 408, 480, 494, 504, 531, 535, 540, 544, 547, 568, 601, 651, 660, 726, 780, 790, 803, 804, 805, 838, 862, 873, 877, 883, 887, 930, 985, 992, 993, 994, 1005, 1010, 1019, 1041, 1048, 1059, 1075, 1078, 1086, 1095, 1098, 1111, 1190, 1204, 1221, 1224, 1228], "vari": [13, 259, 265, 275, 278, 282, 295, 297, 318, 319, 340, 344, 420, 494, 518, 698, 818, 887, 994, 1080, 1200, 1204, 1221, 1241], "dnf": [13, 60, 134, 171, 186, 193, 201, 205, 219, 358, 417, 513, 515, 516, 539, 614, 860, 888, 987, 1005, 1064, 1077, 1204, 1228, 1230], "pandoc": 13, "graphviz": [13, 538, 1064], "dia": [13, 262, 320, 970, 1145], "gtest": [13, 44, 126, 217, 218, 219, 220, 373, 374, 380, 417, 517, 542, 543, 544, 546, 547, 549, 551, 564, 566, 567, 591, 592, 593, 594, 595, 596, 597, 598, 600, 601, 602, 603, 604, 605, 606, 608, 610, 611, 612, 613, 615, 616, 617, 618, 619, 637, 644, 645, 646, 657, 658, 660, 661, 662, 663, 664, 722, 726, 748, 750, 753, 754, 755, 786, 792, 797, 801, 802, 803, 804, 806, 819, 820, 834, 835, 836, 838, 840, 1226], "devel": [13, 134, 171, 186, 201, 219, 513, 515, 516, 537, 539, 860, 1228, 1230], "markdown": [13, 23, 392, 1143], "handl": [13, 21, 29, 46, 76, 131, 152, 155, 184, 190, 210, 222, 226, 227, 229, 231, 237, 250, 252, 257, 259, 263, 266, 267, 275, 280, 287, 299, 306, 316, 323, 324, 334, 337, 345, 350, 356, 362, 366, 397, 402, 404, 410, 411, 418, 458, 465, 470, 486, 490, 513, 516, 590, 620, 642, 657, 667, 700, 704, 726, 727, 736, 737, 738, 771, 773, 800, 803, 815, 816, 839, 840, 846, 850, 869, 881, 917, 920, 921, 922, 984, 992, 1007, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1017, 1020, 1022, 1023, 1025, 1033, 1039, 1042, 1045, 1047, 1050, 1056, 1059, 1088, 1106, 1111, 1112, 1127, 1137, 1140, 1186, 1188, 1240, 1246, 1255], "jupyt": [13, 205, 210, 211, 213, 222, 223, 225, 233, 273, 275, 276, 278, 279, 308, 309, 312, 313, 319, 323, 329, 334, 337, 341, 345, 351, 358, 368, 397, 402, 970, 1111, 1190, 1191, 1195, 1251], "notebook": [13, 32, 205, 209, 210, 211, 213, 222, 225, 233, 266, 273, 276, 278, 279, 281, 284, 287, 290, 299, 302, 308, 309, 312, 313, 319, 323, 329, 334, 337, 341, 345, 351, 352, 357, 363, 367, 368, 382, 402, 1111, 1190, 1195, 1251], "those": [13, 24, 80, 124, 135, 144, 183, 190, 191, 197, 200, 205, 220, 222, 226, 231, 249, 251, 252, 259, 263, 268, 269, 270, 272, 278, 282, 314, 315, 316, 317, 319, 334, 372, 374, 376, 379, 382, 394, 397, 403, 408, 429, 484, 494, 504, 506, 511, 514, 516, 526, 535, 543, 544, 547, 548, 614, 657, 679, 720, 723, 731, 746, 781, 797, 805, 807, 838, 853, 856, 887, 914, 915, 932, 933, 985, 992, 993, 994, 1059, 1079, 1080, 1081, 1082, 1086, 1087, 1088, 1094, 1099, 1110, 1152, 1162, 1183, 1193, 1201, 1202, 1207, 1209, 1221, 1243, 1244, 1246], "funki": [13, 17, 192], "graph": [13, 29, 80, 89, 144, 260, 273, 287, 290, 323, 329, 376, 397, 404, 499, 515, 531, 538, 1064, 1079, 1080, 1188, 1194], "histor": [13, 24, 80, 192, 214, 430, 443, 488, 742, 846, 926, 1005, 1060, 1179, 1233], "baggag": [13, 430, 443, 742, 1060, 1179], "convert": [13, 17, 29, 42, 183, 211, 241, 249, 255, 259, 262, 265, 268, 272, 275, 278, 279, 282, 299, 324, 334, 337, 352, 382, 443, 465, 490, 500, 511, 538, 543, 598, 713, 720, 722, 726, 755, 756, 840, 841, 1022, 1062, 1102, 1145, 1147, 1152, 1159, 1162, 1181, 1182, 1183, 1186, 1201], "draw": [13, 171, 187, 230, 341, 405, 440, 596, 795, 844, 848, 856, 877, 900], "svg": [13, 187], "ani": [13, 39, 45, 49, 65, 121, 144, 152, 170, 183, 186, 189, 190, 191, 192, 195, 197, 201, 205, 210, 214, 225, 228, 230, 242, 249, 251, 259, 265, 275, 278, 282, 293, 294, 295, 303, 319, 324, 341, 354, 373, 383, 404, 405, 438, 482, 490, 504, 507, 514, 518, 519, 520, 524, 547, 552, 594, 595, 596, 597, 601, 602, 614, 631, 649, 652, 678, 716, 722, 724, 730, 743, 746, 748, 765, 771, 789, 790, 793, 802, 803, 804, 806, 807, 815, 821, 838, 839, 840, 845, 846, 858, 860, 879, 887, 897, 904, 914, 915, 925, 928, 935, 936, 939, 940, 941, 942, 948, 960, 970, 985, 992, 993, 994, 997, 1020, 1031, 1035, 1055, 1082, 1084, 1085, 1086, 1087, 1091, 1098, 1099, 1106, 1109, 1118, 1123, 1125, 1136, 1137, 1143, 1167, 1169, 1184, 1195, 1210, 1211, 1215, 1216, 1228, 1241, 1246], "That": [13, 86, 100, 101, 124, 126, 127, 131, 135, 152, 159, 189, 190, 191, 192, 195, 200, 201, 205, 214, 222, 226, 229, 268, 292, 296, 298, 312, 315, 317, 408, 472, 473, 476, 479, 483, 492, 496, 501, 502, 516, 530, 531, 543, 544, 554, 566, 568, 570, 586, 588, 601, 648, 652, 735, 745, 783, 809, 815, 816, 837, 839, 840, 914, 915, 917, 918, 920, 921, 922, 924, 925, 934, 937, 938, 939, 940, 941, 942, 943, 948, 984, 985, 993, 996, 997, 998, 999, 1000, 1003, 1021, 1025, 1039, 1045, 1047, 1068, 1069, 1073, 1074, 1085, 1111, 1118, 1178, 1180, 1185, 1214, 1221, 1231, 1241], "sloppili": [13, 1018], "track": [13, 124, 152, 193, 197, 205, 229, 249, 259, 265, 275, 278, 802, 860, 887, 888, 892, 925, 1098], "opentrain": [13, 22, 28, 170, 187, 227, 234, 252, 405, 416, 1221, 1251], "recip": [13, 39, 182, 186, 190, 191, 398, 399, 484, 669], "sphinx": [14, 17, 23, 39, 173, 186, 187, 202, 403, 841, 1221], "togeth": [14, 24, 43, 50, 106, 108, 112, 113, 131, 135, 159, 180, 197, 200, 201, 205, 210, 220, 222, 226, 230, 242, 251, 268, 295, 297, 314, 315, 317, 332, 341, 344, 348, 405, 415, 461, 494, 495, 512, 514, 591, 601, 620, 642, 660, 661, 663, 664, 815, 817, 851, 864, 887, 914, 915, 974, 975, 993, 994, 1024, 1038, 1062, 1068, 1069, 1073, 1075, 1078, 1082, 1161, 1194, 1214, 1216, 1224, 1226, 1228, 1241, 1243], "form": [14, 29, 192, 197, 210, 214, 238, 259, 265, 266, 275, 278, 315, 317, 416, 481, 497, 556, 564, 566, 605, 606, 618, 716, 726, 841, 887, 892, 895, 919, 970, 994, 1122, 1142, 1145, 1178, 1180, 1183, 1184, 1190, 1196, 1216, 1221, 1241], "short": [14, 32, 35, 43, 108, 144, 190, 197, 205, 218, 222, 226, 229, 230, 231, 241, 242, 259, 263, 264, 265, 270, 273, 275, 276, 280, 298, 314, 315, 316, 317, 318, 319, 420, 436, 438, 443, 447, 448, 473, 482, 526, 548, 562, 590, 602, 642, 647, 651, 840, 883, 889, 892, 927, 948, 973, 992, 994, 1005, 1012, 1022, 1044, 1049, 1083, 1097, 1120, 1123, 1139, 1212, 1221, 1223, 1241], "video": [14, 22, 184, 193, 195, 197, 208, 222, 225, 226, 229, 234, 247, 250, 251, 273, 317, 320, 323, 505, 793, 985, 993, 1188, 1195, 1204], "explain": [14, 62, 65, 99, 131, 184, 189, 195, 201, 214, 222, 226, 228, 252, 263, 268, 270, 272, 273, 281, 282, 319, 373, 382, 412, 415, 484, 494, 634, 928, 948, 951, 985, 994, 1050, 1134, 1188, 1221, 1246], "case": [14, 24, 43, 99, 106, 108, 111, 124, 129, 132, 144, 152, 189, 190, 191, 194, 197, 200, 201, 205, 211, 214, 226, 228, 230, 232, 252, 265, 266, 272, 278, 282, 285, 294, 295, 297, 298, 306, 309, 312, 324, 341, 344, 354, 372, 373, 405, 427, 434, 453, 455, 486, 488, 506, 514, 518, 524, 526, 535, 537, 541, 548, 552, 555, 590, 598, 599, 601, 607, 609, 628, 642, 649, 659, 698, 704, 724, 737, 743, 760, 771, 783, 790, 793, 801, 815, 826, 828, 838, 839, 840, 860, 887, 900, 903, 915, 919, 923, 930, 944, 960, 977, 984, 985, 994, 1004, 1005, 1011, 1022, 1041, 1046, 1060, 1067, 1070, 1073, 1075, 1077, 1079, 1086, 1087, 1117, 1118, 1129, 1133, 1157, 1196, 1212, 1221, 1229, 1244], "netide": 14, "f\u00f6rderantrag": 14, "miscellan": [14, 29, 92, 169, 234, 247, 250, 257, 260, 261, 263, 269, 271, 273, 274, 279, 280, 281, 284, 287, 289, 297, 302, 304, 308, 309, 312, 322, 323, 325, 328, 331, 345, 350, 353, 355, 356, 357, 359, 362, 363, 366, 367, 369, 383, 384, 385, 386, 387, 388, 397, 405, 416, 548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 607, 609, 723, 724, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 752, 783, 799, 808, 816, 825, 837, 839, 840, 841, 984, 1014, 1015, 1020, 1023, 1025, 1039, 1042, 1088, 1110, 1141, 1145, 1146, 1147, 1157, 1160, 1168, 1169, 1171, 1172, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1189, 1190, 1194, 1195, 1201, 1204, 1208, 1215, 1218, 1225, 1240, 1241, 1242, 1251], "s5": [16, 23, 186, 1056, 1060, 1255], "slide": [16, 23, 24, 27, 37, 64, 68, 186, 187, 190, 208, 215, 217, 222, 226, 230, 231, 232, 241, 242, 251, 252, 268, 294, 295, 306, 372, 408, 411, 416, 637, 899, 1057, 1061, 1160, 1201, 1237, 1238, 1239, 1247, 1248, 1254, 1255, 1257, 1258, 1259], "work": [16, 24, 27, 40, 42, 43, 44, 57, 60, 65, 67, 73, 80, 82, 100, 101, 106, 108, 111, 125, 127, 129, 143, 144, 147, 148, 163, 168, 171, 175, 176, 186, 189, 190, 191, 193, 195, 196, 197, 200, 201, 205, 214, 218, 219, 220, 229, 230, 232, 242, 247, 249, 251, 259, 260, 263, 265, 266, 268, 273, 275, 278, 282, 287, 296, 299, 305, 306, 308, 309, 312, 319, 320, 323, 324, 326, 327, 329, 357, 358, 370, 371, 372, 374, 383, 397, 402, 403, 405, 410, 411, 416, 417, 461, 462, 482, 484, 494, 504, 506, 509, 510, 516, 517, 519, 520, 525, 532, 534, 535, 537, 538, 540, 543, 544, 547, 548, 549, 562, 588, 590, 591, 592, 593, 594, 595, 596, 597, 598, 600, 601, 637, 642, 662, 691, 698, 732, 734, 736, 744, 746, 748, 791, 797, 801, 802, 803, 807, 809, 816, 836, 839, 840, 841, 850, 855, 865, 867, 871, 885, 887, 892, 895, 909, 913, 914, 915, 916, 917, 920, 921, 922, 923, 925, 927, 932, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 948, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 968, 970, 972, 981, 984, 985, 993, 997, 1001, 1005, 1007, 1012, 1013, 1015, 1018, 1021, 1023, 1025, 1030, 1039, 1042, 1044, 1045, 1047, 1060, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1078, 1080, 1086, 1109, 1112, 1113, 1114, 1133, 1139, 1142, 1143, 1165, 1175, 1176, 1188, 1195, 1204, 1206, 1207, 1209, 1210, 1212, 1221, 1230, 1241, 1246, 1247, 1253], "progress": [16, 171, 186, 416, 841, 950, 1230], "web": [16, 23, 74, 76, 80, 169, 187, 197, 226, 229, 250, 253, 299, 323, 345, 840, 1188, 1195, 1201, 1204], "note": [16, 32, 36, 40, 44, 59, 62, 124, 126, 139, 143, 163, 166, 169, 175, 189, 190, 192, 197, 210, 211, 222, 241, 249, 251, 262, 263, 265, 290, 319, 324, 341, 344, 345, 374, 388, 389, 506, 510, 516, 519, 524, 537, 566, 614, 637, 646, 647, 653, 658, 717, 760, 780, 781, 782, 793, 795, 801, 802, 803, 805, 846, 887, 904, 914, 915, 975, 993, 1011, 1022, 1075, 1128, 1131, 1133, 1137, 1193, 1204, 1206, 1209, 1228], "screencast": [16, 23, 169, 1188], "written": [16, 42, 43, 80, 108, 127, 134, 189, 190, 195, 205, 228, 278, 372, 399, 461, 464, 480, 488, 490, 494, 534, 564, 654, 720, 734, 754, 841, 927, 1014, 1021, 1056, 1063, 1064, 1073, 1105, 1112, 1143, 1243], "draft": [16, 29, 165, 222, 839, 840, 984, 1139, 1186, 1187, 1202], "convers": [17, 152, 229, 241, 248, 251, 252, 259, 264, 265, 268, 271, 274, 275, 280, 283, 286, 304, 315, 317, 321, 325, 331, 343, 347, 351, 353, 359, 365, 397, 421, 436, 450, 459, 466, 472, 476, 479, 483, 490, 492, 496, 501, 502, 506, 563, 625, 713, 717, 742, 744, 745, 747, 783, 837, 839, 840, 890, 1137, 1155, 1159, 1162, 1173], "old": [17, 29, 132, 187, 190, 192, 195, 220, 230, 262, 263, 278, 310, 320, 324, 349, 374, 416, 439, 478, 499, 504, 524, 547, 620, 673, 680, 685, 700, 733, 739, 742, 747, 748, 789, 807, 818, 844, 850, 860, 879, 985, 993, 1049, 1126, 1132, 1145, 1166, 1212, 1242], "latex": [17, 23, 24, 620], "beamer": [17, 23, 24], "To": [17, 29, 45, 60, 80, 104, 114, 115, 117, 118, 124, 125, 132, 169, 189, 190, 192, 194, 205, 214, 218, 222, 237, 249, 259, 265, 275, 278, 279, 282, 286, 294, 295, 297, 299, 319, 334, 337, 341, 380, 430, 433, 488, 500, 544, 589, 602, 698, 712, 723, 740, 742, 783, 799, 835, 839, 840, 860, 864, 875, 887, 916, 923, 984, 985, 992, 993, 998, 1000, 1013, 1022, 1079, 1088, 1102, 1147, 1153, 1176, 1181, 1182, 1183, 1186, 1194, 1201], "put": [17, 58, 71, 82, 135, 139, 171, 183, 189, 190, 191, 218, 226, 341, 344, 506, 508, 509, 516, 528, 598, 642, 729, 753, 789, 815, 856, 864, 877, 879, 904, 985, 993, 1022, 1047, 1062, 1078, 1081, 1086, 1145, 1226], "more": [17, 21, 27, 29, 43, 45, 61, 63, 67, 71, 80, 84, 92, 99, 103, 108, 116, 122, 126, 127, 130, 131, 134, 144, 183, 187, 190, 191, 194, 195, 197, 200, 201, 203, 205, 211, 212, 214, 219, 222, 226, 227, 228, 229, 230, 231, 232, 234, 236, 241, 242, 247, 249, 250, 251, 252, 253, 257, 260, 263, 264, 266, 267, 268, 269, 271, 272, 273, 276, 279, 280, 281, 283, 284, 286, 290, 294, 295, 296, 297, 301, 304, 305, 315, 316, 317, 324, 326, 327, 331, 333, 341, 345, 349, 353, 354, 355, 359, 365, 369, 370, 373, 374, 375, 377, 378, 379, 383, 384, 385, 386, 387, 388, 400, 402, 408, 415, 416, 427, 432, 436, 439, 443, 453, 454, 455, 464, 466, 472, 473, 476, 479, 483, 484, 489, 490, 492, 494, 496, 498, 499, 500, 501, 502, 506, 507, 509, 513, 517, 523, 533, 535, 537, 548, 555, 562, 564, 568, 569, 580, 585, 590, 598, 600, 620, 637, 642, 646, 650, 699, 713, 714, 715, 728, 729, 730, 731, 732, 733, 735, 736, 737, 738, 739, 740, 742, 745, 752, 753, 764, 771, 780, 783, 784, 792, 793, 795, 797, 799, 800, 802, 803, 806, 808, 816, 817, 837, 838, 839, 840, 843, 846, 858, 860, 865, 871, 873, 875, 879, 881, 883, 887, 913, 918, 924, 948, 951, 981, 985, 987, 991, 992, 993, 994, 1005, 1011, 1014, 1017, 1020, 1031, 1033, 1044, 1048, 1050, 1056, 1060, 1062, 1063, 1064, 1073, 1075, 1079, 1080, 1081, 1087, 1089, 1091, 1095, 1096, 1097, 1098, 1102, 1105, 1106, 1110, 1111, 1113, 1117, 1118, 1129, 1141, 1144, 1145, 1146, 1147, 1157, 1159, 1160, 1166, 1168, 1169, 1171, 1172, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1188, 1189, 1190, 1193, 1194, 1195, 1197, 1198, 1201, 1202, 1204, 1207, 1211, 1215, 1216, 1218, 1220, 1222, 1223, 1225, 1230, 1234, 1241, 1243, 1244, 1251], "precis": [17, 222, 226, 282, 299, 323, 345, 352, 368, 420, 438, 722, 818, 887, 1132, 1188], "restructuredtext": [17, 23, 32, 33, 34, 35, 36, 38, 841], "turn": [17, 77, 112, 113, 159, 190, 192, 195, 200, 201, 222, 226, 242, 251, 268, 314, 372, 397, 494, 516, 518, 524, 535, 566, 591, 592, 750, 765, 944, 985, 987, 992, 993, 994, 1062, 1064, 1068, 1069, 1079, 1087, 1092, 1093, 1103, 1105, 1214], "rst2s5": 17, "tool": [17, 32, 60, 70, 126, 149, 152, 197, 201, 206, 222, 230, 232, 242, 252, 278, 296, 305, 320, 325, 326, 343, 358, 370, 375, 378, 397, 400, 402, 415, 416, 417, 462, 497, 499, 500, 504, 526, 716, 726, 771, 789, 840, 911, 917, 918, 932, 984, 994, 1005, 1008, 1063, 1064, 1065, 1073, 1077, 1078, 1111, 1112, 1115, 1143, 1207, 1215, 1239, 1241, 1243, 1245, 1252], "thi": [17, 24, 28, 29, 30, 31, 39, 40, 43, 44, 45, 50, 53, 54, 57, 60, 61, 62, 63, 67, 71, 79, 80, 86, 87, 91, 92, 99, 106, 108, 111, 112, 113, 116, 122, 124, 126, 135, 144, 152, 155, 165, 169, 171, 180, 184, 187, 189, 190, 191, 193, 194, 195, 196, 205, 207, 209, 210, 212, 214, 216, 217, 218, 219, 222, 226, 227, 228, 229, 230, 231, 232, 242, 249, 251, 252, 259, 262, 263, 265, 268, 270, 272, 273, 275, 278, 281, 282, 288, 291, 295, 297, 299, 306, 314, 315, 317, 319, 324, 334, 337, 341, 342, 344, 352, 355, 361, 368, 372, 380, 383, 388, 397, 400, 403, 415, 416, 418, 422, 429, 430, 443, 452, 453, 477, 481, 482, 484, 485, 486, 488, 493, 494, 504, 507, 508, 509, 510, 511, 514, 517, 518, 519, 522, 524, 526, 532, 535, 546, 554, 555, 566, 568, 570, 588, 590, 599, 600, 603, 604, 605, 606, 608, 610, 614, 615, 618, 619, 620, 621, 624, 627, 628, 630, 631, 633, 634, 636, 637, 639, 642, 644, 645, 646, 648, 649, 652, 654, 655, 657, 660, 665, 673, 675, 676, 679, 691, 699, 704, 707, 714, 717, 720, 724, 726, 727, 728, 729, 730, 731, 732, 733, 735, 736, 737, 738, 739, 740, 743, 752, 753, 754, 756, 765, 771, 773, 774, 777, 778, 779, 780, 781, 782, 783, 788, 791, 793, 795, 796, 799, 801, 803, 805, 806, 807, 808, 815, 816, 817, 818, 819, 824, 825, 837, 838, 839, 840, 841, 846, 851, 856, 860, 862, 869, 883, 887, 892, 899, 907, 914, 915, 918, 919, 927, 930, 932, 933, 942, 944, 945, 948, 953, 955, 985, 990, 991, 992, 993, 994, 997, 1004, 1005, 1011, 1018, 1019, 1020, 1021, 1022, 1026, 1029, 1038, 1041, 1050, 1051, 1054, 1055, 1058, 1060, 1063, 1064, 1066, 1073, 1075, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1088, 1091, 1093, 1095, 1097, 1099, 1106, 1109, 1110, 1111, 1113, 1115, 1122, 1125, 1127, 1128, 1129, 1132, 1133, 1135, 1137, 1138, 1139, 1144, 1160, 1175, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1201, 1202, 1203, 1204, 1205, 1206, 1210, 1213, 1215, 1216, 1221, 1223, 1226, 1227, 1228, 1230, 1232, 1233, 1241, 1243, 1244, 1246, 1249, 1250, 1256], "sens": [17, 80, 192, 194, 211, 214, 219, 222, 241, 374, 531, 547, 564, 649, 660, 667, 714, 743, 756, 848, 887, 927, 994, 1018, 1041, 1048, 1055, 1106, 1136, 1193, 1244], "entir": [17, 24, 30, 82, 112, 113, 152, 159, 171, 183, 187, 190, 191, 192, 195, 201, 205, 214, 219, 226, 229, 247, 250, 251, 259, 273, 276, 279, 282, 294, 295, 297, 299, 309, 316, 319, 323, 329, 334, 337, 341, 345, 351, 357, 363, 372, 434, 463, 467, 474, 477, 482, 490, 498, 506, 514, 544, 751, 782, 802, 887, 914, 915, 920, 921, 945, 950, 959, 967, 985, 992, 994, 997, 1003, 1020, 1031, 1064, 1094, 1098, 1112, 1117, 1118, 1135, 1137, 1157, 1188, 1221, 1224, 1227, 1244], "site": [17, 23, 27, 39, 60, 169, 171, 186, 187, 190, 202, 205, 217, 218, 219, 223, 249, 259, 265, 275, 278, 341, 358, 659, 806, 927, 1192, 1209, 1210, 1216, 1223, 1230], "massag": [17, 32, 180, 201, 219, 295, 297, 841, 992, 1064], "itself": [17, 27, 131, 134, 144, 190, 192, 218, 222, 228, 259, 265, 275, 278, 324, 352, 375, 378, 386, 432, 464, 500, 509, 515, 535, 563, 564, 586, 601, 647, 654, 713, 791, 806, 815, 818, 862, 865, 887, 907, 913, 914, 915, 930, 948, 977, 1047, 1060, 1075, 1103, 1106, 1111, 1132, 1173, 1214, 1230], "upon": [17, 27, 71, 99, 155, 192, 193, 222, 226, 230, 237, 276, 308, 315, 334, 337, 354, 374, 486, 504, 518, 552, 604, 620, 659, 677, 801, 818, 860, 994, 1060, 1150, 1214, 1221, 1241], "you": [17, 21, 43, 58, 61, 63, 111, 124, 126, 127, 131, 132, 134, 137, 139, 143, 149, 152, 171, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201, 205, 206, 210, 211, 212, 214, 218, 219, 222, 226, 228, 229, 230, 242, 247, 249, 250, 251, 252, 259, 262, 265, 266, 268, 272, 273, 275, 276, 278, 282, 290, 299, 306, 309, 312, 315, 317, 319, 323, 345, 354, 373, 383, 388, 394, 397, 400, 402, 405, 428, 429, 442, 458, 484, 488, 504, 517, 518, 519, 524, 526, 566, 585, 586, 587, 588, 592, 595, 598, 599, 601, 634, 645, 646, 652, 657, 660, 661, 663, 664, 678, 699, 707, 714, 720, 726, 729, 730, 734, 751, 756, 757, 785, 795, 806, 835, 836, 838, 860, 862, 879, 887, 892, 913, 914, 915, 918, 919, 923, 927, 928, 934, 938, 940, 942, 948, 949, 950, 952, 953, 954, 955, 959, 960, 985, 988, 992, 993, 994, 995, 996, 997, 999, 1001, 1004, 1005, 1009, 1011, 1015, 1020, 1022, 1030, 1031, 1032, 1033, 1034, 1038, 1062, 1063, 1064, 1065, 1067, 1071, 1075, 1078, 1079, 1082, 1087, 1088, 1097, 1099, 1110, 1111, 1115, 1118, 1131, 1137, 1145, 1154, 1156, 1171, 1175, 1176, 1185, 1188, 1194, 1201, 1204, 1210, 1221, 1222, 1223, 1230, 1233, 1241, 1246], "view": [17, 62, 162, 195, 196, 200, 211, 213, 226, 228, 294, 295, 299, 306, 354, 355, 368, 373, 380, 415, 432, 434, 497, 745, 783, 792, 794, 839, 840, 914, 915, 925, 932, 985, 994, 996, 1065, 1118, 1187, 1241, 1244, 1246], "state": [17, 45, 121, 126, 131, 186, 197, 202, 222, 230, 252, 259, 262, 265, 275, 276, 278, 437, 454, 486, 504, 591, 592, 596, 597, 644, 751, 785, 815, 845, 883, 904, 918, 977, 987, 1031, 1035, 1046, 1047, 1085, 1091], "rather": [17, 87, 139, 143, 144, 152, 190, 192, 193, 194, 195, 196, 197, 200, 201, 205, 214, 218, 222, 226, 242, 251, 269, 270, 344, 372, 374, 383, 408, 420, 462, 494, 495, 504, 528, 542, 593, 594, 595, 596, 597, 602, 637, 644, 646, 660, 667, 678, 698, 723, 730, 744, 765, 815, 817, 860, 887, 892, 925, 927, 973, 985, 992, 993, 994, 996, 1003, 1008, 1031, 1032, 1059, 1063, 1079, 1104, 1111, 1114, 1122, 1163, 1164, 1167, 1178, 1180, 1195, 1202, 1223, 1228, 1241, 1243], "huge": [17, 196, 201, 211, 555, 792, 865, 883, 1110, 1112, 1217], "tabl": [17, 39, 62, 144, 183, 187, 189, 222, 228, 229, 246, 254, 259, 265, 266, 268, 269, 272, 273, 275, 278, 285, 290, 324, 416, 420, 435, 449, 450, 454, 455, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 722, 745, 783, 792, 837, 839, 840, 927, 1135, 1145, 1177, 1179, 1200, 1201], "isnot": 17, "big": [17, 106, 144, 187, 190, 191, 197, 222, 226, 246, 252, 266, 273, 276, 319, 345, 397, 443, 488, 500, 599, 649, 679, 743, 807, 1008, 1188, 1200, 1256], "fat": [17, 144, 187, 189, 193, 197, 266, 737, 807, 918, 1200], "sai": [17, 24, 108, 135, 144, 174, 178, 189, 190, 191, 192, 194, 195, 196, 197, 200, 201, 205, 210, 211, 222, 226, 263, 268, 290, 309, 312, 316, 318, 319, 340, 341, 374, 383, 397, 488, 494, 500, 507, 516, 524, 526, 532, 544, 553, 564, 570, 585, 587, 599, 628, 637, 646, 656, 704, 717, 726, 730, 739, 743, 756, 771, 775, 777, 778, 779, 781, 786, 793, 796, 797, 802, 846, 860, 887, 927, 930, 932, 967, 985, 992, 994, 1005, 1009, 1020, 1022, 1032, 1044, 1055, 1059, 1065, 1075, 1078, 1079, 1085, 1089, 1111, 1127, 1139, 1145, 1175, 1196, 1230, 1244], "file": [17, 27, 29, 34, 35, 36, 38, 40, 44, 47, 50, 53, 54, 55, 56, 70, 80, 82, 87, 92, 93, 99, 100, 101, 102, 103, 104, 105, 106, 108, 110, 111, 112, 113, 124, 126, 127, 131, 132, 139, 143, 148, 152, 153, 155, 159, 162, 163, 170, 171, 177, 182, 183, 186, 187, 189, 190, 191, 192, 195, 196, 201, 205, 209, 212, 214, 216, 217, 218, 219, 221, 222, 224, 226, 227, 229, 230, 231, 232, 237, 239, 240, 241, 242, 247, 250, 251, 252, 255, 256, 257, 260, 261, 263, 264, 265, 266, 268, 269, 272, 273, 275, 276, 279, 280, 281, 282, 284, 286, 289, 290, 294, 295, 296, 299, 303, 305, 308, 309, 311, 312, 318, 319, 321, 325, 326, 330, 332, 333, 340, 341, 344, 345, 347, 348, 349, 353, 356, 359, 365, 368, 370, 374, 375, 376, 377, 378, 382, 383, 384, 385, 386, 387, 394, 397, 398, 399, 400, 401, 402, 408, 410, 411, 415, 426, 429, 430, 460, 461, 463, 464, 465, 466, 472, 476, 479, 483, 487, 492, 496, 498, 500, 501, 502, 505, 507, 513, 517, 523, 528, 531, 533, 534, 535, 537, 538, 540, 542, 548, 562, 585, 586, 588, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 621, 624, 627, 629, 630, 633, 636, 639, 642, 647, 649, 661, 662, 663, 664, 670, 726, 727, 734, 737, 745, 760, 783, 789, 793, 803, 816, 837, 838, 839, 840, 843, 848, 849, 853, 854, 856, 857, 864, 865, 868, 878, 883, 889, 891, 894, 896, 902, 903, 905, 908, 911, 912, 913, 916, 917, 919, 920, 921, 922, 924, 925, 927, 928, 930, 931, 932, 933, 934, 935, 936, 938, 939, 940, 941, 944, 946, 947, 948, 952, 956, 957, 958, 959, 960, 962, 965, 968, 973, 976, 981, 984, 985, 988, 992, 993, 994, 995, 997, 998, 1000, 1001, 1007, 1008, 1011, 1012, 1013, 1022, 1025, 1026, 1029, 1030, 1036, 1039, 1042, 1045, 1047, 1051, 1053, 1054, 1055, 1058, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1077, 1079, 1080, 1081, 1086, 1087, 1088, 1091, 1094, 1099, 1102, 1105, 1110, 1114, 1116, 1118, 1129, 1135, 1138, 1139, 1146, 1147, 1157, 1160, 1171, 1172, 1175, 1178, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1188, 1193, 1201, 1202, 1209, 1210, 1213, 1216, 1221, 1222, 1223, 1224, 1227, 1229, 1232, 1238, 1243, 1245, 1246, 1247, 1254, 1255, 1256, 1258], "rst": [17, 23, 32, 34, 35, 36, 38, 126, 170, 186, 209, 216, 221, 224, 230, 278, 288, 352, 405, 621, 624, 627, 630, 633, 636, 639, 1051, 1054, 1058, 1227, 1232], "render": [17, 40, 195, 358, 368], "dure": [17, 27, 45, 46, 106, 108, 180, 189, 190, 191, 192, 196, 197, 201, 205, 210, 222, 226, 278, 372, 400, 463, 467, 468, 482, 494, 499, 526, 563, 570, 596, 599, 680, 698, 726, 756, 795, 883, 887, 892, 919, 926, 992, 994, 1003, 1064, 1079, 1080, 1099, 1112, 1114, 1129, 1214, 1221], "regular": [17, 190, 214, 225, 239, 255, 262, 263, 270, 289, 290, 292, 294, 295, 304, 323, 324, 353, 359, 422, 488, 506, 519, 520, 657, 659, 792, 838, 875, 887, 933, 967, 970, 972, 981, 994, 1005, 1055, 1056, 1099, 1129, 1131, 1188], "process": [17, 28, 60, 62, 75, 80, 82, 99, 101, 112, 113, 126, 148, 163, 195, 200, 207, 214, 220, 222, 229, 230, 232, 266, 296, 305, 318, 319, 326, 340, 370, 371, 372, 399, 400, 407, 412, 465, 471, 500, 526, 535, 548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 642, 810, 816, 838, 839, 840, 849, 854, 857, 859, 864, 868, 870, 873, 874, 877, 878, 879, 880, 882, 884, 887, 891, 892, 893, 896, 898, 901, 902, 904, 905, 907, 908, 914, 915, 916, 917, 918, 922, 923, 924, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 947, 949, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 968, 984, 993, 996, 997, 998, 999, 1000, 1003, 1007, 1008, 1009, 1013, 1014, 1015, 1017, 1018, 1020, 1022, 1023, 1025, 1030, 1031, 1032, 1039, 1044, 1045, 1047, 1048, 1049, 1056, 1059, 1060, 1062, 1064, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1080, 1081, 1090, 1098, 1111, 1112, 1116, 1167, 1233, 1246, 1255, 1256], "mean": [17, 29, 75, 76, 112, 113, 126, 131, 190, 192, 195, 197, 211, 213, 214, 226, 246, 249, 250, 263, 265, 278, 282, 309, 324, 332, 340, 344, 348, 382, 383, 420, 441, 442, 443, 465, 484, 489, 494, 524, 568, 646, 654, 657, 658, 724, 771, 793, 797, 805, 806, 840, 846, 862, 923, 930, 933, 935, 936, 944, 985, 992, 993, 994, 1021, 1028, 1044, 1048, 1050, 1079, 1082, 1091, 1106, 1114, 1117, 1131, 1132, 1137, 1166, 1186, 1189, 1193, 1195, 1196, 1202, 1207, 1228, 1243, 1246], "specif": [17, 62, 66, 124, 193, 259, 265, 266, 275, 278, 324, 330, 341, 372, 375, 378, 383, 417, 465, 482, 494, 544, 591, 594, 596, 599, 726, 746, 789, 803, 838, 846, 860, 883, 887, 913, 924, 985, 992, 994, 1008, 1014, 1030, 1031, 1056, 1062, 1075, 1086, 1094, 1095, 1197, 1213, 1221, 1256, 1257], "markup": [17, 39], "class": [17, 21, 29, 42, 44, 55, 58, 62, 71, 72, 75, 76, 87, 94, 99, 108, 109, 110, 112, 113, 116, 119, 120, 121, 122, 123, 126, 127, 131, 132, 134, 135, 137, 139, 143, 144, 163, 197, 208, 209, 210, 212, 217, 226, 227, 228, 229, 231, 233, 234, 246, 250, 252, 259, 262, 263, 265, 266, 270, 274, 276, 277, 280, 282, 285, 288, 290, 292, 294, 295, 297, 302, 303, 307, 309, 310, 312, 316, 317, 318, 319, 321, 322, 323, 324, 328, 330, 340, 341, 342, 344, 345, 346, 350, 352, 354, 355, 356, 357, 358, 362, 363, 364, 366, 367, 369, 372, 373, 383, 385, 391, 392, 399, 400, 401, 408, 434, 480, 504, 506, 508, 542, 543, 544, 545, 546, 548, 549, 551, 552, 556, 562, 563, 564, 566, 567, 569, 570, 571, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 587, 589, 590, 591, 592, 593, 594, 595, 596, 597, 600, 601, 607, 609, 614, 620, 628, 631, 634, 640, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 655, 656, 658, 660, 665, 667, 668, 671, 677, 686, 687, 693, 697, 703, 706, 709, 710, 715, 716, 717, 719, 720, 724, 725, 726, 728, 729, 730, 731, 732, 733, 735, 736, 737, 738, 739, 740, 747, 748, 749, 750, 751, 752, 753, 756, 760, 765, 767, 768, 769, 771, 773, 774, 777, 778, 779, 780, 781, 782, 783, 785, 786, 788, 790, 797, 799, 802, 803, 806, 807, 808, 815, 816, 817, 824, 825, 826, 828, 830, 834, 835, 836, 837, 839, 840, 842, 985, 992, 993, 994, 1026, 1028, 1029, 1084, 1086, 1088, 1094, 1095, 1096, 1097, 1098, 1101, 1102, 1107, 1108, 1109, 1110, 1112, 1115, 1117, 1118, 1126, 1147, 1174, 1175, 1176, 1181, 1183, 1186, 1201, 1215, 1221, 1222, 1233, 1241, 1251], "handout": [17, 125, 126, 160], "warn": [17, 32, 40, 144, 186, 201, 242, 252, 303, 315, 394, 405, 430, 454, 485, 486, 488, 524, 526, 535, 543, 598, 600, 644, 648, 699, 744, 756, 840, 856, 862, 865, 925, 984, 1014, 1025, 1039, 1061, 1086, 1137, 1216], "produc": [17, 110, 159, 210, 212, 251, 265, 364, 374, 482, 494, 499, 771, 777, 779, 815, 817, 1005, 1035, 1036, 1054, 1062, 1065, 1068, 1069, 1079, 1092, 1093, 1126, 1129, 1131, 1196], "error": [17, 21, 27, 29, 46, 90, 99, 127, 131, 132, 143, 152, 171, 186, 189, 190, 191, 192, 195, 196, 205, 209, 212, 220, 223, 226, 229, 236, 247, 251, 257, 259, 262, 266, 267, 268, 272, 275, 278, 282, 285, 287, 290, 299, 300, 303, 306, 309, 312, 323, 324, 337, 342, 372, 382, 397, 402, 404, 408, 427, 430, 432, 439, 443, 457, 458, 464, 470, 471, 473, 486, 487, 488, 491, 508, 509, 511, 513, 514, 516, 522, 524, 526, 528, 530, 535, 537, 538, 540, 545, 549, 568, 569, 570, 582, 590, 601, 620, 637, 642, 644, 646, 647, 651, 652, 653, 654, 655, 657, 659, 667, 670, 675, 717, 719, 720, 730, 737, 744, 747, 751, 753, 754, 755, 756, 760, 780, 781, 782, 790, 793, 795, 797, 802, 803, 805, 816, 817, 820, 838, 839, 840, 843, 850, 865, 875, 879, 883, 887, 903, 917, 920, 921, 922, 928, 931, 984, 985, 993, 995, 1007, 1009, 1010, 1011, 1012, 1013, 1014, 1022, 1023, 1025, 1033, 1039, 1041, 1042, 1045, 1046, 1047, 1055, 1059, 1060, 1064, 1065, 1075, 1080, 1086, 1116, 1117, 1128, 1129, 1133, 1137, 1139, 1140, 1147, 1160, 1186, 1188, 1195, 1216, 1221, 1223, 1228, 1241], "output": [17, 23, 33, 40, 51, 53, 55, 56, 60, 62, 87, 88, 109, 117, 125, 137, 143, 144, 152, 159, 186, 192, 194, 195, 196, 209, 212, 218, 230, 231, 242, 251, 259, 265, 268, 269, 275, 278, 306, 382, 397, 402, 420, 421, 426, 427, 428, 429, 433, 465, 499, 500, 506, 507, 511, 518, 519, 534, 568, 570, 585, 600, 603, 604, 605, 606, 618, 620, 628, 631, 657, 707, 725, 726, 727, 740, 788, 793, 801, 840, 845, 900, 911, 918, 928, 931, 932, 933, 944, 948, 970, 974, 975, 980, 981, 985, 995, 1006, 1014, 1017, 1020, 1028, 1031, 1032, 1036, 1056, 1059, 1060, 1062, 1065, 1068, 1069, 1093, 1132, 1137, 1138, 1149, 1150, 1152, 1153, 1154, 1155, 1157, 1162, 1168, 1170, 1172, 1177, 1178, 1179, 1180, 1191, 1194, 1195, 1200, 1204, 1213, 1216, 1229, 1236, 1252], "must": [17, 39, 43, 44, 112, 113, 126, 132, 151, 193, 197, 212, 218, 222, 223, 225, 226, 229, 233, 234, 247, 249, 251, 259, 265, 266, 273, 275, 276, 278, 299, 324, 341, 420, 437, 440, 454, 462, 480, 482, 497, 504, 506, 510, 516, 547, 552, 553, 566, 569, 570, 583, 584, 598, 601, 604, 605, 606, 618, 628, 654, 655, 657, 659, 669, 670, 704, 717, 724, 726, 732, 739, 747, 748, 750, 751, 771, 795, 797, 809, 813, 840, 865, 871, 879, 885, 892, 914, 915, 932, 942, 950, 984, 995, 1001, 1004, 1014, 1015, 1018, 1023, 1025, 1033, 1042, 1044, 1046, 1056, 1062, 1065, 1081, 1086, 1087, 1104, 1109, 1115, 1128, 1129, 1131, 1132, 1134, 1137, 1167, 1188, 1222, 1233], "role": [17, 39, 193, 197, 500, 601, 985], "somewher": [17, 152, 211, 230, 242, 249, 282, 294, 295, 382, 394, 465, 482, 484, 504, 549, 570, 637, 771, 1031, 1089, 1114, 1201], "top": [17, 28, 32, 34, 35, 38, 39, 50, 189, 190, 192, 193, 205, 211, 213, 214, 230, 232, 259, 265, 268, 275, 278, 526, 529, 534, 726, 890, 899, 985, 1005, 1044, 1046, 1065, 1086, 1094, 1116, 1163, 1167, 1241, 1245, 1247, 1252], "insid": [17, 35, 39, 42, 50, 126, 131, 144, 189, 190, 218, 220, 242, 259, 265, 275, 278, 295, 315, 317, 332, 341, 348, 382, 397, 426, 430, 440, 458, 461, 463, 464, 482, 487, 506, 522, 588, 599, 604, 652, 658, 660, 817, 838, 848, 858, 927, 957, 967, 992, 994, 1017, 1031, 1050, 1077, 1082, 1085, 1094, 1131, 1137, 1206, 1209, 1213, 1224, 1243, 1246], "ideal": [17, 201, 217, 259, 265, 275, 278, 295, 297, 493, 532, 535, 547, 595, 716, 771, 846, 865, 883, 887, 981, 1001, 1065, 1106, 1108], "slideshow": [17, 23, 269, 281, 308, 318, 329, 337, 340, 344, 350, 351, 356, 357, 362, 363, 366, 367, 844, 847, 849, 852, 854, 857, 859, 866, 868, 870, 872, 874, 876, 878, 880, 882, 884, 886, 891, 893, 896, 898, 902, 905, 908, 1130, 1218, 1225], "manual": [17, 60, 62, 127, 137, 139, 143, 187, 197, 205, 228, 229, 259, 260, 265, 268, 275, 278, 308, 310, 380, 428, 429, 432, 439, 477, 482, 506, 643, 685, 736, 743, 754, 780, 792, 793, 825, 826, 828, 829, 839, 840, 842, 843, 846, 887, 914, 915, 985, 992, 993, 1015, 1018, 1031, 1033, 1035, 1077, 1079, 1084, 1092, 1093, 1097, 1101, 1143], "theme": [17, 389, 1118, 1137], "url": [17, 187, 194, 196, 205, 217, 599, 1085, 1143], "_static": 17, "ui": [17, 32, 67, 197, 443, 722], "default": [17, 23, 58, 60, 99, 112, 113, 121, 124, 126, 134, 135, 149, 190, 191, 196, 197, 201, 207, 218, 227, 229, 231, 238, 240, 251, 259, 262, 265, 268, 271, 274, 275, 278, 282, 285, 288, 293, 296, 303, 305, 306, 310, 314, 315, 317, 320, 324, 326, 327, 346, 352, 355, 358, 364, 370, 371, 380, 390, 397, 443, 454, 486, 494, 500, 506, 510, 524, 531, 534, 535, 537, 545, 548, 562, 564, 573, 574, 590, 600, 642, 644, 645, 650, 651, 654, 655, 679, 698, 699, 715, 720, 722, 724, 726, 728, 729, 730, 731, 733, 735, 736, 737, 738, 739, 740, 743, 744, 751, 752, 781, 783, 799, 808, 813, 815, 816, 817, 824, 825, 830, 837, 839, 840, 883, 911, 914, 915, 917, 930, 943, 948, 967, 979, 980, 984, 985, 987, 992, 993, 995, 1001, 1004, 1018, 1022, 1028, 1031, 1033, 1035, 1047, 1059, 1061, 1063, 1065, 1077, 1078, 1106, 1108, 1114, 1133, 1135, 1137, 1143, 1179, 1196, 1206, 1209, 1211, 1216, 1221, 1223, 1241], "given": [17, 39, 61, 63, 71, 83, 104, 108, 109, 112, 113, 116, 119, 120, 175, 190, 192, 195, 197, 201, 211, 259, 265, 275, 278, 282, 306, 314, 315, 317, 324, 352, 368, 374, 383, 430, 445, 488, 526, 567, 596, 599, 601, 620, 644, 713, 724, 726, 750, 838, 848, 858, 869, 887, 925, 930, 939, 941, 948, 970, 992, 1073, 1085, 1173, 1182, 1188, 1190, 1196, 1207, 1210, 1244, 1256], "path": [17, 21, 99, 101, 126, 132, 148, 178, 179, 186, 195, 218, 222, 230, 233, 250, 261, 262, 263, 267, 270, 274, 275, 278, 296, 305, 306, 326, 327, 330, 332, 333, 348, 349, 352, 359, 364, 369, 370, 371, 374, 375, 376, 377, 378, 379, 380, 382, 383, 388, 390, 397, 402, 464, 500, 506, 508, 511, 513, 514, 517, 519, 523, 524, 526, 533, 536, 537, 548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 601, 602, 642, 667, 800, 816, 839, 840, 851, 865, 877, 887, 913, 914, 915, 916, 917, 920, 921, 922, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 948, 949, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 968, 984, 1004, 1007, 1013, 1014, 1015, 1023, 1024, 1025, 1039, 1041, 1042, 1043, 1045, 1047, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1077, 1084, 1094, 1111, 1114, 1176, 1216, 1221, 1223, 1231, 1243], "commit": [17, 46, 79, 124, 168, 193, 196, 204, 205, 247, 251, 252, 263, 266, 276, 405, 860, 1188, 1197, 1200, 1221, 1253], "place": [17, 55, 126, 139, 178, 187, 191, 192, 194, 195, 196, 197, 205, 210, 219, 223, 246, 262, 268, 278, 314, 315, 420, 436, 458, 465, 482, 505, 508, 512, 514, 540, 542, 566, 568, 582, 601, 614, 659, 673, 675, 676, 687, 698, 706, 709, 710, 720, 740, 806, 809, 817, 835, 838, 840, 865, 887, 916, 938, 939, 940, 941, 992, 993, 1001, 1047, 1078, 1080, 1089, 1119, 1128, 1132, 1134, 1153, 1210, 1223], "_download": 17, "7a046b2e956b892f20b3485964f7b2cf": 17, "rel": [17, 80, 101, 126, 148, 190, 197, 226, 242, 263, 296, 305, 306, 326, 327, 370, 371, 415, 519, 548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 642, 760, 765, 816, 839, 840, 887, 914, 915, 916, 917, 920, 921, 922, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 968, 984, 992, 1004, 1007, 1013, 1015, 1023, 1025, 1039, 1042, 1045, 1047, 1064, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1080, 1192, 1193, 1200, 1213], "up": [17, 21, 27, 32, 34, 35, 38, 43, 45, 53, 80, 124, 135, 139, 143, 180, 187, 189, 190, 191, 193, 195, 197, 200, 205, 209, 210, 241, 247, 252, 257, 259, 263, 265, 275, 278, 290, 295, 297, 306, 315, 341, 354, 374, 382, 400, 404, 410, 411, 478, 485, 494, 495, 500, 504, 511, 535, 549, 598, 599, 600, 601, 614, 637, 661, 662, 663, 664, 667, 714, 719, 785, 788, 801, 802, 815, 838, 846, 850, 855, 856, 858, 869, 871, 879, 883, 887, 888, 927, 948, 949, 967, 980, 985, 987, 992, 993, 994, 1001, 1011, 1044, 1050, 1055, 1060, 1062, 1075, 1084, 1087, 1098, 1102, 1108, 1131, 1145, 1149, 1166, 1171, 1183, 1188, 1193, 1196, 1204, 1216, 1222, 1228, 1233, 1244], "uri": 17, "well": [17, 42, 152, 190, 192, 195, 196, 197, 201, 214, 218, 226, 249, 251, 278, 314, 316, 324, 332, 341, 348, 383, 443, 465, 494, 504, 518, 524, 526, 552, 592, 598, 601, 602, 625, 645, 649, 660, 674, 743, 750, 757, 780, 793, 803, 807, 912, 932, 948, 981, 988, 993, 994, 1005, 1018, 1020, 1038, 1062, 1064, 1078, 1086, 1087, 1090, 1094, 1097, 1101, 1104, 1107, 1118, 1122, 1132, 1191, 1193, 1201, 1217, 1243], "blah": [19, 23, 39, 61, 65, 168, 190, 193, 212, 223, 230, 233, 238, 246, 249, 255, 259, 265, 266, 268, 270, 275, 278, 285, 288, 300, 307, 310, 320, 324, 342, 352, 358, 389, 390, 397, 405, 408, 488, 524, 756, 820, 838, 843, 851, 1011, 1012, 1055, 1056, 1082, 1117, 1123, 1143, 1204], "watch": [20, 32, 191, 192, 193, 211, 218, 222, 226, 227, 231, 317, 319, 323, 505, 793, 985, 993, 1029, 1090, 1111, 1214], "w5g8k7a2gbg": 20, "bore": [20, 251, 273, 287, 303, 329, 948, 1056, 1060, 1118, 1188], "good": [20, 27, 29, 43, 99, 126, 147, 187, 189, 190, 191, 192, 197, 205, 214, 222, 226, 229, 247, 250, 251, 259, 263, 268, 269, 270, 272, 273, 276, 282, 297, 299, 309, 312, 315, 317, 323, 324, 345, 354, 374, 380, 416, 439, 443, 484, 488, 490, 498, 499, 504, 519, 524, 547, 548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 607, 609, 625, 642, 646, 650, 651, 665, 668, 671, 687, 693, 697, 700, 706, 709, 710, 715, 719, 724, 725, 726, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 752, 754, 783, 794, 799, 805, 808, 814, 816, 818, 825, 828, 837, 839, 840, 844, 846, 879, 887, 892, 912, 927, 931, 981, 985, 993, 994, 1018, 1020, 1037, 1046, 1049, 1050, 1056, 1059, 1086, 1099, 1117, 1118, 1129, 1132, 1134, 1137, 1150, 1160, 1187, 1188, 1195, 1214, 1243], "j2hzby8e4yq": 20, "pov": 20, "classmethod": [21, 303], "staticmethod": [21, 303], "member": [21, 35, 38, 43, 57, 62, 112, 113, 126, 205, 211, 212, 213, 223, 228, 250, 268, 280, 293, 308, 315, 324, 355, 373, 380, 401, 473, 482, 489, 546, 588, 590, 593, 596, 620, 634, 642, 644, 645, 647, 648, 649, 650, 656, 660, 661, 663, 665, 698, 699, 703, 724, 726, 728, 731, 732, 733, 735, 736, 737, 738, 739, 740, 743, 751, 755, 756, 765, 771, 781, 797, 803, 825, 836, 838, 840, 848, 853, 855, 875, 883, 887, 900, 906, 913, 914, 915, 931, 932, 933, 934, 935, 936, 942, 977, 981, 992, 1020, 1075, 1136, 1213, 1233], "final": [21, 38, 42, 60, 66, 80, 108, 152, 186, 212, 222, 226, 229, 249, 251, 259, 265, 266, 275, 280, 293, 299, 323, 345, 355, 380, 506, 599, 601, 666, 667, 716, 726, 743, 754, 783, 825, 839, 840, 850, 881, 887, 914, 915, 981, 987, 993, 994, 1062, 1080, 1084, 1097, 1150, 1166, 1188, 1241], "exec": [21, 29, 197, 222, 231, 262, 276, 277, 285, 292, 304, 308, 310, 318, 319, 320, 324, 331, 340, 344, 351, 353, 840, 976, 981, 1014, 1017, 1038, 1062, 1088, 1186, 1254], "dict": [21, 209, 222, 223, 227, 238, 240, 241, 246, 249, 263, 264, 265, 266, 269, 271, 274, 275, 276, 280, 286, 300, 303, 310, 320, 324, 330, 335, 342, 346, 352, 357, 359, 365, 368, 389, 392, 397, 743, 1084, 1087, 1099, 1100, 1109, 1135], "There": [21, 45, 55, 57, 70, 83, 99, 135, 187, 189, 191, 192, 193, 194, 197, 201, 202, 218, 219, 223, 225, 226, 229, 233, 234, 247, 252, 268, 271, 272, 273, 276, 282, 309, 312, 315, 316, 317, 318, 319, 340, 341, 355, 374, 380, 383, 418, 428, 434, 443, 458, 461, 482, 484, 491, 494, 505, 506, 516, 522, 526, 531, 544, 569, 570, 620, 628, 645, 650, 695, 720, 739, 740, 752, 754, 760, 783, 788, 799, 803, 807, 808, 816, 837, 839, 840, 860, 887, 892, 918, 948, 985, 992, 993, 1038, 1048, 1059, 1060, 1112, 1118, 1129, 1188, 1197, 1222, 1228], "half": [21, 36, 190, 191, 192, 252, 490, 535, 885, 927, 993, 1046, 1084], "heart": [21, 32, 38, 66, 180, 535, 927, 1194], "split": [21, 187, 210, 213, 246, 250, 255, 256, 259, 262, 263, 265, 270, 274, 280, 288, 291, 303, 308, 310, 324, 330, 346, 353, 358, 364, 368, 388, 397, 482, 506, 548, 620, 1084, 1194], "pimp": 21, "elabor": [21, 201, 266, 276, 484, 534, 993], "namespac": [21, 222, 259, 265, 272, 275, 278, 282, 293, 303, 507, 549, 551, 566, 602, 603, 604, 605, 606, 608, 618, 619, 637, 659, 667, 672, 673, 674, 675, 676, 682, 683, 685, 686, 689, 690, 691, 695, 709, 722, 733, 734, 743, 758, 780, 790, 793, 815, 817, 818, 992, 1026, 1029, 1041, 1043, 1094], "__init__": [21, 62, 186, 209, 210, 221, 223, 226, 228, 246, 249, 250, 262, 263, 265, 272, 275, 278, 282, 288, 291, 300, 303, 310, 320, 324, 342, 346, 364, 368, 506, 1084, 1085, 1086, 1094, 1099, 1100, 1101, 1103, 1104, 1105, 1106, 1107, 1108, 1221], "__all__": [21, 278, 282], "etc": [21, 23, 29, 62, 92, 102, 126, 162, 171, 179, 183, 187, 191, 195, 204, 207, 208, 212, 219, 226, 229, 233, 234, 236, 239, 240, 247, 248, 250, 251, 253, 257, 260, 262, 263, 265, 269, 270, 273, 279, 280, 281, 282, 284, 285, 287, 289, 292, 302, 303, 306, 309, 310, 312, 320, 322, 323, 325, 328, 329, 345, 346, 350, 351, 352, 356, 357, 358, 362, 363, 364, 366, 367, 371, 383, 384, 385, 386, 387, 388, 397, 402, 405, 415, 438, 443, 499, 520, 524, 535, 539, 551, 634, 725, 740, 785, 791, 818, 838, 840, 846, 860, 887, 899, 909, 917, 919, 923, 925, 928, 930, 931, 932, 933, 944, 948, 951, 962, 965, 967, 968, 970, 972, 973, 974, 975, 976, 977, 979, 981, 984, 994, 995, 996, 1004, 1005, 1008, 1009, 1010, 1015, 1021, 1030, 1041, 1055, 1056, 1060, 1062, 1065, 1084, 1086, 1088, 1095, 1096, 1097, 1098, 1102, 1110, 1121, 1130, 1133, 1137, 1141, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1160, 1161, 1162, 1163, 1164, 1165, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1198, 1201, 1202, 1208, 1213, 1215, 1236, 1237, 1245, 1247, 1251, 1252, 1255, 1257], "user": [21, 23, 29, 31, 47, 53, 62, 65, 86, 103, 104, 112, 113, 126, 132, 149, 159, 162, 165, 170, 171, 176, 186, 187, 189, 190, 191, 192, 194, 195, 197, 205, 212, 218, 221, 222, 223, 226, 230, 237, 246, 249, 251, 253, 262, 268, 270, 275, 276, 278, 279, 281, 282, 285, 288, 290, 299, 300, 303, 306, 309, 310, 312, 320, 324, 327, 334, 335, 337, 341, 346, 352, 354, 358, 364, 370, 371, 376, 379, 382, 394, 397, 406, 462, 493, 504, 506, 508, 514, 515, 520, 534, 535, 542, 552, 569, 570, 590, 604, 620, 642, 645, 646, 652, 659, 703, 707, 727, 729, 730, 731, 732, 739, 740, 756, 760, 792, 803, 816, 839, 840, 846, 848, 858, 860, 885, 887, 900, 901, 914, 915, 917, 922, 926, 927, 928, 932, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 948, 972, 976, 979, 984, 985, 986, 995, 1001, 1008, 1013, 1014, 1015, 1018, 1020, 1023, 1025, 1030, 1039, 1042, 1043, 1045, 1047, 1048, 1059, 1062, 1077, 1079, 1080, 1081, 1084, 1101, 1102, 1139, 1147, 1149, 1150, 1154, 1166, 1167, 1173, 1178, 1180, 1183, 1185, 1186, 1199, 1204, 1207, 1211, 1214, 1223, 1230, 1241], "import": [21, 29, 62, 178, 186, 192, 197, 200, 210, 211, 212, 213, 222, 223, 226, 228, 229, 234, 238, 240, 241, 242, 250, 254, 255, 256, 261, 262, 263, 265, 270, 272, 275, 278, 282, 285, 288, 291, 294, 295, 300, 303, 307, 308, 309, 310, 312, 314, 320, 324, 330, 335, 338, 342, 346, 352, 357, 358, 364, 368, 390, 392, 420, 436, 506, 512, 513, 516, 535, 667, 684, 751, 789, 803, 806, 825, 840, 869, 887, 930, 948, 985, 988, 992, 1001, 1013, 1040, 1050, 1061, 1083, 1084, 1085, 1087, 1095, 1097, 1099, 1105, 1106, 1109, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1127, 1131, 1139, 1141, 1142, 1143, 1176, 1183, 1184, 1185, 1186, 1188, 1189, 1190, 1191, 1193, 1194, 1196, 1199, 1200, 1202, 1204, 1205, 1206, 1207, 1209, 1210, 1211, 1212, 1213, 1215, 1216, 1218, 1221, 1222, 1225, 1228, 1246, 1251], "pythonpath": [21, 40, 60, 222, 308, 1094, 1143], "goto": [21, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 745, 783, 837, 839, 840, 1059], "orgi": [21, 508, 747], "perspect": [21, 38, 197, 219], "alwai": [21, 43, 82, 124, 186, 187, 192, 202, 219, 226, 249, 271, 282, 308, 309, 312, 354, 373, 389, 397, 402, 420, 438, 464, 465, 477, 489, 490, 494, 495, 497, 498, 508, 509, 518, 526, 554, 564, 594, 643, 649, 659, 678, 681, 738, 743, 747, 758, 782, 791, 795, 798, 802, 807, 846, 865, 883, 887, 892, 913, 948, 949, 992, 993, 994, 1008, 1014, 1020, 1048, 1059, 1064, 1075, 1080, 1086, 1114, 1118, 1132, 1188, 1193, 1194, 1195, 1221, 1222, 1241], "valgrind": [21, 99, 152, 217, 251, 373, 415, 492, 496, 497, 499, 501, 502, 549, 614, 624, 626, 634, 637, 652, 788, 801, 802, 840, 1238, 1239], "supervis": [21, 1195], "hack": [21, 53, 61, 63, 99, 144, 165, 184, 187, 205, 213, 217, 222, 226, 227, 251, 252, 266, 268, 276, 287, 294, 295, 296, 297, 305, 317, 318, 326, 327, 334, 337, 341, 354, 355, 370, 371, 373, 374, 380, 397, 401, 405, 406, 408, 415, 416, 464, 534, 548, 549, 562, 588, 590, 591, 592, 593, 594, 595, 596, 597, 600, 607, 609, 620, 662, 677, 678, 698, 741, 752, 783, 784, 785, 789, 801, 816, 825, 838, 839, 840, 841, 917, 943, 944, 984, 1025, 1073, 1111, 1208, 1214, 1221, 1240, 1241, 1255], "someth": [21, 43, 55, 74, 75, 76, 80, 85, 86, 89, 131, 139, 155, 174, 183, 189, 190, 192, 193, 195, 197, 201, 205, 211, 218, 222, 230, 238, 240, 241, 242, 252, 262, 266, 273, 288, 291, 315, 317, 334, 337, 354, 372, 392, 455, 456, 470, 524, 544, 566, 599, 601, 637, 648, 652, 657, 660, 667, 691, 736, 737, 738, 748, 751, 765, 795, 803, 805, 806, 834, 835, 836, 840, 848, 860, 864, 875, 883, 887, 889, 892, 907, 960, 984, 985, 988, 992, 993, 994, 1009, 1010, 1018, 1020, 1021, 1033, 1044, 1046, 1047, 1059, 1075, 1082, 1084, 1085, 1087, 1091, 1108, 1115, 1117, 1122, 1132, 1138, 1170, 1195, 1246], "malloc": [21, 217, 477, 478, 491, 626, 873, 1008, 1060, 1062, 1238], "seomth": 21, "cleanup": [21, 190, 209, 408, 643, 719, 756, 800, 1060, 1084, 1222], "obviou": [21, 57, 121, 197, 205, 211, 272, 282, 309, 312, 372, 394, 465, 484, 506, 601, 643, 751, 760, 801, 807, 819, 825, 1014, 1056, 1082, 1118, 1129, 1244], "lead": [21, 112, 113, 116, 120, 131, 190, 192, 196, 197, 214, 251, 278, 282, 306, 324, 344, 424, 432, 442, 508, 524, 724, 737, 887, 913, 927, 993, 1046, 1055, 1056, 1075, 1102, 1128, 1139, 1150, 1201, 1215], "sever": [21, 89, 126, 190, 250, 251, 462, 551, 556, 722, 731, 742, 885, 944, 985, 1086, 1112, 1123], "duplic": [21, 42, 49, 99, 127, 131, 143, 210, 223, 268, 276, 286, 308, 372, 382, 424, 426, 487, 488, 551, 610, 618, 631, 652, 659, 670, 749, 806, 840, 894, 931, 984, 1020, 1023, 1025, 1042, 1170, 1221, 1223], "when": [21, 28, 30, 43, 62, 77, 82, 112, 113, 134, 139, 144, 159, 171, 177, 178, 187, 189, 190, 191, 192, 195, 197, 205, 207, 219, 222, 228, 251, 252, 259, 263, 265, 266, 268, 275, 276, 278, 281, 282, 295, 297, 306, 314, 315, 317, 324, 332, 348, 355, 380, 383, 388, 397, 408, 415, 422, 430, 432, 438, 443, 454, 461, 465, 480, 485, 486, 487, 488, 489, 494, 504, 506, 510, 518, 524, 526, 528, 531, 532, 535, 537, 543, 544, 548, 568, 570, 601, 602, 646, 648, 649, 652, 660, 682, 698, 713, 714, 717, 719, 724, 727, 732, 736, 738, 743, 746, 748, 750, 751, 754, 771, 785, 790, 793, 798, 802, 803, 806, 810, 813, 815, 817, 838, 855, 858, 865, 869, 881, 883, 885, 887, 901, 920, 921, 923, 927, 930, 932, 944, 948, 970, 981, 993, 994, 1001, 1005, 1009, 1010, 1014, 1017, 1018, 1036, 1038, 1044, 1047, 1048, 1050, 1055, 1059, 1060, 1062, 1064, 1080, 1084, 1085, 1086, 1091, 1095, 1098, 1104, 1106, 1111, 1114, 1117, 1118, 1120, 1122, 1127, 1128, 1129, 1139, 1179, 1196, 1201, 1206, 1216, 1221, 1223, 1230, 1241, 1243, 1244], "void": [21, 42, 44, 55, 58, 109, 121, 123, 131, 135, 137, 139, 143, 192, 193, 201, 233, 251, 263, 373, 397, 419, 420, 422, 426, 428, 430, 434, 440, 444, 458, 460, 461, 462, 463, 465, 468, 470, 471, 474, 477, 478, 480, 481, 487, 488, 491, 508, 534, 543, 544, 545, 549, 551, 555, 564, 573, 574, 578, 579, 582, 583, 584, 586, 598, 600, 601, 602, 625, 637, 644, 646, 647, 648, 649, 652, 653, 654, 655, 656, 657, 659, 660, 667, 673, 677, 686, 699, 713, 716, 717, 720, 722, 723, 733, 735, 743, 744, 749, 753, 756, 757, 771, 773, 774, 776, 777, 778, 779, 781, 782, 785, 786, 787, 788, 789, 790, 792, 793, 795, 800, 801, 802, 803, 805, 807, 810, 812, 815, 817, 820, 821, 838, 839, 840, 848, 851, 858, 865, 867, 869, 871, 873, 881, 883, 892, 897, 901, 907, 925, 945, 1006, 1010, 1011, 1012, 1014, 1024, 1031, 1033, 1035, 1037, 1041, 1046, 1052, 1055, 1056, 1059, 1060, 1062, 1065, 1075, 1079, 1081, 1233], "f": [21, 31, 38, 43, 62, 65, 111, 126, 138, 152, 171, 176, 191, 192, 193, 201, 213, 223, 228, 229, 234, 235, 238, 240, 246, 247, 249, 250, 256, 258, 259, 262, 263, 265, 269, 271, 272, 275, 278, 282, 285, 287, 289, 291, 299, 300, 303, 307, 310, 315, 320, 324, 329, 331, 338, 342, 346, 353, 358, 364, 368, 389, 391, 393, 408, 434, 439, 449, 451, 460, 463, 468, 487, 488, 490, 494, 498, 506, 519, 528, 543, 649, 653, 669, 744, 750, 756, 757, 786, 807, 810, 846, 851, 913, 925, 932, 948, 967, 974, 976, 977, 992, 993, 994, 995, 1015, 1017, 1048, 1050, 1055, 1071, 1075, 1078, 1082, 1084, 1085, 1086, 1087, 1099, 1101, 1103, 1104, 1107, 1108, 1109, 1128, 1129, 1137, 1145, 1150, 1183, 1185, 1188, 1196, 1221, 1251], "alloc": [21, 134, 192, 193, 210, 212, 251, 259, 262, 265, 275, 278, 300, 432, 461, 477, 482, 485, 488, 491, 549, 633, 635, 649, 651, 652, 659, 678, 683, 690, 695, 706, 710, 714, 740, 751, 754, 788, 793, 802, 803, 807, 838, 840, 843, 846, 848, 873, 875, 889, 892, 925, 931, 1010, 1011, 1012, 1032, 1093, 1145], "variabl": [21, 29, 89, 91, 92, 99, 106, 112, 113, 186, 191, 192, 201, 205, 209, 211, 212, 218, 222, 223, 226, 227, 228, 229, 231, 234, 235, 236, 241, 242, 247, 248, 250, 251, 253, 257, 260, 261, 263, 264, 265, 268, 269, 271, 273, 279, 280, 281, 282, 284, 286, 287, 289, 293, 296, 301, 302, 303, 305, 306, 309, 312, 315, 319, 321, 322, 323, 325, 326, 327, 328, 329, 335, 340, 341, 342, 344, 345, 347, 350, 351, 353, 356, 357, 359, 362, 363, 365, 366, 367, 369, 370, 371, 376, 379, 380, 383, 384, 385, 386, 387, 388, 397, 399, 400, 419, 421, 422, 430, 435, 443, 450, 454, 455, 458, 459, 460, 464, 466, 467, 470, 472, 476, 477, 479, 480, 482, 483, 484, 490, 491, 492, 494, 496, 501, 502, 508, 510, 511, 514, 516, 517, 518, 520, 523, 525, 528, 530, 533, 555, 563, 569, 578, 583, 588, 629, 634, 649, 657, 658, 665, 677, 717, 724, 740, 745, 751, 754, 756, 783, 785, 797, 816, 836, 837, 838, 839, 840, 856, 875, 887, 917, 918, 922, 925, 949, 968, 984, 1025, 1030, 1033, 1037, 1038, 1039, 1044, 1062, 1073, 1074, 1075, 1080, 1082, 1084, 1087, 1088, 1094, 1095, 1096, 1097, 1098, 1102, 1110, 1114, 1116, 1121, 1125, 1127, 1129, 1130, 1133, 1138, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1154, 1155, 1156, 1157, 1160, 1161, 1162, 1163, 1164, 1165, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1195, 1198, 1201, 1202, 1208, 1210, 1215, 1216, 1242, 1244, 1251, 1257], "filenam": [21, 42, 50, 55, 58, 189, 209, 213, 238, 256, 259, 262, 263, 265, 270, 275, 278, 288, 303, 306, 319, 320, 324, 352, 358, 368, 376, 379, 389, 506, 520, 524, 585, 588, 602, 838, 887, 913, 914, 977, 1015, 1018, 1019, 1020, 1021, 1022, 1026, 1029, 1055, 1084, 1094, 1139, 1145, 1157, 1166, 1168, 1172, 1178, 1180], "getenv": [21, 583, 1043], "fopen": 21, "read": [21, 29, 43, 47, 53, 55, 56, 57, 66, 75, 76, 85, 87, 126, 147, 151, 154, 155, 162, 189, 190, 191, 192, 193, 195, 197, 200, 201, 205, 218, 222, 226, 227, 229, 231, 237, 247, 250, 257, 260, 263, 265, 266, 268, 270, 276, 278, 279, 284, 285, 287, 290, 297, 298, 299, 302, 306, 308, 310, 316, 320, 322, 323, 324, 327, 328, 329, 346, 350, 351, 352, 354, 355, 357, 358, 362, 363, 364, 366, 367, 373, 374, 376, 379, 380, 382, 383, 384, 385, 386, 387, 397, 401, 403, 408, 427, 428, 435, 443, 450, 459, 466, 472, 476, 479, 480, 482, 483, 484, 486, 488, 491, 492, 496, 500, 501, 502, 505, 507, 513, 517, 519, 541, 548, 569, 585, 590, 601, 602, 625, 631, 642, 645, 646, 648, 651, 654, 657, 703, 707, 727, 730, 742, 745, 752, 760, 783, 797, 805, 834, 837, 838, 839, 840, 846, 860, 871, 887, 889, 913, 914, 915, 918, 925, 930, 931, 932, 933, 935, 936, 939, 948, 949, 981, 984, 988, 992, 993, 994, 1001, 1006, 1008, 1009, 1011, 1012, 1015, 1018, 1021, 1023, 1024, 1025, 1026, 1028, 1029, 1036, 1038, 1042, 1046, 1052, 1055, 1056, 1059, 1060, 1062, 1080, 1086, 1087, 1102, 1105, 1107, 1115, 1123, 1146, 1147, 1157, 1166, 1176, 1181, 1182, 1183, 1184, 1185, 1186, 1188, 1194, 1196, 1204, 1211, 1254], "onli": [21, 29, 42, 43, 91, 110, 112, 113, 126, 127, 131, 134, 144, 150, 151, 152, 165, 180, 186, 187, 189, 190, 192, 193, 194, 195, 196, 197, 200, 201, 205, 210, 211, 218, 222, 226, 228, 229, 247, 249, 252, 259, 262, 265, 268, 269, 270, 272, 275, 276, 278, 279, 281, 282, 287, 289, 290, 291, 302, 303, 306, 308, 309, 315, 319, 322, 324, 328, 329, 332, 341, 348, 350, 356, 357, 362, 363, 366, 367, 372, 373, 374, 375, 376, 378, 379, 388, 391, 405, 412, 422, 428, 430, 431, 432, 434, 439, 440, 442, 447, 454, 455, 458, 460, 462, 463, 464, 465, 481, 482, 486, 487, 488, 489, 490, 499, 504, 506, 509, 515, 516, 518, 519, 522, 524, 526, 530, 531, 534, 535, 538, 540, 543, 544, 545, 547, 555, 563, 564, 566, 568, 569, 570, 582, 583, 598, 599, 602, 605, 606, 620, 631, 644, 645, 646, 647, 649, 651, 653, 654, 657, 659, 660, 666, 680, 682, 698, 699, 703, 713, 714, 716, 720, 724, 726, 729, 730, 737, 739, 743, 750, 754, 756, 760, 765, 771, 781, 785, 788, 792, 793, 797, 798, 802, 803, 809, 811, 813, 815, 817, 824, 828, 830, 831, 840, 843, 845, 848, 851, 856, 867, 873, 883, 887, 892, 895, 900, 904, 912, 913, 914, 915, 923, 926, 930, 932, 933, 938, 944, 948, 949, 970, 977, 985, 986, 987, 992, 993, 994, 995, 1005, 1010, 1011, 1014, 1016, 1017, 1018, 1022, 1024, 1028, 1030, 1033, 1038, 1041, 1044, 1046, 1047, 1048, 1049, 1055, 1056, 1059, 1060, 1062, 1063, 1075, 1079, 1080, 1084, 1085, 1086, 1089, 1095, 1099, 1101, 1104, 1106, 1107, 1112, 1113, 1114, 1115, 1117, 1118, 1119, 1120, 1122, 1123, 1127, 1132, 1133, 1137, 1139, 1143, 1147, 1152, 1160, 1162, 1163, 1166, 1167, 1171, 1173, 1186, 1188, 1193, 1194, 1195, 1197, 1200, 1209, 1213, 1214, 1221, 1227, 1228, 1230, 1233, 1241, 1243, 1246, 1258], "bullshit": [21, 234, 246, 282, 535, 793, 1251], "everyon": [21, 190, 195, 205, 226, 504, 730, 781, 935, 936, 946, 1048], "get": [21, 55, 62, 67, 99, 112, 113, 159, 171, 178, 179, 186, 187, 190, 192, 193, 200, 201, 209, 222, 223, 226, 228, 233, 240, 241, 242, 249, 251, 252, 259, 262, 265, 266, 268, 271, 272, 275, 278, 285, 291, 295, 297, 300, 303, 306, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 392, 397, 400, 402, 417, 443, 488, 497, 519, 526, 532, 544, 549, 564, 573, 578, 655, 662, 735, 743, 753, 771, 777, 797, 798, 801, 802, 803, 804, 806, 820, 830, 838, 840, 848, 853, 860, 887, 889, 903, 906, 920, 921, 923, 927, 928, 948, 984, 994, 1001, 1004, 1010, 1011, 1012, 1025, 1027, 1032, 1049, 1056, 1060, 1078, 1084, 1097, 1100, 1106, 1110, 1118, 1135, 1206, 1213, 1223, 1228, 1233, 1246], "point": [21, 34, 36, 38, 40, 60, 67, 91, 99, 108, 111, 114, 115, 116, 119, 124, 126, 144, 152, 189, 190, 191, 192, 194, 195, 196, 197, 200, 201, 205, 210, 211, 212, 213, 217, 222, 226, 227, 228, 229, 231, 249, 251, 252, 259, 262, 265, 268, 275, 278, 283, 286, 308, 317, 324, 341, 342, 344, 368, 383, 403, 404, 405, 408, 419, 420, 421, 426, 432, 434, 436, 438, 442, 464, 467, 470, 473, 474, 477, 478, 488, 490, 531, 544, 547, 554, 555, 563, 586, 588, 600, 620, 621, 622, 645, 647, 649, 651, 652, 653, 655, 656, 658, 661, 665, 676, 677, 685, 700, 701, 714, 719, 720, 740, 743, 746, 748, 750, 754, 760, 771, 793, 797, 802, 806, 818, 838, 840, 883, 887, 916, 925, 927, 931, 932, 948, 985, 986, 987, 994, 1004, 1008, 1011, 1014, 1047, 1060, 1063, 1077, 1081, 1082, 1083, 1085, 1089, 1097, 1123, 1127, 1129, 1132, 1195, 1197, 1199, 1201, 1221, 1223, 1230, 1233, 1238, 1242], "unobvi": [21, 887], "best": [21, 30, 39, 48, 57, 131, 190, 191, 192, 201, 214, 271, 372, 373, 375, 378, 430, 462, 484, 491, 494, 495, 504, 519, 603, 647, 652, 716, 782, 795, 815, 875, 877, 879, 883, 885, 925, 948, 970, 986, 993, 994, 1030, 1044, 1048, 1077, 1091, 1097, 1134, 1139, 1142, 1199, 1209], "resourc": [21, 82, 99, 112, 113, 159, 190, 192, 195, 207, 217, 252, 268, 309, 312, 317, 354, 355, 374, 380, 400, 408, 556, 620, 634, 645, 649, 650, 714, 740, 751, 752, 754, 783, 788, 799, 800, 802, 803, 808, 815, 816, 837, 839, 840, 871, 873, 881, 920, 921, 925, 926, 993, 1010, 1011, 1012, 1030, 1044, 1047, 1084, 1137], "leaki": 21, "erron": [21, 491, 1150], "worst": [21, 190, 462, 528, 994, 1046, 1059, 1241, 1244], "extract": [21, 29, 55, 99, 179, 183, 250, 276, 279, 284, 287, 299, 302, 322, 323, 328, 329, 350, 351, 357, 362, 363, 366, 367, 446, 465, 589, 590, 620, 631, 642, 838, 840, 887, 900, 913, 1077, 1102, 1124, 1147, 1181, 1182, 1183, 1184, 1186, 1194], "common": [21, 24, 182, 190, 247, 263, 264, 276, 282, 287, 358, 375, 378, 465, 474, 505, 600, 678, 806, 824, 828, 838, 912, 985, 986, 994, 1018, 1055, 1086, 1091, 1092, 1093, 1109, 1118, 1119, 1123, 1129, 1133, 1136, 1188, 1196, 1197, 1221, 1244], "hm": [21, 32, 62, 65, 230, 240, 259, 262, 265, 272, 389, 877, 903, 904, 1012, 1106, 1192, 1223, 1228, 1230], "end": [21, 23, 32, 37, 42, 108, 184, 189, 192, 193, 195, 197, 200, 222, 223, 228, 229, 234, 238, 242, 262, 263, 265, 266, 268, 278, 282, 285, 288, 302, 303, 324, 330, 337, 342, 358, 364, 368, 388, 389, 426, 429, 433, 454, 470, 482, 486, 487, 488, 490, 493, 494, 497, 524, 547, 569, 570, 578, 579, 582, 583, 584, 634, 637, 649, 673, 675, 677, 678, 679, 681, 682, 684, 685, 686, 688, 689, 691, 695, 698, 702, 703, 709, 726, 727, 743, 771, 774, 778, 785, 791, 792, 793, 795, 800, 801, 814, 815, 879, 885, 887, 903, 931, 932, 933, 948, 976, 980, 981, 992, 994, 1010, 1011, 1012, 1014, 1020, 1036, 1055, 1089, 1109, 1113, 1115, 1122, 1125, 1129, 1133, 1137, 1209, 1211, 1213, 1216, 1251, 1254], "sketch": [21, 131, 144, 187, 193, 222, 229, 230, 242, 251, 252, 319, 341, 401, 405, 467, 468, 478, 490, 743, 844, 856, 1055], "clearest": 21, "ach": 21, "bad": [21, 43, 132, 186, 189, 192, 199, 214, 222, 247, 253, 269, 270, 272, 281, 282, 297, 318, 319, 340, 354, 443, 486, 490, 504, 519, 526, 666, 733, 783, 794, 801, 819, 820, 839, 840, 855, 867, 892, 895, 1005, 1006, 1031, 1033, 1037, 1038, 1059, 1079, 1084, 1086, 1099, 1100, 1111, 1118, 1129, 1160, 1188, 1241], "earliest": 21, "noth": [21, 43, 62, 131, 180, 189, 190, 192, 195, 200, 205, 219, 230, 249, 262, 288, 341, 418, 457, 464, 488, 506, 524, 525, 538, 637, 716, 726, 751, 758, 771, 785, 788, 855, 865, 883, 885, 919, 970, 985, 993, 994, 1009, 1011, 1033, 1055, 1060, 1087, 1094, 1106, 1127, 1129, 1135, 1221, 1228, 1230], "jump": [21, 45, 106, 189, 454, 458, 637, 785, 788, 795, 927, 980, 1059, 1196], "outest": 21, "level": [21, 80, 149, 190, 191, 201, 259, 265, 275, 278, 299, 332, 348, 408, 432, 458, 464, 504, 510, 516, 526, 534, 535, 544, 552, 764, 765, 838, 869, 871, 883, 890, 899, 924, 985, 992, 1001, 1005, 1064, 1073, 1086, 1094, 1106, 1127, 1137, 1163, 1167, 1197, 1200, 1210, 1216, 1243], "cleanup_stage1": 21, "screenplai": [22, 59, 183, 192, 213, 217, 269, 281, 290, 308, 316, 318, 329, 337, 340, 341, 344, 345, 350, 351, 356, 357, 362, 363, 366, 367, 376, 379, 397, 505, 517, 523, 531, 533, 541, 549, 620, 623, 626, 629, 632, 635, 638, 641, 677, 678, 698, 840, 844, 847, 852, 857, 861, 863, 899, 902, 905, 908, 1053, 1057, 1061, 1130, 1218, 1225, 1229, 1231, 1234], "dies": [23, 163, 166, 198, 199, 204, 207, 208, 209, 217, 223, 233, 234, 238, 246, 253, 270, 272, 278, 279, 282, 397, 402, 415, 1236, 1238, 1239, 1240, 1245, 1251, 1252, 1254, 1258, 1259], "einreichungsunterlagen": 23, "diesem": [23, 199, 233, 1238, 1255], "formular": 23, "projekten": [23, 1252, 1253], "mehrer": [23, 163, 166, 1245], "projektpartn": 23, "muss": [23, 213, 223, 233, 238, 279, 397, 402, 1236, 1238, 1245, 1252], "federf\u00fchrend": 23, "auftreten": 23, "projektleitung": 23, "projektabwicklung": 23, "seiten": 23, "f\u00f6rdergeb": 23, "erfolgtausschlie\u00dflich": 23, "federf\u00fchrenden": 23, "antragstel": 23, "s\u00e4mtlich": 23, "weiterenprojektpartn": 23, "innen": 23, "zus\u00e4tzlich": [23, 163, 166, 198], "anzugeben": 23, "aufteilung": 23, "f\u00f6rdersumm": 23, "erfolgen": [23, 204, 234], "soll": [23, 199, 225, 254, 293, 1235], "punkt": [23, 163, 166, 199, 209, 225, 235, 279], "erfolgreichemf\u00f6rderantrag": 23, "anschluss": 23, "f\u00f6rdervertrag": 23, "erstellt": 23, "derzuerkannten": 23, "\u00fcberweisungen": 23, "f\u00f6rderraten": 23, "anteil": 23, "dieprojektpartn": 23, "fall": [23, 65, 163, 166, 199, 208, 222, 225, 233, 238, 282, 293, 446, 454, 592, 765, 771, 869, 1028, 1029, 1046, 1190, 1210], "allenprojektpartn": 23, "unterschreiben": 23, "verbindlich": 23, "vereinbart": 23, "privatperson": 23, "organis": [23, 251], "uni": 23, "contemporari": 23, "open": [23, 34, 35, 38, 39, 42, 48, 49, 54, 62, 70, 116, 121, 122, 126, 144, 152, 189, 190, 193, 197, 205, 207, 211, 213, 227, 229, 231, 240, 249, 250, 252, 256, 259, 262, 263, 265, 270, 273, 278, 285, 288, 290, 303, 306, 308, 310, 315, 317, 320, 324, 346, 352, 358, 364, 368, 389, 404, 443, 504, 506, 518, 537, 853, 881, 889, 914, 915, 924, 925, 927, 930, 932, 973, 992, 1001, 1009, 1010, 1015, 1018, 1020, 1021, 1024, 1026, 1029, 1030, 1052, 1055, 1059, 1062, 1065, 1080, 1086, 1087, 1157, 1183, 1185, 1196, 1221, 1236, 1253, 1254], "wer": [23, 198], "unser": [23, 226, 234, 1236], "motiv": [23, 28, 99, 415, 927, 946, 1044, 1092, 1093], "300": [23, 209, 211, 223, 259, 262, 265, 270, 272, 278, 282, 285, 303, 324, 330, 346, 352, 358, 364, 368, 389, 420, 422, 424, 440, 464, 672, 673, 674, 675, 676, 678, 679, 680, 681, 695, 860], "zeichen": [23, 272], "lebe": 23, "einerseit": [23, 204], "kleineren": [23, 163, 166], "gr\u00f6\u00dferen": [23, 1253], "andererseit": [23, 204], "haupts\u00e4chlich": [23, 234, 1251], "unternehmen": 23, "halt": [23, 112, 113, 159, 233, 262, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364, 920, 921, 979, 994], "bringen": [23, 1236], "schulungsunterlagen": [23, 1235], "wartbarkeit": 23, "nichtverf\u00fcgbarkeit": 23, "problem": [23, 45, 57, 82, 109, 121, 126, 131, 178, 190, 197, 206, 209, 211, 213, 214, 220, 222, 223, 226, 227, 229, 231, 242, 246, 251, 268, 270, 276, 290, 295, 297, 308, 312, 315, 316, 318, 319, 327, 332, 333, 341, 344, 348, 349, 354, 355, 374, 375, 378, 380, 383, 404, 415, 443, 454, 464, 465, 468, 482, 488, 490, 506, 517, 523, 524, 533, 555, 570, 614, 620, 655, 669, 682, 714, 717, 742, 815, 822, 833, 839, 840, 887, 927, 987, 1048, 1073, 1075, 1079, 1084, 1089, 1091, 1094, 1095, 1106, 1118, 1132, 1183, 1188, 1190, 1194, 1213, 1221, 1222, 1236, 1243, 1244], "darstellt": 23, "wen": 23, "nutzen": [23, 1254], "400": [23, 187, 192, 209, 223, 233, 262, 265, 307, 324, 342, 358, 368, 506, 695, 1145, 1148], "stellen": [23, 204], "kursverlauf": 23, "vorhandenem": 23, "zusammen": [23, 163, 166, 1235], "bereiten": [23, 233], "kursergebniss": 23, "editoren": 23, "kreieren": 23, "warten": 23, "kursmateri": 23, "endbenutz": 23, "konsumieren": 23, "usecas": [23, 1005, 1109], "gel\u00f6st": [23, 223], "500": [23, 233, 240, 259, 262, 265, 307, 352, 358, 368, 695, 985, 1012, 1145, 1148], "hierarchisch": 23, "gruppierung": 23, "einzelthemen": 23, "zuwenig": 23, "bauen": [23, 1238, 1248, 1257], "aufeinand": [23, 975], "explizit": [23, 207, 217, 223, 233, 293, 320, 1238, 1239, 1255], "abh\u00e4ngigkeitsbeziehungen": [23, 1248], "fehlen": 23, "extrem": [23, 190, 249, 270, 278, 285, 288, 310, 397, 402, 465, 504, 677, 747, 795, 887, 914, 915, 1200, 1236, 1248], "verringert": 23, "zusammenarbeit": [23, 1235], "trainern": 23, "fehlend": [23, 209], "aggregierbarkeit": 23, "bzw": [23, 198, 207, 213, 217, 239, 415, 1245, 1252, 1254], "referenzierbarkeit": 23, "fremdunterlagen": 23, "analog": [23, 223, 1055, 1206], "librari": [23, 62, 67, 73, 76, 80, 87, 99, 105, 106, 108, 110, 112, 113, 126, 144, 150, 152, 156, 159, 163, 190, 192, 201, 209, 211, 213, 218, 219, 220, 227, 229, 231, 250, 252, 259, 265, 275, 278, 282, 294, 295, 306, 308, 332, 333, 348, 349, 355, 374, 375, 376, 377, 378, 379, 380, 398, 399, 400, 415, 416, 419, 420, 429, 437, 460, 477, 487, 494, 500, 509, 510, 515, 516, 517, 523, 524, 528, 531, 533, 536, 540, 548, 562, 585, 588, 590, 591, 592, 593, 594, 595, 596, 597, 600, 602, 609, 628, 642, 643, 687, 693, 697, 705, 706, 707, 709, 725, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 742, 760, 765, 791, 816, 838, 839, 840, 865, 917, 920, 921, 922, 984, 1005, 1006, 1007, 1012, 1013, 1015, 1022, 1023, 1025, 1030, 1033, 1039, 1042, 1045, 1047, 1059, 1062, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1073, 1075, 1079, 1110, 1112, 1127, 1129, 1132, 1200, 1217, 1230, 1238, 1240, 1242, 1243, 1254, 1256], "anfangen": 23, "geben": [23, 1239, 1240], "trainingsunterlagen": 23, "ging": [23, 198, 415], "funktioniert": [23, 223, 272], "projektergebni": 23, "basiert": [23, 293, 1236, 1239, 1248, 1255], "popul\u00e4ren": 23, "dokumentationstool": 23, "gestaltet": [23, 217, 1235, 1245], "eigentlich": [23, 209, 223, 1236, 1239], "kern": 23, "begleitet": [23, 225], "meinem": [23, 199, 208, 234, 976, 1251], "eigenen": [23, 1245, 1252], "quasi": [23, 163, 166, 213, 217], "spin": [23, 815, 890, 925], "off": [23, 65, 127, 134, 189, 191, 192, 195, 200, 211, 222, 242, 285, 443, 446, 485, 493, 494, 509, 510, 524, 535, 591, 592, 597, 637, 717, 771, 806, 881, 892, 918, 944, 972, 985, 992, 994, 1020, 1029, 1038, 1048, 1055, 1115, 1133, 1168, 1193, 1246], "anwendbar": [23, 1258], "klarer": 23, "bezug": [23, 279], "f\u00f6rdervoraussetzung": 23, "bitt": [23, 198, 217, 223, 233, 234, 368, 1235, 1251], "gehen": 23, "folgenden": [23, 163, 166, 217, 415, 976], "ausschlie\u00dflich": 23, "jene": 23, "aspekt": [23, 1237, 1245, 1252, 1255], "klaren": 23, "mehrwert": 23, "technologi": [23, 262, 1046, 1062, 1145], "infrastruktur": [23, 1236, 1245, 1252], "sozial": 23, "gesellschaft": 23, "umwelt": 23, "wirtschaftlich": [23, 225], "wissenschaftlich": 23, "kooperationen": 23, "regionalpolitik": 23, "framework": [23, 67, 80, 207, 217, 226, 252, 268, 532, 599, 992, 994, 1214, 1221, 1222, 1257, 1259], "jeglich": [23, 1245], "art": [23, 32, 45, 1075, 1244], "konsistenzgecheckt": 23, "crossreferenc": 23, "webseiten": 23, "hinweg": [23, 234, 1251], "erm\u00f6glicht": [23, 225, 415], "gesellschaftlich": 23, "\u00f6ffentlich": [23, 204, 1235], "verf\u00fcgbarkeit": 23, "erleichterung": 23, "machen": [23, 198, 209, 213, 223, 272, 392, 415, 1236, 1239, 1240, 1245, 1259], "commun": [23, 62, 74, 75, 76, 80, 83, 85, 89, 124, 159, 175, 178, 190, 205, 214, 222, 237, 306, 341, 394, 403, 404, 480, 524, 544, 816, 817, 839, 840, 846, 887, 899, 920, 921, 984, 985, 992, 993, 994, 1009, 1014, 1025, 1030, 1039, 1046, 1049, 1055, 1060, 1095, 1184, 1187, 1204, 1241, 1244, 1246, 1255, 1256], "trainerinnen": 23, "kann": [23, 37, 198, 199, 207, 213, 217, 223, 233, 246, 253, 293, 346, 397, 402, 415, 1235, 1236, 1238, 1240, 1245, 1252, 1253, 1254, 1257, 1259], "sch\u00f6pfen": 23, "trainerinnenn": 23, "gegeneinand": 23, "genau": [23, 207, 209, 223, 392, 976, 1238, 1255, 1257, 1258], "die_der": 23, "adressat_in": 23, "je": [23, 32, 199, 233], "konkret": 23, "eingrenzen": 23, "desto": 23, "dieser": [23, 37, 198, 217, 233, 285, 392, 415, 1235, 1236, 1237, 1245, 1247, 1248, 1254, 1255], "adressat_innen": 23, "ber\u00fccksichtigen": 23, "wahrscheinlich": [23, 213, 1245, 1252], "deshalb": 23, "nachhaltig": 23, "wirkung": 23, "weil": [23, 209, 223, 225, 246, 285, 342, 415, 1236, 1238, 1240], "speziellen": 23, "konzepten": 23, "unterschiedlich": [23, 234, 279, 1251], "zielgruppen": 23, "beziehung": [23, 217], "zueinand": 23, "stehen": [23, 223, 1257], "anbieter_innen": 23, "nachfrager_innen": 23, "drei": [23, 163, 166, 198, 209, 217, 223, 233, 238, 240, 259, 262, 270, 272, 275, 278, 285, 288, 303, 310, 320, 324, 330, 342, 346, 364, 368, 392], "angeben": 23, "m\u00f6glichst": 23, "erheblich": 23, "ihrer": [23, 270, 397, 402, 1245, 1252], "jeweiligen": [23, 1235], "sein": [23, 199, 207, 208, 225, 233, 234, 246, 272, 310, 1236, 1238, 1251, 1252, 1254, 1257, 1258, 1259], "dann": [23, 199, 209, 217, 223, 234, 272, 278, 279, 285, 320, 415, 1236, 1248, 1251, 1259], "einzelnen": 23, "aussieht": [23, 1237], "erst": [23, 217, 233, 246, 272, 279, 285, 303, 342, 358, 392, 1236, 1238], "bestandteil": [23, 1257], "n": [23, 35, 38, 40, 50, 62, 113, 123, 171, 192, 201, 209, 210, 211, 217, 223, 233, 238, 240, 241, 249, 251, 254, 255, 256, 259, 262, 263, 265, 268, 270, 272, 275, 278, 282, 285, 288, 300, 303, 310, 314, 320, 324, 342, 346, 352, 358, 364, 368, 374, 388, 389, 390, 392, 397, 419, 420, 422, 426, 428, 430, 432, 434, 439, 442, 452, 454, 460, 461, 465, 470, 478, 482, 487, 506, 508, 518, 520, 524, 534, 601, 634, 653, 659, 677, 723, 724, 728, 729, 731, 732, 735, 736, 737, 738, 739, 740, 748, 750, 765, 840, 865, 901, 921, 925, 935, 945, 948, 961, 977, 979, 980, 994, 1006, 1008, 1009, 1010, 1011, 1012, 1018, 1019, 1021, 1046, 1052, 1056, 1059, 1062, 1065, 1069, 1075, 1079, 1081, 1106, 1107, 1109, 1124, 1126, 1131, 1132, 1137, 1138, 1183, 1185, 1221, 1233], "l\u00f6sen": 23, "wollen": [23, 37, 238, 415, 1240, 1245, 1248, 1252, 1254], "hilfestellung": 23, "abgrenzung": 23, "organisationen": 23, "privatpersonen": 23, "bestimmt": 23, "branch": [23, 50, 54, 60, 124, 171, 182, 193, 196, 205, 309, 312, 458, 499, 500, 830, 860, 887, 889, 899, 992, 994, 1122, 1253, 1259], "gruppen": 23, "staatlich": 23, "verwaltung": 23, "privat": [23, 57, 104, 109, 116, 121, 122, 126, 144, 149, 192, 204, 205, 217, 219, 226, 227, 230, 250, 263, 268, 280, 299, 315, 317, 337, 371, 372, 376, 379, 380, 396, 397, 402, 507, 508, 513, 517, 523, 528, 533, 540, 543, 545, 549, 551, 556, 566, 572, 573, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 588, 628, 634, 643, 647, 649, 651, 652, 654, 655, 656, 658, 660, 670, 685, 686, 703, 713, 715, 716, 729, 740, 743, 746, 747, 749, 750, 753, 754, 765, 767, 768, 769, 771, 773, 774, 777, 778, 779, 780, 786, 787, 788, 801, 802, 803, 806, 807, 815, 817, 824, 826, 828, 830, 840, 881, 916, 917, 923, 937, 943, 984, 1001, 1107, 1216, 1233, 1255], "verein": 23, "npo": [23, 726], "wissenschaft": 23, "universit\u00e4t": 23, "fachhochschulen": 23, "richtungen": 23, "regionen": 23, "stadt": [23, 255], "land": [23, 537, 825], "bezirk": 23, "gemeinden": 23, "interessensgruppen": 23, "selbstvermarkter_innen": 23, "landwirtschaft": 23, "handwerk": 23, "u": [23, 32, 34, 35, 36, 38, 42, 53, 61, 63, 126, 168, 171, 192, 195, 200, 210, 220, 223, 226, 228, 234, 251, 262, 266, 270, 272, 275, 278, 300, 307, 324, 344, 442, 473, 498, 519, 726, 803, 856, 862, 897, 925, 933, 944, 945, 947, 948, 972, 985, 992, 994, 1013, 1050, 1059, 1062, 1073, 1081, 1118, 1120, 1145, 1196, 1200, 1204, 1216, 1221, 1228, 1244, 1251], "altersgrupp": 23, "genderspezifisch": 23, "frauen": 23, "region": [23, 190, 843, 871], "grupp": [23, 238, 406, 976], "sch\u00fcler_innen": 23, "lehrer_innen": 23, "thematisch": 23, "deutsch": [23, 254, 395, 396, 1235], "fl\u00fcchtling": 23, "posit": [23, 29, 62, 124, 197, 223, 226, 227, 229, 231, 233, 238, 246, 250, 259, 266, 270, 275, 276, 278, 285, 288, 299, 302, 309, 312, 314, 316, 318, 319, 322, 324, 328, 330, 334, 337, 340, 341, 344, 345, 346, 352, 358, 376, 383, 428, 465, 478, 519, 522, 637, 678, 685, 694, 695, 726, 820, 840, 948, 985, 993, 1009, 1010, 1014, 1055, 1084, 1085, 1088, 1129, 1130, 1132, 1133, 1134, 1186, 1201, 1209, 1223, 1228], "zielgruppentyp": 23, "350": [23, 262, 265, 310, 324, 352, 358, 364, 368, 1145], "bereitet": 23, "vor": [23, 198, 199, 213, 223, 235, 270, 368, 1248, 1257], "lt": [23, 32, 35, 36, 192, 197, 209, 212, 217, 218, 223, 228, 233, 238, 240, 246, 249, 254, 259, 262, 265, 270, 272, 275, 278, 282, 285, 288, 291, 300, 303, 307, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 391, 392, 393, 590, 607, 609, 642, 687, 693, 697, 706, 709, 710, 740, 840], "zielvorgaben": 23, "basierend": [23, 209, 1235, 1240], "existierendem": 23, "f\u00fchrt": [23, 199, 1255], "jederzeit": [23, 204, 213, 415], "\u00fcberblick": [23, 213, 217, 279, 293, 415, 416, 1235, 1243, 1245, 1251, 1252, 1255, 1257], "behaltend": 23, "behandelten": 23, "fragen": [23, 225, 241, 397, 402, 415, 1235, 1245, 1252], "antworten": [23, 225], "info": [23, 200, 307, 308, 358, 494, 498, 499, 500, 506, 534, 535, 652, 802, 862, 993, 1033, 1063, 1064, 1221], "bed\u00fcrfni": [23, 198], "schulungsagenden": 23, "erstellen": [23, 415, 1240, 1245], "zeitaufw\u00e4ndig": 23, "fehlertr\u00e4chtig": 23, "vom": [23, 172, 198, 207, 208, 209, 223, 233, 234, 253, 278, 282, 1245, 1251, 1252, 1259], "erwartet": [23, 199, 223], "w\u00e4hrend": [23, 163, 166, 1235], "einzugehen": [23, 225, 1258], "geplanten": [23, 1235], "verlassen": [23, 909], "birgt": 23, "chao": [23, 946, 1118], "teilnehmerinnen": 23, "\u00fcbersichtlich": 23, "nachbearbeitung": 23, "hinterlassen": [23, 198], "absch\u00e4tzung": 23, "zielgruppengr\u00f6\u00df": 23, "affinem": 23, "background": [23, 201, 294, 295, 297, 354, 355, 373, 741, 745, 771, 783, 810, 837, 839, 840, 862, 926, 993, 1031, 1040, 1046, 1095], "inklus": [23, 210, 223, 233, 246, 358, 1235, 1240, 1245], "betroffen": 23, "eu": [23, 32], "20000": [23, 189, 265], "erkennung": 23, "abstand": 23, "erfordert": [23, 1245], "vgl": [23, 223, 1255, 1258], "frosch": 23, "wassergla": 23, "selbst": [23, 37, 213, 223, 233, 909, 1235, 1236, 1245, 1248, 1254, 1259], "umstellung": 23, "zus\u00e4tzlichen": 23, "bedeutet": [23, 354], "besten": [23, 213, 279, 1238], "einsatz": [23, 1236], "erw\u00e4gung": 23, "ziehen": 23, "angegebenen": [23, 163, 166], "erheblichen": [23, 1238], "bed\u00fcrfnissen": 23, "kenntni": 23, "erlangt": 23, "mitgli": 23, "editor": [23, 30, 62, 205, 222, 383, 973, 1111, 1115, 1195, 1214], "verfasst": 23, "identisch": 23, "obig": 23, "behebt": 23, "inkonsistenzen": 23, "baut": [23, 1236, 1254], "neue": [23, 223, 233, 265, 293, 342, 358, 392, 415, 1255], "verliert": [23, 1259], "aufbaubeziehungen": 23, "verlangt": [23, 1235], "grundlag": 23, "folienmateri": 23, "meist": [23, 1254], "powerpoint": [23, 30], "propriet\u00e4r": 23, "formaten": 23, "praktisch": [23, 163, 166, 209, 1235], "unm\u00f6glich": 23, "macht": [23, 207, 209, 213, 217, 223, 229, 233, 275, 279, 392, 1238, 1245, 1252, 1259], "artefakttypen": 23, "livehack": [23, 24, 59, 66, 126, 183, 209, 215, 217, 226, 227, 234, 253, 266, 268, 269, 281, 290, 295, 297, 298, 306, 309, 316, 318, 323, 329, 334, 337, 340, 341, 344, 345, 350, 351, 356, 357, 362, 363, 366, 367, 397, 415, 505, 541, 548, 620, 838, 840, 852, 889, 1130, 1218, 1225, 1251], "st\u00fcckwerk": 23, "trainerin": 23, "oben": [23, 132, 163, 166, 198, 223, 234, 240, 1251], "zielt": 23, "darauf": [23, 198, 209, 1235, 1238], "transpar": [23, 29, 37, 871, 873, 924, 1201], "wiederzuverwenden": 23, "sodass": [23, 37, 217, 1254, 1259], "aufgebrochen": 23, "schwer": [23, 213, 223, 415, 1245, 1252, 1257], "abzusch\u00e4tzen": 23, "abzielt": 23, "weg": [23, 198, 199, 209, 213, 225, 238, 253, 293, 415, 1236, 1238, 1239, 1240, 1252], "dorthin": 23, "m\u00fcssen": [23, 163, 166, 223, 397, 402, 1245, 1252], "unterst\u00fctzt": [23, 1259], "kursf\u00fchrung": [23, 415], "fragt": [23, 199], "unklarheiten": 23, "weist": [23, 198], "etwaig": 23, "verwandt": [23, 1238], "hin": [23, 415], "plausibl": [23, 192], "realistisch": 23, "bzgl": 23, "kursdauer": 23, "strukturierten": [23, 234], "langweiligen": 23, "tatsachen": 23, "entsprechend": 23, "hunderttausend": 23, "allerd": [23, 223, 225, 1239, 1240, 1254, 1259], "keinen": [23, 198, 342, 1238], "einfluss": 23, "wahl": [23, 1259], "gespr\u00e4ch": 23, "betroffenen": 23, "assoziieren": 23, "metadaten": 23, "setzt": [23, 163, 166, 207, 1236, 1245], "vorau": 23, "beziehungen": 23, "passt": [23, 233, 234, 1251], "ganz": [23, 198, 199, 208, 209, 213, 223, 225, 239, 240, 254, 271, 272, 368, 415, 1239, 1240, 1254], "gut": [23, 163, 166, 198, 199, 223, 234, 415, 754, 1235, 1251], "y": [23, 113, 168, 171, 201, 210, 211, 213, 240, 249, 255, 256, 262, 263, 265, 266, 278, 288, 291, 300, 303, 310, 320, 324, 330, 346, 352, 364, 368, 443, 449, 467, 470, 473, 474, 478, 490, 494, 506, 524, 588, 598, 644, 645, 646, 647, 649, 651, 652, 653, 654, 655, 656, 658, 660, 662, 663, 670, 677, 685, 724, 746, 747, 748, 750, 765, 767, 768, 769, 786, 797, 806, 855, 856, 887, 888, 921, 935, 948, 950, 961, 967, 992, 993, 994, 1069, 1077, 1083, 1142, 1145, 1193], "algorithmen": [23, 293, 1240], "automatisch": [23, 1255, 1259], "berechnen": 23, "semiautomatisch": 23, "kursnavig": 23, "nachbereitung": 23, "plaintext": 23, "artefakt": [23, 1240], "text": [23, 27, 39, 40, 59, 186, 200, 211, 222, 225, 230, 231, 238, 250, 251, 256, 263, 270, 272, 290, 293, 296, 303, 305, 324, 326, 368, 370, 439, 518, 538, 840, 917, 980, 984, 1011, 1062, 1111, 1118, 1124, 1133, 1143, 1166, 1200, 1207, 1212, 1214, 1248], "restrukturierung": 23, "o": [23, 29, 32, 38, 62, 66, 80, 87, 92, 99, 100, 102, 109, 112, 113, 126, 139, 143, 162, 168, 183, 190, 192, 193, 200, 201, 209, 213, 217, 227, 229, 230, 231, 233, 238, 240, 241, 247, 250, 251, 255, 257, 260, 261, 262, 263, 266, 267, 268, 269, 274, 275, 279, 280, 281, 282, 284, 286, 289, 291, 293, 296, 300, 302, 305, 306, 307, 309, 310, 312, 315, 316, 319, 321, 322, 323, 325, 326, 328, 330, 340, 342, 344, 345, 350, 351, 352, 356, 357, 359, 362, 363, 365, 366, 369, 370, 382, 383, 384, 385, 386, 387, 388, 397, 402, 404, 415, 417, 419, 435, 450, 459, 465, 466, 470, 472, 476, 479, 482, 483, 492, 494, 496, 498, 499, 501, 502, 506, 526, 534, 538, 540, 552, 579, 590, 601, 642, 660, 745, 783, 809, 815, 816, 817, 837, 838, 839, 840, 855, 856, 864, 865, 887, 894, 913, 914, 915, 916, 917, 918, 920, 921, 922, 924, 925, 933, 945, 948, 952, 953, 955, 956, 959, 960, 962, 968, 976, 977, 981, 984, 985, 992, 993, 1005, 1015, 1018, 1019, 1020, 1021, 1022, 1025, 1030, 1031, 1039, 1042, 1045, 1046, 1047, 1056, 1062, 1063, 1064, 1065, 1068, 1069, 1071, 1075, 1079, 1080, 1081, 1084, 1086, 1088, 1089, 1090, 1094, 1110, 1113, 1116, 1118, 1124, 1132, 1139, 1140, 1145, 1146, 1147, 1157, 1160, 1168, 1171, 1172, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1188, 1193, 1201, 1202, 1216, 1221, 1228, 1238, 1245, 1258], "konsistent": 23, "referenzierung": 23, "fremdmateri": 23, "speisekart": 23, "unterst\u00fctzung": 23, "themenauswahl": [23, 1235], "korrekt": [23, 1238], "vorbereitet": [23, 415], "ma\u00dfnahmen": 23, "sicherstellung": 23, "geplant": 23, "beispielsweis": [23, 204, 1258], "rahmen": 23, "webplattform": 23, "entsteht": 23, "erh\u00f6hung": 23, "sichtbarkeit": [23, 1238, 1255], "aktuel": 23, "inhalt": [23, 223, 225, 255, 398, 909, 1235, 1259], "wartung": 23, "performanceverbesserungen": 23, "plane": [23, 211, 213, 1190], "kein": [23, 163, 166, 208, 209, 213, 223, 233, 240, 255, 291, 310, 368, 392, 415, 1253], "impactmein": 23, "sicherzustellen": 23, "erkl\u00e4rung": [23, 247], "erkl\u00e4ren": [23, 1238], "gew\u00fcnscht": [23, 223], "erreicht": [23, 198, 199, 1252], "hatt": [23, 198, 199, 213, 223, 225], "button": [23, 65, 67, 126, 189, 197, 276, 985], "gew\u00e4hlt": [23, 198, 199], "dzugeh\u00f6rig": 23, "textfeld": 23, "l\u00e4sst": [23, 1254], "bearbeiten": 23, "daher": [23, 1259], "konvertiert": 23, "unten": [23, 132, 199, 213, 223, 1236], "beschriebenen": 23, "kan\u00e4len": 23, "promot": [23, 194], "angab": 23, "quellen": 23, "literatur": [23, 251, 657], "lightweight": [23, 180, 205, 222, 226, 242, 276, 278, 290, 746, 804, 807, 1188, 1200, 1241], "daringfirebal": 23, "project": [23, 24, 29, 30, 38, 42, 53, 61, 63, 65, 66, 67, 70, 108, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 143, 147, 152, 155, 168, 171, 180, 186, 187, 190, 191, 193, 195, 196, 197, 202, 209, 211, 213, 219, 222, 226, 229, 236, 241, 250, 269, 273, 276, 279, 306, 309, 316, 323, 355, 374, 376, 377, 401, 402, 408, 410, 415, 416, 486, 493, 497, 505, 509, 511, 512, 519, 520, 524, 526, 532, 534, 535, 537, 538, 539, 541, 542, 548, 588, 589, 598, 601, 661, 663, 664, 726, 809, 840, 887, 927, 983, 985, 987, 992, 993, 1004, 1022, 1062, 1063, 1064, 1078, 1079, 1087, 1090, 1141, 1147, 1174, 1176, 1186, 1187, 1189, 1190, 1194, 1202, 1204, 1218, 1220, 1224, 1225, 1230], "docutil": [23, 32, 34, 35, 36, 38], "sourceforg": 23, "io": [23, 32, 55, 62, 66, 93, 139, 143, 159, 162, 190, 194, 196, 211, 213, 227, 229, 230, 231, 232, 239, 241, 242, 250, 251, 264, 280, 296, 303, 305, 311, 326, 327, 341, 347, 353, 370, 371, 385, 397, 400, 402, 404, 419, 517, 643, 838, 840, 864, 883, 884, 899, 917, 920, 921, 929, 984, 993, 994, 1047, 1055, 1077, 1084, 1137, 1237, 1245, 1247, 1252, 1254, 1258], "generatoren": [23, 213, 280, 415], "staticgen": 23, "learn": [23, 29, 70, 72, 77, 79, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 169, 190, 192, 210, 211, 213, 222, 226, 230, 251, 260, 340, 344, 369, 383, 398, 400, 504, 789, 840, 930, 985, 993, 1047, 1110, 1111, 1186, 1190, 1194, 1202, 1223], "moodl": [23, 108, 111, 112, 113, 126, 147, 155, 158, 163, 166, 197, 371, 401, 403, 404, 725, 740, 840, 917, 937, 943, 962, 968, 984, 1073], "schoologi": 23, "eduongo": 23, "produkt": 23, "dienstleistungen": 23, "recherch": [23, 213], "hinblick": [23, 1247], "ihnen": [23, 199, 975, 1235, 1245, 1252], "nennen": 23, "beschreiben": 23, "st\u00e4rken": [23, 1238], "schw\u00e4chen": [23, 1240], "konkurrierenden": 23, "relevant": [23, 213, 415, 1258], "anbiet": 23, "ziel": [23, 1236, 1252], "allumfassend": 23, "eh": [23, 32, 223, 233, 238, 246, 272, 278, 282, 285, 330, 352], "vielmehr": 23, "bietet": [23, 204, 207, 1254], "beim": [23, 198, 199, 209, 213, 223, 1238], "verfassen": 23, "kernthema": 23, "zwischen": [23, 207, 223, 233, 240, 246, 415, 1238, 1239, 1240, 1252, 1259], "benutz": [23, 1255], "vorgaben": 23, "existiert": [23, 223, 235], "wald": 23, "dass": [23, 198, 199, 207, 209, 213, 217, 223, 234, 238, 240, 254, 397, 402, 415, 1235, 1238, 1239, 1240, 1245, 1251, 1252, 1255, 1259], "beisteuert": 23, "eben": [23, 204, 207, 233], "\u00fcbergreifend": 23, "definiert": [23, 209, 223, 1235, 1238], "ansatz": 23, "mir": [23, 198, 199, 213, 223, 234, 238, 270, 397, 402, 415, 1238, 1251], "verfolgt": [23, 1252], "essentiel": 23, "gesundheit": 23, "unterlagen": [23, 186, 253, 269, 281, 415], "licht": 23, "lesen": [23, 207, 208, 209, 223, 235, 397, 402], "einig": [23, 199, 210, 225, 415, 1238, 1245], "plugin": [23, 192, 552, 790, 1077], "helfen": 23, "lieblo": 23, "halbherzig": 23, "On": [23, 65, 99, 103, 108, 111, 112, 113, 126, 147, 149, 159, 168, 190, 192, 205, 226, 242, 252, 268, 284, 286, 294, 295, 297, 300, 306, 312, 315, 354, 368, 373, 397, 482, 488, 497, 500, 519, 552, 590, 598, 687, 706, 710, 726, 740, 743, 783, 791, 810, 839, 840, 865, 888, 892, 917, 920, 921, 922, 984, 986, 992, 994, 1001, 1005, 1006, 1009, 1013, 1020, 1023, 1025, 1042, 1050, 1060, 1065, 1073, 1074, 1078, 1116, 1204, 1208, 1223, 1241], "zentral": [23, 186], "ergebni": [23, 275], "niemand": 23, "doc": [23, 37, 39, 66, 127, 139, 143, 171, 194, 196, 209, 210, 212, 242, 250, 257, 259, 265, 274, 275, 278, 282, 285, 300, 343, 382, 394, 397, 402, 405, 406, 417, 517, 637, 843, 858, 864, 867, 948, 970, 1028, 1132, 1199], "show": [23, 24, 27, 29, 43, 58, 62, 65, 67, 121, 126, 135, 139, 144, 189, 190, 192, 193, 197, 218, 226, 229, 230, 242, 251, 259, 265, 268, 275, 276, 278, 306, 318, 319, 332, 340, 348, 354, 355, 368, 374, 376, 382, 383, 401, 403, 404, 405, 408, 467, 534, 535, 540, 569, 585, 591, 637, 727, 825, 850, 869, 871, 903, 914, 915, 948, 970, 973, 975, 977, 985, 987, 992, 993, 994, 1013, 1044, 1046, 1050, 1055, 1059, 1073, 1075, 1083, 1122, 1139, 1142, 1193, 1194, 1216, 1223, 1230, 1243], "revealj": 23, "option": [23, 31, 80, 184, 190, 191, 192, 196, 200, 205, 209, 214, 230, 242, 266, 278, 282, 290, 293, 294, 295, 303, 308, 312, 324, 332, 333, 341, 344, 348, 349, 354, 358, 373, 376, 379, 397, 417, 426, 427, 443, 454, 455, 494, 513, 516, 517, 520, 522, 523, 524, 531, 532, 533, 534, 546, 573, 601, 825, 840, 856, 907, 911, 914, 915, 924, 976, 994, 995, 997, 1005, 1018, 1022, 1056, 1064, 1121, 1139, 1143, 1216, 1223, 1230, 1238, 1243, 1256], "webslid": 23, "tv": [23, 32, 197], "sicht": [23, 208, 279, 1238], "entscheidend": 23, "usp": 23, "vorteilhaft": 23, "unterscheidet": [23, 1238], "600": [23, 259, 265, 513, 695], "kernfeatur": 23, "inbeziehungsetzen": 23, "dessen": [23, 208, 223, 320, 415, 1236, 1240, 1253], "versagen": 23, "implementierung": 23, "solcher": [23, 207, 223], "featur": [23, 29, 42, 46, 55, 56, 80, 82, 124, 126, 144, 156, 195, 197, 207, 218, 223, 226, 227, 229, 231, 236, 241, 250, 259, 265, 268, 275, 276, 278, 279, 281, 282, 321, 354, 373, 399, 415, 416, 492, 496, 501, 502, 504, 505, 534, 716, 742, 745, 752, 759, 770, 784, 794, 795, 799, 803, 808, 816, 836, 837, 839, 840, 879, 887, 985, 993, 994, 1014, 1046, 1056, 1063, 1064, 1081, 1095, 1096, 1097, 1098, 1102, 1105, 1112, 1124, 1125, 1141, 1144, 1145, 1146, 1147, 1160, 1171, 1174, 1175, 1176, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1189, 1190, 1191, 1194, 1198, 1202, 1204, 1206, 1215, 1218, 1220, 1221, 1225, 1236, 1238, 1239, 1241, 1245, 1252], "indem": [23, 233, 398, 1245], "foku": [23, 415], "schulbetrieb": 23, "legen": [23, 975], "ferner": 23, "schwere": 23, "abh\u00e4ngigkeiten": [23, 1248], "fett": [23, 223, 240], "datenbanken": [23, 246, 415], "webserv": [23, 993], "hintergrund": [23, 233], "redaktionel": 23, "arbeit": [23, 213, 1236], "offlin": 23, "laptop": [23, 191, 193, 200, 1004], "zug": 23, "erledigen": [23, 1236], "einschr\u00e4nkung": 23, "geserv": 23, "erarbeitet": [23, 1235], "sinn": [23, 217, 1238], "prinzip": [23, 1255, 1257, 1259], "kostenlo": 23, "genutzt": [23, 207], "weiterentwickelt": [23, 1240, 1245], "f\u00f6rderbedingungen": 23, "projektseit": 23, "ver\u00f6ffentlichen": 23, "nachvollziehbar": 23, "strukturieren": 23, "f\u00f6rderzusag": 23, "hinwei": 23, "verpflichtend": 23, "gesondert": 23, "erw\u00e4hnen": 23, "projektzwischenbericht": 23, "projektzusammenfassung": 23, "projektendbericht": 23, "entwicklerdokument": 23, "anwenderdokument": 23, "dienstleistungsbeschreibung": 23, "abh\u00e4ngig": 23, "dokument": [23, 163, 166, 208, 223, 234, 255, 270, 282, 342, 392, 1253], "externkommunik": 23, "erreichung": 23, "nachhaltigkeit": 23, "projektergebnistyp": 23, "haupteigenschaften": 23, "funktionalit\u00e4t": [23, 223], "sourcecod": [23, 207], "bestehend": 23, "unabh\u00e4ngigem": 23, "unitgetestetem": 23, "core": [23, 61, 63, 189, 190, 192, 193, 222, 225, 229, 234, 247, 262, 273, 276, 278, 285, 288, 303, 307, 310, 320, 324, 346, 352, 358, 364, 373, 420, 432, 477, 541, 542, 549, 554, 568, 569, 600, 652, 657, 751, 781, 801, 858, 862, 887, 925, 963, 979, 1044, 1047, 1048, 1059, 1060, 1077, 1145, 1188, 1193, 1206, 1207, 1209, 1210, 1221, 1256], "reih": [23, 204, 217, 225], "direct": [23, 37, 39, 62, 126, 143, 171, 187, 190, 251, 309, 312, 383, 454, 465, 500, 526, 538, 660, 807, 846, 924, 981, 1008, 1010, 1026, 1028, 1029, 1064, 1079, 1106, 1193, 1201, 1210, 1243, 1246], "generierten": 23, "kursagenda": 23, "graphen": 23, "lizenz": 23, "gpl": [23, 652, 802, 843], "pypi": [23, 65, 66, 169, 186, 222, 226, 241, 257, 273, 299, 1215, 1216, 1221], "installierbar": 23, "paket": [23, 207, 1236], "generiert": [23, 223], "readthedoc": [23, 32, 39, 66], "gehostet": 23, "verf\u00fcgbar": [23, 1048, 1248], "obigen": 23, "bisherigen": [23, 1240], "aktuellen": [23, 233], "bereich": [23, 213, 415], "umfeld": 23, "projektantrag": 23, "bisher": [23, 186, 1235], "softwarebasi": 23, "grundlegend": [23, 235, 1240, 1245, 1252, 1254, 1257], "semiprofessionel": 23, "visualisierung": 23, "plan": [23, 42, 60, 189, 213, 222, 257, 266, 276, 341, 396, 397, 401, 405, 411, 504, 640, 751, 809, 887, 1221, 1228], "kurz": [23, 198, 199, 223, 225, 234, 239, 254, 279, 1237, 1251, 1254], "lebensl\u00e4uf": 23, "projektbeteiligten": 23, "sowi": [23, 1248], "ver\u00f6ffentlichungen": 23, "b\u00fccher": 23, "fachartikel": 23, "patent": 23, "vortr\u00e4g": 23, "gebiet": [23, 199, 1257], "projektinhalt": 23, "verdeutlichen": [23, 1236], "teamleitung": 23, "softwareprojekt": 23, "stefan": [23, 208], "walkner": 23, "1983": [23, 643], "hallein": 23, "master": [23, 60, 165, 168, 193, 196, 205, 398, 399, 883, 887, 977, 989], "scienc": [23, 28, 80, 197, 211, 222, 226, 231, 260, 329, 343, 365, 399, 643, 696, 1112, 1192, 1193, 1194, 1195], "salzburg": 23, "consult": [23, 61, 63, 67, 187, 190, 203, 241, 259, 265, 275, 278, 282, 403, 549], "isamberth": 23, "adnet": 23, "2000": [23, 246, 249, 265, 270, 282, 303, 506, 552, 1048], "2002": [23, 265, 652, 802], "divers": [23, 214, 1237], "2005": [23, 643], "2007": 23, "entwicklungsleit": 23, "nextsens": 23, "2016": [23, 225, 226, 247, 250, 265, 273, 299, 306, 314, 323, 345, 1188], "programmiererfahrung": [23, 1245, 1252, 1259], "bash": [23, 101, 126, 148, 187, 197, 206, 230, 240, 242, 262, 270, 278, 285, 288, 296, 303, 305, 306, 310, 317, 320, 324, 326, 346, 352, 358, 364, 370, 397, 398, 399, 402, 404, 416, 520, 548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 642, 726, 793, 796, 816, 838, 839, 840, 910, 914, 915, 916, 917, 919, 920, 921, 922, 923, 925, 926, 929, 930, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 948, 949, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 973, 978, 979, 984, 1007, 1010, 1013, 1015, 1017, 1020, 1023, 1025, 1026, 1039, 1041, 1042, 1045, 1047, 1062, 1064, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1077, 1084, 1166, 1236, 1247], "davon": [23, 198, 209, 1238, 1257], "teamleit": 23, "m\u00f6chten": [23, 1259], "ggf": 23, "kennenlernen": 23, "knackig": [23, 186], "darstellung": 23, "handelnden": 23, "personen": 23, "sendung": 23, "minuten": [23, 976], "millionen": 23, "ihren": [23, 223, 235], "antrag": 23, "nochmal": 23, "vorgelesen": 23, "bekommen": [23, 217, 415, 1235, 1248], "un": [23, 217, 225, 415, 865, 972, 1106, 1236], "hintergrundmusik": 23, "windger\u00e4usch": 23, "gerad": [23, 199, 233, 234, 415, 1238, 1251], "f\u00f6rdern": 23, "sollen": 23, "animiert": 23, "produktvideo": 23, "interessieren": 23, "sicher": [23, 209, 213], "mindesten": [23, 209], "vier": [23, 209, 223, 233, 238, 240, 255, 259, 262, 270, 272, 275, 282, 288, 300, 303, 307, 310, 320, 330, 342, 346, 358, 368, 392, 1245, 1258], "monat": 23, "einreichschluss": 23, "uneingeschr\u00e4nkt": 23, "aufrufbar": 23, "youtu": [23, 796, 800], "hobyb1zukdi": 23, "projektrisiken": 23, "sehen": [23, 199], "wenig": [23, 208, 223, 293, 415, 1236], "pflegen": 23, "frontalen": 23, "vortragsstil": 23, "starker": 23, "paradigmenwechsel": 23, "wechsel": 23, "jahrelang": 23, "gewohnten": 23, "verfahrensweisen": 23, "abrupt": 23, "gro\u00dfer": 23, "monolithisch": 23, "zerhacken": 23, "welchen": 23, "bewerten": 23, "messen": 23, "zielerreichung": 23, "kriterium": 23, "arbeitserleichterung": 23, "minimal": [23, 223], "erfolg": [23, 1238], "mindestkriterien": 23, "positiven": 23, "projekterfolg": 23, "jedenfal": 23, "abgedeckt": 23, "ausgezeichnet": 23, "kriterien": [23, 204, 217, 976], "angestrebten": 23, "ausgezeichneten": 23, "anerkennen": 23, "gesteigerten": 23, "effekt": [23, 223, 234, 1251, 1259], "bekundet": 23, "medien": [23, 1258], "berichtet": 23, "migrat": [23, 217], "zehn": [23, 233], "migrieren": 23, "verwenden": [23, 204, 217, 223, 229, 233, 238, 1258], "untereinand": 23, "zutun": 23, "zusammenzuarbeiten": 23, "kooperationspartner_innen": 23, "dienstleister_innen": 23, "mitwirkend": 23, "zielgruppenvertreter_innen": 23, "werbeagentur": 23, "schaar": 23, "logo": 23, "webdesign": 23, "wof\u00fcr": 23, "arbeitsstunden": 23, "geld": 23, "allem": [23, 198, 213, 223, 415, 1257], "eingesetzt": [23, 1236, 1253], "basisarbeit": 23, "workflow": [23, 124, 217, 251, 266, 372, 860, 1056, 1253], "datenstrukturen": [23, 235, 253, 274, 1240], "zeitgem\u00e4\u00df": 23, "interakt": [23, 1137], "know": [23, 42, 61, 63, 71, 82, 86, 144, 187, 189, 190, 191, 192, 195, 196, 197, 205, 210, 211, 214, 218, 219, 222, 226, 230, 241, 242, 249, 252, 309, 312, 316, 341, 371, 372, 377, 399, 430, 432, 438, 443, 460, 470, 482, 484, 486, 488, 492, 493, 494, 496, 500, 501, 502, 504, 524, 531, 538, 543, 544, 556, 593, 601, 628, 644, 646, 652, 654, 658, 677, 714, 717, 720, 742, 743, 745, 754, 756, 758, 781, 783, 792, 801, 803, 807, 817, 837, 839, 840, 842, 858, 865, 887, 927, 948, 985, 988, 992, 994, 1005, 1010, 1012, 1021, 1031, 1059, 1081, 1089, 1094, 1095, 1106, 1111, 1114, 1117, 1118, 1137, 1145, 1183, 1187, 1221, 1246], "welchem": [23, 209], "umfang": 23, "sachressourcen": 23, "ben\u00f6tigt": [23, 163, 166, 234, 235, 1251], "zugekauft": 23, "backendprogrammierung": 23, "programmiersprach": [23, 1237, 1240, 1252, 1254], "200": [23, 186, 187, 209, 211, 223, 240, 242, 249, 256, 259, 262, 265, 270, 272, 278, 282, 285, 288, 300, 303, 307, 314, 324, 330, 342, 346, 352, 358, 364, 368, 389, 394, 672, 673, 674, 675, 676, 678, 679, 680, 681, 695, 750, 865, 1046, 1162], "stunden": 23, "webprogrammierung": 23, "css": [23, 187, 188], "150": [23, 209, 223, 233, 240, 249, 259, 262, 265, 270, 272, 278, 282, 285, 288, 291, 300, 303, 320, 324, 330, 342, 346, 352, 358, 364, 368, 743], "kreativarbeit": 23, "erreichen": [23, 1252, 1255], "pers\u00f6nlich": [23, 415], "freund": 23, "ebenfal": [23, 163, 166, 1253], "t\u00e4tig": 23, "mich": [23, 198, 213, 233, 241, 415, 1235], "ermutigt": 23, "\u00fcberhaupt": [23, 1245, 1252, 1259], "starten": [23, 1257], "repr\u00e4sent": 23, "post": [23, 95, 174, 186, 190, 192, 194, 195, 196, 197, 200, 251, 266, 315, 430, 444, 548, 644, 985, 1054, 1056, 1059, 1187], "facebookseit": 23, "relevanten": 23, "foren": 23, "linkedin": 23, "typisch": [23, 234, 1238], "projektbeginn": 23, "abschluss": [23, 199, 397], "oktob": 23, "projektdau": 23, "\u00fcberschreiten": 23, "mitarbeiter_innen": 23, "stundenanzahl": 23, "jeweilig": 23, "stundens\u00e4tz": 23, "senior": 23, "junior": 23, "programmierer_in": 23, "designer_in": 23, "contentmanager_in": 23, "projektmanager_in": 23, "assistenz": 23, "administr": [23, 197, 524, 925, 992, 1001, 1008, 1047], "sachbearbeiter_in": 23, "social": [23, 45, 544, 551, 555, 568, 569, 570, 573, 579, 582, 583, 584], "media": [23, 80, 207, 887, 993], "spzialist_in": 23, "firmeneigent\u00fcmer_innen": 23, "gesellschafter_innen": 23, "vereinsfunktion\u00e4r_innen": 23, "betr\u00e4gt": 23, "f\u00f6rderbar": 23, "stundensatz": 23, "brutto": 23, "nachweislich": 23, "angestellt": 23, "projektmitarbeiter_innen": 23, "errechnet": 23, "vollzeitvertrag": 23, "jahresstundenteil": 23, "1720": [23, 265], "teilzeitbesch\u00e4ftigten": 23, "aliquot": [23, 163, 166], "reduziert": [23, 213, 368], "dienstgeberanteil": 23, "faktor": 23, "ber\u00fccksichtigt": 23, "kalkul": 23, "jahresbruttogehalt": 23, "hohe": 23, "risiko": 23, "h\u00f6herer": 23, "eigenmittelanteil": 23, "bedingung": 23, "festgelegt": 23, "erh\u00f6hen": 23, "gemeinkosten": 23, "gef\u00f6rdert": 23, "antr\u00e4gen": 23, "diplomarbeiten": 23, "betrag": 23, "8000": [23, 265], "frontendprogrammierung": 23, "4500": [23, 265], "sachkosten": 23, "projektbedingt": 23, "betriebskosten": 23, "unmittelbar": 23, "projektt\u00e4tigkeit": 23, "entstehen": [23, 389], "leistungen": 23, "reisen": 23, "gliedern": 23, "rechnung": [23, 199, 307], "enthalten": 23, "umsatzsteu": 23, "darf": [23, 397], "kostenabrechnung": 23, "f\u00f6rdernehmer_in": 23, "vorsteuerabzugsberechtigt": 23, "13500": [23, 265], "beantragt": 23, "differenz": [23, 285], "aufgliedern": 23, "eigenmittel": 23, "f\u00f6rderungseinrichtungen": 23, "fremdmittel": 23, "kredit": 23, "leas": 23, "pro": [23, 226, 824, 976, 1080], "bono": 23, "beitrag": 23, "restfinanzierung": 23, "gesamtbetrag": 23, "ber\u00fccksichtigten": 23, "einzelkosten": 23, "achtung": 23, "gesamtprojektkosten": 23, "h\u00f6her": 23, "auszuf\u00fcllen": 23, "leer": [23, 240, 246, 254, 310], "bleiben": [23, 199, 223, 233, 1245, 1252, 1255], "reich": [23, 223], "nein": [23, 234, 240, 246, 291, 300, 358, 1251], "neben": [23, 213], "antr\u00e4g": 23, "oderstipendium": 23, "laufenden": 23, "call": [23, 32, 42, 50, 62, 65, 112, 113, 116, 120, 121, 132, 143, 159, 174, 186, 189, 190, 191, 192, 193, 195, 200, 207, 210, 212, 220, 226, 228, 249, 257, 259, 265, 270, 273, 275, 280, 282, 287, 288, 291, 306, 308, 310, 323, 324, 332, 341, 346, 348, 397, 402, 404, 415, 419, 426, 430, 431, 434, 445, 461, 463, 467, 473, 474, 477, 487, 490, 491, 499, 513, 516, 522, 526, 528, 534, 542, 549, 553, 568, 569, 570, 586, 590, 595, 598, 599, 601, 602, 614, 628, 642, 646, 649, 652, 654, 658, 667, 713, 714, 717, 719, 720, 724, 726, 727, 732, 739, 747, 748, 756, 760, 771, 774, 777, 778, 779, 780, 790, 793, 801, 806, 807, 815, 816, 817, 820, 824, 839, 840, 841, 855, 865, 867, 869, 873, 875, 877, 879, 881, 883, 885, 887, 892, 895, 901, 906, 907, 913, 917, 920, 921, 922, 923, 924, 926, 928, 931, 932, 945, 948, 984, 988, 996, 1006, 1007, 1010, 1011, 1012, 1013, 1015, 1017, 1023, 1024, 1025, 1030, 1031, 1038, 1039, 1041, 1042, 1045, 1046, 1047, 1056, 1059, 1060, 1062, 1064, 1082, 1084, 1085, 1086, 1091, 1097, 1099, 1100, 1101, 1103, 1104, 1106, 1107, 1108, 1128, 1129, 1133, 1135, 1138, 1139, 1145, 1163, 1167, 1188, 1193, 1201, 1204, 1209, 1210, 1222, 1223, 1224, 1243, 1247, 1255, 1256, 1258], "weiteren": 23, "stipendium": 23, "imlaufenden": 23, "habe": [23, 198, 199, 208, 213, 229, 358, 415], "zuge": [23, 163, 166], "projektantragsstellung": 23, "rundschreiben": 23, "expert": [23, 28, 194, 195, 200, 601, 927, 948, 994, 1192], "group": [23, 29, 103, 104, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 143, 144, 149, 183, 205, 210, 222, 227, 229, 238, 241, 242, 249, 255, 262, 270, 279, 282, 288, 291, 303, 317, 324, 327, 330, 352, 358, 364, 370, 371, 397, 410, 411, 415, 426, 451, 494, 495, 590, 620, 840, 887, 914, 915, 917, 920, 921, 922, 923, 934, 935, 936, 937, 938, 939, 940, 941, 943, 944, 970, 974, 975, 976, 977, 981, 984, 987, 992, 1004, 1005, 1013, 1014, 1015, 1020, 1023, 1025, 1039, 1042, 1047, 1060, 1084, 1140, 1166, 1221], "wirtschaftkamm": 23, "nehmen": [23, 199, 1237], "larg": [24, 30, 38, 80, 192, 195, 197, 222, 241, 242, 251, 262, 268, 309, 312, 473, 482, 484, 488, 494, 495, 554, 780, 789, 838, 881, 887, 1062, 1087, 1089, 1091, 1111, 1118, 1145, 1166, 1202, 1206, 1210, 1228], "amount": [24, 108, 112, 113, 159, 190, 191, 192, 195, 201, 222, 229, 257, 307, 308, 372, 494, 506, 657, 780, 781, 918, 920, 921, 1005, 1022, 1111], "pdf": [24, 37, 215, 217, 222, 226, 229, 230, 232, 282, 296, 305, 306, 326, 327, 349, 370, 371, 372, 374, 396, 397, 400, 402, 405, 416, 948, 970, 971, 994, 1026, 1064, 1160, 1237, 1238, 1239, 1247, 1248, 1254, 1255, 1257, 1258, 1259], "Not": [24, 43, 47, 53, 82, 111, 114, 115, 117, 118, 125, 147, 192, 193, 194, 197, 200, 222, 225, 226, 266, 268, 269, 270, 283, 292, 319, 323, 374, 434, 443, 465, 477, 480, 482, 488, 504, 513, 519, 534, 590, 607, 609, 642, 649, 651, 653, 658, 659, 728, 740, 760, 771, 775, 777, 778, 779, 797, 804, 807, 813, 818, 838, 840, 850, 858, 865, 869, 871, 986, 1024, 1044, 1046, 1048, 1050, 1060, 1084, 1086, 1091, 1092, 1093, 1094, 1104, 1106, 1118, 1127, 1132, 1188, 1192, 1197, 1211, 1213, 1229, 1241], "satisfi": [24, 32, 226, 543, 659, 748, 760, 793], "colleagu": [24, 28, 201, 242, 484, 524, 716, 1089, 1106, 1118], "aren": [24, 187, 272, 282, 522, 526, 756, 949, 1038, 1048], "either": [24, 39, 42, 43, 190, 192, 200, 201, 306, 309, 312, 482, 519, 525, 569, 743, 751, 754, 815, 914, 915, 945, 948, 980, 994, 1086, 1154, 1204, 1241], "nobodi": [24, 43, 190, 192, 211, 222, 262, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364, 485, 487, 644, 685, 758, 842, 914, 915, 925, 940, 942, 948, 949, 1001, 1009, 1139, 1194, 1224, 1230], "doe": [24, 38, 45, 48, 49, 60, 71, 80, 85, 86, 112, 113, 116, 120, 124, 126, 144, 171, 186, 189, 190, 191, 194, 195, 196, 197, 200, 201, 205, 210, 218, 222, 226, 228, 240, 249, 252, 265, 282, 285, 291, 309, 310, 312, 315, 317, 319, 341, 354, 358, 371, 374, 397, 408, 424, 430, 438, 442, 443, 444, 445, 452, 461, 462, 471, 474, 477, 478, 480, 482, 484, 486, 488, 493, 494, 495, 498, 499, 500, 504, 506, 511, 514, 515, 519, 531, 534, 537, 540, 542, 544, 547, 552, 556, 564, 566, 568, 594, 595, 596, 597, 598, 601, 602, 625, 634, 637, 644, 645, 646, 649, 652, 654, 655, 657, 660, 683, 690, 698, 704, 713, 716, 717, 722, 723, 724, 726, 732, 743, 748, 749, 751, 758, 760, 780, 782, 790, 791, 793, 797, 801, 802, 803, 806, 807, 809, 813, 814, 819, 820, 836, 838, 850, 851, 855, 856, 858, 865, 879, 887, 892, 903, 913, 923, 927, 928, 930, 933, 981, 985, 992, 993, 994, 1005, 1010, 1011, 1013, 1017, 1020, 1031, 1035, 1038, 1044, 1046, 1047, 1056, 1060, 1062, 1063, 1064, 1065, 1071, 1075, 1079, 1080, 1082, 1084, 1085, 1086, 1087, 1089, 1091, 1100, 1104, 1106, 1107, 1111, 1114, 1117, 1135, 1136, 1137, 1157, 1165, 1167, 1194, 1196, 1197, 1199, 1206, 1207, 1210, 1211, 1212, 1214, 1216, 1221, 1241, 1243], "even": [24, 29, 61, 63, 67, 80, 124, 178, 190, 191, 192, 197, 201, 211, 212, 222, 226, 229, 230, 234, 236, 241, 247, 249, 250, 252, 253, 262, 266, 269, 270, 273, 276, 279, 281, 282, 284, 287, 288, 299, 309, 312, 323, 324, 342, 345, 352, 358, 364, 374, 461, 470, 484, 490, 494, 519, 542, 547, 643, 651, 654, 700, 726, 748, 790, 793, 800, 809, 838, 840, 879, 887, 925, 944, 985, 993, 1010, 1011, 1044, 1046, 1047, 1063, 1083, 1095, 1106, 1132, 1135, 1147, 1150, 1151, 1186, 1188, 1209, 1216, 1223, 1243, 1251], "tech": [24, 45, 189], "although": [24, 29, 80, 139, 143, 190, 192, 196, 201, 212, 222, 228, 252, 272, 282, 415, 519, 526, 598, 743, 744, 785, 807, 927, 930, 1001, 1082, 1087, 1145, 1194], "gain": [24, 197, 309, 312, 494, 887, 927], "incred": 24, "momentum": 24, "expect": [24, 38, 50, 189, 192, 238, 259, 265, 266, 275, 278, 285, 310, 324, 342, 344, 346, 471, 526, 535, 544, 587, 652, 717, 722, 771, 780, 793, 860, 871, 985, 993, 994, 1033, 1050, 1059, 1106, 1116, 1129, 1160, 1170, 1193, 1227, 1228, 1231], "context": [24, 29, 61, 63, 112, 113, 159, 190, 211, 214, 226, 229, 231, 233, 240, 271, 275, 276, 278, 282, 285, 291, 299, 303, 308, 318, 319, 320, 323, 330, 334, 337, 340, 341, 344, 345, 352, 415, 481, 563, 564, 578, 646, 652, 781, 802, 838, 840, 849, 854, 857, 859, 864, 867, 868, 869, 870, 873, 874, 878, 879, 880, 882, 883, 884, 891, 892, 893, 895, 896, 897, 898, 901, 902, 905, 907, 908, 920, 921, 925, 984, 985, 1008, 1048, 1059, 1060, 1088, 1097, 1186, 1197], "defin": [24, 53, 127, 131, 134, 135, 139, 142, 144, 152, 183, 193, 210, 212, 227, 229, 231, 233, 238, 246, 249, 250, 252, 259, 263, 265, 268, 272, 275, 278, 282, 290, 292, 303, 314, 324, 341, 342, 354, 358, 364, 372, 392, 403, 424, 429, 434, 439, 440, 443, 460, 461, 462, 463, 464, 465, 478, 486, 487, 488, 490, 494, 507, 508, 509, 511, 513, 514, 522, 524, 526, 528, 534, 538, 552, 556, 564, 585, 586, 598, 620, 628, 645, 646, 647, 649, 651, 652, 654, 655, 658, 659, 660, 667, 670, 691, 695, 716, 723, 743, 744, 753, 754, 755, 756, 757, 760, 780, 785, 789, 798, 801, 806, 807, 831, 846, 848, 860, 925, 945, 985, 986, 994, 1005, 1012, 1030, 1052, 1062, 1064, 1079, 1081, 1085, 1087, 1089, 1101, 1106, 1118, 1128, 1184, 1197, 1201, 1233, 1241, 1243, 1246], "solv": [24, 45, 82, 91, 125, 126, 187, 190, 191, 220, 222, 226, 227, 229, 231, 242, 247, 260, 268, 273, 276, 287, 290, 312, 316, 323, 327, 329, 332, 344, 348, 383, 464, 506, 509, 742, 816, 822, 825, 839, 840, 887, 927, 984, 1025, 1039, 1073, 1075, 1077, 1106, 1183, 1188, 1194, 1243, 1244], "provid": [24, 27, 37, 58, 70, 171, 190, 192, 193, 194, 196, 197, 200, 201, 205, 218, 259, 265, 266, 275, 278, 282, 316, 332, 348, 372, 480, 508, 509, 519, 526, 535, 544, 555, 563, 716, 780, 807, 887, 924, 927, 936, 967, 993, 994, 1001, 1015, 1047, 1056, 1089, 1098, 1116, 1129, 1193, 1215, 1223, 1243], "depth": [24, 222, 226, 247, 259, 265, 275, 276, 278, 484, 805, 1091, 1188, 1192, 1193], "repres": [24, 152, 190, 192, 214, 259, 265, 275, 278, 282, 303, 314, 383, 493, 547, 564, 566, 653, 726, 838, 858, 883, 920, 921, 924, 992, 994, 1022, 1118, 1145, 1183, 1187, 1206, 1213, 1246], "own": [24, 28, 40, 43, 65, 66, 112, 113, 147, 159, 190, 191, 193, 194, 200, 205, 218, 222, 268, 292, 297, 306, 316, 341, 354, 355, 373, 374, 380, 484, 490, 505, 522, 531, 547, 564, 569, 633, 634, 643, 734, 735, 737, 738, 752, 756, 759, 771, 781, 783, 795, 803, 818, 838, 839, 840, 887, 920, 921, 923, 924, 933, 935, 936, 944, 945, 967, 977, 992, 993, 1005, 1012, 1030, 1035, 1046, 1047, 1059, 1079, 1086, 1103, 1108, 1109, 1111, 1195, 1228, 1243, 1244, 1246], "yield": [24, 29, 209, 210, 223, 226, 227, 229, 238, 250, 257, 263, 267, 269, 271, 272, 278, 282, 287, 289, 299, 302, 303, 310, 318, 319, 320, 323, 324, 329, 331, 342, 345, 346, 352, 358, 362, 363, 364, 367, 368, 465, 554, 563, 771, 774, 777, 778, 779, 840, 1084, 1088, 1090, 1091, 1093, 1112, 1122, 1144, 1145, 1146, 1147, 1160, 1171, 1186, 1198], "multipl": [24, 35, 36, 61, 63, 78, 108, 112, 113, 159, 190, 191, 193, 207, 222, 226, 229, 249, 250, 251, 263, 265, 282, 317, 341, 420, 422, 426, 427, 430, 439, 441, 444, 453, 460, 464, 482, 487, 500, 505, 522, 526, 537, 564, 578, 591, 646, 659, 717, 724, 738, 765, 771, 793, 795, 802, 810, 813, 817, 818, 838, 840, 856, 858, 864, 868, 869, 877, 878, 879, 887, 889, 891, 892, 895, 896, 902, 905, 908, 920, 921, 924, 925, 928, 930, 935, 936, 981, 984, 993, 1014, 1030, 1035, 1055, 1068, 1069, 1106, 1117, 1118, 1131, 1132, 1137, 1188, 1213], "artifact": [24, 196, 200, 214, 219, 332, 348, 500, 848, 1062, 1063, 1064, 1075, 1230, 1243], "complet": [24, 42, 62, 80, 126, 127, 143, 186, 189, 190, 211, 222, 230, 238, 247, 260, 263, 266, 273, 287, 288, 290, 317, 323, 329, 334, 341, 354, 382, 383, 464, 481, 494, 531, 534, 591, 600, 645, 646, 720, 790, 805, 838, 881, 887, 914, 915, 926, 988, 994, 1009, 1046, 1084, 1088, 1110, 1111, 1188, 1193, 1194, 1196, 1202, 1204, 1215, 1216, 1233, 1241], "prepar": [27, 124, 126, 142, 186, 189, 222, 279, 375, 378, 397, 415, 548, 589, 620, 682, 719, 1055, 1080, 1184, 1193, 1222], "base": [27, 29, 30, 42, 45, 53, 65, 80, 82, 99, 109, 123, 126, 139, 144, 182, 190, 192, 193, 205, 212, 217, 222, 223, 226, 229, 230, 233, 237, 240, 242, 252, 266, 268, 271, 275, 276, 280, 285, 287, 293, 300, 303, 308, 310, 314, 315, 316, 317, 318, 319, 324, 329, 340, 341, 342, 344, 345, 346, 352, 355, 358, 363, 364, 368, 374, 377, 380, 393, 397, 401, 408, 430, 438, 465, 482, 500, 505, 506, 507, 514, 520, 528, 529, 544, 548, 553, 554, 556, 563, 588, 600, 604, 620, 631, 673, 675, 676, 677, 678, 680, 681, 685, 717, 719, 720, 722, 765, 782, 783, 790, 795, 802, 806, 818, 824, 826, 828, 830, 834, 837, 839, 840, 860, 867, 871, 883, 887, 889, 939, 941, 981, 985, 1044, 1056, 1060, 1062, 1063, 1077, 1078, 1080, 1088, 1095, 1097, 1102, 1103, 1144, 1150, 1166, 1186, 1195, 1196, 1210, 1240, 1241, 1244], "exist": [27, 38, 46, 47, 53, 55, 56, 111, 112, 113, 151, 152, 159, 165, 171, 183, 186, 196, 201, 230, 242, 249, 315, 319, 376, 379, 382, 394, 397, 400, 482, 504, 506, 520, 524, 528, 542, 547, 567, 570, 590, 601, 607, 609, 642, 652, 700, 722, 726, 736, 738, 747, 801, 838, 840, 887, 914, 915, 920, 921, 923, 930, 939, 941, 950, 954, 955, 967, 984, 992, 994, 1005, 1010, 1014, 1020, 1023, 1025, 1042, 1049, 1056, 1075, 1079, 1080, 1085, 1086, 1095, 1100, 1135, 1137, 1156, 1197, 1205, 1206, 1216, 1221, 1223], "navig": [27, 1213], "through": [27, 34, 38, 60, 75, 80, 106, 187, 189, 190, 192, 197, 201, 205, 218, 222, 226, 228, 231, 242, 250, 251, 252, 257, 263, 316, 318, 319, 334, 337, 340, 345, 371, 374, 375, 378, 404, 408, 415, 434, 454, 473, 493, 497, 516, 531, 570, 592, 595, 661, 663, 664, 713, 714, 717, 720, 743, 758, 760, 785, 793, 797, 803, 807, 858, 885, 918, 927, 975, 985, 993, 994, 1003, 1056, 1059, 1060, 1086, 1091, 1094, 1109, 1111, 1114, 1150, 1195, 1210, 1241, 1242, 1246], "deviat": [27, 197, 210, 218, 227, 251, 282, 415, 887], "after": [27, 43, 186, 187, 190, 191, 192, 197, 200, 210, 219, 222, 229, 242, 249, 259, 265, 275, 278, 281, 282, 288, 303, 308, 315, 317, 324, 352, 368, 372, 383, 422, 430, 431, 464, 484, 491, 516, 522, 525, 537, 568, 569, 592, 599, 651, 654, 667, 702, 726, 751, 753, 754, 756, 765, 771, 818, 838, 865, 869, 875, 928, 931, 948, 949, 981, 992, 1032, 1050, 1055, 1056, 1059, 1062, 1082, 1084, 1086, 1111, 1112, 1116, 1153, 1166, 1184, 1192, 1201, 1213, 1222, 1223, 1228], "writeup": [27, 201, 1075], "what": [27, 28, 43, 44, 47, 48, 55, 56, 57, 58, 61, 63, 67, 71, 80, 85, 88, 89, 99, 100, 101, 106, 109, 123, 126, 131, 132, 139, 144, 152, 187, 189, 190, 191, 192, 193, 194, 195, 196, 201, 205, 209, 210, 211, 212, 213, 214, 216, 218, 222, 223, 226, 227, 228, 229, 230, 231, 232, 241, 249, 251, 252, 266, 267, 268, 277, 282, 290, 296, 306, 309, 312, 316, 318, 319, 332, 337, 340, 348, 352, 354, 355, 371, 372, 373, 382, 383, 389, 397, 400, 402, 404, 405, 408, 419, 427, 432, 442, 443, 445, 458, 467, 470, 477, 480, 482, 484, 485, 488, 489, 490, 494, 498, 500, 505, 506, 508, 510, 518, 519, 526, 535, 543, 545, 547, 568, 569, 579, 585, 587, 596, 599, 620, 621, 624, 627, 630, 633, 636, 637, 639, 649, 652, 654, 655, 656, 657, 658, 660, 667, 670, 677, 713, 720, 722, 730, 748, 751, 754, 760, 765, 771, 781, 792, 793, 801, 802, 803, 807, 810, 814, 816, 817, 824, 836, 838, 839, 840, 848, 851, 855, 858, 860, 865, 883, 890, 895, 900, 913, 914, 915, 917, 918, 920, 921, 922, 924, 925, 927, 928, 930, 932, 933, 934, 937, 938, 939, 940, 941, 942, 943, 948, 963, 964, 966, 984, 985, 992, 993, 994, 996, 997, 998, 999, 1000, 1011, 1012, 1018, 1019, 1020, 1021, 1023, 1025, 1030, 1031, 1032, 1033, 1034, 1039, 1042, 1045, 1047, 1048, 1050, 1051, 1054, 1055, 1056, 1058, 1060, 1063, 1073, 1074, 1078, 1080, 1081, 1082, 1084, 1086, 1088, 1089, 1092, 1093, 1097, 1098, 1106, 1110, 1111, 1129, 1135, 1139, 1140, 1145, 1148, 1156, 1183, 1187, 1195, 1197, 1204, 1213, 1221, 1223, 1227, 1228, 1230, 1232, 1243, 1246], "collect": [27, 29, 186, 189, 191, 234, 241, 250, 256, 257, 274, 276, 277, 278, 290, 299, 301, 308, 316, 318, 319, 323, 334, 337, 340, 341, 344, 345, 357, 363, 367, 368, 382, 493, 500, 631, 677, 793, 802, 814, 840, 887, 918, 991, 1073, 1084, 1088, 1094, 1102, 1136, 1143, 1147, 1176, 1181, 1183, 1186, 1187, 1202, 1215, 1216, 1221, 1223, 1251], "question": [27, 29, 32, 35, 36, 38, 65, 104, 125, 126, 138, 149, 192, 197, 205, 210, 222, 226, 228, 250, 251, 252, 262, 263, 265, 266, 268, 288, 371, 397, 404, 411, 439, 468, 474, 486, 505, 510, 511, 537, 589, 653, 713, 720, 809, 813, 840, 865, 879, 895, 914, 915, 917, 937, 943, 967, 984, 992, 994, 1005, 1009, 1025, 1044, 1045, 1079, 1087, 1088, 1091, 1096, 1186, 1188], "ask": [27, 190, 195, 197, 205, 222, 225, 226, 291, 323, 397, 404, 504, 543, 544, 566, 585, 637, 649, 660, 782, 804, 944, 999, 1001, 1106, 1188], "answer": [27, 45, 116, 159, 194, 197, 210, 222, 226, 228, 229, 252, 263, 270, 342, 352, 404, 511, 537, 589, 713, 720, 722, 793, 798, 817, 851, 895, 914, 915, 920, 921, 933, 935, 936, 939, 941, 992, 994, 1001, 1005, 1044, 1047, 1079, 1086, 1087, 1091, 1098, 1115, 1118, 1188], "cover": [27, 80, 83, 127, 183, 197, 214, 222, 226, 230, 232, 250, 251, 263, 276, 315, 317, 345, 504, 543, 831, 992, 994, 1077, 1086, 1088, 1111, 1160, 1183, 1188, 1192, 1193, 1215, 1221, 1244, 1246], "been": [27, 61, 63, 67, 124, 171, 189, 190, 191, 192, 194, 195, 196, 201, 205, 210, 211, 222, 230, 259, 265, 275, 278, 309, 312, 314, 324, 341, 394, 403, 463, 477, 478, 524, 534, 540, 547, 564, 620, 780, 819, 841, 883, 901, 907, 912, 923, 927, 931, 951, 985, 992, 994, 1005, 1014, 1024, 1035, 1060, 1063, 1064, 1082, 1089, 1127, 1223, 1241, 1243, 1244], "further": [27, 187, 189, 196, 200, 216, 265, 297, 312, 341, 354, 355, 373, 380, 405, 470, 481, 531, 601, 621, 624, 627, 630, 633, 636, 639, 752, 783, 830, 839, 840, 858, 881, 887, 970, 995, 1031, 1051, 1054, 1058, 1094, 1227, 1232, 1246], "inform": [27, 28, 29, 108, 171, 189, 192, 193, 195, 200, 209, 210, 211, 213, 218, 238, 259, 265, 275, 278, 303, 318, 319, 340, 344, 345, 481, 491, 498, 499, 507, 513, 514, 515, 535, 540, 807, 838, 846, 858, 923, 948, 981, 985, 992, 994, 996, 1028, 1085, 1113, 1188, 1196, 1201, 1216, 1223], "internet": [27, 80, 189, 191, 194, 195, 197, 218, 230, 238, 266, 279, 318, 319, 334, 340, 344, 394, 506, 985, 986, 988, 1046, 1087, 1244, 1258], "subtract": [27, 116, 259, 282, 314, 441, 564, 578, 793, 947, 1047, 1098, 1106, 1118], "known": [27, 186, 191, 202, 242, 259, 265, 275, 278, 295, 297, 315, 332, 348, 394, 440, 442, 454, 461, 488, 494, 524, 679, 858, 948, 1078, 1195, 1243, 1244], "calcul": [27, 84, 87, 192, 226, 250, 259, 282, 440, 442, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 563, 593, 598, 600, 745, 750, 783, 810, 837, 839, 840, 1030, 1047, 1089, 1091, 1163, 1195, 1200, 1221], "minimum": [27, 62, 282, 765, 825, 887, 1084, 1191, 1192, 1193, 1194], "come": [27, 43, 80, 112, 113, 124, 132, 139, 143, 159, 171, 186, 187, 189, 190, 191, 192, 195, 196, 197, 200, 201, 212, 218, 219, 222, 242, 268, 295, 297, 308, 315, 316, 341, 354, 388, 394, 418, 420, 421, 437, 464, 500, 512, 534, 564, 598, 680, 717, 720, 725, 740, 792, 795, 797, 807, 817, 840, 855, 887, 918, 920, 921, 925, 931, 944, 948, 985, 992, 993, 994, 1020, 1046, 1075, 1086, 1087, 1091, 1109, 1110, 1111, 1112, 1118, 1129, 1137, 1139, 1145, 1150, 1168, 1179, 1196, 1199, 1204, 1217, 1244], "she": [27, 249, 717, 751, 923, 925, 1131, 1139], "who": [27, 29, 45, 131, 187, 190, 194, 197, 201, 220, 222, 268, 278, 303, 334, 415, 490, 494, 504, 535, 552, 569, 601, 722, 793, 803, 860, 887, 895, 914, 915, 923, 927, 933, 944, 985, 993, 994, 1009, 1020, 1062, 1080, 1082, 1088, 1110, 1187, 1202, 1214, 1221, 1241, 1244, 1246], "repetit": [27, 303, 948, 1241], "prone": [27, 439, 647, 657, 677, 751, 795, 875, 1064, 1133, 1228, 1241], "possibl": [27, 60, 61, 63, 108, 123, 124, 126, 144, 168, 177, 180, 189, 190, 197, 200, 205, 212, 222, 226, 242, 252, 259, 265, 268, 270, 275, 276, 278, 295, 297, 306, 315, 318, 319, 324, 341, 345, 355, 372, 375, 378, 429, 440, 443, 460, 473, 480, 486, 490, 494, 495, 498, 504, 516, 518, 519, 528, 531, 542, 544, 547, 552, 556, 564, 566, 601, 634, 644, 646, 647, 652, 659, 660, 678, 695, 737, 743, 744, 751, 765, 769, 782, 793, 801, 802, 803, 807, 865, 892, 923, 932, 957, 986, 987, 992, 993, 1003, 1006, 1035, 1084, 1085, 1086, 1094, 1099, 1107, 1109, 1118, 1127, 1132, 1134, 1135, 1137, 1187, 1188, 1197, 1209], "abl": [27, 28, 30, 43, 189, 190, 192, 193, 195, 197, 205, 222, 242, 249, 331, 484, 490, 510, 543, 547, 601, 750, 760, 914, 915, 933, 939, 941, 942, 985, 993, 994, 1020, 1056, 1088, 1200, 1246], "fix": [27, 46, 62, 78, 109, 143, 152, 186, 190, 203, 205, 226, 247, 252, 262, 263, 268, 287, 290, 317, 318, 319, 340, 374, 397, 422, 445, 488, 504, 506, 530, 537, 569, 602, 614, 625, 637, 643, 662, 678, 726, 729, 736, 757, 840, 855, 860, 864, 867, 868, 888, 889, 895, 896, 902, 905, 908, 932, 984, 988, 1008, 1018, 1049, 1059, 1080, 1082, 1085, 1112, 1145, 1188], "inconsist": [27, 644, 1211], "easi": [27, 70, 131, 178, 190, 192, 193, 194, 195, 196, 197, 201, 210, 211, 214, 226, 272, 282, 355, 443, 458, 484, 500, 743, 760, 802, 824, 867, 869, 873, 885, 892, 927, 992, 993, 994, 1021, 1038, 1056, 1080, 1106, 1110, 1118, 1127, 1129, 1194, 1221, 1222, 1246], "plain": [27, 134, 192, 252, 408, 524, 620, 656, 659, 739, 792, 807, 890, 993, 1085, 1098], "happi": [27, 195, 222, 488, 652, 1193], "clear": [27, 43, 190, 192, 197, 209, 242, 252, 281, 342, 398, 399, 465, 490, 494, 526, 531, 535, 545, 551, 658, 713, 747, 765, 802, 887, 895, 924, 927, 948, 1008, 1083, 1098, 1118, 1120, 1192, 1193, 1223], "front": [27, 80, 187, 197, 222, 278, 324, 494, 695, 815, 1244], "later": [27, 82, 127, 143, 189, 190, 193, 200, 211, 222, 344, 420, 424, 430, 432, 434, 490, 494, 500, 513, 519, 534, 646, 647, 649, 661, 663, 664, 698, 754, 785, 788, 846, 848, 850, 855, 871, 873, 883, 890, 930, 992, 1014, 1030, 1031, 1033, 1044, 1048, 1099, 1107, 1117, 1120, 1122, 1201, 1207], "menu": [27, 65, 186, 230, 887, 1236], "mine": [28, 189, 190, 193, 201, 218, 222, 226, 415, 634, 887], "hi": [28, 45, 205, 210, 222, 226, 229, 247, 273, 276, 487, 596, 1099, 1188], "data": [28, 29, 49, 72, 75, 80, 91, 110, 112, 113, 136, 144, 148, 165, 190, 191, 192, 193, 197, 200, 209, 211, 213, 222, 226, 227, 231, 239, 241, 246, 256, 259, 260, 265, 266, 268, 275, 278, 282, 288, 303, 307, 308, 309, 310, 312, 315, 317, 318, 319, 324, 329, 332, 334, 337, 343, 346, 348, 352, 358, 365, 368, 399, 400, 415, 429, 443, 450, 459, 466, 472, 473, 476, 478, 479, 483, 488, 492, 493, 495, 496, 501, 502, 505, 507, 512, 513, 514, 515, 528, 529, 537, 548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 601, 607, 609, 618, 642, 643, 645, 649, 652, 665, 668, 670, 671, 682, 687, 693, 697, 706, 709, 710, 715, 724, 725, 726, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 745, 749, 752, 783, 795, 799, 807, 808, 816, 817, 825, 837, 838, 839, 840, 842, 845, 846, 877, 881, 885, 892, 900, 918, 925, 930, 932, 940, 986, 988, 992, 993, 994, 995, 1005, 1009, 1011, 1019, 1024, 1030, 1033, 1036, 1038, 1050, 1075, 1084, 1086, 1091, 1095, 1098, 1111, 1112, 1123, 1125, 1126, 1127, 1135, 1147, 1175, 1176, 1186, 1190, 1191, 1192, 1194, 1196, 1197, 1201, 1202, 1206, 1207, 1210, 1212, 1213, 1216, 1221, 1242, 1243, 1257], "convinc": [28, 443], "him": [28, 222, 226, 229, 247, 250, 273, 299, 323, 345, 792, 1035, 1188], "wai": [28, 43, 50, 61, 62, 63, 82, 83, 180, 186, 187, 189, 192, 197, 201, 202, 205, 211, 214, 218, 223, 225, 226, 228, 229, 230, 233, 234, 242, 247, 250, 262, 263, 268, 271, 272, 273, 275, 276, 280, 282, 290, 294, 295, 308, 309, 312, 316, 318, 319, 340, 341, 385, 389, 439, 443, 447, 448, 458, 464, 480, 481, 482, 490, 506, 508, 524, 534, 544, 546, 547, 551, 567, 569, 588, 598, 602, 614, 620, 628, 644, 645, 652, 657, 660, 698, 700, 727, 733, 744, 760, 781, 791, 803, 807, 822, 843, 856, 865, 879, 881, 887, 914, 915, 924, 930, 932, 935, 936, 942, 985, 993, 994, 1005, 1012, 1020, 1046, 1049, 1059, 1060, 1064, 1071, 1075, 1086, 1098, 1103, 1109, 1112, 1113, 1116, 1127, 1131, 1132, 1134, 1137, 1139, 1145, 1173, 1188, 1206, 1214, 1221, 1228, 1246], "go": [28, 40, 42, 60, 61, 62, 63, 82, 99, 137, 143, 152, 187, 190, 193, 194, 196, 197, 219, 222, 229, 233, 242, 251, 252, 268, 309, 312, 314, 344, 372, 380, 400, 504, 506, 524, 544, 585, 747, 785, 797, 803, 815, 840, 848, 851, 855, 887, 889, 918, 931, 948, 950, 984, 985, 992, 993, 1020, 1023, 1025, 1030, 1038, 1042, 1062, 1065, 1080, 1111, 1146], "relev": [28, 152, 192, 265, 290, 374, 430, 513, 524, 531, 601, 807, 887, 900, 992, 993, 1086, 1187, 1203, 1216], "part": [28, 43, 82, 94, 108, 126, 183, 190, 191, 192, 193, 195, 197, 200, 211, 214, 222, 229, 230, 231, 252, 278, 290, 309, 312, 324, 374, 376, 379, 399, 406, 420, 443, 477, 504, 547, 552, 566, 587, 601, 644, 743, 815, 838, 858, 865, 887, 907, 914, 915, 948, 983, 985, 992, 993, 994, 995, 1010, 1062, 1110, 1111, 1124, 1129, 1131, 1178, 1180, 1194, 1195, 1206, 1207, 1209, 1210, 1211, 1212, 1231], "natur": [28, 38, 77, 190, 192, 197, 222, 276, 282, 324, 415, 420, 438, 482, 543, 544, 696, 698, 743, 803, 993, 1122], "straighforward": 28, "approach": [28, 35, 38, 189, 190, 229, 333, 349, 372, 375, 378, 422, 506, 516, 517, 523, 524, 531, 533, 801, 830, 840, 927, 993, 1046, 1048, 1205], "would": [28, 57, 106, 109, 116, 119, 120, 144, 189, 191, 192, 194, 195, 201, 210, 212, 219, 222, 226, 228, 241, 252, 265, 278, 282, 317, 319, 355, 454, 473, 480, 482, 493, 494, 511, 515, 524, 526, 531, 535, 537, 542, 600, 614, 618, 652, 656, 658, 660, 707, 714, 723, 748, 754, 793, 803, 815, 836, 838, 887, 890, 914, 915, 939, 941, 944, 970, 993, 994, 1004, 1005, 1021, 1030, 1038, 1059, 1079, 1080, 1084, 1086, 1087, 1107, 1118, 1122, 1126, 1129, 1135, 1139, 1145, 1166, 1193, 1196, 1206, 1213], "copi": [28, 36, 42, 50, 72, 99, 101, 103, 104, 116, 120, 126, 130, 134, 139, 143, 148, 149, 151, 153, 156, 180, 182, 186, 190, 191, 192, 193, 196, 201, 205, 211, 217, 220, 230, 237, 240, 252, 262, 268, 274, 278, 282, 285, 288, 294, 295, 296, 297, 300, 305, 306, 310, 314, 315, 317, 324, 326, 327, 330, 342, 355, 364, 370, 371, 374, 380, 400, 430, 432, 444, 450, 459, 464, 466, 468, 472, 473, 476, 479, 483, 492, 496, 501, 502, 519, 522, 539, 569, 570, 583, 584, 585, 590, 607, 619, 620, 622, 631, 636, 638, 640, 642, 643, 644, 650, 660, 661, 663, 664, 673, 677, 687, 695, 704, 706, 709, 710, 722, 724, 731, 734, 737, 740, 745, 746, 747, 751, 752, 753, 771, 783, 785, 795, 799, 803, 804, 808, 816, 836, 837, 838, 839, 840, 862, 867, 887, 888, 903, 913, 914, 915, 916, 917, 918, 928, 948, 954, 955, 957, 958, 959, 960, 962, 968, 984, 995, 998, 1000, 1005, 1017, 1022, 1023, 1024, 1025, 1032, 1033, 1038, 1042, 1055, 1065, 1073, 1074, 1075, 1077, 1079, 1080, 1084, 1085, 1119, 1134, 1137, 1201, 1205, 1210, 1223, 1228, 1230, 1241, 1253], "dumb": [28, 45, 210, 241, 382, 858, 1033, 1035], "reason": [28, 60, 144, 177, 192, 205, 211, 222, 251, 270, 394, 477, 484, 486, 488, 494, 497, 516, 542, 661, 663, 664, 698, 743, 786, 805, 855, 871, 883, 887, 939, 941, 1038, 1046, 1047, 1060, 1075, 1080, 1118, 1127, 1129, 1193], "ar": [28, 32, 43, 45, 47, 53, 55, 56, 57, 58, 60, 61, 62, 63, 67, 70, 80, 82, 83, 91, 108, 110, 111, 112, 113, 116, 121, 122, 124, 131, 139, 144, 152, 159, 170, 171, 177, 183, 184, 187, 189, 192, 193, 194, 196, 197, 200, 201, 205, 206, 207, 210, 211, 212, 214, 218, 220, 222, 226, 227, 228, 229, 230, 231, 242, 249, 250, 251, 252, 259, 262, 263, 265, 266, 268, 269, 271, 273, 274, 275, 276, 278, 282, 286, 290, 295, 297, 299, 306, 308, 309, 312, 314, 315, 316, 317, 319, 324, 327, 332, 336, 341, 342, 345, 346, 348, 355, 371, 372, 382, 383, 384, 388, 394, 397, 399, 400, 402, 403, 419, 421, 422, 424, 427, 429, 430, 432, 434, 437, 438, 441, 442, 443, 449, 452, 455, 460, 461, 464, 468, 470, 471, 473, 474, 475, 480, 481, 482, 484, 485, 488, 491, 494, 497, 504, 505, 507, 518, 522, 526, 528, 530, 531, 534, 535, 537, 538, 540, 542, 543, 544, 554, 564, 566, 569, 588, 591, 598, 599, 600, 601, 602, 605, 609, 614, 618, 628, 634, 637, 644, 645, 646, 647, 649, 652, 653, 656, 657, 658, 660, 667, 670, 677, 678, 679, 682, 692, 698, 699, 704, 707, 714, 716, 717, 719, 720, 724, 726, 731, 732, 733, 734, 738, 744, 746, 747, 748, 751, 754, 755, 756, 760, 765, 782, 785, 786, 791, 792, 793, 795, 797, 801, 802, 803, 804, 806, 807, 809, 812, 814, 818, 838, 840, 842, 843, 846, 856, 858, 860, 865, 871, 873, 875, 879, 881, 883, 885, 887, 892, 906, 913, 914, 915, 918, 920, 921, 923, 924, 926, 927, 928, 930, 931, 933, 934, 939, 941, 948, 949, 951, 961, 966, 970, 972, 975, 985, 986, 992, 993, 994, 995, 1001, 1003, 1005, 1008, 1010, 1011, 1014, 1015, 1022, 1028, 1030, 1031, 1033, 1035, 1036, 1038, 1041, 1047, 1048, 1049, 1050, 1055, 1059, 1060, 1062, 1063, 1064, 1065, 1068, 1069, 1071, 1075, 1077, 1078, 1080, 1081, 1082, 1084, 1086, 1087, 1089, 1091, 1095, 1098, 1099, 1100, 1101, 1105, 1107, 1110, 1111, 1114, 1115, 1116, 1117, 1118, 1120, 1123, 1127, 1135, 1137, 1138, 1139, 1142, 1150, 1155, 1183, 1187, 1188, 1193, 1194, 1195, 1196, 1197, 1200, 1201, 1202, 1204, 1206, 1207, 1210, 1212, 1213, 1215, 1221, 1223, 1224, 1227, 1228, 1231, 1243, 1244, 1246], "need": [28, 43, 45, 60, 62, 106, 127, 129, 131, 134, 144, 165, 190, 191, 192, 195, 197, 201, 205, 206, 211, 222, 229, 230, 232, 242, 252, 266, 268, 290, 334, 377, 385, 397, 427, 429, 432, 452, 460, 461, 480, 486, 487, 493, 497, 499, 500, 504, 508, 515, 531, 534, 535, 537, 539, 543, 544, 566, 596, 598, 599, 600, 601, 631, 637, 643, 644, 659, 679, 699, 713, 720, 724, 726, 754, 760, 789, 803, 806, 812, 817, 820, 826, 846, 860, 862, 875, 879, 883, 887, 927, 931, 944, 949, 985, 986, 987, 988, 992, 993, 994, 1001, 1005, 1011, 1012, 1015, 1018, 1029, 1033, 1044, 1065, 1075, 1079, 1080, 1081, 1085, 1090, 1103, 1111, 1112, 1114, 1117, 1126, 1131, 1143, 1144, 1193, 1194, 1201, 1215, 1223, 1244], "mechan": [28, 32, 91, 177, 190, 191, 214, 222, 226, 237, 252, 306, 542, 720, 1035, 1056, 1095, 1188, 1216, 1241, 1246, 1256], "where": [28, 53, 91, 111, 124, 126, 144, 171, 175, 176, 186, 189, 190, 191, 192, 193, 195, 197, 200, 205, 210, 211, 218, 219, 222, 223, 226, 249, 250, 251, 252, 259, 262, 265, 266, 268, 275, 278, 282, 290, 299, 306, 324, 332, 341, 345, 348, 397, 402, 403, 438, 442, 452, 460, 461, 463, 464, 465, 478, 482, 493, 495, 505, 509, 519, 548, 555, 586, 588, 599, 614, 620, 637, 656, 717, 720, 724, 743, 801, 802, 806, 825, 881, 885, 887, 899, 930, 931, 945, 948, 951, 972, 977, 985, 992, 993, 994, 1001, 1006, 1012, 1014, 1017, 1020, 1021, 1037, 1047, 1048, 1055, 1059, 1060, 1063, 1075, 1079, 1080, 1087, 1089, 1091, 1094, 1116, 1118, 1128, 1170, 1188, 1195, 1200, 1221, 1243, 1246], "could": [28, 50, 57, 112, 113, 126, 131, 139, 143, 186, 187, 190, 191, 195, 197, 201, 211, 220, 222, 228, 242, 251, 252, 262, 272, 278, 306, 316, 318, 319, 337, 340, 352, 372, 415, 443, 487, 511, 513, 516, 543, 544, 568, 601, 652, 660, 724, 737, 743, 756, 757, 765, 780, 790, 805, 841, 858, 887, 900, 927, 945, 993, 994, 1001, 1012, 1018, 1055, 1065, 1118, 1170, 1184, 1200, 1210, 1216, 1228, 1241], "exchang": [28, 80, 219, 262, 352, 357, 359, 504, 552, 568, 598, 753, 754, 858, 932, 1050, 1145, 1153], "meta": [28, 39, 182, 197, 887, 899, 948], "retriev": [28, 201, 771, 887, 1091, 1139], "check": [28, 29, 38, 90, 99, 106, 121, 124, 131, 152, 175, 189, 190, 192, 193, 194, 195, 196, 201, 205, 210, 222, 226, 230, 234, 259, 265, 268, 275, 278, 282, 306, 319, 374, 382, 405, 408, 430, 445, 454, 456, 457, 462, 470, 477, 481, 489, 491, 513, 528, 534, 591, 592, 614, 625, 637, 644, 652, 659, 660, 677, 698, 737, 753, 754, 765, 802, 838, 840, 860, 862, 867, 887, 903, 904, 906, 984, 985, 992, 993, 1015, 1020, 1026, 1029, 1033, 1063, 1064, 1070, 1073, 1075, 1082, 1111, 1116, 1129, 1139, 1143, 1147, 1149, 1151, 1167, 1173, 1186, 1216, 1221, 1230, 1241, 1251], "everyth": [28, 42, 43, 100, 126, 139, 148, 183, 190, 196, 197, 214, 222, 226, 230, 241, 249, 267, 268, 296, 305, 306, 309, 312, 326, 327, 341, 344, 370, 371, 408, 415, 432, 452, 455, 480, 494, 500, 504, 519, 585, 643, 644, 646, 653, 657, 662, 667, 717, 760, 789, 793, 809, 816, 838, 839, 840, 856, 865, 885, 889, 892, 917, 920, 921, 922, 924, 925, 949, 970, 984, 985, 986, 992, 993, 994, 1011, 1013, 1014, 1025, 1038, 1039, 1045, 1047, 1050, 1060, 1083, 1089, 1094, 1098, 1195, 1210, 1254, 1255, 1256, 1258], "clearli": [28, 43, 129, 205, 222, 482, 513, 519, 750, 771, 798, 887, 906, 1021, 1087, 1118, 1139, 1243], "intersphinx": [28, 187], "spinx": 28, "possibli": [29, 79, 87, 133, 190, 222, 506, 514, 660, 737, 751, 760, 765, 780, 792, 802, 814, 815, 933, 970, 993, 1041, 1077, 1204], "arrang": [29, 86, 112, 113, 159, 194, 337, 601, 807, 920, 921, 981], "subgroup": [29, 35, 38, 620], "refer": [29, 92, 99, 112, 113, 126, 132, 144, 171, 174, 189, 195, 196, 210, 212, 217, 226, 229, 231, 234, 235, 246, 247, 249, 251, 252, 257, 260, 261, 263, 264, 266, 267, 268, 273, 274, 275, 278, 282, 284, 286, 287, 289, 293, 301, 302, 304, 309, 311, 312, 316, 317, 319, 322, 323, 325, 328, 329, 331, 332, 340, 341, 343, 344, 345, 348, 350, 355, 356, 357, 359, 362, 363, 365, 366, 367, 369, 371, 383, 384, 385, 386, 387, 388, 397, 461, 467, 474, 517, 519, 522, 524, 526, 538, 590, 598, 620, 642, 643, 644, 645, 660, 661, 663, 664, 665, 711, 719, 724, 728, 731, 732, 735, 736, 737, 738, 739, 740, 751, 771, 783, 784, 792, 795, 799, 803, 808, 816, 837, 838, 839, 840, 846, 847, 849, 851, 854, 857, 864, 868, 878, 887, 891, 896, 899, 902, 905, 908, 931, 961, 970, 984, 985, 992, 993, 1017, 1056, 1062, 1079, 1082, 1087, 1088, 1110, 1137, 1138, 1145, 1146, 1147, 1157, 1160, 1168, 1169, 1171, 1172, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1201, 1202, 1221, 1223, 1241, 1242, 1243, 1251], "veri": [29, 35, 37, 38, 189, 190, 192, 211, 222, 226, 229, 231, 242, 247, 250, 273, 276, 299, 323, 345, 408, 415, 436, 443, 453, 454, 474, 490, 491, 493, 499, 506, 519, 535, 544, 631, 642, 655, 670, 688, 716, 746, 747, 785, 788, 791, 802, 805, 825, 887, 892, 897, 926, 927, 986, 991, 993, 994, 1011, 1012, 1028, 1033, 1048, 1062, 1091, 1099, 1115, 1118, 1122, 1123, 1129, 1133, 1137, 1143, 1188, 1195, 1196, 1217, 1226, 1233, 1241], "unawar": [29, 205, 222, 229], "simpli": [29, 60, 65, 131, 184, 190, 193, 195, 197, 201, 205, 214, 278, 279, 318, 319, 340, 341, 443, 485, 547, 585, 652, 661, 663, 664, 713, 723, 735, 771, 792, 793, 798, 803, 817, 865, 919, 933, 992, 1014, 1018, 1062, 1079, 1087], "interest": [29, 124, 191, 192, 205, 211, 222, 230, 397, 535, 544, 1086, 1088, 1207], "catalog": [29, 1244], "chapter": [29, 42, 144, 242, 251, 259, 265, 275, 278, 279, 367, 620, 948], "subchapt": 29, "cluster_python": [29, 92, 247, 383, 384, 385, 386, 387, 388, 397, 840, 1088, 1095, 1096, 1097, 1098, 1102, 1110, 1121, 1130, 1141, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1160, 1161, 1162, 1163, 1164, 1165, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1189, 1190, 1194, 1195, 1198, 1201, 1202, 1204, 1208, 1215, 1218, 1220, 1225], "cluster_python_exercis": [29, 247, 397, 840, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1160, 1161, 1162, 1163, 1164, 1165, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186], "cluster_python_exercises_legaci": [29, 247, 397, 840, 1147, 1155, 1156, 1157, 1160, 1161, 1162, 1163, 1164, 1165, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1186], "legaci": [29, 247, 397, 547, 840, 1147, 1155, 1156, 1157, 1161, 1162, 1163, 1164, 1165, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1186, 1236], "cluster_python_exercises_herdt": [29, 840, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1186], "cluster_python_exercises_userdb": [29, 840, 1147, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186], "databas": [29, 42, 43, 55, 80, 187, 209, 210, 229, 251, 257, 262, 263, 266, 268, 269, 272, 276, 290, 318, 319, 340, 372, 388, 544, 545, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 840, 944, 975, 996, 1105, 1145, 1147, 1166, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1186, 1202, 1206, 1217, 1233], "seri": [29, 102, 191, 262, 266, 307, 308, 309, 310, 312, 314, 316, 341, 346, 352, 484, 505, 554, 840, 997, 1112, 1145, 1147, 1175, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1193, 1202, 1207, 1208, 1209, 1211, 1212, 1256], "cluster_python_exercises_sensor": [29, 840, 1147, 1174, 1175, 1176, 1186], "sensor": [29, 71, 74, 75, 76, 80, 83, 86, 99, 108, 111, 114, 115, 116, 117, 118, 121, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 138, 142, 143, 144, 147, 154, 155, 162, 217, 226, 230, 266, 287, 298, 306, 315, 318, 319, 334, 337, 340, 344, 355, 358, 397, 401, 403, 507, 528, 530, 541, 546, 548, 556, 562, 563, 566, 567, 571, 577, 580, 586, 590, 591, 592, 593, 594, 595, 596, 607, 610, 611, 612, 613, 614, 615, 616, 617, 642, 650, 715, 753, 802, 803, 804, 829, 831, 840, 887, 984, 991, 1023, 1025, 1042, 1099, 1147, 1175, 1186, 1252], "And": [29, 68, 99, 101, 104, 105, 106, 108, 126, 136, 148, 151, 156, 158, 162, 190, 191, 192, 194, 197, 220, 226, 229, 249, 252, 257, 259, 268, 270, 279, 287, 294, 295, 296, 298, 299, 301, 302, 304, 305, 308, 312, 322, 323, 325, 326, 328, 333, 342, 347, 349, 350, 353, 356, 357, 359, 362, 363, 366, 367, 369, 370, 376, 377, 379, 414, 505, 513, 517, 519, 523, 528, 533, 536, 539, 541, 548, 550, 562, 576, 590, 591, 592, 593, 594, 595, 596, 597, 600, 603, 607, 619, 620, 642, 650, 672, 680, 685, 695, 698, 706, 710, 716, 740, 752, 783, 784, 785, 794, 799, 806, 808, 816, 828, 837, 838, 839, 840, 910, 916, 917, 920, 921, 922, 926, 930, 938, 940, 942, 943, 952, 953, 954, 955, 956, 957, 958, 959, 960, 962, 968, 978, 984, 991, 998, 1000, 1007, 1013, 1015, 1020, 1023, 1025, 1029, 1039, 1042, 1045, 1047, 1050, 1062, 1064, 1066, 1067, 1068, 1069, 1070, 1071, 1074, 1086, 1088, 1093, 1096, 1097, 1098, 1102, 1103, 1127, 1144, 1145, 1146, 1147, 1160, 1171, 1181, 1182, 1183, 1186, 1198, 1202, 1208, 1215, 1241], "acquisit": [29, 131, 190, 217, 318, 319, 334, 337, 340, 341, 344, 634, 840, 1143, 1147, 1175, 1176, 1186], "cluster_python_exercises_csv": [29, 840, 1144, 1145, 1146, 1147, 1186], "csv": [29, 44, 51, 53, 54, 55, 56, 80, 108, 131, 133, 136, 226, 229, 238, 241, 247, 251, 252, 255, 257, 259, 260, 263, 264, 266, 270, 273, 276, 278, 284, 285, 288, 303, 307, 308, 310, 313, 314, 318, 319, 325, 330, 334, 337, 340, 342, 346, 352, 358, 364, 368, 505, 840, 930, 933, 948, 970, 1099, 1102, 1105, 1139, 1147, 1181, 1182, 1183, 1184, 1186, 1188, 1191, 1192, 1193, 1194, 1202], "cluster_python_swdev": [29, 840, 1141, 1186, 1189, 1190, 1194, 1202, 1204, 1215, 1218, 1220, 1225], "cluster_python_swdev_pytest": [29, 840, 1186, 1215, 1220], "pytest": [29, 266, 276, 279, 287, 290, 299, 308, 316, 318, 323, 334, 337, 340, 341, 344, 345, 363, 405, 506, 840, 1176, 1184, 1185, 1186, 1215], "cluster_python_bas": [29, 92, 247, 383, 384, 385, 386, 387, 388, 397, 840, 1088, 1095, 1096, 1097, 1098, 1102, 1110, 1121, 1130, 1141, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1160, 1161, 1162, 1163, 1164, 1165, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1198, 1201, 1202, 1208, 1215], "fundament": [29, 61, 63, 75, 92, 213, 222, 225, 227, 229, 231, 234, 236, 241, 244, 247, 250, 253, 263, 269, 273, 281, 284, 383, 384, 385, 386, 387, 388, 397, 415, 416, 504, 554, 840, 865, 1088, 1095, 1096, 1097, 1098, 1102, 1121, 1130, 1135, 1141, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1160, 1161, 1162, 1163, 1164, 1165, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1198, 1201, 1202, 1208, 1215, 1216], "cluster_python_misc": [29, 92, 247, 383, 384, 385, 386, 387, 388, 397, 840, 1088, 1110, 1141, 1145, 1146, 1147, 1157, 1160, 1168, 1171, 1172, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1189, 1190, 1194, 1195, 1201, 1202, 1204, 1208, 1215, 1218, 1225], "cluster_python_misc_ai": [29, 840, 1186, 1189, 1190, 1194, 1195, 1202], "machin": [29, 104, 112, 113, 126, 159, 182, 192, 197, 211, 226, 242, 249, 250, 259, 260, 263, 265, 275, 278, 332, 340, 344, 348, 358, 396, 400, 420, 436, 438, 446, 454, 482, 486, 500, 601, 602, 840, 887, 914, 915, 920, 921, 924, 927, 977, 984, 998, 999, 1000, 1001, 1003, 1004, 1005, 1047, 1062, 1065, 1068, 1069, 1073, 1087, 1186, 1190, 1194, 1202, 1243], "artifici": [29, 226, 251, 309, 340, 344, 482, 737, 840, 1005, 1079, 1186, 1190, 1194, 1195, 1202], "intellig": [29, 190, 226, 266, 302, 309, 312, 322, 328, 340, 344, 362, 363, 403, 840, 858, 1084, 1088, 1186, 1190, 1194, 1195, 1202], "cluster_python_misc_panda": [29, 840, 1186, 1202, 1208], "panda": [29, 211, 222, 241, 247, 260, 273, 287, 290, 308, 311, 323, 340, 342, 344, 347, 351, 353, 364, 415, 506, 840, 1111, 1186, 1188, 1191, 1194, 1202], "cluster_python_draft": [29, 840, 1141, 1186], "cluster_python_advanc": [29, 840, 1088, 1095, 1096, 1097, 1098, 1102, 1141, 1144, 1145, 1146, 1147, 1160, 1171, 1174, 1175, 1176, 1181, 1182, 1183, 1184, 1185, 1186, 1189, 1190, 1194, 1198, 1202, 1204, 1215, 1218, 1220, 1225], "cluster_python_advanced_multithread": [29, 840, 1088, 1095, 1096, 1097, 1098, 1186], "cluster_python_advanced_oo": [29, 840, 1088, 1095, 1096, 1097, 1098, 1102, 1147, 1174, 1175, 1176, 1181, 1183, 1186, 1215], "object": [29, 62, 72, 75, 76, 80, 92, 99, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 120, 124, 125, 126, 127, 131, 132, 135, 144, 150, 155, 159, 163, 183, 205, 207, 210, 212, 217, 222, 229, 238, 240, 241, 246, 249, 250, 252, 255, 257, 259, 262, 263, 266, 267, 268, 269, 270, 274, 275, 280, 281, 283, 285, 288, 292, 300, 304, 306, 307, 309, 310, 312, 314, 317, 320, 324, 330, 336, 342, 346, 352, 355, 357, 358, 364, 368, 374, 384, 386, 387, 390, 392, 397, 398, 399, 400, 434, 460, 487, 505, 531, 534, 537, 538, 539, 540, 544, 546, 548, 553, 562, 564, 570, 588, 590, 591, 592, 593, 594, 595, 596, 597, 598, 600, 601, 607, 609, 614, 620, 634, 642, 643, 645, 647, 650, 651, 653, 655, 656, 661, 663, 664, 665, 667, 668, 671, 687, 693, 697, 698, 699, 706, 709, 710, 713, 714, 716, 719, 720, 724, 725, 726, 728, 729, 730, 731, 733, 734, 735, 736, 737, 738, 739, 740, 743, 751, 752, 754, 755, 765, 771, 783, 785, 787, 788, 792, 793, 798, 799, 801, 803, 804, 807, 808, 814, 816, 817, 824, 825, 830, 834, 835, 837, 838, 839, 840, 931, 984, 1062, 1063, 1064, 1067, 1068, 1069, 1070, 1071, 1073, 1079, 1082, 1084, 1085, 1087, 1088, 1091, 1095, 1096, 1097, 1098, 1099, 1101, 1103, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1118, 1127, 1129, 1135, 1136, 1147, 1174, 1175, 1176, 1181, 1183, 1186, 1193, 1207, 1209, 1211, 1212, 1213, 1215, 1221, 1241, 1242, 1244, 1246], "orient": [29, 72, 75, 76, 80, 99, 126, 144, 155, 210, 229, 241, 250, 252, 257, 263, 266, 269, 280, 281, 290, 292, 304, 309, 312, 315, 317, 355, 357, 384, 386, 387, 397, 398, 399, 432, 505, 548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 598, 600, 607, 609, 642, 643, 650, 665, 668, 671, 687, 693, 697, 706, 709, 710, 724, 725, 726, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 752, 783, 799, 807, 808, 816, 825, 837, 839, 840, 1088, 1095, 1096, 1097, 1098, 1112, 1147, 1174, 1175, 1176, 1181, 1183, 1186, 1215, 1221, 1242, 1244], "cluster_python_db": [29, 840, 1144, 1146, 1147, 1186, 1198], "python_python_5550_xml_etre": [29, 840, 1186], "xml": [29, 131, 186, 187, 337, 358, 840, 1186, 1202], "elementtre": [29, 290, 840, 1186, 1202], "etre": [29, 290, 840, 1186, 1202], "python_basics_python_0450_dictionari": [29, 92, 840, 1088, 1110, 1147, 1160, 1171, 1186], "gt": [29, 32, 35, 36, 53, 55, 56, 74, 75, 76, 89, 92, 127, 128, 129, 130, 132, 134, 135, 136, 137, 143, 179, 209, 212, 223, 228, 233, 240, 246, 247, 249, 254, 259, 262, 265, 270, 272, 275, 278, 282, 285, 288, 291, 300, 303, 307, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 383, 384, 385, 386, 387, 388, 391, 392, 397, 435, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 517, 523, 533, 536, 548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 607, 609, 642, 650, 665, 668, 671, 687, 693, 697, 706, 709, 710, 715, 724, 725, 726, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 745, 752, 759, 783, 784, 794, 799, 808, 816, 825, 837, 839, 840, 844, 847, 849, 852, 854, 857, 859, 863, 864, 866, 868, 870, 872, 878, 880, 882, 884, 891, 893, 896, 898, 902, 905, 908, 910, 914, 915, 916, 917, 920, 921, 922, 929, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 968, 978, 984, 991, 996, 997, 998, 999, 1000, 1007, 1013, 1015, 1023, 1025, 1027, 1039, 1042, 1045, 1047, 1064, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1088, 1095, 1096, 1097, 1098, 1102, 1110, 1121, 1130, 1141, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1160, 1161, 1162, 1163, 1164, 1165, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1189, 1190, 1194, 1198, 1201, 1202, 1204, 1208, 1215, 1218, 1220, 1225, 1226], "python_basics_python_0220_for": [29, 92, 247, 383, 384, 385, 386, 387, 388, 397, 840, 1088, 1110, 1144, 1145, 1146, 1147, 1157, 1160, 1161, 1163, 1167, 1168, 1169, 1170, 1171, 1172, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1198, 1202], "loop": [29, 32, 34, 38, 42, 61, 63, 65, 91, 92, 99, 112, 113, 126, 131, 135, 144, 159, 178, 183, 190, 205, 214, 226, 229, 231, 234, 235, 236, 239, 247, 249, 250, 251, 253, 257, 260, 263, 268, 269, 271, 273, 274, 279, 281, 283, 284, 286, 287, 289, 299, 302, 309, 312, 319, 322, 323, 328, 329, 337, 341, 345, 350, 351, 353, 355, 356, 357, 362, 363, 366, 367, 369, 372, 374, 380, 383, 384, 385, 386, 387, 388, 389, 397, 402, 420, 423, 426, 435, 438, 450, 457, 458, 459, 466, 472, 476, 479, 480, 483, 484, 492, 496, 501, 502, 517, 523, 524, 533, 589, 590, 631, 642, 673, 678, 736, 743, 745, 771, 783, 806, 817, 837, 839, 840, 875, 885, 890, 904, 918, 920, 921, 925, 932, 988, 1010, 1011, 1012, 1020, 1046, 1050, 1056, 1059, 1060, 1088, 1089, 1092, 1093, 1098, 1110, 1144, 1145, 1146, 1147, 1149, 1151, 1157, 1159, 1160, 1161, 1163, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1188, 1198, 1202, 1204, 1240, 1241, 1242, 1251], "python_advanced_modul": [29, 840, 1088, 1141, 1144, 1145, 1146, 1147, 1181, 1182, 1183, 1184, 1185, 1186, 1189, 1190, 1194, 1198, 1202, 1204, 1215, 1218, 1220, 1225], "python_exercises_legacy_python_0350_exercis": [29, 247, 840, 1147, 1157, 1160, 1168, 1169, 1171, 1172, 1186], "right": [29, 34, 35, 36, 38, 42, 62, 82, 86, 131, 171, 183, 189, 190, 192, 195, 210, 230, 241, 242, 247, 252, 257, 270, 272, 278, 282, 290, 303, 316, 324, 367, 374, 383, 389, 421, 441, 442, 443, 449, 460, 490, 507, 514, 532, 591, 599, 646, 661, 663, 664, 743, 755, 771, 797, 802, 807, 820, 840, 848, 867, 871, 887, 906, 930, 931, 933, 948, 1003, 1033, 1084, 1106, 1117, 1123, 1147, 1157, 1160, 1168, 1171, 1172, 1186], "justifi": [29, 210, 222, 247, 257, 278, 324, 421, 809, 840, 1111, 1147, 1157, 1160, 1168, 1171, 1172, 1186], "python_exercises_legacy_join_funct": [29, 247, 840, 1147, 1157, 1160, 1161, 1168, 1169, 1171, 1172, 1186], "join": [29, 35, 62, 201, 229, 247, 249, 250, 255, 257, 259, 262, 263, 265, 270, 274, 280, 288, 303, 310, 320, 324, 330, 346, 353, 358, 364, 369, 374, 382, 391, 506, 519, 619, 743, 804, 810, 815, 817, 840, 1031, 1036, 1059, 1147, 1157, 1160, 1168, 1169, 1171, 1172, 1186, 1221], "python_basics_python_0320_strings_method": [29, 92, 247, 383, 384, 385, 386, 387, 388, 397, 840, 1088, 1110, 1145, 1146, 1147, 1157, 1160, 1168, 1169, 1171, 1172, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1201, 1202], "method": [29, 42, 43, 54, 55, 57, 62, 71, 72, 75, 92, 99, 108, 109, 112, 113, 123, 131, 137, 139, 143, 144, 195, 226, 227, 228, 229, 231, 234, 247, 248, 250, 252, 257, 260, 261, 263, 268, 269, 271, 273, 274, 277, 279, 280, 281, 282, 284, 287, 289, 299, 302, 304, 308, 309, 312, 314, 316, 317, 318, 319, 322, 323, 325, 328, 329, 331, 334, 337, 340, 341, 343, 344, 345, 347, 350, 351, 353, 355, 356, 357, 359, 362, 363, 365, 366, 367, 369, 383, 384, 385, 386, 387, 388, 397, 401, 402, 478, 504, 520, 544, 546, 548, 552, 562, 569, 570, 588, 590, 595, 600, 601, 602, 614, 620, 633, 635, 642, 643, 644, 647, 656, 670, 703, 713, 714, 715, 716, 719, 724, 725, 728, 731, 732, 735, 736, 737, 738, 739, 740, 743, 752, 765, 782, 783, 786, 790, 799, 807, 808, 816, 817, 824, 825, 831, 834, 835, 837, 838, 839, 840, 848, 850, 855, 856, 865, 867, 877, 889, 900, 1033, 1084, 1085, 1088, 1091, 1095, 1099, 1100, 1101, 1102, 1103, 1107, 1110, 1115, 1124, 1127, 1145, 1146, 1147, 1157, 1160, 1168, 1169, 1171, 1172, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1188, 1193, 1197, 1201, 1202, 1207, 1210, 1212, 1244, 1251, 1258], "python_basics_python_0310_strings_format": [29, 92, 247, 840, 1110, 1147, 1157, 1160, 1168, 1169, 1171, 1172, 1186], "python_basics_python_0300_str": [29, 92, 247, 383, 384, 385, 386, 387, 388, 397, 840, 1088, 1110, 1145, 1146, 1147, 1157, 1160, 1168, 1169, 1171, 1172, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1201, 1202], "python_exercises_legacy_function_prim": [29, 247, 840, 1147, 1157, 1160, 1161, 1167, 1168, 1169, 1170, 1171, 1172, 1186], "prime": [29, 38, 209, 210, 229, 233, 234, 236, 241, 247, 253, 257, 269, 273, 276, 281, 287, 302, 309, 322, 323, 328, 329, 350, 351, 356, 357, 362, 363, 366, 367, 369, 482, 840, 1147, 1157, 1160, 1161, 1163, 1168, 1169, 1170, 1171, 1172, 1186, 1251], "python_exercises_legacy_max_numbers_funct": [29, 247, 840, 1147, 1157, 1160, 1161, 1163, 1167, 1168, 1169, 1170, 1171, 1172, 1186], "determin": [29, 104, 126, 149, 183, 189, 213, 218, 220, 228, 229, 234, 236, 241, 247, 253, 257, 259, 260, 263, 269, 273, 279, 281, 284, 286, 287, 302, 309, 322, 323, 328, 329, 350, 351, 356, 357, 362, 363, 366, 367, 371, 374, 720, 755, 756, 793, 840, 895, 917, 937, 938, 939, 940, 941, 942, 943, 980, 984, 993, 1011, 1048, 1049, 1062, 1080, 1147, 1149, 1150, 1151, 1154, 1157, 1160, 1161, 1167, 1168, 1169, 1170, 1171, 1172, 1186, 1216, 1251], "python_basics_python_0270_funct": [29, 92, 247, 840, 1088, 1110, 1130, 1144, 1145, 1146, 1147, 1157, 1160, 1161, 1163, 1167, 1168, 1169, 1170, 1171, 1172, 1178, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1198], "python_basics_python_0139_commandline_argv": [29, 92, 247, 397, 840, 1110, 1141, 1144, 1145, 1146, 1147, 1149, 1150, 1151, 1152, 1154, 1155, 1157, 1160, 1161, 1162, 1163, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186], "argument": [29, 57, 62, 92, 99, 126, 151, 183, 189, 192, 195, 209, 210, 223, 226, 238, 247, 250, 257, 259, 263, 265, 266, 268, 269, 271, 273, 275, 276, 279, 280, 281, 282, 284, 287, 302, 303, 306, 309, 312, 316, 318, 319, 322, 323, 324, 328, 329, 337, 340, 341, 344, 345, 346, 350, 351, 356, 357, 362, 363, 366, 367, 397, 419, 420, 465, 472, 476, 479, 483, 492, 496, 501, 502, 506, 522, 588, 620, 644, 654, 655, 745, 760, 780, 783, 793, 805, 837, 838, 839, 840, 845, 846, 948, 970, 984, 1018, 1020, 1022, 1025, 1042, 1062, 1081, 1084, 1088, 1110, 1112, 1113, 1130, 1138, 1141, 1144, 1145, 1146, 1147, 1149, 1150, 1151, 1152, 1154, 1155, 1157, 1159, 1160, 1161, 1162, 1163, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1199, 1221, 1223], "sy": [29, 32, 92, 127, 139, 143, 152, 191, 208, 210, 212, 213, 238, 240, 241, 247, 250, 256, 259, 263, 265, 270, 273, 275, 278, 279, 281, 282, 284, 285, 287, 300, 302, 303, 308, 309, 312, 318, 322, 323, 324, 328, 329, 340, 344, 346, 350, 351, 356, 357, 358, 362, 363, 366, 367, 368, 382, 383, 390, 397, 493, 506, 585, 601, 602, 840, 842, 846, 867, 945, 974, 985, 992, 993, 994, 1010, 1011, 1012, 1014, 1018, 1019, 1020, 1021, 1022, 1024, 1026, 1028, 1029, 1043, 1050, 1052, 1055, 1059, 1077, 1087, 1094, 1109, 1110, 1129, 1137, 1139, 1141, 1144, 1145, 1146, 1147, 1149, 1150, 1151, 1152, 1154, 1155, 1157, 1159, 1160, 1161, 1162, 1163, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1213, 1221, 1236], "argv": [29, 42, 50, 92, 192, 209, 210, 213, 223, 241, 247, 250, 251, 256, 259, 263, 265, 268, 269, 273, 275, 278, 279, 281, 284, 287, 302, 308, 309, 312, 318, 322, 323, 328, 329, 340, 344, 350, 351, 356, 357, 358, 362, 363, 366, 367, 382, 390, 397, 471, 506, 513, 528, 534, 549, 588, 840, 992, 1018, 1019, 1020, 1021, 1022, 1026, 1029, 1043, 1050, 1059, 1081, 1087, 1094, 1110, 1139, 1141, 1144, 1145, 1146, 1147, 1149, 1150, 1151, 1152, 1154, 1155, 1157, 1159, 1160, 1161, 1162, 1163, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1228, 1233], "python_exercises_legacy_cmdline_digit": [29, 247, 397, 840, 1147, 1155, 1157, 1160, 1161, 1163, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1186], "digit": [29, 183, 209, 210, 229, 236, 241, 247, 257, 260, 269, 273, 278, 279, 281, 282, 284, 286, 287, 302, 309, 322, 323, 324, 328, 329, 341, 350, 351, 352, 356, 357, 362, 363, 366, 367, 368, 382, 402, 428, 437, 840, 1147, 1157, 1160, 1161, 1163, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1186], "word": [29, 43, 183, 190, 210, 218, 222, 226, 229, 236, 241, 247, 251, 257, 260, 268, 269, 273, 276, 278, 279, 281, 284, 286, 287, 294, 295, 297, 302, 309, 316, 322, 323, 324, 328, 329, 341, 350, 351, 354, 355, 356, 357, 362, 363, 366, 367, 373, 374, 380, 397, 402, 427, 480, 542, 547, 620, 720, 799, 808, 816, 839, 840, 928, 930, 977, 1049, 1147, 1157, 1160, 1161, 1163, 1167, 1168, 1169, 1170, 1171, 1173, 1186], "python_basics_python_0150_datatypes_overview_compound": [29, 92, 247, 383, 384, 385, 386, 387, 388, 397, 840, 1088, 1095, 1096, 1097, 1098, 1102, 1110, 1144, 1145, 1146, 1147, 1155, 1156, 1157, 1160, 1161, 1162, 1163, 1164, 1165, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1198, 1201, 1202, 1208, 1215], "python_basics_python_0150_datatypes_overview": [29, 92, 247, 383, 384, 385, 386, 387, 388, 397, 840, 1088, 1095, 1096, 1097, 1098, 1102, 1110, 1121, 1130, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1160, 1161, 1162, 1163, 1164, 1165, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1198, 1201, 1202, 1208, 1215], "python_basics_python_0120_helloworld": [29, 92, 247, 383, 384, 385, 386, 387, 388, 397, 840, 1088, 1095, 1096, 1097, 1098, 1102, 1110, 1121, 1130, 1141, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1160, 1161, 1162, 1163, 1164, 1165, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1198, 1201, 1202, 1208, 1215], "world": [29, 80, 92, 133, 183, 186, 187, 190, 195, 201, 220, 229, 233, 234, 236, 240, 247, 251, 253, 255, 257, 259, 260, 263, 265, 268, 269, 270, 272, 273, 279, 280, 281, 282, 284, 285, 287, 290, 302, 303, 309, 312, 322, 323, 328, 329, 342, 350, 351, 352, 356, 357, 362, 363, 366, 367, 368, 372, 383, 384, 385, 386, 387, 388, 392, 397, 430, 435, 439, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 518, 519, 532, 534, 537, 563, 568, 570, 742, 745, 783, 809, 817, 837, 839, 840, 844, 847, 849, 852, 854, 857, 864, 868, 872, 878, 884, 889, 891, 896, 899, 902, 905, 908, 926, 939, 951, 984, 1022, 1033, 1048, 1049, 1062, 1065, 1075, 1077, 1079, 1080, 1081, 1088, 1095, 1096, 1097, 1098, 1102, 1110, 1114, 1115, 1121, 1124, 1126, 1130, 1131, 1141, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1160, 1161, 1162, 1163, 1164, 1165, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1188, 1193, 1198, 1201, 1202, 1208, 1215, 1237, 1241, 1251], "python_exercises_legacy_dict_keyerror": [29, 840, 1147, 1156, 1160, 1186], "python_exercises_legacy_mixed_list_interact": [29, 247, 840, 1147, 1157, 1160, 1161, 1162, 1163, 1164, 1165, 1167, 1168, 1169, 1170, 1171, 1172, 1186], "interact": [29, 62, 87, 137, 139, 143, 148, 186, 197, 229, 230, 236, 247, 257, 259, 260, 263, 265, 273, 275, 278, 283, 302, 303, 309, 322, 323, 328, 329, 331, 350, 351, 356, 357, 362, 363, 366, 367, 376, 379, 517, 523, 533, 840, 948, 996, 1001, 1004, 1014, 1077, 1112, 1147, 1156, 1157, 1160, 1161, 1162, 1163, 1164, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1186, 1193, 1201], "interpret": [29, 62, 186, 192, 210, 211, 222, 226, 229, 236, 247, 250, 257, 259, 260, 263, 265, 273, 275, 278, 282, 298, 299, 302, 308, 309, 322, 323, 324, 328, 329, 331, 340, 341, 345, 350, 351, 356, 357, 362, 363, 366, 367, 397, 482, 519, 539, 541, 548, 552, 562, 576, 590, 642, 840, 887, 972, 994, 1015, 1062, 1063, 1065, 1111, 1112, 1113, 1114, 1145, 1147, 1156, 1157, 1160, 1161, 1162, 1163, 1164, 1167, 1168, 1169, 1170, 1171, 1172, 1186, 1188, 1201, 1223, 1244], "python_basics_python_0160_boolean": [29, 92, 247, 383, 384, 385, 386, 387, 388, 397, 840, 1088, 1110, 1121, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1157, 1160, 1161, 1162, 1163, 1164, 1165, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1198, 1202], "boolean": [29, 58, 86, 92, 210, 211, 227, 229, 231, 234, 235, 236, 247, 253, 257, 260, 261, 263, 264, 265, 269, 271, 273, 274, 279, 280, 281, 283, 284, 286, 287, 302, 309, 312, 322, 323, 328, 329, 350, 351, 353, 356, 357, 359, 362, 363, 366, 367, 368, 383, 384, 385, 386, 387, 388, 397, 402, 426, 449, 465, 519, 840, 1035, 1088, 1110, 1118, 1121, 1122, 1133, 1144, 1145, 1146, 1147, 1149, 1150, 1151, 1152, 1153, 1154, 1157, 1160, 1161, 1162, 1163, 1164, 1165, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1198, 1200, 1202, 1251], "python_basics_python_0140_vari": [29, 92, 247, 383, 384, 385, 386, 387, 388, 397, 840, 1088, 1095, 1096, 1097, 1098, 1102, 1110, 1121, 1130, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1160, 1161, 1162, 1163, 1164, 1165, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1198, 1201, 1202, 1208, 1215], "python_exercises_legacy_wc": [29, 247, 840, 1147, 1157, 1160, 1168, 1171, 1172, 1186], "line": [29, 34, 35, 36, 38, 62, 65, 124, 132, 162, 171, 186, 187, 190, 192, 195, 205, 209, 212, 213, 226, 230, 240, 242, 246, 247, 249, 250, 255, 256, 259, 260, 262, 263, 265, 266, 268, 269, 270, 273, 275, 276, 278, 279, 281, 282, 285, 287, 288, 290, 291, 302, 303, 308, 309, 310, 312, 316, 320, 322, 323, 324, 328, 329, 330, 342, 346, 350, 352, 356, 357, 358, 362, 363, 364, 366, 367, 368, 388, 397, 420, 426, 427, 435, 439, 442, 444, 450, 459, 461, 466, 472, 476, 479, 483, 488, 492, 495, 496, 498, 501, 502, 506, 531, 535, 537, 569, 570, 720, 723, 725, 727, 740, 745, 783, 837, 839, 840, 856, 860, 867, 869, 887, 914, 915, 918, 928, 930, 932, 954, 975, 977, 979, 980, 981, 985, 989, 992, 993, 994, 1036, 1046, 1078, 1084, 1085, 1086, 1089, 1090, 1091, 1099, 1100, 1106, 1107, 1114, 1128, 1129, 1131, 1133, 1135, 1137, 1138, 1139, 1145, 1147, 1160, 1166, 1171, 1185, 1186, 1188, 1191, 1196, 1201, 1209, 1210, 1222], "charact": [29, 192, 208, 233, 238, 242, 247, 251, 255, 262, 268, 278, 285, 288, 306, 309, 324, 330, 346, 420, 421, 427, 435, 438, 444, 445, 450, 459, 466, 472, 476, 479, 482, 483, 487, 489, 492, 496, 501, 502, 707, 745, 783, 837, 838, 839, 840, 849, 854, 857, 864, 868, 878, 881, 889, 891, 896, 902, 903, 905, 908, 928, 930, 948, 970, 984, 992, 1047, 1098, 1117, 1131, 1132, 1133, 1137, 1139, 1147, 1150, 1157, 1160, 1168, 1171, 1186, 1201, 1228], "python_basics_python_0500_fil": [29, 92, 247, 383, 384, 385, 386, 387, 388, 397, 840, 1088, 1110, 1145, 1146, 1147, 1157, 1160, 1168, 1171, 1172, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1202], "python_exercises_legacy_passwd": [29, 840, 1147, 1160, 1171, 1186], "pars": [29, 162, 209, 246, 247, 257, 258, 260, 263, 269, 273, 278, 279, 281, 287, 290, 318, 323, 340, 344, 383, 388, 401, 526, 725, 740, 840, 1141, 1147, 1160, 1171, 1186, 1188, 1213], "passwd": [29, 102, 103, 126, 149, 162, 230, 240, 249, 262, 263, 265, 269, 270, 273, 278, 279, 281, 285, 287, 288, 296, 303, 305, 306, 310, 320, 324, 326, 327, 346, 352, 358, 364, 370, 371, 519, 520, 524, 725, 740, 838, 840, 917, 919, 923, 925, 928, 930, 932, 943, 962, 965, 967, 968, 970, 973, 975, 979, 981, 984, 985, 995, 996, 1004, 1005, 1009, 1010, 1015, 1021, 1041, 1055, 1084, 1086, 1133, 1137, 1147, 1160, 1171, 1186, 1216], "python_exercises_legacy_distil": [29, 247, 840, 1147, 1157, 1160, 1171, 1186], "elimin": [29, 58, 183, 247, 269, 276, 278, 279, 281, 287, 302, 309, 322, 328, 329, 350, 356, 357, 362, 363, 366, 367, 372, 569, 614, 743, 806, 825, 826, 840, 981, 1089, 1147, 1160, 1171, 1186], "empti": [29, 38, 42, 48, 50, 190, 193, 200, 208, 228, 230, 247, 259, 262, 269, 270, 276, 278, 279, 281, 282, 285, 287, 288, 291, 302, 303, 308, 309, 310, 320, 322, 324, 328, 329, 346, 350, 352, 356, 357, 358, 362, 363, 364, 366, 367, 392, 426, 478, 522, 524, 637, 646, 647, 651, 661, 663, 679, 680, 698, 716, 737, 743, 792, 802, 803, 815, 838, 840, 850, 887, 914, 915, 928, 932, 942, 979, 988, 1001, 1035, 1055, 1094, 1135, 1147, 1160, 1161, 1165, 1171, 1186], "comment": [29, 34, 35, 36, 38, 44, 121, 122, 183, 192, 227, 247, 248, 250, 263, 269, 271, 275, 276, 279, 281, 286, 287, 302, 309, 311, 322, 328, 329, 350, 356, 357, 362, 363, 366, 367, 374, 397, 420, 465, 484, 537, 569, 570, 598, 726, 840, 993, 1132, 1147, 1160, 1171, 1186, 1201], "python_basics_python_0210_indexing_sl": [29, 92, 840, 1110, 1147, 1160, 1171, 1186, 1202, 1208], "python_exercises_legacy_uniq_gener": [29, 840, 1147, 1160, 1171, 1186], "uniq": [29, 209, 210, 227, 229, 241, 247, 257, 260, 263, 269, 273, 279, 281, 284, 302, 309, 322, 323, 328, 329, 345, 350, 351, 356, 357, 362, 363, 366, 367, 618, 840, 981, 1147, 1157, 1160, 1161, 1168, 1169, 1172, 1186], "python_exercises_legacy_uniq_funct": [29, 247, 840, 1147, 1157, 1160, 1161, 1168, 1169, 1170, 1171, 1172, 1186], "python_advanced_python_1010_generators_yield": [29, 840, 1088, 1144, 1145, 1146, 1147, 1160, 1171, 1186, 1198], "python_exercises_legacy_python_1011_generators_yield": [29, 840, 1147, 1160, 1186], "fibonacci": [29, 210, 213, 229, 250, 263, 302, 316, 318, 319, 323, 329, 340, 341, 344, 750, 772, 840, 1091, 1092, 1093, 1147, 1160, 1186], "python_exercises_legacy_for_prim": [29, 247, 840, 1147, 1157, 1160, 1161, 1163, 1167, 1168, 1169, 1170, 1171, 1172, 1186], "python_exercises_legacy_while_prim": [29, 247, 840, 1147, 1157, 1160, 1161, 1163, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1186], "python_basics_python_0225_rang": [29, 92, 247, 840, 1088, 1110, 1144, 1145, 1146, 1147, 1157, 1160, 1161, 1163, 1167, 1168, 1169, 1170, 1171, 1172, 1186, 1198], "python_exercises_legacy_max_numb": [29, 247, 840, 1147, 1157, 1160, 1161, 1162, 1163, 1167, 1168, 1169, 1170, 1171, 1172, 1186], "python_exercises_legacy_revert": [29, 247, 840, 1147, 1157, 1160, 1168, 1171, 1186], "revert": [29, 65, 143, 190, 247, 840, 865, 883, 1046, 1106, 1147, 1157, 1160, 1171, 1186], "python_exercises_legacy_mixed_list_execut": [29, 247, 840, 1147, 1157, 1160, 1161, 1162, 1163, 1164, 1167, 1168, 1169, 1170, 1171, 1172, 1186], "execut": [29, 44, 62, 110, 112, 113, 126, 159, 171, 183, 186, 190, 192, 200, 201, 205, 210, 217, 222, 229, 236, 242, 247, 257, 259, 260, 263, 265, 273, 275, 278, 302, 309, 322, 323, 328, 329, 332, 333, 348, 349, 350, 351, 356, 357, 362, 363, 366, 367, 374, 375, 376, 377, 378, 379, 380, 382, 383, 390, 397, 419, 420, 454, 456, 460, 482, 487, 491, 500, 511, 517, 523, 533, 536, 537, 544, 563, 566, 573, 580, 585, 599, 628, 652, 667, 771, 838, 840, 885, 887, 913, 914, 915, 923, 925, 930, 935, 936, 944, 948, 995, 1004, 1033, 1046, 1060, 1062, 1063, 1064, 1065, 1068, 1069, 1073, 1075, 1079, 1081, 1087, 1091, 1095, 1098, 1111, 1121, 1122, 1125, 1145, 1147, 1157, 1160, 1161, 1162, 1163, 1167, 1168, 1169, 1170, 1171, 1172, 1186, 1197, 1200, 1229, 1231, 1243, 1254, 1255], "python_basics_python_0170_if": [29, 92, 247, 383, 384, 385, 386, 387, 388, 397, 840, 1088, 1110, 1121, 1144, 1145, 1146, 1147, 1149, 1150, 1151, 1152, 1154, 1157, 1160, 1161, 1162, 1163, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1198, 1202], "statement": [29, 54, 92, 112, 113, 116, 120, 159, 210, 222, 226, 227, 228, 229, 234, 236, 241, 247, 250, 251, 253, 257, 260, 263, 269, 273, 279, 281, 284, 287, 293, 299, 302, 309, 312, 316, 318, 319, 322, 323, 328, 329, 334, 337, 340, 341, 344, 345, 350, 351, 356, 357, 362, 363, 366, 367, 383, 384, 385, 386, 387, 388, 397, 402, 419, 422, 426, 439, 452, 454, 455, 458, 459, 464, 466, 472, 476, 479, 483, 486, 492, 496, 501, 502, 522, 698, 724, 726, 744, 745, 783, 837, 839, 840, 848, 920, 921, 961, 1047, 1068, 1069, 1083, 1086, 1088, 1089, 1094, 1098, 1100, 1110, 1117, 1120, 1122, 1129, 1141, 1144, 1145, 1146, 1147, 1149, 1150, 1151, 1152, 1154, 1157, 1160, 1161, 1162, 1163, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1189, 1190, 1194, 1198, 1202, 1204, 1215, 1218, 1221, 1225, 1251], "python_basics_python_0193_whil": [29, 92, 247, 383, 384, 385, 386, 387, 388, 397, 840, 1088, 1110, 1144, 1145, 1146, 1147, 1149, 1151, 1157, 1160, 1161, 1163, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1198, 1202], "python_exercises_herdt_max_numb": [29, 840, 1147, 1149, 1150, 1151, 1152, 1154, 1186], "python_exercises_herdt_swap": [29, 840, 1147, 1149, 1150, 1151, 1152, 1153, 1154, 1186], "python_exercises_herdt_while_even_numb": [29, 840, 1147, 1149, 1151, 1186], "python_exercises_herdt_username_password": [29, 840, 1147, 1149, 1151, 1154, 1186], "usernam": [29, 205, 234, 242, 263, 394, 840, 914, 923, 932, 995, 1005, 1133, 1147, 1149, 1151, 1166, 1186, 1251], "password": [29, 197, 200, 205, 230, 234, 242, 263, 394, 397, 402, 840, 923, 945, 985, 995, 996, 1001, 1147, 1149, 1151, 1166, 1186, 1199, 1251], "python_exercises_herdt_boolean": [29, 840, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1186], "express": [29, 61, 63, 209, 225, 226, 228, 229, 239, 249, 258, 263, 264, 266, 270, 289, 290, 292, 293, 294, 295, 298, 299, 304, 323, 324, 329, 342, 353, 359, 420, 422, 426, 430, 439, 440, 442, 443, 444, 447, 449, 452, 454, 455, 457, 459, 465, 466, 472, 476, 479, 483, 492, 496, 501, 502, 506, 519, 520, 522, 524, 541, 550, 562, 563, 566, 570, 576, 577, 590, 598, 642, 644, 745, 756, 760, 765, 783, 837, 839, 840, 948, 981, 1062, 1083, 1093, 1099, 1120, 1122, 1129, 1131, 1147, 1149, 1150, 1151, 1152, 1153, 1154, 1184, 1185, 1186, 1188, 1209, 1240, 1241, 1242], "python_exercises_herdt_greet": [29, 840, 1147, 1149, 1150, 1151, 1154, 1186], "python_exercises_userdb_csvread": [29, 840, 1147, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186], "reader": [29, 187, 262, 276, 279, 284, 287, 299, 302, 322, 323, 328, 329, 350, 351, 357, 358, 362, 363, 366, 367, 487, 506, 526, 549, 840, 932, 1099, 1102, 1129, 1147, 1177, 1178, 1181, 1182, 1183, 1184, 1185, 1186], "python_misc_csv": [29, 840, 1145, 1146, 1147, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1202], "python_exercises_userdb_csvreader_funct": [29, 840, 1147, 1180, 1181, 1186], "refactor": [29, 43, 55, 139, 187, 276, 279, 284, 287, 299, 302, 318, 322, 323, 328, 329, 350, 351, 357, 362, 363, 366, 367, 414, 465, 505, 542, 790, 840, 848, 854, 864, 868, 878, 889, 891, 896, 902, 905, 908, 984, 1102, 1147, 1181, 1182, 1183, 1184, 1186], "Into": [29, 99, 268, 273, 276, 279, 284, 287, 299, 302, 308, 322, 323, 328, 329, 350, 351, 357, 362, 363, 366, 367, 435, 450, 459, 465, 466, 472, 476, 479, 483, 492, 496, 500, 501, 502, 589, 590, 642, 728, 729, 730, 731, 732, 733, 735, 736, 737, 738, 739, 740, 745, 783, 837, 839, 840, 1077, 1102, 1147, 1181, 1182, 1183, 1184, 1186], "python_exercises_userdb_csvdictreader_funct": [29, 840, 1147, 1178, 1181, 1182, 1183, 1184, 1185, 1186], "dictread": [29, 241, 262, 263, 276, 279, 284, 287, 299, 302, 322, 323, 328, 329, 346, 350, 351, 357, 362, 363, 366, 367, 840, 1102, 1145, 1147, 1181, 1182, 1183, 1184, 1185, 1186], "python_exercises_userdb_csvdictread": [29, 840, 1147, 1177, 1178, 1181, 1182, 1183, 1184, 1185, 1186], "python_exercises_userdb_user_class_person": [29, 840, 1147, 1181, 1183, 1186], "awai": [29, 62, 79, 86, 189, 190, 191, 195, 214, 230, 251, 257, 265, 299, 302, 322, 323, 328, 334, 337, 350, 356, 357, 362, 366, 372, 386, 540, 802, 840, 927, 948, 1059, 1084, 1102, 1147, 1181, 1186], "raw": [29, 62, 139, 235, 238, 241, 246, 258, 261, 270, 274, 280, 294, 295, 299, 301, 302, 306, 308, 322, 323, 328, 331, 334, 337, 341, 350, 356, 357, 362, 366, 382, 392, 418, 506, 534, 538, 556, 563, 601, 681, 803, 840, 924, 1102, 1118, 1123, 1139, 1147, 1181, 1186], "python_exercises_userdb_userdb_modul": [29, 840, 1147, 1181, 1182, 1183, 1184, 1185, 1186], "both": [29, 54, 62, 67, 87, 126, 127, 129, 135, 139, 143, 180, 190, 192, 197, 210, 222, 228, 249, 265, 268, 276, 279, 282, 284, 287, 299, 302, 314, 322, 323, 328, 329, 350, 351, 357, 362, 363, 366, 367, 498, 504, 506, 534, 552, 598, 600, 620, 652, 660, 734, 790, 801, 840, 858, 881, 887, 927, 1028, 1032, 1036, 1049, 1073, 1079, 1086, 1099, 1102, 1106, 1113, 1120, 1127, 1131, 1136, 1147, 1150, 1153, 1159, 1181, 1182, 1183, 1184, 1186, 1194, 1221, 1228, 1241], "python_exercises_userdb_user_json": [29, 840, 1147, 1181, 1182, 1183, 1184, 1186], "json": [29, 80, 87, 94, 126, 131, 134, 187, 223, 229, 239, 253, 257, 258, 266, 267, 275, 278, 279, 283, 286, 292, 301, 334, 336, 337, 339, 341, 344, 358, 417, 840, 1102, 1147, 1181, 1182, 1183, 1186, 1204, 1217], "python_advanced_oo_namedtupl": [29, 840, 1088, 1102, 1147, 1181, 1183, 1186], "namedtupl": [29, 226, 234, 241, 256, 257, 259, 265, 275, 278, 299, 316, 318, 319, 323, 334, 337, 340, 341, 344, 345, 357, 363, 367, 368, 840, 1088, 1102, 1147, 1181, 1183, 1186, 1206, 1251], "python_exercises_userdb_mqtt_publish_csv": [29, 840, 1147, 1181, 1182, 1186], "mqtt": [29, 124, 130, 131, 133, 136, 239, 241, 255, 257, 266, 279, 280, 284, 318, 319, 334, 337, 340, 376, 377, 379, 403, 406, 408, 517, 523, 533, 840, 1102, 1143, 1147, 1181, 1184, 1186, 1202], "publish": [29, 124, 134, 194, 196, 205, 266, 278, 279, 299, 341, 394, 403, 405, 840, 1102, 1147, 1181, 1184, 1186, 1188, 1219], "python_exercises_sensors_project_setup": [29, 840, 1147, 1174, 1175, 1176, 1186], "setup": [29, 108, 126, 139, 155, 162, 170, 178, 187, 205, 217, 221, 222, 260, 262, 278, 285, 288, 290, 295, 297, 303, 306, 310, 320, 324, 346, 352, 358, 364, 394, 397, 402, 403, 488, 541, 555, 566, 568, 582, 596, 599, 601, 602, 736, 738, 840, 855, 881, 979, 984, 992, 994, 1009, 1011, 1022, 1059, 1063, 1067, 1070, 1073, 1074, 1084, 1091, 1099, 1143, 1147, 1174, 1186, 1222, 1232, 1234], "python_exercises_sensors_sensor_const": [29, 840, 1147, 1174, 1175, 1176, 1186], "python_advanced_oo_method": [29, 840, 1088, 1102, 1147, 1174, 1175, 1176, 1186], "python_exercises_csv_csv_db": [29, 840, 1144, 1146, 1147, 1186], "sqlite3": [29, 87, 226, 257, 263, 269, 276, 376, 379, 512, 517, 523, 533, 840, 1146, 1147, 1186, 1197, 1198, 1202], "python_db_sqlite3": [29, 840, 1144, 1146, 1147, 1186, 1198], "dbapi": [29, 226, 257, 269, 840, 1144, 1146, 1147, 1186, 1198], "python_exercises_csv_csv_modul": [29, 840, 1145, 1146, 1147, 1186], "python_swdev_unittest": [29, 840, 1186, 1215], "unittest": [29, 126, 186, 187, 203, 206, 217, 219, 222, 225, 226, 236, 239, 250, 252, 257, 299, 308, 319, 373, 374, 380, 387, 397, 405, 406, 415, 416, 838, 840, 1129, 1186, 1188, 1215, 1226], "python_advanced_oo_inherit": [29, 840, 1088, 1095, 1096, 1097, 1098, 1102, 1186, 1215], "inherit": [29, 71, 75, 108, 144, 207, 217, 226, 250, 263, 280, 282, 315, 316, 317, 318, 319, 323, 340, 341, 344, 345, 355, 363, 406, 522, 526, 530, 548, 562, 590, 598, 600, 640, 642, 643, 667, 716, 719, 740, 782, 825, 839, 840, 879, 919, 923, 926, 947, 949, 1056, 1086, 1088, 1096, 1097, 1098, 1099, 1102, 1104, 1107, 1186, 1215, 1257], "python_swdev_venv": [29, 840, 1141, 1186, 1189, 1190, 1194, 1202, 1204, 1215, 1225], "python_swdev_pip": [29, 840, 1141, 1186, 1189, 1190, 1194, 1202, 1204, 1215, 1218, 1225], "python_misc_import": [29, 840, 1141, 1186, 1189, 1190, 1194, 1202, 1204, 1215, 1218, 1225], "incomplet": [29, 116, 119, 220, 259, 265, 275, 278, 282, 380, 509, 642, 717, 825, 840, 991, 1141, 1186, 1189, 1190, 1194, 1202, 1204, 1215, 1218, 1225, 1226], "python_swdev_pytest_intro": [29, 840, 1186, 1215, 1220], "By": [29, 51, 53, 154, 155, 162, 190, 192, 197, 201, 205, 217, 223, 259, 265, 266, 268, 275, 276, 278, 279, 283, 287, 290, 294, 295, 297, 299, 308, 316, 318, 319, 323, 334, 337, 340, 341, 344, 354, 355, 367, 372, 373, 380, 405, 437, 464, 487, 490, 728, 729, 731, 732, 735, 737, 739, 740, 783, 784, 837, 839, 840, 856, 930, 979, 992, 1028, 1047, 1063, 1065, 1075, 1099, 1106, 1184, 1185, 1186, 1195, 1215, 1220], "python_basics_instal": [29, 92, 840, 1110, 1186], "python_basics_python_0250_refs_flat_deep_copi": [29, 92, 247, 383, 384, 385, 386, 387, 388, 397, 840, 1088, 1110, 1145, 1146, 1147, 1157, 1160, 1168, 1169, 1171, 1172, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1201, 1202], "mutabl": [29, 92, 222, 226, 227, 229, 231, 234, 235, 241, 247, 248, 257, 260, 261, 263, 264, 265, 266, 271, 273, 274, 277, 280, 284, 286, 287, 289, 292, 302, 304, 309, 311, 312, 316, 318, 319, 321, 322, 323, 325, 328, 329, 331, 340, 341, 343, 344, 345, 347, 350, 353, 356, 357, 362, 363, 365, 366, 367, 369, 374, 383, 384, 385, 386, 387, 388, 397, 793, 840, 1088, 1110, 1119, 1123, 1145, 1146, 1147, 1157, 1160, 1168, 1169, 1171, 1172, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1201, 1202, 1251], "python_basics_python_0200_sequential_typ": [29, 92, 247, 383, 384, 385, 386, 387, 388, 397, 840, 1088, 1110, 1144, 1145, 1146, 1147, 1157, 1160, 1161, 1163, 1167, 1168, 1169, 1170, 1171, 1172, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1198, 1201, 1202, 1208], "sequenti": [29, 62, 92, 108, 110, 157, 226, 227, 229, 231, 234, 235, 236, 239, 247, 252, 257, 260, 263, 268, 269, 271, 273, 281, 283, 284, 287, 291, 299, 302, 309, 312, 315, 317, 319, 320, 322, 323, 328, 329, 340, 341, 344, 345, 350, 351, 353, 355, 356, 357, 362, 363, 366, 367, 369, 380, 383, 384, 385, 386, 387, 388, 397, 402, 495, 590, 603, 607, 642, 677, 687, 695, 706, 710, 740, 840, 992, 994, 1024, 1088, 1093, 1110, 1144, 1145, 1146, 1147, 1157, 1160, 1161, 1163, 1167, 1168, 1169, 1170, 1171, 1172, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1198, 1201, 1202, 1208, 1251], "python_basics_python_0130_syntax_etc": [29, 92, 247, 383, 384, 385, 386, 387, 388, 397, 840, 1088, 1095, 1096, 1097, 1098, 1102, 1110, 1121, 1130, 1141, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1160, 1161, 1162, 1163, 1164, 1165, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1198, 1201, 1202, 1208, 1215], "syntax": [29, 70, 92, 183, 213, 222, 229, 230, 232, 234, 235, 236, 241, 247, 248, 253, 257, 260, 263, 269, 273, 275, 279, 280, 281, 284, 287, 289, 300, 302, 309, 311, 312, 322, 323, 325, 328, 329, 350, 351, 353, 354, 356, 357, 362, 363, 365, 366, 367, 373, 374, 383, 384, 385, 386, 387, 388, 397, 526, 564, 643, 644, 748, 765, 792, 805, 840, 976, 1083, 1085, 1086, 1087, 1088, 1095, 1096, 1097, 1098, 1102, 1110, 1112, 1121, 1129, 1130, 1132, 1141, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1160, 1161, 1162, 1163, 1164, 1165, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1198, 1201, 1202, 1208, 1215, 1241, 1251], "python_basics_python_0125_run": [29, 92, 247, 397, 840, 1110, 1141, 1144, 1145, 1146, 1147, 1149, 1150, 1151, 1152, 1154, 1155, 1157, 1160, 1161, 1162, 1163, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186], "run": [29, 42, 61, 62, 63, 65, 92, 99, 110, 112, 113, 139, 152, 159, 171, 180, 183, 186, 189, 190, 191, 192, 193, 196, 197, 200, 201, 209, 221, 222, 229, 230, 242, 247, 251, 252, 257, 262, 270, 278, 279, 282, 285, 288, 290, 295, 302, 303, 306, 309, 310, 312, 320, 322, 323, 324, 328, 329, 333, 342, 346, 349, 350, 351, 352, 356, 357, 358, 362, 363, 364, 366, 367, 374, 375, 376, 378, 379, 382, 397, 400, 422, 440, 482, 485, 493, 494, 498, 499, 517, 523, 524, 526, 533, 537, 544, 549, 568, 569, 570, 598, 600, 601, 602, 624, 651, 664, 673, 685, 743, 801, 802, 838, 840, 860, 875, 885, 887, 888, 897, 920, 921, 923, 925, 926, 927, 928, 944, 945, 948, 949, 979, 992, 993, 994, 995, 1003, 1005, 1013, 1015, 1031, 1044, 1046, 1047, 1048, 1050, 1055, 1060, 1062, 1065, 1068, 1069, 1071, 1073, 1075, 1079, 1084, 1095, 1098, 1110, 1111, 1113, 1141, 1144, 1145, 1146, 1147, 1149, 1150, 1151, 1152, 1154, 1155, 1157, 1160, 1161, 1162, 1163, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1190, 1204, 1216, 1222, 1227, 1228, 1233, 1246], "python_misc_encod": [29, 92, 247, 383, 384, 385, 386, 387, 388, 397, 840, 1088, 1110, 1145, 1146, 1147, 1157, 1160, 1168, 1171, 1172, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1201, 1202], "encod": [29, 43, 92, 209, 226, 227, 229, 231, 247, 250, 257, 259, 262, 265, 266, 269, 275, 276, 278, 284, 286, 289, 303, 307, 308, 310, 323, 324, 331, 341, 342, 344, 345, 347, 352, 358, 364, 382, 383, 384, 385, 386, 387, 388, 402, 506, 520, 840, 1088, 1110, 1118, 1123, 1137, 1145, 1146, 1147, 1157, 1160, 1168, 1171, 1172, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1188, 1196, 1202, 1204], "python_basics_python_0400_list": [29, 92, 840, 1110, 1186], "python_basics_python_0110_blahblah": [29, 92, 247, 383, 384, 385, 386, 387, 388, 397, 840, 1088, 1095, 1096, 1097, 1098, 1102, 1110, 1121, 1130, 1141, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1160, 1161, 1162, 1163, 1164, 1165, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1198, 1201, 1202, 1208, 1215], "blahblah": [29, 92, 229, 234, 236, 247, 253, 257, 260, 263, 269, 273, 279, 280, 281, 283, 284, 286, 287, 289, 302, 309, 312, 322, 323, 328, 329, 350, 351, 353, 356, 357, 358, 362, 363, 366, 367, 383, 384, 385, 386, 387, 388, 397, 840, 1088, 1095, 1096, 1097, 1098, 1102, 1110, 1121, 1130, 1141, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1160, 1161, 1162, 1163, 1164, 1165, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1198, 1201, 1202, 1208, 1215, 1251], "python_basics_python_0460_set": [29, 92, 840, 1110, 1186], "python_basics_python_1000_function_object": [29, 92, 840, 1110, 1186], "python_misc_mqtt": [29, 840, 1186, 1202, 1204], "python_misc_vscod": [29, 840, 1186, 1202], "visual": [29, 80, 106, 149, 217, 222, 226, 227, 229, 231, 242, 251, 252, 257, 260, 273, 279, 287, 290, 302, 306, 309, 312, 316, 322, 323, 328, 329, 350, 351, 356, 357, 362, 366, 367, 397, 402, 417, 840, 927, 993, 1064, 1111, 1145, 1186, 1202], "studio": [29, 106, 149, 217, 222, 226, 227, 229, 231, 242, 251, 252, 257, 260, 273, 279, 287, 302, 306, 309, 312, 316, 322, 323, 328, 329, 350, 351, 356, 357, 362, 366, 367, 397, 402, 417, 840, 927, 1111, 1186, 1202], "python_misc_ai_k_mean": [29, 840, 1186, 1189, 1190, 1202], "python_misc_ai_machine_learning_intro": [29, 840, 1186, 1189, 1190, 1194, 1195, 1202], "concept": [29, 80, 99, 100, 101, 125, 126, 162, 163, 190, 200, 214, 222, 226, 228, 230, 232, 242, 293, 296, 305, 306, 309, 326, 340, 344, 370, 399, 400, 415, 418, 465, 488, 526, 548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 642, 684, 742, 783, 793, 816, 839, 840, 910, 914, 915, 916, 917, 920, 921, 927, 929, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 968, 978, 984, 996, 997, 998, 999, 1000, 1007, 1013, 1015, 1023, 1025, 1029, 1039, 1042, 1045, 1047, 1064, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1117, 1125, 1135, 1186, 1189, 1190, 1194, 1201, 1202, 1204, 1256], "terminologi": [29, 100, 101, 126, 148, 163, 196, 214, 226, 261, 296, 305, 306, 309, 326, 340, 344, 370, 372, 455, 548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 642, 657, 816, 839, 840, 910, 914, 915, 916, 917, 920, 921, 929, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 968, 977, 978, 984, 996, 997, 998, 999, 1000, 1007, 1013, 1015, 1023, 1025, 1039, 1042, 1045, 1046, 1047, 1061, 1064, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1186, 1189, 1190, 1194, 1202, 1259], "python_misc_ai_linear_regress": [29, 840, 1186, 1189, 1190, 1194, 1202], "linear": [29, 211, 213, 223, 226, 228, 246, 254, 309, 340, 344, 473, 495, 667, 793, 840, 924, 993, 1059, 1122, 1186, 1189, 1190, 1195, 1202], "regress": [29, 226, 278, 309, 340, 344, 840, 1186, 1189, 1190, 1195, 1202], "python_misc_pandas_mod_col": [29, 840, 1186, 1202, 1208], "ad": [29, 32, 33, 39, 87, 127, 131, 144, 196, 200, 201, 202, 205, 210, 230, 242, 252, 308, 309, 312, 316, 341, 362, 366, 367, 376, 379, 394, 445, 464, 486, 515, 517, 523, 533, 538, 543, 547, 552, 661, 663, 664, 699, 754, 790, 830, 831, 840, 856, 992, 994, 1044, 1048, 1049, 1085, 1103, 1118, 1137, 1186, 1202, 1208, 1209, 1213, 1222], "modifi": [29, 42, 77, 90, 112, 113, 127, 131, 142, 144, 192, 197, 205, 208, 210, 230, 249, 306, 308, 309, 312, 316, 317, 318, 319, 340, 341, 362, 366, 367, 374, 408, 423, 425, 431, 468, 480, 487, 504, 506, 511, 522, 539, 547, 549, 552, 568, 569, 589, 598, 601, 602, 604, 605, 606, 618, 631, 634, 644, 651, 654, 655, 657, 660, 672, 724, 726, 729, 731, 734, 737, 751, 765, 788, 793, 805, 816, 818, 834, 835, 838, 839, 840, 860, 875, 895, 914, 915, 928, 933, 984, 997, 1001, 1006, 1025, 1033, 1039, 1078, 1079, 1085, 1087, 1098, 1119, 1163, 1167, 1185, 1186, 1202, 1208, 1210, 1253, 1257], "column": [29, 62, 116, 120, 123, 183, 192, 195, 210, 213, 259, 278, 307, 308, 309, 310, 312, 316, 341, 342, 346, 352, 362, 364, 366, 367, 495, 506, 840, 928, 933, 944, 1145, 1157, 1169, 1186, 1193, 1196, 1202, 1208], "python_misc_pandas_bas": [29, 840, 1186, 1202, 1208], "datafram": [29, 308, 309, 310, 312, 316, 319, 341, 346, 362, 366, 367, 506, 840, 1186, 1191, 1194, 1202, 1205, 1207, 1208, 1209, 1211, 1212], "python_misc_pandas_filt": [29, 840, 1186, 1202, 1208], "python_misc_pandas_index": [29, 840, 1186, 1202, 1208], "python_misc_pandas_loc": [29, 840, 1186, 1202, 1208], "select": [29, 62, 189, 190, 192, 196, 249, 254, 262, 279, 309, 312, 341, 362, 366, 367, 443, 465, 840, 887, 932, 989, 994, 1028, 1029, 1048, 1051, 1053, 1056, 1077, 1145, 1186, 1191, 1200, 1202, 1208, 1210, 1221, 1229, 1256, 1258], "row": [29, 191, 213, 229, 249, 262, 266, 268, 270, 282, 307, 308, 309, 312, 316, 329, 341, 342, 346, 352, 362, 364, 366, 367, 453, 495, 840, 928, 1033, 1086, 1105, 1125, 1145, 1177, 1179, 1186, 1193, 1196, 1200, 1202, 1206, 1207, 1208, 1212], "loc": [29, 210, 303, 307, 308, 309, 310, 312, 314, 316, 341, 362, 366, 367, 481, 840, 1033, 1097, 1186, 1202, 1205, 1206, 1207, 1208, 1209], "python_misc_pandas_iloc": [29, 840, 1186, 1202, 1208], "iloc": [29, 309, 310, 312, 314, 316, 341, 346, 362, 366, 367, 506, 840, 1186, 1202, 1206, 1208, 1211], "python_misc_pandas_add_row": [29, 840, 1186, 1202, 1208], "python_drafts_setuptool": [29, 840, 1141, 1186], "setuptool": [29, 60, 186, 299, 334, 344, 840, 1141, 1186, 1223], "python_drafts_matplotlib": [29, 840, 1141, 1186], "matplotlib": [29, 222, 241, 260, 261, 273, 287, 288, 290, 292, 323, 342, 347, 351, 353, 364, 406, 840, 1083, 1141, 1186, 1188, 1194], "python_drafts_argpars": [29, 840, 1141, 1186], "argpars": [29, 266, 287, 318, 340, 344, 383, 840, 1141, 1186], "python_drafts_asyncio": [29, 840, 1141, 1186], "asyncio": [29, 68, 222, 226, 276, 317, 345, 771, 840, 1141, 1186, 1188], "python_advanced_exec": [29, 840, 1088, 1186], "python_advanced_except": [29, 840, 1088, 1186], "python_advanced_stararg": [29, 840, 1088, 1186], "keyword": [29, 39, 62, 170, 185, 223, 226, 227, 228, 229, 231, 250, 252, 266, 271, 276, 278, 299, 302, 303, 309, 312, 316, 318, 319, 322, 324, 328, 334, 337, 340, 341, 344, 345, 397, 464, 494, 524, 657, 658, 660, 678, 730, 790, 840, 1037, 1084, 1085, 1086, 1088, 1112, 1128, 1130, 1143, 1186, 1199, 1238, 1240], "python_advanced_closur": [29, 840, 1088, 1186], "closur": [29, 61, 62, 63, 209, 222, 226, 234, 235, 250, 263, 266, 276, 309, 312, 341, 345, 787, 840, 1085, 1088, 1128, 1130, 1186, 1251], "python_advanced_comprehens": [29, 840, 1088, 1186], "comprehens": [29, 62, 70, 210, 211, 223, 226, 229, 235, 249, 250, 251, 258, 263, 264, 266, 267, 268, 271, 274, 280, 283, 299, 302, 304, 311, 316, 322, 323, 328, 329, 340, 341, 343, 344, 345, 350, 351, 353, 356, 357, 359, 362, 363, 365, 366, 367, 788, 840, 858, 875, 883, 1088, 1093, 1186, 1207], "python_advanced_iteration_gener": [29, 840, 1088, 1186], "python_advanced_context_mgr": [29, 840, 1088, 1186], "python_advanced_oo_classes_and_dict": [29, 840, 1088, 1095, 1096, 1097, 1098, 1102, 1147, 1174, 1175, 1176, 1181, 1183, 1186, 1215], "python_advanced_decor": [29, 840, 1088, 1186], "decor": [29, 61, 63, 210, 222, 225, 226, 241, 250, 266, 276, 290, 345, 541, 548, 562, 576, 590, 642, 840, 1084, 1088, 1099, 1106, 1107, 1109, 1130, 1186, 1188, 1221, 1244], "python_advanced_multithreading_mutex": [29, 840, 1088, 1096, 1097, 1098, 1186], "race": [29, 74, 75, 76, 80, 89, 190, 208, 268, 294, 295, 297, 306, 317, 318, 319, 340, 341, 344, 354, 373, 405, 406, 412, 481, 491, 620, 793, 809, 816, 839, 840, 864, 868, 889, 891, 896, 900, 902, 905, 908, 984, 1014, 1024, 1025, 1030, 1038, 1039, 1045, 1088, 1096, 1098, 1186, 1246, 1256, 1257], "condit": [29, 74, 75, 76, 80, 89, 91, 143, 190, 201, 208, 249, 268, 288, 294, 295, 297, 306, 317, 318, 319, 340, 341, 344, 354, 373, 376, 379, 405, 406, 412, 420, 422, 426, 449, 450, 452, 453, 455, 457, 459, 466, 472, 476, 479, 481, 483, 491, 492, 496, 501, 502, 508, 509, 510, 517, 519, 523, 526, 533, 535, 620, 637, 726, 727, 745, 783, 793, 803, 809, 816, 817, 837, 839, 840, 864, 868, 889, 891, 896, 900, 902, 904, 905, 908, 984, 1014, 1020, 1024, 1025, 1030, 1038, 1039, 1041, 1045, 1088, 1096, 1098, 1121, 1122, 1137, 1186, 1192, 1207, 1246, 1256, 1257], "mutex": [29, 74, 75, 76, 78, 80, 89, 91, 208, 237, 268, 293, 294, 295, 297, 306, 317, 318, 319, 340, 341, 344, 354, 373, 374, 405, 406, 412, 620, 810, 812, 814, 815, 816, 839, 840, 864, 868, 885, 889, 890, 891, 896, 902, 905, 906, 908, 984, 1025, 1030, 1035, 1038, 1039, 1088, 1096, 1098, 1186, 1241, 1246, 1257], "python_advanced_multithreading_bas": [29, 840, 1088, 1095, 1096, 1097, 1098, 1186], "python_advanced_multithreading_exam_quest": [29, 840, 1088, 1096, 1098, 1186], "exam": [29, 98, 99, 108, 251, 267, 296, 305, 326, 370, 399, 411, 840, 917, 984, 1025, 1045, 1088, 1096, 1186], "python_advanced_oo_constructor": [29, 840, 1088, 1095, 1096, 1097, 1098, 1102, 1186, 1215], "constructor": [29, 43, 53, 56, 72, 99, 112, 113, 121, 126, 131, 134, 137, 139, 143, 144, 217, 223, 229, 249, 250, 252, 263, 268, 276, 280, 299, 302, 304, 309, 312, 315, 316, 317, 318, 319, 320, 322, 323, 328, 334, 337, 340, 341, 344, 345, 350, 355, 356, 357, 362, 363, 366, 367, 380, 399, 400, 401, 474, 548, 562, 588, 590, 593, 596, 600, 601, 620, 629, 635, 642, 643, 644, 650, 667, 698, 714, 715, 722, 724, 726, 728, 729, 730, 731, 733, 734, 735, 736, 737, 738, 739, 740, 743, 751, 752, 753, 755, 781, 783, 799, 802, 803, 804, 808, 813, 814, 815, 816, 817, 825, 837, 839, 840, 846, 848, 879, 1033, 1088, 1095, 1096, 1097, 1098, 1100, 1102, 1103, 1104, 1118, 1186, 1215, 1221, 1233, 1241], "python_advanced_oo_operator_overload": [29, 840, 1088, 1102, 1186], "overload": [29, 99, 144, 209, 217, 226, 252, 280, 315, 316, 317, 318, 319, 340, 344, 345, 347, 354, 363, 380, 490, 590, 598, 642, 644, 665, 669, 677, 698, 722, 724, 725, 728, 729, 731, 732, 733, 735, 736, 737, 738, 739, 740, 751, 752, 756, 783, 799, 808, 816, 837, 839, 840, 846, 1088, 1102, 1186, 1207, 1240], "python_advanced_oo_properti": [29, 840, 1088, 1102, 1186], "properti": [29, 40, 210, 226, 250, 263, 280, 282, 299, 303, 316, 318, 319, 323, 333, 334, 337, 340, 341, 344, 345, 349, 357, 363, 367, 375, 376, 377, 378, 401, 507, 513, 516, 517, 523, 524, 532, 533, 537, 539, 840, 1088, 1102, 1186, 1227, 1230], "python_advanced_oo_str_repr": [29, 840, 1088, 1102, 1186], "str": [29, 171, 209, 212, 223, 233, 238, 240, 241, 246, 249, 251, 259, 262, 265, 270, 272, 275, 278, 282, 285, 288, 291, 299, 300, 302, 303, 307, 308, 309, 310, 312, 314, 316, 318, 319, 320, 322, 323, 324, 328, 330, 334, 335, 337, 338, 340, 341, 342, 344, 345, 346, 350, 352, 356, 357, 358, 362, 363, 364, 366, 368, 382, 388, 391, 392, 393, 397, 470, 488, 506, 519, 575, 580, 661, 662, 663, 664, 780, 792, 840, 1086, 1088, 1100, 1102, 1103, 1106, 1115, 1117, 1118, 1129, 1133, 1137, 1145, 1153, 1155, 1186, 1201, 1207, 1212, 1213], "repr": [29, 240, 259, 265, 275, 278, 282, 285, 288, 299, 302, 303, 309, 312, 316, 318, 319, 322, 323, 324, 328, 334, 335, 337, 340, 341, 344, 345, 350, 356, 362, 363, 366, 840, 1086, 1088, 1102, 1103, 1186], "python_advanced_oo_abc": [29, 840, 1088, 1102, 1186], "abstract": [29, 68, 80, 86, 226, 266, 298, 315, 316, 317, 318, 319, 340, 341, 344, 345, 363, 373, 380, 401, 465, 504, 506, 541, 548, 552, 554, 556, 562, 564, 576, 590, 600, 642, 677, 716, 717, 795, 828, 840, 920, 921, 925, 994, 1009, 1088, 1102, 1186, 1244, 1246], "abc": [29, 32, 209, 223, 226, 228, 233, 238, 240, 246, 249, 251, 255, 259, 262, 265, 266, 270, 272, 275, 278, 282, 285, 288, 291, 299, 300, 303, 310, 316, 318, 319, 320, 324, 330, 334, 337, 340, 341, 342, 344, 345, 346, 352, 358, 363, 364, 368, 384, 392, 506, 600, 669, 690, 707, 709, 828, 840, 1088, 1102, 1118, 1186, 1210], "duck": [29, 32, 156, 225, 226, 280, 299, 316, 318, 319, 323, 340, 341, 344, 345, 355, 363, 373, 374, 380, 541, 600, 743, 745, 783, 791, 792, 797, 803, 825, 830, 837, 839, 840, 1088, 1095, 1102, 1186, 1188, 1193, 1241], "python_db_dbapi2": [29, 840, 1144, 1146, 1147, 1186, 1198], "python_db_postgr": [29, 840, 1186, 1198], "postgresql": [29, 840, 1186, 1197, 1198], "As": [30, 46, 70, 82, 126, 187, 190, 192, 197, 201, 207, 219, 222, 226, 257, 270, 332, 348, 400, 417, 455, 486, 489, 585, 587, 601, 652, 657, 659, 660, 738, 822, 860, 887, 913, 923, 992, 993, 1001, 1003, 1020, 1048, 1056, 1079, 1085, 1106, 1111, 1115, 1173, 1177, 1190, 1231, 1243], "follow": [30, 39, 43, 80, 108, 109, 111, 116, 119, 120, 121, 122, 123, 129, 132, 149, 152, 159, 180, 189, 190, 192, 193, 194, 195, 197, 205, 210, 214, 218, 219, 222, 226, 230, 231, 242, 259, 265, 275, 276, 278, 282, 291, 295, 297, 314, 315, 317, 323, 324, 394, 416, 418, 421, 438, 439, 452, 455, 482, 484, 486, 488, 493, 494, 497, 505, 519, 524, 534, 537, 542, 543, 546, 547, 563, 564, 566, 567, 568, 569, 570, 588, 591, 592, 595, 596, 598, 599, 600, 601, 602, 614, 620, 646, 661, 662, 663, 664, 717, 724, 726, 727, 732, 734, 735, 738, 739, 742, 760, 793, 834, 835, 838, 848, 850, 856, 887, 913, 914, 915, 920, 921, 923, 925, 927, 939, 941, 942, 948, 952, 960, 961, 985, 992, 993, 994, 1015, 1018, 1019, 1020, 1021, 1030, 1047, 1056, 1060, 1062, 1068, 1069, 1071, 1073, 1075, 1077, 1078, 1079, 1082, 1086, 1087, 1091, 1098, 1117, 1131, 1139, 1145, 1148, 1153, 1157, 1159, 1163, 1166, 1167, 1170, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1210, 1214, 1223, 1244], "version": [30, 60, 117, 125, 189, 193, 195, 196, 197, 200, 203, 205, 218, 219, 220, 222, 229, 238, 240, 249, 250, 259, 263, 265, 269, 275, 278, 285, 290, 293, 302, 308, 314, 315, 316, 317, 324, 357, 374, 375, 378, 390, 405, 465, 504, 505, 511, 513, 514, 516, 524, 526, 532, 534, 539, 637, 735, 737, 738, 785, 789, 801, 825, 835, 860, 862, 879, 887, 888, 903, 948, 992, 993, 1063, 1064, 1065, 1075, 1077, 1078, 1080, 1111, 1112, 1118, 1143, 1216, 1223, 1224, 1230, 1236], "control": [30, 45, 61, 62, 63, 88, 127, 129, 135, 136, 143, 144, 189, 196, 203, 205, 208, 219, 222, 227, 229, 230, 231, 232, 241, 242, 257, 260, 273, 278, 284, 298, 355, 375, 378, 398, 399, 400, 402, 405, 443, 457, 458, 504, 534, 541, 548, 591, 592, 595, 601, 643, 840, 860, 885, 887, 892, 948, 984, 986, 987, 991, 992, 994, 1010, 1059, 1064, 1084, 1087, 1095, 1107, 1120, 1122, 1207, 1222, 1224, 1242, 1252, 1258], "done": [30, 42, 46, 47, 50, 53, 55, 56, 57, 62, 77, 86, 89, 93, 104, 112, 113, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 143, 144, 155, 159, 171, 177, 182, 186, 187, 189, 191, 192, 194, 195, 196, 197, 200, 205, 210, 211, 214, 218, 222, 229, 251, 266, 270, 276, 278, 294, 295, 297, 309, 312, 319, 324, 342, 372, 383, 389, 400, 406, 421, 422, 470, 477, 478, 480, 482, 493, 504, 506, 511, 514, 534, 537, 566, 585, 599, 602, 644, 656, 657, 685, 699, 707, 712, 737, 738, 740, 743, 750, 771, 774, 778, 779, 789, 795, 803, 807, 815, 817, 840, 846, 856, 858, 877, 879, 887, 889, 914, 915, 919, 920, 921, 923, 924, 932, 944, 967, 985, 986, 988, 993, 994, 1010, 1011, 1012, 1022, 1036, 1044, 1050, 1059, 1063, 1064, 1073, 1077, 1079, 1086, 1089, 1090, 1091, 1109, 1118, 1129, 1137, 1138, 1139, 1143, 1146, 1167, 1200, 1221, 1246], "No": [30, 43, 62, 82, 116, 119, 180, 186, 190, 192, 196, 197, 205, 232, 249, 265, 266, 282, 308, 408, 428, 430, 444, 460, 464, 471, 482, 487, 499, 504, 508, 511, 512, 513, 514, 518, 522, 525, 530, 531, 532, 535, 537, 539, 540, 552, 598, 637, 647, 648, 660, 667, 677, 692, 695, 713, 732, 742, 744, 747, 751, 754, 758, 802, 803, 810, 817, 865, 867, 869, 871, 885, 887, 892, 904, 924, 930, 932, 935, 936, 951, 959, 967, 970, 986, 988, 994, 1008, 1015, 1020, 1021, 1030, 1031, 1033, 1035, 1044, 1048, 1056, 1059, 1062, 1065, 1080, 1082, 1099, 1106, 1112, 1115, 1118, 1119, 1127, 1131, 1135, 1137, 1195, 1196, 1200, 1201, 1210, 1213, 1221, 1223, 1229], "proprietari": 30, "accept": [30, 32, 59, 143, 192, 218, 314, 504, 506, 793, 803, 805, 855, 988, 1014, 1085, 1109, 1256, 1258], "proven": [30, 493, 497, 661, 663, 664, 754], "difficult": [30, 70, 249, 449, 467, 637, 873, 885, 1048], "ffmpeg": 31, "video4linux2": 31, "640x480": [31, 1083], "dev": [31, 62, 66, 102, 134, 165, 190, 191, 201, 207, 208, 218, 219, 262, 268, 278, 285, 288, 303, 306, 310, 315, 317, 320, 324, 346, 352, 358, 371, 403, 493, 524, 526, 537, 596, 840, 842, 843, 845, 851, 858, 867, 881, 883, 887, 900, 917, 918, 928, 930, 931, 948, 962, 965, 968, 970, 984, 987, 992, 993, 994, 1017, 1024, 1044, 1047, 1050, 1052, 1055, 1056, 1077, 1228, 1230, 1246], "video0": 31, "500k": 31, "matroska": 31, "mk": [31, 32], "disabl": [31, 190, 193, 195, 201, 259, 265, 275, 278, 465, 879, 885, 890, 892, 1048, 1216, 1236], "audio": [31, 169, 178, 192, 197, 840, 1245], "appar": [31, 57, 60, 62, 174, 192, 194, 195, 197, 201, 251, 262, 314, 535, 543, 714, 760, 771, 803, 855, 992, 1050, 1201], "next": [31, 39, 42, 62, 100, 126, 147, 152, 162, 171, 186, 191, 192, 197, 205, 210, 212, 223, 228, 230, 238, 242, 249, 255, 259, 262, 263, 265, 268, 270, 272, 275, 278, 282, 288, 294, 295, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 382, 389, 403, 437, 455, 457, 478, 506, 564, 568, 582, 592, 601, 637, 674, 751, 764, 771, 773, 795, 877, 887, 906, 932, 948, 980, 992, 994, 1014, 1024, 1044, 1063, 1090, 1091, 1094, 1122, 1125, 1140, 1193, 1229], "mention": [31, 144, 190, 191, 218, 222, 226, 252, 276, 318, 319, 340, 341, 345, 587, 601, 786, 899, 993, 1082, 1188, 1204], "frame": [31, 184, 195, 207, 229, 259, 265, 275, 278, 308, 314, 346, 477, 490, 494, 564, 756, 986, 987, 1206], "size": [31, 102, 111, 131, 189, 191, 192, 209, 211, 217, 259, 260, 265, 268, 273, 275, 278, 282, 287, 290, 306, 323, 324, 329, 371, 397, 428, 445, 450, 459, 466, 470, 472, 476, 477, 479, 482, 483, 485, 490, 491, 492, 494, 496, 501, 502, 520, 544, 545, 551, 590, 602, 603, 607, 608, 609, 610, 611, 615, 616, 619, 625, 637, 642, 644, 648, 652, 657, 661, 663, 664, 677, 678, 679, 680, 685, 690, 691, 695, 699, 701, 702, 707, 709, 737, 739, 745, 748, 749, 754, 765, 766, 767, 769, 783, 793, 802, 806, 807, 815, 824, 837, 838, 839, 840, 846, 858, 873, 883, 903, 912, 917, 918, 925, 932, 962, 965, 968, 970, 976, 980, 984, 988, 993, 1014, 1016, 1055, 1056, 1062, 1080, 1083, 1188, 1201], "input": [31, 40, 70, 88, 134, 210, 211, 212, 213, 223, 226, 229, 231, 253, 259, 265, 268, 275, 278, 281, 282, 303, 306, 376, 379, 397, 402, 426, 427, 433, 457, 465, 488, 493, 505, 603, 604, 605, 606, 618, 657, 707, 727, 750, 838, 858, 913, 932, 963, 981, 985, 995, 1011, 1014, 1026, 1028, 1029, 1036, 1093, 1108, 1137, 1150, 1154, 1155, 1167, 1170, 1173, 1179, 1182, 1190, 1191, 1194, 1195, 1252], "rate": [31, 200, 222, 282, 341, 486, 906, 1046], "hz": [31, 897], "bitrat": [31, 987], "If": [31, 43, 45, 47, 53, 55, 56, 57, 91, 124, 126, 144, 151, 189, 190, 191, 192, 195, 196, 197, 205, 206, 214, 222, 259, 265, 272, 275, 278, 282, 290, 295, 297, 306, 312, 324, 341, 397, 402, 443, 452, 482, 494, 508, 510, 514, 542, 592, 598, 599, 614, 644, 649, 713, 720, 722, 737, 738, 751, 756, 802, 806, 807, 815, 817, 840, 860, 865, 879, 887, 892, 904, 913, 923, 927, 930, 948, 949, 957, 960, 984, 985, 992, 993, 994, 995, 1001, 1015, 1023, 1025, 1033, 1038, 1042, 1055, 1078, 1079, 1091, 1099, 1101, 1111, 1118, 1126, 1128, 1139, 1165, 1193, 1196, 1210, 1222, 1241], "instead": [31, 58, 62, 131, 138, 144, 152, 183, 189, 190, 191, 192, 210, 211, 219, 251, 268, 270, 278, 308, 324, 382, 403, 408, 445, 494, 542, 585, 588, 602, 664, 680, 737, 739, 756, 760, 802, 803, 817, 825, 855, 856, 865, 918, 948, 970, 993, 1035, 1055, 1062, 1064, 1075, 1081, 1112, 1159, 1171, 1183, 1207, 1228], "stdout": [31, 144, 209, 242, 246, 250, 259, 265, 275, 278, 288, 296, 303, 305, 306, 326, 327, 341, 370, 374, 382, 390, 392, 397, 401, 403, 713, 840, 911, 913, 917, 929, 930, 973, 976, 979, 984, 1014, 1059, 1087, 1137, 1139, 1145, 1150, 1154, 1157, 1172, 1204, 1213, 1247], "hold": [31, 131, 189, 191, 210, 226, 228, 229, 249, 276, 420, 432, 452, 524, 544, 674, 730, 737, 788, 793, 807, 815, 820, 825, 851, 885, 889, 890, 985, 992, 1048, 1087, 1100, 1122, 1171, 1193], "mplayer": [31, 320, 358], "stdin": [31, 42, 242, 250, 259, 265, 268, 275, 278, 390, 397, 429, 435, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 745, 783, 837, 839, 840, 913, 930, 931, 963, 1014, 1135, 1137, 1138, 1150, 1201, 1213, 1247], "unicod": [32, 34, 35, 36, 38, 250, 259, 263, 265, 275, 278, 300, 324, 358, 432, 1117, 1123, 1137, 1201], "sphinxemojicod": 32, "pip": [32, 60, 170, 171, 186, 222, 226, 247, 276, 290, 1014, 1111, 1142, 1143, 1175, 1188, 1204, 1215, 1216, 1217, 1221, 1223, 1224], "conf": [32, 171, 191, 193, 195, 358, 539, 887, 994, 1087], "grimac": 32, "astonish": 32, "rolling_ey": 32, "face_with_raised_eyebrow": 32, "flush": [32, 303, 601, 846, 858], "innoc": [32, 196, 487, 809, 927, 1061, 1106], "kiss": 32, "kissing_heart": 32, "middle_fing": 32, "metal": [32, 80, 82, 89, 91, 190, 415, 985, 993, 994], "muscl": 32, "nerd": [32, 948], "ok_hand": 32, "penguin": 32, "pig": [32, 482], "point_up": 32, "sleep": [32, 62, 65, 116, 122, 190, 265, 294, 295, 318, 319, 340, 383, 455, 464, 815, 840, 864, 867, 869, 879, 889, 892, 896, 902, 904, 905, 908, 984, 985, 993, 1022, 1026, 1029, 1044, 1046, 1047, 1050, 1055, 1095], "sunglass": 32, "think": [32, 42, 43, 71, 190, 191, 205, 228, 252, 354, 373, 465, 486, 487, 490, 596, 600, 647, 667, 743, 751, 753, 802, 914, 915, 918, 1009, 1055, 1118], "thumbsdown": 32, "thumbsup": 32, "wink": 32, "1_tone1": 32, "1_tone2": 32, "1_tone3": 32, "1_tone4": 32, "1_tone5": 32, "1st_place_med": 32, "2nd_place_med": 32, "3rd_place_med": 32, "8ball": 32, "abacu": 32, "abcd": [32, 240, 246, 262, 282, 324], "ac": [32, 200, 238], "accordion": 32, "adhesive_bandag": 32, "admission_ticket": 32, "adult": [32, 1107], "adult_dark_skin_ton": 32, "adult_light_skin_ton": 32, "adult_medium_dark_skin_ton": 32, "adult_medium_light_skin_ton": 32, "adult_medium_skin_ton": 32, "adult_tone1": 32, "adult_tone2": 32, "adult_tone3": 32, "adult_tone4": 32, "adult_tone5": 32, "ae": [32, 200], "aerial_tramwai": 32, "af": [32, 200], "afghanistan": 32, "ai": [32, 226, 1195, 1202], "airplan": [32, 985], "airplane_arriv": 32, "airplane_departur": 32, "airplane_smal": 32, "aland_island": 32, "alarm_clock": 32, "albania": 32, "alemb": 32, "algeria": 32, "alien": 32, "ambul": 32, "american_samoa": 32, "amphora": 32, "anatomical_heart": 32, "anchor": 32, "andorra": 32, "angel": [32, 314], "angel_tone1": 32, "angel_tone2": 32, "angel_tone3": 32, "angel_tone4": 32, "angel_tone5": 32, "anger": 32, "anger_right": 32, "angola": 32, "angri": 32, "anguilla": 32, "anguish": 32, "ant": 32, "antarctica": 32, "antigua_barbuda": 32, "ao": 32, "appl": [32, 524, 1062, 1129], "aq": 32, "aquariu": 32, "archeri": 32, "argentina": 32, "ari": [32, 35, 38], "armenia": 32, "arrow_backward": 32, "arrow_double_down": 32, "arrow_double_up": 32, "arrow_down": 32, "arrow_down_smal": 32, "arrow_forward": 32, "arrow_heading_down": 32, "arrow_heading_up": 32, "arrow_left": 32, "arrow_lower_left": 32, "arrow_lower_right": 32, "arrow_right": 32, "arrow_right_hook": 32, "arrow_up": 32, "arrow_up_down": 32, "arrow_up_smal": 32, "arrow_upper_left": 32, "arrow_upper_right": 32, "arrows_clockwis": 32, "arrows_counterclockwis": 32, "articulated_lorri": 32, "artificial_satellit": 32, "artist": 32, "artist_dark_skin_ton": 32, "artist_light_skin_ton": 32, "artist_medium_dark_skin_ton": 32, "artist_medium_light_skin_ton": 32, "artist_medium_skin_ton": 32, "artist_tone1": 32, "artist_tone2": 32, "artist_tone3": 32, "artist_tone4": 32, "artist_tone5": 32, "aruba": 32, "ascens": 32, "astronaut": 32, "astronaut_dark_skin_ton": 32, "astronaut_light_skin_ton": 32, "astronaut_medium_dark_skin_ton": 32, "astronaut_medium_light_skin_ton": 32, "astronaut_medium_skin_ton": 32, "astronaut_tone1": 32, "astronaut_tone2": 32, "astronaut_tone3": 32, "astronaut_tone4": 32, "astronaut_tone5": 32, "athletic_sho": 32, "atm": 32, "atom": [32, 78, 90, 213, 268, 293, 294, 295, 297, 306, 317, 354, 355, 373, 374, 620, 753, 802, 815, 816, 839, 840, 849, 854, 857, 859, 864, 867, 868, 870, 873, 874, 878, 879, 880, 882, 884, 889, 892, 893, 896, 897, 898, 902, 905, 907, 908, 984, 1024, 1034, 1035, 1098, 1241], "atom_symbol": 32, "australia": 32, "austria": [32, 190, 415], "auto_rickshaw": 32, "avocado": 32, "aw": 32, "ax": [32, 211, 1083], "az": 32, "azerbaijan": 32, "ba": [32, 200], "babi": 32, "baby_bottl": 32, "baby_chick": 32, "baby_symbol": 32, "baby_tone1": 32, "baby_tone2": 32, "baby_tone3": 32, "baby_tone4": 32, "baby_tone5": 32, "back_of_hand": 32, "back_of_hand_tone1": 32, "back_of_hand_tone2": 32, "back_of_hand_tone3": 32, "back_of_hand_tone4": 32, "back_of_hand_tone5": 32, "bacon": 32, "badger": 32, "badminton": 32, "bagel": 32, "baggage_claim": 32, "baguette_bread": 32, "bahama": 32, "bahrain": 32, "balance_scal": 32, "bald": 32, "ballet_sho": 32, "balloon": 32, "ballot_box": 32, "ballot_box_with_ballot": 32, "ballot_box_with_check": 32, "bamboo": 32, "banana": 32, "bangbang": 32, "bangladesh": 32, "banjo": 32, "bank": [32, 506], "bar_chart": 32, "barbado": 32, "barber": 32, "basebal": 32, "basket": 32, "basketbal": 32, "basketball_man": 32, "basketball_play": 32, "basketball_player_tone1": 32, "basketball_player_tone2": 32, "basketball_player_tone3": 32, "basketball_player_tone4": 32, "basketball_player_tone5": 32, "basketball_woman": 32, "bat": [32, 1223], "bath": 32, "bath_tone1": 32, "bath_tone2": 32, "bath_tone3": 32, "bath_tone4": 32, "bath_tone5": 32, "bathtub": 32, "batteri": [32, 91, 222, 397, 985, 1110, 1111, 1112, 1138, 1217], "bb": [32, 182, 193, 992], "bd": [32, 200], "beach": 32, "beach_umbrella": 32, "beach_with_umbrella": 32, "bear": [32, 1033, 1211], "bearded_person": 32, "bearded_person_dark_skin_ton": 32, "bearded_person_light_skin_ton": 32, "bearded_person_medium_dark_skin_ton": 32, "bearded_person_medium_light_skin_ton": 32, "bearded_person_medium_skin_ton": 32, "bearded_person_tone1": 32, "bearded_person_tone2": 32, "bearded_person_tone3": 32, "bearded_person_tone4": 32, "bearded_person_tone5": 32, "beaver": 32, "bed": 32, "bee": 32, "beer": [32, 484], "beetl": 32, "belaru": 32, "belgium": 32, "beliz": 32, "bell": [32, 1106, 1109], "bell_pepp": 32, "bellhop": 32, "bellhop_bel": 32, "benin": 32, "bento": 32, "bermuda": 32, "beverage_box": 32, "bf": [32, 200], "bg": [32, 506], "bh": 32, "bhutan": 32, "bicyclist": 32, "bicyclist_tone1": 32, "bicyclist_tone2": 32, "bicyclist_tone3": 32, "bicyclist_tone4": 32, "bicyclist_tone5": 32, "bike": 32, "biking_man": 32, "biking_woman": 32, "bikini": 32, "billed_cap": 32, "biohazard": 32, "biohazard_sign": 32, "bird": 32, "birthdai": [32, 231, 733], "bison": [32, 201, 867, 992, 1077], "bj": 32, "bl": 32, "black_cat": 32, "black_circl": 32, "black_flag": 32, "black_heart": 32, "black_jok": 32, "black_large_squar": 32, "black_medium_small_squar": 32, "black_medium_squar": 32, "black_nib": 32, "black_small_squar": 32, "black_square_button": 32, "blond": 32, "haired_man": 32, "haired_man_dark_skin_ton": 32, "haired_man_light_skin_ton": 32, "haired_man_medium_dark_skin_ton": 32, "haired_man_medium_light_skin_ton": 32, "haired_man_medium_skin_ton": 32, "haired_man_tone1": 32, "haired_man_tone2": 32, "haired_man_tone3": 32, "haired_man_tone4": 32, "haired_man_tone5": 32, "haired_woman": 32, "haired_woman_dark_skin_ton": 32, "haired_woman_light_skin_ton": 32, "haired_woman_medium_dark_skin_ton": 32, "haired_woman_medium_light_skin_ton": 32, "haired_woman_medium_skin_ton": 32, "haired_woman_tone1": 32, "haired_woman_tone2": 32, "haired_woman_tone3": 32, "haired_woman_tone4": 32, "haired_woman_tone5": 32, "blond_haired_person": 32, "blond_haired_person_tone1": 32, "blond_haired_person_tone2": 32, "blond_haired_person_tone3": 32, "blond_haired_person_tone4": 32, "blond_haired_person_tone5": 32, "blonde_man": 32, "blonde_woman": 32, "blossom": 32, "blowfish": 32, "blue_book": 32, "blue_car": 32, "blue_circl": 32, "blue_heart": 32, "blue_squar": 32, "blueberri": 32, "blush": 32, "bm": 32, "bn": 32, "bo": [32, 1100], "boar": 32, "boat": 32, "bolivia": 32, "bomb": 32, "bone": 32, "bookmark": [32, 1200], "bookmark_tab": 32, "boom": [32, 771, 788], "boomerang": 32, "boot": [32, 180, 191, 193, 197, 209, 310, 500, 818, 860, 865, 883, 887, 897, 926, 992, 993, 994, 1236], "bosnia_herzegovina": 32, "botswana": 32, "bottle_with_popping_cork": 32, "bouquet": 32, "bouvet_island": 32, "bow": 32, "bow_and_arrow": 32, "bow_tone1": 32, "bow_tone2": 32, "bow_tone3": 32, "bow_tone4": 32, "bow_tone5": 32, "bowing_man": 32, "bowing_woman": 32, "bowl_with_spoon": 32, "bowl": 32, "boxing_glov": 32, "boi": 32, "boy_tone1": 32, "boy_tone2": 32, "boy_tone3": 32, "boy_tone4": 32, "boy_tone5": 32, "bq": 32, "br": [32, 288, 346], "brain": [32, 61, 63], "brazil": 32, "bread": 32, "breast_feed": 32, "breast_feeding_dark_skin_ton": 32, "breast_feeding_light_skin_ton": 32, "breast_feeding_medium_dark_skin_ton": 32, "breast_feeding_medium_light_skin_ton": 32, "breast_feeding_medium_skin_ton": 32, "breast_feeding_tone1": 32, "breast_feeding_tone2": 32, "breast_feeding_tone3": 32, "breast_feeding_tone4": 32, "breast_feeding_tone5": 32, "brick": [32, 189, 202], "bride_with_veil": 32, "bride_with_veil_tone1": 32, "bride_with_veil_tone2": 32, "bride_with_veil_tone3": 32, "bride_with_veil_tone4": 32, "bride_with_veil_tone5": 32, "bridge_at_night": 32, "briefcas": 32, "brief": [32, 498, 948], "british_indian_ocean_territori": 32, "british_virgin_island": 32, "broccoli": 32, "broken_heart": 32, "broom": 32, "brown_circl": 32, "brown_heart": 32, "brown_squar": 32, "brunei": 32, "bt": 32, "bubble_tea": 32, "bucket": [32, 858], "bug": [32, 46, 55, 56, 109, 171, 191, 192, 193, 233, 252, 268, 279, 406, 462, 464, 465, 480, 485, 487, 491, 504, 508, 535, 625, 627, 629, 637, 643, 644, 647, 652, 714, 717, 771, 781, 800, 817, 840, 877, 1006, 1037, 1046, 1047, 1080, 1100, 1101, 1115, 1118], "building_construct": 32, "bulb": 32, "bulgaria": 32, "bullettrain_front": 32, "bullettrain_sid": 32, "burkina_faso": 32, "burrito": 32, "burundi": 32, "bu": [32, 66, 67, 83, 127, 152, 237, 262, 278, 285, 287, 288, 303, 306, 310, 320, 324, 346, 352, 358, 364, 542, 556, 571, 585, 601, 602, 840, 858, 883, 948, 984, 986, 991, 992, 993, 1022, 1028, 1085, 1187, 1245, 1252, 1256, 1258], "business_suit_levit": 32, "busstop": 32, "bust_in_silhouett": 32, "busts_in_silhouett": 32, "butter": 32, "butterfli": 32, "bv": 32, "bw": 32, "bz": 32, "cactu": 32, "cake": 32, "calendar": 32, "calendar_spir": 32, "call_m": 32, "call_me_hand": 32, "call_me_hand_tone1": 32, "call_me_hand_tone2": 32, "call_me_hand_tone3": 32, "call_me_hand_tone4": 32, "call_me_hand_tone5": 32, "call_me_tone1": 32, "call_me_tone2": 32, "call_me_tone3": 32, "call_me_tone4": 32, "call_me_tone5": 32, "cambodia": 32, "camel": 32, "camera": [32, 33, 144, 147, 195, 197, 993], "camera_flash": 32, "camera_with_flash": 32, "cameroon": 32, "camp": 32, "canada": 32, "canary_island": 32, "cancer": 32, "candl": 32, "candi": 32, "canned_food": 32, "cano": 32, "cape_verd": 32, "capital_abcd": 32, "capricorn": 32, "car": [32, 308, 506, 985], "card_box": 32, "card_file_box": 32, "card_index": 32, "card_index_divid": 32, "caribbean_netherland": 32, "carousel_hors": 32, "carpentry_saw": 32, "carrot": 32, "cartwheel": 32, "cartwheel_tone1": 32, "cartwheel_tone2": 32, "cartwheel_tone3": 32, "cartwheel_tone4": 32, "cartwheel_tone5": 32, "cat2": 32, "cat": [32, 148, 152, 171, 192, 196, 230, 242, 296, 305, 306, 308, 326, 327, 370, 371, 382, 383, 482, 506, 507, 601, 840, 845, 850, 867, 887, 903, 914, 915, 917, 918, 928, 930, 932, 960, 967, 975, 976, 978, 979, 981, 984, 985, 992, 993, 994, 995, 1019, 1021, 1022, 1026, 1050, 1056, 1059, 1247], "cayman_island": 32, "cd": [32, 60, 66, 176, 193, 194, 196, 197, 200, 201, 205, 218, 219, 252, 262, 282, 290, 295, 297, 383, 397, 402, 534, 599, 602, 662, 860, 862, 887, 888, 911, 913, 914, 915, 918, 925, 933, 938, 940, 948, 972, 985, 992, 993, 1001, 1014, 1063, 1064, 1077, 1078, 1143], "central_african_republ": 32, "ceuta_melilla": 32, "cf": [32, 352, 913, 1031], "cg": 32, "ch": 32, "chad": 32, "chain": [32, 183, 189, 200, 210, 272, 289, 484, 526, 892, 1041], "chair": [32, 222], "champagn": 32, "champagne_glass": 32, "chart": [32, 236, 251, 260, 273, 287, 290, 323, 329, 1188, 1195], "chart_with_downwards_trend": 32, "chart_with_upwards_trend": 32, "checkered_flag": 32, "chees": 32, "cheese_wedg": 32, "cherri": 32, "cherry_blossom": 32, "chess_pawn": 32, "chestnut": 32, "chicken": 32, "child": [32, 101, 148, 207, 296, 305, 306, 326, 327, 370, 371, 520, 526, 838, 840, 917, 919, 922, 923, 934, 937, 938, 939, 940, 941, 942, 943, 952, 953, 954, 957, 959, 960, 984, 996, 997, 998, 999, 1000, 1025, 1031, 1038, 1043, 1060, 1073, 1074, 1104, 1213], "child_dark_skin_ton": 32, "child_light_skin_ton": 32, "child_medium_dark_skin_ton": 32, "child_medium_light_skin_ton": 32, "child_medium_skin_ton": 32, "child_tone1": 32, "child_tone2": 32, "child_tone3": 32, "child_tone4": 32, "child_tone5": 32, "children_cross": 32, "chile": 32, "china": 32, "chipmunk": 32, "chocolate_bar": 32, "chopstick": 32, "christmas_island": 32, "christmas_tre": 32, "church": 32, "ci": [32, 1221], "cinema": 32, "circus_t": 32, "city_dusk": 32, "city_sunris": 32, "city_sunset": 32, "cityscap": 32, "ck": 32, "cl": [32, 278, 303, 1103, 1104], "clamp": 32, "clap": 32, "clap_tone1": 32, "clap_tone2": 32, "clap_tone3": 32, "clap_tone4": 32, "clap_tone5": 32, "clapper": 32, "classical_build": 32, "clinking_glass": 32, "clipboard": 32, "clipperton_island": 32, "clock1030": 32, "clock10": 32, "clock1130": 32, "clock11": 32, "clock1230": 32, "clock12": 32, "clock130": 32, "clock1": 32, "clock230": 32, "clock2": 32, "clock330": 32, "clock3": 32, "clock430": 32, "clock4": 32, "clock530": 32, "clock5": 32, "clock630": 32, "clock6": 32, "clock730": 32, "clock7": 32, "clock830": 32, "clock8": 32, "clock930": 32, "clock9": 32, "clock": [32, 138, 265, 266, 493, 987, 992], "closed_book": 32, "closed_lock_with_kei": 32, "closed_umbrella": 32, "cloud": [32, 103, 197, 242, 266, 396, 397, 400, 746, 748, 1001, 1192, 1193, 1216], "cloud_lightn": 32, "cloud_rain": 32, "cloud_snow": 32, "cloud_tornado": 32, "cloud_with_lightn": 32, "cloud_with_lightning_and_rain": 32, "cloud_with_rain": 32, "cloud_with_snow": 32, "cloud_with_tornado": 32, "clown": 32, "clown_fac": 32, "club": [32, 38], "cm": 32, "cn": [32, 200], "coat": 32, "cockroach": 32, "cocktail": 32, "coconut": [32, 314], "cocos_island": 32, "coffe": [32, 193, 717, 992], "coffin": 32, "coin": 32, "cold_fac": 32, "cold_sweat": 32, "colombia": 32, "comet": 32, "comoro": 32, "compass": 32, "compress": [32, 124, 191, 205, 296, 305, 306, 326, 370, 840, 911, 917, 984, 1073, 1074, 1075, 1078], "computer_mous": 32, "confetti_bal": 32, "confound": 32, "confus": [32, 190, 194, 222, 251, 439, 447, 493, 518, 524, 526, 660, 670, 747, 758, 1065, 1129, 1214], "congo": 32, "congo_brazzavil": 32, "congo_kinshasa": 32, "congratul": 32, "construct": [32, 222, 228, 309, 312, 374, 442, 455, 465, 494, 504, 628, 679, 698, 699, 756, 804, 1101, 1108, 1125, 1136], "construction_sit": 32, "construction_work": 32, "construction_worker_man": 32, "construction_worker_tone1": 32, "construction_worker_tone2": 32, "construction_worker_tone3": 32, "construction_worker_tone4": 32, "construction_worker_tone5": 32, "construction_worker_woman": 32, "control_knob": 32, "convenience_stor": 32, "cook": [32, 306], "cook_dark_skin_ton": 32, "cook_island": 32, "cook_light_skin_ton": 32, "cook_medium_dark_skin_ton": 32, "cook_medium_light_skin_ton": 32, "cook_medium_skin_ton": 32, "cook_tone1": 32, "cook_tone2": 32, "cook_tone3": 32, "cook_tone4": 32, "cook_tone5": 32, "cooki": [32, 869, 883], "cool": [32, 176, 191, 192, 195, 197, 205, 210, 211, 222, 223, 226, 241, 306, 319, 372, 415, 500, 506, 519, 522, 554, 563, 700, 743, 744, 760, 763, 782, 792, 795, 817, 887, 944, 994, 1080, 1084, 1087, 1104, 1123, 1137, 1188, 1195, 1200, 1241], "cop": 32, "cop_tone1": 32, "cop_tone2": 32, "cop_tone3": 32, "cop_tone4": 32, "cop_tone5": 32, "copyright": [32, 36, 201, 242, 259, 265, 275, 278, 303, 390, 394, 652, 802, 1113], "corn": 32, "costa_rica": 32, "cote_divoir": 32, "couch": 32, "couch_and_lamp": 32, "coupl": [32, 43, 144, 189, 190, 191, 192, 197, 210, 222, 226, 418, 455, 489, 494, 791, 981, 1016, 1035], "couple_mm": 32, "couple_with_heart": 32, "couple_with_heart_dark_skin_ton": 32, "couple_with_heart_light_skin_ton": 32, "couple_with_heart_man_man": 32, "couple_with_heart_man_man_dark_skin_ton": 32, "couple_with_heart_man_man_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_man_man_dark_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_man_man_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_man_man_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_man_man_light_skin_ton": 32, "couple_with_heart_man_man_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_man_man_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_man_man_light_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_man_man_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_man_man_medium_dark_skin_ton": 32, "couple_with_heart_man_man_medium_dark_skin_tone_dark_skin_ton": 32, "couple_with_heart_man_man_medium_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_man_man_medium_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_man_man_medium_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_man_man_medium_light_skin_ton": 32, "couple_with_heart_man_man_medium_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_man_man_medium_light_skin_tone_light_skin_ton": 32, "couple_with_heart_man_man_medium_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_man_man_medium_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_man_man_medium_skin_ton": 32, "couple_with_heart_man_man_medium_skin_tone_dark_skin_ton": 32, "couple_with_heart_man_man_medium_skin_tone_light_skin_ton": 32, "couple_with_heart_man_man_medium_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_man_man_medium_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_man_man_tone1": 32, "couple_with_heart_man_man_tone1_tone2": 32, "couple_with_heart_man_man_tone1_tone3": 32, "couple_with_heart_man_man_tone1_tone4": 32, "couple_with_heart_man_man_tone1_tone5": 32, "couple_with_heart_man_man_tone2": 32, "couple_with_heart_man_man_tone2_tone1": 32, "couple_with_heart_man_man_tone2_tone3": 32, "couple_with_heart_man_man_tone2_tone4": 32, "couple_with_heart_man_man_tone2_tone5": 32, "couple_with_heart_man_man_tone3": 32, "couple_with_heart_man_man_tone3_tone1": 32, "couple_with_heart_man_man_tone3_tone2": 32, "couple_with_heart_man_man_tone3_tone4": 32, "couple_with_heart_man_man_tone3_tone5": 32, "couple_with_heart_man_man_tone4": 32, "couple_with_heart_man_man_tone4_tone1": 32, "couple_with_heart_man_man_tone4_tone2": 32, "couple_with_heart_man_man_tone4_tone3": 32, "couple_with_heart_man_man_tone4_tone5": 32, "couple_with_heart_man_man_tone5": 32, "couple_with_heart_man_man_tone5_tone1": 32, "couple_with_heart_man_man_tone5_tone2": 32, "couple_with_heart_man_man_tone5_tone3": 32, "couple_with_heart_man_man_tone5_tone4": 32, "couple_with_heart_medium_dark_skin_ton": 32, "couple_with_heart_medium_light_skin_ton": 32, "couple_with_heart_medium_skin_ton": 32, "couple_with_heart_mm": 32, "couple_with_heart_person_person_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_person_person_dark_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_person_person_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_person_person_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_person_person_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_person_person_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_person_person_light_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_person_person_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_person_person_medium_dark_skin_tone_dark_skin_ton": 32, "couple_with_heart_person_person_medium_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_person_person_medium_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_person_person_medium_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_person_person_medium_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_person_person_medium_light_skin_tone_light_skin_ton": 32, "couple_with_heart_person_person_medium_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_person_person_medium_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_person_person_medium_skin_tone_dark_skin_ton": 32, "couple_with_heart_person_person_medium_skin_tone_light_skin_ton": 32, "couple_with_heart_person_person_medium_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_person_person_medium_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_person_person_tone1_tone2": 32, "couple_with_heart_person_person_tone1_tone3": 32, "couple_with_heart_person_person_tone1_tone4": 32, "couple_with_heart_person_person_tone1_tone5": 32, "couple_with_heart_person_person_tone2_tone1": 32, "couple_with_heart_person_person_tone2_tone3": 32, "couple_with_heart_person_person_tone2_tone4": 32, "couple_with_heart_person_person_tone2_tone5": 32, "couple_with_heart_person_person_tone3_tone1": 32, "couple_with_heart_person_person_tone3_tone2": 32, "couple_with_heart_person_person_tone3_tone4": 32, "couple_with_heart_person_person_tone3_tone5": 32, "couple_with_heart_person_person_tone4_tone1": 32, "couple_with_heart_person_person_tone4_tone2": 32, "couple_with_heart_person_person_tone4_tone3": 32, "couple_with_heart_person_person_tone4_tone5": 32, "couple_with_heart_person_person_tone5_tone1": 32, "couple_with_heart_person_person_tone5_tone2": 32, "couple_with_heart_person_person_tone5_tone3": 32, "couple_with_heart_person_person_tone5_tone4": 32, "couple_with_heart_tone1": 32, "couple_with_heart_tone2": 32, "couple_with_heart_tone3": 32, "couple_with_heart_tone4": 32, "couple_with_heart_tone5": 32, "couple_with_heart_woman_man": 32, "couple_with_heart_woman_man_dark_skin_ton": 32, "couple_with_heart_woman_man_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_man_dark_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_man_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_man_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_man_light_skin_ton": 32, "couple_with_heart_woman_man_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_man_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_man_light_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_man_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_man_medium_dark_skin_ton": 32, "couple_with_heart_woman_man_medium_dark_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_man_medium_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_man_medium_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_man_medium_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_man_medium_light_skin_ton": 32, "couple_with_heart_woman_man_medium_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_man_medium_light_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_man_medium_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_man_medium_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_man_medium_skin_ton": 32, "couple_with_heart_woman_man_medium_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_man_medium_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_man_medium_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_man_medium_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_man_tone1": 32, "couple_with_heart_woman_man_tone1_tone2": 32, "couple_with_heart_woman_man_tone1_tone3": 32, "couple_with_heart_woman_man_tone1_tone4": 32, "couple_with_heart_woman_man_tone1_tone5": 32, "couple_with_heart_woman_man_tone2": 32, "couple_with_heart_woman_man_tone2_tone1": 32, "couple_with_heart_woman_man_tone2_tone3": 32, "couple_with_heart_woman_man_tone2_tone4": 32, "couple_with_heart_woman_man_tone2_tone5": 32, "couple_with_heart_woman_man_tone3": 32, "couple_with_heart_woman_man_tone3_tone1": 32, "couple_with_heart_woman_man_tone3_tone2": 32, "couple_with_heart_woman_man_tone3_tone4": 32, "couple_with_heart_woman_man_tone3_tone5": 32, "couple_with_heart_woman_man_tone4": 32, "couple_with_heart_woman_man_tone4_tone1": 32, "couple_with_heart_woman_man_tone4_tone2": 32, "couple_with_heart_woman_man_tone4_tone3": 32, "couple_with_heart_woman_man_tone4_tone5": 32, "couple_with_heart_woman_man_tone5": 32, "couple_with_heart_woman_man_tone5_tone1": 32, "couple_with_heart_woman_man_tone5_tone2": 32, "couple_with_heart_woman_man_tone5_tone3": 32, "couple_with_heart_woman_man_tone5_tone4": 32, "couple_with_heart_woman_woman": 32, "couple_with_heart_woman_woman_dark_skin_ton": 32, "couple_with_heart_woman_woman_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_woman_dark_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_woman_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_woman_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_woman_light_skin_ton": 32, "couple_with_heart_woman_woman_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_woman_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_woman_light_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_woman_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_woman_medium_dark_skin_ton": 32, "couple_with_heart_woman_woman_medium_dark_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_woman_medium_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_woman_medium_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_woman_medium_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_woman_medium_light_skin_ton": 32, "couple_with_heart_woman_woman_medium_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_woman_medium_light_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_woman_medium_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_woman_medium_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_woman_medium_skin_ton": 32, "couple_with_heart_woman_woman_medium_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_woman_medium_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_woman_medium_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_woman_medium_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_woman_tone1": 32, "couple_with_heart_woman_woman_tone1_tone2": 32, "couple_with_heart_woman_woman_tone1_tone3": 32, "couple_with_heart_woman_woman_tone1_tone4": 32, "couple_with_heart_woman_woman_tone1_tone5": 32, "couple_with_heart_woman_woman_tone2": 32, "couple_with_heart_woman_woman_tone2_tone1": 32, "couple_with_heart_woman_woman_tone2_tone3": 32, "couple_with_heart_woman_woman_tone2_tone4": 32, "couple_with_heart_woman_woman_tone2_tone5": 32, "couple_with_heart_woman_woman_tone3": 32, "couple_with_heart_woman_woman_tone3_tone1": 32, "couple_with_heart_woman_woman_tone3_tone2": 32, "couple_with_heart_woman_woman_tone3_tone4": 32, "couple_with_heart_woman_woman_tone3_tone5": 32, "couple_with_heart_woman_woman_tone4": 32, "couple_with_heart_woman_woman_tone4_tone1": 32, "couple_with_heart_woman_woman_tone4_tone2": 32, "couple_with_heart_woman_woman_tone4_tone3": 32, "couple_with_heart_woman_woman_tone4_tone5": 32, "couple_with_heart_woman_woman_tone5": 32, "couple_with_heart_woman_woman_tone5_tone1": 32, "couple_with_heart_woman_woman_tone5_tone2": 32, "couple_with_heart_woman_woman_tone5_tone3": 32, "couple_with_heart_woman_woman_tone5_tone4": 32, "couple_with_heart_ww": 32, "couple_ww": 32, "couplekiss": 32, "couplekiss_man_man": 32, "couplekiss_man_woman": 32, "couplekiss_mm": 32, "couplekiss_woman_woman": 32, "couplekiss_ww": 32, "cow2": 32, "cow": 32, "cowboi": 32, "cowboy_hat_fac": 32, "cp": [32, 101, 126, 148, 191, 193, 196, 230, 232, 296, 305, 306, 326, 327, 370, 371, 397, 402, 840, 887, 914, 915, 916, 917, 918, 948, 952, 953, 955, 956, 959, 960, 962, 968, 984, 992, 1004, 1015, 1077, 1247], "cr": [32, 1137], "crab": 32, "crayon": 32, "credit_card": 32, "crescent_moon": 32, "cricket": 32, "cricket_bat_bal": 32, "cricket_gam": 32, "croatia": 32, "crocodil": 32, "croissant": 32, "cross": [32, 38, 105, 106, 108, 134, 148, 150, 151, 159, 163, 189, 202, 226, 320, 332, 333, 348, 349, 377, 398, 399, 400, 517, 526, 548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 601, 602, 642, 816, 839, 840, 917, 920, 921, 922, 984, 1007, 1013, 1015, 1022, 1023, 1025, 1039, 1042, 1045, 1047, 1064, 1070, 1071, 1072, 1074, 1077, 1243], "crossed_fing": 32, "crossed_flag": 32, "crossed_sword": 32, "crown": 32, "cruise_ship": 32, "cry": [32, 190], "crying_cat_fac": 32, "crystal_bal": 32, "cu": 32, "cuba": 32, "cucumb": 32, "cup_with_straw": 32, "cupcak": 32, "cupid": 32, "curacao": 32, "curling_ston": 32, "curly_hair": 32, "curly_loop": 32, "currency_exchang": 32, "curri": [32, 251], "custard": 32, "cut_of_meat": 32, "cw": 32, "cx": 32, "cy": 32, "cyclon": 32, "cypru": 32, "cz": 32, "czech_republ": 32, "dagger": [32, 38], "dagger_knif": 32, "dancer": 32, "dancer_tone1": 32, "dancer_tone2": 32, "dancer_tone3": 32, "dancer_tone4": 32, "dancer_tone5": 32, "dancing_men": 32, "dancing_women": 32, "dango": 32, "dark_sunglass": 32, "dart": 32, "dash": [32, 34, 35, 38, 686], "date": [32, 124, 187, 193, 201, 205, 222, 228, 258, 290, 306, 308, 351, 410, 411, 506, 888, 1082, 1177, 1179, 1183, 1185, 1192, 1197], "deaf_man": 32, "deaf_man_dark_skin_ton": 32, "deaf_man_light_skin_ton": 32, "deaf_man_medium_dark_skin_ton": 32, "deaf_man_medium_light_skin_ton": 32, "deaf_man_medium_skin_ton": 32, "deaf_man_tone1": 32, "deaf_man_tone2": 32, "deaf_man_tone3": 32, "deaf_man_tone4": 32, "deaf_man_tone5": 32, "deaf_person": 32, "deaf_person_dark_skin_ton": 32, "deaf_person_light_skin_ton": 32, "deaf_person_medium_dark_skin_ton": 32, "deaf_person_medium_light_skin_ton": 32, "deaf_person_medium_skin_ton": 32, "deaf_person_tone1": 32, "deaf_person_tone2": 32, "deaf_person_tone3": 32, "deaf_person_tone4": 32, "deaf_person_tone5": 32, "deaf_woman": 32, "deaf_woman_dark_skin_ton": 32, "deaf_woman_light_skin_ton": 32, "deaf_woman_medium_dark_skin_ton": 32, "deaf_woman_medium_light_skin_ton": 32, "deaf_woman_medium_skin_ton": 32, "deaf_woman_tone1": 32, "deaf_woman_tone2": 32, "deaf_woman_tone3": 32, "deaf_woman_tone4": 32, "deaf_woman_tone5": 32, "deciduous_tre": 32, "deer": 32, "denmark": 32, "department_stor": 32, "derelict_hous": 32, "derelict_house_build": 32, "desert": 32, "desert_island": 32, "desktop": [32, 171, 178, 190, 195, 251, 320, 970, 1047, 1245, 1252], "desktop_comput": 32, "detective_tone1": 32, "detective_tone2": 32, "detective_tone3": 32, "detective_tone4": 32, "detective_tone5": 32, "dg": 32, "diamond_shape_with_a_dot_insid": 32, "diamond": [32, 34, 38, 250, 263], "diego_garcia": 32, "digit_eight": 32, "digit_f": 32, "digit_four": 32, "digit_nin": 32, "digit_on": 32, "digit_seven": 32, "digit_six": 32, "digit_thre": 32, "digit_two": 32, "digit_zero": 32, "disappoint": 32, "disappointed_reliev": 32, "disguised_fac": 32, "divid": [32, 35, 36, 38, 282, 1195], "diving_mask": 32, "diya_lamp": 32, "dizzi": 32, "dizzy_fac": 32, "dj": 32, "djibouti": 32, "dk": 32, "dm": 32, "dna": 32, "do_not_litt": 32, "dodo": 32, "dog2": 32, "dog": [32, 482], "dollar": [32, 36], "doll": 32, "dolphin": 32, "dominica": 32, "dominican_republ": 32, "door": [32, 268, 620, 877, 1097], "double_vertical_bar": 32, "doughnut": 32, "dove": 32, "dove_of_peac": 32, "dragon": [32, 99, 252, 268, 315, 317, 355, 374, 380, 620, 644, 645, 650, 740, 752, 754, 783, 788, 799, 803, 808, 816, 837, 839, 840, 1059], "dragon_fac": 32, "dress": [32, 187], "dromedary_camel": 32, "drool": 32, "drooling_fac": 32, "drop_of_blood": 32, "droplet": 32, "drum": 32, "drum_with_drumstick": 32, "dumpl": 32, "dvd": 32, "dz": 32, "mail": [32, 187, 262, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364, 979, 1201, 1235], "ea": [32, 200], "eagl": [32, 262, 1145], "ear": 32, "ear_of_ric": 32, "ear_tone1": 32, "ear_tone2": 32, "ear_tone3": 32, "ear_tone4": 32, "ear_tone5": 32, "ear_with_hearing_aid": 32, "ear_with_hearing_aid_dark_skin_ton": 32, "ear_with_hearing_aid_light_skin_ton": 32, "ear_with_hearing_aid_medium_dark_skin_ton": 32, "ear_with_hearing_aid_medium_light_skin_ton": 32, "ear_with_hearing_aid_medium_skin_ton": 32, "ear_with_hearing_aid_tone1": 32, "ear_with_hearing_aid_tone2": 32, "ear_with_hearing_aid_tone3": 32, "ear_with_hearing_aid_tone4": 32, "ear_with_hearing_aid_tone5": 32, "earth_africa": 32, "earth_america": 32, "earth_asia": 32, "ec": [32, 99, 200, 242, 394, 397, 402, 405, 414, 840, 916, 917, 948, 984], "ecuador": 32, "ee": [32, 200], "eg": [32, 35, 131], "egg": [32, 60, 1131], "eggplant": 32, "egypt": 32, "eight": [32, 135, 192, 210, 223, 233, 241, 270, 272, 358, 397, 994, 1201], "eight_pointed_black_star": 32, "eight_spoked_asterisk": 32, "eject": 32, "eject_symbol": 32, "el_salvador": 32, "electric_plug": 32, "eleph": 32, "elev": 32, "elf": [32, 198, 201, 233, 249, 259, 537, 628, 1031, 1062, 1063, 1065, 1080, 1114, 1255], "elf_dark_skin_ton": 32, "elf_light_skin_ton": 32, "elf_medium_dark_skin_ton": 32, "elf_medium_light_skin_ton": 32, "elf_medium_skin_ton": 32, "elf_tone1": 32, "elf_tone2": 32, "elf_tone3": 32, "elf_tone4": 32, "elf_tone5": 32, "england": 32, "envelop": [32, 887], "envelope_with_arrow": 32, "equatorial_guinea": 32, "er": [32, 199, 208, 223, 225, 233, 270, 1236, 1237, 1238], "eritrea": 32, "estonia": 32, "et": [32, 99, 512, 652, 802, 1008, 1063, 1064, 1106], "ethiopia": 32, "euro": [32, 568, 569, 570, 582, 583, 584], "european_castl": 32, "european_post_offic": 32, "european_union": 32, "evergreen_tre": 32, "exclam": [32, 36], "expecting_woman": 32, "expecting_woman_tone1": 32, "expecting_woman_tone2": 32, "expecting_woman_tone3": 32, "expecting_woman_tone4": 32, "expecting_woman_tone5": 32, "exploding_head": 32, "expressionless": 32, "eye_in_speech_bubbl": 32, "eye_speech_bubbl": 32, "eyeglass": 32, "face_exh": 32, "face_in_cloud": 32, "face_palm": 32, "face_palm_tone1": 32, "face_palm_tone2": 32, "face_palm_tone3": 32, "face_palm_tone4": 32, "face_palm_tone5": 32, "face_vomit": 32, "face_with_cowboy_hat": 32, "face_with_hand_over_mouth": 32, "face_with_head_bandag": 32, "face_with_monocl": 32, "face_with_rolling_ey": 32, "face_with_spiral_ey": 32, "face_with_symbols_over_mouth": 32, "face_with_thermomet": 32, "facepalm": 32, "facepalm_tone1": 32, "facepalm_tone2": 32, "facepalm_tone3": 32, "facepalm_tone4": 32, "facepalm_tone5": 32, "factori": [32, 108, 250, 263, 298, 317, 373, 380, 406, 541, 548, 562, 576, 590, 642, 840, 1014, 1244], "factory_work": 32, "factory_worker_dark_skin_ton": 32, "factory_worker_light_skin_ton": 32, "factory_worker_medium_dark_skin_ton": 32, "factory_worker_medium_light_skin_ton": 32, "factory_worker_medium_skin_ton": 32, "factory_worker_tone1": 32, "factory_worker_tone2": 32, "factory_worker_tone3": 32, "factory_worker_tone4": 32, "factory_worker_tone5": 32, "fairi": 32, "fairy_dark_skin_ton": 32, "fairy_light_skin_ton": 32, "fairy_medium_dark_skin_ton": 32, "fairy_medium_light_skin_ton": 32, "fairy_medium_skin_ton": 32, "fairy_tone1": 32, "fairy_tone2": 32, "fairy_tone3": 32, "fairy_tone4": 32, "fairy_tone5": 32, "falafel": 32, "falkland_island": 32, "fallen_leaf": 32, "famili": [32, 214, 988, 994], "family_man_boi": 32, "family_man_boy_boi": 32, "family_man_girl": 32, "family_man_girl_boi": 32, "family_man_girl_girl": 32, "family_man_man_boi": 32, "family_man_man_boy_boi": 32, "family_man_man_girl": 32, "family_man_man_girl_boi": 32, "family_man_man_girl_girl": 32, "family_man_woman_boi": 32, "family_man_woman_boy_boi": 32, "family_man_woman_girl": 32, "family_man_woman_girl_boi": 32, "family_man_woman_girl_girl": 32, "family_mmb": 32, "family_mmbb": 32, "family_mmg": 32, "family_mmgb": 32, "family_mmgg": 32, "family_mwbb": 32, "family_mwg": 32, "family_mwgb": 32, "family_mwgg": 32, "family_woman_boi": 32, "family_woman_boy_boi": 32, "family_woman_girl": 32, "family_woman_girl_boi": 32, "family_woman_girl_girl": 32, "family_woman_woman_boi": 32, "family_woman_woman_boy_boi": 32, "family_woman_woman_girl": 32, "family_woman_woman_girl_boi": 32, "family_woman_woman_girl_girl": 32, "family_wwb": 32, "family_wwbb": 32, "family_wwg": 32, "family_wwgb": 32, "family_wwgg": 32, "farmer": 32, "farmer_dark_skin_ton": 32, "farmer_light_skin_ton": 32, "farmer_medium_dark_skin_ton": 32, "farmer_medium_light_skin_ton": 32, "farmer_medium_skin_ton": 32, "farmer_tone1": 32, "farmer_tone2": 32, "farmer_tone3": 32, "farmer_tone4": 32, "farmer_tone5": 32, "faroe_island": 32, "fast_forward": 32, "fax": 32, "fear": [32, 308, 1022], "feather": 32, "feet": 32, "female_detect": 32, "female_sign": 32, "fencer": 32, "fenc": 32, "ferris_wheel": 32, "ferri": 32, "fi": [32, 1018, 1026, 1041], "field_hockei": 32, "fiji": 32, "file_cabinet": 32, "file_fold": 32, "film_fram": 32, "film_projector": 32, "film_strip": 32, "fingers_cross": 32, "fingers_crossed_tone1": 32, "fingers_crossed_tone2": 32, "fingers_crossed_tone3": 32, "fingers_crossed_tone4": 32, "fingers_crossed_tone5": 32, "finland": 32, "fire": [32, 43, 62, 484], "fire_engin": 32, "fire_extinguish": 32, "firecrack": 32, "firefight": 32, "firefighter_dark_skin_ton": 32, "firefighter_light_skin_ton": 32, "firefighter_medium_dark_skin_ton": 32, "firefighter_medium_light_skin_ton": 32, "firefighter_medium_skin_ton": 32, "firefighter_tone1": 32, "firefighter_tone2": 32, "firefighter_tone3": 32, "firefighter_tone4": 32, "firefighter_tone5": 32, "firework": 32, "first_plac": 32, "first_place_med": 32, "first_quarter_moon": 32, "first_quarter_moon_with_fac": 32, "fish": [32, 34, 1223], "fish_cak": 32, "fishing_pole_and_fish": 32, "fist": 32, "fist_left": 32, "fist_oncom": 32, "fist_rais": 32, "fist_right": 32, "fist_tone1": 32, "fist_tone2": 32, "fist_tone3": 32, "fist_tone4": 32, "fist_tone5": 32, "five": [32, 36, 62, 116, 121, 122, 190, 210, 223, 233, 241, 262, 272, 278, 288, 303, 324, 342, 346, 354, 358, 364, 368, 373, 397, 415, 1145, 1187], "fj": 32, "fk": 32, "flag_ac": 32, "flag_ad": 32, "flag_a": 32, "flag_af": 32, "flag_ag": 32, "flag_ai": 32, "flag_al": 32, "flag_am": 32, "flag_ao": 32, "flag_aq": 32, "flag_ar": 32, "flag_at": 32, "flag_au": 32, "flag_aw": 32, "flag_ax": 32, "flag_az": 32, "flag_ba": 32, "flag_bb": 32, "flag_bd": 32, "flag_b": 32, "flag_bf": 32, "flag_bg": 32, "flag_bh": 32, "flag_bi": 32, "flag_bj": 32, "flag_bl": 32, "flag_black": 32, "flag_bm": 32, "flag_bn": 32, "flag_bo": 32, "flag_bq": 32, "flag_br": 32, "flag_bt": 32, "flag_bv": 32, "flag_bw": 32, "flag_bz": 32, "flag_ca": 32, "flag_cc": 32, "flag_cd": 32, "flag_cf": 32, "flag_cg": 32, "flag_ch": 32, "flag_ci": 32, "flag_ck": 32, "flag_cl": 32, "flag_cm": 32, "flag_cn": 32, "flag_co": 32, "flag_cp": 32, "flag_cr": 32, "flag_cu": 32, "flag_cv": 32, "flag_cw": 32, "flag_cx": 32, "flag_cz": 32, "flag_d": 32, "flag_dg": 32, "flag_dj": 32, "flag_dk": 32, "flag_dm": 32, "flag_do": 32, "flag_dz": 32, "flag_ea": 32, "flag_ec": 32, "flag_e": 32, "flag_eg": 32, "flag_eh": 32, "flag_er": 32, "flag_": 32, "flag_et": 32, "flag_eu": 32, "flag_fi": 32, "flag_fj": 32, "flag_fk": 32, "flag_fm": 32, "flag_fo": 32, "flag_fr": 32, "flag_ga": 32, "flag_gb": 32, "flag_gd": 32, "flag_g": 32, "flag_gf": 32, "flag_gg": 32, "flag_gh": 32, "flag_gi": 32, "flag_gl": 32, "flag_gm": 32, "flag_gn": 32, "flag_gp": 32, "flag_gq": 32, "flag_gr": 32, "flag_gt": 32, "flag_gu": 32, "flag_gw": 32, "flag_hk": 32, "flag_hm": 32, "flag_hn": 32, "flag_hr": 32, "flag_ht": 32, "flag_hu": 32, "flag_ic": 32, "flag_id": 32, "flag_i": 32, "flag_il": 32, "flag_im": 32, "flag_in": 32, "flag_io": 32, "flag_iq": 32, "flag_ir": 32, "flag_it": 32, "flag_j": 32, "flag_jm": 32, "flag_jo": 32, "flag_jp": 32, "flag_k": 32, "flag_kg": 32, "flag_kh": 32, "flag_ki": 32, "flag_km": 32, "flag_kn": 32, "flag_kp": 32, "flag_kr": 32, "flag_kw": 32, "flag_kz": 32, "flag_la": 32, "flag_lb": 32, "flag_lc": 32, "flag_li": 32, "flag_lk": 32, "flag_lr": 32, "flag_l": 32, "flag_lt": 32, "flag_lu": 32, "flag_lv": 32, "flag_ma": 32, "flag_mc": 32, "flag_md": 32, "flag_m": 32, "flag_mf": 32, "flag_mg": 32, "flag_mh": 32, "flag_mk": 32, "flag_ml": 32, "flag_mm": 32, "flag_mn": 32, "flag_mo": 32, "flag_mp": 32, "flag_mq": 32, "flag_mr": 32, "flag_mt": 32, "flag_mu": 32, "flag_mv": 32, "flag_mw": 32, "flag_mx": 32, "flag_mi": 32, "flag_mz": 32, "flag_na": 32, "flag_nc": 32, "flag_n": 32, "flag_nf": 32, "flag_ng": 32, "flag_ni": 32, "flag_nl": 32, "flag_no": 32, "flag_np": 32, "flag_nr": 32, "flag_nu": 32, "flag_nz": 32, "flag_om": 32, "flag_pa": 32, "flag_p": 32, "flag_pf": 32, "flag_pg": 32, "flag_ph": 32, "flag_pk": 32, "flag_pl": 32, "flag_pm": 32, "flag_pn": 32, "flag_pr": 32, "flag_pt": 32, "flag_pw": 32, "flag_pi": 32, "flag_qa": 32, "flag_r": 32, "flag_ro": 32, "flag_ru": 32, "flag_rw": 32, "flag_sa": 32, "flag_sb": 32, "flag_sc": 32, "flag_sd": 32, "flag_s": 32, "flag_sg": 32, "flag_sh": 32, "flag_si": 32, "flag_sj": 32, "flag_sk": 32, "flag_sl": 32, "flag_sm": 32, "flag_sn": 32, "flag_so": 32, "flag_sr": 32, "flag_ss": 32, "flag_st": 32, "flag_sv": 32, "flag_sx": 32, "flag_sz": 32, "flag_ta": 32, "flag_tc": 32, "flag_td": 32, "flag_tf": 32, "flag_tg": 32, "flag_th": 32, "flag_tj": 32, "flag_tk": 32, "flag_tl": 32, "flag_tm": 32, "flag_tn": 32, "flag_to": 32, "flag_tr": 32, "flag_tt": 32, "flag_tv": 32, "flag_tw": 32, "flag_tz": 32, "flag_ua": 32, "flag_ug": 32, "flag_um": 32, "flag_u": 32, "flag_ui": 32, "flag_uz": 32, "flag_va": 32, "flag_vc": 32, "flag_v": 32, "flag_vg": 32, "flag_vi": 32, "flag_vn": 32, "flag_vu": 32, "flag_wf": 32, "flag_whit": 32, "flag_w": 32, "flag_xk": 32, "flag_y": 32, "flag_yt": 32, "flag_za": 32, "flag_zm": 32, "flag_zw": 32, "flag": [32, 48, 190, 192, 207, 218, 229, 259, 265, 268, 272, 275, 278, 303, 306, 317, 319, 333, 349, 375, 378, 390, 510, 516, 517, 522, 523, 524, 531, 533, 535, 725, 740, 817, 840, 846, 855, 869, 892, 895, 897, 986, 988, 1017, 1018, 1019, 1021, 1035, 1056, 1060, 1122], "flame": [32, 193], "flamingo": 32, "flan": 32, "flashlight": 32, "flatbread": 32, "fleur": 32, "li": [32, 186, 282, 678], "fleur_de_li": 32, "flight_arriv": 32, "flight_departur": 32, "floppy_disk": 32, "flower_playing_card": 32, "fly": [32, 913, 985], "flying_disc": 32, "flying_sauc": 32, "fm": 32, "fo": 32, "fog": 32, "foggi": 32, "fondu": 32, "foot": [32, 71, 458, 950], "foot_dark_skin_ton": 32, "foot_light_skin_ton": 32, "foot_medium_dark_skin_ton": 32, "foot_medium_light_skin_ton": 32, "foot_medium_skin_ton": 32, "foot_tone1": 32, "foot_tone2": 32, "foot_tone3": 32, "foot_tone4": 32, "foot_tone5": 32, "footbal": 32, "footprint": [32, 222, 1111], "fork_and_knif": 32, "fork_and_knife_with_pl": 32, "fork_knife_pl": 32, "fortune_cooki": 32, "fountain": 32, "fountain_pen": 32, "four": [32, 35, 189, 194, 210, 222, 223, 226, 233, 240, 241, 249, 265, 270, 272, 282, 285, 288, 299, 303, 306, 320, 323, 324, 330, 345, 346, 352, 358, 364, 368, 397, 415, 522, 887, 954, 1125, 1133, 1187, 1188, 1196, 1221, 1244], "four_leaf_clov": 32, "fox": [32, 482], "fox_fac": 32, "fr": [32, 201], "frame_photo": 32, "frame_with_pictur": 32, "framed_pictur": 32, "franc": 32, "french_bread": 32, "french_guiana": 32, "french_polynesia": 32, "french_southern_territori": 32, "fried_egg": 32, "fried_shrimp": 32, "fri": 32, "frog": 32, "frowning2": 32, "frown": [32, 35, 71, 1241], "frowning_fac": 32, "frowning_man": 32, "frowning_woman": 32, "fuelpump": 32, "full_moon": 32, "full_moon_with_fac": 32, "funeral_urn": 32, "ga": [32, 358], "gabon": 32, "gambia": 32, "game_di": 32, "garlic": 32, "gay_pride_flag": 32, "gb": [32, 1016], "gd": 32, "ge": [32, 35], "gear": 32, "gem": 32, "gemini": 32, "geni": 32, "georgia": 32, "germani": [32, 190, 191, 415], "gf": 32, "gg": [32, 35, 38], "gh": [32, 186, 1210], "ghana": 32, "ghost": 32, "gi": [32, 186, 273], "gibraltar": 32, "gift": [32, 226, 257], "gift_heart": 32, "giraff": 32, "girl": 32, "girl_tone1": 32, "girl_tone2": 32, "girl_tone3": 32, "girl_tone4": 32, "girl_tone5": 32, "gl": [32, 35], "glass_of_milk": 32, "globe_with_meridian": 32, "glove": 32, "gm": 32, "gn": 32, "goal": [32, 42, 70, 152, 190, 309, 312, 382, 506, 510, 806, 826, 914, 915, 1079, 1088], "goal_net": 32, "goat": 32, "goggl": 32, "golf": 32, "golfer": 32, "golfing_man": 32, "golfing_woman": 32, "gorilla": 32, "gp": 32, "gq": 32, "gr": [32, 330, 346, 1201], "grandma": 32, "grandma_tone1": 32, "grandma_tone2": 32, "grandma_tone3": 32, "grandma_tone4": 32, "grandma_tone5": 32, "grape": 32, "great_britain": 32, "greec": 32, "green_appl": 32, "green_book": 32, "green_circl": 32, "green_heart": 32, "green_salad": 32, "green_squar": 32, "greenland": 32, "grenada": 32, "grey_exclam": 32, "grey_quest": 32, "grin": 32, "gu": 32, "guadeloup": 32, "guam": 32, "guard": [32, 252, 268, 508, 814, 815, 817], "guard_tone1": 32, "guard_tone2": 32, "guard_tone3": 32, "guard_tone4": 32, "guard_tone5": 32, "guardsman": 32, "guardsman_tone1": 32, "guardsman_tone2": 32, "guardsman_tone3": 32, "guardsman_tone4": 32, "guardsman_tone5": 32, "guardswoman": 32, "guatemala": 32, "guernsei": 32, "guide_dog": 32, "guinea": 32, "guinea_bissau": 32, "guitar": 32, "gun": 32, "guyana": 32, "gw": 32, "gy": 32, "haircut": 32, "haircut_man": 32, "haircut_tone1": 32, "haircut_tone2": 32, "haircut_tone3": 32, "haircut_tone4": 32, "haircut_tone5": 32, "haircut_woman": 32, "haiti": 32, "hamburg": 32, "hammer": [32, 190, 266, 306, 867, 877], "hammer_and_pick": 32, "hammer_and_wrench": 32, "hammer_pick": 32, "hamster": 32, "hand": [32, 186, 198, 205, 210, 217, 226, 241, 252, 268, 287, 314, 372, 405, 432, 443, 462, 464, 547, 566, 634, 645, 661, 663, 664, 791, 932, 948, 993, 994, 1010, 1038, 1073, 1091, 1106, 1113, 1241, 1247, 1259], "hand_splai": 32, "hand_splayed_tone1": 32, "hand_splayed_tone2": 32, "hand_splayed_tone3": 32, "hand_splayed_tone4": 32, "hand_splayed_tone5": 32, "hand_with_index_and_middle_finger_cross": 32, "hand_with_index_and_middle_fingers_crossed_tone1": 32, "hand_with_index_and_middle_fingers_crossed_tone2": 32, "hand_with_index_and_middle_fingers_crossed_tone3": 32, "hand_with_index_and_middle_fingers_crossed_tone4": 32, "hand_with_index_and_middle_fingers_crossed_tone5": 32, "handbag": 32, "handbal": 32, "handball_tone1": 32, "handball_tone2": 32, "handball_tone3": 32, "handball_tone4": 32, "handball_tone5": 32, "handshak": [32, 815], "handshake_tone1": 32, "handshake_tone2": 32, "handshake_tone3": 32, "handshake_tone4": 32, "handshake_tone5": 32, "hankei": 32, "hash": [32, 222, 228, 229, 240, 246, 259, 265, 266, 269, 273, 275, 278, 282, 303, 310, 324, 364, 397, 518, 539, 887, 1135, 1216], "hatched_chick": 32, "hatching_chick": 32, "head_bandag": 32, "headphon": 32, "headston": 32, "health_work": 32, "health_worker_dark_skin_ton": 32, "health_worker_light_skin_ton": 32, "health_worker_medium_dark_skin_ton": 32, "health_worker_medium_light_skin_ton": 32, "health_worker_medium_skin_ton": 32, "health_worker_tone1": 32, "health_worker_tone2": 32, "health_worker_tone3": 32, "health_worker_tone4": 32, "health_worker_tone5": 32, "hear_no_evil": 32, "heart_decor": 32, "heart_exclam": 32, "heart_ey": 32, "heart_eyes_cat": 32, "heart_on_fir": 32, "heartbeat": 32, "heartpuls": 32, "heavy_check_mark": 32, "heavy_division_sign": 32, "heavy_dollar_sign": 32, "heavy_heart_exclam": 32, "heavy_heart_exclamation_mark_orna": 32, "heavy_minus_sign": 32, "heavy_multiplication_x": 32, "heavy_plus_sign": 32, "hedgehog": 32, "helicopt": 32, "helmet_with_cross": 32, "helmet_with_white_cross": 32, "herb": 32, "hibiscu": 32, "high_bright": 32, "high_heel": 32, "hiking_boot": 32, "hindu_templ": 32, "hippopotamu": 32, "hk": 32, "hn": 32, "hocho": 32, "hockei": 32, "hole": [32, 268, 840, 984, 1014, 1023, 1024, 1025, 1042, 1055], "hondura": 32, "honey_pot": 32, "hong_kong": 32, "hook": [32, 34, 38, 241, 259, 265, 275, 278, 308, 341, 498, 553, 810, 846], "hors": 32, "horse_rac": 32, "horse_racing_tone1": 32, "horse_racing_tone2": 32, "horse_racing_tone3": 32, "horse_racing_tone4": 32, "horse_racing_tone5": 32, "hospit": 32, "hot_dog": 32, "hot_fac": 32, "hot_pepp": 32, "hotdog": 32, "hotel": [32, 195, 415], "hotspr": 32, "hourglass": 32, "hourglass_flowing_sand": 32, "house_abandon": 32, "house_build": 32, "house_with_garden": 32, "hr": 32, "ht": 32, "hu": [32, 388, 389, 406], "hug": 32, "hugging_fac": 32, "hungari": 32, "hush": 32, "hut": 32, "ic": [32, 443, 544, 573, 1240], "ice_cream": 32, "ice_cub": 32, "ice_hockei": 32, "ice_sk": 32, "icecream": 32, "iceland": 32, "id": [32, 42, 46, 109, 112, 113, 114, 115, 116, 117, 118, 125, 159, 171, 192, 195, 205, 209, 212, 222, 223, 233, 240, 246, 259, 262, 265, 272, 275, 276, 278, 285, 288, 292, 300, 303, 310, 316, 320, 324, 330, 335, 342, 347, 352, 358, 364, 368, 392, 538, 568, 569, 570, 582, 583, 584, 601, 851, 883, 885, 907, 914, 915, 920, 921, 923, 932, 933, 934, 944, 951, 972, 974, 975, 986, 992, 994, 1001, 1020, 1030, 1073, 1100, 1111, 1127, 1166, 1177, 1178, 1179, 1180, 1183, 1184, 1185, 1194, 1196, 1214, 1257], "ideograph_advantag": 32, "ie": 32, "il": [32, 200], "imp": 32, "inbox_trai": 32, "incoming_envelop": 32, "india": [32, 250, 299, 323, 345, 1188], "indonesia": 32, "infin": [32, 131, 229, 278, 351, 365, 1092, 1093], "information_desk_person": 32, "information_desk_person_tone1": 32, "information_desk_person_tone2": 32, "information_desk_person_tone3": 32, "information_desk_person_tone4": 32, "information_desk_person_tone5": 32, "\u2139": 32, "information_sourc": 32, "interrobang": 32, "iphon": 32, "iq": 32, "ir": [32, 948], "iran": 32, "iraq": 32, "ireland": 32, "island": 32, "isle_of_man": 32, "israel": [32, 250, 299, 1188], "itali": 32, "izakaya_lantern": 32, "jack_o_lantern": 32, "jamaica": 32, "japan": 32, "japanese_castl": 32, "japanese_goblin": 32, "japanese_ogr": 32, "jean": 32, "jersei": 32, "jigsaw": 32, "jm": 32, "jo": [32, 233, 246, 259, 262, 272, 275, 278, 282, 285, 324, 330, 358], "jordan": 32, "joi": 32, "joy_cat": 32, "joystick": 32, "jp": 32, "judg": 32, "judge_dark_skin_ton": 32, "judge_light_skin_ton": 32, "judge_medium_dark_skin_ton": 32, "judge_medium_light_skin_ton": 32, "judge_medium_skin_ton": 32, "judge_tone1": 32, "judge_tone2": 32, "judge_tone3": 32, "judge_tone4": 32, "judge_tone5": 32, "juggler": 32, "juggler_tone1": 32, "juggler_tone2": 32, "juggler_tone3": 32, "juggler_tone4": 32, "juggler_tone5": 32, "juggl": 32, "juggling_tone1": 32, "juggling_tone2": 32, "juggling_tone3": 32, "juggling_tone4": 32, "juggling_tone5": 32, "kaaba": 32, "kangaroo": 32, "karate_uniform": 32, "kayak": 32, "kazakhstan": 32, "ke": 32, "kenya": 32, "key2": 32, "keyboard": [32, 371, 397, 930, 980], "keycap_ten": 32, "kg": 32, "kh": 32, "ki": [32, 231], "kick_scoot": 32, "kimono": 32, "kiribati": 32, "kiss_dark_skin_ton": 32, "kiss_light_skin_ton": 32, "kiss_man_man_dark_skin_ton": 32, "kiss_man_man_dark_skin_tone_light_skin_ton": 32, "kiss_man_man_dark_skin_tone_medium_dark_skin_ton": 32, "kiss_man_man_dark_skin_tone_medium_light_skin_ton": 32, "kiss_man_man_dark_skin_tone_medium_skin_ton": 32, "kiss_man_man_light_skin_ton": 32, "kiss_man_man_light_skin_tone_dark_skin_ton": 32, "kiss_man_man_light_skin_tone_medium_dark_skin_ton": 32, "kiss_man_man_light_skin_tone_medium_light_skin_ton": 32, "kiss_man_man_light_skin_tone_medium_skin_ton": 32, "kiss_man_man_medium_dark_skin_ton": 32, "kiss_man_man_medium_dark_skin_tone_dark_skin_ton": 32, "kiss_man_man_medium_dark_skin_tone_light_skin_ton": 32, "kiss_man_man_medium_dark_skin_tone_medium_light_skin_ton": 32, "kiss_man_man_medium_dark_skin_tone_medium_skin_ton": 32, "kiss_man_man_medium_light_skin_ton": 32, "kiss_man_man_medium_light_skin_tone_dark_skin_ton": 32, "kiss_man_man_medium_light_skin_tone_light_skin_ton": 32, "kiss_man_man_medium_light_skin_tone_medium_dark_skin_ton": 32, "kiss_man_man_medium_light_skin_tone_medium_skin_ton": 32, "kiss_man_man_medium_skin_ton": 32, "kiss_man_man_medium_skin_tone_dark_skin_ton": 32, "kiss_man_man_medium_skin_tone_light_skin_ton": 32, "kiss_man_man_medium_skin_tone_medium_dark_skin_ton": 32, "kiss_man_man_medium_skin_tone_medium_light_skin_ton": 32, "kiss_man_man_tone1": 32, "kiss_man_man_tone1_tone2": 32, "kiss_man_man_tone1_tone3": 32, "kiss_man_man_tone1_tone4": 32, "kiss_man_man_tone1_tone5": 32, "kiss_man_man_tone2": 32, "kiss_man_man_tone2_tone1": 32, "kiss_man_man_tone2_tone3": 32, "kiss_man_man_tone2_tone4": 32, "kiss_man_man_tone2_tone5": 32, "kiss_man_man_tone3": 32, "kiss_man_man_tone3_tone1": 32, "kiss_man_man_tone3_tone2": 32, "kiss_man_man_tone3_tone4": 32, "kiss_man_man_tone3_tone5": 32, "kiss_man_man_tone4": 32, "kiss_man_man_tone4_tone1": 32, "kiss_man_man_tone4_tone2": 32, "kiss_man_man_tone4_tone3": 32, "kiss_man_man_tone4_tone5": 32, "kiss_man_man_tone5": 32, "kiss_man_man_tone5_tone1": 32, "kiss_man_man_tone5_tone2": 32, "kiss_man_man_tone5_tone3": 32, "kiss_man_man_tone5_tone4": 32, "kiss_medium_dark_skin_ton": 32, "kiss_medium_light_skin_ton": 32, "kiss_medium_skin_ton": 32, "kiss_mm": 32, "kiss_person_person_dark_skin_tone_light_skin_ton": 32, "kiss_person_person_dark_skin_tone_medium_dark_skin_ton": 32, "kiss_person_person_dark_skin_tone_medium_light_skin_ton": 32, "kiss_person_person_dark_skin_tone_medium_skin_ton": 32, "kiss_person_person_light_skin_tone_dark_skin_ton": 32, "kiss_person_person_light_skin_tone_medium_dark_skin_ton": 32, "kiss_person_person_light_skin_tone_medium_light_skin_ton": 32, "kiss_person_person_light_skin_tone_medium_skin_ton": 32, "kiss_person_person_medium_dark_skin_tone_dark_skin_ton": 32, "kiss_person_person_medium_dark_skin_tone_light_skin_ton": 32, "kiss_person_person_medium_dark_skin_tone_medium_light_skin_ton": 32, "kiss_person_person_medium_dark_skin_tone_medium_skin_ton": 32, "kiss_person_person_medium_light_skin_tone_dark_skin_ton": 32, "kiss_person_person_medium_light_skin_tone_light_skin_ton": 32, "kiss_person_person_medium_light_skin_tone_medium_dark_skin_ton": 32, "kiss_person_person_medium_light_skin_tone_medium_skin_ton": 32, "kiss_person_person_medium_skin_tone_dark_skin_ton": 32, "kiss_person_person_medium_skin_tone_light_skin_ton": 32, "kiss_person_person_medium_skin_tone_medium_dark_skin_ton": 32, "kiss_person_person_medium_skin_tone_medium_light_skin_ton": 32, "kiss_person_person_tone1_tone2": 32, "kiss_person_person_tone1_tone3": 32, "kiss_person_person_tone1_tone4": 32, "kiss_person_person_tone1_tone5": 32, "kiss_person_person_tone2_tone1": 32, "kiss_person_person_tone2_tone3": 32, "kiss_person_person_tone2_tone4": 32, "kiss_person_person_tone2_tone5": 32, "kiss_person_person_tone3_tone1": 32, "kiss_person_person_tone3_tone2": 32, "kiss_person_person_tone3_tone4": 32, "kiss_person_person_tone3_tone5": 32, "kiss_person_person_tone4_tone1": 32, "kiss_person_person_tone4_tone2": 32, "kiss_person_person_tone4_tone3": 32, "kiss_person_person_tone4_tone5": 32, "kiss_person_person_tone5_tone1": 32, "kiss_person_person_tone5_tone2": 32, "kiss_person_person_tone5_tone3": 32, "kiss_person_person_tone5_tone4": 32, "kiss_tone1": 32, "kiss_tone2": 32, "kiss_tone3": 32, "kiss_tone4": 32, "kiss_tone5": 32, "kiss_woman_man": 32, "kiss_woman_man_dark_skin_ton": 32, "kiss_woman_man_dark_skin_tone_light_skin_ton": 32, "kiss_woman_man_dark_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_man_dark_skin_tone_medium_light_skin_ton": 32, "kiss_woman_man_dark_skin_tone_medium_skin_ton": 32, "kiss_woman_man_light_skin_ton": 32, "kiss_woman_man_light_skin_tone_dark_skin_ton": 32, "kiss_woman_man_light_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_man_light_skin_tone_medium_light_skin_ton": 32, "kiss_woman_man_light_skin_tone_medium_skin_ton": 32, "kiss_woman_man_medium_dark_skin_ton": 32, "kiss_woman_man_medium_dark_skin_tone_dark_skin_ton": 32, "kiss_woman_man_medium_dark_skin_tone_light_skin_ton": 32, "kiss_woman_man_medium_dark_skin_tone_medium_light_skin_ton": 32, "kiss_woman_man_medium_dark_skin_tone_medium_skin_ton": 32, "kiss_woman_man_medium_light_skin_ton": 32, "kiss_woman_man_medium_light_skin_tone_dark_skin_ton": 32, "kiss_woman_man_medium_light_skin_tone_light_skin_ton": 32, "kiss_woman_man_medium_light_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_man_medium_light_skin_tone_medium_skin_ton": 32, "kiss_woman_man_medium_skin_ton": 32, "kiss_woman_man_medium_skin_tone_dark_skin_ton": 32, "kiss_woman_man_medium_skin_tone_light_skin_ton": 32, "kiss_woman_man_medium_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_man_medium_skin_tone_medium_light_skin_ton": 32, "kiss_woman_man_tone1": 32, "kiss_woman_man_tone1_tone2": 32, "kiss_woman_man_tone1_tone3": 32, "kiss_woman_man_tone1_tone4": 32, "kiss_woman_man_tone1_tone5": 32, "kiss_woman_man_tone2": 32, "kiss_woman_man_tone2_tone1": 32, "kiss_woman_man_tone2_tone3": 32, "kiss_woman_man_tone2_tone4": 32, "kiss_woman_man_tone2_tone5": 32, "kiss_woman_man_tone3": 32, "kiss_woman_man_tone3_tone1": 32, "kiss_woman_man_tone3_tone2": 32, "kiss_woman_man_tone3_tone4": 32, "kiss_woman_man_tone3_tone5": 32, "kiss_woman_man_tone4": 32, "kiss_woman_man_tone4_tone1": 32, "kiss_woman_man_tone4_tone2": 32, "kiss_woman_man_tone4_tone3": 32, "kiss_woman_man_tone4_tone5": 32, "kiss_woman_man_tone5": 32, "kiss_woman_man_tone5_tone1": 32, "kiss_woman_man_tone5_tone2": 32, "kiss_woman_man_tone5_tone3": 32, "kiss_woman_man_tone5_tone4": 32, "kiss_woman_woman_dark_skin_ton": 32, "kiss_woman_woman_dark_skin_tone_light_skin_ton": 32, "kiss_woman_woman_dark_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_woman_dark_skin_tone_medium_light_skin_ton": 32, "kiss_woman_woman_dark_skin_tone_medium_skin_ton": 32, "kiss_woman_woman_light_skin_ton": 32, "kiss_woman_woman_light_skin_tone_dark_skin_ton": 32, "kiss_woman_woman_light_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_woman_light_skin_tone_medium_light_skin_ton": 32, "kiss_woman_woman_light_skin_tone_medium_skin_ton": 32, "kiss_woman_woman_medium_dark_skin_ton": 32, "kiss_woman_woman_medium_dark_skin_tone_dark_skin_ton": 32, "kiss_woman_woman_medium_dark_skin_tone_light_skin_ton": 32, "kiss_woman_woman_medium_dark_skin_tone_medium_light_skin_ton": 32, "kiss_woman_woman_medium_dark_skin_tone_medium_skin_ton": 32, "kiss_woman_woman_medium_light_skin_ton": 32, "kiss_woman_woman_medium_light_skin_tone_dark_skin_ton": 32, "kiss_woman_woman_medium_light_skin_tone_light_skin_ton": 32, "kiss_woman_woman_medium_light_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_woman_medium_light_skin_tone_medium_skin_ton": 32, "kiss_woman_woman_medium_skin_ton": 32, "kiss_woman_woman_medium_skin_tone_dark_skin_ton": 32, "kiss_woman_woman_medium_skin_tone_light_skin_ton": 32, "kiss_woman_woman_medium_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_woman_medium_skin_tone_medium_light_skin_ton": 32, "kiss_woman_woman_tone1": 32, "kiss_woman_woman_tone1_tone2": 32, "kiss_woman_woman_tone1_tone3": 32, "kiss_woman_woman_tone1_tone4": 32, "kiss_woman_woman_tone1_tone5": 32, "kiss_woman_woman_tone2": 32, "kiss_woman_woman_tone2_tone1": 32, "kiss_woman_woman_tone2_tone3": 32, "kiss_woman_woman_tone2_tone4": 32, "kiss_woman_woman_tone2_tone5": 32, "kiss_woman_woman_tone3": 32, "kiss_woman_woman_tone3_tone1": 32, "kiss_woman_woman_tone3_tone2": 32, "kiss_woman_woman_tone3_tone4": 32, "kiss_woman_woman_tone3_tone5": 32, "kiss_woman_woman_tone4": 32, "kiss_woman_woman_tone4_tone1": 32, "kiss_woman_woman_tone4_tone2": 32, "kiss_woman_woman_tone4_tone3": 32, "kiss_woman_woman_tone4_tone5": 32, "kiss_woman_woman_tone5": 32, "kiss_woman_woman_tone5_tone1": 32, "kiss_woman_woman_tone5_tone2": 32, "kiss_woman_woman_tone5_tone3": 32, "kiss_woman_woman_tone5_tone4": 32, "kiss_ww": 32, "kissing_cat": 32, "kissing_closed_ey": 32, "kissing_smiling_ey": 32, "kite": 32, "kiwi": 32, "kiwi_fruit": 32, "kiwifruit": 32, "km": [32, 211, 213, 368], "kn": 32, "knife": [32, 846, 1014, 1241], "knot": 32, "koala": 32, "koko": 32, "korea": 32, "kosovo": 32, "kp": 32, "kr": 32, "kuwait": 32, "kw": [32, 259, 265, 275, 278], "ky": 32, "kyrgyzstan": 32, "kz": 32, "la": 32, "lab_coat": 32, "label": [32, 39, 40, 58, 211, 213, 260, 273, 287, 290, 323, 329, 368, 454, 459, 466, 472, 476, 479, 483, 486, 492, 496, 501, 502, 744, 745, 783, 837, 839, 840, 867, 1188, 1195, 1207, 1210], "lacross": 32, "ladder": 32, "lady_beetl": 32, "lao": 32, "large_blue_circl": 32, "large_blue_diamond": 32, "large_orange_diamond": 32, "last_quarter_moon": 32, "last_quarter_moon_with_fac": 32, "latin_cross": 32, "latvia": 32, "laugh": [32, 373], "lb": 32, "lc": [32, 227], "leafy_green": 32, "leav": [32, 49, 121, 187, 190, 191, 197, 200, 230, 259, 282, 319, 372, 408, 512, 646, 648, 657, 658, 673, 675, 676, 835, 838, 850, 855, 865, 887, 993, 1018, 1038, 1127, 1201], "lebanon": 32, "ledger": 32, "left_facing_fist": 32, "left_facing_fist_tone1": 32, "left_facing_fist_tone2": 32, "left_facing_fist_tone3": 32, "left_facing_fist_tone4": 32, "left_facing_fist_tone5": 32, "left_fist": 32, "left_fist_tone1": 32, "left_fist_tone2": 32, "left_fist_tone3": 32, "left_fist_tone4": 32, "left_fist_tone5": 32, "left_luggag": 32, "left_right_arrow": 32, "left_speech_bubbl": 32, "leftwards_arrow_with_hook": 32, "leg": [32, 35], "leg_dark_skin_ton": 32, "leg_light_skin_ton": 32, "leg_medium_dark_skin_ton": 32, "leg_medium_light_skin_ton": 32, "leg_medium_skin_ton": 32, "leg_tone1": 32, "leg_tone2": 32, "leg_tone3": 32, "leg_tone4": 32, "leg_tone5": 32, "lemon": 32, "leo": [32, 388, 389, 406], "leopard": 32, "lesotho": 32, "level_slid": 32, "levit": 32, "levitate_tone1": 32, "levitate_tone2": 32, "levitate_tone3": 32, "levitate_tone4": 32, "levitate_tone5": 32, "liar": 32, "liberia": 32, "libra": 32, "libya": 32, "liechtenstein": 32, "lifter": 32, "lifter_tone1": 32, "lifter_tone2": 32, "lifter_tone3": 32, "lifter_tone4": 32, "lifter_tone5": 32, "light_rail": 32, "linked_paperclip": 32, "lion": 32, "lion_fac": 32, "lip": 32, "lipstick": 32, "lithuania": 32, "lizard": 32, "lk": 32, "llama": 32, "lobster": 32, "lock": [32, 190, 192, 222, 226, 259, 265, 268, 275, 278, 294, 295, 297, 306, 327, 340, 341, 354, 358, 373, 406, 480, 532, 620, 804, 810, 813, 815, 816, 835, 839, 840, 877, 885, 890, 895, 925, 1001, 1033, 1038, 1040, 1048, 1055, 1097, 1188, 1241, 1253, 1256], "lock_with_ink_pen": 32, "lollipop": 32, "long_drum": 32, "loud_sound": 32, "loudspeak": 32, "love_hotel": 32, "love_lett": 32, "love_you_gestur": 32, "love_you_gesture_dark_skin_ton": 32, "love_you_gesture_light_skin_ton": 32, "love_you_gesture_medium_dark_skin_ton": 32, "love_you_gesture_medium_light_skin_ton": 32, "love_you_gesture_medium_skin_ton": 32, "love_you_gesture_tone1": 32, "love_you_gesture_tone2": 32, "love_you_gesture_tone3": 32, "love_you_gesture_tone4": 32, "love_you_gesture_tone5": 32, "low_bright": 32, "lower_left_ballpoint_pen": 32, "lower_left_crayon": 32, "lower_left_fountain_pen": 32, "lower_left_paintbrush": 32, "lr": 32, "lu": 32, "luggag": 32, "lung": 32, "luxembourg": 32, "lv": 32, "ly": 32, "lying_fac": 32, "ma": 32, "macau": 32, "macedonia": 32, "madagascar": 32, "mag": 32, "mag_right": 32, "mage": 32, "mage_dark_skin_ton": 32, "mage_light_skin_ton": 32, "mage_medium_dark_skin_ton": 32, "mage_medium_light_skin_ton": 32, "mage_medium_skin_ton": 32, "mage_tone1": 32, "mage_tone2": 32, "mage_tone3": 32, "mage_tone4": 32, "mage_tone5": 32, "magic_wand": 32, "magnet": 32, "mahjong": 32, "mailbox": 32, "mailbox_clos": 32, "mailbox_with_mail": 32, "mailbox_with_no_mail": 32, "malawi": 32, "malaysia": 32, "maldiv": 32, "male_danc": 32, "male_dancer_tone1": 32, "male_dancer_tone2": 32, "male_dancer_tone3": 32, "male_dancer_tone4": 32, "male_dancer_tone5": 32, "male_detect": 32, "male_sign": 32, "mali": 32, "malta": 32, "mammoth": 32, "man_artist": 32, "man_artist_dark_skin_ton": 32, "man_artist_light_skin_ton": 32, "man_artist_medium_dark_skin_ton": 32, "man_artist_medium_light_skin_ton": 32, "man_artist_medium_skin_ton": 32, "man_artist_tone1": 32, "man_artist_tone2": 32, "man_artist_tone3": 32, "man_artist_tone4": 32, "man_artist_tone5": 32, "man_astronaut": 32, "man_astronaut_dark_skin_ton": 32, "man_astronaut_light_skin_ton": 32, "man_astronaut_medium_dark_skin_ton": 32, "man_astronaut_medium_light_skin_ton": 32, "man_astronaut_medium_skin_ton": 32, "man_astronaut_tone1": 32, "man_astronaut_tone2": 32, "man_astronaut_tone3": 32, "man_astronaut_tone4": 32, "man_astronaut_tone5": 32, "man_bald": 32, "man_bald_dark_skin_ton": 32, "man_bald_light_skin_ton": 32, "man_bald_medium_dark_skin_ton": 32, "man_bald_medium_light_skin_ton": 32, "man_bald_medium_skin_ton": 32, "man_bald_tone1": 32, "man_bald_tone2": 32, "man_bald_tone3": 32, "man_bald_tone4": 32, "man_bald_tone5": 32, "man_beard": 32, "man_bik": 32, "man_biking_dark_skin_ton": 32, "man_biking_light_skin_ton": 32, "man_biking_medium_dark_skin_ton": 32, "man_biking_medium_light_skin_ton": 32, "man_biking_medium_skin_ton": 32, "man_biking_tone1": 32, "man_biking_tone2": 32, "man_biking_tone3": 32, "man_biking_tone4": 32, "man_biking_tone5": 32, "man_bouncing_bal": 32, "man_bouncing_ball_dark_skin_ton": 32, "man_bouncing_ball_light_skin_ton": 32, "man_bouncing_ball_medium_dark_skin_ton": 32, "man_bouncing_ball_medium_light_skin_ton": 32, "man_bouncing_ball_medium_skin_ton": 32, "man_bouncing_ball_tone1": 32, "man_bouncing_ball_tone2": 32, "man_bouncing_ball_tone3": 32, "man_bouncing_ball_tone4": 32, "man_bouncing_ball_tone5": 32, "man_bow": 32, "man_bowing_dark_skin_ton": 32, "man_bowing_light_skin_ton": 32, "man_bowing_medium_dark_skin_ton": 32, "man_bowing_medium_light_skin_ton": 32, "man_bowing_medium_skin_ton": 32, "man_bowing_tone1": 32, "man_bowing_tone2": 32, "man_bowing_tone3": 32, "man_bowing_tone4": 32, "man_bowing_tone5": 32, "man_cartwheel": 32, "man_cartwheeling_dark_skin_ton": 32, "man_cartwheeling_light_skin_ton": 32, "man_cartwheeling_medium_dark_skin_ton": 32, "man_cartwheeling_medium_light_skin_ton": 32, "man_cartwheeling_medium_skin_ton": 32, "man_cartwheeling_tone1": 32, "man_cartwheeling_tone2": 32, "man_cartwheeling_tone3": 32, "man_cartwheeling_tone4": 32, "man_cartwheeling_tone5": 32, "man_climb": 32, "man_climbing_dark_skin_ton": 32, "man_climbing_light_skin_ton": 32, "man_climbing_medium_dark_skin_ton": 32, "man_climbing_medium_light_skin_ton": 32, "man_climbing_medium_skin_ton": 32, "man_climbing_tone1": 32, "man_climbing_tone2": 32, "man_climbing_tone3": 32, "man_climbing_tone4": 32, "man_climbing_tone5": 32, "man_construction_work": 32, "man_construction_worker_dark_skin_ton": 32, "man_construction_worker_light_skin_ton": 32, "man_construction_worker_medium_dark_skin_ton": 32, "man_construction_worker_medium_light_skin_ton": 32, "man_construction_worker_medium_skin_ton": 32, "man_construction_worker_tone1": 32, "man_construction_worker_tone2": 32, "man_construction_worker_tone3": 32, "man_construction_worker_tone4": 32, "man_construction_worker_tone5": 32, "man_cook": 32, "man_cook_dark_skin_ton": 32, "man_cook_light_skin_ton": 32, "man_cook_medium_dark_skin_ton": 32, "man_cook_medium_light_skin_ton": 32, "man_cook_medium_skin_ton": 32, "man_cook_tone1": 32, "man_cook_tone2": 32, "man_cook_tone3": 32, "man_cook_tone4": 32, "man_cook_tone5": 32, "man_curly_hair": 32, "man_curly_haired_dark_skin_ton": 32, "man_curly_haired_light_skin_ton": 32, "man_curly_haired_medium_dark_skin_ton": 32, "man_curly_haired_medium_light_skin_ton": 32, "man_curly_haired_medium_skin_ton": 32, "man_curly_haired_tone1": 32, "man_curly_haired_tone2": 32, "man_curly_haired_tone3": 32, "man_curly_haired_tone4": 32, "man_curly_haired_tone5": 32, "man_danc": 32, "man_dancing_tone1": 32, "man_dancing_tone2": 32, "man_dancing_tone3": 32, "man_dancing_tone4": 32, "man_dancing_tone5": 32, "man_dark_skin_tone_beard": 32, "man_detect": 32, "man_detective_dark_skin_ton": 32, "man_detective_light_skin_ton": 32, "man_detective_medium_dark_skin_ton": 32, "man_detective_medium_light_skin_ton": 32, "man_detective_medium_skin_ton": 32, "man_detective_tone1": 32, "man_detective_tone2": 32, "man_detective_tone3": 32, "man_detective_tone4": 32, "man_detective_tone5": 32, "man_elf": 32, "man_elf_dark_skin_ton": 32, "man_elf_light_skin_ton": 32, "man_elf_medium_dark_skin_ton": 32, "man_elf_medium_light_skin_ton": 32, "man_elf_medium_skin_ton": 32, "man_elf_tone1": 32, "man_elf_tone2": 32, "man_elf_tone3": 32, "man_elf_tone4": 32, "man_elf_tone5": 32, "man_facepalm": 32, "man_facepalming_dark_skin_ton": 32, "man_facepalming_light_skin_ton": 32, "man_facepalming_medium_dark_skin_ton": 32, "man_facepalming_medium_light_skin_ton": 32, "man_facepalming_medium_skin_ton": 32, "man_facepalming_tone1": 32, "man_facepalming_tone2": 32, "man_facepalming_tone3": 32, "man_facepalming_tone4": 32, "man_facepalming_tone5": 32, "man_factory_work": 32, "man_factory_worker_dark_skin_ton": 32, "man_factory_worker_light_skin_ton": 32, "man_factory_worker_medium_dark_skin_ton": 32, "man_factory_worker_medium_light_skin_ton": 32, "man_factory_worker_medium_skin_ton": 32, "man_factory_worker_tone1": 32, "man_factory_worker_tone2": 32, "man_factory_worker_tone3": 32, "man_factory_worker_tone4": 32, "man_factory_worker_tone5": 32, "man_fairi": 32, "man_fairy_dark_skin_ton": 32, "man_fairy_light_skin_ton": 32, "man_fairy_medium_dark_skin_ton": 32, "man_fairy_medium_light_skin_ton": 32, "man_fairy_medium_skin_ton": 32, "man_fairy_tone1": 32, "man_fairy_tone2": 32, "man_fairy_tone3": 32, "man_fairy_tone4": 32, "man_fairy_tone5": 32, "man_farm": 32, "man_farmer_dark_skin_ton": 32, "man_farmer_light_skin_ton": 32, "man_farmer_medium_dark_skin_ton": 32, "man_farmer_medium_light_skin_ton": 32, "man_farmer_medium_skin_ton": 32, "man_farmer_tone1": 32, "man_farmer_tone2": 32, "man_farmer_tone3": 32, "man_farmer_tone4": 32, "man_farmer_tone5": 32, "man_feeding_babi": 32, "man_feeding_baby_dark_skin_ton": 32, "man_feeding_baby_light_skin_ton": 32, "man_feeding_baby_medium_dark_skin_ton": 32, "man_feeding_baby_medium_light_skin_ton": 32, "man_feeding_baby_medium_skin_ton": 32, "man_feeding_baby_tone1": 32, "man_feeding_baby_tone2": 32, "man_feeding_baby_tone3": 32, "man_feeding_baby_tone4": 32, "man_feeding_baby_tone5": 32, "man_firefight": 32, "man_firefighter_dark_skin_ton": 32, "man_firefighter_light_skin_ton": 32, "man_firefighter_medium_dark_skin_ton": 32, "man_firefighter_medium_light_skin_ton": 32, "man_firefighter_medium_skin_ton": 32, "man_firefighter_tone1": 32, "man_firefighter_tone2": 32, "man_firefighter_tone3": 32, "man_firefighter_tone4": 32, "man_firefighter_tone5": 32, "man_frown": 32, "man_frowning_dark_skin_ton": 32, "man_frowning_light_skin_ton": 32, "man_frowning_medium_dark_skin_ton": 32, "man_frowning_medium_light_skin_ton": 32, "man_frowning_medium_skin_ton": 32, "man_frowning_tone1": 32, "man_frowning_tone2": 32, "man_frowning_tone3": 32, "man_frowning_tone4": 32, "man_frowning_tone5": 32, "man_geni": 32, "man_gesturing_no": 32, "man_gesturing_no_dark_skin_ton": 32, "man_gesturing_no_light_skin_ton": 32, "man_gesturing_no_medium_dark_skin_ton": 32, "man_gesturing_no_medium_light_skin_ton": 32, "man_gesturing_no_medium_skin_ton": 32, "man_gesturing_no_tone1": 32, "man_gesturing_no_tone2": 32, "man_gesturing_no_tone3": 32, "man_gesturing_no_tone4": 32, "man_gesturing_no_tone5": 32, "man_gesturing_ok": 32, "man_gesturing_ok_dark_skin_ton": 32, "man_gesturing_ok_light_skin_ton": 32, "man_gesturing_ok_medium_dark_skin_ton": 32, "man_gesturing_ok_medium_light_skin_ton": 32, "man_gesturing_ok_medium_skin_ton": 32, "man_gesturing_ok_tone1": 32, "man_gesturing_ok_tone2": 32, "man_gesturing_ok_tone3": 32, "man_gesturing_ok_tone4": 32, "man_gesturing_ok_tone5": 32, "man_getting_face_massag": 32, "man_getting_face_massage_dark_skin_ton": 32, "man_getting_face_massage_light_skin_ton": 32, "man_getting_face_massage_medium_dark_skin_ton": 32, "man_getting_face_massage_medium_light_skin_ton": 32, "man_getting_face_massage_medium_skin_ton": 32, "man_getting_face_massage_tone1": 32, "man_getting_face_massage_tone2": 32, "man_getting_face_massage_tone3": 32, "man_getting_face_massage_tone4": 32, "man_getting_face_massage_tone5": 32, "man_getting_haircut": 32, "man_getting_haircut_dark_skin_ton": 32, "man_getting_haircut_light_skin_ton": 32, "man_getting_haircut_medium_dark_skin_ton": 32, "man_getting_haircut_medium_light_skin_ton": 32, "man_getting_haircut_medium_skin_ton": 32, "man_getting_haircut_tone1": 32, "man_getting_haircut_tone2": 32, "man_getting_haircut_tone3": 32, "man_getting_haircut_tone4": 32, "man_getting_haircut_tone5": 32, "man_golf": 32, "man_golfing_dark_skin_ton": 32, "man_golfing_light_skin_ton": 32, "man_golfing_medium_dark_skin_ton": 32, "man_golfing_medium_light_skin_ton": 32, "man_golfing_medium_skin_ton": 32, "man_golfing_tone1": 32, "man_golfing_tone2": 32, "man_golfing_tone3": 32, "man_golfing_tone4": 32, "man_golfing_tone5": 32, "man_guard": 32, "man_guard_dark_skin_ton": 32, "man_guard_light_skin_ton": 32, "man_guard_medium_dark_skin_ton": 32, "man_guard_medium_light_skin_ton": 32, "man_guard_medium_skin_ton": 32, "man_guard_tone1": 32, "man_guard_tone2": 32, "man_guard_tone3": 32, "man_guard_tone4": 32, "man_guard_tone5": 32, "man_health_work": 32, "man_health_worker_dark_skin_ton": 32, "man_health_worker_light_skin_ton": 32, "man_health_worker_medium_dark_skin_ton": 32, "man_health_worker_medium_light_skin_ton": 32, "man_health_worker_medium_skin_ton": 32, "man_health_worker_tone1": 32, "man_health_worker_tone2": 32, "man_health_worker_tone3": 32, "man_health_worker_tone4": 32, "man_health_worker_tone5": 32, "man_in_business_suit_levit": 32, "man_in_business_suit_levitating_dark_skin_ton": 32, "man_in_business_suit_levitating_light_skin_ton": 32, "man_in_business_suit_levitating_medium_dark_skin_ton": 32, "man_in_business_suit_levitating_medium_light_skin_ton": 32, "man_in_business_suit_levitating_medium_skin_ton": 32, "man_in_business_suit_levitating_tone1": 32, "man_in_business_suit_levitating_tone2": 32, "man_in_business_suit_levitating_tone3": 32, "man_in_business_suit_levitating_tone4": 32, "man_in_business_suit_levitating_tone5": 32, "man_in_lotus_posit": 32, "man_in_lotus_position_dark_skin_ton": 32, "man_in_lotus_position_light_skin_ton": 32, "man_in_lotus_position_medium_dark_skin_ton": 32, "man_in_lotus_position_medium_light_skin_ton": 32, "man_in_lotus_position_medium_skin_ton": 32, "man_in_lotus_position_tone1": 32, "man_in_lotus_position_tone2": 32, "man_in_lotus_position_tone3": 32, "man_in_lotus_position_tone4": 32, "man_in_lotus_position_tone5": 32, "man_in_manual_wheelchair": 32, "man_in_manual_wheelchair_dark_skin_ton": 32, "man_in_manual_wheelchair_light_skin_ton": 32, "man_in_manual_wheelchair_medium_dark_skin_ton": 32, "man_in_manual_wheelchair_medium_light_skin_ton": 32, "man_in_manual_wheelchair_medium_skin_ton": 32, "man_in_manual_wheelchair_tone1": 32, "man_in_manual_wheelchair_tone2": 32, "man_in_manual_wheelchair_tone3": 32, "man_in_manual_wheelchair_tone4": 32, "man_in_manual_wheelchair_tone5": 32, "man_in_motorized_wheelchair": 32, "man_in_motorized_wheelchair_dark_skin_ton": 32, "man_in_motorized_wheelchair_light_skin_ton": 32, "man_in_motorized_wheelchair_medium_dark_skin_ton": 32, "man_in_motorized_wheelchair_medium_light_skin_ton": 32, "man_in_motorized_wheelchair_medium_skin_ton": 32, "man_in_motorized_wheelchair_tone1": 32, "man_in_motorized_wheelchair_tone2": 32, "man_in_motorized_wheelchair_tone3": 32, "man_in_motorized_wheelchair_tone4": 32, "man_in_motorized_wheelchair_tone5": 32, "man_in_steamy_room": 32, "man_in_steamy_room_dark_skin_ton": 32, "man_in_steamy_room_light_skin_ton": 32, "man_in_steamy_room_medium_dark_skin_ton": 32, "man_in_steamy_room_medium_light_skin_ton": 32, "man_in_steamy_room_medium_skin_ton": 32, "man_in_steamy_room_tone1": 32, "man_in_steamy_room_tone2": 32, "man_in_steamy_room_tone3": 32, "man_in_steamy_room_tone4": 32, "man_in_steamy_room_tone5": 32, "man_in_tuxedo": 32, "man_in_tuxedo_dark_skin_ton": 32, "man_in_tuxedo_light_skin_ton": 32, "man_in_tuxedo_medium_dark_skin_ton": 32, "man_in_tuxedo_medium_light_skin_ton": 32, "man_in_tuxedo_medium_skin_ton": 32, "man_in_tuxedo_tone1": 32, "man_in_tuxedo_tone2": 32, "man_in_tuxedo_tone3": 32, "man_in_tuxedo_tone4": 32, "man_in_tuxedo_tone5": 32, "man_judg": 32, "man_judge_dark_skin_ton": 32, "man_judge_light_skin_ton": 32, "man_judge_medium_dark_skin_ton": 32, "man_judge_medium_light_skin_ton": 32, "man_judge_medium_skin_ton": 32, "man_judge_tone1": 32, "man_judge_tone2": 32, "man_judge_tone3": 32, "man_judge_tone4": 32, "man_judge_tone5": 32, "man_juggl": 32, "man_juggling_dark_skin_ton": 32, "man_juggling_light_skin_ton": 32, "man_juggling_medium_dark_skin_ton": 32, "man_juggling_medium_light_skin_ton": 32, "man_juggling_medium_skin_ton": 32, "man_juggling_tone1": 32, "man_juggling_tone2": 32, "man_juggling_tone3": 32, "man_juggling_tone4": 32, "man_juggling_tone5": 32, "man_kneel": 32, "man_kneeling_dark_skin_ton": 32, "man_kneeling_light_skin_ton": 32, "man_kneeling_medium_dark_skin_ton": 32, "man_kneeling_medium_light_skin_ton": 32, "man_kneeling_medium_skin_ton": 32, "man_kneeling_tone1": 32, "man_kneeling_tone2": 32, "man_kneeling_tone3": 32, "man_kneeling_tone4": 32, "man_kneeling_tone5": 32, "man_lifting_weight": 32, "man_lifting_weights_dark_skin_ton": 32, "man_lifting_weights_light_skin_ton": 32, "man_lifting_weights_medium_dark_skin_ton": 32, "man_lifting_weights_medium_light_skin_ton": 32, "man_lifting_weights_medium_skin_ton": 32, "man_lifting_weights_tone1": 32, "man_lifting_weights_tone2": 32, "man_lifting_weights_tone3": 32, "man_lifting_weights_tone4": 32, "man_lifting_weights_tone5": 32, "man_light_skin_tone_beard": 32, "man_mag": 32, "man_mage_dark_skin_ton": 32, "man_mage_light_skin_ton": 32, "man_mage_medium_dark_skin_ton": 32, "man_mage_medium_light_skin_ton": 32, "man_mage_medium_skin_ton": 32, "man_mage_tone1": 32, "man_mage_tone2": 32, "man_mage_tone3": 32, "man_mage_tone4": 32, "man_mage_tone5": 32, "man_mechan": 32, "man_mechanic_dark_skin_ton": 32, "man_mechanic_light_skin_ton": 32, "man_mechanic_medium_dark_skin_ton": 32, "man_mechanic_medium_light_skin_ton": 32, "man_mechanic_medium_skin_ton": 32, "man_mechanic_tone1": 32, "man_mechanic_tone2": 32, "man_mechanic_tone3": 32, "man_mechanic_tone4": 32, "man_mechanic_tone5": 32, "man_medium_dark_skin_tone_beard": 32, "man_medium_light_skin_tone_beard": 32, "man_medium_skin_tone_beard": 32, "man_mountain_bik": 32, "man_mountain_biking_dark_skin_ton": 32, "man_mountain_biking_light_skin_ton": 32, "man_mountain_biking_medium_dark_skin_ton": 32, "man_mountain_biking_medium_light_skin_ton": 32, "man_mountain_biking_medium_skin_ton": 32, "man_mountain_biking_tone1": 32, "man_mountain_biking_tone2": 32, "man_mountain_biking_tone3": 32, "man_mountain_biking_tone4": 32, "man_mountain_biking_tone5": 32, "man_office_work": 32, "man_office_worker_dark_skin_ton": 32, "man_office_worker_light_skin_ton": 32, "man_office_worker_medium_dark_skin_ton": 32, "man_office_worker_medium_light_skin_ton": 32, "man_office_worker_medium_skin_ton": 32, "man_office_worker_tone1": 32, "man_office_worker_tone2": 32, "man_office_worker_tone3": 32, "man_office_worker_tone4": 32, "man_office_worker_tone5": 32, "man_pilot": 32, "man_pilot_dark_skin_ton": 32, "man_pilot_light_skin_ton": 32, "man_pilot_medium_dark_skin_ton": 32, "man_pilot_medium_light_skin_ton": 32, "man_pilot_medium_skin_ton": 32, "man_pilot_tone1": 32, "man_pilot_tone2": 32, "man_pilot_tone3": 32, "man_pilot_tone4": 32, "man_pilot_tone5": 32, "man_playing_handbal": 32, "man_playing_handball_dark_skin_ton": 32, "man_playing_handball_light_skin_ton": 32, "man_playing_handball_medium_dark_skin_ton": 32, "man_playing_handball_medium_light_skin_ton": 32, "man_playing_handball_medium_skin_ton": 32, "man_playing_handball_tone1": 32, "man_playing_handball_tone2": 32, "man_playing_handball_tone3": 32, "man_playing_handball_tone4": 32, "man_playing_handball_tone5": 32, "man_playing_water_polo": 32, "man_playing_water_polo_dark_skin_ton": 32, "man_playing_water_polo_light_skin_ton": 32, "man_playing_water_polo_medium_dark_skin_ton": 32, "man_playing_water_polo_medium_light_skin_ton": 32, "man_playing_water_polo_medium_skin_ton": 32, "man_playing_water_polo_tone1": 32, "man_playing_water_polo_tone2": 32, "man_playing_water_polo_tone3": 32, "man_playing_water_polo_tone4": 32, "man_playing_water_polo_tone5": 32, "man_police_offic": 32, "man_police_officer_dark_skin_ton": 32, "man_police_officer_light_skin_ton": 32, "man_police_officer_medium_dark_skin_ton": 32, "man_police_officer_medium_light_skin_ton": 32, "man_police_officer_medium_skin_ton": 32, "man_police_officer_tone1": 32, "man_police_officer_tone2": 32, "man_police_officer_tone3": 32, "man_police_officer_tone4": 32, "man_police_officer_tone5": 32, "man_pout": 32, "man_pouting_dark_skin_ton": 32, "man_pouting_light_skin_ton": 32, "man_pouting_medium_dark_skin_ton": 32, "man_pouting_medium_light_skin_ton": 32, "man_pouting_medium_skin_ton": 32, "man_pouting_tone1": 32, "man_pouting_tone2": 32, "man_pouting_tone3": 32, "man_pouting_tone4": 32, "man_pouting_tone5": 32, "man_raising_hand": 32, "man_raising_hand_dark_skin_ton": 32, "man_raising_hand_light_skin_ton": 32, "man_raising_hand_medium_dark_skin_ton": 32, "man_raising_hand_medium_light_skin_ton": 32, "man_raising_hand_medium_skin_ton": 32, "man_raising_hand_tone1": 32, "man_raising_hand_tone2": 32, "man_raising_hand_tone3": 32, "man_raising_hand_tone4": 32, "man_raising_hand_tone5": 32, "man_red_hair": 32, "man_red_haired_dark_skin_ton": 32, "man_red_haired_light_skin_ton": 32, "man_red_haired_medium_dark_skin_ton": 32, "man_red_haired_medium_light_skin_ton": 32, "man_red_haired_medium_skin_ton": 32, "man_red_haired_tone1": 32, "man_red_haired_tone2": 32, "man_red_haired_tone3": 32, "man_red_haired_tone4": 32, "man_red_haired_tone5": 32, "man_rowing_boat": 32, "man_rowing_boat_dark_skin_ton": 32, "man_rowing_boat_light_skin_ton": 32, "man_rowing_boat_medium_dark_skin_ton": 32, "man_rowing_boat_medium_light_skin_ton": 32, "man_rowing_boat_medium_skin_ton": 32, "man_rowing_boat_tone1": 32, "man_rowing_boat_tone2": 32, "man_rowing_boat_tone3": 32, "man_rowing_boat_tone4": 32, "man_rowing_boat_tone5": 32, "man_run": 32, "man_running_dark_skin_ton": 32, "man_running_light_skin_ton": 32, "man_running_medium_dark_skin_ton": 32, "man_running_medium_light_skin_ton": 32, "man_running_medium_skin_ton": 32, "man_running_tone1": 32, "man_running_tone2": 32, "man_running_tone3": 32, "man_running_tone4": 32, "man_running_tone5": 32, "man_scientist": 32, "man_scientist_dark_skin_ton": 32, "man_scientist_light_skin_ton": 32, "man_scientist_medium_dark_skin_ton": 32, "man_scientist_medium_light_skin_ton": 32, "man_scientist_medium_skin_ton": 32, "man_scientist_tone1": 32, "man_scientist_tone2": 32, "man_scientist_tone3": 32, "man_scientist_tone4": 32, "man_scientist_tone5": 32, "man_shrug": 32, "man_shrugging_dark_skin_ton": 32, "man_shrugging_light_skin_ton": 32, "man_shrugging_medium_dark_skin_ton": 32, "man_shrugging_medium_light_skin_ton": 32, "man_shrugging_medium_skin_ton": 32, "man_shrugging_tone1": 32, "man_shrugging_tone2": 32, "man_shrugging_tone3": 32, "man_shrugging_tone4": 32, "man_shrugging_tone5": 32, "man_sing": 32, "man_singer_dark_skin_ton": 32, "man_singer_light_skin_ton": 32, "man_singer_medium_dark_skin_ton": 32, "man_singer_medium_light_skin_ton": 32, "man_singer_medium_skin_ton": 32, "man_singer_tone1": 32, "man_singer_tone2": 32, "man_singer_tone3": 32, "man_singer_tone4": 32, "man_singer_tone5": 32, "man_stand": 32, "man_standing_dark_skin_ton": 32, "man_standing_light_skin_ton": 32, "man_standing_medium_dark_skin_ton": 32, "man_standing_medium_light_skin_ton": 32, "man_standing_medium_skin_ton": 32, "man_standing_tone1": 32, "man_standing_tone2": 32, "man_standing_tone3": 32, "man_standing_tone4": 32, "man_standing_tone5": 32, "man_stud": 32, "man_student_dark_skin_ton": 32, "man_student_light_skin_ton": 32, "man_student_medium_dark_skin_ton": 32, "man_student_medium_light_skin_ton": 32, "man_student_medium_skin_ton": 32, "man_student_tone1": 32, "man_student_tone2": 32, "man_student_tone3": 32, "man_student_tone4": 32, "man_student_tone5": 32, "man_superhero": 32, "man_superhero_dark_skin_ton": 32, "man_superhero_light_skin_ton": 32, "man_superhero_medium_dark_skin_ton": 32, "man_superhero_medium_light_skin_ton": 32, "man_superhero_medium_skin_ton": 32, "man_superhero_tone1": 32, "man_superhero_tone2": 32, "man_superhero_tone3": 32, "man_superhero_tone4": 32, "man_superhero_tone5": 32, "man_supervillain": 32, "man_supervillain_dark_skin_ton": 32, "man_supervillain_light_skin_ton": 32, "man_supervillain_medium_dark_skin_ton": 32, "man_supervillain_medium_light_skin_ton": 32, "man_supervillain_medium_skin_ton": 32, "man_supervillain_tone1": 32, "man_supervillain_tone2": 32, "man_supervillain_tone3": 32, "man_supervillain_tone4": 32, "man_supervillain_tone5": 32, "man_surf": 32, "man_surfing_dark_skin_ton": 32, "man_surfing_light_skin_ton": 32, "man_surfing_medium_dark_skin_ton": 32, "man_surfing_medium_light_skin_ton": 32, "man_surfing_medium_skin_ton": 32, "man_surfing_tone1": 32, "man_surfing_tone2": 32, "man_surfing_tone3": 32, "man_surfing_tone4": 32, "man_surfing_tone5": 32, "man_swim": 32, "man_swimming_dark_skin_ton": 32, "man_swimming_light_skin_ton": 32, "man_swimming_medium_dark_skin_ton": 32, "man_swimming_medium_light_skin_ton": 32, "man_swimming_medium_skin_ton": 32, "man_swimming_tone1": 32, "man_swimming_tone2": 32, "man_swimming_tone3": 32, "man_swimming_tone4": 32, "man_swimming_tone5": 32, "man_teach": 32, "man_teacher_dark_skin_ton": 32, "man_teacher_light_skin_ton": 32, "man_teacher_medium_dark_skin_ton": 32, "man_teacher_medium_light_skin_ton": 32, "man_teacher_medium_skin_ton": 32, "man_teacher_tone1": 32, "man_teacher_tone2": 32, "man_teacher_tone3": 32, "man_teacher_tone4": 32, "man_teacher_tone5": 32, "man_technologist": 32, "man_technologist_dark_skin_ton": 32, "man_technologist_light_skin_ton": 32, "man_technologist_medium_dark_skin_ton": 32, "man_technologist_medium_light_skin_ton": 32, "man_technologist_medium_skin_ton": 32, "man_technologist_tone1": 32, "man_technologist_tone2": 32, "man_technologist_tone3": 32, "man_technologist_tone4": 32, "man_technologist_tone5": 32, "man_tipping_hand": 32, "man_tipping_hand_dark_skin_ton": 32, "man_tipping_hand_light_skin_ton": 32, "man_tipping_hand_medium_dark_skin_ton": 32, "man_tipping_hand_medium_light_skin_ton": 32, "man_tipping_hand_medium_skin_ton": 32, "man_tipping_hand_tone1": 32, "man_tipping_hand_tone2": 32, "man_tipping_hand_tone3": 32, "man_tipping_hand_tone4": 32, "man_tipping_hand_tone5": 32, "man_tone1": 32, "man_tone1_beard": 32, "man_tone2": 32, "man_tone2_beard": 32, "man_tone3": 32, "man_tone3_beard": 32, "man_tone4": 32, "man_tone4_beard": 32, "man_tone5": 32, "man_tone5_beard": 32, "man_vampir": 32, "man_vampire_dark_skin_ton": 32, "man_vampire_light_skin_ton": 32, "man_vampire_medium_dark_skin_ton": 32, "man_vampire_medium_light_skin_ton": 32, "man_vampire_medium_skin_ton": 32, "man_vampire_tone1": 32, "man_vampire_tone2": 32, "man_vampire_tone3": 32, "man_vampire_tone4": 32, "man_vampire_tone5": 32, "man_walk": 32, "man_walking_dark_skin_ton": 32, "man_walking_light_skin_ton": 32, "man_walking_medium_dark_skin_ton": 32, "man_walking_medium_light_skin_ton": 32, "man_walking_medium_skin_ton": 32, "man_walking_tone1": 32, "man_walking_tone2": 32, "man_walking_tone3": 32, "man_walking_tone4": 32, "man_walking_tone5": 32, "man_wearing_turban": 32, "man_wearing_turban_dark_skin_ton": 32, "man_wearing_turban_light_skin_ton": 32, "man_wearing_turban_medium_dark_skin_ton": 32, "man_wearing_turban_medium_light_skin_ton": 32, "man_wearing_turban_medium_skin_ton": 32, "man_wearing_turban_tone1": 32, "man_wearing_turban_tone2": 32, "man_wearing_turban_tone3": 32, "man_wearing_turban_tone4": 32, "man_wearing_turban_tone5": 32, "man_white_hair": 32, "man_white_haired_dark_skin_ton": 32, "man_white_haired_light_skin_ton": 32, "man_white_haired_medium_dark_skin_ton": 32, "man_white_haired_medium_light_skin_ton": 32, "man_white_haired_medium_skin_ton": 32, "man_white_haired_tone1": 32, "man_white_haired_tone2": 32, "man_white_haired_tone3": 32, "man_white_haired_tone4": 32, "man_white_haired_tone5": 32, "man_with_chinese_cap": 32, "man_with_chinese_cap_tone1": 32, "man_with_chinese_cap_tone2": 32, "man_with_chinese_cap_tone3": 32, "man_with_chinese_cap_tone4": 32, "man_with_chinese_cap_tone5": 32, "man_with_gua_pi_mao": 32, "man_with_gua_pi_mao_tone1": 32, "man_with_gua_pi_mao_tone2": 32, "man_with_gua_pi_mao_tone3": 32, "man_with_gua_pi_mao_tone4": 32, "man_with_gua_pi_mao_tone5": 32, "man_with_probing_can": 32, "man_with_probing_cane_dark_skin_ton": 32, "man_with_probing_cane_light_skin_ton": 32, "man_with_probing_cane_medium_dark_skin_ton": 32, "man_with_probing_cane_medium_light_skin_ton": 32, "man_with_probing_cane_medium_skin_ton": 32, "man_with_probing_cane_tone1": 32, "man_with_probing_cane_tone2": 32, "man_with_probing_cane_tone3": 32, "man_with_probing_cane_tone4": 32, "man_with_probing_cane_tone5": 32, "man_with_turban": 32, "man_with_turban_tone1": 32, "man_with_turban_tone2": 32, "man_with_turban_tone3": 32, "man_with_turban_tone4": 32, "man_with_turban_tone5": 32, "man_with_veil": 32, "man_with_veil_dark_skin_ton": 32, "man_with_veil_light_skin_ton": 32, "man_with_veil_medium_dark_skin_ton": 32, "man_with_veil_medium_light_skin_ton": 32, "man_with_veil_medium_skin_ton": 32, "man_with_veil_tone1": 32, "man_with_veil_tone2": 32, "man_with_veil_tone3": 32, "man_with_veil_tone4": 32, "man_with_veil_tone5": 32, "man_zombi": 32, "mango": 32, "mans_sho": 32, "mantelpiece_clock": 32, "mantlepiece_clock": 32, "manual_wheelchair": 32, "maple_leaf": 32, "marshall_island": 32, "martial_arts_uniform": 32, "martiniqu": 32, "mask": [32, 211, 282, 446, 883, 935, 936, 947, 1030, 1059, 1061], "massage_man": 32, "massage_tone1": 32, "massage_tone2": 32, "massage_tone3": 32, "massage_tone4": 32, "massage_tone5": 32, "massage_woman": 32, "mate": [32, 276, 940], "mauritania": 32, "mauritiu": 32, "mayott": 32, "mc": [32, 193, 308, 506], "md": [32, 170, 417, 888], "meat_on_bon": 32, "mechanic_dark_skin_ton": 32, "mechanic_light_skin_ton": 32, "mechanic_medium_dark_skin_ton": 32, "mechanic_medium_light_skin_ton": 32, "mechanic_medium_skin_ton": 32, "mechanic_tone1": 32, "mechanic_tone2": 32, "mechanic_tone3": 32, "mechanic_tone4": 32, "mechanic_tone5": 32, "mechanical_arm": 32, "mechanical_leg": 32, "medal": 32, "medal_militari": 32, "medal_sport": 32, "medical_symbol": 32, "mega": [32, 1084], "melon": 32, "memo": 32, "men_holding_hands_dark_skin_ton": 32, "men_holding_hands_dark_skin_tone_light_skin_ton": 32, "men_holding_hands_dark_skin_tone_medium_dark_skin_ton": 32, "men_holding_hands_dark_skin_tone_medium_light_skin_ton": 32, "men_holding_hands_dark_skin_tone_medium_skin_ton": 32, "men_holding_hands_light_skin_ton": 32, "men_holding_hands_light_skin_tone_dark_skin_ton": 32, "men_holding_hands_light_skin_tone_medium_dark_skin_ton": 32, "men_holding_hands_light_skin_tone_medium_light_skin_ton": 32, "men_holding_hands_light_skin_tone_medium_skin_ton": 32, "men_holding_hands_medium_dark_skin_ton": 32, "men_holding_hands_medium_dark_skin_tone_dark_skin_ton": 32, "men_holding_hands_medium_dark_skin_tone_light_skin_ton": 32, "men_holding_hands_medium_dark_skin_tone_medium_light_skin_ton": 32, "men_holding_hands_medium_dark_skin_tone_medium_skin_ton": 32, "men_holding_hands_medium_light_skin_ton": 32, "men_holding_hands_medium_light_skin_tone_dark_skin_ton": 32, "men_holding_hands_medium_light_skin_tone_light_skin_ton": 32, "men_holding_hands_medium_light_skin_tone_medium_dark_skin_ton": 32, "men_holding_hands_medium_light_skin_tone_medium_skin_ton": 32, "men_holding_hands_medium_skin_ton": 32, "men_holding_hands_medium_skin_tone_dark_skin_ton": 32, "men_holding_hands_medium_skin_tone_light_skin_ton": 32, "men_holding_hands_medium_skin_tone_medium_dark_skin_ton": 32, "men_holding_hands_medium_skin_tone_medium_light_skin_ton": 32, "men_holding_hands_tone1": 32, "men_holding_hands_tone1_tone2": 32, "men_holding_hands_tone1_tone3": 32, "men_holding_hands_tone1_tone4": 32, "men_holding_hands_tone1_tone5": 32, "men_holding_hands_tone2": 32, "men_holding_hands_tone2_tone1": 32, "men_holding_hands_tone2_tone3": 32, "men_holding_hands_tone2_tone4": 32, "men_holding_hands_tone2_tone5": 32, "men_holding_hands_tone3": 32, "men_holding_hands_tone3_tone1": 32, "men_holding_hands_tone3_tone2": 32, "men_holding_hands_tone3_tone4": 32, "men_holding_hands_tone3_tone5": 32, "men_holding_hands_tone4": 32, "men_holding_hands_tone4_tone1": 32, "men_holding_hands_tone4_tone2": 32, "men_holding_hands_tone4_tone3": 32, "men_holding_hands_tone4_tone5": 32, "men_holding_hands_tone5": 32, "men_holding_hands_tone5_tone1": 32, "men_holding_hands_tone5_tone2": 32, "men_holding_hands_tone5_tone3": 32, "men_holding_hands_tone5_tone4": 32, "men_with_bunny_ears_parti": 32, "men_wrestl": 32, "mending_heart": 32, "menorah": 32, "men": [32, 444, 500, 643], "mermaid": 32, "mermaid_dark_skin_ton": 32, "mermaid_light_skin_ton": 32, "mermaid_medium_dark_skin_ton": 32, "mermaid_medium_light_skin_ton": 32, "mermaid_medium_skin_ton": 32, "mermaid_tone1": 32, "mermaid_tone2": 32, "mermaid_tone3": 32, "mermaid_tone4": 32, "mermaid_tone5": 32, "merman": 32, "merman_dark_skin_ton": 32, "merman_light_skin_ton": 32, "merman_medium_dark_skin_ton": 32, "merman_medium_light_skin_ton": 32, "merman_medium_skin_ton": 32, "merman_tone1": 32, "merman_tone2": 32, "merman_tone3": 32, "merman_tone4": 32, "merman_tone5": 32, "merperson": 32, "merperson_dark_skin_ton": 32, "merperson_light_skin_ton": 32, "merperson_medium_dark_skin_ton": 32, "merperson_medium_light_skin_ton": 32, "merperson_medium_skin_ton": 32, "merperson_tone1": 32, "merperson_tone2": 32, "merperson_tone3": 32, "merperson_tone4": 32, "merperson_tone5": 32, "metal_tone1": 32, "metal_tone2": 32, "metal_tone3": 32, "metal_tone4": 32, "metal_tone5": 32, "metro": 32, "mexico": 32, "mf": [32, 262, 1145], "mg": 32, "mh": 32, "microb": 32, "micronesia": 32, "microphone2": 32, "microphon": [32, 195, 197], "microscop": 32, "middle_finger_tone1": 32, "middle_finger_tone2": 32, "middle_finger_tone3": 32, "middle_finger_tone4": 32, "middle_finger_tone5": 32, "military_helmet": 32, "military_med": 32, "milk": 32, "milk_glass": 32, "milky_wai": 32, "minibu": 32, "minidisc": 32, "mirror": [32, 507], "ml": 32, "mm": [32, 505], "mn": 32, "mo": [32, 634], "mobile_phon": 32, "mobile_phone_off": 32, "moldova": 32, "monaco": 32, "money_mouth": 32, "money_mouth_fac": 32, "money_with_w": 32, "moneybag": 32, "mongolia": 32, "monkei": 32, "monkey_fac": 32, "monorail": 32, "montenegro": 32, "montserrat": 32, "moon": 32, "moon_cak": 32, "morocco": 32, "mortar_board": 32, "mosqu": 32, "mosquito": 32, "mother_christma": 32, "mother_christmas_tone1": 32, "mother_christmas_tone2": 32, "mother_christmas_tone3": 32, "mother_christmas_tone4": 32, "mother_christmas_tone5": 32, "motor_boat": 32, "motor_scoot": 32, "motorbik": 32, "motorboat": 32, "motorcycl": 32, "motorized_wheelchair": 32, "motorwai": 32, "mount_fuji": 32, "mountain": 32, "mountain_bicyclist": 32, "mountain_bicyclist_tone1": 32, "mountain_bicyclist_tone2": 32, "mountain_bicyclist_tone3": 32, "mountain_bicyclist_tone4": 32, "mountain_bicyclist_tone5": 32, "mountain_biking_man": 32, "mountain_biking_woman": 32, "mountain_cablewai": 32, "mountain_railwai": 32, "mountain_snow": 32, "mouse2": 32, "mous": [32, 190, 195, 368, 948, 1125, 1133], "mouse_three_button": 32, "mouse_trap": 32, "movie_camera": 32, "moyai": 32, "mozambiqu": 32, "mp": [32, 38], "mq": [32, 1054, 1055], "mr": [32, 126, 259, 270, 278, 282, 1150], "mrs_clau": 32, "mrs_claus_tone1": 32, "mrs_claus_tone2": 32, "mrs_claus_tone3": 32, "mrs_claus_tone4": 32, "mrs_claus_tone5": 32, "mt": [32, 374, 406, 1058, 1059], "mu": [32, 282], "muscle_tone1": 32, "muscle_tone2": 32, "muscle_tone3": 32, "muscle_tone4": 32, "muscle_tone5": 32, "mushroom": 32, "musical_keyboard": 32, "musical_not": 32, "musical_scor": 32, "mute": 32, "mv": [32, 101, 126, 148, 230, 232, 296, 305, 306, 326, 327, 370, 371, 397, 402, 530, 840, 860, 917, 955, 968, 984, 1247], "mw": 32, "mx": 32, "mx_clau": 32, "mx_claus_dark_skin_ton": 32, "mx_claus_light_skin_ton": 32, "mx_claus_medium_dark_skin_ton": 32, "mx_claus_medium_light_skin_ton": 32, "mx_claus_medium_skin_ton": 32, "mx_claus_tone1": 32, "mx_claus_tone2": 32, "mx_claus_tone3": 32, "mx_claus_tone4": 32, "mx_claus_tone5": 32, "myanmar": 32, "mz": 32, "na": [32, 259, 262, 265, 278, 285, 303, 358], "nail_car": 32, "nail_care_tone1": 32, "nail_care_tone2": 32, "nail_care_tone3": 32, "nail_care_tone4": 32, "nail_care_tone5": 32, "name_badg": 32, "namibia": 32, "national_park": 32, "nauru": 32, "nauseated_fac": 32, "nazar_amulet": 32, "nc": [32, 230, 232, 305, 326, 327, 370, 426, 1011], "ne": [32, 644, 662, 664, 1026], "neckti": 32, "negative_squared_cross_mark": 32, "nepal": 32, "nerd_fac": 32, "nesting_dol": 32, "netherland": [32, 191, 1112], "neutral_fac": 32, "new_caledonia": 32, "new_moon": 32, "new_moon_with_fac": 32, "new_zealand": 32, "newspaper2": 32, "newspap": [32, 43], "newspaper_rol": 32, "next_track": 32, "next_track_button": 32, "nf": [32, 262, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364, 1005], "ng": [32, 191, 202, 306, 840, 984, 1063, 1073, 1074, 1075, 1078], "ni": 32, "nicaragua": 32, "niger": 32, "nigeria": 32, "night_with_star": 32, "nine": [32, 171, 210, 223, 233, 241, 259, 270, 358, 397], "ninja_dark_skin_ton": 32, "ninja_light_skin_ton": 32, "ninja_medium_dark_skin_ton": 32, "ninja_medium_light_skin_ton": 32, "ninja_medium_skin_ton": 32, "ninja_tone1": 32, "ninja_tone2": 32, "ninja_tone3": 32, "ninja_tone4": 32, "ninja_tone5": 32, "niue": 32, "nl": [32, 426], "no_bel": 32, "no_bicycl": 32, "no_entri": 32, "no_entry_sign": 32, "no_good": 32, "no_good_man": 32, "no_good_tone1": 32, "no_good_tone2": 32, "no_good_tone3": 32, "no_good_tone4": 32, "no_good_tone5": 32, "no_good_woman": 32, "no_mobile_phon": 32, "no_mouth": 32, "no_pedestrian": 32, "no_smok": 32, "non": [32, 80, 126, 127, 142, 144, 168, 186, 192, 193, 200, 217, 230, 252, 270, 278, 282, 287, 306, 315, 317, 324, 346, 374, 380, 460, 482, 500, 510, 513, 531, 590, 633, 635, 642, 644, 647, 655, 659, 660, 699, 714, 750, 756, 797, 801, 802, 817, 825, 839, 840, 873, 879, 892, 903, 925, 928, 930, 970, 995, 996, 1004, 1022, 1037, 1041, 1048, 1056, 1082, 1086, 1098, 1099, 1122, 1135, 1156, 1173, 1209, 1210, 1215, 1229, 1244], "potable_wat": 32, "norfolk_island": 32, "north_korea": 32, "northern_mariana_island": 32, "norwai": 32, "nose": 32, "nose_tone1": 32, "nose_tone2": 32, "nose_tone3": 32, "nose_tone4": 32, "nose_tone5": 32, "notebook_with_decorative_cov": 32, "notepad_spir": 32, "np": [32, 213, 240, 308, 342, 506, 1191, 1210], "nr": [32, 238, 282, 846], "nu": 32, "nut_and_bolt": 32, "nz": 32, "o2": [32, 494], "ocean": 32, "octagonal_sign": 32, "octopu": 32, "oden": 32, "office_work": 32, "office_worker_dark_skin_ton": 32, "office_worker_light_skin_ton": 32, "office_worker_medium_dark_skin_ton": 32, "office_worker_medium_light_skin_ton": 32, "office_worker_medium_skin_ton": 32, "office_worker_tone1": 32, "office_worker_tone2": 32, "office_worker_tone3": 32, "office_worker_tone4": 32, "office_worker_tone5": 32, "oil": 32, "oil_drum": 32, "ok": [32, 53, 132, 189, 191, 192, 196, 205, 222, 238, 268, 308, 372, 393, 434, 470, 488, 490, 524, 532, 549, 599, 600, 601, 646, 654, 657, 662, 667, 677, 730, 737, 748, 756, 771, 790, 793, 802, 803, 820, 901, 993, 1020, 1038, 1065, 1077, 1095, 1098, 1111, 1228], "ok_hand_tone1": 32, "ok_hand_tone2": 32, "ok_hand_tone3": 32, "ok_hand_tone4": 32, "ok_hand_tone5": 32, "ok_man": 32, "ok_woman": 32, "ok_woman_tone1": 32, "ok_woman_tone2": 32, "ok_woman_tone3": 32, "ok_woman_tone4": 32, "ok_woman_tone5": 32, "old_kei": 32, "older_adult": 32, "older_adult_dark_skin_ton": 32, "older_adult_light_skin_ton": 32, "older_adult_medium_dark_skin_ton": 32, "older_adult_medium_light_skin_ton": 32, "older_adult_medium_skin_ton": 32, "older_adult_tone1": 32, "older_adult_tone2": 32, "older_adult_tone3": 32, "older_adult_tone4": 32, "older_adult_tone5": 32, "older_man": 32, "older_man_tone1": 32, "older_man_tone2": 32, "older_man_tone3": 32, "older_man_tone4": 32, "older_man_tone5": 32, "older_woman": 32, "older_woman_tone1": 32, "older_woman_tone2": 32, "older_woman_tone3": 32, "older_woman_tone4": 32, "older_woman_tone5": 32, "oliv": [32, 254], "om": [32, 781], "om_symbol": 32, "oman": 32, "oncoming_automobil": 32, "oncoming_bu": 32, "oncoming_police_car": 32, "oncoming_taxi": 32, "one_piece_swimsuit": 32, "onion": 32, "open_file_fold": 32, "open_hand": 32, "open_hands_tone1": 32, "open_hands_tone2": 32, "open_hands_tone3": 32, "open_hands_tone4": 32, "open_hands_tone5": 32, "open_mouth": 32, "open_umbrella": 32, "ophiuchu": 32, "orange_book": 32, "orange_circl": 32, "orange_heart": 32, "orange_squar": 32, "orangutan": 32, "orthodox_cross": 32, "otter": 32, "outbox_trai": 32, "owl": 32, "ox": 32, "oyster": 32, "pa": [32, 259, 265, 275, 278, 470, 674, 676, 677], "paella": 32, "page_facing_up": 32, "page_with_curl": 32, "pager": [32, 980], "paintbrush": 32, "pakistan": 32, "palau": 32, "palestinian_territori": 32, "palm_tre": 32, "palms_up_togeth": 32, "palms_up_together_dark_skin_ton": 32, "palms_up_together_light_skin_ton": 32, "palms_up_together_medium_dark_skin_ton": 32, "palms_up_together_medium_light_skin_ton": 32, "palms_up_together_medium_skin_ton": 32, "palms_up_together_tone1": 32, "palms_up_together_tone2": 32, "palms_up_together_tone3": 32, "palms_up_together_tone4": 32, "palms_up_together_tone5": 32, "panama": 32, "pancak": 32, "panda_fac": 32, "paperclip": 32, "papua_new_guinea": 32, "parachut": 32, "paraguai": 32, "parasol_on_ground": 32, "park": 32, "parrot": 32, "part_alternation_mark": 32, "partly_sunni": 32, "partying_fac": 32, "passenger_ship": 32, "passport_control": 32, "pause_button": 32, "paw_print": 32, "pe": 32, "peac": 32, "peace_symbol": 32, "peach": 32, "peacock": 32, "peanut": 32, "pear": 32, "pen": 32, "pen_ballpoint": 32, "pen_fountain": 32, "pencil2": 32, "pencil": 32, "pensiv": 32, "people_holding_hand": 32, "people_holding_hands_dark_skin_ton": 32, "people_holding_hands_dark_skin_tone_light_skin_ton": 32, "people_holding_hands_dark_skin_tone_medium_dark_skin_ton": 32, "people_holding_hands_dark_skin_tone_medium_light_skin_ton": 32, "people_holding_hands_dark_skin_tone_medium_skin_ton": 32, "people_holding_hands_light_skin_ton": 32, "people_holding_hands_light_skin_tone_dark_skin_ton": 32, "people_holding_hands_light_skin_tone_medium_dark_skin_ton": 32, "people_holding_hands_light_skin_tone_medium_light_skin_ton": 32, "people_holding_hands_light_skin_tone_medium_skin_ton": 32, "people_holding_hands_medium_dark_skin_ton": 32, "people_holding_hands_medium_dark_skin_tone_dark_skin_ton": 32, "people_holding_hands_medium_dark_skin_tone_light_skin_ton": 32, "people_holding_hands_medium_dark_skin_tone_medium_light_skin_ton": 32, "people_holding_hands_medium_dark_skin_tone_medium_skin_ton": 32, "people_holding_hands_medium_light_skin_ton": 32, "people_holding_hands_medium_light_skin_tone_dark_skin_ton": 32, "people_holding_hands_medium_light_skin_tone_light_skin_ton": 32, "people_holding_hands_medium_light_skin_tone_medium_dark_skin_ton": 32, "people_holding_hands_medium_light_skin_tone_medium_skin_ton": 32, "people_holding_hands_medium_skin_ton": 32, "people_holding_hands_medium_skin_tone_dark_skin_ton": 32, "people_holding_hands_medium_skin_tone_light_skin_ton": 32, "people_holding_hands_medium_skin_tone_medium_dark_skin_ton": 32, "people_holding_hands_medium_skin_tone_medium_light_skin_ton": 32, "people_holding_hands_tone1": 32, "people_holding_hands_tone1_tone2": 32, "people_holding_hands_tone1_tone3": 32, "people_holding_hands_tone1_tone4": 32, "people_holding_hands_tone1_tone5": 32, "people_holding_hands_tone2": 32, "people_holding_hands_tone2_tone1": 32, "people_holding_hands_tone2_tone3": 32, "people_holding_hands_tone2_tone4": 32, "people_holding_hands_tone2_tone5": 32, "people_holding_hands_tone3": 32, "people_holding_hands_tone3_tone1": 32, "people_holding_hands_tone3_tone2": 32, "people_holding_hands_tone3_tone4": 32, "people_holding_hands_tone3_tone5": 32, "people_holding_hands_tone4": 32, "people_holding_hands_tone4_tone1": 32, "people_holding_hands_tone4_tone2": 32, "people_holding_hands_tone4_tone3": 32, "people_holding_hands_tone4_tone5": 32, "people_holding_hands_tone5": 32, "people_holding_hands_tone5_tone1": 32, "people_holding_hands_tone5_tone2": 32, "people_holding_hands_tone5_tone3": 32, "people_holding_hands_tone5_tone4": 32, "people_hug": 32, "people_with_bunny_ears_parti": 32, "people_wrestl": 32, "performing_art": 32, "persever": 32, "person_bald": 32, "person_bik": 32, "person_biking_tone1": 32, "person_biking_tone2": 32, "person_biking_tone3": 32, "person_biking_tone4": 32, "person_biking_tone5": 32, "person_bouncing_bal": 32, "person_bouncing_ball_tone1": 32, "person_bouncing_ball_tone2": 32, "person_bouncing_ball_tone3": 32, "person_bouncing_ball_tone4": 32, "person_bouncing_ball_tone5": 32, "person_bow": 32, "person_bowing_tone1": 32, "person_bowing_tone2": 32, "person_bowing_tone3": 32, "person_bowing_tone4": 32, "person_bowing_tone5": 32, "person_climb": 32, "person_climbing_dark_skin_ton": 32, "person_climbing_light_skin_ton": 32, "person_climbing_medium_dark_skin_ton": 32, "person_climbing_medium_light_skin_ton": 32, "person_climbing_medium_skin_ton": 32, "person_climbing_tone1": 32, "person_climbing_tone2": 32, "person_climbing_tone3": 32, "person_climbing_tone4": 32, "person_climbing_tone5": 32, "person_curly_hair": 32, "person_dark_skin_tone_bald": 32, "person_dark_skin_tone_curly_hair": 32, "person_dark_skin_tone_red_hair": 32, "person_dark_skin_tone_white_hair": 32, "person_doing_cartwheel": 32, "person_doing_cartwheel_tone1": 32, "person_doing_cartwheel_tone2": 32, "person_doing_cartwheel_tone3": 32, "person_doing_cartwheel_tone4": 32, "person_doing_cartwheel_tone5": 32, "person_facepalm": 32, "person_facepalming_tone1": 32, "person_facepalming_tone2": 32, "person_facepalming_tone3": 32, "person_facepalming_tone4": 32, "person_facepalming_tone5": 32, "person_feeding_babi": 32, "person_feeding_baby_dark_skin_ton": 32, "person_feeding_baby_light_skin_ton": 32, "person_feeding_baby_medium_dark_skin_ton": 32, "person_feeding_baby_medium_light_skin_ton": 32, "person_feeding_baby_medium_skin_ton": 32, "person_feeding_baby_tone1": 32, "person_feeding_baby_tone2": 32, "person_feeding_baby_tone3": 32, "person_feeding_baby_tone4": 32, "person_feeding_baby_tone5": 32, "person_fenc": 32, "person_frown": 32, "person_frowning_tone1": 32, "person_frowning_tone2": 32, "person_frowning_tone3": 32, "person_frowning_tone4": 32, "person_frowning_tone5": 32, "person_gesturing_no": 32, "person_gesturing_no_tone1": 32, "person_gesturing_no_tone2": 32, "person_gesturing_no_tone3": 32, "person_gesturing_no_tone4": 32, "person_gesturing_no_tone5": 32, "person_gesturing_ok": 32, "person_gesturing_ok_tone1": 32, "person_gesturing_ok_tone2": 32, "person_gesturing_ok_tone3": 32, "person_gesturing_ok_tone4": 32, "person_gesturing_ok_tone5": 32, "person_getting_haircut": 32, "person_getting_haircut_tone1": 32, "person_getting_haircut_tone2": 32, "person_getting_haircut_tone3": 32, "person_getting_haircut_tone4": 32, "person_getting_haircut_tone5": 32, "person_getting_massag": 32, "person_getting_massage_tone1": 32, "person_getting_massage_tone2": 32, "person_getting_massage_tone3": 32, "person_getting_massage_tone4": 32, "person_getting_massage_tone5": 32, "person_golf": 32, "person_golfing_dark_skin_ton": 32, "person_golfing_light_skin_ton": 32, "person_golfing_medium_dark_skin_ton": 32, "person_golfing_medium_light_skin_ton": 32, "person_golfing_medium_skin_ton": 32, "person_golfing_tone1": 32, "person_golfing_tone2": 32, "person_golfing_tone3": 32, "person_golfing_tone4": 32, "person_golfing_tone5": 32, "person_in_bed_dark_skin_ton": 32, "person_in_bed_light_skin_ton": 32, "person_in_bed_medium_dark_skin_ton": 32, "person_in_bed_medium_light_skin_ton": 32, "person_in_bed_medium_skin_ton": 32, "person_in_bed_tone1": 32, "person_in_bed_tone2": 32, "person_in_bed_tone3": 32, "person_in_bed_tone4": 32, "person_in_bed_tone5": 32, "person_in_lotus_posit": 32, "person_in_lotus_position_dark_skin_ton": 32, "person_in_lotus_position_light_skin_ton": 32, "person_in_lotus_position_medium_dark_skin_ton": 32, "person_in_lotus_position_medium_light_skin_ton": 32, "person_in_lotus_position_medium_skin_ton": 32, "person_in_lotus_position_tone1": 32, "person_in_lotus_position_tone2": 32, "person_in_lotus_position_tone3": 32, "person_in_lotus_position_tone4": 32, "person_in_lotus_position_tone5": 32, "person_in_manual_wheelchair": 32, "person_in_manual_wheelchair_dark_skin_ton": 32, "person_in_manual_wheelchair_light_skin_ton": 32, "person_in_manual_wheelchair_medium_dark_skin_ton": 32, "person_in_manual_wheelchair_medium_light_skin_ton": 32, "person_in_manual_wheelchair_medium_skin_ton": 32, "person_in_manual_wheelchair_tone1": 32, "person_in_manual_wheelchair_tone2": 32, "person_in_manual_wheelchair_tone3": 32, "person_in_manual_wheelchair_tone4": 32, "person_in_manual_wheelchair_tone5": 32, "person_in_motorized_wheelchair": 32, "person_in_motorized_wheelchair_dark_skin_ton": 32, "person_in_motorized_wheelchair_light_skin_ton": 32, "person_in_motorized_wheelchair_medium_dark_skin_ton": 32, "person_in_motorized_wheelchair_medium_light_skin_ton": 32, "person_in_motorized_wheelchair_medium_skin_ton": 32, "person_in_motorized_wheelchair_tone1": 32, "person_in_motorized_wheelchair_tone2": 32, "person_in_motorized_wheelchair_tone3": 32, "person_in_motorized_wheelchair_tone4": 32, "person_in_motorized_wheelchair_tone5": 32, "person_in_steamy_room": 32, "person_in_steamy_room_dark_skin_ton": 32, "person_in_steamy_room_light_skin_ton": 32, "person_in_steamy_room_medium_dark_skin_ton": 32, "person_in_steamy_room_medium_light_skin_ton": 32, "person_in_steamy_room_medium_skin_ton": 32, "person_in_steamy_room_tone1": 32, "person_in_steamy_room_tone2": 32, "person_in_steamy_room_tone3": 32, "person_in_steamy_room_tone4": 32, "person_in_steamy_room_tone5": 32, "person_in_tuxedo": 32, "person_in_tuxedo_tone1": 32, "person_in_tuxedo_tone2": 32, "person_in_tuxedo_tone3": 32, "person_in_tuxedo_tone4": 32, "person_in_tuxedo_tone5": 32, "person_juggl": 32, "person_juggling_tone1": 32, "person_juggling_tone2": 32, "person_juggling_tone3": 32, "person_juggling_tone4": 32, "person_juggling_tone5": 32, "person_kneel": 32, "person_kneeling_dark_skin_ton": 32, "person_kneeling_light_skin_ton": 32, "person_kneeling_medium_dark_skin_ton": 32, "person_kneeling_medium_light_skin_ton": 32, "person_kneeling_medium_skin_ton": 32, "person_kneeling_tone1": 32, "person_kneeling_tone2": 32, "person_kneeling_tone3": 32, "person_kneeling_tone4": 32, "person_kneeling_tone5": 32, "person_lifting_weight": 32, "person_lifting_weights_tone1": 32, "person_lifting_weights_tone2": 32, "person_lifting_weights_tone3": 32, "person_lifting_weights_tone4": 32, "person_lifting_weights_tone5": 32, "person_light_skin_tone_bald": 32, "person_light_skin_tone_curly_hair": 32, "person_light_skin_tone_red_hair": 32, "person_light_skin_tone_white_hair": 32, "person_medium_dark_skin_tone_bald": 32, "person_medium_dark_skin_tone_curly_hair": 32, "person_medium_dark_skin_tone_red_hair": 32, "person_medium_dark_skin_tone_white_hair": 32, "person_medium_light_skin_tone_bald": 32, "person_medium_light_skin_tone_curly_hair": 32, "person_medium_light_skin_tone_red_hair": 32, "person_medium_light_skin_tone_white_hair": 32, "person_medium_skin_tone_bald": 32, "person_medium_skin_tone_curly_hair": 32, "person_medium_skin_tone_red_hair": 32, "person_medium_skin_tone_white_hair": 32, "person_mountain_bik": 32, "person_mountain_biking_tone1": 32, "person_mountain_biking_tone2": 32, "person_mountain_biking_tone3": 32, "person_mountain_biking_tone4": 32, "person_mountain_biking_tone5": 32, "person_playing_handbal": 32, "person_playing_handball_tone1": 32, "person_playing_handball_tone2": 32, "person_playing_handball_tone3": 32, "person_playing_handball_tone4": 32, "person_playing_handball_tone5": 32, "person_playing_water_polo": 32, "person_playing_water_polo_tone1": 32, "person_playing_water_polo_tone2": 32, "person_playing_water_polo_tone3": 32, "person_playing_water_polo_tone4": 32, "person_playing_water_polo_tone5": 32, "person_pout": 32, "person_pouting_tone1": 32, "person_pouting_tone2": 32, "person_pouting_tone3": 32, "person_pouting_tone4": 32, "person_pouting_tone5": 32, "person_raising_hand": 32, "person_raising_hand_tone1": 32, "person_raising_hand_tone2": 32, "person_raising_hand_tone3": 32, "person_raising_hand_tone4": 32, "person_raising_hand_tone5": 32, "person_red_hair": 32, "person_rowing_boat": 32, "person_rowing_boat_tone1": 32, "person_rowing_boat_tone2": 32, "person_rowing_boat_tone3": 32, "person_rowing_boat_tone4": 32, "person_rowing_boat_tone5": 32, "person_run": 32, "person_running_tone1": 32, "person_running_tone2": 32, "person_running_tone3": 32, "person_running_tone4": 32, "person_running_tone5": 32, "person_shrug": 32, "person_shrugging_tone1": 32, "person_shrugging_tone2": 32, "person_shrugging_tone3": 32, "person_shrugging_tone4": 32, "person_shrugging_tone5": 32, "person_stand": 32, "person_standing_dark_skin_ton": 32, "person_standing_light_skin_ton": 32, "person_standing_medium_dark_skin_ton": 32, "person_standing_medium_light_skin_ton": 32, "person_standing_medium_skin_ton": 32, "person_standing_tone1": 32, "person_standing_tone2": 32, "person_standing_tone3": 32, "person_standing_tone4": 32, "person_standing_tone5": 32, "person_surf": 32, "person_surfing_tone1": 32, "person_surfing_tone2": 32, "person_surfing_tone3": 32, "person_surfing_tone4": 32, "person_surfing_tone5": 32, "person_swim": 32, "person_swimming_tone1": 32, "person_swimming_tone2": 32, "person_swimming_tone3": 32, "person_swimming_tone4": 32, "person_swimming_tone5": 32, "person_tipping_hand": 32, "person_tipping_hand_tone1": 32, "person_tipping_hand_tone2": 32, "person_tipping_hand_tone3": 32, "person_tipping_hand_tone4": 32, "person_tipping_hand_tone5": 32, "person_tone1_bald": 32, "person_tone1_curly_hair": 32, "person_tone1_red_hair": 32, "person_tone1_white_hair": 32, "person_tone2_bald": 32, "person_tone2_curly_hair": 32, "person_tone2_red_hair": 32, "person_tone2_white_hair": 32, "person_tone3_bald": 32, "person_tone3_curly_hair": 32, "person_tone3_red_hair": 32, "person_tone3_white_hair": 32, "person_tone4_bald": 32, "person_tone4_curly_hair": 32, "person_tone4_red_hair": 32, "person_tone4_white_hair": 32, "person_tone5_bald": 32, "person_tone5_curly_hair": 32, "person_tone5_red_hair": 32, "person_tone5_white_hair": 32, "person_walk": 32, "person_walking_tone1": 32, "person_walking_tone2": 32, "person_walking_tone3": 32, "person_walking_tone4": 32, "person_walking_tone5": 32, "person_wearing_turban": 32, "person_wearing_turban_tone1": 32, "person_wearing_turban_tone2": 32, "person_wearing_turban_tone3": 32, "person_wearing_turban_tone4": 32, "person_wearing_turban_tone5": 32, "person_white_hair": 32, "person_with_bal": 32, "person_with_ball_tone1": 32, "person_with_ball_tone2": 32, "person_with_ball_tone3": 32, "person_with_ball_tone4": 32, "person_with_ball_tone5": 32, "person_with_blond_hair": 32, "person_with_blond_hair_tone1": 32, "person_with_blond_hair_tone2": 32, "person_with_blond_hair_tone3": 32, "person_with_blond_hair_tone4": 32, "person_with_blond_hair_tone5": 32, "person_with_pouting_fac": 32, "person_with_pouting_face_tone1": 32, "person_with_pouting_face_tone2": 32, "person_with_pouting_face_tone3": 32, "person_with_pouting_face_tone4": 32, "person_with_pouting_face_tone5": 32, "person_with_probing_can": 32, "person_with_probing_cane_dark_skin_ton": 32, "person_with_probing_cane_light_skin_ton": 32, "person_with_probing_cane_medium_dark_skin_ton": 32, "person_with_probing_cane_medium_light_skin_ton": 32, "person_with_probing_cane_medium_skin_ton": 32, "person_with_probing_cane_tone1": 32, "person_with_probing_cane_tone2": 32, "person_with_probing_cane_tone3": 32, "person_with_probing_cane_tone4": 32, "person_with_probing_cane_tone5": 32, "person_with_veil": 32, "person_with_veil_tone1": 32, "person_with_veil_tone2": 32, "person_with_veil_tone3": 32, "person_with_veil_tone4": 32, "person_with_veil_tone5": 32, "peru": 32, "petri_dish": 32, "pf": [32, 193, 820], "pg": [32, 498], "ph": 32, "philippin": 32, "phone": 32, "pick": [32, 80, 183, 193, 200, 251, 372, 511, 601, 1044, 1075, 1080], "pickup_truck": 32, "pie": 32, "pig2": 32, "pig_nos": 32, "pill": 32, "pilot": 32, "pilot_dark_skin_ton": 32, "pilot_light_skin_ton": 32, "pilot_medium_dark_skin_ton": 32, "pilot_medium_light_skin_ton": 32, "pilot_medium_skin_ton": 32, "pilot_tone1": 32, "pilot_tone2": 32, "pilot_tone3": 32, "pilot_tone4": 32, "pilot_tone5": 32, "pinched_fing": 32, "pinched_fingers_dark_skin_ton": 32, "pinched_fingers_light_skin_ton": 32, "pinched_fingers_medium_dark_skin_ton": 32, "pinched_fingers_medium_light_skin_ton": 32, "pinched_fingers_medium_skin_ton": 32, "pinched_fingers_tone1": 32, "pinched_fingers_tone2": 32, "pinched_fingers_tone3": 32, "pinched_fingers_tone4": 32, "pinched_fingers_tone5": 32, "pinching_hand": 32, "pinching_hand_dark_skin_ton": 32, "pinching_hand_light_skin_ton": 32, "pinching_hand_medium_dark_skin_ton": 32, "pinching_hand_medium_light_skin_ton": 32, "pinching_hand_medium_skin_ton": 32, "pinching_hand_tone1": 32, "pinching_hand_tone2": 32, "pinching_hand_tone3": 32, "pinching_hand_tone4": 32, "pinching_hand_tone5": 32, "pineappl": [32, 314], "ping_pong": 32, "pirate_flag": 32, "pisc": 32, "pitcairn_island": 32, "pizza": 32, "pi\u00f1ata": 32, "pk": 32, "pl": 32, "placard": 32, "place_of_worship": 32, "plate_with_cutleri": 32, "play_or_pause_button": 32, "play_paus": 32, "pleading_fac": 32, "plunger": 32, "pm": [32, 38, 358], "pn": 32, "point_down": 32, "point_down_tone1": 32, "point_down_tone2": 32, "point_down_tone3": 32, "point_down_tone4": 32, "point_down_tone5": 32, "point_left": 32, "point_left_tone1": 32, "point_left_tone2": 32, "point_left_tone3": 32, "point_left_tone4": 32, "point_left_tone5": 32, "point_right": 32, "point_right_tone1": 32, "point_right_tone2": 32, "point_right_tone3": 32, "point_right_tone4": 32, "point_right_tone5": 32, "point_up_2": 32, "point_up_2_tone1": 32, "point_up_2_tone2": 32, "point_up_2_tone3": 32, "point_up_2_tone4": 32, "point_up_2_tone5": 32, "point_up_tone1": 32, "point_up_tone2": 32, "point_up_tone3": 32, "point_up_tone4": 32, "point_up_tone5": 32, "poland": 32, "polar_bear": 32, "police_car": 32, "police_offic": 32, "police_officer_tone1": 32, "police_officer_tone2": 32, "police_officer_tone3": 32, "police_officer_tone4": 32, "police_officer_tone5": 32, "policeman": 32, "policewoman": 32, "poo": 32, "poodl": 32, "poop": 32, "popcorn": 32, "portug": 32, "post_offic": 32, "postal_horn": 32, "postbox": 32, "potato": 32, "potted_pl": 32, "pouch": 32, "poultry_leg": 32, "pound": [32, 36], "pound_symbol": 32, "pouting_cat": 32, "pouting_man": 32, "pouting_woman": 32, "pr": [32, 35, 278, 293], "prai": 32, "pray_tone1": 32, "pray_tone2": 32, "pray_tone3": 32, "pray_tone4": 32, "pray_tone5": 32, "prayer_bead": 32, "pregnant_woman": 32, "pregnant_woman_tone1": 32, "pregnant_woman_tone2": 32, "pregnant_woman_tone3": 32, "pregnant_woman_tone4": 32, "pregnant_woman_tone5": 32, "pretzel": 32, "previous_track": 32, "previous_track_button": 32, "princ": 32, "prince_tone1": 32, "prince_tone2": 32, "prince_tone3": 32, "prince_tone4": 32, "prince_tone5": 32, "princess": 32, "princess_tone1": 32, "princess_tone2": 32, "princess_tone3": 32, "princess_tone4": 32, "princess_tone5": 32, "printer": 32, "probing_can": 32, "projector": 32, "p": [32, 38, 62, 116, 119, 126, 144, 147, 186, 190, 191, 195, 196, 202, 218, 230, 232, 233, 249, 262, 278, 282, 308, 310, 368, 430, 464, 470, 473, 474, 477, 478, 482, 518, 519, 520, 522, 524, 525, 526, 530, 573, 598, 599, 601, 602, 644, 646, 649, 654, 655, 656, 657, 658, 660, 662, 663, 677, 685, 746, 749, 750, 753, 755, 758, 767, 768, 769, 771, 773, 774, 777, 778, 779, 785, 787, 788, 797, 801, 806, 817, 835, 838, 851, 887, 906, 914, 915, 925, 948, 950, 967, 970, 977, 987, 995, 1004, 1011, 1022, 1031, 1046, 1059, 1075, 1082, 1084, 1145, 1223, 1247], "pt": [32, 805, 918, 1046], "pud": 32, "puerto_rico": 32, "punch": 32, "punch_tone1": 32, "punch_tone2": 32, "punch_tone3": 32, "punch_tone4": 32, "punch_tone5": 32, "purple_circl": 32, "purple_heart": 32, "purple_squar": 32, "purs": 32, "pushpin": 32, "put_litter_in_its_plac": 32, "pw": 32, "qa": 32, "qatar": 32, "rabbit2": 32, "rabbit": 32, "raccoon": 32, "race_car": 32, "racehors": 32, "racing_car": 32, "racing_motorcycl": 32, "radio": 32, "radio_button": 32, "radioact": 32, "radioactive_sign": 32, "rage": 32, "railroad_track": 32, "railway_car": 32, "railway_track": 32, "rainbow": 32, "rainbow_flag": 32, "raised_back_of_hand": 32, "raised_back_of_hand_tone1": 32, "raised_back_of_hand_tone2": 32, "raised_back_of_hand_tone3": 32, "raised_back_of_hand_tone4": 32, "raised_back_of_hand_tone5": 32, "raised_hand": 32, "raised_hand_tone1": 32, "raised_hand_tone2": 32, "raised_hand_tone3": 32, "raised_hand_tone4": 32, "raised_hand_tone5": 32, "raised_hand_with_fingers_splai": 32, "raised_hand_with_fingers_splayed_tone1": 32, "raised_hand_with_fingers_splayed_tone2": 32, "raised_hand_with_fingers_splayed_tone3": 32, "raised_hand_with_fingers_splayed_tone4": 32, "raised_hand_with_fingers_splayed_tone5": 32, "raised_hand_with_part_between_middle_and_ring_fing": 32, "raised_hand_with_part_between_middle_and_ring_fingers_tone1": 32, "raised_hand_with_part_between_middle_and_ring_fingers_tone2": 32, "raised_hand_with_part_between_middle_and_ring_fingers_tone3": 32, "raised_hand_with_part_between_middle_and_ring_fingers_tone4": 32, "raised_hand_with_part_between_middle_and_ring_fingers_tone5": 32, "raised_hands_tone1": 32, "raised_hands_tone2": 32, "raised_hands_tone3": 32, "raised_hands_tone4": 32, "raised_hands_tone5": 32, "raising_hand": 32, "raising_hand_man": 32, "raising_hand_tone1": 32, "raising_hand_tone2": 32, "raising_hand_tone3": 32, "raising_hand_tone4": 32, "raising_hand_tone5": 32, "raising_hand_woman": 32, "ram": [32, 192, 193, 197, 315, 887, 924, 926, 1010], "ramen": 32, "rat": 32, "razor": 32, "re": [32, 38, 62, 124, 131, 133, 192, 197, 229, 238, 241, 242, 252, 255, 262, 263, 265, 270, 272, 278, 282, 288, 290, 291, 300, 303, 307, 323, 324, 330, 352, 358, 364, 397, 402, 460, 506, 510, 534, 544, 569, 599, 646, 652, 771, 793, 856, 892, 901, 906, 949, 1038, 1059, 1075, 1079, 1084, 1089, 1108, 1131, 1183, 1188, 1210], "receipt": 32, "record_button": 32, "recycl": 32, "red_car": 32, "red_circl": 32, "red_envelop": 32, "red_hair": 32, "red_squar": 32, "regional_indicator_a": 32, "regional_indicator_b": 32, "regional_indicator_c": 32, "regional_indicator_d": 32, "regional_indicator_": 32, "regional_indicator_f": 32, "regional_indicator_g": 32, "regional_indicator_h": 32, "regional_indicator_i": 32, "regional_indicator_j": 32, "regional_indicator_k": 32, "regional_indicator_l": 32, "regional_indicator_m": 32, "regional_indicator_n": 32, "regional_indicator_o": 32, "regional_indicator_p": 32, "regional_indicator_q": 32, "regional_indicator_r": 32, "regional_indicator_t": 32, "regional_indicator_u": 32, "regional_indicator_v": 32, "regional_indicator_w": 32, "regional_indicator_x": 32, "regional_indicator_z": 32, "regist": [32, 36, 38, 190, 200, 208, 233, 237, 265, 278, 324, 383, 446, 480, 551, 579, 600, 602, 609, 843, 850, 858, 865, 871, 883, 975, 992, 1008, 1012, 1114, 1204], "relax": 32, "reliev": [32, 57], "reminder_ribbon": 32, "repeat": [32, 43, 102, 126, 144, 148, 180, 196, 251, 306, 371, 404, 494, 506, 662, 840, 887, 917, 948, 952, 956, 959, 962, 967, 968, 984, 997, 1024, 1122], "repeat_on": 32, "rescue_worker_helmet": 32, "restroom": 32, "reunion": 32, "reversed_hand_with_middle_finger_extend": 32, "reversed_hand_with_middle_finger_extended_tone1": 32, "reversed_hand_with_middle_finger_extended_tone2": 32, "reversed_hand_with_middle_finger_extended_tone3": 32, "reversed_hand_with_middle_finger_extended_tone4": 32, "reversed_hand_with_middle_finger_extended_tone5": 32, "revolving_heart": 32, "rewind": [32, 389, 793], "rhino": 32, "rhinocero": 32, "ribbon": 32, "rice": 32, "rice_bal": 32, "rice_crack": 32, "rice_scen": 32, "right_anger_bubbl": 32, "right_facing_fist": 32, "right_facing_fist_tone1": 32, "right_facing_fist_tone2": 32, "right_facing_fist_tone3": 32, "right_facing_fist_tone4": 32, "right_facing_fist_tone5": 32, "right_fist": 32, "right_fist_tone1": 32, "right_fist_tone2": 32, "right_fist_tone3": 32, "right_fist_tone4": 32, "right_fist_tone5": 32, "ring": [32, 35, 38, 948], "ringed_planet": 32, "ro": 32, "robot": [32, 278], "robot_fac": 32, "rock": [32, 319, 504, 1079, 1081, 1217], "rocket": [32, 197], "rofl": 32, "roll_ey": 32, "roll_of_pap": 32, "rolled_up_newspap": 32, "roller_coast": 32, "roller_sk": 32, "rolling_on_the_floor_laugh": 32, "romania": 32, "rooster": 32, "rosett": 32, "rotating_light": 32, "round_pushpin": 32, "rowboat": 32, "rowboat_tone1": 32, "rowboat_tone2": 32, "rowboat_tone3": 32, "rowboat_tone4": 32, "rowboat_tone5": 32, "rowing_man": 32, "rowing_woman": 32, "ru": 32, "rugby_footbal": 32, "runner": [32, 44, 1228, 1259], "runner_tone1": 32, "runner_tone2": 32, "runner_tone3": 32, "runner_tone4": 32, "runner_tone5": 32, "running_man": 32, "running_shirt_with_sash": 32, "running_woman": 32, "russia": [32, 1201], "rw": [32, 60, 62, 191, 192, 201, 209, 278, 288, 538, 838, 843, 851, 918, 930, 933, 944, 947, 967, 970, 985, 992, 993, 994, 996, 1005, 1016, 1019, 1020, 1028, 1056, 1062, 1063, 1064, 1075, 1077, 1078, 1114, 1143], "rwanda": 32, "safety_pin": 32, "safety_vest": 32, "sagittariu": 32, "sailboat": 32, "saint_martin": 32, "sake": 32, "salad": 32, "salt": [32, 944], "samoa": 32, "san_marino": 32, "sandal": 32, "sandwich": 32, "santa": 32, "santa_tone1": 32, "santa_tone2": 32, "santa_tone3": 32, "santa_tone4": 32, "santa_tone5": 32, "sao_tome_princip": 32, "sari": 32, "satellit": 32, "satellite_orbit": 32, "saudi": 32, "saudi_arabia": 32, "saudiarabia": 32, "sauropod": 32, "saxophon": 32, "sb": [32, 307], "sc": [32, 35], "scale": [32, 80, 222, 268, 282, 494, 992, 1079], "scarf": 32, "school": [32, 282, 585, 620, 1210, 1242], "school_satchel": 32, "scientist": [32, 222, 415, 1111, 1193, 1194, 1195, 1202], "scientist_dark_skin_ton": 32, "scientist_light_skin_ton": 32, "scientist_medium_dark_skin_ton": 32, "scientist_medium_light_skin_ton": 32, "scientist_medium_skin_ton": 32, "scientist_tone1": 32, "scientist_tone2": 32, "scientist_tone3": 32, "scientist_tone4": 32, "scientist_tone5": 32, "scissor": 32, "scooter": 32, "scorpion": 32, "scorpiu": 32, "scotland": 32, "scream": [32, 251, 948], "scream_cat": 32, "screwdriv": 32, "scroll": [32, 196, 585], "sd": [32, 66, 262, 278, 282, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364, 887], "se": [32, 649], "seal": 32, "seat": 32, "second_plac": 32, "second_place_med": 32, "secret": [32, 730, 751, 1001, 1086, 1199], "see_no_evil": 32, "seedl": 32, "selfi": 32, "selfie_tone1": 32, "selfie_tone2": 32, "selfie_tone3": 32, "selfie_tone4": 32, "selfie_tone5": 32, "seneg": 32, "serbia": 32, "service_dog": 32, "seven": [32, 36, 86, 210, 223, 233, 241, 270, 358, 364, 397, 1155, 1166], "sewing_needl": 32, "seychel": 32, "sg": 32, "sh": [32, 60, 197, 201, 290, 526, 860, 914, 915, 933, 994, 1016, 1026, 1175], "shaking_hand": 32, "shaking_hands_tone1": 32, "shaking_hands_tone2": 32, "shaking_hands_tone3": 32, "shaking_hands_tone4": 32, "shaking_hands_tone5": 32, "shallow_pan_of_food": 32, "shamrock": 32, "shark": 32, "shaved_ic": 32, "sheep": 32, "shelled_peanut": 32, "shield": [32, 190], "shinto_shrin": 32, "ship": [32, 195], "shirt": [32, 43, 187], "shit": [32, 249], "shop": [32, 314], "shopping_bag": 32, "shopping_cart": 32, "shopping_trollei": 32, "shower": 32, "shrimp": 32, "shrug": 32, "shrug_tone1": 32, "shrug_tone2": 32, "shrug_tone3": 32, "shrug_tone4": 32, "shrug_tone5": 32, "shushing_fac": 32, "si": 32, "sick": [32, 548], "sierra_leon": 32, "sign_of_the_horn": 32, "sign_of_the_horns_tone1": 32, "sign_of_the_horns_tone2": 32, "sign_of_the_horns_tone3": 32, "sign_of_the_horns_tone4": 32, "sign_of_the_horns_tone5": 32, "signal_strength": 32, "singapor": 32, "singer": 32, "singer_dark_skin_ton": 32, "singer_light_skin_ton": 32, "singer_medium_dark_skin_ton": 32, "singer_medium_light_skin_ton": 32, "singer_medium_skin_ton": 32, "singer_tone1": 32, "singer_tone2": 32, "singer_tone3": 32, "singer_tone4": 32, "singer_tone5": 32, "sint_maarten": 32, "six": [32, 210, 223, 233, 241, 259, 358, 364, 397, 1122], "six_pointed_star": 32, "sj": 32, "sk": 32, "skateboard": 32, "skeleton": [32, 193, 205, 534, 726, 916], "ski": 32, "skier": 32, "skull": 32, "skull_and_crossbon": 32, "skull_crossbon": 32, "skunk": 32, "sl": [32, 389, 1046], "sled": 32, "sleeping_accommod": 32, "sleeping_b": 32, "sleepi": 32, "sleuth_or_spi": 32, "sleuth_or_spy_tone1": 32, "sleuth_or_spy_tone2": 32, "sleuth_or_spy_tone3": 32, "sleuth_or_spy_tone4": 32, "sleuth_or_spy_tone5": 32, "slight_frown": 32, "slight_smil": 32, "slightly_frowning_fac": 32, "slightly_smiling_fac": 32, "slot_machin": 32, "sloth": 32, "slovakia": 32, "slovenia": [32, 257], "sm": 32, "small_airplan": 32, "small_blue_diamond": 32, "small_orange_diamond": 32, "small_red_triangl": 32, "small_red_triangle_down": 32, "smile": [32, 35], "smile_cat": 32, "smilei": [32, 62], "smiley_cat": 32, "smiling_face_with_3_heart": 32, "smiling_face_with_tear": 32, "smiling_imp": 32, "smirk": 32, "smirk_cat": 32, "smoke": 32, "sn": 32, "snail": 32, "snake": 32, "sneez": 32, "sneezing_fac": 32, "snow_capped_mountain": 32, "snowboard": 32, "snowboarder_dark_skin_ton": 32, "snowboarder_light_skin_ton": 32, "snowboarder_medium_dark_skin_ton": 32, "snowboarder_medium_light_skin_ton": 32, "snowboarder_medium_skin_ton": 32, "snowboarder_tone1": 32, "snowboarder_tone2": 32, "snowboarder_tone3": 32, "snowboarder_tone4": 32, "snowboarder_tone5": 32, "snowflak": 32, "snowman2": 32, "snowman": 32, "snowman_with_snow": 32, "sob": 32, "soccer": 32, "sock": 32, "softbal": 32, "solomon_island": 32, "somalia": 32, "soon": [32, 191, 192, 197, 649, 737, 887, 994, 1046, 1060, 1204], "sound": [32, 61, 63, 189, 193, 196, 197, 266, 372, 807, 930, 985, 993, 994, 1222], "south_africa": 32, "south_georgia_south_sandwich_island": 32, "south_sudan": 32, "space_invad": 32, "spade": [32, 38], "spaghetti": [32, 131, 494, 505], "spain": 32, "sparkl": 32, "sparkler": 32, "sparkling_heart": 32, "speak_no_evil": 32, "speaker": [32, 825], "speaking_head": 32, "speaking_head_in_silhouett": 32, "speech_balloon": 32, "speech_left": 32, "speedboat": 32, "spider": 32, "spider_web": 32, "spiral_calendar": 32, "spiral_calendar_pad": 32, "spiral_note_pad": 32, "spiral_notepad": 32, "spong": 32, "spoon": 32, "sports_med": 32, "spy": 32, "spy_tone1": 32, "spy_tone2": 32, "spy_tone3": 32, "spy_tone4": 32, "spy_tone5": 32, "squeeze_bottl": 32, "squid": 32, "sr": [32, 262, 1145], "sri_lanka": 32, "st": [32, 165, 256, 506, 1056, 1058, 1059], "st_barthelemi": 32, "st_helena": 32, "st_kitts_nevi": 32, "st_lucia": 32, "st_pierre_miquelon": 32, "st_vincent_grenadin": 32, "stadium": 32, "star2": 32, "star": [32, 38, 686, 994, 1077], "star_and_cresc": 32, "star_of_david": 32, "star_struck": 32, "station": 32, "statue_of_liberti": 32, "steam_locomot": 32, "stethoscop": 32, "stew": 32, "stop_button": 32, "stop_sign": 32, "stopwatch": 32, "straight_rul": 32, "strawberri": 32, "stuck_out_tongu": 32, "stuck_out_tongue_closed_ey": 32, "stuck_out_tongue_winking_ey": 32, "student": [32, 103, 108, 126, 144, 197, 290, 382, 383, 388, 389, 397, 1087, 1223], "student_dark_skin_ton": 32, "student_light_skin_ton": 32, "student_medium_dark_skin_ton": 32, "student_medium_light_skin_ton": 32, "student_medium_skin_ton": 32, "student_tone1": 32, "student_tone2": 32, "student_tone3": 32, "student_tone4": 32, "student_tone5": 32, "studio_microphon": 32, "stuffed_flatbread": 32, "stuffed_pita": 32, "sudan": 32, "sun_behind_large_cloud": 32, "sun_behind_rain_cloud": 32, "sun_behind_small_cloud": 32, "sun_with_fac": 32, "sunflow": 32, "sunni": [32, 111, 309, 312, 372, 590, 601, 607, 609, 642, 840, 1041, 1086], "sunris": 32, "sunrise_over_mountain": 32, "superhero": 32, "superhero_dark_skin_ton": 32, "superhero_light_skin_ton": 32, "superhero_medium_dark_skin_ton": 32, "superhero_medium_light_skin_ton": 32, "superhero_medium_skin_ton": 32, "superhero_tone1": 32, "superhero_tone2": 32, "superhero_tone3": 32, "superhero_tone4": 32, "superhero_tone5": 32, "supervillain": 32, "supervillain_dark_skin_ton": 32, "supervillain_light_skin_ton": 32, "supervillain_medium_dark_skin_ton": 32, "supervillain_medium_light_skin_ton": 32, "supervillain_medium_skin_ton": 32, "supervillain_tone1": 32, "supervillain_tone2": 32, "supervillain_tone3": 32, "supervillain_tone4": 32, "supervillain_tone5": 32, "surfer": 32, "surfer_tone1": 32, "surfer_tone2": 32, "surfer_tone3": 32, "surfer_tone4": 32, "surfer_tone5": 32, "surfing_man": 32, "surfing_woman": 32, "surinam": 32, "sushi": 32, "suspension_railwai": 32, "sv": [32, 568, 569], "swan": 32, "swaziland": 32, "sweat": 32, "sweat_drop": 32, "sweat_smil": 32, "sweden": 32, "sweet_potato": 32, "swimmer": 32, "swimmer_tone1": 32, "swimmer_tone2": 32, "swimmer_tone3": 32, "swimmer_tone4": 32, "swimmer_tone5": 32, "swimming_man": 32, "swimming_woman": 32, "switzerland": 32, "sx": 32, "symbol": [32, 33, 38, 126, 148, 201, 230, 251, 259, 265, 268, 275, 278, 296, 305, 306, 326, 327, 370, 371, 435, 450, 459, 466, 472, 476, 479, 483, 486, 487, 492, 496, 501, 502, 745, 783, 789, 837, 838, 839, 840, 843, 862, 865, 887, 917, 933, 948, 968, 970, 984, 993, 1094], "synagogu": 32, "syria": 32, "syring": 32, "sz": [32, 192, 195], "t_rex": 32, "ta": 32, "table_tenni": 32, "taco": 32, "tada": 32, "taiwan": 32, "tajikistan": 32, "takeout_box": 32, "tamal": 32, "tanabata_tre": 32, "tangerin": 32, "tanzania": 32, "tauru": 32, "taxi": 32, "tc": 32, "td": [32, 254], "tea": 32, "teacher": [32, 108, 195, 516, 537, 914, 915, 1075], "teacher_dark_skin_ton": 32, "teacher_light_skin_ton": 32, "teacher_medium_dark_skin_ton": 32, "teacher_medium_light_skin_ton": 32, "teacher_medium_skin_ton": 32, "teacher_tone1": 32, "teacher_tone2": 32, "teacher_tone3": 32, "teacher_tone4": 32, "teacher_tone5": 32, "teapot": 32, "technologist": 32, "technologist_dark_skin_ton": 32, "technologist_light_skin_ton": 32, "technologist_medium_dark_skin_ton": 32, "technologist_medium_light_skin_ton": 32, "technologist_medium_skin_ton": 32, "technologist_tone1": 32, "technologist_tone2": 32, "technologist_tone3": 32, "technologist_tone4": 32, "technologist_tone5": 32, "teddy_bear": 32, "telephon": 32, "telephone_receiv": 32, "telescop": 32, "ten": [32, 192, 213, 233, 272, 278, 364, 979], "tenni": 32, "tent": 32, "test_tub": 32, "tf": [32, 285, 913, 1084], "tg": 32, "th": [32, 226, 254, 428, 470, 599, 677, 1124, 1133], "thailand": 32, "thermomet": [32, 71, 84, 86, 87, 217, 226, 278, 298, 401, 403, 404, 406, 541, 548, 551, 553, 562, 563, 576, 590, 630, 631, 639, 642, 717, 720, 840, 994], "thermometer_fac": 32, "thinking_fac": 32, "third_plac": 32, "third_place_med": 32, "thong_sand": 32, "thought_balloon": 32, "thread": [32, 61, 63, 65, 85, 91, 93, 195, 207, 208, 217, 222, 226, 237, 259, 265, 266, 268, 275, 278, 293, 294, 295, 297, 306, 315, 317, 341, 354, 355, 373, 407, 410, 411, 412, 500, 549, 566, 580, 643, 785, 793, 802, 804, 811, 813, 816, 817, 839, 840, 869, 879, 885, 899, 907, 984, 1006, 1025, 1033, 1035, 1036, 1038, 1040, 1044, 1045, 1047, 1058, 1059, 1060, 1097, 1098, 1188, 1230, 1240, 1241, 1242, 1244, 1256, 1257, 1258], "three_button_mous": 32, "thumbdown": 32, "thumbdown_tone1": 32, "thumbdown_tone2": 32, "thumbdown_tone3": 32, "thumbdown_tone4": 32, "thumbdown_tone5": 32, "thumbsdown_tone1": 32, "thumbsdown_tone2": 32, "thumbsdown_tone3": 32, "thumbsdown_tone4": 32, "thumbsdown_tone5": 32, "thumbsup_tone1": 32, "thumbsup_tone2": 32, "thumbsup_tone3": 32, "thumbsup_tone4": 32, "thumbsup_tone5": 32, "thumbup": 32, "thumbup_tone1": 32, "thumbup_tone2": 32, "thumbup_tone3": 32, "thumbup_tone4": 32, "thumbup_tone5": 32, "thunder_cloud_and_rain": 32, "thunder_cloud_rain": 32, "ticket": 32, "tiger2": 32, "tiger": 32, "timer": [32, 61, 63, 65, 126, 138, 214, 315, 485, 818, 840, 864, 889, 896, 902, 905, 906, 908, 920, 921, 924, 984, 993, 1009, 1013, 1025, 1044, 1050, 1052, 1060, 1255, 1258], "timer_clock": 32, "timor_lest": 32, "tipping_hand_man": 32, "tipping_hand_woman": 32, "tired_fac": 32, "tj": 32, "tk": 32, "tl": [32, 195], "tm": 32, "tn": [32, 230], "togo": 32, "toilet": [32, 268, 620, 877, 1097], "tokelau": 32, "tokyo_tow": 32, "tomato": 32, "tone1": 32, "tone2": 32, "tone3": 32, "tone4": 32, "tone5": 32, "tonga": 32, "tongu": [32, 1241], "toolbox": [32, 211], "tooth": 32, "toothbrush": 32, "tophat": 32, "tornado": 32, "tr": [32, 254], "track_next": 32, "track_previ": 32, "trackbal": 32, "tractor": 32, "traffic_light": 32, "train2": 32, "tram": 32, "transgender_flag": 32, "transgender_symbol": 32, "triangular_flag_on_post": 32, "triangular_rul": 32, "trident": 32, "trinidad_tobago": 32, "tristan_da_cunha": 32, "triumph": 32, "trolleybu": 32, "trophi": 32, "tropical_drink": 32, "tropical_fish": 32, "truck": 32, "trumpet": 32, "tt": 32, "tulip": 32, "tumbler_glass": 32, "tunisia": 32, "turkei": 32, "turkmenistan": 32, "turks_caicos_island": 32, "turtl": 32, "tuvalu": 32, "tuxedo_tone1": 32, "tuxedo_tone2": 32, "tuxedo_tone3": 32, "tuxedo_tone4": 32, "tuxedo_tone5": 32, "tw": 32, "twisted_rightwards_arrow": 32, "two_heart": 32, "two_men_holding_hand": 32, "two_women_holding_hand": 32, "tz": 32, "u5272": 32, "u5408": 32, "u55b6": 32, "u6307": 32, "u6708": 32, "u6709": 32, "u6e80": 32, "u7121": 32, "u7533": 32, "u7981": 32, "u7a7a": 32, "ua": [32, 257, 266, 341], "ug": 32, "uganda": 32, "ukrain": 32, "umbrella2": 32, "umbrella": 32, "umbrella_on_ground": 32, "unamus": 32, "underag": 32, "unicorn": 32, "unicorn_fac": 32, "united_arab_emir": 32, "united_n": 32, "united_st": 32, "unlock": [32, 813, 815, 817, 879, 885, 1033, 1253], "upside_down": 32, "upside_down_fac": 32, "urn": 32, "uruguai": 32, "us_virgin_island": 32, "uz": 32, "uzbekistan": 32, "v_tone1": 32, "v_tone2": 32, "v_tone3": 32, "v_tone4": 32, "v_tone5": 32, "va": [32, 309, 312], "vampir": 32, "vampire_dark_skin_ton": 32, "vampire_light_skin_ton": 32, "vampire_medium_dark_skin_ton": 32, "vampire_medium_light_skin_ton": 32, "vampire_medium_skin_ton": 32, "vampire_tone1": 32, "vampire_tone2": 32, "vampire_tone3": 32, "vampire_tone4": 32, "vampire_tone5": 32, "vanuatu": 32, "vatican_c": 32, "vc": [32, 168, 196], "ve": [32, 190, 192, 930, 1222], "venezuela": 32, "vertical_traffic_light": 32, "vg": 32, "vh": 32, "vi": [32, 820], "vibration_mod": 32, "video_camera": 32, "video_gam": 32, "vietnam": 32, "violin": 32, "virgo": 32, "vn": 32, "volcano": 32, "volleybal": 32, "vu": 32, "vulcan": 32, "vulcan_salut": 32, "vulcan_tone1": 32, "vulcan_tone2": 32, "vulcan_tone3": 32, "vulcan_tone4": 32, "vulcan_tone5": 32, "waffl": 32, "wale": 32, "walk": [32, 189, 209, 222, 318, 319, 340, 367, 369, 371, 374, 404, 415, 743, 760, 932, 994, 1099], "walking_man": 32, "walking_tone1": 32, "walking_tone2": 32, "walking_tone3": 32, "walking_tone4": 32, "walking_tone5": 32, "walking_woman": 32, "wallis_futuna": 32, "waning_crescent_moon": 32, "waning_gibbous_moon": 32, "wastebasket": 32, "water_buffalo": 32, "water_polo": 32, "water_polo_tone1": 32, "water_polo_tone2": 32, "water_polo_tone3": 32, "water_polo_tone4": 32, "water_polo_tone5": 32, "watermelon": [32, 314], "wave": [32, 34, 38, 306, 323], "wave_tone1": 32, "wave_tone2": 32, "wave_tone3": 32, "wave_tone4": 32, "wave_tone5": 32, "waving_black_flag": 32, "waving_white_flag": 32, "wavy_dash": 32, "waxing_crescent_moon": 32, "waxing_gibbous_moon": 32, "wc": [32, 250, 251, 268, 288, 435, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 506, 745, 783, 837, 839, 840, 928, 931, 981, 995, 1172], "weari": 32, "wed": [32, 249], "weight_lift": 32, "weight_lifter_tone1": 32, "weight_lifter_tone2": 32, "weight_lifter_tone3": 32, "weight_lifter_tone4": 32, "weight_lifter_tone5": 32, "weight_lifting_man": 32, "weight_lifting_woman": 32, "western_sahara": 32, "wf": 32, "whale2": 32, "whale": 32, "wheel_of_dharma": 32, "wheelchair": 32, "whiski": 32, "white_check_mark": 32, "white_circl": 32, "white_flag": 32, "white_flow": 32, "white_frowning_fac": 32, "white_hair": 32, "white_heart": 32, "white_large_squar": 32, "white_medium_small_squar": 32, "white_medium_squar": 32, "white_small_squar": 32, "white_square_button": 32, "white_sun_behind_cloud": 32, "white_sun_behind_cloud_with_rain": 32, "white_sun_cloud": 32, "white_sun_rain_cloud": 32, "white_sun_small_cloud": 32, "white_sun_with_small_cloud": 32, "wilted_flow": 32, "wilted_ros": 32, "wind_blowing_fac": 32, "wind_chim": 32, "wind_fac": 32, "wine_glass": 32, "wolf": 32, "woman": 32, "woman_and_man_holding_hands_dark_skin_ton": 32, "woman_and_man_holding_hands_dark_skin_tone_light_skin_ton": 32, "woman_and_man_holding_hands_dark_skin_tone_medium_dark_skin_ton": 32, "woman_and_man_holding_hands_dark_skin_tone_medium_light_skin_ton": 32, "woman_and_man_holding_hands_dark_skin_tone_medium_skin_ton": 32, "woman_and_man_holding_hands_light_skin_ton": 32, "woman_and_man_holding_hands_light_skin_tone_dark_skin_ton": 32, "woman_and_man_holding_hands_light_skin_tone_medium_dark_skin_ton": 32, "woman_and_man_holding_hands_light_skin_tone_medium_light_skin_ton": 32, "woman_and_man_holding_hands_light_skin_tone_medium_skin_ton": 32, "woman_and_man_holding_hands_medium_dark_skin_ton": 32, "woman_and_man_holding_hands_medium_dark_skin_tone_dark_skin_ton": 32, "woman_and_man_holding_hands_medium_dark_skin_tone_light_skin_ton": 32, "woman_and_man_holding_hands_medium_dark_skin_tone_medium_light_skin_ton": 32, "woman_and_man_holding_hands_medium_dark_skin_tone_medium_skin_ton": 32, "woman_and_man_holding_hands_medium_light_skin_ton": 32, "woman_and_man_holding_hands_medium_light_skin_tone_dark_skin_ton": 32, "woman_and_man_holding_hands_medium_light_skin_tone_light_skin_ton": 32, "woman_and_man_holding_hands_medium_light_skin_tone_medium_dark_skin_ton": 32, "woman_and_man_holding_hands_medium_light_skin_tone_medium_skin_ton": 32, "woman_and_man_holding_hands_medium_skin_ton": 32, "woman_and_man_holding_hands_medium_skin_tone_dark_skin_ton": 32, "woman_and_man_holding_hands_medium_skin_tone_light_skin_ton": 32, "woman_and_man_holding_hands_medium_skin_tone_medium_dark_skin_ton": 32, "woman_and_man_holding_hands_medium_skin_tone_medium_light_skin_ton": 32, "woman_and_man_holding_hands_tone1": 32, "woman_and_man_holding_hands_tone1_tone2": 32, "woman_and_man_holding_hands_tone1_tone3": 32, "woman_and_man_holding_hands_tone1_tone4": 32, "woman_and_man_holding_hands_tone1_tone5": 32, "woman_and_man_holding_hands_tone2": 32, "woman_and_man_holding_hands_tone2_tone1": 32, "woman_and_man_holding_hands_tone2_tone3": 32, "woman_and_man_holding_hands_tone2_tone4": 32, "woman_and_man_holding_hands_tone2_tone5": 32, "woman_and_man_holding_hands_tone3": 32, "woman_and_man_holding_hands_tone3_tone1": 32, "woman_and_man_holding_hands_tone3_tone2": 32, "woman_and_man_holding_hands_tone3_tone4": 32, "woman_and_man_holding_hands_tone3_tone5": 32, "woman_and_man_holding_hands_tone4": 32, "woman_and_man_holding_hands_tone4_tone1": 32, "woman_and_man_holding_hands_tone4_tone2": 32, "woman_and_man_holding_hands_tone4_tone3": 32, "woman_and_man_holding_hands_tone4_tone5": 32, "woman_and_man_holding_hands_tone5": 32, "woman_and_man_holding_hands_tone5_tone1": 32, "woman_and_man_holding_hands_tone5_tone2": 32, "woman_and_man_holding_hands_tone5_tone3": 32, "woman_and_man_holding_hands_tone5_tone4": 32, "woman_artist": 32, "woman_artist_dark_skin_ton": 32, "woman_artist_light_skin_ton": 32, "woman_artist_medium_dark_skin_ton": 32, "woman_artist_medium_light_skin_ton": 32, "woman_artist_medium_skin_ton": 32, "woman_artist_tone1": 32, "woman_artist_tone2": 32, "woman_artist_tone3": 32, "woman_artist_tone4": 32, "woman_artist_tone5": 32, "woman_astronaut": 32, "woman_astronaut_dark_skin_ton": 32, "woman_astronaut_light_skin_ton": 32, "woman_astronaut_medium_dark_skin_ton": 32, "woman_astronaut_medium_light_skin_ton": 32, "woman_astronaut_medium_skin_ton": 32, "woman_astronaut_tone1": 32, "woman_astronaut_tone2": 32, "woman_astronaut_tone3": 32, "woman_astronaut_tone4": 32, "woman_astronaut_tone5": 32, "woman_bald": 32, "woman_bald_dark_skin_ton": 32, "woman_bald_light_skin_ton": 32, "woman_bald_medium_dark_skin_ton": 32, "woman_bald_medium_light_skin_ton": 32, "woman_bald_medium_skin_ton": 32, "woman_bald_tone1": 32, "woman_bald_tone2": 32, "woman_bald_tone3": 32, "woman_bald_tone4": 32, "woman_bald_tone5": 32, "woman_beard": 32, "woman_bik": 32, "woman_biking_dark_skin_ton": 32, "woman_biking_light_skin_ton": 32, "woman_biking_medium_dark_skin_ton": 32, "woman_biking_medium_light_skin_ton": 32, "woman_biking_medium_skin_ton": 32, "woman_biking_tone1": 32, "woman_biking_tone2": 32, "woman_biking_tone3": 32, "woman_biking_tone4": 32, "woman_biking_tone5": 32, "woman_bouncing_bal": 32, "woman_bouncing_ball_dark_skin_ton": 32, "woman_bouncing_ball_light_skin_ton": 32, "woman_bouncing_ball_medium_dark_skin_ton": 32, "woman_bouncing_ball_medium_light_skin_ton": 32, "woman_bouncing_ball_medium_skin_ton": 32, "woman_bouncing_ball_tone1": 32, "woman_bouncing_ball_tone2": 32, "woman_bouncing_ball_tone3": 32, "woman_bouncing_ball_tone4": 32, "woman_bouncing_ball_tone5": 32, "woman_bow": 32, "woman_bowing_dark_skin_ton": 32, "woman_bowing_light_skin_ton": 32, "woman_bowing_medium_dark_skin_ton": 32, "woman_bowing_medium_light_skin_ton": 32, "woman_bowing_medium_skin_ton": 32, "woman_bowing_tone1": 32, "woman_bowing_tone2": 32, "woman_bowing_tone3": 32, "woman_bowing_tone4": 32, "woman_bowing_tone5": 32, "woman_cartwheel": 32, "woman_cartwheeling_dark_skin_ton": 32, "woman_cartwheeling_light_skin_ton": 32, "woman_cartwheeling_medium_dark_skin_ton": 32, "woman_cartwheeling_medium_light_skin_ton": 32, "woman_cartwheeling_medium_skin_ton": 32, "woman_cartwheeling_tone1": 32, "woman_cartwheeling_tone2": 32, "woman_cartwheeling_tone3": 32, "woman_cartwheeling_tone4": 32, "woman_cartwheeling_tone5": 32, "woman_climb": 32, "woman_climbing_dark_skin_ton": 32, "woman_climbing_light_skin_ton": 32, "woman_climbing_medium_dark_skin_ton": 32, "woman_climbing_medium_light_skin_ton": 32, "woman_climbing_medium_skin_ton": 32, "woman_climbing_tone1": 32, "woman_climbing_tone2": 32, "woman_climbing_tone3": 32, "woman_climbing_tone4": 32, "woman_climbing_tone5": 32, "woman_construction_work": 32, "woman_construction_worker_dark_skin_ton": 32, "woman_construction_worker_light_skin_ton": 32, "woman_construction_worker_medium_dark_skin_ton": 32, "woman_construction_worker_medium_light_skin_ton": 32, "woman_construction_worker_medium_skin_ton": 32, "woman_construction_worker_tone1": 32, "woman_construction_worker_tone2": 32, "woman_construction_worker_tone3": 32, "woman_construction_worker_tone4": 32, "woman_construction_worker_tone5": 32, "woman_cook": 32, "woman_cook_dark_skin_ton": 32, "woman_cook_light_skin_ton": 32, "woman_cook_medium_dark_skin_ton": 32, "woman_cook_medium_light_skin_ton": 32, "woman_cook_medium_skin_ton": 32, "woman_cook_tone1": 32, "woman_cook_tone2": 32, "woman_cook_tone3": 32, "woman_cook_tone4": 32, "woman_cook_tone5": 32, "woman_curly_hair": 32, "woman_curly_haired_dark_skin_ton": 32, "woman_curly_haired_light_skin_ton": 32, "woman_curly_haired_medium_dark_skin_ton": 32, "woman_curly_haired_medium_light_skin_ton": 32, "woman_curly_haired_medium_skin_ton": 32, "woman_curly_haired_tone1": 32, "woman_curly_haired_tone2": 32, "woman_curly_haired_tone3": 32, "woman_curly_haired_tone4": 32, "woman_curly_haired_tone5": 32, "woman_dark_skin_tone_beard": 32, "woman_detect": 32, "woman_detective_dark_skin_ton": 32, "woman_detective_light_skin_ton": 32, "woman_detective_medium_dark_skin_ton": 32, "woman_detective_medium_light_skin_ton": 32, "woman_detective_medium_skin_ton": 32, "woman_detective_tone1": 32, "woman_detective_tone2": 32, "woman_detective_tone3": 32, "woman_detective_tone4": 32, "woman_detective_tone5": 32, "woman_elf": 32, "woman_elf_dark_skin_ton": 32, "woman_elf_light_skin_ton": 32, "woman_elf_medium_dark_skin_ton": 32, "woman_elf_medium_light_skin_ton": 32, "woman_elf_medium_skin_ton": 32, "woman_elf_tone1": 32, "woman_elf_tone2": 32, "woman_elf_tone3": 32, "woman_elf_tone4": 32, "woman_elf_tone5": 32, "woman_facepalm": 32, "woman_facepalming_dark_skin_ton": 32, "woman_facepalming_light_skin_ton": 32, "woman_facepalming_medium_dark_skin_ton": 32, "woman_facepalming_medium_light_skin_ton": 32, "woman_facepalming_medium_skin_ton": 32, "woman_facepalming_tone1": 32, "woman_facepalming_tone2": 32, "woman_facepalming_tone3": 32, "woman_facepalming_tone4": 32, "woman_facepalming_tone5": 32, "woman_factory_work": 32, "woman_factory_worker_dark_skin_ton": 32, "woman_factory_worker_light_skin_ton": 32, "woman_factory_worker_medium_dark_skin_ton": 32, "woman_factory_worker_medium_light_skin_ton": 32, "woman_factory_worker_medium_skin_ton": 32, "woman_factory_worker_tone1": 32, "woman_factory_worker_tone2": 32, "woman_factory_worker_tone3": 32, "woman_factory_worker_tone4": 32, "woman_factory_worker_tone5": 32, "woman_fairi": 32, "woman_fairy_dark_skin_ton": 32, "woman_fairy_light_skin_ton": 32, "woman_fairy_medium_dark_skin_ton": 32, "woman_fairy_medium_light_skin_ton": 32, "woman_fairy_medium_skin_ton": 32, "woman_fairy_tone1": 32, "woman_fairy_tone2": 32, "woman_fairy_tone3": 32, "woman_fairy_tone4": 32, "woman_fairy_tone5": 32, "woman_farm": 32, "woman_farmer_dark_skin_ton": 32, "woman_farmer_light_skin_ton": 32, "woman_farmer_medium_dark_skin_ton": 32, "woman_farmer_medium_light_skin_ton": 32, "woman_farmer_medium_skin_ton": 32, "woman_farmer_tone1": 32, "woman_farmer_tone2": 32, "woman_farmer_tone3": 32, "woman_farmer_tone4": 32, "woman_farmer_tone5": 32, "woman_feeding_babi": 32, "woman_feeding_baby_dark_skin_ton": 32, "woman_feeding_baby_light_skin_ton": 32, "woman_feeding_baby_medium_dark_skin_ton": 32, "woman_feeding_baby_medium_light_skin_ton": 32, "woman_feeding_baby_medium_skin_ton": 32, "woman_feeding_baby_tone1": 32, "woman_feeding_baby_tone2": 32, "woman_feeding_baby_tone3": 32, "woman_feeding_baby_tone4": 32, "woman_feeding_baby_tone5": 32, "woman_firefight": 32, "woman_firefighter_dark_skin_ton": 32, "woman_firefighter_light_skin_ton": 32, "woman_firefighter_medium_dark_skin_ton": 32, "woman_firefighter_medium_light_skin_ton": 32, "woman_firefighter_medium_skin_ton": 32, "woman_firefighter_tone1": 32, "woman_firefighter_tone2": 32, "woman_firefighter_tone3": 32, "woman_firefighter_tone4": 32, "woman_firefighter_tone5": 32, "woman_frown": 32, "woman_frowning_dark_skin_ton": 32, "woman_frowning_light_skin_ton": 32, "woman_frowning_medium_dark_skin_ton": 32, "woman_frowning_medium_light_skin_ton": 32, "woman_frowning_medium_skin_ton": 32, "woman_frowning_tone1": 32, "woman_frowning_tone2": 32, "woman_frowning_tone3": 32, "woman_frowning_tone4": 32, "woman_frowning_tone5": 32, "woman_geni": 32, "woman_gesturing_no": 32, "woman_gesturing_no_dark_skin_ton": 32, "woman_gesturing_no_light_skin_ton": 32, "woman_gesturing_no_medium_dark_skin_ton": 32, "woman_gesturing_no_medium_light_skin_ton": 32, "woman_gesturing_no_medium_skin_ton": 32, "woman_gesturing_no_tone1": 32, "woman_gesturing_no_tone2": 32, "woman_gesturing_no_tone3": 32, "woman_gesturing_no_tone4": 32, "woman_gesturing_no_tone5": 32, "woman_gesturing_ok": 32, "woman_gesturing_ok_dark_skin_ton": 32, "woman_gesturing_ok_light_skin_ton": 32, "woman_gesturing_ok_medium_dark_skin_ton": 32, "woman_gesturing_ok_medium_light_skin_ton": 32, "woman_gesturing_ok_medium_skin_ton": 32, "woman_gesturing_ok_tone1": 32, "woman_gesturing_ok_tone2": 32, "woman_gesturing_ok_tone3": 32, "woman_gesturing_ok_tone4": 32, "woman_gesturing_ok_tone5": 32, "woman_getting_face_massag": 32, "woman_getting_face_massage_dark_skin_ton": 32, "woman_getting_face_massage_light_skin_ton": 32, "woman_getting_face_massage_medium_dark_skin_ton": 32, "woman_getting_face_massage_medium_light_skin_ton": 32, "woman_getting_face_massage_medium_skin_ton": 32, "woman_getting_face_massage_tone1": 32, "woman_getting_face_massage_tone2": 32, "woman_getting_face_massage_tone3": 32, "woman_getting_face_massage_tone4": 32, "woman_getting_face_massage_tone5": 32, "woman_getting_haircut": 32, "woman_getting_haircut_dark_skin_ton": 32, "woman_getting_haircut_light_skin_ton": 32, "woman_getting_haircut_medium_dark_skin_ton": 32, "woman_getting_haircut_medium_light_skin_ton": 32, "woman_getting_haircut_medium_skin_ton": 32, "woman_getting_haircut_tone1": 32, "woman_getting_haircut_tone2": 32, "woman_getting_haircut_tone3": 32, "woman_getting_haircut_tone4": 32, "woman_getting_haircut_tone5": 32, "woman_golf": 32, "woman_golfing_dark_skin_ton": 32, "woman_golfing_light_skin_ton": 32, "woman_golfing_medium_dark_skin_ton": 32, "woman_golfing_medium_light_skin_ton": 32, "woman_golfing_medium_skin_ton": 32, "woman_golfing_tone1": 32, "woman_golfing_tone2": 32, "woman_golfing_tone3": 32, "woman_golfing_tone4": 32, "woman_golfing_tone5": 32, "woman_guard": 32, "woman_guard_dark_skin_ton": 32, "woman_guard_light_skin_ton": 32, "woman_guard_medium_dark_skin_ton": 32, "woman_guard_medium_light_skin_ton": 32, "woman_guard_medium_skin_ton": 32, "woman_guard_tone1": 32, "woman_guard_tone2": 32, "woman_guard_tone3": 32, "woman_guard_tone4": 32, "woman_guard_tone5": 32, "woman_health_work": 32, "woman_health_worker_dark_skin_ton": 32, "woman_health_worker_light_skin_ton": 32, "woman_health_worker_medium_dark_skin_ton": 32, "woman_health_worker_medium_light_skin_ton": 32, "woman_health_worker_medium_skin_ton": 32, "woman_health_worker_tone1": 32, "woman_health_worker_tone2": 32, "woman_health_worker_tone3": 32, "woman_health_worker_tone4": 32, "woman_health_worker_tone5": 32, "woman_in_lotus_posit": 32, "woman_in_lotus_position_dark_skin_ton": 32, "woman_in_lotus_position_light_skin_ton": 32, "woman_in_lotus_position_medium_dark_skin_ton": 32, "woman_in_lotus_position_medium_light_skin_ton": 32, "woman_in_lotus_position_medium_skin_ton": 32, "woman_in_lotus_position_tone1": 32, "woman_in_lotus_position_tone2": 32, "woman_in_lotus_position_tone3": 32, "woman_in_lotus_position_tone4": 32, "woman_in_lotus_position_tone5": 32, "woman_in_manual_wheelchair": 32, "woman_in_manual_wheelchair_dark_skin_ton": 32, "woman_in_manual_wheelchair_light_skin_ton": 32, "woman_in_manual_wheelchair_medium_dark_skin_ton": 32, "woman_in_manual_wheelchair_medium_light_skin_ton": 32, "woman_in_manual_wheelchair_medium_skin_ton": 32, "woman_in_manual_wheelchair_tone1": 32, "woman_in_manual_wheelchair_tone2": 32, "woman_in_manual_wheelchair_tone3": 32, "woman_in_manual_wheelchair_tone4": 32, "woman_in_manual_wheelchair_tone5": 32, "woman_in_motorized_wheelchair": 32, "woman_in_motorized_wheelchair_dark_skin_ton": 32, "woman_in_motorized_wheelchair_light_skin_ton": 32, "woman_in_motorized_wheelchair_medium_dark_skin_ton": 32, "woman_in_motorized_wheelchair_medium_light_skin_ton": 32, "woman_in_motorized_wheelchair_medium_skin_ton": 32, "woman_in_motorized_wheelchair_tone1": 32, "woman_in_motorized_wheelchair_tone2": 32, "woman_in_motorized_wheelchair_tone3": 32, "woman_in_motorized_wheelchair_tone4": 32, "woman_in_motorized_wheelchair_tone5": 32, "woman_in_steamy_room": 32, "woman_in_steamy_room_dark_skin_ton": 32, "woman_in_steamy_room_light_skin_ton": 32, "woman_in_steamy_room_medium_dark_skin_ton": 32, "woman_in_steamy_room_medium_light_skin_ton": 32, "woman_in_steamy_room_medium_skin_ton": 32, "woman_in_steamy_room_tone1": 32, "woman_in_steamy_room_tone2": 32, "woman_in_steamy_room_tone3": 32, "woman_in_steamy_room_tone4": 32, "woman_in_steamy_room_tone5": 32, "woman_in_tuxedo": 32, "woman_in_tuxedo_dark_skin_ton": 32, "woman_in_tuxedo_light_skin_ton": 32, "woman_in_tuxedo_medium_dark_skin_ton": 32, "woman_in_tuxedo_medium_light_skin_ton": 32, "woman_in_tuxedo_medium_skin_ton": 32, "woman_in_tuxedo_tone1": 32, "woman_in_tuxedo_tone2": 32, "woman_in_tuxedo_tone3": 32, "woman_in_tuxedo_tone4": 32, "woman_in_tuxedo_tone5": 32, "woman_judg": 32, "woman_judge_dark_skin_ton": 32, "woman_judge_light_skin_ton": 32, "woman_judge_medium_dark_skin_ton": 32, "woman_judge_medium_light_skin_ton": 32, "woman_judge_medium_skin_ton": 32, "woman_judge_tone1": 32, "woman_judge_tone2": 32, "woman_judge_tone3": 32, "woman_judge_tone4": 32, "woman_judge_tone5": 32, "woman_juggl": 32, "woman_juggling_dark_skin_ton": 32, "woman_juggling_light_skin_ton": 32, "woman_juggling_medium_dark_skin_ton": 32, "woman_juggling_medium_light_skin_ton": 32, "woman_juggling_medium_skin_ton": 32, "woman_juggling_tone1": 32, "woman_juggling_tone2": 32, "woman_juggling_tone3": 32, "woman_juggling_tone4": 32, "woman_juggling_tone5": 32, "woman_kneel": 32, "woman_kneeling_dark_skin_ton": 32, "woman_kneeling_light_skin_ton": 32, "woman_kneeling_medium_dark_skin_ton": 32, "woman_kneeling_medium_light_skin_ton": 32, "woman_kneeling_medium_skin_ton": 32, "woman_kneeling_tone1": 32, "woman_kneeling_tone2": 32, "woman_kneeling_tone3": 32, "woman_kneeling_tone4": 32, "woman_kneeling_tone5": 32, "woman_lifting_weight": 32, "woman_lifting_weights_dark_skin_ton": 32, "woman_lifting_weights_light_skin_ton": 32, "woman_lifting_weights_medium_dark_skin_ton": 32, "woman_lifting_weights_medium_light_skin_ton": 32, "woman_lifting_weights_medium_skin_ton": 32, "woman_lifting_weights_tone1": 32, "woman_lifting_weights_tone2": 32, "woman_lifting_weights_tone3": 32, "woman_lifting_weights_tone4": 32, "woman_lifting_weights_tone5": 32, "woman_light_skin_tone_beard": 32, "woman_mag": 32, "woman_mage_dark_skin_ton": 32, "woman_mage_light_skin_ton": 32, "woman_mage_medium_dark_skin_ton": 32, "woman_mage_medium_light_skin_ton": 32, "woman_mage_medium_skin_ton": 32, "woman_mage_tone1": 32, "woman_mage_tone2": 32, "woman_mage_tone3": 32, "woman_mage_tone4": 32, "woman_mage_tone5": 32, "woman_mechan": 32, "woman_mechanic_dark_skin_ton": 32, "woman_mechanic_light_skin_ton": 32, "woman_mechanic_medium_dark_skin_ton": 32, "woman_mechanic_medium_light_skin_ton": 32, "woman_mechanic_medium_skin_ton": 32, "woman_mechanic_tone1": 32, "woman_mechanic_tone2": 32, "woman_mechanic_tone3": 32, "woman_mechanic_tone4": 32, "woman_mechanic_tone5": 32, "woman_medium_dark_skin_tone_beard": 32, "woman_medium_light_skin_tone_beard": 32, "woman_medium_skin_tone_beard": 32, "woman_mountain_bik": 32, "woman_mountain_biking_dark_skin_ton": 32, "woman_mountain_biking_light_skin_ton": 32, "woman_mountain_biking_medium_dark_skin_ton": 32, "woman_mountain_biking_medium_light_skin_ton": 32, "woman_mountain_biking_medium_skin_ton": 32, "woman_mountain_biking_tone1": 32, "woman_mountain_biking_tone2": 32, "woman_mountain_biking_tone3": 32, "woman_mountain_biking_tone4": 32, "woman_mountain_biking_tone5": 32, "woman_office_work": 32, "woman_office_worker_dark_skin_ton": 32, "woman_office_worker_light_skin_ton": 32, "woman_office_worker_medium_dark_skin_ton": 32, "woman_office_worker_medium_light_skin_ton": 32, "woman_office_worker_medium_skin_ton": 32, "woman_office_worker_tone1": 32, "woman_office_worker_tone2": 32, "woman_office_worker_tone3": 32, "woman_office_worker_tone4": 32, "woman_office_worker_tone5": 32, "woman_pilot": 32, "woman_pilot_dark_skin_ton": 32, "woman_pilot_light_skin_ton": 32, "woman_pilot_medium_dark_skin_ton": 32, "woman_pilot_medium_light_skin_ton": 32, "woman_pilot_medium_skin_ton": 32, "woman_pilot_tone1": 32, "woman_pilot_tone2": 32, "woman_pilot_tone3": 32, "woman_pilot_tone4": 32, "woman_pilot_tone5": 32, "woman_playing_handbal": 32, "woman_playing_handball_dark_skin_ton": 32, "woman_playing_handball_light_skin_ton": 32, "woman_playing_handball_medium_dark_skin_ton": 32, "woman_playing_handball_medium_light_skin_ton": 32, "woman_playing_handball_medium_skin_ton": 32, "woman_playing_handball_tone1": 32, "woman_playing_handball_tone2": 32, "woman_playing_handball_tone3": 32, "woman_playing_handball_tone4": 32, "woman_playing_handball_tone5": 32, "woman_playing_water_polo": 32, "woman_playing_water_polo_dark_skin_ton": 32, "woman_playing_water_polo_light_skin_ton": 32, "woman_playing_water_polo_medium_dark_skin_ton": 32, "woman_playing_water_polo_medium_light_skin_ton": 32, "woman_playing_water_polo_medium_skin_ton": 32, "woman_playing_water_polo_tone1": 32, "woman_playing_water_polo_tone2": 32, "woman_playing_water_polo_tone3": 32, "woman_playing_water_polo_tone4": 32, "woman_playing_water_polo_tone5": 32, "woman_police_offic": 32, "woman_police_officer_dark_skin_ton": 32, "woman_police_officer_light_skin_ton": 32, "woman_police_officer_medium_dark_skin_ton": 32, "woman_police_officer_medium_light_skin_ton": 32, "woman_police_officer_medium_skin_ton": 32, "woman_police_officer_tone1": 32, "woman_police_officer_tone2": 32, "woman_police_officer_tone3": 32, "woman_police_officer_tone4": 32, "woman_police_officer_tone5": 32, "woman_pout": 32, "woman_pouting_dark_skin_ton": 32, "woman_pouting_light_skin_ton": 32, "woman_pouting_medium_dark_skin_ton": 32, "woman_pouting_medium_light_skin_ton": 32, "woman_pouting_medium_skin_ton": 32, "woman_pouting_tone1": 32, "woman_pouting_tone2": 32, "woman_pouting_tone3": 32, "woman_pouting_tone4": 32, "woman_pouting_tone5": 32, "woman_raising_hand": 32, "woman_raising_hand_dark_skin_ton": 32, "woman_raising_hand_light_skin_ton": 32, "woman_raising_hand_medium_dark_skin_ton": 32, "woman_raising_hand_medium_light_skin_ton": 32, "woman_raising_hand_medium_skin_ton": 32, "woman_raising_hand_tone1": 32, "woman_raising_hand_tone2": 32, "woman_raising_hand_tone3": 32, "woman_raising_hand_tone4": 32, "woman_raising_hand_tone5": 32, "woman_red_hair": 32, "woman_red_haired_dark_skin_ton": 32, "woman_red_haired_light_skin_ton": 32, "woman_red_haired_medium_dark_skin_ton": 32, "woman_red_haired_medium_light_skin_ton": 32, "woman_red_haired_medium_skin_ton": 32, "woman_red_haired_tone1": 32, "woman_red_haired_tone2": 32, "woman_red_haired_tone3": 32, "woman_red_haired_tone4": 32, "woman_red_haired_tone5": 32, "woman_rowing_boat": 32, "woman_rowing_boat_dark_skin_ton": 32, "woman_rowing_boat_light_skin_ton": 32, "woman_rowing_boat_medium_dark_skin_ton": 32, "woman_rowing_boat_medium_light_skin_ton": 32, "woman_rowing_boat_medium_skin_ton": 32, "woman_rowing_boat_tone1": 32, "woman_rowing_boat_tone2": 32, "woman_rowing_boat_tone3": 32, "woman_rowing_boat_tone4": 32, "woman_rowing_boat_tone5": 32, "woman_run": 32, "woman_running_dark_skin_ton": 32, "woman_running_light_skin_ton": 32, "woman_running_medium_dark_skin_ton": 32, "woman_running_medium_light_skin_ton": 32, "woman_running_medium_skin_ton": 32, "woman_running_tone1": 32, "woman_running_tone2": 32, "woman_running_tone3": 32, "woman_running_tone4": 32, "woman_running_tone5": 32, "woman_scientist": 32, "woman_scientist_dark_skin_ton": 32, "woman_scientist_light_skin_ton": 32, "woman_scientist_medium_dark_skin_ton": 32, "woman_scientist_medium_light_skin_ton": 32, "woman_scientist_medium_skin_ton": 32, "woman_scientist_tone1": 32, "woman_scientist_tone2": 32, "woman_scientist_tone3": 32, "woman_scientist_tone4": 32, "woman_scientist_tone5": 32, "woman_shrug": 32, "woman_shrugging_dark_skin_ton": 32, "woman_shrugging_light_skin_ton": 32, "woman_shrugging_medium_dark_skin_ton": 32, "woman_shrugging_medium_light_skin_ton": 32, "woman_shrugging_medium_skin_ton": 32, "woman_shrugging_tone1": 32, "woman_shrugging_tone2": 32, "woman_shrugging_tone3": 32, "woman_shrugging_tone4": 32, "woman_shrugging_tone5": 32, "woman_sing": 32, "woman_singer_dark_skin_ton": 32, "woman_singer_light_skin_ton": 32, "woman_singer_medium_dark_skin_ton": 32, "woman_singer_medium_light_skin_ton": 32, "woman_singer_medium_skin_ton": 32, "woman_singer_tone1": 32, "woman_singer_tone2": 32, "woman_singer_tone3": 32, "woman_singer_tone4": 32, "woman_singer_tone5": 32, "woman_stand": 32, "woman_standing_dark_skin_ton": 32, "woman_standing_light_skin_ton": 32, "woman_standing_medium_dark_skin_ton": 32, "woman_standing_medium_light_skin_ton": 32, "woman_standing_medium_skin_ton": 32, "woman_standing_tone1": 32, "woman_standing_tone2": 32, "woman_standing_tone3": 32, "woman_standing_tone4": 32, "woman_standing_tone5": 32, "woman_stud": 32, "woman_student_dark_skin_ton": 32, "woman_student_light_skin_ton": 32, "woman_student_medium_dark_skin_ton": 32, "woman_student_medium_light_skin_ton": 32, "woman_student_medium_skin_ton": 32, "woman_student_tone1": 32, "woman_student_tone2": 32, "woman_student_tone3": 32, "woman_student_tone4": 32, "woman_student_tone5": 32, "woman_superhero": 32, "woman_superhero_dark_skin_ton": 32, "woman_superhero_light_skin_ton": 32, "woman_superhero_medium_dark_skin_ton": 32, "woman_superhero_medium_light_skin_ton": 32, "woman_superhero_medium_skin_ton": 32, "woman_superhero_tone1": 32, "woman_superhero_tone2": 32, "woman_superhero_tone3": 32, "woman_superhero_tone4": 32, "woman_superhero_tone5": 32, "woman_supervillain": 32, "woman_supervillain_dark_skin_ton": 32, "woman_supervillain_light_skin_ton": 32, "woman_supervillain_medium_dark_skin_ton": 32, "woman_supervillain_medium_light_skin_ton": 32, "woman_supervillain_medium_skin_ton": 32, "woman_supervillain_tone1": 32, "woman_supervillain_tone2": 32, "woman_supervillain_tone3": 32, "woman_supervillain_tone4": 32, "woman_supervillain_tone5": 32, "woman_surf": 32, "woman_surfing_dark_skin_ton": 32, "woman_surfing_light_skin_ton": 32, "woman_surfing_medium_dark_skin_ton": 32, "woman_surfing_medium_light_skin_ton": 32, "woman_surfing_medium_skin_ton": 32, "woman_surfing_tone1": 32, "woman_surfing_tone2": 32, "woman_surfing_tone3": 32, "woman_surfing_tone4": 32, "woman_surfing_tone5": 32, "woman_swim": 32, "woman_swimming_dark_skin_ton": 32, "woman_swimming_light_skin_ton": 32, "woman_swimming_medium_dark_skin_ton": 32, "woman_swimming_medium_light_skin_ton": 32, "woman_swimming_medium_skin_ton": 32, "woman_swimming_tone1": 32, "woman_swimming_tone2": 32, "woman_swimming_tone3": 32, "woman_swimming_tone4": 32, "woman_swimming_tone5": 32, "woman_teach": 32, "woman_teacher_dark_skin_ton": 32, "woman_teacher_light_skin_ton": 32, "woman_teacher_medium_dark_skin_ton": 32, "woman_teacher_medium_light_skin_ton": 32, "woman_teacher_medium_skin_ton": 32, "woman_teacher_tone1": 32, "woman_teacher_tone2": 32, "woman_teacher_tone3": 32, "woman_teacher_tone4": 32, "woman_teacher_tone5": 32, "woman_technologist": 32, "woman_technologist_dark_skin_ton": 32, "woman_technologist_light_skin_ton": 32, "woman_technologist_medium_dark_skin_ton": 32, "woman_technologist_medium_light_skin_ton": 32, "woman_technologist_medium_skin_ton": 32, "woman_technologist_tone1": 32, "woman_technologist_tone2": 32, "woman_technologist_tone3": 32, "woman_technologist_tone4": 32, "woman_technologist_tone5": 32, "woman_tipping_hand": 32, "woman_tipping_hand_dark_skin_ton": 32, "woman_tipping_hand_light_skin_ton": 32, "woman_tipping_hand_medium_dark_skin_ton": 32, "woman_tipping_hand_medium_light_skin_ton": 32, "woman_tipping_hand_medium_skin_ton": 32, "woman_tipping_hand_tone1": 32, "woman_tipping_hand_tone2": 32, "woman_tipping_hand_tone3": 32, "woman_tipping_hand_tone4": 32, "woman_tipping_hand_tone5": 32, "woman_tone1": 32, "woman_tone1_beard": 32, "woman_tone2": 32, "woman_tone2_beard": 32, "woman_tone3": 32, "woman_tone3_beard": 32, "woman_tone4": 32, "woman_tone4_beard": 32, "woman_tone5": 32, "woman_tone5_beard": 32, "woman_vampir": 32, "woman_vampire_dark_skin_ton": 32, "woman_vampire_light_skin_ton": 32, "woman_vampire_medium_dark_skin_ton": 32, "woman_vampire_medium_light_skin_ton": 32, "woman_vampire_medium_skin_ton": 32, "woman_vampire_tone1": 32, "woman_vampire_tone2": 32, "woman_vampire_tone3": 32, "woman_vampire_tone4": 32, "woman_vampire_tone5": 32, "woman_walk": 32, "woman_walking_dark_skin_ton": 32, "woman_walking_light_skin_ton": 32, "woman_walking_medium_dark_skin_ton": 32, "woman_walking_medium_light_skin_ton": 32, "woman_walking_medium_skin_ton": 32, "woman_walking_tone1": 32, "woman_walking_tone2": 32, "woman_walking_tone3": 32, "woman_walking_tone4": 32, "woman_walking_tone5": 32, "woman_wearing_turban": 32, "woman_wearing_turban_dark_skin_ton": 32, "woman_wearing_turban_light_skin_ton": 32, "woman_wearing_turban_medium_dark_skin_ton": 32, "woman_wearing_turban_medium_light_skin_ton": 32, "woman_wearing_turban_medium_skin_ton": 32, "woman_wearing_turban_tone1": 32, "woman_wearing_turban_tone2": 32, "woman_wearing_turban_tone3": 32, "woman_wearing_turban_tone4": 32, "woman_wearing_turban_tone5": 32, "woman_white_hair": 32, "woman_white_haired_dark_skin_ton": 32, "woman_white_haired_light_skin_ton": 32, "woman_white_haired_medium_dark_skin_ton": 32, "woman_white_haired_medium_light_skin_ton": 32, "woman_white_haired_medium_skin_ton": 32, "woman_white_haired_tone1": 32, "woman_white_haired_tone2": 32, "woman_white_haired_tone3": 32, "woman_white_haired_tone4": 32, "woman_white_haired_tone5": 32, "woman_with_headscarf": 32, "woman_with_headscarf_dark_skin_ton": 32, "woman_with_headscarf_light_skin_ton": 32, "woman_with_headscarf_medium_dark_skin_ton": 32, "woman_with_headscarf_medium_light_skin_ton": 32, "woman_with_headscarf_medium_skin_ton": 32, "woman_with_headscarf_tone1": 32, "woman_with_headscarf_tone2": 32, "woman_with_headscarf_tone3": 32, "woman_with_headscarf_tone4": 32, "woman_with_headscarf_tone5": 32, "woman_with_probing_can": 32, "woman_with_probing_cane_dark_skin_ton": 32, "woman_with_probing_cane_light_skin_ton": 32, "woman_with_probing_cane_medium_dark_skin_ton": 32, "woman_with_probing_cane_medium_light_skin_ton": 32, "woman_with_probing_cane_medium_skin_ton": 32, "woman_with_probing_cane_tone1": 32, "woman_with_probing_cane_tone2": 32, "woman_with_probing_cane_tone3": 32, "woman_with_probing_cane_tone4": 32, "woman_with_probing_cane_tone5": 32, "woman_with_turban": 32, "woman_with_veil": 32, "woman_with_veil_dark_skin_ton": 32, "woman_with_veil_light_skin_ton": 32, "woman_with_veil_medium_dark_skin_ton": 32, "woman_with_veil_medium_light_skin_ton": 32, "woman_with_veil_medium_skin_ton": 32, "woman_with_veil_tone1": 32, "woman_with_veil_tone2": 32, "woman_with_veil_tone3": 32, "woman_with_veil_tone4": 32, "woman_with_veil_tone5": 32, "woman_zombi": 32, "womans_cloth": 32, "womans_flat_sho": 32, "womans_hat": 32, "women_holding_hands_dark_skin_ton": 32, "women_holding_hands_dark_skin_tone_light_skin_ton": 32, "women_holding_hands_dark_skin_tone_medium_dark_skin_ton": 32, "women_holding_hands_dark_skin_tone_medium_light_skin_ton": 32, "women_holding_hands_dark_skin_tone_medium_skin_ton": 32, "women_holding_hands_light_skin_ton": 32, "women_holding_hands_light_skin_tone_dark_skin_ton": 32, "women_holding_hands_light_skin_tone_medium_dark_skin_ton": 32, "women_holding_hands_light_skin_tone_medium_light_skin_ton": 32, "women_holding_hands_light_skin_tone_medium_skin_ton": 32, "women_holding_hands_medium_dark_skin_ton": 32, "women_holding_hands_medium_dark_skin_tone_dark_skin_ton": 32, "women_holding_hands_medium_dark_skin_tone_light_skin_ton": 32, "women_holding_hands_medium_dark_skin_tone_medium_light_skin_ton": 32, "women_holding_hands_medium_dark_skin_tone_medium_skin_ton": 32, "women_holding_hands_medium_light_skin_ton": 32, "women_holding_hands_medium_light_skin_tone_dark_skin_ton": 32, "women_holding_hands_medium_light_skin_tone_light_skin_ton": 32, "women_holding_hands_medium_light_skin_tone_medium_dark_skin_ton": 32, "women_holding_hands_medium_light_skin_tone_medium_skin_ton": 32, "women_holding_hands_medium_skin_ton": 32, "women_holding_hands_medium_skin_tone_dark_skin_ton": 32, "women_holding_hands_medium_skin_tone_light_skin_ton": 32, "women_holding_hands_medium_skin_tone_medium_dark_skin_ton": 32, "women_holding_hands_medium_skin_tone_medium_light_skin_ton": 32, "women_holding_hands_tone1": 32, "women_holding_hands_tone1_tone2": 32, "women_holding_hands_tone1_tone3": 32, "women_holding_hands_tone1_tone4": 32, "women_holding_hands_tone1_tone5": 32, "women_holding_hands_tone2": 32, "women_holding_hands_tone2_tone1": 32, "women_holding_hands_tone2_tone3": 32, "women_holding_hands_tone2_tone4": 32, "women_holding_hands_tone2_tone5": 32, "women_holding_hands_tone3": 32, "women_holding_hands_tone3_tone1": 32, "women_holding_hands_tone3_tone2": 32, "women_holding_hands_tone3_tone4": 32, "women_holding_hands_tone3_tone5": 32, "women_holding_hands_tone4": 32, "women_holding_hands_tone4_tone1": 32, "women_holding_hands_tone4_tone2": 32, "women_holding_hands_tone4_tone3": 32, "women_holding_hands_tone4_tone5": 32, "women_holding_hands_tone5": 32, "women_holding_hands_tone5_tone1": 32, "women_holding_hands_tone5_tone2": 32, "women_holding_hands_tone5_tone3": 32, "women_holding_hands_tone5_tone4": 32, "women_with_bunny_ears_parti": 32, "women_wrestl": 32, "women": 32, "wood": 32, "woozy_fac": 32, "world_map": 32, "worm": [32, 539], "worri": [32, 485], "worship_symbol": 32, "wrench": 32, "wrestler": 32, "wrestlers_tone1": 32, "wrestlers_tone2": 32, "wrestlers_tone3": 32, "wrestlers_tone4": 32, "wrestlers_tone5": 32, "wrestl": 32, "wrestling_tone1": 32, "wrestling_tone2": 32, "wrestling_tone3": 32, "wrestling_tone4": 32, "wrestling_tone5": 32, "writing_hand": 32, "writing_hand_tone1": 32, "writing_hand_tone2": 32, "writing_hand_tone3": 32, "writing_hand_tone4": 32, "writing_hand_tone5": 32, "w": [32, 40, 226, 230, 233, 255, 259, 265, 275, 278, 285, 306, 320, 398, 399, 418, 506, 661, 722, 933, 947, 993, 994, 1028, 1084, 1124, 1137, 1183, 1185, 1213, 1216, 1221], "xk": 32, "yarn": 32, "yawning_fac": 32, "yellow_circl": 32, "yellow_heart": 32, "yellow_squar": 32, "yemen": 32, "yen": [32, 36], "yin_yang": 32, "yo_yo": 32, "yt": 32, "yum": [32, 358], "za": [32, 330, 358, 437], "zambia": 32, "zany_fac": 32, "zap": 32, "zebra": 32, "zimbabw": 32, "zipper_mouth": 32, "zipper_mouth_fac": 32, "zm": 32, "zombi": 32, "zw": 32, "zzz": [32, 364], "sheet": [33, 165, 191, 230, 242, 371, 401, 403, 404, 771, 948, 992, 993], "layout": [33, 186, 207, 280, 372, 482, 495, 1221], "emoji": 33, "sphinxemoji": 33, "mmlalia": 33, "mathml": 33, "alias": [33, 358, 438, 949], "entiti": [33, 190, 446, 460, 487, 504, 544, 552, 659, 856, 1046, 1201], "isoamsa": 33, "mathemat": [33, 282, 1136], "arrow": [33, 35, 36, 38, 75, 76, 948, 1079], "isoamsr": 33, "relat": [33, 71, 178, 211, 222, 226, 247, 251, 306, 319, 375, 378, 380, 450, 459, 466, 470, 472, 476, 479, 483, 492, 496, 501, 502, 514, 535, 644, 745, 783, 800, 825, 837, 838, 839, 840, 855, 864, 912, 991, 1046, 1056, 1188, 1221, 1222], "isonum": 33, "binari": [33, 42, 50, 54, 55, 58, 78, 89, 90, 186, 190, 196, 250, 251, 259, 263, 265, 266, 268, 273, 275, 278, 288, 405, 449, 482, 494, 682, 760, 824, 865, 879, 887, 933, 1062, 1065, 1079, 1091, 1118, 1123, 1201], "sphinxish": 33, "send": [33, 103, 126, 144, 168, 187, 190, 201, 226, 227, 229, 230, 231, 232, 265, 266, 285, 287, 288, 306, 327, 371, 397, 402, 566, 911, 928, 944, 987, 988, 992, 1001, 1011, 1059, 1061, 1184, 1201], "v4l": [33, 144], "ssh": [33, 99, 103, 104, 126, 144, 147, 162, 163, 168, 187, 197, 201, 230, 262, 278, 285, 288, 296, 303, 305, 310, 320, 324, 326, 346, 352, 358, 364, 370, 376, 379, 383, 396, 397, 403, 404, 410, 411, 415, 601, 602, 840, 913, 914, 915, 923, 970, 979, 984, 985, 996, 997, 1022, 1065, 1073, 1074, 1075, 1245, 1247, 1252], "taken": [34, 35, 36, 38, 40, 75, 76, 130, 171, 189, 193, 194, 201, 250, 371, 372, 484, 510, 524, 601, 610, 657, 813, 890, 912, 923, 948, 1062, 1114, 1201], "definit": [34, 35, 36, 38, 109, 116, 119, 120, 121, 134, 144, 155, 186, 190, 192, 193, 195, 197, 210, 219, 222, 223, 228, 242, 249, 251, 315, 317, 333, 349, 375, 378, 397, 418, 419, 420, 450, 459, 462, 465, 466, 472, 476, 479, 483, 489, 490, 491, 492, 494, 495, 496, 501, 502, 507, 509, 514, 517, 523, 524, 533, 535, 543, 544, 566, 588, 628, 646, 647, 648, 653, 654, 660, 661, 663, 672, 675, 676, 698, 724, 726, 734, 745, 755, 771, 783, 785, 798, 802, 806, 837, 839, 840, 865, 887, 949, 993, 994, 1062, 1082, 1089, 1095, 1100, 1111, 1115, 1128, 1129, 1132, 1197, 1211, 1228, 1238, 1241], "includ": [34, 35, 36, 38, 44, 109, 116, 122, 123, 182, 192, 197, 201, 205, 207, 218, 222, 229, 241, 242, 251, 252, 259, 263, 265, 266, 268, 275, 278, 282, 303, 317, 324, 333, 345, 349, 373, 374, 375, 376, 377, 378, 379, 380, 394, 405, 419, 420, 422, 426, 428, 430, 461, 462, 477, 482, 485, 487, 491, 498, 507, 508, 511, 512, 513, 514, 515, 516, 517, 523, 528, 531, 533, 534, 536, 537, 542, 543, 544, 545, 546, 547, 549, 551, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 585, 588, 591, 592, 593, 594, 595, 596, 597, 598, 600, 601, 602, 603, 604, 605, 606, 608, 610, 611, 612, 613, 615, 616, 617, 618, 619, 628, 634, 637, 644, 645, 646, 648, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 669, 672, 673, 674, 675, 676, 677, 679, 680, 681, 682, 683, 685, 686, 689, 690, 691, 695, 699, 700, 701, 702, 703, 709, 713, 714, 717, 719, 720, 722, 726, 727, 732, 733, 734, 735, 736, 737, 738, 739, 742, 743, 744, 746, 748, 750, 753, 754, 755, 756, 758, 760, 761, 762, 763, 766, 767, 768, 769, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 785, 786, 787, 788, 790, 792, 793, 795, 797, 801, 802, 803, 804, 805, 806, 807, 810, 812, 815, 817, 818, 819, 820, 824, 826, 828, 830, 834, 835, 836, 838, 840, 846, 851, 856, 858, 865, 867, 869, 871, 873, 875, 879, 881, 883, 892, 897, 901, 904, 907, 925, 945, 948, 954, 981, 986, 988, 992, 1008, 1010, 1011, 1012, 1014, 1017, 1018, 1019, 1020, 1021, 1024, 1026, 1029, 1037, 1041, 1043, 1046, 1052, 1055, 1059, 1062, 1065, 1075, 1078, 1079, 1081, 1083, 1111, 1112, 1137, 1138, 1211, 1217, 1223, 1228, 1230, 1233, 1243], "substitut": [34, 35, 36, 38, 108, 116, 121, 122, 144, 242, 278, 324, 394, 488, 504, 511, 512, 514, 515, 760, 1005, 1200], "angzarr": 34, "0237c": 34, "angl": [34, 36, 38, 1244], "WITH": [34, 35, 38, 1011], "downward": [34, 35, 36, 38, 510], "zigzag": 34, "cirmid": 34, "02aef": 34, "vertic": [34, 35, 36, 38, 439], "circl": [34, 35, 38, 252, 620, 928], "abov": [34, 35, 38, 80, 126, 131, 150, 151, 190, 192, 193, 194, 195, 197, 201, 205, 209, 228, 231, 242, 251, 259, 265, 275, 278, 282, 341, 373, 408, 455, 478, 488, 498, 524, 544, 564, 566, 588, 591, 592, 601, 602, 627, 637, 654, 655, 659, 660, 679, 723, 786, 848, 881, 887, 897, 914, 915, 932, 960, 992, 993, 994, 1018, 1022, 1048, 1055, 1079, 1087, 1118, 1132, 1204, 1210, 1221, 1228], "cudarrl": 34, "02938": 34, "side": [34, 210, 232, 306, 315, 434, 443, 484, 522, 526, 566, 598, 637, 661, 663, 664, 815, 867, 871, 927, 948, 996, 1087, 1120, 1167, 1193, 1195, 1204], "arc": 34, "clockwis": [34, 38], "cudarrr": 34, "02935": 34, "rightward": [34, 35, 36, 38], "THEN": 34, "curv": [34, 35], "cularr": 34, "021b6": [34, 38], "anticlockwis": [34, 38], "semicircl": [34, 38], "cularrp": 34, "0293d": 34, "plu": [34, 35, 36, 38, 191, 197, 259, 265, 275, 278, 291, 455, 602, 628, 660, 662, 664, 887, 1014], "curarr": 34, "021b7": [34, 38], "curarrm": 34, "0293c": 34, "minu": [34, 35, 36, 38, 270, 662, 806], "darr": [34, 36], "021a1": 34, "head": [34, 38, 40, 60, 124, 191, 193, 196, 230, 232, 242, 296, 305, 314, 326, 327, 370, 371, 815, 840, 917, 974, 975, 978, 981, 984, 1009, 1010, 1078, 1145], "021d3": [34, 38], "doubl": [34, 35, 36, 38, 116, 121, 122, 132, 135, 252, 268, 272, 278, 405, 420, 438, 439, 440, 443, 462, 482, 491, 518, 526, 543, 549, 554, 556, 563, 572, 574, 575, 580, 581, 582, 583, 584, 585, 588, 596, 598, 600, 601, 602, 613, 644, 646, 652, 654, 655, 659, 663, 695, 722, 747, 750, 753, 756, 760, 765, 766, 767, 768, 781, 800, 801, 803, 806, 815, 819, 824, 826, 828, 829, 830, 831, 887, 948, 992, 1087, 1107, 1131, 1209], "darr2": 34, "021ca": [34, 38], "pair": [34, 38, 103, 104, 131, 132, 205, 247, 257, 260, 263, 268, 272, 273, 278, 285, 287, 299, 300, 323, 329, 357, 364, 545, 549, 552, 602, 620, 698, 699, 700, 703, 746, 792, 793, 797, 840, 851, 856, 984, 996, 997, 998, 1000, 1081, 1091, 1135, 1188, 1199, 1216], "ddarr": 34, "ddotrahd": 34, "02911": 34, "dot": [34, 35, 36, 38, 194, 498, 538, 540, 970, 1064], "stem": [34, 520, 522, 856], "dfisht": 34, "0297f": 34, "down": [34, 35, 38, 189, 190, 193, 218, 295, 333, 349, 374, 375, 378, 403, 424, 465, 516, 517, 523, 524, 533, 542, 549, 591, 598, 599, 600, 601, 620, 662, 695, 720, 726, 743, 760, 785, 802, 825, 840, 855, 856, 887, 934, 980, 987, 994, 1062, 1065, 1228, 1233], "tail": [34, 38, 191, 230, 232, 242, 296, 305, 326, 327, 370, 371, 815, 840, 875, 917, 975, 978, 981, 984, 1213], "dhar": 34, "02965": 34, "harpoon": [34, 38], "barb": [34, 38], "left": [34, 35, 36, 38, 62, 86, 112, 113, 131, 189, 190, 192, 210, 241, 252, 278, 324, 441, 442, 449, 455, 524, 547, 591, 598, 644, 647, 651, 659, 660, 717, 724, 751, 930, 931, 948, 992, 1001, 1020, 1062, 1091, 1095, 1106, 1107, 1118, 1132, 1187, 1193, 1211], "besid": [34, 35, 38, 205], "dharl": 34, "021c3": [34, 38], "leftward": [34, 35, 36, 38], "dharr": 34, "021c2": [34, 38], "dlarr": 34, "02199": [34, 38], "south": [34, 38], "west": [34, 38, 199], "drarr": 34, "02198": [34, 38], "east": [34, 38], "duarr": 34, "021f5": [34, 38], "OF": [34, 35, 38, 193, 793], "upward": [34, 36, 38], "duhar": 34, "0296f": [34, 38], "dzigrarr": 34, "027ff": 34, "long": [34, 35, 38, 53, 139, 189, 190, 191, 192, 193, 197, 200, 218, 222, 230, 242, 259, 263, 265, 268, 275, 278, 286, 314, 397, 415, 426, 436, 438, 439, 443, 447, 448, 475, 482, 484, 493, 497, 499, 500, 524, 531, 544, 601, 646, 647, 652, 657, 722, 793, 802, 812, 824, 826, 828, 830, 838, 846, 858, 867, 869, 885, 887, 892, 897, 901, 927, 948, 970, 994, 1005, 1011, 1014, 1044, 1052, 1082, 1089, 1129, 1139, 1188, 1195, 1206, 1213, 1241], "squiggl": 34, "erarr": 34, "02971": 34, "equal": [34, 35, 36, 38, 67, 157, 192, 214, 226, 242, 249, 252, 278, 282, 314, 315, 324, 336, 352, 420, 426, 442, 449, 454, 465, 490, 493, 518, 524, 590, 596, 603, 607, 642, 687, 706, 710, 738, 740, 806, 840, 923, 927, 981, 1005, 1044, 1048, 1049, 1118, 1173, 1228], "sign": [34, 35, 36, 38, 193, 200, 205, 268, 436, 438, 446, 490, 504, 518, 548, 786, 860, 1118, 1132, 1193, 1238, 1239], "harr": 34, "021d4": [34, 38], "02194": [34, 38], "harrcir": 34, "02948": 34, "small": [34, 38, 43, 108, 189, 191, 192, 222, 242, 246, 302, 341, 351, 372, 418, 490, 494, 547, 599, 644, 757, 802, 985, 986, 992, 1024, 1056, 1110, 1133, 1200, 1228], "harrw": 34, "021ad": [34, 38], "hoarr": 34, "021ff": 34, "imof": 34, "022b7": 34, "imag": [34, 35, 38, 165, 184, 186, 189, 190, 191, 192, 200, 213, 275, 278, 282, 300, 364, 368, 375, 378, 397, 403, 500, 506, 538, 652, 865, 887, 985, 1190, 1195], "laarr": 34, "021da": [34, 38], "tripl": [34, 35, 38, 61, 63], "larr": [34, 36], "0219e": [34, 38], "larr2": 34, "021c7": [34, 38], "larrbf": 34, "0291f": 34, "bar": [34, 35, 36, 38, 196, 217, 237, 260, 273, 278, 287, 290, 320, 323, 324, 329, 342, 346, 352, 358, 364, 368, 406, 506, 524, 591, 807, 1085, 1127, 1188], "TO": [34, 35, 38, 1143], "black": [34, 38, 195, 246, 254, 266, 269, 698, 1075], "larrf": 34, "0291d": 34, "larrhk": 34, "021a9": [34, 38], "larrlp": 34, "021ab": [34, 38], "larrpl": 34, "02939": 34, "larrsim": 34, "02973": 34, "tild": [34, 35, 38], "larrtl": 34, "021a2": [34, 38], "latail": 34, "0291b": 34, "02919": 34, "lbarr": 34, "0290e": 34, "0290c": 34, "ldca": 34, "02936": 34, "ldrdhar": 34, "02967": 34, "ldrushar": 34, "0294b": 34, "ldsh": 34, "021b2": 34, "tip": [34, 38, 247, 257, 260, 263, 287, 299, 323, 329, 1188], "lfisht": 34, "0297c": 34, "lhar": 34, "02962": 34, "lhard": 34, "021bd": [34, 38], "lharu": 34, "021bc": [34, 38], "lharul": 34, "0296a": 34, "llarr": 34, "llhard": 34, "0296b": 34, "below": [34, 35, 38, 134, 142, 152, 171, 186, 190, 191, 192, 195, 197, 201, 210, 222, 231, 249, 282, 295, 341, 429, 431, 498, 505, 510, 515, 569, 583, 591, 592, 598, 601, 726, 737, 739, 753, 765, 785, 786, 802, 806, 815, 817, 835, 836, 838, 860, 881, 923, 927, 931, 948, 985, 994, 1015, 1059, 1062, 1228], "loarr": 34, "021fd": 34, "lrarr": 34, "021c6": [34, 38], "lrarr2": 34, "lrhar": 34, "021cb": [34, 38], "lrhar2": 34, "lrhard": 34, "0296d": 34, "lsh": [34, 38], "021b0": [34, 38], "lurdshar": 34, "0294a": 34, "luruhar": 34, "02966": 34, "02905": 34, "021a6": [34, 38], "midcir": 34, "02af0": 34, "mumap": 34, "022b8": [34, 38], "multimap": [34, 38, 315, 620, 697, 706, 710, 740, 840], "nearhk": 34, "02924": 34, "north": [34, 38], "nearr": 34, "021d7": 34, "02197": [34, 38], "nesear": 34, "02928": [34, 38], "AND": [34, 35, 38, 426, 442, 465, 528, 648, 976, 1106], "nharr": 34, "021ce": [34, 38], "stroke": [34, 38], "021ae": [34, 38], "nlarr": 34, "021cd": [34, 38], "0219a": [34, 38], "nrarr": 34, "021cf": [34, 38], "0219b": [34, 38], "nrarrc": 34, "02933": 34, "00338": [34, 38], "directli": [34, 40, 131, 186, 205, 291, 316, 383, 542, 659, 729, 858, 871, 883, 890, 901, 994, 1004, 1008, 1062, 1086, 1106, 1114, 1178, 1180, 1207], "slash": [34, 38, 972, 1056], "nrarrw": 34, "0219d": [34, 38], "nvharr": 34, "02904": 34, "nvlarr": 34, "02902": 34, "nvrarr": 34, "02903": 34, "nwarhk": 34, "02923": 34, "nwarr": 34, "021d6": 34, "02196": [34, 38], "nwnear": 34, "02927": 34, "olarr": 34, "021ba": [34, 38], "orarr": 34, "021bb": [34, 38], "origof": 34, "022b6": 34, "origin": [34, 35, 38, 60, 62, 65, 124, 168, 187, 193, 195, 200, 205, 211, 223, 255, 259, 265, 268, 270, 275, 278, 303, 314, 319, 323, 324, 326, 327, 329, 333, 341, 345, 349, 351, 355, 357, 363, 367, 371, 374, 376, 379, 381, 464, 480, 544, 547, 598, 645, 653, 654, 655, 683, 735, 736, 738, 739, 797, 801, 804, 806, 817, 860, 887, 888, 911, 914, 915, 931, 945, 1084, 1190, 1201, 1223], "raarr": 34, "021db": [34, 38], "rarr": [34, 36], "021a0": [34, 38], "rarr2": 34, "021c9": [34, 38], "rarrap": 34, "02975": 34, "almost": [34, 35, 38, 61, 63, 192, 205, 214, 251, 443, 491, 493, 508, 649, 714, 743, 791, 807, 1056], "rarrbf": 34, "02920": 34, "rarrc": 34, "rarrf": 34, "0291e": 34, "rarrhk": 34, "021aa": [34, 38], "rarrlp": 34, "021ac": [34, 38], "rarrpl": 34, "02945": 34, "rarrsim": 34, "02974": 34, "rarrtl": 34, "02916": 34, "021a3": [34, 38], "rarrw": 34, "ratail": 34, "0291c": 34, "0291a": 34, "rbarr": 34, "02910": [34, 38], "0290f": [34, 38], "0290d": [34, 38], "rdca": 34, "02937": 34, "rdldhar": 34, "02969": 34, "rdsh": 34, "021b3": 34, "rfisht": 34, "0297d": 34, "rhar": 34, "02964": 34, "rhard": 34, "021c1": [34, 38], "rharu": 34, "021c0": [34, 38], "rharul": 34, "0296c": 34, "rlarr": 34, "021c4": [34, 38], "rlarr2": 34, "rlhar": 34, "021cc": [34, 38], "rlhar2": 34, "roarr": 34, "021fe": 34, "rrarr": 34, "rsh": [34, 38, 660, 995], "021b1": [34, 38], "ruluhar": 34, "02968": 34, "searhk": 34, "02925": [34, 38], "searr": 34, "021d8": 34, "seswar": 34, "02929": [34, 38], "simrarr": 34, "02972": 34, "slarr": 34, "02190": [34, 36, 38], "srarr": 34, "02192": [34, 36, 38], "swarhk": 34, "02926": [34, 38], "swarr": 34, "021d9": 34, "swnwar": 34, "0292a": 34, "uarr": [34, 36], "0219f": 34, "021d1": [34, 38], "uarr2": 34, "021c8": [34, 38], "uarrocir": 34, "02949": 34, "udarr": 34, "021c5": [34, 38], "udhar": 34, "0296e": [34, 38], "ufisht": 34, "0297e": 34, "uhar": 34, "02963": 34, "uharl": 34, "021bf": [34, 38], "uharr": 34, "021be": [34, 38], "uuarr": 34, "varr": 34, "021d5": [34, 38], "02195": [34, 38], "xharr": 34, "027fa": [34, 38], "027f7": [34, 38], "xlarr": 34, "027f8": [34, 38], "027f5": [34, 38], "xmap": 34, "027fc": [34, 38], "xrarr": 34, "027f9": [34, 38], "027f6": [34, 38], "zigrarr": 34, "021dd": 34, "ap": [35, 1018], "02a70": 35, "approxim": [35, 38, 192, 288, 518], "OR": [35, 38, 265, 426, 442, 465, 482, 976, 1106], "0224a": [35, 38], "apid": 35, "0224b": 35, "asymp": 35, "02248": [35, 38], "barv": 35, "02ae7": 35, "tack": [35, 38], "overbar": 35, "bcong": 35, "0224c": [35, 38], "bepsi": 35, "003f6": [35, 38], "greek": [35, 38], "revers": [35, 36, 38, 159, 235, 262, 268, 285, 303, 310, 315, 324, 330, 352, 358, 368, 423, 519, 620, 627, 628, 687, 691, 706, 710, 740, 785, 840, 842, 881, 920, 921, 985, 1046, 1134, 1168], "lunat": [35, 38], "epsilon": [35, 38], "bowti": 35, "022c8": 35, "bsim": 35, "0223d": [35, 38], "bsime": 35, "022cd": [35, 38], "bsolhsub": 35, "0005c": [35, 36], "02282": [35, 38], "solidu": [35, 36], "subset": [35, 38, 278, 1065, 1079, 1136], "bump": 35, "0224e": [35, 38], "geometr": [35, 38, 282], "equival": [35, 38, 80, 94, 108, 111, 278, 451, 455, 470, 475, 526, 656, 734, 911, 913, 949, 981, 1014, 1095, 1117, 1127, 1137], "02aae": 35, "bumpi": 35, "0224f": [35, 38], "between": [35, 38, 71, 91, 105, 139, 190, 191, 192, 194, 200, 201, 211, 226, 238, 251, 259, 262, 265, 270, 272, 275, 278, 282, 285, 300, 303, 310, 324, 329, 342, 352, 355, 358, 364, 383, 393, 427, 430, 443, 465, 470, 477, 490, 495, 504, 509, 556, 566, 588, 596, 660, 677, 737, 793, 803, 807, 818, 841, 842, 846, 892, 918, 919, 925, 985, 992, 1022, 1032, 1046, 1047, 1048, 1049, 1056, 1060, 1095, 1106, 1116, 1118, 1129, 1194, 1246], "cire": 35, "02257": [35, 38], "colon": [35, 36, 38, 1166], "02237": [35, 38], "proport": [35, 38, 191], "02a74": 35, "02254": [35, 38], "congdot": 35, "02a6d": 35, "congruent": [35, 38], "csub": 35, "02acf": 35, "close": [35, 54, 116, 121, 122, 144, 152, 195, 201, 210, 222, 240, 249, 250, 263, 270, 294, 295, 297, 320, 324, 352, 354, 355, 373, 374, 380, 470, 504, 518, 535, 602, 620, 771, 799, 808, 816, 839, 840, 931, 992, 1010, 1011, 1012, 1014, 1015, 1017, 1018, 1019, 1020, 1021, 1024, 1026, 1029, 1055, 1059, 1062, 1084, 1197, 1254], "csube": 35, "02ad1": 35, "csup": 35, "02ad0": 35, "superset": [35, 38, 1136, 1240], "csupe": 35, "02ad2": 35, "cuepr": 35, "022de": [35, 38], "cuesc": 35, "022df": [35, 38], "succe": [35, 38, 726, 820, 865, 967, 996, 1086], "cupr": 35, "0227c": [35, 38], "dashv": 35, "02ae4": [35, 38], "turnstil": [35, 38], "022a3": [35, 38], "easter": [35, 242], "02a6e": 35, "asterisk": [35, 36, 38], "ecir": 35, "02256": [35, 38], "IN": [35, 38, 194], "ecolon": 35, "02255": [35, 38], "eddot": 35, "02a77": [35, 38], "edot": 35, "02251": [35, 38], "efdot": 35, "02252": [35, 38], "THE": [35, 38, 507, 1011], "02a9a": 35, "greater": [35, 36, 38, 108, 126, 317, 442, 524, 590, 596, 604, 607, 642, 785, 840, 873, 1118], "than": [35, 36, 38, 43, 70, 108, 124, 126, 134, 143, 144, 149, 186, 190, 191, 195, 197, 200, 201, 205, 222, 226, 229, 233, 242, 249, 252, 259, 265, 270, 272, 275, 278, 282, 309, 312, 317, 341, 344, 372, 383, 442, 443, 462, 464, 493, 494, 495, 506, 509, 534, 535, 542, 590, 598, 604, 607, 642, 646, 658, 661, 663, 664, 722, 730, 743, 754, 780, 793, 817, 840, 843, 858, 873, 879, 883, 887, 948, 973, 977, 985, 993, 1003, 1004, 1011, 1014, 1031, 1059, 1063, 1079, 1080, 1095, 1100, 1117, 1118, 1163, 1167, 1197, 1204, 1207, 1223, 1241], "02a96": [35, 38], "slant": [35, 38], "egsdot": 35, "02a98": 35, "el": [35, 238, 249, 285], "02a99": 35, "less": [35, 36, 38, 61, 63, 80, 186, 190, 191, 192, 197, 201, 251, 265, 282, 296, 305, 306, 312, 326, 327, 370, 371, 420, 442, 443, 447, 490, 493, 514, 519, 524, 526, 544, 596, 700, 720, 722, 747, 793, 795, 817, 840, 858, 860, 887, 917, 932, 948, 975, 978, 979, 981, 984, 1014, 1100, 1118, 1137, 1216, 1217, 1230, 1241, 1247], "02a95": [35, 38], "elsdot": 35, "02a97": 35, "equest": 35, "0225f": [35, 38], "equivdd": 35, "02a78": 35, "erdot": 35, "02253": [35, 38], "esdot": 35, "02250": [35, 38], "limit": [35, 38, 62, 65, 190, 191, 207, 229, 259, 265, 275, 278, 324, 375, 378, 443, 485, 518, 520, 698, 743, 887, 925, 1030, 1049, 1092, 1093, 1118, 1192, 1214], "esim": 35, "02a73": 35, "02242": [35, 38], "fork": [35, 43, 143, 192, 207, 211, 840, 846, 847, 849, 854, 857, 864, 868, 878, 891, 896, 902, 905, 908, 984, 1017, 1030, 1038, 1056, 1254], "022d4": [35, 38], "pitchfork": [35, 38], "forkv": 35, "02ad9": 35, "02322": 35, "gap": 35, "02a86": [35, 38], "02267": [35, 38], "gel": 35, "02a8c": [35, 38], "022db": [35, 38], "02a7e": [35, 38], "gescc": 35, "02aa9": 35, "gesdot": 35, "02a80": 35, "gesdoto": 35, "02a82": 35, "gesdotol": 35, "02a84": 35, "gesl": 35, "0fe00": [35, 38], "02a94": 35, "022d9": [35, 38], "02277": [35, 38], "gla": 35, "02aa5": 35, "gle": 35, "02a92": 35, "glj": 35, "02aa4": 35, "overlap": [35, 278, 282, 324, 838, 871, 1098], "gsdot": 35, "022d7": [35, 38], "gsim": 35, "02273": [35, 38], "gsime": 35, "02a8e": 35, "similar": [35, 61, 63, 132, 190, 192, 222, 226, 230, 232, 263, 276, 290, 445, 452, 528, 543, 570, 599, 600, 631, 643, 652, 726, 771, 806, 807, 835, 836, 858, 873, 887, 932, 1079, 1081, 1188], "gsiml": 35, "02a90": 35, "0226b": [35, 38], "gtcc": 35, "02aa7": 35, "gtcir": 35, "02a7a": 35, "gtdot": 35, "gtquest": 35, "02a7c": 35, "mark": [35, 36, 38, 249, 290, 398, 399, 439, 461, 782, 790, 903, 1095, 1097, 1216], "gtrarr": 35, "02978": 35, "homtht": 35, "0223b": 35, "homothet": 35, "lap": 35, "02a85": [35, 38], "lat": 35, "02aab": 35, "larger": [35, 70, 80, 222, 229, 252, 269, 282, 332, 348, 491, 494, 506, 564, 644, 661, 663, 858, 907, 930, 992, 994, 1059, 1080, 1093, 1243], "late": [35, 190, 192, 315, 317, 806, 807, 994, 1050, 1095, 1112, 1129, 1244], "02aad": 35, "ldot": 35, "022d6": [35, 38], "le": [35, 564], "02266": [35, 38], "02a8b": [35, 38], "022da": [35, 38], "02a7d": [35, 38], "lescc": 35, "02aa8": 35, "lesdot": 35, "02a7f": 35, "lesdoto": 35, "02a81": 35, "lesdotor": 35, "02a83": 35, "lesg": 35, "02a93": 35, "lg": [35, 330, 346, 1201], "02276": [35, 38], "lge": 35, "02a91": 35, "ll": [35, 38, 61, 63, 126, 189, 190, 191, 193, 195, 197, 200, 205, 206, 218, 220, 230, 232, 246, 275, 278, 306, 309, 312, 585, 599, 661, 663, 664, 887, 913, 985, 994, 1005, 1020, 1067, 1071, 1077, 1110, 1204], "022d8": 35, "lsim": 35, "02272": [35, 38], "lsime": 35, "02a8d": 35, "lsimg": 35, "02a8f": 35, "0226a": [35, 38], "ltcc": 35, "02aa6": 35, "ltcir": 35, "02a79": 35, "ltdot": 35, "ltlarr": 35, "02976": 35, "ltquest": 35, "02a7b": 35, "ltrie": 35, "022b4": [35, 38], "normal": [35, 38, 90, 171, 178, 190, 192, 197, 205, 208, 213, 222, 282, 482, 508, 526, 531, 535, 658, 660, 903, 919, 925, 1046, 1060, 1114, 1194, 1207, 1221, 1233], "mcomma": 35, "02a29": 35, "comma": [35, 36, 228, 241, 262, 342, 1196], "mddot": 35, "0223a": 35, "mid": 35, "02223": [35, 38], "mlcp": 35, "02adb": 35, "transvers": 35, "intersect": [35, 38, 246, 270, 342, 1136], "model": [35, 124, 293, 308, 314, 317, 481, 1118, 1191, 1194, 1213], "022a7": 35, "mstpo": 35, "0223e": 35, "invert": [35, 36, 62, 155, 222, 372, 1028], "lazi": [35, 259, 265, 275, 278, 434, 802], "02abb": 35, "0227a": [35, 38], "prap": 35, "02ab7": [35, 38], "prcue": 35, "pre": [35, 192, 222, 251, 444, 518, 646, 648, 652, 698, 699, 700, 751, 792, 793, 948, 1111, 1126, 1200], "02ab3": 35, "02aaf": [35, 38], "singl": [35, 36, 38, 44, 61, 62, 63, 86, 108, 112, 113, 116, 121, 122, 126, 131, 134, 144, 159, 168, 190, 192, 210, 249, 250, 259, 263, 265, 271, 272, 275, 278, 282, 306, 420, 426, 438, 439, 451, 497, 500, 504, 506, 522, 535, 555, 568, 653, 707, 782, 793, 801, 803, 814, 846, 856, 858, 920, 921, 923, 924, 925, 948, 953, 954, 955, 957, 973, 985, 993, 997, 1033, 1044, 1046, 1047, 1056, 1059, 1063, 1065, 1068, 1069, 1075, 1079, 1080, 1081, 1094, 1131, 1132, 1139, 1155, 1161, 1194, 1201, 1209, 1212, 1216, 1221, 1222, 1229], "prsim": 35, "0227e": [35, 38], "prurel": 35, "022b0": 35, "ratio": [35, 282], "02236": 35, "rtrie": 35, "022b5": [35, 38], "AS": [35, 38, 1011], "rtriltri": 35, "029ce": 35, "triangl": [35, 38, 620], "samalg": 35, "02210": [35, 38], "coproduct": [35, 38], "02abc": 35, "0227b": [35, 38], "scap": 35, "02ab8": [35, 38], "sccue": 35, "0227d": [35, 38], "sce": 35, "02ab4": 35, "02ab0": [35, 38], "scsim": 35, "0227f": [35, 38], "sdote": 35, "02a66": 35, "sfrown": 35, "simg": 35, "02a9e": 35, "02aa0": 35, "siml": 35, "02a9d": 35, "02a9f": 35, "smid": 35, "02323": 35, "smt": 35, "02aaa": 35, "smaller": [35, 268, 282, 420, 482, 491, 506, 1081], "smte": 35, "02aac": 35, "spar": [35, 308, 506], "02225": [35, 38], "parallel": [35, 38, 61, 63, 74, 75, 76, 80, 93, 196, 219, 222, 226, 228, 263, 318, 319, 340, 508, 815, 840, 877, 879, 887, 890, 924, 932, 1033, 1044, 1047, 1095, 1097, 1098, 1183, 1188, 1245, 1246, 1253, 1257], "sqsub": 35, "0228f": [35, 38], "squar": [35, 36, 38, 62, 210, 223, 233, 249, 255, 262, 265, 270, 272, 278, 282, 291, 303, 317, 324, 342, 346, 352, 358, 364, 518, 552, 663, 1089, 1138, 1142, 1209], "sqsube": 35, "02291": [35, 38], "sqsup": 35, "02290": [35, 38], "sqsupe": 35, "02292": [35, 38], "ssmile": 35, "sub": [35, 266, 278, 324, 547, 564, 644, 825, 1085, 1124, 1133, 1139, 1230], "022d0": [35, 38], "sube": 35, "02ac5": [35, 38], "subedot": 35, "02ac3": 35, "submult": 35, "02ac1": 35, "subplu": 35, "02abf": 35, "subrarr": 35, "02979": 35, "subsim": 35, "02ac7": 35, "subsub": 35, "02ad5": 35, "subsup": 35, "02ad3": 35, "sup": [35, 1018], "022d1": [35, 38], "supdsub": 35, "02ad8": 35, "supe": 35, "02ac6": [35, 38], "supedot": 35, "02ac4": 35, "suphsol": 35, "02283": [35, 38], "0002f": [35, 36], "suphsub": 35, "02ad7": 35, "suplarr": 35, "0297b": 35, "supmult": 35, "02ac2": 35, "supplu": 35, "02ac0": 35, "supsim": 35, "02ac8": 35, "supsub": 35, "02ad4": 35, "supsup": 35, "02ad6": 35, "thkap": 35, "thksim": 35, "0223c": [35, 38], "topfork": 35, "02ada": 35, "tee": [35, 932], "trie": 35, "0225c": [35, 38], "delta": [35, 38, 124, 205, 255], "twixt": 35, "0226c": [35, 38], "vbar": 35, "02aeb": 35, "02ae8": 35, "underbar": 35, "vbarv": 35, "02ae9": 35, "vdash": 35, "022ab": 35, "022a9": 35, "022a8": [35, 38], "022a2": [35, 38], "vdashl": 35, "02ae6": 35, "veebar": 35, "022bb": 35, "xor": [35, 1106], "vltri": 35, "022b2": [35, 38], "vprop": 35, "0221d": [35, 38], "vrtri": 35, "022b3": [35, 38], "vvdash": 35, "022aa": 35, "\u00bd": 36, "\u00bc": 36, "\u215b": 36, "\u00be": 36, "\u215c": 36, "\u215d": 36, "\u215e": 36, "_": [36, 39, 62, 210, 211, 246, 259, 262, 263, 265, 272, 275, 278, 285, 288, 300, 324, 346, 368, 389, 437, 506, 656, 780, 877, 948, 1050, 1077, 1095, 1097], "\u00b5": 36, "\u03c9": 36, "\u00aa": 36, "\u00ba": 36, "\u00b9": 36, "\u00b2": 36, "\u00b3": 36, "amp": [36, 262], "00026": 36, "ampersand": [36, 756], "apo": 36, "00027": 36, "apostroph": 36, "ast": [36, 564], "0002a": 36, "brvbar": 36, "000a6": 36, "broken": [36, 480, 481, 771, 879, 892, 1099, 1166, 1196], "bsol": 36, "cent": 36, "000a2": 36, "0003a": 36, "0002c": 36, "commat": 36, "00040": 36, "commerci": [36, 197, 865, 927], "AT": 36, "000a9": 36, "curren": 36, "000a4": 36, "currenc": [36, 308, 506], "02193": [36, 38], "deg": 36, "000b0": 36, "degre": [36, 152, 543, 554, 585, 696, 994, 1112], "000f7": [36, 38], "00024": 36, "0003d": 36, "excl": 36, "00021": 36, "frac12": 36, "000bd": 36, "vulgar": 36, "fraction": [36, 282, 383], "ONE": [36, 744], "frac14": 36, "000bc": 36, "quarter": 36, "frac18": 36, "0215b": 36, "eighth": 36, "frac34": 36, "000be": 36, "frac38": 36, "0215c": 36, "frac58": 36, "0215d": 36, "frac78": 36, "0215e": 36, "0003e": 36, "horbar": 36, "02015": 36, "horizont": [36, 439], "hyphen": 36, "02010": 36, "iexcl": 36, "000a1": 36, "iquest": 36, "000bf": 36, "laquo": 36, "000ab": 36, "quotat": [36, 38], "lcub": 36, "0007b": [36, 38], "curli": [36, 38], "bracket": [36, 38, 1115], "ldquo": 36, "0201c": [36, 38], "lowbar": 36, "0005f": 36, "low": [36, 121, 127, 186, 233, 262, 282, 299, 432, 464, 500, 504, 535, 552, 575, 588, 591, 592, 596, 801, 803, 869, 883, 924, 992, 1048, 1064, 1145, 1243], "lpar": 36, "00028": 36, "parenthesi": 36, "lsqb": 36, "0005b": [36, 38], "lsquo": 36, "02018": [36, 38], "0003c": 36, "micro": [36, 259, 265, 275, 278], "000b5": 36, "middot": 36, "000b7": [36, 38], "middl": [36, 38, 39, 62, 200, 211, 266, 282, 334, 337, 367, 368, 484, 504, 591, 620, 865, 985, 995, 1001, 1062, 1097], "nbsp": [36, 368], "000a0": [36, 38], "NO": [36, 38, 144, 201, 242, 394, 524, 723, 994, 1059], "space": [36, 38, 62, 80, 101, 112, 113, 126, 148, 159, 165, 186, 190, 191, 192, 197, 210, 213, 237, 251, 278, 296, 303, 305, 306, 324, 326, 327, 370, 371, 388, 399, 400, 408, 427, 446, 448, 467, 519, 548, 553, 562, 566, 590, 591, 592, 593, 594, 595, 596, 597, 600, 642, 651, 660, 695, 816, 839, 840, 848, 885, 900, 914, 915, 916, 917, 922, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 962, 963, 964, 965, 966, 968, 984, 993, 996, 997, 998, 999, 1000, 1007, 1011, 1012, 1013, 1014, 1015, 1023, 1025, 1030, 1038, 1039, 1041, 1042, 1045, 1047, 1055, 1062, 1064, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1080, 1095, 1098, 1132], "000ac": 36, "NOT": [36, 38, 220, 426, 465, 513, 516, 522, 524, 526, 569, 570, 583, 584, 858, 976, 1207], "num": [36, 195, 209, 210, 223, 233, 249, 263, 265, 270, 272, 278, 282, 300, 303, 342, 346, 364, 368, 470, 675, 677, 760, 761, 762, 763, 772, 792, 824, 826, 828, 830, 976, 981, 1090, 1196], "00023": 36, "ohm": 36, "02126": 36, "ordf": 36, "000aa": 36, "feminin": 36, "ordin": [36, 278, 285, 288, 324, 330, 346, 352, 358, 1201], "indic": [36, 241, 259, 265, 270, 275, 278, 314, 698, 848], "ordm": 36, "000ba": 36, "masculin": 36, "para": 36, "000b6": 36, "pilcrow": 36, "percnt": 36, "00025": 36, "percent": [36, 282], "period": [36, 86, 135, 139, 207, 230, 498, 651, 818, 897, 985, 993, 1012, 1022, 1044, 1046, 1059, 1216], "0002e": 36, "full": [36, 136, 144, 171, 208, 253, 257, 303, 443, 458, 486, 491, 519, 614, 625, 660, 765, 802, 815, 840, 927, 932, 993, 1035, 1041, 1087, 1106, 1139, 1196, 1204], "stop": [36, 184, 195, 251, 278, 315, 317, 319, 324, 342, 352, 382, 535, 569, 583, 881, 985, 987, 1060, 1086, 1210, 1228], "0002b": 36, "plusmn": 36, "000b1": [36, 38], "000a3": 36, "quest": 36, "0003f": 36, "quot": [36, 210, 258, 261, 265, 272, 278, 286, 439, 522, 524, 912, 976, 977, 995, 1131], "00022": 36, "raquo": 36, "000bb": 36, "rcub": 36, "0007d": [36, 38], "rdquo": 36, "0201d": [36, 38], "reg": 36, "000ae": [36, 38], "rpar": 36, "00029": 36, "rsqb": 36, "0005d": [36, 38], "rsquo": 36, "02019": [36, 38], "sect": 36, "000a7": 36, "section": [36, 38, 90, 190, 194, 195, 196, 205, 214, 227, 251, 309, 312, 315, 415, 628, 646, 726, 729, 814, 877, 879, 948, 991, 992, 1008, 1062, 1063, 1064, 1066, 1073, 1079, 1080, 1081, 1221], "semi": [36, 310, 344, 556, 801, 1030, 1082], "0003b": 36, "semicolon": [36, 519, 535, 1196], "shy": 36, "000ad": 36, "soft": [36, 187, 404, 885], "sol": 36, "sung": 36, "0266a": 36, "sup1": 36, "000b9": 36, "superscript": 36, "sup2": 36, "000b2": 36, "sup3": 36, "000b3": 36, "000d7": 36, "trade": 36, "02122": 36, "02191": [36, 38], "verbar": 36, "0007c": [36, 38], "000a5": 36, "lorem": 37, "ipsum": 37, "h\u00f6dlmoser": 37, "anywai": [37, 43, 53, 60, 171, 189, 191, 192, 201, 220, 222, 242, 251, 252, 278, 446, 494, 500, 504, 516, 646, 652, 661, 663, 664, 743, 751, 754, 758, 792, 793, 803, 879, 887, 927, 948, 1038, 1095, 1207, 1221], "hmm": [37, 187, 196, 209, 220, 528, 631, 765, 1059], "annoi": [37, 43, 383, 506, 743, 1221], "thing": [37, 40, 42, 43, 49, 102, 139, 183, 189, 190, 192, 193, 194, 195, 196, 197, 201, 210, 214, 218, 221, 222, 226, 230, 242, 259, 265, 266, 268, 275, 278, 288, 341, 351, 386, 444, 460, 464, 488, 494, 497, 504, 514, 548, 552, 620, 627, 628, 644, 646, 653, 658, 660, 682, 743, 765, 782, 806, 815, 838, 846, 851, 883, 887, 912, 927, 932, 981, 985, 986, 1013, 1018, 1041, 1046, 1062, 1075, 1079, 1080, 1086, 1100, 1114, 1137, 1228, 1246], "thin": [37, 38], "border": 37, "anfrag": [37, 1237, 1238, 1239, 1240, 1245, 1247, 1248, 1252, 1253, 1254, 1255, 1257, 1258, 1259], "dauer": [37, 1237, 1238, 1239, 1240, 1245, 1247, 1248, 1252, 1253, 1254, 1255, 1257, 1258, 1259], "tage": [37, 215, 217, 225, 414, 1237, 1238, 1239, 1240, 1245, 1247, 1248, 1252, 1254, 1255, 1257, 1258, 1259], "sysprog": [37, 186, 187, 306, 416, 840, 894, 899, 984, 1025, 1026, 1029, 1254, 1255, 1257, 1258], "catcher": 37, "somehow": [37, 42, 132, 139, 143, 155, 170, 171, 191, 344, 372, 524, 658, 895, 1216, 1217], "einf\u00fchrungskur": [37, 1237, 1254, 1255, 1257, 1258], "richtet": [37, 1239, 1254], "kennen": [37, 163, 166, 398, 1254], "lernen": [37, 1254], "zusammenh\u00e4ng": [37, 1254], "grundpfeil": [37, 1254], "erkl\u00e4rt": [37, 210, 213, 217, 1238, 1254, 1258, 1259], "bild": [37, 213, 1254], "orientieren": [37, 1254], "zurechtfinden": [37, 163, 166, 398, 1254], "somedai": 37, "better": [37, 57, 60, 116, 117, 125, 143, 171, 184, 186, 187, 191, 195, 201, 202, 212, 222, 223, 225, 226, 228, 229, 230, 233, 234, 247, 251, 257, 259, 260, 262, 263, 268, 269, 270, 272, 273, 276, 279, 282, 287, 291, 299, 306, 319, 323, 329, 367, 372, 373, 423, 435, 443, 450, 459, 464, 465, 466, 472, 476, 479, 483, 484, 492, 494, 496, 501, 502, 505, 508, 509, 513, 517, 524, 532, 535, 542, 620, 647, 655, 669, 682, 699, 722, 735, 738, 743, 745, 783, 795, 806, 821, 837, 839, 840, 887, 967, 993, 994, 1014, 1030, 1033, 1059, 1060, 1089, 1100, 1118, 1132, 1145, 1184, 1185, 1188, 1193, 1195, 1200, 1206, 1221, 1230], "yet": [37, 80, 165, 180, 190, 197, 200, 210, 212, 279, 280, 290, 303, 341, 461, 494, 507, 542, 551, 564, 566, 601, 602, 614, 620, 713, 817, 887, 904, 914, 915, 993, 1001, 1005, 1059, 1087, 1117, 1145, 1212, 1221, 1230], "redefin": 37, "wrap": [37, 62, 65, 249, 287, 341, 376, 379, 517, 523, 533, 563, 803, 809, 840, 887, 1079, 1213], "look": [37, 42, 43, 45, 61, 63, 67, 84, 91, 104, 126, 131, 139, 144, 171, 183, 184, 189, 190, 191, 192, 193, 195, 197, 200, 205, 210, 218, 222, 226, 229, 241, 247, 251, 276, 306, 309, 312, 315, 316, 334, 337, 341, 355, 382, 415, 478, 486, 494, 500, 504, 506, 516, 535, 539, 585, 600, 601, 614, 631, 657, 669, 681, 734, 747, 771, 803, 809, 810, 841, 846, 856, 883, 887, 914, 915, 919, 924, 927, 938, 940, 945, 952, 960, 975, 986, 992, 993, 1001, 1018, 1028, 1055, 1056, 1080, 1084, 1094, 1111, 1114, 1153, 1157, 1166, 1188, 1195, 1196, 1207, 1223, 1241, 1244], "mdbootstrap": 37, "jqueri": 37, "icon": 37, "longrightarrow": 38, "rightarrow": 38, "doubleleftrightarrow": 38, "02220": 38, "applyfunct": 38, "02061": 38, "applic": [38, 62, 80, 96, 139, 175, 190, 195, 207, 220, 242, 337, 341, 344, 372, 394, 415, 490, 493, 500, 601, 678, 681, 750, 791, 926, 986, 993, 1005, 1030, 1195], "approx": [38, 1176, 1221], "approxeq": 38, "assign": [38, 99, 210, 211, 212, 217, 223, 233, 240, 248, 259, 262, 265, 268, 270, 274, 275, 280, 282, 286, 310, 314, 315, 317, 342, 347, 358, 365, 369, 380, 397, 403, 404, 426, 443, 449, 450, 459, 466, 472, 473, 476, 479, 483, 488, 490, 492, 496, 501, 502, 556, 563, 569, 570, 578, 583, 584, 646, 647, 650, 657, 713, 722, 730, 740, 744, 745, 747, 751, 758, 781, 783, 788, 797, 803, 836, 837, 839, 840, 992, 994, 1033, 1044, 1047, 1049, 1127, 1138, 1210, 1212], "backcong": 38, "backepsilon": 38, "backprim": 38, "02035": 38, "backsim": 38, "backsimeq": 38, "backslash": [38, 439, 972, 1131], "02216": 38, "barwedg": 38, "02305": 38, "02235": 38, "bernoulli": 38, "0212c": 38, "bigcap": 38, "022c2": 38, "bigcirc": 38, "025ef": 38, "bigcup": 38, "022c3": 38, "union": [38, 246, 254, 270, 342, 373, 482, 821, 825, 828, 829, 830, 831, 839, 840, 1136, 1242], "bigodot": 38, "02a00": 38, "bigoplu": 38, "02a01": 38, "bigotim": 38, "02a02": 38, "bigsqcup": 38, "02a06": 38, "bigstar": 38, "02605": 38, "bigtriangledown": 38, "025bd": 38, "white": [38, 314, 428], "bigtriangleup": 38, "025b3": 38, "biguplu": 38, "02a04": 38, "bigve": 38, "022c1": 38, "logic": [38, 67, 127, 147, 155, 192, 372, 377, 386, 434, 450, 459, 464, 466, 472, 476, 479, 483, 488, 492, 496, 501, 502, 549, 566, 745, 783, 837, 839, 840, 1207], "bigwedg": 38, "022c0": 38, "bkarow": 38, "blacklozeng": 38, "029eb": 38, "lozeng": 38, "blacksquar": 38, "025aa": 38, "blacktriangl": 38, "025b4": 38, "blacktriangledown": 38, "025be": 38, "blacktriangleleft": 38, "025c2": 38, "blacktriangleright": 38, "025b8": 38, "bot": [38, 1221], "022a5": 38, "boxminu": 38, "0229f": 38, "boxplu": 38, "0229e": 38, "boxtim": 38, "022a0": 38, "breve": 38, "002d8": 38, "bullet": [38, 192, 1195], "02022": 38, "bumpeq": 38, "capitaldifferentiald": 38, "02145": 38, "struck": 38, "ital": 38, "d": [38, 67, 87, 99, 109, 123, 126, 162, 190, 191, 192, 193, 209, 212, 220, 223, 228, 233, 238, 240, 246, 249, 252, 255, 256, 260, 262, 263, 265, 270, 272, 275, 278, 282, 285, 288, 300, 303, 306, 310, 319, 320, 323, 324, 330, 338, 342, 346, 352, 358, 364, 368, 376, 389, 391, 392, 397, 420, 427, 428, 430, 434, 461, 465, 494, 504, 506, 519, 532, 547, 552, 646, 652, 659, 713, 714, 719, 720, 722, 727, 753, 790, 802, 803, 815, 817, 819, 860, 881, 895, 911, 914, 915, 925, 927, 931, 932, 945, 948, 949, 970, 974, 976, 981, 987, 992, 993, 994, 1006, 1011, 1059, 1062, 1085, 1087, 1113, 1119, 1124, 1126, 1127, 1131, 1132, 1135, 1156], "caylei": 38, "0212d": 38, "letter": [38, 437, 1117], "cedilla": 38, "000b8": 38, "centerdot": 38, "checkmark": 38, "02713": 38, "circeq": 38, "circlearrowleft": 38, "circlearrowright": 38, "circledast": 38, "0229b": 38, "circledcirc": 38, "0229a": 38, "circleddash": 38, "0229d": 38, "circledot": 38, "02299": 38, "circledr": 38, "024c8": 38, "latin": [38, 269, 330, 346], "circleminu": 38, "02296": 38, "circleplu": 38, "02295": 38, "circletim": 38, "02297": 38, "clockwisecontourintegr": 38, "02232": 38, "contour": 38, "closecurlydoublequot": 38, "closecurlyquot": 38, "clubsuit": 38, "02663": 38, "suit": [38, 44, 99, 131, 155, 186, 226, 295, 299, 374, 405, 482, 491, 542, 543, 544, 546, 547, 549, 551, 564, 566, 567, 585, 598, 599, 600, 601, 602, 661, 662, 663, 664, 754, 755, 792, 801, 802, 834, 835, 836, 838, 1222, 1229, 1244, 1259], "coloneq": 38, "complement": [38, 108, 443, 520], "02201": 38, "complex": [38, 71, 190, 201, 205, 222, 228, 248, 265, 270, 272, 278, 282, 286, 288, 303, 310, 324, 352, 397, 418, 461, 473, 488, 524, 818, 992, 993, 1017, 1033, 1056, 1118, 1127, 1234, 1244], "02102": 38, "02261": 38, "ident": [38, 274, 324, 336, 637, 1106, 1108, 1127], "contourintegr": 38, "0222e": 38, "counterclockwisecontourintegr": 38, "02233": 38, "cupcap": 38, "0224d": 38, "curlyeqprec": 38, "curlyeqsucc": 38, "curlyve": 38, "022ce": 38, "curlywedg": 38, "022cf": 38, "curvearrowleft": 38, "curvearrowright": 38, "dbkarow": 38, "ddagger": 38, "02021": 38, "ddotseq": 38, "02207": 38, "nabla": 38, "diacriticalacut": 38, "000b4": 38, "acut": 38, "accent": 38, "diacriticaldot": 38, "002d9": 38, "diacriticaldoubleacut": 38, "002dd": 38, "diacriticalgrav": 38, "00060": 38, "grave": 38, "diacriticaltild": 38, "002dc": 38, "022c4": 38, "diamondsuit": 38, "02666": 38, "differentiald": 38, "02146": 38, "digamma": 38, "003dd": 38, "div": [38, 494, 564], "divideontim": 38, "022c7": 38, "doteq": 38, "doteqdot": 38, "dotequ": 38, "dotminu": 38, "02238": 38, "dotplu": 38, "02214": 38, "dotsquar": 38, "022a1": 38, "doublebarwedg": 38, "02306": 38, "doublecontourintegr": 38, "0222f": 38, "surfac": [38, 222, 924, 992, 993, 1193, 1195], "doubledot": 38, "000a8": 38, "diaeresi": 38, "doubledownarrow": 38, "doubleleftarrow": 38, "021d0": 38, "doubleleftte": 38, "doublelongleftarrow": 38, "doublelongleftrightarrow": 38, "doublelongrightarrow": 38, "doublerightarrow": 38, "021d2": 38, "doublerightte": 38, "doubleuparrow": 38, "doubleupdownarrow": 38, "doubleverticalbar": 38, "downarrow": 38, "downarrowuparrow": 38, "downdownarrow": 38, "downharpoonleft": 38, "downharpoonright": 38, "downleftvector": 38, "downrightvector": 38, "downte": 38, "022a4": 38, "downteearrow": 38, "021a7": 38, "drbkarow": 38, "02208": 38, "emptyset": 38, "02205": 38, "eqcirc": 38, "eqcolon": 38, "eqsim": 38, "eqslantgtr": 38, "eqslantless": 38, "equaltild": 38, "equilibrium": 38, "02203": 38, "THERE": [38, 648], "02130": 38, "exponential": 38, "02147": 38, "fallingdotseq": 38, "foral": [38, 1138], "02200": 38, "FOR": [38, 201, 223, 230], "fouriertrf": 38, "02131": 38, "geq": 38, "02265": 38, "geqq": 38, "geqslant": 38, "ggg": 38, "gnapprox": 38, "02a8a": 38, "gneq": 38, "02a88": 38, "gneqq": 38, "02269": 38, "BUT": 38, "greaterequ": 38, "greaterequalless": 38, "greaterfullequ": 38, "greaterless": 38, "greaterslantequ": 38, "greatertild": 38, "gtrapprox": 38, "gtrdot": 38, "gtreqless": 38, "gtreqqless": 38, "gtrless": 38, "gtrsim": 38, "gvertneqq": 38, "hacek": 38, "002c7": 38, "caron": 38, "hbar": 38, "0210f": 38, "planck": 38, "constant": [38, 251, 259, 265, 268, 269, 270, 275, 278, 282, 320, 341, 426, 434, 435, 440, 450, 454, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 524, 587, 694, 745, 756, 783, 793, 795, 837, 839, 840], "pi": [38, 68, 80, 108, 126, 144, 147, 202, 206, 232, 262, 265, 306, 345, 403, 414, 416, 440, 467, 470, 488, 598, 601, 602, 657, 677, 758, 820, 840, 864, 868, 891, 896, 902, 905, 908, 984, 991, 993, 994, 1005, 1050, 1063, 1065, 1073, 1074, 1077, 1118], "heartsuit": 38, "02665": 38, "hilbertspac": 38, "0210b": 38, "h": [38, 42, 44, 99, 116, 122, 126, 135, 139, 140, 141, 142, 144, 192, 197, 213, 216, 218, 223, 229, 233, 238, 251, 252, 259, 262, 263, 270, 272, 282, 295, 306, 317, 352, 355, 364, 368, 374, 376, 419, 420, 422, 426, 428, 430, 438, 461, 462, 464, 470, 477, 485, 487, 491, 507, 508, 509, 510, 511, 512, 513, 515, 516, 528, 530, 531, 534, 535, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 549, 551, 554, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 585, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 600, 601, 602, 603, 604, 605, 606, 608, 610, 611, 612, 613, 615, 616, 617, 618, 619, 621, 627, 628, 630, 631, 634, 637, 639, 644, 645, 646, 647, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 722, 726, 732, 733, 734, 735, 736, 737, 738, 739, 748, 750, 753, 754, 755, 771, 772, 775, 786, 789, 792, 793, 797, 801, 802, 803, 804, 806, 815, 817, 819, 820, 824, 826, 828, 829, 830, 831, 834, 835, 836, 838, 846, 851, 855, 856, 858, 865, 867, 869, 871, 873, 875, 879, 881, 883, 892, 897, 900, 901, 904, 906, 907, 913, 925, 932, 945, 948, 970, 976, 986, 988, 992, 1008, 1010, 1011, 1012, 1014, 1015, 1017, 1018, 1019, 1020, 1021, 1024, 1026, 1029, 1043, 1046, 1050, 1052, 1054, 1055, 1059, 1060, 1062, 1063, 1064, 1065, 1071, 1075, 1078, 1079, 1081, 1124, 1139, 1216, 1223, 1228, 1230, 1233], "hksearow": 38, "hkswarow": 38, "hookleftarrow": 38, "hookrightarrow": 38, "hslash": 38, "humpdownhump": 38, "humpequ": 38, "iiiint": 38, "02a0c": 38, "quadrupl": 38, "iiint": 38, "0222d": 38, "02111": 38, "imaginaryi": 38, "02148": 38, "imaglin": 38, "02110": 38, "imagpart": 38, "impli": [38, 807, 1216], "02124": 38, "0222b": 38, "interc": 38, "022ba": 38, "intercal": 38, "intprod": 38, "02a3c": 38, "interior": 38, "invisiblecomma": 38, "02063": 38, "invis": [38, 570], "invisibletim": 38, "02062": 38, "langl": 38, "02329": 38, "laplacetrf": 38, "02112": 38, "lbrace": 38, "lbrack": 38, "leftanglebracket": 38, "leftarrow": 38, "leftarrowbar": 38, "021e4": 38, "leftarrowrightarrow": 38, "leftarrowtail": 38, "leftceil": 38, "02308": 38, "ceil": [38, 250, 263, 282, 352], "leftdoublebracket": 38, "0301a": 38, "leftdownvector": 38, "leftfloor": 38, "0230a": 38, "leftharpoondown": 38, "leftharpoonup": 38, "leftleftarrow": 38, "leftrightarrow": 38, "leftrightharpoon": 38, "leftrightsquigarrow": 38, "leftte": 38, "leftteearrow": 38, "021a4": 38, "leftthreetim": 38, "022cb": 38, "semidirect": 38, "lefttriangl": 38, "lefttriangleequ": 38, "leftupvector": 38, "leftvector": 38, "leq": 38, "02264": 38, "leqq": 38, "leqslant": 38, "lessapprox": 38, "lessdot": 38, "lesseqgtr": 38, "lesseqqgtr": 38, "lessequalgreat": 38, "lessfullequ": 38, "lessgreat": 38, "lessgtr": 38, "lesssim": 38, "lessslantequ": 38, "lesstild": 38, "llcorner": 38, "0231e": 38, "bottom": [38, 237, 341, 507, 585, 598, 885, 948, 967, 985, 1086], "corner": [38, 251, 314, 415, 427, 531, 534, 598, 815], "lleftarrow": 38, "lmoustach": 38, "023b0": 38, "upper": [38, 223, 246, 270, 272, 278, 288, 303, 310, 324, 346, 358, 382, 391, 415, 420, 424, 440, 464, 1047, 1149], "lower": [38, 192, 246, 259, 265, 270, 275, 278, 282, 288, 303, 324, 382, 391, 420, 424, 440, 464, 544, 688, 1048, 1056, 1106, 1212], "lnapprox": 38, "02a89": 38, "lneq": 38, "02a87": 38, "lneqq": 38, "02268": 38, "longleftarrow": 38, "longleftrightarrow": 38, "longmapsto": 38, "looparrowleft": 38, "looparrowright": 38, "lowerleftarrow": 38, "lowerrightarrow": 38, "025ca": 38, "lrcorner": 38, "0231f": 38, "lvertneqq": 38, "maltes": 38, "02720": 38, "mapsto": 38, "measuredangl": 38, "02221": 38, "measur": [38, 99, 131, 134, 144, 192, 282, 315, 319, 341, 351, 374, 490, 497, 563, 567, 589, 590, 591, 592, 593, 594, 595, 596, 600, 601, 642, 720, 824, 840, 846, 913, 923, 1014, 1055, 1080, 1193, 1195], "mellintrf": 38, "02133": 38, "minusplu": 38, "02213": 38, "napprox": 38, "02249": 38, "0266e": 38, "music": [38, 192, 320], "02115": 38, "nearrow": 38, "negativemediumspac": 38, "0200b": 38, "width": [38, 259, 265, 268, 269, 275, 278, 300, 308, 324, 420, 443, 552, 637, 661, 985, 1056, 1132, 1196, 1245, 1252], "negativethickspac": 38, "negativethinspac": 38, "negativeverythinspac": 38, "nestedgreatergreat": 38, "nestedlessless": 38, "nexist": 38, "02204": 38, "ngeq": 38, "02271": 38, "neither": [38, 210, 542, 569, 583, 754, 933, 935, 936, 1018, 1128], "nor": [38, 210, 266, 569, 583, 653, 754, 933, 935, 936, 985, 1005, 1018, 1128], "ngeqq": 38, "ngeqslant": 38, "ngtr": 38, "0226f": 38, "nleftarrow": 38, "nleftrightarrow": 38, "nleq": 38, "02270": 38, "nleqq": 38, "nleqslant": 38, "nless": 38, "0226e": 38, "nonbreakingspac": 38, "notcongru": 38, "02262": 38, "notdoubleverticalbar": 38, "02226": 38, "notel": 38, "02209": 38, "notequ": 38, "02260": 38, "notequaltild": 38, "notexist": 38, "notgreat": 38, "notgreaterequ": 38, "notgreaterfullequ": 38, "notgreatergreat": 38, "notgreaterless": 38, "02279": 38, "notgreaterslantequ": 38, "notgreatertild": 38, "02275": 38, "nothumpdownhump": 38, "notlefttriangl": 38, "022ea": 38, "notlefttriangleequ": 38, "022ec": 38, "notless": 38, "notlessequ": 38, "notlessgreat": 38, "02278": 38, "notlessless": 38, "notlessslantequ": 38, "notlesstild": 38, "02274": 38, "notpreced": 38, "02280": 38, "notprecedesequ": 38, "notprecedesslantequ": 38, "022e0": 38, "notreverseel": 38, "0220c": 38, "notrighttriangl": 38, "022eb": 38, "notrighttriangleequ": 38, "022ed": 38, "notsquaresubsetequ": 38, "022e2": 38, "notsquaresupersetequ": 38, "022e3": 38, "notsubset": 38, "020d2": 38, "notsubsetequ": 38, "02288": 38, "notsucce": 38, "02281": 38, "notsucceedsequ": 38, "notsucceedsslantequ": 38, "022e1": 38, "notsuperset": 38, "notsupersetequ": 38, "02289": 38, "nottild": 38, "02241": 38, "nottildeequ": 38, "02244": 38, "asymptot": 38, "nottildefullequ": 38, "02247": 38, "actual": [38, 42, 43, 48, 60, 192, 195, 200, 205, 222, 249, 259, 265, 268, 275, 278, 282, 309, 312, 314, 344, 400, 544, 554, 713, 720, 743, 801, 846, 985, 993, 1017, 1060, 1084, 1100, 1109, 1143, 1191, 1193, 1195, 1214, 1228], "nottildetild": 38, "notverticalbar": 38, "02224": 38, "nparallel": 38, "nprec": 38, "npreceq": 38, "nrightarrow": 38, "nshortmid": 38, "nshortparallel": 38, "nsimeq": 38, "nsubset": 38, "nsubseteq": 38, "nsubseteqq": 38, "nsucc": 38, "nsucceq": 38, "nsupset": 38, "nsupseteq": 38, "nsupseteqq": 38, "ntriangleleft": 38, "ntrianglelefteq": 38, "ntriangleright": 38, "ntrianglerighteq": 38, "nwarrow": 38, "oint": 38, "opencurlydoublequot": 38, "opencurlyquot": 38, "orderof": 38, "02134": 38, "partiald": 38, "02202": 38, "partial": [38, 116, 120, 316, 345, 865, 1192], "differenti": [38, 71, 737, 805, 887, 933, 992, 1118, 1187, 1201], "plusminu": 38, "poincareplan": 38, "0210c": 38, "prec": 38, "precapprox": 38, "preccurlyeq": 38, "precedesequ": 38, "precedesslantequ": 38, "precedestild": 38, "preceq": 38, "precnapprox": 38, "02ab9": 38, "precneqq": 38, "02ab5": 38, "precnsim": 38, "022e8": 38, "precsim": 38, "02119": 38, "propto": 38, "quaternion": 38, "0210d": 38, "questeq": 38, "rangl": 38, "0232a": 38, "0211a": 38, "q": [38, 126, 230, 282, 464, 470, 644, 662, 663, 677, 806, 925, 948, 980, 1055, 1216], "rbrace": 38, "rbrack": 38, "0211c": 38, "realin": 38, "0211b": 38, "realpart": 38, "real": [38, 75, 127, 133, 137, 139, 142, 143, 144, 181, 197, 200, 205, 208, 210, 226, 247, 260, 265, 266, 273, 275, 278, 282, 287, 290, 300, 308, 314, 323, 329, 341, 364, 372, 383, 444, 493, 500, 508, 532, 546, 563, 585, 593, 594, 595, 596, 597, 601, 643, 644, 649, 765, 780, 798, 801, 848, 887, 925, 926, 948, 985, 993, 1005, 1046, 1133, 1188, 1191, 1193, 1222, 1241, 1244], "0211d": 38, "reverseel": 38, "0220b": 38, "reverseequilibrium": 38, "reverseupequilibrium": 38, "rightanglebracket": 38, "rightarrowbar": 38, "021e5": 38, "rightarrowleftarrow": 38, "rightarrowtail": 38, "rightceil": 38, "02309": 38, "rightdoublebracket": 38, "0301b": 38, "rightdownvector": 38, "rightfloor": 38, "0230b": 38, "rightharpoondown": 38, "rightharpoonup": 38, "rightleftarrow": 38, "rightleftharpoon": 38, "rightrightarrow": 38, "rightsquigarrow": 38, "rightte": 38, "rightteearrow": 38, "rightthreetim": 38, "022cc": 38, "righttriangl": 38, "righttriangleequ": 38, "rightupvector": 38, "rightvector": 38, "risingdotseq": 38, "rmoustach": 38, "023b1": 38, "rrightarrow": 38, "searrow": 38, "setminu": 38, "shortdownarrow": 38, "shortleftarrow": 38, "shortmid": 38, "shortparallel": 38, "shortrightarrow": 38, "shortuparrow": 38, "simeq": 38, "02243": 38, "smallcircl": 38, "02218": 38, "smallsetminu": 38, "spadesuit": 38, "02660": 38, "sqrt": [38, 250, 263, 352, 644, 646, 654, 655, 663, 750, 765, 766, 767, 768, 769, 806], "0221a": 38, "sqsubset": 38, "sqsubseteq": 38, "sqsupset": 38, "sqsupseteq": 38, "025a1": 38, "squareintersect": 38, "02293": 38, "cap": [38, 262, 1145], "squaresubset": 38, "squaresubsetequ": 38, "squaresuperset": 38, "squaresupersetequ": 38, "squareunion": 38, "02294": 38, "cup": [38, 320, 358], "022c6": 38, "straightepsilon": 38, "003f5": 38, "straightphi": 38, "003d5": 38, "phi": 38, "subseteq": 38, "02286": 38, "subseteqq": 38, "subsetequ": 38, "subsetneq": 38, "0228a": 38, "subsetneqq": 38, "02acb": 38, "succ": 38, "succapprox": 38, "succcurlyeq": 38, "succeedsequ": 38, "succeedsslantequ": 38, "succeedstild": 38, "succeq": 38, "succnapprox": 38, "02aba": 38, "succneqq": 38, "02ab6": 38, "succnsim": 38, "022e9": 38, "succsim": 38, "suchthat": 38, "02211": 38, "summat": 38, "supersetequ": 38, "02287": 38, "supset": 38, "supseteq": 38, "supseteqq": 38, "supsetneq": 38, "0228b": 38, "supsetneqq": 38, "02acc": 38, "swarrow": 38, "therefor": [38, 180, 190], "02234": 38, "thickapprox": 38, "thicksim": 38, "thinspac": 38, "02009": 38, "tildeequ": 38, "tildefullequ": 38, "02245": 38, "tildetild": 38, "toea": 38, "tosa": 38, "025b5": 38, "triangledown": 38, "025bf": 38, "triangleleft": 38, "025c3": 38, "trianglelefteq": 38, "triangleq": 38, "triangleright": 38, "025b9": 38, "trianglerighteq": 38, "tripledot": 38, "020db": 38, "combin": [38, 67, 87, 110, 112, 113, 147, 159, 193, 211, 242, 298, 449, 460, 465, 482, 490, 541, 550, 562, 576, 590, 642, 677, 716, 795, 840, 869, 928, 930, 932, 948, 970, 981, 1018, 1019, 1021, 1068, 1069, 1122, 1137, 1154, 1207, 1241], "twoheadleftarrow": 38, "twoheadrightarrow": 38, "ulcorn": 38, "0231c": 38, "unionplu": 38, "0228e": 38, "multiset": 38, "uparrow": 38, "uparrowdownarrow": 38, "updownarrow": 38, "upequilibrium": 38, "upharpoonleft": 38, "upharpoonright": 38, "upperleftarrow": 38, "upperrightarrow": 38, "upsilon": 38, "003c5": 38, "upte": 38, "upteearrow": 38, "021a5": 38, "upuparrow": 38, "urcorn": 38, "0231d": 38, "varepsilon": 38, "003b5": 38, "varkappa": 38, "003f0": 38, "kappa": 38, "varnoth": 38, "varphi": 38, "003c6": 38, "varpi": 38, "003d6": 38, "varpropto": 38, "varrho": 38, "003f1": 38, "rho": 38, "varsigma": 38, "003c2": 38, "sigma": [38, 282], "varsubsetneq": 38, "variant": [38, 116, 120, 234, 250, 263, 293, 294, 295, 354, 373, 380, 420, 436, 507, 573, 637, 791, 795, 797, 821, 825, 828, 839, 840, 865, 1248, 1251], "varsubsetneqq": 38, "varsupsetneq": 38, "varsupsetneqq": 38, "vartheta": 38, "003d1": 38, "theta": 38, "vartriangleleft": 38, "vartriangleright": 38, "vee": 38, "02228": 38, "vert": 38, "02016": 38, "verticalbar": 38, "verticaltild": 38, "02240": 38, "wreath": 38, "verythinspac": 38, "0200a": 38, "hair": 38, "wedg": 38, "02227": 38, "wp": 38, "02118": 38, "wr": 38, "zeetrf": 38, "02128": 38, "restructured text": 39, "cheat sheet": 39, "restructur": [39, 528], "guid": [39, 152, 170, 195, 205, 226, 251, 417, 497, 517, 595, 748, 858, 873, 927], "author": [39, 193, 200, 278, 660, 860, 992, 1143, 1197], "overridden": [39, 443, 714, 782, 1221], "titl": [39, 40, 186, 196, 260, 273, 278, 287, 290, 323, 324, 329, 1103, 1188, 1193], "favorit": [39, 222, 226, 229, 247, 251, 273, 276, 383, 887, 994, 1046, 1111, 1188], "__": [39, 207, 209, 217, 324, 796, 800, 1107], "ref": [39, 126, 163, 166, 205, 294, 295, 743, 758, 802, 835], "uniqu": [39, 205, 252, 294, 295, 297, 374, 601, 620, 803, 815, 835, 837, 839, 840, 994, 1008, 1022, 1082, 1135, 1139, 1210], "across": [39, 43, 165, 190, 197, 207, 259, 265, 275, 278, 308, 317, 341, 415, 443, 463, 487, 513, 515, 519, 526, 542, 547, 566, 629, 806, 817, 838, 914, 915, 927, 945, 992, 994, 1014, 1022, 1056, 1118, 1129, 1197], "tree": [39, 42, 66, 102, 104, 126, 148, 152, 155, 180, 182, 191, 193, 196, 201, 205, 218, 219, 226, 250, 263, 266, 269, 273, 306, 334, 337, 349, 371, 374, 375, 376, 377, 378, 379, 473, 495, 500, 507, 514, 530, 537, 564, 599, 601, 698, 701, 840, 862, 865, 879, 889, 912, 914, 915, 917, 932, 948, 949, 956, 960, 962, 968, 977, 984, 993, 998, 1000, 1005, 1025, 1033, 1042, 1065, 1071, 1091, 1103, 1195, 1213, 1221, 1223], "_dummi": 39, "dummi": [39, 196, 403, 404, 867, 906, 1228], "One": [39, 43, 61, 62, 63, 78, 82, 84, 99, 108, 117, 125, 159, 190, 192, 201, 218, 229, 250, 268, 289, 290, 315, 368, 372, 374, 376, 383, 397, 408, 424, 464, 477, 486, 489, 498, 500, 505, 510, 536, 542, 601, 620, 628, 643, 662, 667, 677, 682, 748, 782, 807, 817, 887, 892, 918, 920, 921, 924, 932, 948, 992, 993, 994, 1018, 1030, 1035, 1046, 1047, 1055, 1060, 1098, 1122, 1196, 1197, 1201, 1206, 1243, 1257], "a_footnot": 39, "footer": 39, "block": [39, 65, 100, 112, 113, 159, 163, 166, 189, 190, 191, 192, 230, 232, 250, 257, 259, 263, 265, 275, 278, 287, 290, 299, 320, 323, 341, 382, 397, 402, 406, 420, 422, 440, 459, 465, 466, 472, 476, 479, 483, 491, 492, 494, 496, 501, 502, 518, 549, 649, 652, 726, 745, 771, 783, 802, 813, 814, 815, 816, 817, 837, 838, 839, 840, 873, 889, 899, 903, 917, 918, 920, 921, 922, 924, 925, 970, 984, 993, 1017, 1024, 1025, 1030, 1035, 1039, 1040, 1045, 1047, 1055, 1056, 1059, 1061, 1084, 1086, 1112, 1115, 1122, 1125, 1188], "rubric": 39, "nbsphinx": 40, "capabl": [40, 80, 190, 191, 197, 812, 887, 913, 977, 985, 993, 1046, 1214, 1244], "nice": [40, 65, 187, 190, 207, 230, 252, 317, 499, 500, 515, 532, 588, 655, 743, 906, 913, 987, 993, 1044, 1108, 1145, 1193, 1195, 1204, 1210, 1224], "few": [40, 127, 190, 191, 192, 193, 196, 197, 222, 226, 259, 418, 488, 518, 760, 887, 926, 1062, 1086, 1090, 1222, 1246], "keep": [40, 43, 112, 113, 191, 192, 205, 214, 226, 229, 233, 249, 282, 355, 383, 408, 432, 488, 494, 495, 514, 524, 724, 765, 879, 887, 892, 911, 927, 930, 986, 1038, 1075, 1078, 1098, 1115, 1193, 1194, 1241], "mind": [40, 132, 190, 191, 421, 809, 1115], "though": [40, 43, 45, 53, 70, 189, 190, 195, 197, 200, 201, 205, 206, 211, 218, 222, 226, 228, 229, 247, 250, 252, 263, 265, 266, 268, 273, 276, 290, 299, 308, 309, 312, 323, 344, 345, 374, 383, 424, 434, 443, 455, 460, 513, 519, 526, 542, 543, 544, 547, 556, 564, 566, 599, 600, 601, 620, 644, 646, 647, 651, 654, 657, 660, 661, 663, 664, 677, 678, 713, 720, 743, 751, 753, 756, 760, 765, 771, 788, 792, 797, 802, 803, 806, 813, 826, 828, 841, 842, 846, 865, 879, 918, 926, 927, 930, 933, 967, 981, 985, 992, 993, 994, 1004, 1012, 1014, 1041, 1046, 1048, 1050, 1056, 1084, 1086, 1087, 1090, 1095, 1097, 1104, 1106, 1114, 1118, 1131, 1157, 1188, 1195, 1196, 1209, 1216, 1217, 1221, 1223, 1241, 1244], "toplevel": [40, 44, 111, 126, 144, 218, 251, 300, 377, 508, 509, 510, 511, 513, 514, 515, 516, 524, 528, 532, 540, 585, 860, 888, 913, 1084, 1230], "begin": [40, 42, 43, 124, 128, 129, 130, 134, 136, 137, 143, 144, 168, 189, 190, 200, 228, 249, 250, 262, 265, 278, 282, 294, 295, 299, 316, 324, 345, 414, 420, 428, 440, 443, 464, 470, 487, 488, 490, 532, 547, 637, 647, 660, 673, 675, 677, 678, 679, 681, 682, 684, 685, 686, 688, 689, 690, 691, 695, 698, 709, 743, 758, 771, 774, 778, 785, 791, 792, 795, 809, 840, 913, 948, 972, 980, 1006, 1014, 1091, 1115, 1137, 1188, 1222], "deeper": [40, 191, 222, 309, 312, 535, 1041], "trail": [40, 194, 278, 320, 324, 342, 388, 389], "underscor": [40, 437, 1087, 1094, 1107, 1117], "ipynb": [40, 209, 229, 239, 241, 278, 288, 309, 313, 319, 323, 329, 334, 337, 341, 345, 351, 352, 357, 363, 367, 1190, 1194], "labels_": [40, 211, 213, 368], "result": [40, 80, 127, 132, 143, 183, 192, 201, 207, 209, 229, 233, 249, 259, 265, 268, 275, 278, 282, 291, 300, 320, 324, 427, 443, 478, 485, 487, 488, 494, 524, 544, 569, 573, 660, 688, 750, 756, 765, 793, 858, 1004, 1050, 1079, 1091, 1106, 1120, 1126, 1138, 1196], "cluster": [40, 213, 368, 1190, 1195], "membership": [40, 211, 228, 229, 271, 556, 1119, 1136], "sequenc": [40, 108, 111, 116, 120, 183, 210, 211, 213, 223, 229, 250, 252, 261, 263, 264, 265, 268, 271, 275, 278, 282, 300, 315, 317, 324, 330, 369, 419, 473, 544, 590, 605, 606, 607, 642, 687, 706, 710, 727, 740, 748, 795, 840, 1047, 1091, 1092, 1093, 1109, 1118, 1119, 1124, 1126, 1129, 1133, 1134, 1158, 1170, 1201, 1244], "bring": [40, 45, 124, 132, 144, 171, 183, 190, 192, 200, 201, 222, 226, 229, 232, 268, 306, 309, 312, 315, 317, 341, 344, 405, 410, 411, 415, 620, 659, 698, 722, 734, 742, 883, 887, 899, 992, 993, 994, 1063, 1111, 1160, 1183, 1201, 1241, 1244], "bigplan": [40, 213, 1190], "686": [40, 211, 265, 368, 1077], "unknown": [40, 308, 506, 825, 843, 993, 1100], "cmd": [40, 196, 881, 906, 1223], "color": [40, 195, 213, 368, 970, 1190, 1216], "tmp": [40, 152, 168, 171, 186, 191, 193, 196, 233, 246, 249, 265, 270, 278, 282, 285, 288, 290, 295, 297, 300, 303, 310, 320, 324, 330, 346, 352, 358, 364, 368, 429, 471, 494, 507, 520, 526, 532, 537, 538, 601, 602, 800, 865, 887, 909, 913, 918, 928, 932, 933, 946, 947, 948, 950, 952, 953, 955, 957, 960, 967, 970, 971, 976, 997, 1004, 1015, 1016, 1018, 1019, 1021, 1046, 1052, 1065, 1086, 1137, 1144, 1200, 1222, 1223], "craft": [41, 46, 47, 51, 53, 55, 56, 276, 318, 319, 373, 504, 569, 807, 840, 841], "tar": [42, 60, 66, 111, 126, 152, 177, 186, 201, 230, 232, 296, 305, 306, 326, 327, 370, 371, 500, 840, 887, 909, 910, 912, 917, 984, 1015, 1071, 1073, 1074, 1075, 1077, 1078, 1084, 1143, 1223, 1247], "xz": [42, 60, 66, 152, 193, 201, 306, 493, 1015, 1071, 1075, 1077, 1078], "push": [42, 79, 168, 194, 196, 205, 208, 251, 266, 276, 333, 349, 375, 378, 403, 465, 516, 517, 523, 524, 533, 542, 566, 676, 679, 815, 840, 887, 1030, 1048, 1163, 1167, 1221], "cmakelist": [42, 44, 124, 126, 131, 144, 216, 217, 218, 219, 220, 251, 268, 374, 376, 377, 508, 509, 510, 511, 513, 514, 516, 524, 526, 528, 532, 534, 535, 537, 538, 539, 540, 585, 598, 599, 600, 601, 602, 621, 624, 627, 628, 630, 633, 636, 639, 734, 1051, 1054, 1058, 1063, 1064, 1227, 1230, 1232], "src": [42, 190, 191, 193, 251, 265, 295, 297, 303, 403, 432, 444, 494, 513, 528, 530, 531, 540, 549, 585, 588, 598, 599, 600, 601, 603, 662, 679, 801, 802, 913, 932, 976, 1137, 1143, 1221], "load": [42, 43, 53, 56, 62, 77, 90, 189, 200, 201, 208, 209, 213, 229, 237, 238, 254, 255, 259, 265, 275, 278, 282, 285, 291, 300, 317, 318, 319, 335, 338, 340, 341, 358, 368, 374, 480, 500, 537, 816, 839, 840, 843, 844, 846, 847, 849, 852, 854, 855, 857, 862, 864, 867, 868, 872, 878, 881, 883, 884, 887, 889, 891, 896, 899, 902, 905, 908, 924, 984, 993, 994, 1025, 1033, 1039, 1079, 1080, 1188, 1206, 1246, 1255, 1257], "store": [42, 57, 62, 77, 90, 108, 131, 135, 189, 191, 208, 210, 218, 219, 249, 252, 259, 317, 318, 319, 340, 341, 374, 428, 480, 519, 526, 544, 727, 771, 785, 788, 795, 816, 824, 826, 830, 839, 840, 853, 887, 927, 940, 984, 1001, 1025, 1033, 1039, 1063, 1082, 1086, 1087, 1091, 1135, 1166, 1200, 1216, 1257], "search": [42, 51, 53, 108, 162, 171, 183, 185, 186, 190, 211, 214, 220, 222, 228, 229, 238, 249, 250, 252, 255, 259, 262, 263, 265, 268, 269, 270, 273, 275, 278, 291, 300, 303, 307, 310, 315, 320, 324, 330, 332, 348, 352, 358, 364, 464, 491, 494, 506, 590, 601, 603, 607, 642, 687, 692, 706, 710, 726, 728, 740, 840, 865, 930, 948, 980, 1041, 1063, 1077, 1094, 1123, 1194, 1221, 1243], "payload": [42, 848, 875, 986, 988], "primari": [42, 190, 201, 222, 308, 309, 312, 498, 885, 914, 915, 923, 925, 1166], "insert": [42, 62, 65, 111, 124, 184, 189, 205, 209, 226, 228, 233, 263, 265, 268, 270, 272, 278, 282, 285, 303, 324, 330, 342, 358, 368, 397, 461, 478, 482, 498, 545, 551, 573, 579, 590, 607, 608, 609, 620, 637, 642, 678, 679, 692, 702, 703, 728, 736, 737, 738, 740, 747, 754, 756, 771, 792, 836, 838, 840, 865, 871, 881, 883, 887, 948, 992, 1005, 1036, 1046, 1119, 1134, 1135, 1144, 1200, 1221], "const": [42, 58, 72, 99, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 122, 123, 125, 126, 131, 144, 217, 252, 268, 315, 317, 354, 373, 374, 380, 432, 440, 444, 462, 464, 470, 478, 490, 492, 494, 496, 501, 502, 507, 528, 530, 534, 543, 544, 545, 546, 547, 549, 551, 566, 567, 573, 574, 575, 578, 579, 580, 582, 583, 584, 590, 594, 598, 600, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 615, 616, 618, 619, 620, 628, 633, 635, 637, 642, 644, 645, 646, 647, 649, 651, 652, 658, 659, 660, 661, 662, 663, 664, 665, 667, 670, 677, 681, 683, 684, 685, 686, 699, 702, 703, 713, 716, 717, 720, 722, 724, 726, 728, 729, 732, 733, 735, 736, 737, 738, 739, 740, 747, 749, 750, 751, 752, 753, 754, 755, 756, 765, 766, 767, 768, 769, 771, 773, 774, 777, 778, 779, 780, 781, 783, 785, 786, 787, 788, 790, 791, 793, 795, 799, 801, 802, 803, 804, 805, 808, 816, 817, 826, 830, 834, 835, 836, 837, 838, 839, 840, 843, 846, 851, 867, 869, 873, 881, 883, 897, 901, 907, 1006, 1014, 1018, 1019, 1020, 1021, 1024, 1026, 1029, 1031, 1033, 1035, 1043, 1049, 1052, 1055, 1056, 1060, 1081, 1099, 1176, 1199, 1233, 1239, 1240], "care": [42, 46, 48, 82, 144, 189, 190, 192, 195, 197, 222, 230, 262, 388, 420, 443, 452, 454, 470, 494, 495, 540, 569, 570, 645, 659, 677, 720, 726, 792, 793, 797, 806, 819, 830, 831, 834, 841, 865, 877, 879, 887, 892, 913, 914, 915, 993, 1001, 1005, 1017, 1030, 1038, 1064, 1087, 1111, 1115, 1127, 1134, 1137, 1138, 1145, 1168, 1192, 1200, 1213, 1223], "dump": [42, 190, 209, 238, 254, 255, 265, 278, 282, 285, 291, 300, 335, 338, 341, 549, 568, 569, 652, 657, 781, 801, 926, 1059, 1060], "db": [42, 50, 200, 226, 251, 252, 253, 257, 263, 276, 291, 513, 516, 544, 545, 551, 573, 579, 735, 736, 737, 738, 739, 807, 1144], "pull": [42, 44, 50, 62, 65, 79, 126, 127, 143, 194, 205, 242, 251, 252, 266, 372, 374, 382, 405, 506, 513, 514, 516, 542, 659, 743, 860, 887, 1091, 1094, 1212], "paramet": [42, 58, 62, 112, 113, 114, 115, 116, 117, 118, 121, 125, 131, 139, 189, 192, 197, 207, 210, 217, 218, 222, 227, 228, 229, 231, 233, 241, 242, 246, 249, 250, 251, 252, 259, 263, 265, 268, 269, 271, 274, 275, 278, 285, 288, 309, 310, 312, 314, 359, 376, 379, 383, 388, 397, 419, 428, 430, 434, 445, 449, 464, 465, 470, 472, 473, 476, 479, 483, 484, 490, 492, 496, 501, 502, 505, 513, 534, 537, 588, 598, 604, 620, 634, 644, 646, 649, 653, 656, 657, 660, 664, 669, 670, 724, 726, 731, 745, 748, 755, 771, 783, 785, 790, 803, 815, 825, 837, 839, 840, 845, 846, 853, 867, 890, 895, 900, 903, 906, 907, 928, 930, 993, 1008, 1031, 1041, 1056, 1064, 1078, 1082, 1087, 1101, 1104, 1109, 1116, 1132, 1139, 1145, 1155, 1161, 1163, 1167, 1173, 1182, 1193, 1196, 1199, 1206, 1209, 1210, 1212, 1237, 1238], "entri": [42, 132, 187, 191, 192, 196, 254, 265, 376, 379, 419, 531, 555, 698, 700, 720, 875, 913, 927, 931, 932, 933, 970, 976, 1008, 1014, 1028, 1080, 1087, 1135, 1199, 1230], "o_creat": [42, 151, 840, 984, 1014, 1015, 1019, 1023, 1025, 1042, 1055], "o_trunc": [42, 48, 1014], "o_wronli": [42, 151, 840, 984, 1014, 1015, 1017, 1018, 1019, 1023, 1024, 1025, 1026, 1029, 1042, 1055], "0666": [42, 947, 1018, 1019, 1055], "assert": [42, 46, 226, 250, 263, 275, 278, 292, 308, 341, 343, 506, 549, 691, 733, 736, 738, 744, 817, 1012, 1024, 1026, 1029, 1055, 1059, 1060, 1099, 1176, 1183, 1184, 1185, 1221, 1227, 1228, 1230, 1238], "ing": [42, 1020], "mode": [42, 103, 126, 149, 193, 205, 207, 242, 250, 259, 262, 263, 265, 275, 278, 282, 285, 303, 306, 310, 324, 327, 341, 358, 370, 371, 494, 528, 590, 642, 816, 839, 840, 846, 879, 885, 913, 914, 915, 917, 920, 921, 922, 925, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 948, 984, 987, 994, 1008, 1013, 1014, 1015, 1023, 1025, 1039, 1042, 1045, 1047, 1055, 1056, 1112, 1114, 1216], "binaryus": 42, "hton": [42, 1011], "arpa": [42, 1011], "inet": [42, 207, 1011], "again": [42, 65, 101, 126, 148, 189, 190, 192, 195, 197, 201, 205, 206, 218, 222, 226, 228, 229, 230, 242, 251, 276, 281, 290, 296, 299, 305, 306, 323, 326, 329, 345, 370, 397, 398, 399, 402, 403, 408, 415, 416, 465, 506, 513, 515, 548, 552, 562, 590, 591, 592, 593, 594, 595, 596, 597, 599, 600, 601, 602, 637, 642, 644, 646, 659, 660, 664, 674, 754, 765, 807, 815, 816, 835, 838, 839, 840, 907, 910, 914, 915, 916, 917, 920, 921, 922, 929, 932, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 978, 984, 994, 1001, 1004, 1007, 1009, 1011, 1012, 1013, 1015, 1020, 1023, 1025, 1026, 1035, 1039, 1041, 1042, 1045, 1047, 1056, 1064, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1084, 1104, 1109, 1127, 1132, 1137, 1188, 1206, 1209, 1241], "od": [42, 278], "hardwir": [42, 62, 355, 848, 1010, 1104], "enter": [42, 112, 113, 135, 159, 223, 230, 259, 264, 265, 275, 278, 287, 288, 290, 291, 308, 341, 342, 382, 397, 402, 422, 637, 660, 719, 726, 754, 760, 771, 803, 865, 887, 903, 920, 921, 944, 1046, 1047, 1122, 1175], "joerg": [42, 50, 168, 209, 223, 224, 226, 227, 229, 231, 238, 242, 246, 249, 255, 262, 265, 268, 270, 272, 275, 278, 282, 285, 288, 291, 300, 303, 310, 317, 319, 320, 324, 330, 335, 342, 346, 352, 358, 364, 368, 391, 394, 489, 510, 525, 544, 551, 585, 601, 603, 619, 657, 691, 703, 722, 726, 733, 734, 735, 736, 738, 755, 914, 915, 923, 925, 930, 944, 960, 973, 979, 1004, 1041, 1100, 1101, 1103, 1104, 1105, 1107, 1108, 1116, 1138, 1143, 1166, 1183, 1196, 1205, 1206, 1207, 1209, 1210, 1211, 1212], "huber": [42, 272, 278, 1196], "caro": [42, 262, 272, 275, 282, 285, 288, 291, 300, 303, 310, 324, 342, 352, 368, 544, 551, 603, 619, 691, 703, 736, 738, 1103, 1105, 1125, 1177, 1179, 1183, 1185, 1205, 1206, 1207, 1209, 1210, 1211, 1212], "johanna": [42, 262, 272, 275, 282, 285, 303, 310, 324, 342, 352, 368, 544, 603, 619, 691, 703, 1125, 1177, 1179, 1183, 1185, 1205, 1206, 1207, 1209, 1210, 1211, 1212], "bodi": [42, 50, 55, 112, 113, 196, 373, 419, 420, 422, 426, 455, 465, 494, 522, 604, 637, 646, 647, 651, 654, 724, 743, 744, 747, 806, 1091, 1222], "compil": [42, 43, 105, 106, 110, 112, 113, 116, 119, 126, 148, 149, 150, 159, 191, 192, 201, 210, 217, 218, 219, 238, 252, 255, 268, 275, 291, 300, 303, 306, 307, 315, 324, 330, 332, 348, 352, 355, 358, 364, 374, 375, 378, 405, 417, 430, 439, 440, 449, 452, 454, 461, 462, 471, 473, 480, 483, 486, 487, 488, 489, 490, 492, 493, 494, 496, 497, 498, 499, 501, 502, 506, 509, 514, 516, 528, 531, 538, 540, 542, 548, 562, 564, 569, 570, 583, 584, 590, 591, 592, 593, 594, 595, 596, 597, 599, 600, 601, 628, 634, 637, 642, 644, 647, 649, 653, 655, 659, 670, 698, 717, 724, 730, 732, 743, 744, 745, 746, 748, 750, 751, 753, 754, 756, 758, 760, 765, 768, 771, 780, 781, 783, 789, 792, 793, 795, 797, 801, 802, 837, 839, 840, 855, 856, 871, 984, 992, 1063, 1064, 1067, 1068, 1069, 1070, 1071, 1073, 1087, 1112, 1117, 1129, 1131, 1228, 1230, 1238, 1239, 1241, 1242, 1243, 1254], "still": [42, 54, 60, 155, 178, 184, 189, 190, 191, 192, 200, 201, 210, 211, 212, 252, 262, 268, 306, 308, 388, 408, 417, 468, 480, 506, 509, 514, 518, 535, 588, 610, 631, 634, 652, 653, 674, 680, 713, 729, 754, 771, 788, 792, 797, 801, 802, 804, 805, 806, 850, 855, 887, 890, 931, 945, 967, 992, 993, 994, 1044, 1046, 1048, 1059, 1082, 1090, 1093, 1099, 1112, 1115, 1118, 1143, 1179, 1202, 1210, 1230, 1238], "funni": [42, 44, 50, 102, 126, 148, 222, 306, 371, 547, 840, 917, 956, 962, 968, 984, 1063], "temp": [42, 44, 278, 406, 801, 802, 803], "got": [42, 45, 190, 200, 252, 324, 346, 358, 464, 757, 1014, 1088], "overwritten": [42, 47, 53, 55, 56, 679, 840, 1015, 1094], "suspect": [42, 192, 194], "inmem": 42, "loos": [42, 43, 226, 242, 418, 443, 490, 877], "foolishli": 42, "main": [42, 50, 62, 65, 66, 109, 116, 122, 123, 135, 147, 148, 152, 155, 183, 192, 195, 196, 201, 229, 251, 263, 275, 276, 278, 295, 306, 314, 317, 319, 332, 334, 337, 341, 348, 349, 374, 375, 376, 377, 378, 379, 397, 417, 419, 420, 422, 426, 428, 430, 431, 445, 460, 461, 462, 464, 468, 480, 487, 491, 494, 495, 498, 500, 506, 507, 517, 525, 534, 535, 538, 549, 563, 568, 569, 570, 585, 586, 588, 596, 598, 600, 601, 620, 628, 631, 634, 648, 652, 653, 655, 657, 659, 660, 662, 672, 673, 674, 675, 676, 679, 680, 681, 682, 683, 685, 686, 689, 690, 691, 695, 699, 700, 701, 702, 703, 709, 713, 714, 717, 719, 720, 727, 732, 733, 734, 735, 736, 737, 738, 739, 743, 748, 758, 761, 762, 763, 766, 767, 768, 769, 771, 772, 773, 775, 776, 777, 778, 779, 780, 781, 785, 787, 788, 790, 793, 795, 801, 802, 804, 805, 806, 807, 810, 815, 817, 838, 848, 855, 856, 858, 887, 925, 927, 945, 992, 994, 995, 1008, 1010, 1011, 1012, 1018, 1019, 1020, 1021, 1026, 1029, 1030, 1032, 1036, 1041, 1043, 1046, 1047, 1052, 1055, 1056, 1059, 1062, 1065, 1071, 1075, 1081, 1095, 1098, 1113, 1178, 1180, 1228, 1233, 1246], "chang": [42, 45, 65, 79, 82, 126, 128, 135, 142, 143, 189, 192, 194, 195, 196, 197, 200, 201, 205, 213, 226, 242, 251, 282, 290, 404, 443, 480, 482, 486, 489, 490, 494, 504, 534, 542, 587, 593, 598, 599, 601, 602, 653, 678, 736, 790, 815, 822, 838, 860, 865, 913, 923, 925, 927, 945, 954, 957, 972, 985, 987, 992, 993, 1004, 1008, 1029, 1059, 1062, 1078, 1094, 1118, 1127, 1167, 1178, 1180, 1183, 1206, 1210, 1224, 1241], "errorhandl": 42, "just": [42, 46, 62, 67, 71, 86, 110, 133, 134, 139, 152, 180, 189, 190, 191, 192, 193, 194, 196, 197, 201, 205, 212, 214, 218, 222, 229, 252, 263, 266, 291, 332, 341, 348, 372, 374, 385, 426, 445, 470, 473, 482, 500, 504, 514, 518, 522, 524, 525, 531, 535, 544, 585, 588, 598, 600, 601, 602, 625, 644, 645, 646, 652, 655, 656, 657, 660, 679, 707, 714, 720, 724, 729, 743, 750, 754, 756, 757, 771, 786, 789, 803, 805, 807, 820, 824, 838, 845, 850, 858, 860, 867, 871, 877, 879, 887, 903, 927, 948, 951, 952, 981, 985, 993, 994, 1009, 1011, 1012, 1018, 1019, 1021, 1030, 1031, 1041, 1048, 1056, 1075, 1079, 1082, 1085, 1086, 1089, 1091, 1109, 1110, 1116, 1117, 1118, 1125, 1129, 1137, 1138, 1193, 1194, 1201, 1206, 1207, 1211, 1212, 1217, 1221, 1233, 1243], "silent": [42, 272, 282, 747, 992], "truncat": [42, 278, 324, 420, 441, 563, 930, 1014, 1137], "faschingb": 42, "echo": [42, 152, 191, 242, 278, 306, 383, 526, 601, 727, 860, 869, 887, 914, 915, 918, 919, 928, 932, 942, 951, 954, 958, 967, 985, 987, 992, 993, 994, 995, 1015, 1017, 1026, 1028, 1029, 1041, 1044, 1050, 1059, 1223], "success": [42, 219, 259, 265, 275, 278, 481, 513, 516, 726, 760, 813, 865, 869, 960, 1154], "failur": [42, 43, 259, 265, 275, 278, 290, 295, 324, 382, 490, 500, 506, 532, 598, 602, 726, 1221, 1222, 1229, 1230, 1233], "renam": [42, 50, 57, 62, 101, 124, 126, 148, 174, 183, 249, 296, 305, 306, 326, 327, 370, 371, 637, 790, 840, 855, 856, 917, 955, 968, 984, 1081, 1200], "most": [43, 44, 57, 61, 63, 89, 122, 124, 186, 189, 190, 192, 193, 196, 201, 212, 214, 220, 222, 226, 228, 250, 259, 262, 265, 266, 275, 276, 278, 282, 288, 308, 310, 324, 344, 345, 346, 382, 418, 426, 455, 458, 465, 480, 482, 488, 493, 494, 498, 499, 513, 518, 535, 543, 556, 599, 659, 660, 698, 751, 795, 800, 803, 809, 825, 865, 873, 887, 892, 912, 914, 915, 918, 926, 950, 981, 985, 992, 994, 1006, 1014, 1020, 1033, 1048, 1056, 1059, 1060, 1062, 1084, 1085, 1086, 1091, 1098, 1099, 1100, 1106, 1107, 1115, 1117, 1118, 1119, 1122, 1125, 1128, 1129, 1133, 1135, 1138, 1139, 1145, 1187, 1188, 1197, 1201, 1205, 1209, 1210, 1215, 1217, 1221, 1222, 1228, 1243, 1244, 1246], "somebodi": [43, 197, 205, 218, 252, 432, 489, 516, 628, 652, 704, 765, 771, 782, 813, 877, 895, 1050], "concis": [43, 189, 222, 226, 276, 345, 398, 399, 535, 887, 1188], "longer": [43, 205, 524, 526, 1050, 1112, 1241], "necessari": [43, 60, 143, 183, 191, 197, 201, 210, 219, 233, 249, 252, 309, 312, 344, 345, 422, 432, 464, 504, 506, 516, 542, 588, 647, 651, 719, 746, 747, 781, 791, 803, 815, 883, 887, 923, 992, 994, 995, 1010, 1048, 1059, 1080, 1107, 1114, 1118, 1143, 1200, 1221], "gosh": [43, 186, 443, 488, 490, 704, 788, 1038, 1084, 1085, 1091, 1118], "hungarian": [43, 484], "notat": [43, 217, 257, 273, 278, 283, 324, 484, 818, 993, 1100], "userdb": [43, 47, 48, 51, 53, 54, 56, 57, 252, 254, 268, 276, 323, 334, 337, 728, 736, 737, 738, 740, 840, 1177, 1178, 1179, 1180, 1185], "bolt": [43, 252], "onto": [43, 61, 63, 124, 132, 135, 200, 211, 252, 268, 341, 566, 648, 725, 740, 803, 840, 887, 973, 985, 993, 1012, 1044, 1067, 1075], "unclear": [43, 165, 372, 591, 1060], "semant": [43, 49, 83, 190, 214, 294, 295, 297, 315, 354, 373, 475, 489, 490, 564, 645, 698, 704, 744, 751, 783, 799, 802, 803, 804, 805, 808, 816, 837, 839, 840, 846, 851, 879, 1059, 1060, 1118, 1197, 1241], "backingstor": [43, 53, 56, 840], "mangl": [43, 249, 250, 263, 280, 1112], "prefix": [43, 60, 66, 186, 201, 259, 263, 265, 275, 278, 324, 390, 522, 656, 686, 743, 887, 1075, 1077, 1084, 1106, 1107, 1132, 1139, 1223], "m_": 43, "enough": [43, 193, 197, 214, 222, 272, 282, 315, 324, 372, 408, 432, 543, 719, 992, 1005, 1033, 1063, 1086, 1103, 1111, 1132, 1201, 1206, 1213, 1215, 1222, 1243], "take": [43, 48, 88, 104, 112, 113, 127, 132, 134, 183, 184, 189, 190, 191, 194, 195, 196, 197, 200, 205, 207, 210, 211, 213, 218, 222, 223, 228, 229, 230, 250, 263, 268, 270, 278, 282, 288, 312, 351, 382, 383, 388, 397, 427, 464, 467, 484, 486, 493, 495, 499, 500, 504, 505, 519, 522, 534, 542, 543, 566, 567, 569, 570, 588, 598, 601, 614, 620, 634, 646, 653, 657, 660, 662, 700, 724, 726, 743, 748, 755, 756, 765, 793, 795, 801, 805, 815, 830, 831, 850, 877, 887, 913, 914, 915, 992, 1022, 1050, 1075, 1081, 1085, 1089, 1111, 1127, 1128, 1145, 1152, 1155, 1157, 1161, 1162, 1163, 1166, 1167, 1168, 1170, 1172, 1182, 1187, 1195, 1196, 1201, 1206, 1216, 1223], "dogmat": [43, 268, 415, 1201], "switch": [43, 45, 54, 58, 61, 63, 112, 113, 121, 124, 126, 127, 128, 129, 130, 134, 135, 136, 139, 159, 191, 195, 197, 209, 210, 251, 259, 265, 275, 276, 278, 355, 383, 384, 386, 403, 406, 409, 439, 453, 457, 459, 466, 472, 476, 479, 481, 483, 492, 496, 499, 501, 502, 506, 528, 530, 535, 542, 556, 590, 591, 592, 642, 703, 744, 745, 783, 826, 828, 837, 839, 840, 867, 885, 892, 901, 904, 906, 920, 921, 925, 985, 988, 1046, 1080, 1238, 1242], "bool": [43, 50, 53, 55, 56, 121, 137, 143, 233, 240, 262, 265, 268, 270, 272, 275, 278, 285, 288, 303, 307, 308, 310, 314, 324, 352, 358, 508, 510, 524, 603, 604, 608, 610, 615, 644, 646, 660, 661, 662, 663, 664, 682, 685, 691, 700, 748, 760, 761, 762, 763, 771, 774, 778, 785, 815, 817, 820, 840, 900, 907, 1046, 1052, 1059, 1118, 1145, 1207, 1212], "wear": [43, 187, 191], "incorrect": [43, 259, 265, 275, 278, 282, 443, 462, 522, 1213], "metaphor": 43, "But": [43, 151, 190, 191, 192, 195, 206, 242, 251, 341, 426, 432, 461, 464, 470, 473, 486, 488, 494, 504, 513, 524, 643, 644, 652, 657, 658, 659, 677, 695, 713, 714, 753, 756, 792, 801, 805, 807, 825, 839, 840, 869, 871, 887, 897, 914, 915, 970, 984, 992, 993, 994, 1001, 1015, 1023, 1025, 1030, 1038, 1042, 1065, 1080, 1082, 1103, 1106, 1112, 1193, 1196, 1207], "support": [43, 80, 132, 191, 193, 197, 201, 210, 214, 226, 238, 240, 259, 262, 265, 270, 272, 275, 278, 282, 285, 300, 303, 310, 342, 352, 358, 364, 393, 462, 486, 500, 506, 524, 643, 644, 646, 751, 803, 807, 824, 834, 838, 843, 879, 970, 992, 993, 994, 1004, 1056, 1062, 1091, 1099, 1106, 1112, 1129, 1143, 1193, 1195, 1210, 1228], "copy_process": 43, "law": [43, 242, 394, 437, 482, 1086, 1212], "tdd": [43, 126, 221, 226, 236, 276, 318, 334, 337, 341, 355, 416, 1221], "until": [43, 55, 99, 100, 101, 104, 107, 112, 113, 126, 131, 139, 143, 147, 152, 159, 162, 178, 180, 190, 192, 194, 196, 241, 250, 262, 281, 299, 319, 345, 374, 454, 460, 485, 488, 602, 662, 726, 727, 771, 777, 815, 817, 855, 875, 885, 895, 897, 903, 920, 921, 925, 932, 948, 960, 967, 1009, 1010, 1011, 1012, 1035, 1049, 1056, 1060, 1090, 1091, 1112, 1120, 1122, 1188], "fail": [43, 44, 151, 152, 171, 186, 190, 192, 200, 201, 205, 217, 222, 252, 278, 295, 327, 382, 408, 513, 516, 524, 532, 534, 544, 549, 551, 598, 722, 730, 751, 753, 760, 765, 838, 840, 865, 887, 967, 984, 994, 1015, 1020, 1023, 1025, 1040, 1041, 1042, 1059, 1080, 1084, 1086, 1095, 1137, 1154, 1210, 1222, 1223, 1227, 1229, 1231], "suffici": [43, 128, 205, 210, 222, 383, 651, 679, 720, 724, 736, 744, 825, 860, 970, 1060, 1109, 1111, 1139, 1222], "pass": [43, 44, 48, 55, 57, 58, 62, 112, 113, 114, 115, 117, 118, 121, 125, 210, 218, 222, 227, 228, 229, 231, 238, 249, 251, 255, 259, 265, 268, 270, 272, 275, 278, 282, 285, 288, 290, 291, 295, 300, 303, 308, 309, 312, 320, 324, 342, 364, 368, 382, 408, 428, 430, 432, 443, 464, 468, 471, 473, 490, 518, 519, 528, 532, 542, 547, 549, 588, 598, 599, 600, 601, 603, 604, 644, 654, 655, 661, 662, 663, 664, 673, 724, 726, 731, 755, 785, 793, 798, 802, 805, 834, 835, 836, 853, 890, 932, 992, 1018, 1021, 1032, 1041, 1064, 1082, 1084, 1085, 1086, 1087, 1099, 1100, 1101, 1103, 1109, 1127, 1129, 1137, 1139, 1176, 1205, 1221, 1228], "current": [43, 101, 111, 126, 131, 148, 165, 176, 178, 191, 192, 193, 195, 197, 200, 201, 205, 230, 252, 259, 265, 275, 278, 296, 303, 305, 306, 324, 326, 327, 370, 371, 389, 408, 411, 416, 465, 498, 506, 520, 542, 544, 548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 599, 600, 642, 726, 733, 737, 802, 803, 816, 825, 839, 840, 856, 887, 895, 909, 913, 914, 915, 916, 917, 920, 921, 922, 923, 925, 931, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 948, 949, 952, 953, 954, 955, 956, 957, 958, 959, 960, 962, 963, 964, 965, 966, 968, 970, 972, 984, 993, 1007, 1013, 1014, 1015, 1023, 1025, 1030, 1032, 1039, 1042, 1045, 1046, 1047, 1064, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1080, 1085, 1090, 1111, 1114, 1122, 1125, 1247], "initi": [43, 45, 62, 112, 113, 116, 120, 124, 126, 137, 168, 189, 190, 193, 197, 205, 207, 217, 222, 226, 231, 237, 246, 250, 251, 261, 262, 263, 278, 282, 285, 288, 293, 303, 310, 315, 317, 320, 324, 337, 346, 352, 358, 364, 372, 380, 420, 422, 429, 473, 478, 488, 492, 496, 498, 501, 502, 544, 546, 564, 569, 570, 583, 584, 588, 590, 591, 592, 593, 594, 595, 598, 620, 634, 637, 642, 646, 647, 648, 650, 655, 657, 659, 661, 663, 678, 679, 680, 685, 698, 703, 724, 726, 730, 732, 733, 734, 739, 740, 754, 765, 783, 791, 802, 803, 805, 817, 837, 839, 840, 845, 848, 850, 851, 858, 865, 873, 883, 887, 914, 915, 924, 949, 979, 993, 994, 1009, 1012, 1030, 1033, 1046, 1055, 1056, 1062, 1098, 1101, 1131, 1193, 1197, 1241, 1246], "mess": [43, 190, 276, 295, 297, 352, 354, 355, 373, 380, 745, 783, 839, 840, 1118, 1131, 1222], "roughli": [43, 192, 197, 341, 493, 912, 1046, 1055], "took": [43, 189, 196, 226, 1153], "our": [43, 53, 61, 63, 72, 79, 106, 125, 126, 137, 139, 143, 144, 168, 191, 192, 194, 196, 201, 205, 212, 226, 241, 242, 251, 252, 266, 268, 306, 317, 319, 355, 374, 397, 490, 493, 504, 509, 514, 543, 547, 552, 564, 568, 585, 596, 601, 736, 739, 860, 867, 887, 992, 993, 1018, 1021, 1046, 1056, 1060, 1062, 1075, 1078, 1081, 1087, 1185, 1193, 1196], "craftsmanship": [43, 45], "anoth": [43, 62, 65, 67, 80, 124, 159, 189, 190, 191, 192, 196, 197, 200, 201, 205, 212, 214, 219, 222, 228, 229, 252, 259, 265, 268, 275, 280, 282, 288, 303, 306, 309, 312, 315, 341, 372, 434, 452, 453, 467, 475, 487, 494, 505, 522, 526, 542, 543, 546, 551, 566, 569, 570, 583, 584, 588, 593, 602, 654, 657, 658, 660, 743, 748, 771, 795, 803, 807, 817, 825, 830, 831, 875, 887, 913, 914, 915, 920, 921, 930, 932, 944, 981, 992, 994, 1004, 1005, 1019, 1033, 1035, 1047, 1055, 1060, 1078, 1081, 1082, 1085, 1086, 1103, 1110, 1118, 1134, 1138, 1144, 1196, 1204, 1210, 1213, 1221, 1244], "isol": [43, 54, 220, 222, 226, 276, 290, 992, 1046, 1047, 1098, 1188, 1200, 1216, 1232, 1234], "wrong": [43, 80, 116, 190, 192, 315, 372, 443, 465, 484, 720, 807, 860, 1018, 1033, 1047, 1065, 1082, 1086, 1098, 1117, 1182, 1193], "oracl": [43, 1197], "conduct": [43, 1221], "serious": 43, "safeti": [43, 144, 268, 372, 374, 486, 489, 492, 496, 501, 502, 505, 620, 744, 814, 840, 846, 985, 1059, 1060, 1084], "architectur": [43, 110, 187, 197, 249, 372, 414, 438, 465, 482, 505, 524, 807, 848, 985, 1012, 1062, 1063, 1073, 1075, 1244], "treat": [43, 83, 282, 372, 430, 460, 522, 930], "them": [43, 62, 112, 113, 159, 174, 183, 187, 189, 190, 192, 195, 196, 197, 200, 201, 205, 210, 211, 212, 219, 222, 226, 227, 229, 231, 247, 249, 252, 263, 287, 290, 299, 319, 329, 341, 374, 460, 482, 518, 538, 544, 548, 564, 600, 661, 663, 664, 717, 724, 727, 730, 743, 793, 807, 887, 913, 919, 920, 921, 927, 930, 955, 967, 994, 1001, 1046, 1047, 1056, 1059, 1062, 1063, 1075, 1080, 1085, 1086, 1087, 1088, 1109, 1111, 1133, 1166, 1169, 1188, 1194, 1201, 1212, 1228], "carefulli": [43, 192, 205, 490, 569, 760, 1194], "independ": [43, 62, 270, 282, 376, 432, 465, 657, 972, 986, 994, 1064], "self": [43, 61, 62, 63, 67, 171, 190, 191, 201, 209, 210, 217, 223, 226, 228, 246, 249, 250, 262, 263, 265, 272, 275, 280, 282, 288, 291, 303, 310, 320, 324, 330, 342, 346, 368, 498, 506, 644, 646, 751, 753, 754, 788, 801, 807, 813, 848, 879, 883, 1043, 1062, 1080, 1084, 1085, 1086, 1095, 1099, 1100, 1103, 1104, 1105, 1106, 1107, 1108, 1118, 1209, 1210, 1222, 1227, 1228, 1230, 1241], "valid": [43, 189, 192, 200, 278, 281, 324, 408, 463, 470, 486, 490, 669, 677, 701, 722, 737, 751, 788, 791, 817, 900, 1117, 1118, 1132, 1133, 1150, 1155, 1209, 1210, 1216], "first": [43, 53, 60, 62, 89, 131, 171, 180, 187, 189, 192, 193, 195, 196, 197, 201, 205, 210, 220, 222, 229, 249, 262, 263, 270, 272, 276, 278, 282, 306, 308, 319, 324, 341, 382, 388, 394, 418, 426, 449, 464, 465, 470, 478, 494, 495, 506, 508, 509, 511, 513, 516, 522, 524, 526, 532, 534, 535, 537, 538, 539, 540, 590, 631, 637, 642, 644, 650, 652, 656, 675, 676, 677, 681, 700, 703, 736, 738, 743, 765, 772, 773, 792, 793, 795, 834, 835, 836, 840, 854, 857, 864, 868, 878, 887, 889, 891, 896, 902, 905, 908, 926, 927, 928, 933, 944, 948, 954, 970, 972, 975, 979, 981, 984, 985, 992, 993, 1011, 1015, 1035, 1043, 1046, 1049, 1055, 1063, 1064, 1079, 1080, 1081, 1082, 1086, 1087, 1091, 1098, 1100, 1104, 1112, 1113, 1114, 1115, 1117, 1118, 1127, 1128, 1131, 1137, 1138, 1145, 1168, 1177, 1183, 1185, 1194, 1196, 1204, 1222, 1228, 1241, 1246], "debug": [43, 190, 191, 219, 249, 259, 265, 275, 278, 329, 333, 349, 375, 376, 377, 378, 379, 397, 402, 415, 465, 491, 494, 498, 499, 500, 511, 516, 517, 523, 528, 533, 536, 547, 625, 771, 788, 840, 845, 867, 869, 930, 948, 1014, 1038, 1059, 1137, 1216, 1239, 1242, 1247, 1256], "fact": [43, 53, 152, 190, 191, 222, 341, 372, 462, 470, 494, 504, 887, 933, 1018, 1056, 1197], "hard": [43, 72, 80, 87, 126, 131, 139, 143, 148, 152, 180, 190, 192, 195, 196, 201, 206, 211, 218, 222, 229, 251, 266, 272, 282, 296, 305, 306, 326, 327, 341, 370, 371, 443, 462, 491, 504, 518, 519, 552, 628, 726, 838, 840, 887, 917, 924, 927, 968, 970, 984, 987, 993, 1075, 1084, 1086, 1106, 1123, 1137, 1190, 1211, 1241, 1257], "principl": [43, 53, 54, 85, 108, 116, 121, 122, 144, 186, 192, 201, 316, 317, 318, 319, 505, 548, 549, 840, 887, 992, 994, 1005, 1065, 1196], "mayb": [43, 45, 57, 58, 60, 62, 80, 126, 131, 165, 180, 183, 190, 191, 192, 195, 196, 205, 218, 222, 249, 265, 266, 316, 317, 318, 319, 334, 374, 400, 403, 405, 406, 514, 534, 546, 547, 548, 580, 633, 634, 704, 753, 836, 993, 1078, 1100, 1230], "overview": [43, 67, 100, 126, 148, 186, 197, 214, 230, 232, 247, 251, 263, 296, 297, 305, 309, 312, 315, 317, 326, 327, 343, 370, 371, 411, 414, 548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 642, 662, 759, 770, 783, 794, 816, 839, 840, 910, 914, 915, 916, 917, 920, 921, 922, 929, 931, 932, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 948, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 968, 978, 984, 996, 997, 998, 999, 1000, 1007, 1008, 1011, 1013, 1015, 1023, 1025, 1039, 1042, 1045, 1047, 1064, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1078, 1110, 1188, 1241, 1242, 1244, 1246], "respons": [43, 53, 56, 91, 116, 121, 122, 139, 144, 175, 189, 200, 205, 253, 504, 566, 580, 588, 646, 654, 803, 840, 883, 895, 993, 994, 1017, 1046, 1047, 1114, 1195, 1246], "googl": [44, 185, 190, 197, 199, 211, 214, 217, 218, 222, 223, 226, 247, 252, 371, 417, 599, 801, 802, 977, 1112, 1188, 1228, 1230, 1259], "cloner": 44, "init": [44, 168, 189, 191, 207, 211, 288, 295, 297, 358, 428, 455, 507, 573, 574, 596, 599, 627, 644, 662, 680, 819, 842, 850, 855, 875, 877, 889, 924, 976, 1060], "cpp": [44, 50, 99, 124, 126, 127, 128, 129, 130, 131, 134, 135, 144, 147, 148, 155, 156, 157, 201, 216, 226, 251, 252, 268, 295, 306, 315, 317, 374, 417, 509, 511, 512, 513, 514, 515, 516, 520, 528, 530, 535, 542, 543, 544, 546, 547, 549, 551, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 580, 582, 583, 584, 589, 591, 592, 593, 594, 595, 596, 597, 598, 600, 601, 602, 603, 604, 605, 606, 608, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 644, 645, 646, 647, 648, 652, 653, 655, 657, 658, 659, 660, 661, 662, 663, 664, 672, 673, 674, 675, 676, 679, 680, 681, 682, 683, 685, 686, 689, 690, 691, 695, 699, 700, 701, 702, 703, 709, 713, 714, 717, 719, 720, 722, 727, 732, 733, 734, 735, 736, 737, 738, 739, 743, 748, 750, 753, 754, 755, 758, 760, 765, 771, 780, 781, 782, 785, 786, 787, 788, 789, 790, 792, 793, 795, 797, 801, 802, 803, 804, 805, 806, 815, 817, 819, 820, 824, 826, 828, 830, 834, 835, 836, 838, 992, 1022, 1026, 1029, 1041, 1043, 1046, 1062], "assert_eq": [44, 542, 544, 547, 551, 564, 591, 592, 598, 601, 602, 603, 604, 605, 606, 608, 610, 611, 612, 615, 616, 617, 618, 619, 637, 644, 645, 646, 657, 658, 660, 661, 662, 663, 664, 722, 726, 748, 750, 753, 754, 755, 786, 797, 801, 802, 803, 804, 806, 819, 820, 834, 835, 836, 838, 1228, 1233], "test_f": [44, 566, 601, 602, 838, 1233], "simplefixtur": 44, "public": [44, 55, 103, 104, 109, 116, 119, 120, 121, 122, 123, 126, 131, 135, 139, 148, 149, 187, 200, 205, 242, 250, 263, 291, 296, 305, 306, 314, 320, 326, 327, 370, 371, 372, 376, 379, 394, 397, 402, 478, 508, 509, 510, 513, 517, 523, 528, 533, 540, 543, 545, 549, 551, 554, 555, 556, 566, 571, 572, 573, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 588, 601, 602, 614, 628, 634, 643, 644, 645, 647, 648, 649, 651, 652, 653, 654, 655, 656, 658, 659, 660, 667, 670, 685, 686, 703, 713, 714, 716, 717, 719, 720, 729, 730, 735, 737, 738, 743, 746, 747, 748, 749, 750, 753, 754, 756, 765, 767, 768, 769, 771, 773, 774, 777, 778, 779, 780, 781, 782, 786, 787, 788, 790, 801, 802, 803, 806, 807, 815, 817, 824, 826, 828, 830, 838, 840, 851, 855, 916, 917, 923, 937, 943, 984, 996, 997, 998, 999, 1000, 1005, 1107, 1112, 1233], "myfirstsuit": 44, "test_find": 44, "wtf": [44, 53, 126, 228, 259, 264, 265, 268, 270, 288, 327, 637, 652, 840, 984, 1009, 1013, 1025, 1059, 1061, 1085], "tallk": 44, "morph": [44, 62, 155, 217, 226, 251, 252, 317, 622, 634, 637, 640, 646, 743, 795, 889, 1089], "fixtur": [44, 217, 226, 318, 319, 334, 340, 341, 344, 345, 355, 372, 373, 374, 380, 405, 555, 566, 602, 840, 1226, 1259], "trivial": [44, 190, 201, 332, 348, 444, 460, 637, 654, 751, 756, 807, 892, 900, 994, 1010, 1046, 1243], "tempfil": [44, 1084], "crap": [44, 191, 266, 308, 364, 369, 490, 506, 524, 535, 704, 744, 825, 994, 1059], "null": [44, 62, 121, 191, 192, 193, 208, 233, 249, 262, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 419, 432, 439, 467, 478, 488, 493, 506, 601, 657, 757, 845, 851, 858, 883, 918, 928, 930, 931, 948, 963, 970, 1012, 1017, 1024, 1031, 1033, 1035, 1037, 1043, 1046, 1047, 1052, 1055, 1059, 1062], "deriv": [44, 109, 123, 127, 143, 212, 266, 278, 345, 384, 408, 602, 620, 646, 716, 717, 719, 720, 782, 790, 824, 1086, 1099, 1233], "seminar": [45, 169], "psycho": 45, "rule": [45, 191, 197, 222, 272, 278, 282, 315, 354, 373, 374, 405, 420, 439, 441, 442, 443, 458, 464, 482, 493, 494, 495, 497, 505, 519, 524, 534, 552, 564, 569, 670, 716, 751, 754, 758, 760, 780, 806, 807, 927, 948, 1009, 1086, 1109, 1117, 1118, 1128, 1137, 1201, 1248], "dont": [45, 282, 504, 860], "scenario": [45, 192, 205, 214, 222, 226, 372, 374, 427, 568, 720, 815, 1047, 1048, 1055], "robert": [45, 552], "martin": [45, 504, 505, 552], "someon": [45, 128, 222, 263, 278, 285, 288, 319, 376, 404, 659, 815, 879, 945, 951, 972, 994, 1018, 1062, 1111], "mistak": [45, 190, 196, 197, 247, 263, 287, 992, 1188, 1201], "kill": [45, 191, 192, 268, 948, 1002, 1031, 1050, 1059, 1060, 1090, 1247], "peopl": [45, 62, 187, 190, 192, 194, 195, 197, 205, 210, 222, 251, 285, 415, 504, 552, 570, 760, 887, 927, 1095, 1111, 1139, 1195, 1197], "polit": [45, 793], "thei": [45, 55, 80, 124, 178, 189, 190, 191, 192, 193, 194, 195, 196, 197, 201, 210, 212, 214, 218, 230, 252, 259, 263, 265, 268, 275, 278, 282, 324, 332, 348, 374, 408, 434, 440, 460, 488, 491, 494, 500, 504, 505, 535, 540, 543, 544, 564, 569, 570, 598, 600, 620, 637, 647, 652, 678, 682, 714, 726, 743, 744, 747, 754, 755, 802, 803, 809, 846, 860, 879, 887, 912, 923, 927, 949, 985, 992, 993, 994, 1005, 1030, 1059, 1060, 1065, 1081, 1091, 1099, 1106, 1109, 1160, 1183, 1190, 1193, 1194, 1201, 1204, 1207, 1221, 1227, 1243, 1246], "regul": 45, "ethic": 45, "everi": [45, 53, 61, 62, 63, 80, 91, 112, 113, 132, 159, 183, 190, 196, 226, 249, 278, 319, 429, 486, 500, 504, 514, 547, 552, 568, 587, 588, 657, 667, 719, 726, 742, 744, 749, 838, 858, 871, 887, 912, 920, 921, 923, 925, 926, 942, 949, 951, 993, 1008, 1043, 1046, 1059, 1060, 1080, 1082, 1091, 1127, 1146, 1157, 1168, 1194, 1228, 1243], "particular": [45, 124, 189, 201, 222, 473, 498, 544, 568, 620, 838, 934, 1110, 1111], "electr": 45, "seem": [45, 155, 178, 189, 191, 192, 211, 316, 543, 992, 994, 1059, 1243], "adher": [45, 930], "immedi": [45, 62, 190, 191, 196, 197, 268, 309, 312, 315, 317, 383, 465, 695, 810, 815, 869, 879, 883, 985, 1035, 1044, 1047, 1049, 1131, 1228], "survei": [45, 211], "had": [45, 124, 189, 191, 192, 196, 197, 201, 205, 210, 222, 226, 255, 257, 276, 434, 473, 564, 631, 643, 729, 743, 881, 914, 915, 927, 952, 992, 1005, 1077, 1111, 1118, 1137, 1207, 1211], "life": [45, 137, 143, 186, 197, 202, 205, 208, 210, 218, 649, 780, 801, 816, 839, 840, 887, 927, 984, 1025, 1039, 1045, 1112, 1133, 1191], "accomplish": [45, 57, 80, 230, 316, 318, 319, 490, 505, 992], "befor": [45, 127, 131, 139, 143, 186, 190, 191, 193, 194, 195, 197, 200, 205, 210, 226, 229, 233, 251, 278, 294, 295, 297, 318, 319, 324, 340, 341, 342, 345, 352, 354, 373, 380, 422, 430, 431, 440, 460, 519, 522, 524, 535, 601, 631, 637, 676, 702, 717, 744, 756, 771, 783, 788, 789, 799, 803, 804, 809, 810, 815, 817, 818, 838, 839, 840, 851, 865, 875, 881, 887, 913, 950, 985, 994, 1033, 1048, 1050, 1062, 1086, 1091, 1109, 1153, 1178, 1180, 1184, 1193, 1206, 1210, 1213, 1222, 1223, 1229], "formal": [45, 200, 214, 251, 252, 341, 344, 522, 591, 1222], "googletest": [45, 99, 217, 219, 220, 252, 295, 297, 332, 348, 517, 532, 549, 585, 598, 600, 601, 662, 801, 802, 803, 838, 840, 841, 1228, 1230, 1243], "messag": [45, 131, 159, 171, 185, 187, 195, 196, 205, 208, 214, 220, 228, 229, 255, 259, 262, 265, 275, 278, 285, 288, 303, 310, 318, 319, 320, 324, 346, 352, 358, 364, 385, 397, 402, 505, 511, 513, 514, 516, 518, 519, 520, 522, 524, 525, 526, 528, 549, 654, 670, 730, 760, 765, 785, 787, 788, 797, 807, 815, 840, 862, 887, 920, 921, 925, 930, 984, 1006, 1025, 1035, 1039, 1115, 1129, 1139, 1182, 1223, 1227, 1229, 1255, 1256, 1257], "saniti": [45, 496, 501, 502, 505, 535, 538, 659, 745, 783, 837, 839, 840], "perform": [45, 116, 120, 190, 196, 205, 207, 229, 248, 249, 278, 319, 346, 403, 444, 447, 470, 477, 482, 490, 493, 494, 497, 500, 501, 502, 511, 637, 677, 695, 698, 720, 742, 756, 798, 825, 840, 871, 1050, 1067, 1078, 1079, 1137, 1221, 1239, 1242], "delici": [45, 53], "fearlessli": [45, 53], "backlog": [45, 372], "Or": [45, 114, 115, 117, 118, 125, 127, 143, 190, 297, 354, 489, 505, 628, 757, 783, 794, 839, 840, 979, 1005, 1015, 1041, 1117, 1131, 1209, 1213], "Will": [45, 190, 223, 282, 383, 848, 1062, 1129, 1140, 1216, 1230, 1236, 1255], "high": [46, 53, 121, 127, 211, 251, 265, 282, 372, 504, 552, 575, 588, 592, 596, 801, 803, 818, 869, 881, 885, 897, 906], "speed": [46, 53, 180, 185, 190, 259, 263, 265, 275, 278, 282, 346, 495, 806, 881, 887, 1048, 1050, 1192, 1193], "hype": [46, 825], "we": [46, 50, 60, 61, 63, 65, 70, 127, 131, 135, 139, 142, 143, 144, 149, 152, 168, 171, 180, 189, 190, 192, 193, 194, 195, 196, 197, 201, 205, 206, 209, 210, 211, 212, 213, 214, 218, 219, 222, 226, 227, 228, 229, 230, 232, 241, 242, 249, 250, 251, 252, 256, 259, 262, 263, 265, 266, 268, 295, 297, 299, 306, 309, 312, 314, 316, 318, 319, 337, 341, 344, 345, 372, 374, 383, 400, 403, 404, 408, 419, 434, 445, 452, 460, 473, 482, 484, 488, 490, 493, 498, 505, 509, 510, 513, 514, 522, 524, 528, 530, 534, 542, 543, 544, 547, 549, 551, 554, 563, 564, 568, 569, 585, 586, 587, 588, 596, 599, 600, 601, 631, 637, 646, 658, 682, 713, 717, 726, 735, 736, 737, 738, 739, 743, 754, 765, 771, 797, 798, 803, 806, 817, 822, 848, 851, 855, 856, 860, 862, 865, 883, 887, 889, 895, 903, 914, 915, 930, 931, 945, 951, 952, 967, 985, 992, 993, 994, 1001, 1005, 1010, 1011, 1012, 1018, 1019, 1020, 1021, 1033, 1046, 1055, 1073, 1077, 1078, 1079, 1087, 1106, 1111, 1137, 1139, 1144, 1146, 1175, 1182, 1183, 1184, 1188, 1193, 1194, 1195, 1196, 1203, 1204, 1210, 1213, 1229, 1230, 1246], "did": [46, 191, 192, 194, 196, 197, 200, 201, 209, 218, 222, 229, 314, 484, 488, 504, 549, 587, 736, 805, 807, 835, 860, 865, 887, 927, 985, 996, 1005, 1087, 1241], "consequ": [46, 189, 190, 309, 312, 464, 485, 488, 489, 552, 1018, 1106, 1207, 1241], "unsign": [46, 116, 122, 139, 263, 268, 436, 438, 446, 475, 478, 482, 490, 556, 571, 586, 600, 601, 602, 652, 722, 723, 733, 781, 815, 817, 824, 826, 828, 830, 838, 843, 846, 851, 858, 867, 869, 871, 877, 883, 892, 897, 901, 1014, 1055, 1056, 1238, 1239], "introduc": [46, 58, 80, 99, 155, 251, 268, 276, 317, 332, 348, 486, 494, 506, 524, 542, 547, 569, 587, 588, 589, 590, 620, 642, 729, 840, 906, 1059, 1089, 1115, 1129, 1195, 1243], "throw": [46, 131, 155, 194, 197, 268, 544, 568, 569, 573, 579, 580, 582, 583, 584, 602, 620, 698, 722, 726, 737, 779, 800, 803, 814, 817, 819, 1233], "notfounderror": 46, "cbda1e98040d084c31ff6e83f04d78dbebf5c1c2": 46, "cluster_clean_cod": [46, 47, 51, 53, 55, 56, 840], "cluster_clean_code_bug": [46, 47, 53, 55, 56, 840], "clean_code_bugs_find_error": [46, 47, 53, 840], "twice": [47, 53, 55, 56, 57, 190, 426, 465, 487, 534, 751, 754, 813, 840, 907, 948, 985, 1001, 1033, 1079], "crash": [47, 53, 62, 112, 113, 188, 190, 191, 192, 195, 247, 249, 259, 265, 275, 278, 415, 455, 462, 568, 652, 679, 724, 801, 840, 1046, 1060, 1188], "found": [47, 53, 110, 111, 132, 171, 177, 186, 189, 201, 210, 222, 255, 259, 262, 265, 268, 270, 272, 275, 278, 288, 303, 310, 324, 332, 342, 346, 348, 352, 358, 364, 368, 383, 397, 491, 500, 513, 516, 528, 532, 537, 578, 582, 583, 584, 590, 601, 603, 607, 608, 609, 637, 642, 682, 685, 688, 698, 702, 703, 726, 728, 736, 738, 740, 748, 835, 840, 858, 919, 923, 930, 977, 994, 1062, 1065, 1075, 1080, 1086, 1094, 1103, 1133, 1166, 1192, 1195, 1231, 1243], "clean_code_bugs_overwrite_store_content_on_read": [47, 53, 55, 56, 840], "clean_code_bugs_overwrite_existing_fil": [47, 53, 55, 56, 840], "explicitli": [48, 191, 192, 196, 222, 262, 272, 282, 315, 442, 443, 461, 499, 505, 524, 569, 646, 649, 657, 698, 748, 751, 754, 807, 820, 918, 1047, 1056, 1085, 1095, 1114, 1201, 1209], "solut": [48, 126, 165, 195, 197, 205, 206, 214, 216, 222, 241, 251, 252, 257, 260, 263, 268, 273, 279, 295, 298, 309, 318, 319, 323, 329, 354, 355, 367, 374, 380, 464, 465, 468, 487, 490, 507, 511, 524, 530, 541, 568, 590, 620, 642, 648, 649, 669, 706, 708, 710, 717, 732, 740, 755, 760, 765, 791, 807, 833, 839, 840, 920, 949, 950, 967, 1030, 1035, 1048, 1049, 1068, 1091, 1127, 1159, 1171, 1201, 1244], "force_overwrit": 48, "descriptor": [48, 152, 190, 214, 246, 278, 282, 303, 324, 342, 404, 649, 846, 867, 903, 924, 930, 931, 988, 1010, 1011, 1012, 1056], "mani": [49, 53, 56, 61, 63, 67, 91, 116, 122, 144, 190, 192, 196, 197, 214, 219, 222, 238, 249, 270, 280, 285, 306, 310, 314, 315, 317, 323, 342, 383, 404, 408, 432, 444, 446, 455, 470, 484, 486, 491, 506, 519, 522, 531, 532, 534, 543, 546, 551, 554, 593, 620, 667, 677, 696, 698, 717, 730, 742, 743, 751, 771, 792, 797, 805, 813, 840, 846, 848, 865, 873, 879, 883, 887, 913, 924, 925, 927, 928, 981, 993, 1011, 1012, 1031, 1041, 1044, 1059, 1060, 1062, 1073, 1082, 1084, 1086, 1091, 1100, 1110, 1115, 1118, 1121, 1125, 1133, 1137, 1139, 1144, 1193, 1195, 1196, 1197, 1201, 1210, 1228, 1241, 1244], "overwrit": [49, 111, 568, 569, 582, 590, 607, 609, 642, 652, 698, 700, 730, 840, 887, 950, 955, 967, 1019, 1135], "present": [49, 60, 144, 187, 193, 197, 201, 205, 210, 223, 278, 324, 332, 341, 348, 372, 380, 510, 648, 883, 887, 923, 994, 1005, 1024, 1086, 1170, 1210, 1243], "continu": [50, 53, 62, 67, 91, 101, 108, 112, 113, 124, 127, 144, 183, 191, 200, 201, 213, 222, 223, 226, 235, 240, 241, 242, 271, 276, 282, 288, 298, 372, 374, 394, 458, 459, 465, 466, 472, 476, 479, 483, 488, 492, 496, 501, 502, 504, 506, 513, 516, 535, 547, 661, 663, 664, 724, 745, 753, 783, 835, 836, 837, 838, 839, 840, 985, 987, 991, 997, 1020, 1021, 1059, 1060, 1065, 1077, 1084, 1091, 1095, 1128, 1131, 1150, 1195, 1210, 1228], "expected_cont": 50, "fill": [50, 192, 193, 205, 227, 278, 279, 324, 446, 743, 747, 792, 802, 858, 883, 887, 954, 1011, 1089], "strategi": [50, 262, 373, 380, 480, 993, 1145, 1221], "hurri": [50, 465], "read_fil": 50, "compar": [50, 126, 250, 252, 263, 278, 319, 324, 443, 485, 499, 500, 519, 524, 535, 598, 644, 722, 802, 996, 1031, 1129, 1134, 1159, 1163, 1193], "binaryfil": 50, "doesn": [50, 192, 195, 303, 352, 460, 462, 465, 480, 494, 797, 846, 907, 914, 915, 950, 954, 967, 1063, 1075, 1131], "belong": [50, 219, 222, 432, 452, 478, 505, 620, 644, 658, 660, 933, 941, 1020, 1102, 1116], "test_write_csv": 50, "test_read_csv": [50, 1185], "ah": [50, 61, 63, 65, 196, 212, 249, 251, 265, 699, 1062, 1065, 1139, 1204], "altern": [51, 53, 55, 56, 62, 70, 80, 85, 143, 189, 190, 197, 223, 242, 268, 329, 358, 439, 510, 644, 653, 667, 678, 681, 751, 800, 806, 828, 840, 887, 927, 948, 988, 992, 994, 1006, 1014, 1020, 1031, 1037, 1055, 1062, 1111, 1131, 1134, 1209, 1213, 1216, 1223, 1233, 1236, 1252, 1253, 1255, 1258], "cluster_clean_code_featur": [51, 53, 55, 56, 840], "clean_code_features_other_index": [51, 53, 840], "clean_code_features_csv": [51, 53, 55, 56, 840], "establish": [53, 73, 230, 242, 306, 318, 319, 340, 344, 394, 504, 887, 1046, 1244], "were": [53, 124, 143, 183, 190, 192, 196, 205, 222, 226, 415, 464, 532, 643, 652, 653, 679, 747, 786, 914, 915, 994, 1021, 1077, 1085, 1109, 1118, 1137, 1143, 1201, 1207, 1241], "occas": [53, 91, 191, 802], "ourselv": [53, 222, 985], "gather": [53, 197, 229, 318, 319, 340, 341, 344, 382, 498, 500, 1172], "wreak": [53, 112, 113, 480, 724], "havoc": [53, 112, 113, 480, 724], "shoehorn": 53, "violat": [53, 116, 121, 122, 144, 190, 504, 552, 781, 803, 901, 1046, 1060], "nearli": [53, 222, 228, 482, 1038], "solid": [53, 114, 115, 116, 117, 118, 125, 144, 186, 202, 315, 317, 505, 552, 1239, 1240, 1254, 1255, 1257, 1258], "chanc": [53, 190, 192, 227, 484, 504, 842, 887, 1013, 1246], "cluster_clean_code_refactor": [53, 55, 56, 840], "clean_code_refactoring_backingstore_monolith": [53, 55, 56, 840], "clean_code_refactoring_store_enum_switch": [53, 55, 56, 840], "clean_code_refactoring_backingstore_interfac": [53, 56, 840], "clean_code_refactoring_pass_store_in_ctor": [53, 56, 840], "now": [54, 60, 124, 152, 189, 190, 191, 192, 193, 194, 196, 197, 205, 209, 218, 228, 238, 255, 262, 268, 272, 282, 290, 310, 314, 335, 372, 383, 384, 397, 460, 473, 488, 493, 518, 540, 544, 551, 564, 569, 591, 592, 599, 658, 682, 685, 691, 695, 703, 747, 798, 803, 818, 820, 845, 865, 887, 895, 897, 903, 919, 923, 985, 992, 993, 994, 1020, 1021, 1029, 1075, 1077, 1082, 1085, 1100, 1103, 1127, 1183, 1193, 1195, 1213, 1222, 1241], "violatin": 54, "respect": [54, 61, 63, 121, 183, 191, 205, 252, 314, 316, 389, 436, 484, 504, 569, 587, 646, 653, 716, 751, 802, 803, 918, 927, 992, 1046, 1060, 1106], "mainli": [55, 190, 226, 315, 324, 698, 838, 1028, 1089], "bugfix": 55, "ongo": [55, 124, 1048], "scene": [55, 1062, 1106], "pleas": [55, 126, 149, 171, 191, 192, 195, 197, 201, 218, 222, 226, 227, 229, 230, 231, 232, 242, 268, 295, 297, 306, 327, 368, 371, 388, 430, 464, 494, 519, 524, 602, 659, 661, 662, 663, 664, 927, 985, 993, 994, 1009, 1038, 1056, 1064, 1065, 1111, 1214], "wait": [55, 74, 75, 76, 80, 85, 89, 139, 143, 159, 179, 190, 191, 192, 193, 194, 196, 237, 341, 383, 714, 743, 810, 818, 840, 864, 879, 885, 889, 892, 895, 897, 920, 921, 924, 932, 984, 985, 1011, 1013, 1017, 1029, 1041, 1044, 1047, 1054, 1056, 1059, 1135, 1204, 1228, 1246, 1254], "unnecessarili": [55, 71, 1056], "conflict": [55, 77, 79, 124, 127, 143, 317, 318, 319, 340, 374, 430, 481, 653, 744, 816, 839, 840, 843, 846, 856, 984, 993, 1025, 1033, 1039, 1059, 1094, 1224], "rip": [55, 193, 506, 585, 1046, 1203], "detail": [55, 86, 187, 192, 195, 200, 204, 205, 217, 223, 237, 248, 249, 251, 252, 259, 265, 275, 279, 280, 282, 286, 308, 319, 358, 365, 369, 374, 380, 397, 504, 524, 526, 535, 552, 589, 599, 601, 649, 726, 802, 865, 948, 987, 992, 994, 1048, 1081, 1190, 1230, 1239], "instanc": [55, 57, 109, 112, 113, 134, 197, 238, 246, 250, 259, 262, 263, 270, 272, 277, 280, 282, 285, 300, 303, 310, 324, 342, 352, 358, 364, 374, 393, 408, 512, 542, 547, 555, 566, 568, 569, 570, 582, 583, 584, 587, 600, 713, 722, 724, 732, 737, 785, 788, 848, 853, 856, 1055, 1056, 1084, 1086, 1100, 1101, 1103, 1106, 1129], "its": [55, 57, 61, 63, 86, 89, 110, 112, 113, 121, 139, 152, 159, 184, 189, 190, 191, 192, 194, 195, 196, 197, 200, 201, 207, 212, 214, 218, 219, 220, 222, 242, 249, 250, 252, 259, 263, 265, 275, 278, 282, 291, 306, 308, 309, 312, 315, 317, 324, 341, 374, 388, 399, 430, 452, 463, 465, 480, 482, 484, 491, 493, 509, 512, 515, 518, 526, 543, 547, 566, 569, 570, 585, 586, 587, 588, 593, 598, 601, 643, 644, 645, 647, 649, 654, 684, 724, 743, 755, 765, 791, 810, 838, 851, 860, 865, 887, 892, 914, 915, 918, 920, 921, 925, 930, 935, 936, 948, 949, 970, 972, 993, 996, 997, 1004, 1014, 1015, 1020, 1035, 1041, 1044, 1046, 1047, 1048, 1056, 1079, 1084, 1086, 1089, 1094, 1099, 1103, 1109, 1117, 1127, 1129, 1134, 1138, 1145, 1193, 1195, 1214, 1221, 1223, 1241, 1243, 1244, 1246], "replac": [55, 62, 65, 99, 131, 195, 240, 251, 259, 262, 263, 265, 266, 268, 275, 278, 310, 324, 341, 380, 382, 424, 439, 480, 506, 589, 590, 642, 675, 676, 736, 743, 771, 788, 802, 817, 825, 838, 840, 890, 994, 1034, 1046, 1060, 1085], "symptom": [57, 200], "mismatch": [57, 524, 626], "onc": [57, 116, 121, 122, 127, 171, 189, 191, 192, 195, 196, 197, 200, 205, 210, 211, 382, 400, 422, 447, 456, 464, 494, 514, 534, 543, 544, 545, 549, 554, 566, 571, 572, 573, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 599, 601, 659, 677, 678, 726, 733, 774, 785, 795, 813, 824, 826, 828, 829, 830, 831, 838, 848, 851, 883, 985, 994, 1036, 1059, 1060, 1080, 1086, 1087, 1088, 1122, 1144, 1153, 1166, 1197, 1200, 1223], "sync": [57, 144, 191, 262, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364, 480, 484, 887, 979], "imho": [57, 782], "forbidden": [58, 482], "accord": [58, 62, 126, 139, 189, 192, 278, 734, 932, 948, 981, 985, 993, 994], "uncl": [58, 415], "bob": [58, 278, 415, 504], "enum": [58, 251, 252, 355, 439, 454, 492, 496, 501, 502, 506, 535, 726, 745, 783, 826, 828, 837, 839, 840, 846, 848, 856, 1046, 1241], "submiss": [59, 64, 68, 155], "submit": [59, 111, 152, 881, 1015], "linuxtag": [59, 229, 345, 990], "pure": [60, 71, 134, 197, 397, 460, 553, 716, 743, 782, 807, 927, 1118, 1241], "local": [60, 150, 151, 163, 171, 190, 191, 193, 196, 205, 218, 222, 223, 230, 231, 235, 251, 252, 266, 268, 269, 275, 278, 281, 282, 303, 306, 318, 320, 329, 332, 340, 341, 344, 345, 348, 350, 351, 356, 357, 358, 362, 363, 364, 366, 367, 376, 383, 397, 430, 434, 458, 460, 477, 509, 522, 526, 531, 548, 562, 564, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 642, 649, 667, 751, 754, 756, 785, 840, 860, 887, 892, 914, 915, 919, 970, 984, 992, 994, 995, 996, 997, 1003, 1005, 1011, 1022, 1030, 1073, 1075, 1082, 1085, 1130, 1216, 1243, 1244, 1257], "easili": [60, 144, 184, 191, 197, 383, 439, 458, 491, 504, 543, 716, 793, 869, 885, 1014, 1044, 1050, 1081, 1094, 1126, 1241], "guess": [60, 272, 282, 308, 484, 489, 760, 1001, 1056], "autotool": [60, 201], "portabl": [60, 214, 432, 494, 810, 1030, 1037, 1056, 1060, 1118, 1197], "configur": [60, 61, 62, 63, 66, 67, 70, 75, 80, 84, 86, 87, 88, 106, 124, 126, 131, 137, 139, 143, 144, 148, 175, 176, 189, 191, 192, 195, 197, 220, 230, 296, 305, 306, 315, 326, 327, 333, 334, 337, 341, 349, 370, 371, 375, 376, 378, 397, 403, 507, 508, 509, 517, 523, 533, 534, 537, 547, 549, 554, 591, 592, 593, 601, 840, 860, 867, 887, 901, 917, 918, 919, 923, 932, 968, 981, 984, 985, 993, 1005, 1012, 1026, 1028, 1056, 1063, 1064, 1077, 1087, 1158, 1196, 1200, 1209, 1216, 1244], "archiv": [60, 105, 106, 126, 150, 201, 202, 230, 232, 296, 305, 306, 326, 370, 500, 531, 538, 548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 642, 840, 917, 948, 984, 1064, 1067, 1070, 1071, 1073, 1074, 1075, 1080, 1084, 1216], "m4": 60, "macro": [60, 268, 333, 349, 375, 376, 378, 379, 424, 435, 438, 450, 459, 466, 472, 476, 479, 483, 486, 492, 496, 501, 502, 509, 510, 512, 514, 515, 516, 517, 518, 523, 524, 526, 528, 531, 533, 745, 783, 789, 837, 839, 840, 856, 875, 889, 930, 1008, 1014, 1020, 1030, 1064, 1137, 1228, 1233, 1238, 1242], "stock": [60, 262, 263, 1144, 1145], "sudo": [60, 66, 103, 126, 134, 149, 171, 186, 193, 195, 197, 205, 219, 230, 268, 296, 305, 306, 315, 317, 326, 327, 358, 370, 371, 513, 515, 516, 539, 614, 840, 917, 943, 945, 984, 985, 994, 1048, 1077, 1223], "pwd": [60, 111, 124, 152, 218, 295, 297, 358, 397, 402, 507, 538, 599, 601, 662, 862, 865, 914, 915, 925, 970, 972, 985, 1063, 1064, 1078, 1080, 1221], "pub": [60, 66, 193, 230, 860, 1001, 1182], "lib": [60, 66, 126, 155, 186, 195, 201, 229, 249, 252, 262, 278, 285, 288, 303, 310, 317, 320, 324, 346, 352, 358, 364, 528, 537, 598, 865, 877, 883, 887, 979, 994, 1059, 1063, 1065, 1075, 1077, 1216, 1223], "remot": [60, 104, 106, 163, 166, 171, 193, 195, 197, 205, 242, 251, 298, 376, 379, 383, 541, 562, 576, 590, 642, 840, 860, 887, 888, 892, 913, 916, 984, 993, 995, 998, 999, 1000, 1003, 1011, 1075, 1087, 1244, 1245, 1252], "v0": 60, "v1": [60, 308, 549, 564, 747], "v2": [60, 62, 197, 217, 308, 549, 564, 747], "autotooleri": 60, "autogen": 60, "step": [60, 62, 67, 152, 189, 190, 196, 197, 201, 205, 226, 265, 268, 269, 295, 297, 310, 314, 319, 342, 420, 422, 424, 440, 464, 506, 535, 546, 589, 599, 637, 662, 667, 801, 887, 914, 915, 1062, 1071, 1209, 1210, 1222], "noconfigur": 60, "suppress": [60, 196, 242, 498, 524, 526, 543, 652, 802, 967, 1216], "absorb": [60, 183, 228, 503, 505, 754, 1145], "Be": [60, 99, 114, 115, 117, 118, 125, 268, 315, 317, 355, 374, 380, 383, 437, 470, 519, 524, 599, 620, 645, 650, 712, 740, 752, 754, 783, 785, 788, 799, 808, 816, 837, 839, 840, 913, 1059, 1075], "awar": [60, 383, 481, 508, 1048], "enabl": [60, 189, 195, 222, 230, 251, 259, 265, 275, 278, 306, 316, 443, 494, 532, 547, 569, 625, 885, 887, 892, 940, 985, 989, 993, 1005, 1048, 1073, 1077, 1087, 1246], "mkdir": [60, 102, 126, 148, 176, 191, 196, 200, 218, 219, 295, 297, 306, 371, 397, 402, 526, 530, 599, 601, 602, 662, 838, 840, 887, 914, 915, 916, 917, 952, 953, 954, 955, 956, 959, 960, 962, 968, 984, 1001, 1005, 1055, 1075, 1077, 1078, 1084], "dist": [60, 170, 806, 1143], "406332": 60, "apr": [60, 62, 249, 259, 288, 390, 1063, 1064, 1065, 1078], "transfer": [60, 190, 252, 255, 332, 348, 383, 500, 602, 652, 754, 858, 887, 900, 901, 913, 914, 915, 975, 995, 1001, 1004, 1204, 1241, 1243], "scp": [60, 99, 103, 126, 148, 149, 176, 201, 230, 296, 305, 306, 326, 327, 370, 601, 602, 840, 860, 914, 915, 984, 995, 996, 997, 998, 1000, 1005, 1022, 1065, 1073, 1074, 1075], "192": [60, 223, 230, 262, 265, 270, 272, 275, 278, 282, 285, 288, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 403, 860, 923, 1005, 1258], "168": [60, 223, 230, 233, 240, 249, 262, 265, 270, 272, 275, 278, 282, 285, 288, 291, 300, 303, 320, 324, 330, 342, 346, 352, 358, 364, 368, 403, 860, 923, 1005, 1075, 1258], "82": [60, 200, 209, 223, 233, 238, 240, 246, 249, 255, 262, 265, 270, 272, 278, 282, 285, 288, 291, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 392, 1145, 1192, 1193], "prerequisit": [60, 106, 149, 268, 860, 992, 1114], "apt": [60, 66, 134, 201, 205, 219, 268, 315, 317, 614, 867, 987, 992, 994, 1005, 1064, 1077, 1223, 1228], "python3": [60, 62, 66, 88, 170, 171, 186, 201, 210, 223, 229, 249, 259, 265, 275, 278, 282, 358, 1040, 1050, 1077, 1087, 1114, 1209, 1210, 1216, 1223], "along": [60, 171, 191, 197, 250, 263, 415, 464, 554, 838, 933, 1041, 1062, 1094], "omit": [60, 62, 196, 205, 210, 259, 265, 275, 278, 279, 282, 352, 368, 401, 445, 482, 494, 506, 528, 546, 720, 743, 790, 865, 881, 931, 992, 993, 994, 1001, 1017, 1018, 1022, 1033, 1084, 1087, 1139, 1221], "bind": [60, 66, 67, 144, 191, 293, 315, 317, 345, 355, 374, 380, 442, 449, 700, 743, 756, 783, 807, 808, 810, 816, 839, 840, 988, 1062, 1095, 1099, 1118, 1129, 1207, 1241, 1256, 1258], "cxx": [60, 187, 534, 542, 543, 544, 545, 546, 547, 549, 551, 554, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 598, 600, 603, 604, 605, 606, 608, 610, 611, 612, 613, 615, 616, 617, 618, 619, 838, 1063, 1064], "xf": [60, 66, 201, 913, 1077], "ld_library_path": [60, 537, 1080], "gpiod": [60, 62, 68, 867], "py3": [60, 170, 186, 1143], "aarch64": [60, 201, 1075], "born": [61, 63, 67, 926, 1112], "bound": [61, 62, 63, 67, 268, 272, 303, 315, 330, 380, 481, 491, 496, 501, 502, 626, 654, 656, 658, 676, 756, 840, 926, 930, 986, 1047, 1050, 1104, 1125, 1149, 1209], "employe": [61, 63, 67, 217, 249, 1103], "year": [61, 63, 67, 189, 190, 191, 192, 196, 201, 222, 262, 268, 310, 314, 504, 643, 728, 729, 731, 732, 735, 736, 737, 738, 739, 740, 742, 789, 840, 1145], "emploi": [61, 63, 67, 191, 201, 226, 465, 887], "pattern": [61, 63, 65, 84, 108, 144, 186, 187, 203, 206, 225, 226, 252, 255, 278, 317, 358, 372, 374, 380, 405, 414, 416, 504, 518, 519, 541, 542, 543, 544, 546, 547, 549, 551, 552, 553, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 590, 642, 806, 807, 825, 840, 841, 948, 977, 1044, 1092, 1093, 1228, 1248], "led": [61, 63, 74, 75, 76, 80, 93, 128, 129, 130, 135, 136, 144, 208, 230, 306, 383, 406, 591, 840, 846, 985, 993], "hei": [61, 63, 190, 230, 282, 659, 660, 923, 1009, 1132, 1201], "reinvent": [61, 63, 250, 299, 726, 1188], "wheel": [61, 63, 127, 170, 186, 726, 889, 925, 1020, 1216], "admit": [61, 63, 197], "notori": [61, 63], "fun": [61, 63, 133, 190, 195, 248, 250, 286, 315, 415, 548, 786, 887, 927, 985, 992, 993, 1091, 1103, 1115, 1131, 1187, 1188, 1215, 1222, 1241], "live": [61, 63, 72, 99, 100, 126, 131, 148, 187, 191, 195, 213, 217, 222, 226, 231, 242, 250, 251, 252, 253, 266, 268, 276, 287, 294, 295, 296, 297, 299, 305, 307, 308, 315, 316, 317, 318, 319, 323, 326, 327, 341, 345, 354, 355, 370, 371, 373, 374, 380, 397, 401, 405, 406, 408, 415, 416, 417, 477, 494, 506, 518, 534, 537, 548, 553, 562, 564, 566, 588, 590, 591, 592, 593, 594, 595, 596, 597, 600, 607, 609, 620, 677, 678, 698, 741, 752, 783, 784, 785, 802, 816, 838, 839, 840, 841, 851, 887, 917, 920, 921, 922, 927, 943, 944, 984, 1025, 1094, 1111, 1145, 1188, 1214, 1222, 1240, 1241, 1255], "session": [61, 63, 162, 186, 195, 197, 215, 222, 226, 230, 234, 259, 265, 275, 278, 290, 294, 295, 297, 308, 316, 373, 403, 889, 918, 919, 1002, 1013, 1176, 1188, 1214, 1221, 1251], "simpl": [61, 63, 74, 76, 77, 80, 88, 124, 177, 186, 190, 194, 195, 197, 200, 201, 205, 210, 214, 217, 218, 222, 226, 229, 252, 268, 270, 272, 278, 282, 334, 337, 418, 419, 426, 465, 467, 481, 484, 491, 506, 508, 509, 511, 516, 519, 522, 528, 534, 535, 539, 547, 645, 652, 653, 691, 719, 728, 729, 731, 732, 735, 736, 737, 738, 739, 740, 760, 793, 803, 812, 840, 846, 860, 867, 879, 887, 889, 897, 924, 977, 985, 986, 992, 993, 1022, 1028, 1030, 1033, 1048, 1056, 1059, 1063, 1064, 1065, 1071, 1087, 1091, 1111, 1112, 1120, 1139, 1188, 1194, 1196, 1212, 1227, 1228], "thu": [61, 63, 190, 191, 192, 228, 449, 544, 860, 865, 907, 914, 1018, 1200, 1246], "techniqu": [61, 63, 71, 72, 73, 484, 494, 600, 724, 988], "usag": [61, 63, 82, 108, 116, 122, 127, 144, 162, 163, 192, 197, 242, 252, 263, 276, 290, 315, 317, 318, 340, 355, 373, 380, 383, 403, 415, 465, 490, 491, 498, 507, 512, 513, 518, 526, 530, 531, 535, 538, 548, 549, 562, 588, 589, 590, 642, 652, 659, 660, 678, 713, 715, 716, 719, 720, 740, 742, 754, 765, 771, 785, 792, 825, 839, 840, 889, 925, 948, 977, 980, 995, 1026, 1029, 1044, 1081, 1086, 1089, 1139, 1182, 1184, 1216, 1223, 1230, 1241], "At": [61, 63, 139, 190, 191, 194, 197, 201, 205, 222, 226, 252, 262, 266, 268, 302, 429, 458, 462, 494, 542, 801, 879, 1082, 1099, 1188], "flow": [61, 63, 191, 222, 227, 229, 230, 231, 232, 236, 241, 242, 257, 260, 273, 284, 398, 399, 400, 402, 438, 458, 466, 472, 476, 479, 483, 492, 494, 496, 501, 502, 745, 783, 792, 837, 839, 840, 1059, 1095, 1120, 1122, 1129, 1207, 1242], "event": [61, 62, 63, 65, 67, 88, 134, 138, 159, 193, 214, 250, 259, 263, 265, 275, 278, 306, 318, 319, 500, 771, 815, 823, 827, 840, 855, 856, 864, 889, 890, 902, 903, 904, 905, 908, 920, 921, 925, 984, 988, 1013, 1025, 1028, 1044, 1047, 1048, 1052, 1056, 1098, 1204, 1213, 1246, 1255, 1257, 1258], "save": [61, 62, 63, 87, 171, 186, 189, 190, 202, 210, 213, 259, 265, 275, 278, 309, 312, 315, 368, 446, 448, 518, 743, 774, 777, 778, 779, 932, 950, 1004, 1013, 1050, 1080, 1084, 1090, 1100, 1133, 1193, 1223, 1241], "schedul": [61, 62, 63, 101, 112, 113, 126, 138, 148, 163, 190, 207, 230, 232, 296, 305, 306, 326, 370, 371, 410, 411, 542, 548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 642, 816, 839, 840, 869, 879, 885, 892, 907, 914, 915, 916, 917, 922, 924, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 962, 963, 964, 965, 966, 968, 984, 996, 997, 998, 999, 1000, 1007, 1013, 1015, 1023, 1025, 1030, 1039, 1041, 1042, 1046, 1050, 1064, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1200, 1236, 1246, 1247, 1257], "overhead": [61, 63, 494, 500, 631, 640, 806, 807], "usual": [61, 63, 86, 110, 126, 190, 191, 197, 200, 205, 210, 220, 222, 282, 316, 332, 348, 420, 460, 461, 487, 500, 504, 513, 516, 526, 537, 539, 542, 556, 564, 570, 599, 644, 660, 701, 756, 791, 792, 806, 815, 818, 838, 846, 858, 860, 865, 875, 881, 883, 887, 901, 903, 907, 924, 926, 930, 949, 985, 986, 993, 1014, 1028, 1046, 1047, 1062, 1063, 1064, 1065, 1075, 1079, 1084, 1085, 1086, 1087, 1091, 1094, 1097, 1098, 1104, 1106, 1108, 1109, 1111, 1114, 1120, 1125, 1187, 1194, 1195, 1201, 1223, 1224, 1230, 1243], "exhibit": [61, 63, 268, 372, 737, 994, 1015, 1020], "glitch": [61, 63, 192, 197, 993, 994], "caus": [61, 63, 155, 190, 193, 205, 259, 265, 275, 278, 282, 522, 726, 994, 1041, 1046, 1210], "hiccup": [61, 63, 197, 308, 1064], "twist": [61, 63, 871], "amazingli": [61, 63, 932], "multi": [62, 522, 1194, 1201], "chmod": [62, 197, 397, 914, 915, 933, 938, 940, 942, 945, 997, 1001], "snippet": [62, 65, 116, 119, 210, 229, 351, 382, 524, 707, 993, 1087], "subdirectori": [62, 144, 196, 205, 217, 219, 242, 333, 349, 374, 375, 376, 377, 378, 379, 380, 517, 523, 525, 526, 530, 533, 534, 536, 537, 585, 599, 840, 862, 913, 914, 915, 928, 938, 940, 957, 972, 976, 993, 994, 1075, 1176, 1228], "stuff": [62, 65, 72, 80, 102, 126, 135, 148, 189, 192, 196, 205, 210, 222, 226, 229, 242, 251, 252, 273, 287, 306, 308, 329, 371, 372, 383, 401, 500, 506, 512, 628, 675, 838, 840, 846, 855, 887, 917, 948, 956, 962, 968, 984, 992, 1022, 1084, 1086, 1143, 1183, 1188, 1190, 1221], "strace": [62, 65, 99, 148, 190, 192, 415, 845, 850, 903, 1011, 1017, 1030, 1046, 1055, 1062, 1254], "pid": [62, 65, 190, 192, 193, 499, 906, 919, 924, 926, 1030, 1046, 1049, 1055, 1059, 1060], "4677": 62, "11hello": 62, "clock_gettime64": 62, "clock_monoton": [62, 818, 1012, 1046], "tv_sec": [62, 1046], "164646": 62, "tv_nsec": [62, 1046], "833862215": 62, "_newselect": 62, "tv_usec": 62, "500000": [62, 987, 993, 1193], "unfinish": [62, 192], "4679": 62, "resum": [62, 773, 774, 777, 778, 779, 883, 1046], "timeout": [62, 813, 815, 817, 1011, 1216], "mi": [62, 270], "845864201": 62, "4678": [62, 265], "fd": [62, 152, 200, 262, 306, 602, 846, 992, 1006, 1010, 1011, 1012, 1014, 1018, 1019, 1020, 1021, 1024, 1026, 1029, 1052, 1055, 1059, 1145], "fourth": 62, "involv": [62, 80, 190, 193, 197, 200, 252, 306, 318, 319, 340, 372, 403, 480, 488, 494, 500, 585, 652, 654, 744, 858, 887, 985, 1063, 1073, 1075], "occasion": [62, 178, 205, 222, 251, 268, 490, 504, 508, 737, 887, 932, 1111, 1125, 1202], "due": [62, 197, 222, 542, 807, 1216], "weird": [62, 155, 306, 351, 359, 490, 781, 820, 846, 871, 1041, 1059], "gil": [62, 222, 226, 318, 319, 340, 341, 344, 1188], "jitter": [62, 1048, 1050], "heavi": [62, 214, 222, 372, 552, 994, 1111, 1246], "usr": [62, 171, 190, 191, 195, 201, 210, 213, 218, 220, 242, 249, 250, 259, 262, 265, 275, 278, 282, 285, 288, 303, 308, 310, 320, 324, 346, 352, 358, 364, 394, 397, 513, 516, 520, 526, 534, 535, 537, 538, 539, 760, 793, 803, 838, 860, 887, 913, 919, 932, 944, 976, 979, 992, 994, 1040, 1050, 1059, 1062, 1063, 1064, 1065, 1075, 1078, 1080, 1087, 1090, 1114, 1176, 1191, 1204, 1216, 1223, 1230], "env": [62, 186, 191, 213, 308, 526, 1040, 1050, 1114, 1142, 1176, 1191, 1204], "hello_left": 62, "hello_right": 62, "rjust": [62, 210, 278, 324], "hello_middl": 62, "center": [62, 65, 213, 255, 270, 272, 278, 282, 303, 310, 324, 342, 346, 352, 358, 364, 368, 391, 498, 598], "t1": [62, 209, 272, 282, 303, 307, 324, 346, 358, 1031], "t2": [62, 209, 265, 272, 282, 303, 346, 358, 1031], "t3": 62, "async": [62, 65, 66, 67, 190, 222, 226, 259, 265, 275, 276, 278, 341, 345, 771, 1038, 1061, 1188, 1256], "await": [62, 66, 341], "epoll_wait": 62, "201": [62, 193, 223, 240, 249, 262, 265, 270, 272, 275, 278, 282, 285, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368], "multiplex": [62, 993, 1012, 1046, 1258], "create_task": 62, "sysf": [62, 126, 127, 128, 130, 136, 137, 147, 187, 237, 306, 384, 385, 528, 530, 601, 840, 843, 844, 889, 984, 985, 992, 994, 1025, 1026, 1029, 1245, 1252], "unmaintain": [62, 296, 305, 306, 349, 416, 1064, 1129, 1238], "immun": [62, 659, 818], "hotplug": [62, 992], "reset": [62, 189, 549, 551, 802, 803, 804, 819, 838, 1210, 1257], "pullup": 62, "pulldown": 62, "rpi": [62, 168, 201, 383, 887, 888, 992], "hope": [62, 190, 192, 195, 197, 201, 415], "major": [62, 195, 208, 259, 265, 275, 278, 315, 317, 504, 511, 514, 659, 846, 853, 918, 1047, 1112, 1118, 1133], "releas": [62, 171, 193, 219, 333, 349, 358, 375, 376, 377, 378, 379, 465, 517, 523, 533, 536, 803, 814, 815, 817, 840, 846, 860, 985, 992, 1035, 1040, 1077, 1080, 1112, 1222, 1253], "ton": [62, 801, 927, 989, 1014, 1046, 1050, 1241], "bartosz": 62, "golaszewski": 62, "gpiochip0": [62, 867, 1028], "ioctl": [62, 306, 486, 853, 855, 881, 889, 890, 895, 901, 988, 992], "crw": [62, 851, 918, 970, 992, 993, 994], "254": [62, 211, 262, 265, 270, 272, 275, 282, 285, 303, 310, 320, 324, 330, 346, 358, 364, 368], "request": [62, 65, 95, 100, 127, 143, 191, 192, 195, 252, 254, 279, 285, 341, 358, 505, 544, 566, 580, 750, 751, 754, 755, 845, 889, 1014, 1029, 1221], "request_lin": [62, 65], "consum": [62, 144, 159, 192, 195, 212, 262, 341, 374, 498, 509, 564, 815, 817, 912, 920, 921, 928, 1035, 1036, 1047, 1052, 1054, 1056, 1059, 1087, 1109, 1118, 1145, 1200, 1246], "mytest": 62, "config": [62, 99, 131, 132, 179, 180, 186, 191, 193, 195, 201, 209, 303, 320, 324, 374, 401, 408, 417, 507, 512, 601, 803, 840, 860, 888, 970, 992, 993, 994, 1001, 1077, 1087, 1216], "lineset": 62, "set_valu": [62, 65, 817], "all_io": 62, "transform": [62, 65, 174, 210, 225, 226, 229, 231, 241, 246, 247, 249, 250, 257, 268, 270, 273, 276, 299, 306, 308, 317, 323, 341, 354, 372, 376, 379, 382, 494, 605, 606, 618, 620, 673, 728, 729, 730, 731, 732, 733, 735, 736, 737, 738, 739, 740, 771, 795, 840, 1073, 1093, 1137, 1171, 1188], "ntime": [62, 1097], "task": [62, 65, 79, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 143, 205, 247, 260, 273, 287, 290, 293, 323, 329, 401, 404, 406, 407, 410, 411, 412, 415, 524, 840, 914, 915, 933, 975, 984, 992, 995, 1010, 1025, 1031, 1044, 1045, 1047, 1048, 1188, 1221], "interv": [62, 91, 131, 229, 259, 265, 266, 275, 278, 282, 303, 341, 401, 586, 588, 601, 602, 743, 817, 818, 1012, 1022, 1046, 1050], "none": [62, 139, 170, 186, 189, 190, 195, 200, 209, 211, 223, 233, 240, 241, 250, 255, 256, 259, 262, 265, 271, 272, 275, 278, 282, 285, 291, 300, 303, 307, 308, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 392, 484, 485, 506, 522, 535, 649, 736, 738, 1011, 1028, 1056, 1084, 1087, 1109, 1135, 1143, 1213, 1228], "itertool": [62, 287, 289, 341, 1091], "cram": [62, 183, 220, 512, 855, 1046, 1084, 1201], "goe": [62, 87, 124, 134, 193, 195, 210, 315, 494, 549, 614, 717, 738, 747, 797, 851, 887, 930, 931, 1017, 1044, 1050, 1060, 1063, 1071, 1114, 1117, 1137], "stuff_raw": 62, "mod": [62, 278, 303, 323, 865], "sidewai": [62, 226, 229, 284, 410, 411, 1092, 1093], "numpi": [62, 222, 226, 241, 260, 266, 273, 308, 314, 342, 344, 347, 369, 506, 1111, 1187, 1191, 1194, 1202, 1206, 1216, 1223], "transpos": [62, 948], "col": 62, "tolist": 62, "outsid": [62, 152, 278, 522, 553, 566, 646, 654, 659, 802, 803, 877, 949, 1031, 1047, 1087], "instanti": [62, 135, 249, 401, 512, 544, 555, 569, 570, 583, 584, 585, 588, 670, 699, 717, 739, 765, 771, 793, 806, 807, 1099, 1100, 1191], "coro": [62, 771, 773, 774, 776, 777, 778, 779], "cannot": [62, 112, 113, 186, 190, 191, 192, 197, 201, 212, 213, 219, 220, 222, 229, 249, 282, 309, 312, 346, 383, 460, 461, 464, 465, 484, 486, 488, 491, 494, 507, 509, 513, 522, 526, 537, 547, 570, 598, 637, 646, 649, 651, 654, 655, 678, 713, 714, 716, 717, 719, 720, 724, 744, 747, 750, 756, 782, 792, 793, 797, 803, 805, 815, 817, 825, 883, 887, 892, 907, 925, 930, 933, 944, 959, 967, 1003, 1047, 1056, 1079, 1080, 1081, 1085, 1087, 1099, 1104, 1111, 1119, 1120, 1126, 1127, 1137, 1207, 1209, 1210, 1221, 1246], "stuff_raw2": 62, "05": [62, 99, 126, 162, 193, 200, 205, 249, 284, 307, 314, 325, 334, 337, 396, 414, 538, 1192], "runtimeerror": [62, 213, 249, 303, 382, 1084, 1086], "reus": [62, 124, 205, 211, 1079, 1129], "alreadi": [62, 82, 126, 135, 151, 190, 191, 193, 201, 212, 214, 222, 226, 282, 309, 312, 477, 488, 494, 514, 546, 566, 568, 579, 582, 601, 618, 698, 840, 846, 860, 867, 875, 885, 887, 890, 907, 984, 992, 993, 994, 1001, 1014, 1015, 1017, 1022, 1023, 1025, 1042, 1078, 1084, 1111, 1137, 1216, 1221, 1223, 1230], "bare": [62, 80, 82, 89, 91, 110, 168, 190, 415, 985, 993], "create_coro": 62, "ctor": [62, 217, 226, 275, 324, 357, 598, 620, 628, 645, 648, 649, 652, 662, 664, 699, 722, 747, 748, 750, 754, 755, 780, 788, 803, 819, 820, 906], "nest": [62, 186, 250, 263, 272, 282, 289, 293, 310, 320, 428, 457, 458, 484, 518, 726, 765, 817, 834, 892, 1084, 1127], "_blink": 62, "coro_cr": 62, "creator": [62, 184, 201], "create_factory_for_blink": 62, "blinkfunc": 62, "blink_func": 62, "stuff_decorator_stage1": 62, "stage1": 62, "stararg": [62, 1085, 1088, 1109], "func": [62, 249, 259, 265, 275, 278, 309, 323, 604, 673, 743, 758, 765, 806, 1085, 1089], "becom": [62, 70, 80, 91, 94, 134, 139, 143, 190, 192, 218, 230, 309, 312, 332, 334, 337, 348, 443, 473, 475, 482, 485, 506, 528, 542, 546, 585, 747, 802, 803, 804, 887, 925, 944, 977, 993, 994, 1001, 1044, 1047, 1048, 1084, 1090, 1120, 1222, 1228, 1243, 1244], "obsolet": [62, 222, 1111], "prog": [62, 263, 382], "demo": [62, 65, 99, 100, 124, 126, 134, 144, 148, 156, 157, 190, 213, 217, 222, 225, 227, 230, 231, 234, 242, 249, 257, 260, 263, 266, 268, 273, 279, 296, 299, 302, 305, 306, 326, 327, 370, 371, 374, 376, 397, 415, 507, 511, 526, 532, 534, 537, 538, 539, 588, 596, 727, 804, 840, 917, 920, 921, 922, 943, 944, 984, 1013, 1055, 1064, 1111, 1194, 1227, 1247, 1251], "opposit": [62, 194, 458, 994, 1047, 1201], "futur": [62, 65, 126, 142, 197, 262, 282, 294, 295, 297, 306, 354, 373, 374, 388, 410, 411, 482, 524, 566, 737, 771, 813, 815, 816, 839, 840, 897, 1241], "blueprint": 65, "box": [65, 176, 180, 222, 985, 992, 1111], "quickli": [65, 230, 317, 332, 344, 345, 348, 400, 464, 544, 993, 1243], "glt2024": [65, 66], "matrix": [65, 211, 213, 314, 404, 406, 495], "complain": [65, 192, 201, 205, 219, 444, 637, 652, 653, 862, 890, 1001], "forev": [65, 212, 464, 465], "wait_button": 65, "enclos": [65, 210, 278, 457], "secon": 65, "edg": [65, 208, 252, 513, 869, 1028, 1029], "timestamp": [65, 131, 255, 265, 285, 314, 318, 319, 340, 342, 344, 346, 352, 374, 506, 807, 848, 950, 970, 1004, 1055], "bounc": [65, 495, 906], "debounce_period": 65, "second": [65, 91, 189, 192, 193, 197, 209, 222, 228, 249, 255, 259, 263, 265, 270, 275, 278, 282, 308, 310, 372, 383, 418, 428, 482, 498, 506, 508, 509, 510, 511, 516, 518, 522, 526, 534, 535, 537, 538, 539, 540, 578, 582, 583, 584, 588, 591, 601, 637, 652, 700, 702, 703, 743, 772, 773, 792, 803, 804, 817, 818, 834, 835, 836, 897, 925, 930, 933, 993, 1012, 1015, 1022, 1046, 1055, 1059, 1063, 1064, 1079, 1080, 1081, 1131, 1139, 1216, 1228, 1241], "print_ev": 65, "aha": [65, 192, 212, 223, 382, 850, 867, 993, 1201, 1228], "asynchron": [65, 66, 190, 259, 265, 275, 278, 345, 383, 1009, 1026, 1029, 1059, 1060, 1140], "imageview": 65, "vimg": 65, "img": [65, 176, 211, 213, 368, 493, 887, 992], "tab": [65, 195, 196, 209, 278, 306, 324, 388, 439, 887, 948, 1131, 1157, 1247], "dbu": [65, 66, 262, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364, 926], "termin": [65, 67, 131, 189, 191, 195, 209, 220, 242, 288, 290, 306, 309, 312, 315, 317, 319, 419, 422, 426, 429, 432, 439, 451, 457, 480, 500, 506, 514, 515, 540, 542, 568, 569, 601, 620, 649, 771, 777, 804, 810, 903, 923, 926, 930, 931, 932, 948, 970, 980, 981, 1014, 1032, 1036, 1041, 1046, 1058, 1059, 1060, 1116, 1118, 1122, 1137, 1150, 1167, 1195, 1201, 1204, 1252], "busctl": 65, "introspect": [65, 171, 186, 1046], "outcom": [66, 178, 226, 231, 317, 374, 887, 947, 948, 1071, 1144], "en": [66, 80, 165, 171, 195, 207, 217, 278, 306, 722], "latest": [66, 171, 201, 514, 517, 843, 858, 864, 1216], "async_watch_line_valu": 66, "find_line_by_nam": 66, "get_chip_info": 66, "get_line_info": 66, "get_line_valu": 66, "get_multiple_line_valu": 66, "makefil": [66, 70, 99, 162, 171, 252, 295, 297, 534, 540, 856, 860, 888, 889, 1067, 1071, 1073, 1080, 1081], "reconfigure_input_to_output": 66, "toggle_line_valu": 66, "toggle_multiple_line_valu": 66, "watch_line_info": 66, "watch_line_ris": 66, "watch_line_valu": 66, "watch_multiple_line_valu": 66, "yuri": [66, 1140], "selivanov": [66, 1140], "awesom": [66, 242, 1221], "david": [66, 222, 225, 226, 234, 247, 250, 273, 299, 314, 318, 319, 323, 340, 344, 345, 398, 399, 751, 800], "beazlei": [66, 222, 225, 226, 234, 247, 250, 273, 299, 318, 319, 323, 340, 344, 345, 398, 399], "lennart": 66, "p\u00f6ttere": 66, "recommend": [66, 168, 201, 222, 230, 242, 275, 494, 667, 698, 887, 948, 993, 1143, 1197, 1205], "0pointer": 66, "blog": [66, 186, 190, 193, 200, 205, 805], "api": [66, 134, 190, 197, 214, 237, 251, 278, 408, 412, 840, 843, 850, 858, 865, 869, 881, 984, 1025, 1037, 1045, 1048, 1056, 1143, 1199, 1217, 1245, 1246], "systemd": [66, 67, 207, 262, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364, 371, 887, 926, 979, 994, 1059, 1236], "freedesktop": [66, 230], "wiki": [66, 193, 207, 318, 319, 340, 344, 860, 887], "libssl": [66, 867, 992], "libreadlin": 66, "libffi": 66, "libsystemd": 66, "wget": [66, 176, 195, 197, 201, 320, 1075, 1077], "ftp": [66, 262, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364, 975, 1077], "readlin": [66, 213, 240, 242, 249, 250, 262, 263, 269, 278, 285, 310, 320, 346, 352, 358, 364, 371, 389, 948, 1137], "love": [67, 171, 316, 1183], "allow": [67, 228, 229, 249, 278, 437, 504, 730, 803, 838, 869, 892, 1150, 1221, 1241], "style": [67, 131, 186, 190, 195, 259, 265, 268, 275, 278, 317, 373, 380, 490, 505, 506, 507, 620, 645, 646, 651, 685, 719, 722, 734, 743, 748, 779, 795, 821, 825, 829, 830, 831, 839, 840, 855, 904, 1028, 1115, 1157, 1182, 1193], "subsystem": [67, 88, 99, 100, 105, 106, 126, 147, 208, 230, 237, 242, 279, 295, 297, 299, 305, 306, 315, 317, 318, 334, 340, 371, 376, 379, 840, 865, 883, 897, 917, 922, 924, 984, 985, 992, 993, 994, 1028, 1044, 1086, 1221, 1245, 1246, 1252], "stori": [67, 190, 191, 192, 196, 197, 201, 218, 219, 251, 314, 475, 628, 646, 660, 825, 862, 865, 888, 927, 988, 1005], "pointlessli": 67, "light": [67, 86, 200, 927, 1110, 1221], "notifi": [67, 548, 815, 1009, 1056, 1204], "press": [67, 189, 867, 904, 948, 985], "hint": [67, 126, 139, 152, 205, 278, 290, 319, 421, 544, 604, 614, 618, 730, 914, 915, 928, 997, 1046], "asyncron": 67, "fit": [67, 106, 201, 206, 211, 213, 368, 374, 438, 443, 543, 667, 743, 765, 846, 887, 985, 1191, 1193, 1202], "addition": [67, 108, 189, 192, 443, 547, 564], "textual": [67, 68, 220, 222, 599], "sdbu": [67, 68], "client": [67, 124, 134, 168, 195, 197, 208, 253, 257, 285, 299, 504, 552, 553, 566, 806, 807, 988, 1001, 1003, 1011, 1056, 1200, 1216], "glt": [68, 187], "libgpiod": [68, 136, 143, 168, 187, 345, 383, 385, 840], "raspberri": [68, 80, 99, 106, 108, 134, 147, 168, 185, 202, 206, 232, 306, 345, 400, 402, 403, 414, 416, 602, 840, 864, 868, 887, 891, 896, 902, 905, 908, 984, 991, 993, 994, 1005, 1050, 1063, 1065, 1070, 1073, 1075, 1077, 1088, 1110, 1114, 1202, 1204, 1215, 1236, 1245], "2024": [68, 125, 162, 163, 166, 265, 381, 414], "taskgroup": 68, "intro": [68, 95, 126, 143, 144, 162, 187, 217, 241, 251, 260, 273, 274, 287, 290, 309, 312, 317, 323, 329, 341, 642, 743, 751, 771, 795, 840, 984, 1008, 1025, 1027, 1029, 1188, 1242, 1244, 1256], "biographi": [68, 250, 299, 345, 1188], "increasingli": 70, "whose": [70, 201, 259, 265, 275, 278, 314, 324, 410, 411, 564, 634, 738, 739, 985, 1087, 1221, 1228], "mainten": [70, 439, 465, 484, 1080], "easier": [70, 82, 87, 94, 211, 252, 506, 552, 657, 742, 887, 1241], "never": [70, 112, 113, 190, 191, 192, 197, 210, 272, 278, 282, 324, 342, 443, 464, 480, 491, 494, 504, 542, 564, 643, 724, 726, 803, 825, 826, 828, 830, 927, 985, 1008, 1033, 1063], "simpler": [70, 201, 252, 316, 319, 422, 481, 509, 681, 883, 887, 993, 1005], "wors": [70, 178, 193, 278, 490, 506, 765, 1010, 1224], "everytbodi": 71, "runtim": [71, 159, 171, 190, 201, 223, 227, 251, 275, 278, 358, 419, 440, 488, 498, 499, 524, 526, 537, 539, 568, 569, 582, 596, 631, 640, 680, 698, 699, 743, 785, 792, 806, 807, 1031, 1062, 1068, 1069, 1099, 1117, 1129, 1194, 1195], "dispatch": [71, 341, 358, 380, 631, 640, 716, 719, 720, 824, 825, 826, 828, 839, 840], "hell": [71, 242, 276, 490, 543, 757, 788, 810, 877, 912, 1038, 1201], "destructor": [71, 72, 99, 108, 134, 144, 252, 268, 289, 315, 317, 355, 380, 399, 400, 548, 562, 590, 600, 614, 620, 629, 635, 642, 643, 644, 645, 650, 652, 667, 715, 716, 728, 729, 730, 731, 732, 733, 735, 736, 737, 738, 739, 740, 752, 756, 783, 799, 808, 814, 816, 820, 825, 837, 839, 840, 848, 879, 892, 904, 1233], "opportun": [71, 197, 200, 210, 222, 241, 494, 734, 1100, 1244], "shoot": [71, 950], "oneself": [71, 1246], "encapsul": [72, 75, 250, 263, 268, 315, 317, 341, 383, 504, 544, 548, 562, 588, 590, 591, 592, 593, 594, 595, 596, 597, 600, 607, 609, 620, 642, 643, 665, 668, 671, 687, 693, 697, 706, 709, 710, 715, 724, 725, 726, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 743, 752, 783, 799, 808, 816, 825, 837, 839, 840, 856, 889, 1056, 1112, 1242], "hide": [72, 251, 263, 319, 1112], "fanci": [72, 1132, 1194, 1214], "whatnot": [72, 266, 815, 887, 985, 993, 1011, 1041], "boost": [73, 268, 532, 539, 620, 771, 1049, 1259], "feel": [73, 190, 192, 201, 222, 372, 637, 735, 737, 738, 743, 1030, 1048, 1111], "cluster_ecpropos": [74, 75, 76, 89, 840], "cluster_ecproposal_ec1": [74, 75, 76, 89, 840], "cluster_ecproposal_ec1_mt": [74, 75, 76, 89, 840], "cluster_ecproposal_ec1_cxx": [74, 75, 76, 89, 840], "cluster_ecproposal_ec1_linux": [74, 75, 76, 840], "cluster_ecproposal_ec2": [74, 76, 840], "cluster_ecproposal_ec2_python": [74, 76, 840], "ecproposal_ec1_git": [74, 75, 76, 840], "ecproposal_ec1_mt_exercise_mt_race_fix": [74, 75, 76, 89, 840], "ex": [74, 75, 76, 80, 89, 178, 250, 263, 614, 631, 793, 840, 933, 948, 1223], "avoid": [74, 75, 76, 80, 89, 190, 197, 205, 282, 375, 378, 430, 465, 563, 598, 600, 610, 644, 648, 699, 840, 885, 977, 993, 1242], "ecproposal_ec1_mt_exercise_mt_rac": [74, 75, 76, 89, 840], "ecproposal_ec1_mt_lock": [74, 75, 76, 89, 840], "semaphor": [74, 75, 76, 78, 80, 89, 91, 185, 214, 215, 237, 259, 265, 275, 278, 415, 815, 840, 879, 1035, 1246, 1256], "ecproposal_ec1_cxx_build": [74, 75, 76, 89, 840], "ecproposal_ec1_mt_wait": [74, 75, 76, 89, 840], "ecproposal_ec1_cxx_oo_bas": [74, 75, 76, 840], "ecproposal_ec1_cxx_ifac": [74, 75, 76, 840], "ecproposal_ec1_cxx_unittest": [74, 75, 76, 840], "ecproposal_ec1_linux_gpio": [74, 75, 76, 840], "ecproposal_ec1_linux_dev_mgmt": [74, 75, 76, 840], "ecproposal_ec1_linux_exercise_led_displai": [74, 75, 76, 840], "temperatur": [74, 75, 76, 80, 84, 93, 96, 99, 116, 121, 122, 126, 127, 128, 129, 134, 135, 136, 144, 147, 152, 226, 259, 306, 341, 354, 355, 403, 406, 421, 423, 425, 543, 549, 554, 575, 589, 590, 591, 592, 593, 594, 595, 596, 600, 601, 602, 613, 631, 642, 720, 753, 824, 826, 828, 830, 840, 887, 984, 991, 1023, 1025, 1042, 1099, 1176, 1191, 1192, 1193, 1194], "displai": [74, 75, 76, 80, 114, 115, 117, 118, 125, 127, 136, 144, 195, 259, 265, 275, 278, 303, 306, 308, 310, 315, 320, 324, 346, 352, 358, 364, 406, 498, 591, 840, 923, 970, 979, 992, 1046, 1223], "ecproposal_ec1_linux_exercise_avg_sensor": [74, 75, 76, 840], "averag": [74, 75, 76, 80, 86, 87, 226, 262, 266, 282, 317, 341, 547, 563, 593, 600, 840, 1050, 1145], "ecproposal_ec1_linux_bas": [74, 75, 76, 840], "ecproposal_ec1_linux_exercise_avg_sensor_parallel": [74, 75, 76, 840], "ecproposal_ec1_linux_exercise_sensor": [74, 75, 76, 840], "ecproposal_ec2_python_web_sensor": [74, 76, 840], "ecproposal_ec2_python_flask": [74, 76, 840], "ecproposal_ec2_python_exercise_avg_displai": [74, 76, 840], "ecproposal_ec2_python_bas": [74, 76, 840], "ecproposal_ec2_python_exercise_sensor": [74, 76, 840], "qualiti": [75, 197, 251, 314, 993, 1215], "assur": 75, "characterist": 75, "polymorph": [76, 108, 126, 127, 142, 249, 250, 263, 315, 317, 319, 334, 337, 380, 506, 507, 548, 562, 590, 642, 715, 716, 719, 720, 740, 801, 806, 824, 825, 826, 839, 840, 1241, 1244], "concurr": [76, 222, 226, 276, 345, 793, 877, 1095, 1188], "increment": [77, 208, 251, 265, 268, 291, 314, 422, 426, 430, 450, 459, 466, 470, 472, 476, 479, 483, 492, 496, 501, 502, 620, 637, 745, 783, 837, 839, 840, 919, 1032, 1033, 1034, 1055, 1056, 1095], "lossi": 77, "access": [78, 80, 90, 112, 113, 116, 122, 131, 159, 165, 187, 191, 192, 193, 195, 197, 210, 220, 230, 237, 249, 259, 262, 265, 268, 275, 278, 285, 288, 303, 306, 310, 320, 324, 334, 346, 351, 352, 358, 364, 383, 397, 400, 402, 434, 473, 494, 495, 522, 526, 553, 569, 594, 595, 596, 597, 620, 643, 655, 657, 660, 661, 663, 664, 678, 703, 717, 724, 728, 731, 732, 735, 736, 737, 738, 739, 740, 754, 771, 786, 790, 802, 840, 845, 855, 858, 864, 875, 883, 887, 889, 905, 920, 921, 924, 933, 935, 936, 942, 959, 984, 994, 1003, 1004, 1010, 1014, 1018, 1020, 1024, 1028, 1032, 1046, 1047, 1055, 1060, 1062, 1082, 1087, 1094, 1095, 1098, 1117, 1124, 1126, 1139, 1156, 1192, 1209, 1223, 1246], "flavor": [78, 89, 190, 534, 792, 797], "stash": 79, "resolv": [79, 124, 174, 201, 205, 259, 262, 265, 268, 275, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364, 461, 487, 656, 1005, 1062, 1065, 1192, 1193], "suffic": [79, 197, 432, 482], "purpos": [79, 80, 82, 131, 142, 159, 165, 183, 191, 195, 201, 222, 241, 259, 265, 275, 278, 290, 303, 372, 373, 400, 428, 506, 525, 528, 540, 645, 677, 717, 807, 887, 920, 921, 930, 993, 1015, 1020, 1041, 1062, 1081, 1111, 1193, 1222, 1245, 1252], "unifi": [80, 139, 229, 670], "intention": [80, 251, 324, 758], "power": [80, 91, 189, 191, 206, 211, 251, 268, 398, 399, 400, 418, 430, 431, 473, 482, 887, 897, 904, 918, 985, 989, 992, 993, 994, 1013, 1028, 1046, 1050, 1088, 1106, 1110, 1112, 1118, 1123, 1135, 1140, 1211], "being": [80, 83, 127, 178, 190, 193, 194, 200, 214, 222, 228, 249, 278, 282, 341, 355, 374, 397, 443, 470, 487, 522, 543, 546, 631, 655, 698, 801, 803, 807, 809, 815, 838, 869, 883, 887, 923, 1005, 1020, 1046, 1094, 1101, 1111, 1114, 1192, 1230, 1233, 1246], "address": [80, 101, 108, 112, 113, 126, 127, 148, 159, 190, 192, 193, 194, 197, 230, 237, 242, 249, 251, 252, 268, 270, 296, 305, 306, 317, 326, 327, 368, 370, 371, 394, 399, 400, 408, 461, 463, 472, 476, 479, 482, 483, 491, 492, 496, 501, 502, 542, 548, 553, 556, 562, 564, 566, 571, 590, 591, 592, 593, 594, 595, 596, 597, 600, 601, 642, 652, 657, 745, 755, 756, 783, 797, 816, 837, 839, 840, 867, 871, 883, 885, 914, 915, 916, 917, 920, 921, 922, 924, 928, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 962, 963, 964, 965, 966, 968, 984, 986, 988, 993, 994, 996, 997, 998, 999, 1000, 1005, 1007, 1011, 1013, 1015, 1022, 1023, 1025, 1030, 1038, 1039, 1041, 1042, 1045, 1047, 1055, 1062, 1064, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1080, 1095, 1098, 1192, 1193, 1212, 1221], "crucial": [80, 190, 214, 497, 679], "piec": [80, 183, 191, 484, 620, 672, 993, 1024], "mmu": [80, 190, 858, 901, 925, 1046], "sophist": [80, 259, 543, 564, 601, 739], "permiss": [80, 99, 102, 103, 104, 126, 162, 163, 171, 225, 226, 230, 232, 242, 249, 265, 285, 296, 305, 320, 323, 326, 341, 370, 383, 392, 397, 398, 399, 400, 402, 590, 642, 729, 816, 838, 839, 840, 846, 887, 914, 915, 917, 920, 921, 922, 925, 931, 934, 938, 939, 940, 941, 942, 944, 945, 946, 950, 962, 965, 967, 968, 970, 984, 985, 995, 998, 1000, 1001, 1004, 1005, 1010, 1013, 1014, 1015, 1018, 1020, 1021, 1023, 1025, 1039, 1042, 1045, 1047, 1048, 1060, 1086, 1188, 1216, 1223, 1247, 1256], "nativ": [80, 99, 106, 126, 162, 189, 195, 197, 223, 259, 295, 297, 315, 404, 840, 887, 984, 1063, 1067, 1070, 1073, 1197, 1200, 1206], "varieti": [80, 500, 924, 1062, 1244], "storag": [80, 195, 200, 534, 756, 887, 924, 985, 993, 1010, 1030, 1257], "underli": [80, 171, 250, 257, 273, 282, 323, 397, 402, 793, 994, 1188, 1193, 1197], "platform": [80, 171, 197, 250, 259, 263, 265, 275, 278, 282, 290, 308, 358, 375, 378, 390, 399, 417, 867, 887, 993, 994, 1028, 1046, 1176, 1221, 1223], "offer": [80, 190, 200, 241, 316, 458, 655, 659], "popular": [80, 201, 214, 218, 453, 522, 751, 912, 994, 1046, 1062, 1079, 1105, 1190, 1196, 1204, 1217, 1244], "often": [80, 91, 189, 190, 191, 192, 222, 272, 282, 309, 312, 332, 348, 439, 449, 470, 526, 535, 544, 556, 670, 793, 887, 948, 1024, 1091, 1111, 1125, 1243, 1244], "appropri": [80, 128, 139, 177, 183, 190, 200, 205, 210, 242, 282, 380, 439, 453, 465, 600, 807, 883, 992, 1004, 1055, 1194, 1200, 1244], "prototyp": [80, 383, 430, 525, 542, 604, 637, 754, 887, 985, 993, 1006, 1084, 1200], "higher": [80, 149, 190, 201, 259, 265, 275, 278, 838, 885, 985, 1047, 1049, 1056, 1064, 1073, 1200, 1243], "fulli": [80, 194, 197, 201, 226, 486, 601, 1056], "distribut": [80, 195, 200, 205, 217, 222, 242, 252, 270, 282, 394, 517, 542, 588, 596, 810, 858, 887, 926, 927, 1048, 1111], "vogu": 80, "serial": [80, 189, 190, 200, 230, 265, 266, 278, 920, 921, 923, 1245, 1252], "groundwork": 80, "lai": 80, "instruct": [80, 152, 189, 193, 197, 220, 251, 306, 315, 317, 494, 507, 585, 802, 817, 1015, 1034, 1046, 1078, 1176], "consolid": [80, 222, 372], "makeri": 80, "everybodi": [80, 195, 316, 374, 486, 552, 646, 685, 729, 918, 1114, 1118, 1221, 1241], "clarifi": [80, 372], "earli": [80, 189, 222, 226, 231, 316, 513, 892, 904, 919, 1048, 1082, 1099, 1137, 1243], "matter": [80, 189, 194, 195, 197, 205, 222, 228, 230, 424, 468, 500, 508, 524, 534, 544, 644, 645, 657, 660, 747, 786, 793, 803, 805, 862, 887, 889, 933, 944, 986, 992, 994, 1005, 1086, 1111, 1213, 1223, 1233, 1244], "rewrit": [80, 82, 190, 506], "translat": [80, 93, 94, 210, 223, 241, 278, 282, 285, 288, 324, 792, 1155], "flask": [80, 95, 187, 226, 229, 1085], "network": [80, 112, 113, 159, 176, 185, 186, 187, 190, 197, 207, 208, 230, 232, 237, 262, 278, 285, 288, 299, 303, 305, 306, 310, 320, 324, 326, 341, 346, 352, 358, 364, 370, 399, 415, 416, 500, 553, 840, 841, 864, 904, 920, 921, 923, 924, 926, 984, 987, 988, 993, 994, 995, 1005, 1009, 1010, 1013, 1014, 1025, 1044, 1252, 1256], "oppos": [82, 126, 189, 229, 263, 270, 280, 315, 371, 372, 465, 508, 535, 631, 972, 986, 993, 1001, 1035, 1048, 1055, 1060, 1079, 1080, 1106, 1117, 1118, 1201, 1209], "ahead": [82, 205, 504, 1101], "optimz": 82, "donald": [82, 493], "knuth": [82, 493], "prematur": [82, 493, 497], "optim": [82, 191, 303, 315, 346, 380, 480, 496, 497, 501, 502, 535, 825, 840, 871, 1200, 1240, 1242], "evil": [82, 268, 434, 484, 493, 497, 535, 657], "knowledg": [83, 87, 309, 312, 315, 601, 736, 738, 887, 986, 994, 1088, 1110, 1215], "onewir": [83, 87, 99, 108, 126, 127, 128, 136, 144, 147, 306, 317, 354, 397, 400, 589, 590, 642, 840, 984, 991, 992, 1023, 1025, 1042], "protocol": [83, 182, 195, 228, 229, 239, 261, 264, 266, 267, 271, 274, 277, 280, 289, 302, 304, 309, 312, 318, 319, 321, 322, 325, 328, 340, 341, 343, 344, 345, 347, 351, 353, 359, 362, 363, 403, 406, 438, 446, 553, 566, 845, 975, 986, 988, 992, 994, 995, 1003, 1004, 1024, 1084, 1088, 1092, 1099], "aspect": [83, 131, 222, 226, 252, 276, 315, 317, 345, 549, 918, 992, 994, 1188, 1215, 1221, 1246], "regard": [83, 197, 222, 383, 948, 1111, 1118, 1217, 1221], "filesystem": [83, 87, 108, 126, 189, 192, 201, 230, 232, 242, 293, 358, 376, 379, 397, 402, 507, 517, 523, 533, 601, 839, 840, 887, 913, 993, 1005, 1021, 1028, 1046, 1065, 1221, 1247, 1252, 1254, 1258], "hwmon": [83, 87, 127, 403, 406], "composit": [84, 108, 130, 133, 144, 226, 252, 298, 316, 317, 334, 512, 541, 548, 562, 576, 590, 642, 840, 1091, 1244], "mock": [84, 126, 127, 142, 143, 144, 316, 318, 319, 340, 344, 355, 372, 380, 384, 386, 590, 591, 592, 593, 595, 631, 642, 840, 1228], "pin": [86, 143, 306, 383, 985, 989, 992, 993], "emit": [86, 174, 569, 570, 930], "linearli": [86, 282, 684, 924], "cold": [86, 241], "hot": [86, 192, 495, 498, 869], "queri": [86, 1119], "feed": [86, 187, 1193], "said": [86, 112, 113, 192, 205, 222, 309, 312, 319, 564, 677, 724, 809, 815, 848, 985, 993, 994, 1005, 1032, 1047, 1091, 1111, 1131, 1201, 1214], "ds18s20": [87, 403, 1221], "datasheet": [87, 175, 883, 985, 994], "lm73": [87, 306, 403, 406, 840, 984, 991, 994], "ti": [87, 189, 504, 602, 646, 804], "hoc": [87, 252, 464], "report": [87, 127, 130, 136, 144, 171, 189, 192, 193, 205, 207, 209, 408, 490, 500, 643, 840, 1006, 1041, 1228, 1230], "sort": [87, 108, 110, 162, 177, 190, 217, 223, 231, 235, 250, 252, 262, 263, 268, 270, 272, 273, 278, 286, 300, 303, 310, 315, 324, 330, 352, 358, 368, 494, 495, 498, 499, 535, 620, 678, 696, 706, 710, 740, 781, 785, 793, 806, 815, 817, 840, 928, 932, 970, 981, 994, 1086, 1134, 1135, 1190, 1216], "experi": [87, 178, 197, 222, 374, 504, 535, 628, 993, 994, 1222], "especi": [88, 94, 124, 134, 152, 191, 195, 214, 222, 306, 397, 415, 417, 443, 454, 484, 504, 726, 747, 862, 994], "deprec": [88, 143, 147, 319, 524, 711, 1014, 1028, 1241], "foremost": 89, "osen": [89, 91, 200, 809, 838, 1046], "recurs": [89, 90, 226, 250, 259, 265, 275, 278, 813, 879, 892, 932, 933, 948, 960, 970, 977, 997, 1004, 1041, 1123, 1127, 1241], "mother": [90, 110, 206, 268, 374, 620, 1104, 1241], "protect": [90, 144, 190, 192, 242, 250, 262, 315, 317, 380, 445, 464, 582, 583, 643, 646, 657, 713, 715, 716, 740, 815, 840, 871, 879, 885, 925, 967, 993, 1034, 1035, 1046, 1095, 1098, 1107, 1233, 1246], "critic": [90, 190, 200, 500, 814, 877, 879, 1216], "kind": [90, 121, 190, 192, 200, 205, 210, 222, 226, 259, 265, 266, 275, 276, 278, 290, 306, 318, 319, 340, 344, 526, 549, 601, 649, 696, 722, 747, 756, 801, 815, 918, 985, 992, 993, 1095, 1188, 1214, 1215, 1246], "poll": [91, 196, 207, 879, 881, 904, 1028, 1033, 1035, 1052, 1056, 1245, 1252, 1256, 1258], "readi": [91, 189, 985, 1221], "rare": [91, 195, 212, 226, 372, 519, 534, 539, 599, 601, 652, 751, 802, 970, 992, 1009, 1122, 1126, 1139, 1222], "btw": [91, 194, 200, 222, 228, 242, 249, 269, 272, 397, 481, 856, 923, 1177, 1179], "increas": [91, 192, 494, 985, 1048, 1050, 1079, 1244], "tight": [91, 214, 438, 817, 890, 1213], "bui": [91, 190, 543], "bigger": [91, 190, 222, 494, 1194], "avail": [91, 134, 139, 144, 189, 190, 192, 193, 195, 201, 205, 214, 218, 222, 242, 251, 259, 265, 275, 278, 332, 340, 341, 344, 348, 374, 416, 509, 511, 513, 515, 516, 519, 531, 544, 569, 570, 726, 771, 807, 813, 817, 860, 887, 892, 919, 944, 985, 989, 992, 993, 1044, 1047, 1048, 1065, 1077, 1082, 1087, 1094, 1118, 1136, 1137, 1187, 1196, 1213, 1216, 1223, 1224, 1243, 1246], "rout": [95, 226, 1085], "jinja2": 95, "ss2022": [98, 840, 916, 917, 984], "ws2022": 98, "lab": [98, 108, 126, 162, 397], "vo": [99, 108, 126, 403], "ku": [99, 107, 108, 126], "g1": [99, 840, 916, 917, 984], "g2": [99, 397, 840, 916, 917, 984], "08": [99, 101, 107, 126, 193, 200, 201, 202, 256, 259, 284, 288, 314, 352, 414, 540, 985, 992, 994, 1016, 1078, 1192], "cont": [99, 126, 162, 260, 323], "command": [99, 101, 124, 126, 148, 186, 189, 194, 200, 230, 242, 247, 257, 259, 265, 266, 273, 275, 278, 287, 290, 296, 298, 305, 306, 323, 326, 327, 370, 371, 383, 397, 402, 415, 465, 486, 497, 507, 514, 517, 519, 524, 526, 531, 532, 535, 541, 548, 562, 566, 576, 590, 599, 621, 636, 642, 652, 802, 816, 839, 840, 887, 913, 914, 915, 916, 917, 920, 921, 922, 923, 925, 926, 927, 928, 930, 932, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 950, 951, 952, 953, 955, 956, 957, 959, 960, 962, 963, 964, 966, 968, 976, 981, 984, 993, 994, 995, 996, 997, 1004, 1008, 1013, 1015, 1023, 1025, 1039, 1041, 1042, 1045, 1046, 1047, 1048, 1062, 1063, 1071, 1075, 1079, 1139, 1188, 1216, 1223, 1230, 1232, 1244], "wsl": [99, 100, 105, 106, 126, 149, 162, 279, 299, 305, 318, 334, 340, 371, 376, 379, 840, 917, 922, 984, 1065, 1073, 1074, 1078], "homework": [99, 104, 107, 126, 162, 192], "sshf": [99, 103, 126, 149, 296, 305, 306, 326, 327, 370, 371, 404, 840, 984, 995, 1000, 1075], "toolchain": [99, 105, 106, 108, 110, 125, 126, 134, 151, 162, 163, 166, 185, 202, 217, 219, 306, 375, 377, 378, 415, 506, 534, 538, 548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 601, 602, 642, 816, 839, 840, 888, 917, 920, 921, 922, 984, 1007, 1013, 1015, 1022, 1023, 1025, 1039, 1042, 1045, 1047, 1064, 1066, 1067, 1071, 1079, 1080, 1081, 1112, 1236, 1238, 1239, 1240, 1248, 1254, 1256], "bashrc": [99, 106, 126, 148, 189, 201, 262, 296, 305, 306, 320, 326, 327, 358, 370, 371, 840, 917, 919, 968, 970, 984, 1004, 1075, 1077], "studi": [99, 106, 147, 251, 294, 295, 297, 298, 306, 354, 373, 541, 548, 743, 783, 839, 840, 984, 1067, 1070, 1073], "ds18b20": [99, 126, 128, 144, 147, 306, 354, 397, 840, 984, 991, 1022], "slave": [99, 126, 128, 144, 147, 306, 354, 840, 984, 989, 991, 1022], "redirect": [99, 102, 126, 148, 191, 194, 230, 232, 242, 259, 265, 275, 278, 296, 305, 306, 326, 370, 382, 397, 402, 840, 914, 915, 916, 917, 932, 952, 953, 955, 956, 959, 960, 962, 968, 981, 984, 1014, 1137, 1237, 1247, 1254], "pipe": [99, 190, 195, 197, 210, 230, 232, 242, 296, 305, 306, 308, 326, 370, 382, 397, 402, 838, 840, 917, 925, 930, 970, 975, 984, 1014, 1058, 1059, 1060, 1075, 1137, 1237, 1247, 1254], "06": [99, 108, 125, 126, 162, 200, 231, 275, 294, 307, 314, 331, 334, 337, 379, 396, 414, 506, 539, 620, 838, 1114, 1192], "past": [99, 190, 194, 195, 252, 268, 372, 470, 522, 675, 677, 681, 684, 688, 754, 860, 862, 927, 1183, 1187, 1238], "2p": [99, 106], "3p": [99, 106], "5p": [99, 106], "pointer": [99, 110, 121, 126, 135, 144, 193, 217, 293, 354, 389, 398, 399, 400, 415, 428, 430, 432, 473, 474, 476, 477, 479, 481, 482, 483, 492, 496, 501, 502, 522, 556, 601, 614, 631, 636, 638, 643, 644, 646, 654, 661, 663, 672, 676, 680, 684, 685, 688, 694, 698, 711, 745, 752, 753, 754, 781, 783, 788, 790, 792, 797, 802, 804, 807, 808, 816, 819, 820, 824, 825, 828, 830, 835, 836, 837, 839, 840, 846, 853, 858, 869, 875, 904, 907, 1006, 1032, 1060, 1137, 1238, 1239, 1240, 1241, 1242, 1244], "exit": [99, 126, 186, 190, 192, 220, 241, 259, 265, 268, 275, 278, 300, 306, 341, 390, 415, 419, 471, 532, 538, 549, 652, 719, 800, 802, 840, 850, 855, 889, 984, 994, 1010, 1011, 1012, 1014, 1015, 1020, 1022, 1025, 1026, 1042, 1052, 1059, 1060, 1062, 1080, 1086, 1094, 1095, 1113, 1116, 1129, 1139, 1150, 1167, 1216, 1223], "statu": [99, 126, 127, 136, 144, 186, 191, 193, 205, 259, 265, 268, 275, 278, 290, 300, 306, 415, 419, 471, 532, 535, 538, 719, 838, 840, 889, 903, 984, 1015, 1020, 1022, 1025, 1042, 1046, 1059, 1080, 1116, 1143, 1202], "yai": [99, 186, 262, 270, 272, 285, 291, 310, 320, 352, 364, 368, 685, 737, 743, 1041], "ol": [99, 126, 268, 315, 317, 324, 380, 406, 519, 548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 607, 609, 642, 646, 650, 665, 668, 671, 687, 693, 697, 706, 709, 710, 715, 724, 725, 726, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 752, 783, 795, 799, 805, 808, 816, 825, 828, 837, 839, 840, 981, 1056, 1132, 1137, 1160], "randomsensor": [99, 144, 549, 554, 563, 575, 589, 590, 596, 600, 610, 611, 612, 613, 615, 616, 642, 801, 802, 803, 804, 840, 1099], "rectangl": [99, 183, 552, 620, 649, 665, 740, 840], "mystr": [99, 216, 268], "point3d": [99, 665, 740, 840], "cuboid": [99, 665, 740, 840], "hierarchi": [101, 108, 112, 113, 116, 122, 131, 148, 159, 226, 227, 229, 231, 249, 250, 263, 266, 278, 296, 305, 306, 326, 327, 337, 370, 371, 408, 495, 542, 543, 544, 547, 548, 562, 563, 567, 569, 590, 600, 642, 840, 917, 920, 921, 922, 923, 934, 937, 938, 939, 940, 941, 942, 943, 948, 954, 960, 967, 984, 996, 997, 998, 999, 1000, 1025, 1043, 1073, 1074], "parent": [101, 111, 112, 113, 148, 159, 192, 205, 207, 296, 305, 306, 326, 327, 370, 371, 520, 522, 526, 838, 840, 867, 917, 919, 920, 921, 922, 923, 924, 933, 934, 936, 937, 938, 939, 940, 941, 942, 943, 951, 952, 953, 954, 955, 957, 959, 960, 961, 972, 984, 996, 997, 998, 999, 1000, 1015, 1025, 1031, 1073, 1074], "login": [101, 126, 144, 147, 195, 197, 230, 242, 296, 358, 396, 397, 840, 914, 915, 917, 918, 919, 922, 924, 925, 926, 934, 937, 938, 939, 940, 941, 942, 943, 949, 984, 985, 993, 996, 997, 998, 999, 1000, 1001, 1003, 1005, 1022, 1073, 1074, 1166, 1236, 1245, 1252], "bourn": [101, 126, 148, 206, 230, 232, 296, 305, 306, 326, 370, 397, 398, 399, 402, 415, 416, 548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 642, 816, 838, 839, 840, 910, 914, 915, 916, 917, 920, 921, 922, 929, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 978, 984, 1007, 1013, 1015, 1023, 1025, 1026, 1039, 1042, 1045, 1047, 1064, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074], "verifi": [102, 104, 126, 139, 143, 148, 178, 200, 206, 218, 230, 242, 306, 371, 372, 408, 637, 655, 840, 917, 923, 952, 955, 956, 959, 962, 968, 984, 997, 998, 1000, 1154, 1191, 1194, 1216], "joke": [102, 190], "mostli": [102, 116, 121, 122, 276, 415, 420, 426, 438, 454, 484, 493, 513, 519, 528, 658, 699, 802, 807, 855, 924, 927, 948, 1014, 1041, 1044, 1065, 1243], "secur": [103, 126, 148, 159, 162, 163, 193, 195, 197, 242, 262, 268, 296, 305, 326, 358, 370, 371, 396, 840, 914, 915, 920, 921, 923, 926, 944, 948, 984, 985, 995, 996, 997, 998, 999, 1003, 1014, 1022, 1073, 1074, 1080, 1082, 1114, 1145], "account": [103, 112, 113, 126, 195, 197, 217, 222, 226, 227, 262, 268, 278, 285, 288, 303, 307, 308, 310, 320, 324, 346, 352, 358, 364, 397, 402, 427, 500, 506, 724, 743, 860, 992, 1005, 1111, 1192], "authent": [103, 126, 148, 149, 230, 242, 251, 296, 305, 306, 326, 327, 370, 371, 394, 397, 840, 914, 915, 984, 995, 996, 997, 998, 999, 1000, 1005, 1154], "ownership": [103, 126, 149, 217, 252, 306, 327, 341, 370, 371, 590, 610, 614, 620, 642, 756, 798, 801, 802, 816, 839, 840, 914, 915, 917, 920, 921, 922, 925, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 984, 1013, 1014, 1015, 1023, 1025, 1039, 1042, 1045, 1047, 1241, 1244], "setuid": [103, 126, 149, 150, 230, 296, 305, 306, 326, 327, 370, 371, 840, 917, 923, 943, 984], "quick": [104, 126, 152, 222, 229, 247, 251, 257, 266, 273, 287, 299, 329, 569, 807, 975, 985, 1188, 1214], "credenti": [104, 126, 149, 197, 290, 371, 840, 915, 916, 917, 923, 937, 938, 939, 940, 941, 942, 943, 984, 1001, 1030, 1084], "share": [104, 105, 108, 112, 113, 126, 149, 159, 168, 185, 190, 192, 197, 201, 205, 214, 215, 217, 218, 220, 223, 242, 252, 259, 262, 265, 275, 278, 282, 285, 288, 293, 294, 295, 297, 303, 306, 310, 320, 324, 333, 346, 349, 352, 354, 358, 364, 371, 373, 375, 376, 377, 378, 379, 380, 394, 415, 416, 460, 487, 488, 494, 500, 513, 517, 522, 523, 528, 531, 533, 534, 536, 540, 543, 555, 600, 620, 628, 743, 804, 806, 807, 815, 817, 837, 839, 840, 865, 869, 885, 892, 916, 917, 920, 921, 927, 937, 940, 941, 943, 979, 984, 993, 1017, 1030, 1032, 1038, 1044, 1050, 1062, 1065, 1073, 1075, 1095, 1098, 1230, 1245, 1246, 1254, 1256], "adjust": [104, 180, 184, 372, 840, 887, 984, 993, 998, 1000, 1056, 1063], "ubuntu": [105, 134, 191, 197, 201, 205, 217, 218, 219, 220, 230, 295, 297, 306, 415, 840, 927, 984, 987, 1005, 1064, 1065, 1073, 1074, 1078, 1223, 1228], "zoom": [105, 106, 126, 150, 197, 206, 222, 306, 320, 415, 534, 548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 642, 840, 970, 984, 1064, 1067, 1068, 1069, 1070, 1071, 1073, 1235], "recap": [106, 126, 162, 226, 230, 239, 268, 315, 316, 343, 376, 397, 638, 1093], "endeavor": 106, "hoop": [106, 927, 1059], "doze": [106, 196, 251, 252, 265, 397, 404, 482, 838, 927, 972, 1131, 1137, 1223], "pictur": [106, 187, 190, 211, 222, 226, 319, 320, 494, 500, 599, 899, 948, 950, 970, 985, 1004, 1008, 1256], "theori": [108, 226, 467, 494, 1193], "Of": [108, 126, 144, 192, 195, 225, 226, 276, 294, 295, 297, 299, 306, 315, 317, 355, 373, 374, 518, 548, 562, 590, 600, 642, 675, 715, 716, 727, 740, 825, 837, 839, 840, 916, 932, 979, 984, 1022, 1025, 1027, 1093, 1188, 1201, 1244], "ece20": [108, 111, 585, 601, 662, 914, 915, 923], "uml": [108, 144, 298, 316, 318, 319, 548, 562, 590, 600, 642, 840], "foundat": [108, 273, 303, 548, 562, 590, 642, 840, 887, 1252], "adapt": [108, 144, 193, 226, 298, 316, 373, 380, 541, 548, 550, 551, 562, 566, 576, 580, 590, 642, 807, 840, 993, 994, 1244], "syllabu": [108, 161, 164, 405], "vote": 108, "beurteilungsschema": 108, "grade": [108, 111, 126, 144, 401, 411, 1221], "total": [108, 111, 114, 115, 124, 192, 201, 205, 209, 262, 278, 288, 295, 493, 498, 506, 532, 549, 564, 598, 599, 600, 601, 652, 662, 802, 970, 972, 985, 992, 993, 994, 1005, 1028, 1056, 1063, 1064, 1065, 1075, 1078, 1143, 1145, 1228], "compos": [108, 130, 131, 168, 206, 268, 341, 432, 544, 723, 887, 1077, 1080, 1089, 1103, 1150, 1201], "practic": [108, 263, 272, 282, 373, 375, 378, 467, 504, 677, 716, 754, 789, 796, 992, 1018, 1060, 1196, 1241, 1244], "theoret": [108, 399, 418, 810], "semest": [108, 111, 147, 163, 166, 401, 403], "deliv": [108, 190, 988, 1059, 1060], "variou": [108, 192, 268, 294, 295, 519, 801, 815, 817, 887, 919, 1246], "weight": [108, 213, 222, 489, 881, 994, 1111], "decid": [108, 191, 192, 197, 222, 276, 493, 543, 604, 618, 682, 883, 887, 907, 992, 1094, 1111], "excerpt": [108, 226, 229, 399, 400, 1145, 1202], "w1": [108, 116, 122, 126, 127, 141, 152, 306, 355, 528, 530, 585, 601, 602, 1022], "soup": [108, 187, 371, 509, 510, 516, 520, 526, 532, 535, 537, 538, 540, 542, 543, 544, 545, 546, 547, 549, 551, 554, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 598, 600, 603, 604, 605, 606, 608, 610, 611, 612, 613, 615, 616, 617, 618, 619, 803, 838, 1026, 1029, 1087, 1090, 1139, 1221, 1230], "armv8": [108, 201, 306, 526, 602, 1063, 1077, 1078], "rpi4": [108, 201, 306, 526, 602, 1063, 1077, 1078], "gnueabihf": [108, 201, 306, 526, 602, 887, 1063, 1075, 1077, 1078], "shape": [108, 183, 211, 213, 252, 314, 315, 346, 368, 590, 620, 642, 662, 743, 840, 887, 1014, 1193, 1196, 1206], "algorithm": [108, 157, 158, 191, 200, 211, 259, 265, 273, 275, 278, 286, 288, 294, 295, 315, 324, 494, 590, 607, 631, 638, 642, 669, 680, 682, 683, 685, 686, 689, 690, 706, 709, 710, 740, 785, 793, 795, 806, 810, 840, 1167, 1190, 1194], "find_if": [108, 110, 157, 252, 268, 315, 354, 684, 687, 706, 710, 728, 737, 740, 806, 840], "customiz": [108, 157, 315, 687, 706, 710, 740, 840], "binary_search": [108, 110, 252, 268, 315, 687, 706, 710, 740, 840], "associ": [108, 201, 219, 227, 229, 231, 247, 252, 306, 309, 312, 315, 317, 355, 380, 441, 442, 450, 455, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 590, 591, 607, 609, 642, 677, 706, 710, 740, 743, 745, 771, 783, 837, 839, 840, 846, 853, 911, 986, 1014, 1087, 1117, 1118, 1119, 1135, 1137, 1195, 1244], "hour": [108, 195, 197, 222, 226, 259, 281, 299, 310, 323, 345, 403, 1150, 1188, 1195], "sent": [108, 190, 191, 230, 335, 500, 566, 928, 1036, 1056, 1060, 1204], "015": 108, "voluntari": 108, "odd": [108, 126, 282, 317, 482, 590, 604, 607, 642, 840, 993, 1089, 1091], "char": [109, 192, 208, 251, 268, 278, 324, 420, 427, 432, 433, 436, 438, 439, 440, 443, 444, 457, 462, 465, 470, 471, 478, 482, 488, 489, 491, 534, 545, 549, 579, 583, 588, 602, 603, 634, 649, 652, 653, 657, 667, 707, 722, 723, 738, 754, 756, 781, 788, 805, 838, 843, 846, 851, 867, 869, 881, 907, 992, 1006, 1010, 1011, 1014, 1018, 1019, 1020, 1021, 1024, 1026, 1029, 1043, 1046, 1052, 1055, 1056, 1059, 1081, 1126, 1132, 1199, 1228, 1233], "cout": [109, 116, 119, 122, 123, 131, 201, 508, 511, 549, 563, 568, 569, 570, 582, 583, 584, 585, 588, 596, 600, 601, 628, 646, 648, 653, 655, 659, 672, 673, 674, 675, 676, 679, 680, 681, 682, 683, 684, 685, 686, 688, 689, 690, 691, 695, 699, 700, 701, 702, 703, 709, 713, 714, 717, 719, 720, 723, 727, 734, 737, 743, 748, 758, 760, 761, 762, 763, 766, 767, 768, 769, 771, 772, 773, 775, 776, 777, 778, 779, 780, 785, 787, 788, 790, 791, 793, 795, 804, 805, 806, 807, 815, 817, 818, 824, 826, 828, 830, 931, 992, 1026, 1029, 1041, 1043, 1055, 1059, 1228], "endl": [109, 116, 119, 122, 201, 511, 513, 549, 563, 568, 569, 570, 582, 583, 584, 585, 588, 596, 600, 601, 628, 646, 648, 653, 655, 659, 660, 667, 672, 673, 674, 675, 676, 679, 680, 681, 682, 683, 684, 685, 686, 688, 689, 690, 691, 695, 699, 700, 701, 702, 703, 709, 713, 714, 717, 719, 720, 723, 727, 734, 737, 743, 758, 760, 761, 762, 763, 766, 767, 768, 769, 771, 772, 773, 775, 776, 777, 778, 779, 780, 785, 787, 788, 790, 791, 793, 795, 804, 805, 806, 807, 815, 817, 818, 824, 826, 828, 830, 992, 1026, 1029, 1041, 1043, 1055, 1059, 1228], "constitut": 109, "_id": [109, 116, 122], "objectcontain": 109, "add_object": 109, "_contain": [109, 793], "push_back": [109, 573, 574, 637, 678, 679, 680, 685, 688, 691, 695, 699, 747, 748, 751, 756, 815, 1059, 1233], "fragment": [109, 495, 1091, 1228], "iostream": [109, 116, 122, 123, 259, 265, 275, 278, 549, 563, 568, 569, 570, 578, 582, 583, 584, 585, 588, 596, 600, 628, 646, 648, 653, 655, 659, 660, 672, 673, 674, 675, 676, 679, 680, 681, 682, 683, 685, 686, 689, 690, 691, 695, 699, 700, 701, 702, 703, 709, 713, 714, 717, 719, 720, 727, 733, 734, 735, 736, 737, 738, 743, 748, 758, 761, 762, 763, 766, 767, 768, 769, 771, 772, 773, 775, 776, 777, 778, 779, 780, 785, 787, 788, 790, 793, 795, 804, 805, 806, 807, 815, 817, 824, 826, 828, 830, 838, 992, 1026, 1029, 1033, 1041, 1043, 1055, 1059, 1060, 1228], "my_vector": 109, "sysroot": [110, 159, 201, 1063, 1068, 1069, 1078], "intel": [110, 175, 179, 193, 840, 1062], "header": [110, 186, 218, 252, 268, 293, 323, 332, 333, 348, 349, 375, 376, 378, 464, 465, 466, 472, 476, 479, 483, 487, 492, 496, 501, 502, 506, 514, 517, 523, 531, 533, 537, 538, 540, 549, 670, 726, 745, 760, 765, 783, 789, 837, 839, 840, 932, 989, 994, 1063, 1065, 1075, 1145, 1178, 1182, 1183, 1185, 1193, 1196, 1243], "match": [110, 171, 189, 196, 225, 238, 255, 262, 263, 265, 270, 278, 288, 290, 291, 300, 303, 323, 324, 330, 341, 352, 358, 364, 462, 506, 601, 756, 760, 780, 793, 797, 923, 932, 1005, 1065, 1086, 1132, 1188, 1228], "linker": [110, 112, 113, 159, 185, 217, 332, 348, 375, 378, 461, 487, 494, 498, 499, 516, 539, 659, 670, 887, 1062, 1065, 1068, 1069, 1073, 1080, 1238, 1239, 1240, 1243, 1248, 1254], "uniquifi": [111, 317, 590, 607, 642, 840], "lookup": [111, 132, 210, 227, 240, 259, 265, 270, 275, 278, 292, 324, 489, 564, 590, 607, 609, 642, 758, 840, 1099, 1128, 1135, 1166, 1201, 1210, 1258], "leak": [111, 152, 192, 373, 477, 491, 549, 569, 570, 590, 607, 609, 610, 626, 634, 637, 642, 643, 649, 714, 789, 800, 802, 840, 1087], "sure": [111, 149, 189, 190, 191, 192, 193, 195, 196, 197, 200, 201, 230, 242, 249, 266, 268, 308, 394, 488, 513, 519, 543, 544, 547, 566, 569, 570, 599, 625, 722, 797, 835, 887, 993, 994, 1015, 1019, 1075, 1087, 1244], "gz": [111, 186, 887, 888, 911, 912, 913, 1143, 1223], "whatev": [111, 132, 139, 143, 189, 190, 192, 197, 213, 228, 288, 383, 500, 566, 645, 746, 771, 838, 953, 955, 1005, 1010, 1046, 1048, 1117, 1185, 1193, 1200, 1201, 1223], "quiz": [112, 113, 126, 159, 162, 725, 740, 840, 917, 922, 937, 943, 962, 968, 984, 1070, 1073], "servic": [112, 113, 159, 186, 195, 196, 197, 230, 262, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364, 371, 500, 506, 810, 879, 885, 890, 920, 921, 924, 975, 994, 1003, 1005, 1012, 1048, 1116], "owner": [112, 113, 159, 191, 230, 397, 402, 803, 846, 887, 920, 921, 935, 936, 944, 970, 1005, 1033], "dimension": [112, 113, 159, 211, 765, 920, 921, 1193, 1194], "identifi": [112, 113, 159, 191, 200, 259, 265, 275, 278, 324, 443, 465, 486, 488, 498, 734, 845, 885, 920, 921, 992, 994, 1133, 1195], "pthread": [112, 113, 159, 190, 201, 207, 259, 265, 275, 278, 809, 815, 920, 921, 1030, 1035, 1038, 1046, 1060, 1065], "timeslic": [112, 113, 159, 190, 920, 921, 1044, 1049], "suspend": [112, 113, 159, 190, 191, 364, 771, 773, 813, 883, 918, 920, 921, 932, 1035, 1060], "favor": [112, 113, 159, 920, 921, 1047, 1241], "fair": [112, 113, 159, 190, 885, 920, 921, 1047, 1049], "ensur": [112, 113, 159, 278, 544, 592, 920, 921], "evenli": [112, 113, 159, 270, 920, 921], "cpu": [112, 113, 133, 147, 159, 189, 190, 193, 197, 200, 223, 233, 237, 317, 364, 408, 412, 480, 481, 493, 495, 500, 678, 810, 817, 840, 858, 871, 885, 892, 897, 907, 918, 920, 921, 924, 928, 984, 992, 993, 994, 1008, 1025, 1033, 1035, 1045, 1046, 1047, 1048, 1049, 1097, 1114, 1246], "infinit": [112, 113, 159, 190, 210, 229, 259, 263, 265, 268, 270, 275, 278, 286, 319, 323, 455, 473, 480, 920, 921, 925, 1044, 1047, 1091, 1092, 1093, 1122, 1158], "illus": [112, 113, 159, 920, 921, 925, 1044, 1047, 1246], "action": [112, 113, 200, 229, 285, 534, 538, 645, 724, 947, 948, 1009, 1014, 1046, 1059, 1061, 1062, 1195, 1216], "undefin": [112, 113, 251, 372, 436, 443, 470, 522, 524, 538, 651, 659, 683, 690, 695, 719, 724, 756, 785, 1059], "behavior": [112, 113, 131, 159, 190, 192, 195, 227, 249, 251, 278, 443, 524, 526, 683, 690, 695, 724, 756, 773, 920, 921, 1015, 1019, 1060, 1063, 1084, 1089, 1106], "declar": [112, 113, 250, 251, 263, 268, 419, 435, 450, 459, 464, 466, 472, 473, 476, 479, 480, 483, 486, 487, 488, 492, 494, 496, 501, 502, 507, 534, 647, 657, 717, 724, 726, 734, 735, 745, 756, 765, 781, 783, 803, 837, 839, 840, 994, 1014, 1018, 1020, 1021, 1047, 1230], "promis": [112, 113, 192, 294, 295, 297, 306, 354, 373, 374, 430, 488, 566, 634, 646, 655, 724, 771, 773, 774, 777, 778, 815, 816, 839, 840, 1059, 1112, 1241], "caller": [112, 113, 192, 268, 430, 432, 468, 474, 498, 500, 522, 657, 724, 737, 754, 803, 805, 810, 813, 879, 890, 1031, 1035, 1087, 1167], "uniniti": [112, 113, 373, 491, 637, 644, 646, 647, 648, 651, 724, 842], "guarante": [112, 113, 190, 228, 259, 278, 482, 547, 724, 851, 858, 993, 994, 1047, 1048, 1056, 1084], "contigu": [112, 113, 495, 678, 695, 724, 873, 1024, 1209], "vec": [112, 113, 644, 646, 653, 660, 661, 662, 663, 664, 724], "hysteresi": [114, 115, 117, 118, 125, 127, 137, 142, 143, 144, 355, 406, 528, 530, 592], "_x": [116, 119, 588, 646, 647, 649, 651, 653, 654, 655, 656, 658, 660, 670, 685, 750, 765, 767, 768, 769], "firstnam": [116, 120, 126, 144, 147, 223, 249, 262, 270, 272, 275, 278, 282, 285, 288, 290, 291, 300, 303, 310, 324, 330, 335, 342, 358, 383, 388, 544, 545, 573, 579, 588, 589, 602, 657, 703, 730, 734, 736, 738, 755, 914, 915, 952, 953, 955, 957, 960, 1087, 1100, 1101, 1103, 1104, 1105, 1107, 1108, 1116, 1177, 1178, 1179, 1180, 1183, 1184, 1185, 1196, 1205, 1206, 1207, 1209, 1210, 1211, 1212], "lastnam": [116, 120, 126, 144, 147, 223, 252, 262, 268, 270, 272, 275, 278, 282, 285, 288, 290, 291, 303, 310, 324, 330, 335, 342, 358, 383, 388, 544, 545, 573, 579, 588, 589, 602, 657, 703, 728, 730, 734, 737, 740, 755, 840, 914, 915, 952, 953, 955, 957, 960, 1087, 1100, 1101, 1103, 1104, 1105, 1107, 1108, 1116, 1177, 1178, 1179, 1180, 1183, 1184, 1185, 1196, 1205, 1206, 1207, 1209, 1210, 1211, 1212], "chosen": [116, 120, 201, 535, 985, 992, 994, 1020, 1024, 1044, 1048, 1194, 1207], "shorter": [116, 120, 210, 1094, 1105, 1137, 1187], "temporari": [116, 120, 191, 200, 217, 259, 265, 268, 275, 278, 318, 319, 340, 344, 535, 601, 602, 751, 755, 756, 771, 785, 793, 838, 932, 1062, 1089, 1171], "consid": [116, 121, 122, 190, 192, 222, 226, 250, 259, 265, 275, 276, 278, 282, 306, 324, 345, 458, 485, 486, 494, 524, 526, 566, 720, 948, 992, 1047, 1103, 1111, 1188, 1215, 1216, 1243], "imagin": [116, 122, 190, 192, 372, 484, 489, 490, 507, 542, 555, 887, 927, 944, 985, 994, 1033, 1060], "w1sensor": [116, 122, 144, 586, 587, 588, 589, 601], "pragma": [116, 121, 122, 482, 514, 543, 545, 549, 554, 566, 571, 572, 573, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 601, 659, 676, 679, 726, 774, 824, 826, 828, 829, 830, 831, 838], "get_temperatur": [116, 121, 122, 226, 278, 341, 543, 546, 547, 549, 554, 556, 566, 567, 572, 574, 575, 577, 580, 581, 585, 588, 593, 594, 595, 596, 600, 601, 602, 613, 631, 753, 801, 802, 803, 804, 824, 826, 828, 829, 830, 831, 1099, 1176], "unus": [116, 122, 488, 543, 598, 600, 644, 648, 659, 698, 699, 753, 865, 925, 1041, 1055], "cstdint": [116, 122, 744, 772, 773], "uint64_t": [116, 122, 438, 475, 601, 772, 773, 807, 1012, 1055], "w1_address": [116, 122], "_w1_address": [116, 122], "overrid": [116, 122, 123, 144, 186, 250, 263, 278, 293, 355, 380, 543, 549, 551, 556, 571, 573, 574, 575, 577, 578, 580, 602, 716, 717, 782, 783, 824, 839, 840, 1084, 1099, 1233], "physic": [116, 122, 192, 195, 230, 237, 318, 319, 340, 344, 372, 495, 720, 871, 924, 993, 1012, 1016, 1046, 1047], "samp": [116, 122], "unistd": [116, 122, 192, 485, 602, 634, 945, 992, 1008, 1010, 1011, 1012, 1014, 1017, 1018, 1019, 1020, 1021, 1024, 1026, 1029, 1043, 1046, 1052, 1055, 1059], "0xdeadbe": [116, 122], "correct": [116, 189, 197, 201, 229, 249, 251, 262, 397, 443, 480, 484, 485, 492, 495, 496, 501, 502, 504, 518, 552, 620, 652, 717, 719, 720, 753, 798, 801, 809, 840, 931, 935, 936, 960, 992, 993, 994, 1047, 1090, 1098, 1193, 1216], "liskov": [116, 121, 122, 504], "segreg": [116, 121, 122, 144, 504], "invers": [116, 121, 122, 144, 282, 373, 412, 504, 542, 549, 851, 1047, 1048, 1257], "question2": [117, 125], "set_stat": [121, 137, 143, 355], "nullptr": [121, 582, 583, 601, 612, 616, 743, 753, 754, 801, 802, 803, 815, 817, 819, 820, 835, 836, 1029, 1241], "_sensor": [121, 549, 556, 574, 575, 577, 580, 581, 803], "_switch": [121, 556], "_displai": 121, "_low": 121, "_high": 121, "current_temperatur": 121, "obvious": [122, 192, 193, 195, 201, 213, 420, 484, 488, 509, 564, 628, 654, 660, 698, 713, 714, 743, 754, 788, 792, 797, 825, 838, 885, 887, 900, 924, 925, 931, 945, 993, 994, 1004, 1020, 1021, 1048, 1060, 1062, 1079, 1100, 1103, 1243], "remain": [122, 152, 190, 191, 201, 210, 223, 270, 278, 324, 513, 605, 606, 618, 647, 695, 701, 733, 739, 744, 806, 814, 869, 1001, 1049, 1060, 1062, 1163, 1166, 1167, 1170, 1178, 1180, 1196, 1230], "carri": [124, 192, 197, 212, 486, 540, 547, 564, 838, 992, 1049, 1062, 1086], "norm": [124, 268, 1201], "meantim": [124, 549, 1009], "fresh": [124, 191], "made": [124, 131, 143, 183, 184, 189, 190, 191, 193, 196, 197, 201, 205, 242, 257, 282, 306, 341, 374, 397, 429, 467, 468, 470, 473, 504, 544, 548, 564, 570, 771, 871, 887, 918, 919, 925, 985, 992, 1018, 1024, 1029, 1047, 1065, 1091, 1098, 1108, 1145, 1193], "arbitrari": [124, 190, 211, 278, 282, 424, 440, 458, 494, 535, 667, 694, 695, 748, 806, 818, 846, 989, 1014, 1018, 1046, 1087, 1123, 1137, 1166], "sinc": [124, 168, 201, 207, 252, 258, 289, 393, 494, 497, 520, 524, 646, 654, 655, 685, 698, 742, 743, 771, 792, 797, 803, 818, 838, 887, 992, 1005, 1012, 1018, 1021, 1033, 1048, 1055, 1117, 1242], "whichev": 124, "enumer": [124, 205, 211, 213, 223, 229, 234, 235, 239, 241, 247, 248, 250, 271, 275, 280, 286, 300, 304, 321, 324, 343, 353, 365, 368, 439, 486, 506, 744, 848, 883, 994, 1251], "pack": [124, 201, 205, 251, 599, 620, 913, 948, 986, 988], "unpack": [124, 205, 209, 229, 235, 239, 241, 246, 250, 254, 259, 262, 267, 271, 272, 278, 283, 285, 289, 290, 301, 306, 308, 311, 320, 324, 342, 345, 347, 353, 355, 365, 368, 374, 380, 382, 397, 783, 839, 840, 887, 913, 986, 988, 992, 1063, 1071, 1077, 1078, 1117, 1135, 1241], "kib": [124, 205], "222": [124, 223, 262, 265, 270, 272, 278, 282, 285, 288, 300, 303, 320, 324, 330, 346, 352, 358, 364, 368, 538], "addit": [124, 192, 210, 222, 249, 278, 281, 382, 441, 488, 513, 535, 563, 564, 578, 600, 646, 658, 664, 736, 887, 925, 1001, 1106, 1118, 1134, 1136, 1216], "checkout": [124, 168, 182, 193, 205, 219, 860, 887, 888, 1253], "previou": [124, 194, 210, 341, 585, 637, 653, 736, 948, 980, 1020, 1088, 1090, 1110, 1112, 1157, 1215], "9bfda12": 124, "mosquitto": [124, 262, 266, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 377, 512, 1182, 1204], "smoothli": 124, "forward": [124, 205, 268, 294, 295, 296, 305, 326, 327, 354, 370, 374, 435, 450, 459, 465, 466, 472, 476, 479, 483, 492, 496, 501, 502, 707, 745, 752, 783, 793, 837, 839, 840, 887, 948, 972, 980, 984, 985, 995, 1000, 1241], "diverg": [124, 1046], "00aea42": 124, "delet": [124, 217, 229, 259, 278, 293, 303, 324, 355, 380, 392, 491, 542, 545, 584, 601, 610, 614, 626, 634, 649, 652, 711, 714, 719, 743, 753, 754, 755, 783, 788, 800, 801, 802, 803, 819, 820, 830, 839, 840, 865, 895, 925, 1197, 1223, 1240, 1241], "footnot": [124, 193, 195, 196, 197, 200, 201, 206, 213, 219, 222, 225, 309, 312, 543, 570, 614, 661, 663, 664, 677, 707, 726, 727, 856, 858, 919, 927, 942, 992, 993, 994, 1015, 1018, 1079, 1111, 1114, 1145, 1179, 1194, 1241, 1244], "term": [124, 131, 159, 190, 192, 214, 242, 282, 315, 317, 372, 394, 494, 657, 660, 724, 803, 806, 920, 921, 994, 1013, 1047, 1059, 1193, 1228], "ss2023": 125, "ws2023": [125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 143, 840], "ece21": [125, 126, 143, 144], "bouncem": [126, 144, 147, 601, 602, 914, 915], "procf": [126, 230, 232, 306, 840, 926, 984, 1025, 1042, 1245, 1252], "umask": [126, 149, 296, 305, 306, 326, 327, 370, 371, 397, 402, 840, 917, 943, 967, 984, 1018, 1030], "diff": [126, 246, 265, 358, 644, 646, 1106, 1247], "raspi": [126, 186, 320, 397, 403, 840, 864, 887, 888, 889, 891, 896, 902, 905, 908, 984, 986, 987, 988, 989, 992, 993, 994, 1077, 1078], "spirit": [126, 458], "readm": [126, 170, 209, 315, 317, 992, 993], "modular": [126, 222, 227, 229, 257, 276, 308, 399, 400, 430, 534, 1062, 1090], "plc": 126, "sallok": 126, "constantsensor_nopoli": [126, 144, 590, 596, 642, 840], "randomsensor_nopoli": [126, 144, 590, 642, 840], "labexam": 126, "hysteresis_nopoli": [126, 127, 144, 590, 591, 642, 840], "upload": [126, 196, 948, 1143, 1215], "j": [126, 152, 187, 195, 201, 238, 253, 255, 265, 270, 272, 275, 278, 282, 285, 288, 300, 303, 310, 324, 330, 342, 346, 358, 444, 447, 464, 488, 495, 564, 657, 747, 758, 806, 897, 913, 1015, 1071, 1075, 1091, 1201, 1207], "bz2": [126, 191, 500, 887, 909, 912, 1065, 1084], "influenc": [126, 1063, 1241], "felber": 126, "vscode": [126, 162, 220, 376, 379, 403, 417, 970], "folder": [126, 196], "comprehend": [126, 276, 443, 449, 1059], "workspacefold": 126, "suppli": [126, 192, 230, 602, 604, 648, 846, 887, 903, 923, 985, 989, 992, 994, 1009, 1018, 1149], "cpprefer": [126, 682, 683, 684, 685, 686, 688, 689, 690, 691, 694, 703, 722], "averagingsensor_nopoli": [126, 144, 590, 642, 840], "toolcas": [126, 139, 144, 315, 317, 374, 512, 513, 514, 515, 528, 529, 760], "mocksensor_nopoli": [126, 144, 590, 591, 592, 593, 642, 840], "figur": [126, 176, 182, 187, 195, 196, 211, 266, 1083], "specifi": [126, 190, 207, 278, 290, 324, 438, 506, 509, 588, 591, 596, 599, 648, 729, 743, 758, 782, 793, 887, 948, 1005, 1018, 1022, 1048, 1060, 1114, 1129, 1137, 1142, 1159, 1178, 1180, 1209, 1211, 1216], "target_link_librari": [126, 218, 377, 507, 508, 509, 512, 513, 515, 516, 531, 537, 538, 585, 621, 624, 630, 636, 639, 1058, 1063, 1064, 1227, 1230, 1232], "inter": [126, 190, 208, 214, 1047, 1245, 1252, 1255, 1257], "likewis": [126, 265, 631, 662, 913, 933, 1004, 1020, 1071, 1193, 1230], "ledstripedisplay_nopoli": [126, 144, 590, 642, 840], "somewhat": [127, 210, 251, 494, 519, 547], "02131d959eaa": [127, 152, 585, 601, 602, 1022], "heat": [127, 298, 541, 548, 592, 601, 840, 994, 1192, 1193], "hwmon2": [127, 364, 992], "temp1_input": [127, 992, 994], "boilingpot": [127, 129], "knob": [127, 1115], "steer": 127, "desir": [127, 195, 259, 265, 275, 278, 380, 439, 443, 454, 596, 646, 648, 654, 737, 885, 1019, 1021, 1195], "hardcod": [127, 191, 401, 620, 846, 850, 1154], "ledstripedisplai": [127, 137, 139, 142, 143], "unreason": 127, "cluster_fh2021": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 143, 840], "fh2021_sensor_interfac": [127, 128, 129, 130, 136, 143, 840], "fh2021_boiling_pot": [127, 128, 129, 130, 136, 143, 840], "fh2021_switch_interfac": [127, 128, 129, 130, 135, 136, 137, 143, 840], "fh2021_sysfs_gpio_switch": [127, 128, 130, 136, 143, 840], "breadboard": [128, 130, 994, 1245, 1252], "acrobat": [128, 130], "boilingpot_suit": 129, "status_report": 129, "percentage_displai": 129, "fh2021_pwm_displai": [129, 135, 136, 139, 840], "pwm": [129, 130, 135, 136, 144, 147, 306, 315, 840, 887, 984, 985, 991, 1028, 1245, 1252], "fh2021_display_infrastructur": [129, 135, 136, 840], "infrastructur": [129, 130, 136, 144, 190, 499, 840, 843, 1056], "fh2021_boiling_pot_displai": [129, 136, 840], "stripe": [130, 135, 139, 591], "reusabl": [131, 372], "compon": [131, 250, 263, 355, 497, 520, 972, 1047], "dedic": [131, 190, 191, 222, 227, 276, 306, 309, 312, 490, 506, 507, 514, 526, 855, 926, 927, 992, 993, 994, 1028, 1030, 1064, 1083, 1094, 1127, 1244], "constrain": [131, 825, 926], "decoupl": [131, 266, 542, 1046], "sink": [131, 133, 136, 318, 319, 334, 337, 340, 344, 512, 513, 514, 515, 840], "datalogg": [131, 147, 148, 319, 341, 507], "target_include_directori": [131, 376, 507, 509, 510, 512, 513, 528, 529, 530, 531, 540], "announc": [131, 404, 509, 510, 713, 992, 993], "anyon": [131, 190, 634, 858], "node": [131, 183, 195, 200, 210, 478, 498, 509, 515, 529, 698, 843, 846, 850, 856, 865, 1079, 1204, 1221], "startlog": 131, "uint16_t": [131, 438], "special": [131, 183, 190, 237, 270, 272, 278, 282, 306, 419, 471, 522, 524, 552, 563, 566, 569, 570, 614, 637, 642, 756, 758, 812, 836, 913, 925, 930, 986, 1008, 1014, 1036, 1060, 1080, 1085, 1104, 1106, 1114, 1123, 1125, 1129, 1190, 1195, 1226, 1246, 1247], "unif": [131, 643], "leftov": 131, "gettim": 131, "defer": [131, 190, 504, 885, 907], "sinkfil": 131, "sinkmock": 131, "usabl": [131, 278, 324, 448, 547, 598, 754, 995], "sensorconfig": [131, 144, 345, 507], "sensorvalu": [131, 132, 134, 563, 577], "runtime_error": [131, 568, 569, 580, 582, 583, 584, 602, 817], "logger_suit": 131, "loggerbasictest": 131, "sensor_values_suit": 131, "sensor_config_suit": 131, "duplicate_sensor": 131, "outlook": [131, 144, 147, 162, 927], "prebuilt": [131, 992], "order": [131, 177, 183, 189, 195, 196, 200, 201, 210, 222, 223, 226, 228, 259, 265, 270, 280, 282, 285, 315, 332, 348, 423, 449, 460, 482, 494, 535, 544, 563, 618, 620, 627, 629, 692, 739, 838, 842, 858, 871, 887, 977, 985, 992, 994, 1010, 1049, 1062, 1075, 1091, 1111, 1160, 1170, 1243], "acquisitionloop": [131, 341, 345], "n_iter": 131, "doit": [131, 262, 549], "write_measur": [131, 341], "mockingsink": 131, "receiv": [131, 191, 210, 265, 268, 306, 335, 376, 379, 430, 566, 657, 756, 846, 858, 879, 887, 948, 985, 988, 994, 1001, 1009, 1014, 1036, 1044, 1059, 1060, 1084, 1087, 1137, 1169, 1184, 1201], "yaml": 131, "ini": [131, 170, 195, 209, 405, 408, 507, 1221], "fh2021_datalogg": [131, 132, 133, 134, 136, 840], "predecessor": [132, 134, 276, 284, 290, 334, 337], "sinklogg": [132, 134], "csvsink": [132, 341], "logfil": [132, 191, 229, 930, 981], "linksoben": 132, "rechtsunten": 132, "addmeasur": 132, "rememb": [132, 195, 196, 211, 218, 228, 249, 376, 449, 482, 524, 552, 678, 679, 713, 716, 754, 755, 803, 883, 887, 930, 945, 948, 967, 992, 1001, 1003, 1085, 1152, 1162], "csvname": [132, 263, 308, 506], "valuenam": 132, "_config": 132, "sensor_valu": [132, 374], "getmeasur": 132, "rotat": [132, 191, 985, 1010], "backup": [132, 196, 230, 534, 916, 918, 1001, 1206], "fh2021_datalogger_csv_sink": [132, 136, 840], "boil": [133, 134, 137, 143, 514, 528, 529, 840, 887], "pot": [133, 134, 137, 143, 514, 528, 529, 840], "struct": [134, 193, 217, 251, 252, 268, 369, 465, 470, 476, 477, 478, 479, 482, 483, 486, 488, 490, 492, 496, 501, 502, 507, 544, 549, 566, 601, 602, 646, 647, 652, 654, 656, 657, 677, 726, 728, 729, 730, 731, 732, 733, 735, 736, 737, 738, 739, 740, 743, 745, 746, 747, 748, 755, 771, 774, 776, 777, 778, 779, 783, 788, 806, 807, 817, 820, 828, 829, 831, 837, 838, 839, 840, 846, 848, 851, 853, 855, 856, 858, 871, 875, 877, 879, 881, 883, 889, 890, 895, 897, 900, 904, 906, 907, 986, 988, 992, 1011, 1012, 1024, 1035, 1046, 1049, 1055, 1056, 1059, 1060, 1242], "sensor_config": 134, "getallmeasur": 134, "localhost": [134, 1199, 1204], "1883": [134, 1204], "port": [134, 159, 186, 187, 192, 197, 202, 262, 296, 305, 326, 327, 341, 370, 383, 415, 840, 920, 921, 927, 975, 984, 995, 1000, 1004, 1022, 1145, 1200, 1204, 1216, 1245, 1252], "transport": [134, 214, 266, 268, 599, 817, 1184, 1204], "sensor1": [134, 300, 549, 824, 826, 828, 830, 831], "sensor2": [134, 549, 824, 826, 828, 830, 831], "burden": [134, 171, 506, 659, 1089, 1222], "handmad": 134, "fedora": [134, 171, 186, 195, 201, 202, 205, 219, 306, 358, 614, 840, 844, 847, 849, 852, 854, 857, 864, 866, 867, 868, 872, 878, 884, 888, 891, 896, 902, 905, 908, 944, 948, 984, 987, 1064, 1065, 1073, 1074, 1075, 1078, 1204, 1228], "mosquitto_new": 134, "mosquitto_connect": 134, "mosquitto_destroi": 134, "prohibit": [134, 654], "wide": [134, 197, 201, 420, 421, 919, 1001, 1056, 1062], "iot": [134, 136, 144, 266, 306, 840], "broadcast": [134, 815, 986, 993, 1035, 1060, 1258], "flexibl": [134, 298, 509, 541, 555, 562, 576, 590, 642, 688, 840, 1031, 1046, 1062, 1063, 1064, 1080, 1081, 1132, 1236], "fh2021_datalogger_mqtt_sink": [134, 136, 840], "percentag": [135, 139, 498], "show_percentag": [135, 139], "wire": [135, 985, 995, 1075], "connect": [135, 175, 190, 197, 210, 230, 242, 263, 306, 335, 394, 402, 403, 478, 817, 918, 981, 985, 986, 993, 994, 1003, 1008, 1014, 1028, 1197, 1199, 1204, 1216, 1244, 1256, 1258], "shown": [135, 195, 228, 388, 970, 1056, 1201], "src_demo": [135, 139], "fh2021_boiling_pot_basic_integr": [136, 840], "fh2021_sensor_w1": [136, 840], "fh2021_datalogger_integr": [136, 840], "logger": [136, 144, 148, 319, 337, 341, 344, 507, 512, 513, 514, 515, 528, 529, 807, 840], "fh2021_libgpiod_switch": [136, 137, 840], "fh2021_mqtt_tkinter": [136, 138, 840], "subscrib": [136, 187, 266, 278, 840], "fh2021_boiling_pot_full_integr": [136, 840], "mockswitch": [137, 142, 143], "libgpiodswitch": 137, "tkinter": 138, "stackoverflow": [138, 397, 402, 480], "2400262": 138, "simul": [138, 222, 372, 380, 403, 404, 601], "random": [138, 144, 208, 210, 226, 238, 250, 262, 263, 266, 270, 272, 275, 278, 283, 285, 288, 310, 319, 352, 358, 364, 368, 374, 392, 397, 440, 519, 528, 530, 547, 549, 554, 563, 589, 600, 610, 611, 612, 613, 615, 616, 617, 647, 801, 918, 994, 1005, 1024, 1052, 1087, 1099, 1122, 1195, 1204], "pca9685": [139, 144, 147, 306, 840, 984, 985, 991], "pwmchip0": [139, 985, 993], "pwm0": [139, 985, 993], "danc": [139, 196, 601, 907, 1079], "phase": [139, 152, 238, 568, 582, 987, 1056, 1091], "cumbersom": [139, 192, 194, 229, 655, 678, 747, 791, 843, 1030, 1056, 1228], "percentagedisplai": 139, "round": [139, 190, 257, 262, 272, 282, 298, 303, 352, 354, 368, 541, 548, 549, 551, 553, 562, 563, 576, 590, 642, 840, 1049, 1257], "hood": [139, 192, 1062], "relationship": [139, 355, 374, 397, 556, 589, 631, 713, 807, 1031, 1064, 1079, 1095, 1099, 1194], "pwmdisplai": 139, "pwm_control": 139, "bit": [139, 143, 184, 189, 190, 192, 195, 197, 200, 201, 222, 223, 226, 233, 252, 263, 265, 266, 272, 296, 299, 305, 306, 309, 312, 326, 327, 345, 370, 371, 392, 397, 402, 408, 420, 426, 432, 438, 443, 450, 459, 466, 467, 472, 476, 479, 482, 483, 492, 496, 501, 502, 585, 599, 660, 726, 745, 780, 783, 793, 803, 837, 838, 839, 840, 883, 887, 906, 917, 918, 943, 945, 947, 984, 985, 986, 988, 993, 995, 1018, 1046, 1063, 1065, 1073, 1083, 1123, 1188, 1201, 1236, 1241], "pwm5": 139, "visibl": [139, 143, 205, 231, 251, 317, 383, 430, 432, 434, 458, 460, 491, 492, 496, 501, 502, 522, 526, 530, 586, 736, 840, 858, 992, 994, 1056, 1128, 1157, 1197], "10000000": [139, 192, 265, 446, 1032, 1089, 1097], "set_percentag": 139, "duti": [139, 985, 993], "duty_cycl": [139, 985, 993], "unbuff": 139, "automat": [139, 143, 178, 192, 194, 196, 197, 205, 240, 242, 246, 252, 259, 265, 275, 278, 282, 315, 317, 380, 434, 443, 470, 487, 490, 494, 506, 555, 556, 645, 648, 713, 717, 756, 785, 825, 839, 840, 843, 858, 887, 992, 994, 1021, 1084, 1137, 1145, 1150], "serv": [142, 194, 196, 455, 1194, 1222, 1256], "ground": [142, 993, 994], "mocksensor": [142, 144], "upstream": [143, 193, 196, 201, 205, 865], "sysfsgpioswitch": 143, "wherea": [143, 522], "gpio20": 143, "voltag": [143, 985, 992], "constructur": 143, "proid": 143, "lifecycl": 143, "avg": [144, 278, 358, 487, 528, 530, 546, 563, 574, 593, 600, 824, 826, 828, 830], "lifetim": [144, 191, 249, 251, 268, 280, 435, 450, 459, 466, 472, 476, 477, 479, 483, 492, 496, 501, 502, 556, 649, 733, 745, 756, 783, 837, 839, 840, 1082], "averagingsensor": [144, 546, 574], "scheme": [144, 278, 324, 341, 344, 658, 1082, 1086], "constantsensor": [144, 507, 546, 549, 554, 566, 567, 575, 587, 594, 600, 610, 611, 612, 613, 615, 616, 753, 801, 802, 803, 804, 1099, 1176], "meet": [144, 195, 197, 222, 372, 482, 932, 1075, 1088], "liskow": [144, 552], "gcc": [144, 191, 192, 218, 238, 240, 259, 265, 275, 278, 390, 417, 419, 443, 460, 464, 482, 485, 486, 488, 498, 499, 534, 535, 628, 676, 679, 812, 887, 888, 925, 945, 1010, 1011, 1012, 1018, 1019, 1020, 1021, 1030, 1033, 1063, 1065, 1075, 1077, 1078, 1079, 1080, 1081, 1113, 1230, 1236], "cycl": [144, 252, 287, 504, 506, 771, 802, 816, 839, 840, 984, 985, 993, 1025, 1039, 1045], "todai": [144, 191, 242, 250, 266, 299, 316, 332, 345, 348, 406, 432, 1188, 1243, 1246], "minut": [144, 190, 196, 197, 222, 226, 229, 266, 994, 1188, 1204], "suppos": [144, 152, 205, 226, 282, 382, 517, 566, 865, 887, 904, 927, 985, 1033, 1182, 1221], "deploi": [144, 202, 230, 397, 402, 542, 877, 914, 915, 993, 994, 999, 1001, 1005], "leddisplai": 144, "pwmcontrol": 144, "minor": [144, 197, 201, 259, 265, 275, 278, 308, 846, 853, 918], "tweak": [144, 1221], "standup": 144, "followup": [144, 273, 334, 337, 587, 1177], "bonu": 144, "donat": [144, 986], "relai": 144, "board": [144, 189, 191, 887, 992], "cooker": 144, "gapher": 144, "tape": 144, "coordin": [144, 598, 644, 646, 653, 654, 765, 1010], "notic": [144, 189, 190, 192, 205, 259, 265, 275, 278, 490, 516, 535, 587, 836, 928, 1032, 1034, 1095, 1210], "wikipedia": [144, 207, 268, 494, 657, 994, 1005, 1049, 1082, 1201], "summer": [145, 163, 396, 397, 403], "winter": [145, 147, 166], "gl\u00fchwein": 147, "trinken": 147, "stece2022": [147, 148, 152, 155, 162, 165], "blob": [147, 148, 155, 165, 190, 306, 317, 417, 620, 887], "deploy": [148, 163, 190, 222, 226, 247, 333, 349, 375, 376, 377, 378, 379, 380, 517, 523, 533, 536, 539, 840, 862, 1188], "wednesdai": [149, 222, 230, 312], "essenti": [149, 192, 219, 268, 315, 317, 733], "syscal": [150, 1008], "o_rdonli": [151, 840, 845, 984, 1010, 1014, 1015, 1018, 1021, 1022, 1023, 1025, 1026, 1029, 1042, 1052, 1055, 1059, 1062], "o_excl": [151, 840, 984, 1014, 1015, 1023, 1025, 1042, 1055], "unchang": [152, 282, 744, 1080], "green": [152, 246, 282, 566, 601, 602, 662, 985], "x86_64": [152, 171, 186, 193, 195, 242, 249, 358, 394, 417, 443, 534, 601, 662, 860, 865, 1065, 1075], "omg": [152, 382, 464, 846, 1222], "sscanf": [152, 580], "errno": [152, 250, 263, 265, 285, 320, 490, 865, 1015, 1030, 1059, 1060, 1078, 1086, 1216], "enoent": [152, 1062], "eacc": [152, 249], "milli": [152, 992, 994], "celsiu": [152, 420, 421, 543, 554, 585, 992, 994], "21340": 152, "ordinari": [152, 420, 660, 714, 765, 871, 879, 951, 1028, 1109, 1116], "float": [152, 212, 223, 227, 229, 231, 233, 240, 241, 246, 249, 259, 262, 263, 265, 268, 270, 272, 275, 278, 283, 286, 300, 303, 308, 320, 324, 330, 341, 343, 346, 352, 358, 364, 368, 392, 393, 420, 421, 422, 426, 436, 438, 439, 443, 473, 482, 487, 506, 554, 563, 669, 670, 722, 760, 820, 992, 1050, 1060, 1099, 1117, 1132, 1139, 1145, 1238, 1242], "read_temperatur": 152, "overcom": [155, 192, 341, 397, 484], "signatur": [155, 200, 246, 278, 282, 303, 324, 646, 743, 790, 806, 807, 1056], "sensor_get_temperatur": 155, "react": [155, 212, 227, 229, 231, 332, 348, 486, 667, 992, 1009, 1086, 1243], "catch": [155, 212, 252, 268, 291, 317, 382, 408, 544, 551, 573, 590, 607, 609, 642, 668, 671, 687, 693, 697, 702, 706, 709, 710, 722, 725, 726, 728, 735, 736, 737, 738, 739, 740, 771, 779, 817, 820, 838, 840, 1060], "attent": [155, 190, 246, 262, 270, 428, 449, 451, 480, 499, 535, 679, 684, 754, 785, 788, 879, 1048, 1084, 1211, 1233], "ptr": [156, 374, 477, 620, 753, 801, 802, 803, 804, 819], "arith": [156, 564, 636, 637, 673, 674, 675, 676, 681], "stl": [156, 158, 217, 406, 470, 603, 604, 605, 606, 608, 610, 611, 612, 613, 615, 616, 617, 618, 619, 642, 643, 681, 685, 707, 709, 710, 724, 740, 751, 840, 1240, 1241, 1242], "demo2": 156, "err": [156, 171, 190, 229, 249, 314, 355, 372, 374, 380, 601, 698, 743, 745, 783, 791, 803, 837, 839, 840, 851, 881, 883, 918, 986, 988, 992, 1106, 1210], "lambda": [157, 217, 249, 250, 263, 265, 268, 280, 293, 300, 317, 320, 325, 342, 346, 358, 374, 380, 506, 620, 685, 758, 783, 788, 793, 795, 807, 810, 815, 839, 840, 1082, 1240, 1241, 1242], "queue": [159, 185, 186, 191, 200, 201, 208, 214, 234, 235, 237, 266, 294, 295, 297, 306, 318, 319, 340, 341, 344, 354, 373, 374, 566, 816, 839, 840, 881, 889, 907, 920, 921, 925, 984, 1025, 1035, 1039, 1251, 1255, 1256, 1257], "enhanc": [159, 490, 920, 921], "against": [159, 192, 201, 242, 250, 262, 263, 464, 506, 508, 516, 585, 601, 818, 860, 862, 867, 871, 879, 923, 1020, 1065, 1068, 1069, 1071, 1081, 1095, 1154, 1221, 1246], "libc": [159, 201, 1062, 1065, 1068, 1069, 1079, 1080], "ss2024": 160, "livecod": [162, 374, 376], "findet": [163, 166, 208], "bachelorstudium": [163, 166], "elektronik": [163, 166, 1245, 1252], "semesterwochenstunden": [163, 166], "ect": [163, 166], "lehrveranstaltungsleit": [163, 166], "studierenden": [163, 166], "vorkenntniss": [163, 166], "lehrveranstaltungen": [163, 166], "vorausgesetzt": [163, 166, 1237, 1239, 1240, 1248, 1254, 1255, 1257, 1258], "informatik": [163, 166, 398], "wissen": [163, 166, 207, 415, 1238, 1245], "grundaufgaben": [163, 166], "betriebssystemen": [163, 166, 415, 1247, 1252, 1254], "bescheid": [163, 166], "abstraktionen": [163, 166], "programmierparadigmen": [163, 166], "gesamtnot": [163, 166], "praktischen": [163, 166], "theoretischen": [163, 166], "teil": [163, 166, 198, 208, 217, 225, 1236, 1238], "laborklausuren": [163, 166], "klausur": [163, 166], "besteht": [163, 166], "m\u00f6glichkeit": [163, 166, 204, 207, 225, 1238, 1257, 1258], "hausaufgaben": [163, 166], "sammeln": [163, 166], "diesen": [163, 166, 415, 1255], "hinzugerechnet": [163, 166], "ausfallsicherung": [163, 166], "dienen": [163, 166, 1238], "einzelergebniss": [163, 166], "erfolgt": [163, 166, 1245], "punkten": [163, 166], "gesamtergebniss": [163, 166], "umrechnung": [163, 166], "prozent": [163, 166], "notwendigen": [163, 166], "unterricht": [163, 166], "klausuren": [163, 166], "abgehalten": [163, 166], "endnot": [163, 166], "ergibt": [163, 166], "erreichten": [163, 166], "wobei": [163, 166, 233], "anwendung": [163, 166, 204, 1257], "kommt": [163, 166, 225, 240, 250, 253, 279, 1248, 1257, 1259], "91": [163, 166, 209, 223, 233, 238, 240, 246, 249, 255, 259, 262, 265, 270, 272, 275, 278, 282, 285, 291, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 392, 397, 402, 1192, 1193], "81": [163, 166, 200, 209, 211, 223, 233, 238, 240, 246, 249, 251, 255, 262, 265, 270, 272, 278, 282, 285, 288, 291, 300, 303, 307, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 392, 1064, 1089, 1192, 1193], "90": [163, 166, 193, 200, 209, 233, 238, 240, 246, 249, 255, 262, 265, 270, 272, 278, 282, 285, 288, 291, 300, 303, 307, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 392, 506, 1192, 1193, 1221], "80": [163, 166, 195, 200, 209, 223, 233, 238, 240, 246, 249, 255, 259, 262, 265, 270, 272, 278, 282, 285, 288, 291, 300, 303, 307, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 392, 498, 591, 970, 1046, 1077, 1089, 1145, 1192, 1193, 1221], "befriedigend": [163, 166], "gen\u00fcgend": [163, 166], "einzuloggen": [163, 166], "abschlussklausur": [163, 166], "zugelassen": [163, 166], "beschrieben": [163, 166], "negativen": [163, 166], "beurteilung": [163, 166], "sowohl": [163, 166, 1245, 1252], "laborklausur": [163, 166], "theoretisch": [163, 166], "schriftlich": [163, 166, 398], "wiederholt": [163, 166], "kommissionel": [163, 166], "wiederholung": [163, 166, 217, 234, 241, 277, 1251], "immer": [163, 166, 198, 199, 213, 217, 223, 225, 238, 310, 1236, 1240, 1247, 1257], "gesamtpr\u00fcfung": [163, 166], "vergleichbar": [163, 166, 223], "antritt": [163, 166], "bestanden": [163, 166], "einmalig": [163, 166], "positiv": [163, 166], "absolvierten": [163, 166], "innerhalb": [163, 166, 1048, 1258], "wochen": [163, 166], "bekanntgab": [163, 166], "pr\u00fcfungsergebniss": [163, 166], "melden": [163, 166], "teilleistungen": [163, 166], "erbringen": [163, 166], "legt": [163, 166], "fest": [163, 166, 199], "welch": [163, 166, 223, 263], "wiederholen": [163, 166, 213, 415], "anmeldung": [163, 166, 415], "erforderlich": [163, 166], "gesamtzahl": [163, 166], "pr\u00fcfungsversuch": [163, 166], "angerechnet": [163, 166], "jeder": [163, 166, 198, 1235, 1238, 1239, 1258], "wiederholungspr\u00fcfung": [163, 166], "z\u00e4hlt": [163, 166], "zumindest": [163, 166, 198, 223, 1238], "besuchen": [163, 166], "labor\u00fcbungen": [163, 166, 398], "gilt": [163, 166, 199, 213, 254, 415], "anwesenheitspflicht": [163, 166], "begr\u00fcndeten": [163, 166], "einzelf\u00e4llen": [163, 166], "krankheit": [163, 166], "m\u00f6glich": [163, 166, 1240, 1245], "solchen": [163, 166, 223, 233], "nachzuholen": [163, 166], "ersatzleistungen": [163, 166], "bjarn": [163, 166, 643, 825], "stroustrup": [163, 166, 643, 825], "4th": [163, 166], "edit": [163, 166, 193, 195, 196, 205, 237, 242, 278, 306, 371, 418, 598, 860, 887, 993, 1143, 1214, 1254], "brian": [163, 166, 398, 399, 418, 1238], "kernighan": [163, 166, 418, 1238, 1239], "denni": [163, 166, 418, 458, 677, 1238], "ritchi": [163, 166, 418, 458, 677, 1238, 1239], "bl\u00f6cken": [163, 166], "crossdevelop": [163, 166], "tats\u00e4chlich": [163, 166], "vorgetragen": [163, 166, 225], "stoff": [163, 166, 253], "tagesaktuel": [163, 166], "verf\u00fcgung": [163, 166, 204, 223, 1240, 1257], "gestellt": [163, 166, 213, 223, 415, 1240], "stece": 167, "dir": [168, 223, 242, 250, 263, 272, 275, 282, 300, 303, 323, 324, 342, 364, 368, 382, 390, 471, 506, 534, 538, 540, 933, 1063, 1064, 1077, 1100, 1216, 1223], "wo": [168, 198, 208, 209, 217, 223, 225, 415, 1238, 1239, 1257], "jf": [168, 183, 197, 234, 235, 293, 310, 397, 402, 416, 566, 580, 862, 1205, 1206, 1207, 1209, 1210, 1211, 1212, 1246, 1251], "aon": 168, "biz": 168, "svn": [168, 186, 252, 415, 416], "lokalen": 168, "fetch": [168, 191, 205, 887, 1031, 1059], "myremot": 168, "orig": [168, 193, 240], "stia": 168, "improv": [169, 494, 497, 535, 786, 801, 838, 1082, 1140], "stack": [169, 211, 212, 213, 220, 234, 235, 253, 259, 262, 265, 275, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364, 488, 494, 513, 564, 648, 679, 800, 920, 921, 925, 993, 1018, 1030, 1251], "hang": [169, 233, 644, 890, 913], "seo": [169, 899], "playground": [169, 171], "i2": [169, 175, 180, 285, 320, 840], "kontron": [169, 182, 840], "smarc": [169, 182, 840], "proper": [170, 190, 218, 480, 862, 887, 1020, 1106], "manifest": [170, 1075, 1224], "cfg": [170, 182, 358], "author_email": 170, "classifi": [170, 1143, 1190], "tox": 170, "travi": 170, "yml": 170, "upgrad": [170, 178, 179, 209, 840, 1216, 1223], "zip": [170, 182, 186, 250, 270, 276, 290, 303, 353, 358, 948, 954, 970], "zipfil": [170, 250], "99": [170, 200, 209, 223, 233, 240, 246, 249, 255, 262, 265, 270, 272, 275, 278, 282, 285, 288, 291, 300, 303, 307, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 392, 397, 402, 498, 1049, 1126, 1162, 1192], "999": [170, 262, 265, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358], "whl": [170, 186, 1143, 1216], "uninstal": [170, 515, 537, 1216, 1221], "pypa": 170, "sampleproject": 170, "gnome3": [171, 923], "fedoraproject": [171, 193, 860], "workstat": [171, 887], "redhat": [171, 205, 327, 358, 500], "thirti": 171, "flatpak": [171, 262, 278, 285, 288, 303, 310, 320, 324, 327, 346, 352, 358, 364, 979], "flathub": [171, 220], "stabl": [171, 180, 197, 201, 504, 865, 887, 927, 1046, 1079, 1081, 1143, 1217], "gnome": [171, 178, 190, 195, 262, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364, 500, 887, 923, 979, 1047], "ipc": [171, 185, 186, 187, 190, 414, 416, 838, 840, 984, 1025, 1053, 1256], "fallback": [171, 1086, 1106], "x11": [171, 178, 358], "wayland": [171, 178, 195], "dri": 171, "op": [171, 951, 1138], "kb": [171, 186, 192, 1223], "369": [171, 265, 310, 324, 352, 358], "mb": [171, 192, 926], "230": [171, 262, 265, 270, 272, 275, 278, 282, 285, 288, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 513], "375": [171, 265, 272, 282, 310, 324, 342, 352, 358, 368, 493], "diagram": [171, 268, 546, 564, 566, 900, 985, 992, 994], "first_model": 171, "unavail": [171, 813], "cairo": [171, 186], "gobject": [171, 186], "regogn": 171, "cental": 171, "phycial": 171, "gaphor_model": 171, "fh_source_sink": 171, "sourceandsink": 171, "stuck": [171, 200], "assum": [171, 192, 278, 282, 324, 488, 655, 817, 865, 948, 992, 994, 1005, 1078, 1148, 1223], "lib64": [171, 186, 218, 223, 249, 259, 265, 275, 278, 282, 358, 500, 516, 537, 539, 1062, 1065, 1080, 1087, 1209, 1210, 1216, 1230], "pathlib": [171, 359, 367, 369, 1221], "682": [171, 265, 970], "relative_to": 171, "rais": [171, 212, 213, 227, 229, 231, 249, 250, 259, 263, 265, 266, 270, 272, 275, 276, 278, 282, 290, 291, 324, 341, 382, 408, 1084, 1091, 1097, 1107, 1133, 1135, 1209, 1210], "valueerror": [171, 223, 233, 249, 255, 262, 270, 272, 275, 278, 282, 285, 288, 291, 303, 310, 324, 342, 346, 352, 358, 364, 368, 1086, 1133], "subpath": 171, "occur": [171, 220, 282, 372, 424, 439, 444, 445, 491, 509, 518, 618, 813, 885, 948, 977, 1047, 1132, 1133, 1137, 1246], "traceback": [171, 186, 212, 259, 265, 275, 278, 288, 308, 310, 324, 346, 1084, 1085, 1086, 1091, 1099, 1100, 1106, 1107, 1128, 1129, 1133, 1135, 1138, 1139, 1201, 1209, 1210, 1222], "niho62fg": 171, "tracker": [171, 405, 406], "thank": [171, 195, 276, 303, 757, 793, 869, 1030, 1193], "steig": [172, 198], "normalweg": 172, "w\u00e4r": 172, "umst\u00e4nden": [172, 1236, 1240, 1255], "renat": 172, "beschreibung": [172, 234, 236, 244, 247, 250, 251, 253, 269, 281, 976], "bergfex": 172, "reden": 172, "sie": [172, 198, 204, 209, 213, 270, 275, 342, 392, 398, 415, 909, 975, 1235, 1237, 1238, 1239, 1245, 1255, 1257, 1258, 1259], "tagen": [172, 1245], "wir": [172, 208, 213, 217, 223, 225, 233, 234, 239, 253, 272, 278, 285, 338, 415, 703, 1236, 1251, 1252], "w\u00fcrden": 172, "denk": [172, 198, 254, 1255], "beiden": [172, 209, 223, 270, 278, 285], "h\u00fctten": [172, 199], "schlafen": 172, "gaphor": 173, "hochk\u00f6nig": 173, "buildenviron": 174, "resolve_refer": 174, "builder": [174, 262, 373, 1145], "get_and_resolve_doctre": 174, "apply_post_transform": 174, "addnod": 174, "docstr": [174, 186, 246, 249, 259, 265, 271, 283, 286, 289, 311, 343, 365, 397, 1115], "doctre": 174, "devicetre": [175, 993], "signal": [175, 186, 187, 215, 317, 415, 498, 817, 840, 858, 879, 925, 984, 985, 993, 1025, 1030, 1038, 1046, 1047, 1052, 1056, 1247, 1254, 1255, 1258], "audio_mck": 175, "i2s0_ck": 175, "i2s0_lrck": 175, "i2s0_sdout": 175, "alsa": [175, 193, 358], "tlv320dac3203irg": 175, "tlv320dac3203": 175, "drive": [175, 308, 484, 592, 993, 1014, 1195], "suggest": [175, 189, 190, 192, 194, 196, 197, 205, 214, 222, 229, 230, 231, 232, 295, 297, 315, 317, 458, 1111, 1139, 1221], "tlv320aic32x4": 175, "compat": [175, 195, 211, 314, 653, 744, 760, 838, 843, 862, 1065, 1112, 1135, 1201, 1216, 1217], "tlv320aic31xxsw": 175, "tlv320aic31xx": 175, "cdimag": 176, "amd64": [176, 242, 394, 438], "iso": [176, 250, 268, 269, 285, 288, 308, 330, 342, 346, 418, 506, 643, 659, 911], "netinst": 176, "qcow2": 176, "virtualdebian": 176, "30g": [176, 197], "kvm": [176, 193], "hda": 176, "cdrom": 176, "2048": [176, 200, 265], "nic": 176, "sic": [176, 201], "deliveri": [177, 181, 190, 1058, 1061], "dirti": [178, 179, 192, 206, 464, 549, 840], "forget": [178, 183, 190, 191, 192, 266, 429, 432, 477, 506, 530, 531, 726, 1197, 1203, 1222, 1241], "graphic": [178, 499, 923, 924, 993], "plug": [178, 191, 193, 548], "monitor": [178, 193, 207], "4k": [178, 192, 1046, 1055], "dual": [178, 180], "applianc": [178, 192, 500], "benchmark": 178, "glxgear": 178, "su": [178, 1077], "pect": 178, "cluster_project_xxx": [179, 840], "project_xxx_hardware_bringup": [179, 840], "bringup": [179, 180, 840], "project_xxx_dirty_upgrad": [179, 840], "project_xxx_wait_hardwar": [179, 840], "project_xxx_audio_chip": [179, 840], "chip": [179, 208, 262, 840, 985, 989, 992, 1010, 1012, 1046, 1145], "project_xxx_yocto_kernel": [179, 840], "bsp": [179, 840], "project_xxx_debian_config": [179, 840], "project_xxx_debian_kernel_packag": [179, 840], "finish": [179, 222, 241, 372, 810, 840, 897, 1098], "shot": [180, 197, 458, 743, 817, 838], "dac": 180, "massacr": [180, 209, 268, 397, 458, 464, 490, 508, 514, 515, 528, 743, 1094], "distro": [180, 537, 1118, 1230], "bootload": [180, 189, 200, 500, 924, 992, 994], "oldconfig": [180, 191, 860, 867, 887, 888], "qemu": [180, 262, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364, 1065], "grub": [180, 200, 358], "yoctoproject": 182, "v5": [182, 193], "bsp_smarc": 182, "sxal4_smarc": 182, "sxal_r1": 182, "0_combin": 182, "sxal4_5": 182, "sxal4": 182, "inc": [182, 193, 314, 481, 531, 540, 812, 1033, 1097], "filesextrapaths_prepend": 182, "thisdir": 182, "linux_vers": 182, "linux_version_extens": 182, "linux_kernel_typ": 182, "kbranch": 182, "kmeta": 182, "lic_files_chksum": 182, "md5": 182, "bbea815ee2795b2f4230826c0c6b8814": 182, "srcrev_machine_pn": 182, "3604bc07c035939266d78d65084c6cd54ffc6d56": 182, "srcrev_meta_pn": 182, "8d42b14fe517ef036dc4e7b290f16d142f4f1d39": 182, "src_uri": 182, "bareclon": 182, "cach": [182, 186, 191, 317, 320, 358, 480, 494, 499, 500, 525, 678, 695, 825, 970, 1047, 1062, 1216, 1223, 1239], "destsuffix": 182, "scc": 182, "pv": 182, "srcpv": 182, "include_patch": 182, "patch": [182, 201, 202, 1048, 1077, 1236], "compatible_machin": 182, "therebi": [183, 222, 372, 751, 979, 1059, 1106, 1145], "simplifi": 183, "fine": [183, 192, 197, 226, 514, 516, 535, 645, 758, 760, 867, 897, 1005, 1009, 1078, 1095, 1107, 1116, 1122, 1137, 1201], "grain": [183, 197, 506, 535, 897, 1107, 1122], "surround": [183, 744, 785, 797], "cut": [183, 211, 229, 242, 282, 296, 305, 326, 327, 370, 371, 443, 478, 840, 877, 917, 932, 978, 981, 984, 994], "linewis": 183, "wherev": [183, 422], "obs studio": 184, "video edit": 184, "screen record": 184, "These": [184, 192, 194, 195, 259, 265, 275, 278, 535, 542, 860, 887, 992, 1064], "offici": [184, 226, 227, 230, 231, 232, 237, 642, 1077, 1226], "jonathan": [184, 398, 399, 825, 1236], "thoma": 184, "himself": [184, 994], "paus": [184, 192, 1046, 1059], "meanwhil": 184, "freez": [184, 1216, 1224], "photo": 184, "length": [184, 246, 249, 259, 265, 275, 278, 307, 314, 324, 346, 352, 364, 506, 519, 526, 598, 649, 661, 722, 858, 871, 883, 986, 988, 1014, 1024, 1056, 1193, 1201, 1205, 1212], "grab": [184, 985, 993], "neil": 185, "patel": 185, "insight": [185, 189, 535, 1075, 1215], "consol": [185, 242, 923, 926, 981, 1167, 1247], "crawlabl": 185, "dn": [185, 194, 197, 262, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364, 1258], "domain": [185, 186, 196, 197, 202, 490, 504, 510, 1047, 1187, 1190, 1256, 1258], "pydbu": 186, "openh": [186, 187, 208, 249], "recent": [186, 189, 192, 197, 212, 220, 259, 265, 275, 278, 288, 308, 310, 324, 346, 418, 513, 887, 967, 1084, 1085, 1086, 1091, 1099, 1100, 1106, 1107, 1128, 1129, 1133, 1135, 1138, 1139, 1201, 1209, 1210, 1222], "oh_test": 186, "easysuit": 186, "oh_dbus_easysuit": 186, "easysuite_error": 186, "error_suit": 186, "dbusheatingerror": 186, "modulenotfounderror": [186, 303, 308, 1086], "research": [165, 186, 189, 190, 303, 1194], "pygobject": 186, "714": [186, 265], "venv": [186, 223, 249, 259, 265, 275, 276, 278, 290, 320, 358, 404, 405, 970, 1142, 1175, 1188, 1203, 1215, 1221, 1223, 1224], "standalon": [186, 482, 519, 756, 1059, 1228], "ss_9wmug": 186, "__env_pip__": 186, "ignor": [186, 207, 219, 278, 324, 408, 444, 464, 494, 510, 524, 544, 676, 679, 743, 758, 771, 793, 845, 930, 993, 1018, 1060, 1084, 1216], "9lrqmi4l": 186, "overlai": [186, 887, 992, 993], "locat": [186, 187, 191, 196, 201, 222, 259, 265, 275, 278, 282, 332, 348, 397, 415, 467, 480, 488, 494, 542, 564, 657, 677, 754, 802, 862, 887, 992, 993, 994, 1014, 1032, 1056, 1063, 1084, 1192, 1209, 1243], "pycairo": 186, "cwd": [186, 358, 599, 838, 913, 925, 951, 970, 972, 976, 1064], "821": [186, 265], "py2": 186, "344": [186, 265, 278, 310, 324, 342, 352, 358, 364], "517": [186, 265, 310, 358], "tmpabab356k_in_process": 186, "build_wheel": 186, "tmpt1yod7mc": 186, "o4u45fjc": 186, "pycairo_33865a19ad6b4a719885f07926efe16d": 186, "bdist_wheel": [186, 1143], "build_pi": 186, "pyi": 186, "build_ext": 186, "pkg": 186, "perhap": [186, 282, 856, 1196], "pkg_config_path": 186, "cp39": 186, "linux_x86_64": 186, "_vendor": 186, "pep517": 186, "in_process": 186, "_in_process": 186, "tmpf2wjv23h": 186, "4rtfumdz": 186, "pygobject_beef4432e2454eb0b7facc57fadf42b8": 186, "pygtkcompat": 186, "generictreemodel": 186, "_signalhelp": 186, "_propertyhelp": 186, "_ossighelp": 186, "_option": 186, "_gtktemplat": 186, "_error": [186, 573], "_constant": 186, "keysym": 186, "pango": 186, "gio": 186, "gdkpixbuf": 186, "gdk": 186, "glib": 186, "gimarshallingtest": 186, "tmp56g_ixbz": 186, "bvay4iv4": 186, "pygobject_6777f13e15934fb2b13139399b143557": 186, "todo": [186, 231, 266, 294, 295, 410, 411, 600, 743, 825, 841], "summari": [186, 227, 549, 652, 802, 1221], "c1": [186, 200, 547, 661, 747], "misc": [186, 187, 209, 210, 369, 620, 856, 900, 1240], "w3school": 186, "howto": [186, 187, 858], "howto_css_image_transpar": 186, "asp": 186, "titelseit": 186, "mitt": 186, "howto_js_read_mor": 186, "subdir": [186, 368, 838, 1084], "gegen": [186, 1236], "clutter": [186, 219, 514, 528], "404": [186, 196, 265, 272, 310, 324, 342, 358, 368], "prio": [186, 228, 1048, 1049, 1055], "beagleboard": [186, 191, 202], "repair": [186, 202, 262], "nand": [186, 202], "40w": [186, 202], "suck": [186, 187, 202], "disk": [186, 189, 190, 193, 197, 202, 493, 924, 925, 945, 974, 1009, 1010, 1080, 1137, 1236], "contact": [186, 1243], "ssl": [186, 197, 358, 1216], "certif": [186, 197, 200, 247, 1216], "070": [186, 743], "fortgeschritten": [186, 416, 1238], "700": [186, 265, 695, 804, 1001], "lf": [186, 249, 580, 1137], "descr": [186, 270, 346, 364, 726], "050": [186, 743, 1058, 1059], "080": [186, 743], "020": [186, 265, 306, 743, 1054, 1055, 1058, 1059], "060": [186, 187, 226, 405, 743], "_hidden": 186, "010": [186, 352, 743, 947, 1051, 1052, 1054, 1055, 1058, 1059], "190": [186, 223, 240, 249, 262, 265, 270, 272, 275, 278, 282, 285, 288, 291, 300, 303, 310, 320, 324, 330, 342, 346, 358, 364, 368], "propos": [186, 490, 588], "030": [186, 743, 753, 803, 1054, 1055, 1058, 1059], "040": [186, 352, 743, 1054, 1055, 1058, 1059], "central": [187, 219, 252, 341, 344, 418, 462, 542, 838, 1080, 1125, 1137, 1244], "rstjinja": 187, "105": [187, 209, 223, 233, 238, 240, 246, 259, 262, 265, 270, 272, 278, 282, 285, 288, 291, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 392, 397, 402, 1050], "110": [187, 194, 209, 223, 233, 240, 246, 255, 259, 262, 265, 270, 272, 278, 282, 285, 288, 300, 303, 307, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 392, 582, 583, 743, 947, 1054, 1055], "cxx_class_templ": [187, 642, 840], "cxx_dynamic_memori": [187, 642, 840], "cxx_global_initi": [187, 642, 840], "cxx_inheritance_virtu": [187, 642, 840], "cxx_ownership_raii": [187, 642, 840], "cxx_stl_container_intro": [187, 642, 840], "cxx_templates_vs_interfac": [187, 642, 840], "maj": [187, 844], "min": [187, 303, 822, 844, 1193], "cdev": [187, 843, 844, 846, 850, 851, 856], "fop": [187, 844, 851], "devtmpf": [187, 843, 844, 889], "dynam": [187, 217, 225, 226, 259, 265, 275, 276, 278, 321, 380, 415, 479, 483, 492, 496, 501, 502, 537, 563, 600, 631, 640, 642, 649, 714, 716, 719, 720, 740, 745, 754, 783, 807, 824, 825, 826, 837, 839, 840, 844, 849, 854, 857, 859, 864, 868, 878, 882, 884, 889, 891, 896, 902, 905, 908, 913, 925, 984, 1033, 1035, 1044, 1062, 1063, 1065, 1079, 1103, 1117, 1138, 1188, 1242, 1246], "sysprog_ev": 187, "sysprog_ipc": 187, "sysprog_sign": 187, "unittest_gtest_bas": [187, 840, 1226], "unittest_gtest_fixtur": [187, 840, 1226], "brows": [187, 189, 205, 927, 993], "rtd": 187, "blender": 187, "corda": 187, "figclass": 187, "homebrain": [187, 308, 320, 526, 970, 971], "literalinclud": 187, "within": [187, 192, 268, 278, 324, 415, 591, 592, 596, 601, 646, 717, 781, 851, 985, 1098, 1115, 1127, 1212], "045": [187, 306, 352], "tex": 187, "055": 187, "056": 187, "910": [187, 265, 970], "virtmem": 187, "fart": 187, "ungern": 187, "lost": [187, 197, 262, 268, 491, 620, 743, 802, 1001, 1035, 1038, 1055, 1098, 1221, 1222, 1228], "he": [187, 191, 205, 213, 222, 226, 229, 242, 247, 250, 252, 273, 276, 299, 318, 319, 323, 340, 345, 756, 758, 793, 796, 1003, 1036, 1049, 1060, 1103, 1131, 1188, 1214], "friend": [189, 190, 237, 258, 294, 295, 297, 306, 317, 354, 355, 373, 374, 500, 583, 660, 816, 817, 839, 840, 858, 879, 985, 1230], "alia": [189, 194, 242, 268, 476, 479, 483, 492, 496, 501, 502, 516, 745, 783, 837, 839, 840, 948, 949, 1077], "rm": [189, 191, 195, 196, 230, 232, 397, 402, 995, 1005, 1223], "rf": [189, 191, 948, 958, 1223], "creativ": [189, 267], "variat": [189, 376, 805, 892, 930], "thereof": [189, 306, 314, 547, 664, 1103], "happili": [189, 190, 268, 490, 659], "stage3": 189, "decad": [189, 197, 214, 887, 992, 994, 1005, 1085, 1244], "busybox": [189, 190], "initramf": [189, 912], "resid": [189, 192], "flash": [189, 192, 197, 500, 926, 985, 1046], "eras": [189, 579, 637, 698, 804, 834, 945], "hit": [189, 191, 192, 211, 214, 252, 838, 948, 977, 980, 1216], "sole": 189, "liter": [189, 212, 228, 233, 240, 250, 258, 259, 263, 270, 275, 278, 282, 285, 294, 295, 303, 310, 324, 342, 346, 352, 354, 358, 364, 389, 393, 397, 424, 432, 439, 488, 524, 563, 578, 598, 743, 756, 887, 1060, 1118, 1131, 1135], "told": [189, 192, 516, 569, 985], "reboot": [189, 191, 208, 887, 949, 992, 993, 994], "fatal": [189, 217, 511, 513, 514, 530, 540, 887, 1229], "saw": [189, 192, 222, 251, 408, 445, 646, 1018, 1020, 1079], "115200": 189, "8n1": 189, "remaind": [189, 190, 193, 195, 218, 222, 306, 865, 887, 985, 993, 1064], "recov": [189, 209], "fauxpa": 189, "explan": [189, 192, 218, 222, 229, 252, 283, 343, 397, 498, 531, 620, 822, 887, 918, 985, 993, 1020, 1050, 1055, 1191, 1194, 1223], "annot": [189, 250, 299, 339, 499, 643, 1188], "beagl": 189, "omap": 189, "rom": 189, "stage": [189, 205, 251, 375, 378, 1195], "processor": [189, 190, 249, 250, 263, 438, 482, 695, 807, 887, 892, 1030, 1047, 1062], "sram": 189, "dram": 189, "latter": [189, 192, 1046, 1087, 1127, 1195], "abil": [189, 743], "wrote": [189, 192, 405, 1241], "ones": [189, 205, 212, 214, 278, 316, 324, 426, 494, 993, 994, 1120, 1205], "revis": [189, 193, 196, 293, 643, 742, 1241], "slightli": [189, 201, 222, 251, 268, 269, 620, 1115], "season": 189, "c4": [189, 200], "valuabl": [189, 498, 914, 915, 1079, 1081, 1087], "c3": [189, 193, 200], "angstrom": 189, "mlo": 189, "ift": 189, "fdisk": [189, 1236], "obvoiusli": 189, "fat32": [189, 887], "fat16": 189, "partit": [189, 190, 191, 278, 324, 887], "mount": [189, 191, 306, 403, 843, 887, 918, 1028, 1055, 1056, 1075, 1077], "sector": [189, 262, 1145], "intend": [189, 195, 196, 197, 207, 242, 259, 265, 275, 278, 535, 756, 860, 993, 1020, 1021, 1143], "slot": [189, 1024, 1106], "partli": [189, 191, 486], "meaning": [189, 197, 869], "scr": 189, "omap3": 189, "mmc1": 189, "arch": [189, 193, 867, 887, 888, 992], "mach": [189, 251, 256, 272], "omap2": 189, "omap3beagl": 189, "Near": 189, "offset": [189, 838, 858, 1017, 1080], "128k": 189, "0x80000": 189, "byte": [189, 192, 205, 207, 209, 259, 265, 275, 278, 285, 288, 303, 324, 330, 346, 352, 358, 364, 382, 397, 420, 428, 438, 439, 470, 473, 482, 485, 491, 495, 549, 644, 649, 652, 657, 664, 677, 802, 838, 901, 918, 925, 948, 979, 986, 992, 1009, 1010, 1011, 1014, 1016, 1018, 1019, 1020, 1021, 1044, 1047, 1052, 1055, 1059, 1112, 1118, 1123, 1137, 1201], "reli": [189, 222, 792, 897, 1118], "ecc": [189, 193], "nandecc": 189, "hw": 189, "80000": 189, "0x0": [189, 992], "0x60000": 189, "unlik": [189, 242, 293, 807, 814, 820, 985, 1126, 1206, 1246], "intermedi": [189, 210, 526, 547, 1062, 1112], "nevertheless": [189, 190, 197, 309, 312, 887], "0x20000": 189, "fatload": 189, "80200000": 189, "20392": 189, "131072": [189, 845], "40000": 189, "0x40000": 189, "60000": 189, "incarn": [189, 197, 464, 791], "choic": [189, 190, 191, 214, 250, 263, 282, 494, 504, 508, 599, 647, 716, 802, 992, 1046, 1075, 1204], "finger": [189, 200, 494, 927, 985], "sw": [189, 597], "0x1e0000": 189, "1e0000": 189, "0x240000": 189, "275928": 189, "1966080": 189, "prompt": [189, 197, 200, 210, 242, 253, 281, 290, 919, 948, 950, 1001, 1112, 1113, 1150, 1154, 1167, 1173, 1223], "280000": 189, "400000": [189, 993, 1193], "month": [190, 252, 262, 310, 314, 439], "met": [190, 486, 994], "microcontrol": [190, 455, 985, 993, 1046], "clue": 190, "minim": [190, 192, 201, 210, 488, 494, 667, 970, 1075, 1086], "vxwork": 190, "ce": [190, 200, 1077], "quit": [190, 192, 195, 317, 465, 480, 482, 720, 736, 888, 948, 949, 980, 985, 993, 1036, 1059, 1075], "presenc": [190, 192, 510, 1246], "probabl": [190, 196, 222, 282, 312, 389, 509, 517, 524, 532, 645, 751, 887, 899, 948, 994, 1046, 1123, 1137, 1201, 1204], "sooner": [190, 205, 490, 890], "chose": [190, 201, 268, 737, 972, 1005, 1075], "opinion": [190, 201, 222, 276, 373, 838, 927, 1095], "unless": [190, 272, 278, 282, 324, 513, 714, 748, 913, 970, 1031, 1118, 1137, 1209], "hire": 190, "cheap": [190, 192, 534, 657, 751, 756, 792, 793, 892, 1241], "misl": 190, "posix": [190, 192, 215, 809, 816, 818, 839, 840, 925, 984, 1014, 1025, 1031, 1035, 1037, 1045, 1053, 1137, 1255, 1256], "tell": [190, 191, 192, 195, 196, 197, 205, 219, 266, 487, 678, 913, 994, 1062], "pitfal": [190, 274, 294, 295, 297, 354, 355, 373, 380, 397, 678, 758, 783, 784, 785, 803, 839, 840, 985, 1241], "seen": [190, 192, 197, 210, 223, 251, 430, 449, 487, 524, 530, 542, 552, 858, 883, 912, 1033, 1195, 1199, 1233], "didn": [190, 191, 192, 201, 222, 226, 242, 252, 276, 345, 887, 967, 1019, 1137, 1139, 1188, 1192], "rtoss": 190, "commonli": [190, 259, 282, 309, 312, 556, 818, 838, 873, 907, 950, 1014, 1062, 1213], "tear": [190, 295, 549, 598, 599, 600, 601, 662, 802, 856, 1062, 1228], "notif": [190, 195, 214, 815, 989, 1060], "dread": 190, "segment": [190, 192, 462, 591, 657, 781, 801, 1046, 1056], "fault": [190, 192, 410, 411, 462, 657, 801, 1046], "arriv": [190, 374, 879, 904, 1044, 1059], "handler": [190, 259, 265, 275, 278, 317, 324, 337, 498, 867, 869, 897, 1030, 1046, 1058, 1061], "pai": [190, 314, 493, 510, 918], "safe": [190, 259, 265, 266, 275, 278, 288, 490, 751, 793, 795, 803, 817, 1001, 1006, 1030, 1033, 1038, 1061], "pthread_": 190, "trick": [190, 247, 257, 260, 263, 287, 299, 323, 329, 465, 518, 522, 1188], "sigwait": [190, 1059], "sigwaitinfo": 190, "sigtimedwait": 190, "caught": [190, 259, 265, 275, 278, 497, 667], "synchron": [190, 262, 268, 278, 285, 288, 303, 310, 318, 319, 320, 324, 340, 341, 344, 346, 352, 358, 364, 810, 816, 839, 840, 979, 984, 1009, 1025, 1031, 1032, 1039, 1045, 1046, 1056, 1058, 1061, 1246], "signalfd": [190, 1014, 1052, 1255, 1256], "Its": [190, 192, 195, 598, 977, 1047], "emb": 190, "among": [190, 214, 222, 259, 265, 275, 278, 487, 802, 933, 992, 1014, 1020, 1044, 1060, 1111, 1196, 1197, 1221, 1244], "epol": [190, 1028, 1052, 1056, 1256, 1258], "naiv": [190, 210, 265, 268, 332, 348, 482, 509, 524, 544, 636, 638, 652, 719, 801, 836, 895, 1030, 1050, 1061, 1092, 1093, 1195, 1200, 1233, 1243], "intra": 190, "primit": [190, 234, 235, 315, 1093, 1241, 1251], "oss": 190, "synchronis": [190, 1030, 1257], "pthread_mutex_init": [190, 815, 1033], "critical_sect": 190, "closest": [190, 751], "pendant": [190, 637, 846], "expir": [190, 897, 1012, 1044, 1046, 1060], "sometim": [190, 205, 282, 454, 470, 494, 651, 742, 918, 926, 1019, 1031, 1077, 1083, 1114, 1221], "setitim": 190, "timer_cr": [190, 1046], "drawback": [190, 464, 481, 486, 491, 555, 678, 1001], "unfortun": [190, 191, 214, 251, 569, 985, 1206], "straightforward": [190, 269, 376, 379, 765, 803, 855, 1089, 1106, 1124, 1193], "nanosleep": [190, 817, 1046], "timerfd_cr": [190, 1012, 1014, 1255, 1256], "conjunct": 190, "emul": [190, 295, 297, 315, 482, 491, 497], "stupid": [190, 192, 249, 265, 268, 270, 439, 464, 470, 488, 494, 504, 751, 806, 904, 967, 1009, 1091, 1137], "screw": [190, 704], "otherwis": [190, 191, 276, 278, 282, 319, 324, 352, 368, 388, 443, 454, 480, 490, 660, 698, 756, 785, 792, 807, 813, 858, 871, 879, 887, 895, 914, 915, 1001, 1030, 1035, 1041, 1056, 1086, 1115, 1118, 1135, 1137, 1157, 1168, 1210, 1233], "millisecond": [190, 259, 265, 275, 278, 804, 818, 895, 993], "etern": 190, "nowadai": [190, 192, 194, 195, 251, 318, 319, 340, 420, 438, 862, 897, 923, 926, 1014, 1060, 1201], "moder": [190, 197, 257], "tri": [190, 191, 192, 201, 205, 211, 222, 270, 368, 408, 599, 730, 813, 838, 985, 994, 1047, 1241], "achiev": [190, 249, 282, 374, 720, 1044, 1098], "albeit": [190, 564, 791, 1041, 1123, 1241], "lose": [190, 241, 252, 272, 275, 278, 288, 352, 358, 364, 1122], "wealth": 190, "socket": [190, 208, 229, 299, 838, 840, 920, 921, 924, 984, 1009, 1013, 1014, 1025, 1056, 1060, 1216, 1255, 1256, 1258], "uart": [190, 486, 920, 921], "previous": [190, 259, 265, 275, 278, 282, 1060, 1241], "regardless": [190, 465, 993], "surpris": [190, 192, 306, 488, 524, 713, 1082, 1106], "alon": [190, 191, 192, 205, 315, 317, 494, 498, 760, 1127, 1195, 1246], "advantag": [190, 486, 657], "regularli": [190, 491], "buffer": [190, 278, 303, 318, 319, 324, 340, 344, 426, 575, 580, 756, 903, 932, 1006, 1009, 1010, 1011, 1012, 1020, 1059, 1137], "ttys0": 190, "stream": [190, 195, 197, 237, 263, 278, 303, 643, 660, 932, 986, 1044, 1091, 1213, 1258], "eventfd": [190, 1014, 1052, 1255, 1256], "complic": [190, 191, 200, 229, 272, 282, 436, 455, 494, 519, 531, 670, 754, 760, 780, 846, 883, 986, 994, 1059, 1062, 1091, 1204, 1243, 1246], "unregist": [190, 551], "callback": [190, 226, 259, 265, 275, 278, 406, 771, 897, 906, 1204], "comfort": [190, 242, 400, 795, 992, 1213], "excit": 190, "hundr": [190, 192, 197, 300, 303, 1014], "panel": 190, "deal": [190, 266, 488, 654, 887, 994, 1116, 1190, 1201, 1241, 1246], "touch": [190, 196, 222, 259, 265, 275, 278, 506, 933, 942, 947, 992, 1015, 1021, 1246], "stai": [190, 214, 226, 257, 1059], "harder": [190, 807, 995], "buggi": [190, 652, 781, 793, 1046], "examin": [190, 192, 490, 519, 660, 802, 830, 948, 1041], "debugg": [190, 259, 265, 275, 276, 278, 547, 1239, 1254], "gdb": [190, 242, 415, 1239], "spidev": 190, "bluntli": 190, "whether": [190, 210, 278, 282, 303, 314, 324, 429, 493, 604, 649, 682, 838, 883, 993, 1167, 1173, 1216], "deadlin": 190, "howev": [190, 200, 219, 282, 543, 860, 862, 985, 1028, 1030], "sched_setschedul": [190, 207, 1049], "pthread_attr_setschedparam": [190, 1049], "runnabl": [190, 885, 1047, 1048, 1049], "prioriti": [190, 207, 278, 879, 885, 887, 889, 925, 1047, 1048, 1056, 1257], "anymor": [190, 196, 201, 214, 251, 268, 506, 516, 518, 659, 754, 756, 765, 789, 802, 803, 807, 923, 992, 1035, 1046, 1048, 1080, 1118, 1120, 1210], "potenti": [190, 534, 657, 765, 813, 1005, 1086, 1098, 1144], "harm": [190, 458, 486, 803, 805, 1086], "polici": [190, 195, 207, 358, 506, 526, 542, 716, 720, 865, 1047, 1048, 1257], "sched_fifo": [190, 1048, 1049, 1236], "sched_rr": [190, 192, 1049, 1236], "robin": [190, 257, 1049, 1257], "manner": [190, 464, 726, 887, 992], "troubl": 190, "trigger": [190, 408, 869, 873, 992, 1106, 1197], "certain": [190, 222, 229, 372, 485, 490, 568, 591, 592, 771, 793, 883, 918, 932, 1035, 1062, 1111], "circumst": [190, 1047], "deadlock": [190, 620, 813, 814, 879, 892, 1033, 1047, 1048], "inspect": [190, 192, 259, 265, 275, 278, 296, 305, 316, 326, 341, 370, 840, 917, 984, 1005], "uclibc": 190, "investig": 190, "spend": [190, 197, 211, 222, 226, 247, 250, 273, 299, 323, 345, 493, 1188], "browser": [191, 197, 209, 220, 253], "significantli": [191, 1059], "decreas": [191, 192, 482, 948, 1050], "week": [191, 206, 484], "forth": [191, 495, 918, 992, 1005, 1118], "spare": 191, "volum": 191, "undertak": 191, "indirectli": [191, 802], "pocket": 191, "purchas": [191, 282], "corsair": 191, "120": [191, 209, 223, 233, 240, 255, 259, 262, 265, 270, 272, 275, 278, 282, 285, 288, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 661, 743, 1054, 1055], "overhaul": 191, "reserv": [191, 197, 214, 226, 262, 278, 303, 324, 437, 524, 679, 851, 883, 944, 1049, 1145], "livecd": 191, "ssd": [191, 493, 1010], "vanish": 191, "gone": [191, 212, 262, 771, 803, 867, 890, 949, 1038], "nowher": [191, 330, 612], "depart": 191, "unusu": 191, "cope": 191, "bet": 191, "themselv": [191, 464, 504, 564], "aggress": 191, "harddisk": 191, "treatment": [191, 282, 948, 1080], "proud": 191, "120g": 191, "fresher": 191, "plenti": [191, 193, 498], "4g": [191, 192], "shouldn": [191, 743, 887, 1135], "hibern": 191, "fstab": [191, 358], "room": [191, 197, 226, 341, 544, 695, 881, 994, 1201, 1244], "swapon": 191, "sda1": 191, "swapoff": 191, "overal": 191, "mitig": [191, 881], "perfect": [191, 197, 205, 251, 299, 354, 374, 418, 695, 752, 783, 806, 839, 840, 1089, 1143, 1188, 1219, 1241], "portag": [191, 887, 977], "openoffic": 191, "tmpdir": [191, 316, 345, 506, 601, 838, 1084, 1183, 1185, 1221], "500m": 191, "2g": 191, "6g": 191, "throwawai": 191, "1tb": 191, "sdc1": [191, 918], "mnt": [191, 918, 927, 1056], "emerg": 191, "umount": 191, "runnung": 191, "offend": [191, 193, 195, 205, 569, 1046], "trap": [191, 252, 477, 482, 500, 648, 1240, 1242], "candid": [191, 210, 251, 494, 760, 780, 793, 1086, 1159], "destin": [191, 445, 507, 528, 537, 637, 678, 754, 1004, 1011], "app": [191, 195, 507, 515, 1046, 1200], "admin": [191, 197, 397, 999, 1003], "cron": [191, 931, 1116], "rc": [191, 358, 985], "grep": [191, 195, 201, 230, 232, 242, 296, 305, 326, 327, 370, 371, 840, 906, 911, 917, 923, 925, 930, 932, 944, 975, 978, 981, 984, 992, 994, 995, 1031, 1041, 1046, 1204, 1245, 1247, 1252], "tune": [191, 192, 201, 494, 914, 915, 938, 940, 942, 949, 997, 1115], "exce": [191, 226, 848, 1046, 1056], "20m": [191, 985, 1044], "compresscmd": 191, "bzip2": [191, 201, 230, 232, 912, 913, 1077], "compressopt": 191, "compressext": 191, "missingok": 191, "sharedscript": 191, "postrot": 191, "reload": [191, 230], "endscript": 191, "adjac": [191, 404, 802, 858], "sda": [191, 992, 994], "cfq": 191, "noop": [191, 987], "believ": [191, 197, 985, 994, 1022], "r5": 191, "menuconfig": [191, 201, 887, 992, 1077], "xorg": [191, 195], "emerge_log_dir": 191, "unionf": 191, "fuse": [191, 193, 358, 995, 1005], "persist": [191, 207, 434, 438, 446, 510, 525, 526, 949, 993], "held": [192, 334, 337, 415, 825, 845, 879, 892], "compani": [192, 195, 196, 197, 232, 242, 282, 308, 319, 334, 415, 504, 542, 543, 927, 1143, 1190], "z\u00fcrich": [192, 414], "hardcor": 192, "attitud": [192, 197, 316], "began": 192, "dive": [192, 309, 312, 1202], "inevit": [192, 374, 415, 515, 795], "came": [192, 259, 263, 265, 275, 278, 945, 951, 992, 1118, 1171, 1241], "heap": [192, 477, 549, 649, 652, 704, 785, 802, 848, 873], "128": [192, 195, 209, 223, 233, 240, 246, 249, 255, 259, 262, 265, 268, 270, 272, 275, 278, 282, 285, 288, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 493, 657, 992, 1020, 1065, 1078, 1201], "dead": [192, 201, 494], "attempt": [192, 197, 220, 278, 416, 751, 753, 825, 1216], "reject": [192, 205], "proof": [192, 214, 482, 493, 497, 547, 631], "evid": 192, "fortun": [192, 197, 494, 506, 756, 1193], "overnight": [192, 257], "night": [192, 226], "instinct": 192, "defens": [192, 436, 437], "grow": [192, 678, 925, 1079], "growth": [192, 262, 1145], "handi": [192, 1252], "tricki": 192, "alloca": 192, "stdio": [192, 251, 263, 419, 420, 422, 426, 428, 430, 461, 487, 534, 653, 659, 925, 945, 992, 1010, 1011, 1012, 1014, 1015, 1018, 1019, 1020, 1021, 1033, 1046, 1052, 1055, 1059, 1060, 1062, 1065, 1075, 1079, 1081, 1137], "stdlib": [192, 477, 491, 992, 1010, 1011, 1012, 1043, 1052, 1059], "size_t": [192, 477, 490, 545, 625, 634, 637, 680, 685, 691, 695, 701, 722, 737, 749, 754, 765, 766, 767, 768, 769, 834, 835, 836, 838, 846, 873, 1006, 1014, 1024, 1056, 1059], "stack_growth": 192, "argc": [192, 471, 513, 528, 549, 588, 992, 1018, 1019, 1020, 1021, 1026, 1029, 1043, 1059, 1081, 1228, 1233], "mem": [192, 208, 634, 851], "fprintf": [192, 452, 465, 1006, 1046, 1081], "stderr": [192, 241, 250, 259, 265, 275, 278, 288, 296, 305, 306, 326, 327, 370, 390, 397, 452, 465, 535, 840, 917, 929, 930, 984, 1006, 1014, 1046, 1081, 1116, 1129, 1137, 1247], "atoi": [192, 1022], "printf": [192, 201, 251, 263, 419, 420, 422, 428, 430, 434, 460, 461, 464, 465, 487, 534, 653, 659, 925, 945, 1008, 1012, 1052, 1059, 1060, 1062, 1065, 1075, 1079, 1081, 1126, 1132], "getpid": [192, 1059], "memset": [192, 1011, 1046, 1055, 1059], "24299": 192, "vsz": 192, "rss": 192, "3944": [192, 265], "986": [192, 262, 265, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364, 979], "188": [192, 223, 240, 249, 262, 265, 270, 272, 275, 278, 282, 285, 300, 303, 310, 320, 324, 330, 342, 346, 358, 364, 368], "320": [192, 265, 275, 278, 303, 310, 324, 330, 342, 358, 364, 368], "exact": [192, 242, 282, 394, 458, 790, 807, 860, 862, 1216], "glibc": [192, 867, 1075, 1077, 1078, 1236], "presum": [192, 374], "writabl": [192, 488, 933, 948, 1020], "eater": [192, 1050], "1k": 192, "furthermor": 192, "188k": 192, "anyth": [192, 196, 197, 222, 249, 265, 269, 292, 314, 315, 404, 504, 509, 531, 556, 591, 666, 736, 756, 834, 835, 836, 985, 997, 1005, 1009, 1015, 1044, 1079, 1084, 1085, 1086, 1129, 1137, 1193, 1210, 1214], "proce": [192, 200, 279, 312, 403, 601], "million": [192, 228, 542, 720, 887, 1089], "24908": 192, "4800": [192, 265], "1200": [192, 265, 695], "1044": [192, 265], "1376": [192, 265], "grown": [192, 195], "reflect": [192, 528, 887, 1047, 1078, 1079, 1106], "greedi": 192, "24960": 192, "8mb": 192, "barrier": [192, 480, 802, 817, 871], "ulimit": [192, 925], "8192": [192, 265, 465, 925, 1062], "8000000": 192, "25018": 192, "11632": [192, 265], "2908": [192, 265], "7876": [192, 265], "8236": [192, 265], "demand": [192, 195, 212, 312, 488, 887, 939, 941, 1091, 1126], "magic": [192, 194, 358, 471, 506, 522, 771, 846, 887, 1091, 1221], "bother": [192, 1005, 1009], "pthread_attr_setstacks": 192, "2mb": 192, "rlimit_stack": [192, 1062], "pthread_creat": [192, 1031, 1046], "nthread": 192, "act": [192, 249, 514, 609, 679, 994, 1005, 1008, 1060, 1097], "shut": [192, 855, 887], "sit": [192, 268, 403, 554, 932, 992, 993, 1003, 1005, 1009, 1059, 1204], "stack_limit": 192, "thread_func": 192, "arg": [192, 209, 223, 249, 250, 259, 263, 265, 275, 276, 278, 282, 288, 303, 324, 342, 522, 534, 846, 1031, 1084, 1088, 1109, 1116, 1139, 1230, 1236], "pthread_attr_t": [192, 1031, 1049], "attr": [192, 207, 1031, 1033, 1035, 1049, 1055, 1056], "pthread_attr_init": 192, "ld": [192, 358, 538, 539, 628, 646, 719, 865, 887, 914, 915, 933, 946, 970, 1052, 1062, 1063, 1065, 1075, 1080], "strerror": [192, 265, 1006, 1015, 1046, 1059], "p_attr": 192, "pthread_t": [192, 1031, 1046, 1049], "rv": [192, 238, 300, 358, 364], "31524": 192, "825840": 192, "206460": 192, "819936": 192, "1404": [192, 265], "800mb": 192, "writeabl": [192, 936, 944, 967], "worth": [192, 887, 994, 1115, 1187, 1241, 1256], "eaten": 192, "field": [192, 195, 197, 209, 214, 220, 256, 263, 270, 278, 288, 291, 308, 310, 314, 324, 358, 389, 408, 421, 726, 826, 828, 923, 928, 947, 981, 1133, 1145, 1166, 1195, 1196], "alleg": 192, "wast": [192, 200, 201, 490, 798, 815, 1201], "moment": [192, 226, 490, 542, 544, 739, 788], "771": [192, 265, 352], "766604": 192, "hasn": [192, 195, 196, 205, 881, 904, 1117], "effect": [192, 196, 217, 398, 399, 434, 484, 494, 522, 526, 566, 713, 756, 842, 871, 944, 949, 992, 1004, 1005, 1047, 1061, 1087, 1099, 1120, 1167, 1195, 1215, 1223], "4096": [192, 209, 265, 838, 914, 915, 985, 992, 993, 994, 1005, 1028, 1055, 1062], "1026": [192, 265], "invalid": [192, 233, 240, 270, 275, 276, 278, 282, 285, 303, 310, 317, 324, 342, 346, 352, 358, 364, 393, 408, 491, 522, 569, 580, 583, 637, 652, 736, 737, 738, 751, 754, 760, 801, 803, 817, 845, 1035, 1062, 1139], "insist": [192, 222, 659, 1230], "pthread_stack_min": 192, "16384": [192, 197, 265, 992, 993, 994, 1062], "1125": 192, "7840": [192, 265], "1960": [192, 265], "1936": [192, 265], "risk": [192, 542, 985, 1003, 1048, 1114], "512": [192, 265, 310, 342, 358, 368, 495, 925], "513": [192, 265, 310, 358, 802], "2212": [192, 265], "4210920": 192, "1052730": 192, "4205016": 192, "4576": [192, 265], "misunderstand": [192, 811], "overcommit": 192, "kept": [192, 197, 222, 228, 465, 480, 925, 986, 1062, 1091], "plai": [192, 200, 242, 482, 500, 887, 985, 1104, 1107, 1195], "stutter": 192, "4353": 192, "red": [192, 193, 238, 240, 246, 254, 266, 269, 282, 314, 390, 698, 985, 1113, 1204], "chili": 192, "pepper": 192, "overli": [192, 931, 1090], "adob": 192, "riddanc": 192, "8462": [192, 265], "3284640": 192, "821160": 192, "3278736": 192, "3064580": 192, "lie": [192, 793], "constraint": [192, 200, 760, 763, 765, 994], "800": [192, 233, 265, 695, 1148], "4000000": 192, "11338": [192, 265], "900": [192, 265, 695], "12156": [192, 265], "shrink": [192, 678], "inadvert": 192, "3mb": 192, "nois": 192, "henc": [192, 197, 524, 601, 655, 699, 1010, 1014, 1062], "14386": [192, 265], "child_stack": 192, "0x7f5813f22ff0": 192, "clone_vm": 192, "clone_f": 192, "clone_fil": 192, "clone_sigha": 192, "14413": 192, "mmap": [192, 1054, 1056, 1062, 1255], "8392704": 192, "prot_read": [192, 1055, 1062], "prot_writ": [192, 1055, 1062], "map_priv": [192, 1055, 1062], "map_anonym": [192, 1062], "map_stack": 192, "0x7fd14f9af000": 192, "mprotect": [192, 1062], "0x7fd14f1ae000": 192, "prot_non": 192, "placehold": [192, 570, 602, 758, 807, 994], "proc": [192, 262, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364, 850, 867, 869, 871, 887, 888, 1014, 1031, 1055, 1059, 1254], "7fd14f1af000": 192, "7fd14f9af000": 192, "00000000": 192, "7fd14f9b0000": 192, "topmost": [192, 1221], "pseudo": [192, 210], "redund": [192, 465, 494], "smap": 192, "7fd14f1ae000": 192, "pss": 192, "shared_clean": 192, "shared_dirti": 192, "private_clean": 192, "private_dirti": 192, "referenc": [192, 210, 233, 341, 344, 522, 526, 541, 659, 802, 803, 804, 1022, 1230], "anonym": [192, 544, 860, 1055], "anonhugepag": 192, "kernelpages": 192, "mmupages": 192, "miss": [192, 211, 218, 220, 222, 238, 265, 270, 275, 282, 341, 344, 397, 454, 499, 500, 511, 513, 516, 522, 540, 600, 631, 652, 744, 780, 862, 865, 1012, 1046, 1064, 1088], "shallow": [192, 262, 274, 364, 746], "extent": [192, 222, 229, 242, 394, 485, 490, 887, 1062, 1111], "8k": [192, 932], "swamp": 192, "panic": [192, 205, 895, 948], "meaningless": 192, "global": [192, 193, 211, 217, 222, 226, 231, 235, 238, 251, 259, 262, 265, 268, 269, 275, 278, 281, 292, 295, 303, 315, 318, 320, 324, 329, 333, 340, 344, 345, 349, 350, 351, 356, 357, 362, 363, 364, 366, 367, 375, 378, 392, 397, 443, 460, 466, 472, 476, 479, 483, 487, 490, 492, 496, 497, 501, 502, 510, 516, 517, 523, 524, 526, 529, 533, 549, 555, 564, 598, 599, 600, 601, 642, 649, 662, 745, 783, 786, 801, 802, 812, 837, 839, 840, 856, 994, 1030, 1033, 1037, 1038, 1040, 1062, 1084, 1087, 1095, 1097, 1130, 1145, 1188, 1216, 1224, 1228], "dig": [192, 194], "thorough": [192, 201, 414, 1110, 1195, 1214, 1256], "counter": [192, 275, 422, 428, 429, 438, 494, 499, 500, 644, 754, 1055], "delai": [192, 259, 265, 275, 278, 993], "substanti": 192, "beforehand": 192, "mlock": [192, 1255], "mlockal": [192, 1255], "contradictori": 192, "lengthi": [192, 374], "felt": 192, "lucki": [192, 652], "agre": [192, 222, 226, 403, 552, 1047, 1194], "glad": 192, "outdat": [193, 201, 887, 1216], "halfwai": 193, "procedur": [193, 201, 430, 795, 985, 1145], "thunderbolt": 193, "hdmi": 193, "unplug": 193, "oop": [193, 1240], "feb": [193, 238, 240, 242, 394, 439, 970, 1028, 1075], "derefer": [193, 657], "0000000000000080": 193, "supervisor": 193, "error_cod": 193, "0x0000": 193, "pgd": 193, "p4d": 193, "0000": [193, 278, 324, 994], "smp": [193, 242, 249, 394], "pti": 193, "281": [193, 262, 265, 270, 272, 275, 278, 282, 285, 303, 310, 324, 330, 342, 352, 358, 364], "comm": 193, "kworker": 193, "taint": 193, "fc31": 193, "asustek": 193, "zenbook": 193, "ux391ua": 193, "bio": 193, "204": [193, 223, 249, 262, 265, 270, 272, 275, 278, 282, 285, 288, 300, 303, 310, 324, 330, 342, 346, 352, 358, 364, 368, 549], "workqueu": [193, 840, 864, 889, 902, 905, 984], "ucsi_connector_chang": 193, "typec_ucsi": 193, "0010": 193, "ucsi_displayport_remove_partn": 193, "0xa": 193, "0x20": [193, 877, 1062], "c7": [193, 200, 1216], "83": [193, 200, 209, 223, 233, 238, 240, 246, 249, 255, 259, 262, 265, 270, 272, 275, 278, 282, 285, 288, 291, 300, 303, 307, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 392, 838, 888, 1192, 1193], "5b": [193, 200], "e9": [193, 200], "6d": [193, 200, 421, 422], "f3": [193, 200], "3d": [193, 200, 211], "fb": [193, 200], "2e": [193, 200, 747], "0f": [193, 200], "1f": [193, 200], "84": [193, 200, 209, 223, 233, 238, 240, 246, 249, 255, 259, 262, 265, 270, 272, 275, 278, 282, 285, 288, 291, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 392, 397, 402, 1192, 1193], "85": [193, 200, 209, 223, 233, 238, 240, 246, 249, 255, 262, 265, 270, 272, 278, 282, 285, 288, 291, 300, 303, 307, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 392, 1063, 1064, 1192, 1193, 1228], "ff": [193, 200, 415, 827, 994], "8b": 193, "78": [193, 200, 223, 233, 238, 240, 246, 249, 255, 262, 265, 270, 272, 278, 282, 285, 291, 300, 303, 307, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 392, 598, 1192, 1193], "c6": 193, "rsp": [193, 262, 1145], "0018": 193, "ffff9daa002d3df8": 193, "eflag": 193, "00010202": 193, "rax": 193, "0000000000000008": 193, "rbx": 193, "ffff901f4ce35710": 193, "rcx": 193, "0000000000003c7d": 193, "rdx": 193, "0000000000003c7c": 193, "rsi": [193, 948], "0000000000000001": 193, "rdi": 193, "rbp": 193, "0000000000000000": [193, 1081], "r08": 193, "ffffffffbc7dbe60": 193, "r09": 193, "ffff9daa002d3cf0": 193, "r10": 193, "ffff901f54951a18": 193, "r11": 193, "ffff901f56a68a78": 193, "r12": 193, "r13": 193, "r14": 193, "ffff901f4ce35860": 193, "r15": 193, "ffff901f4ce355d8": 193, "ffff901f56a00000": 193, "knlg": 193, "cr0": 193, "0000000080050033": 193, "cr2": 193, "cr3": 193, "000000028fbbc003": 193, "cr4": 193, "00000000003606f0": 193, "trace": [193, 212, 259, 265, 275, 278, 535, 877], "ucsi_unregister_altmod": 193, "0x77": 193, "0x90": [193, 877], "ucsi_unregister_partn": 193, "0x13": 193, "0x30": [193, 446], "0x247": 193, "0x340": 193, "process_one_work": 193, "0x1b5": 193, "0x360": 193, "worker_thread": 193, "0x50": 193, "0x3c0": 193, "kthread": 193, "0xf9": 193, "0x130": 193, "kthread_park": 193, "ret_from_fork": 193, "0x35": 193, "0x40": [193, 993], "cdc_ether": 193, "usbnet": 193, "r8152": 193, "mii": 193, "rc_cec": 193, "typec_displayport": 193, "uinput": 193, "rfcomm": 193, "ccm": 193, "xt_checksum": 193, "xt_masquerad": 193, "nf_nat_tftp": 193, "nf_conntrack_tftp": 193, "tun": [193, 198, 213, 217, 233, 240, 279, 1238, 1239, 1240], "bridg": 193, "stp": 193, "llc": 193, "nf_conntrack_netbios_n": 193, "nf_conntrack_broadcast": 193, "xt_ct": 193, "ip6t_reject": 193, "nf_reject_ipv6": 193, "ip6t_rpfilt": 193, "ipt_reject": 193, "nf_reject_ipv4": 193, "xt_conntrack": 193, "ebtable_nat": 193, "ebtable_brout": 193, "ip6table_nat": 193, "ip6table_mangl": 193, "ip6table_raw": 193, "ip6table_secur": 193, "iptable_nat": 193, "nf_nat": 193, "iptable_mangl": 193, "iptable_raw": 193, "iptable_secur": 193, "nf_conntrack": 193, "nf_defrag_ipv6": 193, "nf_defrag_ipv4": 193, "libcrc32c": 193, "ip_set": 193, "nfnetlink": 193, "ebtable_filt": 193, "ebtabl": 193, "ip6table_filt": 193, "ip6_tabl": 193, "iptable_filt": 193, "cmac": 193, "bnep": 193, "sunrpc": 193, "vfat": [193, 887, 918], "snd_hda_codec_hdmi": 193, "snd_soc_skl": 193, "snd_soc_sst_ipc": 193, "snd_soc_sst_dsp": 193, "snd_hda_ext_cor": 193, "x86_pkg_temp_therm": 193, "intel_powerclamp": 193, "snd_soc_acpi_intel_match": 193, "coretemp": 193, "snd_soc_acpi": 193, "kvm_intel": 193, "snd_soc_cor": 193, "snd_hda_codec_realtek": 193, "snd_hda_codec_gener": 193, "snd_compress": 193, "ledtrig_audio": 193, "ac97_bu": 193, "snd_pcm_dmaengin": 193, "iwlmvm": 193, "snd_hda_intel": 193, "snd_intel_dspcfg": 193, "irqbypass": 193, "snd_hda_codec": 193, "uvcvideo": 193, "mac80211": 193, "btusb": 193, "itco_wdt": 193, "btrtl": 193, "crct10dif_pclmul": 193, "videobuf2_vmalloc": 193, "itco_vendor_support": 193, "videobuf2_memop": 193, "mei_hdcp": 193, "btbcm": 193, "btintel": 193, "crc32_pclmul": 193, "intel_rapl_msr": 193, "snd_hda_cor": 193, "videobuf2_v4l2": 193, "libarc4": 193, "ghash_clmulni_intel": 193, "videobuf2_common": 193, "snd_hwdep": 193, "intel_cst": 193, "bluetooth": [193, 358, 1245, 1258], "snd_seq": 193, "asus_nb_wmi": 193, "iwlwifi": 193, "videodev": 193, "snd_seq_devic": 193, "intel_uncor": 193, "asus_wmi": 193, "snd_pcm": 193, "intel_rapl_perf": 193, "cdc_acm": 193, "sparse_keymap": 193, "wmi_bmof": 193, "ecdh_gener": 193, "cfg80211": 193, "intel_wmi_thunderbolt": 193, "pcspkr": 193, "snd_timer": 193, "snd": 193, "i2c_i801": 193, "soundcor": 193, "joydev": 193, "idma64": 193, "intel_xhci_usb_role_switch": 193, "mei_m": 193, "ucsi_acpi": 193, "processor_thermal_devic": 193, "intel_rapl_common": 193, "mei": [193, 265], "intel_soc_dts_iosf": 193, "intel_pch_therm": 193, "typec": 193, "int3403_therm": 193, "int340x_thermal_zon": 193, "int3400_therm": 193, "acpi_thermal_rel": 193, "acpi_pad": 193, "binfmt_misc": 193, "ip_tabl": 193, "rfkill": 193, "i915": 193, "i2c_algo_bit": 193, "drm_kms_helper": 193, "hid_multitouch": 193, "drm": 193, "nvme": 193, "crc32c_intel": 193, "nvme_cor": 193, "serio_raw": 193, "wmi": 193, "i2c_hid": 193, "76d248e576fee192": 193, "deferenc": 193, "dp": 193, "ness": [193, 229, 314], "ucsi": 193, "displayport": 193, "linu": [193, 879, 887], "typec_altmod": 193, "alt": [193, 223, 948, 976, 1238, 1245, 1252], "ucsi_dp": 193, "typec_altmode_get_drvdata": 193, "271": [193, 262, 265, 270, 272, 278, 303, 310, 324, 330, 352, 358, 364, 368], "bugzilla": 193, "1785972": 193, "john": [193, 494], "stebbin": 193, "roundtrip": 193, "explod": [193, 368, 862, 1126], "jwboyer": [193, 860], "f31": 193, "quiet": [193, 226, 1216], "4382f76bc8ef9fce5e7e96d4cdb0c073564ad249": 193, "tag": [193, 195, 198, 199, 223, 239, 241, 283, 535, 539, 860, 1077, 1080, 1253], "josh": 193, "boyer": 193, "mon": 193, "rpmdevtool": [193, 860], "koji": 193, "rpmdev": 193, "setuptre": 193, "spec": [193, 278, 726, 860, 883], "srpm": 193, "unam": [193, 860, 865, 883, 887, 888], "correspond": [193, 205, 278, 419, 462, 514, 726, 993, 1071, 1079, 1118, 1155, 1190, 1216], "kenrel": 193, "ivh": [193, 195], "crypto": [193, 358], "ccp": 193, "sha": 193, "drop": [193, 205, 341, 545, 564, 573, 795, 802, 804, 906, 1055, 1060], "zips": 193, "ko": [193, 856, 865, 887], "endif": [193, 462, 464, 465, 508, 509, 512, 514, 515, 519, 522, 524, 526, 528, 534, 535, 628, 637, 646, 652, 654, 655, 695, 754, 755, 801, 817, 1062, 1079, 1081, 1230], "buildid": [193, 860, 1063, 1065], "primary_target": 193, "825": [193, 265], "asoc": 193, "patch601": 193, "patch999": 193, "roedel": [193, 599, 602, 1064, 1078, 1175, 1223], "patienc": [193, 222, 1111], "oldpackag": 193, "uefi": [193, 200], "market": [194, 197, 262, 306, 314, 1145], "unprofession": 194, "intent": [194, 196, 200, 201, 547, 803, 807, 860, 1018, 1020, 1021], "remark": 194, "organ": [194, 219, 460, 495, 506, 554, 695, 924, 1010, 1078], "numer": [194, 211, 227, 229, 231, 265, 275, 278, 282, 314, 324, 364, 519, 524, 535, 701, 726, 1005], "enforc": [194, 252, 482, 504, 659, 846, 994], "cname": [194, 196], "propag": [194, 376, 436, 494, 509, 513, 514, 515, 516, 531, 540, 720, 771, 995], "1100": [194, 259, 265, 282, 695], "3600": [194, 265], "185": [194, 223, 240, 262, 265, 270, 272, 278, 282, 285, 288, 291, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368], "199": [194, 223, 240, 262, 265, 270, 272, 275, 278, 282, 285, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 887, 1145], "109": [194, 209, 223, 233, 238, 240, 246, 259, 262, 265, 270, 272, 278, 282, 285, 288, 300, 303, 307, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 392, 397, 402], "153": [194, 209, 223, 233, 240, 249, 262, 265, 270, 272, 278, 282, 285, 288, 291, 300, 303, 320, 324, 330, 342, 346, 352, 358, 364, 368, 404], "111": [194, 209, 211, 223, 233, 240, 246, 262, 265, 270, 272, 275, 278, 282, 285, 288, 300, 303, 307, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 392], "108": [194, 209, 223, 233, 240, 246, 249, 255, 262, 265, 270, 272, 275, 278, 282, 285, 288, 300, 303, 307, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 392], "strip": [194, 213, 222, 256, 258, 259, 262, 270, 274, 275, 280, 282, 288, 291, 303, 310, 320, 324, 330, 346, 352, 358, 364, 368, 397, 406, 825, 1062, 1063, 1065, 1075, 1094, 1168, 1213], "breviti": 194, "fqdn": 194, "qualifi": [194, 488, 654, 655, 793], "surf": 194, "consequenti": [194, 197, 200, 228, 918, 992, 1083, 1104, 1230], "microsoft team": 195, "chrome": 195, "google chrom": 195, "confer": [195, 197, 226, 250, 273, 299, 345, 825, 1140], "virtual classroom": 195, "classroom": [195, 197], "remote train": 195, "dr": [195, 1065, 1078], "chromium": [195, 230, 358], "frequent": [195, 197, 205, 222, 282, 973, 993, 1111, 1132], "face": [195, 197, 222, 272, 282, 809], "travel": [195, 948], "corona": [195, 197, 222], "viru": [195, 197], "conferenc": 195, "dramat": 195, "march": 195, "spent": [195, 372, 493, 818, 1085, 1194], "weston": 195, "invest": [195, 197, 201, 282], "smooth": 195, "layer": [195, 295, 297, 315, 846, 918, 993, 1005, 1015, 1024], "cornercas": 195, "hover": 195, "sharer": 195, "gdm": [195, 262, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364, 923, 979], "daemon": [195, 242, 262, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364, 500, 520, 923, 926, 973, 974, 977, 979, 995, 1003, 1008, 1010, 1040, 1097], "uncom": [195, 569, 570, 765, 992], "waylanden": 195, "defaultsess": 195, "deb": [195, 327], "5153": 195, "marjan": 195, "javorka": 195, "fashion": 195, "efl": [195, 906, 995, 1046], "61762": 195, "1670": [195, 265], "947213": 195, "61764": 195, "98775": 195, "zygot": 195, "sandbox": [195, 222, 226, 276, 290, 308, 1188, 1223, 1224], "61800": 195, "239615": 195, "gpu": 195, "sharedarraybuff": 195, "sparerendererforsiteperprocess": 195, "prefer": [195, 272, 282, 438, 494, 518, 524, 526, 556, 660, 748, 756, 760, 879, 932, 1139], "kaaaaaaaaacaaabaaqaaaaaaaaaaagaaaaaaaaaaaaaiaaaaaaaaaagaaaaaaaaa": 195, "token": [195, 252, 268, 424, 464, 923, 1036, 1143, 1238], "4327801531638606376": 195, "61825": 195, "420846": 195, "autoplai": 195, "gestur": 195, "12993561460135093079": 195, "asar": 195, "agent": [195, 1001, 1195], "mozilla": [195, 320, 970], "applewebkit": 195, "537": [195, 265, 352, 358, 368], "khtml": 195, "gecko": 195, "microsoftteam": 195, "preview": [195, 280, 333, 349, 375, 376, 377, 378, 379, 380, 517, 523, 533, 536, 840], "3497": 195, "safari": 195, "webview": 195, "preload": [195, 1062], "preload_notif": 195, "fff": 195, "eyjjci5jb21wyw55ijoirwxly3ryb24ilcjjci5kdw1wcyi6iiisimnylmvuywjszwqiomzhbhnllcjjci5wcm9kdwn0ijoirwxly3ryb24ilcjjci5zzxnzaw9uijoiiiwiy3iudxjsijoiiiwiy3iudmvyc2lvbii6iny0ljiumtiifq": 195, "raster": 195, "v8_context_snapshot_data": 195, "v8_natives_data": 195, "101": [195, 209, 223, 233, 240, 246, 255, 262, 265, 270, 272, 275, 278, 282, 285, 291, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 392, 397, 402, 1122, 1192, 1193], "msteam": 195, "notificationsmanag": 195, "61973": 195, "790018": 195, "432557619363765409": 195, "mainwindow": 195, "62033": 195, "1259666": 195, "5585537623314398260": 195, "pluginhost": 195, "wish": [195, 197, 205, 226, 498, 534, 666, 734, 815, 1110, 1206, 1207, 1223], "insan": [195, 334, 918], "killal": [195, 1050, 1060], "63500": 195, "298385": 195, "63502": 195, "blood": 195, "pressur": [195, 259], "rise": [195, 592, 869, 1028, 1029, 1046], "wipe": 195, "logout": 195, "pop": [195, 208, 270, 272, 285, 300, 310, 320, 330, 342, 358, 364, 368, 465, 676, 679, 815, 1109, 1134], "morn": [195, 231, 241, 259, 268, 270, 276, 345, 1150], "webassembli": 195, "blow": 195, "water": [195, 314], "firefox": [195, 358, 500, 1031, 1060, 1200], "dom": [195, 254], "gave": [195, 197, 210, 222, 990, 1193], "3987": 195, "132": [195, 209, 211, 223, 233, 240, 249, 262, 265, 270, 272, 275, 278, 282, 285, 288, 300, 303, 320, 324, 330, 342, 346, 352, 358, 364, 368], "plagu": 195, "invent": [195, 432, 464, 544, 566, 567, 1243, 1244], "game": [195, 262, 278, 285, 288, 303, 310, 320, 324, 341, 346, 352, 358, 364, 374, 944, 1008, 1125], "pornwatch": 195, "teamview": 195, "webpag": 196, "properli": [196, 739, 817, 887, 1075], "retrospect": 196, "jekyl": 196, "bend": [196, 596], "companion": [196, 314], "pollut": [196, 465, 488, 494, 547, 744, 1064], "distinguish": [196, 653, 807, 919, 1075], "handwritten": [196, 294, 295, 297, 354, 355, 373, 376, 377, 379, 380, 517, 523, 533, 652, 753, 783, 784, 785, 801, 839, 840], "remind": 196, "pile": [196, 205, 554, 1060], "incomprehens": [196, 276, 716, 825, 1241], "blame": [196, 994], "technic": [196, 197, 219, 355, 531, 543, 643, 698, 743, 1091, 1201, 1233], "nojekyl": 196, "eof": [196, 246, 249, 268, 269, 285, 389, 426, 427, 428, 429, 442, 727, 889, 903, 1010, 1011, 1014, 1020, 1052, 1059, 1113], "doctyp": 196, "constel": [196, 507], "machineri": [196, 318, 319, 340, 344], "eventu": [196, 205, 497, 1028, 1078], "click": [196, 197], "cri": [196, 806], "haven": [196, 197, 222, 620, 985, 992], "subdomain": 196, "afterthough": 196, "preserv": [196, 207, 228, 285, 482, 914, 915, 950, 1004, 1213], "_build": 196, "restor": [196, 205, 212, 259, 265, 275, 278, 860, 1060, 1084], "shini": 196, "nervous": 196, "marketinges": [196, 306], "familiar": [196, 222, 278, 399, 400, 810, 993, 1111], "big blue button": 197, "strongli": [197, 259, 265, 275, 278, 309, 312, 355, 600, 698, 745, 783, 837, 839, 840, 1241], "shame": 197, "pursu": 197, "collabor": [197, 207, 214, 219, 226, 299], "moreov": 197, "focus": 197, "teach": [197, 222, 415], "trust": [197, 200, 262, 318, 319, 340, 358, 368, 751, 1001, 1003, 1145, 1216, 1233], "benefit": [197, 309, 312, 315, 317, 488, 1183], "beat": [197, 272, 282, 825, 1187], "talent": [197, 415], "whiteboard": [197, 1055], "chat": 197, "breakout": [197, 992], "stabil": [197, 549, 994, 1217], "thousand": [197, 303, 352, 918], "curiou": [197, 1188], "curious": 197, "licens": [197, 303, 510, 843, 1113, 1143], "lgpl": 197, "blindsid": 197, "govern": [197, 873, 1014], "html5": 197, "exception": [197, 994], "modern": [197, 201, 203, 206, 214, 217, 222, 229, 251, 273, 516, 517, 805, 825, 840, 847, 849, 854, 857, 864, 868, 878, 889, 891, 896, 902, 905, 908, 984, 1062, 1082, 1112, 1188, 1214, 1242, 1244], "heavili": [197, 219, 222, 306, 308, 415, 600, 796, 887, 985, 994, 1111], "webrtc": 197, "pain": [197, 887, 1065, 1075], "death": [197, 249, 1060], "firewal": [197, 230, 1003], "busi": [197, 341, 504, 508, 659, 892, 904, 916, 952, 954, 959, 960], "couldn": [197, 201, 226, 229, 368, 1125], "indefinit": [197, 733], "vm": [197, 400], "encrypt": [197, 923, 944, 995, 1003, 1004, 1005, 1166, 1204], "bbb": [197, 209, 270, 288, 358], "provis": 197, "gcp": 197, "expertis": [197, 601], "n1": [197, 223, 282], "accordingli": [197, 230, 515, 588, 598, 601, 631, 992, 994, 1080, 1115, 1118, 1213], "500gb": 197, "10gb": 197, "spars": [197, 272, 282, 662, 664, 883], "mandatori": [197, 994, 1112], "issuanc": 197, "udp": [197, 986, 988, 1256, 1258], "32768": 197, "clickabl": 197, "7443": 197, "755": [197, 265, 397, 933, 1114], "xenial": 197, "220": [197, 223, 238, 249, 259, 262, 265, 270, 272, 278, 282, 285, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368], "hostnam": [197, 358, 1216], "certbot": 197, "greenlight": 197, "letsencrypt": 197, "docker": [197, 201, 358], "bundl": [197, 220, 1200, 1216], "rake": 197, "succesfulli": 197, "screenshot": [197, 220, 397], "tryout": [197, 994], "kid": [197, 242, 260, 383], "layman": 197, "knew": [197, 226, 758, 1080], "reproduc": [197, 200, 316, 491, 994], "thought": [197, 465, 798, 887, 1201], "cite": [197, 211, 222, 344], "fred": [197, 986, 1087], "dixon": 197, "leader": 197, "aka": [197, 242, 265, 268, 270, 290, 620, 805], "canva": 197, "bradlei": 197, "schreffler": 197, "upfront": 197, "far": [197, 222, 230, 251, 257, 265, 268, 308, 434, 449, 470, 471, 473, 484, 488, 493, 524, 540, 667, 677, 743, 806, 865, 930, 994, 1089, 1111, 1193, 1241], "exhaust": [197, 1044, 1047, 1091], "heard": 197, "tast": [197, 424, 660, 716, 743, 786, 806], "era": 197, "budget": [197, 246], "advertis": [197, 796], "viabl": 197, "shout": [197, 785, 788], "loud": [197, 443, 678, 747, 785, 791, 792], "gmunden": [198, 415], "traunse": 198, "hike": [198, 199, 226], "bergsteigen": [198, 199], "climb": [198, 199, 226, 257], "klettern": [198, 199], "outdoor": [198, 199], "donnerstag": 198, "geistigen": 198, "ersch\u00f6pfung": 198, "k\u00f6rperlich": 198, "erfahren": [198, 199, 415, 1239], "dazu": [198, 207, 208, 213, 217, 234, 397, 402, 415, 1237, 1251, 1259], "ausgesucht": [198, 199], "zwar": [198, 1236, 1240, 1252], "lo": [198, 199, 240, 278, 314, 596, 867, 1099], "gmundner": [198, 226], "h\u00fctte": [198, 199, 226], "n\u00e4chsten": 198, "naturfreundesteig": 198, "zusammenfassung": [198, 204], "wunsch": 198, "vollend": 198, "erf\u00fcllt": 198, "unversichert": 198, "unmarkiert": 198, "leicht": [198, 234, 1236, 1251, 1257, 1258], "panik": 198, "geraten": 198, "h\u00e4nde": [198, 199], "braucht": [198, 199], "fingern\u00e4gel": 198, "z\u00e4hne": 198, "mitunt": [198, 199, 1248], "verkoffert": 198, "augen": [198, 285], "offenhalten": 198, "spur": 198, "folgen": [198, 234, 235, 1238, 1251], "fr\u00fcher": [198, 279], "umdrehen": 198, "sackgass": 198, "erweist": 198, "vielleicht": [198, 223, 234, 285, 1240, 1251], "weggehen": 198, "stirnlamp": 198, "mitnehmen": 198, "war": [198, 208, 213, 215, 223, 234, 238, 415, 504, 1236, 1238, 1240, 1251, 1257, 1258], "sch\u00f6nsten": 198, "jemal": 198, "zuletzt": 198, "traumhaften": 198, "gegend": 198, "griffweit": 198, "erscheint": 198, "paar": [198, 208, 223, 225, 233, 240, 272, 397, 402, 1236, 1259], "eindr\u00fcck": 198, "m\u00fcder": 198, "abklatsch": 198, "erinnerungen": 198, "hirn": 198, "eingebrannt": 198, "einstieg": [198, 234, 1251], "traunsteinstra\u00df": 198, "hundert": [198, 209, 282], "meter": 198, "s\u00fcdlich": 198, "hoisn": [198, 226], "wirt": [198, 226], "markiert": [198, 199], "wanderweg": [198, 199], "wegweisern": [198, 199], "bergauf": [198, 199], "kupp": 198, "klamm": 198, "einsteigt": 198, "bergab": 198, "touristisch": 198, "erschlossen": 198, "trifft": 198, "familien": 198, "kindern": [198, 1252], "rechter": 198, "felsstock": 198, "adlerhorst": 198, "sieht": [198, 209, 213, 223], "rau": [198, 272], "touristenzon": 198, "rauf": 198, "schart": 198, "durchschnaufen": 198, "einstellen": 198, "gen\u00fcsslich": 198, "h\u00f6henmet": 198, "verspeisen": 198, "steinmanderl": 198, "verfehlen": 198, "erkennbar": [198, 209, 1254], "kamm": 198, "r\u00fcber": 198, "traunsteinfelsen": 198, "erstreckt": [198, 199], "sch\u00f6nste": 198, "meditativ": 198, "wundersch\u00f6n": [198, 199], "steil": 198, "voll": 198, "zecken": 198, "schon": [198, 199, 208, 223, 225, 233, 263, 415, 1238, 1240, 1245, 1252, 1254, 1257], "bl\u00fcht": 198, "rinnen": 198, "leichtest": [198, 209], "dahin": [198, 1236], "wieder": [198, 223, 225, 233, 238, 240, 254, 1238, 1252], "vertun": 198, "manderl": 198, "aufstellen": 198, "nachwelt": 198, "nemesi": 198, "bergverr\u00fcckten": 198, "gleich": [198, 209, 223, 233, 234, 238, 240, 272, 320, 352, 358, 368, 392, 1236, 1251, 1258], "schl\u00fcsselstel": 198, "quert": 198, "latschen": 198, "\u00f6fter": [198, 199], "festhalten": 198, "gel\u00e4nd": 198, "einsam": 198, "bohrhaken": 198, "verrotteten": 198, "schuhband": 198, "festh\u00e4lt": 198, "runterfallen": 198, "glaub": [198, 207, 208], "stell": [198, 223, 254], "umgehen": [198, 1245], "querung": 198, "hierher": 198, "st\u00fcck": 198, "reinzum\u00fcnden": 198, "scheint": [198, 207], "gibt": [198, 199, 204, 207, 209, 210, 213, 223, 234, 235, 246, 272, 392, 1235, 1236, 1237, 1238, 1240, 1245, 1251, 1257], "foto": [198, 950], "mittendrin": 198, "besch\u00e4ftigt": 198, "hose": 198, "kacken": 198, "gesagt": [198, 213, 223, 233, 415, 1236], "manderln": 198, "aufnahmen": 198, "zunehmenden": 198, "sonnenuntergang": 198, "unvergesslich": 198, "nacht": [198, 199], "geworden": 198, "halten": [198, 199], "hinauf": 198, "stund": [198, 975, 1259], "gekostet": 198, "exklus": [198, 223, 233], "schneck": 198, "j\u00e4gerbrot": 198, "schein": 198, "ausstieg": 198, "hernlersteig": 198, "m\u00fcndet": 198, "gmundnerh\u00fctt": 198, "gem\u00fctlich": [198, 199], "nett": [198, 199, 213, 324, 415, 1245, 1252], "wirtsleut": 198, "h\u00fcttenruh": 198, "ansitzen": 198, "schweinsbraten": 198, "reinkommt": 198, "k\u00fcche": 198, "geputzt": 198, "backerbsen": 198, "morgen": [198, 278, 282], "hochnebel": 198, "blick": [198, 199, 1237], "flugzeug": 198, "gipfel": [198, 199], "dolin": 198, "nebel": 198, "dabei": [198, 209, 213, 249, 368, 415, 1235], "verziehen": 198, "r\u00fcckweg": 198, "hoisnwirt": 198, "miesweg": 198, "karibik": 198, "steiner alpen": 199, "kamni\u0161ke alp": 199, "kamni\u0161ko savinjskih alp": 199, "alten": [199, 1240], "tradit": [199, 262, 265, 490, 505, 661, 663, 664, 666, 686, 930, 994, 1134, 1166, 1255], "bleiburg": [199, 257], "k\u00e4rnten": [199, 415], "umliegenden": 199, "bergen": 199, "interessantesten": 199, "2558m": [199, 257], "steiner": 199, "alpen": 199, "davor": [199, 241], "gekannt": 199, "nun": [199, 217, 223, 246, 253, 278, 703], "gesehen": [199, 223, 229, 263], "steht": [199, 223, 233, 234, 1248, 1251], "n\u00e4chste": [199, 217], "jahr": [199, 223], "\u00fcberschreitung": 199, "soweit": [199, 1245, 1252], "h\u00f6chst": 199, "interessant": [199, 1237], "steinhaufen": 199, "unge\u00fcbt": 199, "verloren": [199, 238, 241], "h\u00f6henangst": 199, "schauen": [199, 234, 1251], "helm": 199, "schaden": 199, "schottersurf": 199, "kommen": [199, 204, 272, 397, 402, 415, 976], "ihr": [199, 204, 208, 213, 223, 368, 909, 1235, 1237, 1239, 1240, 1245, 1252, 1258], "artikel": [199, 207], "rein": [199, 209, 234, 1251, 1252], "ins": [199, 208, 415, 812, 1236, 1252], "eisenkappel": 199, "seebergsattel": 199, "openstreetmap": 199, "klein": [199, 208, 209, 213, 1236, 1238, 1239], "dorf": 199, "uhren": 199, "stehengeblieben": 199, "scheinen": 199, "parkplatz": 199, "geparkt": 199, "wissend": 199, "hinten": 199, "tal": 199, "beginnt": [199, 233, 1259], "ahnen": 199, "stetig": 199, "verzagen": 199, "eingang": [199, 1236], "kar": 199, "pl\u00f6tzlich": 199, "freundlich": 199, "vorhanden": [199, 1245, 1252], "fr\u00fchst\u00fcck": 199, "lager": [199, 314], "respektvol": 199, "erklimmenden": 199, "zieht": 199, "haltend": 199, "wand": 199, "wiederum": [199, 223], "mittlerweil": [199, 1236, 1253], "akzeptiert": 199, "deswegen": [199, 233, 238, 1238], "schliesslich": [199, 1236], "stehend": 199, "denn": [199, 223, 233, 1257, 1259], "hinaufkomm": 199, "passiert": [199, 223, 240], "anf\u00e4ngern": 199, "geschehen": [199, 358], "jung": [199, 415], "izola": 199, "slowenien": 199, "stellten": 199, "ankam": 199, "ob": [199, 207, 233, 1240, 1259], "beantwortet": 199, "adoptivs\u00f6hn": 199, "gewonnen": 199, "nachbarberg": 199, "ko\u010dna": 199, "sichtlich": 199, "spa\u00df": [199, 279, 1254], "abstieg": 199, "erweitert": 199, "rund": 199, "fertig": [199, 233, 250, 278, 358, 764, 771], "empfehl": [199, 1236], "runterzugehen": 199, "raufgekommen": 199, "ostseitigen": 199, "westseitig": 199, "sch\u00f6ner": [199, 223], "langen": 199, "grat": 199, "felst\u00fcrm": 199, "daf\u00fcr": [199, 217, 223, 233, 234, 1236], "anstrengend": 199, "200m": 199, "pulverhangerl": 199, "zur\u00fcck": [199, 223, 235, 1245, 1252], "wohlverdient": 199, "la\u0161ko": 199, "geschmack": 199, "schroff": 199, "selektiv": 199, "jedermann": 199, "kett": 199, "2000m": 199, "umschlossen": 199, "gletschergeformten": 199, "karen": 199, "steilen": 199, "w\u00e4nden": 199, "ost": 199, "richtung": [199, 1247], "schlafm\u00f6glichkeiten": 199, "biwak": 199, "einladung": 199, "\u00fcberquerung": 199, "dringend": 199, "f\u00e4llig": [199, 415], "fu\u00dfnoten": [199, 1235], "belieben": 199, "gummi": 199, "reifen": 199, "fahren": 199, "mehrplatzlag": 199, "reserviert": 199, "h\u00fcttenschl\u00e4fer": 199, "ohrenst\u00f6psel": 199, "f\u00e4lle": 199, "eingetreten": 199, "fassen": [199, 278], "typ": [199, 235, 246, 256, 976, 1200], "geschnarcht": 199, "geschrien": 199, "modules sign": 200, "secure boot": 200, "shim": 200, "dell xps 13": 200, "unresolv": [200, 862, 865, 1062], "upset": [200, 796], "tendenc": 200, "vendor": [200, 201, 532, 542, 601, 883, 887, 992, 1022], "efi": [200, 358], "implementor": [200, 294, 295, 297, 354, 355, 373, 380, 745, 783, 792, 839, 840, 846, 1221, 1241], "shine": 200, "cryptographi": 200, "third": [200, 237, 249, 278, 324, 516, 658, 660, 772, 773, 865, 867, 933, 975, 1018], "parti": [200, 205, 548, 660, 858, 865, 1014, 1055, 1204], "openssl": [200, 944], "req": 200, "x509": 200, "newkei": 200, "rsa": [200, 1001], "keyout": 200, "xps13": 200, "priv": [200, 881], "outform": 200, "36500": [200, 601], "subj": 200, "passphras": [200, 230, 1001], "expiri": 200, "0x2": 200, "97": [200, 209, 223, 233, 238, 240, 246, 249, 262, 265, 270, 272, 275, 278, 282, 285, 291, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 392, 397, 402, 498, 1192], "e5": 200, "ef": 200, "88": [200, 209, 223, 233, 238, 240, 246, 249, 251, 255, 262, 265, 270, 272, 275, 278, 282, 285, 288, 291, 300, 303, 307, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 392, 397, 402, 500, 1131, 1192, 1193, 1228], "3a": 200, "b3": 200, "9c": 200, "1b": 200, "a4": 200, "d7": 200, "sha256withrsaencrypt": 200, "issuer": [200, 544], "sep": [200, 201, 229, 249, 262, 265, 270, 278, 282, 285, 303, 324, 342, 358, 369, 506, 723, 970, 992, 994, 1005, 1062], "gmt": 200, "aug": [200, 265, 985, 993], "2121": 200, "subject": [200, 534, 848, 885, 1221], "rsaencrypt": 200, "modulu": [200, 259, 265, 275, 278], "b5": 200, "2d": [200, 252, 660, 1132], "5c": 200, "6f": [200, 358, 1050], "b0": 200, "95": [200, 209, 223, 233, 238, 240, 246, 249, 255, 259, 262, 265, 270, 272, 275, 278, 282, 285, 288, 291, 300, 303, 307, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 392, 1192, 1193], "f6": 200, "9e": 200, "9d": 200, "0d": 200, "bc": [200, 867, 992], "f5": 200, "6e": 200, "fe": [200, 506], "94": [200, 209, 233, 238, 240, 246, 249, 255, 262, 265, 270, 272, 278, 282, 285, 288, 291, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 392, 569, 570, 1192], "2b": [200, 994], "e6": 200, "b2": 200, "a0": [200, 993], "f8": 200, "7d": 200, "1c": 200, "2c": 200, "9f": 200, "4d": [200, 1132], "86": [200, 209, 223, 233, 238, 240, 246, 249, 255, 262, 265, 270, 272, 278, 282, 285, 288, 291, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 392, 1192, 1193], "e3": [200, 563], "dd": [200, 918, 948, 1236], "7b": 200, "3f": 200, "aa": 200, "b8": 200, "a5": [200, 993], "d5": 200, "0b": 200, "d1": [200, 272, 335, 358, 717], "e8": 200, "dc": [200, 544], "c5": 200, "d2": [200, 272, 335, 364, 717], "c2": [200, 547, 661, 747], "0a": [200, 426], "a1": [200, 262, 307, 819, 1145], "e1": [200, 250, 263, 563, 744], "89": [200, 209, 223, 233, 238, 240, 246, 249, 255, 259, 262, 265, 270, 272, 275, 278, 282, 285, 288, 291, 300, 303, 307, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 392, 498, 992, 993, 994, 1064, 1192, 1193], "4c": 200, "4a": 200, "77": [200, 223, 231, 233, 238, 240, 242, 246, 249, 255, 259, 262, 265, 270, 272, 278, 282, 285, 288, 291, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 392, 394, 397, 402, 1192, 1193], "a9": 200, "68": [200, 223, 228, 233, 238, 240, 246, 249, 255, 259, 262, 265, 270, 272, 278, 282, 285, 288, 291, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 389, 392, 970, 1192, 1193], "b6": 200, "a8": 200, "9b": 200, "d8": 200, "7f": [200, 994], "e2": [200, 250, 263, 563, 744], "a3": [200, 819], "79": [200, 223, 233, 238, 240, 246, 249, 255, 259, 262, 265, 270, 272, 278, 282, 285, 288, 291, 300, 303, 307, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 392, 397, 402, 1192, 1193], "f4": 200, "96": [200, 209, 223, 233, 238, 240, 246, 249, 259, 262, 265, 270, 272, 278, 282, 285, 288, 291, 300, 303, 307, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 392, 498, 1063, 1064, 1192, 1193], "4f": [200, 1132], "1d": 200, "7e": 200, "4e": 200, "0e": 200, "d9": 200, "8c": 200, "d3": [200, 717], "c8": 200, "f7": 200, "8e": 200, "d6": 200, "3b": 200, "1e": 200, "4b": [200, 994, 1050], "5e": [200, 1118], "5f": [200, 820], "7c": 200, "expon": [200, 1118], "65537": 200, "0x10001": 200, "x509v3": 200, "98": [200, 209, 223, 233, 240, 246, 249, 255, 262, 265, 270, 272, 275, 278, 282, 285, 288, 291, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 392, 397, 402, 643, 680, 1064, 1065], "0c": [200, 994], "keyid": 200, "c0": 200, "8f": 200, "b1": 200, "b7": 200, "9a": 200, "fa": 200, "7a": 200, "df": [200, 226, 342, 346, 352, 364, 506], "a6": 200, "c9": 200, "76": [200, 223, 233, 238, 240, 246, 249, 251, 255, 262, 265, 270, 272, 278, 282, 285, 288, 291, 300, 303, 307, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 392, 397, 402, 539, 540, 803, 838, 1145, 1192, 1193], "f0": 200, "b4": 200, "f9": 200, "eb": 200, "f1": 200, "6c": [200, 994], "2f": [200, 422, 1132], "5a": 200, "e0": 200, "d0": 200, "93": [200, 209, 223, 233, 238, 240, 246, 249, 255, 259, 262, 265, 270, 272, 278, 282, 285, 291, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 392, 1192], "8d": 200, "2a": 200, "fc": [200, 543, 544], "1a": 200, "b9": 200, "cb": [200, 707], "miidbtccae2gawibagiuarax5e9vn4g6eclb5bocbruks9cwdqyjkozihvcnaqel": 200, "bqawetepma0ga1ueawwgamzhc2nomcaxdtixmdkwnzeyntc1nloydzixmjewode0": 200, "mti1nzu2wjarmq8wdqydvqqddazqzmfzy2gwggeima0gcsqgsib3dqebaquaa4ib": 200, "dwawggekaoibaqc1lvzqb2aw15x2nlvnnmth6qxdnq1xvokb9vbu6zx": 200, "wl72mzqr": 200, "5rkvwabpeph9hcwdnwcm9mjnhupdexi": 200, "hmszvaowukuzi2kflrpvc": 200, "79gwnr4": 200, "jc": 200, "xdlzwnekcnuhsogjwxxttbydsghpd8q": 200, "valspcvotvjdokib4eyxnavjbdjdldd": 200, "rb8ueftirkn5abigzdoortik9jy1v2ocui5zqu8dkg4vph4mtkp": 200, "nb3kgq7zt5ym": 200, "b8ce2f": 200, "ettmprmfi94x": 200, "7i5tuqrbsylistict": 200, "rf1kw6": 200, "zuzvmwyow9cyzwc5rar": 200, "ys0exg3v": 200, "hyjl7vaxa23rb": 200, "xyiuztxqunxragmbaagjuzbrmb0ga1uddgqwbbqk": 200, "p1jr3huijl4otbwyvngmdz1idzafbgnvhsmegdawgbqkp1jr3huijl4otbwyvngm": 200, "dz1idzapbgnvhrmbaf8ebtadaqh": 200, "ma0gcsqgsib3dqebcwuaa4ibaqa5yke5gyfa": 200, "h49rsbdpobkbr5rv0hz693pljj02mn9hprusmgbygdujyx6odqbzcfah8ko0": 200, "xra": 200, "kdtflvc7uuvwtp": 200, "envqn8vx6twkd0r7maeyze8q6w2y1p1xcbrbwhmhemi": 200, "tjjadwenms9xosesipxkduey9oa6ep6indatkyt2lrw5tyagfocnxyiniybsvdtw": 200, "yqfvxbjphkw": 200, "dintokuzmazeiq3j0hi8o789xdyxlf2snsdshq5huaz67c5brli": 200, "ahemjzbycfiiq65b5x": 200, "y7aq": 200, "eg70tffm4fd8iys4tyxajdhcarqvfpdxazkhx": 200, "rk": 200, "b3lljngstu2g": 200, "mokutil": 200, "mokmanag": 200, "bloodi": [200, 1059, 1201], "fan": [200, 222, 226, 252, 276, 345, 1188], "highest": [200, 259, 265, 275, 278, 324, 449, 494, 993, 1049], "melt": 200, "7390": [200, 265], "cross develop": 201, "raspberry pi": [201, 985, 986, 987, 988, 989, 992, 993, 994], "crosstool-ng": 201, "c++": [201, 203, 1240, 1241, 1242, 1244], "sadli": [201, 252, 488, 756, 856, 992, 1026, 1029, 1063, 1086], "linaro": [201, 840, 984, 1073, 1074], "libstdc": [201, 1075, 1077], "unsatisfi": 201, "libpthread": [201, 1065], "feedback": [201, 217, 220, 229, 230, 231], "thankfulli": 201, "gperf": [201, 1077], "flex": [201, 867, 992, 1077], "texinfo": [201, 1077], "help2man": [201, 1077], "libtool": [201, 1077], "ncurs": [201, 860], "unzip": [201, 888, 1077], "rsync": [201, 1077], "diffutil": 201, "libncurses5": [201, 1077], "gawk": [201, 1077], "util": [201, 208, 229, 358, 528, 530, 541, 547, 566, 580, 695, 751, 754, 756, 838, 1077, 1084, 1216], "ct": [201, 1065, 1077], "zlib": [201, 1077], "extra": [201, 223, 233, 259, 455, 510, 628, 800, 887], "prior": [201, 913, 930, 955, 992, 1062, 1079, 1133], "bootstrap": [201, 1077, 1223], "yann": 201, "morin": 201, "warranti": [201, 242, 394], "merchant": 201, "rpi3": 201, "armv7": 201, "rpi2": 201, "23179": 201, "glibc_2": [201, 1062], "ldd": [201, 516, 537, 1062, 1065, 1080], "0xb6e06000": 201, "invok": [201, 231, 250, 263, 383, 388, 518, 522, 544, 646, 658, 717, 748, 1041, 1063, 1101, 1113, 1114, 1139], "rpt2": 201, "rpi1": 201, "deb10u1": 201, "quirk": [201, 985], "werror": [201, 430, 443, 486, 535, 544, 551, 838, 855, 856, 1230], "behind": [201, 241, 372, 443, 494, 544, 566, 676, 887, 1003, 1062, 1106, 1205], "glibcxx_3": 201, "libgcc_": 201, "downgrad": 201, "cmake_find_root_path": [201, 1063], "cmake_sysroot": [201, 1063], "viewpoint": 201, "bye": [201, 771, 775, 777, 778, 779, 1201], "relocat": 201, "fragil": 201, "sdk": 201, "buildroot": 201, "encount": [201, 230, 278, 282, 726, 993, 994, 1020], "ct_prefix": 201, "categori": [202, 214, 506, 1190], "crosstool": [202, 306, 840, 984, 1063, 1073, 1074, 1075, 1078], "1399": 202, "dell": 202, "xp": [202, 504], "grintovec": [202, 257], "plan\u0161arsko": 202, "jezero": 202, "\u010de\u0161ka": [202, 257], "ko\u010da": [202, 257], "traunstein": [202, 226, 415], "zierlersteig": [202, 226], "bigbluebutton": [202, 206, 1235], "consumpt": 202, "buildmanag": 203, "embeddedentwicklung": 203, "anpassungen": 203, "paketen": 203, "rootfilesystem": [203, 1065], "dient": 204, "vermarktung": 204, "referenz": [204, 293], "kursteilnehm": [204, 415], "beendigung": 204, "entstandenen": 204, "zur\u00fcckgreifen": 204, "finden": [204, 208, 217, 1235], "sofern": 204, "kund": [204, 217], "w\u00fcnscht": 204, "abstufungen": 204, "\u00f6ffentlichkeit": [204, 1252], "besprochen": 204, "hierbei": 204, "g\u00e4nzlich": 204, "abgesehen": 204, "ausdr\u00fccklich": 204, "zustimmt": 204, "namen": [204, 223, 233, 282, 342, 976, 1259], "individuen": 204, "prinzipiel": 204, "erw\u00e4hnt": [204, 217], "erlaubni": 204, "sollten": [204, 272, 310], "vorgehen": [204, 290, 1252, 1259], "anbietet": 204, "nie": [204, 213, 225, 415, 1240], "zug\u00e4nglich": 204, "onlinekursen": 204, "\u00fcbungsmateri": 204, "zustimmen": 204, "einzeln": [204, 217], "keinesfal": 204, "ver\u00f6ffentlicht": 204, "verschiedenst": 204, "m\u00f6glichkeiten": [204, 217, 1254, 1257], "entstanden": [204, 217, 225], "nichtsdestotrotz": [204, 1238], "accompani": [205, 226, 315, 317, 1191, 1246], "privaci": [205, 222, 226, 227], "guidelin": [205, 222, 341, 373, 994], "certainli": [205, 1020], "gitk": [205, 948], "traine": [205, 232], "respositori": [205, 217, 372], "user1": 205, "user2": 205, "user3": 205, "untrack": 205, "beast": 205, "similarli": 205, "unstag": 205, "accident": [205, 657, 790, 871, 914, 915, 955, 1019, 1128], "7434a5b": 205, "100755": 205, "cowork": 205, "employ": [205, 504], "favourit": 205, "869": [205, 265, 352], "124": [205, 209, 223, 230, 233, 240, 246, 249, 259, 262, 265, 270, 272, 275, 278, 282, 285, 288, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 1145], "a4b9666": 205, "bf5bb75": 205, "went": [205, 226, 372], "retri": [205, 1006, 1106, 1216], "noon": [205, 345, 1048, 1137], "lack": [205, 484, 518, 535, 601, 736, 738, 994, 1075], "unavoid": 205, "her": [205, 209, 234, 278, 281, 738, 923, 944, 1154, 1196, 1251], "confid": 205, "merg": [205, 251, 889, 1048, 1135, 1253], "gentl": [206, 1242], "tinker": 206, "solder": 206, "sysv": [207, 1063, 1065], "grace": [207, 319, 810], "sigterm": [207, 1059, 1060], "sigkil": 207, "beeinflussen": 207, "shutdown": [207, 262, 278, 285, 288, 303, 310, 320, 324, 346, 352, 355, 358, 364, 405, 865, 979, 1056, 1095], "herausgefunden": [207, 213, 415], "nachfolgend": [207, 1236], "manpag": 207, "verhindern": 207, "genehm": 207, "inhibit": [207, 354, 743, 781], "children": [207, 498, 526], "vererbt": 207, "attributen": 207, "setprior": 207, "execv": [207, 1017, 1062], "sched_reset_on_fork": 207, "ORed": 207, "privileg": [207, 262, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364, 944, 979], "playback": 207, "prevent": [207, 210, 259, 265, 268, 275, 278, 306, 480, 486, 490, 925, 1014, 1019, 1048, 1059, 1086, 1098, 1128], "evad": 207, "rlimit_rttim": 207, "getr": 207, "anstel": 207, "prozessen": 207, "teilen": 207, "prozess": [207, 398, 1245, 1247, 1254, 1255, 1258], "startenden": 207, "gestarteten": 207, "weitergegeben": 207, "ausser": [207, 234, 392, 1251], "unterbunden": 207, "pthread_attr_setinheritsch": 207, "pthread_inherit_sch": 207, "pthread_explicit_sch": 207, "newli": [207, 486], "sowa": [207, 213, 415, 1236], "\u00e4hnlich": [207, 238], "filter_driv": 207, "offenbar": [207, 223, 415, 1238], "miser": [207, 695], "netzwerkdrivern": 207, "hoher": 207, "interruptlast": 207, "verbessern": 207, "n\u00f6tig": [207, 1247], "diesbez\u00fcglich": 207, "\u00fcberlegt": 207, "schaltet": 207, "netzwerkdriv": 207, "30107": 207, "linuxfound": 207, "workgroup": 207, "napi": [207, 237, 881], "implementationen": 207, "libmodbu": 207, "freemodbu": 207, "konfiguriert": [207, 208], "jumbo": 207, "jumbo_fram": 207, "mtu": [207, 987], "1500": [207, 265], "eth0": 207, "9000": [207, 265], "ifconfig": [207, 881], "abgelegt": 207, "konfigur": [207, 209], "ifac": [207, 569, 583, 807], "vorsicht": [207, 233, 976], "routern": 207, "fragmentieren": 207, "tracerout": 207, "netzwerkverbindung": 207, "g\u00fcte": 207, "sar": 207, "sysstat": 207, "schmerzvol": 207, "netter": 207, "ausprogrammiert": 208, "konflikt": [208, 1253], "parallelen": [208, 1257], "demonstr": [208, 210, 230, 302, 596, 645, 726, 1190, 1194, 1233], "mutter": [208, 415, 416, 1257], "aller": [208, 217, 415, 416, 1236, 1257], "danach": [208, 1235], "hilf": [208, 233, 397, 402, 1247], "gefixt": 208, "kommunk": 208, "variablen": [208, 209, 234, 235, 238, 241, 246, 274, 292, 293, 389, 392, 398, 1237, 1247, 1248, 1251], "frontal": 208, "vorgef\u00fchrt": 208, "diskuss": [208, 217, 239, 415], "dank": [208, 213, 415, 1236], "beispielcod": 208, "h\u00e4ndisch": [208, 1239], "zweier": [208, 234, 1251], "bewundern": 208, "k\u00f6nnt": 208, "euch": 208, "erinnern": [208, 415], "blinken": 208, "liess": 208, "irgendwo": [208, 282], "hatten": [208, 213, 415], "kleinen": 208, "empf": 208, "unbedingt": [208, 223, 1236], "beispielprogramm": 208, "horcht": 208, "gesprochen": 208, "ausf\u00fchrlich": [208, 293], "schamlos": 208, "eigenwerbung": 208, "\u00fcberbleibsel": 208, "ehemaligen": 208, "socketcan": [208, 986, 987], "absorbiert": 208, "worden": [208, 217, 1236], "enth\u00e4lt": [208, 223], "schnuckelig": 208, "aufzeichnen": 208, "replai": [208, 987], "folien": [208, 217, 225, 1235], "freitag": [208, 1236], "kerneldrivertag": 208, "sorri": [208, 214, 927], "emanuel": 208, "beispieldriv": 208, "han": 208, "angeboten": [208, 1235], "promin": [208, 512, 514, 800, 883], "implementiert": [208, 223, 254, 1245, 1259], "gute": [208, 225, 1245, 1252], "anfang": [208, 209, 217, 368], "mcp2515": [208, 887], "angesprochen": [208, 225], "fortgeschrittener": [208, 225], "einpflegt": 208, "agiert": 208, "mcp251x": 208, "at91": 208, "soc": [208, 992, 993, 994, 1028], "deinem": 208, "stecker": 208, "verbaut": 208, "at91_can": 208, "lacht": 208, "zeilenweisen": 209, "nutzdaten": [209, 262], "extrahieren": [209, 236], "wollend": [209, 1252], "spalt": 209, "offensichtlich": [209, 1239], "separiert": 209, "felder": 209, "antwort": [209, 310, 352], "stdtype": 209, "gscheitesten": 209, "aufeinanderfolgend": 209, "whitespac": [209, 270, 278, 324, 428, 518, 526, 1133, 1157, 1213], "nimmt": [209, 234, 246, 270, 272, 278, 310, 1238, 1251], "tupl": [209, 222, 227, 229, 231, 235, 239, 241, 247, 248, 250, 254, 257, 260, 261, 263, 264, 266, 267, 271, 273, 274, 275, 280, 283, 286, 287, 289, 299, 301, 304, 307, 308, 311, 321, 323, 325, 329, 330, 342, 345, 347, 353, 355, 357, 359, 365, 368, 374, 380, 382, 397, 573, 783, 839, 840, 1091, 1109, 1110, 1117, 1118, 1123, 1132, 1135, 1165, 1188, 1241], "weiss": [209, 213, 223, 342, 1254, 1259], "rauskommen": 209, "aaa": [209, 270, 282, 288, 324, 358], "tbbb": 209, "tccc": 209, "feld0": 209, "feld1": 209, "feld2": 209, "ccc": [209, 288], "optional": [209, 1238], "splittet": 209, "bearbeitet": [209, 1258], "manuel": [209, 233, 238], "ddd": 209, "eee": 209, "maxsplit": [209, 278, 324, 506], "restfield": 209, "len": [209, 210, 211, 213, 223, 233, 238, 240, 241, 246, 249, 250, 254, 255, 259, 262, 265, 270, 272, 275, 278, 282, 285, 288, 300, 303, 310, 320, 324, 331, 342, 346, 352, 358, 364, 368, 389, 392, 506, 883, 988, 1090, 1103, 1116, 1118, 1124, 1126, 1133, 1135, 1137, 1138, 1183, 1201, 1205, 1209, 1212], "10101010": 209, "switchnumb": 209, "rsplit": [209, 278, 324, 506, 1133], "l1": [209, 212, 223, 240, 246, 249, 259, 262, 265, 270, 272, 278, 282, 285, 288, 291, 300, 303, 307, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 564], "l2": [209, 212, 223, 240, 246, 249, 254, 259, 262, 265, 272, 278, 282, 285, 288, 291, 300, 303, 307, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368], "\u00e4nderung": [209, 223, 1259], "87": [209, 223, 233, 238, 240, 246, 249, 255, 262, 265, 270, 272, 278, 282, 285, 288, 291, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 392, 397, 402, 1145, 1192, 1193], "zeigen": [209, 975], "dasselb": 209, "objekt": [209, 223, 233, 324], "140070310441600": 209, "ver\u00e4ndert": 209, "140070371015728": 209, "92": [209, 210, 233, 238, 240, 242, 246, 249, 255, 262, 265, 270, 272, 275, 278, 282, 285, 288, 291, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 392, 397, 402, 972, 1192, 1193], "attributeerror": [209, 223, 259, 265, 270, 272, 275, 278, 282, 285, 288, 291, 300, 303, 307, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 1086, 1099, 1100, 1107], "gottseidank": 209, "alternativ": [209, 368], "aufruf": [209, 223, 229, 233, 278, 393], "paaren": 209, "keyerror": [209, 212, 223, 233, 240, 249, 259, 262, 265, 270, 272, 275, 278, 285, 288, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 392, 1086, 1135, 1210], "nix": [209, 210, 223, 241, 249, 270, 272, 275, 300, 320, 352, 358, 392, 602], "umstaendlich": 209, "102": [209, 223, 233, 238, 240, 246, 255, 259, 262, 265, 270, 272, 275, 278, 282, 285, 288, 291, 300, 303, 307, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 392, 397, 402], "103": [209, 223, 233, 240, 246, 255, 262, 265, 270, 272, 275, 278, 282, 285, 288, 291, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 392], "104": [209, 211, 223, 233, 238, 240, 246, 259, 262, 265, 270, 272, 275, 278, 282, 285, 288, 291, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 392, 1145], "106": [209, 223, 233, 238, 240, 246, 249, 255, 259, 262, 265, 270, 272, 275, 278, 282, 285, 288, 300, 303, 307, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 392, 970], "setdefault": [209, 250, 270, 285, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 1135], "107": [209, 223, 233, 238, 240, 242, 246, 249, 262, 265, 270, 272, 278, 282, 285, 288, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 392, 394, 493], "meinvoelligsinnlosertyp": 209, "sinnlose_addit": 209, "sinnlobj": 209, "112": [209, 223, 230, 233, 238, 240, 246, 255, 259, 262, 265, 270, 272, 278, 282, 285, 288, 300, 303, 307, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 392, 970], "113": [209, 223, 233, 238, 240, 246, 249, 259, 262, 265, 270, 272, 278, 282, 285, 288, 291, 300, 303, 307, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 549], "__main__": [209, 213, 223, 228, 246, 249, 259, 262, 263, 265, 270, 272, 275, 278, 282, 285, 288, 291, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 392, 397, 1087, 1090, 1094, 1100, 1108, 1216, 1222], "0x7f64a8934890": 209, "114": [209, 211, 223, 233, 240, 246, 255, 259, 262, 265, 270, 272, 278, 282, 285, 288, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368], "115": [209, 223, 233, 238, 240, 246, 259, 262, 265, 270, 272, 278, 282, 285, 288, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368], "116": [209, 223, 233, 240, 246, 255, 259, 262, 265, 270, 272, 275, 278, 282, 285, 288, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368], "nochwenigersinnvol": 209, "der_absolute_unsinn": 209, "super": [209, 225, 226, 233, 247, 249, 250, 265, 273, 276, 280, 299, 303, 314, 323, 345, 364, 520, 563, 1084, 1086, 1103, 1188, 1195], "unsinn": 209, "uebertreibs_jetzt_bitt": 209, "117": [209, 223, 233, 240, 246, 259, 262, 265, 270, 272, 275, 278, 282, 285, 288, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368], "118": [209, 223, 233, 240, 255, 259, 262, 265, 270, 272, 275, 278, 282, 285, 288, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 970, 1145], "0x7f64a894a790": 209, "119": [209, 223, 233, 240, 242, 249, 262, 265, 270, 272, 278, 282, 285, 288, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 394], "121": [209, 211, 223, 233, 240, 246, 249, 255, 262, 265, 270, 272, 278, 282, 285, 288, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368], "1335": 209, "122": [209, 211, 223, 233, 238, 240, 246, 249, 259, 262, 265, 270, 272, 275, 278, 282, 285, 288, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 1064], "819508": 209, "123": [209, 223, 233, 240, 241, 246, 249, 255, 259, 262, 265, 270, 272, 275, 278, 282, 285, 288, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 439, 987, 1145, 1152, 1222], "uptim": 209, "timedelta": [209, 228, 255, 257, 310], "358": [209, 265, 310, 324, 342, 352, 358, 368, 500], "125": [209, 233, 238, 240, 246, 249, 259, 262, 265, 270, 272, 278, 282, 285, 288, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 987], "irgendwann_einmal_gewesen": 209, "834972": 209, "126": [209, 223, 233, 238, 240, 246, 249, 262, 265, 270, 272, 275, 278, 282, 285, 288, 300, 303, 320, 324, 330, 342, 346, 352, 358, 364, 368], "datetime_from_batteri": 209, "840837": 209, "127": [209, 223, 233, 238, 240, 246, 249, 255, 262, 265, 270, 272, 278, 282, 285, 288, 300, 303, 320, 324, 330, 342, 346, 352, 358, 364, 368, 1003, 1011], "846889": 209, "woher": [209, 272], "ausschauen": 209, "sinnlo": [209, 272], "sinnlos": [209, 246, 324], "repraesent": 209, "129": [209, 223, 233, 240, 242, 249, 259, 262, 265, 270, 272, 275, 278, 282, 285, 288, 291, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 394], "130": [209, 223, 233, 240, 255, 262, 265, 270, 272, 275, 278, 282, 285, 288, 300, 303, 310, 314, 320, 324, 330, 342, 346, 352, 358, 364, 368, 743, 860, 1131], "completedprocess": [209, 278, 288], "returncod": [209, 278, 288], "erfolgreich": 209, "beendet": [209, 1257], "schau": 209, "du": [209, 223, 278, 285, 291, 1011, 1016], "verwendest": 209, "anzuzeigen": [209, 364], "cell": [209, 222, 369, 985, 1084, 1085, 1086, 1091, 1099, 1100, 1106, 1107, 1111, 1128, 1129, 1133, 1193, 1209, 1210], "gesendet": 209, "ausf\u00fchrt": 209, "krieg": 209, "131": [209, 223, 233, 240, 249, 255, 262, 265, 270, 272, 278, 282, 285, 288, 300, 303, 320, 324, 330, 342, 346, 352, 358, 364, 368, 793], "capture_output": [209, 288], "ndrwxrwxr": [209, 288], "mar": [209, 278, 439, 914, 915, 918, 933, 945, 967, 970, 972, 996, 1010, 1020, 1062, 1075], "2607": 209, "33768": 209, "ndrwxr": 209, "xr": [209, 539, 914, 915, 933, 935, 936, 944, 945, 970, 985, 992, 993, 994, 1062, 1065, 1075, 1077, 1078, 1114], "switchzeug": 209, "keiner": [209, 223, 342, 1240], "seinen": [209, 223], "formuliert": [209, 217], "logisch": [209, 233], "irgendwa": [209, 255, 270, 272], "konverti": 209, "musst": 209, "dich": 209, "festlegen": 209, "133": [209, 223, 233, 240, 262, 265, 270, 272, 278, 282, 285, 288, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368], "stdout_as_utf8": 209, "utf": [209, 250, 259, 262, 263, 265, 269, 275, 278, 288, 310, 324, 330, 342, 346, 352, 358, 364, 1118, 1137, 1185], "134": [209, 223, 233, 240, 249, 262, 265, 270, 272, 275, 278, 282, 285, 288, 291, 300, 303, 320, 324, 330, 342, 346, 352, 358, 364, 368, 802], "135": [209, 223, 233, 240, 249, 262, 265, 270, 272, 278, 282, 285, 288, 291, 300, 303, 320, 324, 330, 342, 346, 352, 358, 364, 368], "drwxrwxr": [209, 288, 970, 1028, 1063, 1064, 1075, 1077], "drwxr": [209, 914, 915, 933, 970, 985, 992, 993, 994, 1075, 1077], "136": [209, 211, 223, 233, 240, 249, 262, 265, 270, 272, 275, 278, 282, 285, 288, 300, 303, 320, 324, 330, 342, 346, 352, 358, 364, 368, 540], "fuer": [209, 270, 275, 282], "listdir": [209, 316, 320, 352, 358, 369, 404, 506], "ipynb_checkpoint": [209, 288, 352], "gitignor": [209, 534, 1064], "137": [209, 220, 223, 233, 240, 262, 265, 270, 272, 275, 278, 282, 285, 288, 291, 300, 303, 320, 324, 330, 342, 346, 352, 358, 364, 368], "rekurs": 209, "iterieren": [209, 213, 223, 238, 246], "dirpath": 209, "dirnam": [209, 262, 265, 316, 506, 601, 838, 1221], "checkpoint": [209, 259, 265, 275, 278], "itg": 209, "scope": [209, 217, 223, 234, 235, 238, 269, 281, 294, 295, 297, 306, 318, 329, 340, 344, 345, 350, 351, 354, 356, 357, 362, 363, 366, 367, 373, 397, 434, 440, 528, 564, 614, 634, 647, 649, 658, 744, 785, 797, 800, 815, 816, 839, 840, 1085, 1130, 1241, 1251, 1255], "getter": [209, 655, 703], "setter": [209, 249, 1107], "fibo": [209, 210, 229, 249, 263, 771, 773, 1090], "listcomprehens": 209, "generatorexpress": [209, 210], "switchdb": 209, "schema": [209, 290, 644, 1144], "michi": 209, "pyexec": 209, "ifadminstatu": 209, "ifdescr": 209, "iflastchang": 209, "snmpenginetim": 209, "ifoperstatu": 209, "fein": [209, 233], "helferlein": 209, "hochtrabend": 209, "nennt": 209, "funktional": 209, "138": [209, 223, 233, 240, 249, 262, 265, 270, 272, 278, 282, 285, 288, 300, 303, 320, 324, 330, 342, 346, 352, 358, 364, 368, 1145], "139": [209, 223, 233, 240, 249, 262, 265, 270, 272, 278, 282, 285, 288, 300, 303, 320, 324, 330, 342, 346, 352, 358, 364, 368], "140": [209, 223, 233, 240, 249, 262, 265, 270, 272, 275, 278, 282, 285, 288, 291, 300, 303, 307, 320, 324, 330, 342, 346, 352, 358, 364, 368, 743], "l_quadrat": 209, "141": [209, 223, 233, 240, 262, 265, 270, 272, 278, 282, 285, 288, 291, 300, 303, 320, 324, 330, 342, 346, 352, 358, 364, 368, 439, 970], "kompliziert": [209, 223, 275, 278, 300, 1236, 1255], "anm": 209, "versionen": [209, 279], "aufgebaut": 209, "rausnehmen": 209, "konfigurationsfil": 209, "configpars": 209, "142": [209, 223, 233, 240, 249, 262, 265, 270, 272, 278, 282, 285, 288, 300, 303, 307, 320, 324, 330, 342, 346, 352, 358, 364, 368, 1005, 1050], "143": [209, 223, 233, 240, 249, 262, 265, 270, 272, 275, 278, 282, 285, 288, 291, 300, 303, 320, 324, 330, 342, 346, 352, 358, 364, 368, 1065], "liste_als_str": 209, "144": [209, 223, 233, 240, 249, 256, 262, 265, 270, 272, 275, 278, 282, 285, 288, 291, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 540], "145": [209, 223, 233, 240, 249, 262, 265, 270, 272, 275, 278, 282, 285, 288, 291, 300, 303, 320, 324, 330, 342, 346, 352, 358, 364, 368, 1206], "herbert": 209, "146": [209, 223, 233, 240, 249, 262, 265, 270, 272, 278, 282, 285, 288, 291, 300, 303, 320, 324, 330, 342, 346, 352, 358, 364, 368], "heraussen": 209, "147": [209, 223, 233, 240, 249, 262, 265, 270, 272, 275, 278, 282, 285, 288, 300, 303, 320, 324, 330, 342, 346, 352, 358, 364, 368, 923], "148": [209, 223, 233, 240, 249, 262, 265, 270, 272, 278, 282, 285, 288, 291, 300, 303, 320, 324, 330, 342, 346, 352, 358, 364, 368, 661], "149": [209, 223, 233, 240, 262, 265, 270, 272, 275, 278, 282, 285, 288, 291, 300, 303, 320, 324, 330, 342, 346, 352, 358, 364, 368], "151": [209, 223, 233, 240, 249, 262, 265, 270, 272, 278, 282, 285, 288, 291, 300, 303, 320, 324, 330, 342, 346, 352, 358, 364, 368, 404], "152": [209, 223, 233, 240, 249, 262, 265, 270, 272, 278, 282, 285, 288, 300, 303, 320, 324, 330, 342, 346, 352, 358, 364, 368, 404, 1210], "mein_dict": 209, "gerhard": 209, "175": [209, 223, 240, 249, 262, 265, 270, 272, 275, 278, 282, 285, 288, 300, 303, 324, 330, 342, 346, 352, 358, 364, 368], "154": [209, 223, 233, 240, 249, 262, 265, 270, 272, 278, 282, 285, 288, 300, 303, 320, 324, 330, 342, 346, 352, 358, 364, 368, 970], "dict_as_json_str": 209, "155": [209, 223, 233, 240, 249, 262, 265, 270, 272, 275, 278, 282, 285, 288, 291, 300, 303, 320, 324, 330, 342, 346, 352, 358, 364, 368, 404], "gelesenes_dict_von_json": 209, "nahm": 210, "woch": [210, 230, 415, 416, 1236], "anspruch": 210, "platz": 210, "gesammelten": 210, "notizen": 210, "schnell": [210, 213, 233, 254, 279, 1239], "sachen": [210, 236], "is_prim": [210, 233, 236, 241, 1167], "divisor": [210, 241, 368, 838, 1159], "unmodifi": [210, 223, 259, 270, 547, 598, 644, 658, 992, 994, 1086, 1099, 1170], "randomnumb": 210, "howmani": 210, "randrang": [210, 238, 262, 270, 272, 275, 278, 282, 285, 288, 310, 352, 358, 364, 368, 392, 1087, 1122], "prev": [210, 877], "cur": [210, 330, 444], "fibonum": 210, "tend": [210, 309, 312, 319, 494, 860, 927, 1078], "input_list_str": 210, "input_list": [210, 285, 1170], "__n": [210, 838], "__lt__": [210, 272, 275, 278, 282, 300, 303, 324, 342, 364], "rh": [210, 259, 263, 278, 368, 432, 474, 490, 519, 564, 578, 644, 658, 660, 785], "__le__": [210, 272, 275, 278, 282, 300, 303, 324, 342, 364, 1106], "__eq__": [210, 272, 275, 278, 282, 300, 303, 324, 342, 364, 1106], "__iadd__": 210, "iadd": 210, "__add__": [210, 275, 278, 282, 300, 324, 342, 364, 1106], "new_numb": [210, 265], "__radd__": [210, 275, 282, 300, 364, 1106], "radd": 210, "lh": [210, 259, 263, 368, 432, 474, 490, 519, 564, 578, 634, 644, 658, 660, 785, 918], "makesnosens": 210, "__number": 210, "input_numb": 210, "numnber": 210, "list_of_squar": 210, "compehens": 210, "effort": [210, 282, 316, 487, 488, 505, 993], "local_assign": 210, "read_global_vari": 210, "local_shadows_glob": 210, "explicit_global_assign": 210, "creation": [210, 319, 341, 809, 811, 816, 839, 840, 947, 984, 1014, 1025, 1030, 1039, 1045, 1056, 1065, 1128, 1137, 1138, 1223], "captur": [210, 293, 294, 295, 297, 317, 354, 355, 373, 374, 380, 382, 397, 783, 784, 787, 839, 840, 985, 1082, 1241], "create_funct": 210, "inner_funct": [210, 522, 526], "whic": 210, "f_one": 210, "f_two": 210, "launch": [210, 226], "discov": [210, 222, 229], "area": [210, 219, 252, 282, 375, 378, 883, 993, 1252, 1258], "scikit": [211, 213, 260, 369, 1223], "manipul": [211, 376, 379, 517, 523, 533, 535, 678, 802, 838, 840, 885, 992, 1005, 1014, 1049, 1061, 1125, 1144], "appreci": [211, 262, 927, 1145], "beauti": [211, 225, 226, 229, 247, 249, 250, 257, 268, 272, 273, 276, 282, 299, 323, 397, 470, 620, 678, 1030, 1088, 1137, 1145, 1188], "spectral": [211, 1190], "mat": 211, "scipi": [211, 213, 241, 260, 1223], "loadmat": [211, 213], "sklearn": [211, 213, 368, 1191, 1193, 1223], "pixel": [211, 368], "rgb": [211, 213, 368, 406], "dimens": [211, 213, 1193, 1244], "xkcd": 211, "schafer": [211, 222, 225, 226, 229, 247, 250, 257, 260, 263, 273, 276, 287, 290, 299, 323, 329, 357, 397, 402, 1188, 1206, 1207, 1209, 1210, 1211, 1212, 1214, 1224], "keith": [211, 222, 226, 247, 260, 273, 287, 290, 323, 329, 1188], "galli": [211, 222, 226, 247, 260, 273, 287, 290, 323, 329, 1188], "sci": 211, "kit": [211, 406], "spyder": [211, 222, 1111], "pycharm": [211, 222, 316, 1111], "retain": [211, 463, 1129], "invoc": [211, 525, 564], "comparison": [211, 228, 251, 265, 268, 278, 286, 324, 439, 443, 449, 620, 785, 1120, 1163], "misfeatur": 211, "png": [211, 213, 358, 368, 538, 1064, 1190], "imgfil": 211, "veggi": [211, 213, 368, 1190], "pillow": [211, 213], "welcom": 211, "cooper": [211, 810], "477x686": 211, "imgarrai": [211, 213], "ndim": [211, 1193], "477": [211, 265, 310, 358, 368], "dtype": [211, 213, 307, 310, 314, 346, 352, 364, 368, 1193, 1206, 1207, 1209, 1210, 1211, 1212], "uint8": [211, 368], "255": [211, 246, 262, 265, 270, 272, 275, 278, 282, 285, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 1041], "172": [211, 223, 240, 262, 265, 270, 272, 275, 278, 282, 285, 288, 291, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 489], "nrow": [211, 213], "ncol": [211, 213], "reshap": [211, 213, 247, 260, 273, 287, 290, 323, 329, 368, 1188, 1191, 1193], "irrelev": [211, 228, 233, 266, 439, 481, 504, 933, 1118, 1201], "colorspac": 211, "mpl_toolkit": 211, "mplot3d": 211, "axes3d": 211, "pyplot": [211, 240, 259, 288, 291, 342, 346, 352, 364, 1083, 1142, 1193], "plt": [211, 240, 259, 288, 291, 342, 346, 352, 364, 1083, 1142, 1193], "fig": 211, "add_subplot": 211, "set_xlabel": 211, "set_ylabel": 211, "set_zlabel": 211, "ndindex": 211, "scatter": [211, 858], "rgb_linear": [211, 368], "n_cluster": [211, 213, 368], "copy_x": 211, "max_it": 211, "n_init": 211, "n_job": 211, "precompute_dist": 211, "random_st": [211, 1191, 1193], "tol": 211, "verbos": [211, 218, 376, 522, 535, 803, 913, 948, 950, 1065, 1122, 1216], "cluster_cent": 211, "int32": [211, 368, 490], "327222": 211, "cluster_centers_": [211, 213, 368], "20529747": 211, "50360681": 211, "3796182": 211, "94408609": 211, "75471018": 211, "53133237": 211, "226": [211, 223, 242, 262, 265, 270, 272, 275, 278, 282, 285, 288, 303, 310, 320, 324, 330, 342, 346, 358, 364, 368, 394], "64913628": 211, "76939951": 211, "92569235": 211, "71464963": 211, "47333306": 211, "60640492": 211, "8888303": 211, "92275244": 211, "84313209": 211, "157": [211, 223, 233, 240, 262, 265, 270, 272, 278, 282, 285, 288, 300, 303, 320, 324, 330, 342, 346, 352, 358, 364, 368], "30685398": 211, "43988931": 211, "03959132": 211, "225": [211, 223, 262, 265, 270, 272, 278, 282, 285, 288, 303, 310, 324, 330, 346, 352, 358, 364, 368, 538, 1145], "55934051": 211, "182": [211, 223, 240, 262, 265, 270, 272, 275, 278, 282, 285, 291, 300, 303, 320, 324, 330, 342, 346, 352, 358, 364, 368], "98255893": 211, "3232048": 211, "241": [211, 262, 265, 270, 272, 275, 278, 285, 288, 303, 320, 324, 330, 346, 358, 364, 368, 1145], "37322907": 211, "159": [211, 223, 233, 240, 262, 265, 270, 272, 275, 278, 282, 285, 288, 300, 303, 320, 324, 330, 342, 346, 352, 358, 364, 368], "54158234": 211, "51775529": 211, "idx": [211, 213, 278, 364, 368], "cube": [211, 368], "concaten": [211, 213, 250, 262, 263, 270, 278, 324, 352, 368, 391, 439, 505, 973, 1123, 1131], "axi": [211, 213, 314, 368, 1209, 1210], "reduced_img": [211, 213, 368], "fromarrai": [211, 213, 368], "franziska": [212, 213], "baseexcept": [212, 249, 278, 282, 303, 1086], "callabl": [212, 226, 262, 275, 285, 288, 303, 310, 320, 324, 331, 358, 743, 785, 807, 815, 1100, 1101, 1138], "rescu": [212, 270, 657, 678, 801, 803, 887, 1084], "pooh": [212, 522, 670], "hex": [212, 223, 233, 240, 255, 265, 275, 288, 300, 303, 310, 320, 330, 346, 352, 358, 368, 392, 408, 601, 994, 1132], "0x7f03d41165f0": 212, "nonexist": 212, "ensu": 212, "jessa": [212, 233, 240, 262, 291, 342], "verdammt": [212, 397], "ipython": [212, 249, 259, 265, 275, 278, 303, 320, 358, 970], "bd3a1af9b474": 212, "issubclass": [212, 249, 265, 278, 303], "bummer": [212, 265, 817, 1131], "peter": [212, 235, 272, 282, 388, 389, 1124], "paul": [212, 388, 389, 1124], "mari": [212, 1124], "pet": 212, "perfectli": [212, 268], "bloh": [212, 249], "blech": [212, 320, 756, 1204], "range_iter": [212, 223, 238, 255, 262, 270, 272, 275, 278, 288, 300, 303, 310, 320, 368], "0x7f03d402e570": 212, "stopiter": [212, 223, 238, 249, 255, 259, 262, 265, 270, 272, 275, 278, 282, 288, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 771, 779, 1086, 1091], "beantwortung": [213, 415], "herrschaft": [213, 415], "schulungsr\u00e4umen": [213, 415], "platzhirsch": [213, 415], "schlagen": [213, 415], "spass": [213, 415, 1245, 1247, 1252], "unglaublich": [213, 415], "lustig": [213, 234, 415, 1236, 1247], "vermittelt": [213, 415, 1257], "gelernt": [213, 415, 1245], "anwend": [213, 415], "beachten": [213, 234, 415, 1251], "zudem": [213, 415], "kursleit": [213, 415], "sympathisch": [213, 415], "kompet": [213, 415], "w\u00fcrde": [213, 223, 415], "weiterempfehlen": [213, 415], "christoph": [213, 255, 415], "jemand": [213, 415], "lassen": [213, 223, 234, 415, 1239, 1245, 1251, 1255, 1259], "bevor": [213, 1245, 1252, 1259], "anf\u00e4ngerthemen": 213, "vorbei": [213, 272, 278, 1248], "herumzureiten": 213, "gehackt": [213, 253], "zeug": [213, 342, 1254], "chef": 213, "vorgespr\u00e4ch": 213, "\u00fcbungsbeispiel": [213, 223], "mitgegeben": 213, "ausgehend": [213, 234, 415], "spektralbild": 213, "sagt": [213, 270], "verwend": [213, 246, 415], "clusteringalgorithmu": 213, "kategorisieren": 213, "abgebildeten": 213, "st\u00fccke": [213, 217], "erkennen": [213, 1240], "hab": 213, "erlaubt": [213, 223, 1236], "kursvorbereitung": 213, "appet": 213, "reduzieren": 213, "farbredukt": 213, "farben": 213, "bilddaten": 213, "interoperiert": 213, "nahtlo": [213, 1245, 1252], "zufal": [213, 239, 1239], "alpha": [213, 278, 324, 368, 1143], "ausgangsbild": 213, "abzuschneiden": 213, "restoren": 213, "algorithmu": [213, 233, 278, 282, 285], "reduc": [213, 368, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 542, 745, 783, 837, 839, 840, 994, 1190], "acht": [213, 233, 234, 278, 310, 330, 358, 1251], "\u00fcberschaubar": 213, "ausdrucksst\u00e4rk": 213, "bemerkbar": 213, "wegschneiden": 213, "pil": [213, 368], "kmean": [213, 368], "nrgba": 213, "disregard": [213, 443], "arbitrarili": [213, 846, 1020, 1024, 1084], "linear_rgb": 213, "rgba": 213, "ergeben": 213, "testprogramm": 213, "imndata": 213, "teilzeitmitarbeiterin": 213, "studiert": 213, "folgendem": [213, 255, 1259], "bekackten": 213, "inputformat": 213, "parsen": [213, 238], "zwischendurch": 213, "gruppenarbeit": 213, "h2o": 213, "dat": 213, "mass": [213, 319], "0000000e": 213, "2662399e": 213, "5994910e": 213, "4391972e": 213, "0048070e": 213, "0078250e": 213, "hessian": 213, "hartre": 213, "bohr": 213, "kamu": 213, "05054e": 213, "61610e": 213, "00000e": 213, "20781e": 213, "08051e": 213, "83024e": 213, "06829e": 213, "42629e": 213, "65256e": 213, "52600e": 213, "69570e": 213, "91733e": 213, "04388e": 213, "34292e": 213, "04780e": 213, "63758e": 213, "19019e": 213, "41217e": 213, "11622e": 213, "21912e": 213, "11752e": 213, "04198e": 213, "36702e": 213, "14839e": 213, "71613e": 213, "96373e": 213, "40456e": 213, "21369e": 213, "24236e": 213, "60956e": 213, "84350e": 213, "29686e": 213, "92365e": 213, "einigen": [213, 234, 415], "runden": [213, 223], "nachdenken": 213, "einigerma\u00dfen": 213, "zufrieden": 213, "load_dat": 213, "matrix_lin": 213, "vergeigt": 213, "matrix_el": 213, "unnecessari": [213, 434, 464], "triangular": 213, "max": [213, 223, 241, 246, 259, 265, 268, 270, 272, 275, 280, 285, 303, 357, 358, 368, 448, 464, 620, 669, 925, 986, 1193], "row_no": 213, "__name__": [213, 249, 250, 263, 272, 278, 282, 303, 320, 324, 390, 397, 1085, 1087, 1090, 1094], "bildverarbeitung": 213, "ahnung": [213, 255], "beeeeeep": 214, "broad": [214, 543, 1195, 1241, 1242], "histori": [214, 250, 268, 294, 295, 297, 299, 345, 354, 355, 373, 443, 741, 745, 747, 783, 837, 839, 840, 846, 889, 918, 925, 976, 1188, 1194, 1200, 1243, 1247, 1254], "responsibl": [214, 1047, 1221], "sane": [214, 358, 408, 524, 925, 1196, 1221], "interfer": [214, 494, 534, 993], "paradigm": [214, 924, 932, 985, 993, 1256], "breakag": [214, 867], "nontrivi": [214, 222, 226, 399, 1111, 1215], "inappropri": [214, 421, 426, 547, 845], "conclus": [214, 222, 229, 885], "awkward": 214, "encourag": [214, 846], "hear": 214, "predat": [214, 850, 977, 1056], "doubt": [214, 259, 265, 275, 278, 282, 802, 1118], "schulungsbeschreibung": [215, 1235], "drehbuch": 215, "workshop": 215, "infolgedessen": 215, "virtuel": [215, 279, 1245, 1255, 1256], "konzipiert": [215, 225, 415], "add_subdirectori": [216, 508, 526, 530, 540, 1054, 1230], "group1": 216, "group2": 216, "montag": [217, 225, 226, 247, 251, 1236], "vorbereitung": [217, 415, 1238], "mitbringen": 217, "teilzunehmen": 217, "stattfinden": [217, 293], "folgt": 217, "hierzu": 217, "privatheitsrichtlinien": 217, "bauanleitung": 217, "ausprobieren": 217, "willkommen": 217, "schulungsbeschreibungen": 217, "raii": [217, 319, 642, 840], "scott": [217, 750, 756, 805], "meyer": [217, 552, 756, 805], "primer": [217, 1228], "sonstig": 217, "argh": [217, 465, 524, 737, 765, 1086, 1216, 1228], "kursanforderung": 217, "erg\u00e4nzend": 217, "lasst": 217, "testgetrieben": 217, "testcas": [217, 1222], "aufgab": [217, 223, 253, 1248], "hacken": 217, "diskutieren": 217, "niederschrift": 217, "geschehenen": 217, "geh\u00f6renden": 217, "privaten": 217, "verl\u00e4uft": 217, "ansehen": 217, "clonen": 217, "wann": [217, 225], "zugeh\u00f6rigen": 217, "entspricht": 217, "unbetr\u00e4chtlich": 217, "gcc5": 217, "laufen": [217, 1236], "darau": [217, 225], "installationsanleitung": 217, "benutzung": [217, 397, 402], "zuerst": [217, 1259], "aggreg": [217, 376, 495, 506, 644, 899, 1206, 1228], "klassen": [217, 223, 229, 398, 1240], "konstruktoren": [217, 241, 293, 398, 1240], "methoden": [217, 223, 235, 392, 1240], "referenzen": [217, 223, 234, 235, 293, 1240, 1251], "klass": [217, 246, 342], "\u00e4quival": 217, "\u00fcbergab": 217, "langsam": [217, 223, 272], "ausbauen": 217, "dynmem": 217, "demonstrieren": 217, "alloziert": [217, 223, 240], "konstruktor": 217, "destruktor": 217, "vermeiden": [217, 223, 1257], "dtor": [217, 542, 628, 714, 719, 751, 754, 788], "ausflug": [217, 233, 274], "capac": [217, 695], "\u00fcbung": [217, 234, 235, 1251], "handgestrickt": 217, "fallen": [217, 1239, 1240], "lustvol": 217, "erleiden": 217, "teufel": [217, 1239], "smart": [217, 293, 315, 354, 380, 398, 399, 400, 415, 504, 601, 711, 752, 753, 783, 803, 808, 816, 825, 837, 839, 840, 1241, 1244], "shared_ptr": [217, 252, 268, 294, 295, 297, 315, 317, 354, 355, 380, 556, 620, 711, 743, 752, 783, 798, 804, 805, 808, 816, 837, 839, 840, 1241], "unique_ptr": [217, 252, 268, 294, 295, 297, 315, 317, 354, 355, 380, 542, 549, 556, 582, 583, 620, 711, 751, 752, 783, 798, 801, 808, 816, 836, 837, 838, 839, 840, 1241], "demonstriert": 217, "vorgriff": 217, "sortieren": [217, 1240], "employeerecord": 217, "parametrisierbarem": 217, "koordinatentyp": 217, "102ff": 217, "arten": [217, 1238], "containern": 217, "pointerarithmetik": 217, "iteratoren": [217, 280], "laufzeitverhalten": [217, 235], "verbesserungen": 217, "gegen\u00fcb": [217, 1238], "6ff": 217, "gegen\u00fcberstellung": 217, "sort_algorithm_reverse_lambda": 217, "vererbung": [217, 1240], "fallstudi": 217, "livegehackt": 217, "angebunden": 217, "komplex": [217, 270, 272, 278, 285, 310, 1257], "aufbauen": 217, "vergleichbaren": 217, "anbinden": 217, "wurden": [217, 225], "eigen": [217, 236, 1240, 1245, 1252, 1257, 1258], "kapitel": [217, 397, 402, 1238], "behandelt": [217, 1235], "vorbeigehen": 217, "dcmake_cxx_flag": 218, "dcmake_install_prefix": [218, 537], "libgtest": [218, 219, 315, 317, 1228, 1230], "claim": [218, 432, 661, 663, 664, 923, 1016], "simlp": 218, "concret": [218, 226, 252, 315, 524, 542, 549, 554, 569, 631, 717, 719, 815, 824, 1099, 1195], "find_packag": [218, 220, 377, 512, 514, 515, 1230], "add_execut": [218, 507, 531, 534, 538, 585, 621, 624, 627, 630, 633, 636, 639, 734, 1051, 1058, 1063, 1064, 1227, 1230, 1232], "add_test": [218, 532, 621, 624, 636, 1227, 1230, 1232], "emphasi": 218, "ultim": [218, 249, 269, 652, 818, 993], "luke": [218, 278, 1230], "thetoplevel": 218, "findgtest": [218, 220, 517, 1230], "gtest_root": 218, "dgtest_root": 218, "paranoidli": 218, "bitrot": [219, 1230], "var": [219, 223, 262, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364, 520, 578, 887, 919, 950, 970, 975, 976, 979, 1062, 1065, 1077], "libgmock": [219, 315, 317], "gmock": [219, 1228], "dcmake_build_typ": [219, 535], "loudli": [219, 652, 890, 1001], "appstream": [220, 358], "visualstudio": [220, 279, 417], "flatpakref": 220, "stone": 220, "snap": 220, "hate": [220, 646], "findpackagehandlestandardarg": [220, 512, 513], "gtest_librari": 220, "gtest_include_dir": 220, "gtest_main_librari": 220, "378": [220, 262, 265, 272, 310, 352, 358, 368, 1145], "_fphsa_failure_messag": [220, 513], "197": [220, 223, 240, 249, 262, 265, 270, 272, 275, 278, 282, 285, 291, 303, 320, 324, 330, 342, 346, 352, 358, 364, 368], "find_package_handle_standard_arg": [220, 512, 513], "gessmann": 220, "cpoint_demo": 220, "cmakefil": [220, 534, 538, 540, 1063, 1064], "cmakeoutput": 220, "sigh": [220, 252, 601, 805, 1179], "jail": 220, "dict_extensions_suit": 221, "thing_suit": 221, "xsv": 221, "dict_extens": 221, "thursdai": [222, 226], "publicli": [222, 634], "freedom": [222, 494, 720], "spontan": 222, "cost": 222, "agil": [222, 236, 504, 1215], "methodologi": [222, 372], "formul": [222, 318, 506, 760, 818, 1011, 1244], "diadact": [222, 1111], "anaconda": [222, 316, 358, 1111], "dictat": [222, 332, 348, 443, 482, 528, 1056, 1111, 1112, 1197, 1214, 1216, 1243], "volumin": [222, 1111], "nodepad": [222, 1111], "configurabilti": [222, 1214], "eclips": [222, 1111, 1204], "pydev": [222, 1111], "seemingli": [222, 226, 1062, 1111, 1188], "strang": [222, 992, 1111], "emac": [222, 242, 320, 371, 948, 970, 1062, 1111, 1214], "immutabilii": 222, "crisi": 222, "slept": 222, "lunch": 222, "squeez": 222, "Such": [222, 301, 1062, 1221], "takeawai": 222, "nonverb": 222, "antenna": 222, "Being": [222, 931, 972, 994, 1127], "stubborn": 222, "greybeard": 222, "distutil": 222, "azur": 222, "devop": [222, 1110], "heavyweight": [222, 403, 807], "reach": [222, 270, 522, 722, 726, 727, 802, 826, 828, 846, 851, 918, 1020, 1132], "afternoon": [222, 345], "simplic": [222, 564, 918, 986, 1009, 1084], "paral": 222, "imposs": [222, 282, 490, 546, 771, 782, 885, 1038], "expand": [222, 278, 324, 464, 465, 524, 991, 1020, 1062, 1064], "entertain": [222, 226, 247, 250, 273, 299, 323, 345, 1188], "freelanc": 222, "raymond": [222, 225, 226, 229, 233, 234, 247, 250, 257, 273, 276, 299, 323, 345], "hetting": [222, 225, 226, 229, 233, 234, 247, 250, 257, 273, 276, 299, 323, 345], "bias": 222, "humor": [222, 992, 1132], "emphas": [222, 229, 251, 637, 842, 850, 867, 1216], "hehe": [222, 229], "dissect": [222, 226, 314, 374, 726, 788, 1091, 1188], "multiprocess": [222, 226, 276, 318, 319, 345, 1188, 1245, 1252, 1256], "truli": [222, 226, 1188], "chri": [222, 226, 247, 1188], "wilcox": [222, 226, 247, 1188], "frontier": [222, 226, 299, 323, 345, 1188], "whop": [222, 226, 299, 323, 345, 1078, 1188, 1195], "covid": 222, "apart": [222, 282, 319, 457, 744, 986, 1089], "ipykernel_launch": [223, 275, 278, 358], "57bd7d77": 223, "6e54": 223, "4dcd": 223, "b7a8": 223, "452f82f88569": 223, "welt": [223, 233, 246, 392, 415, 1236, 1257], "doku": [223, 233, 300], "aeh": 223, "__doc__": [223, 246, 249, 259, 262, 265, 270, 272, 275, 278, 282, 285, 288, 291, 300, 303, 310, 324, 342, 346, 352, 358, 364, 390, 392, 1087, 1115, 1138], "interaktiven": 223, "modu": 223, "formatierung": [223, 233, 293], "\u00fcbernimmt": 223, "nachdem": [223, 233], "hamma": 223, "bieten": [223, 1255], "sech": [223, 233, 246, 278, 285, 310, 324], "zurueck": [223, 282, 320], "objektidentit\u00e4t": [223, 241], "0x7fe9d8578dc0": 223, "referenzieren": 223, "wechselt": 223, "zeigt": [223, 233, 1252], "identit\u00e4t": 223, "0x7fe9c4454d90": 223, "listen": [223, 229, 234, 235, 239, 274, 293, 346, 397, 524, 871, 987, 1003, 1204, 1251, 1256, 1258], "ausdrucksstark": 223, "trotzdem": [223, 1245, 1252], "lesbar": [223, 272], "beid": [223, 238, 254, 358, 1259], "modifizieren": 223, "modifik": 223, "sichtbar": [223, 415], "gerechnet": 223, "typeerror": [223, 259, 262, 265, 270, 272, 275, 278, 282, 285, 288, 300, 303, 310, 320, 324, 342, 346, 352, 358, 364, 391, 1085, 1086, 1099, 1106, 1129, 1138, 1209, 1210], "gel\u00f6scht": 223, "retten": 223, "uff": 223, "140641996429568": 223, "\u00e4ndern": [223, 235, 1259], "erzeugt": [223, 233], "operanden": 223, "unver\u00e4ndert": 223, "new_l": [223, 278, 1119], "140641996429632": 223, "hurra": [223, 240, 303], "killerfeatur": 223, "abcabc": [223, 262], "sequentiel": [223, 233, 272, 277, 1240], "suche": 223, "Suche": [223, 235, 246, 254, 272], "umst\u00e4ndlich": [223, 233], "andrea": [223, 224, 282, 764, 771], "pfeifer": 223, "gefundener_us": 223, "glauben": 223, "klammern": 223, "begrenz": 223, "interpretiert": 223, "overriden": 223, "ausdruck": 223, "evaluierungsreihenfolg": 223, "9223372036854775808": 223, "einstellig": 223, "schreibt": [223, 976, 1259], "datenmengen": 223, "abzulegen": 223, "sucht": 223, "vorstellungsvermoegen": 223, "milliarden": 223, "sebastian": 223, "hugo": [223, 265], "machma": 223, "behandeln": 223, "nichtvorhandensein": 223, "ausnahm": 223, "regel": 223, "mim": 223, "victor": 223, "festzustellen": 223, "evaluiert": 223, "aufgerufen": 223, "operand": [223, 240, 259, 262, 288, 441, 442, 443, 449, 660, 661, 663, 664, 760, 793, 1106, 1120], "bereit": [223, 234, 1235, 1240, 1251], "gesamtergebni": 223, "jaja": [223, 278], "rechten": 223, "sparen": 223, "potschert": [223, 235, 238, 241, 265, 272, 285, 352, 364], "berechnung": [223, 272], "summ": [223, 246, 272, 278, 282, 285, 310, 335, 358, 364, 368], "einzig": [223, 570, 584, 1254, 1257], "iteriert": [223, 233], "bildet": [223, 278], "primitiveren": 223, "intelligenteren": 223, "0x7fe9c43c3c90": 223, "letzt": [223, 238, 283], "schleif": [223, 234, 235, 239, 1251], "jede": [223, 397, 402, 1235, 1258, 1259], "selb": [223, 233], "k\u00fcrzer": 223, "vergleicht": 223, "objektidentit\u00e4ten": 223, "objektinhalt": 223, "modifiziert": 223, "kopieren": [223, 397, 402, 1240], "vermeintlich": 223, "modifiktionen": 223, "sch\u00fctzen": 223, "l3": [223, 240, 272, 278, 288, 300, 310, 320, 330, 352, 564], "kopi": [223, 272], "klar": [223, 233, 1236], "geschachtelt": [223, 234, 235, 1251], "gleicher": 223, "referenziert": [223, 233], "erachtet": 223, "ersparst": 223, "kopien": 223, "ran": [223, 295, 345, 537, 549, 598, 599, 600, 601, 662, 802, 1080, 1228], "parametern": [223, 246], "beliebigen": [223, 976], "definieren": 223, "unterst\u00fctzen": 223, "ihn": [223, 282], "\u00e4pfel": 223, "birnen": 223, "verglichen": 223, "hingegen": [223, 233, 1254], "php": [223, 253, 269, 805], "falschem": 223, "uebergeben": 223, "vergleich": [223, 246, 254, 283, 293], "aepfeln": 223, "140641996137808": 223, "add_to_list": 223, "__defaults__": [223, 272, 282, 303, 324, 1129], "meine_list": [223, 233], "defaultwert": 223, "benutzt": [223, 1245], "allerhand": 223, "seiteneffekten": 223, "aufpassen": 223, "ewig": 223, "existierend": 223, "unf\u00e4ll": 223, "wechselwirkungen": 223, "eventuellen": 223, "globalen": [223, 233], "156": [223, 233, 240, 262, 265, 270, 272, 275, 278, 282, 285, 288, 300, 303, 320, 324, 330, 342, 346, 352, 358, 364, 368], "erzwingt": 223, "158": [223, 233, 240, 249, 262, 265, 270, 272, 275, 278, 282, 285, 288, 291, 300, 303, 307, 320, 324, 330, 342, 346, 352, 358, 364, 368], "160": [223, 233, 240, 249, 262, 265, 270, 272, 278, 282, 285, 300, 303, 314, 320, 324, 330, 342, 346, 352, 358, 364, 368, 517, 523, 533, 840], "gesucht": 223, "genauer": 223, "n\u00e4chst\u00e4u\u00dferen": 223, "162": [223, 233, 240, 262, 265, 270, 272, 275, 278, 282, 285, 288, 300, 303, 320, 324, 330, 342, 346, 352, 358, 364, 368], "nirgend": 223, "163": [223, 233, 240, 256, 262, 265, 270, 272, 278, 282, 285, 288, 300, 303, 320, 324, 330, 342, 346, 352, 358, 364, 368], "gibtsnetglob": 223, "gibtsnet": 223, "164": [223, 233, 240, 249, 262, 265, 270, 272, 278, 282, 285, 288, 300, 303, 320, 324, 330, 342, 346, 352, 358, 364, 368], "nameerror": [223, 238, 272, 278, 303, 324, 330, 358, 364, 1086, 1128], "aufgabenstellung": 223, "kandidat": 223, "ersten": [223, 225, 238, 330, 389, 1237, 1257, 1259], "unsportlich": 223, "zweiten": [223, 225, 330], "unnachhaltig": 223, "dritten": [223, 330], "gelegenheit": 223, "gab": [223, 225], "erz\u00e4hlen": [223, 1238], "165": [223, 233, 240, 262, 265, 270, 272, 275, 278, 282, 285, 288, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 1145], "seq": [223, 241, 303, 358, 368, 877, 1050, 1089], "fromkei": [223, 269, 274, 286, 358], "166": [223, 233, 240, 262, 265, 270, 272, 278, 282, 285, 300, 303, 320, 324, 330, 342, 346, 352, 358, 364, 368], "167": [223, 233, 240, 262, 265, 270, 272, 275, 278, 282, 285, 288, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368], "xxx": [223, 240, 262, 270, 272, 278, 288, 310, 342, 346, 352, 358, 364, 391, 393, 473, 569], "kksvjhbsk": 223, "sgkysdudsvvc": 223, "dict_kei": [223, 291, 320, 1135], "diesmal": 223, "169": [223, 233, 240, 249, 262, 265, 270, 272, 275, 278, 282, 285, 291, 300, 303, 320, 324, 330, 342, 346, 352, 358, 364, 368], "170": [223, 240, 249, 256, 262, 265, 270, 272, 275, 278, 282, 285, 288, 300, 303, 320, 324, 330, 342, 346, 352, 358, 364, 368], "irgendein": [223, 255], "171": [223, 240, 242, 249, 262, 265, 270, 272, 278, 282, 285, 288, 291, 300, 303, 320, 324, 330, 342, 346, 352, 358, 364, 368, 394], "sonst": [223, 233, 270, 272, 285], "kategori": 223, "number_str": 223, "173": [223, 240, 262, 265, 270, 272, 275, 278, 282, 285, 288, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 979], "ihm": [223, 225, 234], "174": [223, 240, 262, 265, 270, 272, 275, 278, 282, 285, 291, 300, 303, 320, 324, 330, 342, 346, 352, 358, 364, 368, 970], "176": [223, 240, 262, 265, 270, 272, 275, 278, 282, 285, 288, 300, 303, 324, 330, 342, 346, 352, 358, 364, 368], "177": [223, 240, 262, 265, 270, 272, 278, 282, 285, 288, 300, 303, 320, 324, 330, 342, 346, 352, 358, 364, 368], "178": [223, 240, 249, 262, 265, 270, 272, 278, 282, 285, 291, 300, 303, 320, 324, 330, 342, 346, 352, 358, 364, 368], "179": [223, 230, 240, 262, 265, 270, 272, 275, 278, 282, 285, 288, 291, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368], "180": [223, 240, 262, 265, 270, 272, 275, 278, 282, 285, 288, 291, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 506, 871], "181": [223, 240, 262, 265, 270, 272, 278, 282, 285, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 506, 1210], "heisst": [223, 235, 239, 240, 1239, 1245], "sequenz": 223, "kopiert": 223, "unterschi": [223, 240, 246, 270], "sobald": [223, 225], "183": [223, 240, 249, 262, 265, 270, 272, 278, 282, 285, 288, 291, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368], "\u00fcbergeben": 223, "184": [223, 240, 262, 265, 270, 272, 275, 278, 282, 285, 291, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368], "it1": 223, "it2": 223, "multipli": [223, 250, 263, 282, 324, 750], "n2": [223, 282], "combined_iter": 223, "186": [223, 240, 249, 262, 265, 270, 272, 275, 278, 282, 285, 288, 291, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368], "schlecht": 223, "simplen": 223, "transformationen": 223, "generieren": 223, "quadratzahlen": [223, 272], "187": [223, 262, 265, 270, 272, 278, 282, 285, 288, 291, 300, 303, 310, 320, 324, 330, 342, 346, 358, 364, 368], "quadrat": 223, "naeherung": 223, "performant": 223, "gen_squar": 223, "189": [223, 240, 262, 265, 270, 272, 275, 278, 282, 285, 291, 300, 303, 320, 324, 330, 342, 346, 358, 364, 368], "syntaktisch": [223, 246], "191": [223, 240, 249, 262, 265, 270, 272, 278, 282, 285, 288, 291, 300, 303, 320, 324, 330, 342, 346, 358, 364, 368], "genexpr": [223, 249, 342, 352, 358], "0x7fe9c43f2900": 223, "193": [223, 240, 249, 262, 265, 270, 272, 278, 282, 285, 288, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368], "194": [223, 240, 249, 262, 265, 270, 272, 275, 278, 282, 285, 291, 300, 303, 310, 324, 330, 342, 346, 352, 358, 364, 368], "195": [223, 240, 262, 265, 270, 272, 275, 278, 282, 285, 291, 303, 324, 330, 342, 346, 352, 358, 364, 368], "indent": [223, 238, 256, 263, 269, 278, 279, 452, 1109, 1112, 1122, 1213], "196": [223, 240, 249, 262, 265, 270, 272, 275, 278, 282, 285, 291, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368], "userlist": 223, "nochwa": [223, 272, 310, 368], "dropdown": 223, "dropdownlist": 223, "fehleranf\u00e4llig": 223, "198": [223, 240, 249, 262, 265, 270, 272, 275, 278, 282, 285, 291, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368], "202": [223, 240, 249, 259, 262, 265, 270, 272, 275, 278, 282, 285, 288, 300, 303, 310, 324, 330, 342, 346, 358, 364, 368, 506, 549], "203": [223, 240, 249, 251, 262, 265, 270, 272, 275, 278, 282, 285, 300, 303, 324, 330, 342, 346, 352, 358, 364, 368, 1062], "205": [223, 249, 262, 265, 270, 272, 275, 278, 282, 285, 288, 300, 303, 320, 324, 330, 342, 346, 352, 358, 364, 368], "206": [223, 262, 265, 270, 272, 278, 282, 285, 288, 300, 303, 324, 330, 342, 346, 352, 358, 364, 368], "207": [223, 249, 262, 265, 270, 272, 278, 282, 285, 288, 303, 324, 330, 346, 352, 358, 364, 368], "208": [223, 262, 265, 270, 272, 278, 282, 285, 288, 303, 324, 330, 342, 346, 352, 358, 364, 368], "209": [223, 249, 262, 265, 270, 272, 278, 282, 285, 288, 300, 303, 324, 330, 342, 346, 352, 358, 364, 368], "user_a": 223, "user_b": 223, "n\u00e4herung": 223, "nackten": [223, 1238], "210": [223, 249, 262, 265, 270, 272, 278, 282, 285, 303, 310, 324, 330, 342, 346, 352, 358, 364, 368], "hantiert": [223, 1239], "anderem": [223, 1245, 1252], "211": [223, 249, 262, 265, 270, 272, 278, 282, 285, 288, 300, 303, 320, 324, 330, 346, 352, 358, 364, 368], "reviewten": 223, "funktionsaufruf": [223, 285], "sonder": 223, "stackoverflowprogrammierung": 223, "entgegenwirken": 223, "ausholen": 223, "212": [223, 249, 262, 265, 270, 272, 275, 278, 282, 285, 288, 300, 303, 324, 330, 342, 352, 358, 364, 368], "veloc": [223, 249, 393, 1129], "length_m": [223, 249, 393, 1129], "time_": [223, 249, 393, 1129], "213": [223, 262, 265, 270, 272, 275, 278, 282, 285, 288, 300, 303, 324, 330, 352, 358, 364, 368], "spiel": 223, "214": [223, 262, 265, 270, 272, 278, 282, 285, 288, 300, 303, 324, 330, 342, 352, 358, 364, 368], "liegen": 223, "positionel": 223, "215": [223, 262, 265, 270, 272, 278, 282, 285, 288, 300, 303, 310, 324, 330, 352, 358, 364, 368], "param": [223, 233, 246, 263, 291, 324, 522, 756, 805, 806, 993, 1049], "216": [223, 249, 262, 265, 270, 272, 278, 282, 285, 300, 303, 310, 324, 330, 342, 346, 352, 358, 364, 368], "217": [223, 262, 265, 270, 272, 275, 278, 282, 285, 288, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368], "218": [223, 262, 265, 270, 272, 275, 278, 282, 285, 288, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368], "219": [223, 249, 262, 265, 270, 272, 278, 282, 285, 288, 300, 303, 320, 324, 330, 342, 352, 358, 364, 368], "entpacken": 223, "positionellen": 223, "221": [223, 249, 262, 265, 270, 272, 278, 282, 285, 288, 300, 303, 310, 320, 324, 330, 342, 346, 358, 364, 368], "kwarg": [223, 249, 276, 278, 282, 303, 324, 1084, 1088, 1109], "explizi": 223, "rauskletzeln": 223, "223": [223, 262, 265, 270, 272, 275, 278, 282, 285, 288, 303, 310, 324, 330, 342, 346, 352, 358, 364, 368, 1201], "celebrate_another_birthdai": 223, "224": [223, 262, 265, 270, 272, 275, 278, 282, 285, 288, 303, 310, 324, 330, 346, 352, 358, 364, 368], "227": [223, 262, 265, 270, 272, 278, 282, 285, 288, 303, 310, 320, 324, 330, 342, 352, 358, 364, 368], "228": [223, 262, 265, 270, 272, 275, 278, 282, 285, 288, 303, 310, 324, 330, 342, 352, 358, 364, 368], "zeiterfassung": 224, "__pycache__": [224, 250, 263], "supp": 224, "cpython": [224, 249, 259, 265, 275, 278], "pyc": 224, "dienstag": 225, "anleitung": 225, "offen": [225, 415, 1235], "vorwissen": [225, 1240], "konkreten": [225, 415], "aufgabenstellungen": 225, "dienstgeb": 225, "mitgebracht": 225, "quickstart": [225, 1246], "wenngleich": [225, 415, 1245, 1255, 1257, 1258], "un\u00fcblichen": 225, "reihenfolg": [225, 1236], "verbrachten": 225, "firmenprojekt": 225, "entspringenden": 225, "festgehalten": 225, "empfehlungen": 225, "weitergehen": 225, "k\u00f6nnte": [225, 1259], "idiomat": [225, 226, 229, 247, 250, 257, 273, 276, 299, 323, 1188], "lieblingsphras": 225, "bringt": [225, 1238, 1257], "forgiv": [225, 226, 323, 1188], "eafp": [225, 226, 323, 1188], "begriff": [225, 239], "viertelstund": 225, "regex": [225, 238, 263, 265, 290, 291, 300, 323, 330, 358, 1131, 1188], "unumg\u00e4nglich": [225, 1253], "textuel": 225, "analysieren": 225, "hero": [225, 226, 247, 250, 273, 299, 323, 345, 1188], "unterhaltsamen": 225, "keynot": [225, 226, 247, 250, 273, 276, 299, 323, 345, 1188], "konferenz": 225, "pydata": [225, 226, 247, 250, 273, 299, 323, 345, 1188], "chicago": [225, 226, 247, 250, 273, 299, 323, 345, 1188], "witzig": 225, "selten": 225, "l\u00e4nge": 225, "ganzen": [225, 234, 1251], "abend": 225, "totalschaden": 225, "\u00fcbertragen": 225, "jedem": 225, "angemeldet": 225, "experienc": [226, 315, 317, 344, 415, 1115, 1246], "machinelearn": 226, "fuzzi": [226, 265], "improvis": 226, "shall": 226, "jango": 226, "rush": 226, "strong": [226, 276, 442, 1195, 1197], "claus": [226, 229, 259, 265, 275, 280, 302, 765, 1089, 1122, 1125], "whet": [226, 309], "appetit": [226, 309], "__dict__": [226, 246, 249, 250, 262, 263, 272, 275, 278, 282, 291, 303, 320, 324, 342, 364, 1100, 1106], "con": [226, 824, 973, 1080], "fiction": 226, "get_temperature_celsiu": 226, "competitor": 226, "eana": 226, "get_temperature_fahrenheit": 226, "eanaadapt": 226, "unserthermomet": 226, "revisit": [226, 268, 276, 299, 317, 341, 677], "shift": [226, 267, 482, 494, 646, 695, 993, 1106], "visitor": [226, 829, 831], "gang": [226, 1244], "idiom": [226, 643, 781], "classic": [226, 380, 481, 552, 643, 825, 839, 840, 879, 1244], "travers": [226, 495, 789, 801, 1086, 1091, 1127], "convolut": 226, "__call__": [226, 272, 282, 303, 324, 330, 1085], "__str__": [226, 249, 250, 263, 272, 275, 278, 282, 300, 303, 324, 341, 342, 364, 408, 1086], "__repr__": [226, 272, 275, 278, 282, 300, 303, 324, 342, 364], "poor": [226, 268, 435, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 745, 783, 837, 839, 840, 877, 985, 1015, 1060], "deleg": [226, 355, 380, 652, 783, 839, 840, 1241], "deck": [226, 251, 620], "sensordata": 226, "sensordata_test": 226, "historydata": 226, "slowli": [226, 637, 743, 869, 985], "csvreport": 226, "csv2sqlite3": 226, "frontend": [226, 653, 1062, 1081, 1217], "flaskerl": 226, "reiter": [226, 247, 266, 268, 273, 276, 405, 654, 1188], "phrase": [226, 229, 247, 270, 272, 273, 276, 278, 303, 914, 915, 1104, 1188], "impress": [226, 480, 519], "brought": [226, 494, 1095], "cloth": 226, "extraordinari": 226, "mondai": [227, 229, 231, 232, 257, 306, 312, 315, 317, 371], "preliminari": [227, 229, 230, 231, 232], "homogen": [227, 415], "versu": [227, 229, 231], "immut": [227, 229, 231, 233, 234, 241, 248, 250, 261, 262, 263, 265, 271, 277, 280, 286, 292, 301, 309, 311, 312, 325, 342, 346, 353, 359, 392, 464, 1110, 1117, 1118, 1119, 1123, 1251], "datastructur": [227, 251, 269, 1123], "exercise4": 227, "uh2ebfw8oym": [227, 231], "f26namfjggw": 227, "5qqq3yzbkp8": 227, "ugharkscop9uthgcoaec": 227, "pairwis": [228, 262, 659], "vale": 228, "bewar": [228, 443, 514, 992, 1060, 1193, 1195], "simplest": [228, 290, 534, 544, 677, 684, 792, 813, 892, 923, 977, 1041, 1075, 1113, 1118, 1221, 1229], "cheaper": [228, 494, 661, 663, 664, 743], "memorywis": 228, "johann": 228, "syntact": [228, 249, 451, 614, 654, 743, 795], "sugar": [228, 743, 795], "retval": [228, 490, 700, 1031], "dlc": 228, "msg1": 228, "readabl": [228, 272, 282, 316, 430, 461, 465, 485, 486, 487, 494, 504, 506, 585, 699, 720, 736, 744, 747, 782, 793, 795, 801, 806, 807, 923, 933, 939, 944, 948, 970, 995, 1062, 1089, 1108, 1129, 1137, 1139, 1159], "0x7f41f5ff26a0": 228, "msglist": 228, "0x7f41f5ff4160": 228, "0x7f41f5ff41c0": 228, "291130": 228, "now_timestamp": 228, "1603884859": 228, "3412576": 228, "fromtimestamp": 228, "341258": 228, "372": [228, 265, 272, 310, 358, 368], "45259": 228, "microsecond": [228, 485, 925], "programmverweis": 229, "xy": [229, 272, 275, 310, 662, 1127], "zab": 229, "eventcodefil": 229, "definedlisaev": 229, "event_id": 229, "bla": [229, 352, 358], "blubb": 229, "verbessert": 229, "stringformatierung": 229, "ctype": 229, "headerfil": [229, 976], "lst": [229, 265, 930, 1236], "callbackfunc": 229, "datetim": [229, 250, 256, 257, 258, 263, 311, 314, 351, 352, 1145], "observ": [229, 298, 316, 373, 380, 382, 541, 548, 562, 565, 576, 590, 642, 840, 1092, 1093, 1200, 1244], "longish": 229, "resurrect": [229, 534, 948], "outputsequ": 229, "resist": 229, "uncondition": [229, 890, 1086], "suitabl": [229, 278, 324, 819, 860, 985, 1034, 1099, 1108], "analysi": [229, 373, 494, 825, 1190, 1193, 1206], "cp1252": [229, 1182, 1183, 1185], "csvlog": 229, "csv_reader": 229, "recv": [229, 230, 988], "tuesdai": [230, 312, 327], "246": [230, 262, 265, 270, 272, 275, 278, 285, 303, 320, 324, 330, 352, 358, 364, 368, 1201], "corpor": [230, 303], "commandin": [230, 232], "comress": [230, 232], "gzip": [230, 232, 296, 305, 326, 327, 370, 371, 840, 887, 910, 912, 913, 917, 984, 1073, 1074, 1247], "diagnos": [230, 232, 398, 399, 1245, 1252], "netstat": [230, 232, 305, 326, 327, 370, 1204, 1245, 1252], "netcat": [230, 232, 305, 326, 327, 370], "subshel": [230, 232, 242], "telnetd": 230, "insecur": [230, 1001], "proto": 230, "foreign": [230, 306, 465], "34490": 230, "56062": 230, "sshd": [230, 262, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364, 919, 924, 926, 979, 995, 1005], "systemctl": [230, 1077, 1204], "systemd1": 230, "unprivileg": 230, "putti": [230, 242, 394], "puttygen": 230, "id_rsa": [230, 1001], "authorized_kei": [230, 1001], "trivia": 230, "hoorai": [230, 275, 288, 310, 364, 1122], "idiot": 230, "blinker": 230, "briana": 230, "mac": [230, 247, 263, 948, 1113, 1188, 1224], "wakeup": [231, 268, 345, 364, 408, 412, 815, 840, 883, 984, 993, 1012, 1025, 1035, 1045, 1047], "patrick": 231, "1996": [231, 265], "wagna": 231, "gernot": 231, "1982": [231, 265], "birthplac": 231, "txt2json": 231, "equip": [232, 306, 405, 985, 1245, 1252], "deppert": [233, 246, 392], "sidestep": 233, "builtin_function_or_method": [233, 303, 330, 352], "sozusagen": 233, "genauso": [233, 1235], "aufrufen": [233, 976], "zaehler": 233, "initialwert": 233, "zaehlen": 233, "naechsten": 233, "schleifendurchlauf": 233, "locker": [233, 885], "mein_integ": 233, "1024": [233, 265, 918, 925, 948, 987, 1010, 1062], "sch\u00fctzt": 233, "passen": [233, 300], "gehandhabt": 233, "1267650600228229401496703205376": [233, 259, 262, 270, 282, 288, 310], "hoch": 233, "rechnen": [233, 397, 402], "tut": [233, 342, 392, 1238], "ausschliesslich": [233, 1247], "ganzzahldivis": 233, "ganzzahligen": 233, "resultat": 233, "gleichen": [233, 1245, 1258], "vorrang": 233, "ghi": [233, 272, 358, 364], "viert": 233, "nwelt": 233, "nwie": 233, "linefe": [233, 242, 263, 270, 426, 427, 518, 1131, 1137, 1168, 1213], "bedeutung": [233, 1240, 1247], "unangetastet": 233, "glump": 233, "nebenlaeufigkeitsdemo": 233, "ebenlaeufigkeitsdemo": 233, "l\u00f6sung": [233, 246, 255, 415, 987], "formatierungsm\u00f6glichkeit": 233, "pfx_var1": 233, "pfx_var2": 233, "ausgab": [233, 1238], "notwendig": [233, 1237, 1253, 1254], "abzubrechen": 233, "ignorieren": [233, 234, 240, 1251], "gefunden": [233, 303, 976], "value1": [233, 524, 1148], "501": [233, 265, 358, 368, 1148], "value2": [233, 524, 1148], "799": [233, 262, 265, 1145, 1148], "value3": [233, 1148], "sprachen": [233, 234, 1238, 1251], "neg": [233, 278, 282, 352, 368, 443, 485, 490, 722, 865, 979, 1228], "indiz": 233, "erscheinen": 233, "komisch": 233, "bequem": 233, "mapping_t": 233, "f\u00fcnf": [233, 1245], "sieben": [233, 246, 272, 700], "neun": [233, 358, 368], "explicit": [233, 252, 259, 263, 272, 280, 282, 440, 449, 477, 490, 494, 534, 569, 570, 583, 584, 620, 646, 648, 649, 673, 699, 743, 744, 753, 760, 765, 773, 780, 785, 800, 803, 858, 1014, 1028, 1060, 1081, 1082, 1112, 1115, 1118, 1196, 1209], "implicit": [233, 259, 272, 282, 430, 436, 440, 625, 742, 744, 760, 948, 1017, 1104, 1118], "primzahlen": 233, "checken": 233, "primzahl": [233, 234, 1251], "checkenden": 233, "zahl": [233, 240, 246, 271, 272, 275, 285, 392], "probier": 233, "gach": [233, 272], "teiler": 233, "teiler_kandidaten": 233, "prim": 233, "gleichema\u00dfen": 233, "vollst\u00e4ndigkeit": 233, "halber": 233, "startend": [233, 272], "schrittweit": 233, "0x7f24f2ac0e50": 233, "ablegen": 233, "0x7f24f2ac0e70": 233, "arschlangsam": 233, "num_comparison": 233, "datenstruktur": [233, 254], "suchen": [233, 254, 975, 1240, 1247], "einf\u00fcgen": [233, 1245], "optimiert": [233, 246], "perfekt": 233, "einitreten": 233, "himmi": 233, "list_reverseiter": [233, 262, 285, 310], "0x7f24ec31d190": 233, "bricht": 233, "beinhart": 233, "liefert": [233, 1247], "lieber": 233, "zweit": [233, 246, 272, 303, 342, 358, 392, 1245], "po": [233, 272, 278, 282, 303, 308, 320, 324, 346, 352, 368, 506, 602, 695, 722], "wirklichkeit": 233, "ordin\u00e4r": 233, "alternativen": 233, "fruit": 233, "gemma": 233, "divisor_candid": [233, 368], "161": [233, 240, 262, 265, 270, 272, 275, 278, 282, 285, 288, 300, 303, 320, 324, 330, 342, 346, 352, 358, 364, 368], "wegen": 233, "dogma": 233, "zugewiesen": 233, "meine_vari": 233, "eine_vari": [233, 310, 320, 352], "angelegt": 233, "streng": 233, "obigem": 233, "dazusagen": 233, "noch_eine_globale_vari": 233, "increment_diese_vari": 233, "offiziel": [234, 236, 244, 247, 250, 251, 253, 269, 281], "leitfaden": 234, "kommentar": [234, 235, 246, 310, 392, 1251], "platziert": [234, 254], "hackereien": 234, "gleicherma\u00dfen": 234, "sogenannten": 234, "semantik": [234, 235, 1251], "sprach": [234, 235, 1238, 1239, 1240, 1251, 1252, 1259], "standarddatentypen": [234, 235, 1251], "literal": [234, 235, 293, 1251], "python2": [234, 272, 1251], "endg\u00fcltig": [234, 1251], "rausl\u00f6schen": [234, 1251], "konstanten": [234, 235, 1251], "typen": [234, 240, 1247, 1251, 1257], "operatoren": [234, 235, 976, 1240, 1251], "angeschnitten": [234, 1251], "vertiefung": [234, 250, 1251], "nocheinm": [234, 415, 1251], "ausdr\u00fcck": [234, 235, 293, 1251], "operatorrangfolgen": [234, 235, 1251], "grundlegenden": [234, 398, 1247, 1251], "sprachelementen": [234, 1251], "rede": [234, 1251], "syntaxdiagramm": [234, 1251], "gespritzt": [234, 1251], "gesamt": [234, 1251], "sperrig": [234, 1251], "n\u00fctzt": [234, 1251], "menschlich": [234, 1251], "abzubilden": [234, 1251], "tabel": [234, 1251], "anweisungen": [234, 235, 1251], "gro\u00dfen": [234, 1251], "fisch": [234, 1251], "instruktiv": [234, 1251], "bedingungen": [234, 235, 1237, 1251], "verzweigungen": [234, 235, 1251], "bedingt": [234, 235, 1238, 1251], "anweisung": [234, 235, 1251], "formulierungen": [234, 1251], "mehrfach": [234, 235, 1251], "fallauswahl": [234, 235, 1251], "benutzereingaben": [234, 1251], "\u00fcberpr\u00fcfen": [234, 1251], "schleifenkonstrukt": [234, 1251], "weitgehend": [234, 1251], "unserem": [234, 1251], "vehikel": [234, 1251], "hilfreich": [234, 1247, 1251], "klarstellung": [234, 1251], "fu\u00dfgesteuert": [234, 235, 1251], "z\u00e4hlergesteuert": [234, 235, 1251], "auslassen": [234, 1251], "kopfgesteuert": [234, 235, 1251], "gewinnt": [234, 1251], "konsol": [234, 1251], "anzeigen": [234, 1247, 1251], "voraussetzung": [234, 1251], "ausblick": [234, 1251], "schnell\u00fcbersicht": [234, 235, 1251], "sprunganweisungen": [234, 235, 1251], "endlosschleifen": [234, 235, 1251], "naja": [234, 1251], "reinschauen": [234, 1251], "mager": [234, 1251], "ausgelassen": [234, 1251], "eindimensional": [234, 235, 1251], "gefolgt": [234, 272, 1251], "zeichenketten": [234, 235, 1251], "tupel": [234, 235, 238, 1251], "besonder": [234, 235, 1251], "stapel": [234, 235, 1251], "schlangen": [234, 235, 1251], "tempo": [234, 1251], "schauma": [234, 240, 1251], "fallt": [234, 1251], "gscheit": [234, 241, 352, 1251], "gemeinsam": [234, 1235, 1237, 1251, 1254], "dr\u00fcber": [234, 1251], "vielzahl": [234, 1251, 1255, 1258], "l\u00f6sungsm\u00f6glichkeiten": [234, 1251], "eingegangen": [234, 1235, 1251, 1255], "pythonischst": [234, 1251], "bestritten": [234, 1251], "unterprogramm": [234, 235, 1251], "parameter\u00fcbergab": [234, 235, 1251], "r\u00fcckgabewert": [234, 235, 1251], "inner": [234, 235, 255, 364, 506, 1085, 1251], "standardbibliotheken": [234, 235, 1251], "funktionalit\u00e4ten": [234, 235, 1251], "berechnet": [234, 270, 278, 1251], "satz": 234, "gepr\u00e4gt": 234, "konferenzen": 234, "definitiv": 234, "sehenswert": 234, "anf\u00e4nger": [234, 1254], "hochinteress": 234, "sprachelement": 235, "elementar": 235, "beliebig": [235, 270, 1252], "gro\u00df": [235, 1257], "vergleichsoperatoren": 235, "strichrechnung": 235, "modulo": [235, 246, 259, 265, 270, 278, 392, 441, 1106, 1118], "un\u00e4rer": 235, "negat": [235, 259, 282, 977, 1106, 1118, 1136], "konvertierungen": [235, 1238], "pr\u00e4zendenzregeln": 235, "vertauschen": [235, 246, 392], "kontrollstrukturen": [235, 271, 1238], "verzweigung": 235, "schleifen": [235, 293, 1237], "versuch": [235, 247, 358, 364], "hybrid": [235, 716], "supergscheit": 235, "prozeduren": 235, "funktionen": [235, 239, 293, 398, 1237, 1238, 1240, 1248], "funktionspoint": 235, "funktionsobjekt": 235, "primzahlenbeispiel": 235, "laufzeitfehl": 235, "lokal": [235, 246, 292, 293, 1258], "zuweisen": 235, "fehlerfal": 235, "anschliessend": 236, "interaktiv": 236, "uebungen": 236, "idealerweis": [236, 310], "ueblichen": 236, "negoti": 237, "deiniti": [237, 865, 1246], "unload": [237, 867, 881, 883, 1246], "synchronizt": 237, "spinlock": [237, 840, 864, 879, 885, 889, 891, 895, 896, 902, 905, 906, 908, 984, 1048, 1246], "rcu": 237, "halv": 237, "softirq": 237, "tasklet": [237, 885], "irss": 237, "kmalloc": [237, 840, 849, 854, 857, 858, 859, 864, 868, 877, 878, 882, 884, 891, 896, 899, 902, 905, 908, 984], "dma": [237, 840, 864, 882, 884, 927, 984, 1009, 1010, 1011, 1246], "coher": [237, 858], "20201125": [238, 240], "unbekannten": 238, "lookup_t": [238, 241, 392], "12345": [238, 270, 282, 310, 358, 1222], "noch_eine_list": 238, "gesamte_list": 238, "vorl\u00e4ufig": 238, "letz": 238, "indented_text": 238, "nebenbei": [238, 240, 392], "eine_zum_sterben_verurteilte_vari": 238, "ein_set": 238, "sequenzen": 238, "grottenlangsam": 238, "subscript": [238, 272, 342, 364, 470, 677, 698, 702, 1209], "multiple_return_valu": 238, "xyz": [238, 240, 246, 265, 272, 303], "mein_formatierter_str": 238, "my_rang": [238, 278, 324, 330, 352], "retlist": 238, "zeichenkett": 238, "funktionieren": [238, 1240, 1258], "my_list": [238, 249, 291], "airms_eth": 238, "simplizistisch": 238, "bl\u00f6d": 238, "i_oder_v": 238, "iv": 238, "rms_eth": 238, "vorcompilieren": 238, "acirms_eth": 238, "my_regex": 238, "zeilennumm": 238, "dazuhaben": 238, "meine_zu_sendenden_daten": 238, "345": [238, 259, 265, 278, 310, 342, 352, 358, 364, 368], "234": [238, 262, 265, 270, 272, 275, 278, 282, 285, 288, 303, 320, 324, 330, 342, 346, 352, 358, 364, 368, 392], "meine_zu_sendenden_daten_in_string_form": 238, "ueblicherweis": 238, "ueber": 238, "verschickt": 238, "empfangen": [238, 253], "geschrieben": [238, 1258], "empfaeng": 238, "empfangenen": 238, "natuerlich": 238, "zurueckkonvertieren": 238, "meine_empfangenen_daten_python_form": 238, "gegangen": [238, 291], "wurscht": [238, 278, 352, 976], "returnwerten": 239, "containerdatentypen": 239, "untypisiert": 239, "zeilen": [240, 282, 1247], "neiner": 240, "nund": [240, 259], "nb": 240, "stoppt": 240, "newlin": [240, 242, 255, 278, 303, 320, 388, 419, 426, 439, 1115, 1131], "ndrin": 240, "drin": [240, 241, 246, 282, 310, 320, 358, 392, 397], "zuviel": [240, 1240], "mischt": 240, "unsupport": [240, 262, 288, 1106], "140546731085392": 240, "0x7fd395fb0e50": 240, "0x7fd3900395b0": 240, "new_t": [240, 1119], "0x7fd390052800": 240, "667": [240, 262, 265, 285, 291, 637], "2923750584022716461": 240, "529344067295497451": 240, "unhash": [240, 300, 310, 324, 352, 364], "fuenf": [240, 262, 272, 300, 310, 324, 342, 358, 368, 392], "verschluckt": 240, "6000000": 240, "elementen": [240, 254], "nonetyp": [240, 250, 264, 265, 320, 330, 342, 358, 364], "_io": [240, 259, 262, 265, 275, 278, 310, 324, 358, 389, 889], "textiowrapp": [240, 259, 262, 265, 275, 278, 310, 324, 358, 389, 1084], "oi": 240, "456": [240, 241, 265, 272, 310, 358, 439], "hansi": [240, 278, 282, 285], "linspac": [240, 346], "11111111": 240, "22222222": 240, "33333333": 240, "44444444": 240, "55555556": 240, "66666667": 240, "77777778": 240, "88888889": 240, "sin": 240, "8961922": 240, "79522006": 240, "19056796": 240, "96431712": 240, "66510151": 240, "37415123": 240, "99709789": 240, "51060568": 240, "54402111": 240, "plot": [240, 259, 288, 291, 342, 346, 352, 364, 1083, 1142, 1194, 1195], "line2d": [240, 288, 291, 342, 346, 352, 364], "0x7fd35cd3ef40": 240, "splev": 240, "splrep": 240, "spline": 240, "represent": [240, 259, 278, 368, 789, 897, 992, 993], "spl": 240, "evalu": [240, 259, 264, 270, 280, 422, 442, 447, 449, 457, 464, 465, 519, 563, 564, 577, 578, 750, 760, 931, 948, 1086, 1120, 1122, 1129, 1228], "x2": [240, 282], "y2": 240, "0x7fd341a486d0": 240, "speicher": [241, 1238, 1245, 1252], "sch\u00fctze": 241, "gemischten": 241, "operationen": [241, 1257], "interpol": [241, 282, 518, 519, 524, 1193], "lag": 241, "gib": [241, 320], "depp": [241, 270], "ret_l": 241, "uniq_l": 241, "read_excel": [241, 1193], "invit": [242, 716], "effici": [242, 287, 341, 454, 493, 495, 497, 678, 682, 692, 695, 798, 932, 979, 981, 1091, 1195, 1206, 1209, 1246], "expans": [242, 518, 526, 976, 977, 1237], "ecdsa": [242, 394], "fingerprint": [242, 394, 996, 1047], "sha256": [242, 394, 520, 996], "in22o4vcd400x0bb4flcb5": [242, 394], "vqnrvkvoirgfqq6mapo": [242, 394], "perman": [242, 394], "individu": [242, 394, 446, 504], "sat": [242, 394], "straight": [242, 765, 1210], "startung": 242, "standpoint": 242, "suboptim": [242, 291], "pwned": 242, "hidden": [242, 555, 751, 860, 1062], "clumsi": [242, 268, 269, 309, 312, 532, 544, 644, 652, 660, 673, 700, 743, 806, 1083, 1084, 1100, 1101, 1209, 1241], "clumsier": 242, "dumpbin": 242, "hmoe": 242, "frcoll": 242, "bunch": [242, 807, 914, 1075, 1099], "oom": [242, 262, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364, 1090], "killer": [242, 262, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364, 1124], "amoc": 242, "snapshot": [242, 785, 818, 926, 1075], "tinkernut": 242, "raspberi": 242, "tunnel": [242, 308, 995, 1003, 1014], "centric": [242, 1246], "virtualbox": [242, 927], "cygwin": [242, 295, 297, 315, 927], "assort": 242, "nano": 242, "univers": [242, 317, 601, 1014, 1112, 1246], "scripe": 242, "voellig": 246, "wohl": [246, 330, 1238, 1259], "selbsterklaerend": 246, "printet": 246, "builtin": [246, 252, 259, 265, 266, 275, 278, 282, 303, 324, 341, 342, 352, 358, 368, 948, 1087], "accur": [246, 278, 282, 303, 324, 499], "__weakref__": [246, 262, 272, 275, 278, 282, 291, 303, 324, 342], "weak": [246, 278, 282, 303, 324, 342, 374, 804, 1195], "_abc": [246, 259, 265, 275, 278], "_1": [246, 806, 807], "a123": 246, "vernichten": 246, "laufzeit": 246, "140032702361168": 246, "refcount": [246, 802, 804, 1084, 1241], "dezim": 246, "oktal": 246, "0o755": [246, 282, 392], "493": [246, 265, 282, 358, 368], "0b11": [246, 282, 285], "sql": [246, 257, 269, 1197, 1200], "0b11111111": 246, "ordnung": 246, "uhrzeit": 246, "vormittag": 246, "6666666666666666": [246, 282], "nda": [246, 300], "python_dir": 246, "jan": [246, 275, 278, 388, 389, 406, 439, 825, 851, 944, 970, 1028, 1062, 1077, 1114], "lowercas": [246, 278, 324, 948, 995, 1132, 1150, 1155], "140032636418048": 246, "ein_iterierbares_d": 246, "extraw\u00fcrschtl": 246, "sex": [246, 259, 281, 282, 1150], "diver": 246, "translation_t": [246, 282, 285, 288, 358], "bag": [246, 294, 295, 297, 534, 539, 837, 839, 840, 1056, 1119], "blue": [246, 254, 262, 282, 1145], "mengenoperationen": 246, "set1": 246, "set2": 246, "symm_diff": 246, "lisa": 246, "eugeni": [246, 249], "okan": 246, "mcguir": 246, "sinner": 246, "implicitli": [246, 251, 262, 471, 519, 528, 541, 649, 657, 748, 756, 850, 1018, 1084, 1116, 1201], "vornam": [246, 254, 255], "nachnam": [246, 254, 255], "persnr": 246, "personalnumm": 246, "5000": [246, 259, 265, 1103], "4000": [246, 265], "3000": [246, 259, 265, 285, 324], "15000": [246, 265], "uppercas": [246, 278, 324, 948, 1132, 1150], "verfuegbar": 246, "restlichen": 246, "gehaelt": 246, "konstant": [246, 254, 277], "unexpect": [246, 484, 526], "pcap": [247, 267], "certifi": 247, "math": [247, 250, 260, 262, 263, 265, 273, 282, 287, 290, 323, 329, 352, 644, 646, 1112, 1188], "statist": [247, 260, 273, 282, 287, 290, 323, 329, 498, 1050, 1172, 1188, 1193, 1221], "undo": [247, 948, 1188], "brad": [247, 1188], "traversi": [247, 1188], "evaluierung": 248, "eval": [248, 276, 277, 286, 304, 318, 319, 324, 331, 340, 343, 344, 1108], "openfil": 249, "hanld": 249, "soemth": [249, 901], "zf": [249, 358], "namelist": 249, "zipdemo": 249, "extracted_nam": 249, "isinst": [249, 250, 263, 265, 278, 291, 303, 1106, 1210], "superclass": [249, 250, 263, 278], "subclass": [249, 250, 263, 278, 282, 1086, 1103], "class1": 249, "class2": 249, "salari": 249, "selina": 249, "orgl": 249, "8010": [249, 265, 506], "birth": [249, 275, 288, 644, 838, 1177, 1178, 1179, 1180, 1183, 1184, 1185], "1622102062": 249, "4778333": 249, "019427776336669922": 249, "009679079055786133": 249, "daniel": [249, 252, 388, 389, 406], "ortner": 249, "num_employe": 249, "__first": 249, "__last": 249, "__address": 249, "_person__first": 249, "_person__last": 249, "_person__address": 249, "_first": 249, "_last": 249, "_address": 249, "do_debug": 249, "val": [249, 278, 806, 993], "ueberhaupt": 249, "l_float": 249, "0x7fd9881b04a0": 249, "functool": [249, 316], "wrapper": [249, 278, 288, 293, 330, 352, 547, 746, 771, 1008, 1056, 1085, 1106, 1190], "komplexen": 249, "testfil": 249, "nzeil": [249, 278, 346], "seek": [249, 324, 358, 389], "nth_fibo": 249, "accomod": 249, "0x7fd9801cec10": 249, "0x7fd9801b8d60": 249, "0x7fd9801b4900": 249, "0x7fd98014cd40": 249, "gen": [249, 324], "sequenceno": 249, "kv_pair": 249, "permissionerror": [249, 265, 285, 303, 320, 1086], "deni": [249, 265, 285, 320, 358, 569, 583, 931, 967, 995, 1003, 1015, 1020, 1021, 1086, 1216], "filenotfounderror": [249, 265, 303, 1086], "64bit": 249, "utc": 249, "python_implement": [249, 250, 263], "python_version_tupl": [249, 250, 263], "python39": 249, "dynload": [249, 358], "isfil": [249, 382, 506], "isdir": [249, 506], "my_path": 249, "hopefulli": 249, "the_except": 249, "__class__": [249, 272, 275, 278, 282, 291, 300, 303, 324, 342, 364], "__bases__": [249, 250, 263, 280], "distrust": 249, "guido": [249, 1212], "incompet": 249, "precondit": [249, 916], "abdefg": 249, "beg": [249, 465, 1087], "bdefg": 249, "stringifi": 249, "0x7ffa9c2ac3a0": 249, "formatstr": 249, "ding": [249, 279, 1055], "formatierter_str": 249, "oserror": [250, 278, 303, 1086], "assertionerror": [250, 275, 291, 303, 342, 1086, 1099, 1221, 1222], "jjjj": [250, 410, 411, 503], "line_count": 250, "aud": 250, "qualifii": [250, 263], "trunc": [250, 263], "hypot": [250, 263], "seed": [250, 263, 282, 596], "ascii": [250, 263, 278, 285, 288, 303, 324, 330, 346, 352, 358, 426, 429, 432, 438, 1117, 1118, 1131, 1137, 1196], "codepoint": [250, 263], "escap": [250, 263, 270, 278, 300, 419, 518, 1196], "ord": [250, 263, 282, 303, 1126], "chr": [250, 263, 303], "isxxx": [250, 263], "rfind": [250, 263, 278, 324, 330, 364, 1133], "grammar": [250, 263], "instrospect": [250, 263], "hasattr": [250, 263, 278, 291, 303, 1100, 1106], "__module__": [250, 262, 263, 272, 275, 278, 282, 291, 303, 324, 342], "bytearrai": [250, 263, 278, 303], "histogram": [250, 251, 268, 435, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 630, 631, 639, 745, 783, 837, 839, 840], "defaultdict": [250, 276, 277, 301], "make_histogram": [250, 631, 640], "fileobj": 250, "stringio": [250, 278], "8859": [250, 268, 269, 285, 288, 308, 330, 342, 346, 506], "pycon": [250, 276, 299, 323, 345, 1188], "2017": [250, 276, 299, 345, 652, 751, 802, 1188], "metaprogram": [250, 277, 299, 760, 1099, 1188, 1242], "contract": [250, 252, 299, 1188], "evolut": [250, 299, 345, 948, 1188], "unauthor": [250, 299, 345, 1188], "lesson": [250, 299, 345, 394, 400, 505, 789, 1079, 1188], "evolv": [250, 299, 345, 786, 1188], "assembli": [250, 299, 323, 345, 1062, 1064, 1188, 1243], "revolv": [250, 276, 345, 1188, 1194], "mro": [250, 276, 280, 345, 1188], "cpa": 251, "fahr": [251, 420, 422], "tomorrow": [251, 266, 404, 405], "correctli": [251, 341, 383, 482, 518, 992, 1015, 1139, 1196], "consecut": [251, 445, 795, 981], "becam": [251, 337], "44ff": 251, "gig": 251, "upcom": 251, "msi": 251, "wswitch": [251, 486, 744, 856], "wall": [251, 265, 266, 443, 493, 535, 818, 855, 856, 1230], "77ff": 251, "skip": [251, 278, 389, 534, 535, 862, 993, 1063, 1064, 1086, 1223], "89ff": 251, "alongsid": [251, 881], "num_us": 251, "199ff": 251, "204ff": 251, "208ff": 251, "220ff": 251, "222ff": 251, "db_get_user_at_index": 251, "298ff": 251, "strcpy": [251, 268, 432, 478, 634, 649, 652, 754, 788, 988, 1046], "strlen": [251, 432, 457, 485, 649, 652, 754, 788, 1026, 1029, 1059], "bahavior": 251, "dest": [251, 432], "strtol": 251, "stringif": [251, 1238], "db_error_str": 251, "sexi": [251, 1038], "caleb": 251, "discret": [252, 282, 341, 492, 496, 501, 502, 745, 783, 837, 839, 840], "bleed": 252, "rect": [252, 473, 620], "sphere": [252, 620], "preprocessor": [252, 268, 439, 466, 472, 476, 479, 483, 488, 492, 496, 501, 502, 742, 745, 783, 837, 839, 840, 1062, 1228, 1242], "julia": 252, "yesterdai": [252, 268, 276, 316, 376], "distanc": [252, 646, 654, 655, 675, 793, 806], "has_lastnam": 252, "botton": 252, "mingw": [252, 295, 297, 315, 404, 417, 927], "resembl": 252, "tortur": 252, "functor": [252, 294, 295, 297, 354, 355, 373, 380, 686, 783, 784, 839, 840], "rudimentarili": [252, 1116, 1191], "gotten": [252, 820], "recourc": 252, "outright": [252, 308, 480, 1091, 1122], "geniu": [252, 308, 677, 1091, 1122], "livehackingli": 252, "zuordnung": [253, 269, 281], "bissl": 253, "commandlineargument": [253, 1237], "summenbeispiel": 253, "showcas": 253, "datenbank": 253, "formulieren": 253, "verbindung": [253, 1235, 1245, 1252, 1258], "schicken": [253, 1235], "schickman": 253, "muessen": 253, "verwandlen": 253, "fractal": [253, 269], "schatzi": 254, "zeitkomplexit\u00e4t": 254, "foreach": [254, 517, 520, 523, 528, 533, 840], "assozi": [254, 1240], "color_transl": 254, "gelb": 254, "yellow": 254, "hashtabl": [254, 1210], "englisch": [254, 1235], "sack": 254, "my_color": 254, "her_color": 254, "pink": 254, "gr\u00fcn": 254, "beig": 254, "vereiningungsmeng": 254, "schnittmeng": 254, "symmetrisch": 254, "differenzmeng": 254, "sei": 254, "gewesen": 254, "waer": [254, 330], "1037190666": [254, 270, 272, 278, 282, 285, 288, 291, 544, 551, 568, 569, 570, 582, 583, 584, 703, 1100], "6666010185": 254, "schwarzbauer": 254, "json_string_fuer_den_brows": 254, "response_dict": 254, "svnr": [254, 262, 265, 272, 278, 282, 285, 288, 290, 291, 330, 545, 551, 573, 579, 1100, 1205], "pprint": [254, 256, 263, 265, 300, 1087, 1196], "formatieren": 254, "endlich": 254, "transfer_string_in_php_am_serv": 254, "u00f6rg": 254, "transfer_string_in_js_am_brows": 254, "response_dict_am_brows": 254, "verwandeln": [254, 1254], "schlussendlich": 254, "geeignet": [254, 1236], "platzieren": 254, "meine_t": 254, "sozialversicherungsnumm": 254, "simmer": 255, "mein_str": 255, "sq": [255, 262, 265, 272, 282, 303, 324, 342, 346, 358], "docu": 255, "nmehrzeilig": 255, "nvon": 255, "mehrzeilig": 255, "deppertem": 255, "irrelevant": 255, "quargel": [255, 256], "190666": 255, "inkorrekt": 255, "geburtsdatum": 255, "endswith": [255, 270, 272, 278, 288, 303, 307, 310, 324, 330, 346, 352, 358, 364, 368, 1133], "sss": 255, "isalpha": [255, 259, 270, 272, 278, 282, 303, 324, 330, 352, 368, 1133], "isidentifi": [255, 259, 272, 278, 288, 303, 324, 330, 1133], "islow": [255, 278, 288, 303, 324, 358, 364, 1133], "arg1": 255, "arg2": 255, "arg3": 255, "abcblah": 255, "blahabcbcabcc": 255, "lah": 255, "rstrip": [255, 259, 263, 270, 274, 275, 278, 288, 303, 320, 324, 330, 346, 364, 368, 388, 397], "lstrip": [255, 270, 274, 278, 303, 324, 330, 364, 368, 397], "wieviel": [255, 1245, 1252], "995237": 255, "datestr": 255, "dt": [255, 352, 887, 992], "strptime": [255, 256, 257, 263, 352], "uuid": 255, "msg_aussi": 255, "sea": [255, 270, 303, 393, 764], "oida": [255, 272, 275, 324, 535], "msgid": 255, "uuid4": 255, "345654325678": 255, "json_aussi": 255, "6563515ef0824d42b459389cefd09127": 255, "json_eini": 255, "sender": [255, 1060], "msg_eini": 255, "sauberestextfil": 256, "12345678": 256, "2270": [256, 265], "20333": 256, "360": [256, 265, 342, 352, 358, 364, 368], "91011121": 256, "30333": 256, "36756788": 256, "1112": [256, 265], "1244": [256, 265], "31333": 256, "45011121": 256, "44444": 256, "340": [256, 265, 272, 278, 310, 324, 352, 358, 364, 368], "sauber": 256, "read_sauberes_text_fil": 256, "item1": [256, 352], "item13": 256, "werk": 256, "lort": 256, "charg": [256, 548, 555, 568, 569, 570, 582, 583, 584], "sonderbestandsnumm": 256, "materialkurztext": 256, "lagerplatz": 256, "verfueg_bestand": 256, "bme": 256, "we_datum": 256, "verf\u00fcg": 256, "bestand": 256, "datum": [256, 1195], "api2": 257, "opc": [257, 266, 341], "rrdtool": 257, "rrd": 257, "subprocess": [257, 273, 278, 287, 289, 299, 323, 382, 397, 402, 1188], "commmon": [259, 465], "140576769461632": 259, "simplicit": 259, "inputfil": [259, 506], "450": [259, 265, 272, 307, 310, 358, 368], "paragraph": [259, 531], "highli": [259, 415, 601], "pathnam": [259, 265, 275, 278, 376, 379, 517, 523, 533, 840, 846, 1014, 1018, 1131], "displayhook": [259, 265, 275, 278, 390], "excepthook": [259, 265, 275, 278, 390], "uncaught": [259, 265, 275, 278, 620], "systemexit": [259, 265, 275, 278, 300, 303, 390, 1086], "behav": [259, 265, 268, 275, 278, 599, 620, 747, 802, 803, 835, 903, 930, 1050], "last_typ": [259, 265, 275, 278, 390], "last_valu": [259, 265, 275, 278, 390, 771, 774, 777, 778, 779], "last_traceback": [259, 265, 275, 278, 390], "builtin_module_nam": [259, 265, 275, 278, 390], "pertain": [259, 265, 275, 278], "exec_prefix": [259, 265, 275, 278, 390], "float_info": [259, 265, 275, 278, 390], "float_repr_styl": [259, 265, 275, 278, 390], "hash_info": [259, 265, 275, 278, 390], "hexvers": [259, 265, 275, 278, 390], "int_info": [259, 265, 275, 278, 390], "maxsiz": [259, 265, 275, 278, 390], "largest": [259, 265, 275, 278, 482], "maxunicod": [259, 265, 275, 278, 390], "thread_info": [259, 265, 275, 278, 390], "version_info": [259, 265, 275, 278, 390], "__stdin__": [259, 265, 275, 278, 390], "__stdout__": [259, 265, 275, 278, 390], "__stderr__": [259, 265, 275, 278, 390], "__displayhook__": [259, 265, 275, 278, 390], "__excepthook__": [259, 265, 275, 278, 390], "screen": [259, 265, 275, 278, 924, 930, 948], "exc_info": [259, 265, 275, 278, 390], "getdlopenflag": [259, 265, 275, 278, 390], "dlopen": [259, 265, 275, 278, 1255], "getprofil": [259, 265, 275, 278, 390], "profil": [259, 265, 275, 278, 358, 415, 493, 499, 502, 840, 887, 919, 1239, 1242], "getrefcount": [259, 265, 275, 278, 285, 390], "getrecursionlimit": [259, 265, 275, 278, 390], "getsizeof": [259, 265, 275, 278, 300, 303, 346, 368, 390], "gettrac": [259, 265, 275, 278, 390], "setdlopenflag": [259, 265, 275, 278, 390], "setprofil": [259, 265, 275, 278, 390], "setrecursionlimit": [259, 265, 275, 278, 390], "settrac": [259, 265, 275, 278, 390], "__breakpointhook__": [259, 265, 275, 278, 390], "breakpointhook": [259, 265, 275, 278, 390], "breakpoint": [259, 265, 275, 278, 303], "exctyp": [259, 265, 275, 278], "__unraisablehook__": [259, 265, 275, 278, 390], "unraisablehook": [259, 265, 275, 278, 390], "unrais": [259, 265, 275, 278], "exc_typ": [259, 265, 275, 278, 1084], "exc_valu": [259, 265, 275, 278, 1084], "exc_traceback": [259, 265, 275, 278, 1084], "err_msg": [259, 265, 275, 278], "addaudithook": [259, 265, 275, 278, 390], "audit": [259, 265, 275, 278, 358, 390], "call_trac": [259, 265, 275, 278, 390], "afterward": [259, 265, 275, 278, 444, 494, 651, 802, 803, 804, 817, 883, 1056, 1222], "older": [259, 265, 275, 278, 912, 1056], "get_asyncgen_hook": [259, 265, 275, 278, 390], "firstit": [259, 265, 275, 278], "get_coroutine_origin_tracking_depth": [259, 265, 275, 278, 390], "coroutin": [259, 265, 275, 278, 354, 773, 774, 776, 777, 778, 779, 783, 839, 840, 1188], "getallocatedblock": [259, 265, 275, 278, 390], "getdefaultencod": [259, 265, 275, 278, 324, 390], "getfilesystemencodeerror": [259, 265, 275, 278, 390], "getfilesystemencod": [259, 265, 275, 278, 390], "getswitchinterv": [259, 265, 275, 278, 390], "setswitchinterv": [259, 265, 275, 278, 390], "is_fin": [259, 265, 275, 278, 390], "set_asyncgen_hook": [259, 265, 275, 278, 390], "set_coroutine_origin_tracking_depth": [259, 265, 275, 278, 390], "cr_origin": [259, 265, 275, 278], "rtld_global": [259, 265, 275, 278], "rtld_xxx": [259, 265, 275, 278], "rtld_lazi": [259, 265, 275, 278], "frequenc": [259, 265, 275, 278, 282, 318, 319, 340, 344, 383, 408, 412, 840, 984, 985, 993, 1025, 1045, 1047], "uninterrupt": [259, 265, 275, 278, 879], "workload": [259, 265, 275, 278], "typic": [259, 265, 275, 278, 306, 316, 332, 344, 348, 465, 505, 535, 546, 570, 599, 726, 727, 858, 907, 933, 1063, 1109, 1119, 1241, 1243], "005": [259, 265, 275, 278], "abiflag": [259, 265, 275, 278, 390], "api_vers": [259, 265, 275, 278, 390], "1013": [259, 265, 275, 278], "ipyk": 259, "base_exec_prefix": [259, 265, 275, 278, 390], "base_prefix": [259, 265, 275, 278, 390], "_ast": [259, 265, 275, 278], "_codec": [259, 265, 275, 278], "_collect": [259, 265, 275, 278], "_f": [259, 265, 275, 278], "byteord": [259, 265, 275, 278, 300, 390, 986], "foundati": [259, 265, 275, 278], "emati": [259, 265, 275, 278], "ipykernel": [259, 265, 275, 278, 303], "zmqshelldisplayhook": [259, 265, 275, 278], "dont_write_bytecod": [259, 265, 275, 278, 390], "opt": [259, 265, 275, 278, 358, 471], "ation": [259, 265, 275, 278], "7976931348623157e": [259, 265, 275, 278], "308": [259, 265, 272, 275, 278, 320, 330, 342, 352, 358, 364], "max_": [259, 265, 275, 278], "epsilo": [259, 265, 275, 278], "2305843009213693": [259, 265, 275, 278], "iphash2": [259, 265, 275, 278], "50922736": 259, "cache_tag": [259, 265, 275, 278], "xv": [259, 265, 275, 278], "bits_per_digit": [259, 265, 275, 278], "sizeof_digit": [259, 265, 275, 278], "syntaxerror": [259, 275, 282, 303, 1086], "eol": [259, 282], "scan": [259, 282, 285, 352, 992, 994], "9223372036854775807": [259, 265, 275, 278, 838], "1114111": [259, 265, 275, 278], "meta_path": [259, 265, 275, 278, 390], "_frozen_importlib": [259, 265, 275, 278, 303], "builtinimport": [259, 265, 275, 278, 303], "_fro": [259, 265, 275, 278], "homepa": 259, "path_hook": [259, 265, 275, 278, 390], "zipimport": [259, 265, 275, 278], "filefind": [259, 265, 275, 278], "path_importer_cach": [259, 265, 275, 278, 390], "jfa": [259, 265, 275, 278], "platlibdir": [259, 265, 275, 278, 390], "ps1": [259, 265, 275, 278, 390, 1223], "ps2": [259, 265, 275, 278, 390], "ps3": [259, 265, 275, 278, 390], "pycache_prefix": [259, 265, 275, 278, 390], "outstream": [259, 265, 275, 278], "versio": [259, 265, 275, 278], "202103": 259, "releaselev": [259, 265, 275, 278], "warnopt": [259, 265, 275, 278, 390], "isdigit": [259, 270, 278, 282, 303, 310, 324, 330, 358, 368, 1133], "pp": [259, 310, 470, 677], "list_of_str": 259, "tensorflow": 260, "kesselfal": 260, "rettenbachklamm": 260, "hochtor": 260, "hochschwab": 260, "_a": [262, 278, 303], "_123": 262, "140575811317328": 262, "140575811316208": 262, "0xffffffff": [262, 263, 368, 443], "4294967296": [262, 270], "0x48": [262, 992], "330": [262, 265, 278, 303, 310, 324, 342, 352, 358, 364], "332": [262, 265, 278, 310, 324, 342, 358, 364], "333": [262, 265, 278, 310, 324, 352, 358, 364, 393], "334": [262, 265, 278, 310, 352, 358, 364], "dstr": 262, "777": [262, 265, 352], "aliv": [262, 463, 1038, 1082], "bcd": 262, "dusan": 262, "alex": [262, 276, 1104], "mist": [262, 310], "span": [262, 288, 291, 293, 300, 324, 358, 420, 439, 463, 862], "141592653589793": [262, 265], "roll": [262, 281, 302, 318, 319, 1122, 1238], "dice": [262, 281, 302, 318, 319, 1122], "win": [262, 278, 288, 352, 364, 979, 1046, 1122], "rnd": [262, 285], "convention": 262, "wise": [262, 306, 488, 652, 724, 756, 825, 838, 840, 855, 865, 885, 984, 1025, 1086], "resultset": [262, 265, 1200], "sbin": [262, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364, 520, 526, 919, 924, 926, 973, 979, 1010, 1020, 1065], "nologin": [262, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364, 520, 973, 979, 1010, 1020], "adm": [262, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364, 520, 974, 977, 979], "lp": [262, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364, 520, 979], "spool": [262, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364, 520, 979], "lpd": [262, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364, 520, 979], "65534": [262, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364], "apach": [262, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364], "httpd": [262, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364], "coredump": [262, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364, 979, 1059], "997": [262, 265, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364], "dumper": [262, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364, 979], "998": [262, 265, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364], "996": [262, 265, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364], "timesync": [262, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364, 979], "995": [262, 265, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364], "tss": [262, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364], "tpm": [262, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364], "polkitd": [262, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364, 926], "994": [262, 265, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364], "avahi": [262, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364, 926], "mdn": [262, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364], "unbound": [262, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364, 1118], "992": [262, 265, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364], "dnsmasq": [262, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364, 926], "991": [262, 265, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364], "dhcp": [262, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364], "nm": [262, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364, 500, 653, 887, 1075, 1081], "openconnect": [262, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364], "993": [262, 265, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364], "989": [262, 265, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364], "networkmanag": [262, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364, 500, 926], "usbmuxd": [262, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364], "gluster": [262, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364], "988": [262, 265, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364], "glusterf": [262, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364], "rtkit": [262, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364], "realtimekit": [262, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364], "pipewir": [262, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364], "987": [262, 265, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364], "geoclu": [262, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364], "990": [262, 265, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364], "chroni": [262, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364], "984": [262, 265, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364, 979], "saslauth": [262, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364], "saslauthd": [262, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364], "radvd": [262, 278, 285, 288], "rpc": [262, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364], "rpcbind": [262, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364], "openvpn": [262, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364], "982": [262, 265, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364, 979], "981": [262, 265, 278, 285, 288, 364], "spawn": [262, 278, 285, 288, 303, 310, 320, 324, 341, 346, 352, 358, 364], "colord": [262, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364], "985": [262, 265, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364, 979], "rpcuser": [262, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364], "abrt": [262, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364, 926, 979], "979": [262, 265, 278, 285, 288], "helper": [262, 278, 282, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364, 438, 652, 716, 765, 806, 881, 979, 1213, 1216], "983": [262, 265, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364, 979], "978": [262, 265, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 979], "vboxadd": [262, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364, 979], "tcpdump": [262, 278, 285, 288, 303, 310, 320, 324, 346, 352, 358, 364, 979], "974": [262, 265, 278, 285, 288], "broker": [262, 266, 278, 285, 288, 303, 310, 320, 324, 341, 346, 352, 358, 926, 1182], "mappingproxi": [262, 278, 291], "229": [262, 265, 270, 272, 278, 282, 285, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368], "231": [262, 265, 270, 272, 275, 278, 282, 285, 303, 310, 324, 330, 346, 352, 358, 364, 368, 568, 569, 570, 582, 583, 584], "232": [262, 265, 270, 272, 275, 278, 282, 285, 288, 303, 324, 330, 346, 352, 358, 364, 368], "233": [262, 265, 270, 272, 278, 282, 285, 288, 303, 310, 320, 324, 330, 346, 352, 358, 364, 368], "inputlist": [262, 1089], "ret": [262, 265, 270, 506, 765, 1052, 1089, 1134], "235": [262, 265, 270, 272, 275, 278, 282, 285, 288, 303, 310, 320, 324, 330, 342, 346, 358, 364, 368], "236": [262, 265, 270, 272, 275, 278, 282, 285, 288, 303, 324, 330, 342, 346, 352, 358, 364, 368, 491], "237": [262, 265, 270, 272, 278, 282, 285, 288, 303, 320, 324, 330, 346, 352, 358, 364, 368], "238": [262, 265, 270, 272, 275, 278, 282, 285, 288, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368], "239": [262, 265, 270, 272, 278, 282, 285, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368], "240": [262, 265, 270, 272, 275, 278, 282, 285, 288, 303, 320, 324, 330, 346, 352, 358, 364, 368], "242": [262, 265, 270, 272, 275, 278, 285, 288, 303, 320, 324, 330, 342, 346, 352, 358, 364, 368], "243": [262, 265, 270, 272, 278, 285, 288, 303, 320, 324, 330, 342, 352, 358, 364, 368], "244": [262, 265, 270, 272, 275, 278, 285, 288, 303, 324, 330, 342, 352, 358, 364, 368], "245": [262, 265, 270, 272, 285, 303, 320, 324, 330, 342, 352, 358, 364, 368], "247": [262, 265, 270, 272, 278, 282, 285, 303, 320, 324, 330, 346, 352, 358, 364, 368], "248": [262, 265, 270, 272, 275, 282, 285, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368], "249": [262, 265, 270, 272, 278, 282, 285, 288, 303, 310, 324, 330, 342, 346, 352, 358, 364, 368], "250": [262, 265, 270, 272, 278, 282, 285, 288, 303, 310, 314, 320, 324, 330, 352, 358, 364, 368, 977], "251": [262, 265, 270, 272, 275, 278, 282, 285, 303, 310, 320, 324, 330, 342, 346, 358, 364, 368], "252": [262, 265, 270, 272, 275, 282, 285, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 1201], "253": [262, 265, 270, 272, 275, 278, 285, 288, 303, 310, 324, 330, 346, 358, 364, 368], "256": [262, 265, 270, 272, 278, 285, 288, 303, 310, 320, 324, 330, 346, 352, 358, 364, 368, 429, 657, 1190, 1201], "257": [262, 265, 270, 272, 275, 278, 282, 285, 288, 303, 310, 320, 324, 330, 352, 358, 364, 368], "258": [262, 265, 270, 272, 275, 278, 282, 285, 303, 310, 320, 324, 330, 358, 364, 368], "0x7fda5444e6a0": 262, "259": [262, 265, 270, 272, 275, 278, 285, 303, 310, 320, 324, 330, 352, 358, 364, 368], "260": [262, 265, 270, 272, 275, 278, 285, 303, 310, 320, 324, 330, 342, 352, 358, 364, 368], "261": [262, 265, 270, 272, 278, 282, 288, 303, 310, 320, 324, 330, 358, 364, 368], "262": [262, 265, 270, 272, 278, 288, 303, 310, 320, 324, 330, 342, 352, 358, 364, 368], "263": [262, 265, 270, 272, 278, 282, 285, 288, 303, 310, 320, 324, 330, 342, 358, 364, 368], "264": [262, 265, 270, 272, 275, 278, 285, 288, 303, 310, 324, 330, 342, 352, 358, 364, 368], "265": [262, 265, 270, 272, 278, 285, 303, 310, 324, 330, 342, 352, 358, 364, 368], "266": [262, 265, 270, 272, 275, 278, 282, 288, 303, 324, 330, 358, 364, 368], "267": [262, 265, 270, 272, 275, 278, 285, 288, 303, 310, 324, 330, 342, 358, 364, 368], "268": [262, 265, 270, 272, 278, 285, 288, 303, 310, 324, 330, 352, 358, 364, 368], "269": [262, 265, 270, 272, 275, 278, 282, 285, 303, 310, 320, 324, 330, 358, 364, 368, 1064], "270": [262, 265, 270, 272, 278, 282, 285, 303, 310, 320, 324, 330, 342, 352, 358, 364, 368], "other_map": 262, "272": [262, 265, 270, 272, 275, 278, 282, 285, 303, 310, 320, 324, 330, 342, 358, 364, 368], "273": [262, 265, 270, 272, 278, 282, 303, 310, 324, 330, 352, 358, 364, 368, 507, 592, 610, 611, 612, 613, 615, 616, 826, 828, 830, 1099], "274": [262, 265, 270, 272, 275, 278, 282, 285, 303, 310, 320, 324, 330, 352, 358, 364, 368], "140575811316304": 262, "275": [262, 265, 270, 272, 278, 282, 285, 303, 310, 320, 324, 330, 342, 358, 364, 368], "276": [262, 265, 270, 272, 275, 285, 303, 310, 320, 324, 330, 342, 358, 364, 368], "277": [262, 265, 270, 272, 275, 278, 282, 285, 303, 320, 324, 330, 352, 358, 364], "278": [262, 265, 270, 272, 278, 285, 303, 310, 324, 330, 342, 352, 358, 364], "279": [262, 265, 270, 272, 275, 278, 282, 285, 303, 310, 324, 330, 342, 358, 364], "280": [262, 265, 270, 272, 275, 278, 282, 303, 310, 324, 330, 342, 358, 364, 1063, 1064], "140575692459008": 262, "282": [262, 265, 270, 272, 275, 278, 282, 285, 303, 310, 324, 330, 342, 358, 364], "283": [262, 265, 270, 272, 275, 278, 282, 285, 303, 324, 330, 358, 364], "284": [262, 265, 270, 272, 278, 282, 285, 303, 307, 330, 342, 352, 358, 364], "elementwis": 262, "285": [262, 265, 270, 272, 275, 278, 303, 310, 324, 330, 342, 358, 364], "286": [262, 265, 270, 272, 275, 278, 282, 303, 324, 330, 342, 358, 364], "287": [262, 265, 270, 272, 275, 278, 282, 285, 303, 310, 330, 342, 352, 358, 364], "140575692438848": 262, "288": [262, 265, 270, 272, 278, 282, 285, 303, 310, 324, 330, 342, 352, 358, 364], "140575692448960": 262, "289": [262, 265, 270, 272, 278, 303, 310, 324, 330, 342, 352, 358, 364], "290": [262, 265, 270, 272, 278, 303, 310, 324, 330, 358, 364], "292": [262, 265, 270, 278, 282, 303, 310, 320, 324, 358, 364], "293": [262, 265, 270, 272, 278, 303, 310, 320, 324, 330, 358, 364], "295": [262, 265, 270, 272, 278, 282, 303, 310, 320, 324, 358, 364], "296": [262, 265, 270, 272, 278, 303, 310, 320, 324, 330, 358, 364], "298": [262, 265, 270, 278, 282, 303, 310, 320, 324, 330, 352, 358, 364], "deep": [262, 274, 342, 760, 765, 1050], "301": [262, 265, 270, 275, 278, 282, 303, 310, 320, 324, 330, 342, 358, 364], "302": [262, 265, 270, 272, 278, 282, 303, 310, 324, 330, 342, 358, 364, 1145], "deepcopi": [262, 272, 285, 310, 330, 342, 1127], "303": [262, 265, 270, 272, 275, 278, 310, 324, 330, 342, 352, 358, 364, 1064], "304": [262, 265, 270, 272, 275, 278, 282, 342, 358, 364], "305": [262, 265, 275, 278, 303, 320, 324, 330, 342, 358, 364], "314": [262, 265, 272, 275, 278, 303, 310, 320, 324, 330, 352, 358, 364], "315": [262, 265, 278, 303, 324, 330, 352, 358, 364], "rdr": [262, 263, 346, 506, 549, 1196], "delimit": [262, 263, 278, 307, 308, 324, 346, 352, 364, 673, 726, 974, 1115, 1196], "fund_nam": [262, 263, 1145], "fund_isin": [262, 263, 1145], "fund_tick": [262, 263, 1145], "as_of_d": [262, 263, 1145], "fund_in_univers": [262, 263, 1145], "fund_of_fund": [262, 263, 1145], "fund_holdings_count": [262, 263, 1145], "fund_holding_funds_count": [262, 263, 1145], "american": [262, 268, 725, 740, 840, 1145, 1201], "fund": [262, 1145], "balanc": [262, 266, 473, 1145], "us0240711020": [262, 1145], "abalx": [262, 1145], "20210103": [262, 1145], "084": [262, 1145], "dodg": [262, 1145], "cox": [262, 1145], "us2562011047": [262, 1145], "dodbx": [262, 1145], "410": [262, 265, 310, 324, 358, 368, 1145], "us2562191062": [262, 1145], "dodgx": [262, 1145], "franklin": [262, 1145], "incom": [262, 278, 341, 1145, 1204], "us3534963000": [262, 1145], "fkinx": [262, 1145], "america": [262, 1145], "us3998741066": [262, 1145], "agthx": [262, 1145], "price": [262, 282, 499, 542, 1145], "us7414791092": [262, 1145], "prgfx": [262, 1145], "fidel": [262, 1145], "puritan": [262, 1145], "us3163451079": [262, 1145], "fpurx": [262, 1145], "contrafund": [262, 1145], "us3160711095": [262, 1145], "fcntx": [262, 1145], "363": [262, 265, 310, 324, 342, 352, 358, 364, 368, 1145], "us77954m1053": [262, 1145], "prwcx": [262, 1145], "westburi": [262, 1145], "us6804141090": [262, 1145], "owlsx": [262, 1145], "us1401931035": [262, 1145], "caibx": [262, 1145], "582": [262, 265, 358, 1145], "harbor": [262, 1145], "institut": [262, 263, 555, 570, 1145], "us4115115044": [262, 1145], "hacax": [262, 1145], "us77954q1067": [262, 1145], "trbcx": [262, 1145], "dreyfu": [262, 1145], "treasuri": [262, 1145], "cash": [262, 1145], "inst": [262, 1145], "us2619411083": [262, 1145], "dirxx": [262, 1145], "blackrock": [262, 1145], "us09251t5092": [262, 1145], "malox": [262, 1145], "us3163453059": [262, 1145], "flpsx": [262, 1145], "liquid": [262, 1145], "us09248u5517": [262, 1145], "tttxx": [262, 1145], "dfa": [262, 1145], "portfolio": [262, 282, 1145], "us2332038841": [262, 1145], "dfgbx": [262, 1145], "feder": [262, 1145], "herm": [262, 1145], "us60934n6821": [262, 1145], "utixx": [262, 1145], "oakmark": [262, 1145], "investor": [262, 282, 1145], "us4138382027": [262, 1145], "oakix": [262, 1145], "asset": [262, 1145], "us00767h4939": [262, 1145], "787": [262, 265, 1145], "fpa": [262, 1145], "crescent": [262, 1145], "us30254t7596": [262, 1145], "fpacx": [262, 1145], "us3534968058": [262, 1145], "fcisx": [262, 1145], "us5529836943": [262, 1145], "meiix": [262, 1145], "goldman": [262, 1145], "sach": [262, 1145, 1259], "instrument": [262, 497, 499, 992, 1145], "us38142b5003": [262, 1145], "ftixx": [262, 1145], "schwab": [262, 1145], "us8085098551": [262, 1145], "swppx": [262, 1145], "508": [262, 265, 310, 342, 358, 1145], "templeton": [262, 1145], "bond": [262, 1145], "advisor": [262, 1145], "us8802084009": [262, 1145], "tgbax": [262, 1145], "us32008f6060": [262, 1145], "sgiix": [262, 1145], "ishar": [262, 1145], "etf": [262, 1145], "us4642872000": [262, 1145], "ivv": [262, 1145], "507": [262, 265, 342, 1145], "vanguard": [262, 1145], "admir": [262, 1145], "us9229087104": [262, 1145], "vfiax": [262, 1145], "510": [262, 265, 342, 352, 358, 1145], "us9229087286": [262, 1145], "vtsax": [262, 1145], "370": [262, 265, 310, 324, 352, 358, 364, 368, 1145], "spdr": [262, 1145], "midcap": [262, 1145], "us78467y1073": [262, 1145], "mdy": [262, 1145], "dow": [262, 1145], "jone": [262, 398, 399, 1145], "industri": [262, 887, 1145], "us78467x1090": [262, 1145], "health": [262, 1145], "us81369y2090": [262, 1145], "xlv": [262, 1145], "discretionari": [262, 1145], "us81369y4070": [262, 1145], "xly": [262, 1145], "energi": [262, 372, 1145], "us81369y5069": [262, 1145], "xle": [262, 1145], "financi": [262, 1145], "us81369y6059": [262, 1145], "xlf": [262, 1145], "us81369y8030": [262, 1145], "xlk": [262, 1145], "invesco": [262, 1145], "qqq": [262, 1145], "us46090e1038": [262, 1145], "us2562061034": [262, 1145], "dodfx": [262, 1145], "msci": [262, 1145], "eaf": [262, 1145], "us4642874659": [262, 1145], "efa": [262, 1145], "897": [262, 265, 1145], "jpmorgan": [262, 1145], "sec": [262, 532, 1046, 1145, 1216], "mny": [262, 1145], "mkt": [262, 1145], "us4812a28358": [262, 1145], "jtsxx": [262, 1145], "eql": [262, 1145], "wght": [262, 1145], "us46137v3574": [262, 1145], "us4812a03757": [262, 1145], "cjtxx": [262, 1145], "us00143w8753": [262, 1145], "odvyx": [262, 1145], "dividend": [262, 1145], "us78464a7634": [262, 1145], "sdy": [262, 1145], "equiti": [262, 1145], "us2332033719": [262, 1145], "dfiex": [262, 1145], "888": [262, 265, 1145], "edgewood": [262, 1145], "us0075w07594": [262, 1145], "egfix": [262, 1145], "prudenti": [262, 1145], "us00767h7585": [262, 1145], "r6": [262, 1145], "us55273h3536": [262, 1145], "meikx": [262, 1145], "327": [262, 265, 278, 303, 310, 320, 352, 358, 364, 368], "328": [262, 265, 272, 278, 310, 358, 364, 368], "geschieht": [263, 415, 975], "wunder": 263, "groesser": 263, "jave": 263, "shorthand": [263, 430, 967, 1100], "lin": 263, "lout": 263, "faster": [263, 282, 341, 482, 494, 1050, 1056], "outputlist": 263, "getus": [263, 1166], "userdatabas": [263, 1166], "userid": [263, 275], "groupid": 263, "loginshel": [263, 364], "userrecord": 263, "dens": [263, 272, 282], "pratic": 263, "_fix_float_numb": 263, "fieldnam": [263, 1196], "_fix_bool": 263, "elif": [263, 270, 346, 428, 465, 506, 1106, 1121, 1122], "_fix_dat": 263, "read_stock": [263, 1145], "csvfile": [263, 1099], "converted_record": 263, "dbname": [263, 1199], "stmt": 263, "predefin": [263, 1020, 1055, 1060, 1234], "circuit": [264, 270, 280, 993, 1120, 1245, 1252], "windows_path": [265, 270], "festplatt": [265, 1255], "eue": [265, 342, 358, 392], "lehrer": 265, "50923504": 265, "202107": 265, "140106795875920": 265, "140106669190640": 265, "669": [265, 282], "140106669191024": 265, "0j": 265, "copied_l": [265, 272], "140106669249856": 265, "copied_t": 265, "tuple_containing_one_el": 265, "tran": 265, "satan": [265, 275], "queen": [265, 285, 1177, 1179, 1183, 1185, 1196], "10000000000": [265, 320, 392], "prod": 265, "resultset_to_local_db": 265, "my_local_db": 265, "basenam": 265, "normalized_path": 265, "normpath": [265, 272, 1094], "291": [265, 270, 278, 303, 320, 330, 342, 352, 358, 364, 498], "294": [265, 270, 278, 303, 320, 324, 330, 358, 364], "297": [265, 270, 272, 278, 282, 324, 352, 358, 364], "299": [265, 270, 275, 278, 282, 303, 310, 320, 324, 330, 352, 358, 364], "306": [265, 275, 282, 303, 320, 324, 330, 342, 352, 358, 364], "307": [265, 272, 278, 303, 320, 324, 330, 342, 352, 358, 364], "309": [265, 272, 275, 278, 310, 320, 324, 330, 342, 346, 358, 364, 368], "310": [265, 272, 275, 278, 324, 330, 342, 358, 364, 443], "311": [265, 272, 303, 324, 330, 352, 358, 364], "312": [265, 272, 278, 303, 310, 320, 330, 352, 358, 364], "313": [265, 272, 278, 310, 324, 330, 352, 358, 364], "316": [265, 272, 275, 278, 303, 324, 342, 352, 358, 364], "317": [265, 272, 275, 303, 310, 320, 324, 342, 352, 358, 364], "318": [265, 275, 278, 310, 324, 352, 358, 364], "319": [265, 272, 275, 278, 303, 320, 324, 342, 352, 358, 364], "321": [265, 275, 278, 310, 320, 324, 330, 342, 358, 364, 368], "322": [265, 275, 278, 310, 330, 342, 352, 358, 364], "323": [265, 272, 275, 278, 303, 324, 330, 342, 352, 358, 364], "324": [265, 275, 278, 303, 320, 324, 330, 342, 352, 358, 364, 601], "325": [265, 272, 278, 310, 320, 330, 352, 358, 364], "326": [265, 272, 278, 303, 320, 330, 342, 352, 358, 364], "329": [265, 278, 303, 310, 342, 358, 364, 368], "331": [265, 272, 278, 303, 324, 358, 364, 368], "335": [265, 272, 278, 310, 324, 352, 358, 364], "336": [265, 272, 278, 324, 352, 358, 364, 538], "337": [265, 278, 310, 324, 352, 358, 364, 368], "338": [265, 272, 310, 324, 352, 358, 364], "339": [265, 272, 278, 324, 352, 358, 364, 368], "341": [265, 272, 278, 310, 324, 342, 352, 358, 364, 368], "342": [265, 272, 278, 310, 330, 352, 358, 364], "343": [265, 278, 310, 324, 342, 358, 364, 368], "346": [265, 278, 324, 342, 352, 358, 364, 699, 700, 701, 702], "347": [265, 310, 324, 342, 352, 358, 364], "348": [265, 278, 342, 352, 358, 364], "349": [265, 278, 324, 342, 352, 358, 364, 493], "351": [265, 272, 278, 324, 352, 358, 364], "352": [265, 272, 278, 310, 324, 352, 358, 364], "353": [265, 272, 278, 310, 324, 352, 358, 364], "354": [265, 278, 324, 352, 358, 364, 547], "355": [265, 310, 324, 352, 358, 364, 368], "356": [265, 285, 324, 342, 358, 364, 368], "357": [265, 310, 324, 342, 352, 358, 364, 368], "359": [265, 324, 352, 358], "361": [265, 324, 342, 352, 358, 368], "362": [265, 310, 324, 342, 352, 358], "364": [265, 324, 358, 364, 368], "365": [265, 342, 358, 364], "366": [265, 310, 324, 358, 364, 368], "367": [265, 324, 342, 352, 358, 364, 368], "368": [265, 324, 352, 358, 364, 368], "371": [265, 310, 352, 358, 364, 368], "373": [265, 272, 310, 342, 352, 358, 368], "374": [265, 272, 324, 342, 358, 368], "376": [265, 310, 324, 342, 352, 358, 368], "377": [265, 272, 310, 324, 342, 352, 358], "379": [265, 310, 324, 342, 352, 358], "380": [265, 310, 324, 342, 358], "381": [265, 272, 310, 324, 358], "382": [265, 310, 324, 342, 358], "383": [265, 272, 310, 314, 342, 352, 358], "384": [265, 310, 324, 342, 352, 358, 368], "385": [265, 310, 324, 342, 358, 368], "386": [265, 310, 324, 342, 358, 368], "387": [265, 358, 368], "388": [265, 310, 324, 342, 358, 368], "389": [265, 342, 358, 368], "390": [265, 324, 342, 358, 368], "391": [265, 310, 342, 358], "392": [265, 310, 358, 368], "393": [265, 272, 310, 324, 342, 358, 368], "394": [265, 272, 310, 324, 342, 358, 368], "395": [265, 272, 310, 324, 342, 352, 358, 368], "396": [265, 272, 310, 358, 368, 933], "397": [265, 272, 324, 342, 358, 368], "398": [265, 272, 324, 358, 368], "399": [265, 272, 324, 342, 358, 368], "401": [265, 272, 310, 324, 358, 368], "402": [265, 310, 342, 358, 368], "403": [265, 272, 324, 342, 358, 368], "405": [265, 324, 358, 368], "406": [265, 272, 310, 324, 342, 358], "407": [265, 310, 324, 342, 358, 368], "408": [265, 272, 310, 324, 342, 358, 368], "409": [265, 272, 310, 324, 342, 352, 358, 368], "411": [265, 272, 310, 324, 352, 358], "412": [265, 324, 358], "413": [265, 272, 310, 324, 358], "414": [265, 272, 310, 324, 342, 358], "415": [265, 324, 342, 358], "416": [265, 272, 310, 342, 358], "417": [265, 272, 310, 324, 358], "418": [265, 272, 310, 342, 358, 368], "419": [265, 272, 310, 324, 342, 358], "420": [265, 272, 310, 324, 342, 358], "421": [265, 272, 310, 324, 342, 358], "422": [265, 272, 352, 358, 368], "423": [265, 310, 324, 342, 358, 368, 838], "424": [265, 272, 310, 324, 358, 368], "425": [265, 310, 358], "426": [265, 342], "427": [265, 272, 310, 342, 358, 368], "428": [265, 272, 310, 342, 358, 368], "429": [265, 310, 342, 358, 368], "430": [265, 272, 310, 342, 358, 368], "431": [265, 310, 342, 352, 358, 368, 838], "432": [265, 272, 310, 342, 368], "433": [265, 310, 342, 352, 368], "434": [265, 310, 358, 368], "435": [265, 368], "436": [265, 310, 342, 358, 368], "437": [265, 272, 310, 342, 352, 358, 368], "438": [265, 272, 342, 358, 368], "439": [265, 310, 358, 368], "440": [265, 272, 310, 358, 368], "441": [265, 272, 310, 358, 368], "442": [265, 272, 310, 352, 368], "443": [265, 272, 342, 358, 368], "444": [265, 272, 342, 358, 368], "445": [265, 272, 342, 352, 358, 368], "446": [265, 310, 368], "447": [265, 272, 310, 342, 352, 358, 368], "448": [265, 310, 358, 368], "449": [265, 272, 358], "451": [265, 272, 342, 358], "452": [265, 272, 310, 358, 368], "453": [265, 272, 342, 358, 368], "454": [265, 272, 310, 358, 368], "455": [265, 272, 358, 368], "457": 265, "458": [265, 310, 358, 368], "459": [265, 352], "460": [265, 310], "461": [265, 310, 368], "462": [265, 310, 368], "463": [265, 358], "464": [265, 310, 358, 368], "465": [265, 310, 314, 352, 358, 368], "466": [265, 310, 368], "467": [265, 310, 352, 358, 368], "468": [265, 310, 358, 368], "469": [265, 310, 358, 368, 803], "470": [265, 310, 358], "471": [265, 310, 352, 358, 368], "472": [265, 310, 358, 368], "473": [265, 358], "474": [265, 310, 358, 368], "475": [265, 310, 358, 368], "476": [265, 310, 352, 358, 368], "478": [265, 368], "479": [265, 310, 358, 368], "480": [265, 310, 358, 368], "481": [265, 310, 358], "482": [265, 310, 352, 368], "483": [265, 310, 352, 358, 368], "484": [265, 368], "485": [265, 368], "486": [265, 310, 358, 368], "487": [265, 310, 358, 368], "488": [265, 310, 358, 368], "489": 265, "490": [265, 358, 970], "491": [265, 358], "492": [265, 358, 368], "494": [265, 310, 358], "495": [265, 368], "496": [265, 368], "497": [265, 310, 358], "498": [265, 310, 358], "499": [265, 358, 368], "502": [265, 310, 358, 368], "503": [265, 358], "504": [265, 310], "505": [265, 278, 310, 358], "506": [265, 310, 358], "509": [265, 342, 368], "511": [265, 342, 352, 358], "514": [265, 358], "515": [265, 310, 358, 802], "516": [265, 310], "518": [265, 310, 358, 368], "519": [265, 358, 368], "520": [265, 310, 368], "521": [265, 310, 368, 823, 827], "522": 265, "523": 265, "524": [265, 310], "525": [265, 310, 358], "526": 265, "527": [265, 358], "528": 265, "529": [265, 352, 358], "530": 265, "531": [265, 310, 358, 368], "532": [265, 368, 838], "533": [265, 358, 368], "534": [265, 358, 368], "535": [265, 358, 368], "536": [265, 970], "538": [265, 358], "539": [265, 358], "540": [265, 352, 368], "541": [265, 358], "542": [265, 358], "543": [265, 368], "544": [265, 352, 358, 368], "545": [265, 352, 358], "546": [265, 358], "547": [265, 358, 368], "548": [265, 314, 358], "549": [265, 358], "550": [265, 358], "551": 265, "552": [265, 352, 358, 368], "553": [265, 352, 358, 368], "554": [265, 972], "555": [265, 368], "556": [265, 352], "557": [265, 358], "558": [265, 358], "559": [265, 358], "560": [265, 368], "561": [265, 358, 368], "562": [265, 358, 368], "563": [265, 358, 368], "564": [265, 358, 368], "565": [265, 358], "566": 265, "567": [265, 358, 368], "568": [265, 368], "569": [265, 358, 368], "570": 265, "571": 265, "572": 265, "573": 265, "574": [265, 358], "575": [265, 358], "576": 265, "577": [265, 358], "578": [265, 358], "579": [265, 358], "580": [265, 358], "581": [265, 358], "583": [265, 352], "584": 265, "585": [265, 358], "586": 265, "587": 265, "588": [265, 346, 358], "589": [265, 358], "590": [265, 358], "591": [265, 352], "592": 265, "593": [265, 358], "594": [265, 352], "595": [265, 358], "596": [265, 1077], "597": 265, "598": 265, "599": 265, "601": 265, "602": 265, "603": 265, "604": 265, "605": 265, "606": 265, "607": [265, 352], "608": 265, "609": [265, 352], "610": [265, 970], "611": 265, "612": [265, 933], "613": 265, "614": 265, "615": [265, 352], "616": 265, "617": 265, "618": 265, "619": 265, "620": 265, "621": 265, "622": 265, "623": 265, "624": 265, "625": [265, 282], "626": 265, "627": 265, "628": 265, "629": 265, "630": 265, "631": 265, "632": 265, "633": 265, "634": 265, "635": 265, "636": 265, "637": 265, "638": 265, "639": 265, "640": [265, 652], "641": 265, "642": 265, "643": 265, "644": [265, 1114], "645": 265, "646": 265, "647": 265, "648": 265, "649": 265, "650": [265, 352], "651": 265, "652": 265, "653": 265, "654": 265, "655": [265, 352], "656": 265, "657": [265, 352], "658": 265, "659": 265, "660": 265, "661": 265, "662": 265, "663": 265, "665": [265, 352], "668": [265, 352, 1118], "670": 265, "671": [265, 352], "672": 265, "673": 265, "674": 265, "675": 265, "676": 265, "677": 265, "678": 265, "679": 265, "680": [265, 352], "681": [265, 352], "683": 265, "684": 265, "685": 265, "687": 265, "688": 265, "689": 265, "690": 265, "691": 265, "692": 265, "693": 265, "694": 265, "695": [265, 352], "696": 265, "697": [265, 352], "698": [265, 970, 1010], "699": 265, "701": [265, 352], "702": 265, "703": [265, 318, 319, 340], "704": 265, "705": 265, "706": [265, 352], "707": 265, "708": [265, 278], "709": 265, "710": [265, 652], "711": 265, "712": 265, "713": 265, "715": [265, 727], "716": [265, 352], "717": 265, "718": 265, "719": 265, "720": 265, "721": 265, "722": 265, "723": 265, "724": 265, "725": 265, "726": 265, "727": [265, 352], "728": 265, "729": 265, "730": [265, 307], "731": 265, "732": 265, "733": 265, "734": 265, "735": 265, "736": 265, "737": 265, "738": 265, "739": 265, "740": 265, "741": 265, "742": 265, "743": 265, "744": 265, "745": 265, "746": [265, 352, 1064], "747": 265, "748": 265, "749": 265, "750": 265, "751": 265, "752": 265, "753": 265, "754": 265, "756": 265, "757": 265, "758": 265, "759": 265, "760": 265, "761": 265, "762": 265, "763": 265, "764": 265, "765": 265, "766": 265, "767": 265, "768": [265, 352], "769": 265, "770": [265, 352], "772": 265, "773": 265, "774": [265, 352], "775": 265, "776": 265, "778": 265, "779": 265, "780": 265, "781": [265, 352], "782": [265, 314], "783": 265, "784": [265, 1062], "785": 265, "786": 265, "788": [265, 352], "789": [265, 272], "790": 265, "791": [265, 802], "792": 265, "793": 265, "794": 265, "795": 265, "796": 265, "797": 265, "798": 265, "801": [265, 307], "802": 265, "803": 265, "804": [265, 352], "805": 265, "806": 265, "807": 265, "808": 265, "809": [265, 346], "810": 265, "811": [265, 352], "812": [265, 352], "813": [265, 352], "814": 265, "815": [265, 282], "816": [265, 288, 352], "817": 265, "818": 265, "819": 265, "820": 265, "822": 265, "823": 265, "824": 265, "826": 265, "827": [265, 352], "828": [265, 314, 352], "829": 265, "830": 265, "831": 265, "832": [265, 1062], "833": 265, "834": 265, "835": 265, "836": 265, "837": 265, "838": 265, "839": [265, 352], "840": 265, "841": 265, "842": 265, "843": 265, "844": [265, 352], "845": 265, "846": 265, "847": 265, "848": 265, "849": 265, "850": 265, "851": 265, "852": 265, "853": 265, "854": 265, "855": 265, "856": 265, "857": 265, "858": 265, "859": 265, "860": 265, "861": 265, "862": [265, 352], "863": 265, "864": 265, "865": 265, "866": 265, "867": 265, "868": 265, "870": 265, "871": 265, "872": 265, "873": 265, "874": [265, 549], "875": [265, 987], "876": 265, "877": [265, 352], "878": 265, "879": [265, 493], "880": 265, "881": [265, 352], "882": 265, "883": [265, 352], "884": 265, "885": 265, "886": 265, "887": [265, 352], "889": 265, "890": 265, "891": [265, 352], "892": 265, "893": 265, "894": 265, "895": 265, "896": 265, "898": [265, 352], "899": 265, "901": 265, "902": [265, 970], "903": 265, "904": 265, "905": 265, "906": 265, "907": 265, "908": 265, "909": [265, 352], "911": 265, "912": 265, "913": 265, "914": 265, "915": 265, "916": 265, "917": [265, 314], "918": [265, 352], "919": 265, "920": 265, "921": [265, 352], "922": [265, 352], "923": 265, "924": 265, "925": 265, "926": [265, 352], "927": 265, "928": 265, "929": [265, 352], "930": 265, "931": 265, "932": 265, "933": [265, 352], "934": 265, "935": [265, 352], "936": 265, "937": 265, "938": 265, "939": [265, 352], "940": [265, 352], "941": [265, 352], "942": 265, "943": 265, "944": 265, "945": 265, "946": [265, 352], "947": 265, "948": 265, "949": [265, 352], "950": 265, "951": [265, 346], "952": 265, "953": 265, "954": 265, "955": 265, "956": 265, "957": 265, "958": 265, "959": 265, "960": 265, "961": 265, "962": 265, "963": 265, "964": [265, 352], "965": 265, "966": 265, "967": [265, 352], "968": 265, "969": 265, "970": 265, "971": [265, 352], "972": 265, "973": 265, "975": 265, "976": [265, 303, 310, 320, 324, 346, 352, 358], "977": [265, 303, 310, 320, 324, 346, 352, 358, 979], "timeaxi": 265, "myrang": 265, "1002": [265, 699, 700, 701, 702, 933], "1004": 265, "1006": 265, "1008": 265, "1010": 265, "1012": 265, "1014": 265, "1016": 265, "1018": 265, "1020": [265, 914, 915, 923], "1022": 265, "1028": 265, "1030": 265, "1032": 265, "1034": 265, "1036": 265, "1038": 265, "1040": 265, "1042": [265, 1050], "1046": 265, "1048": 265, "1050": 265, "1052": 265, "1054": 265, "1056": 265, "1058": 265, "1060": 265, "1062": 265, "1064": 265, "1066": 265, "1068": [265, 314], "1070": [265, 314], "1072": [265, 314], "1074": 265, "1076": 265, "1078": 265, "1080": 265, "1082": 265, "1084": 265, "1086": 265, "1088": 265, "1090": 265, "1092": 265, "1094": 265, "1096": 265, "1098": 265, "1102": 265, "1104": 265, "1106": 265, "1108": 265, "1110": 265, "1114": 265, "1116": 265, "1118": 265, "1120": 265, "1122": 265, "1124": 265, "1126": 265, "1128": 265, "1130": 265, "1132": 265, "1134": 265, "1136": 265, "1138": 265, "1140": 265, "1142": 265, "1144": 265, "1146": 265, "1148": 265, "1150": [265, 1209, 1210], "1152": [265, 1209, 1210], "1154": 265, "1156": 265, "1158": 265, "1160": 265, "1162": 265, "1164": 265, "1166": 265, "1168": 265, "1170": 265, "1172": 265, "1174": 265, "1176": 265, "1178": 265, "1180": 265, "1182": 265, "1184": 265, "1186": 265, "1188": 265, "1190": 265, "1192": 265, "1194": 265, "1196": 265, "1198": 265, "1202": 265, "1204": 265, "1206": 265, "1208": 265, "1210": 265, "1212": 265, "1214": 265, "1216": 265, "1218": 265, "1220": 265, "1222": 265, "1224": 265, "1226": 265, "1228": 265, "1230": 265, "1232": 265, "1236": 265, "1238": 265, "1240": 265, "1242": 265, "1246": 265, "1248": 265, "1250": 265, "1252": 265, "1254": [265, 568, 569, 570, 582, 583, 584], "1256": 265, "1258": 265, "1260": [265, 538], "1262": 265, "1264": 265, "1266": 265, "1268": 265, "1270": 265, "1272": 265, "1274": 265, "1276": 265, "1278": 265, "1280": 265, "1282": 265, "1284": 265, "1286": 265, "1288": 265, "1290": 265, "1292": 265, "1294": 265, "1296": 265, "1298": 265, "1300": 265, "1302": 265, "1304": 265, "1306": 265, "1308": 265, "1310": 265, "1312": 265, "1314": 265, "1316": 265, "1318": 265, "1320": 265, "1322": 265, "1324": 265, "1326": 265, "1328": 265, "1330": 265, "1332": 265, "1334": 265, "1336": 265, "1338": 265, "1340": 265, "1342": [265, 1210], "1344": 265, "1346": 265, "1348": 265, "1350": 265, "1352": [265, 1020], "1354": 265, "1356": 265, "1358": 265, "1360": 265, "1362": 265, "1364": 265, "1366": 265, "1368": 265, "1370": 265, "1372": 265, "1374": 265, "1378": 265, "1380": 265, "1382": 265, "1384": 265, "1386": 265, "1388": 265, "1390": 265, "1392": [265, 549, 1210], "1394": 265, "1396": 265, "1398": 265, "1400": 265, "1402": 265, "1406": 265, "1408": 265, "1410": 265, "1412": 265, "1414": 265, "1416": [265, 1132], "1418": 265, "1420": 265, "1422": 265, "1424": 265, "1426": 265, "1428": 265, "1430": 265, "1432": 265, "1434": 265, "1436": 265, "1438": 265, "1440": 265, "1442": 265, "1444": 265, "1446": 265, "1448": 265, "1450": 265, "1452": 265, "1454": 265, "1456": 265, "1458": 265, "1460": 265, "1462": 265, "1464": 265, "1466": 265, "1468": 265, "1470": 265, "1472": 265, "1474": 265, "1476": 265, "1478": 265, "1480": 265, "1482": 265, "1484": 265, "1486": 265, "1488": 265, "1490": 265, "1492": 265, "1494": 265, "1496": 265, "1498": 265, "1502": 265, "1504": 265, "1506": 265, "1508": 265, "1510": 265, "1512": 265, "1514": 265, "1516": 265, "1518": 265, "1520": 265, "1522": 265, "1524": 265, "1526": 265, "1528": 265, "1530": 265, "1532": 265, "1534": 265, "1536": [265, 1062], "1538": 265, "1540": 265, "1542": 265, "1544": 265, "1546": 265, "1548": 265, "1550": 265, "1552": 265, "1554": 265, "1556": 265, "1558": [265, 931], "1560": 265, "1562": 265, "1564": 265, "1566": 265, "1568": 265, "1570": 265, "1572": 265, "1574": 265, "1576": 265, "1578": 265, "1580": 265, "1582": 265, "1584": 265, "1586": 265, "1588": 265, "1590": 265, "1592": 265, "1594": 265, "1596": 265, "1598": 265, "1600": 265, "1602": 265, "1604": [265, 1056], "1606": 265, "1608": 265, "1610": 265, "1612": 265, "1614": 265, "1616": 265, "1618": 265, "1620": 265, "1622": 265, "1624": 265, "1626": 265, "1628": 265, "1630": 265, "1632": 265, "1634": [265, 568, 569], "1636": 265, "1638": 265, "1640": 265, "1642": 265, "1644": 265, "1646": [265, 1209], "1648": 265, "1650": 265, "1652": 265, "1654": [265, 1065], "1656": 265, "1658": 265, "1660": [265, 1065], "1662": 265, "1664": 265, "1666": 265, "1668": 265, "1672": 265, "1674": 265, "1676": 265, "1678": 265, "1680": 265, "1682": 265, "1684": 265, "1686": 265, "1688": [265, 1063, 1064], "1690": 265, "1692": 265, "1694": 265, "1696": 265, "1698": 265, "1700": 265, "1702": 265, "1704": 265, "1706": [265, 1075], "1708": 265, "1710": 265, "1712": 265, "1714": [265, 1209], "1716": [265, 1209], "1718": 265, "1722": 265, "1724": 265, "1726": 265, "1728": 265, "1730": 265, "1732": 265, "1734": 265, "1736": 265, "1738": 265, "1740": 265, "1742": 265, "1744": 265, "1746": 265, "1748": 265, "1750": 265, "1752": 265, "1754": 265, "1756": 265, "1758": 265, "1760": 265, "1762": 265, "1764": [265, 324], "1766": 265, "1768": 265, "1770": 265, "1772": 265, "1774": 265, "1776": 265, "1778": 265, "1780": 265, "1782": 265, "1784": 265, "1786": 265, "1788": 265, "1790": 265, "1792": 265, "1794": 265, "1796": 265, "1798": 265, "1800": [265, 1062], "1802": 265, "1804": 265, "1806": 265, "1808": 265, "1810": 265, "1812": 265, "1814": 265, "1816": 265, "1818": 265, "1820": 265, "1822": 265, "1824": 265, "1826": 265, "1828": 265, "1830": 265, "1832": 265, "1834": 265, "1836": 265, "1838": 265, "1840": 265, "1842": 265, "1844": 265, "1846": 265, "1848": 265, "1850": 265, "1852": 265, "1854": 265, "1856": 265, "1858": 265, "1860": 265, "1862": 265, "1864": 265, "1866": 265, "1868": 265, "1870": 265, "1872": 265, "1874": 265, "1876": 265, "1878": 265, "1880": 265, "1882": 265, "1884": 265, "1886": 265, "1888": 265, "1890": 265, "1892": 265, "1894": 265, "1896": 265, "1898": 265, "1900": [265, 275, 1177, 1179, 1183, 1185], "1902": 265, "1904": 265, "1906": 265, "1908": 265, "1910": 265, "1912": 265, "1914": 265, "1916": 265, "1918": 265, "1920": 265, "1922": 265, "1924": 265, "1926": 265, "1928": 265, "1930": 265, "1932": 265, "1934": 265, "1938": 265, "1940": 265, "1942": 265, "1944": 265, "1946": 265, "1948": 265, "1950": 265, "1952": 265, "1954": [265, 1143], "1956": [265, 1112], "1958": 265, "1962": 265, "1964": 265, "1968": [265, 458], "1970": [265, 818], "1972": 265, "1974": 265, "1976": 265, "1978": [265, 418], "1980": [265, 643, 1062], "1984": 265, "1986": [265, 1177, 1179, 1183, 1185], "1988": [265, 418, 552], "1990": [265, 643], "1992": 265, "1994": 265, "2004": 265, "2026": 265, "2028": 265, "2030": 265, "2032": 265, "2034": 265, "2036": 265, "2038": 265, "2040": 265, "2042": 265, "2044": 265, "2046": 265, "2050": 265, "2052": 265, "2054": 265, "2056": 265, "2058": 265, "2060": 265, "2062": 265, "2064": 265, "2066": 265, "2068": 265, "2070": 265, "2072": 265, "2074": 265, "2076": 265, "2078": 265, "2080": 265, "2082": 265, "2084": 265, "2086": 265, "2088": 265, "2090": 265, "2092": 265, "2094": 265, "2096": 265, "2098": 265, "2100": 265, "2102": 265, "2104": 265, "2106": 265, "2108": 265, "2110": 265, "2112": 265, "2114": 265, "2116": 265, "2118": 265, "2120": 265, "2122": 265, "2124": 265, "2126": 265, "2128": 265, "2130": 265, "2132": 265, "2134": 265, "2136": 265, "2138": 265, "2140": 265, "2142": 265, "2144": 265, "2146": 265, "2148": 265, "2150": 265, "2152": 265, "2154": 265, "2156": 265, "2158": 265, "2160": 265, "2162": 265, "2164": 265, "2166": 265, "2168": 265, "2170": 265, "2172": 265, "2174": 265, "2176": 265, "2178": 265, "2180": 265, "2182": 265, "2184": 265, "2186": 265, "2188": 265, "2190": 265, "2192": 265, "2194": 265, "2196": [265, 838], "2198": 265, "2200": 265, "2202": 265, "2204": 265, "2206": 265, "2208": 265, "2210": 265, "2214": 265, "2216": 265, "2218": 265, "2220": 265, "2222": 265, "2224": 265, "2226": 265, "2228": 265, "2230": 265, "2232": 265, "2234": 265, "2236": 265, "2238": 265, "2240": 265, "2242": 265, "2244": 265, "2246": 265, "2248": 265, "2250": 265, "2252": 265, "2254": 265, "2256": 265, "2258": 265, "2260": 265, "2262": 265, "2264": 265, "2266": 265, "2268": 265, "2272": 265, "2274": 265, "2276": 265, "2278": 265, "2280": 265, "2282": 265, "2284": 265, "2286": 265, "2288": 265, "2290": 265, "2292": 265, "2294": 265, "2296": 265, "2298": 265, "2300": 265, "2302": 265, "2304": 265, "2306": 265, "2308": 265, "2310": 265, "2312": 265, "2314": 265, "2316": 265, "2318": 265, "2320": 265, "2322": 265, "2324": 265, "2326": 265, "2328": 265, "2330": 265, "2332": [265, 970], "2334": 265, "2336": 265, "2338": 265, "2340": 265, "2342": 265, "2344": 265, "2346": 265, "2348": 265, "2350": 265, "2352": 265, "2354": 265, "2356": 265, "2358": 265, "2360": 265, "2362": 265, "2364": [265, 1065], "2366": 265, "2368": 265, "2370": 265, "2372": 265, "2374": 265, "2376": 265, "2378": 265, "2380": 265, "2382": 265, "2384": 265, "2386": 265, "2388": 265, "2390": 265, "2392": 265, "2394": 265, "2396": 265, "2398": 265, "2400": 265, "2402": 265, "2404": 265, "2406": 265, "2408": 265, "2410": 265, "2412": 265, "2414": 265, "2416": 265, "2418": 265, "2420": 265, "2422": 265, "2424": 265, "2426": 265, "2428": 265, "2430": 265, "2432": 265, "2434": 265, "2436": 265, "2438": 265, "2440": [265, 346, 352, 358], "2442": 265, "2444": 265, "2446": 265, "2448": 265, "2450": 265, "2452": 265, "2454": 265, "2456": 265, "2458": 265, "2460": [265, 793], "2462": 265, "2464": 265, "2466": 265, "2468": 265, "2470": 265, "2472": 265, "2474": 265, "2476": 265, "2478": 265, "2480": 265, "2482": 265, "2484": 265, "2486": 265, "2488": 265, "2490": 265, "2492": 265, "2494": 265, "2496": 265, "2498": 265, "2500": 265, "2502": 265, "2504": 265, "2506": 265, "2508": 265, "2510": 265, "2512": 265, "2514": 265, "2516": 265, "2518": 265, "2520": 265, "2522": 265, "2524": 265, "2526": 265, "2528": 265, "2530": 265, "2532": 265, "2534": 265, "2536": 265, "2538": 265, "2540": 265, "2542": 265, "2544": 265, "2546": 265, "2548": 265, "2550": 265, "2552": 265, "2554": 265, "2556": 265, "2558": 265, "2560": 265, "2562": 265, "2564": 265, "2566": 265, "2568": 265, "2570": 265, "2572": 265, "2574": 265, "2576": 265, "2578": 265, "2580": 265, "2582": 265, "2584": 265, "2586": 265, "2588": 265, "2590": 265, "2592": 265, "2594": 265, "2596": 265, "2598": 265, "2600": 265, "2602": 265, "2604": 265, "2606": 265, "2608": 265, "2610": 265, "2612": 265, "2614": 265, "2616": 265, "2618": 265, "2620": 265, "2622": 265, "2624": 265, "2626": 265, "2628": 265, "2630": 265, "2632": 265, "2634": 265, "2636": 265, "2638": 265, "2640": [265, 324], "2642": 265, "2644": 265, "2646": 265, "2648": 265, "2650": 265, "2652": 265, "2654": 265, "2656": 265, "2658": 265, "2660": 265, "2662": 265, "2664": 265, "2666": 265, "2668": 265, "2670": 265, "2672": 265, "2674": 265, "2676": 265, "2678": 265, "2680": 265, "2682": 265, "2684": 265, "2686": 265, "2688": 265, "2690": 265, "2692": 265, "2694": 265, "2696": 265, "2698": 265, "2700": 265, "2702": 265, "2704": 265, "2706": [265, 270], "2708": 265, "2710": 265, "2712": 265, "2714": 265, "2716": 265, "2718": 265, "2720": 265, "2722": 265, "2724": 265, "2726": 265, "2728": 265, "2730": [265, 320], "2732": 265, "2734": 265, "2736": 265, "2738": 265, "2740": 265, "2742": 265, "2744": 265, "2746": [265, 970, 996, 1020], "2748": [265, 285, 303, 310, 342, 346, 352, 358], "2750": 265, "2752": 265, "2754": 265, "2756": 265, "2758": 265, "2760": 265, "2762": 265, "2764": 265, "2766": 265, "2768": 265, "2770": 265, "2772": 265, "2774": 265, "2776": 265, "2778": 265, "2780": 265, "2782": 265, "2784": 265, "2786": 265, "2788": 265, "2790": 265, "2792": 265, "2794": 265, "2796": 265, "2798": 265, "2800": [265, 308, 506], "2802": [265, 506], "2804": 265, "2806": 265, "2808": 265, "2810": 265, "2812": 265, "2814": 265, "2816": 265, "2818": 265, "2820": 265, "2822": 265, "2824": 265, "2826": 265, "2828": [265, 500], "2830": 265, "2832": 265, "2834": 265, "2836": 265, "2838": 265, "2840": 265, "2842": 265, "2844": 265, "2846": 265, "2848": 265, "2850": 265, "2852": 265, "2854": 265, "2856": 265, "2858": 265, "2860": 265, "2862": 265, "2864": 265, "2866": 265, "2868": 265, "2870": 265, "2872": 265, "2874": 265, "2876": 265, "2878": 265, "2880": 265, "2882": 265, "2884": 265, "2886": 265, "2888": 265, "2890": 265, "2892": 265, "2894": 265, "2896": 265, "2898": 265, "2900": 265, "2902": 265, "2904": 265, "2906": 265, "2910": 265, "2912": 265, "2914": 265, "2916": 265, "2918": 265, "2920": 265, "2922": 265, "2924": 265, "2926": 265, "2928": 265, "2930": 265, "2932": 265, "2934": 265, "2936": 265, "2938": 265, "2940": 265, "2942": 265, "2944": 265, "2946": 265, "2948": 265, "2950": 265, "2952": 265, "2954": 265, "2956": 265, "2958": 265, "2960": 265, "2962": 265, "2964": 265, "2966": 265, "2968": 265, "2970": 265, "2972": 265, "2974": 265, "2976": 265, "2978": 265, "2980": 265, "2982": 265, "2984": 265, "2986": 265, "2988": 265, "2990": 265, "2992": 265, "2994": 265, "2996": 265, "2998": 265, "3002": 265, "3004": 265, "3006": 265, "3008": 265, "3010": 265, "3012": 265, "3014": 265, "3016": 265, "3018": 265, "3020": 265, "3022": 265, "3024": 265, "3026": 265, "3028": 265, "3030": 265, "3032": 265, "3034": 265, "3036": 265, "3038": 265, "3040": 265, "3042": 265, "3044": 265, "3046": 265, "3048": 265, "3050": 265, "3052": 265, "3054": 265, "3056": 265, "3058": 265, "3060": 265, "3062": 265, "3064": 265, "3066": 265, "3068": 265, "3070": 265, "3072": 265, "3074": 265, "3076": 265, "3078": 265, "3080": 265, "3082": 265, "3084": 265, "3086": 265, "3088": 265, "3090": 265, "3092": 265, "3094": 265, "3096": 265, "3098": 265, "3100": 265, "3102": 265, "3104": 265, "3106": 265, "3108": 265, "3110": [265, 314], "3112": 265, "3114": 265, "3116": 265, "3118": 265, "3120": 265, "3122": 265, "3124": 265, "3126": 265, "3128": 265, "3130": 265, "3132": 265, "3134": 265, "3136": 265, "3138": 265, "3140": 265, "3142": 265, "3144": 265, "3146": 265, "3148": 265, "3150": 265, "3152": 265, "3154": 265, "3156": 265, "3158": 265, "3160": 265, "3162": 265, "3164": 265, "3166": 265, "3168": 265, "3170": 265, "3172": 265, "3174": 265, "3176": 265, "3178": 265, "3180": 265, "3182": 265, "3184": 265, "3186": 265, "3188": 265, "3190": 265, "3192": 265, "3194": 265, "3196": 265, "3198": 265, "3200": 265, "3202": 265, "3204": 265, "3206": 265, "3208": 265, "3210": 265, "3212": 265, "3214": 265, "3216": 265, "3218": 265, "3220": 265, "3222": 265, "3224": 265, "3226": 265, "3228": 265, "3230": 265, "3232": 265, "3234": 265, "3236": 265, "3238": 265, "3240": 265, "3242": 265, "3244": 265, "3246": 265, "3248": 265, "3250": 265, "3252": 265, "3254": 265, "3256": 265, "3258": 265, "3260": 265, "3262": 265, "3264": 265, "3266": 265, "3268": 265, "3270": 265, "3272": 265, "3274": 265, "3276": 265, "3278": 265, "3280": 265, "3282": 265, "3284": 265, "3286": 265, "3288": 265, "3290": 265, "3292": 265, "3294": 265, "3296": 265, "3298": 265, "3300": 265, "3302": 265, "3304": 265, "3306": 265, "3308": 265, "3310": 265, "3312": 265, "3314": 265, "3316": 265, "3318": 265, "3320": 265, "3322": 265, "3324": 265, "3326": 265, "3328": 265, "3330": 265, "3332": 265, "3334": 265, "3336": 265, "3338": 265, "3340": 265, "3342": 265, "3344": 265, "3346": 265, "3348": 265, "3350": 265, "3352": 265, "3354": 265, "3356": 265, "3358": 265, "3360": 265, "3362": 265, "3364": 265, "3366": 265, "3368": 265, "3370": 265, "3372": 265, "3374": 265, "3376": 265, "3378": 265, "3380": 265, "3382": 265, "3384": 265, "3386": 265, "3388": 265, "3390": 265, "3392": 265, "3394": 265, "3396": 265, "3398": 265, "3400": 265, "3402": 265, "3404": 265, "3406": 265, "3408": 265, "3410": 265, "3412": 265, "3414": 265, "3416": 265, "3418": 265, "3420": 265, "3422": 265, "3424": 265, "3426": 265, "3428": 265, "3430": 265, "3432": 265, "3434": 265, "3436": 265, "3438": 265, "3440": 265, "3442": 265, "3444": 265, "3446": 265, "3448": 265, "3450": 265, "3452": 265, "3454": 265, "3456": 265, "3458": 265, "3460": 265, "3462": 265, "3464": 265, "3466": 265, "3468": 265, "3470": 265, "3472": 265, "3474": 265, "3476": 265, "3478": 265, "3480": 265, "3482": 265, "3484": 265, "3486": 265, "3488": 265, "3490": 265, "3492": 265, "3494": 265, "3496": 265, "3498": 265, "3500": 265, "3502": 265, "3504": 265, "3506": 265, "3508": 265, "3510": 265, "3512": 265, "3514": 265, "3516": 265, "3518": 265, "3520": 265, "3522": 265, "3524": 265, "3526": 265, "3528": 265, "3530": 265, "3532": 265, "3534": 265, "3536": 265, "3538": 265, "3540": 265, "3542": 265, "3544": 265, "3546": 265, "3548": 265, "3550": 265, "3552": 265, "3554": 265, "3556": 265, "3558": 265, "3560": 265, "3562": 265, "3564": 265, "3566": 265, "3568": 265, "3570": 265, "3572": 265, "3574": 265, "3576": 265, "3578": 265, "3580": 265, "3582": 265, "3584": 265, "3586": 265, "3588": 265, "3590": 265, "3592": 265, "3594": 265, "3596": 265, "3598": 265, "3602": 265, "3604": 265, "3606": 265, "3608": 265, "3610": 265, "3612": 265, "3614": 265, "3616": 265, "3618": 265, "3620": 265, "3622": 265, "3624": 265, "3626": 265, "3628": 265, "3630": 265, "3632": 265, "3634": 265, "3636": 265, "3638": 265, "3640": 265, "3642": 265, "3644": 265, "3646": 265, "3648": 265, "3650": 265, "3652": 265, "3654": 265, "3656": 265, "3658": 265, "3660": 265, "3662": 265, "3664": 265, "3666": 265, "3668": 265, "3670": 265, "3672": 265, "3674": 265, "3676": 265, "3678": 265, "3680": 265, "3682": 265, "3684": 265, "3686": 265, "3688": 265, "3690": 265, "3692": 265, "3694": 265, "3696": 265, "3698": 265, "3700": 265, "3702": 265, "3704": 265, "3706": 265, "3708": 265, "3710": 265, "3712": 265, "3714": 265, "3716": 265, "3718": 265, "3720": 265, "3722": [265, 1017], "3724": 265, "3726": 265, "3728": 265, "3730": 265, "3732": 265, "3734": 265, "3736": 265, "3738": 265, "3740": 265, "3742": 265, "3744": 265, "3746": 265, "3748": 265, "3750": 265, "3752": 265, "3754": 265, "3756": 265, "3758": 265, "3760": 265, "3762": 265, "3764": 265, "3766": 265, "3768": 265, "3770": [265, 314], "3772": 265, "3774": 265, "3776": 265, "3778": 265, "3780": 265, "3782": 265, "3784": 265, "3786": 265, "3788": 265, "3790": [265, 1210], "3792": [265, 1210], "3794": [265, 1210], "3796": [265, 1210], "3798": [265, 1210], "3800": [265, 1210], "3802": [265, 1210], "3804": 265, "3806": 265, "3808": 265, "3810": 265, "3812": 265, "3814": 265, "3816": 265, "3818": 265, "3820": 265, "3822": 265, "3824": 265, "3826": 265, "3828": 265, "3830": 265, "3832": 265, "3834": 265, "3836": 265, "3838": 265, "3840": 265, "3842": 265, "3844": 265, "3846": 265, "3848": 265, "3850": 265, "3852": 265, "3854": 265, "3856": 265, "3858": 265, "3860": 265, "3862": 265, "3864": 265, "3866": 265, "3868": 265, "3870": 265, "3872": 265, "3874": 265, "3876": 265, "3878": 265, "3880": 265, "3882": 265, "3884": 265, "3886": 265, "3888": 265, "3890": 265, "3892": 265, "3894": 265, "3896": 265, "3898": 265, "3900": 265, "3902": 265, "3904": 265, "3906": 265, "3908": 265, "3910": 265, "3912": 265, "3914": 265, "3916": 265, "3918": 265, "3920": 265, "3922": 265, "3924": 265, "3926": 265, "3928": 265, "3930": 265, "3932": 265, "3934": 265, "3936": 265, "3938": 265, "3940": 265, "3942": 265, "3946": 265, "3948": 265, "3950": 265, "3952": 265, "3954": 265, "3956": 265, "3958": 265, "3960": 265, "3962": 265, "3964": 265, "3966": 265, "3968": 265, "3970": 265, "3972": 265, "3974": 265, "3976": 265, "3978": 265, "3980": 265, "3982": 265, "3984": 265, "3986": 265, "3988": 265, "3990": 265, "3992": 265, "3994": 265, "3996": 265, "3998": 265, "4002": 265, "4004": 265, "4006": 265, "4008": 265, "4010": 265, "4012": 265, "4014": 265, "4016": 265, "4018": 265, "4020": 265, "4022": 265, "4024": 265, "4026": 265, "4028": 265, "4030": 265, "4032": 265, "4034": 265, "4036": 265, "4038": 265, "4040": 265, "4042": 265, "4044": 265, "4046": 265, "4048": 265, "4050": 265, "4052": 265, "4054": 265, "4056": 265, "4058": 265, "4060": 265, "4062": 265, "4064": 265, "4066": 265, "4068": 265, "4070": 265, "4072": 265, "4074": 265, "4076": 265, "4078": 265, "4080": 265, "4082": 265, "4084": 265, "4086": 265, "4088": 265, "4090": 265, "4092": 265, "4094": 265, "4098": 265, "4100": 265, "4102": 265, "4104": 265, "4106": 265, "4108": 265, "4110": 265, "4112": 265, "4114": 265, "4116": 265, "4118": 265, "4120": 265, "4122": 265, "4124": 265, "4126": 265, "4128": 265, "4130": 265, "4132": 265, "4134": 265, "4136": 265, "4138": 265, "4140": 265, "4142": 265, "4144": 265, "4146": 265, "4148": 265, "4150": 265, "4152": 265, "4154": 265, "4156": 265, "4158": 265, "4160": 265, "4162": 265, "4164": 265, "4166": 265, "4168": 265, "4170": 265, "4172": 265, "4174": 265, "4176": 265, "4178": 265, "4180": 265, "4182": 265, "4184": 265, "4186": 265, "4188": 265, "4190": 265, "4192": 265, "4194": 265, "4196": 265, "4198": 265, "4200": 265, "4202": 265, "4204": 265, "4206": 265, "4208": 265, "4210": 265, "4212": 265, "4214": 265, "4216": 265, "4218": 265, "4220": 265, "4222": 265, "4224": 265, "4226": 265, "4228": 265, "4230": 265, "4232": 265, "4234": [265, 1210], "4236": [265, 1210], "4238": [265, 1210], "4240": 265, "4242": 265, "4244": 265, "4246": 265, "4248": 265, "4250": 265, "4252": 265, "4254": 265, "4256": 265, "4258": 265, "4260": 265, "4262": 265, "4264": 265, "4266": 265, "4268": 265, "4270": 265, "4272": 265, "4274": 265, "4276": 265, "4278": 265, "4280": 265, "4282": 265, "4284": 265, "4286": 265, "4288": 265, "4290": 265, "4292": 265, "4294": 265, "4296": 265, "4298": 265, "4300": 265, "4302": 265, "4304": 265, "4306": 265, "4308": 265, "4310": 265, "4312": 265, "4314": 265, "4316": 265, "4318": 265, "4320": 265, "4322": 265, "4324": 265, "4326": 265, "4328": 265, "4330": 265, "4332": 265, "4334": 265, "4336": 265, "4338": 265, "4340": 265, "4342": 265, "4344": 265, "4346": 265, "4348": 265, "4350": 265, "4352": 265, "4354": 265, "4356": 265, "4358": 265, "4360": 265, "4362": 265, "4364": 265, "4366": 265, "4368": 265, "4370": 265, "4372": 265, "4374": 265, "4376": 265, "4378": 265, "4380": 265, "4382": 265, "4384": 265, "4386": 265, "4388": 265, "4390": 265, "4392": 265, "4394": 265, "4396": 265, "4398": 265, "4400": 265, "4402": 265, "4404": 265, "4406": 265, "4408": 265, "4410": 265, "4412": 265, "4414": 265, "4416": 265, "4418": 265, "4420": 265, "4422": 265, "4424": 265, "4426": 265, "4428": 265, "4430": 265, "4432": 265, "4434": 265, "4436": 265, "4438": 265, "4440": 265, "4442": 265, "4444": 265, "4446": 265, "4448": 265, "4450": 265, "4452": 265, "4454": 265, "4456": 265, "4458": 265, "4460": 265, "4462": 265, "4464": 265, "4466": 265, "4468": 265, "4470": 265, "4472": 265, "4474": 265, "4476": 265, "4478": 265, "4480": 265, "4482": 265, "4484": 265, "4486": 265, "4488": 265, "4490": 265, "4492": 265, "4494": 265, "4496": 265, "4498": 265, "4502": 265, "4504": 265, "4506": 265, "4508": 265, "4510": 265, "4512": 265, "4514": 265, "4516": 265, "4518": 265, "4520": 265, "4522": 265, "4524": 265, "4526": 265, "4528": 265, "4530": 265, "4532": 265, "4534": 265, "4536": 265, "4538": 265, "4540": 265, "4542": 265, "4544": 265, "4546": 265, "4548": 265, "4550": 265, "4552": 265, "4554": 265, "4556": 265, "4558": 265, "4560": 265, "4562": 265, "4564": 265, "4566": 265, "4568": 265, "4570": 265, "4572": 265, "4574": 265, "4578": 265, "4580": 265, "4582": 265, "4584": 265, "4586": 265, "4588": 265, "4590": 265, "4592": 265, "4594": 265, "4596": 265, "4598": 265, "4600": 265, "4602": 265, "4604": 265, "4606": 265, "4608": 265, "4610": 265, "4612": 265, "4614": 265, "4616": 265, "4618": 265, "4620": 265, "4622": 265, "4624": 265, "4626": 265, "4628": [265, 278], "4630": [265, 500], "4632": 265, "4634": 265, "4636": 265, "4638": 265, "4640": 265, "4642": 265, "4644": 265, "4646": 265, "4648": 265, "4650": 265, "4652": 265, "4654": 265, "4656": 265, "4658": 265, "4662": 265, "4664": 265, "4666": 265, "4668": 265, "4670": 265, "4672": 265, "4674": 265, "4676": 265, "4680": 265, "4682": 265, "4684": 265, "4686": 265, "4688": 265, "4690": 265, "4692": 265, "4694": 265, "4696": 265, "4698": 265, "4700": 265, "4702": 265, "4704": 265, "4706": 265, "4708": 265, "4710": 265, "4712": 265, "4714": 265, "4716": 265, "4718": 265, "4720": 265, "4722": 265, "4724": 265, "4726": 265, "4728": 265, "4730": 265, "4732": 265, "4734": 265, "4736": 265, "4738": 265, "4740": 265, "4742": 265, "4744": 265, "4746": 265, "4748": 265, "4750": 265, "4752": 265, "4754": 265, "4756": 265, "4758": 265, "4760": 265, "4762": 265, "4764": 265, "4766": 265, "4768": 265, "4770": 265, "4772": 265, "4774": 265, "4776": 265, "4778": 265, "4780": 265, "4782": 265, "4784": 265, "4786": 265, "4788": 265, "4790": 265, "4792": 265, "4794": 265, "4796": 265, "4798": 265, "4802": 265, "4804": 265, "4806": 265, "4808": 265, "4810": 265, "4812": 265, "4814": 265, "4816": 265, "4818": 265, "4820": 265, "4822": 265, "4824": 265, "4826": 265, "4828": 265, "4830": 265, "4832": 265, "4834": 265, "4836": 265, "4838": 265, "4840": 265, "4842": 265, "4844": 265, "4846": 265, "4848": 265, "4850": 265, "4852": 265, "4854": 265, "4856": 265, "4858": 265, "4860": 265, "4862": 265, "4864": 265, "4866": [265, 275], "4868": 265, "4870": 265, "4872": 265, "4874": 265, "4876": 265, "4878": 265, "4880": 265, "4882": [265, 933], "4884": 265, "4886": 265, "4888": 265, "4890": 265, "4892": 265, "4894": 265, "4896": 265, "4898": 265, "4900": 265, "4902": 265, "4904": 265, "4906": 265, "4908": 265, "4910": 265, "4912": 265, "4914": 265, "4916": 265, "4918": 265, "4920": 265, "4922": 265, "4924": 265, "4926": [265, 278], "4928": 265, "4930": 265, "4932": 265, "4934": 265, "4936": 265, "4938": 265, "4940": 265, "4942": 265, "4944": 265, "4946": 265, "4948": 265, "4950": [265, 282], "4952": 265, "4954": 265, "4956": 265, "4958": 265, "4960": 265, "4962": 265, "4964": 265, "4966": 265, "4968": 265, "4970": 265, "4972": 265, "4974": 265, "4976": 265, "4978": 265, "4980": 265, "4982": 265, "4984": 265, "4986": 265, "4988": 265, "4990": 265, "4992": 265, "4994": 265, "4996": 265, "4998": 265, "5002": 265, "5004": 265, "5006": 265, "5008": 265, "5010": 265, "5012": 265, "5014": 265, "5016": 265, "5018": 265, "5020": 265, "5022": 265, "5024": 265, "5026": 265, "5028": 265, "5030": 265, "5032": 265, "5034": 265, "5036": 265, "5038": 265, "5040": 265, "5042": 265, "5044": 265, "5046": 265, "5048": 265, "5052": 265, "5054": 265, "5056": 265, "5058": 265, "5060": 265, "5062": 265, "5064": 265, "5066": 265, "5068": 265, "5070": 265, "5072": 265, "5074": 265, "5076": 265, "5078": 265, "5080": [265, 970], "5082": 265, "5084": 265, "5086": 265, "5088": 265, "5090": 265, "5092": 265, "5094": 265, "5096": 265, "5098": 265, "5100": 265, "5102": 265, "5104": 265, "5106": 265, "5108": 265, "5110": 265, "5112": 265, "5114": 265, "5116": 265, "5118": 265, "5120": 265, "5122": 265, "5124": 265, "5126": 265, "5128": 265, "5130": 265, "5132": 265, "5134": 265, "5136": 265, "5138": 265, "5140": 265, "5142": 265, "5144": 265, "5146": 265, "5148": 265, "5150": 265, "5152": 265, "5154": 265, "5156": 265, "5158": 265, "5160": 265, "5162": 265, "5164": 265, "5166": 265, "5168": 265, "5170": 265, "5172": 265, "5174": 265, "5176": 265, "5178": 265, "5180": 265, "5182": 265, "5184": 265, "5186": 265, "5188": 265, "5190": 265, "5192": 265, "5194": 265, "5196": 265, "5198": 265, "5200": 265, "5202": 265, "5204": 265, "5206": 265, "5208": 265, "5210": 265, "5212": 265, "5214": 265, "5216": 265, "5218": 265, "5220": 265, "5222": 265, "5224": 265, "5226": 265, "5228": 265, "5230": 265, "5232": 265, "5234": 265, "5236": 265, "5238": 265, "5240": 265, "5242": 265, "5244": 265, "5246": 265, "5248": 265, "5250": 265, "5252": 265, "5254": 265, "5256": 265, "5258": 265, "5260": 265, "5262": 265, "5264": 265, "5266": 265, "5268": 265, "5270": 265, "5272": 265, "5274": 265, "5276": 265, "5278": 265, "5280": 265, "5282": 265, "5284": 265, "5286": 265, "5288": 265, "5290": 265, "5292": 265, "5294": 265, "5296": 265, "5298": 265, "5300": 265, "5302": 265, "5304": 265, "5306": 265, "5308": 265, "5310": 265, "5312": 265, "5314": 265, "5316": 265, "5318": 265, "5320": 265, "5322": 265, "5324": 265, "5326": 265, "5328": 265, "5330": 265, "5332": 265, "5334": 265, "5336": 265, "5338": 265, "5340": 265, "5342": 265, "5344": 265, "5346": 265, "5348": 265, "5350": 265, "5352": 265, "5354": 265, "5356": 265, "5358": 265, "5360": 265, "5362": [265, 308, 506], "5364": 265, "5366": 265, "5368": 265, "5370": 265, "5372": 265, "5374": 265, "5376": 265, "5378": 265, "5380": 265, "5382": 265, "5384": 265, "5386": 265, "5388": 265, "5390": 265, "5392": 265, "5394": 265, "5396": 265, "5398": 265, "5400": 265, "5402": 265, "5404": 265, "5406": 265, "5408": 265, "5410": [265, 500], "5412": 265, "5414": 265, "5416": 265, "5418": 265, "5420": 265, "5422": 265, "5424": 265, "5426": 265, "5428": 265, "5430": 265, "5432": 265, "5434": 265, "5436": 265, "5438": 265, "5440": 265, "5442": 265, "5444": 265, "5446": 265, "5448": 265, "5450": 265, "5452": 265, "5454": 265, "5456": 265, "5458": 265, "5460": 265, "5462": 265, "5464": 265, "5466": 265, "5468": 265, "5470": 265, "5472": 265, "5474": 265, "5476": 265, "5478": 265, "5480": 265, "5482": 265, "5484": 265, "5486": 265, "5488": 265, "5490": 265, "5492": 265, "5494": 265, "5496": 265, "5498": 265, "5500": 265, "5502": 265, "5504": 265, "5506": 265, "5508": 265, "5510": 265, "5512": 265, "5514": 265, "5516": 265, "5518": 265, "5520": 265, "5522": 265, "5524": 265, "5526": 265, "5528": 265, "5530": 265, "5532": 265, "5534": 265, "5536": 265, "5538": 265, "5540": 265, "5542": 265, "5544": 265, "5546": 265, "5548": 265, "5550": 265, "5552": 265, "5554": 265, "5556": 265, "5558": 265, "5560": 265, "5562": 265, "5564": 265, "5566": 265, "5568": 265, "5570": 265, "5572": 265, "5574": 265, "5576": 265, "5578": 265, "5580": 265, "5582": 265, "5584": 265, "5586": 265, "5588": 265, "5590": 265, "5592": 265, "5594": 265, "5596": 265, "5598": 265, "5600": 265, "5602": 265, "5604": 265, "5606": 265, "5608": 265, "5610": 265, "5612": 265, "5614": 265, "5616": 265, "5618": 265, "5620": 265, "5622": 265, "5624": 265, "5626": 265, "5628": 265, "5630": 265, "5632": 265, "5634": 265, "5636": 265, "5638": 265, "5640": 265, "5642": 265, "5644": 265, "5646": 265, "5648": 265, "5650": 265, "5652": 265, "5654": 265, "5656": 265, "5658": 265, "5660": 265, "5662": 265, "5664": 265, "5666": 265, "5668": 265, "5670": 265, "5672": 265, "5674": 265, "5676": 265, "5678": [265, 1003], "5680": 265, "5682": 265, "5684": 265, "5686": 265, "5688": 265, "5690": 265, "5692": 265, "5694": 265, "5696": 265, "5698": 265, "5700": 265, "5702": 265, "5704": 265, "5706": 265, "5708": 265, "5710": 265, "5712": 265, "5714": 265, "5716": 265, "5718": 265, "5720": 265, "5722": 265, "5724": 265, "5726": 265, "5728": 265, "5730": 265, "5732": 265, "5734": 265, "5736": 265, "5738": 265, "5740": 265, "5742": 265, "5744": 265, "5746": 265, "5748": 265, "5750": 265, "5752": 265, "5754": 265, "5756": 265, "5758": 265, "5760": 265, "5762": 265, "5764": 265, "5766": 265, "5768": 265, "5770": 265, "5772": 265, "5774": 265, "5776": 265, "5778": 265, "5780": 265, "5782": 265, "5784": 265, "5786": 265, "5788": 265, "5790": 265, "5792": 265, "5794": 265, "5796": 265, "5798": 265, "5800": 265, "5802": 265, "5804": 265, "5806": 265, "5808": 265, "5810": 265, "5812": 265, "5814": 265, "5816": 265, "5818": 265, "5820": 265, "5822": 265, "5824": 265, "5826": 265, "5828": 265, "5830": 265, "5832": [265, 275], "5834": 265, "5836": 265, "5838": 265, "5840": 265, "5842": 265, "5844": 265, "5846": 265, "5848": 265, "5850": 265, "5852": 265, "5854": 265, "5856": 265, "5858": 265, "5860": 265, "5862": 265, "5864": 265, "5866": 265, "5868": 265, "5870": 265, "5872": 265, "5874": 265, "5876": 265, "5878": 265, "5880": 265, "5882": 265, "5884": 265, "5886": 265, "5888": 265, "5890": 265, "5892": 265, "5894": 265, "5896": 265, "5898": 265, "5900": 265, "5902": 265, "5904": 265, "5906": 265, "5908": 265, "5910": 265, "5912": 265, "5914": 265, "5916": 265, "5918": 265, "5920": 265, "5922": 265, "5924": 265, "5926": 265, "5928": 265, "5930": 265, "5932": 265, "5934": 265, "5936": 265, "5938": 265, "5940": 265, "5942": 265, "5944": 265, "5946": 265, "5948": 265, "5950": 265, "5952": 265, "5954": 265, "5956": 265, "5958": 265, "5960": 265, "5962": 265, "5964": 265, "5966": 265, "5968": 265, "5970": 265, "5972": 265, "5974": 265, "5976": 265, "5978": 265, "5980": 265, "5982": 265, "5984": 265, "5986": 265, "5988": 265, "5990": 265, "5992": 265, "5994": 265, "5996": 265, "5998": 265, "6000": [265, 1103], "6002": 265, "6004": 265, "6006": 265, "6008": 265, "6010": 265, "6012": 265, "6014": 265, "6016": 265, "6018": 265, "6020": 265, "6022": 265, "6024": 265, "6026": 265, "6028": 265, "6030": 265, "6032": 265, "6034": 265, "6036": 265, "6038": 265, "6040": 265, "6042": 265, "6044": 265, "6046": 265, "6048": 265, "6050": 265, "6052": 265, "6054": 265, "6056": 265, "6058": 265, "6060": 265, "6062": 265, "6064": 265, "6066": 265, "6068": 265, "6070": 265, "6072": 265, "6074": 265, "6076": 265, "6078": 265, "6080": 265, "6082": 265, "6084": 265, "6086": 265, "6088": 265, "6090": 265, "6092": 265, "6094": 265, "6096": 265, "6098": 265, "6100": 265, "6102": 265, "6104": 265, "6106": 265, "6108": 265, "6110": 265, "6112": 265, "6114": 265, "6116": 265, "6118": 265, "6120": 265, "6122": 265, "6124": 265, "6126": 265, "6128": 265, "6130": 265, "6132": 265, "6134": 265, "6136": 265, "6138": 265, "6140": 265, "6142": 265, "6144": 265, "6146": 265, "6148": 265, "6150": 265, "6152": 265, "6154": 265, "6156": 265, "6158": 265, "6160": 265, "6162": 265, "6164": 265, "6166": 265, "6168": 265, "6170": 265, "6172": 265, "6174": 265, "6176": 265, "6178": 265, "6180": 265, "6182": 265, "6184": 265, "6186": 265, "6188": 265, "6190": 265, "6192": 265, "6194": 265, "6196": 265, "6198": 265, "6200": 265, "6202": 265, "6204": 265, "6206": 265, "6208": 265, "6210": 265, "6212": 265, "6214": 265, "6216": 265, "6218": 265, "6220": 265, "6222": 265, "6224": 265, "6226": 265, "6228": 265, "6230": 265, "6232": 265, "6234": 265, "6236": 265, "6238": 265, "6240": 265, "6242": 265, "6244": 265, "6246": 265, "6248": 265, "6250": 265, "6252": 265, "6254": 265, "6256": 265, "6258": 265, "6260": 265, "6262": 265, "6264": 265, "6266": 265, "6268": 265, "6270": 265, "6272": 265, "6274": 265, "6276": 265, "6278": 265, "6280": 265, "6282": 265, "6284": 265, "6286": 265, "6288": 265, "6290": 265, "6292": 265, "6294": 265, "6296": 265, "6298": 265, "6300": 265, "6302": 265, "6304": 265, "6306": 265, "6308": 265, "6310": 265, "6312": 265, "6314": 265, "6316": 265, "6318": 265, "6320": 265, "6322": 265, "6324": 265, "6326": 265, "6328": 265, "6330": 265, "6332": 265, "6334": 265, "6336": 265, "6338": 265, "6340": 265, "6342": 265, "6344": 265, "6346": 265, "6348": 265, "6350": 265, "6352": 265, "6354": 265, "6356": 265, "6358": 265, "6360": 265, "6362": 265, "6364": 265, "6366": 265, "6368": 265, "6370": 265, "6372": 265, "6374": 265, "6376": 265, "6378": 265, "6380": 265, "6382": 265, "6384": 265, "6386": 265, "6388": 265, "6390": 265, "6392": 265, "6394": 265, "6396": 265, "6398": 265, "6400": 265, "6402": 265, "6404": 265, "6406": 265, "6408": 265, "6410": 265, "6412": 265, "6414": 265, "6416": 265, "6418": 265, "6420": 265, "6422": 265, "6424": 265, "6426": 265, "6428": 265, "6430": 265, "6432": 265, "6434": 265, "6436": 265, "6438": 265, "6440": 265, "6442": 265, "6444": 265, "6446": 265, "6448": 265, "6450": 265, "6452": 265, "6454": 265, "6456": 265, "6458": 265, "6460": 265, "6462": 265, "6464": 265, "6466": 265, "6468": 265, "6470": 265, "6472": 265, "6474": 265, "6476": 265, "6478": 265, "6480": 265, "6482": 265, "6484": 265, "6486": 265, "6488": 265, "6490": 265, "6492": 265, "6494": 265, "6496": 265, "6498": 265, "6500": 265, "6502": 265, "6504": 265, "6506": 265, "6508": 265, "6510": 265, "6512": 265, "6514": 265, "6516": 265, "6518": 265, "6520": 265, "6522": 265, "6524": 265, "6526": 265, "6528": 265, "6530": 265, "6532": 265, "6534": 265, "6536": 265, "6538": 265, "6540": 265, "6542": 265, "6544": 265, "6546": 265, "6548": 265, "6550": 265, "6552": 265, "6554": 265, "6556": 265, "6558": 265, "6560": 265, "6562": 265, "6564": 265, "6566": 265, "6568": 265, "6570": 265, "6572": 265, "6574": 265, "6576": 265, "6578": 265, "6580": 265, "6582": 265, "6584": 265, "6586": 265, "6588": 265, "6590": 265, "6592": 265, "6594": 265, "6596": 265, "6598": 265, "6600": 265, "6602": 265, "6604": 265, "6606": 265, "6608": 265, "6610": 265, "6612": 265, "6614": 265, "6616": 265, "6618": 265, "6620": 265, "6622": 265, "6624": 265, "6626": 265, "6628": 265, "6630": 265, "6632": 265, "6634": 265, "6636": 265, "6638": 265, "6640": 265, "6642": 265, "6644": 265, "6646": 265, "6648": 265, "6650": 265, "6652": 265, "6654": 265, "6656": 265, "6658": 265, "6660": 265, "6662": 265, "6664": 265, "6666": 265, "6668": 265, "6670": 265, "6672": 265, "6674": 265, "6676": 265, "6678": 265, "6680": 265, "6682": 265, "6684": 265, "6686": 265, "6688": 265, "6690": 265, "6692": 265, "6694": 265, "6696": 265, "6698": 265, "6700": 265, "6702": 265, "6704": 265, "6706": 265, "6708": 265, "6710": 265, "6714": 265, "6716": [265, 288], "6718": 265, "6720": 265, "6722": 265, "6724": 265, "6726": 265, "6728": 265, "6730": 265, "6732": 265, "6734": 265, "6736": 265, "6738": 265, "6740": 265, "6742": 265, "6744": 265, "6746": 265, "6748": 265, "6750": 265, "6752": 265, "6754": 265, "6756": 265, "6758": 265, "6760": 265, "6762": 265, "6764": 265, "6766": 265, "6768": 265, "6770": 265, "6772": 265, "6774": 265, "6776": 265, "6778": 265, "6780": 265, "6782": 265, "6784": 265, "6786": 265, "6788": 265, "6790": 265, "6792": 265, "6794": 265, "6796": 265, "6798": 265, "6800": 265, "6802": 265, "6804": 265, "6806": 265, "6808": 265, "6810": 265, "6812": 265, "6814": 265, "6816": 265, "6818": 265, "6820": 265, "6822": 265, "6824": 265, "6826": 265, "6828": 265, "6830": 265, "6832": 265, "6834": 265, "6836": 265, "6838": 265, "6840": 265, "6842": 265, "6844": 265, "6846": 265, "6848": 265, "6850": 265, "6852": 265, "6854": 265, "6856": 265, "6858": [265, 314], "6860": 265, "6862": 265, "6864": 265, "6866": 265, "6868": 265, "6870": 265, "6872": 265, "6874": 265, "6876": 265, "6878": 265, "6880": 265, "6882": 265, "6884": 265, "6886": 265, "6888": 265, "6890": 265, "6892": 265, "6894": 265, "6896": 265, "6898": 265, "6900": 265, "6902": 265, "6904": 265, "6906": 265, "6908": 265, "6910": 265, "6912": 265, "6914": 265, "6916": 265, "6918": 265, "6920": 265, "6922": 265, "6924": 265, "6926": 265, "6928": 265, "6930": 265, "6932": 265, "6934": 265, "6936": 265, "6938": 265, "6940": 265, "6942": 265, "6944": 265, "6946": 265, "6948": 265, "6950": 265, "6952": 265, "6954": 265, "6956": 265, "6958": 265, "6960": 265, "6962": 265, "6964": 265, "6966": 265, "6968": 265, "6970": 265, "6972": 265, "6974": 265, "6976": 265, "6978": 265, "6980": 265, "6982": 265, "6984": 265, "6986": 265, "6988": 265, "6990": 265, "6992": 265, "6994": 265, "6996": 265, "6998": 265, "7000": 265, "7002": 265, "7004": 265, "7006": 265, "7008": 265, "7010": 265, "7012": 265, "7014": 265, "7016": 265, "7018": 265, "7020": 265, "7022": 265, "7024": 265, "7026": 265, "7028": 265, "7030": 265, "7032": 265, "7034": 265, "7036": 265, "7038": 265, "7040": 265, "7042": 265, "7044": 265, "7046": 265, "7048": 265, "7050": 265, "7052": 265, "7054": 265, "7056": 265, "7058": 265, "7060": 265, "7062": 265, "7064": 265, "7066": 265, "7068": 265, "7070": 265, "7072": 265, "7074": 265, "7076": 265, "7078": 265, "7080": [265, 1210], "7082": 265, "7084": 265, "7086": 265, "7088": [265, 1210], "7090": 265, "7092": 265, "7094": 265, "7096": 265, "7098": 265, "7100": 265, "7102": 265, "7104": 265, "7106": 265, "7108": 265, "7110": 265, "7112": 265, "7114": 265, "7116": 265, "7118": 265, "7120": 265, "7122": 265, "7124": 265, "7126": 265, "7128": 265, "7130": 265, "7132": 265, "7134": 265, "7136": 265, "7138": 265, "7140": 265, "7142": 265, "7144": 265, "7146": 265, "7148": 265, "7150": 265, "7152": 265, "7154": 265, "7156": 265, "7158": 265, "7160": 265, "7162": 265, "7164": 265, "7166": 265, "7168": 265, "7170": 265, "7172": 265, "7174": 265, "7176": 265, "7178": 265, "7180": 265, "7182": 265, "7184": 265, "7186": 265, "7188": 265, "7190": 265, "7192": 265, "7194": 265, "7196": 265, "7198": 265, "7200": 265, "7202": 265, "7204": 265, "7206": 265, "7208": 265, "7210": 265, "7212": 265, "7214": 265, "7216": 265, "7218": 265, "7220": 265, "7222": 265, "7224": 265, "7226": 265, "7228": 265, "7230": 265, "7232": 265, "7234": 265, "7236": 265, "7238": 265, "7240": 265, "7242": 265, "7244": 265, "7246": 265, "7248": 265, "7250": 265, "7252": 265, "7254": 265, "7256": 265, "7258": 265, "7260": 265, "7262": 265, "7264": 265, "7266": 265, "7268": 265, "7270": 265, "7272": 265, "7274": 265, "7276": 265, "7278": 265, "7280": 265, "7282": 265, "7284": 265, "7286": 265, "7288": 265, "7290": 265, "7292": 265, "7294": 265, "7296": 265, "7298": 265, "7300": 265, "7302": 265, "7304": 265, "7306": 265, "7308": 265, "7310": 265, "7312": 265, "7314": 265, "7316": 265, "7318": 265, "7320": 265, "7322": 265, "7324": 265, "7326": 265, "7328": 265, "7330": 265, "7332": 265, "7334": 265, "7336": 265, "7338": 265, "7340": 265, "7342": 265, "7344": 265, "7346": 265, "7348": 265, "7350": 265, "7352": 265, "7354": 265, "7356": 265, "7358": 265, "7360": 265, "7362": 265, "7364": 265, "7366": 265, "7368": 265, "7370": 265, "7372": 265, "7374": 265, "7376": 265, "7378": 265, "7380": 265, "7382": 265, "7384": 265, "7386": 265, "7388": 265, "7392": 265, "7394": 265, "7396": 265, "7398": 265, "7400": 265, "7402": 265, "7404": 265, "7406": 265, "7408": 265, "7410": 265, "7412": 265, "7414": 265, "7416": 265, "7418": 265, "7420": 265, "7422": 265, "7424": 265, "7426": 265, "7428": 265, "7430": 265, "7432": 265, "7434": 265, "7436": 265, "7438": 265, "7440": 265, "7442": 265, "7444": 265, "7446": 265, "7448": 265, "7450": 265, "7452": 265, "7454": 265, "7456": 265, "7458": 265, "7460": 265, "7462": 265, "7464": 265, "7466": 265, "7468": 265, "7470": 265, "7472": 265, "7474": 265, "7476": 265, "7478": 265, "7480": 265, "7482": 265, "7484": 265, "7486": 265, "7488": 265, "7490": 265, "7492": 265, "7494": 265, "7496": 265, "7498": 265, "7500": 265, "7502": 265, "7504": 265, "7506": 265, "7508": 265, "7510": 265, "7512": 265, "7514": 265, "7516": 265, "7518": 265, "7520": 265, "7522": 265, "7524": 265, "7526": 265, "7528": 265, "7530": 265, "7532": 265, "7534": 265, "7536": 265, "7538": 265, "7540": 265, "7542": 265, "7544": 265, "7546": 265, "7548": 265, "7550": 265, "7552": 265, "7554": 265, "7556": 265, "7558": 265, "7560": 265, "7562": 265, "7564": 265, "7566": 265, "7568": 265, "7570": 265, "7572": 265, "7574": 265, "7576": 265, "7578": 265, "7580": 265, "7582": 265, "7584": 265, "7586": 265, "7588": 265, "7590": 265, "7592": 265, "7594": 265, "7596": 265, "7598": 265, "7600": 265, "7602": 265, "7604": 265, "7606": 265, "7608": 265, "7610": 265, "7612": 265, "7614": 265, "7616": 265, "7618": 265, "7620": 265, "7622": 265, "7624": 265, "7626": 265, "7628": 265, "7630": 265, "7632": 265, "7634": 265, "7636": 265, "7638": 265, "7640": 265, "7642": 265, "7644": 265, "7646": 265, "7648": 265, "7650": 265, "7652": 265, "7654": 265, "7656": 265, "7658": 265, "7660": 265, "7662": 265, "7664": 265, "7666": 265, "7668": 265, "7670": 265, "7672": 265, "7674": 265, "7676": 265, "7678": 265, "7680": 265, "7682": 265, "7684": 265, "7686": 265, "7688": 265, "7690": 265, "7692": 265, "7694": 265, "7696": 265, "7698": 265, "7700": 265, "7702": 265, "7704": 265, "7706": 265, "7708": 265, "7710": 265, "7712": 265, "7714": 265, "7716": 265, "7718": 265, "7720": 265, "7722": 265, "7724": 265, "7726": 265, "7728": 265, "7730": 265, "7732": 265, "7734": 265, "7736": 265, "7738": 265, "7740": 265, "7742": 265, "7744": 265, "7746": 265, "7748": 265, "7750": 265, "7752": 265, "7754": 265, "7756": 265, "7758": 265, "7760": 265, "7762": 265, "7764": 265, "7766": 265, "7768": 265, "7770": 265, "7772": 265, "7774": 265, "7776": 265, "7778": 265, "7780": 265, "7782": 265, "7784": 265, "7786": 265, "7788": 265, "7790": 265, "7792": 265, "7794": 265, "7796": 265, "7798": 265, "7800": 265, "7802": 265, "7804": 265, "7806": 265, "7808": 265, "7810": 265, "7812": 265, "7814": 265, "7816": 265, "7818": 265, "7820": 265, "7822": 265, "7824": 265, "7826": 265, "7828": 265, "7830": 265, "7832": 265, "7834": 265, "7836": 265, "7838": 265, "7842": 265, "7844": 265, "7846": 265, "7848": 265, "7850": 265, "7852": 265, "7854": 265, "7856": 265, "7858": 265, "7860": 265, "7862": 265, "7864": 265, "7866": 265, "7868": 265, "7870": 265, "7872": 265, "7874": 265, "7878": 265, "7880": 265, "7882": 265, "7884": 265, "7886": 265, "7888": 265, "7890": 265, "7892": 265, "7894": 265, "7896": 265, "7898": 265, "7900": 265, "7902": 265, "7904": 265, "7906": 265, "7908": 265, "7910": 265, "7912": 265, "7914": 265, "7916": 265, "7918": 265, "7920": 265, "7922": 265, "7924": 265, "7926": 265, "7928": 265, "7930": 265, "7932": 265, "7934": 265, "7936": 265, "7938": 265, "7940": 265, "7942": 265, "7944": 265, "7946": 265, "7948": 265, "7950": 265, "7952": 265, "7954": 265, "7956": 265, "7958": 265, "7960": 265, "7962": 265, "7964": 265, "7966": 265, "7968": 265, "7970": 265, "7972": 265, "7974": 265, "7976": 265, "7978": 265, "7980": 265, "7982": 265, "7984": 265, "7986": 265, "7988": 265, "7990": 265, "7992": 265, "7994": 265, "7996": 265, "7998": 265, "8002": 265, "8004": 265, "8006": 265, "8008": 265, "8012": 265, "8014": 265, "8016": 265, "8018": 265, "8022": 265, "8024": 265, "8026": 265, "8028": 265, "8030": 265, "8032": 265, "8034": 265, "8036": 265, "8038": 265, "8040": 265, "8042": 265, "8044": 265, "8046": 265, "8048": 265, "8050": 265, "8052": 265, "8054": 265, "8056": 265, "8058": 265, "8060": 265, "8062": 265, "8064": 265, "8066": 265, "8068": 265, "8070": 265, "8072": 265, "8074": 265, "8076": 265, "8078": 265, "8080": 265, "8082": 265, "8084": 265, "8086": 265, "8088": 265, "8090": 265, "8092": 265, "8094": 265, "8096": 265, "8098": 265, "8100": 265, "8102": [265, 1063, 1064], "8104": 265, "8106": 265, "8108": 265, "8110": 265, "8112": 265, "8114": 265, "8116": 265, "8118": 265, "8120": 265, "8122": 265, "8124": 265, "8126": 265, "8128": 265, "8130": 265, "8132": 265, "8134": 265, "8136": 265, "8138": 265, "8140": 265, "8142": 265, "8144": 265, "8146": 265, "8148": 265, "8150": 265, "8152": 265, "8154": 265, "8156": 265, "8158": 265, "8160": 265, "8162": 265, "8164": 265, "8166": 265, "8168": 265, "8170": 265, "8172": 265, "8174": 265, "8176": 265, "8178": 265, "8180": 265, "8182": 265, "8184": 265, "8186": 265, "8188": 265, "8190": 265, "8194": 265, "8196": 265, "8198": 265, "8200": 265, "8202": 265, "8204": 265, "8206": 265, "8208": 265, "8210": 265, "8212": 265, "8214": 265, "8216": 265, "8218": 265, "8220": 265, "8222": 265, "8224": 265, "8226": 265, "8228": 265, "8230": 265, "8232": 265, "8234": 265, "8238": 265, "8240": 265, "8242": 265, "8244": 265, "8246": 265, "8248": 265, "8250": 265, "8252": 265, "8254": 265, "8256": 265, "8258": 265, "8260": [265, 887], "8262": 265, "8264": 265, "8266": 265, "8268": 265, "8270": 265, "8272": 265, "8274": 265, "8276": 265, "8278": 265, "8280": 265, "8282": 265, "8284": 265, "8286": 265, "8288": 265, "8290": 265, "8292": 265, "8294": 265, "8296": 265, "8298": 265, "8300": 265, "8302": 265, "8304": 265, "8306": 265, "8308": 265, "8310": 265, "8312": 265, "8314": 265, "8316": 265, "8318": 265, "8320": 265, "8322": 265, "8324": 265, "8326": 265, "8328": 265, "8330": 265, "8332": 265, "8334": 265, "8336": 265, "8338": 265, "8340": 265, "8342": 265, "8344": 265, "8346": 265, "8348": 265, "8350": 265, "8352": 265, "8354": 265, "8356": 265, "8358": 265, "8360": 265, "8362": 265, "8364": 265, "8366": 265, "8368": 265, "8370": 265, "8372": 265, "8374": 265, "8376": 265, "8378": 265, "8380": 265, "8382": 265, "8384": 265, "8386": 265, "8388": 265, "8390": 265, "8392": 265, "8394": 265, "8396": 265, "8398": 265, "8400": 265, "8402": 265, "8404": 265, "8406": 265, "8408": 265, "8410": 265, "8412": 265, "8414": 265, "8416": 265, "8418": 265, "8420": 265, "8422": 265, "8424": 265, "8426": 265, "8428": 265, "8430": 265, "8432": 265, "8434": 265, "8436": 265, "8438": 265, "8440": 265, "8442": 265, "8444": 265, "8446": 265, "8448": 265, "8450": 265, "8452": 265, "8454": 265, "8456": 265, "8458": 265, "8460": 265, "8464": 265, "8466": 265, "8468": 265, "8470": 265, "8472": 265, "8474": 265, "8476": 265, "8478": 265, "8480": 265, "8482": 265, "8484": 265, "8486": 265, "8488": 265, "8490": 265, "8492": 265, "8494": 265, "8496": 265, "8498": 265, "8500": 265, "8502": 265, "8504": 265, "8506": 265, "8508": 265, "8510": 265, "8512": 265, "8514": 265, "8516": 265, "8518": 265, "8520": 265, "8522": 265, "8524": 265, "8526": 265, "8528": 265, "8530": 265, "8532": 265, "8534": 265, "8536": 265, "8538": 265, "8540": 265, "8542": 265, "8544": 265, "8546": 265, "8548": 265, "8550": 265, "8552": 265, "8554": 265, "8556": 265, "8558": 265, "8560": 265, "8562": 265, "8564": 265, "8566": 265, "8568": 265, "8570": 265, "8572": 265, "8574": 265, "8576": 265, "8578": 265, "8580": 265, "8582": 265, "8584": 265, "8586": 265, "8588": 265, "8590": 265, "8592": 265, "8594": 265, "8596": 265, "8598": 265, "8600": 265, "8602": 265, "8604": 265, "8606": 265, "8608": 265, "8610": 265, "8612": 265, "8614": 265, "8616": 265, "8618": 265, "8620": 265, "8622": 265, "8624": 265, "8626": 265, "8628": 265, "8630": 265, "8632": 265, "8634": 265, "8636": 265, "8638": 265, "8640": 265, "8642": 265, "8644": 265, "8646": 265, "8648": 265, "8650": 265, "8652": 265, "8654": 265, "8656": 265, "8658": 265, "8660": 265, "8662": 265, "8664": 265, "8666": 265, "8668": 265, "8670": 265, "8672": 265, "8674": 265, "8676": 265, "8678": 265, "8680": 265, "8682": 265, "8684": 265, "8686": 265, "8688": 265, "8690": 265, "8692": 265, "8694": 265, "8696": 265, "8698": 265, "8700": 265, "8702": 265, "8704": 265, "8706": 265, "8708": 265, "8710": 265, "8712": 265, "8714": 265, "8716": 265, "8718": 265, "8720": 265, "8722": 265, "8724": 265, "8726": 265, "8728": 265, "8730": 265, "8732": 265, "8734": 265, "8736": 265, "8738": 265, "8740": 265, "8742": 265, "8744": 265, "8746": 265, "8748": 265, "8750": 265, "8752": 265, "8754": 265, "8756": 265, "8758": 265, "8760": 265, "8762": 265, "8764": 265, "8766": 265, "8768": 265, "8770": 265, "8772": 265, "8774": 265, "8776": 265, "8778": 265, "8780": 265, "8782": 265, "8784": 265, "8786": 265, "8788": 265, "8790": 265, "8792": 265, "8794": 265, "8796": 265, "8798": 265, "8800": 265, "8802": 265, "8804": 265, "8806": 265, "8808": 265, "8810": 265, "8812": 265, "8814": 265, "8816": 265, "8818": 265, "8820": 265, "8822": 265, "8824": 265, "8826": 265, "8828": 265, "8830": 265, "8832": 265, "8834": 265, "8836": 265, "8838": 265, "8840": 265, "8842": 265, "8844": 265, "8846": 265, "8848": 265, "8850": 265, "8852": 265, "8854": 265, "8856": 265, "8858": 265, "8860": 265, "8862": 265, "8864": 265, "8866": 265, "8868": 265, "8870": 265, "8872": 265, "8874": 265, "8876": 265, "8878": 265, "8880": 265, "8882": 265, "8884": 265, "8886": 265, "8888": 265, "8890": 265, "8892": 265, "8894": 265, "8896": 265, "8898": 265, "8900": 265, "8902": 265, "8904": 265, "8906": 265, "8908": 265, "8910": 265, "8912": 265, "8914": 265, "8916": 265, "8918": 265, "8920": 265, "8922": 265, "8924": 265, "8926": 265, "8928": 265, "8930": 265, "8932": 265, "8934": 265, "8936": 265, "8938": 265, "8940": 265, "8942": 265, "8944": 265, "8946": 265, "8948": 265, "8950": 265, "8952": 265, "8954": 265, "8956": 265, "8958": 265, "8960": 265, "8962": 265, "8964": 265, "8966": 265, "8968": 265, "8970": 265, "8972": 265, "8974": 265, "8976": 265, "8978": 265, "8980": 265, "8982": 265, "8984": 265, "8986": 265, "8988": 265, "8990": 265, "8992": 265, "8994": 265, "8996": 265, "8998": 265, "9002": 265, "9004": 265, "9006": 265, "9008": 265, "9010": 265, "9012": 265, "9014": 265, "9016": 265, "9018": 265, "9020": 265, "9022": 265, "9024": 265, "9026": 265, "9028": 265, "9030": 265, "9032": 265, "9034": 265, "9036": 265, "9038": 265, "9040": 265, "9042": 265, "9044": 265, "9046": 265, "9048": 265, "9050": 265, "9052": 265, "9054": 265, "9056": 265, "9058": 265, "9060": 265, "9062": 265, "9064": 265, "9066": 265, "9068": 265, "9070": 265, "9072": 265, "9074": 265, "9076": 265, "9078": 265, "9080": 265, "9082": 265, "9084": 265, "9086": 265, "9088": 265, "9090": 265, "9092": 265, "9094": 265, "9096": 265, "9098": 265, "9100": 265, "9102": 265, "9104": 265, "9106": 265, "9108": 265, "9110": 265, "9112": 265, "9114": 265, "9116": 265, "9118": 265, "9120": 265, "9122": 265, "9124": 265, "9126": 265, "9128": 265, "9130": 265, "9132": 265, "9134": 265, "9136": 265, "9138": 265, "9140": 265, "9142": 265, "9144": 265, "9146": 265, "9148": 265, "9150": 265, "9152": 265, "9154": 265, "9156": 265, "9158": 265, "9160": 265, "9162": 265, "9164": 265, "9166": 265, "9168": 265, "9170": 265, "9172": 265, "9174": 265, "9176": 265, "9178": 265, "9180": 265, "9182": 265, "9184": 265, "9186": 265, "9188": 265, "9190": 265, "9192": 265, "9194": 265, "9196": 265, "9198": 265, "9200": 265, "9202": 265, "9204": 265, "9206": 265, "9208": 265, "9210": 265, "9212": 265, "9214": 265, "9216": 265, "9218": 265, "9220": 265, "9222": 265, "9224": 265, "9226": 265, "9228": 265, "9230": 265, "9232": 265, "9234": 265, "9236": 265, "9238": 265, "9240": 265, "9242": 265, "9244": 265, "9246": 265, "9248": 265, "9250": 265, "9252": 265, "9254": 265, "9256": 265, "9258": 265, "9260": 265, "9262": 265, "9264": 265, "9266": 265, "9268": 265, "9270": 265, "9272": 265, "9274": 265, "9276": 265, "9278": 265, "9280": 265, "9282": 265, "9284": 265, "9286": 265, "9288": 265, "9290": 265, "9292": 265, "9294": 265, "9296": 265, "9298": 265, "9300": 265, "9302": 265, "9304": 265, "9306": 265, "9308": 265, "9310": 265, "9312": 265, "9314": 265, "9316": 265, "9318": 265, "9320": 265, "9322": 265, "9324": 265, "9326": 265, "9328": 265, "9330": 265, "9332": 265, "9334": 265, "9336": 265, "9338": 265, "9340": 265, "9342": 265, "9344": 265, "9346": 265, "9348": 265, "9350": 265, "9352": 265, "9354": 265, "9356": 265, "9358": 265, "9360": 265, "9362": 265, "9364": 265, "9366": 265, "9368": 265, "9370": 265, "9372": 265, "9374": 265, "9376": 265, "9378": 265, "9380": 265, "9382": 265, "9384": 265, "9386": 265, "9388": 265, "9390": 265, "9392": 265, "9394": [265, 948], "9396": 265, "9398": 265, "9400": 265, "9402": 265, "9404": 265, "9406": 265, "9408": 265, "9410": 265, "9412": 265, "9414": 265, "9416": 265, "9418": 265, "9420": 265, "9422": 265, "9424": 265, "9426": 265, "9428": 265, "9430": 265, "9432": 265, "9434": 265, "9436": 265, "9438": 265, "9440": 265, "9442": 265, "9444": 265, "9446": 265, "9448": 265, "9450": 265, "9452": 265, "9454": 265, "9456": 265, "9458": 265, "9460": 265, "9462": 265, "9464": 265, "9466": 265, "9468": 265, "9470": 265, "9472": 265, "9474": 265, "9476": 265, "9478": 265, "9480": 265, "9482": 265, "9484": 265, "9486": 265, "9488": 265, "9490": 265, "9492": 265, "9494": 265, "9496": 265, "9498": 265, "9500": 265, "9502": 265, "9504": 265, "9506": 265, "9508": 265, "9510": 265, "9512": 265, "9514": 265, "9516": 265, "9518": 265, "9520": 265, "9522": 265, "9524": 265, "9526": 265, "9528": 265, "9530": 265, "9532": 265, "9534": 265, "9536": 265, "9538": 265, "9540": 265, "9542": 265, "9544": 265, "9546": 265, "9548": 265, "9550": 265, "9552": 265, "9554": 265, "9556": 265, "9558": 265, "9560": 265, "9562": 265, "9564": 265, "9566": 265, "9568": 265, "9570": 265, "9572": 265, "9574": 265, "9576": 265, "9578": 265, "9580": 265, "9582": 265, "9584": 265, "9586": 265, "9588": 265, "9590": 265, "9592": 265, "9594": 265, "9596": 265, "9598": 265, "9600": 265, "9602": 265, "9604": 265, "9606": 265, "9608": 265, "9610": 265, "9612": 265, "9614": 265, "9616": 265, "9618": 265, "9620": 265, "9622": 265, "9624": 265, "9626": 265, "9628": 265, "9630": 265, "9632": 265, "9634": 265, "9636": 265, "9638": 265, "9640": 265, "9642": 265, "9644": 265, "9646": 265, "9648": 265, "9650": 265, "9652": 265, "9654": 265, "9656": 265, "9658": 265, "9660": 265, "9662": 265, "9664": 265, "9666": 265, "9668": 265, "9670": 265, "9672": 265, "9674": 265, "9676": 265, "9678": 265, "9680": 265, "9682": 265, "9684": 265, "9686": 265, "9688": 265, "9690": 265, "9692": 265, "9694": 265, "9696": 265, "9698": 265, "9700": 265, "9702": 265, "9704": 265, "9706": 265, "9708": 265, "9710": 265, "9712": 265, "9714": 265, "9716": 265, "9718": 265, "9720": 265, "9722": 265, "9724": 265, "9726": 265, "9728": 265, "9730": 265, "9732": 265, "9734": 265, "9736": 265, "9738": 265, "9740": 265, "9742": 265, "9744": 265, "9746": 265, "9748": 265, "9750": 265, "9752": 265, "9754": 265, "9756": 265, "9758": 265, "9760": 265, "9762": 265, "9764": 265, "9766": 265, "9768": [265, 275], "9770": 265, "9772": 265, "9774": 265, "9776": 265, "9778": 265, "9780": 265, "9782": 265, "9784": 265, "9786": 265, "9788": 265, "9790": 265, "9792": 265, "9794": 265, "9796": 265, "9798": 265, "9800": 265, "9802": 265, "9804": 265, "9806": 265, "9808": 265, "9810": 265, "9812": 265, "9814": 265, "9816": 265, "9818": 265, "9820": 265, "9822": 265, "9824": 265, "9826": 265, "9828": 265, "9830": 265, "9832": 265, "9834": 265, "9836": 265, "9838": 265, "9840": 265, "9842": 265, "9844": 265, "9846": 265, "9848": 265, "9850": 265, "9852": 265, "9854": 265, "9856": 265, "9858": 265, "9860": 265, "9862": 265, "9864": 265, "9866": 265, "9868": 265, "9870": 265, "9872": 265, "9874": 265, "9876": 265, "9878": 265, "9880": 265, "9882": 265, "9884": 265, "9886": 265, "9888": 265, "9890": 265, "9892": 265, "9894": 265, "9896": 265, "9898": 265, "9900": 265, "9902": 265, "9904": 265, "9906": 265, "9908": 265, "9910": 265, "9912": 265, "9914": 265, "9916": 265, "9918": 265, "9920": 265, "9922": 265, "9924": 265, "9926": 265, "9928": 265, "9930": 265, "9932": 265, "9934": 265, "9936": 265, "9938": 265, "9940": 265, "9942": 265, "9944": 265, "9946": 265, "9948": 265, "9950": 265, "9952": 265, "9954": 265, "9956": 265, "9958": 265, "9960": 265, "9962": 265, "9964": 265, "9966": 265, "9968": 265, "9970": 265, "9972": 265, "9974": 265, "9976": 265, "9978": 265, "9980": 265, "9982": 265, "9984": 265, "9986": 265, "9988": 265, "9990": 265, "9992": 265, "9994": 265, "9996": 265, "9998": 265, "10002": 265, "10004": 265, "10006": 265, "10008": 265, "10010": 265, "10012": 265, "10014": 265, "10016": 265, "10018": 265, "10020": 265, "10022": 265, "10024": 265, "10026": 265, "10028": 265, "10030": 265, "10032": 265, "10034": 265, "10036": 265, "10038": 265, "10040": 265, "10042": 265, "10044": 265, "10046": 265, "10048": 265, "10050": 265, "10052": 265, "10054": 265, "10056": 265, "10058": 265, "10060": 265, "10062": 265, "10064": 265, "10066": 265, "10068": 265, "10070": 265, "10072": 265, "10074": 265, "10076": 265, "10078": 265, "10080": 265, "10082": 265, "10084": 265, "10086": 265, "10088": 265, "10090": 265, "10092": 265, "10094": 265, "10096": 265, "10098": 265, "10100": 265, "10102": 265, "10104": 265, "10106": 265, "10108": 265, "10110": 265, "10112": 265, "10114": 265, "10116": 265, "10118": 265, "10120": 265, "10122": 265, "10124": 265, "10126": 265, "10128": 265, "10130": 265, "10132": 265, "10134": 265, "10136": 265, "10138": 265, "10140": 265, "10142": 265, "10144": 265, "10146": 265, "10148": 265, "10150": 265, "10152": 265, "10154": 265, "10156": 265, "10158": 265, "10160": 265, "10162": 265, "10164": 265, "10166": 265, "10168": 265, "10170": 265, "10172": 265, "10174": 265, "10176": 265, "10178": 265, "10180": 265, "10182": 265, "10184": 265, "10186": 265, "10188": 265, "10190": 265, "10192": 265, "10194": 265, "10196": 265, "10198": 265, "10200": 265, "10202": 265, "10204": 265, "10206": 265, "10208": 265, "10210": 265, "10212": 265, "10214": 265, "10216": 265, "10218": 265, "10220": 265, "10222": 265, "10224": 265, "10226": [265, 314], "10228": 265, "10230": 265, "10232": 265, "10234": 265, "10236": 265, "10238": 265, "10240": 265, "10242": 265, "10244": 265, "10246": 265, "10248": 265, "10250": 265, "10252": 265, "10254": 265, "10256": 265, "10258": 265, "10260": 265, "10262": 265, "10264": 265, "10266": 265, "10268": 265, "10270": 265, "10272": 265, "10274": 265, "10276": 265, "10278": 265, "10280": 265, "10282": 265, "10284": 265, "10286": 265, "10288": 265, "10290": 265, "10292": 265, "10294": 265, "10296": 265, "10298": 265, "10300": 265, "10302": 265, "10304": 265, "10306": 265, "10308": 265, "10310": 265, "10312": 265, "10314": 265, "10316": 265, "10318": 265, "10320": 265, "10322": 265, "10324": 265, "10326": 265, "10328": 265, "10330": 265, "10332": 265, "10334": 265, "10336": 265, "10338": 265, "10340": 265, "10342": 265, "10344": 265, "10346": 265, "10348": 265, "10350": 265, "10352": 265, "10354": 265, "10356": 265, "10358": 265, "10360": 265, "10362": 265, "10364": 265, "10366": 265, "10368": 265, "10370": 265, "10372": 265, "10374": 265, "10376": 265, "10378": 265, "10380": 265, "10382": 265, "10384": 265, "10386": 265, "10388": 265, "10390": 265, "10392": 265, "10394": 265, "10396": 265, "10398": 265, "10400": 265, "10402": 265, "10404": 265, "10406": 265, "10408": 265, "10410": 265, "10412": 265, "10414": 265, "10416": 265, "10418": 265, "10420": 265, "10422": 265, "10424": 265, "10426": 265, "10428": 265, "10430": 265, "10432": 265, "10434": 265, "10436": 265, "10438": 265, "10440": 265, "10442": 265, "10444": 265, "10446": 265, "10448": 265, "10450": 265, "10452": 265, "10454": 265, "10456": 265, "10458": 265, "10460": 265, "10462": 265, "10464": 265, "10466": 265, "10468": 265, "10470": 265, "10472": 265, "10474": 265, "10476": 265, "10478": 265, "10480": 265, "10482": 265, "10484": 265, "10486": 265, "10488": 265, "10490": 265, "10492": 265, "10494": 265, "10496": 265, "10498": 265, "10500": 265, "10502": 265, "10504": 265, "10506": 265, "10508": 265, "10510": 265, "10512": 265, "10514": 265, "10516": 265, "10518": 265, "10520": 265, "10522": 265, "10524": 265, "10526": 265, "10528": 265, "10530": 265, "10532": 265, "10534": 265, "10536": 265, "10538": 265, "10540": 265, "10542": 265, "10544": 265, "10546": 265, "10548": 265, "10550": 265, "10552": [265, 1075], "10554": 265, "10556": 265, "10558": 265, "10560": 265, "10562": 265, "10564": 265, "10566": 265, "10568": 265, "10570": 265, "10572": 265, "10574": 265, "10576": 265, "10578": 265, "10580": 265, "10582": 265, "10584": 265, "10586": 265, "10588": 265, "10590": 265, "10592": 265, "10594": 265, "10596": 265, "10598": 265, "10600": 265, "10602": 265, "10604": 265, "10606": 265, "10608": 265, "10610": 265, "10612": 265, "10614": 265, "10616": 265, "10618": 265, "10620": 265, "10622": 265, "10624": 265, "10626": 265, "10628": 265, "10630": 265, "10632": 265, "10634": 265, "10636": 265, "10638": 265, "10640": 265, "10642": 265, "10644": 265, "10646": 265, "10648": 265, "10650": 265, "10652": 265, "10654": 265, "10656": 265, "10658": 265, "10660": 265, "10662": 265, "10664": 265, "10666": 265, "10668": 265, "10670": 265, "10672": 265, "10674": 265, "10676": 265, "10678": 265, "10680": 265, "10682": 265, "10684": 265, "10686": 265, "10688": 265, "10690": 265, "10692": 265, "10694": 265, "10696": 265, "10698": 265, "10700": 265, "10702": 265, "10704": 265, "10706": 265, "10708": 265, "10710": 265, "10712": 265, "10714": 265, "10716": 265, "10718": 265, "10720": 265, "10722": 265, "10724": 265, "10726": 265, "10728": 265, "10730": 265, "10732": 265, "10734": 265, "10736": 265, "10738": 265, "10740": 265, "10742": 265, "10744": 265, "10746": 265, "10748": 265, "10750": 265, "10752": 265, "10754": 265, "10756": 265, "10758": 265, "10760": 265, "10762": 265, "10764": 265, "10766": 265, "10768": 265, "10770": 265, "10772": 265, "10774": 265, "10776": 265, "10778": 265, "10780": 265, "10782": 265, "10784": 265, "10786": 265, "10788": 265, "10790": 265, "10792": 265, "10794": 265, "10796": 265, "10798": 265, "10800": 265, "10802": 265, "10804": 265, "10806": 265, "10808": 265, "10810": 265, "10812": 265, "10814": 265, "10816": 265, "10818": 265, "10820": 265, "10822": 265, "10824": 265, "10826": 265, "10828": 265, "10830": 265, "10832": 265, "10834": 265, "10836": 265, "10838": 265, "10840": 265, "10842": 265, "10844": 265, "10846": 265, "10848": 265, "10850": 265, "10852": 265, "10854": 265, "10856": 265, "10858": 265, "10860": 265, "10862": 265, "10864": 265, "10866": 265, "10868": 265, "10870": 265, "10872": 265, "10874": 265, "10876": 265, "10878": 265, "10880": 265, "10882": 265, "10884": 265, "10886": 265, "10888": 265, "10890": 265, "10892": 265, "10894": 265, "10896": 265, "10898": 265, "10900": 265, "10902": 265, "10904": 265, "10906": 265, "10908": 265, "10910": 265, "10912": 265, "10914": 265, "10916": 265, "10918": 265, "10920": 265, "10922": 265, "10924": 265, "10926": 265, "10928": 265, "10930": 265, "10932": 265, "10934": 265, "10936": 265, "10938": 265, "10940": 265, "10942": 265, "10944": 265, "10946": 265, "10948": 265, "10950": 265, "10952": 265, "10954": 265, "10956": 265, "10958": 265, "10960": 265, "10962": 265, "10964": 265, "10966": 265, "10968": 265, "10970": 265, "10972": 265, "10974": 265, "10976": 265, "10978": 265, "10980": 265, "10982": 265, "10984": 265, "10986": 265, "10988": 265, "10990": 265, "10992": 265, "10994": 265, "10996": 265, "10998": 265, "11000": 265, "11002": 265, "11004": 265, "11006": 265, "11008": 265, "11010": 265, "11012": 265, "11014": 265, "11016": 265, "11018": 265, "11020": 265, "11022": 265, "11024": 265, "11026": 265, "11028": 265, "11030": 265, "11032": 265, "11034": 265, "11036": 265, "11038": 265, "11040": 265, "11042": 265, "11044": 265, "11046": 265, "11048": 265, "11050": 265, "11052": 265, "11054": 265, "11056": 265, "11058": 265, "11060": 265, "11062": 265, "11064": 265, "11066": 265, "11068": 265, "11070": 265, "11072": 265, "11074": 265, "11076": 265, "11078": 265, "11080": 265, "11082": 265, "11084": 265, "11086": 265, "11088": 265, "11090": 265, "11092": 265, "11094": 265, "11096": 265, "11098": 265, "11100": 265, "11102": 265, "11104": 265, "11106": 265, "11108": 265, "11110": 265, "11112": 265, "11114": 265, "11116": 265, "11118": 265, "11120": 265, "11122": 265, "11124": 265, "11126": 265, "11128": 265, "11130": 265, "11132": 265, "11134": 265, "11136": 265, "11138": 265, "11140": 265, "11142": 265, "11144": 265, "11146": 265, "11148": 265, "11150": 265, "11152": 265, "11154": 265, "11156": 265, "11158": 265, "11160": 265, "11162": 265, "11164": 265, "11166": 265, "11168": 265, "11170": 265, "11172": 265, "11174": 265, "11176": 265, "11178": 265, "11180": 265, "11182": 265, "11184": 265, "11186": 265, "11188": 265, "11190": 265, "11192": 265, "11194": 265, "11196": 265, "11198": 265, "11200": 265, "11202": 265, "11204": 265, "11206": 265, "11208": 265, "11210": 265, "11212": 265, "11214": 265, "11216": 265, "11218": 265, "11220": 265, "11222": 265, "11224": 265, "11226": 265, "11228": 265, "11230": 265, "11232": 265, "11234": 265, "11236": 265, "11238": 265, "11240": 265, "11242": 265, "11244": 265, "11246": 265, "11248": 265, "11250": 265, "11252": 265, "11254": 265, "11256": 265, "11258": 265, "11260": 265, "11262": 265, "11264": 265, "11266": 265, "11268": 265, "11270": 265, "11272": 265, "11274": 265, "11276": 265, "11278": 265, "11280": 265, "11282": 265, "11284": 265, "11286": 265, "11288": 265, "11290": 265, "11292": 265, "11294": 265, "11296": 265, "11298": 265, "11300": 265, "11302": 265, "11304": 265, "11306": 265, "11308": 265, "11310": 265, "11312": 265, "11314": 265, "11316": 265, "11318": 265, "11320": 265, "11322": 265, "11324": 265, "11326": 265, "11328": 265, "11330": 265, "11332": 265, "11334": 265, "11336": 265, "11340": 265, "11342": 265, "11344": 265, "11346": 265, "11348": [265, 314], "11350": 265, "11352": 265, "11354": 265, "11356": 265, "11358": 265, "11360": 265, "11362": 265, "11364": 265, "11366": 265, "11368": 265, "11370": 265, "11372": 265, "11374": 265, "11376": 265, "11378": 265, "11380": 265, "11382": 265, "11384": 265, "11386": 265, "11388": 265, "11390": 265, "11392": 265, "11394": 265, "11396": 265, "11398": 265, "11400": 265, "11402": 265, "11404": 265, "11406": 265, "11408": 265, "11410": 265, "11412": 265, "11414": 265, "11416": 265, "11418": 265, "11420": 265, "11422": 265, "11424": 265, "11426": 265, "11428": 265, "11430": 265, "11432": 265, "11434": 265, "11436": 265, "11438": 265, "11440": 265, "11442": 265, "11444": 265, "11446": 265, "11448": 265, "11450": 265, "11452": 265, "11454": 265, "11456": 265, "11458": 265, "11460": 265, "11462": 265, "11464": 265, "11466": 265, "11468": 265, "11470": 265, "11472": 265, "11474": 265, "11476": 265, "11478": 265, "11480": 265, "11482": 265, "11484": 265, "11486": 265, "11488": 265, "11490": 265, "11492": 265, "11494": 265, "11496": 265, "11498": 265, "11500": 265, "11502": 265, "11504": 265, "11506": 265, "11508": 265, "11510": 265, "11512": 265, "11514": 265, "11516": 265, "11518": 265, "11520": 265, "11522": 265, "11524": 265, "11526": 265, "11528": 265, "11530": 265, "11532": 265, "11534": 265, "11536": 265, "11538": 265, "11540": 265, "11542": 265, "11544": 265, "11546": 265, "11548": 265, "11550": 265, "11552": 265, "11554": 265, "11556": 265, "11558": 265, "11560": 265, "11562": 265, "11564": 265, "11566": 265, "11568": 265, "11570": 265, "11572": 265, "11574": 265, "11576": 265, "11578": 265, "11580": 265, "11582": 265, "11584": 265, "11586": 265, "11588": 265, "11590": 265, "11592": 265, "11594": 265, "11596": 265, "11598": 265, "11600": 265, "11602": 265, "11604": 265, "11606": 265, "11608": 265, "11610": 265, "11612": 265, "11614": 265, "11616": 265, "11618": 265, "11620": 265, "11622": 265, "11624": 265, "11626": 265, "11628": 265, "11630": 265, "11634": 265, "11636": 265, "11638": 265, "11640": 265, "11642": 265, "11644": 265, "11646": 265, "11648": 265, "11650": 265, "11652": 265, "11654": 265, "11656": 265, "11658": 265, "11660": 265, "11662": 265, "11664": 265, "11666": 265, "11668": 265, "11670": 265, "11672": 265, "11674": 265, "11676": 265, "11678": 265, "11680": 265, "11682": 265, "11684": 265, "11686": 265, "11688": 265, "11690": 265, "11692": 265, "11694": 265, "11696": 265, "11698": 265, "11700": 265, "11702": 265, "11704": 265, "11706": 265, "11708": 265, "11710": 265, "11712": 265, "11714": 265, "11716": 265, "11718": 265, "11720": 265, "11722": 265, "11724": 265, "11726": 265, "11728": 265, "11730": 265, "11732": 265, "11734": 265, "11736": 265, "11738": 265, "11740": 265, "11742": 265, "11744": 265, "11746": 265, "11748": 265, "11750": 265, "11752": 265, "11754": 265, "11756": 265, "11758": 265, "11760": 265, "11762": 265, "11764": 265, "11766": 265, "11768": 265, "11770": 265, "11772": 265, "11774": 265, "11776": 265, "11778": 265, "11780": 265, "11782": 265, "11784": 265, "11786": 265, "11788": 265, "11790": 265, "11792": 265, "11794": 265, "11796": 265, "11798": 265, "11800": 265, "11802": 265, "11804": 265, "11806": 265, "11808": 265, "11810": 265, "11812": 265, "11814": 265, "11816": 265, "11818": 265, "11820": 265, "11822": 265, "11824": 265, "11826": 265, "11828": 265, "11830": 265, "11832": 265, "11834": 265, "11836": 265, "11838": 265, "11840": 265, "11842": 265, "11844": 265, "11846": 265, "11848": 265, "11850": 265, "11852": 265, "11854": 265, "11856": 265, "11858": 265, "11860": 265, "11862": 265, "11864": 265, "11866": 265, "11868": 265, "11870": 265, "11872": 265, "11874": 265, "11876": 265, "11878": 265, "11880": 265, "11882": 265, "11884": 265, "11886": 265, "11888": 265, "11890": 265, "11892": 265, "11894": 265, "11896": 265, "11898": 265, "11900": 265, "11902": 265, "11904": 265, "11906": 265, "11908": 265, "11910": 265, "11912": 265, "11914": 265, "11916": 265, "11918": 265, "11920": 265, "11922": 265, "11924": 265, "11926": 265, "11928": 265, "11930": 265, "11932": 265, "11934": 265, "11936": 265, "11938": 265, "11940": 265, "11942": 265, "11944": 265, "11946": 265, "11948": 265, "11950": 265, "11952": 265, "11954": 265, "11956": 265, "11958": 265, "11960": 265, "11962": 265, "11964": 265, "11966": 265, "11968": 265, "11970": 265, "11972": 265, "11974": 265, "11976": 265, "11978": 265, "11980": 265, "11982": 265, "11984": 265, "11986": 265, "11988": 265, "11990": 265, "11992": 265, "11994": 265, "11996": 265, "11998": 265, "12000": 265, "12002": 265, "12004": 265, "12006": 265, "12008": 265, "12010": 265, "12012": 265, "12014": 265, "12016": 265, "12018": 265, "12020": 265, "12022": 265, "12024": 265, "12026": 265, "12028": 265, "12030": 265, "12032": 265, "12034": 265, "12036": 265, "12038": 265, "12040": 265, "12042": 265, "12044": 265, "12046": 265, "12048": 265, "12050": 265, "12052": 265, "12054": 265, "12056": 265, "12058": 265, "12060": 265, "12062": 265, "12064": 265, "12066": 265, "12068": 265, "12070": 265, "12072": 265, "12074": 265, "12076": 265, "12078": 265, "12080": 265, "12082": 265, "12084": 265, "12086": 265, "12088": 265, "12090": 265, "12092": 265, "12094": 265, "12096": 265, "12098": 265, "12100": 265, "12102": 265, "12104": 265, "12106": 265, "12108": 265, "12110": 265, "12112": 265, "12114": 265, "12116": 265, "12118": 265, "12120": 265, "12122": 265, "12124": 265, "12126": 265, "12128": 265, "12130": 265, "12132": 265, "12134": 265, "12136": 265, "12138": 265, "12140": 265, "12142": 265, "12144": 265, "12146": 265, "12148": 265, "12150": 265, "12152": 265, "12154": 265, "12158": 265, "12160": 265, "12162": 265, "12164": 265, "12166": 265, "12168": 265, "12170": 265, "12172": 265, "12174": 265, "12176": 265, "12178": 265, "12180": 265, "12182": 265, "12184": 265, "12186": 265, "12188": 265, "12190": 265, "12192": 265, "12194": 265, "12196": 265, "12198": 265, "12200": 265, "12202": 265, "12204": 265, "12206": 265, "12208": 265, "12210": 265, "12212": 265, "12214": 265, "12216": 265, "12218": 265, "12220": 265, "12222": 265, "12224": 265, "12226": 265, "12228": 265, "12230": 265, "12232": 265, "12234": 265, "12236": 265, "12238": 265, "12240": 265, "12242": 265, "12244": 265, "12246": 265, "12248": 265, "12250": 265, "12252": 265, "12254": 265, "12256": 265, "12258": 265, "12260": 265, "12262": 265, "12264": 265, "12266": 265, "12268": 265, "12270": 265, "12272": 265, "12274": 265, "12276": 265, "12278": 265, "12280": 265, "12282": 265, "12284": 265, "12286": 265, "12288": 265, "12290": 265, "12292": 265, "12294": 265, "12296": 265, "12298": 265, "12300": 265, "12302": 265, "12304": 265, "12306": 265, "12308": 265, "12310": 265, "12312": 265, "12314": 265, "12316": 265, "12318": 265, "12320": 265, "12322": 265, "12324": 265, "12326": 265, "12328": 265, "12330": 265, "12332": 265, "12334": 265, "12336": 265, "12338": 265, "12340": 265, "12342": 265, "12344": 265, "12346": 265, "12348": 265, "12350": 265, "12352": 265, "12354": 265, "12356": 265, "12358": 265, "12360": 265, "12362": 265, "12364": 265, "12366": 265, "12368": 265, "12370": 265, "12372": 265, "12374": 265, "12376": 265, "12378": 265, "12380": 265, "12382": 265, "12384": 265, "12386": 265, "12388": 265, "12390": 265, "12392": 265, "12394": 265, "12396": 265, "12398": 265, "12400": 265, "12402": 265, "12404": 265, "12406": 265, "12408": 265, "12410": 265, "12412": 265, "12414": 265, "12416": 265, "12418": 265, "12420": 265, "12422": 265, "12424": 265, "12426": 265, "12428": 265, "12430": 265, "12432": 265, "12434": 265, "12436": 265, "12438": 265, "12440": 265, "12442": 265, "12444": 265, "12446": 265, "12448": 265, "12450": 265, "12452": 265, "12454": 265, "12456": 265, "12458": 265, "12460": 265, "12462": 265, "12464": 265, "12466": 265, "12468": 265, "12470": 265, "12472": 265, "12474": 265, "12476": 265, "12478": 265, "12480": 265, "12482": 265, "12484": 265, "12486": 265, "12488": 265, "12490": 265, "12492": 265, "12494": 265, "12496": 265, "12498": 265, "12500": 265, "12502": 265, "12504": 265, "12506": 265, "12508": 265, "12510": 265, "12512": 265, "12514": 265, "12516": 265, "12518": 265, "12520": 265, "12522": 265, "12524": 265, "12526": 265, "12528": 265, "12530": 265, "12532": 265, "12534": 265, "12536": 265, "12538": 265, "12540": 265, "12542": 265, "12544": 265, "12546": 265, "12548": 265, "12550": 265, "12552": 265, "12554": 265, "12556": 265, "12558": 265, "12560": 265, "12562": 265, "12564": 265, "12566": 265, "12568": 265, "12570": 265, "12572": 265, "12574": 265, "12576": 265, "12578": 265, "12580": 265, "12582": 265, "12584": 265, "12586": 265, "12588": 265, "12590": 265, "12592": 265, "12594": 265, "12596": 265, "12598": 265, "12600": 265, "12602": 265, "12604": 265, "12606": 265, "12608": 265, "12610": 265, "12612": 265, "12614": 265, "12616": 265, "12618": 265, "12620": 265, "12622": 265, "12624": 265, "12626": 265, "12628": 265, "12630": 265, "12632": 265, "12634": 265, "12636": 265, "12638": 265, "12640": 265, "12642": 265, "12644": 265, "12646": 265, "12648": 265, "12650": 265, "12652": 265, "12654": 265, "12656": 265, "12658": 265, "12660": 265, "12662": 265, "12664": 265, "12666": 265, "12668": 265, "12670": 265, "12672": 265, "12674": 265, "12676": 265, "12678": 265, "12680": 265, "12682": 265, "12684": 265, "12686": 265, "12688": 265, "12690": 265, "12692": 265, "12694": 265, "12696": 265, "12698": 265, "12700": 265, "12702": 265, "12704": 265, "12706": 265, "12708": 265, "12710": 265, "12712": 265, "12714": 265, "12716": 265, "12718": 265, "12720": 265, "12722": 265, "12724": 265, "12726": 265, "12728": 265, "12730": 265, "12732": 265, "12734": 265, "12736": 265, "12738": 265, "12740": 265, "12742": 265, "12744": 265, "12746": 265, "12748": 265, "12750": 265, "12752": 265, "12754": 265, "12756": 265, "12758": 265, "12760": 265, "12762": 265, "12764": 265, "12766": 265, "12768": 265, "12770": 265, "12772": 265, "12774": 265, "12776": 265, "12778": 265, "12780": 265, "12782": 265, "12784": 265, "12786": 265, "12788": 265, "12790": 265, "12792": 265, "12794": 265, "12796": 265, "12798": 265, "12800": 265, "12802": 265, "12804": 265, "12806": 265, "12808": 265, "12810": 265, "12812": 265, "12814": 265, "12816": 265, "12818": 265, "12820": 265, "12822": 265, "12824": 265, "12826": 265, "12828": 265, "12830": 265, "12832": 265, "12834": 265, "12836": 265, "12838": 265, "12840": 265, "12842": 265, "12844": 265, "12846": 265, "12848": 265, "12850": 265, "12852": 265, "12854": 265, "12856": 265, "12858": 265, "12860": 265, "12862": 265, "12864": 265, "12866": 265, "12868": 265, "12870": 265, "12872": 265, "12874": 265, "12876": 265, "12878": 265, "12880": 265, "12882": 265, "12884": 265, "12886": 265, "12888": 265, "12890": 265, "12892": 265, "12894": 265, "12896": 265, "12898": 265, "12900": 265, "12902": 265, "12904": 265, "12906": 265, "12908": 265, "12910": 265, "12912": 265, "12914": 265, "12916": 265, "12918": 265, "12920": 265, "12922": 265, "12924": 265, "12926": 265, "12928": 265, "12930": 265, "12932": 265, "12934": 265, "12936": 265, "12938": 265, "12940": 265, "12942": 265, "12944": 265, "12946": 265, "12948": 265, "12950": 265, "12952": 265, "12954": 265, "12956": 265, "12958": 265, "12960": 265, "12962": 265, "12964": 265, "12966": 265, "12968": 265, "12970": 265, "12972": 265, "12974": 265, "12976": 265, "12978": 265, "12980": 265, "12982": 265, "12984": 265, "12986": 265, "12988": 265, "12990": 265, "12992": 265, "12994": 265, "12996": 265, "12998": 265, "13000": 265, "13002": 265, "13004": 265, "13006": 265, "13008": 265, "13010": 265, "13012": 265, "13014": 265, "13016": 265, "13018": 265, "13020": 265, "13022": 265, "13024": 265, "13026": 265, "13028": 265, "13030": 265, "13032": 265, "13034": 265, "13036": 265, "13038": 265, "13040": 265, "13042": 265, "13044": 265, "13046": 265, "13048": 265, "13050": 265, "13052": 265, "13054": 265, "13056": 265, "13058": 265, "13060": 265, "13062": 265, "13064": 265, "13066": 265, "13068": 265, "13070": 265, "13072": 265, "13074": 265, "13076": 265, "13078": 265, "13080": 265, "13082": 265, "13084": 265, "13086": 265, "13088": 265, "13090": 265, "13092": 265, "13094": 265, "13096": 265, "13098": 265, "13100": 265, "13102": 265, "13104": 265, "13106": 265, "13108": 265, "13110": 265, "13112": 265, "13114": 265, "13116": 265, "13118": 265, "13120": 265, "13122": 265, "13124": 265, "13126": 265, "13128": 265, "13130": 265, "13132": 265, "13134": 265, "13136": 265, "13138": 265, "13140": 265, "13142": 265, "13144": 265, "13146": 265, "13148": 265, "13150": 265, "13152": 265, "13154": 265, "13156": 265, "13158": 265, "13160": 265, "13162": 265, "13164": 265, "13166": 265, "13168": 265, "13170": 265, "13172": 265, "13174": 265, "13176": 265, "13178": 265, "13180": 265, "13182": 265, "13184": 265, "13186": 265, "13188": 265, "13190": 265, "13192": 265, "13194": 265, "13196": 265, "13198": 265, "13200": 265, "13202": 265, "13204": 265, "13206": 265, "13208": 265, "13210": 265, "13212": 265, "13214": 265, "13216": 265, "13218": 265, "13220": 265, "13222": 265, "13224": 265, "13226": 265, "13228": 265, "13230": 265, "13232": 265, "13234": 265, "13236": 265, "13238": 265, "13240": 265, "13242": 265, "13244": 265, "13246": 265, "13248": 265, "13250": 265, "13252": 265, "13254": 265, "13256": 265, "13258": 265, "13260": 265, "13262": 265, "13264": 265, "13266": 265, "13268": 265, "13270": 265, "13272": 265, "13274": 265, "13276": 265, "13278": 265, "13280": 265, "13282": 265, "13284": 265, "13286": 265, "13288": 265, "13290": 265, "13292": 265, "13294": 265, "13296": 265, "13298": 265, "13300": 265, "13302": 265, "13304": 265, "13306": 265, "13308": 265, "13310": 265, "13312": 265, "13314": 265, "13316": 265, "13318": 265, "13320": 265, "13322": 265, "13324": 265, "13326": 265, "13328": 265, "13330": 265, "13332": 265, "13334": 265, "13336": 265, "13338": 265, "13340": 265, "13342": 265, "13344": 265, "13346": 265, "13348": 265, "13350": 265, "13352": 265, "13354": 265, "13356": 265, "13358": 265, "13360": 265, "13362": 265, "13364": 265, "13366": 265, "13368": 265, "13370": 265, "13372": 265, "13374": 265, "13376": 265, "13378": 265, "13380": 265, "13382": 265, "13384": 265, "13386": 265, "13388": 265, "13390": 265, "13392": 265, "13394": 265, "13396": 265, "13398": 265, "13400": 265, "13402": 265, "13404": 265, "13406": 265, "13408": 265, "13410": 265, "13412": 265, "13414": 265, "13416": 265, "13418": 265, "13420": 265, "13422": 265, "13424": 265, "13426": 265, "13428": 265, "13430": 265, "13432": 265, "13434": 265, "13436": 265, "13438": 265, "13440": 265, "13442": 265, "13444": 265, "13446": 265, "13448": 265, "13450": 265, "13452": 265, "13454": 265, "13456": 265, "13458": 265, "13460": 265, "13462": 265, "13464": 265, "13466": 265, "13468": 265, "13470": 265, "13472": 265, "13474": 265, "13476": 265, "13478": 265, "13480": 265, "13482": 265, "13484": 265, "13486": 265, "13488": 265, "13490": 265, "13492": 265, "13494": 265, "13496": 265, "13498": 265, "13502": 265, "13504": 265, "13506": 265, "13508": 265, "13510": 265, "13512": 265, "13514": 265, "13516": 265, "13518": 265, "13520": 265, "13522": 265, "13524": 265, "13526": 265, "13528": 265, "13530": 265, "13532": 265, "13534": 265, "13536": 265, "13538": 265, "13540": 265, "13542": 265, "13544": 265, "13546": 265, "13548": 265, "13550": 265, "13552": 265, "13554": 265, "13556": 265, "13558": 265, "13560": 265, "13562": 265, "13564": 265, "13566": 265, "13568": 265, "13570": 265, "13572": 265, "13574": 265, "13576": 265, "13578": 265, "13580": 265, "13582": 265, "13584": 265, "13586": 265, "13588": 265, "13590": 265, "13592": 265, "13594": 265, "13596": 265, "13598": 265, "13600": 265, "13602": 265, "13604": 265, "13606": 265, "13608": 265, "13610": 265, "13612": 265, "13614": 265, "13616": 265, "13618": 265, "13620": 265, "13622": 265, "13624": 265, "13626": 265, "13628": 265, "13630": 265, "13632": 265, "13634": 265, "13636": 265, "13638": 265, "13640": 265, "13642": 265, "13644": 265, "13646": 265, "13648": 265, "13650": 265, "13652": 265, "13654": 265, "13656": 265, "13658": 265, "13660": 265, "13662": 265, "13664": 265, "13666": 265, "13668": 265, "13670": 265, "13672": 265, "13674": 265, "13676": 265, "13678": 265, "13680": 265, "13682": 265, "13684": 265, "13686": 265, "13688": 265, "13690": 265, "13692": 265, "13694": 265, "13696": 265, "13698": 265, "13700": 265, "13702": 265, "13704": 265, "13706": 265, "13708": 265, "13710": 265, "13712": 265, "13714": 265, "13716": 265, "13718": 265, "13720": 265, "13722": 265, "13724": 265, "13726": 265, "13728": 265, "13730": 265, "13732": 265, "13734": 265, "13736": 265, "13738": 265, "13740": 265, "13742": 265, "13744": 265, "13746": 265, "13748": 265, "13750": 265, "13752": 265, "13754": 265, "13756": 265, "13758": 265, "13760": 265, "13762": 265, "13764": 265, "13766": 265, "13768": 265, "13770": 265, "13772": 265, "13774": 265, "13776": 265, "13778": 265, "13780": 265, "13782": 265, "13784": 265, "13786": 265, "13788": 265, "13790": 265, "13792": 265, "13794": 265, "13796": 265, "13798": 265, "13800": 265, "13802": 265, "13804": 265, "13806": 265, "13808": 265, "13810": 265, "13812": 265, "13814": 265, "13816": 265, "13818": 265, "13820": 265, "13822": 265, "13824": 265, "13826": 265, "13828": 265, "13830": 265, "13832": 265, "13834": 265, "13836": 265, "13838": 265, "13840": 265, "13842": 265, "13844": 265, "13846": 265, "13848": 265, "13850": 265, "13852": 265, "13854": 265, "13856": 265, "13858": 265, "13860": 265, "13862": 265, "13864": 265, "13866": 265, "13868": 265, "13870": 265, "13872": 265, "13874": 265, "13876": 265, "13878": 265, "13880": 265, "13882": 265, "13884": 265, "13886": 265, "13888": 265, "13890": 265, "13892": 265, "13894": 265, "13896": 265, "13898": 265, "13900": 265, "13902": 265, "13904": 265, "13906": 265, "13908": 265, "13910": 265, "13912": 265, "13914": 265, "13916": 265, "13918": 265, "13920": 265, "13922": 265, "13924": 265, "13926": 265, "13928": 265, "13930": 265, "13932": 265, "13934": 265, "13936": 265, "13938": 265, "13940": 265, "13942": 265, "13944": 265, "13946": 265, "13948": 265, "13950": 265, "13952": 265, "13954": 265, "13956": 265, "13958": 265, "13960": [265, 1031], "13962": 265, "13964": 265, "13966": 265, "13968": 265, "13970": 265, "13972": 265, "13974": 265, "13976": 265, "13978": 265, "13980": 265, "13982": 265, "13984": 265, "13986": 265, "13988": 265, "13990": 265, "13992": 265, "13994": 265, "13996": 265, "13998": 265, "14000": 265, "14002": 265, "14004": 265, "14006": 265, "14008": 265, "14010": 265, "14012": 265, "14014": 265, "14016": 265, "14018": 265, "14020": 265, "14022": 265, "14024": 265, "14026": 265, "14028": 265, "14030": 265, "14032": 265, "14034": 265, "14036": 265, "14038": 265, "14040": 265, "14042": 265, "14044": 265, "14046": 265, "14048": 265, "14050": 265, "14052": 265, "14054": 265, "14056": 265, "14058": 265, "14060": 265, "14062": 265, "14064": 265, "14066": 265, "14068": 265, "14070": 265, "14072": 265, "14074": 265, "14076": 265, "14078": 265, "14080": 265, "14082": 265, "14084": 265, "14086": 265, "14088": 265, "14090": 265, "14092": 265, "14094": 265, "14096": 265, "14098": 265, "14100": 265, "14102": 265, "14104": 265, "14106": 265, "14108": 265, "14110": 265, "14112": 265, "14114": 265, "14116": 265, "14118": 265, "14120": 265, "14122": 265, "14124": 265, "14126": 265, "14128": 265, "14130": 265, "14132": 265, "14134": 265, "14136": 265, "14138": 265, "14140": 265, "14142": 265, "14144": 265, "14146": 265, "14148": 265, "14150": 265, "14152": 265, "14154": 265, "14156": 265, "14158": 265, "14160": 265, "14162": 265, "14164": 265, "14166": 265, "14168": 265, "14170": 265, "14172": 265, "14174": 265, "14176": 265, "14178": 265, "14180": 265, "14182": 265, "14184": 265, "14186": 265, "14188": 265, "14190": 265, "14192": 265, "14194": 265, "14196": 265, "14198": 265, "14200": 265, "14202": 265, "14204": 265, "14206": 265, "14208": 265, "14210": 265, "14212": 265, "14214": 265, "14216": 265, "14218": 265, "14220": 265, "14222": 265, "14224": 265, "14226": 265, "14228": 265, "14230": 265, "14232": 265, "14234": 265, "14236": 265, "14238": 265, "14240": 265, "14242": 265, "14244": 265, "14246": 265, "14248": 265, "14250": 265, "14252": 265, "14254": 265, "14256": 265, "14258": 265, "14260": 265, "14262": 265, "14264": 265, "14266": 265, "14268": 265, "14270": 265, "14272": 265, "14274": 265, "14276": 265, "14278": 265, "14280": 265, "14282": 265, "14284": 265, "14286": 265, "14288": 265, "14290": 265, "14292": 265, "14294": 265, "14296": 265, "14298": 265, "14300": 265, "14302": 265, "14304": 265, "14306": 265, "14308": 265, "14310": 265, "14312": 265, "14314": 265, "14316": 265, "14318": 265, "14320": 265, "14322": 265, "14324": 265, "14326": 265, "14328": 265, "14330": 265, "14332": 265, "14334": 265, "14336": 265, "14338": 265, "14340": 265, "14342": 265, "14344": 265, "14346": 265, "14348": 265, "14350": 265, "14352": 265, "14354": 265, "14356": 265, "14358": 265, "14360": 265, "14362": 265, "14364": 265, "14366": 265, "14368": 265, "14370": 265, "14372": 265, "14374": 265, "14376": 265, "14378": 265, "14380": 265, "14382": 265, "14384": 265, "14388": 265, "14390": 265, "14392": 265, "14394": 265, "14396": 265, "14398": 265, "14400": 265, "14402": 265, "14404": 265, "14406": 265, "14408": 265, "14410": 265, "14412": 265, "14414": 265, "14416": 265, "14418": 265, "14420": 265, "14422": 265, "14424": 265, "14426": 265, "14428": 265, "14430": 265, "14432": 265, "14434": 265, "14436": 265, "14438": 265, "14440": 265, "14442": 265, "14444": 265, "14446": 265, "14448": 265, "14450": 265, "14452": 265, "14454": 265, "14456": 265, "14458": 265, "14460": 265, "14462": 265, "14464": 265, "14466": 265, "14468": 265, "14470": 265, "14472": 265, "14474": 265, "14476": 265, "14478": 265, "14480": 265, "14482": 265, "14484": 265, "14486": 265, "14488": 265, "14490": 265, "14492": 265, "14494": 265, "14496": 265, "14498": 265, "14500": 265, "14502": 265, "14504": 265, "14506": 265, "14508": 265, "14510": 265, "14512": 265, "14514": 265, "14516": 265, "14518": 265, "14520": 265, "14522": 265, "14524": 265, "14526": 265, "14528": 265, "14530": 265, "14532": 265, "14534": 265, "14536": 265, "14538": 265, "14540": 265, "14542": 265, "14544": 265, "14546": 265, "14548": 265, "14550": 265, "14552": 265, "14554": 265, "14556": 265, "14558": 265, "14560": 265, "14562": 265, "14564": 265, "14566": 265, "14568": 265, "14570": 265, "14572": 265, "14574": 265, "14576": 265, "14578": 265, "14580": 265, "14582": 265, "14584": 265, "14586": 265, "14588": 265, "14590": 265, "14592": 265, "14594": 265, "14596": 265, "14598": 265, "14600": 265, "14602": 265, "14604": 265, "14606": 265, "14608": 265, "14610": 265, "14612": 265, "14614": 265, "14616": 265, "14618": 265, "14620": 265, "14622": 265, "14624": 265, "14626": 265, "14628": 265, "14630": 265, "14632": 265, "14634": 265, "14636": 265, "14638": 265, "14640": 265, "14642": 265, "14644": 265, "14646": 265, "14648": 265, "14650": 265, "14652": 265, "14654": 265, "14656": 265, "14658": 265, "14660": 265, "14662": 265, "14664": 265, "14666": 265, "14668": 265, "14670": 265, "14672": 265, "14674": 265, "14676": 265, "14678": 265, "14680": 265, "14682": 265, "14684": 265, "14686": 265, "14688": 265, "14690": 265, "14692": 265, "14694": 265, "14696": 265, "14698": 265, "14700": 265, "14702": 265, "14704": 265, "14706": 265, "14708": 265, "14710": 265, "14712": 265, "14714": 265, "14716": 265, "14718": 265, "14720": 265, "14722": 265, "14724": 265, "14726": 265, "14728": 265, "14730": 265, "14732": 265, "14734": 265, "14736": 265, "14738": 265, "14740": 265, "14742": 265, "14744": 265, "14746": 265, "14748": 265, "14750": 265, "14752": 265, "14754": 265, "14756": 265, "14758": 265, "14760": 265, "14762": 265, "14764": 265, "14766": 265, "14768": 265, "14770": 265, "14772": 265, "14774": 265, "14776": 265, "14778": 265, "14780": 265, "14782": 265, "14784": 265, "14786": 265, "14788": 265, "14790": 265, "14792": 265, "14794": 265, "14796": 265, "14798": 265, "14800": 265, "14802": 265, "14804": 265, "14806": 265, "14808": 265, "14810": 265, "14812": 265, "14814": 265, "14816": 265, "14818": 265, "14820": 265, "14822": 265, "14824": 265, "14826": 265, "14828": 265, "14830": 265, "14832": 265, "14834": 265, "14836": 265, "14838": 265, "14840": 265, "14842": 265, "14844": 265, "14846": 265, "14848": 265, "14850": 265, "14852": 265, "14854": 265, "14856": 265, "14858": 265, "14860": 265, "14862": 265, "14864": 265, "14866": 265, "14868": 265, "14870": 265, "14872": 265, "14874": 265, "14876": 265, "14878": 265, "14880": 265, "14882": [265, 643], "14884": 265, "14886": 265, "14888": 265, "14890": 265, "14892": 265, "14894": 265, "14896": 265, "14898": 265, "14900": 265, "14902": 265, "14904": 265, "14906": 265, "14908": 265, "14910": 265, "14912": 265, "14914": 265, "14916": 265, "14918": 265, "14920": 265, "14922": 265, "14924": 265, "14926": 265, "14928": 265, "14930": 265, "14932": 265, "14934": 265, "14936": 265, "14938": 265, "14940": 265, "14942": 265, "14944": 265, "14946": 265, "14948": 265, "14950": 265, "14952": 265, "14954": 265, "14956": 265, "14958": 265, "14960": 265, "14962": 265, "14964": 265, "14966": 265, "14968": 265, "14970": 265, "14972": 265, "14974": 265, "14976": 265, "14978": 265, "14980": 265, "14982": 265, "14984": 265, "14986": 265, "14988": 265, "14990": [265, 314], "14992": 265, "14994": 265, "14996": 265, "14998": 265, "15002": 265, "15004": 265, "15006": 265, "15008": 265, "15010": 265, "15012": 265, "15014": 265, "15016": 265, "15018": 265, "15020": 265, "15022": 265, "15024": 265, "15026": 265, "15028": 265, "15030": 265, "15032": 265, "15034": 265, "15036": 265, "15038": 265, "15040": 265, "15042": 265, "15044": 265, "15046": 265, "15048": 265, "15050": 265, "15052": 265, "15054": 265, "15056": 265, "15058": 265, "15060": 265, "15062": 265, "15064": 265, "15066": 265, "15068": 265, "15070": 265, "15072": 265, "15074": 265, "15076": 265, "15078": 265, "15080": 265, "15082": 265, "15084": 265, "15086": 265, "15088": 265, "15090": 265, "15092": 265, "15094": 265, "15096": 265, "15098": 265, "15100": 265, "15102": 265, "15104": 265, "15106": 265, "15108": 265, "15110": 265, "15112": 265, "15114": 265, "15116": 265, "15118": 265, "15120": 265, "15122": 265, "15124": 265, "15126": 265, "15128": 265, "15130": 265, "15132": 265, "15134": 265, "15136": 265, "15138": 265, "15140": 265, "15142": 265, "15144": 265, "15146": 265, "15148": 265, "15150": 265, "15152": 265, "15154": 265, "15156": 265, "15158": 265, "15160": 265, "15162": 265, "15164": 265, "15166": 265, "15168": 265, "15170": 265, "15172": 265, "15174": 265, "15176": 265, "15178": 265, "15180": 265, "15182": 265, "15184": 265, "15186": 265, "15188": 265, "15190": 265, "15192": 265, "15194": 265, "15196": 265, "15198": 265, "15200": 265, "15202": 265, "15204": 265, "15206": 265, "15208": 265, "15210": 265, "15212": 265, "15214": 265, "15216": 265, "15218": 265, "15220": 265, "15222": 265, "15224": 265, "15226": 265, "15228": 265, "15230": 265, "15232": 265, "15234": 265, "15236": 265, "15238": 265, "15240": 265, "15242": 265, "15244": [265, 1077], "15246": 265, "15248": 265, "15250": 265, "15252": 265, "15254": 265, "15256": 265, "15258": 265, "15260": 265, "15262": 265, "15264": 265, "15266": 265, "15268": 265, "15270": 265, "15272": 265, "15274": 265, "15276": 265, "15278": 265, "15280": 265, "15282": 265, "15284": 265, "15286": 265, "15288": 265, "15290": 265, "15292": 265, "15294": 265, "15296": 265, "15298": 265, "15300": 265, "15302": 265, "15304": 265, "15306": 265, "15308": 265, "15310": 265, "15312": 265, "15314": 265, "15316": 265, "15318": 265, "15320": 265, "15322": 265, "15324": 265, "15326": 265, "15328": 265, "15330": 265, "15332": 265, "15334": 265, "15336": 265, "15338": 265, "15340": 265, "15342": 265, "15344": 265, "15346": 265, "15348": 265, "15350": 265, "15352": 265, "15354": 265, "15356": 265, "15358": 265, "15360": 265, "15362": 265, "15364": 265, "15366": 265, "15368": 265, "15370": 265, "15372": 265, "15374": 265, "15376": 265, "15378": 265, "15380": 265, "15382": 265, "15384": 265, "15386": 265, "15388": 265, "15390": 265, "15392": 265, "15394": 265, "15396": 265, "15398": 265, "15400": 265, "15402": 265, "15404": 265, "15406": 265, "15408": 265, "15410": 265, "15412": 265, "15414": 265, "15416": 265, "15418": 265, "15420": 265, "15422": 265, "15424": 265, "15426": 265, "15428": 265, "15430": 265, "15432": 265, "15434": 265, "15436": 265, "15438": 265, "15440": 265, "15442": 265, "15444": 265, "15446": 265, "15448": 265, "15450": 265, "15452": 265, "15454": 265, "15456": 265, "15458": 265, "15460": 265, "15462": 265, "15464": 265, "15466": 265, "15468": 265, "15470": 265, "15472": 265, "15474": 265, "15476": 265, "15478": 265, "15480": 265, "15482": 265, "15484": 265, "15486": 265, "15488": 265, "15490": 265, "15492": 265, "15494": 265, "15496": 265, "15498": 265, "15500": 265, "15502": 265, "15504": 265, "15506": 265, "15508": 265, "15510": 265, "15512": 265, "15514": 265, "15516": 265, "15518": 265, "15520": 265, "15522": 265, "15524": 265, "15526": 265, "15528": 265, "15530": 265, "15532": 265, "15534": 265, "15536": 265, "15538": 265, "15540": 265, "15542": 265, "15544": 265, "15546": 265, "15548": 265, "15550": 265, "15552": 265, "15554": 265, "15556": 265, "15558": 265, "15560": 265, "15562": 265, "15564": 265, "15566": 265, "15568": 265, "15570": 265, "15572": 265, "15574": 265, "15576": 265, "15578": 265, "15580": 265, "15582": 265, "15584": 265, "15586": 265, "15588": 265, "15590": 265, "15592": 265, "15594": 265, "15596": 265, "15598": 265, "15600": 265, "15602": 265, "15604": 265, "15606": 265, "15608": 265, "15610": 265, "15612": 265, "15614": 265, "15616": 265, "15618": 265, "15620": 265, "15622": 265, "15624": 265, "15626": 265, "15628": 265, "15630": 265, "15632": 265, "15634": 265, "15636": 265, "15638": 265, "15640": 265, "15642": 265, "15644": 265, "15646": 265, "15648": 265, "15650": 265, "15652": 265, "15654": 265, "15656": 265, "15658": 265, "15660": 265, "15662": 265, "15664": 265, "15666": 265, "15668": 265, "15670": 265, "15672": 265, "15674": 265, "15676": 265, "15678": 265, "15680": 265, "15682": 265, "15684": 265, "15686": 265, "15688": 265, "15690": 265, "15692": 265, "15694": 265, "15696": 265, "15698": 265, "15700": 265, "15702": 265, "15704": 265, "15706": 265, "15708": 265, "15710": 265, "15712": 265, "15714": 265, "15716": 265, "15718": 265, "15720": 265, "15722": 265, "15724": 265, "15726": 265, "15728": 265, "15730": 265, "15732": 265, "15734": 265, "15736": 265, "15738": 265, "15740": 265, "15742": 265, "15744": 265, "15746": 265, "15748": 265, "15750": 265, "15752": 265, "15754": 265, "15756": 265, "15758": 265, "15760": 265, "15762": 265, "15764": 265, "15766": 265, "15768": 265, "15770": 265, "15772": 265, "15774": 265, "15776": 265, "15778": 265, "15780": 265, "15782": 265, "15784": 265, "15786": 265, "15788": 265, "15790": 265, "15792": 265, "15794": 265, "15796": 265, "15798": 265, "15800": 265, "15802": 265, "15804": 265, "15806": 265, "15808": 265, "15810": 265, "15812": 265, "15814": 265, "15816": 265, "15818": 265, "15820": 265, "15822": 265, "15824": 265, "15826": 265, "15828": 265, "15830": 265, "15832": 265, "15834": 265, "15836": 265, "15838": 265, "15840": 265, "15842": 265, "15844": 265, "15846": 265, "15848": 265, "15850": 265, "15852": 265, "15854": 265, "15856": 265, "15858": 265, "15860": 265, "15862": 265, "15864": 265, "15866": 265, "15868": 265, "15870": 265, "15872": 265, "15874": 265, "15876": 265, "15878": 265, "15880": 265, "15882": 265, "15884": 265, "15886": 265, "15888": 265, "15890": 265, "15892": 265, "15894": 265, "15896": 265, "15898": 265, "15900": 265, "15902": 265, "15904": 265, "15906": 265, "15908": 265, "15910": 265, "15912": 265, "15914": 265, "15916": 265, "15918": 265, "15920": 265, "15922": 265, "15924": 265, "15926": 265, "15928": 265, "15930": 265, "15932": 265, "15934": 265, "15936": 265, "15938": 265, "15940": 265, "15942": 265, "15944": 265, "15946": 265, "15948": 265, "15950": 265, "15952": 265, "15954": 265, "15956": 265, "15958": 265, "15960": 265, "15962": 265, "15964": 265, "15966": 265, "15968": 265, "15970": 265, "15972": 265, "15974": 265, "15976": 265, "15978": 265, "15980": 265, "15982": 265, "15984": 265, "15986": 265, "15988": 265, "15990": 265, "15992": 265, "15994": 265, "15996": 265, "15998": 265, "16000": 265, "16002": 265, "16004": 265, "16006": 265, "16008": 265, "16010": 265, "16012": 265, "16014": 265, "16016": 265, "16018": 265, "16020": 265, "16022": 265, "16024": 265, "16026": 265, "16028": 265, "16030": 265, "16032": 265, "16034": 265, "16036": 265, "16038": 265, "16040": 265, "16042": 265, "16044": 265, "16046": 265, "16048": 265, "16050": 265, "16052": 265, "16054": 265, "16056": 265, "16058": 265, "16060": 265, "16062": 265, "16064": 265, "16066": 265, "16068": 265, "16070": 265, "16072": 265, "16074": 265, "16076": 265, "16078": 265, "16080": 265, "16082": 265, "16084": 265, "16086": 265, "16088": 265, "16090": 265, "16092": 265, "16094": 265, "16096": 265, "16098": 265, "16100": 265, "16102": 265, "16104": 265, "16106": 265, "16108": 265, "16110": 265, "16112": 265, "16114": 265, "16116": 265, "16118": 265, "16120": 265, "16122": 265, "16124": 265, "16126": 265, "16128": 265, "16130": 265, "16132": 265, "16134": 265, "16136": 265, "16138": 265, "16140": 265, "16142": 265, "16144": 265, "16146": 265, "16148": 265, "16150": 265, "16152": 265, "16154": 265, "16156": 265, "16158": 265, "16160": 265, "16162": 265, "16164": 265, "16166": 265, "16168": 265, "16170": 265, "16172": 265, "16174": 265, "16176": 265, "16178": 265, "16180": 265, "16182": 265, "16184": 265, "16186": 265, "16188": 265, "16190": 265, "16192": 265, "16194": 265, "16196": 265, "16198": 265, "16200": 265, "16202": 265, "16204": 265, "16206": 265, "16208": 265, "16210": 265, "16212": 265, "16214": 265, "16216": 265, "16218": 265, "16220": 265, "16222": 265, "16224": 265, "16226": 265, "16228": 265, "16230": 265, "16232": 265, "16234": 265, "16236": 265, "16238": 265, "16240": 265, "16242": 265, "16244": 265, "16246": 265, "16248": 265, "16250": 265, "16252": 265, "16254": 265, "16256": 265, "16258": 265, "16260": 265, "16262": 265, "16264": 265, "16266": 265, "16268": 265, "16270": 265, "16272": 265, "16274": 265, "16276": 265, "16278": 265, "16280": 265, "16282": 265, "16284": 265, "16286": 265, "16288": 265, "16290": 265, "16292": 265, "16294": 265, "16296": 265, "16298": 265, "16300": 265, "16302": 265, "16304": 265, "16306": 265, "16308": 265, "16310": 265, "16312": 265, "16314": 265, "16316": 265, "16318": 265, "16320": 265, "16322": 265, "16324": 265, "16326": 265, "16328": 265, "16330": 265, "16332": 265, "16334": 265, "16336": 265, "16338": 265, "16340": 265, "16342": 265, "16344": 265, "16346": 265, "16348": 265, "16350": 265, "16352": 265, "16354": 265, "16356": 265, "16358": 265, "16360": 265, "16362": 265, "16364": 265, "16366": 265, "16368": 265, "16370": 265, "16372": 265, "16374": 265, "16376": 265, "16378": 265, "16380": 265, "16382": 265, "16386": 265, "16388": 265, "16390": 265, "16392": 265, "16394": 265, "16396": 265, "16398": 265, "16400": 265, "16402": 265, "16404": 265, "16406": 265, "16408": 265, "16410": 265, "16412": 265, "16414": 265, "16416": 265, "16418": 265, "16420": 265, "16422": 265, "16424": 265, "16426": 265, "16428": 265, "16430": 265, "16432": 265, "16434": 265, "16436": 265, "16438": 265, "16440": 265, "16442": 265, "16444": 265, "16446": 265, "16448": 265, "16450": 265, "16452": 265, "16454": 265, "16456": 265, "16458": 265, "16460": 265, "16462": 265, "16464": 265, "16466": 265, "16468": 265, "16470": 265, "16472": 265, "16474": 265, "16476": 265, "16478": 265, "16480": 265, "16482": 265, "16484": 265, "16486": 265, "16488": 265, "16490": 265, "16492": 265, "16494": 265, "16496": 265, "16498": 265, "16500": 265, "16502": 265, "16504": 265, "16506": 265, "16508": 265, "16510": 265, "16512": 265, "16514": 265, "16516": 265, "16518": 265, "16520": 265, "16522": 265, "16524": 265, "16526": 265, "16528": 265, "16530": 265, "16532": 265, "16534": 265, "16536": 265, "16538": 265, "16540": 265, "16542": 265, "16544": 265, "16546": 265, "16548": 265, "16550": 265, "16552": 265, "16554": 265, "16556": 265, "16558": 265, "16560": 265, "16562": 265, "16564": 265, "16566": 265, "16568": 265, "16570": 265, "16572": 265, "16574": 265, "16576": 265, "16578": 265, "16580": 265, "16582": 265, "16584": 265, "16586": 265, "16588": 265, "16590": 265, "16592": 265, "16594": 265, "16596": 265, "16598": 265, "16600": 265, "16602": 265, "16604": 265, "16606": 265, "16608": 265, "16610": 265, "16612": 265, "16614": 265, "16616": 265, "16618": 265, "16620": 265, "16622": 265, "16624": 265, "16626": 265, "16628": 265, "16630": 265, "16632": 265, "16634": 265, "16636": 265, "16638": 265, "16640": 265, "16642": 265, "16644": 265, "16646": 265, "16648": 265, "16650": 265, "16652": 265, "16654": 265, "16656": 265, "16658": 265, "16660": 265, "16662": 265, "16664": 265, "16666": 265, "16668": 265, "16670": 265, "16672": 265, "16674": 265, "16676": 265, "16678": 265, "16680": 265, "16682": 265, "16684": 265, "16686": 265, "16688": 265, "16690": 265, "16692": 265, "16694": 265, "16696": 265, "16698": 265, "16700": 265, "16702": 265, "16704": 265, "16706": 265, "16708": 265, "16710": 265, "16712": 265, "16714": 265, "16716": 265, "16718": 265, "16720": 265, "16722": 265, "16724": 265, "16726": 265, "16728": 265, "16730": 265, "16732": 265, "16734": 265, "16736": 265, "16738": 265, "16740": 265, "16742": 265, "16744": 265, "16746": 265, "16748": 265, "16750": 265, "16752": 265, "16754": 265, "16756": 265, "16758": 265, "16760": 265, "16762": 265, "16764": 265, "16766": 265, "16768": 265, "16770": 265, "16772": 265, "16774": 265, "16776": 265, "16778": 265, "16780": 265, "16782": 265, "16784": 265, "16786": 265, "16788": 265, "16790": 265, "16792": 265, "16794": 265, "16796": 265, "16798": 265, "16800": 265, "16802": 265, "16804": 265, "16806": 265, "16808": 265, "16810": 265, "16812": 265, "16814": 265, "16816": 265, "16818": 265, "16820": 265, "16822": 265, "16824": 265, "16826": 265, "16828": 265, "16830": 265, "16832": 265, "16834": 265, "16836": 265, "16838": 265, "16840": 265, "16842": 265, "16844": 265, "16846": 265, "16848": 265, "16850": 265, "16852": 265, "16854": 265, "16856": 265, "16858": 265, "16860": 265, "16862": 265, "16864": 265, "16866": 265, "16868": 265, "16870": 265, "16872": 265, "16874": 265, "16876": 265, "16878": 265, "16880": 265, "16882": 265, "16884": 265, "16886": 265, "16888": 265, "16890": 265, "16892": 265, "16894": 265, "16896": 265, "16898": 265, "16900": 265, "16902": 265, "16904": 265, "16906": 265, "16908": 265, "16910": 265, "16912": 265, "16914": 265, "16916": 265, "16918": 265, "16920": 265, "16922": 265, "16924": 265, "16926": 265, "16928": 265, "16930": 265, "16932": 265, "16934": 265, "16936": 265, "16938": 265, "16940": 265, "16942": 265, "16944": 265, "16946": 265, "16948": 265, "16950": 265, "16952": 265, "16954": 265, "16956": 265, "16958": 265, "16960": 265, "16962": 265, "16964": 265, "16966": 265, "16968": 265, "16970": 265, "16972": 265, "16974": 265, "16976": 265, "16978": 265, "16980": 265, "16982": 265, "16984": 265, "16986": 265, "16988": 265, "16990": 265, "16992": 265, "16994": 265, "16996": 265, "16998": 265, "17000": 265, "17002": 265, "17004": 265, "17006": 265, "17008": 265, "17010": 265, "17012": 265, "17014": 265, "17016": 265, "17018": 265, "17020": 265, "17022": 265, "17024": 265, "17026": 265, "17028": 265, "17030": 265, "17032": 265, "17034": 265, "17036": 265, "17038": 265, "17040": 265, "17042": 265, "17044": 265, "17046": 265, "17048": 265, "17050": 265, "17052": 265, "17054": 265, "17056": 265, "17058": 265, "17060": 265, "17062": 265, "17064": 265, "17066": 265, "17068": 265, "17070": 265, "17072": 265, "17074": 265, "17076": 265, "17078": 265, "17080": 265, "17082": 265, "17084": 265, "17086": 265, "17088": 265, "17090": 265, "17092": 265, "17094": 265, "17096": 265, "17098": 265, "17100": 265, "17102": 265, "17104": 265, "17106": 265, "17108": 265, "17110": 265, "17112": 265, "17114": 265, "17116": 265, "17118": 265, "17120": 265, "17122": 265, "17124": 265, "17126": [265, 314], "17128": 265, "17130": 265, "17132": 265, "17134": 265, "17136": 265, "17138": 265, "17140": 265, "17142": 265, "17144": 265, "17146": 265, "17148": 265, "17150": 265, "17152": 265, "17154": 265, "17156": 265, "17158": 265, "17160": 265, "17162": 265, "17164": 265, "17166": 265, "17168": 265, "17170": 265, "17172": 265, "17174": 265, "17176": 265, "17178": 265, "17180": 265, "17182": 265, "17184": 265, "17186": 265, "17188": 265, "17190": 265, "17192": 265, "17194": 265, "17196": 265, "17198": 265, "17200": 265, "17202": 265, "17204": 265, "17206": 265, "17208": 265, "17210": 265, "17212": 265, "17214": 265, "17216": 265, "17218": 265, "17220": 265, "17222": 265, "17224": 265, "17226": 265, "17228": 265, "17230": 265, "17232": 265, "17234": 265, "17236": 265, "17238": 265, "17240": 265, "17242": 265, "17244": 265, "17246": 265, "17248": 265, "17250": 265, "17252": 265, "17254": 265, "17256": 265, "17258": 265, "17260": 265, "17262": 265, "17264": 265, "17266": 265, "17268": 265, "17270": 265, "17272": 265, "17274": 265, "17276": 265, "17278": 265, "17280": 265, "17282": 265, "17284": 265, "17286": 265, "17288": 265, "17290": 265, "17292": 265, "17294": 265, "17296": 265, "17298": 265, "17300": 265, "17302": 265, "17304": 265, "17306": 265, "17308": 265, "17310": 265, "17312": 265, "17314": 265, "17316": 265, "17318": 265, "17320": 265, "17322": 265, "17324": 265, "17326": 265, "17328": 265, "17330": 265, "17332": 265, "17334": 265, "17336": 265, "17338": 265, "17340": 265, "17342": 265, "17344": 265, "17346": 265, "17348": 265, "17350": 265, "17352": 265, "17354": 265, "17356": 265, "17358": 265, "17360": 265, "17362": 265, "17364": 265, "17366": 265, "17368": 265, "17370": 265, "17372": 265, "17374": 265, "17376": 265, "17378": 265, "17380": 265, "17382": 265, "17384": 265, "17386": 265, "17388": 265, "17390": 265, "17392": 265, "17394": 265, "17396": 265, "17398": 265, "17400": 265, "17402": 265, "17404": 265, "17406": 265, "17408": 265, "17410": 265, "17412": 265, "17414": 265, "17416": 265, "17418": 265, "17420": 265, "17422": 265, "17424": 265, "17426": 265, "17428": 265, "17430": 265, "17432": 265, "17434": 265, "17436": 265, "17438": 265, "17440": 265, "17442": 265, "17444": 265, "17446": 265, "17448": 265, "17450": 265, "17452": 265, "17454": 265, "17456": 265, "17458": 265, "17460": 265, "17462": 265, "17464": 265, "17466": 265, "17468": 265, "17470": 265, "17472": 265, "17474": 265, "17476": 265, "17478": 265, "17480": 265, "17482": 265, "17484": 265, "17486": 265, "17488": 265, "17490": 265, "17492": 265, "17494": 265, "17496": 265, "17498": 265, "17500": 265, "17502": 265, "17504": 265, "17506": 265, "17508": 265, "17510": 265, "17512": 265, "17514": 265, "17516": 265, "17518": 265, "17520": 265, "17522": 265, "17524": 265, "17526": 265, "17528": 265, "17530": 265, "17532": 265, "17534": 265, "17536": 265, "17538": 265, "17540": 265, "17542": 265, "17544": 265, "17546": 265, "17548": 265, "17550": 265, "17552": 265, "17554": 265, "17556": 265, "17558": 265, "17560": 265, "17562": 265, "17564": 265, "17566": 265, "17568": 265, "17570": 265, "17572": 265, "17574": 265, "17576": 265, "17578": 265, "17580": 265, "17582": 265, "17584": 265, "17586": 265, "17588": 265, "17590": 265, "17592": 265, "17594": 265, "17596": 265, "17598": 265, "17600": 265, "17602": 265, "17604": 265, "17606": 265, "17608": 265, "17610": 265, "17612": 265, "17614": 265, "17616": 265, "17618": 265, "17620": 265, "17622": 265, "17624": 265, "17626": 265, "17628": 265, "17630": 265, "17632": 265, "17634": 265, "17636": 265, "17638": 265, "17640": 265, "17642": 265, "17644": 265, "17646": 265, "17648": 265, "17650": 265, "17652": 265, "17654": 265, "17656": 265, "17658": 265, "17660": 265, "17662": 265, "17664": 265, "17666": 265, "17668": 265, "17670": 265, "17672": 265, "17674": 265, "17676": 265, "17678": 265, "17680": 265, "17682": 265, "17684": 265, "17686": 265, "17688": 265, "17690": 265, "17692": 265, "17694": 265, "17696": 265, "17698": 265, "17700": 265, "17702": 265, "17704": 265, "17706": 265, "17708": 265, "17710": 265, "17712": 265, "17714": 265, "17716": 265, "17718": 265, "17720": 265, "17722": 265, "17724": 265, "17726": 265, "17728": 265, "17730": 265, "17732": 265, "17734": 265, "17736": 265, "17738": 265, "17740": 265, "17742": 265, "17744": 265, "17746": 265, "17748": 265, "17750": 265, "17752": 265, "17754": 265, "17756": 265, "17758": 265, "17760": 265, "17762": 265, "17764": 265, "17766": 265, "17768": 265, "17770": 265, "17772": 265, "17774": 265, "17776": 265, "17778": 265, "17780": 265, "17782": 265, "17784": 265, "17786": 265, "17788": 265, "17790": 265, "17792": 265, "17794": 265, "17796": 265, "17798": 265, "17800": 265, "17802": 265, "17804": 265, "17806": 265, "17808": 265, "17810": 265, "17812": 265, "17814": 265, "17816": 265, "17818": 265, "17820": 265, "17822": 265, "17824": 265, "17826": 265, "17828": 265, "17830": 265, "17832": 265, "17834": 265, "17836": 265, "17838": 265, "17840": 265, "17842": 265, "17844": 265, "17846": 265, "17848": 265, "17850": 265, "17852": 265, "17854": 265, "17856": 265, "17858": 265, "17860": 265, "17862": 265, "17864": 265, "17866": 265, "17868": 265, "17870": 265, "17872": 265, "17874": 265, "17876": 265, "17878": 265, "17880": 265, "17882": 265, "17884": 265, "17886": 265, "17888": 265, "17890": 265, "17892": 265, "17894": 265, "17896": 265, "17898": 265, "17900": 265, "17902": 265, "17904": 265, "17906": 265, "17908": 265, "17910": 265, "17912": 265, "17914": 265, "17916": 265, "17918": 265, "17920": 265, "17922": 265, "17924": 265, "17926": 265, "17928": 265, "17930": 265, "17932": 265, "17934": 265, "17936": 265, "17938": 265, "17940": 265, "17942": 265, "17944": 265, "17946": 265, "17948": 265, "17950": 265, "17952": 265, "17954": 265, "17956": 265, "17958": 265, "17960": 265, "17962": 265, "17964": 265, "17966": 265, "17968": 265, "17970": 265, "17972": 265, "17974": 265, "17976": 265, "17978": 265, "17980": 265, "17982": 265, "17984": 265, "17986": 265, "17988": 265, "17990": 265, "17992": 265, "17994": 265, "17996": 265, "17998": 265, "18000": [265, 994], "18002": 265, "18004": 265, "18006": 265, "18008": 265, "18010": 265, "18012": 265, "18014": 265, "18016": 265, "18018": 265, "18020": 265, "18022": 265, "18024": 265, "18026": 265, "18028": 265, "18030": 265, "18032": 265, "18034": 265, "18036": 265, "18038": 265, "18040": 265, "18042": 265, "18044": 265, "18046": 265, "18048": 265, "18050": 265, "18052": 265, "18054": 265, "18056": 265, "18058": 265, "18060": 265, "18062": 265, "18064": 265, "18066": 265, "18068": 265, "18070": 265, "18072": 265, "18074": 265, "18076": 265, "18078": 265, "18080": 265, "18082": 265, "18084": 265, "18086": 265, "18088": 265, "18090": 265, "18092": 265, "18094": 265, "18096": 265, "18098": 265, "18100": 265, "18102": 265, "18104": 265, "18106": 265, "18108": 265, "18110": 265, "18112": 265, "18114": 265, "18116": 265, "18118": 265, "18120": 265, "18122": 265, "18124": 265, "18126": 265, "18128": 265, "18130": 265, "18132": 265, "18134": 265, "18136": 265, "18138": 265, "18140": 265, "18142": 265, "18144": 265, "18146": 265, "18148": 265, "18150": 265, "18152": 265, "18154": 265, "18156": 265, "18158": 265, "18160": 265, "18162": 265, "18164": 265, "18166": 265, "18168": 265, "18170": 265, "18172": 265, "18174": 265, "18176": 265, "18178": 265, "18180": 265, "18182": 265, "18184": 265, "18186": 265, "18188": 265, "18190": 265, "18192": 265, "18194": 265, "18196": 265, "18198": 265, "18200": 265, "18202": 265, "18204": 265, "18206": 265, "18208": 265, "18210": 265, "18212": 265, "18214": 265, "18216": 265, "18218": 265, "18220": 265, "18222": 265, "18224": 265, "18226": 265, "18228": 265, "18230": 265, "18232": 265, "18234": 265, "18236": 265, "18238": 265, "18240": 265, "18242": 265, "18244": 265, "18246": 265, "18248": 265, "18250": 265, "18252": 265, "18254": 265, "18256": 265, "18258": 265, "18260": 265, "18262": 265, "18264": 265, "18266": 265, "18268": 265, "18270": 265, "18272": 265, "18274": 265, "18276": 265, "18278": 265, "18280": 265, "18282": 265, "18284": 265, "18286": 265, "18288": 265, "18290": 265, "18292": 265, "18294": 265, "18296": 265, "18298": 265, "18300": 265, "18302": 265, "18304": 265, "18306": 265, "18308": 265, "18310": 265, "18312": 265, "18314": 265, "18316": 265, "18318": 265, "18320": 265, "18322": 265, "18324": 265, "18326": 265, "18328": 265, "18330": 265, "18332": 265, "18334": 265, "18336": 265, "18338": 265, "18340": 265, "18342": 265, "18344": 265, "18346": 265, "18348": 265, "18350": 265, "18352": 265, "18354": 265, "18356": 265, "18358": 265, "18360": 265, "18362": 265, "18364": 265, "18366": 265, "18368": 265, "18370": 265, "18372": 265, "18374": 265, "18376": 265, "18378": 265, "18380": 265, "18382": 265, "18384": [265, 1062], "18386": 265, "18388": 265, "18390": 265, "18392": 265, "18394": 265, "18396": 265, "18398": 265, "18400": 265, "18402": 265, "18404": 265, "18406": 265, "18408": 265, "18410": 265, "18412": 265, "18414": 265, "18416": 265, "18418": 265, "18420": 265, "18422": 265, "18424": 265, "18426": 265, "18428": 265, "18430": 265, "18432": 265, "18434": 265, "18436": 265, "18438": 265, "18440": 265, "18442": 265, "18444": 265, "18446": 265, "18448": 265, "18450": 265, "18452": 265, "18454": 265, "18456": 265, "18458": 265, "18460": 265, "18462": 265, "18464": 265, "18466": 265, "18468": 265, "18470": 265, "18472": 265, "18474": 265, "18476": 265, "18478": 265, "18480": 265, "18482": 265, "18484": 265, "18486": 265, "18488": 265, "18490": 265, "18492": 265, "18494": 265, "18496": 265, "18498": 265, "18500": 265, "18502": 265, "18504": 265, "18506": 265, "18508": 265, "18510": 265, "18512": 265, "18514": 265, "18516": 265, "18518": 265, "18520": 265, "18522": 265, "18524": 265, "18526": 265, "18528": 265, "18530": 265, "18532": 265, "18534": 265, "18536": 265, "18538": 265, "18540": 265, "18542": 265, "18544": 265, "18546": 265, "18548": 265, "18550": 265, "18552": 265, "18554": 265, "18556": 265, "18558": 265, "18560": 265, "18562": 265, "18564": 265, "18566": 265, "18568": 265, "18570": 265, "18572": 265, "18574": 265, "18576": 265, "18578": 265, "18580": 265, "18582": 265, "18584": 265, "18586": 265, "18588": 265, "18590": 265, "18592": 265, "18594": 265, "18596": 265, "18598": 265, "18600": 265, "18602": 265, "18604": 265, "18606": 265, "18608": 265, "18610": 265, "18612": 265, "18614": 265, "18616": 265, "18618": 265, "18620": 265, "18622": 265, "18624": 265, "18626": 265, "18628": 265, "18630": 265, "18632": 265, "18634": 265, "18636": 265, "18638": 265, "18640": 265, "18642": 265, "18644": 265, "18646": 265, "18648": 265, "18650": 265, "18652": 265, "18654": 265, "18656": 265, "18658": 265, "18660": 265, "18662": 265, "18664": 265, "18666": 265, "18668": 265, "18670": 265, "18672": 265, "18674": 265, "18676": 265, "18678": 265, "18680": 265, "18682": 265, "18684": 265, "18686": 265, "18688": 265, "18690": 265, "18692": 265, "18694": 265, "18696": 265, "18698": 265, "18700": 265, "18702": 265, "18704": 265, "18706": 265, "18708": 265, "18710": 265, "18712": 265, "18714": 265, "18716": 265, "18718": 265, "18720": 265, "18722": 265, "18724": 265, "18726": 265, "18728": 265, "18730": 265, "18732": 265, "18734": 265, "18736": 265, "18738": 265, "18740": 265, "18742": 265, "18744": 265, "18746": 265, "18748": 265, "18750": 265, "18752": 265, "18754": 265, "18756": 265, "18758": 265, "18760": 265, "18762": 265, "18764": 265, "18766": 265, "18768": 265, "18770": 265, "18772": 265, "18774": 265, "18776": 265, "18778": 265, "18780": 265, "18782": 265, "18784": 265, "18786": 265, "18788": 265, "18790": 265, "18792": 265, "18794": 265, "18796": 265, "18798": 265, "18800": 265, "18802": 265, "18804": 265, "18806": 265, "18808": 265, "18810": 265, "18812": 265, "18814": 265, "18816": 265, "18818": 265, "18820": 265, "18822": 265, "18824": 265, "18826": 265, "18828": 265, "18830": 265, "18832": 265, "18834": 265, "18836": 265, "18838": 265, "18840": 265, "18842": 265, "18844": 265, "18846": 265, "18848": 265, "18850": 265, "18852": 265, "18854": 265, "18856": 265, "18858": 265, "18860": 265, "18862": 265, "18864": 265, "18866": 265, "18868": 265, "18870": 265, "18872": 265, "18874": 265, "18876": 265, "18878": 265, "18880": 265, "18882": 265, "18884": 265, "18886": 265, "18888": 265, "18890": 265, "18892": 265, "18894": 265, "18896": 265, "18898": 265, "18900": 265, "18902": 265, "18904": 265, "18906": 265, "18908": 265, "18910": 265, "18912": 265, "18914": 265, "18916": 265, "18918": 265, "18920": 265, "18922": 265, "18924": 265, "18926": 265, "18928": 265, "18930": 265, "18932": 265, "18934": 265, "18936": 265, "18938": 265, "18940": 265, "18942": 265, "18944": 265, "18946": 265, "18948": 265, "18950": 265, "18952": 265, "18954": 265, "18956": 265, "18958": 265, "18960": 265, "18962": 265, "18964": 265, "18966": 265, "18968": 265, "18970": 265, "18972": 265, "18974": 265, "18976": 265, "18978": 265, "18980": 265, "18982": 265, "18984": 265, "18986": 265, "18988": 265, "18990": 265, "18992": 265, "18994": 265, "18996": 265, "18998": 265, "19000": 265, "19002": 265, "19004": 265, "19006": 265, "19008": 265, "19010": 265, "19012": 265, "19014": 265, "19016": 265, "19018": 265, "19020": 265, "19022": 265, "19024": 265, "19026": 265, "19028": 265, "19030": 265, "19032": 265, "19034": 265, "19036": 265, "19038": 265, "19040": 265, "19042": 265, "19044": 265, "19046": 265, "19048": 265, "19050": 265, "19052": 265, "19054": 265, "19056": 265, "19058": 265, "19060": 265, "19062": 265, "19064": 265, "19066": 265, "19068": 265, "19070": 265, "19072": 265, "19074": 265, "19076": 265, "19078": 265, "19080": 265, "19082": 265, "19084": 265, "19086": 265, "19088": 265, "19090": 265, "19092": 265, "19094": 265, "19096": 265, "19098": 265, "19100": 265, "19102": 265, "19104": 265, "19106": 265, "19108": 265, "19110": 265, "19112": 265, "19114": 265, "19116": 265, "19118": 265, "19120": 265, "19122": 265, "19124": 265, "19126": 265, "19128": 265, "19130": 265, "19132": 265, "19134": 265, "19136": 265, "19138": 265, "19140": 265, "19142": 265, "19144": 265, "19146": 265, "19148": 265, "19150": 265, "19152": 265, "19154": 265, "19156": 265, "19158": 265, "19160": 265, "19162": 265, "19164": 265, "19166": 265, "19168": 265, "19170": 265, "19172": 265, "19174": 265, "19176": 265, "19178": 265, "19180": 265, "19182": 265, "19184": 265, "19186": 265, "19188": 265, "19190": 265, "19192": 265, "19194": 265, "19196": 265, "19198": 265, "19200": 265, "19202": 265, "19204": 265, "19206": 265, "19208": 265, "19210": 265, "19212": 265, "19214": 265, "19216": 265, "19218": 265, "19220": 265, "19222": 265, "19224": 265, "19226": 265, "19228": 265, "19230": 265, "19232": 265, "19234": 265, "19236": 265, "19238": 265, "19240": 265, "19242": 265, "19244": 265, "19246": 265, "19248": 265, "19250": 265, "19252": 265, "19254": 265, "19256": 265, "19258": 265, "19260": 265, "19262": 265, "19264": 265, "19266": 265, "19268": 265, "19270": 265, "19272": 265, "19274": 265, "19276": 265, "19278": 265, "19280": 265, "19282": 265, "19284": 265, "19286": 265, "19288": 265, "19290": 265, "19292": 265, "19294": 265, "19296": 265, "19298": 265, "19300": 265, "19302": 265, "19304": 265, "19306": 265, "19308": 265, "19310": 265, "19312": 265, "19314": 265, "19316": 265, "19318": 265, "19320": 265, "19322": 265, "19324": 265, "19326": 265, "19328": 265, "19330": 265, "19332": 265, "19334": 265, "19336": 265, "19338": 265, "19340": 265, "19342": 265, "19344": 265, "19346": 265, "19348": 265, "19350": 265, "19352": 265, "19354": 265, "19356": 265, "19358": 265, "19360": 265, "19362": 265, "19364": 265, "19366": 265, "19368": 265, "19370": 265, "19372": 265, "19374": 265, "19376": 265, "19378": 265, "19380": 265, "19382": 265, "19384": 265, "19386": 265, "19388": 265, "19390": 265, "19392": 265, "19394": 265, "19396": 265, "19398": 265, "19400": 265, "19402": 265, "19404": 265, "19406": 265, "19408": 265, "19410": 265, "19412": 265, "19414": 265, "19416": 265, "19418": 265, "19420": 265, "19422": 265, "19424": 265, "19426": 265, "19428": 265, "19430": 265, "19432": 265, "19434": 265, "19436": 265, "19438": 265, "19440": 265, "19442": 265, "19444": 265, "19446": 265, "19448": 265, "19450": 265, "19452": 265, "19454": 265, "19456": 265, "19458": 265, "19460": 265, "19462": 265, "19464": 265, "19466": 265, "19468": 265, "19470": 265, "19472": 265, "19474": 265, "19476": 265, "19478": 265, "19480": 265, "19482": 265, "19484": 265, "19486": 265, "19488": 265, "19490": 265, "19492": 265, "19494": 265, "19496": 265, "19498": 265, "19500": 265, "19502": 265, "19504": 265, "19506": 265, "19508": 265, "19510": 265, "19512": 265, "19514": 265, "19516": 265, "19518": 265, "19520": 265, "19522": 265, "19524": 265, "19526": 265, "19528": 265, "19530": 265, "19532": 265, "19534": 265, "19536": 265, "19538": 265, "19540": 265, "19542": 265, "19544": 265, "19546": 265, "19548": 265, "19550": 265, "19552": 265, "19554": 265, "19556": 265, "19558": 265, "19560": 265, "19562": 265, "19564": 265, "19566": 265, "19568": 265, "19570": 265, "19572": 265, "19574": 265, "19576": 265, "19578": 265, "19580": 265, "19582": 265, "19584": 265, "19586": 265, "19588": 265, "19590": 265, "19592": 265, "19594": 265, "19596": 265, "19598": 265, "19600": 265, "19602": 265, "19604": 265, "19606": 265, "19608": 265, "19610": 265, "19612": 265, "19614": 265, "19616": 265, "19618": 265, "19620": 265, "19622": 265, "19624": 265, "19626": 265, "19628": 265, "19630": 265, "19632": 265, "19634": 265, "19636": 265, "19638": 265, "19640": 265, "19642": 265, "19644": 265, "19646": 265, "19648": 265, "19650": 265, "19652": 265, "19654": 265, "19656": 265, "19658": 265, "19660": 265, "19662": 265, "19664": 265, "19666": 265, "19668": 265, "19670": 265, "19672": 265, "19674": 265, "19676": 265, "19678": 265, "19680": 265, "19682": 265, "19684": 265, "19686": 265, "19688": 265, "19690": 265, "19692": 265, "19694": 265, "19696": 265, "19698": 265, "19700": 265, "19702": 265, "19704": 265, "19706": 265, "19708": 265, "19710": 265, "19712": 265, "19714": 265, "19716": 265, "19718": 265, "19720": 265, "19722": 265, "19724": 265, "19726": 265, "19728": 265, "19730": 265, "19732": 265, "19734": 265, "19736": 265, "19738": 265, "19740": 265, "19742": 265, "19744": 265, "19746": 265, "19748": 265, "19750": 265, "19752": 265, "19754": 265, "19756": 265, "19758": 265, "19760": 265, "19762": 265, "19764": 265, "19766": 265, "19768": 265, "19770": 265, "19772": 265, "19774": 265, "19776": 265, "19778": 265, "19780": 265, "19782": 265, "19784": 265, "19786": 265, "19788": 265, "19790": 265, "19792": 265, "19794": 265, "19796": 265, "19798": 265, "19800": 265, "19802": 265, "19804": 265, "19806": 265, "19808": 265, "19810": 265, "19812": 265, "19814": 265, "19816": 265, "19818": 265, "19820": 265, "19822": 265, "19824": 265, "19826": 265, "19828": 265, "19830": 265, "19832": 265, "19834": 265, "19836": 265, "19838": 265, "19840": 265, "19842": 265, "19844": 265, "19846": 265, "19848": 265, "19850": 265, "19852": 265, "19854": 265, "19856": 265, "19858": 265, "19860": 265, "19862": 265, "19864": 265, "19866": 265, "19868": 265, "19870": 265, "19872": 265, "19874": 265, "19876": 265, "19878": 265, "19880": 265, "19882": 265, "19884": 265, "19886": 265, "19888": 265, "19890": 265, "19892": 265, "19894": 265, "19896": 265, "19898": 265, "19900": 265, "19902": 265, "19904": 265, "19906": 265, "19908": 265, "19910": 265, "19912": 265, "19914": 265, "19916": 265, "19918": 265, "19920": 265, "19922": 265, "19924": 265, "19926": 265, "19928": 265, "19930": 265, "19932": 265, "19934": 265, "19936": 265, "19938": 265, "19940": 265, "19942": 265, "19944": 265, "19946": 265, "19948": 265, "19950": 265, "19952": 265, "19954": 265, "19956": 265, "19958": 265, "19960": 265, "19962": 265, "19964": 265, "19966": 265, "19968": 265, "19970": 265, "19972": 265, "19974": 265, "19976": 265, "19978": 265, "19980": 265, "19982": 265, "19984": 265, "19986": 265, "19988": 265, "19990": 265, "19992": 265, "19994": 265, "19996": 265, "19998": 265, "l_to_send": 265, "json_to_send": 265, "json_receiv": 265, "l_receiv": 265, "sine": [265, 306, 323], "140106668681968": 265, "wallclock_axi": 265, "1638538131": 265, "1975703": 265, "2978473": 265, "3981225": 265, "498449": 265, "5987027": 265, "698947": 265, "7996597": 265, "899947": 265, "1638538132": 265, "0001943": 265, "1010473": 265, "0b10110": 265, "0x16": [265, 877], "0b1011": [265, 300], "bit_3": 265, "0b00001": 265, "0b1": [265, 282, 352], "0b1000": [265, 282], "0b11110": 265, "bitwis": [265, 449, 482, 1014, 1018, 1106], "num1": [265, 282], "0b110101101": 265, "num2": [265, 282], "0b101110100": 265, "0b100100100": 265, "0b111111101": 265, "0b1010": 265, "0b10100": [265, 282], "1fuzzi2fuzzi3fuzzi4": 265, "0b11011001": 265, "abcdef": [265, 272, 278, 282], "cde": 265, "lexic": [265, 535, 838], "indexerror": [265, 282, 285, 303, 342, 364, 368, 397, 1086, 1139, 1209], "auer": 265, "aue": 265, "zerodivisionerror": [265, 278, 303, 1086], "lst1": 265, "lst2": 265, "toc": 266, "treeset": 266, "searchabl": [266, 269], "diesel": 266, "vibrat": 266, "lighter": 266, "sensorrandom": 266, "sensorsin": 266, "sensorconst": 266, "wild": [266, 268, 273, 308], "yesterai": 266, "deseri": [266, 278], "decod": [266, 278, 285, 288, 324, 330, 341, 344, 346, 352, 358, 1137, 1184], "swallow": [266, 918, 1086], "walkthrough": [266, 268, 273, 1256], "1h": 266, "exchangeformat": 266, "test_mqtt_format": 266, "parser": [266, 278, 332, 348, 408, 726, 757, 1139, 1243], "mosquitto_sub": [266, 1204], "writer": [266, 846, 932], "deserializeerror": 266, "dangl": [266, 452, 643, 657], "fahrenheit": [268, 420, 422, 435, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 543, 745, 783, 837, 839, 840], "nonconst": [268, 655], "getchar": [268, 426, 428, 433, 442], "dry": 268, "verif": [268, 1193], "umlaut": [268, 269, 382, 1118, 1201], "\u00f6": [268, 288, 1201], "canari": 268, "asid": [268, 460, 461, 473, 756, 1047], "brainfuck": 268, "nok": [268, 793, 1041], "singli": [268, 479, 483, 492, 496, 501, 502, 745, 783, 837, 839, 840], "typedef": [268, 476, 479, 483, 492, 496, 501, 502, 743, 745, 783, 791, 807, 837, 839, 840, 907, 1056], "commonplac": [268, 1246], "boundari": [268, 278, 324, 482, 817, 986], "neighborhood": 268, "signed": [268, 436, 485], "unsigned": 268, "excurs": [268, 546, 1187], "pointerarith": 268, "lower_bound": [268, 315, 354, 682, 687, 706, 710, 740, 840], "for_each": [268, 315, 687, 706, 710, 740, 791, 840], "search_by_lastnam": [268, 736, 737, 738], "const_iter": [268, 637, 681, 684, 685, 686, 688, 703, 743, 758, 791, 792], "calloper": [268, 620], "exc": [268, 620], "ostream": [268, 620, 646, 807, 838, 1228], "paint": [268, 725, 740, 840], "reverse_copi": [268, 315, 620, 687, 706, 710, 740, 840], "cin": [268, 689, 707, 709, 725, 740, 840], "accumul": [268, 620], "raci": [268, 620], "wsl2": [268, 295, 297, 315, 317, 404], "libsqlite3": [268, 516], "libboost": 268, "libgtk": 268, "prosaic": 268, "roman": 268, "mad": [268, 484], "wxwidget": 268, "whole": [269, 281, 282, 284, 287, 290, 299, 302, 341, 382, 506, 756, 765, 807, 862, 865, 887, 933, 1015, 1085, 1157, 1244], "lieb": [269, 330, 346], "gr\u00fc\u00dfe": [269, 330, 346], "utf8": 269, "distil": [269, 329, 359, 367, 383, 1084, 1157], "4j": 270, "unlimit": [270, 925, 1118], "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000": [270, 303, 320, 324, 342, 364, 392], "0xdeadbeef": [270, 272, 278, 324, 330, 392, 601, 1065], "3735928559": [270, 272, 278, 282, 324, 330, 392], "0b10010011": 270, "ippi": 270, "0b0101": 270, "0101": 270, "teifl": [270, 358], "fun1": 270, "fun2": 270, "nsecond": [270, 1131], "rline": 270, "carriag": [270, 439, 1131], "linet": 270, "neuer": 270, "ordner": 270, "euer": 270, "syntaxwarn": [270, 303, 1086], "ipykernel_258993": 270, "837361033": 270, "regex_str": [270, 288], "calim": 270, "yaaai": 270, "needl": [270, 368, 1125, 1133], "haystack": [270, 368, 1125, 1133], "finit": [270, 319, 454, 977], "haystack_s": 270, "0x7fe78c576ee0": 270, "list_iter": [270, 288, 342, 352, 358, 368], "0x7fe78c577910": 270, "unicode_code_point": 270, "l_new": 270, "ijk": 270, "mengenlehr": 270, "s1": [270, 278, 282, 285, 288, 303, 310, 320, 330, 342, 352, 358, 368, 546, 563, 593, 652, 747, 753, 801, 824, 826, 828, 830, 1136], "s2": [270, 278, 282, 285, 288, 303, 310, 320, 330, 342, 352, 358, 368, 546, 563, 593, 652, 747, 753, 801, 824, 826, 828, 1136], "gunnar": 270, "liam": 270, "maximumum": 270, "variable2": 270, "maximum2": 270, "mrmr": 270, "einser": 270, "square_numb": [270, 1134], "squares_gener": 270, "other_d": [270, 303], "nove": 270, "isspac": [270, 272, 275, 278, 303, 324, 352, 358, 1133], "buchhaltung": [270, 948, 970, 971], "startswith": [270, 278, 307, 308, 310, 324, 364, 506, 1133, 1207], "buch": [270, 1238], "oooo": 270, "isupp": [270, 278, 288, 324, 358, 364, 368, 1133], "zz": 270, "traurig": 270, "substr": [270, 272, 278, 288, 303, 310, 324, 342, 346, 352, 358, 364, 368, 519, 726, 1228], "gid": [270, 278, 346, 364, 726, 838, 914, 915, 923, 925, 933, 1005, 1020, 1166], "count_byt": 270, "nbyte": 270, "miscellanea": [271, 1008], "brace": [271, 278, 324, 380, 426, 449, 452, 464, 544, 637, 646, 678, 680, 685, 698, 699, 743, 783, 792, 837, 839, 840, 1115, 1118], "hour_of_dai": 271, "ein_str": 272, "ein_anderer_str": 272, "fghjgfgh": 272, "dfghgfgh": 272, "do_someth": [272, 291, 392, 455, 457, 465, 480, 494, 800, 1115], "komplett": [272, 358], "returnwert": [272, 1238], "sinnloser": 272, "weis": [272, 1259], "vorgenommen": 272, "obacht": 272, "140672599989840": 272, "140672464974720": 272, "hoechst": [272, 310], "rechnern": 272, "100000": [272, 288, 756, 993, 1193], "": [272, 288], "exponenti": [272, 1118, 1132], "__annotations__": [272, 282, 303, 324, 338, 1087], "__closure__": [272, 282, 303, 324], "__code__": [272, 282, 303, 324], "__delattr__": [272, 275, 278, 282, 300, 303, 324, 342, 364], "__dir__": [272, 275, 282, 300, 303, 324, 342, 364], "__format__": [272, 275, 278, 282, 300, 303, 324, 342, 364], "__ge__": [272, 275, 278, 282, 300, 303, 324, 342, 364, 1106], "__get__": [272, 282, 303, 324], "__getattribute__": [272, 275, 278, 282, 300, 303, 324, 342, 364], "__globals__": [272, 282, 303, 324], "__gt__": [272, 275, 278, 282, 300, 303, 324, 342, 364], "__hash__": [272, 275, 278, 282, 300, 303, 324, 342, 352, 364], "__init_subclass__": [272, 275, 282, 300, 303, 324, 342, 364], "__kwdefaults__": [272, 282, 303, 324], "__ne__": [272, 275, 278, 282, 300, 303, 324, 342, 364, 1106], "__new__": [272, 275, 278, 282, 300, 303, 324, 342, 364], "__qualname__": [272, 282, 303, 324], "__reduce__": [272, 275, 278, 282, 300, 303, 324, 342, 364], "__reduce_ex__": [272, 275, 282, 300, 303, 324, 342, 364], "__setattr__": [272, 275, 278, 282, 300, 303, 324, 342, 364], "__sizeof__": [272, 275, 278, 282, 300, 303, 324, 342, 364], "__subclasshook__": [272, 275, 282, 300, 303, 324, 342, 364], "karteikart": 272, "my_formatted_person": 272, "123425041997": 272, "caros_str": 272, "joergs_str": 272, "0x7ff0dc48b490": 272, "next_po": 272, "tim": [272, 282, 388, 389], "ugli": [272, 282, 296, 305, 306, 319, 326, 327, 370, 371, 421, 426, 528, 620, 840, 912, 917, 943, 944, 984, 1084, 1085], "flat": [272, 282, 473, 499, 500, 1055, 1056], "puriti": [272, 282], "silenc": [272, 282, 465, 931], "ambigu": [272, 282, 452, 487, 488, 489, 656, 757, 948], "refus": [272, 282, 291, 510, 860, 913, 985, 1001, 1060], "temptat": [272, 282], "dutch": [272, 282], "honk": [272, 282], "wahr": 272, "falsch": [272, 285, 1245], "kriegt": 272, "nachkommastellen": 272, "moeglichkeit": 272, "f_str": 272, "punkt_po": 272, "nachkomma_str": 272, "praezedenz": 272, "wandel": 272, "vorn": 272, "anhaengen": 272, "wuenschen": 272, "wuerd": 272, "appendleft": 272, "extendleft": 272, "relem": 272, "popleft": 272, "sorted_l": 272, "sorted_t": 272, "sorted_": 272, "subtext": 272, "ssissippi": 272, "140672464726576": 272, "copied_text": 272, "140672464784832": 272, "140672464784064": 272, "140672599989872": 272, "140672464751872": 272, "140672464768512": 272, "140672464594880": 272, "jkl": 272, "suesser": [272, 278, 285, 288, 291, 307], "sechser_gewuerfelt": 272, "n_tri": [272, 275, 310, 352, 358, 364, 368, 1122], "versag": [272, 310], "eva": [272, 324, 368, 1125], "xrang": [272, 1126], "0x7ff0dc48bed0": 272, "hann": 272, "gruess": 272, "gott": [272, 303, 415], "fill_in_us": 272, "scho": 272, "my_db": 272, "uniq_dict": 272, "konfigurierbaren": 272, "startwert": 272, "ausgibt": 272, "sqnum": 272, "0x7ff014b01820": 272, "xslx": 272, "yz": 272, "lret": 272, "ochwa": 272, "unbalanc": 273, "geospati": 273, "gdal": 273, "sweigart": [273, 287, 329, 1188], "datenypen": 274, "libarari": 274, "chainmap": 274, "dequ": [274, 815], "suchalgorithmen": 274, "51139385": 275, "77397a312b47": 275, "50924272": [275, 278], "20210728": [275, 278, 1113], "eine_komplizierte_funkt": 275, "endeffekt": 275, "zusammenzuzaehlen": 275, "tarnt": 275, "vergeblich": 275, "komplexitaet": 275, "zahl_als_str": 275, "bledsinn": 275, "try_no": 275, "blahblahblah": 275, "cxyxyyyyxi": 275, "table_str": 275, "table_dict": 275, "139769175732912": 275, "139769175738624": 275, "satan_str": 275, "satan_int": 275, "result_of_print": 275, "result_of_evald_print": 275, "code_str": [275, 285], "compiled_cod": 275, "woswasi": [275, 282], "0x7f1e91eb42f0": 275, "philipp": [275, 282, 285, 303, 310, 324, 342, 352, 544, 619, 691, 703, 736, 738, 1177, 1179, 1183, 1185, 1205, 1206, 1207, 1209, 1210, 1211, 1212], "lastnma": 275, "0x7f1e8c0fe2e0": 275, "__abs__": [275, 282, 300, 364], "__and__": [275, 282, 342, 364, 1106], "__bool__": [275, 282, 300, 364], "__ceil__": [275, 282, 300, 364], "__divmod__": [275, 282, 300, 364], "__float__": [275, 282, 300, 324, 364], "__floor__": [275, 282, 300, 364], "__floordiv__": [275, 282, 300, 364, 1106], "__getnewargs__": [275, 278, 282, 300, 324, 364], "__index__": [275, 282, 364], "__int__": [275, 282, 300, 324, 341, 364], "__invert__": [275, 282, 364], "__lshift__": [275, 282, 364, 1106], "__mod__": [275, 278, 282, 300, 324, 364, 1106], "__mul__": [275, 278, 282, 300, 324, 364, 1106], "__neg__": [275, 282, 300, 364], "__or__": [275, 282, 342, 364, 1106], "__pos__": [275, 282, 300, 364], "__pow__": [275, 282, 300, 364, 1106], "__rand__": [275, 282, 342, 364], "__rdivmod__": [275, 282, 300, 364], "__rfloordiv__": [275, 282, 300, 364], "__rlshift__": [275, 282, 364], "__rmod__": [275, 278, 282, 300, 324, 364], "__rmul__": [275, 278, 282, 300, 324, 364], "__ror__": [275, 282, 342, 364], "__round__": [275, 282, 300, 364], "__rpow__": [275, 282, 300, 364], "__rrshift__": [275, 282, 364, 1106], "__rshift__": [275, 282, 364, 1106], "__rsub__": [275, 282, 300, 342, 346, 364, 1106], "__rtruediv__": [275, 282, 300, 364], "__rxor__": [275, 282, 342, 364], "__sub__": [275, 282, 300, 342, 346, 364, 1106], "__truediv__": [275, 282, 300, 364, 1106], "__trunc__": [275, 282, 300, 364], "__xor__": [275, 282, 342, 364, 1106], "as_integer_ratio": [275, 282, 300, 364], "bit_length": [275, 282, 364], "conjug": [275, 282, 300, 364], "denomin": [275, 282, 364], "from_byt": [275, 282, 364], "to_byt": [275, 282, 364], "0x7f1e8c0b3130": 275, "int_list": 275, "0x7f1e8c0fe340": 275, "0x7f1e8c0fe760": 275, "u1": 275, "u2": 275, "type_of_us": 275, "scrambl": 275, "hansj\u00f6rg": [275, 506], "gr\u00f6jsnah": 275, "class_str": 275, "1997": [275, 285, 1112, 1177, 1179, 1183, 1185], "0x7f1e8c1c2e50": 275, "joleckmi": 275, "cmdline": 276, "excess": [276, 455], "provocantli": 276, "pybai": [276, 345, 1188], "suchzeit": 277, "everywher": [277, 292, 485, 500, 510, 747, 899, 1038, 1125], "d_as_str": 278, "received_d": 278, "1939": 278, "145415": 278, "bytes_or_buff": [278, 324], "expos": [278, 324, 634, 720, 918, 985, 993, 994, 1028], "strict": [278, 298, 324, 342, 541, 555, 562, 576, 590, 642, 840, 1136, 1217], "__contains__": [278, 324, 342], "format_spec": [278, 303, 324], "getattr": [278, 282, 303, 324, 1100], "__getitem__": [278, 324, 1209, 1210], "__iter__": [278, 324, 342, 1091], "__len__": [278, 324, 342], "casefold": [278, 324], "caseless": [278, 324], "fillchar": [278, 324], "pad": [278, 324, 1132], "occurr": [278, 324, 429], "codec": [278, 285, 288, 324, 330, 346, 352, 358, 1201], "unicodeencodeerror": [278, 285, 288, 303, 324, 330, 346, 1086, 1201], "xmlcharrefreplac": [278, 324], "register_error": [278, 324], "suffix": [278, 324, 524], "expandtab": [278, 303, 324, 352], "tabsiz": [278, 324], "lowest": [278, 324, 449, 455, 1048, 1049, 1137], "format_map": [278, 324], "isalnum": [278, 324, 364, 1133], "alphabet": [278, 324, 429, 484, 506, 932, 1201], "isascii": [278, 324], "007f": [278, 324], "isdecim": [278, 324], "iskeyword": [278, 288, 324], "isnumer": [278, 324], "isprint": [278, 324, 429, 457], "printabl": [278, 324, 429, 1086], "istitl": [278, 324], "uncas": [278, 324], "pq": [278, 324], "ljust": [278, 324], "removeprefix": [278, 324], "removesuffix": [278, 324], "rindex": [278, 324, 1133], "rpartit": [278, 324], "discard": [278, 324, 342, 488, 522, 654, 655, 793, 930, 931], "splitlin": [278, 324], "keepend": [278, 324], "swapcas": [278, 324], "titlecas": [278, 324], "lookuperror": [278, 303, 324, 1086], "untouch": [278, 324, 887], "zfill": [278, 324], "maketran": [278, 324], "numerischen": 278, "ecma": 278, "3rd": [278, 846], "interchang": [278, 724, 807, 1201], "marshal": 278, "pickl": [278, 282], "simplejson": 278, "foo": [278, 310, 320, 324, 342, 346, 352, 358, 364, 368, 524, 614, 756, 789, 807, 820, 1086, 1127], "baz": 278, "u1234": 278, "sort_kei": 278, "getvalu": 278, "compact": [278, 455], "mydict": 278, "obj": [278, 303, 346, 358, 582, 855, 856, 865, 1100, 1108, 1209, 1210], "x08ar": 278, "as_complex": 278, "dct": 278, "__complex__": 278, "object_hook": 278, "2j": 278, "parse_float": 278, "encode_complex": 278, "serializ": 278, "1j": 278, "jsonencod": 278, "iterencod": 278, "scanner": 278, "jsondecodeerror": 278, "jsondecod": 278, "msg": [278, 291, 352, 364, 440, 545, 549, 726, 1052, 1054, 1055, 1059, 1082, 1085, 1086], "unformat": 278, "lineno": [278, 285, 352], "colno": 278, "delattr": [278, 282, 303], "setattr": [278, 282, 303, 1100], "__setstate__": [278, 282], "with_traceback": [278, 282], "tb": [278, 282, 358], "__traceback__": [278, 282], "__cause__": [278, 282], "__context__": [278, 282], "__suppress_context__": [278, 282], "parse_int": 278, "parse_const": 278, "object_pairs_hook": 278, "nan": [278, 310, 1193, 1205], "num_str": 278, "_w": 278, "0x7f99fff1bb70": 278, "raw_decod": 278, "extran": 278, "skipkei": 278, "ensure_ascii": 278, "check_circular": 278, "allow_nan": 278, "recogn": [278, 524, 670, 994, 1244], "sensibl": 278, "circular": 278, "recursionerror": [278, 303, 1086], "compliant": [278, 1099], "item_separ": 278, "key_separ": 278, "_one_shot": 278, "chunk": [278, 397, 485, 881, 1020, 1190, 1201], "bigobject": 278, "mysocket": 278, "fp": 278, "inf": 278, "complianc": 278, "ippolito": 278, "redivi": 278, "140299267714496": 278, "140299267930496": 278, "schweissparameter_aussi": 278, "strom_ma": 278, "200004": 278, "spannung_v": 278, "aufs_kabel": 278, "maschine_112": 278, "kabel": [278, 282], "vom_kabel": 278, "schweissparameter_eini": 278, "strom_a": 278, "hal": 278, "2c445fb3": 278, "6ca4": 278, "b9d9": 278, "7cfbbff55326": 278, "doesnt_exist": 278, "_a666": 278, "140299402960464": 278, "0b10000000000000000000000000000000000000000000000000000000000000000": [278, 282, 303, 320, 358, 364, 368], "140299327492352": 278, "func_fals": 278, "func_tru": 278, "sex_opt": 278, "140298898107648": 278, "t_mit_einem_el": 278, "supi": 278, "squares_map": 278, "squares_set": 278, "numtri": 278, "even_numb": [278, 342], "mississppi": 278, "xxxx": 278, "nbin": [278, 285, 310, 324, 346], "ndaemon": [278, 285, 310, 324, 346], "nadm": [278, 285, 310, 324, 346, 358, 364], "nlp": [278, 285, 310, 324, 346, 358, 364], "nsync": [278, 285, 310, 324, 346, 358, 364], "nshutdown": [278, 285, 310, 324, 346, 358, 364], "nhalt": [278, 285, 310, 324, 346, 358, 364], "nmail": [278, 285, 310, 324, 346, 358, 364], "noper": [278, 285, 310, 324, 346, 358, 364], "ngame": [278, 285, 310, 324, 346, 358, 364], "nftp": [278, 285, 310, 324, 346, 358, 364], "nnobodi": [278, 285, 310, 324, 346, 358, 364], "napach": [278, 285, 310, 324, 346, 358, 364], "nsystemd": [278, 285, 310, 324, 346, 358, 364], "ntss": [278, 285, 310, 324, 346, 358, 364], "ndbu": [278, 285, 310, 324, 346, 358, 364], "npolkitd": [278, 285, 310, 324, 346, 358, 364], "navahi": [278, 285, 310, 324, 346, 358, 364], "nunbound": [278, 285, 310, 324, 346, 358, 364], "ndnsmasq": [278, 285, 310, 324, 346, 358, 364], "nnm": [278, 285, 310, 324, 346, 358, 364], "nusbmuxd": [278, 285, 310, 324, 346, 358, 364], "ngluster": [278, 285, 310, 324, 346, 358, 364], "nrtkit": [278, 285, 310, 324, 346, 358, 364], "npipewir": [278, 285, 310, 324, 346, 358, 364], "ngeoclu": [278, 285, 310, 324, 346, 358, 364], "nchroni": [278, 285, 310, 324, 346, 358, 364], "nsaslauth": [278, 285, 310, 324, 346, 358, 364], "nradvd": [278, 285], "nrpc": [278, 285, 310, 324, 346, 358, 364], "nqemu": [278, 285, 310, 324, 346, 358, 364], "nopenvpn": [278, 285, 310, 324, 346, 358, 364], "ncolord": [278, 285, 310, 324, 346, 358, 364, 1010], "nrpcuser": [278, 285, 310, 324, 346, 358, 364], "nabrt": [278, 285, 310, 324, 346, 358, 364], "nflatpak": [278, 285, 310, 324, 346, 358, 364], "ngdm": [278, 285, 310, 324, 346, 358, 364], "ngnome": [278, 285, 310, 324, 346, 358, 364], "nvboxadd": [278, 285, 310, 324, 346, 358, 364], "nsshd": [278, 285, 310, 324, 346, 358, 364], "ntcpdump": [278, 285, 310, 324, 346, 358, 364], "njfasch": [278, 285, 310, 324, 346, 358, 364], "nmosquitto": [278, 285, 310, 324, 346, 358], "nsomeon": [278, 285], "1001": [278, 285, 288, 699, 700, 701, 702, 933, 945, 976, 1005, 1087], "move_to_end": 278, "thermometera": 278, "thermometerb": 278, "get_average_temperatur": 278, "th_list": 278, "ipykernel_9164": 278, "859664274": 278, "2942790015": 278, "0x7fac83797be0": 278, "basisklass": 278, "level2_1": 278, "l21": 278, "level2_2": 278, "level3": 278, "jedi": 278, "blueey": 278, "droid": 278, "r2d2": 278, "derivednoctor": 278, "dnoctor": 278, "derivedctorcallingsup": 278, "derivedctorcallingbasector": 278, "__firstnam": 278, "__lastnam": 278, "_user__firstnam": 278, "_user__lastnam": 278, "lightsab": 278, "padawan": 278, "arithmeticerror": [278, 303, 1086], "waaah": 278, "abgebrannt": 278, "puh": 278, "intakt": 278, "is_even": [278, 282, 352, 358, 760, 761, 762, 763], "0x7fac81f52df0": 278, "0x7fac81cb5700": 278, "progamm": 278, "tumpfback": 278, "och": 278, "umpfback": 278, "rt": [278, 840, 864, 868, 878, 889, 891, 896, 899, 902, 905, 908, 984], "wholefil": 278, "notepad": 279, "betreiben": [279, 1245, 1252, 1253], "unterschiedlichen": 279, "sinnvol": 279, "umgebungen": 279, "unausweichlich": 279, "installationsverzeichni": 279, "verzeichniss": [279, 1247], "ausf\u00fchren": 279, "hernimmt": 279, "wei\u00df": 279, "rennt": 279, "ordereddict": 280, "__mro__": 280, "udemi": 280, "successor": [281, 449], "repeatedli": [281, 699, 1200], "kantenlaeng": 282, "ipykernel_101004": 282, "2437887948": 282, "0x10": [282, 285, 368, 538], "0b1111111111111111111111111111111111111111111111111111111111111111": [282, 303, 320, 324, 352, 358, 364, 368], "1267650600228229401496703205381": 282, "735611673": 282, "ndigit": [282, 303, 352, 368, 428], "0b101": 282, "0b100": [282, 285], "register_statu": 282, "0b1001000": 282, "0b00001000": 282, "strom": [282, 352], "liegt_strom_an": 282, "0b00111110": 282, "ever": [282, 342, 504, 524, 538, 564, 927, 993, 1117, 1241], "deadbeef": [282, 601, 987], "gross": 282, "doktor": 282, "jawui": 282, "akademik": 282, "ndef": [282, 352], "tdef": [282, 303], "geh": 282, "hochkomplex": [282, 358], "verendet": 282, "euler": 282, "sche": 282, "dokumentiern": 282, "koennt": 282, "varianc": 282, "fmean": 282, "geometric_mean": 282, "harmonic_mean": 282, "harmon": 282, "median": 282, "median_low": 282, "median_high": 282, "median_group": 282, "50th": 282, "percentil": 282, "multimod": 282, "quantil": 282, "centr": 282, "nearest": [282, 567, 1195], "doctest": 282, "ellipsi": [282, 303], "8333333333": 282, "8333": 282, "spread": 282, "pvarianc": 282, "pstdev": 282, "stdev": [282, 1048, 1050], "38961843444": 282, "recalcul": 282, "statisticserror": 282, "normaldist": 282, "x1": 282, "jointli": 282, "rescal": 282, "cdf": 282, "cumul": [282, 498], "inv_cdf": 282, "coeffici": 282, "ovl": 282, "agreement": 282, "densiti": 282, "8035050657330205": 282, "dx": 282, "quartil": 282, "decil": 282, "zscore": 282, "score": 282, "from_sampl": 282, "readonli": 282, "dataset": [282, 1191, 1193, 1206, 1208, 1210, 1212], "subcontrari": 282, "reciproc": 282, "quantiti": [282, 314, 1195], "earn": 282, "5625": 282, "midpoint": 282, "estim": 282, "nomin": 282, "taught": [282, 1110, 1246], "aabbbbbbbbcc": 282, "aabbbbccddddeeffffgg": 282, "986893273527251": 282, "0th": 282, "100th": 282, "xbar": 282, "0810874155219827": 282, "3720238095238095": 282, "01875": 282, "gesamter_gruss": 282, "excelsheet": 282, "hinters": 282, "gabali": 282, "helen": 282, "fischer": 282, "sssklndkfgv": 282, "fosvh": 282, "worl": [282, 285, 1124], "lowr": 282, "dlrow": [282, 1124], "olleh": [282, 1124], "even_numbers_fun": 282, "even_numbers_gen": 282, "evennum": 282, "even_filt": 282, "tausend": 282, "1234250497": [282, 285, 288, 291, 544, 551, 703], "1234250597": 282, "users_json_str": 282, "liest": 282, "kontrah": 282, "verwandelt": 282, "gelesenes_ding_wieder_als_dict": 282, "schatz": 282, "erich": 282, "koxi": 282, "hatkeinenwert": 282, "fn": [282, 489, 506, 838, 1212], "ul": [282, 443], "ln": [282, 489], "1st": [283, 1230], "einschub": 283, "filterketten": 283, "datensatz": 283, "letzten": 283, "recapitul": 284, "naeherungsverfahren": 285, "addieren": 285, "140606563548752": 285, "wirklich": [285, 1236], "0o10": 285, "teilbar": 285, "00001": 285, "abd": [285, 669], "i1": [285, 320], "140606428182128": 285, "140606428182896": 285, "2345010101": 285, "elizabeth": [285, 1177, 1179, 1183, 1185, 1196], "1901": 285, "evi": 285, "maxim": [285, 504, 994], "wuerfeln": [285, 369], "freuen": 285, "sechser": 285, "faellt": 285, "jammern": 285, "versuch_numm": 285, "versuchen": 285, "jammert": 285, "hlo": [285, 1124], "output_list": [285, 1170], "nullt": 285, "34567654567": 285, "gsd": 285, "another_t": 285, "symmetisch": 285, "netzwerkkommunik": 285, "request_to_send": 285, "request_str_to_send": 285, "1651046407": 285, "3633313": 285, "cabl": [285, 918], "request_str_from_c": 285, "request_from_c": 285, "1651046335": 285, "8477345": 285, "139909434561408": 285, "139909544402512": 285, "139909544402544": 285, "139909543772528": 285, "139909433666288": 285, "roo": [285, 324, 979], "xf6": [285, 288, 330, 1118, 1201], "joerg_latin": 285, "xf6rg": [285, 288, 330, 342, 346, 1201], "j\u0456rg": [285, 288, 330, 346, 1201], "cyclic": 287, "140616191009600": 288, "140616191012720": 288, "140116274372176": 288, "0x7f6f5cc2de50": 288, "0x7f6f5cc2df30": 288, "18446744073709551617": 288, "multi_dict": 288, "ipykernel_189565": 288, "1743780635": 288, "140115753096128": 288, "ntri": 288, "bytes_joerg": 288, "bytes_joerg_iso_latin_1": 288, "bytes_joerg_utf_32": 288, "xff": [288, 330, 346], "xfe": [288, 330, 346], "x00": [288, 330, 346, 992], "x00j": [288, 330], "x00r": [288, 330], "x00g": [288, 330], "bytes_joerg_utf_16": 288, "xfej": 288, "bytes_joerg_utf_8": 288, "xc3": [288, 324, 330, 346, 1062, 1118, 1201], "xb6rg": [288, 324, 330, 346, 1201], "iso_latin_1": 288, "russian": 288, "bytes_received_by_russian": 288, "2435": 288, "010d": 288, "0000000666": 288, "ssi": 288, "garbag": [288, 499, 506, 542, 802, 814, 994, 1021, 1084], "ipykernel_4000": 288, "3227798639": 288, "ahja": 288, "24000": 288, "24500": 288, "25000": 288, "25500": 288, "26000": 288, "26500": 288, "__del__": 288, "whe": 288, "13397": 288, "116985": 288, "120725": 288, "118110": 288, "0x7fe3a392aa30": 288, "test_person_bas": 290, "pluggi": [290, 308, 1176, 1221], "rootdir": [290, 308, 887, 1176, 1221], "test_persondb_bas": 290, "test_pytest_demo": 290, "xfail": [290, 1221], "test_persondb": 290, "test_duplicate_svnr": 290, "test_update_sunnycas": 290, "test_update_notexist": 290, "test_update_exact_dupl": 290, "former": [290, 1127], "persondb": 290, "sqlite": [290, 513, 515, 516, 1144, 1197], "ics_demand": 290, "maco": [290, 397, 402], "woe": 290, "homebrew": 290, "brew": 290, "flaviocop": 290, "str_mit_666": 291, "140240419976192": 291, "140240419593568": 291, "aclass": 291, "almostempti": 291, "beenther": 291, "kuckucksei": 291, "chirp": 291, "some_bullshit": 291, "bad_thing_happen": 291, "do_some_bullshit": 291, "boah": [291, 352], "python_cod": 291, "a_global_vari": 291, "globale_vari": 291, "140240513015376": 291, "140240513014256": 291, "140240419270768": 291, "140240419271792": 291, "storesanintegerandmodifiesit": 291, "the_int": 291, "my_int": 291, "saiami": 291, "storesalistandmodifiesit": 291, "the_list": 291, "append_someth": 291, "salami": 291, "compute_squar": 291, "satanicerror": 291, "jess": 291, "invalidsvnr": 291, "rex_lin": 291, "json_str": [291, 1184], "python_l": 291, "0x7f8c0551f490": 291, "behandlung": 293, "kurzer": 293, "reicht": [293, 1236], "unwichtig": 293, "weggelassen": 293, "\u00fc": [293, 1201], "jeden": 293, "teilnehmer\u00fcbung": 293, "kernsprach": 293, "rvalu": [293, 315, 355, 645, 751, 783, 793, 799, 802, 803, 804, 805, 808, 816, 837, 839, 840, 1240, 1241, 1242], "constexpr": [293, 294, 295, 315, 317, 355, 783, 793, 817, 838, 839, 840, 1241], "uniform": [293, 294, 295, 297, 354, 373, 380, 504, 544, 646, 678, 698, 699, 743, 783, 792, 837, 839, 840, 1099, 1241], "initialisierung": [293, 1257], "infer": 293, "speichermodel": 293, "atomar": [293, 1239, 1257], "standardbibliothek": 293, "regu\u00e4r": 293, "trait": 293, "zufallszahlen": 293, "zeitbibliothek": 293, "sprachsyntax": 293, "deduct": [293, 758, 760], "erweiterungen": 293, "ge\u00e4ndert": 293, "definitionen": 293, "bibliothek": 293, "zusatzvari": 293, "constinit": 293, "modularisierung": [293, 398, 1238], "versionierung": 293, "routinen": 293, "synchronisierung": 293, "werkzeug": [293, 1238, 1245, 1247, 1252, 1255], "kalend": [293, 1235], "zeitzonen": 293, "zus\u00e4tz": 293, "chrono": [293, 294, 295, 297, 306, 354, 373, 374, 549, 743, 804, 815, 816, 821, 839, 840], "initializer_list": [294, 295, 297, 354, 355, 380, 545, 546, 573, 574, 743, 745, 783, 839, 840], "handwrit": [294, 295, 297, 354, 373, 380, 783, 799, 839, 840], "weak_ptr": [294, 295, 297, 354, 355, 373, 374, 380, 799, 837, 839, 840], "boilerpl": [294, 295, 297, 333, 349, 354, 355, 373, 374, 375, 376, 377, 378, 379, 380, 517, 523, 533, 536, 783, 784, 785, 803, 839, 840, 1064, 1237], "condition_vari": [294, 295, 297, 306, 354, 373, 374, 816, 839, 840, 1241], "emplace_back": [294, 295, 678], "cref": [294, 295], "interoper": [295, 297, 315, 317], "wazoo": [295, 297, 315, 317], "anviron": [295, 297], "submodul": [295, 297, 599, 662], "chdir": [295, 297, 358], "gtest_main": [295, 549, 598, 600, 601, 621, 624, 636, 662, 801, 802, 1227, 1232], "dummy_suit": 295, "sticki": [296, 305, 306, 326, 327, 370, 371, 397, 402, 840, 917, 943, 984], "insod": 297, "lvalu": [297, 354, 355, 373, 374, 380, 751, 752, 755, 783, 793, 799, 803, 808, 816, 837, 839, 840], "afterword": [297, 354, 355, 373, 380, 752, 783, 839, 840], "ain": [297, 374, 504, 1114], "singleton": [298, 358, 373, 541, 542, 548, 562, 576, 590, 642, 840, 1244], "inflex": [298, 424, 541, 555, 562, 568, 569, 576, 590, 642, 840], "proxi": [298, 316, 318, 319, 340, 344, 380, 403, 541, 548, 550, 551, 562, 576, 590, 642, 840, 1216, 1244], "serverthread": [298, 566, 580], "my_si": [300, 1094], "function_returns_two_valu": 300, "140134238766608": 300, "sizeof": [300, 428, 438, 449, 470, 477, 478, 482, 485, 625, 637, 649, 677, 744, 806, 988, 1006, 1010, 1011, 1012, 1018, 1019, 1020, 1021, 1046, 1052, 1055, 1059, 1126], "__getformat__": 300, "__setformat__": 300, "fromhex": 300, "0b0010": 300, "0b1001": 300, "key_list": 300, "key_tupl": 300, "evil_list": 300, "evil_list_2": 300, "neinem": 300, "nviel": 300, "doze_path": [300, 303], "compiled_regex": 300, "l_json": 300, "l_json_sent": 300, "received_data": 300, "0x7f73869f06c0": 300, "create_avg_item": 300, "ninetynin": 300, "koppel": 302, "netzwerk": [302, 398, 1245, 1255, 1258], "condens": [302, 357, 505], "nprint": 303, "noption": 303, "nfile": 303, "nsep": 303, "nend": 303, "nflush": 303, "forcibli": 303, "didact": [303, 415, 418, 661, 663, 664, 1244], "fullnam": [303, 310, 1103, 1107], "nerst": 303, "nzweit": [303, 358, 392], "andere_list": 303, "neue_list": 303, "140323934455312": 303, "140323934455344": 303, "140323934455376": 303, "140323852147712": 303, "140323933649904": 303, "140323833601584": 303, "frozenset": [303, 320, 341], "__builtins__": [303, 324, 358, 1087], "gr\u00fc\u00df": 303, "nocheinprogramm": 303, "ocheinprogramm": 303, "dfghgfdfghj": 303, "jhghgh": 303, "matchstr": 303, "compiled_match": 303, "tprint": 303, "num_ss": 303, "isi": [303, 368, 603, 619, 1205], "strippeditem": 303, "yet_another_d": 303, "s3": [303, 310, 563], "s4": 303, "isdisjoint": [303, 310, 342, 1136], "nnoteworthi": 303, "nil": 303, "__package__": [303, 390, 1087], "__loader__": [303, 390, 1087], "__spec__": [303, 390, 1087], "modulespec": 303, "loader": [303, 494, 537, 539, 1062, 1080, 1255], "__build_class__": 303, "__import__": 303, "dont_inherit": 303, "_feature_vers": 303, "divmod": 303, "raw_input": 303, "ipkernel": 303, "ipythonkernel": 303, "0x7f9fb16abcd0": 303, "class_or_tupl": 303, "aiter": 303, "async_iter": 303, "anext": 303, "oct": [303, 970, 992, 994], "pow": [303, 654, 655, 806], "exp": [303, 578], "notimpl": [303, 342, 346, 364, 1106], "memoryview": 303, "__debug__": 303, "stopasynciter": [303, 1086], "generatorexit": [303, 1086], "keyboardinterrupt": [303, 319, 1086], "importerror": [303, 1086], "environmenterror": [303, 1216], "ioerror": [303, 1222], "eoferror": [303, 1086], "notimplementederror": [303, 1086], "unboundlocalerror": [303, 1086], "indentationerror": [303, 1086], "taberror": [303, 1086], "unicodeerror": [303, 1086], "unicodedecodeerror": [303, 346, 352, 358, 1086], "unicodetranslateerror": [303, 1086], "floatingpointerror": [303, 1086], "overflowerror": [303, 1086], "systemerror": [303, 1086], "referenceerror": [303, 1086], "memoryerror": [303, 1086], "buffererror": [303, 1086], "userwarn": [303, 1086], "encodingwarn": [303, 1086], "deprecationwarn": [303, 1086], "pendingdeprecationwarn": [303, 1086], "runtimewarn": [303, 1086], "futurewarn": [303, 1086, 1205], "importwarn": [303, 1086], "unicodewarn": [303, 1086], "byteswarn": [303, 1086], "resourcewarn": [303, 1086], "connectionerror": [303, 1086], "blockingioerror": [303, 1086], "brokenpipeerror": [303, 1086], "childprocesserror": [303, 1086], "connectionabortederror": [303, 1086], "connectionrefusederror": [303, 1086], "connectionreseterror": [303, 1086], "fileexistserror": [303, 1086], "isadirectoryerror": [303, 1086], "notadirectoryerror": [303, 1086], "interruptederror": [303, 1086], "processlookuperror": [303, 1086], "timeouterror": [303, 1086], "closefd": 303, "beopen": 303, "1995": [303, 552, 1177, 1179, 1183, 1185], "nation": [303, 992], "1991": [303, 1112], "sticht": 303, "centrum": 303, "amsterdam": [303, 1112], "credit": [303, 858, 1113], "cwi": 303, "cnri": 303, "zope": 303, "cast": [303, 449, 625, 713, 720, 819, 846], "execfil": 303, "_pydev_imp": 303, "_pydev_execfil": 303, "glob": [303, 481, 976, 1033, 1082, 1097, 1228], "runfil": 303, "_pydev_bundl": 303, "pydev_umd": 303, "wdir": 303, "__ipython__": 303, "exclud": [303, 500, 647], "transient": 303, "display_id": 303, "get_ipython": 303, "interactiveshel": 303, "zmqshell": 303, "zmqinteractiveshel": 303, "0x7f9fb1516200": 303, "config_fil": 303, "srcdir": 303, "dstdir": 303, "dst": [303, 444, 494, 603, 644, 663, 672, 673, 679, 1137], "untrust": 306, "lan": 306, "programmat": [306, 570, 985, 993, 1041, 1061, 1213], "stty": 306, "termio": 306, "ioctl_tti": 306, "setseri": 306, "tty": [306, 918, 974, 1046, 1052, 1077], "tty_io": 306, "bidirection": 306, "nake": 306, "tiocgseri": 306, "tiocsseri": 306, "async_low_lat": 306, "cfmakeraw": 306, "ttyusb0": [306, 918], "low_lat": 306, "serial_struct": 306, "bidir": 306, "advantec": 306, "nonetheless": [306, 309, 312, 341, 760, 1228], "mycat": 306, "mimick": [306, 801], "make_realtim": 306, "interfaceri": 306, "cif": [306, 358], "samba": [306, 358], "automationadmin": 306, "gsc": 306, "pd": [307, 308, 310, 314, 342, 506, 1191, 1193, 1205, 1206, 1207, 1209, 1210, 1211, 1212], "read_csv": [307, 308, 314, 342, 346, 352, 364, 506, 1191, 1193], "txn": 307, "iso8859": 307, "time_book": [307, 308, 506], "time_valuta": [307, 308, 506], "at66666666666666": 307, "bezahlung": [307, 308, 310, 506], "kart": [307, 308, 310, 506], "eur": [307, 308, 506], "95111243": [307, 506], "abbuchung": [307, 506], "onlinebank": [307, 506], "gutschrift": 307, "000000144919": 307, "339099446722187": 307, "000": [307, 342, 346, 352, 506, 947, 985], "card_pay": 307, "filt": 307, "9325008697": 307, "339099446790254": 307, "og": [307, 494], "237811001182": 307, "auszahlung": 307, "200075787001": 307, "tzb": 307, "anl": 307, "347159strom": 307, "200004871820": 307, "200004876265": 307, "200004848862": 307, "200004871863": 307, "dauerauftrag": 307, "qsnng6xau": 307, "00121672661": 307, "120016487112": [307, 506], "bx": 307, "000009219": 307, "entgelt": 307, "nichtdurchf\u00fchrung": 307, "032300005522384": 307, "saldo": 307, "messtechnik": 307, "602674240071": 307, "0004325259000023": 307, "oeamtc": 307, "mitgliedschaft": 307, "re_liv": 307, "billa": [307, 310, 506], "rew": 307, "dankt": [307, 308, 310, 506], "pipe_stag": 308, "max_colwidth": 308, "max_column": 308, "max_row": 308, "039": 308, "consolut": 308, "insuffici": [308, 372, 757], "categor": [308, 505, 1195], "fuction": 308, "filt_uncat": 308, "uncat_row": 308, "unspecif": [308, 408, 865], "useless": [308, 751, 809, 932, 979, 1035, 1108], "food": [308, 314], "luxuri": 308, "categorize_card_pay": 308, "jet": 308, "uncertainti": 308, "categorize_v1": 308, "categorize_v2": 308, "secondari": 308, "test_categori": [308, 506], "test_bas": [308, 1176], "000009258": 308, "k002": [308, 506], "impos": [309, 312], "hurt": [309, 312, 443], "strength": [309, 312, 470, 1110], "overengin": [309, 312, 443, 504, 505, 1236, 1244], "140480285361680": 310, "0xffffffffffffffff": [310, 330, 346], "0x10000000000000000": [310, 330, 346], "140479638276224": 310, "140480203220736": 310, "140480210406176": 310, "7940943354778932823": 310, "0x7fc4189e7c90": 310, "28800": 310, "237988": 310, "produce_dai": 310, "374557": 310, "l_mal_2": 310, "140480285361712": 310, "140479638477760": 310, "140479638427520": 310, "l4": 310, "l5": 310, "140480202528192": 310, "140479638428736": 310, "140480203212992": 310, "l6": 310, "140479598069936": 310, "is_old": 310, "ipykernel_370861": 310, "4290492544": 310, "abc123": [310, 364], "0x7fc4189e5030": 310, "yyi": [310, 352, 364], "lichtenberg": [310, 544, 703, 736, 738, 1177, 1179, 1183, 1185, 1205, 1206, 1207, 1209, 1210, 1211, 1212], "persons2": [310, 1205, 1206], "set_index": [310, 1210], "sort_valu": 310, "inplac": [310, 314, 519, 1001, 1206], "flt": [310, 1207], "isin": [310, 1207], "reset_index": 310, "dropna": 310, "value_count": [310, 314], "int64": [310, 314, 1212], "conversiosn": 311, "9am": 312, "woven": [312, 316], "pipelin": [312, 415, 912, 928, 931, 932, 981, 995, 1075], "accountid": 314, "accountdescript": 314, "accountparentid": 314, "storeid": 314, "storedescript": 314, "locationid": 314, "locationdescript": 314, "productid": 314, "productdescript": 314, "sales_managerid": 314, "dateyear": 314, "datequart": 314, "datemonth": 314, "datedai": 314, "categoryvers": 314, "categorycategori": 314, "categorytyp": 314, "valueunit": 314, "original_sales_pric": 314, "sale": 314, "st43": 314, "franchescini": 314, "ct14": 314, "salem": 314, "pd23": 314, "ipa": 314, "sm1": 314, "20144": 314, "201412": 314, "1779": 314, "763910": 314, "usd": 314, "st35": 314, "pd2": 314, "pepsi": 314, "sm4": 314, "201410": 314, "957113": 314, "st98": 314, "walter": 314, "pd24": 314, "amber": 314, "20142": 314, "201406": 314, "449395": 314, "st188": 314, "arrowhead": 314, "ct1": 314, "pd19": 314, "sm8": 314, "20164": 314, "201611": 314, "078689": 314, "st107": 314, "spire": 314, "ct5": 314, "san": 314, "jose": 314, "pd15": 314, "juic": 314, "sm5": 314, "20154": 314, "201512": 314, "303679": 314, "quantity_sold": 314, "sold": 314, "st4": 314, "gstore": 314, "ct13": 314, "portland": 314, "pd26": 314, "wine": 314, "000000": [314, 1193], "1069": 314, "st49": 314, "bai": 314, "depot": 314, "ct4": 314, "sacramento": 314, "pd27": 314, "20151": 314, "201501": 314, "592904": 314, "discount": 314, "st36": 314, "pricelow": 314, "arena": [314, 823, 825], "ct10": 314, "reno": 314, "pd22": 314, "sm3": 314, "20162": 314, "201605": 314, "4351": 314, "045830": 314, "1071": 314, "st7": 314, "street": [314, 954], "pd16": 314, "7905": 314, "590606": 314, "pd12": 314, "lemonad": 314, "20153": 314, "201507": 314, "1073": 314, "modified_model": 314, "sales_managerdescript": 314, "janet": 314, "buri": 314, "nanci": 314, "miller": 314, "setp": 314, "nan_field": 314, "bitfield": 314, "bitfi": 314, "nan_column": 314, "gabriel": [314, 789], "walton": 314, "carl": 314, "jjjjj": 314, "ref_t": 314, "datetime64": 314, "damn": [314, 524], "ref_2015_12_04": 314, "flt_before_2015_12_04": 314, "rows_before_2015_12_04": 314, "st119": 314, "ct2": 314, "francisco": 314, "pd11": 314, "orang": [314, 524, 1129], "pulp": 314, "sm7": 314, "kiran": 314, "raj": 314, "201503": 314, "226847": 314, "13627": 314, "793342": 314, "3427": 314, "896898": 314, "15569": 314, "353983": 314, "float64": [314, 346, 352, 364, 1193], "1957": 314, "740301": 314, "572676": 314, "686587": 314, "289381": 314, "flt_product_pd2": 314, "flt_2015": 314, "flt_only_sold": 314, "flt_combin": 314, "st139": 314, "farlo": 314, "ct15": 314, "eugen": 314, "sm11": 314, "jame": 314, "frank": 314, "201511": 314, "st178": 314, "rai": 314, "ct8": 314, "beverli": 314, "hill": 314, "201508": 314, "facet": [315, 317, 698], "rich": [315, 317, 1206, 1215], "toolset": [315, 317, 716], "conceptu": [315, 317, 495, 858, 865, 1004], "undergon": [315, 317], "revolut": [315, 317], "odr": [315, 789], "explor": [315, 993], "rodata": [315, 1080], "unspecifi": [315, 449, 556, 628, 1059, 1060], "bookkeep": [316, 505], "fewer": 316, "closer": 316, "augment": [316, 887, 1202], "test_blah": 316, "monkeypatch": [316, 318, 319, 334, 340, 341, 344], "contextlib": 316, "chatgpt": 317, "ludwig": 317, "registri": [317, 609], "memleak": 317, "jason": [318, 319, 340], "brownle": [318, 319, 340], "contriv": [318, 319, 340, 374, 547, 1087, 1122], "subthread": [318, 319], "introductori": [318, 319, 340, 345, 840, 984, 1025, 1194, 1195, 1241], "mindset": [318, 319, 340, 344, 372, 887], "develp": 318, "10am": 319, "reopen": 319, "drei_millionen_int": 320, "3_000_000": 320, "odd_numb": [320, 1091], "odd_numbers_func": 320, "ret_num": 320, "0x7f32ccc4c610": 320, "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000": [320, 368, 392], "139855258515840": 320, "139856078033344": 320, "139856078226432": 320, "139856160540176": 320, "i3": 320, "i4": 320, "nope": [320, 1041], "0101010101010": 320, "bash_logout": [320, 970], "bash_profil": [320, 970], "thunderbird": [320, 358, 950, 970], "gnupg": [320, 358, 970], "hst": 320, "gitconfig": [320, 970], "pki": [320, 358, 970], "daham": 320, "20230403": 320, "222915": 320, "bash_histori": [320, 970], "python_histori": [320, 970], "lesshst": [320, 970], "139855258795072": 320, "139855260513728": 320, "139856085569920": 320, "doppelt": 320, "gemoppelt": 320, "trag": 320, "exakt": 320, "paarweis": 320, "read_lines_of_fil": 320, "0x7f32c7d8d390": 320, "nohead": [323, 1182, 1183, 1185], "userdb_csv": [323, 1183, 1184, 1185], "interleav": [323, 518], "dosometh": 324, "0x7fe7fbf80df0": 324, "140634424624656": 324, "140634424623536": 324, "0o644": 324, "0b01110101": 324, "setting_blah": 324, "setting_foo": 324, "config_context": 324, "140634341074320": 324, "140634424624688": 324, "140634341076688": 324, "140634341077776": 324, "140634343012864": 324, "140634341099856": 324, "ipykernel_61373": 324, "1125713270": 324, "1234567876543234567654321234565432123456": 324, "140634281233520": 324, "140634341798400": 324, "140634341995008": 324, "140634341576640": 324, "140634341773312": 324, "140634281802304": 324, "global_vari": [324, 526], "bar2": 324, "bar3": 324, "bar4": 324, "bar5": 324, "bar6": 324, "0x7fe7f869b7d0": 324, "0x7fe7f869b920": 324, "0x7fe7f869bbc0": 324, "punctuat": 324, "abcabcabcabcabc": [324, 352], "rex": [324, 358], "cba": [324, 707], "another_d": 324, "rb": [324, 364], "30000": 324, "coreutil": 327, "autopoint": 327, "rpm": [327, 358, 539], "fcntl": [327, 992, 1010, 1014, 1018, 1019, 1020, 1021, 1026, 1029, 1052, 1055, 1059], "luciano": [329, 398, 399, 1188], "ramalho": [329, 398, 399, 1188], "140640823526928": 330, "0x7fe97e53c610": 330, "140640823526960": 330, "140640741310912": 330, "140640741034048": 330, "140640741341184": 330, "wasjetzt": 330, "140640722624768": 330, "140640722715136": 330, "l1_copi": [330, 358], "my_funky_gener": 330, "meine_dumme_sequenz": 330, "0x7fe9785083a0": 330, "0x7fe98c21bce0": 330, "greeter": [330, 508, 509, 511, 516, 535, 1079], "0x7fe9796976d0": 330, "140640740502720": 330, "140640722823952": 330, "140640741119552": 330, "l_copi": 330, "140640741312256": 330, "140640722734080": 330, "140640722760768": 330, "140640722739712": 330, "140640741402496": 330, "owher": 330, "0000042": [330, 1132], "bled": 330, "xfc": [330, 346, 1118, 1201], "xdfe": [330, 346, 1201], "gr\u045c\u043fe": [330, 346, 1201], "\u795d\u597d": [330, 346], "big5": [330, 346, 1201], "xaf": [330, 346], "xac": [330, 346], "xa6n": [330, 346], "unterschrift": 330, "illeg": [330, 486, 1201], "multibyt": [330, 432, 1201], "xe7": [330, 346, 1201], "xa5": [330, 346, 1201], "x9d": [330, 346, 1201], "xe5": [330, 346, 1201], "xbd": [330, 346, 1201], "incorpor": [332, 348, 1243], "tradition": [332, 348, 793, 987, 1109, 1243], "lexer": [332, 348, 1243], "aris": [332, 348, 555, 1243], "compili": [332, 348, 1243], "rant": [333, 349, 375, 376, 377, 378, 379, 517, 519, 523, 528, 533, 536, 840, 1211], "blacklist": [333, 349, 358, 375, 378, 510, 516, 517, 523, 524, 531, 533, 840], "acquaint": [334, 337], "data_to_send": 335, "data_receiv": 335, "user_receiv": [335, 1184], "140048588115008": 335, "140048588341376": 335, "d_str": [338, 722], "uebertragen": 338, "d_str_receiv": 338, "d_receiv": 338, "ala": [341, 344, 569, 660, 944, 1010, 1050, 1216], "frozendict": [341, 342], "filesensor": 341, "sergei": 341, "test_acquisition_loop": 341, "test_mock_csv_sink": 341, "mymockedth": 341, "nonloc": [341, 1128], "millcelsiu": 341, "acquisition_loop_util": 341, "ont": 341, "necessarili": [341, 470, 500, 677, 838, 873, 887, 925, 1005, 1104, 1223, 1230], "10m": [341, 1050], "acquir": [341, 372, 406, 817, 892, 1035, 1040, 1049], "slower": [341, 494, 925], "packet": [341, 566, 881, 988, 1011, 1044], "transmit": 341, "datatim": 341, "read_measur": 341, "fourier": 341, "fft": 341, "011": [341, 352], "ifft": 341, "print_": 342, "0x7f0b165fdf00": 342, "dos_path": [342, 358, 392], "vernuenftigen": 342, "__class_getitem__": 342, "__iand__": 342, "__ior__": 342, "__isub__": 342, "__ixor__": 342, "difference_upd": 342, "intersection_upd": 342, "issubset": 342, "issuperset": 342, "symmetric_differ": 342, "symmetric_difference_upd": 342, "hallohallohallohallohallo": 342, "139685905188368": 342, "139685905188400": 342, "0x7f0b14487be0": 342, "fasschingbau": 342, "139685602274352": 342, "139685561461616": 342, "139685561690240": 342, "139685561316032": 342, "139685595970464": 342, "139685561151488": 342, "30000000": 342, "my_iter": 342, "my_print": [342, 1109], "my_arg": [342, 1084], "even_squar": [342, 352, 364], "squares_fun": 342, "squares_gen": 342, "0x7f0aefb94f20": 342, "0x7f0aefb955b0": 342, "squares_list": 342, "foobar": 342, "expr_str": 342, "expr": [342, 455, 465, 948], "skiprow": 342, "hz2": 342, "hz3_5": 342, "000566": 342, "000729": 342, "132363": 342, "229977": 342, "260597": 342, "444942": 342, "385433": 342, "638212": 342, "502710": 342, "796519": 342, "936250": 342, "972326": 342, "974442": 342, "999992": 342, "995683": 342, "973719": 342, "999245": 342, "895850": 342, "985202": 342, "768778": 342, "arang": 342, "001": [342, 352, 446], "002": 342, "003": 342, "004": 342, "0x7f0ad44b8f70": 342, "0x7f0ad23371f0": 342, "aaarghhh": 343, "expresss": 343, "realist": [344, 1004], "postpon": [344, 907], "coverag": [345, 1093], "hackin": 345, "mocksink": 345, "139680347735568": 346, "0x10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000": 346, "0xabc": 346, "convert_to_int": 346, "konvertieren": 346, "drei_int": 346, "fooabc": 346, "userlin": 346, "tjr": 346, "\u00f6rg": 346, "0xc3": [346, 352, 358], "enc_": 346, "enc_s_recvd": 346, "ipykernel_81650": 346, "1521975281": 346, "lg_joerg": 346, "concat": [346, 506, 1205], "linksunten": 346, "rechtsoben": 346, "meinsinussensor": 346, "sinvalu": 346, "ndarrai": [346, 1194, 1210], "0x7f67142f53c0": 346, "timeit": 351, "0x64": 352, "0b1100100": 352, "0b100101100": 352, "0b0": 352, "type_of_i": 352, "schade": 352, "worldhello": 352, "140572055569936": 352, "500001": 352, "499999999999999999999999": 352, "4999": 352, "my_round": 352, "diff_to_next": 352, "5001": 352, "500000001": 352, "str_i": 352, "int_i": 352, "float_i": 352, "nocheinelist": 352, "140571746172800": 352, "140571753417312": 352, "my_": 352, "2282548071841868421": 352, "oioi": 352, "ueberbleibsel": 352, "my_sum": 352, "doom": 352, "0x7f48e8543060": 352, "doedel": 352, "sdhcbdhcb": 352, "kjsdskbh": 352, "akjsdhvksb": 352, "item2": [352, 835, 836], "line_r": 352, "tyyi": 352, "mp_left": 352, "mp_top": 352, "mp_right": 352, "mp_righ": 352, "brenner": 352, "kupfer": 352, "koax": 352, "oberflaech": 352, "gasdues": 352, "fsc": 352, "zellentemp": 352, "raumtemp": 352, "vdc": 352, "077": 352, "090": [352, 743], "76220": 352, "77849": 352, "086": 352, "81216": 352, "99354": 352, "92051": 352, "035": [352, 1058, 1059], "82874": 352, "075": 352, "006": 352, "78855": 352, "098": 352, "036": 352, "007": 352, "76466": 352, "091": 352, "64736": 352, "65062": 352, "transform_t": 352, "transformed_timestamp": 352, "646126e": 352, "646130e": 352, "mpleft_1": 352, "mpleft_2": 352, "0x7f48ab74abf0": 352, "0x7f48a96648b0": 352, "noch_eine_vari": 352, "even_pr": 352, "0x7f48a9505b40": 352, "0x7f48a95250e0": 352, "squaredict": 352, "squaresset": 352, "bloat": [354, 355, 380, 482, 824, 833, 839, 840, 1106], "ugh": 354, "urgh": 354, "nodiscard": 354, "fallthrough": [354, 1059], "noexcept": [354, 545, 579, 751, 754, 756, 771, 773, 774, 776, 777, 778, 779, 793, 803, 817], "string_view": [354, 373], "hierachi": 355, "conveni": [355, 429, 538, 726, 913, 994, 1059, 1080, 1193], "powercontrol": 355, "temperaturecontrol": 355, "get_target_temperatur": 355, "copyabl": [355, 645], "_run": 355, "kochtopftemperaturecontrol": 355, "get_current_temperatur": 355, "debt": [355, 568, 569, 570, 582, 583, 584], "erasur": [355, 380, 824, 833, 839, 840], "align": [355, 415, 483, 492, 496, 501, 502, 745, 783, 823, 837, 839, 840, 986, 988, 1055, 1132, 1239, 1242], "98f8b9be": 358, "ad8f": 358, "4023": 358, "81a2": 358, "d1dc67d0282c": 358, "python310": 358, "139783143835152": 358, "0x7f21cca24610": 358, "0b10000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000": 358, "1_000_000": 358, "3267": 358, "139782834179584": 358, "139783143835184": 358, "meng": 358, "m1": 358, "m2": 358, "leeres_set": 358, "d_revers": 358, "yaai": 358, "my_deppertes_rang": 358, "mdr": 358, "objeckt": 358, "139782799029888": 358, "139782798781696": 358, "139782798895952": 358, "139782798895792": 358, "139782798980096": 358, "schuld": 358, "300000": [358, 993, 1193], "compiled_pattern": 358, "__builtin__": 358, "139782799135312": 358, "0x7f21b81bbe60": 358, "getcwd": 358, "extlinux": 358, "favicon": 358, "grub2": 358, "opensc": 358, "packagekit": 358, "upow": 358, "authselect": 358, "bash_complet": 358, "binfmt": 358, "brltty": 358, "ceph": [358, 913], "chkconfig": 358, "cupshelp": 358, "dconf": 358, "debuginfod": 358, "depmod": [358, 865, 883], "dracut": 358, "egl": 358, "firewalld": [358, 926], "flexiblasrc": 358, "font": 358, "fwupd": [358, 926], "gcrypt": 358, "gdbinit": 358, "glvnd": 358, "groff": 358, "gss": 358, "gssproxi": 358, "hp": 358, "iproute2": 358, "iscsi": 358, "jvm": 358, "kdump": 358, "krb5": 358, "libblockdev": 358, "libibverb": 358, "libnl": 358, "libpap": 358, "libreport": 358, "libssh": 358, "libvirt": 358, "logrot": 358, "lvm": 358, "mcelog": 358, "mdevctl": 358, "modprob": [358, 865, 887, 888, 987, 992, 993, 994], "motd": 358, "cnf": 358, "ndctl": 358, "nftabl": 358, "openldap": 358, "ostre": 358, "pam": 358, "pkcs11": 358, "pkgconfig": [358, 517], "plymouth": 358, "polkit": 358, "popt": 358, "ppp": 358, "puls": [358, 985, 1245, 1252], "rwtab": 358, "sasl2": 358, "selinux": 358, "sgml": 358, "skel": 358, "speech": 358, "sssd": 358, "statetab": 358, "sudoer": [358, 931], "swid": 358, "sysconfig": 358, "sysctl": 358, "terminfo": 358, "thermald": 358, "tmpfile": 358, "tpm2": 358, "udev": 358, "udisks2": 358, "vmware": [358, 927], "vpnc": 358, "vulkan": 358, "wireplumb": 358, "wpa_supplic": 358, "xdg": 358, "dir_color": 358, "lightbgcolor": 358, "grep_color": 358, "adjtim": 358, "bindresvport": 358, "brlapi": 358, "dleyna": 358, "fprintd": 358, "jwhoi": 358, "libaudit": 358, "libus": 358, "mailcap": 358, "man_db": 358, "mime": 358, "mke2f": 358, "nanorc": 358, "netconfig": 358, "papers": 358, "passwdqc": 358, "pinforc": 358, "sestatu": 358, "tcsd": 358, "usb_modeswitch": 358, "vconsol": 358, "wgetrc": 358, "xattr": 358, "crypttab": 358, "localtim": 358, "mtab": 358, "subuid": 358, "subgid": 358, "timid": 358, "vdpau_wrapp": 358, "asound": 358, "idmapd": 358, "mtool": 358, "rsyncd": 358, "anthi": 358, "trolltech": 358, "rygel": 358, "virc": 358, "swtpm": 358, "localca": 358, "swtpm_setup": 358, "uresourc": 358, "ethertyp": 358, "inputrc": 358, "printcap": 358, "csh": [358, 1223], "nfsmount": 358, "nsswitch": 358, "gshadow": 358, "shadow": [358, 923, 944, 1020, 1128, 1166], "rhashrc": 358, "imagemagick": 358, "cshrc": 358, "gimp": 358, "updatedb": 358, "dl": 358, "containerd": [358, 1077], "lftp": 358, "rc0": 358, "rc1": 358, "rc2": 358, "rc3": 358, "rc4": 358, "rc5": 358, "rc6": 358, "cpe": 358, "inittab": 358, "makedumpfil": 358, "sensors3": 358, "posixpath": [358, 368], "kadjckk": 358, "xxddjh": 358, "blahblahblahblah": 358, "schuetzen": 359, "regexen": 359, "afterthought": [363, 1118], "__getstate__": 364, "bit_count": 364, "maximum_numb": 364, "140526007219432": 364, "0x42": 364, "0x7fceb0516c20": 364, "cnt": [364, 1089], "140525696085312": 364, "create_print_funct": [364, 785, 787, 788], "140526007219464": 364, "140525697462832": 364, "140525697462736": 364, "140525697463408": 364, "140525697463280": 364, "match_express": 364, "compiled_express": 364, "joined_l": 364, "hwmon4": 364, "hwmon5": 364, "hwmon7": 364, "hwmon8": 364, "0x7fce70506000": 364, "varibl": 368, "139818180670696": 368, "0x7f29f4fdf4e8": 368, "139817897762928": 368, "0b11111111111111111111111111111111": 368, "0b100000000000000000000000000000000": 368, "139817896921728": 368, "139817466913504": 368, "142334567876545678765456787654": 368, "max_tri": 368, "fuck": [368, 858], "straw": [368, 1125, 1133], "ipaddress": 368, "addr": [368, 858, 871, 883, 988, 993, 1011, 1055, 1221], "ip_address": 368, "ipv4address": 368, "is_loopback": 368, "gueltig": 368, "a_tupl": [368, 1124], "139818180670728": 368, "139817467481600": 368, "modifyit": 368, "sjdgosi": 368, "gfosvbsisvbsok": 368, "file1": [368, 520, 838, 856, 973], "file2": [368, 520, 838, 856, 973], "csv_file": 368, "subdir1": [368, 838], "subdir2": [368, 838], "mein_dir": 368, "mein_csv_fil": 368, "null_eins_zwei": 368, "0x7f296befbc40": 368, "shuffl": 368, "kvpair": 368, "reduct": 368, "img_arrai": 368, "rerun": [368, 652, 802], "unabl": [368, 995], "nbviewer": 368, "kmeansifittedkmean": 368, "18423981": 368, "51866902": 368, "40779841": 368, "94278979": 368, "7484102": 368, "52017749": 368, "71821931": 368, "48415009": 368, "61361798": 368, "10754686": 368, "97606427": 368, "93141702": 368, "5569347": 368, "5296816": 368, "4875877": 368, "85174112": 368, "87099894": 368, "85349982": 368, "35345614": 368, "73043954": 368, "19387197": 368, "7373525": 368, "19961382": 368, "95700493": 368, "richtigen": [368, 1236], "bildern": 368, "austauschen": 368, "einzelenen": 368, "urspruenglich": 368, "veraendert": 368, "reduced_arrai": 368, "datatyo": 369, "einlesen": 369, "00am": 371, "currect": [371, 865, 961], "shortcut": [371, 397, 474, 948, 980, 1118, 1247], "sysvinit": 371, "disclos": [372, 394, 1001], "homeopath": 372, "untest": 372, "monolith": [372, 506, 1062], "toi": [372, 585, 743, 1060], "warehous": 372, "testabl": [372, 505, 1222], "stacker": 372, "sunshin": 372, "consider": [372, 491, 948], "hygien": [372, 430], "inject": [372, 373, 380, 877, 890, 895, 1200], "subtl": [372, 444, 464, 487, 526, 599, 1112], "grew": 372, "vast": 372, "angst": [372, 1259], "realiti": 372, "shoud": [373, 756], "metric": 373, "decai": [374, 674], "upsid": 374, "joinabl": [374, 1257], "detach": [374, 1257], "slow": [374, 464, 495, 499, 695, 994, 1005], "empir": 374, "ping": 374, "pong": 374, "sensor_nam": 374, "yessss": 374, "opencppcoverag": [375, 378], "sonarqub": [375, 378], "backend": [375, 378, 1143], "stub": [375, 378, 840, 847, 849, 854, 857, 864, 868, 878, 891, 896, 902, 905, 908, 984, 1076], "mico": [375, 378], "abi": [375, 378, 534, 539, 865, 867, 1008, 1063, 1064], "add_librari": [376, 379, 509, 512, 517, 523, 531, 533, 538, 539, 585, 630, 639, 840, 1063, 1064], "input_dir": [376, 379], "output_fil": [376, 379], "ausbaufaehig": 376, "subgraph": 376, "target_compile_definit": [376, 379, 510, 513, 517, 523, 531, 533, 840], "configure_fil": [376, 379, 511, 512, 513, 517, 523, 533, 840], "libmosquitto": [376, 379, 517, 523, 533, 840], "add_custom_command": [376, 379, 517, 523, 533, 840], "simplist": [377, 566], "filemosquitto": 377, "cmake_module_path": [377, 512, 528], "cmake_current_source_dir": [377, 507], "unrel": [380, 600, 631, 640, 807, 825, 826, 830, 839, 840, 1046, 1056, 1086, 1103, 1202], "visit": [380, 820, 825, 829, 839, 840], "crtp": [380, 833], "commmandlin": 382, "checker": [383, 388, 397], "horribl": 383, "gpio25": [383, 989], "embarass": 383, "winscp": 383, "cluster_ece19": [383, 384, 385, 386, 387, 388, 397, 840], "ece19": [383, 384, 385, 386, 388, 396, 397, 403, 404, 408, 840], "ece19_blinklicht": [383, 384, 385, 386, 387, 397, 840], "ece19_file_read": [383, 384, 385, 386, 387, 388, 397, 840], "ece19_blinklicht_oo": [384, 385, 386, 387, 397, 840], "ece19_blinklicht_unittest": [386, 387, 397, 840], "ece19_blinklicht_abc": [386, 387, 397, 840], "blinklicht": [387, 397, 402, 840], "1910420003": [388, 389], "corinna": [388, 389], "baumgartn": [388, 389, 406], "1910420002": [388, 389], "anzhelika": [388, 389, 397], "chernykh": [388, 389, 397, 406], "1910420005": [388, 389], "simon": [388, 389], "1910420006": [388, 389], "matthia": [388, 389, 406], "kappel": [388, 389, 406], "1810420009": [388, 389], "kolter": [388, 389], "1920420033": [388, 389], "kornberg": [388, 389, 406, 409], "1910420007": [388, 389], "lui": [388, 389, 406], "kraker": [388, 389, 406, 409], "1810420010": [388, 389], "leonid": [388, 389], "kudriaschov": [388, 389], "1910420008": [388, 389], "michael": [388, 389, 398, 399], "1910420010": [388, 389], "sonja": [388, 389, 406], "luka": [388, 389, 406, 409], "1910420013": [388, 389], "behnaz": [388, 389], "mehrabadi": [388, 389, 406], "1910420014": [388, 389], "moser": [388, 389, 406], "1910420015": [388, 389], "moritz": [388, 389], "nagelschmi": [388, 389, 406], "1910420018": [388, 389], "bianca": [388, 389], "reimer": [388, 389], "1910420020": [388, 389], "schmid": [388, 389, 406], "1910420021": [388, 389], "sch\u00fcttler": [388, 389], "1910420022": [388, 389], "schweiger": [388, 389, 406], "1910420024": [388, 389], "sinabel": [388, 389], "1910420025": [388, 389], "slovik": [388, 389, 406], "1910420026": [388, 389], "s\u00f6l": [388, 389, 406], "1910420027": [388, 389], "stangl": [388, 389, 406], "1910420028": [388, 389], "felix": [388, 389, 406], "themessl": [388, 389, 406], "1920420035": [388, 389], "astrid": [388, 389], "vogel": [388, 389, 406], "1810420029": [388, 389], "florian": [388, 389, 406], "zwittnigg": [388, 389], "matricul": [388, 1087], "studentdb": 388, "greatli": [388, 490, 1241], "matnr": 388, "rid": [388, 488, 549, 889, 906], "zuweisung": 389, "n1910420002": 389, "n1910420005": 389, "n1910420006": 389, "n1810420009": 389, "n1920420033": 389, "n1910420007": 389, "n1810420010": 389, "n1910420008": 389, "n1910420010": 389, "n1910420013": 389, "n1910420014": 389, "n1910420015": 389, "n1910420018": 389, "n1910420020": 389, "n1910420021": 389, "n1910420022": 389, "n1910420024": 389, "n1910420025": 389, "n1910420026": 389, "n1910420027": 389, "n1910420028": 389, "n1920420035": 389, "n1810420029": 389, "n666": 389, "5g": 389, "n19": 389, "10420013": 389, "n181": 389, "0420029": 389, "20210324": 390, "orig_si": 390, "__interactivehook__": 390, "_base_execut": 390, "_clear_type_cach": 390, "_current_fram": 390, "_debugmallocstat": 390, "_framework": 390, "_getfram": 390, "_git": 390, "_home": 390, "_xoption": 390, "flo": 391, "ted": 391, "rainer": 391, "rg": 391, "some_numb": [392, 524, 1115], "auszuspucken": 392, "eine_neue_vari": 392, "klassisch": 392, "140705292246608": 392, "register_cont": 392, "0b11010001110101000": 392, "107432": 392, "erzwungen": 392, "0x1249ad2594c37ceb0b2784c4ce0bf38ace408e211a7caab24308a82e8f10000000000000000000000000": 392, "groesst": 392, "darstellbar": 392, "ein_string_der_aussieht_wie_ein_integ": 392, "ein_integ": 392, "ver\u00e4ndernd": 392, "say_hello": [393, 1104], "333333333333336": 393, "formalit\u00e4ten": 396, "daili": [396, 931], "organiz": 397, "baustein": [397, 402], "navigieren": [397, 402], "sitzen": [397, 402], "nat\u00fcrlich": [397, 402, 415, 1235], "verstehen": [397, 402, 415, 1248], "pr\u00fcfung": [397, 402], "trocken": [397, 402], "pfade": [397, 402, 1236, 1247], "symbolisch": [397, 402, 975], "verschieben": [397, 402], "textfil": [397, 402], "113ff": [397, 402], "ansatzweis": [397, 402], "durchgegangen": [397, 402], "133ff": [397, 402], "durchgemacht": [397, 402], "wirkungsweis": [397, 402], "verstanden": [397, 402, 1238], "verkn\u00fcpfen": [397, 402], "aufw\u00e4rmen": 397, "fremden": 397, "fragerund": 397, "tire": [397, 402], "transact": [397, 402], "wertebereich": 397, "vpn": [397, 995], "gitlab": [397, 517], "sidenot": 397, "swoop": [397, 543], "hashbang": 397, "student1": 397, "student2": 397, "student3": 397, "undescript": 397, "contribut": [397, 1062], "crlf": 397, "bang": [397, 539], "trial": [397, 1065, 1075, 1195], "systemkonzept": [398, 415, 1254], "adressr\u00e4um": [398, 415, 1245], "ger\u00e4t": 398, "destruktoren": [398, 1240], "containertempl": 398, "ausz\u00fcg": 398, "absolventinnen": 398, "absolventen": 398, "entwicklungsplatform": 398, "zielplattform": [398, 1240], "dortigen": 398, "betriebssystemkonzept": [398, 1245, 1252], "verinnerlichen": 398, "eckpfeil": [398, 1240], "ansteuern": 398, "merkmal": 398, "nichttrivial": 398, "kerrisk": [398, 399], "handbook": [398, 399], "corbet": [398, 399, 1236], "allessandro": [398, 399], "rubini": [398, 399], "greg": [398, 399], "kroah": [398, 399], "hartman": [398, 399], "richard": [398, 399, 1062], "steven": [398, 399, 494], "stephen": [398, 399], "rago": [398, 399], "cookbook": [398, 399, 1228], "lutz": [398, 399], "integriert": 398, "\u00fcbungsanteil": 398, "einzelpr\u00fcfung": 398, "vorlesung": 398, "graduat": 399, "copver": 399, "warm": 400, "briefli": [401, 985], "filethermomet": 401, "ue": 403, "arduino": [403, 405, 985, 993, 1204], "homedirectori": [403, 976], "vbox": 403, "subnet": 403, "mgmt": 404, "64ff": 404, "readdir": [404, 838], "ow": [404, 568, 569, 570, 582, 583, 584], "readlink": 404, "thermometers_docu": 405, "toctre": 405, "execconfig": 405, "wacom": [405, 467, 468], "schuettler": 406, "zwittnig": 406, "simu": 406, "kudriaschow": 406, "hysteres": 406, "impl": 406, "marku": 406, "stepper": 406, "motor": [406, 840, 984, 991], "wasserfal": 406, "influxdb": 406, "grafana": 406, "nachmittag": 406, "multitask": [407, 412, 816, 839, 840, 984, 1025, 1039, 1045, 1047, 1048, 1050, 1252], "latenc": [408, 412, 817, 840, 885, 984, 1025, 1045, 1047], "gotcha": [408, 412, 717, 840, 984, 1005, 1025, 1045, 1047, 1055], "type_from_ini": 408, "ece19error": 408, "configfil": [408, 1087], "prettier": [408, 659], "support_address": 408, "invalidtypeerror": 408, "newcom": [410, 411], "individualtrain": 414, "baden": 414, "w\u00fcrttemberg": 414, "beginnend": 414, "kursnotizen": 414, "qualivis": 414, "logbuch": 415, "kursteilnehmern": 415, "zustandegekommen": 415, "zukommen": 415, "potentiellen": 415, "zuk\u00fcnftigen": 415, "eindruck": [415, 1235], "zukommt": 415, "publizieren": 415, "einverst\u00e4ndni": 415, "richtlinien": 415, "surviv": 415, "delphi": 415, "young": 415, "physicist": 415, "raaba": 415, "thalheim": 415, "aachen": 415, "herzogenrath": 415, "mixtur": [415, 678], "gr\u00e4felf": 415, "wel": 415, "regensburg": 415, "pr\u00e4sent": 415, "inhous": [415, 1190, 1235], "linuxcampu": 415, "sch\u00f6nen": 415, "aktiv": 415, "mitgestaltet": 415, "kursabschluss": 415, "dran": 415, "provok": 415, "kam": 415, "zustand": 415, "freiheiten": 415, "gestanden": 415, "zusatzaufgab": 415, "gef\u00fchrt": [415, 1235], "einschr\u00e4nkungen": [415, 1253], "eintagesworkshop": 415, "leuten": 415, "kenn": 415, "einhergehend": 415, "l\u00f6sungen": [415, 1235, 1236], "darauffolgend": 415, "vertiefen": 415, "ausgew\u00e4hlten": 415, "bereichen": 415, "dbapi2": [415, 1200], "objektorientierung": 415, "r\u00e4umen": 415, "zweit\u00e4gig": 415, "gemisch": 415, "kursen": 415, "ziemlich": 415, "eingemacht": 415, "bestellt": 415, "neugier": 415, "leichtfertig": 415, "tief": 415, "hinabgestiegen": 415, "feiner": 415, "internen": 415, "forschungsprojekt": 415, "gebracht": 415, "zusammenschnitt": 415, "workshopcharakt": [415, 1259], "angegraut": 415, "bewusst": [415, 1257], "verwendung": 415, "wunderbar": 415, "automatisieren": 415, "zurerst": 415, "shellbenutzung": 415, "angeordnet": 415, "ge\u00fcbt": 415, "herk\u00f6mmlichen": [415, 1240], "auffrischung": 415, "eingerostet": 415, "neuigkeiten": 415, "querbeet": 415, "aufbauend": 415, "zuvor": 415, "grundkur": 415, "wichtigsten": 415, "neuerungen": [415, 1240], "tobak": 415, "lieblingsschulungen": 415, "basiswissen": 415, "hoeri": 415, "bastelwoch": 415, "betrachtung": 415, "realtimef\u00e4higkeit": 415, "xenomai": [415, 1236], "fad": 415, "auszugsweis": 415, "richtig": [415, 1255], "n\u00e4chten": 415, "schulungstagen": 415, "kurzweil": 415, "beschert": 415, "einf\u00fchrungscharakt": 415, "kernelprogrammierung": 415, "auftrag": 415, "hardwarenah": [415, 1245, 1252], "ausgew\u00e4ht": 415, "kernelstruktur": 415, "crosscompil": 415, "newer": [416, 841, 1005, 1079, 1244], "msys2": 417, "5595": 417, "17619": 417, "pacman": 417, "mingw64": 417, "w64": 417, "x64": 417, "medium": [417, 534, 805, 1060, 1258], "swlh": 417, "2b2e66352456": 417, "ansi": 418, "iec": [418, 643], "9899": 418, "c11": 418, "pdp": [418, 432], "ken": 418, "thompson": 418, "tabul": [419, 427], "brutal": [420, 439, 443, 464, 743, 760, 1048], "everytim": [422, 440, 992], "ascend": [423, 1210], "unread": [424, 442, 499, 806, 1063, 1064, 1085, 1129], "putchar": 426, "caution": [426, 652, 913, 988], "obscur": [426, 434, 599, 720, 904, 1014, 1056], "alright": [426, 452], "inequ": [426, 660], "word1": [427, 619], "word2": [427, 619], "word3": [427, 619], "word4": 427, "word5": 427, "unixen": [427, 838, 1056, 1223, 1236], "nonsens": [428, 446, 465, 520, 645, 649, 652, 743, 802, 951, 1046, 1084, 1194, 1233], "illustr": [428, 1087], "countchar": 428, "nwhite": 428, "nother": 428, "stat": [428, 838, 1010, 1018, 1019, 1020, 1021, 1046, 1052, 1055, 1059, 1221], "nonprint": [429, 457], "decis": [429, 504, 507, 604, 651, 667, 802, 985, 1048, 1089, 1195, 1244], "xxxxxxxxxxxxxxxxxxxxxxxxx": 429, "xxxxxxxxxxxxxxxxxx": 429, "subroutin": [430, 498], "outer": [430, 457, 522, 526], "wimplicit": [430, 855], "dear": 430, "assembl": [432, 1062], "contradict": [432, 748], "640k": 432, "a_str": 432, "strncpy": 432, "maxlen": [432, 433], "strcat": 432, "strncat": 432, "strcmp": [432, 754, 755], "strncmp": 432, "another_str": 432, "nonsensi": 433, "read_lin": 433, "longest": 433, "confin": [434, 1087], "cluster_c": [435, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 607, 609, 642, 650, 665, 668, 671, 687, 693, 697, 706, 709, 710, 715, 724, 725, 726, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 745, 752, 783, 799, 808, 816, 825, 837, 839, 840], "cluster_c_introduct": [435, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 607, 609, 642, 650, 665, 668, 671, 687, 693, 697, 706, 709, 710, 715, 724, 725, 726, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 745, 752, 783, 799, 808, 816, 825, 837, 839, 840], "c_introduction_exercise_wc": [435, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 745, 783, 837, 839, 840], "c_introduction_character_io": [435, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 745, 783, 837, 839, 840], "c_introduction_exercise_fahrenheit_cpp": [435, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 745, 783, 837, 839, 840], "c_introduction_hello_world": [435, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 745, 783, 837, 839, 840], "c_introduction_introduct": [435, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 745, 783, 837, 839, 840], "c_introduction_character_arrai": [435, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 745, 783, 837, 839, 840], "c_introduction_exercise_power_declar": [435, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 745, 783, 837, 839, 840], "c_introduction_exercise_fahrenheit_float": [435, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 745, 783, 837, 839, 840], "c_introduction_variables_and_arithmetic_express": [435, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 745, 783, 837, 839, 840], "c_introduction_cpp_symbolic_const": [435, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 745, 783, 837, 839, 840], "c_introduction_instal": [435, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 607, 609, 642, 650, 665, 668, 671, 687, 693, 697, 706, 709, 710, 715, 724, 725, 726, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 745, 752, 783, 799, 808, 816, 825, 837, 839, 840], "c_introduction_exercise_fahrenheit_for": [435, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 745, 783, 837, 839, 840], "c_introduction_for_loop": [435, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 745, 783, 837, 839, 840], "c_introduction_exercise_string_read_lin": [435, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 745, 783, 837, 839, 840], "c_introduction_external_variables_and_scop": [435, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 745, 783, 837, 839, 840], "c_introduction_arrai": [435, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 745, 783, 837, 839, 840], "c_introduction_funct": [435, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 745, 783, 837, 839, 840], "c_introduction_exercise_histogram": [435, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 745, 783, 837, 839, 840], "z0": 437, "abbrevi": [438, 760, 763, 765, 769, 824, 826, 828, 829, 830], "char_bit": 438, "x86": [438, 539, 1062, 1065, 1080], "stdint": [438, 992, 1012, 1055], "int8_t": 438, "uint8_t": [438, 556, 571, 744, 992], "int16_t": 438, "int32_t": 438, "uint32_t": 438, "int64_t": 438, "052": 439, "0x2a": 439, "0b010010": 439, "42l": 439, "456f": 439, "456l": 439, "x61": 439, "alert": [439, 482, 488, 803, 1118, 1126, 1135, 1137], "backspac": [439, 948, 1131], "formfe": 439, "ooo": 439, "octal": [439, 1118, 1131, 1132], "xhh": 439, "some_funct": [440, 526], "some_vari": [440, 518, 519, 522, 524, 526], "1415926535897932": 440, "some_nonsensical_numb": 440, "legal": [442, 486, 652, 751, 1018, 1060], "truth": [442, 1015, 1041], "eleg": [442, 806], "blank": 442, "num_lf": 442, "narrow": [443, 1195], "4294967295u": 443, "wsign": [443, 485], "wconvers": 443, "4294967296u": 443, "unscrupul": 443, "0x100000000": 443, "weaker": 443, "stronger": [443, 1099, 1207], "1l": 443, "1u": 443, "losslessli": 443, "1ul": 443, "wtype": [443, 485], "wextra": [443, 485], "pedant": 443, "anti": [443, 892, 1030], "sloppi": 443, "advic": [443, 1118], "immens": [443, 1060], "hazard": 443, "messi": [443, 508], "copy_and_omit": 444, "0x4b": 446, "01001011": 446, "0x0c": 446, "00001100": 446, "0x08": 446, "00001000": 446, "0x4f": 446, "01001111": 446, "0x47": 446, "01000111": 446, "0x03": 446, "00000011": 446, "0x80": 446, "00110000": 446, "0x4c": [446, 877], "01001100": 446, "0xb3": 446, "10110011": 446, "arr": [447, 747], "unari": [449, 1118], "strongest": [449, 1118], "intuit": [449, 497], "danger": [449, 467, 645, 887, 1038, 1059, 1127, 1241], "decrement": [450, 459, 466, 470, 472, 476, 479, 483, 492, 496, 501, 502, 695, 745, 783, 802, 837, 839, 840, 846], "cluster_c_types_operators_express": [450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 745, 783, 837, 839, 840], "c_types_operators_expressions_assignment_operators_and_express": [450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 745, 783, 837, 839, 840], "c_types_operators_expressions_bit_oper": [450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 745, 783, 837, 839, 840], "c_types_operators_expressions_datatypes_s": [450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 745, 783, 837, 839, 840], "c_types_operators_expressions_variable_nam": [450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 745, 783, 837, 839, 840], "c_types_operators_expressions_increment_decrement_oper": [450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 745, 783, 837, 839, 840], "c_types_operators_expressions_type_convers": [450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 745, 783, 837, 839, 840], "c_types_operators_expressions_relational_logical_oper": [450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 745, 783, 837, 839, 840], "c_types_operators_expressions_arithmetic_oper": [450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 745, 783, 837, 839, 840], "c_types_operators_expressions_exercise_string_reduc": [450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 745, 783, 837, 839, 840], "c_types_operators_expressions_declar": [450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 745, 783, 837, 839, 840], "c_types_operators_expressions_introduct": [450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 745, 783, 837, 839, 840], "c_types_operators_expressions_conditional_express": [450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 745, 783, 837, 839, 840], "c_types_operators_expressions_const": [450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 745, 783, 837, 839, 840], "c_types_operators_expressions_precedence_and_order_of_evalu": [450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 745, 783, 837, 839, 840], "doabl": 455, "cond": [455, 1035], "precedenceof": 455, "innermost": [457, 714, 719], "concern": [457, 458, 506, 846, 924, 994, 1086, 1243], "edsger": 458, "dijkstra": 458, "plea": 458, "manifold": 458, "judici": [458, 494, 1243], "do_complicated_stuff": 458, "cleanup_mess": 458, "cluster_c_program_flow": [459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 745, 783, 837, 839, 840], "c_program_flow_if_els": [459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 745, 783, 837, 839, 840], "c_program_flow_statements_and_block": [459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 745, 783, 837, 839, 840], "c_program_flow_break_and_continu": [459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 745, 783, 837, 839, 840], "c_program_flow_loops_do_whil": [459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 745, 783, 837, 839, 840], "c_program_flow_goto_and_label": [459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 745, 783, 837, 839, 840], "c_program_flow_loops_while_and_for": [459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 745, 783, 837, 839, 840], "c_program_flow_switch": [459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 745, 783, 837, 839, 840], "c_program_flow_else_if": [459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 745, 783, 837, 839, 840], "vice": 460, "versa": 460, "g_lobal": [461, 462, 464], "print_g": [461, 462], "linkag": 462, "percept": [462, 924], "disciplin": [462, 484, 494, 504, 1194], "convent": [462, 506, 903, 948, 970, 1008, 1086, 1101], "ifndef": [462, 464, 465, 508, 534, 628, 646, 652, 654, 655, 754, 755, 801, 1062, 1079, 1081], "g_h": 462, "programx": 463, "cautious": 464, "c99": [464, 1239], "have_c_h": 464, "clash": [464, 487], "include_onc": 464, "newbi": [464, 747], "hurdl": 464, "ifdef": [465, 515, 542, 695], "defined": 465, "unequ": 465, "tempt": 465, "horror": 465, "do_much": 465, "do_thi": [465, 807], "do_that": [465, 807], "do_less": 465, "__pragma": 465, "4127": 465, "warn_if": 465, "statem": 465, "function_help": 465, "function_quit": 465, "function_": 465, "inject_viru": 465, "doomed_process": 465, "win32": [465, 1257], "foreign_mem": 465, "virtualallocex": 465, "mem_commit": 465, "page_execut": 465, "page_readwrit": 465, "infect": 465, "__file__": [465, 1087, 1221], "__line__": 465, "smell": [465, 531], "pest": 465, "cluster_c_functions_and_program_structur": [466, 472, 476, 479, 483, 492, 496, 501, 502, 745, 783, 837, 839, 840], "c_functions_and_program_structure_c_preprocessor": [466, 472, 476, 479, 483, 492, 496, 501, 502, 745, 783, 837, 839, 840], "c_functions_and_program_structure_static_vari": [466, 472, 476, 479, 483, 492, 496, 501, 502, 745, 783, 837, 839, 840], "c_functions_and_program_structure_header_fil": [466, 472, 476, 479, 483, 492, 496, 501, 502, 745, 783, 837, 839, 840], "c_functions_and_program_structure_external_vari": [466, 472, 476, 479, 483, 492, 496, 501, 502, 745, 783, 837, 839, 840], "c_functions_and_program_structure_bas": [466, 472, 476, 479, 483, 492, 496, 501, 502, 745, 783, 837, 839, 840], "c_functions_and_program_structure_c_preprocessor_advanc": [466, 472, 476, 479, 483, 492, 496, 501, 502, 745, 783, 837, 839, 840], "dereferenc": [467, 756, 791, 795], "35129": 467, "calle": [468, 498, 500, 522, 657, 1082], "tablet": 468, "excang": 469, "pa1": 470, "pa2": 470, "cluster_c_pointers_and_arrai": [472, 476, 479, 483, 492, 496, 501, 502, 745, 783, 837, 839, 840], "c_pointers_and_arrays_exercise_swap": [472, 476, 479, 483, 492, 496, 501, 502, 745, 783, 837, 839, 840], "c_pointers_and_arrays_pointers_and_function_argu": [472, 476, 479, 483, 492, 496, 501, 502, 745, 783, 837, 839, 840], "c_pointers_and_arrays_pointers_and_address": [472, 476, 479, 483, 492, 496, 501, 502, 745, 783, 837, 839, 840], "c_pointers_and_arrays_command_line_argu": [472, 476, 479, 483, 492, 496, 501, 502, 745, 783, 837, 839, 840], "c_pointers_and_arrays_pointers_and_arrai": [472, 476, 479, 483, 492, 496, 501, 502, 745, 783, 837, 839, 840], "scalar": [473, 488, 1135], "fantasi": [473, 985, 987], "p1": [473, 598, 644, 646, 652, 658, 660, 662, 663, 748], "p2": [473, 598, 644, 646, 652, 658, 660, 663, 748], "laid": 473, "makepoint": 474, "addpoint": [474, 490], "addtopoint": 474, "pid_t": [475, 1031, 1049, 1060], "cluster_c_structur": [476, 479, 483, 492, 496, 501, 502, 745, 783, 837, 839, 840], "c_structures_structures_and_funct": [476, 479, 483, 492, 496, 501, 502, 745, 783, 837, 839, 840], "c_structures_bas": [476, 479, 483, 492, 496, 501, 502, 745, 783, 837, 839, 840], "c_structures_typedef": [476, 479, 483, 492, 496, 501, 502, 745, 783, 837, 839, 840], "dealloc": [477, 635, 788, 848, 875, 881], "do_something_with": [477, 746, 792], "list_init": 478, "list_destroi": 478, "list_insert": 478, "list_remov": 478, "list_count": 478, "list_print": 478, "keylen": 478, "cluster_c_memori": [479, 483, 492, 496, 501, 502, 745, 783, 837, 839, 840], "c_memory_exercise_linked_list": [479, 483, 492, 496, 501, 502, 745, 783, 837, 839, 840], "c_memory_malloc": [479, 483, 492, 496, 501, 502, 745, 783, 837, 839, 840], "corollari": [480, 482, 809, 1095], "reorder": [480, 817, 871], "use_count": [480, 481, 802, 804, 835], "use_resourc": [480, 481], "do_something_with_shared_resourc": [480, 481], "conceiv": [480, 1112], "completion_flag": 480, "out_word": 480, "in_word": 480, "unforese": 480, "volatil": [481, 483, 492, 496, 501, 502, 745, 783, 811, 837, 839, 840, 897, 1060, 1239, 1242], "instr": [481, 499, 1033, 1097], "pthread_mutex_t": [481, 815, 879, 1033, 1035], "use_count_mutex": 481, "pthread_mutex_initi": [481, 1033], "pthread_mutex_lock": [481, 815, 1033, 1035], "pthread_mutex_unlock": [481, 815, 1033, 1035], "expens": [481, 488, 644, 657, 660, 751, 756, 792, 793, 802, 892, 1030, 1241], "fetch_and_add": [481, 1033], "__sync_fetch_and_add": [481, 812, 1033, 1034], "sheer": [481, 647], "neglig": 482, "penalti": 482, "memcpi": 482, "freeli": 482, "rearrang": [482, 694], "anim": 482, "textit": 482, "bogu": [482, 494, 655, 754, 755, 781, 994, 1060], "__pad0": 482, "__pad1": 482, "misalign": 482, "intrins": [483, 492, 496, 501, 502, 745, 783, 837, 839, 840], "cluster_c_advanced_language_featur": [483, 492, 496, 501, 502, 745, 783, 837, 839, 840], "c_advanced_language_features_align": [483, 492, 496, 501, 502, 745, 783, 837, 839, 840], "c_advanced_language_features_atom": [483, 492, 496, 501, 502, 745, 783, 837, 839, 840], "c_advanced_language_features_volatil": [483, 492, 496, 501, 502, 745, 783, 837, 839, 840], "matur": 484, "odditi": 484, "rectifi": 484, "fortran": 484, "lazy": [484, 786], "meant": [484, 1059], "shortcom": [484, 569, 731, 736, 739], "holidai": 484, "handcraft": [484, 552, 1122], "clariti": [485, 489, 1017], "baud": 486, "idl": 486, "writing_request": 486, "reading_respons": 486, "wait_retri": 486, "protocol_engin": [486, 490], "deduc": [486, 743, 746, 771], "obligatori": 486, "anyhow": 486, "forgot": 486, "unambigu": [486, 743], "protocol_error": 486, "eat": [486, 494], "unintend": 488, "wwrite": 488, "max_bucket": 488, "pj": 488, "pointe": 488, "ppi": 488, "height": [489, 552, 661], "beman": 489, "daw": 489, "obfusc": 490, "ssize_t": [490, 602, 846, 1006, 1010, 1011, 1012, 1014, 1018, 1019, 1020, 1021, 1024, 1026, 1029, 1052, 1055, 1056, 1059], "send_fram": 490, "eng": 490, "send_sum": 490, "v_int32": 490, "spectacular": 490, "adequ": 490, "unix_error": 490, "app_error": 490, "unix_error_cr": 490, "unix_error_ok": 490, "uerr": 490, "app_error_cr": 490, "app_os_error": 490, "impact": [490, 494], "beyond": [491, 1014], "slowdown": 491, "0x400552": 491, "0x51bb072": 491, "0x4c28c6d": 491, "vg_replace_malloc": [491, 652], "0x400545": 491, "loss": [491, 996], "rec": [491, 1178, 1180], "uncov": 491, "readabilti": [492, 496, 501, 502, 745, 783, 837, 839, 840], "explict": [492, 496, 501, 502, 840], "cluster_c_program_san": [492, 496, 501, 502, 745, 783, 837, 839, 840], "c_program_sanity_explicit_type_safeti": [492, 496, 501, 502, 840], "c_program_sanity_struct_initi": [492, 496, 501, 502, 840], "c_program_sanity_integral_typ": [492, 496, 501, 502, 745, 783, 837, 839, 840], "c_program_sanity_introduct": [492, 496, 501, 502, 745, 783, 837, 839, 840], "c_program_sanity_stat": [492, 496, 501, 502, 840], "c_program_sanity_discrete_valu": [492, 496, 501, 502, 745, 783, 837, 839, 840], "c_program_sanity_const": [492, 496, 501, 502, 840], "c_program_sanity_valgrind": [492, 496, 501, 502, 840], "hotspot": [493, 497], "checksum": [493, 996, 1044], "externel": 493, "sha1sum": [493, 1044, 1047, 1050], "8g": 493, "0m38": 493, "0m3": 493, "0m0": 493, "perceiv": 493, "daze": 493, "mp3": 493, "018": 493, "mult": 494, "rumour": 494, "uncondit": 494, "finlin": 494, "o3": [494, 535, 838, 1230], "heurist": 494, "o1": 494, "magnitud": [494, 495], "overus": [494, 556, 1100, 1241], "spill": 494, "fira": 494, "rtfm": [494, 1133, 1228], "compromis": [494, 504, 552], "transit": [494, 530, 531], "fmove": 494, "outweigh": 494, "thrash": [494, 1047, 1239], "understood": [494, 504, 601, 807, 887, 1243], "misnom": [494, 1137], "o0": [494, 535], "unagress": 494, "chew": [494, 817], "agress": 494, "muchnik": 494, "levin": 494, "nearbi": 495, "4x3": 495, "rectangular": 495, "cluster_c_perform": [496, 501, 502, 840], "c_performance_computebound": [496, 501, 502, 840], "c_performance_introduct": [496, 501, 502, 840], "c_performance_memori": [496, 501, 502, 840], "bust": 497, "haul": 497, "cheater": 497, "fallibl": 497, "supplement": 497, "gprof": [497, 499, 500, 501, 502, 840, 1239], "callgrind": [497, 500, 501, 502, 840, 1239], "oprofil": [497, 501, 502, 840, 1239], "gmon": 498, "spot": 498, "38000000": 498, "find_dupl": [498, 500], "criterion": [498, 685], "37000000": 498, "luck": [498, 524, 992, 1084, 1086], "gprof2dot": 498, "tjpeg": 498, "predict": [499, 500, 1191, 1193, 1194], "sluggishli": 499, "16761": 499, "callgrind_annot": 499, "atstart": 499, "callgrind_control": 499, "nmi": 500, "ophelp": 500, "operf": 500, "oprofile_data": 500, "opreport": 500, "opannot": 500, "oparch": 500, "opgprof": 500, "Their": 500, "2085": 500, "2505": 500, "maskabl": 500, "callgraph": 500, "pxe": 500, "vmlinux": [500, 862], "debuginfo": 500, "userland": [500, 846], "routin": [500, 506, 631, 838, 879, 885, 890, 1012, 1048, 1081, 1182, 1184], "analyz": 500, "jcf": [500, 887, 913], "jxf": [500, 887, 913], "gdf": 500, "op2calltre": 500, "oprof": 500, "applet": 500, "viewabl": [500, 538], "kcachegrind": 500, "cluster_c_profil": [501, 502, 840], "c_profiling_introduct": [501, 502, 840], "c_profiling_callgrind": [501, 502, 840], "c_profiling_gprof": [501, 502, 840], "c_profiling_oprofil": [501, 502, 840], "worker": [504, 751], "consensu": [504, 547], "consent": [504, 1107], "male": [504, 1150], "prcess": 504, "obei": [504, 506], "antipattern": [504, 552], "gonna": 504, "indecis": [504, 1244], "road": 504, "manufactur": [504, 994], "pcb": [504, 992], "bom": 504, "requiremenet": 504, "yyyi": 505, "yagni": 505, "fraunhof": 505, "make_categori": 506, "outputfil": 506, "to_datetim": 506, "make_float": 506, "orpheum": 506, "goingout": 506, "hervi": 506, "sport": 506, "card": [506, 887, 916, 952, 954, 959, 960], "to_csv": 506, "read_from_csv": 506, "write_to_csv": 506, "clean_data": 506, "csvname_or_list_thereof": 506, "workaround": [506, 744, 747, 860, 1221], "read_from_dir": 506, "re_yyyy_mm": 506, "inputdir": 506, "libreoffic": 506, "factor": [506, 855, 856, 887], "test_data_clean": 506, "test_make_float": 506, "1999": 506, "test_date_convers": 506, "at666666666666666666": 506, "000009173": 506, "bawaatwwxxx": 506, "at211420020010848041": 506, "ausgleich": 506, "firmenkonto": 506, "test_input": 506, "read_from_csv_singl": 506, "read_from_csv_multipl": 506, "deliber": 506, "test_read_csv_singl": 506, "000009284": 506, "2371": 506, "000009283": 506, "at613400000005077508": 506, "world4you": 506, "writelin": [506, 1137, 1183, 1185], "test_read_csv_multipl": 506, "lines_2023_02": 506, "lines_2023_01": 506, "000009229": 506, "4111": 506, "bp": 506, "tankstel": 506, "000009228": 506, "at081400086210003454": 506, "\u00f6sterreichisch": 506, "gesundheitskass": 506, "_write_csv": 506, "read_from_csv_dir": 506, "test_read_csv_dir": 506, "testutil": 506, "write_csv": 506, "test_category_csv": 506, "000009168": 506, "000009169": 506, "2801": 506, "strassenbahn": 506, "eas": [506, 1200], "finer": 506, "refact": 506, "str_categori": 506, "cardunknown": 506, "flughafen": 506, "wien": 506, "test_more_of_it": 506, "000009153": 506, "parken": 506, "fl": 506, "inputread": 506, "recursivecsvinputread": 506, "singlecsvinputread": 506, "compositeinputread": 506, "input_abc": 506, "abstractmethod": [506, 1099], "multiplecsvinputread": 506, "test_input_abc": 506, "conf_sensor": 507, "conf_sensors_init": 507, "add_sensor": [507, 610, 611, 612, 613, 615, 616], "make_uniqu": [507, 513, 568, 582, 836], "existig": 507, "cmake_current_binary_dir": [507, 511, 514], "democonfig": [508, 509, 510, 511, 516], "descend": [508, 509, 510, 540, 585, 949, 1056], "IF": [508, 509, 510, 535], "use_blacklist": [508, 509], "macro_use_blacklist": [508, 510], "demo_use_blacklist": [508, 509], "namegreet": 508, "_blacklist": 508, "implic": [508, 871, 944, 1005], "sayhello": 508, "is_forbidden": 508, "_name": [508, 575, 578, 582, 583, 584], "goodby": [508, 1060], "use_backlist": 508, "condition": [508, 512, 515], "libhello": [509, 511, 516, 535, 537, 540, 1079], "duse_blacklist": [509, 510], "ON": [509, 510, 524, 537, 539, 591, 592, 597, 1046], "target_compile_opt": [509, 531], "manyfold": 510, "lightli": 510, "demo_version_major": [511, 514], "demo_version_minor": [511, 514], "demo_major": [511, 514], "demo_minor": [511, 514], "include_directori": [511, 514], "overkil": 511, "sqlite3_found": [512, 513, 514, 515, 516], "config_have_sqlite3": [512, 514], "tolevel": 512, "sinkcomposit": 512, "sinktermin": 512, "sinksqlite3": [512, 513], "sinkmqtt": 512, "findmosquitto": 512, "mosquitto_found": 512, "mytarget": 512, "find_path": 512, "mosquitto_include_dir": 512, "find_librari": 512, "mosquitto_librari": 512, "found_var": 512, "required_var": 512, "mark_as_advanc": 512, "glue": [512, 771], "config_have_mosquitto": 512, "have_mosquitto": 512, "voila": [512, 657, 992, 1050, 1063, 1064, 1075, 1106], "cerr": [513, 549, 588, 667, 737, 807, 817, 992, 1026, 1029], "create_table_stat": 513, "findsqlite3": [513, 515, 516], "sqlite3_include_dir": [513, 516], "sqlite3_librari": [513, 516], "availablil": 513, "sqlite3_vers": [513, 516], "availabl": 513, "temporarili": [513, 539, 1049, 1062], "have_sink_sqlite3": 514, "have_sqlite3": [514, 515], "gluehweinkochen": 514, "inc_sink_sqlite3": 515, "src_sink_sqlite3": 515, "litter": [515, 1021], "typo": [516, 1100, 1101], "olden": 516, "0x00007f76ae011000": 516, "libz": 516, "0x00007f76adef7000": 516, "cluster_cmak": [517, 523, 533, 536, 840], "cluster_cmake_advanc": [517, 523, 533, 840], "cluster_cmake_advanced_languag": [517, 523, 533, 840], "cluster_cmake_intro": [517, 523, 533, 536, 840], "cmake_advanced_optional_code_approach_2": [517, 523, 533, 840], "cmake_advanced_optional_code_approach_1": [517, 523, 533, 840], "cmake_advanced_optional_code_problem": [517, 523, 533, 840], "cmake_advanced_external_dependencies_sqlite3": [517, 523, 533, 840], "cmake_advanced_library_function_screenplai": [517, 523, 533, 840], "cmake_advanced_targets_properti": [517, 523, 533, 840], "cmake_advanced_targets_properties_pub_priv_inc_screenplai": [517, 523, 533, 840], "cmake_advanced_external_dependencies_sqlite3_optional_configured_fil": [517, 523, 533, 840], "cmake_advanced_external_dependencies_sqlite3_optional_graph": [517, 523, 533, 840], "cmake_advanced_external_depend": [517, 523, 533, 840], "cmake_advanced_code_gener": [517, 523, 533, 840], "cmake_advanced_external_dependencies_mosquitto": [517, 523, 533, 840], "cmake_advanced_configure_fil": [517, 523, 533, 840], "cmake_intro_cxx_and_r": [517, 523, 533, 536, 840], "cmake_intro_librari": [517, 523, 533, 536, 840], "cmake_intro_structur": [517, 523, 533, 536, 840], "cmake_advanced_test": [517, 523, 533, 840], "cmake_advanced_language_functions_and_macro": [517, 523, 533, 840], "cmake_advanced_language_if_and_condit": [517, 523, 533, 840], "cmake_advanced_language_vari": [517, 523, 533, 840], "cmake_advanced_language_datatyp": [517, 523, 533, 840], "cmake_advanced_language_foreach": [517, 523, 533, 840], "cmake_advanced_language_whil": [517, 523, 533, 840], "cmake_advanced_language_bas": [517, 523, 533, 840], "cmake_advanced_language_script": [517, 523, 533, 840], "cmake_advanced_language_file_etc": [517, 523, 533, 840], "cmake_intro_instal": [517, 523, 533, 536, 840], "cmake_intro_shared_libraries_preview": [517, 523, 533, 536, 840], "cmake_intro_bas": [517, 523, 533, 536, 840], "gtest_discover_test": 517, "cliutil": 517, "20depend": 517, "20guid": 517, "fetchcont": 517, "externalproject": 517, "conan": 517, "pakag": 517, "counterpart": [518, 587], "insensit": [518, 524, 977, 1212], "sensit": [518, 526, 1117], "helloworld": 518, "arument": 518, "chararct": 518, "clike": 518, "keystrok": [518, 948], "undesir": 518, "undesiredhelloworld": 518, "position_found": 519, "contrari": [519, 1211], "some_str": 519, "varnam": 519, "joined_str": 519, "zeiling": [519, 524], "is_less": 519, "some_list": [519, 875], "loop_var": 519, "endforeach": [519, 520, 528], "some_length": 519, "remove_at": 519, "passwd_cont": 520, "passwd_lin": 520, "passwd_hash": 520, "2cf0baaebfbfbdbaaf1ded5385d50b6c0fb883f7ffc60a33da9381b84bba5407": 520, "cpp_file": 520, "root_nam": 520, "root_directori": 520, "root_path": 520, "relative_part": 520, "parent_path": [520, 838], "full_path": 520, "filename_part": [520, 838], "some_path": 520, "endfunct": [522, 526, 528], "access_par": 522, "outer_vari": [522, 526], "outer_funct": [522, 526], "take_one_paramet": 522, "superflu": 522, "take_two_paramet": 522, "param1": 522, "param2": 522, "argv_etc": 522, "first_param": 522, "second_param": 522, "argv0": 522, "argv1": 522, "argv3000": 522, "reach_out": 522, "caller_vari": 522, "ref_param": 522, "_one": 522, "_anoth": 522, "some_variable_on": 522, "some_variable_anoth": 522, "vararg": 522, "takes_any_number_arg": 522, "takes_fancy_paramet": 522, "myparam": 522, "fancy1": 522, "fancy2": 522, "fancies1": 522, "fancies2": 522, "myparams_verbos": 522, "myparams_cool": 522, "myparams_fancy1": 522, "myparams_fancy2": 522, "myparams_fancies1": 522, "myparams_fancies2": 522, "endmacro": 522, "strequal": [524, 526, 535], "elseif": [524, 528], "lexicograph": [524, 722], "strless": 524, "some_nam": 524, "is_directori": [524, 838], "is_absolut": [524, 838], "cmake_polici": [524, 526], "cmp0139": 524, "alternative_filenam": 524, "path_equ": 524, "recognis": 524, "versionad": 524, "another_vari": [524, 526], "libnam": 524, "mental": 524, "cmp0012": 524, "notfound": [524, 544, 545, 573, 736, 737, 738], "suffer": [524, 806, 993], "pretend": [524, 793], "boolean_vari": 524, "boolshit": 524, "cmp0054": 524, "wno": [524, 526], "par": 524, "biggest": 524, "dname": [525, 531], "dperson": 525, "unset": [526, 569, 1035], "cal_symbol": 526, "cmp0010": 526, "name_of_vari": 526, "affect": [526, 797], "subsequ": [526, 595], "execute_process": 526, "cmakecach": [526, 1063, 1064], "cmake_minimum_requir": [526, 534, 1064, 1230], "local_vari": 526, "beautifulli": 528, "public_head": 528, "private_head": 528, "argn": 528, "my_add_library_shar": 528, "my_add_library_stat": 528, "my_add_library_nam": 528, "my_add_library_private_head": 528, "my_add_library_public_head": 528, "my_add_library_sourc": 528, "my_add_library_debug": 528, "fatal_error": [528, 535], "noi": [530, 531], "asymmetri": 530, "compile_definit": 531, "compile_opt": 531, "widest": 531, "asymmetr": 531, "enable_test": [532, 1230], "set_tests_properti": [532, 1227, 1230], "pass_regular_express": 532, "ctest": 532, "cdash": 532, "kitwar": 532, "identif": [534, 992, 1063, 1064], "hello_nam": [534, 538], "hello_name_h": 534, "cmake_cxx_standard": [535, 1230], "dndebug": 535, "cmake_": 535, "_compiler_id": 535, "g3": 535, "cmake_c_compiler_id": 535, "cmake_c_flag": [535, 1230], "cmake_cxx_compiler_id": 535, "cmake_cxx_flag": [535, 1230], "howdi": [535, 653, 726, 785, 787, 788, 819, 928, 932, 1018, 1019, 1021, 1104], "bullshithowdi": 535, "send_error": 535, "attract": [535, 747], "cmake_install_prefix": 537, "set_properti": [537, 539], "dbuild_shared_lib": [537, 539], "readelf": [537, 1062, 1075, 1080], "0x0000000000000001": [537, 1080], "0x000000000000001d": 537, "0x00007f773aefe000": 537, "ldconfig": [537, 1062, 1236], "sonam": [537, 539], "0x29": 538, "collect2": [538, 719, 1080], "acycl": [538, 1064, 1079], "dag": 538, "jul": [538, 539], "tpng": [538, 1064], "symlink": [539, 838, 992, 1223, 1247], "build_shared_lib": 539, "qf": 539, "libboost_regex": 539, "lrwxrwxrwx": [539, 970, 992, 993, 994, 1028, 1062], "rwxr": [539, 933, 935, 936, 945, 1062, 1075, 1114], "289264": 539, "project_vers": 539, "makefile2": 540, "socialdb": [541, 544, 548, 573, 579], "i2csensor_vendor1": [542, 571], "0x37": 542, "suddenli": [542, 887, 928, 1196], "vener": [542, 563, 645, 660, 789], "pour": [542, 913], "damag": [542, 1210], "slip": 542, "cascad": 542, "i2csensor": [542, 556, 571], "create_i2c_sensor": 542, "i2csensorfactori": 542, "speak": [542, 975, 993, 1091, 1116], "vendor1": [542, 571], "abstract_factory_suit": 542, "instantiate_vendor1": 542, "i2csensorfactory_vendor1": 542, "i2c_factory_vendor1": 542, "i2c_sensor": 542, "assert_tru": [542, 597, 598, 603, 608, 610, 615, 644, 646, 661, 662, 663, 664, 748, 802, 803, 819, 820, 838, 1228], "dynamic_cast": [542, 569, 583], "a_sensor": [542, 753], "vendor2": [542, 571], "instantiate_vendor2": 542, "i2csensorfactory_vendor2": [542, 571], "i2c_factory_vendor2": 542, "i2csensor_vendor2": [542, 571], "pu": 542, "tinto": 542, "fahrenheitsensor": [543, 572], "get_temperature_f": [543, 572], "formula": 543, "adapter_suit": 543, "constantfahrenheitsensor": 543, "assert_float_eq": [543, 546, 547, 549, 566, 567, 593, 594, 595, 596, 598, 601, 602, 613, 644, 646, 663, 750, 753, 819, 820], "fahrenheitsensor_adapt": [543, 572], "adapter__is_a__sensor": 543, "adapter__knows__an_a_sensor": 543, "variablefahrenheitsensor": 543, "initial_valu": 543, "_valu": [543, 578], "change_temperatur": [543, 593, 601, 602], "adapter__definitely_knows__a_sensor__hel": 543, "multitud": 544, "socialdbcommand": [544, 573], "command_suit": 544, "2345110695": [544, 703], "socialdbinsertcommand": [544, 573], "3456060486": [544, 703], "insert_by_bas": 544, "socialdbfindcommand": [544, 573], "socialdbdropcommand": [544, 573], "assert_throw": [544, 551, 819, 838], "notinsert": [544, 545, 573], "bulkinsert": 544, "bulk_insert": 544, "socialdbbulkinsertcommand": [544, 573], "bic": 544, "std_initializer_list": 544, "bulk_insert__std_initializer_list": 544, "_msg": 545, "c_str": [545, 580, 602, 749, 754, 755, 1059], "_db": 545, "hypthet": 546, "composite_suit": 546, "cs1": 546, "cs2": 546, "recompil": [547, 1080], "decorator_suit": 547, "average_with_base_sensor": 547, "decoratedsensor": [547, 575], "propon": 547, "diagnost": [547, 676, 679], "decorated_sensor_const_added_function": 547, "decorated_sensor_random_added_function": 547, "decorated_sensor_const__is_a__sensor": 547, "decorated_sensor_random__is_a__sensor": 547, "assert_g": [547, 596, 613], "assert_l": [547, 596, 613], "average_with_decorated_sensor": 547, "mtqueue": [548, 566], "devis": 548, "cluster_cxx_design_pattern": [548, 562, 590, 642, 840], "cluster_cxx": [548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 607, 609, 642, 840], "cluster_cxx_exercis": [548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 607, 609, 642, 840], "cluster_cxx_exercises_design_pattern": [548, 562, 590, 642, 840], "cluster_cxx03": [548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 607, 609, 642, 650, 665, 668, 671, 687, 693, 697, 705, 706, 707, 709, 710, 712, 715, 721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 752, 783, 799, 808, 816, 825, 837, 839, 840], "cluster_cxx03_data_encapsul": [548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 607, 609, 642, 650, 665, 668, 671, 687, 693, 697, 706, 709, 710, 715, 724, 725, 726, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 752, 783, 799, 808, 816, 825, 837, 839, 840], "cluster_cxx03_inheritance_oo": [548, 562, 590, 600, 642, 715, 740, 825, 839, 840], "cluster_linux": [548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 642, 816, 839, 840, 844, 847, 849, 852, 854, 857, 859, 861, 863, 864, 866, 868, 870, 872, 874, 876, 878, 880, 882, 884, 886, 888, 891, 893, 896, 898, 902, 905, 908, 910, 914, 915, 916, 917, 920, 921, 922, 929, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 968, 978, 984, 990, 991, 996, 997, 998, 999, 1000, 1007, 1013, 1015, 1023, 1025, 1027, 1039, 1042, 1045, 1047, 1064, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074], "cluster_linux_toolchain": [548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 642, 816, 839, 840, 917, 920, 921, 922, 984, 1007, 1013, 1015, 1023, 1025, 1039, 1042, 1045, 1047, 1064, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074], "cluster_linux_bas": [548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 642, 816, 839, 840, 910, 914, 915, 916, 917, 920, 921, 922, 929, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 968, 978, 984, 996, 997, 998, 999, 1000, 1007, 1013, 1015, 1023, 1025, 1039, 1042, 1045, 1047, 1064, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074], "cluster_linux_basics_shel": [548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 642, 816, 839, 840, 910, 914, 915, 916, 917, 920, 921, 922, 929, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 968, 978, 984, 1007, 1013, 1015, 1023, 1025, 1039, 1042, 1045, 1047, 1064, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074], "cluster_linux_basics_intro": [548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 642, 816, 839, 840, 910, 914, 915, 916, 917, 920, 921, 922, 929, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 968, 978, 984, 996, 997, 998, 999, 1000, 1007, 1013, 1015, 1023, 1025, 1039, 1042, 1045, 1047, 1064, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074], "cxx_design_patterns_composit": [548, 562, 590, 642, 840], "cxx_design_patterns_proxi": [548, 562, 590, 642, 840], "cxx_design_patterns_sensor_hierarchi": [548, 562, 590, 642, 840], "cxx_design_patterns_uml": [548, 562, 590, 642, 840], "cxx_exercises_design_patterns_proxy_round": [548, 562, 590, 642, 840], "cxx03_inheritance_oo_interfac": [548, 562, 590, 600, 642, 715, 740, 825, 839, 840], "cxx_design_patterns_adapt": [548, 562, 590, 642, 840], "cxx_design_patterns_abstract_factori": [548, 562, 590, 642, 840], "cxx_design_patterns_singleton": [548, 562, 590, 642, 840], "cxx_design_patterns_decor": [548, 562, 590, 642, 840], "cxx_design_patterns_interpret": [548, 562, 590, 642, 840], "cxx_design_patterns_heating_screenplai": [548, 840], "cxx_design_patterns_command": [548, 562, 590, 642, 840], "cxx_design_patterns_oo_principl": [548, 840], "cxx_design_patterns_observ": [548, 562, 590, 642, 840], "cxx_exercises_sensor_interfac": [548, 562, 590, 600, 642, 840], "linux_toolchain_cmake_loc": [548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 642, 840, 984, 1064, 1073], "cxx03_introduct": [548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 607, 609, 642, 650, 665, 668, 671, 687, 693, 697, 706, 709, 710, 715, 724, 725, 726, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 752, 783, 799, 808, 816, 825, 837, 839, 840], "cxx03_data_encapsulation_classes_object": [548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 607, 609, 642, 650, 665, 668, 671, 687, 693, 697, 706, 709, 710, 715, 724, 725, 726, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 752, 783, 799, 808, 816, 825, 837, 839, 840], "cxx03_data_encapsulation_c": [548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 607, 609, 642, 650, 665, 668, 671, 687, 693, 697, 706, 709, 710, 715, 724, 725, 726, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 752, 783, 799, 808, 816, 825, 837, 839, 840], "cxx03_data_encapsulation_ctor_custom": [548, 562, 590, 593, 596, 600, 642, 650, 715, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 752, 783, 799, 808, 816, 825, 837, 839, 840], "cxx03_data_encapsulation_ctor_default": [548, 562, 590, 600, 642, 650, 715, 728, 729, 730, 731, 732, 733, 735, 736, 737, 738, 739, 740, 752, 783, 799, 808, 816, 825, 837, 839, 840], "cxx03_data_encapsulation_ctor_dtor": [548, 562, 590, 600, 642, 650, 715, 728, 729, 730, 731, 732, 733, 735, 736, 737, 738, 739, 740, 752, 783, 799, 808, 816, 825, 837, 839, 840], "cxx03_inheritance_oo_bas": [548, 562, 590, 600, 642, 715, 740, 825, 839, 840], "cxx03_inheritance_oo_polymorph": [548, 562, 590, 600, 642, 715, 740, 825, 839, 840], "cxx03_inheritance_oo_virtual_destructor": [548, 562, 590, 600, 642, 715, 740, 825, 839, 840], "cxx03_inheritance_oo_virtual_method": [548, 562, 590, 600, 642, 715, 740, 825, 839, 840], "cxx03_inheritance_oo_destructor": [548, 562, 590, 600, 642, 715, 740, 825, 839, 840], "linux_toolchain_static_librari": [548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 642, 840, 984, 1064, 1067, 1070, 1071, 1073], "linux_toolchain_separate_compil": [548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 642, 840, 984, 1064, 1067, 1068, 1069, 1070, 1071, 1073], "linux_toolchain_bas": [548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 642, 816, 839, 840, 917, 920, 921, 922, 984, 1007, 1013, 1015, 1023, 1025, 1039, 1042, 1045, 1047, 1064, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074], "linux_basics_shell_file_dir_create_rm": [548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 642, 816, 839, 840, 914, 915, 916, 917, 920, 921, 922, 943, 952, 953, 954, 955, 956, 957, 958, 959, 960, 962, 968, 984, 1007, 1013, 1015, 1023, 1025, 1039, 1042, 1045, 1047, 1064, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074], "linux_basics_shell_commandlin": [548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 642, 816, 839, 840, 910, 914, 915, 916, 917, 920, 921, 922, 929, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 968, 978, 984, 1007, 1013, 1015, 1023, 1025, 1039, 1042, 1045, 1047, 1064, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074], "linux_basics_intro_overview": [548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 642, 816, 839, 840, 910, 914, 915, 916, 917, 920, 921, 922, 929, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 968, 978, 984, 996, 997, 998, 999, 1000, 1007, 1013, 1015, 1023, 1025, 1039, 1042, 1045, 1047, 1064, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074], "linux_basics_shell_cwd": [548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 642, 816, 839, 840, 914, 915, 916, 917, 920, 921, 922, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 952, 953, 954, 955, 956, 957, 958, 959, 960, 962, 963, 964, 965, 966, 968, 984, 1007, 1013, 1015, 1023, 1025, 1039, 1042, 1045, 1047, 1064, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074], "linux_basics_shell_path": [548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 642, 816, 839, 840, 914, 915, 916, 917, 920, 921, 922, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 968, 984, 1007, 1013, 1015, 1023, 1025, 1039, 1042, 1045, 1047, 1064, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074], "linux_basics_intro_process": [548, 562, 590, 591, 592, 593, 594, 595, 596, 597, 600, 642, 816, 839, 840, 914, 915, 916, 917, 920, 921, 922, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 952, 953, 954, 955, 956, 957, 958, 959, 960, 962, 963, 964, 965, 966, 968, 984, 996, 997, 998, 999, 1000, 1007, 1013, 1015, 1023, 1025, 1039, 1042, 1045, 1047, 1064, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074], "sensorread": 549, "chrono_liter": [549, 743, 815, 817, 818], "demologg": 549, "demovaluestor": 549, "_store": 549, "namedsensor": 549, "_logger": 549, "_value_stor": 549, "sensora": 549, "sensorb": 549, "sensorc": 549, "200000": [549, 993, 1193], "this_thread": [549, 743, 804, 815, 817], "sleep_for": [549, 743, 804, 815, 817], "12597": 549, "valuestor": 549, "2895": 549, "158243": 549, "cassert": [549, 691, 733, 736, 738, 744, 817], "boss": 549, "v3": 549, "abort": [549, 568, 569, 652, 781, 1006], "mocklogg": 549, "lines_log": 549, "mockvaluestor": 549, "sensorreader_suit": 549, "141320": 549, "memcheck": [549, 652, 802], "detector": [549, 652, 802], "myobserv": 551, "socialdb_observ": [551, 579], "newcitizenobserv": [551, 579], "new_citizen": 551, "_new_citizen_svnr": 551, "new_citizen_ad": [551, 579], "observer_suit": 551, "register_on": 551, "register_new_citizen_notif": [551, 579], "register_mani": 551, "observer1": 551, "observer2": 551, "register_dupl": 551, "observeralreadyregist": [551, 579], "unregister_new_citizen_notif": [551, 579], "unregister_not_regist": 551, "observernotregist": [551, 579], "addict": [552, 927, 948, 1214, 1222], "bertrand": 552, "barbara": 552, "polish": 552, "be_sick": 555, "insur": [555, 568, 569, 570, 582, 583, 584], "teardown": [555, 602, 1084, 1222, 1232, 1234], "purest": 556, "lightest": 556, "pidcontrol": 556, "cluster_cxx_exercises_design_patterns_solut": [562, 590, 642, 840], "cxx_exercises_design_patterns_proxy_remot": [562, 590, 642, 840], "cxx_exercises_design_patterns_adapt": [562, 590, 642, 840], "cxx_exercises_design_patterns_interpreter_bas": [562, 590, 642, 840], "cxx_exercises_design_patterns_singleton_flexible_strict": [562, 590, 642, 840], "cxx_exercises_design_patterns_singleton_inflex": [562, 590, 642, 840], "cxx_exercises_design_patterns_singleton_flex": [562, 590, 642, 840], "cxx_exercises_design_patterns_observ": [562, 590, 642, 840], "cxx_exercises_design_patterns_abstract_factori": [562, 590, 642, 840], "cxx_exercises_design_patterns_command": [562, 590, 642, 840], "cxx_exercises_design_patterns_composit": [562, 590, 642, 840], "cxx_exercises_design_patterns_decor": [562, 590, 642, 840], "cxx_exercises_design_patterns_interpreter_and_adapt": [562, 590, 642, 840], "cxx_exercises_design_patterns_solutions_proxy_remot": [562, 590, 642, 840], "cxx_exercises_design_patterns_solutions_command": [562, 590, 642, 840], "cxx_exercises_design_patterns_solutions_singleton_flex": [562, 590, 642, 840], "cxx_exercises_design_patterns_solutions_decor": [562, 590, 642, 840], "cxx_exercises_design_patterns_solutions_abstract_factori": [562, 590, 642, 840], "cxx_exercises_design_patterns_solutions_singleton_inflex": [562, 590, 642, 840], "cxx_exercises_design_patterns_solutions_proxy_round": [562, 590, 642, 840], "cxx_exercises_design_patterns_solutions_singleton_flexible_strict": [562, 590, 642, 840], "cxx_exercises_design_patterns_solutions_composit": [562, 590, 642, 840], "cxx_exercises_design_patterns_solutions_interpreter_and_adapt": [562, 590, 642, 840], "cxx_exercises_design_patterns_solutions_adapt": [562, 590, 642, 840], "cxx_exercises_design_patterns_solutions_interpreter_bas": [562, 590, 642, 840], "cxx_exercises_design_patterns_solutions_observ": [562, 590, 642, 840], "cla": 563, "roundingsensor": [563, 567, 581], "r1": [563, 664, 756], "r2": [563, 664, 756], "r3": 563, "sensorvalueexpress": [563, 577], "e1_e2": 563, "e1_e2_e3": 563, "num_measur": 563, "v_avg": 563, "v_ass": 563, "combinatin": 564, "interpreter_suit": 564, "e_lh": 564, "e_rh": 564, "e_add": 564, "e_sub": 564, "mul": 564, "e_mul": 564, "e_div": 564, "arithemet": 564, "combined_arith": 564, "l7": 564, "a_7_plus_3": 564, "s_3_minus_1": 564, "variable_not_set": 564, "analogi": [564, 588, 994, 1056, 1097], "assignment_valu": 564, "variable_assign": 564, "ass": 564, "variable_used_as_express": 564, "ass_v1": 564, "ass_v2": 564, "reachabl": [566, 802, 992, 994], "remoteadapt": [566, 580], "response_promis": 566, "_adapt": 566, "_queue": [566, 815], "_thread": 566, "fulfil": [566, 601], "proxy_remote_suit": 566, "_c": 566, "remotesensoradapt": [566, 580], "remotesensor": [566, 580], "remote_sensor__is_a__sensor": 566, "somth": 566, "fullfil": 567, "proxy_round_suit": 567, "round_down": 567, "round_up": 567, "rouding_sensor__is_a__sensor": 567, "advis": [568, 1184], "hypothet": [568, 600, 601, 651, 985], "fee": 568, "socialinsur": [568, 569, 570, 584], "oegk": [568, 569], "startup": [568, 569, 570, 582, 919, 1056, 1062, 1079, 1095], "set_inst": [568, 569, 582], "socinsur": [569, 583], "inisur": 569, "reimplement": [569, 739], "compiabl": [569, 583], "iface_inst": [569, 583], "svs_instanc": [569, 583], "oegk_inst": [569, 583], "another_inst": [569, 570, 583, 584], "1485": [569, 570], "sozialversicherung": [570, 584], "unrealist": 570, "adapte": 572, "_adapte": 572, "_svnr": 573, "_firstnam": [573, 703, 1107], "_lastnam": [573, 703, 1107], "_result": 573, "_command": 573, "get_if": [573, 830], "decoratedconstantsensor": 575, "sstream": [575, 580, 662, 664], "iomanip": 575, "ostringstream": [575, 580, 661, 662, 663, 664], "decoratedrandomsensor": 575, "_variabl": 578, "_lh": 578, "_rh": 578, "_context": 578, "_var": 578, "_exp": 578, "stdexcept": [578, 580, 582, 583, 584, 602, 838], "_new_citizen_observ": 579, "num_eras": 579, "_server": 580, "cstdio": 580, "num_item": 580, "cmath": [581, 646, 654, 655, 663, 750, 766, 767, 768, 769, 806], "_instanc": [582, 583, 584], "_databas": [582, 583, 584], "0l": [582, 583], "cstdlib": [583, 602], "ssocinsur": 583, "millidegre": 585, "parameteriz": [586, 1190], "loop_and_measur": 586, "niter": 586, "stod": [588, 722], "uniform_real_distribut": [588, 596, 801], "default_random_engin": [588, 596, 801], "random_devic": [588, 596, 801], "_distribut": [588, 801], "_engin": [588, 801, 1210], "_y": [588, 646, 647, 649, 651, 653, 654, 655, 656, 658, 660, 670, 685, 750, 765, 767, 768, 769], "spit": [588, 1196], "cluster_cxx03_functions_and_method": [590, 642, 665, 724, 725, 728, 729, 731, 732, 733, 735, 736, 737, 738, 739, 740, 752, 783, 799, 808, 816, 837, 839, 840], "cluster_cxx03_templ": [590, 607, 609, 642, 671, 687, 693, 697, 706, 709, 710, 728, 735, 736, 737, 738, 739, 740, 840], "cluster_cxx03_stl": [590, 607, 609, 642, 687, 693, 697, 705, 706, 707, 709, 710, 728, 735, 736, 737, 738, 739, 740, 840], "cluster_cxx03_stl_associative_contain": [590, 607, 609, 642, 697, 706, 710, 740, 840], "cluster_cxx03_stl_algorithm": [590, 607, 642, 687, 706, 709, 710, 740, 840], "cluster_cxx03_except": [590, 607, 609, 642, 668, 671, 687, 693, 697, 706, 709, 710, 725, 726, 728, 735, 736, 737, 738, 739, 740, 840], "cluster_cxx_exercises_stl": [590, 607, 609, 642, 840], "cluster_cxx_exercises_stl_sensor_repositori": [590, 607, 609, 642, 840], "cluster_cxx_exercises_fh_sensor_first_tri": [590, 642, 840], "cluster_linux_sysprog": [590, 642, 816, 839, 840, 917, 920, 921, 922, 984, 1007, 1013, 1015, 1023, 1025, 1027, 1039, 1042, 1045, 1047], "cluster_linux_sysprog_fileio": [590, 642, 816, 839, 840, 917, 920, 921, 922, 984, 1013, 1015, 1023, 1025, 1039, 1042, 1045, 1047], "cluster_linux_sysprog_bas": [590, 642, 816, 839, 840, 917, 920, 921, 922, 984, 1007, 1013, 1015, 1023, 1025, 1039, 1042, 1045, 1047], "cluster_linux_basics_permiss": [590, 642, 816, 839, 840, 917, 920, 921, 922, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 984, 1013, 1015, 1023, 1025, 1039, 1042, 1045, 1047], "cxx03_functions_and_methods_method": [590, 642, 665, 728, 729, 731, 732, 733, 735, 736, 737, 738, 739, 740, 752, 783, 799, 808, 816, 837, 839, 840], "cxx03_functions_and_methods_overload": [590, 642, 665, 724, 725, 728, 729, 731, 732, 733, 735, 736, 737, 738, 739, 740, 752, 783, 799, 808, 816, 837, 839, 840], "cxx03_functions_and_methods_refer": [590, 642, 665, 728, 731, 732, 735, 736, 737, 738, 739, 740, 752, 783, 799, 808, 816, 837, 839, 840], "cxx03_functions_and_methods_thi": [590, 642, 665, 728, 731, 732, 735, 736, 737, 738, 739, 740, 752, 783, 799, 808, 816, 837, 839, 840], "cxx03_functions_and_methods_stat": [590, 642, 665, 740, 840], "cxx03_functions_and_methods_const": [590, 642, 665, 728, 731, 732, 735, 736, 737, 738, 739, 740, 752, 783, 799, 808, 816, 837, 839, 840], "cxx03_functions_and_methods_oper": [590, 642, 665, 740, 840], "cxx03_data_encapsulation_initializer_list": [590, 593, 596, 642, 650, 740, 840], "cxx03_templates_function_templ": [590, 607, 609, 642, 671, 687, 693, 697, 706, 709, 710, 728, 735, 736, 737, 738, 739, 740, 840], "cxx03_exceptions_try_catch": [590, 607, 609, 642, 668, 671, 687, 693, 697, 706, 709, 710, 725, 726, 728, 735, 736, 737, 738, 739, 740, 840], "cxx03_templates_class_templ": [590, 607, 609, 642, 671, 687, 693, 697, 706, 709, 710, 728, 735, 736, 737, 738, 739, 740, 840], "cxx03_stl_basic": [590, 607, 609, 642, 687, 693, 697, 706, 709, 710, 728, 735, 736, 737, 738, 739, 740, 840], "cxx03_stl_vector_copy_etc": [590, 607, 642, 706, 710, 740, 840], "cxx03_stl_associative_containers_bas": [590, 607, 609, 642, 697, 706, 710, 740, 840], "cxx03_stl_associative_containers_map": [590, 607, 609, 642, 697, 706, 710, 740, 840], "cxx03_stl_algorithm_find": [590, 607, 642, 687, 706, 710, 740, 840], "cxx03_stl_algorithm_copi": [590, 607, 642, 687, 706, 710, 740, 840], "cxx03_exceptions_bas": [590, 607, 609, 642, 668, 671, 687, 693, 697, 706, 709, 710, 725, 726, 728, 735, 736, 737, 738, 739, 740, 840], "cxx_exercises_sensor_w1_factori": [590, 642, 840], "cxx_exercises_sensor_w1": [590, 642, 840], "cxx_exercises_oo_shap": [590, 642, 840], "cxx_exercises_display_led_stripe_nopoli": [590, 591, 642, 840], "cxx_exercises_switch_mock_nopoli": [590, 591, 592, 597, 642, 840], "cxx_exercises_sensor_mock_nopoli": [590, 591, 592, 593, 595, 642, 840], "linux_sysprog_fileio_exercise_w1_sensor": [590, 642, 840, 984, 1023, 1025, 1042], "cxx_exercises_sensor_avg_nopoli": [590, 593, 642, 840], "cxx_exercises_hysteresis_nopoli": [590, 592, 642, 840], "cxx_exercises_sensor_const_nopoli": [590, 594, 596, 642, 840], "cxx_exercises_sensor_random_nopoli": [590, 596, 642, 840], "cxx_exercises_stl_uniq": [590, 607, 642, 840], "cxx_exercises_stl_filter_gener": [590, 607, 642, 840], "cxx_exercises_stl_vector": [590, 607, 642, 840], "cxx_exercises_stl_map": [590, 607, 609, 642, 840], "cxx_exercises_stl_filter_greater_10": [590, 607, 642, 840], "cxx_exercises_stl_algo": [590, 607, 642, 840], "cxx_exercises_stl_filter_odd": [590, 607, 642, 840], "cxx_exercises_stl_sensor_repository_memory_leak": [590, 607, 609, 642, 840], "cxx_exercises_stl_sensor_repository_size_const": [590, 607, 609, 642, 840], "cxx_exercises_stl_sensor_repository_remove_sunni": [590, 607, 609, 642, 840], "cxx_exercises_stl_sensor_repository_insert_sunni": [590, 607, 609, 642, 840], "cxx_exercises_stl_sensor_repository_remove_not_found": [590, 607, 609, 642, 840], "cxx_exercises_stl_sensor_repository_lookup_not_found": [590, 607, 609, 642, 840], "cxx_exercises_stl_sensor_repository_lookup_sunni": [590, 607, 609, 642, 840], "cxx_exercises_stl_sensor_repository_insert_no_overwrit": [590, 607, 609, 642, 840], "cxx_exercises_fh_sensor_first_try_exercise_fh_sensor_oo": [590, 642, 840], "cxx_exercises_fh_sensor_first_try_exercise_fh_sensor_oo_random_sensor": [590, 642, 840], "cxx_exercises_fh_sensor_first_try_exercise_fh_sensor_oo_loop_funct": [590, 642, 840], "cxx_exercises_fh_sensor_first_try_exercise_fh_sensor_oo_no_polymorph": [590, 642, 840], "linux_sysprog_fileio_bas": [590, 642, 816, 839, 840, 917, 920, 921, 922, 984, 1013, 1015, 1023, 1025, 1039, 1042, 1045, 1047], "linux_sysprog_basics_groupnod": [590, 642, 816, 839, 840, 917, 920, 921, 922, 984, 1007, 1013, 1015, 1023, 1025, 1039, 1042, 1045, 1047], "linux_basics_permissions_bas": [590, 642, 816, 839, 840, 917, 920, 921, 922, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 984, 1013, 1015, 1023, 1025, 1039, 1042, 1045, 1047], "linux_sysprog_basics_errorhandl": [590, 642, 816, 839, 840, 917, 920, 921, 922, 984, 1007, 1013, 1015, 1023, 1025, 1039, 1042, 1045, 1047], "linux_sysprog_basics_syscal": [590, 642, 816, 839, 840, 917, 920, 921, 922, 984, 1007, 1013, 1015, 1023, 1025, 1039, 1042, 1045, 1047], "linux_basics_shell_l": [590, 642, 816, 839, 840, 914, 915, 916, 917, 920, 921, 922, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 952, 955, 956, 959, 960, 962, 963, 964, 965, 966, 968, 984, 1013, 1015, 1023, 1025, 1039, 1042, 1045, 1047], "mockswitch_nopoli": [591, 592, 597], "display_led_stripe_nopoly_suite__somewhere_in_the_middl": 591, "nopoli": [591, 592, 593, 594, 595, 596, 597], "display_led_stripe_nopoly_suit": 591, "somewhere_in_the_middl": 591, "sw0": 591, "sw1": 591, "sw2": 591, "sw3": 591, "sw4": 591, "sw5": 591, "sw6": 591, "sw7": 591, "display_led_stripe_nopoly_suite__below_rang": 591, "below_rang": 591, "display_led_stripe_nopoly_suite__above_rang": 591, "above_rang": 591, "display_led_stripe_nopoly_suite__mov": 591, "movement": [591, 985], "set_temperatur": [591, 592, 593, 595], "display_led_stripe_nopoly_suite__vari": 591, "variation_2_switch": 591, "variation_interval_not_from_0": 591, "thermostat": 592, "threshold": 592, "nop_when_within_rang": 592, "hysteresis_suit": 592, "hyst": 592, "falls_below_rang": 592, "rises_above_rang": 592, "rises_above_range_when_on": 592, "sensor_avg_nopoly_suit": 593, "sensor_const_nopoly_suit": 594, "sensor_mock_nopoly_suit": 595, "sensor_random_suit": [596, 600, 601], "uniformli": 596, "rd": 596, "obtain": [596, 814, 1137], "rng": 596, "tailor": 596, "switch_mock_suit": 597, "initial_st": [597, 1233], "set_on_off": 597, "initial_failur": 598, "failit": 598, "point_suit": [598, 662], "ctor_and_gett": 598, "ctor_and_getters_const": 598, "default_ctor": [598, 661, 662, 663, 664, 819, 820], "equal_method": 598, "p3": 598, "p4": [598, 948], "assert_fals": [598, 603, 608, 610, 615, 644, 661, 662, 663, 664, 819, 838], "equal_method_const": 598, "operator_equ": 598, "operator_equals_const": 598, "move_method": 598, "operator_plus_equ": 598, "add_method": 598, "new_p": 598, "add_method_const": 598, "operator_plu": [598, 661, 662, 663], "operator_plus_const": 598, "radiu": 598, "circle_suit": 598, "ctor_and_getters_using_operator_equ": 598, "14159": 598, "53981634": 598, "area_const": 598, "square_suit": 598, "bottom_left": [598, 664], "side_length": 598, "shape_suit": 598, "circle_is_a_shap": 598, "square_is_a_shap": 598, "area_is_shape_functionality__circl": 598, "area_is_shape_functionality__squar": 598, "human": [599, 601, 807, 948, 970, 1062, 1108, 1195], "ineffici": [599, 722, 904, 1024], "epath": 599, "bag_copy_suit": [599, 834], "find_by_int_ok": [599, 834, 835, 836], "find_by_int_nok": [599, 834, 835, 836], "remove_by_int_ok": [599, 834, 835, 836], "bag_unique_suit": [599, 836], "bag_shared_suit": [599, 835], "insert_const_ref": [599, 835], "insert_mov": [599, 835], "tyo": 600, "sensor_const_suit": [600, 601], "is_a_sensor": [600, 601], "5731": 600, "aptli": 601, "23062": 601, "w1sensorfactori": 601, "find_by_address": 601, "sensor_w1_factory_suit": 601, "fstream": [601, 838], "tmpdir_fixtur": 601, "device_dir": 601, "create_directori": 601, "ofstream": [601, 838], "42459": 601, "temp_milli": [601, 602], "w1_fs_root": 601, "sensor_factori": 601, "0x02131d959eaa": 601, "assert_n": [601, 637, 660, 661, 797, 819, 820, 835, 836], "horizon": 601, "0x012345678901": 601, "w1_sensor_suit": [601, 602], "test_read_sensor": [601, 602], "36700": 601, "basedir": 601, "0x2131d959eaa": 601, "dcmake_toolchain_fil": [602, 1063, 1078], "20687": 602, "write_temperatur": 602, "thaht": 602, "filename_pattern": 602, "xxxxxx": 602, "mkstemp": 602, "unlink": [602, 1054, 1056], "to_str": 602, "off_t": [602, 1014, 1024, 1029, 1055], "lseek": [602, 1024, 1029, 1055], "seek_set": [602, 1014, 1029, 1055], "nwritten": [602, 1018, 1019, 1020, 1021, 1026, 1029, 1055, 1059], "algo": [603, 636, 637, 672, 673], "copy_into_vector": 603, "stl_exercises_suit": [603, 604, 605, 606, 608, 610, 611, 612, 613, 615, 616, 617, 618, 619], "required_cont": 603, "find_in_vector": 603, "my_vec": [603, 619], "wladimir": 603, "sort_in_plac": 603, "required_output": [603, 604, 605, 606, 618], "orig_input": [603, 604, 605, 606, 618], "alement": 604, "is_odd": 604, "filter_greater_10": 605, "filter_odd": 606, "map_insert": 608, "my_map": [608, 698, 699, 700, 701, 702], "map_insert_simpl": 608, "insert_check_dupl": 608, "map_insert_check_dupl": 608, "insert_remove_by_kei": 608, "map_insert_remove_by_kei": 608, "map_remove_by_kei": 608, "map_find": 608, "sensorrepositori": [609, 610, 611, 612, 613, 614, 615, 616, 617], "decript": 609, "sensor_repository_insert_dupl": 610, "ofen": [610, 611, 612, 613, 615, 616], "weltraum": [610, 611, 612, 613, 615, 616], "mond": [610, 615], "sucess": 610, "sensor_repository_insert": 611, "sensor_repository_lookup_neg": 612, "get_sensor": [612, 613, 616], "sensor_repository_lookup_posit": 613, "complaint": 614, "ish": 614, "sensor_repository_remove_nonexist": 615, "remove_sensor": [615, 616], "sensor_repository_remov": 616, "sensor_repository_size_const": 617, "vector_append": 619, "vector_join": 619, "joined_cont": 619, "userdb_map": 620, "userdb_vector": 620, "dan": 620, "sak": 620, "cppcon": [620, 748, 750, 751, 764, 771, 789, 800, 822, 825], "transcrib": 620, "mallocfre": 625, "arrayofinteg": 625, "memoryleak": 625, "arrayboundswrit": 625, "newdelet": 625, "singleinteg": 625, "deletemismatch": 625, "thing1": [627, 628], "thing2": [627, 628], "global_str": 628, "__have_thing_h__": 628, "_content": 628, "denstruct": 628, "destruct": [628, 649, 719, 751, 801, 930], "essenc": [628, 1228], "collaps": 631, "thoroughli": [631, 992], "_mem": [634, 781], "determinist": [634, 800, 814, 1084, 1135], "maybeown": 634, "pointerarithmet": 637, "bugp": 637, "105ff": 637, "num_el": 637, "another_arrai": 637, "yet_another_arrai": 637, "108ff": 637, "basics_cxx03": 637, "basics_cxx11": 637, "cbegin": [637, 690, 709, 747, 758], "my_copi": 637, "naivecopi": 637, "cend": [637, 690, 709, 747], "algocopi": 637, "backinsert": 637, "back_insert_iter": [637, 678], "nah": [637, 1230], "insertfind": 637, "make_pair": [637, 700, 703, 792], "erasebyposit": 637, "erasebykei": 637, "domin": 643, "1985": 643, "2003": [643, 1241], "point_c_suit": [644, 646], "struct_initi": 644, "point_init_default": 644, "c_default_constructor_init": 644, "point_create_default": 644, "c_default_constructor_cr": 644, "point_creat": [644, 646], "c_constructor": [644, 646], "eq": [644, 660, 662, 664], "point_equ": 644, "point_not_equ": 644, "eq_n": 644, "point_mov": [644, 646, 654, 656], "point_add": 644, "point_sub": 644, "add_sub": 644, "point_dist": 644, "point_ab": [644, 646], "hyp": [644, 646, 654], "unwant": [644, 695, 792, 865, 1086, 1107, 1131], "cpp_copy_suit": 645, "generated_copy_ctor": 645, "copy1": [645, 802], "copy2": [645, 802], "copy3": 645, "manual_copy_suit": 645, "copy_ctor": [645, 801], "assignment_oper": 645, "earlier": 646, "point_h": [646, 654, 655], "point_cpp_suit": 646, "constructor_coordin": 646, "inaccessibil": 646, "move_op_pluseq": 646, "whenev": [647, 654, 664, 751], "sth": 648, "dirty_stack": 648, "use_uniniti": 648, "onward": [648, 652, 659], "nw": 649, "memberwis": 649, "_c_str": [649, 652, 754], "cxx03_data_encapsulation_object_copi": [650, 740, 752, 783, 799, 808, 816, 837, 839, 840], "cxx03_data_encapsulation_copy_bas": [650, 740, 840], "string_h": [652, 754], "cstring": [652, 754, 755, 788], "tcach": [652, 781], "221601": 652, "julian": [652, 802], "seward": [652, 802], "libvex": [652, 802], "realloc": [652, 695], "0x484465b": 652, "1103": 652, "0x401210": 652, "0x401194": 652, "0x4dc8c80": 652, "0x401188": 652, "0x484222f": 652, "0x4011c5": 652, "0x40116f": 652, "freed": [652, 846, 1017, 1084], "destroi": [652, 714, 737, 756, 773, 788, 803, 814, 877], "221807": 652, "twostr": 652, "twotwostr": 652, "s21": 652, "s22": 652, "segfault": [652, 901, 1060], "paraamet": 653, "__pretty_function__": 653, "0000000000401176": 653, "_z1fi": 653, "00000000004011a0": 653, "_z1fpc": 653, "demangl": 653, "anywher": [654, 1082], "fab": [654, 655], "distance_origin": [654, 655, 806], "hid": 654, "standardes": 654, "d_orig": 655, "fpermiss": [655, 793], "arrog": 655, "goodi": [655, 986], "pascal": 657, "uninitil": 657, "pass_by_copi": 657, "references_suit": 657, "tediou": [657, 1011, 1064, 1139], "pass_by_point": 657, "pass_by_refer": 657, "pass_by_const_point": 657, "const_point": 657, "pass_by_const_refer": 657, "const_refer": 657, "pass_by_copy_expens": 657, "copy_expens": 657, "pass_by_const_reference_cheap": 657, "const_reference_cheap": 657, "addend": [658, 786, 806], "straightforwardli": [658, 1145], "add_point": 658, "static_suit": 658, "global_funct": 658, "static_method": 658, "bss": 659, "definition1": 659, "definition2": 659, "forbid": 659, "trickeri": 659, "points_equ": 660, "oddli": 660, "operators_suit": 660, "equals_glob": 660, "difficulti": 660, "equals_object": 660, "vector_addition_glob": 660, "vector_addition_object": 660, "point_plus_equ": 660, "combo": [661, 663, 1065], "cuboid_suit": 661, "front_bottom_left": 661, "point_whl_ctor": 661, "operator_eq_n": [661, 662, 663, 664], "operator_pluseq": [661, 662, 663], "operator_minuseq": [661, 663], "operator_minu": [661, 663], "operator_ostream": [661, 662, 663, 664], "buf": [661, 662, 663, 664, 1006, 1014, 1024], "entirei": [661, 663, 664], "starting_point": 662, "implementation_in_cpp_fil": 662, "rectangle_suit": [662, 664], "pluseq": 662, "operator_unary_minu": [662, 663], "minus_p": [662, 663], "point3d_suit": 663, "coordinates_ctor": 663, "071067812": 663, "69041576": 663, "top_right": 664, "top_left": 664, "bottom_right": 664, "rational": [664, 698], "operator_plus_equal_vec": 664, "plus_vec": 664, "cxx03_functions_and_methods_static_member_vari": [665, 740, 840], "cxx03_functions_and_methods_exercise_class_point3d": [665, 740, 840], "cxx03_functions_and_methods_exercise_class_point": [665, 740, 840], "cxx03_functions_and_methods_exercise_class_cuboid": [665, 740, 840], "cxx03_functions_and_methods_exercise_class_rectangl": [665, 740, 840], "dothat": [666, 667], "dothi": [666, 667], "dothos": [666, 667], "dammit": [666, 667, 747], "thisexcept": 667, "thatexcept": 667, "thrown": [667, 726, 1059], "myexcept": 667, "error_detect": 667, "granular": [667, 858, 1046], "typenam": [669, 670, 753, 760, 761, 762, 763, 765, 767, 768, 769, 774, 795, 801, 805, 815, 817], "a_begin": [673, 675], "a_end": [673, 675], "src_begin": [673, 677], "src_end": [673, 677], "dst_begin": [673, 677], "zeroth": 674, "warrai": 676, "unflex": 678, "shrink_to_fit": 678, "prealloc": [678, 679], "wnonnul": 679, "gool": [680, 748], "cplusplu": [682, 683, 684, 685, 686, 688, 689, 690, 691, 694, 703], "int_arrai": [682, 684, 688, 691], "binarili": 682, "is_el": 682, "original_begin": 683, "original_end": 683, "copy_run": 683, "original_run": 683, "int_array_c": 684, "match_666": 685, "match_42": 685, "x_equals_666": 685, "x_equals_4": 685, "x_equal": 685, "_criterion": 685, "yesno": [685, 914, 915], "output_stern": 686, "output_bindestrich": 686, "output_with_prefix": 686, "_prefix": 686, "cxx03_stl_algorithm_reverse_copi": [687, 706, 709, 710, 740, 840], "cxx03_stl_algorithm_sort": [687, 706, 710, 740, 840], "cxx03_stl_algorithm_for_each": [687, 706, 710, 740, 840], "cxx03_stl_algorithm_find_if": [687, 706, 710, 740, 840], "cxx03_stl_algorithm_lower_bound": [687, 706, 710, 740, 840], "cxx03_stl_algorithm_binary_search": [687, 706, 710, 740, 840], "cxx03_stl_algorithm_revers": [687, 706, 709, 710, 740, 840], "reversed_": [690, 709], "less_revers": 691, "greater_than": 691, "cluster_cxx03_stl_sequential_contain": [693, 706, 710, 740, 840], "cxx03_stl_sequential_containers_list": [693, 706, 710, 740, 840], "cxx03_stl_sequential_containers_bas": [693, 706, 710, 740, 840], "cxx03_stl_sequential_containers_vector": [693, 706, 710, 740, 840], "liek": 695, "logarithm": 695, "mein_int_arrai": 695, "insert_po": 695, "new_elems_as_vector": 695, "elems_to_insert": 695, "cxx03_stl_associative_containers_multimap": [697, 706, 710, 740, 840], "realiz": [698, 1135], "parameter": [698, 805, 810, 1071, 1085], "keytyp": [698, 743], "valuetyp": [698, 743], "some_map": 698, "key_typ": [698, 699], "mapped_typ": [698, 699], "value_typ": [698, 699], "emplac": 698, "collis": 698, "zweiundvierzig": 698, "out_of_rang": [698, 702], "mymap": [699, 700, 701, 702], "sechshundersechsundsechzig": 699, "kv": 699, "pre11": [699, 700], "einundfuenfzig": [699, 700, 701, 702], "vierundfuenfzig": [699, 700, 701, 702], "dreihundertsechsundvierzig": [699, 700, 701, 702], "tausendein": [699, 700, 701, 702], "tausendzwei": [699, 700, 701, 702], "retval_7": 700, "retval_2": 700, "n_remov": 701, "found_value_1001": 702, "found_value_666": 702, "found_valu": 702, "joerg_svnr": 703, "caro_svnr": 703, "johanna_svnr": 703, "philipp_svnr": 703, "datenzwilling_von_joerg": 703, "faschingzwil": 703, "meine_map": 703, "datenzwil": 703, "equal_rang": 703, "found_rang": 703, "svnr_notexist": 703, "1234567": 703, "memory_resourc": 704, "cluster_cxx03_stl_alloc": [705, 706, 710, 740, 840], "cxx03_stl_allocator_bas": [705, 706, 710, 740, 840], "cluster_cxx03_stl_exercis": [706, 707, 709, 710, 740, 840], "cluster_cxx03_stl_exercises_reverse_str": [706, 707, 709, 710, 740, 840], "cxx03_stl_exercises_reverse_string_solut": [706, 709, 710, 740, 840], "cxx03_stl_exercises_reverse_string_exercis": [706, 707, 709, 710, 740, 840], "auto_ptr": [711, 751, 1241], "cluster_cxx03_dynamic_memori": [712, 740, 840], "cxx03_dynamic_memory_todo": [712, 740, 840], "inher": [713, 714, 717, 719, 720, 1048, 1137], "novirtu": [713, 714, 720], "mantra": [714, 912], "spoiler": [714, 1095], "cxx03_inheritance_oo_private_protect": [715, 740, 840], "derived1": 717, "derived2": 717, "countless": 717, "derived3": 717, "unimpl": [717, 1099], "polymorp": [719, 824], "strictli": [719, 992, 993, 1095], "indirect": [720, 807, 925, 1080], "cluster_cxx03_standard_library_miscellanea": [721, 725, 726, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 840], "cxx03_standard_library_miscellanea_str": [721, 725, 726, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 840], "string_suit": 722, "another_hello": 722, "greeting1": 722, "greeting2": 722, "aaron": 722, "adam": 722, "stoi": [722, 726, 1026, 1029], "stol": 722, "stoll": 722, "stoul": 722, "stoull": 722, "stof": 722, "stold": 722, "namesapc": 722, "convert_to_signed_integ": 722, "numstr": 722, "convert_to_unsigned_integ": 722, "invalid_argu": 722, "convert_to_number_error": 722, "convert_from_someth": 722, "basic_str": [722, 805, 838], "i_str": 722, "ui_str": 722, "666000": 722, "sprintf": [722, 1026, 1029, 1059, 1060], "print_char": 723, "cluster_cxx03_exercises_misc": [723, 724, 725, 726, 727, 740, 840], "cxx03_exercises_misc_american_flag": [723, 725, 740, 840], "cxx03_exercises_misc_fh_moodle_quiz": [724, 725, 740, 840], "cxx03_exercises_misc_passwd_pars": [725, 726, 740, 840], "cxx03_exercises_misc_sum_integers_from_stdin": [725, 727, 740, 840], "parse_passwd_lin": 726, "homedir": 726, "line_invalid": 726, "passwd_user_suit": 726, "object_construction_and_member_access": 726, "passwd_error_suit": 726, "parse_passwd_line__fak": 726, "fake": [726, 992], "throwing_and_catch": 726, "getpwent": 726, "ctrl": [727, 1060, 1113], "cluster_cxx03_exercises_userdb": [728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 840], "cxx03_exercises_userdb_userdb_search_notfound_except": [728, 737, 740, 840], "cxx03_exercises_userdb_userdb_search_find_if": [728, 736, 737, 740, 840], "cxx03_exercises_userdb_user_ctor": [728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 840], "cxx03_exercises_userdb_user_default_ctor": [728, 735, 736, 737, 738, 739, 740, 840], "cxx03_exercises_userdb_user_const": [728, 731, 732, 735, 736, 737, 738, 739, 740, 840], "cxx03_exercises_userdb_user_access_method": [728, 729, 731, 732, 735, 736, 737, 738, 739, 740, 840], "cxx03_exercises_userdb_userdb_insert": [728, 735, 736, 737, 738, 740, 840], "cxx03_exercises_userdb_userdb_vector_bas": [728, 735, 736, 737, 738, 739, 740, 840], "cxx03_exercises_userdb_user_const_memb": [728, 729, 730, 731, 732, 733, 735, 736, 737, 738, 739, 740, 840], "cxx03_exercises_userdb_user_simple_method": [728, 729, 731, 732, 733, 735, 736, 737, 738, 739, 740, 840], "cxx03_exercises_userdb_userdb_search": [728, 736, 737, 738, 740, 840], "architecton": 730, "celebr": 733, "trittsich": [733, 734], "age_by_n_year": 733, "user_init": 734, "userdb_insert": 735, "doesnotexist": [736, 738], "isvalid": [736, 737, 738], "unnatur": 737, "_user": [737, 889], "thereaft": 737, "wrinkl": 737, "usernotfound": 737, "unreach": [737, 1003], "userdb_search_by_lastnam": 738, "undetect": 738, "userdb_init": 739, "cluster_cxx11": [741, 745, 752, 759, 770, 783, 784, 794, 799, 808, 816, 821, 825, 837, 839, 840], "cluster_cxx11_introduct": [741, 745, 783, 837, 839, 840], "cxx11_introduction_overview_livehack": [741, 839, 840], "cxx11_introduction_histori": [741, 745, 783, 837, 839, 840], "ugliest": 742, "todo_list": 743, "tdl": 743, "desc": 743, "key_value_pair": 743, "up_1_to_10": 743, "down_1000_to_980": 743, "todo_item": 743, "make_shar": [743, 804, 835], "todolist": 743, "nocopi": 743, "add_item": 743, "_list": 743, "evangelist": 743, "wchar_t": 744, "cluster_cxx11_new_language_featur": [745, 752, 759, 770, 783, 784, 794, 799, 808, 816, 837, 839, 840], "cluster_cxx11_new_language_features_brace_initi": [745, 783, 837, 839, 840], "cxx11_new_language_features_auto": [745, 783, 837, 839, 840], "cxx11_new_language_features_strongly_typed_enum": [745, 783, 837, 839, 840], "cxx11_new_language_features_brace_initialization_implementor_view": [745, 783, 839, 840], "cxx11_new_language_features_brace_initialization_intro": [745, 783, 837, 839, 840], "cxx11_new_language_features_brace_initialization_mess": [745, 783, 839, 840], "pointcloud": [746, 748], "_point": 746, "data_": [747, 749], "memoriz": 747, "brace_initialization_suit": 748, "explicit_ctor_cal": 748, "initlist_ctor_cal": 748, "explicit_ctor": 748, "initlist_ctor": 748, "disabigu": 748, "nightmar": [748, 751, 1080], "size_": 749, "constexpr_suit": 750, "basic_const_is_constexpr": 750, "constexpr_function_request": 750, "constexpr_function_not_request": 750, "constexpr_recursive_funct": 750, "6765": 750, "constexpr_ctor": 750, "schurr": 750, "olsen": [751, 800], "nicolai": [751, 793, 796], "josutti": [751, 793, 796], "smartptr": [752, 783, 801, 802, 839, 840], "cluster_cxx11_new_language_features_move_pf": [752, 783, 799, 808, 816, 837, 839, 840], "cluster_cxx11_smart_point": [752, 783, 799, 808, 816, 837, 839, 840], "cxx11_perfect_forward": [752, 783, 839, 840], "cxx11_new_language_features_move_pf_overview": [752, 783, 799, 808, 816, 837, 839, 840], "cxx11_new_language_features_miscellan": [752, 783, 799, 808, 816, 837, 839, 840], "cxx11_new_language_features_move_pf_afterword": [752, 783, 839, 840], "cxx11_new_language_features_move_pf_livehack_using_string_mov": [752, 783, 839, 840], "cxx11_smart_pointers_unique_ptr": [752, 783, 799, 808, 816, 837, 839, 840], "cxx11_new_language_features_move_pf_livehack_string_mov": [752, 783, 839, 840], "cxx11_smart_pointers_introduct": [752, 783, 799, 808, 816, 837, 839, 840], "_p": [753, 801], "handwritten_suit": [753, 801], "explicit_mov": [753, 801], "assert_double_eq": [753, 801, 802], "create_constant_sensor": [753, 803], "prove": [753, 927], "return_by_copi": 753, "another_sensor": 753, "assigne": 753, "dubiou": 753, "bugfre": 754, "string_move_suit": 754, "make_a_string_from": 754, "ret_": 754, "move_return": 754, "move_assign": 754, "assig": 754, "person_h": 755, "person_suit": 755, "contructor": 755, "outliv": [756, 1082], "rvr": 756, "ado": [758, 1031, 1197], "mytyp": 758, "spellabl": 758, "0x7ffcd604846c": 758, "0x7ffcd6048468": 758, "iref": 758, "0x7ffffefe2b54": 758, "0x7ffffefe2b50": 758, "0x7ffc59ebd7bc": 758, "ciref": 758, "0x7ffc23e46284": 758, "0x7ffe4a148064": 758, "0x7ffc528e013c": 758, "cluster_cxx11_new_language_features_concept": [759, 783, 839, 840], "cxx11_new_language_features_concepts_link": [759, 783, 839, 840], "cxx11_new_language_features_concepts_intro": [759, 783, 839, 840], "cxx11_new_language_features_concepts_writing_concept": [759, 783, 839, 840], "conceptless": 760, "4ul": [760, 761], "4l": [760, 761], "satisfact": 760, "is_integral_v": 760, "_tp": [760, 793, 803], "hendrik": 764, "niemey": 764, "hypotenus": [765, 766, 767, 768, 769], "sumsq": [765, 766, 767, 768, 769], "point2d": [765, 767, 768, 769], "dozen": 765, "ruin": 765, "5l": 765, "same_a": 765, "commone_reference_with": 765, "common_reference_with": [765, 769], "has_siz": [768, 769], "index_returns_doubl": 769, "cluster_cxx11_new_language_features_coroutin": [770, 783, 839, 840], "cxx11_new_language_features_coroutines_intro": [770, 783, 839, 840], "stackless": 771, "asio": 771, "co_return": [771, 775, 776, 777, 778, 779], "hello_inst": [771, 775, 776, 777, 778, 779], "promise_typ": [771, 773, 774, 776, 777, 778, 779], "get_return_object": [771, 773, 774, 776, 777, 778, 779], "suspend_alwai": [771, 773, 774, 776, 777, 778, 779], "initial_suspend": [771, 773, 774, 776, 777, 778, 779], "final_suspend": [771, 773, 774, 776, 777, 778, 779], "return_void": [771, 774, 776, 777, 778, 779], "unhandled_except": [771, 773, 774, 776, 777, 778, 779], "suspend_nev": [771, 773, 774, 778], "coroutine_handl": [771, 773, 774, 777, 778, 779], "from_promis": [771, 773, 774, 777, 778, 779], "_coro": [771, 773], "yield_valu": [771, 773, 774, 777, 778, 779], "sentinel": [771, 774, 778, 779, 793], "_promis": [771, 774, 777, 778, 779], "deciph": 771, "diagrammat": 771, "wei": 771, "co_yield": [772, 773, 774, 775, 777, 778, 779], "_elem": 773, "ed": [774, 777, 778, 779, 977, 1014], "lackingdefaultconstructor": 780, "ldc": 780, "hasdefaultconstructor": 780, "hmpf": 780, "hdc": 780, "ownsmemori": 781, "om_copi": 781, "incontin": 782, "leaf": [782, 967], "method1": 782, "method2": 782, "cluster_cxx11_new_language_features_lambda": [783, 784, 839, 840], "cluster_cxx11_new_language_features_rang": [783, 794, 839, 840], "cxx11_new_language_features_delet": [783, 839, 840], "cxx11_new_language_features_structured_bind": [783, 839, 840], "cxx11_new_language_features_constexpr": [783, 839, 840], "cxx11_new_language_features_overrid": [783, 839, 840], "cxx11_new_language_features_livehack_smartptr_mov": [783, 839, 840], "cxx11_smart_pointers_introduction_livehack": [783, 799, 839, 840], "cxx11_new_language_features_range_based_for_map": [783, 839, 840], "cxx11_new_language_features_range_based_for": [783, 837, 839, 840], "cxx11_new_language_features_fin": [783, 839, 840], "cxx11_new_language_features_default": [783, 839, 840], "cxx11_new_language_features_delegating_ctor": [783, 839, 840], "cxx11_new_language_features_modul": [783, 839, 840], "cxx11_new_language_features_lambda_lambda_is_functor": [783, 784, 839, 840], "cxx11_new_language_features_lambda_lambda_is_functor_pitfal": [783, 784, 839, 840], "cxx11_new_language_features_lambda_lambda_captur": [783, 784, 839, 840], "cxx11_new_language_features_lambda_lambda": [783, 784, 839, 840], "cxx11_new_language_features_ranges_link": [783, 794, 839, 840], "cxx11_new_language_features_ranges_good_bad": [783, 794, 839, 840], "cxx11_new_language_features_ranges_intro": [783, 794, 839, 840], "elsewher": [785, 887, 1089], "lamda": 785, "print_messag": [785, 787, 788], "constantli": [786, 904, 1047], "mere": 786, "catur": 786, "akin": 786, "lambda_capture_suit": 786, "explicit_by_copi": 786, "lambda_capure_suit": 786, "explicit_by_refer": 786, "dubio": 786, "explicit_mix": 786, "initialized_captur": 786, "all_by_refer": 786, "all_by_copi": 786, "all_by_copy_except": 786, "this_captur": 786, "_i": [786, 806], "add_to_yourself_and_guarantee_programmers_job_secur": 786, "print_message_func": [787, 788], "_messag": [787, 788], "piti": 788, "mpp": 789, "precompil": [789, 887, 1062], "speedup": 789, "rei": 789, "bori": 789, "kolpackov": 789, "abandon": 789, "inde": 791, "range_based_for_suit": 792, "map_pre_11": 792, "map_bas": 792, "map_basic_const_auto_refer": 792, "ific": [792, 797], "map_unpack_copi": 792, "map_unpack_refer": 792, "map_unpack_const_refer": 792, "min_el": 793, "forward_rang": [793, 795], "drop_view": 793, "filter_view": 793, "ref_view": 793, "ranges_util": 793, "view_interfac": 793, "_deriv": 793, "sized_sentinel_for": 793, "decltyp": 793, "__cust": 793, "declval": 793, "__cust_access": 793, "__begin": 793, "_s_size": 793, "_m_deriv": 793, "forward_iter": 793, "coll": 793, "2nd": [793, 1230], "__cxx11": [793, 805, 838], "_vp": 793, "__simple_view": 793, "random_access_rang": [793, 795], "sized_rang": 793, "comitte": [793, 796], "lazili": 795, "first_two_drop": 795, "first_two_dropped_next_two_taken": 795, "oldstyl": 795, "inspir": 795, "refin": 795, "input_rang": 795, "bidirectional_rang": 795, "backward": [795, 862, 948, 980, 985, 1112, 1217], "contiguous_rang": 795, "tristan": 796, "brindl": 796, "cppnorth": 796, "l0bhzp6hmdm": 796, "nico": 796, "accu": 796, "rust": [796, 1062], "parrai": 797, "decompos": 797, "structured_binding_suit": 797, "struct_copi": 797, "struct_refer": 797, "struct_const_refer": 797, "tuple_copi": 797, "make_tupl": 797, "tuple_refer": 797, "tuple_const_refer": 797, "array_copi": 797, "array_refer": 797, "array_const_refer": 797, "suspici": 797, "designwis": 798, "uptr": 798, "cxx11_smart_pointers_shared_ptr": [799, 808, 816, 837, 839, 840], "cxx11_smart_pointers_closing_word": [799, 808, 816, 839, 840], "cxx11_smart_pointers_weak_ptr": [799, 837, 839, 840], "myclass": [800, 802], "unwind": 800, "yoky6hzlkx": 800, "steal": [801, 1048], "cxx11_unique_ptr_sensors_h": 801, "_temp": 801, "basic_const": 801, "raw_": 801, "raw_s_ref": 801, "copy_ctor_bad": 801, "assignment_operator_bad": 801, "gtest_filt": [801, 802, 1228], "reveal": [801, 1082], "vtabl": 801, "autoptr": 801, "copy_ctor_good_autoptr_styl": 801, "unexpectedli": 801, "assignment_operator_good_autoptr_styl": 801, "destiat": 801, "excus": 802, "shared_ptr_suit": 802, "rs1": [802, 803], "rs2": [802, 803], "rand1": [802, 803, 804], "rand2": [802, 803, 804], "cann": 802, "basic_make_shar": 802, "set_refer": 802, "_ref": 802, "cyclic_refer": 802, "303549": 802, "unique_ptr_suit": 803, "threw": 803, "ownership_error": 803, "cxx11": [803, 838], "unique_ptr_suite_ownership_error_test": 803, "testbodi": 803, "_dp": 803, "default_delet": 803, "verbose_ctor": 803, "make_unique_auto": 803, "tranfer": 803, "create_random_sensor": 803, "implicit_ownership_transf": 803, "holdsasensor": 803, "taking_ownership_in_own_cod": 803, "sompil": 803, "raw1": 803, "tie": 804, "unti": 804, "weak_ptr_suit": 804, "borrowed_sensor": 804, "another_refer": 804, "sensor_ref": 804, "measurement_thread": 804, "rvref": 805, "lo_funct": 805, "adventur": 805, "grimm": 805, "jaud": 805, "factset": 805, "570f242261f8": 805, "origin_dist": 806, "criteria": [806, 932, 1217], "predic": 806, "void_funct": 806, "bind_suit": 806, "plain_void_funct": 806, "one_parameter_funct": 806, "plain_one_parameter_funct": 806, "minus_hardcod": 806, "_1_minus_2": 806, "minus_swap_paramet": 806, "second_minus_first": 806, "_2": [806, 807], "minus_hardcode_first_paramet": 806, "_42_minus_param": 806, "funcfunc": 806, "tradeoff": [806, 892], "oneimplement": 807, "anotherimplement": 807, "do_much_work": 807, "c_using_on": 807, "c_using_anoth": 807, "explanatori": 807, "trampolin": 807, "rtti": 807, "pod": 807, "metaphys": 807, "ostreamlogg": 807, "databaselogg": 807, "logfunc_t": 807, "funcptrlogg": 807, "somebusinessclasswithneedforlog": 807, "successfulli": [807, 907, 923, 1216, 1223], "do_stupid_log": 807, "ostream_logg": 807, "database_logg": 807, "funcptr_logg": 807, "busy_logging_to_ostream": 807, "busy_logging_to_databas": 807, "busy_logging_to_funcptr": 807, "foo_func": 807, "explos": 807, "cluster_cxx11_functions_funct": [808, 816, 839, 840], "cxx11_functions_functions_bind": [808, 816, 839, 840], "cxx11_functions_functions_funct": [808, 816, 839, 840], "msdn": 809, "devil": 809, "singlethread": 809, "god": 809, "paralleliz": 810, "cancel": [810, 1038], "interlockedincr": 812, "mutual": [813, 1097], "try_lock": 813, "try_lock_for": 813, "try_lock_until": 813, "time_point": [813, 818], "do_something_errorpron": 814, "do_more_of_it": 814, "wake": [815, 869, 879, 1011, 1035, 1044, 1050], "waiter": [815, 879, 904, 1035], "stop_wait": 815, "wait_for": [815, 817], "wait_until": [815, 817], "notify_on": 815, "notify_al": 815, "thunder": 815, "herd": 815, "condvar": 815, "threadsafequeu": 815, "maxelem": 815, "_maxelem": 815, "dur": [815, 817], "scoped_lock": [815, 817], "_lock": [815, 817], "pop_front": 815, "2m": [815, 817, 985], "1m": [815, 912, 985], "consumer1": 815, "consumer2": 815, "pthread_cond_init": [815, 1035], "_not_empti": 815, "_not_ful": 815, "pthread_cond_wait": [815, 1035], "pthread_cond_sign": [815, 1035], "pthread_cond_t": [815, 1035], "unique_lock": 815, "cluster_cxx11_multithread": [816, 839, 840], "cluster_linux_sysprog_blocking_io": [816, 839, 840, 917, 920, 921, 922, 984, 1013, 1025, 1039, 1045, 1047], "cluster_linux_sysprog_posix_thread": [816, 839, 840, 984, 1025, 1039, 1045], "cluster_linux_sysprog_schedul": [816, 839, 840, 984, 1025, 1039, 1045, 1047], "cxx11_multithreading_chrono": [816, 839, 840], "cxx11_multithreading_promise_futur": [816, 839, 840], "cxx11_multithreading_thread": [816, 839, 840], "cxx11_multithreading_mutex": [816, 839, 840], "cxx11_multithreading_race_condit": [816, 839, 840], "linux_sysprog_posix_threads_mutex": [816, 839, 840, 984, 1025, 1039, 1045], "cxx11_multithreading_scoped_lock": [816, 839, 840], "linux_sysprog_posix_threads_exercise_pthcreate_racecondit": [816, 839, 840, 984, 1025, 1039, 1045], "cxx11_multithreading_atom": [816, 839, 840], "cxx11_multithreading_introduct": [816, 839, 840], "cxx11_multithreading_condition_vari": [816, 839, 840], "linux_sysprog_posix_threads_condition_vari": [816, 839, 840, 984, 1025, 1039], "linux_sysprog_posix_threads_lifecycl": [816, 839, 840, 984, 1025, 1039, 1045], "linux_sysprog_blocking_io_blocking_io": [816, 839, 840, 917, 920, 921, 922, 984, 1013, 1025, 1039, 1045, 1047], "linux_sysprog_posix_threads_exercise_mutex": [816, 839, 840, 984, 1025, 1039], "linux_sysprog_posix_threads_bas": [816, 839, 840, 984, 1025, 1039, 1045], "linux_sysprog_scheduling_bas": [816, 839, 840, 984, 1025, 1039, 1045, 1047], "get_futur": 817, "set_except": 817, "exception_ptr": 817, "shared_futur": 817, "uncoordin": 817, "ten_million_years_": 817, "answer_poll_interval_m": 817, "answer_valid": 817, "chew_answ": 817, "timespec": [817, 1035, 1046, 1056], "reaction": [817, 1003, 1086], "answer_computation_tim": 817, "answer_poll_interv": 817, "ten_million_year": 817, "lockguard": 817, "_answer_valid": 817, "_answer": 817, "_data": [817, 1077], "binary_semaphor": 817, "__cplusplu": 817, "202001l": 817, "_notifi": 817, "answer_promis": 817, "answer_futur": 817, "make_exception_ptr": 817, "epoch": [818, 1055], "time_t": 818, "notion": 818, "system_clock": 818, "monoton": [818, 895, 897], "ntp": 818, "steady_clock": 818, "timepoint": 818, "steadili": 818, "high_resolution_clock": 818, "brand": 818, "spent_milli": 818, "duration_cast": 818, "any_suit": 819, "typeid": 819, "a2": 819, "bad_cast": 819, "bad_any_cast": 819, "pointer_cast": 819, "reference_cast": 819, "charp": [819, 820], "char_ptr_car": 819, "cmp": 819, "variant_suit": 820, "holds_altern": 820, "converting_ctor": 820, "bad_access": 820, "int_seen": 820, "float_seen": 820, "string_charp": 820, "no_default_ctor": 820, "cluster_cxx11_miscellan": [821, 825, 839, 840], "cxx11_miscellaneous_vari": [821, 825, 839, 840], "cxx11_miscellaneous_ani": [821, 839, 840], "timur": 822, "doumler": 822, "aligned_alloc": 823, "alignof": 823, "pmr": 823, "heis": [823, 827], "_temperatur": [824, 826, 828, 830], "klau": 825, "iglberg": 825, "steve": 825, "bush": 825, "bielak": 825, "gopel": 825, "cluster_cxx11_embedded_problem": [825, 839, 840], "cxx11_embedded_problems_related_no_virtu": [825, 839, 840], "cxx11_embedded_problems_classic_virtu": [825, 839, 840], "cxx11_embedded_problems_variant_automatic_visit": [825, 839, 840], "cxx11_embedded_problems_variant_manual_visit": [825, 839, 840], "cxx11_embedded_problems_variant_manual_if": [825, 839, 840], "cxx11_embedded_problems_unrel": [825, 839, 840], "static_cast": [826, 838], "derivedtyp": 826, "sensorptr": 828, "get_temperature_visitor": [829, 831], "bagcopi": 834, "find_by_int": [834, 835, 836], "remove_by_int": [834, 835, 836], "nremov": [834, 835, 836], "bagshar": 835, "weakref": 835, "sharedref": 835, "baguniqu": 836, "constbag": 836, "cluster_cxx11_exercis": [837, 839, 840], "cxx11_exercises_bag_copi": [837, 839, 840], "cxx11_exercises_bag_uniqu": [837, 839, 840], "cxx11_exercises_bag_shar": [837, 839, 840], "withing": 838, "filesystem_suit": 838, "cd_to_tmpdir_fixtur": 838, "path_compose_compar": 838, "path_compose_compare_2": 838, "is_rel": 838, "path_abs_rel": 838, "abspath": 838, "relpath": 838, "remove_filenam": 838, "replace_filenam": 838, "replace_extens": 838, "path_component_access": 838, "dir_part": 838, "path_iter": 838, "current_directori": 838, "cwd_chdir": 838, "current_path": 838, "create_directory_error": 838, "filesystem_error": 838, "char_trait": 838, "char_typ": 838, "_chart": 838, "_trait": 838, "_alloc": 838, "_s_copi": 838, "size_typ": 838, "_m_replac": 838, "tcc": 838, "2171": 838, "canonicalizeforstdlibvers": 838, "__builtin_memcpi": 838, "9223372036854775810": 838, "9223372036854775813": 838, "__s1": 838, "__s2": 838, "create_directory_singl": 838, "is_regular_fil": 838, "create_directory_multipl": 838, "is_block_fil": 838, "is_character_fil": 838, "is_empti": 838, "is_fifo": 838, "is_oth": 838, "is_socket": 838, "is_symlink": 838, "greatest": 838, "2691": [838, 944], "nov": [838, 877, 944, 970, 992, 1077, 1113, 1143], "inod": [838, 846, 853], "919153": 838, "0644": [838, 933, 947, 1062], "system_u": 838, "object_r": 838, "passwd_file_t": 838, "s0": 838, "111282886": 838, "0100": 838, "737858445": 838, "743858359": 838, "file_s": 838, "hard_link_count": 838, "last_write_tim": 838, "ext4": [838, 887], "btrf": 838, "ntf": 838, "directory_iter": 838, "dirit": 838, "recursive_directory_iter": 838, "cxx11_filesystem": [839, 840], "cluster_linux_sysprog_intro_hw": [840, 984, 1025, 1027], "cluster_linux_sysprog_process": [840, 984, 1025], "cluster_linux_ssh": [840, 984, 996, 997, 998, 999, 1000, 1073, 1074], "cluster_linux_ssh_exercis": [840, 984, 996, 997, 998, 999, 1000], "cluster_linux_basics_archiving_compress": [840, 910, 917, 984, 1073, 1074], "cluster_linux_basics_shell_exercis": [840, 914, 915, 916, 917, 952, 953, 954, 955, 956, 957, 958, 959, 960, 962, 963, 964, 965, 966, 968, 984], "cluster_linux_basics_shell_exercises_cp_mv_mkdir_rm": [840, 914, 915, 916, 917, 952, 953, 954, 955, 956, 957, 958, 959, 960, 962, 968, 984], "cluster_linux_basics_shell_exercises_l": [840, 917, 962, 963, 964, 965, 966, 968, 984], "cluster_linux_basics_permissions_exercis": [840, 917, 934, 937, 938, 939, 940, 941, 942, 943, 984], "cluster_linux_basics_io_redir_pip": [840, 917, 929, 984], "cluster_linux_basics_text_tool": [840, 917, 978, 984], "cluster_linux_basics_exercis": [840, 914, 915, 916, 917, 984], "cluster_linux_hardwar": [840, 984, 990, 991], "cluster_linux_hardware_can": [840, 984, 990, 991], "cluster_linux_kernel": [840, 844, 847, 849, 852, 854, 857, 859, 861, 863, 864, 866, 868, 870, 872, 874, 876, 878, 880, 882, 884, 886, 888, 891, 893, 896, 898, 902, 905, 908, 984], "cluster_linux_toolchain_cross": [840, 984, 1066, 1067, 1070, 1072, 1073, 1074], "cluster_linux_toolchain_exercis": [840, 984, 1067, 1068, 1069, 1070, 1071, 1072, 1073], "cluster_linux_toolchain_raspi": [840, 984, 1067, 1070, 1073, 1074], "cluster_unittest": [840, 1226], "linux_sysprog_ev": [840, 984, 1025], "linux_sysprog_sign": [840, 984, 1025], "linux_sysprog_ipc": [840, 984, 1025], "linux_sysprog_posix_threads_last_warn": [840, 984, 1025, 1039], "linux_sysprog_posix_threads_miscellan": [840, 984, 1025, 1039], "linux_sysprog_posix_threads_exercise_condition_vari": [840, 984, 1025, 1039], "linux_sysprog_posix_threads_mutex_trylock": [840, 984, 1025, 1039], "trylock": [840, 984, 1025, 1033, 1039], "islock": [840, 984, 1025, 1033, 1039], "linux_sysprog_intro_hw_get": [840, 984, 1025, 1027], "linux_sysprog_intro_hw_sysfs_gpio": [840, 984, 1025, 1027], "linux_sysprog_intro_hw_watch": [840, 984, 1025, 1027], "linux_sysprog_scheduling_realtime_api": [840, 984, 1025, 1045], "linux_sysprog_scheduling_realtim": [840, 984, 1025, 1045, 1047], "linux_sysprog_scheduling_wakeup_lat": [840, 984, 1025, 1045, 1047], "linux_sysprog_scheduling_processes_and_thread": [840, 984, 1025, 1045, 1047], "linux_sysprog_scheduling_exam_quest": [840, 984, 1025, 1045, 1047], "linux_sysprog_process_tre": [840, 984, 1025], "linux_sysprog_process_commandlin": [840, 984, 1025], "linux_basics_intro_environ": [840, 917, 922, 968, 984, 1025, 1073, 1074], "linux_basics_intro_process_tre": [840, 917, 922, 934, 937, 938, 939, 940, 941, 942, 943, 984, 996, 997, 998, 999, 1000, 1025, 1073, 1074], "linux_sysprog_blocking_io_blocking_io_tim": [840, 984, 1013, 1025], "linux_sysprog_blocking_io_blocking_io_fil": [840, 917, 920, 921, 922, 984, 1013, 1025], "linux_sysprog_blocking_io_blocking_io_network": [840, 984, 1013, 1025], "linux_sysprog_fileio_example_o_excl": [840, 984, 1023, 1025, 1042], "linux_sysprog_fileio_example_o_creat": [840, 984, 1023, 1025, 1042], "linux_sysprog_fileio_example_o_wronli": [840, 984, 1023, 1025, 1042], "linux_sysprog_fileio_basics_exercise_copi": [840, 984, 1015, 1023, 1025, 1042], "linux_sysprog_fileio_dupl": [840, 984, 1023, 1025, 1042], "linux_sysprog_fileio_misc": [840, 984, 1023, 1025, 1042], "linux_sysprog_fileio_example_o_rdonli": [840, 984, 1023, 1025, 1042], "linux_sysprog_fileio_basics_exercise_hol": [840, 984, 1023, 1025, 1042], "linux_sysprog_fileio_fileio_group": [840, 984, 1023, 1025, 1042], "linux_ssh_key_pair": [840, 984, 996, 997, 998, 999, 1000], "linux_ssh_bas": [840, 984, 996, 997, 998, 999, 1000, 1073, 1074], "linux_basics_intro_login": [840, 917, 922, 934, 937, 938, 939, 940, 941, 942, 943, 984, 996, 997, 998, 999, 1000, 1073, 1074], "linux_ssh_scp": [840, 984, 996, 997, 998, 1000, 1073, 1074], "linux_ssh_link": [840, 984, 1000], "linux_ssh_sshf": [840, 984, 1000], "linux_ssh_portforward": [840, 984, 1000], "linux_ssh_exercises_pubkei": [840, 984, 996, 997, 998, 999, 1000], "linux_ssh_exercises_copy_tre": [840, 984, 997, 998, 1000], "linux_ssh_exercises_copy_fil": [840, 984, 996, 997, 998, 1000], "linux_basics_intro_demo_everything_is_a_fil": [840, 917, 920, 921, 922, 984], "linux_basics_intro_fh_moodle_quiz": [840, 917, 920, 921, 922, 984], "linux_basics_intro_wsl": [840, 917, 922, 984], "linux_basics_archiving_compression_tar": [840, 910, 917, 984, 1073, 1074], "linux_basics_archiving_compression_gzip": [840, 910, 917, 984, 1073, 1074], "linux_basics_archiving_compression_exercis": [840, 910, 917, 984], "linux_basics_archiving_compression_overview": [840, 910, 917, 984, 1073, 1074], "linux_basics_shell_cp": [840, 914, 915, 916, 917, 952, 953, 955, 956, 959, 960, 962, 968, 984], "linux_basics_shell_link": [840, 917, 968, 984], "linux_basics_shell_configfil": [840, 917, 968, 984], "linux_basics_shell_mv": [840, 917, 968, 984], "linux_basics_shell_fh_moodle_quiz": [840, 917, 961, 968, 984], "linux_basics_shell_exercises_cp_mv_mkdir_rm_copy_tre": [840, 917, 952, 956, 959, 962, 968, 984], "linux_basics_shell_exercises_cp_mv_mkdir_rm_verify_hierarchi": [840, 917, 952, 956, 959, 960, 962, 968, 984], "linux_basics_shell_exercises_cp_mv_mkdir_rm_echo_create_fil": [840, 914, 915, 916, 917, 952, 953, 954, 955, 956, 959, 960, 962, 968, 984], "linux_basics_shell_exercises_cp_mv_mkdir_rm_mkdir_p_rm_r": [840, 914, 915, 916, 917, 952, 953, 954, 955, 956, 957, 959, 960, 962, 968, 984], "linux_basics_shell_exercises_cp_mv_mkdir_rm_echo_copy_fil": [840, 917, 952, 953, 956, 959, 960, 962, 968, 984], "linux_basics_shell_exercises_cp_mv_mkdir_rm_echo_move_fil": [840, 917, 952, 955, 956, 959, 960, 962, 968, 984], "linux_basics_shell_exercises_cp_mv_mkdir_rm_rm_tre": [840, 917, 956, 959, 962, 968, 984], "linux_basics_shell_exercises_cp_mv_mkdir_rm_rm_rf": [840, 917, 956, 958, 962, 968, 984], "linux_basics_shell_exercises_ls_home_permiss": [840, 917, 962, 965, 966, 968, 984], "linux_basics_shell_exercises_ls_dev_typ": [840, 917, 962, 963, 965, 968, 984], "linux_basics_shell_exercises_ls_etc_passwd_s": [840, 917, 962, 964, 965, 968, 984], "linux_basics_permissions_umask": [840, 917, 943, 984], "linux_basics_permissions_fh_moodle_quiz": [840, 917, 935, 943, 984], "linux_basics_permissions_fh_moodle_quiz_nocheat": [840, 917, 936, 943, 984], "linux_basics_permissions_setuid_livedemo": [840, 917, 943, 984], "linux_basics_permissions_setuid": [840, 917, 943, 984], "linux_basics_permissions_sticki": [840, 917, 943, 984], "linux_basics_permissions_exercises_private_directory_quest": [840, 917, 937, 939, 943, 984], "linux_basics_permissions_exercises_private_directori": [840, 917, 937, 938, 939, 943, 984], "linux_basics_permissions_exercises_credenti": [840, 917, 934, 937, 938, 939, 940, 941, 942, 943, 984], "linux_basics_permissions_exercises_shared_fil": [840, 917, 937, 942, 943, 984], "linux_basics_permissions_exercises_public_directori": [840, 917, 937, 940, 941, 943, 984], "linux_basics_permissions_exercises_public_directory_quest": [840, 917, 937, 941, 943, 984], "linux_basics_io_redir_pipes_pip": [840, 917, 929, 984], "linux_basics_io_redir_pipes_io_redir": [840, 917, 929, 984], "linux_basics_io_redir_pipes_io_redir_swap_stdout_stderr": [840, 917, 929, 984], "linux_basics_io_redir_pipes_exercis": [840, 917, 929, 984], "linux_basics_text_tools_cat": [840, 917, 978, 984], "linux_basics_text_tools_overview": [840, 917, 978, 984], "linux_basics_text_tools_less": [840, 917, 978, 984], "linux_basics_text_tools_head_tail": [840, 917, 978, 984], "linux_basics_text_tools_find": [840, 917, 978, 984], "linux_basics_text_tools_grep": [840, 917, 978, 984], "linux_basics_text_tools_cut": [840, 917, 978, 984], "linux_basics_text_tools_exercis": [840, 917, 978, 984], "linux_basics_exercises_fh_ss2022_exam_01_g1": [840, 914, 916, 917, 984], "linux_basics_exercises_fh_ss2022_exam_01_g2": [840, 915, 916, 917, 984], "linux_hardware_w1": [840, 984, 991], "linux_hardware_i2c": [840, 984, 991], "linux_hardware_brushless_motor": [840, 984, 991], "brushless": [840, 984, 991], "linux_hardware_pwm": [840, 984, 991], "linux_hardware_can_interfac": [840, 984, 990, 991], "linux_hardware_can_program": [840, 984, 990, 991], "linux_hardware_can_hardwar": [840, 984, 990, 991], "linux_hardware_can_intro": [840, 984, 990, 991], "linux_kernel_raspi_kernel_build": [840, 864, 868, 888, 891, 896, 902, 905, 908, 984], "linux_kernel_pci": [840, 864, 884, 984], "linux_kernel_interrupt": [840, 864, 868, 870, 882, 884, 891, 896, 902, 905, 908, 984], "linux_kernel_iomemori": [840, 864, 872, 884, 984], "linux_kernel_dma": [840, 859, 864, 882, 884, 984], "linux_kernel_process_vs_atom": [840, 849, 854, 857, 859, 864, 868, 870, 874, 878, 880, 882, 884, 886, 891, 893, 896, 898, 902, 905, 908, 984], "linux_kernel_modules_hello_world": [840, 844, 847, 849, 852, 854, 857, 864, 866, 868, 872, 878, 884, 891, 896, 902, 905, 908, 984], "linux_kernel_kmalloc": [840, 849, 854, 857, 859, 864, 868, 878, 882, 884, 891, 896, 902, 905, 908, 984], "linux_kernel_mutex": [840, 864, 868, 878, 880, 891, 896, 902, 905, 908, 984], "linux_kernel_fedora_module_build": [840, 844, 847, 849, 852, 854, 857, 863, 864, 866, 868, 872, 878, 884, 891, 896, 902, 905, 908, 984], "linux_kernel_fedora_kernel_build": [840, 844, 847, 849, 852, 854, 857, 861, 863, 864, 866, 868, 872, 878, 884, 891, 896, 902, 905, 908, 984], "linux_kernel_spinlock": [840, 864, 891, 893, 896, 902, 905, 908, 984], "linux_kernel_timer_cod": [840, 864, 896, 902, 905, 908, 984], "linux_kernel_spinlock_cod": [840, 864, 891, 896, 902, 905, 908, 984], "linux_kernel_tim": [840, 864, 896, 898, 902, 905, 908, 984], "linux_kernel_interrupt_cod": [840, 864, 868, 891, 896, 902, 905, 908, 984], "linux_kernel_mutex_cod": [840, 864, 868, 878, 891, 896, 902, 905, 908, 984], "linux_kernel_cdev_refactor": [840, 854, 857, 864, 868, 878, 891, 896, 902, 905, 908, 984], "linux_kernel_cdev_first_function": [840, 849, 854, 857, 864, 868, 878, 891, 896, 902, 905, 908, 984], "linux_kernel_cdev_file_oper": [840, 847, 849, 854, 857, 864, 868, 878, 891, 896, 902, 905, 908, 984], "linux_kernel_list": [840, 849, 854, 857, 864, 868, 876, 878, 891, 896, 902, 905, 908, 984], "doubli": [840, 849, 853, 854, 857, 864, 868, 877, 878, 889, 891, 896, 902, 905, 908, 984], "linux_kernel_cdev_auto": [840, 844, 847, 849, 854, 857, 864, 868, 878, 891, 896, 902, 905, 908, 984], "linux_kernel_stub_sysprog_dup": [840, 847, 849, 854, 857, 864, 868, 878, 891, 896, 902, 905, 908, 984], "dup": [840, 846, 847, 849, 854, 857, 864, 868, 878, 891, 896, 902, 905, 908, 931, 984, 1017, 1056], "linux_kernel_cdev_manu": [840, 844, 847, 849, 852, 854, 857, 864, 868, 878, 891, 896, 902, 905, 908, 984], "linux_kernel_workqueu": [840, 864, 902, 905, 908, 984], "linux_kernel_multiple_devic": [840, 854, 864, 868, 878, 891, 896, 902, 905, 908, 984], "linux_kernel_netdev": [840, 864, 882, 984], "linux_kernel_usermem": [840, 864, 902, 905, 984], "linux_kernel_waitqueu": [840, 864, 905, 984], "linux_toolchain_cmake_cross": [840, 984, 1073], "linux_toolchain_shared_librari": [840, 984, 1073], "linux_toolchain_cross_bas": [840, 984, 1066, 1067, 1070, 1072, 1073, 1074], "linux_toolchain_exercises_native_build": [840, 984, 1070, 1071, 1073], "linux_toolchain_exercises_fh_moodle_quiz": [840, 984, 1068, 1069, 1070, 1073], "linux_toolchain_exercises_cross_build": [840, 984, 1067, 1070, 1073], "linux_toolchain_raspi_toolchain_setup": [840, 984, 1067, 1070, 1073, 1074], "linux_toolchain_exercises_raspberry_toolchain": [840, 984, 1070, 1072, 1073], "linux_toolchain_raspi_detail": [840, 984, 1073, 1074], "linux_toolchain_raspi_docker_fedora_wsl": [840, 984, 1073, 1074], "linux_toolchain_raspi_linaro_pi": [840, 984, 1073, 1074], "defunct": [840, 984, 1073, 1074], "unittest_gtest_cmak": [840, 1226], "interconnect": 841, "device_cr": [842, 843, 846], "cdev_init": [842, 850, 851], "cdev_add": [842, 850, 851], "unhappi": 842, "device_destroi": 842, "my_class": 842, "my_driv": [842, 845, 855, 856, 867, 877, 883, 889, 895, 906], "mknod": [842, 850, 851], "character devic": [843, 846, 851, 1246], "relatim": 843, "register_chrdev_region": [843, 850, 851], "alloc_chrdev_region": [843, 851], "htmldoc": 843, "chrdev": 843, "dev_t": [843, 851], "baseminor": 843, "highlight": 843, "bug_on": 843, "module_licens": [843, 865], "openat": [845, 1010, 1062], "at_fdcwd": [845, 1010, 1062], "0x7f3d11330000": 845, "einval": [845, 850, 865, 903, 1062], "enotti": 845, "file_oper": [846, 850, 851, 889], "citizenship": 846, "__user": [846, 901], "loff_t": 846, "unlocked_ioctl": 846, "my_op": 846, "this_modul": 846, "my_open": 846, "my_read": 846, "my_writ": 846, "my_ioctl": [846, 877], "mode_t": [846, 1014, 1018, 1056], "filp": [846, 889, 903], "vf": 846, "swiss": [846, 1014, 1241], "armi": [846, 1014, 1241], "my_ioctl_request": [846, 848], "my_request_such": 846, "my_request_such_and_such": 846, "laden": [846, 1255], "endod": 846, "_iow": 846, "_ior": 846, "_ioc": 846, "_ioc_non": 846, "_ioc_read": 846, "_ioc_typecheck": 846, "_ioc_writ": 846, "_iowr": 846, "my_ev": [848, 855, 856, 895, 900], "my_event_typ": 848, "my_event_ioctl": 848, "jiffi": [848, 889, 895], "my_event_list": [848, 855, 856, 877], "list_head": [848, 875, 877, 900], "num_ev": 848, "my_event_list_init": 848, "my_event_list_destroi": 848, "my_event_list_add": [848, 877, 890, 895, 906], "my_ioctl_add_ev": 848, "printk": [848, 865, 867, 906], "unregister_chrdev_region": [850, 851], "caveat": [850, 889, 993], "register_chrdev": 850, "unregister_chrdev": 850, "kern_err": 850, "cdev_del": [850, 851], "my_driver_henkel": 850, "kmem": 851, "opaqu": 851, "majmin": 851, "mkdev": 851, "drivernam": 851, "my_fop": 851, "my_cdev": 851, "devicefil": 851, "ndevic": 853, "module_param": 853, "my_devic": [853, 855, 856, 867, 883, 895], "private_data": [853, 883, 889], "kbuild": [855, 856], "torn": [855, 1233], "ccflag": [855, 856], "container_of": [856, 907], "file3": 856, "distinct": [856, 924, 1008, 1136], "my_device_init": 856, "my_device_destroi": [856, 895], "everyt": 858, "vmalloc": 858, "ioremap": [858, 871], "iommu": 858, "pysic": 858, "dma_addr_t": 858, "alloc_pag": 858, "gfp_mask": 858, "get_free_pag": 858, "__get_free_pag": 858, "2order": 858, "__get_dma_pag": 858, "zone": 858, "__free_pag": 858, "free_pag": 858, "dma_handl": 858, "cpu_addr": [858, 883], "dma_alloc_coher": 858, "gfp": [858, 873, 899], "dma_free_coher": 858, "pci_dev": [858, 883], "gfp_kernel": [858, 873, 890], "gfp_atom": [858, 873], "dma_bidirect": 858, "dma_to_devic": 858, "dma_from_devic": 858, "dma_map_singl": 858, "dma_mapping_error": 858, "dma_unmap_singl": 858, "dma_map_pag": 858, "dma_unmap_pag": 858, "dma_address": 858, "sglist": 858, "sg_run": 858, "dma_map_sg": 858, "for_each_sg": 858, "hw_address": 858, "sg_dma_address": 858, "hw_len": 858, "sg_dma_len": 858, "dma_unmap_sg": 858, "nent": 858, "unmap": [858, 883], "recreat": [858, 960, 1079], "dma_sync_single_for_cpu": 858, "dma_sync_sg_for_cpu": 858, "mel": [858, 873], "gorman": [858, 873], "incredibli": 858, "transcript": [860, 887, 1187], "building_a_custom_kernel": 860, "fc33": [860, 865], "extravers": [860, 888], "cleanli": 860, "uncommit": 860, "j6": 860, "fedpkg": 860, "pesign": 860, "grubbi": 860, "33rd": 860, "f33": 860, "builddep": 860, "libexec": [860, 1065, 1075], "symver": [862, 865], "modpost": [862, 865], "module_src": 862, "kernel_build": 862, "install_mod_path": [862, 887], "modules_instal": [862, 887, 992], "fedora_kernel_build": 864, "fedora_module_build": 864, "modules_hello_world": 864, "cdev_manu": 864, "process_vs_atom": 864, "stub_sysprog_dup": 864, "cdev_auto": 864, "cdev_file_oper": 864, "cdev_first_function": 864, "cdev_refactor": 864, "multiple_devic": 864, "mutex_cod": 864, "raspi_kernel_build": 864, "interrupt_cod": 864, "spinlock_cod": 864, "timer_cod": 864, "usermem": 864, "iomemori": 864, "waitqueu": [864, 1246], "netdev": 864, "ldd3": [864, 875], "reilli": [864, 977], "probe": [865, 992, 993, 994], "hello_init": 865, "kern_debug": 865, "hello_exit": 865, "module_init": 865, "module_exit": 865, "exot": 865, "lsmod": [865, 992, 993, 994], "insmod": 865, "rmmod": [865, 895], "dep": 865, "softdep": 865, "rebuilt": 865, "cross_compil": [867, 887, 888], "gpio_request": 867, "gpio_fre": 867, "gpio_direction_input": 867, "gpio_direction_output": 867, "gpio_to_irq": 867, "my_device_activate_gpio": 867, "_destroi": 867, "3f200000": 867, "pinctrl": 867, "bcm2835": [867, 989], "request_irq": [867, 869, 883], "free_irq": [867, 869, 883], "priorit": [869, 885, 986, 1044, 1056], "preempt_rt": [869, 879, 1236], "mainlin": [869, 887, 1048, 1236], "irqreturn_t": [869, 883], "irq_handl": [869, 883], "irq": [869, 883, 885, 889, 1046], "opqu": 869, "irq_non": 869, "irq_wake_thread": 869, "irq_handler_t": 869, "irqf_shar": [869, 883], "irqf_trigger_ris": 869, "irqf_trigger_fal": 869, "irqf_trigger_high": 869, "irqf_trigger_low": 869, "iomem": 871, "ioport": 871, "request_mem_region": 871, "0x20200000": 871, "release_mem_region": 871, "asm": [871, 1078], "iounmap": 871, "ioread8": 871, "ioread16": 871, "ioread32": 871, "iowrite8": 871, "u8": 871, "iowrite16": 871, "u16": 871, "iowrite32": 871, "u32": 871, "kmalloc kfre": 873, "dynamic memori": 873, "slab": 873, "gfp_t": [873, 890, 906], "kzalloc": 873, "kfree": 873, "scarc": 873, "discourag": 873, "stolen": [875, 985], "init_list_head": 875, "some_data": 875, "list_add": 875, "list_add_tail": 875, "new_payload": 875, "existing_payload": 875, "prepend": [875, 887, 919, 1124], "list_for_each": 875, "list_entri": 875, "cursor": [875, 948, 1197], "run_payload": 875, "list_empti": 875, "list_first_entri": 875, "list_del": [875, 877], "a_payload": 875, "opfer": 877, "corrupt": 877, "ffff91285ae68f00": 877, "ffff9128406cec00": 877, "list_debug": 877, "0x70": [877, 993], "0xb0": 877, "0xdd": 877, "ksys_ioctl": 877, "0x82": 877, "0xc0": 877, "__x64_sys_ioctl": 877, "do_syscall_64": 877, "0x4d": 877, "entry_syscall_64_after_hwfram": 877, "0x44": 877, "0xa9": 877, "unprotect": [877, 889, 1107], "nevent": [877, 900], "my_device_list": 877, "preemptibl": [879, 1048], "preemption": [879, 885, 892, 993, 1044, 1047, 1048], "holder": [879, 1105], "mutex_init": 879, "mutex_destroi": 879, "mutex_lock": 879, "mutex_lock_interrupt": 879, "eintr": [879, 1006, 1059, 1060], "mutex_lock_interruptible_nest": 879, "mutex_trylock": 879, "eagain": [879, 889, 903], "mutex_unlock": 879, "torvald": [165, 879, 887], "trickl": 879, "rtmutex": 879, "rt_mutex": 879, "net_devic": 881, "alloc_netdev": 881, "sizeof_priv": 881, "netdev_priv": 881, "funcion": 881, "ethernet": 881, "etherdevic": 881, "alloc_etherdev": 881, "free_netdev": 881, "register_netdev": 881, "unregister_netdev": 881, "devinc": 881, "hard_start_xmit": 881, "sk_buff": 881, "skb": 881, "transmiss": [881, 1011, 1184], "tx_timeout": 881, "quota": [881, 913], "stead": 881, "do_ioctl": 881, "ifreq": [881, 988], "ifr": [881, 988], "netif_start_queu": 881, "netif_stop_queu": 881, "netif_wake_queu": 881, "udevd": 883, "pci_device_id": 883, "my_id": 883, "pci_devic": 883, "0xdead": 883, "0xbeef": 883, "0xbeee": 883, "module_device_t": 883, "my_prob": 883, "my_remov": 883, "my_suspend": 883, "pm_message_t": 883, "my_resum": 883, "my_shutdown": 883, "pci_driv": 883, "id_tabl": 883, "my_init": 883, "pci_register_driv": 883, "my_exit": [883, 1094], "pci_unregister_driv": 883, "subsystem_vendor": 883, "subsystem_devic": 883, "u64": [883, 897], "dma_mask": 883, "device_count_resourc": 883, "pci_enable_devic": 883, "pdev": 883, "wizardri": 883, "pci_request_region": 883, "pci_set_mast": 883, "pci_clear_mast": 883, "pci_set_dma_mask": 883, "pci_set_drvdata": 883, "ioread": 883, "iowrit": 883, "pci_resource_len": 883, "bar_no": 883, "__iomem": 883, "pci_iomap": 883, "pci_iounmap": 883, "pci_alloc_consist": 883, "os_devic": 883, "_o": 883, "dma_addr": 883, "pci_free_consist": 883, "_size": 883, "_cpu_addr": 883, "t_os_dma_addr__get_n": 883, "_dma_addr": 883, "_os_devic": 883, "dma_bit_mask": 883, "pci_set_consistent_dma_mask": 883, "config_debug_atomic_sleep": [885, 890], "cross compil": 887, "educ": [165, 887], "raspberrypi": [887, 888, 992, 1064, 1072], "borrow": 887, "pi2": 887, "1gb": 887, "canon": [887, 1005], "hf": 887, "armv6j": 887, "hardfloat": 887, "gnueabi": 887, "objcopi": 887, "raspberry_pi": 887, "local_overlai": 887, "ebuild": 887, "binutil": [887, 888], "repo_nam": 887, "9999": 887, "sourcedir": 887, "builddir": 887, "buildparam": 887, "kconfig": 887, "zconf": 887, "raspbian": 887, "bootdir": 887, "bootf": 887, "rootf": 887, "kernel7": 887, "Then": [887, 1003, 1204], "assimil": 887, "bcmrpi_defconfig": 887, "bcm2709_defconfig": 887, "config_localvers": 887, "config_ikconfig": 887, "eveytim": 887, "config_can_mcp251x": 887, "config_sensors_lm73": 887, "zimag": [887, 888, 992], "dtb": [887, 888, 992], "j3": 887, "mkknlimg": 887, "te": 887, "superus": 887, "jtf": 887, "bcm2709": 887, "smi": 887, "ft5406": 887, "can1": [887, 987], "v7": [887, 888], "ipv4": [887, 1258], "xfrm4_mode_beet": 887, "inet_lro": 887, "esp4": 887, "xfrm4_mode_transport": 887, "udp_tunnel": 887, "sdb": 887, "57344": 887, "sdb1": 887, "4162560": 887, "sdb2": 887, "enjoi": 887, "ec2aa3d2": 887, "eee7": 887, "454e": 887, "d145df5ddcba": 887, "agnost": 887, "urg": 887, "rasperri": [888, 992, 994, 1245, 1252], "patchlevel": 888, "sublevel": 888, "_morph": [889, 899], "my_driver_hello": 889, "my_driver_cdev_manu": 889, "my_driver_cdev_dynamic_major": 889, "my_driver_cdev_file_oper": 889, "my_driver_cdev_first_function": 889, "my_driver_cdev_refactor": 889, "my_driver_multiple_devic": 889, "my_driver_mutex": 889, "my_driver_interrupt": 889, "my_driver_spinlock_atom": 889, "my_driver_time_tim": 889, "my_driver_workqueu": 889, "my_driver_usermem": 889, "copy_": 889, "my_driver_waitqueu": 889, "nonblock": [889, 903, 1056, 1258], "spinlock_t": [890, 892], "isr": [890, 1048, 1246], "spin_unlock": [890, 892], "reenabl": 890, "uniprocessor": 892, "multiprocessor": 892, "spin_lock_init": 892, "spin_lock": 892, "spin_trylock": 892, "irqflag": 892, "spin_lock_irqsav": 892, "spin_unlock_irqrestor": 892, "pend": [895, 925, 1048, 1061], "my_inject_deferred_ev": 895, "my_device_add_deferred_ev": 895, "del_timer_sync": [895, 897], "paranoia": 895, "symmetri": 895, "my_device_add_ev": 895, "my_inject_ev": 895, "tick": 897, "config_hz": 897, "friendli": [897, 1137, 1207, 1211], "hrtimer": 897, "jiffies_to_msec": 897, "jiffies_to_usec": 897, "jiffies_to_nsec": 897, "msecs_to_jiffi": 897, "usecs_to_jiffi": 897, "timespec64_to_jiffi": 897, "timespec64": 897, "jiffies_to_timespec64": 897, "timer_list": 897, "my_tim": 897, "timerfunc": 897, "timer_setup": 897, "add_tim": 897, "del_tim": 897, "0520": 899, "0521": 899, "0525": 899, "0532": 899, "0710": 899, "preempt": [899, 1044, 1048], "caption": 899, "backlink": 899, "my_event_nod": 900, "my_get_one_ev": [900, 903], "my_device_get_one_ev": 900, "my_event_get_one_ev": 900, "efault": [900, 901], "uaccess": 901, "copy_to_us": 901, "copy_from_us": 901, "enosi": 903, "timerfd": [903, 1012, 1052], "f_flag": 903, "wait_queue_head_t": 904, "wq": [904, 906, 907], "init_waitqueue_head": 904, "sched": 904, "wait_ev": 904, "wait_event_interrupt": 904, "wait_event_timeout": 904, "timeout_jiffi": 904, "wait_event_interruptible_timeout": 904, "wake_up": 904, "wake_up_interrupt": 904, "task_interrupt": 904, "create_workqueu": [906, 907], "destroy_workqueu": [906, 907], "eo": 906, "rtprio": 906, "work_struct": [906, 907], "init_work": [906, 907], "chrt": [906, 1048], "workqueue_struct": 907, "work_func_t": 907, "queue_work": 907, "packen": 909, "gunzip": 911, "zgrep": 911, "zcat": 911, "zless": 911, "intact": [911, 1163, 1167], "viro": 912, "cpio": 912, "cleaner": 912, "archivformat": 912, "lzma": 912, "430mb": 912, "95mb": 912, "74mb": 912, "5m": [912, 985], "64mb": 912, "togeht": 913, "gfs2": 913, "zcf": 913, "decompress": [913, 1075], "zxf": 913, "ztf": 913, "dirt": 913, "livingroom": 913, "grumbl": 913, "reat": 913, "tract": 913, "ell": [913, 948], "vv": 913, "supplementari": [914, 915, 923, 925], "1021": [914, 915, 923], "somefil": [914, 915, 954], "chgrp": [914, 915, 933, 940, 942], "fellow": [914, 915], "picki": [914, 915, 1099], "ttyusb1": 918, "stick": [918, 923], "2006854": 918, "sdc": 918, "2006823": 918, "deserv": [918, 977, 1038, 1064], "trash": [918, 948], "burn": [918, 994], "1mib": 918, "1mibf": 918, "0m": [918, 970, 1046], "mkf": 918, "entropi": 918, "my_vari": 919, "1034184": 919, "1035812": 919, "ancestor": [919, 926, 1004], "decriptor": [920, 921, 1020], "getti": 923, "kerbero": [923, 925], "agetti": 923, "cleartext": [923, 944], "brute": [923, 1001, 1064], "crack": 923, "attack": [923, 1001, 1080, 1200, 1244], "hierarch": 924, "peripher": [924, 1245, 1252], "grand": 924, "ten_integ": 925, "unfair": [925, 1048], "dialout": [925, 1020], "seg": [925, 987], "kbyte": 925, "62715": 925, "819200": 925, "pstree": 926, "modemmanag": 926, "journ": 926, "abrtd": 926, "auditd": 926, "bluetoothd": 926, "cupsd": 926, "lau": 926, "tini": [926, 1062], "enemi": 927, "guidanc": 927, "dicdat": 927, "acknowledg": [927, 985], "fight": 927, "seamless": [927, 1213], "exampk": 927, "altruism": 927, "mkfifo": [928, 932], "stdin_fileno": [930, 1014, 1024, 1060, 1137], "stdout_fileno": [930, 1010, 1011, 1014, 1020, 1046, 1055, 1059, 1060, 1137], "stderr_fileno": [930, 1014, 1137], "religi": 930, "fed": 930, "filefor": 930, "weekli": 931, "compet": [932, 993], "award": [932, 979], "plumber": 932, "sniff": 932, "fifo": [932, 1014, 1257], "rendezv": 932, "unnam": 932, "chown": [933, 945, 1077], "useradd": [933, 1077], "groupadd": 933, "usermod": 933, "groupmod": 933, "teammember42": 933, "manfromthestreet": 933, "jun": [933, 1064, 1086], "triplet": 933, "1003": 933, "110100100": 933, "110000000": 933, "0600": 933, "111101101": 933, "0755": [933, 1062], "bitmask": [933, 944, 1060], "1317": 944, "mdmckqvpfaqquqypvzjjkihsbkkcniogknxtiobvbfw8u7zuf3": 944, "0g2rqr9cnydnqq5unt": 944, "wpu8jyzeuxktapl0": 944, "burnout": 944, "retyp": 944, "rwsr": [944, 945], "32712": 944, "rwxrwxrwx": 944, "4755": [944, 945], "uid_t": 945, "getuid": 945, "geteuid": 945, "rwxrwxr": [945, 1010, 1062, 1063, 1064], "24456": 945, "drwxrwxrwt": 946, "0022": 947, "strain": 948, "injuri": 948, "diseas": 948, "outout": 948, "20k": 948, "olevel": 948, "debugopt": 948, "expr1": 948, "expr2": 948, "daystart": 948, "regextyp": 948, "synopsi": 948, "findu": 948, "til": 948, "findutil": 948, "pression": 948, "print0": 948, "noob": [948, 1110], "pos1": 948, "misconfigur": 948, "esc": 948, "freak": 948, "cvsserver": 948, "gitview": 948, "oesterreich": 948, "clearanc": 948, "e7d76d19": 948, "dd3d": 948, "4d52": 948, "2c16dc73f9d1_vstv_921302213705_2021___vstvf": 948, "boardingpass_1d9xf3dvd1uzt00tsswu68duh": 948, "gif": [948, 1201], "einkommensteuerbescheid1": 948, "boardingpass_b6uy9xqgeojspx1hxshogcbbq": 948, "einkommensteuervorauszahlungsbescheid1": 948, "immobilienbewertung": 948, "etw": 948, "confirm": 948, "ova": 948, "umsatzsteuerbescheid1": [948, 970, 971], "h0020211105124337": 948, "vk9vst311192021_0022021": 948, "img_": 950, "jpg": 950, "bilder": 950, "121751": 951, "garbage1": [952, 953, 955, 959, 960], "garbage2": [952, 953, 955, 959, 960], "diretori": 954, "sweetheart": [954, 960, 967, 1041], "citi": 954, "mqueue": [963, 1055], "leavel": 967, "hintingx": 970, "1048576": 970, "drwx": [970, 972], "36817": 970, "umsatzsteuerbescheid": 971, "finanzamt": 971, "abgab": 971, "neighbor": [972, 1195], "enat": 973, "dereferenzieren": 975, "50k": [975, 976], "rekursiv": 976, "eintr\u00e4g": 976, "unterhalb": 976, "gefiltert": 976, "un\u00fcblich": 976, "gebr\u00e4uchlich": 976, "geh\u00f6ren": 976, "mmin": 976, "h\u00f6chsten": 976, "gefundenem": 976, "eintrag": 976, "heissen": 976, "beginnen": 976, "versteht": 976, "vergessen": 976, "j\u00fcnger": 976, "verkn\u00fcpft": 976, "metacharact": [976, 995], "gr\u00f6\u00dfer": 976, "lobal": 977, "egular": 977, "xpression": 977, "rint": 977, "sed": [977, 1245, 1252], "tream": 977, "itor": 977, "verb": 977, "entor": 977, "perlr": 977, "perlretut": 977, "perlrequick": 977, "jeffrei": 977, "friedl": 977, "philosopi": 981, "toether": 981, "hc": 981, "325324": 981, "xarg": 981, "bitbak": 983, "behan": 983, "webster": 983, "drone": 985, "electronic speed control": 985, "vehicl": 985, "rack": 985, "recognit": [985, 1195], "flight": [165, 985], "fritz": [985, 993], "brigh": 985, "heinrich": 985, "polar": 985, "uevent": [985, 992, 993, 994, 1028], "cheapest": 985, "quicrun": 985, "16bl30": 985, "brake": 985, "11v": 985, "conclud": [985, 993], "lipo": 985, "madli": 985, "transmitt": 985, "throttl": 985, "neutral": [985, 1197], "chop": 985, "kindli": [985, 1201], "mechatron": 985, "50hz": 985, "nanosecond": [985, 993, 1012], "20000000": [985, 1097], "oscil": 985, "10bl60": 985, "000n": 985, "1500000": [985, 1050], "2000000": 985, "1550000": 985, "1600000": 985, "acceler": 985, "1650000": 985, "1700000": 985, "1750000": 985, "1800000": 985, "1850000": 985, "1900000": 985, "1950000": 985, "logist": [985, 1195], "hobbi": 985, "can bu": [986, 987, 988, 989], "sinowatz": [986, 1087], "volkswagen": 986, "traffic": 986, "octet": 986, "arbitr": 986, "can_fram": [986, 988], "canid_t": [986, 988], "can_id": [986, 988], "eff": [986, 988], "rtr": [986, 988], "__u8": [986, 988], "can_dlc": [986, 988], "__attribute__": [986, 988], "can0": [987, 988], "noarp": 987, "qdisc": 987, "qlen": 987, "txqueuelen": 987, "pfifo_fast": 987, "promiscu": 987, "allmulti": 987, "minmtu": 987, "maxmtu": 987, "restart": 987, "tq": 987, "prop": 987, "seg1": 987, "seg2": 987, "sjw": 987, "brp": 987, "gs_usb": 987, "tseg1": 987, "tseg2": 987, "brp_inc": 987, "48000000": 987, "numtxqueu": 987, "numrxqueu": 987, "gso_max_s": 987, "65536": 987, "gso_max_seg": 987, "65535": [987, 992], "tso_max_s": 987, "tso_max_seg": 987, "gro_max_s": 987, "gso_ipv4_max_s": 987, "gro_ipv4_max_s": 987, "parentbu": 987, "parentdev": 987, "relic": 987, "cansend": 987, "candump": 987, "canplay": 987, "cangen": 987, "snif": 987, "loopback": 987, "pf_can": 988, "sockaddr_can": 988, "sock_raw": 988, "can_raw": 988, "ifr_nam": 988, "siocgifindex": 988, "can_famili": 988, "af_can": 988, "can_ifindex": 988, "ifr_ifindex": 988, "sockaddr": [988, 1011], "can_socket": 988, "packt": 988, "frame_layout": 988, "ib3x8": 988, "frame_s": 988, "calcsiz": 988, "recvfrom": 988, "sendto": 988, "lnxpp": 989, "can2udp": 989, "openwrt": 989, "asymmetrisch": 989, "mosi": 989, "miso": 989, "sclk": 989, "broadcom": 989, "ce0": 989, "3v": [989, 992], "5v": [989, 992], "transceiv": 989, "inter intergrated circuit": 992, "lm-sensor": 992, "handwork": [992, 994], "texa": 992, "maker": 992, "dtparam": [992, 993, 994], "i2c_arm": [992, 993, 994], "gpio2": 992, "gpio3": 992, "i2c_bcm2835": [992, 993, 994], "fe804000": [992, 994, 1028], "i2c_dev": [992, 993], "sot": 992, "7v": 992, "rail": 992, "capacitor": 992, "idc": 992, "gnd": [992, 994], "vdd": 992, "smbdat": 992, "smbclk": 992, "unconnect": 992, "0x49": 992, "0x4a": 992, "jumper": 992, "3v3": [992, 994], "scl": [992, 994], "probl": 992, "i2c_slav": 992, "0x0703": 992, "o_rdwr": [992, 1014, 1021, 1055], "msb_lsb": 992, "msb": 992, "lsb": [992, 1063, 1065], "dev_fd": 992, "perror": [992, 1006, 1010, 1011, 1012, 1018, 1019, 1020, 1021, 1026, 1029, 1046, 1052, 1055, 1059], "libncurs": 992, "bcm2711_defconfig": 992, "v7l": 992, "semiconductor": 992, "j4": 992, "kernel7l": 992, "new_devic": [992, 994], "0048": 992, "modalia": 992, "preinstal": 992, "hwmon0": 992, "thermal": 992, "thermal_zone0": 992, "hwmon1": [992, 994], "temp1_max": 992, "temp1_max_alarm": 992, "temp1_min": 992, "temp1_min_alarm": 992, "update_interv": 992, "22000": 992, "randomli": [992, 994], "nomenclatur": 992, "pulse width modul": 993, "resistor": 993, "bright": 993, "potentiomet": 993, "ssop": 993, "0b1000000": 993, "buse": [993, 994], "i2cdetect": [993, 994], "charactr": 993, "pca": 993, "simultan": [993, 1059], "peculiar": 993, "pca9685a": 993, "nxp": 993, "dtoverlai": [993, 994], "pwm_pca9685": 993, "regmap_i2c": 993, "3f804000": 993, "0040": [993, 1028], "npwm": 993, "unexport": [993, 1028], "butt": [993, 1075], "intercept": [993, 1086], "dim": 993, "fade": 993, "800000": [993, 1193], "600000": [993, 1193], "50000": 993, "apolog": 993, "kenel": 993, "devlop": 993, "pleasur": 993, "cornerston": 994, "unstabl": 994, "parasit": 994, "bitbang": 994, "gpiopin": 994, "profession": 994, "addon": 994, "pinout": 994, "01144fe43baa": 994, "w1_bus_master8": 994, "w1_bus_master1": 994, "amaz": 994, "400000000000": 994, "800000000000": 994, "behalf": [994, 1008, 1062], "ad0": 994, "ad1": 994, "ad2": 994, "vcc": 994, "0x18": 994, "0b0011000": 994, "shortli": [994, 1086], "execstart": 994, "36864": 994, "w1_bus_master2": 994, "w1_bus_master3": 994, "w1_bus_master4": 994, "w1_bus_master5": 994, "w1_bus_master6": 994, "w1_bus_master7": 994, "busno": 994, "abtract": 994, "prepackag": 994, "afford": 994, "alarm": [994, 1058, 1061], "conv_tim": 994, "w1_slave_driv": 994, "eeprom": 994, "ext_pow": 994, "w1_slave": 994, "22750": 994, "crc": 994, "rpi_volt": 994, "isa": 994, "in0": 994, "cpu_therm": 994, "temp1": 994, "w1_slave_temp": 994, "reliabl": 994, "radiou": 994, "disappear": 994, "0c4000000000": 994, "0x28": 994, "dalla": [994, 1022], "02131d9920aa": 994, "5d": 994, "011432f138f9": 994, "misbehavior": 994, "instabl": 994, "pump": 994, "nuclear": 994, "plant": 994, "ssh-keygen": [995, 1001], "password authent": [995, 1001], "key based authent": [995, 1001], "remote login": [995, 1001], "unencrypt": 995, "rlogin": 995, "telnet": 995, "nsa": 995, "primarili": [995, 1089, 1209], "sftp": 995, "portno": 995, "propaget": 995, "sha256sum": 996, "72c18232434d0551af75f964ea66ae5d9271faba895f40a929fb17f19d7ab44c": 996, "mitm": 1001, "uncomfort": 1001, "keygen": 1001, "safeguard": 1001, "unrespons": 1002, "port forward": 1003, "portforward": 1003, "secure copi": [1003, 1004], "hmmm": 1003, "whateer": 1003, "mydocu": 1004, "recus": 1004, "mobil": 1004, "bandwidth": 1004, "mediat": 1004, "descriptiotn": 1004, "file system": 1005, "network file system": 1005, "smb": 1005, "crawl": 1005, "debianish": 1005, "mountpoint": 1005, "grant": 1005, "idmap": 1005, "errnum": 1006, "strerror_r": 1006, "buflen": 1006, "cleanest": 1006, "_r": 1006, "reentrant": 1006, "getaddrinfo": 1008, "ri": 1010, "nbytes_read": [1010, 1011, 1012], "24608": 1010, "1024root": 1010, "nager": 1010, "698nager": 1010, "gatewai": 1011, "peer": [1011, 1014], "netinet": 1011, "af_inet": 1011, "sock_stream": 1011, "sockaddr_in": 1011, "sin_famili": 1011, "sin_port": 1011, "inet_aton": 1011, "sin_addr": 1011, "ipproto_ip": 1011, "sa_famili": 1011, "inet_addr": 1011, "10hallo": 1011, "16thi": 1011, "ong": 1011, "14ong": 1011, "timerfd_settim": 1012, "itimerspec": [1012, 1046], "nasti": [1013, 1046], "ingenu": 1014, "smae": 1014, "o_append": 1014, "o_cloexec": [1014, 1062], "sigpip": [1014, 1060], "whenc": 1014, "seek_cur": 1014, "seek_end": 1014, "occupi": [1014, 1016, 1017], "status": 1015, "srcfile": 1015, "dstfile": 1015, "1073741825": 1016, "0k": 1016, "texttt": 1017, "dup2": 1017, "oldfd": 1017, "newfd": 1017, "o_": 1017, "bytes_to_writ": [1018, 1019, 1021], "wxr": 1018, "o_tmpfil": 1018, "speci": 1018, "pli": 1018, "nread": [1020, 1026, 1029, 1052, 1055, 1059], "thats": [1020, 1021], "misspel": 1021, "24625": 1022, "24562": 1022, "pread": 1024, "pwrite": 1024, "readv": 1024, "writev": 1024, "uio": 1024, "iovec": 1024, "iov": 1024, "iovcnt": 1024, "preadv": 1024, "pwritev": 1024, "ftruncat": [1024, 1055, 1056], "filedescriptor": 1024, "gpio26": [1026, 1028, 1029], "subtre": 1028, "fe200000": 1028, "gpiochip488": 1028, "gpiochip504": 1028, "active_low": 1028, "fd_set": [1029, 1052], "exc_fd": 1029, "fd_zero": [1029, 1052], "nreadi": 1029, "fd_isset": [1029, 1052], "eek": 1029, "intens": 1030, "ppid": 1030, "tid": 1030, "tsd": 1030, "spezif": 1030, "_reentrant": 1030, "lpthread": [1030, 1046, 1065], "start_routin": 1031, "pthread_exit": 1031, "pthread_cancel": 1031, "pthread_attr_setdetachst": 1031, "detachst": 1031, "pthread_create_detach": 1031, "pthread_detach": 1031, "pthread_self": 1031, "pthread_equ": 1031, "30650": 1031, "13961": 1031, "correl": 1031, "gettid": 1031, "pthread_mutexattr_t": [1033, 1049], "pthread_mutex_destroi": 1033, "pthread_mutex_trylock": 1033, "global_mutex": 1033, "pthread_mutexattr_settyp": 1033, "pthread_mutex_norm": 1033, "pthread_mutex_errorcheck": 1033, "pthread_mutex_recurs": 1033, "pthread_mutex_default": 1033, "pthread_cond_destroi": 1035, "pthread_cond_broadcast": 1035, "parlanc": 1035, "set_autoreset_ev": 1035, "ev": 1035, "is_set": 1035, "wait_autoreset_ev": 1035, "acquiriert": 1035, "autoreset": 1035, "spuriou": 1035, "woken": 1035, "pthread_condattr_t": 1035, "pthread_cond_initi": 1035, "pthread_cond_timedwait": 1035, "abstim": 1035, "use_glob": 1037, "pthread_once_t": 1037, "global_onc": 1037, "pthread_once_init": 1037, "init_glob": 1037, "pthread_onc": 1037, "once_control": 1037, "init_routin": 1037, "pthread_key_cr": 1037, "__thread": 1037, "pthread_atfork": 1038, "legales": 1038, "lock_rac": 1040, "succeed": [1040, 1228], "foreground": [1041, 1095], "huh": 1041, "paradox": 1041, "setenv": 1043, "putenv": 1043, "unsetenv": 1043, "clearenv": 1043, "customvar": 1043, "timesl": 1044, "starv": 1044, "throughput": 1044, "sha1": [1044, 1047, 1063, 1065], "voluntarili": [1044, 1047], "lrt": 1046, "app_statu": 1046, "tick_count": 1046, "update_statu": 1046, "sigact": [1046, 1059, 1060], "sa_handl": [1046, 1059, 1060], "sigrtmin": 1046, "sigev": [1046, 1056], "sev": 1046, "sigev_notifi": 1046, "sigev_sign": 1046, "sigev_signo": 1046, "timer_t": 1046, "tspec": 1046, "nsec": 1046, "timer_settim": 1046, "show_statu": 1046, "freerto": [1046, 1049], "syncron": 1046, "update_status_func": 1046, "initial_t": 1046, "interval_t": 1046, "show_status_func": 1046, "update_task": 1046, "show_task": 1046, "231765": 1046, "225819": 1046, "5635": 1046, "lwp": 1046, "231766": 1046, "231767": 1046, "tracer": 1046, "restart_syscal": 1046, "clock_nanosleep": 1046, "clock_realtim": 1046, "500000000": 1046, "033": 1046, "7m": 1046, "flash_func": 1046, "is_revers": 1046, "flash_task": 1046, "flasher": 1046, "indepen": 1046, "toggl": 1046, "fore": [1046, 1097], "particularli": 1047, "suscept": 1047, "nicer": 1048, "renic": 1048, "din": 1048, "44300": 1048, "echtzeitbetrieb": 1048, "betrieb": 1048, "rechensystem": 1048, "verarbeitung": 1048, "anfallend": 1048, "st\u00e4ndig": 1048, "derart": 1048, "betriebsbereit": 1048, "da\u00df": 1048, "verarbeitungsergebniss": 1048, "vorgegebenen": 1048, "zeitspann": 1048, "000014": 1048, "013914m": 1048, "91410827636698u": 1048, "000002": [1048, 1050], "002382m": 1048, "3820173632900326u": 1048, "intrus": 1048, "controversi": 1048, "sched_oth": 1049, "relinquish": 1049, "sched_param": 1049, "sched_getschedul": 1049, "sched_prior": 1049, "pthread_setschedparam": 1049, "pthread_getschedparam": 1049, "predefini": 1049, "pthread_attr_setschedpolici": 1049, "spoken": 1049, "pthread_mutexattr_setprotocol": 1049, "pthread_prio_inherit": 1049, "pthread_prio_protect": 1049, "risen": 1049, "pthread_mutexattr_setprioceil": 1049, "000105": 1050, "105247m": 1050, "24749755859354u": 1050, "000015": 1050, "014643m": 1050, "64260525619006u": 1050, "105u": 1050, "000067": 1050, "067263m": 1050, "2626495361326u": 1050, "000003": 1050, "002883m": 1050, "8827592917392217u": 1050, "ondemand": 1050, "governor": 1050, "cpufreq": 1050, "scaling_governor": 1050, "cpuinfo_cur_freq": 1050, "067036m": 1050, "03615188598611u": 1050, "000001": 1050, "001257m": 1050, "2571678380193383u": 1050, "000065": 1050, "065188m": 1050, "188407897949u": 1050, "002376m": 1050, "3758434034066656u": 1050, "001042": 1050, "042438m": 1050, "4375534057617u": 1050, "000017": 1050, "017123m": 1050, "123423079175748u": 1050, "000143": 1050, "142646m": 1050, "6458358764593u": 1050, "000005": 1050, "004995m": 1050, "994855006705264u": 1050, "_syse": 1052, "exit_failur": 1052, "consume_fd": 1052, "random_fd": 1052, "tty_fd": 1052, "nfd": 1052, "ttys4": 1052, "in_fd": 1052, "eof_detect": 1052, "shm": [1054, 1055, 1056], "099": 1054, "sem": [1054, 1055, 1056], "shared memori": 1055, "message queu": 1055, "mman": 1055, "fstat": 1055, "st_size": [1055, 1062], "map_fail": 1055, "shm_open": [1055, 1056], "tmpf": [1055, 1056], "resiz": 1055, "4095": 1055, "weigh": 1055, "map_shar": 1055, "counter_loc": 1055, "sem_t": [1055, 1056], "sem_open": 1055, "sem_fail": 1055, "sem_wait": 1055, "sem_post": 1055, "mq_attr": [1055, 1056], "mq_maxmsg": [1055, 1056], "mq_msgsize": [1055, 1056], "mqd_t": [1055, 1056], "mq_open": 1055, "mq_send": 1055, "mq_receiv": 1055, "shm_unlink": 1056, "overtak": 1056, "mq_overview": 1056, "oflag": 1056, "mq_flag": 1056, "mqde": 1056, "msg_ptr": 1056, "msg_len": 1056, "msg_prio": 1056, "sevp": 1056, "disturb": [1056, 1059], "elegantli": 1056, "qsize": 1056, "signo": 1056, "notify_pid": 1056, "goiven": 1056, "sem_overview": 1056, "sem_trywait": 1056, "sem_timedwait": 1056, "abs_timeout": 1056, "shm_close": 1056, "shm_overview": 1056, "051": [1058, 1059], "segv": [1059, 1060], "mortem": [1059, 1187], "core_pattern": 1059, "termination_handl": 1059, "sigint": [1059, 1060], "sig_atomic_t": [1059, 1060], "term_act": 1059, "alarm_handl": 1059, "alarm_act": 1059, "sigset_t": [1059, 1061], "termination_sign": 1059, "sigemptyset": [1059, 1060], "sigaddset": [1059, 1060], "sigquit": 1059, "sigprocmask": [1059, 1060], "sig_block": 1059, "impolit": 1059, "sig": [1059, 1060], "consume_pip": 1059, "pipenam": 1059, "puzzl": 1059, "pthread_sigmask": [1059, 1060], "sigtstp": 1060, "sigalrm": [1060, 1061], "sigchld": 1060, "abnorm": 1060, "sigabrt": 1060, "sigsegv": 1060, "sigbu": 1060, "sigil": 1060, "sigfp": 1060, "unblock": 1060, "oldset": 1060, "sigpend": 1060, "sigfillset": 1060, "signum": 1060, "sigdelset": 1060, "sigismemb": 1060, "sigsetop": 1060, "recept": 1060, "sa_mask": 1060, "sa_flag": 1060, "oldact": 1060, "sig_ign": 1060, "sig_dfl": 1060, "sighandler_t": 1060, "_exit": 1060, "barebon": 1061, "louder": 1061, "stallman": 1062, "risc": 1062, "llvm": 1062, "24360": 1062, "hello_h": [1062, 1079, 1081], "24416": 1062, "linkabl": [1062, 1200, 1255], "vdso": [1062, 1080], "0x00007ffc44130000": 1062, "0x00007fdd8ea64000": 1062, "0x00007fdd8ec5c000": 1062, "0x7fffea18b920": 1062, "brk": 1062, "0x67e000": 1062, "arch_prctl": 1062, "0x3001": 1062, "arch_": 1062, "0x7fff6d3dd240": 1062, "r_ok": 1062, "newfstatat": 1062, "st_mode": 1062, "s_ifreg": 1062, "80987": 1062, "at_empty_path": 1062, "0x7f1721afc000": 1062, "177elf": 1062, "pread64": 1062, "2420152": 1062, "0x7f1721afa000": 1062, "1973104": 1062, "map_denywrit": 1062, "0x7f1721918000": 1062, "0x7f172193e000": 1062, "1441792": 1062, "prot_exec": 1062, "map_fix": 1062, "0x26000": 1062, "0x7f1721a9e000": 1062, "319488": 1062, "0x186000": 1062, "0x7f1721aec000": 1062, "24576": 1062, "0x1d3000": 1062, "0x7f1721af2000": 1062, "31600": 1062, "0x7f1721916000": 1062, "arch_set_f": 1062, "0x7f1721afb680": 1062, "set_tid_address": 1062, "0x7f1721afb950": 1062, "471382": 1062, "set_robust_list": 1062, "0x7f1721afb960": 1062, "rseq": 1062, "0x7f1721afbfa0": 1062, "0x53053053": 1062, "0x403000": 1062, "0x7f1721b42000": 1062, "prlimit64": 1062, "rlim_cur": 1062, "rlim_max": 1062, "rlim64_infin": 1062, "munmap": 1062, "s_ifchr": 1062, "0620": 1062, "st_rdev": 1062, "makedev": 1062, "0x88": 1062, "0xb": 1062, "getrandom": 1062, "xcd": 1062, "x7c": 1062, "xc9": 1062, "x3b": 1062, "xd6": 1062, "xf2": 1062, "x44": 1062, "grnd_nonblock": 1062, "0x69f000": 1062, "12hello": 1062, "exit_group": 1062, "0000000000401040": 1062, "_start": 1062, "0000000000401000": 1062, "_init": 1062, "00000000004011b8": 1062, "_fini": 1062, "crt": 1062, "crt1": 1062, "crti": 1062, "crtn": 1062, "0000000000404000": 1062, "_global_offset_table_": 1062, "reloc": 1062, "1762320": 1062, "0000000000401126": 1062, "1224008": 1062, "greetdemo": 1063, "cmake_system_nam": 1063, "toolchain_base_dir": [1063, 1078], "cmake_c_compil": 1063, "cmake_cxx_compil": 1063, "find_xxx": 1063, "cmake_find_root_path_mode_program": 1063, "cmake_find_root_path_mode_librari": 1063, "cmake_find_root_path_mode_includ": 1063, "toolchian": 1063, "cmake_toolchain_fil": 1063, "libgreet": [1063, 1064, 1071, 1080, 1081], "13921": [1063, 1064], "cmake_instal": [1063, 1064], "26192": [1063, 1064], "27920": [1063, 1064], "8503": [1063, 1064], "eabi5": [1063, 1065], "armhf": [1063, 1065], "5db807d9b005b19e1e0c957755fa7ca7b771edcb": 1063, "debug_info": [1063, 1065], "armv7l": 1065, "challeng": 1065, "metadistribut": 1065, "miniumum": 1065, "1697265": 1065, "1078248": 1065, "1260352": 1065, "1256256": 1065, "a5540938c2c36ad2bb371ccfdeaee5e7dbc8d512": 1065, "rasberri": 1067, "clickabout": 1073, "workabl": 1075, "tarbal": 1075, "lastest": 1075, "x86_64_arm": 1075, "precompos": 1075, "uncompress": 1075, "73812": 1075, "1107168": 1075, "1481768": 1075, "1968456": 1075, "1091864": 1075, "1030432": 1075, "1221816": 1075, "lynxbe": 1077, "y3p9kn7mjei": 1077, "cli": 1077, "dockerhub": 1077, "hub": 1077, "sh_18_04": 1077, "78683068": 1077, "1292296": 1077, "70mb": 1078, "73018472": 1078, "auxvec": 1078, "bitsperlong": 1078, "bpf_perf_ev": 1078, "rapidli": 1079, "phoni": [1079, 1080, 1081], "origaniz": 1080, "relink": 1080, "0x2e20": 1080, "0x00007fffe9fa7000": 1080, "0x00007f75ca289000": 1080, "0x00007f75ca46d000": 1080, "r_x86_64_32": 1080, "fpic": 1080, "whom": 1081, "hello_flex": 1081, "hello_flexible_h": 1081, "cq": 1081, "lisp": 1082, "create_f": 1082, "create_print": 1082, "print_blah": 1082, "print_someth": 1082, "sytax": 1083, "shutil": 1084, "tarfil": 1084, "temporarydirectori": 1084, "tmpd": 1084, "tarnam": 1084, "expandvar": 1084, "contrain": 1084, "__enter__": 1084, "__exit__": 1084, "openforread": 1084, "myprint": 1084, "orig_print": 1084, "exc_val": 1084, "exc_tb": 1084, "myarg": 1084, "total_ord": 1085, "a_vari": 1086, "baseexceptiongroup": 1086, "exceptiongroup": 1086, "subtyp": 1086, "maybe_fail": 1086, "lone": 1086, "mysubsystemerror": 1086, "reallybaderror": 1086, "someothererror": 1086, "definitelybad": 1086, "evenwors": 1086, "collapsingtheworld": 1086, "errorcod": 1086, "__cached__": 1087, "_frozen_importlib_extern": 1087, "sourcefileload": 1087, "0x7f88dd301850": 1087, "blindli": 1087, "ansibl": 1087, "matno": 1087, "conffil": 1087, "confcod": 1087, "confdict": 1087, "5881": 1087, "object ori": [1088, 1244], "keyword argu": 1088, "starstararg": [1088, 1109], "for loop": 1088, "iterator protocol": 1088, "operator overload": 1088, "drawn": 1089, "inputrang": 1089, "disgust": 1089, "gentli": 1089, "smarter": 1089, "nolimit": 1090, "fibo_numb": 1090, "jerki": 1090, "max_numb": 1090, "satisfactori": 1090, "python_1010_generators_yield": 1090, "glossari": 1091, "breadth": 1091, "subnamespac": 1094, "mysupermodul": 1094, "mysuperfunct": 1094, "subpackage1": 1094, "module1": 1094, "module2": 1094, "subpackage2": 1094, "disambigu": 1094, "increment_background": [1095, 1097], "background_integ": 1095, "foreground_integ": 1095, "runn": 1095, "backgroundincrement": 1095, "uncool": 1095, "14784035": 1097, "quack": 1099, "mockup": 1099, "56693467263678": 1099, "53480739124101": 1099, "98643211998109": 1099, "68124270270695": 1099, "39310082676304": 1099, "__next__": 1099, "brokensensor": 1099, "gettemperatur": 1099, "refect": 1100, "emp": 1103, "add_employe": 1103, "mgr": 1103, "isold": [1103, 1104, 1205], "haubentauch": [1103, 1104, 1107, 1205], "parentcl": 1103, "funnili": 1103, "make_child": 1104, "parent1": 1104, "parent2": 1104, "vvv": 1104, "father": 1104, "vvvvvv": 1104, "tabular": 1105, "someclass": 1105, "persons_from_csv": 1105, "person_dict": 1105, "operators object oriented program": 1106, "behaivor": 1106, "number2": 1106, "int2": 1106, "whistl": [1106, 1109], "symmetr": [1106, 1136], "commut": 1106, "summar": 1106, "attrnam": 1107, "meier": 1107, "expicitli": 1108, "0x7fa000d19e50": 1108, "toolkit": 1110, "marker": 1112, "eighti": 1112, "monti": 1112, "incompat": [1112, 1118, 1126, 1137], "benevol": 1112, "bdfl": [1112, 1197], "overse": 1112, "januari": 1112, "dropbox": 1112, "awk": 1114, "throughout": 1117, "0o01234": 1118, "14159265359": [1118, 1132], "3e12": 1118, "\u00e4\u00f6\u00fc": 1118, "xa4": 1118, "xb6": 1118, "xbc": 1118, "xe4": 1118, "compel": 1118, "codebas": 1118, "ancient": 1118, "sequencish": 1122, "sixtim": 1122, "seen_sixey": 1122, "blahblahblahblahblah": 1123, "aah": 1124, "a_list": 1124, "hlow": 1124, "hlowrd": 1124, "heritag": 1126, "140394685635336": 1127, "140394685635368": 1127, "140394685635592": 1127, "140394400803072": 1127, "140394402630448": 1127, "parameterizab": 1129, "program_exit": 1129, "exitstatu": 1129, "spam": [1131, 1195], "dec": 1131, "x58": 1131, "07d": 1132, "0x": 1132, "5x": 1132, "0x2f": 1132, "4x": 1132, "0x002f": 1132, "5o": 1132, "0o31": 1132, "04d": 1132, "0042": 1132, "05d": 1132, "00042": 1132, "thistl": 1133, "thorn": 1133, "annoy": 1133, "sqn": 1134, "defval": 1135, "iterkei": 1135, "keyiter": 1135, "0x7ff2e8753418": 1135, "unord": 1136, "tunabl": 1137, "shoudn": 1137, "0x7fca2c785b70": 1138, "tof": [165, 1138], "outputfilenam": 1139, "argumentpars": 1139, "add_argu": 1139, "parse_arg": 1139, "ou": 1139, "\u0142ukasz": 1140, "langa": 1140, "pybay2018": 1140, "ylabel": [1142, 1193], "xmin": 1142, "xmax": 1142, "ymin": 1142, "ymax": 1142, "twine": 1143, "lotsa": [1143, 1216], "long_descript": 1143, "long_description_content_typ": 1143, "beta": 1143, "osi": 1143, "approv": 1143, "package_dir": 1143, "python_requir": 1143, "install_requir": 1143, "paho": [1143, 1204], "pyproject": 1143, "toml": 1143, "build_meta": 1143, "yadda": 1143, "sdist": 1143, "python_course_2022_11_07": 1143, "12549": 1143, "BE": 1143, "mydb": 1144, "hardli": 1145, "femal": 1150, "miracl": [1153, 1170], "previouslin": 1157, "ifi": 1170, "uniqifi": 1171, "sensor_const": 1176, "test_sensor_const": 1176, "ii": [1177, 1179, 1183, 1185, 1196], "user_record": [1178, 1180], "read_csv_head": [1178, 1185], "read_csv_nohead": [1180, 1184, 1185], "csvfilenam": 1182, "test_noheader_person": 1183, "read_noheader_person": 1183, "test_must_not_use_global_variables_as_return_object": 1183, "filename1": 1183, "noheader1": 1183, "filename2": 1183, "noheader2": 1183, "users1": 1183, "users2": 1183, "test_header_person": 1183, "read_header_person": 1183, "test_user_json_person": 1183, "userdb_json": [1183, 1184], "test_person_to_json": 1183, "joerg_sent": 1183, "to_json_person": 1183, "joerg_receiv": 1183, "from_json_person": 1183, "envis": [1184, 1242], "to_json": 1184, "test_user_json": 1184, "test_user_to_json": 1184, "user_s": 1184, "json_user_s": 1184, "from_json": 1184, "test_nohead": 1185, "test_head": 1185, "lectur": [1187, 1256], "unsupervis": [1190, 1195], "conveyor": 1190, "belt": 1190, "linear_regress": [1191, 1194], "model_select": [1191, 1193], "train_test_split": [1191, 1193], "linear_model": [1191, 1193], "linearregress": [1191, 1193], "history_data": [1191, 1192, 1193, 1194], "inputfeatur": [1191, 1193], "outputfeatur": [1191, 1193], "input_train": [1191, 1193], "input_test": [1191, 1193], "output_train": [1191, 1193], "output_test": [1191, 1193], "test_siz": [1191, 1193], "output_predict": [1191, 1193], "visualcross": 1192, "york": [1192, 1193], "wind": [1192, 1193], "chill": [1192, 1193], "precipit": [1192, 1193], "snow": [1192, 1193], "gust": [1192, 1193], "humid": [1192, 1193], "rain": 1192, "cloudi": 1192, "995833": 1193, "688889": 1193, "287500": 1193, "327273": 1193, "012222": 1193, "690278": 1193, "470769": 1193, "369444": 1193, "513421": 1193, "946106": 1193, "574023": 1193, "313256": 1193, "994536": 1193, "070695": 1193, "025980": 1193, "302423": 1193, "214825": 1193, "665492": 1193, "900000": 1193, "700000": 1193, "090000": 1193, "050000": 1193, "377500": 1193, "750000": 1193, "950000": 1193, "650000": 1193, "330000": 1193, "325000": 1193, "850000": 1193, "425000": 1193, "825000": 1193, "715000": 1193, "470000": 1193, "970000": 1193, "multidimension": 1193, "xlabel": 1193, "coef_": 1193, "80189231": 1193, "intercept_": 1193, "95355086": 1193, "609608": 1193, "571879": 1193, "736988": 1193, "170933": 1193, "798254": 1193, "189739": 1193, "180394": 1193, "449230": 1193, "661530": 1193, "057745": 1193, "850176": 1193, "284120": 1193, "685067": 1193, "weather": [1194, 1195], "splice": [1194, 1195], "cute": 1194, "paper": 1194, "aspir": [1194, 1221], "dilig": 1195, "bite": 1195, "forecast": 1195, "agi": 1195, "asi": 1195, "forest": 1195, "predictor": 1195, "accuraci": 1195, "classif": 1195, "unlabel": 1195, "reinforc": 1195, "reward": 1195, "bay": 1195, "sepp": 1196, "tupleunpack": 1196, "spell": 1196, "redundantli": 1196, "quotechar": 1196, "spreadsheet": 1196, "odbc": 1197, "mysql": 1197, "informix": 1197, "berkeleydb": 1197, "mongodb": 1197, "rollback": 1197, "initd": 1199, "psycopg": 1199, "libpq": 1199, "conninfo": 1199, "psycopg2": 1199, "schwammerldb": 1199, "android": 1200, "schwammerln": 1200, "giftig": 1200, "geniessbar": 1200, "dbm": 1200, "steinpilz": 1200, "roehren": 1200, "speisetaeubl": 1200, "lamellen": 1200, "speitaeubl": 1200, "eierschwammerl": 1200, "teufelsroehrl": 1200, "overcod": 1201, "512119": 1201, "european": 1201, "steroid": 1201, "htmlhelp": 1201, "charset": 1201, "latin1": 1201, "chines": 1201, "enc": 1201, "0xfc": 1201, "0xdf": 1201, "0xf6": 1201, "\u00df": 1201, "cyril": 1201, "received_enc": 1201, "lg_enc": 1201, "bye_enc": 1201, "artificial intellig": 1202, "postgr": 1202, "mssql": 1202, "data sci": 1202, "ecosystem": 1202, "antp": 1204, "53767": 1204, "tcp6": 1204, "mosquitto_pub": 1204, "easiest": 1204, "message_receiv": 1204, "userdata": 1204, "on_messag": 1204, "loop_forev": 1204, "mosqitto_pub": 1204, "styrian": 1204, "esp": 1204, "666608091972": 1205, "ignore_index": 1205, "new_person": 1205, "saskia": 1205, "456710042003": 1205, "irrevers": 1206, "1153": [1209, 1210], "_locationindex": [1209, 1210], "maybe_cal": [1209, 1210], "apply_if_cal": [1209, 1210], "_getitem_axi": [1209, 1210], "_ilocindex": 1209, "1711": 1209, "1713": 1209, "_validate_integ": 1209, "_ix": 1209, "1647": 1209, "1645": 1209, "len_axi": 1209, "_get_axi": 1209, "rangeindex": 1210, "3791": 1210, "get_loc": 1210, "casted_kei": 1210, "pyx": 1210, "_lib": 1210, "indexengin": 1210, "hashtable_class_help": 1210, "pxi": 1210, "pyobjecthasht": 1210, "get_item": 1210, "1393": 1210, "_locindex": 1210, "1391": 1210, "thru": 1210, "_validate_kei": 1210, "_get_label": 1210, "1343": 1210, "1341": 1210, "axisint": 1210, "5567": 1210, "ndframe": 1210, "drop_level": 1210, "new_index": 1210, "4235": 1210, "4239": 1210, "bool_": 1210, "3793": 1210, "3795": 1210, "3797": 1210, "invalidindexerror": 1210, "3799": 1210, "listlik": 1210, "_check_indexing_error": 1210, "3801": 1210, "3803": 1210, "sort_index": 1210, "multiindex": 1210, "lower_email": 1212, "rentner": 1212, "is_palindrom": 1212, "facto": [1213, 1237], "subel": 1213, "attrib": 1213, "getroot": 1213, "package manag": 1215, "project manag": [1215, 1243], "unit test": 1215, "virtual environ": 1215, "affin": 1215, "witch": 1216, "gnore": 1216, "ackup": 1216, "bort": 1216, "cert": 1216, "pem": 1216, "pythonhost": 1216, "e17846ef3601dcb6f118ea447439650e0c35cb4fe60274fbe24214156df2": 1216, "cp38": 1216, "manylinux2010_x86_64": 1216, "ext": 1216, "argcomplet": 1216, "asn1crypto": 1216, "ensurepip": [1217, 1223], "test_project": 1221, "test_soup": 1221, "test_task": 1221, "stringent": 1221, "discoveri": 1221, "syndrom": [1221, 1222, 1228], "test_person_point": 1221, "deselect": 1221, "test_": 1221, "test_simpl": 1221, "test_trivi": 1221, "test_trivial_but_fail": 1221, "___________________________": 1221, "____________________________": 1221, "test_stat": 1221, "implementation_point": 1221, "implementor1": 1221, "implementor2": 1221, "documentation_point": 1221, "integration_point": 1221, "implementation_perc": 1221, "documentation_perc": 1221, "integration_perc": 1221, "total_perc": 1221, "total_point": 1221, "gathered_point": 1221, "test_another_task_aspect": 1221, "test_ini_file_pars": 1221, "my_test_fil": 1221, "mytestcas": 1222, "runtest": 1222, "assertequ": 1222, "texttestrunn": 1222, "__db": 1222, "create_databas": 1222, "fill_test_data": 1222, "remove_databas": 1222, "testfeature1": 1222, "testfeature2": 1222, "testsuit": 1222, "addtest": 1222, "testload": 1222, "loadtestsfromtestcas": 1222, "testsometh": 1222, "failif": 1222, "failunless": 1222, "failunlessequ": 1222, "failifequ": 1222, "failunlessalmostequ": 1222, "failunlessrais": 1222, "env_dir": 1223, "my_venv": 1223, "easy_instal": 1223, "pip3": 1223, "powershel": 1223, "joblib": 1223, "threadpoolctl": 1223, "deactiv": 1223, "my_recreated_venv": 1223, "persuad": 1223, "will_fail": [1227, 1230], "initgoogletest": [1228, 1233], "run_all_test": [1228, 1233], "lgtest": [1228, 1230], "onesuit": 1228, "test1": 1228, "test2": 1228, "anothersuit": 1228, "postive_pattern": 1228, "negative_pattern": 1228, "gtest_list_test": 1228, "faildemo": 1228, "failisfat": 1228, "assertdemo": 1228, "assertisfat": 1228, "expect_": 1228, "expectdemo": 1228, "expectisnonfat": 1228, "expect_tru": 1228, "expect_eq": 1228, "0x58": 1228, "0x55": 1228, "assert_": 1229, "repoqueri": 1230, "dpkg": 1230, "listfil": 1230, "joergfaschingbau": 1230, "cmake_compiler_is_gnucc": 1230, "ggdb": 1230, "googlebenchmark": 1230, "predef": [1232, 1233], "predefinedtestenviron": 1233, "paranoidtest": 1233, "untechn": 1233, "thefixtur": 1233, "testthatmodifiesst": 1233, "complexfixtur": 1233, "first_n": 1233, "sometest": 1233, "egal": 1235, "welcher": 1235, "schulungstyp": 1235, "problemlo": 1235, "verifiziert": 1235, "formlos": 1235, "anliegen": 1235, "umgehend": 1235, "setzen": 1235, "besprechen": 1235, "gestaltung": 1235, "schl\u00fcssigkeit": 1235, "chronologisch": 1235, "gehaltenen": 1235, "querzulesen": 1235, "roter": 1235, "faden": 1235, "ablaufen": 1235, "\u00e4nderungen": 1235, "kursgeschehen": 1235, "passieren": 1235, "detailliert": 1235, "kosten": 1235, "terminen": 1235, "inhouseschulungen": 1235, "buchenden": 1235, "terminisiert": 1235, "zustandekommt": 1235, "zeitlich": 1235, "\u00f6rtlich": 1235, "flexibel": [1235, 1236], "zul\u00e4sst": 1235, "besond": 1235, "onlineschulungen": 1235, "erwiesen": 1235, "dedizierten": 1235, "implementieren": [1235, 1240], "instruktionen": [1235, 1239], "datenschutzrichtlinien": 1235, "genug": 1235, "durchweg": 1235, "wahlweis": 1235, "offenen": 1235, "anmelden": 1235, "inhouseschulung": 1235, "exklusiv": 1235, "\u00fcblicherweis": 1235, "firmenstandort": 1235, "basteln": [1235, 1252], "schwierig": 1235, "z\u00fcgig": 1236, "uhr": 1236, "punktlandung": 1236, "mbr": 1236, "bootet": 1236, "nachs\u00e4tz": 1236, "wahllos": 1236, "reinen": [1236, 1252], "gebastelt": 1236, "leichtfertigerweis": 1236, "richtigerweis": 1236, "multilib": 1236, "ausgestattet": [1236, 1245, 1252, 1259], "l\u00e4uft": 1236, "seltsamerweis": 1236, "dar\u00fcber": 1236, "zeitersparnisgr\u00fcnden": 1236, "hinweggeholfen": 1236, "vorcompilierten": 1236, "statisch": [1236, 1254], "gelinkten": 1236, "christof": 1236, "sourcen": 1236, "crosszucompilieren": 1236, "gescheitert": 1236, "ungl\u00fccklichen": 1236, "umstand": 1236, "schulungsrechn": 1236, "neu": 1236, "aufzusetzen": 1236, "kompil": 1236, "verschwunden": 1236, "buildscript": 1236, "konnt": 1236, "kreativen": 1236, "wiederhergestellt": 1236, "v\u00f6llig": 1236, "sinnfrei": 1236, "distributionen": 1236, "compilieren": [1236, 1238], "architekturen": 1236, "versucht": [1236, 1237, 1239], "leben": [1236, 1252], "anzuwenden": 1236, "leut": 1236, "anzusehen": 1236, "wort": [1236, 1238], "gefallen": 1236, "hart": 1236, "garantien": 1236, "durchau": 1236, "gerechtfertigt": 1236, "gesch\u00fctz": 1236, "auffahren": 1236, "enthaltenen": 1236, "n\u00fctzen": 1236, "stichwort": [1236, 1245, 1252], "mittelweg": 1236, "diffundieren": 1236, "aufruft": 1236, "startet": 1236, "ausgekl\u00fcgelt": 1236, "funktionsweis": 1236, "jeher": 1236, "kennt": [1236, 1258], "gewaltig": 1236, "geschichtsbelastet": 1236, "tr\u00e4gt": 1236, "intelligent": [1236, 1245, 1252], "trotz": 1236, "behauptungen": 1236, "gar": 1236, "lieblingsseit": 1236, "linuxthemen": 1236, "zentrisch": 1236, "bourne shel": [1237, 1247], "\u00fcbel": 1237, "sprechen": [1237, 1245, 1252], "vollst\u00e4ndig": 1237, "shellprogrammierung": 1237, "ruf": 1237, "schmutzigen": 1237, "stattdessen": 1237, "hauch": 1237, "pervers": 1237, "\u00e4sthetik": 1237, "verpassen": 1237, "geschicht": 1237, "kram": 1237, "environmentvariablen": 1237, "kontrollkonstrukt": [1237, 1238], "hauptteil": 1237, "stringmanipul": 1237, "obskur": 1237, "konstrukt": [1237, 1247], "auskommt": 1237, "umgang": [1237, 1247], "bibel": 1238, "hinzuf\u00fcgen": 1238, "erfind": 1238, "tickt": 1238, "wozu": 1238, "grenzen": 1238, "vorlag": 1238, "didaktik": 1238, "erg\u00e4nzt": 1238, "kontext": 1238, "heutigen": 1238, "sprachkern": 1238, "unterrichten": 1238, "standardlibrari": 1238, "zugunsten": 1238, "bequemeren": 1238, "verzichten": 1238, "sprachdesign": 1238, "geachtet": 1238, "isoliert": 1238, "abseit": [1238, 1240, 1258], "mitbringt": 1238, "h\u00e4lt": 1238, "eignet": 1238, "hervorragend": [1238, 1245, 1253, 1258], "systemprogrammierung": 1238, "weglassen": 1238, "programmiert": [1238, 1240], "dementsprechend": [1238, 1258], "sinngem\u00e4ss": 1238, "aufgeteilt": 1238, "manipulieren": [1238, 1247], "maschineninstruktionen": 1238, "ausgef\u00fchrt": [1238, 1239], "geschwindigkeitsvorteil": 1238, "interpretierten": 1238, "nachteil": 1238, "verst\u00e4ndni": [1238, 1247, 1257], "speicherverwaltung": [1238, 1240, 1255], "integral": 1238, "zusammengesetzt": 1238, "speicherlayout": 1238, "wenigst": 1238, "worin": 1238, "programmstrukturierung": 1238, "deklar": 1238, "beliebtest": 1238, "unmeng": 1238, "flexibilit\u00e4t": [1238, 1255], "einbringen": 1238, "unbeliebtest": 1238, "fehlerm\u00f6glichkeiten": 1238, "verkettet": 1238, "fehlerszenarien": [1238, 1258], "absturz": 1238, "dahinsiechen": 1238, "debugginghilfen": 1238, "typumwandlungen": 1238, "hauptkritikpunkt": 1238, "sorglos": 1238, "integertypen": 1238, "breit": [1238, 1245], "regelwerk": 1238, "historisch": 1238, "aufarbeitung": 1238, "historischem": 1238, "ballast": 1238, "compileroptionen": 1238, "pr\u00e4prozessor": [1238, 1239], "leid": 1238, "grundz\u00fcgen": 1238, "gezeigt": [1238, 1247, 1252], "compilierung": 1238, "heutzutag": 1238, "wegzudenken": [1238, 1245], "damal": [1238, 1240], "programmen": [1238, 1239, 1254], "separat": 1238, "verbinden": 1238, "spielt": 1238, "archivieren": 1238, "linken": 1238, "programmgesundheit": 1238, "bedeutungen": 1238, "optimierungsm\u00f6glichkeiten": 1238, "memoryfehlern": 1238, "verwalten": 1238, "formatiert": 1238, "_und_": 1238, "komfort": 1238, "m\u00e4chtige": [1238, 1255], "jedoch": [1238, 1245, 1252, 1258], "weit": 1238, "fehlerimmunit\u00e4t": 1238, "allein": 1238, "verdienen": 1238, "erw\u00e4hnung": 1238, "stringbearbeitung": 1238, "heutig": 1238, "eigenwillig": 1238, "f\u00fclle": 1238, "erleichtern": 1238, "lauern": [1238, 1257], "gefahren": [1238, 1257, 1258], "sprachumfang": 1239, "angeht": 1239, "compiliert": 1239, "maschinencod": 1239, "pointern": 1239, "sofort": 1239, "beipflichten": 1239, "einmal": [1239, 1254, 1255, 1259], "beinharten": 1239, "typenkonvertierungen": 1239, "aufgesessen": 1239, "beleuchtet": [1239, 1257], "beschrittenen": 1239, "dunklen": 1239, "ecken": 1239, "widmet": 1239, "intensiv": 1239, "fehlersuch": 1239, "erkl\u00e4rungen": 1239, "sprachdefinit": 1239, "greifbar": 1239, "verdacht": 1239, "manch": 1239, "typkonversionen": 1239, "l\u00fccken": 1239, "typensystem": [1239, 1240], "techniken": [1239, 1245], "typensicherheit": 1239, "dunkl": 1239, "unn\u00f6tig": 1239, "programmhygien": 1239, "wege": 1239, "sauberen": 1239, "weisen": 1239, "optimierungstechniken": 1239, "anwenden": 1239, "optimierung": 1239, "erschweren": 1239, "lesbarkeit": 1239, "memoryzugriff": 1239, "ur": 1239, "beziehungsweis": 1239, "hardwareunterst\u00fctzung": 1239, "Ins": 1239, "kenntniss": [1239, 1240, 1248, 1254, 1255, 1257, 1258], "urspr\u00fcnglich": 1240, "erfunden": 1240, "leichter": 1240, "handhabbar": 1240, "erm\u00f6glichen": [1240, 1255], "ressourcenverwaltung": 1240, "kontrolliert": 1240, "mainstream": 1240, "einzug": 1240, "hie\u00df": 1240, "treffend": 1240, "seitdem": 1240, "vereinzelt": 1240, "soviel": 1240, "dampflokomot": 1240, "stellt": [1240, 1258], "vielfalt": 1240, "sprachkonstrukt": 1240, "genial": 1240, "gewagt": 1240, "behaupten": 1240, "anbelangt": 1240, "sprachmittel": 1240, "wichtigst": 1240, "n\u00e4mlich": 1240, "reichlich": [1240, 1245, 1252], "umstieg": 1240, "erw\u00e4gen": 1240, "embeddedbetriebssystem": 1240, "einsetzen": 1240, "vielerort": 1240, "datenkapselung": 1240, "objekten": 1240, "fallstrick": 1240, "korrektheit": 1240, "100ste": 1240, "strukturiert": 1240, "fehlerbehandlung": 1240, "generisch": 1240, "mechanismen": [1240, 1255, 1257, 1259], "mehrfachvererbung": 1240, "teilweis": 1240, "kapiteln": 1240, "unterschied": 1240, "erl\u00e4utert": [1240, 1245], "c++ 11": 1241, "enjoy": 1241, "overrrid": 1241, "coolest": 1241, "optinion": 1241, "oneshot": 1241, "communict": 1241, "unlearn": 1241, "inventor": 1242, "weren": 1243, "intricaci": 1243, "interdepend": 1243, "rudimentari": 1243, "graviti": 1244, "vocabulari": 1244, "confront": 1244, "reusab": 1244, "nicknam": 1244, "zentrum": [1245, 1252], "vollwertig": 1245, "selben": 1245, "betriessystemkonzept": 1245, "jahrzehnten": 1245, "bew\u00e4hrt": 1245, "automot": 1245, "sektor": 1245, "vertreten": 1245, "altbew\u00e4hrten": 1245, "konsequ": [1245, 1255], "ausbaut": 1245, "hardwareschnittstellen": 1245, "echtzeitf\u00e4higkeit": 1245, "dahint": 1245, "rundet": 1245, "hardwarebastelworkshop": 1245, "embeddedprogrammier": [1245, 1252], "l\u00e4nger": [1245, 1252], "normalen": [1245, 1252], "dateisystem": [1245, 1252], "versagt": [1245, 1252], "teuer": [1245, 1252], "erkauft": [1245, 1252], "testen": [1245, 1252, 1259], "hostsoftwar": [1245, 1252], "architekten": [1245, 1252], "plattformzusammensetzung": [1245, 1252], "entscheiden": [1245, 1252, 1259], "rechtfertigen": [1245, 1252], "logik": [1245, 1252], "steck": [1245, 1252], "beantworten": [1245, 1252, 1259], "eingeladen": [1245, 1252], "l\u00f6tmateri": [1245, 1252], "mitzubringen": [1245, 1252], "bastelei": 1245, "vorhandenen": [1245, 1252, 1259], "minicomputern": 1245, "prototypen": 1245, "desktopbetriebssystem": [1245, 1252], "verh\u00e4ltniss": [1245, 1252], "512mb": [1245, 1252], "m\u00fchsam": [1245, 1252], "produktivsystem": [1245, 1252], "ohnehin": [1245, 1252], "unangebracht": [1245, 1252], "anf\u00e4ng": [1245, 1252], "filesystemen": [1245, 1252], "durchzuf\u00fchren": 1245, "filedeskriptoren": [1245, 1247], "getrennt": 1245, "abl\u00e4uf": 1245, "adressraum": 1245, "sorgfalt": 1245, "bloss": 1245, "gef\u00e4chert": 1245, "gewissen": 1245, "szenarien": 1245, "steuerungen": 1245, "gef\u00e4hrlich": 1245, "umfangreich": 1245, "hauptthema": 1245, "dennoch": 1245, "n\u00fctzlich": 1245, "haub": 1245, "schalten": [1245, 1252], "ausg\u00e4ngen": [1245, 1252], "abfragen": [1245, 1252], "eing\u00e4ngen": [1245, 1252], "dumm": [1245, 1252], "ereignisgesteuert": [1245, 1252], "mikrocontrollern": [1245, 1252], "aufgaben": [1245, 1252], "temperaturmessung": [1245, 1252], "expandierung": [1245, 1252], "ausgelagert": [1245, 1252, 1255], "dediziert": [1245, 1252], "angesteuert": [1245, 1252], "gegeben": [1245, 1252, 1254, 1255], "driverframework": 1245, "netzwerkstack": [1245, 1252], "einpasst": [1245, 1252], "schnittstellen": [1245, 1255], "implementationssprachen": 1245, "hardwareerfahrung": [1245, 1252], "linux kernel": 1246, "kernel driv": [1246, 1256], "wait queu": 1246, "block devic": 1246, "interrupt handl": 1246, "dose": 1246, "curios": 1246, "userpac": 1246, "massiv": 1246, "vital": 1246, "einblick": 1247, "gingen": 1247, "vieler": 1247, "demosess": 1247, "vertrackt": 1247, "entmystifiziert": 1247, "gef\u00fcrchteten": 1247, "erlernt": 1247, "inbetriebsetz": 1247, "hardwareingenieur": 1247, "angehend": 1247, "administratoren": 1247, "editieren": 1247, "bl\u00e4ttern": 1247, "textdateien": 1247, "schnittstel": 1247, "kombinationen": 1247, "kombin": 1247, "abschweifen": 1247, "programmierkenntniss": 1247, "zwingend": [1247, 1254], "make gnu": 1248, "gnu mak": 1248, "build manag": 1248, "seiner": [1248, 1255, 1259], "m\u00e4chtigen": 1248, "daran": 1248, "wendet": 1248, "interessiert": 1248, "gr\u00f6\u00dfere": 1248, "gebaut": 1248, "komplizierten": 1248, "griff": 1248, "regeln": 1248, "selbstdefiniert": 1248, "gewiss": [1248, 1253, 1255], "fertigkeit": 1248, "hemmenhofen": 1252, "gleichnamigen": 1252, "gerufen": 1252, "produktivem": 1252, "n\u00e4herzubringen": 1252, "spielekonsumenten": 1252, "kinder": 1252, "enden": 1252, "erstem": 1252, "breiteren": 1252, "drauf": 1252, "vorhandensein": 1252, "basisinfrastruktur": 1252, "vielem": 1252, "hervorragenden": 1252, "gestandenen": 1252, "obwohl": [1252, 1255], "sprachunabh\u00e4ngig": 1252, "brauchen": 1252, "computerspielen": 1252, "spielerischen": 1252, "f\u00fchren": 1252, "w\u00e4hlt": 1252, "lm": 1252, "netzwerkprotokol": [1252, 1258], "behaupt": 1253, "allen": 1253, "gro\u00dfkopferten": 1253, "kommerziellen": 1253, "systemen": 1253, "perforc": 1253, "etabliert": 1253, "erh\u00e4ltlich": 1253, "nachfolg": 1253, "abgel\u00f6st": 1253, "prim\u00e4r": 1253, "publikum": 1253, "sekund\u00e4r": 1253, "versionieren": 1253, "arbeitsweis": 1253, "bereinigung": 1253, "strategien": 1253, "programmierern": 1253, "vertrautheit": 1253, "vorteil": [1253, 1254], "umsteig": 1254, "\u00e4rgerni": 1254, "schl\u00e4gt": 1254, "ausgekl\u00fcgeltst": 1254, "systemcal": [1254, 1255, 1258], "sogenannt": 1254, "inspizieren": 1254, "grundprinzip": [1254, 1258], "sammlung": [1254, 1255], "ausf\u00fchrbar": 1254, "bedient": 1254, "handhabung": 1254, "gew\u00f6hnungsbed\u00fcrftig": 1254, "filedescriptoren": 1254, "lowlevel": 1254, "tiefen": 1255, "steigen": 1255, "alltagsprogrammier": 1255, "normalerweis": 1255, "verborgen": 1255, "hochperformant": 1255, "anwendungen": 1255, "modernen": [1255, 1257], "bertriebssystemen": 1255, "sogenanntem": 1255, "virtuellen": 1255, "speicherbereich": 1255, "instanzen": 1255, "desselben": 1255, "hauptspeich": 1255, "speicherzugriff": 1255, "schutzmechanismen": 1255, "miteinand": 1255, "kommunizieren": [1255, 1258], "semaphoren": 1255, "steinalt": 1255, "\u00fcberlebt": 1255, "keinesweg": 1255, "fehlerfrei": 1255, "benutzen": 1255, "verpasst": 1255, "beruht": 1255, "ladbar": 1255, "ressourcenschonung": 1255, "wasserdichten": 1255, "upgradepfad": 1255, "grundkenntni": [1255, 1257, 1258], "memory manag": 1256, "tcp-ip": 1256, "unverst\u00e4ndlich": 1257, "ungeachtet": 1257, "effizient": 1257, "propagiert": 1257, "soliden": 1257, "unbedacht": 1257, "handeln": 1257, "lebenszyklu": 1257, "gestartet": 1257, "versuchung": 1257, "gewalt": 1257, "terminieren": 1257, "konsequenzen": 1257, "eigenschaften": 1257, "racecondit": 1257, "vermeidung": 1257, "\u00fcberal": 1257, "vermutet": 1257, "integeroperationen": 1257, "kommunikationsmechanismen": 1257, "werkzeugkasten": 1257, "kommunikationskan\u00e4l": 1257, "niemal": 1257, "reihen": 1257, "traditionellen": 1257, "aufgenommen": 1257, "codebasi": 1257, "verzweigt": 1257, "ansehnlich": 1257, "realtimef\u00e4higkeiten": 1257, "priorit\u00e4ten": 1257, "f\u00fcgt": 1258, "benutzend": 1258, "programmierparadigma": 1258, "dar": 1258, "beschr\u00e4nkt": 1258, "streamverbindungen": 1258, "verbindungsaufnahm": 1258, "datagramm": 1258, "verbindungslos": 1258, "adressfamilien": 1258, "auffassung": 1258, "adress": 1258, "endpoint": 1258, "nummern": 1258, "adressen": 1258, "verbindungen": 1258, "hilfsfunktionen": 1258, "adresskonvertierung": 1258, "ipv6": 1258, "\u00e4quivalent": 1258, "ungleich": 1258, "ressourcenschonend": 1258, "pfadnamen": 1258, "bedienbar": 1258, "mittlerweis": 1258, "eingepasst": 1258, "angenehm": 1258, "umzugehen": 1258, "widmen": 1258, "verbundenen": 1258, "auszusetzen": 1258, "reagiert": 1258, "gelesen": 1258, "eventgetrieben": 1258, "knopfdruck": 1259, "abnimmt": 1259, "zahlreichen": 1259, "abgeklopft": 1259, "kaputtmachen": 1259, "konstruktiv": 1259, "einfachheit": 1259, "klarzumachen": 1259, "umzusetzen": 1259, "anstatt": 1259, "auszustatten": 1259, "gedanken": 1259, "erkannt": 1259, "entscheidung": 1259, "verbockt": 1259, "softwareentwickl": 1259, "jedwed": 1259, "stabilen": 1259, "abliefern": 1259, "entscheidungstr\u00e4g": 1259, "vorgesetzt": 1259, "schl\u00fcssige": 1259, "kan\u00e4l": 1259, "etablieren": 1259, "unittestframework": 1259, "tragen": 1259, "schwerf\u00e4llig": 1259, "halben": 1259, "\u00fcbrige": 1259, "zurechtzufinden": 1259, "vortragend": 1259, "aufgrund": 1259, "aufwarten": 1259, "beibringen": 1259, "\u00fcppigen": 1259, "verbergen": 1259, "pr\u00e4ferierten": 1259, "vortragenden": 1259, "vl53l0x": 165, "photon": 165, "iio": 165, "proxim": 165}, "objects": {}, "objtypes": {}, "objnames": {}, "titleterms": {"kontakt": 0, "navig": [0, 948], "googl": 0, "map": [0, 7, 144, 156, 238, 243, 246, 249, 252, 268, 278, 342, 392, 608, 609, 637, 698, 699, 791, 792, 858, 1005], "streetview": 0, "curriculum": [1, 75, 76], "vita": 1, "\u00fcber": [2, 223, 233, 238, 246, 254], "mich": [2, 240], "projekt": [3, 23], "au": 3, "selbstst\u00e4ndig": 3, "t\u00e4tigkeit": 3, "nichtselbstst\u00e4ndig": 3, "skill": [4, 187], "angebot": 5, "In": [5, 32, 45, 124, 173, 195, 197, 198, 200, 230, 233, 294, 295, 297, 316, 318, 341, 354, 372, 380, 415, 506, 508, 509, 511, 514, 519, 522, 530, 596, 601, 603, 644, 648, 659, 660, 661, 662, 663, 664, 689, 747, 751, 755, 785, 786, 792, 805, 819, 865, 914, 915, 923, 979, 1029, 1062, 1064, 1079, 1086, 1127, 1241], "hous": 5, "schulungen": [5, 1235], "zu": [5, 23, 216, 233], "meiner": 5, "person": [5, 291, 555, 755], "schwerpunk": 5, "c": [5, 7, 69, 70, 71, 72, 73, 99, 109, 110, 112, 113, 126, 152, 155, 162, 187, 201, 216, 217, 233, 243, 251, 252, 268, 293, 294, 295, 297, 298, 306, 315, 317, 354, 355, 360, 373, 374, 376, 380, 381, 400, 406, 415, 424, 464, 465, 502, 508, 535, 541, 548, 590, 596, 607, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 644, 646, 652, 653, 657, 658, 659, 671, 677, 679, 716, 724, 740, 742, 743, 744, 747, 748, 780, 781, 785, 792, 793, 801, 810, 815, 820, 839, 988, 1008, 1026, 1029, 1132, 1238, 1239, 1240, 1241, 1242, 1244], "python": [5, 8, 11, 59, 61, 62, 63, 64, 65, 66, 67, 92, 97, 138, 183, 210, 213, 222, 223, 225, 226, 227, 229, 231, 233, 236, 238, 241, 247, 248, 250, 253, 255, 257, 260, 261, 262, 263, 264, 266, 267, 269, 272, 273, 276, 279, 281, 284, 286, 287, 288, 289, 290, 292, 294, 295, 297, 299, 300, 301, 302, 303, 304, 309, 311, 312, 316, 318, 319, 320, 321, 322, 323, 324, 325, 328, 329, 330, 331, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 372, 373, 397, 400, 402, 415, 743, 771, 785, 792, 988, 990, 1088, 1091, 1095, 1110, 1111, 1112, 1114, 1116, 1118, 1126, 1137, 1141, 1186, 1187, 1188, 1201, 1202, 1204, 1214, 1215, 1216, 1217, 1218, 1249, 1250], "linux": [5, 81, 82, 83, 99, 112, 113, 126, 159, 162, 165, 190, 195, 203, 205, 206, 208, 215, 230, 232, 237, 242, 296, 305, 306, 326, 327, 370, 371, 400, 402, 415, 417, 864, 916, 917, 920, 921, 927, 984, 986, 990, 991, 992, 994, 1007, 1025, 1048, 1065, 1236, 1246, 1247, 1254, 1255, 1256, 1257, 1258], "schulungsstil": 5, "preis": 5, "cours": [6, 11, 12, 59, 61, 62, 63, 80, 147, 148, 183, 185, 206, 242, 251, 295, 297, 305, 334, 337, 399, 505, 1187, 1243, 1246], "materi": [6, 24, 28, 30, 66, 125, 162, 165, 213, 215, 230, 251, 396, 411, 412, 416, 505, 1186, 1187, 1208], "einleitung": [7, 243], "datatyp": [7, 233, 238, 240, 243, 246, 255, 259, 262, 265, 270, 272, 278, 282, 285, 287, 288, 300, 302, 303, 309, 310, 312, 320, 322, 323, 324, 328, 329, 330, 340, 342, 344, 346, 350, 351, 352, 356, 357, 358, 362, 363, 364, 366, 367, 368, 392, 420, 470, 473, 519, 1089, 1118, 1119, 1123], "number": [7, 243, 246, 249, 270, 282, 285, 392, 522, 722, 771, 843, 850, 851, 1015, 1090, 1106, 1109, 1118, 1126, 1127, 1149, 1152, 1162, 1163, 1205, 1209, 1210, 1233], "integ": [7, 223, 233, 238, 243, 246, 270, 272, 282, 285, 291, 303, 310, 330, 342, 346, 352, 358, 368, 392, 438, 485, 490, 727, 1097, 1118, 1127], "string": [7, 209, 210, 216, 223, 233, 240, 243, 246, 249, 254, 255, 259, 262, 265, 270, 272, 275, 278, 282, 285, 287, 288, 291, 300, 303, 307, 310, 324, 330, 342, 346, 352, 358, 364, 368, 373, 389, 391, 392, 419, 432, 433, 439, 445, 518, 519, 520, 524, 535, 707, 708, 709, 722, 726, 754, 755, 819, 820, 1118, 1131, 1132, 1133, 1169, 1212], "compound": [7, 233, 243, 255, 259, 262, 265, 270, 272, 278, 282, 285, 288, 300, 320, 324, 330, 342, 346, 358, 364, 368, 473, 1119], "list": [7, 11, 23, 209, 210, 223, 233, 240, 243, 246, 249, 254, 255, 259, 262, 265, 270, 272, 278, 282, 285, 288, 300, 303, 310, 320, 324, 330, 342, 352, 358, 364, 368, 478, 519, 535, 596, 620, 637, 651, 694, 743, 756, 793, 848, 875, 876, 877, 899, 970, 1083, 1086, 1089, 1090, 1099, 1119, 1127, 1134, 1164, 1165, 1216], "arrai": [7, 211, 233, 243, 419, 428, 432, 470, 472, 482, 495, 625, 677, 679, 687, 732, 747, 758, 797], "javascript": [7, 243, 282], "std": [7, 109, 144, 156, 243, 252, 268, 294, 295, 297, 354, 355, 373, 374, 544, 603, 608, 609, 619, 637, 660, 661, 662, 663, 664, 672, 678, 679, 680, 681, 691, 698, 699, 709, 722, 726, 736, 739, 743, 746, 748, 755, 791, 792, 793, 797, 799, 802, 803, 804, 806, 807, 812, 813, 814, 815, 817, 818, 819, 820, 823, 825, 829, 830, 831, 835, 838], "vector": [7, 109, 156, 243, 603, 619, 637, 644, 660, 678, 679, 680, 681, 695, 739, 748, 793, 823, 1041], "java": [7, 243], "dictionari": [7, 209, 223, 233, 238, 240, 243, 246, 254, 255, 259, 262, 265, 270, 272, 275, 278, 282, 285, 288, 291, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 392, 1083, 1087, 1100, 1119, 1135, 1156, 1183], "kei": [7, 200, 243, 291, 358, 392, 701, 702, 948, 999, 1001], "valu": [7, 62, 228, 243, 314, 315, 358, 392, 430, 486, 522, 663, 1026, 1048, 1120], "set": [7, 38, 62, 228, 233, 238, 243, 246, 254, 255, 259, 262, 265, 270, 272, 278, 282, 285, 288, 300, 303, 310, 320, 324, 330, 342, 346, 352, 358, 364, 368, 526, 944, 945, 1060, 1083, 1119, 1136, 1175, 1200, 1210], "mathematisch": [7, 243], "mengen": [7, 233, 243], "while": [7, 210, 223, 233, 243, 262, 270, 272, 275, 278, 285, 288, 310, 352, 358, 364, 368, 455, 456, 527, 885, 890, 891, 1122, 1149, 1173], "function": [7, 43, 197, 210, 228, 233, 243, 246, 249, 252, 255, 259, 262, 270, 272, 278, 282, 287, 288, 291, 294, 295, 297, 299, 303, 310, 316, 324, 334, 335, 337, 340, 341, 342, 344, 350, 351, 352, 354, 355, 356, 357, 358, 362, 363, 364, 366, 367, 368, 372, 373, 380, 397, 430, 432, 437, 464, 466, 468, 469, 474, 506, 522, 526, 528, 534, 586, 620, 644, 653, 658, 660, 665, 669, 685, 726, 743, 750, 753, 754, 755, 756, 765, 795, 807, 808, 848, 849, 911, 1006, 1008, 1046, 1082, 1084, 1085, 1087, 1089, 1090, 1109, 1126, 1128, 1129, 1130, 1138, 1161, 1163, 1167, 1170, 1178, 1180, 1212], "basic": [8, 62, 72, 92, 128, 150, 151, 189, 201, 210, 222, 227, 229, 230, 231, 232, 236, 237, 241, 242, 251, 260, 263, 266, 273, 279, 284, 287, 290, 296, 302, 305, 309, 312, 319, 322, 323, 324, 326, 327, 328, 329, 330, 331, 334, 337, 340, 341, 342, 344, 345, 346, 350, 351, 352, 353, 356, 357, 358, 359, 362, 363, 366, 367, 368, 369, 370, 371, 372, 375, 376, 378, 379, 380, 392, 415, 460, 464, 467, 473, 500, 518, 534, 543, 544, 598, 601, 666, 671, 674, 677, 678, 680, 684, 687, 698, 704, 713, 750, 758, 792, 797, 801, 802, 803, 804, 838, 850, 851, 852, 913, 916, 917, 920, 921, 931, 970, 981, 986, 995, 1007, 1014, 1022, 1030, 1062, 1085, 1086, 1139, 1142, 1176, 1195, 1206, 1207, 1227, 1228, 1229, 1247, 1250], "2021": [8, 11, 125, 234, 236, 239, 241, 242, 244, 247, 250, 251, 252, 253, 257, 260, 262, 263, 265, 266, 268, 389, 390, 397, 400, 401, 402, 403, 404, 405, 406, 415], "xx": 8, "yy": 8, "train": [8, 24, 25, 26, 27, 28, 183, 187, 197, 206, 211, 226, 227, 229, 230, 231, 232, 234, 236, 237, 241, 244, 247, 250, 251, 252, 253, 257, 260, 269, 273, 276, 279, 281, 284, 287, 290, 299, 302, 309, 312, 416, 1187, 1193], "inform": [8, 39, 175, 185, 197, 222, 225, 226, 227, 229, 230, 231, 232, 234, 236, 237, 241, 244, 247, 250, 251, 252, 253, 257, 260, 269, 273, 276, 279, 281, 284, 287, 290, 299, 302, 309, 312, 376, 388, 397, 500, 805, 1116, 1187], "\u00fcberblick": [8, 234, 244, 253, 269, 281, 1240], "log": [8, 107, 170, 191, 226, 227, 230, 231, 239, 241, 242, 244, 247, 251, 253, 257, 260, 269, 281, 290, 397, 410, 411, 914, 915, 923], "tag": [8, 217, 236, 240, 244, 247, 253, 269, 281, 282], "1": [8, 19, 23, 37, 75, 80, 99, 109, 116, 119, 120, 123, 126, 161, 162, 163, 192, 195, 207, 215, 217, 222, 226, 227, 229, 230, 231, 233, 234, 236, 241, 242, 244, 247, 251, 252, 253, 257, 260, 263, 266, 269, 273, 281, 306, 309, 312, 315, 316, 317, 318, 319, 323, 327, 329, 334, 340, 341, 344, 345, 355, 367, 371, 372, 374, 376, 379, 396, 398, 399, 406, 413, 415, 418, 419, 420, 422, 426, 430, 439, 441, 442, 443, 444, 448, 449, 452, 455, 461, 462, 463, 464, 465, 468, 470, 474, 478, 480, 482, 485, 486, 487, 488, 490, 491, 493, 494, 500, 508, 544, 547, 549, 585, 647, 649, 656, 667, 670, 677, 679, 761, 766, 807, 812, 818, 834, 835, 846, 851, 858, 869, 879, 948, 987, 988, 994, 1003, 1017, 1030, 1031, 1033, 1035, 1037, 1038, 1049, 1056, 1060, 1063, 1064, 1081, 1089, 1094, 1115, 1117, 1118, 1124, 1127, 1132, 1133, 1135, 1136, 1137, 1138, 1201, 1212, 1213, 1236], "2": [8, 19, 23, 37, 76, 80, 99, 109, 114, 115, 116, 119, 123, 126, 162, 164, 165, 166, 192, 195, 217, 222, 223, 226, 227, 229, 230, 231, 233, 236, 240, 241, 242, 244, 247, 251, 252, 253, 257, 260, 262, 263, 266, 269, 273, 281, 306, 309, 312, 315, 316, 317, 318, 319, 323, 327, 334, 340, 341, 344, 345, 351, 355, 367, 371, 372, 374, 376, 379, 411, 413, 415, 418, 419, 420, 422, 426, 430, 439, 441, 442, 443, 444, 448, 449, 452, 455, 461, 462, 464, 465, 468, 470, 474, 478, 480, 482, 485, 486, 487, 488, 490, 491, 493, 494, 500, 509, 544, 547, 549, 585, 634, 647, 649, 656, 667, 670, 677, 679, 762, 767, 807, 812, 818, 834, 835, 851, 858, 879, 948, 987, 988, 994, 1003, 1017, 1030, 1031, 1033, 1035, 1037, 1038, 1049, 1056, 1060, 1063, 1064, 1077, 1081, 1089, 1094, 1115, 1117, 1118, 1124, 1126, 1127, 1133, 1135, 1136, 1137, 1138, 1197, 1199, 1200, 1201, 1212, 1213], "live": [8, 42, 44, 45, 209, 212, 234, 244, 247, 257, 306, 515, 642, 682, 683, 685, 686, 689, 690, 691, 703, 743, 754, 787, 788, 815, 817, 918, 945, 1009, 1027], "hack": [8, 42, 44, 45, 209, 212, 234, 244, 247, 257, 306, 309, 313, 316, 319, 345, 642, 682, 683, 685, 686, 689, 690, 691, 703, 743, 754, 787, 788, 815, 817, 946, 1027], "jupyt": [8, 9, 40, 171, 234, 235, 239, 240, 241, 244, 245, 247, 248, 257, 258, 260, 261, 263, 264, 267, 269, 271, 274, 277, 280, 283, 286, 288, 289, 292, 301, 304, 307, 311, 320, 321, 325, 331, 336, 339, 342, 343, 346, 347, 353, 369, 392, 1193, 1194], "notebook": [8, 9, 40, 171, 229, 234, 235, 239, 240, 241, 244, 245, 247, 248, 250, 257, 258, 260, 261, 263, 264, 265, 267, 269, 271, 274, 277, 280, 283, 286, 288, 289, 292, 301, 304, 307, 311, 320, 321, 325, 331, 336, 339, 342, 343, 346, 347, 353, 369, 392, 397, 1191, 1193, 1194], "link": [8, 23, 39, 170, 171, 193, 211, 222, 225, 227, 229, 231, 234, 236, 241, 242, 244, 253, 257, 260, 263, 269, 276, 287, 290, 323, 329, 402, 404, 478, 480, 750, 764, 771, 789, 796, 800, 864, 875, 876, 927, 948, 969, 987, 994, 1002, 1079, 1080, 1111, 1142, 1143, 1188, 1204, 1206, 1207, 1209, 1210, 1211, 1212, 1219, 1224], "programmierung": [9, 11, 209, 234, 235, 244, 245, 253, 269, 271, 281, 283, 415], "grundlagen": [9, 11, 222, 233, 234, 235, 244, 245, 247, 248, 253, 257, 261, 264, 267, 269, 271, 281, 283, 286, 289, 292, 301, 304, 325, 415], "detail": [10, 80, 242, 246, 278, 285, 317, 364, 368, 392, 414, 490, 588, 678, 1117], "content": [11, 24, 37, 147, 148, 185, 187, 189, 190, 191, 192, 193, 194, 195, 196, 205, 214, 218, 219, 249, 399, 503, 520, 625, 628, 634, 637, 643, 725, 803, 916, 937, 950, 956, 962, 965, 982, 990, 991, 998, 1007, 1023, 1025, 1027, 1042, 1052, 1055, 1070, 1090, 1146, 1147, 1151, 1160, 1174, 1181, 1228, 1230, 1233, 1241, 1244, 1246], "anhand": [11, 233, 253, 269, 281, 415, 1247], "von": [11, 23, 204, 209, 213, 216, 223, 233, 240, 253, 254, 269, 281, 368, 392, 415, 1247], "12": [11, 23, 45, 66, 127, 128, 131, 139, 144, 213, 232, 233, 237, 244, 252, 265, 266, 268, 299, 350, 351, 352, 355, 356, 357, 358, 359, 397, 402, 406, 408, 415], "und": [11, 23, 203, 207, 223, 233, 234, 238, 240, 244, 246, 249, 253, 269, 272, 278, 281, 285, 291, 358, 368, 398, 415, 440, 449, 1240, 1251], "13": [11, 23, 41, 45, 154, 200, 222, 233, 234, 244, 297, 306, 309, 310, 312, 370, 371, 415], "4": [11, 23, 109, 192, 217, 226, 229, 233, 241, 242, 244, 247, 251, 252, 269, 281, 306, 374, 406, 415, 420, 478, 482, 488, 544, 547, 649, 768, 1089], "templat": [12, 144, 156, 251, 268, 317, 380, 607, 620, 621, 622, 623, 639, 640, 641, 669, 670, 671, 677, 710, 757, 760, 765, 767, 795, 829], "descript": [12, 61, 63, 67, 435, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 555, 642, 650, 665, 668, 671, 707, 712, 721, 723, 727, 729, 730, 731, 732, 733, 734, 735, 736, 738, 739, 741, 783, 784, 808, 816, 821, 833, 837, 839, 982, 990, 991, 1045], "sidebar": [12, 37], "metadata": [12, 294, 295, 297, 970], "about": [13, 109, 187, 206, 265, 270, 282, 300, 303, 309, 313, 330, 337, 352, 357, 358, 364, 367, 368, 376, 539, 748, 785, 977, 1079, 1131, 1134, 1135, 1136], "thi": [13, 32, 37, 127, 131, 132, 134, 137, 139, 143, 170, 192, 197, 198, 200, 201, 211, 220, 656, 670, 786, 906, 986, 1009, 1062, 1080, 1087, 1089], "site": [13, 28, 32, 170, 194, 196, 220], "licens": 13, "gplv3": 13, "github": [13, 124, 144, 162, 165, 194, 196, 226, 227, 239, 247, 397, 585, 599, 1188], "sphinx": [13, 40, 171, 174, 196], "instal": [13, 60, 66, 134, 147, 155, 171, 193, 197, 201, 205, 218, 219, 222, 247, 251, 252, 332, 348, 397, 402, 417, 537, 862, 1005, 1060, 1072, 1077, 1078, 1111, 1142, 1143, 1175, 1188, 1204, 1221, 1223, 1228, 1230, 1243], "instruct": [13, 481, 812, 1033, 1063, 1081], "pip": [13, 323], "venv": [13, 323], "work": [13, 17, 99, 124, 126, 162, 169, 173, 178, 192, 226, 257, 295, 297, 314, 315, 316, 317, 404, 498, 499, 500, 599, 670, 838, 906, 907, 944, 947, 951, 1077], "progress": [13, 17, 169], "more": [13, 192, 210, 223, 262, 265, 270, 278, 282, 285, 287, 299, 300, 302, 303, 306, 308, 309, 312, 318, 319, 322, 323, 328, 329, 330, 337, 340, 344, 350, 351, 352, 356, 357, 358, 362, 363, 364, 366, 367, 368, 372, 376, 380, 397, 420, 426, 449, 465, 467, 481, 491, 524, 531, 534, 539, 649, 659, 662, 669, 682, 688, 743, 785, 786, 790, 807, 825, 895, 925, 926, 927, 931, 932, 977, 1004, 1046, 1084, 1086, 1088, 1131, 1134, 1135, 1136, 1187, 1196, 1221, 1233], "opentrain": [14, 23], "draft": [15, 833, 982, 1141], "topic": [15, 21, 75, 76, 100, 101, 103, 104, 105, 106, 144, 186, 222, 226, 229, 250, 251, 252, 263, 268, 287, 290, 306, 309, 312, 315, 316, 340, 344, 354, 355, 375, 376, 378, 379, 380, 387, 401, 405, 406, 415, 435, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 517, 548, 591, 592, 593, 594, 595, 596, 597, 600, 642, 650, 665, 668, 671, 687, 693, 697, 705, 710, 712, 715, 721, 740, 741, 745, 752, 759, 770, 783, 784, 794, 799, 808, 816, 821, 833, 837, 839, 840, 841, 864, 985, 1000, 1018, 1020, 1039, 1045, 1066, 1073, 1074, 1089, 1094, 1102, 1141, 1190, 1194, 1198, 1202, 1204, 1208, 1220, 1226], "miscellan": [16, 168, 183, 187, 206, 210, 230, 259, 270, 272, 278, 288, 294, 295, 299, 303, 306, 315, 318, 319, 324, 329, 330, 340, 341, 344, 351, 352, 354, 358, 368, 373, 524, 620, 642, 721, 725, 757, 821, 1024, 1035, 1037, 1133, 1202], "s5": [17, 18, 187], "integr": [17, 128, 130, 133, 512, 747, 763], "web": [17, 95, 96, 188], "slide": [17, 18, 30, 45, 66, 210, 400, 412, 1056, 1060], "implement": [17, 127, 131, 132, 134, 135, 137, 139, 143, 144, 152, 278, 341, 354, 383, 389, 549, 556, 566, 571, 581, 582, 583, 584, 588, 596, 601, 602, 646, 647, 652, 658, 660, 718, 743, 754, 845, 848, 867, 903, 1084, 1090, 1106, 1166], "note": [17, 37, 60, 138, 168, 205, 383, 507, 513, 515, 530, 531, 542, 933], "todo": [17, 187, 216, 219, 230, 236, 384, 385, 386, 403, 505, 517, 620, 621, 624, 627, 630, 633, 636, 639, 844, 848, 856, 888, 1051, 1054, 1058, 1140, 1203, 1227, 1232], "test": [18, 37, 42, 43, 44, 45, 50, 73, 127, 131, 132, 134, 135, 137, 139, 143, 152, 153, 201, 222, 252, 276, 287, 290, 299, 308, 309, 312, 313, 314, 318, 319, 332, 334, 337, 340, 341, 344, 348, 367, 372, 373, 374, 375, 376, 378, 379, 380, 405, 411, 415, 506, 532, 549, 569, 585, 599, 601, 602, 662, 726, 848, 867, 900, 993, 1022, 1075, 1078, 1143, 1176, 1183, 1184, 1185, 1193, 1221, 1222, 1226, 1228, 1230, 1233, 1243, 1259], "level": [19, 494], "head": [19, 37, 875, 979, 1196], "imag": [19, 211, 230, 1077], "screencast": [20, 184], "written": [21, 126, 160, 645, 648], "new": [21, 135, 144, 186, 252, 268, 294, 295, 297, 354, 355, 372, 373, 415, 513, 530, 588, 625, 742, 743, 783, 820, 839, 867, 900, 1205], "write": [21, 42, 50, 58, 189, 520, 588, 625, 652, 765, 780, 803, 845, 1014, 1021, 1107, 1137, 1144, 1213], "netide": [22, 23], "f\u00f6rderantrag": [22, 23], "daten": [23, 246, 254], "antragsteller_in": 23, "allgemein": 23, "projektnam": 23, "untertitel": 23, "3": [23, 66, 99, 109, 116, 126, 144, 153, 154, 158, 162, 192, 217, 226, 227, 229, 230, 231, 232, 233, 236, 241, 242, 247, 251, 252, 253, 255, 257, 262, 263, 266, 269, 273, 281, 288, 306, 309, 312, 315, 317, 318, 319, 323, 327, 329, 340, 341, 342, 344, 345, 351, 355, 367, 371, 372, 374, 376, 379, 415, 420, 470, 474, 478, 482, 488, 490, 491, 493, 494, 544, 547, 549, 585, 649, 763, 835, 1017, 1033, 1037, 1038, 1089, 1118, 1126, 1132, 1137], "allgemeinverst\u00e4ndlich": 23, "kurzbeschreibung": 23, "de": [23, 299, 415, 913], "anschlussf\u00f6rderung": 23, "die": [23, 53, 198, 216, 254, 380, 1248], "besonder": [23, 233], "bedeutung": 23, "ihr": 23, "f\u00fcr": [23, 217, 223, 233, 415, 1239], "da": [23, 213, 223, 240, 249, 282], "internet": 23, "internetnutzung": 23, "IN": 23, "\u00f6sterreich": 23, "zielgrupp": 23, "projektziel": 23, "5": [23, 192, 210, 217, 222, 223, 225, 233, 251, 252, 254, 306, 406, 415, 478, 488, 544, 547, 769, 914, 915], "l\u00f6sung": [23, 223], "beschreibung": 23, "der": [23, 163, 166, 233, 238, 254, 398, 415, 1236], "probleml\u00f6sung": 23, "wesentlich": 23, "element": [23, 233, 270, 288, 290, 603, 605, 606, 610, 698, 700, 701, 1123], "ein": [23, 223, 254, 1247, 1252], "nachhaltigen": 23, "impact": 23, "nach": [23, 290], "projektend": 23, "6": [23, 144, 147, 148, 149, 150, 151, 155, 156, 157, 233, 234, 254, 255, 288, 415, 478, 488, 544, 547, 1132, 1251], "umfeldanalys": 23, "wa": [23, 222, 238, 732], "ist": [23, 223], "stand": 23, "technik": 23, "method": [23, 246, 249, 259, 270, 272, 275, 278, 288, 303, 315, 324, 330, 342, 346, 352, 358, 364, 368, 380, 389, 391, 399, 519, 598, 634, 646, 653, 654, 655, 658, 660, 662, 665, 717, 720, 729, 733, 801, 802, 803, 804, 805, 829, 846, 881, 883, 897, 1104, 1106, 1132, 1133, 1134, 1222], "wissen": 23, "welch": 23, "ander": [23, 209, 398], "l\u00f6sungen": 23, "vorhaben": 23, "den": [23, 198, 238, 254], "genannten": 23, "problemen": 23, "gibt": [23, 233], "e": [23, 497, 802], "schon": 23, "7": [23, 226, 233, 234, 254, 415, 478, 488, 1251], "alleinstellungsmerkm": 23, "8": [23, 233, 234, 253, 254, 415, 478, 488, 994, 1201, 1251], "projektergebniss": 23, "erforderlich": 23, "lizenzen": 23, "dritter": 23, "9": [23, 226, 227, 233, 234, 254, 415, 478, 488, 1089, 1236, 1251], "erfolgreich": 23, "projektabschluss": 23, "sonstigen": 23, "aktivit\u00e4ten": 23, "im": [23, 233, 259, 272, 285, 288, 303, 310, 324, 330, 342, 346, 364, 368, 415, 1127], "projektbereich": 23, "angaben": [23, 163, 166], "zur": [23, 163, 166, 204, 223, 233], "fachlichen": 23, "eignung": 23, "mitarbeiterinnen": 23, "projektkernteam": 23, "erfahrung": 23, "vorgesehenen": 23, "projektleiterin": 23, "zum": [23, 209, 254], "maxim": 23, "min\u00fctigen": 23, "video": [23, 24, 31, 241, 299, 329, 345, 751], "risiken": 23, "erfolgskriterien": 23, "am": [23, 223, 282, 415], "angestrebt": 23, "jahr": 23, "10": [23, 45, 101, 102, 144, 176, 207, 210, 215, 226, 229, 233, 268, 269, 296, 297, 298, 299, 300, 314, 337, 338, 340, 341, 343, 397, 401, 402, 403, 407, 415, 478, 605, 914, 915], "umsetzung": 23, "einj\u00e4hrig": 23, "wichtig": 23, "partner_innen": 23, "arbeitsschwerpunkt": 23, "ressourcen": 23, "nutzer_innen": 23, "kommunikationskan\u00e4l": 23, "11": [23, 45, 127, 131, 139, 143, 144, 208, 213, 231, 232, 233, 262, 263, 268, 293, 297, 299, 302, 303, 337, 344, 345, 346, 347, 348, 349, 350, 351, 352, 370, 371, 372, 374, 375, 376, 378, 380, 404, 405, 415, 478, 620, 744, 747, 780, 781, 792, 801, 839], "projekttermin": 23, "termin": [23, 918, 1031, 1095], "projektstart": 23, "kosten": 23, "finanzierung": 23, "projektkosten": 23, "personalkosten": 23, "sonstig": 23, "gesamtkosten": 23, "wir": [23, 238, 254], "beantragen": 23, "folgend": 23, "f\u00f6rderung": 23, "restlichen": 23, "werden": [23, 233], "finanziert": 23, "durch": [23, 223], "sonderprei": 23, "14": [23, 45, 127, 128, 131, 139, 144, 149, 213, 222, 233, 234, 237, 251, 293, 415], "erg\u00e4nzend": 23, "transparenz": 23, "mehrfachantr\u00e4g": 23, "nutzung": 23, "whataventur": 23, "plattform": 23, "eingereicht": 23, "teil": 23, "einer": [23, 213, 222, 233, 415], "schulischen": 23, "verpflichtung": 23, "z": 23, "b": 23, "htl": 23, "diplomarbeit": 23, "wie": [23, 240, 246], "haben": [23, 223], "sie": [23, 223], "erfahren": 23, "mehrfachnennungen": 23, "m\u00f6glich": 23, "16": [23, 252, 276, 290, 302, 303, 415, 1089, 1236], "datenschutz": 23, "screenplai": [24, 62, 382, 506, 507, 512, 513, 514, 515, 528, 530, 622, 625, 628, 631, 634, 637, 640, 672, 673, 674, 675, 676, 679, 680, 681, 699, 700, 701, 702, 842, 845, 850, 855, 860, 862, 900, 903, 906, 1052, 1055, 1059, 1128, 1216, 1223, 1228, 1230, 1233], "The": [24, 39, 43, 45, 60, 102, 124, 127, 188, 201, 233, 249, 252, 255, 262, 279, 288, 291, 306, 314, 316, 318, 324, 327, 334, 337, 340, 341, 344, 346, 354, 355, 358, 368, 371, 376, 379, 380, 418, 426, 427, 464, 465, 480, 487, 488, 497, 498, 502, 503, 513, 523, 524, 528, 537, 600, 601, 653, 677, 698, 699, 721, 742, 743, 751, 756, 758, 760, 785, 803, 806, 817, 820, 839, 883, 913, 923, 924, 931, 948, 951, 962, 965, 968, 970, 979, 981, 985, 1001, 1003, 1005, 1006, 1008, 1014, 1022, 1026, 1041, 1043, 1050, 1062, 1064, 1075, 1076, 1084, 1085, 1087, 1091, 1095, 1103, 1106, 1110, 1112, 1114, 1121, 1126, 1132, 1175, 1196, 1203, 1212, 1222, 1243], "problem": [24, 462, 484, 510, 511, 534, 542, 543, 544, 547, 553, 600, 601, 726, 744, 756, 760, 780, 781, 790, 806, 820, 825, 843, 877, 925, 944, 1003, 1005, 1009, 1064, 1080, 1081, 1085, 1099, 1195, 1217, 1224], "And": [24, 42, 60, 62, 65, 124, 129, 130, 144, 150, 157, 201, 297, 300, 303, 306, 309, 314, 315, 316, 317, 318, 319, 324, 327, 329, 332, 334, 337, 340, 341, 344, 345, 346, 348, 352, 354, 355, 358, 368, 371, 372, 373, 374, 375, 378, 380, 415, 438, 482, 506, 518, 522, 524, 526, 530, 531, 532, 534, 535, 537, 538, 540, 546, 549, 555, 563, 564, 569, 577, 583, 598, 645, 646, 652, 657, 673, 677, 678, 679, 681, 699, 714, 715, 719, 722, 748, 754, 756, 758, 771, 788, 791, 792, 793, 795, 796, 801, 813, 815, 817, 819, 820, 825, 835, 851, 909, 913, 914, 915, 919, 923, 929, 931, 967, 979, 981, 986, 990, 996, 997, 1008, 1021, 1043, 1065, 1072, 1073, 1075, 1077, 1078, 1079, 1080, 1082, 1087, 1091, 1092, 1095, 1099, 1100, 1101, 1106, 1107, 1108, 1109, 1174, 1175, 1176, 1184, 1196, 1201, 1206, 1207, 1209, 1210, 1211, 1221, 1243], "me": [24, 194, 354, 373, 1020], "open": [24, 178, 203, 319, 552, 845, 846, 1011, 1014, 1017, 1019, 1056, 1084, 1137], "sourc": [24, 40, 193, 203, 219, 507, 512, 513, 514, 515, 528, 530, 534, 545, 843, 846, 848, 851, 853, 856, 860, 865, 867, 877, 879, 887, 890, 895, 1015, 1062, 1064, 1079, 1081, 1143, 1201], "walk": [24, 306, 368, 397], "through": [24, 306, 397], "us": [25, 26, 27, 28, 29, 30, 31, 32, 38, 42, 171, 191, 195, 197, 201, 211, 212, 218, 220, 230, 249, 251, 252, 265, 268, 374, 380, 423, 425, 428, 443, 458, 480, 490, 498, 499, 511, 516, 519, 529, 544, 547, 564, 585, 685, 709, 731, 739, 751, 755, 756, 792, 806, 817, 829, 830, 831, 980, 992, 993, 994, 1030, 1046, 1063, 1064, 1075, 1076, 1082, 1084, 1087, 1090, 1100, 1109, 1216, 1222, 1223], "case": [25, 26, 27, 28, 29, 30, 251, 454, 458, 549, 611, 613, 616, 791, 792, 1015, 1019, 1020, 1021, 1074, 1082, 1109, 1222, 1228], "custom": [25, 178, 181, 194, 387, 646, 647, 661, 667, 691, 746, 1210, 1212, 1228], "subtract": [25, 644], "known": [25, 189], "calcul": [26, 249, 447, 546, 1107], "minimum": [26, 865], "durat": 26, "trainer": [27, 205, 507, 513, 515, 530, 531], "editor": [27, 242], "end": [27, 757], "user": [27, 42, 46, 155, 252, 254, 415, 648, 726, 728, 733, 734, 735, 736, 737, 738, 820, 851, 919, 920, 921, 923, 924, 925, 933, 934, 945, 1005, 1086, 1177, 1179, 1181, 1182, 1184, 1216], "audienc": [27, 1243], "from": [28, 29, 31, 38, 40, 42, 43, 45, 57, 102, 124, 144, 155, 176, 182, 201, 211, 219, 220, 228, 268, 278, 306, 309, 314, 323, 341, 380, 415, 433, 455, 461, 503, 506, 507, 669, 672, 713, 726, 727, 753, 754, 793, 855, 860, 901, 906, 992, 1004, 1022, 1046, 1055, 1062, 1105, 1143, 1183, 1187, 1188, 1193, 1195, 1236], "other": [28, 38, 52, 249, 318, 330, 399, 751, 865, 887, 933, 1094], "menu": 29, "choos": 29, "show": 30, "plain": [30, 685, 713, 714, 743], "text": [30, 327, 371, 464, 975, 978, 981, 1137, 1213], "file": [30, 31, 42, 48, 149, 151, 211, 213, 249, 259, 262, 278, 285, 287, 288, 302, 306, 310, 320, 322, 323, 324, 327, 328, 329, 346, 350, 351, 352, 357, 358, 362, 363, 364, 366, 367, 371, 388, 389, 404, 462, 506, 508, 511, 514, 520, 524, 530, 549, 628, 659, 845, 846, 847, 855, 887, 914, 915, 918, 937, 942, 943, 949, 950, 953, 954, 955, 963, 967, 970, 971, 975, 978, 980, 996, 1004, 1005, 1009, 1010, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1023, 1024, 1028, 1052, 1056, 1062, 1063, 1078, 1084, 1113, 1137, 1143, 1144, 1145, 1166, 1168, 1177, 1179, 1196, 1228], "send": [31, 1056, 1060], "A": [31, 45, 62, 124, 139, 144, 152, 153, 171, 190, 201, 268, 294, 295, 297, 309, 313, 314, 315, 316, 318, 323, 354, 355, 357, 373, 374, 380, 381, 415, 421, 430, 460, 487, 505, 506, 507, 513, 519, 525, 528, 535, 543, 563, 577, 585, 588, 598, 603, 618, 644, 659, 660, 669, 678, 708, 719, 720, 726, 734, 743, 748, 756, 758, 785, 788, 801, 804, 806, 819, 914, 915, 918, 933, 944, 967, 971, 1004, 1006, 1010, 1011, 1012, 1015, 1018, 1019, 1020, 1021, 1028, 1041, 1046, 1049, 1062, 1076, 1077, 1080, 1081, 1082, 1085, 1090, 1109, 1112, 1175, 1201, 1206, 1209, 1212, 1213, 1221], "v4l": 31, "camera": 31, "devic": [31, 62, 83, 99, 126, 162, 842, 843, 844, 845, 846, 847, 850, 851, 852, 853, 854, 855, 877, 881, 882, 883, 918, 992, 994, 1052], "output": [31, 50, 123, 132, 211, 223, 388, 522, 532, 723, 930, 1089, 1193, 1228], "over": [31, 262, 270, 272, 519, 838, 994, 1125, 1126], "ssh": [31, 148, 149, 242, 306, 327, 371, 394, 402, 995, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005], "captur": [31, 785, 786, 788], "To": [31, 37, 39, 42, 44, 53, 123, 187, 285, 314, 354, 373, 512, 513, 514, 548, 549, 564, 585, 711, 722, 726, 743, 747, 756, 758, 760, 771, 785, 793, 801, 803, 805, 806, 817, 819, 858, 899, 901, 914, 915, 996, 997, 1004, 1064, 1075, 1077, 1082, 1084, 1085, 1105, 1106, 1184, 1205, 1206, 1212], "plai": [31, 62, 771], "remot": [31, 99, 124, 126, 162, 168, 553, 566, 580, 914, 915, 996, 997, 1001, 1004, 1005], "system": [31, 149, 151, 192, 265, 306, 327, 364, 371, 404, 415, 436, 500, 524, 717, 809, 937, 943, 1005, 1007, 1008, 1009, 1014, 1025, 1043, 1046, 1049, 1116, 1216, 1236, 1254, 1255, 1256, 1257, 1258], "emoji": 32, "code": [32, 41, 43, 45, 109, 220, 221, 223, 224, 247, 263, 316, 318, 319, 332, 348, 372, 373, 375, 376, 378, 379, 415, 484, 494, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 528, 530, 541, 545, 621, 624, 627, 630, 633, 636, 639, 669, 755, 803, 825, 848, 849, 853, 854, 855, 856, 857, 867, 868, 877, 878, 889, 890, 891, 895, 896, 1020, 1051, 1054, 1058, 1079, 1080, 1081, 1183, 1184, 1185, 1188, 1191, 1194, 1201, 1214, 1223, 1227, 1232, 1243], "sphinxemoji": 32, "setup": [32, 62, 80, 111, 148, 152, 193, 197, 219, 226, 227, 229, 230, 231, 252, 302, 308, 309, 312, 315, 317, 319, 322, 323, 327, 328, 329, 350, 351, 356, 357, 362, 366, 367, 371, 532, 598, 600, 985, 993, 1001, 1012, 1077, 1078, 1111, 1175, 1176, 1223, 1233], "most": [32, 38, 62, 758, 1216], "here": [32, 191, 549, 1004], "all": [32, 38, 53, 62, 117, 246, 249, 268, 314, 344, 355, 415, 519, 716, 743, 751, 786, 806, 906, 925, 1062, 1079, 1097, 1186], "recip": 33, "isoamsa": 34, "txt": [34, 35, 36, 38, 512, 530], "ad": [34, 35, 36, 194, 513, 1079, 1205, 1212], "mathemat": [34, 35, 36], "symbol": [34, 35, 36, 424, 439, 500, 969, 1062], "arrow": 34, "isoamsr": 35, "relat": [35, 206, 309, 312, 442, 826], "isonum": 36, "binari": [36, 564, 1137], "oper": [36, 210, 223, 233, 246, 262, 265, 268, 275, 278, 282, 285, 299, 314, 334, 346, 392, 426, 441, 442, 443, 446, 447, 449, 450, 455, 467, 519, 598, 620, 645, 646, 652, 660, 700, 722, 801, 809, 815, 845, 846, 847, 930, 1009, 1046, 1106, 1116, 1118, 1120, 1136, 1207], "layout": [37, 278, 473], "page": [37, 96, 194, 196, 858, 948, 980, 1008], "admonit": 37, "i": [37, 45, 120, 151, 191, 192, 209, 249, 259, 265, 270, 275, 278, 285, 287, 288, 320, 324, 327, 329, 358, 364, 371, 380, 389, 401, 426, 452, 499, 505, 524, 543, 598, 617, 644, 651, 713, 719, 720, 756, 758, 781, 785, 790, 793, 802, 806, 810, 814, 825, 860, 871, 892, 907, 918, 923, 924, 929, 930, 931, 944, 954, 967, 994, 1004, 1005, 1006, 1009, 1010, 1011, 1012, 1013, 1014, 1017, 1019, 1021, 1023, 1024, 1041, 1044, 1062, 1080, 1082, 1087, 1137, 1195, 1209, 1233], "an": [37, 194, 265, 318, 333, 340, 344, 349, 372, 377, 393, 397, 415, 510, 646, 756, 771, 848, 967, 993, 1004, 1009, 1046, 1080, 1091, 1100, 1127, 1129, 1223, 1241], "tip": 37, "hint": [37, 566, 596, 726], "import": [37, 201, 209, 249, 259, 268, 397, 651, 1060, 1086, 1094, 1203], "attent": [37, 519, 1129], "caution": [37, 720], "error": [37, 43, 201, 265, 318, 319, 340, 341, 344, 465, 490, 544, 666, 676, 677, 726, 762, 765, 819, 930, 994, 1006, 1015, 1019, 1020, 1021, 1099, 1156], "danger": [37, 432, 526, 814, 945], "blech": 37, "titl": 37, "blah": 37, "kursdaten": [37, 1237, 1238, 1239, 1240, 1245, 1247, 1248, 1252, 1253, 1254, 1255, 1257, 1258, 1259], "local": [37, 39, 99, 124, 126, 162, 168, 210, 233, 463, 495, 530, 537, 553, 1001, 1004, 1037, 1064, 1128, 1223], "bleh": 37, "do": [37, 42, 187, 249, 291, 354, 456, 493, 507, 537, 543, 743, 877, 899, 914, 915, 931, 1062], "mmlalia": 38, "mathml": 38, "alias": 38, "entiti": [38, 1031], "restructuredtext": 39, "cheat": [39, 397], "sheet": [39, 397], "further": [39, 175, 214, 250, 251, 273, 388, 397, 494, 751, 805, 1116], "document": [39, 152, 162, 196, 246, 262, 342, 374, 392, 507, 512, 513, 514, 515, 519, 520, 521, 522, 524, 526, 527, 528, 530, 682, 683, 684, 685, 686, 688, 689, 690, 691, 694, 695, 698, 703, 722, 726, 851, 867, 869, 873, 875, 897, 901, 904, 914, 915, 918, 923, 930, 931, 932, 933, 948, 949, 950, 951, 967, 970, 971, 1004, 1006, 1008, 1010, 1011, 1012, 1014, 1017, 1018, 1019, 1020, 1021, 1024, 1062, 1063, 1079, 1115, 1139, 1140, 1150, 1213, 1221, 1228], "extern": [39, 332, 348, 375, 376, 378, 379, 383, 461, 512, 513, 516, 659, 862, 863, 993, 1080, 1151, 1243], "section": 39, "refer": [39, 187, 190, 233, 259, 262, 265, 272, 285, 288, 294, 295, 297, 300, 303, 307, 310, 315, 318, 324, 330, 342, 354, 358, 364, 368, 373, 374, 380, 430, 468, 495, 657, 752, 755, 756, 758, 785, 786, 788, 797, 802, 804, 805, 819, 835, 836, 894, 1127], "That": [39, 291, 294, 295, 297, 314, 341, 380, 469, 529, 547, 644, 651, 743, 746, 756, 785, 803, 804, 887, 923, 994, 1004, 1009, 1010, 1013, 1082, 1109, 1230], "we": [39, 42, 45, 53, 354, 504, 506, 507, 515, 877, 906, 1075, 1228], "anoth": [39, 278, 504, 507, 1046, 1079], "contain": [39, 144, 156, 268, 288, 314, 317, 355, 380, 620, 636, 637, 638, 677, 678, 692, 693, 696, 697, 698, 743, 747, 795, 875, 1077], "abov": 39, "footnot": 39, "sphinxish": 40, "run": [40, 176, 195, 532, 599, 662, 819, 895, 985, 1010, 1011, 1012, 1077, 1078, 1114, 1191, 1194, 1221], "seminar": 41, "clean": [41, 43, 45, 256, 316, 318, 319, 373, 415, 505, 506, 512], "2022": [41, 100, 101, 102, 103, 104, 105, 106, 145, 161, 162, 163, 164, 165, 166, 268, 269, 270, 273, 276, 279, 281, 284, 287, 290, 293, 296, 297, 298, 299, 300, 302, 303, 407, 408, 409, 415], "04": [41, 106, 147, 149, 150, 151, 195, 268, 279, 281, 284, 317, 318, 319, 320, 321, 355, 372, 397, 415, 1077], "agenda": [41, 226, 227, 229, 230, 231, 232, 237, 241, 242, 279, 284, 296, 305, 309, 312, 318, 322, 326, 328, 332, 334, 340, 344, 348, 350, 354, 356, 362, 366, 370, 373, 375, 378, 380, 410, 411, 1243], "timelin": 41, "befor": [42, 62, 178, 211, 334, 337, 801, 1228], "formal": [42, 426], "unit": [42, 43, 45, 73, 152, 222, 252, 290, 299, 309, 312, 367, 372, 373, 374, 376, 379, 380, 405, 415, 585, 601, 662, 1176, 1226], "initi": [42, 259, 294, 295, 297, 354, 355, 373, 428, 440, 489, 596, 627, 628, 629, 644, 651, 662, 699, 722, 743, 745, 746, 747, 748, 792, 814, 819, 820, 881, 892, 904, 1035, 1037], "structur": [42, 43, 144, 152, 183, 187, 210, 273, 294, 295, 297, 299, 321, 332, 343, 347, 348, 354, 373, 380, 458, 466, 473, 476, 482, 540, 585, 620, 792, 797, 817, 855, 883, 1081, 1094, 1221, 1228, 1243], "snippet": [42, 44, 50], "userdb": [42, 46, 49, 50, 55, 58, 251, 620, 735, 739], "bin": [42, 152, 726, 1065], "binaryfil": 42, "cpp": [42, 152, 507, 508, 585, 588, 726, 761, 762, 763, 766, 767, 768, 769, 772, 773, 775, 776, 777, 778, 779], "extend": [42, 246, 662, 1103], "read": [42, 49, 50, 58, 152, 153, 249, 256, 388, 389, 399, 433, 494, 506, 520, 549, 726, 751, 793, 845, 903, 1010, 1014, 1020, 1022, 1137, 1144, 1145, 1177, 1178, 1179, 1180, 1193, 1213], "iter": [42, 212, 223, 228, 233, 238, 240, 246, 249, 254, 255, 259, 262, 265, 270, 272, 275, 278, 287, 288, 299, 300, 302, 303, 309, 312, 316, 320, 322, 323, 324, 328, 329, 341, 342, 346, 350, 351, 352, 356, 357, 358, 362, 363, 366, 367, 368, 389, 519, 677, 678, 701, 743, 771, 778, 791, 792, 793, 838, 875, 1089, 1091, 1092, 1093, 1105, 1125, 1126, 1135], "bug": [42, 47, 53, 443, 628, 793], "faschingbau": [42, 194], "As": [42, 171, 547, 564, 756, 795, 994, 1028, 1062, 1100, 1230], "last": [42, 443, 464, 465, 494, 667, 670, 807, 1038, 1060, 1228], "name": [42, 43, 132, 259, 262, 278, 437, 475, 519, 524, 526, 653, 743, 887, 932, 950, 1056, 1128, 1139], "wrap": [42, 222, 490, 528, 743, 1085], "up": [42, 192, 222, 256, 299, 317, 318, 340, 402, 490, 512, 743, 1100], "what": [42, 45, 49, 53, 197, 200, 265, 275, 374, 380, 452, 493, 504, 507, 514, 515, 524, 648, 717, 737, 743, 755, 756, 785, 806, 856, 877, 887, 903, 907, 923, 931, 949, 988, 1001, 1004, 1005, 1009, 1010, 1013, 1017, 1049, 1062, 1075, 1079, 1087, 1091, 1095, 1138, 1209, 1212], "have": [42, 45, 504, 877, 1075, 1080], "messag": [43, 190, 191, 503, 535, 1036, 1055, 1056, 1204, 1228], "book": [43, 45, 237, 287, 329, 418, 503, 1188], "survei": [43, 504], "comment": [43, 246, 270, 285, 310, 392, 518, 1115, 1157], "format": [43, 50, 249, 255, 270, 330, 358, 1132, 1185], "object": [43, 119, 223, 228, 265, 272, 278, 282, 290, 291, 299, 302, 303, 315, 316, 318, 319, 322, 323, 328, 334, 335, 337, 340, 341, 344, 345, 350, 356, 362, 363, 366, 367, 380, 385, 504, 542, 547, 627, 628, 629, 644, 646, 649, 652, 654, 658, 660, 715, 717, 732, 747, 750, 753, 756, 802, 1056, 1080, 1081, 1086, 1094, 1100, 1102, 1104, 1138, 1206, 1210], "data": [43, 131, 132, 133, 134, 210, 212, 238, 247, 273, 287, 290, 299, 323, 340, 341, 342, 344, 364, 366, 374, 380, 438, 482, 485, 506, 530, 650, 654, 677, 797, 923, 1037, 1105, 1174, 1188, 1193, 1195], "handl": [43, 265, 268, 278, 290, 309, 312, 317, 318, 319, 340, 341, 344, 408, 510, 544, 666, 1006, 1086, 1139], "boundari": [43, 1201], "class": [43, 223, 249, 268, 272, 275, 278, 291, 299, 315, 320, 334, 337, 368, 374, 380, 535, 547, 554, 555, 572, 573, 585, 588, 602, 621, 622, 623, 646, 653, 654, 659, 661, 662, 663, 664, 670, 685, 713, 714, 734, 743, 744, 746, 754, 755, 787, 801, 843, 1085, 1099, 1100, 1103, 1104, 1105, 1106], "switch": [44, 137, 142, 143, 144, 454, 486, 597], "googletest": [44, 218, 373, 374, 380, 599, 1226], "git": [44, 79, 124, 144, 168, 193, 201, 205, 247, 251, 252, 306, 397, 402, 415, 860, 1188], "submodul": 44, "establish": [44, 45, 1078], "demo": [44, 135, 308, 309, 316, 516, 531, 549, 787, 802, 918, 945, 1009, 1044, 1048], "straightforward": [44, 223], "main": [44, 124, 471, 582, 583, 584, 824, 826, 828, 830, 1079], "convers": [44, 246, 262, 270, 272, 278, 282, 285, 303, 314, 320, 324, 330, 342, 346, 352, 358, 364, 392, 443, 470, 714, 722, 1118, 1132], "fix": [44, 193, 201, 294, 295, 297, 314, 389, 652, 771, 817, 877, 878, 890, 891], "shortcom": 44, "softwar": [45, 144, 219, 316, 380, 504, 505, 994, 1067, 1071, 1245], "craft": [45, 316, 505], "09": [45, 144, 195, 250, 260, 268, 334, 335, 336, 337, 338, 339, 372, 415], "00": 45, "15": [45, 233, 239, 276, 309, 312, 322, 323, 324, 362, 363, 364, 365, 397, 404, 409, 415, 914, 915], "introductori": [45, 306, 771, 1027], "word": [45, 285, 464, 465, 494, 497, 667, 670, 798, 807, 948, 1155, 1172], "engin": [45, 287, 994], "disciplin": 45, "coffe": 45, "break": [45, 233, 270, 457, 1122, 1125], "project": [45, 111, 124, 136, 144, 162, 165, 194, 210, 251, 252, 266, 290, 295, 297, 299, 315, 317, 318, 319, 332, 334, 337, 340, 341, 344, 345, 348, 363, 367, 373, 380, 403, 404, 405, 409, 411, 504, 506, 514, 525, 585, 590, 599, 600, 662, 1175, 1215, 1221, 1243, 1246], "enter": [45, 62, 262, 677, 720, 756, 782, 791, 805, 890, 980, 1048, 1079, 1087, 1099, 1100, 1196, 1201, 1206], "framework": 45, "lunch": 45, "cornerston": 45, "45": 45, "keep": [45, 195, 950], "small": 45, "23": [45, 231, 257, 273, 279, 297, 305, 315, 326, 327, 415], "59": 45, "extrem": 45, "program": [45, 50, 62, 95, 123, 135, 151, 152, 206, 222, 228, 249, 252, 268, 278, 290, 291, 299, 302, 306, 316, 318, 319, 322, 323, 324, 328, 334, 337, 340, 341, 344, 345, 350, 356, 358, 362, 363, 366, 367, 374, 404, 415, 419, 420, 422, 458, 459, 460, 466, 492, 497, 502, 504, 535, 549, 582, 583, 584, 588, 644, 726, 806, 824, 826, 828, 830, 848, 900, 933, 944, 945, 986, 988, 1007, 1022, 1025, 1026, 1029, 1041, 1051, 1059, 1062, 1095, 1102, 1111, 1112, 1114, 1116, 1164, 1176, 1187, 1214, 1242, 1254, 1255, 1256, 1257, 1258], "session": [45, 155], "find": [46, 175, 193, 211, 512, 544, 603, 684, 702, 722, 834, 976, 1230], "crash": [46, 193], "If": [46, 49, 380, 515, 648, 743, 758, 903, 1018, 1019, 1086, 1212], "Not": [46, 62, 123, 127, 131, 132, 134, 137, 139, 143, 173, 201, 282, 291, 515, 524, 610, 612, 615, 684, 720, 737, 743, 765, 780, 781, 793, 802, 877, 903, 944, 1015, 1018, 1019, 1020, 1021, 1041, 1062, 1080, 1090, 1206, 1228], "found": [46, 612, 615, 684, 737, 1230], "state": [46, 191, 251, 771, 890, 892], "exist": [48, 135, 187, 372, 610, 1015, 1018, 1019, 1021, 1103, 1212], "ar": [48, 190, 191, 270, 272, 285, 335, 490, 506, 519, 524, 648, 654, 743, 771, 819, 820, 1046, 1056, 1085, 1094, 1106, 1211, 1230], "overwritten": 48, "done": [49, 124, 127, 131, 140, 141, 142, 355, 548, 711, 806], "twice": 49, "altern": [50, 514, 517, 752], "csv": [50, 132, 144, 262, 279, 287, 290, 299, 302, 322, 323, 324, 328, 329, 344, 350, 351, 357, 362, 363, 366, 367, 506, 1144, 1145, 1146, 1177, 1178, 1179, 1180, 1185, 1196], "frontend": 50, "featur": [51, 53, 62, 302, 318, 319, 320, 322, 323, 328, 340, 344, 355, 380, 483, 506, 783, 1088, 1103, 1122, 1193, 1195], "search": [52, 157, 682, 684, 685, 688, 698, 702, 722, 736, 737, 738, 977, 1080, 1133, 1216], "By": [52, 152, 153, 218, 282, 314, 430, 519, 657, 701, 733, 736, 738, 760, 771, 782, 785, 786, 788, 793, 797, 805, 834, 835, 836, 1086, 1119, 1209, 1210, 1211, 1221], "index": [52, 233, 251, 270, 282, 330, 495, 769, 988, 1124, 1210, 1216, 1217, 1218], "backlog": 53, "need": [53, 389, 549, 765, 767, 1046, 1196], "chang": [53, 124, 933, 944, 951], "Or": [53, 123, 506, 508, 509, 549, 754, 793, 1008, 1100, 1206], "Will": [53, 380], "refactor": [53, 56, 372, 415, 506, 602, 855, 856, 857, 895, 1178, 1180, 1185], "after": [53, 226, 257, 456, 906, 923, 1103], "backingstor": [54, 55, 57], "ha": [54, 55, 122, 768], "too": [54, 55, 500, 509, 743, 787, 810], "mani": [54, 55, 278, 494, 510, 793, 824, 826, 828, 830, 970, 1050], "respons": [54, 55, 254, 552], "interfac": [54, 71, 88, 135, 140, 142, 230, 278, 317, 355, 384, 509, 531, 549, 552, 556, 564, 575, 582, 583, 598, 600, 630, 631, 632, 639, 640, 641, 716, 846, 918, 987, 988, 991, 993, 1099, 1197], "load": [57, 211, 481, 539, 865, 866, 992, 1034, 1062, 1097], "constructor": [57, 228, 278, 294, 295, 297, 303, 354, 373, 598, 628, 634, 645, 646, 647, 648, 649, 651, 652, 661, 662, 663, 664, 732, 747, 748, 749, 754, 756, 780, 800, 801, 1101], "bool": 58, "realli": [58, 743, 805], "glt": [59, 63, 64], "2023": [59, 63, 109, 110, 111, 112, 113, 127, 128, 131, 139, 143, 144, 297, 305, 306, 309, 310, 312, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 355, 356, 357, 358, 359, 360, 364, 415], "pointless": [59, 61, 62, 63, 64, 65, 66, 67, 68, 1106], "blink": [59, 61, 62, 63, 64, 65, 66, 67, 68, 397], "With": [59, 61, 62, 63, 99, 121, 126, 162, 220, 251, 298, 314, 316, 318, 340, 344, 373, 380, 415, 499, 534, 548, 563, 577, 599, 670, 753, 806, 820, 913, 914, 915, 977, 980, 985, 990, 1016, 1065, 1080, 1128, 1209, 1211, 1222, 1223, 1226], "asyncio": [59, 61, 62, 63, 64, 65, 66, 67, 1140], "libgpiod": [59, 60, 61, 62, 63, 64, 65, 66, 67, 137], "raspberri": [59, 61, 62, 63, 201, 230, 383, 415, 867, 888, 985, 989, 992, 1067, 1072, 1074, 1076, 1252], "pi": [59, 60, 61, 62, 63, 201, 230, 415, 867, 887, 888, 985, 992, 1075, 1076, 1252], "fedora": [60, 193, 200, 860, 861, 862, 863, 1077], "prepar": [60, 193, 211, 226, 227, 229, 230, 231, 232, 242, 251, 266, 295, 297, 305, 585, 662, 887], "tarbal": [60, 201], "On": [60, 62, 124, 165, 251, 285, 287, 309, 313, 314, 318, 340, 344, 417, 515, 599, 601, 646, 677, 678, 682, 688, 792, 817, 931, 1010, 1011, 1012, 1017, 1022, 1026, 1049, 1077, 1143], "build": [60, 70, 150, 151, 191, 193, 201, 218, 219, 252, 270, 376, 379, 528, 534, 535, 539, 585, 599, 661, 662, 663, 664, 855, 860, 861, 862, 863, 865, 887, 888, 992, 1010, 1011, 1012, 1022, 1063, 1064, 1065, 1067, 1071, 1075, 1076, 1077, 1079, 1080, 1081, 1135, 1230, 1248], "submiss": [61, 63, 67, 111, 152, 1015], "biographi": [61, 63, 67], "abstract": [61, 63, 67, 299, 334, 337, 542, 557, 571, 924, 1010, 1011, 1012, 1099], "present": 62, "start": [62, 268, 294, 295, 297, 415, 549, 753, 765, 1080, 1204, 1228], "point": [62, 282, 285, 598, 644, 646, 654, 660, 662, 663, 664, 670, 753, 765, 817, 914, 915, 1075, 1118], "greet": [62, 341, 1150], "multipl": [62, 124, 228, 465, 506, 534, 853, 854, 855, 950, 1004, 1062, 1084, 1086, 1123, 1206, 1209, 1222], "background": [62, 195, 197, 643, 742], "thread": [62, 190, 192, 201, 318, 319, 374, 406, 620, 743, 809, 810, 815, 1030, 1031, 1032, 1037, 1039, 1046, 1049, 1095], "charact": [62, 419, 426, 429, 432, 439, 842, 843, 844, 845, 846, 847, 850, 851, 852, 1172], "base": [62, 201, 270, 278, 294, 295, 297, 299, 334, 337, 354, 373, 530, 547, 713, 714, 743, 756, 771, 791, 792, 1081, 1086, 1099], "gpio": [62, 88, 143, 144, 208, 230, 383, 384, 385, 386, 397, 867, 868, 992, 994, 1026, 1027, 1028], "entir": [62, 314, 520, 860, 862, 948, 1004], "matrix": 62, "off": [62, 251], "bring": [62, 168, 374, 376, 402, 513, 716], "togeth": [62, 537, 716, 950], "modular": [62, 268, 460], "bit": [62, 323, 357, 446, 933, 944, 946, 1112, 1114], "row": [62, 314, 1205, 1209, 1210, 1211], "coroutin": [62, 297, 770, 771], "enough": [62, 644, 720], "sequenc": [62, 259, 262, 270, 302, 309, 312, 322, 323, 328, 329, 350, 351, 356, 357, 362, 363, 366, 367, 368, 439, 618, 682, 688, 1090, 1123, 1131], "loop": [62, 210, 212, 223, 233, 238, 270, 272, 282, 285, 288, 294, 295, 297, 316, 318, 340, 344, 352, 354, 368, 373, 422, 455, 456, 494, 519, 521, 527, 586, 791, 1029, 1091, 1122, 1125], "forev": 62, "strip": [62, 255, 272, 278, 389], "down": [62, 509], "factori": [62, 542, 557, 571, 601], "turn": [62, 1090], "Into": [62, 124, 312, 334, 337, 340, 376, 433, 513, 549, 586, 603, 679, 734, 743, 787, 1178, 1180, 1185], "anti": [62, 815, 817], "clumsi": [62, 817], "decor": [62, 249, 299, 309, 312, 316, 318, 319, 334, 340, 341, 344, 547, 561, 575, 1085], "wrapper": [62, 134], "final": [62, 278, 294, 295, 297, 354, 373, 528, 530, 531, 782, 923, 927, 1086], "playground": [62, 173], "cycl": [62, 127, 131, 132, 134, 137, 139, 143, 1031], "fast": [62, 228], "forward": [62, 297, 373, 380, 431, 495, 805, 1003], "ani": [62, 314, 522, 543, 598, 819, 1041], "cancel": 62, "goodby": 62, "2024": [64, 114, 115, 116, 117, 118, 144, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 415, 507], "talk": [65, 247, 323, 986, 992, 993, 1188], "script": [65, 242, 327, 415, 525, 995, 1026, 1094, 1113, 1237], "gpiod": [65, 66, 88], "intro": [65, 147, 148, 150, 154, 155, 272, 306, 380, 397, 636, 637, 638, 1028, 1083], "interrupt": [65, 190, 867, 868, 869, 870, 883, 892, 1029, 1046], "textual": [65, 66], "sdbu": [65, 66], "taskgroup": 66, "cmake": [70, 150, 151, 218, 219, 251, 306, 332, 333, 348, 349, 374, 375, 376, 377, 378, 379, 380, 415, 509, 517, 524, 533, 534, 535, 536, 585, 599, 1022, 1063, 1064, 1078, 1230, 1231, 1243], "oo": [72, 110, 144, 223, 249, 252, 268, 275, 278, 287, 290, 294, 295, 297, 299, 309, 312, 315, 317, 334, 337, 341, 345, 354, 355, 357, 373, 406, 552, 589, 598, 620, 1095], "graph": [74, 75, 76, 498, 500, 513, 725, 840, 888, 1146, 1147, 1151, 1160, 1174, 1181], "embed": [75, 76, 80, 98, 99, 109, 110, 114, 115, 125, 126, 145, 161, 162, 163, 164, 165, 166, 167, 208, 217, 306, 315, 317, 355, 360, 380, 396, 398, 399, 411, 413, 415, 507, 825, 1245], "comput": [75, 76, 80, 98, 109, 110, 114, 115, 125, 145, 161, 162, 163, 164, 165, 166, 167, 394, 396, 398, 399, 411, 413, 493, 494, 598, 914, 915, 924], "current": [75, 76, 547, 820, 838, 951], "depend": [75, 76, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 143, 219, 332, 334, 348, 375, 376, 378, 379, 383, 384, 385, 386, 388, 508, 512, 513, 515, 516, 517, 523, 530, 533, 536, 538, 540, 548, 552, 562, 585, 590, 607, 609, 620, 628, 687, 693, 697, 705, 707, 710, 715, 723, 724, 726, 727, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 745, 752, 759, 770, 794, 799, 825, 864, 865, 914, 915, 916, 920, 921, 935, 936, 937, 956, 961, 962, 965, 998, 1000, 1007, 1013, 1015, 1023, 1025, 1027, 1039, 1042, 1064, 1066, 1068, 1069, 1070, 1073, 1074, 1080, 1095, 1097, 1144, 1145, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1161, 1162, 1163, 1164, 1165, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1175, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1190, 1194, 1198, 1201, 1204, 1208, 1220, 1226, 1243], "ex": [77, 78, 84, 85, 86, 87, 93, 94], "race": [77, 78, 90, 374, 811, 877, 878, 885, 1032, 1033, 1097], "condit": [77, 78, 90, 374, 448, 456, 465, 524, 811, 815, 877, 878, 885, 1032, 1033, 1035, 1036, 1097], "avoid": [78, 90, 819], "goal": [78, 84, 85, 86, 87, 89, 90, 91, 93, 175, 177, 178, 180, 211, 315, 317, 372, 1241, 1244], "outcom": [78, 84, 85, 86, 87, 229, 337, 399], "introduct": [79, 82, 147, 210, 294, 295, 297, 309, 312, 316, 317, 327, 332, 333, 348, 349, 354, 355, 371, 373, 374, 377, 380, 400, 415, 418, 435, 493, 497, 536, 548, 556, 643, 741, 747, 791, 800, 809, 867, 887, 922, 1086, 1221, 1241, 1243, 1254], "stece": [80, 98, 125, 145, 161, 162, 163, 164, 165, 166], "2019": [80, 210, 213, 415], "overview": [80, 144, 206, 306, 318, 319, 342, 354, 373, 374, 380, 381, 412, 415, 416, 753, 760, 771, 795, 801, 815, 817, 824, 826, 828, 829, 830, 831, 838, 858, 912, 924, 950, 981, 992, 993, 994, 995, 1030, 1062, 1085, 1190, 1194], "knowledg": [80, 1243], "transfer": [80, 803], "unix": [82, 112, 113, 214, 402, 418, 480, 490, 546, 1114], "hardwar": [83, 86, 87, 144, 178, 181, 306, 480, 989, 991, 992, 994, 1027, 1245], "manag": [83, 192, 240, 270, 290, 299, 309, 312, 315, 316, 318, 334, 337, 340, 341, 344, 367, 368, 380, 404, 405, 409, 504, 652, 712, 801, 819, 897, 898, 1064, 1084, 1103, 1215, 1245], "averag": [84, 85, 93, 546, 574, 824, 826, 828, 830], "sensor": [84, 85, 87, 93, 94, 96, 122, 140, 141, 152, 153, 165, 317, 341, 354, 374, 542, 543, 547, 549, 554, 572, 574, 575, 581, 585, 587, 588, 589, 600, 601, 602, 609, 801, 824, 826, 828, 830, 992, 994, 1022, 1174, 1176], "parallel": 85, "led": [86, 139, 397], "temperatur": [86, 87, 94, 139, 585, 588, 992, 994, 1022], "displai": [86, 93, 121, 129, 130, 135, 139], "sysf": [88, 143, 144, 230, 383, 397, 993, 1027, 1028], "multithread": [89, 208, 268, 294, 295, 297, 306, 340, 341, 344, 354, 373, 374, 405, 412, 815, 816, 1059, 1095, 1096, 1098, 1257], "semaphor": [90, 190, 817, 1055, 1056], "mutex": [90, 190, 481, 813, 817, 877, 878, 879, 880, 892, 893, 1033, 1034, 1049, 1097], "commun": [91, 287, 374, 566, 815, 1035, 1056], "wait": [91, 152, 181, 815, 817, 903, 904, 905, 1035, 1055], "someth": [91, 223, 373, 644, 743, 817, 903, 904, 905, 1125], "simpl": [95, 228, 532, 644, 654, 669, 720, 733, 890, 892, 918, 933, 1062, 1080, 1085, 1105, 1135, 1213, 1221], "2020": [98, 195, 215, 217, 222, 223, 225, 226, 227, 229, 231, 232, 237, 415], "ss2022": [99, 107, 914, 915], "block": [99, 126, 162, 451, 667, 1009, 1010, 1011, 1012, 1013, 1060], "cross": [99, 110, 126, 154, 155, 162, 201, 306, 375, 378, 867, 887, 1063, 1065, 1066, 1067, 1068, 1069, 1073, 1075, 1076, 1078, 1236], "develop": [99, 110, 126, 127, 131, 132, 134, 137, 139, 143, 144, 153, 154, 155, 162, 222, 237, 251, 254, 276, 287, 290, 306, 309, 311, 312, 315, 316, 317, 318, 319, 340, 341, 344, 360, 372, 374, 375, 378, 400, 415, 864, 1065, 1066, 1073, 1244, 1245, 1246, 1259], "03": [100, 101, 102, 103, 104, 105, 144, 147, 148, 239, 242, 247, 266, 268, 276, 279, 296, 309, 310, 312, 315, 316, 332, 370, 371, 373, 374, 397, 415, 743, 744], "08": [100, 144, 257, 260, 268, 281, 415], "homework": [100, 101, 102, 103, 106, 147, 149, 151, 153, 154], "until": [102, 151, 524], "21": [102, 103, 148, 279, 390, 397, 415], "exercis": [102, 111, 149, 152, 153, 155, 158, 183, 205, 210, 211, 223, 226, 227, 231, 239, 240, 242, 251, 252, 262, 268, 285, 290, 294, 295, 297, 299, 302, 306, 310, 315, 317, 318, 322, 323, 328, 329, 330, 334, 337, 340, 341, 344, 350, 351, 357, 362, 363, 366, 367, 371, 374, 376, 379, 387, 389, 397, 403, 421, 423, 425, 427, 429, 431, 433, 445, 469, 478, 542, 543, 544, 546, 547, 548, 550, 551, 553, 554, 555, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 585, 586, 587, 588, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 618, 619, 620, 650, 661, 662, 663, 664, 665, 706, 707, 708, 715, 723, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 805, 834, 835, 836, 837, 909, 916, 928, 934, 937, 938, 940, 942, 952, 953, 954, 955, 956, 957, 958, 959, 960, 962, 963, 964, 965, 966, 975, 996, 997, 998, 999, 1015, 1016, 1022, 1056, 1060, 1067, 1070, 1071, 1072, 1073, 1102, 1144, 1145, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185], "creat": [102, 124, 168, 184, 189, 193, 196, 218, 219, 599, 743, 810, 907, 913, 914, 915, 933, 938, 940, 942, 950, 954, 956, 967, 999, 1016, 1018, 1019, 1021, 1055, 1056, 1075, 1077, 1082, 1175, 1193, 1195], "copi": [102, 223, 272, 307, 354, 445, 603, 637, 645, 652, 657, 672, 678, 679, 683, 690, 743, 754, 756, 781, 786, 788, 792, 797, 801, 802, 819, 834, 901, 950, 952, 953, 956, 996, 997, 1004, 1015, 1127, 1206], "move": [102, 294, 295, 297, 315, 354, 355, 373, 374, 380, 530, 598, 644, 660, 752, 753, 754, 755, 756, 801, 803, 835, 867, 948, 955, 956, 971], "remov": [102, 288, 509, 526, 615, 616, 698, 701, 834, 956, 959, 967, 1056], "l": [102, 965, 970], "command": [102, 518, 544, 559, 573, 865, 933, 944, 948, 965, 970, 985, 1077], "22": [104, 151, 229, 236, 241, 328, 329, 330, 344, 345, 346, 347, 415], "24": [104, 136, 144, 236, 268, 298, 318, 319, 320, 321, 340, 341, 343, 344, 345, 346, 347, 415], "ku": 104, "28": [105, 159, 160, 210, 227, 268, 316, 403, 415], "01": [106, 111, 114, 144, 260, 266, 268, 269, 270, 299, 305, 350, 351, 352, 362, 363, 364, 365, 366, 367, 368, 369, 379, 397, 407, 408, 415, 914, 915], "ws2022": [108, 109, 110], "plan": [108, 144, 165, 279, 400], "evolut": 108, "fh": [109, 110, 124, 167, 585, 586, 587, 588, 589, 661, 662, 663, 664, 724, 935, 936, 961], "joanneum": [109, 110, 167], "question": [109, 110, 116, 117, 118, 119, 120, 178, 249, 412, 506, 532, 585, 724, 935, 936, 939, 941, 961, 1047, 1098], "inherit": [109, 209, 249, 278, 299, 334, 337, 380, 556, 630, 631, 632, 713, 714, 715, 718, 743, 1017, 1095, 1103], "memori": [109, 159, 192, 214, 240, 368, 470, 473, 477, 479, 481, 488, 495, 614, 624, 625, 626, 652, 711, 712, 858, 871, 872, 873, 874, 900, 901, 902, 920, 921, 925, 1055, 1056, 1245, 1255], "leak": [109, 614, 625, 652, 803], "ye": [110, 1201], "No": [110, 191, 230, 519, 524, 564, 743, 760, 806, 1086, 1212, 1228], "lab": [111, 158], "exam": [111, 112, 113, 114, 115, 116, 117, 125, 126, 144, 159, 160, 250, 263, 265, 397, 412, 598, 914, 915, 916, 1047, 1098], "17": [111, 144, 150, 156, 262, 263, 265, 269, 270, 276, 293, 300, 306, 322, 323, 324, 362, 363, 364, 365, 415, 659], "ss2023": [112, 113, 126], "06": [112, 113, 151, 153, 156, 157, 158, 159, 160, 250, 251, 268, 297, 328, 329, 330, 355, 373, 374, 375, 376, 377, 378, 397, 415, 507], "30": [112, 113, 208, 217, 227, 232, 279, 415], "handout": [112, 159], "concept": [112, 113, 148, 159, 297, 327, 354, 371, 759, 760, 763, 764, 765, 768, 769, 795, 922, 1195], "toolchain": [112, 113, 150, 155, 159, 201, 252, 332, 348, 887, 1062, 1063, 1065, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1243], "solv": [113, 1034, 1195, 1217, 1224], "26": [114, 268, 298, 305, 318, 319, 320, 321, 340, 341, 343, 397, 415], "02": [115, 116, 144, 152, 268, 273, 287, 306, 409, 415, 927], "ws2023": [116, 117, 136, 144], "sampl": [116, 144, 265, 806, 889, 945, 1145, 1166, 1187, 1221, 1246], "why": [116, 120, 192, 193, 201, 270, 504, 529, 552, 644, 647, 651, 652, 800, 806, 832, 860, 906, 932, 986, 993, 1001, 1005, 1030, 1084, 1129], "const": [119, 488, 617, 634, 654, 655, 657, 730, 731, 743, 758, 792, 797, 819, 820], "paramet": [120, 223, 270, 272, 316, 358, 393, 432, 468, 471, 474, 488, 506, 516, 522, 525, 756, 760, 795, 806, 887, 1018, 1063, 1129, 1200], "pass": [120, 397, 522, 525, 657], "which": [120, 552, 1021, 1062], "One": [120, 249, 288, 314, 389, 446, 465, 504, 506, 507, 659, 793, 806, 900, 986, 1004, 1037, 1062, 1079], "better": [120, 190, 421, 506, 819, 897, 1109, 1201], "question2": 120, "solid": [121, 122, 191, 504], "hysteresi": 121, "id": [122, 291, 319, 346, 925, 945, 1005, 1031, 1043, 1236], "Be": [123, 252, 543, 547, 548, 652, 657, 711, 804, 809], "virtual": [123, 159, 214, 287, 308, 380, 630, 631, 632, 717, 719, 720, 824, 825, 826, 828, 829, 830, 831, 832, 858, 920, 921, 925, 987, 1055, 1175, 1223, 1224, 1225, 1255], "version": [123, 201, 506, 528, 535, 537, 743, 771, 1018, 1062], "our": [124, 218, 994], "ece21": 124, "fork": [124, 144, 894], "pull": [124, 144, 549], "request": [124, 144, 506, 846, 848, 867, 869, 1028], "upstream": [124, 144, 168], "sync": [124, 858], "onli": [124, 288, 314, 470, 758, 806, 860, 1157], "onc": [124, 397], "updat": [124, 144, 195], "It": [124, 193, 222, 314, 376, 379, 401, 470, 514, 528, 716, 944, 1005, 1018, 1019, 1062], "Its": [124, 1100], "fetch": 124, "your": [124, 214, 307, 308, 485, 765, 934], "clone": [124, 201, 205, 218, 599], "merg": 124, "push": [124, 509], "two": [125, 285, 469, 582, 583, 644, 663, 748, 1056, 1152, 1153, 1162, 1163], "semest": 125, "support": [125, 230, 242, 746, 883], "finish": [126, 177, 186, 252, 906], "boil": [127, 128, 129, 130, 136, 144, 530], "pot": [127, 128, 129, 130, 136, 144, 530], "begin": [127, 360, 418, 524, 793], "standup": [127, 128, 129, 130, 131, 135, 139, 143], "record": [127, 128, 129, 130, 131, 135, 139, 143, 233, 1182, 1184], "20": [127, 131, 139, 143, 144, 158, 279, 293, 297, 315, 317, 328, 329, 330, 354, 356, 357, 358, 359, 389, 397, 415, 507, 1077], "requir": [127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 139, 143, 152, 256, 287, 334, 337, 399, 513, 516, 542, 563, 566, 585, 586, 587, 591, 592, 593, 594, 595, 596, 597, 726, 765, 1015, 1022, 1144, 1145, 1166, 1175, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185], "futur": [127, 131, 132, 134, 137, 139, 143, 406, 817], "part": [127, 131, 132, 134, 137, 139, 143, 279, 1230], "Of": [127, 131, 132, 134, 137, 139, 143, 314, 323, 334, 337, 357, 372, 376, 380, 514, 519, 520, 522, 524, 534, 598, 644, 676, 677, 717, 756, 788, 793, 803, 805, 815, 834, 835, 836, 914, 915, 923, 1015, 1026, 1050, 1064, 1086, 1089, 1109, 1206, 1212], "statu": [129, 995, 1031, 1041], "report": 129, "full": [130, 254], "iot": 130, "logger": [131, 132, 133, 134, 374, 530, 549], "sink": [132, 134, 144, 341], "column": [132, 314, 1206, 1207, 1209, 1210, 1211, 1212], "configur": [132, 194, 196, 201, 511, 514, 949, 987, 992, 994, 1029], "mqtt": [134, 138, 144, 278, 341, 344, 512, 1182, 1204], "mosquitto": 134, "infrastructur": 135, "percentagedisplai": 135, "composit": [135, 546, 556, 560, 574, 838], "breadboard": 135, "acrobat": 135, "group": [136, 251, 252, 266, 299, 306, 318, 319, 334, 337, 340, 341, 344, 345, 363, 374, 403, 435, 450, 459, 466, 472, 476, 479, 483, 492, 496, 501, 502, 642, 650, 665, 668, 671, 712, 721, 741, 783, 784, 808, 816, 821, 833, 837, 839, 925, 933, 942, 982, 990, 991, 1045], "task": [136, 144, 403, 1046], "datalogg": [136, 144, 512, 513], "peripher": [136, 144], "client": [136, 254, 580, 1204], "subscrib": [138, 1204], "via": [139, 144, 198, 199, 394, 994], "pwm": [139, 993], "control": [139, 287, 302, 309, 312, 322, 323, 328, 329, 350, 351, 356, 357, 362, 363, 366, 367, 549, 771, 985, 993], "onewir": [141, 585, 601, 602, 994, 1022], "05": [144, 151, 153, 154, 155, 247, 250, 281, 287, 290, 293, 296, 322, 323, 324, 326, 327, 389, 390, 397, 415], "vo": 144, "recap": [144, 150, 153, 154, 238, 251, 252, 266, 299, 319, 334, 337, 341, 342, 637, 800, 1062, 1089], "polymorph": [144, 252, 355, 591, 592, 593, 594, 595, 596, 597, 600, 717, 807, 827], "collabor": 144, "necessarili": 144, "first": [144, 223, 252, 372, 419, 512, 589, 806, 848, 849, 883, 1223], "round": [144, 567, 581], "organiz": 144, "design": [144, 298, 316, 318, 319, 334, 337, 355, 373, 380, 415, 432, 489, 504, 548, 552, 562, 715, 1244], "At": 144, "larg": 144, "07": [144, 252, 268, 299, 332, 333, 379, 397, 401, 415], "renam": [144, 971], "relev": 144, "gl\u00fchwein": 146, "trinken": 146, "quiz": [147, 371, 724, 920, 921, 935, 936, 961, 1068, 1069], "wsl": [147, 306, 315, 317, 927, 1077], "o": [148, 151, 159, 191, 249, 259, 265, 272, 273, 278, 285, 287, 288, 320, 324, 327, 329, 358, 364, 367, 368, 371, 389, 426, 871, 929, 930, 931, 954, 967, 1009, 1010, 1011, 1012, 1013, 1014, 1023, 1024, 1044, 1137], "shell": [148, 149, 242, 306, 327, 371, 394, 415, 919, 931, 933, 949, 961, 962, 968, 1000, 1017, 1026, 1041, 1237], "cont": [148, 317], "d": [148, 317, 549], "usag": [148, 314, 319, 354, 473, 477, 500, 510, 532, 585, 600, 646, 683, 684, 690, 717, 726, 746, 750, 758, 802, 803, 804, 846, 890, 931, 970, 987, 994, 1018, 1062, 1142], "permiss": [149, 306, 327, 371, 933, 935, 936, 937, 943, 947, 966, 997], "incl": 149, "secur": [149, 200, 230, 306, 327, 394, 1000, 1004], "makefil": [150, 219, 599, 855, 865, 1063, 1064, 1079], "outlook": [150, 312, 354], "nativ": [150, 151, 1065, 1068, 1069, 1071], "io": [151, 262, 278, 306, 310, 346, 352, 367, 493, 871, 872, 928, 1028], "next": [151, 290, 493, 779, 1228], "time": [151, 196, 205, 209, 314, 374, 516, 531, 818, 819, 895, 896, 925, 1037, 1150], "driven": [152, 153, 222, 251, 276, 287, 290, 318, 319, 340, 341, 344, 372, 374, 415, 1051, 1259], "suit": [152, 726, 1228], "definit": [152, 372, 428, 430, 432, 440, 458, 460, 461, 464, 510, 659, 743, 824, 826, 828, 830, 846, 1048, 1126], "lib": [152, 726], "see": [152, 471, 512, 513, 514, 515, 518, 519, 522, 524, 526, 528, 531, 722, 726, 918, 924, 925, 930, 931, 1010, 1011, 1012, 1014, 1041, 1044, 1048, 1050, 1065, 1130, 1195], "also": [152, 189, 471, 512, 513, 514, 515, 518, 519, 522, 524, 526, 528, 531, 722, 726, 918, 924, 925, 930, 931, 1010, 1011, 1012, 1014, 1041, 1044, 1048, 1050, 1065, 1130, 1195], "But": [152, 373, 380, 802, 826, 1019], "27": [155, 250, 268, 284, 334, 335, 336, 339, 348, 349, 415], "livecod": 155, "": [155, 190, 205, 230, 446, 470, 504, 507, 513, 515, 524, 530, 531, 644, 722, 737, 743, 746, 806, 851, 856, 875, 887, 903, 933, 949, 1001, 1049, 1062, 1091, 1095, 1138], "view": [155, 297, 746, 793, 795, 796, 851, 913], "pars": [155, 255, 522, 726, 1116, 1139, 1166], "line": [155, 389, 433, 465, 518, 520, 647, 726, 931, 948, 1115, 1157, 1168, 1172], "etc": [155, 177, 238, 246, 249, 278, 288, 291, 324, 726, 964, 992, 1020, 1115, 1166], "passwd": [155, 726, 944, 964, 1020, 1166], "auto": [156, 294, 295, 297, 354, 743, 758, 791, 792, 1035, 1222], "19": [157, 223, 225, 229, 263, 279, 396, 397, 411, 413, 415], "sort": [157, 233, 285, 603, 682, 687, 688, 691, 1210], "ss2024": 159, "process": [159, 190, 192, 211, 306, 327, 885, 886, 919, 920, 921, 925, 926, 1041, 1042, 1043, 1046, 1050], "schedul": [159, 191, 327, 407, 408, 412, 920, 921, 925, 1031, 1044, 1045, 1047, 1048, 1049], "summer": [161, 334, 337, 400], "syllabu": [163, 166, 250, 263], "lehrveranstaltungsbeschreibung": [163, 166], "umfang": [163, 166], "lehrveranstaltung": [163, 166], "inhalt": [163, 166, 210, 213, 1059, 1238], "inhaltlich": [163, 166], "voraussetzungen": [163, 166, 398], "ziel": [163, 166], "pr\u00fcfung": [163, 166], "beurteilungsschema": [163, 166], "bewertung": [163, 166], "leistungen": [163, 166], "bewertungsschl\u00fcssel": [163, 166], "hilfsmittel": [163, 166], "bei": [163, 166, 222, 233, 415], "schriftlichen": [163, 166], "pr\u00fcfungen": [163, 166], "wiederholungsm\u00f6glichkeiten": [163, 166], "anwesenheitsvorgab": [163, 166], "zusatzinformationen": [163, 166], "empfohlen": [163, 166, 398, 1237, 1239, 1240, 1245, 1247, 1248, 1252, 1253, 1254, 1255, 1257, 1258, 1259], "fachliteratur": [163, 166, 398], "einzelnen": [163, 166], "lehreinheiten": [163, 166], "graz": [167, 213, 215, 222, 260, 415], "branch": [168, 452], "track": [168, 1079], "submit": [168, 906, 907], "appli": [168, 193, 1212], "patch": [168, 193], "packag": [170, 177, 195, 201, 218, 299, 316, 334, 340, 390, 887, 1067, 1071, 1094, 1143, 1215, 1216, 1217, 1218, 1219, 1223], "pypi": [170, 247, 287, 1143, 1188, 1217, 1219], "gaphor": 171, "decad": 171, "manual": [171, 507, 645, 648, 652, 806, 830, 831, 948, 1008, 1026, 1029, 1091], "model": [171, 268, 1193, 1195], "librari": [171, 251, 263, 268, 287, 315, 317, 323, 432, 534, 537, 538, 539, 607, 667, 677, 710, 721, 726, 751, 1008, 1080, 1081, 1188, 1255], "hochk\u00f6nig": 172, "k\u00f6nigsjodl": 172, "klettersteig": 172, "tour": [172, 299, 743], "werfen": 172, "ostpreussenh\u00fctt": 172, "matrashau": 172, "yet": [173, 278], "pending_xref": 174, "audio": [175, 179], "chip": [175, 993], "bringup": [175, 178, 994], "get": [176, 189, 219, 270, 355, 520, 817, 875, 900, 1026], "debian": [176, 177], "kernel": [176, 177, 178, 182, 191, 193, 237, 415, 500, 851, 860, 861, 862, 863, 864, 865, 879, 881, 887, 888, 920, 921, 924, 989, 992, 1246], "config": [176, 514, 887], "within": 176, "qemu": 176, "extract": [176, 182, 249, 586, 1178, 1180, 1185, 1193], "boot": [176, 189, 200, 415, 924], "yocto": [178, 182, 983], "everyth": [178, 206, 265, 537, 918, 930, 1009], "like": [178, 354, 380, 644, 1041], "i2": 179, "kontron": 179, "smarc": 179, "modul": [179, 223, 247, 249, 287, 288, 300, 316, 323, 340, 341, 390, 397, 500, 509, 512, 599, 789, 855, 860, 862, 863, 865, 866, 881, 887, 993, 1094, 1185, 1188, 1196, 1222, 1230], "dirti": 180, "upgrad": 180, "path": [180, 201, 249, 259, 265, 272, 358, 367, 368, 520, 540, 838, 919, 972, 1075, 1080, 1175, 1230], "step": [180, 544, 547, 549, 585, 677, 771, 834, 835, 1063, 1064, 1079, 1099, 1124], "intel": 182, "bsp": 182, "improv": 183, "beginn": [183, 247, 259, 282, 287, 299, 323, 1187, 1188], "split": [183, 209, 272, 278, 352, 389, 1133, 1193], "openshot": 184, "seo": [185, 186], "sitemap": 185, "meta": [185, 186], "stack": [186, 192, 233, 254, 477, 756], "hang": 186, "dbu": [186, 549], "stuff": [186, 355, 397, 490, 924, 958], "extens": 187, "rest": [187, 249, 344, 355, 1014], "style": [187, 453, 504, 644, 747, 801, 820, 1132], "convert": [187, 210, 314, 1105, 1184], "rst": 187, "exampl": [187, 272, 278, 282, 393, 426, 430, 465, 467, 487, 490, 519, 522, 546, 585, 670, 695, 747, 748, 766, 767, 768, 769, 795, 804, 911, 930, 932, 933, 981, 1005, 1009, 1014, 1017, 1035, 1060, 1065, 1084, 1099, 1119, 1129, 1132, 1133, 1134, 1135, 1157, 1199, 1207, 1212, 1221, 1222], "add": [187, 308, 510, 512, 513, 532, 598, 848, 895, 906, 1059, 1103, 1205], "miss": [187, 299, 371, 747, 1018], "past": [187, 465], "blog": 187, "learn": [188, 309, 367, 368, 399, 1189, 1195], "beagleboard": 189, "how": [189, 192, 200, 222, 252, 270, 434, 473, 498, 499, 500, 515, 528, 654, 726, 793, 803, 931, 944, 947, 1091, 1195], "repair": 189, "nand": 189, "40w": 189, "x": [189, 252, 634], "loader": 189, "u": [189, 507, 1005], "bootabl": 189, "mmc": 189, "sd": [189, 230], "card": [189, 230, 308, 915], "port": [190, 1003], "There": [190, 270, 504, 519, 524, 652, 809, 903, 994, 1004, 1009, 1020, 1021], "alwai": [190, 270, 290, 781, 1019], "wai": [190, 249, 270, 278, 494, 1050, 1095, 1114], "signal": [190, 214, 480, 815, 1035, 1058, 1059, 1060, 1061], "aren": 190, "t": [190, 247, 380, 525, 793, 1188], "queue": [190, 233, 815, 904, 1036, 1055, 1056], "timer": [190, 895, 897, 898, 1012, 1046], "poll": [190, 815, 817], "event": [190, 848, 867, 877, 895, 896, 900, 1029, 1035, 1051, 1053], "dispatch": [190, 829, 830, 831], "realtim": [190, 192, 408, 412, 415, 879, 1048, 1049, 1236, 1245], "save": [191, 803], "disk": [191, 230, 918], "life": [191, 804, 1031], "gentoo": [191, 887], "rant": [191, 211, 535, 1064], "swap": [191, 285, 469, 806, 931, 1153], "tmpf": 191, "instanc": [191, 249, 275, 278], "syslog": 191, "var": 191, "mountpoint": 191, "logrot": 191, "ram": 191, "thing": [191, 252, 273, 294, 295, 297], "left": [191, 446, 657], "p": 192, "suck": [192, 867], "count": [192, 802, 894, 931, 1172], "consumpt": 192, "conclus": [192, 892, 985, 993], "pthread": 192, "experi": 192, "100": 192, "default": [192, 223, 270, 272, 294, 295, 297, 354, 373, 393, 598, 646, 648, 649, 661, 662, 663, 664, 732, 780, 801, 819, 820, 947, 1060, 1129, 1210], "eat": 192, "limit": [192, 1090], "than": [192, 605, 1106], "my": [192, 195, 291, 419, 420, 506, 855, 927, 944], "could": [192, 507, 804], "take": [192, 471, 803, 1109], "doe": [192, 524, 670, 931, 944, 947, 1015, 1018, 1019], "differ": [192, 223, 373, 470, 675, 677, 819, 820, 950, 1004], "rpm": [193, 195, 220, 860], "prerequisit": [193, 201, 219, 318, 340, 344, 399, 862, 1143], "rpmbuild": 193, "directori": [193, 218, 219, 368, 404, 506, 520, 526, 530, 534, 599, 838, 914, 915, 933, 938, 939, 940, 941, 950, 951, 952, 959, 966, 967, 970, 971, 976, 1004, 1015, 1063, 1064, 1084, 1221], "download": [193, 239, 241, 397, 402, 416, 602, 1062, 1075, 1078, 1079, 1081, 1235], "For": [193, 195, 201, 279, 282, 306, 309, 311, 312, 315, 317, 360, 415, 427, 507, 519, 528, 529, 572, 646, 657, 743, 771, 792, 817, 923, 1009, 1075, 1076, 1077, 1087, 1105, 1175, 1244], "domain": [194, 214, 312, 818], "subdomain": 194, "www": 194, "apex": 194, "microsoft": 195, "team": 195, "screen": [195, 980], "share": [195, 537, 539, 798, 802, 805, 835, 914, 915, 942, 1055, 1056, 1079, 1080, 1255], "x11": 195, "reviv": 195, "meh": 195, "annoy": 195, "re": [195, 1086], "regist": [195, 494], "itself": 195, "autostart": 195, "browser": [195, 254], "recommend": [195, 226, 399, 1222, 1243], "deploi": 196, "gener": [196, 200, 210, 219, 223, 228, 255, 262, 265, 270, 272, 278, 297, 299, 303, 309, 312, 316, 318, 319, 323, 330, 332, 340, 341, 342, 344, 348, 352, 358, 375, 376, 378, 379, 455, 507, 604, 645, 648, 652, 771, 772, 774, 775, 780, 840, 994, 1001, 1028, 1063, 1064, 1089, 1090, 1091, 1092, 1093, 1118, 1158, 1171, 1243], "public": [196, 249, 530, 531, 646, 914, 915, 940, 941, 1001], "repo": [196, 218], "jfasch": [196, 945], "home": [196, 919, 950, 966, 1005], "deploy": [196, 332, 348, 537, 887, 1243], "bigbluebutton": 197, "onlin": [197, 206, 1235], "articl": [197, 198, 200, 201], "tl": 197, "dr": 197, "host": [197, 242, 520, 887, 1077], "check": [197, 524, 526, 532, 564, 933, 994, 1035, 1072, 1133, 1154], "els": [197, 265, 272, 278, 288, 318, 340, 344, 358, 368, 428, 452, 453, 454, 514, 651, 666, 971, 988, 1001, 1086, 1122, 1125], "traunstein": 198, "zierlersteig": 198, "kaltenbachwildni": 198, "anstieg": 198, "auf": [198, 239], "zierlerberg": 198, "rinn": 198, "abstieg": 198, "grintovec": 199, "plan\u0161arsko": 199, "jezero": 199, "\u010de\u0161ka": 199, "ko\u010da": 199, "anreis": 199, "hinauf": 199, "runter": 199, "zusammenfassung": 199, "brick": 200, "1399": 200, "dell": 200, "xp": 200, "happen": 200, "virtualbox": 200, "enrol": 200, "machin": [200, 230, 251, 309, 394, 996, 997, 1022, 1189, 1195], "owner": [200, 933], "mok": 200, "pair": [200, 743, 999, 1001], "stage": 200, "reboot": 200, "diagnost": [200, 992], "crosstool": [201, 1065, 1076, 1077], "ng": [201, 1065, 1076, 1077], "prebuilt": [201, 1212], "repositori": [201, 205, 411, 599, 609], "releas": [201, 535, 869, 879, 1097], "glibc": 201, "gcc": [201, 481, 494, 1062], "simplest": [201, 522, 771, 776, 814, 1083, 1106, 1222, 1228], "stdio": 201, "h": [201, 514, 774, 980], "iostream": 201, "distribut": [201, 1143], "afterword": [201, 372, 751], "post": [202, 211, 1055], "schulung": [203, 223], "entwicklung": 203, "beratung": 203, "richtlinien": 204, "ver\u00f6ffentlichung": 204, "kursmateri": 204, "window": [205, 242, 259, 315, 317, 417, 927], "workflow": [205, 252], "conflict": [205, 1034, 1097], "individu": 206, "languag": [206, 222, 252, 268, 294, 295, 297, 302, 322, 323, 328, 354, 355, 373, 376, 379, 380, 415, 483, 502, 518, 523, 783, 1041, 1088, 1110, 1112], "qualivis": [207, 415], "z\u00fcrich": [207, 415], "2013": [207, 415, 1236], "fragen": [207, 240], "antworten": 207, "kursnotizen": 208, "2015": [208, 415], "userspac": [208, 846, 848, 900, 901, 902, 992, 993, 1029], "can": [208, 229, 252, 287, 471, 543, 547, 598, 657, 743, 803, 986, 987, 988, 990], "bu": [208, 229, 549, 987, 990, 994], "driver": [208, 237, 308, 415, 864, 865, 883, 992, 1246], "beispiel": [208, 223, 282, 976], "heizungssteuerung": 208, "k\u00f6nnen": [209, 233, 246], "viel": 209, "mutabl": [209, 212, 223, 233, 240, 246, 259, 262, 270, 272, 275, 278, 285, 288, 291, 303, 310, 320, 324, 330, 342, 346, 352, 364, 368, 1127, 1129], "immut": [209, 212, 223, 240, 246, 259, 270, 275, 278, 285, 291, 300, 307, 310, 324, 352, 358, 655, 1127], "kann": [209, 254], "man": [209, 254, 948], "nicht": [209, 223, 233], "oft": 209, "genug": 209, "wiederholen": 209, "hart": 209, "indizieren": 209, "weich": 209, "nettfragen": 209, "shortcut": [209, 1105, 1135], "objektorientiert": 209, "date": [209, 255, 314, 402], "delta": 209, "datetim": [209, 228, 249, 255, 310], "bissl": 209, "potschert": [209, 233], "schreiben": [209, 233], "scho": 209, "formen": 209, "represent": [209, 1108], "__str__": [209, 1103, 1108], "subprocess": [209, 288], "enumer": [209, 233, 238, 240, 246, 249, 270, 278, 285, 303, 320, 342, 352, 364], "zip": [209, 249, 352], "comprehens": [209, 233, 255, 262, 265, 270, 272, 278, 282, 303, 309, 310, 312, 342, 352, 358, 364, 1083, 1089, 1134], "exec": [209, 275, 291, 299, 303, 330, 352, 1087], "eval": [209, 210, 246, 275, 285, 303, 330, 342], "umgebend": 209, "context": [209, 270, 309, 312, 316, 885, 886, 906, 1084, 1087], "eigen": 209, "json": [209, 231, 238, 254, 255, 265, 282, 285, 291, 299, 300, 335, 338, 1184], "individualtrain": [210, 225, 415], "tage": [210, 415], "beginnend": [210, 415], "51": 210, "58": 210, "94": [210, 223], "121": 210, "famou": [210, 497], "overload": [210, 268, 278, 299, 334, 346, 620, 646, 653, 660, 801, 1106, 1108], "getter": [210, 598, 654], "setter": 210, "listcomprehens": 210, "express": [210, 223, 238, 255, 262, 288, 291, 303, 352, 358, 448, 450, 546, 564, 578, 750, 977, 1089, 1148, 1207], "global": [210, 223, 233, 291, 341, 434, 440, 461, 463, 477, 508, 627, 628, 629, 658, 659, 660, 1006, 1082, 1128], "scope": [210, 233, 341, 522, 526, 814, 817, 1082, 1128], "variabl": [210, 233, 246, 249, 259, 262, 270, 278, 285, 288, 300, 320, 324, 346, 352, 358, 364, 368, 392, 420, 434, 437, 440, 461, 463, 469, 488, 519, 522, 524, 526, 564, 628, 655, 659, 786, 815, 919, 1006, 1035, 1036, 1043, 1117, 1128, 1153], "closur": [210, 233, 299, 316, 318, 319, 334, 340, 344, 785, 1082, 1084], "between": [210, 663, 1193], "walkthrough": 211, "reduc": [211, 445], "eight": 211, "color": 211, "pil": 211, "numpi": [211, 213, 240, 247, 287, 290, 309, 312, 323, 329, 341, 346, 362, 367, 368, 415, 1188, 1193], "cluster": 211, "excurs": [211, 287, 785], "matplotlib": [211, 240, 259, 291, 329, 346, 352, 1142, 1193], "now": [211, 223], "come": [211, 247, 537, 727, 1062, 1188], "let": 211, "kmean": 211, "result": [211, 498, 1200], "properti": [211, 249, 278, 379, 531, 540, 1107], "center": 211, "restor": 211, "alpha": 211, "back": [211, 695, 1184], "rgba": 211, "random": [212, 249, 282, 287, 575, 588, 596, 1208], "type": [212, 238, 262, 265, 275, 278, 285, 294, 295, 297, 299, 300, 314, 316, 334, 337, 338, 342, 354, 364, 373, 393, 436, 438, 439, 443, 450, 475, 485, 490, 531, 535, 648, 677, 698, 699, 743, 744, 747, 758, 760, 797, 819, 820, 825, 827, 828, 858, 867, 963, 970, 1033, 1084, 1086, 1099, 1106, 1129, 1195], "except": [212, 249, 265, 268, 275, 278, 290, 291, 299, 309, 312, 316, 317, 334, 337, 350, 356, 362, 366, 408, 620, 667, 668, 737, 786, 793, 817, 819, 1086], "demonstr": 212, "dict": [212, 262, 270, 272, 278, 285, 358, 364, 1105], "access": [212, 251, 428, 481, 482, 520, 646, 654, 662, 729, 819, 820, 824, 826, 828, 829, 830, 831, 838, 871, 900, 901, 902, 1100, 1107, 1134, 1135], "indic": [212, 240], "slice": [212, 223, 238, 249, 272, 278, 282, 303, 324, 330, 925, 1124, 1209, 1211], "protocol": [212, 223, 238, 259, 262, 265, 270, 272, 275, 278, 288, 303, 316, 320, 324, 342, 346, 352, 358, 771, 985, 1049, 1091, 1093], "standardthemen": 213, "hauptthema": 213, "numerik": 213, "lesen": [213, 233], "mat": 213, "l\u00f6sen": 213, "uni": 213, "\u00fcbung": [213, 216, 233], "propos": 214, "posix": [214, 815, 1030, 1039, 1052, 1054, 1055, 1056, 1057], "ipc": [214, 215, 415, 1052, 1054, 1055, 1056, 1057, 1255], "socket": [214, 988, 1011], "applic": [214, 507, 1046], "compani": 214, "thought": 214, "handgestrickt": 216, "um": 216, "fallen": 216, "lustvol": 216, "erleiden": 216, "programmier": 217, "baden": [217, 415], "w\u00fcrttemberg": [217, 415], "kursinform": 217, "kursaufbau": 217, "kursverlauf": [217, 225], "hand": 218, "privat": [218, 249, 278, 530, 531, 646, 718, 781, 914, 915, 938, 939], "argh": 220, "visual": [220, 247, 263, 498, 538, 1188, 1214, 1223], "studio": [220, 247, 263, 1188, 1214, 1223], "flatpak": 220, "issu": [220, 1082], "m": 220, "firma": [222, 415], "environ": [222, 287, 295, 297, 306, 308, 315, 316, 317, 404, 526, 919, 1043, 1111, 1175, 1223, 1224, 1225, 1233], "dai": [222, 226, 227, 229, 230, 231, 241, 242, 251, 252, 257, 260, 262, 263, 266, 273, 306, 309, 312, 315, 316, 317, 318, 319, 323, 327, 329, 334, 340, 341, 344, 345, 351, 355, 367, 371, 372, 374, 376, 379, 792, 1150, 1241], "advanc": [222, 226, 229, 238, 241, 250, 266, 276, 279, 290, 299, 302, 312, 318, 319, 320, 321, 322, 323, 328, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 354, 355, 362, 363, 364, 365, 375, 376, 378, 379, 415, 483, 517, 524, 1187, 1188, 1249], "18": [223, 225, 251, 270, 290, 302, 303, 317, 333, 356, 357, 358, 359, 377, 397, 415, 1077], "sy": [223, 249, 918, 1116], "multilin": [223, 255, 259, 352, 392, 518, 1131], "docstr": [223, 270, 282, 285, 288, 310, 342, 364, 392], "datentypen": [223, 233, 240, 253, 269, 281], "ausflug": [223, 272], "variablen": [223, 233, 240, 253, 269, 272, 281, 291], "deren": 223, "unterbau": 223, "zuweisung": 223, "mit": [223, 233, 238, 251, 415, 976, 1236, 1252], "hilf": 223, "tupl": [223, 228, 233, 238, 240, 246, 249, 259, 262, 265, 270, 272, 278, 282, 285, 288, 294, 295, 297, 300, 303, 310, 320, 324, 346, 352, 354, 358, 364, 373, 391, 392, 743, 792, 797, 1119, 1127, 1196], "unpack": [223, 228, 233, 238, 240, 249, 265, 270, 282, 288, 294, 295, 297, 300, 310, 346, 352, 354, 364, 373, 391, 392, 743, 792, 797, 1075, 1196], "unendlich": 223, "breit": 223, "divis": [223, 233], "floor": [223, 233], "konvertierung": 223, "konstruktoren": [223, 240], "welchen": 223, "typ": [223, 233], "typen": 223, "besser": 223, "laufzeitverhalten": [223, 233], "geeigneter": 223, "datenstrukturen": [223, 233, 234, 254, 272, 1251], "boolean": [223, 233, 259, 262, 270, 272, 278, 282, 285, 352, 358, 442, 524, 546, 1120, 1148, 1207], "short": [223, 262, 278, 442, 556, 867, 1062], "circuit": [223, 262, 278, 442], "evalu": [223, 262, 278, 518, 524], "warum": [223, 233], "sind": [223, 233], "mehr": [223, 238], "rang": [223, 228, 233, 240, 249, 255, 259, 262, 270, 272, 275, 282, 285, 288, 294, 295, 297, 300, 310, 324, 330, 341, 354, 358, 364, 368, 373, 676, 677, 743, 771, 791, 792, 793, 794, 795, 796, 1089, 1126, 1142], "foli": 223, "161": 223, "shallow": [223, 272, 1127], "deep": [223, 272, 1127], "dem": [223, 1252], "deepcopi": 223, "funktionen": [223, 233, 234, 238, 1251], "gotcha": [223, 865, 895, 1050], "90": 223, "ff": 223, "lokal": [223, 233, 291], "92": 223, "uniq": [223, 1170, 1171], "punkt": [223, 233], "zusammengefasst": 223, "hier": 223, "sch\u00f6nere": 223, "al": [223, 233, 282], "comprens": 223, "125": 223, "lesbarkeit": 223, "perform": [223, 246, 380, 496, 793], "review": [223, 252], "pprint": 223, "praktisch": 223, "debug": [223, 535, 885, 1085], "datentransform": 223, "127ff": 223, "complet": [223, 373, 507, 512, 513, 514, 515, 528, 530, 620, 948], "collect": [223, 272, 275, 300, 1062, 1105, 1206, 1219], "namedtupl": [223, 1105], "parameter\u00fcbergab": [223, 233], "variabel": 223, "lang": 223, "argumentlisten": 223, "erst": 223, "klass": 223, "weiterf\u00fchrend": [225, 247], "workspac": [226, 227, 229, 231], "core": [226, 263, 306, 1063], "special": [226, 345, 972], "tutori": [226, 229, 241, 247, 257, 287, 290, 323, 1188], "parti": [226, 257], "v": [228, 233, 240, 246, 249, 270, 275, 278, 282, 285, 291, 307, 310, 320, 324, 335, 391, 392, 430, 439, 451, 454, 458, 460, 535, 537, 639, 640, 641, 655, 802, 810, 827, 865, 885, 886, 892, 893, 1008, 1044, 1115, 1118, 1126, 1137, 1216], "return": [228, 291, 358, 474, 522, 753, 754, 756, 771], "orient": [228, 278, 291, 299, 302, 303, 316, 318, 319, 322, 323, 328, 334, 337, 340, 341, 344, 345, 350, 356, 362, 363, 366, 367, 380, 385, 504, 644, 715, 1102], "addit": [229, 644, 660, 722, 1103], "brought": 229, "thoma": 229, "cloud": [230, 355, 394], "particip": 230, "desk": 230, "interlud": [230, 867], "bloodi": 230, "wild": [230, 279, 334, 337, 340], "watchdog": 230, "25": [231, 241, 250, 257, 268, 273, 284, 326, 327, 334, 335, 336, 339, 415], "grundlegend": [233, 234, 1251], "sprachelement": [233, 234, 1251], "syntax": [233, 240, 246, 278, 288, 310, 324, 352, 364, 392, 524, 786, 795, 1115], "semantik": 233, "einr\u00fcckung": 233, "ihren": 233, "\u00e4ndern": 233, "kommentar": 233, "sprach": 233, "standarddatentypen": 233, "elementar": [233, 234, 1251], "beliebig": 233, "gro\u00df": 233, "vergleichsoperatoren": 233, "pr\u00e4zedenz": 233, "vor": 233, "strichrechnung": 233, "modulo": 233, "un\u00e4rer": 233, "negat": [233, 1207], "erzwingen": 233, "auch": 233, "zeichenketten": 233, "raw": [233, 240, 255, 259, 272, 278, 300, 330, 1100, 1131, 1183], "f": [233, 255, 270, 288, 330, 352, 1132], "konvertierungen": 233, "pr\u00e4zendenzregeln": 233, "literal": 233, "primit": [233, 374, 809, 1089], "konstanten": 233, "operatoren": 233, "ausdr\u00fcck": 233, "operatorrangfolgen": 233, "\u00fcbungen": [233, 1235], "zwei": 233, "vertauschen": 233, "kontrollstrukturen": [233, 234, 253, 269, 270, 281, 1251], "anweisungen": 233, "folgen": 233, "bedingungen": 233, "verzweigungen": 233, "bedingt": 233, "anweisung": 233, "verzweigung": [233, 234, 1251], "geschachtelt": 233, "mehrfach": 233, "fallauswahl": 233, "schleifen": [233, 234, 1251], "z\u00e4hlergesteuert": 233, "kopfgesteuert": 233, "schleif": [233, 238], "fu\u00dfgesteuert": 233, "jf": 233, "continu": [233, 268, 270, 309, 317, 319, 341, 351, 371, 376, 457, 1122, 1125], "sequenti": [233, 238, 270, 282, 352, 368, 684, 685, 692, 693, 1089, 1123], "schnell\u00fcbersicht": 233, "sprunganweisungen": 233, "endlosschleifen": 233, "ben\u00f6tigt": 233, "Suche": 233, "eindimensional": 233, "tupel": 233, "listen": [233, 238, 272, 392], "revers": [233, 689, 690, 707, 708, 709, 1106], "stapel": 233, "schlangen": 233, "versuch": 233, "zur\u00fcck": 233, "hybrid": 233, "supergscheit": 233, "methoden": [233, 234, 1251], "prozeduren": [233, 234, 1251], "funktionspoint": 233, "so": [233, 246, 249, 259, 291, 315, 504, 514, 644, 743, 756, 758, 785, 1209], "heisst": [233, 238], "funktionsobjekt": 233, "primzahlenbeispiel": 233, "funktion": 233, "laufzeitfehl": 233, "existiert": 233, "zuweisen": 233, "fehlerfal": 233, "peter": 233, "unterprogramm": 233, "wert": 233, "referenzen": 233, "r\u00fcckgabewert": 233, "oder": [233, 398, 1236], "inner": [233, 1082], "standardbibliotheken": 233, "built": [233, 316, 648, 747, 865, 1065, 1086], "funktionalit\u00e4ten": 233, "struktur": 234, "herdt": [234, 1251], "kapitel": [234, 1251], "ganz": [238, 270], "kurz": 238, "mehreren": 238, "returnwerten": 238, "bzw": [238, 398], "containerdatentypen": 238, "untypisiert": 238, "l\u00f6schen": 238, "begriff": 238, "zufal": 238, "regular": [238, 251, 252, 288, 291, 303, 352, 358, 977], "hallo": 240, "speicher": 240, "sch\u00fctze": 240, "ich": 240, "davor": 240, "aber": 240, "gemischten": 240, "wiederholung": [240, 275], "objektidentit\u00e4t": 240, "statement": [240, 249, 451, 465, 1082, 1084, 1097, 1115, 1121, 1200, 1203], "operationen": 240, "verloren": 240, "interpol": 240, "mittel": [240, 246], "scipi": 240, "29": [242, 316, 350, 351, 352, 366, 367, 368, 369, 397, 405, 415], "assign": [246, 272, 278, 285, 346, 364, 368, 392, 447, 564, 645, 651, 652, 753, 754, 756, 801, 819, 1082, 1117, 1124, 1128, 1205], "fun": [246, 285, 299, 1117], "arithmet": [246, 251, 270, 282, 392, 420, 441, 470, 564, 578, 637, 660, 673, 674, 678, 681, 1106, 1118], "complex": [246, 285, 392, 1233], "nur": 246, "sum": [246, 727], "weiter": 246, "dynamisch": 246, "evaluierung": 246, "scienc": [247, 273, 287, 290, 323, 340, 341, 342, 344, 364, 366, 1188], "don": [247, 380, 793, 1188], "batteri": [247, 392, 1133, 1188], "confer": [247, 323, 1188], "zipfil": 249, "member": [249, 278, 646, 651, 652, 654, 659, 729, 730, 747, 820], "attribut": [249, 275, 291, 354, 925, 1028, 1100, 1107, 1213], "protect": [249, 718, 793, 877], "posit": [249, 644, 1080, 1109, 1139], "keyword": [249, 270, 294, 295, 297, 354, 373, 393, 487, 488, 1082, 1109, 1129], "argument": [249, 270, 278, 299, 334, 393, 471, 518, 524, 1015, 1041, 1085, 1109, 1116, 1129, 1139], "mix": [249, 262, 330, 786, 1164, 1165], "yield": [249, 265, 270, 288, 316, 330, 1089, 1092], "filter": [249, 278, 307, 308, 314, 342, 352, 604, 605, 606, 793, 1207], "nonetyp": [249, 262], "none": [249, 270], "recurs": [249, 473, 652, 750, 838, 950], "fibonacci": [249, 771, 773, 1090, 1158], "sever": 249, "same": [249, 628, 653, 659, 785, 1128, 1222], "oserror": 249, "errno": [249, 1006], "platform": [249, 992], "assert": [249, 291, 342], "assertionerror": 249, "predefin": [250, 465, 524, 1233], "stream": [250, 858, 930, 1137], "pcap": [250, 263, 265], "programmieren": [251, 415], "tool": [251, 324, 327, 342, 371, 399, 912, 978, 981, 992, 1248], "massacr": 251, "kick": 251, "encapsul": [251, 380, 490, 650, 817], "flow": [251, 281, 287, 302, 309, 312, 322, 323, 328, 329, 350, 351, 356, 357, 362, 363, 366, 367, 459], "pointer": [251, 252, 268, 294, 295, 297, 315, 317, 355, 373, 374, 380, 467, 468, 470, 472, 488, 620, 637, 652, 656, 657, 673, 674, 675, 677, 678, 681, 701, 743, 758, 798, 799, 800, 801, 803], "standard": [251, 263, 268, 272, 287, 315, 317, 323, 438, 485, 535, 607, 667, 677, 710, 721, 723, 751, 930, 1014, 1137, 1188, 1230], "stl": [251, 620, 636, 637, 638, 669, 677, 678, 706], "kid": 252, "recapitul": 252, "some": [252, 270, 275, 314, 317, 327, 524, 786, 817], "jump": [252, 470], "complic": [252, 569, 1079], "toolbox": 252, "databas": [252, 344, 728, 865, 1144, 1146, 1181, 1197, 1198, 1200], "gtest": [252, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234], "smart": [252, 268, 294, 295, 297, 317, 355, 373, 374, 620, 798, 799, 800, 801], "datenbank": 254, "showcas": 254, "kommt": 254, "db": 254, "aufgab": 254, "formulieren": 254, "damit": 254, "dies": 254, "http": [254, 342], "verbindung": 254, "schicken": 254, "jetzt": 254, "schickman": 254, "weg": 254, "vom": [254, 415], "server": [254, 1204], "php": 254, "j": 254, "empfangen": 254, "nun": 254, "muessen": 254, "verwandlen": 254, "liter": [255, 392, 564, 817, 818], "quot": [255, 259, 285, 518, 519, 1196], "friend": [255, 813], "sinc": [255, 288, 294, 295, 297, 659, 1132], "sap": [256, 309, 311, 312, 313, 314, 361, 415], "export": 256, "solut": [256, 462, 484, 510, 534, 542, 543, 544, 547, 548, 553, 562, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 652, 679, 709, 747, 749, 756, 780, 781, 790, 825, 921, 925, 944, 1003, 1005, 1009, 1069, 1079, 1081, 1097, 1224], "terminologi": [259, 327, 371, 922, 1060, 1195], "31": [260, 268, 276, 366, 367, 368, 369, 415], "numer": [260, 362], "ai": 260, "mountain": 260, "common": [262, 494, 506, 692, 1090, 1099], "wtf": [262, 1012, 1060], "creativ": [265, 913, 1103], "shift": [265, 446, 660], "hmmm": 266, "undefin": [268, 519, 526, 1128], "behavior": [268, 795], "again": [268, 316, 327, 371, 654, 742, 968, 1106, 1237], "repeat": [268, 960], "quickli": 268, "algorithm": [268, 285, 309, 317, 354, 355, 380, 470, 603, 620, 637, 672, 673, 677, 678, 687, 691, 1193, 1195], "functor": [268, 620, 685, 785, 787, 788, 806], "unifi": 268, "uml": [268, 556], "todai": [268, 1082], "associ": [268, 449, 556, 696, 697], "dynam": [268, 299, 318, 319, 320, 340, 344, 477, 624, 625, 626, 678, 711, 712, 827, 843, 873, 874, 1080, 1100, 1109], "alloc": [268, 354, 380, 494, 634, 679, 704, 705, 712, 823, 825, 858, 881, 1024, 1089], "week": 268, "zahl": 270, "miscellanea": 270, "brace": [270, 294, 295, 297, 354, 355, 373, 745, 746, 747, 748, 1207], "singl": [270, 518, 534, 552, 1004, 1062, 1228], "hour_of_dai": 270, "membership": [270, 1123], "best": 270, "doc": [272, 342], "ident": [272, 335], "datenypen": 272, "libarari": 272, "chainmap": 272, "dequ": 272, "suchalgorithmen": 272, "pitfal": [272, 315, 318, 393, 519, 524, 648, 717, 743, 771, 788], "fromkei": [272, 285], "join": [272, 278, 352, 367, 368, 1133, 1161], "lstrip": [272, 389], "rstrip": [272, 389], "sequentiel": 275, "konstant": 275, "suchzeit": 275, "metaprogram": 275, "everywher": [275, 291, 652, 1087], "defaultdict": [275, 300], "hello": [278, 288, 419, 775, 865, 866, 1113], "world": [278, 419, 426, 865, 866, 1113], "blahblah": [278, 282, 285, 288, 352, 677, 1112], "commandlin": [278, 306, 344, 383, 388, 471, 499, 506, 525, 948, 1003, 1026, 1060, 1116, 1139], "lifetim": [278, 434, 463, 788, 802, 810, 1197], "preview": [278, 539], "explicit": [278, 428, 644, 656, 748, 786, 788, 801, 814, 1097], "max": 278, "iteratoren": 278, "generatoren": 278, "ordereddict": 278, "duck": [278, 294, 295, 297, 334, 337, 354, 758, 828, 1099], "resolut": 278, "order": [278, 628, 1086, 1106], "mro": 278, "super": 278, "__bases__": 278, "__mro__": 278, "self": [278, 652, 1101], "call": [278, 464, 468, 494, 498, 500, 620, 890, 1008, 1014, 1043, 1049, 1109], "mangl": [278, 653], "udemi": 278, "claus": [278, 318, 340, 344, 1086], "lambda": [278, 294, 295, 297, 324, 354, 355, 373, 743, 784, 785, 786, 787, 806], "oppos": 278, "discuss": [281, 318, 319, 403, 428, 430, 815, 890, 895, 903], "chart": 281, "interact": [282, 330, 520, 1113, 1165], "1st": 282, "explan": [282, 342], "preced": [282, 285, 449, 1118], "float": [282, 285, 342, 1118], "einschub": 282, "vergleich": 282, "filterketten": 282, "zen": 282, "datensatz": 282, "notat": 282, "letzt": 282, "letzten": 282, "infinit": [285, 1090], "long": [285, 743], "comparison": [285, 524, 644, 691, 722, 838, 912, 1106, 1118], "digit": [285, 397, 1155], "english": [285, 399, 1155], "determin": [285, 934, 1152, 1162, 1163], "maximum": [285, 1152, 1162, 1163], "out": [285, 318, 319, 549, 647, 676, 677, 1050, 1064, 1082, 1124], "duplic": [285, 534, 669, 1017], "encod": [285, 287, 288, 299, 309, 329, 330, 346, 397, 1201], "nest": [288, 460, 473, 522], "itertool": 288, "chain": [288, 890], "destructor": [288, 628, 634, 649, 714, 719, 800], "prient": 290, "standesregist": 290, "sqlite3": [290, 513, 514, 515, 516, 1144, 1200], "xml": [290, 1213], "tree": [290, 860, 887, 926, 952, 959, 997, 1004, 1043], "projektabschlusstag": 290, "anyth": 291, "defin": [291, 510, 648, 786, 820, 1086], "own": [291, 506, 755, 765, 925], "lookup": [291, 526, 612, 613], "vorbesprechung": 293, "legend": 293, "neuerungen": 293, "seit": 293, "2011": [293, 294, 295, 297, 415], "ausblick": 293, "thank": [294, 295, 297], "you": [294, 295, 297, 380, 758], "readablil": [294, 295, 297], "writabl": [294, 295, 297, 1015], "err": [294, 295, 297, 354, 373, 701, 758, 792, 797], "bind": [294, 295, 297, 354, 373, 792, 797, 805, 806, 1200], "without": [294, 295, 297, 354, 515, 658, 679, 754, 758, 1024], "simpli": [294, 295, 297, 355, 1005], "deserv": [294, 295, 297], "ag": [294, 295, 297, 733], "overrid": [294, 295, 297, 354, 373, 790], "delet": [294, 295, 297, 354, 373, 625, 694, 781, 948], "strongli": [294, 295, 297, 354, 373, 744], "enum": [294, 295, 297, 354, 373, 486, 744, 855], "deleg": [294, 295, 297, 354, 373, 749], "nullptr": [294, 295, 297, 354, 373, 757], "rvalu": [294, 295, 297, 354, 373, 374, 380, 752, 755, 756], "skeleton": [295, 297, 315, 317, 662, 914, 915], "perfect": [297, 373, 380, 444, 486, 805], "architectur": [298, 375, 378, 415, 504, 743, 782, 887], "pattern": [298, 316, 318, 319, 373, 415, 548, 562, 1090, 1244], "mondai": 298, "tuesdai": 298, "wednesdai": 298, "forc": [299, 443], "front": [299, 318, 340, 1100], "seri": [299, 302, 322, 323, 328, 329, 350, 351, 357, 362, 363, 366, 367, 620, 1174, 1181, 1206], "piec": [299, 371], "go": [299, 1017, 1196], "kickoff": [299, 318, 319, 334, 337, 341, 344], "livehack": [299, 308, 506, 549, 752, 850, 1128, 1216, 1223], "Such": [300, 722], "noob": 302, "quick": 306, "uart": [306, 918], "susi": 306, "untold": [306, 309, 315, 316, 319, 355], "whet": [307, 308], "appetit": [307, 308], "panda": [307, 309, 310, 312, 314, 316, 329, 341, 346, 352, 362, 366, 367, 1193, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212], "regex": 307, "pipelin": 308, "categori": 308, "payment": 308, "select": [308, 314, 316, 985, 992, 1052, 1206, 1207, 1209, 1211, 1228], "uncategor": 308, "dataset": [309, 313, 314, 1192, 1194], "origin": [309, 312, 669, 787, 788, 897, 1196], "automat": [309, 312, 332, 348, 440, 463, 780, 829, 1243], "cleanup": [309, 312, 895, 906], "conversiosn": 310, "specif": [312, 1037, 1176], "usecas": 314, "drop": [314, 544, 793], "nan": 314, "datafram": [314, 1193, 1206, 1210], "isna": 314, "to_datetim": 314, "dated": 314, "workabl": 314, "modifi": [314, 481, 488, 519, 585, 819, 1034, 1097, 1127, 1212], "increas": 314, "price": 314, "particular": 314, "store": [314, 481, 549, 1034, 1097], "readabl": [314, 484, 817, 1020], "combin": [314, 447, 563, 564, 577], "prefer": [315, 317], "ubuntu": [315, 317, 1077], "under": [315, 317, 950, 1010, 1084], "unsupport": 315, "heavi": [315, 317, 924], "weight": [315, 317], "resourc": [315, 399, 652, 712, 801, 814, 819, 883], "r": [315, 967, 1004], "littl": [315, 373, 374, 455, 506, 1112], "concurr": 315, "far": [315, 810, 1195], "fact": [316, 869, 932, 1100, 1103], "fixtur": [316, 601, 838, 1221, 1222, 1232, 1233, 1234], "omin": [316, 1085], "warm": 317, "resolv": 317, "insid": [318, 319, 654, 659, 755, 756], "construct": [318, 340, 344, 1105, 1122], "emphasi": [318, 340, 344], "recoveri": [318, 319, 340, 341, 344], "broader": 318, "sens": 318, "morn": [319, 323, 327, 329, 341, 351, 355, 367, 371, 374, 376, 379], "pytest": [319, 367, 1220, 1221], "awaken": [323, 351, 367, 374, 376, 379], "bash": [327, 371, 415, 968, 1237], "bourn": [327, 371, 968, 1237], "inspect": [327, 371, 975, 978], "wakeup": [327, 329, 355, 371, 1048, 1050], "redirect": [327, 371, 928, 929, 930, 931, 954, 967, 1017], "pipe": [327, 371, 795, 913, 928, 929, 931, 932, 979, 981], "archiv": [327, 371, 909, 910, 912, 913, 1077, 1078, 1081], "compress": [327, 371, 909, 910, 912, 913], "network": [327, 566, 881, 882, 986, 1011, 1258], "least": [327, 1228], "day2": 329, "interpret": [330, 498, 524, 550, 563, 564, 577, 578, 1165], "len": 330, "abl": 330, "callabl": [330, 806], "sandbox": [334, 337], "equal": [335, 598, 644, 660, 661, 662, 663, 664, 684, 1106], "spoiler": 337, "annot": 338, "multiprocess": 340, "idea": 340, "veri": [341, 380, 790, 823, 1213], "leftov": 341, "yesterdai": 341, "ifi": 341, "toolcas": [341, 354, 373, 530, 761, 762, 763], "arg": [341, 1085], "kwarg": [341, 1085], "includ": [341, 464, 530, 540, 1133], "receiv": [341, 1056], "udp": 341, "datagram": [341, 986], "compositesink": 341, "timestamp": [341, 895], "org": [342, 397], "aaarghhh": 342, "expresss": 342, "constexpr": [354, 373, 380, 750], "constinit": [354, 373, 380], "constev": [354, 373, 380], "want": [354, 507, 528, 717, 743, 754, 758, 781, 855, 860, 1019, 1103], "erasur": [354, 825, 827], "classic": [355, 807, 824], "semant": [355, 374, 380, 752, 753, 754, 755, 756, 1056], "kochtopf": 355, "roundup": 355, "still": [355, 547, 743, 1084, 1089], "weird": 358, "exchang": [358, 986], "schuetzen": 358, "pathlib": [358, 368], "regexen": 358, "distil": 358, "py": 358, "infin": [364, 1090], "listdir": [367, 368], "option": [367, 375, 378, 380, 452, 499, 508, 509, 510, 514, 515, 913, 948, 950, 970, 977, 992, 1004, 1196], "scikit": [367, 368], "struct": [368, 473, 474, 489, 644, 734, 797], "cell": 368, "wuerfeln": 368, "prime": [368, 1159, 1167, 1173], "misc": 368, "crap": 368, "datatyo": 368, "einlesen": 368, "sep": 368, "putti": 371, "toward": 372, "exact": 372, "thorough": [373, 374, 380, 381, 415], "initializer_list": [373, 544, 746, 748], "shared_ptr": [373, 374, 799, 802, 835], "unique_ptr": [373, 374, 799, 802, 803], "similar": [373, 950], "saniti": [373, 380, 484, 492, 506], "sensorconfig": 374, "thereof": 374, "lock": [374, 814, 817, 879, 892], "make": [374, 415, 514, 515, 528, 537, 599, 742, 781, 871, 914, 915, 1063, 1064, 1248], "safe": [374, 815, 1060], "sketch": 374, "latch": 374, "mylatch": 374, "coverag": [375, 378, 1089], "analysi": [375, 378, 499], "multiplatform": [375, 378], "consider": [375, 378, 743, 1046], "much": [376, 500, 509, 787, 1084], "variou": 376, "kind": 376, "know": [380, 485, 515], "look": [380, 644, 1010, 1011, 1012], "isn": 380, "though": 380, "omit": 380, "absenc": 380, "heap": [380, 747], "checker": 382, "blinklicht": [383, 384, 385, 386], "electron": [383, 985], "aspect": 383, "circuitri": 383, "header": [383, 462, 508, 511, 659, 992, 1177], "pinout": [383, 992], "unittest": [386, 1222, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1259], "ece19": 387, "g2": [389, 915], "big": [389, 415, 875], "swoop": 389, "size": [389, 438, 617, 768, 964], "chunk": 389, "str": [389, 1108], "byte": 391, "btw": 392, "wertebereich": 392, "sidenot": [393, 1129], "pure": [393, 717, 719, 1129], "beauti": [393, 500, 918, 994, 1129], "login": [394, 923, 995], "formalit\u00e4ten": 395, "ec": [396, 411, 413, 914, 915], "daili": 397, "fail": [397, 1019, 1221, 1228, 1230], "reiter": 397, "argpars": [397, 1116, 1139], "deutsch": [398, 415], "lehrinhalt": 398, "lernergebniss": 398, "lv": 398, "verpflichtend": 398, "lernressourcen": 398, "instrument": 398, "art": 398, "vermittlung": 398, "begleitbedingungen": 398, "pr\u00fcfungsmethod": 398, "beurteilungskriterien": 398, "mode": [399, 535, 933, 985, 1018, 1113, 1137], "deliveri": [399, 1059, 1060], "co": 399, "requisit": 399, "assess": 399, "criteria": [399, 1044], "whose": 401, "fault": 401, "newcom": 402, "jjjj": 405, "sidewai": [406, 659, 806, 817, 1085, 1090], "bisher": 415, "gehalten": 415, "entwickl": 415, "fortgeschritten": [415, 1239], "wiener": 415, "neustadt": 415, "einf\u00fchrung": [415, 1238, 1240, 1247], "ober\u00f6sterreich": 415, "pictur": [415, 875], "obersteiermark": 415, "korn": 415, "salzburg": 415, "ausgew\u00e4hlt": 415, "themen": 415, "2018": 415, "raum": 415, "n\u00fcrnberg": 415, "oberb\u00fcren": 415, "schweiz": 415, "2017": 415, "m\u00fcnchen": [415, 1236], "lowlevel": 415, "refresh": 415, "programmiererstandpunkt": 415, "2016": 415, "wien": 415, "workshop": 415, "bodenseo": 415, "hemmenhofen": 415, "bodense": 415, "systemnah": 415, "2014": 415, "mathia": 415, "kettner": 415, "siemen": 415, "braunschweig": 415, "intermedi": [415, 575, 1082, 1099], "scratch": [415, 1236], "lpd": 415, "hannov": 415, "unter": 415, "k\u00f6ln": 415, "projektverwaltung": 415, "subvers": [415, 1253], "lka": 415, "niedersachsen": 415, "konfigur": 415, "gnu": [415, 498, 1062, 1248], "2012": 415, "hamburg": 415, "fehlerdiagnos": 415, "polizei": 415, "stia": 415, "admont": 415, "bi": 415, "2010": 415, "softwareentwicklung": 415, "darmstadt": 415, "ulm": 415, "bundeswehr": 415, "wildflecken": 415, "cool": [418, 1132], "gui": 418, "Their": [418, 438], "hobbi": 418, "histori": [418, 643, 742, 851, 1056, 1082, 1112, 1192], "second": [420, 422], "fahrenheit": [421, 423, 425, 572], "tabl": [421, 423, 425, 598, 1106], "simplif": 422, "revisit": [422, 490, 754], "constant": [424, 439, 464, 494, 575], "preprocessor": [424, 464, 465], "macro": [425, 464, 465, 508, 522, 846, 867], "outsid": 426, "cat": [426, 973], "poor": [426, 427], "wc": 427, "memset": 428, "histogram": 429, "nonsens": 430, "signatur": 430, "declar": [430, 431, 460, 461, 462, 659], "mistak": 432, "stdin": [433, 981, 995], "variant": [438, 547, 553, 743, 820, 829, 830, 831, 1056], "qualifi": 438, "width": [438, 470, 664, 677, 993, 1124], "escap": [439, 1131], "logic": 442, "implicit": [443, 803], "sign": 443, "truncat": [443, 1024], "propag": 443, "unsign": 443, "compil": [443, 460, 465, 481, 482, 511, 530, 534, 535, 645, 648, 652, 782, 803, 867, 887, 1062, 1065, 1075, 1079], "warn": [443, 449, 465, 1038, 1060], "cast": 443, "increment": [444, 677, 771, 1097], "decrement": [444, 677], "confus": [444, 1118, 1207], "manipul": [446, 520, 803, 1024, 1060], "bitwis": [446, 1207], "AND": 446, "OR": 446, "xor": 446, "right": [446, 1169], "invert": [446, 1206], "complement": 446, "summari": [449, 644, 806, 887, 913, 1080, 1100, 1209, 1211], "true": [452, 547, 657, 1210], "fals": 452, "truth": 452, "matter": [453, 528], "distinct": 454, "purpos": [455, 1028], "closer": 455, "comma": 455, "infam": 455, "idiom": 455, "bodi": 456, "goto": 458, "label": [458, 1211], "monolith": [460, 534, 549, 602], "separ": [460, 461, 534, 549, 815, 972, 1079], "static": [463, 487, 598, 658, 659, 827, 1079, 1080, 1081, 1104], "visibl": [463, 487], "replac": [464, 587, 832], "inlin": [464, 494, 647, 659], "guard": 464, "rule": [465, 504, 645, 648, 659, 748, 756, 793, 926], "span": 465, "stringif": [465, 1108], "token": 465, "address": [467, 858, 901, 925, 992, 1046, 1207], "arbitrari": [470, 677, 1085, 1109], "typedef": 475, "alia": 475, "singli": 478, "volatil": [480, 949], "lie": 480, "valid": 480, "handler": [480, 1059, 1060], "intrins": 481, "atom": [481, 812, 817, 885, 886, 890, 891, 906, 1033], "builtin": 481, "align": 482, "unalign": 482, "pad": 482, "readabilti": 484, "shoot": 484, "offens": 484, "unobvi": 484, "ambigu": [484, 490, 748], "smell": 484, "size_t": 485, "discret": 486, "tradit": [486, 504, 1109], "approach": [486, 508, 509, 510], "wishlist": 486, "close": [486, 552, 798, 1056], "somewhat": 487, "contriv": 487, "hoorai": 487, "correct": [488, 655, 790], "non": [488, 519, 591, 592, 593, 594, 595, 596, 597, 634, 654, 820, 826, 1228], "good": [489, 508, 509, 644, 659, 677, 747, 756, 765, 766, 793, 795], "old": [489, 659, 677, 743, 756, 765, 766, 795], "c99": 489, "explict": 490, "safeti": [490, 506], "scheme": 490, "artifici": [490, 1189], "valgrind": [491, 625], "action": [491, 1060], "optim": [493, 494, 495], "bound": [493, 494, 625, 1044], "unnecessari": 494, "peephol": 494, "subexpress": 494, "elimin": [494, 803, 1157], "strength": 494, "reduct": 494, "fold": 494, "invari": 494, "unrol": 494, "tail": [494, 979], "cpu": [494, 925, 1044, 1050], "cach": [495, 510, 526, 793], "multidimension": 495, "thrash": 495, "profil": [497, 498, 500, 501], "donald": 497, "knuth": 497, "toni": 497, "hoar": 497, "larri": 497, "wall": 497, "practic": [497, 513], "brian": 497, "w": 497, "kernighan": 497, "rob": 497, "pike": 497, "gprof": 498, "flat": 498, "callgrind": 499, "per": [499, 855, 895, 1233], "kcachegrind": 499, "oprofil": 500, "wide": 500, "offlin": 500, "graphic": 500, "accomplish": 504, "disclaim": [504, 927], "principl": [504, 552], "yagni": 504, "uncl": 505, "bob": 505, "typic": [506, 926, 1030, 1046], "bookkeep": 506, "effort": 506, "spaghetti": [506, 528], "concaten": [506, 1205], "input": [506, 930, 1089, 1193], "yyyi": 506, "mm": 506, "where": [506, 524, 537, 924, 1062], "testabl": 506, "explicitli": [506, 786, 803], "categor": 506, "net": 506, "place": [506, 519, 603, 648, 689, 819, 914, 915, 1127], "overengin": [506, 659], "add_custom_command": 507, "handwritten": [507, 512, 787, 788], "prototyp": [507, 771], "deepli": 507, "conf": 507, "et": 507, "voila": 507, "blacklist": [508, 509], "flag": [508, 723, 873, 1014, 1132], "libhello": 508, "bad": [508, 509, 793, 825, 856], "target_compile_definit": [509, 514, 515], "backlist": 509, "availablil": 509, "target": [509, 531, 537, 538, 540, 601, 1022, 1063, 1243], "use_blacklist": 510, "libmosquitto": 512, "toplevel": 512, "cmakelist": [512, 530], "capabl": [512, 513], "find_packag": [513, 516], "node": [513, 530, 875, 1017], "theori": [513, 756], "configure_fil": 514, "instead": 514, "put": 514, "someon": 515, "who": 515, "jjj": [517, 888], "bracket": 518, "execut": [518, 534, 538, 933, 1080, 1086, 1094, 1114, 1164, 1228, 1230], "unquot": [518, 519, 524], "basta": 519, "inconsist": [519, 747], "modif": [519, 695, 1079], "foreach": [519, 521], "filesystem": [520, 546, 838, 1056], "pathnam": 520, "hash": [520, 1114], "checksum": 520, "append": [520, 1205], "glob": 520, "cmake_path": 520, "decompos": 520, "compos": 520, "argc": [522, 1041], "argv": [522, 1041, 1116], "argvn": 522, "argn": 522, "parent_scop": 522, "fanci": 522, "cmake_parse_argu": [522, 528], "care": [524, 785], "polici": [524, 1049], "rather": 524, "mess": [524, 748, 1201], "dereferenc": 524, "weirdli": 524, "ain": 525, "empti": [526, 875, 967, 1100, 1157], "empty": 526, "defined": 526, "indirect": 526, "add_librari": 528, "streamlin": 528, "my_add_librari": 528, "architect": 528, "noi": 529, "include_directori": [529, 530, 531], "motiv": [530, 544, 547, 563, 564, 660, 744, 747, 749, 758, 760, 785, 791, 907, 1091, 1101, 1107], "around": [530, 743, 771], "adjust": [530, 997, 1075], "boilerpl": [534, 787, 883], "consist": [534, 858], "paus": 535, "diagram": 535, "cmake_build_typ": 535, "k": [535, 1190], "printf": [535, 646], "popular": [535, 919], "prefix": [537, 1085], "runpath": 537, "abi": 537, "normal": 539, "subdirectori": 540, "reorgan": 540, "i2c": [542, 992, 994], "subhierarchi": 542, "instanti": [542, 549, 698, 760, 820, 853], "adapt": [543, 549, 558, 563, 565, 572, 577, 806], "must": [543, 1021], "adapte": 543, "asensor": 543, "real": [543, 651, 743, 804, 945], "measur": [543, 586, 818, 1048, 1050], "insert": [544, 610, 611, 694, 695, 698, 699, 700, 735, 805, 834, 835, 875], "bulk": 544, "6a": 544, "socialdb": 545, "thermomet": [546, 566, 567, 580, 581, 600], "aggreg": [547, 556, 747], "conret": 547, "realiz": 547, "situat": [547, 1005], "constantsensor": 547, "decoratedconstantsensor": 547, "randomsensor": [547, 588], "decoratedrandomsensor": 547, "verifi": [547, 960, 994, 996, 1193], "hold": [547, 1105], "studi": [549, 791, 792, 1074], "heat": 549, "dbuslogg": 549, "dbusvaluestor": 549, "either": 549, "stop": [549, 801], "help": [549, 948, 980, 1216, 1223], "observ": [551, 579, 1091], "liskov": 552, "substitut": [552, 657], "segreg": 552, "invers": [552, 1049], "proxi": [553, 563, 566, 567, 577, 580, 581], "foundat": 554, "hierarchi": [554, 667, 926, 1086], "hypothet": [554, 1106], "singleton": [555, 568, 569, 570, 582, 583, 584], "connector": 556, "uniniti": [564, 657], "flexibl": [568, 569, 582, 583], "strict": [569, 583], "inflex": [570, 584], "i2csensorfactori": 571, "concret": [571, 582, 583], "i2csensorfactory_vendor1": 571, "stub": [580, 894], "socialinsur": [582, 583], "oegk": [582, 583], "sv": [582, 583], "introduc": [585, 646, 793], "relationship": [585, 719, 720, 1193], "firstnam": 585, "lastnam": [585, 736, 738], "w1sensor": [585, 602], "answer": [585, 785], "try": [589, 667, 801, 1086], "ledstripedisplay_nopoli": 591, "cover": [591, 592, 593, 594, 595, 596, 597, 600], "hysteresis_nopoli": 592, "averagingsensor_nopoli": 593, "constantsensor_nopoli": 594, "mocksensor_nopoli": 595, "randomsensor_nopoli": 596, "mock": 597, "shape": [598, 948], "procedur": 598, "circl": 598, "area": [598, 664], "squar": 598, "massag": 599, "sub": 599, "notfound": 601, "find_is_const": 601, "isol": [601, 1197, 1233], "realiti": 601, "pc": 601, "greater": 605, "odd": 606, "overwrit": 610, "sunni": [611, 613, 616, 1015, 1019, 1020, 1021], "uniquifi": 618, "transcript": 620, "malloc": 625, "free": 625, "mismatch": [625, 1005], "across": [628, 824, 826, 828, 830], "ownership": [633, 634, 635, 803, 933], "raii": [633, 634, 635, 814], "dealloc": 634, "naiv": [637, 658, 709, 903, 1059, 1090, 1206], "ol": [644, 792], "distanc": [644, 663], "length": 644, "specifi": [646, 1015], "otherwis": 646, "lifecycl": 649, "dragon": [652, 809], "memberwis": 652, "straighforward": 652, "correctli": 652, "underli": [653, 744], "mechan": 653, "just": 653, "pollut": 655, "hidden": [656, 970], "cannot": 657, "easili": 657, "odr": 659, "litt": 659, "defnit": 659, "ostream": [660, 661, 662, 663, 664], "cout": 660, "cuboid": 661, "upon": [661, 663, 664], "point3d": [661, 663], "surfac": 661, "volum": [661, 1077], "unari": [662, 663], "rectangl": [663, 664], "coordin": [663, 664], "absolut": [663, 838, 972, 1187], "height": 664, "catch": [667, 1086], "throw": [667, 820], "spirit": [677, 802, 803, 804], "pre": [679, 747], "destin": [679, 1015], "back_insert_iter": 679, "binary_search": 682, "intellig": [682, 688, 1093, 1189], "find_if": [685, 736], "customiz": 685, "for_each": 686, "lower_bound": 688, "reverse_copi": [690, 709], "characterist": [692, 695], "fill": [698, 1200], "definin": 699, "subscript": 700, "eras": 701, "multimap": 703, "deriv": [713, 714], "larger": [717, 1081, 1089], "conveni": 722, "sto": 722, "to_str": 722, "substr": [722, 1133], "paint": 723, "american": 723, "onto": 723, "moodl": [724, 935, 936, 961], "proce": 726, "passwderror": 726, "cin": 727, "n": 733, "year": 733, "transform": [734, 806, 835, 1089], "wrong": [737, 817, 1015], "great": [742, 1046], "school": 743, "item": [743, 805, 834, 835, 836, 1084, 1090], "inevit": 743, "union": [743, 820], "uniform": 745, "implementor": 746, "direct": [746, 858], "refus": 747, "narrow": 747, "realist": [748, 1087, 1221], "int": [748, 1041], "nicolai": 748, "josutti": 748, "complain": 748, "said": 751, "guidelin": 751, "well": 751, "smartptr": 753, "lvalu": [756, 805], "wish": [756, 1099], "Ones": 756, "sai": [758, 950], "decai": 758, "chosen": 760, "rescu": [760, 785, 807, 1064, 1085, 1106, 1212], "syntact": [760, 1085], "variat": [760, 792, 797, 887], "conceptless": [761, 762], "fulfil": 765, "has_siz": 765, "index_returns_doubl": 765, "func": 766, "ret": 769, "doubl": 769, "foreword": 771, "examp": 771, "explain": 771, "drive": [771, 985], "anatomi": [771, 865], "resum": 771, "suspens": 771, "caller": 771, "co_yield": 771, "mimick": 771, "fibo": 772, "suspend": [777, 778, 779], "decis": [782, 1044], "cleanli": 782, "proggi": 787, "morph": 787, "possibl": 788, "temporari": [788, 1084, 1221], "made": 788, "hard": [790, 969], "aris": 790, "gool": 792, "prevent": [792, 803], "accident": [792, 835], "dangl": 793, "easi": [793, 810], "constraint": 793, "dogmat": 793, "sigh": 793, "storag": [795, 1037], "abbrevi": 795, "avail": [795, 846], "compat": 797, "handwrit": 801, "ctor": 801, "auto_ptr": 801, "mayb": 801, "uniqu": [802, 836], "juggl": 802, "make_shar": 802, "cyclic": 802, "chanc": 803, "leakag": 803, "keystrok": 803, "make_uniqu": 803, "acknowledg": 803, "prove": 803, "weak_ptr": [804, 835], "borrow": 804, "invalid": 804, "univers": 805, "dual": 805, "bag": [805, 834, 835, 836], "null": [806, 819], "pointlessli": 806, "hardcod": [806, 851], "placehold": 806, "upsid": 807, "technic": 807, "downsid": 807, "joinabl": 810, "detach": [810, 1031], "cornercas": 810, "recursive_mutex": 813, "timed_mutex": 813, "recursive_timed_mutex": 813, "unlock": [814, 892], "consid": 814, "acquisit": [814, 1174], "lock_guard": 814, "condition_vari": 815, "predic": [815, 1035], "concern": 815, "promis": 817, "chrono": [817, 818], "utterli": 817, "becom": [817, 1081], "readi": 817, "minim": 817, "pro": 817, "clock": 818, "sleep": [818, 885, 890, 891], "void": 819, "has_valu": 819, "any_cast": 819, "char": [819, 820, 1041], "bad_variant_access": 820, "visitor": 820, "accessor": 820, "get_if": 820, "crtp": [822, 825, 827], "incomplet": [823, 1203], "bloat": 825, "string_view": 825, "unrel": 828, "visit": 831, "rel": [838, 972, 1094], "compon": 838, "creation": [838, 919, 1031, 1032], "create_directori": 838, "entri": 838, "classif": 838, "is_xxx": 838, "directory_entri": 838, "modern": [842, 843, 844, 1241], "slideshow": [843, 846, 848, 851, 853, 856, 858, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 890, 892, 895, 897, 901, 904, 907, 1056, 1060, 1129, 1217, 1224], "hook": 845, "necessari": 845, "ioctl": [845, 846, 848, 867, 900, 1014], "vtabl": 846, "kernelspac": 846, "_io": [846, 867], "major": [850, 851], "minor": [850, 851], "space": [851, 901, 920, 921, 924, 925, 1046], "hair": 855, "pretti": 855, "wswitch": 855, "dma": [858, 859, 883], "physic": 858, "scatterlist": 858, "when": 860, "explod": 860, "loadabl": 865, "init": [865, 883, 926, 1236], "exit": [865, 995, 1031, 1041], "unload": 865, "raspi": [867, 868, 1005], "legaci": [867, 1160], "api": [867, 897, 1030, 1049], "my_activate_gpio": 867, "servic": [869, 926, 1204], "routin": [869, 883], "reserv": 871, "kmalloc": [873, 874, 890], "doubli": [875, 876], "consequ": 877, "rt": [879, 880], "mutual": [879, 892], "exclus": [879, 892], "registr": 881, "layer": 881, "util": [881, 987], "pci": [883, 884], "foremost": 883, "probe": 883, "bar": 883, "rasperri": 887, "crossdev": 887, "artifact": [887, 1190], "bootload": 887, "mainten": 889, "spinlock": [890, 892, 893], "spin_lock": 890, "irq": 890, "spin_lock_irqsav": 890, "spin_unlock_irqrestor": 890, "ah": [890, 1201], "bulletproof": 892, "dup": 894, "defer": [895, 906], "jiffi": 897, "wheel": [897, 1143], "get_one_ev": 900, "copy_to_us": 900, "noth": 903, "o_nonblock": 903, "wake": 904, "workqueu": [906, 907, 908], "did": 906, "destroi": [907, 1223], "gzip": 911, "tar": 913, "etiquett": 913, "Being": 913, "g1": 914, "lot": [914, 915], "precondit": [914, 915], "credenti": [914, 934], "backup": [914, 915, 950], "busi": 915, "ok": [918, 1041], "serial": 918, "pseudo": 918, "partit": 918, "proc": 918, "authent": [923, 1001], "prompt": 923, "verif": [923, 1176], "success": 923, "imperson": 923, "uid": [925, 944, 945], "parent": [926, 1043], "child": 926, "subsystem": 927, "0": [927, 1041, 1197, 1236], "stdout": [931, 981, 995, 1017], "stderr": 931, "trick": [931, 1131], "teacher": 933, "constel": 933, "root": [933, 945], "octal": 933, "tune": [933, 1048, 1196], "setuid": [944, 945], "sudo": 944, "password": [944, 1154], "chmod": [944, 1114], "toi": 944, "effect": [945, 1060, 1100], "ugli": 946, "sticki": 946, "umask": 947, "edit": 948, "tabul": 948, "filenam": 948, "bashrc": [949, 950], "cp": 950, "its": [950, 1196], "pwd": 951, "cd": 951, "mkdir": [957, 967], "funni": 958, "dev": 963, "touch": 967, "rm": 967, "rmdir": 967, "mv": 971, "somewher": 971, "cut": [974, 1124], "durchsuchen": 976, "optionen": 976, "verkn\u00fcpfungen": 976, "grep": 977, "less": [980, 1082, 1106], "brushless": 985, "motor": 985, "speed": 985, "esc": 985, "fwd": 985, "rev": 985, "calibr": 985, "packet": 986, "vcan": 987, "frame": [988, 1205], "mcp2515": 989, "schemat": 989, "solder": 989, "spi": 989, "lm73": 992, "slave": [992, 994], "master": [992, 994], "enabl": [992, 994], "bcm2835": 992, "datasheet": 992, "connect": [992, 1011, 1200], "i2cdetect": 992, "detect": 992, "hwmon": [992, 994], "monitor": [992, 994], "pca9685": 993, "puls": 993, "wire": [993, 994], "ds18b20": 994, "alter": 994, "w1": 994, "attach": 994, "pin": [994, 1028], "ds2482": 994, "800": 994, "channel": 994, "announc": 994, "hotplug": 994, "lm": 994, "caveat": [994, 1197], "topologi": 994, "symptom": 994, "wear": 1001, "admin": 1001, "hat": 1001, "scp": 1004, "sshf": 1005, "mount": 1005, "logdata": 1005, "unmount": 1005, "fusermount": 1005, "umount": 1005, "helper": [1006, 1207], "simplic": [1010, 1011, 1012], "watch": 1010, "strace": 1010, "supervis": 1010, "descriptor": [1014, 1017, 1024], "filedescriptor": 1014, "offset": [1014, 1024], "lseek": 1014, "hole": 1016, "o_creat": 1018, "bogu": 1018, "o_excl": 1019, "alreadi": 1019, "o_rdonli": 1020, "even": [1020, 1021, 1149], "o_wronli": 1021, "writeabl": 1021, "implicitli": 1021, "scatter": 1024, "gather": 1024, "retriev": 1026, "wise": 1027, "legal": 1030, "pthread_join": 1031, "synchron": [1033, 1059], "win32": 1035, "reset": 1035, "trylock": 1040, "islock": 1040, "procf": 1043, "pid": 1043, "ppid": 1043, "getpid": 1043, "getppid": 1043, "multitask": 1044, "fair": [1044, 1048], "runnabl": [1044, 1050], "bare": 1046, "metal": 1046, "hm": 1046, "awai": [1046, 1183], "stabil": 1046, "latenc": [1048, 1050], "nice": 1048, "inexact": 1048, "immedi": 1048, "preempt_rt": 1048, "prioriti": 1049, "runn": 1049, "frequenc": 1050, "scale": 1050, "mysteri": 1050, "remain": 1050, "sysprog": [1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061], "mmap": 1055, "segment": 1055, "produc": [1055, 1090], "consum": 1055, "mq_open": 1056, "mq_send": 1056, "mq_receiv": 1056, "mq_close": 1056, "mq_unlink": 1056, "notif": 1056, "mq_notifi": 1056, "mqueue": 1056, "sem_open": 1056, "sem_wait": 1056, "sem_post": 1056, "sem_clos": 1056, "sem_unlink": 1056, "barebon": 1059, "alarm": 1059, "louder": 1059, "innoc": 1059, "sigalrm": 1059, "programmat": 1060, "mask": 1060, "pend": 1060, "sigset_t": 1060, "async": 1060, "seem": 1062, "nm": 1062, "agnost": 1063, "goodi": 1064, "sysroot": [1065, 1075], "armv8": 1065, "rpi4": 1065, "gnueabihf": 1065, "linaro": 1075, "defunct": 1075, "patienc": 1075, "against": [1075, 1080, 1106], "docker": 1077, "autoconf": 1077, "71": 1077, "zoom": 1079, "rememb": 1079, "reloc": 1080, "independ": 1080, "pic": 1080, "runtim": 1080, "versu": 1080, "def": 1082, "reach": 1082, "theoret": 1082, "nonloc": 1082, "hood": 1084, "monkeypatch": 1084, "print": [1084, 1109], "contextlib": 1084, "contextmanag": 1084, "involv": 1084, "prefixprint": 1084, "mind": 1085, "sugar": 1085, "functool": [1085, 1106], "rais": 1086, "regardless": 1086, "form": 1094, "daemon": 1095, "mother": 1097, "acquir": 1097, "abc": 1099, "late": 1099, "abtract": 1099, "interrelationship": 1102, "salari": 1103, "introspect": 1103, "isinst": 1103, "issubclass": 1103, "classmethod": 1104, "staticmethod": 1104, "_make": 1105, "_asdict": 1105, "dunder": 1106, "compar": 1106, "incompat": 1106, "lotsa": 1106, "magic": 1106, "__gt__": 1106, "term": 1106, "__lt__": 1106, "total_ord": 1106, "them": 1106, "readonli": 1107, "repr": 1108, "__repr__": 1108, "suppli": 1109, "ultim": 1109, "fundament": 1110, "guido": 1112, "van": 1112, "rossum": 1112, "bang": 1114, "she": 1114, "doze": 1114, "registri": 1114, "indent": 1115, "cosmet": 1116, "rudimentari": 1116, "python2": 1118, "unicod": 1118, "esoter": 1122, "delimit": 1131, "interv": 1139, "axi": 1142, "setuptool": 1143, "manifest": 1143, "publish": [1143, 1182, 1204], "usernam": 1154, "strategi": 1166, "revert": 1168, "justifi": 1169, "activ": 1175, "dictread": [1177, 1178, 1196], "cp1252": [1177, 1179], "reader": [1179, 1180, 1196], "nohead": 1179, "both": 1185, "interrel": 1186, "product": 1187, "david": 1188, "beazlei": 1188, "raymond": 1188, "hetting": 1188, "mean": 1190, "linear": [1191, 1193, 1194], "regress": [1191, 1193, 1194], "weather": 1192, "ndarrai": 1193, "plot": 1193, "splice": 1193, "mankind": 1195, "god": 1195, "insan": 1196, "scsv": 1196, "dbapi": [1197, 1199, 1200], "transact": 1197, "postgresql": 1199, "postgr": 1199, "cursor": 1200, "queri": 1200, "ascii": 1201, "iso": 1201, "latin": 1201, "8859": 1201, "lieb": 1201, "gr\u00fc\u00dfe": 1201, "j\u00f6rg": 1201, "\u795d\u597d": 1201, "utf": 1201, "decod": 1201, "broker": 1204, "payload": 1204, "deprec": 1205, "bitmap": 1207, "neat": 1207, "iloc": [1209, 1210], "Then": 1209, "inplac": 1210, "loc": [1210, 1211], "hiccup": 1211, "inclus": 1211, "lowercas": 1212, "email": 1212, "normalized_email": 1212, "ing": 1212, "elementtre": 1213, "etre": 1213, "sax": 1213, "dom": 1213, "invoc": 1216, "subcommand": 1216, "upload": 1219, "pythonpath": 1221, "mark": 1221, "expect": [1221, 1230], "recogn": 1222, "meat": 1222, "freez": 1223, "recreat": 1223, "fatal": 1228, "failur": 1228, "assert_": 1228, "teardown": 1233, "organisatorisch": 1235, "buchung": 1235, "kursablauf": 1235, "kursgestaltung": 1235, "unterlagen": 1235, "grub": 1236, "97": 1236, "bauen": 1236, "prozess": 1236, "verschieden": 1236, "zielpublikum": [1237, 1239, 1240, 1245, 1247, 1252, 1253, 1259], "kursinhalt": [1237, 1239, 1240, 1245, 1247, 1248, 1252, 1253, 1254, 1255, 1257, 1258, 1259], "vorkenntniss": [1237, 1239, 1240, 1245, 1247, 1248, 1252, 1253, 1254, 1255, 1257, 1258, 1259], "three": 1241, "prior": 1243, "beispielen": 1247, "mutter": 1248, "aller": 1248, "woch": 1252, "svn": 1253, "winter": 164, "crazi": 165, "car": 165}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "nbsphinx": 4, "sphinx": 60}, "alltitles": {"Kontakt": [[0, "kontakt"]], "Navigation": [[0, "navigation"]], "Google Maps": [[0, "google-maps"]], "Google Streetview": [[0, "google-streetview"]], "Curriculum Vitae": [[1, "curriculum-vitae"]], "\u00dcber Mich": [[2, "uber-mich"]], "Projekte": [[3, "projekte"]], "Projekte aus selbstst\u00e4ndiger T\u00e4tigkeit": [[3, "projekte-aus-selbststandiger-tatigkeit"]], "Projekte aus nichtselbstst\u00e4ndiger T\u00e4tigkeit": [[3, "projekte-aus-nichtselbststandiger-tatigkeit"]], "Skills": [[4, "skills"], [187, "skills"]], "Angebot: In-House Schulungen": [[5, "angebot-in-house-schulungen"]], "Zu meiner Person": [[5, "zu-meiner-person"]], "Schwerpunke": [[5, "schwerpunke"]], "C/C++": [[5, "c-c"]], "Python": [[5, "python"], [97, "python"], [397, "python"], [402, "python"]], "Linux": [[5, "linux"], [81, "linux"], [205, "linux"], [984, "linux"]], "Schulungsstil": [[5, "schulungsstil"]], "Preise": [[5, "preise"]], "Course Material": [[6, "course-material"], [505, "course-material"], [1187, "course-material"]], "Einleitung": [[7, "Einleitung"], [243, "Einleitung"]], "Datatypes": [[7, "Datatypes"], [240, "Datatypes"], [243, "Datatypes"], [246, "Datatypes"], [259, "Datatypes"], [262, "Datatypes"], [270, "Datatypes"], [272, "Datatypes"], [278, "Datatypes"], [282, "Datatypes"], [285, "Datatypes"], [288, "Datatypes"], [302, "datatypes"], [309, "datatypes"], [312, "datatypes"], [320, "Datatypes"], [322, "datatypes"], [323, "datatypes"], [324, "Datatypes"], [328, "datatypes"], [329, "datatypes"], [346, "Datatypes"], [350, "datatypes"], [351, "datatypes"], [356, "datatypes"], [357, "datatypes"], [358, "Datatypes"], [362, "datatypes"], [363, "datatypes"], [366, "datatypes"], [367, "datatypes"], [368, "Datatypes"], [392, "Datatypes"], [519, "datatypes"], [1118, "datatypes"]], "Numbers": [[7, "Numbers"], [243, "Numbers"], [246, "Numbers"], [270, "Numbers"], [392, "Numbers"], [1118, "numbers"]], "Integer Numbers": [[7, "Integer-Numbers"], [243, "Integer-Numbers"], [1118, "integer-numbers"]], "Strings": [[7, "Strings"], [240, "Strings"], [243, "Strings"], [246, "Strings"], [255, "Strings"], [259, "Strings"], [259, "id3"], [262, "Strings"], [270, "Strings"], [282, "Strings"], [300, "Strings"], [303, "Strings"], [303, "id1"], [303, "id3"], [310, "Strings"], [346, "Strings"], [373, "strings"], [392, "Strings"], [519, "strings"]], "Compound Datatypes": [[7, "Compound-Datatypes"], [243, "Compound-Datatypes"], [255, "Compound-Datatypes"], [259, "Compound-Datatypes"], [262, "Compound-Datatypes"], [265, "Compound-Datatypes"], [270, "Compound-Datatypes"], [272, "Compound-Datatypes"], [278, "Compound-Datatypes"], [282, "Compound-Datatypes"], [285, "Compound-Datatypes"], [288, "Compound-Datatypes"], [300, "Compound-Datatypes"], [324, "Compound-Datatypes"], [330, "Compound-Datatypes"], [342, "Compound-Datatypes"], [346, "Compound-Datatypes"], [358, "Compound-Datatypes"], [364, "Compound-Datatypes"], [368, "Compound-Datatypes"], [1119, "compound-datatypes"]], "Lists (Array in JavaScript, std::vector<> in C++, Array in Java)": [[7, "Lists-(Array-in-JavaScript,-std::vector<>-in-C++,-Array-in-Java)"], [243, "Lists-(Array-in-JavaScript,-std::vector<>-in-C++,-Array-in-Java)"]], "Dictionary (Key/Value Map in Javascript)": [[7, "Dictionary-(Key/Value-Map-in-Javascript)"], [243, "Dictionary-(Key/Value-Map-in-Javascript)"]], "Set: mathematische Mengen": [[7, "Set:-mathematische-Mengen"], [243, "Set:-mathematische-Mengen"]], "while": [[7, "while"], [243, "while"], [262, "while"], [278, "while"], [310, "while"], [364, "while"]], "Functions": [[7, "Functions"], [43, "functions"], [243, "Functions"], [246, "Functions"], [259, "Functions"], [270, "Functions"], [272, "Functions"], [278, "Functions"], [282, "Functions"], [287, "functions"], [303, "Functions"], [310, "Functions"], [324, "Functions"], [340, "functions"], [344, "functions"], [350, "functions"], [351, "functions"], [352, "Functions"], [356, "functions"], [357, "functions"], [358, "Functions"], [362, "functions"], [363, "functions"], [364, "Functions"], [366, "functions"], [367, "functions"], [368, "Functions"], [430, "functions"], [430, "id1"], [1130, "functions"]], "Python Basics (2021-xx-xx - 2021-yy-yy)": [[8, "python-basics-2021-xx-xx-2021-yy-yy"]], "Training Information": [[8, null], [226, null], [227, null], [229, null], [230, null], [231, null], [232, null], [234, null], [236, null], [237, null], [241, null], [244, null], [247, null], [250, null], [251, null], [252, null], [253, null], [257, null], [260, null], [269, null], [273, null], [276, null], [279, null], [281, null], [284, null], [287, null], [290, null], [299, null], [302, null], [309, null], [312, null]], "\u00dcberblick": [[8, "uberblick"], [234, "uberblick"], [244, "uberblick"], [253, "uberblick"], [269, "uberblick"], [281, "uberblick"]], "Log": [[8, "log"], [170, "log"], [226, "log"], [227, "log"], [230, "log"], [231, "log"], [239, "log"], [241, "log"], [242, "log"], [244, "log"], [247, "log"], [251, "log"], [253, "log"], [257, "log"], [260, "log"], [269, "log"], [281, "log"], [290, "log"]], "Tag 1": [[8, "tag-1"], [217, "tag-1"], [236, "tag-1"], [244, "tag-1"], [247, "tag-1"], [253, "tag-1"], [269, "tag-1"], [281, "tag-1"]], "Tag 2": [[8, "tag-2"], [217, "tag-2"], [236, "tag-2"], [244, "tag-2"], [247, "tag-2"], [253, "tag-2"], [269, "tag-2"], [281, "tag-2"]], "Live-Hacking (Jupyter Notebook)": [[8, "live-hacking-jupyter-notebook"], [234, "live-hacking-jupyter-notebook"], [244, "live-hacking-jupyter-notebook"], [247, "live-hacking-jupyter-notebook"], [257, "live-hacking-jupyter-notebook"]], "Links": [[8, "links"], [39, "links"], [170, "links"], [171, "links"], [211, "Links"], [222, "links"], [227, "links"], [229, "links"], [231, "links"], [234, "links"], [241, "links"], [242, "links"], [244, "links"], [253, "links"], [257, "links"], [260, "links"], [263, "links"], [269, "links"], [276, "links"], [287, "links"], [290, "links"], [323, "links"], [329, "links"], [402, "links"], [480, "links"], [750, "links"], [771, "links"], [789, "links"], [800, "links"], [927, "links"], [948, "links"], [987, null], [994, "links"], [1111, null], [1142, null], [1143, "links"], [1204, "links"], [1206, "links"], [1207, "links"], [1209, "links"], [1210, "links"], [1211, "links"], [1212, "links"], [1224, "links"], [864, "links"]], "Programmierung Grundlagen (Jupyter Notebook)": [[9, "programmierung-grundlagen-jupyter-notebook"], [235, "programmierung-grundlagen-jupyter-notebook"], [245, "programmierung-grundlagen-jupyter-notebook"], [271, "programmierung-grundlagen-jupyter-notebook"], [283, "programmierung-grundlagen-jupyter-notebook"]], "Details": [[10, "details"], [80, "details"], [414, "details"]], "Course List": [[11, "course-list"]], "Contents": [[11, null], [24, null], [185, null], [187, null], [189, null], [190, null], [191, null], [192, null], [193, null], [194, null], [195, null], [196, null], [205, null], [214, null], [218, "contents"], [219, null], [503, "contents"], [625, null], [628, null], [634, null], [637, null], [725, "id1"], [916, "id1"], [937, "id1"], [956, "id1"], [962, "id1"], [965, "id1"], [982, "id1"], [990, "id1"], [991, "id1"], [998, "id1"], [1007, "id1"], [1023, "id1"], [1025, "id1"], [1027, "id1"], [1042, "id1"], [1052, null], [1055, null], [1070, "id1"], [1090, null], [1146, "id1"], [1147, "id1"], [1151, "id1"], [1160, "id1"], [1174, "id1"], [1181, "id1"], [1228, null], [1230, null], [1233, null], [1241, "id2"], [1244, "contents"]], "Programmierung Grundlagen, anhand von Python (12. und 13.4.2021)": [[11, "programmierung-grundlagen-anhand-von-python-12-und-13-4-2021"], [415, "programmierung-grundlagen-anhand-von-python-12-und-13-4-2021"]], "Templates for Course Descriptions": [[12, "templates-for-course-descriptions"]], "Sidebar: Course Metadata": [[12, "sidebar-course-metadata"]], "About This Site": [[13, "about-this-site"]], "License: GPLv3": [[13, "license-gplv3"]], "Github": [[13, "github"], [397, "github"]], "Sphinx": [[13, "sphinx"], [171, "sphinx"], [174, "sphinx"]], "Installation Instructions": [[13, "installation-instructions"]], "pip and venv": [[13, null]], "Work in Progress": [[13, "work-in-progress"], [169, "work-in-progress"]], "More": [[13, "more"], [825, "more"]], "OpenTraining": [[14, "opentraining"]], "Draft Topics": [[15, "draft-topics"]], "Miscellaneous": [[16, "miscellaneous"], [168, "miscellaneous"], [183, "miscellaneous"], [210, "miscellaneous"], [230, "miscellaneous"], [294, "miscellaneous"], [295, "miscellaneous"], [315, "miscellaneous"], [329, "miscellaneous"], [340, "miscellaneous"], [341, "miscellaneous"], [344, "miscellaneous"], [351, "miscellaneous"], [354, "miscellaneous"], [373, "miscellaneous"], [620, "miscellaneous"], [620, "id1"], [757, "miscellaneous"], [1024, "miscellaneous"], [1037, "miscellaneous"], [821, "miscellaneous"]], "S5 Integration": [[17, "s5-integration"]], "Work in Progress: S5 Web Slides": [[17, "work-in-progress-s5-web-slides"]], "Implementation Notes": [[17, "implementation-notes"], [383, "implementation-notes"]], "Todo": [[17, "id1"], [187, null], [187, null], [187, null], [187, null], [187, null], [187, null], [187, null], [187, null], [187, null], [187, null], [187, null], [187, null], [187, null], [187, null], [187, null], [187, null], [187, null], [187, null], [187, null], [216, "id1"], [219, "id2"], [219, "id3"], [505, "todo"], [621, "id1"], [624, "id1"], [627, "id1"], [630, "id1"], [633, "id1"], [636, "id1"], [639, "id1"], [844, "id1"], [848, "id1"], [856, "id2"], [1051, "id1"], [1054, "id1"], [1058, "id1"], [1227, "id1"], [1232, "id1"]], "S5 Slide Tests": [[18, "s5-slide-tests"]], "Level 1 Heading": [[19, "level-1-heading"]], "Level 2 Heading": [[19, "level-2-heading"]], "Level 2 Heading, Image": [[19, "level-2-heading-image"]], "Screencasts": [[20, "screencasts"]], "Topics to be Written": [[21, "topics-to-be-written"]], "New Topics to Write": [[21, "new-topics-to-write"]], "Netidee F\u00f6rderantrag": [[22, "netidee-forderantrag"]], "Netidee F\u00f6rderantrag: OpenTraining": [[23, "netidee-forderantrag-opentraining"]], "1. DATEN ANTRAGSTELLER_IN": [[23, "daten-antragsteller-in"]], "2. ALLGEMEINES": [[23, "allgemeines"]], "2.1 Projektname": [[23, "projektname"]], "2.2 Projekt-Untertitel": [[23, "projekt-untertitel"]], "2.3 Allgemeinverst\u00e4ndliche KURZbeschreibung des Projektes": [[23, "allgemeinverstandliche-kurzbeschreibung-des-projektes"]], "2.4 Anschlussf\u00f6rderung": [[23, "anschlussforderung"]], "3. DIE BESONDERE BEDEUTUNG IHRES PROJEKTES F\u00dcR DAS INTERNET (DIE INTERNETNUTZUNG) IN \u00d6STERREICH?": [[23, "die-besondere-bedeutung-ihres-projektes-fur-das-internet-die-internetnutzung-in-osterreich"]], "4. ZIELGRUPPE UND PROJEKTZIEL": [[23, "zielgruppe-und-projektziel"]], "5. L\u00d6SUNG": [[23, "losung"]], "5.1 Beschreibung der Probleml\u00f6sung": [[23, "beschreibung-der-problemlosung"]], "5.2 Wesentliche Elemente eines nachhaltigen Impact NACH netidee Projektende": [[23, "wesentliche-elemente-eines-nachhaltigen-impact-nach-netidee-projektende"]], "6. UMFELDANALYSE": [[23, "umfeldanalyse"]], "6.1 Was ist der Stand der Technik / Methode / des Wissens?": [[23, "was-ist-der-stand-der-technik-methode-des-wissens"]], "6.2 Welche andere L\u00f6sungen/Vorhaben zu den genannten Problemen gibt es schon?": [[23, "welche-andere-losungen-vorhaben-zu-den-genannten-problemen-gibt-es-schon"]], "7. ALLEINSTELLUNGSMERKMAL": [[23, "alleinstellungsmerkmal"]], "8. PROJEKTERGEBNISSE": [[23, "projektergebnisse"]], "8.1 Liste der Projektergebnisse": [[23, "liste-der-projektergebnisse"]], "8.2 Erforderliche Lizenzen Dritter": [[23, "erforderliche-lizenzen-dritter"]], "9. ERFOLGREICHER PROJEKTABSCHLUSS": [[23, "erfolgreicher-projektabschluss"]], "9.1 Ihre sonstigen Aktivit\u00e4ten im Projektbereich": [[23, "ihre-sonstigen-aktivitaten-im-projektbereich"]], "9.2 Angaben zur fachlichen Eignung der MitarbeiterInnen im Projektkernteam": [[23, "angaben-zur-fachlichen-eignung-der-mitarbeiterinnen-im-projektkernteam"]], "9.3 Erfahrung des/der vorgesehenen ProjektleiterIn": [[23, "erfahrung-des-der-vorgesehenen-projektleiterin"]], "9.4 Link zum maximal 2-min\u00fctigen Video des Projektkernteams": [[23, "link-zum-maximal-2-minutigen-video-des-projektkernteams"]], "9.5 Risiken": [[23, "risiken"]], "9.6 Erfolgskriterien am netidee-Projektende": [[23, "erfolgskriterien-am-netidee-projektende"]], "9.7 Angestrebter Impact 3 Jahre nach netidee-Projektende": [[23, "angestrebter-impact-3-jahre-nach-netidee-projektende"]], "10. UMSETZUNG (EINJ\u00c4HRIGES NETIDEE PROJEKT)": [[23, "umsetzung-einjahriges-netidee-projekt"]], "10.1 Wichtige Partner_innen": [[23, "wichtige-partner-innen"]], "10.2 Arbeitsschwerpunkte": [[23, "arbeitsschwerpunkte"]], "10.3 Wesentliche Ressourcen": [[23, "wesentliche-ressourcen"]], "10.4 Nutzer_innen-Kommunikationskan\u00e4le": [[23, "nutzer-innen-kommunikationskanale"]], "11. PROJEKTTERMINE": [[23, "projekttermine"]], "11.1 Termine Projektstart - Projektende": [[23, "termine-projektstart-projektende"]], "Projektstart": [[23, "projektstart"]], "12. KOSTEN UND FINANZIERUNG": [[23, "kosten-und-finanzierung"]], "12.1 Projektkosten": [[23, "projektkosten"]], "Personalkosten": [[23, "personalkosten"]], "Sonstige Kosten": [[23, "sonstige-kosten"]], "Gesamtkosten in \u20ac": [[23, "gesamtkosten-in"]], "12.2 Wir beantragen folgende netidee-F\u00f6rderung": [[23, "wir-beantragen-folgende-netidee-forderung"]], "13.3 Die restlichen Kosten werden finanziert durch": [[23, "die-restlichen-kosten-werden-finanziert-durch"]], "13. SONDERPREIS": [[23, "sonderpreis"]], "14. ERG\u00c4NZENDE ANGABEN": [[23, "erganzende-angaben"]], "14.1 Transparenz Mehrfachantr\u00e4ge": [[23, "transparenz-mehrfachantrage"]], "14.2 Nutzung der WhatAVenture-Plattform": [[23, "nutzung-der-whataventure-plattform"]], "14.3 Das eingereichte Projekt ist Teil einer schulischen Verpflichtung (z.B. HTL Diplomarbeit)": [[23, "das-eingereichte-projekt-ist-teil-einer-schulischen-verpflichtung-z-b-htl-diplomarbeit"]], "14.4 Wie haben Sie von der netidee erfahren? (Mehrfachnennungen m\u00f6glich)": [[23, "wie-haben-sie-von-der-netidee-erfahren-mehrfachnennungen-moglich"]], "16. DATENSCHUTZ": [[23, "datenschutz"]], "Video Screenplay": [[24, "video-screenplay"]], "The Problem And Me": [[24, "the-problem-and-me"]], "Open Source Training Material": [[24, "open-source-training-material"]], "Walk-Through": [[24, "walk-through"]], "Use Case: Custom Training, Subtract Known": [[25, "use-case-custom-training-subtract-known"]], "Use Case: Calculate Minimum Training Duration": [[26, "use-case-calculate-minimum-training-duration"]], "Use Cases": [[27, "use-cases"]], "Trainer": [[27, "trainer"]], "Editor": [[27, "editor"]], "End User (Training Audience)": [[27, "end-user-training-audience"]], "Use Case: Use Training Material From Other Sites": [[28, "use-case-use-training-material-from-other-sites"]], "Use Case: Menu to Choose From": [[29, "use-case-menu-to-choose-from"]], "Use Case: Slide Show Material as Plain-Text Files": [[30, "use-case-slide-show-material-as-plain-text-files"]], "Sending A V4L Camera Device Output Over SSH": [[31, "sending-a-v4l-camera-device-output-over-ssh"]], "Capture Video To File": [[31, "capture-video-to-file"]], "Play Video From Remote System, Using SSH": [[31, "play-video-from-remote-system-using-ssh"]], "Emoji Codes (sphinxemoji)": [[32, "emoji-codes-sphinxemoji"]], "Setup": [[32, "setup"], [152, "setup"], [302, "setup"], [309, "setup"], [312, "setup"], [322, "setup"], [323, "setup"], [327, "setup"], [328, "setup"], [329, "setup"], [350, "setup"], [351, "setup"], [356, "setup"], [357, "setup"], [362, "setup"], [366, "setup"], [367, "setup"], [985, "setup"], [1111, "setup"], [1223, "setup"]], "Most Used Here In This Site": [[32, "most-used-here-in-this-site"]], "All Codes": [[32, "all-codes"]], "Recipes": [[33, "recipes"]], "isoamsa.txt: Added Mathematical Symbols: Arrows": [[34, "isoamsa-txt-added-mathematical-symbols-arrows"]], "isoamsr.txt: Added Mathematical Symbols: Relations": [[35, "isoamsr-txt-added-mathematical-symbols-relations"]], "isonum.txt: Added Mathematical Symbols: Binary Operators": [[36, "isonum-txt-added-mathematical-symbols-binary-operators"]], "Layout Test Page": [[37, "layout-test-page"]], "Admonitions": [[37, "admonitions"]], "Admonition": [[37, "admonition"]], "This is an .. admonition::": [[37, null]], "Tip": [[37, "tip"]], "Note": [[37, "note"]], "Hint": [[37, "hint"]], "Important": [[37, "important"]], "Attention": [[37, "attention"]], "Caution": [[37, "caution"]], "Error": [[37, "error"]], "Danger": [[37, "danger"]], "Sidebar": [[37, "sidebar"]], "Blech Sidebar Title Blah": [[37, null]], "Sidebar \u201cKursdaten\u201d": [[37, "sidebar-kursdaten"]], "Kursdaten": [[37, null], [1237, null], [1238, null], [1239, null], [1240, null], [1245, null], [1247, null], [1248, null], [1252, null], [1253, null], [1254, null], [1255, null], [1257, null], [1258, null], [1259, null]], "Local Content": [[37, "local-content"]], "Local Heading 1": [[37, "local-heading-1"], [37, "id3"]], "Local Heading 1.1": [[37, "local-heading-1-1"], [37, "id4"]], "Local Heading 1.2": [[37, "local-heading-1-2"], [37, "id5"]], "Local Heading 2": [[37, "local-heading-2"], [37, "id6"]], "Sidebar with Local Content": [[37, "sidebar-with-local-content"]], "Bleh Content Blah": [[37, null]], "To Do": [[37, "to-do"]], "mmlalias.txt: MathML aliases for entities from other sets": [[38, "mmlalias-txt-mathml-aliases-for-entities-from-other-sets"]], "Most used": [[38, "id1"]], "All": [[38, "id2"]], "reStructuredText Cheat Sheet": [[39, "restructuredtext-cheat-sheet"]], "Further Information": [[39, "further-information"], [175, "further-information"], [250, "further-information"], [251, "further-information"], [273, "further-information"], [388, "further-information"], [397, "further-information"], [805, "further-information"]], "Local Documents": [[39, "local-documents"]], "External Links": [[39, "external-links"]], "Section References": [[39, "section-references"]], "Section That We Refer To": [[39, "section-that-we-refer-to"]], "Another Section Contains a Link To The Referred Section Above": [[39, "another-section-contains-a-link-to-the-referred-section-above"]], "Footnotes": [[39, "footnotes"]], "Sphinxish": [[40, "sphinxish"]], "Jupyter Notebooks": [[40, "jupyter-notebooks"]], "Running Sphinx From Source": [[40, "running-sphinx-from-source"]], "Seminar on \u201cClean Code\u201d (2022-04-13)": [[41, "seminar-on-clean-code-2022-04-13"]], "Seminar Agenda and Timeline": [[41, "seminar-agenda-and-timeline"]], "Live Hacking Before (Formal) Unit Testing": [[42, "live-hacking-before-formal-unit-testing"]], "Initial Structure": [[42, "initial-structure"]], "Snippets": [[42, null], [42, null], [42, null], [42, null], [42, null], [42, null], [44, null], [44, null], [50, null], [50, null]], "User": [[42, "user"]], "UserDB": [[42, "userdb"]], "bin/userdb-write-binaryfile.cpp": [[42, "bin-userdb-write-binaryfile-cpp"]], "Extend UserDB To Write": [[42, "extend-userdb-to-write"]], "Extend UserDB To Read From File, And Iterate": [[42, "extend-userdb-to-read-from-file-and-iterate"]], "Bug: Use \u201cFaschingbauer\u201d As Last Name": [[42, "bug-use-faschingbauer-as-last-name"]], "Wrap Up: What Do We Have?": [[42, "wrap-up-what-do-we-have"]], "Clean Code: Messages From The Book": [[43, "clean-code-messages-from-the-book"]], "Survey": [[43, null], [504, null]], "Names": [[43, "names"]], "Comments": [[43, "comments"]], "Formatting": [[43, "formatting"], [358, "Formatting"]], "Objects and Data Structures": [[43, "objects-and-data-structures"]], "Error Handling": [[43, "error-handling"], [1006, "error-handling"]], "Boundaries": [[43, "boundaries"]], "Unit Tests": [[43, "unit-tests"], [376, "unit-tests"], [601, "unit-tests"], [379, "unit-tests"]], "Classes": [[43, "classes"], [249, "Classes"], [334, "classes"]], "Live Hacking: Switch To googletest": [[44, "live-hacking-switch-to-googletest"]], "Git Submodule": [[44, "git-submodule"]], "Establish Tests: Demo": [[44, "establish-tests-demo"]], "Straightforward main() Conversion": [[44, "straightforward-main-conversion"]], "Fix Shortcomings": [[44, "fix-shortcomings"]], "Is Software A Craft? Software Is A Craft!": [[45, "is-software-a-craft-software-is-a-craft"]], "09:00-09:15 Introductory Words": [[45, "introductory-words"]], "09:15-10:00 Software Engineering: A Discipline? (What Have We Established?)": [[45, "software-engineering-a-discipline-what-have-we-established"]], "10:00-10:15 Coffee Break": [[45, "coffee-break"]], "10:15-11:00 Establishing \u201cThe Project\u201d (Live Hacking, Slides)": [[45, "establishing-the-project-live-hacking-slides"]], "11:00-12:00 Enter Unit Testing Frameworks": [[45, "enter-unit-testing-frameworks"]], "12:00-13:00 Lunch Break": [[45, "lunch-break"]], "13:00-14:00 Cornerstones From The \u201cClean Code\u201d Book": [[45, "cornerstones-from-the-clean-code-book"]], "14:00-14:45 Keeping Code Clean In The Small": [[45, "keeping-code-clean-in-the-small"]], "14:45-15:00 Coffee Break": [[45, "id1"]], "15:00-23:59 \u201cExtreme Programming\u201d Session": [[45, "extreme-programming-session"]], "UserDB::find() Crashes If User Not Found": [[46, "userdb-find-crashes-if-user-not-found"]], "State": [[46, "state"]], "Bugs": [[47, "bugs"], [53, "bugs"]], "Existing Files Are Overwritten": [[48, "existing-files-are-overwritten"]], "UserDB::read(): What If Done Twice?": [[49, "userdb-read-what-if-done-twice"]], "UserDB: Alternative Output Format - CSV": [[50, "userdb-alternative-output-format-csv"]], "Write CSV: Test": [[50, "write-csv-test"]], "Write CSV: Frontend Program": [[50, "write-csv-frontend-program"], [50, "id1"]], "Read CSV: Test": [[50, "read-csv-test"]], "Features": [[51, "features"]], "Search By Other Indexes": [[52, "search-by-other-indexes"]], "Backlog: What Needs To Change, Or We Will All Die": [[53, "backlog-what-needs-to-change-or-we-will-all-die"]], "Refactoring After Featuritis": [[53, "refactoring-after-featuritis"]], "BackingStore Has Too Many Responsibilities \u27f6 Interface": [[54, "backingstore-has-too-many-responsibilities-longrightarrow-interface"]], "UserDB Has Too Many Responsibilities \u27f6 BackingStore": [[55, "userdb-has-too-many-responsibilities-longrightarrow-backingstore"]], "BackingStore": [[55, "backingstore"]], "Refactoring": [[56, "refactoring"], [602, "refactoring"], [895, "refactoring"]], "Load From BackingStore in Constructor": [[57, "load-from-backingstore-in-constructor"]], "UserDB::{read,write}(): bool, Really?": [[58, "userdb-read-write-bool-really"]], "GLT 2023: Pointless Blinking With Python, asyncio, and libgpiod (and a Raspberry Pi of Course)": [[59, "glt-2023-pointless-blinking-with-python-asyncio-and-libgpiod-and-a-raspberry-pi-of-course"]], "Installation Notes": [[60, "installation-notes"]], "libgpiod": [[60, "libgpiod"]], "Fedora: Prepare Tarballs": [[60, "fedora-prepare-tarballs"]], "On The Pi: Build And Install": [[60, "on-the-pi-build-and-install"]], "Submission: Pointless Blinking With Python, asyncio, and libgpiod (and a Raspberry Pi of Course)": [[61, "submission-pointless-blinking-with-python-asyncio-and-libgpiod-and-a-raspberry-pi-of-course"]], "Biography": [[61, "biography"], [63, "biography"], [67, "biography"]], "Abstract": [[61, "abstract"], [63, "abstract"], [67, "abstract"]], "Description": [[61, "description"], [63, "description"], [67, "description"], [555, "description"], [707, "description"], [723, "description"], [727, "description"], [729, "description"], [730, "description"], [731, "description"], [732, "description"], [733, "description"], [734, "description"], [735, "description"], [736, "description"], [738, "description"], [739, "description"]], "Screenplay: Pointless Blinking With Python, asyncio, and libgpiod (and a Raspberry Pi of Course)": [[62, "screenplay-pointless-blinking-with-python-asyncio-and-libgpiod-and-a-raspberry-pi-of-course"]], "Setup Before Presentation": [[62, "setup-before-presentation"]], "Starting Point": [[62, "starting-point"], [753, "starting-point"]], "Greeting": [[62, "greeting"]], "Multiple Background Threads": [[62, "multiple-background-threads"]], "Enter asyncio": [[62, "enter-asyncio"]], "Character Device Based GPIO": [[62, "character-device-based-gpio"]], "GPIO Device": [[62, "gpio-device"]], "Most Basic Feature: Setting GPIO Values": [[62, "most-basic-feature-setting-gpio-values"]], "Entire Matrix On/Off": [[62, "entire-matrix-on-off"]], "Bringing All Together": [[62, "bringing-all-together"]], "Modularize": [[62, "modularize"]], "Play A Bit: Blink Entire Rows": [[62, "play-a-bit-blink-entire-rows"]], "Coroutines?": [[62, "coroutines"]], "Not Enough: sequence()": [[62, "not-enough-sequence"]], "Looping: forever()": [[62, "looping-forever"]], "A Stripped-Down Program (\u27f6 Factory)": [[62, "a-stripped-down-program-longrightarrow-factory"]], "Turn blink() Into A Factory": [[62, "turn-blink-into-a-factory"]], "Anti-Clumsy Decorator: blink() Wrapper": [[62, "anti-clumsy-decorator-blink-wrapper"]], "@program, Finally": [[62, "program-finally"]], "Playground: cycle()": [[62, "playground-cycle"]], "Fast Forward: any(), And Cancellation": [[62, "fast-forward-any-and-cancellation"]], "Playground: on()": [[62, "playground-on"]], "Goodbye": [[62, "goodbye"]], "GLT 2023 Submission: Pointless Blinking With Python, asyncio, and libgpiod (and a Raspberry Pi of Course)": [[63, "glt-2023-submission-pointless-blinking-with-python-asyncio-and-libgpiod-and-a-raspberry-pi-of-course"]], "GLT 2024: Python, asyncio, libgpiod, and Pointless Blinking": [[64, "glt-2024-python-asyncio-libgpiod-and-pointless-blinking"]], "Talk Script: Python, asyncio, libgpiod, and Pointless Blinking": [[65, "talk-script-python-asyncio-libgpiod-and-pointless-blinking"]], "gpiod Intro": [[65, "gpiod-intro"]], "asyncio Intro": [[65, "asyncio-intro"]], "And blink?": [[65, "and-blink"], [65, "id1"]], "gpiod, And Interrupts": [[65, "gpiod-and-interrupts"]], "gpiod, Interrupts, and asyncio": [[65, "gpiod-interrupts-and-asyncio"]], "textual": [[65, "textual"]], "python-sdbus": [[65, "python-sdbus"]], "Slide Material: Python, asyncio, libgpiod, and Pointless Blinking": [[66, "slide-material-python-asyncio-libgpiod-and-pointless-blinking"]], "blink": [[66, "blink"]], "gpiod": [[66, "gpiod"]], "asyncio": [[66, "asyncio"], [1140, "asyncio"]], "Textual": [[66, "textual"]], "Python SDbus": [[66, "python-sdbus"]], "Python 3.12 Installation (for TaskGroup)": [[66, "python-3-12-installation-for-taskgroup"]], "Submission: Python, asyncio, libgpiod, and Pointless Blinking": [[67, "submission-python-asyncio-libgpiod-and-pointless-blinking"]], "Pointless Blinking": [[68, "pointless-blinking"]], "C++": [[69, "c"], [112, "c"], [113, "c"], [187, "c"], [740, "c"]], "C++: Building with CMake": [[70, "c-building-with-cmake"]], "C++: Interfaces": [[71, "c-interfaces"]], "C++: OO Basics": [[72, "c-oo-basics"]], "C++: Unit Testing": [[73, "c-unit-testing"]], "Graph": [[74, "graph"], [725, "graph"], [888, "graph"], [1146, "graph"], [1147, "graph"], [1151, "graph"], [1160, "graph"], [1174, "graph"], [1181, "graph"]], "Embedded Computing 1": [[75, "embedded-computing-1"], [80, "embedded-computing-1"]], "Current Curriculum": [[75, "current-curriculum"], [76, "current-curriculum"]], "Topics": [[75, "topics"], [76, "topics"], [100, "topics"], [101, "topics"], [103, "topics"], [104, "topics"], [105, "topics"], [106, "topics"], [186, "topics"], [222, "topics"], [222, "id2"], [250, "topics"], [287, "topics"], [290, null], [401, "topics"], [405, "topics"], [502, "topics"], [517, "topics"], [650, "topics"], [687, "topics"], [693, "topics"], [697, "topics"], [705, "topics"], [710, "topics"], [715, "topics"], [740, "topics"], [741, "topics"], [745, "topics"], [752, "topics"], [759, "topics"], [770, "topics"], [783, "topics"], [784, "topics"], [794, "topics"], [799, "topics"], [833, "topics"], [837, "topics"], [839, "topics"], [841, "topics"], [1000, "topics"], [1018, null], [1020, null], [1020, null], [1066, "topics"], [1073, "topics"], [1074, "topics"], [1094, null], [1102, "topics"], [1198, "topics"], [1208, "topics"], [1220, "topics"], [435, "topics"], [450, "topics"], [459, "topics"], [466, "topics"], [472, "topics"], [476, "topics"], [479, "topics"], [483, "topics"], [492, "topics"], [496, "topics"], [501, "topics"], [642, "topics"], [665, "topics"], [668, "topics"], [671, "topics"], [712, "topics"], [721, "topics"], [808, "topics"], [816, "topics"], [821, "topics"], [1039, "topics"], [1045, "topics"], [1226, "topics"]], "Dependency Graph": [[75, "dependency-graph"], [76, "dependency-graph"]], "Embedded Computing 2": [[76, "embedded-computing-2"], [80, "embedded-computing-2"]], "EX: Race Conditions": [[77, "ex-race-conditions"]], "EX: Avoiding Race Condition": [[78, "ex-avoiding-race-condition"]], "Goals": [[78, "goals"], [84, "goals"], [85, "goals"], [86, "goals"], [87, "goals"], [89, "goals"], [90, "goals"], [91, "goals"], [93, "goals"]], "Outcome": [[78, "outcome"], [84, "outcome"], [85, "outcome"], [86, "outcome"], [87, "outcome"], [229, "outcome"]], "Git Introduction": [[79, "git-introduction"]], "Embedded Computing (STECE-2019)": [[80, "embedded-computing-stece-2019"]], "Overview": [[80, "overview"], [753, "overview"], [801, "overview"], [815, "overview"], [817, "overview"], [824, "overview"], [826, "overview"], [828, "overview"], [829, "overview"], [830, "overview"], [831, "overview"], [838, "overview"], [912, "overview"], [924, "overview"], [981, "overview"], [992, "overview"], [993, "overview"], [994, "overview"], [994, "id1"], [995, "overview"], [1030, "overview"]], "Knowledge Transferred": [[80, "knowledge-transferred"]], "Course Setup": [[80, "course-setup"]], "Introduction to Linux and Unix": [[82, "introduction-to-linux-and-unix"]], "Linux Hardware Device Management": [[83, "linux-hardware-device-management"]], "EX: Averaging Sensor": [[84, "ex-averaging-sensor"]], "EX: Averaging Sensor (parallel)": [[85, "ex-averaging-sensor-parallel"]], "EX: LED Temperature Display": [[86, "ex-led-temperature-display"]], "Hardware": [[86, "hardware"], [87, "hardware"]], "EX: Temperature Sensors": [[87, "ex-temperature-sensors"], [94, "ex-temperature-sensors"]], "GPIO": [[88, "gpio"]], "sysfs Interface": [[88, "sysfs-interface"]], "gpiod Interface": [[88, "gpiod-interface"]], "Multithreading": [[89, "multithreading"], [208, "multithreading"], [268, "multithreading"], [294, "multithreading"], [295, "multithreading"], [297, "multithreading"], [340, "multithreading"], [341, "multithreading"], [344, "multithreading"], [354, "multithreading"], [373, "multithreading"], [405, "multithreading"], [412, "multithreading"], [1059, "multithreading"], [1096, "multithreading"], [816, "multithreading"]], "Avoiding Race Conditions: Semaphore/Mutex": [[90, "avoiding-race-conditions-semaphore-mutex"]], "Communication: Waiting for Something": [[91, "communication-waiting-for-something"]], "Python Basics": [[92, "python-basics"]], "EX: Averaging Sensor, Display": [[93, "ex-averaging-sensor-display"]], "Simple Web Programming": [[95, "simple-web-programming"]], "Sensors Web Pages": [[96, "sensors-web-pages"]], "Embedded Computing STECE-2020)": [[98, "embedded-computing-stece-2020"]], "SS2022": [[99, "ss2022"]], "Block 1: Linux, and Working With Remote/Embedded Devices": [[99, "block-1-linux-and-working-with-remote-embedded-devices"], [126, "block-1-linux-and-working-with-remote-embedded-devices"], [162, "block-1-linux-and-working-with-remote-embedded-devices"]], "Block 2: C on Linux: Local and Cross Development": [[99, "block-2-c-on-linux-local-and-cross-development"], [126, "block-2-c-on-linux-local-and-cross-development"], [162, "block-2-c-on-linux-local-and-cross-development"]], "Block 3: C++": [[99, "block-3-c"], [126, "block-3-c"], [162, "block-3-c"]], "2022-03-08": [[100, "id1"]], "Homework": [[100, "homework"], [101, "homework"], [103, "homework"], [106, "homework"], [149, "homework"]], "2022-03-10": [[101, "id1"]], "2022-03-10 (Homework until 2022-03-21)": [[102, "homework-until-2022-03-21"]], "From Exercises: Create/Copy/Move/Remove": [[102, "from-trainings-material-soup-linux-basics-shell-exercises-cp-mv-mkdir-rm-group"]], "From  Exercises: The ls Command": [[102, "from-trainings-material-soup-linux-basics-shell-exercises-ls-group"]], "2022-03-21": [[103, "id1"]], "2022-03-22, 2022-03-24 (KU)": [[104, "ku"]], "2022-03-28": [[105, "id1"]], "2022-04-01": [[106, "id1"]], "SS2022: Logs": [[107, "ss2022-logs"]], "WS2022": [[108, "ws2022"]], "Plan: Evolution": [[108, "plan-evolution"]], "FH Joanneum (Embedded Computing): WS2022/2023 (Questions About Code)": [[109, "fh-joanneum-embedded-computing-ws2022-2023-questions-about-code"]], "Question 1: C++ Inheritance": [[109, "question-1-c-inheritance"]], "Question 2: C++ Inheritance": [[109, "question-2-c-inheritance"]], "Question 3: Memory Leak": [[109, "question-3-memory-leak"]], "Question 4: std::vector": [[109, "question-4-std-vector"]], "FH Joanneum (Embedded Computing): WS2022/2023 (Yes/No Questions)": [[110, "fh-joanneum-embedded-computing-ws2022-2023-yes-no-questions"]], "Cross Development": [[110, "cross-development"], [154, "cross-development"], [155, "cross-development"], [306, "cross-development"], [1065, "cross-development"], [1066, "cross-development"]], "C++, OO": [[110, "c-oo"]], "Lab Exam 2023-01-17": [[111, "lab-exam-2023-01-17"]], "Project Setup": [[111, "project-setup"], [600, "project-setup"], [1175, "project-setup"]], "Exercises": [[111, "exercises"], [205, "exercises"], [210, "exercises"], [242, "exercises"], [252, "exercises"], [252, "id1"], [252, "id3"], [310, "Exercises"], [315, "exercises"], [334, "exercises"], [334, "id1"], [337, "exercises"], [341, "exercises"], [371, "exercises"], [371, "id1"], [553, "exercises"], [555, "exercises"], [562, "exercises"], [590, "exercises"], [607, "exercises"], [609, "exercises"], [650, "exercises"], [715, "exercises"], [740, "exercises"], [837, "exercises"], [1073, "exercises"], [1102, "exercises"], [1147, "exercises"], [665, "exercises"]], "Exam Submission": [[111, "exam-submission"]], "SS2023: Exam 2023-06-30 (Handout)": [[112, "ss2023-exam-2023-06-30-handout"]], "UNIX/Linux Concepts": [[112, "unix-linux-concepts"], [113, "unix-linux-concepts"]], "Toolchain": [[112, "toolchain"], [113, "toolchain"], [159, "toolchain"]], "SS2023: Exam 2023-06-30 (Solved)": [[113, "ss2023-exam-2023-06-30-solved"]], "Exam: Embedded Computing 2 (2024-01-26)": [[114, "exam-embedded-computing-2-2024-01-26"]], "Exam: Embedded Computing 2 (2024-02-02)": [[115, "exam-embedded-computing-2-2024-02-02"]], "WS2023/2024: Exam 2024-02-02 (Sample)": [[116, "ws2023-2024-exam-2024-02-02-sample"]], "Question 1": [[116, "question-1"], [119, "question-1"]], "Question 1.1": [[116, "question-1-1"]], "Question 1.2": [[116, "question-1-2"]], "Question 2": [[116, "question-2"], [119, "question-2"]], "Question 2.1": [[116, "question-2-1"]], "Question 2.2 (Why?)": [[116, "question-2-2-why"]], "Question 3": [[116, "question-3"]], "Exam WS2023/2024": [[117, "exam-ws2023-2024"]], "All Questions": [[117, "all-questions"]], "All questions": [[117, null]], "Exams": [[117, "exams"], [125, "exams"]], "Questions 2024": [[118, "questions-2024"]], "const Objects": [[119, "const-objects"]], "Parameter Passing": [[120, "parameter-passing"]], "Question 1: Which One Is Better?": [[120, "question-1-which-one-is-better"]], "Question2: Why?": [[120, "question2-why"]], "SOLID: Hysteresis With Display": [[121, "solid-hysteresis-with-display"]], "SOLID: Sensor Has ID": [[122, "solid-sensor-has-id"]], "To Be Or Not To Be Virtual": [[123, "to-be-or-not-to-be-virtual"]], "Program Output, Version 1": [[123, "program-output-version-1"]], "Program Output, Version 2": [[123, "program-output-version-2"]], "Working with Git In Our FH-ECE21 Project": [[124, "working-with-git-in-our-fh-ece21-project"]], "Forks And Pull Requests": [[124, "forks-and-pull-requests"]], "Multiple Pull Requests: Pulling Upstream Changes (\u201cSyncing\u201d A Fork)": [[124, "multiple-pull-requests-pulling-upstream-changes-syncing-a-fork"]], "Creating A Remote for Upstream (Done Only Once)": [[124, "creating-a-remote-for-upstream-done-only-once"]], "Updating The Fork (\u201cSyncing\u201d It From Its Upstream)": [[124, "updating-the-fork-syncing-it-from-its-upstream"]], "Fetch upstream Into Your Clone": [[124, "fetch-upstream-into-your-clone"]], "Merge upstream/main Into Local main": [[124, "merge-upstream-main-into-local-main"]], "Push Into Fork On Github": [[124, "push-into-fork-on-github"]], "Embedded Computing (STECE-2021)": [[125, "embedded-computing-stece-2021"]], "Two Semesters": [[125, "two-semesters"]], "Supporting Material": [[125, "supporting-material"]], "SS2023": [[126, "ss2023"]], "Finish: Written Exam": [[126, "finish-written-exam"]], "(DONE) Boiling Pot (The Beginning)": [[127, "done-boiling-pot-the-beginning"]], "Standup Records": [[127, "standup-records"], [128, "standup-records"], [129, "standup-records"], [130, "standup-records"], [131, "standup-records"], [135, "standup-records"], [139, "standup-records"], [143, "standup-records"]], "2023-11-20": [[127, "id1"], [131, "id1"], [139, "id1"], [143, "id1"]], "2023-12-14": [[127, "id2"], [128, "id1"], [131, "id2"], [139, "id2"]], "Requirements": [[127, "requirements"], [128, "requirements"], [129, "requirements"], [130, "requirements"], [131, "requirements"], [132, "requirements"], [133, "requirements"], [134, "requirements"], [135, "requirements"], [137, "requirements"], [139, "requirements"], [143, "requirements"], [542, "requirements"], [566, "requirements"], [597, "requirements"], [726, "requirements"]], "Implementation": [[127, "implementation"], [131, "implementation"], [132, "implementation"], [134, "implementation"], [137, "implementation"], [139, "implementation"], [143, "implementation"], [601, "implementation"]], "Testing": [[127, "testing"], [131, "testing"], [132, "testing"], [134, "testing"], [137, "testing"], [139, "testing"], [143, "testing"], [308, "testing"]], "Future (Not Part Of This Development Cycle)": [[127, "future-not-part-of-this-development-cycle"], [131, "future-not-part-of-this-development-cycle"], [132, "future-not-part-of-this-development-cycle"], [134, "future-not-part-of-this-development-cycle"], [137, "future-not-part-of-this-development-cycle"], [139, "future-not-part-of-this-development-cycle"], [143, "future-not-part-of-this-development-cycle"]], "Dependencies": [[127, "dependencies"], [128, "dependencies"], [129, "dependencies"], [130, "dependencies"], [131, "dependencies"], [132, "dependencies"], [133, "dependencies"], [134, "dependencies"], [135, "dependencies"], [136, "dependencies"], [137, "dependencies"], [138, "dependencies"], [139, "dependencies"], [143, "dependencies"], [383, "dependencies"], [384, "dependencies"], [385, "dependencies"], [386, "dependencies"], [388, "dependencies"], [517, "dependencies"], [523, "dependencies"], [533, "dependencies"], [536, "dependencies"], [548, "dependencies"], [562, "dependencies"], [590, "dependencies"], [607, "dependencies"], [609, "dependencies"], [620, "dependencies"], [687, "dependencies"], [693, "dependencies"], [697, "dependencies"], [705, "dependencies"], [707, "dependencies"], [710, "dependencies"], [715, "dependencies"], [723, "dependencies"], [724, "dependencies"], [726, "dependencies"], [727, "dependencies"], [729, "dependencies"], [730, "dependencies"], [731, "dependencies"], [732, "dependencies"], [733, "dependencies"], [734, "dependencies"], [735, "dependencies"], [736, "dependencies"], [737, "dependencies"], [738, "dependencies"], [739, "dependencies"], [745, "dependencies"], [752, "dependencies"], [759, "dependencies"], [770, "dependencies"], [794, "dependencies"], [799, "dependencies"], [825, "dependencies"], [914, "dependencies"], [915, "dependencies"], [916, "dependencies"], [935, "dependencies"], [936, "dependencies"], [937, "dependencies"], [956, "dependencies"], [961, "dependencies"], [962, "dependencies"], [965, "dependencies"], [998, "dependencies"], [1000, "dependencies"], [1007, "dependencies"], [1013, "dependencies"], [1015, "dependencies"], [1023, "dependencies"], [1025, "dependencies"], [1027, "dependencies"], [1042, "dependencies"], [1066, "dependencies"], [1070, "dependencies"], [1073, "dependencies"], [1074, "dependencies"], [1095, "dependencies"], [1097, "dependencies"], [1144, "dependencies"], [1145, "dependencies"], [1148, "dependencies"], [1149, "dependencies"], [1150, "dependencies"], [1152, "dependencies"], [1153, "dependencies"], [1154, "dependencies"], [1155, "dependencies"], [1156, "dependencies"], [1157, "dependencies"], [1161, "dependencies"], [1162, "dependencies"], [1163, "dependencies"], [1164, "dependencies"], [1165, "dependencies"], [1167, "dependencies"], [1168, "dependencies"], [1169, "dependencies"], [1170, "dependencies"], [1171, "dependencies"], [1172, "dependencies"], [1173, "dependencies"], [1175, "dependencies"], [1176, "dependencies"], [1177, "dependencies"], [1178, "dependencies"], [1179, "dependencies"], [1180, "dependencies"], [1182, "dependencies"], [1183, "dependencies"], [1184, "dependencies"], [1185, "dependencies"], [1198, "dependencies"], [1201, "dependencies"], [1204, "dependencies"], [1208, "dependencies"], [1220, "dependencies"], [920, "dependencies"], [921, "dependencies"], [1068, "dependencies"], [1069, "dependencies"], [1039, "dependencies"], [1226, "dependencies"]], "Boiling Pot: Basic Integration": [[128, "boiling-pot-basic-integration"]], "Boiling Pot: Display, And Status Reporting": [[129, "boiling-pot-display-and-status-reporting"]], "Boiling Pot: Full Integration (Display And IoT)": [[130, "boiling-pot-full-integration-display-and-iot"]], "(DONE) Data Logger": [[131, "done-data-logger"]], "Data Logger: CSV Sink": [[132, "data-logger-csv-sink"]], "Column name configuration": [[132, "column-name-configuration"]], "output()": [[132, "output"]], "Data Logger: Integration": [[133, "data-logger-integration"]], "Data Logger: MQTT Sink": [[134, "data-logger-mqtt-sink"]], "MQTT Implementation: mosquitto": [[134, "mqtt-implementation-mosquitto"]], "Installation": [[134, "installation"], [171, "installation"], [417, "installation"], [1005, "installation"], [1142, "installation"], [1204, "installation"], [1228, "installation"]], "Wrapper": [[134, "wrapper"]], "Display Interface/Infrastructure": [[135, "display-interface-infrastructure"]], "New Interface PercentageDisplay": [[135, "new-interface-percentagedisplay"]], "Existing Implementations": [[135, "existing-implementations"]], "Composite Display": [[135, "composite-display"]], "Testing: Breadboard Acrobatics, Demo Program": [[135, "testing-breadboard-acrobatics-demo-program"]], "WS2023/24: Group Project - Tasks": [[136, "ws2023-24-group-project-tasks"]], "Tasks": [[136, "tasks"], [144, "tasks"], [1046, "tasks"]], "Datalogger": [[136, "datalogger"], [144, "datalogger"]], "Boiling Pot": [[136, "boiling-pot"], [144, "boiling-pot"]], "Peripherals": [[136, "peripherals"], [144, "peripherals"]], "Client": [[136, "client"], [1204, "client"]], "libgpiod Switch": [[137, "libgpiod-switch"]], "Python MQTT Subscriber": [[138, "python-mqtt-subscriber"]], "Notes": [[138, "notes"], [542, "notes"]], "Temperature Display: LED Via A PWM Controller": [[139, "temperature-display-led-via-a-pwm-controller"]], "(DONE) Sensor Interface": [[140, "done-sensor-interface"]], "(DONE) Onewire Sensor": [[141, "done-onewire-sensor"]], "(DONE) Switch Interface": [[142, "done-switch-interface"]], "SysFS GPIO Switch": [[143, "sysfs-gpio-switch"], [144, "sysfs-gpio-switch"]], "WS2023/24": [[144, "ws2023-24"]], "2023-10-05 (6 VO)": [[144, "vo"]], "OO: Recap": [[144, "oo-recap"]], "Plan \ud83d\udcaa": [[144, "plan-muscle"]], "OO: Polymorphism": [[144, "oo-polymorphism"]], "Git Collaboration (via Github, but not necessarily): Forks And Pull Request": [[144, "git-collaboration-via-github-but-not-necessarily-forks-and-pull-request"]], "Tasks, First Round": [[144, "tasks-first-round"]], "2023-11-03 (6 VO)": [[144, "id1"]], "Organizational": [[144, "organizational"]], "OO: Design?": [[144, "oo-design"]], "Project": [[144, "project"], [144, "id3"], [144, "id5"], [144, "id7"], [144, "id9"], [144, "id11"], [144, "id13"], [144, "id15"], [144, "id17"], [210, "project"]], "Hardware Overview": [[144, "hardware-overview"]], "2023-11-09 (3 VO)": [[144, "id2"]], "2023-11-10 (3 VO)": [[144, "id4"]], "2023-11-17 (3 VO)": [[144, "id6"]], "OO, And Software Development At Large": [[144, "oo-and-software-development-at-large"]], "Updating A Fork From Upstream": [[144, "updating-a-fork-from-upstream"]], "2023-11-20 (6 VO)": [[144, "id8"]], "Container Templates (std::map)": [[144, "container-templates-std-map"]], "New Tasks: MQTT And CSV Sink Implementations": [[144, "new-tasks-mqtt-and-csv-sink-implementations"]], "Datalogger Pull Request": [[144, "datalogger-pull-request"]], "Boiling Pot, Switches": [[144, "boiling-pot-switches"]], "2023-12-07 (6 VO)": [[144, "id10"]], "Structure": [[144, "structure"], [187, "structure"], [585, "structure"]], "Renames": [[144, "renames"]], "2023-12-14 (6 VO)": [[144, "id12"]], "2024-01-08 (6 VO)": [[144, "id14"]], "2024-01-11 (6 VO)": [[144, "id16"]], "2024-02-02 (Exam)": [[144, "exam"]], "Relevant Topics": [[144, "relevant-topics"]], "A Sample Exam": [[144, "a-sample-exam"]], "Gl\u00fchwein Trinken?": [[146, "gluhwein-trinken"]], "2024-03-04(6): Introduction": [[147, "introduction"]], "Quiz": [[147, "quiz"]], "Intro: Course Contents": [[147, "intro-course-contents"]], "Homework: WSL Installation": [[147, "homework-wsl-installation"]], "2024-03-21(6): OS Concepts, Shell, SSH": [[148, "os-concepts-shell-ssh"]], "Intro: Course Contents (cont\u2019d)": [[148, "intro-course-contents-cont-d"]], "OS Concepts": [[148, "os-concepts"]], "Shell Usage": [[148, "shell-usage"]], "SSH Setup": [[148, "ssh-setup"]], "2024-04-14(6): SSH, Permissions (Incl. Exercise)": [[149, "ssh-permissions-incl-exercise"]], "SSH: Secure Shell": [[149, "ssh-secure-shell"], [327, "ssh-secure-shell"], [1000, "ssh-secure-shell"]], "File System Permissions": [[149, "file-system-permissions"], [327, "file-system-permissions"], [327, "id2"], [371, "file-system-permissions"], [943, "file-system-permissions"]], "2024-04-17(6): Toolchain, Makefiles, CMake": [[150, "toolchain-makefiles-cmake"]], "Recap, Outlook": [[150, "recap-outlook"]], "Toolchain Intro, And Basic Makefiles": [[150, "toolchain-intro-and-basic-makefiles"]], "CMake, Native Build": [[150, "cmake-native-build"], [151, "cmake-native-build"]], "2024-04-22(6): CMake, Systems Programming/File-IO, Homework": [[151, "cmake-systems-programming-file-io-homework"]], "Systems Programming Basics: File I/O": [[151, "systems-programming-basics-file-i-o"]], "Homework (until next time - 2024-05-06)": [[151, "homework-until-next-time-2024-05-06"]], "Exercise: Reading A Sensor (Driven By Tests)": [[152, "exercise-reading-a-sensor-driven-by-tests"], [153, "exercise-reading-a-sensor-driven-by-tests"]], "exercises/02-sensor: Exercise Structure": [[152, "exercises-02-sensor-exercise-structure"]], "tests/suite-sensor.cpp: Unit Tests (Requirements Definition)": [[152, "tests-suite-sensor-cpp-unit-tests-requirements-definition"]], "lib/sensor.c: Sensor Implementation": [[152, "lib-sensor-c-sensor-implementation"]], "See also": [[152, null], [471, null], [512, null], [513, null], [513, null], [514, null], [515, null], [518, null], [518, null], [519, null], [519, null], [522, null], [522, null], [522, null], [524, null], [526, null], [526, null], [526, null], [526, null], [526, null], [528, null], [531, null], [722, null], [726, null], [726, null], [918, null], [924, null], [924, null], [925, null], [925, null], [925, null], [930, null], [931, null], [1014, null], [1041, null], [1044, null], [1048, null], [1050, null], [1065, null], [1130, null]], "Documentation": [[152, null], [374, null], [374, null], [507, null], [507, null], [512, null], [512, null], [513, null], [513, null], [513, null], [514, null], [514, null], [515, null], [515, null], [519, null], [519, null], [519, null], [519, null], [520, null], [520, null], [520, null], [520, null], [520, null], [520, null], [520, null], [520, null], [521, null], [522, null], [522, null], [522, null], [524, null], [524, null], [524, null], [524, null], [524, null], [524, null], [526, null], [526, null], [526, null], [526, null], [526, null], [527, null], [528, null], [530, null], [682, null], [683, null], [684, null], [685, null], [686, null], [688, null], [689, null], [690, null], [691, null], [694, null], [695, null], [698, null], [703, null], [722, null], [722, null], [722, null], [722, null], [722, null], [722, null], [722, null], [726, null], [726, null], [851, null], [851, null], [867, null], [869, "documentation"], [869, null], [873, "documentation"], [875, null], [875, null], [875, null], [901, "documentation"], [904, "documentation"], [914, null], [915, null], [918, null], [923, null], [923, null], [930, null], [931, null], [932, null], [932, null], [932, null], [933, null], [948, null], [948, null], [948, null], [949, null], [950, null], [951, null], [967, null], [967, null], [967, null], [970, null], [971, null], [1004, null], [1006, null], [1008, null], [1010, null], [1011, null], [1012, null], [1014, null], [1014, null], [1014, null], [1014, null], [1014, null], [1014, null], [1017, null], [1018, null], [1019, null], [1020, null], [1020, null], [1021, null], [1024, null], [1024, null], [1024, null], [1024, null], [1062, null], [1062, null], [1062, null], [1063, null], [1079, null], [1139, null], [1140, null], [1150, null], [1228, "documentation"], [162, null]], "bin/read-sensor.c: Sensor Reading Program (But Wait!)": [[152, "bin-read-sensor-c-sensor-reading-program-but-wait"]], "Submission": [[152, "submission"], [1015, "submission"]], "2024-05-06(3): Homework Recap, Exercise: Reading Sensor, Test Driven Development": [[153, "homework-recap-exercise-reading-sensor-test-driven-development"]], "Homework, Recap": [[153, "homework-recap"]], "2024-05-13(3): Homework Recap, Cross Development Intro": [[154, "homework-recap-cross-development-intro"]], "Homework Recap": [[154, "homework-recap"]], "2024-05-27(6): Cross Development, Toolchain Installation": [[155, "cross-development-toolchain-installation"]], "Exercise: Install Cross Toolchain": [[155, "exercise-install-cross-toolchain"]], "C++ Intro: Livecoding Session": [[155, "c-intro-livecoding-session"]], "User\u2019s View": [[155, "user-s-view"]], "Exercise: Parse Lines From /etc/passwd": [[155, "exercise-parse-lines-from-etc-passwd"]], "2024-06-17(6): Container Templates": [[156, "container-templates"]], "std::vector<>, std::map<>": [[156, "std-vector-std-map"]], "auto": [[156, "auto"]], "2024-06-19(6): Sorting And Searching": [[157, "sorting-and-searching"]], "Sorting And Searching": [[157, "id1"]], "2024-06-20(3): Lab Exercise": [[158, "lab-exercise"]], "2024-06-28: Written Exam": [[160, "written-exam"]], "Embedded Computing 1 (STECE-2022): Summer": [[161, "embedded-computing-1-stece-2022-summer"]], "Embedded Computing 1 (STECE-2022): Syllabus": [[163, "embedded-computing-1-stece-2022-syllabus"]], "Lehrveranstaltungsbeschreibung": [[163, "lehrveranstaltungsbeschreibung"], [166, "lehrveranstaltungsbeschreibung"]], "Umfang der Lehrveranstaltung": [[163, "umfang-der-lehrveranstaltung"], [166, "umfang-der-lehrveranstaltung"]], "Inhalte": [[163, "inhalte"], [166, "inhalte"]], "Inhaltliche Voraussetzungen": [[163, "inhaltliche-voraussetzungen"], [166, "inhaltliche-voraussetzungen"]], "Ziel": [[163, "ziel"], [166, "ziel"]], "Angaben zur Pr\u00fcfung": [[163, "angaben-zur-prufung"], [166, "angaben-zur-prufung"]], "Beurteilungsschema": [[163, "beurteilungsschema"], [166, "beurteilungsschema"]], "Bewertung der Leistungen": [[163, "bewertung-der-leistungen"], [166, "bewertung-der-leistungen"]], "Bewertungsschl\u00fcssel": [[163, "bewertungsschlussel"], [166, "bewertungsschlussel"]], "Hilfsmittel bei schriftlichen Pr\u00fcfungen": [[163, "hilfsmittel-bei-schriftlichen-prufungen"], [166, "hilfsmittel-bei-schriftlichen-prufungen"]], "Wiederholungsm\u00f6glichkeiten": [[163, "wiederholungsmoglichkeiten"], [166, "wiederholungsmoglichkeiten"]], "Anwesenheitsvorgabe": [[163, "anwesenheitsvorgabe"], [166, "anwesenheitsvorgabe"]], "Zusatzinformationen": [[163, "zusatzinformationen"], [166, "zusatzinformationen"]], "Empfohlene Fachliteratur": [[163, "empfohlene-fachliteratur"], [166, "empfohlene-fachliteratur"]], "Inhalte der einzelnen Lehreinheiten": [[163, "inhalte-der-einzelnen-lehreinheiten"], [166, "inhalte-der-einzelnen-lehreinheiten"]], "Embedded Computing (FH Joanneum Graz)": [[167, "embedded-computing-fh-joanneum-graz"]], "Git Notes": [[168, "git-notes"]], "Bring Local Branch Upstream": [[168, "bring-local-branch-upstream"]], "Create Remote Tracking Branch": [[168, "create-remote-tracking-branch"]], "Create, Submit, Apply Patches": [[168, "create-submit-apply-patches"]], "Packaging this Site on PyPI": [[170, "packaging-this-site-on-pypi"]], "Gaphor": [[171, "gaphor"]], "Decadent": [[171, "decadent"]], "Manual": [[171, "manual"]], "Modeling": [[171, "modeling"]], "Using Gaphor As A Library": [[171, "using-gaphor-as-a-library"]], "Install": [[171, "install"]], "Jupyter Notebook": [[171, "jupyter-notebook"], [239, "jupyter-notebook"], [241, "jupyter-notebook"], [258, "jupyter-notebook"], [260, "jupyter-notebook"], [263, "jupyter-notebook"], [269, "jupyter-notebook"], [274, "jupyter-notebook"], [277, "jupyter-notebook"], [280, "jupyter-notebook"], [392, "Jupyter-Notebook"], [1194, "jupyter-notebook"]], "Hochk\u00f6nig": [[172, "hochkonig"]], "K\u00f6nigsjodler (Klettersteig)": [[172, "konigsjodler-klettersteig"]], "Tour: Werfen - Ostpreussenh\u00fctte - Matrashaus - Werfen": [[172, "tour-werfen-ostpreussenhutte-matrashaus-werfen"]], "Playground": [[173, "playground"]], "In the Works": [[173, "in-the-works"]], "Not Yet in the Works": [[173, "not-yet-in-the-works"]], "pending_xref": [[174, "pending-xref"]], "Audio Chip Bringup": [[175, "audio-chip-bringup"]], "Goal": [[175, "goal"], [177, "goal"], [178, "goal"], [180, "goal"], [315, "goal"], [317, "goal"], [372, "goal"], [1241, "goal"], [1244, "goal"]], "Findings": [[175, "findings"]], "Get Debian 10 Kernel Config": [[176, "get-debian-10-kernel-config"]], "Run Debian within Qemu": [[176, "run-debian-within-qemu"]], "Extract Kernel Config from /boot": [[176, "extract-kernel-config-from-boot"]], "Finish: Debian Kernel Package etc.": [[177, "finish-debian-kernel-package-etc"]], "Yocto Kernel Bringup on Customer Hardware": [[178, "yocto-kernel-bringup-on-customer-hardware"]], "Open Questions: Everything Works Like Before?": [[178, "open-questions-everything-works-like-before"]], "I2S Audio for a Kontron SMARC Module": [[179, "i2s-audio-for-a-kontron-smarc-module"]], "Dirty Upgrade Path": [[180, "dirty-upgrade-path"]], "Steps": [[180, "steps"]], "Wait for Customer Hardware": [[181, "wait-for-customer-hardware"]], "Extract Kernel from Intel Yocto BSP": [[182, "extract-kernel-from-intel-yocto-bsp"]], "Python Training Improvements": [[183, "python-training-improvements"]], "Beginner Course": [[183, "beginner-course"]], "Exercise Structure": [[183, "exercise-structure"]], "Split Exercises": [[183, "split-exercises"]], "Creating Screencasts": [[184, "creating-screencasts"]], "OpenShot": [[184, "openshot"]], "SEO": [[185, "seo"]], "Sitemap": [[185, "sitemap"]], "Meta Information": [[185, "meta-information"]], "Courses": [[185, "courses"]], "Stacks (Hanging)": [[186, "stacks-hanging"]], "DBus (New Topic)": [[186, "dbus-new-topic"]], "Finish Meta/SEO and Stuff": [[186, "finish-meta-seo-and-stuff"]], "Miscellaneous To Do": [[187, "miscellaneous-to-do"]], "Extensions": [[187, "extensions"]], "reST Todos": [[187, "rest-todos"]], "Styling": [[187, "styling"]], "Convert to RST/S5": [[187, "convert-to-rst-s5"]], "Examples": [[187, "examples"], [546, "examples"], [747, "examples"], [795, "examples"], [911, "examples"], [1014, null]], "Convert Existing Content": [[187, "convert-existing-content"]], "Add Missing": [[187, "add-missing"]], "References, Past Trainings": [[187, "references-past-trainings"]], "About": [[187, "about"]], "Blog": [[187, "blog"]], "Learning The Web": [[188, "learning-the-web"]], "Beagleboard: How to Repair NAND (also known as 40W)": [[189, "beagleboard-how-to-repair-nand-also-known-as-40w"]], "Basics": [[189, "basics"], [260, "basics"], [287, "basics"], [302, "basics"], [322, "basics"], [323, "basics"], [323, "id1"], [328, "basics"], [329, "basics"], [329, "id1"], [350, "basics"], [356, "basics"], [362, "basics"], [363, "basics"], [366, "basics"], [367, "basics"], [375, "basics"], [376, "basics"], [380, "basics"], [392, "Basics"], [460, "basics"], [666, "basics"], [678, "basics"], [698, "basics"], [797, "basics"], [913, "basics"], [1030, "basics"], [1139, "basics"], [378, "basics"], [379, "basics"]], "Getting X-Loader and U-Boot": [[189, "getting-x-loader-and-u-boot"]], "Creating a Bootable MMC/SD card": [[189, "creating-a-bootable-mmc-sd-card"]], "Repairing the NAND": [[189, "repairing-the-nand"]], "Writing X-Loader to NAND": [[189, "writing-x-loader-to-nand"]], "Writing U-Boot to NAND": [[189, "writing-u-boot-to-nand"]], "Porting to Linux (There\u2019s Always A Better Way)": [[190, "porting-to-linux-there-s-always-a-better-way"]], "Processes are Threads": [[190, "processes-are-threads"]], "Signals Aren\u2019t Messages": [[190, "signals-aren-t-messages"]], "References": [[190, null], [190, null], [190, null], [262, "References"], [265, "References"], [657, "references"]], "Message Queues aren\u2019t Message Queues": [[190, "message-queues-aren-t-message-queues"]], "Semaphores and Mutexes": [[190, "semaphores-and-mutexes"]], "Timers": [[190, "timers"]], "Polling": [[190, "polling"]], "Event Dispatching": [[190, "event-dispatching"]], "Interrupts": [[190, "interrupts"], [870, "interrupts"]], "Realtime": [[190, "realtime"], [1048, "realtime"], [1236, "realtime"]], "Saving Solid State Disk Life (Gentoo)": [[191, "saving-solid-state-disk-life-gentoo"]], "Rant": [[191, "rant"], [211, "Rant"], [1064, null]], "No Swap": [[191, "no-swap"]], "tmpfs instances here and there": [[191, "tmpfs-instances-here-and-there"]], "Syslog, /var/log/messages": [[191, "syslog-var-log-messages"]], "Mountpoint for messages": [[191, "mountpoint-for-messages"]], "Logrotate": [[191, "logrotate"]], "Kernel I/O Scheduler": [[191, "kernel-i-o-scheduler"]], "Use RAM for the Kernel Build": [[191, "use-ram-for-the-kernel-build"]], "Things that are left": [[191, "things-that-are-left"]], "\u201cWhy ps Sucks\u201d or \u201cCounting Memory Consumption\u201d": [[192, "why-ps-sucks-or-counting-memory-consumption"]], "Process Stack Management": [[192, "process-stack-management"]], "Conclusion": [[192, "conclusion"], [192, "id1"], [985, "conclusion"], [993, "conclusion"]], "Thread (pthread) Stack Management": [[192, "thread-pthread-stack-management"]], "Experiment #1: 100 default threads, eating no stack": [[192, "experiment-1-100-default-threads-eating-no-stack"]], "Experiment #2: 100 default threads, eating up stack": [[192, "experiment-2-100-default-threads-eating-up-stack"]], "Experiment #3: 100 threads with limited stack": [[192, "experiment-3-100-threads-with-limited-stack"]], "Experiment #4: more threads than my system could take (eat no stack)": [[192, "experiment-4-more-threads-than-my-system-could-take-eat-no-stack"]], "Experiment #5: more threads than my system could take (eat stack)": [[192, "experiment-5-more-threads-than-my-system-could-take-eat-stack"]], "How does this work?": [[192, "how-does-this-work"]], "Realtime is different": [[192, "realtime-is-different"]], "Patching and Building the Fedora Kernel": [[193, "patching-and-building-the-fedora-kernel"]], "Why?": [[193, "why"], [1001, "why"], [1084, "why"]], "Find Kernel Source (Git), Fix It, and Create Patch": [[193, "find-kernel-source-git-fix-it-and-create-patch"]], "Link": [[193, null], [193, null]], "Prepare the RPM Build": [[193, "prepare-the-rpm-build"]], "Install Prerequisites": [[193, "install-prerequisites"]], "Setup rpmbuild Directory": [[193, "setup-rpmbuild-directory"]], "Download and Install Source RPM For Crashing Kernel": [[193, "download-and-install-source-rpm-for-crashing-kernel"]], "Apply the Patch": [[193, "apply-the-patch"]], "Build the Kernel RPMs": [[193, "build-the-kernel-rpms"]], "Install Kernel": [[193, "install-kernel"]], "Adding a Custom Domain to a Github Pages Project Site": [[194, "adding-a-custom-domain-to-a-github-pages-project-site"]], "Configure a Subdomain, www.faschingbauer.me": [[194, "configure-a-subdomain-www-faschingbauer-me"]], "Configure an Apex Domain, faschingbauer.me": [[194, "configure-an-apex-domain-faschingbauer-me"]], "Using Microsoft Teams on Linux": [[195, "using-microsoft-teams-on-linux"]], "Screen Sharing: X11 Revival": [[195, "screen-sharing-x11-revival"]], "RPM Package (Meh!)": [[195, "rpm-package-meh"]], "Updated on 2020-04-09": [[195, null]], "Annoyance #1: Keeps Running in Background": [[195, "annoyance-1-keeps-running-in-background"]], "Annoyance #2: (Re)Registers Itself For Autostart": [[195, "annoyance-2-re-registers-itself-for-autostart"]], "Run In Browser (My Recommendation)": [[195, "run-in-browser-my-recommendation"]], "Deploying Sphinx Generated Documentation to Github Pages": [[196, "deploying-sphinx-generated-documentation-to-github-pages"]], "Create \u201cSite Publication Repo\u201d": [[196, "create-site-publication-repo"]], "Configure Github Pages for jfasch-home-pages": [[196, "configure-github-pages-for-jfasch-home-pages"]], "Time for Deployment": [[196, "time-for-deployment"]], "Using BigBlueButton for Online Training": [[197, "using-bigbluebutton-for-online-training"]], "In this Article": [[197, null], [198, null], [200, null]], "TL;DR": [[197, "tl-dr"]], "Background Information": [[197, "background-information"]], "Hosting Setup": [[197, "hosting-setup"]], "BigBlueButton Installation": [[197, "bigbluebutton-installation"]], "Functionality Check": [[197, "functionality-check"]], "What Else?": [[197, "what-else"], [988, "what-else"], [1001, "what-else"]], "Traunstein via Zierlersteig": [[198, "traunstein-via-zierlersteig"]], "Kaltenbachwildnis": [[198, "kaltenbachwildnis"]], "Anstieg auf den Zierlerberg": [[198, "anstieg-auf-den-zierlerberg"]], "Die Rinne": [[198, "die-rinne"]], "Abstieg": [[198, "abstieg"]], "Grintovec (via Plan\u0161arsko Jezero, \u010ce\u0161ka Ko\u010da)": [[199, "grintovec-via-plansarsko-jezero-ceska-koca"]], "Anreise": [[199, "anreise"]], "\u010ce\u0161ka Ko\u010da": [[199, "ceska-koca"]], "Hinauf": [[199, "hinauf"]], "Runter": [[199, "runter"]], "Zusammenfassung": [[199, "zusammenfassung"]], "How to Brick a \u20ac1399 Dell XPS 13": [[200, "how-to-brick-a-1399-dell-xps-13"]], "What Happened?": [[200, "what-happened"]], "VirtualBox, Fedora, and Secure Boot": [[200, "virtualbox-fedora-and-secure-boot"]], "Enrolling Machine Owner Key (MOK)": [[200, "enrolling-machine-owner-key-mok"]], "Generate Key Pair": [[200, "generate-key-pair"]], "Stage Key for Enrollment": [[200, "stage-key-for-enrollment"]], "Reboot, Brick": [[200, "reboot-brick"]], "Diagnostics": [[200, "diagnostics"]], "Building A Cross Toolchain For The Raspberry Pi, Using crosstool-ng": [[201, "building-a-cross-toolchain-for-the-raspberry-pi-using-crosstool-ng"], [1076, "building-a-cross-toolchain-for-the-raspberry-pi-using-crosstool-ng"]], "Why This Article? Why Not Use A Prebuilt Toolchain?": [[201, "why-this-article-why-not-use-a-prebuilt-toolchain"]], "Installing crosstool-ng": [[201, "installing-crosstool-ng"]], "Prerequisites": [[201, "prerequisites"], [1143, "prerequisites"]], "Installing From Cloned Git Repository": [[201, "installing-from-cloned-git-repository"]], "Installing From Release Tarball": [[201, "installing-from-release-tarball"]], "PATH, And Basic Test": [[201, "path-and-basic-test"]], "Configure Toolchain Build": [[201, "configure-toolchain-build"]], "Base Configuration For The Raspberry": [[201, "base-configuration-for-the-raspberry"]], "Important: glibc Version": [[201, "important-glibc-version"]], "The Error": [[201, "the-error"], [201, "id4"]], "The Fix": [[201, "the-fix"], [201, "id5"]], "Important: GCC Version": [[201, "important-gcc-version"]], "Toolchain Build/Install": [[201, "toolchain-build-install"]], "Test": [[201, "test"], [867, "test"]], "Simplest: C, <stdio.h>": [[201, "simplest-c-stdio-h"]], "C++, <iostream>": [[201, "c-iostream"]], "C++, <thread>": [[201, "c-thread"]], "Packaging/Distributing The Toolchain": [[201, "packaging-distributing-the-toolchain"]], "Afterword": [[201, "afterword"], [372, "afterword"]], "Posts": [[202, "posts"]], "Linux und Open Source": [[203, "linux-und-open-source"]], "Schulung": [[203, "schulung"]], "Entwicklung": [[203, "entwicklung"]], "Beratung": [[203, "beratung"]], "Richtlinien zur Ver\u00f6ffentlichung von Kursmaterial": [[204, "richtlinien-zur-veroffentlichung-von-kursmaterial"]], "Installing Git": [[205, "installing-git"]], "Windows": [[205, "windows"]], "Workflow": [[205, "workflow"]], "Cloning the Repository": [[205, "cloning-the-repository"]], "Exercise Time": [[205, "exercise-time"], [374, "exercise-time"]], "Conflicts": [[205, "conflicts"]], "Trainer\u2019s Notes": [[205, "trainer-s-notes"]], "Courses: Overview": [[206, "courses-overview"]], "Online Trainings": [[206, null]], "Individual Trainings": [[206, null]], "Everything About Linux": [[206, "everything-about-linux"]], "Programming Languages": [[206, "programming-languages"]], "Miscellaneous but Related": [[206, "miscellaneous-but-related"]], "Qualivision, Z\u00fcrich, 1.10.2013": [[207, "qualivision-zurich-1-10-2013"]], "Fragen und Antworten": [[207, "fragen-und-antworten"]], "Kursnotizen: Linux Embedded 2015-11-30": [[208, "kursnotizen-linux-embedded-2015-11-30"]], "GPIOs in Userspace": [[208, "gpios-in-userspace"]], "CAN Bus": [[208, "can-bus"], [229, "can-bus"]], "Driver Beispiele": [[208, "driver-beispiele"]], "Heizungssteuerung": [[208, "heizungssteuerung"]], "Live Hacking": [[209, "Live-Hacking"], [682, "live-hacking"], [683, "live-hacking"], [685, "live-hacking"], [686, "live-hacking"], [689, "live-hacking"], [690, "live-hacking"], [691, "live-hacking"], [703, "live-hacking"]], "Strings k\u00f6nnen viel: split()": [[209, "Strings-k\u00f6nnen-viel:-split()"]], "Mutability, Immutability: kann man nicht oft genug wiederholen": [[209, "Mutability,-Immutability:-kann-man-nicht-oft-genug-wiederholen"]], "Dictionaries": [[209, "Dictionaries"], [238, "Dictionaries"], [310, "Dictionaries"], [324, "Dictionaries"], [392, "Dictionaries"], [1135, "dictionaries"]], "\u201cHartes\u201d Indizieren \u2026": [[209, "%22Hartes%22-Indizieren-..."]], "\u201cWeiches\u201d Nettfragen \u2026": [[209, "%22Weiches%22-Nettfragen-..."]], "Shortcuts": [[209, "Shortcuts"]], "Objektorientierte Programmierung": [[209, "Objektorientierte-Programmierung"]], "Inheritance": [[209, "Inheritance"], [249, "Inheritance"], [1103, "inheritance"]], "Date and Time and Time Deltas - datetime": [[209, "Date-and-Time-and-Time-Deltas---datetime"]], "Bissl potschert zum Schreiben is scho \u2026 (andere Formen von import)": [[209, "Bissl-potschert-zum-Schreiben-is-scho-...-(andere-Formen-von-import)"]], "String Representations: __str__()": [[209, "String-Representations:-__str__()"]], "subprocess": [[209, "subprocess"], [288, "subprocess"]], "enumerate(), zip()": [[209, "enumerate(),-zip()"]], "List Comprehension": [[209, "List-Comprehension"], [233, "List-Comprehension"], [272, "List-Comprehension"], [342, "List-Comprehension"], [352, "List-Comprehension"], [358, "List-Comprehension"], [1089, "list-comprehension"], [1134, "list-comprehension"]], "exec(), eval()": [[209, "exec(),-eval()"]], "Umgebender Context": [[209, "Umgebender-Context"]], "Eigener Context": [[209, "Eigener-Context"]], "json": [[209, "json"], [285, "json"]], "Python Individualtraining (5 Tage, beginnend 28.10.2019)": [[210, "python-individualtraining-5-tage-beginnend-28-10-2019"], [415, "python-individualtraining-5-tage-beginnend-28-10-2019"]], "Inhalt": [[210, null], [213, null], [1059, null], [1238, "inhalt"]], "Slide 51, \u201cExercises: Basics\u201d": [[210, "slide-51-exercises-basics"]], "Slide 58, \u201cExercises: While Loop\u201d": [[210, "slide-58-exercises-while-loop"]], "Slide 94, \u201cExercises: Lists, Loops, Functions\u201d": [[210, "slide-94-exercises-lists-loops-functions"]], "Slide 121, \u201cExercises: Strings\u201d": [[210, "slide-121-exercises-strings"]], "Famous Generator Introduction": [[210, "famous-generator-introduction"]], "eval(): Convert a String into a Python Data Structure": [[210, "eval-convert-a-string-into-a-python-data-structure"]], "Operator Overloading": [[210, "operator-overloading"], [268, "operator-overloading"], [278, "Operator-Overloading"], [299, "operator-overloading"], [334, "operator-overloading"], [620, "operator-overloading"], [646, "operator-overloading"], [660, "operator-overloading"], [1106, "operator-overloading"]], "Getters and Setters": [[210, "getters-and-setters"]], "More on Listcomprehensions and Generator Expressions": [[210, "more-on-listcomprehensions-and-generator-expressions"]], "More on Local and Global Scope and Global Variables": [[210, "more-on-local-and-global-scope-and-global-variables"]], "Closures: Between Local and Global": [[210, "closures-between-local-and-global"]], "Goals of this Training": [[211, "Goals-of-this-Training"]], "Exercise": [[211, "Exercise"], [252, "exercise"], [294, "exercise"], [294, "id1"], [295, "exercise"], [297, "exercise"], [306, "exercise"], [315, "exercise"], [337, "exercise"], [371, "exercise"], [397, "exercise"], [403, "exercise"], [542, "exercise"], [543, "exercise"], [544, "exercise"], [546, "exercise"], [547, "exercise"], [550, "exercise"], [551, "exercise"], [737, "exercise"]], "Walkthrough: Reduce Image to Eight Colors": [[211, "Walkthrough:-Reduce-Image-to-Eight-Colors"]], "Load Image from File: PIL": [[211, "Load-Image-from-File:-PIL"]], "Image as NumPy Array": [[211, "Image-as-NumPy-Array"]], "Preparation before Clustering": [[211, "Preparation-before-Clustering"]], "Excursion: matplotlib": [[211, "Excursion:-matplotlib"]], "Now Comes the Clustering": [[211, "Now-Comes-the-Clustering"]], "Let KMeans find eight clusters \u2026": [[211, "Let-KMeans-find-eight-clusters-..."]], "Use the result: output-properties": [[211, "Use-the-result:-output-properties"]], "Clusters be their Centers": [[211, "Clusters-be-their-Centers"]], "Post Processing: Restore Alpha, Back into RGBA": [[211, "Post-Processing:-Restore-Alpha,-Back-into-RGBA"]], "Random Live Hacking": [[212, "Random-Live-Hacking"]], "Data Types": [[212, "Data-Types"], [342, "Data-Types"]], "Mutable, Immutable": [[212, "Mutable,-Immutable"]], "Exception, demonstrated using dict access": [[212, "Exception,-demonstrated-using-dict-access"]], "Indices and Slicing": [[212, "Indices-and-Slicing"]], "for loops": [[212, "for-loops"]], "Iterator protocol": [[212, "Iterator-protocol"], [275, "Iterator-protocol"]], "Python (12.11.2019 - 14.11.2019 in Graz)": [[213, "python-12-11-2019-14-11-2019-in-graz"]], "Material": [[213, null], [215, null], [396, null]], "Standardthemen": [[213, "standardthemen"]], "Das Hauptthema: Numerik, NumPy": [[213, "das-hauptthema-numerik-numpy"]], "Lesen von .mat Files": [[213, "lesen-von-mat-files"]], "L\u00f6sen einer Uni-\u00dcbung": [[213, "losen-einer-uni-ubung"]], "Proposal": [[214, "proposal"]], "Signals": [[214, "signals"]], "Posix IPC (and Virtual Memory)": [[214, "posix-ipc-and-virtual-memory"]], "Unix Domain Sockets": [[214, "unix-domain-sockets"]], "Application in your Company": [[214, "application-in-your-company"]], "Further Thoughts": [[214, "further-thoughts"]], "IPC in Linux (10.1.2020 in Graz)": [[215, "ipc-in-linux-10-1-2020-in-graz"]], "\u00dcbung: handgestrickter String, um die Fallen von C++ lustvoll zu erleiden": [[216, "ubung-handgestrickter-string-um-die-fallen-von-c-lustvoll-zu-erleiden"]], "C++ f\u00fcr Embedded C Programmierer (30.3.2020 - 3.4.2020 Baden W\u00fcrttemberg)": [[217, "c-fur-embedded-c-programmierer-30-3-2020-3-4-2020-baden-wurttemberg"]], "Kursinformation": [[217, null]], "Kursaufbau": [[217, "kursaufbau"]], "Kursverlauf": [[217, "kursverlauf"], [225, "kursverlauf"]], "Tag 3": [[217, "tag-3"], [236, "tag-3"], [247, "tag-3"], [269, "tag-3"], [281, "tag-3"]], "Tag 4": [[217, "tag-4"], [247, "tag-4"], [269, "tag-4"], [281, "tag-4"]], "Tag 5": [[217, "tag-5"]], "Installing googletest By Hand": [[218, "installing-googletest-by-hand"]], "Clone googletest Repo": [[218, "clone-googletest-repo"]], "Create Build Directory": [[218, "create-build-directory"], [219, "create-build-directory"], [599, "create-build-directory"]], "CMake, Build and Install": [[218, "cmake-build-and-install"]], "Build Packages to Use Our Private googletest Install": [[218, "build-packages-to-use-our-private-googletest-install"]], "Software Setup, Build": [[219, "software-setup-build"]], "Getting the Source": [[219, "getting-the-source"]], "Install Prerequisites and Dependencies": [[219, "install-prerequisites-and-dependencies"]], "Generate Makefile Build from CMake Sources": [[219, "generate-makefile-build-from-cmake-sources"]], "Argh: Using This Site With Visual Studio Code": [[220, "argh-using-this-site-with-visual-studio-code"]], "Flatpak": [[220, "flatpak"]], "Issues": [[220, "issues"]], "RPM From M$": [[220, "rpm-from-m"]], "Code": [[221, "code"], [224, "code"]], "Python Grundlagen (13.5.2020 - 14.5.2020 bei einer Firma in Graz)": [[222, "python-grundlagen-13-5-2020-14-5-2020-bei-einer-firma-in-graz"]], "Information": [[222, null], [225, null]], "Environment": [[222, "environment"], [919, "environment"]], "Unit Testing and Test Driven Development": [[222, "unit-testing-and-test-driven-development"]], "Python Installation": [[222, "python-installation"], [1111, "python-installation"]], "Programming Environment": [[222, "programming-environment"], [306, "programming-environment"], [1111, "programming-environment"]], "Day 1: Language Basics": [[222, "day-1-language-basics"]], "Day 2: Advanced Topics": [[222, "day-2-advanced-topics"]], "Wrap-Up": [[222, "wrap-up"]], "How Was It?": [[222, "how-was-it"]], "Python Schulung 18. und 19.5.2020": [[223, "Python-Schulung-18.-und-19.5.2020"]], "Das sys Modul": [[223, "Das-sys-Modul"]], "Multiline Strings und Docstrings": [[223, "Multiline-Strings-und-Docstrings"]], "Datentypen (Ausflug)": [[223, "Datentypen-(Ausflug)"]], "Variablen und deren Unterbau": [[223, "Variablen-und-deren-Unterbau"]], "Ausflug \u201cPythonic\u201d: Zuweisung mit Hilfe von \u201cTuple Unpacking\u201d": [[223, "Ausflug-%22Pythonic%22:-Zuweisung-mit-Hilfe-von-%22Tuple-Unpacking%22"]], "Mutability am Beispiel list": [[223, "Mutability-am-Beispiel-list"]], "Integers haben unendliche Breite": [[223, "Integers-haben-unendliche-Breite"]], "Division und Floor Division": [[223, "Division-und-Floor-Division"]], "Konvertierung durch Konstruktoren": [[223, "Konvertierung-durch-Konstruktoren"]], "Welchen Typ haben Typen?": [[223, "Welchen-Typ-haben-Typen?"]], "list und Mutability": [[223, "list-und-Mutability"]], "Tuple und Immutability": [[223, "Tuple-und-Immutability"]], "Besseres Laufzeitverhalten durch Geeignetere Datenstrukturen": [[223, "Besseres-Laufzeitverhalten-durch-Geeignetere-Datenstrukturen"]], "Boolean: Short Circuit Evaluation": [[223, "Boolean:-Short-Circuit-Evaluation"]], "while Loops, und warum sie nicht Pythonic sind": [[223, "while-Loops,-und-warum-sie-nicht-Pythonic-sind"]], "Mehr \u00fcber range(): Iterator Protocol (Folie 161)": [[223, "Mehr-\u00fcber-range():-Iterator-Protocol-(Folie-161)"]], "Mutability, Shallow und Deep Copy": [[223, "Mutability,-Shallow-und-Deep-Copy"]], "Shallow Copy mit dem Slice-Operator": [[223, "Shallow-Copy-mit-dem-Slice-Operator"]], "Deep Copy (copy.deepcopy())": [[223, "Deep-Copy-(copy.deepcopy())"]], "Funktionen": [[223, "Funktionen"]], "Funktionen sind \u201cFirst Class Objects\u201d": [[223, "Funktionen-sind-%22First-Class-Objects%22"]], "Gotcha: Mutable Default Parameters (Folie 90 ff.)": [[223, "Gotcha:-Mutable-Default-Parameters-(Folie-90-ff.)"]], "Globale und lokale Variablen (Folie 92)": [[223, "Globale-und-lokale-Variablen-(Folie-92)"]], "Exercise: uniq() (Folie 94, Punkt 2)": [[223, "Exercise:-uniq()-(Folie-94,-Punkt-2)"]], "Zusammengefasst: hier eine \u201csch\u00f6nere\u201d L\u00f6sung": [[223, "Zusammengefasst:-hier-eine-%22sch\u00f6nere%22-L\u00f6sung"]], "Funktionen als Parameter": [[223, "Funktionen-als-Parameter"]], "List Comprensions (Folie 125)": [[223, "List-Comprensions-(Folie-125)"]], "Generator Expressions: Lesbarkeit und Performance": [[223, "Generator-Expressions:-Lesbarkeit-und-Performance"]], "Code Review": [[223, "Code-Review"]], "pprint() ist praktisch f\u00fcr Debug-Output": [[223, "pprint()-ist-praktisch-f\u00fcr-Debug-Output"]], "Straightforward Datentransformation": [[223, "Straightforward-Datentransformation"]], "Ausflug: More on Dictionaries (Folie 127ff.)": [[223, "Ausflug:-More-on-Dictionaries-(Folie-127ff.)"]], "Now for something completely different: collections.namedtuple": [[223, "Now-for-something-completely-different:-collections.namedtuple"]], "Mehr zur Parameter\u00fcbergabe: variabel lange Argumentlisten": [[223, "Mehr-zur-Parameter\u00fcbergabe:-variabel-lange-Argumentlisten"]], "OO: eine erste Klasse": [[223, "OO:-eine-erste-Klasse"]], "Python Individualtraining (18.5.2020 - 19.5.2020)": [[225, "python-individualtraining-18-5-2020-19-5-2020"], [415, "python-individualtraining-18-5-2020-19-5-2020"]], "Weiterf\u00fchrende Links": [[225, "weiterfuhrende-links"]], "Python Advanced (7.9.2020 - 10.9.2020)": [[226, "python-advanced-7-9-2020-10-9-2020"], [415, "python-advanced-7-9-2020-10-9-2020"]], "Preparation": [[226, "preparation"], [227, "preparation"], [229, "preparation"], [230, "preparation"], [231, "preparation"], [232, "preparation"], [662, "preparation"]], "Workspace Setup": [[226, "workspace-setup"], [227, "workspace-setup"], [229, "workspace-setup"], [231, "workspace-setup"]], "Github for Exercises": [[226, "github-for-exercises"], [227, "github-for-exercises"]], "Agenda": [[226, "agenda"], [227, "agenda"], [229, "agenda"], [230, "agenda"], [231, "agenda"], [232, "agenda"], [237, "agenda"], [241, "agenda"], [242, "agenda"], [279, "agenda"], [284, "agenda"], [296, "agenda"], [305, "agenda"], [326, "agenda"], [334, "agenda"], [370, "agenda"], [1243, "agenda"]], "Advanced Core Python Topics": [[226, "advanced-core-python-topics"]], "Special Topics": [[226, "special-topics"]], "Day 1": [[226, "day-1"], [227, "day-1"], [229, "day-1"], [230, "day-1"], [231, "day-1"], [241, "day-1"], [242, "day-1"], [251, "day-1"], [252, "day-1"], [257, "day-1"], [260, "day-1"], [263, "day-1"], [266, "day-1"], [273, "day-1"], [315, "day-1"], [316, "day-1"], [317, "day-1"], [323, "day-1"], [327, "day-1"], [329, "day-1"], [334, "day-1"], [341, "day-1"], [367, "day-1"], [371, "day-1"], [374, "day-1"], [376, "day-1"], [379, "day-1"]], "Day 2": [[226, "day-2"], [227, "day-2"], [229, "day-2"], [230, "day-2"], [231, "day-2"], [241, "day-2"], [242, "day-2"], [251, "day-2"], [252, "day-2"], [257, "day-2"], [260, "day-2"], [262, "Day-2"], [263, "day-2"], [266, "day-2"], [273, "day-2"], [306, "day-2"], [315, "day-2"], [317, "day-2"], [323, "day-2"], [327, "day-2"], [334, "day-2"], [341, "day-2"], [367, "day-2"], [371, "day-2"], [374, "day-2"], [376, "day-2"], [379, "day-2"]], "Day 3": [[226, "day-3"], [227, "day-3"], [229, "day-3"], [230, "day-3"], [231, "day-3"], [241, "day-3"], [242, "day-3"], [251, "day-3"], [252, "day-3"], [257, "day-3"], [262, "Day-3"], [263, "day-3"], [266, "day-3"], [273, "day-3"], [306, "day-3"], [309, "day-3"], [315, "day-3"], [317, "day-3"], [323, "day-3"], [327, "day-3"], [329, "day-3"], [341, "day-3"], [367, "day-3"], [371, "day-3"], [374, "day-3"], [376, "day-3"], [379, "day-3"]], "Day 4": [[226, "day-4"], [229, "day-4"], [241, "day-4"], [242, "day-4"], [251, "day-4"], [252, "day-4"], [306, "day-4"], [374, "day-4"]], "Recommended Tutorials": [[226, "recommended-tutorials"]], "After Work Party": [[226, "after-work-party"], [257, "after-work-party"]], "Python Basics (28.9.2020 - 30.9.2020)": [[227, "python-basics-28-9-2020-30-9-2020"], [415, "python-basics-28-9-2020-30-9-2020"]], "Iterables": [[228, "Iterables"]], "set constructor": [[228, "set-constructor"]], "Fast vs. Simple": [[228, "Fast-vs.-Simple"]], "for, Iterables, range and Generators": [[228, "for,-Iterables,-range-and-Generators"]], "Tuples, Tuple Unpacking, Returning Multiple Values from Functions": [[228, "Tuples,-Tuple-Unpacking,-Returning-Multiple-Values-from-Functions"]], "Object Oriented Programming": [[228, "Object-Oriented-Programming"], [278, "Object-Oriented-Programming"], [291, "Object-Oriented-Programming"], [302, "object-oriented-programming"], [316, "object-oriented-programming"], [318, "object-oriented-programming"], [319, "object-oriented-programming"], [322, "object-oriented-programming"], [323, "object-oriented-programming"], [328, "object-oriented-programming"], [334, "object-oriented-programming"], [337, "object-oriented-programming"], [340, "object-oriented-programming"], [341, "object-oriented-programming"], [344, "object-oriented-programming"], [350, "object-oriented-programming"], [356, "object-oriented-programming"], [362, "object-oriented-programming"], [363, "object-oriented-programming"], [366, "object-oriented-programming"], [367, "object-oriented-programming"], [504, "object-oriented-programming"], [1102, "object-oriented-programming"]], "datetime": [[228, "datetime"], [255, "datetime"], [310, "datetime"]], "Python Basic and Advanced (19.10.2020 - 22.10.2020)": [[229, "python-basic-and-advanced-19-10-2020-22-10-2020"]], "Additional Topics, brought in by Thomas": [[229, "additional-topics-brought-in-by-thomas"]], "Notebook": [[229, "notebook"], [250, "notebook"], [265, "Notebook"], [397, "notebook"]], "Tutorials": [[229, "tutorials"], [257, "tutorials"]], "Linux on Raspberry Pi": [[230, "linux-on-raspberry-pi"]], "Cloud Machine": [[230, "cloud-machine"]], "Raspberry on Participant\u2019s Desks": [[230, "raspberry-on-participant-s-desks"]], "Basic security": [[230, "basic-security"]], "Interlude: SD Card Setup (No Bloody Disk Imager)": [[230, "interlude-sd-card-setup-no-bloody-disk-imager"]], "GPIO, using sysfs interface": [[230, "gpio-using-sysfs-interface"]], "In the Wild: Watchdog": [[230, "in-the-wild-watchdog"]], "TODO": [[230, "todo"], [384, "todo"], [385, "todo"], [386, "todo"], [1140, "todo"], [1203, "todo"]], "Support Material": [[230, "support-material"]], "Python Basics (23.11.2020 - 25.11.2020)": [[231, "python-basics-23-11-2020-25-11-2020"], [415, "python-basics-23-11-2020-25-11-2020"]], "Exercise: JSON": [[231, "exercise-json"]], "Linux Basics (30.11.2020 - 3.12.2020)": [[232, "linux-basics-30-11-2020-3-12-2020"], [415, "linux-basics-30-11-2020-3-12-2020"]], "6 Grundlegende Sprachelemente": [[233, "6-Grundlegende-Sprachelemente"]], "6.1 Syntax und Semantik": [[233, "6.1-Syntax-und-Semantik"]], "Zur Syntax mit der Einr\u00fcckung \u2026": [[233, "Zur-Syntax-mit-der-Einr\u00fcckung-..."]], "In Python k\u00f6nnen Variablen ihren Typ \u00e4ndern": [[233, "In-Python-k\u00f6nnen-Variablen-ihren-Typ-\u00e4ndern"]], "Kommentare": [[233, "Kommentare"]], "6.2 Grundlegende Elemente einer Sprache": [[233, "6.2-Grundlegende-Elemente-einer-Sprache"]], "6.3 Standarddatentypen (elementare Datentypen)": [[233, "6.3-Standarddatentypen-(elementare-Datentypen)"]], "Integers sind beliebig gro\u00df": [[233, "Integers-sind-beliebig-gro\u00df"]], "Vergleichsoperatoren": [[233, "Vergleichsoperatoren"]], "Operator Pr\u00e4zedenz: Punkt vor Strichrechnung": [[233, "Operator-Pr\u00e4zedenz:-Punkt-vor-Strichrechnung"]], "Floor Division": [[233, "Floor-Division"]], "Modulo Operator: %": [[233, "Modulo-Operator:-%"]], "(Un\u00e4rer) Negations Operator": [[233, "(Un\u00e4rer)-Negations-Operator"]], "Operator Pr\u00e4zedenz erzwingen": [[233, "Operator-Pr\u00e4zedenz-erzwingen"]], "Strings gibts auch (Zeichenketten)": [[233, "Strings-gibts-auch-(Zeichenketten)"]], "Raw Strings": [[233, "Raw-Strings"], [255, "Raw-Strings"], [272, "Raw-Strings"], [278, "Raw-Strings"], [300, "Raw-Strings"], [330, "Raw-Strings"], [1131, "raw-strings"]], "f-Strings": [[233, "f-Strings"], [352, "f-Strings"]], "Konvertierungen": [[233, "Konvertierungen"]], "Boolean": [[233, "Boolean"], [259, "Boolean"], [262, "Boolean"], [270, "Boolean"], [272, "Boolean"], [282, "Boolean"], [285, "Boolean"], [358, "Boolean"], [1120, "boolean"]], "Pr\u00e4zendenzregeln: and vor or": [[233, "Pr\u00e4zendenzregeln:-and-vor-or"]], "6.4 Literale f\u00fcr primitive Datentypen": [[233, "6.4-Literale-f\u00fcr-primitive-Datentypen"]], "6.5 Variablen und Konstanten": [[233, "6.5-Variablen-und-Konstanten"]], "6.6 Operatoren": [[233, "6.6-Operatoren"]], "6.7 Ausdr\u00fccke und Operatorrangfolgen": [[233, "6.7-Ausdr\u00fccke-und-Operatorrangfolgen"]], "6.8 \u00dcbungen": [[233, "6.8-\u00dcbungen"]], "Zwei Variablen vertauschen": [[233, "Zwei-Variablen-vertauschen"]], "Zwei Variablen vertauschen mit Tuple Unpacking": [[233, "Zwei-Variablen-vertauschen-mit-Tuple-Unpacking"]], "\u00dcbung 1, 5.": [[233, "\u00dcbung-1,-5."]], "7 Kontrollstrukturen": [[233, "7-Kontrollstrukturen"]], "7.1 Anweisungen und Folgen": [[233, "7.1-Anweisungen-und-Folgen"]], "7.2 Bedingungen und Kontrollstrukturen": [[233, "7.2-Bedingungen-und-Kontrollstrukturen"]], "7.3 Grundlagen zu Verzweigungen": [[233, "7.3-Grundlagen-zu-Verzweigungen"]], "7.4 Bedingte Anweisung": [[233, "7.4-Bedingte-Anweisung"]], "7.5 Verzweigung": [[233, "7.5-Verzweigung"]], "7.6 Geschachtelte Verzweigung": [[233, "7.6-Geschachtelte-Verzweigung"]], "7.7 Mehrfache Verzweigung (Fallauswahl)": [[233, "7.7-Mehrfache-Verzweigung-(Fallauswahl)"]], "7.8 Schleifen": [[233, "7.8-Schleifen"]], "7.9 Z\u00e4hlergesteuerte Schleifen (Iteration)": [[233, "7.9-Z\u00e4hlergesteuerte-Schleifen-(Iteration)"]], "7.10 Kopfgesteuerte bedingte Schleife": [[233, "7.10-Kopfgesteuerte-bedingte-Schleife"]], "7.11 Fu\u00dfgesteuerte bedingte Schleife": [[233, "7.11-Fu\u00dfgesteuerte-bedingte-Schleife"]], "(jf) break und continue": [[233, "(jf)-break-und-continue"]], "(jf) Sequential Datatypes": [[233, "(jf)-Sequential-Datatypes"]], "(jf) for Loops": [[233, "(jf)-for-Loops"]], "Iteration mit Dictionaries": [[233, "Iteration-mit-Dictionaries"]], "(jf) The range() Function": [[233, "(jf)-The-range()-Function"]], "7.12 Schnell\u00fcbersicht": [[233, "7.12-Schnell\u00fcbersicht"]], "7.13 Sprunganweisungen": [[233, "7.13-Sprunganweisungen"]], "7.14 Endlosschleifen": [[233, "7.14-Endlosschleifen"]], "7.15 \u00dcbungen": [[233, "7.15-\u00dcbungen"]], "8 Elementare Datenstrukturen": [[233, "8-Elementare-Datenstrukturen"]], "8.1 Warum werden Datenstrukturen ben\u00f6tigt?": [[233, "8.1-Warum-werden-Datenstrukturen-ben\u00f6tigt?"]], "(jf) Compound Datatypes": [[233, "(jf)-Compound-Datatypes"]], "(jf) References, (Im)mutability": [[233, "(jf)-References,-(Im)mutability"]], "(jf) Laufzeitverhalten bei der Suche (der in Operator)": [[233, "(jf)-Laufzeitverhalten-bei-der-Suche-(der-in-Operator)"]], "Liste": [[233, "Liste"]], "Set": [[233, "Set"], [254, "Set"], [255, "Set"], [259, "Set"], [259, "id1"], [262, "Set"], [265, "Set"], [265, "id1"], [272, "Set"], [285, "Set"], [288, "Set"], [300, "Set"], [303, "Set"], [303, "id5"], [310, "Set"], [320, "Set"], [324, "Set"], [342, "Set"], [346, "Set"], [358, "Set"], [368, "Set"]], "8.2 Arrays": [[233, "8.2-Arrays"]], "8.3 Eindimensionale Arrays": [[233, "8.3-Eindimensionale-Arrays"]], "8.4 Records": [[233, "8.4-Records"]], "8.5 Zeichenketten": [[233, "8.5-Zeichenketten"]], "8.6 Tupel und Listen": [[233, "8.6-Tupel-und-Listen"]], "sorted, reversed": [[233, "sorted,-reversed"]], "8.7 Dictionaries": [[233, "8.7-Dictionaries"]], "(jf) Records in Python": [[233, "(jf)-Records-in-Python"]], "8.8 Mengen": [[233, "8.8-Mengen"]], "8.9 Besondere Datenstrukturen anhand von Stapel (Stack) und Schlangen (Queue)": [[233, "8.9-Besondere-Datenstrukturen-anhand-von-Stapel-(Stack)-und-Schlangen-(Queue)"]], "8.10 \u00dcbungen": [[233, "8.10-\u00dcbungen"]], "\u00dcbung 1": [[233, "\u00dcbung-1"]], "Versuch 1: in und index()": [[233, "Versuch-1:-in-und-index()"]], "Versuch 2: Zur\u00fcck zu while \u2026": [[233, "Versuch-2:-Zur\u00fcck-zu-while-..."]], "Versuch 3: hybrid potschert mit for": [[233, "Versuch-3:-hybrid-potschert-mit-for"]], "Versuch 4: supergscheit mit for und enumerate()": [[233, "Versuch-4:-supergscheit-mit-for-und-enumerate()"]], "9 Methoden, Prozeduren und Funktionen": [[233, "9-Methoden,-Prozeduren-und-Funktionen"]], "Funktionspointer (so heissts in C): Funktionsobjekte (Python)": [[233, "Funktionspointer-(so-heissts-in-C):-Funktionsobjekte-(Python)"]], "(jf) Primzahlenbeispiel mit Funktion": [[233, "(jf)-Primzahlenbeispiel-mit-Funktion"]], "(jf) Local vs. Global Scope": [[233, "(jf)-Local-vs.-Global-Scope"]], "Laufzeitfehler: Variable existiert nicht": [[233, "Laufzeitfehler:-Variable-existiert-nicht"]], "Lokale Variable": [[233, "Lokale-Variable"]], "Globale Variable (lesen)": [[233, "Globale-Variable-(lesen)"]], "Globale Variable (schreiben/zuweisen)": [[233, "Globale-Variable-(schreiben/zuweisen)"]], "Fehlerfall von Peter": [[233, "Fehlerfall-von-Peter"]], "9.1 Unterprogramme": [[233, "9.1-Unterprogramme"]], "9.2 Parameter\u00fcbergabe": [[233, "9.2-Parameter\u00fcbergabe"]], "9.3 Parameter\u00fcbergabe als Wert": [[233, "9.3-Parameter\u00fcbergabe-als-Wert"]], "9.4 Parameter\u00fcbergabe \u00fcber Referenzen": [[233, "9.4-Parameter\u00fcbergabe-\u00fcber-Referenzen"]], "9.5 R\u00fcckgabewerte von Funktionen oder Methoden": [[233, "9.5-R\u00fcckgabewerte-von-Funktionen-oder-Methoden"]], "9.6 Innere Funktionen - Closures": [[233, "9.6-Innere-Funktionen---Closures"]], "9.7 Standardbibliotheken und Built-in-Funktionalit\u00e4ten": [[233, "9.7-Standardbibliotheken-und-Built-in-Funktionalit\u00e4ten"]], "9.8 \u00dcbungen": [[233, "9.8-\u00dcbungen"]], "Programmierung Grundlagen (13. und 14.1.2021)": [[234, "programmierung-grundlagen-13-und-14-1-2021"]], "Struktur": [[234, "struktur"]], "Herdt Kapitel 6: Grundlegende Sprachelemente": [[234, "herdt-kapitel-6-grundlegende-sprachelemente"], [1251, "herdt-kapitel-6-grundlegende-sprachelemente"]], "Herdt Kapitel 7: Kontrollstrukturen": [[234, "herdt-kapitel-7-kontrollstrukturen"], [1251, "herdt-kapitel-7-kontrollstrukturen"]], "Verzweigung": [[234, "verzweigung"], [1251, "verzweigung"]], "Schleifen": [[234, "schleifen"], [1251, "schleifen"]], "Herdt Kapitel 8: Elementare Datenstrukturen": [[234, "herdt-kapitel-8-elementare-datenstrukturen"], [1251, "herdt-kapitel-8-elementare-datenstrukturen"]], "Herdt Kapitel 9: Methoden, Prozeduren und Funktionen": [[234, "herdt-kapitel-9-methoden-prozeduren-und-funktionen"], [1251, "herdt-kapitel-9-methoden-prozeduren-und-funktionen"]], "Python Basics (22.2.2021 - 24.2.2021)": [[236, "python-basics-22-2-2021-24-2-2021"], [415, "python-basics-22-2-2021-24-2-2021"]], "Links (ToDo)": [[236, "links-todo"]], "Linux Kernel Driver Development Basics (14.12.2020)": [[237, "linux-kernel-driver-development-basics-14-12-2020"]], "Books": [[237, "books"], [287, "books"], [329, "books"], [1188, "books"]], "Python Advanced": [[238, "Python-Advanced"]], "Data Types Recap": [[238, "Data-Types-Recap"]], "Sequential Datatypes": [[238, "Sequential-Datatypes"], [270, "Sequential-Datatypes"], [282, "Sequential-Datatypes"], [352, "Sequential-Datatypes"], [1123, "sequential-datatypes"], [1123, "id1"]], "Slicing etc.": [[238, "Slicing-etc."]], "Mapping Types (Dictionary, und mehr)": [[238, "Mapping-Types-(Dictionary,-und-mehr)"]], "Sets": [[238, "Sets"], [238, "id1"], [246, "Sets"], [364, "Sets"], [1136, "sets"]], "for Schleife, ganz kurz": [[238, "for-Schleife,-ganz-kurz"]], "Tuple": [[238, "Tuple"], [262, "Tuple"], [265, "Tuple"], [272, "Tuple"], [285, "Tuple"], [288, "Tuple"], [300, "Tuple"], [358, "Tuple"], [364, "Tuple"]], "Funktionen mit mehreren Returnwerten (bzw. Tuple Unpacking)": [[238, "Funktionen-mit-mehreren-Returnwerten-(bzw.-Tuple-Unpacking)"]], "Iteration \u00fcber Containerdatentypen": [[238, "Iteration-\u00fcber-Containerdatentypen"]], "Listen": [[238, "Listen"], [272, "Listen"], [392, "Listen"]], "Was heisst \u201cUntypisiert\u201d?": [[238, "Was-heisst-%22Untypisiert%22?"]], "Wir l\u00f6schen den Integer": [[238, "Wir-l\u00f6schen-den-Integer"]], "Iterator Protocol, for Loops": [[238, "Iterator-Protocol,-for-Loops"]], "Iterable: Der Begriff": [[238, "Iterable:-Der-Begriff"]], "Zufall": [[238, "Zufall"]], "Regular Expressions": [[238, "Regular-Expressions"], [291, "Regular-Expressions"], [303, "Regular-Expressions"], [352, "Regular-Expressions"], [358, "Regular-Expressions"], [977, "regular-expressions"]], "enumerate()": [[238, "enumerate()"], [246, "enumerate()"], [249, "enumerate()"], [285, "enumerate()"], [303, "enumerate()"], [320, "enumerate()"], [342, "enumerate()"], [364, "enumerate()"]], "JSON": [[238, "JSON"], [255, "JSON"], [265, "JSON"], [291, "JSON"], [300, "JSON"], [335, "JSON"], [338, "JSON"]], "2021-03-15": [[239, "id1"]], "Exercises (auf Github)": [[239, "exercises-auf-github"]], "Download": [[239, null], [241, null]], "Hallo Jupyter Notebook": [[240, "Hallo-Jupyter-Notebook"]], "Syntax": [[240, "Syntax"], [310, "Syntax"], [352, "Syntax"], [364, "Syntax"], [392, "Syntax"], [392, "id1"]], "Raw strings": [[240, "Raw-strings"]], "Variablen": [[240, "Variablen"], [272, "Variablen"]], "Tuple Unpacking": [[240, "Tuple-Unpacking"], [282, "Tuple-Unpacking"], [300, "Tuple-Unpacking"], [310, "Tuple-Unpacking"], [346, "Tuple-Unpacking"], [352, "Tuple-Unpacking"], [364, "Tuple-Unpacking"], [391, "Tuple-Unpacking"], [392, "Tuple-Unpacking"], [392, "id2"]], "Speicher, Memory Management": [[240, "Speicher,-Memory-Management"]], "Mutable vs. Immutable": [[240, "Mutable-vs.-Immutable"], [291, "Mutable-vs.-Immutable"]], "Wie sch\u00fctze ich mich davor?": [[240, "Wie-sch\u00fctze-ich-mich-davor?"]], "Aber!!!!": [[240, "Aber!!!!"]], "Dictionary": [[240, "Dictionary"], [246, "Dictionary"], [254, "Dictionary"], [255, "Dictionary"], [259, "Dictionary"], [259, "id2"], [262, "Dictionary"], [265, "Dictionary"], [265, "id2"], [272, "Dictionary"], [285, "Dictionary"], [288, "Dictionary"], [300, "Dictionary"], [303, "Dictionary"], [303, "id4"], [310, "Dictionary"], [320, "Dictionary"], [324, "Dictionary"], [330, "Dictionary"], [342, "Dictionary"], [346, "Dictionary"], [358, "Dictionary"], [364, "Dictionary"], [368, "Dictionary"]], "Exercise: Liste von gemischten Datentypen": [[240, "Exercise:-Liste-von-gemischten-Datentypen"]], "Konstruktoren": [[240, "Konstruktoren"]], "Tag 2: Wiederholung, Fragen": [[240, "Tag-2:-Wiederholung,-Fragen"]], "for und range()": [[240, "for-und-range()"]], "Objektidentit\u00e4t": [[240, "Objektidentit\u00e4t"]], "Das with Statement": [[240, "Das-with-Statement"], [249, "Das-with-Statement"]], "Tuple Unpacking, Dictionary Iteration": [[240, "Tuple-Unpacking,-Dictionary-Iteration"]], "String Operationen": [[240, "String-Operationen"]], "enumerate(), und verlorene Indices": [[240, "enumerate(),-und-verlorene-Indices"]], "NumPy, matplotlib": [[240, "NumPy,-matplotlib"]], "Interpolation mittels scipy": [[240, "Interpolation-mittels-scipy"]], "Python Basic and Advanced (22.3.2021 - 25.3.2021)": [[241, "python-basic-and-advanced-22-3-2021-25-3-2021"]], "(Tutorial) Videos": [[241, "tutorial-videos"]], "Linux Basics, Shell Scripting (2021-03-29)": [[242, "linux-basics-shell-scripting-2021-03-29"]], "Course Details": [[242, null]], "Course Preparation": [[242, "course-preparation"], [295, "course-preparation"], [297, "course-preparation"], [305, "course-preparation"]], "SSH": [[242, "ssh"], [402, "ssh"]], "Linux and/or Shell on Windows Host": [[242, "linux-and-or-shell-on-windows-host"]], "Editor Support for Shell Scripting": [[242, "editor-support-for-shell-scripting"]], "Programmierung Grundlagen (12. und 13.4.2021)": [[244, "programmierung-grundlagen-12-und-13-4-2021"]], "Syntax etc.": [[246, "Syntax-etc."], [278, "Syntax-etc."], [324, "Syntax-etc."], [1115, "syntax-etc"]], "Comments vs. Documentation": [[246, "Comments-vs.-Documentation"], [1115, "comments-vs-documentation"]], "Variables": [[246, "Variables"], [259, "Variables"], [262, "Variables"], [278, "Variables"], [288, "Variables"], [320, "Variables"], [324, "Variables"], [346, "Variables"], [352, "Variables"], [358, "Variables"], [364, "Variables"], [368, "Variables"], [392, "Variables"], [526, "variables"], [1117, "variables"]], "Assignment Fun": [[246, "Assignment-Fun"], [285, "Assignment-Fun"], [1117, "assignment-fun"]], "Assignment Details": [[246, "Assignment-Details"], [278, "Assignment-Details"], [285, "Assignment-Details"], [364, "Assignment-Details"], [368, "Assignment-Details"], [392, "Assignment-Details"], [1117, "assignment-details"]], "Operators": [[246, "Operators"], [282, "Operators"]], "Integer Arithmetic": [[246, "Integer-Arithmetic"]], "String Methods": [[246, "String-Methods"], [364, "String-Methods"], [391, "String-Methods"]], "Datatype Conversions": [[246, "Datatype-Conversions"], [270, "Datatype-Conversions"], [272, "Datatype-Conversions"], [278, "Datatype-Conversions"], [282, "Datatype-Conversions"], [285, "Datatype-Conversions"], [303, "Datatype-Conversions"], [320, "Datatype-Conversions"], [324, "Datatype-Conversions"], [330, "Datatype-Conversions"], [342, "Datatype-Conversions"], [346, "Datatype-Conversions"], [352, "Datatype-Conversions"], [364, "Datatype-Conversions"], [392, "Datatype-Conversions"], [1118, "datatype-conversions"]], "Strings k\u00f6nnen alles!": [[246, "Strings-k\u00f6nnen-alles!"]], "Complex Datatypes": [[246, "Complex-Datatypes"], [392, "Complex-Datatypes"]], "List (mutable)": [[246, "List-(mutable)"], [259, "List-(mutable)"], [352, "List-(mutable)"]], "extend()? Iterable?": [[246, "extend()?-Iterable?"]], "Tuple (wie Liste, nur immutable)": [[246, "Tuple-(wie-Liste,-nur-immutable)"]], "in Operator": [[246, "in-Operator"], [285, "in-Operator"]], "Iteration \u00fcber Daten: mittels for": [[246, "Iteration-\u00fcber-Daten:-mittels-for"]], "enumerate(), sum(), map(), und so weiter": [[246, "enumerate(),-sum(),-map(),-und-so-weiter"]], "sum()": [[246, "sum()"]], "map()": [[246, "map()"], [249, "map()"]], "list() function": [[246, "list()-function"]], "Performance: in Operator, und list und set": [[246, "Performance:-in-Operator,-und-list-und-set"]], "Dynamische Evaluierung: eval()": [[246, "Dynamische-Evaluierung:-eval()"]], "Python Grundlagen (2021-05-03 - 2021-05-05)": [[247, "python-grundlagen-2021-05-03-2021-05-05"], [415, "python-grundlagen-2021-05-03-2021-05-05"]], "Weiterf\u00fchrende Information": [[247, "weiterfuhrende-information"]], "Visual Studio Code": [[247, "visual-studio-code"], [263, "visual-studio-code"], [1188, "visual-studio-code"]], "Python Beginner Tutorials": [[247, "python-beginner-tutorials"], [287, "python-beginner-tutorials"], [1188, "python-beginner-tutorials"]], "NumPy and Data Science Tutorials": [[247, "numpy-and-data-science-tutorials"], [287, "numpy-and-data-science-tutorials"], [290, "numpy-and-data-science-tutorials"], [323, "numpy-and-data-science-tutorials"], [1188, "numpy-and-data-science-tutorials"]], "PyPI (Installing Modules that don\u2019t come as Batteries)": [[247, "pypi-installing-modules-that-don-t-come-as-batteries"], [1188, "pypi-installing-modules-that-don-t-come-as-batteries"]], "Git, and Github": [[247, "git-and-github"], [1188, "git-and-github"]], "Conference Talks": [[247, "conference-talks"], [323, "conference-talks"], [1188, "conference-talks"]], "Python Grundlagen (Jupyter Notebook)": [[248, "python-grundlagen-jupyter-notebook"], [261, "python-grundlagen-jupyter-notebook"], [264, "python-grundlagen-jupyter-notebook"], [267, "python-grundlagen-jupyter-notebook"], [286, "python-grundlagen-jupyter-notebook"], [289, "python-grundlagen-jupyter-notebook"], [292, "python-grundlagen-jupyter-notebook"], [301, "python-grundlagen-jupyter-notebook"], [304, "python-grundlagen-jupyter-notebook"], [325, "python-grundlagen-jupyter-notebook"]], "import zipfile": [[249, "import-zipfile"]], "Read Contents \u2026": [[249, "Read-Contents-..."]], "Extract One Member": [[249, "Extract-One-Member"]], "All in One, Using with": [[249, "All-in-One,-Using-with"]], "Functionality: Methods": [[249, "Functionality:-Methods"]], "Class Attributes vs. Instance Attributes (not Variables)": [[249, "Class-Attributes-vs.-Instance-Attributes-(not-Variables)"]], "Instance Attributes": [[249, "Instance-Attributes"]], "Class Attributes": [[249, "Class-Attributes"]], "Public, Protected, Private": [[249, "Public,-Protected,-Private"]], "Properties": [[249, "Properties"], [278, "Properties"], [531, "properties"], [1107, "properties"]], "Functions, Positional and Keyword Arguments": [[249, "Functions,-Positional-and-Keyword-Arguments"]], "Positional Arguments": [[249, "Positional-Arguments"]], "Keyword Arguments": [[249, "Keyword-Arguments"], [270, "Keyword-Arguments"], [393, "Keyword-Arguments"], [1129, "keyword-arguments"]], "Mixing Positional and Keyword Arguments": [[249, "Mixing-Positional-and-Keyword-Arguments"]], "The range() Function": [[249, "The-range()-Function"], [255, "The-range()-Function"], [262, "The-range()-Function"]], "Functional Programming, Iteration, yield, map(), filter(), \u2026": [[249, "Functional-Programming,-Iteration,-yield,-map(),-filter(),-..."]], "Iterable": [[249, "Iterable"], [265, "Iterable"]], "list(), and iterable?": [[249, "list(),-and-iterable?"]], "Tuple Unpacking and the Rest": [[249, "Tuple-Unpacking-and-the-Rest"]], "Decorators, etc.": [[249, "Decorators,-etc."]], "NoneType and None": [[249, "NoneType-and-None"]], "File I/O": [[249, "File-I/O"], [278, "File-I/O"], [285, "File-I/O"], [288, "File-I/O"], [320, "File-I/O"], [324, "File-I/O"], [358, "File-I/O"], [364, "File-I/O"], [389, "File-I/O"], [1023, "file-i-o"], [1137, "file-i-o"]], "Iteration, yield, Recursion": [[249, "Iteration,-yield,-Recursion"]], "Recursion": [[249, "Recursion"]], "Iteratively Calculating Fibonacci Numbers -> yield": [[249, "Iteratively-Calculating-Fibonacci-Numbers-->-yield"]], "map(), filter(), zip(), enumerate() \u2026": [[249, "map(),-filter(),-zip(),-enumerate()-..."]], "map(), and several other ways to do the same": [[249, "map(),-and-several-other-ways-to-do-the-same"]], "zip()": [[249, "zip()"]], "filter(), and several other methods to do the same": [[249, "filter(),-and-several-other-methods-to-do-the-same"]], "OSError, errno": [[249, "OSError,-errno"]], "The platform Module, sys.path": [[249, "The-platform-Module,-sys.path"]], "os.path": [[249, "os.path"], [265, "os.path"], [272, "os.path"]], "Exceptions und so (assert())": [[249, "Exceptions-und-so-(assert())"]], "AssertionError": [[249, "AssertionError"]], "Random Questions": [[249, "Random-Questions"]], "Slicing": [[249, "Slicing"], [272, "Slicing"], [278, "Slicing"], [303, "Slicing"], [324, "Slicing"], [1209, "slicing"]], "OO": [[249, "OO"], [317, "oo"], [406, "oo"], [620, "oo"]], "String Formatting": [[249, "String-Formatting"], [255, "String-Formatting"], [1132, "string-formatting"]], "import datetime": [[249, "import-datetime"]], "Python Advanced (2021-05-25 - 2021-05-27)": [[250, "python-advanced-2021-05-25-2021-05-27"]], "Predefined streams": [[250, "predefined-streams"]], "PCAP Exam Syllabus": [[250, "pcap-exam-syllabus"], [263, "pcap-exam-syllabus"]], "2021-06-09": [[250, "id1"]], "Programmieren mit C (2021-06-14 - 2021-06-18)": [[251, "programmieren-mit-c-2021-06-14-2021-06-18"], [415, "programmieren-mit-c-2021-06-14-2021-06-18"]], "Preparation: Tools": [[251, "preparation-tools"]], "State machine": [[251, "state-machine"]], "Regular Course Topics": [[251, "regular-course-topics"]], "Development Tools (Git & CMake) Installation Massacre": [[251, "development-tools-git-cmake-installation-massacre"]], "Regular Course Material": [[251, "regular-course-material"], [251, "id1"]], "Group Project Kick-Off :-)": [[251, "group-project-kick-off"]], "Exercise: Encapsulate Index Access to userdb": [[251, "exercise-encapsulate-index-access-to-userdb"]], "Group Project (Use Case Driven Course Flow :-) )": [[251, "group-project-use-case-driven-course-flow"]], "Day 5": [[251, "day-5"], [252, "day-5"], [306, "day-5"]], "Pointer Recap": [[251, "pointer-recap"]], "On With Group Project": [[251, "on-with-group-project"]], "C++ Basics": [[251, "c-basics"]], "Pointers, Pointer Arithmetic, and the Standard Template Library (STL)": [[251, "pointers-pointer-arithmetic-and-the-standard-template-library-stl"]], "The C++ Programming Language (2021-07-12 - 2021-07-16)": [[252, "the-c-programming-language-2021-07-12-2021-07-16"]], "Setup for the new kids": [[252, "setup-for-the-new-kids"]], "Recapitulate some C": [[252, "recapitulate-some-c"]], "Group project review": [[252, "group-project-review"]], "Jump into C++": [[252, "jump-into-c"]], "Regular Topics": [[252, "regular-topics"], [252, "id2"], [252, "id4"]], "Toolchain: C/C++ Build (How Complicated Can Things Be?)": [[252, "toolchain-c-c-build-how-complicated-can-things-be"]], "Exercises: Using the C++ Toolbox": [[252, "exercises-using-the-c-toolbox"]], "Finish First \u201cUser Database\u201d Functionality": [[252, "finish-first-user-database-functionality"]], "Unit Testing": [[252, "unit-testing"], [309, "unit-testing"], [312, "unit-testing"], [405, "unit-testing"]], "GTest Installation": [[252, "gtest-installation"]], "Git Workflows": [[252, "git-workflows"]], "Day X": [[252, "day-x"]], "Smart Pointers, Recap": [[252, "smart-pointers-recap"]], "std::map": [[252, "std-map"], [698, "std-map"]], "OO, and Polymorphism": [[252, "oo-and-polymorphism"]], "Programmierung Grundlagen, anhand von Python (2. und 3.8.2021)": [[253, "programmierung-grundlagen-anhand-von-python-2-und-3-8-2021"], [415, "programmierung-grundlagen-anhand-von-python-2-und-3-8-2021"]], "Variablen und Datentypen": [[253, "variablen-und-datentypen"], [269, "variablen-und-datentypen"], [281, "variablen-und-datentypen"]], "Kontrollstrukturen": [[253, "kontrollstrukturen"], [269, "kontrollstrukturen"], [270, "Kontrollstrukturen"], [281, "kontrollstrukturen"]], "Datenstrukturen": [[254, "Datenstrukturen"]], "List": [[254, "List"], [255, "List"], [262, "List"], [265, "List"], [285, "List"], [288, "List"], [300, "List"], [303, "List"], [330, "List"], [342, "List"], [358, "List"], [368, "List"], [1216, "list"]], "Iteration": [[254, "Iteration"], [254, "id1"], [255, "Iteration"], [255, "id1"], [265, "Iteration"], [288, "Iteration"], [300, "Iteration"], [342, "Iteration"], [368, "Iteration"], [368, "id1"]], "User Datenbank: Showcase Full Stack Development": [[254, "User-Datenbank:-Showcase-Full-Stack-Development"]], "5: Response kommt von der DB": [[254, "5:-Response-kommt-von-der-DB"]], "6: Aufgabe: Formulieren eines JSON Strings, damit man diese Daten \u00fcber die HTTP Verbindung zum Client/Browser schicken kann.": [[254, "6:-Aufgabe:-Formulieren-eines-JSON-Strings,-damit-man-diese-Daten-\u00fcber-die-HTTP-Verbindung-zum-Client/Browser-schicken-kann."]], "7. Jetzt schickman weg: vom Server (PHP) zum Browser (JS)": [[254, "7.-Jetzt-schickman-weg:-vom-Server-(PHP)-zum-Browser-(JS)"]], "8. in JS JSON string empfangen": [[254, "8.-in-JS-JSON-string-empfangen"]], "9. Nun muessen wir den JSON-String in JS verwandlen": [[254, "9.-Nun-muessen-wir-den-JSON-String-in-JS-verwandlen"]], "Iterable?": [[255, "Iterable?"]], "List Comprehension, Generator Expression": [[255, "List-Comprehension,-Generator-Expression"]], "Literals": [[255, "Literals"], [564, "literals"]], "Quoting?": [[255, "Quoting?"], [259, "Quoting?"]], "Multiline Strings": [[255, "Multiline-Strings"], [259, "Multiline-Strings"], [352, "Multiline-Strings"], [1131, "multiline-strings"]], "Functionality": [[255, "Functionality"], [911, "functionality"]], "strip() and friends": [[255, "strip()-and-friends"]], "f-Strings (since Python 3.6)": [[255, "f-Strings-(since-Python-3.6)"]], "Parsing date formats": [[255, "Parsing-date-formats"]], "Read a Cleaned-Up SAP Export": [[256, "read-a-cleaned-up-sap-export"]], "Requirement": [[256, "requirement"], [563, "requirement"], [585, "requirement"], [586, "requirement"], [587, "requirement"], [591, "requirement"], [592, "requirement"], [593, "requirement"], [594, "requirement"], [595, "requirement"], [596, "requirement"], [1015, "requirement"], [1022, "requirement"], [1144, "requirement"], [1145, "requirement"], [1166, "requirement"], [1177, "requirement"], [1178, "requirement"], [1179, "requirement"], [1180, "requirement"], [1182, "requirement"], [1183, "requirement"], [1184, "requirement"], [1185, "requirement"]], "Solution": [[256, "solution"], [542, "solution"], [544, "solution"], [547, "solution"], [1224, "solution"]], "Python Grundlagen (2021-08-23 - 2021-08-25)": [[257, "python-grundlagen-2021-08-23-2021-08-25"]], "Initial Terminology": [[259, "Initial-Terminology"]], "Sequence": [[259, "Sequence"]], "Tuple (immutable)": [[259, "Tuple-(immutable)"], [352, "Tuple-(immutable)"]], "References, (Im)mutability": [[259, "References,-(Im)mutability"], [272, "References,-(Im)mutability"], [285, "References,-(Im)mutability"], [288, "References,-(Im)mutability"], [303, "References,-(Im)mutability"], [310, "References,-(Im)mutability"], [324, "References,-(Im)mutability"], [330, "References,-(Im)mutability"], [330, "id1"], [342, "References,-(Im)mutability"], [364, "References,-(Im)mutability"], [1127, "references-im-mutability"]], "Iteration, for, and range()": [[259, "Iteration,-for,-and-range()"]], "Iterator Protocol (not so important for beginners)": [[259, "Iterator-Protocol-(not-so-important-for-beginners)"]], "Iteration, and Compound Datatypes": [[259, "Iteration,-and-Compound-Datatypes"]], "List and Tuple": [[259, "List-and-Tuple"]], "matplotlib": [[259, "matplotlib"], [291, "matplotlib"]], "File I/O, and Strings": [[259, "File-I/O,-and-Strings"]], "Raw strings: Windows path names": [[259, "Raw-strings:-Windows-path-names"]], "Miscellaneous String Methods": [[259, "Miscellaneous-String-Methods"], [270, "Miscellaneous-String-Methods"], [272, "Miscellaneous-String-Methods"], [278, "Miscellaneous-String-Methods"], [288, "Miscellaneous-String-Methods"], [303, "Miscellaneous-String-Methods"], [324, "Miscellaneous-String-Methods"], [330, "Miscellaneous-String-Methods"], [352, "Miscellaneous-String-Methods"], [358, "Miscellaneous-String-Methods"], [368, "Miscellaneous-String-Methods"], [1133, "miscellaneous-string-methods"]], "Python Basics (2021-08-31 - 2021-09-01)": [[260, "python-basics-2021-08-31-2021-09-01"], [415, "python-basics-2021-08-31-2021-09-01"]], "Numerics, and AI": [[260, "numerics-and-ai"]], "Mountains near Graz": [[260, "mountains-near-graz"]], "2021-11-17": [[262, "2021-11-17"]], "Enter Tuples": [[262, "Enter-Tuples"]], "Datatype Conversions, Type Names": [[262, "Datatype-Conversions,-Type-Names"]], "NoneType": [[262, "NoneType"]], "Short Circuit Evaluation of Boolean Expression": [[262, "Short-Circuit-Evaluation-of-Boolean-Expression"]], "Exercise: Mixed List": [[262, "Exercise:-Mixed-List"]], "Python Documentation": [[262, "Python-Documentation"]], "for": [[262, "for"], [324, "for"], [368, "for"], [392, "for"]], "Iteration over Compound Datatypes": [[262, "Iteration-over-Compound-Datatypes"], [272, "Iteration-over-Compound-Datatypes"]], "File IO": [[262, "File-IO"], [278, "File-IO"], [306, "file-io"], [310, "File-IO"], [346, "File-IO"], [352, "File-IO"]], "Generators, Iterator Protocol, for": [[262, "Generators,-Iterator-Protocol,-for"]], "Common Sequence Operation": [[262, "Common-Sequence-Operation"]], "Comprehensions": [[262, "Comprehensions"], [265, "Comprehensions"], [278, "Comprehensions"], [310, "Comprehensions"], [342, "Comprehensions"]], "List, Iterable? WTF?": [[262, "List,-Iterable?-WTF?"]], "Dict and iterable": [[262, "Dict-and-iterable"]], "More on Lists": [[262, "More-on-Lists"], [270, "More-on-Lists"], [285, "More-on-Lists"]], "More on Dictionaries": [[262, "More-on-Dictionaries"], [270, "More-on-Dictionaries"]], "References, Mutability": [[262, "References,-Mutability"]], "CSV": [[262, "CSV"], [279, "csv"], [287, "csv"], [324, "CSV"]], "Python Basics (2021-11-17 - 2021-11-19)": [[263, "python-basics-2021-11-17-2021-11-19"], [415, "python-basics-2021-11-17-2021-11-19"]], "Python (Core Topics)": [[263, "python-core-topics"]], "Python Standard Library": [[263, "python-standard-library"]], "More About Strings": [[265, "More-About-Strings"], [282, "More-About-Strings"], [330, "More-About-Strings"], [352, "More-About-Strings"], [358, "More-About-Strings"], [364, "More-About-Strings"], [1131, "more-about-strings"]], "List, Tuple": [[265, "List,-Tuple"], [320, "List,-Tuple"], [324, "List,-Tuple"]], "Tuple Unpacking: What Else": [[265, "Tuple-Unpacking:-What-Else"]], "Iterator Protocol": [[265, "Iterator-Protocol"], [272, "Iterator-Protocol"], [303, "Iterator-Protocol"], [320, "Iterator-Protocol"], [324, "Iterator-Protocol"], [352, "Iterator-Protocol"]], "yield": [[265, "yield"], [288, "yield"]], "Everything is an Object of a Type": [[265, "Everything-is-an-Object-of-a-Type"]], "Generators, used more creatively": [[265, "Generators,-used-more-creatively"]], "Exception Handling and Exception Types": [[265, "Exception-Handling-and-Exception-Types"]], "2021-12-17": [[265, "2021-12-17"]], "Shift Operators": [[265, "Shift-Operators"]], "PCAP Sample Exam": [[265, "PCAP-Sample-Exam"]], "System Errors": [[265, "System-Errors"]], "Python Advanced (2021-12-01 - 2021-12-03)": [[266, "python-advanced-2021-12-01-2021-12-03"], [415, "python-advanced-2021-12-01-2021-12-03"]], "Basics Recap": [[266, "basics-recap"], [319, "basics-recap"]], "Group Project Preparation": [[266, "group-project-preparation"]], "Hmmm?": [[266, "hmmm"]], "C/C++ Programming (2021-12-06 - 2021-12-10, 2022-01-24 - 2022-02-04)": [[268, "c-c-programming-2021-12-06-2021-12-10-2022-01-24-2022-02-04"], [415, "c-c-programming-2021-12-06-2021-12-10-2022-01-24-2022-02-04"]], "2021-12-06": [[268, "id1"]], "2021-12-07": [[268, "id2"]], "2021-12-08": [[268, "id3"]], "2021-12-09": [[268, "id4"]], "2022-01-24": [[268, "id5"]], "Undefined Behavior": [[268, "undefined-behavior"]], "Modularization": [[268, "modularization"], [460, "modularization"]], "2022-01-25": [[268, "id6"]], "C++ and OO (Classes)": [[268, "c-and-oo-classes"]], "Modularization (again)": [[268, "modularization-again"]], "2022-01-26": [[268, "id7"]], "Modularization: Repeating Important Topics (Quickly)": [[268, "modularization-repeating-important-topics-quickly"]], "Classes (continued)": [[268, "classes-continued"]], "2022-01-27": [[268, "id8"]], "2022-01-28": [[268, "id9"]], "Standard Template Library: Container Templates": [[268, "standard-template-library-container-templates"]], "2022-01-31": [[268, "id10"]], "2022-02-01": [[268, "id11"]], "Algorithms": [[268, "algorithms"], [687, "algorithms"]], "Functors": [[268, "functors"]], "Unified Modeling Language (UML)": [[268, "unified-modeling-language-uml"]], "Exercise (Using All From Today)": [[268, "exercise-using-all-from-today"]], "2022-02-02": [[268, "id12"]], "Associative Container: std::map": [[268, "associative-container-std-map"]], "Exceptions, and Exception Handling": [[268, "exceptions-and-exception-handling"]], "2022-02-03": [[268, "id13"]], "2022-02-04": [[268, "id14"]], "C++11: A New Language": [[268, "c-11-a-new-language"]], "Dynamic Allocation, Smart Pointers": [[268, "dynamic-allocation-smart-pointers"]], "2022-02-07: Start of Exercise Week": [[268, "start-of-exercise-week"]], "Programmierung Grundlagen, anhand von Python (2022-01-17 - 2022-01-10)": [[269, "programmierung-grundlagen-anhand-von-python-2022-01-17-2022-01-10"], [415, "programmierung-grundlagen-anhand-von-python-2022-01-17-2022-01-10"]], "2022-01-17": [[270, "2022-01-17"]], "Variables and Datatypes": [[270, "Variables-and-Datatypes"]], "Comments vs Docstrings": [[270, "Comments-vs-Docstrings"]], "Integer (Ganze Zahl)": [[270, "Integer-(Ganze-Zahl)"]], "Integer Numbers: Arithmetic": [[270, "Integer-Numbers:-Arithmetic"], [282, "Integer-Numbers:-Arithmetic"], [1118, "integer-numbers-arithmetic"]], "Some Methods": [[270, "Some-Methods"]], "String Formatting: f-Strings": [[270, "String-Formatting:-f-Strings"]], "More about Strings": [[270, "More-about-Strings"]], "if": [[270, "if"], [310, "if"]], "2022-01-18": [[270, "2022-01-18"]], "Miscellanea": [[270, "Miscellanea"]], "Braces: Single Element Tuples?": [[270, "Braces:-Single-Element-Tuples?"]], "Ranges -> range() (hour_of_day)": [[270, "Ranges-->-range()-(hour_of_day)"]], "while Loops": [[270, "while-Loops"], [272, "while-Loops"], [285, "while-Loops"], [352, "while-Loops"], [368, "while-Loops"], [527, "while-loops"], [1122, "while-loops"], [1122, "id1"]], "break and continue": [[270, "break-and-continue"], [457, "break-and-continue"], [457, "id1"], [1122, "break-and-continue"]], "yield, Generator, Iteration Protocol": [[270, "yield,-Generator,-Iteration-Protocol"]], "Sequence Membership": [[270, "Sequence-Membership"], [1123, "sequence-membership"]], "list (mutable)": [[270, "list-(mutable)"]], "tuple (immutable)": [[270, "tuple-(immutable)"]], "dict (mutable)": [[270, "dict-(mutable)"]], "set (mutable)": [[270, "set-(mutable)"]], "Why Index Based Iteration is not Always the Best Way to Iterate": [[270, "Why-Index-Based-Iteration-is-not-Always-the-Best-Way-to-Iterate"]], "How to get Indexes if There are None? (enumerate(), and Tuple Unpacking)": [[270, "How-to-get-Indexes-if-There-are-None?-(enumerate(),-and-Tuple-Unpacking)"]], "Default Parameters": [[270, "Default-Parameters"], [272, "Default-Parameters"], [393, "Default-Parameters"], [1129, "default-parameters"]], "List Comprehensions": [[270, "List-Comprehensions"], [282, "List-Comprehensions"]], "Iteration over Dictionaries": [[270, "Iteration-over-Dictionaries"]], "Building Dictionaries": [[270, "Building-Dictionaries"], [1135, "building-dictionaries"]], "More on Sets": [[270, "More-on-Sets"]], "with: Context Managers": [[270, "with:-Context-Managers"]], "Strings Intro": [[272, "Strings-Intro"]], "Doc Strings": [[272, "Doc-Strings"]], "Object Identity": [[272, "Object-Identity"]], "Integers": [[272, "Integers"], [282, "Integers"], [285, "Integers"], [303, "Integers"], [310, "Integers"], [330, "Integers"], [346, "Integers"], [352, "Integers"], [358, "Integers"], [368, "Integers"]], "Variablen? Datenypen?": [[272, "Variablen?-Datenypen?"]], "Objects, Classes": [[272, "Objects,-Classes"]], "Python Standard Libarary Examples": [[272, "Python-Standard-Libarary-Examples"]], "collections": [[272, "collections"]], "ChainMap": [[272, "ChainMap"]], "deque": [[272, "deque"]], "Suchalgorithmen und Datenstrukturen (Ausflug)": [[272, "Suchalgorithmen-und-Datenstrukturen-(Ausflug)"]], "Slice Assignment": [[272, "Slice-Assignment"], [1124, "slice-assignment"]], "Lists are mutable": [[272, "Lists-are-mutable"]], "Shallow copy and deep copy": [[272, "Shallow-copy-and-deep-copy"]], "else": [[272, "else"], [278, "else"], [368, "else"]], "for Loops, range()": [[272, "for-Loops,-range()"]], "Default Parameters: Pitfalls": [[272, "Default-Parameters:-Pitfalls"]], "dict.fromkeys()": [[272, "dict.fromkeys()"], [285, "dict.fromkeys()"]], "Generators": [[272, "Generators"], [278, "Generators"], [318, "generators"], [319, "generators"], [323, "generators"], [340, "generators"], [344, "generators"]], "join, split": [[272, "join,-split"]], "strip, lstrip, rstrip": [[272, "strip,-lstrip,-rstrip"]], "Python Basics (2022-02-23 - 2022-02-25)": [[273, "python-basics-2022-02-23-2022-02-25"], [415, "python-basics-2022-02-23-2022-02-25"]], "Data Structures": [[273, "data-structures"]], "OS Things": [[273, "os-things"]], "Data Science": [[273, "data-science"], [341, "data-science"], [342, "Data-Science"], [364, "Data-Science"]], "Wiederholung": [[275, "Wiederholung"]], "Mutable/Immutable": [[275, "Mutable/Immutable"]], "Attribute": [[275, "Attribute"]], "Sequentielle vs. Konstante Suchzeit": [[275, "Sequentielle-vs.-Konstante-Suchzeit"]], "Exceptions": [[275, "Exceptions"], [291, "Exceptions"], [316, "exceptions"], [350, "exceptions"], [356, "exceptions"], [362, "exceptions"], [366, "exceptions"], [620, "exceptions"], [667, "exceptions"], [668, "exceptions"]], "for vs. while, range()": [[275, "for-vs.-while,-range()"]], "String Methods (some)": [[275, "String-Methods-(some)"]], "eval()": [[275, "eval()"], [285, "eval()"], [342, "eval()"]], "exec()": [[275, "exec()"], [291, "exec()"], [352, "exec()"]], "Dictionary Iteration": [[275, "Dictionary-Iteration"], [368, "Dictionary-Iteration"]], "Classes, Attributes, OO": [[275, "Classes,-Attributes,-OO"]], "Types and Instances": [[275, "Types-and-Instances"]], "Metaprogramming? Types? What is a Type?": [[275, "Metaprogramming?-Types?-What-is-a-Type?"]], "OO Everywhere": [[275, "OO-Everywhere"]], "Dictionary Operations": [[275, "Dictionary-Operations"]], "collections.defaultdict": [[275, "collections.defaultdict"], [300, "collections.defaultdict"]], "Python Advanced (2022-03-15 - 2022-03-17, 2022-03-31)": [[276, "python-advanced-2022-03-15-2022-03-17-2022-03-31"]], "2022-03-15": [[276, "id1"]], "2022-03-16": [[276, "id2"]], "Test Driven Development": [[276, "test-driven-development"], [318, "test-driven-development"], [340, "test-driven-development"], [341, "test-driven-development"]], "2022-03-17": [[276, "id3"]], "2022-03-31": [[276, "id4"]], "Hello World": [[278, "Hello-World"], [419, "hello-world"], [1113, "hello-world"]], "Blahblah": [[278, "Blahblah"], [677, "blahblah"], [1112, "blahblah"]], "Object Oriented?": [[278, "Object-Oriented?"]], "MQTT": [[278, "MQTT"], [344, "mqtt"], [1204, "mqtt"]], "Commandline Arguments": [[278, "Commandline-Arguments"], [471, "commandline-arguments"], [471, "id1"]], "Object Lifetime": [[278, "Object-Lifetime"]], "Boolean, Short Circuit Evaluation": [[278, "Boolean,-Short-Circuit-Evaluation"]], "More String Methods": [[278, "More-String-Methods"], [278, "id1"]], "Dictionary Preview": [[278, "Dictionary-Preview"]], "list: Mutable": [[278, "list:-Mutable"]], "list(): explicit constructor": [[278, "list():-explicit-constructor"]], "tuple: Immutable": [[278, "tuple:-Immutable"]], "dict: Mutable": [[278, "dict:-Mutable"]], "set: Mutable": [[278, "set:-Mutable"]], "List comprehension": [[278, "List-comprehension"]], "DIctionary Comprehension": [[278, "DIctionary-Comprehension"]], "Set Comprehension": [[278, "Set-Comprehension"], [342, "Set-Comprehension"], [352, "Set-Comprehension"], [1083, "set-comprehension"]], "max": [[278, "max"]], "for, enumerate()": [[278, "for,-enumerate()"]], "Iteratoren, Generatoren": [[278, "Iteratoren,-Generatoren"]], "Generatoren": [[278, "Generatoren"]], "split und join": [[278, "split-und-join"]], "strip()": [[278, "strip()"]], "dict vs. OrderedDict": [[278, "dict-vs.-OrderedDict"]], "Duck Typing": [[278, "Duck-Typing"], [1099, "duck-typing"]], "Interfaces": [[278, "Interfaces"], [716, "interfaces"]], "Implementation Inheritance": [[278, "Implementation-Inheritance"]], "Method Resolution Order (MRO), and super()": [[278, "Method-Resolution-Order-(MRO),-and-super()"]], "__bases__": [[278, "__bases__"]], "__mro__": [[278, "__mro__"]], "Object Layout (self)": [[278, "Object-Layout-(self)"]], "More from OO": [[278, "More-from-OO"]], "Calling Base Class Constructor (Many Ways)": [[278, "Calling-Base-Class-Constructor-(Many-Ways)"]], "Name Mangling (\u201cprivate\u201d Members)": [[278, "Name-Mangling-(%22private%22-Members)"]], "Yet Another Example From Udemy": [[278, "Yet-Another-Example-From-Udemy"]], "Exception Handling": [[278, "Exception-Handling"], [309, "exception-handling"], [312, "exception-handling"], [317, "exception-handling"], [408, "exception-handling"], [1086, "exception-handling"]], "Order of except Clauses": [[278, "Order-of-except-Clauses"]], "finally": [[278, "finally"]], "lambda": [[278, "lambda"]], "map(), filter()": [[278, "map(),-filter()"], [342, "map(),-filter()"]], "Generators, Iteration Protocol": [[278, "Generators,-Iteration-Protocol"]], "Class Variables (as Opposed to Instance Variables)": [[278, "Class-Variables-(as-Opposed-to-Instance-Variables)"]], "Python (2022-03-23, 2022-03-30, 2022-04-19 - 2022-03-21)": [[279, "python-2022-03-23-2022-03-30-2022-04-19-2022-03-21"], [415, "python-2022-03-23-2022-03-30-2022-04-19-2022-03-21"]], "2022-03-23: Basics": [[279, "basics"]], "2022-03-30: Basics": [[279, "id1"]], "2022-04-19, 2022-04-20, 2022-04-21: Advanced": [[279, "advanced"]], "Plan For The Wild Part": [[279, "plan-for-the-wild-part"]], "Programmierung Grundlagen, anhand von Python (2022-04-05 - 2022-04-08)": [[281, "programmierung-grundlagen-anhand-von-python-2022-04-05-2022-04-08"], [415, "programmierung-grundlagen-anhand-von-python-2022-04-05-2022-04-08"]], "Discussion: Flow Charts?": [[281, "discussion-flow-charts"]], "BlahBlah": [[282, "BlahBlah"], [285, "BlahBlah"], [288, "BlahBlah"], [352, "BlahBlah"]], "Interactive": [[282, "Interactive"]], "For Beginners": [[282, "For-Beginners"]], "Not For Beginners?": [[282, "Not-For-Beginners?"]], "Strings, 1st Explanation": [[282, "Strings,-1st-Explanation"]], "Operator Precedence": [[282, "Operator-Precedence"], [285, "Operator-Precedence"], [1118, "operator-precedence"]], "Floating Point Numbers": [[282, "Floating-Point-Numbers"], [1118, "floating-point-numbers"]], "Docstrings": [[282, "Docstrings"], [288, "Docstrings"], [392, "Docstrings"]], "Einschub: String-Vergleich vs. Integer-Vergleich": [[282, "Einschub:-String-Vergleich-vs.-Integer-Vergleich"]], "Random Numbers": [[282, "Random-Numbers"]], "Indexing and Slicing": [[282, "Indexing-and-Slicing"], [330, "Indexing-and-Slicing"], [1124, "indexing-and-slicing"]], "for Loops": [[282, "for-Loops"], [352, "for-Loops"], [422, "for-loops"], [1125, "for-loops"]], "range()": [[282, "range()"], [310, "range()"], [358, "range()"], [364, "range()"], [368, "range()"]], "Filterketten": [[282, "Filterketten"]], "Zen": [[282, "Zen"]], "Compound Datatypes By Example: List, Tuple": [[282, "Compound-Datatypes-By-Example:-List,-Tuple"], [1119, "compound-datatypes-by-example-list-tuple"]], "Compound Datatypes By Example: Dictionary": [[282, "Compound-Datatypes-By-Example:-Dictionary"], [1119, "compound-datatypes-by-example-dictionary"]], "Datensatz als Dictionary?": [[282, "Datensatz-als-Dictionary?"]], "JSON (Javascript Object Notation)": [[282, "JSON-(Javascript-Object-Notation)"]], "Compound Datatypes By Example: Set": [[282, "Compound-Datatypes-By-Example:-Set"], [1119, "compound-datatypes-by-example-set"]], "Das Letzte Beispiel am Letzten Tag": [[282, "Das-Letzte-Beispiel-am-Letzten-Tag"]], "Python Basics (2022-04-25 - 2022-04-27)": [[284, "python-basics-2022-04-25-2022-04-27"], [415, "python-basics-2022-04-25-2022-04-27"]], "Strings und Quotes": [[285, "Strings-und-Quotes"]], "Comments vs. Docstrings": [[285, "Comments-vs.-Docstrings"]], "Variables and Types": [[285, "Variables-and-Types"]], "Swap": [[285, "Swap"]], "Integers are Infinitely long": [[285, "Integers-are-Infinitely-long"]], "Floating Point Comparison": [[285, "Floating-Point-Comparison"]], "Mutability/Immutability": [[285, "Mutability/Immutability"]], "Exercise: Digit To English Word": [[285, "Exercise:-Digit-To-English-Word"]], "Exercise: Determine Maximum of Two Numbers": [[285, "Exercise:-Determine-Maximum-of-Two-Numbers"], [1152, "exercise-determine-maximum-of-two-numbers"], [1162, "exercise-determine-maximum-of-two-numbers"]], "Ranges": [[285, "Ranges"], [794, "ranges"]], "Exercise: Sort out Duplicates": [[285, "Exercise:-Sort-out-Duplicates"]], "Algorithmic Complexity": [[285, "Algorithmic-Complexity"]], "More On Dictionaries": [[285, "More-On-Dictionaries"]], "More On Sets": [[285, "More-On-Sets"]], "eval(), json": [[285, "eval(),-json"]], "Encoding": [[285, "Encoding"], [309, "encoding"], [330, "Encoding"], [346, "Encoding"], [346, "id1"], [397, "encoding"], [1201, "encoding"]], "Python (2022-05-02 - 2022-05-05)": [[287, "python-2022-05-02-2022-05-05"], [415, "python-2022-05-02-2022-05-05"]], "Control Flow and Iteration": [[287, "control-flow-and-iteration"]], "Encoding, Strings, and File I/O": [[287, "encoding-strings-and-file-i-o"]], "Excursion: CAN Communication, OO, Modules": [[287, "excursion-can-communication-oo-modules"]], "Modules": [[287, "modules"], [300, "Modules"], [341, "modules"], [397, "modules"], [789, "modules"], [1094, "modules"]], "CSV, Functions": [[287, "csv-functions"]], "PyPI, Virtual Environments": [[287, "pypi-virtual-environments"]], "Requirements Engineering, Test Driven Development": [[287, "requirements-engineering-test-driven-development"]], "More On DataTypes": [[287, "more-on-datatypes"]], "Random Topics": [[287, "random-topics"]], "Standard Library": [[287, "standard-library"]], "Hello Jupyter Notebook": [[288, "Hello-Jupyter-Notebook"]], "Syntax etc": [[288, "Syntax-etc"]], "Mutability": [[288, "Mutability"], [320, "Mutability"]], "Removing Elements": [[288, "Removing-Elements"], [698, "removing-elements"]], "Nested Lists?": [[288, "Nested-Lists?"]], "while loops, and else": [[288, "while-loops,-and-else"]], "for loops (and else)": [[288, "for-loops-(and-else)"]], "The range() Function, Iterator Protocol": [[288, "The-range()-Function,-Iterator-Protocol"]], "Encoding, and String": [[288, "Encoding,-and-String"]], "Regular Expression": [[288, "Regular-Expression"]], "f-Strings (since Python 3.6 !!)": [[288, "f-Strings-(since-Python-3.6-!!)"]], "Tuples Containing Only One Element": [[288, "Tuples-Containing-Only-One-Element"]], "Iterables, Lists, and the itertools Modules": [[288, "Iterables,-Lists,-and-the-itertools-Modules"]], "itertools.chain()": [[288, "itertools.chain()"]], "Destructor?": [[288, "Destructor?"]], "Tuple Unpacking on Dictionaries": [[288, "Tuple-Unpacking-on-Dictionaries"]], "Python Advanced (2022-05-16 - 2022-05-18)": [[290, "python-advanced-2022-05-16-2022-05-18"], [415, "python-advanced-2022-05-16-2022-05-18"]], "Project Management": [[290, "project-management"], [341, "project-management"], [404, "project-management"], [405, "project-management"], [409, "project-management"]], "Unit Testing, Test Driven Development": [[290, "unit-testing-test-driven-development"]], "Object Priented Programming": [[290, "object-priented-programming"]], "OO: next exercise (CSV as always \ud83d\ude44)": [[290, "oo-next-exercise-csv-as-always-rolling-eyes"]], "Exercise: Exception Handling": [[290, "exercise-exception-handling"]], "Standesregister nach SQLite3": [[290, "standesregister-nach-sqlite3"]], "XML/Element Tree": [[290, "xml-element-tree"]], "Projektabschlusstag": [[290, "projektabschlusstag"]], "Basic Python": [[290, "basic-python"], [1250, "basic-python"]], "Assert": [[291, "Assert"]], "The id() function": [[291, "The-id()-function"]], "class Person": [[291, "class-Person"]], "Functions That Do Not Return Anything": [[291, "Functions-That-Do-Not-Return-Anything"]], "Classes, Attributes, und so (Dictionaries Everywhere!)": [[291, "Classes,-Attributes,-und-so-(Dictionaries-Everywhere!)"]], "Globale, lokale, und Class Variablen": [[291, "Globale,-lokale,-und-Class-Variablen"]], "Defining my Own Exceptions": [[291, "Defining-my-Own-Exceptions"]], "Dictionary Lookup, keys() etc.": [[291, "Dictionary-Lookup,-keys()-etc."]], "Integers, Strings, und so": [[291, "Integers,-Strings,-und-so"]], "Vorbesprechung 2022-05-11": [[293, "vorbesprechung-2022-05-11"]], "Legende": [[293, "legende"]], "Neuerungen in C++ seit 2011": [[293, "neuerungen-in-c-seit-2011"]], "Neuerungen in C++ 14": [[293, "neuerungen-in-c-14"]], "Neuerungen in C++ 17": [[293, "neuerungen-in-c-17"]], "Neuerungen in C++ 20 (Ausblick)": [[293, "neuerungen-in-c-20-ausblick"]], "C++: A New Language Starting In 2011": [[294, "c-a-new-language-starting-in-2011"], [295, "c-a-new-language-starting-in-2011"]], "Metadata": [[294, "metadata"], [295, "metadata"], [297, "metadata"], [970, "metadata"]], "Introduction": [[294, "introduction"], [295, "introduction"], [297, "introduction"], [316, "introduction"], [317, "introduction"], [380, "introduction"], [418, "introduction"], [497, "introduction"], [548, "introduction"], [643, "introduction"], [741, "introduction"], [800, "introduction"], [887, "introduction"], [1086, "introduction"], [435, "introduction"]], "Pythonicity (Thank You: Readablility and Writability)": [[294, "pythonicity-thank-you-readablility-and-writability"], [295, "pythonicity-thank-you-readablility-and-writability"], [297, "pythonicity-thank-you-readablility-and-writability"]], "Range Based for Loops": [[294, "range-based-for-loops"], [295, "range-based-for-loops"], [297, "range-based-for-loops"], [354, "range-based-for-loops"], [373, "range-based-for-loops"]], "Tuple Unpacking (err, Structured Binding)": [[294, "tuple-unpacking-err-structured-binding"], [295, "tuple-unpacking-err-structured-binding"], [297, "tuple-unpacking-err-structured-binding"], [354, "tuple-unpacking-err-structured-binding"], [373, "tuple-unpacking-err-structured-binding"]], "Duck Typing (err, auto) Without A Duck": [[294, "duck-typing-err-auto-without-a-duck"], [295, "duck-typing-err-auto-without-a-duck"], [297, "duck-typing-err-auto-without-a-duck"], [354, "duck-typing-err-auto-without-a-duck"]], "Things That Simply Deserved Fixing Since Ages": [[294, "things-that-simply-deserved-fixing-since-ages"], [295, "things-that-simply-deserved-fixing-since-ages"], [297, "things-that-simply-deserved-fixing-since-ages"]], "Brace Initialization": [[294, "brace-initialization"], [295, "brace-initialization"], [297, "brace-initialization"], [354, "brace-initialization"], [355, "brace-initialization"]], "New OO keywords: override, final, default, delete": [[294, "new-oo-keywords-override-final-default-delete"], [295, "new-oo-keywords-override-final-default-delete"], [297, "new-oo-keywords-override-final-default-delete"], [354, "new-oo-keywords-override-final-default-delete"], [373, "new-oo-keywords-override-final-default-delete"]], "Strongly Typed enum": [[294, "strongly-typed-enum"], [295, "strongly-typed-enum"], [297, "strongly-typed-enum"], [354, "strongly-typed-enum"], [373, "strongly-typed-enum"], [744, "strongly-typed-enum"]], "Delegating Constructor": [[294, "delegating-constructor"], [295, "delegating-constructor"], [297, "delegating-constructor"], [354, "delegating-constructor"], [373, "delegating-constructor"], [749, "delegating-constructor"]], "nullptr": [[294, "nullptr"], [295, "nullptr"], [297, "nullptr"], [354, "nullptr"], [373, "nullptr"], [757, "nullptr"]], "Smart Pointers": [[294, "smart-pointers"], [295, "smart-pointers"], [297, "smart-pointers"], [317, "smart-pointers"], [355, "smart-pointers"], [620, "smart-pointers"]], "Moving, \u201cRValue References\u201d": [[294, "moving-rvalue-references"], [295, "moving-rvalue-references"]], "Functions (std::bind<>, std::function<>, Lambdas)": [[294, "functions-std-bind-std-function-lambdas"], [295, "functions-std-bind-std-function-lambdas"], [297, "functions-std-bind-std-function-lambdas"]], "Work Environment": [[295, "work-environment"], [297, "work-environment"], [315, "work-environment"], [316, "work-environment"], [317, "work-environment"], [404, "work-environment"]], "Skeleton Project": [[295, "skeleton-project"], [297, "skeleton-project"], [662, "skeleton-project"]], "Linux Basics (2022-10-03 - 2022-10-05)": [[296, "linux-basics-2022-10-03-2022-10-05"], [415, "linux-basics-2022-10-03-2022-10-05"]], "C++: A New Language Starting In 2011 (2022-10-11 - 2022-10-13)": [[297, "c-a-new-language-starting-in-2011-2022-10-11-2022-10-13"], [415, "c-a-new-language-starting-in-2011-2022-10-11-2022-10-13"]], "Moving, \u201cRValue References\u201d, And Perfect Forwarding": [[297, "moving-rvalue-references-and-perfect-forwarding"]], "News in C++20 (2023-06-13)": [[297, "news-in-c-20-2023-06-13"]], "Coroutines and C++23 Generators": [[297, "coroutines-and-c-23-generators"]], "Ranges And Views": [[297, "ranges-and-views"]], "Concepts": [[297, "concepts"], [354, "concepts"], [759, "concepts"]], "Design- and Architectural Patterns With C++ (2022-10-24 - 2022-10-26)": [[298, "design-and-architectural-patterns-with-c-2022-10-24-2022-10-26"], [415, "design-and-architectural-patterns-with-c-2022-10-24-2022-10-26"]], "Monday": [[298, "monday"]], "Tuesday": [[298, "tuesday"]], "Wednesday": [[298, "wednesday"]], "Python: Tour-De-Force (2022-11-07 - 2022-11-10, 2022-12-01)": [[299, "python-tour-de-force-2022-11-07-2022-11-10-2022-12-01"]], "Up Front: Project Management": [[299, "up-front-project-management"], [318, "up-front-project-management"], [340, "up-front-project-management"]], "Object Oriented Programming: Classes": [[299, "object-oriented-programming-classes"]], "Exercise Series: CSV": [[299, "exercise-series-csv"]], "Missing Pieces: Encoding, Unit Testing": [[299, "missing-pieces-encoding-unit-testing"]], "Exercise Series: CSV, JSON": [[299, "exercise-series-csv-json"]], "Iteration, Generators": [[299, "iteration-generators"]], "Going Dynamic: type(), exec()": [[299, "going-dynamic-type-exec"]], "More OO: Inheritance, Abstract Base Classes": [[299, "more-oo-inheritance-abstract-base-classes"]], "Group Project Kickoff": [[299, "group-project-kickoff"], [319, "group-project-kickoff"], [341, "group-project-kickoff"], [344, "group-project-kickoff"]], "Data Structures Recap": [[299, "data-structures-recap"]], "Miscellaneous Livehacking": [[299, "miscellaneous-livehacking"]], "Function Arguments, Closures, Decorators": [[299, "function-arguments-closures-decorators"], [334, "function-arguments-closures-decorators"]], "Exceptions, with": [[299, "exceptions-with"], [334, "exceptions-with"], [337, "exceptions-with"]], "Package Management": [[299, "package-management"]], "Videos": [[299, "videos"], [345, "videos"]], "Beginner": [[299, "beginner"], [323, "beginner"]], "Advanced": [[299, "advanced"], [323, "advanced"]], "Fun": [[299, "fun"]], "Python (2022-10-17)": [[300, "Python-(2022-10-17)"]], "Tuple Unpacking, Lists Iteration, And Such": [[300, "Tuple-Unpacking,-Lists-Iteration,-And-Such"]], "Variables, Types": [[300, "Variables,-Types"]], "Immutable? References?": [[300, "Immutable?-References?"]], "And range()?": [[300, "And-range()?"]], "More About Dictionaries": [[300, "More-About-Dictionaries"], [300, "id1"], [303, "More-About-Dictionaries"], [330, "More-About-Dictionaries"], [352, "More-About-Dictionaries"], [358, "More-About-Dictionaries"], [364, "More-About-Dictionaries"], [368, "More-About-Dictionaries"], [1135, "more-about-dictionaries"]], "More About Lists": [[300, "More-About-Lists"], [303, "More-About-Lists"], [330, "More-About-Lists"], [352, "More-About-Lists"], [358, "More-About-Lists"], [364, "More-About-Lists"], [368, "More-About-Lists"], [1134, "more-about-lists"]], "Python (2022-11-16 - 2022-11-18)": [[302, "python-2022-11-16-2022-11-18"], [303, "Python-(2022-11-16---2022-11-18)"], [415, "python-2022-11-16-2022-11-18"]], "Control Flow, Sequences, Iteration": [[302, "control-flow-sequences-iteration"], [309, "control-flow-sequences-iteration"], [312, "control-flow-sequences-iteration"], [322, "control-flow-sequences-iteration"], [323, "control-flow-sequences-iteration"], [328, "control-flow-sequences-iteration"], [329, "control-flow-sequences-iteration"], [329, "id2"], [350, "control-flow-sequences-iteration"], [351, "control-flow-sequences-iteration"], [356, "control-flow-sequences-iteration"], [357, "control-flow-sequences-iteration"], [362, "control-flow-sequences-iteration"], [363, "control-flow-sequences-iteration"], [366, "control-flow-sequences-iteration"], [367, "control-flow-sequences-iteration"]], "More Datatypes": [[302, "more-datatypes"], [309, "more-datatypes"], [312, "more-datatypes"], [322, "more-datatypes"], [323, "more-datatypes"], [323, "id2"], [328, "more-datatypes"], [329, "more-datatypes"], [350, "more-datatypes"], [351, "more-datatypes"], [356, "more-datatypes"], [362, "more-datatypes"], [363, "more-datatypes"], [366, "more-datatypes"], [420, "more-datatypes"]], "Exercise Series: CSV Files": [[302, "exercise-series-csv-files"], [322, "exercise-series-csv-files"], [323, "exercise-series-csv-files"], [328, "exercise-series-csv-files"], [329, "exercise-series-csv-files"], [350, "exercise-series-csv-files"], [351, "exercise-series-csv-files"], [357, "exercise-series-csv-files"], [362, "exercise-series-csv-files"], [363, "exercise-series-csv-files"], [366, "exercise-series-csv-files"]], "Advanced Language Features": [[302, "advanced-language-features"], [322, "advanced-language-features"], [323, "advanced-language-features"], [328, "advanced-language-features"], [483, "advanced-language-features"]], "Noob Exercises": [[302, "noob-exercises"]], "Object Oriented": [[303, "Object-Oriented"]], "Lists and Tuples": [[303, "Lists-and-Tuples"]], "for, and Iteration, and Generators": [[303, "for,-and-Iteration,-and-Generators"]], "Lists, Dictionaries, Generators, Constructors": [[303, "Lists,-Dictionaries,-Generators,-Constructors"]], "And Lists? Mutable!": [[303, "And-Lists?-Mutable!"]], "Tuples?": [[303, "Tuples?"]], "set": [[303, "set"]], "More About Sets": [[303, "More-About-Sets"], [330, "More-About-Sets"], [358, "More-About-Sets"], [364, "More-About-Sets"], [368, "More-About-Sets"], [1136, "more-about-sets"]], "Comprehensions (List, Dictionary, Set)": [[303, "Comprehensions-(List,-Dictionary,-Set)"], [352, "Comprehensions-(List,-Dictionary,-Set)"], [364, "Comprehensions-(List,-Dictionary,-Set)"], [1083, "comprehensions-list-dictionary-set"]], "Generator Expressions": [[303, "Generator-Expressions"]], "eval and exec": [[303, "eval-and-exec"]], "Linux Basics (2023-01-23 - 2023-01-26)": [[305, "linux-basics-2023-01-23-2023-01-26"], [415, "linux-basics-2023-01-23-2023-01-26"]], "Embedded Linux Systems Programming (2023-02-13 - 2023-02-17)": [[306, "embedded-linux-systems-programming-2023-02-13-2023-02-17"], [415, "embedded-linux-systems-programming-2023-02-13-2023-02-17"]], "WSL For Core Linux Topics": [[306, "wsl-for-core-linux-topics"]], "Cross Development For Hardware Topics": [[306, "cross-development-for-hardware-topics"]], "Day 1: Overview": [[306, "day-1-overview"]], "Introductory Live Hacking": [[306, "introductory-live-hacking"]], "The Shell": [[306, "the-shell"]], "Processes Quick Walk-Through": [[306, "processes-quick-walk-through"]], "Permissions": [[306, "permissions"]], "Development: CMake Quick Intro, And Git Quick Intro": [[306, "development-cmake-quick-intro-and-git-quick-intro"]], "UART": [[306, "uart"]], "SUSI": [[306, "susi"]], "Secure Shell (SSH)": [[306, "secure-shell-ssh"]], "Miscellaneous Hardware": [[306, "miscellaneous-hardware"]], "Group Exercise": [[306, "group-exercise"]], "Untold": [[306, "untold"], [316, "untold"], [319, "untold"]], "More From The Commandline": [[306, "more-from-the-commandline"]], "Multithreading (And C++)": [[306, "multithreading-and-c"]], "Whetting Your Appetite (Jupyter Notebook)": [[307, "Whetting-Your-Appetite-(Jupyter-Notebook)"]], "Filter in Pandas": [[307, "Filter-in-Pandas"]], "Copy vs Reference": [[307, "Copy-vs-Reference"]], "Immutable": [[307, "Immutable"]], "String": [[307, "String"]], "Regex": [[307, "Regex"]], "Whetting Your Appetite (Livehacking Demo)": [[308, "whetting-your-appetite-livehacking-demo"]], "Pipeline Driver": [[308, "pipeline-driver"]], "Virtual Environment Setup": [[308, "virtual-environment-setup"]], "Filter: Add Category: card-payment": [[308, "filter-add-category-card-payment"]], "Filter: Select Uncategorized": [[308, "filter-select-uncategorized"]], "More Categories": [[308, "more-categories"]], "Python For SAP Developers (2023-03-13 - 2023-03-15)": [[309, "python-for-sap-developers-2023-03-13-2023-03-15"], [415, "python-for-sap-developers-2023-03-13-2023-03-15"]], "Day 1 (Basics)": [[309, "day-1-basics"]], "Demo": [[309, "demo"]], "Day 2 (Basics, Continued)": [[309, "day-2-basics-continued"]], "Pandas": [[309, "pandas"], [310, "Pandas"], [312, "pandas"], [316, "pandas"], [341, "pandas"], [1208, "pandas"]], "Hacking About On A SAP Test Dataset": [[309, "hacking-about-on-a-sap-test-dataset"], [313, "hacking-about-on-a-sap-test-dataset"]], "Untold (From Original Agenda)": [[309, "untold-from-original-agenda"]], "OO Introduction": [[309, "oo-introduction"], [312, "oo-introduction"]], "Context Managers (Automatic Cleanup)": [[309, "context-managers-automatic-cleanup"], [312, "context-managers-automatic-cleanup"]], "Iteration, Generators, Comprehensions": [[309, "iteration-generators-comprehensions"], [312, "iteration-generators-comprehensions"]], "Decorators, and Related Topics": [[309, "decorators-and-related-topics"], [312, "decorators-and-related-topics"]], "Machine Learning: Pandas, NumPy, And Algorithms": [[309, "machine-learning-pandas-numpy-and-algorithms"]], "2023-03-13": [[310, "2023-03-13"]], "Comment vs Docstring": [[310, "Comment-vs-Docstring"]], "Mutable? Immutable?": [[310, "Mutable?-Immutable?"]], "Lists": [[310, "Lists"], [310, "id2"], [324, "Lists"], [364, "Lists"], [519, "lists"]], "Tuples": [[310, "Tuples"]], "DataType Conversiosn": [[310, "DataType-Conversiosn"]], "String, File IO Exercise": [[310, "String,-File-IO-Exercise"]], "Python For SAP Developers (Jupyter Notebook)": [[311, "python-for-sap-developers-jupyter-notebook"]], "Original Agenda: Python For SAP Developers (2023-03-13 - 2023-03-15)": [[312, "original-agenda-python-for-sap-developers-2023-03-13-2023-03-15"]], "Day 1: Basics": [[312, "day-1-basics"], [345, "day-1-basics"]], "Day 2: Outlook Into Advanced Python": [[312, "day-2-outlook-into-advanced-python"]], "Day 3: Domain Specifics": [[312, "day-3-domain-specifics"]], "NumPy": [[312, "numpy"], [341, "numpy"]], "Some Usecases On A Test Dataset From SAP": [[314, "Some-Usecases-On-A-Test-Dataset-From-SAP"]], "Dropping Columns That Contain Only NaN Values": [[314, "Dropping-Columns-That-Contain-Only-NaN-Values"]], "DataFrame.isna()": [[314, "DataFrame.isna()"]], "DataFrame.all() (and any())": [[314, "DataFrame.all()-(and-any())"]], "Column Selection": [[314, "Column-Selection"]], "Dropping Columns": [[314, "Dropping-Columns"]], "Fixing Date Values/Columns, And Operating With Date And Time": [[314, "Fixing-Date-Values/Columns,-And-Operating-With-Date-And-Time"]], "pandas.to_datetime()": [[314, "pandas.to_datetime()"]], "Converting The Entire DateDATE Column To A Workable Type (And Working With It)": [[314, "Converting-The-Entire-DateDATE-Column-To-A-Workable-Type-(And-Working-With-It)"]], "Conversion": [[314, "Conversion"]], "Usage: A Filter": [[314, "Usage:-A-Filter"]], "Modify Rows: Increase All Prices Of One Particular Store By 10%": [[314, "Modify-Rows:-Increase-All-Prices-Of-One-Particular-Store-By-10%"]], "Filter Readability: Combining Filters": [[314, "Filter-Readability:-Combining-Filters"]], "C++ For Embedded Developers (2023-03-20 - 2023-03-23)": [[315, "c-for-embedded-developers-2023-03-20-2023-03-23"]], "Preferred: Ubuntu under Windows (WSL)": [[315, "preferred-ubuntu-under-windows-wsl"], [317, "preferred-ubuntu-under-windows-wsl"]], "Unsupported Environments": [[315, "unsupported-environments"]], "Skeleton Project Setup": [[315, "skeleton-project-setup"], [317, "skeleton-project-setup"]], "Classes, Objects, Methods": [[315, "classes-objects-methods"]], "Heavy Weight OO \ud83d\udcaa": [[315, "heavy-weight-oo-muscle"], [317, "heavy-weight-oo-muscle"]], "Resource Management Pitfalls": [[315, "resource-management-pitfalls"]], "R-Value References/Moving, And Managed Pointers": [[315, "r-value-references-moving-and-managed-pointers"]], "A Little Concurrency": [[315, "a-little-concurrency"]], "Untold So Far": [[315, "untold-so-far"]], "C++ Standard Library": [[315, "c-standard-library"]], "Miscellaneous Topics": [[315, "miscellaneous-topics"]], "Clean Code Development With Python (2023-03-28 - 2023-03-29)": [[316, "clean-code-development-with-python-2023-03-28-2023-03-29"]], "Clean Code?": [[316, "clean-code"], [318, "clean-code"], [319, "clean-code"]], "Demo Hacking": [[316, "demo-hacking"]], "Python Development: Select Topics": [[316, "python-development-select-topics"]], "Built-In Types: Facts": [[316, "built-in-types-facts"]], "for Loops, And The Iterator Protocol": [[316, "for-loops-and-the-iterator-protocol"]], "Day 2: Clean Code? (Software Development: A Craft)": [[316, "day-2-clean-code-software-development-a-craft"]], "Closures, And Function Parameters": [[316, "closures-and-function-parameters"]], "Generators (Again), yield Fixtures, And yield Context Managers": [[316, "generators-again-yield-fixtures-and-yield-context-managers"]], "Decorators (The Ominous @)": [[316, "decorators-the-ominous"]], "Modules And Packages": [[316, "modules-and-packages"], [340, "modules-and-packages"]], "Design Patterns": [[316, "design-patterns"]], "C++ For Embedded Developers (2023-04-18 - 2023-04-20)": [[317, "c-for-embedded-developers-2023-04-18-2023-04-20"], [415, "c-for-embedded-developers-2023-04-18-2023-04-20"]], "Some Details": [[317, "some-details"]], "Standard Template Library": [[317, "standard-template-library"], [710, "standard-template-library"]], "Warm-Up": [[317, "warm-up"]], "Sensor Exercise, Resolved": [[317, "sensor-exercise-resolved"]], "OO, Cont\u2019d": [[317, "oo-cont-d"]], "Smart Pointers (Continued)": [[317, "smart-pointers-continued"]], "Exercises: Containers And Algorithms": [[317, "exercises-containers-and-algorithms"]], "Exercises: OO And Interfaces": [[317, "exercises-oo-and-interfaces"]], "Agenda: Python Advanced (2023-04-24 - 2023-04-26)": [[318, "agenda-python-advanced-2023-04-24-2023-04-26"]], "Day 1: Python Inside Out": [[318, "day-1-python-inside-out"], [319, "day-1-python-inside-out"]], "Exercise Prerequisites": [[318, "exercise-prerequisites"], [340, "exercise-prerequisites"]], "References And Other Pitfalls": [[318, "references-and-other-pitfalls"]], "Looping Constructs (With An Emphasis On The else Clause)": [[318, "looping-constructs-with-an-emphasis-on-the-else-clause"], [340, "looping-constructs-with-an-emphasis-on-the-else-clause"], [344, "looping-constructs-with-an-emphasis-on-the-else-clause"]], "Closures, Decorators And More": [[318, "closures-decorators-and-more"], [319, "closures-decorators-and-more"], [340, "closures-decorators-and-more"], [344, "closures-decorators-and-more"]], "Dynamic Features": [[318, "dynamic-features"], [319, "dynamic-features"], [320, "Dynamic-Features"], [340, "dynamic-features"], [344, "dynamic-features"]], "Error Handling And Recovery": [[318, "error-handling-and-recovery"], [319, "error-handling-and-recovery"], [340, "error-handling-and-recovery"], [341, "error-handling-and-recovery"], [344, "error-handling-and-recovery"]], "Miscellaneous Threading": [[318, "miscellaneous-threading"], [319, "miscellaneous-threading"]], "Day 2: Clean Code (In A Broader Sense), Group Project Kickoff": [[318, "day-2-clean-code-in-a-broader-sense-group-project-kickoff"]], "Group Project: Discussion": [[318, "group-project-discussion"]], "Design Patterns Overview": [[318, "design-patterns-overview"], [319, "design-patterns-overview"]], "Day 3: Group Project": [[318, "day-3-group-project"], [319, "day-3-group-project"]], "Python Advanced (2023-04-24 - 2023-04-26)": [[319, "python-advanced-2023-04-24-2023-04-26"], [415, "python-advanced-2023-04-24-2023-04-26"]], "Day 2: Object Oriented Programming, And Miscellaneous Discussion": [[319, "day-2-object-oriented-programming-and-miscellaneous-discussion"]], "Morning Opening": [[319, "morning-opening"]], "Object Oriented Programming (Continued)": [[319, "object-oriented-programming-continued"]], "Project Setup (IDE Usage?)": [[319, "project-setup-ide-usage"]], "Continue Hacking": [[319, "continue-hacking"]], "Test Driven Development, pytest": [[319, "test-driven-development-pytest"]], "Jupyter Notebook: Python Advanced (2023-04-24 - 2023-04-26)": [[320, "Jupyter-Notebook:-Python-Advanced-(2023-04-24---2023-04-26)"]], "is vs. ==": [[320, "is-vs.-=="]], "Compound DataTypes": [[320, "Compound-DataTypes"]], "class": [[320, "class"]], "Jupyter Notebook (Structure): Python Advanced (2023-04-24 - 2023-04-26)": [[321, "jupyter-notebook-structure-python-advanced-2023-04-24-2023-04-26"]], "Agenda: Python Basics (2023-05-15 - 2023-05-17)": [[322, "agenda-python-basics-2023-05-15-2023-05-17"]], "Python Basics (2023-05-15 - 2023-05-17)": [[323, "python-basics-2023-05-15-2023-05-17"], [324, "Python-Basics-(2023-05-15---2023-05-17)"], [415, "python-basics-2023-05-15-2023-05-17"]], "Morning Awakening": [[323, "morning-awakening"], [367, "morning-awakening"], [374, "morning-awakening"], [376, "morning-awakening"], [376, "id1"], [379, "morning-awakening"]], "A Bit Of venv, A Bit Of pip": [[323, "a-bit-of-venv-a-bit-of-pip"]], "Modules from Standard Library": [[323, "modules-from-standard-library"], [1188, "modules-from-standard-library"]], "Immutable vs. Mutable": [[324, "Immutable-vs.-Mutable"]], "The range Function": [[324, "The-range-Function"], [1126, "the-range-function"]], "Lambda, And Functional Programming Tools": [[324, "Lambda,-And-Functional-Programming-Tools"]], "Agenda: Linux Basics (2023-05-23 - 2023-05-25)": [[326, "agenda-linux-basics-2023-05-23-2023-05-25"]], "Linux Basics (2023-05-23 - 2023-05-25)": [[327, "linux-basics-2023-05-23-2023-05-25"], [415, "linux-basics-2023-05-23-2023-05-25"]], "Introduction: Concepts and Terminology": [[327, "introduction-concepts-and-terminology"], [371, "introduction-concepts-and-terminology"], [922, "introduction-concepts-and-terminology"]], "The Shell (Bash - \u201cBourne Again Shell\u201d)": [[327, "the-shell-bash-bourne-again-shell"], [327, "id1"], [371, "the-shell-bash-bourne-again-shell"], [968, "the-shell-bash-bourne-again-shell"]], "Tools: Inspecting Text Files": [[327, "tools-inspecting-text-files"], [371, "tools-inspecting-text-files"], [978, "tools-inspecting-text-files"]], "Morning Wakeup": [[327, "morning-wakeup"], [329, "morning-wakeup"], [355, "morning-wakeup"], [371, "morning-wakeup"], [371, "id2"]], "I/O Redirection And Pipes": [[327, "i-o-redirection-and-pipes"], [371, "i-o-redirection-and-pipes"], [929, "i-o-redirection-and-pipes"]], "Archiving and Compression": [[327, "archiving-and-compression"], [371, "archiving-and-compression"], [910, "archiving-and-compression"], [912, "archiving-and-compression"]], "Networking": [[327, "networking"]], "Processes And Scheduling": [[327, "processes-and-scheduling"]], "Shell Scripting (at least some of it)": [[327, "shell-scripting-at-least-some-of-it"]], "Agenda: Python Basics (2023-06-20 - 2023-06-22)": [[328, "agenda-python-basics-2023-06-20-2023-06-22"]], "Python Basics (2023-06-20 - 2023-06-22)": [[329, "python-basics-2023-06-20-2023-06-22"], [330, "Python-Basics-(2023-06-20---2023-06-22)"], [415, "python-basics-2023-06-20-2023-06-22"]], "Day2": [[329, "day2"]], "File I/O, And Encoding": [[329, "file-i-o-and-encoding"]], "Python Videos": [[329, "python-videos"]], "NumPy, Pandas, Matplotlib": [[329, "numpy-pandas-matplotlib"]], "DataTypes": [[330, "DataTypes"], [352, "DataTypes"]], "(Im)mutable?": [[330, "(Im)mutable?"]], "Exercise: Mixed List, Interactive Interpreter": [[330, "Exercise:-Mixed-List,-Interactive-Interpreter"]], "len(), range(), for": [[330, "len(),-range(),-for"]], "Generators, yield": [[330, "Generators,-yield"]], "Other -ables: Callable": [[330, "Other--ables:-Callable"]], "exec() (and eval())": [[330, "exec()-(and-eval())"]], "Formatting (f-Strings)": [[330, "Formatting-(f-Strings)"]], "Python Basics (Jupyter Notebook)": [[331, "python-basics-jupyter-notebook"], [353, "python-basics-jupyter-notebook"]], "Agenda: CMake (2023-07-03)": [[332, "agenda-cmake-2023-07-03"]], "Toolchain Introduction": [[332, "toolchain-introduction"], [348, "toolchain-introduction"], [1243, "toolchain-introduction"]], "Project Structure, Dependencies": [[332, "project-structure-dependencies"], [348, "project-structure-dependencies"], [1243, "project-structure-dependencies"]], "External Dependencies": [[332, "external-dependencies"], [348, "external-dependencies"], [376, "external-dependencies"], [516, "external-dependencies"], [1243, "external-dependencies"], [379, "external-dependencies"]], "Code Generators": [[332, "code-generators"], [348, "code-generators"], [375, "code-generators"], [376, "code-generators"], [1243, "code-generators"], [378, "code-generators"], [379, "code-generators"]], "Automatic Testing": [[332, "automatic-testing"], [348, "automatic-testing"], [1243, "automatic-testing"]], "Installation And Deployment": [[332, "installation-and-deployment"], [348, "installation-and-deployment"], [1243, "installation-and-deployment"]], "CMake: An Introduction (2023-07-18)": [[333, "cmake-an-introduction-2023-07-18"], [415, "cmake-an-introduction-2023-07-18"]], "Python Advanced (2023-09-25 - 2023-09-27)": [[334, "python-advanced-2023-09-25-2023-09-27"], [335, "Python-Advanced-(2023-09-25---2023-09-27)"], [415, "python-advanced-2023-09-25-2023-09-27"]], "Recap Of Python Basics Course (Before Summer)": [[334, "recap-of-python-basics-course-before-summer"], [337, "recap-of-python-basics-course-before-summer"]], "Project Management: Requirements, Sandboxing, Testing": [[334, "project-management-requirements-sandboxing-testing"], [337, "project-management-requirements-sandboxing-testing"]], "Into The Wild: Group Project Kickoff": [[334, "into-the-wild-group-project-kickoff"], [337, "into-the-wild-group-project-kickoff"]], "OO Design: Duck Typing, Inheritance, And Abstract Base Classes": [[334, "oo-design-duck-typing-inheritance-and-abstract-base-classes"], [337, "oo-design-duck-typing-inheritance-and-abstract-base-classes"]], "Package And Dependency Management": [[334, "package-and-dependency-management"]], "Equality vs. Identity": [[335, "Equality-vs.-Identity"]], "Functions Are Objects": [[335, "Functions-Are-Objects"]], "Python Advanced, Jupyter Notebook (2023-09-25 - 2023-09-27)": [[336, "python-advanced-jupyter-notebook-2023-09-25-2023-09-27"], [339, "python-advanced-jupyter-notebook-2023-09-25-2023-09-27"]], "Python Advanced (2023-10-09 - 2023-10-11)": [[337, "python-advanced-2023-10-09-2023-10-11"], [415, "python-advanced-2023-10-09-2023-10-11"]], "Classes: Basics": [[337, "classes-basics"]], "Classes: More": [[337, "classes-more"]], "Spoiler: Group Project Outcome": [[337, "spoiler-group-project-outcome"]], "More About Functions": [[337, "more-about-functions"]], "Python Advanced (2023-10-09 - 2023-10-09)": [[338, "Python-Advanced-(2023-10-09---2023-10-09)"]], "Type Annotations": [[338, "Type-Annotations"]], "Agenda: Python Advanced (2023-10-24 - 2023-10-26)": [[340, "agenda-python-advanced-2023-10-24-2023-10-26"]], "Day 1: Basic Python": [[340, "day-1-basic-python"], [344, "day-1-basic-python"]], "Datatypes, Datatypes": [[340, "datatypes-datatypes"], [344, "datatypes-datatypes"]], "Day 2: Advanced Python Features": [[340, "day-2-advanced-python-features"]], "Multiprocessing": [[340, "multiprocessing"]], "Day 3: Into The Wild": [[340, "day-3-into-the-wild"]], "Data Science Topics": [[340, "data-science-topics"], [344, "data-science-topics"]], "Group Project: An Idea": [[340, "group-project-an-idea"]], "Python Advanced (2023-10-24 - 2023-10-26)": [[341, "python-advanced-2023-10-24-2023-10-26"], [415, "python-advanced-2023-10-24-2023-10-26"]], "Python Basics Recap": [[341, "python-basics-recap"], [342, "Python-Basics-Recap"]], "The Very Basics": [[341, "the-very-basics"]], "range(), And Iteration In General": [[341, "range-and-iteration-in-general"]], "Leftovers From Yesterday": [[341, "leftovers-from-yesterday"]], "Object Oriented Programming, Continued": [[341, "object-oriented-programming-continued"], [341, "id1"]], "Group Project, OO-ified": [[341, "group-project-oo-ified"]], "Decorator Toolcase: *args, **kwargs": [[341, "decorator-toolcase-args-kwargs"]], "Morning Greeting": [[341, "morning-greeting"]], "Decorator Toolcase, Continued (Including Function Scoping and global)": [[341, "decorator-toolcase-continued-including-function-scoping-and-global"]], "Sensor Implementation That Receives UDP Datagrams": [[341, "sensor-implementation-that-receives-udp-datagrams"]], "CompositeSink": [[341, "compositesink"]], "MQTT Sink Implementation": [[341, "mqtt-sink-implementation"]], "Timestamps?": [[341, "timestamps"]], "Jupyter Notebook: Python Advanced": [[342, "Jupyter-Notebook:-Python-Advanced"]], "Jupyter Notebook Explanation": [[342, "Jupyter-Notebook-Explanation"]], "Integers and Floats": [[342, "Integers-and-Floats"]], "Strings: String Methods, Docstrings, \u2026": [[342, "Strings:-String-Methods,-Docstrings,-..."]], "Python Documentation Overview: https://docs.python.org/3/": [[342, "Python-Documentation-Overview:-https://docs.python.org/3/"]], "assert": [[342, "assert"]], "Iteration, Generators, Iterator Protocol": [[342, "Iteration,-Generators,-Iterator-Protocol"]], "AAARGHHH": [[342, "AAARGHHH"]], "Generator Expresssions": [[342, "Generator-Expresssions"]], "Dictionary Comprehension": [[342, "Dictionary-Comprehension"], [352, "Dictionary-Comprehension"], [1083, "dictionary-comprehension"]], "Functional Tools": [[342, "Functional-Tools"]], "filter()": [[342, "filter()"], [352, "filter()"]], "Jupyter Notebook (Structure): Python Advanced (2023-10-24 - 2023-10-26)": [[343, "jupyter-notebook-structure-python-advanced-2023-10-24-2023-10-26"]], "Agenda: Python Advanced (2023-11-22 - 2023-11-24)": [[344, "agenda-python-advanced-2023-11-22-2023-11-24"]], "Exercise Prerequisites: The Commandline": [[344, "exercise-prerequisites-the-commandline"]], "Day 2: Group Project Kickoff, Advanced Topics": [[344, "day-2-group-project-kickoff-advanced-topics"]], "Project Management, Test Driven Development": [[344, "project-management-test-driven-development"]], "Day 3: More Advanced Topics (All The Rest, And More)": [[344, "day-3-more-advanced-topics-all-the-rest-and-more"]], "CSV And Databases": [[344, "csv-and-databases"]], "Python Advanced (2023-11-22 - 2023-22-24)": [[345, "python-advanced-2023-11-22-2023-22-24"]], "Day 2: Group Project, And Object Oriented Programming": [[345, "day-2-group-project-and-object-oriented-programming"]], "Day 3: OO, Hacking, Python Specials": [[345, "day-3-oo-hacking-python-specials"]], "Jupyter Notebook: Python Advanced (2023-11-22 - 2023-11-24)": [[346, "Jupyter-Notebook:-Python-Advanced-(2023-11-22---2023-11-24)"]], "Assignment, And IDs": [[346, "Assignment,-And-IDs"]], "(Im)Mutability": [[346, "(Im)Mutability"]], "Operator Overloading (Basics)": [[346, "Operator-Overloading-(Basics)"]], "And Iterables? The Iterator Protocol!": [[346, "And-Iterables?-The-Iterator-Protocol!"]], "Methods": [[346, "Methods"], [654, "methods"], [802, "methods"], [803, "methods"], [804, "methods"], [1104, "methods"]], "numpy, pandas, matplotlib": [[346, "numpy,-pandas,-matplotlib"]], "Jupyter Notebook (Structure): Python Advanced (2023-11-22 - 2023-11-24)": [[347, "jupyter-notebook-structure-python-advanced-2023-11-22-2023-11-24"]], "Agenda: CMake (2023-11-27)": [[348, "agenda-cmake-2023-11-27"]], "CMake: An Introduction (2023-11-27)": [[349, "cmake-an-introduction-2023-11-27"], [415, "cmake-an-introduction-2023-11-27"]], "Agenda: Python Basics (2023-11-29 - 2023-12-01)": [[350, "agenda-python-basics-2023-11-29-2023-12-01"]], "Python Basics (2023-11-29 - 2023-12-01)": [[351, "python-basics-2023-11-29-2023-12-01"], [352, "Python-Basics-(2023-11-29---2023-12-01)"], [415, "python-basics-2023-11-29-2023-12-01"]], "Day 2, Morning Awakening": [[351, "day-2-morning-awakening"]], "Control Flow, Sequences, Iteration (Continued)": [[351, "control-flow-sequences-iteration-continued"]], "Day 3, Morning Awakening": [[351, "day-3-morning-awakening"]], "Dictionary (mutable)": [[352, "Dictionary-(mutable)"]], "Set (mutable)": [[352, "Set-(mutable)"]], "Boolean (immutable)": [[352, "Boolean-(immutable)"]], "split() and join()": [[352, "split()-and-join()"]], "Pythonicity (enumerate())": [[352, "Pythonicity-(enumerate())"]], "pandas, matplotlib": [[352, "pandas,-matplotlib"]], "Generator Expression": [[352, "Generator-Expression"]], "zip(), And Dictionaries": [[352, "zip(),-And-Dictionaries"]], "Agenda: C++: Advanced Topics": [[354, "agenda-c-advanced-topics"]], "Introduction: A New Language To Me": [[354, "introduction-a-new-language-to-me"], [373, "introduction-a-new-language-to-me"]], "constexpr, constinit, consteval": [[354, "constexpr-constinit-consteval"], [373, "constexpr-constinit-consteval"], [380, "constexpr-constinit-consteval"]], "Functions: std::function<>, Lambdas": [[354, "functions-std-function-lambdas"], [355, "functions-std-function-lambdas"], [373, "functions-std-function-lambdas"]], "Moving, RValue References: Do We Want To Copy Sensors?": [[354, "moving-rvalue-references-do-we-want-to-copy-sensors"]], "Moving: Usage": [[354, "moving-usage"]], "Moving: Implementation": [[354, "moving-implementation"]], "Type Erasure": [[354, "type-erasure"]], "Allocators": [[354, "allocators"], [705, "allocators"], [825, "allocators"]], "C++ Pythonic Toolcase": [[354, "c-pythonic-toolcase"], [373, "c-pythonic-toolcase"]], "Outlook In >=20": [[354, "outlook-in-20"]], "Attributes And The Like": [[354, "attributes-and-the-like"]], "<algorithm> Overview": [[354, "algorithm-overview"]], "Miscellaneous Miscellaneous": [[354, "miscellaneous-miscellaneous"]], "C++: Advanced Topics (2023-12-04 - 2023-12-06)": [[355, "c-advanced-topics-2023-12-04-2023-12-06"], [415, "c-advanced-topics-2023-12-04-2023-12-06"]], "Day 1: Introduction: C++, A New Language": [[355, "day-1-introduction-c-a-new-language"]], "Pythonicity": [[355, "pythonicity"]], "New OO Features": [[355, "new-oo-features"]], "Day 2: Simply Getting Stuff Done": [[355, "day-2-simply-getting-stuff-done"]], "Classic Polymorphism: Interfaces": [[355, "classic-polymorphism-interfaces"]], "Move Semantics": [[355, "move-semantics"]], "Day 3: All The Rest": [[355, "day-3-all-the-rest"]], "Interfaces, And OO Design: Kochtopf And The Cloud": [[355, "interfaces-and-oo-design-kochtopf-and-the-cloud"]], "Moving, Roundup": [[355, "moving-roundup"]], "Containers And Algorithms": [[355, "containers-and-algorithms"]], "And Embedded?": [[355, "and-embedded"]], "Still Untold": [[355, "still-untold"]], "Agenda: Python Basics (2023-12-18 - 2023-12-20)": [[356, "agenda-python-basics-2023-12-18-2023-12-20"]], "Python Basics (2023-12-18 - 2023-12-20)": [[357, "python-basics-2023-12-18-2023-12-20"], [358, "Python-Basics-(2023-12-18---2023-12-20)"], [359, "python-basics-2023-12-18-2023-12-20"], [415, "python-basics-2023-12-18-2023-12-20"]], "More About Datatypes": [[357, "more-about-datatypes"], [358, "More-About-Datatypes"], [367, "more-about-datatypes"]], "A Bit Of OO": [[357, "a-bit-of-oo"]], "Datatype Conversion": [[358, "Datatype-Conversion"]], "Weirdness (Comprehensions)": [[358, "Weirdness-(Comprehensions)"]], "Dictionary Comprehension (Exchange key and Value of dict)": [[358, "Dictionary-Comprehension-(Exchange-key-and-Value-of-dict)"]], "Functional Programming": [[358, "Functional-Programming"]], "set(), list(), dict()": [[358, "set(),-list(),-dict()"]], "while (and else)": [[358, "while-(and-else)"]], "range(), And Generators, The Iterator Protocol": [[358, "range(),-And-Generators,-The-Iterator-Protocol"]], "Return Value? Parameters?": [[358, "Return-Value?-Parameters?"]], "References, Immutability": [[358, "References,-Immutability"]], "Und Schuetzen?": [[358, "Und-Schuetzen?"]], "Comprehensions (Generator Expressions)": [[358, "Comprehensions-(Generator-Expressions)"]], "pathlib, os.path": [[358, "pathlib,-os.path"]], "Regexen": [[358, "Regexen"]], "distill.py": [[358, "distill.py"]], "C++ For Embedded Developers (Beginning of 2023)": [[360, "c-for-embedded-developers-beginning-of-2023"]], "Python/SAP": [[361, "python-sap"]], "Agenda: Python Advanced (2024-01-15 - 2024-01-17)": [[362, "agenda-python-advanced-2024-01-15-2024-01-17"]], "Numerics: Pandas, NumPy": [[362, "numerics-pandas-numpy"]], "Python Advanced (2024-01-15 - 2024-01-17)": [[363, "python-advanced-2024-01-15-2024-01-17"], [365, "python-advanced-2024-01-15-2024-01-17"], [415, "python-advanced-2024-01-15-2024-01-17"]], "Group Project": [[363, "group-project"], [403, "group-project"]], "Python Advanced (2023-01-15 - 2024-01-17)": [[364, "Python-Advanced-(2023-01-15---2024-01-17)"]], "DocStrings": [[364, "DocStrings"]], "Type System": [[364, "Type-System"], [436, "type-system"]], "Infinity?": [[364, "Infinity?"]], "dict, and enumerate()": [[364, "dict,-and-enumerate()"]], "Agenda: Python Basics (2024-01-29 - 2024-01-31)": [[366, "agenda-python-basics-2024-01-29-2024-01-31"]], "Pandas (Data Science Basics)": [[366, "pandas-data-science-basics"]], "Python Basics (2024-01-29 - 2024-01-31)": [[367, "python-basics-2024-01-29-2024-01-31"], [368, "Python-Basics-(2024-01-29---2024-01-31)"], [415, "python-basics-2024-01-29-2024-01-31"]], "More Datatypes, File IO": [[367, "more-datatypes-file-io"]], "os.listdir(), os.path.join()": [[367, "os-listdir-os-path-join"]], "Unit Testing (pytest), Project Management": [[367, "unit-testing-pytest-project-management"]], "(Optional) Exercise Series: CSV Files": [[367, "optional-exercise-series-csv-files"]], "pandas, numpy, scikit-learn": [[367, "pandas-numpy-scikit-learn"]], "Classes? Struct? Cell?": [[368, "Classes?-Struct?-Cell?"]], "Wuerfeln": [[368, "Wuerfeln"]], "Primeness, while": [[368, "Primeness,-while"]], "The range function": [[368, "The-range-function"]], "Sequences": [[368, "Sequences"]], "Misc Crap": [[368, "Misc-Crap"]], "Sequential Datatyoes": [[368, "Sequential-Datatyoes"]], "References, (Im)mutability, And Memory Management": [[368, "References,-(Im)mutability,-And-Memory-Management"]], "os, Und Einlesen Von Directories": [[368, "os,-Und-Einlesen-Von-Directories"]], "os.listdir(), os.path.join(), os.sep": [[368, "os.listdir(),-os.path.join(),-os.sep"]], "os.walk()": [[368, "os.walk()"]], "pathlib": [[368, "pathlib"]], "numpy, scikit-learn": [[368, "numpy,-scikit-learn"]], "Jupyter Notebook: Python Basics (2024-01-29 - 2024-01-31)": [[369, "jupyter-notebook-python-basics-2024-01-29-2024-01-31"]], "Agenda: Linux Basics (2024-03-11 - 2024-03-13)": [[370, "agenda-linux-basics-2024-03-11-2024-03-13"]], "Linux Basics (2024-03-11 - 2024-03-13)": [[371, "linux-basics-2024-03-11-2024-03-13"], [415, "linux-basics-2024-03-11-2024-03-13"]], "SSH/Putty Setup": [[371, "ssh-putty-setup"]], "Quiz \ud83e\udd77": [[371, "quiz-ninja"]], "The Shell (Bash - \u201cBourne Again Shell\u201d) (Continued)": [[371, "the-shell-bash-bourne-again-shell-continued"]], "Missing Pieces": [[371, "missing-pieces"]], "Refactoring, Unit Testing, And Test Driven Development In Python (2024-04-09 - 2024-04-11)": [[372, "refactoring-unit-testing-and-test-driven-development-in-python-2024-04-09-2024-04-11"], [415, "refactoring-unit-testing-and-test-driven-development-in-python-2024-04-09-2024-04-11"]], "Day 1: Refactoring Of Existing Code, And Basic Unit Testing": [[372, "day-1-refactoring-of-existing-code-and-basic-unit-testing"]], "Day 2: More Tests (Towards An Exact Definition Of Existing Code)": [[372, "day-2-more-tests-towards-an-exact-definition-of-existing-code"]], "Day 3: New Functionality - Test-First Development": [[372, "day-3-new-functionality-test-first-development"]], "Agenda: C++: A Thorough Overview (2024-06-03)": [[373, "agenda-c-a-thorough-overview-2024-06-03"]], "Brace Initialization (std::initializer_list<>)": [[373, "brace-initialization-std-initializer-list"]], "Smart Pointers: std::shared_ptr<>, std::unique_ptr<> (And A Little std::move)": [[373, "smart-pointers-std-shared-ptr-std-unique-ptr-and-a-little-std-move"], [374, "smart-pointers-std-shared-ptr-std-unique-ptr-and-a-little-std-move"]], "Moving, And RValue References (And Perfect Forwarding \ud83d\udc4f)": [[373, "moving-and-rvalue-references-and-perfect-forwarding-clap"]], "Moving": [[373, "moving"]], "Something Similar But Completely Different: Perfect Forwarding": [[373, "something-similar-but-completely-different-perfect-forwarding"]], "Unit Testing With googletest": [[373, "unit-testing-with-googletest"], [380, "unit-testing-with-googletest"], [1226, "unit-testing-with-googletest"]], "Code (And Project) Sanity": [[373, "code-and-project-sanity"]], "Clean Code, Design Patterns": [[373, "clean-code-design-patterns"]], "C++: A Thorough Overview (2024-06-03)": [[374, "c-a-thorough-overview-2024-06-03"], [415, "c-a-thorough-overview-2024-06-03"]], "Introduction: What C++ >= 11 Brings": [[374, "introduction-what-c-11-brings"]], "Unit Testing, Test Driven Development, And googletest": [[374, "unit-testing-test-driven-development-and-googletest"]], "A Little CMake": [[374, "a-little-cmake"]], "Exercise: class Sensor, And A SensorConfig Thereof": [[374, "exercise-class-sensor-and-a-sensorconfig-thereof"]], "Multithreading: Threads, Race Conditions, Locking Primitives": [[374, "multithreading-threads-race-conditions-locking-primitives"]], "Exercise: Make SensorConfig Thread Safe": [[374, "exercise-make-sensorconfig-thread-safe"]], "Multithreading: Communication": [[374, "multithreading-communication"]], "Group 1: Data Logger (Sketch)": [[374, "group-1-data-logger-sketch"]], "Group 2: Use std::latch": [[374, "group-2-use-std-latch"]], "Group 3: Program a MyLatch Class": [[374, "group-3-program-a-mylatch-class"]], "RValue References, Move Semantics": [[374, "rvalue-references-move-semantics"]], "Agenda: CMake: Advanced Topics (2024-06-11)": [[375, "agenda-cmake-advanced-topics-2024-06-11"], [378, "agenda-cmake-advanced-topics-2024-06-11"]], "Optional Code And External Dependencies": [[375, "optional-code-and-external-dependencies"], [378, "optional-code-and-external-dependencies"]], "Testing, Code Coverage, Code Analysis": [[375, "testing-code-coverage-code-analysis"], [378, "testing-code-coverage-code-analysis"]], "Multiplatform (And Cross) Development": [[375, "multiplatform-and-cross-development"], [378, "multiplatform-and-cross-development"]], "Architectural Considerations": [[375, "architectural-considerations"], [378, "architectural-considerations"]], "CMake: Advanced Topics (2024-06-11)": [[376, "cmake-advanced-topics-2024-06-11"], [415, "cmake-advanced-topics-2024-06-11"]], "Exercise: Build It!": [[376, "exercise-build-it"], [379, "exercise-build-it"]], "Bringing CMake Information Into C/C++": [[376, "bringing-cmake-information-into-c-c"]], "More About Dependencies": [[376, "more-about-dependencies"]], "Much More \u2026 (Various Kinds Of Dependencies)": [[376, "much-more-various-kinds-of-dependencies"]], "The CMake Language": [[376, "the-cmake-language"], [379, "the-cmake-language"]], "The CMake Language, Continued": [[376, "the-cmake-language-continued"]], "CMake: An Introduction (2024-06-18)": [[377, "cmake-an-introduction-2024-06-18"]], "Agenda: C++: A Thorough Overview": [[380, "agenda-c-a-thorough-overview"]], "Data Encapsulation": [[380, "data-encapsulation"], [650, "data-encapsulation"]], "Functions and Methods": [[380, "functions-and-methods"], [665, "functions-and-methods"]], "C++ Template Basics": [[380, "c-template-basics"], [671, "c-template-basics"]], "Inheritance And Object Oriented Design": [[380, "inheritance-and-object-oriented-design"], [715, "inheritance-and-object-oriented-design"]], "More From C++ 11": [[380, "more-from-c-11"]], "Optional But Useful Language Features": [[380, "optional-but-useful-language-features"]], "Optional: Pointer Classes": [[380, "optional-pointer-classes"]], "Move Semantics, Rvalue References (You Will Die If You Don\u2019t Know What That Is)": [[380, "move-semantics-rvalue-references-you-will-die-if-you-don-t-know-what-that-is"]], "Optional: Perfect Forwarding (Looks Like Moving But Isn\u2019t)": [[380, "optional-perfect-forwarding-looks-like-moving-but-isn-t"]], "Optional: Algorithms And Containers (Very Useful Though)": [[380, "optional-algorithms-and-containers-very-useful-though"]], "Useful Embedded Topics": [[380, "useful-embedded-topics"]], "Omitting virtual": [[380, "omitting-virtual"]], "Allocators (Using Container Templates In The Absence Of A Heap)": [[380, "allocators-using-container-templates-in-the-absence-of-a-heap"]], "Project Sanity/Management": [[380, "project-sanity-management"]], "CMake Intro: Project Structure": [[380, "cmake-intro-project-structure"]], "Performance": [[380, "performance"], [496, "performance"]], "Software Design": [[380, "software-design"]], "C++: A Thorough Overview": [[381, "c-a-thorough-overview"]], "Screenplay Checker": [[382, "screenplay-checker"]], "GPIO: Blinklicht": [[383, "gpio-blinklicht"]], "Commandline": [[383, "commandline"], [388, "commandline"], [948, "commandline"]], "sysfs GPIO": [[383, "sysfs-gpio"]], "Electronic Aspect": [[383, "electronic-aspect"]], "External Circuitry": [[383, "external-circuitry"]], "Raspberry Header Pinout": [[383, "raspberry-header-pinout"]], "GPIO: Blinklicht Interface": [[384, "gpio-blinklicht-interface"]], "GPIO: Object Oriented Blinklicht": [[385, "gpio-object-oriented-blinklicht"]], "GPIO: Blinklicht Unittests": [[386, "gpio-blinklicht-unittests"]], "ECE19: Exercises and Custom Topics": [[387, "ece19-exercises-and-custom-topics"]], "Reading a File": [[388, "reading-a-file"], [1010, "reading-a-file"]], "Output": [[388, "output"]], "2021-05-20 (G2)": [[389, "2021-05-20-(G2)"]], "Reading File in One Big Swoop": [[389, "Reading-File-in-One-Big-Swoop"]], "Reading File in Fixed Sized Chunks": [[389, "Reading-File-in-Fixed-Sized-Chunks"]], "Reading File Line by Line": [[389, "Reading-File-Line-by-Line"]], "Iterating a File": [[389, "Iterating-a-File"]], "String Methods (Needed to Implement the Exercise)": [[389, "String-Methods-(Needed-to-Implement-the-Exercise)"]], "str.strip(), str.rstrip(), str.lstrip()": [[389, "str.strip(),-str.rstrip(),-str.lstrip()"]], "str.split()": [[389, "str.split()"]], "2021-05-21": [[390, "2021-05-21"], [397, "id11"]], "Modules and Packages": [[390, "Modules-and-Packages"], [1094, "modules-and-packages"]], "Strings vs. Bytes": [[391, "Strings-vs.-Bytes"]], "Batteries": [[392, "Batteries"]], "Key Value Map": [[392, "Key-Value-Map"]], "Comments vs Documentation": [[392, "Comments-vs-Documentation"]], "Multiline String (btw.)": [[392, "Multiline-String-(btw.)"]], "Integer Numbers (Literals)": [[392, "Integer-Numbers-(Literals)"]], "Arithmetic Operators": [[392, "Arithmetic-Operators"], [441, "arithmetic-operators"], [1106, "arithmetic-operators"]], "Wertebereich von Integers": [[392, "Wertebereich-von-Integers"]], "An Example": [[393, "An-Example"], [1129, "an-example"]], "Sidenote: Pure Beauty": [[393, "Sidenote:-Pure-Beauty"], [1129, "sidenote-pure-beauty"]], "Parameters and Types": [[393, "Parameters-and-Types"], [1129, "parameters-and-types"]], "Pitfalls": [[393, "Pitfalls"]], "Cloud Computer, SSH Login": [[394, "cloud-computer-ssh-login"]], "Machine, Logins": [[394, "machine-logins"]], "Login via Secure Shell (SSH)": [[394, "login-via-secure-shell-ssh"]], "Formalit\u00e4ten": [[395, "formalitaten"]], "Embedded Computing 1 (ECE 19)": [[396, "embedded-computing-1-ece-19"]], "Daily Log": [[397, "daily-log"]], "2021-03-04": [[397, "id1"]], "2021-03-05": [[397, "id2"]], "Cheat Sheets": [[397, null]], "2021-03-18": [[397, "id3"]], "2021-03-26": [[397, "id4"]], "2021-04-15": [[397, "id5"]], "2021-04-21": [[397, "id6"]], "Git Intro": [[397, "git-intro"]], "Download and Installation": [[397, null], [402, null]], "2021-04-29": [[397, "id7"]], "2021-05-10": [[397, "id8"]], "Org Stuff": [[397, "org-stuff"]], "Python: Functions": [[397, "python-functions"]], "2021-05-12": [[397, "id9"]], "Python: Walk-Through Passing and Failing an Exam": [[397, "python-walk-through-passing-and-failing-an-exam"]], "2021-05-{19,20}": [[397, "id10"]], "Reiterating on Exercise": [[397, "reiterating-on-exercise"]], "import argparse": [[397, "import-argparse"]], "Exercise digit (Once More)": [[397, "exercise-digit-once-more"]], "2021-06-01": [[397, "id12"]], "sysfs GPIO: Blinking an LED": [[397, "sysfs-gpio-blinking-an-led"]], "2021-06-07": [[397, "id13"]], "Embedded Computing 1 (Deutsch)": [[398, "embedded-computing-1-deutsch"]], "Lehrinhalte": [[398, "lehrinhalte"]], "Lernergebnisse der LV": [[398, "lernergebnisse-der-lv"]], "Empfohlene oder verpflichtende Fachliteratur und andere Lernressourcen bzw. \u2013instrumente": [[398, "empfohlene-oder-verpflichtende-fachliteratur-und-andere-lernressourcen-bzw-instrumente"]], "Art der Vermittlung": [[398, "art-der-vermittlung"]], "Voraussetzungen und Begleitbedingungen": [[398, "voraussetzungen-und-begleitbedingungen"]], "Pr\u00fcfungsmethode und Beurteilungskriterien": [[398, "prufungsmethode-und-beurteilungskriterien"]], "Embedded Computing 1 (English)": [[399, "embedded-computing-1-english"]], "Course Content": [[399, "course-content"]], "Learning Outcome": [[399, "learning-outcome"]], "Recommended or Required Reading and Other Learning Resources / Tools": [[399, "recommended-or-required-reading-and-other-learning-resources-tools"]], "Mode of delivery": [[399, "mode-of-delivery"]], "Prerequisites and Co-Requisites": [[399, "prerequisites-and-co-requisites"]], "Assessment Methods and Criteria": [[399, "assessment-methods-and-criteria"]], "Plan for Summer 2021": [[400, "plan-for-summer-2021"]], "Linux Introduction": [[400, "linux-introduction"]], "Slides": [[400, null], [400, null], [400, null]], "C/C++ Development": [[400, "c-c-development"]], "Python Development": [[400, "python-development"]], "2021-10-07": [[401, "id1"]], "Whose Fault It Is": [[401, "whose-fault-it-is"]], "2021-10-12 (Bringing Newcomers Up-to-Date)": [[402, "bringing-newcomers-up-to-date"]], "Linux/UNIX": [[402, "linux-unix"]], "Git": [[402, "git"]], "2021-10-28": [[403, "id1"]], "Discussion of Tasks": [[403, "discussion-of-tasks"]], "TODOs": [[403, "todos"]], "2021-11-15": [[404, "id1"]], "Systems Programming: Files, Directories, Links \u2026": [[404, "systems-programming-files-directories-links"]], "2021-11-29": [[405, "id1"]], "jjjj": [[405, "jjjj"]], "2021-12-1{4,5}": [[406, "id1"]], "Future Topics": [[406, "future-topics"]], "Threading": [[406, "threading"]], "C++ Sideways": [[406, "c-sideways"]], "2022-01-10": [[407, "id1"]], "Scheduling": [[407, "scheduling"], [1044, "scheduling"], [1045, "scheduling"]], "2022-01-12": [[408, "id1"]], "Scheduling and Realtime": [[408, "scheduling-and-realtime"], [412, "scheduling-and-realtime"]], "2022-02-15": [[409, "id1"]], "Agenda/Log": [[410, "agenda-log"], [411, "agenda-log"]], "Embedded Computing 2 (ECE 19)": [[411, "embedded-computing-2-ece-19"]], "Project Repository": [[411, "project-repository"]], "Test Material": [[411, "test-material"]], "Exam Material Overview": [[412, "exam-material-overview"]], "Questions": [[412, "questions"], [412, "id1"], [724, "questions"], [935, "questions"], [936, "questions"], [961, "questions"]], "Slide Material": [[412, "slide-material"], [412, "id2"]], "Embedded Computing 1+2, ECE 19": [[413, "embedded-computing-1-2-ece-19"]], "Training Material: Overview and Download": [[416, "training-material-overview-and-download"]], "On Windows": [[417, "on-windows"]], "On Linux": [[417, "on-linux"]], "The Book (1)": [[418, "the-book-1"]], "The Book (2)": [[418, "the-book-2"]], "The Beginning": [[418, "the-beginning"]], "Cool Guys and Their Hobby": [[418, "cool-guys-and-their-hobby"]], "History of UNIX": [[418, "history-of-unix"]], "My First Program (1)": [[419, "my-first-program-1"]], "My First Program (2)": [[419, "my-first-program-2"]], "Character Arrays - Strings": [[419, "character-arrays-strings"]], "Variables and Arithmetic": [[420, "variables-and-arithmetic"]], "My Second Program (1)": [[420, "my-second-program-1"]], "My Second Program (2)": [[420, "my-second-program-2"]], "My Second Program (3)": [[420, "my-second-program-3"]], "My Second Program (4)": [[420, "my-second-program-4"]], "Exercise: A Better Fahrenheit Table": [[421, "exercise-a-better-fahrenheit-table"]], "for: Loop Simplification (1)": [[422, "for-loop-simplification-1"]], "for: Loop Simplification (2)": [[422, "for-loop-simplification-2"]], "Second Program, revisited": [[422, "second-program-revisited"]], "Exercise: Fahrenheit Table Using for": [[423, "exercise-fahrenheit-table-using-for"]], "Symbolic Constants": [[424, "symbolic-constants"]], "C Preprocessor: Symbolic Constants": [[424, "c-preprocessor-symbolic-constants"]], "Exercise: Fahrenheit Table Using Macros": [[425, "exercise-fahrenheit-table-using-macros"]], "Character I/O": [[426, "character-i-o"]], "The Outside World": [[426, "the-outside-world"]], "cat for the Poor (1)": [[426, "cat-for-the-poor-1"]], "cat for the Poor (2)": [[426, "cat-for-the-poor-2"]], "More Examples \u2026": [[426, "more-examples"]], "More Examples - if": [[426, "more-examples-if"]], "if, Formally": [[426, "if-formally"]], "Operators, Formally": [[426, "operators-formally"]], "Exercise: wc For The Poor": [[427, "exercise-wc-for-the-poor"]], "Arrays": [[428, "arrays"]], "Array Definition, Explicit Initialization": [[428, "array-definition-explicit-initialization"]], "Array Access": [[428, "array-access"]], "Discussion: Initialization": [[428, "discussion-initialization"]], "Discussion: if, else": [[428, "discussion-if-else"]], "Array Initializer": [[428, "array-initializer"]], "Discussion: Initializer": [[428, "discussion-initializer"]], "Initialization using memset()": [[428, "initialization-using-memset"]], "Discussion: memset()": [[428, "discussion-memset"]], "Exercise: Character Histogram": [[429, "exercise-character-histogram"]], "A Nonsensical Example": [[430, "a-nonsensical-example"]], "Function Signature": [[430, "function-signature"]], "Discussion": [[430, "discussion"]], "Definition vs. Declaration (1)": [[430, "definition-vs-declaration-1"]], "Definition vs. Declaration (2)": [[430, "definition-vs-declaration-2"]], "By Value / By Reference": [[430, "by-value-by-reference"]], "Exercise: Forward Declaration": [[431, "exercise-forward-declaration"]], "Character Arrays": [[432, "character-arrays"]], "Strings: Mistake by Design?": [[432, "strings-mistake-by-design"]], "Strings: Definition": [[432, "strings-definition"]], "Strings: Library Functions": [[432, "strings-library-functions"]], "Strings as Parameters": [[432, "strings-as-parameters"]], "Strings: Dangers": [[432, "strings-dangers"]], "Exercise: Read Line Into String from stdin": [[433, "exercise-read-line-into-string-from-stdin"]], "Lifetime of Variables": [[434, "lifetime-of-variables"]], "Lifetime": [[434, "lifetime"]], "Global Variables": [[434, "global-variables"], [628, "global-variables"]], "Global Variables: How?": [[434, "global-variables-how"]], "Variable Names": [[437, "variable-names"]], "Variable- and Function Names": [[437, "variable-and-function-names"]], "Data Types, Sizes": [[438, "data-types-sizes"]], "Standard Data Types And Their Sizes": [[438, "standard-data-types-and-their-sizes"]], "Integer Variants (\u201cQualifiers\u201d)": [[438, "integer-variants-qualifiers"]], "Widths": [[438, "widths"]], "Constants": [[439, "constants"]], "Constants and Types": [[439, "constants-and-types"]], "Character Constants: Escape Sequences": [[439, "character-constants-escape-sequences"]], "String Constants": [[439, "string-constants"]], "Character vs. String Constants": [[439, "character-vs-string-constants"]], "Symbolic Constants (1)": [[439, "symbolic-constants-1"]], "Symbolic Constants (2)": [[439, "symbolic-constants-2"]], "Variable Definitions": [[440, "variable-definitions"]], "Definitions und Initialization": [[440, "definitions-und-initialization"]], "Initialization of Automatic Variables": [[440, "initialization-of-automatic-variables"]], "Initialization of Global Variables": [[440, "initialization-of-global-variables"]], "Arithmetic Operators (1)": [[441, "arithmetic-operators-1"]], "Arithmetic Operators (2)": [[441, "arithmetic-operators-2"]], "Relational and Logical Operators": [[442, "relational-and-logical-operators"]], "Relational Operators (1)": [[442, "relational-operators-1"]], "Relational Operators (2)": [[442, "relational-operators-2"]], "Logical (Boolean) Operators": [[442, "logical-boolean-operators"]], "Boolean Operators: Short-Circuit": [[442, "boolean-operators-short-circuit"]], "Type Conversions": [[443, "type-conversions"]], "Implicit Type Conversions": [[443, "implicit-type-conversions"]], "Sign Bugs": [[443, "sign-bugs"]], "Truncation": [[443, "truncation"]], "Sign Propagation": [[443, "sign-propagation"]], "Conversion Using Operators": [[443, "conversion-using-operators"]], "Conversion and unsigned (1)": [[443, "conversion-and-unsigned-1"]], "Conversion and unsigned (2)": [[443, "conversion-and-unsigned-2"]], "Compiler Warnings": [[443, "compiler-warnings"]], "Last Warning": [[443, "last-warning"], [1038, "last-warning"]], "Forced Conversion - Cast": [[443, "forced-conversion-cast"]], "Increment, Decrement": [[444, "increment-decrement"]], "Confusion: ++, --": [[444, "confusion"]], "Confused to perfection (1)": [[444, "confused-to-perfection-1"]], "Confused to perfection (2)": [[444, "confused-to-perfection-2"]], "Exercise: Copy and Reduce String": [[445, "exercise-copy-and-reduce-string"]], "Bit-Operators": [[446, "bit-operators"]], "Bit Manipulation": [[446, "bit-manipulation"]], "Bitwise AND and OR": [[446, "bitwise-and-and-or"]], "Bitwise XOR": [[446, "bitwise-xor"]], "Shift Left": [[446, "shift-left"]], "Shift Right": [[446, "shift-right"]], "Inverting (\u201cOne\u2019s-Complement\u201d)": [[446, "inverting-one-s-complement"]], "Assignment with Calculation": [[447, "assignment-with-calculation"]], "Combined Operators": [[447, "combined-operators"]], "?: - Conditional Expression": [[448, "conditional-expression"]], "?: - Conditional Expression (1)": [[448, "conditional-expression-1"]], "?: - Conditional Expression (2)": [[448, "conditional-expression-2"]], "Precedence, Associativity": [[449, "precedence-associativity"]], "Summary: Operators": [[449, "summary-operators"]], "Operators: Precedence und Associativity (1)": [[449, "operators-precedence-und-associativity-1"]], "Operators: Precedence und Associativity (2)": [[449, "operators-precedence-und-associativity-2"]], "More Warnings": [[449, "more-warnings"]], "Statements and Blocks": [[451, "statements-and-blocks"]], "Statement vs. Block": [[451, "statement-vs-block"]], "if - else": [[452, "if-else"]], "Branches": [[452, "branches"]], "True or False? What is Truth?": [[452, "true-or-false-what-is-truth"]], "else is optional (1)": [[452, "else-is-optional-1"]], "else is optional (2)": [[452, "else-is-optional-2"]], "else - if": [[453, "else-if"]], "Style Matters": [[453, "style-matters"]], "switch": [[454, "switch"], [454, "id1"]], "Case Distinctions": [[454, "case-distinctions"]], "if - else if vs. switch": [[454, "if-else-if-vs-switch"]], "Loops: while and for": [[455, "loops-while-and-for"]], "while: general purpose loop": [[455, "while-general-purpose-loop"]], "From while to for (1)": [[455, "from-while-to-for-1"]], "From while to for (2)": [[455, "from-while-to-for-2"]], "for, a Little Closer": [[455, "for-a-little-closer"]], "Comma Operator": [[455, "comma-operator"]], "for: Infamous Idioms": [[455, "for-infamous-idioms"]], "Loops: do - while": [[456, "loops-do-while"]], "do - while: Condition After Body": [[456, "do-while-condition-after-body"]], "goto and Labels": [[458, "goto-and-labels"]], "Structured Programming vs. goto": [[458, "structured-programming-vs-goto"]], "goto: Definition": [[458, "goto-definition"]], "goto: Use Cases": [[458, "goto-use-cases"]], "Nesting": [[460, "nesting"]], "Declaration vs. Definition": [[460, "declaration-vs-definition"]], "A Monolithic Program": [[460, "a-monolithic-program"]], "Separate Compilation": [[460, "separate-compilation"]], "Extern/Global Variables": [[461, "extern-global-variables"]], "Variables: Declaration and Definition": [[461, "variables-declaration-and-definition"]], "Variables: Separating Declaration from Definition (1)": [[461, "variables-separating-declaration-from-definition-1"]], "Variables: Separating Declaration from Definition (2)": [[461, "variables-separating-declaration-from-definition-2"]], "Header Files": [[462, "header-files"]], "Declarations: Problems (1)": [[462, "declarations-problems-1"]], "Declarations: Problems (2)": [[462, "declarations-problems-2"]], "Declarations: Solutions": [[462, "declarations-solutions"]], "Static Variables": [[463, "static-variables"]], "Lifetime and Visibility (1)": [[463, "lifetime-and-visibility-1"]], "Automatic Variables": [[463, "automatic-variables"]], "Local static Variable": [[463, "local-static-variable"]], "Global static Variable": [[463, "global-static-variable"]], "Global Variable": [[463, "global-variable"], [1128, "global-variable"]], "C Preprocessor: Basics": [[464, "c-preprocessor-basics"]], "#include": [[464, "include"]], "Macros: Text Replacement": [[464, "macros-text-replacement"]], "Macros: Constant Definition": [[464, "macros-constant-definition"]], "Macros: Inline Replacement as Function Call (1)": [[464, "macros-inline-replacement-as-function-call-1"]], "Macros: Inline Replacement as Function Call (2)": [[464, "macros-inline-replacement-as-function-call-2"]], "Include Guards (1)": [[464, "include-guards-1"]], "Include Guards (2)": [[464, "include-guards-2"]], "The C Preprocessor: Last Words": [[464, "the-c-preprocessor-last-words"], [465, "the-c-preprocessor-last-words"]], "C Preprocessor: More": [[465, "c-preprocessor-more"]], "Conditional Compilation: Rules": [[465, "conditional-compilation-rules"]], "Conditional Compilation: Examples": [[465, "conditional-compilation-examples"]], "Conditional Compilation: Last Words": [[465, "conditional-compilation-last-words"]], "Macros: Spanning Multiple Lines": [[465, "macros-spanning-multiple-lines"]], "Macros: Multiple Statements as One Statement (1)": [[465, "macros-multiple-statements-as-one-statement-1"]], "Macros: Multiple Statements as One Statement (2)": [[465, "macros-multiple-statements-as-one-statement-2"]], "Stringification (1)": [[465, "stringification-1"]], "Stringification (2)": [[465, "stringification-2"]], "Token Pasting (1)": [[465, "token-pasting-1"]], "Token Pasting (2)": [[465, "token-pasting-2"]], "Warnings and Errors": [[465, "warnings-and-errors"]], "Predefined Macros (1)": [[465, "predefined-macros-1"]], "Pointers and Addresses": [[467, "pointers-and-addresses"]], "Pointers: Basics": [[467, "pointers-basics"]], "Pointer: Operators": [[467, "pointer-operators"]], "More Examples": [[467, "more-examples"]], "Pointers as Function Parameters": [[468, "pointers-as-function-parameters"]], "Call by Reference (1)": [[468, "call-by-reference-1"]], "Call by Reference (2)": [[468, "call-by-reference-2"]], "Exercise: Function That Swaps Two Variables": [[469, "exercise-function-that-swaps-two-variables"]], "Pointers and Arrays": [[470, "pointers-and-arrays"], [472, "pointers-and-arrays"]], "It\u2019s Only Memory": [[470, "it-s-only-memory"]], "Conversion Array \u27f6 Pointer": [[470, "conversion-array-longrightarrow-pointer"]], "Pointer Arithmetic (1)": [[470, "pointer-arithmetic-1"]], "Pointer Arithmetic (2)": [[470, "pointer-arithmetic-2"]], "Pointer Arithmetic (3)": [[470, "pointer-arithmetic-3"]], "Pointer Arithmetic: Difference": [[470, "pointer-arithmetic-difference"]], "Pointer Arithmetic: Array Algorithms": [[470, "pointer-arithmetic-array-algorithms"]], "Pointer Arithmetic: Jump Width? (1)": [[470, "pointer-arithmetic-jump-width-1"]], "Pointer Arithmetic: Jump Width? (2)": [[470, "pointer-arithmetic-jump-width-2"]], "Pointer Arithmetic: Arbitrary Datatypes": [[470, "pointer-arithmetic-arbitrary-datatypes"]], "main() Can Take Parameters": [[471, "main-can-take-parameters"]], "struct: Basics": [[473, "struct-basics"]], "struct: Compound Datatypes": [[473, "struct-compound-datatypes"]], "struct: How?": [[473, "struct-how"]], "Usage": [[473, "usage"], [683, "usage"], [690, "usage"]], "Nested Structures": [[473, "nested-structures"]], "Memory Layout": [[473, "memory-layout"]], "Recursive Structures?": [[473, "recursive-structures"]], "struct: Functions": [[474, "struct-functions"]], "Parameters and Return (1)": [[474, "parameters-and-return-1"]], "Parameters and Return (2)": [[474, "parameters-and-return-2"]], "Parameters and Return (3)": [[474, "parameters-and-return-3"]], "typedef: Type Alias": [[475, "typedef-type-alias"]], "Alias for Type Names": [[475, "alias-for-type-names"]], "Dynamic Memory": [[477, "dynamic-memory"], [477, "id1"]], "Stack and Global Memory": [[477, "stack-and-global-memory"]], "Dynamic Memory - Usage": [[477, "dynamic-memory-usage"]], "Singly Linked List": [[478, "singly-linked-list"]], "Exercises (1)": [[478, "exercises-1"]], "Exercises (2)": [[478, "exercises-2"]], "Exercises (3)": [[478, "exercises-3"]], "Exercises (4)": [[478, "exercises-4"]], "Exercises (5)": [[478, "exercises-5"]], "Exercises (6)": [[478, "exercises-6"]], "Exercises (7)": [[478, "exercises-7"]], "Exercises (8)": [[478, "exercises-8"]], "Exercises (9)": [[478, "exercises-9"]], "Exercises (10)": [[478, "exercises-10"]], "Exercises (11)": [[478, "exercises-11"]], "Volatile": [[480, "volatile"]], "volatile: The Lie (1)": [[480, "volatile-the-lie-1"]], "volatile: The Lie (2)": [[480, "volatile-the-lie-2"]], "volatile: Valid Use: Hardware": [[480, "volatile-valid-use-hardware"]], "volatile: Valid Use: Unix Signal Handlers": [[480, "volatile-valid-use-unix-signal-handlers"]], "Compiler Intrinsics": [[481, "compiler-intrinsics"]], "Atomic Memory Access": [[481, "atomic-memory-access"]], "Atomic Memory Access: Load/Modify/Store": [[481, "atomic-memory-access-load-modify-store"]], "Load/Modify/Store: Mutex": [[481, "load-modify-store-mutex"]], "Atomic Instructions": [[481, "atomic-instructions"], [1033, "atomic-instructions"]], "More GCC \u201cBuiltins\u201d": [[481, "more-gcc-builtins"]], "Alignment": [[482, "alignment"]], "Data Alignment": [[482, "data-alignment"]], "Data Alignment, Compilers": [[482, "data-alignment-compilers"]], "Unaligned Data Access (1)": [[482, "unaligned-data-access-1"]], "Unaligned Data Access (2)": [[482, "unaligned-data-access-2"]], "Padding (1)": [[482, "padding-1"]], "Padding (2)": [[482, "padding-2"]], "Padding (3)": [[482, "padding-3"]], "Padding (4)": [[482, "padding-4"]], "Structure Alignment (1)": [[482, "structure-alignment-1"]], "Structure Alignment (2)": [[482, "structure-alignment-2"]], "And Arrays? (1)": [[482, "and-arrays-1"]], "And Arrays? (2)": [[482, "and-arrays-2"]], "And Arrays? (3)": [[482, "and-arrays-3"]], "Sanity and Readabilty": [[484, "sanity-and-readabilty"]], "Shooting Offense: Unobvious Solution": [[484, "shooting-offense-unobvious-solution"]], "Shooting Offense: Unobvious Problem": [[484, "shooting-offense-unobvious-problem"]], "Shooting Offenses": [[484, "shooting-offenses"]], "Ambiguity": [[484, "ambiguity"]], "Readability": [[484, "readability"]], "Code Smells": [[484, "code-smells"]], "Know Your Integers": [[485, "know-your-integers"]], "Standard Data Types: size_t (1)": [[485, "standard-data-types-size-t-1"]], "Standard Data Types: size_t (2)": [[485, "standard-data-types-size-t-2"]], "Discrete Values - enum": [[486, "discrete-values-enum"], [486, "id1"]], "Discrete Values": [[486, "discrete-values"]], "Discrete Values - Traditional Approach (1)": [[486, "discrete-values-traditional-approach-1"]], "Discrete Values - Traditional Approach (2)": [[486, "discrete-values-traditional-approach-2"]], "Discrete Values - Wishlist": [[486, "discrete-values-wishlist"]], "Discrete Values - enum and switch": [[486, "discrete-values-enum-and-switch"], [486, "id2"]], "Discrete Values - Close to Perfection": [[486, "discrete-values-close-to-perfection"]], "Visibility - static": [[487, "visibility-static"]], "Visibility": [[487, "visibility"]], "A Somewhat Contrived Example (1)": [[487, "a-somewhat-contrived-example-1"]], "A Somewhat Contrived Example (2)": [[487, "a-somewhat-contrived-example-2"]], "The static Keyword (Hooray!)": [[487, "the-static-keyword-hooray"]], "Correctness - const": [[488, "correctness-const"]], "Non-Modifiable Memory (1)": [[488, "non-modifiable-memory-1"]], "Non-Modifiable Memory (2)": [[488, "non-modifiable-memory-2"]], "The const Keyword (1)": [[488, "the-const-keyword-1"]], "The const Keyword (2)": [[488, "the-const-keyword-2"]], "const Variables": [[488, "const-variables"]], "const Parameters (1)": [[488, "const-parameters-1"]], "const Parameters (2)": [[488, "const-parameters-2"]], "Pointers, Pointers, Pointers \u2026 (1)": [[488, "pointers-pointers-pointers-1"]], "Pointers, Pointers, Pointers \u2026 (2)": [[488, "pointers-pointers-pointers-2"]], "Pointers, Pointers, Pointers \u2026 (3)": [[488, "pointers-pointers-pointers-3"]], "Pointers, Pointers, Pointers \u2026 (4)": [[488, "pointers-pointers-pointers-4"]], "Pointers, Pointers, Pointers \u2026 (5)": [[488, "pointers-pointers-pointers-5"]], "Pointers, Pointers, Pointers \u2026 (6)": [[488, "pointers-pointers-pointers-6"]], "Pointers, Pointers, Pointers \u2026 (7)": [[488, "pointers-pointers-pointers-7"]], "Pointers, Pointers, Pointers \u2026 (8)": [[488, "pointers-pointers-pointers-8"]], "Pointers, Pointers, Pointers \u2026 (9)": [[488, "pointers-pointers-pointers-9"]], "Struct Initialization": [[489, "struct-initialization"]], "Good Old Struct Initialization": [[489, "good-old-struct-initialization"]], "C99 Designated Initializer": [[489, "c99-designated-initializer"]], "Explict Type Safety": [[490, "explict-type-safety"]], "Integer Types Are Ambiguous": [[490, "integer-types-are-ambiguous"]], "Example: Ambiguous Error Schemes (1)": [[490, "example-ambiguous-error-schemes-1"]], "Example: Ambiguous Error Schemes (2)": [[490, "example-ambiguous-error-schemes-2"]], "Example: Ambiguous Error Schemes (3)": [[490, "example-ambiguous-error-schemes-3"]], "Artificial Integer Type Safety": [[490, "artificial-integer-type-safety"]], "Error Schemes, Revisited": [[490, "error-schemes-revisited"]], "Error Schemes: Encapsulating Unix Details": [[490, "error-schemes-encapsulating-unix-details"]], "Error Schemes: Using Encapsulated Stuff": [[490, "error-schemes-using-encapsulated-stuff"]], "Wrap-Up: Artificial Type Safety": [[490, "wrap-up-artificial-type-safety"]], "valgrind": [[491, "valgrind"]], "Valgrind": [[491, "id1"]], "Valgrind in Action (1)": [[491, "valgrind-in-action-1"]], "Valgrind in Action (2)": [[491, "valgrind-in-action-2"]], "Valgrind in Action (3)": [[491, "valgrind-in-action-3"]], "Valgrind: more \u2026": [[491, "valgrind-more"]], "Optimization": [[493, "optimization"]], "Optimization - Introduction": [[493, "optimization-introduction"]], "Compute Bound or IO Bound? (1)": [[493, "compute-bound-or-io-bound-1"]], "Compute Bound or IO Bound? (2)": [[493, "compute-bound-or-io-bound-2"]], "Compute Bound or IO Bound? (3)": [[493, "compute-bound-or-io-bound-3"]], "What to do Next?": [[493, "what-to-do-next"]], "Optimizations: Compute Bound Code": [[494, "optimizations-compute-bound-code"]], "Many Ways of Optimization": [[494, "many-ways-of-optimization"]], "Unnecessary Optimizations": [[494, "unnecessary-optimizations"]], "Inlining (1)": [[494, "inlining-1"]], "Inlining (2)": [[494, "inlining-2"]], "Inlining (3)": [[494, "inlining-3"]], "Register Allocation (1)": [[494, "register-allocation-1"]], "Register Allocation (2)": [[494, "register-allocation-2"]], "Peephole Optimization": [[494, "peephole-optimization"]], "Peephole Optimization: Common Subexpression Elimination": [[494, "peephole-optimization-common-subexpression-elimination"]], "Peephole Optimization: Strength Reduction": [[494, "peephole-optimization-strength-reduction"]], "Peephole Optimization: Constant Folding": [[494, "peephole-optimization-constant-folding"]], "Loop Invariants": [[494, "loop-invariants"]], "Loop Unrolling": [[494, "loop-unrolling"]], "Tail Call Optimization": [[494, "tail-call-optimization"]], "CPU Optimization, Last Words": [[494, "cpu-optimization-last-words"]], "GCC: Optimization \u201cLevels\u201d": [[494, "gcc-optimization-levels"]], "Further Reading": [[494, "further-reading"]], "Optimizations: Memory Optimizations": [[495, "optimizations-memory-optimizations"]], "Memory: Caches": [[495, "memory-caches"]], "Locality of reference": [[495, "locality-of-reference"]], "Multidimensional Arrays": [[495, "multidimensional-arrays"]], "Multidimensional Arrays: Cache Thrashing": [[495, "multidimensional-arrays-cache-thrashing"]], "Multidimensional Arrays: Forward Indexing": [[495, "multidimensional-arrays-forward-indexing"]], "Profiling - Famous Words": [[497, "profiling-famous-words"]], "Donald E. Knuth": [[497, null]], "Tony Hoare": [[497, null]], "Larry Wall": [[497, null]], "The Practice of Programming, Brian W. Kernighan and\n             Rob Pike": [[497, null]], "Profiling - Introduction": [[497, "profiling-introduction"]], "GNU Profiler - gprof": [[498, "gnu-profiler-gprof"]], "gprof - How it Works": [[498, "gprof-how-it-works"]], "Using gprof": [[498, "using-gprof"]], "gprof: Flat Profile": [[498, "gprof-flat-profile"]], "gprof: Call Graph": [[498, "gprof-call-graph"]], "gprof: Interpreting The Results": [[498, "gprof-interpreting-the-results"]], "gprof: Visualization": [[498, "gprof-visualization"]], "callgrind": [[499, "callgrind"]], "callgrind - How it Works": [[499, "callgrind-how-it-works"]], "callgrind - How it is Used": [[499, "callgrind-how-it-is-used"]], "callgrind - Analysis Per Commandline": [[499, "callgrind-analysis-per-commandline"]], "callgrind - Analysis With kcachegrind": [[499, "callgrind-analysis-with-kcachegrind"]], "callgrind - Useful Options": [[499, "callgrind-useful-options"]], "oprofile": [[500, "oprofile"]], "oprofile - How it Works": [[500, "oprofile-how-it-works"]], "oprofile - Basic Usage (1)": [[500, "oprofile-basic-usage-1"]], "oprofile - Basic Usage (2)": [[500, "oprofile-basic-usage-2"]], "oprofile - Too Much Information": [[500, "oprofile-too-much-information"]], "oprofile - Call Graph": [[500, "oprofile-call-graph"]], "oprofile - Kernel Symbols (1)": [[500, "oprofile-kernel-symbols-1"]], "oprofile - Kernel Symbols (2)": [[500, "oprofile-kernel-symbols-2"]], "oprofile - Kernel Modules": [[500, "oprofile-kernel-modules"]], "oprofile - System-Wide Profiling": [[500, "oprofile-system-wide-profiling"]], "oprofile - Offline Profiling": [[500, "oprofile-offline-profiling"]], "oprofile - Graphical Beauty": [[500, "oprofile-graphical-beauty"]], "The C Programming Language": [[502, "the-c-programming-language"]], "Group Description": [[502, "group-description"], [650, "group-description"], [741, "group-description"], [783, "group-description"], [784, "group-description"], [833, "group-description"], [837, "group-description"], [839, "group-description"], [982, "group-description"], [990, "group-description"], [991, "group-description"], [435, "group-description"], [450, "group-description"], [459, "group-description"], [466, "group-description"], [472, "group-description"], [476, "group-description"], [479, "group-description"], [483, "group-description"], [492, "group-description"], [496, "group-description"], [501, "group-description"], [642, "group-description"], [665, "group-description"], [668, "group-description"], [671, "group-description"], [712, "group-description"], [721, "group-description"], [808, "group-description"], [816, "group-description"], [821, "group-description"], [1045, "group-description"]], "Messages From The Book": [[503, "messages-from-the-book"]], "What\u2019s There? What Have We Accomplished?": [[504, "what-s-there-what-have-we-accomplished"]], "Rules? Why Rules?": [[504, "rules-why-rules"]], "Coding Style": [[504, "coding-style"]], "Disclaimer": [[504, null]], "Design Principles: SOLID": [[504, "design-principles-solid"]], "Another One: YAGNI": [[504, "another-one-yagni"]], "Architecture": [[504, "architecture"]], "Project Management: Traditional": [[504, "project-management-traditional"]], "Project Management: Software": [[504, "project-management-software"]], "So What?": [[504, "so-what"]], "Is Software A Craft? Software Is A Craft! \u27f6 Clean Code": [[505, "is-software-a-craft-software-is-a-craft-longrightarrow-clean-code"]], "Uncle Bob": [[505, "uncle-bob"]], "A Typical Project (Livehacking Screenplay: My Own Bookkeeping Effort)": [[506, "a-typical-project-livehacking-screenplay-my-own-bookkeeping-effort"]], "Spaghetti Version": [[506, "spaghetti-version"]], "A Little Better: Functions (And Commandline Parameters)": [[506, "a-little-better-functions-and-commandline-parameters"]], "Feature Request: Concatenate Input Data From Multiple CSV Files": [[506, "feature-request-concatenate-input-data-from-multiple-csv-files"]], "Feature Request: Concatenate Input Data From YYYY-MM.csv Files": [[506, "feature-request-concatenate-input-data-from-yyyy-mm-csv-files"]], "Where Are We? Questions!": [[506, "where-are-we-questions"]], "Testability: Input Cleaning": [[506, "testability-input-cleaning"]], "Testability: Reading Input (One Or Multiple Files, Explicitly)": [[506, "testability-reading-input-one-or-multiple-files-explicitly"]], "Test Sanity: Common Code": [[506, "test-sanity-common-code"]], "Testability: Reading Input From Directory": [[506, "testability-reading-input-from-directory"]], "Testability: Categorization": [[506, "testability-categorization"]], "Safety Net In Place \u27f6 Refactoring Categorization": [[506, "safety-net-in-place-longrightarrow-refactoring-categorization"]], "Refactoring Input Reading (\u27f6 Overengineering)": [[506, "refactoring-input-reading-longrightarrow-overengineering"]], "Screenplay: Generated Code (add_custom_command())": [[507, "screenplay-generated-code-add-custom-command"]], "Complete source code": [[507, null], [512, null], [513, null], [514, null], [515, null], [528, null], [530, null]], "Trainer\u2019s note": [[507, null], [513, null], [515, null], [530, null], [531, null]], "What We Want": [[507, "what-we-want"]], "Handwritten Prototype: What A Code Generator Could Do For Us": [[507, "handwritten-prototype-what-a-code-generator-could-do-for-us"]], "One Deeply Embedded Application (2024-06-20-manual.cpp)": [[507, "one-deeply-embedded-application-2024-06-20-manual-cpp"]], "Another Deeply Embedded Application (Generated From 2024-06-20.conf)": [[507, "another-deeply-embedded-application-generated-from-2024-06-20-conf"]], "Et Voila!": [[507, "et-voila"]], "Optional Code, Approach 1: Optional blacklist, C Macro  (Global Flags)": [[508, "optional-code-approach-1-optional-blacklist-c-macro-global-flags"]], "Optional blacklist, C Macro": [[508, "optional-blacklist-c-macro"]], "Optional Dependency In libhello": [[508, "optional-dependency-in-libhello"]], "Optional Dependency In libhello Header File": [[508, "optional-dependency-in-libhello-header-file"]], "Optional Dependency In libhello CPP File": [[508, "optional-dependency-in-libhello-cpp-file"]], "Good Or Bad?": [[508, "good-or-bad"], [509, "good-or-bad"]], "Optional Code, Approach 2: Pushing Optionality Down In Module Interface": [[509, "optional-code-approach-2-pushing-optionality-down-in-module-interface"]], "Remove Too Much CMake Optionality": [[509, "remove-too-much-cmake-optionality"]], "TARGET_COMPILE_DEFINITIONS() (backlist Availablility)": [[509, "target-compile-definitions-backlist-availablility"]], "Push Optionality Down In blacklist (\u27f6 INTERFACE Targets)": [[509, "push-optionality-down-in-blacklist-longrightarrow-interface-targets"]], "Optional Code: Problem Definition, OPTION()": [[510, "optional-code-problem-definition-option"]], "Problem": [[510, "problem"], [511, "problem"], [542, "problem"], [543, "problem"], [544, "problem"], [547, "problem"], [553, "problem"], [601, "problem"], [726, "problem"], [877, "problem"], [1009, "problem"]], "Solution: Add An Option": [[510, "solution-add-an-option"]], "Define Option USE_BLACKLIST; Option Usage, Cache": [[510, "define-option-use-blacklist-option-usage-cache"]], "Option Handling: Many Approaches": [[510, "option-handling-many-approaches"]], "\u201cConfigured\u201d Header Files": [[511, "configured-header-files"]], "Configured Files": [[511, "configured-files"]], "Use In Compiled Code": [[511, "use-in-compiled-code"]], "Screenplay: Integrating libmosquitto (MQTT - Handwritten Find-Module)": [[512, "screenplay-integrating-libmosquitto-mqtt-handwritten-find-module"]], "First: Clean Up Toplevel CMakeLists.txt": [[512, "first-clean-up-toplevel-cmakelists-txt"]], "Add MQTT Capability To Datalogger": [[512, "add-mqtt-capability-to-datalogger"]], "External libmosquitto Dependency": [[512, "external-libmosquitto-dependency"]], "Screenplay: Adding SQLite3 External Dependency": [[513, "screenplay-adding-sqlite3-external-dependency"]], "Add SQLite3 Capability To Datalogger": [[513, "add-sqlite3-capability-to-datalogger"]], "FIND_PACKAGE()": [[513, "find-package"], [516, "find-package"]], "FIND_PACKAGE(... REQUIRED)": [[513, "find-package-required"], [516, "find-package-required"]], "Bringing A New Node Into The Graph: Theory": [[513, "bringing-a-new-node-into-the-graph-theory"]], "Bringing A New Node Into The Graph: Practice": [[513, "bringing-a-new-node-into-the-graph-practice"]], "Screenplay: Making SQLite3 Optional (configure_file())": [[514, "screenplay-making-sqlite3-optional-configure-file"]], "Alternative: configure_file() Instead Of target_compile_definitions()": [[514, "alternative-configure-file-instead-of-target-compile-definitions"]], "Make It So": [[514, "make-it-so"]], "\u201cConfigured Files\u201d: configure_file()": [[514, "configured-files-configure-file"]], "What Else To Put In project-config.h.in": [[514, "what-else-to-put-in-project-config-h-in"]], "Screenplay: Making SQLite3 Optional (target_compile_definitions())": [[515, "screenplay-making-sqlite3-optional-target-compile-definitions"]], "What If We Know How to Live Without SQLite3?": [[515, "what-if-we-know-how-to-live-without-sqlite3"]], "Optionally Not Depending On SQLite3": [[515, "optionally-not-depending-on-sqlite3"]], "Optionally Not Depending On Someone Who Depends On SQLite3": [[515, "optionally-not-depending-on-someone-who-depends-on-sqlite3"]], "SQLite3 Parameters": [[516, "sqlite3-parameters"]], "Using SQLite3 Parameters": [[516, "using-sqlite3-parameters"]], "Demo Time": [[516, "demo-time"], [531, "demo-time"]], "CMake: Advanced Topics": [[517, "cmake-advanced-topics"]], "Alternative Topics": [[517, "alternative-topics"]], "Todo jjj \ud83e\udd18": [[517, "todo-jjj-metal"]], "Language Basics": [[518, "language-basics"]], "Single Line Comments": [[518, "single-line-comments"]], "Multiline Comments (\u201cBracketed Comments\u201d)": [[518, "multiline-comments-bracketed-comments"]], "Command Execution": [[518, "command-execution"]], "Commands: String Evaluation, And Quoting": [[518, "commands-string-evaluation-and-quoting"]], "Commands: Bracketed Arguments": [[518, "commands-bracketed-arguments"]], "Commands: Quoted Arguments": [[518, "commands-quoted-arguments"]], "Commands: Unquoted Arguments": [[518, "commands-unquoted-arguments"]], "There Are No Datatypes, Basta": [[519, "there-are-no-datatypes-basta"]], "Attention: Inconsistencies All Over": [[519, "attention-inconsistencies-all-over"]], "Strings: In-Place Modification Of A Variable (Use Unquoted Names)": [[519, "strings-in-place-modification-of-a-variable-use-unquoted-names"]], "Pitfall: In-Place Modification Of Undefined Variable": [[519, "pitfall-in-place-modification-of-undefined-variable"]], "Pitfall: Quoted Variable Names For In-Place Modification": [[519, "pitfall-quoted-variable-names-for-in-place-modification"]], "Strings: Non-Modifying Operations (Use Quoted Names)": [[519, "strings-non-modifying-operations-use-quoted-names"]], "Pitfall: Unquoted Variable Names For Non-Modifying Operations": [[519, "pitfall-unquoted-variable-names-for-non-modifying-operations"]], "Strings: Methods, By Example": [[519, "strings-methods-by-example"]], "Lists: Iteration (foreach Loop)": [[519, "lists-iteration-foreach-loop"]], "Lists: Methods, By Example": [[519, "lists-methods-by-example"]], "Filesystem Interaction, Pathname Manipulation": [[520, "filesystem-interaction-pathname-manipulation"]], "file: Host Filesystem Access": [[520, "file-host-filesystem-access"]], "file(READ ...): Read Entire File": [[520, "file-read-read-entire-file"]], "file(STRINGS ...): Read Lines Of File": [[520, "file-strings-read-lines-of-file"]], "file(<HASH> ...): Checksumming": [[520, "file-hash-checksumming"]], "file(WRITE ...), file(APPEND ...): Writing Files": [[520, "file-write-file-append-writing-files"]], "file(GLOB ...): Read Directory Contents": [[520, "file-glob-read-directory-contents"]], "cmake_path(GET ...): Decompose Paths": [[520, "cmake-path-get-decompose-paths"]], "cmake_path(APPEND ...): Compose Paths": [[520, "cmake-path-append-compose-paths"]], "foreach Loops": [[521, "foreach-loops"]], "Functions And Macros": [[522, "functions-and-macros"]], "Simplest Of Functions": [[522, "simplest-of-functions"]], "Function Scope": [[522, "function-scope"]], "Function Scope: And Nested Function?": [[522, "function-scope-and-nested-function"]], "Passing Parameters In": [[522, "passing-parameters-in"]], "Parameters: ARGC, ARGV, ARGVn, ARGN": [[522, "parameters-argc-argv-argvn-argn"]], "And Output Variables? Return Values?": [[522, "and-output-variables-return-values"]], "PARENT_SCOPE Examples": [[522, "parent-scope-examples"]], "Passing Any Number Of Parameters": [[522, "passing-any-number-of-parameters"]], "Fancy Parameter Parsing: cmake_parse_arguments()": [[522, "fancy-parameter-parsing-cmake-parse-arguments"]], "And Macros?": [[522, "and-macros"]], "The Language": [[523, "the-language"]], "if, And Conditions": [[524, "if-and-conditions"]], "if Syntax": [[524, "if-syntax"]], "Predefined Conditions: String Comparison": [[524, "predefined-conditions-string-comparison"]], "Pitfalls: Variables Are Strings, And CMake Does Not Care": [[524, "pitfalls-variables-are-strings-and-cmake-does-not-care"]], "Predefined Conditions: File System": [[524, "predefined-conditions-file-system"]], "Policies?": [[524, "policies"]], "Miscellaneous Checks (Some Rather Advanced)": [[524, "miscellaneous-checks-some-rather-advanced"]], "Condition Evaluation (Where The Mess Begins): What\u2019s Boolean?": [[524, "condition-evaluation-where-the-mess-begins-what-s-boolean"]], "Dereferencing Unquoted Variable Names": [[524, "dereferencing-unquoted-variable-names"]], "\u201cBoolean\u201d Variables: Weirdly Interpreted Strings": [[524, "boolean-variables-weirdly-interpreted-strings"]], "Pitfall: Evaluation Until There Is No More": [[524, "pitfall-evaluation-until-there-is-no-more"]], "Pitfall: Evaluation Of Unquoted Arguments": [[524, "pitfall-evaluation-of-unquoted-arguments"]], "Scripts": [[525, "scripts"]], "A Script Ain\u2019t A Project": [[525, "a-script-ain-t-a-project"]], "Passing Commandline Parameters": [[525, "passing-commandline-parameters"]], "Setting, And Variable Names": [[526, "setting-and-variable-names"]], "Empty/Undefined Variables": [[526, "empty-undefined-variables"]], "Removing Variables": [[526, "removing-variables"]], "Checking Emptyness And Definedness": [[526, "checking-emptyness-and-definedness"]], "Indirect Variables": [[526, "indirect-variables"]], "Danger: Lookup Scope": [[526, "danger-lookup-scope"]], "Environment Variables": [[526, "environment-variables"], [1043, "environment-variables"]], "Cache Variables": [[526, "cache-variables"]], "Scopes: Function Scope": [[526, "scopes-function-scope"]], "Scopes: Directory Scope": [[526, "scopes-directory-scope"]], "Screenplay: Function Wrapping add_library()": [[528, "screenplay-function-wrapping-add-library"]], "Streamline Build-Spaghetti: How Want It?": [[528, "streamline-build-spaghetti-how-want-it"]], "Function my_add_library(): cmake_parse_arguments()": [[528, "function-my-add-library-cmake-parse-arguments"]], "Function my_add_library(): Final Version": [[528, "function-my-add-library-final-version"]], "Make my_add_library() A Matter For The Architect": [[528, "make-my-add-library-a-matter-for-the-architect"]], "Why Noy Use include_directories() For That": [[529, "why-noy-use-include-directories-for-that"]], "Screenplay: Public And Private Include Directories": [[530, "screenplay-public-and-private-include-directories"]], "Motivation": [[530, "motivation"], [544, "motivation"], [547, "motivation"], [563, "motivation"], [564, "motivation"], [660, "motivation"], [758, "motivation"], [760, "motivation"], [785, "motivation"], [791, "motivation"], [1101, "motivation"], [1107, "motivation"]], "New files": [[530, null]], "Move Code Around: toolcase/base/": [[530, "move-code-around-toolcase-base"]], "Adjust CMakeLists.txt": [[530, "adjust-cmakelists-txt"]], "Local Compilation In toolcase/base/": [[530, "local-compilation-in-toolcase-base"]], "Dependent Nodes: toolcase/boiling-pot/ And toolcase/data-logger/": [[530, "dependent-nodes-toolcase-boiling-pot-and-toolcase-data-logger"]], "Final Note: And PUBLIC?": [[530, "final-note-and-public"]], "Final Final Note: include_directories()": [[530, "final-final-note-include-directories"]], "Targets, Properties, And More": [[531, "targets-properties-and-more"]], "Target Types": [[531, "target-types"]], "Properties: PRIVATE, PUBLIC, INTERFACE?": [[531, "properties-private-public-interface"]], "Final Note: ``include_directories()": [[531, "final-note-include-directories"]], "Running Tests": [[532, "running-tests"], [1221, "running-tests"]], "Setup And Usage": [[532, "setup-and-usage"]], "Add Simple Test": [[532, "add-simple-test"]], "Checking Test Output": [[532, "checking-test-output"]], "Questionability": [[532, "questionability"]], "CMake": [[533, "cmake"], [1243, "cmake"]], "Basics: Boilerplate, And Executables": [[534, "basics-boilerplate-and-executables"]], "Single Monolithic Executable": [[534, "single-monolithic-executable"]], "Building With CMake": [[534, "building-with-cmake"]], "Building With CMake: Separate Source And Build Directories": [[534, "building-with-cmake-separate-source-and-build-directories"]], "Executables Consisting Of Multiple Sources": [[534, "executables-consisting-of-multiple-sources"]], "Problem: Duplicate Compilation": [[534, "problem-duplicate-compilation"]], "Problem: More Functionality": [[534, "problem-more-functionality"]], "Solution: Libraries": [[534, "solution-libraries"], [1081, "solution-libraries"]], "C++, Debug/Release, CMake \u201cProgramming\u201d, Rants": [[535, "c-debug-release-cmake-programming-rants"]], "Pause": [[535, "pause"]], "Class Diagram": [[535, "class-diagram"]], "C++ Standard Version": [[535, "c-standard-version"]], "Debug Vs. Release Builds: CMAKE_BUILD_TYPE": [[535, "debug-vs-release-builds-cmake-build-type"]], "Compiler Type": [[535, "compiler-type"]], "Strings And Lists": [[535, "strings-and-lists"]], "MESSAGE() (A.k.a printf() Debugging)": [[535, "message-a-k-a-printf-debugging"]], "MESSAGE(): Popular \u201cModes\u201d": [[535, "message-popular-modes"]], "CMake: Introduction": [[536, "cmake-introduction"]], "Installation (\u201cDeployment\u201d)": [[537, "installation-deployment"]], "\u201cPrefix\u201d: Where Everything Comes Together": [[537, "prefix-where-everything-comes-together"]], "Installing Targets": [[537, "installing-targets"]], "Doing The Installation (make install)": [[537, "doing-the-installation-make-install"]], "And Shared Libraries?": [[537, "and-shared-libraries"]], "Shared Libraries: Installed Vs. Local (RUNPATH)": [[537, "shared-libraries-installed-vs-local-runpath"]], "Shared Libraries: ABI Versions": [[537, "shared-libraries-abi-versions"]], "Libraries, And Dependencies": [[538, "libraries-and-dependencies"]], "Libraries And Executables": [[538, "libraries-and-executables"]], "Targets And Dependencies": [[538, "targets-and-dependencies"]], "Visualizing Dependencies": [[538, "visualizing-dependencies"]], "Shared Libraries (Preview)": [[539, "shared-libraries-preview"]], "\u201cNormal\u201d Libraries": [[539, "normal-libraries"]], "Building Shared Libraries": [[539, "building-shared-libraries"]], "More About Loading": [[539, "more-about-loading"]], "Structure - Subdirectories, Dependencies, and Include Paths": [[540, "structure-subdirectories-dependencies-and-include-paths"]], "Reorganization": [[540, "reorganization"]], "Dependencies, And Target Properties": [[540, "dependencies-and-target-properties"]], "C++ Code": [[541, "c-code"]], "Abstract Factory": [[542, "abstract-factory"]], "I2C Sensor Subhierarchy": [[542, "i2c-sensor-subhierarchy"]], "Problem: I2C Sensor Instantiation": [[542, "problem-i2c-sensor-instantiation"]], "Solution: Factory Objects": [[542, "solution-factory-objects"]], "Adapter": [[543, "adapter"]], "Solution: Adaptation": [[543, "solution-adaptation"]], "Basic Adaptation": [[543, "basic-adaptation"]], "Adapter Must Be-A Sensor": [[543, "adapter-must-be-a-sensor"]], "Adaptee Can Be-Any ASensor": [[543, "adaptee-can-be-any-asensor"]], "Adapter Is Doing Real Measurements": [[543, "adapter-is-doing-real-measurements"]], "Command": [[544, "command"]], "Step 1: Basic insert()": [[544, "step-1-basic-insert"]], "Step 2: Basic find()": [[544, "step-2-basic-find"]], "Step 3: drop()": [[544, "step-3-drop"]], "Step 4: Handle find() Errors": [[544, "step-4-handle-find-errors"]], "Step 5: Handle insert() Errors": [[544, "step-5-handle-insert-errors"]], "Step 6: Bulk Insert?": [[544, "step-6-bulk-insert"]], "Step 6a: Bulk Insert Using std::initializer_list?": [[544, "step-6a-bulk-insert-using-std-initializer-list"]], "SocialDB Source Code": [[545, "socialdb-source-code"]], "Composite": [[546, "composite"]], "Unix Filesystem": [[546, "unix-filesystem"]], "Boolean Expressions": [[546, "boolean-expressions"]], "Thermometers, And Average Calculation": [[546, "thermometers-and-average-calculation"]], "Decorator": [[547, "decorator"]], "Variant 1: Aggregate Base Class Objects": [[547, "variant-1-aggregate-base-class-objects"]], "Variant 2: Aggregate Conrete Class Objects": [[547, "variant-2-aggregate-conrete-class-objects"]], "Step 1: Realize Current Situation": [[547, "step-1-realize-current-situation"]], "Step 2: Decorate ConstantSensor \u27f6 DecoratedConstantSensor": [[547, "step-2-decorate-constantsensor-longrightarrow-decoratedconstantsensor"]], "Step 3: Decorate RandomSensor \u27f6 DecoratedRandomSensor": [[547, "step-3-decorate-randomsensor-longrightarrow-decoratedrandomsensor"]], "Step 4: Verify That DecoratedConstantSensor Can Be Used As Sensor": [[547, "step-4-verify-that-decoratedconstantsensor-can-be-used-as-sensor"]], "Step 5: Verify That DecoratedRandomSensor Can Be Used As Sensor": [[547, "step-5-verify-that-decoratedrandomsensor-can-be-used-as-sensor"]], "Step 6: Verify That Current Situation Still Holds True": [[547, "step-6-verify-that-current-situation-still-holds-true"]], "Design Patterns With C++": [[548, "design-patterns-with-c"]], "Topics/Exercises": [[548, "topics-exercises"]], "Solutions": [[548, "solutions"], [562, "solutions"], [576, "solutions"]], "To Be Done": [[548, "to-be-done"]], "Case Study/Livehacking: Heating Control (Reading Sensors)": [[549, "case-study-livehacking-heating-control-reading-sensors"]], "Step 1: Monolithic": [[549, "step-1-monolithic"]], "Step 2: And D-Bus? \u27f6 Interfaces": [[549, "step-2-and-d-bus-longrightarrow-interfaces"]], "Step 3: Start D-Bus Implementation": [[549, "step-3-start-d-bus-implementation"]], "Pull Demo Logger/Store Out Into Separate Files": [[549, "pull-demo-logger-store-out-into-separate-files"]], "Adapter: DBusLogger": [[549, "adapter-dbuslogger"]], "Adapter: DBusValueStore": [[549, "adapter-dbusvaluestore"]], "Demo Program To Instantiate Either Demo Or DBus": [[549, "demo-program-to-instantiate-either-demo-or-dbus"]], "Stop Here, Need Help": [[549, "stop-here-need-help"]], "Tests": [[549, "tests"], [569, "tests"]], "Interpreter": [[550, "interpreter"]], "Observer": [[551, "observer"]], "OO Design Principles": [[552, "oo-design-principles"]], "Principles: Why? Which?": [[552, "principles-why-which"]], "Single Responsibility": [[552, "single-responsibility"]], "Open/Closed": [[552, "open-closed"]], "Liskov Substitution": [[552, "liskov-substitution"]], "Interface Segregation": [[552, "interface-segregation"]], "Dependency Inversion": [[552, "dependency-inversion"]], "Proxy": [[553, "proxy"]], "Solution: Proxy": [[553, "solution-proxy"]], "Local Variant": [[553, "local-variant"]], "Remote Variant": [[553, "remote-variant"]], "Exercise Foundation: Sensor Hierarchy": [[554, "exercise-foundation-sensor-hierarchy"]], "Hypothetical": [[554, "hypothetical"]], "Class Hierarchy": [[554, "class-hierarchy"]], "Singleton": [[555, "singleton"]], "And class Person?": [[555, "and-class-person"]], "UML Short Introduction": [[556, "uml-short-introduction"]], "Interface": [[556, "interface"]], "Interface Implementation, Inheritance": [[556, "interface-implementation-inheritance"]], "Connectors: Association, Aggregation, Composition": [[556, "connectors-association-aggregation-composition"]], "Association": [[556, "association"]], "Aggregation": [[556, "aggregation"]], "Composition": [[556, "composition"]], "Exercise: Abstract Factory": [[557, "exercise-abstract-factory"]], "Exercise: Adapter": [[558, "exercise-adapter"], [565, "exercise-adapter"]], "Exercise: Command": [[559, "exercise-command"]], "Exercise: Composite": [[560, "exercise-composite"]], "Exercise: Decorator": [[561, "exercise-decorator"]], "Exercises: Design Patterns": [[562, "exercises-design-patterns"]], "Exercise: Interpreter Combined With Adapter (And A Proxy)": [[563, "exercise-interpreter-combined-with-adapter-and-a-proxy"]], "Exercise: Arithmetic Expression Interpreter": [[564, "exercise-arithmetic-expression-interpreter"]], "Expression Interface": [[564, "expression-interface"]], "Arithmetic (Binary) Expressions": [[564, "arithmetic-binary-expressions"]], "Check: Combined Arithmetic Expressions": [[564, "check-combined-arithmetic-expressions"]], "And Variables?": [[564, "and-variables"]], "No Uninitialized Variables!!": [[564, "no-uninitialized-variables"]], "Assigning To Variables": [[564, "assigning-to-variables"]], "Using Variables As Expressions": [[564, "using-variables-as-expressions"]], "Exercise: Proxy (Remote Thermometer)": [[566, "exercise-proxy-remote-thermometer"]], "Network Communication": [[566, "network-communication"]], "Implementation Hints": [[566, "implementation-hints"]], "Exercise: Proxy (Rounding Thermometer)": [[567, "exercise-proxy-rounding-thermometer"]], "Exercise: Singleton (Flexible)": [[568, "exercise-singleton-flexible"]], "Exercise: Singleton (Flexible And Strict)": [[569, "exercise-singleton-flexible-and-strict"]], "Complications": [[569, "complications"]], "Exercise: Singleton (Inflexible)": [[570, "exercise-singleton-inflexible"]], "Solution: Abstract Factory": [[571, "solution-abstract-factory"]], "I2CSensorFactory Abstract Factory": [[571, "i2csensorfactory-abstract-factory"]], "Concrete Factory Implementations": [[571, "concrete-factory-implementations"]], "I2CSensorFactory_Vendor1": [[571, "i2csensorfactory-vendor1"], [571, "id1"]], "Solution: Adapter": [[572, "solution-adapter"]], "Adapter Class For Fahrenheit Sensors": [[572, "adapter-class-for-fahrenheit-sensors"]], "Solution: Command": [[573, "solution-command"]], "Command Classes": [[573, "command-classes"]], "Solution: Composite": [[574, "solution-composite"]], "Averaging (Composite) Sensor": [[574, "averaging-composite-sensor"]], "Solution: Decorator": [[575, "solution-decorator"]], "Decorated Sensor (Intermediate Interface)": [[575, "decorated-sensor-intermediate-interface"]], "Decorated Constant Sensor": [[575, "decorated-constant-sensor"]], "Decorated Random Sensor": [[575, "decorated-random-sensor"]], "Solution: Interpreter Combined With Adapter (And A Proxy)": [[577, "solution-interpreter-combined-with-adapter-and-a-proxy"]], "Solution: Arithmetic Expression Interpreter": [[578, "solution-arithmetic-expression-interpreter"]], "Solution: Observer": [[579, "solution-observer"]], "Solution: Proxy (Remote Thermometer)": [[580, "solution-proxy-remote-thermometer"]], "Client (Proxy) Thermometer": [[580, "client-proxy-thermometer"]], "Remote Stub": [[580, "remote-stub"]], "Solution: Proxy (Rounding Thermometer)": [[581, "solution-proxy-rounding-thermometer"]], "Rounding Sensor (Proxy) Implementation": [[581, "rounding-sensor-proxy-implementation"]], "Solution: Singleton (Flexible)": [[582, "solution-singleton-flexible"]], "Main Program": [[582, "main-program"], [583, "main-program"], [584, "main-program"], [824, "main-program"], [826, "main-program"], [828, "main-program"], [830, "main-program"]], "SocialInsurance Interface": [[582, "socialinsurance-interface"], [583, "socialinsurance-interface"]], "Two Concrete Implementations": [[582, "two-concrete-implementations"], [583, "two-concrete-implementations"]], "OEGK": [[582, "oegk"], [583, "oegk"]], "SVS": [[582, "svs"], [583, "svs"]], "Solution: Singleton (Flexible And Strict)": [[583, "solution-singleton-flexible-and-strict"]], "Solution: Singleton (Inflexible)": [[584, "solution-singleton-inflexible"]], "Singleton Implementation": [[584, "singleton-implementation"]], "Github Project": [[585, "github-project"], [162, null], [165, null]], "Exercise (FH): Introducing a Sensor Class": [[585, "exercise-fh-introducing-a-sensor-class"]], "CMake Build": [[585, "cmake-build"], [1022, "cmake-build"]], "Dependencies/Usage Relationships": [[585, "dependencies-usage-relationships"]], "Onewire Sensor Usage: Example/Unit-Test": [[585, "onewire-sensor-usage-example-unit-test"]], "Step 1: Preparation": [[585, "step-1-preparation"]], "Step 2: Modify onewire-temperature-<firstname>-<lastname>.cpp To Use class W1Sensor": [[585, "step-2-modify-onewire-temperature-firstname-lastname-cpp-to-use-class-w1sensor"]], "Step 3: Answer A Question": [[585, "step-3-answer-a-question"]], "Exercise (FH): Extract Measurement Loop Into Function": [[586, "exercise-fh-extract-measurement-loop-into-function"]], "Exercise (FH): Replace Sensor": [[587, "exercise-fh-replace-sensor"]], "Exercise (FH): Write A Sensor Class: RandomSensor": [[588, "exercise-fh-write-a-sensor-class-randomsensor"]], "New Sensor Class: RandomSensor": [[588, "new-sensor-class-randomsensor"]], "Implementation Details": [[588, "implementation-details"]], "New Program: random-temperature.cpp": [[588, "new-program-random-temperature-cpp"]], "FH Sensor OO (First Try)": [[589, "fh-sensor-oo-first-try"]], "C++ Exercises": [[590, "c-exercises"]], "Exercise Projects": [[590, "exercise-projects"]], "Exercise: LEDStripeDisplay_nopoly (Non-Polymorphic)": [[591, "exercise-ledstripedisplay-nopoly-non-polymorphic"]], "Topics Covered": [[591, "topics-covered"], [592, "topics-covered"], [593, "topics-covered"], [594, "topics-covered"], [595, "topics-covered"], [596, "topics-covered"], [597, "topics-covered"], [600, "topics-covered"]], "Exercise: Hysteresis_nopoly (Non-Polymorphic)": [[592, "exercise-hysteresis-nopoly-non-polymorphic"]], "Exercise: AveragingSensor_nopoly (Non-Polymorphic)": [[593, "exercise-averagingsensor-nopoly-non-polymorphic"]], "Exercise: ConstantSensor_nopoly (Non-Polymorphic)": [[594, "exercise-constantsensor-nopoly-non-polymorphic"]], "Exercise: MockSensor_nopoly (Non-Polymorphic)": [[595, "exercise-mocksensor-nopoly-non-polymorphic"]], "Exercise: RandomSensor_nopoly (Non-Polymorphic)": [[596, "exercise-randomsensor-nopoly-non-polymorphic"]], "Implementation Hint: Randomicity In C++": [[596, "implementation-hint-randomicity-in-c"]], "Implementation Hint: Initializer Lists": [[596, "implementation-hint-initializer-lists"]], "Exercise: Mocking Switch (Non-Polymorphic)": [[597, "exercise-mocking-switch-non-polymorphic"]], "OO Basics, Interfaces (Shapes)": [[598, "oo-basics-interfaces-shapes"]], "Exercise Table": [[598, "exercise-table"]], "Setup, Exam Procedure": [[598, "setup-exam-procedure"]], "Point": [[598, "point"]], "Point: Constructor and Getter Methods": [[598, "point-constructor-and-getter-methods"]], "Point: Default Constructor": [[598, "point-default-constructor"]], "Point: Static Method: equal()": [[598, "point-static-method-equal"]], "Point: operator==()": [[598, "point-operator"]], "Point: Method: move()": [[598, "point-method-move"]], "Point: operator+=()": [[598, "point-suite-operator-plus-equals"]], "Point: Static Method: add()": [[598, "point-static-method-add"]], "Point: operator+()": [[598, "point-suite-operator-plus"]], "Circle": [[598, "circle"]], "Circle: Constructor": [[598, "circle-constructor"]], "Circle: operator==()": [[598, "circle-operator"]], "Circle: Method: area()": [[598, "circle-method-area"]], "Square": [[598, "square"]], "Square: Constructor": [[598, "square-constructor"]], "Square: operator==()": [[598, "square-operator"]], "Square: Method: area()": [[598, "square-method-area"]], "Interface: Shape": [[598, "interface-shape"]], "Interface: Circle And Square Is-A Shape": [[598, "interface-circle-and-square-is-a-shape"]], "Interface: Can Compute Area Of Any Shape": [[598, "interface-can-compute-area-of-any-shape"]], "Working On Exercise Projects": [[599, "working-on-exercise-projects"]], "Clone Github Repository": [[599, "clone-github-repository"]], "Massage googletest Sub-Module": [[599, "massage-googletest-sub-module"]], "Build Directory: Create Makefiles With cmake": [[599, "build-directory-create-makefiles-with-cmake"]], "Build Directory: Build With make": [[599, "build-directory-build-with-make"]], "Build Directory: Run Tests": [[599, "build-directory-run-tests"]], "Exercise: Sensor Interface": [[600, "exercise-sensor-interface"]], "Problem: Polymorphic Thermometer Usage": [[600, "problem-polymorphic-thermometer-usage"]], "The Exercise": [[600, "the-exercise"]], "Exercise: OneWire Sensor Factory": [[601, "exercise-onewire-sensor-factory"]], "Fixture": [[601, "fixture"], [838, "fixture"]], "basic": [[601, "basic"]], "notfound": [[601, "notfound"]], "find_is_const": [[601, "find-is-const"]], "Testing In Isolation": [[601, "testing-in-isolation"]], "Testing In Reality": [[601, "testing-in-reality"]], "On The PC": [[601, "on-the-pc"]], "On The Target": [[601, "on-the-target"]], "Exercise: OneWire Sensor Class": [[602, "exercise-onewire-sensor-class"]], "Download Monolithic Sensor Implementation": [[602, "download-monolithic-sensor-implementation"]], "Test Monolithic Implementation": [[602, "test-monolithic-implementation"]], "class W1Sensor": [[602, "class-w1sensor"]], "Exercise: Algorithms": [[603, "exercise-algorithms"]], "Copy Into std::vector": [[603, "copy-into-std-vector"]], "Find Element In std::vector": [[603, "find-element-in-std-vector"]], "Sort In-Place": [[603, "sort-in-place"]], "Sort Into A Copy": [[603, "sort-into-a-copy"]], "Exercise: Generic Filter": [[604, "exercise-generic-filter"]], "Exercise: Filter Elements Greater Than 10": [[605, "exercise-filter-elements-greater-than-10"]], "Exercise: Filter Odd Elements": [[606, "exercise-filter-odd-elements"]], "C++ Exercises: Standard Template Library": [[607, "c-exercises-standard-template-library"]], "Exercise: std::map<>": [[608, "exercise-std-map"]], "Exercises: Sensor Repository (std::map)": [[609, "exercises-sensor-repository-std-map"]], "Insert - Not Overwriting Existing Elements": [[610, "insert-not-overwriting-existing-elements"]], "Insert - Sunny Case": [[611, "insert-sunny-case"]], "Lookup - Not Found": [[612, "lookup-not-found"]], "Lookup - Sunny Case": [[613, "lookup-sunny-case"]], "Memory Leaks?": [[614, "memory-leaks"]], "Remove - Not Found": [[615, "remove-not-found"]], "Remove - Sunny Case": [[616, "remove-sunny-case"]], ".size() Is const": [[617, "size-is-const"]], "Exercise: Uniquify A Sequence": [[618, "exercise-uniquify-a-sequence"]], "Exercise: std::vector<>": [[619, "exercise-std-vector"]], "C++: TODO List": [[620, "c-todo-list"]], "Structural": [[620, "structural"]], "STL, Containers and Algorithms": [[620, "stl-containers-and-algorithms"]], "Templates/Overloading": [[620, "templates-overloading"]], "Functors: Overloading the Function Call Operator": [[620, "functors-overloading-the-function-call-operator"]], "Threads": [[620, "threads"]], "C++ >= 11": [[620, "c-11"]], "UserDB Exercise": [[620, "userdb-exercise"]], "Complete Transcription of C++11": [[620, "complete-transcription-of-c-11"]], "Exercise series": [[620, "exercise-series"]], "Code: C++: Class Templates": [[621, "code-c-class-templates"]], "Screenplay: C++: Class Templates": [[622, "screenplay-c-class-templates"]], "C++: Class Templates": [[623, "c-class-templates"]], "Code: C++: Dynamic Memory": [[624, "code-c-dynamic-memory"]], "Screenplay: C++: Dynamic Memory": [[625, "screenplay-c-dynamic-memory"]], "C: malloc()/free()": [[625, "c-malloc-free"]], "valgrind: Memory Leak": [[625, "valgrind-memory-leak"]], "valgrind: Array Bounds Write": [[625, "valgrind-array-bounds-write"]], "C++: new, delete": [[625, "c-new-delete"]], "C++: new, delete on Arrays": [[625, "c-new-delete-on-arrays"]], "valgrind: delete Mismatch": [[625, "valgrind-delete-mismatch"]], "C++: Dynamic Memory": [[626, "c-dynamic-memory"]], "Code: C++: Global Objects Initialization": [[627, "code-c-global-objects-initialization"]], "Screenplay: C++: Global Objects Initialization": [[628, "screenplay-c-global-objects-initialization"]], "Constructor and Destructor Order in Same File": [[628, "constructor-and-destructor-order-in-same-file"]], "Constructor and Destructor Order Across Files": [[628, "constructor-and-destructor-order-across-files"]], "Constructor and Destructor Order Across Files: Dependencies, Bugs": [[628, "constructor-and-destructor-order-across-files-dependencies-bugs"]], "C++: Global Objects Initialization": [[629, "c-global-objects-initialization"]], "Code: C++: Inheritance, Interfaces, virtual": [[630, "code-c-inheritance-interfaces-virtual"]], "Screenplay: C++: Inheritance, Interfaces, virtual": [[631, "screenplay-c-inheritance-interfaces-virtual"]], "C++: Inheritance, Interfaces, virtual": [[632, "c-inheritance-interfaces-virtual"]], "Code: C++: Ownership/RAII": [[633, "code-c-ownership-raii"]], "Screenplay: C++: Ownership/RAII": [[634, "screenplay-c-ownership-raii"]], "Allocate in Constructor": [[634, "allocate-in-constructor"]], "Deallocate in Destructor - Ownership": [[634, "deallocate-in-destructor-ownership"]], "Ownership: 2 x non-const": [[634, "ownership-2-x-non-const"]], "Ownership: const Method": [[634, "ownership-const-method"]], "Ownership: 2 x const": [[634, "ownership-2-x-const"]], "C++: Ownership/RAII": [[635, "c-ownership-raii"]], "Code: C++: STL Containers (Intro)": [[636, "code-c-stl-containers-intro"]], "Screenplay: C++: STL Containers (Intro)": [[637, "screenplay-c-stl-containers-intro"]], "Pointer Arithmetics Recap": [[637, "pointer-arithmetics-recap"]], "Container: std::vector": [[637, "container-std-vector"]], "Algorithm: std::vector and Naive Copy": [[637, "algorithm-std-vector-and-naive-copy"]], "Algorithm: std::vector and std::copy<>": [[637, "algorithm-std-vector-and-std-copy"]], "Container: std::list": [[637, "container-std-list"]], "Container: std::map": [[637, "container-std-map"]], "C++: STL Containers (Intro)": [[638, "c-stl-containers-intro"]], "Code: C++: Templates vs. Interfaces": [[639, "code-c-templates-vs-interfaces"]], "Screenplay: C++: Templates vs. Interfaces": [[640, "screenplay-c-templates-vs-interfaces"]], "C++: Templates vs. Interfaces": [[641, "c-templates-vs-interfaces"]], "Background": [[643, "background"]], "History": [[643, "history"], [1082, "history"]], "Content": [[643, "content"]], "Object Oriented Programming In Good Ol\u2019 C": [[644, "object-oriented-programming-in-good-ol-c"]], "C Is Simple, So Why C++?": [[644, "c-is-simple-so-why-c"]], "struct point: Something That Looks Like A Point": [[644, "struct-point-something-that-looks-like-a-point"]], "Good Style: Explicit Initialization Functions": [[644, "good-style-explicit-initialization-functions"]], "Comparison Functions: (In)Equality": [[644, "comparison-functions-in-equality"]], "Moving Points": [[644, "moving-points"]], "Vector Addition and Subtraction": [[644, "vector-addition-and-subtraction"]], "Distance Of Two Points": [[644, "distance-of-two-points"]], "Length Of A Point\u2019s Position Vector": [[644, "length-of-a-point-s-position-vector"]], "Summary: Is C Good Enough?": [[644, "summary-is-c-good-enough"]], "Copy Constructor, Assignment Operator": [[645, "copy-constructor-assignment-operator"]], "Compiler Generated Copy Constructor": [[645, "compiler-generated-copy-constructor"]], "Rule": [[645, null], [648, null], [748, "rule"]], "Manually Written Copy Constructor And Assignment Operator": [[645, "manually-written-copy-constructor-and-assignment-operator"]], "Classes and Objects": [[646, "classes-and-objects"]], "Introducing C++: class point": [[646, "introducing-c-class-point"]], "Access Specifiers: public And private": [[646, "access-specifiers-public-and-private"]], "Default Constructor": [[646, "default-constructor"], [648, "default-constructor"], [661, "default-constructor"], [662, "default-constructor"], [663, "default-constructor"], [664, "default-constructor"]], "Custom Constructor: Usage": [[646, "custom-constructor-usage"]], "Custom Constructor: Implementation": [[646, "custom-constructor-implementation"]], "Access Methods For Otherwise Private Members": [[646, "access-methods-for-otherwise-private-members"]], "Methods: Operations On An Object": [[646, "methods-operations-on-an-object"]], "And printf()?!": [[646, "and-printf"]], "Custom Constructor": [[647, "custom-constructor"], [661, "custom-constructor"]], "Constructors: why? (1)": [[647, "constructors-why-1"]], "Constructors: why? (2)": [[647, "constructors-why-2"]], "Constructors: Implementation - Inline": [[647, "constructors-implementation-inline"]], "Constructors: Implementation - Out-of-Line": [[647, "constructors-implementation-out-of-line"]], "Compiler Generated Default Constructor": [[648, "compiler-generated-default-constructor"]], "Compiler Generated Default Constructor: Pitfall: Built-In Types": [[648, "compiler-generated-default-constructor-pitfall-built-in-types"]], "Manually Written Default Constructor": [[648, "manually-written-default-constructor"]], "What If User-Defined Constructors Are In Place?": [[648, "what-if-user-defined-constructors-are-in-place"]], "More Constructors, Destructors": [[649, "more-constructors-destructors"]], "Default Constructor (1)": [[649, "default-constructor-1"]], "Default Constructor (2)": [[649, "default-constructor-2"]], "Object Lifecycle - Destructor": [[649, "object-lifecycle-destructor"]], "Destructors (1)": [[649, "destructors-1"]], "Destructors (2)": [[649, "destructors-2"]], "Destructors (3)": [[649, "destructors-3"]], "Destructors (4)": [[649, "destructors-4"]], "Constructors: Member Initialization": [[651, "constructors-member-initialization"]], "Member Initialization? Assignment?": [[651, "member-initialization-assignment"]], "Real Initialization: Initializer List": [[651, "real-initialization-initializer-list"]], "Why Is That Important?": [[651, "why-is-that-important"]], "Why Else Is That Important?": [[651, "why-else-is-that-important"]], "Object Copy (And Resource Management): There Be Dragons": [[652, "object-copy-and-resource-management-there-be-dragons"]], "Copy in C": [[652, "copy-in-c"]], "Copy Constructor": [[652, "copy-constructor"]], "Pointer Members, And Compiler Generated Copy": [[652, "pointer-members-and-compiler-generated-copy"]], "Why? Dragons Everywhere!": [[652, "why-dragons-everywhere"]], "Solution: Write Copy Constructor Manually": [[652, "solution-write-copy-constructor-manually"]], "Copy Constructor: Recursive/Memberwise": [[652, "copy-constructor-recursive-memberwise"]], "Assignment Operator": [[652, "assignment-operator"]], "Assignment Operator and Pointer Members: Memory Leak": [[652, "assignment-operator-and-pointer-members-memory-leak"]], "Assignment Operator and Pointer Members: Memory Leak, Straighforward Fix": [[652, "assignment-operator-and-pointer-members-memory-leak-straighforward-fix"]], "Assignment Operator and Pointer Members: Self-Assignment": [[652, "assignment-operator-and-pointer-members-self-assignment"]], "Assignment Operator: Self Assignment, Correctly Implemented": [[652, "assignment-operator-self-assignment-correctly-implemented"]], "Overloading": [[653, "overloading"]], "Functions in C": [[653, "functions-in-c"]], "Functions in C++ \u2014 Overloading": [[653, "functions-in-c-overloading"]], "Underlying Mechanism: Name Mangling": [[653, "underlying-mechanism-name-mangling"]], "Overloading Class Methods: Just The Same": [[653, "overloading-class-methods-just-the-same"]], "Objects - Data and Methods": [[654, "objects-data-and-methods"]], "class point Again": [[654, "class-point-again"]], "Simple Methods: Access Methods (\u201cGetters\u201d)": [[654, "simple-methods-access-methods-getters"]], "How Are Members Accessed Inside Methods?": [[654, "how-are-members-accessed-inside-methods"]], "const Methods": [[654, "const-methods"], [655, "const-methods"]], "Non const Methods": [[654, "non-const-methods"]], "const": [[655, "const"]], "const: Immutable Variable": [[655, "const-immutable-variable"]], "const Correctness vs. Pollution": [[655, "const-correctness-vs-pollution"]], "this": [[656, "this"]], "Hidden Pointer: this (1)": [[656, "hidden-pointer-this-1"]], "Hidden Pointer: this (2)": [[656, "hidden-pointer-this-2"]], "Explicit this Pointer": [[656, "explicit-this-pointer"]], "Pass By Copy/Reference": [[657, "pass-by-copy-reference"]], "Pointers Can Be Left Uninitialized": [[657, "pointers-can-be-left-uninitialized"]], "References Cannot (Easily) Be Left Uninitialized": [[657, "references-cannot-easily-be-left-uninitialized"]], "Copy? Reference? C? Pointers!": [[657, "copy-reference-c-pointers"]], "C++: True References": [[657, "c-true-references"]], "And const? Pointers?": [[657, "and-const-pointers"]], "const References": [[657, "const-references"]], "const Reference: Substitute For \u201cPass by Copy\u201d": [[657, "const-reference-substitute-for-pass-by-copy"]], "static Methods": [[658, "static-methods"]], "Methods without Object": [[658, "methods-without-object"]], "Naive Implementation: Global Function": [[658, "naive-implementation-global-function"]], "C++: static Method": [[658, "c-static-method"]], "static Member Variables": [[659, "static-member-variables"]], "Good Old C: extern Global Variables": [[659, "good-old-c-extern-global-variables"]], "ODR: One Definition Rule": [[659, "odr-one-definition-rule"]], "(A Litte) More Overengineered: Declaration In Header File": [[659, "a-litte-more-overengineered-declaration-in-header-file"]], "Same Inside A Class: static Member Variable": [[659, "same-inside-a-class-static-member-variable"]], "Sideway: Definition In A Header File?": [[659, "sideway-definition-in-a-header-file"]], "static inline Member Defnition (Since C++17)": [[659, "static-inline-member-defnition-since-c-17"]], "Implementing (In)Equality": [[660, "implementing-in-equality"]], "Implementing (In)Equality: Global Function": [[660, "implementing-in-equality-global-function"]], "Implementing (In)Equality: Object Method": [[660, "implementing-in-equality-object-method"]], "Implementing Arithmetic: + (Vector Addition)": [[660, "implementing-arithmetic-vector-addition"]], "Implementing Arithmetic: + (Vector Addition): Global Function": [[660, "implementing-arithmetic-vector-addition-global-function"]], "Implementing Arithmetic: + (Vector Addition): Object Method": [[660, "implementing-arithmetic-vector-addition-object-method"]], "Implementing Arithmetic: += (Moving A Point)": [[660, "implementing-arithmetic-moving-a-point"]], "Implementing ostream Shift: std::cout << ...": [[660, "implementing-ostream-shift-std-cout"]], "Exercise (FH): class cuboid": [[661, "exercise-fh-class-cuboid"]], "Building class cuboid Upon class point3d": [[661, "building-class-cuboid-upon-class-point3d"]], "(In-)Equality": [[661, "in-equality"], [662, "in-equality"], [663, "in-equality"], [664, "in-equality"]], "+=": [[661, "id2"], [662, "id1"], [663, "id2"], [664, "id2"]], "-=": [[661, "id4"], [663, "id4"]], "+": [[661, "id6"], [662, "id2"], [663, "id6"], [664, "id3"]], "-": [[661, "id8"], [663, "id8"]], "<< (std::ostream)": [[661, "std-ostream"], [662, "std-ostream"], [663, "std-ostream"], [664, "std-ostream"]], "Surface": [[661, "surface"]], "Volume": [[661, "volume"]], "Exercise (FH): class point": [[662, "exercise-fh-class-point"]], "Initial Build": [[662, "initial-build"]], "Initial Test Run": [[662, "initial-test-run"]], "Extending class point: More Unit Tests": [[662, "extending-class-point-more-unit-tests"]], "Access Methods": [[662, "access-methods"]], "Unary -": [[662, "unary"], [663, "unary"]], "Exercise (FH): class point3d": [[663, "exercise-fh-class-point3d"]], "Building class rectangle Upon class point": [[663, "building-class-rectangle-upon-class-point"], [664, "building-class-rectangle-upon-class-point"]], "Coordinates": [[663, "coordinates"], [664, "coordinates"]], "Absolute Value": [[663, "absolute-value"]], "Distance Between Two Points": [[663, "distance-between-two-points"]], "Exercise (FH): class rectangle": [[664, "exercise-fh-class-rectangle"]], "Width, Height, Area": [[664, "width-height-area"]], "Error Handling: if - else if - else": [[666, "error-handling-if-else-if-else"]], "try - catch": [[667, "try-catch"]], "try - Block": [[667, "try-block"]], "catch - Block": [[667, "catch-block"]], "Standard Library: Exception-Hierarchy": [[667, "standard-library-exception-hierarchy"]], "Custom Exceptions (1)": [[667, "custom-exceptions-1"]], "Custom Exceptions (2)": [[667, "custom-exceptions-2"]], "Throwing Exceptions - throw": [[667, "throwing-exceptions-throw"]], "Last Words": [[667, "last-words"], [670, "last-words"]], "Function Templates": [[669, "function-templates"]], "Origin: Duplicated Code": [[669, "origin-duplicated-code"]], "A simple Function-Template": [[669, "a-simple-function-template"]], "More Templates from the STL": [[669, "more-templates-from-the-stl"]], "Class Templates": [[670, "class-templates"]], "Does This Work With Classes?": [[670, "does-this-work-with-classes"]], "Example: point as a Class Template (1)": [[670, "example-point-as-a-class-template-1"]], "Example: point as a Class Template (2)": [[670, "example-point-as-a-class-template-2"]], "Screenplay: std::copy<>() From <algorithm>": [[672, "screenplay-std-copy-from-algorithm"]], "Screenplay: Pointer Arithmetic, And Algorithms": [[673, "screenplay-pointer-arithmetic-and-algorithms"]], "Screenplay: Pointer Arithmetic Basics": [[674, "screenplay-pointer-arithmetic-basics"]], "Screenplay: Pointer Difference": [[675, "screenplay-pointer-difference"]], "Screenplay: Out Of Range Errors": [[676, "screenplay-out-of-range-errors"]], "Standard Template Library: Basics": [[677, "standard-template-library-basics"]], "Containers, Iterators, Algorithms": [[677, "containers-iterators-algorithms"]], "Pointer Increment and Decrement": [[677, "pointer-increment-and-decrement"]], "Out Of Range Errors (The Spirit Of C)": [[677, "out-of-range-errors-the-spirit-of-c"]], "Pointer Difference": [[677, "pointer-difference"]], "Step Width? (1)": [[677, "step-width-1"]], "Step Width? (2)": [[677, "step-width-2"]], "And Arbitrary Data Types?": [[677, "and-arbitrary-data-types"]], "Enter Algorithms (On Good Old C Arrays)": [[677, "enter-algorithms-on-good-old-c-arrays"]], "STL Algorithms": [[677, "stl-algorithms"]], "STL Containers": [[677, "stl-containers"]], "std::vector (And std::copy())": [[678, "std-vector-and-std-copy"]], "Dynamicity Details": [[678, "dynamicity-details"]], "STL Iterators: Pointer Arithmetic On A std::vector<>": [[678, "stl-iterators-pointer-arithmetic-on-a-std-vector"]], "Algorithms And Containers : std::copy": [[678, "algorithms-and-containers-std-copy"]], "Screenplay: std::vector And std::copy()": [[679, "screenplay-std-vector-and-std-copy"]], "std::vector<> Into C Array": [[679, "std-vector-into-c-array"]], "Copying Into std::vector (Without Allocation)": [[679, "copying-into-std-vector-without-allocation"]], "Solution 1: Pre-allocate Destination": [[679, "solution-1-pre-allocate-destination"]], "Solution 2: std::back_insert_iterator": [[679, "solution-2-std-back-insert-iterator"]], "Screenplay: std::vector Basics": [[680, "screenplay-std-vector-basics"]], "Screenplay: std::vector, And Pointer Arithmetics": [[681, "screenplay-std-vector-and-pointer-arithmetics"]], "binary_search<>: On Sorted Sequence": [[682, "binary-search-on-sorted-sequence"]], "More Intelligent Search": [[682, "more-intelligent-search"], [688, "more-intelligent-search"]], "copy<>": [[683, "copy"]], "find<>: Sequential Search, by Equality": [[684, "find-sequential-search-by-equality"]], "Basic Usage": [[684, "basic-usage"], [804, "basic-usage"], [970, "basic-usage"], [1142, "basic-usage"]], "Not Found?": [[684, "not-found"]], "find_if<>: Sequential Search, Customizable": [[685, "find-if-sequential-search-customizable"]], "if, Using a Plain Function": [[685, "if-using-a-plain-function"]], "if, Using a Functor Class": [[685, "if-using-a-functor-class"]], "for_each<>": [[686, "for-each"]], "Basic Algorithms": [[687, "basic-algorithms"]], "Sorted Arrays": [[687, "sorted-arrays"]], "lower_bound<>: On Sorted Sequence": [[688, "lower-bound-on-sorted-sequence"]], "reverse<>: Reversing In-Place": [[689, "reverse-reversing-in-place"]], "reverse_copy<>: Copying and Reversing": [[690, "reverse-copy-copying-and-reversing"]], "sort<>": [[691, "sort"]], "Algorithm: std::sort": [[691, "algorithm-std-sort"]], "Algorithm: std::sort, custom comparison": [[691, "algorithm-std-sort-custom-comparison"]], "Sequential Containers": [[692, "sequential-containers"], [693, "sequential-containers"]], "Common Characteristics": [[692, "common-characteristics"]], "list<>": [[694, "list"]], "Insertion and Deletion": [[694, "insertion-and-deletion"]], "vector<>": [[695, "vector"]], "Characteristics": [[695, "characteristics"]], "Modification at the Back": [[695, "modification-at-the-back"]], "Insertion": [[695, "insertion"]], "Example": [[695, "example"], [1157, "example"]], "Associative Containers": [[696, "associative-containers"], [697, "associative-containers"]], "Type Instantiation": [[698, "type-instantiation"]], "Filling The Container": [[698, "filling-the-container"]], "Inserting Elements": [[698, "inserting-elements"]], "Searching": [[698, "searching"]], "Screenplay: std::map Initialization And Inserting": [[699, "screenplay-std-map-initialization-and-inserting"]], "Definining The Type": [[699, "definining-the-type"]], "Initialization": [[699, "initialization"], [722, "initialization"]], "Screenplay: Inserting Elements": [[700, "screenplay-inserting-elements"]], "Subscript Operator": [[700, "subscript-operator"]], "insert()": [[700, "insert"]], "Screenplay: Removing (Erasing) Elements": [[701, "screenplay-removing-erasing-elements"]], "By Pointer (Err, Iterator)": [[701, "by-pointer-err-iterator"]], "By Key": [[701, "by-key"]], "Screenplay: Searching": [[702, "screenplay-searching"]], "find(key)": [[702, "find-key"]], "[key]": [[702, "key"]], "at(key)": [[702, "at-key"]], "multimap<>": [[703, "multimap"]], "Allocator Basics": [[704, "allocator-basics"]], "STL: Exercises": [[706, "stl-exercises"]], "Exercise: Reverse a String": [[707, "exercise-reverse-a-string"]], "Exercise: Reverse A String": [[708, "exercise-reverse-a-string"]], "Solution: Reverse a String": [[709, "solution-reverse-a-string"]], "Naive": [[709, "naive"]], "Using std::reverse<>": [[709, "using-std-reverse"]], "Using std::reverse_copy<>": [[709, "using-std-reverse-copy"]], "Dynamic Memory (To Be Done)": [[711, "dynamic-memory-to-be-done"]], "Inheritance Basics": [[713, "inheritance-basics"]], "Plain (Base) Class": [[713, "plain-base-class"], [714, "plain-base-class"]], "Inheriting (Deriving) From Base": [[713, "inheriting-deriving-from-base"]], "Derived is-a Base?": [[713, "derived-is-a-base"]], "Destructors And Inheritance": [[714, "destructors-and-inheritance"]], "Derived Class, And Destructor": [[714, "derived-class-and-destructor"]], "And Base Class Conversion?": [[714, "and-base-class-conversion"]], "C++ \u201cInterfaces\u201d": [[716, "c-interfaces"]], "Bringing It All Together": [[716, "bringing-it-all-together"]], "Polymorphic Usage Of Objects": [[717, "polymorphic-usage-of-objects"]], "What Larger Systems Want": [[717, "what-larger-systems-want"]], "Pitfall \u27f6 Pure Virtual Methods": [[717, "pitfall-longrightarrow-pure-virtual-methods"]], "Pure Virtual Method": [[717, "pure-virtual-method"]], "Inheritance: private, protected (Implementation Inheritance)": [[718, "inheritance-private-protected-implementation-inheritance"]], "Virtual Destructors": [[719, "virtual-destructors"]], "Is-A Relationships And Destructors": [[719, "is-a-relationships-and-destructors"]], "Pure Virtual Destructor?": [[719, "pure-virtual-destructor"]], "Virtual Methods": [[720, "virtual-methods"]], "Simple Is-A Relationship Is Not Enough": [[720, "simple-is-a-relationship-is-not-enough"]], "Enter virtual": [[720, "enter-virtual"]], "Caution: virtual": [[720, "caution-virtual"]], "std::string": [[722, "std-string"]], "Convenient Operators: Addition, Comparison, And Such": [[722, "convenient-operators-addition-comparison-and-such"]], "Conversion To Numbers: std::sto*()": [[722, "conversion-to-numbers-std-sto"]], "Conversion To String: std::to_string()": [[722, "conversion-to-string-std-to-string"]], "Searching: s.find()": [[722, "searching-s-find"]], "Substrings: s.substr()": [[722, "substrings-s-substr"]], "Exercise: Paint the American Flag Onto Standard Output": [[723, "exercise-paint-the-american-flag-onto-standard-output"]], "FH/Moodle Quiz: C++": [[724, "fh-moodle-quiz-c"]], "Exercises: Miscellaneous": [[725, "exercises-miscellaneous"]], "Exercise: Parse A Line From /etc/passwd": [[726, "exercise-parse-a-line-from-etc-passwd"]], "Library Function (lib/parse-passwd.cpp)": [[726, "library-function-lib-parse-passwd-cpp"]], "Tests (tests/suite-passwd-line.cpp)": [[726, "tests-tests-suite-passwd-line-cpp"]], "Program (bin/read-passwd.cpp)": [[726, "program-bin-read-passwd-cpp"]], "Hints": [[726, "hints"]], "How To Proceed": [[726, "how-to-proceed"]], "User Usage (tests/suite-passwd-user.cpp)": [[726, "user-usage-tests-suite-passwd-user-cpp"]], "PasswdError Usage (tests/suite-passwd-error.cpp)": [[726, "passwderror-usage-tests-suite-passwd-error-cpp"]], "std::string Usage": [[726, "std-string-usage"]], "Exercise: Sum of Integers Coming From cin": [[727, "exercise-sum-of-integers-coming-from-cin"]], "Exercises: User Database": [[728, "exercises-user-database"]], "Exercise: Access Methods for Members": [[729, "exercise-access-methods-for-members"]], "Exercise: const Members": [[730, "exercise-const-members"]], "Exercise: Use const": [[731, "exercise-use-const"]], "Exercise: Default Constructor (was: Arrays of Objects)": [[732, "exercise-default-constructor-was-arrays-of-objects"]], "Exercise: Simple Method (Users Age By n Years)": [[733, "exercise-simple-method-users-age-by-n-years"]], "Exercise: Transform struct User Into A Class": [[734, "exercise-transform-struct-user-into-a-class"]], "Exercise: Insert a User into UserDB": [[735, "exercise-insert-a-user-into-userdb"]], "Exercise: Search a User By Lastname (std::find_if)": [[736, "exercise-search-a-user-by-lastname-std-find-if"]], "Exercise: Search, \u201cUser Not Found\u201d Exception": [[737, "exercise-search-user-not-found-exception"]], "What\u2019s Wrong?": [[737, "what-s-wrong"]], "Exercise: Search a User By Lastname": [[738, "exercise-search-a-user-by-lastname"]], "Exercise: Use std::vector in UserDB": [[739, "exercise-use-std-vector-in-userdb"]], "History, Background": [[742, "history-background"]], "Make C++ Great Again": [[742, "make-c-great-again"]], "The \u201cNew\u201d C++": [[742, "the-new-c"]], "A Live-Hacked Tour Around The New C++": [[743, "a-live-hacked-tour-around-the-new-c"]], "C++03 To-Do List Version": [[743, "c-03-to-do-list-version"]], "Real Container Initialization": [[743, "real-container-initialization"]], "Long iterator Type Names \u27f6 auto": [[743, "long-iterator-type-names-longrightarrow-auto"]], "More auto: Unpacking std::pair": [[743, "more-auto-unpacking-std-pair"]], "Pitfall: Plain auto Creates Copy \u27f6 const auto&": [[743, "pitfall-plain-auto-creates-copy-longrightarrow-const-auto"]], "Iterators Are So Old-School: Range Based For": [[743, "iterators-are-so-old-school-range-based-for"]], "Still Too Old-School: Want Python\u2019s Tuple Unpacking": [[743, "still-too-old-school-want-python-s-tuple-unpacking"]], "What If To-Do List Items Can Really Do Something? \u27f6 Functions": [[743, "what-if-to-do-list-items-can-really-do-something-longrightarrow-functions"]], "Function Pointers Are Old-School \u27f6 std::function": [[743, "function-pointers-are-old-school-longrightarrow-std-function"]], "Definitely Not Old-School: Lambda": [[743, "definitely-not-old-school-lambda"]], "Inevitable: Threads": [[743, "inevitable-threads"]], "Unions? std::variant!": [[743, "unions-std-variant"]], "Wrapping All That Into A Class": [[743, "wrapping-all-that-into-a-class"]], "Architectural Considerations: No Implementation Inheritance Wanted": [[743, "architectural-considerations-no-implementation-inheritance-wanted"]], "Wrapping Up: Initializer": [[743, "wrapping-up-initializer"]], "C++03 enum Types: Motivation": [[744, "c-03-enum-types-motivation"]], "C++03 enum Types: Problems": [[744, "c-03-enum-types-problems"]], "C++11 enum class": [[744, "c-11-enum-class"]], "C++11 enum class: Underlying Type": [[744, "c-11-enum-class-underlying-type"]], "Brace Initialization (Uniform Initialization)": [[745, "brace-initialization-uniform-initialization"]], "std::initializer_list: Brace Initialization, Implementor\u2019s View": [[746, "std-initializer-list-brace-initialization-implementor-s-view"]], "std::initializer_list": [[746, "std-initializer-list"]], "Direct Usage": [[746, "direct-usage"]], "Custom Class That Supports Brace Initialization": [[746, "custom-class-that-supports-brace-initialization"]], "Brace Initialization: Introduction": [[747, "brace-initialization-introduction"]], "Motivation: Inconsistent Initialization Styles": [[747, "motivation-inconsistent-initialization-styles"]], "Motivation: Integral Types Initialization": [[747, "motivation-integral-types-initialization"]], "Motivation: Aggregate Initialization": [[747, "motivation-aggregate-initialization"]], "Motivation: Object Initialization/Constructor": [[747, "motivation-object-initialization-constructor"]], "Motivation: Container Initialization (Missing Pre C++11)": [[747, "motivation-container-initialization-missing-pre-c-11"]], "Motivation: Member Array Initialization": [[747, "motivation-member-array-initialization"]], "Motivation: Heap Array Initialization": [[747, "motivation-heap-array-initialization"]], "Solution: Brace Initialization In C++11": [[747, "solution-brace-initialization-in-c-11"]], "Good: Refuses To Narrow Built-In Types": [[747, "good-refuses-to-narrow-built-in-types"]], "Brace Initialization: A Mess": [[748, "brace-initialization-a-mess"]], "Explicit Constructor And Brace Initialization": [[748, "explicit-constructor-and-brace-initialization"]], "Ambiguity: Explicit And std::initializer_list Constructor": [[748, "ambiguity-explicit-and-std-initializer-list-constructor"]], "Realistic Example: std::vector: Two int (Explicit)": [[748, "realistic-example-std-vector-two-int-explicit"]], "Realistic Example: std::vector: Two int (std::initializer_list)": [[748, "realistic-example-std-vector-two-int-std-initializer-list"]], "Nicolai Josuttis, Complaining About C++": [[748, "nicolai-josuttis-complaining-about-c"]], "Delegating Constructor: Motivation": [[749, "delegating-constructor-motivation"]], "Delegating Constructor: Solution": [[749, "delegating-constructor-solution"]], "constexpr": [[750, "constexpr"]], "Basic Usage: Expressions": [[750, "basic-usage-expressions"]], "constexpr Functions": [[750, "constexpr-functions"]], "Recursive constexpr": [[750, "recursive-constexpr"]], "constexpr Objects": [[750, "constexpr-objects"]], "Afterword, Further Reading": [[751, "afterword-further-reading"]], "Uses In The Standard Library": [[751, "uses-in-the-standard-library"]], "Other Uses": [[751, "other-uses"]], "All Said \u27f6 Guidelines": [[751, "all-said-longrightarrow-guidelines"]], "Further Reading (Well, Videos \ud83d\ude09)": [[751, "further-reading-well-videos-wink"]], "Move Semantics, Rvalue References": [[752, "move-semantics-rvalue-references"]], "Alternative Livehacking": [[752, "alternative-livehacking"]], "SmartPtr With Move Semantics": [[753, "smartptr-with-move-semantics"]], "Return SmartPtr Object From Function": [[753, "return-smartptr-object-from-function"]], "Assign SmartPtr Object \u27f6 Moved": [[753, "assign-smartptr-object-longrightarrow-moved"]], "Implementing Move Semantics (class String, Live Hacked)": [[754, "implementing-move-semantics-class-string-live-hacked"]], "Copy Semantics, Revisited": [[754, "copy-semantics-revisited"]], "class String, Without Copy": [[754, "class-string-without-copy"]], "Return From Function: Copy (Or Move) Wanted": [[754, "return-from-function-copy-or-move-wanted"]], "Move Constructor? Move?": [[754, "move-constructor-move"]], "Implementing Move Constructor": [[754, "implementing-move-constructor"]], "And Move Assignment?": [[754, "and-move-assignment"]], "Implementing Move Assignment": [[754, "implementing-move-assignment"]], "Using Move Semantics In Own Code": [[755, "using-move-semantics-in-own-code"]], "Using String: class Person": [[755, "using-string-class-person"]], "What?": [[755, "what"], [931, "what"]], "Using Rvalue References Inside Function: std::move": [[755, "using-rvalue-references-inside-function-std-move"]], "Lvalues, Rvalues, And Moving": [[756, "lvalues-rvalues-and-moving"]], "Return Object Problem: Reference To Stack-Based Object": [[756, "return-object-problem-reference-to-stack-based-object"]], "Return Object Problem: Solution: Copy": [[756, "return-object-problem-solution-copy"]], "Move Semantics: Wish List": [[756, "move-semantics-wish-list"]], "Theory: Lvalues": [[756, "theory-lvalues"]], "Theory: Rvalues": [[756, "theory-rvalues"]], "Lvalue References (The Good Old Ones)": [[756, "lvalue-references-the-good-old-ones"]], "Rvalue References: So What Is That?": [[756, "rvalue-references-so-what-is-that"]], "Rvalue References As Function Parameters": [[756, "rvalue-references-as-function-parameters"]], "Use Of Rvalue References Parameter Inside A Function: Is An Lvalue": [[756, "use-of-rvalue-references-parameter-inside-a-function-is-an-lvalue"]], "Enter Move Constructor And Move Assignment": [[756, "enter-move-constructor-and-move-assignment"]], "Rules": [[756, null]], "Templates end with \u201c>>\u201d": [[757, "templates-end-with"]], "Duck Typing (Err, auto) Without A Duck": [[758, "duck-typing-err-auto-without-a-duck"]], "Most Basic Usage": [[758, "most-basic-usage"]], "auto Is Only The Basic Type": [[758, "auto-is-only-the-basic-type"]], "If You Want Reference, Say So!": [[758, "if-you-want-reference-say-so"]], "If You Want Const-Reference, Say So!": [[758, "if-you-want-const-reference-say-so"]], "If You Want Pointer, Say So!": [[758, "if-you-want-pointer-say-so"]], "And Arrays? Decay To Pointers!": [[758, "and-arrays-decay-to-pointers"]], "Concepts: Overview": [[760, "concepts-overview"]], "No Problem: Template Instantiation Chosen By Parameter Type": [[760, "no-problem-template-instantiation-chosen-by-parameter-type"]], "Problem: Template Instantiation Chosen By Parameter Type": [[760, "problem-template-instantiation-chosen-by-parameter-type"]], "Concepts To The Rescue": [[760, "concepts-to-the-rescue"]], "Syntactic Variations": [[760, "syntactic-variations"]], "toolcase-1-conceptless.cpp": [[761, "toolcase-1-conceptless-cpp"]], "toolcase-2-conceptless-error.cpp": [[762, "toolcase-2-conceptless-error-cpp"]], "toolcase-3-concept-integral.cpp": [[763, "toolcase-3-concept-integral-cpp"]], "Concepts: Links": [[764, "concepts-links"]], "Writing Your Own Concepts": [[765, "writing-your-own-concepts"]], "Starting Point: Good Old Function": [[765, "starting-point-good-old-function"]], "Need Template": [[765, "need-template"]], "Error: Requirement Not Fulfilled": [[765, "error-requirement-not-fulfilled"]], "Concept: has_size": [[765, "concept-has-size"]], "Concept: index_returns_double": [[765, "concept-index-returns-double"]], "example-1-good-old-func.cpp": [[766, "example-1-good-old-func-cpp"]], "example-2-need-template.cpp": [[767, "example-2-need-template-cpp"]], "example-4-concept-has-size.cpp": [[768, "example-4-concept-has-size-cpp"]], "example-5-concept-index-ret-double.cpp": [[769, "example-5-concept-index-ret-double-cpp"]], "Coroutines": [[770, "coroutines"]], "Coroutines: An Overview": [[771, "coroutines-an-overview"]], "Foreword": [[771, "foreword"]], "Prototypical Introductory Exampe: Fibonacci Numbers": [[771, "prototypical-introductory-exampe-fibonacci-numbers"]], "Step By Step: Simplest": [[771, "step-by-step-simplest"]], "Simplest: Incremental Fixing And Explaining": [[771, "simplest-incremental-fixing-and-explaining"]], "Driving Coroutines: Coroutine Anatomy": [[771, "driving-coroutines-coroutine-anatomy"]], "Driving Coroutines: Resuming": [[771, "driving-coroutines-resuming"]], "Suspension: Returning Control To Caller (co_yield)": [[771, "suspension-returning-control-to-caller-co-yield"]], "Playing Around: Iteration, Mimicking Python Iterator Protocol": [[771, "playing-around-iteration-mimicking-python-iterator-protocol"]], "Playing Around: Iteration, Range-Based-For": [[771, "playing-around-iteration-range-based-for"]], "Playing Around: Generic Generator": [[771, "playing-around-generic-generator"]], "Playing Around: Fibonacci Numbers, Generator Version": [[771, "playing-around-fibonacci-numbers-generator-version"]], "Pitfalls: Coroutines Are Stateful!": [[771, "pitfalls-coroutines-are-stateful"]], "fibo-generator.cpp": [[772, "fibo-generator-cpp"]], "fibonacci.cpp": [[773, "fibonacci-cpp"]], "generator.h": [[774, "generator-h"]], "generator-hello.cpp": [[775, "generator-hello-cpp"]], "simplest.cpp": [[776, "simplest-cpp"]], "suspend.cpp": [[777, "suspend-cpp"]], "suspend-iter.cpp": [[778, "suspend-iter-cpp"]], "suspend-next.cpp": [[779, "suspend-next-cpp"]], "= default": [[780, "default"]], "Problem: Default Constructor Not Automatically Generated": [[780, "problem-default-constructor-not-automatically-generated"]], "C++ < 11 Solution: Write Default Constructor \ud83d\ude20 \ud83d\udc4e": [[780, "c-11-solution-write-default-constructor-angry-thumbsdown"]], "C++ >= 11 Solution: = default": [[780, "c-11-solution-default"]], "= delete": [[781, "delete"]], "Problem: Copy Is Not Always Wanted": [[781, "problem-copy-is-not-always-wanted"]], "C++ < 11 Solution: Make Copy private": [[781, "c-11-solution-make-copy-private"]], "C++ >= 11 Solution: = delete Copy": [[781, "c-11-solution-delete-copy"]], "final": [[782, "final"]], "Architectural Decisions": [[782, "architectural-decisions"]], "Enter final: Architectural Cleanliness By Compiler": [[782, "enter-final-architectural-cleanliness-by-compiler"]], "New Language Features": [[783, "new-language-features"]], "Lambda": [[784, "lambda"], [785, "lambda"]], "Lambda To The Rescue": [[785, "lambda-to-the-rescue"]], "Excursion: Python Closures": [[785, "excursion-python-closures"]], "Same In C++: Capturing": [[785, "same-in-c-capturing"]], "So What Is That? (Answer: A Functor)": [[785, "so-what-is-that-answer-a-functor"]], "Capturing By Reference \u27f6 Careful!": [[785, "capturing-by-reference-longrightarrow-careful"]], "More About Capturing": [[785, "more-about-capturing"]], "Lambda: More Capturing": [[786, "lambda-more-capturing"]], "More Capture Syntax": [[786, "more-capture-syntax"]], "Capturing Explicitly, By Copy": [[786, "capturing-explicitly-by-copy"]], "Capturing Explicitly, By Reference": [[786, "capturing-explicitly-by-reference"]], "Mixed Explicit Capture": [[786, "mixed-explicit-capture"]], "Define Variables In Capture": [[786, "define-variables-in-capture"]], "Capturing All By Reference": [[786, "capturing-all-by-reference"]], "Capturing All By Copy": [[786, "capturing-all-by-copy"]], "Capturing All By Copy, Except Some By Reference": [[786, "capturing-all-by-copy-except-some-by-reference"]], "Capturing this": [[786, "capturing-this"]], "Live Hacking: Handwritten Functors (Too Much Boilerplate)": [[787, "live-hacking-handwritten-functors-too-much-boilerplate"]], "Original Lambda Demo Proggy": [[787, "original-lambda-demo-proggy"]], "Morph Lambda Into Handwritten Functor Class": [[787, "morph-lambda-into-handwritten-functor-class"]], "Live Hacking: Handwritten Functors, And Capturing By Reference (Pitfalls)": [[788, "live-hacking-handwritten-functors-and-capturing-by-reference-pitfalls"]], "Original, Handwritten Functor (By Copy)": [[788, "original-handwritten-functor-by-copy"]], "Possible Pitfall: Capturing A Reference": [[788, "possible-pitfall-capturing-a-reference"]], "Lifetime Of Temporary, Made Explicit": [[788, "lifetime-of-temporary-made-explicit"]], "Lifetime Of Temporary, Made Explicit \u27f6 \ud83d\ude91": [[788, "lifetime-of-temporary-made-explicit-longrightarrow-ambulance"]], "override": [[790, "override"]], "Correct Overriding \u2026": [[790, "correct-overriding"]], "\u2026 Is Very Hard": [[790, "is-very-hard"]], "More Problems Arise": [[790, "more-problems-arise"]], "Solution: override": [[790, "solution-override"]], "Range Based for Loops: Introduction": [[791, "range-based-for-loops-introduction"]], "Enter Range Based for Loops": [[791, "enter-range-based-for-loops"]], "Range Based for Loops, And auto": [[791, "range-based-for-loops-and-auto"]], "Case Study: std::map Iteration": [[791, "case-study-std-map-iteration"]], "Case Study: Range Based for On std::map": [[792, "case-study-range-based-for-on-std-map"]], "Gool Ol\u2019 Days: Iteration In C++ < 11": [[792, "gool-ol-days-iteration-in-c-11"]], "Basic C++11 Iteration: Range Based For, auto, And Initialization": [[792, "basic-c-11-iteration-range-based-for-auto-and-initialization"]], "Variation: Preventing Accidental Copy Using const auto&": [[792, "variation-preventing-accidental-copy-using-const-auto"]], "Pythonicity: Tuple Unpacking, err Structured Binding": [[792, "pythonicity-tuple-unpacking-err-structured-binding"]], "Structured Binding - Preventing Accidental Copy": [[792, "structured-binding-preventing-accidental-copy"]], "Ranges And Views: Good Or Bad?": [[793, "ranges-and-views-good-or-bad"]], "Dangling Iterator Protection": [[793, "dangling-iterator-protection"]], "Performance: views::drop Is Easy": [[793, "performance-views-drop-is-easy"]], "Performance: views::filter Is Not Easy": [[793, "performance-views-filter-is-not-easy"]], "Constraints: How To Read?": [[793, "constraints-how-to-read"]], "And drop()? std::vector Is Easy": [[793, "and-drop-std-vector-is-easy"]], "And drop()? std::list Is Not Easy": [[793, "and-drop-std-list-is-not-easy"]], "One Of Many Bugs, Introduced By .begin() Caching": [[793, "one-of-many-bugs-introduced-by-begin-caching"]], "Exceptions From Rules \u27f6 Dogmatic Don\u2019ts (Sigh, C++)": [[793, "exceptions-from-rules-longrightarrow-dogmatic-don-ts-sigh-c"]], "Ranges: Overview": [[795, "ranges-overview"]], "Ranges?": [[795, "ranges"]], "Containers And Views (Storage Behavior)": [[795, "containers-and-views-storage-behavior"]], "Pipe Syntax": [[795, "pipe-syntax"]], "Views As Parameters: Good Old Template": [[795, "views-as-parameters-good-old-template"]], "Views As Parameters: Abbreviated Function Template": [[795, "views-as-parameters-abbreviated-function-template"]], "Views As Parameters: Concepts": [[795, "views-as-parameters-concepts"]], "Available <ranges> Concepts": [[795, "available-ranges-concepts"]], "Ranges And Views: Links": [[796, "ranges-and-views-links"]], "Tuple Unpacking (Err, Structured Binding)": [[797, "tuple-unpacking-err-structured-binding"]], "Variations, Compatible Data Types": [[797, "variations-compatible-data-types"]], "struct: By Copy": [[797, "struct-by-copy"]], "struct: Reference": [[797, "struct-reference"]], "struct: By const Reference": [[797, "struct-by-const-reference"]], "std::tuple: By Copy": [[797, "std-tuple-by-copy"]], "std::tuple: By Reference": [[797, "std-tuple-by-reference"]], "std::tuple: By const Reference": [[797, "std-tuple-by-const-reference"]], "Arrays: By Copy": [[797, "arrays-by-copy"]], "Arrays: By Reference": [[797, "arrays-by-reference"]], "Arrays: By const Reference": [[797, "arrays-by-const-reference"]], "Smart Pointers: Closing Words": [[798, "smart-pointers-closing-words"]], "Shared Pointers: Closing Words": [[798, "shared-pointers-closing-words"]], "Smart Pointers (std::unique_ptr, std::shared_ptr)": [[799, "smart-pointers-std-unique-ptr-std-shared-ptr"]], "Why Smart Pointers?": [[800, "why-smart-pointers"]], "Recap: Constructors and Destructors": [[800, "recap-constructors-and-destructors"]], "(Trying To) Handwrite A Smart Pointer Class in C++ Before C++11": [[801, "trying-to-handwrite-a-smart-pointer-class-in-c-before-c-11"]], "Sensors To Manage": [[801, "sensors-to-manage"]], "Basic Resource Management, Operator Overloading": [[801, "basic-resource-management-operator-overloading"]], "Copy Constructor And Assignment Operator (And Default Ctor)": [[801, "copy-constructor-and-assignment-operator-and-default-ctor"]], "auto_ptr Style": [[801, "auto-ptr-style"]], "Explicit move() Method Maybe?": [[801, "explicit-move-method-maybe"]], "Stop!!!": [[801, "stop"]], "std::shared_ptr": [[802, "std-shared-ptr"]], "Spirit: Not Unique, But Shared (i.e. Reference Counted)": [[802, "spirit-not-unique-but-shared-i-e-reference-counted"]], "std::shared_ptr: Copy": [[802, "std-shared-ptr-copy"]], "std::shared_ptr vs. std::unique_ptr": [[802, "std-shared-ptr-vs-std-unique-ptr"]], "std::shared_ptr: Object Lifetime": [[802, "std-shared-ptr-object-lifetime"]], "std::shared_ptr: Juggling": [[802, "std-shared-ptr-juggling"]], "Demo: Basic Usage": [[802, "demo-basic-usage"]], "Demo: std::make_shared": [[802, "demo-std-make-shared"]], "Demo: Cyclic References": [[802, "demo-cyclic-references"]], "std::unique_ptr": [[803, "std-unique-ptr"]], "The Spirit Of std::unique_ptr": [[803, "the-spirit-of-std-unique-ptr"]], "Basic Usage: Prevent Leaks": [[803, "basic-usage-prevent-leaks"]], "Eliminate Chance Of Leakage \u27f6 Ownership": [[803, "eliminate-chance-of-leakage-longrightarrow-ownership"]], "Saving Keystrokes: std::make_unique<>()": [[803, "saving-keystrokes-std-make-unique"]], "Explicitly Acknowledging Ownership Transfer: std::move()": [[803, "explicitly-acknowledging-ownership-transfer-std-move"]], "Compiler Can Prove: Implicit Ownership Transfer": [[803, "compiler-can-prove-implicit-ownership-transfer"]], "How To Write Code That Can Take Ownership?": [[803, "how-to-write-code-that-can-take-ownership"]], "Manipulating Pointer Content": [[803, "manipulating-pointer-content"]], "std::weak_ptr": [[804, "std-weak-ptr"]], "Spirit: Borrowed Reference That Could Be Invalid": [[804, "spirit-borrowed-reference-that-could-be-invalid"]], "A Real-Life Example": [[804, "a-real-life-example"]], "Perfect Forwarding": [[805, "perfect-forwarding"]], "Universal References? Forwarding References? REALLY?": [[805, "universal-references-forwarding-references-really"]], "Universal Reference? Binds To Lvalues?": [[805, "universal-reference-binds-to-lvalues"]], "Enter Forwarding": [[805, "enter-forwarding"]], "Exercise: Dual insert() Method In Exercise: Bag Of Items, By Shared Reference": [[805, "exercise-dual-insert-method-in-trainings-material-soup-cxx11-exercises-bag-shared"]], "std::bind": [[806, "std-bind"]], "Why? What\u2019s The Problem?": [[806, "why-what-s-the-problem"]], "Sample Program: All Done Manually": [[806, "sample-program-all-done-manually"]], "Sideway: std::transform": [[806, "sideway-std-transform"]], "Sample Program: Using std::transform": [[806, "sample-program-using-std-transform"]], "std::bind: Null Adaptation, Pointlessly": [[806, "std-bind-null-adaptation-pointlessly"]], "std::bind: Adapting One Parameter To No Parameter": [[806, "std-bind-adapting-one-parameter-to-no-parameter"]], "std::bind: Hardcoding Parameters": [[806, "std-bind-hardcoding-parameters"]], "std::bind: Swapping Parameters \u27f6 std::placeholders": [[806, "std-bind-swapping-parameters-longrightarrow-std-placeholders"]], "std::bind: Hardcoding Only First Parameter \u27f6 std::placeholders": [[806, "std-bind-hardcoding-only-first-parameter-longrightarrow-std-placeholders"]], "std::bind: Functor (Is-A Callable)": [[806, "std-bind-functor-is-a-callable"]], "std::bind: Lambda (Is-A Callable)": [[806, "std-bind-lambda-is-a-callable"]], "Sample Program: Using std::transform With std::bind": [[806, "sample-program-using-std-transform-with-std-bind"]], "Summary": [[806, "summary"], [887, "summary"], [887, "id1"], [1209, "summary"], [1211, "summary"]], "std::function": [[807, "std-function"]], "Classic Polymorphism": [[807, "classic-polymorphism"]], "Classic Polymorphism: Upsides": [[807, "classic-polymorphism-upsides"]], "Classic Polymorphism: Technical Downsides": [[807, "classic-polymorphism-technical-downsides"]], "Classic Polymorphism: More Downsides": [[807, "classic-polymorphism-more-downsides"]], "std::function to the Rescue (1)": [[807, "std-function-to-the-rescue-1"]], "std::function to the Rescue (2)": [[807, "std-function-to-the-rescue-2"]], "std::function: Last Words": [[807, "std-function-last-words"]], "Threads Introduction": [[809, "threads-introduction"]], "Operating System Primitives": [[809, "operating-system-primitives"]], "There Be Dragons": [[809, "there-be-dragons"]], "Threads in C++": [[810, "threads-in-c"]], "Creating Threads is Far Too Easy": [[810, "creating-threads-is-far-too-easy"]], "Joinable vs. Detached": [[810, "joinable-vs-detached"]], "Cornercases in Thread Lifetime": [[810, "cornercases-in-thread-lifetime"]], "Race Conditions": [[811, "race-conditions"], [885, "race-conditions"]], "std::atomic": [[812, "std-atomic"]], "Atomic Instructions (1)": [[812, "atomic-instructions-1"]], "Atomic Instructions (2)": [[812, "atomic-instructions-2"]], "std::mutex And Friends": [[813, "std-mutex-and-friends"]], "std::mutex": [[813, "std-mutex"]], "std::recursive_mutex": [[813, "std-recursive-mutex"]], "std::timed_mutex": [[813, "std-timed-mutex"]], "std::recursive_timed_mutex": [[813, "std-recursive-timed-mutex"]], "Scoped Locking": [[814, "scoped-locking"]], "Explicit Unlocking Considered Dangerous": [[814, "explicit-unlocking-considered-dangerous"]], "RAII - Resource Acquisition Is Initialization": [[814, "raii-resource-acquisition-is-initialization"]], "Simplest: std::lock_guard": [[814, "simplest-std-lock-guard"]], "std::condition_variable (Live Hacking Multithreaded Queue)": [[815, "std-condition-variable-live-hacking-multithreaded-queue"]], "Overview: Operations": [[815, "overview-operations"]], "Communication, Polling: Thread-Safe Queue": [[815, "communication-polling-thread-safe-queue"]], "Anti-Polling: Thread-Safe Queue, And POSIX Condition Variables": [[815, "anti-polling-thread-safe-queue-and-posix-condition-variables"]], "Discussion: Signalling And Waiting, Predicates: Separation Of Concerns": [[815, "discussion-signalling-and-waiting-predicates-separation-of-concerns"]], "Thread-Safe Queue, And C++ Condition Variables": [[815, "thread-safe-queue-and-c-condition-variables"]], "std::promise and std::future (And Some std::chrono) (Some Live Hacking)": [[817, "std-promise-and-std-future-and-some-std-chrono-some-live-hacking"]], "Overview: std::promise": [[817, "overview-std-promise"]], "Overview: std::future": [[817, "overview-std-future"]], "Utterly Wrong: Waiting For Something To Become Ready": [[817, "utterly-wrong-waiting-for-something-to-become-ready"]], "Sideways: std::chrono, And Literals": [[817, "sideways-std-chrono-and-literals"]], "Minimal Fix: Use std::mutex": [[817, "minimal-fix-use-std-mutex"]], "Anti-Clumsiness: Scoped Locking": [[817, "anti-clumsiness-scoped-locking"]], "Pro-Readability: Encapsulate": [[817, "pro-readability-encapsulate"]], "Atomics On Structures?": [[817, "atomics-on-structures"]], "Anti-Polling: Semaphore": [[817, "anti-polling-semaphore"]], "Getting To The Point: std::promise And std::future": [[817, "getting-to-the-point-std-promise-and-std-future"]], "And Exceptions?": [[817, "and-exceptions"]], "std::chrono": [[818, "std-chrono"], [818, "id1"]], "Clock Domains": [[818, "clock-domains"]], "Measuring Time (1)": [[818, "measuring-time-1"]], "Measuring Time (2)": [[818, "measuring-time-2"]], "Sleeping, and Literals": [[818, "sleeping-and-literals"]], "A Better void*: std::any": [[819, "a-better-void-std-any"]], "Default Initialization": [[819, "default-initialization"]], "Initialization, Assignment, Access": [[819, "initialization-assignment-access"]], "Copy, And Resource Management": [[819, "copy-and-resource-management"]], "Run-Time Type Errors": [[819, "run-time-type-errors"]], "has_value(): Null?": [[819, "has-value-null"]], "Avoiding Exceptions": [[819, "avoiding-exceptions"]], "Modifying In-Place: std::any_cast<> To Reference": [[819, "modifying-in-place-std-any-cast-to-reference"]], "std::string And const char* Are Different": [[819, "std-string-and-const-char-are-different"], [820, "std-string-and-const-char-are-different"]], "New-Style Union: std::variant": [[820, "new-style-union-std-variant"]], "Problems With C Unions, And C++ Types": [[820, "problems-with-c-unions-and-c-types"]], "Instantiation, Default Initialization, Member Access": [[820, "instantiation-default-initialization-member-access"]], "Non-Default Initialization": [[820, "non-default-initialization"]], "Accessing Non-Current Member: std::bad_variant_access": [[820, "accessing-non-current-member-std-bad-variant-access"]], "The Visitor": [[820, "the-visitor"]], "Non-Throwing Accessor: std::get_if<>": [[820, "non-throwing-accessor-std-get-if"]], "And User Defined Types?": [[820, "and-user-defined-types"]], "CRTP": [[822, "crtp"], [827, "crtp"]], "std::vector<>: Allocators (Very Incomplete)": [[823, "std-vector-allocators-very-incomplete"]], "Classic Virtual": [[824, "classic-virtual"]], "Sensor Definitions": [[824, "sensor-definitions"], [826, "sensor-definitions"], [828, "sensor-definitions"], [830, "sensor-definitions"]], "Virtual Access": [[824, "virtual-access"], [826, "virtual-access"], [828, "virtual-access"], [829, "virtual-access"], [830, "virtual-access"], [831, "virtual-access"]], "Average Across Many": [[824, "average-across-many"], [826, "average-across-many"], [828, "average-across-many"], [830, "average-across-many"]], "Embedded Problems? Code Bloat? Type Erasure? Solutions?": [[825, "embedded-problems-code-bloat-type-erasure-solutions"]], "virtual Is Bad. Is virtual Bad? (Type Erasure)": [[825, "virtual-is-bad-is-virtual-bad-type-erasure"]], "And CRTP?": [[825, "and-crtp"]], "std::string_view": [[825, "std-string-view"]], "Non-Virtual, But Related": [[826, "non-virtual-but-related"]], "Type Erasure (Static vs. Dynamic Polymorphism), CRTP": [[827, "type-erasure-static-vs-dynamic-polymorphism-crtp"]], "Unrelated (Duck-Typed)": [[828, "unrelated-duck-typed"]], "std::variant (Automatic Virtual Dispatch Using Template Method)": [[829, "std-variant-automatic-virtual-dispatch-using-template-method"]], "std::variant (Manual Virtual Dispatch, Using if)": [[830, "std-variant-manual-virtual-dispatch-using-if"]], "std::variant (Manual Virtual Dispatch, Using std::visit)": [[831, "std-variant-manual-virtual-dispatch-using-std-visit"]], "Why Replace virtual?": [[832, "why-replace-virtual"]], "Drafts": [[833, "drafts"], [982, "drafts"]], "Exercise: Bag Of Items, By Copy": [[834, "exercise-bag-of-items-by-copy"]], "Step 1: Insert, Find": [[834, "step-1-insert-find"]], "Step 2: Remove": [[834, "step-2-remove"]], "Exercise: Bag Of Items, By Shared Reference": [[835, "exercise-bag-of-items-by-shared-reference"]], "Step 1: Transform into std::shared_ptr": [[835, "step-1-transform-into-std-shared-ptr"]], "Step 2: Accidental Move-Insert?": [[835, "step-2-accidental-move-insert"]], "Step 3: Move-Insert, And std::weak_ptr": [[835, "step-3-move-insert-and-std-weak-ptr"]], "Exercise: Bag Of Items, By Unique Reference": [[836, "exercise-bag-of-items-by-unique-reference"]], "std::filesystem": [[838, "std-filesystem"]], "Paths: Composition, Comparison": [[838, "paths-composition-comparison"]], "Absolute and Relative Paths": [[838, "absolute-and-relative-paths"], [972, "absolute-and-relative-paths"]], "Path Component Access": [[838, "path-component-access"]], "Iterating Over Path Components": [[838, "iterating-over-path-components"]], "Current Working Directory": [[838, "current-working-directory"], [951, "current-working-directory"]], "Directory Creation: std::filesystem::create_directory()": [[838, "directory-creation-std-filesystem-create-directory"]], "Directory Creation: std::filesystem::create_directories()": [[838, "directory-creation-std-filesystem-create-directories"]], "Directory Entry Classification: std::filesystem::is_xxx()": [[838, "directory-entry-classification-std-filesystem-is-xxx"]], "Directory Entries: Basics": [[838, "directory-entries-basics"]], "Directory Entries: std::filesystem::directory_entry": [[838, "directory-entries-std-filesystem-directory-entry"]], "Iterating Over Directory Entries": [[838, "iterating-over-directory-entries"]], "Recursive Directory Iteration": [[838, "recursive-directory-iteration"]], "The New C++ (11-\u2026)": [[839, "the-new-c-11"]], "Generated Topic Graph": [[840, "generated-topic-graph"]], "Modern Character Devices (Screenplay)": [[842, "modern-character-devices-screenplay"]], "Modern Character Devices (Slideshow)": [[843, "modern-character-devices-slideshow"]], "Source": [[843, null], [846, null], [848, null], [851, null], [853, null], [856, null], [865, null], [867, null], [877, null], [879, null], [890, null], [895, null]], "Character Devices: Problems": [[843, "character-devices-problems"]], "Dynamic Device Numbers": [[843, "dynamic-device-numbers"]], "Device Classes": [[843, "device-classes"]], "Devices": [[843, "devices"]], "Modern Character Devices": [[844, "modern-character-devices"]], "File Operations on Character Devices (Screenplay)": [[845, "file-operations-on-character-devices-screenplay"]], "Hooks Necessary": [[845, "hooks-necessary"]], "Implement open(), read(), write()": [[845, "implement-open-read-write"]], "ioctl()": [[845, "ioctl"]], "File Operations on Character Devices (Slideshow)": [[846, "file-operations-on-character-devices-slideshow"]], "File Operations: Interface Definition (\u201cvtable\u201d) (1)": [[846, "file-operations-interface-definition-vtable-1"]], "Available Methods": [[846, "available-methods"]], "open(): Userspace": [[846, "open-userspace"]], "open(): Kernelspace": [[846, "open-kernelspace"]], "ioctl(): Userspace": [[846, "ioctl-userspace"]], "ioctl(): Kernelspace": [[846, "ioctl-kernelspace"]], "ioctl(): Requests": [[846, "ioctl-requests"]], "_IO*() Macros": [[846, "io-macros"]], "_IO*() Macros: Usage": [[846, "io-macros-usage"]], "File Operations on Character Devices": [[847, "file-operations-on-character-devices"]], "Coding: First Functionality (Slideshow)": [[848, "coding-first-functionality-slideshow"]], "Implement Event List": [[848, "implement-event-list"]], "Implement ioctl Request to Add an Event": [[848, "implement-ioctl-request-to-add-an-event"]], "Implement a Userspace Test Program": [[848, "implement-a-userspace-test-program"]], "Coding: First Functionality": [[849, "coding-first-functionality"]], "Character Device Basics (Livehacking Screenplay)": [[850, "character-device-basics-livehacking-screenplay"]], "Major and Minor Numbers": [[850, "major-and-minor-numbers"]], "Character Device": [[850, "character-device"]], "Character Device Basics (Slideshow)": [[851, "character-device-basics-slideshow"]], "Major and Minor Numbers: User\u2019s View": [[851, "major-and-minor-numbers-user-s-view"]], "Major and Minor Numbers: Kernel Space": [[851, "major-and-minor-numbers-kernel-space"]], "History: Hardcoded Device Numbers (1)": [[851, "history-hardcoded-device-numbers-1"]], "History: Hardcoded Device Numbers (2)": [[851, "history-hardcoded-device-numbers-2"]], "Character Device (1)": [[851, "character-device-1"]], "Character Device (2)": [[851, "character-device-2"]], "And User Space?": [[851, "and-user-space"]], "Character Device Basics": [[852, "character-device-basics"]], "Coding: Multiple Devices (Slideshow)": [[853, "coding-multiple-devices-slideshow"]], "Instantiate Multiple Devices": [[853, "instantiate-multiple-devices"]], "Coding: Multiple Devices": [[854, "coding-multiple-devices"]], "Coding: Refactoring (Screenplay)": [[855, "coding-refactoring-screenplay"]], "Build Module From Multiple Files": [[855, "build-module-from-multiple-files"]], "Per-Device Structure": [[855, "per-device-structure"]], "Want My Hair Pretty": [[855, "want-my-hair-pretty"]], "Makefile: -Wswitch-enum": [[855, "makefile-wswitch-enum"]], "Coding: Refactoring (Slideshow)": [[856, "coding-refactoring-slideshow"]], "What\u2019s Bad?": [[856, "what-s-bad"]], "Coding: Refactoring": [[857, "coding-refactoring"]], "DMA (Slideshow)": [[858, "dma-slideshow"]], "Address Types": [[858, "address-types"]], "Physical Memory Allocation": [[858, "physical-memory-allocation"]], "DMA Mappings: Overview": [[858, "dma-mappings-overview"]], "Consistent DMA Mappings": [[858, "consistent-dma-mappings"]], "Streaming Mappings: Direction": [[858, "streaming-mappings-direction"]], "Streaming Mappings: To Virtual Address": [[858, "streaming-mappings-to-virtual-address"]], "Streaming Mappings: To Page": [[858, "streaming-mappings-to-page"]], "Streaming Mappings: Scatterlists (1)": [[858, "streaming-mappings-scatterlists-1"]], "Streaming Mappings: Scatterlists (2)": [[858, "streaming-mappings-scatterlists-2"]], "Streaming Mappings: Syncing": [[858, "streaming-mappings-syncing"]], "DMA": [[859, "dma"]], "Building a Fedora Kernel (Screenplay)": [[860, "building-a-fedora-kernel-screenplay"]], "Why Build the Entire Kernel When I Only Want to Build a Module": [[860, "why-build-the-entire-kernel-when-i-only-want-to-build-a-module"]], "Building from \u201cExploded Git Tree\u201d": [[860, "building-from-exploded-git-tree"]], "Building from the RPM Source": [[860, "building-from-the-rpm-source"]], "Fedora: Building the Kernel": [[861, "fedora-building-the-kernel"]], "Fedora: Building External Kernel Modules (Screenplay)": [[862, "fedora-building-external-kernel-modules-screenplay"]], "Prerequisite: Build Entire Kernel": [[862, "prerequisite-build-entire-kernel"]], "Build Modules": [[862, "build-modules"]], "Install Modules": [[862, "install-modules"]], "Fedora: Building External Kernel Modules": [[863, "fedora-building-external-kernel-modules"]], "Module Loading, Hello World (Slideshow)": [[865, "module-loading-hello-world-slideshow"]], "Kernel Driver Anatomy": [[865, "kernel-driver-anatomy"]], "Built-In vs. Loadable Module": [[865, "built-in-vs-loadable-module"]], "Minimum Module Source": [[865, "minimum-module-source"]], "Gotchas: init() and exit()": [[865, "gotchas-init-and-exit"]], "Module Build": [[865, "module-build"]], "Minimum Makefile, Building": [[865, "minimum-makefile-building"]], "Modules: Load/Unload Commands": [[865, "modules-load-unload-commands"]], "Modules: Dependency (and other) Databases": [[865, "modules-dependency-and-other-databases"]], "Module Loading, Hello World": [[866, "module-loading-hello-world"]], "Coding: Raspi GPIO Interrupts (Slideshow)": [[867, "coding-raspi-gpio-interrupts-slideshow"]], "Move to Raspberry Pi, Cross Compiling": [[867, "move-to-raspberry-pi-cross-compiling"]], "Cross Compilation": [[867, "cross-compilation"]], "Cross Compilation Sucks": [[867, "cross-compilation-sucks"]], "Short (Legacy) GPIO API Introduction": [[867, "short-legacy-gpio-api-introduction"]], "Implement New Event Type: Interrupt": [[867, "implement-new-event-type-interrupt"]], "New ioctl: MY_ACTIVATE_GPIO": [[867, "new-ioctl-my-activate-gpio"]], "Interlude: _IO*() Macros": [[867, "interlude-io-macros"]], "Request GPIO": [[867, "request-gpio"]], "Request Interrupt": [[867, "request-interrupt"]], "Coding: Raspi GPIO Interrupts": [[868, "coding-raspi-gpio-interrupts"]], "Interrupts (Slideshow)": [[869, "interrupts-slideshow"]], "Interrupt Facts": [[869, "interrupt-facts"]], "Interrupt Service Routine": [[869, "interrupt-service-routine"]], "Requesting (and Releasing) Interrupts (1)": [[869, "requesting-and-releasing-interrupts-1"]], "IO Memory (Slideshow)": [[871, "io-memory-slideshow"]], "I/O Memory": [[871, "i-o-memory"]], "I/O Memory: Reservation": [[871, "i-o-memory-reservation"]], "Making I/O Memory Accessible": [[871, "making-i-o-memory-accessible"]], "Accessing I/O Memory": [[871, "accessing-i-o-memory"]], "IO Memory": [[872, "io-memory"]], "Dynamic Memory: kmalloc() (Slideshow)": [[873, "dynamic-memory-kmalloc-slideshow"]], "Dynamic Memory: kmalloc()": [[873, "dynamic-memory-kmalloc"], [874, "dynamic-memory-kmalloc"]], "Dynamic Memory: Flags": [[873, "dynamic-memory-flags"]], "Doubly Linked Lists (Slideshow)": [[875, "doubly-linked-lists-slideshow"]], "Big Picture": [[875, "big-picture"]], "List Head": [[875, "list-head"]], "Insert a Node": [[875, "insert-a-node"]], "Iteration, and Getting a Node\u2019s Container": [[875, "iteration-and-getting-a-node-s-container"]], "Emptying a List": [[875, "emptying-a-list"]], "Doubly Linked Lists": [[876, "doubly-linked-lists"]], "Coding: Fix Race Condition (Mutex) (Slideshow)": [[877, "coding-fix-race-condition-mutex-slideshow"]], "What Do We Have?": [[877, "what-do-we-have"]], "Consequences of Not Protecting": [[877, "consequences-of-not-protecting"]], "Protect Event List": [[877, "protect-event-list"]], "Protect Device List": [[877, "protect-device-list"]], "Coding: Fix Race Condition (Mutex)": [[878, "coding-fix-race-condition-mutex"]], "Mutex (and RT Mutex) (Slideshow)": [[879, "mutex-and-rt-mutex-slideshow"]], "Locking in the Kernel": [[879, "locking-in-the-kernel"]], "Mutual Exclusion: Mutex": [[879, "mutual-exclusion-mutex"]], "Mutex: Locking (1)": [[879, "mutex-locking-1"]], "Mutex: Locking (2)": [[879, "mutex-locking-2"]], "Mutex: Releasing": [[879, "mutex-releasing"]], "Realtime Mutex": [[879, "realtime-mutex"]], "Mutex (and RT Mutex)": [[880, "mutex-and-rt-mutex"]], "Network Devices (Slideshow)": [[881, "network-devices-slideshow"]], "Module Initialization: Device Allocation": [[881, "module-initialization-device-allocation"]], "Module Initialization: Device Registration": [[881, "module-initialization-device-registration"]], "Device Methods": [[881, "device-methods"]], "Kernel Networking Layer Utilities": [[881, "kernel-networking-layer-utilities"]], "Network Devices": [[882, "network-devices"]], "PCI (Slideshow)": [[883, "pci-slideshow"]], "First and Foremost": [[883, "first-and-foremost"]], "PCI Driver Methods": [[883, "pci-driver-methods"]], "PCI Driver Structure, and the init() Method": [[883, "pci-driver-structure-and-the-init-method"]], "PCI Device Structure, and the probe() Method": [[883, "pci-device-structure-and-the-probe-method"]], "The probe() Method: Boilerplate": [[883, "the-probe-method-boilerplate"]], "The probe() Method: Interrupt": [[883, "the-probe-method-interrupt"]], "The probe() Method: PCI Resources (BARs)": [[883, "the-probe-method-pci-resources-bars"]], "DMA Support Routines": [[883, "dma-support-routines"]], "PCI": [[884, "pci"]], "Process vs.Atomic Context (Slideshow)": [[885, "process-vs-atomic-context-slideshow"]], "Process Context": [[885, "process-context"]], "Atomic Context": [[885, "atomic-context"]], "Atomic vs. Process Context": [[885, "atomic-vs-process-context"]], "\u201cSleep While Atomic\u201d Debugging": [[885, "sleep-while-atomic-debugging"]], "Process vs.Atomic Context": [[886, "process-vs-atomic-context"]], "Rasperry Pi: Kernel Build": [[887, "rasperry-pi-kernel-build"]], "Cross Toolchain on Host": [[887, "cross-toolchain-on-host"]], "Architecture Name - What\u2019s That?": [[887, "architecture-name-what-s-that"]], "Building a Toolchain with Gentoo\u2019s crossdev": [[887, "building-a-toolchain-with-gentoo-s-crossdev"]], "Other Toolchains": [[887, "other-toolchains"]], "Kernel Source": [[887, "kernel-source"]], "Kernel Compilation": [[887, "kernel-compilation"]], "Parameters for the Build": [[887, "parameters-for-the-build"]], "Preparing the Kernel .config File": [[887, "preparing-the-kernel-config-file"]], "Building the Kernel Artifacts": [[887, "building-the-kernel-artifacts"]], "Packaging": [[887, "packaging"], [1143, "packaging"]], "Bootloader Artifacts": [[887, "bootloader-artifacts"]], "Module Tree": [[887, "module-tree"]], "Deployment": [[887, "deployment"]], "Variation": [[887, "variation"]], "Raspberry Pi: Building the Kernel": [[888, "raspberry-pi-building-the-kernel"]], "Todo jjj": [[888, "todo-jjj"]], "Sample Code Maintenance": [[889, "sample-code-maintenance"]], "Coding: Fix Sleep While Atomic (Slideshow)": [[890, "coding-fix-sleep-while-atomic-slideshow"]], "Simple Spinlock Usage: spin_lock()": [[890, "simple-spinlock-usage-spin-lock"]], "Discuss Call Chain, IRQ State": [[890, "discuss-call-chain-irq-state"]], "Enter spin_lock_irqsave(), spin_unlock_irqrestore()": [[890, "enter-spin-lock-irqsave-spin-unlock-irqrestore"]], "Ah, kmalloc()": [[890, "ah-kmalloc"]], "Coding: Fix Sleep While Atomic": [[891, "coding-fix-sleep-while-atomic"]], "Spinlock (vs. Mutex) (Slideshow)": [[892, "spinlock-vs-mutex-slideshow"]], "Mutual Exclusion: Spinlock": [[892, "mutual-exclusion-spinlock"]], "Spinlock Initialization": [[892, "spinlock-initialization"]], "Simple Lock/Unlock": [[892, "simple-lock-unlock"]], "Simple is not Bulletproof: Interrupt State": [[892, "simple-is-not-bulletproof-interrupt-state"]], "Mutual Exclusion: Conclusion": [[892, "mutual-exclusion-conclusion"]], "Spinlock (vs. Mutex)": [[893, "spinlock-vs-mutex"]], "dup(), fork(), and Reference Counting (Stub)": [[894, "dup-fork-and-reference-counting-stub"]], "Coding: Timed Event (Slideshow)": [[895, "coding-timed-event-slideshow"]], "Per-Event Timestamp": [[895, "per-event-timestamp"]], "Discussion: Deferred Events": [[895, "discussion-deferred-events"]], "Add Timer": [[895, "add-timer"]], "Gotcha: Cleanup Running Timer": [[895, "gotcha-cleanup-running-timer"]], "More Gotchas": [[895, "more-gotchas"]], "Coding: Timed Event": [[896, "coding-timed-event"]], "Timer Management (Slideshow)": [[897, "timer-management-slideshow"]], "Original Timer API": [[897, "original-timer-api"]], "jiffies": [[897, "jiffies"]], "\u201cTimer Wheel\u201d Methods": [[897, "timer-wheel-methods"]], "Better Documentation": [[897, "better-documentation"]], "Timer Management": [[898, "timer-management"]], "To Do List": [[899, "to-do-list"]], "Accessing Userspace Memory (Screenplay)": [[900, "accessing-userspace-memory-screenplay"]], "New ioctl: GET_ONE_EVENT": [[900, "new-ioctl-get-one-event"]], "Getting One Event": [[900, "getting-one-event"]], "copy_to_user()": [[900, "copy-to-user"]], "Userspace Test Program": [[900, "userspace-test-program"]], "Accessing Userspace Memory (Slideshow)": [[901, "accessing-userspace-memory-slideshow"]], "Address Spaces": [[901, "address-spaces"]], "Copying To and From Userspace": [[901, "copying-to-and-from-userspace"]], "Accessing Userspace Memory": [[902, "accessing-userspace-memory"]], "Waiting for Something (Screenplay)": [[903, "waiting-for-something-screenplay"]], "read() Not Implemented": [[903, "read-not-implemented"]], "Implementing read() Naively": [[903, "implementing-read-naively"]], "Discussion: What If Nothing\u2019s There?": [[903, "discussion-what-if-nothing-s-there"]], "Implementing O_NONBLOCK": [[903, "implementing-o-nonblock"]], "Waiting for Something (Slideshow)": [[904, "waiting-for-something-slideshow"]], "Waiting for Something": [[904, "waiting-for-something"], [905, "waiting-for-something"]], "Wait Queues: Initializing": [[904, "wait-queues-initializing"]], "Wait Queue: Waiting": [[904, "wait-queue-waiting"]], "Wait Queue: Waking": [[904, "wait-queue-waking"]], "Workqueue (Screenplay)": [[906, "workqueue-screenplay"]], "Add Workqueue": [[906, "add-workqueue"]], "Submit/Defer Work From Atomic Context": [[906, "submit-defer-work-from-atomic-context"]], "Cleanup (Why We Did This, After All)": [[906, "cleanup-why-we-did-this-after-all"]], "Finish": [[906, "finish"]], "Workqueue (Slideshow)": [[907, "workqueue-slideshow"]], "Workqueue: Motivation": [[907, "workqueue-motivation"]], "Creating/Destroying a Workqueue": [[907, "creating-destroying-a-workqueue"]], "What is Work?": [[907, "what-is-work"]], "Submitting Work": [[907, "submitting-work"]], "Workqueue": [[908, "workqueue"]], "Exercises: Archiving And Compression": [[909, "exercises-archiving-and-compression"]], "gzip": [[911, "gzip"]], "Compression Tools: Comparison": [[912, "compression-tools-comparison"]], "tar": [[913, "tar"]], "Creating And Viewing Archives": [[913, "creating-and-viewing-archives"]], "(De)Compression": [[913, "de-compression"]], "Etiquette": [[913, "etiquette"]], "Option Summary": [[913, "option-summary"]], "Being Creative With The Pipe": [[913, "being-creative-with-the-pipe"]], "Exam (ECE/SS2022/G1): Do A Lot With Files And Directories": [[914, "exam-ece-ss2022-g1-do-a-lot-with-files-and-directories"]], "Precondition: Logged-In To Remote/Exam Computer": [[914, "precondition-logged-in-to-remote-exam-computer"], [915, "precondition-logged-in-to-remote-exam-computer"]], "Create Exam Skeleton (5 Points)": [[914, "create-exam-skeleton-5-points"], [915, "create-exam-skeleton-5-points"]], "Create Credentials Files (10 Points)": [[914, "create-credentials-files-10-points"]], "Public Place (10 Points)": [[914, "public-place-10-points"], [915, "public-place-10-points"]], "Private Place (10 Points)": [[914, "private-place-10-points"], [915, "private-place-10-points"]], "Shared File in Public Place (10 Points)": [[914, "shared-file-in-public-place-10-points"], [915, "shared-file-in-public-place-10-points"]], "Make A Backup Of ~/exam-01 (15 Points)": [[914, "make-a-backup-of-exam-01-15-points"], [915, "make-a-backup-of-exam-01-15-points"]], "Exam (ECE/SS2022/G2): Do A Lot With Files And Directories": [[915, "exam-ece-ss2022-g2-do-a-lot-with-files-and-directories"]], "Create Business Cards (10 Points)": [[915, "create-business-cards-10-points"]], "Exercises/Exams: Linux Basics": [[916, "exercises-exams-linux-basics"]], "Linux Basics": [[917, "linux-basics"]], "Everything Is A File (Live Demo)": [[918, "everything-is-a-file-live-demo"]], "Simple is beautiful": [[918, "simple-is-beautiful"]], "Ok: a File is a File": [[918, "ok-a-file-is-a-file"]], "Is a Serial Interface (UART) a File?": [[918, "is-a-serial-interface-uart-a-file"]], "Pseudo Terminals": [[918, "pseudo-terminals"]], "Disks and Partitions": [[918, "disks-and-partitions"]], "/proc and /sys": [[918, "proc-and-sys"]], "Pseudo Devices": [[918, "pseudo-devices"]], "Environment (Variables)": [[919, "environment-variables"]], "Shell: Environment Variables, And Process Creation": [[919, "shell-environment-variables-and-process-creation"]], "Popular Environment Variables: HOME, SHELL, USER": [[919, "popular-environment-variables-home-shell-user"]], "Popular Environment Variables: PATH": [[919, "popular-environment-variables-path"]], "Login? What Is That?": [[923, "login-what-is-that"]], "Authentication: Prompting The User For Login Data": [[923, "authentication-prompting-the-user-for-login-data"]], "Authentication: Verification Of Login Data": [[923, "authentication-verification-of-login-data"]], "And After Successful Authentication?": [[923, "and-after-successful-authentication"]], "Impersonation": [[923, "impersonation"]], "Logged In, Finally": [[923, "logged-in-finally"]], "User Space, Kernel Space?": [[924, "user-space-kernel-space"]], "User Space: Abstractions": [[924, "user-space-abstractions"]], "Kernel: Where The Heavy Stuff Is": [[924, "kernel-where-the-heavy-stuff-is"]], "Booting a Computer": [[924, "booting-a-computer"]], "Processes, Scheduling, Address Spaces": [[925, "processes-scheduling-address-spaces"]], "Problem: Owning the CPU?": [[925, "problem-owning-the-cpu"]], "Solution: Scheduling (Time Slices)": [[925, "solution-scheduling-time-slices"]], "Problem: Owning all Memory?": [[925, "problem-owning-all-memory"]], "Solution: Virtual Memory": [[925, "solution-virtual-memory"]], "Process Attributes: User ID (UID)": [[925, "process-attributes-user-id-uid"]], "Process Attributes: Groups": [[925, "process-attributes-groups"]], "Processes: More Attributes": [[925, "processes-more-attributes"]], "Process Hierarchy (Parent, Child Process)": [[926, "process-hierarchy-parent-child-process"]], "More Process Rules": [[926, "more-process-rules"]], "Typical Process Tree": [[926, "typical-process-tree"]], "Services, init": [[926, "services-init"]], "Windows Subsystem for Linux (WSL)": [[927, "windows-subsystem-for-linux-wsl"]], "Disclaimer!": [[927, null]], "More Links": [[927, "more-links"]], "My $0.02": [[927, "my-0-02"]], "WSL, Finally": [[927, "wsl-finally"]], "Exercises: IO-Redirection, Pipes": [[928, "exercises-io-redirection-pipes"]], "I/O Redirection": [[930, "i-o-redirection"]], "Standard I/O Streams": [[930, "standard-i-o-streams"]], "I/O Redirection Operators": [[930, "i-o-redirection-operators"]], "Example: Standard Output Redirection": [[930, "example-standard-output-redirection"]], "Example: Standard Input Redirection": [[930, "example-standard-input-redirection"]], "Example: Standard Error Redirection": [[930, "example-standard-error-redirection"]], "Example: Everything Redirection": [[930, "example-everything-redirection"]], "I/O Redirection: Swap stdout And stderr": [[931, "i-o-redirection-swap-stdout-and-stderr"]], "Basic Pipe Usage": [[931, "basic-pipe-usage"]], "Basic Pipe Usage: What The Shell Does": [[931, "basic-pipe-usage-what-the-shell-does"]], "And How Do I Count Lines On stderr?": [[931, "and-how-do-i-count-lines-on-stderr"]], "More Tricks": [[931, "more-tricks"]], "Pipes": [[932, "pipes"]], "Why Pipes?": [[932, "why-pipes"]], "Pipe Facts": [[932, "pipe-facts"]], "Pipe Examples": [[932, "pipe-examples"]], "More Pipe Examples": [[932, "more-pipe-examples"]], "Named Pipes": [[932, "named-pipes"]], "Permissions: Mode, User and Group Ownership": [[933, "permissions-mode-user-and-group-ownership"]], "Owner and Permissions": [[933, "owner-and-permissions"]], "A Simple Example": [[933, "a-simple-example"]], "Teacher\u2019s note: create that constellation (as root)": [[933, null]], "Permission Check: User": [[933, "permission-check-user"]], "Permission Check: Group": [[933, "permission-check-group"]], "Permission Check: Others": [[933, "permission-check-others"]], "Programs: Execute Permissions": [[933, "programs-execute-permissions"]], "Directory Permissions": [[933, "directory-permissions"]], "Permission Bits, octal": [[933, "permission-bits-octal"]], "Shell Commands: Tuning Permissions": [[933, "shell-commands-tuning-permissions"]], "Shell Commands: Changing User/Group Ownership": [[933, "shell-commands-changing-user-group-ownership"]], "Exercise: Determine Your User Credentials": [[934, "exercise-determine-your-user-credentials"]], "FH/Moodle Quiz: Permissions": [[935, "fh-moodle-quiz-permissions"], [936, "fh-moodle-quiz-permissions"]], "Exercises: File System Permissions": [[937, "exercises-file-system-permissions"]], "Exercise: Create Private Directory": [[938, "exercise-create-private-directory"]], "Question: Private Directory": [[939, "question-private-directory"]], "Exercise: Create Public Directory": [[940, "exercise-create-public-directory"]], "Question: Public Directory": [[941, "question-public-directory"]], "Exercise: Create Group-Shared File": [[942, "exercise-create-group-shared-file"]], "SetUID Programs: passwd, sudo, \u2026": [[944, "setuid-programs-passwd-sudo"]], "Problem: Change My Password": [[944, "problem-change-my-password"]], "Solution: Set-UID Bit": [[944, "solution-set-uid-bit"]], "Set-UID: How Does It Work?": [[944, "set-uid-how-does-it-work"]], "Command: chmod": [[944, "command-chmod"]], "Set-UID Is Not A Toy!": [[944, "set-uid-is-not-a-toy"]], "SetUID: Live Demo": [[945, "setuid-live-demo"]], "Real and Effective User ID": [[945, "real-and-effective-user-id"]], "Sample Program": [[945, "sample-program"]], "Set-UID jfasch?": [[945, "set-uid-jfasch"]], "Set-UID root? Danger!": [[945, "set-uid-root-danger"]], "Ugly Hack: Sticky Bit": [[946, "ugly-hack-sticky-bit"]], "Sticky Bit": [[946, "sticky-bit"]], "Default Permissions: umask": [[947, "default-permissions-umask"]], "Default Permissions - umask": [[947, "id1"]], "umask: How Does it Work?": [[947, "umask-how-does-it-work"]], "Shape (1)": [[948, "shape-1"]], "Shape (2)": [[948, "shape-2"]], "Options": [[948, "options"], [977, "options"]], "Help and Manual": [[948, "help-and-manual"]], "Man Pages: Navigation": [[948, "man-pages-navigation"]], "Commandline Editing: Moving, Deleting": [[948, "commandline-editing-moving-deleting"]], "Commandline Editing: Entire Words": [[948, "commandline-editing-entire-words"]], "Commandline Editing: Entire Lines": [[948, "commandline-editing-entire-lines"]], "The Tabulator Key: Command Completion": [[948, "the-tabulator-key-command-completion"]], "The Tabulator Key: Filename Completion": [[948, "the-tabulator-key-filename-completion"]], "Shell Configuration File: ~/.bashrc": [[949, "shell-configuration-file-bashrc"]], "What\u2019s Volatile?": [[949, "what-s-volatile"]], "Copying: cp": [[950, "copying-cp"]], "Option Overview": [[950, "option-overview"]], "Creating backup copy of, say, .bashrc in the home directory": [[950, "creating-backup-copy-of-say-bashrc-in-the-home-directory"]], "Similar: copy a file into a different directory, under a different name": [[950, "similar-copy-a-file-into-a-different-directory-under-a-different-name"]], "Similar: copy a file into a different directory, keeping its name": [[950, "similar-copy-a-file-into-a-different-directory-keeping-its-name"]], "Copy multiple files into a directory": [[950, "copy-multiple-files-into-a-directory"]], "Copying a directory, together with its contents \u27f6 recursive copy": [[950, "copying-a-directory-together-with-its-contents-longrightarrow-recursive-copy"]], "Current Working Directory: pwd": [[951, "current-working-directory-pwd"]], "Changing The Current Working Directory: cd": [[951, "changing-the-current-working-directory-cd"]], "Exercise: Copy Directory Tree": [[952, "exercise-copy-directory-tree"]], "Exercise: Copy Files": [[953, "exercise-copy-files"]], "Exercise: Create Files (I/O Redirection)": [[954, "exercise-create-files-i-o-redirection"]], "Exercise: Move Files": [[955, "exercise-move-files"]], "Exercises: Create/Copy/Move/Remove": [[956, "exercises-create-copy-move-remove"]], "Exercise: mkdir": [[957, "exercise-mkdir"]], "Exercise: Funny Stuff": [[958, "exercise-funny-stuff"]], "Exercise: Remove Directory Tree": [[959, "exercise-remove-directory-tree"]], "Exercise: Verify, Repeat": [[960, "exercise-verify-repeat"]], "FH/Moodle Quiz: Shell": [[961, "fh-moodle-quiz-shell"]], "The Shell - Exercises": [[962, "the-shell-exercises"]], "Exercise: File Types in /dev": [[963, "exercise-file-types-in-dev"]], "Exercise: Size of /etc/passwd": [[964, "exercise-size-of-etc-passwd"]], "Exercises: The ls Command": [[965, "exercises-the-ls-command"]], "Exercise: Permissions of Home Directory": [[966, "exercise-permissions-of-home-directory"]], "Creating And Removing Files and Directories": [[967, "creating-and-removing-files-and-directories"]], "Creating a Directory: mkdir": [[967, "creating-a-directory-mkdir"]], "Creating a File: I/O redirection": [[967, "creating-a-file-i-o-redirection"]], "Creating an Empty File: touch": [[967, "creating-an-empty-file-touch"]], "Removing A File: rm": [[967, "removing-a-file-rm"]], "Removing A Directory: rmdir, rm -r": [[967, "removing-a-directory-rmdir-rm-r"]], "Symbolic Links, Hard Links": [[969, "symbolic-links-hard-links"]], "Directory Listings: The ls Command": [[970, "directory-listings-the-ls-command"]], "Many Options": [[970, "many-options"]], "Hidden Files": [[970, "hidden-files"]], "File Types": [[970, "file-types"]], "Moving and Renaming: mv": [[971, "moving-and-renaming-mv"]], "Renaming A File (or Directory)": [[971, "renaming-a-file-or-directory"]], "Moving a File to Somewhere Else": [[971, "moving-a-file-to-somewhere-else"]], "Moving a Directory to Somewhere Else": [[971, "moving-a-directory-to-somewhere-else"]], "Path Separator": [[972, "path-separator"]], "Relative Paths": [[972, "relative-paths"]], "Absolute Paths": [[972, "absolute-paths"]], "Special Paths": [[972, "special-paths"]], "cat": [[973, "cat"], [973, "id1"]], "cut": [[974, "cut"], [974, "id1"]], "Exercises: Inspecting Text Files": [[975, "exercises-inspecting-text-files"]], "find": [[976, "find"]], "Directories durchsuchen mit find": [[976, "directories-durchsuchen-mit-find"]], "find: Optionen": [[976, "find-optionen"]], "find: Beispiele": [[976, "find-beispiele"]], "find: Verkn\u00fcpfungen": [[976, "find-verknupfungen"]], "find: Verkn\u00fcpfungen: Beispiele": [[976, "find-verknupfungen-beispiele"]], "grep": [[977, "grep"]], "Searching With grep": [[977, "searching-with-grep"]], "More About Regular Expressions": [[977, "more-about-regular-expressions"]], "head And tail": [[979, "head-and-tail"]], "head": [[979, "head"]], "tail": [[979, "tail"]], "head And tail In The Pipe": [[979, "head-and-tail-in-the-pipe"]], "less": [[980, "less"]], "Paging Files Using less": [[980, "paging-files-using-less"]], "Help Screen (Enter With h)": [[980, "help-screen-enter-with-h"]], "stdin, stdout, And The Pipe": [[981, "stdin-stdout-and-the-pipe"]], "stdin, stdout: Examples": [[981, "stdin-stdout-examples"]], "Pipe: Examples": [[981, "pipe-examples"]], "Basics Text Tools": [[981, "basics-text-tools"]], "Yocto": [[983, "yocto"]], "Controlling a Brushless Motor With Raspberry Pi": [[985, "controlling-a-brushless-motor-with-raspberry-pi"]], "Topic": [[985, null]], "Electronic Speed Controller (ESC)": [[985, "electronic-speed-controller-esc"]], "Select Running Mode: \u201cFwd/Rev\u201d": [[985, "select-running-mode-fwd-rev"]], "The \u201cCommand Protocol\u201d, and Calibration": [[985, "the-command-protocol-and-calibration"]], "Driving the Motor": [[985, "driving-the-motor"]], "CAN/Linux Basics": [[986, "can-linux-basics"]], "Why This Talk?": [[986, "why-this-talk"]], "Network Programming: Datagram Exchange": [[986, "network-programming-datagram-exchange"]], "And CAN?": [[986, "and-can"]], "One CAN Network Packet \u2026": [[986, "one-can-network-packet"]], "CAN Interfaces": [[987, "can-interfaces"]], "CAN-Interface: Configuration": [[987, "can-interface-configuration"]], "CAN Utils": [[987, "can-utils"]], "CAN Utils: Usage (1)": [[987, "can-utils-usage-1"]], "CAN Utils: Usage (2)": [[987, "can-utils-usage-2"]], "vcan: Virtual CAN-Bus": [[987, "vcan-virtual-can-bus"]], "Programming": [[988, "programming"]], "CAN Programming": [[988, "can-programming"]], "CAN in C - Socket, Interface Index": [[988, "can-in-c-socket-interface-index"]], "CAN in Python - Socket, Interface Index": [[988, "can-in-python-socket-interface-index"]], "CAN in C - Frames (1)": [[988, "can-in-c-frames-1"]], "CAN in C - Frames (2)": [[988, "can-in-c-frames-2"]], "CAN in Python - Frames": [[988, "can-in-python-frames"]], "Hardware, Kernel": [[989, "hardware-kernel"]], "MCP2515: Schematic": [[989, "mcp2515-schematic"]], "MCP2515: Soldering": [[989, "mcp2515-soldering"]], "MCP2515: SPI": [[989, "mcp2515-spi"]], "MCP2515: Raspberry": [[989, "mcp2515-raspberry"]], "CAN Bus With Linux And Python": [[990, "can-bus-with-linux-and-python"]], "Linux Hardware Interfaces": [[991, "linux-hardware-interfaces"]], "Linux and I2C (using LM73 Temperature Sensor as Slave)": [[992, "linux-and-i2c-using-lm73-temperature-sensor-as-slave"]], "Configuring I2C Master": [[992, "configuring-i2c-master"]], "Enable I2C, Load BCM2835 Platform Driver": [[992, "enable-i2c-load-bcm2835-platform-driver"]], "Raspberry Pi GPIO header pinout": [[992, null]], "Enable Userspace I2C": [[992, "enable-userspace-i2c"]], "Slave Device: LM73": [[992, "slave-device-lm73"]], "Datasheet etc.": [[992, null]], "Optional: Address Selection": [[992, "optional-address-selection"]], "Connecting LM73 to Raspberry Pi": [[992, "connecting-lm73-to-raspberry-pi"]], "i2c-tools/i2cdetect: Diagnostics, Detecting Devices": [[992, "i2c-tools-i2cdetect-diagnostics-detecting-devices"]], "Using the Device: Talking I2C from Userspace": [[992, "using-the-device-talking-i2c-from-userspace"]], "Using the Device: hwmon - Hardware Monitoring": [[992, "using-the-device-hwmon-hardware-monitoring"]], "Building the Kernel, Enabling LM73": [[992, "building-the-kernel-enabling-lm73"]], "Loading the Driver": [[992, "loading-the-driver"]], "Hardware Monitoring (hwmon) Devices": [[992, "hardware-monitoring-hwmon-devices"]], "PWM Userspace Interface (using PCA9685)": [[993, "pwm-userspace-interface-using-pca9685"]], "Pulse Width Modulation (PWM)": [[993, "pulse-width-modulation-pwm"]], "Why An External PWM Controller?": [[993, "why-an-external-pwm-controller"]], "Wiring, Setup, and Testing": [[993, "wiring-setup-and-testing"]], "Talk to Chip Using the sysfs Interface": [[993, "talk-to-chip-using-the-sysfs-interface"]], "Linux and OneWire (using DS18B20 Temperature Sensor as Slave)": [[994, "linux-and-onewire-using-ds18b20-temperature-sensor-as-slave"]], "Master Device, Alterative 1: w1-gpio - OneWire Master in Software": [[994, "master-device-alterative-1-w1-gpio-onewire-master-in-software"]], "Wiring: Attach OneWire Device to GPIO Pin": [[994, "wiring-attach-onewire-device-to-gpio-pin"]], "Master Device, Alterative 2: DS2482 - I2C OneWire Master in Hardware": [[994, "master-device-alterative-2-ds2482-i2c-onewire-master-in-hardware"]], "DS2482-800: 8-Channel 1-Wire Master": [[994, null]], "Wiring: Attach DS2482-800 via I2C": [[994, "wiring-attach-ds2482-800-via-i2c"]], "Configure Software": [[994, "configure-software"]], "Enable I2C, and Check": [[994, "enable-i2c-and-check"]], "Verify That Our Device Is There": [[994, "verify-that-our-device-is-there"]], "Announce (\u201cHotplug\u201d) DS2482 to Linux": [[994, "announce-hotplug-ds2482-to-linux"]], "Wiring: Attach OneWire Device to DS2482-800": [[994, "wiring-attach-onewire-device-to-ds2482-800"]], "Over-Engineering? Beauty?": [[994, "over-engineering-beauty"]], "Hardware Bringup": [[994, "hardware-bringup"]], "Device Usage": [[994, "device-usage"]], "Slave Device: DS18B20 Temperature Sensor": [[994, "slave-device-ds18b20-temperature-sensor"]], "Using the Device": [[994, "using-the-device"]], "As a Generic OneWire Device": [[994, "as-a-generic-onewire-device"]], "As a Hardware Monitoring (hwmon) Device": [[994, "as-a-hardware-monitoring-hwmon-device"]], "lm-sensors": [[994, "lm-sensors"]], "OneWire Caveats": [[994, "onewire-caveats"]], "Bus Topology": [[994, "bus-topology"]], "Error Symptoms": [[994, "error-symptoms"]], "SSH: Basics": [[995, "ssh-basics"]], "Login": [[995, "login"]], "Exit Status, stdin, stdout: Scripting": [[995, "exit-status-stdin-stdout-scripting"]], "Exercise: Copy a File To Remote Machine, And Verify": [[996, "exercise-copy-a-file-to-remote-machine-and-verify"]], "Exercise: Copy a Tree To Remote Machine (And Adjust Permissions)": [[997, "exercise-copy-a-tree-to-remote-machine-and-adjust-permissions"]], "Exercises: SSH": [[998, "exercises-ssh"]], "Exercise: Create SSH Key Pair": [[999, "exercise-create-ssh-key-pair"]], "SSH: Public Key Authentication": [[1001, "ssh-public-key-authentication"]], "Local Setup, Key Generation": [[1001, "local-setup-key-generation"]], "Key Pair?": [[1001, "key-pair"]], "Remote Setup (Wearing The Remote Admin\u2019s Hat)": [[1001, "remote-setup-wearing-the-remote-admin-s-hat"]], "SSH: Links": [[1002, "ssh-links"]], "SSH: Port Forwarding": [[1003, "ssh-port-forwarding"]], "Port Forwarding - The Problem (1)": [[1003, "port-forwarding-the-problem-1"]], "Port Forwarding - The Problem (2)": [[1003, "port-forwarding-the-problem-2"]], "Port Forwarding - The Solution (1)": [[1003, "port-forwarding-the-solution-1"]], "Port Forwarding - The Solution (2)": [[1003, "port-forwarding-the-solution-2"]], "Port Forwarding - The Commandline": [[1003, "port-forwarding-the-commandline"]], "SSH: Secure Copy (scp)": [[1004, "ssh-secure-copy-scp"]], "What Is That?": [[1004, "what-is-that"]], "Copy Single File From Local To Remote": [[1004, "copy-single-file-from-local-to-remote"]], "Copy Single File from Remote To Local": [[1004, "copy-single-file-from-remote-to-local"]], "Copy An Entire Directory Tree (-r)": [[1004, "copy-an-entire-directory-tree-r"]], "Copy Multiple File From Here To There": [[1004, "copy-multiple-file-from-here-to-there"]], "Copy From One Remote To A Different Remote": [[1004, "copy-from-one-remote-to-a-different-remote"]], "More Options": [[1004, "more-options"]], "SSH File System (sshfs)": [[1005, "ssh-file-system-sshfs"]], "What Is It?": [[1005, "what-is-it"]], "Why Is It?": [[1005, "why-is-it"]], "Example Situation: The Raspi": [[1005, "example-situation-the-raspi"]], "Mounting Remote  $HOME/logdata": [[1005, "mounting-remote-home-logdata"]], "Unmounting: fusermount -u, or Simply umount": [[1005, "unmounting-fusermount-u-or-simply-umount"]], "User ID Mismatch: Problem": [[1005, "user-id-mismatch-problem"]], "User ID Mismatch: Solution (User Mapping)": [[1005, "user-id-mismatch-solution-user-mapping"]], "The errno Variable": [[1006, "the-errno-variable"]], "errno Is A Global Variable": [[1006, "errno-is-a-global-variable"]], "Helper Functions": [[1006, "helper-functions"]], "Linux Systems Programming: Basics": [[1007, "linux-systems-programming-basics"]], "System Calls vs. Library Functions": [[1008, "system-calls-vs-library-functions"]], "System Calls": [[1008, "system-calls"]], "System Calls And The C-Library": [[1008, "system-calls-and-the-c-library"]], "Library Function Or System Call?": [[1008, "library-function-or-system-call"]], "Manual Pages": [[1008, "manual-pages"]], "Blocking I/O: What is That? (\u201cEverything is a file\u201d)": [[1009, "blocking-i-o-what-is-that-everything-is-a-file"]], "Examples/Live Demos": [[1009, null]], "Solution: This Is What An Operating System Is There For": [[1009, "solution-this-is-what-an-operating-system-is-there-for"]], "Blocking I/O (On A File): What is That?": [[1010, "blocking-i-o-on-a-file-what-is-that"]], "See Also": [[1010, null], [1011, null], [1012, null], [1195, "see-also"]], "Abstractions": [[1010, "abstractions"], [1011, "abstractions"], [1012, "abstractions"]], "Simplicity": [[1010, "simplicity"], [1011, "simplicity"], [1012, "simplicity"]], "Build, Run, Look": [[1010, "build-run-look"], [1011, "build-run-look"], [1012, "build-run-look"]], "Watch: Run Under strace Supervision": [[1010, "watch-run-under-strace-supervision"]], "Blocking I/O: On A Network Socket": [[1011, "blocking-i-o-on-a-network-socket"]], "Opening a Network Connection": [[1011, "opening-a-network-connection"]], "Blocking I/O: On A Timer? WTF?": [[1012, "blocking-i-o-on-a-timer-wtf"]], "Setup A Timer": [[1012, "setup-a-timer"]], "Blocking I/O: What Is That?": [[1013, "blocking-i-o-what-is-that"]], "File I/O: Basics": [[1014, "file-i-o-basics"]], "File Descriptors": [[1014, "file-descriptors"]], "Standard Filedescriptors": [[1014, "standard-filedescriptors"]], "File I/O: System Calls": [[1014, "file-i-o-system-calls"]], "open()": [[1014, "open"]], "open() Flags": [[1014, "open-flags"]], "read()": [[1014, "read"]], "write()": [[1014, "write"]], "File Offset: lseek()": [[1014, "file-offset-lseek"]], "The Rest: ioctl()": [[1014, "the-rest-ioctl"]], "Exercise: Copy A File": [[1015, "exercise-copy-a-file"]], "Sunny Case: Source File Exists, Destination Does Not Exist": [[1015, "sunny-case-source-file-exists-destination-does-not-exist"]], "Error: Wrong Number Of Arguments Specified": [[1015, "error-wrong-number-of-arguments-specified"]], "Error: Source File Does Not Exist": [[1015, "error-source-file-does-not-exist"]], "Error: Destination File Exists": [[1015, "error-destination-file-exists"]], "Error: Destination Directory Not Writable": [[1015, "error-destination-directory-not-writable"]], "Exercise: Create File With Hole": [[1016, "exercise-create-file-with-hole"]], "Duplicating (Whats Going On?)": [[1017, "duplicating-whats-going-on"]], "File Descriptors, Open File, I-Node": [[1017, "file-descriptors-open-file-i-node"]], "File Descriptors and Inheritance": [[1017, "file-descriptors-and-inheritance"]], "Duplicating File Descriptors": [[1017, "duplicating-file-descriptors"]], "Example: Shell Stdout-Redirection (1)": [[1017, "example-shell-stdout-redirection-1"]], "Example: Shell Stdout-Redirection (2)": [[1017, "example-shell-stdout-redirection-2"]], "Example: Shell Stdout-Redirection (3)": [[1017, "example-shell-stdout-redirection-3"]], "O_CREAT: Creating A File": [[1018, "o-creat-creating-a-file"]], "Creating A File If It Does Not Exist (Bogus Version)": [[1018, "creating-a-file-if-it-does-not-exist-bogus-version"]], "Bogus O_CREAT Usage: Mode Parameter Missing": [[1018, "bogus-o-creat-usage-mode-parameter-missing"]], "Creating A File If It Does Not Exist": [[1018, "creating-a-file-if-it-does-not-exist"]], "O_EXCL: Creating A File, But Failing If It Already Exists": [[1019, "o-excl-creating-a-file-but-failing-if-it-already-exists"]], "Is \u201cCreate or Open\u201d Always Wanted?": [[1019, "is-create-or-open-always-wanted"]], "Sunny Case: File Does Not Exist": [[1019, "sunny-case-file-does-not-exist"]], "Error: File Exists": [[1019, "error-file-exists"]], "O_RDONLY: Reading a File": [[1020, "o-rdonly-reading-a-file"]], "Me and /etc/passwd": [[1020, "me-and-etc-passwd"]], "Code: Reading A File": [[1020, "code-reading-a-file"]], "Sunny Case: Reading /etc/passwd": [[1020, "sunny-case-reading-etc-passwd"]], "Error: File Not Readable": [[1020, "error-file-not-readable"]], "Error: File Not Even There": [[1020, "error-file-not-even-there"]], "O_WRONLY: Writing A File (Which Must Exist)": [[1021, "o-wronly-writing-a-file-which-must-exist"]], "Writing (And Not Creating) A File": [[1021, "writing-and-not-creating-a-file"]], "Error: File Not Writeable": [[1021, "error-file-not-writeable"]], "Error: File Not Even There \u27f6 Not Implicitly Created": [[1021, "error-file-not-even-there-longrightarrow-not-implicitly-created"]], "Sunny Case: File Exists, And Is Writeable": [[1021, "sunny-case-file-exists-and-is-writeable"]], "Exercise: Read Temperature From Onewire Sensor": [[1022, "exercise-read-temperature-from-onewire-sensor"]], "Onewire Basics": [[1022, "onewire-basics"]], "Program": [[1022, "program"], [1176, "program"]], "Test On The Target Machine": [[1022, "test-on-the-target-machine"]], "I/O without Offset Manipulation": [[1024, "i-o-without-offset-manipulation"]], "Scatter/Gather I/O": [[1024, "scatter-gather-i-o"]], "Scatter/Gather I/O, without Offset Manipulation": [[1024, "scatter-gather-i-o-without-offset-manipulation"]], "Truncating Files": [[1024, "truncating-files"]], "File Descriptors - Allocation": [[1024, "file-descriptors-allocation"]], "Linux Systems Programming": [[1025, "linux-systems-programming"], [1256, "linux-systems-programming"]], "Get Value Of GPIO": [[1026, "get-value-of-gpio"]], "Retrieving Value Manually, On The Commandline": [[1026, "retrieving-value-manually-on-the-commandline"]], "Shell Script": [[1026, "shell-script"]], "C Program": [[1026, "c-program"]], "Introductory Live Hacking, Hardware-Wise (sysfs GPIO)": [[1027, "introductory-live-hacking-hardware-wise-sysfs-gpio"]], "Intro: sysfs GPIO": [[1028, "intro-sysfs-gpio"]], "sysfs?": [[1028, "sysfs"]], "General Purpose IO (GPIO)": [[1028, "general-purpose-io-gpio"]], "Requesting A GPIO Pin": [[1028, "requesting-a-gpio-pin"]], "GPIO Attributes As Files": [[1028, "gpio-attributes-as-files"]], "Interrupts In Userspace": [[1029, "interrupts-in-userspace"]], "Manual Configuration": [[1029, "manual-configuration"]], "C Program: Configuration, Event Loop": [[1029, "c-program-configuration-event-loop"]], "Why Threads?": [[1030, "why-threads"]], "Typical Uses": [[1030, "typical-uses"]], "Legal (1)": [[1030, "legal-1"]], "Legal (2)": [[1030, "legal-2"]], "POSIX Thread API": [[1030, "posix-thread-api"]], "Thread Life Cycle": [[1031, "thread-life-cycle"], [1031, "id1"]], "Thread Creation": [[1031, "thread-creation"]], "Thread Termination (1)": [[1031, "thread-termination-1"]], "Thread Termination (2)": [[1031, "thread-termination-2"]], "Exit Status, pthread_join()": [[1031, "exit-status-pthread-join"]], "Detached Threads": [[1031, "detached-threads"]], "Thread ID": [[1031, "thread-id"]], "Scheduled Entities (1)": [[1031, "scheduled-entities-1"]], "Scheduled Entities (2)": [[1031, "scheduled-entities-2"]], "Thread Creation, Race Condition": [[1032, "thread-creation-race-condition"]], "Synchronization": [[1033, "synchronization"]], "Race Conditions (1)": [[1033, "race-conditions-1"]], "Race Conditions (2)": [[1033, "race-conditions-2"]], "Mutex (1)": [[1033, "mutex-1"]], "Mutex (2)": [[1033, "mutex-2"]], "Mutex (3)": [[1033, "mutex-3"]], "Mutex Types": [[1033, "mutex-types"]], "Mutex: Solve Load/Modify/Store Conflict": [[1034, "mutex-solve-load-modify-store-conflict"]], "Communication: Condition Variable": [[1035, "communication-condition-variable"]], "Condition Variable (1)": [[1035, "condition-variable-1"]], "Condition Variable (2)": [[1035, "condition-variable-2"]], "Condition Variable: wait()": [[1035, "condition-variable-wait"]], "Condition Variable: signal()": [[1035, "condition-variable-signal"]], "Example: WIN32 Auto Reset Event (1)": [[1035, "example-win32-auto-reset-event-1"]], "Example: WIN32 Auto Reset Event (2)": [[1035, "example-win32-auto-reset-event-2"]], "Condition Variable: Checking the Predicate": [[1035, "condition-variable-checking-the-predicate"]], "Condition Variable: Initialization": [[1035, "condition-variable-initialization"]], "Condition Variable: Miscellaneous": [[1035, "condition-variable-miscellaneous"]], "Condition Variable: Message Queue": [[1036, "condition-variable-message-queue"]], "One-Time Initialization (1)": [[1037, "one-time-initialization-1"]], "One-Time Initialization (2)": [[1037, "one-time-initialization-2"]], "One-Time Initialization (3)": [[1037, "one-time-initialization-3"]], "Thread Specific Data, Thread Local Storage": [[1037, "thread-specific-data-thread-local-storage"]], "Last Warning (1)": [[1038, "last-warning-1"]], "Last Warning (2)": [[1038, "last-warning-2"]], "Last Warning (3)": [[1038, "last-warning-3"]], "Trylock/islocked": [[1040, "trylock-islocked"]], "Process: Arguments, Exit Status": [[1041, "process-arguments-exit-status"]], "The Shell: A Program Like Any Program": [[1041, "the-shell-a-program-like-any-program"]], "The Shell: A Programming Language": [[1041, "the-shell-a-programming-language"]], "Exit Status": [[1041, "exit-status"]], "Exit Status: 0 is \u201cOK\u201d": [[1041, "exit-status-0-is-ok"]], "Exit Status: != 0 is \u201cNot OK\u201d": [[1041, "exit-status-0-is-not-ok"]], "Argument Vector (int argc, char** argv)": [[1041, "argument-vector-int-argc-char-argv"]], "Processes": [[1042, "processes"]], "The Process Tree (And Environment, And procfs)": [[1043, "the-process-tree-and-environment-and-procfs"]], "Process ID (PID) And Parent Process ID (PPID)": [[1043, "process-id-pid-and-parent-process-id-ppid"]], "System Calls: getpid(), getppid()": [[1043, "system-calls-getpid-getppid"]], "Scheduling (and Multitasking)": [[1044, "scheduling-and-multitasking"]], "Fairness Criteria": [[1044, "fairness-criteria"]], "CPU bound vs. I/O bound": [[1044, "cpu-bound-vs-i-o-bound"]], "Demo: I/O vs CPU bound": [[1044, "demo-i-o-vs-cpu-bound"]], "Scheduling Decision, Runnability": [[1044, "scheduling-decision-runnability"]], "Tasks? Processes? Threads?": [[1046, "tasks-processes-threads"]], "A Typical Bare Metal Application": [[1046, "a-typical-bare-metal-application"]], "Hm. Need Another Timer Interrupt!": [[1046, "hm-need-another-timer-interrupt"]], "Away From Interrupts: Use An Operating System": [[1046, "away-from-interrupts-use-an-operating-system"]], "Tasks?": [[1046, "id1"]], "Threads Are Great: More Functionality": [[1046, "threads-are-great-more-functionality"]], "Are Threads Great?": [[1046, "are-threads-great"]], "Stability Considerations": [[1046, "stability-considerations"]], "Processes, Address Spaces": [[1046, "processes-address-spaces"]], "Stabilizing": [[1046, "stabilizing"]], "Scheduling: Exam Questions": [[1047, "scheduling-exam-questions"]], "Wakeup Latency, and Fair Scheduling": [[1048, "wakeup-latency-and-fair-scheduling"]], "Nice Value: Inexact Tuning": [[1048, "nice-value-inexact-tuning"]], "Enter Realtime: Definition": [[1048, "enter-realtime-definition"]], "Realtime on Linux": [[1048, "realtime-on-linux"]], "Demo: Measuring Wakeup Latency": [[1048, "demo-measuring-wakeup-latency"]], "Immediately?": [[1048, "immediately"]], "Immediately! \u27f6 PREEMPT_RT": [[1048, "immediately-longrightarrow-preempt-rt"]], "Realtime API": [[1049, "realtime-api"]], "Scheduling Policies": [[1049, "scheduling-policies"]], "Scheduling Priorities": [[1049, "scheduling-priorities"]], "What\u2019s Runnning On A System?": [[1049, "what-s-runnning-on-a-system"]], "Scheduling: System Calls": [[1049, "scheduling-system-calls"]], "Scheduling: Threads (1)": [[1049, "scheduling-threads-1"]], "Scheduling: Threads (2)": [[1049, "scheduling-threads-2"]], "Priority Inversion": [[1049, "priority-inversion"]], "Priority Inversion: Mutex Protocols (1)": [[1049, "priority-inversion-mutex-protocols-1"]], "Wakeup Latency, CPU Frequency (Gotcha)": [[1050, "wakeup-latency-cpu-frequency-gotcha"]], "Measuring Wakeup Latency": [[1050, "measuring-wakeup-latency"]], "Many Runnable Processes (Gotcha: CPU Frequency Scaling)": [[1050, "many-runnable-processes-gotcha-cpu-frequency-scaling"]], "CPU Frequency Scaling Out Of The Way": [[1050, "cpu-frequency-scaling-out-of-the-way"]], "Mysteries Remaining": [[1050, "mysteries-remaining"]], "Code: Sysprog: Event Driven Programming": [[1051, "code-sysprog-event-driven-programming"]], "Screenplay: Sysprog: POSIX IPC": [[1052, "screenplay-sysprog-posix-ipc"], [1055, "screenplay-sysprog-posix-ipc"]], "select on Device Files": [[1052, "select-on-device-files"]], "Sysprog: Events": [[1053, "sysprog-events"]], "Code: Sysprog: POSIX IPC": [[1054, "code-sysprog-posix-ipc"]], "Virtual Memory, mmap()": [[1055, "virtual-memory-mmap"]], "POSIX Shared Memory": [[1055, "posix-shared-memory"]], "Create Shared Memory Segment": [[1055, "create-shared-memory-segment"]], "Produce into Shared Memory": [[1055, "produce-into-shared-memory"]], "Consume from Shared Memory": [[1055, "consume-from-shared-memory"]], "POSIX Semaphores": [[1055, "posix-semaphores"]], "Create Semaphore": [[1055, "create-semaphore"]], "Wait": [[1055, "wait"]], "Post": [[1055, "post"]], "POSIX Message Queues": [[1055, "posix-message-queues"]], "Create": [[1055, "create"]], "Produce": [[1055, "produce"]], "Consume": [[1055, "consume"]], "Slides: Sysprog: POSIX IPC": [[1056, "slides-sysprog-posix-ipc"]], "Slideshow": [[1056, null], [1060, null]], "History: Two IPC Variants": [[1056, "history-two-ipc-variants"]], "Object Names": [[1056, "object-names"]], "File Semantics": [[1056, "file-semantics"]], "Message Queues": [[1056, "message-queues"]], "Open/Create: mq_open()": [[1056, "open-create-mq-open"]], "Sending/Receiving: mq_send(), mq_receive()": [[1056, "sending-receiving-mq-send-mq-receive"]], "Closing/Removing: mq_close(), mq_unlink()": [[1056, "closing-removing-mq-close-mq-unlink"]], "Notification: mq_notify()": [[1056, "notification-mq-notify"]], "Message Queues are Files": [[1056, "message-queues-are-files"]], "Message Queue Filesystem: mqueue": [[1056, "message-queue-filesystem-mqueue"]], "Semaphores": [[1056, "semaphores"]], "Open/Create: sem_open()": [[1056, "open-create-sem-open"]], "Communication: sem_wait(), sem_post()": [[1056, "communication-sem-wait-sem-post"]], "Closing/Removing: sem_close(), ``sem_unlink()": [[1056, "closing-removing-sem-close-sem-unlink"]], "Semaphores are Files": [[1056, "semaphores-are-files"]], "Shared Memory (1)": [[1056, "shared-memory-1"]], "Shared Memory (2)": [[1056, "shared-memory-2"]], "Exercise: POSIX Message Queues": [[1056, "exercise-posix-message-queues"]], "Sysprog: POSIX IPC": [[1057, "sysprog-posix-ipc"]], "Code: Sysprog: Signals": [[1058, "code-sysprog-signals"]], "Screenplay: Sysprog: Signals": [[1059, "screenplay-sysprog-signals"]], "Barebones Naive Program": [[1059, "barebones-naive-program"]], "Signal Handler": [[1059, "signal-handler"]], "Alarm": [[1059, "alarm"]], "Alarm (Louder)": [[1059, "alarm-louder"]], "Synchronous Delivery": [[1059, "synchronous-delivery"]], "Innocent Multithreaded Program": [[1059, "innocent-multithreaded-program"]], "Add SIGALRM": [[1059, "add-sigalrm"]], "Slides: Sysprog: Signals": [[1060, "slides-sysprog-signals"]], "Example Signals": [[1060, "example-signals"]], "Terminology": [[1060, "terminology"]], "Default Actions": [[1060, "default-actions"]], "Important Signals": [[1060, "important-signals"]], "Sending, Commandline": [[1060, "sending-commandline"]], "Sending Signals, Programmatically": [[1060, "sending-signals-programmatically"]], "Warning!": [[1060, "warning"]], "Blocking Signals: Signal Mask": [[1060, "blocking-signals-signal-mask"]], "Signal Mask Manipulation": [[1060, "signal-mask-manipulation"]], "Pending Signals": [[1060, "pending-signals"]], "Signal Set: sigset_t": [[1060, "signal-set-sigset-t"]], "Signal Handlers": [[1060, "signal-handlers"]], "Installing a Signal Handler (1)": [[1060, "installing-a-signal-handler-1"]], "Installing a Signal Handler (2)": [[1060, "installing-a-signal-handler-2"]], "Effects of Signal Delivery": [[1060, "effects-of-signal-delivery"]], "Last Warning!": [[1060, "last-warning"]], "WTF Async Signal Safe?": [[1060, "wtf-async-signal-safe"]], "Exercise: Signals": [[1060, "exercise-signals"]], "Sysprog: Signals": [[1061, "sysprog-signals"]], "Toolchain: Basics": [[1062, "toolchain-basics"]], "GCC - GNU Compiler Collection": [[1062, "gcc-gnu-compiler-collection"]], "All-In-One Usage: Single File": [[1062, "all-in-one-usage-single-file"]], "Download source": [[1062, null], [1062, null], [1079, null], [1079, null], [1079, null], [1081, null]], "All-In-One Usage: Multiple Files": [[1062, "all-in-one-usage-multiple-files"]], "This Is Not As Simple As It Seems!": [[1062, "this-is-not-as-simple-as-it-seems"]], "Program Loading (Short Version)": [[1062, "program-loading-short-version"]], "What\u2019s In A Program? \u27f6 Symbols (nm)": [[1062, "what-s-in-a-program-longrightarrow-symbols-nm"]], "Overview: Where Do Which Symbols Come From (\u27f6 The Toolchain)": [[1062, "overview-where-do-which-symbols-come-from-longrightarrow-the-toolchain"]], "Recap: Toolchain": [[1062, "recap-toolchain"]], "CMake: Cross Build": [[1063, "cmake-cross-build"]], "Cross Build: Parameters": [[1063, "cross-build-parameters"]], "Core Build Instructions: Target Agnostic": [[1063, "core-build-instructions-target-agnostic"]], "Toolchain Files": [[1063, "toolchain-files"]], "Step 1: Generate Makefile in Build Directory": [[1063, "step-1-generate-makefile-in-build-directory"]], "Step 2: Build Using make": [[1063, "step-2-build-using-make"], [1064, "step-2-build-using-make"]], "CMake: Local Build": [[1064, "cmake-local-build"]], "make: Problems": [[1064, "make-problems"]], "CMake To The Rescue": [[1064, "cmake-to-the-rescue"]], "Out-Of-Source Build": [[1064, "out-of-source-build"]], "Step 1: Generate Makefile In Build Directory": [[1064, "step-1-generate-makefile-in-build-directory"]], "Goodie: Dependency Management": [[1064, "goodie-dependency-management"]], "Native Compilation": [[1065, "native-compilation"]], "Cross?": [[1065, "cross"]], "Example: Cross Toolchain And sysroot Built With crosstool-ng": [[1065, "example-cross-toolchain-and-sysroot-built-with-crosstool-ng"]], "Toolchain in bin/": [[1065, "toolchain-in-bin"]], "sysroot in armv8-rpi4-linux-gnueabihf/sysroot/": [[1065, "sysroot-in-armv8-rpi4-linux-gnueabihf-sysroot"]], "Cross Build": [[1065, "cross-build"]], "Exercise: Build Software Package (Cross, Raspberry)": [[1067, "exercise-build-software-package-cross-raspberry"]], "Exercises: Toolchain": [[1070, "exercises-toolchain"]], "Exercise: Build Software Package (Native)": [[1071, "exercise-build-software-package-native"]], "Exercise: Install And Check Raspberry Toolchain": [[1072, "exercise-install-and-check-raspberry-toolchain"]], "Toolchain, And Cross Development": [[1073, "toolchain-and-cross-development"]], "Case Study: Raspberry Toolchain": [[1074, "case-study-raspberry-toolchain"]], "Linaro Toolchain For The Pi (Defunct)": [[1075, "linaro-toolchain-for-the-pi-defunct"]], "Download And Unpack Linaro Toolchain": [[1075, "download-and-unpack-linaro-toolchain"]], "Create a sysroot": [[1075, "create-a-sysroot"]], "Patience!": [[1075, null]], "Test Cross Build": [[1075, "test-cross-build"]], "What We Have": [[1075, "what-we-have"]], "Use Cross Compiler To Build Against sysroot": [[1075, "use-cross-compiler-to-build-against-sysroot"]], "Adjust $PATH To Point To Toolchain": [[1075, "adjust-path-to-point-to-toolchain"]], "Building A Toolchain On Fedora For Ubuntu 18.04 (WSL)": [[1077, "building-a-toolchain-on-fedora-for-ubuntu-18-04-wsl"]], "Install And Run Docker": [[1077, "install-and-run-docker"]], "Create Ubuntu Images (18.04 and 20.04)": [[1077, "create-ubuntu-images-18-04-and-20-04"]], "Create Docker Volume": [[1077, "create-docker-volume"]], "Container Work": [[1077, "container-work"]], "Command To Run Container On Volumes": [[1077, "command-to-run-container-on-volumes"]], "Setup container": [[1077, "setup-container"]], "Install autoconf 2.71": [[1077, "install-autoconf-2-71"]], "Install crosstool-ng": [[1077, "install-crosstool-ng"]], "Build Toolchain": [[1077, "build-toolchain"]], "crosstool-ng Toolchain Build": [[1077, "crosstool-ng-toolchain-build"]], "Create Toolchain Archive": [[1077, "create-toolchain-archive"]], "Install Toolchain On Host": [[1077, "install-toolchain-on-host"]], "Cross Toolchain Setup": [[1078, "cross-toolchain-setup"]], "Download And Install Toolchain Archive": [[1078, "download-and-install-toolchain-archive"]], "Establish CMake Toolchain File": [[1078, "establish-cmake-toolchain-file"]], "Test Run": [[1078, "test-run"]], "Zooming In: Separate Compilation, and Linking Statically": [[1079, "zooming-in-separate-compilation-and-linking-statically"]], "Remember: All-In-One Build \u2026": [[1079, "remember-all-in-one-build"]], "Adding Another main(): What About Shared Code?": [[1079, "adding-another-main-what-about-shared-code"]], "Solution: Separate Compilation And Linking Steps": [[1079, "solution-separate-compilation-and-linking-steps"]], "Complication: Modification Tracking": [[1079, "complication-modification-tracking"]], "Enter Makefiles": [[1079, "enter-makefiles"]], "Shared Libraries (Shared Objects)": [[1080, "shared-libraries-shared-objects"]], "Problems With Static Libraries": [[1080, "problems-with-static-libraries"]], "And Dynamic Libraries?": [[1080, "and-dynamic-libraries"]], "Relocations": [[1080, "relocations"]], "Building A Shared Library: Position Independent Code (PIC)": [[1080, "building-a-shared-library-position-independent-code-pic"]], "Linking Executables Against Shared Libraries": [[1080, "linking-executables-against-shared-libraries"]], "And Build Dependencies?": [[1080, "and-build-dependencies"]], "And Runtime Dependencies?": [[1080, "and-runtime-dependencies"]], "And Starting An Executable Having External Dependencies?": [[1080, "and-starting-an-executable-having-external-dependencies"]], "This Is Not Simple: Library Search Path": [[1080, "this-is-not-simple-library-search-path"]], "Summary: Static Versus Dynamic Libraries": [[1080, "summary-static-versus-dynamic-libraries"]], "Object Code Archives/Static Libraries": [[1081, "object-code-archives-static-libraries"]], "Code Bases Become Larger (1)": [[1081, "code-bases-become-larger-1"]], "Code Bases Become Larger (2)": [[1081, "code-bases-become-larger-2"]], "Problem: Structure": [[1081, "problem-structure"]], "Build Instructions: Building A Library": [[1081, "build-instructions-building-a-library"]], "Closures": [[1082, "closures"]], "Today": [[1082, "today"]], "def is a Statement": [[1082, "def-is-a-statement"]], "Functions That Create Functions": [[1082, "functions-that-create-functions"]], "Inner Function Reaches Out To Global Scope": [[1082, "inner-function-reaches-out-to-global-scope"]], "And Intermediate Scope? \u27f6 Closure": [[1082, "and-intermediate-scope-longrightarrow-closure"]], "A Less Theoretical \u201cUse Case\u201d": [[1082, "a-less-theoretical-use-case"]], "Scope Issues: Assignment to Global Scope (global Keyword)": [[1082, "scope-issues-assignment-to-global-scope-global-keyword"]], "Scope Issues: Assignment to Intermediate Scope (nonlocal Keyword)": [[1082, "scope-issues-assignment-to-intermediate-scope-nonlocal-keyword"]], "Intro": [[1083, "intro"]], "Simplest: List Comprehension": [[1083, "simplest-list-comprehension"]], "Context Managers: The with Statement": [[1084, "context-managers-the-with-statement"]], "Example: Open File": [[1084, "example-open-file"]], "Example: Temporary Directory": [[1084, "example-temporary-directory"]], "Example: Multiple with Items": [[1084, "example-multiple-with-items"]], "Under The Hood: Context Manager": [[1084, "under-the-hood-context-manager"]], "Example: Monkeypatching The print Function": [[1084, "example-monkeypatching-the-print-function"]], "Still Much Typing \u27f6 @contextlib.contextmanager": [[1084, "still-much-typing-longrightarrow-contextlib-contextmanager"]], "More Involved: Using Closures To Implement PrefixPrint": [[1084, "more-involved-using-closures-to-implement-prefixprint"]], "Decorators": [[1085, "decorators"]], "The Ominous \u201c@\u201d": [[1085, "the-ominous"]], "Decorators Overview": [[1085, "decorators-overview"]], "A Simple Minded Function": [[1085, "a-simple-minded-function"]], "Decorator Basics": [[1085, "decorator-basics"]], "Decorators are Syntactic Sugar": [[1085, "decorators-are-syntactic-sugar"]], "Problem: Arbitrary Function Arguments": [[1085, "problem-arbitrary-function-arguments"]], "*args, **kwargs To The Rescue": [[1085, "args-kwargs-to-the-rescue"]], "Sideways: functools.wraps": [[1085, "sideways-functools-wraps"]], "Class Decorator: debug() with prefix": [[1085, "class-decorator-debug-with-prefix"]], "Basic Exception Handling: try, except": [[1086, "basic-exception-handling-try-except"]], "Catching Exceptions By Type": [[1086, "catching-exceptions-by-type"]], "Exception Objects": [[1086, "exception-objects"]], "Catching Multiple Exception Types: Exception List": [[1086, "catching-multiple-exception-types-exception-list"]], "Catching Multiple Exception Types: Multiple except Clauses": [[1086, "catching-multiple-exception-types-multiple-except-clauses"]], "Catching Multiple Exception Types: By Base Type": [[1086, "catching-multiple-exception-types-by-base-type"]], "Important: Order Of except Clauses": [[1086, "important-order-of-except-clauses"]], "Built-In Exception Hierarchy": [[1086, "built-in-exception-hierarchy"]], "Raising Exceptions": [[1086, "raising-exceptions"]], "Re-Raising Exceptions": [[1086, "re-raising-exceptions"]], "User-Defined Exceptions": [[1086, "user-defined-exceptions"]], "User-Defined Exceptions: More": [[1086, "user-defined-exceptions-more"]], "else: Executed If No Exception": [[1086, "else-executed-if-no-exception"]], "finally: Executed Regardless Of Exception": [[1086, "finally-executed-regardless-of-exception"]], "The exec() Function": [[1087, "the-exec-function"]], "Dictionaries Everywhere: Context": [[1087, "dictionaries-everywhere-context"]], "Enter exec()": [[1087, "enter-exec"]], "exec(), and Context": [[1087, "exec-and-context"]], "And What Is This Used For, Realistically?": [[1087, "and-what-is-this-used-for-realistically"]], "Python: More Language Features": [[1088, "python-more-language-features"]], "Iteration, Comprehensions, and Generators": [[1089, "iteration-comprehensions-and-generators"]], "Coverage Of This Topic": [[1089, "coverage-of-this-topic"]], "for Recap: Sequential Datatypes": [[1089, "for-recap-sequential-datatypes"]], "Primitive Transformation [1,2,3,4] \u27f6 [1,4,9,16]": [[1089, "primitive-transformation-1-2-3-4-longrightarrow-1-4-9-16"]], "Larger Input List (Still Allocated)": [[1089, "larger-input-list-still-allocated"]], "Input List \u27f6 range": [[1089, "input-list-longrightarrow-range"]], "Output List \u27f6 yield": [[1089, "output-list-longrightarrow-yield"]], "Generator Function \u27f6 Generator Expression": [[1089, "generator-function-longrightarrow-generator-expression"]], "Implementing A Fibonacci Number Generator": [[1090, "implementing-a-fibonacci-number-generator"]], "Fibonacci Numbers: Naive List": [[1090, "fibonacci-numbers-naive-list"]], "Fibonacci Numbers: Naive List, Limited": [[1090, "fibonacci-numbers-naive-list-limited"]], "Sideway: Infinity by Not Using Functions": [[1090, "sideway-infinity-by-not-using-functions"]], "Fibonacci Numbers: Function Producing Infinite Sequence": [[1090, "fibonacci-numbers-function-producing-infinite-sequence"]], "Common Pattern: Turn List into Generated Items": [[1090, "common-pattern-turn-list-into-generated-items"]], "The Iterator Protocol": [[1091, "the-iterator-protocol"], [1091, "id1"]], "Iteration in Python": [[1091, "iteration-in-python"]], "What\u2019s an Iterator?": [[1091, "what-s-an-iterator"]], "What\u2019s an Iterable?": [[1091, "what-s-an-iterable"]], "The Iterator Protocol: Manual Iteration": [[1091, "the-iterator-protocol-manual-iteration"]], "The Iterator Protocol, And The for Loop": [[1091, "the-iterator-protocol-and-the-for-loop"]], "Generators: Motivation": [[1091, "generators-motivation"]], "Generators: How?": [[1091, "generators-how"]], "Observations": [[1091, "observations"]], "Iteration, Generators, And yield": [[1092, "iteration-generators-and-yield"]], "Iterating Intelligently: Generators, and the Iterator Protocol": [[1093, "iterating-intelligently-generators-and-the-iterator-protocol"]], "Modules are Objects": [[1094, "modules-are-objects"]], "Other Forms (1)": [[1094, "other-forms-1"]], "Other Forms (2)": [[1094, "other-forms-2"]], "Packages": [[1094, "packages"]], "Executing Modules as Scripts": [[1094, "executing-modules-as-scripts"]], "Package Structure": [[1094, "package-structure"]], "Relative Imports (1)": [[1094, "relative-imports-1"]], "Relative Imports (2)": [[1094, "relative-imports-2"]], "Multithreading (Python)": [[1095, "multithreading-python"]], "What\u2019s a Thread?": [[1095, "what-s-a-thread"]], "Threads: The Pythonic Way": [[1095, "threads-the-pythonic-way"]], "Threads: The OO Way - Inheritance": [[1095, "threads-the-oo-way-inheritance"]], "And Program Termination?": [[1095, "and-program-termination"]], "Daemon Threads": [[1095, "daemon-threads"]], "Race Conditions, and Mutexes": [[1097, "race-conditions-and-mutexes"]], "Mother of All Race conditions: Integer Increment": [[1097, "mother-of-all-race-conditions-integer-increment"]], "Load Modify Store Conflict": [[1097, "load-modify-store-conflict"]], "Solution: Mutex (Explicit Acquire/Release)": [[1097, "solution-mutex-explicit-acquire-release"]], "Solution: Mutex (with Statement)": [[1097, "solution-mutex-with-statement"]], "Multithreading: Exam Questions": [[1098, "multithreading-exam-questions"]], "Abstract Base Classes (abc), And Duck Typing": [[1099, "abstract-base-classes-abc-and-duck-typing"]], "Duck Typing: Examples": [[1099, "duck-typing-examples"]], "Duck Typing Problem: Late Errors": [[1099, "duck-typing-problem-late-errors"]], "Intermediate Step: Common Base Class (\u201cInterface\u201d)": [[1099, "intermediate-step-common-base-class-interface"]], "Enter Abstract Base Classes: Wish List": [[1099, "enter-abstract-base-classes-wish-list"]], "Abtract Base Class": [[1099, "abtract-base-class"]], "Classes And Dictionaries": [[1100, "classes-and-dictionaries"]], "Facts Up-Front": [[1100, "facts-up-front"]], "Using Raw Dictionaries As Objects": [[1100, "using-raw-dictionaries-as-objects"]], "Enter Classes: An Empty Class, And Its Effects": [[1100, "enter-classes-an-empty-class-and-its-effects"]], "Attributes": [[1100, "attributes"], [1213, "attributes"]], "Summary: Classes Or Raw Dictionaries": [[1100, "summary-classes-or-raw-dictionaries"]], "Dynamic Attribute Access": [[1100, "dynamic-attribute-access"]], "Constructor": [[1101, "constructor"]], "And self?": [[1101, "and-self"]], "Interrelationships": [[1102, "interrelationships"]], "Extending Existing Classes": [[1103, "extending-existing-classes"]], "Additional Feature: Salary": [[1103, "additional-feature-salary"]], "Want Manager": [[1103, "want-manager"]], "Introspecting Inheritance: isinstance(), issubclass()": [[1103, "introspecting-inheritance-isinstance-issubclass"]], "isinstance()": [[1103, "isinstance"]], "issubclass()": [[1103, "issubclass"]], "Add __str__(), Creatively, After The Fact": [[1103, "add-str-creatively-after-the-fact"]], "Object Methods": [[1104, "object-methods"]], "Class Methods (@classmethod)": [[1104, "class-methods-classmethod"]], "Static Methods (@staticmethod)": [[1104, "static-methods-staticmethod"]], "collections.namedtuple": [[1105, "collections-namedtuple"]], "Shortcut For Simple Data-Holding Classes": [[1105, "shortcut-for-simple-data-holding-classes"]], "Constructing From Iterable: _make()": [[1105, "constructing-from-iterable-make"]], "Convert To dict: _asdict()": [[1105, "convert-to-dict-asdict"]], "Operators Are \u201cDunder\u201d Methods": [[1106, "operators-are-dunder-methods"]], "Hypothetical And Pointless class Number": [[1106, "hypothetical-and-pointless-class-number"]], "Simplest: Equality Comparison (==)": [[1106, "simplest-equality-comparison"]], "Comparing Against Incompatible Types? (Lotsa Magic!)": [[1106, "comparing-against-incompatible-types-lotsa-magic"]], "Ordering: Less-Than (<) Operator": [[1106, "ordering-less-than-operator"]], "Ordering Magic, Again: __gt__ in terms of __lt__": [[1106, "ordering-magic-again-gt-in-terms-of-lt"]], "Table: Comparison Operators": [[1106, "table-comparison-operators"]], "@functools.total_ordering To The Rescue": [[1106, "functools-total-ordering-to-the-rescue"]], "Arithmetic Operators, Reverse Operations": [[1106, "arithmetic-operators-reverse-operations"]], "Table: Operators And The Methods To Implement Them": [[1106, "table-operators-and-the-methods-to-implement-them"]], "Readonly Attributes": [[1107, "readonly-attributes"]], "And Write Access?": [[1107, "and-write-access"]], "Calculated Attributes": [[1107, "calculated-attributes"]], "str() And repr()": [[1108, "str-and-repr"]], "Stringification And Representation": [[1108, "stringification-and-representation"]], "Overloading str() And repr(): __str__(), __repr__()": [[1108, "overloading-str-and-repr-str-repr"]], "Positional and Keyword Arguments": [[1109, "positional-and-keyword-arguments"]], "Traditional Function Call": [[1109, "traditional-function-call"]], "Supplying Function Arguments Dynamically": [[1109, "supplying-function-arguments-dynamically"]], "Functions That Takes Arbitrary Number Of Positional Arguments": [[1109, "functions-that-takes-arbitrary-number-of-positional-arguments"]], "Functions That Take Arbitrary Keyword Arguments": [[1109, "functions-that-take-arbitrary-keyword-arguments"]], "And Arbitrary Positional And Keyword Arguments?": [[1109, "and-arbitrary-positional-and-keyword-arguments"]], "Ultimate Dynamicity: Arbitrary Positional And Keyword Arguments": [[1109, "ultimate-dynamicity-arbitrary-positional-and-keyword-arguments"]], "Use Case: A Better print()": [[1109, "use-case-a-better-print"]], "The Python Programming Language": [[1112, "the-python-programming-language"]], "A Little Bit of History": [[1112, "a-little-bit-of-history"]], "Guido Van Rossum": [[1112, "guido-van-rossum"]], "Hello World: Interactive Mode": [[1113, "hello-world-interactive-mode"]], "Hello World: Script Files": [[1113, "hello-world-script-files"]], "Running Python Programs": [[1114, "running-python-programs"]], "The UNIX Way: Executable Bit, chmod": [[1114, "the-unix-way-executable-bit-chmod"]], "The UNIX Way: Hash-Bang (She-Bang)": [[1114, "the-unix-way-hash-bang-she-bang"]], "The UNIX Way: Running": [[1114, "the-unix-way-running"]], "The Doze Way: Registry": [[1114, "the-doze-way-registry"]], "Syntax: Indentation (1)": [[1115, "syntax-indentation-1"]], "Syntax: Indentation (2)": [[1115, "syntax-indentation-2"]], "Syntax: Statements and Lines": [[1115, "syntax-statements-and-lines"]], "Commandline Arguments (sys.argv)": [[1116, "commandline-arguments-sys-argv"]], "Operating Systems and Programs": [[1116, "operating-systems-and-programs"]], "Commandline Arguments in Python": [[1116, "commandline-arguments-in-python"]], "Cosmetics: Rudimentary Argument Parsing": [[1116, "cosmetics-rudimentary-argument-parsing"]], "Further information: argparse": [[1116, null]], "Variables (1)": [[1117, "variables-1"]], "Variables (2)": [[1117, "variables-2"]], "Integer Numbers: Comparison": [[1118, "integer-numbers-comparison"]], "Numbers: Python2 vs. Python 3 (1)": [[1118, "numbers-python2-vs-python-3-1"]], "Numbers: Python2 vs. Python 3 (2)": [[1118, "numbers-python2-vs-python-3-2"]], "Strings: Python 2": [[1118, "strings-python-2"]], "Strings: Python 2 \u2014 Confusion": [[1118, "strings-python-2-confusion"]], "Strings: Python 2 - unicode (1)": [[1118, "strings-python-2-unicode-1"]], "Strings: Python 2 \u2014 unicode (2)": [[1118, "strings-python-2-unicode-2"]], "Strings: Python 3": [[1118, "strings-python-3"]], "Python 3, Generally": [[1118, "python-3-generally"]], "Boolean Values": [[1120, "boolean-values"]], "Boolean Operators": [[1120, "boolean-operators"]], "The if Statement": [[1121, "the-if-statement"], [1121, "id1"]], "Looping Constructs": [[1122, "looping-constructs"]], "Esoteric Feature: while/else": [[1122, "esoteric-feature-while-else"]], "Sequence Elements": [[1123, "sequence-elements"]], "Sequence Multiplication": [[1123, "sequence-multiplication"]], "Indexing (1)": [[1124, "indexing-1"]], "Indexing (2)": [[1124, "indexing-2"]], "Slicing: Cutting Out": [[1124, "slicing-cutting-out"]], "Slicing: Step Width": [[1124, "slicing-step-width"]], "Iteration over \u2026 Something": [[1125, "iteration-over-something"]], "break, continue, else": [[1125, "break-continue-else"]], "Iteration over Numbers: range()": [[1126, "iteration-over-numbers-range"]], "range(): Definition": [[1126, "range-definition"]], "range(): Python 2 vs. Python 3": [[1126, "range-python-2-vs-python-3"]], "Immutability: Numbers": [[1127, "immutability-numbers"]], "Modifying An Integer In-Place? (Immutability)": [[1127, "modifying-an-integer-in-place-immutability"]], "Immutability: Tuples": [[1127, "immutability-tuples"]], "Mutability: Lists (1)": [[1127, "mutability-lists-1"]], "Mutability: Lists (2)": [[1127, "mutability-lists-2"]], "Shallow Copy": [[1127, "shallow-copy"]], "Deep Copy": [[1127, "deep-copy"]], "Functions: Global and Local Scope (Livehacking Screenplay)": [[1128, "functions-global-and-local-scope-livehacking-screenplay"]], "Undefined Variable": [[1128, "undefined-variable"]], "Local Variable": [[1128, "local-variable"]], "Local and Global Variable With Same Name": [[1128, "local-and-global-variable-with-same-name"]], "Assignment to Global Variable: global": [[1128, "assignment-to-global-variable-global"]], "Functions (Slideshow)": [[1129, "functions-slideshow"]], "Why Functions?": [[1129, "why-functions"]], "Mutable Default Parameters: Attention!": [[1129, "mutable-default-parameters-attention"]], "String Delimiters": [[1131, "string-delimiters"]], "Escape Sequences": [[1131, "escape-sequences"]], "More String Tricks": [[1131, "more-string-tricks"]], "C-Style Formatting (1)": [[1132, "c-style-formatting-1"]], "C-Style Formatting: Conversions": [[1132, "c-style-formatting-conversions"]], "C-Style Formatting: Flags": [[1132, "c-style-formatting-flags"]], "C-Style Formatting: Examples": [[1132, "c-style-formatting-examples"]], "The format Method": [[1132, "the-format-method"]], "Cool Since 3.6: f-Strings": [[1132, "cool-since-3-6-f-strings"]], "Batteries Included: Checks": [[1133, "batteries-included-checks"]], "Batteries Included: Search": [[1133, "batteries-included-search"]], "Substring Search: Examples": [[1133, "substring-search-examples"]], "Split and Join (1)": [[1133, "split-and-join-1"]], "Split and Join (2)": [[1133, "split-and-join-2"]], "List Access": [[1134, "list-access"]], "List Methods: Examples": [[1134, "list-methods-examples"]], "Dictionary Access": [[1135, "dictionary-access"]], "Examples: Simple Access": [[1135, "examples-simple-access"]], "Examples: Shortcuts": [[1135, "examples-shortcuts"]], "Dictionary Iteration (1)": [[1135, "dictionary-iteration-1"]], "Dictionary Iteration (2)": [[1135, "dictionary-iteration-2"]], "Operations on Sets (1)": [[1136, "operations-on-sets-1"]], "Operations on Sets (2)": [[1136, "operations-on-sets-2"]], "Python 2 vs. Python 3": [[1137, "python-2-vs-python-3"]], "Opening Files": [[1137, "opening-files"]], "Reading Files": [[1137, "reading-files"]], "Reading Files: Pythonic": [[1137, "reading-files-pythonic"]], "Writing Files (1)": [[1137, "writing-files-1"]], "Writing Files (2)": [[1137, "writing-files-2"]], "File Modes": [[1137, "file-modes"]], "Text vs. Binary Mode": [[1137, "text-vs-binary-mode"]], "Standard Streams": [[1137, "standard-streams"]], "Function Objects": [[1138, "function-objects"]], "What\u2019s a Function?": [[1138, "what-s-a-function"]], "Function Objects?": [[1138, "id1"]], "Function Objects! (1)": [[1138, "function-objects-1"]], "Function Objects! (2)": [[1138, "function-objects-2"]], "Commandline Parsing with argparse": [[1139, "commandline-parsing-with-argparse"]], "Handling Positional Arguments": [[1139, "handling-positional-arguments"]], "Handling Named Arguments: --interval \u2026": [[1139, "handling-named-arguments-interval"]], "Python: Draft Topics": [[1141, "python-draft-topics"]], "Matplotlib": [[1142, "matplotlib"]], "Axis Ranges": [[1142, "axis-ranges"]], "Package Installation (setuptools)": [[1143, "package-installation-setuptools"]], "Files": [[1143, "files"]], "Test \u201cInstallation\u201d": [[1143, "test-installation"]], "Source Distribution": [[1143, "source-distribution"]], "Manifest": [[1143, "manifest"]], "Installing From Wheel File": [[1143, "installing-from-wheel-file"]], "Publishing On PyPI": [[1143, "publishing-on-pypi"]], "Exercise: Read CSV File, Write into Sqlite3 Database": [[1144, "exercise-read-csv-file-write-into-sqlite3-database"]], "Exercise: Read CSV File": [[1145, "exercise-read-csv-file"]], "Sample CSV File": [[1145, "sample-csv-file"]], "CSV and Databases": [[1146, "csv-and-databases"]], "Exercise: Boolean Expressions": [[1148, "exercise-boolean-expressions"]], "Exercise: Even Numbers (while)": [[1149, "exercise-even-numbers-while"]], "Exercise: Greeting, Depending on Time of Day": [[1150, "exercise-greeting-depending-on-time-of-day"]], "Exercises (External)": [[1151, "exercises-external"]], "Exercise: Swap Two Variables": [[1153, "exercise-swap-two-variables"]], "Exercise: Username/Password Check": [[1154, "exercise-username-password-check"]], "Exercise: Digit to English Word": [[1155, "exercise-digit-to-english-word"]], "Exercise: Dictionary: Errors?": [[1156, "exercise-dictionary-errors"]], "Exercise: Eliminate Empty/Comment-Only Lines": [[1157, "exercise-eliminate-empty-comment-only-lines"]], "Exercise: Generator: Fibonacci": [[1158, "exercise-generator-fibonacci"]], "Exercise: Primeness (for)": [[1159, "exercise-primeness-for"]], "Exercises (Legacy)": [[1160, "exercises-legacy"]], "Exercise: Functions: join()": [[1161, "exercise-functions-join"]], "Exercise: Determine Maximum of Two Numbers (Function)": [[1163, "exercise-determine-maximum-of-two-numbers-function"]], "Exercise: Mixed List (Executable Program)": [[1164, "exercise-mixed-list-executable-program"]], "Exercise: Mixed List (Interactive Interpreter)": [[1165, "exercise-mixed-list-interactive-interpreter"]], "Exercise: Parsing /etc/passwd": [[1166, "exercise-parsing-etc-passwd"]], "Sample /etc/passwd file": [[1166, null]], "Implementation Strategy": [[1166, "implementation-strategy"]], "Exercise: Primeness (Function)": [[1167, "exercise-primeness-function"]], "Exercise: Reverting Lines of a File": [[1168, "exercise-reverting-lines-of-a-file"]], "Exercise: String (Right-Justify)": [[1169, "exercise-string-right-justify"]], "Exercise: Function: uniq()": [[1170, "exercise-function-uniq"]], "Exercise: Generator: uniq()": [[1171, "exercise-generator-uniq"]], "Exercise: Counting Lines, Words, Characters": [[1172, "exercise-counting-lines-words-characters"]], "Exercise: Primeness (while)": [[1173, "exercise-primeness-while"]], "Sensors, And Data Acquisition (Exercise Series)": [[1174, "sensors-and-data-acquisition-exercise-series"]], "Setting Paths": [[1175, "setting-paths"]], "Create (And Activate) A Virtual Environment For The Project": [[1175, "create-and-activate-a-virtual-environment-for-the-project"]], "Install Requirements": [[1175, "install-requirements"]], "Exercise: Basic \u201cSensor\u201d": [[1176, "exercise-basic-sensor"]], "Specification, And Setup": [[1176, "specification-and-setup"]], "Verification": [[1176, "verification"]], "Unit Test": [[1176, "unit-test"]], "Exercise: Read CSV File (csv.dictreader)": [[1177, "exercise-read-csv-file-csv-dictreader"]], "Users-header-cp1252.csv": [[1177, "id1"]], "Exercise: Refactoring - Extract CSV Reading Into Function (csv.dictreader)": [[1178, "exercise-refactoring-extract-csv-reading-into-function-csv-dictreader"]], "Exercise: Read CSV File (csv.reader)": [[1179, "exercise-read-csv-file-csv-reader"]], "Users-noheader-cp1252.csv": [[1179, "id2"]], "Exercise: Refactoring - Extract CSV Reading Into Function (csv.reader)": [[1180, "exercise-refactoring-extract-csv-reading-into-function-csv-reader"]], "User Database (Exercise Series)": [[1181, "user-database-exercise-series"]], "Exercise: MQTT: Publish User Records": [[1182, "exercise-mqtt-publish-user-records"]], "Exercise: Away From Raw Dictionaries": [[1183, "exercise-away-from-raw-dictionaries"]], "Test Code": [[1183, "test-code"], [1184, "test-code"], [1185, "test-code"]], "Exercise: Convert User Record To JSON And Back": [[1184, "exercise-convert-user-record-to-json-and-back"]], "Exercise: Refactoring - Extract Both CSV Formats Into Module": [[1185, "exercise-refactoring-extract-both-csv-formats-into-module"]], "Python: All Material, Interrelated": [[1186, "python-all-material-interrelated"]], "Python Programming: From Absolute Beginner to Advanced Productivity": [[1187, "python-programming-from-absolute-beginner-to-advanced-productivity"]], "Sample Trainings": [[1187, "sample-trainings"]], "More Information": [[1187, "more-information"]], "Python Links": [[1188, "python-links"]], "Advanced Python": [[1188, "advanced-python"], [1249, "advanced-python"]], "David Beazley": [[1188, "david-beazley"]], "Raymond Hettinger": [[1188, "raymond-hettinger"]], "Machine Learning, Artificial Intelligence": [[1189, "machine-learning-artificial-intelligence"]], "K-Means": [[1190, "k-means"]], "Topic Overview": [[1190, "topic-overview"], [1194, "topic-overview"]], "Artifacts": [[1190, "artifacts"]], "Topic Dependencies": [[1190, "topic-dependencies"], [1194, "topic-dependencies"]], "Linear Regression: Running Code (no Notebook!)": [[1191, "linear-regression-running-code-no-notebook"]], "Weather History Dataset": [[1192, "weather-history-dataset"]], "Linear Regression: Jupyter Notebook": [[1193, "Linear-Regression:-Jupyter-Notebook"]], "pandas.DataFrame": [[1193, "pandas.DataFrame"]], "Reading Data": [[1193, "Reading-Data"]], "Relationship Between pandas.DataFrame and numpy.ndarray": [[1193, "Relationship-Between-pandas.DataFrame-and-numpy.ndarray"]], "Extracting Input and Output Features from a pandas.DataFrame": [[1193, "Extracting-Input-and-Output-Features-from-a-pandas.DataFrame"]], "Plotting with matplotlib": [[1193, "Plotting-with-matplotlib"]], "Data Splicing: Split into Training and Test Data": [[1193, "Data-Splicing:-Split-into-Training-and-Test-Data"]], "Creating the Model: Algorithm + Training Data": [[1193, "Creating-the-Model:-Algorithm-+-Training-Data"]], "Verify the Model": [[1193, "Verify-the-Model"]], "Linear Regression": [[1194, "linear-regression"]], "Running Code": [[1194, "running-code"]], "Dataset": [[1194, "dataset"]], "Machine Learning: Concepts and Terminology": [[1195, "machine-learning-concepts-and-terminology"]], "How Far Is Mankind from Creating God": [[1195, "how-far-is-mankind-from-creating-god"]], "Basic Terminology: Algorithm and Model": [[1195, "basic-terminology-algorithm-and-model"]], "Basic Terminology: Features and Data": [[1195, "basic-terminology-features-and-data"]], "Types of Machine Learning": [[1195, "types-of-machine-learning"]], "Problems Solved": [[1195, "problems-solved"], [1217, "problems-solved"], [1224, "problems-solved"]], "CSV Files": [[1196, "csv-files"]], "CSV in its Origins": [[1196, "csv-in-its-origins"]], "The csv Module: csv.reader": [[1196, "the-csv-module-csv-reader"]], "And Tuple Unpacking?": [[1196, "and-tuple-unpacking"]], "Going Insane: CSV? SCSV?": [[1196, "going-insane-csv-scsv"]], "More Tuning Needed: Quoting": [[1196, "more-tuning-needed-quoting"]], "Tuning Options": [[1196, "tuning-options"]], "And Headings?": [[1196, "and-headings"]], "Enter csv.DictReader": [[1196, "enter-csv-dictreader"]], "DBAPI 2": [[1197, "dbapi-2"]], "Database Interfaces": [[1197, "database-interfaces"]], "DBAPI 2.0": [[1197, "dbapi-2-0"]], "Caveat: Transaction Lifetime": [[1197, "caveat-transaction-lifetime"]], "Caveat: Isolation": [[1197, "caveat-isolation"]], "Databases": [[1198, "databases"]], "DBAPI 2: PostgreSQL": [[1199, "dbapi-2-postgresql"]], "DBAPI 2 Example: Postgres": [[1199, "dbapi-2-example-postgres"]], "DBAPI 2: sqlite3": [[1200, "dbapi-2-sqlite3"]], "SQLite3": [[1200, "sqlite3"]], "SQLite3 Connection": [[1200, "sqlite3-connection"]], "SQLite3: Cursors and Statements": [[1200, "sqlite3-cursors-and-statements"]], "SQLite3: Filling the Database": [[1200, "sqlite3-filling-the-database"]], "SQLite3: Queries - Result Set": [[1200, "sqlite3-queries-result-set"]], "SQLite3: Bind Parameters": [[1200, "sqlite3-bind-parameters"]], "ASCII": [[1201, "ascii"]], "ISO Latin 1 (ISO-8859-1)": [[1201, "iso-latin-1-iso-8859-1"]], "And Python?": [[1201, "and-python"]], "Liebe Gr\u00fc\u00dfe, J\u00f6rg": [[1201, "liebe-grusze-jorg"]], "A Better Encoding for Liebe Gr\u00fc\u00dfe, J\u00f6rg: ISO-8859-1": [[1201, "a-better-encoding-for-liebe-grusze-jorg-iso-8859-1"]], "Encoding Mess": [[1201, "encoding-mess"]], "And \u795d\u597d, J\u00f6rg? (1)": [[1201, "and-jorg-1"]], "And \u795d\u597d, J\u00f6rg? (2)": [[1201, "and-jorg-2"]], "Enter UTF-8": [[1201, "enter-utf-8"]], "Boundary Code": [[1201, "boundary-code"]], "Ah Yes: decode()": [[1201, "ah-yes-decode"]], "And Source Encoding?": [[1201, "and-source-encoding"]], "Python: Miscellaneous Topics": [[1202, "python-miscellaneous-topics"]], "The import Statement (incomplete)": [[1203, "the-import-statement-incomplete"]], "Server/Broker": [[1204, "server-broker"]], "Starting the Service": [[1204, "starting-the-service"]], "Publishing a Message in Python": [[1204, "publishing-a-message-in-python"]], "Subscribing a Topic in Python": [[1204, "subscribing-a-topic-in-python"]], "Message Payload?": [[1204, "message-payload"]], "Pandas: Adding Rows": [[1205, "pandas-adding-rows"]], "Add Rows: Assign To New Row Number": [[1205, "add-rows-assign-to-new-row-number"]], "Add Rows: append() (Deprecated)": [[1205, "add-rows-append-deprecated"]], "Add Rows: Concatenating Frames": [[1205, "add-rows-concatenating-frames"]], "Pandas: Basics (DataFrame And Series)": [[1206, "pandas-basics-dataframe-and-series"]], "Naive: Objects, And Collections Of Objects": [[1206, "naive-objects-and-collections-of-objects"]], "Inverted: Objects, And Collections Of Objects (\u27f6 DataFrame)": [[1206, "inverted-objects-and-collections-of-objects-longrightarrow-dataframe"]], "Enter pandas, DataFrame, Series": [[1206, "enter-pandas-dataframe-series"]], "Selecting A Column \u27f6 Series": [[1206, "selecting-a-column-longrightarrow-series"]], "Selecting Multiple Columns": [[1206, "selecting-multiple-columns"]], "To Copy Or Not To Copy": [[1206, "to-copy-or-not-to-copy"]], "Pandas: Filters": [[1207, "pandas-filters"]], "Basic Filter Example": [[1207, "basic-filter-example"]], "Filter? Bitmap!": [[1207, "filter-bitmap"]], "Confusion: Filter/Column Addressing": [[1207, "confusion-filter-column-addressing"]], "Column Selection And Filters": [[1207, "column-selection-and-filters"]], "Boolean Expressions: Bitwise Operators! Braces!": [[1207, "boolean-expressions-bitwise-operators-braces"]], "Negation: ~": [[1207, "negation"]], "Neat Helpers": [[1207, "neat-helpers"]], "Random Material": [[1208, "random-material"]], "Pandas: Selecting Rows (And Columns) With iloc[]": [[1209, "pandas-selecting-rows-and-columns-with-iloc"]], "Row By Number: iloc[]": [[1209, "row-by-number-iloc"]], "So What Is A Row, Then?": [[1209, "so-what-is-a-row-then"]], "Selecting Multiple Rows": [[1209, "selecting-multiple-rows"]], "Selecting Rows And Columns": [[1209, "selecting-rows-and-columns"]], "Pandas: Indexes": [[1210, "pandas-indexes"]], "Default Index: Row Number": [[1210, "default-index-row-number"]], "Setting Custom Index": [[1210, "setting-custom-index"]], "Setting Custom Index, inplace=True": [[1210, "setting-custom-index-inplace-true"]], "Custom Index, And loc[]": [[1210, "custom-index-and-loc"]], "Custom Index, And iloc[]": [[1210, "custom-index-and-iloc"]], "Sorting DataFrame Object By Index Column": [[1210, "sorting-dataframe-object-by-index-column"]], "Pandas: Selecting Rows (And Columns) With loc[]": [[1211, "pandas-selecting-rows-and-columns-with-loc"]], "Rows (And Columns) By Label": [[1211, "rows-and-columns-by-label"]], "Hiccup: Slices Are Inclusive": [[1211, "hiccup-slices-are-inclusive"]], "Column Selection By Label": [[1211, "column-selection-by-label"]], "Columns By Slicing: Inclusive": [[1211, "columns-by-slicing-inclusive"]], "Pandas: Adding/Modifying Columns": [[1212, "pandas-adding-modifying-columns"]], "Example 1: Lowercasing A Column Of Strings": [[1212, "example-1-lowercasing-a-column-of-strings"]], "Example 1: Modifying The email Column": [[1212, "example-1-modifying-the-email-column"]], "Example 2: Adding A normalized_email Column": [[1212, "example-2-adding-a-normalized-email-column"]], "What If No Prebuilt Functionality Exists? apply() To The Rescue!": [[1212, "what-if-no-prebuilt-functionality-exists-apply-to-the-rescue"]], "apply() -ing Custom Functions": [[1212, "apply-ing-custom-functions"]], "XML: ElementTree (etree)": [[1213, "xml-elementtree-etree"]], "SAX and DOM": [[1213, "sax-and-dom"]], "ElementTree": [[1213, "elementtree"]], "A Very Simple Document": [[1213, "a-very-simple-document"]], "Text (1)": [[1213, "text-1"]], "Text (2)": [[1213, "text-2"]], "Writing XML Documents": [[1213, "writing-xml-documents"]], "Reading XML Documents": [[1213, "reading-xml-documents"]], "Visual Studio Code for Python Programming": [[1214, "visual-studio-code-for-python-programming"]], "Python: Project/Package Management": [[1215, "python-project-package-management"]], "Python Package Index (Livehacking Screenplay)": [[1216, "python-package-index-livehacking-screenplay"]], "Invocation": [[1216, "invocation"]], "Help": [[1216, "help"]], "Most Used Subcommands": [[1216, "most-used-subcommands"]], "Subcommand Help": [[1216, "subcommand-help"]], "System vs. User": [[1216, "system-vs-user"]], "Search": [[1216, "search"]], "Python Package Index (Slideshow)": [[1217, "python-package-index-slideshow"]], "Python Package Index (PyPI)": [[1217, "python-package-index-pypi"]], "Python Package Index": [[1218, "python-package-index"]], "Packaging, PyPI Upload (Link Collection)": [[1219, "packaging-pypi-upload-link-collection"]], "PyTest": [[1220, "pytest"]], "pytest Introduction, By Example": [[1221, "pytest-introduction-by-example"]], "Sample Project Structure": [[1221, "sample-project-structure"]], "pytest: Installation, Documentation": [[1221, "pytest-installation-documentation"]], "And PYTHONPATH?": [[1221, "and-pythonpath"]], "A Simple Test": [[1221, "a-simple-test"]], "Failing Tests": [[1221, "failing-tests"]], "A More Realistic Example": [[1221, "a-more-realistic-example"]], "Fixtures": [[1221, "fixtures"]], "Temporary Test Directory": [[1221, "temporary-test-directory"]], "Marking Tests as Expected to Fail": [[1221, "marking-tests-as-expected-to-fail"]], "The unittest Module": [[1222, "the-unittest-module"]], "Simplest Example": [[1222, "simplest-example"]], "Using a Fixture": [[1222, "using-a-fixture"]], "Multiple Test Cases With Same Fixture": [[1222, "multiple-test-cases-with-same-fixture"]], "Auto Recognizing Test Methods": [[1222, "auto-recognizing-test-methods"]], "The Meat of a Test": [[1222, "the-meat-of-a-test"]], "Recommendations": [[1222, "recommendations"]], "Virtual Environments (Livehacking Screenplay)": [[1223, "virtual-environments-livehacking-screenplay"]], "First: Help": [[1223, "first-help"]], "Local Package Installation": [[1223, "local-package-installation"]], "Freezing an Environment": [[1223, "freezing-an-environment"]], "Destroying an Environment": [[1223, "destroying-an-environment"]], "Recreating an Environment": [[1223, "recreating-an-environment"]], "Using Virtual Environments With Visual Studio Code": [[1223, "using-virtual-environments-with-visual-studio-code"]], "Virtual Environments (Slideshow)": [[1224, "virtual-environments-slideshow"]], "Virtual Environments (Links)": [[1224, "virtual-environments-links"]], "Virtual Environments": [[1225, "virtual-environments"]], "Code: Unittest: GTest Basics": [[1227, "code-unittest-gtest-basics"]], "Screenplay: Unittest: GTest Basics": [[1228, "screenplay-unittest-gtest-basics"]], "Before We Start": [[1228, "before-we-start"]], "Simplest Test: No Test": [[1228, "simplest-test-no-test"]], "Next Simplest: Single File": [[1228, "next-simplest-single-file"]], "Executing Tests Selectively": [[1228, "executing-tests-selectively"]], "Fatal Failure": [[1228, "fatal-failure"]], "FAIL()": [[1228, "fail"]], "ASSERT_*()": [[1228, "assert"]], "Non-Fatal Failure": [[1228, "non-fatal-failure"]], "Custom Message Output": [[1228, "custom-message-output"]], "Last Not Least: Structure": [[1228, "last-not-least-structure"]], "Test Cases and Suites": [[1228, "test-cases-and-suites"]], "Unittest: GTest Basics": [[1229, "unittest-gtest-basics"]], "Screenplay: Unittest: GTest and CMake": [[1230, "screenplay-unittest-gtest-and-cmake"]], "Installed: to be found in Standard Paths": [[1230, "installed-to-be-found-in-standard-paths"]], "CMake: \u201cFind Modules\u201d": [[1230, "cmake-find-modules"]], "Executing Tests As Part of Build": [[1230, "executing-tests-as-part-of-build"]], "Tests That Are Expected to Fail": [[1230, "tests-that-are-expected-to-fail"]], "Unittest: GTest and CMake": [[1231, "unittest-gtest-and-cmake"]], "Code: Unittest: GTest Fixtures": [[1232, "code-unittest-gtest-fixtures"]], "Screenplay: Unittest: GTest Fixtures": [[1233, "screenplay-unittest-gtest-fixtures"]], "Predefined Environment for a Number of Tests": [[1233, "predefined-environment-for-a-number-of-tests"]], "Environment is Isolated Per Test": [[1233, "environment-is-isolated-per-test"]], "More Complex Environment: SetUp(), TearDown()": [[1233, "more-complex-environment-setup-teardown"]], "Unittest: GTest Fixtures": [[1234, "unittest-gtest-fixtures"]], "Organisatorisches: Buchung, Kursablauf": [[1235, "organisatorisches-buchung-kursablauf"]], "Online Schulungen": [[1235, null]], "Buchung": [[1235, "buchung"]], "Kursgestaltung": [[1235, "kursgestaltung"]], "\u00dcbungen": [[1235, "ubungen"]], "Unterlagen & Download": [[1235, "unterlagen-download"]], "Linux from Scratch, 16.9.2013, M\u00fcnchen": [[1236, "linux-from-scratch-16-9-2013-munchen"]], "GRUB 0.97": [[1236, "grub-0-97"]], "Cross Systeme Bauen": [[1236, "cross-systeme-bauen"]], "Init, oder der Prozess mit der ID 1": [[1236, "init-oder-der-prozess-mit-der-id-1"]], "Verschiedenes": [[1236, "verschiedenes"]], "Shell Scripting/Bourne Again Shell (Bash)": [[1237, "shell-scripting-bourne-again-shell-bash"]], "Zielpublikum": [[1237, "zielpublikum"], [1239, "zielpublikum"], [1240, "zielpublikum"], [1245, "zielpublikum"], [1247, "zielpublikum"], [1252, "zielpublikum"], [1253, "zielpublikum"], [1259, "zielpublikum"]], "Kursinhalt": [[1237, "kursinhalt"], [1239, "kursinhalt"], [1240, "kursinhalt"], [1245, "kursinhalt"], [1247, "kursinhalt"], [1248, "kursinhalt"], [1252, "kursinhalt"], [1253, "kursinhalt"], [1254, "kursinhalt"], [1255, "kursinhalt"], [1257, "kursinhalt"], [1258, "kursinhalt"], [1259, "kursinhalt"]], "Empfohlene Vorkenntnisse": [[1237, "empfohlene-vorkenntnisse"], [1239, "empfohlene-vorkenntnisse"], [1240, "empfohlene-vorkenntnisse"], [1245, "empfohlene-vorkenntnisse"], [1247, "empfohlene-vorkenntnisse"], [1248, "empfohlene-vorkenntnisse"], [1252, "empfohlene-vorkenntnisse"], [1253, "empfohlene-vorkenntnisse"], [1254, "empfohlene-vorkenntnisse"], [1255, "empfohlene-vorkenntnisse"], [1257, "empfohlene-vorkenntnisse"], [1258, "empfohlene-vorkenntnisse"], [1259, "empfohlene-vorkenntnisse"]], "C: Einf\u00fchrung": [[1238, "c-einfuhrung"]], "C f\u00fcr Fortgeschrittene": [[1239, "c-fur-fortgeschrittene"]], "C++: Einf\u00fchrung und \u00dcberblick": [[1240, "c-einfuhrung-und-uberblick"]], "An Introduction to Modern C++, In Three Days": [[1241, "an-introduction-to-modern-c-in-three-days"]], "C and C++ Programming": [[1242, "c-and-c-programming"]], "The Course": [[1243, null]], "Target Audience": [[1243, "target-audience"]], "Recommended Prior Knowledge": [[1243, "recommended-prior-knowledge"]], "Design Patterns For C++ Developers": [[1244, "design-patterns-for-c-developers"]], "Embedded Software Development: Hardware, Realtime, and Memory Management": [[1245, "embedded-software-development-hardware-realtime-and-memory-management"]], "Linux Kernel Driver Development": [[1246, "linux-kernel-driver-development"], [864, "linux-kernel-driver-development"]], "Course Contents": [[1246, "course-contents"]], "Sample Project": [[1246, "sample-project"]], "Linux Basics: Eine Einf\u00fchrung Anhand von Beispielen": [[1247, "linux-basics-eine-einfuhrung-anhand-von-beispielen"]], "GNU Make: Die Mutter aller Build Tools": [[1248, "gnu-make-die-mutter-aller-build-tools"]], "Herdt": [[1251, "herdt"]], "Eine Woche mit dem Raspberry Pi": [[1252, "eine-woche-mit-dem-raspberry-pi"]], "Subversion (SVN)": [[1253, "subversion-svn"]], "Linux Systems Programming: Introduction": [[1254, "linux-systems-programming-introduction"]], "Linux Systems Programming: Virtual Memory, IPC, Shared Libraries": [[1255, "linux-systems-programming-virtual-memory-ipc-shared-libraries"]], "Linux Systems Programming: Multithreading": [[1257, "linux-systems-programming-multithreading"]], "Linux Systems Programming: Network Programming": [[1258, "linux-systems-programming-network-programming"]], "Unittesting and Test Driven Development": [[1259, "unittesting-and-test-driven-development"]], "Processes, Scheduling, and Virtual Memory": [[920, "processes-scheduling-and-virtual-memory"], [921, "processes-scheduling-and-virtual-memory"], [159, "processes-scheduling-and-virtual-memory"]], "Quiz: Linux Basics": [[920, "quiz-linux-basics"]], "User Space, Kernel Space": [[920, "user-space-kernel-space"], [921, "user-space-kernel-space"]], "Quiz: Linux Basics (Solution)": [[921, "quiz-linux-basics-solution"]], "Quiz: Toolchain": [[1068, "quiz-toolchain"]], "Native": [[1068, "native"], [1069, "native"]], "Cross": [[1068, "cross"], [1069, "cross"]], "Quiz: Toolchain (Solutions)": [[1069, "quiz-toolchain-solutions"]], "SS2024: Exam 2024-06-28 (Handout)": [[159, "ss2024-exam-2024-06-28-handout"]], "Linux: OS Concepts": [[159, "linux-os-concepts"]], "Embedded Computing 1 (STECE-2022): Material": [[162, "embedded-computing-1-stece-2022-material"]], "Embedded Computing (STECE-2022)": [[145, "embedded-computing-stece-2022"]], "Embedded Computing 2 (STECE-2022): Winter": [[164, "embedded-computing-2-stece-2022-winter"]], "Embedded Computing 2 (STECE-2022): Material": [[165, "embedded-computing-2-stece-2022-material"]], "Crazy Car On Linux Project Plan": [[165, "crazy-car-on-linux-project-plan"]], "Sensors": [[165, "sensors"]], "Embedded Computing 2 (STECE-2022): Syllabus": [[166, "embedded-computing-2-stece-2022-syllabus"]], "CMake: Advanced Topics (2024-07-01)": [[415, "cmake-advanced-topics-2024-07-01"], [379, "cmake-advanced-topics-2024-07-01"]], "Bisher Gehaltene": [[415, "bisher-gehaltene"]], "CMake: Basics (2024-06-18)": [[415, "cmake-basics-2024-06-18"]], "Python Advanced (2023-11-22 - 2023-11-24)": [[415, "python-advanced-2023-11-22-2023-11-24"]], "Clean Code Development With Python (2023-03-28 - 2023-03-30)": [[415, "clean-code-development-with-python-2023-03-28-2023-03-30"]], "C++ For Embedded Developers (2023-03-20 - 2023-03-22)": [[415, "c-for-embedded-developers-2023-03-20-2023-03-22"]], "Python (2022-11-07 - 2022-11-10, 2022-12-01)": [[415, "python-2022-11-07-2022-11-10-2022-12-01"]], "C++: A New Language Starting In 2011 (2022-07-26 - 2022-07-27)": [[415, "c-a-new-language-starting-in-2011-2022-07-26-2022-07-27"]], "C++: A New Language Starting In 2011 (2022-06-14 - 2022-06-15)": [[415, "c-a-new-language-starting-in-2011-2022-06-14-2022-06-15"]], "Python Advanced (2022-03-15 - 2022-03-17)": [[415, "python-advanced-2022-03-15-2022-03-17"]], "Python Basics (2021-08-23 - 2021-08-25)": [[415, "python-basics-2021-08-23-2021-08-25"]], "Programmieren mit C++ (2021-07-12 - 2021-07-16)": [[415, "programmieren-mit-c-2021-07-12-2021-07-16"]], "Linux Basics, Shell Scripting (2019-03-29 - 1.4.2021)": [[415, "linux-basics-shell-scripting-2019-03-29-1-4-2021"]], "Python (22.3.2021 - 25.3.2021)": [[415, "python-22-3-2021-25-3-2021"]], "Python Advanced (15.3.2021 - 17.3.2021)": [[415, "python-advanced-15-3-2021-17-3-2021"]], "Linux Kernel Driver Development Basics (8.3.2021 - 12.3.2020)": [[415, "linux-kernel-driver-development-basics-8-3-2021-12-3-2020"]], "Programmierung Grundlagen, anhand von Python (13. und 14.1.2021)": [[415, "programmierung-grundlagen-anhand-von-python-13-und-14-1-2021"]], "Linux und Raspberry Pi (3.11.2020, 4.11.2020, 17.11.2020)": [[415, "linux-und-raspberry-pi-3-11-2020-4-11-2020-17-11-2020"]], "Python Basics (19.10.2020 - 22.10.2020)": [[415, "python-basics-19-10-2020-22-10-2020"]], "Python Advanced (13.5.2020 - 14.5.2020 bei einer Firma in Graz)": [[415, "python-advanced-13-5-2020-14-5-2020-bei-einer-firma-in-graz"]], "C++ f\u00fcr Embedded-Entwickler (30.3.2020 - 4.4.2020, bei einer Firma in Baden-W\u00fcrttemberg)": [[415, "c-fur-embedded-entwickler-30-3-2020-4-4-2020-bei-einer-firma-in-baden-wurttemberg"]], "IPC in Linux (10.1.2020, bei einer Firma in Graz)": [[415, "ipc-in-linux-10-1-2020-bei-einer-firma-in-graz"]], "Python/NumPy (12.11.2019 - 13.11.2019 in Graz)": [[415, "python-numpy-12-11-2019-13-11-2019-in-graz"]], "Python Advanced (9.10.2019 - 10.10.2019 bei einer Firma in Graz)": [[415, "python-advanced-9-10-2019-10-10-2019-bei-einer-firma-in-graz"]], "C f\u00fcr Fortgeschrittene (30.9.2019 - 4.10.2019 in Wiener Neustadt)": [[415, "c-fur-fortgeschrittene-30-9-2019-4-10-2019-in-wiener-neustadt"]], "Einf\u00fchrung in Raspberry Pi (8.7.2019 - 10.7.2019 in Graz)": [[415, "einfuhrung-in-raspberry-pi-8-7-2019-10-7-2019-in-graz"]], "Python Basics (24.6.2019 - 27.6.2019, bei einer Firma in Ober\u00f6sterreich)": [[415, "python-basics-24-6-2019-27-6-2019-bei-einer-firma-in-oberosterreich"]], "Linux Basics (13.6.2019 - 19.6.2019, bei einer Firma in Ober\u00f6sterreich)": [[415, "linux-basics-13-6-2019-19-6-2019-bei-einer-firma-in-oberosterreich"]], "Python Basics (3.6.2019 - 6.6.2019, bei einer Firma in Ober\u00f6sterreich)": [[415, "python-basics-3-6-2019-6-6-2019-bei-einer-firma-in-oberosterreich"]], "Linux Big Picture (27.5.2019 - 29.5.2019, bei einer Firma in Baden-W\u00fcrttemberg)": [[415, "linux-big-picture-27-5-2019-29-5-2019-bei-einer-firma-in-baden-wurttemberg"]], "Python Basics (23.5.2019 - 24.5.2019, bei einer Firma in der Obersteiermark)": [[415, "python-basics-23-5-2019-24-5-2019-bei-einer-firma-in-der-obersteiermark"]], "Korn Shell Scripting (20.5.2019 - 22.5.2019 bei einer Firma in Salzburg)": [[415, "korn-shell-scripting-20-5-2019-22-5-2019-bei-einer-firma-in-salzburg"]], "Linux Basics (13.5.2019 - 15.5.2019, bei einer Firma in Ober\u00f6sterreich)": [[415, "linux-basics-13-5-2019-15-5-2019-bei-einer-firma-in-oberosterreich"]], "C: Ausgew\u00e4hlte Themen (17.12.2018 - 19.12.2018 in Graz)": [[415, "c-ausgewahlte-themen-17-12-2018-19-12-2018-in-graz"]], "Python Basics (1.10.2018 - 4.10.2018, bei einer Firma in Ober\u00f6sterreich)": [[415, "python-basics-1-10-2018-4-10-2018-bei-einer-firma-in-oberosterreich"]], "Linux Basics, Shell Scripting (16.7.2018 - 20.7.2018, bei einer Firma in Ober\u00f6sterreich)": [[415, "linux-basics-shell-scripting-16-7-2018-20-7-2018-bei-einer-firma-in-oberosterreich"]], "Advanced C on Linux (9.7.2018 - 11.7.2018, Raum N\u00fcrnberg)": [[415, "advanced-c-on-linux-9-7-2018-11-7-2018-raum-nurnberg"]], "Linux f\u00fcr Fortgeschrittene (12.3.2018 - 16.3.2018, Oberb\u00fcren/Schweiz)": [[415, "linux-fur-fortgeschrittene-12-3-2018-16-3-2018-oberburen-schweiz"]], "Linux und Python (11.9.2017 - 13.9.2017, bei einer Firma im Raum M\u00fcnchen)": [[415, "linux-und-python-11-9-2017-13-9-2017-bei-einer-firma-im-raum-munchen"]], "Linux Lowlevel Programming (28.8.2017 - 30.8.2017, Raum N\u00fcrnberg)": [[415, "linux-lowlevel-programming-28-8-2017-30-8-2017-raum-nurnberg"]], "C Refresher (23.8.2017 - 24.8.2017, Raum N\u00fcrnberg)": [[415, "c-refresher-23-8-2017-24-8-2017-raum-nurnberg"]], "C++11: Ausgew\u00e4hlte Themen (6.6.2017 - 8.6.2017 bei einer Firma in Graz)": [[415, "c-11-ausgewahlte-themen-6-6-2017-8-6-2017-bei-einer-firma-in-graz"]], "Linux vom Programmiererstandpunkt (30.12.2016 in Wien)": [[415, "linux-vom-programmiererstandpunkt-30-12-2016-in-wien"]], "Embedded Linux anhand des Raspberry Pi (17.10.2016 - 21.10.2016 bei einer Firma in Baden-W\u00fcrttemberg)": [[415, "embedded-linux-anhand-des-raspberry-pi-17-10-2016-21-10-2016-bei-einer-firma-in-baden-wurttemberg"]], "Linux vom Programmiererstandpunkt (20.9.2016 in Wien)": [[415, "linux-vom-programmiererstandpunkt-20-9-2016-in-wien"]], "C for Advanced Users (5.7.2016 - 6.7.2016, Raum N\u00fcrnberg)": [[415, "c-for-advanced-users-5-7-2016-6-7-2016-raum-nurnberg"]], "Einf\u00fchrung in C++ (22.2.2016 - 26.2.2016 bei einer Firma in Graz)": [[415, "einfuhrung-in-c-22-2-2016-26-2-2016-bei-einer-firma-in-graz"]], "Advanced Python Workshop (20.2.2017 - 23.2.2017, bei einer Firma in Ober\u00f6sterreich)": [[415, "advanced-python-workshop-20-2-2017-23-2-2017-bei-einer-firma-in-oberosterreich"]], "Embedded Linux (30.11.2015 - 4.12.2015, Bodenseo, Hemmenhofen am Bodensee)": [[415, "embedded-linux-30-11-2015-4-12-2015-bodenseo-hemmenhofen-am-bodensee"]], "Linux Kernel, Realtime (17.11.2015 - 19.11.2015 bei einer Firma in Graz)": [[415, "linux-kernel-realtime-17-11-2015-19-11-2015-bei-einer-firma-in-graz"]], "Linux Basics (3.11.2015 - 5.11.2015 bei einer Firma in Graz)": [[415, "linux-basics-3-11-2015-5-11-2015-bei-einer-firma-in-graz"]], "Einf\u00fchrung in Python (5.10.2015 - 6.10.2015 in Wien)": [[415, "einfuhrung-in-python-5-10-2015-6-10-2015-in-wien"]], "Linux Basics, Systemnahe Programmierung (27.7.2015 - 31.7.2015, bei einer Firma in Ober\u00f6sterreich)": [[415, "linux-basics-systemnahe-programmierung-27-7-2015-31-7-2015-bei-einer-firma-in-oberosterreich"]], "Design Patterns and Test Driven Development (1.7.2015 - 3.7.2015, Raum N\u00fcrnberg)": [[415, "design-patterns-and-test-driven-development-1-7-2015-3-7-2015-raum-nurnberg"]], "C for Advanced Users (9.12.2014 - 11.12.2014, Raum N\u00fcrnberg)": [[415, "c-for-advanced-users-9-12-2014-11-12-2014-raum-nurnberg"]], "Python (1.6.2015 - 3.6.2015, Mathias Kettner in M\u00fcnchen)": [[415, "python-1-6-2015-3-6-2015-mathias-kettner-in-munchen"]], "Linux Basics, Kernel, Git (9.3.2015 - 13.3.2015, Siemens Braunschweig)": [[415, "linux-basics-kernel-git-9-3-2015-13-3-2015-siemens-braunschweig"]], "Embedded Linux (28.1.2015 - 30.1.2015, bei einer Firma im Raum M\u00fcnchen)": [[415, "embedded-linux-28-1-2015-30-1-2015-bei-einer-firma-im-raum-munchen"]], "C for Intermediate Users (9.12.2014 - 11.12.2014, Raum N\u00fcrnberg)": [[415, "c-for-intermediate-users-9-12-2014-11-12-2014-raum-nurnberg"]], "Linux from Scratch (1.12.2014 - 5.12.2014 LPD Hannover)": [[415, "linux-from-scratch-1-12-2014-5-12-2014-lpd-hannover"]], "Einf\u00fchrung in C++ (7.10.2014 - 10.10.2014 in Wien)": [[415, "einfuhrung-in-c-7-10-2014-10-10-2014-in-wien"]], "Systemnahe Programmierung unter Linux (14.4.2014 - 17.4.2014 in K\u00f6ln)": [[415, "systemnahe-programmierung-unter-linux-14-4-2014-17-4-2014-in-koln"]], "Einf\u00fchrung in C++ (3.3.2014 - 14.3.2014 in Wien)": [[415, "einfuhrung-in-c-3-3-2014-14-3-2014-in-wien"]], "Projektverwaltung mit Subversion und CMake (24.2.2014 - 27.2.2014 in Wien)": [[415, "projektverwaltung-mit-subversion-und-cmake-24-2-2014-27-2-2014-in-wien"]], "Einf\u00fchrung in Python (23.6.2014 - 26.6.2014, LKA Niedersachsen)": [[415, "einfuhrung-in-python-23-6-2014-26-6-2014-lka-niedersachsen"]], "Linux: Boot-Konfiguration und Systemnahe Programmierung (27.5.2014 - 30.5.2014 in Graz)": [[415, "linux-boot-konfiguration-und-systemnahe-programmierung-27-5-2014-30-5-2014-in-graz"]], "Einf\u00fchrung in C (11.11.2013 - 22.11.2013 in Wien)": [[415, "einfuhrung-in-c-11-11-2013-22-11-2013-in-wien"]], "Linux Basics (28.10.2013 - 31.10.2013 in Wien)": [[415, "linux-basics-28-10-2013-31-10-2013-in-wien"]], "Linux Basics, Embedded Linux (14.10.2013 - 15.10.2013 bei einer Firma im Raum M\u00fcnchen)": [[415, "linux-basics-embedded-linux-14-10-2013-15-10-2013-bei-einer-firma-im-raum-munchen"]], "Shell/Bash Scripting (7.10.2013 - 9.10.2013, bei einer Firma in Ober\u00f6sterreich)": [[415, "shell-bash-scripting-7-10-2013-9-10-2013-bei-einer-firma-in-oberosterreich"]], "Alles Linux (1.10.2013 - 4.10.2013, QualiVision in Z\u00fcrich)": [[415, "alles-linux-1-10-2013-4-10-2013-qualivision-in-zurich"]], "Linux from Scratch (16.9.2013 - 20.9.2013, Mathias Kettner in M\u00fcnchen)": [[415, "linux-from-scratch-16-9-2013-20-9-2013-mathias-kettner-in-munchen"]], "Linux Basics (2.7.2013 - 4.7.2013, bei einer Firma in Ober\u00f6sterreich)": [[415, "linux-basics-2-7-2013-4-7-2013-bei-einer-firma-in-oberosterreich"]], "Linux - Einf\u00fchrung und Programmierung (27.5.2013 - 29.5.2013, bei einer Firma im Raum M\u00fcnchen)": [[415, "linux-einfuhrung-und-programmierung-27-5-2013-29-5-2013-bei-einer-firma-im-raum-munchen"]], "GNU Make (23.4.2013 in Graz)": [[415, "gnu-make-23-4-2013-in-graz"]], "Linux Basics & Embedded (14.1.2013 - 18.1.2013, bei einer Firma in Ober\u00f6sterreich)": [[415, "linux-basics-embedded-14-1-2013-18-1-2013-bei-einer-firma-in-oberosterreich"]], "Linux Systemnah, Embedded, C++ (26.11.2012 - 28.11.2012, bei einer Firma in Hamburg)": [[415, "linux-systemnah-embedded-c-26-11-2012-28-11-2012-bei-einer-firma-in-hamburg"]], "Fehlerdiagnose unter Linux (19.11.2012 - 21.11.2012, Polizei Niedersachsen in Hannover)": [[415, "fehlerdiagnose-unter-linux-19-11-2012-21-11-2012-polizei-niedersachsen-in-hannover"]], "Systemnahe Programmierung unter Linux (29.10.2012 - 30.10.2012, bei einer Firma im Raum M\u00fcnchen)": [[415, "systemnahe-programmierung-unter-linux-29-10-2012-30-10-2012-bei-einer-firma-im-raum-munchen"]], "Einf\u00fchrung in Python (15.10.2012 - 17.10.2012, Mathias Kettner in M\u00fcnchen)": [[415, "einfuhrung-in-python-15-10-2012-17-10-2012-mathias-kettner-in-munchen"]], "Einf\u00fchrung in Python (25.9.2012 - 27.9.2012, STIA in Admont)": [[415, "einfuhrung-in-python-25-9-2012-27-9-2012-stia-in-admont"]], "Linux Systemnah (13.2.2012 bis 15.2.2012, bei einer Firma in Z\u00fcrich)": [[415, "linux-systemnah-13-2-2012-bis-15-2-2012-bei-einer-firma-in-zurich"]], "Einf\u00fchrung in Python (24.1.2012 - 26.1.2012, Mathias Kettner in M\u00fcnchen)": [[415, "einfuhrung-in-python-24-1-2012-26-1-2012-mathias-kettner-in-munchen"]], "Linux Systemnah (19.9.2011 - 22.9.2011, bei einer Firma in Ober\u00f6sterreich)": [[415, "linux-systemnah-19-9-2011-22-9-2011-bei-einer-firma-in-oberosterreich"]], "Linux Basics (13.9.2011 - 15.9.2011, bei einer Firma in Ober\u00f6sterreich)": [[415, "linux-basics-13-9-2011-15-9-2011-bei-einer-firma-in-oberosterreich"]], "Linux Systemnah (4.7.2011 - 7.7.2011, Bodenseo, Hemmenhofen am Bodensee)": [[415, "linux-systemnah-4-7-2011-7-7-2011-bodenseo-hemmenhofen-am-bodensee"]], "Linux Systemnah (14.2.2011 - 18.2.2011, Bodenseo, Hemmenhofen am Bodensee)": [[415, "linux-systemnah-14-2-2011-18-2-2011-bodenseo-hemmenhofen-am-bodensee"]], "Linux from Scratch (12.12.2010 - 17.12.2010, Mathias Kettner in M\u00fcnchen)": [[415, "linux-from-scratch-12-12-2010-17-12-2010-mathias-kettner-in-munchen"]], "Softwareentwicklung unter Linux (6.12.2010 - 10.12.2010, bei einer Firma in Darmstadt)": [[415, "softwareentwicklung-unter-linux-6-12-2010-10-12-2010-bei-einer-firma-in-darmstadt"]], "Softwareentwicklung unter Linux (24.11.2010 - 26.11.2010, bei einer Firma im Raum Ulm)": [[415, "softwareentwicklung-unter-linux-24-11-2010-26-11-2010-bei-einer-firma-im-raum-ulm"]], "Linux Kernel (25.10.2010 - 26.10.2010, Deutsche Bundeswehr in Wildflecken)": [[415, "linux-kernel-25-10-2010-26-10-2010-deutsche-bundeswehr-in-wildflecken"]], "Softwareentwicklung unter Linux (20.10.2010 - 24.10.2010, Mathias Kettner)": [[415, "softwareentwicklung-unter-linux-20-10-2010-24-10-2010-mathias-kettner"]], "Types, Operators, Expressions": [[450, "types-operators-expressions"]], "Program Flow": [[459, "program-flow"]], "Functions and Program Structure": [[466, "functions-and-program-structure"]], "Structures": [[476, "structures"]], "Memory": [[479, "memory"]], "Program Sanity": [[492, "program-sanity"]], "Profiling": [[501, "profiling"]], "C++: Miscellaneous Live-Hacking": [[642, "c-miscellaneous-live-hacking"]], "Dynamic Memory Allocation, Resource Management": [[712, "dynamic-memory-allocation-resource-management"]], "The Standard Library: Miscellaneous Topics": [[721, "the-standard-library-miscellaneous-topics"]], "Functions, Functions": [[808, "functions-functions"]], "Topics and Dependencies": [[864, "topics-and-dependencies"]], "POSIX Threads": [[1039, "posix-threads"]], "Python: The Language Fundamentals": [[1110, "python-the-language-fundamentals"]], "Dependencies, Dependencies, Properties, \u2026": [[379, "dependencies-dependencies-properties"]]}, "indexentries": {}})