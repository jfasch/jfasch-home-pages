Search.setIndex({"docnames": ["about/myself/contact", "about/myself/cv-de", "about/myself/index", "about/myself/projects-de", "about/myself/skills-de", "about/site/courses/angebot-2023-10-12", "about/site/courses/index", "about/site/courses/samples/detail/2021-04-12/Notebook", "about/site/courses/samples/detail/2021-04-12/index", "about/site/courses/samples/detail/2021-04-12/notebook-wrapper", "about/site/courses/samples/detail/index", "about/site/courses/samples/index", "about/site/courses/templates", "about/site/index", "about/site/opentraining/index", "about/site/opentraining/misc/draft-topics/index", "about/site/opentraining/misc/index", "about/site/opentraining/misc/s5/index", "about/site/opentraining/misc/s5/tests/index", "about/site/opentraining/misc/s5/tests/test-slides", "about/site/opentraining/misc/screencast", "about/site/opentraining/misc/topics-to-write", "about/site/opentraining/netidee/index", "about/site/opentraining/netidee/netidee-antrag", "about/site/opentraining/netidee/netidee-video-2min", "about/site/opentraining/usecases/agenda-subtract-known", "about/site/opentraining/usecases/duration", "about/site/opentraining/usecases/index", "about/site/opentraining/usecases/linking", "about/site/opentraining/usecases/menu", "about/site/opentraining/usecases/slides", "about/site/recipes/camera-ssh", "about/site/recipes/emoji", "about/site/recipes/index", "about/site/recipes/isoamsa", "about/site/recipes/isoamsr", "about/site/recipes/isonum", "about/site/recipes/layout-test", "about/site/recipes/mathml", "about/site/recipes/rst-cheatsheet", "about/site/recipes/sphinxish", "about/site/work-in-progress/2022-04-13/index", "about/site/work-in-progress/2022-04-13/seminar/block-before-googletest", "about/site/work-in-progress/2022-04-13/seminar/clean-code-craftsmanship", "about/site/work-in-progress/2022-04-13/seminar/enter-googletest", "about/site/work-in-progress/2022-04-13/seminar/index", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/find-error", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/group", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/overwrite-existing-files", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/overwrite-store-content-on-read", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/csv", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/group", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/other-indexes", "about/site/work-in-progress/2022-04-13/seminar/tasks/group", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/backingstore-interface", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/backingstore-monolithic", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/group", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/pass-store-in-ctor", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/store-enum-switch", "about/site/work-in-progress/blink/glt-2023", "about/site/work-in-progress/blink/glt-2024", "about/site/work-in-progress/blink/index", "about/site/work-in-progress/blink/installation", "about/site/work-in-progress/blink/pycon-2023", "about/site/work-in-progress/blink/screenplay", "about/site/work-in-progress/blog-queue/hochkoenig/index", "about/site/work-in-progress/blog-queue/index", "about/site/work-in-progress/blog-queue/sphinx", "about/site/work-in-progress/fh-joanneum/2019/cxx", "about/site/work-in-progress/fh-joanneum/2019/cxx_build", "about/site/work-in-progress/fh-joanneum/2019/cxx_iface", "about/site/work-in-progress/fh-joanneum/2019/cxx_oo_basics", "about/site/work-in-progress/fh-joanneum/2019/cxx_unittest", "about/site/work-in-progress/fh-joanneum/2019/ec", "about/site/work-in-progress/fh-joanneum/2019/embedded-computing-1", "about/site/work-in-progress/fh-joanneum/2019/embedded-computing-2", "about/site/work-in-progress/fh-joanneum/2019/exercise_mt_race", "about/site/work-in-progress/fh-joanneum/2019/exercise_mt_race_fixed", "about/site/work-in-progress/fh-joanneum/2019/git", "about/site/work-in-progress/fh-joanneum/2019/index", "about/site/work-in-progress/fh-joanneum/2019/linux", "about/site/work-in-progress/fh-joanneum/2019/linux_basics", "about/site/work-in-progress/fh-joanneum/2019/linux_dev_mgmt", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_avg_sensor", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_avg_sensor_parallel", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_led_display", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_sensors", "about/site/work-in-progress/fh-joanneum/2019/linux_gpio", "about/site/work-in-progress/fh-joanneum/2019/mt", "about/site/work-in-progress/fh-joanneum/2019/mt_lock", "about/site/work-in-progress/fh-joanneum/2019/mt_wait", "about/site/work-in-progress/fh-joanneum/2019/py_basics", "about/site/work-in-progress/fh-joanneum/2019/py_exercise_avg_display", "about/site/work-in-progress/fh-joanneum/2019/py_exercise_sensors", "about/site/work-in-progress/fh-joanneum/2019/py_web", "about/site/work-in-progress/fh-joanneum/2019/py_web_sensors", "about/site/work-in-progress/fh-joanneum/2019/python", "about/site/work-in-progress/fh-joanneum/2020/index", "about/site/work-in-progress/fh-joanneum/2020/ss2022", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-08", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-10", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-10-homework", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-21", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-22,24", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-28", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-04-01", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/index", "about/site/work-in-progress/fh-joanneum/2020/ws2022", "about/site/work-in-progress/fh-joanneum/2020/ws2022-questions-code-general", "about/site/work-in-progress/fh-joanneum/2020/ws2022-questions-yesno", "about/site/work-in-progress/fh-joanneum/2020/ws2022/lab-exam-2023-01-17", "about/site/work-in-progress/fh-joanneum/2021/exam-2023-06-30", "about/site/work-in-progress/fh-joanneum/2021/exam-2023-06-30-solved", "about/site/work-in-progress/fh-joanneum/2021/exam-2024-02-02/exam-2024-02-02-sample", "about/site/work-in-progress/fh-joanneum/2021/git/git", "about/site/work-in-progress/fh-joanneum/2021/index", "about/site/work-in-progress/fh-joanneum/2021/ss2023", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot-basic-integration", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot-display", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot-full-integration", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger-csv-sink", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger-integration", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger-mqtt-sink", "about/site/work-in-progress/fh-joanneum/2021/tasks/display-infrastructure", "about/site/work-in-progress/fh-joanneum/2021/tasks/group", "about/site/work-in-progress/fh-joanneum/2021/tasks/libgpiod-switch", "about/site/work-in-progress/fh-joanneum/2021/tasks/mqtt-tkinter", "about/site/work-in-progress/fh-joanneum/2021/tasks/pwm-display", "about/site/work-in-progress/fh-joanneum/2021/tasks/sensor-interface", "about/site/work-in-progress/fh-joanneum/2021/tasks/sensor-w1", "about/site/work-in-progress/fh-joanneum/2021/tasks/switch-interface", "about/site/work-in-progress/fh-joanneum/2021/tasks/sysfs-gpio-switch", "about/site/work-in-progress/fh-joanneum/2021/ws2023-2024", "about/site/work-in-progress/fh-joanneum/index", "about/site/work-in-progress/git", "about/site/work-in-progress/index", "about/site/work-in-progress/packaging/index", "about/site/work-in-progress/project-xxx/audio-chip", "about/site/work-in-progress/project-xxx/debian-config", "about/site/work-in-progress/project-xxx/debian-kernel-package", "about/site/work-in-progress/project-xxx/hardware-bringup", "about/site/work-in-progress/project-xxx/index", "about/site/work-in-progress/project-xxx/kernel-upgrade-dirty", "about/site/work-in-progress/project-xxx/wait-hardware", "about/site/work-in-progress/project-xxx/yocto-kernel", "about/site/work-in-progress/python-training", "about/site/work-in-progress/screencast", "about/site/work-in-progress/seo", "about/site/work-in-progress/stacks", "about/site/work-in-progress/todo-misc", "about/site/work-in-progress/web", "blog/2010/07/beagleboard-how-to-repair-nand-also-known-as-40w", "blog/2011/01/porting-to-linux-there-s-always-a-better-way", "blog/2011/01/saving-solid-state-disk-life--gentoo", "blog/2012/04/Why-ps-sucks", "blog/2020/02/fedora-kernel-build", "blog/2020/03/custom-domain-gh-pages", "blog/2020/03/ms-teams-on-linux", "blog/2020/03/sphinx-gh-pages", "blog/2020/04/bbb", "blog/2020/09/traunstein", "blog/2021/08/grintovec", "blog/2021/09/xps13-shim-mok-brick/index", "blog/2022/09/cross-raspi", "blog/index", "index", "trainings/codex", "trainings/exercises", "trainings/index", "trainings/log/detail/2013-10-01/index", "trainings/log/detail/2015-11-30/index", "trainings/log/detail/2019-10-28/LiveHacking", "trainings/log/detail/2019-10-28/index", "trainings/log/detail/2019-11-12/code/BigPlan", "trainings/log/detail/2019-11-12/code/LiveHacking", "trainings/log/detail/2019-11-12/index", "trainings/log/detail/2020-01-10/Proposal", "trainings/log/detail/2020-01-10/index", "trainings/log/detail/2020-03-30/code/exercise-string/index", "trainings/log/detail/2020-03-30/index", "trainings/log/detail/2020-03-30/install-googletest", "trainings/log/detail/2020-03-30/setup", "trainings/log/detail/2020-03-30/vs-code", "trainings/log/detail/2020-05-12/code/index", "trainings/log/detail/2020-05-12/index", "trainings/log/detail/2020-05-18/Livehacking", "trainings/log/detail/2020-05-18/code/index", "trainings/log/detail/2020-05-18/index", "trainings/log/detail/2020-09-07/index", "trainings/log/detail/2020-09-28/index", "trainings/log/detail/2020-10-19/Notebook", "trainings/log/detail/2020-10-19/index", "trainings/log/detail/2020-11-03/index", "trainings/log/detail/2020-11-23/index", "trainings/log/detail/2020-11-30/index", "trainings/log/detail/2021-01-13/Notebook", "trainings/log/detail/2021-01-13/index", "trainings/log/detail/2021-01-13/notebook-wrapper", "trainings/log/detail/2021-02-22/index", "trainings/log/detail/2021-03-08/index", "trainings/log/detail/2021-03-15/Notebook", "trainings/log/detail/2021-03-15/index", "trainings/log/detail/2021-03-22/Notebook", "trainings/log/detail/2021-03-22/index", "trainings/log/detail/2021-03-29/index", "trainings/log/detail/2021-04-12/Notebook", "trainings/log/detail/2021-04-12/index", "trainings/log/detail/2021-04-12/notebook-wrapper", "trainings/log/detail/2021-05-03/Notebook", "trainings/log/detail/2021-05-03/index", "trainings/log/detail/2021-05-03/notebook-wrapper", "trainings/log/detail/2021-05-25/Notebook", "trainings/log/detail/2021-05-25/index", "trainings/log/detail/2021-06-14/index", "trainings/log/detail/2021-07-12/index", "trainings/log/detail/2021-08-02/index", "trainings/log/detail/2021-08-02/notebook", "trainings/log/detail/2021-08-23/Notebook", "trainings/log/detail/2021-08-23/exercises/sap-cleaned", "trainings/log/detail/2021-08-23/index", "trainings/log/detail/2021-08-23/notebook-wrapper", "trainings/log/detail/2021-08-31/Notebook", "trainings/log/detail/2021-08-31/index", "trainings/log/detail/2021-08-31/notebook-wrapper", "trainings/log/detail/2021-11-17/Notebook", "trainings/log/detail/2021-11-17/index", "trainings/log/detail/2021-11-17/notebook-wrapper", "trainings/log/detail/2021-12-01/2021-12-01", "trainings/log/detail/2021-12-01/index", "trainings/log/detail/2021-12-01/notebook-wrapper", "trainings/log/detail/2021-12-06/index", "trainings/log/detail/2022-01-17/index", "trainings/log/detail/2022-01-17/notebook", "trainings/log/detail/2022-01-17/notebook-wrapper", "trainings/log/detail/2022-02-23/Notebook", "trainings/log/detail/2022-02-23/index", "trainings/log/detail/2022-02-23/notebook-wrapper", "trainings/log/detail/2022-03-15/Notebook", "trainings/log/detail/2022-03-15/index", "trainings/log/detail/2022-03-15/notebook-wrapper", "trainings/log/detail/2022-03-23/Notebook", "trainings/log/detail/2022-03-23/index", "trainings/log/detail/2022-03-23/notebook-wrapper", "trainings/log/detail/2022-04-05/index", "trainings/log/detail/2022-04-05/notebook", "trainings/log/detail/2022-04-05/notebook-wrapper", "trainings/log/detail/2022-04-25/index", "trainings/log/detail/2022-04-25/notebook", "trainings/log/detail/2022-04-25/notebook-wrapper", "trainings/log/detail/2022-05-02/index", "trainings/log/detail/2022-05-02/notebook", "trainings/log/detail/2022-05-02/notebook-wrapper", "trainings/log/detail/2022-05-16/index", "trainings/log/detail/2022-05-16/notebook", "trainings/log/detail/2022-05-16/notebook-wrapper", "trainings/log/detail/2022-06-14/2022-05-11", "trainings/log/detail/2022-06-14/index", "trainings/log/detail/2022-07-26/index", "trainings/log/detail/2022-10-03/index", "trainings/log/detail/2022-10-11/index", "trainings/log/detail/2022-10-24/index", "trainings/log/detail/2022-11-07/index", "trainings/log/detail/2022-11-07/notebook", "trainings/log/detail/2022-11-07/notebook-wrapper", "trainings/log/detail/2022-11-16/index", "trainings/log/detail/2022-11-16/notebook", "trainings/log/detail/2022-11-16/notebook-wrapper", "trainings/log/detail/2023-01-23/index", "trainings/log/detail/2023-02-13/index", "trainings/log/detail/2023-03-13-Python-SAP/Demo/demo-notebook", "trainings/log/detail/2023-03-13-Python-SAP/demo", "trainings/log/detail/2023-03-13-Python-SAP/index", "trainings/log/detail/2023-03-13-Python-SAP/notebook", "trainings/log/detail/2023-03-13-Python-SAP/notebook-wrapper", "trainings/log/detail/2023-03-13-Python-SAP/original-agenda", "trainings/log/detail/2023-03-13-Python-SAP/sap-dataset/index", "trainings/log/detail/2023-03-13-Python-SAP/sap-dataset/sap-dataset", "trainings/log/detail/2023-03-20--C++-embedded/index", "trainings/log/detail/2023-03-28--Python-Clean-Code/index", "trainings/log/detail/2023-04-18--C++-embedded/index", "trainings/log/detail/2023-04-24--Python-Advanced/agenda", "trainings/log/detail/2023-04-24--Python-Advanced/index", "trainings/log/detail/2023-04-24--Python-Advanced/notebook", "trainings/log/detail/2023-04-24--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-05-15--Python-Basics/agenda", "trainings/log/detail/2023-05-15--Python-Basics/index", "trainings/log/detail/2023-05-15--Python-Basics/notebook", "trainings/log/detail/2023-05-15--Python-Basics/notebook-wrapper", "trainings/log/detail/2023-05-23--Linux-Basics/agenda", "trainings/log/detail/2023-05-23--Linux-Basics/index", "trainings/log/detail/2023-06-20--Python-Basics/agenda", "trainings/log/detail/2023-06-20--Python-Basics/index", "trainings/log/detail/2023-06-20--Python-Basics/notebook", "trainings/log/detail/2023-06-20--Python-Basics/notebook-wrapper", "trainings/log/detail/2023-07-03--CMake/agenda", "trainings/log/detail/2023-07-03--CMake/index", "trainings/log/detail/2023-09-25--Python-Advanced/index", "trainings/log/detail/2023-09-25--Python-Advanced/notebook", "trainings/log/detail/2023-09-25--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-10-09--Python-Advanced/index", "trainings/log/detail/2023-10-09--Python-Advanced/notebook", "trainings/log/detail/2023-10-09--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-10-24--Python-Advanced/agenda", "trainings/log/detail/2023-10-24--Python-Advanced/index", "trainings/log/detail/2023-10-24--Python-Advanced/notebook", "trainings/log/detail/2023-10-24--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-11-22--Python-Advanced/agenda", "trainings/log/detail/2023-11-22--Python-Advanced/index", "trainings/log/detail/2023-11-22--Python-Advanced/notebook", "trainings/log/detail/2023-11-22--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-11-27--CMake/agenda", "trainings/log/detail/2023-11-27--CMake/index", "trainings/log/detail/2023-11-29--Python-Basics/agenda", "trainings/log/detail/2023-11-29--Python-Basics/index", "trainings/log/detail/2023-11-29--Python-Basics/notebook", "trainings/log/detail/2023-11-29--Python-Basics/notebook-wrapper", "trainings/log/detail/2023-12-04--C++-Advanced/agenda", "trainings/log/detail/2023-12-04--C++-Advanced/index", "trainings/log/detail/2023-12-18--Python-Basics/agenda", "trainings/log/detail/2023-12-18--Python-Basics/index", "trainings/log/detail/2023-12-18--Python-Basics/notebook", "trainings/log/detail/2023-12-18--Python-Basics/notebook-wrapper", "trainings/log/detail/2023-XX-XX-C++-embedded/index", "trainings/log/detail/2023-XX-XX-Python-SAP/index", "trainings/log/detail/2024-01-15--Python-Basics/agenda", "trainings/log/detail/FH-ECE-19/EC1/2021-05-12/screenplay-checker", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-abc", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-oo", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-unittest", "trainings/log/detail/FH-ECE-19/EC1/Exercises/fh-group", "trainings/log/detail/FH-ECE-19/EC1/Exercises/file-read", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/2021-05-20-G2", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/2021-05-21", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Checker-Explanations", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Datatypes", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Functions", "trainings/log/detail/FH-ECE-19/EC1/cloud-computer", "trainings/log/detail/FH-ECE-19/EC1/formales", "trainings/log/detail/FH-ECE-19/EC1/index", "trainings/log/detail/FH-ECE-19/EC1/log", "trainings/log/detail/FH-ECE-19/EC1/lv-de", "trainings/log/detail/FH-ECE-19/EC1/lv-en", "trainings/log/detail/FH-ECE-19/EC1/plan", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-07", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-12", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-28", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-11-15", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-11-29", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-12-14", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-01-10", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-01-12", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-02-15", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/index", "trainings/log/detail/FH-ECE-19/EC2/index", "trainings/log/detail/FH-ECE-19/EC2/test-material", "trainings/log/detail/FH-ECE-19/index", "trainings/log/detail/index", "trainings/log/index", "trainings/material/index", "trainings/material/soup/c/010-introduction/000-installation/topic", "trainings/material/soup/c/010-introduction/010-introduction/topic", "trainings/material/soup/c/010-introduction/020-getting-started/topic", "trainings/material/soup/c/010-introduction/030-variables-and-arithmetic-expressions/topic", "trainings/material/soup/c/010-introduction/040-exercise-fahrenheit-float/topic", "trainings/material/soup/c/010-introduction/050-the-for-statement/topic", "trainings/material/soup/c/010-introduction/060-exercise-fahrenheit-for/topic", "trainings/material/soup/c/010-introduction/070-symbolic-constants/topic", "trainings/material/soup/c/010-introduction/080-exercise-fahrenheit-cpp/topic", "trainings/material/soup/c/010-introduction/090-character-input-and-output/topic", "trainings/material/soup/c/010-introduction/100-exercise-wc/topic", "trainings/material/soup/c/010-introduction/110-arrays/topic", "trainings/material/soup/c/010-introduction/120-exercise-histogram/topic", "trainings/material/soup/c/010-introduction/130-functions/topic", "trainings/material/soup/c/010-introduction/140-exercise-power-declaration/topic", "trainings/material/soup/c/010-introduction/150-character-arrays/topic", "trainings/material/soup/c/010-introduction/160-exercise-string-read-line/topic", "trainings/material/soup/c/010-introduction/170-external-variables-and-scope/topic", "trainings/material/soup/c/010-introduction/group", "trainings/material/soup/c/020-types-operators-expressions/010-introduction/topic", "trainings/material/soup/c/020-types-operators-expressions/020-variable-names/topic", "trainings/material/soup/c/020-types-operators-expressions/030-data-types-and-sizes/topic", "trainings/material/soup/c/020-types-operators-expressions/040-constants/topic", "trainings/material/soup/c/020-types-operators-expressions/050-declarations/topic", "trainings/material/soup/c/020-types-operators-expressions/060-arithmetic-operators/topic", "trainings/material/soup/c/020-types-operators-expressions/070-relational-and-logical-operators/topic", "trainings/material/soup/c/020-types-operators-expressions/080-type-conversions/topic", "trainings/material/soup/c/020-types-operators-expressions/090-increment-and-decrement-operators/topic", "trainings/material/soup/c/020-types-operators-expressions/100-exercise-string-reduce/topic", "trainings/material/soup/c/020-types-operators-expressions/110-bitwise-operators/topic", "trainings/material/soup/c/020-types-operators-expressions/120-assignment-operators-and-expressions/topic", "trainings/material/soup/c/020-types-operators-expressions/130-conditional-expressions/topic", "trainings/material/soup/c/020-types-operators-expressions/140-precedence-and-order-of-evaluation/topic", "trainings/material/soup/c/020-types-operators-expressions/group", "trainings/material/soup/c/030-program-flow/010-statements-and-blocks/topic", "trainings/material/soup/c/030-program-flow/020-if-else/topic", "trainings/material/soup/c/030-program-flow/030-else-if/topic", "trainings/material/soup/c/030-program-flow/040-switch/topic", "trainings/material/soup/c/030-program-flow/050-loops-while-and-for/topic", "trainings/material/soup/c/030-program-flow/060-loops-do-while/topic", "trainings/material/soup/c/030-program-flow/070-break-and-continue/topic", "trainings/material/soup/c/030-program-flow/080-goto-and-labels/topic", "trainings/material/soup/c/030-program-flow/group", "trainings/material/soup/c/040-functions-and-program-structure/010-basics-of-functions/topic", "trainings/material/soup/c/040-functions-and-program-structure/020-external-variables/topic", "trainings/material/soup/c/040-functions-and-program-structure/030-header-files/topic", "trainings/material/soup/c/040-functions-and-program-structure/040-static-variables/topic", "trainings/material/soup/c/040-functions-and-program-structure/050-c-preprocessor/topic", "trainings/material/soup/c/040-functions-and-program-structure/060-c-preprocessor-advanced/topic", "trainings/material/soup/c/040-functions-and-program-structure/group", "trainings/material/soup/c/050-pointers-and-arrays/010-pointers-and-addresses/topic", "trainings/material/soup/c/050-pointers-and-arrays/020-pointers-and-function-arguments/topic", "trainings/material/soup/c/050-pointers-and-arrays/030-exercise-swap/topic", "trainings/material/soup/c/050-pointers-and-arrays/040-pointers-and-arrays/topic", "trainings/material/soup/c/050-pointers-and-arrays/050-command-line-arguments/topic", "trainings/material/soup/c/050-pointers-and-arrays/group", "trainings/material/soup/c/060-structures/010-basics-of-structures/topic", "trainings/material/soup/c/060-structures/020-structures-and-functions/topic", "trainings/material/soup/c/060-structures/030-typedef/topic", "trainings/material/soup/c/060-structures/group", "trainings/material/soup/c/070-memory/010-malloc/topic", "trainings/material/soup/c/070-memory/020-exercise-linked-list/topic", "trainings/material/soup/c/070-memory/group", "trainings/material/soup/c/080-advanced-language-features/010-volatile/topic", "trainings/material/soup/c/080-advanced-language-features/020-atomic/topic", "trainings/material/soup/c/080-advanced-language-features/030-alignment/topic", "trainings/material/soup/c/080-advanced-language-features/group", "trainings/material/soup/c/090-program-sanity/010-introduction/topic", "trainings/material/soup/c/090-program-sanity/020-integral-types/topic", "trainings/material/soup/c/090-program-sanity/030-discrete-values/topic", "trainings/material/soup/c/090-program-sanity/040-static/topic", "trainings/material/soup/c/090-program-sanity/050-const/topic", "trainings/material/soup/c/090-program-sanity/060-struct-initialization/topic", "trainings/material/soup/c/090-program-sanity/070-explicit-type-safety/topic", "trainings/material/soup/c/090-program-sanity/080-valgrind/topic", "trainings/material/soup/c/090-program-sanity/group", "trainings/material/soup/c/100-performance/010-introduction/topic", "trainings/material/soup/c/100-performance/020-computebound/topic", "trainings/material/soup/c/100-performance/030-memory/topic", "trainings/material/soup/c/100-performance/group", "trainings/material/soup/c/110-profiling/010-introduction/topic", "trainings/material/soup/c/110-profiling/020-gprof/topic", "trainings/material/soup/c/110-profiling/030-callgrind/topic", "trainings/material/soup/c/110-profiling/040-oprofile/topic", "trainings/material/soup/c/110-profiling/group", "trainings/material/soup/c/group", "trainings/material/soup/clean-code/book-messages", "trainings/material/soup/clean-code/craft-sw", "trainings/material/soup/clean-code/group", "trainings/material/soup/clean-code/intro-python/livehacking", "trainings/material/soup/cmake/basics", "trainings/material/soup/cmake/configure_file", "trainings/material/soup/cmake/cxx-and-rants", "trainings/material/soup/cmake/external-dependencies", "trainings/material/soup/cmake/group", "trainings/material/soup/cmake/installation", "trainings/material/soup/cmake/libraries", "trainings/material/soup/cmake/optional-code-approach-1", "trainings/material/soup/cmake/optional-code-approach-2", "trainings/material/soup/cmake/optional-code-problem", "trainings/material/soup/cmake/shared-libraries", "trainings/material/soup/cmake/structure", "trainings/material/soup/cmake/targets-properties", "trainings/material/soup/cmake/testing", "trainings/material/soup/cxx-code/index", "trainings/material/soup/cxx-design-patterns/abstract-factory/abstract-factory", "trainings/material/soup/cxx-design-patterns/adapter/adapter", "trainings/material/soup/cxx-design-patterns/command/command", "trainings/material/soup/cxx-design-patterns/command/socialdb", "trainings/material/soup/cxx-design-patterns/composite/composite", "trainings/material/soup/cxx-design-patterns/decorator/decorator", "trainings/material/soup/cxx-design-patterns/group", "trainings/material/soup/cxx-design-patterns/heating-screenplay/heating-screenplay", "trainings/material/soup/cxx-design-patterns/interpreter/interpreter", "trainings/material/soup/cxx-design-patterns/observer/observer", "trainings/material/soup/cxx-design-patterns/oo-principles", "trainings/material/soup/cxx-design-patterns/proxy/proxy", "trainings/material/soup/cxx-design-patterns/sensor-hierarchy", "trainings/material/soup/cxx-design-patterns/singleton/singleton", "trainings/material/soup/cxx-design-patterns/uml/uml", "trainings/material/soup/cxx-exercises/design-patterns/abstract-factory", "trainings/material/soup/cxx-exercises/design-patterns/adapter", "trainings/material/soup/cxx-exercises/design-patterns/command", "trainings/material/soup/cxx-exercises/design-patterns/composite", "trainings/material/soup/cxx-exercises/design-patterns/decorator", "trainings/material/soup/cxx-exercises/design-patterns/group", "trainings/material/soup/cxx-exercises/design-patterns/interpreter-and-adapter", "trainings/material/soup/cxx-exercises/design-patterns/interpreter-basic", "trainings/material/soup/cxx-exercises/design-patterns/observer", "trainings/material/soup/cxx-exercises/design-patterns/proxy-remote", "trainings/material/soup/cxx-exercises/design-patterns/proxy-round", "trainings/material/soup/cxx-exercises/design-patterns/singleton-flexible", "trainings/material/soup/cxx-exercises/design-patterns/singleton-flexible-strict", "trainings/material/soup/cxx-exercises/design-patterns/singleton-inflexible", "trainings/material/soup/cxx-exercises/design-patterns/solutions/abstract-factory", "trainings/material/soup/cxx-exercises/design-patterns/solutions/adapter", "trainings/material/soup/cxx-exercises/design-patterns/solutions/command", "trainings/material/soup/cxx-exercises/design-patterns/solutions/composite", "trainings/material/soup/cxx-exercises/design-patterns/solutions/decorator", "trainings/material/soup/cxx-exercises/design-patterns/solutions/group", "trainings/material/soup/cxx-exercises/design-patterns/solutions/interpreter-and-adapter", "trainings/material/soup/cxx-exercises/design-patterns/solutions/interpreter-basic", "trainings/material/soup/cxx-exercises/design-patterns/solutions/observer", "trainings/material/soup/cxx-exercises/design-patterns/solutions/proxy-remote", "trainings/material/soup/cxx-exercises/design-patterns/solutions/proxy-round", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-flexible", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-flexible-strict", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-inflexible", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-loop-function", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-no-polymorphism", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-random-sensor", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/group", "trainings/material/soup/cxx-exercises/group", "trainings/material/soup/cxx-exercises/nopoly-display-led-stripe/display-led-stripe-nopoly", "trainings/material/soup/cxx-exercises/nopoly-hysteresis/hysteresis-nopoly", "trainings/material/soup/cxx-exercises/nopoly-sensor-avg/sensor-avg-nopoly", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-const-nopoly", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-mock-nopoly", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-random-nopoly", "trainings/material/soup/cxx-exercises/nopoly-switch-mock/switch-mock-nopoly", "trainings/material/soup/cxx-exercises/oo-shapes/shapes", "trainings/material/soup/cxx-exercises/project-setup", "trainings/material/soup/cxx-exercises/sensor-interface/sensor-interface", "trainings/material/soup/cxx-exercises/sensor-w1-factory/sensor-w1-factory", "trainings/material/soup/cxx-exercises/sensor-w1/sensor-w1", "trainings/material/soup/cxx-exercises/stl/algo", "trainings/material/soup/cxx-exercises/stl/filter-generic", "trainings/material/soup/cxx-exercises/stl/filter-greater-10", "trainings/material/soup/cxx-exercises/stl/filter-odd", "trainings/material/soup/cxx-exercises/stl/group", "trainings/material/soup/cxx-exercises/stl/map", "trainings/material/soup/cxx-exercises/stl/sensor-repository/group", "trainings/material/soup/cxx-exercises/stl/sensor-repository/insert-no-overwrite", "trainings/material/soup/cxx-exercises/stl/sensor-repository/insert-sunny", "trainings/material/soup/cxx-exercises/stl/sensor-repository/lookup-not-found", "trainings/material/soup/cxx-exercises/stl/sensor-repository/lookup-sunny", "trainings/material/soup/cxx-exercises/stl/sensor-repository/no-memleak", "trainings/material/soup/cxx-exercises/stl/sensor-repository/remove-not-found", "trainings/material/soup/cxx-exercises/stl/sensor-repository/remove-sunny", "trainings/material/soup/cxx-exercises/stl/sensor-repository/size-const", "trainings/material/soup/cxx-exercises/stl/uniq", "trainings/material/soup/cxx-exercises/stl/vector", "trainings/material/soup/cxx-todo/index", "trainings/material/soup/cxx/cxx_class_templates/code/index", "trainings/material/soup/cxx/cxx_class_templates/screenplay", "trainings/material/soup/cxx/cxx_class_templates/topic", "trainings/material/soup/cxx/cxx_dynamic_memory/code/index", "trainings/material/soup/cxx/cxx_dynamic_memory/screenplay", "trainings/material/soup/cxx/cxx_dynamic_memory/topic", "trainings/material/soup/cxx/cxx_global_initialization/code/index", "trainings/material/soup/cxx/cxx_global_initialization/screenplay", "trainings/material/soup/cxx/cxx_global_initialization/topic", "trainings/material/soup/cxx/cxx_inheritance_virtual/code/index", "trainings/material/soup/cxx/cxx_inheritance_virtual/screenplay", "trainings/material/soup/cxx/cxx_inheritance_virtual/topic", "trainings/material/soup/cxx/cxx_ownership_raii/code/index", "trainings/material/soup/cxx/cxx_ownership_raii/screenplay", "trainings/material/soup/cxx/cxx_ownership_raii/topic", "trainings/material/soup/cxx/cxx_stl_container_intro/code/index", "trainings/material/soup/cxx/cxx_stl_container_intro/screenplay", "trainings/material/soup/cxx/cxx_stl_container_intro/topic", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/code/index", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/screenplay", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/topic", "trainings/material/soup/cxx/group", "trainings/material/soup/cxx03/001-introduction/topic", "trainings/material/soup/cxx03/020-data-encapsulation/c", "trainings/material/soup/cxx03/020-data-encapsulation/copy-basics", "trainings/material/soup/cxx03/020-data-encapsulation/cpp-introduction", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-custom", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-default", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-dtor", "trainings/material/soup/cxx03/020-data-encapsulation/group", "trainings/material/soup/cxx03/020-data-encapsulation/initializer-list", "trainings/material/soup/cxx03/020-data-encapsulation/object-copy", "trainings/material/soup/cxx03/030-functions-and-methods/010-overloading/topic", "trainings/material/soup/cxx03/030-functions-and-methods/020-methods/topic", "trainings/material/soup/cxx03/030-functions-and-methods/030-const/topic", "trainings/material/soup/cxx03/030-functions-and-methods/040-this/topic", "trainings/material/soup/cxx03/030-functions-and-methods/050-references/topic", "trainings/material/soup/cxx03/030-functions-and-methods/060-static/topic", "trainings/material/soup/cxx03/030-functions-and-methods/065-static-member-variables/topic", "trainings/material/soup/cxx03/030-functions-and-methods/070-operators/topic", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-cuboid", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-point", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-point3d", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-rectangle", "trainings/material/soup/cxx03/030-functions-and-methods/group", "trainings/material/soup/cxx03/040-exceptions/010-basics/topic", "trainings/material/soup/cxx03/040-exceptions/020-try-catch/topic", "trainings/material/soup/cxx03/040-exceptions/group", "trainings/material/soup/cxx03/050-templates/010-function-templates/topic", "trainings/material/soup/cxx03/050-templates/020-class-templates/topic", "trainings/material/soup/cxx03/050-templates/group", "trainings/material/soup/cxx03/060-stl/010-basics/algo-copy", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-algo", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-basics", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-difference", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-out-of-range", "trainings/material/soup/cxx03/060-stl/010-basics/topic", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/topic", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-and-copy", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-basic", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-pointer-arith", "trainings/material/soup/cxx03/060-stl/020-algorithm/binary_search", "trainings/material/soup/cxx03/060-stl/020-algorithm/copy", "trainings/material/soup/cxx03/060-stl/020-algorithm/find", "trainings/material/soup/cxx03/060-stl/020-algorithm/find_if", "trainings/material/soup/cxx03/060-stl/020-algorithm/for_each", "trainings/material/soup/cxx03/060-stl/020-algorithm/group", "trainings/material/soup/cxx03/060-stl/020-algorithm/lower_bound", "trainings/material/soup/cxx03/060-stl/020-algorithm/reverse", "trainings/material/soup/cxx03/060-stl/020-algorithm/reverse_copy", "trainings/material/soup/cxx03/060-stl/020-algorithm/sort", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/basics", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/group", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/list", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/vector", "trainings/material/soup/cxx03/060-stl/050-associative-containers/basics", "trainings/material/soup/cxx03/060-stl/050-associative-containers/group", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-init-fill", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-insert", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-remove", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-search", "trainings/material/soup/cxx03/060-stl/050-associative-containers/multimap", "trainings/material/soup/cxx03/060-stl/allocators/allocator_basics", "trainings/material/soup/cxx03/060-stl/allocators/group", "trainings/material/soup/cxx03/060-stl/exercises/group", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/exercise", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/group", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/solution", "trainings/material/soup/cxx03/060-stl/group", "trainings/material/soup/cxx03/070-dynamic-memory/000-todo/topic", "trainings/material/soup/cxx03/070-dynamic-memory/group", "trainings/material/soup/cxx03/100-inheritance-oo-design/basics", "trainings/material/soup/cxx03/100-inheritance-oo-design/destructor", "trainings/material/soup/cxx03/100-inheritance-oo-design/group", "trainings/material/soup/cxx03/100-inheritance-oo-design/interface", "trainings/material/soup/cxx03/100-inheritance-oo-design/polymorphism", "trainings/material/soup/cxx03/100-inheritance-oo-design/private-protected", "trainings/material/soup/cxx03/100-inheritance-oo-design/virtual-destructor", "trainings/material/soup/cxx03/100-inheritance-oo-design/virtual-method", "trainings/material/soup/cxx03/900-standard-library-miscellanea/group", "trainings/material/soup/cxx03/900-standard-library-miscellanea/string/topic", "trainings/material/soup/cxx03/exercises-misc/american-flag/exercise", "trainings/material/soup/cxx03/exercises-misc/fh-questions", "trainings/material/soup/cxx03/exercises-misc/group", "trainings/material/soup/cxx03/exercises-misc/sum-integers-from-stdin/exercise", "trainings/material/soup/cxx03/exercises-userdb/group", "trainings/material/soup/cxx03/exercises-userdb/user-access-methods/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-const-members/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-const/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-default-ctor/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-simple-method/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-to-cxx-ctor/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-insert/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-search-find_if/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-search-notfound-exception/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-search/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-vector/exercise", "trainings/material/soup/cxx03/group", "trainings/material/soup/cxx11/010-introduction/group", "trainings/material/soup/cxx11/010-introduction/history", "trainings/material/soup/cxx11/010-introduction/overview-livehacking", "trainings/material/soup/cxx11/020-new-language-features/010-strongly-typed-enums/topic", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/group", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/implementor-view", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/intro", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/mess", "trainings/material/soup/cxx11/020-new-language-features/050-delegating-ctor/topic", "trainings/material/soup/cxx11/020-new-language-features/055-constexpr/topic", "trainings/material/soup/cxx11/020-new-language-features/060-move/afterword", "trainings/material/soup/cxx11/020-new-language-features/060-move/group", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-smartptr-move", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-string-move", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-using-string-move", "trainings/material/soup/cxx11/020-new-language-features/060-move/overview", "trainings/material/soup/cxx11/020-new-language-features/070-miscellaneous/topic", "trainings/material/soup/cxx11/020-new-language-features/auto", "trainings/material/soup/cxx11/020-new-language-features/concepts/group", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-1-conceptless", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-2-conceptless-error", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-3-concept-integral", "trainings/material/soup/cxx11/020-new-language-features/concepts/links", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-1-good-old-func", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-2-need-template", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-4-concept-has-size", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-5-concept-index-ret-double", "trainings/material/soup/cxx11/020-new-language-features/coroutines/group", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/fibo-generator", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/fibonacci", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/generator-h", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/generator-hello", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/simplest", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend-iter", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend-next", "trainings/material/soup/cxx11/020-new-language-features/default", "trainings/material/soup/cxx11/020-new-language-features/delete", "trainings/material/soup/cxx11/020-new-language-features/final", "trainings/material/soup/cxx11/020-new-language-features/group", "trainings/material/soup/cxx11/020-new-language-features/lambda/group", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-capture", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-is-functor", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-is-functor-pitfall", "trainings/material/soup/cxx11/020-new-language-features/modules", "trainings/material/soup/cxx11/020-new-language-features/override", "trainings/material/soup/cxx11/020-new-language-features/range-based-for", "trainings/material/soup/cxx11/020-new-language-features/range-based-for-map", "trainings/material/soup/cxx11/020-new-language-features/ranges/good-bad", "trainings/material/soup/cxx11/020-new-language-features/ranges/group", "trainings/material/soup/cxx11/020-new-language-features/ranges/intro", "trainings/material/soup/cxx11/020-new-language-features/ranges/links", "trainings/material/soup/cxx11/020-new-language-features/structured-binding", "trainings/material/soup/cxx11/030-smart-pointers/040-closing-words/topic", "trainings/material/soup/cxx11/030-smart-pointers/group", "trainings/material/soup/cxx11/030-smart-pointers/introduction", "trainings/material/soup/cxx11/030-smart-pointers/introduction-livehack", "trainings/material/soup/cxx11/030-smart-pointers/sharedptr", "trainings/material/soup/cxx11/030-smart-pointers/uniqueptr", "trainings/material/soup/cxx11/030-smart-pointers/weakptr", "trainings/material/soup/cxx11/035-perfect-forwarding/topic", "trainings/material/soup/cxx11/040-bind-function/010-bind/topic", "trainings/material/soup/cxx11/040-bind-function/020-function/topic", "trainings/material/soup/cxx11/040-bind-function/group", "trainings/material/soup/cxx11/050-multithreading/010-introduction/topic", "trainings/material/soup/cxx11/050-multithreading/020-thread/topic", "trainings/material/soup/cxx11/050-multithreading/030-race-conditions/topic", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/atomics", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/mutex", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/scoped-locking", "trainings/material/soup/cxx11/050-multithreading/condition-variable", "trainings/material/soup/cxx11/050-multithreading/group", "trainings/material/soup/cxx11/050-multithreading/promise-future", "trainings/material/soup/cxx11/100-miscellaneous/010-chrono/topic", "trainings/material/soup/cxx11/100-miscellaneous/any-variant-optional/variant", "trainings/material/soup/cxx11/100-miscellaneous/group", "trainings/material/soup/cxx11/drafts/crtp", "trainings/material/soup/cxx11/drafts/embedded-problems/allocator", "trainings/material/soup/cxx11/drafts/embedded-problems/classic-virtual", "trainings/material/soup/cxx11/drafts/embedded-problems/group", "trainings/material/soup/cxx11/drafts/embedded-problems/related-no-virtual", "trainings/material/soup/cxx11/drafts/embedded-problems/type-erasure", "trainings/material/soup/cxx11/drafts/embedded-problems/unrelated", "trainings/material/soup/cxx11/drafts/embedded-problems/variant-automatic-visit", "trainings/material/soup/cxx11/drafts/embedded-problems/variant-manual-if", "trainings/material/soup/cxx11/drafts/embedded-problems/variant-manual-visit", "trainings/material/soup/cxx11/drafts/embedded-problems/why-replace-virtual", "trainings/material/soup/cxx11/drafts/group", "trainings/material/soup/cxx11/exercises/bag-copy", "trainings/material/soup/cxx11/exercises/bag-shared", "trainings/material/soup/cxx11/exercises/bag-unique", "trainings/material/soup/cxx11/exercises/group", "trainings/material/soup/cxx11/filesystem/topic", "trainings/material/soup/cxx11/group", "trainings/material/soup/graph", "trainings/material/soup/index", "trainings/material/soup/kernel/cdev-auto/screenplay", "trainings/material/soup/kernel/cdev-auto/slides", "trainings/material/soup/kernel/cdev-auto/topic", "trainings/material/soup/kernel/cdev-file-operations/screenplay", "trainings/material/soup/kernel/cdev-file-operations/slides", "trainings/material/soup/kernel/cdev-file-operations/topic", "trainings/material/soup/kernel/cdev-first-functionality/slides", "trainings/material/soup/kernel/cdev-first-functionality/topic", "trainings/material/soup/kernel/cdev-manual/screenplay", "trainings/material/soup/kernel/cdev-manual/slides", "trainings/material/soup/kernel/cdev-manual/topic", "trainings/material/soup/kernel/cdev-multiple-devices/slides", "trainings/material/soup/kernel/cdev-multiple-devices/topic", "trainings/material/soup/kernel/cdev-refactoring/screenplay", "trainings/material/soup/kernel/cdev-refactoring/slides", "trainings/material/soup/kernel/cdev-refactoring/topic", "trainings/material/soup/kernel/dma/slides", "trainings/material/soup/kernel/dma/topic", "trainings/material/soup/kernel/fedora-kernel-build/screenplay", "trainings/material/soup/kernel/fedora-kernel-build/topic", "trainings/material/soup/kernel/fedora-module-build/screenplay", "trainings/material/soup/kernel/fedora-module-build/topic", "trainings/material/soup/kernel/group", "trainings/material/soup/kernel/hello-world/slides", "trainings/material/soup/kernel/hello-world/topic", "trainings/material/soup/kernel/interrupt-coding/slides", "trainings/material/soup/kernel/interrupt-coding/topic", "trainings/material/soup/kernel/interrupt/slides", "trainings/material/soup/kernel/interrupt/topic", "trainings/material/soup/kernel/iomemory/slides", "trainings/material/soup/kernel/iomemory/topic", "trainings/material/soup/kernel/kmalloc/slides", "trainings/material/soup/kernel/kmalloc/topic", "trainings/material/soup/kernel/list/slides", "trainings/material/soup/kernel/list/topic", "trainings/material/soup/kernel/mutex-coding/slides", "trainings/material/soup/kernel/mutex-coding/topic", "trainings/material/soup/kernel/mutex/slides", "trainings/material/soup/kernel/mutex/topic", "trainings/material/soup/kernel/netdev/slides", "trainings/material/soup/kernel/netdev/topic", "trainings/material/soup/kernel/pci/slides", "trainings/material/soup/kernel/pci/topic", "trainings/material/soup/kernel/process-vs-atomic/slides", "trainings/material/soup/kernel/process-vs-atomic/topic", "trainings/material/soup/kernel/raspi-kernel-build/story", "trainings/material/soup/kernel/raspi-kernel-build/topic", "trainings/material/soup/kernel/sample-project", "trainings/material/soup/kernel/spinlock-coding/slides", "trainings/material/soup/kernel/spinlock-coding/topic", "trainings/material/soup/kernel/spinlock/slides", "trainings/material/soup/kernel/spinlock/topic", "trainings/material/soup/kernel/stub-sysprog-dup/topic", "trainings/material/soup/kernel/time_timer-coding/slides", "trainings/material/soup/kernel/time_timer-coding/topic", "trainings/material/soup/kernel/time_timer/slides", "trainings/material/soup/kernel/time_timer/topic", "trainings/material/soup/kernel/todo", "trainings/material/soup/kernel/usermem/screenplay", "trainings/material/soup/kernel/usermem/slides", "trainings/material/soup/kernel/usermem/topic", "trainings/material/soup/kernel/waitqueue/screenplay", "trainings/material/soup/kernel/waitqueue/slides", "trainings/material/soup/kernel/waitqueue/topic", "trainings/material/soup/kernel/workqueue/screenplay", "trainings/material/soup/kernel/workqueue/slides", "trainings/material/soup/kernel/workqueue/topic", "trainings/material/soup/linux/basics/archiving-compression/exercises", "trainings/material/soup/linux/basics/archiving-compression/group", "trainings/material/soup/linux/basics/archiving-compression/gzip", "trainings/material/soup/linux/basics/archiving-compression/overview", "trainings/material/soup/linux/basics/archiving-compression/tar", "trainings/material/soup/linux/basics/exercises/FH-SS2022-EXAM-01-G1", "trainings/material/soup/linux/basics/exercises/FH-SS2022-EXAM-01-G2", "trainings/material/soup/linux/basics/exercises/group", "trainings/material/soup/linux/basics/group", "trainings/material/soup/linux/basics/intro/demo-everything-is-a-file", "trainings/material/soup/linux/basics/intro/environment", "trainings/material/soup/linux/basics/intro/exercises/fh-questions", "trainings/material/soup/linux/basics/intro/group", "trainings/material/soup/linux/basics/intro/login", "trainings/material/soup/linux/basics/intro/overview", "trainings/material/soup/linux/basics/intro/process", "trainings/material/soup/linux/basics/intro/process-tree", "trainings/material/soup/linux/basics/intro/wsl", "trainings/material/soup/linux/basics/io-redirection-pipes/exercises", "trainings/material/soup/linux/basics/io-redirection-pipes/group", "trainings/material/soup/linux/basics/io-redirection-pipes/io-redirection", "trainings/material/soup/linux/basics/io-redirection-pipes/io-redirection-swap-stdout-stderr", "trainings/material/soup/linux/basics/io-redirection-pipes/pipes", "trainings/material/soup/linux/basics/permissions/basics", "trainings/material/soup/linux/basics/permissions/exercises/credentials", "trainings/material/soup/linux/basics/permissions/exercises/fh-questions", "trainings/material/soup/linux/basics/permissions/exercises/fh-questions-nocheat", "trainings/material/soup/linux/basics/permissions/exercises/group", "trainings/material/soup/linux/basics/permissions/exercises/private-directory", "trainings/material/soup/linux/basics/permissions/exercises/private-directory-question", "trainings/material/soup/linux/basics/permissions/exercises/public-directory", "trainings/material/soup/linux/basics/permissions/exercises/public-directory-question", "trainings/material/soup/linux/basics/permissions/exercises/shared-file", "trainings/material/soup/linux/basics/permissions/group", "trainings/material/soup/linux/basics/permissions/setuid", "trainings/material/soup/linux/basics/permissions/setuid-livedemo", "trainings/material/soup/linux/basics/permissions/sticky", "trainings/material/soup/linux/basics/permissions/umask", "trainings/material/soup/linux/basics/shell/commandline", "trainings/material/soup/linux/basics/shell/configfiles", "trainings/material/soup/linux/basics/shell/cp", "trainings/material/soup/linux/basics/shell/cwd", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/copy-tree", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-copy-files", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-create-files", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-move-files", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/group", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/mkdir-p-rm-r", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/rm-rf", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/rm-tree", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/verify-hierarchy", "trainings/material/soup/linux/basics/shell/exercises/fh-questions", "trainings/material/soup/linux/basics/shell/exercises/group", "trainings/material/soup/linux/basics/shell/exercises/ls/dev-types", "trainings/material/soup/linux/basics/shell/exercises/ls/etc-passwd-size", "trainings/material/soup/linux/basics/shell/exercises/ls/group", "trainings/material/soup/linux/basics/shell/exercises/ls/home-permissions", "trainings/material/soup/linux/basics/shell/file_dir_create_rm", "trainings/material/soup/linux/basics/shell/group", "trainings/material/soup/linux/basics/shell/links", "trainings/material/soup/linux/basics/shell/ls", "trainings/material/soup/linux/basics/shell/mv", "trainings/material/soup/linux/basics/shell/paths", "trainings/material/soup/linux/basics/text-tools/cat", "trainings/material/soup/linux/basics/text-tools/cut", "trainings/material/soup/linux/basics/text-tools/exercises", "trainings/material/soup/linux/basics/text-tools/find", "trainings/material/soup/linux/basics/text-tools/grep", "trainings/material/soup/linux/basics/text-tools/group", "trainings/material/soup/linux/basics/text-tools/head-tail", "trainings/material/soup/linux/basics/text-tools/less", "trainings/material/soup/linux/basics/text-tools/overview", "trainings/material/soup/linux/drafts/group", "trainings/material/soup/linux/drafts/yocto", "trainings/material/soup/linux/group", "trainings/material/soup/linux/hardware/brushless-motor/topic", "trainings/material/soup/linux/hardware/can/10-intro", "trainings/material/soup/linux/hardware/can/20-interfaces", "trainings/material/soup/linux/hardware/can/30-programming", "trainings/material/soup/linux/hardware/can/40-harware", "trainings/material/soup/linux/hardware/can/group", "trainings/material/soup/linux/hardware/group", "trainings/material/soup/linux/hardware/i2c/topic", "trainings/material/soup/linux/hardware/pwm/topic", "trainings/material/soup/linux/hardware/w1/topic", "trainings/material/soup/linux/ssh/basics", "trainings/material/soup/linux/ssh/exercises/copy-file", "trainings/material/soup/linux/ssh/exercises/copy-tree", "trainings/material/soup/linux/ssh/exercises/group", "trainings/material/soup/linux/ssh/exercises/pubkey", "trainings/material/soup/linux/ssh/group", "trainings/material/soup/linux/ssh/key-pair", "trainings/material/soup/linux/ssh/links", "trainings/material/soup/linux/ssh/portforwarding", "trainings/material/soup/linux/ssh/scp", "trainings/material/soup/linux/ssh/sshfs", "trainings/material/soup/linux/sysprog/basics/errorhandling", "trainings/material/soup/linux/sysprog/basics/group", "trainings/material/soup/linux/sysprog/basics/syscalls", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-file", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-network", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-timer", "trainings/material/soup/linux/sysprog/blocking-io/group", "trainings/material/soup/linux/sysprog/file-io/basics", "trainings/material/soup/linux/sysprog/file-io/basics-exercise-copy", "trainings/material/soup/linux/sysprog/file-io/basics-exercise-hole", "trainings/material/soup/linux/sysprog/file-io/duplicate", "trainings/material/soup/linux/sysprog/file-io/example-O_CREAT", "trainings/material/soup/linux/sysprog/file-io/example-O_EXCL", "trainings/material/soup/linux/sysprog/file-io/example-O_RDONLY", "trainings/material/soup/linux/sysprog/file-io/example-O_WRONLY", "trainings/material/soup/linux/sysprog/file-io/exercise-sensor-read", "trainings/material/soup/linux/sysprog/file-io/group", "trainings/material/soup/linux/sysprog/file-io/misc", "trainings/material/soup/linux/sysprog/group", "trainings/material/soup/linux/sysprog/intro-hw/get", "trainings/material/soup/linux/sysprog/intro-hw/group", "trainings/material/soup/linux/sysprog/intro-hw/sysfs-gpio", "trainings/material/soup/linux/sysprog/intro-hw/watch", "trainings/material/soup/linux/sysprog/posix-threads/010-introduction/topic", "trainings/material/soup/linux/sysprog/posix-threads/020-lifecycle/topic", "trainings/material/soup/linux/sysprog/posix-threads/030-exercise-pthcreate-race-condition/topic", "trainings/material/soup/linux/sysprog/posix-threads/040-mutex/topic", "trainings/material/soup/linux/sysprog/posix-threads/050-exercise-mutex/topic", "trainings/material/soup/linux/sysprog/posix-threads/060-condition-variable/topic", "trainings/material/soup/linux/sysprog/posix-threads/070-exercise-condition-variable/topic", "trainings/material/soup/linux/sysprog/posix-threads/080-miscellaneous/topic", "trainings/material/soup/linux/sysprog/posix-threads/090-last-warning/topic", "trainings/material/soup/linux/sysprog/posix-threads/group", "trainings/material/soup/linux/sysprog/posix-threads/locked-trylock", "trainings/material/soup/linux/sysprog/process/commandline", "trainings/material/soup/linux/sysprog/process/group", "trainings/material/soup/linux/sysprog/process/tree", "trainings/material/soup/linux/sysprog/scheduling/basics", "trainings/material/soup/linux/sysprog/scheduling/group", "trainings/material/soup/linux/sysprog/scheduling/processes-and-threads", "trainings/material/soup/linux/sysprog/scheduling/questions", "trainings/material/soup/linux/sysprog/scheduling/realtime", "trainings/material/soup/linux/sysprog/scheduling/realtime-api", "trainings/material/soup/linux/sysprog/scheduling/wakup-latency", "trainings/material/soup/linux/sysprog/sysprog_events/code/index", "trainings/material/soup/linux/sysprog/sysprog_events/screenplay", "trainings/material/soup/linux/sysprog/sysprog_events/topic", "trainings/material/soup/linux/sysprog/sysprog_ipc/code/index", "trainings/material/soup/linux/sysprog/sysprog_ipc/screenplay", "trainings/material/soup/linux/sysprog/sysprog_ipc/slides", "trainings/material/soup/linux/sysprog/sysprog_ipc/topic", "trainings/material/soup/linux/sysprog/sysprog_signals/code/index", "trainings/material/soup/linux/sysprog/sysprog_signals/screenplay", "trainings/material/soup/linux/sysprog/sysprog_signals/slides", "trainings/material/soup/linux/sysprog/sysprog_signals/topic", "trainings/material/soup/linux/toolchain/basics/topic", "trainings/material/soup/linux/toolchain/cmake/cross", "trainings/material/soup/linux/toolchain/cmake/local", "trainings/material/soup/linux/toolchain/cross/basics", "trainings/material/soup/linux/toolchain/cross/group", "trainings/material/soup/linux/toolchain/exercises/cross-build", "trainings/material/soup/linux/toolchain/exercises/fh-2022-questions", "trainings/material/soup/linux/toolchain/exercises/group", "trainings/material/soup/linux/toolchain/exercises/native-build", "trainings/material/soup/linux/toolchain/exercises/raspberry-toolchain", "trainings/material/soup/linux/toolchain/group", "trainings/material/soup/linux/toolchain/raspberry-pi/group", "trainings/material/soup/linux/toolchain/raspberry-pi/linaro", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-build-details", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-build-docker-fedora", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-setup", "trainings/material/soup/linux/toolchain/separate-compilation/topic", "trainings/material/soup/linux/toolchain/shared-libraries/topic", "trainings/material/soup/linux/toolchain/static-library/topic", "trainings/material/soup/python/advanced/closures/topic", "trainings/material/soup/python/advanced/comprehensions/topic", "trainings/material/soup/python/advanced/context-mgr/topic", "trainings/material/soup/python/advanced/decorators/topic", "trainings/material/soup/python/advanced/exceptions/topic", "trainings/material/soup/python/advanced/exec/topic", "trainings/material/soup/python/advanced/group", "trainings/material/soup/python/advanced/iteration-generation/iteration-generation/topic", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/fibonacci-generator", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/iterator-protocol", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/topic", "trainings/material/soup/python/advanced/iteration-generation/topic", "trainings/material/soup/python/advanced/modules", "trainings/material/soup/python/advanced/multithreading/basics", "trainings/material/soup/python/advanced/multithreading/group", "trainings/material/soup/python/advanced/multithreading/mutex", "trainings/material/soup/python/advanced/multithreading/questions", "trainings/material/soup/python/advanced/oo/abc/topic", "trainings/material/soup/python/advanced/oo/classes-and-dicts/topic", "trainings/material/soup/python/advanced/oo/constructor/topic", "trainings/material/soup/python/advanced/oo/group", "trainings/material/soup/python/advanced/oo/inheritance/topic", "trainings/material/soup/python/advanced/oo/methods/topic", "trainings/material/soup/python/advanced/oo/namedtuple/topic", "trainings/material/soup/python/advanced/oo/operator-overloading/topic", "trainings/material/soup/python/advanced/oo/properties/topic", "trainings/material/soup/python/advanced/oo/str-repr/topic", "trainings/material/soup/python/advanced/starargs/topic", "trainings/material/soup/python/basics/group", "trainings/material/soup/python/basics/installation", "trainings/material/soup/python/basics/python_0110_blahblah/topic", "trainings/material/soup/python/basics/python_0120_helloworld/topic", "trainings/material/soup/python/basics/python_0125_running/topic", "trainings/material/soup/python/basics/python_0130_syntax_etc/topic", "trainings/material/soup/python/basics/python_0139_commandline_argv/topic", "trainings/material/soup/python/basics/python_0140_variables/topic", "trainings/material/soup/python/basics/python_0150_datatypes_overview/topic", "trainings/material/soup/python/basics/python_0150_datatypes_overview_compound/topic", "trainings/material/soup/python/basics/python_0160_boolean/topic", "trainings/material/soup/python/basics/python_0170_if/topic", "trainings/material/soup/python/basics/python_0193_while/topic", "trainings/material/soup/python/basics/python_0200_sequential_types/topic", "trainings/material/soup/python/basics/python_0210_indexing_slicing/topic", "trainings/material/soup/python/basics/python_0220_for/topic", "trainings/material/soup/python/basics/python_0225_range/topic", "trainings/material/soup/python/basics/python_0250_refs_flat_deep_copy/topic", "trainings/material/soup/python/basics/python_0270_functions/screenplay-scoping", "trainings/material/soup/python/basics/python_0270_functions/slideshow", "trainings/material/soup/python/basics/python_0270_functions/topic", "trainings/material/soup/python/basics/python_0300_strings/topic", "trainings/material/soup/python/basics/python_0310_strings_formatting/topic", "trainings/material/soup/python/basics/python_0320_strings_methods/topic", "trainings/material/soup/python/basics/python_0400_lists/topic", "trainings/material/soup/python/basics/python_0450_dictionaries/topic", "trainings/material/soup/python/basics/python_0460_sets/topic", "trainings/material/soup/python/basics/python_0500_files/topic", "trainings/material/soup/python/basics/python_1000_function_objects/topic", "trainings/material/soup/python/drafts/argparse/topic", "trainings/material/soup/python/drafts/group", "trainings/material/soup/python/drafts/matplotlib/topic", "trainings/material/soup/python/drafts/setuptools/topic", "trainings/material/soup/python/exercises/csv/csv-db", "trainings/material/soup/python/exercises/csv/csv-module", "trainings/material/soup/python/exercises/csv/group", "trainings/material/soup/python/exercises/group", "trainings/material/soup/python/exercises/herdt/boolean", "trainings/material/soup/python/exercises/herdt/exercise_while_even_numbers", "trainings/material/soup/python/exercises/herdt/greet", "trainings/material/soup/python/exercises/herdt/group", "trainings/material/soup/python/exercises/herdt/max_numbers", "trainings/material/soup/python/exercises/herdt/swap", "trainings/material/soup/python/exercises/herdt/username_password", "trainings/material/soup/python/exercises/legacy/cmdline_digit", "trainings/material/soup/python/exercises/legacy/dict_keyerror", "trainings/material/soup/python/exercises/legacy/distill", "trainings/material/soup/python/exercises/legacy/fibonacci-generator", "trainings/material/soup/python/exercises/legacy/for_primeness", "trainings/material/soup/python/exercises/legacy/group", "trainings/material/soup/python/exercises/legacy/join_function", "trainings/material/soup/python/exercises/legacy/max_numbers", "trainings/material/soup/python/exercises/legacy/max_numbers_function", "trainings/material/soup/python/exercises/legacy/mixed_list_executable", "trainings/material/soup/python/exercises/legacy/mixed_list_interactive", "trainings/material/soup/python/exercises/legacy/passwd", "trainings/material/soup/python/exercises/legacy/primeness_function", "trainings/material/soup/python/exercises/legacy/revert", "trainings/material/soup/python/exercises/legacy/string-rightjustify", "trainings/material/soup/python/exercises/legacy/uniq_function", "trainings/material/soup/python/exercises/legacy/uniq_generator", "trainings/material/soup/python/exercises/legacy/wc", "trainings/material/soup/python/exercises/legacy/while_primeness", "trainings/material/soup/python/exercises/sensors/group", "trainings/material/soup/python/exercises/sensors/project-setup", "trainings/material/soup/python/exercises/sensors/sensor-const", "trainings/material/soup/python/exercises/userdb/csvdictreader", "trainings/material/soup/python/exercises/userdb/csvdictreader-function", "trainings/material/soup/python/exercises/userdb/csvreader", "trainings/material/soup/python/exercises/userdb/csvreader-function", "trainings/material/soup/python/exercises/userdb/group", "trainings/material/soup/python/exercises/userdb/mqtt-publish-csv", "trainings/material/soup/python/exercises/userdb/user-class-person", "trainings/material/soup/python/exercises/userdb/user_json", "trainings/material/soup/python/exercises/userdb/userdb_csv", "trainings/material/soup/python/graph", "trainings/material/soup/python/group", "trainings/material/soup/python/link-collection", "trainings/material/soup/python/misc/ai/group", "trainings/material/soup/python/misc/ai/k-means", "trainings/material/soup/python/misc/ai/linear-regression/code", "trainings/material/soup/python/misc/ai/linear-regression/history_data", "trainings/material/soup/python/misc/ai/linear-regression/linear_regression", "trainings/material/soup/python/misc/ai/linear-regression/topic", "trainings/material/soup/python/misc/ai/machine-learning-intro", "trainings/material/soup/python/misc/csv/topic", "trainings/material/soup/python/misc/db/dbapi2", "trainings/material/soup/python/misc/db/group", "trainings/material/soup/python/misc/db/postgres", "trainings/material/soup/python/misc/db/sqlite3", "trainings/material/soup/python/misc/encoding/topic", "trainings/material/soup/python/misc/group", "trainings/material/soup/python/misc/import", "trainings/material/soup/python/misc/mqtt/topic", "trainings/material/soup/python/misc/pandas/add_row", "trainings/material/soup/python/misc/pandas/basics", "trainings/material/soup/python/misc/pandas/filters", "trainings/material/soup/python/misc/pandas/group", "trainings/material/soup/python/misc/pandas/iloc", "trainings/material/soup/python/misc/pandas/indexes", "trainings/material/soup/python/misc/pandas/loc", "trainings/material/soup/python/misc/pandas/mod_col", "trainings/material/soup/python/misc/python_5550_xml_etree/topic", "trainings/material/soup/python/misc/vscode", "trainings/material/soup/python/swdev/group", "trainings/material/soup/python/swdev/pip/screenplay", "trainings/material/soup/python/swdev/pip/slides", "trainings/material/soup/python/swdev/pip/topic", "trainings/material/soup/python/swdev/pypi", "trainings/material/soup/python/swdev/pytest/group", "trainings/material/soup/python/swdev/pytest/intro", "trainings/material/soup/python/swdev/unittest", "trainings/material/soup/python/swdev/venv/screenplay", "trainings/material/soup/python/swdev/venv/slides", "trainings/material/soup/python/swdev/venv/topic", "trainings/material/soup/unittest/group", "trainings/material/soup/unittest/unittest_gtest_basics/code/index", "trainings/material/soup/unittest/unittest_gtest_basics/screenplay", "trainings/material/soup/unittest/unittest_gtest_basics/topic", "trainings/material/soup/unittest/unittest_gtest_cmake/screenplay", "trainings/material/soup/unittest/unittest_gtest_cmake/topic", "trainings/material/soup/unittest/unittest_gtest_fixture/code/index", "trainings/material/soup/unittest/unittest_gtest_fixture/screenplay", "trainings/material/soup/unittest/unittest_gtest_fixture/topic", "trainings/org", "trainings/repertoire/_hidden/kettner-lfs-2013-09-16", "trainings/repertoire/bash", "trainings/repertoire/c-like/c", "trainings/repertoire/c-like/c-advanced", "trainings/repertoire/c-like/cxx", "trainings/repertoire/c-like/cxx11", "trainings/repertoire/c-like/index", "trainings/repertoire/cmake", "trainings/repertoire/design-patterns/design-patterns", "trainings/repertoire/embedded", "trainings/repertoire/kernel-programming-basics", "trainings/repertoire/linux-basics", "trainings/repertoire/make", "trainings/repertoire/python/advanced", "trainings/repertoire/python/basics", "trainings/repertoire/python/herdt", "trainings/repertoire/raspi-hands-on", "trainings/repertoire/svn", "trainings/repertoire/sysprog/basics", "trainings/repertoire/sysprog/fortgeschrittenes", "trainings/repertoire/sysprog/index", "trainings/repertoire/sysprog/multithreading", "trainings/repertoire/sysprog/network", "trainings/repertoire/unittests"], "filenames": ["about/myself/contact.rst", "about/myself/cv-de.rst", "about/myself/index.rst", "about/myself/projects-de.rst", "about/myself/skills-de.rst", "about/site/courses/angebot-2023-10-12.rst", "about/site/courses/index.rst", "about/site/courses/samples/detail/2021-04-12/Notebook.ipynb", "about/site/courses/samples/detail/2021-04-12/index.rst", "about/site/courses/samples/detail/2021-04-12/notebook-wrapper.rst", "about/site/courses/samples/detail/index.rst", "about/site/courses/samples/index.rst", "about/site/courses/templates.rst", "about/site/index.rst", "about/site/opentraining/index.rst", "about/site/opentraining/misc/draft-topics/index.rst", "about/site/opentraining/misc/index.rst", "about/site/opentraining/misc/s5/index.rst", "about/site/opentraining/misc/s5/tests/index.rst", "about/site/opentraining/misc/s5/tests/test-slides.rst", "about/site/opentraining/misc/screencast.rst", "about/site/opentraining/misc/topics-to-write.rst", "about/site/opentraining/netidee/index.rst", "about/site/opentraining/netidee/netidee-antrag.rst", "about/site/opentraining/netidee/netidee-video-2min.rst", "about/site/opentraining/usecases/agenda-subtract-known.rst", "about/site/opentraining/usecases/duration.rst", "about/site/opentraining/usecases/index.rst", "about/site/opentraining/usecases/linking.rst", "about/site/opentraining/usecases/menu.rst", "about/site/opentraining/usecases/slides.rst", "about/site/recipes/camera-ssh.rst", "about/site/recipes/emoji.rst", "about/site/recipes/index.rst", "about/site/recipes/isoamsa.rst", "about/site/recipes/isoamsr.rst", "about/site/recipes/isonum.rst", "about/site/recipes/layout-test.rst", "about/site/recipes/mathml.rst", "about/site/recipes/rst-cheatsheet.rst", "about/site/recipes/sphinxish.rst", "about/site/work-in-progress/2022-04-13/index.rst", "about/site/work-in-progress/2022-04-13/seminar/block-before-googletest.rst", "about/site/work-in-progress/2022-04-13/seminar/clean-code-craftsmanship.rst", "about/site/work-in-progress/2022-04-13/seminar/enter-googletest.rst", "about/site/work-in-progress/2022-04-13/seminar/index.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/find-error.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/group.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/overwrite-existing-files.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/overwrite-store-content-on-read.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/csv.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/group.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/other-indexes.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/group.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/backingstore-interface.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/backingstore-monolithic.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/group.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/pass-store-in-ctor.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/store-enum-switch.rst", "about/site/work-in-progress/blink/glt-2023.rst", "about/site/work-in-progress/blink/glt-2024.rst", "about/site/work-in-progress/blink/index.rst", "about/site/work-in-progress/blink/installation.rst", "about/site/work-in-progress/blink/pycon-2023.rst", "about/site/work-in-progress/blink/screenplay.rst", "about/site/work-in-progress/blog-queue/hochkoenig/index.rst", "about/site/work-in-progress/blog-queue/index.rst", "about/site/work-in-progress/blog-queue/sphinx.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx_build.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx_iface.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx_oo_basics.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx_unittest.rst", "about/site/work-in-progress/fh-joanneum/2019/ec.rst", "about/site/work-in-progress/fh-joanneum/2019/embedded-computing-1.rst", "about/site/work-in-progress/fh-joanneum/2019/embedded-computing-2.rst", "about/site/work-in-progress/fh-joanneum/2019/exercise_mt_race.rst", "about/site/work-in-progress/fh-joanneum/2019/exercise_mt_race_fixed.rst", "about/site/work-in-progress/fh-joanneum/2019/git.rst", "about/site/work-in-progress/fh-joanneum/2019/index.rst", "about/site/work-in-progress/fh-joanneum/2019/linux.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_basics.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_dev_mgmt.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_avg_sensor.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_avg_sensor_parallel.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_led_display.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_sensors.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_gpio.rst", "about/site/work-in-progress/fh-joanneum/2019/mt.rst", "about/site/work-in-progress/fh-joanneum/2019/mt_lock.rst", "about/site/work-in-progress/fh-joanneum/2019/mt_wait.rst", "about/site/work-in-progress/fh-joanneum/2019/py_basics.rst", "about/site/work-in-progress/fh-joanneum/2019/py_exercise_avg_display.rst", "about/site/work-in-progress/fh-joanneum/2019/py_exercise_sensors.rst", "about/site/work-in-progress/fh-joanneum/2019/py_web.rst", "about/site/work-in-progress/fh-joanneum/2019/py_web_sensors.rst", "about/site/work-in-progress/fh-joanneum/2019/python.rst", "about/site/work-in-progress/fh-joanneum/2020/index.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-08.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-10.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-10-homework.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-21.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-22,24.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-28.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-04-01.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/index.rst", "about/site/work-in-progress/fh-joanneum/2020/ws2022.rst", "about/site/work-in-progress/fh-joanneum/2020/ws2022-questions-code-general.rst", "about/site/work-in-progress/fh-joanneum/2020/ws2022-questions-yesno.rst", "about/site/work-in-progress/fh-joanneum/2020/ws2022/lab-exam-2023-01-17.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2023-06-30.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2023-06-30-solved.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2024-02-02/exam-2024-02-02-sample.rst", "about/site/work-in-progress/fh-joanneum/2021/git/git.rst", "about/site/work-in-progress/fh-joanneum/2021/index.rst", "about/site/work-in-progress/fh-joanneum/2021/ss2023.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot-basic-integration.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot-display.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot-full-integration.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger-csv-sink.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger-integration.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger-mqtt-sink.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/display-infrastructure.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/group.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/libgpiod-switch.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/mqtt-tkinter.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/pwm-display.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/sensor-interface.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/sensor-w1.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/switch-interface.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/sysfs-gpio-switch.rst", "about/site/work-in-progress/fh-joanneum/2021/ws2023-2024.rst", "about/site/work-in-progress/fh-joanneum/index.rst", "about/site/work-in-progress/git.rst", "about/site/work-in-progress/index.rst", "about/site/work-in-progress/packaging/index.rst", "about/site/work-in-progress/project-xxx/audio-chip.rst", "about/site/work-in-progress/project-xxx/debian-config.rst", "about/site/work-in-progress/project-xxx/debian-kernel-package.rst", "about/site/work-in-progress/project-xxx/hardware-bringup.rst", "about/site/work-in-progress/project-xxx/index.rst", "about/site/work-in-progress/project-xxx/kernel-upgrade-dirty.rst", "about/site/work-in-progress/project-xxx/wait-hardware.rst", "about/site/work-in-progress/project-xxx/yocto-kernel.rst", "about/site/work-in-progress/python-training.rst", "about/site/work-in-progress/screencast.rst", "about/site/work-in-progress/seo.rst", "about/site/work-in-progress/stacks.rst", "about/site/work-in-progress/todo-misc.rst", "about/site/work-in-progress/web.rst", "blog/2010/07/beagleboard-how-to-repair-nand-also-known-as-40w.rst", "blog/2011/01/porting-to-linux-there-s-always-a-better-way.rst", "blog/2011/01/saving-solid-state-disk-life--gentoo.rst", "blog/2012/04/Why-ps-sucks.rst", "blog/2020/02/fedora-kernel-build.rst", "blog/2020/03/custom-domain-gh-pages.rst", "blog/2020/03/ms-teams-on-linux.rst", "blog/2020/03/sphinx-gh-pages.rst", "blog/2020/04/bbb.rst", "blog/2020/09/traunstein.rst", "blog/2021/08/grintovec.rst", "blog/2021/09/xps13-shim-mok-brick/index.rst", "blog/2022/09/cross-raspi.rst", "blog/index.rst", "index.rst", "trainings/codex.rst", "trainings/exercises.rst", "trainings/index.rst", "trainings/log/detail/2013-10-01/index.rst", "trainings/log/detail/2015-11-30/index.rst", "trainings/log/detail/2019-10-28/LiveHacking.ipynb", "trainings/log/detail/2019-10-28/index.rst", "trainings/log/detail/2019-11-12/code/BigPlan.ipynb", "trainings/log/detail/2019-11-12/code/LiveHacking.ipynb", "trainings/log/detail/2019-11-12/index.rst", "trainings/log/detail/2020-01-10/Proposal.rst", "trainings/log/detail/2020-01-10/index.rst", "trainings/log/detail/2020-03-30/code/exercise-string/index.rst", "trainings/log/detail/2020-03-30/index.rst", "trainings/log/detail/2020-03-30/install-googletest.rst", "trainings/log/detail/2020-03-30/setup.rst", "trainings/log/detail/2020-03-30/vs-code.rst", "trainings/log/detail/2020-05-12/code/index.rst", "trainings/log/detail/2020-05-12/index.rst", "trainings/log/detail/2020-05-18/Livehacking.ipynb", "trainings/log/detail/2020-05-18/code/index.rst", "trainings/log/detail/2020-05-18/index.rst", "trainings/log/detail/2020-09-07/index.rst", "trainings/log/detail/2020-09-28/index.rst", "trainings/log/detail/2020-10-19/Notebook.ipynb", "trainings/log/detail/2020-10-19/index.rst", "trainings/log/detail/2020-11-03/index.rst", "trainings/log/detail/2020-11-23/index.rst", "trainings/log/detail/2020-11-30/index.rst", "trainings/log/detail/2021-01-13/Notebook.ipynb", "trainings/log/detail/2021-01-13/index.rst", "trainings/log/detail/2021-01-13/notebook-wrapper.rst", "trainings/log/detail/2021-02-22/index.rst", "trainings/log/detail/2021-03-08/index.rst", "trainings/log/detail/2021-03-15/Notebook.ipynb", "trainings/log/detail/2021-03-15/index.rst", "trainings/log/detail/2021-03-22/Notebook.ipynb", "trainings/log/detail/2021-03-22/index.rst", "trainings/log/detail/2021-03-29/index.rst", "trainings/log/detail/2021-04-12/Notebook.ipynb", "trainings/log/detail/2021-04-12/index.rst", "trainings/log/detail/2021-04-12/notebook-wrapper.rst", "trainings/log/detail/2021-05-03/Notebook.ipynb", "trainings/log/detail/2021-05-03/index.rst", "trainings/log/detail/2021-05-03/notebook-wrapper.rst", "trainings/log/detail/2021-05-25/Notebook.ipynb", "trainings/log/detail/2021-05-25/index.rst", "trainings/log/detail/2021-06-14/index.rst", "trainings/log/detail/2021-07-12/index.rst", "trainings/log/detail/2021-08-02/index.rst", "trainings/log/detail/2021-08-02/notebook.ipynb", "trainings/log/detail/2021-08-23/Notebook.ipynb", "trainings/log/detail/2021-08-23/exercises/sap-cleaned.rst", "trainings/log/detail/2021-08-23/index.rst", "trainings/log/detail/2021-08-23/notebook-wrapper.rst", "trainings/log/detail/2021-08-31/Notebook.ipynb", "trainings/log/detail/2021-08-31/index.rst", "trainings/log/detail/2021-08-31/notebook-wrapper.rst", "trainings/log/detail/2021-11-17/Notebook.ipynb", "trainings/log/detail/2021-11-17/index.rst", "trainings/log/detail/2021-11-17/notebook-wrapper.rst", "trainings/log/detail/2021-12-01/2021-12-01.ipynb", "trainings/log/detail/2021-12-01/index.rst", "trainings/log/detail/2021-12-01/notebook-wrapper.rst", "trainings/log/detail/2021-12-06/index.rst", "trainings/log/detail/2022-01-17/index.rst", "trainings/log/detail/2022-01-17/notebook.ipynb", "trainings/log/detail/2022-01-17/notebook-wrapper.rst", "trainings/log/detail/2022-02-23/Notebook.ipynb", "trainings/log/detail/2022-02-23/index.rst", "trainings/log/detail/2022-02-23/notebook-wrapper.rst", "trainings/log/detail/2022-03-15/Notebook.ipynb", "trainings/log/detail/2022-03-15/index.rst", "trainings/log/detail/2022-03-15/notebook-wrapper.rst", "trainings/log/detail/2022-03-23/Notebook.ipynb", "trainings/log/detail/2022-03-23/index.rst", "trainings/log/detail/2022-03-23/notebook-wrapper.rst", "trainings/log/detail/2022-04-05/index.rst", "trainings/log/detail/2022-04-05/notebook.ipynb", "trainings/log/detail/2022-04-05/notebook-wrapper.rst", "trainings/log/detail/2022-04-25/index.rst", "trainings/log/detail/2022-04-25/notebook.ipynb", "trainings/log/detail/2022-04-25/notebook-wrapper.rst", "trainings/log/detail/2022-05-02/index.rst", "trainings/log/detail/2022-05-02/notebook.ipynb", "trainings/log/detail/2022-05-02/notebook-wrapper.rst", "trainings/log/detail/2022-05-16/index.rst", "trainings/log/detail/2022-05-16/notebook.ipynb", "trainings/log/detail/2022-05-16/notebook-wrapper.rst", "trainings/log/detail/2022-06-14/2022-05-11.rst", "trainings/log/detail/2022-06-14/index.rst", "trainings/log/detail/2022-07-26/index.rst", "trainings/log/detail/2022-10-03/index.rst", "trainings/log/detail/2022-10-11/index.rst", "trainings/log/detail/2022-10-24/index.rst", "trainings/log/detail/2022-11-07/index.rst", "trainings/log/detail/2022-11-07/notebook.ipynb", "trainings/log/detail/2022-11-07/notebook-wrapper.rst", "trainings/log/detail/2022-11-16/index.rst", "trainings/log/detail/2022-11-16/notebook.ipynb", "trainings/log/detail/2022-11-16/notebook-wrapper.rst", "trainings/log/detail/2023-01-23/index.rst", "trainings/log/detail/2023-02-13/index.rst", "trainings/log/detail/2023-03-13-Python-SAP/Demo/demo-notebook.ipynb", "trainings/log/detail/2023-03-13-Python-SAP/demo.rst", "trainings/log/detail/2023-03-13-Python-SAP/index.rst", "trainings/log/detail/2023-03-13-Python-SAP/notebook.ipynb", "trainings/log/detail/2023-03-13-Python-SAP/notebook-wrapper.rst", "trainings/log/detail/2023-03-13-Python-SAP/original-agenda.rst", "trainings/log/detail/2023-03-13-Python-SAP/sap-dataset/index.rst", "trainings/log/detail/2023-03-13-Python-SAP/sap-dataset/sap-dataset.ipynb", "trainings/log/detail/2023-03-20--C++-embedded/index.rst", "trainings/log/detail/2023-03-28--Python-Clean-Code/index.rst", "trainings/log/detail/2023-04-18--C++-embedded/index.rst", "trainings/log/detail/2023-04-24--Python-Advanced/agenda.rst", "trainings/log/detail/2023-04-24--Python-Advanced/index.rst", "trainings/log/detail/2023-04-24--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-04-24--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-05-15--Python-Basics/agenda.rst", "trainings/log/detail/2023-05-15--Python-Basics/index.rst", "trainings/log/detail/2023-05-15--Python-Basics/notebook.ipynb", "trainings/log/detail/2023-05-15--Python-Basics/notebook-wrapper.rst", "trainings/log/detail/2023-05-23--Linux-Basics/agenda.rst", "trainings/log/detail/2023-05-23--Linux-Basics/index.rst", "trainings/log/detail/2023-06-20--Python-Basics/agenda.rst", "trainings/log/detail/2023-06-20--Python-Basics/index.rst", "trainings/log/detail/2023-06-20--Python-Basics/notebook.ipynb", "trainings/log/detail/2023-06-20--Python-Basics/notebook-wrapper.rst", "trainings/log/detail/2023-07-03--CMake/agenda.rst", "trainings/log/detail/2023-07-03--CMake/index.rst", "trainings/log/detail/2023-09-25--Python-Advanced/index.rst", "trainings/log/detail/2023-09-25--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-09-25--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-10-09--Python-Advanced/index.rst", "trainings/log/detail/2023-10-09--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-10-09--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-10-24--Python-Advanced/agenda.rst", "trainings/log/detail/2023-10-24--Python-Advanced/index.rst", "trainings/log/detail/2023-10-24--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-10-24--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-11-22--Python-Advanced/agenda.rst", "trainings/log/detail/2023-11-22--Python-Advanced/index.rst", "trainings/log/detail/2023-11-22--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-11-22--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-11-27--CMake/agenda.rst", "trainings/log/detail/2023-11-27--CMake/index.rst", "trainings/log/detail/2023-11-29--Python-Basics/agenda.rst", "trainings/log/detail/2023-11-29--Python-Basics/index.rst", "trainings/log/detail/2023-11-29--Python-Basics/notebook.ipynb", "trainings/log/detail/2023-11-29--Python-Basics/notebook-wrapper.rst", "trainings/log/detail/2023-12-04--C++-Advanced/agenda.rst", "trainings/log/detail/2023-12-04--C++-Advanced/index.rst", "trainings/log/detail/2023-12-18--Python-Basics/agenda.rst", "trainings/log/detail/2023-12-18--Python-Basics/index.rst", "trainings/log/detail/2023-12-18--Python-Basics/notebook.ipynb", "trainings/log/detail/2023-12-18--Python-Basics/notebook-wrapper.rst", "trainings/log/detail/2023-XX-XX-C++-embedded/index.rst", "trainings/log/detail/2023-XX-XX-Python-SAP/index.rst", "trainings/log/detail/2024-01-15--Python-Basics/agenda.rst", "trainings/log/detail/FH-ECE-19/EC1/2021-05-12/screenplay-checker.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-abc.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-oo.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-unittest.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/fh-group.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/file-read.rst", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/2021-05-20-G2.ipynb", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/2021-05-21.ipynb", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Checker-Explanations.ipynb", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Datatypes.ipynb", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Functions.ipynb", "trainings/log/detail/FH-ECE-19/EC1/cloud-computer.rst", "trainings/log/detail/FH-ECE-19/EC1/formales.rst", "trainings/log/detail/FH-ECE-19/EC1/index.rst", "trainings/log/detail/FH-ECE-19/EC1/log.rst", "trainings/log/detail/FH-ECE-19/EC1/lv-de.rst", "trainings/log/detail/FH-ECE-19/EC1/lv-en.rst", "trainings/log/detail/FH-ECE-19/EC1/plan.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-07.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-12.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-28.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-11-15.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-11-29.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-12-14.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-01-10.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-01-12.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-02-15.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/index.rst", "trainings/log/detail/FH-ECE-19/EC2/index.rst", "trainings/log/detail/FH-ECE-19/EC2/test-material.rst", "trainings/log/detail/FH-ECE-19/index.rst", "trainings/log/detail/index.rst", "trainings/log/index.rst", "trainings/material/index.rst", "trainings/material/soup/c/010-introduction/000-installation/topic.rst", "trainings/material/soup/c/010-introduction/010-introduction/topic.rst", "trainings/material/soup/c/010-introduction/020-getting-started/topic.rst", "trainings/material/soup/c/010-introduction/030-variables-and-arithmetic-expressions/topic.rst", "trainings/material/soup/c/010-introduction/040-exercise-fahrenheit-float/topic.rst", "trainings/material/soup/c/010-introduction/050-the-for-statement/topic.rst", "trainings/material/soup/c/010-introduction/060-exercise-fahrenheit-for/topic.rst", "trainings/material/soup/c/010-introduction/070-symbolic-constants/topic.rst", "trainings/material/soup/c/010-introduction/080-exercise-fahrenheit-cpp/topic.rst", "trainings/material/soup/c/010-introduction/090-character-input-and-output/topic.rst", "trainings/material/soup/c/010-introduction/100-exercise-wc/topic.rst", "trainings/material/soup/c/010-introduction/110-arrays/topic.rst", "trainings/material/soup/c/010-introduction/120-exercise-histogram/topic.rst", "trainings/material/soup/c/010-introduction/130-functions/topic.rst", "trainings/material/soup/c/010-introduction/140-exercise-power-declaration/topic.rst", "trainings/material/soup/c/010-introduction/150-character-arrays/topic.rst", "trainings/material/soup/c/010-introduction/160-exercise-string-read-line/topic.rst", "trainings/material/soup/c/010-introduction/170-external-variables-and-scope/topic.rst", "trainings/material/soup/c/010-introduction/group.rst", "trainings/material/soup/c/020-types-operators-expressions/010-introduction/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/020-variable-names/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/030-data-types-and-sizes/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/040-constants/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/050-declarations/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/060-arithmetic-operators/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/070-relational-and-logical-operators/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/080-type-conversions/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/090-increment-and-decrement-operators/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/100-exercise-string-reduce/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/110-bitwise-operators/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/120-assignment-operators-and-expressions/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/130-conditional-expressions/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/140-precedence-and-order-of-evaluation/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/group.rst", "trainings/material/soup/c/030-program-flow/010-statements-and-blocks/topic.rst", "trainings/material/soup/c/030-program-flow/020-if-else/topic.rst", "trainings/material/soup/c/030-program-flow/030-else-if/topic.rst", "trainings/material/soup/c/030-program-flow/040-switch/topic.rst", "trainings/material/soup/c/030-program-flow/050-loops-while-and-for/topic.rst", "trainings/material/soup/c/030-program-flow/060-loops-do-while/topic.rst", "trainings/material/soup/c/030-program-flow/070-break-and-continue/topic.rst", "trainings/material/soup/c/030-program-flow/080-goto-and-labels/topic.rst", "trainings/material/soup/c/030-program-flow/group.rst", "trainings/material/soup/c/040-functions-and-program-structure/010-basics-of-functions/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/020-external-variables/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/030-header-files/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/040-static-variables/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/050-c-preprocessor/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/060-c-preprocessor-advanced/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/group.rst", "trainings/material/soup/c/050-pointers-and-arrays/010-pointers-and-addresses/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/020-pointers-and-function-arguments/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/030-exercise-swap/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/040-pointers-and-arrays/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/050-command-line-arguments/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/group.rst", "trainings/material/soup/c/060-structures/010-basics-of-structures/topic.rst", "trainings/material/soup/c/060-structures/020-structures-and-functions/topic.rst", "trainings/material/soup/c/060-structures/030-typedef/topic.rst", "trainings/material/soup/c/060-structures/group.rst", "trainings/material/soup/c/070-memory/010-malloc/topic.rst", "trainings/material/soup/c/070-memory/020-exercise-linked-list/topic.rst", "trainings/material/soup/c/070-memory/group.rst", "trainings/material/soup/c/080-advanced-language-features/010-volatile/topic.rst", "trainings/material/soup/c/080-advanced-language-features/020-atomic/topic.rst", "trainings/material/soup/c/080-advanced-language-features/030-alignment/topic.rst", "trainings/material/soup/c/080-advanced-language-features/group.rst", "trainings/material/soup/c/090-program-sanity/010-introduction/topic.rst", "trainings/material/soup/c/090-program-sanity/020-integral-types/topic.rst", "trainings/material/soup/c/090-program-sanity/030-discrete-values/topic.rst", "trainings/material/soup/c/090-program-sanity/040-static/topic.rst", "trainings/material/soup/c/090-program-sanity/050-const/topic.rst", "trainings/material/soup/c/090-program-sanity/060-struct-initialization/topic.rst", "trainings/material/soup/c/090-program-sanity/070-explicit-type-safety/topic.rst", "trainings/material/soup/c/090-program-sanity/080-valgrind/topic.rst", "trainings/material/soup/c/090-program-sanity/group.rst", "trainings/material/soup/c/100-performance/010-introduction/topic.rst", "trainings/material/soup/c/100-performance/020-computebound/topic.rst", "trainings/material/soup/c/100-performance/030-memory/topic.rst", "trainings/material/soup/c/100-performance/group.rst", "trainings/material/soup/c/110-profiling/010-introduction/topic.rst", "trainings/material/soup/c/110-profiling/020-gprof/topic.rst", "trainings/material/soup/c/110-profiling/030-callgrind/topic.rst", "trainings/material/soup/c/110-profiling/040-oprofile/topic.rst", "trainings/material/soup/c/110-profiling/group.rst", "trainings/material/soup/c/group.rst", "trainings/material/soup/clean-code/book-messages.rst", "trainings/material/soup/clean-code/craft-sw.rst", "trainings/material/soup/clean-code/group.rst", "trainings/material/soup/clean-code/intro-python/livehacking.rst", "trainings/material/soup/cmake/basics.rst", "trainings/material/soup/cmake/configure_file.rst", "trainings/material/soup/cmake/cxx-and-rants.rst", "trainings/material/soup/cmake/external-dependencies.rst", "trainings/material/soup/cmake/group.rst", "trainings/material/soup/cmake/installation.rst", "trainings/material/soup/cmake/libraries.rst", "trainings/material/soup/cmake/optional-code-approach-1.rst", "trainings/material/soup/cmake/optional-code-approach-2.rst", "trainings/material/soup/cmake/optional-code-problem.rst", "trainings/material/soup/cmake/shared-libraries.rst", "trainings/material/soup/cmake/structure.rst", "trainings/material/soup/cmake/targets-properties.rst", "trainings/material/soup/cmake/testing.rst", "trainings/material/soup/cxx-code/index.rst", "trainings/material/soup/cxx-design-patterns/abstract-factory/abstract-factory.rst", "trainings/material/soup/cxx-design-patterns/adapter/adapter.rst", "trainings/material/soup/cxx-design-patterns/command/command.rst", "trainings/material/soup/cxx-design-patterns/command/socialdb.rst", "trainings/material/soup/cxx-design-patterns/composite/composite.rst", "trainings/material/soup/cxx-design-patterns/decorator/decorator.rst", "trainings/material/soup/cxx-design-patterns/group.rst", "trainings/material/soup/cxx-design-patterns/heating-screenplay/heating-screenplay.rst", "trainings/material/soup/cxx-design-patterns/interpreter/interpreter.rst", "trainings/material/soup/cxx-design-patterns/observer/observer.rst", "trainings/material/soup/cxx-design-patterns/oo-principles.rst", "trainings/material/soup/cxx-design-patterns/proxy/proxy.rst", "trainings/material/soup/cxx-design-patterns/sensor-hierarchy.rst", "trainings/material/soup/cxx-design-patterns/singleton/singleton.rst", "trainings/material/soup/cxx-design-patterns/uml/uml.rst", "trainings/material/soup/cxx-exercises/design-patterns/abstract-factory.rst", "trainings/material/soup/cxx-exercises/design-patterns/adapter.rst", "trainings/material/soup/cxx-exercises/design-patterns/command.rst", "trainings/material/soup/cxx-exercises/design-patterns/composite.rst", "trainings/material/soup/cxx-exercises/design-patterns/decorator.rst", "trainings/material/soup/cxx-exercises/design-patterns/group.rst", "trainings/material/soup/cxx-exercises/design-patterns/interpreter-and-adapter.rst", "trainings/material/soup/cxx-exercises/design-patterns/interpreter-basic.rst", "trainings/material/soup/cxx-exercises/design-patterns/observer.rst", "trainings/material/soup/cxx-exercises/design-patterns/proxy-remote.rst", "trainings/material/soup/cxx-exercises/design-patterns/proxy-round.rst", "trainings/material/soup/cxx-exercises/design-patterns/singleton-flexible.rst", "trainings/material/soup/cxx-exercises/design-patterns/singleton-flexible-strict.rst", "trainings/material/soup/cxx-exercises/design-patterns/singleton-inflexible.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/abstract-factory.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/adapter.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/command.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/composite.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/decorator.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/group.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/interpreter-and-adapter.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/interpreter-basic.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/observer.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/proxy-remote.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/proxy-round.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-flexible.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-flexible-strict.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-inflexible.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-loop-function.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-no-polymorphism.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-random-sensor.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/group.rst", "trainings/material/soup/cxx-exercises/group.rst", "trainings/material/soup/cxx-exercises/nopoly-display-led-stripe/display-led-stripe-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-hysteresis/hysteresis-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-sensor-avg/sensor-avg-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-const-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-mock-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-random-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-switch-mock/switch-mock-nopoly.rst", "trainings/material/soup/cxx-exercises/oo-shapes/shapes.rst", "trainings/material/soup/cxx-exercises/project-setup.rst", "trainings/material/soup/cxx-exercises/sensor-interface/sensor-interface.rst", "trainings/material/soup/cxx-exercises/sensor-w1-factory/sensor-w1-factory.rst", "trainings/material/soup/cxx-exercises/sensor-w1/sensor-w1.rst", "trainings/material/soup/cxx-exercises/stl/algo.rst", "trainings/material/soup/cxx-exercises/stl/filter-generic.rst", "trainings/material/soup/cxx-exercises/stl/filter-greater-10.rst", "trainings/material/soup/cxx-exercises/stl/filter-odd.rst", "trainings/material/soup/cxx-exercises/stl/group.rst", "trainings/material/soup/cxx-exercises/stl/map.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/group.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/insert-no-overwrite.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/insert-sunny.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/lookup-not-found.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/lookup-sunny.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/no-memleak.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/remove-not-found.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/remove-sunny.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/size-const.rst", "trainings/material/soup/cxx-exercises/stl/uniq.rst", "trainings/material/soup/cxx-exercises/stl/vector.rst", "trainings/material/soup/cxx-todo/index.rst", "trainings/material/soup/cxx/cxx_class_templates/code/index.rst", "trainings/material/soup/cxx/cxx_class_templates/screenplay.rst", "trainings/material/soup/cxx/cxx_class_templates/topic.rst", "trainings/material/soup/cxx/cxx_dynamic_memory/code/index.rst", "trainings/material/soup/cxx/cxx_dynamic_memory/screenplay.rst", "trainings/material/soup/cxx/cxx_dynamic_memory/topic.rst", "trainings/material/soup/cxx/cxx_global_initialization/code/index.rst", "trainings/material/soup/cxx/cxx_global_initialization/screenplay.rst", "trainings/material/soup/cxx/cxx_global_initialization/topic.rst", "trainings/material/soup/cxx/cxx_inheritance_virtual/code/index.rst", "trainings/material/soup/cxx/cxx_inheritance_virtual/screenplay.rst", "trainings/material/soup/cxx/cxx_inheritance_virtual/topic.rst", "trainings/material/soup/cxx/cxx_ownership_raii/code/index.rst", "trainings/material/soup/cxx/cxx_ownership_raii/screenplay.rst", "trainings/material/soup/cxx/cxx_ownership_raii/topic.rst", "trainings/material/soup/cxx/cxx_stl_container_intro/code/index.rst", "trainings/material/soup/cxx/cxx_stl_container_intro/screenplay.rst", "trainings/material/soup/cxx/cxx_stl_container_intro/topic.rst", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/code/index.rst", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/screenplay.rst", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/topic.rst", "trainings/material/soup/cxx/group.rst", "trainings/material/soup/cxx03/001-introduction/topic.rst", "trainings/material/soup/cxx03/020-data-encapsulation/c.rst", "trainings/material/soup/cxx03/020-data-encapsulation/copy-basics.rst", "trainings/material/soup/cxx03/020-data-encapsulation/cpp-introduction.rst", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-custom.rst", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-default.rst", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-dtor.rst", "trainings/material/soup/cxx03/020-data-encapsulation/group.rst", "trainings/material/soup/cxx03/020-data-encapsulation/initializer-list.rst", "trainings/material/soup/cxx03/020-data-encapsulation/object-copy.rst", "trainings/material/soup/cxx03/030-functions-and-methods/010-overloading/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/020-methods/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/030-const/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/040-this/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/050-references/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/060-static/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/065-static-member-variables/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/070-operators/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-cuboid.rst", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-point.rst", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-point3d.rst", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-rectangle.rst", "trainings/material/soup/cxx03/030-functions-and-methods/group.rst", "trainings/material/soup/cxx03/040-exceptions/010-basics/topic.rst", "trainings/material/soup/cxx03/040-exceptions/020-try-catch/topic.rst", "trainings/material/soup/cxx03/040-exceptions/group.rst", "trainings/material/soup/cxx03/050-templates/010-function-templates/topic.rst", "trainings/material/soup/cxx03/050-templates/020-class-templates/topic.rst", "trainings/material/soup/cxx03/050-templates/group.rst", "trainings/material/soup/cxx03/060-stl/010-basics/algo-copy.rst", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-algo.rst", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-basics.rst", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-difference.rst", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-out-of-range.rst", "trainings/material/soup/cxx03/060-stl/010-basics/topic.rst", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/topic.rst", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-and-copy.rst", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-basic.rst", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-pointer-arith.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/binary_search.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/copy.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/find.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/find_if.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/for_each.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/group.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/lower_bound.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/reverse.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/reverse_copy.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/sort.rst", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/basics.rst", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/group.rst", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/list.rst", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/vector.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/basics.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/group.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-init-fill.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-insert.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-remove.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-search.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/multimap.rst", "trainings/material/soup/cxx03/060-stl/allocators/allocator_basics.rst", "trainings/material/soup/cxx03/060-stl/allocators/group.rst", "trainings/material/soup/cxx03/060-stl/exercises/group.rst", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/exercise.rst", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/group.rst", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/solution.rst", "trainings/material/soup/cxx03/060-stl/group.rst", "trainings/material/soup/cxx03/070-dynamic-memory/000-todo/topic.rst", "trainings/material/soup/cxx03/070-dynamic-memory/group.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/basics.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/destructor.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/group.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/interface.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/polymorphism.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/private-protected.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/virtual-destructor.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/virtual-method.rst", "trainings/material/soup/cxx03/900-standard-library-miscellanea/group.rst", "trainings/material/soup/cxx03/900-standard-library-miscellanea/string/topic.rst", "trainings/material/soup/cxx03/exercises-misc/american-flag/exercise.rst", "trainings/material/soup/cxx03/exercises-misc/fh-questions.rst", "trainings/material/soup/cxx03/exercises-misc/group.rst", "trainings/material/soup/cxx03/exercises-misc/sum-integers-from-stdin/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/group.rst", "trainings/material/soup/cxx03/exercises-userdb/user-access-methods/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-const-members/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-const/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-default-ctor/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-simple-method/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-to-cxx-ctor/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-insert/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-search-find_if/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-search-notfound-exception/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-search/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-vector/exercise.rst", "trainings/material/soup/cxx03/group.rst", "trainings/material/soup/cxx11/010-introduction/group.rst", "trainings/material/soup/cxx11/010-introduction/history.rst", "trainings/material/soup/cxx11/010-introduction/overview-livehacking.rst", "trainings/material/soup/cxx11/020-new-language-features/010-strongly-typed-enums/topic.rst", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/group.rst", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/implementor-view.rst", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/intro.rst", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/mess.rst", "trainings/material/soup/cxx11/020-new-language-features/050-delegating-ctor/topic.rst", "trainings/material/soup/cxx11/020-new-language-features/055-constexpr/topic.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/afterword.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/group.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-smartptr-move.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-string-move.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-using-string-move.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/overview.rst", "trainings/material/soup/cxx11/020-new-language-features/070-miscellaneous/topic.rst", "trainings/material/soup/cxx11/020-new-language-features/auto.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/group.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-1-conceptless.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-2-conceptless-error.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-3-concept-integral.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/links.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-1-good-old-func.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-2-need-template.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-4-concept-has-size.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-5-concept-index-ret-double.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/group.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/fibo-generator.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/fibonacci.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/generator-h.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/generator-hello.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/simplest.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend-iter.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend-next.rst", "trainings/material/soup/cxx11/020-new-language-features/default.rst", "trainings/material/soup/cxx11/020-new-language-features/delete.rst", "trainings/material/soup/cxx11/020-new-language-features/final.rst", "trainings/material/soup/cxx11/020-new-language-features/group.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/group.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-capture.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-is-functor.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-is-functor-pitfall.rst", "trainings/material/soup/cxx11/020-new-language-features/modules.rst", "trainings/material/soup/cxx11/020-new-language-features/override.rst", "trainings/material/soup/cxx11/020-new-language-features/range-based-for.rst", "trainings/material/soup/cxx11/020-new-language-features/range-based-for-map.rst", "trainings/material/soup/cxx11/020-new-language-features/ranges/good-bad.rst", "trainings/material/soup/cxx11/020-new-language-features/ranges/group.rst", "trainings/material/soup/cxx11/020-new-language-features/ranges/intro.rst", "trainings/material/soup/cxx11/020-new-language-features/ranges/links.rst", "trainings/material/soup/cxx11/020-new-language-features/structured-binding.rst", "trainings/material/soup/cxx11/030-smart-pointers/040-closing-words/topic.rst", "trainings/material/soup/cxx11/030-smart-pointers/group.rst", "trainings/material/soup/cxx11/030-smart-pointers/introduction.rst", "trainings/material/soup/cxx11/030-smart-pointers/introduction-livehack.rst", "trainings/material/soup/cxx11/030-smart-pointers/sharedptr.rst", "trainings/material/soup/cxx11/030-smart-pointers/uniqueptr.rst", "trainings/material/soup/cxx11/030-smart-pointers/weakptr.rst", "trainings/material/soup/cxx11/035-perfect-forwarding/topic.rst", "trainings/material/soup/cxx11/040-bind-function/010-bind/topic.rst", "trainings/material/soup/cxx11/040-bind-function/020-function/topic.rst", "trainings/material/soup/cxx11/040-bind-function/group.rst", "trainings/material/soup/cxx11/050-multithreading/010-introduction/topic.rst", "trainings/material/soup/cxx11/050-multithreading/020-thread/topic.rst", "trainings/material/soup/cxx11/050-multithreading/030-race-conditions/topic.rst", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/atomics.rst", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/mutex.rst", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/scoped-locking.rst", "trainings/material/soup/cxx11/050-multithreading/condition-variable.rst", "trainings/material/soup/cxx11/050-multithreading/group.rst", "trainings/material/soup/cxx11/050-multithreading/promise-future.rst", "trainings/material/soup/cxx11/100-miscellaneous/010-chrono/topic.rst", "trainings/material/soup/cxx11/100-miscellaneous/any-variant-optional/variant.rst", "trainings/material/soup/cxx11/100-miscellaneous/group.rst", "trainings/material/soup/cxx11/drafts/crtp.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/allocator.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/classic-virtual.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/group.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/related-no-virtual.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/type-erasure.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/unrelated.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/variant-automatic-visit.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/variant-manual-if.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/variant-manual-visit.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/why-replace-virtual.rst", "trainings/material/soup/cxx11/drafts/group.rst", "trainings/material/soup/cxx11/exercises/bag-copy.rst", "trainings/material/soup/cxx11/exercises/bag-shared.rst", "trainings/material/soup/cxx11/exercises/bag-unique.rst", "trainings/material/soup/cxx11/exercises/group.rst", "trainings/material/soup/cxx11/filesystem/topic.rst", "trainings/material/soup/cxx11/group.rst", "trainings/material/soup/graph.rst", "trainings/material/soup/index.rst", "trainings/material/soup/kernel/cdev-auto/screenplay.rst", "trainings/material/soup/kernel/cdev-auto/slides.rst", "trainings/material/soup/kernel/cdev-auto/topic.rst", "trainings/material/soup/kernel/cdev-file-operations/screenplay.rst", "trainings/material/soup/kernel/cdev-file-operations/slides.rst", "trainings/material/soup/kernel/cdev-file-operations/topic.rst", "trainings/material/soup/kernel/cdev-first-functionality/slides.rst", "trainings/material/soup/kernel/cdev-first-functionality/topic.rst", "trainings/material/soup/kernel/cdev-manual/screenplay.rst", "trainings/material/soup/kernel/cdev-manual/slides.rst", "trainings/material/soup/kernel/cdev-manual/topic.rst", "trainings/material/soup/kernel/cdev-multiple-devices/slides.rst", "trainings/material/soup/kernel/cdev-multiple-devices/topic.rst", "trainings/material/soup/kernel/cdev-refactoring/screenplay.rst", "trainings/material/soup/kernel/cdev-refactoring/slides.rst", "trainings/material/soup/kernel/cdev-refactoring/topic.rst", "trainings/material/soup/kernel/dma/slides.rst", "trainings/material/soup/kernel/dma/topic.rst", "trainings/material/soup/kernel/fedora-kernel-build/screenplay.rst", "trainings/material/soup/kernel/fedora-kernel-build/topic.rst", "trainings/material/soup/kernel/fedora-module-build/screenplay.rst", "trainings/material/soup/kernel/fedora-module-build/topic.rst", "trainings/material/soup/kernel/group.rst", "trainings/material/soup/kernel/hello-world/slides.rst", "trainings/material/soup/kernel/hello-world/topic.rst", "trainings/material/soup/kernel/interrupt-coding/slides.rst", "trainings/material/soup/kernel/interrupt-coding/topic.rst", "trainings/material/soup/kernel/interrupt/slides.rst", "trainings/material/soup/kernel/interrupt/topic.rst", "trainings/material/soup/kernel/iomemory/slides.rst", "trainings/material/soup/kernel/iomemory/topic.rst", "trainings/material/soup/kernel/kmalloc/slides.rst", "trainings/material/soup/kernel/kmalloc/topic.rst", "trainings/material/soup/kernel/list/slides.rst", "trainings/material/soup/kernel/list/topic.rst", "trainings/material/soup/kernel/mutex-coding/slides.rst", "trainings/material/soup/kernel/mutex-coding/topic.rst", "trainings/material/soup/kernel/mutex/slides.rst", "trainings/material/soup/kernel/mutex/topic.rst", "trainings/material/soup/kernel/netdev/slides.rst", "trainings/material/soup/kernel/netdev/topic.rst", "trainings/material/soup/kernel/pci/slides.rst", "trainings/material/soup/kernel/pci/topic.rst", "trainings/material/soup/kernel/process-vs-atomic/slides.rst", "trainings/material/soup/kernel/process-vs-atomic/topic.rst", "trainings/material/soup/kernel/raspi-kernel-build/story.rst", "trainings/material/soup/kernel/raspi-kernel-build/topic.rst", "trainings/material/soup/kernel/sample-project.rst", "trainings/material/soup/kernel/spinlock-coding/slides.rst", "trainings/material/soup/kernel/spinlock-coding/topic.rst", "trainings/material/soup/kernel/spinlock/slides.rst", "trainings/material/soup/kernel/spinlock/topic.rst", "trainings/material/soup/kernel/stub-sysprog-dup/topic.rst", "trainings/material/soup/kernel/time_timer-coding/slides.rst", "trainings/material/soup/kernel/time_timer-coding/topic.rst", "trainings/material/soup/kernel/time_timer/slides.rst", "trainings/material/soup/kernel/time_timer/topic.rst", "trainings/material/soup/kernel/todo.rst", "trainings/material/soup/kernel/usermem/screenplay.rst", "trainings/material/soup/kernel/usermem/slides.rst", "trainings/material/soup/kernel/usermem/topic.rst", "trainings/material/soup/kernel/waitqueue/screenplay.rst", "trainings/material/soup/kernel/waitqueue/slides.rst", "trainings/material/soup/kernel/waitqueue/topic.rst", "trainings/material/soup/kernel/workqueue/screenplay.rst", "trainings/material/soup/kernel/workqueue/slides.rst", "trainings/material/soup/kernel/workqueue/topic.rst", "trainings/material/soup/linux/basics/archiving-compression/exercises.rst", "trainings/material/soup/linux/basics/archiving-compression/group.rst", "trainings/material/soup/linux/basics/archiving-compression/gzip.rst", "trainings/material/soup/linux/basics/archiving-compression/overview.rst", "trainings/material/soup/linux/basics/archiving-compression/tar.rst", "trainings/material/soup/linux/basics/exercises/FH-SS2022-EXAM-01-G1.rst", "trainings/material/soup/linux/basics/exercises/FH-SS2022-EXAM-01-G2.rst", "trainings/material/soup/linux/basics/exercises/group.rst", "trainings/material/soup/linux/basics/group.rst", "trainings/material/soup/linux/basics/intro/demo-everything-is-a-file.rst", "trainings/material/soup/linux/basics/intro/environment.rst", "trainings/material/soup/linux/basics/intro/exercises/fh-questions.rst", "trainings/material/soup/linux/basics/intro/group.rst", "trainings/material/soup/linux/basics/intro/login.rst", "trainings/material/soup/linux/basics/intro/overview.rst", "trainings/material/soup/linux/basics/intro/process.rst", "trainings/material/soup/linux/basics/intro/process-tree.rst", "trainings/material/soup/linux/basics/intro/wsl.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/exercises.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/group.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/io-redirection.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/io-redirection-swap-stdout-stderr.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/pipes.rst", "trainings/material/soup/linux/basics/permissions/basics.rst", "trainings/material/soup/linux/basics/permissions/exercises/credentials.rst", "trainings/material/soup/linux/basics/permissions/exercises/fh-questions.rst", "trainings/material/soup/linux/basics/permissions/exercises/fh-questions-nocheat.rst", "trainings/material/soup/linux/basics/permissions/exercises/group.rst", "trainings/material/soup/linux/basics/permissions/exercises/private-directory.rst", "trainings/material/soup/linux/basics/permissions/exercises/private-directory-question.rst", "trainings/material/soup/linux/basics/permissions/exercises/public-directory.rst", "trainings/material/soup/linux/basics/permissions/exercises/public-directory-question.rst", "trainings/material/soup/linux/basics/permissions/exercises/shared-file.rst", "trainings/material/soup/linux/basics/permissions/group.rst", "trainings/material/soup/linux/basics/permissions/setuid.rst", "trainings/material/soup/linux/basics/permissions/setuid-livedemo.rst", "trainings/material/soup/linux/basics/permissions/sticky.rst", "trainings/material/soup/linux/basics/permissions/umask.rst", "trainings/material/soup/linux/basics/shell/commandline.rst", "trainings/material/soup/linux/basics/shell/configfiles.rst", "trainings/material/soup/linux/basics/shell/cp.rst", "trainings/material/soup/linux/basics/shell/cwd.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/copy-tree.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-copy-files.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-create-files.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-move-files.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/group.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/mkdir-p-rm-r.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/rm-rf.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/rm-tree.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/verify-hierarchy.rst", "trainings/material/soup/linux/basics/shell/exercises/fh-questions.rst", "trainings/material/soup/linux/basics/shell/exercises/group.rst", "trainings/material/soup/linux/basics/shell/exercises/ls/dev-types.rst", "trainings/material/soup/linux/basics/shell/exercises/ls/etc-passwd-size.rst", "trainings/material/soup/linux/basics/shell/exercises/ls/group.rst", "trainings/material/soup/linux/basics/shell/exercises/ls/home-permissions.rst", "trainings/material/soup/linux/basics/shell/file_dir_create_rm.rst", "trainings/material/soup/linux/basics/shell/group.rst", "trainings/material/soup/linux/basics/shell/links.rst", "trainings/material/soup/linux/basics/shell/ls.rst", "trainings/material/soup/linux/basics/shell/mv.rst", "trainings/material/soup/linux/basics/shell/paths.rst", "trainings/material/soup/linux/basics/text-tools/cat.rst", "trainings/material/soup/linux/basics/text-tools/cut.rst", "trainings/material/soup/linux/basics/text-tools/exercises.rst", "trainings/material/soup/linux/basics/text-tools/find.rst", "trainings/material/soup/linux/basics/text-tools/grep.rst", "trainings/material/soup/linux/basics/text-tools/group.rst", "trainings/material/soup/linux/basics/text-tools/head-tail.rst", "trainings/material/soup/linux/basics/text-tools/less.rst", "trainings/material/soup/linux/basics/text-tools/overview.rst", "trainings/material/soup/linux/drafts/group.rst", "trainings/material/soup/linux/drafts/yocto.rst", "trainings/material/soup/linux/group.rst", "trainings/material/soup/linux/hardware/brushless-motor/topic.rst", "trainings/material/soup/linux/hardware/can/10-intro.rst", "trainings/material/soup/linux/hardware/can/20-interfaces.rst", "trainings/material/soup/linux/hardware/can/30-programming.rst", "trainings/material/soup/linux/hardware/can/40-harware.rst", "trainings/material/soup/linux/hardware/can/group.rst", "trainings/material/soup/linux/hardware/group.rst", "trainings/material/soup/linux/hardware/i2c/topic.rst", "trainings/material/soup/linux/hardware/pwm/topic.rst", "trainings/material/soup/linux/hardware/w1/topic.rst", "trainings/material/soup/linux/ssh/basics.rst", "trainings/material/soup/linux/ssh/exercises/copy-file.rst", "trainings/material/soup/linux/ssh/exercises/copy-tree.rst", "trainings/material/soup/linux/ssh/exercises/group.rst", "trainings/material/soup/linux/ssh/exercises/pubkey.rst", "trainings/material/soup/linux/ssh/group.rst", "trainings/material/soup/linux/ssh/key-pair.rst", "trainings/material/soup/linux/ssh/links.rst", "trainings/material/soup/linux/ssh/portforwarding.rst", "trainings/material/soup/linux/ssh/scp.rst", "trainings/material/soup/linux/ssh/sshfs.rst", "trainings/material/soup/linux/sysprog/basics/errorhandling.rst", "trainings/material/soup/linux/sysprog/basics/group.rst", "trainings/material/soup/linux/sysprog/basics/syscalls.rst", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io.rst", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-file.rst", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-network.rst", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-timer.rst", "trainings/material/soup/linux/sysprog/blocking-io/group.rst", "trainings/material/soup/linux/sysprog/file-io/basics.rst", "trainings/material/soup/linux/sysprog/file-io/basics-exercise-copy.rst", "trainings/material/soup/linux/sysprog/file-io/basics-exercise-hole.rst", "trainings/material/soup/linux/sysprog/file-io/duplicate.rst", "trainings/material/soup/linux/sysprog/file-io/example-O_CREAT.rst", "trainings/material/soup/linux/sysprog/file-io/example-O_EXCL.rst", "trainings/material/soup/linux/sysprog/file-io/example-O_RDONLY.rst", "trainings/material/soup/linux/sysprog/file-io/example-O_WRONLY.rst", "trainings/material/soup/linux/sysprog/file-io/exercise-sensor-read.rst", "trainings/material/soup/linux/sysprog/file-io/group.rst", "trainings/material/soup/linux/sysprog/file-io/misc.rst", "trainings/material/soup/linux/sysprog/group.rst", "trainings/material/soup/linux/sysprog/intro-hw/get.rst", "trainings/material/soup/linux/sysprog/intro-hw/group.rst", "trainings/material/soup/linux/sysprog/intro-hw/sysfs-gpio.rst", "trainings/material/soup/linux/sysprog/intro-hw/watch.rst", "trainings/material/soup/linux/sysprog/posix-threads/010-introduction/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/020-lifecycle/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/030-exercise-pthcreate-race-condition/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/040-mutex/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/050-exercise-mutex/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/060-condition-variable/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/070-exercise-condition-variable/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/080-miscellaneous/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/090-last-warning/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/group.rst", "trainings/material/soup/linux/sysprog/posix-threads/locked-trylock.rst", "trainings/material/soup/linux/sysprog/process/commandline.rst", "trainings/material/soup/linux/sysprog/process/group.rst", "trainings/material/soup/linux/sysprog/process/tree.rst", "trainings/material/soup/linux/sysprog/scheduling/basics.rst", "trainings/material/soup/linux/sysprog/scheduling/group.rst", "trainings/material/soup/linux/sysprog/scheduling/processes-and-threads.rst", "trainings/material/soup/linux/sysprog/scheduling/questions.rst", "trainings/material/soup/linux/sysprog/scheduling/realtime.rst", "trainings/material/soup/linux/sysprog/scheduling/realtime-api.rst", "trainings/material/soup/linux/sysprog/scheduling/wakup-latency.rst", "trainings/material/soup/linux/sysprog/sysprog_events/code/index.rst", "trainings/material/soup/linux/sysprog/sysprog_events/screenplay.rst", "trainings/material/soup/linux/sysprog/sysprog_events/topic.rst", "trainings/material/soup/linux/sysprog/sysprog_ipc/code/index.rst", "trainings/material/soup/linux/sysprog/sysprog_ipc/screenplay.rst", "trainings/material/soup/linux/sysprog/sysprog_ipc/slides.rst", "trainings/material/soup/linux/sysprog/sysprog_ipc/topic.rst", "trainings/material/soup/linux/sysprog/sysprog_signals/code/index.rst", "trainings/material/soup/linux/sysprog/sysprog_signals/screenplay.rst", "trainings/material/soup/linux/sysprog/sysprog_signals/slides.rst", "trainings/material/soup/linux/sysprog/sysprog_signals/topic.rst", "trainings/material/soup/linux/toolchain/basics/topic.rst", "trainings/material/soup/linux/toolchain/cmake/cross.rst", "trainings/material/soup/linux/toolchain/cmake/local.rst", "trainings/material/soup/linux/toolchain/cross/basics.rst", "trainings/material/soup/linux/toolchain/cross/group.rst", "trainings/material/soup/linux/toolchain/exercises/cross-build.rst", "trainings/material/soup/linux/toolchain/exercises/fh-2022-questions.rst", "trainings/material/soup/linux/toolchain/exercises/group.rst", "trainings/material/soup/linux/toolchain/exercises/native-build.rst", "trainings/material/soup/linux/toolchain/exercises/raspberry-toolchain.rst", "trainings/material/soup/linux/toolchain/group.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/group.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/linaro.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-build-details.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-build-docker-fedora.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-setup.rst", "trainings/material/soup/linux/toolchain/separate-compilation/topic.rst", "trainings/material/soup/linux/toolchain/shared-libraries/topic.rst", "trainings/material/soup/linux/toolchain/static-library/topic.rst", "trainings/material/soup/python/advanced/closures/topic.rst", "trainings/material/soup/python/advanced/comprehensions/topic.rst", "trainings/material/soup/python/advanced/context-mgr/topic.rst", "trainings/material/soup/python/advanced/decorators/topic.rst", "trainings/material/soup/python/advanced/exceptions/topic.rst", "trainings/material/soup/python/advanced/exec/topic.rst", "trainings/material/soup/python/advanced/group.rst", "trainings/material/soup/python/advanced/iteration-generation/iteration-generation/topic.rst", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/fibonacci-generator.rst", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/iterator-protocol.rst", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/topic.rst", "trainings/material/soup/python/advanced/iteration-generation/topic.rst", "trainings/material/soup/python/advanced/modules.rst", "trainings/material/soup/python/advanced/multithreading/basics.rst", "trainings/material/soup/python/advanced/multithreading/group.rst", "trainings/material/soup/python/advanced/multithreading/mutex.rst", "trainings/material/soup/python/advanced/multithreading/questions.rst", "trainings/material/soup/python/advanced/oo/abc/topic.rst", "trainings/material/soup/python/advanced/oo/classes-and-dicts/topic.rst", "trainings/material/soup/python/advanced/oo/constructor/topic.rst", "trainings/material/soup/python/advanced/oo/group.rst", "trainings/material/soup/python/advanced/oo/inheritance/topic.rst", "trainings/material/soup/python/advanced/oo/methods/topic.rst", "trainings/material/soup/python/advanced/oo/namedtuple/topic.rst", "trainings/material/soup/python/advanced/oo/operator-overloading/topic.rst", "trainings/material/soup/python/advanced/oo/properties/topic.rst", "trainings/material/soup/python/advanced/oo/str-repr/topic.rst", "trainings/material/soup/python/advanced/starargs/topic.rst", "trainings/material/soup/python/basics/group.rst", "trainings/material/soup/python/basics/installation.rst", "trainings/material/soup/python/basics/python_0110_blahblah/topic.rst", "trainings/material/soup/python/basics/python_0120_helloworld/topic.rst", "trainings/material/soup/python/basics/python_0125_running/topic.rst", "trainings/material/soup/python/basics/python_0130_syntax_etc/topic.rst", "trainings/material/soup/python/basics/python_0139_commandline_argv/topic.rst", "trainings/material/soup/python/basics/python_0140_variables/topic.rst", "trainings/material/soup/python/basics/python_0150_datatypes_overview/topic.rst", "trainings/material/soup/python/basics/python_0150_datatypes_overview_compound/topic.rst", "trainings/material/soup/python/basics/python_0160_boolean/topic.rst", "trainings/material/soup/python/basics/python_0170_if/topic.rst", "trainings/material/soup/python/basics/python_0193_while/topic.rst", "trainings/material/soup/python/basics/python_0200_sequential_types/topic.rst", "trainings/material/soup/python/basics/python_0210_indexing_slicing/topic.rst", "trainings/material/soup/python/basics/python_0220_for/topic.rst", "trainings/material/soup/python/basics/python_0225_range/topic.rst", "trainings/material/soup/python/basics/python_0250_refs_flat_deep_copy/topic.rst", "trainings/material/soup/python/basics/python_0270_functions/screenplay-scoping.rst", "trainings/material/soup/python/basics/python_0270_functions/slideshow.rst", "trainings/material/soup/python/basics/python_0270_functions/topic.rst", "trainings/material/soup/python/basics/python_0300_strings/topic.rst", "trainings/material/soup/python/basics/python_0310_strings_formatting/topic.rst", "trainings/material/soup/python/basics/python_0320_strings_methods/topic.rst", "trainings/material/soup/python/basics/python_0400_lists/topic.rst", "trainings/material/soup/python/basics/python_0450_dictionaries/topic.rst", "trainings/material/soup/python/basics/python_0460_sets/topic.rst", "trainings/material/soup/python/basics/python_0500_files/topic.rst", "trainings/material/soup/python/basics/python_1000_function_objects/topic.rst", "trainings/material/soup/python/drafts/argparse/topic.rst", "trainings/material/soup/python/drafts/group.rst", "trainings/material/soup/python/drafts/matplotlib/topic.rst", "trainings/material/soup/python/drafts/setuptools/topic.rst", "trainings/material/soup/python/exercises/csv/csv-db.rst", "trainings/material/soup/python/exercises/csv/csv-module.rst", "trainings/material/soup/python/exercises/csv/group.rst", "trainings/material/soup/python/exercises/group.rst", "trainings/material/soup/python/exercises/herdt/boolean.rst", "trainings/material/soup/python/exercises/herdt/exercise_while_even_numbers.rst", "trainings/material/soup/python/exercises/herdt/greet.rst", "trainings/material/soup/python/exercises/herdt/group.rst", "trainings/material/soup/python/exercises/herdt/max_numbers.rst", "trainings/material/soup/python/exercises/herdt/swap.rst", "trainings/material/soup/python/exercises/herdt/username_password.rst", "trainings/material/soup/python/exercises/legacy/cmdline_digit.rst", "trainings/material/soup/python/exercises/legacy/dict_keyerror.rst", "trainings/material/soup/python/exercises/legacy/distill.rst", "trainings/material/soup/python/exercises/legacy/fibonacci-generator.rst", "trainings/material/soup/python/exercises/legacy/for_primeness.rst", "trainings/material/soup/python/exercises/legacy/group.rst", "trainings/material/soup/python/exercises/legacy/join_function.rst", "trainings/material/soup/python/exercises/legacy/max_numbers.rst", "trainings/material/soup/python/exercises/legacy/max_numbers_function.rst", "trainings/material/soup/python/exercises/legacy/mixed_list_executable.rst", "trainings/material/soup/python/exercises/legacy/mixed_list_interactive.rst", "trainings/material/soup/python/exercises/legacy/passwd.rst", "trainings/material/soup/python/exercises/legacy/primeness_function.rst", "trainings/material/soup/python/exercises/legacy/revert.rst", "trainings/material/soup/python/exercises/legacy/string-rightjustify.rst", "trainings/material/soup/python/exercises/legacy/uniq_function.rst", "trainings/material/soup/python/exercises/legacy/uniq_generator.rst", "trainings/material/soup/python/exercises/legacy/wc.rst", "trainings/material/soup/python/exercises/legacy/while_primeness.rst", "trainings/material/soup/python/exercises/sensors/group.rst", "trainings/material/soup/python/exercises/sensors/project-setup.rst", "trainings/material/soup/python/exercises/sensors/sensor-const.rst", "trainings/material/soup/python/exercises/userdb/csvdictreader.rst", "trainings/material/soup/python/exercises/userdb/csvdictreader-function.rst", "trainings/material/soup/python/exercises/userdb/csvreader.rst", "trainings/material/soup/python/exercises/userdb/csvreader-function.rst", "trainings/material/soup/python/exercises/userdb/group.rst", "trainings/material/soup/python/exercises/userdb/mqtt-publish-csv.rst", "trainings/material/soup/python/exercises/userdb/user-class-person.rst", "trainings/material/soup/python/exercises/userdb/user_json.rst", "trainings/material/soup/python/exercises/userdb/userdb_csv.rst", "trainings/material/soup/python/graph.rst", "trainings/material/soup/python/group.rst", "trainings/material/soup/python/link-collection.rst", "trainings/material/soup/python/misc/ai/group.rst", "trainings/material/soup/python/misc/ai/k-means.rst", "trainings/material/soup/python/misc/ai/linear-regression/code.rst", "trainings/material/soup/python/misc/ai/linear-regression/history_data.rst", "trainings/material/soup/python/misc/ai/linear-regression/linear_regression.ipynb", "trainings/material/soup/python/misc/ai/linear-regression/topic.rst", "trainings/material/soup/python/misc/ai/machine-learning-intro.rst", "trainings/material/soup/python/misc/csv/topic.rst", "trainings/material/soup/python/misc/db/dbapi2.rst", "trainings/material/soup/python/misc/db/group.rst", "trainings/material/soup/python/misc/db/postgres.rst", "trainings/material/soup/python/misc/db/sqlite3.rst", "trainings/material/soup/python/misc/encoding/topic.rst", "trainings/material/soup/python/misc/group.rst", "trainings/material/soup/python/misc/import.rst", "trainings/material/soup/python/misc/mqtt/topic.rst", "trainings/material/soup/python/misc/pandas/add_row.rst", "trainings/material/soup/python/misc/pandas/basics.rst", "trainings/material/soup/python/misc/pandas/filters.rst", "trainings/material/soup/python/misc/pandas/group.rst", "trainings/material/soup/python/misc/pandas/iloc.rst", "trainings/material/soup/python/misc/pandas/indexes.rst", "trainings/material/soup/python/misc/pandas/loc.rst", "trainings/material/soup/python/misc/pandas/mod_col.rst", "trainings/material/soup/python/misc/python_5550_xml_etree/topic.rst", "trainings/material/soup/python/misc/vscode.rst", "trainings/material/soup/python/swdev/group.rst", "trainings/material/soup/python/swdev/pip/screenplay.rst", "trainings/material/soup/python/swdev/pip/slides.rst", "trainings/material/soup/python/swdev/pip/topic.rst", "trainings/material/soup/python/swdev/pypi.rst", "trainings/material/soup/python/swdev/pytest/group.rst", "trainings/material/soup/python/swdev/pytest/intro.rst", "trainings/material/soup/python/swdev/unittest.rst", "trainings/material/soup/python/swdev/venv/screenplay.rst", "trainings/material/soup/python/swdev/venv/slides.rst", "trainings/material/soup/python/swdev/venv/topic.rst", "trainings/material/soup/unittest/group.rst", "trainings/material/soup/unittest/unittest_gtest_basics/code/index.rst", "trainings/material/soup/unittest/unittest_gtest_basics/screenplay.rst", "trainings/material/soup/unittest/unittest_gtest_basics/topic.rst", "trainings/material/soup/unittest/unittest_gtest_cmake/screenplay.rst", "trainings/material/soup/unittest/unittest_gtest_cmake/topic.rst", "trainings/material/soup/unittest/unittest_gtest_fixture/code/index.rst", "trainings/material/soup/unittest/unittest_gtest_fixture/screenplay.rst", "trainings/material/soup/unittest/unittest_gtest_fixture/topic.rst", "trainings/org.rst", "trainings/repertoire/_hidden/kettner-lfs-2013-09-16.rst", "trainings/repertoire/bash.rst", "trainings/repertoire/c-like/c.rst", "trainings/repertoire/c-like/c-advanced.rst", "trainings/repertoire/c-like/cxx.rst", "trainings/repertoire/c-like/cxx11.rst", "trainings/repertoire/c-like/index.rst", "trainings/repertoire/cmake.rst", "trainings/repertoire/design-patterns/design-patterns.rst", "trainings/repertoire/embedded.rst", "trainings/repertoire/kernel-programming-basics.rst", "trainings/repertoire/linux-basics.rst", "trainings/repertoire/make.rst", "trainings/repertoire/python/advanced.rst", "trainings/repertoire/python/basics.rst", "trainings/repertoire/python/herdt.rst", "trainings/repertoire/raspi-hands-on.rst", "trainings/repertoire/svn.rst", "trainings/repertoire/sysprog/basics.rst", "trainings/repertoire/sysprog/fortgeschrittenes.rst", "trainings/repertoire/sysprog/index.rst", "trainings/repertoire/sysprog/multithreading.rst", "trainings/repertoire/sysprog/network.rst", "trainings/repertoire/unittests.rst"], "titles": ["Kontakt", "Curriculum Vitae", "\u00dcber Mich", "Projekte", "Skills", "Angebot: In-House Schulungen", "Course Material", "Einleitung", "Python Basics (2021-xx-xx - 2021-yy-yy)", "Programmierung Grundlagen (Jupyter Notebook)", "Details", "Course List", "Templates for Course Descriptions", "About This Site", "OpenTraining", "Draft Topics", "Miscellaneous", "S5 Integration", "S5 Slide Tests", "Level 1 Heading", "Screencasts", "Topics to be Written", "Netidee F\u00f6rderantrag", "Netidee F\u00f6rderantrag: OpenTraining", "Video Screenplay", "Use Case: Custom Training, Subtract Known", "Use Case: Calculate Minimum Training Duration", "Use Cases", "Use Case: Use Training Material From Other Sites", "Use Case: Menu to Choose From", "Use Case: Slide Show Material as Plain-Text Files", "Sending A V4L Camera Device Output Over SSH", "Emoji Codes (<code class=\"docutils literal notranslate\"><span class=\"pre\">sphinxemoji</span></code>)", "Recipes", "<code class=\"docutils literal notranslate\"><span class=\"pre\">isoamsa.txt</span></code>: Added Mathematical Symbols: Arrows", "<code class=\"docutils literal notranslate\"><span class=\"pre\">isoamsr.txt</span></code>: Added Mathematical Symbols: Relations", "<code class=\"docutils literal notranslate\"><span class=\"pre\">isonum.txt</span></code>: Added Mathematical Symbols: Binary Operators", "Layout Test Page", "<code class=\"docutils literal notranslate\"><span class=\"pre\">mmlalias.txt</span></code>: MathML aliases for entities from other sets", "reStructuredText Cheat Sheet", "Sphinxish", "Seminar on \u201cClean Code\u201d (2022-04-13)", "Live Hacking Before (Formal) Unit Testing", "Clean Code: Messages From The Book", "Live Hacking: Switch To <code class=\"docutils literal notranslate\"><span class=\"pre\">googletest</span></code>", "Is Software A Craft? Software Is A Craft!", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB::find()</span></code> Crashes If User Not Found", "Bugs", "Existing Files Are Overwritten", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB::read()</span></code>: What If Done Twice?", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB</span></code>: Alternative Output Format - CSV", "Features", "Search By Other Indexes", "Backlog: What Needs To Change, Or We Will All Die", "<code class=\"docutils literal notranslate\"><span class=\"pre\">BackingStore</span></code> Has Too Many Responsibilities \u27f6 Interface", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB</span></code> Has Too Many Responsibilities \u27f6 <code class=\"docutils literal notranslate\"><span class=\"pre\">BackingStore</span></code>", "Refactoring", "Load From BackingStore in Constructor", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB::{read,write}()</span></code>: <code class=\"docutils literal notranslate\"><span class=\"pre\">bool</span></code>, Really?", "GLT 2023 Submission: Pointless Blinking With Python, <code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> (and a Raspberry Pi of Course)", "GLT 2024 Submission: Pointless Blinking: Evolution", "Pointless Blinking With Python, <code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> (and a Raspberry Pi of Course)", "Installation Notes", "Submission: Pointless Blinking With Python, <code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> (and a Raspberry Pi of Course)", "Screenplay: Pointless Blinking With Python, <code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> (and a Raspberry Pi of Course)", "Hochk\u00f6nig", "Blog", "Sphinx", "C++", "C++: Building with CMake", "C++: Interfaces", "C++: OO Basics", "C++: Unit Testing", "Graph", "Embedded Computing 1", "Embedded Computing 2", "EX: Race Conditions", "EX: Avoiding Race Condition", "Git Introduction", "Embedded Computing 2019", "Linux", "Introduction to Linux and Unix", "Linux Hardware Device Management", "EX: Averaging Sensor", "EX: Averaging Sensor (parallel)", "EX: LED Temperature Display", "EX: Temperature Sensors", "GPIO", "Multithreading", "Avoiding Race Conditions: Semaphore/Mutex", "Communication: Waiting for Something", "Python Basics", "EX: Averaging Sensor, Display", "EX: Temperature Sensors", "Simple Web Programming", "Sensors Web Pages", "Python", "Embedded Computing 2020", "SS2022", "2022-03-08", "2022-03-10", "2022-03-10 (Homework until 2022-03-21)", "2022-03-21", "2022-03-22, 2022-03-24 (KU)", "2022-03-28", "2022-04-01", "SS2022: Logs", "WS2022", "FH Joanneum (Embedded Computing): WS2022/2023 (Questions About Code)", "FH Joanneum (Embedded Computing): WS2022/2023 (Yes/No Questions)", "Lab Exam 2023-01-17", "SS2023: Exam 2023-06-30 (Handout)", "SS2023: Exam 2023-06-30 (Solved)", "WS2023/2024: Exam 2024-02-02 (Sample)", "Working with Git In Our <code class=\"docutils literal notranslate\"><span class=\"pre\">FH-ECE21</span></code> Project", "Embedded Computing 2021", "SS2023", "(DONE) Boiling Pot (The Beginning)", "Boiling Pot: Basic Integration", "Boiling Pot: Display, And Status Reporting", "Boiling Pot: Full Integration (Display And IoT)", "(DONE) Data Logger", "Data Logger: CSV Sink", "Data Logger: Integration", "Data Logger: MQTT Sink", "Display Interface/Infrastructure", "WS2023/24: Group Project - Tasks", "<code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> Switch", "Python MQTT Subscriber", "Temperature Display: LED Via A PWM Controller", "(DONE) Sensor Interface", "(DONE) Onewire Sensor", "(DONE) Switch Interface", "SysFS GPIO Switch", "WS2023/24", "Embedded Computing (FH Joanneum Graz)", "Git Notes", "Work in Progress", "Packaging this Site on PyPI", "Audio Chip Bringup", "Get Debian 10 Kernel Config", "Finish: Debian Kernel Package etc.", "Yocto Kernel Bringup on Customer Hardware", "I2S Audio for a Kontron SMARC Module", "Dirty Upgrade Path", "Wait for Customer Hardware", "Extract Kernel from Intel Yocto BSP", "Python Training Improvements", "Creating Screencasts", "SEO", "Stacks (Hanging)", "Miscellaneous To Do", "Learning The Web", "Beagleboard: How to Repair NAND (also known as 40W)", "Porting to Linux (There\u2019s Always A Better Way)", "Saving Solid State Disk Life (Gentoo)", "\u201cWhy <code class=\"docutils literal notranslate\"><span class=\"pre\">ps</span></code> Sucks\u201d or \u201cCounting Memory Consumption\u201d", "Patching and Building the Fedora Kernel", "Adding a Custom Domain to a Github Pages Project Site", "Using Microsoft Teams on Linux", "Deploying Sphinx Generated Documentation to Github Pages", "Using BigBlueButton for Online Training", "Traunstein via Zierlersteig", "Grintovec (via Plan\u0161arsko Jezero, \u010ce\u0161ka Ko\u010da)", "How to Brick a \u20ac1399 Dell XPS 13", "Building A Cross Toolchain For The Raspberry Pi, Using <code class=\"docutils literal notranslate\"><span class=\"pre\">crosstool-ng</span></code>", "Posts", "Linux und Open Source", "Richtlinien zur Ver\u00f6ffentlichung von Kursmaterial", "Exercises", "Courses: Overview", "Qualivision, Z\u00fcrich, 1.10.2013", "Kursnotizen: Linux Embedded 2015-11-30", "Live Hacking", "Python Individualtraining (5 Tage, beginnend 28.10.2019)", "Goals of this Training", "Random Live Hacking", "Python (12.11.2019 - 14.11.2019 in Graz)", "Proposal", "IPC in Linux (10.1.2020 in Graz)", "\u00dcbung: handgestrickter String, um die Fallen von C++ lustvoll zu erleiden", "C++ f\u00fcr Embedded C Programmierer (30.3.2020 - 3.4.2020 Baden W\u00fcrttemberg)", "Installing <code class=\"docutils literal notranslate\"><span class=\"pre\">googletest</span></code> By Hand", "Software Setup, Build", "Argh: Using This Site With Visual Studio Code", "Code", "Python Grundlagen (13.5.2020 - 14.5.2020 bei einer Firma in Graz)", "Python Schulung 18. und 19.5.2020", "Code", "Python Individualtraining (18.5.2020 - 19.5.2020)", "Python Advanced (7.9.2020 - 10.9.2020)", "Python Basics (28.9.2020 - 30.9.2020)", "Iterables", "Python Basic and Advanced (19.10.2020 - 22.10.2020)", "Linux on Raspberry Pi", "Python Basics (23.11.2020 - 25.11.2020)", "Linux Basics (30.11.2020 - 3.12.2020)", "6 Grundlegende Sprachelemente", "Programmierung Grundlagen (13. und 14.1.2021)", "Programmierung Grundlagen (Jupyter Notebook)", "Python Basics (22.2.2021 - 24.2.2021)", "Linux Kernel Driver Development Basics (14.12.2020)", "Python Advanced", "2021-03-15", "Hallo Jupyter Notebook", "Python Basic and Advanced (22.3.2021 - 25.3.2021)", "Linux Basics, Shell Scripting (2021-03-29)", "Einleitung", "Programmierung Grundlagen (12. und 13.4.2021)", "Programmierung Grundlagen (Jupyter Notebook)", "Syntax etc.", "Python Grundlagen (2021-05-03 - 2021-05-05)", "Python Grundlagen (Jupyter Notebook)", "Das <code class=\"docutils literal notranslate\"><span class=\"pre\">with</span></code> Statement", "Python Advanced (2021-05-25 - 2021-05-27)", "Programmieren mit C (2021-06-14 - 2021-06-18)", "The C++ Programming Language (2021-07-12 - 2021-07-16)", "Programmierung Grundlagen, anhand von Python (2. und 3.8.2021)", "Datenstrukturen", "Compound Datatypes", "Read a Cleaned-Up SAP Export", "Python Grundlagen (2021-08-23 - 2021-08-25)", "Jupyter Notebook", "Initial Terminology", "Python Basics (2021-08-31 - 2021-09-01)", "Python Grundlagen (Jupyter Notebook)", "2021-11-17", "Python Basics (2021-11-17 - 2021-11-19)", "Python Grundlagen (Jupyter Notebook)", "Notebook", "Python Advanced (2021-12-01 - 2021-12-03)", "Python Grundlagen (Jupyter Notebook)", "C/C++ Programming (2021-12-06 - 2021-12-10, 2022-01-24 - 2022-02-04)", "Programmierung Grundlagen, anhand von Python (2022-01-17 - 2022-01-10)", "2022-01-17", "Programmierung Grundlagen (Jupyter Notebook)", "Datatypes", "Python Basics (2022-02-23 - 2022-02-25)", "Jupyter Notebook", "Wiederholung", "Python Advanced (2022-03-15 - 2022-03-17, 2022-03-31)", "Jupyter Notebook", "Hello World", "Python (2022-03-23, 2022-03-30, 2022-04-19 - 2022-03-21)", "Jupyter Notebook", "Programmierung Grundlagen, anhand von Python (2022-04-05 - 2022-04-08)", "BlahBlah", "Programmierung Grundlagen (Jupyter Notebook)", "Python Basics (2022-04-25 - 2022-04-27)", "BlahBlah", "Python Grundlagen (Jupyter Notebook)", "Python (2022-05-02 - 2022-05-05)", "Hello Jupyter Notebook", "Python Grundlagen (Jupyter Notebook)", "Python Advanced (2022-05-16 - 2022-05-18)", "Assert", "Python Grundlagen (Jupyter Notebook)", "Vorbesprechung 2022-05-11", "C++: A New Language Starting In 2011", "C++: A New Language Starting In 2011", "Linux Basics (2022-10-03 - 2022-10-05)", "C++: A New Language Starting In 2011 (2022-10-11 - 2022-10-13)", "Design- and Architectural Patterns With C++ (2022-10-24 - 2022-10-26)", "Python: Tour-De-Force (2022-11-07 - 2022-11-10, 2022-12-01)", "Python (2022-10-17)", "Python Grundlagen (Jupyter Notebook)", "Python (2022-11-16 - 2022-11-18)", "Python (2022-11-16 - 2022-11-18)", "Python Grundlagen (Jupyter Notebook)", "Linux Basics (2023-01-23 - 2023-01-26)", "Embedded Linux Systems Programming (2023-02-13 - 2023-02-17)", "Whetting Your Appetite (Jupyter Notebook)", "Whetting Your Appetite (Livehacking Demo)", "Python For SAP Developers (2023-03-13 - 2023-03-15)", "2023-03-13", "Python For SAP Developers (Jupyter Notebook)", "Original Agenda: Python For SAP Developers (2023-03-13 - 2023-03-15)", "Hacking About On A SAP Test Dataset", "Some Usecases On A Test Dataset From SAP", "C++ For Embedded Developers (2023-03-20 - 2023-03-23)", "Clean Code Development With Python (2023-03-28 - 2023-03-29)", "C++ For Embedded Developers (2023-04-18 - 2023-04-20)", "Agenda: Python Advanced (2023-04-24 - 2023-04-26)", "Python Advanced (2023-04-24 - 2023-04-26)", "Jupyter Notebook: Python Advanced (2023-04-24 - 2023-04-26)", "Jupyter Notebook (Structure): Python Advanced (2023-04-24 - 2023-04-26)", "Agenda: Python Basics (2023-05-15 - 2023-05-17)", "Python Basics (2023-05-15 - 2023-05-17)", "Python Basics (2023-05-15 - 2023-05-17)", "Python Grundlagen (Jupyter Notebook)", "Agenda: Linux Basics (2023-05-23 - 2023-05-25)", "Linux Basics (2023-05-23 - 2023-05-25)", "Agenda: Python Basics (2023-06-20 - 2023-06-22)", "Python Basics (2023-06-20 - 2023-06-22)", "Python Basics (2023-06-20 - 2023-06-22)", "Python Basics (Jupyter Notebook)", "Agenda: CMake (2023-07-03)", "CMake: An Introduction (2023-07-18)", "Python Advanced (2023-09-25 - 2023-09-27)", "Python Advanced (2023-09-25 - 2023-09-27)", "Python Advanced, Jupyter Notebook (2023-09-25 - 2023-09-27)", "Python Advanced (2023-10-09 - 2023-10-11)", "Python Advanced (2023-10-09 - 2023-10-09)", "Python Advanced, Jupyter Notebook (2023-09-25 - 2023-09-27)", "Agenda: Python Advanced (2023-10-24 - 2023-10-26)", "Python Advanced (2023-10-24 - 2023-10-26)", "Jupyter Notebook: Python Advanced", "Jupyter Notebook (Structure): Python Advanced (2023-10-24 - 2023-10-26)", "Agenda: Python Advanced (2023-11-22 - 2023-11-24)", "Python Advanced (2023-11-22 - 2023-22-24)", "Jupyter Notebook: Python Advanced (2023-11-22 - 2023-11-24)", "Jupyter Notebook (Structure): Python Advanced (2023-11-22 - 2023-11-24)", "Agenda: CMake (2023-11-27)", "CMake: An Introduction (2023-11-27)", "Agenda: Python Basics (2023-11-29 - 2023-12-01)", "Python Basics (2023-11-29 - 2023-12-01)", "Python Basics (2023-11-29 - 2023-12-01)", "Python Basics (Jupyter Notebook)", "Agenda: C++: Advanced Topics", "C++: Advanced Topics (2023-12-04 - 2023-12-06)", "Agenda: Python Basics (2023-12-18 - 2023-12-20)", "Python Basics (2023-12-18 - 2023-12-20)", "Python Basics (2023-12-18 - 2023-12-20)", "Python Basics (2023-12-18 - 2023-12-20)", "C++ For Embedded Developers (Beginning of 2023)", "Python/SAP", "Agenda: Python Basics (Beginning Of 2024)", "Screenplay Checker", "GPIO: Blinklicht", "GPIO: Blinklicht Interface", "GPIO: Object Oriented Blinklicht", "GPIO: Blinklicht Unittests", "ECE19: Exercises and Custom Topics", "Reading a File", "2021-05-20 (G2)", "2021-05-21", "Tuple Unpacking", "Basics", "An Example", "Cloud Computer, SSH Login", "Formalit\u00e4ten", "Embedded Computing 1 (ECE 19)", "Daily Log", "Embedded Computing 1 (Deutsch)", "Embedded Computing 1 (English)", "Plan for Summer 2021", "2021-10-07", "2021-10-12 (Bringing Newcomers Up-to-Date)", "2021-10-28", "2021-11-15", "2021-11-29", "2021-12-1{4,5}", "2022-01-10", "2022-01-12", "2022-02-15", "Agenda/Log", "Embedded Computing 2 (ECE 19)", "Exam Material Overview", "Embedded Computing 1+2, ECE 19", "Details", "Bisher Gehaltene", "Training Material: Overview and Download", "Installation", "Introduction", "Hello World", "Variables and Arithmetic", "Exercise: A Better Fahrenheit Table", "<code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code> Loops", "Exercise: Fahrenheit Table Using <code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code>", "Symbolic Constants", "Exercise: Fahrenheit Table Using Macros", "Character I/O", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">wc</span></code> For The Poor", "Arrays", "Exercise: Character Histogram", "Functions", "Exercise: Forward Declaration", "Character Arrays", "Exercise: Read Line Into String from <code class=\"docutils literal notranslate\"><span class=\"pre\">stdin</span></code>", "Lifetime of Variables", "Introduction", "Type System", "Variable Names", "Data Types, Sizes", "Constants", "Variable Definitions", "Arithmetic Operators", "Relational and Logical Operators", "Type Conversions", "Increment, Decrement", "Exercise: Copy and Reduce String", "Bit-Operators", "Assignment with Calculation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">?:</span></code> - Conditional Expression", "Precedence, Associativity", "Types, Operators, Expressions", "Statements and Blocks", "<code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code> - <code class=\"docutils literal notranslate\"><span class=\"pre\">else</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">else</span></code> - <code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">switch</span></code>", "Loops: <code class=\"docutils literal notranslate\"><span class=\"pre\">while</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code>", "Loops: <code class=\"docutils literal notranslate\"><span class=\"pre\">do</span> <span class=\"pre\">-</span> <span class=\"pre\">while</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">break</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">continue</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">goto</span></code> and Labels", "Program Flow", "Basics", "Extern/Global Variables", "Header Files", "Static Variables", "C Preprocessor: Basics", "C Preprocessor: More", "Functions and Program Structure", "Pointers and Addresses", "Pointers as Function Parameters", "Exercise: Function That Swaps Two Variables", "Pointers and Arrays", "Commandline Arguments", "Pointers and Arrays", "<code class=\"docutils literal notranslate\"><span class=\"pre\">struct</span></code>: Basics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">struct</span></code>: Functions", "<code class=\"docutils literal notranslate\"><span class=\"pre\">typedef</span></code>: Type Alias", "Structures", "Dynamic Memory", "Singly Linked List", "Memory", "Volatile", "Compiler Intrinsics", "Alignment", "Advanced Language Features", "Sanity and Readabilty", "Know Your Integers", "Discrete Values - <code class=\"docutils literal notranslate\"><span class=\"pre\">enum</span></code>", "Visibility - <code class=\"docutils literal notranslate\"><span class=\"pre\">static</span></code>", "Correctness - <code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code>", "Struct Initialization", "Explict Type Safety", "<code class=\"docutils literal notranslate\"><span class=\"pre\">valgrind</span></code>", "Program Sanity", "Optimization", "Optimizations: Compute Bound Code", "Optimizations: Memory Optimizations", "Performance", "Introduction", "GNU Profiler - <code class=\"docutils literal notranslate\"><span class=\"pre\">gprof</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">callgrind</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">oprofile</span></code>", "Profiling", "The C Programming Language", "Messages From The Book", "What\u2019s There? What Have We Accomplished?", "Is Software A Craft? Software Is A Craft! \u27f6 <em>Clean Code</em>", "A Typical Project (Livehacking Screenplay: My Own Bookkeeping Effort)", "Basics: Boilerplate, And Executables", "\u201cConfigured\u201d Header Files", "C++, Debug/Release, CMake \u201cProgramming\u201d, Rants", "External Dependencies", "CMake: An Introduction", "Installation (\u201cDeployment\u201d)", "Libraries, And <em>Dependencies</em>", "Optional Code, Approach 1: Optional <code class=\"docutils literal notranslate\"><span class=\"pre\">blacklist</span></code>, C Macro  (Global Flags)", "Optional Code, Approach 2: Pushing Optionality Down In Module <em>Interface</em>", "Optional Code: Problem Definition, <code class=\"docutils literal notranslate\"><span class=\"pre\">OPTION()</span></code>", "Shared Libraries (Preview)", "Structure - Subdirectories, Dependencies, and Include Paths", "Targets, Properties, And More", "Running Tests", "C++ Code", "Abstract Factory", "Adapter", "Command", "SocialDB Source Code", "Composite", "Decorator", "Design Patterns With C++", "Case Study/Livehacking: Heating Control (Reading Sensors)", "Interpreter", "Observer", "OO Design Principles", "Proxy", "Exercise Foundation: <code class=\"docutils literal notranslate\"><span class=\"pre\">Sensor</span></code> Hierarchy", "Singleton", "UML Short Introduction", "Exercise: Abstract Factory", "Exercise: Adapter", "Exercise: Command", "Exercise: Composite", "Exercise: Decorator", "Exercises: Design Patterns", "Exercise: Interpreter Combined With Adapter (And A Proxy)", "Exercise: Arithmetic Expression Interpreter", "Exercise: Adapter", "Exercise: Proxy (Remote Thermometer)", "Exercise: Proxy (Rounding Thermometer)", "Exercise: Singleton (Flexible)", "Exercise: Singleton (Flexible <em>And</em> Strict)", "Exercise: Singleton (Inflexible)", "Solution: Abstract Factory", "Solution: Adapter", "Solution: Command", "Solution: Composite", "Solution: Decorator", "Solutions", "Solution: Interpreter Combined With Adapter (And A Proxy)", "Solution: Arithmetic Expression Interpreter", "Solution: Observer", "Solution: Proxy (Remote Thermometer)", "Solution: Proxy (Rounding Thermometer)", "Solution: Singleton (Flexible)", "Solution: Singleton (Flexible <em>And</em> Strict)", "Solution: Singleton (Inflexible)", "Exercise (FH): Introducing a Sensor Class", "Exercise (FH): Extract Measurement Loop Into Function", "Exercise (FH): Replace Sensor", "Exercise (FH): Write A Sensor Class: <code class=\"docutils literal notranslate\"><span class=\"pre\">RandomSensor</span></code>", "FH Sensor OO (First Try)", "C++ Exercises", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">LEDStripeDisplay_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">Hysteresis_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">AveragingSensor_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">ConstantSensor_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">MockSensor_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">RandomSensor_nopoly</span></code> (Non-Polymorphic)", "Exercise: Mocking Switch (Non-Polymorphic)", "OO Basics, Interfaces (Shapes)", "Working On Exercise Projects", "Exercise: Sensor Interface", "Exercise: OneWire Sensor Factory", "Exercise: OneWire Sensor Class", "Exercise: Algorithms", "Exercise: Generic Filter", "Exercise: Filter Elements Greater Than 10", "Exercise: Filter Odd Elements", "C++ Exercises: Standard Template Library", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::map&lt;&gt;</span></code>", "Exercises: Sensor Repository (<code class=\"docutils literal notranslate\"><span class=\"pre\">std::map</span></code>)", "Insert - Not Overwriting Existing Elements", "Insert - Sunny Case", "Lookup - Not Found", "Lookup - Sunny Case", "Memory Leaks?", "Remove - Not Found", "Remove - Sunny Case", "<code class=\"docutils literal notranslate\"><span class=\"pre\">.size()</span></code> Is <code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code>", "Exercise: Uniquify A Sequence", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector&lt;&gt;</span></code>", "C++: TODO List", "Code: C++: Class Templates", "Screenplay: C++: Class Templates", "C++: Class Templates", "Code: C++: Dynamic Memory", "Screenplay: C++: Dynamic Memory", "C++: Dynamic Memory", "Code: C++: Global Objects Initialization", "Screenplay: C++: Global Objects Initialization", "C++: Global Objects Initialization", "Code: C++: Inheritance, Interfaces, <code class=\"docutils literal notranslate\"><span class=\"pre\">virtual</span></code>", "Screenplay: C++: Inheritance, Interfaces, <code class=\"docutils literal notranslate\"><span class=\"pre\">virtual</span></code>", "C++: Inheritance, Interfaces, <code class=\"docutils literal notranslate\"><span class=\"pre\">virtual</span></code>", "Code: C++: Ownership/RAII", "Screenplay: C++: Ownership/RAII", "C++: Ownership/RAII", "Code: C++: STL Containers (Intro)", "Screenplay: C++: STL Containers (Intro)", "C++: STL Containers (Intro)", "Code: C++: Templates vs. Interfaces", "Screenplay: C++: Templates vs. Interfaces", "C++: Templates vs. Interfaces", "C++: Miscellaneous Live-Hacking", "Introduction", "Object Oriented Programming In Good Ol\u2019 C", "Copy Constructor, Assignment Operator", "Classes and Objects", "Custom Constructor", "Default Constructor", "More Constructors, Destructors", "Data Encapsulation", "Constructors: Member Initialization", "Object Copy (And Resource Management): There Be Dragons", "Overloading", "Methods", "<code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">this</span></code>", "References", "<code class=\"docutils literal notranslate\"><span class=\"pre\">static</span></code> Methods", "<code class=\"docutils literal notranslate\"><span class=\"pre\">static</span></code> Member Variables", "Operator Overloading", "Exercise (FH): <code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">cuboid</span></code>", "Exercise (FH): <code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">point</span></code>", "Exercise (FH): <code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">point3d</span></code>", "Exercise (FH): <code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">rectangle</span></code>", "Functions and Methods", "Basics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">try</span></code> - <code class=\"docutils literal notranslate\"><span class=\"pre\">catch</span></code>", "Exceptions", "Function Templates", "Class Templates", "C++ Template Basics", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::copy&lt;&gt;()</span></code> From <code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;algorithm&gt;</span></code>", "Screenplay: Pointer Arithmetic, And Algorithms", "Screenplay: Pointer Arithmetic Basics", "Screenplay: Pointer Difference", "Screenplay: Out Of Range Errors", "Standard Template Library: Basics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector</span></code> (And <code class=\"docutils literal notranslate\"><span class=\"pre\">std::copy()</span></code>)", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">std::copy()</span></code>", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector</span></code> Basics", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector</span></code>, And Pointer Arithmetics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">binary_search&lt;&gt;</span></code>: On Sorted Sequence", "<code class=\"docutils literal notranslate\"><span class=\"pre\">copy&lt;&gt;</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find&lt;&gt;</span></code>: Sequential Search, by Equality", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find_if&lt;&gt;</span></code>: Sequential Search, Customizable", "<code class=\"docutils literal notranslate\"><span class=\"pre\">for_each&lt;&gt;</span></code>", "Algorithms", "<code class=\"docutils literal notranslate\"><span class=\"pre\">lower_bound&lt;&gt;</span></code>: On Sorted Sequence", "<code class=\"docutils literal notranslate\"><span class=\"pre\">reverse&lt;&gt;</span></code>: Reversing In-Place", "<code class=\"docutils literal notranslate\"><span class=\"pre\">reverse_copy&lt;&gt;</span></code>: Copying <em>and</em> Reversing", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sort&lt;&gt;</span></code>", "Sequential Containers", "Sequential Containers", "<code class=\"docutils literal notranslate\"><span class=\"pre\">list&lt;&gt;</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">vector&lt;&gt;</span></code>", "Associative Containers", "Associative Containers", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::map</span></code>", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::map</span></code> Initialization And Inserting", "Screenplay: Inserting Elements", "Screenplay: Removing (Erasing) Elements", "Screenplay: Searching", "<code class=\"docutils literal notranslate\"><span class=\"pre\">multimap&lt;&gt;</span></code>", "Allocator Basics", "Allocators", "STL: Exercises", "Exercise: Reverse a String", "Exercise: Reverse A String", "Solution: Reverse a String", "Standard Template Library", "Dynamic Memory (To Be Done)", "Dynamic Memory Allocation, Resource Management", "Inheritance Basics", "Destructors And Inheritance", "Inheritance And Object Oriented Design", "C++ \u201cInterfaces\u201d", "<em>Polymorphic</em> Usage Of Objects", "Inheritance: <code class=\"docutils literal notranslate\"><span class=\"pre\">private</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">protected</span></code> (Implementation Inheritance)", "Virtual Destructors", "Virtual Methods", "The Standard Library: Miscellaneous Topics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::string</span></code>", "Exercise: Paint the American Flag Onto Standard Output", "FH/Moodle Quiz: C++", "Exercises: Miscellaneous", "Exercise: Sum of Integers Coming From <code class=\"docutils literal notranslate\"><span class=\"pre\">cin</span></code>", "Exercises: User Database", "Exercise: Access Methods for Members", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code> Members", "Exercise: Use <code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code>", "Exercise: Default Constructor (was: Arrays of Objects)", "Exercise: Simple Method (Users Age By <code class=\"docutils literal notranslate\"><span class=\"pre\">n</span></code> Years)", "Exercise: Transform <code class=\"docutils literal notranslate\"><span class=\"pre\">struct</span> <span class=\"pre\">User</span></code> Into A Class", "Exercise: Insert a User into UserDB", "Exercise: Search a User By Lastname (<code class=\"docutils literal notranslate\"><span class=\"pre\">std::find_if</span></code>)", "Exercise: Search, \u201cUser Not Found\u201d Exception", "Exercise: Search a User By Lastname", "Exercise: Use std::vector in UserDB", "C++", "Introduction", "History, Background", "A Live-Hacked Tour Around The New C++", "Strongly Typed <code class=\"docutils literal notranslate\"><span class=\"pre\">enum</span></code>", "Brace Initialization (Uniform Initialization)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::initializer_list</span></code>: Brace Initialization, Implementor\u2019s View", "Brace Initialization: Introduction", "Brace Initialization: A Mess", "Delegating Constructor", "<code class=\"docutils literal notranslate\"><span class=\"pre\">constexpr</span></code>", "Afterword, Further Reading", "Move Semantics, Rvalue References", "<code class=\"docutils literal notranslate\"><span class=\"pre\">SmartPtr</span></code> With Move Semantics", "Implementing Move Semantics (<code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">String</span></code>, Live Hacked)", "Using Move Semantics In Own Code", "Lvalues, Rvalues, And Moving", "Miscellaneous", "Duck Typing (Err, <code class=\"docutils literal notranslate\"><span class=\"pre\">auto</span></code>) Without A Duck", "Concepts", "Concepts: Overview", "<code class=\"docutils literal notranslate\"><span class=\"pre\">toolcase-1-conceptless.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">toolcase-2-conceptless-error.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">toolcase-3-concept-integral.cpp</span></code>", "Concepts: Links", "Writing Your Own Concepts", "<code class=\"docutils literal notranslate\"><span class=\"pre\">example-1-good-old-func.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">example-2-need-template.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">example-4-concept-has-size.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">example-5-concept-index-ret-double.cpp</span></code>", "Coroutines", "Coroutines: An Overview", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fibo-generator.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fibonacci.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">generator.h</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">generator-hello.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">simplest.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">suspend.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">suspend-iter.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">suspend-next.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">=</span> <span class=\"pre\">default</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">=</span> <span class=\"pre\">delete</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">final</span></code>", "New Language Features", "Lambda", "Lambda", "Lambda: More Capturing", "Live Hacking: Handwritten Functors (Too Much Boilerplate)", "Live Hacking: Handwritten Functors, And Capturing By Reference (Pitfalls)", "Modules", "<code class=\"docutils literal notranslate\"><span class=\"pre\">override</span></code>", "Range Based <code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code> Loops: Introduction", "Case Study: Range Based <code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code> On <code class=\"docutils literal notranslate\"><span class=\"pre\">std::map</span></code>", "Ranges And Views: Good Or Bad?", "Ranges", "Ranges: Overview", "Ranges And Views: Links", "Tuple Unpacking (Err, Structured Binding)", "Smart Pointers: Closing Words", "Smart Pointers (<code class=\"docutils literal notranslate\"><span class=\"pre\">std::unique_ptr</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">std::shared_ptr</span></code>)", "Introduction", "(Trying To) Handwrite A Smart Pointer Class in C++ Before C++11", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::shared_ptr</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::unique_ptr</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::weak_ptr</span></code>", "Perfect Forwarding", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::bind</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::function</span></code>", "Functions, Functions", "Threads Introduction", "Threads in C++", "Race Conditions", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::atomic</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::mutex</span></code> And Friends", "Scoped Locking", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::condition_variable</span></code> (Live Hacking Multithreaded Queue)", "Multithreading", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::promise</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">std::future</span></code> (And Some <code class=\"docutils literal notranslate\"><span class=\"pre\">std::chrono</span></code>) (Some Live Hacking)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::chrono</span></code>", "New-Style Union: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::variant</span></code>", "Miscellaneous", "CRTP", "std::vector&lt;&gt;: Allocators (<em>Very</em> Incomplete)", "Classic Virtual", "Embedded Problems? Code Bloat? Type Erasure? Solutions?", "Non-Virtual, But Related", "Type Erasure (Static vs. Dynamic Polymorphism), CRTP", "Unrelated (Duck-Typed)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::variant</span></code> (Automatic Virtual Dispatch Using Template Method)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::variant</span></code> (Manual Virtual Dispatch, Using <code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code>)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::variant</span></code> (Manual Virtual Dispatch, Using <code class=\"docutils literal notranslate\"><span class=\"pre\">std::visit</span></code>)", "Why Replace <code class=\"docutils literal notranslate\"><span class=\"pre\">virtual</span></code>?", "Drafts", "Exercise: Bag Of Items, By Copy", "Exercise: Bag Of Items, By Shared Reference", "Exercise: Bag Of Items, By Unique Reference", "Exercises", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::filesystem</span></code>", "The New C++ (11-\u2026)", "Generated Topic Graph", "Topics", "Modern Character Devices (Screenplay)", "Modern Character Devices (Slideshow)", "Modern Character Devices", "File Operations on Character Devices (Screenplay)", "File Operations on Character Devices (Slideshow)", "File Operations on Character Devices", "Coding: First Functionality (Slideshow)", "Coding: First Functionality", "Character Device Basics (Livehacking Screenplay)", "Character Device Basics (Slideshow)", "Character Device Basics", "Coding: Multiple Devices (Slideshow)", "Coding: Multiple Devices", "Coding: Refactoring (Screenplay)", "Coding: Refactoring (Slideshow)", "Coding: Refactoring", "DMA (Slideshow)", "DMA", "Building a Fedora Kernel (Screenplay)", "Fedora: Building the Kernel", "Fedora: Building External Kernel Modules (Screenplay)", "Fedora: Building External Kernel Modules", "Linux Kernel Driver Development", "Module Loading, Hello World (Slideshow)", "Module Loading, Hello World", "Coding: Raspi GPIO Interrupts (Slideshow)", "Coding: Raspi GPIO Interrupts", "Interrupts (Slideshow)", "Interrupts", "IO Memory (Slideshow)", "IO Memory", "Dynamic Memory: <code class=\"docutils literal notranslate\"><span class=\"pre\">kmalloc()</span></code> (Slideshow)", "Dynamic Memory: <code class=\"docutils literal notranslate\"><span class=\"pre\">kmalloc()</span></code>", "Doubly Linked Lists (Slideshow)", "Doubly Linked Lists", "Coding: Fix Race Condition (Mutex) (Slideshow)", "Coding: Fix Race Condition (Mutex)", "Mutex (and RT Mutex) (Slideshow)", "Mutex (and RT Mutex)", "Network Devices (Slideshow)", "Network Devices", "PCI (Slideshow)", "PCI", "Process vs.Atomic Context (Slideshow)", "Process vs.Atomic Context", "Rasperry Pi: Kernel Build", "Raspberry Pi: Building the Kernel", "Sample Code Maintenance", "Coding: Fix <em>Sleep While Atomic</em> (Slideshow)", "Coding: Fix <em>Sleep While Atomic</em>", "Spinlock (vs. Mutex) (Slideshow)", "Spinlock (vs. Mutex)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">dup()</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">fork()</span></code>, and Reference Counting (Stub)", "Coding: Timed Event (Slideshow)", "Coding: Timed Event", "Timer Management (Slideshow)", "Timer Management", "To Do List", "Accessing Userspace Memory (Screenplay)", "Accessing Userspace Memory (Slideshow)", "Accessing Userspace Memory", "Waiting for Something (Screenplay)", "Waiting for Something (Slideshow)", "Waiting for Something", "Workqueue (Screenplay)", "Workqueue (Slideshow)", "Workqueue", "Exercises: Archiving And Compression", "Archiving and Compression", "<code class=\"docutils literal notranslate\"><span class=\"pre\">gzip</span></code>", "Archiving and Compression", "<code class=\"docutils literal notranslate\"><span class=\"pre\">tar</span></code>", "Exam (ECE/SS2022/G1): Do A Lot With Files And Directories", "Exam (ECE/SS2022/G2): Do A Lot With Files And Directories", "Exercises/Exams: Linux Basics", "Linux Basics", "Everything Is A File (Live Demo)", "Environment (Variables)", "FH/Moodle Quiz: Linux Basics", "Introduction: Concepts and Terminology", "Login? What Is That?", "Overview", "Processes, Scheduling, Address Spaces", "Process Hierarchy (Parent, Child Process)", "Windows Subsystem for Linux (WSL)", "Exercises: IO-Redirection, Pipes", "I/O Redirection And Pipes", "I/O Redirection", "I/O Redirection: Swap <code class=\"docutils literal notranslate\"><span class=\"pre\">stdout</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">stderr</span></code>", "Pipes", "Permissions: Mode, User and Group Ownership", "Exercise: Determine Your User Credentials", "FH/Moodle Quiz: Permissions", "FH/Moodle Quiz: Permissions", "Exercises: File System Permissions", "Exercise: Create Private Directory", "Question: Private Directory", "Exercise: Create Public Directory", "Question: Public Directory", "Exercise: Create Group-Shared File", "File System Permissions", "SetUID Programs: <code class=\"docutils literal notranslate\"><span class=\"pre\">passwd</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">sudo</span></code>, \u2026", "SetUID: Live Demo", "Ugly Hack: Sticky Bit", "Default Permissions: <code class=\"docutils literal notranslate\"><span class=\"pre\">umask</span></code>", "Commandline", "Shell Configuration File: <code class=\"docutils literal notranslate\"><span class=\"pre\">~/.bashrc</span></code>", "Copying: <code class=\"docutils literal notranslate\"><span class=\"pre\">cp</span></code>", "Current Working Directory", "Exercise: Copy Directory Tree", "Exercise: Copy Files", "Exercise: Create Files (I/O Redirection)", "Exercise: Move Files", "Exercises: Create/Copy/Move/Remove", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">mkdir</span></code>", "Exercise: Funny Stuff", "Exercise: Remove Directory Tree", "Exercise: Verify, Repeat", "FH/Moodle Quiz: Shell", "The Shell - Exercises", "Exercise: File Types in <code class=\"docutils literal notranslate\"><span class=\"pre\">/dev</span></code>", "Exercise: Size of <code class=\"docutils literal notranslate\"><span class=\"pre\">/etc/passwd</span></code>", "Exercises: The <code class=\"docutils literal notranslate\"><span class=\"pre\">ls</span></code> Command", "Exercise: Permissions of Home Directory", "Creating And Removing Files and Directories", "The Shell (Bash - \u201cBourne Again Shell\u201d)", "Symbolic Links, Hard Links", "Directory Listings: The <code class=\"docutils literal notranslate\"><span class=\"pre\">ls</span></code> Command", "Moving and Renaming: <code class=\"docutils literal notranslate\"><span class=\"pre\">mv</span></code>", "Absolute and Relative Paths", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cat</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cut</span></code>", "Exercises: Inspecting Text Files", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">grep</span></code>", "Tools: Inspecting Text Files", "<code class=\"docutils literal notranslate\"><span class=\"pre\">head</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">tail</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">less</span></code>", "Overview", "Drafts", "Yocto", "Linux", "Controlling a Brushless Motor With Raspberry Pi", "CAN/Linux Basics", "CAN Interfaces", "Programming", "Hardware, Kernel", "CAN Bus With Linux And Python", "Linux Hardware Interfaces", "Linux and I2C (using LM73 Temperature Sensor as Slave)", "PWM Userspace Interface (using PCA9685)", "Linux and OneWire (using DS18B20 Temperature Sensor as Slave)", "SSH: Basics", "Exercise: Copy a File To Remote Machine, And Verify", "Exercise: Copy a Tree To Remote Machine (And Adjust Permissions)", "Exercises: SSH", "Exercise: Create SSH Key Pair", "SSH: Secure Shell", "SSH: Public Key Authentication", "SSH: Links", "SSH: Port Forwarding", "SSH: Secure Copy (<code class=\"docutils literal notranslate\"><span class=\"pre\">scp</span></code>)", "SSH File System (<code class=\"docutils literal notranslate\"><span class=\"pre\">sshfs</span></code>)", "Error Handling", "Linux Systems Programming: Basics", "System Calls vs. Library Functions", "Blocking I/O: What is That? (\u201cEverything is a file\u201d)", "Blocking I/O (On A File): What is That?", "Blocking I/O: On A Network Socket", "Blocking I/O: On A Timer? WTF?", "Blocking I/O: What Is That?", "File I/O: Basics", "Exercise: Copy A File", "Exercise: Create File With Hole", "Duplicating (Whats Going On?)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">O_CREAT</span></code>: Creating A File", "<code class=\"docutils literal notranslate\"><span class=\"pre\">O_EXCL</span></code>: Creating A File, But Failing If It Already Exists", "<code class=\"docutils literal notranslate\"><span class=\"pre\">O_RDONLY</span></code>: Reading a File", "<code class=\"docutils literal notranslate\"><span class=\"pre\">O_WRONLY</span></code>: Writing A File (Which Must Exist)", "Exercise: Read Temperature From Onewire Sensor", "File I/O", "Miscellaneous", "Linux Systems Programming", "Get Value Of GPIO", "Introductory Live Hacking, Hardware-Wise (<code class=\"docutils literal notranslate\"><span class=\"pre\">sysfs</span></code> GPIO)", "Intro: <code class=\"docutils literal notranslate\"><span class=\"pre\">sysfs</span></code> GPIO", "Interrupts In Userspace", "Basics", "Thread Life Cycle", "Thread Creation, Race Condition", "Synchronization", "Mutex: Solve Load/Modify/Store Conflict", "Communication: Condition Variable", "Condition Variable: Message Queue", "Miscellaneous", "Last Warning", "POSIX Threads", "Trylock/islocked", "Process: Arguments, Exit Status", "Processes", "The Process Tree (And Environment, And <code class=\"docutils literal notranslate\"><span class=\"pre\">procfs</span></code>)", "Scheduling (and Multitasking)", "Scheduling", "Tasks? Processes? Threads?", "Scheduling: Exam Questions", "Realtime", "Realtime API", "Wakeup Latency, CPU Frequency (Gotcha)", "Code: Sysprog: Event Driven Programming", "Screenplay: Sysprog: POSIX IPC", "Sysprog: Events", "Code: Sysprog: POSIX IPC", "Screenplay: Sysprog: POSIX IPC", "Slides: Sysprog: POSIX IPC", "Sysprog: POSIX IPC", "Code: Sysprog: Signals", "Screenplay: Sysprog: Signals", "Slides: Sysprog: Signals", "Sysprog: Signals", "Toolchain: Basics", "CMake: Cross Build", "CMake: Local Build", "Cross Development", "Cross Development", "Exercise: Build Software Package (Cross, Raspberry)", "FH/Moodle Quiz: Toolchain", "Exercises: Toolchain", "Exercise: Build Software Package (Native)", "Exercise: Install And Check Raspberry Toolchain", "Toolchain, And Cross Development", "Case Study: Raspberry Toolchain", "Linaro Toolchain For The Pi (Defunct)", "Building A Cross Toolchain For The Raspberry Pi, Using <code class=\"docutils literal notranslate\"><span class=\"pre\">crosstool-ng</span></code>", "Building A Toolchain <em>On</em> Fedora <em>For</em> Ubuntu 18.04 (WSL)", "Cross Toolchain Setup", "Zooming In: Separate Compilation, and Linking <em>Statically</em>", "Shared Libraries (Shared Objects)", "Object Code Archives/Static Libraries", "Closures", "Comprehensions (List, Dictionary, Set)", "Context Managers: The <code class=\"docutils literal notranslate\"><span class=\"pre\">with</span></code> Statement", "Decorators", "Exception Handling", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">exec()</span></code> Function", "Python: More Language Features", "Iteration, Comprehensions, and Generators", "Implementing A Fibonacci Number Generator", "The Iterator Protocol", "Iteration, Generators, And <code class=\"docutils literal notranslate\"><span class=\"pre\">yield</span></code>", "Iterating Intelligently: Generators, and the Iterator Protocol", "Modules and Packages", "Multithreading (Python)", "Multithreading", "Race Conditions, and Mutexes", "Multithreading: Exam Questions", "Abstract Base Classes (<code class=\"docutils literal notranslate\"><span class=\"pre\">abc</span></code>), And Duck Typing", "Classes And Dictionaries", "Constructor", "Object Oriented Programming", "Inheritance", "Methods", "<code class=\"docutils literal notranslate\"><span class=\"pre\">collections.namedtuple</span></code>", "Operator Overloading", "Properties", "<code class=\"docutils literal notranslate\"><span class=\"pre\">str()</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">repr()</span></code>", "Positional and Keyword Arguments", "Python: The Language Fundamentals", "Python Installation", "Blahblah", "Hello World", "Running Python Programs", "Syntax etc.", "Commandline Arguments (<code class=\"docutils literal notranslate\"><span class=\"pre\">sys.argv</span></code>)", "Variables", "Datatypes", "Compound Datatypes", "Boolean", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code> Statement", "<code class=\"docutils literal notranslate\"><span class=\"pre\">while</span></code> Loops", "Sequential Datatypes", "Indexing and Slicing", "<code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code> Loops", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">range</span></code> Function", "References, (Im)mutability", "Functions: Global and Local Scope (Livehacking Screenplay)", "Functions (Slideshow)", "Functions", "More About Strings", "String Formatting", "Miscellaneous String Methods", "More About Lists", "More About Dictionaries", "More About Sets", "File I/O", "Function Objects", "Commandline Parsing with <code class=\"docutils literal notranslate\"><span class=\"pre\">argparse</span></code>", "Python: Draft Topics", "Matplotlib", "Package Installation (<code class=\"docutils literal notranslate\"><span class=\"pre\">setuptools</span></code>)", "Exercise: Read CSV File, Write into Sqlite3 Database", "Exercise: Read CSV File", "CSV and Databases", "Exercises", "Exercise: Boolean Expressions", "Exercise: Even Numbers (<code class=\"docutils literal notranslate\"><span class=\"pre\">while</span></code>)", "Exercise: Greeting, Depending on Time of Day", "Exercises (External)", "Exercise: Determine Maximum of Two Numbers", "Exercise: Swap Two Variables", "Exercise: Username/Password Check", "Exercise: Digit to English Word", "Exercise: Dictionary: Errors?", "Exercise: Eliminate Empty/Comment-Only Lines", "Exercise: Generator: Fibonacci", "Exercise: Primeness (<code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code>)", "Exercises (Legacy)", "Exercise: Functions: <code class=\"docutils literal notranslate\"><span class=\"pre\">join()</span></code>", "Exercise: Determine Maximum of Two Numbers", "Exercise: Determine Maximum of Two Numbers (Function)", "Exercise: Mixed List (Executable Program)", "Exercise: Mixed List (Interactive Interpreter)", "Exercise: Parsing <code class=\"docutils literal notranslate\"><span class=\"pre\">/etc/passwd</span></code>", "Exercise: Primeness (Function)", "Exercise: Reverting Lines of a File", "Exercise: String (Right-Justify)", "Exercise: Function: <code class=\"docutils literal notranslate\"><span class=\"pre\">uniq()</span></code>", "Exercise: Generator: <code class=\"docutils literal notranslate\"><span class=\"pre\">uniq()</span></code>", "Exercise: Counting Lines, Words, Characters", "Exercise: Primeness (<code class=\"docutils literal notranslate\"><span class=\"pre\">while</span></code>)", "Sensors, And Data Acquisition (Exercise Series)", "Project Setup", "Exercise: Basic \u201cSensor\u201d", "Exercise: Read CSV File (<code class=\"docutils literal notranslate\"><span class=\"pre\">csv.dictreader</span></code>)", "Exercise: Refactoring - Extract CSV Reading Into Function (<code class=\"docutils literal notranslate\"><span class=\"pre\">csv.dictreader</span></code>)", "Exercise: Read CSV File (<code class=\"docutils literal notranslate\"><span class=\"pre\">csv.reader</span></code>)", "Exercise: Refactoring - Extract CSV Reading Into Function (<code class=\"docutils literal notranslate\"><span class=\"pre\">csv.reader</span></code>)", "User Database (Exercise Series)", "Exercise: MQTT: Publish User Records", "Exercise: Away From Raw Dictionaries", "Exercise: Convert User Record To JSON And Back", "Exercise: Refactoring - Extract Both CSV Formats Into Module", "Python: All Material, Interrelated", "Python Programming: From Absolute Beginner to Advanced Productivity", "Python Links", "Machine Learning, Artificial Intelligence", "K-Means", "Linear Regression: Running Code (<em>no Notebook!</em>)", "Weather History Dataset", "Linear Regression: Jupyter Notebook", "Linear Regression", "Machine Learning: Concepts and Terminology", "CSV Files", "DBAPI 2", "Databases", "DBAPI 2: PostgreSQL", "DBAPI 2: <code class=\"docutils literal notranslate\"><span class=\"pre\">sqlite3</span></code>", "Encoding", "Python: Miscellaneous Topics", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">import</span></code> Statement (incomplete)", "MQTT", "Pandas: Adding Rows", "Pandas: Basics (<code class=\"docutils literal notranslate\"><span class=\"pre\">DataFrame</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">Series</span></code>)", "Pandas: Filters", "Pandas", "Pandas: Selecting Rows (And Columns) With <code class=\"docutils literal notranslate\"><span class=\"pre\">iloc[]</span></code>", "Pandas: Indexes", "Pandas: Selecting Rows (And Columns) With <code class=\"docutils literal notranslate\"><span class=\"pre\">loc[]</span></code>", "Pandas: Adding/Modifying Columns", "XML: ElementTree (<code class=\"docutils literal notranslate\"><span class=\"pre\">etree</span></code>)", "Visual Studio Code for Python Programming", "Python: Project/Package Management", "Python Package Index (Livehacking Screenplay)", "Python Package Index (Slideshow)", "Python Package Index", "Packaging, PyPI Upload (Link Collection)", "PyTest", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pytest</span></code> Introduction, By Example", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">unittest</span></code> Module", "Virtual Environments (Livehacking Screenplay)", "Virtual Environments (Slideshow)", "Virtual Environments", "Unit Testing With <code class=\"docutils literal notranslate\"><span class=\"pre\">googletest</span></code>", "Code: Unittest: GTest Basics", "Screenplay: Unittest: GTest Basics", "Unittest: GTest Basics", "Screenplay: Unittest: GTest and CMake", "Unittest: GTest and CMake", "Code: Unittest: GTest Fixtures", "Screenplay: Unittest: GTest Fixtures", "Unittest: GTest Fixtures", "Organisatorisches: Buchung, Kursablauf", "Linux from Scratch, 16.9.2013, M\u00fcnchen", "Shell Scripting/Bourne Again Shell (Bash)", "C: Einf\u00fchrung", "C f\u00fcr Fortgeschrittene", "C++: Einf\u00fchrung und \u00dcberblick", "An Introduction to Modern C++, In Three Days", "C and C++ Programming", "CMake", "Design Patterns For C++ Developers", "Embedded Software Development: Hardware, Realtime, and Memory Management", "Linux Kernel Driver Development", "Linux Basics: Eine Einf\u00fchrung Anhand von Beispielen", "GNU Make: Die Mutter aller Build Tools", "Advanced Python", "Basic Python", "Herdt", "Eine Woche mit dem Raspberry Pi", "Subversion (SVN)", "Linux Systems Programming: Introduction", "Linux Systems Programming: Virtual Memory, IPC, Shared Libraries", "Linux Systems Programming", "Linux Systems Programming: Multithreading", "Linux Systems Programming: Network Programming", "Unittesting and Test Driven Development"], "terms": {"di": [0, 23, 168, 171, 239, 451, 1097, 1099, 1103, 1105], "j\u00f6rg": [0, 23, 172, 206, 214, 218, 233, 236, 239, 249, 252, 267, 288, 294, 306, 309, 310, 316, 322, 333, 334, 336, 338, 403, 477, 1008, 1046, 1070, 1097, 1098, 1099, 1100, 1103, 1104, 1105], "faschingbau": [0, 12, 23, 37, 50, 59, 60, 63, 136, 153, 160, 161, 169, 187, 190, 191, 193, 194, 195, 196, 206, 213, 218, 219, 226, 229, 234, 236, 239, 242, 246, 249, 252, 255, 267, 274, 284, 288, 294, 299, 306, 309, 310, 316, 322, 333, 334, 336, 339, 342, 347, 403, 434, 451, 456, 469, 476, 477, 510, 526, 582, 628, 657, 658, 659, 660, 661, 662, 679, 837, 838, 845, 847, 852, 866, 882, 895, 901, 926, 963, 1005, 1008, 1009, 1021, 1022, 1024, 1025, 1026, 1028, 1029, 1031, 1037, 1059, 1063, 1086, 1097, 1098, 1099, 1100, 1103, 1104, 1105, 1107, 1116, 1122, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1135, 1155, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179], "offic": [0, 32, 159, 175], "co": [0, 12, 32, 37, 136, 150, 161, 190, 191, 193, 194, 195, 196, 257, 274, 278, 342, 347, 449, 456, 675, 1009, 1031, 1107, 1122, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1135, 1153, 1155, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179], "43": [0, 7, 157, 164, 176, 187, 197, 202, 204, 207, 210, 213, 218, 219, 223, 226, 229, 234, 236, 242, 246, 249, 252, 255, 264, 267, 271, 274, 284, 288, 294, 306, 310, 316, 322, 334, 336, 337, 426, 439, 451, 610, 680, 730, 758, 892, 901, 914, 916, 955, 1018], "0": [0, 5, 7, 21, 23, 32, 62, 64, 108, 111, 112, 113, 114, 121, 125, 129, 133, 138, 140, 150, 153, 155, 156, 157, 159, 165, 169, 173, 174, 175, 176, 177, 187, 190, 192, 194, 197, 202, 204, 205, 206, 207, 210, 213, 214, 215, 218, 219, 223, 226, 227, 229, 232, 234, 236, 239, 242, 245, 246, 249, 252, 254, 255, 257, 259, 264, 267, 270, 271, 272, 274, 278, 282, 283, 284, 288, 294, 304, 306, 310, 316, 322, 328, 334, 335, 336, 337, 338, 339, 342, 364, 365, 367, 369, 371, 373, 374, 375, 377, 384, 385, 387, 388, 389, 397, 400, 402, 403, 409, 410, 412, 415, 430, 431, 432, 433, 435, 436, 439, 440, 443, 445, 449, 451, 452, 455, 459, 460, 462, 465, 468, 469, 474, 476, 479, 481, 488, 489, 491, 493, 494, 495, 496, 498, 499, 500, 503, 504, 507, 508, 509, 513, 516, 517, 521, 523, 524, 525, 526, 527, 535, 541, 542, 550, 553, 559, 562, 569, 570, 571, 573, 574, 577, 578, 579, 580, 582, 584, 585, 586, 587, 588, 589, 592, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 610, 611, 614, 615, 616, 620, 624, 625, 626, 627, 628, 632, 634, 638, 639, 641, 642, 644, 645, 647, 649, 651, 656, 657, 658, 659, 660, 661, 662, 663, 667, 671, 672, 675, 678, 679, 680, 682, 684, 685, 686, 687, 689, 690, 691, 692, 693, 695, 696, 697, 699, 700, 701, 702, 703, 704, 705, 709, 711, 712, 714, 716, 717, 719, 721, 725, 726, 728, 729, 730, 731, 736, 739, 741, 743, 747, 749, 751, 753, 757, 761, 765, 768, 769, 773, 776, 788, 790, 800, 823, 824, 826, 841, 845, 847, 852, 855, 866, 867, 870, 892, 894, 895, 896, 901, 907, 910, 914, 915, 916, 925, 927, 930, 932, 933, 934, 936, 937, 939, 940, 941, 942, 943, 946, 948, 950, 951, 957, 965, 966, 968, 970, 971, 972, 974, 977, 978, 981, 982, 984, 985, 987, 996, 999, 1000, 1002, 1004, 1006, 1007, 1010, 1012, 1016, 1018, 1020, 1033, 1036, 1037, 1038, 1039, 1043, 1045, 1047, 1050, 1052, 1053, 1054, 1058, 1060, 1062, 1063, 1065, 1068, 1069, 1070, 1075, 1077, 1086, 1096, 1103, 1105, 1111, 1112, 1113, 1120, 1121, 1124, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1136, 1141, 1143, 1148, 1153], "664": [0, 229, 855], "5783814": 0, "gpg": 0, "kei": [0, 9, 32, 42, 98, 102, 103, 109, 116, 149, 151, 153, 165, 173, 182, 187, 192, 194, 195, 197, 202, 204, 206, 209, 210, 211, 213, 218, 219, 221, 223, 224, 226, 227, 229, 234, 236, 237, 239, 242, 246, 249, 251, 252, 256, 260, 263, 264, 267, 269, 270, 274, 284, 287, 288, 290, 291, 293, 294, 306, 310, 316, 321, 323, 336, 339, 342, 347, 375, 423, 623, 625, 628, 667, 716, 763, 837, 838, 845, 902, 906, 918, 919, 920, 922, 927, 1008, 1012, 1021, 1039, 1040, 1056, 1065, 1075, 1076, 1098, 1100, 1108, 1116, 1129, 1130, 1136, 1161, 1167], "prankergass": [0, 213, 234, 882], "33": [0, 7, 151, 164, 176, 187, 192, 197, 202, 204, 207, 210, 213, 218, 219, 223, 226, 229, 234, 236, 239, 242, 246, 249, 255, 264, 267, 271, 274, 278, 284, 288, 294, 306, 310, 316, 322, 336, 337, 338, 451, 472, 841, 882, 984, 1112, 1113], "8020": [0, 213, 229, 234, 272, 451, 837, 838, 876, 882], "graz": [0, 1, 3, 23, 59, 60, 63, 137, 195, 213, 272, 305, 308, 326, 359, 451, 837, 838, 876, 882, 1107], "uid": [0, 234, 239, 242, 310, 342, 347, 761, 837, 838, 845, 855, 927, 942, 998, 1086], "vat": [0, 198, 1171], "atu63522469": 0, "write": [0, 13, 16, 27, 29, 37, 43, 48, 53, 54, 55, 56, 57, 59, 63, 64, 67, 71, 79, 98, 117, 121, 122, 124, 125, 127, 129, 133, 134, 154, 155, 156, 165, 170, 174, 187, 190, 191, 193, 194, 195, 206, 211, 213, 214, 215, 216, 221, 223, 224, 227, 230, 232, 234, 240, 242, 251, 254, 261, 263, 270, 280, 287, 293, 305, 318, 328, 331, 333, 342, 344, 346, 348, 353, 369, 372, 373, 378, 390, 392, 414, 425, 429, 435, 436, 439, 449, 451, 474, 477, 489, 491, 494, 505, 514, 515, 526, 527, 529, 534, 545, 551, 556, 562, 567, 569, 570, 573, 583, 585, 632, 639, 648, 651, 653, 667, 672, 683, 695, 707, 716, 722, 731, 745, 751, 757, 761, 762, 763, 769, 771, 781, 783, 790, 794, 810, 826, 837, 838, 841, 847, 852, 853, 855, 856, 857, 858, 864, 866, 868, 871, 889, 901, 903, 906, 910, 914, 915, 916, 923, 930, 932, 933, 934, 937, 939, 940, 941, 942, 944, 945, 946, 947, 948, 950, 951, 954, 958, 964, 968, 977, 978, 981, 982, 986, 989, 992, 1010, 1021, 1026, 1027, 1031, 1054, 1055, 1060, 1065, 1066, 1067, 1069, 1072, 1073, 1074, 1075, 1077, 1078, 1081, 1082, 1084, 1086, 1088, 1089, 1090, 1092, 1093, 1097, 1099, 1102, 1106, 1108, 1121, 1132, 1141, 1142, 1143, 1161, 1162, 1174], "review": [0, 155, 178, 189, 283, 366], "http": [0, 3, 4, 8, 13, 20, 23, 32, 37, 39, 44, 59, 60, 62, 63, 86, 107, 114, 116, 128, 138, 140, 150, 158, 159, 160, 161, 165, 169, 171, 173, 181, 182, 183, 184, 190, 191, 194, 195, 203, 208, 214, 216, 217, 223, 229, 230, 232, 239, 242, 246, 254, 259, 261, 270, 273, 279, 280, 281, 283, 287, 293, 297, 298, 301, 305, 307, 309, 313, 315, 319, 321, 341, 342, 347, 362, 510, 524, 545, 587, 647, 720, 724, 729, 746, 750, 766, 781, 783, 787, 810, 811, 909, 911, 914, 950, 996, 998, 1053, 1063, 1119, 1121, 1136, 1137], "g": [0, 32, 48, 64, 98, 116, 129, 134, 157, 161, 165, 169, 174, 175, 177, 187, 202, 206, 215, 219, 223, 226, 229, 234, 236, 239, 242, 246, 264, 270, 278, 294, 319, 364, 384, 388, 391, 394, 399, 405, 406, 407, 409, 412, 427, 431, 439, 443, 444, 451, 452, 454, 457, 463, 464, 477, 481, 489, 510, 523, 526, 569, 573, 574, 603, 623, 641, 642, 671, 675, 678, 680, 689, 709, 730, 738, 742, 747, 761, 769, 788, 810, 829, 848, 855, 870, 892, 899, 902, 909, 927, 936, 946, 966, 968, 970, 981, 982, 984, 985, 986, 987, 998, 1003, 1005, 1007, 1015, 1027, 1029, 1030, 1048, 1049, 1053, 1054, 1117, 1121, 1132, 1143, 1148, 1164], "page": [0, 33, 39, 62, 73, 75, 79, 107, 116, 134, 149, 150, 151, 153, 154, 156, 157, 161, 166, 186, 191, 194, 215, 240, 270, 296, 312, 349, 373, 374, 377, 422, 433, 473, 510, 763, 769, 788, 794, 796, 808, 834, 837, 838, 854, 903, 907, 916, 927, 937, 940, 968, 1115], "r": [0, 7, 13, 31, 32, 38, 43, 62, 157, 159, 160, 164, 165, 173, 175, 176, 177, 186, 187, 190, 192, 193, 197, 202, 204, 207, 210, 213, 215, 219, 220, 223, 226, 229, 232, 234, 236, 239, 242, 246, 249, 252, 254, 255, 264, 267, 271, 272, 274, 284, 288, 294, 306, 310, 316, 319, 322, 334, 337, 342, 351, 363, 384, 409, 439, 451, 458, 472, 491, 492, 521, 525, 589, 616, 719, 727, 761, 774, 783, 788, 806, 810, 811, 841, 847, 852, 855, 866, 869, 870, 872, 892, 899, 907, 914, 915, 916, 918, 919, 927, 938, 941, 942, 950, 984, 985, 986, 996, 998, 999, 1006, 1027, 1032, 1035, 1041, 1052, 1058, 1063, 1095, 1121, 1143, 1179], "ctb02zug3crheb0": 0, "geboren": [1, 23], "am": [1, 3, 7, 17, 32, 37, 59, 63, 66, 108, 136, 154, 155, 156, 157, 159, 160, 161, 162, 163, 173, 186, 198, 207, 243, 247, 274, 316, 580, 717, 810, 849, 898, 903, 916, 925, 927, 942, 1052, 1155, 1156, 1158, 1171, 1174, 1178], "19": [1, 7, 23, 116, 164, 166, 175, 176, 177, 186, 192, 195, 197, 202, 204, 206, 207, 210, 213, 218, 219, 223, 226, 229, 230, 234, 236, 239, 242, 246, 249, 252, 255, 264, 267, 271, 274, 278, 284, 288, 294, 299, 306, 310, 316, 322, 335, 336, 337, 339, 347, 350, 359, 427, 451, 458, 727, 761, 870, 892, 916, 987, 996, 1028, 1034, 1097, 1098, 1099, 1100, 1103, 1104, 1105, 1107, 1112, 1113, 1117, 1125, 1136, 1141, 1143], "6": [1, 7, 32, 62, 64, 110, 114, 155, 157, 165, 169, 171, 174, 175, 176, 177, 187, 192, 194, 199, 202, 204, 205, 207, 210, 213, 214, 215, 217, 220, 222, 223, 226, 227, 229, 234, 236, 239, 242, 246, 249, 253, 255, 264, 267, 271, 274, 278, 284, 288, 294, 302, 306, 310, 316, 322, 334, 335, 337, 338, 342, 366, 367, 389, 426, 432, 443, 488, 489, 528, 529, 530, 531, 543, 562, 569, 571, 574, 577, 578, 581, 583, 586, 587, 588, 589, 607, 608, 609, 610, 616, 647, 648, 684, 730, 743, 761, 866, 889, 892, 896, 901, 907, 914, 915, 916, 930, 938, 951, 984, 996, 998, 1001, 1006, 1007, 1010, 1016, 1020, 1039, 1040, 1043, 1045, 1047, 1054, 1063, 1069, 1086, 1093, 1097, 1098, 1099, 1100, 1103, 1104, 1105, 1112, 1113, 1117, 1121, 1136, 1141, 1142, 1143, 1148, 1172], "1966": [1, 23, 195, 229, 239, 249, 252, 1097, 1098, 1099, 1100, 1103, 1104, 1105, 1117], "diplom": [1, 23], "au": [1, 5, 8, 23, 32, 162, 163, 171, 172, 173, 177, 187, 198, 208, 210, 217, 233, 236, 242, 243, 245, 257, 294, 310, 337, 342, 343, 360, 1156, 1158, 1159, 1160, 1165, 1171, 1174], "technisch": [1, 23, 360, 1173], "mathematik": [1, 23], "an": [1, 3, 5, 13, 17, 21, 23, 28, 31, 38, 40, 43, 45, 46, 48, 54, 55, 57, 58, 59, 60, 63, 70, 74, 75, 79, 83, 84, 86, 93, 108, 109, 111, 112, 116, 121, 124, 129, 132, 133, 134, 142, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 181, 184, 186, 187, 190, 192, 193, 194, 197, 205, 206, 210, 211, 213, 214, 215, 216, 218, 221, 223, 226, 227, 230, 231, 232, 234, 237, 239, 240, 242, 246, 252, 254, 255, 259, 261, 263, 270, 273, 276, 278, 279, 280, 281, 283, 287, 288, 298, 301, 305, 309, 316, 318, 328, 329, 353, 359, 361, 365, 367, 371, 374, 375, 388, 397, 405, 409, 412, 415, 416, 427, 430, 431, 432, 433, 435, 438, 445, 449, 451, 455, 458, 464, 467, 468, 469, 472, 473, 477, 478, 479, 488, 489, 491, 492, 493, 494, 510, 512, 516, 521, 523, 525, 526, 529, 530, 531, 543, 545, 569, 570, 572, 574, 577, 578, 579, 583, 585, 586, 587, 588, 589, 602, 607, 620, 623, 626, 627, 632, 638, 641, 642, 649, 654, 658, 660, 661, 662, 663, 667, 668, 671, 675, 679, 688, 694, 707, 709, 717, 719, 726, 727, 729, 730, 731, 737, 747, 748, 761, 762, 763, 764, 769, 774, 776, 779, 781, 788, 810, 818, 823, 836, 837, 838, 842, 843, 847, 855, 864, 869, 870, 873, 876, 895, 897, 907, 914, 916, 918, 919, 924, 927, 932, 933, 934, 935, 937, 941, 942, 943, 944, 948, 950, 951, 957, 963, 965, 966, 969, 970, 971, 972, 978, 982, 984, 985, 990, 994, 999, 1000, 1003, 1004, 1007, 1013, 1014, 1015, 1019, 1020, 1024, 1025, 1027, 1029, 1030, 1031, 1035, 1036, 1037, 1039, 1043, 1049, 1058, 1059, 1060, 1063, 1065, 1078, 1084, 1085, 1086, 1102, 1108, 1110, 1112, 1113, 1114, 1115, 1120, 1121, 1124, 1129, 1130, 1134, 1136, 1141, 1142, 1144, 1153, 1155, 1156, 1158, 1159, 1160, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1172, 1174, 1175, 1179], "der": [1, 3, 5, 7, 8, 11, 65, 150, 162, 163, 164, 168, 171, 172, 173, 174, 177, 179, 181, 187, 189, 198, 199, 200, 203, 204, 207, 208, 210, 213, 217, 233, 234, 236, 242, 245, 246, 249, 257, 306, 334, 342, 347, 1155, 1157, 1158, 1159, 1160, 1165, 1167, 1168, 1171, 1172, 1173, 1174, 1175, 1177, 1178, 1179], "tu": [1, 23], "iicm": [1, 23], "1993": [1, 23], "universit\u00e4tsassist": [1, 23], "ebendort": [1, 23], "bi": [1, 3, 23, 32, 162, 163, 187, 197, 294, 322, 1156, 1175], "1998": [1, 3, 23, 165, 173, 229, 568], "vorlesungen": 1, "programmieren": [1, 5, 173, 177, 343, 359, 1160, 1165, 1168, 1172, 1174, 1178, 1179], "basi": [1, 3, 5, 7, 24, 79, 178, 186, 207, 216, 230, 242, 276, 337, 412, 1164, 1175, 1176], "c": [1, 3, 4, 6, 9, 12, 21, 23, 38, 42, 43, 64, 66, 73, 74, 75, 79, 86, 88, 107, 110, 124, 134, 139, 149, 150, 153, 154, 155, 156, 157, 160, 167, 170, 172, 174, 182, 183, 187, 192, 193, 199, 202, 204, 209, 210, 213, 214, 223, 226, 227, 229, 233, 234, 236, 239, 242, 246, 249, 254, 255, 264, 267, 274, 280, 284, 288, 294, 297, 305, 306, 310, 313, 316, 322, 328, 337, 341, 343, 344, 349, 355, 356, 359, 361, 362, 363, 364, 365, 367, 371, 373, 375, 376, 377, 380, 383, 385, 387, 388, 389, 391, 395, 399, 400, 403, 404, 405, 406, 407, 411, 413, 415, 416, 417, 421, 422, 424, 425, 427, 428, 429, 431, 432, 433, 435, 436, 437, 439, 440, 441, 443, 444, 445, 446, 452, 455, 456, 457, 458, 461, 462, 463, 468, 469, 471, 472, 477, 481, 487, 489, 492, 498, 510, 513, 516, 517, 518, 519, 520, 522, 523, 525, 526, 528, 534, 568, 570, 572, 573, 574, 575, 579, 580, 581, 585, 586, 588, 590, 593, 598, 603, 605, 606, 610, 612, 616, 618, 620, 622, 623, 624, 625, 628, 630, 631, 632, 634, 635, 637, 638, 639, 640, 642, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 669, 675, 676, 680, 681, 682, 683, 684, 688, 694, 695, 706, 707, 708, 710, 711, 712, 713, 714, 715, 718, 719, 720, 721, 723, 724, 726, 727, 729, 730, 731, 732, 733, 735, 740, 741, 744, 745, 746, 747, 748, 751, 760, 761, 763, 764, 766, 769, 773, 774, 778, 779, 783, 785, 788, 790, 800, 810, 812, 813, 818, 826, 829, 834, 836, 842, 847, 849, 852, 867, 870, 892, 898, 901, 907, 908, 914, 915, 916, 928, 932, 933, 934, 939, 940, 941, 942, 943, 952, 955, 960, 968, 971, 973, 974, 977, 980, 981, 982, 984, 985, 986, 992, 994, 996, 1000, 1001, 1002, 1003, 1005, 1006, 1030, 1038, 1039, 1047, 1048, 1052, 1058, 1065, 1119, 1120, 1124, 1142, 1143, 1150, 1153, 1163, 1165, 1166, 1168, 1174, 1175, 1176, 1177, 1178, 1179], "und": [1, 3, 4, 5, 6, 7, 8, 37, 39, 147, 162, 163, 168, 172, 173, 177, 179, 181, 189, 193, 199, 203, 205, 207, 212, 214, 218, 223, 234, 238, 239, 244, 246, 250, 256, 257, 274, 284, 294, 310, 323, 337, 338, 342, 347, 359, 361, 397, 405, 850, 897, 898, 917, 1155, 1156, 1157, 1158, 1159, 1163, 1165, 1167, 1168, 1172, 1173, 1174, 1175, 1177, 1178, 1179], "\u00fcbertragungsprotokol": [1, 167], "forschungst\u00e4tigkeit": 1, "volltextsuch": 1, "hyperwav": [1, 3, 23], "2001": [1, 3, 23, 223, 229, 239, 242, 267], "leitung": 1, "serverprogrammierung": 1, "oo": [1, 43, 73, 74, 75, 79, 107, 113, 116, 167, 190, 203, 205, 214, 233, 241, 244, 270, 274, 280, 282, 283, 287, 346, 355, 356, 451, 473, 515, 567, 568, 575, 638, 639, 642, 644, 645, 667, 731, 763, 802, 812, 1009, 1023, 1161, 1164], "design": [1, 3, 20, 23, 53, 57, 75, 79, 81, 83, 86, 107, 113, 150, 151, 154, 167, 170, 190, 216, 217, 233, 279, 281, 350, 359, 361, 388, 418, 438, 439, 442, 450, 459, 466, 467, 468, 469, 471, 472, 474, 476, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 515, 523, 525, 567, 568, 574, 576, 592, 664, 713, 726, 730, 731, 733, 748, 761, 762, 763, 764, 915, 984, 1103, 1142, 1160, 1163], "analys": [1, 3, 167, 1158], "ration": [1, 3, 38, 160], "rose": [1, 3, 32], "f\u00fcr": [1, 3, 5, 65, 162, 163, 168, 172, 174, 177, 198, 199, 210, 217, 233, 245, 257, 271, 342, 347, 359, 361, 872, 1155, 1156, 1158, 1165, 1171, 1172, 1174, 1177], "java": [1, 9, 197, 198, 209, 221, 230, 322, 628, 641, 726, 731, 738, 1020, 1033, 1039, 1048, 1171, 1179], "releasemanag": [1, 3, 23, 167, 1173], "cv": [1, 3, 23, 32, 150, 224, 1173], "subvers": [1, 3, 361, 892], "systemnah": [1, 3, 5, 23, 149, 167, 974, 977, 981, 1174], "programmierung": [1, 3, 4, 5, 6, 8, 23, 147, 167, 221, 248, 257, 359, 1156, 1157, 1158, 1160, 1165, 1172, 1174, 1177], "unter": [1, 3, 23, 65, 163, 171, 172, 189, 197, 343, 898, 1156, 1157, 1160, 1165, 1168, 1172, 1175, 1177, 1178], "unix": [1, 73, 74, 75, 79, 98, 151, 154, 183, 206, 270, 328, 342, 343, 344, 355, 356, 360, 377, 431, 477, 651, 742, 761, 763, 767, 769, 802, 835, 836, 837, 852, 854, 866, 894, 897, 903, 907, 910, 915, 927, 952, 968, 978, 1034, 1058, 1086, 1156, 1157, 1159, 1163, 1165, 1167, 1168, 1172, 1174, 1175, 1176, 1178], "window": [1, 3, 32, 98, 99, 104, 105, 116, 142, 154, 159, 161, 171, 173, 186, 194, 211, 225, 227, 229, 240, 243, 254, 259, 261, 263, 269, 270, 282, 298, 304, 328, 339, 342, 345, 347, 360, 372, 439, 733, 736, 763, 840, 844, 870, 906, 936, 952, 957, 1032, 1034, 1035, 1058, 1108, 1143], "nt": 1, "salomon": [1, 3, 23], "friesach": [1, 3, 23], "bei": [1, 3, 5, 23, 162, 163, 168, 172, 177, 181, 187, 189, 198, 199, 202, 204, 242, 257, 334, 359, 970, 1155, 1156, 1171, 1173], "2006": [1, 3, 23, 229], "magicdraw": 1, "datenbankdesign": [1, 3], "einer": [1, 3, 162, 163, 168, 173, 181, 187, 189, 198, 199, 204, 211, 337, 359, 898, 970, 1155, 1156, 1160, 1171, 1172, 1177], "objektrelationalen": [1, 3], "datenbankschnittstel": [1, 3], "sp\u00e4ter": [1, 162, 172, 243, 1158], "softwarearchitekt": 1, "leiter": [1, 23], "abteilung": [1, 198, 1171], "forschung": 1, "entwicklung": [1, 3, 4, 343, 1167, 1173], "atron": [1, 3, 23], "unterpremst\u00e4tten": [1, 3, 23], "2010": [1, 3, 23, 150, 166, 229, 1033], "enterpris": 1, "architect": [1, 459, 1135], "softwarearchitektur": [1, 3, 23], "versionsmanag": 1, "ibm": 1, "clearcas": [1, 160, 1173], "massgeblich": 1, "portierung": [1, 3, 4, 167], "spielautomatensoftwar": 1, "von": [1, 3, 4, 5, 6, 7, 8, 65, 136, 162, 163, 171, 172, 181, 189, 193, 194, 196, 198, 199, 202, 205, 207, 208, 210, 219, 236, 243, 248, 255, 264, 271, 306, 322, 342, 343, 347, 359, 361, 835, 897, 898, 1155, 1156, 1157, 1158, 1159, 1160, 1163, 1165, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178], "enea": [1, 3, 154], "os": [1, 3, 154], "nach": [1, 3, 4, 5, 162, 163, 167, 168, 173, 177, 181, 197, 198, 204, 242, 243, 249, 360, 832, 1155, 1171], "linux": [1, 3, 4, 6, 24, 37, 39, 43, 59, 62, 63, 64, 66, 73, 74, 75, 79, 85, 86, 87, 88, 99, 104, 105, 107, 118, 134, 139, 146, 149, 150, 151, 153, 155, 156, 157, 161, 164, 165, 166, 171, 178, 181, 186, 193, 215, 216, 223, 229, 232, 239, 242, 243, 246, 251, 254, 259, 261, 263, 272, 279, 281, 282, 298, 304, 318, 322, 328, 339, 341, 342, 343, 344, 348, 349, 355, 356, 359, 361, 403, 425, 433, 442, 445, 462, 473, 487, 515, 516, 517, 518, 519, 520, 521, 522, 525, 526, 527, 553, 567, 734, 740, 761, 762, 763, 764, 766, 767, 769, 770, 772, 774, 775, 777, 779, 780, 781, 782, 783, 784, 786, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 801, 802, 803, 804, 805, 806, 807, 809, 810, 811, 814, 815, 816, 819, 820, 821, 824, 825, 827, 828, 830, 831, 833, 835, 836, 837, 838, 844, 846, 848, 851, 854, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 870, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 890, 898, 900, 903, 907, 909, 910, 911, 915, 917, 918, 919, 920, 921, 922, 923, 925, 926, 927, 930, 932, 933, 934, 935, 936, 937, 942, 944, 945, 948, 949, 950, 951, 953, 961, 964, 967, 969, 974, 977, 978, 981, 984, 985, 986, 988, 989, 990, 991, 992, 993, 994, 995, 996, 998, 999, 1000, 1001, 1002, 1032, 1034, 1096, 1121, 1141, 1144, 1157, 1158, 1159, 1160, 1163, 1165, 1168, 1172], "beteiligt": [1, 23], "seit": [1, 5, 23, 181, 187, 197, 202, 1156, 1165], "april": [1, 3, 23], "selbstst\u00e4ndig": [1, 23], "fh": [1, 23, 98, 107, 110, 111, 112, 116, 133, 134, 137, 159, 206, 339, 341, 342, 347, 348, 350, 515, 526, 547, 567, 575, 590, 650, 664, 763, 840, 844, 859, 865, 884, 890, 906, 991, 994, 1150], "joanneum": [1, 137, 159, 1150], "kapfenberg": 1, "2011": [1, 3, 5, 150, 151, 166, 279, 281, 359, 363, 568, 667], "2015": [1, 23, 214, 240, 278, 309, 359, 674, 1108], "lehrveranstaltung": [1, 343], "im": [1, 3, 5, 8, 29, 32, 38, 91, 162, 163, 172, 173, 177, 181, 186, 187, 189, 190, 193, 195, 198, 199, 202, 204, 208, 210, 211, 217, 218, 221, 224, 225, 227, 230, 233, 237, 238, 239, 245, 246, 248, 250, 251, 253, 266, 268, 273, 275, 276, 280, 282, 283, 286, 287, 289, 292, 293, 295, 304, 305, 307, 308, 309, 311, 314, 320, 321, 326, 328, 329, 330, 331, 332, 333, 342, 347, 763, 1009, 1031, 1065, 1066, 1067, 1077, 1080, 1088, 1089, 1091, 1092, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1113, 1121, 1122, 1143, 1156, 1159, 1165, 1167, 1171, 1172, 1174, 1175, 1178, 1179], "lehrgang": 1, "softwar": [1, 5, 13, 23, 24, 41, 46, 47, 51, 53, 55, 56, 69, 74, 75, 79, 86, 98, 105, 116, 127, 133, 153, 161, 164, 165, 170, 181, 187, 193, 197, 206, 223, 229, 230, 239, 240, 242, 267, 279, 281, 282, 283, 296, 312, 339, 360, 361, 427, 459, 467, 468, 477, 479, 645, 731, 763, 764, 794, 841, 854, 906, 907, 914, 915, 930, 982, 991, 994, 1063, 1110, 1163, 1164, 1166, 1179], "avl": [1, 23, 151], "2018": [1, 23, 157, 229, 672], "2019": [1, 40, 135, 150, 192, 214, 263, 287, 305, 308, 309, 326, 359, 545, 672, 713, 892, 1107, 1108, 1110], "linuxexpert": [1, 23], "architekt": [1, 23], "build": [1, 4, 17, 28, 40, 42, 44, 50, 73, 74, 75, 79, 85, 88, 98, 105, 109, 116, 138, 144, 150, 154, 159, 160, 166, 170, 181, 184, 194, 215, 232, 235, 259, 261, 263, 270, 279, 281, 284, 291, 296, 297, 312, 313, 318, 345, 348, 349, 360, 361, 364, 405, 418, 433, 445, 457, 458, 459, 461, 463, 473, 487, 493, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 545, 550, 553, 567, 658, 695, 715, 725, 739, 763, 767, 770, 772, 775, 777, 779, 780, 787, 789, 790, 791, 795, 801, 806, 807, 812, 814, 819, 825, 828, 831, 867, 906, 915, 916, 940, 941, 942, 943, 957, 976, 980, 984, 987, 991, 994, 995, 999, 1046, 1057, 1063, 1136, 1141, 1147, 1151, 1156, 1161, 1163], "manag": [1, 5, 14, 23, 29, 64, 69, 73, 74, 75, 79, 95, 98, 109, 153, 155, 164, 169, 170, 178, 181, 183, 186, 190, 193, 194, 200, 201, 205, 210, 211, 214, 216, 226, 232, 235, 240, 242, 243, 249, 252, 267, 274, 281, 283, 284, 287, 288, 291, 309, 310, 316, 318, 319, 322, 345, 346, 348, 355, 356, 360, 361, 422, 439, 450, 468, 481, 539, 545, 570, 575, 664, 675, 676, 678, 707, 712, 723, 724, 726, 727, 728, 732, 740, 760, 762, 763, 781, 787, 794, 796, 819, 825, 828, 831, 841, 845, 846, 901, 906, 915, 923, 935, 968, 969, 982, 998, 1009, 1018, 1037, 1061, 1065, 1106, 1107, 1108, 1109, 1110, 1114, 1122, 1124, 1136, 1138, 1140, 1141, 1145, 1150, 1161, 1163, 1166, 1173], "schittstel": 1, "zum": [1, 3, 5, 162, 163, 172, 177, 181, 187, 197, 210, 217, 234, 294, 360, 1156, 1158, 1159, 1160, 1172, 1175, 1177], "weiser": 1, "alter": [1, 189, 190, 240, 263, 360, 571, 579, 897, 1108], "mann": 1, "2020": [1, 23, 116, 134, 135, 150, 151, 157, 161, 162, 166, 169, 173, 192, 194, 229, 359, 526, 527, 675, 688, 837, 838, 917, 926, 944, 1033, 1107, 1112, 1150, 1172], "embed": [1, 3, 4, 5, 23, 73, 88, 105, 137, 149, 150, 151, 154, 156, 170, 194, 196, 219, 318, 340, 345, 347, 359, 361, 733, 743, 756, 762, 763, 798, 810, 848, 870, 916, 927, 968, 984, 1011, 1052, 1157, 1158, 1159, 1163, 1164, 1167, 1168, 1172, 1176], "comput": [1, 23, 28, 29, 32, 73, 85, 88, 102, 129, 137, 157, 196, 246, 255, 279, 281, 305, 306, 327, 340, 342, 345, 347, 359, 368, 441, 446, 447, 472, 569, 579, 582, 588, 621, 717, 730, 742, 763, 832, 839, 907, 915, 917, 918, 925, 952, 966, 969, 1033, 1121, 1136, 1166], "electron": [1, 159, 360, 915], "engin": [1, 157, 230, 232, 298, 301, 360, 431, 435, 439, 449, 480, 513, 521, 915, 1031, 1179], "kontakt": [2, 23], "curriculum": [2, 5], "vita": [2, 5], "skill": [2, 86, 150, 968, 1031], "projekt": [2, 151, 172, 1168, 1172], "stand": [3, 164, 213, 345, 810, 916, 1000, 1116], "j\u00e4nner": [3, 23], "2014": [3, 151, 172, 193, 229, 263, 278, 287, 309, 912, 1108], "devicedriv": 3, "die": [3, 5, 7, 8, 37, 45, 59, 60, 63, 65, 150, 163, 168, 171, 172, 173, 174, 177, 181, 187, 189, 197, 198, 200, 202, 204, 207, 208, 210, 213, 217, 226, 233, 236, 239, 242, 245, 246, 249, 274, 302, 337, 342, 343, 347, 360, 361, 495, 509, 897, 898, 970, 1108, 1155, 1156, 1157, 1158, 1159, 1160, 1165, 1167, 1171, 1172, 1173, 1174, 1175, 1177, 1178, 1179], "pci": [3, 201, 763, 787, 788, 849, 906, 914, 950, 1166], "hardwar": [3, 5, 60, 66, 70, 73, 74, 75, 79, 81, 129, 133, 139, 143, 153, 154, 157, 167, 170, 229, 230, 242, 279, 282, 283, 304, 308, 328, 343, 344, 345, 360, 361, 377, 388, 391, 427, 445, 449, 519, 520, 521, 522, 526, 742, 763, 790, 810, 841, 846, 847, 906, 907, 908, 909, 912, 915, 931, 933, 934, 947, 950, 982, 1155, 1164, 1166, 1172], "ein": [3, 5, 7, 8, 37, 162, 163, 168, 171, 172, 173, 174, 177, 179, 181, 189, 193, 194, 196, 197, 198, 200, 202, 204, 205, 207, 208, 210, 211, 213, 217, 219, 223, 226, 227, 233, 234, 236, 239, 242, 243, 245, 246, 249, 257, 264, 267, 274, 284, 288, 294, 302, 306, 310, 316, 322, 334, 337, 342, 347, 360, 361, 405, 533, 836, 897, 898, 970, 1038, 1155, 1156, 1157, 1158, 1159, 1160, 1163, 1165, 1168, 1171, 1173, 1174, 1175, 1176, 1177, 1178, 1179], "messger\u00e4teherstel": 3, "de": [3, 5, 7, 8, 32, 37, 150, 162, 164, 168, 171, 172, 177, 181, 187, 189, 197, 198, 207, 208, 217, 233, 242, 245, 249, 342, 359, 436, 729, 746, 750, 832, 834, 898, 911, 1107, 1133, 1155, 1156, 1157, 1158, 1160, 1165, 1167, 1171, 1172, 1174, 1175, 1177, 1178, 1179], "untenstehenden": 3, "zeit": [3, 5, 163, 198, 316, 1156, 1158, 1178], "dato": 3, "ort": 3, "raum": [3, 177], "anbindung": 3, "verschieden": [3, 23, 187, 360, 1157, 1158, 1159, 1165, 1172, 1177], "hardwareinterfac": 3, "i2c": [3, 4, 66, 79, 82, 86, 139, 142, 154, 155, 181, 194, 270, 345, 348, 353, 360, 466, 496, 555, 556, 564, 763, 810, 906, 913, 915, 950, 1165, 1172], "spi": [3, 4, 79, 154, 172, 181, 360, 555, 556, 564, 908, 909, 910, 915, 950, 1165, 1172], "can": [3, 12, 17, 29, 57, 58, 60, 69, 76, 81, 84, 109, 111, 112, 116, 117, 124, 128, 148, 151, 153, 154, 155, 156, 158, 159, 160, 161, 165, 169, 170, 171, 174, 176, 178, 182, 183, 184, 186, 190, 191, 192, 206, 213, 215, 223, 226, 229, 230, 232, 239, 242, 246, 249, 252, 270, 273, 276, 278, 279, 281, 284, 288, 294, 296, 309, 310, 312, 316, 322, 328, 334, 336, 339, 342, 347, 353, 360, 365, 367, 371, 375, 379, 385, 388, 399, 403, 409, 410, 413, 420, 425, 427, 431, 432, 433, 434, 435, 438, 439, 443, 444, 445, 449, 451, 452, 454, 460, 462, 463, 469, 474, 477, 478, 481, 488, 489, 493, 494, 495, 507, 511, 520, 527, 553, 559, 569, 571, 576, 578, 579, 584, 585, 592, 603, 607, 623, 624, 629, 638, 642, 645, 649, 654, 659, 661, 662, 663, 672, 674, 677, 678, 679, 680, 684, 689, 713, 716, 717, 719, 725, 726, 729, 730, 731, 734, 737, 739, 743, 759, 761, 763, 769, 781, 796, 800, 804, 808, 810, 815, 818, 824, 836, 837, 838, 841, 842, 843, 845, 847, 848, 849, 850, 852, 853, 855, 860, 862, 864, 866, 868, 870, 871, 906, 907, 913, 914, 915, 916, 919, 921, 923, 925, 926, 927, 934, 936, 940, 944, 953, 955, 966, 969, 970, 978, 982, 986, 996, 1001, 1003, 1005, 1006, 1007, 1008, 1010, 1011, 1012, 1015, 1018, 1019, 1020, 1027, 1028, 1030, 1031, 1036, 1039, 1040, 1043, 1048, 1050, 1056, 1058, 1060, 1063, 1065, 1072, 1082, 1093, 1103, 1104, 1105, 1107, 1113, 1115, 1120, 1121, 1127, 1129, 1134, 1136, 1141, 1161, 1163, 1165, 1172, 1176, 1178], "custom": [3, 27, 29, 32, 39, 98, 139, 143, 147, 150, 154, 157, 159, 160, 166, 170, 183, 191, 193, 195, 223, 229, 232, 239, 242, 243, 270, 272, 279, 281, 306, 328, 329, 330, 331, 333, 341, 342, 360, 449, 454, 473, 487, 515, 518, 521, 523, 525, 545, 567, 569, 575, 640, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 676, 695, 697, 707, 712, 723, 732, 740, 748, 760, 762, 763, 783, 810, 926, 957, 982, 1107, 1149], "firmwar": [3, 118, 120, 134, 142, 154, 155, 157, 164, 173, 907, 914, 950], "kunden": [3, 5, 23, 168, 272, 360, 1155], "dezemb": [3, 23], "2012": [3, 23, 150, 166, 229], "backport": 3, "integr": [3, 16, 23, 38, 43, 60, 114, 126, 134, 151, 159, 161, 169, 181, 186, 206, 296, 305, 312, 344, 349, 350, 351, 439, 465, 468, 472, 684, 763, 783, 792, 849, 870, 907, 909, 915, 916, 1133, 1141, 1144, 1163, 1165, 1172], "touchcontrol": 3, "driver": [3, 5, 79, 86, 139, 142, 154, 157, 159, 167, 170, 171, 270, 343, 344, 359, 361, 445, 763, 764, 766, 767, 769, 770, 771, 772, 773, 774, 775, 777, 779, 780, 781, 782, 784, 785, 786, 789, 790, 791, 793, 794, 795, 797, 799, 801, 803, 804, 805, 807, 809, 810, 811, 814, 816, 819, 821, 825, 828, 831, 841, 846, 849, 906, 915, 916, 936, 950, 1156, 1176, 1178], "systemintegrationsfirma": 3, "stuttgart": 3, "mai": [3, 43, 66, 109, 111, 112, 117, 133, 142, 154, 158, 160, 165, 169, 213, 223, 229, 236, 239, 242, 246, 252, 279, 288, 316, 375, 382, 384, 388, 397, 454, 458, 491, 576, 629, 727, 737, 741, 761, 792, 794, 802, 810, 843, 852, 857, 858, 870, 915, 916, 938, 940, 941, 942, 944, 999, 1000, 1008, 1050, 1133, 1143], "2013": [3, 23, 150, 359], "python": [3, 4, 6, 7, 10, 13, 21, 23, 24, 28, 29, 40, 60, 62, 66, 73, 75, 79, 86, 92, 93, 126, 137, 138, 149, 150, 151, 167, 169, 170, 173, 175, 183, 198, 199, 203, 206, 207, 208, 210, 213, 215, 222, 223, 229, 238, 239, 242, 246, 249, 270, 272, 281, 328, 329, 330, 331, 332, 333, 337, 338, 341, 343, 344, 349, 350, 351, 355, 356, 357, 359, 361, 373, 525, 666, 684, 703, 715, 721, 738, 763, 764, 870, 892, 906, 908, 913, 914, 955, 1003, 1004, 1005, 1006, 1008, 1010, 1011, 1013, 1014, 1015, 1017, 1018, 1019, 1020, 1023, 1027, 1028, 1034, 1038, 1042, 1043, 1049, 1051, 1053, 1054, 1056, 1059, 1060, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1109, 1110, 1111, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1123, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1139, 1140, 1141, 1143, 1144, 1145, 1161, 1165, 1171, 1172, 1179], "programm": [3, 59, 63, 172, 173, 177, 186, 197, 202, 206, 210, 242, 267, 279, 280, 281, 308, 322, 337, 343, 360, 409, 422, 429, 435, 439, 569, 571, 572, 641, 675, 709, 712, 846, 852, 903, 915, 936, 970, 1031, 1032, 1036, 1058, 1115, 1122, 1135, 1158, 1161, 1166, 1174, 1175, 1177, 1179], "zur": [3, 162, 177, 181, 189, 199, 210, 337, 342, 347, 360, 970, 1156, 1158, 1159, 1160, 1172, 1177, 1178, 1179], "IT": [3, 270, 272, 360, 573], "wie": [3, 5, 162, 163, 171, 172, 173, 177, 181, 187, 189, 197, 202, 205, 212, 236, 337, 360, 1155, 1156, 1158, 1159, 1160, 1165, 1168, 1172, 1173, 1175, 1177, 1178], "beispiel": [3, 5, 23, 173, 197, 198, 220, 226, 247, 360, 1158, 1159, 1160, 1171, 1172, 1174, 1175, 1177, 1179], "e": [3, 5, 7, 32, 37, 38, 42, 48, 64, 98, 116, 128, 129, 134, 157, 159, 160, 161, 162, 163, 165, 168, 169, 171, 172, 173, 175, 176, 177, 181, 187, 189, 197, 198, 202, 204, 206, 207, 210, 213, 214, 215, 218, 219, 223, 226, 227, 229, 232, 234, 236, 239, 242, 243, 246, 249, 252, 255, 264, 267, 270, 271, 274, 276, 278, 284, 288, 294, 306, 310, 316, 319, 322, 335, 336, 337, 338, 342, 347, 360, 364, 381, 384, 388, 391, 394, 399, 409, 412, 427, 431, 435, 438, 439, 451, 452, 454, 457, 463, 464, 468, 477, 481, 489, 494, 498, 510, 523, 526, 527, 562, 569, 573, 574, 584, 592, 603, 623, 641, 642, 656, 661, 668, 671, 675, 678, 689, 695, 709, 730, 739, 741, 742, 747, 761, 769, 788, 829, 836, 837, 838, 847, 848, 852, 853, 854, 855, 870, 892, 899, 914, 915, 916, 927, 936, 946, 948, 966, 969, 970, 981, 982, 984, 986, 987, 998, 1003, 1007, 1015, 1027, 1029, 1030, 1048, 1053, 1054, 1077, 1117, 1121, 1126, 1129, 1132, 1135, 1141, 1143, 1155, 1156, 1158, 1160, 1164, 1165, 1171, 1172, 1174, 1175, 1177, 1179], "bill": [3, 274], "email": [3, 32, 42, 136, 155, 161, 165, 170, 194, 210, 274, 353, 923, 1121, 1125, 1126, 1127, 1129, 1130, 1131], "kommunik": [3, 23, 1172, 1175, 1177, 1178, 1179], "extrakt": 3, "attach": [3, 175, 223, 229, 239, 242, 472, 792, 915, 968, 1115], "signaturverifik": 3, "informationssystem": 3, "februar": 3, "juni": 3, "vollautomatisch": 3, "instal": [3, 29, 32, 45, 61, 91, 98, 99, 105, 116, 133, 138, 150, 151, 154, 155, 159, 181, 184, 190, 191, 193, 195, 206, 221, 223, 224, 227, 229, 232, 237, 239, 242, 243, 251, 254, 263, 266, 273, 276, 279, 280, 281, 286, 287, 291, 292, 293, 297, 298, 308, 313, 314, 315, 320, 321, 326, 380, 395, 404, 411, 417, 421, 424, 428, 437, 441, 446, 447, 455, 456, 462, 473, 487, 515, 516, 517, 518, 519, 520, 521, 522, 525, 532, 534, 539, 567, 575, 590, 593, 596, 612, 618, 622, 631, 634, 635, 640, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 669, 676, 707, 723, 732, 740, 748, 760, 762, 763, 783, 790, 806, 810, 811, 849, 906, 909, 914, 916, 981, 983, 986, 989, 991, 994, 1015, 1031, 1035, 1061, 1106, 1119, 1126, 1136, 1137, 1144, 1149, 1151], "serveranlagen": 3, "herstel": 3, "radar\u00fcberwachungssystemen": 3, "septemb": 3, "unterschleissheim": 3, "m\u00fcnchen": 3, "instandhaltungsarbeiten": 3, "hauseigenen": 3, "system": [3, 5, 14, 23, 37, 45, 74, 79, 81, 98, 102, 103, 109, 111, 112, 116, 129, 150, 151, 154, 155, 160, 161, 165, 167, 169, 170, 171, 172, 178, 181, 183, 184, 194, 206, 211, 214, 221, 223, 226, 227, 231, 232, 237, 239, 240, 242, 249, 252, 258, 259, 260, 267, 269, 274, 279, 284, 287, 288, 290, 310, 316, 322, 339, 342, 343, 344, 345, 346, 347, 353, 355, 356, 359, 361, 395, 404, 411, 415, 417, 421, 424, 428, 435, 436, 437, 441, 442, 446, 447, 449, 454, 457, 459, 472, 473, 480, 493, 515, 526, 567, 602, 645, 669, 707, 740, 741, 742, 760, 761, 762, 763, 766, 769, 781, 783, 802, 808, 810, 840, 841, 842, 843, 844, 845, 846, 848, 849, 850, 853, 854, 856, 857, 858, 860, 861, 862, 863, 864, 867, 870, 896, 897, 901, 906, 910, 915, 916, 917, 922, 928, 932, 933, 934, 935, 937, 940, 942, 945, 946, 948, 949, 950, 951, 961, 964, 967, 969, 970, 972, 978, 981, 982, 984, 985, 986, 1007, 1008, 1019, 1035, 1063, 1108, 1143, 1157, 1164, 1166, 1167], "auf": [3, 5, 8, 23, 65, 150, 155, 163, 168, 171, 172, 173, 177, 181, 187, 189, 197, 198, 202, 208, 210, 217, 218, 233, 236, 243, 245, 257, 337, 342, 343, 347, 360, 898, 1155, 1156, 1157, 1158, 1159, 1160, 1165, 1167, 1168, 1171, 1175, 1178, 1179], "gentoo": [3, 150, 153, 166, 445, 1156], "updat": [3, 44, 128, 133, 153, 155, 169, 173, 201, 226, 234, 249, 259, 261, 267, 274, 279, 281, 288, 294, 306, 322, 342, 349, 524, 526, 587, 820, 968, 998, 999, 1000, 1001, 1002, 1056, 1058, 1132, 1144, 1150, 1173], "betriebssystem": [3, 1165, 1167, 1172, 1174], "usb": [3, 4, 64, 153, 154, 155, 157, 360, 438, 788, 841, 1165], "touchscreen": 3, "cheat": [3, 33, 66, 194, 206, 442, 695, 870], "detect": [3, 32, 107, 174, 186, 407, 410, 444, 452, 550, 577, 680, 705, 726, 804, 915, 916, 942, 951, 974, 985, 986, 1087], "m\u00fcnzeinwurf": 3, "via": [3, 17, 64, 86, 119, 125, 126, 154, 157, 161, 166, 175, 190, 191, 213, 219, 240, 242, 270, 273, 276, 279, 288, 305, 341, 348, 360, 469, 474, 494, 579, 603, 714, 728, 763, 790, 810, 813, 841, 846, 852, 867, 903, 914, 925, 926, 933, 940, 950, 971, 978, 996, 1062, 1161], "gpio": [3, 4, 59, 60, 63, 66, 73, 74, 75, 79, 85, 116, 117, 118, 120, 125, 126, 127, 151, 270, 279, 309, 332, 345, 347, 351, 763, 787, 812, 814, 819, 825, 828, 831, 906, 911, 915, 947, 951, 1165, 1172], "interrupt": [3, 64, 87, 111, 112, 172, 201, 270, 445, 763, 781, 787, 802, 804, 805, 807, 808, 812, 813, 814, 818, 819, 822, 825, 828, 829, 831, 841, 843, 846, 849, 906, 911, 928, 930, 931, 932, 933, 934, 935, 947, 949, 950, 966, 969, 970, 972, 981, 982, 1165, 1166, 1172], "m\u00e4rz": 3, "firma": [3, 168, 177, 272, 359, 1155, 1165, 1172], "spielo": 3, "intern": [3, 57, 85, 117, 121, 122, 127, 133, 187, 192, 215, 223, 226, 227, 229, 239, 242, 273, 276, 305, 335, 349, 378, 408, 423, 438, 454, 463, 468, 582, 623, 670, 713, 757, 761, 788, 796, 822, 914, 915, 916, 957, 1008, 1012, 1056, 1065, 1121, 1126], "datenkonvertierung": 3, "einem": [3, 5, 23, 162, 172, 173, 177, 181, 187, 189, 197, 198, 202, 204, 210, 236, 242, 249, 264, 342, 343, 347, 360, 1156, 1158, 1160, 1165, 1174, 1178, 1179], "konvertierung": [3, 23, 1158], "asterix": 3, "format": [3, 17, 23, 29, 30, 31, 42, 51, 53, 54, 55, 56, 91, 121, 122, 124, 136, 157, 173, 174, 176, 177, 184, 191, 193, 195, 198, 202, 211, 214, 221, 222, 224, 230, 235, 236, 240, 242, 243, 248, 251, 252, 263, 266, 267, 272, 286, 287, 288, 292, 293, 295, 301, 304, 305, 308, 309, 314, 315, 316, 321, 323, 326, 365, 366, 371, 407, 451, 763, 764, 810, 841, 847, 870, 930, 984, 1023, 1031, 1067, 1077, 1080, 1088, 1089, 1091, 1092, 1101, 1102, 1103, 1104, 1106, 1108, 1113, 1124, 1136, 1171, 1175], "zweck": [3, 187, 1172], "extern": [3, 13, 21, 23, 29, 64, 86, 153, 157, 161, 183, 186, 193, 215, 216, 221, 232, 237, 242, 251, 272, 287, 297, 305, 313, 342, 347, 375, 379, 405, 407, 409, 411, 417, 421, 424, 428, 432, 437, 441, 446, 447, 456, 457, 553, 669, 707, 713, 760, 762, 763, 767, 770, 772, 775, 777, 780, 783, 787, 788, 789, 791, 795, 801, 807, 810, 814, 819, 820, 825, 828, 831, 906, 916, 966, 1032, 1067, 1068, 1069, 1070, 1072, 1073, 1074, 1106, 1108, 1148, 1150, 1158, 1165, 1172], "datenquellen": 3, "export": [3, 40, 62, 129, 133, 154, 165, 190, 215, 216, 219, 221, 322, 328, 713, 766, 842, 871, 907, 915, 948, 950, 951, 996, 998, 1001, 1099, 1116], "daten": [3, 187, 189, 202, 212, 217, 302, 970, 1178], "soap": [3, 32], "ip": [3, 136, 158, 161, 171, 178, 206, 339, 342, 348, 353, 550, 562, 909, 927, 933, 969, 1136, 1165, 1172, 1176, 1178], "kamera": 3, "einen": [3, 5, 23, 162, 163, 173, 177, 181, 187, 189, 197, 210, 246, 360, 628, 897, 1155, 1156, 1157, 1158, 1160, 1167, 1175, 1177, 1178, 1179], "videomautsystemen": 3, "implement": [3, 16, 23, 24, 28, 42, 50, 53, 54, 55, 59, 63, 64, 70, 83, 85, 86, 98, 111, 112, 113, 114, 116, 132, 139, 154, 156, 159, 174, 182, 190, 192, 210, 215, 216, 223, 229, 233, 236, 237, 239, 244, 246, 261, 267, 276, 279, 280, 281, 282, 283, 288, 304, 308, 319, 329, 330, 335, 342, 353, 376, 378, 410, 420, 422, 423, 439, 449, 454, 461, 464, 465, 467, 468, 469, 471, 472, 473, 476, 477, 479, 488, 489, 493, 494, 495, 510, 514, 516, 517, 518, 519, 520, 522, 523, 524, 528, 529, 530, 531, 533, 535, 540, 543, 544, 568, 570, 574, 578, 586, 587, 588, 589, 594, 623, 629, 638, 640, 641, 642, 649, 657, 658, 659, 660, 661, 662, 663, 664, 670, 675, 676, 677, 679, 689, 704, 705, 706, 707, 713, 714, 716, 725, 729, 731, 733, 739, 754, 757, 758, 761, 762, 763, 769, 776, 779, 796, 824, 841, 843, 847, 849, 907, 914, 916, 927, 930, 936, 952, 957, 978, 1002, 1006, 1007, 1012, 1013, 1014, 1020, 1024, 1048, 1083, 1087, 1096, 1103, 1108, 1117, 1120, 1124, 1161, 1166], "gige": 3, "vision": [3, 272, 360], "clientlibrari": 3, "softwarebasiert": 3, "kamerasimul": 3, "t\u00e4tigkeiten": 3, "hardwareteil": 3, "rs232": [3, 4, 194], "lagesensor": 3, "anpassung": 3, "cryptsetup": 3, "filesystemverschl\u00fcsselung": 3, "anforderungen": [3, 1155], "applik": [3, 171], "august": [3, 23], "logistik": 3, "autom": [3, 193, 206, 237, 251, 293, 360, 907, 918, 925, 998, 1000, 1008, 1108], "beteiligten": 3, "protokol": [3, 4, 1165, 1172, 1177], "server": [3, 136, 158, 161, 167, 173, 194, 206, 217, 226, 242, 249, 252, 263, 267, 274, 284, 288, 310, 316, 322, 445, 491, 505, 836, 910, 923, 925, 933, 978, 1120, 1136, 1153, 1172], "zu": [3, 6, 8, 162, 163, 168, 171, 172, 177, 181, 187, 198, 199, 202, 204, 208, 217, 218, 233, 234, 243, 245, 249, 257, 264, 342, 347, 360, 832, 1155, 1156, 1157, 1158, 1159, 1160, 1165, 1168, 1171, 1172, 1173, 1174, 1175, 1177, 1178, 1179], "sp": [3, 677], "tcp": [3, 154, 161, 178, 194, 299, 908, 933, 1124, 1165, 1172, 1176, 1178], "autonomen": 3, "fahrzeugen": 3, "kundenapplikationen": 3, "autonom": [3, 196, 907, 1115], "fahrzeug": 3, "mikrocontrol": 3, "seriel": [3, 4, 1165, 1167], "beratend": 3, "versionskontrol": [3, 23, 167, 1173], "architektur": [3, 23, 167, 360], "2008": [3, 165, 229, 1033], "ylog": [3, 23], "gmbh": [3, 23, 451], "dobl": [3, 23], "heizsystem": 3, "parametrisierung": 3, "anlag": [3, 202], "mit": [3, 4, 5, 7, 8, 23, 150, 162, 163, 171, 172, 173, 177, 179, 181, 189, 193, 194, 198, 199, 200, 203, 204, 207, 208, 210, 217, 218, 219, 220, 233, 242, 243, 245, 246, 249, 257, 288, 338, 342, 343, 347, 359, 361, 897, 1063, 1155, 1157, 1158, 1159, 1160, 1165, 1167, 1171, 1173, 1174, 1175, 1177, 1178, 1179], "iar": 3, "arm": [3, 153, 165, 206, 383, 790, 810, 811, 914, 927, 981, 984, 985, 996], "workbench": 3, "segger": [3, 154], "embo": [3, 154], "vba": 3, "excel": [3, 79, 155, 193, 219, 1099, 1113], "verteilung": 3, "microsoft": [3, 11, 160, 161, 164, 166, 170, 181, 189, 259, 261, 270, 279, 281, 360, 362, 410, 426, 849, 1099, 1155], "net": [3, 23, 39, 43, 116, 134, 140, 171, 172, 197, 249, 255, 322, 450, 526, 527, 804, 810, 837, 838, 898, 933, 1121], "versionskontrollinfrastruktur": 3, "assoziiert": [3, 173, 1174, 1175], "script": [3, 38, 62, 144, 147, 150, 153, 155, 160, 161, 170, 185, 193, 194, 196, 221, 223, 229, 239, 242, 269, 270, 290, 333, 342, 359, 361, 443, 451, 462, 713, 810, 852, 855, 870, 998, 1009, 1035, 1036, 1060, 1063, 1143, 1156, 1167], "shell": [3, 4, 32, 98, 100, 102, 105, 116, 170, 174, 193, 194, 196, 234, 242, 260, 269, 290, 310, 322, 327, 328, 341, 342, 343, 344, 347, 359, 361, 363, 445, 451, 473, 487, 515, 516, 517, 518, 519, 520, 521, 522, 525, 567, 740, 761, 762, 763, 810, 833, 837, 838, 839, 840, 843, 844, 845, 847, 848, 851, 852, 854, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 870, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 885, 886, 887, 888, 898, 899, 900, 903, 906, 907, 917, 918, 919, 920, 921, 929, 935, 936, 937, 945, 947, 950, 951, 961, 964, 967, 969, 984, 986, 988, 989, 990, 991, 992, 993, 994, 995, 998, 1034, 1035, 1037, 1058, 1060, 1086, 1148, 1156, 1163, 1165, 1167, 1168, 1172, 1173, 1174, 1176], "oststeiermark": 3, "erweiterung": [3, 360], "buildumgebung": 3, "cmake": [3, 4, 5, 44, 66, 73, 74, 75, 79, 88, 98, 107, 116, 151, 160, 165, 170, 181, 184, 216, 232, 259, 261, 279, 281, 345, 359, 361, 362, 453, 455, 457, 458, 461, 462, 463, 464, 465, 473, 487, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 567, 587, 763, 764, 906, 994, 1146, 1168], "www": [3, 20, 23, 59, 60, 63, 86, 150, 160, 169, 171, 191, 194, 195, 267, 362, 729, 766, 781, 787, 811, 950, 1119, 1121], "org": [3, 4, 23, 62, 140, 146, 150, 153, 157, 161, 165, 171, 173, 184, 194, 197, 214, 223, 229, 230, 239, 242, 246, 267, 280, 307, 346, 362, 766, 781, 783, 787, 810, 811, 950, 996, 998, 1032, 1053, 1063, 1102, 1119, 1136, 1137], "confix": [3, 151], "2009": [3, 1108], "schulungen": [3, 6, 23, 150, 151, 168], "dem": [3, 5, 8, 23, 162, 163, 171, 172, 173, 177, 181, 194, 198, 208, 217, 220, 233, 234, 243, 245, 257, 288, 342, 347, 360, 361, 970, 1155, 1156, 1157, 1159, 1160, 1165, 1167, 1174, 1175, 1177], "umkrei": 3, "softwareentwicklung": [3, 4, 167], "nicht": [3, 5, 7, 23, 37, 162, 163, 168, 171, 177, 181, 198, 199, 202, 207, 210, 229, 234, 236, 242, 249, 255, 274, 284, 337, 342, 360, 898, 1156, 1157, 1158, 1159, 1160, 1165, 1167, 1168, 1171, 1172, 1173, 1174, 1177, 1178, 1179], "from": [3, 5, 8, 13, 21, 27, 33, 34, 35, 36, 39, 44, 53, 54, 56, 62, 64, 66, 69, 74, 75, 79, 82, 83, 85, 87, 91, 98, 99, 100, 102, 103, 104, 107, 110, 111, 112, 113, 116, 117, 118, 119, 120, 122, 123, 128, 133, 136, 143, 147, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 167, 169, 170, 171, 173, 174, 176, 177, 182, 186, 187, 190, 191, 193, 194, 195, 196, 198, 204, 205, 206, 211, 213, 214, 215, 216, 218, 220, 221, 223, 227, 229, 230, 236, 237, 239, 240, 243, 244, 246, 249, 251, 254, 258, 259, 261, 263, 264, 266, 269, 272, 276, 279, 280, 281, 282, 283, 286, 288, 290, 291, 292, 293, 298, 301, 304, 306, 308, 309, 314, 315, 316, 318, 319, 320, 321, 326, 327, 328, 329, 330, 331, 332, 333, 335, 339, 341, 342, 344, 345, 346, 347, 349, 350, 363, 364, 370, 372, 373, 377, 380, 383, 386, 387, 388, 391, 395, 402, 404, 405, 410, 411, 417, 418, 421, 424, 425, 427, 428, 429, 431, 433, 437, 438, 439, 441, 445, 446, 447, 449, 450, 452, 453, 457, 460, 461, 462, 463, 465, 467, 468, 469, 474, 478, 488, 492, 494, 510, 511, 512, 513, 515, 518, 521, 523, 524, 525, 526, 527, 545, 553, 556, 562, 567, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580, 582, 584, 585, 587, 588, 598, 602, 603, 620, 632, 639, 642, 644, 650, 653, 660, 664, 667, 668, 669, 671, 675, 680, 684, 689, 695, 701, 706, 707, 719, 721, 725, 726, 727, 728, 731, 733, 739, 741, 745, 753, 758, 759, 760, 761, 762, 763, 764, 765, 766, 769, 779, 781, 785, 790, 792, 798, 802, 810, 811, 812, 813, 818, 820, 822, 830, 835, 836, 837, 838, 841, 842, 845, 846, 847, 849, 852, 853, 854, 860, 862, 867, 869, 870, 871, 872, 873, 875, 876, 889, 894, 902, 903, 906, 907, 909, 910, 911, 912, 915, 916, 919, 923, 927, 930, 931, 932, 933, 934, 937, 940, 942, 943, 945, 947, 950, 953, 958, 963, 964, 969, 970, 972, 981, 982, 987, 996, 998, 1000, 1002, 1007, 1008, 1009, 1012, 1015, 1016, 1017, 1018, 1019, 1020, 1023, 1027, 1030, 1031, 1032, 1035, 1036, 1039, 1042, 1051, 1054, 1055, 1057, 1058, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1105, 1106, 1109, 1110, 1111, 1112, 1114, 1116, 1118, 1120, 1121, 1122, 1123, 1124, 1128, 1129, 1130, 1133, 1135, 1136, 1138, 1140, 1141, 1143, 1145, 1148, 1150, 1153, 1164, 1171], "scratch": [3, 42, 186, 914, 1115], "mathia": [3, 1156], "kettner": [3, 150], "novemb": [3, 23], "bodenseo": [3, 1172], "singen": 3, "bodense": [3, 1172], "spielesoftwar": 3, "entwurf": [3, 23], "systemschnittstellen": [3, 1174], "driverentwicklung": [3, 167], "powerpc": 3, "vanilla": [3, 157], "kernel": [3, 4, 5, 43, 62, 66, 79, 111, 112, 136, 139, 143, 144, 149, 150, 151, 153, 154, 156, 164, 165, 166, 167, 170, 172, 187, 194, 226, 239, 242, 249, 252, 267, 270, 274, 284, 288, 310, 316, 322, 328, 348, 359, 361, 403, 425, 438, 763, 764, 765, 766, 767, 769, 770, 771, 772, 773, 775, 777, 779, 780, 781, 782, 789, 790, 791, 793, 795, 796, 797, 798, 799, 800, 801, 803, 805, 806, 807, 808, 809, 814, 816, 819, 821, 822, 823, 824, 825, 828, 830, 831, 835, 841, 845, 847, 848, 849, 854, 898, 903, 906, 910, 912, 913, 915, 916, 927, 930, 933, 934, 936, 939, 950, 952, 953, 966, 968, 969, 972, 977, 981, 982, 984, 1156, 1165, 1176], "abteilungsleitung": 3, "ag": [3, 32, 159, 161, 173, 187, 229, 232, 274, 336, 434, 652, 653, 654, 655, 656, 658, 659, 660, 661, 662, 663, 664, 763, 835, 984, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1133], "realtim": [4, 5, 79, 81, 167, 170, 171, 270, 343, 344, 355, 356, 361, 739, 741, 763, 808, 812, 815, 818, 829, 906, 910, 915, 916, 947, 966, 967, 969, 978, 1175, 1176, 1177], "hardwareintegr": [4, 167], "netzwerkprogrammierung": [4, 1165, 1178], "multithread": [4, 29, 59, 63, 73, 74, 75, 76, 79, 149, 150, 154, 156, 167, 186, 190, 221, 230, 240, 257, 279, 281, 309, 351, 355, 356, 360, 361, 426, 436, 667, 695, 733, 762, 763, 955, 960, 969, 982, 983, 1009, 1018, 1106, 1108, 1161, 1165, 1176], "kerneldriv": 4, "rs485": 4, "In": [4, 6, 7, 23, 42, 44, 50, 60, 64, 98, 104, 105, 107, 111, 112, 116, 133, 134, 142, 153, 154, 155, 156, 158, 160, 163, 165, 167, 169, 170, 178, 182, 187, 192, 199, 202, 206, 207, 215, 223, 229, 232, 236, 239, 240, 242, 243, 246, 254, 270, 279, 281, 288, 297, 313, 319, 327, 337, 342, 359, 383, 397, 450, 452, 455, 456, 462, 467, 472, 473, 474, 487, 488, 489, 491, 493, 494, 510, 513, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 527, 532, 534, 567, 571, 574, 575, 578, 582, 583, 590, 593, 596, 612, 618, 622, 631, 634, 635, 640, 645, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 667, 668, 676, 680, 684, 689, 707, 714, 717, 723, 727, 732, 734, 740, 748, 760, 761, 762, 763, 771, 776, 783, 808, 810, 822, 839, 842, 843, 852, 854, 856, 860, 862, 864, 866, 881, 882, 906, 908, 914, 916, 919, 923, 926, 933, 941, 944, 947, 949, 957, 963, 968, 970, 978, 985, 989, 990, 991, 992, 994, 1005, 1006, 1008, 1012, 1015, 1016, 1020, 1021, 1027, 1028, 1032, 1035, 1049, 1050, 1053, 1054, 1055, 1065, 1066, 1076, 1085, 1091, 1096, 1104, 1108, 1117, 1120, 1124, 1129, 1130, 1132, 1133, 1143, 1144, 1158, 1162, 1165, 1172, 1174], "userspac": [4, 82, 86, 87, 129, 134, 139, 154, 155, 226, 242, 249, 252, 267, 270, 274, 284, 288, 310, 316, 322, 360, 438, 445, 763, 768, 779, 787, 788, 796, 802, 808, 812, 818, 822, 826, 828, 846, 848, 906, 909, 913, 916, 927, 947, 949, 950, 968, 972, 978, 1165, 1166], "host": [4, 109, 153, 160, 165, 322, 339, 353, 790, 811, 908, 914, 985, 987, 996, 1119, 1124, 1136], "devic": [4, 33, 70, 73, 74, 75, 79, 85, 90, 117, 134, 139, 153, 154, 159, 172, 193, 201, 283, 343, 344, 345, 510, 526, 527, 737, 739, 741, 761, 763, 772, 779, 780, 781, 787, 788, 791, 792, 794, 801, 810, 812, 814, 819, 825, 826, 828, 829, 831, 843, 846, 849, 852, 892, 906, 915, 927, 930, 936, 944, 950, 969, 972, 973, 975, 978, 994, 1019, 1156, 1165, 1166, 1167, 1172], "libusb": [4, 154], "gadgetf": [4, 154], "modbu": [4, 171], "verschiedenen": [4, 23, 181, 198, 1158, 1159, 1171, 1177], "rto": [4, 154], "yocto": [4, 139, 143, 144, 165, 763, 810, 904, 987, 1156], "programmiersprachen": [4, 8, 198, 208, 217, 233, 245, 1160, 1177], "incl": [4, 23, 151, 1167], "buildsystem": 4, "autoconf": [4, 62, 165], "automak": [4, 160, 165, 998, 1168], "meson": [4, 160, 165, 976, 980, 998], "ninja": [4, 32, 165, 452, 986, 998], "make": [4, 13, 17, 43, 44, 45, 62, 64, 66, 69, 71, 79, 81, 110, 118, 119, 121, 129, 134, 139, 144, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 169, 170, 174, 175, 178, 182, 183, 186, 190, 191, 192, 196, 205, 206, 213, 215, 216, 227, 230, 242, 246, 259, 261, 283, 288, 291, 296, 305, 312, 342, 345, 361, 394, 406, 410, 418, 425, 427, 429, 439, 445, 449, 452, 453, 454, 458, 460, 461, 463, 465, 467, 468, 469, 472, 488, 489, 494, 495, 512, 525, 527, 539, 545, 550, 556, 574, 585, 587, 589, 592, 604, 639, 641, 654, 667, 675, 680, 684, 721, 726, 727, 731, 741, 757, 758, 771, 778, 779, 783, 785, 788, 790, 810, 811, 827, 839, 849, 853, 855, 876, 889, 908, 909, 914, 915, 916, 937, 940, 942, 963, 966, 968, 970, 972, 977, 981, 984, 996, 998, 999, 1000, 1001, 1005, 1009, 1012, 1015, 1027, 1058, 1065, 1078, 1086, 1113, 1126, 1163, 1164, 1174], "perl": [4, 165, 709, 899, 1035], "leider": [4, 162, 229, 242, 249, 264, 1156, 1158], "objektorientiert": [4, 360, 1160], "ooa": 4, "ood": 4, "unit": [4, 73, 74, 75, 79, 83, 85, 98, 107, 116, 117, 124, 156, 174, 189, 190, 193, 194, 205, 214, 232, 246, 271, 272, 279, 283, 296, 312, 351, 355, 356, 432, 451, 452, 465, 491, 514, 520, 524, 553, 584, 713, 741, 742, 763, 764, 916, 968, 1050, 1058, 1108, 1120, 1142, 1163, 1164], "test": [4, 16, 17, 33, 40, 73, 74, 75, 79, 83, 85, 98, 116, 119, 132, 134, 150, 154, 156, 157, 159, 160, 161, 167, 170, 173, 174, 180, 181, 182, 185, 189, 190, 193, 205, 211, 214, 227, 229, 230, 232, 242, 259, 261, 281, 288, 297, 309, 313, 319, 351, 353, 355, 361, 362, 374, 436, 449, 450, 456, 460, 467, 468, 469, 470, 471, 472, 473, 476, 477, 479, 480, 489, 491, 492, 514, 516, 517, 518, 519, 520, 521, 522, 523, 525, 528, 529, 530, 531, 533, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 550, 562, 564, 569, 570, 571, 582, 583, 585, 586, 588, 589, 647, 658, 659, 660, 661, 662, 663, 672, 674, 677, 678, 679, 710, 716, 721, 725, 726, 727, 728, 730, 743, 757, 758, 759, 761, 763, 764, 768, 800, 810, 813, 815, 818, 826, 870, 908, 909, 914, 937, 992, 1000, 1031, 1040, 1050, 1054, 1057, 1077, 1102, 1108, 1114, 1115, 1120, 1128, 1147, 1149, 1151, 1154, 1164], "driven": [4, 45, 72, 79, 83, 154, 167, 170, 181, 190, 205, 232, 270, 272, 298, 301, 361, 449, 476, 586, 588, 589, 968, 974, 975, 1133, 1141, 1164], "develop": [4, 5, 21, 45, 72, 74, 79, 81, 83, 104, 105, 114, 155, 157, 159, 160, 161, 165, 167, 170, 178, 181, 189, 190, 193, 198, 205, 211, 216, 217, 224, 226, 227, 232, 237, 262, 267, 272, 297, 298, 301, 313, 341, 343, 344, 353, 359, 361, 427, 439, 445, 449, 454, 462, 473, 487, 515, 516, 517, 518, 519, 520, 521, 522, 525, 526, 527, 567, 586, 588, 589, 642, 666, 740, 762, 763, 764, 767, 770, 772, 773, 775, 777, 780, 782, 783, 784, 786, 789, 791, 793, 795, 797, 799, 801, 803, 805, 807, 809, 810, 811, 814, 816, 819, 821, 825, 828, 831, 840, 843, 844, 846, 849, 906, 908, 909, 929, 935, 937, 945, 947, 961, 964, 967, 969, 985, 986, 989, 990, 991, 992, 993, 995, 1001, 1033, 1063, 1065, 1108, 1141, 1142, 1163, 1176], "gui": [4, 117, 133, 153, 159, 165, 169, 232, 349, 350, 849, 952, 1174], "gtk": [4, 150], "qt": 4, "fast": [5, 43, 114, 161, 169, 193, 215, 230, 232, 246, 255, 305, 439, 545, 717, 731, 1056, 1137, 1173], "40": [5, 7, 23, 107, 150, 157, 164, 176, 187, 197, 202, 204, 207, 210, 213, 218, 219, 223, 226, 229, 234, 236, 239, 242, 246, 249, 252, 254, 255, 264, 267, 271, 274, 284, 288, 294, 306, 310, 316, 322, 334, 337, 373, 451, 472, 474, 488, 558, 559, 580, 726, 727, 728, 761, 892, 911, 914, 915, 916, 996, 1010, 1011, 1020, 1035], "jahren": 5, "wesentlichen": [5, 23, 189, 1157], "programmier": [5, 37, 359, 360, 1159, 1160, 1165, 1167, 1168, 1173, 1174], "bin": [5, 13, 23, 50, 64, 114, 116, 117, 121, 124, 127, 129, 133, 150, 153, 155, 165, 174, 177, 187, 204, 214, 223, 226, 229, 234, 239, 242, 246, 249, 252, 264, 267, 272, 274, 284, 288, 310, 316, 322, 342, 350, 452, 453, 454, 455, 457, 458, 459, 460, 463, 465, 510, 525, 526, 788, 810, 842, 845, 847, 852, 855, 866, 870, 871, 895, 896, 901, 914, 916, 932, 939, 942, 948, 962, 963, 972, 984, 985, 986, 996, 998, 1001, 1005, 1011, 1035, 1062, 1063, 1086, 1095, 1096, 1111, 1124, 1136, 1141, 1143, 1155], "ich": [5, 23, 65, 162, 163, 171, 172, 173, 177, 187, 197, 205, 236, 288, 342, 360, 1119, 1155, 1156, 1165, 1172, 1173, 1179], "heut": [5, 360, 1160, 1175], "feinen": 5, "situat": [5, 114, 142, 154, 156, 165, 186, 213, 523, 524, 527, 539, 601, 678, 804, 810, 861, 863, 907, 923, 942, 970, 987, 996, 999, 1000, 1048, 1156, 1161], "repertoir": [5, 8, 28, 169, 198, 208, 473], "schulungsmateri": [5, 23], "anbieten": 5, "k\u00f6nnen": [5, 23, 168, 171, 181, 187, 199, 212, 342, 343, 347, 360, 898, 1155, 1157, 1158, 1168, 1178, 1179], "da": [5, 7, 8, 65, 162, 163, 168, 171, 172, 173, 174, 181, 189, 193, 197, 198, 202, 205, 207, 208, 210, 214, 217, 218, 219, 223, 226, 233, 234, 236, 239, 242, 243, 245, 247, 255, 257, 264, 274, 284, 288, 306, 309, 316, 318, 322, 334, 337, 342, 347, 360, 898, 1155, 1156, 1157, 1158, 1159, 1160, 1165, 1167, 1171, 1172, 1173, 1174, 1175, 1178, 1179], "sich": [5, 23, 37, 162, 163, 168, 171, 172, 173, 177, 187, 189, 197, 218, 236, 239, 249, 343, 1155, 1156, 1158, 1159, 1160, 1165, 1168, 1172, 1173, 1174, 1177, 1178, 1179], "jahrelangen": 5, "erfahrung": [5, 243, 1157], "entwickelt": [5, 181, 1165, 1172, 1174], "hat": [5, 8, 23, 37, 157, 162, 163, 171, 172, 173, 174, 177, 181, 187, 189, 197, 198, 202, 204, 208, 219, 239, 294, 306, 335, 342, 360, 1034, 1155, 1158, 1160, 1165, 1172, 1173, 1174, 1177, 1178, 1179], "al": [5, 8, 23, 32, 98, 162, 163, 168, 171, 172, 173, 177, 179, 181, 189, 198, 199, 206, 208, 210, 218, 236, 237, 239, 247, 251, 293, 343, 360, 577, 726, 835, 871, 892, 897, 898, 930, 1108, 1155, 1158, 1160, 1165, 1171, 1172, 1173, 1174, 1177], "einzelunternehm": [5, 23], "werd": [5, 1155], "erster": 5, "lini": 5, "firmen": [5, 23], "gebucht": [5, 11, 163, 177, 189, 360], "um": [5, 23, 32, 162, 163, 171, 173, 177, 181, 187, 197, 198, 236, 249, 264, 360, 1155, 1157, 1158, 1159, 1160, 1165, 1171, 1175], "mitarbeit": [5, 23], "weiterzubilden": 5, "entwickeln": [5, 181], "oder": [5, 23, 150, 171, 177, 181, 187, 198, 199, 204, 218, 227, 236, 243, 870, 898, 1133, 1155, 1158, 1159, 1165, 1168, 1171, 1172, 1173, 1175, 1178, 1179], "damit": [5, 23, 162, 187, 217, 243, 342, 347, 360, 1156, 1174, 1178], "arbeiten": [5, 23, 187, 198, 1171], "softwaretest": 5, "produktingenieur": 5, "program": [5, 8, 29, 30, 42, 59, 63, 73, 74, 75, 77, 79, 85, 86, 91, 98, 102, 111, 112, 116, 117, 121, 124, 127, 129, 133, 134, 147, 149, 150, 151, 153, 154, 155, 156, 159, 161, 164, 165, 167, 169, 172, 174, 175, 177, 178, 182, 189, 190, 191, 193, 194, 195, 200, 205, 206, 211, 214, 215, 221, 223, 224, 227, 230, 233, 237, 240, 243, 244, 245, 251, 256, 260, 269, 272, 273, 276, 279, 281, 289, 290, 291, 293, 297, 313, 315, 321, 323, 327, 328, 329, 330, 331, 332, 333, 339, 341, 342, 343, 344, 345, 346, 347, 348, 353, 355, 356, 359, 361, 366, 368, 369, 372, 374, 375, 377, 378, 379, 380, 383, 385, 388, 390, 395, 408, 417, 421, 422, 424, 426, 428, 429, 436, 438, 441, 443, 444, 445, 446, 450, 451, 452, 456, 457, 461, 462, 465, 467, 473, 477, 487, 488, 489, 493, 494, 495, 510, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 525, 527, 532, 534, 556, 562, 567, 568, 574, 575, 590, 593, 596, 612, 618, 622, 631, 632, 634, 635, 640, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 669, 676, 707, 709, 712, 717, 722, 723, 727, 732, 734, 740, 748, 760, 762, 763, 764, 768, 779, 781, 790, 810, 824, 826, 827, 840, 842, 843, 844, 845, 846, 847, 850, 852, 853, 854, 865, 870, 873, 899, 903, 906, 907, 909, 912, 913, 914, 915, 923, 927, 930, 932, 933, 934, 935, 936, 937, 940, 941, 942, 943, 945, 949, 950, 954, 958, 961, 964, 967, 968, 969, 970, 974, 975, 977, 982, 983, 985, 992, 996, 998, 1001, 1002, 1003, 1008, 1009, 1011, 1017, 1018, 1019, 1020, 1031, 1034, 1038, 1039, 1042, 1043, 1046, 1050, 1051, 1053, 1060, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1109, 1110, 1111, 1113, 1114, 1115, 1117, 1118, 1120, 1121, 1122, 1124, 1128, 1135, 1136, 1138, 1140, 1141, 1145, 1148, 1157, 1158, 1159, 1160, 1161, 1163, 1164, 1166, 1167, 1168], "gem\u00e4\u00df": [5, 23, 163], "herkunft": [5, 1179], "mein": [5, 23, 162, 163, 168, 172, 173, 187, 197, 198, 217, 322, 360, 909, 977, 1156, 1171], "muttersprach": [5, 23], "ist": [5, 7, 8, 162, 163, 168, 171, 172, 173, 177, 181, 189, 197, 198, 202, 204, 207, 208, 210, 213, 217, 219, 223, 226, 227, 232, 233, 234, 236, 239, 242, 245, 249, 255, 264, 274, 288, 306, 316, 322, 334, 337, 338, 342, 347, 360, 405, 970, 1126, 1155, 1156, 1157, 1158, 1159, 1160, 1165, 1168, 1171, 1172, 1173, 1174, 1175, 1177, 1178, 1179], "umfasst": [5, 163], "weiterf\u00fchrend": [5, 23], "materi": [5, 8, 12, 13, 14, 17, 23, 27, 66, 98, 107, 147, 150, 151, 154, 168, 169, 186, 189, 190, 191, 193, 195, 196, 198, 200, 201, 205, 208, 211, 214, 216, 217, 220, 221, 224, 227, 230, 232, 233, 245, 248, 251, 254, 258, 259, 261, 263, 266, 273, 276, 282, 283, 287, 293, 297, 298, 301, 304, 305, 308, 309, 313, 315, 321, 342, 350, 360, 452, 454, 455, 456, 457, 458, 460, 461, 463, 465, 467, 468, 469, 470, 471, 472, 474, 476, 479, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 523, 525, 528, 529, 530, 531, 533, 535, 536, 537, 538, 540, 541, 542, 543, 544, 567, 647, 727, 761, 764, 912, 923, 948, 951, 1008, 1009, 1011, 1031, 1032, 1060, 1110, 1122, 1123, 1135, 1146, 1150, 1158, 1160, 1163, 1165, 1166, 1172], "stark": 5, "gefragt": 5, "sind": [5, 7, 23, 162, 163, 172, 173, 177, 181, 189, 198, 199, 204, 207, 210, 226, 243, 322, 342, 347, 360, 897, 898, 970, 1155, 1158, 1159, 1160, 1165, 1167, 1168, 1171, 1172, 1174, 1175, 1178, 1179], "letzter": 5, "betreffend": 5, "neuen": [5, 1160], "standard": [5, 34, 35, 36, 38, 107, 116, 146, 161, 182, 186, 191, 193, 195, 216, 223, 229, 238, 239, 242, 246, 257, 270, 272, 296, 312, 319, 333, 342, 343, 344, 345, 347, 363, 364, 365, 371, 372, 377, 378, 382, 427, 515, 534, 553, 567, 568, 612, 618, 622, 629, 630, 631, 632, 634, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 684, 689, 715, 717, 719, 720, 761, 763, 850, 853, 854, 870, 903, 917, 933, 939, 942, 955, 958, 982, 1012, 1031, 1032, 1048, 1121, 1133, 1137, 1151, 1157, 1158, 1160, 1161, 1162, 1163, 1167], "absolut": [5, 8, 29, 66, 91, 100, 116, 152, 156, 161, 167, 170, 177, 187, 190, 191, 193, 195, 206, 211, 215, 223, 229, 230, 237, 239, 240, 242, 243, 246, 251, 254, 260, 263, 266, 269, 270, 273, 276, 282, 283, 287, 290, 291, 293, 298, 301, 304, 305, 308, 309, 315, 321, 328, 329, 330, 331, 332, 333, 339, 341, 342, 345, 360, 445, 473, 487, 515, 516, 517, 518, 519, 520, 521, 522, 525, 567, 737, 740, 762, 763, 764, 808, 820, 836, 837, 838, 839, 840, 843, 844, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 870, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 890, 906, 926, 929, 935, 937, 945, 947, 961, 964, 967, 969, 986, 988, 989, 990, 991, 992, 993, 994, 995, 1001, 1009, 1016, 1017, 1018, 1019, 1023, 1031, 1042, 1051, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1109, 1110, 1114, 1115, 1118, 1121, 1122, 1124, 1128, 1131, 1133, 1135, 1138, 1140, 1145], "beginn": [5, 8, 29, 32, 79, 91, 151, 152, 162, 167, 170, 181, 187, 190, 191, 193, 195, 206, 221, 224, 225, 227, 230, 237, 240, 243, 247, 254, 266, 273, 276, 282, 283, 293, 298, 301, 304, 305, 308, 309, 315, 321, 328, 329, 330, 331, 332, 333, 341, 342, 345, 387, 695, 763, 764, 1009, 1016, 1017, 1018, 1019, 1023, 1031, 1033, 1039, 1042, 1051, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1109, 1110, 1114, 1115, 1118, 1121, 1122, 1124, 1128, 1135, 1138, 1140, 1145], "advanc": [5, 8, 29, 79, 91, 151, 161, 167, 170, 175, 178, 181, 191, 195, 203, 206, 211, 221, 226, 227, 237, 251, 273, 293, 315, 321, 328, 329, 330, 331, 332, 333, 341, 342, 343, 344, 345, 359, 437, 439, 441, 446, 447, 599, 669, 707, 742, 760, 762, 763, 764, 951, 1008, 1009, 1011, 1016, 1017, 1018, 1019, 1023, 1031, 1033, 1042, 1051, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1109, 1110, 1113, 1114, 1115, 1118, 1121, 1122, 1124, 1128, 1135, 1138, 1140, 1145, 1148, 1162], "product": [5, 8, 29, 38, 43, 79, 86, 91, 156, 167, 170, 190, 191, 193, 195, 211, 230, 237, 240, 243, 251, 254, 263, 266, 273, 276, 278, 282, 283, 287, 293, 298, 301, 304, 305, 308, 309, 315, 321, 328, 329, 330, 331, 332, 333, 341, 342, 345, 445, 449, 465, 763, 764, 907, 916, 987, 1001, 1009, 1016, 1017, 1018, 1019, 1023, 1031, 1042, 1051, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1109, 1110, 1114, 1115, 1118, 1121, 1122, 1124, 1128, 1135, 1138, 1140, 1145], "gro\u00dfe": [5, 37, 187, 1174], "thema": [5, 23, 172, 189, 243, 257, 342, 347, 1155], "einfach": [5, 173, 187, 198, 202, 284, 1159, 1160, 1165, 1171, 1173, 1175, 1177, 1179], "doch": [5, 210, 284, 294, 360, 1177], "m\u00e4chtig": 5, "vermutlich": [5, 187, 1177], "grund": [5, 1158, 1165], "warum": [5, 7, 23, 198, 199, 207, 249, 1165, 1171, 1172, 1177, 1179], "gern": [5, 187, 1155, 1165, 1172], "nachgefragt": 5, "werden": [5, 8, 37, 162, 163, 168, 171, 172, 173, 181, 187, 189, 198, 199, 202, 208, 217, 218, 233, 245, 257, 898, 1155, 1156, 1157, 1158, 1159, 1160, 1165, 1167, 1168, 1171, 1172, 1174, 1175, 1177, 1178, 1179], "deren": [5, 23, 171, 193, 1160, 1173, 1177, 1178], "kernkompetenz": 5, "liegt": [5, 23, 162, 173, 177, 246, 1159, 1175], "sondern": [5, 173, 187, 198, 1156, 1165, 1168, 1171, 1178], "eher": [5, 162, 198, 1157, 1171], "beiwerk": 5, "ihrem": [5, 23, 1155], "eigentlichen": 5, "job": [5, 165, 186, 196, 255, 432, 907, 932, 933, 934, 1003, 1021, 1033, 1037, 1113, 1141], "schreiben": [5, 177, 199, 342, 343, 347, 1158, 1175, 1177], "physik": [5, 177], "z": [5, 38, 110, 173, 174, 177, 187, 197, 229, 230, 242, 245, 267, 294, 322, 372, 382, 393, 394, 455, 588, 651, 721, 836, 897, 982, 1034, 1156, 1165, 1167, 1172], "b": [5, 7, 21, 31, 32, 38, 64, 74, 75, 108, 136, 157, 169, 173, 174, 175, 177, 187, 192, 197, 202, 204, 207, 210, 213, 220, 223, 226, 227, 229, 234, 236, 239, 242, 246, 249, 252, 255, 264, 267, 271, 274, 284, 288, 294, 299, 306, 310, 316, 322, 334, 336, 337, 338, 374, 382, 384, 393, 409, 423, 426, 439, 569, 571, 579, 580, 586, 587, 588, 589, 594, 638, 639, 644, 645, 674, 680, 714, 721, 731, 761, 810, 841, 853, 870, 892, 897, 898, 914, 915, 916, 955, 971, 1000, 1006, 1015, 1018, 1030, 1038, 1039, 1045, 1048, 1050, 1052, 1053, 1058, 1121, 1124, 1136, 1156, 1165, 1167, 1172], "guter": [5, 1156], "ersatz": [5, 198, 1171], "matlab": [5, 175, 177, 230, 360, 1107, 1110], "tester": [5, 151, 1141, 1167], "basic": [5, 10, 28, 29, 31, 73, 74, 75, 78, 79, 84, 98, 102, 104, 107, 111, 112, 116, 120, 121, 122, 123, 126, 129, 133, 134, 150, 151, 154, 156, 161, 164, 169, 170, 175, 178, 181, 190, 203, 216, 221, 232, 240, 242, 245, 246, 270, 272, 279, 280, 281, 289, 297, 307, 311, 313, 319, 341, 342, 343, 344, 345, 347, 349, 353, 359, 361, 411, 417, 421, 424, 428, 437, 439, 441, 443, 444, 446, 447, 454, 456, 457, 464, 471, 473, 474, 487, 515, 516, 517, 518, 519, 520, 521, 522, 525, 532, 534, 545, 561, 562, 567, 593, 601, 606, 618, 622, 630, 631, 634, 635, 639, 640, 641, 652, 659, 660, 661, 662, 663, 664, 669, 672, 673, 675, 678, 680, 707, 724, 740, 748, 758, 760, 762, 763, 767, 770, 772, 777, 780, 787, 791, 801, 810, 812, 814, 819, 825, 828, 830, 831, 833, 837, 838, 844, 846, 851, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 890, 900, 906, 912, 913, 918, 919, 920, 921, 922, 932, 933, 934, 935, 937, 942, 945, 947, 955, 961, 964, 967, 969, 977, 980, 981, 985, 986, 988, 989, 990, 991, 992, 993, 994, 995, 996, 1001, 1039, 1067, 1094, 1095, 1106, 1107, 1116, 1122, 1128, 1129, 1131, 1146, 1150, 1162, 1163, 1176], "einf\u00fchrung": [5, 177, 181, 194, 196, 361, 1031, 1157, 1162, 1163, 1165, 1174, 1176], "anhand": [5, 6, 172, 181, 194, 196, 198, 199, 248, 359, 361, 1157, 1163, 1171, 1176], "beispielen": [5, 8, 168, 194, 196, 198, 208, 217, 233, 245, 360, 361, 1163, 1176], "memori": [5, 42, 43, 49, 55, 74, 79, 81, 98, 110, 111, 112, 149, 153, 154, 155, 157, 159, 166, 170, 174, 175, 176, 179, 181, 186, 192, 193, 201, 205, 206, 210, 223, 229, 232, 239, 242, 257, 279, 281, 283, 288, 305, 308, 360, 361, 363, 377, 383, 405, 406, 412, 425, 427, 428, 430, 436, 437, 439, 441, 445, 446, 447, 474, 489, 491, 493, 494, 495, 497, 499, 500, 507, 508, 515, 532, 534, 535, 559, 567, 568, 573, 574, 584, 602, 603, 604, 620, 639, 649, 664, 667, 669, 678, 705, 707, 712, 719, 724, 726, 727, 728, 760, 761, 762, 763, 772, 777, 780, 782, 787, 791, 801, 805, 806, 807, 810, 812, 814, 815, 819, 822, 828, 831, 841, 846, 848, 854, 906, 923, 932, 952, 954, 955, 968, 969, 1001, 1005, 1018, 1019, 1032, 1039, 1120, 1158, 1159, 1162, 1166, 1167, 1176], "weiter": [5, 23, 37, 162, 163, 187, 189, 198, 212, 236, 254, 284, 898, 1155, 1165, 1171, 1172, 1174, 1175, 1179], "standbein": [5, 1165], "mehreren": [5, 187, 203, 1178], "auspr\u00e4gungen": 5, "commandlin": [5, 8, 29, 31, 42, 81, 91, 100, 116, 147, 150, 172, 174, 194, 196, 206, 208, 211, 215, 221, 232, 233, 237, 243, 244, 245, 248, 251, 266, 273, 276, 282, 286, 287, 292, 293, 304, 314, 315, 320, 321, 326, 342, 343, 344, 345, 346, 360, 417, 421, 424, 428, 437, 441, 446, 447, 450, 452, 462, 473, 487, 513, 515, 516, 517, 518, 519, 520, 521, 522, 525, 567, 669, 707, 740, 760, 762, 763, 779, 810, 833, 837, 838, 839, 840, 843, 844, 850, 851, 852, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 871, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 890, 900, 906, 907, 915, 929, 935, 937, 945, 947, 961, 963, 964, 967, 969, 983, 984, 986, 988, 989, 990, 991, 992, 993, 994, 995, 1002, 1031, 1061, 1064, 1065, 1066, 1067, 1069, 1070, 1071, 1072, 1074, 1075, 1077, 1079, 1080, 1081, 1082, 1083, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1157, 1165, 1167, 1168, 1172, 1173, 1174], "konzept": [5, 23, 360, 1165, 1167, 1174], "zielpublikum": 5, "deckt": 5, "ungef\u00e4hr": [5, 162], "mehr": [5, 11, 23, 162, 171, 173, 197, 203, 223, 360, 1155, 1156, 1158, 1160, 1165, 1172, 1173, 1174, 1179], "kernentwickl": 5, "themen": [5, 23, 168, 179, 181, 1165], "applikationsentwicklung": 5, "direkt": [5, 23, 181, 1158, 1174], "systemschnittstel": 5, "schritt": 5, "geht": [5, 7, 8, 23, 65, 162, 163, 171, 173, 181, 187, 197, 198, 202, 207, 208, 217, 218, 233, 239, 245, 255, 337, 360, 898], "nur": [5, 23, 162, 168, 172, 173, 177, 187, 189, 197, 198, 202, 204, 212, 234, 337, 360, 1157, 1158, 1165, 1168, 1171, 1172, 1173, 1175, 1177, 1178, 1179], "mutig": 5, "pool": [5, 84, 215, 830, 969, 971], "absprach": [5, 1155], "individuel": [5, 23, 189, 1155], "zusammengestellt": 5, "schulungsverlauf": 5, "meisten": [5, 23, 181, 187, 360, 1156, 1177], "recht": [5, 7, 65, 122, 162, 163, 173, 181, 187, 198, 207, 322, 1171, 1172], "dynamisch": [5, 181, 212, 1158, 1160, 1175], "teilnehm": [5, 168, 177, 181, 189, 360, 1165, 1172], "haben": [5, 162, 163, 172, 177, 181, 189, 197, 198, 210, 360, 628, 1156, 1157, 1158, 1159, 1160, 1165, 1171, 1173, 1174, 1175, 1178], "oft": [5, 23, 162, 187, 189, 1159], "bed\u00fcrfniss": [5, 23, 189], "vorab": [5, 168, 181, 217], "bekannt": [5, 23, 187, 1160], "waren": [5, 172, 177, 1156, 1160], "wodurch": [5, 23], "auch": [5, 23, 162, 163, 168, 173, 177, 187, 199, 202, 204, 210, 213, 218, 239, 243, 249, 274, 337, 338, 360, 1155, 1156, 1157, 1158, 1159, 1165, 1168, 1172, 1177, 1179], "mal": [5, 163, 177, 187, 198, 249, 316, 360, 1156, 1160, 1171], "agenda": [5, 23, 27, 178, 283, 287, 291, 293, 297, 305, 309, 313, 315, 316, 319, 321, 359], "abgewichen": 5, "wird": [5, 7, 23, 162, 163, 168, 171, 172, 173, 181, 187, 197, 198, 204, 207, 236, 322, 342, 347, 360, 1155, 1156, 1159, 1160, 1165, 1167, 1168, 1171, 1172, 1173, 1174, 1175, 1177, 1178, 1179], "verh\u00e4ltni": 5, "vortrag": [5, 172, 1155], "\u00fcbungen": [5, 8, 168, 181, 189, 198, 199, 208, 217, 233, 245, 360, 1158, 1165, 1167, 1171, 1174], "ca": [5, 23, 32, 162, 164, 750, 1136], "50": [5, 7, 107, 110, 164, 175, 187, 192, 197, 202, 204, 207, 210, 213, 219, 223, 226, 229, 234, 236, 242, 246, 249, 252, 255, 264, 267, 271, 274, 284, 288, 294, 306, 310, 316, 322, 334, 337, 338, 343, 344, 434, 436, 452, 523, 558, 559, 892, 914, 915, 916, 1010, 1033, 1053, 1065, 1112, 1113, 1125, 1141], "kleiner": [5, 7, 207, 897], "den": [5, 163, 171, 172, 173, 177, 181, 187, 189, 197, 198, 203, 210, 217, 246, 294, 342, 343, 347, 360, 832, 1156, 1157, 1158, 1159, 1160, 1165, 1168, 1171, 1172, 1178, 1179], "teilnehmern": [5, 360, 1179], "pc": [5, 79, 109, 150, 206, 270, 328, 345, 348, 527, 908, 909, 915, 1156], "erledigt": 5, "speziel": [5, 168, 197, 198, 257, 1168, 1171, 1174, 1178], "fortgeschrittenen": 5, "programmierthemen": 5, "gruppenprojekt": 5, "gegenstand": [5, 1155], "denen": [5, 23, 162, 1165], "zusammenarbeiten": 5, "austauschmedium": 5, "solch": 5, "set": [5, 9, 14, 21, 29, 33, 59, 63, 66, 79, 86, 91, 109, 116, 117, 136, 154, 155, 156, 157, 158, 159, 160, 161, 165, 169, 170, 171, 174, 175, 186, 187, 190, 191, 193, 194, 195, 198, 199, 203, 204, 205, 209, 211, 212, 215, 217, 221, 222, 224, 225, 227, 228, 230, 231, 233, 235, 237, 238, 239, 244, 245, 247, 248, 250, 251, 253, 259, 261, 263, 265, 266, 268, 270, 272, 273, 275, 276, 279, 280, 281, 283, 285, 286, 287, 289, 292, 293, 295, 298, 301, 304, 305, 307, 308, 309, 311, 314, 315, 317, 320, 321, 323, 326, 342, 347, 349, 360, 362, 377, 383, 400, 405, 406, 415, 418, 430, 431, 439, 445, 453, 454, 455, 457, 459, 461, 462, 464, 469, 472, 474, 489, 494, 503, 504, 508, 517, 518, 523, 524, 525, 526, 543, 571, 572, 586, 587, 588, 589, 602, 671, 680, 695, 725, 726, 741, 761, 763, 781, 794, 796, 806, 810, 815, 820, 842, 849, 855, 871, 907, 909, 914, 916, 923, 928, 930, 936, 944, 948, 952, 957, 965, 966, 969, 970, 981, 983, 984, 985, 996, 999, 1005, 1008, 1009, 1012, 1021, 1022, 1031, 1032, 1035, 1039, 1044, 1063, 1085, 1096, 1103, 1104, 1106, 1108, 1110, 1113, 1114, 1115, 1117, 1121, 1135, 1136, 1148, 1150, 1153, 1164, 1171], "gew\u00f6hnlich": [5, 23], "github": [5, 8, 23, 42, 44, 66, 98, 107, 110, 116, 136, 138, 150, 151, 161, 165, 166, 168, 169, 172, 174, 181, 182, 183, 193, 195, 200, 201, 205, 206, 208, 215, 216, 217, 221, 223, 224, 227, 230, 232, 233, 237, 240, 243, 245, 248, 251, 254, 258, 259, 261, 262, 263, 266, 270, 273, 279, 280, 281, 283, 287, 291, 293, 297, 298, 301, 305, 309, 313, 315, 319, 321, 341, 346, 347, 348, 349, 356, 361, 362, 514, 545, 587, 766, 769, 771, 774, 776, 779, 788, 790, 800, 802, 810, 811, 812, 813, 818, 822, 909, 914, 916, 984, 985, 986, 988, 994, 998, 1000, 1001, 1002], "endprodukt": 5, "bleibt": [5, 23, 1175], "homepag": [5, 13, 158, 160, 168, 171, 172, 186, 213, 221, 223, 258, 259, 261, 436, 996, 1141], "erhalten": 5, "hier": [5, 8, 17, 23, 65, 162, 163, 168, 171, 172, 174, 177, 181, 189, 193, 197, 198, 204, 208, 214, 217, 218, 227, 233, 236, 245, 246, 288, 306, 360, 1155, 1158, 1165, 1171, 1172, 1174, 1175, 1177], "mix": [5, 29, 193, 200, 211, 214, 221, 224, 227, 228, 232, 234, 237, 266, 273, 286, 287, 292, 293, 295, 314, 315, 320, 321, 326, 388, 427, 430, 431, 433, 435, 578, 763, 1036, 1039, 1055, 1058, 1067, 1077, 1080, 1081, 1082, 1083, 1087, 1088, 1089, 1090, 1091, 1092, 1106, 1107, 1121, 1126, 1132, 1176], "j\u00fcngeren": 5, "2023": [5, 60, 61, 97, 107, 116, 271, 272, 275, 278, 289, 295, 306, 317, 359, 450, 451, 720], "10": [5, 7, 31, 64, 98, 103, 106, 107, 110, 116, 143, 150, 156, 157, 162, 164, 165, 175, 176, 187, 192, 194, 198, 199, 202, 204, 207, 210, 211, 213, 218, 219, 220, 221, 223, 224, 226, 227, 229, 234, 236, 239, 242, 246, 249, 251, 252, 254, 255, 265, 267, 272, 274, 281, 282, 283, 284, 287, 288, 293, 294, 299, 303, 306, 310, 316, 322, 328, 335, 336, 337, 338, 341, 355, 356, 359, 371, 373, 375, 377, 385, 403, 410, 427, 429, 443, 453, 463, 493, 513, 515, 516, 518, 521, 524, 529, 532, 552, 553, 558, 559, 561, 562, 567, 577, 580, 582, 589, 656, 657, 663, 667, 674, 678, 679, 705, 717, 726, 727, 728, 729, 739, 763, 800, 810, 818, 839, 841, 847, 866, 870, 872, 892, 894, 898, 901, 909, 914, 915, 916, 933, 942, 950, 977, 980, 984, 985, 986, 998, 999, 1005, 1010, 1011, 1021, 1039, 1040, 1047, 1069, 1070, 1090, 1096, 1107, 1108, 1112, 1113, 1136, 1141, 1153, 1171], "09": [5, 98, 114, 150, 157, 166, 190, 206, 271, 306, 316, 339, 359, 451, 454, 892, 915, 916, 940, 1035, 1112], "11": [5, 7, 40, 64, 107, 116, 150, 151, 166, 175, 176, 181, 182, 186, 187, 192, 193, 194, 198, 199, 202, 204, 207, 210, 213, 216, 218, 219, 220, 223, 228, 229, 230, 234, 236, 239, 242, 246, 249, 252, 255, 258, 259, 264, 268, 271, 274, 278, 284, 288, 294, 302, 305, 306, 317, 318, 322, 326, 334, 335, 336, 337, 338, 345, 348, 355, 356, 359, 361, 363, 377, 443, 445, 459, 471, 524, 552, 561, 562, 568, 570, 571, 573, 577, 579, 580, 586, 588, 598, 603, 605, 610, 623, 624, 625, 628, 641, 665, 669, 672, 675, 676, 681, 682, 683, 684, 694, 706, 707, 708, 709, 710, 711, 712, 714, 717, 718, 721, 723, 726, 727, 729, 730, 732, 739, 740, 741, 744, 746, 748, 760, 761, 763, 764, 835, 848, 892, 901, 955, 960, 984, 985, 986, 1034, 1040, 1045, 1063, 1097, 1099, 1103, 1105, 1107, 1110, 1112, 1113, 1124, 1141, 1153, 1160, 1161, 1162, 1171], "introduct": [5, 29, 73, 74, 75, 79, 98, 99, 100, 107, 116, 134, 167, 170, 215, 216, 230, 232, 240, 243, 251, 254, 260, 262, 263, 269, 270, 272, 279, 282, 283, 287, 290, 298, 301, 304, 305, 308, 341, 346, 350, 359, 361, 395, 404, 411, 417, 421, 424, 428, 437, 441, 446, 447, 487, 515, 516, 517, 518, 519, 520, 521, 522, 525, 532, 534, 545, 567, 575, 590, 593, 596, 612, 618, 622, 631, 634, 635, 640, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 667, 669, 676, 688, 695, 707, 723, 732, 740, 748, 760, 762, 763, 764, 812, 833, 837, 838, 839, 840, 843, 851, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 890, 900, 905, 906, 918, 919, 920, 921, 922, 929, 935, 937, 945, 947, 950, 961, 964, 967, 969, 986, 988, 989, 990, 991, 992, 993, 994, 995, 1031, 1104, 1105, 1106, 1115, 1135, 1140, 1162, 1176], "07": [5, 98, 107, 116, 150, 164, 166, 177, 190, 219, 220, 254, 259, 271, 272, 278, 294, 341, 355, 356, 359, 457, 837, 838, 914, 1035, 1063, 1107, 1112], "18": [5, 7, 64, 157, 164, 165, 169, 175, 176, 192, 197, 202, 204, 207, 210, 213, 214, 218, 219, 223, 226, 227, 229, 235, 236, 242, 246, 249, 252, 255, 264, 268, 270, 271, 274, 278, 284, 288, 294, 299, 306, 310, 316, 335, 337, 338, 341, 359, 577, 642, 706, 714, 726, 763, 774, 783, 810, 847, 853, 855, 889, 892, 906, 916, 940, 942, 976, 987, 994, 995, 996, 999, 1027, 1028, 1063, 1070, 1112, 1113], "For": [5, 40, 114, 116, 152, 153, 154, 158, 161, 164, 166, 167, 169, 170, 175, 178, 183, 184, 186, 190, 206, 211, 214, 221, 224, 227, 232, 242, 245, 247, 251, 259, 261, 262, 263, 287, 293, 298, 309, 353, 359, 361, 373, 374, 380, 395, 404, 411, 417, 421, 424, 426, 428, 437, 441, 446, 447, 464, 489, 545, 570, 577, 581, 594, 603, 623, 669, 707, 714, 717, 721, 726, 731, 760, 762, 763, 781, 796, 810, 837, 838, 847, 870, 906, 907, 915, 916, 917, 926, 930, 957, 978, 985, 986, 987, 994, 995, 999, 1032, 1033, 1043, 1050, 1058, 1081, 1086, 1108, 1111, 1113, 1115], "04": [5, 98, 106, 116, 137, 150, 161, 164, 166, 181, 182, 206, 254, 270, 271, 274, 278, 306, 339, 341, 359, 452, 763, 906, 987, 994, 995, 999, 1112, 1141], "20": [5, 7, 8, 23, 64, 150, 157, 159, 164, 173, 174, 175, 176, 187, 192, 197, 198, 202, 204, 207, 208, 210, 213, 218, 219, 223, 226, 229, 234, 236, 239, 242, 246, 249, 252, 254, 255, 264, 267, 271, 274, 278, 280, 284, 288, 295, 298, 299, 301, 306, 310, 316, 337, 338, 341, 359, 365, 367, 369, 385, 409, 449, 489, 517, 518, 523, 552, 553, 558, 559, 561, 562, 577, 674, 677, 678, 679, 688, 695, 717, 719, 720, 725, 726, 727, 728, 750, 829, 835, 855, 870, 892, 907, 914, 915, 916, 970, 987, 996, 1010, 1011, 1035, 1054, 1062, 1063, 1089, 1112, 1113, 1141, 1143, 1150], "clean": [5, 46, 47, 51, 53, 55, 56, 64, 125, 137, 169, 221, 240, 359, 427, 438, 439, 442, 448, 569, 667, 763, 764, 984, 986, 996, 1005, 1058, 1107], "code": [5, 21, 23, 28, 29, 33, 40, 42, 46, 47, 51, 53, 55, 56, 64, 66, 71, 74, 81, 86, 104, 105, 109, 116, 133, 137, 139, 147, 151, 153, 154, 155, 156, 157, 160, 161, 168, 169, 172, 174, 177, 178, 179, 181, 182, 183, 186, 189, 190, 191, 193, 195, 200, 205, 206, 210, 214, 215, 216, 221, 223, 224, 226, 229, 232, 237, 239, 240, 242, 243, 251, 261, 263, 266, 270, 272, 273, 276, 279, 281, 284, 286, 287, 288, 292, 293, 294, 297, 298, 301, 304, 305, 309, 313, 314, 315, 316, 318, 319, 320, 321, 326, 327, 328, 337, 342, 347, 359, 362, 369, 371, 375, 379, 385, 399, 405, 410, 426, 427, 431, 433, 435, 441, 442, 444, 445, 446, 447, 448, 452, 454, 455, 456, 458, 463, 464, 465, 467, 468, 469, 471, 472, 473, 474, 476, 477, 479, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525, 526, 528, 529, 530, 531, 533, 535, 536, 537, 538, 540, 541, 542, 543, 544, 548, 550, 551, 553, 554, 556, 557, 559, 560, 562, 563, 565, 566, 567, 568, 569, 570, 571, 573, 577, 578, 579, 580, 582, 583, 584, 585, 586, 587, 588, 589, 595, 597, 598, 599, 600, 601, 604, 605, 606, 607, 608, 610, 611, 614, 615, 616, 620, 624, 625, 626, 627, 628, 632, 638, 639, 641, 642, 644, 645, 647, 653, 656, 660, 661, 667, 668, 672, 674, 676, 677, 678, 680, 682, 684, 695, 704, 705, 706, 707, 709, 710, 711, 712, 714, 716, 721, 725, 726, 728, 729, 730, 731, 739, 741, 743, 745, 747, 749, 751, 752, 753, 754, 756, 757, 758, 759, 761, 762, 763, 764, 769, 774, 787, 788, 802, 808, 810, 815, 822, 825, 826, 828, 831, 849, 876, 906, 907, 915, 916, 931, 932, 948, 951, 955, 959, 968, 972, 974, 975, 977, 979, 981, 983, 984, 985, 986, 987, 988, 989, 991, 992, 994, 996, 1007, 1008, 1010, 1011, 1012, 1016, 1018, 1027, 1029, 1032, 1033, 1035, 1036, 1042, 1043, 1044, 1050, 1054, 1055, 1056, 1063, 1083, 1087, 1106, 1110, 1122, 1124, 1133, 1135, 1141, 1142, 1144, 1148, 1149, 1150, 1153, 1154, 1161, 1166, 1174, 1175, 1179], "With": [5, 29, 134, 137, 142, 155, 161, 181, 242, 251, 270, 272, 273, 276, 281, 288, 296, 298, 301, 305, 309, 312, 326, 359, 400, 429, 445, 455, 465, 466, 475, 487, 501, 515, 567, 676, 707, 762, 763, 764, 810, 839, 840, 906, 913, 914, 945, 947, 964, 982, 985, 996, 1027, 1031, 1106, 1122, 1126, 1128, 1130, 1137, 1161, 1163, 1164, 1166], "03": [5, 98, 106, 116, 150, 151, 159, 164, 166, 173, 181, 216, 237, 239, 242, 271, 272, 275, 278, 284, 297, 316, 338, 341, 345, 359, 361, 443, 450, 451, 452, 513, 545, 562, 568, 570, 571, 573, 577, 578, 580, 582, 585, 666, 872, 996, 1112, 1150, 1160], "28": [5, 7, 23, 98, 106, 117, 150, 157, 164, 165, 175, 176, 187, 192, 197, 202, 204, 207, 210, 213, 218, 219, 223, 226, 229, 234, 236, 239, 242, 246, 249, 252, 255, 264, 267, 271, 274, 278, 284, 288, 294, 306, 310, 316, 322, 336, 337, 338, 355, 356, 359, 451, 463, 510, 526, 527, 550, 559, 642, 689, 800, 852, 892, 916, 944, 985, 986, 998, 1065, 1112, 1153], "29": [5, 7, 98, 107, 164, 165, 175, 176, 187, 192, 197, 202, 204, 207, 210, 213, 218, 219, 223, 226, 229, 234, 236, 242, 246, 249, 252, 255, 264, 267, 271, 274, 278, 284, 288, 294, 306, 310, 317, 322, 334, 337, 341, 355, 356, 359, 451, 729, 774, 914, 916, 984, 987, 996, 1112], "sap": [5, 221, 272, 359, 1128], "13": [5, 6, 7, 64, 107, 137, 147, 157, 159, 166, 173, 175, 176, 187, 192, 195, 199, 202, 204, 207, 210, 213, 218, 220, 223, 226, 227, 229, 234, 236, 239, 242, 246, 249, 252, 255, 264, 267, 271, 272, 275, 278, 284, 288, 294, 299, 306, 310, 316, 322, 337, 338, 359, 443, 450, 455, 458, 569, 684, 726, 774, 852, 892, 915, 940, 950, 970, 998, 1005, 1007, 1048, 1059, 1112, 1113, 1136, 1171], "15": [5, 7, 62, 64, 107, 114, 116, 150, 153, 161, 164, 173, 175, 176, 184, 187, 190, 192, 198, 199, 202, 204, 206, 207, 210, 213, 218, 219, 223, 226, 229, 234, 236, 237, 239, 242, 246, 249, 252, 255, 264, 267, 271, 274, 278, 284, 289, 294, 298, 299, 301, 306, 310, 316, 322, 335, 337, 338, 339, 341, 348, 355, 356, 359, 451, 517, 518, 535, 536, 537, 538, 540, 541, 644, 704, 727, 749, 751, 753, 761, 839, 853, 907, 941, 950, 1020, 1111, 1112, 1113, 1133, 1136, 1171], "02": [5, 98, 107, 116, 150, 157, 164, 166, 173, 177, 203, 213, 240, 254, 271, 272, 278, 355, 356, 359, 443, 451, 452, 916, 984, 985, 986, 996, 998, 1112], "17": [5, 7, 64, 97, 107, 116, 159, 165, 169, 173, 175, 176, 187, 192, 194, 197, 202, 204, 207, 210, 213, 218, 219, 223, 228, 230, 231, 235, 236, 237, 239, 242, 246, 249, 255, 258, 259, 265, 267, 271, 274, 278, 284, 289, 294, 298, 299, 301, 306, 310, 316, 322, 334, 337, 338, 359, 577, 625, 666, 675, 684, 705, 717, 727, 746, 761, 774, 810, 841, 892, 916, 932, 938, 968, 972, 999, 1028, 1070, 1112, 1113, 1121, 1133], "tour": [5, 162, 221, 258, 259, 261, 281, 318, 319, 359, 360, 513, 665, 762, 763, 1107, 1161, 1162], "forc": [5, 31, 35, 153, 155, 159, 182, 242, 359, 360, 434, 449, 477, 573, 845, 923, 952, 986, 1107, 1161], "2022": [5, 98, 106, 107, 137, 166, 229, 235, 239, 242, 258, 259, 265, 268, 316, 355, 356, 359, 451, 462, 524, 695, 720, 724, 745, 761, 870, 872, 986, 996, 1063, 1107], "12": [5, 6, 7, 8, 40, 64, 107, 114, 116, 136, 150, 159, 164, 165, 166, 175, 176, 180, 187, 192, 198, 199, 202, 204, 207, 210, 213, 214, 218, 219, 220, 223, 226, 227, 231, 234, 236, 239, 242, 246, 249, 252, 254, 255, 264, 267, 270, 271, 272, 274, 278, 284, 288, 294, 299, 302, 305, 306, 308, 310, 317, 326, 336, 337, 341, 355, 356, 359, 427, 451, 452, 460, 545, 678, 684, 717, 761, 841, 852, 855, 870, 892, 894, 901, 914, 916, 918, 942, 950, 968, 984, 996, 998, 999, 1005, 1007, 1008, 1011, 1020, 1039, 1050, 1107, 1110, 1112, 1113, 1129, 1130, 1136, 1147, 1171], "01": [5, 64, 97, 98, 106, 107, 116, 150, 151, 159, 164, 166, 173, 177, 195, 206, 213, 220, 229, 235, 242, 254, 271, 272, 274, 278, 317, 339, 341, 355, 356, 359, 438, 451, 452, 465, 552, 553, 742, 839, 866, 916, 970, 972, 999, 1096, 1107, 1112, 1141], "A": [5, 13, 20, 23, 27, 28, 29, 33, 38, 39, 40, 41, 46, 47, 51, 53, 55, 56, 60, 62, 66, 70, 74, 75, 79, 83, 85, 86, 98, 99, 109, 110, 111, 112, 116, 117, 119, 121, 122, 123, 124, 125, 126, 133, 141, 153, 156, 157, 158, 159, 161, 166, 169, 170, 171, 174, 175, 176, 190, 192, 193, 194, 202, 206, 213, 215, 217, 223, 226, 229, 233, 239, 240, 242, 246, 254, 260, 262, 266, 269, 270, 281, 283, 288, 290, 291, 294, 301, 304, 305, 308, 322, 328, 334, 339, 343, 344, 359, 364, 367, 368, 380, 381, 382, 395, 400, 404, 410, 411, 413, 416, 417, 421, 424, 425, 426, 427, 428, 431, 433, 434, 435, 437, 439, 441, 446, 447, 449, 455, 462, 465, 466, 467, 471, 472, 475, 477, 487, 489, 501, 514, 515, 524, 526, 532, 567, 572, 573, 578, 580, 581, 582, 631, 632, 634, 635, 638, 649, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 669, 671, 684, 695, 705, 707, 710, 715, 716, 717, 721, 723, 727, 729, 733, 742, 748, 759, 760, 761, 762, 763, 764, 771, 785, 787, 804, 827, 839, 840, 843, 844, 849, 852, 853, 857, 858, 863, 867, 873, 903, 906, 913, 914, 916, 931, 935, 936, 939, 945, 947, 952, 953, 954, 955, 964, 969, 970, 981, 982, 985, 987, 992, 994, 995, 996, 999, 1000, 1007, 1008, 1012, 1013, 1014, 1015, 1016, 1018, 1019, 1020, 1021, 1038, 1039, 1046, 1048, 1053, 1059, 1063, 1064, 1065, 1070, 1093, 1096, 1099, 1110, 1114, 1116, 1117, 1120, 1124, 1127, 1128, 1134, 1136, 1142, 1143, 1153, 1161, 1162, 1163, 1164, 1166, 1176], "new": [5, 16, 32, 42, 44, 49, 50, 55, 64, 66, 79, 108, 114, 121, 122, 151, 154, 156, 157, 158, 159, 160, 161, 164, 169, 181, 186, 206, 223, 227, 229, 239, 242, 246, 254, 264, 281, 287, 288, 305, 328, 353, 359, 361, 388, 418, 422, 423, 431, 435, 449, 452, 472, 474, 492, 496, 508, 510, 514, 523, 525, 526, 535, 536, 537, 538, 540, 541, 545, 551, 559, 568, 569, 574, 577, 623, 625, 636, 638, 639, 644, 661, 665, 669, 671, 672, 676, 677, 678, 680, 683, 694, 705, 708, 712, 714, 716, 718, 719, 723, 724, 725, 726, 727, 728, 732, 733, 740, 742, 744, 748, 752, 753, 754, 760, 763, 764, 767, 804, 810, 818, 842, 866, 889, 907, 910, 914, 916, 939, 940, 941, 950, 952, 953, 959, 971, 1002, 1021, 1036, 1039, 1048, 1087, 1112, 1113, 1130, 1136, 1141, 1160, 1161, 1162, 1164], "languag": [5, 12, 29, 43, 59, 63, 79, 91, 116, 134, 150, 175, 177, 189, 190, 191, 193, 195, 198, 200, 205, 206, 208, 211, 213, 214, 215, 217, 233, 237, 240, 243, 245, 248, 273, 276, 279, 280, 281, 308, 328, 329, 330, 331, 332, 333, 342, 345, 359, 361, 363, 365, 377, 380, 391, 395, 404, 409, 411, 417, 421, 422, 424, 437, 441, 446, 449, 454, 456, 473, 487, 488, 489, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 532, 534, 567, 568, 575, 580, 582, 590, 593, 595, 596, 612, 618, 622, 631, 634, 635, 640, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 669, 671, 676, 683, 684, 694, 708, 713, 715, 718, 723, 727, 730, 731, 732, 740, 747, 748, 760, 762, 763, 764, 842, 899, 907, 908, 984, 986, 1003, 1012, 1016, 1017, 1018, 1019, 1020, 1023, 1028, 1032, 1036, 1038, 1039, 1042, 1051, 1059, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1110, 1114, 1118, 1121, 1122, 1124, 1128, 1133, 1135, 1138, 1140, 1145, 1150, 1158, 1161, 1162, 1163, 1164, 1166], "start": [5, 8, 42, 111, 112, 121, 122, 148, 150, 153, 154, 155, 156, 159, 164, 165, 169, 173, 178, 183, 190, 191, 193, 194, 195, 196, 198, 200, 201, 202, 205, 206, 208, 211, 215, 216, 221, 227, 236, 242, 243, 252, 254, 267, 270, 272, 274, 276, 279, 281, 283, 288, 291, 306, 308, 309, 316, 319, 322, 328, 345, 359, 362, 369, 372, 373, 382, 385, 399, 422, 443, 444, 457, 465, 469, 472, 479, 545, 556, 562, 628, 639, 644, 647, 667, 719, 742, 761, 771, 810, 823, 837, 838, 842, 843, 846, 848, 849, 870, 871, 883, 892, 894, 907, 933, 934, 943, 946, 953, 954, 958, 962, 963, 966, 968, 971, 977, 981, 984, 998, 1003, 1010, 1015, 1016, 1018, 1019, 1027, 1037, 1038, 1044, 1054, 1070, 1077, 1078, 1096, 1115, 1117, 1125, 1126, 1130, 1133, 1141, 1149, 1161, 1164], "schluss": [5, 7, 162, 187, 207], "noch": [5, 7, 162, 163, 173, 177, 181, 187, 197, 198, 202, 204, 207, 210, 213, 223, 236, 242, 243, 246, 267, 274, 360, 1160, 1171, 1178], "talk": [5, 42, 45, 50, 60, 85, 116, 117, 133, 154, 158, 169, 174, 178, 186, 190, 193, 198, 230, 232, 233, 309, 344, 449, 450, 712, 721, 810, 829, 907, 912, 916, 923, 1153], "heurigen": 5, "grazer": [5, 61, 172, 193, 309, 912], "linuxtagen": [5, 172], "pointless": [5, 137, 267, 281, 288, 305, 309, 318, 431, 578], "blink": [5, 62, 137, 281, 284, 305, 309, 328, 331, 907, 948, 951], "asyncio": [5, 60, 137, 186, 190, 240, 281, 305, 309, 695, 1108], "libgpiod": [5, 60, 126, 133, 136, 137, 151, 281, 305, 309, 328, 330, 763], "raspberri": [5, 79, 98, 105, 107, 124, 136, 137, 149, 166, 170, 196, 270, 281, 305, 309, 345, 347, 348, 359, 361, 527, 763, 787, 791, 810, 814, 819, 825, 828, 831, 906, 913, 915, 916, 927, 972, 985, 987, 991, 994, 996, 998, 1009, 1031, 1035, 1122, 1124, 1135, 1156, 1165], "pi": [5, 38, 79, 107, 116, 134, 137, 166, 170, 196, 226, 229, 270, 281, 305, 309, 348, 359, 361, 385, 412, 415, 433, 523, 526, 527, 582, 602, 682, 743, 763, 787, 791, 814, 819, 825, 828, 831, 906, 913, 915, 916, 927, 972, 985, 987, 994, 995, 998, 1039], "cours": [5, 8, 13, 40, 105, 134, 136, 137, 150, 151, 152, 153, 154, 156, 169, 182, 183, 193, 201, 205, 211, 216, 221, 232, 243, 260, 262, 270, 279, 281, 282, 296, 297, 305, 308, 309, 312, 313, 342, 360, 361, 363, 412, 413, 429, 456, 467, 473, 479, 524, 761, 785, 810, 822, 837, 838, 899, 908, 937, 944, 986, 1008, 1009, 1031, 1063, 1095, 1104, 1108, 1121, 1122, 1135, 1161, 1164, 1176], "sollt": [5, 23, 162, 163, 168, 171, 210, 1158, 1177], "interess": [5, 23, 243, 1156, 1167], "anderen": [5, 23, 187, 197, 202, 204, 360, 1155, 1156, 1158, 1160, 1179], "themenkomplex": 5, "bestehen": [5, 1174], "biet": 5, "folgend": [5, 168, 187, 198, 243, 1171], "preisgestaltung": 5, "all": [5, 23, 24, 29, 35, 40, 42, 45, 57, 59, 62, 63, 66, 71, 81, 89, 111, 112, 117, 121, 133, 134, 141, 147, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 168, 169, 170, 174, 175, 176, 181, 183, 186, 187, 189, 190, 192, 197, 202, 206, 212, 214, 215, 223, 226, 229, 230, 234, 239, 240, 242, 259, 261, 264, 267, 270, 272, 279, 281, 288, 305, 309, 327, 329, 330, 337, 353, 365, 369, 379, 383, 384, 387, 388, 389, 400, 408, 409, 415, 425, 427, 429, 431, 432, 435, 438, 439, 442, 444, 449, 451, 452, 453, 454, 455, 458, 459, 463, 464, 467, 468, 472, 474, 477, 479, 480, 488, 489, 494, 495, 516, 518, 526, 527, 545, 573, 574, 577, 579, 584, 602, 603, 620, 625, 638, 639, 653, 661, 663, 678, 680, 682, 695, 705, 709, 714, 715, 717, 727, 728, 731, 734, 736, 739, 754, 769, 771, 778, 781, 783, 788, 796, 800, 802, 806, 808, 810, 818, 824, 827, 836, 837, 838, 842, 843, 845, 846, 848, 850, 852, 853, 854, 855, 870, 871, 882, 889, 892, 894, 896, 897, 898, 899, 901, 907, 908, 909, 910, 914, 915, 916, 926, 927, 931, 933, 936, 942, 944, 953, 960, 966, 969, 970, 971, 982, 986, 992, 996, 1001, 1002, 1006, 1007, 1008, 1019, 1027, 1032, 1033, 1037, 1039, 1052, 1053, 1056, 1057, 1058, 1063, 1069, 1070, 1086, 1087, 1103, 1107, 1108, 1117, 1121, 1130, 1136, 1141, 1143, 1148, 1155, 1156, 1158, 1160, 1164, 1165, 1172, 1173, 1176, 1179], "onlin": [5, 11, 23, 159, 166, 168, 169, 181, 186, 189, 360], "gehalten": [5, 8, 150, 177, 189, 198, 208, 217, 233, 245, 1155, 1160, 1171], "klarerweis": 5, "tagsatz": 5, "anf\u00e4llt": 5, "schulung": [5, 23, 149, 162, 163, 177, 186, 189, 360, 361, 766, 769, 774, 779, 788, 796, 974, 977, 981, 1009, 1011, 1031, 1107, 1122, 1135, 1155, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1166, 1167, 1168, 1176], "980": [5, 226, 229, 242, 249, 252, 667], "reisekosten": [5, 23], "auto": [5, 122, 151, 163, 171, 175, 181, 257, 319, 469, 474, 498, 499, 503, 504, 507, 508, 509, 562, 570, 579, 580, 603, 625, 626, 628, 669, 670, 677, 684, 687, 689, 692, 695, 696, 697, 699, 700, 701, 702, 703, 707, 709, 710, 711, 712, 717, 719, 721, 726, 727, 728, 730, 741, 747, 749, 751, 752, 753, 757, 758, 759, 760, 761, 762, 763, 810, 981, 1161, 1172, 1177], "42": [5, 7, 21, 42, 62, 122, 124, 171, 173, 174, 176, 187, 197, 202, 204, 207, 210, 213, 218, 219, 223, 226, 229, 234, 236, 239, 242, 246, 249, 252, 255, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322, 334, 337, 338, 384, 410, 412, 413, 415, 418, 426, 431, 433, 439, 453, 463, 468, 472, 489, 491, 520, 521, 525, 526, 527, 528, 529, 530, 531, 543, 550, 562, 569, 577, 578, 582, 584, 610, 613, 616, 623, 647, 651, 671, 672, 680, 682, 710, 717, 730, 731, 741, 743, 747, 749, 751, 753, 757, 758, 759, 773, 855, 892, 901, 909, 955, 963, 977, 984, 985, 986, 1006, 1007, 1008, 1015, 1018, 1036, 1038, 1039, 1048, 1049, 1050, 1053, 1072, 1153], "per": [5, 50, 79, 160, 187, 305, 333, 353, 383, 422, 427, 516, 747, 800, 806, 820, 824, 829, 830, 842, 846, 866, 892, 959, 968, 985, 1154, 1179], "kilomet": [5, 156, 709, 870], "anderweitig": 5, "aufwand": [5, 23], "\u00fcbernachtung": [5, 162], "sampl": [6, 116, 124, 134, 154, 165, 211, 214, 215, 227, 231, 237, 243, 246, 263, 279, 305, 322, 328, 445, 513, 739, 957, 977, 1060], "log": [6, 97, 122, 151, 159, 160, 169, 176, 181, 184, 193, 213, 223, 229, 239, 242, 270, 272, 284, 301, 322, 341, 454, 455, 474, 731, 773, 810, 839, 846, 848, 870, 907, 909, 917, 921, 923, 926, 927, 1107, 1110, 1136, 1150], "record": [6, 29, 40, 53, 134, 149, 150, 158, 160, 161, 187, 198, 199, 205, 215, 220, 227, 243, 263, 278, 298, 301, 333, 345, 444, 445, 763, 909, 1003, 1008, 1023, 1065, 1067, 1086, 1097, 1098, 1099, 1100, 1101, 1103, 1106, 1116, 1171], "grundlagen": [6, 8, 23, 147, 248, 287, 359, 1158, 1160, 1167, 1168, 1171, 1172, 1174, 1175, 1178], "4": [6, 7, 8, 32, 62, 64, 107, 110, 114, 146, 151, 153, 157, 159, 165, 173, 174, 175, 176, 177, 180, 187, 192, 194, 198, 199, 202, 204, 207, 210, 213, 214, 218, 219, 220, 221, 223, 224, 226, 227, 229, 234, 236, 237, 239, 242, 246, 249, 251, 252, 255, 263, 264, 267, 271, 272, 274, 278, 284, 287, 288, 293, 294, 299, 306, 310, 316, 321, 322, 335, 336, 337, 339, 342, 355, 356, 359, 373, 389, 409, 412, 415, 432, 436, 439, 440, 450, 451, 453, 471, 474, 513, 517, 518, 519, 520, 521, 523, 525, 526, 528, 544, 546, 562, 569, 571, 579, 580, 583, 585, 586, 587, 588, 589, 601, 602, 610, 620, 670, 672, 674, 689, 690, 691, 693, 695, 704, 706, 710, 717, 719, 730, 743, 761, 810, 811, 848, 896, 899, 901, 909, 914, 915, 916, 938, 951, 968, 972, 1004, 1005, 1007, 1014, 1016, 1020, 1027, 1028, 1030, 1039, 1040, 1045, 1048, 1049, 1050, 1054, 1055, 1059, 1060, 1062, 1063, 1065, 1069, 1082, 1086, 1097, 1099, 1103, 1105, 1108, 1112, 1113, 1115, 1121, 1125, 1126, 1127, 1129, 1130, 1132, 1136, 1141, 1156, 1171], "2021": [6, 10, 23, 135, 147, 164, 166, 202, 204, 213, 219, 220, 223, 228, 231, 254, 339, 341, 355, 356, 359, 545, 688, 713, 748, 866, 870, 892, 893, 970, 984, 998, 1034, 1150], "templat": [6, 66, 75, 107, 181, 216, 257, 279, 284, 319, 344, 345, 453, 515, 534, 567, 568, 612, 618, 622, 623, 630, 631, 632, 634, 652, 659, 660, 661, 662, 663, 664, 671, 677, 682, 685, 686, 687, 688, 692, 693, 695, 698, 725, 729, 731, 739, 741, 747, 748, 749, 751, 753, 761, 762, 763, 955, 1160, 1162], "descript": [6, 8, 31, 39, 107, 114, 138, 156, 157, 169, 170, 186, 190, 191, 193, 194, 195, 196, 201, 216, 221, 223, 227, 229, 232, 239, 242, 246, 258, 259, 262, 296, 297, 312, 313, 361, 454, 464, 472, 482, 483, 484, 485, 486, 490, 500, 524, 719, 726, 727, 728, 737, 739, 741, 761, 810, 822, 834, 836, 845, 870, 872, 892, 899, 902, 903, 916, 928, 936, 986, 998, 1049, 1063, 1086, 1143, 1164], "sidebar": [6, 17, 66, 151, 822], "metadata": [6, 28, 39, 150, 169, 267, 842, 845, 915, 918, 944, 1006, 1166], "angebot": [6, 168], "hous": [6, 32, 154], "meiner": [6, 23, 243, 360, 1156], "person": [6, 23, 161, 191, 210, 213, 252, 254, 256, 263, 267, 274, 305, 306, 349, 434, 469, 470, 473, 498, 582, 641, 748, 923, 1021, 1022, 1024, 1025, 1026, 1028, 1029, 1103, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1141, 1142], "schwerpunk": 6, "schulungsstil": 6, "preis": 6, "einr\u00fcckung": [7, 199, 207], "wichtig": [7, 207, 257, 342, 347, 1179], "1": [7, 32, 39, 42, 50, 62, 64, 73, 75, 88, 107, 110, 111, 112, 114, 133, 136, 146, 147, 150, 155, 157, 160, 161, 163, 164, 165, 169, 170, 172, 173, 174, 175, 176, 177, 182, 183, 184, 187, 189, 192, 199, 202, 203, 204, 207, 210, 213, 214, 218, 219, 220, 223, 226, 229, 232, 234, 236, 239, 242, 246, 249, 252, 254, 255, 259, 264, 267, 271, 272, 274, 278, 284, 288, 294, 297, 299, 302, 306, 310, 313, 316, 321, 322, 327, 328, 334, 335, 336, 337, 338, 339, 340, 342, 345, 347, 355, 356, 359, 373, 374, 396, 403, 412, 416, 418, 426, 443, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 465, 467, 468, 488, 489, 495, 505, 513, 514, 517, 521, 523, 525, 526, 527, 529, 533, 535, 536, 537, 538, 539, 540, 541, 546, 549, 552, 555, 558, 561, 562, 564, 569, 570, 571, 577, 579, 583, 585, 586, 587, 588, 589, 594, 599, 601, 607, 608, 609, 610, 611, 616, 620, 632, 634, 642, 644, 647, 651, 661, 667, 668, 670, 671, 672, 674, 677, 678, 680, 682, 684, 686, 687, 689, 691, 692, 693, 695, 696, 697, 704, 710, 712, 715, 716, 717, 719, 721, 722, 725, 726, 728, 729, 730, 739, 743, 747, 749, 750, 751, 753, 759, 761, 763, 768, 773, 779, 783, 788, 810, 827, 836, 837, 838, 841, 842, 843, 845, 846, 847, 848, 849, 852, 853, 854, 855, 856, 860, 862, 864, 866, 867, 871, 872, 873, 889, 892, 893, 894, 895, 896, 898, 899, 901, 902, 903, 905, 907, 914, 915, 917, 918, 926, 927, 928, 930, 932, 933, 934, 936, 937, 938, 940, 941, 942, 943, 948, 950, 951, 963, 965, 966, 968, 970, 972, 973, 974, 977, 980, 981, 983, 984, 987, 996, 998, 999, 1000, 1001, 1003, 1004, 1006, 1007, 1008, 1011, 1012, 1014, 1016, 1018, 1020, 1021, 1027, 1028, 1030, 1032, 1033, 1034, 1035, 1037, 1040, 1041, 1042, 1043, 1044, 1047, 1049, 1050, 1055, 1060, 1062, 1063, 1065, 1070, 1073, 1076, 1086, 1090, 1093, 1096, 1097, 1099, 1103, 1104, 1105, 1111, 1112, 1113, 1114, 1120, 1125, 1126, 1127, 1129, 1130, 1131, 1135, 1136, 1141, 1142, 1143, 1148, 1152, 1155, 1161, 1163, 1164, 1168, 1171, 1173, 1178], "i": [7, 12, 13, 14, 17, 21, 27, 28, 29, 30, 31, 32, 38, 39, 40, 41, 42, 43, 46, 47, 49, 51, 53, 54, 55, 56, 57, 59, 60, 62, 63, 64, 66, 67, 69, 70, 79, 81, 83, 85, 86, 88, 90, 91, 92, 98, 99, 100, 101, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 121, 124, 125, 127, 128, 129, 133, 134, 139, 141, 142, 147, 148, 150, 151, 153, 154, 157, 158, 159, 160, 161, 164, 165, 169, 170, 171, 174, 175, 176, 177, 178, 181, 182, 183, 184, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 202, 204, 205, 206, 207, 210, 211, 214, 215, 216, 218, 219, 221, 224, 225, 226, 227, 230, 231, 232, 233, 235, 236, 237, 240, 241, 243, 244, 245, 246, 248, 250, 253, 254, 255, 259, 260, 261, 263, 264, 266, 267, 269, 270, 271, 272, 273, 274, 276, 278, 279, 280, 281, 282, 283, 285, 286, 287, 289, 290, 292, 294, 296, 298, 299, 301, 302, 304, 305, 306, 308, 309, 310, 312, 314, 315, 316, 318, 320, 321, 323, 326, 327, 328, 329, 330, 331, 332, 333, 337, 338, 339, 342, 345, 347, 348, 350, 353, 355, 356, 360, 361, 363, 364, 365, 366, 367, 373, 374, 375, 377, 379, 380, 381, 383, 384, 387, 388, 389, 391, 392, 394, 395, 396, 399, 400, 401, 402, 403, 404, 406, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 464, 465, 467, 469, 471, 472, 473, 474, 477, 480, 481, 488, 489, 491, 492, 493, 494, 495, 508, 510, 511, 513, 515, 516, 517, 518, 519, 520, 521, 524, 525, 526, 527, 528, 529, 532, 534, 539, 543, 545, 550, 553, 556, 559, 562, 567, 568, 570, 571, 572, 573, 574, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 592, 594, 597, 598, 602, 603, 604, 605, 606, 607, 608, 610, 611, 616, 620, 623, 624, 625, 627, 629, 632, 634, 639, 641, 642, 647, 648, 649, 651, 653, 654, 656, 657, 658, 659, 660, 661, 662, 663, 666, 667, 668, 669, 671, 672, 674, 675, 677, 678, 679, 681, 684, 689, 690, 691, 692, 693, 695, 706, 707, 710, 711, 715, 716, 719, 720, 721, 725, 727, 728, 729, 731, 733, 737, 739, 740, 741, 742, 747, 748, 749, 751, 757, 760, 761, 762, 763, 764, 765, 766, 769, 771, 774, 776, 778, 779, 781, 785, 788, 792, 796, 798, 800, 802, 804, 806, 808, 810, 811, 812, 817, 818, 820, 822, 823, 824, 826, 827, 835, 836, 837, 838, 839, 840, 842, 843, 844, 847, 848, 849, 850, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 867, 869, 870, 871, 872, 873, 874, 875, 877, 878, 881, 882, 884, 885, 886, 890, 892, 894, 897, 899, 902, 903, 906, 907, 908, 909, 910, 912, 913, 914, 915, 917, 918, 919, 920, 921, 922, 923, 925, 930, 937, 940, 942, 944, 947, 948, 950, 951, 952, 953, 954, 955, 957, 958, 960, 961, 964, 967, 968, 969, 970, 971, 972, 977, 978, 981, 982, 985, 986, 987, 988, 992, 994, 995, 996, 997, 998, 999, 1000, 1002, 1004, 1005, 1006, 1007, 1009, 1010, 1011, 1012, 1015, 1016, 1018, 1019, 1020, 1021, 1022, 1024, 1025, 1027, 1028, 1029, 1030, 1031, 1032, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1059, 1060, 1062, 1063, 1065, 1066, 1067, 1068, 1070, 1077, 1080, 1083, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1116, 1117, 1120, 1121, 1122, 1123, 1124, 1126, 1127, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1141, 1142, 1143, 1144, 1146, 1148, 1150, 1154, 1156, 1158, 1161, 1163, 1164, 1165, 1166, 1174, 1175, 1176, 1178], "41": [7, 159, 164, 175, 176, 187, 197, 202, 204, 207, 210, 213, 215, 218, 219, 223, 226, 229, 234, 236, 242, 246, 249, 252, 255, 264, 267, 271, 274, 284, 288, 294, 306, 310, 316, 322, 334, 336, 337, 474, 730, 761, 800, 892, 915, 1020, 1063, 1065, 1112, 1143], "print": [7, 64, 150, 173, 174, 176, 177, 187, 190, 192, 193, 197, 202, 204, 205, 206, 207, 210, 213, 214, 218, 219, 220, 223, 226, 227, 229, 234, 236, 239, 242, 245, 246, 249, 252, 255, 264, 267, 271, 272, 274, 284, 288, 294, 299, 305, 306, 310, 316, 321, 322, 334, 335, 336, 337, 338, 368, 372, 374, 443, 454, 598, 625, 648, 695, 709, 717, 719, 847, 848, 854, 870, 872, 873, 914, 962, 972, 1003, 1006, 1007, 1008, 1010, 1011, 1012, 1016, 1018, 1020, 1021, 1024, 1026, 1029, 1034, 1035, 1036, 1037, 1042, 1043, 1046, 1047, 1048, 1049, 1050, 1052, 1053, 1058, 1059, 1073, 1075, 1085, 1086, 1087, 1089, 1090, 1096, 1111, 1116, 1120, 1124, 1133], "ja": [7, 23, 163, 187, 204, 207, 210, 223, 226, 255, 322], "basta": [7, 154, 207, 1039], "2": [7, 29, 32, 42, 50, 62, 64, 73, 105, 107, 114, 117, 147, 150, 155, 157, 163, 164, 165, 171, 173, 174, 175, 176, 177, 188, 192, 198, 199, 202, 203, 207, 210, 213, 214, 218, 219, 220, 223, 228, 229, 234, 236, 239, 240, 242, 246, 249, 252, 254, 255, 264, 267, 271, 272, 274, 278, 284, 288, 294, 297, 299, 302, 306, 310, 313, 316, 322, 328, 334, 335, 336, 337, 338, 339, 342, 343, 344, 345, 351, 359, 372, 373, 385, 391, 392, 412, 416, 443, 449, 450, 451, 452, 455, 456, 457, 461, 462, 463, 464, 465, 467, 489, 513, 514, 517, 523, 525, 526, 529, 533, 535, 536, 537, 538, 540, 541, 545, 560, 562, 569, 570, 571, 577, 579, 580, 583, 585, 586, 587, 588, 589, 594, 599, 603, 607, 608, 609, 610, 611, 616, 620, 624, 625, 626, 627, 632, 642, 647, 667, 670, 671, 672, 674, 677, 680, 682, 684, 685, 687, 689, 692, 693, 695, 705, 706, 709, 710, 715, 716, 717, 719, 721, 722, 725, 726, 727, 728, 729, 730, 739, 741, 743, 750, 761, 763, 769, 810, 837, 838, 845, 848, 849, 852, 853, 854, 866, 889, 892, 895, 896, 901, 903, 905, 907, 911, 914, 915, 927, 930, 932, 933, 934, 936, 937, 940, 941, 942, 943, 944, 946, 948, 950, 951, 963, 965, 968, 970, 972, 983, 984, 999, 1001, 1003, 1004, 1006, 1007, 1009, 1012, 1014, 1016, 1020, 1024, 1027, 1028, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1040, 1041, 1042, 1044, 1049, 1050, 1055, 1060, 1062, 1064, 1065, 1066, 1067, 1069, 1073, 1076, 1086, 1090, 1093, 1096, 1097, 1098, 1099, 1100, 1103, 1104, 1105, 1106, 1108, 1111, 1112, 1113, 1118, 1125, 1126, 1127, 1129, 1130, 1131, 1135, 1136, 1141, 1142, 1143, 1147, 1148, 1155, 1163, 1164, 1171, 1174, 1175, 1177, 1178, 1179], "1234": [7, 32, 207, 210, 220, 229, 234, 236, 288, 316, 337, 925, 933, 982, 1039], "3": [7, 32, 62, 64, 107, 110, 111, 112, 121, 136, 150, 159, 164, 165, 169, 171, 173, 174, 175, 176, 177, 184, 186, 187, 192, 198, 199, 202, 203, 204, 207, 210, 213, 214, 218, 220, 222, 223, 228, 229, 232, 234, 236, 239, 242, 246, 249, 251, 253, 254, 255, 257, 264, 267, 271, 272, 274, 278, 284, 288, 294, 299, 301, 302, 307, 310, 316, 322, 335, 336, 337, 338, 342, 343, 344, 347, 359, 373, 385, 386, 387, 400, 409, 410, 431, 432, 440, 443, 445, 450, 451, 452, 455, 460, 471, 488, 489, 513, 514, 518, 521, 523, 524, 525, 526, 528, 529, 530, 531, 535, 536, 537, 538, 540, 541, 543, 545, 562, 569, 571, 577, 578, 579, 581, 582, 583, 585, 586, 587, 588, 589, 594, 597, 598, 599, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 611, 616, 632, 642, 647, 649, 670, 671, 672, 674, 682, 684, 685, 689, 690, 691, 692, 693, 695, 710, 715, 717, 719, 721, 726, 727, 729, 730, 743, 746, 761, 768, 774, 810, 848, 853, 867, 870, 892, 894, 896, 901, 903, 909, 911, 914, 915, 916, 918, 927, 928, 930, 932, 933, 934, 937, 941, 942, 943, 951, 952, 953, 957, 963, 965, 968, 971, 972, 973, 976, 978, 981, 982, 984, 985, 986, 1004, 1006, 1007, 1009, 1012, 1014, 1016, 1020, 1027, 1030, 1031, 1032, 1033, 1034, 1037, 1038, 1040, 1042, 1044, 1045, 1048, 1050, 1055, 1056, 1057, 1059, 1062, 1063, 1065, 1082, 1086, 1090, 1096, 1097, 1099, 1103, 1105, 1108, 1111, 1112, 1113, 1116, 1119, 1125, 1126, 1127, 1129, 1130, 1132, 1136, 1141, 1142, 1143, 1150, 1155, 1157, 1159, 1161, 1164, 1167, 1171], "decim": [7, 207, 242, 246, 288, 316, 328, 365, 451, 1039, 1053], "5": [7, 32, 62, 64, 113, 122, 124, 129, 146, 150, 157, 159, 165, 175, 176, 177, 182, 185, 188, 192, 198, 199, 202, 204, 205, 207, 210, 211, 213, 214, 217, 219, 220, 221, 223, 224, 226, 227, 229, 234, 236, 237, 239, 242, 246, 249, 251, 252, 254, 255, 259, 263, 264, 267, 271, 274, 278, 284, 287, 288, 293, 294, 299, 302, 306, 310, 316, 321, 322, 328, 334, 336, 337, 342, 347, 355, 356, 359, 365, 367, 372, 389, 391, 400, 427, 432, 436, 445, 450, 454, 457, 468, 471, 474, 489, 497, 513, 516, 518, 523, 524, 526, 527, 528, 529, 530, 531, 543, 544, 549, 562, 569, 570, 571, 577, 581, 582, 585, 586, 588, 589, 610, 620, 647, 667, 671, 674, 675, 677, 678, 684, 686, 687, 689, 704, 705, 717, 719, 726, 727, 728, 730, 743, 753, 761, 783, 788, 811, 839, 841, 892, 896, 901, 907, 914, 915, 916, 932, 934, 942, 951, 968, 984, 996, 1004, 1006, 1007, 1010, 1012, 1016, 1020, 1027, 1028, 1033, 1038, 1039, 1040, 1044, 1045, 1047, 1053, 1055, 1059, 1060, 1063, 1086, 1090, 1097, 1099, 1103, 1105, 1108, 1112, 1113, 1116, 1121, 1132, 1136, 1141, 1143, 1148, 1152, 1158, 1160, 1165, 1166, 1171, 1172], "hexadecim": [7, 207, 246, 384, 915, 1039, 1052, 1053], "16": [7, 64, 150, 159, 161, 162, 164, 173, 175, 176, 181, 182, 187, 192, 197, 202, 204, 207, 210, 213, 218, 219, 223, 226, 229, 234, 236, 239, 242, 246, 249, 252, 255, 264, 268, 271, 274, 278, 284, 288, 294, 299, 306, 310, 316, 322, 334, 335, 336, 337, 338, 342, 347, 348, 359, 383, 427, 434, 445, 452, 589, 647, 726, 788, 800, 892, 909, 914, 916, 927, 932, 933, 941, 950, 984, 986, 998, 999, 1004, 1007, 1011, 1014, 1039, 1065, 1112, 1113, 1143], "7": [7, 32, 42, 64, 151, 154, 157, 159, 164, 171, 174, 175, 176, 177, 187, 192, 199, 202, 204, 205, 207, 210, 211, 213, 217, 219, 220, 221, 223, 224, 226, 229, 234, 236, 239, 242, 246, 249, 251, 252, 254, 255, 263, 264, 267, 271, 272, 274, 278, 284, 288, 293, 294, 299, 302, 306, 310, 316, 322, 327, 336, 337, 342, 347, 348, 359, 373, 377, 391, 418, 427, 451, 452, 455, 460, 468, 488, 489, 513, 516, 521, 525, 526, 528, 529, 530, 531, 543, 550, 558, 562, 569, 577, 578, 582, 584, 585, 586, 588, 609, 613, 616, 625, 642, 651, 671, 679, 704, 705, 706, 710, 717, 743, 757, 758, 759, 841, 842, 853, 854, 870, 892, 901, 914, 915, 916, 933, 941, 965, 968, 977, 978, 981, 982, 985, 986, 1007, 1010, 1016, 1020, 1028, 1033, 1038, 1039, 1040, 1043, 1045, 1047, 1048, 1063, 1075, 1093, 1096, 1108, 1112, 1113, 1116, 1121, 1132, 1141], "0x1234": [7, 207, 1039], "4660": [7, 207, 229, 1039], "8": [7, 32, 64, 110, 150, 156, 157, 161, 165, 173, 174, 175, 176, 177, 181, 186, 187, 190, 192, 199, 202, 204, 205, 207, 210, 211, 213, 214, 219, 220, 221, 223, 224, 226, 227, 229, 233, 234, 236, 239, 242, 246, 249, 251, 252, 255, 263, 264, 267, 270, 271, 274, 278, 284, 288, 291, 293, 294, 299, 302, 305, 306, 310, 316, 322, 334, 335, 336, 337, 342, 359, 383, 427, 439, 445, 451, 455, 457, 460, 488, 520, 555, 562, 569, 574, 577, 582, 586, 588, 589, 678, 726, 743, 761, 783, 806, 810, 841, 847, 855, 892, 894, 901, 907, 908, 909, 910, 914, 915, 984, 1001, 1007, 1010, 1016, 1039, 1040, 1045, 1053, 1058, 1062, 1063, 1069, 1105, 1108, 1112, 1113, 1119, 1136, 1143], "bin\u00e4r": [7, 23, 207, 210], "9": [7, 8, 32, 62, 64, 114, 150, 155, 159, 162, 169, 173, 174, 175, 176, 177, 185, 187, 189, 192, 193, 194, 195, 196, 199, 200, 202, 204, 205, 206, 207, 208, 210, 211, 213, 214, 215, 217, 219, 220, 221, 223, 226, 227, 229, 234, 236, 239, 242, 243, 246, 249, 252, 254, 255, 264, 267, 270, 271, 274, 278, 279, 281, 284, 288, 294, 299, 306, 310, 316, 322, 334, 335, 337, 338, 342, 347, 359, 365, 367, 373, 382, 385, 443, 451, 468, 488, 497, 516, 562, 564, 580, 589, 679, 689, 717, 743, 788, 866, 889, 892, 914, 915, 916, 932, 968, 1004, 1014, 1020, 1033, 1034, 1040, 1045, 1047, 1055, 1059, 1063, 1070, 1075, 1112, 1113, 1121, 1130, 1136, 1141], "0b100110": [7, 207, 236, 1039], "38": [7, 23, 150, 157, 164, 176, 187, 197, 202, 204, 207, 210, 213, 218, 219, 223, 226, 229, 234, 236, 239, 242, 246, 249, 252, 255, 264, 267, 271, 274, 284, 288, 294, 306, 310, 316, 322, 334, 337, 338, 472, 488, 513, 580, 726, 761, 892, 987, 996, 1112, 1113], "arithmet": [7, 109, 174, 207, 212, 232, 235, 247, 262, 279, 342, 366, 380, 387, 388, 394, 395, 404, 410, 411, 417, 421, 424, 426, 427, 428, 437, 441, 446, 447, 466, 475, 487, 488, 501, 515, 563, 567, 597, 601, 602, 605, 610, 667, 669, 707, 716, 717, 760, 762, 763], "man": [7, 32, 37, 116, 154, 156, 162, 163, 171, 177, 181, 187, 189, 197, 198, 204, 207, 210, 215, 217, 219, 230, 236, 243, 246, 270, 291, 310, 342, 347, 349, 360, 457, 550, 559, 571, 733, 761, 769, 788, 836, 837, 838, 841, 842, 845, 852, 853, 854, 855, 856, 860, 862, 864, 867, 871, 872, 873, 889, 892, 893, 895, 896, 898, 899, 901, 902, 916, 923, 926, 927, 928, 930, 932, 933, 934, 936, 937, 939, 940, 941, 942, 943, 946, 952, 953, 955, 957, 959, 960, 963, 965, 971, 978, 981, 982, 984, 1000, 1001, 1156, 1157, 1158, 1160, 1168, 1171, 1173, 1174, 1175, 1177, 1178, 1179], "behaviour": [7, 207, 215, 796, 942, 1058], "erzwingen": [7, 187, 199, 207], "floor": [7, 38, 199, 207, 210, 214, 226, 227, 229, 234, 236, 242, 246, 316, 337, 1027, 1039], "divis": [7, 36, 38, 199, 207, 210, 226, 229, 234, 236, 242, 337, 365, 386, 488, 489, 503, 1027, 1039, 1093], "modul": [7, 12, 21, 23, 29, 66, 137, 144, 150, 157, 159, 164, 176, 182, 184, 186, 189, 190, 191, 192, 193, 200, 201, 207, 210, 214, 216, 221, 223, 224, 227, 229, 230, 233, 234, 236, 237, 239, 240, 242, 243, 245, 246, 248, 249, 253, 254, 257, 263, 265, 266, 267, 272, 274, 282, 283, 286, 288, 292, 293, 296, 297, 298, 301, 306, 308, 310, 312, 313, 314, 315, 316, 321, 322, 326, 327, 328, 337, 343, 344, 345, 347, 353, 360, 405, 449, 451, 455, 456, 462, 464, 465, 477, 666, 707, 762, 763, 766, 767, 769, 770, 772, 774, 775, 776, 777, 779, 780, 787, 790, 791, 795, 801, 806, 807, 811, 812, 814, 819, 822, 825, 828, 831, 906, 907, 914, 916, 1008, 1009, 1023, 1032, 1033, 1036, 1037, 1048, 1050, 1056, 1059, 1060, 1061, 1064, 1065, 1066, 1067, 1101, 1102, 1103, 1104, 1106, 1107, 1109, 1110, 1114, 1117, 1118, 1120, 1121, 1122, 1123, 1124, 1135, 1136, 1138, 1140, 1141, 1144, 1145, 1151, 1163, 1165, 1166, 1172, 1176, 1179], "restklassen": [7, 207], "rest": [7, 17, 40, 161, 163, 173, 197, 207, 210, 214, 216, 234, 242, 274, 288, 306, 309, 337, 363, 373, 398, 452, 600, 601, 662, 719, 798, 849, 910, 940, 968, 1027, 1030, 1054, 1083, 1087, 1116, 1131, 1163, 1179], "14": [7, 64, 147, 151, 164, 175, 176, 187, 192, 199, 202, 204, 206, 207, 210, 213, 214, 218, 219, 223, 226, 227, 229, 234, 236, 239, 242, 246, 249, 252, 254, 255, 258, 264, 267, 271, 274, 278, 284, 288, 294, 305, 306, 308, 310, 316, 322, 326, 334, 335, 337, 338, 339, 359, 451, 462, 463, 465, 474, 568, 642, 666, 678, 717, 719, 727, 729, 761, 852, 855, 867, 892, 894, 914, 915, 916, 918, 933, 942, 972, 984, 985, 986, 1005, 1007, 1021, 1107, 1112, 1113, 1160, 1171], "oper": [7, 29, 33, 34, 35, 38, 74, 79, 81, 98, 109, 129, 133, 153, 154, 156, 160, 172, 173, 175, 178, 181, 186, 190, 191, 192, 193, 195, 199, 204, 207, 212, 213, 214, 215, 216, 221, 223, 227, 228, 231, 234, 236, 237, 241, 244, 247, 250, 252, 255, 257, 267, 274, 279, 280, 281, 282, 283, 284, 287, 288, 304, 308, 309, 311, 316, 322, 328, 342, 347, 365, 373, 383, 389, 404, 409, 410, 411, 415, 417, 418, 421, 424, 426, 428, 430, 433, 437, 439, 441, 446, 447, 469, 470, 489, 509, 515, 527, 532, 534, 562, 567, 568, 569, 574, 575, 579, 582, 586, 587, 588, 589, 590, 593, 594, 596, 602, 610, 611, 612, 618, 622, 623, 626, 631, 634, 635, 647, 652, 659, 660, 661, 662, 663, 664, 667, 669, 675, 677, 678, 680, 684, 689, 691, 692, 693, 695, 698, 702, 705, 707, 709, 710, 711, 712, 717, 719, 726, 727, 730, 737, 741, 743, 752, 753, 754, 760, 761, 762, 763, 772, 777, 780, 781, 787, 791, 801, 810, 812, 814, 819, 825, 826, 828, 831, 837, 838, 841, 870, 876, 901, 902, 906, 914, 915, 916, 927, 932, 933, 934, 935, 936, 937, 948, 951, 955, 957, 977, 981, 985, 998, 1001, 1009, 1012, 1019, 1020, 1023, 1040, 1044, 1048, 1053, 1054, 1059, 1073, 1106, 1108, 1117, 1126, 1148, 1153, 1160, 1166], "preced": [7, 35, 38, 207, 229, 234, 242, 247, 250, 365, 371, 386, 387, 395, 400, 404, 409, 411, 415, 417, 419, 421, 424, 428, 437, 441, 446, 447, 598, 602, 669, 707, 760, 762, 763, 870, 919], "implizit": [7, 187, 207, 284, 1158, 1175], "klammerung": [7, 207, 898], "durch": [7, 162, 163, 171, 177, 181, 189, 197, 207, 239, 249, 342, 347, 360, 898, 1155, 1156, 1158], "pr\u00e4zedenz": [7, 187, 199, 207], "6666666666666665": [7, 207], "frage": [7, 163, 173, 177, 204, 207, 210, 216, 236, 360, 1165, 1172, 1179], "6665": [7, 207], "6667": [7, 207], "ieee": [7, 207], "floatingpoint": [7, 207, 386, 387, 510, 810, 1085], "representaion": [7, 207], "true": [7, 35, 38, 50, 58, 64, 111, 112, 113, 155, 157, 159, 164, 173, 174, 175, 176, 186, 187, 192, 197, 202, 204, 205, 207, 210, 213, 214, 218, 219, 223, 226, 227, 229, 234, 236, 239, 240, 242, 246, 249, 252, 255, 264, 267, 271, 274, 278, 284, 288, 294, 299, 306, 310, 316, 322, 328, 334, 337, 371, 387, 388, 400, 412, 415, 455, 513, 577, 585, 610, 638, 649, 651, 672, 695, 696, 697, 698, 700, 701, 702, 703, 728, 737, 739, 741, 743, 761, 798, 800, 830, 843, 870, 883, 951, 957, 962, 963, 966, 968, 969, 977, 978, 981, 990, 1005, 1011, 1012, 1016, 1018, 1019, 1020, 1021, 1024, 1027, 1040, 1041, 1043, 1044, 1045, 1048, 1054, 1057, 1058, 1121, 1125, 1127, 1132, 1147, 1148, 1150], "zahlen": [7, 197, 198, 207, 1158, 1171], "vergleichen": [7, 187, 207], "21": [7, 98, 100, 103, 106, 107, 116, 161, 164, 175, 176, 187, 192, 195, 197, 202, 204, 207, 210, 213, 218, 219, 223, 226, 229, 234, 236, 242, 246, 249, 252, 255, 264, 267, 271, 274, 278, 284, 288, 294, 299, 306, 310, 316, 322, 337, 341, 359, 451, 761, 800, 852, 892, 915, 916, 927, 998, 1112, 1113], "ab": [7, 23, 32, 162, 164, 187, 197, 198, 207, 242, 246, 249, 264, 267, 288, 316, 569, 571, 579, 588, 674, 730, 1113, 1165, 1171], "0001": [7, 157, 175, 207], "aber": [7, 23, 37, 163, 171, 173, 177, 187, 197, 198, 202, 205, 207, 236, 239, 242, 294, 360, 898, 1156, 1158, 1160, 1167, 1174, 1178, 1179], "unendlich": [7, 8, 198, 207, 208], "lang": [7, 159, 162, 163, 172, 207, 333, 334, 351, 360, 454, 1157, 1173, 1178], "22": [7, 64, 98, 106, 107, 116, 156, 159, 164, 166, 175, 176, 187, 192, 194, 197, 202, 203, 204, 207, 210, 213, 214, 218, 219, 223, 226, 227, 229, 234, 236, 242, 246, 249, 252, 255, 264, 267, 271, 274, 278, 284, 288, 295, 298, 299, 301, 306, 316, 322, 334, 336, 337, 338, 359, 761, 855, 892, 916, 917, 925, 926, 941, 985, 986, 1070, 1107, 1112, 1113, 1172], "1000000": [7, 156, 187, 207, 284, 322, 337, 443, 907, 915], "23": [7, 64, 116, 157, 164, 165, 166, 172, 175, 176, 177, 187, 192, 194, 197, 202, 204, 207, 210, 213, 218, 219, 223, 226, 229, 234, 236, 239, 240, 242, 245, 246, 249, 255, 264, 267, 271, 274, 278, 284, 288, 294, 299, 306, 310, 316, 322, 359, 415, 451, 454, 695, 745, 855, 892, 914, 915, 996, 1065, 1070, 1112, 1113, 1143, 1150], "32": [7, 164, 165, 171, 173, 176, 187, 192, 197, 202, 204, 207, 210, 213, 216, 218, 219, 223, 226, 229, 234, 236, 239, 242, 246, 249, 252, 255, 264, 267, 271, 274, 278, 284, 288, 294, 306, 310, 316, 322, 337, 365, 367, 383, 388, 427, 468, 474, 497, 513, 526, 806, 835, 841, 866, 892, 908, 910, 985, 986, 996, 1063], "4294967295": [7, 207, 226, 234, 242], "24": [7, 64, 98, 106, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 133, 157, 164, 172, 175, 176, 177, 187, 192, 197, 202, 204, 207, 210, 213, 218, 219, 223, 226, 229, 234, 236, 239, 242, 246, 249, 252, 255, 264, 267, 271, 274, 278, 288, 294, 299, 306, 316, 322, 334, 335, 337, 338, 359, 462, 660, 662, 684, 726, 727, 763, 810, 837, 838, 892, 914, 1001, 1027, 1112, 1113], "64": [7, 156, 159, 164, 187, 192, 197, 202, 204, 207, 210, 213, 215, 216, 219, 223, 226, 229, 234, 236, 239, 242, 246, 249, 252, 255, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322, 337, 342, 347, 371, 383, 388, 412, 427, 433, 436, 462, 806, 948, 951, 974, 981, 984, 1001, 1065, 1112, 1156], "18446744073709551615": [7, 187, 197, 207, 210, 223, 226, 234, 236, 242, 246, 249, 252, 274, 306, 337], "overflow": [7, 42, 44, 50, 156, 197, 207, 223, 226, 227, 229, 232, 233, 239, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322, 388, 390, 426, 435, 847], "wenn": [7, 23, 162, 163, 168, 173, 181, 187, 189, 197, 198, 204, 207, 243, 249, 284, 897, 1155, 1157, 1158, 1165, 1167, 1168, 1171, 1174, 1179], "verwendet": [7, 23, 177, 181, 187, 207, 249, 1156, 1158, 1168, 1172, 1174, 1179], "wert": [7, 23, 198, 199, 204, 207, 239, 242, 246, 249, 255, 284, 288, 294, 1171, 1179], "w\u00e4re": [7, 171, 197, 207, 243, 1160, 1167], "dort": [7, 65, 163, 171, 173, 181, 197, 198, 207, 360, 1171, 1177, 1179], "25": [7, 64, 98, 164, 165, 175, 176, 177, 187, 192, 197, 202, 204, 207, 210, 213, 218, 219, 223, 226, 229, 234, 236, 239, 240, 242, 245, 246, 249, 252, 254, 255, 264, 267, 271, 274, 278, 284, 288, 294, 301, 306, 310, 316, 322, 328, 337, 338, 359, 561, 562, 684, 721, 745, 790, 892, 916, 984, 1010, 1053, 1097, 1099, 1103, 1105, 1112, 1113, 1125, 1126, 1127, 1129, 1130, 1131, 1132], "18446744073709551616": [7, 187, 197, 207, 210, 223, 226, 234, 236, 246, 249, 267, 274, 284, 288, 294, 306, 310, 316, 322, 337], "26": [7, 157, 159, 164, 165, 166, 175, 176, 187, 197, 202, 204, 207, 210, 213, 218, 219, 223, 226, 229, 234, 236, 239, 242, 246, 249, 252, 255, 259, 264, 267, 271, 274, 278, 288, 294, 299, 306, 310, 316, 322, 337, 341, 359, 561, 562, 689, 705, 870, 892, 916, 948, 950, 951, 984, 986, 1027, 1112, 1113, 1136, 1172], "1000": [7, 23, 187, 197, 207, 210, 213, 223, 226, 229, 234, 236, 242, 246, 249, 252, 267, 274, 284, 288, 294, 306, 310, 316, 322, 334, 337, 526, 527, 545, 620, 667, 741, 820, 845, 847, 852, 866, 867, 894, 895, 899, 901, 927, 934, 942, 963, 968, 972, 998, 1005, 1054, 1086], "10715086071862673209484250490600018105614048117055336074437503883703510511249361224931983788156958581275946729175531468251871452856923140435984577574698574803934567774824230985421074605062371141877954182153046474983581941267398767559165543946077062914571196477686542167660429831652624386837205668069376": [7, 187, 197, 207, 210, 223, 246, 249, 267, 294, 322], "27": [7, 64, 98, 116, 164, 166, 175, 176, 187, 197, 202, 204, 206, 207, 210, 213, 218, 219, 223, 226, 229, 234, 236, 239, 242, 245, 246, 249, 252, 254, 255, 264, 267, 271, 274, 278, 284, 288, 294, 301, 306, 310, 316, 322, 334, 336, 337, 339, 359, 451, 525, 550, 717, 892, 914, 916, 984, 1112, 1125, 1126, 1127, 1129, 1130, 1131, 1132], "10000": [7, 45, 207, 226, 229, 242, 274, 316, 1008, 1024], "19950631168807583848837421626835850838234968318861924548520089498529438830221946631919961684036194597899331129423209124271556491349413781117593785932096323957855730046793794526765246551266059895520550086918193311542508608460618104685509074866089624888090489894838009253941633257850621568309473902556912388065225096643874441046759871626985453222868538161694315775629640762836880760732228535091641476183956381458969463899410840960536267821064621427333394036525565649530603142680234969400335934316651459297773279665775606172582031407994198179607378245683762280037302885487251900834464581454650557929601414833921615734588139257095379769119277800826957735674444123062018757836325502728323789270710373802866393031428133241401624195671690574061419654342324638801248856147305207431992259611796250130992860241708340807605932320161268492288496255841312844061536738951487114256315111089745514203313820202931640957596464756010405845841566072044962867016515061920631004186422275908670900574606417856951911456055068251250406007519842261898059237118054444788072906395242548339221982707404473162376760846613033778706039803413197133493654622700563169937455508241780972810983291314403571877524768509857276937926433221599399876886660808368837838027643282775172273657572744784112294389733810861607423253291974813120197604178281965697475898164531258434135959862784130128185406283476649088690521047580882615823961985770122407044330583075869039319604603404973156583208672105913300903752823415539745394397715257455290510212310947321610753474825740775273986348298498340756937955646638621874569499279016572103701364433135817214311791398222983845847334440270964182851005072927748364550578634501100852987812389473928699540834346158807043959118985815145779177143619698728131459483783202081474982171858011389071228250905826817436220577475921417653715687725614904582904992461028630081535583308130101987675856234343538955409175623400844887526162643568648833519463720377293240094456246923254350400678027273837755376406726898636241037491410966718557050759098100246789880178271925953381282421954028302759408448955014676668389697996886241636313376393903373455801407636741877711055384225739499110186468219696581651485130494222369947714763069155468217682876200362777257723781365331611196811280792669481887201298643660768551639860534602297871557517947385246369446923087894265948217008051120322365496288169035739121368338393591756418733850510970271613915439590991598154654417336311656936031122249937969999226781732358023111862644575299135758175008199839236284615249881088960232244362173771618086357015468484058622329792853875623486556440536962622018963571028812361567512543338303270029097668650568557157505516727518899194129711337690149916181315171544007728650573189557450920330185304847113818315407324053319038462084036421763703911550639789000742853672196280903477974533320468368795868580237952218629120080742819551317948157624448298518461509704888027274721574688131594750409732115080498190455803416826949787141316063210686391511681774304792596709376": [7, 207, 226, 242, 274, 316], "hallo": [7, 187, 197, 202, 205, 207, 210, 218, 226, 229, 236, 239, 242, 246, 249, 255, 267, 271, 274, 294, 306, 310, 316, 322, 337, 385, 577, 761, 841, 889, 917, 930, 933, 939], "39": [7, 151, 164, 173, 175, 176, 187, 192, 197, 202, 204, 206, 207, 210, 213, 218, 219, 223, 226, 229, 234, 236, 239, 242, 246, 249, 252, 255, 264, 267, 271, 274, 278, 284, 288, 294, 299, 302, 306, 310, 316, 322, 334, 335, 336, 337, 338, 339, 488, 642, 689, 855, 984, 1112, 1113], "30": [7, 23, 64, 98, 107, 110, 116, 150, 151, 156, 164, 166, 176, 186, 187, 192, 197, 202, 204, 206, 207, 210, 213, 218, 219, 223, 226, 229, 234, 236, 239, 242, 246, 249, 252, 255, 264, 267, 274, 278, 284, 288, 291, 294, 306, 310, 316, 322, 334, 336, 337, 339, 359, 372, 386, 451, 513, 517, 552, 553, 558, 559, 561, 562, 678, 679, 726, 727, 728, 750, 866, 892, 898, 914, 915, 916, 972, 998, 1007, 1010, 1011, 1063, 1112, 1116, 1124, 1141, 1150], "eingebettet": [7, 207], "34": [7, 164, 165, 173, 176, 187, 192, 197, 202, 204, 206, 207, 210, 213, 214, 218, 219, 223, 226, 227, 229, 234, 236, 239, 242, 246, 249, 252, 254, 255, 264, 267, 271, 272, 274, 278, 284, 288, 294, 299, 302, 306, 310, 316, 322, 336, 337, 338, 339, 474, 488, 492, 493, 494, 495, 507, 508, 509, 607, 608, 609, 610, 611, 616, 648, 867, 870, 892, 1020, 1039, 1112, 1113], "31": [7, 107, 116, 157, 159, 164, 176, 187, 192, 197, 202, 204, 207, 210, 213, 218, 219, 223, 226, 229, 234, 236, 237, 239, 242, 246, 249, 252, 255, 264, 267, 271, 274, 278, 284, 288, 294, 306, 310, 316, 322, 336, 337, 359, 423, 451, 458, 704, 892, 950, 982, 999, 1033, 1065, 1112], "eingenbettet": [7, 207], "mississippi": [7, 207, 210, 219, 223, 226, 234, 236, 242, 246, 252, 255, 267, 274, 288, 294, 306, 310, 316, 322, 647], "count": [7, 29, 64, 88, 90, 114, 121, 154, 166, 169, 207, 210, 211, 214, 219, 223, 226, 229, 234, 236, 239, 242, 246, 252, 255, 267, 273, 274, 288, 294, 306, 310, 316, 322, 371, 372, 373, 374, 387, 443, 499, 525, 553, 667, 717, 742, 763, 766, 769, 770, 771, 772, 774, 777, 780, 781, 787, 791, 801, 814, 819, 825, 828, 831, 841, 850, 870, 892, 903, 906, 936, 939, 946, 957, 978, 1054, 1067, 1077, 1080, 1088, 1091, 1106, 1113, 1121, 1161], "ss": [7, 32, 207, 210, 219, 223, 226, 234, 236, 242, 246, 252, 255, 267, 274, 288, 294, 306, 310, 316, 322, 647], "35": [7, 150, 164, 176, 187, 194, 197, 202, 204, 207, 210, 213, 218, 219, 223, 226, 229, 234, 236, 239, 242, 246, 249, 252, 255, 264, 267, 271, 274, 278, 284, 288, 294, 306, 310, 316, 322, 334, 336, 337, 338, 488, 517, 660, 662, 678, 1112], "find": [7, 17, 42, 44, 47, 48, 53, 66, 116, 153, 154, 155, 156, 160, 165, 170, 182, 183, 184, 194, 196, 207, 210, 214, 216, 219, 223, 227, 229, 232, 234, 236, 239, 242, 246, 249, 252, 255, 260, 267, 269, 272, 274, 279, 281, 288, 290, 291, 294, 296, 306, 308, 310, 312, 316, 318, 322, 327, 336, 342, 347, 430, 436, 443, 455, 463, 470, 477, 498, 503, 504, 507, 508, 509, 510, 515, 532, 533, 562, 567, 570, 584, 586, 588, 589, 610, 612, 623, 626, 628, 631, 635, 647, 660, 662, 664, 667, 710, 714, 759, 763, 776, 815, 836, 837, 838, 840, 845, 849, 850, 852, 853, 854, 856, 870, 897, 900, 903, 906, 915, 916, 927, 955, 984, 987, 1001, 1031, 1035, 1046, 1054, 1114, 1151, 1163, 1165, 1166, 1167, 1172], "36": [7, 113, 150, 155, 159, 164, 176, 187, 197, 202, 204, 207, 210, 213, 218, 219, 223, 226, 229, 234, 236, 239, 242, 246, 249, 255, 264, 267, 271, 274, 278, 284, 288, 294, 306, 310, 316, 322, 334, 337, 342, 347, 455, 468, 474, 492, 516, 519, 520, 521, 525, 526, 527, 677, 726, 727, 728, 743, 761, 892, 914, 1020, 1096], "37": [7, 122, 124, 164, 175, 176, 187, 188, 192, 197, 202, 204, 207, 210, 213, 215, 218, 219, 223, 226, 229, 234, 236, 239, 242, 246, 249, 252, 255, 264, 267, 271, 274, 284, 288, 294, 306, 310, 316, 322, 336, 337, 338, 492, 747, 749, 751, 753, 1020, 1112, 1125, 1126, 1127, 1129, 1130, 1131, 1132], "capit": [7, 38, 207, 210, 219, 226, 236, 242, 267, 288, 336, 870, 1065], "zeil": [7, 173, 187, 197, 204, 207, 210, 213, 219, 223, 242, 246, 264, 267, 306, 310, 322, 337], "nnoch": [7, 204, 207, 223], "some": [7, 17, 21, 107, 141, 153, 154, 155, 156, 158, 161, 164, 165, 169, 175, 178, 183, 186, 190, 193, 195, 206, 207, 213, 215, 223, 229, 230, 235, 241, 242, 246, 258, 259, 261, 267, 270, 273, 274, 276, 280, 282, 283, 290, 308, 309, 315, 316, 318, 360, 384, 418, 429, 445, 468, 474, 545, 570, 572, 592, 610, 623, 626, 680, 689, 717, 725, 727, 737, 740, 762, 763, 769, 774, 783, 798, 806, 810, 827, 829, 847, 852, 907, 915, 916, 937, 940, 966, 968, 970, 978, 1007, 1009, 1036, 1052, 1058, 1104, 1122, 1141, 1163, 1164], "name": [7, 23, 39, 40, 57, 66, 111, 112, 113, 114, 116, 121, 134, 136, 146, 150, 153, 154, 156, 157, 158, 161, 168, 169, 174, 176, 178, 183, 186, 187, 190, 193, 195, 197, 202, 207, 210, 213, 214, 225, 227, 228, 229, 232, 234, 236, 239, 244, 246, 249, 264, 267, 271, 272, 274, 278, 288, 310, 316, 322, 327, 333, 336, 337, 338, 353, 375, 389, 395, 403, 404, 410, 411, 417, 421, 424, 428, 429, 432, 434, 437, 441, 443, 445, 446, 447, 449, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 472, 474, 489, 493, 494, 495, 500, 503, 507, 508, 509, 524, 526, 529, 534, 539, 571, 581, 583, 585, 649, 662, 668, 669, 679, 680, 689, 707, 709, 713, 719, 727, 760, 761, 762, 763, 766, 774, 778, 788, 792, 804, 806, 830, 836, 837, 838, 841, 849, 850, 852, 855, 856, 870, 876, 892, 898, 903, 910, 914, 915, 916, 918, 919, 926, 927, 930, 932, 936, 944, 977, 981, 984, 985, 986, 996, 998, 999, 1001, 1002, 1003, 1006, 1008, 1015, 1020, 1022, 1025, 1029, 1030, 1032, 1033, 1037, 1038, 1046, 1048, 1050, 1052, 1053, 1054, 1059, 1063, 1065, 1070, 1086, 1087, 1097, 1103, 1105, 1113, 1116, 1119, 1120, 1121, 1126, 1127, 1129, 1130, 1131, 1132, 1141, 1148, 1150, 1160, 1164, 1166, 1167], "directori": [7, 17, 44, 62, 98, 100, 101, 103, 110, 116, 129, 133, 150, 153, 154, 155, 156, 165, 169, 180, 185, 188, 194, 206, 207, 213, 214, 215, 216, 223, 226, 227, 229, 239, 242, 254, 259, 260, 261, 269, 270, 282, 283, 287, 290, 291, 296, 304, 308, 312, 322, 327, 328, 342, 347, 353, 355, 356, 409, 443, 445, 450, 453, 457, 459, 461, 463, 464, 466, 469, 471, 473, 487, 488, 510, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 546, 549, 552, 555, 558, 561, 564, 567, 658, 740, 762, 763, 788, 810, 812, 832, 836, 839, 840, 841, 843, 844, 845, 847, 849, 850, 852, 853, 854, 856, 857, 858, 859, 864, 865, 867, 869, 870, 875, 876, 877, 878, 879, 880, 882, 883, 884, 885, 886, 887, 890, 894, 899, 906, 914, 915, 916, 918, 923, 927, 929, 932, 935, 942, 943, 944, 945, 947, 950, 952, 961, 964, 967, 969, 973, 976, 980, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 998, 999, 1000, 1001, 1007, 1015, 1035, 1086, 1095, 1096, 1143, 1147, 1152, 1163, 1167, 1176], "multilin": [7, 197, 207, 222, 225, 229, 234, 242, 246, 306, 317, 342, 410, 1008, 1036], "jetzt": [7, 162, 173, 177, 187, 197, 204, 207, 217, 246, 302, 322], "l": [7, 32, 38, 62, 64, 100, 116, 157, 161, 165, 173, 174, 176, 177, 182, 187, 192, 197, 202, 204, 205, 206, 207, 210, 213, 218, 219, 223, 226, 229, 232, 234, 236, 239, 242, 246, 249, 252, 255, 260, 264, 267, 269, 270, 274, 284, 288, 290, 291, 294, 306, 310, 316, 319, 322, 334, 336, 337, 342, 347, 415, 416, 423, 427, 439, 444, 445, 451, 458, 461, 462, 477, 489, 515, 562, 567, 586, 616, 667, 740, 761, 762, 763, 774, 788, 810, 811, 837, 838, 839, 840, 841, 843, 844, 847, 849, 852, 853, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 874, 877, 878, 881, 882, 884, 885, 886, 888, 889, 890, 894, 899, 903, 906, 907, 909, 914, 915, 916, 917, 918, 925, 927, 932, 933, 935, 937, 938, 940, 941, 942, 945, 947, 950, 953, 961, 964, 967, 968, 969, 978, 982, 984, 985, 986, 987, 996, 998, 999, 1004, 1006, 1027, 1035, 1037, 1040, 1041, 1045, 1047, 1055, 1063, 1090, 1150, 1167], "44": [7, 150, 157, 164, 176, 187, 197, 202, 204, 207, 210, 213, 218, 219, 223, 226, 229, 234, 236, 239, 242, 246, 249, 252, 255, 264, 267, 271, 274, 284, 288, 294, 306, 310, 316, 322, 334, 337, 916, 1136], "45": [7, 29, 51, 53, 55, 56, 73, 74, 75, 88, 91, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 133, 143, 146, 159, 162, 164, 176, 186, 187, 190, 192, 197, 202, 204, 207, 210, 211, 213, 219, 223, 226, 229, 234, 236, 242, 246, 249, 252, 255, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322, 328, 329, 330, 331, 332, 333, 336, 337, 342, 347, 380, 395, 404, 411, 417, 421, 424, 428, 437, 441, 446, 447, 456, 473, 487, 515, 516, 517, 518, 519, 520, 521, 522, 525, 532, 534, 567, 575, 590, 593, 596, 607, 608, 609, 610, 611, 612, 616, 618, 622, 631, 634, 635, 640, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 669, 676, 683, 694, 707, 708, 718, 723, 732, 740, 744, 748, 760, 761, 762, 763, 767, 770, 772, 775, 777, 780, 782, 786, 787, 789, 791, 793, 795, 801, 803, 805, 807, 814, 816, 819, 821, 825, 828, 831, 833, 837, 838, 839, 840, 843, 844, 851, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 890, 900, 906, 913, 918, 919, 920, 921, 922, 929, 935, 937, 945, 947, 949, 961, 964, 967, 969, 986, 988, 989, 990, 991, 992, 993, 994, 995, 1009, 1016, 1017, 1018, 1019, 1023, 1031, 1042, 1051, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1109, 1110, 1112, 1114, 1118, 1121, 1122, 1124, 1128, 1135, 1138, 1140, 1145, 1146], "46": [7, 164, 187, 192, 197, 202, 204, 207, 210, 213, 219, 223, 226, 229, 234, 236, 239, 242, 246, 249, 252, 255, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322, 334, 337, 746, 892, 916, 932, 1112, 1113], "47": [7, 157, 159, 164, 187, 192, 197, 202, 204, 207, 210, 213, 219, 223, 226, 229, 234, 236, 242, 246, 249, 252, 255, 264, 267, 271, 274, 284, 288, 294, 306, 310, 316, 322, 334, 337, 338, 717, 903, 968, 996, 1053, 1112], "try": [7, 27, 116, 121, 129, 150, 153, 154, 156, 161, 173, 176, 186, 187, 190, 194, 197, 202, 204, 207, 210, 213, 216, 219, 221, 223, 226, 229, 232, 234, 236, 239, 242, 246, 249, 251, 252, 254, 255, 258, 259, 261, 263, 264, 267, 270, 271, 274, 281, 282, 283, 284, 287, 288, 294, 305, 306, 310, 316, 318, 322, 328, 335, 336, 337, 338, 342, 346, 347, 357, 435, 439, 465, 469, 476, 493, 498, 507, 515, 523, 532, 534, 567, 575, 593, 596, 612, 618, 622, 627, 631, 634, 635, 652, 654, 656, 659, 660, 661, 662, 663, 664, 695, 703, 707, 717, 723, 727, 741, 743, 757, 759, 761, 762, 763, 815, 818, 915, 936, 981, 1005, 1012, 1065, 1108, 1114, 1125, 1126, 1130, 1143], "except": [7, 21, 29, 43, 46, 62, 64, 75, 111, 112, 155, 159, 165, 173, 174, 181, 186, 187, 190, 191, 193, 195, 197, 202, 204, 207, 210, 214, 215, 216, 219, 221, 223, 226, 227, 230, 231, 234, 236, 240, 241, 244, 246, 249, 251, 252, 256, 264, 267, 271, 274, 282, 283, 284, 287, 288, 294, 304, 305, 306, 308, 309, 310, 316, 322, 327, 329, 335, 336, 337, 338, 342, 347, 355, 356, 375, 427, 430, 464, 469, 470, 477, 504, 515, 532, 534, 567, 596, 612, 618, 622, 631, 634, 635, 639, 652, 659, 660, 662, 663, 664, 668, 671, 695, 703, 724, 726, 727, 738, 743, 763, 778, 810, 843, 848, 914, 968, 982, 1005, 1009, 1012, 1015, 1018, 1021, 1031, 1033, 1036, 1054, 1056, 1106, 1108, 1125, 1130, 1143, 1153, 1160], "index": [7, 13, 23, 29, 39, 51, 53, 91, 111, 112, 150, 151, 160, 173, 175, 180, 185, 187, 188, 190, 191, 193, 195, 199, 200, 202, 205, 207, 210, 211, 213, 214, 216, 219, 221, 224, 226, 227, 229, 230, 232, 233, 235, 236, 237, 240, 242, 243, 245, 247, 248, 249, 251, 252, 254, 263, 264, 266, 267, 272, 273, 274, 276, 278, 280, 282, 283, 286, 287, 288, 292, 293, 295, 298, 301, 304, 305, 306, 308, 309, 310, 314, 315, 316, 320, 321, 322, 326, 342, 349, 373, 389, 415, 443, 451, 546, 549, 552, 555, 558, 561, 562, 564, 602, 603, 605, 610, 649, 689, 717, 729, 743, 763, 806, 973, 976, 980, 1031, 1032, 1044, 1047, 1054, 1060, 1061, 1062, 1063, 1065, 1067, 1080, 1086, 1091, 1106, 1108, 1109, 1110, 1112, 1113, 1114, 1122, 1124, 1126, 1128, 1129, 1131, 1135, 1145, 1147, 1152], "out": [7, 31, 44, 45, 50, 55, 64, 66, 76, 86, 107, 113, 114, 116, 118, 121, 129, 133, 140, 146, 147, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 164, 165, 169, 174, 175, 182, 183, 186, 190, 193, 194, 202, 207, 210, 215, 223, 229, 230, 232, 239, 242, 246, 250, 279, 305, 306, 328, 342, 348, 353, 364, 385, 403, 409, 410, 418, 429, 436, 443, 444, 445, 449, 451, 452, 457, 462, 465, 467, 469, 494, 495, 510, 513, 523, 539, 545, 562, 569, 571, 585, 600, 642, 645, 680, 695, 714, 717, 730, 741, 759, 778, 779, 788, 810, 818, 823, 837, 838, 841, 845, 849, 852, 856, 866, 897, 903, 907, 914, 915, 916, 933, 934, 950, 968, 971, 981, 982, 984, 996, 1001, 1008, 1012, 1052, 1053, 1060, 1086, 1089, 1116, 1121, 1123, 1129, 1131, 1132, 1136, 1142, 1161], "rang": [7, 29, 42, 64, 91, 109, 116, 117, 161, 174, 175, 176, 181, 190, 193, 195, 198, 199, 202, 205, 207, 210, 211, 214, 221, 222, 224, 225, 227, 228, 229, 232, 233, 235, 237, 238, 241, 242, 247, 248, 250, 251, 253, 255, 257, 265, 266, 267, 273, 275, 276, 283, 284, 286, 287, 289, 292, 293, 295, 304, 306, 308, 309, 310, 314, 315, 316, 319, 320, 321, 323, 326, 334, 388, 415, 431, 433, 479, 513, 516, 517, 521, 545, 561, 562, 598, 600, 603, 606, 707, 757, 760, 762, 763, 774, 907, 914, 963, 969, 972, 1004, 1007, 1009, 1014, 1016, 1018, 1020, 1030, 1031, 1039, 1043, 1060, 1064, 1065, 1066, 1067, 1077, 1079, 1080, 1081, 1083, 1087, 1088, 1089, 1090, 1091, 1092, 1106, 1118, 1121, 1129, 1131, 1160, 1161, 1171], "48": [7, 157, 164, 173, 187, 192, 197, 202, 204, 207, 210, 213, 219, 226, 229, 234, 236, 239, 242, 246, 249, 252, 255, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322, 334, 337, 338, 914], "append": [7, 173, 174, 175, 176, 177, 187, 192, 194, 197, 202, 204, 205, 206, 207, 210, 213, 218, 219, 220, 223, 226, 227, 229, 234, 236, 239, 242, 246, 249, 252, 255, 264, 267, 271, 274, 284, 288, 294, 306, 310, 316, 322, 337, 338, 451, 454, 544, 562, 604, 620, 632, 659, 771, 783, 798, 810, 837, 838, 852, 855, 876, 889, 914, 923, 936, 972, 1004, 1010, 1011, 1024, 1040, 1045, 1048, 1050, 1055, 1058, 1059, 1085, 1133, 1136], "one": [7, 21, 27, 32, 40, 44, 45, 50, 59, 63, 64, 67, 81, 85, 86, 107, 111, 112, 114, 116, 117, 120, 121, 125, 129, 133, 134, 136, 142, 144, 148, 153, 154, 155, 156, 157, 158, 160, 161, 164, 165, 169, 174, 175, 176, 178, 183, 186, 187, 190, 192, 194, 197, 202, 204, 205, 206, 207, 210, 213, 215, 216, 223, 226, 229, 234, 236, 237, 239, 240, 242, 245, 246, 249, 252, 254, 264, 267, 270, 273, 274, 276, 278, 280, 284, 288, 293, 294, 296, 305, 310, 312, 316, 322, 327, 328, 333, 334, 339, 342, 348, 360, 365, 372, 383, 388, 390, 398, 403, 405, 406, 410, 413, 415, 420, 423, 431, 432, 433, 435, 439, 443, 445, 451, 452, 454, 455, 457, 459, 463, 464, 467, 468, 469, 474, 476, 477, 479, 480, 488, 493, 495, 513, 516, 518, 519, 523, 524, 526, 545, 556, 562, 573, 574, 582, 583, 585, 586, 587, 588, 589, 600, 601, 609, 620, 623, 627, 642, 649, 666, 667, 670, 671, 672, 675, 684, 695, 714, 716, 717, 725, 727, 728, 729, 730, 731, 737, 739, 741, 748, 761, 771, 778, 785, 788, 798, 804, 810, 818, 826, 830, 835, 836, 837, 843, 852, 854, 855, 870, 889, 903, 907, 909, 910, 911, 914, 915, 916, 917, 919, 923, 926, 927, 933, 934, 936, 937, 940, 943, 944, 946, 952, 953, 954, 955, 957, 960, 963, 966, 968, 969, 970, 977, 981, 984, 987, 990, 996, 999, 1000, 1002, 1003, 1005, 1007, 1008, 1010, 1016, 1018, 1019, 1021, 1032, 1033, 1036, 1037, 1038, 1040, 1044, 1045, 1047, 1049, 1050, 1054, 1056, 1058, 1059, 1066, 1076, 1079, 1086, 1087, 1112, 1113, 1114, 1115, 1117, 1121, 1122, 1124, 1126, 1132, 1133, 1134, 1137, 1141, 1143, 1148, 1150, 1163, 1166], "49": [7, 164, 173, 187, 192, 197, 202, 204, 207, 210, 213, 219, 223, 226, 229, 234, 236, 242, 246, 249, 252, 255, 264, 267, 271, 274, 284, 288, 294, 306, 310, 316, 322, 334, 337, 338, 710, 855, 996, 1010], "extend": [7, 60, 155, 156, 187, 204, 205, 207, 212, 218, 223, 226, 229, 234, 236, 242, 246, 249, 252, 264, 267, 274, 280, 284, 288, 294, 316, 322, 337, 472, 479, 488, 513, 586, 588, 589, 641, 771, 842, 1040, 1045, 1055, 1113, 1125], "slice": [7, 29, 91, 175, 177, 186, 190, 191, 193, 195, 200, 203, 204, 207, 214, 226, 227, 229, 230, 233, 237, 238, 244, 245, 247, 248, 249, 251, 263, 266, 268, 273, 276, 283, 286, 287, 289, 292, 293, 295, 304, 305, 308, 309, 314, 315, 320, 321, 326, 763, 808, 969, 1031, 1044, 1048, 1067, 1080, 1091, 1106, 1122, 1126, 1128, 1130], "inclus": [7, 193, 207, 234, 246, 409, 602, 1069, 1129], "exclus": [7, 181, 207, 229, 246, 283, 391, 602, 737, 936, 969, 1018, 1054, 1058, 1069, 1129], "51": [7, 164, 187, 192, 197, 202, 204, 207, 210, 213, 219, 223, 226, 229, 234, 236, 242, 246, 249, 252, 255, 264, 267, 271, 274, 284, 288, 294, 306, 310, 316, 322, 334, 337, 624, 625, 626, 627, 892, 894, 1112], "l\u00f6schen": [7, 197, 203, 207, 342], "52": [7, 164, 173, 187, 192, 197, 202, 204, 207, 210, 213, 219, 223, 226, 229, 234, 236, 242, 246, 249, 252, 255, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322, 337, 338, 916, 1112], "del": [7, 38, 173, 176, 177, 187, 202, 204, 207, 210, 218, 223, 226, 229, 234, 236, 242, 246, 249, 252, 255, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322, 335, 337, 1015, 1040, 1056], "53": [7, 157, 187, 192, 197, 202, 204, 207, 210, 213, 219, 223, 226, 229, 234, 236, 242, 246, 249, 252, 255, 264, 267, 271, 274, 284, 288, 294, 306, 310, 316, 322, 334, 337, 349, 493, 494, 720, 790, 892, 914, 984, 996, 1112, 1113], "iter": [7, 24, 29, 64, 121, 122, 174, 177, 181, 186, 190, 191, 193, 195, 198, 199, 203, 205, 207, 211, 212, 214, 215, 217, 221, 222, 224, 225, 227, 228, 230, 231, 232, 233, 235, 237, 238, 241, 244, 246, 248, 249, 253, 265, 268, 274, 282, 283, 285, 289, 294, 304, 307, 308, 309, 311, 317, 323, 327, 342, 348, 400, 402, 415, 451, 476, 526, 545, 562, 604, 605, 606, 610, 613, 620, 623, 625, 627, 632, 682, 689, 698, 719, 757, 763, 933, 1005, 1009, 1011, 1020, 1033, 1043, 1057, 1058, 1064, 1065, 1066, 1067, 1080, 1091, 1103, 1106, 1108, 1118, 1120, 1130, 1133, 1171], "mittel": [7, 11, 23, 177, 187, 189, 205, 207, 212, 360, 1155, 1158, 1167, 1175], "54": [7, 164, 173, 187, 192, 197, 202, 204, 207, 210, 213, 219, 223, 226, 229, 234, 236, 239, 242, 246, 249, 252, 255, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322, 334, 336, 337, 349, 624, 625, 626, 627, 727, 800, 892, 914, 996, 1112], "element": [7, 8, 35, 38, 107, 110, 111, 112, 116, 174, 176, 177, 187, 192, 193, 198, 199, 202, 204, 205, 207, 208, 210, 213, 217, 218, 219, 223, 226, 227, 229, 233, 235, 236, 242, 245, 246, 249, 253, 274, 278, 281, 284, 293, 306, 336, 337, 373, 400, 415, 423, 427, 430, 515, 529, 532, 534, 543, 562, 567, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 613, 617, 620, 624, 627, 649, 667, 670, 672, 689, 703, 717, 719, 763, 771, 978, 1010, 1012, 1029, 1040, 1045, 1046, 1055, 1057, 1090, 1116, 1133, 1141, 1164, 1171], "55": [7, 164, 173, 187, 192, 197, 202, 204, 207, 210, 213, 219, 223, 226, 229, 234, 236, 242, 246, 249, 252, 255, 264, 267, 271, 274, 284, 288, 294, 306, 310, 316, 322, 334, 336, 337, 338, 349, 426, 451, 657, 658, 659, 660, 662, 761, 984, 1065], "def": [7, 64, 173, 174, 177, 187, 192, 193, 197, 202, 204, 205, 207, 210, 213, 214, 219, 220, 223, 226, 227, 229, 234, 236, 239, 242, 246, 249, 252, 255, 264, 267, 272, 274, 284, 288, 294, 299, 302, 306, 310, 316, 322, 337, 338, 451, 709, 962, 1005, 1006, 1007, 1010, 1011, 1012, 1015, 1016, 1018, 1020, 1022, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1036, 1039, 1049, 1050, 1055, 1059, 1090, 1096, 1103, 1104, 1105, 1124, 1130, 1132, 1141, 1142], "is_integ": [7, 207, 264], "elem": [7, 173, 177, 187, 192, 197, 202, 204, 207, 219, 226, 229, 234, 239, 264, 267, 274, 284, 288, 294, 310, 316, 322, 529, 626, 628, 675, 695, 697, 699, 702, 716, 717, 719, 739, 1012, 1055, 1059], "type": [7, 29, 50, 79, 84, 101, 111, 112, 134, 146, 147, 150, 153, 154, 157, 159, 161, 169, 173, 174, 177, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 203, 204, 206, 207, 210, 213, 214, 215, 218, 219, 223, 228, 231, 232, 234, 236, 241, 244, 246, 250, 252, 254, 255, 257, 265, 267, 270, 271, 274, 282, 283, 284, 287, 288, 294, 299, 303, 304, 305, 307, 308, 309, 310, 315, 316, 319, 322, 334, 335, 336, 337, 342, 344, 345, 353, 375, 386, 387, 394, 399, 404, 405, 409, 411, 415, 417, 418, 421, 424, 425, 426, 427, 428, 431, 433, 434, 436, 437, 441, 446, 447, 451, 467, 469, 478, 481, 489, 495, 525, 529, 550, 559, 569, 571, 577, 578, 582, 584, 585, 595, 603, 632, 638, 642, 645, 647, 649, 651, 657, 669, 670, 675, 680, 681, 689, 695, 706, 707, 709, 714, 715, 716, 717, 726, 727, 729, 730, 731, 736, 746, 747, 749, 753, 754, 756, 758, 759, 760, 761, 762, 763, 766, 769, 771, 776, 779, 798, 810, 836, 840, 852, 855, 867, 870, 873, 884, 886, 887, 890, 898, 906, 907, 909, 914, 918, 923, 932, 933, 936, 939, 940, 941, 942, 943, 953, 965, 974, 977, 981, 982, 984, 1001, 1003, 1006, 1009, 1012, 1016, 1021, 1022, 1023, 1030, 1034, 1036, 1038, 1039, 1040, 1044, 1046, 1047, 1048, 1053, 1054, 1056, 1058, 1060, 1073, 1084, 1085, 1103, 1106, 1108, 1113, 1117, 1121, 1126, 1127, 1129, 1136, 1141, 1143, 1161, 1162], "int": [7, 21, 46, 108, 111, 112, 113, 129, 156, 165, 174, 176, 187, 193, 197, 202, 204, 205, 207, 210, 214, 215, 220, 223, 226, 227, 229, 232, 234, 236, 239, 242, 246, 249, 252, 255, 264, 267, 273, 274, 276, 284, 288, 294, 302, 306, 310, 316, 321, 322, 335, 337, 338, 364, 365, 367, 369, 371, 373, 374, 375, 377, 378, 379, 383, 384, 385, 387, 388, 389, 393, 403, 405, 406, 407, 408, 409, 410, 412, 413, 415, 416, 418, 419, 420, 423, 425, 426, 430, 431, 432, 433, 434, 435, 439, 440, 474, 481, 488, 489, 493, 494, 495, 496, 499, 502, 503, 505, 507, 508, 509, 511, 513, 521, 523, 525, 527, 528, 529, 530, 531, 533, 543, 545, 550, 553, 559, 562, 569, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 592, 594, 595, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 613, 614, 615, 616, 620, 623, 624, 625, 626, 627, 628, 632, 634, 638, 639, 642, 644, 645, 647, 648, 649, 651, 656, 657, 658, 659, 660, 661, 662, 663, 667, 668, 670, 671, 674, 680, 681, 682, 684, 685, 686, 687, 689, 690, 691, 692, 693, 695, 696, 697, 699, 700, 701, 702, 703, 704, 705, 709, 710, 711, 712, 714, 715, 716, 717, 719, 721, 728, 729, 730, 731, 734, 736, 739, 741, 743, 747, 749, 751, 753, 761, 766, 769, 774, 776, 781, 788, 790, 792, 794, 798, 802, 804, 806, 815, 820, 827, 847, 867, 910, 914, 928, 930, 932, 933, 934, 936, 939, 940, 941, 942, 943, 946, 948, 951, 953, 955, 957, 959, 965, 968, 971, 972, 974, 977, 978, 981, 982, 984, 996, 1000, 1002, 1027, 1038, 1039, 1047, 1048, 1050, 1053, 1059, 1060, 1075, 1098, 1100, 1103, 1104, 1148, 1153], "return": [7, 21, 27, 64, 108, 113, 150, 153, 155, 156, 157, 161, 165, 173, 174, 177, 187, 191, 193, 195, 197, 202, 204, 205, 207, 210, 213, 214, 215, 219, 220, 223, 226, 227, 229, 232, 234, 236, 239, 242, 246, 249, 252, 256, 257, 264, 267, 272, 274, 278, 284, 288, 299, 302, 305, 306, 310, 316, 323, 337, 338, 364, 365, 367, 371, 373, 375, 384, 393, 403, 409, 415, 416, 418, 425, 426, 429, 430, 432, 433, 435, 439, 451, 458, 467, 468, 469, 470, 474, 476, 479, 488, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 513, 520, 521, 525, 526, 529, 545, 553, 559, 562, 569, 570, 571, 573, 574, 577, 578, 579, 580, 582, 583, 584, 585, 586, 587, 588, 592, 594, 595, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 610, 611, 614, 615, 616, 620, 623, 624, 625, 626, 627, 628, 634, 638, 639, 642, 644, 645, 651, 655, 656, 657, 658, 659, 660, 661, 662, 663, 667, 672, 674, 675, 682, 684, 685, 686, 687, 689, 690, 691, 692, 693, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 709, 710, 711, 712, 713, 714, 717, 719, 724, 725, 727, 728, 729, 730, 731, 737, 739, 741, 747, 749, 751, 752, 753, 754, 757, 758, 759, 761, 766, 773, 781, 788, 792, 800, 802, 824, 826, 830, 847, 867, 914, 928, 930, 932, 933, 934, 936, 937, 939, 940, 941, 942, 943, 948, 951, 952, 953, 963, 965, 968, 974, 977, 978, 981, 982, 984, 996, 1000, 1001, 1002, 1003, 1005, 1006, 1007, 1008, 1010, 1011, 1012, 1020, 1024, 1025, 1027, 1028, 1029, 1050, 1052, 1054, 1055, 1056, 1059, 1065, 1081, 1083, 1087, 1090, 1091, 1098, 1100, 1103, 1127, 1129, 1130, 1132, 1141, 1148, 1153], "els": [7, 21, 43, 50, 64, 111, 112, 117, 133, 154, 156, 157, 160, 169, 174, 177, 187, 190, 193, 197, 205, 207, 210, 213, 214, 215, 219, 223, 226, 227, 230, 231, 232, 234, 238, 239, 244, 246, 249, 253, 255, 264, 266, 267, 272, 274, 284, 288, 294, 306, 316, 323, 327, 338, 349, 371, 377, 388, 393, 404, 410, 411, 417, 421, 424, 428, 429, 437, 441, 446, 447, 451, 459, 460, 474, 498, 505, 508, 562, 585, 609, 610, 620, 627, 641, 661, 669, 674, 707, 728, 730, 737, 741, 760, 762, 763, 792, 802, 826, 837, 838, 843, 862, 864, 867, 873, 894, 915, 928, 931, 936, 962, 963, 965, 968, 970, 1008, 1015, 1027, 1028, 1031, 1042, 1050, 1056, 1130, 1160], "fals": [7, 46, 111, 112, 157, 159, 173, 174, 187, 192, 197, 202, 204, 205, 207, 210, 213, 219, 223, 226, 227, 229, 234, 236, 239, 242, 246, 249, 252, 255, 264, 267, 271, 274, 278, 284, 288, 294, 299, 306, 310, 316, 322, 336, 351, 367, 371, 388, 425, 451, 585, 610, 642, 649, 672, 684, 737, 741, 743, 830, 843, 870, 962, 963, 968, 970, 990, 1005, 1020, 1024, 1027, 1040, 1041, 1043, 1044, 1048, 1126, 1127, 1130, 1132, 1148], "56": [7, 150, 164, 187, 192, 197, 202, 204, 207, 210, 213, 219, 223, 226, 229, 234, 236, 242, 246, 249, 252, 255, 264, 267, 271, 274, 284, 288, 294, 306, 310, 316, 322, 334, 336, 337, 349, 388, 492, 580, 761, 889, 914, 916, 1112, 1125, 1126, 1127, 1129, 1130, 1131, 1132], "x": [7, 23, 32, 42, 62, 64, 113, 159, 165, 173, 174, 175, 177, 187, 197, 202, 204, 206, 207, 210, 213, 223, 226, 229, 230, 234, 236, 242, 246, 249, 252, 254, 255, 264, 267, 271, 274, 283, 284, 288, 310, 316, 322, 338, 342, 384, 387, 388, 394, 409, 410, 412, 415, 418, 419, 423, 425, 433, 435, 439, 462, 513, 523, 560, 569, 570, 571, 572, 574, 576, 577, 578, 579, 580, 581, 583, 585, 587, 588, 595, 602, 610, 670, 671, 672, 674, 689, 691, 692, 693, 710, 721, 730, 836, 837, 838, 841, 845, 847, 852, 855, 857, 858, 866, 867, 892, 895, 899, 901, 907, 914, 915, 916, 932, 942, 948, 950, 951, 959, 963, 984, 985, 986, 987, 992, 996, 998, 999, 1004, 1005, 1033, 1035, 1041, 1049, 1050, 1052, 1053, 1054, 1057, 1058, 1062, 1086, 1113, 1130, 1141, 1142, 1148], "filter": [7, 29, 107, 110, 116, 171, 174, 207, 214, 227, 244, 267, 273, 276, 280, 281, 288, 305, 307, 310, 317, 322, 326, 515, 532, 567, 725, 726, 763, 835, 854, 903, 1106, 1122, 1128, 1131, 1148], "57": [7, 150, 164, 187, 192, 197, 202, 204, 207, 210, 213, 219, 223, 226, 229, 234, 236, 242, 246, 249, 252, 255, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322, 334, 337, 338, 458, 463, 892, 914, 927, 985, 986, 1112], "zero": [7, 32, 38, 150, 156, 172, 174, 175, 177, 187, 197, 205, 207, 210, 223, 229, 234, 236, 239, 242, 246, 249, 264, 288, 322, 342, 364, 373, 391, 716, 726, 730, 769, 781, 796, 841, 870, 885, 892, 916, 936, 957, 963, 966, 969, 972, 977, 978, 1044], "two": [7, 12, 17, 29, 32, 34, 35, 36, 38, 42, 44, 54, 70, 86, 107, 125, 142, 144, 147, 148, 153, 154, 155, 156, 169, 174, 175, 176, 182, 186, 187, 192, 197, 198, 200, 202, 204, 205, 207, 210, 211, 213, 215, 216, 217, 221, 223, 224, 227, 229, 232, 233, 234, 236, 237, 242, 243, 245, 246, 248, 250, 251, 252, 264, 266, 267, 270, 272, 273, 274, 282, 284, 286, 287, 288, 292, 293, 294, 298, 301, 310, 314, 315, 316, 320, 321, 322, 326, 328, 334, 342, 348, 351, 360, 361, 372, 379, 409, 415, 417, 418, 421, 423, 424, 427, 428, 430, 432, 435, 437, 441, 446, 447, 449, 450, 451, 452, 461, 464, 477, 479, 489, 493, 494, 513, 523, 525, 545, 553, 556, 562, 578, 583, 585, 602, 625, 667, 668, 669, 670, 671, 707, 713, 716, 717, 719, 726, 729, 731, 760, 762, 763, 808, 810, 813, 875, 877, 897, 907, 909, 914, 915, 916, 933, 936, 937, 944, 954, 955, 963, 968, 977, 982, 992, 1002, 1010, 1016, 1019, 1022, 1027, 1030, 1031, 1037, 1040, 1043, 1054, 1056, 1058, 1064, 1067, 1069, 1070, 1071, 1074, 1076, 1077, 1080, 1081, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1103, 1106, 1107, 1113, 1115, 1121, 1129, 1142, 1148, 1161, 1171, 1176], "58": [7, 157, 164, 187, 192, 197, 202, 204, 207, 210, 213, 219, 223, 226, 229, 234, 236, 242, 246, 249, 252, 255, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322, 337, 342, 347, 349, 451, 916, 985, 986, 996, 1112, 1113], "59": [7, 164, 187, 192, 197, 202, 204, 207, 210, 213, 219, 223, 226, 229, 234, 236, 242, 246, 249, 252, 255, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322, 334, 337, 349, 986, 987, 996, 1112], "three": [7, 12, 32, 36, 38, 43, 64, 111, 112, 121, 155, 167, 170, 174, 175, 186, 187, 190, 191, 197, 202, 204, 205, 207, 213, 221, 223, 226, 229, 234, 236, 239, 242, 246, 249, 252, 264, 267, 272, 273, 274, 276, 282, 283, 284, 288, 293, 294, 306, 310, 316, 322, 342, 360, 429, 604, 649, 843, 852, 855, 870, 907, 914, 916, 936, 968, 977, 1012, 1022, 1040, 1044, 1054, 1056, 1058, 1070, 1076, 1107, 1108, 1162, 1176], "60": [7, 64, 107, 164, 187, 192, 197, 202, 204, 207, 210, 213, 219, 223, 226, 229, 234, 236, 242, 246, 249, 252, 254, 255, 264, 267, 271, 274, 284, 288, 294, 306, 310, 316, 322, 336, 337, 493, 494, 495, 507, 508, 509, 516, 852, 914, 915, 916, 1010, 1112, 1113], "61": [7, 64, 164, 175, 187, 192, 197, 202, 204, 207, 210, 213, 219, 226, 229, 234, 236, 242, 246, 249, 255, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322, 334, 337, 342, 347, 1112, 1113], "62": [7, 164, 187, 192, 197, 202, 204, 207, 210, 213, 219, 223, 226, 229, 234, 236, 242, 246, 249, 252, 255, 264, 267, 271, 274, 284, 288, 294, 306, 310, 316, 322, 337, 852, 1065, 1112], "63": [7, 164, 187, 192, 197, 202, 204, 207, 210, 213, 219, 226, 229, 234, 236, 242, 246, 249, 252, 255, 264, 267, 271, 274, 284, 288, 294, 306, 310, 316, 322, 334, 337, 342, 347, 1065, 1112], "k": [7, 29, 156, 175, 177, 187, 190, 202, 204, 207, 210, 214, 215, 226, 229, 234, 236, 239, 242, 249, 252, 264, 267, 273, 274, 284, 294, 304, 306, 308, 310, 316, 322, 343, 344, 363, 491, 624, 667, 729, 747, 763, 870, 917, 952, 1106, 1109, 1115, 1122, 1141], "v": [7, 20, 23, 31, 32, 89, 114, 124, 136, 150, 154, 161, 175, 178, 181, 187, 191, 193, 195, 199, 201, 202, 205, 206, 207, 212, 214, 215, 216, 217, 223, 226, 227, 229, 230, 232, 233, 235, 241, 244, 245, 247, 250, 252, 256, 263, 264, 267, 270, 275, 283, 285, 289, 293, 294, 300, 306, 310, 316, 319, 322, 328, 342, 439, 463, 468, 489, 515, 549, 567, 624, 644, 667, 671, 675, 680, 681, 682, 689, 690, 691, 692, 693, 698, 701, 702, 703, 709, 715, 716, 717, 740, 743, 746, 748, 759, 762, 763, 772, 777, 780, 782, 787, 791, 793, 797, 801, 802, 803, 805, 807, 810, 812, 814, 818, 819, 821, 825, 828, 831, 836, 840, 843, 844, 847, 870, 872, 899, 906, 929, 935, 937, 945, 947, 961, 964, 967, 969, 977, 978, 984, 1027, 1050, 1143, 1144, 1156, 1158, 1175, 1177], "65": [7, 187, 192, 197, 202, 204, 207, 210, 213, 219, 223, 226, 229, 234, 236, 242, 246, 249, 252, 255, 264, 267, 271, 274, 284, 288, 294, 306, 310, 316, 322, 334, 337, 657, 972, 1112, 1113], "item": [7, 154, 174, 176, 187, 192, 197, 202, 204, 207, 210, 213, 214, 218, 219, 223, 226, 227, 229, 234, 236, 239, 242, 246, 249, 252, 254, 258, 259, 261, 264, 267, 272, 274, 284, 288, 294, 306, 310, 316, 322, 336, 427, 431, 433, 452, 716, 760, 762, 763, 977, 978, 1012, 1013, 1014, 1020, 1046, 1053, 1056, 1058, 1096, 1141], "66": [7, 157, 164, 187, 192, 197, 202, 204, 207, 210, 213, 219, 226, 229, 234, 236, 242, 246, 249, 252, 255, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322, 337, 647, 1065, 1112, 1113], "": [7, 8, 14, 20, 23, 31, 35, 37, 38, 40, 43, 44, 45, 48, 55, 59, 60, 62, 63, 64, 66, 67, 79, 90, 105, 109, 110, 114, 116, 121, 129, 133, 134, 140, 150, 151, 153, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 171, 174, 175, 176, 178, 180, 181, 183, 184, 186, 187, 190, 192, 193, 197, 198, 202, 204, 205, 206, 207, 208, 210, 213, 215, 216, 219, 220, 223, 226, 227, 229, 230, 232, 233, 234, 236, 239, 240, 242, 246, 249, 252, 255, 258, 259, 261, 264, 267, 270, 271, 272, 273, 274, 276, 279, 280, 281, 282, 283, 284, 288, 291, 294, 296, 298, 301, 304, 305, 306, 308, 310, 312, 316, 318, 319, 321, 322, 327, 328, 336, 337, 339, 342, 345, 346, 360, 362, 375, 377, 383, 388, 409, 410, 413, 422, 427, 429, 431, 432, 433, 434, 435, 439, 450, 451, 452, 454, 455, 457, 459, 460, 463, 464, 467, 468, 469, 471, 472, 473, 474, 477, 478, 489, 491, 492, 494, 495, 499, 510, 512, 523, 524, 525, 526, 529, 535, 537, 538, 546, 549, 552, 553, 555, 558, 561, 564, 571, 573, 574, 577, 578, 581, 582, 584, 585, 594, 604, 614, 615, 625, 632, 634, 639, 641, 644, 645, 647, 651, 654, 658, 668, 669, 671, 673, 675, 678, 679, 680, 681, 684, 688, 689, 695, 704, 707, 709, 712, 716, 717, 719, 721, 725, 726, 727, 729, 731, 739, 741, 742, 743, 747, 749, 751, 752, 753, 754, 759, 761, 762, 763, 769, 778, 781, 783, 788, 794, 796, 806, 815, 818, 830, 835, 836, 837, 838, 841, 842, 845, 847, 848, 852, 853, 854, 856, 860, 862, 864, 866, 867, 868, 870, 872, 873, 889, 892, 893, 895, 896, 898, 899, 901, 902, 903, 907, 910, 914, 915, 916, 917, 918, 925, 926, 927, 928, 930, 931, 932, 933, 934, 936, 937, 939, 940, 941, 942, 943, 944, 946, 948, 950, 951, 953, 954, 955, 959, 960, 963, 965, 968, 969, 970, 972, 973, 974, 976, 978, 980, 981, 982, 987, 996, 998, 999, 1000, 1001, 1002, 1003, 1005, 1006, 1007, 1010, 1011, 1013, 1014, 1015, 1019, 1020, 1027, 1031, 1032, 1033, 1036, 1040, 1041, 1047, 1050, 1053, 1054, 1057, 1058, 1065, 1070, 1077, 1088, 1095, 1096, 1097, 1099, 1107, 1114, 1116, 1117, 1120, 1121, 1124, 1131, 1132, 1133, 1134, 1135, 1136, 1141, 1142, 1147, 1150, 1152, 1153, 1156, 1161, 1163, 1166, 1179], "rot": [7, 207, 218], "gruen": [7, 207], "blau": [7, 207, 218], "67": [7, 164, 175, 187, 197, 202, 204, 207, 210, 213, 219, 226, 229, 234, 236, 242, 246, 249, 252, 255, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322, 337, 342, 347, 451, 516, 972, 1053, 1065, 1112, 1113], "69": [7, 62, 159, 164, 187, 192, 197, 202, 204, 207, 210, 213, 219, 223, 226, 229, 234, 236, 242, 246, 249, 252, 255, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322, 337, 1112, 1113, 1132], "schwarz": [7, 207, 218], "70": [7, 62, 156, 164, 187, 192, 194, 197, 202, 204, 207, 210, 213, 219, 226, 229, 234, 236, 242, 246, 249, 252, 255, 264, 267, 271, 274, 284, 288, 294, 306, 310, 316, 322, 337, 451, 516, 914, 915, 916, 1010, 1112, 1113, 1141], "add": [7, 23, 42, 44, 49, 60, 66, 114, 121, 123, 134, 136, 138, 149, 150, 154, 155, 156, 160, 161, 165, 169, 174, 183, 186, 187, 190, 193, 202, 204, 205, 207, 210, 213, 215, 219, 223, 226, 227, 229, 234, 239, 242, 246, 249, 252, 258, 259, 264, 267, 270, 274, 278, 284, 288, 294, 299, 301, 306, 310, 316, 319, 322, 342, 348, 390, 391, 430, 431, 439, 452, 453, 459, 462, 469, 471, 472, 488, 489, 493, 498, 499, 510, 518, 525, 527, 545, 559, 569, 582, 583, 585, 587, 656, 657, 658, 667, 675, 695, 706, 717, 725, 739, 741, 776, 778, 779, 783, 790, 798, 800, 810, 823, 826, 836, 909, 914, 915, 916, 944, 968, 970, 972, 978, 983, 996, 998, 1005, 1006, 1028, 1032, 1040, 1058, 1063, 1130, 1141, 1142, 1148], "71": [7, 164, 187, 192, 197, 202, 204, 207, 210, 213, 219, 226, 229, 234, 236, 242, 246, 249, 252, 255, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322, 337, 342, 347, 985, 986, 1112, 1113], "72": [7, 164, 187, 192, 197, 202, 204, 207, 210, 213, 219, 226, 229, 234, 236, 242, 246, 249, 252, 255, 264, 267, 271, 274, 284, 288, 294, 306, 310, 316, 322, 334, 337, 342, 347, 577, 901, 996, 1065, 1112, 1113], "remov": [7, 57, 100, 110, 116, 121, 122, 160, 161, 174, 176, 187, 202, 207, 213, 219, 227, 229, 234, 236, 242, 246, 249, 253, 254, 260, 267, 269, 270, 284, 288, 290, 291, 294, 305, 306, 310, 316, 322, 454, 455, 473, 487, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525, 532, 533, 534, 539, 543, 562, 567, 597, 603, 620, 653, 675, 728, 739, 740, 741, 758, 761, 762, 763, 771, 788, 798, 806, 829, 836, 837, 838, 839, 840, 843, 844, 857, 858, 860, 862, 863, 864, 865, 867, 868, 874, 875, 876, 877, 879, 880, 882, 884, 890, 906, 917, 927, 929, 935, 937, 940, 945, 947, 950, 961, 964, 967, 969, 986, 988, 989, 990, 991, 992, 993, 994, 995, 996, 1000, 1010, 1030, 1040, 1055, 1056, 1057, 1090], "73": [7, 164, 175, 187, 197, 202, 204, 207, 210, 213, 219, 226, 229, 234, 236, 242, 246, 249, 255, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322, 334, 337, 1112], "74": [7, 157, 159, 164, 187, 197, 202, 204, 207, 210, 213, 219, 226, 229, 234, 236, 242, 246, 249, 252, 255, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322, 337, 892, 901, 1065, 1112, 1113], "75": [7, 164, 187, 197, 202, 204, 207, 210, 213, 215, 219, 223, 226, 229, 234, 236, 242, 246, 249, 252, 255, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322, 337, 451, 1112, 1113], "sum": [7, 38, 64, 187, 207, 211, 212, 226, 227, 229, 232, 234, 242, 245, 246, 249, 252, 267, 274, 316, 322, 400, 415, 430, 432, 433, 435, 499, 525, 545, 569, 583, 585, 598, 602, 650, 664, 747, 749, 751, 753, 763, 969, 1027, 1043, 1126], "100": [7, 32, 114, 153, 154, 159, 169, 173, 174, 187, 197, 204, 207, 210, 213, 219, 223, 226, 229, 234, 236, 239, 242, 245, 246, 249, 252, 254, 255, 264, 267, 270, 271, 272, 274, 278, 284, 288, 294, 305, 306, 310, 316, 322, 337, 338, 342, 347, 400, 406, 407, 449, 452, 465, 474, 507, 508, 516, 535, 597, 598, 599, 600, 601, 603, 604, 605, 606, 620, 667, 684, 705, 781, 820, 866, 869, 892, 909, 948, 970, 972, 976, 977, 985, 986, 1011, 1043, 1047, 1065, 1096, 1141], "5050": [7, 187, 207, 229, 242, 249, 274, 316, 322], "bestimmen": [7, 207], "maximum": [7, 29, 147, 187, 197, 198, 200, 202, 205, 207, 210, 211, 217, 221, 223, 224, 226, 227, 229, 233, 234, 236, 237, 239, 242, 243, 245, 246, 248, 250, 251, 266, 267, 273, 274, 286, 287, 288, 292, 293, 314, 315, 320, 321, 322, 326, 338, 390, 663, 741, 763, 771, 847, 907, 972, 978, 1050, 1067, 1069, 1070, 1071, 1074, 1077, 1080, 1081, 1087, 1088, 1089, 1090, 1091, 1092, 1106, 1107, 1111, 1112, 1113, 1114, 1136, 1171], "zwei": [7, 65, 163, 173, 181, 187, 199, 202, 204, 207, 210, 223, 226, 234, 239, 242, 246, 252, 274, 294, 302, 306, 310, 337, 533, 624, 625, 626, 627, 897, 1158, 1175], "inlin": [7, 134, 175, 181, 193, 207, 223, 252, 255, 257, 279, 306, 310, 316, 410, 432, 435, 556, 571, 585, 624, 661, 713, 731, 747, 749, 751, 752, 753, 754, 761, 1004, 1083], "ohn": [7, 23, 171, 173, 181, 207, 210, 322, 832, 898, 1157, 1177, 1178, 1179], "funktion": [7, 23, 177, 181, 187, 198, 199, 200, 204, 207, 210, 213, 234, 236, 239, 242, 274, 306, 337, 1171], "666": [7, 42, 50, 108, 113, 122, 124, 173, 174, 187, 197, 202, 204, 207, 210, 213, 219, 223, 226, 229, 234, 236, 239, 242, 246, 249, 252, 255, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322, 333, 334, 335, 337, 338, 373, 453, 472, 527, 528, 529, 530, 531, 535, 536, 537, 538, 540, 541, 543, 550, 562, 569, 573, 582, 584, 607, 608, 609, 610, 611, 613, 616, 624, 627, 647, 651, 680, 682, 689, 691, 692, 693, 697, 717, 721, 724, 726, 731, 734, 747, 749, 751, 757, 758, 759, 768, 769, 1003, 1007, 1049, 1050, 1053, 1153], "var1": [7, 197, 207, 1073], "var2": [7, 197, 207, 1073], "6712": [7, 207, 229], "isn": [7, 153, 169, 207, 273, 276, 350, 364, 415, 602, 606, 645, 668, 695, 715, 914, 1052, 1148], "fehler": [7, 181, 187, 207, 342, 347], "link": [7, 13, 17, 27, 32, 44, 66, 104, 105, 116, 122, 127, 147, 150, 151, 153, 154, 160, 161, 162, 163, 164, 165, 171, 173, 181, 187, 194, 207, 230, 232, 260, 261, 269, 270, 278, 283, 290, 291, 296, 312, 322, 342, 355, 356, 405, 418, 424, 428, 432, 437, 441, 446, 447, 452, 455, 457, 458, 463, 473, 487, 510, 515, 516, 517, 518, 519, 520, 521, 522, 525, 545, 552, 553, 567, 582, 669, 675, 683, 707, 717, 718, 760, 761, 762, 763, 771, 772, 776, 777, 780, 788, 791, 800, 801, 810, 812, 814, 819, 825, 828, 831, 840, 890, 892, 897, 906, 915, 922, 952, 955, 957, 984, 985, 986, 987, 989, 990, 991, 992, 994, 996, 1002, 1107, 1135, 1145, 1148, 1155, 1156, 1163], "\u212c": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 190, 191, 193, 194, 195, 196, 198, 200, 201, 208, 211, 214, 215, 216, 217, 221, 224, 227, 230, 232, 233, 237, 240, 243, 245, 248, 254, 258, 259, 260, 261, 262, 269, 270, 272, 279, 280, 281, 282, 283, 290, 291, 296, 297, 298, 301, 304, 305, 308, 309, 312, 313, 318, 319, 324, 327, 328, 329, 330, 331, 333, 342, 349, 350, 351, 352, 353, 354, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 442, 443, 444, 445, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 488, 489, 496, 497, 498, 499, 500, 502, 503, 504, 510, 511, 512, 513, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 594, 595, 602, 603, 604, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 632, 634, 636, 638, 639, 641, 642, 643, 644, 645, 647, 648, 651, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 666, 667, 668, 670, 671, 672, 673, 674, 675, 677, 678, 679, 680, 681, 682, 683, 684, 688, 689, 694, 695, 704, 705, 706, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 724, 725, 726, 727, 728, 729, 730, 731, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 747, 749, 751, 752, 753, 754, 761, 765, 766, 768, 769, 771, 773, 774, 776, 778, 779, 781, 787, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 808, 812, 813, 815, 817, 818, 820, 823, 824, 826, 827, 829, 830, 832, 834, 835, 836, 841, 842, 845, 846, 847, 848, 849, 850, 852, 853, 854, 855, 866, 867, 868, 869, 870, 871, 872, 873, 889, 891, 892, 893, 894, 895, 896, 897, 898, 899, 901, 902, 903, 908, 909, 910, 911, 914, 917, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 934, 935, 936, 939, 940, 941, 942, 943, 946, 948, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 962, 963, 965, 966, 968, 970, 971, 972, 984, 985, 986, 987, 992, 996, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1010, 1012, 1015, 1016, 1018, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1063, 1064, 1065, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1116, 1117, 1119, 1120, 1121, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1133, 1137, 1141, 1142, 1143, 1144, 1171], "\u2145": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 190, 191, 193, 194, 195, 196, 198, 200, 201, 208, 211, 214, 215, 216, 217, 221, 224, 227, 230, 232, 233, 237, 240, 243, 245, 248, 254, 258, 259, 260, 261, 262, 269, 270, 272, 279, 280, 281, 282, 283, 290, 291, 296, 297, 298, 301, 304, 305, 308, 309, 312, 313, 318, 319, 324, 327, 328, 329, 330, 331, 333, 342, 349, 350, 351, 352, 353, 354, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 442, 443, 444, 445, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 488, 489, 496, 497, 498, 499, 500, 502, 503, 504, 510, 511, 512, 513, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 594, 595, 602, 603, 604, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 632, 634, 636, 638, 639, 641, 642, 643, 644, 645, 647, 648, 651, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 666, 667, 668, 670, 671, 672, 673, 674, 675, 677, 678, 679, 680, 681, 682, 683, 684, 688, 689, 694, 695, 704, 705, 706, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 724, 725, 726, 727, 728, 729, 730, 731, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 747, 749, 751, 752, 753, 754, 761, 765, 766, 768, 769, 771, 773, 774, 776, 778, 779, 781, 787, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 808, 812, 813, 815, 817, 818, 820, 823, 824, 826, 827, 829, 830, 832, 834, 835, 836, 841, 842, 845, 846, 847, 848, 849, 850, 852, 853, 854, 855, 866, 867, 868, 869, 870, 871, 872, 873, 889, 891, 892, 893, 894, 895, 896, 897, 898, 899, 901, 902, 903, 908, 909, 910, 911, 914, 917, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 934, 935, 936, 939, 940, 941, 942, 943, 946, 948, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 962, 963, 965, 966, 968, 970, 971, 972, 984, 985, 986, 987, 992, 996, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1010, 1012, 1015, 1016, 1018, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1063, 1064, 1065, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1116, 1117, 1119, 1120, 1121, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1133, 1137, 1141, 1142, 1143, 1144, 1171], "\u212d": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 190, 191, 193, 194, 195, 196, 198, 200, 201, 208, 211, 214, 215, 216, 217, 221, 224, 227, 230, 232, 233, 237, 240, 243, 245, 248, 254, 258, 259, 260, 261, 262, 269, 270, 272, 279, 280, 281, 282, 283, 290, 291, 296, 297, 298, 301, 304, 305, 308, 309, 312, 313, 318, 319, 324, 327, 328, 329, 330, 331, 333, 342, 349, 350, 351, 352, 353, 354, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 442, 443, 444, 445, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 488, 489, 496, 497, 498, 499, 500, 502, 503, 504, 510, 511, 512, 513, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 594, 595, 602, 603, 604, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 632, 634, 636, 638, 639, 641, 642, 643, 644, 645, 647, 648, 651, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 666, 667, 668, 670, 671, 672, 673, 674, 675, 677, 678, 679, 680, 681, 682, 683, 684, 688, 689, 694, 695, 704, 705, 706, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 724, 725, 726, 727, 728, 729, 730, 731, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 747, 749, 751, 752, 753, 754, 761, 765, 766, 768, 769, 771, 773, 774, 776, 778, 779, 781, 787, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 808, 812, 813, 815, 817, 818, 820, 823, 824, 826, 827, 829, 830, 832, 834, 835, 836, 841, 842, 845, 846, 847, 848, 849, 850, 852, 853, 854, 855, 866, 867, 868, 869, 870, 871, 872, 873, 889, 891, 892, 893, 894, 895, 896, 897, 898, 899, 901, 902, 903, 908, 909, 910, 911, 914, 917, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 934, 935, 936, 939, 940, 941, 942, 943, 946, 948, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 962, 963, 965, 966, 968, 970, 971, 972, 984, 985, 986, 987, 992, 996, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1010, 1012, 1015, 1016, 1018, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1063, 1064, 1065, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1116, 1117, 1119, 1120, 1121, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1133, 1137, 1141, 1142, 1143, 1144, 1171], "\u2102": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 190, 191, 193, 194, 195, 196, 198, 200, 201, 208, 211, 214, 215, 216, 217, 221, 224, 227, 230, 232, 233, 237, 240, 243, 245, 248, 254, 258, 259, 260, 261, 262, 269, 270, 272, 279, 280, 281, 282, 283, 290, 291, 296, 297, 298, 301, 304, 305, 308, 309, 312, 313, 318, 319, 324, 327, 328, 329, 330, 331, 333, 342, 349, 350, 351, 352, 353, 354, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 442, 443, 444, 445, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 488, 489, 496, 497, 498, 499, 500, 502, 503, 504, 510, 511, 512, 513, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 594, 595, 602, 603, 604, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 632, 634, 636, 638, 639, 641, 642, 643, 644, 645, 647, 648, 651, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 666, 667, 668, 670, 671, 672, 673, 674, 675, 677, 678, 679, 680, 681, 682, 683, 684, 688, 689, 694, 695, 704, 705, 706, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 724, 725, 726, 727, 728, 729, 730, 731, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 747, 749, 751, 752, 753, 754, 761, 765, 766, 768, 769, 771, 773, 774, 776, 778, 779, 781, 787, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 808, 812, 813, 815, 817, 818, 820, 823, 824, 826, 827, 829, 830, 832, 834, 835, 836, 841, 842, 845, 846, 847, 848, 849, 850, 852, 853, 854, 855, 866, 867, 868, 869, 870, 871, 872, 873, 889, 891, 892, 893, 894, 895, 896, 897, 898, 899, 901, 902, 903, 908, 909, 910, 911, 914, 917, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 934, 935, 936, 939, 940, 941, 942, 943, 946, 948, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 962, 963, 965, 966, 968, 970, 971, 972, 984, 985, 986, 987, 992, 996, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1010, 1012, 1015, 1016, 1018, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1063, 1064, 1065, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1116, 1117, 1119, 1120, 1121, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1133, 1137, 1141, 1142, 1143, 1144, 1171], "\u2146": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 190, 191, 193, 194, 195, 196, 198, 200, 201, 208, 211, 214, 215, 216, 217, 221, 224, 227, 230, 232, 233, 237, 240, 243, 245, 248, 254, 258, 259, 260, 261, 262, 269, 270, 272, 279, 280, 281, 282, 283, 290, 291, 296, 297, 298, 301, 304, 305, 308, 309, 312, 313, 318, 319, 324, 327, 328, 329, 330, 331, 333, 342, 349, 350, 351, 352, 353, 354, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 442, 443, 444, 445, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 488, 489, 496, 497, 498, 499, 500, 502, 503, 504, 510, 511, 512, 513, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 594, 595, 602, 603, 604, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 632, 634, 636, 638, 639, 641, 642, 643, 644, 645, 647, 648, 651, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 666, 667, 668, 670, 671, 672, 673, 674, 675, 677, 678, 679, 680, 681, 682, 683, 684, 688, 689, 694, 695, 704, 705, 706, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 724, 725, 726, 727, 728, 729, 730, 731, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 747, 749, 751, 752, 753, 754, 761, 765, 766, 768, 769, 771, 773, 774, 776, 778, 779, 781, 787, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 808, 812, 813, 815, 817, 818, 820, 823, 824, 826, 827, 829, 830, 832, 834, 835, 836, 841, 842, 845, 846, 847, 848, 849, 850, 852, 853, 854, 855, 866, 867, 868, 869, 870, 871, 872, 873, 889, 891, 892, 893, 894, 895, 896, 897, 898, 899, 901, 902, 903, 908, 909, 910, 911, 914, 917, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 934, 935, 936, 939, 940, 941, 942, 943, 946, 948, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 962, 963, 965, 966, 968, 970, 971, 972, 984, 985, 986, 987, 992, 996, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1010, 1012, 1015, 1016, 1018, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1063, 1064, 1065, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1116, 1117, 1119, 1120, 1121, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1133, 1137, 1141, 1142, 1143, 1144, 1171], "\u03dd": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 190, 191, 193, 194, 195, 196, 198, 200, 201, 208, 211, 214, 215, 216, 217, 221, 224, 227, 230, 232, 233, 237, 240, 243, 245, 248, 254, 258, 259, 260, 261, 262, 269, 270, 272, 279, 280, 281, 282, 283, 290, 291, 296, 297, 298, 301, 304, 305, 308, 309, 312, 313, 318, 319, 324, 327, 328, 329, 330, 331, 333, 342, 349, 350, 351, 352, 353, 354, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 442, 443, 444, 445, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 488, 489, 496, 497, 498, 499, 500, 502, 503, 504, 510, 511, 512, 513, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 594, 595, 602, 603, 604, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 632, 634, 636, 638, 639, 641, 642, 643, 644, 645, 647, 648, 651, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 666, 667, 668, 670, 671, 672, 673, 674, 675, 677, 678, 679, 680, 681, 682, 683, 684, 688, 689, 694, 695, 704, 705, 706, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 724, 725, 726, 727, 728, 729, 730, 731, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 747, 749, 751, 752, 753, 754, 761, 765, 766, 768, 769, 771, 773, 774, 776, 778, 779, 781, 787, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 808, 812, 813, 815, 817, 818, 820, 823, 824, 826, 827, 829, 830, 832, 834, 835, 836, 841, 842, 845, 846, 847, 848, 849, 850, 852, 853, 854, 855, 866, 867, 868, 869, 870, 871, 872, 873, 889, 891, 892, 893, 894, 895, 896, 897, 898, 899, 901, 902, 903, 908, 909, 910, 911, 914, 917, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 934, 935, 936, 939, 940, 941, 942, 943, 946, 948, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 962, 963, 965, 966, 968, 970, 971, 972, 984, 985, 986, 987, 992, 996, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1010, 1012, 1015, 1016, 1018, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1063, 1064, 1065, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1116, 1117, 1119, 1120, 1121, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1133, 1137, 1141, 1142, 1143, 1144, 1171], "\u2130": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 190, 191, 193, 194, 195, 196, 198, 200, 201, 208, 211, 214, 215, 216, 217, 221, 224, 227, 230, 232, 233, 237, 240, 243, 245, 248, 254, 258, 259, 260, 261, 262, 269, 270, 272, 279, 280, 281, 282, 283, 290, 291, 296, 297, 298, 301, 304, 305, 308, 309, 312, 313, 318, 319, 324, 327, 328, 329, 330, 331, 333, 342, 349, 350, 351, 352, 353, 354, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 442, 443, 444, 445, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 488, 489, 496, 497, 498, 499, 500, 502, 503, 504, 510, 511, 512, 513, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 594, 595, 602, 603, 604, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 632, 634, 636, 638, 639, 641, 642, 643, 644, 645, 647, 648, 651, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 666, 667, 668, 670, 671, 672, 673, 674, 675, 677, 678, 679, 680, 681, 682, 683, 684, 688, 689, 694, 695, 704, 705, 706, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 724, 725, 726, 727, 728, 729, 730, 731, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 747, 749, 751, 752, 753, 754, 761, 765, 766, 768, 769, 771, 773, 774, 776, 778, 779, 781, 787, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 808, 812, 813, 815, 817, 818, 820, 823, 824, 826, 827, 829, 830, 832, 834, 835, 836, 841, 842, 845, 846, 847, 848, 849, 850, 852, 853, 854, 855, 866, 867, 868, 869, 870, 871, 872, 873, 889, 891, 892, 893, 894, 895, 896, 897, 898, 899, 901, 902, 903, 908, 909, 910, 911, 914, 917, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 934, 935, 936, 939, 940, 941, 942, 943, 946, 948, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 962, 963, 965, 966, 968, 970, 971, 972, 984, 985, 986, 987, 992, 996, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1010, 1012, 1015, 1016, 1018, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1063, 1064, 1065, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1116, 1117, 1119, 1120, 1121, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1133, 1137, 1141, 1142, 1143, 1144, 1171], "\u2147": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 190, 191, 193, 194, 195, 196, 198, 200, 201, 208, 211, 214, 215, 216, 217, 221, 224, 227, 230, 232, 233, 237, 240, 243, 245, 248, 254, 258, 259, 260, 261, 262, 269, 270, 272, 279, 280, 281, 282, 283, 290, 291, 296, 297, 298, 301, 304, 305, 308, 309, 312, 313, 318, 319, 324, 327, 328, 329, 330, 331, 333, 342, 349, 350, 351, 352, 353, 354, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 442, 443, 444, 445, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 488, 489, 496, 497, 498, 499, 500, 502, 503, 504, 510, 511, 512, 513, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 594, 595, 602, 603, 604, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 632, 634, 636, 638, 639, 641, 642, 643, 644, 645, 647, 648, 651, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 666, 667, 668, 670, 671, 672, 673, 674, 675, 677, 678, 679, 680, 681, 682, 683, 684, 688, 689, 694, 695, 704, 705, 706, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 724, 725, 726, 727, 728, 729, 730, 731, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 747, 749, 751, 752, 753, 754, 761, 765, 766, 768, 769, 771, 773, 774, 776, 778, 779, 781, 787, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 808, 812, 813, 815, 817, 818, 820, 823, 824, 826, 827, 829, 830, 832, 834, 835, 836, 841, 842, 845, 846, 847, 848, 849, 850, 852, 853, 854, 855, 866, 867, 868, 869, 870, 871, 872, 873, 889, 891, 892, 893, 894, 895, 896, 897, 898, 899, 901, 902, 903, 908, 909, 910, 911, 914, 917, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 934, 935, 936, 939, 940, 941, 942, 943, 946, 948, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 962, 963, 965, 966, 968, 970, 971, 972, 984, 985, 986, 987, 992, 996, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1010, 1012, 1015, 1016, 1018, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1063, 1064, 1065, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1116, 1117, 1119, 1120, 1121, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1133, 1137, 1141, 1142, 1143, 1144, 1171], "\u2131": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 190, 191, 193, 194, 195, 196, 198, 200, 201, 208, 211, 214, 215, 216, 217, 221, 224, 227, 230, 232, 233, 237, 240, 243, 245, 248, 254, 258, 259, 260, 261, 262, 269, 270, 272, 279, 280, 281, 282, 283, 290, 291, 296, 297, 298, 301, 304, 305, 308, 309, 312, 313, 318, 319, 324, 327, 328, 329, 330, 331, 333, 342, 349, 350, 351, 352, 353, 354, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 442, 443, 444, 445, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 488, 489, 496, 497, 498, 499, 500, 502, 503, 504, 510, 511, 512, 513, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 594, 595, 602, 603, 604, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 632, 634, 636, 638, 639, 641, 642, 643, 644, 645, 647, 648, 651, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 666, 667, 668, 670, 671, 672, 673, 674, 675, 677, 678, 679, 680, 681, 682, 683, 684, 688, 689, 694, 695, 704, 705, 706, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 724, 725, 726, 727, 728, 729, 730, 731, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 747, 749, 751, 752, 753, 754, 761, 765, 766, 768, 769, 771, 773, 774, 776, 778, 779, 781, 787, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 808, 812, 813, 815, 817, 818, 820, 823, 824, 826, 827, 829, 830, 832, 834, 835, 836, 841, 842, 845, 846, 847, 848, 849, 850, 852, 853, 854, 855, 866, 867, 868, 869, 870, 871, 872, 873, 889, 891, 892, 893, 894, 895, 896, 897, 898, 899, 901, 902, 903, 908, 909, 910, 911, 914, 917, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 934, 935, 936, 939, 940, 941, 942, 943, 946, 948, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 962, 963, 965, 966, 968, 970, 971, 972, 984, 985, 986, 987, 992, 996, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1010, 1012, 1015, 1016, 1018, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1063, 1064, 1065, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1116, 1117, 1119, 1120, 1121, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1133, 1137, 1141, 1142, 1143, 1144, 1171], "\u02c7": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 190, 191, 193, 194, 195, 196, 198, 200, 201, 208, 211, 214, 215, 216, 217, 221, 224, 227, 230, 232, 233, 237, 240, 243, 245, 248, 254, 258, 259, 260, 261, 262, 269, 270, 272, 279, 280, 281, 282, 283, 290, 291, 296, 297, 298, 301, 304, 305, 308, 309, 312, 313, 318, 319, 324, 327, 328, 329, 330, 331, 333, 342, 349, 350, 351, 352, 353, 354, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 442, 443, 444, 445, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 488, 489, 496, 497, 498, 499, 500, 502, 503, 504, 510, 511, 512, 513, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 594, 595, 602, 603, 604, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 632, 634, 636, 638, 639, 641, 642, 643, 644, 645, 647, 648, 651, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 666, 667, 668, 670, 671, 672, 673, 674, 675, 677, 678, 679, 680, 681, 682, 683, 684, 688, 689, 694, 695, 704, 705, 706, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 724, 725, 726, 727, 728, 729, 730, 731, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 747, 749, 751, 752, 753, 754, 761, 765, 766, 768, 769, 771, 773, 774, 776, 778, 779, 781, 787, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 808, 812, 813, 815, 817, 818, 820, 823, 824, 826, 827, 829, 830, 832, 834, 835, 836, 841, 842, 845, 846, 847, 848, 849, 850, 852, 853, 854, 855, 866, 867, 868, 869, 870, 871, 872, 873, 889, 891, 892, 893, 894, 895, 896, 897, 898, 899, 901, 902, 903, 908, 909, 910, 911, 914, 917, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 934, 935, 936, 939, 940, 941, 942, 943, 946, 948, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 962, 963, 965, 966, 968, 970, 971, 972, 984, 985, 986, 987, 992, 996, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1010, 1012, 1015, 1016, 1018, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1063, 1064, 1065, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1116, 1117, 1119, 1120, 1121, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1133, 1137, 1141, 1142, 1143, 1144, 1171], "\u210f": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 190, 191, 193, 194, 195, 196, 198, 200, 201, 208, 211, 214, 215, 216, 217, 221, 224, 227, 230, 232, 233, 237, 240, 243, 245, 248, 254, 258, 259, 260, 261, 262, 269, 270, 272, 279, 280, 281, 282, 283, 290, 291, 296, 297, 298, 301, 304, 305, 308, 309, 312, 313, 318, 319, 324, 327, 328, 329, 330, 331, 333, 342, 349, 350, 351, 352, 353, 354, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 442, 443, 444, 445, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 488, 489, 496, 497, 498, 499, 500, 502, 503, 504, 510, 511, 512, 513, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 594, 595, 602, 603, 604, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 632, 634, 636, 638, 639, 641, 642, 643, 644, 645, 647, 648, 651, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 666, 667, 668, 670, 671, 672, 673, 674, 675, 677, 678, 679, 680, 681, 682, 683, 684, 688, 689, 694, 695, 704, 705, 706, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 724, 725, 726, 727, 728, 729, 730, 731, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 747, 749, 751, 752, 753, 754, 761, 765, 766, 768, 769, 771, 773, 774, 776, 778, 779, 781, 787, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 808, 812, 813, 815, 817, 818, 820, 823, 824, 826, 827, 829, 830, 832, 834, 835, 836, 841, 842, 845, 846, 847, 848, 849, 850, 852, 853, 854, 855, 866, 867, 868, 869, 870, 871, 872, 873, 889, 891, 892, 893, 894, 895, 896, 897, 898, 899, 901, 902, 903, 908, 909, 910, 911, 914, 917, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 934, 935, 936, 939, 940, 941, 942, 943, 946, 948, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 962, 963, 965, 966, 968, 970, 971, 972, 984, 985, 986, 987, 992, 996, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1010, 1012, 1015, 1016, 1018, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1063, 1064, 1065, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1116, 1117, 1119, 1120, 1121, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1133, 1137, 1141, 1142, 1143, 1144, 1171], "\u210b": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 190, 191, 193, 194, 195, 196, 198, 200, 201, 208, 211, 214, 215, 216, 217, 221, 224, 227, 230, 232, 233, 237, 240, 243, 245, 248, 254, 258, 259, 260, 261, 262, 269, 270, 272, 279, 280, 281, 282, 283, 290, 291, 296, 297, 298, 301, 304, 305, 308, 309, 312, 313, 318, 319, 324, 327, 328, 329, 330, 331, 333, 342, 349, 350, 351, 352, 353, 354, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 442, 443, 444, 445, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 488, 489, 496, 497, 498, 499, 500, 502, 503, 504, 510, 511, 512, 513, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 594, 595, 602, 603, 604, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 632, 634, 636, 638, 639, 641, 642, 643, 644, 645, 647, 648, 651, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 666, 667, 668, 670, 671, 672, 673, 674, 675, 677, 678, 679, 680, 681, 682, 683, 684, 688, 689, 694, 695, 704, 705, 706, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 724, 725, 726, 727, 728, 729, 730, 731, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 747, 749, 751, 752, 753, 754, 761, 765, 766, 768, 769, 771, 773, 774, 776, 778, 779, 781, 787, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 808, 812, 813, 815, 817, 818, 820, 823, 824, 826, 827, 829, 830, 832, 834, 835, 836, 841, 842, 845, 846, 847, 848, 849, 850, 852, 853, 854, 855, 866, 867, 868, 869, 870, 871, 872, 873, 889, 891, 892, 893, 894, 895, 896, 897, 898, 899, 901, 902, 903, 908, 909, 910, 911, 914, 917, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 934, 935, 936, 939, 940, 941, 942, 943, 946, 948, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 962, 963, 965, 966, 968, 970, 971, 972, 984, 985, 986, 987, 992, 996, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1010, 1012, 1015, 1016, 1018, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1063, 1064, 1065, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1116, 1117, 1119, 1120, 1121, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1133, 1137, 1141, 1142, 1143, 1144, 1171], "\u2111": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 190, 191, 193, 194, 195, 196, 198, 200, 201, 208, 211, 214, 215, 216, 217, 221, 224, 227, 230, 232, 233, 237, 240, 243, 245, 248, 254, 258, 259, 260, 261, 262, 269, 270, 272, 279, 280, 281, 282, 283, 290, 291, 296, 297, 298, 301, 304, 305, 308, 309, 312, 313, 318, 319, 324, 327, 328, 329, 330, 331, 333, 342, 349, 350, 351, 352, 353, 354, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 442, 443, 444, 445, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 488, 489, 496, 497, 498, 499, 500, 502, 503, 504, 510, 511, 512, 513, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 594, 595, 602, 603, 604, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 632, 634, 636, 638, 639, 641, 642, 643, 644, 645, 647, 648, 651, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 666, 667, 668, 670, 671, 672, 673, 674, 675, 677, 678, 679, 680, 681, 682, 683, 684, 688, 689, 694, 695, 704, 705, 706, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 724, 725, 726, 727, 728, 729, 730, 731, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 747, 749, 751, 752, 753, 754, 761, 765, 766, 768, 769, 771, 773, 774, 776, 778, 779, 781, 787, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 808, 812, 813, 815, 817, 818, 820, 823, 824, 826, 827, 829, 830, 832, 834, 835, 836, 841, 842, 845, 846, 847, 848, 849, 850, 852, 853, 854, 855, 866, 867, 868, 869, 870, 871, 872, 873, 889, 891, 892, 893, 894, 895, 896, 897, 898, 899, 901, 902, 903, 908, 909, 910, 911, 914, 917, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 934, 935, 936, 939, 940, 941, 942, 943, 946, 948, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 962, 963, 965, 966, 968, 970, 971, 972, 984, 985, 986, 987, 992, 996, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1010, 1012, 1015, 1016, 1018, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1063, 1064, 1065, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1116, 1117, 1119, 1120, 1121, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1133, 1137, 1141, 1142, 1143, 1144, 1171], "\u2148": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 190, 191, 193, 194, 195, 196, 198, 200, 201, 208, 211, 214, 215, 216, 217, 221, 224, 227, 230, 232, 233, 237, 240, 243, 245, 248, 254, 258, 259, 260, 261, 262, 269, 270, 272, 279, 280, 281, 282, 283, 290, 291, 296, 297, 298, 301, 304, 305, 308, 309, 312, 313, 318, 319, 324, 327, 328, 329, 330, 331, 333, 342, 349, 350, 351, 352, 353, 354, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 442, 443, 444, 445, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 488, 489, 496, 497, 498, 499, 500, 502, 503, 504, 510, 511, 512, 513, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 594, 595, 602, 603, 604, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 632, 634, 636, 638, 639, 641, 642, 643, 644, 645, 647, 648, 651, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 666, 667, 668, 670, 671, 672, 673, 674, 675, 677, 678, 679, 680, 681, 682, 683, 684, 688, 689, 694, 695, 704, 705, 706, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 724, 725, 726, 727, 728, 729, 730, 731, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 747, 749, 751, 752, 753, 754, 761, 765, 766, 768, 769, 771, 773, 774, 776, 778, 779, 781, 787, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 808, 812, 813, 815, 817, 818, 820, 823, 824, 826, 827, 829, 830, 832, 834, 835, 836, 841, 842, 845, 846, 847, 848, 849, 850, 852, 853, 854, 855, 866, 867, 868, 869, 870, 871, 872, 873, 889, 891, 892, 893, 894, 895, 896, 897, 898, 899, 901, 902, 903, 908, 909, 910, 911, 914, 917, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 934, 935, 936, 939, 940, 941, 942, 943, 946, 948, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 962, 963, 965, 966, 968, 970, 971, 972, 984, 985, 986, 987, 992, 996, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1010, 1012, 1015, 1016, 1018, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1063, 1064, 1065, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1116, 1117, 1119, 1120, 1121, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1133, 1137, 1141, 1142, 1143, 1144, 1171], "\u2110": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 190, 191, 193, 194, 195, 196, 198, 200, 201, 208, 211, 214, 215, 216, 217, 221, 224, 227, 230, 232, 233, 237, 240, 243, 245, 248, 254, 258, 259, 260, 261, 262, 269, 270, 272, 279, 280, 281, 282, 283, 290, 291, 296, 297, 298, 301, 304, 305, 308, 309, 312, 313, 318, 319, 324, 327, 328, 329, 330, 331, 333, 342, 349, 350, 351, 352, 353, 354, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 442, 443, 444, 445, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 488, 489, 496, 497, 498, 499, 500, 502, 503, 504, 510, 511, 512, 513, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 594, 595, 602, 603, 604, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 632, 634, 636, 638, 639, 641, 642, 643, 644, 645, 647, 648, 651, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 666, 667, 668, 670, 671, 672, 673, 674, 675, 677, 678, 679, 680, 681, 682, 683, 684, 688, 689, 694, 695, 704, 705, 706, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 724, 725, 726, 727, 728, 729, 730, 731, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 747, 749, 751, 752, 753, 754, 761, 765, 766, 768, 769, 771, 773, 774, 776, 778, 779, 781, 787, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 808, 812, 813, 815, 817, 818, 820, 823, 824, 826, 827, 829, 830, 832, 834, 835, 836, 841, 842, 845, 846, 847, 848, 849, 850, 852, 853, 854, 855, 866, 867, 868, 869, 870, 871, 872, 873, 889, 891, 892, 893, 894, 895, 896, 897, 898, 899, 901, 902, 903, 908, 909, 910, 911, 914, 917, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 934, 935, 936, 939, 940, 941, 942, 943, 946, 948, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 962, 963, 965, 966, 968, 970, 971, 972, 984, 985, 986, 987, 992, 996, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1010, 1012, 1015, 1016, 1018, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1063, 1064, 1065, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1116, 1117, 1119, 1120, 1121, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1133, 1137, 1141, 1142, 1143, 1144, 1171], "\u2124": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 190, 191, 193, 194, 195, 196, 198, 200, 201, 208, 211, 214, 215, 216, 217, 221, 224, 227, 230, 232, 233, 237, 240, 243, 245, 248, 254, 258, 259, 260, 261, 262, 269, 270, 272, 279, 280, 281, 282, 283, 290, 291, 296, 297, 298, 301, 304, 305, 308, 309, 312, 313, 318, 319, 324, 327, 328, 329, 330, 331, 333, 342, 349, 350, 351, 352, 353, 354, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 442, 443, 444, 445, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 488, 489, 496, 497, 498, 499, 500, 502, 503, 504, 510, 511, 512, 513, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 594, 595, 602, 603, 604, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 632, 634, 636, 638, 639, 641, 642, 643, 644, 645, 647, 648, 651, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 666, 667, 668, 670, 671, 672, 673, 674, 675, 677, 678, 679, 680, 681, 682, 683, 684, 688, 689, 694, 695, 704, 705, 706, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 724, 725, 726, 727, 728, 729, 730, 731, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 747, 749, 751, 752, 753, 754, 761, 765, 766, 768, 769, 771, 773, 774, 776, 778, 779, 781, 787, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 808, 812, 813, 815, 817, 818, 820, 823, 824, 826, 827, 829, 830, 832, 834, 835, 836, 841, 842, 845, 846, 847, 848, 849, 850, 852, 853, 854, 855, 866, 867, 868, 869, 870, 871, 872, 873, 889, 891, 892, 893, 894, 895, 896, 897, 898, 899, 901, 902, 903, 908, 909, 910, 911, 914, 917, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 934, 935, 936, 939, 940, 941, 942, 943, 946, 948, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 962, 963, 965, 966, 968, 970, 971, 972, 984, 985, 986, 987, 992, 996, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1010, 1012, 1015, 1016, 1018, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1063, 1064, 1065, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1116, 1117, 1119, 1120, 1121, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1133, 1137, 1141, 1142, 1143, 1144, 1171], "\u2112": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 190, 191, 193, 194, 195, 196, 198, 200, 201, 208, 211, 214, 215, 216, 217, 221, 224, 227, 230, 232, 233, 237, 240, 243, 245, 248, 254, 258, 259, 260, 261, 262, 269, 270, 272, 279, 280, 281, 282, 283, 290, 291, 296, 297, 298, 301, 304, 305, 308, 309, 312, 313, 318, 319, 324, 327, 328, 329, 330, 331, 333, 342, 349, 350, 351, 352, 353, 354, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 442, 443, 444, 445, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 488, 489, 496, 497, 498, 499, 500, 502, 503, 504, 510, 511, 512, 513, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 594, 595, 602, 603, 604, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 632, 634, 636, 638, 639, 641, 642, 643, 644, 645, 647, 648, 651, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 666, 667, 668, 670, 671, 672, 673, 674, 675, 677, 678, 679, 680, 681, 682, 683, 684, 688, 689, 694, 695, 704, 705, 706, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 724, 725, 726, 727, 728, 729, 730, 731, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 747, 749, 751, 752, 753, 754, 761, 765, 766, 768, 769, 771, 773, 774, 776, 778, 779, 781, 787, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 808, 812, 813, 815, 817, 818, 820, 823, 824, 826, 827, 829, 830, 832, 834, 835, 836, 841, 842, 845, 846, 847, 848, 849, 850, 852, 853, 854, 855, 866, 867, 868, 869, 870, 871, 872, 873, 889, 891, 892, 893, 894, 895, 896, 897, 898, 899, 901, 902, 903, 908, 909, 910, 911, 914, 917, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 934, 935, 936, 939, 940, 941, 942, 943, 946, 948, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 962, 963, 965, 966, 968, 970, 971, 972, 984, 985, 986, 987, 992, 996, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1010, 1012, 1015, 1016, 1018, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1063, 1064, 1065, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1116, 1117, 1119, 1120, 1121, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1133, 1137, 1141, 1142, 1143, 1144, 1171], "\u2133": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 190, 191, 193, 194, 195, 196, 198, 200, 201, 208, 211, 214, 215, 216, 217, 221, 224, 227, 230, 232, 233, 237, 240, 243, 245, 248, 254, 258, 259, 260, 261, 262, 269, 270, 272, 279, 280, 281, 282, 283, 290, 291, 296, 297, 298, 301, 304, 305, 308, 309, 312, 313, 318, 319, 324, 327, 328, 329, 330, 331, 333, 342, 349, 350, 351, 352, 353, 354, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 442, 443, 444, 445, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 488, 489, 496, 497, 498, 499, 500, 502, 503, 504, 510, 511, 512, 513, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 594, 595, 602, 603, 604, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 632, 634, 636, 638, 639, 641, 642, 643, 644, 645, 647, 648, 651, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 666, 667, 668, 670, 671, 672, 673, 674, 675, 677, 678, 679, 680, 681, 682, 683, 684, 688, 689, 694, 695, 704, 705, 706, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 724, 725, 726, 727, 728, 729, 730, 731, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 747, 749, 751, 752, 753, 754, 761, 765, 766, 768, 769, 771, 773, 774, 776, 778, 779, 781, 787, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 808, 812, 813, 815, 817, 818, 820, 823, 824, 826, 827, 829, 830, 832, 834, 835, 836, 841, 842, 845, 846, 847, 848, 849, 850, 852, 853, 854, 855, 866, 867, 868, 869, 870, 871, 872, 873, 889, 891, 892, 893, 894, 895, 896, 897, 898, 899, 901, 902, 903, 908, 909, 910, 911, 914, 917, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 934, 935, 936, 939, 940, 941, 942, 943, 946, 948, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 962, 963, 965, 966, 968, 970, 971, 972, 984, 985, 986, 987, 992, 996, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1010, 1012, 1015, 1016, 1018, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1063, 1064, 1065, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1116, 1117, 1119, 1120, 1121, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1133, 1137, 1141, 1142, 1143, 1144, 1171], "\u2115": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 190, 191, 193, 194, 195, 196, 198, 200, 201, 208, 211, 214, 215, 216, 217, 221, 224, 227, 230, 232, 233, 237, 240, 243, 245, 248, 254, 258, 259, 260, 261, 262, 269, 270, 272, 279, 280, 281, 282, 283, 290, 291, 296, 297, 298, 301, 304, 305, 308, 309, 312, 313, 318, 319, 324, 327, 328, 329, 330, 331, 333, 342, 349, 350, 351, 352, 353, 354, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 442, 443, 444, 445, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 488, 489, 496, 497, 498, 499, 500, 502, 503, 504, 510, 511, 512, 513, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 594, 595, 602, 603, 604, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 632, 634, 636, 638, 639, 641, 642, 643, 644, 645, 647, 648, 651, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 666, 667, 668, 670, 671, 672, 673, 674, 675, 677, 678, 679, 680, 681, 682, 683, 684, 688, 689, 694, 695, 704, 705, 706, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 724, 725, 726, 727, 728, 729, 730, 731, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 747, 749, 751, 752, 753, 754, 761, 765, 766, 768, 769, 771, 773, 774, 776, 778, 779, 781, 787, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 808, 812, 813, 815, 817, 818, 820, 823, 824, 826, 827, 829, 830, 832, 834, 835, 836, 841, 842, 845, 846, 847, 848, 849, 850, 852, 853, 854, 855, 866, 867, 868, 869, 870, 871, 872, 873, 889, 891, 892, 893, 894, 895, 896, 897, 898, 899, 901, 902, 903, 908, 909, 910, 911, 914, 917, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 934, 935, 936, 939, 940, 941, 942, 943, 946, 948, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 962, 963, 965, 966, 968, 970, 971, 972, 984, 985, 986, 987, 992, 996, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1010, 1012, 1015, 1016, 1018, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1063, 1064, 1065, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1116, 1117, 1119, 1120, 1121, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1133, 1137, 1141, 1142, 1143, 1144, 1171], "\u2134": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 190, 191, 193, 194, 195, 196, 198, 200, 201, 208, 211, 214, 215, 216, 217, 221, 224, 227, 230, 232, 233, 237, 240, 243, 245, 248, 254, 258, 259, 260, 261, 262, 269, 270, 272, 279, 280, 281, 282, 283, 290, 291, 296, 297, 298, 301, 304, 305, 308, 309, 312, 313, 318, 319, 324, 327, 328, 329, 330, 331, 333, 342, 349, 350, 351, 352, 353, 354, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 442, 443, 444, 445, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 488, 489, 496, 497, 498, 499, 500, 502, 503, 504, 510, 511, 512, 513, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 594, 595, 602, 603, 604, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 632, 634, 636, 638, 639, 641, 642, 643, 644, 645, 647, 648, 651, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 666, 667, 668, 670, 671, 672, 673, 674, 675, 677, 678, 679, 680, 681, 682, 683, 684, 688, 689, 694, 695, 704, 705, 706, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 724, 725, 726, 727, 728, 729, 730, 731, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 747, 749, 751, 752, 753, 754, 761, 765, 766, 768, 769, 771, 773, 774, 776, 778, 779, 781, 787, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 808, 812, 813, 815, 817, 818, 820, 823, 824, 826, 827, 829, 830, 832, 834, 835, 836, 841, 842, 845, 846, 847, 848, 849, 850, 852, 853, 854, 855, 866, 867, 868, 869, 870, 871, 872, 873, 889, 891, 892, 893, 894, 895, 896, 897, 898, 899, 901, 902, 903, 908, 909, 910, 911, 914, 917, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 934, 935, 936, 939, 940, 941, 942, 943, 946, 948, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 962, 963, 965, 966, 968, 970, 971, 972, 984, 985, 986, 987, 992, 996, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1010, 1012, 1015, 1016, 1018, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1063, 1064, 1065, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1116, 1117, 1119, 1120, 1121, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1133, 1137, 1141, 1142, 1143, 1144, 1171], "\u210c": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 190, 191, 193, 194, 195, 196, 198, 200, 201, 208, 211, 214, 215, 216, 217, 221, 224, 227, 230, 232, 233, 237, 240, 243, 245, 248, 254, 258, 259, 260, 261, 262, 269, 270, 272, 279, 280, 281, 282, 283, 290, 291, 296, 297, 298, 301, 304, 305, 308, 309, 312, 313, 318, 319, 324, 327, 328, 329, 330, 331, 333, 342, 349, 350, 351, 352, 353, 354, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 442, 443, 444, 445, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 488, 489, 496, 497, 498, 499, 500, 502, 503, 504, 510, 511, 512, 513, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 594, 595, 602, 603, 604, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 632, 634, 636, 638, 639, 641, 642, 643, 644, 645, 647, 648, 651, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 666, 667, 668, 670, 671, 672, 673, 674, 675, 677, 678, 679, 680, 681, 682, 683, 684, 688, 689, 694, 695, 704, 705, 706, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 724, 725, 726, 727, 728, 729, 730, 731, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 747, 749, 751, 752, 753, 754, 761, 765, 766, 768, 769, 771, 773, 774, 776, 778, 779, 781, 787, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 808, 812, 813, 815, 817, 818, 820, 823, 824, 826, 827, 829, 830, 832, 834, 835, 836, 841, 842, 845, 846, 847, 848, 849, 850, 852, 853, 854, 855, 866, 867, 868, 869, 870, 871, 872, 873, 889, 891, 892, 893, 894, 895, 896, 897, 898, 899, 901, 902, 903, 908, 909, 910, 911, 914, 917, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 934, 935, 936, 939, 940, 941, 942, 943, 946, 948, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 962, 963, 965, 966, 968, 970, 971, 972, 984, 985, 986, 987, 992, 996, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1010, 1012, 1015, 1016, 1018, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1063, 1064, 1065, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1116, 1117, 1119, 1120, 1121, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1133, 1137, 1141, 1142, 1143, 1144, 1171], "\u2119": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 190, 191, 193, 194, 195, 196, 198, 200, 201, 208, 211, 214, 215, 216, 217, 221, 224, 227, 230, 232, 233, 237, 240, 243, 245, 248, 254, 258, 259, 260, 261, 262, 269, 270, 272, 279, 280, 281, 282, 283, 290, 291, 296, 297, 298, 301, 304, 305, 308, 309, 312, 313, 318, 319, 324, 327, 328, 329, 330, 331, 333, 342, 349, 350, 351, 352, 353, 354, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 442, 443, 444, 445, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 488, 489, 496, 497, 498, 499, 500, 502, 503, 504, 510, 511, 512, 513, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 594, 595, 602, 603, 604, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 632, 634, 636, 638, 639, 641, 642, 643, 644, 645, 647, 648, 651, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 666, 667, 668, 670, 671, 672, 673, 674, 675, 677, 678, 679, 680, 681, 682, 683, 684, 688, 689, 694, 695, 704, 705, 706, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 724, 725, 726, 727, 728, 729, 730, 731, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 747, 749, 751, 752, 753, 754, 761, 765, 766, 768, 769, 771, 773, 774, 776, 778, 779, 781, 787, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 808, 812, 813, 815, 817, 818, 820, 823, 824, 826, 827, 829, 830, 832, 834, 835, 836, 841, 842, 845, 846, 847, 848, 849, 850, 852, 853, 854, 855, 866, 867, 868, 869, 870, 871, 872, 873, 889, 891, 892, 893, 894, 895, 896, 897, 898, 899, 901, 902, 903, 908, 909, 910, 911, 914, 917, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 934, 935, 936, 939, 940, 941, 942, 943, 946, 948, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 962, 963, 965, 966, 968, 970, 971, 972, 984, 985, 986, 987, 992, 996, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1010, 1012, 1015, 1016, 1018, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1063, 1064, 1065, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1116, 1117, 1119, 1120, 1121, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1133, 1137, 1141, 1142, 1143, 1144, 1171], "\u210d": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 190, 191, 193, 194, 195, 196, 198, 200, 201, 208, 211, 214, 215, 216, 217, 221, 224, 227, 230, 232, 233, 237, 240, 243, 245, 248, 254, 258, 259, 260, 261, 262, 269, 270, 272, 279, 280, 281, 282, 283, 290, 291, 296, 297, 298, 301, 304, 305, 308, 309, 312, 313, 318, 319, 324, 327, 328, 329, 330, 331, 333, 342, 349, 350, 351, 352, 353, 354, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 442, 443, 444, 445, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 488, 489, 496, 497, 498, 499, 500, 502, 503, 504, 510, 511, 512, 513, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 594, 595, 602, 603, 604, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 632, 634, 636, 638, 639, 641, 642, 643, 644, 645, 647, 648, 651, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 666, 667, 668, 670, 671, 672, 673, 674, 675, 677, 678, 679, 680, 681, 682, 683, 684, 688, 689, 694, 695, 704, 705, 706, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 724, 725, 726, 727, 728, 729, 730, 731, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 747, 749, 751, 752, 753, 754, 761, 765, 766, 768, 769, 771, 773, 774, 776, 778, 779, 781, 787, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 808, 812, 813, 815, 817, 818, 820, 823, 824, 826, 827, 829, 830, 832, 834, 835, 836, 841, 842, 845, 846, 847, 848, 849, 850, 852, 853, 854, 855, 866, 867, 868, 869, 870, 871, 872, 873, 889, 891, 892, 893, 894, 895, 896, 897, 898, 899, 901, 902, 903, 908, 909, 910, 911, 914, 917, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 934, 935, 936, 939, 940, 941, 942, 943, 946, 948, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 962, 963, 965, 966, 968, 970, 971, 972, 984, 985, 986, 987, 992, 996, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1010, 1012, 1015, 1016, 1018, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1063, 1064, 1065, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1116, 1117, 1119, 1120, 1121, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1133, 1137, 1141, 1142, 1143, 1144, 1171], "\u211a": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 190, 191, 193, 194, 195, 196, 198, 200, 201, 208, 211, 214, 215, 216, 217, 221, 224, 227, 230, 232, 233, 237, 240, 243, 245, 248, 254, 258, 259, 260, 261, 262, 269, 270, 272, 279, 280, 281, 282, 283, 290, 291, 296, 297, 298, 301, 304, 305, 308, 309, 312, 313, 318, 319, 324, 327, 328, 329, 330, 331, 333, 342, 349, 350, 351, 352, 353, 354, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 442, 443, 444, 445, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 488, 489, 496, 497, 498, 499, 500, 502, 503, 504, 510, 511, 512, 513, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 594, 595, 602, 603, 604, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 632, 634, 636, 638, 639, 641, 642, 643, 644, 645, 647, 648, 651, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 666, 667, 668, 670, 671, 672, 673, 674, 675, 677, 678, 679, 680, 681, 682, 683, 684, 688, 689, 694, 695, 704, 705, 706, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 724, 725, 726, 727, 728, 729, 730, 731, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 747, 749, 751, 752, 753, 754, 761, 765, 766, 768, 769, 771, 773, 774, 776, 778, 779, 781, 787, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 808, 812, 813, 815, 817, 818, 820, 823, 824, 826, 827, 829, 830, 832, 834, 835, 836, 841, 842, 845, 846, 847, 848, 849, 850, 852, 853, 854, 855, 866, 867, 868, 869, 870, 871, 872, 873, 889, 891, 892, 893, 894, 895, 896, 897, 898, 899, 901, 902, 903, 908, 909, 910, 911, 914, 917, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 934, 935, 936, 939, 940, 941, 942, 943, 946, 948, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 962, 963, 965, 966, 968, 970, 971, 972, 984, 985, 986, 987, 992, 996, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1010, 1012, 1015, 1016, 1018, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1063, 1064, 1065, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1116, 1117, 1119, 1120, 1121, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1133, 1137, 1141, 1142, 1143, 1144, 1171], "\u211c": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 190, 191, 193, 194, 195, 196, 198, 200, 201, 208, 211, 214, 215, 216, 217, 221, 224, 227, 230, 232, 233, 237, 240, 243, 245, 248, 254, 258, 259, 260, 261, 262, 269, 270, 272, 279, 280, 281, 282, 283, 290, 291, 296, 297, 298, 301, 304, 305, 308, 309, 312, 313, 318, 319, 324, 327, 328, 329, 330, 331, 333, 342, 349, 350, 351, 352, 353, 354, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 442, 443, 444, 445, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 488, 489, 496, 497, 498, 499, 500, 502, 503, 504, 510, 511, 512, 513, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 594, 595, 602, 603, 604, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 632, 634, 636, 638, 639, 641, 642, 643, 644, 645, 647, 648, 651, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 666, 667, 668, 670, 671, 672, 673, 674, 675, 677, 678, 679, 680, 681, 682, 683, 684, 688, 689, 694, 695, 704, 705, 706, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 724, 725, 726, 727, 728, 729, 730, 731, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 747, 749, 751, 752, 753, 754, 761, 765, 766, 768, 769, 771, 773, 774, 776, 778, 779, 781, 787, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 808, 812, 813, 815, 817, 818, 820, 823, 824, 826, 827, 829, 830, 832, 834, 835, 836, 841, 842, 845, 846, 847, 848, 849, 850, 852, 853, 854, 855, 866, 867, 868, 869, 870, 871, 872, 873, 889, 891, 892, 893, 894, 895, 896, 897, 898, 899, 901, 902, 903, 908, 909, 910, 911, 914, 917, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 934, 935, 936, 939, 940, 941, 942, 943, 946, 948, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 962, 963, 965, 966, 968, 970, 971, 972, 984, 985, 986, 987, 992, 996, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1010, 1012, 1015, 1016, 1018, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1063, 1064, 1065, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1116, 1117, 1119, 1120, 1121, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1133, 1137, 1141, 1142, 1143, 1144, 1171], "\u211b": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 190, 191, 193, 194, 195, 196, 198, 200, 201, 208, 211, 214, 215, 216, 217, 221, 224, 227, 230, 232, 233, 237, 240, 243, 245, 248, 254, 258, 259, 260, 261, 262, 269, 270, 272, 279, 280, 281, 282, 283, 290, 291, 296, 297, 298, 301, 304, 305, 308, 309, 312, 313, 318, 319, 324, 327, 328, 329, 330, 331, 333, 342, 349, 350, 351, 352, 353, 354, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 442, 443, 444, 445, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 488, 489, 496, 497, 498, 499, 500, 502, 503, 504, 510, 511, 512, 513, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 594, 595, 602, 603, 604, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 632, 634, 636, 638, 639, 641, 642, 643, 644, 645, 647, 648, 651, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 666, 667, 668, 670, 671, 672, 673, 674, 675, 677, 678, 679, 680, 681, 682, 683, 684, 688, 689, 694, 695, 704, 705, 706, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 724, 725, 726, 727, 728, 729, 730, 731, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 747, 749, 751, 752, 753, 754, 761, 765, 766, 768, 769, 771, 773, 774, 776, 778, 779, 781, 787, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 808, 812, 813, 815, 817, 818, 820, 823, 824, 826, 827, 829, 830, 832, 834, 835, 836, 841, 842, 845, 846, 847, 848, 849, 850, 852, 853, 854, 855, 866, 867, 868, 869, 870, 871, 872, 873, 889, 891, 892, 893, 894, 895, 896, 897, 898, 899, 901, 902, 903, 908, 909, 910, 911, 914, 917, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 934, 935, 936, 939, 940, 941, 942, 943, 946, 948, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 962, 963, 965, 966, 968, 970, 971, 972, 984, 985, 986, 987, 992, 996, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1010, 1012, 1015, 1016, 1018, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1063, 1064, 1065, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1116, 1117, 1119, 1120, 1121, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1133, 1137, 1141, 1142, 1143, 1144, 1171], "\u211d": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 190, 191, 193, 194, 195, 196, 198, 200, 201, 208, 211, 214, 215, 216, 217, 221, 224, 227, 230, 232, 233, 237, 240, 243, 245, 248, 254, 258, 259, 260, 261, 262, 269, 270, 272, 279, 280, 281, 282, 283, 290, 291, 296, 297, 298, 301, 304, 305, 308, 309, 312, 313, 318, 319, 324, 327, 328, 329, 330, 331, 333, 342, 349, 350, 351, 352, 353, 354, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 442, 443, 444, 445, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 488, 489, 496, 497, 498, 499, 500, 502, 503, 504, 510, 511, 512, 513, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 594, 595, 602, 603, 604, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 632, 634, 636, 638, 639, 641, 642, 643, 644, 645, 647, 648, 651, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 666, 667, 668, 670, 671, 672, 673, 674, 675, 677, 678, 679, 680, 681, 682, 683, 684, 688, 689, 694, 695, 704, 705, 706, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 724, 725, 726, 727, 728, 729, 730, 731, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 747, 749, 751, 752, 753, 754, 761, 765, 766, 768, 769, 771, 773, 774, 776, 778, 779, 781, 787, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 808, 812, 813, 815, 817, 818, 820, 823, 824, 826, 827, 829, 830, 832, 834, 835, 836, 841, 842, 845, 846, 847, 848, 849, 850, 852, 853, 854, 855, 866, 867, 868, 869, 870, 871, 872, 873, 889, 891, 892, 893, 894, 895, 896, 897, 898, 899, 901, 902, 903, 908, 909, 910, 911, 914, 917, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 934, 935, 936, 939, 940, 941, 942, 943, 946, 948, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 962, 963, 965, 966, 968, 970, 971, 972, 984, 985, 986, 987, 992, 996, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1010, 1012, 1015, 1016, 1018, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1063, 1064, 1065, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1116, 1117, 1119, 1120, 1121, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1133, 1137, 1141, 1142, 1143, 1144, 1171], "\u03f5": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 190, 191, 193, 194, 195, 196, 198, 200, 201, 208, 211, 214, 215, 216, 217, 221, 224, 227, 230, 232, 233, 237, 240, 243, 245, 248, 254, 258, 259, 260, 261, 262, 269, 270, 272, 279, 280, 281, 282, 283, 290, 291, 296, 297, 298, 301, 304, 305, 308, 309, 312, 313, 318, 319, 324, 327, 328, 329, 330, 331, 333, 342, 349, 350, 351, 352, 353, 354, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 442, 443, 444, 445, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 488, 489, 496, 497, 498, 499, 500, 502, 503, 504, 510, 511, 512, 513, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 594, 595, 602, 603, 604, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 632, 634, 636, 638, 639, 641, 642, 643, 644, 645, 647, 648, 651, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 666, 667, 668, 670, 671, 672, 673, 674, 675, 677, 678, 679, 680, 681, 682, 683, 684, 688, 689, 694, 695, 704, 705, 706, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 724, 725, 726, 727, 728, 729, 730, 731, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 747, 749, 751, 752, 753, 754, 761, 765, 766, 768, 769, 771, 773, 774, 776, 778, 779, 781, 787, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 808, 812, 813, 815, 817, 818, 820, 823, 824, 826, 827, 829, 830, 832, 834, 835, 836, 841, 842, 845, 846, 847, 848, 849, 850, 852, 853, 854, 855, 866, 867, 868, 869, 870, 871, 872, 873, 889, 891, 892, 893, 894, 895, 896, 897, 898, 899, 901, 902, 903, 908, 909, 910, 911, 914, 917, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 934, 935, 936, 939, 940, 941, 942, 943, 946, 948, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 962, 963, 965, 966, 968, 970, 971, 972, 984, 985, 986, 987, 992, 996, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1010, 1012, 1015, 1016, 1018, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1063, 1064, 1065, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1116, 1117, 1119, 1120, 1121, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1133, 1137, 1141, 1142, 1143, 1144, 1171], "\u03d5": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 190, 191, 193, 194, 195, 196, 198, 200, 201, 208, 211, 214, 215, 216, 217, 221, 224, 227, 230, 232, 233, 237, 240, 243, 245, 248, 254, 258, 259, 260, 261, 262, 269, 270, 272, 279, 280, 281, 282, 283, 290, 291, 296, 297, 298, 301, 304, 305, 308, 309, 312, 313, 318, 319, 324, 327, 328, 329, 330, 331, 333, 342, 349, 350, 351, 352, 353, 354, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 442, 443, 444, 445, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 488, 489, 496, 497, 498, 499, 500, 502, 503, 504, 510, 511, 512, 513, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 594, 595, 602, 603, 604, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 632, 634, 636, 638, 639, 641, 642, 643, 644, 645, 647, 648, 651, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 666, 667, 668, 670, 671, 672, 673, 674, 675, 677, 678, 679, 680, 681, 682, 683, 684, 688, 689, 694, 695, 704, 705, 706, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 724, 725, 726, 727, 728, 729, 730, 731, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 747, 749, 751, 752, 753, 754, 761, 765, 766, 768, 769, 771, 773, 774, 776, 778, 779, 781, 787, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 808, 812, 813, 815, 817, 818, 820, 823, 824, 826, 827, 829, 830, 832, 834, 835, 836, 841, 842, 845, 846, 847, 848, 849, 850, 852, 853, 854, 855, 866, 867, 868, 869, 870, 871, 872, 873, 889, 891, 892, 893, 894, 895, 896, 897, 898, 899, 901, 902, 903, 908, 909, 910, 911, 914, 917, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 934, 935, 936, 939, 940, 941, 942, 943, 946, 948, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 962, 963, 965, 966, 968, 970, 971, 972, 984, 985, 986, 987, 992, 996, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1010, 1012, 1015, 1016, 1018, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1063, 1064, 1065, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1116, 1117, 1119, 1120, 1121, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1133, 1137, 1141, 1142, 1143, 1144, 1171], "\u03c5": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 190, 191, 193, 194, 195, 196, 198, 200, 201, 208, 211, 214, 215, 216, 217, 221, 224, 227, 230, 232, 233, 237, 240, 243, 245, 248, 254, 258, 259, 260, 261, 262, 269, 270, 272, 279, 280, 281, 282, 283, 290, 291, 296, 297, 298, 301, 304, 305, 308, 309, 312, 313, 318, 319, 324, 327, 328, 329, 330, 331, 333, 342, 349, 350, 351, 352, 353, 354, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 442, 443, 444, 445, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 488, 489, 496, 497, 498, 499, 500, 502, 503, 504, 510, 511, 512, 513, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 594, 595, 602, 603, 604, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 632, 634, 636, 638, 639, 641, 642, 643, 644, 645, 647, 648, 651, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 666, 667, 668, 670, 671, 672, 673, 674, 675, 677, 678, 679, 680, 681, 682, 683, 684, 688, 689, 694, 695, 704, 705, 706, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 724, 725, 726, 727, 728, 729, 730, 731, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 747, 749, 751, 752, 753, 754, 761, 765, 766, 768, 769, 771, 773, 774, 776, 778, 779, 781, 787, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 808, 812, 813, 815, 817, 818, 820, 823, 824, 826, 827, 829, 830, 832, 834, 835, 836, 841, 842, 845, 846, 847, 848, 849, 850, 852, 853, 854, 855, 866, 867, 868, 869, 870, 871, 872, 873, 889, 891, 892, 893, 894, 895, 896, 897, 898, 899, 901, 902, 903, 908, 909, 910, 911, 914, 917, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 934, 935, 936, 939, 940, 941, 942, 943, 946, 948, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 962, 963, 965, 966, 968, 970, 971, 972, 984, 985, 986, 987, 992, 996, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1010, 1012, 1015, 1016, 1018, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1063, 1064, 1065, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1116, 1117, 1119, 1120, 1121, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1133, 1137, 1141, 1142, 1143, 1144, 1171], "\u03b5": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 190, 191, 193, 194, 195, 196, 198, 200, 201, 208, 211, 214, 215, 216, 217, 221, 224, 227, 230, 232, 233, 237, 240, 243, 245, 248, 254, 258, 259, 260, 261, 262, 269, 270, 272, 279, 280, 281, 282, 283, 290, 291, 296, 297, 298, 301, 304, 305, 308, 309, 312, 313, 318, 319, 324, 327, 328, 329, 330, 331, 333, 342, 349, 350, 351, 352, 353, 354, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 442, 443, 444, 445, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 488, 489, 496, 497, 498, 499, 500, 502, 503, 504, 510, 511, 512, 513, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 594, 595, 602, 603, 604, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 632, 634, 636, 638, 639, 641, 642, 643, 644, 645, 647, 648, 651, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 666, 667, 668, 670, 671, 672, 673, 674, 675, 677, 678, 679, 680, 681, 682, 683, 684, 688, 689, 694, 695, 704, 705, 706, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 724, 725, 726, 727, 728, 729, 730, 731, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 747, 749, 751, 752, 753, 754, 761, 765, 766, 768, 769, 771, 773, 774, 776, 778, 779, 781, 787, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 808, 812, 813, 815, 817, 818, 820, 823, 824, 826, 827, 829, 830, 832, 834, 835, 836, 841, 842, 845, 846, 847, 848, 849, 850, 852, 853, 854, 855, 866, 867, 868, 869, 870, 871, 872, 873, 889, 891, 892, 893, 894, 895, 896, 897, 898, 899, 901, 902, 903, 908, 909, 910, 911, 914, 917, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 934, 935, 936, 939, 940, 941, 942, 943, 946, 948, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 962, 963, 965, 966, 968, 970, 971, 972, 984, 985, 986, 987, 992, 996, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1010, 1012, 1015, 1016, 1018, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1063, 1064, 1065, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1116, 1117, 1119, 1120, 1121, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1133, 1137, 1141, 1142, 1143, 1144, 1171], "\u03f0": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 190, 191, 193, 194, 195, 196, 198, 200, 201, 208, 211, 214, 215, 216, 217, 221, 224, 227, 230, 232, 233, 237, 240, 243, 245, 248, 254, 258, 259, 260, 261, 262, 269, 270, 272, 279, 280, 281, 282, 283, 290, 291, 296, 297, 298, 301, 304, 305, 308, 309, 312, 313, 318, 319, 324, 327, 328, 329, 330, 331, 333, 342, 349, 350, 351, 352, 353, 354, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 442, 443, 444, 445, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 488, 489, 496, 497, 498, 499, 500, 502, 503, 504, 510, 511, 512, 513, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 594, 595, 602, 603, 604, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 632, 634, 636, 638, 639, 641, 642, 643, 644, 645, 647, 648, 651, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 666, 667, 668, 670, 671, 672, 673, 674, 675, 677, 678, 679, 680, 681, 682, 683, 684, 688, 689, 694, 695, 704, 705, 706, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 724, 725, 726, 727, 728, 729, 730, 731, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 747, 749, 751, 752, 753, 754, 761, 765, 766, 768, 769, 771, 773, 774, 776, 778, 779, 781, 787, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 808, 812, 813, 815, 817, 818, 820, 823, 824, 826, 827, 829, 830, 832, 834, 835, 836, 841, 842, 845, 846, 847, 848, 849, 850, 852, 853, 854, 855, 866, 867, 868, 869, 870, 871, 872, 873, 889, 891, 892, 893, 894, 895, 896, 897, 898, 899, 901, 902, 903, 908, 909, 910, 911, 914, 917, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 934, 935, 936, 939, 940, 941, 942, 943, 946, 948, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 962, 963, 965, 966, 968, 970, 971, 972, 984, 985, 986, 987, 992, 996, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1010, 1012, 1015, 1016, 1018, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1063, 1064, 1065, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1116, 1117, 1119, 1120, 1121, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1133, 1137, 1141, 1142, 1143, 1144, 1171], "\u03c6": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 190, 191, 193, 194, 195, 196, 198, 200, 201, 208, 211, 214, 215, 216, 217, 221, 224, 227, 230, 232, 233, 237, 240, 243, 245, 248, 254, 258, 259, 260, 261, 262, 269, 270, 272, 279, 280, 281, 282, 283, 290, 291, 296, 297, 298, 301, 304, 305, 308, 309, 312, 313, 318, 319, 324, 327, 328, 329, 330, 331, 333, 342, 349, 350, 351, 352, 353, 354, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 442, 443, 444, 445, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 488, 489, 496, 497, 498, 499, 500, 502, 503, 504, 510, 511, 512, 513, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 594, 595, 602, 603, 604, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 632, 634, 636, 638, 639, 641, 642, 643, 644, 645, 647, 648, 651, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 666, 667, 668, 670, 671, 672, 673, 674, 675, 677, 678, 679, 680, 681, 682, 683, 684, 688, 689, 694, 695, 704, 705, 706, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 724, 725, 726, 727, 728, 729, 730, 731, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 747, 749, 751, 752, 753, 754, 761, 765, 766, 768, 769, 771, 773, 774, 776, 778, 779, 781, 787, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 808, 812, 813, 815, 817, 818, 820, 823, 824, 826, 827, 829, 830, 832, 834, 835, 836, 841, 842, 845, 846, 847, 848, 849, 850, 852, 853, 854, 855, 866, 867, 868, 869, 870, 871, 872, 873, 889, 891, 892, 893, 894, 895, 896, 897, 898, 899, 901, 902, 903, 908, 909, 910, 911, 914, 917, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 934, 935, 936, 939, 940, 941, 942, 943, 946, 948, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 962, 963, 965, 966, 968, 970, 971, 972, 984, 985, 986, 987, 992, 996, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1010, 1012, 1015, 1016, 1018, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1063, 1064, 1065, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1116, 1117, 1119, 1120, 1121, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1133, 1137, 1141, 1142, 1143, 1144, 1171], "\u03d6": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 190, 191, 193, 194, 195, 196, 198, 200, 201, 208, 211, 214, 215, 216, 217, 221, 224, 227, 230, 232, 233, 237, 240, 243, 245, 248, 254, 258, 259, 260, 261, 262, 269, 270, 272, 279, 280, 281, 282, 283, 290, 291, 296, 297, 298, 301, 304, 305, 308, 309, 312, 313, 318, 319, 324, 327, 328, 329, 330, 331, 333, 342, 349, 350, 351, 352, 353, 354, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 442, 443, 444, 445, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 488, 489, 496, 497, 498, 499, 500, 502, 503, 504, 510, 511, 512, 513, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 594, 595, 602, 603, 604, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 632, 634, 636, 638, 639, 641, 642, 643, 644, 645, 647, 648, 651, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 666, 667, 668, 670, 671, 672, 673, 674, 675, 677, 678, 679, 680, 681, 682, 683, 684, 688, 689, 694, 695, 704, 705, 706, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 724, 725, 726, 727, 728, 729, 730, 731, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 747, 749, 751, 752, 753, 754, 761, 765, 766, 768, 769, 771, 773, 774, 776, 778, 779, 781, 787, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 808, 812, 813, 815, 817, 818, 820, 823, 824, 826, 827, 829, 830, 832, 834, 835, 836, 841, 842, 845, 846, 847, 848, 849, 850, 852, 853, 854, 855, 866, 867, 868, 869, 870, 871, 872, 873, 889, 891, 892, 893, 894, 895, 896, 897, 898, 899, 901, 902, 903, 908, 909, 910, 911, 914, 917, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 934, 935, 936, 939, 940, 941, 942, 943, 946, 948, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 962, 963, 965, 966, 968, 970, 971, 972, 984, 985, 986, 987, 992, 996, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1010, 1012, 1015, 1016, 1018, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1063, 1064, 1065, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1116, 1117, 1119, 1120, 1121, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1133, 1137, 1141, 1142, 1143, 1144, 1171], "\u03f1": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 190, 191, 193, 194, 195, 196, 198, 200, 201, 208, 211, 214, 215, 216, 217, 221, 224, 227, 230, 232, 233, 237, 240, 243, 245, 248, 254, 258, 259, 260, 261, 262, 269, 270, 272, 279, 280, 281, 282, 283, 290, 291, 296, 297, 298, 301, 304, 305, 308, 309, 312, 313, 318, 319, 324, 327, 328, 329, 330, 331, 333, 342, 349, 350, 351, 352, 353, 354, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 442, 443, 444, 445, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 488, 489, 496, 497, 498, 499, 500, 502, 503, 504, 510, 511, 512, 513, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 594, 595, 602, 603, 604, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 632, 634, 636, 638, 639, 641, 642, 643, 644, 645, 647, 648, 651, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 666, 667, 668, 670, 671, 672, 673, 674, 675, 677, 678, 679, 680, 681, 682, 683, 684, 688, 689, 694, 695, 704, 705, 706, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 724, 725, 726, 727, 728, 729, 730, 731, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 747, 749, 751, 752, 753, 754, 761, 765, 766, 768, 769, 771, 773, 774, 776, 778, 779, 781, 787, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 808, 812, 813, 815, 817, 818, 820, 823, 824, 826, 827, 829, 830, 832, 834, 835, 836, 841, 842, 845, 846, 847, 848, 849, 850, 852, 853, 854, 855, 866, 867, 868, 869, 870, 871, 872, 873, 889, 891, 892, 893, 894, 895, 896, 897, 898, 899, 901, 902, 903, 908, 909, 910, 911, 914, 917, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 934, 935, 936, 939, 940, 941, 942, 943, 946, 948, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 962, 963, 965, 966, 968, 970, 971, 972, 984, 985, 986, 987, 992, 996, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1010, 1012, 1015, 1016, 1018, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1063, 1064, 1065, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1116, 1117, 1119, 1120, 1121, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1133, 1137, 1141, 1142, 1143, 1144, 1171], "\u03c2": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 190, 191, 193, 194, 195, 196, 198, 200, 201, 208, 211, 214, 215, 216, 217, 221, 224, 227, 230, 232, 233, 237, 240, 243, 245, 248, 254, 258, 259, 260, 261, 262, 269, 270, 272, 279, 280, 281, 282, 283, 290, 291, 296, 297, 298, 301, 304, 305, 308, 309, 312, 313, 318, 319, 324, 327, 328, 329, 330, 331, 333, 342, 349, 350, 351, 352, 353, 354, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 442, 443, 444, 445, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 488, 489, 496, 497, 498, 499, 500, 502, 503, 504, 510, 511, 512, 513, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 594, 595, 602, 603, 604, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 632, 634, 636, 638, 639, 641, 642, 643, 644, 645, 647, 648, 651, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 666, 667, 668, 670, 671, 672, 673, 674, 675, 677, 678, 679, 680, 681, 682, 683, 684, 688, 689, 694, 695, 704, 705, 706, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 724, 725, 726, 727, 728, 729, 730, 731, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 747, 749, 751, 752, 753, 754, 761, 765, 766, 768, 769, 771, 773, 774, 776, 778, 779, 781, 787, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 808, 812, 813, 815, 817, 818, 820, 823, 824, 826, 827, 829, 830, 832, 834, 835, 836, 841, 842, 845, 846, 847, 848, 849, 850, 852, 853, 854, 855, 866, 867, 868, 869, 870, 871, 872, 873, 889, 891, 892, 893, 894, 895, 896, 897, 898, 899, 901, 902, 903, 908, 909, 910, 911, 914, 917, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 934, 935, 936, 939, 940, 941, 942, 943, 946, 948, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 962, 963, 965, 966, 968, 970, 971, 972, 984, 985, 986, 987, 992, 996, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1010, 1012, 1015, 1016, 1018, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1063, 1064, 1065, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1116, 1117, 1119, 1120, 1121, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1133, 1137, 1141, 1142, 1143, 1144, 1171], "\u03d1": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 190, 191, 193, 194, 195, 196, 198, 200, 201, 208, 211, 214, 215, 216, 217, 221, 224, 227, 230, 232, 233, 237, 240, 243, 245, 248, 254, 258, 259, 260, 261, 262, 269, 270, 272, 279, 280, 281, 282, 283, 290, 291, 296, 297, 298, 301, 304, 305, 308, 309, 312, 313, 318, 319, 324, 327, 328, 329, 330, 331, 333, 342, 349, 350, 351, 352, 353, 354, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 442, 443, 444, 445, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 488, 489, 496, 497, 498, 499, 500, 502, 503, 504, 510, 511, 512, 513, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 594, 595, 602, 603, 604, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 632, 634, 636, 638, 639, 641, 642, 643, 644, 645, 647, 648, 651, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 666, 667, 668, 670, 671, 672, 673, 674, 675, 677, 678, 679, 680, 681, 682, 683, 684, 688, 689, 694, 695, 704, 705, 706, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 724, 725, 726, 727, 728, 729, 730, 731, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 747, 749, 751, 752, 753, 754, 761, 765, 766, 768, 769, 771, 773, 774, 776, 778, 779, 781, 787, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 808, 812, 813, 815, 817, 818, 820, 823, 824, 826, 827, 829, 830, 832, 834, 835, 836, 841, 842, 845, 846, 847, 848, 849, 850, 852, 853, 854, 855, 866, 867, 868, 869, 870, 871, 872, 873, 889, 891, 892, 893, 894, 895, 896, 897, 898, 899, 901, 902, 903, 908, 909, 910, 911, 914, 917, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 934, 935, 936, 939, 940, 941, 942, 943, 946, 948, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 962, 963, 965, 966, 968, 970, 971, 972, 984, 985, 986, 987, 992, 996, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1010, 1012, 1015, 1016, 1018, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1063, 1064, 1065, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1116, 1117, 1119, 1120, 1121, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1133, 1137, 1141, 1142, 1143, 1144, 1171], "\u2128": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 190, 191, 193, 194, 195, 196, 198, 200, 201, 208, 211, 214, 215, 216, 217, 221, 224, 227, 230, 232, 233, 237, 240, 243, 245, 248, 254, 258, 259, 260, 261, 262, 269, 270, 272, 279, 280, 281, 282, 283, 290, 291, 296, 297, 298, 301, 304, 305, 308, 309, 312, 313, 318, 319, 324, 327, 328, 329, 330, 331, 333, 342, 349, 350, 351, 352, 353, 354, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 442, 443, 444, 445, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 488, 489, 496, 497, 498, 499, 500, 502, 503, 504, 510, 511, 512, 513, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 594, 595, 602, 603, 604, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 632, 634, 636, 638, 639, 641, 642, 643, 644, 645, 647, 648, 651, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 666, 667, 668, 670, 671, 672, 673, 674, 675, 677, 678, 679, 680, 681, 682, 683, 684, 688, 689, 694, 695, 704, 705, 706, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 724, 725, 726, 727, 728, 729, 730, 731, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 747, 749, 751, 752, 753, 754, 761, 765, 766, 768, 769, 771, 773, 774, 776, 778, 779, 781, 787, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 808, 812, 813, 815, 817, 818, 820, 823, 824, 826, 827, 829, 830, 832, 834, 835, 836, 841, 842, 845, 846, 847, 848, 849, 850, 852, 853, 854, 855, 866, 867, 868, 869, 870, 871, 872, 873, 889, 891, 892, 893, 894, 895, 896, 897, 898, 899, 901, 902, 903, 908, 909, 910, 911, 914, 917, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 934, 935, 936, 939, 940, 941, 942, 943, 946, 948, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 962, 963, 965, 966, 968, 970, 971, 972, 984, 985, 986, 987, 992, 996, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1010, 1012, 1015, 1016, 1018, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1063, 1064, 1065, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1116, 1117, 1119, 1120, 1121, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1133, 1137, 1141, 1142, 1143, 1144, 1171], "mittwoch": [8, 198, 200, 208], "00": [8, 114, 156, 157, 159, 164, 169, 177, 181, 189, 190, 191, 193, 194, 195, 196, 198, 200, 202, 204, 206, 208, 211, 215, 221, 223, 229, 239, 242, 243, 270, 271, 278, 279, 281, 335, 443, 451, 465, 720, 742, 746, 750, 761, 837, 838, 892, 914, 915, 916, 968, 987, 996, 1034, 1141], "tectrain": [8, 11, 177, 189, 198, 200, 208, 211, 214, 215, 216, 217, 221, 233, 245, 360], "html": [8, 17, 18, 23, 39, 40, 151, 160, 173, 181, 198, 208, 211, 214, 218, 221, 224, 227, 230, 246, 277, 337, 647, 766, 781, 787, 870, 892, 978, 982, 1053, 1119], "download": [8, 17, 64, 66, 107, 142, 153, 159, 161, 165, 169, 174, 177, 186, 193, 198, 206, 208, 211, 214, 215, 216, 221, 224, 227, 237, 240, 243, 245, 248, 251, 254, 263, 266, 273, 277, 284, 301, 321, 333, 362, 452, 455, 516, 517, 518, 519, 520, 521, 522, 525, 526, 571, 656, 658, 662, 663, 685, 686, 687, 690, 691, 692, 693, 695, 696, 697, 698, 699, 700, 701, 702, 703, 717, 719, 870, 872, 892, 894, 907, 914, 915, 916, 926, 992, 998, 1032, 1065, 1077, 1086, 1096, 1097, 1099, 1110, 1112, 1114, 1136], "repositori": [8, 23, 78, 98, 110, 114, 136, 141, 150, 157, 160, 168, 172, 181, 183, 190, 191, 201, 206, 208, 211, 215, 216, 217, 221, 224, 227, 232, 233, 237, 240, 243, 245, 248, 254, 262, 270, 280, 281, 283, 287, 293, 297, 298, 301, 305, 309, 313, 315, 319, 321, 327, 341, 342, 347, 515, 532, 567, 763, 810, 1150, 1155], "kurssprach": [8, 198, 208, 217, 233, 245], "kurs": [8, 23, 151, 168, 189, 200, 208, 217, 233, 245, 1155, 1156, 1157, 1165, 1172, 1179], "viel": [8, 23, 172, 177, 181, 187, 198, 208, 217, 223, 233, 234, 245, 264, 1158, 1159, 1165, 1173, 1174], "spezifisch": [8, 198, 208, 217, 233, 245, 1156, 1175, 1178], "unterrichtet": [8, 198, 208, 217, 233, 245], "themenreihenfolg": [8, 198, 208, 217, 233, 245], "herdt": [8, 147, 208, 217, 233, 245], "skriptum": [8, 198, 208, 217, 233, 245, 1171], "\u00fcbernommen": [8, 198, 208, 217, 233, 245], "etwa": [8, 23, 162, 163, 172, 177, 187, 189, 198, 208, 210, 217, 233, 245, 360, 1156, 1158, 1165, 1171, 1172, 1174, 1179], "allgemein": [8, 198, 208, 217, 233, 245, 1171], "allgemeinen": [8, 198, 202, 208, 217, 233, 245, 1174], "dadurch": [8, 198, 208, 217, 233, 245, 360, 1158, 1178], "verwirrend": [8, 198, 208, 217, 233, 245, 1171], "weswegen": [8, 198, 208, 217, 233, 245], "vielen": [8, 23, 172, 197, 208, 217, 233, 245, 360, 1165, 1167], "f\u00e4llen": [8, 23, 198, 208, 217, 233, 245], "ausnahmen": [8, 198, 208, 217, 233, 245], "gemacht": [8, 23, 162, 168, 198, 208, 217, 233, 245, 1171, 1179], "kursstruktur": [8, 208], "sieh": [8, 23, 171, 172, 173, 177, 181, 187, 198, 200, 203, 208, 217, 233, 245, 360, 1156, 1157, 1171], "jjj": [8, 127, 151, 195, 200, 208, 230, 278, 283, 351, 765, 766, 767, 771, 779], "hello": [8, 29, 64, 91, 147, 165, 187, 193, 197, 198, 200, 204, 208, 210, 211, 215, 217, 219, 221, 223, 224, 227, 229, 232, 233, 234, 236, 237, 243, 244, 245, 246, 248, 249, 251, 253, 266, 267, 273, 276, 284, 286, 287, 292, 293, 306, 314, 315, 316, 320, 321, 326, 328, 329, 330, 331, 332, 333, 337, 338, 342, 377, 380, 384, 395, 404, 411, 417, 421, 424, 428, 437, 441, 446, 447, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 465, 574, 577, 647, 669, 675, 678, 695, 700, 701, 702, 703, 707, 760, 762, 763, 767, 770, 772, 775, 777, 780, 787, 791, 795, 801, 807, 812, 814, 819, 822, 825, 828, 831, 837, 838, 841, 842, 874, 876, 881, 882, 889, 906, 917, 939, 963, 984, 985, 986, 996, 998, 1000, 1001, 1002, 1009, 1016, 1017, 1018, 1019, 1023, 1031, 1035, 1036, 1042, 1045, 1047, 1051, 1052, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1118, 1121, 1122, 1128, 1132, 1135, 1157, 1171], "py": [8, 17, 21, 32, 40, 64, 66, 138, 150, 169, 173, 174, 177, 185, 186, 187, 190, 191, 193, 195, 205, 208, 214, 220, 223, 227, 229, 230, 233, 234, 237, 239, 240, 242, 243, 245, 246, 252, 254, 266, 272, 273, 274, 282, 283, 287, 288, 293, 304, 305, 310, 323, 327, 342, 451, 709, 914, 970, 972, 1005, 1008, 1010, 1011, 1015, 1016, 1018, 1034, 1035, 1037, 1043, 1060, 1062, 1063, 1064, 1065, 1069, 1070, 1072, 1073, 1075, 1077, 1082, 1086, 1088, 1090, 1092, 1093, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1110, 1111, 1116, 1124, 1129, 1130, 1141, 1142], "swap": [8, 29, 156, 192, 198, 208, 210, 217, 229, 232, 233, 245, 250, 251, 260, 269, 270, 290, 291, 417, 421, 424, 428, 437, 441, 446, 447, 545, 669, 707, 760, 762, 763, 796, 840, 851, 852, 906, 1038, 1067, 1069, 1070, 1071, 1072, 1074, 1106, 1171, 1175], "exercis": [8, 29, 79, 94, 98, 103, 105, 107, 116, 117, 129, 132, 133, 134, 151, 173, 181, 186, 193, 194, 198, 200, 205, 208, 211, 217, 221, 224, 227, 228, 230, 233, 237, 240, 243, 245, 248, 250, 251, 260, 262, 269, 273, 275, 276, 290, 291, 295, 309, 313, 320, 327, 328, 329, 330, 331, 333, 341, 344, 347, 355, 356, 373, 380, 395, 404, 411, 417, 421, 424, 428, 437, 441, 446, 447, 466, 474, 514, 535, 536, 537, 538, 540, 541, 542, 547, 567, 634, 635, 649, 669, 707, 735, 762, 763, 764, 771, 833, 837, 838, 840, 844, 851, 861, 863, 865, 890, 900, 906, 922, 945, 947, 956, 964, 983, 990, 1031, 1032, 1066, 1095, 1106, 1107, 1141, 1161, 1164, 1166, 1171, 1176], "greet": [8, 29, 187, 198, 208, 211, 217, 223, 224, 233, 234, 236, 242, 243, 245, 248, 251, 266, 267, 338, 461, 763, 985, 986, 992, 1002, 1067, 1069, 1071, 1074, 1106, 1171], "depend": [8, 13, 28, 29, 64, 79, 113, 116, 134, 147, 150, 151, 154, 155, 161, 165, 184, 186, 198, 208, 211, 216, 217, 223, 224, 229, 230, 233, 239, 242, 243, 245, 248, 251, 266, 283, 291, 297, 313, 342, 357, 365, 381, 383, 391, 394, 410, 427, 439, 445, 449, 453, 457, 460, 464, 467, 474, 480, 514, 526, 552, 554, 562, 642, 668, 716, 739, 761, 763, 769, 822, 833, 840, 844, 851, 854, 865, 890, 900, 907, 915, 933, 985, 996, 1000, 1002, 1009, 1031, 1032, 1034, 1067, 1071, 1080, 1106, 1135, 1136, 1166, 1168, 1171], "time": [8, 29, 36, 38, 43, 53, 64, 74, 77, 86, 90, 99, 111, 112, 114, 116, 117, 121, 129, 134, 144, 153, 154, 155, 156, 158, 159, 161, 174, 175, 178, 186, 190, 192, 193, 194, 198, 204, 206, 208, 211, 213, 215, 216, 217, 223, 224, 226, 229, 230, 233, 234, 242, 243, 245, 248, 249, 251, 252, 266, 267, 270, 273, 274, 276, 279, 280, 282, 283, 284, 288, 291, 301, 304, 305, 308, 310, 315, 316, 321, 322, 328, 349, 360, 377, 385, 399, 405, 408, 431, 433, 438, 439, 442, 443, 444, 445, 449, 454, 465, 467, 468, 471, 477, 526, 556, 569, 576, 578, 619, 620, 674, 681, 695, 709, 717, 719, 730, 737, 741, 761, 763, 781, 783, 787, 788, 790, 802, 808, 810, 812, 825, 828, 831, 835, 841, 842, 843, 849, 850, 854, 870, 901, 906, 907, 914, 915, 916, 926, 936, 942, 943, 944, 948, 951, 952, 954, 957, 960, 966, 968, 969, 970, 971, 972, 977, 999, 1000, 1006, 1010, 1016, 1019, 1020, 1031, 1032, 1033, 1036, 1043, 1046, 1049, 1050, 1067, 1069, 1071, 1074, 1106, 1112, 1121, 1126, 1136, 1166, 1171, 1177], "dai": [8, 12, 29, 155, 156, 158, 164, 167, 170, 173, 174, 178, 192, 198, 208, 211, 217, 219, 228, 233, 242, 243, 245, 248, 251, 266, 274, 278, 301, 348, 350, 351, 360, 450, 455, 456, 467, 488, 763, 827, 866, 931, 968, 1009, 1031, 1038, 1047, 1067, 1069, 1071, 1074, 1106, 1107, 1114, 1135, 1162, 1163, 1164, 1166, 1171, 1176], "hen": [8, 208], "vehikelkauf": [8, 208], "datentypen": [8, 177, 181, 198, 199, 205, 208, 239, 257, 343, 1158, 1171, 1178], "\u00fcbersicht": [8, 198, 208, 211, 221, 224, 227], "git": [8, 13, 23, 62, 66, 73, 74, 75, 79, 116, 117, 133, 137, 141, 146, 158, 160, 168, 181, 182, 183, 186, 203, 205, 206, 208, 230, 232, 243, 254, 259, 261, 279, 280, 281, 348, 349, 355, 356, 452, 513, 524, 587, 763, 785, 810, 811, 870, 909, 914, 998, 999, 1063, 1150, 1155], "scm": [8, 62, 157, 181, 208, 783], "com": [8, 13, 20, 23, 37, 42, 44, 50, 86, 107, 114, 116, 128, 136, 138, 150, 159, 160, 161, 165, 169, 181, 182, 183, 184, 190, 191, 194, 195, 203, 208, 210, 216, 230, 232, 242, 254, 259, 261, 267, 270, 273, 274, 279, 280, 281, 283, 287, 293, 297, 298, 301, 305, 309, 313, 315, 319, 321, 341, 342, 347, 353, 362, 510, 524, 545, 587, 607, 608, 609, 610, 611, 613, 614, 615, 616, 619, 628, 647, 729, 810, 811, 870, 909, 914, 917, 925, 926, 998, 1063, 1121, 1125, 1126, 1127, 1129, 1130, 1131, 1132], "pep": [8, 150, 198, 208, 280, 282, 283, 304, 305], "The": [8, 13, 17, 29, 30, 40, 49, 53, 57, 59, 60, 63, 64, 66, 79, 85, 91, 100, 107, 108, 109, 110, 111, 112, 116, 118, 119, 120, 121, 122, 124, 126, 127, 133, 134, 137, 147, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 166, 169, 170, 171, 174, 175, 177, 178, 182, 183, 184, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 205, 206, 208, 211, 214, 217, 221, 222, 223, 224, 227, 228, 229, 232, 233, 236, 237, 239, 240, 242, 245, 246, 248, 251, 253, 256, 258, 259, 260, 261, 263, 266, 269, 272, 273, 276, 279, 281, 283, 286, 287, 289, 290, 292, 293, 309, 311, 314, 315, 316, 320, 321, 323, 326, 328, 329, 330, 331, 332, 333, 339, 342, 343, 344, 345, 347, 348, 359, 360, 361, 364, 366, 374, 380, 388, 390, 392, 393, 394, 395, 400, 404, 408, 411, 417, 421, 424, 427, 428, 431, 437, 439, 441, 446, 450, 452, 454, 467, 468, 469, 472, 473, 478, 487, 488, 489, 491, 493, 495, 510, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 527, 529, 532, 534, 567, 568, 570, 574, 575, 577, 586, 587, 588, 589, 590, 593, 596, 604, 612, 618, 622, 631, 634, 635, 640, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 668, 669, 672, 676, 678, 683, 688, 694, 707, 708, 717, 718, 719, 723, 732, 739, 740, 744, 748, 757, 760, 761, 763, 764, 771, 773, 783, 785, 788, 804, 810, 812, 815, 833, 835, 837, 838, 839, 840, 843, 844, 847, 848, 851, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 867, 869, 872, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 885, 886, 888, 900, 906, 910, 914, 915, 916, 929, 931, 935, 937, 940, 941, 942, 943, 945, 947, 950, 954, 955, 957, 958, 961, 964, 967, 968, 969, 978, 981, 982, 985, 988, 989, 990, 991, 992, 993, 994, 995, 998, 999, 1000, 1001, 1002, 1003, 1007, 1009, 1010, 1013, 1014, 1017, 1018, 1019, 1021, 1022, 1023, 1030, 1032, 1034, 1036, 1037, 1044, 1048, 1051, 1055, 1056, 1058, 1059, 1060, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1114, 1115, 1117, 1118, 1121, 1122, 1124, 1128, 1130, 1135, 1138, 1141, 1143, 1145, 1148, 1158, 1160, 1161, 1162, 1164, 1171], "zen": [8, 157, 198, 208, 236, 247, 280, 684], "corei": [8, 175, 186, 189, 190, 193, 195, 198, 200, 206, 208, 211, 214, 221, 224, 227, 237, 240, 251, 254, 263, 287, 293, 321, 342, 347, 1108, 1126, 1127, 1129, 1130, 1131, 1132, 1134, 1144], "schaefer": [8, 195, 198, 200, 206, 208], "youtub": [8, 20, 161, 175, 186, 189, 191, 193, 195, 198, 200, 208, 215, 282, 283, 304, 308, 322, 328], "channel": [8, 129, 159, 175, 198, 208, 907, 915, 977], "trainer": [8, 12, 23, 24, 59, 60, 63, 161, 180, 181, 186, 198, 208, 259, 261, 279, 454, 456, 524, 571, 719, 915, 1009, 1016, 1031, 1032, 1107, 1122, 1134, 1135, 1141, 1161, 1166], "hacker": [8, 198, 208, 1166], "schier": [8, 198, 208], "anzahl": [8, 198, 208], "sehr": [8, 23, 37, 162, 163, 177, 181, 187, 189, 197, 198, 202, 208, 239, 360, 1156, 1158, 1165, 1168, 1171, 1172, 1174, 1179], "guten": [8, 177, 187, 189, 198, 208, 242, 246, 360, 1160], "tutori": [8, 161, 175, 186, 189, 194, 198, 206, 208, 214, 215, 217, 224, 227, 237, 240, 263, 293, 305, 321, 328, 342, 347, 870, 916, 1060, 1062, 1126, 1127, 1129, 1130, 1131, 1132, 1134, 1144], "stil": [8, 198, 208], "besser": [8, 23, 162, 173, 197, 198, 208, 218, 1171], "ander": [8, 177, 187, 198, 208, 218, 226, 239, 337, 342, 347, 351, 360, 836, 1156, 1157, 1160, 1165, 1168, 1173, 1177, 1178], "auswahl": [8, 198, 208], "einleitung": [9, 209], "datatyp": [9, 29, 91, 147, 186, 190, 193, 198, 199, 200, 203, 205, 209, 211, 212, 217, 221, 222, 224, 225, 227, 228, 230, 231, 232, 233, 235, 237, 238, 243, 244, 245, 247, 248, 250, 253, 263, 265, 268, 275, 283, 285, 289, 295, 305, 307, 309, 311, 317, 323, 328, 329, 330, 331, 332, 333, 342, 347, 381, 388, 573, 602, 670, 763, 977, 1009, 1014, 1016, 1017, 1018, 1019, 1023, 1031, 1042, 1051, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1118, 1121, 1122, 1128, 1135, 1171], "number": [9, 24, 27, 29, 36, 53, 57, 59, 60, 63, 64, 69, 79, 81, 83, 85, 86, 111, 112, 114, 117, 121, 123, 133, 144, 147, 153, 155, 156, 159, 161, 164, 165, 169, 172, 174, 177, 183, 186, 190, 193, 196, 197, 198, 200, 205, 206, 209, 211, 212, 214, 217, 221, 223, 224, 226, 227, 229, 230, 233, 235, 236, 237, 239, 242, 243, 245, 247, 248, 250, 251, 252, 254, 259, 261, 263, 266, 267, 273, 274, 279, 280, 281, 282, 283, 284, 286, 287, 288, 292, 293, 296, 304, 305, 308, 309, 310, 312, 314, 315, 316, 320, 321, 322, 326, 328, 333, 342, 349, 360, 365, 367, 369, 371, 373, 374, 375, 381, 385, 387, 388, 399, 410, 426, 430, 435, 439, 443, 449, 451, 461, 479, 480, 488, 513, 521, 523, 526, 528, 539, 545, 572, 592, 600, 603, 610, 626, 651, 660, 663, 672, 684, 710, 717, 719, 761, 763, 769, 771, 778, 781, 790, 792, 804, 806, 812, 820, 824, 835, 843, 850, 876, 895, 897, 899, 901, 903, 915, 926, 927, 930, 934, 935, 936, 941, 942, 943, 944, 963, 968, 969, 977, 978, 982, 984, 987, 1007, 1008, 1010, 1012, 1013, 1014, 1024, 1036, 1037, 1038, 1043, 1044, 1054, 1055, 1056, 1058, 1059, 1067, 1070, 1071, 1074, 1077, 1078, 1080, 1081, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1102, 1106, 1107, 1108, 1111, 1116, 1134, 1136, 1141, 1154, 1163, 1166, 1171], "integ": [9, 38, 76, 77, 89, 172, 174, 176, 191, 192, 193, 195, 199, 203, 209, 212, 216, 223, 226, 227, 229, 232, 235, 238, 239, 240, 242, 247, 250, 256, 268, 275, 288, 295, 307, 311, 317, 323, 342, 365, 366, 371, 381, 384, 386, 387, 388, 399, 410, 412, 414, 415, 426, 427, 431, 437, 441, 446, 447, 488, 489, 492, 510, 545, 573, 599, 602, 650, 664, 668, 669, 671, 707, 710, 736, 760, 762, 763, 769, 944, 954, 955, 956, 963, 1003, 1016, 1019, 1047, 1053, 1059, 1085, 1129, 1131, 1158, 1162, 1177], "string": [9, 29, 42, 50, 58, 91, 98, 107, 121, 122, 151, 156, 181, 191, 192, 193, 195, 198, 199, 202, 205, 209, 211, 212, 214, 215, 217, 221, 222, 224, 225, 227, 228, 230, 231, 232, 233, 235, 237, 238, 241, 243, 244, 245, 247, 248, 250, 253, 256, 258, 259, 261, 263, 265, 266, 268, 272, 273, 275, 276, 278, 286, 287, 289, 292, 293, 295, 304, 305, 307, 308, 309, 311, 314, 315, 317, 318, 319, 320, 321, 323, 326, 327, 328, 329, 330, 331, 332, 333, 338, 342, 347, 353, 366, 369, 373, 380, 389, 395, 404, 410, 411, 417, 421, 424, 428, 433, 437, 441, 446, 447, 451, 459, 470, 474, 476, 491, 493, 494, 495, 498, 500, 503, 504, 505, 507, 508, 509, 510, 526, 527, 528, 533, 544, 545, 553, 559, 562, 568, 570, 573, 574, 577, 592, 594, 611, 614, 615, 616, 620, 623, 624, 625, 626, 627, 628, 631, 635, 646, 648, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 667, 669, 670, 671, 673, 675, 676, 680, 695, 699, 701, 702, 703, 704, 707, 709, 711, 712, 716, 726, 727, 728, 729, 731, 743, 760, 761, 762, 763, 842, 933, 944, 948, 951, 955, 963, 968, 977, 981, 1008, 1009, 1012, 1020, 1029, 1031, 1036, 1044, 1058, 1065, 1066, 1067, 1072, 1077, 1080, 1081, 1082, 1085, 1088, 1091, 1092, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1119, 1120, 1121, 1122, 1124, 1127, 1158, 1171], "compound": [9, 29, 91, 147, 190, 193, 198, 199, 200, 209, 211, 217, 221, 222, 224, 225, 227, 228, 230, 231, 233, 235, 237, 238, 243, 244, 245, 247, 248, 250, 251, 253, 265, 266, 273, 276, 283, 285, 286, 287, 289, 292, 293, 295, 304, 305, 307, 308, 309, 311, 314, 315, 320, 321, 323, 326, 328, 329, 330, 331, 332, 333, 342, 365, 396, 415, 763, 1009, 1016, 1017, 1018, 1019, 1023, 1031, 1064, 1065, 1066, 1067, 1075, 1076, 1077, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1118, 1121, 1122, 1128, 1135, 1171], "list": [9, 27, 29, 37, 64, 91, 100, 116, 138, 147, 150, 151, 154, 161, 165, 176, 181, 183, 186, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 202, 205, 206, 209, 211, 212, 214, 217, 221, 222, 224, 225, 227, 228, 230, 231, 232, 233, 235, 237, 238, 239, 244, 245, 247, 248, 250, 251, 253, 255, 259, 260, 263, 265, 266, 268, 269, 270, 273, 275, 276, 279, 280, 281, 285, 286, 287, 289, 290, 291, 292, 293, 295, 304, 305, 307, 308, 309, 310, 314, 315, 317, 320, 321, 323, 326, 327, 334, 337, 339, 342, 346, 347, 348, 360, 418, 424, 428, 429, 437, 441, 443, 445, 446, 447, 451, 452, 455, 464, 471, 473, 474, 513, 515, 523, 526, 559, 561, 563, 567, 571, 572, 577, 602, 618, 631, 635, 654, 664, 669, 672, 707, 715, 721, 726, 739, 740, 760, 761, 762, 763, 764, 772, 776, 777, 780, 787, 788, 791, 801, 812, 814, 818, 819, 825, 828, 831, 836, 837, 838, 839, 840, 843, 844, 850, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 874, 877, 878, 881, 882, 884, 885, 886, 887, 888, 890, 898, 906, 915, 935, 937, 939, 945, 947, 955, 957, 961, 964, 967, 969, 984, 986, 1001, 1005, 1008, 1009, 1012, 1013, 1014, 1027, 1029, 1031, 1032, 1038, 1039, 1044, 1045, 1046, 1047, 1050, 1056, 1058, 1059, 1060, 1065, 1067, 1077, 1080, 1081, 1082, 1083, 1087, 1088, 1089, 1090, 1091, 1092, 1098, 1100, 1103, 1105, 1106, 1107, 1108, 1113, 1116, 1126, 1129, 1133, 1143, 1148, 1155, 1158, 1171, 1172], "arrai": [9, 98, 109, 116, 177, 198, 199, 204, 209, 211, 215, 216, 218, 224, 232, 237, 242, 251, 254, 258, 259, 279, 287, 293, 365, 374, 380, 384, 395, 404, 411, 421, 424, 428, 430, 432, 433, 436, 437, 441, 446, 447, 525, 528, 551, 559, 562, 600, 601, 603, 605, 607, 610, 611, 616, 620, 632, 652, 659, 660, 661, 662, 663, 664, 667, 669, 707, 715, 730, 747, 760, 762, 763, 781, 842, 847, 963, 1040, 1044, 1056, 1108, 1111, 1113, 1136, 1171], "javascript": [9, 23, 152, 187, 197, 209, 218, 242, 247, 1003, 1049], "std": [9, 42, 50, 58, 107, 109, 110, 111, 112, 113, 116, 121, 122, 125, 165, 181, 182, 209, 257, 270, 279, 281, 453, 454, 459, 467, 470, 472, 474, 476, 481, 488, 491, 493, 494, 495, 498, 499, 500, 503, 504, 505, 506, 507, 508, 509, 510, 513, 515, 516, 521, 523, 525, 526, 527, 529, 530, 531, 532, 543, 545, 553, 563, 567, 570, 571, 573, 578, 579, 580, 584, 592, 594, 598, 599, 600, 601, 602, 607, 608, 609, 610, 611, 613, 614, 615, 619, 620, 622, 625, 626, 627, 628, 631, 632, 635, 636, 638, 639, 642, 644, 645, 646, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 664, 669, 671, 674, 675, 676, 677, 678, 680, 681, 682, 684, 685, 686, 687, 689, 690, 691, 692, 693, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 707, 709, 711, 712, 714, 719, 722, 725, 729, 732, 734, 740, 744, 747, 748, 749, 751, 757, 759, 760, 762, 763, 914, 948, 951, 955, 963, 965, 977, 981, 1113, 1148, 1153, 1161], "vector": [9, 13, 107, 109, 111, 112, 116, 121, 122, 125, 181, 209, 215, 232, 258, 259, 272, 278, 279, 281, 319, 472, 474, 498, 499, 515, 516, 523, 529, 530, 531, 532, 543, 561, 563, 567, 571, 573, 578, 583, 607, 609, 610, 611, 613, 616, 618, 631, 635, 649, 651, 652, 659, 660, 661, 662, 664, 670, 671, 675, 680, 681, 682, 689, 690, 691, 692, 693, 695, 715, 716, 719, 748, 757, 759, 763, 981, 1037, 1115, 1132, 1153], "dictionari": [9, 29, 64, 91, 176, 186, 191, 192, 193, 195, 198, 199, 200, 203, 205, 209, 211, 212, 217, 221, 222, 224, 225, 227, 228, 230, 231, 233, 235, 237, 238, 241, 244, 245, 247, 248, 250, 251, 253, 256, 263, 265, 266, 268, 273, 275, 276, 280, 282, 283, 285, 286, 287, 289, 292, 293, 295, 298, 301, 304, 305, 307, 308, 309, 311, 314, 315, 317, 320, 321, 323, 326, 342, 347, 350, 716, 763, 1009, 1012, 1016, 1017, 1018, 1019, 1022, 1023, 1027, 1031, 1065, 1067, 1075, 1080, 1085, 1086, 1091, 1094, 1095, 1096, 1098, 1100, 1101, 1106, 1108, 1116, 1126, 1133, 1135, 1171], "valu": [9, 58, 60, 85, 109, 116, 117, 121, 122, 128, 133, 134, 154, 156, 158, 169, 171, 173, 174, 175, 187, 191, 193, 195, 197, 202, 204, 209, 210, 211, 213, 214, 215, 216, 218, 219, 221, 223, 224, 226, 227, 229, 230, 232, 234, 236, 237, 239, 242, 246, 249, 251, 252, 263, 264, 267, 270, 272, 274, 284, 287, 288, 293, 294, 306, 310, 316, 319, 321, 323, 328, 336, 342, 364, 369, 371, 373, 374, 384, 387, 388, 389, 397, 399, 400, 408, 410, 412, 413, 418, 429, 433, 435, 437, 441, 446, 447, 451, 454, 459, 461, 464, 469, 472, 474, 488, 489, 491, 494, 498, 500, 503, 505, 506, 508, 519, 520, 521, 523, 526, 533, 545, 562, 571, 572, 573, 576, 582, 585, 623, 625, 627, 628, 669, 671, 672, 678, 680, 689, 695, 698, 701, 702, 703, 707, 716, 727, 741, 757, 760, 762, 763, 766, 769, 788, 790, 792, 794, 810, 820, 842, 855, 906, 915, 936, 944, 946, 947, 949, 950, 951, 954, 957, 963, 966, 977, 978, 981, 982, 1001, 1003, 1005, 1008, 1012, 1016, 1018, 1020, 1027, 1038, 1039, 1040, 1048, 1050, 1053, 1055, 1056, 1060, 1065, 1068, 1073, 1075, 1078, 1085, 1087, 1108, 1111, 1113, 1116, 1119, 1120, 1126, 1127, 1130, 1131, 1132, 1148], "map": [9, 32, 34, 42, 59, 63, 107, 109, 110, 121, 122, 156, 163, 181, 187, 201, 203, 205, 209, 211, 212, 214, 215, 218, 226, 227, 229, 244, 258, 259, 261, 267, 279, 281, 288, 307, 318, 321, 322, 342, 445, 470, 474, 503, 507, 508, 509, 515, 526, 532, 561, 563, 567, 622, 625, 626, 627, 628, 631, 635, 664, 667, 671, 675, 681, 707, 726, 727, 728, 730, 762, 763, 794, 806, 968, 977, 978, 1026, 1030, 1039, 1040, 1059, 1115, 1165, 1175], "mathematisch": [9, 209, 267], "mengen": [9, 198, 199, 209, 1171], "while": [9, 13, 29, 53, 54, 64, 91, 113, 147, 158, 160, 161, 169, 175, 186, 190, 191, 193, 194, 195, 196, 198, 199, 200, 202, 204, 205, 206, 209, 210, 211, 213, 214, 217, 218, 219, 221, 223, 224, 227, 228, 229, 232, 233, 235, 237, 238, 240, 241, 243, 244, 245, 246, 248, 250, 251, 253, 263, 266, 267, 273, 275, 276, 280, 282, 286, 287, 288, 292, 293, 294, 304, 305, 306, 308, 314, 315, 317, 320, 321, 323, 326, 328, 329, 330, 331, 332, 333, 334, 342, 345, 347, 365, 367, 371, 373, 375, 382, 387, 389, 403, 404, 410, 411, 415, 417, 421, 424, 425, 428, 430, 432, 437, 439, 441, 446, 447, 457, 469, 474, 488, 495, 513, 562, 598, 602, 603, 606, 608, 610, 613, 628, 651, 657, 667, 669, 680, 695, 696, 697, 703, 707, 728, 739, 741, 757, 760, 762, 763, 787, 790, 798, 800, 810, 812, 818, 819, 825, 828, 831, 843, 847, 854, 906, 907, 914, 915, 927, 932, 933, 934, 935, 942, 951, 957, 962, 963, 966, 968, 974, 977, 981, 996, 1001, 1009, 1010, 1011, 1012, 1016, 1019, 1031, 1032, 1036, 1041, 1046, 1058, 1064, 1065, 1066, 1067, 1071, 1077, 1079, 1080, 1081, 1083, 1087, 1088, 1089, 1090, 1091, 1092, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1114, 1115, 1118, 1122, 1135, 1158, 1162, 1164, 1166, 1171], "function": [9, 21, 29, 38, 50, 59, 63, 64, 79, 81, 83, 91, 98, 111, 112, 116, 117, 134, 147, 151, 154, 156, 165, 173, 186, 187, 189, 190, 191, 193, 194, 195, 196, 198, 199, 200, 202, 205, 206, 209, 211, 212, 214, 215, 217, 221, 222, 224, 225, 227, 228, 229, 230, 232, 233, 235, 237, 238, 239, 240, 243, 244, 245, 247, 248, 249, 253, 256, 257, 264, 266, 268, 270, 272, 273, 275, 276, 279, 281, 282, 283, 284, 286, 287, 289, 292, 293, 294, 300, 307, 309, 310, 317, 323, 327, 337, 338, 344, 345, 347, 360, 364, 365, 371, 374, 378, 379, 380, 385, 390, 394, 395, 403, 404, 405, 406, 408, 410, 415, 417, 418, 421, 422, 423, 424, 426, 428, 429, 430, 432, 437, 439, 441, 443, 446, 447, 450, 458, 464, 472, 477, 489, 510, 514, 515, 526, 529, 530, 531, 532, 534, 543, 556, 562, 567, 571, 574, 577, 579, 580, 581, 582, 588, 593, 596, 598, 612, 618, 622, 631, 634, 635, 642, 645, 648, 649, 650, 652, 653, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 669, 671, 672, 675, 676, 684, 687, 693, 695, 704, 705, 706, 707, 709, 711, 712, 717, 723, 727, 729, 730, 740, 747, 749, 751, 752, 753, 760, 761, 762, 763, 774, 777, 780, 781, 787, 791, 794, 798, 801, 804, 810, 812, 814, 819, 825, 826, 828, 829, 830, 831, 840, 843, 844, 906, 914, 927, 929, 935, 936, 937, 944, 945, 947, 952, 953, 954, 960, 961, 963, 964, 967, 969, 982, 984, 992, 1002, 1009, 1012, 1013, 1014, 1015, 1023, 1031, 1033, 1036, 1037, 1041, 1043, 1064, 1065, 1066, 1067, 1070, 1073, 1074, 1077, 1078, 1079, 1080, 1085, 1088, 1089, 1091, 1092, 1093, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1113, 1118, 1124, 1137, 1141, 1153, 1161, 1162, 1163, 1171], "xx": [10, 223, 254, 288, 294, 310, 316], "yy": 10, "kur": [11, 23, 172, 174, 177, 189, 360, 1156, 1157, 1158, 1159, 1160, 1165, 1167, 1168, 1174, 1175, 1177], "fand": [11, 189, 360], "team": [11, 114, 117, 134, 161, 166, 169, 170, 181, 189, 190, 191, 206, 215, 240, 282, 360, 849, 855, 862, 864, 1010, 1107, 1155, 1163], "statt": [11, 23, 189, 360, 1172, 1173, 1179], "wurd": [11, 163, 177, 181, 187, 189, 198, 342, 347, 360, 1160, 1171, 1172, 1178], "\u00fcber": [11, 23, 162, 163, 168, 172, 173, 177, 181, 189, 198, 199, 203, 212, 217, 243, 343, 360, 1155, 1165, 1171, 1172, 1177, 1178], "meinen": [11, 23, 189, 217, 233, 245, 360], "partner": [11, 23, 189, 360, 1155], "durat": [12, 27, 159, 169, 422, 456, 526, 737, 741, 742, 1009, 1031, 1107, 1135, 1163, 1164, 1166, 1176], "each": [12, 40, 64, 77, 107, 111, 112, 122, 125, 154, 155, 156, 169, 175, 193, 194, 206, 223, 226, 229, 239, 242, 246, 279, 281, 288, 327, 333, 339, 342, 347, 415, 440, 443, 445, 469, 477, 510, 524, 525, 581, 667, 742, 748, 761, 798, 806, 810, 837, 843, 864, 868, 870, 914, 915, 916, 954, 958, 966, 1000, 1012, 1015, 1020, 1026, 1086, 1107, 1113, 1115, 1116, 1117, 1132, 1136, 1166, 1176], "about": [12, 23, 29, 30, 39, 42, 43, 44, 45, 46, 49, 64, 66, 69, 76, 81, 84, 85, 91, 98, 114, 116, 134, 142, 147, 148, 150, 154, 155, 156, 158, 161, 169, 178, 182, 183, 186, 190, 191, 192, 193, 194, 195, 198, 205, 206, 211, 214, 215, 216, 217, 221, 223, 224, 227, 230, 231, 232, 233, 235, 237, 239, 240, 242, 243, 245, 247, 248, 251, 260, 263, 265, 266, 268, 269, 270, 276, 280, 281, 286, 287, 290, 292, 293, 295, 304, 305, 308, 309, 314, 315, 317, 319, 320, 323, 326, 328, 329, 330, 331, 332, 333, 342, 344, 347, 353, 383, 388, 397, 399, 427, 430, 431, 433, 439, 443, 445, 449, 463, 469, 562, 571, 572, 595, 602, 668, 677, 681, 682, 712, 716, 721, 730, 731, 761, 763, 779, 781, 810, 820, 829, 837, 838, 856, 873, 907, 914, 915, 916, 927, 931, 937, 952, 969, 977, 1003, 1009, 1010, 1012, 1019, 1020, 1027, 1031, 1039, 1050, 1058, 1065, 1066, 1067, 1077, 1080, 1088, 1089, 1091, 1092, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1115, 1121, 1122, 1123, 1124, 1128, 1136, 1141, 1150, 1163, 1164, 1171, 1176], "book": [12, 29, 32, 150, 154, 159, 169, 170, 181, 190, 215, 237, 273, 282, 283, 360, 450, 456, 870, 1009, 1031, 1107, 1122, 1135, 1162, 1164, 1166, 1176], "separ": [12, 38, 79, 104, 105, 116, 154, 181, 183, 193, 213, 226, 232, 242, 246, 249, 252, 267, 270, 273, 274, 276, 284, 288, 296, 310, 312, 316, 322, 372, 410, 431, 451, 454, 461, 473, 477, 487, 515, 516, 517, 518, 519, 520, 521, 522, 525, 545, 562, 567, 592, 713, 741, 761, 763, 778, 779, 812, 846, 850, 855, 901, 903, 906, 916, 952, 968, 984, 986, 989, 990, 991, 992, 994, 1002, 1007, 1064, 1081, 1086, 1107, 1116, 1148, 1158, 1163, 1176], "requir": [12, 13, 27, 37, 39, 42, 62, 90, 109, 114, 116, 146, 150, 154, 155, 156, 159, 161, 165, 174, 182, 184, 186, 190, 194, 202, 213, 216, 227, 230, 232, 234, 239, 240, 254, 270, 279, 281, 282, 305, 353, 364, 397, 427, 429, 452, 461, 464, 472, 492, 494, 514, 523, 526, 545, 594, 607, 623, 660, 671, 677, 678, 684, 687, 692, 693, 717, 724, 753, 754, 907, 915, 916, 927, 932, 968, 970, 977, 996, 1001, 1009, 1022, 1031, 1032, 1050, 1059, 1060, 1063, 1116, 1122, 1135, 1136, 1141, 1143, 1144, 1150, 1162, 1164, 1166, 1176, 1179], "particip": [12, 159, 161, 183, 186, 270, 301, 510, 909, 1032, 1046, 1066, 1176], "should": [12, 37, 43, 45, 55, 57, 78, 81, 114, 117, 118, 121, 133, 134, 150, 155, 156, 159, 161, 165, 169, 176, 182, 186, 190, 215, 216, 230, 236, 242, 246, 270, 305, 308, 310, 328, 333, 348, 349, 363, 388, 410, 425, 435, 439, 449, 454, 461, 467, 472, 477, 478, 480, 481, 489, 526, 570, 577, 579, 675, 678, 680, 684, 695, 739, 769, 788, 800, 802, 806, 810, 835, 854, 870, 877, 882, 914, 915, 916, 923, 942, 958, 969, 1007, 1016, 1020, 1028, 1039, 1073, 1077, 1086, 1114, 1124, 1136, 1141, 1142, 1176], "fluent": [12, 293, 343, 344, 1108, 1176], "target": [12, 17, 40, 64, 109, 155, 157, 165, 206, 215, 297, 313, 344, 433, 436, 452, 455, 456, 462, 465, 478, 582, 763, 783, 785, 790, 810, 872, 937, 962, 986, 987, 996, 998, 1005, 1009, 1016, 1018, 1031, 1115, 1122, 1135, 1143, 1166], "audienc": [12, 154, 156, 186, 191, 308, 1009, 1031, 1063, 1122, 1135, 1161, 1166], "english": [12, 29, 107, 147, 174, 193, 200, 211, 221, 224, 233, 237, 243, 245, 248, 250, 251, 266, 273, 278, 286, 287, 292, 293, 305, 314, 315, 320, 321, 326, 340, 341, 342, 347, 456, 763, 1009, 1031, 1067, 1077, 1080, 1081, 1083, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1106, 1107, 1121, 1122, 1135], "german": [12, 14, 456, 1009, 1031, 1107, 1121, 1122, 1124, 1135], "see": [12, 13, 23, 27, 29, 31, 42, 43, 45, 46, 50, 53, 55, 57, 64, 66, 78, 79, 86, 90, 100, 107, 113, 114, 116, 117, 119, 121, 122, 123, 124, 125, 127, 129, 132, 133, 134, 139, 140, 142, 147, 150, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 169, 171, 174, 175, 176, 184, 186, 190, 191, 200, 205, 206, 210, 213, 215, 216, 221, 223, 226, 227, 229, 230, 232, 233, 239, 242, 246, 251, 254, 263, 267, 270, 272, 276, 278, 279, 280, 281, 283, 287, 288, 296, 297, 305, 309, 312, 313, 324, 328, 333, 342, 345, 346, 348, 353, 356, 361, 364, 373, 374, 375, 377, 383, 400, 413, 419, 422, 432, 438, 451, 452, 457, 461, 462, 463, 464, 468, 469, 472, 473, 474, 482, 483, 484, 485, 486, 490, 493, 494, 510, 513, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 533, 534, 543, 544, 545, 553, 559, 562, 567, 569, 570, 571, 572, 577, 579, 580, 585, 586, 588, 603, 607, 620, 634, 638, 639, 641, 642, 654, 658, 660, 661, 663, 667, 670, 675, 677, 678, 679, 680, 682, 689, 695, 709, 710, 712, 715, 716, 717, 719, 721, 725, 726, 727, 728, 729, 730, 739, 741, 747, 749, 751, 752, 753, 754, 758, 761, 764, 766, 769, 771, 773, 774, 776, 778, 779, 781, 783, 785, 788, 790, 796, 798, 800, 802, 804, 806, 810, 813, 817, 818, 824, 826, 836, 837, 838, 842, 845, 848, 849, 866, 870, 871, 873, 874, 876, 879, 881, 897, 907, 914, 915, 916, 937, 940, 942, 943, 944, 948, 951, 953, 955, 958, 965, 977, 981, 984, 985, 986, 987, 992, 994, 997, 998, 999, 1000, 1001, 1002, 1005, 1006, 1007, 1008, 1009, 1012, 1020, 1021, 1024, 1025, 1027, 1030, 1032, 1034, 1037, 1045, 1048, 1049, 1050, 1060, 1063, 1066, 1075, 1079, 1082, 1093, 1104, 1105, 1111, 1113, 1116, 1121, 1122, 1124, 1126, 1129, 1130, 1131, 1135, 1138, 1141, 1146, 1148, 1153, 1163, 1164, 1166, 1176], "also": [12, 13, 23, 27, 31, 57, 64, 66, 113, 114, 117, 119, 122, 124, 125, 127, 129, 132, 133, 150, 155, 156, 158, 159, 161, 162, 164, 165, 166, 173, 175, 176, 177, 178, 181, 183, 184, 186, 187, 190, 196, 198, 216, 223, 229, 239, 240, 242, 246, 252, 258, 259, 261, 270, 272, 279, 280, 281, 287, 288, 297, 305, 309, 313, 328, 360, 451, 452, 457, 462, 469, 478, 488, 491, 493, 494, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 533, 534, 544, 569, 570, 571, 572, 577, 579, 585, 603, 620, 623, 638, 639, 641, 667, 675, 678, 679, 680, 682, 695, 706, 709, 712, 715, 716, 717, 719, 721, 725, 727, 730, 731, 739, 741, 747, 752, 753, 754, 761, 800, 810, 815, 836, 848, 854, 855, 870, 874, 876, 879, 881, 901, 907, 917, 926, 927, 940, 944, 948, 955, 965, 986, 987, 994, 999, 1001, 1003, 1005, 1006, 1007, 1009, 1012, 1020, 1024, 1030, 1032, 1036, 1039, 1049, 1050, 1053, 1063, 1075, 1079, 1082, 1093, 1113, 1114, 1122, 1126, 1129, 1130, 1131, 1135, 1138, 1141, 1163, 1165, 1171, 1172, 1176], "train": [12, 13, 14, 23, 29, 30, 32, 37, 60, 66, 107, 137, 149, 150, 155, 159, 166, 167, 169, 177, 178, 181, 182, 183, 186, 189, 213, 223, 229, 239, 242, 272, 279, 281, 284, 296, 312, 322, 350, 360, 452, 454, 455, 456, 457, 458, 460, 461, 463, 465, 467, 468, 469, 470, 471, 472, 474, 476, 479, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 523, 525, 528, 529, 530, 531, 533, 535, 536, 537, 538, 540, 541, 542, 543, 544, 567, 647, 727, 761, 764, 766, 769, 774, 779, 785, 788, 796, 917, 923, 925, 926, 927, 948, 951, 974, 977, 981, 1008, 1009, 1011, 1031, 1032, 1060, 1063, 1066, 1110, 1111, 1114, 1115, 1122, 1135, 1146, 1150, 1155, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179], "sourc": [13, 23, 28, 30, 39, 62, 66, 69, 74, 87, 111, 112, 116, 134, 153, 154, 155, 156, 159, 160, 161, 165, 169, 171, 172, 174, 175, 182, 195, 200, 205, 223, 229, 237, 239, 242, 246, 251, 259, 261, 263, 266, 267, 270, 291, 298, 405, 406, 409, 444, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 473, 524, 527, 528, 642, 675, 678, 684, 689, 695, 725, 778, 808, 811, 822, 854, 870, 871, 903, 944, 984, 985, 987, 988, 990, 994, 996, 998, 999, 1000, 1001, 1002, 1039, 1095, 1104, 1143, 1150, 1156, 1166, 1173], "under": [13, 21, 35, 55, 125, 129, 133, 153, 154, 156, 161, 182, 193, 195, 305, 360, 474, 489, 526, 846, 847, 914, 915, 916, 917, 918, 919, 926, 927, 969, 984, 1008, 1015, 1022, 1056, 1141], "why": [13, 24, 28, 45, 50, 66, 67, 70, 116, 134, 150, 154, 155, 160, 166, 186, 190, 191, 193, 195, 206, 215, 235, 273, 276, 282, 283, 304, 318, 342, 345, 346, 349, 363, 375, 381, 388, 391, 409, 420, 425, 426, 431, 435, 438, 445, 450, 488, 511, 570, 585, 603, 616, 642, 645, 661, 667, 668, 684, 715, 731, 734, 748, 759, 778, 790, 806, 810, 841, 847, 850, 907, 960, 963, 981, 996, 998, 1006, 1007, 1010, 1056, 1058, 1108, 1113, 1123, 1131], "appli": [13, 77, 84, 151, 156, 195, 213, 272, 278, 305, 316, 392, 427, 433, 451, 582, 682, 717, 783, 810, 850, 853, 870, 914, 915, 940, 1001, 1127], "websit": [13, 23, 155, 169, 1137, 1150], "contain": [13, 17, 29, 35, 38, 62, 107, 108, 109, 111, 112, 114, 116, 150, 151, 157, 160, 165, 169, 174, 176, 181, 182, 184, 186, 187, 190, 193, 195, 213, 215, 216, 223, 229, 239, 240, 242, 246, 253, 254, 257, 258, 259, 272, 279, 288, 305, 322, 327, 328, 337, 344, 345, 351, 353, 390, 409, 423, 443, 445, 451, 453, 454, 458, 472, 488, 510, 513, 515, 524, 525, 526, 532, 533, 534, 567, 568, 570, 578, 587, 604, 607, 620, 631, 635, 649, 658, 663, 664, 670, 675, 715, 727, 730, 757, 758, 759, 761, 763, 766, 771, 779, 781, 783, 804, 806, 810, 830, 837, 838, 841, 850, 852, 875, 876, 877, 882, 889, 914, 915, 916, 923, 944, 952, 953, 968, 978, 984, 987, 992, 996, 1001, 1008, 1010, 1015, 1032, 1054, 1057, 1063, 1065, 1077, 1086, 1090, 1105, 1108, 1110, 1114, 1116, 1119, 1121, 1126, 1136, 1137, 1141, 1147, 1148, 1160, 1161], "give": [13, 27, 40, 53, 59, 63, 111, 112, 121, 147, 151, 153, 154, 156, 161, 164, 175, 178, 182, 183, 190, 195, 206, 214, 246, 251, 263, 279, 281, 309, 361, 375, 376, 391, 407, 410, 418, 443, 449, 451, 454, 469, 521, 523, 539, 556, 592, 607, 653, 661, 684, 713, 810, 836, 843, 861, 863, 915, 916, 935, 936, 948, 951, 970, 972, 977, 978, 984, 987, 996, 1005, 1008, 1031, 1048, 1060, 1108, 1112, 1113, 1136, 1141, 1143, 1161, 1164, 1166], "structur": [13, 29, 66, 79, 90, 109, 121, 154, 169, 191, 205, 232, 233, 240, 242, 243, 245, 248, 251, 254, 257, 266, 273, 276, 283, 287, 293, 297, 298, 301, 305, 309, 313, 315, 319, 321, 342, 346, 348, 350, 365, 375, 383, 388, 417, 419, 423, 424, 428, 437, 440, 441, 446, 447, 451, 452, 456, 464, 471, 489, 514, 524, 543, 592, 625, 658, 667, 669, 707, 760, 762, 763, 798, 800, 804, 808, 810, 830, 866, 897, 933, 939, 955, 960, 978, 1048, 1050, 1090, 1096, 1133, 1135, 1142, 1149, 1161], "much": [13, 27, 35, 38, 60, 64, 81, 121, 125, 127, 132, 153, 154, 155, 156, 161, 164, 169, 178, 184, 186, 190, 191, 192, 194, 216, 227, 229, 230, 232, 234, 240, 254, 255, 258, 259, 261, 273, 276, 282, 283, 304, 305, 308, 318, 319, 345, 377, 388, 399, 435, 439, 449, 464, 489, 568, 578, 584, 603, 624, 644, 667, 668, 677, 678, 682, 695, 707, 708, 709, 713, 715, 717, 727, 731, 751, 752, 754, 762, 763, 766, 781, 788, 796, 798, 804, 806, 810, 849, 850, 899, 907, 910, 913, 915, 927, 969, 978, 981, 982, 984, 986, 996, 1003, 1006, 1007, 1020, 1021, 1026, 1027, 1030, 1039, 1056, 1108, 1114, 1115, 1141, 1143, 1161], "like": [13, 21, 27, 28, 30, 39, 43, 45, 55, 59, 63, 64, 66, 78, 79, 113, 116, 117, 121, 122, 124, 127, 129, 132, 134, 147, 153, 154, 155, 156, 158, 159, 161, 164, 165, 169, 174, 177, 178, 182, 183, 184, 186, 190, 192, 195, 205, 206, 213, 215, 216, 223, 229, 230, 232, 233, 239, 242, 255, 257, 259, 261, 267, 270, 272, 273, 276, 279, 281, 305, 308, 328, 333, 345, 353, 374, 377, 381, 403, 405, 410, 415, 427, 431, 439, 442, 449, 455, 459, 461, 464, 467, 468, 469, 489, 513, 523, 524, 525, 526, 527, 539, 545, 553, 556, 562, 571, 574, 577, 581, 582, 583, 585, 606, 623, 632, 639, 641, 644, 647, 648, 657, 658, 666, 667, 670, 671, 677, 678, 695, 713, 715, 716, 726, 727, 730, 731, 737, 752, 754, 759, 761, 764, 766, 768, 771, 779, 781, 783, 788, 794, 800, 802, 804, 806, 810, 815, 823, 826, 830, 838, 841, 842, 846, 847, 849, 852, 870, 872, 875, 877, 882, 899, 907, 908, 910, 914, 915, 916, 917, 926, 927, 931, 935, 937, 940, 944, 950, 952, 953, 971, 978, 982, 984, 986, 987, 1000, 1003, 1005, 1007, 1010, 1012, 1020, 1025, 1030, 1032, 1034, 1036, 1038, 1040, 1044, 1048, 1050, 1053, 1054, 1057, 1060, 1062, 1065, 1073, 1076, 1086, 1087, 1090, 1096, 1097, 1098, 1099, 1100, 1102, 1107, 1110, 1113, 1115, 1116, 1124, 1126, 1127, 1132, 1141, 1142, 1143, 1148, 1150, 1161, 1166], "topic": [13, 16, 27, 28, 29, 59, 63, 70, 79, 91, 98, 107, 116, 147, 151, 156, 160, 161, 174, 178, 191, 194, 195, 196, 198, 206, 211, 221, 224, 230, 240, 242, 243, 258, 259, 263, 281, 283, 287, 309, 328, 329, 330, 331, 333, 341, 342, 347, 348, 353, 355, 356, 359, 361, 545, 586, 588, 647, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 761, 810, 812, 822, 833, 840, 842, 844, 851, 856, 860, 862, 864, 865, 890, 900, 913, 915, 918, 919, 921, 937, 987, 996, 997, 1001, 1009, 1014, 1031, 1032, 1036, 1063, 1065, 1066, 1067, 1077, 1080, 1088, 1091, 1092, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1115, 1121, 1135, 1138, 1141, 1145, 1163, 1164, 1171], "other": [13, 27, 29, 33, 39, 40, 51, 53, 59, 63, 64, 79, 81, 83, 111, 112, 114, 133, 136, 142, 154, 155, 156, 157, 158, 161, 165, 169, 178, 182, 186, 190, 191, 193, 194, 195, 206, 214, 223, 229, 230, 239, 242, 246, 267, 288, 295, 296, 305, 308, 312, 328, 345, 349, 353, 373, 379, 388, 397, 415, 418, 429, 445, 449, 452, 454, 460, 461, 464, 465, 466, 472, 553, 568, 570, 571, 577, 579, 580, 583, 584, 585, 595, 623, 645, 668, 677, 678, 709, 713, 725, 727, 729, 731, 742, 743, 748, 761, 763, 781, 800, 802, 836, 843, 846, 847, 863, 868, 870, 872, 892, 909, 914, 915, 916, 919, 923, 926, 935, 936, 942, 943, 955, 960, 963, 969, 978, 982, 984, 986, 996, 1003, 1005, 1007, 1016, 1019, 1020, 1021, 1024, 1027, 1030, 1034, 1036, 1037, 1038, 1039, 1045, 1046, 1050, 1052, 1054, 1056, 1057, 1070, 1086, 1113, 1117, 1120, 1122, 1124, 1141, 1153, 1161, 1163, 1164, 1166, 1176], "exampl": [13, 17, 24, 29, 39, 40, 66, 79, 88, 114, 116, 117, 134, 147, 148, 150, 153, 154, 155, 156, 161, 164, 165, 169, 173, 174, 175, 178, 182, 186, 190, 192, 194, 205, 213, 215, 219, 223, 226, 229, 230, 232, 238, 239, 240, 243, 244, 245, 247, 251, 254, 263, 270, 272, 273, 276, 280, 282, 283, 287, 288, 296, 298, 301, 304, 305, 308, 312, 318, 330, 333, 342, 350, 353, 366, 372, 373, 374, 382, 388, 440, 452, 463, 464, 465, 472, 476, 478, 488, 489, 491, 493, 513, 514, 526, 545, 581, 583, 585, 594, 603, 610, 648, 657, 675, 684, 689, 704, 705, 709, 710, 714, 717, 721, 727, 731, 761, 763, 769, 781, 788, 810, 837, 838, 842, 847, 867, 870, 880, 892, 899, 907, 914, 915, 916, 917, 926, 930, 937, 940, 941, 942, 943, 944, 952, 959, 978, 981, 983, 984, 985, 986, 987, 988, 994, 1000, 1001, 1002, 1003, 1006, 1007, 1008, 1012, 1019, 1026, 1029, 1031, 1032, 1033, 1035, 1043, 1048, 1057, 1063, 1065, 1081, 1086, 1104, 1105, 1106, 1114, 1115, 1121, 1123, 1129, 1130, 1135, 1140, 1148, 1150, 1163, 1164], "here": [13, 14, 64, 69, 74, 75, 78, 79, 81, 82, 86, 107, 113, 114, 121, 140, 142, 151, 153, 154, 156, 157, 159, 160, 161, 164, 165, 169, 174, 176, 182, 183, 184, 186, 190, 192, 195, 205, 206, 210, 213, 214, 215, 216, 221, 224, 232, 233, 237, 240, 242, 246, 259, 261, 263, 267, 270, 272, 276, 279, 281, 288, 291, 306, 321, 324, 328, 333, 339, 342, 345, 346, 348, 361, 364, 429, 431, 438, 445, 460, 461, 467, 469, 489, 494, 505, 508, 511, 513, 524, 526, 528, 543, 545, 553, 567, 570, 571, 574, 580, 586, 588, 592, 604, 632, 638, 658, 660, 661, 667, 678, 684, 689, 695, 705, 709, 714, 717, 719, 725, 727, 730, 739, 753, 764, 778, 783, 785, 788, 800, 806, 810, 836, 870, 907, 909, 914, 915, 916, 923, 927, 934, 940, 944, 950, 955, 968, 977, 981, 982, 993, 996, 1000, 1002, 1005, 1006, 1007, 1008, 1020, 1023, 1027, 1032, 1035, 1036, 1043, 1049, 1059, 1060, 1066, 1087, 1090, 1107, 1113, 1114, 1115, 1116, 1121, 1141, 1143, 1146, 1150, 1164, 1166], "discuss": [13, 42, 50, 116, 186, 190, 191, 193, 195, 230, 240, 276, 280, 281, 304, 319, 342, 346, 349, 350, 353, 355, 356, 360, 462, 550, 553, 556, 559, 562, 565, 735, 741, 790, 823, 870, 977, 981, 1010, 1148, 1150, 1153, 1164], "over": [13, 33, 34, 35, 38, 42, 62, 66, 90, 98, 121, 122, 134, 147, 150, 151, 153, 154, 156, 158, 159, 164, 174, 178, 186, 190, 192, 193, 194, 205, 210, 213, 215, 216, 223, 228, 229, 230, 232, 235, 238, 266, 270, 273, 276, 282, 283, 299, 304, 308, 319, 327, 342, 345, 388, 399, 400, 415, 429, 449, 459, 467, 477, 491, 568, 574, 602, 620, 632, 660, 667, 715, 716, 734, 757, 810, 907, 911, 915, 917, 923, 944, 958, 966, 969, 984, 996, 998, 1003, 1006, 1043, 1056, 1060], "lwn": [13, 39, 171, 790, 802, 820, 1156], "attribut": [13, 151, 154, 156, 171, 190, 204, 210, 214, 223, 226, 229, 234, 236, 241, 242, 246, 249, 252, 256, 257, 264, 267, 271, 274, 284, 288, 294, 306, 310, 316, 322, 335, 337, 346, 353, 427, 443, 445, 457, 472, 739, 761, 842, 848, 869, 873, 940, 952, 953, 970, 971, 978, 982, 1006, 1007, 1020, 1022, 1033, 1059, 1113, 1177], "sharealik": 13, "cc": [13, 23, 32, 136, 172, 180, 181, 182, 259, 452, 474, 523, 525, 526, 546, 549, 552, 553, 555, 556, 558, 559, 561, 562, 564, 587, 725, 726, 731, 788, 976, 977, 980, 981, 986, 1147, 1148, 1150, 1152, 1153], "BY": [13, 23, 35, 695], "sa": [13, 23, 32, 968], "don": [13, 24, 58, 62, 79, 85, 116, 121, 129, 142, 147, 153, 154, 155, 156, 159, 160, 161, 169, 184, 186, 190, 194, 205, 206, 216, 223, 227, 229, 230, 232, 239, 242, 294, 306, 350, 374, 415, 427, 430, 431, 433, 439, 445, 449, 451, 468, 525, 553, 559, 568, 569, 584, 585, 592, 602, 638, 645, 675, 678, 680, 695, 709, 710, 722, 731, 736, 741, 778, 783, 802, 810, 815, 845, 870, 872, 877, 883, 894, 907, 910, 914, 915, 919, 927, 931, 932, 933, 934, 953, 954, 955, 960, 981, 982, 987, 1008, 1016, 1018, 1032, 1035, 1039, 1063, 1117, 1123, 1130, 1136, 1147, 1153], "t": [13, 24, 43, 50, 58, 62, 64, 66, 79, 85, 116, 121, 129, 133, 142, 147, 151, 153, 155, 156, 159, 160, 161, 164, 165, 169, 171, 173, 184, 186, 187, 190, 193, 194, 197, 202, 204, 205, 206, 210, 216, 219, 223, 226, 227, 229, 230, 232, 234, 236, 239, 240, 242, 246, 249, 252, 255, 261, 264, 267, 272, 273, 274, 276, 278, 284, 288, 294, 306, 309, 310, 316, 322, 328, 334, 336, 337, 339, 350, 362, 364, 365, 367, 373, 374, 384, 399, 405, 407, 410, 415, 425, 427, 429, 430, 431, 433, 439, 445, 449, 451, 454, 468, 521, 523, 525, 545, 553, 559, 568, 569, 571, 578, 584, 585, 592, 594, 595, 602, 606, 638, 645, 667, 668, 670, 675, 677, 678, 680, 684, 685, 686, 687, 695, 698, 709, 710, 715, 721, 722, 725, 726, 727, 729, 731, 734, 736, 739, 741, 769, 778, 783, 790, 802, 804, 810, 815, 827, 830, 836, 837, 838, 845, 847, 870, 871, 872, 876, 877, 883, 889, 892, 894, 907, 910, 914, 915, 916, 919, 923, 927, 931, 932, 933, 934, 941, 953, 954, 955, 960, 970, 977, 978, 981, 982, 984, 985, 987, 996, 999, 1002, 1008, 1009, 1016, 1018, 1020, 1032, 1035, 1038, 1039, 1040, 1046, 1052, 1056, 1058, 1059, 1060, 1063, 1065, 1112, 1117, 1121, 1123, 1130, 1136, 1147, 1148, 1153, 1163], "want": [13, 17, 27, 29, 30, 45, 50, 62, 64, 79, 85, 117, 122, 127, 129, 133, 136, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 169, 174, 177, 182, 186, 190, 193, 194, 205, 206, 213, 216, 223, 230, 234, 236, 270, 272, 273, 276, 298, 328, 339, 353, 375, 387, 403, 431, 443, 445, 449, 453, 454, 469, 472, 493, 512, 521, 526, 545, 556, 569, 574, 577, 585, 610, 645, 661, 675, 680, 695, 716, 721, 727, 729, 730, 731, 749, 761, 766, 785, 810, 815, 845, 847, 849, 852, 867, 870, 871, 889, 907, 910, 914, 915, 916, 927, 931, 932, 933, 934, 939, 953, 968, 970, 971, 972, 981, 984, 986, 996, 998, 1000, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1011, 1015, 1022, 1027, 1031, 1038, 1047, 1050, 1060, 1064, 1066, 1102, 1107, 1117, 1121, 1122, 1124, 1126, 1130, 1141, 1143, 1144, 1148, 1161, 1166], "anybodi": [13, 66, 154, 159, 186, 205, 206, 432, 942, 953, 1153], "monei": [13, 155, 158, 161, 229, 849, 1065], "my": [13, 17, 24, 28, 32, 39, 59, 63, 64, 66, 98, 114, 136, 142, 151, 153, 154, 155, 157, 158, 160, 161, 164, 165, 169, 182, 186, 190, 193, 206, 213, 240, 254, 256, 270, 280, 322, 339, 342, 347, 360, 439, 450, 472, 526, 562, 580, 591, 645, 727, 748, 761, 794, 806, 810, 812, 838, 845, 860, 862, 867, 873, 894, 907, 914, 916, 918, 919, 926, 927, 932, 933, 934, 943, 978, 1008, 1011, 1020, 1039, 1062, 1102, 1124, 1129, 1130, 1141, 1161], "without": [13, 153, 154, 155, 156, 164, 165, 190, 234, 298, 319, 375, 399, 406, 432, 435, 439, 444, 449, 460, 472, 477, 489, 556, 562, 568, 574, 638, 645, 667, 668, 669, 695, 707, 713, 715, 716, 721, 727, 733, 734, 741, 760, 762, 763, 781, 794, 810, 849, 850, 892, 916, 918, 927, 953, 972, 977, 978, 982, 1005, 1006, 1009, 1010, 1012, 1019, 1020, 1021, 1023, 1025, 1027, 1034, 1039, 1056, 1141, 1143, 1161, 1166], "modif": [13, 55, 107, 134, 169, 232, 375, 377, 383, 388, 419, 449, 472, 477, 524, 582, 742, 761, 783, 810, 855, 871, 892, 1019, 1039, 1056, 1117, 1153], "back": [13, 29, 32, 64, 67, 114, 155, 156, 159, 165, 190, 192, 194, 219, 227, 232, 243, 245, 263, 278, 298, 301, 425, 440, 491, 516, 545, 565, 585, 599, 604, 642, 675, 689, 724, 731, 743, 763, 778, 783, 792, 810, 812, 841, 873, 907, 914, 927, 968, 978, 984, 1003, 1010, 1023, 1027, 1039, 1067, 1101, 1102, 1103, 1106, 1132], "m": [13, 23, 32, 38, 60, 62, 138, 140, 155, 156, 157, 159, 161, 164, 169, 182, 187, 192, 197, 206, 210, 219, 220, 221, 223, 227, 242, 246, 252, 254, 259, 271, 306, 316, 338, 342, 343, 344, 349, 363, 451, 474, 520, 523, 524, 525, 526, 562, 587, 695, 717, 726, 778, 779, 785, 788, 820, 847, 849, 870, 914, 927, 972, 1025, 1062, 1063, 1070, 1095, 1096, 1113, 1123, 1136, 1141, 1143, 1148], "lawyer": 13, "understand": [13, 116, 153, 154, 156, 160, 161, 164, 165, 169, 178, 186, 190, 215, 242, 273, 276, 279, 281, 282, 283, 298, 301, 304, 308, 344, 353, 381, 429, 438, 445, 477, 513, 654, 675, 684, 705, 716, 810, 849, 855, 907, 1027, 1065, 1108, 1113, 1114, 1131, 1161, 1162, 1163], "permit": [13, 156, 161, 206, 270, 339, 550, 571, 578, 914, 925, 969, 1033, 1133], "exactli": [13, 79, 154, 156, 178, 184, 213, 283, 333, 367, 407, 513, 524, 602, 678, 715, 810, 916, 941, 942, 982, 1000, 1116, 1135], "gnu": [13, 165, 170, 206, 215, 339, 345, 361, 446, 447, 452, 454, 577, 726, 763, 790, 811, 870, 985, 986, 996, 998, 1000, 1159, 1163], "free": [13, 32, 160, 165, 181, 206, 339, 422, 436, 474, 551, 571, 577, 579, 639, 658, 659, 661, 662, 678, 705, 724, 725, 726, 746, 774, 781, 812, 932, 933, 934, 946, 969, 982, 984, 1114, 1124, 1133, 1158], "document": [13, 24, 40, 42, 66, 79, 87, 116, 121, 151, 154, 156, 158, 165, 166, 172, 175, 182, 194, 206, 212, 213, 221, 223, 228, 229, 230, 232, 239, 242, 246, 259, 261, 263, 272, 279, 281, 284, 305, 307, 325, 328, 333, 342, 349, 350, 425, 426, 429, 436, 452, 453, 454, 455, 457, 460, 461, 462, 463, 464, 465, 477, 524, 543, 584, 588, 602, 603, 647, 658, 660, 670, 675, 682, 684, 689, 705, 706, 712, 714, 717, 719, 726, 727, 728, 730, 737, 738, 739, 741, 743, 757, 761, 781, 783, 806, 810, 811, 818, 822, 836, 842, 849, 856, 860, 862, 864, 894, 895, 896, 898, 899, 901, 902, 910, 914, 915, 916, 950, 957, 965, 998, 1000, 1001, 1005, 1007, 1008, 1012, 1016, 1018, 1020, 1026, 1043, 1053, 1054, 1104, 1116, 1119, 1126, 1127, 1130, 1132, 1139, 1142, 1149, 1150, 1169, 1170], "ago": [13, 156, 160, 216, 835], "wa": [13, 37, 53, 66, 79, 114, 122, 129, 134, 150, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 169, 171, 173, 174, 175, 177, 181, 182, 187, 189, 190, 193, 197, 203, 204, 210, 213, 216, 219, 220, 230, 232, 234, 236, 243, 246, 255, 267, 274, 280, 283, 288, 306, 318, 322, 342, 347, 360, 363, 410, 435, 455, 559, 567, 568, 577, 578, 623, 652, 659, 660, 661, 662, 663, 664, 671, 675, 678, 733, 761, 763, 785, 792, 800, 806, 845, 867, 897, 899, 907, 916, 943, 963, 982, 1007, 1039, 1113, 1127, 1130, 1136, 1141, 1143, 1146, 1156, 1158, 1159, 1160, 1161, 1173, 1179], "debian": [13, 79, 142, 143, 144, 161, 165, 169, 171, 183, 194, 206, 291, 339, 360, 539, 763, 810, 909, 986, 998, 1143, 1148], "resolut": [13, 244, 246, 432, 680, 742, 788, 820, 916], "us": [13, 14, 17, 21, 24, 39, 40, 45, 48, 54, 59, 60, 62, 63, 64, 66, 69, 71, 72, 75, 78, 79, 82, 83, 85, 86, 87, 89, 90, 98, 107, 108, 116, 117, 118, 120, 121, 122, 123, 124, 127, 129, 132, 133, 134, 146, 147, 149, 150, 151, 153, 154, 156, 157, 160, 164, 166, 169, 171, 174, 178, 180, 181, 183, 186, 190, 192, 193, 205, 206, 211, 214, 221, 223, 224, 226, 227, 230, 231, 233, 237, 239, 240, 242, 246, 249, 251, 252, 254, 259, 261, 263, 267, 270, 272, 273, 274, 276, 278, 279, 280, 281, 282, 283, 284, 287, 288, 293, 296, 301, 304, 305, 308, 309, 310, 312, 316, 318, 319, 322, 327, 328, 333, 339, 342, 345, 347, 348, 351, 360, 371, 374, 375, 378, 379, 380, 383, 385, 394, 395, 397, 399, 400, 404, 405, 406, 409, 410, 411, 413, 417, 418, 421, 424, 428, 432, 433, 437, 439, 440, 441, 445, 446, 447, 449, 451, 452, 454, 459, 460, 461, 462, 465, 467, 468, 470, 471, 474, 477, 478, 479, 481, 488, 491, 492, 493, 511, 513, 514, 516, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 539, 543, 544, 545, 546, 549, 552, 555, 558, 561, 564, 569, 571, 572, 576, 577, 580, 582, 584, 585, 586, 588, 589, 597, 598, 599, 600, 601, 603, 604, 605, 606, 607, 608, 611, 614, 615, 616, 620, 623, 624, 625, 626, 627, 628, 632, 638, 641, 642, 644, 645, 648, 649, 651, 652, 654, 656, 657, 658, 659, 660, 661, 662, 664, 666, 667, 669, 670, 671, 672, 674, 676, 678, 682, 684, 689, 695, 697, 704, 705, 707, 709, 710, 712, 714, 717, 722, 726, 727, 728, 729, 731, 733, 737, 739, 742, 747, 748, 757, 760, 761, 762, 763, 768, 769, 771, 773, 776, 778, 779, 781, 783, 785, 788, 790, 794, 796, 798, 802, 804, 806, 810, 811, 813, 815, 823, 824, 826, 829, 830, 836, 837, 838, 841, 845, 846, 849, 850, 852, 854, 856, 862, 867, 870, 872, 875, 876, 877, 879, 889, 895, 897, 901, 906, 907, 910, 911, 913, 917, 918, 919, 926, 927, 930, 936, 937, 940, 941, 942, 944, 948, 950, 951, 953, 955, 956, 957, 959, 960, 963, 965, 966, 969, 970, 973, 976, 977, 978, 980, 981, 982, 984, 987, 994, 995, 998, 999, 1000, 1001, 1002, 1006, 1009, 1010, 1012, 1013, 1014, 1015, 1016, 1019, 1020, 1025, 1027, 1029, 1031, 1032, 1033, 1035, 1039, 1041, 1043, 1047, 1048, 1049, 1050, 1053, 1056, 1058, 1060, 1063, 1065, 1068, 1069, 1070, 1073, 1074, 1075, 1079, 1081, 1084, 1085, 1086, 1087, 1091, 1093, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1107, 1108, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1120, 1121, 1124, 1126, 1127, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1141, 1144, 1147, 1148, 1150, 1152, 1153, 1161, 1163, 1164, 1166], "gfdl": 13, "becaus": [13, 17, 38, 62, 67, 81, 114, 148, 153, 154, 156, 165, 169, 178, 186, 190, 192, 206, 216, 223, 229, 239, 242, 367, 388, 427, 436, 439, 442, 449, 451, 460, 469, 472, 489, 523, 526, 569, 570, 577, 580, 620, 642, 661, 717, 725, 728, 779, 790, 808, 810, 849, 889, 907, 914, 915, 916, 925, 936, 937, 940, 943, 957, 963, 978, 981, 982, 1005, 1008, 1034, 1064, 1121, 1136, 1143, 1148, 1161], "too": [13, 27, 53, 56, 64, 81, 129, 154, 156, 161, 170, 183, 186, 202, 213, 215, 232, 242, 246, 249, 258, 259, 261, 272, 274, 282, 283, 288, 304, 306, 318, 319, 384, 429, 439, 449, 463, 469, 568, 582, 689, 691, 695, 707, 708, 709, 715, 721, 727, 751, 761, 762, 763, 808, 810, 815, 842, 907, 916, 917, 923, 940, 953, 970, 986, 1005, 1006, 1007, 1010, 1056, 1060, 1137, 1161], "restrict": [13, 155, 184, 194, 427, 432, 461, 469, 476, 511, 592, 761, 808, 837, 838, 926, 1121], "articl": [13, 169, 171, 790, 802, 820, 914, 916, 996], "describ": [13, 66, 108, 116, 118, 120, 151, 153, 154, 155, 156, 159, 161, 164, 165, 180, 206, 242, 246, 254, 280, 288, 291, 339, 472, 481, 527, 546, 549, 552, 555, 558, 561, 564, 717, 731, 810, 820, 843, 870, 916, 921, 973, 976, 980, 985, 993, 999, 1000, 1029, 1113, 1147, 1150, 1152], "pretti": [13, 155, 156, 178, 192, 196, 215, 232, 242, 439, 454, 602, 659, 734, 1003, 1133], "same": [13, 17, 24, 28, 31, 39, 40, 43, 44, 66, 121, 134, 154, 155, 156, 158, 160, 161, 164, 165, 169, 174, 175, 176, 178, 186, 187, 192, 195, 206, 214, 218, 223, 229, 232, 239, 240, 242, 245, 246, 264, 273, 276, 282, 283, 288, 304, 305, 306, 316, 329, 330, 339, 346, 371, 375, 386, 387, 388, 405, 406, 410, 415, 418, 427, 429, 433, 435, 439, 440, 443, 444, 454, 472, 476, 479, 480, 491, 510, 511, 519, 523, 543, 545, 552, 554, 568, 571, 577, 580, 583, 602, 605, 611, 620, 623, 624, 625, 649, 660, 668, 673, 680, 682, 684, 687, 689, 713, 714, 717, 729, 730, 731, 737, 778, 779, 783, 788, 790, 792, 800, 802, 808, 810, 826, 842, 848, 854, 870, 871, 873, 897, 907, 914, 915, 916, 917, 926, 927, 933, 939, 953, 954, 955, 968, 972, 978, 982, 984, 1000, 1006, 1007, 1010, 1015, 1016, 1019, 1021, 1025, 1027, 1043, 1045, 1048, 1053, 1055, 1056, 1057, 1090, 1098, 1100, 1114, 1116, 1117, 1120, 1121, 1124, 1126, 1129, 1130, 1131, 1141, 1143, 1148], "issu": [13, 154, 157, 164, 165, 216, 281, 282, 283, 304, 319, 322, 362, 375, 433, 946, 972, 981, 998, 1016], "how": [13, 23, 24, 37, 42, 45, 50, 66, 71, 72, 76, 78, 79, 82, 83, 85, 86, 87, 88, 89, 92, 105, 114, 116, 121, 128, 129, 140, 142, 150, 151, 154, 157, 159, 160, 161, 165, 166, 169, 174, 176, 178, 182, 183, 189, 190, 191, 192, 193, 194, 195, 206, 211, 213, 214, 215, 221, 223, 224, 226, 227, 229, 230, 232, 235, 237, 240, 251, 254, 258, 259, 263, 270, 273, 276, 278, 279, 280, 281, 282, 283, 287, 293, 296, 298, 304, 305, 308, 309, 312, 328, 344, 345, 349, 360, 375, 381, 406, 413, 415, 416, 427, 429, 431, 433, 438, 442, 449, 451, 453, 460, 474, 480, 510, 513, 521, 524, 545, 562, 569, 577, 578, 581, 592, 602, 641, 645, 651, 661, 667, 689, 726, 729, 730, 731, 741, 745, 757, 758, 764, 771, 773, 774, 788, 800, 810, 815, 826, 837, 838, 843, 850, 870, 889, 897, 903, 907, 914, 915, 916, 924, 932, 933, 934, 937, 940, 943, 944, 950, 963, 966, 969, 970, 972, 977, 981, 982, 994, 996, 998, 1000, 1013, 1014, 1031, 1032, 1035, 1049, 1052, 1066, 1104, 1105, 1108, 1113, 1114, 1127, 1129, 1130, 1133, 1141, 1144, 1150, 1153, 1163, 1164, 1166], "do": [13, 27, 32, 40, 43, 45, 50, 58, 59, 60, 63, 64, 79, 84, 86, 90, 92, 98, 116, 117, 124, 129, 133, 134, 137, 153, 154, 155, 156, 157, 158, 159, 160, 161, 165, 169, 170, 171, 173, 174, 175, 178, 182, 183, 186, 190, 191, 194, 204, 205, 206, 214, 216, 223, 226, 230, 232, 234, 236, 237, 240, 242, 245, 246, 252, 254, 256, 259, 261, 270, 273, 276, 305, 306, 328, 330, 337, 339, 342, 344, 378, 397, 399, 400, 402, 403, 404, 409, 410, 411, 417, 418, 421, 424, 427, 428, 435, 437, 441, 446, 447, 449, 451, 453, 469, 474, 477, 480, 488, 489, 510, 512, 524, 545, 553, 559, 562, 568, 570, 582, 586, 588, 589, 592, 629, 642, 645, 659, 660, 661, 669, 675, 680, 684, 706, 707, 713, 717, 719, 725, 726, 727, 729, 730, 731, 759, 760, 762, 763, 783, 787, 798, 802, 806, 808, 810, 835, 839, 840, 843, 847, 850, 854, 855, 864, 866, 871, 875, 877, 906, 907, 910, 914, 915, 916, 918, 919, 925, 927, 931, 932, 933, 934, 935, 936, 942, 953, 954, 956, 960, 966, 968, 969, 972, 974, 977, 982, 1000, 1001, 1003, 1005, 1007, 1008, 1009, 1012, 1021, 1031, 1032, 1033, 1036, 1039, 1043, 1049, 1050, 1063, 1065, 1084, 1108, 1114, 1115, 1122, 1123, 1130, 1133, 1141, 1148, 1150, 1166], "choos": [13, 27, 153, 154, 165, 178, 186, 562, 810, 907, 914, 916, 999, 1032, 1039, 1052, 1114, 1121, 1143], "altogeth": [13, 164, 213, 282, 283, 304, 678, 818, 1010], "have": [13, 27, 28, 30, 37, 43, 50, 66, 70, 81, 83, 85, 103, 111, 112, 116, 117, 121, 125, 129, 132, 134, 136, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 169, 174, 175, 176, 178, 182, 183, 184, 186, 190, 193, 194, 205, 206, 211, 213, 214, 215, 216, 223, 226, 227, 229, 230, 237, 242, 246, 249, 259, 261, 263, 270, 272, 273, 276, 279, 280, 282, 283, 287, 288, 308, 309, 328, 333, 342, 345, 347, 374, 375, 379, 388, 407, 409, 429, 431, 434, 435, 439, 443, 445, 450, 452, 455, 459, 460, 464, 467, 468, 469, 473, 476, 477, 489, 510, 513, 523, 526, 535, 562, 568, 572, 576, 578, 580, 585, 586, 588, 589, 620, 626, 642, 649, 654, 660, 661, 662, 666, 667, 671, 679, 682, 684, 695, 704, 709, 713, 714, 716, 719, 722, 726, 727, 730, 731, 758, 774, 778, 779, 781, 783, 788, 790, 802, 810, 813, 818, 826, 835, 843, 847, 849, 852, 853, 855, 862, 877, 897, 907, 914, 915, 916, 917, 919, 923, 925, 927, 931, 932, 934, 939, 944, 946, 952, 960, 977, 981, 982, 985, 986, 994, 998, 999, 1002, 1003, 1005, 1008, 1016, 1020, 1021, 1025, 1035, 1038, 1039, 1043, 1050, 1057, 1068, 1072, 1082, 1087, 1103, 1108, 1113, 1115, 1116, 1117, 1121, 1124, 1126, 1130, 1133, 1136, 1141, 1143, 1148, 1150, 1163, 1164], "idea": [13, 14, 128, 153, 154, 214, 227, 236, 246, 279, 281, 282, 283, 298, 301, 308, 433, 657, 679, 717, 725, 745, 810, 907, 942, 952, 972, 996, 1007, 1031, 1039, 1166], "choosealicens": 13, "appear": [13, 114, 154, 155, 156, 157, 158, 159, 160, 161, 164, 174, 178, 182, 184, 186, 187, 206, 215, 242, 282, 283, 304, 364, 407, 410, 454, 455, 472, 543, 584, 727, 748, 806, 810, 818, 834, 914, 915, 916, 927, 985, 1007, 1079, 1080, 1090, 1099, 1125, 1130], "help": [13, 29, 118, 153, 154, 156, 157, 165, 169, 187, 206, 210, 215, 223, 229, 234, 236, 239, 242, 246, 249, 252, 254, 267, 274, 279, 283, 288, 306, 310, 316, 322, 333, 337, 342, 360, 410, 431, 433, 435, 436, 445, 454, 571, 574, 580, 667, 680, 715, 725, 727, 781, 849, 909, 914, 999, 1031, 1034, 1060, 1063, 1133, 1141, 1148, 1163], "happen": [13, 27, 111, 112, 114, 117, 133, 153, 154, 156, 169, 186, 190, 194, 213, 232, 296, 312, 347, 415, 427, 431, 435, 449, 454, 574, 591, 663, 695, 709, 712, 734, 773, 806, 810, 827, 842, 843, 847, 916, 940, 942, 952, 957, 981, 1019, 1020, 1059, 1073, 1076, 1090, 1107, 1113, 1141, 1150, 1163], "clone": [13, 62, 78, 110, 116, 136, 146, 156, 157, 160, 181, 183, 186, 203, 215, 216, 232, 259, 261, 291, 298, 301, 342, 347, 510, 513, 587, 783, 810, 811, 914, 998, 999], "jfasch": [13, 40, 43, 62, 107, 114, 116, 134, 136, 150, 151, 157, 158, 159, 164, 165, 169, 173, 182, 183, 184, 187, 190, 203, 213, 223, 226, 229, 230, 232, 234, 239, 242, 249, 252, 254, 259, 261, 267, 270, 272, 273, 274, 279, 280, 281, 283, 284, 287, 288, 293, 297, 298, 301, 305, 309, 310, 313, 315, 316, 319, 321, 322, 341, 342, 347, 350, 452, 454, 455, 457, 458, 460, 461, 463, 465, 474, 510, 524, 525, 526, 527, 545, 587, 647, 725, 726, 727, 761, 783, 785, 810, 836, 837, 838, 841, 842, 845, 847, 852, 855, 866, 871, 872, 873, 889, 892, 894, 895, 899, 901, 903, 914, 917, 925, 926, 927, 932, 938, 940, 941, 942, 963, 968, 984, 985, 986, 987, 996, 998, 999, 1000, 1001, 1002, 1005, 1007, 1008, 1011, 1035, 1054, 1060, 1063, 1086, 1129, 1130, 1141, 1143], "home": [13, 32, 40, 42, 43, 50, 62, 66, 101, 114, 136, 150, 151, 155, 157, 158, 159, 161, 165, 169, 182, 183, 184, 187, 206, 213, 223, 226, 227, 229, 234, 239, 242, 249, 252, 254, 259, 261, 267, 270, 272, 274, 284, 288, 310, 316, 322, 350, 445, 452, 454, 455, 457, 458, 460, 461, 463, 465, 474, 524, 525, 526, 527, 587, 647, 680, 725, 726, 727, 761, 763, 785, 810, 836, 837, 838, 840, 845, 847, 849, 850, 852, 855, 860, 862, 864, 866, 867, 870, 871, 873, 874, 875, 876, 877, 881, 884, 887, 890, 892, 894, 895, 901, 906, 917, 918, 923, 925, 926, 963, 965, 981, 984, 985, 986, 996, 998, 999, 1000, 1001, 1002, 1005, 1008, 1011, 1060, 1086, 1095, 1129, 1130, 1141, 1143], "built": [13, 28, 116, 123, 153, 154, 156, 157, 160, 165, 182, 187, 189, 190, 198, 199, 211, 214, 223, 229, 234, 237, 239, 240, 242, 246, 254, 263, 267, 270, 272, 287, 296, 305, 309, 312, 316, 322, 377, 381, 405, 426, 452, 460, 463, 464, 488, 510, 623, 680, 736, 741, 779, 783, 785, 810, 914, 916, 927, 985, 986, 987, 992, 1000, 1005, 1008, 1012, 1028, 1043, 1059, 1108, 1114, 1115, 1132, 1141, 1143, 1144, 1159, 1163, 1171], "wonder": [13, 778, 796, 823, 1010], "gener": [13, 23, 24, 29, 39, 66, 69, 70, 79, 81, 82, 110, 111, 112, 147, 151, 154, 158, 161, 166, 173, 176, 186, 190, 191, 193, 194, 195, 196, 205, 213, 221, 222, 223, 227, 228, 230, 231, 232, 233, 235, 237, 238, 239, 243, 244, 245, 246, 251, 252, 266, 268, 272, 281, 286, 288, 292, 293, 295, 307, 309, 314, 315, 317, 319, 320, 321, 323, 326, 345, 348, 365, 375, 377, 383, 388, 399, 409, 427, 433, 436, 438, 439, 442, 452, 453, 454, 458, 513, 515, 521, 524, 532, 567, 574, 578, 594, 602, 603, 606, 657, 675, 678, 705, 719, 725, 731, 739, 790, 792, 794, 813, 843, 854, 870, 907, 909, 914, 927, 952, 981, 982, 984, 987, 998, 999, 1005, 1006, 1007, 1009, 1027, 1033, 1035, 1036, 1037, 1043, 1047, 1064, 1065, 1066, 1067, 1080, 1106, 1108, 1115, 1117, 1118, 1120, 1121, 1130, 1136, 1141, 1164, 1165, 1172], "content": [13, 27, 39, 49, 50, 57, 64, 114, 186, 193, 194, 195, 206, 214, 232, 234, 242, 264, 270, 310, 334, 409, 412, 414, 527, 570, 620, 628, 716, 812, 815, 836, 837, 838, 852, 855, 857, 858, 892, 895, 903, 915, 919, 942, 984, 1039, 1058, 1064, 1077, 1107, 1127, 1143, 1176], "which": [13, 14, 17, 28, 57, 60, 69, 79, 81, 84, 90, 111, 112, 113, 117, 133, 139, 146, 147, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 165, 169, 174, 176, 182, 183, 184, 186, 190, 192, 194, 206, 213, 215, 223, 227, 229, 230, 242, 245, 246, 254, 255, 272, 273, 276, 278, 283, 288, 301, 305, 318, 360, 378, 383, 384, 390, 394, 415, 427, 439, 449, 450, 451, 452, 454, 457, 459, 460, 467, 469, 480, 510, 511, 512, 513, 516, 518, 519, 520, 521, 522, 524, 539, 550, 556, 569, 576, 578, 582, 584, 592, 639, 649, 653, 654, 660, 661, 663, 672, 678, 679, 717, 721, 722, 730, 731, 743, 751, 759, 761, 763, 779, 788, 810, 812, 830, 836, 843, 847, 849, 852, 853, 854, 855, 861, 863, 866, 870, 883, 894, 897, 906, 907, 910, 914, 915, 916, 927, 936, 937, 940, 942, 944, 945, 947, 952, 957, 964, 966, 968, 969, 977, 982, 985, 990, 998, 1002, 1005, 1007, 1009, 1019, 1020, 1024, 1032, 1036, 1039, 1048, 1079, 1098, 1100, 1103, 1105, 1121, 1123, 1124, 1126, 1129, 1143, 1148, 1161], "differ": [13, 35, 38, 59, 63, 70, 77, 82, 86, 89, 141, 153, 154, 159, 161, 165, 175, 182, 186, 190, 202, 226, 227, 270, 272, 278, 279, 281, 288, 306, 318, 328, 363, 375, 383, 388, 389, 405, 406, 409, 427, 433, 435, 439, 449, 451, 468, 469, 513, 524, 526, 545, 552, 553, 562, 571, 572, 576, 582, 584, 585, 594, 598, 603, 642, 645, 649, 671, 684, 687, 714, 729, 742, 747, 761, 783, 788, 802, 808, 810, 830, 835, 841, 845, 846, 848, 867, 892, 907, 910, 914, 916, 923, 934, 942, 944, 957, 966, 968, 969, 989, 994, 999, 1001, 1002, 1007, 1020, 1027, 1035, 1048, 1052, 1057, 1058, 1059, 1117, 1126, 1143, 1144, 1164, 1166], "so": [13, 17, 23, 32, 37, 39, 49, 55, 60, 67, 114, 117, 122, 134, 141, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 169, 173, 174, 175, 176, 177, 178, 182, 183, 184, 186, 187, 198, 199, 204, 212, 214, 215, 216, 225, 226, 227, 256, 270, 278, 280, 284, 296, 308, 312, 322, 328, 337, 342, 345, 360, 374, 378, 379, 387, 389, 405, 415, 416, 418, 427, 431, 433, 435, 436, 440, 450, 452, 455, 457, 462, 463, 467, 489, 491, 510, 526, 539, 578, 585, 589, 602, 625, 632, 641, 648, 657, 706, 716, 721, 724, 725, 727, 742, 769, 771, 774, 779, 783, 785, 788, 810, 823, 835, 849, 850, 852, 854, 860, 862, 864, 870, 874, 881, 907, 913, 914, 915, 916, 919, 921, 923, 931, 934, 937, 942, 944, 952, 970, 972, 981, 984, 985, 986, 987, 998, 1000, 1001, 1010, 1011, 1015, 1027, 1032, 1034, 1039, 1056, 1058, 1060, 1062, 1072, 1076, 1082, 1086, 1113, 1116, 1124, 1131, 1134, 1141, 1143, 1147, 1148, 1150, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1163, 1165, 1171, 1174, 1179], "ye": [13, 32, 50, 62, 156, 157, 160, 165, 206, 339, 625, 734, 837, 838, 855, 857, 858, 916, 927, 984, 1052, 1085], "realli": [13, 21, 43, 50, 53, 55, 56, 66, 134, 155, 156, 157, 159, 161, 175, 186, 190, 193, 468, 684, 721, 731, 743, 763, 802, 915, 916, 927, 950, 1108, 1115, 1121], "great": [13, 79, 159, 161, 216, 236, 246, 449, 568, 583, 739, 810, 915, 1161, 1166], "static": [13, 23, 66, 98, 104, 105, 111, 112, 116, 154, 156, 158, 160, 161, 171, 181, 215, 216, 223, 229, 232, 239, 242, 246, 270, 279, 281, 288, 342, 348, 411, 417, 421, 424, 426, 428, 435, 437, 439, 441, 446, 447, 452, 457, 458, 462, 464, 473, 487, 495, 507, 508, 509, 510, 511, 515, 516, 517, 518, 519, 520, 521, 522, 525, 532, 534, 553, 562, 567, 571, 574, 585, 590, 593, 596, 612, 616, 618, 622, 631, 634, 635, 652, 659, 660, 661, 662, 663, 664, 669, 678, 707, 709, 711, 712, 716, 727, 730, 736, 741, 747, 748, 749, 751, 752, 753, 754, 760, 761, 762, 763, 769, 788, 806, 810, 812, 906, 952, 955, 957, 959, 968, 974, 981, 985, 986, 987, 989, 990, 991, 992, 994, 1119, 1153, 1156, 1158, 1159, 1160], "It": [13, 21, 39, 43, 45, 55, 59, 60, 63, 79, 122, 129, 133, 142, 153, 154, 155, 156, 159, 160, 161, 164, 165, 174, 176, 178, 182, 183, 187, 192, 193, 206, 215, 216, 223, 229, 232, 239, 242, 246, 254, 259, 261, 270, 273, 276, 279, 305, 318, 355, 356, 372, 383, 387, 405, 410, 433, 435, 449, 467, 472, 477, 480, 489, 491, 513, 516, 517, 524, 525, 571, 651, 663, 680, 681, 717, 727, 763, 774, 810, 837, 838, 849, 852, 867, 906, 907, 915, 916, 937, 942, 944, 945, 947, 960, 964, 969, 985, 986, 996, 1001, 1006, 1008, 1019, 1027, 1031, 1032, 1065, 1081, 1086, 1090, 1093, 1099, 1114, 1120, 1132, 1141, 1142, 1161, 1163, 1164, 1166], "let": [13, 17, 42, 59, 63, 64, 117, 121, 154, 155, 156, 159, 160, 161, 164, 169, 176, 177, 178, 183, 184, 216, 230, 234, 236, 242, 246, 273, 276, 278, 280, 283, 298, 301, 309, 431, 439, 449, 451, 453, 460, 463, 467, 469, 471, 476, 489, 495, 512, 523, 524, 526, 529, 545, 559, 569, 570, 582, 586, 588, 589, 639, 645, 651, 657, 667, 684, 712, 716, 721, 725, 779, 783, 802, 810, 818, 845, 854, 867, 872, 907, 914, 915, 927, 940, 942, 943, 957, 966, 968, 984, 986, 996, 999, 1000, 1006, 1008, 1012, 1049, 1056, 1058, 1065, 1073, 1095, 1103, 1108, 1115, 1116, 1121, 1124, 1141, 1161], "me": [13, 23, 32, 37, 59, 60, 63, 116, 148, 153, 154, 155, 156, 159, 160, 161, 164, 165, 169, 182, 183, 184, 186, 190, 213, 215, 216, 240, 291, 309, 342, 431, 433, 434, 449, 452, 556, 580, 645, 680, 721, 727, 783, 845, 872, 907, 915, 916, 927, 931, 984, 987, 996, 1012, 1015, 1056, 1108, 1112, 1142], "focu": [13, 157, 161, 164, 178, 186, 190, 273, 276, 438, 442, 474, 666, 695, 907, 915, 917, 1032, 1115, 1135, 1164], "myself": [13, 150, 151, 161, 182, 190, 205, 221, 783, 845, 867, 872, 889], "ey": [13, 32, 37, 239, 242, 252, 274, 316, 322, 1043], "toward": [13, 186, 348, 431, 491, 620], "consist": [13, 27, 186, 201, 242, 308, 333, 350, 364, 367, 405, 407, 445, 516, 524, 569, 870, 944, 978, 1032, 1033, 1036, 1077, 1086, 1110, 1131], "won": [13, 133, 164, 165, 242, 272, 328, 362, 429, 454, 523, 525, 571, 721, 727, 778, 790, 915, 927, 934, 987, 1009, 1058], "break": [13, 36, 38, 147, 177, 186, 187, 192, 199, 205, 206, 214, 226, 229, 235, 236, 239, 242, 245, 246, 249, 252, 267, 274, 288, 316, 322, 334, 399, 403, 404, 411, 417, 421, 424, 428, 431, 435, 437, 439, 441, 446, 447, 449, 610, 641, 651, 653, 660, 669, 695, 703, 707, 728, 741, 748, 760, 762, 763, 800, 932, 933, 942, 968, 974, 981, 1012, 1020, 1058, 1121], "move": [13, 54, 64, 100, 116, 129, 138, 142, 151, 155, 165, 183, 191, 194, 205, 216, 232, 257, 260, 269, 270, 281, 290, 291, 325, 327, 342, 345, 449, 450, 463, 507, 516, 545, 570, 571, 578, 579, 580, 581, 583, 629, 675, 695, 707, 717, 719, 723, 726, 728, 729, 732, 739, 740, 741, 759, 760, 762, 763, 779, 812, 834, 837, 838, 839, 840, 873, 874, 875, 876, 879, 880, 881, 882, 884, 890, 906, 907, 931, 932, 969, 1002, 1039, 1137, 1160, 1161, 1162, 1169, 1170], "around": [13, 24, 37, 59, 60, 63, 99, 116, 121, 124, 154, 155, 156, 161, 165, 175, 186, 190, 214, 240, 251, 258, 259, 261, 281, 309, 318, 319, 388, 463, 477, 479, 488, 513, 569, 665, 668, 670, 720, 722, 762, 763, 810, 815, 942, 957, 978, 981, 1002, 1008, 1024, 1028, 1030, 1052, 1104, 1108, 1110, 1114, 1115, 1126, 1127, 1130], "last": [13, 59, 63, 114, 116, 150, 154, 155, 156, 171, 176, 186, 187, 193, 205, 206, 213, 221, 223, 226, 229, 230, 239, 242, 252, 267, 272, 274, 288, 310, 333, 339, 346, 348, 415, 433, 597, 599, 600, 601, 602, 606, 609, 698, 701, 702, 703, 761, 763, 810, 870, 873, 876, 892, 901, 903, 906, 934, 939, 947, 956, 961, 963, 968, 983, 994, 1005, 1006, 1007, 1008, 1012, 1016, 1020, 1021, 1027, 1028, 1033, 1041, 1049, 1050, 1054, 1056, 1059, 1060, 1070, 1097, 1103, 1105, 1116, 1121, 1129, 1130, 1142, 1149, 1179], "least": [13, 24, 37, 59, 63, 66, 82, 156, 164, 178, 182, 184, 186, 193, 194, 213, 215, 216, 230, 232, 242, 246, 272, 276, 278, 288, 290, 363, 381, 387, 388, 401, 427, 430, 431, 439, 455, 467, 539, 624, 667, 717, 719, 726, 731, 734, 743, 773, 806, 808, 842, 907, 909, 917, 955, 978, 982, 1003, 1012, 1016, 1032, 1033, 1043, 1066, 1114, 1149], "ha": [13, 21, 24, 27, 28, 43, 45, 53, 56, 64, 79, 111, 112, 114, 117, 124, 127, 129, 133, 141, 151, 153, 154, 155, 156, 157, 158, 159, 161, 164, 165, 169, 174, 176, 178, 182, 183, 186, 190, 192, 193, 194, 204, 206, 210, 211, 213, 214, 216, 223, 226, 229, 232, 234, 236, 237, 239, 242, 246, 249, 252, 255, 263, 264, 267, 270, 271, 272, 273, 274, 276, 278, 279, 281, 284, 287, 288, 294, 296, 305, 306, 309, 310, 312, 316, 319, 322, 325, 328, 335, 337, 339, 348, 362, 371, 374, 384, 387, 388, 397, 400, 408, 409, 416, 422, 423, 426, 430, 432, 433, 439, 445, 449, 451, 454, 460, 462, 463, 464, 465, 467, 468, 469, 472, 477, 478, 481, 489, 494, 508, 510, 520, 543, 553, 568, 570, 571, 572, 573, 576, 577, 578, 581, 582, 585, 592, 602, 623, 624, 641, 642, 645, 654, 655, 660, 661, 663, 672, 674, 677, 680, 689, 690, 691, 695, 704, 705, 706, 709, 717, 725, 727, 730, 731, 733, 739, 743, 761, 763, 764, 774, 779, 804, 806, 808, 810, 820, 823, 824, 826, 830, 837, 841, 842, 843, 845, 847, 848, 849, 855, 866, 868, 873, 899, 907, 913, 914, 915, 916, 925, 927, 930, 936, 942, 952, 954, 955, 957, 965, 966, 968, 969, 970, 971, 978, 982, 984, 998, 1000, 1001, 1003, 1005, 1006, 1007, 1010, 1012, 1015, 1020, 1021, 1022, 1028, 1030, 1032, 1035, 1038, 1039, 1043, 1048, 1049, 1053, 1070, 1090, 1105, 1107, 1108, 1114, 1115, 1116, 1117, 1121, 1129, 1130, 1132, 1134, 1141, 1143, 1148, 1150, 1161, 1163, 1164, 1166, 1169, 1170], "extens": [13, 14, 23, 28, 32, 37, 40, 149, 164, 186, 213, 215, 223, 229, 239, 242, 322, 328, 409, 449, 477, 568, 706, 761, 764, 835, 847, 984, 1015, 1032, 1035, 1136, 1141], "interfac": [13, 53, 56, 60, 73, 74, 75, 79, 81, 83, 86, 107, 113, 117, 118, 119, 120, 121, 122, 124, 126, 127, 129, 133, 134, 150, 151, 154, 171, 173, 174, 181, 190, 216, 230, 232, 244, 262, 263, 270, 279, 297, 309, 313, 331, 332, 342, 343, 344, 348, 351, 360, 361, 449, 455, 456, 461, 466, 467, 468, 469, 472, 473, 479, 487, 491, 493, 494, 515, 519, 521, 545, 567, 592, 640, 642, 664, 706, 713, 714, 730, 731, 747, 748, 762, 763, 906, 907, 912, 914, 916, 950, 984, 1006, 1120, 1160, 1165, 1166, 1172, 1175, 1178], "lot": [13, 66, 70, 93, 98, 151, 153, 154, 156, 161, 165, 183, 186, 190, 206, 283, 326, 345, 381, 430, 435, 439, 445, 459, 562, 639, 763, 794, 804, 810, 839, 840, 849, 870, 906, 915, 932, 984, 999, 1027, 1032, 1054, 1110, 1162], "littl": [13, 27, 44, 156, 158, 161, 164, 165, 174, 186, 214, 223, 229, 230, 232, 239, 242, 264, 270, 281, 360, 410, 438, 439, 450, 579, 582, 585, 641, 647, 727, 730, 766, 907, 909, 915, 963, 985, 1055, 1124], "maintain": [13, 28, 30, 54, 71, 81, 151, 153, 154, 161, 183, 192, 213, 215, 223, 227, 229, 239, 242, 251, 342, 356, 435, 449, 617, 667, 678, 788, 810, 818, 820, 822, 953, 984, 985, 986, 988, 994, 999, 1000, 1001, 1002, 1050, 1113, 1163], "packag": [13, 21, 23, 29, 32, 62, 98, 105, 116, 137, 143, 144, 150, 155, 169, 184, 186, 187, 190, 191, 193, 200, 205, 211, 213, 214, 215, 221, 223, 227, 229, 230, 233, 237, 239, 240, 242, 243, 245, 248, 251, 254, 272, 282, 283, 287, 291, 296, 301, 305, 308, 309, 312, 315, 322, 342, 343, 344, 345, 349, 360, 361, 452, 454, 457, 458, 763, 783, 906, 914, 915, 986, 991, 994, 1009, 1032, 1039, 1061, 1062, 1064, 1065, 1066, 1067, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1114, 1118, 1122, 1123, 1124, 1129, 1130, 1140, 1141, 1142, 1144, 1145, 1150, 1163], "virtual": [13, 29, 70, 81, 107, 108, 113, 125, 129, 134, 150, 156, 159, 161, 181, 186, 190, 201, 205, 221, 237, 240, 243, 254, 259, 261, 263, 270, 279, 280, 281, 282, 283, 287, 298, 301, 304, 305, 308, 309, 315, 319, 349, 360, 361, 464, 468, 470, 473, 474, 479, 481, 487, 491, 496, 498, 499, 500, 503, 504, 505, 506, 507, 508, 515, 525, 565, 567, 592, 639, 640, 641, 664, 706, 714, 725, 727, 731, 762, 763, 769, 841, 846, 849, 908, 914, 916, 925, 934, 950, 968, 978, 1032, 1035, 1061, 1062, 1063, 1106, 1108, 1109, 1110, 1114, 1122, 1124, 1135, 1138, 1141, 1160, 1167, 1176], "environ": [13, 21, 29, 66, 76, 79, 98, 105, 116, 142, 150, 154, 165, 169, 190, 196, 205, 206, 211, 221, 224, 227, 237, 240, 243, 254, 260, 263, 269, 282, 283, 287, 290, 291, 298, 301, 304, 305, 308, 309, 315, 322, 343, 344, 355, 356, 474, 494, 508, 523, 524, 525, 526, 587, 725, 726, 763, 840, 844, 848, 849, 870, 871, 890, 906, 907, 947, 964, 969, 985, 994, 995, 996, 1001, 1003, 1015, 1035, 1037, 1061, 1062, 1063, 1106, 1108, 1109, 1110, 1114, 1115, 1122, 1124, 1129, 1130, 1135, 1136, 1138, 1141, 1142, 1148, 1152, 1154], "repo": [13, 114, 136, 165, 169, 181, 184, 195, 322, 328, 333, 342, 346, 347, 535, 536, 537, 538, 540, 541, 542, 783, 810, 812, 998, 1150], "creat": [13, 17, 21, 24, 39, 42, 44, 54, 59, 62, 63, 64, 78, 100, 102, 103, 110, 116, 120, 121, 137, 140, 147, 150, 154, 155, 156, 158, 161, 164, 165, 169, 171, 173, 174, 175, 190, 191, 192, 193, 194, 195, 206, 211, 219, 224, 229, 230, 232, 237, 239, 242, 246, 251, 254, 259, 260, 261, 269, 270, 278, 281, 282, 283, 287, 288, 290, 291, 293, 298, 301, 305, 308, 309, 342, 347, 366, 443, 445, 451, 452, 465, 467, 469, 472, 473, 474, 487, 488, 489, 493, 495, 496, 510, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 567, 569, 572, 583, 623, 625, 641, 656, 659, 661, 670, 672, 695, 709, 712, 721, 727, 728, 740, 741, 748, 758, 759, 761, 762, 763, 766, 769, 773, 774, 779, 781, 783, 785, 788, 794, 806, 810, 839, 840, 841, 842, 843, 844, 850, 852, 853, 857, 858, 859, 861, 863, 865, 868, 874, 875, 877, 879, 880, 881, 882, 884, 890, 906, 914, 915, 916, 918, 919, 920, 922, 923, 925, 927, 929, 935, 936, 937, 944, 945, 946, 947, 952, 953, 954, 960, 961, 964, 967, 968, 969, 976, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 999, 1000, 1005, 1006, 1008, 1010, 1012, 1016, 1020, 1021, 1022, 1024, 1038, 1039, 1048, 1049, 1050, 1059, 1062, 1063, 1064, 1076, 1084, 1085, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1108, 1110, 1111, 1112, 1114, 1117, 1120, 1124, 1133, 1141, 1143, 1144, 1163], "popul": [13, 156, 160, 246, 279, 766], "yourself": [13, 154, 161, 165, 176, 232, 394, 570, 587, 592, 815, 872, 955, 978, 1031, 1166], "root": [13, 38, 64, 81, 116, 136, 153, 159, 161, 164, 165, 176, 181, 182, 183, 190, 194, 204, 226, 232, 242, 246, 249, 252, 267, 270, 274, 284, 288, 310, 316, 322, 327, 328, 333, 362, 429, 438, 442, 445, 454, 462, 468, 526, 588, 644, 761, 774, 810, 811, 812, 841, 845, 847, 866, 870, 882, 883, 889, 892, 894, 895, 896, 898, 899, 901, 907, 914, 915, 916, 918, 919, 923, 932, 937, 942, 950, 970, 984, 987, 996, 998, 1007, 1086, 1095, 1096, 1133, 1141], "activ": [13, 159, 169, 171, 194, 254, 667, 790, 792, 796, 804, 845, 847, 902, 1062, 1141, 1143], "txt": [13, 33, 42, 44, 114, 116, 121, 134, 149, 156, 172, 173, 177, 180, 181, 182, 183, 184, 213, 215, 220, 223, 232, 233, 242, 254, 264, 298, 301, 333, 334, 374, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 465, 510, 523, 524, 525, 526, 527, 546, 549, 552, 553, 555, 558, 561, 564, 658, 761, 781, 836, 837, 838, 850, 854, 864, 874, 875, 876, 877, 881, 882, 889, 910, 914, 915, 916, 950, 973, 976, 980, 985, 986, 996, 1007, 1054, 1077, 1095, 1143, 1144, 1147, 1150, 1152], "fedorish": [13, 783, 927, 1124], "your": [13, 43, 66, 103, 110, 116, 133, 153, 154, 156, 157, 158, 159, 160, 161, 164, 165, 169, 170, 183, 186, 189, 190, 194, 206, 214, 215, 232, 240, 246, 259, 261, 263, 270, 273, 276, 318, 328, 339, 348, 350, 394, 429, 437, 439, 441, 446, 447, 449, 458, 468, 472, 493, 510, 513, 524, 526, 527, 584, 658, 659, 661, 662, 669, 675, 683, 707, 760, 762, 763, 785, 802, 810, 815, 836, 837, 838, 840, 847, 849, 850, 859, 860, 861, 862, 863, 864, 865, 871, 874, 875, 876, 877, 879, 888, 906, 907, 914, 916, 918, 919, 923, 927, 942, 944, 996, 999, 1010, 1021, 1027, 1032, 1036, 1077, 1091, 1095, 1096, 1108, 1113, 1124, 1134, 1136, 1141, 1142, 1143, 1150, 1166], "mileag": [13, 259, 261, 1124, 1141], "might": [13, 27, 59, 62, 63, 114, 122, 127, 133, 153, 154, 155, 157, 159, 161, 164, 165, 169, 182, 184, 186, 194, 215, 223, 229, 234, 239, 242, 273, 276, 279, 305, 328, 353, 425, 439, 449, 454, 463, 464, 469, 472, 493, 526, 576, 585, 704, 714, 727, 728, 729, 761, 785, 796, 800, 806, 810, 852, 907, 914, 915, 916, 927, 932, 941, 963, 970, 981, 996, 999, 1007, 1016, 1019, 1032, 1110, 1124, 1141, 1144, 1148], "vari": [13, 223, 229, 239, 242, 246, 259, 261, 282, 283, 304, 308, 365, 439, 623, 742, 810, 916, 1001, 1120, 1124, 1141, 1161], "dnf": [13, 62, 124, 150, 157, 165, 169, 183, 322, 362, 455, 462, 539, 783, 811, 909, 927, 986, 998, 1124, 1148, 1150], "pandoc": 13, "graphviz": [13, 458, 986], "dia": [13, 226, 284, 892, 1065], "gtest": [13, 44, 66, 116, 181, 182, 183, 184, 362, 467, 468, 469, 471, 472, 474, 476, 489, 491, 492, 516, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 533, 535, 536, 537, 538, 540, 541, 542, 543, 544, 562, 569, 570, 571, 582, 583, 585, 586, 587, 588, 589, 647, 672, 674, 677, 678, 679, 710, 716, 721, 725, 726, 727, 728, 730, 743, 757, 758, 759, 761, 763, 1146], "devel": [13, 124, 150, 165, 183, 455, 457, 462, 783, 1148, 1150], "markdown": [13, 23, 337, 1063], "handl": [13, 21, 29, 46, 75, 121, 148, 154, 174, 186, 190, 191, 193, 195, 201, 214, 216, 221, 223, 227, 230, 231, 239, 244, 251, 263, 270, 280, 287, 288, 298, 301, 309, 314, 320, 326, 342, 347, 349, 355, 356, 363, 403, 410, 415, 431, 435, 455, 515, 545, 567, 582, 592, 625, 629, 651, 660, 661, 662, 695, 697, 724, 727, 739, 740, 762, 763, 769, 773, 792, 804, 840, 843, 844, 906, 914, 929, 931, 932, 933, 934, 935, 936, 937, 939, 942, 944, 945, 947, 955, 961, 964, 967, 969, 972, 978, 981, 1009, 1027, 1032, 1033, 1048, 1058, 1106, 1108, 1160, 1166, 1175], "jupyt": [13, 169, 174, 175, 177, 186, 187, 189, 197, 237, 239, 240, 242, 243, 272, 273, 276, 277, 283, 287, 293, 298, 301, 305, 309, 315, 322, 342, 347, 892, 1032, 1110, 1111, 1115, 1171], "notebook": [13, 32, 169, 173, 174, 175, 177, 186, 189, 197, 230, 237, 240, 242, 243, 245, 248, 251, 254, 263, 266, 272, 273, 276, 277, 283, 287, 293, 298, 301, 305, 309, 315, 316, 321, 327, 347, 1032, 1110, 1115, 1171], "those": [13, 24, 79, 114, 125, 134, 147, 154, 155, 161, 164, 169, 184, 186, 190, 195, 213, 215, 216, 223, 227, 232, 233, 234, 236, 242, 246, 278, 279, 280, 281, 283, 298, 327, 339, 342, 348, 353, 374, 429, 439, 449, 451, 453, 454, 455, 468, 469, 472, 473, 539, 582, 604, 645, 648, 655, 670, 705, 721, 729, 731, 761, 776, 779, 810, 837, 838, 854, 855, 907, 914, 915, 916, 981, 1000, 1001, 1002, 1003, 1007, 1008, 1009, 1015, 1020, 1031, 1072, 1082, 1103, 1113, 1121, 1122, 1127, 1129, 1141, 1163, 1164, 1166], "funki": [13, 17, 156], "graph": [13, 29, 79, 88, 134, 224, 237, 251, 254, 287, 293, 342, 349, 444, 458, 464, 986, 1000, 1001, 1108, 1114], "histor": [13, 24, 79, 156, 178, 375, 388, 433, 666, 769, 848, 927, 982, 1099, 1153], "baggag": [13, 375, 388, 666, 982, 1099], "convert": [13, 17, 29, 42, 147, 175, 205, 213, 219, 223, 226, 229, 232, 236, 239, 242, 243, 246, 263, 288, 298, 301, 316, 327, 388, 410, 435, 445, 453, 458, 468, 523, 638, 645, 679, 680, 763, 764, 944, 984, 1023, 1065, 1067, 1072, 1079, 1082, 1101, 1102, 1103, 1106, 1121], "draw": [13, 151, 194, 305, 350, 385, 521, 719, 767, 771, 779, 800, 823], "svg": [13, 151], "ani": [13, 39, 45, 49, 134, 138, 147, 150, 153, 154, 155, 156, 159, 161, 165, 169, 174, 178, 189, 192, 194, 206, 213, 215, 223, 229, 239, 242, 246, 257, 258, 259, 267, 283, 288, 305, 318, 328, 349, 350, 383, 427, 435, 449, 472, 477, 519, 520, 521, 522, 526, 527, 539, 556, 574, 577, 603, 641, 649, 654, 667, 670, 672, 689, 695, 713, 714, 717, 726, 727, 728, 730, 731, 739, 761, 768, 769, 781, 783, 802, 810, 820, 827, 837, 838, 847, 850, 857, 858, 861, 862, 863, 870, 882, 892, 907, 914, 915, 916, 919, 942, 953, 957, 977, 1003, 1005, 1006, 1007, 1008, 1012, 1019, 1020, 1027, 1030, 1039, 1044, 1046, 1057, 1058, 1063, 1087, 1089, 1104, 1115, 1130, 1131, 1135, 1136, 1148, 1161, 1166], "That": [13, 85, 99, 100, 114, 116, 117, 121, 125, 153, 154, 155, 156, 159, 164, 165, 169, 178, 186, 190, 193, 232, 256, 260, 262, 276, 279, 281, 353, 417, 418, 421, 424, 428, 437, 441, 446, 447, 455, 468, 469, 479, 491, 493, 495, 511, 513, 526, 573, 577, 659, 669, 707, 733, 739, 740, 760, 762, 763, 837, 838, 840, 841, 843, 844, 846, 847, 856, 859, 860, 861, 862, 863, 864, 865, 870, 906, 907, 915, 918, 919, 920, 921, 922, 925, 943, 947, 961, 967, 969, 994, 995, 1006, 1032, 1039, 1098, 1100, 1105, 1134, 1141, 1151, 1161], "sloppili": [13, 940], "track": [13, 114, 157, 161, 169, 193, 213, 223, 229, 239, 242, 726, 783, 810, 811, 815, 847, 1019], "opentrain": [13, 22, 28, 138, 151, 191, 198, 216, 350, 361, 1141, 1171], "recip": [13, 39, 146, 150, 154, 155, 343, 344, 429, 594], "sphinx": [14, 17, 23, 39, 66, 150, 151, 166, 348, 764, 1141], "togeth": [14, 24, 43, 50, 105, 107, 111, 112, 121, 125, 144, 161, 164, 165, 169, 174, 184, 186, 190, 194, 206, 215, 232, 259, 261, 278, 279, 281, 296, 305, 308, 312, 350, 360, 406, 439, 440, 516, 526, 545, 567, 585, 586, 588, 589, 739, 741, 774, 787, 810, 837, 838, 896, 897, 915, 916, 946, 960, 984, 990, 994, 996, 999, 1003, 1081, 1114, 1134, 1136, 1144, 1146, 1148, 1161, 1163], "form": [14, 29, 156, 161, 174, 178, 202, 223, 229, 230, 239, 242, 279, 281, 361, 426, 442, 481, 489, 491, 530, 531, 543, 641, 764, 810, 815, 818, 842, 892, 916, 1043, 1062, 1065, 1098, 1100, 1103, 1104, 1110, 1116, 1136, 1141, 1161], "short": [14, 32, 35, 43, 107, 134, 154, 161, 169, 182, 186, 190, 193, 194, 195, 205, 206, 223, 227, 228, 229, 234, 237, 239, 240, 244, 262, 278, 279, 280, 281, 282, 283, 365, 381, 383, 388, 392, 393, 418, 427, 473, 487, 515, 527, 567, 572, 576, 763, 806, 812, 815, 849, 870, 895, 914, 916, 927, 934, 944, 966, 971, 1004, 1018, 1041, 1044, 1060, 1132, 1141, 1143, 1161], "video": [14, 22, 148, 157, 159, 161, 172, 186, 189, 190, 193, 198, 211, 214, 215, 237, 281, 284, 287, 450, 717, 907, 915, 1108, 1115, 1124], "explain": [14, 64, 66, 98, 121, 148, 153, 159, 165, 178, 186, 190, 192, 216, 227, 232, 234, 236, 237, 245, 246, 283, 327, 357, 360, 429, 439, 559, 850, 870, 873, 907, 916, 972, 1055, 1108, 1141, 1166], "case": [14, 24, 43, 98, 105, 107, 110, 114, 119, 122, 134, 153, 154, 155, 158, 161, 164, 165, 169, 175, 178, 190, 192, 194, 196, 216, 229, 230, 236, 242, 246, 249, 258, 259, 261, 262, 270, 273, 276, 288, 305, 308, 318, 350, 372, 379, 398, 400, 431, 433, 451, 454, 457, 466, 473, 477, 480, 515, 523, 524, 526, 532, 534, 553, 567, 574, 584, 623, 629, 649, 661, 667, 684, 695, 707, 714, 717, 725, 739, 749, 751, 761, 762, 763, 783, 810, 823, 826, 838, 842, 845, 852, 866, 882, 899, 906, 907, 916, 926, 927, 933, 944, 963, 968, 982, 989, 991, 994, 996, 998, 1000, 1007, 1008, 1038, 1039, 1050, 1054, 1077, 1116, 1132, 1141, 1149, 1164], "netide": 14, "f\u00f6rderantrag": 14, "miscellan": [14, 29, 91, 137, 198, 211, 214, 221, 224, 225, 227, 233, 235, 237, 238, 243, 244, 245, 248, 251, 253, 261, 266, 268, 272, 273, 276, 286, 287, 289, 292, 295, 309, 314, 317, 319, 320, 321, 323, 326, 328, 329, 330, 331, 332, 333, 342, 350, 361, 473, 487, 515, 516, 517, 518, 519, 520, 521, 522, 525, 532, 534, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 676, 707, 723, 732, 740, 748, 760, 762, 763, 764, 906, 936, 937, 942, 945, 947, 961, 964, 1009, 1031, 1061, 1065, 1066, 1067, 1077, 1080, 1088, 1089, 1091, 1092, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1110, 1114, 1115, 1121, 1124, 1128, 1135, 1138, 1145, 1160, 1161, 1162, 1171], "s5": [16, 23, 150, 978, 982, 1175], "slide": [16, 23, 24, 27, 37, 150, 151, 154, 172, 179, 181, 186, 190, 194, 195, 196, 205, 206, 215, 216, 232, 258, 259, 270, 353, 356, 361, 562, 822, 979, 983, 1080, 1121, 1157, 1158, 1159, 1167, 1168, 1174, 1175, 1177, 1178, 1179], "work": [16, 24, 27, 40, 42, 43, 44, 57, 62, 72, 79, 81, 99, 100, 105, 107, 110, 117, 119, 133, 134, 136, 139, 140, 150, 153, 154, 155, 157, 159, 160, 161, 164, 165, 169, 178, 182, 183, 184, 193, 194, 196, 206, 211, 213, 215, 223, 224, 227, 229, 230, 232, 237, 239, 242, 246, 251, 260, 263, 269, 270, 272, 273, 276, 283, 284, 287, 288, 290, 291, 293, 321, 322, 328, 342, 347, 348, 350, 355, 356, 361, 362, 406, 407, 427, 429, 439, 449, 451, 452, 454, 455, 457, 458, 460, 461, 463, 465, 468, 469, 472, 473, 474, 487, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525, 526, 562, 567, 587, 616, 623, 656, 658, 660, 668, 670, 672, 715, 721, 725, 726, 727, 731, 733, 740, 759, 762, 763, 764, 773, 778, 788, 790, 794, 808, 810, 815, 818, 832, 836, 837, 838, 839, 840, 843, 844, 845, 847, 849, 854, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 870, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 890, 892, 894, 903, 906, 907, 915, 919, 923, 927, 929, 934, 935, 937, 940, 943, 945, 947, 952, 961, 964, 966, 967, 969, 982, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 999, 1001, 1007, 1030, 1033, 1034, 1035, 1054, 1060, 1062, 1063, 1085, 1095, 1096, 1108, 1115, 1124, 1126, 1127, 1129, 1130, 1132, 1141, 1150, 1161, 1166, 1167, 1173], "progress": [16, 150, 361, 764, 872, 1150], "web": [16, 23, 73, 75, 79, 137, 151, 161, 190, 193, 214, 217, 263, 287, 309, 763, 1108, 1115, 1121, 1124], "note": [16, 32, 36, 40, 44, 61, 64, 114, 116, 129, 133, 137, 139, 153, 154, 156, 161, 174, 175, 186, 205, 213, 215, 226, 227, 229, 254, 283, 288, 305, 308, 309, 333, 334, 451, 455, 457, 461, 491, 539, 562, 571, 572, 578, 583, 642, 684, 704, 705, 706, 717, 719, 725, 726, 727, 729, 769, 810, 827, 837, 838, 897, 915, 933, 944, 996, 1049, 1052, 1054, 1058, 1113, 1124, 1126, 1129, 1148], "screencast": [16, 23, 137, 1108], "written": [16, 42, 43, 79, 107, 117, 124, 153, 154, 159, 169, 192, 242, 344, 406, 409, 425, 433, 435, 439, 452, 489, 579, 645, 658, 678, 764, 849, 936, 943, 978, 985, 986, 994, 1026, 1033, 1063, 1163], "draft": [16, 29, 186, 762, 763, 906, 1060, 1106, 1107, 1122], "convers": [17, 193, 205, 212, 215, 216, 223, 228, 229, 232, 235, 238, 239, 244, 247, 250, 268, 279, 281, 285, 289, 295, 307, 311, 315, 317, 323, 342, 366, 381, 395, 404, 411, 417, 421, 424, 428, 435, 437, 441, 446, 447, 451, 488, 550, 638, 642, 666, 668, 669, 671, 707, 760, 762, 763, 813, 1058, 1075, 1079, 1082, 1093], "old": [17, 29, 122, 151, 154, 156, 159, 184, 194, 226, 227, 242, 274, 284, 288, 313, 361, 384, 423, 444, 449, 472, 545, 598, 605, 610, 625, 657, 663, 666, 671, 672, 713, 731, 742, 767, 773, 783, 802, 907, 915, 971, 1047, 1053, 1065, 1086, 1132, 1162], "latex": [17, 23, 24, 545], "beamer": [17, 23, 24], "To": [17, 29, 45, 62, 79, 103, 114, 122, 137, 153, 154, 156, 158, 169, 178, 182, 186, 201, 213, 223, 229, 239, 242, 243, 246, 250, 258, 259, 261, 263, 283, 298, 301, 305, 375, 378, 433, 445, 469, 514, 527, 623, 637, 648, 664, 666, 707, 723, 758, 762, 763, 783, 787, 798, 810, 839, 845, 906, 907, 914, 915, 920, 922, 935, 944, 1000, 1009, 1023, 1067, 1073, 1096, 1101, 1102, 1103, 1106, 1114, 1121], "put": [17, 58, 70, 81, 125, 129, 147, 153, 154, 155, 182, 190, 305, 308, 451, 455, 459, 460, 523, 567, 653, 677, 713, 739, 779, 787, 800, 802, 827, 907, 915, 944, 969, 984, 999, 1002, 1007, 1065, 1146], "more": [17, 21, 27, 29, 43, 45, 59, 60, 63, 66, 70, 79, 83, 91, 98, 102, 107, 113, 116, 117, 120, 121, 124, 134, 147, 151, 154, 155, 158, 159, 161, 164, 165, 167, 169, 175, 176, 178, 183, 186, 190, 191, 192, 193, 194, 195, 196, 198, 200, 205, 206, 211, 213, 214, 215, 216, 217, 221, 224, 227, 228, 230, 231, 232, 233, 235, 236, 237, 240, 243, 244, 245, 247, 248, 250, 254, 258, 259, 260, 261, 265, 268, 269, 279, 280, 281, 288, 290, 291, 295, 297, 305, 309, 313, 317, 318, 319, 323, 328, 329, 330, 331, 332, 333, 345, 347, 353, 360, 361, 372, 377, 381, 384, 388, 398, 399, 400, 409, 411, 417, 418, 421, 424, 428, 429, 434, 435, 437, 439, 441, 443, 444, 445, 446, 447, 451, 454, 456, 457, 460, 473, 480, 487, 489, 493, 494, 505, 510, 515, 523, 525, 545, 562, 567, 571, 575, 624, 638, 639, 640, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 666, 669, 676, 677, 688, 695, 704, 707, 708, 716, 717, 719, 721, 723, 724, 726, 727, 730, 732, 740, 741, 748, 760, 761, 762, 763, 766, 769, 781, 783, 788, 794, 796, 798, 802, 804, 806, 810, 836, 841, 846, 870, 873, 903, 907, 909, 913, 914, 915, 916, 927, 933, 936, 939, 942, 953, 955, 966, 970, 972, 978, 982, 984, 985, 986, 994, 996, 1000, 1001, 1002, 1008, 1010, 1012, 1016, 1017, 1018, 1019, 1023, 1026, 1027, 1031, 1032, 1034, 1038, 1039, 1050, 1061, 1064, 1065, 1066, 1067, 1077, 1079, 1080, 1086, 1088, 1089, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1109, 1110, 1113, 1114, 1115, 1117, 1118, 1121, 1122, 1124, 1127, 1131, 1135, 1136, 1138, 1140, 1142, 1143, 1145, 1150, 1154, 1161, 1163, 1164, 1171], "precis": [17, 186, 190, 246, 263, 287, 309, 316, 365, 383, 647, 742, 810, 1053, 1108], "restructuredtext": [17, 23, 32, 33, 34, 35, 36, 38, 764], "turn": [17, 76, 111, 112, 154, 156, 159, 164, 165, 186, 190, 206, 215, 232, 278, 342, 439, 454, 455, 491, 516, 517, 674, 689, 866, 907, 914, 915, 916, 984, 986, 990, 1000, 1008, 1013, 1014, 1024, 1026, 1134], "rst2s5": 17, "tool": [17, 32, 62, 69, 116, 161, 165, 170, 186, 194, 196, 206, 216, 242, 260, 269, 284, 289, 290, 307, 322, 342, 345, 347, 360, 361, 362, 407, 442, 444, 445, 449, 641, 695, 713, 763, 834, 840, 841, 854, 906, 916, 927, 930, 985, 986, 994, 998, 1032, 1033, 1036, 1063, 1127, 1135, 1159, 1161, 1163, 1165, 1172], "thi": [17, 24, 28, 29, 30, 31, 39, 40, 43, 44, 45, 50, 53, 54, 57, 59, 60, 62, 63, 64, 66, 70, 78, 79, 85, 86, 90, 91, 98, 105, 107, 110, 111, 112, 114, 116, 125, 134, 137, 144, 148, 151, 153, 154, 155, 157, 158, 159, 160, 169, 171, 173, 174, 176, 178, 180, 181, 182, 183, 186, 190, 191, 192, 193, 194, 195, 196, 206, 213, 215, 216, 223, 226, 227, 229, 232, 234, 236, 237, 239, 242, 245, 246, 252, 255, 259, 261, 263, 270, 278, 279, 281, 283, 288, 298, 301, 305, 306, 308, 316, 319, 325, 328, 333, 342, 345, 348, 360, 361, 363, 367, 374, 375, 388, 397, 398, 422, 426, 427, 429, 430, 431, 433, 438, 439, 449, 453, 454, 459, 460, 461, 465, 471, 479, 480, 491, 493, 495, 513, 515, 524, 525, 528, 529, 530, 531, 532, 533, 534, 535, 539, 540, 543, 544, 545, 546, 549, 552, 553, 555, 556, 558, 559, 561, 562, 564, 567, 569, 570, 571, 573, 574, 577, 579, 580, 582, 585, 590, 593, 596, 598, 600, 601, 604, 612, 616, 618, 622, 624, 629, 631, 632, 634, 635, 639, 642, 645, 649, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 667, 676, 677, 678, 689, 695, 697, 698, 701, 702, 703, 704, 705, 706, 707, 712, 715, 717, 719, 720, 723, 725, 727, 729, 730, 731, 732, 739, 740, 741, 742, 747, 748, 760, 761, 762, 763, 764, 769, 774, 779, 783, 785, 792, 806, 810, 815, 822, 830, 837, 838, 841, 842, 849, 852, 854, 855, 864, 866, 867, 870, 875, 877, 907, 912, 913, 914, 915, 916, 919, 926, 927, 933, 940, 941, 942, 943, 944, 948, 951, 960, 963, 972, 973, 976, 977, 980, 982, 985, 986, 988, 994, 996, 997, 998, 999, 1000, 1002, 1003, 1004, 1005, 1006, 1009, 1012, 1014, 1016, 1018, 1020, 1027, 1030, 1031, 1032, 1034, 1036, 1043, 1046, 1048, 1049, 1050, 1053, 1054, 1056, 1058, 1059, 1060, 1064, 1080, 1095, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1121, 1122, 1123, 1124, 1125, 1126, 1130, 1133, 1135, 1136, 1141, 1143, 1146, 1147, 1148, 1150, 1152, 1153, 1161, 1163, 1164, 1166, 1169, 1170, 1176], "sens": [17, 79, 156, 158, 175, 178, 183, 186, 205, 464, 472, 489, 574, 585, 592, 639, 667, 680, 771, 810, 849, 916, 940, 963, 970, 977, 1027, 1057, 1113, 1164], "entir": [17, 24, 30, 81, 111, 112, 147, 151, 154, 155, 156, 159, 165, 169, 178, 183, 190, 193, 211, 214, 215, 223, 237, 240, 243, 246, 258, 259, 261, 263, 273, 280, 283, 287, 293, 298, 301, 305, 309, 315, 321, 379, 408, 412, 419, 422, 427, 435, 443, 451, 469, 675, 706, 726, 810, 837, 838, 843, 867, 872, 881, 889, 907, 914, 916, 919, 925, 942, 953, 986, 1015, 1019, 1033, 1038, 1039, 1056, 1058, 1077, 1108, 1141, 1144, 1147, 1164], "site": [17, 23, 27, 39, 62, 66, 137, 150, 151, 154, 166, 169, 181, 182, 183, 187, 213, 223, 229, 239, 242, 305, 322, 584, 730, 849, 1112, 1129, 1130, 1136, 1143, 1150], "massag": [17, 32, 144, 165, 183, 259, 261, 764, 914, 986], "itself": [17, 27, 121, 124, 134, 154, 156, 182, 186, 192, 223, 229, 239, 242, 288, 316, 331, 377, 409, 445, 454, 460, 488, 489, 511, 526, 572, 579, 638, 715, 730, 739, 742, 785, 788, 810, 830, 836, 837, 838, 852, 870, 899, 969, 982, 996, 1024, 1027, 1032, 1053, 1093, 1134, 1150], "upon": [17, 27, 70, 98, 156, 157, 186, 190, 194, 201, 240, 272, 279, 298, 301, 318, 431, 449, 477, 529, 545, 584, 602, 725, 742, 783, 916, 982, 1070, 1134, 1141, 1161], "you": [17, 21, 43, 58, 59, 63, 110, 114, 116, 117, 121, 122, 124, 127, 129, 133, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 169, 170, 174, 175, 176, 178, 182, 183, 186, 190, 192, 193, 194, 206, 211, 213, 214, 215, 216, 223, 226, 229, 230, 232, 236, 237, 239, 240, 242, 246, 254, 263, 270, 273, 276, 279, 281, 283, 287, 309, 318, 328, 333, 339, 342, 345, 347, 350, 373, 374, 387, 403, 429, 433, 449, 491, 510, 511, 512, 513, 517, 520, 523, 524, 526, 559, 570, 571, 577, 582, 585, 586, 588, 589, 603, 624, 632, 639, 645, 653, 654, 658, 675, 681, 709, 719, 730, 758, 759, 761, 783, 785, 802, 810, 815, 836, 837, 838, 841, 842, 845, 849, 850, 856, 860, 862, 864, 870, 871, 872, 874, 875, 876, 877, 881, 882, 907, 910, 914, 915, 916, 917, 918, 919, 921, 923, 926, 927, 931, 933, 937, 942, 944, 952, 953, 954, 955, 956, 960, 984, 985, 986, 987, 989, 992, 996, 999, 1000, 1003, 1008, 1009, 1018, 1020, 1031, 1032, 1036, 1039, 1052, 1058, 1065, 1074, 1076, 1091, 1095, 1096, 1105, 1108, 1114, 1121, 1124, 1130, 1141, 1142, 1143, 1150, 1153, 1161, 1166], "view": [17, 64, 159, 160, 164, 175, 177, 190, 192, 258, 259, 263, 270, 318, 319, 360, 377, 379, 442, 669, 707, 716, 718, 762, 763, 837, 838, 847, 854, 907, 916, 918, 1039, 1107, 1161, 1164, 1166], "state": [17, 45, 116, 121, 150, 161, 166, 186, 194, 216, 223, 226, 229, 239, 240, 242, 382, 399, 431, 449, 516, 517, 521, 522, 569, 675, 709, 739, 768, 806, 827, 841, 899, 909, 953, 957, 968, 969, 1006, 1012], "rather": [17, 66, 86, 129, 133, 134, 154, 156, 157, 158, 159, 160, 161, 164, 165, 169, 178, 182, 186, 190, 206, 215, 233, 234, 308, 328, 353, 365, 407, 439, 440, 449, 467, 518, 519, 520, 521, 522, 527, 562, 569, 571, 585, 592, 603, 623, 648, 654, 668, 689, 739, 741, 783, 810, 815, 847, 849, 895, 907, 914, 915, 916, 918, 925, 930, 953, 954, 981, 985, 1000, 1025, 1032, 1035, 1043, 1083, 1084, 1087, 1098, 1100, 1115, 1122, 1143, 1148, 1161, 1163], "huge": [17, 160, 165, 175, 480, 716, 788, 806, 1031, 1033, 1137], "tabl": [17, 39, 64, 66, 134, 147, 151, 153, 186, 192, 193, 210, 218, 223, 229, 230, 232, 233, 236, 237, 239, 242, 249, 254, 288, 361, 365, 380, 394, 395, 399, 400, 404, 411, 417, 421, 424, 428, 437, 441, 446, 447, 647, 669, 707, 716, 760, 762, 763, 849, 1056, 1065, 1097, 1099, 1120, 1121], "isnot": 17, "big": [17, 105, 134, 151, 154, 155, 161, 186, 190, 210, 216, 230, 237, 240, 283, 309, 342, 388, 433, 445, 524, 574, 604, 667, 731, 930, 1108, 1120, 1176], "fat": [17, 134, 151, 153, 157, 161, 230, 661, 731, 841, 1120], "sai": [17, 24, 66, 67, 107, 125, 134, 142, 153, 154, 155, 156, 158, 159, 160, 161, 164, 165, 169, 174, 175, 186, 190, 227, 232, 254, 273, 276, 280, 282, 283, 304, 305, 328, 342, 433, 439, 445, 455, 465, 469, 478, 489, 495, 510, 512, 524, 553, 562, 571, 581, 629, 642, 654, 663, 667, 695, 699, 701, 702, 703, 705, 710, 717, 720, 721, 726, 769, 783, 810, 849, 852, 854, 889, 907, 914, 916, 927, 931, 942, 944, 954, 966, 977, 981, 987, 996, 999, 1000, 1006, 1010, 1032, 1048, 1060, 1065, 1095, 1116, 1150, 1164], "file": [17, 27, 29, 34, 35, 36, 38, 40, 44, 47, 50, 53, 54, 55, 56, 69, 79, 81, 86, 91, 92, 98, 99, 100, 101, 102, 103, 104, 105, 107, 109, 110, 111, 112, 114, 116, 117, 121, 122, 129, 133, 138, 141, 146, 147, 150, 151, 153, 154, 155, 156, 159, 160, 165, 169, 173, 176, 178, 180, 181, 182, 183, 185, 186, 188, 190, 191, 193, 194, 195, 196, 201, 203, 204, 205, 206, 211, 214, 215, 216, 219, 220, 221, 224, 225, 227, 228, 229, 230, 232, 233, 234, 236, 237, 239, 240, 243, 244, 245, 246, 248, 250, 253, 254, 258, 259, 260, 263, 267, 269, 272, 273, 275, 276, 282, 283, 285, 289, 290, 294, 296, 297, 304, 305, 308, 309, 311, 312, 313, 317, 320, 323, 327, 328, 329, 330, 331, 332, 339, 342, 343, 344, 345, 346, 347, 353, 355, 356, 360, 371, 374, 375, 405, 406, 408, 409, 410, 411, 417, 421, 424, 428, 432, 437, 441, 443, 445, 446, 447, 450, 452, 454, 456, 457, 458, 463, 464, 467, 473, 487, 510, 511, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 546, 549, 552, 554, 555, 558, 561, 564, 567, 572, 574, 586, 587, 588, 589, 595, 647, 651, 658, 661, 669, 684, 707, 713, 717, 727, 740, 760, 761, 762, 763, 766, 771, 772, 776, 777, 779, 780, 787, 788, 791, 801, 806, 812, 814, 817, 819, 825, 826, 828, 831, 834, 835, 836, 839, 840, 842, 843, 844, 846, 847, 849, 850, 852, 853, 854, 855, 856, 857, 858, 860, 861, 862, 863, 866, 868, 869, 870, 874, 878, 879, 880, 881, 882, 884, 887, 890, 895, 898, 903, 906, 907, 910, 914, 915, 916, 917, 919, 920, 922, 923, 929, 930, 933, 934, 935, 944, 947, 948, 951, 952, 958, 961, 964, 967, 969, 973, 975, 976, 977, 980, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 998, 1000, 1001, 1002, 1007, 1008, 1009, 1012, 1015, 1020, 1023, 1026, 1031, 1035, 1037, 1039, 1050, 1056, 1059, 1060, 1066, 1067, 1077, 1080, 1091, 1092, 1095, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1113, 1121, 1122, 1129, 1130, 1133, 1136, 1141, 1142, 1143, 1144, 1147, 1149, 1152, 1158, 1163, 1165, 1166, 1167, 1174, 1175, 1176, 1178], "rst": [17, 23, 32, 34, 35, 36, 38, 116, 138, 150, 173, 180, 185, 188, 194, 242, 252, 316, 350, 546, 549, 552, 555, 558, 561, 564, 973, 976, 980, 1147, 1152], "render": [17, 40, 159, 322], "dure": [17, 27, 45, 46, 105, 107, 144, 153, 154, 155, 156, 160, 161, 165, 169, 174, 186, 190, 242, 345, 408, 412, 413, 427, 439, 444, 488, 495, 521, 524, 605, 623, 680, 719, 806, 810, 815, 842, 848, 914, 916, 925, 986, 1000, 1001, 1020, 1033, 1035, 1050, 1134, 1141], "regular": [17, 154, 178, 189, 203, 219, 226, 227, 234, 253, 254, 256, 258, 259, 268, 287, 288, 317, 323, 367, 433, 451, 582, 584, 716, 761, 798, 810, 855, 889, 892, 894, 903, 916, 927, 977, 978, 1020, 1050, 1052, 1108], "process": [17, 28, 62, 64, 66, 74, 79, 81, 98, 100, 111, 112, 116, 159, 164, 171, 178, 184, 186, 193, 194, 196, 230, 260, 269, 282, 283, 290, 304, 344, 345, 352, 357, 410, 416, 445, 454, 473, 487, 515, 516, 517, 518, 519, 520, 521, 522, 525, 567, 734, 740, 761, 762, 763, 772, 777, 780, 782, 787, 791, 793, 796, 797, 800, 801, 802, 803, 805, 807, 810, 814, 815, 816, 819, 821, 824, 825, 827, 828, 830, 831, 837, 838, 839, 840, 841, 844, 845, 846, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 869, 871, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 890, 906, 915, 918, 919, 920, 921, 922, 925, 929, 930, 931, 935, 936, 937, 939, 940, 942, 944, 945, 947, 952, 953, 954, 961, 966, 967, 969, 970, 971, 978, 981, 982, 984, 986, 988, 989, 990, 991, 992, 993, 994, 995, 1001, 1002, 1011, 1019, 1032, 1033, 1037, 1087, 1153, 1166, 1175, 1176], "mean": [17, 29, 74, 75, 111, 112, 116, 121, 154, 156, 159, 161, 175, 177, 178, 190, 210, 213, 214, 227, 229, 242, 246, 273, 288, 296, 304, 308, 312, 327, 328, 365, 386, 387, 388, 410, 429, 434, 439, 493, 571, 579, 582, 583, 649, 695, 717, 721, 729, 730, 763, 769, 785, 845, 852, 855, 857, 858, 866, 907, 914, 915, 916, 943, 950, 966, 970, 972, 1000, 1003, 1012, 1027, 1035, 1038, 1052, 1053, 1058, 1086, 1106, 1109, 1113, 1115, 1116, 1122, 1127, 1148, 1163, 1166], "specif": [17, 64, 114, 157, 223, 229, 230, 239, 242, 288, 294, 305, 328, 362, 410, 427, 439, 469, 516, 519, 521, 524, 670, 713, 727, 761, 769, 783, 806, 810, 836, 846, 907, 914, 916, 930, 936, 952, 953, 978, 984, 996, 1007, 1015, 1016, 1117, 1133, 1141, 1176, 1177], "markup": [17, 39], "class": [17, 21, 29, 42, 44, 55, 58, 64, 70, 71, 74, 75, 86, 93, 98, 107, 108, 109, 111, 112, 113, 116, 117, 121, 122, 124, 125, 127, 129, 133, 134, 161, 172, 173, 174, 176, 181, 190, 191, 192, 193, 195, 197, 198, 210, 214, 216, 223, 226, 227, 229, 230, 234, 238, 240, 241, 244, 246, 249, 252, 254, 256, 258, 259, 261, 266, 267, 271, 273, 274, 276, 280, 281, 282, 283, 285, 286, 287, 288, 292, 294, 304, 305, 306, 308, 309, 310, 314, 316, 318, 319, 320, 321, 322, 326, 328, 330, 336, 337, 344, 345, 346, 353, 379, 425, 449, 451, 459, 467, 468, 469, 470, 471, 473, 474, 476, 477, 481, 487, 488, 489, 491, 492, 494, 495, 496, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 525, 526, 532, 534, 539, 545, 553, 556, 559, 565, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 580, 581, 583, 585, 590, 592, 593, 596, 602, 611, 612, 618, 622, 628, 631, 634, 635, 640, 641, 642, 644, 645, 649, 650, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 671, 672, 673, 674, 675, 676, 677, 680, 684, 689, 691, 692, 693, 695, 697, 698, 701, 702, 703, 704, 705, 706, 707, 709, 710, 712, 714, 721, 723, 726, 727, 730, 731, 732, 739, 740, 741, 747, 748, 749, 751, 753, 757, 758, 759, 760, 762, 763, 765, 907, 914, 915, 916, 948, 950, 951, 1005, 1007, 1009, 1015, 1016, 1017, 1018, 1019, 1022, 1023, 1028, 1029, 1030, 1031, 1033, 1036, 1038, 1039, 1047, 1067, 1094, 1095, 1096, 1101, 1103, 1106, 1121, 1135, 1141, 1142, 1153, 1161, 1171], "handout": [17, 116], "warn": [17, 32, 40, 134, 150, 165, 206, 216, 267, 279, 339, 350, 375, 399, 430, 431, 433, 454, 468, 523, 525, 569, 573, 624, 668, 680, 763, 779, 785, 788, 847, 906, 936, 947, 961, 983, 1007, 1058, 1136], "produc": [17, 109, 174, 176, 215, 229, 427, 439, 444, 695, 701, 703, 739, 741, 927, 957, 958, 976, 984, 987, 1000, 1013, 1014, 1047, 1050, 1052, 1116], "error": [17, 21, 27, 29, 46, 66, 89, 98, 117, 121, 122, 133, 150, 153, 154, 155, 156, 159, 160, 169, 173, 176, 184, 187, 190, 193, 200, 211, 215, 221, 223, 226, 230, 231, 232, 236, 239, 242, 246, 249, 251, 254, 263, 264, 267, 270, 273, 276, 287, 288, 301, 306, 327, 342, 347, 349, 353, 372, 375, 377, 384, 388, 402, 403, 409, 415, 416, 418, 431, 432, 433, 436, 453, 454, 455, 457, 458, 459, 460, 463, 470, 474, 493, 494, 495, 507, 515, 526, 545, 562, 567, 569, 571, 572, 576, 577, 578, 579, 580, 582, 584, 592, 595, 600, 642, 644, 645, 654, 661, 668, 671, 675, 677, 678, 679, 680, 684, 704, 705, 706, 714, 717, 719, 721, 726, 727, 729, 740, 741, 743, 761, 762, 763, 766, 773, 788, 798, 802, 806, 810, 826, 840, 843, 844, 850, 853, 906, 907, 915, 917, 929, 931, 932, 933, 934, 935, 936, 944, 945, 947, 955, 961, 963, 964, 967, 968, 969, 977, 981, 982, 986, 987, 996, 1001, 1007, 1037, 1038, 1049, 1050, 1054, 1058, 1060, 1067, 1080, 1106, 1108, 1115, 1136, 1141, 1143, 1148, 1161], "output": [17, 23, 33, 40, 51, 53, 55, 56, 62, 64, 86, 87, 108, 127, 133, 134, 150, 156, 158, 159, 160, 173, 176, 182, 194, 195, 206, 215, 223, 229, 232, 233, 239, 242, 270, 327, 342, 347, 365, 366, 371, 372, 373, 374, 378, 410, 444, 445, 451, 452, 453, 493, 495, 510, 525, 528, 529, 530, 531, 543, 545, 553, 556, 582, 632, 650, 651, 664, 712, 717, 725, 763, 768, 823, 834, 841, 850, 853, 854, 855, 866, 870, 892, 896, 897, 902, 903, 907, 917, 928, 936, 939, 942, 950, 953, 954, 958, 978, 981, 982, 984, 1014, 1053, 1058, 1059, 1069, 1070, 1072, 1073, 1074, 1075, 1077, 1082, 1088, 1090, 1092, 1097, 1098, 1099, 1100, 1111, 1114, 1115, 1120, 1124, 1133, 1136, 1149, 1156, 1172], "must": [17, 39, 43, 44, 111, 112, 116, 122, 157, 161, 176, 182, 186, 187, 189, 190, 193, 197, 198, 211, 213, 215, 223, 229, 230, 237, 239, 240, 242, 263, 288, 305, 365, 382, 385, 399, 407, 425, 427, 442, 449, 451, 455, 461, 472, 477, 478, 491, 494, 495, 508, 509, 523, 526, 529, 530, 531, 543, 553, 579, 580, 582, 584, 594, 595, 629, 642, 649, 656, 663, 671, 672, 674, 675, 695, 719, 721, 733, 737, 763, 788, 794, 802, 808, 815, 837, 838, 854, 864, 872, 906, 917, 923, 926, 936, 937, 940, 945, 947, 955, 964, 966, 968, 978, 984, 987, 1002, 1007, 1008, 1025, 1030, 1036, 1049, 1050, 1052, 1053, 1055, 1058, 1087, 1108, 1142, 1153], "role": [17, 39, 66, 157, 161, 445, 526, 907], "somewher": [17, 175, 194, 206, 213, 246, 258, 259, 327, 339, 410, 427, 429, 449, 474, 495, 562, 695, 953, 1010, 1035, 1121], "top": [17, 28, 32, 34, 35, 38, 39, 50, 153, 154, 156, 157, 169, 175, 177, 178, 194, 196, 223, 229, 232, 239, 242, 452, 813, 822, 907, 927, 966, 968, 1007, 1015, 1037, 1083, 1087, 1161, 1165, 1167, 1172], "insid": [17, 35, 39, 42, 50, 116, 121, 134, 153, 154, 182, 184, 206, 223, 229, 239, 242, 259, 279, 281, 296, 305, 312, 327, 342, 371, 375, 385, 403, 406, 408, 409, 427, 432, 451, 513, 524, 529, 577, 583, 585, 741, 761, 771, 781, 849, 879, 889, 914, 916, 939, 953, 972, 998, 1003, 1006, 1015, 1052, 1058, 1126, 1129, 1133, 1144, 1163, 1166], "ideal": [17, 165, 181, 223, 229, 239, 242, 259, 261, 438, 454, 465, 472, 520, 641, 695, 769, 788, 806, 810, 903, 923, 987, 1027, 1029], "slideshow": [17, 23, 233, 245, 272, 282, 293, 301, 304, 308, 314, 315, 320, 321, 326, 767, 770, 772, 775, 777, 780, 782, 789, 791, 793, 795, 797, 799, 801, 803, 805, 807, 809, 814, 816, 819, 821, 825, 828, 831, 1051, 1138, 1145], "manual": [17, 62, 64, 117, 127, 129, 133, 151, 161, 169, 192, 193, 223, 224, 229, 232, 239, 242, 272, 274, 373, 374, 377, 384, 422, 427, 451, 568, 610, 660, 667, 678, 704, 716, 717, 748, 749, 751, 752, 762, 763, 765, 766, 769, 810, 837, 838, 907, 914, 915, 937, 940, 953, 955, 957, 998, 1000, 1005, 1013, 1014, 1018, 1022, 1063], "theme": [17, 66, 334, 1039, 1058], "url": [17, 151, 158, 160, 169, 181, 524, 1006, 1063], "_static": 17, "ui": [17, 32, 60, 161, 388, 647], "default": [17, 23, 58, 62, 98, 111, 112, 114, 116, 124, 125, 154, 155, 160, 161, 165, 171, 182, 191, 193, 195, 202, 204, 215, 223, 226, 229, 232, 235, 238, 239, 242, 246, 249, 252, 257, 260, 267, 269, 270, 274, 278, 279, 281, 284, 288, 290, 291, 310, 316, 319, 322, 335, 342, 388, 399, 431, 439, 445, 451, 452, 454, 457, 461, 464, 470, 473, 487, 489, 498, 499, 515, 525, 567, 569, 570, 575, 576, 579, 580, 604, 623, 624, 640, 645, 647, 649, 652, 653, 654, 655, 657, 659, 660, 661, 662, 663, 664, 667, 668, 675, 676, 705, 707, 723, 732, 737, 739, 740, 741, 747, 748, 753, 760, 762, 763, 806, 834, 837, 838, 840, 852, 865, 870, 889, 901, 902, 906, 907, 909, 914, 915, 917, 923, 926, 940, 944, 950, 953, 955, 957, 969, 981, 983, 985, 987, 998, 1027, 1029, 1035, 1054, 1056, 1058, 1063, 1099, 1116, 1126, 1129, 1131, 1136, 1141, 1143, 1161], "given": [17, 39, 59, 63, 70, 82, 103, 107, 108, 111, 112, 139, 154, 156, 159, 161, 165, 175, 223, 229, 239, 242, 246, 270, 278, 279, 281, 288, 316, 328, 375, 390, 433, 492, 521, 524, 526, 545, 569, 638, 649, 674, 761, 771, 781, 792, 810, 847, 852, 861, 863, 870, 892, 914, 994, 1006, 1093, 1102, 1108, 1110, 1116, 1127, 1130, 1164, 1176], "path": [17, 21, 98, 100, 116, 122, 142, 143, 150, 159, 182, 186, 194, 197, 214, 225, 226, 227, 231, 234, 238, 239, 242, 260, 269, 270, 290, 291, 294, 296, 297, 312, 313, 316, 323, 327, 328, 333, 335, 342, 347, 409, 445, 451, 453, 456, 457, 459, 473, 487, 515, 516, 517, 518, 519, 520, 521, 522, 525, 526, 527, 567, 592, 724, 740, 762, 763, 774, 788, 800, 810, 836, 837, 838, 839, 840, 843, 844, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 870, 871, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 890, 906, 926, 929, 935, 936, 937, 945, 946, 947, 961, 963, 964, 965, 967, 969, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 998, 1005, 1015, 1032, 1035, 1096, 1136, 1141, 1143, 1151, 1163], "commit": [17, 46, 78, 114, 136, 157, 160, 168, 169, 211, 215, 216, 227, 230, 240, 350, 783, 1108, 1117, 1120, 1141, 1173], "place": [17, 55, 116, 129, 142, 151, 155, 156, 158, 159, 160, 161, 169, 174, 183, 187, 210, 226, 232, 242, 278, 279, 365, 381, 403, 410, 427, 450, 459, 463, 467, 491, 493, 507, 526, 539, 584, 598, 600, 601, 612, 623, 631, 634, 635, 645, 664, 730, 733, 741, 758, 761, 763, 788, 810, 839, 860, 861, 862, 863, 914, 915, 923, 969, 999, 1001, 1010, 1040, 1049, 1053, 1055, 1073, 1130, 1143], "_download": 17, "7a046b2e956b892f20b3485964f7b2cf": 17, "rel": [17, 79, 100, 116, 154, 161, 190, 206, 227, 260, 269, 270, 290, 291, 360, 473, 487, 515, 516, 517, 518, 519, 520, 521, 522, 525, 567, 684, 689, 740, 762, 763, 810, 837, 838, 839, 840, 843, 844, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 890, 906, 914, 926, 929, 935, 937, 945, 947, 961, 964, 967, 969, 986, 988, 989, 990, 991, 992, 993, 994, 995, 1001, 1112, 1113, 1120, 1133], "up": [17, 21, 27, 32, 34, 35, 38, 43, 45, 53, 79, 114, 125, 129, 133, 144, 151, 153, 154, 155, 157, 159, 161, 164, 169, 173, 174, 205, 211, 216, 221, 223, 227, 229, 239, 242, 254, 259, 261, 270, 279, 305, 318, 327, 345, 349, 355, 356, 423, 430, 439, 440, 445, 449, 453, 454, 474, 523, 524, 525, 526, 539, 562, 586, 587, 588, 589, 592, 639, 644, 709, 712, 725, 726, 739, 761, 769, 773, 778, 779, 781, 792, 794, 802, 806, 810, 811, 849, 870, 871, 889, 902, 907, 909, 914, 915, 916, 923, 933, 966, 972, 977, 982, 984, 987, 996, 1005, 1008, 1019, 1023, 1029, 1052, 1065, 1069, 1086, 1091, 1103, 1108, 1113, 1116, 1124, 1136, 1142, 1148, 1153, 1164], "uri": 17, "well": [17, 42, 66, 154, 156, 159, 160, 161, 165, 178, 182, 190, 213, 215, 242, 278, 280, 288, 296, 305, 312, 328, 388, 410, 439, 449, 477, 517, 523, 526, 527, 550, 570, 574, 585, 599, 667, 674, 681, 704, 717, 727, 731, 835, 854, 870, 903, 910, 915, 916, 927, 940, 942, 960, 984, 986, 999, 1007, 1008, 1011, 1015, 1018, 1022, 1025, 1028, 1039, 1043, 1053, 1111, 1113, 1121, 1137, 1163], "blah": [19, 23, 39, 63, 66, 136, 154, 157, 176, 187, 194, 197, 202, 210, 213, 219, 223, 229, 230, 232, 234, 239, 242, 249, 252, 264, 271, 274, 284, 288, 306, 316, 322, 334, 335, 342, 350, 353, 433, 680, 743, 761, 766, 774, 933, 934, 977, 978, 1003, 1038, 1044, 1063, 1124], "watch": [20, 32, 155, 156, 157, 175, 182, 186, 190, 191, 195, 281, 283, 287, 450, 717, 907, 915, 951, 1011, 1032, 1134], "w5g8k7a2gbg": 20, "bore": [20, 215, 237, 251, 267, 293, 870, 978, 982, 1039, 1108], "good": [20, 27, 29, 43, 98, 116, 151, 153, 154, 155, 156, 161, 169, 178, 186, 190, 193, 211, 214, 215, 223, 227, 232, 233, 234, 236, 237, 240, 246, 261, 263, 273, 276, 279, 281, 287, 288, 309, 318, 361, 384, 388, 429, 433, 435, 443, 444, 449, 472, 473, 487, 515, 516, 517, 518, 519, 520, 521, 522, 525, 532, 534, 550, 567, 571, 575, 576, 590, 593, 596, 612, 618, 622, 625, 631, 634, 635, 640, 644, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 676, 678, 707, 718, 723, 729, 732, 738, 740, 742, 748, 751, 760, 762, 763, 767, 769, 802, 810, 815, 835, 849, 853, 903, 907, 915, 916, 940, 942, 959, 968, 971, 972, 978, 981, 1007, 1020, 1038, 1039, 1050, 1053, 1055, 1058, 1070, 1080, 1107, 1108, 1115, 1134, 1163], "j2hzby8e4yq": 20, "pov": 20, "classmethod": [21, 267], "staticmethod": [21, 267], "member": [21, 35, 38, 43, 57, 64, 111, 112, 116, 169, 175, 176, 177, 187, 192, 214, 232, 244, 257, 272, 279, 288, 319, 346, 418, 427, 434, 471, 513, 515, 518, 521, 545, 559, 567, 569, 570, 572, 573, 574, 575, 581, 585, 586, 588, 590, 623, 624, 628, 649, 652, 655, 656, 657, 659, 660, 661, 662, 663, 664, 667, 675, 679, 680, 689, 695, 705, 721, 727, 759, 761, 763, 771, 776, 778, 798, 806, 810, 823, 829, 836, 837, 838, 853, 854, 855, 856, 857, 858, 864, 899, 903, 914, 942, 996, 1057, 1133, 1153], "final": [21, 38, 42, 62, 79, 107, 150, 176, 186, 190, 193, 213, 215, 223, 229, 230, 239, 244, 257, 263, 287, 309, 319, 451, 524, 526, 591, 592, 641, 667, 678, 707, 762, 763, 773, 804, 810, 837, 838, 903, 915, 916, 984, 1001, 1005, 1018, 1070, 1086, 1108, 1161], "exec": [21, 29, 161, 186, 195, 226, 240, 241, 249, 256, 268, 272, 274, 282, 283, 284, 288, 295, 304, 308, 315, 317, 763, 898, 903, 936, 939, 960, 984, 1009, 1106, 1174], "dict": [21, 173, 186, 187, 191, 202, 204, 205, 210, 213, 227, 228, 229, 230, 233, 235, 238, 239, 240, 244, 250, 264, 267, 274, 284, 288, 294, 299, 306, 310, 316, 321, 323, 334, 337, 342, 667, 1005, 1008, 1020, 1021, 1030, 1056], "There": [21, 45, 55, 57, 66, 69, 82, 98, 125, 151, 153, 155, 156, 157, 158, 161, 165, 166, 182, 183, 187, 189, 190, 193, 197, 198, 211, 216, 232, 235, 236, 237, 240, 246, 273, 276, 279, 280, 281, 282, 283, 304, 305, 319, 328, 363, 373, 379, 388, 403, 406, 427, 429, 436, 439, 450, 451, 455, 464, 469, 494, 495, 545, 553, 570, 575, 620, 645, 663, 664, 676, 678, 684, 707, 712, 723, 727, 731, 732, 740, 760, 762, 763, 783, 810, 815, 841, 870, 907, 914, 915, 960, 970, 981, 982, 1033, 1039, 1050, 1108, 1117, 1142, 1148], "half": [21, 36, 154, 155, 156, 216, 435, 454, 808, 849, 915, 968, 1005], "heart": [21, 32, 38, 144, 454, 849, 1114], "split": [21, 151, 174, 177, 210, 214, 219, 220, 223, 226, 227, 229, 234, 238, 244, 252, 255, 267, 272, 274, 288, 294, 310, 317, 322, 333, 342, 427, 451, 473, 545, 1005, 1114], "pimp": 21, "elabor": [21, 165, 230, 240, 429, 452, 915], "namespac": [21, 186, 223, 229, 236, 239, 242, 246, 257, 267, 474, 476, 491, 527, 528, 529, 530, 531, 533, 543, 544, 562, 584, 592, 597, 598, 599, 600, 601, 607, 608, 610, 611, 614, 615, 616, 620, 634, 651, 657, 658, 667, 682, 704, 714, 717, 739, 741, 742, 914, 948, 951, 963, 965, 1015], "__init__": [21, 64, 150, 173, 174, 185, 187, 190, 192, 210, 213, 214, 226, 227, 229, 236, 239, 242, 246, 252, 255, 264, 267, 274, 284, 288, 306, 310, 451, 1005, 1006, 1007, 1015, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1028, 1029, 1141], "__all__": [21, 242, 246], "etc": [21, 23, 29, 64, 91, 101, 116, 143, 147, 151, 155, 159, 168, 171, 172, 176, 183, 190, 193, 197, 198, 200, 203, 204, 211, 212, 214, 215, 217, 221, 224, 226, 227, 229, 233, 234, 237, 243, 244, 245, 246, 248, 249, 251, 253, 256, 266, 267, 270, 273, 274, 276, 284, 286, 287, 289, 292, 293, 309, 310, 314, 315, 316, 320, 321, 322, 326, 328, 329, 330, 331, 332, 333, 342, 347, 350, 360, 383, 388, 444, 454, 462, 476, 559, 647, 709, 715, 742, 761, 763, 769, 783, 810, 822, 832, 840, 842, 845, 847, 850, 852, 853, 854, 855, 866, 870, 873, 884, 887, 889, 890, 892, 894, 895, 896, 897, 898, 899, 901, 903, 906, 916, 917, 918, 926, 927, 930, 931, 932, 937, 943, 952, 963, 977, 978, 982, 984, 1005, 1007, 1009, 1016, 1017, 1018, 1019, 1023, 1031, 1042, 1051, 1054, 1058, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1118, 1121, 1122, 1128, 1133, 1135, 1156, 1157, 1165, 1167, 1171, 1172, 1175, 1177], "user": [21, 23, 29, 31, 47, 53, 60, 64, 66, 85, 102, 103, 111, 112, 116, 122, 138, 140, 150, 151, 153, 154, 155, 156, 158, 159, 161, 169, 176, 182, 185, 186, 187, 190, 194, 201, 210, 213, 215, 217, 226, 232, 234, 239, 240, 242, 243, 245, 246, 249, 252, 254, 263, 264, 267, 270, 273, 274, 276, 284, 288, 291, 298, 299, 301, 305, 310, 316, 318, 322, 327, 339, 342, 351, 407, 438, 449, 451, 452, 454, 459, 467, 477, 494, 495, 515, 529, 545, 567, 570, 571, 577, 584, 628, 632, 651, 653, 654, 655, 656, 663, 664, 680, 684, 716, 727, 740, 762, 763, 769, 771, 781, 783, 808, 810, 823, 824, 837, 838, 840, 844, 848, 849, 850, 854, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 870, 894, 898, 901, 906, 907, 908, 917, 923, 930, 935, 936, 937, 940, 942, 945, 947, 952, 961, 964, 965, 967, 969, 970, 981, 984, 998, 1000, 1001, 1002, 1005, 1022, 1023, 1060, 1067, 1069, 1070, 1074, 1086, 1087, 1093, 1098, 1100, 1103, 1105, 1106, 1119, 1124, 1127, 1131, 1134, 1143, 1150, 1161], "import": [21, 29, 64, 66, 142, 150, 156, 161, 164, 174, 175, 176, 177, 186, 187, 190, 192, 193, 198, 202, 204, 205, 206, 214, 218, 219, 220, 225, 226, 227, 229, 234, 236, 239, 242, 246, 249, 252, 255, 258, 259, 264, 267, 271, 272, 273, 274, 276, 278, 284, 288, 294, 299, 302, 306, 310, 316, 321, 322, 335, 337, 365, 381, 451, 454, 455, 592, 609, 675, 713, 727, 730, 763, 792, 810, 852, 870, 907, 910, 914, 923, 935, 962, 972, 983, 1004, 1005, 1006, 1008, 1016, 1018, 1020, 1026, 1027, 1030, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1048, 1052, 1060, 1061, 1062, 1063, 1096, 1103, 1104, 1105, 1106, 1108, 1109, 1110, 1111, 1113, 1114, 1116, 1119, 1120, 1122, 1124, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1133, 1135, 1136, 1138, 1141, 1142, 1145, 1148, 1166, 1171], "pythonpath": [21, 40, 62, 186, 272, 1015, 1063], "goto": [21, 404, 411, 417, 421, 424, 428, 437, 441, 446, 447, 669, 707, 760, 762, 763, 981], "orgi": [21, 459, 671], "perspect": [21, 38, 161, 183], "alwai": [21, 43, 66, 81, 114, 150, 151, 156, 166, 183, 190, 213, 235, 246, 272, 273, 276, 318, 334, 342, 347, 365, 383, 409, 410, 422, 434, 435, 439, 440, 442, 443, 459, 460, 479, 489, 519, 568, 574, 584, 603, 606, 662, 667, 671, 682, 706, 715, 719, 722, 726, 731, 769, 788, 806, 810, 815, 836, 870, 871, 914, 915, 916, 930, 936, 942, 970, 981, 986, 996, 1001, 1007, 1035, 1039, 1053, 1108, 1113, 1114, 1115, 1141, 1142, 1161], "valgrind": [21, 98, 181, 215, 360, 437, 441, 442, 444, 446, 447, 474, 539, 549, 551, 559, 562, 577, 712, 725, 726, 763, 1158, 1159], "supervis": [21, 1115], "hack": [21, 53, 59, 63, 98, 134, 148, 151, 169, 177, 181, 186, 190, 191, 215, 216, 230, 232, 240, 251, 258, 259, 260, 261, 269, 281, 282, 290, 291, 298, 301, 305, 318, 319, 342, 346, 350, 351, 353, 360, 361, 409, 452, 473, 474, 487, 513, 515, 516, 517, 518, 519, 520, 521, 522, 525, 532, 534, 545, 587, 602, 603, 623, 665, 676, 707, 708, 709, 713, 725, 740, 761, 762, 763, 764, 840, 865, 866, 906, 947, 994, 1032, 1128, 1134, 1141, 1160, 1161, 1175], "someth": [21, 43, 55, 60, 67, 73, 74, 75, 79, 84, 85, 88, 121, 129, 147, 153, 154, 156, 157, 159, 161, 165, 169, 175, 182, 186, 194, 202, 204, 205, 206, 216, 226, 230, 237, 252, 255, 279, 281, 298, 301, 318, 337, 400, 401, 415, 469, 491, 524, 526, 562, 573, 577, 582, 585, 592, 616, 660, 661, 662, 672, 675, 689, 719, 727, 729, 730, 757, 758, 759, 763, 771, 783, 787, 798, 806, 810, 812, 815, 830, 882, 906, 907, 910, 914, 915, 916, 931, 932, 940, 942, 943, 955, 966, 968, 969, 981, 996, 1003, 1005, 1006, 1008, 1012, 1029, 1036, 1038, 1043, 1053, 1059, 1090, 1115, 1166], "malloc": [21, 181, 422, 423, 436, 551, 796, 930, 982, 984, 1158], "seomth": 21, "cleanup": [21, 154, 173, 353, 568, 644, 680, 724, 982, 1005, 1142], "obviou": [21, 57, 161, 169, 175, 236, 246, 273, 276, 339, 410, 429, 451, 526, 568, 675, 684, 725, 731, 748, 936, 978, 1003, 1039, 1050, 1164], "lead": [21, 111, 112, 121, 154, 156, 160, 161, 178, 215, 242, 246, 270, 288, 308, 369, 377, 387, 459, 649, 661, 810, 836, 849, 915, 968, 977, 978, 996, 1023, 1049, 1060, 1070, 1121, 1135], "sever": [21, 88, 116, 154, 214, 215, 407, 476, 481, 655, 666, 808, 866, 907, 1007, 1033, 1044], "duplic": [21, 42, 49, 98, 117, 121, 133, 174, 187, 232, 240, 250, 272, 327, 369, 371, 432, 433, 476, 535, 543, 556, 577, 584, 595, 673, 730, 763, 817, 853, 906, 942, 945, 947, 964, 1090, 1141, 1143], "when": [21, 28, 30, 43, 60, 64, 66, 76, 81, 111, 112, 124, 129, 134, 141, 142, 151, 153, 154, 155, 156, 159, 161, 169, 171, 183, 186, 192, 215, 216, 223, 227, 229, 230, 232, 239, 240, 242, 245, 246, 259, 261, 270, 278, 279, 281, 288, 296, 312, 319, 328, 333, 342, 353, 360, 367, 375, 377, 383, 388, 399, 406, 410, 425, 430, 431, 432, 433, 434, 439, 449, 451, 454, 457, 461, 464, 465, 468, 469, 473, 493, 495, 526, 527, 571, 573, 574, 577, 585, 607, 623, 638, 639, 642, 644, 649, 651, 656, 660, 662, 667, 670, 672, 674, 675, 678, 695, 709, 714, 717, 722, 726, 727, 730, 734, 737, 739, 741, 761, 778, 781, 788, 792, 804, 806, 808, 810, 824, 843, 845, 849, 852, 854, 866, 870, 892, 903, 915, 916, 923, 927, 931, 932, 936, 939, 940, 958, 960, 966, 969, 970, 972, 977, 981, 982, 984, 986, 1001, 1005, 1006, 1007, 1012, 1016, 1019, 1025, 1027, 1032, 1035, 1038, 1039, 1041, 1043, 1048, 1049, 1050, 1060, 1099, 1116, 1121, 1126, 1136, 1141, 1143, 1150, 1161, 1163, 1164], "void": [21, 42, 44, 55, 58, 108, 121, 125, 127, 129, 133, 156, 157, 165, 197, 215, 227, 342, 364, 365, 367, 371, 373, 375, 379, 385, 389, 403, 405, 406, 407, 408, 410, 413, 415, 416, 419, 422, 423, 425, 426, 432, 433, 436, 452, 459, 468, 469, 470, 474, 476, 480, 489, 498, 499, 503, 504, 507, 508, 509, 511, 523, 525, 526, 527, 550, 562, 569, 571, 572, 573, 574, 577, 578, 579, 580, 581, 582, 584, 585, 592, 598, 602, 611, 624, 638, 641, 642, 645, 647, 648, 657, 659, 667, 668, 673, 677, 680, 681, 695, 697, 698, 700, 701, 702, 703, 705, 706, 709, 710, 711, 712, 713, 714, 716, 717, 719, 724, 725, 726, 727, 729, 731, 734, 736, 739, 741, 743, 761, 771, 774, 781, 788, 790, 792, 794, 796, 804, 806, 815, 820, 824, 830, 847, 867, 928, 932, 933, 934, 936, 946, 953, 955, 957, 959, 963, 968, 974, 977, 978, 981, 982, 984, 996, 1000, 1002, 1153], "f": [21, 31, 38, 43, 64, 110, 116, 128, 140, 155, 156, 157, 165, 177, 187, 192, 193, 198, 199, 202, 204, 210, 211, 213, 214, 220, 222, 223, 226, 227, 229, 233, 235, 236, 239, 242, 246, 249, 251, 253, 255, 263, 264, 267, 271, 274, 279, 284, 288, 293, 295, 302, 306, 310, 317, 322, 334, 336, 338, 353, 379, 384, 394, 396, 405, 408, 413, 432, 433, 435, 439, 443, 451, 468, 574, 578, 594, 668, 674, 680, 681, 710, 731, 734, 769, 774, 836, 847, 854, 870, 889, 896, 898, 899, 914, 915, 916, 917, 939, 970, 972, 977, 992, 996, 999, 1003, 1005, 1006, 1007, 1008, 1020, 1022, 1024, 1025, 1028, 1029, 1030, 1049, 1050, 1058, 1065, 1070, 1103, 1105, 1108, 1116, 1141, 1171], "alloc": [21, 124, 156, 157, 174, 176, 215, 223, 226, 229, 239, 242, 264, 377, 406, 422, 427, 430, 433, 436, 474, 558, 560, 574, 576, 577, 584, 603, 608, 615, 620, 631, 635, 639, 664, 675, 678, 712, 717, 726, 727, 731, 761, 763, 766, 769, 771, 796, 798, 812, 815, 847, 853, 932, 933, 934, 954, 1014, 1065], "variabl": [21, 29, 88, 90, 91, 98, 105, 111, 112, 150, 155, 156, 165, 169, 173, 175, 176, 182, 186, 187, 190, 191, 192, 193, 195, 198, 199, 200, 205, 206, 211, 212, 214, 215, 217, 221, 224, 225, 227, 228, 229, 232, 233, 235, 237, 243, 244, 245, 246, 248, 250, 251, 253, 257, 260, 265, 266, 267, 269, 270, 273, 276, 279, 283, 285, 286, 287, 289, 290, 291, 292, 293, 299, 304, 305, 306, 308, 309, 311, 314, 315, 317, 320, 321, 323, 326, 328, 329, 330, 331, 332, 333, 342, 344, 345, 364, 366, 367, 375, 380, 388, 395, 399, 400, 403, 404, 405, 409, 411, 412, 415, 417, 421, 422, 424, 425, 427, 428, 429, 435, 436, 437, 439, 441, 446, 447, 453, 455, 459, 461, 480, 488, 494, 503, 508, 513, 554, 559, 574, 582, 583, 590, 602, 642, 649, 664, 669, 675, 678, 680, 707, 709, 721, 740, 759, 760, 761, 762, 763, 779, 798, 810, 840, 841, 844, 847, 871, 890, 906, 947, 952, 955, 959, 960, 961, 966, 984, 994, 995, 996, 1001, 1003, 1005, 1008, 1009, 1015, 1016, 1017, 1018, 1019, 1023, 1031, 1035, 1037, 1042, 1046, 1048, 1050, 1051, 1054, 1059, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1074, 1075, 1076, 1077, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1115, 1118, 1121, 1122, 1128, 1130, 1135, 1136, 1162, 1164, 1171, 1177], "filenam": [21, 42, 50, 55, 58, 153, 173, 177, 202, 220, 223, 226, 227, 229, 234, 239, 242, 252, 267, 270, 283, 284, 288, 316, 322, 334, 451, 510, 513, 527, 761, 810, 836, 837, 899, 937, 940, 941, 942, 943, 944, 948, 951, 977, 1005, 1015, 1060, 1065, 1077, 1086, 1088, 1092, 1098, 1100], "getenv": [21, 508, 965], "fopen": 21, "read": [21, 29, 43, 47, 53, 55, 56, 57, 74, 75, 84, 86, 116, 153, 154, 155, 156, 157, 159, 161, 164, 165, 169, 182, 186, 190, 191, 193, 195, 201, 211, 214, 221, 224, 227, 229, 230, 232, 234, 240, 242, 243, 248, 249, 251, 254, 261, 262, 263, 266, 270, 272, 274, 280, 284, 286, 287, 288, 291, 292, 293, 310, 314, 315, 316, 318, 319, 321, 322, 326, 327, 328, 329, 330, 331, 332, 342, 346, 348, 353, 372, 373, 380, 388, 395, 404, 411, 417, 421, 424, 425, 427, 428, 429, 431, 433, 436, 437, 441, 445, 446, 447, 450, 466, 473, 494, 510, 515, 526, 527, 550, 556, 567, 570, 571, 573, 576, 579, 582, 628, 632, 651, 654, 666, 669, 676, 684, 707, 721, 729, 757, 760, 761, 762, 763, 769, 783, 794, 810, 812, 836, 837, 838, 841, 847, 852, 853, 854, 855, 857, 858, 861, 870, 871, 903, 906, 910, 914, 915, 916, 923, 928, 930, 931, 933, 934, 937, 940, 943, 945, 946, 947, 948, 950, 951, 958, 960, 964, 968, 974, 977, 978, 981, 982, 1001, 1007, 1008, 1023, 1026, 1028, 1036, 1044, 1066, 1067, 1077, 1086, 1096, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1114, 1116, 1124, 1131, 1174], "onli": [21, 29, 42, 43, 60, 90, 109, 111, 112, 116, 117, 121, 124, 134, 144, 150, 151, 153, 154, 156, 157, 158, 159, 160, 161, 164, 165, 169, 174, 175, 182, 186, 190, 192, 193, 211, 213, 216, 223, 226, 229, 232, 233, 234, 236, 239, 240, 242, 243, 245, 246, 251, 253, 254, 255, 266, 267, 270, 272, 273, 279, 283, 286, 288, 292, 293, 296, 305, 312, 314, 320, 321, 326, 333, 336, 350, 357, 367, 373, 375, 376, 377, 379, 384, 385, 387, 392, 399, 400, 403, 405, 407, 408, 409, 410, 426, 427, 431, 432, 433, 434, 435, 444, 449, 451, 452, 454, 455, 458, 460, 463, 464, 468, 469, 470, 472, 480, 488, 489, 491, 493, 494, 495, 507, 508, 523, 524, 527, 530, 531, 545, 556, 569, 570, 571, 572, 574, 576, 578, 579, 582, 584, 585, 591, 605, 607, 623, 624, 628, 638, 639, 641, 645, 649, 653, 654, 661, 663, 667, 674, 678, 680, 684, 689, 695, 705, 709, 712, 716, 717, 721, 722, 726, 727, 733, 735, 737, 739, 741, 747, 751, 753, 754, 763, 766, 768, 771, 774, 779, 790, 796, 806, 810, 815, 818, 823, 827, 835, 836, 837, 838, 845, 848, 852, 854, 855, 860, 866, 870, 871, 892, 899, 907, 908, 909, 914, 915, 916, 917, 927, 932, 933, 936, 938, 939, 940, 944, 946, 950, 952, 955, 960, 963, 966, 968, 969, 970, 971, 977, 978, 981, 982, 984, 985, 996, 1000, 1001, 1005, 1006, 1007, 1010, 1016, 1020, 1022, 1025, 1027, 1028, 1033, 1034, 1035, 1036, 1038, 1039, 1040, 1041, 1043, 1044, 1048, 1053, 1054, 1058, 1060, 1063, 1067, 1072, 1080, 1082, 1083, 1086, 1087, 1091, 1093, 1106, 1108, 1113, 1114, 1115, 1117, 1120, 1129, 1133, 1134, 1141, 1147, 1148, 1150, 1153, 1161, 1163, 1166, 1178], "bullshit": [21, 66, 198, 210, 246, 454, 717, 1171], "everyon": [21, 66, 154, 159, 169, 190, 449, 654, 705, 857, 858, 868, 970], "get": [21, 55, 64, 98, 111, 112, 142, 143, 150, 151, 154, 156, 157, 164, 165, 173, 186, 187, 190, 192, 197, 204, 205, 206, 213, 215, 216, 223, 226, 229, 230, 232, 235, 236, 239, 242, 249, 255, 259, 261, 264, 267, 270, 274, 284, 288, 294, 306, 310, 316, 322, 337, 342, 345, 347, 362, 388, 433, 442, 465, 469, 474, 489, 498, 503, 580, 587, 659, 667, 677, 695, 701, 721, 722, 725, 726, 727, 728, 730, 743, 753, 761, 763, 771, 776, 783, 810, 812, 826, 829, 843, 845, 849, 850, 870, 906, 916, 923, 926, 932, 933, 934, 947, 949, 954, 971, 978, 982, 999, 1005, 1018, 1021, 1027, 1031, 1039, 1056, 1126, 1133, 1143, 1148, 1153, 1166], "point": [21, 34, 36, 38, 40, 62, 90, 98, 107, 110, 114, 116, 134, 153, 154, 155, 156, 158, 159, 160, 161, 164, 165, 169, 174, 175, 176, 177, 181, 186, 190, 191, 192, 193, 195, 213, 215, 216, 223, 226, 229, 232, 239, 242, 247, 250, 272, 281, 288, 305, 306, 308, 328, 348, 349, 350, 353, 364, 365, 366, 371, 377, 379, 381, 383, 387, 409, 412, 415, 418, 419, 422, 423, 433, 435, 464, 469, 472, 479, 480, 488, 511, 513, 525, 545, 546, 547, 570, 572, 574, 576, 577, 578, 580, 581, 583, 586, 590, 601, 602, 610, 625, 626, 639, 644, 645, 664, 667, 670, 672, 674, 678, 684, 695, 717, 721, 726, 730, 742, 761, 763, 806, 810, 839, 847, 849, 853, 854, 870, 907, 908, 916, 926, 930, 933, 936, 969, 982, 985, 998, 1002, 1003, 1004, 1006, 1010, 1018, 1044, 1048, 1050, 1053, 1115, 1117, 1119, 1121, 1141, 1143, 1150, 1153, 1158, 1162], "unobvi": [21, 810], "best": [21, 30, 39, 48, 57, 121, 154, 155, 156, 165, 178, 235, 375, 407, 429, 436, 439, 440, 449, 528, 572, 577, 641, 706, 719, 739, 798, 800, 802, 806, 808, 847, 870, 892, 908, 915, 916, 952, 966, 970, 998, 1012, 1018, 1055, 1060, 1062, 1119, 1129], "resourc": [21, 81, 98, 111, 112, 154, 156, 159, 171, 181, 216, 232, 273, 276, 281, 318, 319, 345, 353, 481, 545, 559, 570, 574, 575, 639, 664, 675, 676, 678, 707, 712, 723, 724, 726, 727, 732, 739, 740, 760, 762, 763, 794, 796, 804, 843, 847, 848, 915, 932, 933, 934, 952, 966, 969, 1005, 1058], "leaki": 21, "erron": [21, 436, 1070], "worst": [21, 154, 407, 916, 968, 981, 1161, 1164], "extract": [21, 29, 55, 98, 143, 147, 214, 240, 243, 248, 251, 263, 266, 286, 287, 292, 293, 314, 315, 321, 326, 391, 410, 514, 515, 545, 556, 567, 761, 763, 810, 823, 836, 998, 1023, 1045, 1067, 1101, 1102, 1103, 1104, 1106, 1114], "common": [21, 24, 146, 154, 211, 227, 228, 240, 246, 251, 322, 410, 419, 450, 525, 603, 730, 747, 751, 761, 835, 907, 908, 916, 940, 977, 1007, 1012, 1013, 1014, 1030, 1039, 1040, 1044, 1050, 1054, 1057, 1108, 1116, 1117, 1141, 1164], "hm": [21, 32, 64, 194, 204, 223, 226, 229, 236, 334, 800, 826, 827, 934, 1027, 1112, 1143, 1148, 1150], "end": [21, 23, 32, 37, 42, 107, 148, 153, 156, 157, 159, 161, 164, 186, 187, 192, 193, 198, 202, 206, 226, 227, 229, 230, 232, 234, 242, 246, 249, 252, 266, 267, 288, 294, 301, 306, 322, 333, 334, 371, 374, 378, 399, 415, 427, 431, 432, 433, 435, 438, 439, 442, 472, 494, 495, 503, 504, 507, 508, 509, 559, 562, 574, 598, 600, 602, 603, 604, 606, 607, 609, 610, 611, 613, 614, 616, 620, 623, 627, 628, 634, 651, 667, 695, 698, 702, 709, 715, 716, 717, 719, 724, 725, 738, 739, 802, 808, 810, 826, 853, 854, 855, 870, 898, 902, 903, 914, 916, 932, 933, 934, 936, 942, 958, 977, 1010, 1030, 1034, 1036, 1043, 1046, 1050, 1054, 1058, 1129, 1131, 1133, 1136, 1171, 1174], "sketch": [21, 121, 134, 151, 157, 186, 193, 194, 206, 215, 216, 283, 305, 346, 350, 412, 413, 423, 435, 667, 767, 779, 977], "clearest": 21, "ach": 21, "bad": [21, 43, 122, 150, 153, 156, 163, 178, 186, 211, 217, 233, 234, 236, 245, 246, 261, 282, 283, 304, 318, 388, 431, 435, 449, 591, 657, 707, 718, 725, 743, 762, 763, 778, 790, 815, 818, 927, 928, 953, 955, 959, 960, 981, 1000, 1005, 1007, 1020, 1021, 1032, 1039, 1050, 1080, 1108, 1161], "earliest": 21, "noth": [21, 43, 64, 121, 144, 153, 154, 156, 159, 164, 169, 183, 194, 213, 226, 252, 305, 363, 402, 409, 433, 451, 458, 562, 641, 675, 682, 695, 709, 712, 778, 788, 806, 808, 842, 892, 907, 915, 916, 931, 933, 955, 977, 982, 1008, 1015, 1027, 1048, 1050, 1056, 1141, 1148, 1150], "jump": [21, 45, 105, 153, 399, 403, 562, 709, 712, 719, 849, 902, 981, 1116], "outest": 21, "level": [21, 79, 154, 155, 165, 223, 229, 239, 242, 263, 296, 312, 353, 377, 403, 409, 449, 452, 454, 455, 461, 469, 477, 688, 689, 761, 792, 794, 806, 813, 822, 846, 907, 914, 923, 927, 986, 994, 1007, 1015, 1027, 1048, 1058, 1083, 1087, 1117, 1120, 1130, 1136, 1163], "cleanup_stage1": 21, "screenplai": [22, 61, 147, 156, 177, 181, 233, 245, 254, 272, 280, 282, 293, 301, 304, 305, 308, 309, 314, 315, 320, 321, 326, 342, 450, 466, 474, 545, 548, 551, 554, 557, 560, 563, 566, 602, 603, 623, 767, 770, 775, 780, 784, 786, 822, 825, 828, 831, 975, 979, 983, 1051, 1138, 1145, 1149, 1151, 1154], "dies": [23, 162, 163, 168, 171, 172, 173, 181, 187, 197, 198, 202, 210, 217, 234, 236, 242, 243, 246, 342, 347, 360, 1156, 1158, 1159, 1160, 1165, 1171, 1172, 1174, 1178, 1179], "einreichungsunterlagen": 23, "diesem": [23, 163, 197, 1158, 1175], "formular": 23, "projekten": [23, 1172, 1173], "mehrer": [23, 1165], "projektpartn": 23, "muss": [23, 177, 187, 197, 202, 243, 342, 347, 1156, 1158, 1165, 1172], "federf\u00fchrend": 23, "auftreten": 23, "projektleitung": 23, "projektabwicklung": 23, "seiten": 23, "f\u00f6rdergeb": 23, "erfolgtausschlie\u00dflich": 23, "federf\u00fchrenden": 23, "antragstel": 23, "s\u00e4mtlich": 23, "weiterenprojektpartn": 23, "innen": 23, "zus\u00e4tzlich": [23, 162], "anzugeben": 23, "aufteilung": 23, "f\u00f6rdersumm": 23, "erfolgen": [23, 168, 198], "soll": [23, 163, 189, 218, 257, 1155], "punkt": [23, 163, 173, 189, 199, 243], "erfolgreichemf\u00f6rderantrag": 23, "anschluss": 23, "f\u00f6rdervertrag": 23, "erstellt": 23, "derzuerkannten": 23, "\u00fcberweisungen": 23, "f\u00f6rderraten": 23, "anteil": 23, "dieprojektpartn": 23, "fall": [23, 163, 172, 186, 189, 197, 202, 246, 257, 391, 399, 517, 689, 695, 792, 950, 951, 968, 1110, 1130], "allenprojektpartn": 23, "unterschreiben": 23, "verbindlich": 23, "vereinbart": 23, "privatperson": 23, "organis": [23, 215], "uni": 23, "contemporari": 23, "open": [23, 34, 35, 38, 39, 42, 48, 49, 54, 64, 69, 113, 116, 134, 153, 154, 157, 161, 169, 171, 175, 177, 191, 193, 195, 204, 213, 214, 216, 220, 223, 226, 227, 229, 234, 237, 242, 249, 252, 254, 267, 270, 272, 274, 279, 281, 284, 288, 310, 316, 322, 334, 349, 388, 449, 451, 457, 776, 804, 812, 837, 838, 846, 847, 849, 852, 854, 895, 914, 923, 931, 932, 937, 940, 942, 943, 946, 948, 951, 952, 974, 977, 981, 984, 1001, 1007, 1008, 1077, 1103, 1105, 1116, 1141, 1156, 1173, 1174], "wer": [23, 162], "unser": [23, 190, 198, 1156], "motiv": [23, 28, 98, 849, 868, 966, 1013, 1014], "300": [23, 173, 175, 187, 223, 226, 229, 234, 236, 242, 246, 249, 267, 288, 294, 310, 316, 322, 334, 365, 367, 369, 385, 409, 597, 598, 599, 600, 601, 603, 604, 605, 606, 620, 783], "zeichen": [23, 236], "lebe": 23, "einerseit": [23, 168], "kleineren": 23, "gr\u00f6\u00dferen": [23, 1173], "andererseit": [23, 168], "haupts\u00e4chlich": [23, 198, 1171], "unternehmen": 23, "halt": [23, 111, 112, 197, 226, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322, 843, 901, 916], "bringen": [23, 1156], "schulungsunterlagen": [23, 1155], "wartbarkeit": 23, "nichtverf\u00fcgbarkeit": 23, "problem": [23, 45, 57, 81, 108, 116, 121, 142, 154, 161, 170, 173, 175, 177, 178, 184, 186, 187, 190, 191, 193, 195, 206, 210, 215, 232, 234, 240, 254, 259, 261, 272, 276, 279, 280, 282, 283, 291, 296, 297, 305, 308, 312, 313, 318, 319, 328, 349, 360, 388, 399, 409, 410, 413, 427, 433, 435, 451, 456, 480, 495, 539, 545, 580, 594, 607, 639, 642, 666, 739, 745, 756, 762, 763, 810, 849, 909, 970, 994, 996, 1000, 1005, 1010, 1012, 1015, 1016, 1027, 1039, 1053, 1103, 1108, 1110, 1114, 1133, 1141, 1142, 1156, 1163, 1164], "darstellt": 23, "wen": 23, "nutzen": [23, 1174], "400": [23, 151, 156, 173, 187, 197, 226, 229, 271, 288, 306, 322, 451, 620, 1065, 1068], "stellen": [23, 168], "kursverlauf": 23, "vorhandenem": 23, "zusammen": [23, 1155], "bereiten": [23, 197], "kursergebniss": 23, "editoren": 23, "kreieren": 23, "warten": 23, "kursmateri": 23, "endbenutz": 23, "konsumieren": 23, "usecas": [23, 927, 1030], "gel\u00f6st": [23, 187], "500": [23, 197, 204, 223, 226, 229, 271, 316, 322, 620, 907, 934, 1065, 1068], "hierarchisch": 23, "gruppierung": 23, "einzelthemen": 23, "zuwenig": 23, "bauen": [23, 1158, 1168, 1177], "aufeinand": [23, 897], "explizit": [23, 171, 181, 187, 197, 257, 284, 1158, 1159, 1175], "abh\u00e4ngigkeitsbeziehungen": [23, 1168], "fehlen": 23, "extrem": [23, 154, 213, 234, 242, 249, 252, 274, 342, 347, 410, 449, 602, 671, 719, 810, 837, 838, 1120, 1156, 1168], "verringert": 23, "zusammenarbeit": [23, 1155], "trainern": 23, "fehlend": [23, 173], "aggregierbarkeit": 23, "bzw": [23, 162, 171, 177, 181, 203, 360, 1165, 1172, 1174], "referenzierbarkeit": 23, "fremdunterlagen": 23, "analog": [23, 187, 977, 1126], "librari": [23, 64, 72, 75, 79, 86, 98, 104, 105, 107, 109, 111, 112, 116, 134, 154, 156, 165, 173, 175, 177, 182, 183, 184, 191, 193, 195, 214, 216, 223, 229, 239, 242, 246, 258, 259, 270, 272, 296, 297, 312, 313, 319, 343, 344, 345, 360, 361, 364, 365, 374, 382, 405, 422, 432, 439, 445, 455, 456, 460, 461, 463, 464, 473, 487, 510, 513, 515, 516, 517, 518, 519, 520, 521, 522, 525, 527, 534, 553, 567, 568, 612, 618, 622, 630, 631, 632, 634, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 684, 689, 715, 740, 761, 762, 763, 788, 840, 843, 844, 906, 927, 928, 929, 934, 935, 937, 944, 945, 947, 952, 955, 961, 964, 967, 969, 981, 984, 985, 986, 987, 989, 990, 991, 992, 994, 996, 1031, 1033, 1048, 1050, 1053, 1120, 1137, 1150, 1158, 1160, 1162, 1163, 1174, 1176], "anfangen": 23, "geben": [23, 1159, 1160], "trainingsunterlagen": 23, "ging": [23, 162, 360], "funktioniert": [23, 187, 236], "projektergebni": 23, "basiert": [23, 257, 1156, 1159, 1168, 1175], "popul\u00e4ren": 23, "dokumentationstool": 23, "gestaltet": [23, 181, 1155, 1165], "eigentlich": [23, 173, 187, 1156, 1159], "kern": 23, "begleitet": [23, 189], "meinem": [23, 163, 172, 198, 898, 1171], "eigenen": [23, 1165, 1172], "quasi": [23, 177, 181], "spin": [23, 739, 813, 847], "off": [23, 117, 124, 153, 155, 156, 159, 164, 175, 186, 206, 249, 388, 391, 430, 438, 439, 454, 460, 461, 516, 517, 522, 562, 642, 695, 730, 804, 815, 841, 866, 894, 907, 914, 916, 942, 951, 960, 970, 977, 1036, 1054, 1088, 1113, 1166], "anwendbar": [23, 1178], "klarer": 23, "bezug": [23, 243], "f\u00f6rdervoraussetzung": 23, "bitt": [23, 162, 181, 187, 197, 198, 1155, 1171], "gehen": 23, "folgenden": [23, 181, 360, 898], "ausschlie\u00dflich": 23, "jene": 23, "aspekt": [23, 1157, 1165, 1172, 1175], "klaren": 23, "mehrwert": 23, "technologi": [23, 226, 968, 984, 1065], "infrastruktur": [23, 1156, 1165, 1172], "sozial": 23, "gesellschaft": 23, "umwelt": 23, "wirtschaftlich": [23, 189], "wissenschaftlich": 23, "kooperationen": 23, "regionalpolitik": 23, "framework": [23, 79, 171, 181, 190, 216, 232, 465, 524, 914, 916, 1134, 1141, 1142, 1177, 1179], "jeglich": [23, 1165], "art": [23, 32, 45, 996, 1164], "konsistenzgecheckt": 23, "crossreferenc": 23, "webseiten": 23, "hinweg": [23, 198, 1171], "erm\u00f6glicht": [23, 189, 360], "gesellschaftlich": 23, "\u00f6ffentlich": [23, 168, 1155], "verf\u00fcgbarkeit": 23, "erleichterung": 23, "machen": [23, 162, 173, 177, 187, 236, 337, 360, 1156, 1159, 1160, 1165, 1179], "commun": [23, 64, 73, 74, 75, 79, 82, 84, 88, 114, 139, 142, 154, 169, 178, 186, 201, 270, 305, 339, 348, 349, 425, 469, 740, 741, 762, 763, 769, 810, 822, 843, 906, 907, 914, 915, 916, 931, 936, 947, 952, 961, 968, 971, 977, 982, 1016, 1104, 1107, 1124, 1161, 1164, 1166, 1175, 1176], "trainerinnen": 23, "kann": [23, 37, 162, 163, 171, 177, 181, 187, 197, 210, 217, 257, 310, 342, 347, 360, 1155, 1156, 1158, 1160, 1165, 1172, 1173, 1174, 1177, 1179], "sch\u00f6pfen": 23, "trainerinnenn": 23, "gegeneinand": 23, "genau": [23, 171, 173, 187, 337, 898, 1158, 1175, 1177, 1178], "die_der": 23, "adressat_in": 23, "je": [23, 32, 163, 197], "konkret": 23, "eingrenzen": 23, "desto": 23, "dieser": [23, 37, 162, 181, 197, 249, 337, 360, 1155, 1156, 1157, 1165, 1167, 1168, 1174, 1175], "adressat_innen": 23, "ber\u00fccksichtigen": 23, "wahrscheinlich": [23, 177, 1165, 1172], "deshalb": 23, "nachhaltig": 23, "wirkung": 23, "weil": [23, 173, 187, 189, 210, 249, 306, 360, 1156, 1158, 1160], "speziellen": 23, "konzepten": 23, "unterschiedlich": [23, 198, 243, 1171], "zielgruppen": 23, "beziehung": [23, 181], "zueinand": 23, "stehen": [23, 187, 1177], "anbieter_innen": 23, "nachfrager_innen": 23, "drei": [23, 162, 173, 181, 187, 197, 202, 204, 223, 226, 234, 236, 239, 242, 249, 252, 267, 274, 284, 288, 294, 306, 310, 337], "angeben": 23, "m\u00f6glichst": 23, "erheblich": 23, "ihrer": [23, 234, 342, 347, 1165, 1172], "jeweiligen": [23, 1155], "sein": [23, 163, 171, 172, 189, 197, 198, 210, 236, 274, 1156, 1158, 1171, 1172, 1174, 1177, 1178, 1179], "dann": [23, 163, 173, 181, 187, 198, 236, 242, 243, 249, 284, 360, 1156, 1168, 1171, 1179], "einzelnen": 23, "aussieht": [23, 1157], "erst": [23, 181, 197, 210, 236, 243, 249, 267, 306, 322, 337, 1156, 1158], "bestandteil": [23, 1177], "n": [23, 35, 38, 40, 50, 64, 112, 156, 165, 173, 174, 175, 181, 187, 197, 202, 204, 205, 213, 215, 218, 219, 220, 223, 226, 227, 229, 232, 234, 236, 239, 242, 246, 249, 252, 264, 267, 274, 278, 284, 288, 306, 310, 316, 322, 333, 334, 335, 337, 342, 364, 365, 367, 371, 373, 375, 377, 379, 384, 387, 397, 399, 405, 406, 410, 415, 423, 427, 432, 451, 452, 459, 526, 559, 578, 584, 602, 648, 649, 652, 653, 655, 656, 659, 660, 661, 662, 663, 664, 672, 674, 689, 763, 788, 824, 843, 847, 857, 867, 870, 883, 899, 901, 902, 916, 928, 930, 931, 932, 933, 934, 940, 941, 943, 968, 974, 978, 981, 984, 990, 996, 1000, 1002, 1027, 1028, 1030, 1045, 1047, 1052, 1053, 1058, 1059, 1103, 1105, 1141, 1153], "l\u00f6sen": 23, "wollen": [23, 37, 202, 360, 1160, 1165, 1168, 1172, 1174], "hilfestellung": 23, "abgrenzung": 23, "organisationen": 23, "privatpersonen": 23, "bestimmt": 23, "branch": [23, 50, 54, 62, 114, 146, 157, 160, 169, 273, 276, 403, 444, 445, 753, 783, 810, 812, 822, 914, 916, 1043, 1173, 1179], "gruppen": 23, "staatlich": 23, "verwaltung": 23, "privat": [23, 57, 103, 108, 113, 116, 156, 168, 169, 181, 183, 190, 191, 194, 214, 227, 232, 244, 263, 279, 281, 301, 341, 342, 347, 459, 463, 468, 470, 474, 476, 481, 491, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 513, 553, 559, 568, 572, 574, 576, 577, 579, 580, 581, 583, 585, 595, 610, 611, 628, 638, 640, 641, 653, 664, 667, 670, 671, 673, 674, 677, 678, 689, 691, 692, 693, 695, 697, 698, 701, 702, 703, 704, 710, 711, 712, 725, 726, 727, 730, 731, 739, 741, 747, 749, 751, 753, 763, 804, 839, 840, 845, 859, 865, 906, 923, 1028, 1136, 1153, 1175], "verein": 23, "npo": 23, "wissenschaft": 23, "universit\u00e4t": 23, "fachhochschulen": 23, "richtungen": 23, "regionen": 23, "stadt": [23, 219], "land": [23, 457, 748], "bezirk": 23, "gemeinden": 23, "interessensgruppen": 23, "selbstvermarkter_innen": 23, "landwirtschaft": 23, "handwerk": 23, "u": [23, 32, 34, 35, 36, 38, 42, 53, 59, 63, 116, 136, 156, 159, 164, 174, 184, 187, 190, 192, 198, 215, 226, 230, 234, 236, 239, 242, 264, 271, 288, 308, 387, 418, 443, 727, 779, 785, 820, 847, 855, 866, 867, 869, 870, 894, 907, 914, 916, 935, 972, 981, 984, 994, 1002, 1039, 1041, 1065, 1116, 1120, 1124, 1136, 1141, 1148, 1164, 1171], "altersgrupp": 23, "genderspezifisch": 23, "frauen": 23, "region": [23, 154, 766, 794], "grupp": [23, 202, 351, 898], "sch\u00fcler_innen": 23, "lehrer_innen": 23, "thematisch": 23, "deutsch": [23, 218, 340, 341, 1155], "fl\u00fcchtling": 23, "posit": [23, 29, 64, 114, 161, 187, 190, 191, 193, 195, 197, 202, 210, 214, 223, 230, 234, 239, 240, 242, 249, 252, 263, 266, 273, 276, 278, 280, 282, 283, 286, 288, 292, 294, 298, 301, 304, 305, 308, 309, 310, 316, 322, 328, 373, 410, 423, 562, 603, 610, 619, 620, 743, 763, 870, 907, 915, 931, 932, 936, 977, 1005, 1006, 1009, 1050, 1051, 1053, 1054, 1055, 1106, 1121, 1129, 1143, 1148], "zielgruppentyp": 23, "350": [23, 226, 229, 274, 288, 316, 322, 1065], "bereitet": 23, "vor": [23, 162, 163, 177, 187, 199, 234, 1168, 1177], "lt": [23, 32, 35, 36, 156, 161, 173, 176, 181, 182, 187, 192, 197, 202, 204, 210, 213, 218, 223, 226, 229, 234, 236, 239, 242, 246, 249, 252, 255, 264, 267, 271, 274, 284, 288, 294, 306, 310, 316, 322, 336, 337, 338, 515, 532, 534, 567, 612, 618, 622, 631, 634, 635, 664, 763], "zielvorgaben": 23, "basierend": [23, 173, 1155, 1160], "existierendem": 23, "f\u00fchrt": [23, 163, 1175], "jederzeit": [23, 168, 177, 360], "\u00fcberblick": [23, 177, 181, 243, 257, 360, 361, 1155, 1163, 1165, 1171, 1172, 1175, 1177], "behaltend": 23, "behandelten": 23, "fragen": [23, 189, 205, 342, 347, 360, 1155, 1165, 1172], "antworten": [23, 189], "info": [23, 164, 271, 272, 322, 439, 443, 444, 445, 451, 452, 454, 577, 726, 785, 915, 955, 985, 986, 1141], "bed\u00fcrfni": [23, 162], "schulungsagenden": 23, "erstellen": [23, 360, 1160, 1165], "zeitaufw\u00e4ndig": 23, "fehlertr\u00e4chtig": 23, "vom": [23, 65, 162, 171, 172, 173, 187, 197, 198, 217, 242, 246, 1165, 1171, 1172, 1179], "erwartet": [23, 163, 187], "w\u00e4hrend": [23, 1155], "einzugehen": [23, 189, 1178], "geplanten": [23, 1155], "verlassen": [23, 832], "birgt": 23, "chao": [23, 868, 1039], "teilnehmerinnen": 23, "\u00fcbersichtlich": 23, "nachbearbeitung": 23, "hinterlassen": [23, 162], "absch\u00e4tzung": 23, "zielgruppengr\u00f6\u00df": 23, "affinem": 23, "background": [23, 165, 258, 259, 261, 318, 319, 665, 669, 695, 707, 734, 760, 762, 763, 785, 848, 915, 953, 962, 968, 1016], "inklus": [23, 174, 187, 197, 210, 322, 1155, 1160, 1165], "betroffen": 23, "eu": [23, 32], "20000": [23, 153, 229], "erkennung": 23, "abstand": 23, "erfordert": [23, 1165], "vgl": [23, 187, 1175, 1178], "frosch": 23, "wassergla": 23, "selbst": [23, 37, 177, 187, 197, 832, 1155, 1156, 1165, 1168, 1174, 1179], "umstellung": 23, "zus\u00e4tzlichen": 23, "bedeutet": [23, 318], "besten": [23, 177, 243, 1158], "einsatz": [23, 1156], "erw\u00e4gung": 23, "ziehen": 23, "angegebenen": 23, "erheblichen": [23, 1158], "bed\u00fcrfnissen": 23, "kenntni": 23, "erlangt": 23, "mitgli": 23, "editor": [23, 30, 64, 169, 186, 328, 895, 1032, 1036, 1115, 1134], "verfasst": 23, "identisch": 23, "obig": 23, "behebt": 23, "inkonsistenzen": 23, "baut": [23, 1156, 1174], "neue": [23, 187, 197, 229, 257, 306, 322, 337, 360, 1175], "verliert": [23, 1179], "aufbaubeziehungen": 23, "verlangt": [23, 1155], "grundlag": 23, "folienmateri": 23, "meist": [23, 1174], "powerpoint": [23, 30], "propriet\u00e4r": 23, "formaten": 23, "praktisch": [23, 173, 1155], "unm\u00f6glich": 23, "macht": [23, 171, 173, 177, 181, 187, 193, 197, 239, 243, 337, 1158, 1165, 1172, 1179], "artefakttypen": 23, "livehack": [23, 24, 61, 116, 147, 173, 179, 181, 190, 191, 198, 217, 230, 232, 233, 245, 254, 259, 261, 262, 270, 273, 280, 282, 287, 293, 298, 301, 304, 305, 308, 309, 314, 315, 320, 321, 326, 342, 360, 450, 466, 473, 545, 761, 763, 775, 812, 1051, 1138, 1145, 1171], "st\u00fcckwerk": 23, "trainerin": 23, "oben": [23, 122, 162, 187, 198, 204, 1171], "zielt": 23, "darauf": [23, 162, 173, 1155, 1158], "transpar": [23, 29, 37, 794, 796, 846, 1121], "wiederzuverwenden": 23, "sodass": [23, 37, 181, 1174, 1179], "aufgebrochen": 23, "schwer": [23, 177, 187, 360, 1165, 1172, 1177], "abzusch\u00e4tzen": 23, "abzielt": 23, "weg": [23, 162, 163, 173, 177, 189, 202, 217, 257, 360, 1156, 1158, 1159, 1160, 1172], "dorthin": 23, "m\u00fcssen": [23, 187, 342, 347, 1165, 1172], "unterst\u00fctzt": [23, 1179], "kursf\u00fchrung": [23, 360], "fragt": [23, 163], "unklarheiten": 23, "weist": [23, 162], "etwaig": 23, "verwandt": [23, 1158], "hin": [23, 360], "plausibl": [23, 156], "realistisch": 23, "bzgl": 23, "kursdauer": 23, "strukturierten": [23, 198], "langweiligen": 23, "tatsachen": 23, "entsprechend": 23, "hunderttausend": 23, "allerd": [23, 187, 189, 1159, 1160, 1174, 1179], "keinen": [23, 162, 306, 1158], "einfluss": 23, "wahl": [23, 1179], "gespr\u00e4ch": 23, "betroffenen": 23, "assoziieren": 23, "metadaten": 23, "setzt": [23, 171, 1156, 1165], "vorau": 23, "beziehungen": 23, "passt": [23, 197, 198, 1171], "ganz": [23, 162, 163, 172, 173, 177, 187, 189, 203, 204, 218, 235, 236, 360, 1159, 1160, 1174], "gut": [23, 162, 163, 187, 198, 360, 678, 1155, 1171], "y": [23, 112, 136, 165, 174, 175, 177, 204, 213, 219, 220, 226, 227, 229, 230, 242, 252, 255, 264, 267, 274, 284, 288, 294, 310, 316, 388, 394, 412, 415, 418, 419, 423, 435, 439, 451, 513, 523, 569, 570, 571, 572, 574, 576, 577, 578, 579, 580, 581, 583, 585, 587, 588, 595, 602, 610, 649, 670, 671, 672, 674, 689, 691, 692, 693, 710, 721, 730, 778, 779, 810, 811, 843, 857, 870, 872, 883, 889, 914, 915, 916, 990, 998, 1004, 1062, 1065, 1113], "algorithmen": [23, 257, 1160], "automatisch": [23, 1175, 1179], "berechnen": 23, "semiautomatisch": 23, "kursnavig": 23, "nachbereitung": 23, "plaintext": 23, "artefakt": [23, 1160], "text": [23, 27, 39, 40, 61, 150, 164, 175, 186, 189, 194, 195, 202, 214, 215, 220, 227, 234, 236, 254, 257, 260, 267, 269, 288, 290, 384, 458, 763, 840, 902, 906, 933, 984, 1032, 1039, 1045, 1054, 1063, 1086, 1120, 1127, 1132, 1134, 1168], "restrukturierung": 23, "o": [23, 29, 32, 38, 64, 79, 86, 91, 98, 99, 101, 108, 111, 112, 116, 129, 133, 136, 147, 154, 156, 157, 164, 165, 173, 177, 181, 191, 193, 194, 195, 197, 202, 204, 205, 211, 214, 215, 219, 221, 224, 225, 226, 227, 230, 231, 232, 233, 238, 239, 243, 244, 245, 246, 248, 250, 253, 255, 257, 260, 264, 266, 269, 270, 271, 273, 274, 276, 279, 280, 283, 285, 286, 287, 289, 290, 292, 294, 304, 306, 308, 309, 314, 315, 316, 320, 321, 323, 326, 327, 328, 329, 330, 331, 332, 333, 342, 347, 349, 360, 362, 364, 380, 395, 404, 410, 411, 415, 417, 421, 424, 427, 428, 437, 439, 441, 443, 444, 446, 447, 451, 452, 458, 463, 477, 504, 515, 526, 567, 585, 669, 707, 733, 739, 740, 741, 760, 761, 762, 763, 778, 779, 787, 788, 810, 817, 836, 837, 838, 839, 840, 841, 843, 844, 846, 847, 855, 867, 870, 874, 875, 877, 878, 881, 882, 884, 890, 898, 899, 903, 906, 907, 914, 915, 927, 937, 940, 941, 942, 943, 944, 947, 952, 953, 961, 964, 967, 968, 969, 978, 984, 985, 986, 990, 992, 996, 1000, 1001, 1002, 1005, 1007, 1009, 1010, 1011, 1015, 1031, 1034, 1037, 1039, 1045, 1053, 1060, 1065, 1066, 1067, 1077, 1080, 1088, 1091, 1092, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1113, 1121, 1122, 1136, 1141, 1148, 1158, 1165, 1178], "konsistent": 23, "referenzierung": 23, "fremdmateri": 23, "speisekart": 23, "unterst\u00fctzung": 23, "themenauswahl": [23, 1155], "korrekt": [23, 1158], "vorbereitet": [23, 360], "ma\u00dfnahmen": 23, "sicherstellung": 23, "geplant": 23, "beispielsweis": [23, 168, 1178], "rahmen": 23, "webplattform": 23, "entsteht": 23, "erh\u00f6hung": 23, "sichtbarkeit": [23, 1158, 1175], "aktuel": 23, "inhalt": [23, 187, 189, 219, 343, 832, 1155, 1179], "wartung": 23, "performanceverbesserungen": 23, "plane": [23, 175, 177, 1110], "kein": [23, 172, 173, 177, 187, 197, 204, 219, 255, 274, 337, 360, 1173], "impactmein": 23, "sicherzustellen": 23, "erkl\u00e4rung": [23, 211], "erkl\u00e4ren": [23, 1158], "gew\u00fcnscht": [23, 187], "erreicht": [23, 162, 163, 1172], "hatt": [23, 162, 163, 177, 187, 189], "button": [23, 60, 116, 153, 161, 240, 907], "gew\u00e4hlt": [23, 162, 163], "dzugeh\u00f6rig": 23, "textfeld": 23, "l\u00e4sst": [23, 1174], "bearbeiten": 23, "daher": [23, 1179], "konvertiert": 23, "unten": [23, 122, 163, 177, 187, 1156], "beschriebenen": 23, "kan\u00e4len": 23, "promot": [23, 158], "angab": 23, "quellen": 23, "literatur": [23, 215, 582], "lightweight": [23, 144, 169, 186, 190, 206, 240, 242, 254, 670, 728, 731, 1108, 1120, 1161], "daringfirebal": 23, "project": [23, 24, 29, 30, 38, 42, 53, 59, 60, 63, 66, 69, 107, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 133, 136, 144, 150, 151, 154, 155, 157, 159, 160, 161, 166, 173, 175, 177, 183, 186, 190, 193, 200, 205, 214, 233, 237, 240, 243, 270, 273, 280, 287, 319, 346, 347, 353, 355, 360, 361, 431, 438, 442, 450, 452, 453, 454, 457, 458, 460, 462, 465, 466, 467, 473, 513, 514, 523, 526, 586, 588, 589, 733, 763, 810, 849, 905, 907, 909, 914, 915, 926, 944, 984, 985, 986, 999, 1000, 1008, 1011, 1061, 1067, 1094, 1096, 1106, 1107, 1109, 1110, 1114, 1122, 1124, 1138, 1140, 1144, 1145, 1150], "docutil": [23, 32, 34, 35, 36, 38], "sourceforg": 23, "io": [23, 32, 55, 64, 92, 129, 133, 154, 158, 160, 175, 177, 191, 193, 194, 195, 196, 203, 205, 206, 214, 215, 228, 244, 260, 267, 269, 275, 290, 291, 305, 311, 317, 330, 342, 345, 347, 349, 364, 568, 761, 763, 787, 806, 807, 822, 840, 843, 851, 906, 915, 916, 969, 977, 998, 1005, 1058, 1157, 1165, 1167, 1172, 1174, 1178], "generatoren": [23, 177, 244, 360], "staticgen": 23, "learn": [23, 29, 66, 69, 71, 76, 78, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 137, 154, 156, 174, 175, 177, 186, 190, 194, 215, 224, 304, 308, 328, 343, 345, 449, 713, 763, 852, 907, 915, 969, 1031, 1032, 1106, 1110, 1114, 1122, 1143], "moodl": [23, 107, 110, 111, 112, 116, 161, 346, 348, 349, 650, 664, 763, 840, 844, 859, 865, 884, 890, 906, 991, 994], "schoologi": 23, "eduongo": 23, "produkt": 23, "dienstleistungen": 23, "recherch": [23, 177], "hinblick": [23, 1167], "ihnen": [23, 163, 897, 1155, 1165, 1172], "nennen": 23, "beschreiben": 23, "st\u00e4rken": [23, 1158], "schw\u00e4chen": [23, 1160], "konkurrierenden": 23, "relevant": [23, 177, 360, 1178], "anbiet": 23, "ziel": [23, 1156, 1172], "allumfassend": 23, "eh": [23, 32, 187, 197, 202, 210, 236, 242, 246, 249, 294, 316], "vielmehr": 23, "bietet": [23, 168, 171, 1174], "beim": [23, 162, 163, 173, 177, 187, 1158], "verfassen": 23, "kernthema": 23, "zwischen": [23, 171, 187, 197, 204, 210, 360, 1158, 1159, 1160, 1172, 1179], "benutz": [23, 1175], "vorgaben": 23, "existiert": [23, 187, 199], "wald": 23, "dass": [23, 162, 163, 171, 173, 177, 181, 187, 198, 202, 204, 218, 342, 347, 360, 1155, 1158, 1159, 1160, 1165, 1171, 1172, 1175, 1179], "beisteuert": 23, "eben": [23, 168, 171, 197], "\u00fcbergreifend": 23, "definiert": [23, 173, 187, 1155, 1158], "ansatz": 23, "mir": [23, 162, 163, 177, 187, 198, 202, 234, 342, 347, 360, 1158, 1171], "verfolgt": [23, 1172], "essentiel": 23, "gesundheit": 23, "unterlagen": [23, 150, 217, 233, 245, 360], "licht": 23, "lesen": [23, 171, 172, 173, 187, 199, 342, 347], "einig": [23, 163, 174, 189, 360, 1158, 1165], "plugin": [23, 156, 477, 714, 998], "helfen": 23, "lieblo": 23, "halbherzig": 23, "On": [23, 98, 102, 107, 110, 111, 112, 116, 136, 154, 156, 169, 190, 206, 216, 232, 248, 250, 258, 259, 261, 264, 270, 276, 279, 318, 342, 427, 433, 442, 445, 477, 515, 523, 612, 631, 635, 664, 667, 707, 715, 734, 762, 763, 788, 811, 815, 840, 843, 844, 906, 908, 914, 916, 923, 927, 928, 931, 935, 942, 945, 947, 964, 972, 982, 987, 994, 995, 999, 1037, 1124, 1128, 1143, 1161], "zentral": [23, 150], "ergebni": [23, 239], "niemand": 23, "doc": [23, 37, 39, 66, 117, 129, 133, 158, 160, 173, 174, 176, 206, 214, 221, 223, 229, 238, 239, 242, 246, 249, 264, 307, 327, 339, 342, 347, 350, 351, 362, 562, 766, 781, 787, 790, 870, 892, 950, 1053, 1119], "show": [23, 24, 27, 29, 43, 58, 64, 116, 125, 129, 134, 153, 154, 156, 157, 161, 182, 190, 193, 194, 206, 215, 223, 229, 232, 239, 240, 242, 270, 282, 283, 296, 304, 312, 318, 319, 327, 328, 346, 348, 349, 350, 353, 412, 452, 454, 463, 494, 510, 516, 562, 651, 748, 773, 792, 794, 826, 837, 838, 870, 892, 895, 897, 899, 907, 909, 914, 915, 916, 935, 966, 968, 972, 977, 981, 994, 996, 1004, 1043, 1060, 1062, 1113, 1114, 1136, 1143, 1150, 1163], "revealj": 23, "option": [23, 31, 79, 148, 154, 155, 156, 160, 164, 169, 173, 178, 194, 206, 230, 242, 246, 254, 257, 258, 259, 267, 272, 276, 288, 296, 297, 305, 308, 312, 313, 318, 322, 342, 362, 371, 372, 388, 399, 400, 439, 452, 455, 456, 464, 465, 471, 498, 526, 748, 763, 779, 830, 834, 837, 838, 846, 898, 916, 917, 919, 927, 940, 944, 978, 986, 1042, 1060, 1063, 1136, 1143, 1150, 1158, 1163, 1176], "webslid": 23, "tv": [23, 32, 161], "sicht": [23, 172, 243, 1158], "entscheidend": 23, "usp": 23, "vorteilhaft": 23, "unterscheidet": [23, 1158], "600": [23, 223, 229, 620], "kernfeatur": 23, "inbeziehungsetzen": 23, "dessen": [23, 172, 187, 284, 360, 1156, 1160, 1173], "versagen": 23, "implementierung": 23, "solcher": [23, 171, 187], "featur": [23, 29, 42, 46, 55, 56, 60, 79, 81, 114, 116, 134, 159, 161, 171, 182, 187, 190, 191, 193, 195, 200, 205, 214, 223, 229, 232, 239, 240, 242, 243, 245, 246, 285, 318, 344, 360, 361, 437, 441, 446, 447, 449, 450, 452, 641, 666, 669, 676, 683, 694, 708, 718, 719, 723, 727, 732, 740, 759, 760, 762, 763, 802, 810, 907, 915, 916, 936, 968, 978, 985, 986, 1002, 1016, 1017, 1018, 1019, 1023, 1026, 1033, 1045, 1046, 1061, 1064, 1065, 1066, 1067, 1080, 1091, 1094, 1095, 1096, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1110, 1111, 1114, 1118, 1122, 1124, 1126, 1135, 1138, 1140, 1141, 1145, 1156, 1158, 1159, 1161, 1165, 1172], "indem": [23, 197, 343, 1165], "foku": [23, 360], "schulbetrieb": 23, "legen": [23, 897], "ferner": 23, "schwere": 23, "abh\u00e4ngigkeiten": [23, 1168], "fett": [23, 187, 204], "datenbanken": [23, 210, 360], "webserv": [23, 915], "hintergrund": [23, 197], "redaktionel": 23, "arbeit": [23, 177, 1156], "offlin": 23, "laptop": [23, 155, 157, 164, 926], "zug": 23, "erledigen": [23, 1156], "einschr\u00e4nkung": 23, "geserv": 23, "erarbeitet": [23, 1155], "sinn": [23, 181, 1158], "prinzip": [23, 1175, 1177, 1179], "kostenlo": 23, "genutzt": [23, 171], "weiterentwickelt": [23, 1160, 1165], "f\u00f6rderbedingungen": 23, "projektseit": 23, "ver\u00f6ffentlichen": 23, "nachvollziehbar": 23, "strukturieren": 23, "f\u00f6rderzusag": 23, "hinwei": 23, "verpflichtend": 23, "gesondert": 23, "erw\u00e4hnen": 23, "projektzwischenbericht": 23, "projektzusammenfassung": 23, "projektendbericht": 23, "entwicklerdokument": 23, "anwenderdokument": 23, "dienstleistungsbeschreibung": 23, "abh\u00e4ngig": 23, "dokument": [23, 172, 187, 198, 219, 234, 246, 306, 337, 1173], "externkommunik": 23, "erreichung": 23, "nachhaltigkeit": 23, "projektergebnistyp": 23, "haupteigenschaften": 23, "funktionalit\u00e4t": [23, 187], "sourcecod": [23, 171], "bestehend": 23, "unabh\u00e4ngigem": 23, "unitgetestetem": 23, "core": [23, 59, 63, 153, 154, 156, 157, 186, 189, 193, 198, 211, 226, 237, 240, 242, 249, 252, 267, 271, 274, 284, 288, 310, 316, 322, 365, 377, 422, 466, 467, 474, 479, 493, 494, 525, 577, 582, 675, 705, 725, 781, 785, 810, 847, 885, 901, 966, 969, 970, 981, 982, 998, 1065, 1108, 1113, 1126, 1127, 1129, 1130, 1141, 1176], "reih": [23, 168, 181, 189], "direct": [23, 37, 39, 64, 116, 133, 151, 154, 215, 273, 276, 328, 399, 410, 445, 458, 585, 731, 769, 846, 903, 930, 932, 948, 950, 951, 986, 1000, 1027, 1113, 1121, 1130, 1163, 1166], "generierten": 23, "kursagenda": 23, "graphen": 23, "lizenz": 23, "gpl": [23, 577, 726, 766], "pypi": [23, 137, 150, 186, 190, 205, 221, 237, 263, 1135, 1136, 1141], "installierbar": 23, "paket": [23, 171, 1156], "generiert": [23, 187], "readthedoc": [23, 32, 39], "gehostet": 23, "verf\u00fcgbar": [23, 970, 1168], "obigen": 23, "bisherigen": [23, 1160], "aktuellen": [23, 197], "bereich": [23, 177, 360], "umfeld": 23, "projektantrag": 23, "bisher": [23, 150, 1155], "softwarebasi": 23, "grundlegend": [23, 199, 1160, 1165, 1172, 1174, 1177], "semiprofessionel": 23, "visualisierung": 23, "plan": [23, 42, 62, 153, 177, 186, 221, 230, 240, 305, 341, 342, 346, 350, 356, 449, 565, 675, 733, 810, 1141, 1148], "kurz": [23, 162, 163, 187, 189, 198, 203, 218, 243, 1157, 1171, 1174], "lebensl\u00e4uf": 23, "projektbeteiligten": 23, "sowi": [23, 1168], "ver\u00f6ffentlichungen": 23, "b\u00fccher": 23, "fachartikel": 23, "patent": 23, "vortr\u00e4g": 23, "gebiet": [23, 163, 1177], "projektinhalt": 23, "verdeutlichen": [23, 1156], "teamleitung": 23, "softwareprojekt": 23, "stefan": [23, 172], "walkner": 23, "1983": [23, 568], "hallein": 23, "master": [23, 62, 136, 157, 160, 169, 343, 344, 806, 810, 899, 911], "scienc": [23, 28, 79, 161, 175, 186, 190, 195, 224, 293, 307, 344, 568, 621, 1033, 1112, 1113, 1114, 1115], "salzburg": 23, "consult": [23, 59, 60, 63, 151, 154, 167, 205, 223, 229, 239, 242, 246, 348, 474], "isamberth": 23, "adnet": 23, "2000": [23, 210, 213, 229, 234, 246, 267, 451, 477, 970], "2002": [23, 229, 577, 726], "divers": [23, 178, 1157], "2005": [23, 568], "2007": 23, "entwicklungsleit": 23, "nextsens": 23, "2016": [23, 189, 190, 211, 214, 229, 237, 263, 270, 278, 287, 309, 1108], "programmiererfahrung": [23, 1165, 1172, 1179], "bash": [23, 100, 116, 151, 161, 170, 194, 204, 206, 226, 234, 242, 249, 252, 260, 267, 269, 270, 274, 281, 284, 288, 290, 310, 316, 322, 342, 343, 344, 347, 349, 361, 473, 487, 515, 516, 517, 518, 519, 520, 521, 522, 525, 567, 717, 720, 740, 761, 762, 763, 833, 837, 838, 839, 840, 842, 843, 844, 845, 847, 848, 851, 852, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 870, 871, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 895, 900, 901, 906, 929, 932, 935, 937, 939, 942, 945, 947, 948, 961, 963, 964, 967, 969, 984, 986, 988, 989, 990, 991, 992, 993, 994, 995, 998, 1005, 1086, 1156, 1167], "davon": [23, 162, 173, 1158, 1177], "teamleit": 23, "m\u00f6chten": [23, 1179], "ggf": 23, "kennenlernen": 23, "knackig": [23, 150], "darstellung": 23, "handelnden": 23, "personen": 23, "sendung": 23, "minuten": [23, 898], "millionen": 23, "ihren": [23, 187, 199], "antrag": 23, "nochmal": 23, "vorgelesen": 23, "bekommen": [23, 181, 360, 1155, 1168], "un": [23, 181, 189, 360, 788, 894, 1027, 1156], "hintergrundmusik": 23, "windger\u00e4usch": 23, "gerad": [23, 163, 197, 198, 360, 1158, 1171], "f\u00f6rdern": 23, "sollen": 23, "animiert": 23, "produktvideo": 23, "interessieren": 23, "sicher": [23, 173, 177], "mindesten": [23, 173], "vier": [23, 173, 187, 197, 202, 204, 219, 223, 226, 234, 236, 239, 246, 252, 264, 267, 271, 274, 284, 294, 306, 310, 322, 337, 1165, 1178], "monat": 23, "einreichschluss": 23, "uneingeschr\u00e4nkt": 23, "aufrufbar": 23, "youtu": [23, 720, 724], "hobyb1zukdi": 23, "projektrisiken": 23, "sehen": [23, 163], "wenig": [23, 172, 187, 257, 360, 1156], "pflegen": 23, "frontalen": 23, "vortragsstil": 23, "starker": 23, "paradigmenwechsel": 23, "wechsel": 23, "jahrelang": 23, "gewohnten": 23, "verfahrensweisen": 23, "abrupt": 23, "gro\u00dfer": 23, "monolithisch": 23, "zerhacken": 23, "welchen": 23, "bewerten": 23, "messen": 23, "zielerreichung": 23, "kriterium": 23, "arbeitserleichterung": 23, "minimal": [23, 187], "erfolg": [23, 1158], "mindestkriterien": 23, "positiven": 23, "projekterfolg": 23, "jedenfal": 23, "abgedeckt": 23, "ausgezeichnet": 23, "kriterien": [23, 168, 181, 898], "angestrebten": 23, "ausgezeichneten": 23, "anerkennen": 23, "gesteigerten": 23, "effekt": [23, 187, 198, 1171, 1179], "bekundet": 23, "medien": [23, 1178], "berichtet": 23, "migrat": [23, 181], "zehn": [23, 197], "migrieren": 23, "verwenden": [23, 168, 181, 187, 193, 197, 202, 1178], "untereinand": 23, "zutun": 23, "zusammenzuarbeiten": 23, "kooperationspartner_innen": 23, "dienstleister_innen": 23, "mitwirkend": 23, "zielgruppenvertreter_innen": 23, "werbeagentur": 23, "schaar": 23, "logo": 23, "webdesign": 23, "wof\u00fcr": 23, "arbeitsstunden": 23, "geld": 23, "allem": [23, 162, 177, 187, 360, 1177], "eingesetzt": [23, 1156, 1173], "basisarbeit": 23, "workflow": [23, 114, 181, 215, 230, 783, 978, 1173], "datenstrukturen": [23, 199, 217, 238, 1160], "zeitgem\u00e4\u00df": 23, "interakt": [23, 1058], "know": [23, 42, 59, 63, 66, 70, 81, 85, 134, 151, 153, 154, 155, 156, 159, 160, 161, 169, 174, 175, 178, 182, 183, 186, 190, 194, 205, 206, 213, 216, 273, 276, 280, 305, 344, 375, 377, 383, 388, 405, 415, 427, 429, 431, 433, 437, 438, 439, 441, 445, 446, 447, 449, 458, 464, 468, 469, 481, 518, 526, 553, 569, 571, 577, 579, 583, 602, 639, 642, 645, 666, 667, 669, 678, 680, 682, 705, 707, 716, 725, 727, 731, 741, 760, 762, 763, 765, 781, 788, 810, 849, 870, 907, 910, 914, 916, 927, 932, 934, 943, 953, 981, 1002, 1010, 1015, 1016, 1027, 1032, 1035, 1038, 1039, 1058, 1065, 1103, 1107, 1141, 1166], "welchem": [23, 173], "umfang": 23, "sachressourcen": 23, "ben\u00f6tigt": [23, 198, 199, 1171], "zugekauft": 23, "backendprogrammierung": 23, "programmiersprach": [23, 1157, 1160, 1172, 1174], "200": [23, 150, 151, 173, 175, 187, 204, 206, 213, 220, 223, 226, 229, 234, 236, 242, 246, 249, 252, 264, 267, 271, 278, 288, 294, 306, 310, 316, 322, 334, 339, 597, 598, 599, 600, 601, 603, 604, 605, 606, 620, 674, 788, 968, 1082], "stunden": 23, "webprogrammierung": 23, "css": [23, 151, 152], "150": [23, 173, 187, 197, 204, 213, 223, 226, 229, 234, 236, 242, 246, 249, 252, 255, 264, 267, 284, 288, 294, 306, 310, 316, 322, 667], "kreativarbeit": 23, "erreichen": [23, 1172, 1175], "pers\u00f6nlich": [23, 360], "freund": 23, "ebenfal": [23, 1173], "t\u00e4tig": 23, "mich": [23, 162, 177, 197, 205, 360, 1155], "ermutigt": 23, "\u00fcberhaupt": [23, 1165, 1172, 1179], "starten": [23, 1177], "repr\u00e4sent": 23, "post": [23, 67, 94, 150, 154, 156, 158, 159, 160, 161, 164, 215, 230, 279, 375, 389, 473, 569, 907, 976, 978, 981, 1107], "facebookseit": 23, "relevanten": 23, "foren": 23, "linkedin": 23, "typisch": [23, 198, 1158], "projektbeginn": 23, "abschluss": [23, 163, 342], "oktob": 23, "projektdau": 23, "\u00fcberschreiten": 23, "mitarbeiter_innen": 23, "stundenanzahl": 23, "jeweilig": 23, "stundens\u00e4tz": 23, "senior": 23, "junior": 23, "programmierer_in": 23, "designer_in": 23, "contentmanager_in": 23, "projektmanager_in": 23, "assistenz": 23, "administr": [23, 161, 847, 914, 923, 930, 969], "sachbearbeiter_in": 23, "social": [23, 45, 469, 476, 480, 493, 494, 495, 498, 504, 507, 508, 509], "media": [23, 79, 171, 810, 915], "spzialist_in": 23, "firmeneigent\u00fcmer_innen": 23, "gesellschafter_innen": 23, "vereinsfunktion\u00e4r_innen": 23, "betr\u00e4gt": 23, "f\u00f6rderbar": 23, "stundensatz": 23, "brutto": 23, "nachweislich": 23, "angestellt": 23, "projektmitarbeiter_innen": 23, "errechnet": 23, "vollzeitvertrag": 23, "jahresstundenteil": 23, "1720": [23, 229], "teilzeitbesch\u00e4ftigten": 23, "aliquot": 23, "reduziert": [23, 177], "dienstgeberanteil": 23, "faktor": 23, "ber\u00fccksichtigt": 23, "kalkul": 23, "jahresbruttogehalt": 23, "hohe": 23, "risiko": 23, "h\u00f6herer": 23, "eigenmittelanteil": 23, "bedingung": 23, "festgelegt": 23, "erh\u00f6hen": 23, "gemeinkosten": 23, "gef\u00f6rdert": 23, "antr\u00e4gen": 23, "diplomarbeiten": 23, "betrag": 23, "8000": [23, 229], "frontendprogrammierung": 23, "4500": [23, 229], "sachkosten": 23, "projektbedingt": 23, "betriebskosten": 23, "unmittelbar": 23, "projektt\u00e4tigkeit": 23, "entstehen": [23, 334], "leistungen": 23, "reisen": 23, "gliedern": 23, "rechnung": [23, 163, 271], "enthalten": 23, "umsatzsteu": 23, "darf": [23, 342], "kostenabrechnung": 23, "f\u00f6rdernehmer_in": 23, "vorsteuerabzugsberechtigt": 23, "13500": [23, 229], "beantragt": 23, "differenz": [23, 249], "aufgliedern": 23, "eigenmittel": 23, "f\u00f6rderungseinrichtungen": 23, "fremdmittel": 23, "kredit": 23, "leas": 23, "pro": [23, 190, 747, 898, 1001], "bono": 23, "beitrag": 23, "restfinanzierung": 23, "gesamtbetrag": 23, "ber\u00fccksichtigten": 23, "einzelkosten": 23, "achtung": 23, "gesamtprojektkosten": 23, "h\u00f6her": 23, "auszuf\u00fcllen": 23, "leer": [23, 204, 210, 218, 274], "bleiben": [23, 163, 187, 197, 1165, 1172, 1175], "reich": [23, 187], "nein": [23, 198, 204, 210, 255, 264, 322, 1171], "neben": [23, 177], "antr\u00e4g": 23, "oderstipendium": 23, "laufenden": 23, "call": [23, 32, 42, 50, 64, 67, 111, 112, 122, 133, 150, 153, 154, 155, 156, 157, 159, 164, 171, 174, 176, 184, 190, 192, 213, 221, 223, 229, 234, 237, 239, 244, 246, 251, 252, 255, 270, 272, 274, 287, 288, 296, 305, 310, 312, 342, 347, 349, 360, 364, 371, 375, 376, 379, 390, 406, 408, 412, 418, 419, 422, 432, 435, 436, 444, 452, 455, 467, 474, 478, 493, 494, 495, 511, 515, 520, 523, 524, 526, 527, 539, 553, 567, 571, 574, 577, 579, 583, 592, 638, 639, 642, 644, 645, 649, 651, 656, 663, 671, 672, 680, 684, 695, 698, 701, 702, 703, 704, 714, 717, 725, 730, 731, 739, 740, 741, 743, 747, 762, 763, 764, 778, 788, 790, 792, 796, 798, 800, 802, 804, 806, 808, 810, 815, 818, 824, 829, 830, 836, 840, 843, 844, 845, 846, 848, 850, 853, 854, 867, 870, 906, 910, 918, 928, 929, 932, 933, 934, 935, 937, 939, 945, 946, 947, 952, 953, 960, 961, 963, 964, 967, 968, 969, 978, 981, 982, 984, 986, 1003, 1005, 1006, 1007, 1012, 1018, 1020, 1021, 1022, 1024, 1025, 1027, 1028, 1029, 1049, 1050, 1054, 1056, 1059, 1060, 1065, 1083, 1087, 1108, 1113, 1121, 1124, 1129, 1130, 1142, 1143, 1144, 1163, 1167, 1175, 1176, 1178], "weiteren": 23, "stipendium": 23, "imlaufenden": 23, "habe": [23, 162, 163, 172, 177, 193, 322, 360], "zuge": 23, "projektantragsstellung": 23, "rundschreiben": 23, "expert": [23, 28, 158, 159, 164, 526, 849, 870, 916, 1112], "group": [23, 29, 102, 103, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 133, 134, 147, 169, 174, 186, 191, 193, 202, 205, 206, 213, 219, 226, 234, 243, 246, 252, 255, 267, 281, 288, 291, 294, 316, 322, 342, 355, 356, 360, 371, 396, 439, 440, 515, 545, 763, 810, 837, 838, 840, 843, 844, 845, 856, 857, 858, 859, 860, 861, 862, 863, 865, 866, 892, 896, 897, 898, 899, 903, 906, 914, 926, 927, 935, 936, 937, 942, 945, 947, 961, 964, 969, 982, 1005, 1086, 1141], "wirtschaftkamm": 23, "nehmen": [23, 163, 1157], "larg": [24, 30, 38, 79, 156, 159, 161, 186, 205, 206, 215, 226, 232, 273, 276, 418, 427, 429, 433, 439, 440, 479, 704, 713, 761, 804, 810, 984, 1008, 1010, 1012, 1032, 1039, 1065, 1086, 1122, 1126, 1130, 1148], "amount": [24, 107, 111, 112, 154, 155, 156, 159, 165, 186, 193, 221, 271, 272, 439, 451, 582, 704, 705, 841, 843, 927, 944, 1032], "pdf": [24, 37, 179, 181, 186, 190, 193, 194, 196, 246, 260, 269, 270, 290, 291, 313, 341, 342, 345, 347, 350, 361, 870, 892, 893, 916, 948, 986, 1080, 1157, 1158, 1159, 1167, 1168, 1174, 1175, 1177, 1178, 1179], "Not": [24, 43, 47, 53, 81, 110, 156, 157, 158, 161, 164, 186, 189, 190, 230, 232, 233, 234, 247, 256, 283, 287, 379, 388, 410, 422, 425, 427, 433, 449, 452, 515, 532, 534, 567, 574, 576, 578, 583, 584, 652, 664, 684, 695, 699, 701, 702, 703, 721, 728, 731, 737, 742, 761, 763, 773, 781, 788, 792, 794, 908, 946, 966, 968, 970, 972, 982, 1005, 1007, 1012, 1013, 1014, 1015, 1025, 1027, 1039, 1048, 1053, 1108, 1112, 1117, 1131, 1133, 1149, 1161], "satisfi": [24, 32, 190, 468, 584, 672, 684, 717], "colleagu": [24, 28, 165, 206, 429, 641, 1010, 1027, 1039], "aren": [24, 151, 236, 246, 680, 871, 960, 970], "either": [24, 39, 42, 43, 154, 156, 164, 165, 270, 273, 276, 427, 494, 667, 675, 678, 739, 837, 838, 867, 870, 902, 916, 1007, 1074, 1124, 1161], "nobodi": [24, 43, 154, 156, 175, 186, 226, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322, 430, 432, 569, 610, 682, 765, 837, 838, 847, 862, 864, 870, 871, 923, 931, 1060, 1114, 1144, 1150], "doe": [24, 38, 45, 48, 49, 62, 70, 79, 84, 85, 111, 112, 114, 116, 134, 150, 153, 154, 155, 158, 159, 160, 161, 164, 165, 169, 174, 182, 186, 190, 192, 204, 213, 216, 229, 246, 249, 255, 273, 274, 276, 279, 281, 283, 305, 318, 322, 342, 353, 369, 375, 383, 387, 388, 389, 390, 397, 406, 407, 416, 419, 422, 423, 425, 427, 429, 431, 433, 438, 439, 440, 443, 444, 445, 449, 451, 452, 453, 457, 463, 464, 467, 469, 472, 477, 481, 489, 491, 493, 519, 520, 521, 522, 523, 526, 527, 550, 559, 562, 569, 570, 571, 574, 577, 579, 580, 582, 585, 608, 615, 623, 629, 638, 641, 642, 648, 649, 656, 667, 672, 673, 675, 682, 684, 704, 706, 714, 715, 717, 721, 725, 726, 727, 730, 731, 733, 737, 738, 743, 759, 761, 773, 774, 778, 779, 781, 788, 802, 810, 815, 826, 836, 845, 849, 850, 852, 855, 903, 907, 914, 915, 916, 927, 932, 933, 935, 939, 942, 953, 957, 960, 966, 968, 969, 978, 982, 984, 985, 986, 987, 992, 996, 1000, 1001, 1003, 1005, 1006, 1007, 1008, 1010, 1012, 1021, 1025, 1027, 1028, 1032, 1035, 1038, 1056, 1057, 1058, 1077, 1085, 1087, 1114, 1116, 1117, 1119, 1126, 1127, 1130, 1131, 1132, 1134, 1136, 1141, 1161, 1163], "even": [24, 29, 59, 60, 63, 79, 114, 142, 154, 155, 156, 161, 165, 175, 176, 186, 190, 193, 194, 198, 200, 205, 211, 213, 214, 216, 217, 226, 230, 233, 234, 237, 240, 243, 245, 246, 248, 251, 252, 263, 273, 276, 287, 288, 306, 309, 316, 322, 406, 415, 429, 435, 439, 467, 472, 568, 576, 579, 625, 672, 714, 717, 724, 733, 761, 763, 802, 810, 847, 866, 907, 915, 932, 933, 966, 968, 969, 985, 1004, 1016, 1027, 1053, 1056, 1067, 1070, 1071, 1106, 1108, 1129, 1136, 1143, 1163, 1171], "tech": [24, 45, 153], "although": [24, 29, 79, 129, 133, 154, 156, 160, 165, 176, 186, 192, 216, 236, 246, 360, 523, 667, 668, 709, 731, 849, 852, 923, 1003, 1008, 1065, 1114], "gain": [24, 161, 273, 276, 439, 810, 849], "incred": 24, "momentum": 24, "expect": [24, 38, 50, 153, 156, 202, 223, 229, 230, 239, 242, 249, 274, 288, 306, 308, 310, 416, 454, 469, 512, 577, 642, 695, 704, 717, 783, 794, 907, 915, 916, 955, 972, 981, 1027, 1037, 1050, 1080, 1090, 1113, 1147, 1148, 1151], "context": [24, 29, 59, 63, 111, 112, 154, 175, 178, 190, 193, 195, 197, 204, 235, 239, 240, 242, 246, 249, 255, 263, 267, 272, 282, 283, 284, 287, 294, 298, 301, 304, 305, 308, 309, 316, 360, 426, 488, 489, 503, 571, 577, 705, 726, 761, 763, 772, 777, 780, 782, 787, 790, 791, 792, 793, 796, 797, 801, 802, 803, 805, 806, 807, 814, 815, 816, 818, 819, 820, 821, 824, 825, 828, 830, 831, 843, 847, 906, 907, 930, 970, 981, 982, 1009, 1018, 1106, 1117], "defin": [24, 53, 117, 121, 124, 125, 129, 132, 134, 147, 157, 174, 176, 191, 193, 195, 197, 202, 210, 213, 214, 216, 223, 227, 229, 232, 236, 239, 242, 246, 254, 256, 267, 278, 288, 305, 306, 318, 322, 337, 348, 369, 374, 379, 384, 385, 388, 405, 406, 407, 408, 409, 410, 423, 431, 432, 433, 435, 439, 452, 453, 458, 459, 460, 477, 481, 489, 510, 511, 523, 545, 553, 570, 571, 572, 574, 576, 577, 579, 580, 583, 584, 585, 592, 595, 616, 620, 641, 648, 667, 668, 677, 678, 679, 680, 681, 684, 704, 709, 713, 722, 725, 730, 731, 754, 769, 771, 783, 847, 867, 907, 908, 916, 927, 934, 952, 974, 984, 986, 1000, 1002, 1006, 1008, 1010, 1022, 1027, 1039, 1049, 1104, 1117, 1121, 1153, 1161, 1163, 1166], "solv": [24, 45, 81, 90, 116, 151, 154, 155, 184, 186, 190, 191, 193, 195, 206, 211, 224, 232, 237, 240, 251, 254, 276, 280, 287, 291, 293, 296, 308, 312, 328, 409, 451, 460, 666, 740, 745, 748, 762, 763, 810, 849, 906, 947, 961, 994, 996, 998, 1027, 1103, 1108, 1114, 1163, 1164], "provid": [24, 27, 37, 58, 66, 69, 154, 156, 157, 158, 160, 161, 164, 165, 169, 182, 223, 229, 230, 239, 242, 246, 280, 296, 312, 425, 454, 459, 460, 469, 480, 488, 641, 704, 731, 810, 846, 849, 889, 915, 916, 923, 937, 969, 978, 1010, 1019, 1037, 1050, 1113, 1135, 1143, 1163], "depth": [24, 186, 190, 211, 223, 229, 239, 240, 242, 429, 729, 1012, 1108, 1112, 1113], "repres": [24, 154, 156, 178, 223, 229, 239, 242, 246, 267, 278, 328, 438, 472, 489, 491, 578, 761, 781, 806, 843, 846, 914, 916, 944, 1039, 1065, 1103, 1107, 1126, 1133, 1166], "own": [24, 28, 40, 43, 66, 111, 112, 154, 155, 157, 158, 164, 169, 182, 186, 232, 256, 261, 270, 280, 305, 318, 319, 429, 435, 450, 464, 472, 489, 494, 558, 559, 568, 658, 659, 661, 662, 676, 680, 683, 695, 705, 707, 719, 727, 742, 761, 762, 763, 810, 843, 845, 846, 855, 857, 858, 866, 867, 889, 899, 914, 915, 927, 934, 952, 957, 968, 969, 981, 1000, 1007, 1024, 1029, 1030, 1032, 1115, 1148, 1163, 1164, 1166], "yield": [24, 29, 173, 174, 187, 190, 191, 193, 202, 214, 221, 227, 231, 233, 235, 236, 242, 246, 251, 253, 263, 266, 267, 274, 282, 283, 284, 287, 288, 293, 295, 306, 309, 310, 316, 322, 410, 479, 488, 695, 698, 701, 702, 703, 763, 1005, 1009, 1011, 1012, 1014, 1033, 1043, 1064, 1065, 1066, 1067, 1080, 1091, 1106, 1118], "multipl": [24, 35, 36, 59, 63, 77, 107, 111, 112, 154, 155, 157, 171, 186, 190, 193, 213, 214, 215, 227, 229, 246, 281, 305, 365, 367, 371, 372, 375, 384, 386, 389, 398, 405, 409, 427, 432, 445, 450, 457, 489, 503, 516, 571, 584, 642, 649, 662, 689, 695, 717, 719, 726, 734, 737, 741, 742, 761, 763, 779, 781, 787, 791, 792, 800, 801, 802, 810, 812, 814, 815, 818, 819, 825, 828, 831, 843, 846, 847, 850, 852, 857, 858, 903, 906, 915, 936, 952, 957, 977, 990, 1027, 1038, 1039, 1052, 1053, 1058, 1108, 1133], "artifact": [24, 160, 164, 178, 183, 296, 312, 445, 771, 984, 985, 986, 996, 1150, 1163], "complet": [24, 42, 60, 64, 79, 116, 117, 133, 150, 153, 154, 175, 186, 194, 202, 211, 224, 227, 230, 237, 251, 252, 254, 281, 287, 293, 298, 305, 318, 327, 328, 409, 426, 439, 452, 464, 516, 525, 570, 571, 645, 714, 729, 761, 804, 810, 837, 838, 848, 910, 916, 931, 968, 1005, 1009, 1031, 1032, 1108, 1113, 1114, 1116, 1122, 1124, 1135, 1136, 1153, 1161], "prepar": [27, 114, 116, 132, 150, 153, 186, 243, 342, 360, 473, 514, 545, 607, 644, 977, 1001, 1104, 1113, 1142], "base": [27, 29, 30, 42, 45, 53, 79, 81, 98, 108, 116, 129, 134, 146, 154, 156, 157, 169, 176, 181, 186, 187, 190, 193, 194, 197, 201, 204, 206, 216, 230, 232, 235, 239, 240, 244, 249, 251, 257, 264, 267, 272, 274, 278, 279, 280, 281, 282, 283, 288, 293, 304, 305, 306, 308, 309, 310, 316, 319, 322, 338, 342, 346, 353, 375, 383, 410, 427, 445, 450, 451, 469, 473, 478, 479, 481, 488, 513, 525, 529, 545, 556, 598, 600, 601, 602, 603, 605, 606, 610, 642, 644, 645, 647, 689, 706, 707, 714, 719, 726, 730, 742, 747, 749, 751, 753, 757, 760, 762, 763, 783, 790, 794, 806, 810, 812, 861, 863, 903, 907, 966, 978, 982, 984, 985, 998, 999, 1001, 1009, 1016, 1018, 1023, 1024, 1064, 1070, 1086, 1106, 1115, 1116, 1130, 1160, 1161, 1164], "exist": [27, 38, 46, 47, 53, 55, 56, 110, 111, 112, 147, 150, 160, 165, 194, 206, 213, 279, 283, 327, 339, 342, 345, 427, 449, 451, 467, 472, 492, 495, 515, 526, 532, 534, 567, 577, 625, 660, 662, 671, 725, 761, 763, 810, 837, 838, 843, 845, 852, 861, 863, 872, 876, 877, 889, 906, 914, 916, 927, 932, 936, 942, 945, 947, 964, 971, 978, 996, 1000, 1001, 1006, 1007, 1016, 1021, 1056, 1058, 1076, 1117, 1125, 1126, 1136, 1141, 1143], "navig": [27, 1133], "through": [27, 34, 38, 62, 74, 79, 105, 151, 153, 154, 156, 161, 165, 169, 182, 186, 190, 192, 195, 206, 214, 215, 216, 221, 227, 280, 282, 283, 298, 301, 304, 309, 349, 353, 360, 379, 399, 418, 438, 442, 455, 464, 495, 517, 520, 586, 588, 589, 638, 639, 642, 645, 667, 682, 684, 709, 717, 721, 727, 731, 781, 808, 841, 849, 897, 907, 915, 916, 925, 978, 981, 982, 1007, 1012, 1015, 1030, 1032, 1035, 1070, 1115, 1130, 1161, 1162, 1166], "deviat": [27, 161, 174, 182, 191, 215, 246, 360, 810], "after": [27, 43, 150, 151, 154, 155, 156, 161, 164, 174, 183, 186, 193, 206, 213, 223, 229, 239, 242, 245, 246, 252, 267, 272, 279, 281, 288, 316, 328, 367, 375, 376, 409, 429, 436, 455, 457, 493, 494, 517, 524, 576, 579, 592, 627, 675, 677, 678, 680, 689, 695, 742, 761, 788, 792, 798, 850, 853, 870, 871, 903, 914, 954, 972, 977, 978, 981, 984, 1003, 1005, 1007, 1032, 1033, 1037, 1073, 1086, 1104, 1112, 1121, 1133, 1142, 1143, 1148], "writeup": [27, 165, 996], "what": [27, 28, 43, 44, 47, 48, 55, 56, 57, 58, 59, 63, 66, 70, 79, 84, 87, 88, 98, 99, 100, 105, 108, 116, 121, 122, 129, 134, 151, 153, 154, 155, 156, 157, 158, 159, 160, 165, 169, 173, 174, 175, 176, 177, 178, 180, 182, 186, 187, 190, 191, 192, 193, 194, 195, 196, 205, 213, 215, 216, 230, 231, 232, 241, 246, 254, 260, 270, 273, 276, 280, 282, 283, 296, 301, 304, 312, 316, 318, 319, 327, 328, 334, 342, 345, 347, 349, 350, 353, 364, 372, 377, 387, 388, 390, 403, 412, 415, 422, 425, 427, 429, 430, 433, 434, 435, 439, 443, 445, 450, 451, 454, 459, 461, 468, 470, 472, 493, 494, 504, 510, 512, 521, 524, 545, 546, 549, 552, 555, 558, 561, 562, 564, 574, 577, 579, 580, 581, 582, 583, 585, 592, 595, 602, 638, 645, 654, 672, 675, 678, 684, 689, 695, 705, 716, 717, 725, 726, 727, 731, 734, 738, 740, 741, 747, 759, 761, 762, 763, 771, 774, 778, 781, 783, 788, 806, 813, 818, 823, 836, 837, 838, 840, 841, 843, 844, 846, 847, 849, 850, 852, 854, 855, 856, 859, 860, 861, 862, 863, 864, 865, 870, 885, 886, 888, 906, 907, 914, 915, 916, 918, 919, 920, 921, 922, 933, 934, 940, 941, 942, 943, 945, 947, 952, 953, 954, 955, 956, 961, 964, 967, 969, 970, 972, 973, 976, 977, 978, 980, 982, 985, 994, 995, 999, 1001, 1002, 1003, 1005, 1007, 1009, 1010, 1013, 1014, 1018, 1019, 1027, 1031, 1032, 1050, 1056, 1060, 1065, 1068, 1076, 1103, 1107, 1115, 1117, 1124, 1133, 1141, 1143, 1147, 1148, 1150, 1152, 1163, 1166], "collect": [27, 29, 150, 153, 155, 198, 205, 214, 220, 221, 238, 240, 241, 242, 254, 263, 265, 272, 280, 282, 283, 287, 298, 301, 304, 305, 308, 309, 321, 327, 438, 445, 556, 602, 717, 726, 738, 763, 810, 841, 913, 994, 1005, 1009, 1015, 1023, 1057, 1063, 1067, 1096, 1101, 1103, 1106, 1107, 1122, 1135, 1136, 1141, 1143, 1171], "question": [27, 29, 32, 35, 36, 38, 103, 116, 128, 156, 161, 169, 174, 186, 190, 192, 214, 215, 216, 226, 227, 229, 230, 232, 252, 342, 349, 356, 384, 413, 419, 431, 450, 453, 457, 461, 514, 578, 638, 645, 733, 737, 763, 788, 802, 818, 837, 838, 840, 859, 865, 889, 906, 914, 916, 927, 931, 947, 966, 967, 1000, 1008, 1009, 1012, 1017, 1106, 1108], "ask": [27, 154, 159, 161, 169, 186, 189, 190, 255, 287, 342, 349, 449, 468, 469, 491, 510, 562, 574, 585, 706, 728, 866, 921, 923, 1027, 1108], "answer": [27, 45, 113, 158, 161, 174, 186, 190, 192, 193, 216, 227, 234, 306, 316, 349, 453, 457, 514, 638, 645, 647, 717, 722, 741, 774, 818, 837, 838, 843, 855, 857, 858, 861, 863, 914, 916, 923, 927, 966, 969, 1000, 1007, 1008, 1012, 1019, 1036, 1039, 1108], "cover": [27, 79, 82, 117, 147, 161, 178, 186, 190, 194, 196, 214, 215, 227, 240, 279, 281, 309, 449, 468, 754, 914, 916, 998, 1007, 1009, 1032, 1080, 1103, 1108, 1112, 1113, 1135, 1141, 1164, 1166], "been": [27, 59, 60, 63, 114, 153, 154, 155, 156, 158, 159, 160, 165, 169, 174, 175, 186, 194, 223, 229, 239, 242, 273, 276, 278, 288, 305, 339, 348, 408, 422, 423, 452, 463, 472, 489, 545, 704, 764, 806, 824, 830, 835, 845, 849, 853, 873, 907, 914, 916, 927, 936, 946, 957, 982, 985, 986, 1003, 1010, 1048, 1143, 1161, 1163, 1164], "further": [27, 151, 153, 160, 164, 180, 229, 261, 276, 305, 318, 319, 350, 415, 426, 464, 526, 546, 549, 552, 555, 558, 561, 564, 676, 707, 753, 762, 763, 781, 804, 810, 892, 917, 953, 973, 976, 980, 1015, 1147, 1152, 1166], "inform": [27, 28, 29, 107, 153, 156, 157, 159, 164, 173, 174, 175, 177, 182, 202, 223, 229, 239, 242, 267, 282, 283, 304, 308, 309, 426, 436, 443, 444, 454, 463, 731, 761, 769, 781, 845, 870, 903, 907, 914, 916, 918, 950, 1006, 1034, 1108, 1116, 1121, 1136, 1143], "internet": [27, 66, 79, 153, 155, 158, 159, 161, 182, 194, 202, 230, 243, 282, 283, 298, 304, 308, 339, 451, 907, 908, 910, 968, 1008, 1164, 1178], "subtract": [27, 113, 223, 246, 278, 386, 489, 503, 717, 869, 969, 1019, 1027, 1039], "known": [27, 150, 155, 166, 206, 223, 229, 239, 242, 259, 261, 279, 296, 312, 339, 385, 387, 399, 406, 433, 439, 604, 781, 870, 999, 1115, 1163, 1164], "calcul": [27, 83, 86, 156, 190, 214, 223, 246, 385, 387, 395, 404, 411, 417, 421, 424, 428, 437, 441, 446, 447, 488, 518, 523, 525, 669, 674, 707, 734, 760, 762, 763, 952, 969, 1010, 1012, 1083, 1115, 1120, 1141], "minimum": [27, 64, 246, 689, 810, 1005, 1111, 1112, 1113, 1114], "come": [27, 43, 79, 111, 112, 114, 122, 129, 133, 150, 151, 153, 154, 155, 156, 159, 160, 161, 164, 165, 176, 182, 183, 186, 206, 232, 259, 261, 272, 279, 280, 305, 318, 333, 339, 363, 365, 366, 382, 409, 445, 452, 489, 523, 605, 642, 645, 650, 664, 716, 719, 721, 731, 741, 763, 778, 810, 841, 843, 847, 853, 866, 870, 907, 914, 915, 916, 942, 968, 996, 1007, 1008, 1012, 1030, 1031, 1032, 1033, 1039, 1050, 1058, 1060, 1065, 1070, 1088, 1099, 1116, 1119, 1124, 1137, 1164], "she": [27, 213, 642, 675, 845, 847, 1052, 1060], "who": [27, 29, 45, 121, 151, 154, 158, 161, 165, 184, 186, 232, 242, 267, 298, 360, 435, 439, 449, 454, 477, 494, 526, 647, 717, 727, 783, 810, 818, 837, 838, 845, 849, 855, 866, 907, 915, 916, 931, 942, 984, 1001, 1003, 1009, 1031, 1107, 1122, 1134, 1141, 1161, 1164, 1166], "repetit": [27, 267, 870, 1161], "prone": [27, 384, 572, 582, 602, 675, 719, 798, 986, 1054, 1148, 1161], "possibl": [27, 59, 62, 63, 107, 114, 116, 134, 136, 141, 144, 153, 154, 161, 164, 169, 176, 186, 190, 206, 216, 223, 229, 232, 234, 239, 240, 242, 259, 261, 270, 279, 282, 283, 288, 305, 309, 319, 374, 385, 388, 405, 418, 425, 431, 435, 439, 440, 443, 449, 455, 464, 467, 469, 472, 477, 481, 489, 491, 526, 559, 569, 571, 572, 577, 584, 585, 603, 620, 661, 667, 668, 675, 689, 693, 706, 717, 725, 726, 727, 731, 788, 815, 845, 854, 879, 908, 909, 914, 915, 925, 928, 957, 1005, 1006, 1007, 1015, 1020, 1028, 1030, 1039, 1048, 1053, 1055, 1056, 1058, 1107, 1108, 1117, 1129], "abl": [27, 28, 30, 43, 153, 154, 156, 157, 159, 161, 169, 186, 206, 213, 295, 429, 435, 461, 468, 472, 526, 674, 684, 837, 838, 855, 861, 863, 864, 907, 915, 916, 942, 978, 1009, 1120, 1166], "fix": [27, 46, 64, 66, 77, 108, 133, 150, 154, 167, 169, 190, 211, 216, 226, 227, 232, 251, 254, 281, 282, 283, 304, 342, 367, 390, 433, 449, 451, 457, 494, 527, 539, 550, 562, 568, 587, 603, 653, 660, 681, 763, 778, 783, 787, 790, 791, 811, 812, 818, 819, 825, 828, 831, 854, 906, 910, 930, 940, 971, 981, 1001, 1003, 1006, 1033, 1065, 1108], "inconsist": [27, 569, 1131], "easi": [27, 69, 121, 142, 154, 156, 157, 158, 159, 160, 161, 165, 174, 175, 178, 190, 236, 246, 319, 388, 403, 429, 445, 667, 684, 726, 747, 790, 792, 796, 808, 815, 849, 914, 915, 916, 943, 960, 978, 987, 1001, 1027, 1031, 1039, 1048, 1050, 1114, 1141, 1142, 1166], "plain": [27, 124, 156, 216, 353, 545, 581, 584, 663, 716, 731, 813, 915, 1006, 1019], "happi": [27, 66, 159, 186, 433, 577, 1113], "clear": [27, 43, 154, 156, 161, 173, 206, 216, 245, 306, 343, 344, 410, 435, 439, 454, 464, 470, 476, 583, 638, 671, 689, 726, 810, 818, 846, 849, 870, 930, 1004, 1019, 1039, 1041, 1112, 1113, 1143], "front": [27, 79, 151, 161, 186, 242, 288, 439, 620, 739, 1164], "later": [27, 81, 117, 133, 153, 154, 157, 164, 175, 186, 308, 365, 369, 375, 377, 379, 435, 439, 445, 452, 571, 572, 574, 586, 588, 589, 623, 678, 709, 712, 769, 771, 773, 778, 794, 796, 806, 813, 852, 914, 936, 952, 953, 955, 966, 970, 1020, 1028, 1038, 1041, 1043, 1121, 1127], "menu": [27, 150, 194, 810, 1156], "mine": [28, 153, 154, 157, 165, 182, 186, 190, 360, 559, 810], "hi": [28, 45, 169, 174, 186, 190, 193, 211, 237, 240, 432, 521, 1020, 1108], "data": [28, 29, 49, 71, 74, 79, 90, 109, 111, 112, 126, 134, 154, 155, 156, 157, 161, 164, 173, 175, 177, 186, 190, 191, 195, 203, 205, 210, 220, 223, 224, 229, 230, 232, 239, 242, 246, 252, 267, 271, 272, 273, 274, 276, 279, 281, 282, 283, 288, 293, 296, 298, 301, 307, 310, 312, 316, 322, 344, 345, 360, 374, 388, 395, 404, 411, 417, 418, 421, 423, 424, 428, 433, 437, 438, 440, 441, 446, 447, 450, 457, 473, 487, 515, 516, 517, 518, 519, 520, 521, 522, 525, 526, 532, 534, 543, 567, 568, 570, 574, 577, 590, 593, 595, 596, 607, 612, 618, 622, 631, 634, 635, 640, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 669, 673, 676, 707, 719, 723, 731, 732, 740, 741, 748, 760, 761, 762, 763, 765, 768, 769, 800, 804, 808, 815, 823, 841, 847, 852, 854, 862, 908, 910, 914, 915, 916, 917, 927, 931, 933, 941, 946, 952, 955, 958, 960, 972, 996, 1005, 1007, 1012, 1016, 1019, 1032, 1033, 1044, 1046, 1047, 1048, 1056, 1067, 1095, 1096, 1106, 1110, 1111, 1112, 1114, 1116, 1117, 1121, 1122, 1126, 1127, 1130, 1132, 1133, 1136, 1141, 1162, 1163, 1177], "convinc": [28, 388], "him": [28, 186, 190, 193, 211, 214, 237, 263, 287, 309, 716, 957, 1108], "wai": [28, 43, 50, 59, 63, 64, 66, 81, 82, 144, 150, 151, 153, 156, 161, 165, 166, 169, 175, 178, 182, 187, 189, 190, 192, 193, 194, 197, 198, 206, 211, 214, 226, 227, 232, 235, 236, 237, 239, 240, 244, 246, 254, 258, 259, 272, 273, 276, 280, 282, 283, 304, 305, 330, 334, 384, 388, 392, 393, 403, 409, 425, 426, 427, 435, 451, 452, 459, 469, 471, 472, 476, 492, 494, 513, 523, 527, 539, 545, 553, 569, 570, 577, 582, 585, 623, 625, 651, 657, 668, 684, 705, 715, 727, 731, 745, 766, 779, 788, 802, 804, 810, 837, 838, 846, 852, 854, 857, 858, 907, 915, 916, 927, 934, 942, 968, 971, 981, 982, 986, 992, 996, 1007, 1019, 1024, 1030, 1033, 1034, 1037, 1048, 1052, 1053, 1055, 1058, 1060, 1065, 1093, 1108, 1126, 1134, 1141, 1148, 1166], "go": [28, 40, 42, 59, 62, 63, 64, 66, 81, 98, 127, 133, 151, 154, 157, 158, 160, 161, 183, 186, 193, 197, 206, 215, 216, 232, 273, 276, 278, 308, 345, 449, 451, 469, 510, 671, 709, 721, 727, 739, 763, 771, 774, 778, 810, 812, 841, 853, 870, 872, 906, 907, 914, 915, 942, 945, 947, 952, 960, 964, 984, 987, 1001, 1032, 1066], "relev": [28, 156, 229, 254, 375, 464, 526, 731, 810, 823, 914, 915, 1007, 1107, 1123, 1136], "part": [28, 43, 81, 93, 107, 116, 147, 154, 155, 156, 157, 159, 161, 164, 175, 178, 186, 193, 194, 195, 216, 242, 254, 273, 276, 288, 344, 351, 365, 388, 422, 449, 472, 477, 491, 512, 526, 569, 667, 739, 761, 781, 788, 810, 830, 837, 838, 870, 905, 907, 914, 915, 916, 917, 932, 984, 1031, 1032, 1045, 1050, 1052, 1098, 1100, 1114, 1115, 1126, 1127, 1129, 1130, 1131, 1132, 1151], "natur": [28, 38, 76, 154, 156, 161, 186, 240, 246, 288, 360, 365, 383, 427, 468, 469, 621, 623, 667, 727, 915, 1043], "straighforward": 28, "approach": [28, 35, 38, 153, 154, 193, 297, 313, 367, 451, 455, 456, 464, 725, 753, 763, 849, 915, 968, 970, 1125], "would": [28, 57, 105, 108, 134, 153, 155, 156, 158, 159, 165, 174, 176, 183, 186, 190, 192, 205, 216, 229, 242, 246, 281, 283, 319, 399, 418, 425, 427, 438, 439, 453, 454, 457, 464, 467, 525, 539, 543, 577, 581, 583, 585, 632, 639, 648, 672, 678, 717, 727, 739, 759, 761, 810, 813, 837, 838, 861, 863, 866, 892, 915, 916, 926, 927, 943, 952, 960, 981, 1000, 1001, 1005, 1007, 1008, 1028, 1039, 1043, 1047, 1050, 1056, 1060, 1065, 1086, 1113, 1116, 1126, 1133], "copi": [28, 36, 42, 50, 71, 98, 100, 102, 103, 116, 120, 124, 129, 133, 144, 146, 150, 154, 155, 156, 157, 160, 165, 169, 175, 181, 184, 194, 201, 204, 216, 226, 232, 238, 242, 246, 249, 252, 258, 259, 260, 261, 264, 269, 270, 274, 278, 279, 281, 288, 290, 291, 294, 306, 319, 345, 375, 377, 389, 395, 404, 409, 411, 413, 417, 418, 421, 424, 428, 437, 441, 446, 447, 462, 494, 495, 508, 509, 510, 515, 532, 544, 545, 547, 556, 561, 563, 565, 567, 568, 569, 575, 585, 586, 588, 589, 598, 602, 612, 620, 629, 631, 634, 635, 647, 649, 655, 658, 661, 664, 669, 670, 671, 675, 676, 677, 695, 707, 709, 719, 723, 727, 728, 732, 740, 759, 760, 761, 762, 763, 785, 790, 810, 811, 826, 836, 837, 838, 839, 840, 841, 850, 870, 876, 877, 879, 880, 881, 882, 884, 890, 906, 917, 920, 922, 927, 939, 944, 945, 946, 947, 954, 955, 960, 964, 977, 994, 995, 996, 998, 1000, 1001, 1005, 1006, 1040, 1055, 1058, 1121, 1125, 1130, 1143, 1148, 1150, 1161, 1173], "dumb": [28, 45, 174, 205, 327, 781, 955, 957], "reason": [28, 62, 134, 141, 156, 169, 175, 186, 215, 234, 339, 422, 429, 431, 433, 439, 442, 455, 467, 586, 588, 589, 623, 667, 710, 729, 778, 794, 806, 810, 861, 863, 960, 968, 969, 982, 996, 1001, 1039, 1048, 1050, 1113], "ar": [28, 32, 43, 45, 47, 53, 55, 56, 57, 58, 59, 62, 63, 64, 66, 69, 79, 81, 82, 90, 107, 109, 110, 111, 112, 113, 114, 121, 129, 134, 138, 141, 147, 148, 151, 153, 156, 157, 158, 160, 161, 164, 165, 169, 170, 171, 174, 175, 176, 178, 182, 184, 186, 190, 191, 192, 193, 194, 195, 206, 213, 214, 215, 216, 223, 226, 227, 229, 230, 232, 233, 235, 237, 238, 239, 240, 242, 246, 250, 254, 259, 261, 263, 270, 272, 273, 276, 278, 279, 280, 281, 283, 288, 291, 296, 300, 305, 306, 309, 310, 312, 319, 327, 328, 329, 333, 339, 342, 344, 345, 347, 348, 364, 366, 367, 369, 372, 374, 375, 377, 379, 382, 383, 386, 387, 388, 394, 397, 400, 405, 406, 409, 413, 415, 416, 418, 419, 420, 425, 426, 427, 429, 430, 433, 436, 439, 442, 449, 450, 452, 454, 457, 458, 463, 464, 467, 468, 469, 479, 489, 491, 494, 513, 516, 523, 524, 525, 526, 527, 530, 534, 539, 543, 553, 559, 562, 569, 570, 571, 572, 574, 577, 578, 581, 582, 583, 585, 592, 595, 602, 603, 604, 607, 617, 623, 624, 629, 632, 639, 641, 642, 644, 645, 649, 655, 656, 657, 658, 662, 668, 670, 671, 672, 675, 678, 679, 680, 684, 689, 706, 709, 710, 715, 716, 717, 719, 721, 725, 726, 727, 728, 730, 731, 733, 736, 738, 742, 743, 761, 763, 765, 766, 769, 779, 781, 783, 788, 794, 796, 798, 802, 804, 806, 808, 810, 815, 829, 836, 837, 838, 841, 843, 845, 846, 848, 849, 850, 852, 853, 855, 856, 861, 863, 870, 871, 873, 883, 888, 892, 894, 897, 907, 908, 914, 915, 916, 917, 923, 925, 927, 930, 932, 933, 936, 937, 944, 950, 952, 953, 955, 957, 958, 960, 963, 969, 970, 971, 972, 977, 981, 982, 984, 985, 986, 987, 990, 992, 996, 998, 999, 1001, 1002, 1003, 1005, 1007, 1008, 1010, 1012, 1016, 1019, 1020, 1021, 1022, 1026, 1028, 1031, 1032, 1035, 1036, 1037, 1038, 1039, 1041, 1044, 1048, 1056, 1058, 1059, 1060, 1062, 1070, 1075, 1103, 1107, 1108, 1113, 1114, 1115, 1116, 1117, 1120, 1121, 1122, 1124, 1126, 1127, 1130, 1132, 1133, 1135, 1141, 1143, 1144, 1147, 1148, 1151, 1163, 1164, 1166], "need": [28, 43, 45, 62, 64, 105, 117, 119, 121, 124, 134, 154, 155, 156, 159, 161, 165, 169, 170, 175, 186, 193, 194, 196, 206, 216, 230, 232, 254, 298, 330, 342, 372, 374, 377, 397, 405, 406, 425, 431, 432, 438, 442, 444, 445, 449, 452, 454, 457, 459, 462, 464, 468, 469, 491, 521, 523, 524, 525, 526, 556, 562, 568, 569, 584, 604, 624, 638, 645, 649, 678, 684, 713, 727, 730, 736, 741, 743, 749, 769, 783, 785, 798, 802, 806, 810, 849, 853, 866, 871, 907, 908, 909, 910, 914, 915, 916, 923, 927, 933, 934, 937, 940, 951, 955, 966, 987, 996, 1000, 1001, 1002, 1006, 1011, 1024, 1032, 1033, 1035, 1038, 1047, 1052, 1063, 1064, 1113, 1114, 1121, 1135, 1143, 1164], "mechan": [28, 32, 90, 141, 154, 155, 178, 186, 190, 201, 216, 270, 467, 645, 957, 978, 1016, 1108, 1136, 1161, 1166, 1176], "where": [28, 53, 90, 110, 114, 116, 134, 139, 140, 150, 153, 154, 155, 156, 157, 159, 161, 164, 169, 174, 175, 182, 183, 186, 187, 190, 213, 214, 215, 216, 223, 226, 229, 230, 232, 239, 242, 246, 254, 263, 270, 288, 296, 305, 309, 312, 342, 347, 348, 383, 387, 397, 405, 406, 408, 409, 410, 423, 427, 438, 440, 450, 460, 473, 480, 511, 513, 524, 539, 545, 562, 581, 642, 645, 649, 667, 725, 726, 730, 804, 808, 810, 822, 852, 853, 867, 870, 873, 894, 899, 907, 914, 915, 916, 923, 928, 934, 936, 939, 942, 943, 959, 969, 970, 977, 981, 982, 985, 996, 1000, 1001, 1008, 1010, 1012, 1015, 1037, 1039, 1049, 1090, 1108, 1115, 1120, 1141, 1163, 1166], "could": [28, 50, 57, 111, 112, 116, 121, 129, 133, 150, 151, 154, 155, 159, 161, 165, 175, 184, 186, 192, 206, 215, 216, 226, 236, 242, 270, 280, 282, 283, 301, 304, 316, 360, 388, 432, 453, 455, 468, 469, 493, 526, 577, 585, 649, 661, 667, 680, 681, 689, 704, 714, 729, 764, 781, 810, 823, 849, 867, 915, 916, 923, 934, 940, 977, 1039, 1090, 1104, 1120, 1130, 1136, 1148, 1161], "exchang": [28, 79, 183, 226, 316, 321, 323, 449, 477, 493, 523, 677, 678, 781, 854, 972, 1065, 1073], "meta": [28, 39, 146, 161, 810, 822, 870], "retriev": [28, 165, 695, 810, 1012, 1060], "check": [28, 29, 38, 89, 98, 105, 114, 121, 139, 153, 154, 156, 157, 158, 159, 160, 165, 169, 174, 186, 190, 194, 198, 223, 229, 232, 239, 242, 246, 270, 283, 327, 350, 353, 375, 390, 399, 401, 402, 407, 415, 422, 426, 434, 436, 452, 516, 517, 539, 550, 562, 569, 577, 584, 585, 602, 623, 661, 677, 678, 689, 726, 761, 763, 783, 785, 790, 810, 826, 827, 829, 906, 907, 914, 915, 937, 942, 948, 951, 955, 985, 986, 991, 994, 996, 1003, 1032, 1037, 1050, 1060, 1063, 1067, 1069, 1071, 1087, 1093, 1106, 1136, 1141, 1150, 1161, 1171], "everyth": [28, 42, 43, 99, 116, 129, 147, 154, 160, 161, 178, 186, 190, 194, 205, 213, 231, 232, 260, 269, 270, 273, 276, 290, 291, 305, 308, 353, 360, 377, 397, 400, 425, 439, 445, 449, 510, 568, 569, 571, 578, 582, 587, 592, 642, 684, 713, 717, 733, 740, 761, 762, 763, 779, 788, 808, 812, 815, 840, 843, 844, 846, 847, 871, 892, 906, 907, 908, 914, 915, 916, 933, 935, 936, 947, 960, 961, 967, 969, 972, 982, 1004, 1010, 1015, 1019, 1115, 1130, 1174, 1175, 1176, 1178], "clearli": [28, 43, 119, 169, 186, 427, 674, 695, 722, 810, 829, 943, 1008, 1039, 1060, 1163], "intersphinx": [28, 151], "spinx": 28, "possibli": [29, 78, 86, 123, 154, 186, 451, 585, 661, 675, 684, 689, 704, 716, 726, 738, 739, 855, 892, 915, 963, 998, 1124], "arrang": [29, 85, 111, 112, 158, 301, 526, 731, 843, 903], "subgroup": [29, 35, 38, 545], "refer": [29, 67, 91, 98, 111, 112, 116, 122, 153, 159, 160, 174, 176, 181, 190, 193, 195, 198, 199, 210, 211, 213, 215, 216, 221, 224, 225, 227, 228, 230, 231, 232, 237, 238, 239, 242, 246, 248, 250, 251, 253, 257, 265, 266, 268, 273, 275, 276, 280, 281, 283, 286, 287, 289, 292, 293, 295, 296, 304, 305, 307, 308, 309, 312, 314, 319, 320, 321, 323, 326, 328, 329, 330, 331, 332, 333, 342, 406, 412, 419, 458, 515, 523, 532, 534, 545, 567, 568, 569, 570, 585, 586, 588, 589, 590, 593, 596, 612, 618, 622, 631, 634, 635, 636, 644, 649, 652, 655, 656, 659, 660, 661, 662, 663, 664, 675, 695, 707, 708, 716, 719, 723, 727, 732, 740, 760, 761, 762, 763, 769, 770, 772, 774, 777, 780, 787, 791, 801, 810, 814, 819, 822, 825, 828, 831, 853, 883, 892, 906, 907, 914, 915, 939, 978, 984, 1000, 1003, 1008, 1009, 1031, 1058, 1059, 1065, 1066, 1067, 1077, 1080, 1088, 1089, 1091, 1092, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1121, 1122, 1141, 1143, 1161, 1162, 1163, 1171], "veri": [29, 35, 37, 38, 60, 153, 154, 156, 175, 186, 190, 193, 195, 206, 211, 214, 237, 240, 263, 287, 309, 353, 360, 381, 388, 398, 399, 419, 435, 436, 438, 444, 451, 454, 469, 556, 567, 580, 595, 613, 641, 670, 671, 709, 712, 715, 726, 729, 748, 810, 815, 820, 848, 849, 908, 913, 915, 916, 933, 934, 950, 955, 970, 984, 1012, 1020, 1036, 1039, 1043, 1044, 1050, 1054, 1058, 1063, 1108, 1115, 1116, 1137, 1146, 1153, 1161], "unawar": [29, 169, 186, 193], "simpli": [29, 62, 121, 148, 154, 157, 159, 161, 165, 169, 178, 242, 243, 282, 283, 304, 305, 388, 430, 472, 510, 577, 586, 588, 589, 638, 648, 659, 695, 716, 717, 722, 727, 741, 788, 842, 855, 914, 936, 940, 984, 1000, 1008], "interest": [29, 114, 155, 156, 169, 175, 186, 194, 342, 454, 469, 1007, 1009, 1127], "catalog": [29, 1164], "chapter": [29, 42, 134, 206, 215, 223, 229, 239, 242, 243, 545, 870], "subchapt": 29, "cluster_python": [29, 91, 211, 328, 329, 330, 331, 332, 333, 342, 763, 1009, 1016, 1017, 1018, 1019, 1023, 1031, 1042, 1051, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1109, 1110, 1114, 1115, 1118, 1121, 1122, 1124, 1128, 1135, 1138, 1140, 1145], "cluster_python_exercis": [29, 211, 342, 763, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106], "cluster_python_exercises_userdb": [29, 763, 1067, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106], "databas": [29, 42, 43, 55, 79, 151, 173, 174, 193, 215, 221, 226, 227, 230, 232, 233, 236, 240, 254, 282, 283, 304, 333, 469, 470, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 763, 866, 897, 918, 1026, 1065, 1067, 1086, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1122, 1126, 1137, 1153], "seri": [29, 101, 155, 226, 230, 271, 272, 273, 274, 276, 278, 280, 305, 310, 316, 429, 450, 479, 763, 919, 1033, 1065, 1067, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1113, 1122, 1127, 1128, 1129, 1131, 1132, 1176], "cluster_python_exercises_legaci": [29, 211, 342, 763, 1067, 1075, 1076, 1077, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1106], "legaci": [29, 211, 342, 472, 763, 1067, 1075, 1076, 1077, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1106, 1156], "cluster_python_exercises_csv": [29, 763, 1064, 1065, 1066, 1067, 1106], "csv": [29, 44, 51, 53, 54, 55, 56, 79, 107, 121, 123, 126, 190, 193, 202, 205, 211, 215, 216, 219, 221, 223, 224, 227, 228, 230, 234, 237, 240, 242, 248, 249, 252, 267, 271, 272, 274, 277, 278, 282, 283, 289, 294, 298, 301, 304, 306, 310, 316, 322, 450, 763, 852, 855, 870, 892, 1020, 1023, 1026, 1060, 1067, 1101, 1102, 1103, 1104, 1106, 1108, 1111, 1112, 1113, 1114, 1122], "cluster_python_exercises_herdt": [29, 763, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1106], "cluster_python_exercises_sensor": [29, 763, 1067, 1094, 1095, 1096, 1106], "sensor": [29, 70, 73, 74, 75, 79, 82, 85, 98, 107, 110, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 128, 132, 133, 134, 181, 190, 194, 230, 251, 262, 270, 279, 282, 283, 298, 301, 304, 308, 319, 322, 342, 346, 348, 466, 471, 473, 481, 487, 488, 491, 492, 496, 502, 505, 511, 515, 516, 517, 518, 519, 520, 521, 532, 535, 536, 537, 538, 539, 540, 541, 542, 567, 575, 640, 677, 726, 727, 728, 752, 754, 763, 810, 906, 913, 945, 947, 964, 1020, 1067, 1095, 1106, 1172], "And": [29, 98, 100, 103, 104, 105, 107, 116, 126, 154, 155, 156, 158, 161, 184, 190, 193, 213, 216, 221, 223, 232, 234, 243, 251, 258, 259, 260, 262, 263, 265, 266, 268, 269, 272, 276, 286, 287, 289, 290, 292, 297, 306, 311, 313, 314, 317, 320, 321, 323, 326, 450, 456, 462, 466, 473, 475, 487, 501, 515, 516, 517, 518, 519, 520, 521, 522, 525, 528, 532, 544, 545, 567, 575, 597, 605, 610, 620, 623, 631, 635, 641, 664, 676, 707, 708, 709, 718, 723, 730, 732, 740, 748, 751, 760, 761, 762, 763, 833, 839, 840, 843, 844, 848, 852, 860, 862, 864, 865, 874, 875, 876, 877, 878, 879, 880, 881, 882, 884, 890, 900, 906, 913, 920, 922, 929, 935, 937, 942, 945, 947, 951, 961, 964, 967, 969, 972, 984, 986, 988, 989, 990, 991, 992, 995, 1007, 1009, 1014, 1017, 1018, 1019, 1023, 1024, 1048, 1064, 1065, 1066, 1067, 1080, 1091, 1101, 1102, 1103, 1106, 1118, 1122, 1128, 1135, 1161], "acquisit": [29, 121, 154, 181, 282, 283, 298, 301, 304, 305, 308, 559, 763, 1063, 1067, 1095, 1096, 1106], "cluster_python_misc": [29, 91, 211, 328, 329, 330, 331, 332, 333, 342, 763, 1009, 1031, 1061, 1065, 1066, 1067, 1077, 1080, 1088, 1091, 1092, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1109, 1110, 1114, 1115, 1121, 1122, 1124, 1128, 1135, 1138, 1145], "cluster_python_misc_ai": [29, 763, 1106, 1109, 1110, 1114, 1115, 1122], "machin": [29, 103, 111, 112, 116, 146, 156, 161, 175, 190, 206, 213, 214, 223, 224, 227, 229, 239, 242, 296, 304, 308, 312, 322, 341, 345, 365, 381, 383, 391, 399, 427, 431, 445, 526, 527, 763, 810, 837, 838, 843, 846, 849, 899, 906, 920, 921, 922, 923, 925, 926, 927, 969, 984, 987, 994, 1008, 1106, 1110, 1114, 1122, 1163], "artifici": [29, 190, 215, 273, 304, 308, 427, 661, 763, 927, 1000, 1106, 1110, 1114, 1115, 1122], "intellig": [29, 154, 190, 230, 266, 273, 276, 286, 292, 304, 308, 348, 763, 781, 1005, 1009, 1106, 1110, 1114, 1115, 1122], "cluster_python_misc_panda": [29, 763, 1106, 1122, 1128], "panda": [29, 175, 186, 205, 211, 224, 237, 251, 254, 272, 275, 287, 304, 306, 308, 311, 315, 317, 360, 451, 763, 1032, 1106, 1108, 1111, 1114, 1122], "cluster_python_bas": [29, 91, 211, 328, 329, 330, 331, 332, 333, 342, 763, 1009, 1016, 1017, 1018, 1019, 1023, 1031, 1042, 1051, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1118, 1121, 1122, 1128, 1135], "fundament": [29, 59, 63, 74, 91, 177, 186, 189, 191, 193, 195, 198, 200, 205, 208, 211, 214, 217, 227, 233, 237, 245, 248, 328, 329, 330, 331, 332, 333, 342, 360, 361, 449, 479, 763, 788, 1009, 1016, 1017, 1018, 1019, 1023, 1042, 1051, 1056, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1118, 1121, 1122, 1128, 1135, 1136], "cluster_python_db": [29, 763, 1064, 1066, 1067, 1106, 1118], "cluster_python_swdev": [29, 763, 1061, 1106, 1109, 1110, 1114, 1122, 1124, 1135, 1138, 1140, 1145], "cluster_python_swdev_pytest": [29, 763, 1106, 1135, 1140], "pytest": [29, 230, 240, 243, 251, 254, 263, 272, 280, 282, 287, 298, 301, 304, 305, 308, 309, 350, 451, 763, 1096, 1104, 1105, 1106, 1135], "cluster_python_advanc": [29, 763, 1009, 1016, 1017, 1018, 1019, 1023, 1061, 1064, 1065, 1066, 1067, 1080, 1091, 1094, 1095, 1096, 1101, 1102, 1103, 1104, 1105, 1106, 1109, 1110, 1114, 1118, 1122, 1124, 1135, 1138, 1140, 1145], "cluster_python_advanced_oo": [29, 763, 1009, 1016, 1017, 1018, 1019, 1023, 1067, 1094, 1095, 1096, 1101, 1103, 1106, 1135], "object": [29, 64, 71, 74, 75, 79, 91, 98, 104, 105, 107, 108, 109, 111, 112, 114, 116, 117, 121, 122, 125, 134, 147, 169, 171, 174, 176, 181, 186, 193, 202, 204, 205, 210, 213, 214, 216, 219, 221, 223, 226, 227, 230, 231, 232, 233, 234, 238, 239, 244, 245, 247, 249, 252, 256, 264, 268, 270, 271, 273, 274, 276, 278, 281, 284, 288, 294, 300, 306, 310, 316, 319, 321, 322, 329, 331, 332, 335, 337, 342, 343, 344, 345, 379, 405, 432, 450, 452, 457, 458, 462, 463, 464, 469, 471, 473, 478, 487, 489, 495, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525, 526, 532, 534, 539, 545, 559, 567, 568, 570, 572, 575, 576, 578, 580, 581, 586, 588, 589, 590, 592, 593, 596, 612, 618, 622, 623, 624, 631, 634, 635, 638, 639, 641, 644, 645, 649, 650, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 667, 675, 676, 678, 679, 689, 695, 707, 709, 711, 712, 716, 717, 722, 723, 725, 727, 728, 731, 732, 738, 740, 741, 747, 748, 753, 757, 758, 760, 761, 762, 763, 853, 906, 984, 985, 986, 989, 990, 991, 992, 994, 1000, 1003, 1005, 1006, 1008, 1009, 1012, 1016, 1017, 1018, 1019, 1020, 1022, 1024, 1026, 1027, 1028, 1029, 1031, 1032, 1033, 1039, 1048, 1050, 1056, 1057, 1067, 1094, 1095, 1096, 1101, 1103, 1106, 1113, 1127, 1129, 1131, 1132, 1133, 1135, 1141, 1161, 1162, 1164, 1166], "orient": [29, 71, 74, 75, 79, 98, 116, 134, 174, 193, 205, 214, 216, 221, 227, 230, 233, 244, 245, 254, 256, 268, 273, 276, 279, 281, 319, 321, 329, 331, 332, 342, 343, 344, 377, 450, 473, 487, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525, 532, 534, 567, 568, 575, 590, 593, 596, 612, 618, 622, 631, 634, 635, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 676, 707, 723, 731, 732, 740, 748, 760, 762, 763, 1009, 1016, 1017, 1018, 1019, 1033, 1067, 1094, 1095, 1096, 1101, 1103, 1106, 1135, 1141, 1162, 1164], "cluster_python_advanced_multithread": [29, 763, 1009, 1016, 1017, 1018, 1019, 1106], "cluster_python_draft": [29, 763, 1061, 1106], "python_python_5550_xml_etre": [29, 763, 1106], "xml": [29, 121, 150, 151, 301, 322, 763, 1106, 1122], "elementtre": [29, 254, 763, 1106, 1122], "etre": [29, 254, 763, 1106, 1122], "python_basics_python_0450_dictionari": [29, 91, 763, 1009, 1031, 1067, 1080, 1091, 1106], "gt": [29, 32, 35, 36, 53, 55, 56, 73, 74, 75, 88, 91, 117, 118, 119, 120, 122, 124, 125, 126, 127, 133, 143, 173, 176, 187, 192, 197, 204, 210, 211, 213, 218, 223, 226, 229, 234, 236, 239, 242, 246, 249, 252, 255, 264, 267, 271, 274, 284, 288, 294, 306, 310, 316, 322, 328, 329, 330, 331, 332, 333, 336, 337, 342, 380, 395, 404, 411, 417, 421, 424, 428, 437, 441, 446, 447, 456, 473, 487, 515, 516, 517, 518, 519, 520, 521, 522, 525, 532, 534, 567, 575, 590, 593, 596, 612, 618, 622, 631, 634, 635, 640, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 669, 676, 683, 707, 708, 718, 723, 732, 740, 748, 760, 762, 763, 767, 770, 772, 775, 777, 780, 782, 786, 787, 789, 791, 793, 795, 801, 803, 805, 807, 814, 816, 819, 821, 825, 828, 831, 833, 837, 838, 839, 840, 843, 844, 851, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 890, 900, 906, 913, 918, 919, 920, 921, 922, 929, 935, 937, 945, 947, 949, 961, 964, 967, 969, 986, 988, 989, 990, 991, 992, 993, 994, 995, 1009, 1016, 1017, 1018, 1019, 1023, 1031, 1042, 1051, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1109, 1110, 1114, 1118, 1121, 1122, 1124, 1128, 1135, 1138, 1140, 1145, 1146], "python_basics_python_0220_for": [29, 91, 211, 328, 329, 330, 331, 332, 333, 342, 763, 1009, 1031, 1064, 1065, 1066, 1067, 1077, 1080, 1081, 1083, 1087, 1088, 1089, 1090, 1091, 1092, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1118, 1122], "loop": [29, 32, 34, 38, 42, 59, 63, 90, 91, 98, 111, 112, 116, 121, 125, 134, 142, 147, 154, 169, 178, 190, 193, 195, 198, 199, 200, 203, 211, 213, 214, 215, 217, 221, 224, 227, 232, 233, 235, 237, 238, 243, 245, 247, 248, 250, 251, 253, 263, 266, 273, 276, 283, 286, 287, 292, 293, 301, 305, 309, 314, 315, 317, 319, 320, 321, 326, 328, 329, 330, 331, 332, 333, 334, 342, 347, 365, 368, 371, 380, 383, 395, 402, 403, 404, 411, 417, 421, 424, 425, 428, 429, 437, 441, 446, 447, 514, 515, 556, 567, 598, 603, 660, 667, 669, 695, 707, 730, 741, 760, 762, 763, 798, 808, 813, 827, 841, 843, 847, 854, 910, 932, 933, 934, 942, 968, 972, 978, 981, 982, 1009, 1010, 1013, 1014, 1019, 1031, 1064, 1065, 1066, 1067, 1069, 1071, 1077, 1079, 1080, 1081, 1083, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1118, 1122, 1124, 1160, 1161, 1162, 1171], "python_advanced_modul": [29, 763, 1009, 1061, 1064, 1065, 1066, 1067, 1101, 1102, 1103, 1104, 1105, 1106, 1109, 1110, 1114, 1118, 1122, 1124, 1135, 1138, 1140, 1145], "python_exercises_userdb_csvreader_funct": [29, 763, 1067, 1100, 1101, 1106], "refactor": [29, 43, 55, 129, 151, 240, 243, 248, 251, 263, 266, 282, 286, 287, 292, 293, 314, 315, 321, 326, 410, 450, 467, 714, 763, 771, 777, 787, 791, 801, 812, 814, 819, 825, 828, 831, 906, 1023, 1067, 1101, 1102, 1103, 1104, 1106], "Into": [29, 98, 232, 237, 240, 243, 248, 251, 263, 266, 272, 286, 287, 292, 293, 314, 315, 321, 326, 380, 395, 404, 410, 411, 417, 421, 424, 428, 437, 441, 445, 446, 447, 514, 515, 567, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 669, 707, 760, 762, 763, 998, 1023, 1067, 1101, 1102, 1103, 1104, 1106], "reader": [29, 151, 226, 240, 243, 248, 251, 263, 266, 286, 287, 292, 293, 314, 315, 321, 322, 326, 432, 451, 474, 763, 854, 1020, 1023, 1050, 1067, 1097, 1098, 1101, 1102, 1103, 1104, 1105, 1106], "python_exercises_userdb_csvread": [29, 763, 1067, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106], "python_basics_python_0270_funct": [29, 91, 211, 763, 1009, 1031, 1051, 1064, 1065, 1066, 1067, 1077, 1080, 1081, 1083, 1087, 1088, 1089, 1090, 1091, 1092, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1118], "python_exercises_userdb_mqtt_publish_csv": [29, 763, 1067, 1101, 1102, 1106], "mqtt": [29, 114, 120, 121, 123, 126, 203, 205, 219, 221, 230, 243, 244, 248, 282, 283, 298, 301, 304, 348, 351, 353, 763, 1023, 1063, 1067, 1101, 1104, 1106, 1122], "publish": [29, 114, 124, 158, 160, 169, 230, 242, 243, 263, 305, 339, 348, 350, 763, 1023, 1067, 1101, 1104, 1106, 1108, 1139], "python_exercises_userdb_user_json": [29, 763, 1067, 1101, 1102, 1103, 1104, 1106], "json": [29, 79, 86, 93, 116, 121, 124, 151, 187, 193, 203, 217, 221, 222, 230, 231, 239, 242, 243, 247, 250, 256, 265, 298, 300, 301, 303, 305, 308, 322, 362, 763, 1023, 1067, 1101, 1102, 1103, 1106, 1124, 1137], "python_exercises_userdb_user_class_person": [29, 763, 1067, 1101, 1103, 1106], "awai": [29, 64, 78, 85, 153, 154, 155, 159, 178, 194, 215, 221, 229, 263, 266, 286, 287, 292, 298, 301, 314, 320, 321, 326, 331, 463, 726, 763, 849, 870, 981, 1005, 1023, 1067, 1101, 1106], "raw": [29, 64, 129, 199, 202, 205, 210, 222, 225, 234, 238, 244, 258, 259, 263, 265, 266, 270, 272, 286, 287, 292, 295, 298, 301, 305, 314, 320, 321, 326, 327, 337, 363, 451, 452, 458, 481, 488, 526, 606, 727, 763, 846, 1023, 1039, 1044, 1060, 1067, 1101, 1106], "python_exercises_userdb_userdb_modul": [29, 763, 1067, 1101, 1102, 1103, 1104, 1105, 1106], "both": [29, 54, 64, 86, 116, 117, 119, 125, 129, 133, 144, 154, 156, 161, 174, 186, 192, 213, 229, 232, 240, 243, 246, 248, 251, 263, 266, 278, 286, 287, 292, 293, 314, 315, 321, 326, 443, 449, 451, 452, 477, 523, 525, 545, 577, 585, 658, 714, 725, 763, 781, 804, 810, 849, 950, 954, 958, 971, 994, 1000, 1007, 1020, 1023, 1027, 1034, 1041, 1048, 1052, 1057, 1067, 1070, 1073, 1079, 1101, 1102, 1103, 1104, 1106, 1114, 1141, 1148, 1161], "python_advanced_oo_namedtupl": [29, 763, 1009, 1023, 1067, 1101, 1103, 1106], "namedtupl": [29, 190, 198, 205, 220, 221, 223, 229, 239, 242, 263, 280, 282, 283, 287, 298, 301, 304, 305, 308, 309, 321, 763, 1009, 1023, 1067, 1101, 1103, 1106, 1126, 1171], "python_exercises_userdb_csvdictread": [29, 763, 1067, 1097, 1098, 1101, 1102, 1103, 1104, 1105, 1106], "dictread": [29, 205, 226, 227, 240, 243, 248, 251, 263, 266, 286, 287, 292, 293, 310, 314, 315, 321, 326, 763, 1023, 1065, 1067, 1101, 1102, 1103, 1104, 1105, 1106], "python_misc_csv": [29, 763, 1065, 1066, 1067, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1122], "python_basics_python_0139_commandline_argv": [29, 91, 211, 342, 763, 1031, 1061, 1064, 1065, 1066, 1067, 1069, 1070, 1071, 1072, 1074, 1075, 1077, 1080, 1081, 1082, 1083, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106], "argument": [29, 57, 64, 91, 98, 116, 147, 153, 156, 159, 173, 174, 187, 190, 202, 211, 214, 221, 223, 227, 229, 230, 232, 233, 235, 237, 239, 240, 243, 244, 245, 246, 248, 251, 266, 267, 270, 273, 276, 280, 282, 283, 286, 287, 288, 292, 293, 301, 304, 305, 308, 309, 310, 314, 315, 320, 321, 326, 342, 364, 365, 410, 417, 421, 424, 428, 437, 441, 446, 447, 451, 513, 545, 569, 579, 580, 669, 684, 704, 707, 717, 729, 760, 761, 762, 763, 768, 769, 870, 892, 906, 940, 942, 944, 947, 964, 1002, 1005, 1009, 1031, 1033, 1034, 1051, 1059, 1061, 1064, 1065, 1066, 1067, 1069, 1070, 1071, 1072, 1074, 1075, 1077, 1079, 1080, 1081, 1082, 1083, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1119, 1141, 1143], "sy": [29, 32, 91, 117, 129, 133, 155, 172, 174, 176, 177, 202, 204, 205, 211, 214, 220, 223, 227, 229, 234, 237, 239, 242, 243, 245, 246, 248, 249, 251, 264, 266, 267, 272, 273, 276, 282, 286, 287, 288, 292, 293, 304, 308, 310, 314, 315, 320, 321, 322, 326, 327, 328, 335, 342, 438, 451, 510, 526, 527, 763, 765, 769, 790, 867, 896, 907, 914, 915, 916, 932, 933, 934, 936, 940, 941, 942, 943, 944, 946, 948, 950, 951, 965, 972, 974, 977, 981, 998, 1008, 1015, 1030, 1031, 1050, 1058, 1060, 1061, 1064, 1065, 1066, 1067, 1069, 1070, 1071, 1072, 1074, 1075, 1077, 1079, 1080, 1081, 1082, 1083, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1133, 1141, 1156], "argv": [29, 42, 50, 91, 156, 173, 174, 177, 187, 205, 211, 214, 215, 220, 223, 227, 229, 232, 233, 237, 239, 242, 243, 245, 248, 251, 266, 272, 273, 276, 282, 286, 287, 292, 293, 304, 308, 314, 315, 320, 321, 322, 326, 327, 335, 342, 416, 451, 452, 474, 513, 763, 914, 940, 941, 942, 943, 944, 948, 951, 965, 972, 981, 1002, 1008, 1015, 1031, 1060, 1061, 1064, 1065, 1066, 1067, 1069, 1070, 1071, 1072, 1074, 1075, 1077, 1079, 1080, 1081, 1082, 1083, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1148, 1153], "python_exercises_userdb_csvdictreader_funct": [29, 763, 1067, 1098, 1101, 1102, 1103, 1104, 1105, 1106], "python_exercises_legacy_join_funct": [29, 211, 763, 1067, 1077, 1080, 1081, 1088, 1089, 1091, 1092, 1106], "join": [29, 35, 64, 165, 193, 211, 213, 214, 219, 221, 223, 226, 227, 229, 234, 238, 244, 252, 267, 274, 284, 288, 294, 310, 317, 322, 327, 336, 451, 544, 667, 728, 734, 739, 741, 763, 953, 958, 981, 1067, 1077, 1080, 1088, 1089, 1091, 1092, 1106, 1141], "python_exercises_legacy_uniq_funct": [29, 211, 763, 1067, 1077, 1080, 1081, 1088, 1089, 1090, 1091, 1092, 1106], "uniq": [29, 173, 174, 191, 193, 205, 211, 221, 224, 227, 233, 237, 243, 245, 248, 266, 273, 286, 287, 292, 293, 309, 314, 315, 320, 321, 326, 543, 763, 903, 1067, 1077, 1080, 1081, 1088, 1089, 1092, 1106], "python_basics_python_0150_datatypes_overview": [29, 91, 211, 328, 329, 330, 331, 332, 333, 342, 763, 1009, 1016, 1017, 1018, 1019, 1023, 1031, 1042, 1051, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1118, 1121, 1122, 1128, 1135], "python_basics_python_0150_datatypes_overview_compound": [29, 91, 211, 328, 329, 330, 331, 332, 333, 342, 763, 1009, 1016, 1017, 1018, 1019, 1023, 1031, 1064, 1065, 1066, 1067, 1075, 1076, 1077, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1118, 1121, 1122, 1128, 1135], "python_exercises_legacy_while_prim": [29, 211, 763, 1067, 1077, 1080, 1081, 1083, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1106], "prime": [29, 38, 173, 174, 193, 197, 198, 200, 205, 211, 217, 221, 233, 237, 240, 245, 251, 266, 273, 286, 287, 292, 293, 314, 315, 320, 321, 326, 427, 763, 1067, 1077, 1080, 1081, 1083, 1088, 1089, 1090, 1091, 1092, 1106, 1171], "python_exercises_legacy_cmdline_digit": [29, 211, 342, 763, 1067, 1075, 1077, 1080, 1081, 1083, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1106], "digit": [29, 147, 173, 174, 193, 200, 205, 211, 221, 224, 233, 237, 242, 243, 245, 246, 248, 250, 251, 266, 273, 286, 287, 288, 292, 293, 305, 314, 315, 316, 320, 321, 326, 327, 347, 373, 382, 763, 1067, 1077, 1080, 1081, 1083, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1106], "word": [29, 43, 66, 147, 154, 174, 182, 186, 190, 193, 200, 205, 211, 215, 221, 224, 232, 233, 237, 240, 242, 243, 245, 248, 250, 251, 258, 259, 261, 266, 273, 280, 286, 287, 288, 292, 293, 305, 314, 315, 318, 319, 320, 321, 326, 342, 347, 372, 425, 467, 472, 545, 645, 723, 732, 740, 762, 763, 850, 852, 899, 971, 1067, 1077, 1080, 1081, 1083, 1087, 1088, 1089, 1090, 1091, 1093, 1106], "python_basics_python_0193_whil": [29, 91, 211, 328, 329, 330, 331, 332, 333, 342, 763, 1009, 1031, 1064, 1065, 1066, 1067, 1069, 1071, 1077, 1080, 1081, 1083, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1118, 1122], "python_exercises_legacy_revert": [29, 211, 763, 1067, 1077, 1080, 1088, 1091, 1106], "revert": [29, 133, 154, 211, 763, 788, 806, 968, 1027, 1067, 1077, 1080, 1091, 1106], "line": [29, 34, 35, 36, 38, 64, 114, 122, 150, 151, 154, 156, 159, 169, 173, 176, 177, 190, 194, 204, 206, 210, 211, 213, 214, 219, 220, 223, 224, 226, 227, 229, 230, 232, 233, 234, 237, 239, 240, 242, 243, 245, 246, 249, 251, 252, 254, 255, 266, 267, 272, 273, 274, 276, 280, 284, 286, 287, 288, 292, 293, 294, 306, 310, 314, 316, 320, 321, 322, 326, 333, 342, 365, 371, 372, 380, 384, 387, 389, 395, 404, 406, 411, 417, 421, 424, 428, 433, 437, 440, 441, 443, 446, 447, 451, 454, 457, 464, 494, 495, 645, 648, 651, 669, 707, 760, 762, 763, 779, 783, 790, 792, 810, 837, 838, 841, 850, 852, 854, 876, 897, 899, 901, 902, 903, 907, 911, 914, 915, 916, 958, 968, 999, 1005, 1006, 1007, 1010, 1011, 1012, 1020, 1021, 1027, 1028, 1035, 1049, 1050, 1052, 1054, 1056, 1058, 1059, 1060, 1065, 1067, 1080, 1086, 1091, 1105, 1106, 1108, 1111, 1116, 1121, 1129, 1130, 1142], "python_exercises_legacy_wc": [29, 211, 763, 1067, 1077, 1080, 1088, 1091, 1092, 1106], "charact": [29, 156, 172, 197, 202, 206, 211, 215, 219, 226, 232, 242, 249, 252, 270, 273, 288, 294, 310, 365, 366, 372, 380, 383, 389, 390, 395, 404, 411, 417, 421, 424, 427, 428, 432, 434, 437, 441, 446, 447, 632, 669, 707, 760, 761, 762, 763, 772, 777, 780, 787, 791, 801, 804, 812, 814, 819, 825, 826, 828, 831, 850, 852, 870, 892, 906, 914, 969, 1019, 1038, 1052, 1053, 1054, 1058, 1060, 1067, 1070, 1077, 1080, 1088, 1091, 1106, 1121, 1148], "python_basics_python_0500_fil": [29, 91, 211, 328, 329, 330, 331, 332, 333, 342, 763, 1009, 1031, 1065, 1066, 1067, 1077, 1080, 1088, 1091, 1092, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1122], "python_exercises_legacy_uniq_gener": [29, 763, 1067, 1080, 1091, 1106], "python_exercises_legacy_passwd": [29, 763, 1067, 1080, 1091, 1106], "pars": [29, 173, 210, 211, 221, 222, 224, 227, 233, 237, 242, 243, 245, 251, 254, 282, 287, 304, 308, 328, 333, 346, 763, 1061, 1067, 1080, 1091, 1106, 1108, 1133], "passwd": [29, 101, 102, 116, 194, 204, 213, 226, 227, 229, 233, 234, 237, 242, 243, 245, 249, 251, 252, 260, 267, 269, 270, 274, 284, 288, 290, 291, 310, 316, 322, 761, 763, 840, 842, 845, 847, 850, 852, 854, 865, 884, 887, 889, 890, 892, 895, 897, 901, 903, 906, 907, 917, 918, 926, 927, 931, 932, 937, 943, 963, 977, 1005, 1007, 1054, 1058, 1067, 1080, 1091, 1106, 1136], "python_advanced_python_1010_generators_yield": [29, 763, 1009, 1064, 1065, 1066, 1067, 1080, 1091, 1106, 1118], "python_exercises_legacy_function_prim": [29, 211, 763, 1067, 1077, 1080, 1081, 1087, 1088, 1089, 1090, 1091, 1092, 1106], "python_exercises_legacy_python_1011_generators_yield": [29, 763, 1067, 1080, 1106], "fibonacci": [29, 174, 177, 193, 214, 227, 266, 280, 282, 283, 287, 293, 304, 305, 308, 674, 696, 763, 1012, 1013, 1014, 1067, 1080, 1106], "python_exercises_legacy_python_0350_exercis": [29, 211, 763, 1067, 1077, 1080, 1088, 1089, 1091, 1092, 1106], "right": [29, 34, 35, 36, 38, 42, 64, 81, 85, 121, 147, 153, 154, 156, 159, 174, 194, 205, 206, 211, 216, 221, 234, 236, 242, 246, 254, 267, 280, 288, 328, 334, 366, 386, 387, 388, 394, 405, 435, 465, 516, 524, 571, 586, 588, 589, 667, 679, 695, 721, 726, 731, 743, 763, 771, 790, 794, 810, 829, 852, 853, 855, 870, 925, 955, 1005, 1027, 1038, 1044, 1067, 1077, 1080, 1088, 1091, 1092, 1106], "justifi": [29, 174, 186, 211, 221, 242, 288, 366, 733, 763, 1032, 1067, 1077, 1080, 1088, 1091, 1092, 1106], "python_basics_python_0320_strings_method": [29, 91, 211, 328, 329, 330, 331, 332, 333, 342, 763, 1009, 1031, 1065, 1066, 1067, 1077, 1080, 1088, 1089, 1091, 1092, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1121, 1122], "method": [29, 42, 43, 54, 55, 57, 64, 66, 70, 71, 74, 91, 98, 107, 108, 111, 112, 121, 127, 129, 133, 134, 159, 190, 191, 192, 193, 195, 198, 211, 212, 214, 216, 221, 224, 225, 227, 232, 233, 235, 237, 238, 241, 243, 244, 245, 246, 248, 251, 253, 263, 266, 268, 272, 273, 276, 278, 280, 281, 282, 283, 286, 287, 289, 292, 293, 295, 298, 301, 304, 305, 307, 308, 309, 311, 314, 315, 317, 319, 320, 321, 323, 326, 328, 329, 330, 331, 332, 333, 342, 346, 347, 423, 449, 469, 471, 473, 477, 487, 494, 495, 513, 515, 520, 525, 526, 527, 532, 534, 539, 545, 558, 560, 567, 568, 569, 572, 581, 593, 595, 596, 612, 618, 622, 628, 631, 634, 635, 638, 639, 640, 641, 644, 649, 650, 652, 655, 656, 659, 660, 661, 662, 663, 664, 667, 676, 689, 706, 707, 710, 714, 723, 731, 732, 740, 741, 747, 748, 754, 757, 758, 760, 761, 762, 763, 771, 773, 778, 779, 788, 790, 800, 812, 823, 955, 1005, 1006, 1009, 1012, 1016, 1020, 1021, 1022, 1023, 1024, 1028, 1031, 1036, 1045, 1048, 1065, 1066, 1067, 1077, 1080, 1088, 1089, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1113, 1117, 1121, 1122, 1127, 1130, 1132, 1164, 1171, 1178], "python_basics_python_0310_strings_format": [29, 91, 211, 763, 1031, 1067, 1077, 1080, 1088, 1089, 1091, 1092, 1106], "python_basics_python_0300_str": [29, 91, 211, 328, 329, 330, 331, 332, 333, 342, 763, 1009, 1031, 1065, 1066, 1067, 1077, 1080, 1088, 1089, 1091, 1092, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1121, 1122], "python_exercises_legacy_dict_keyerror": [29, 763, 1067, 1076, 1080, 1106], "python_exercises_legacy_max_numb": [29, 211, 763, 1067, 1077, 1080, 1081, 1082, 1083, 1087, 1088, 1089, 1090, 1091, 1092, 1106], "determin": [29, 103, 116, 147, 153, 177, 182, 184, 192, 193, 198, 200, 205, 211, 217, 221, 223, 224, 227, 233, 237, 243, 245, 248, 250, 251, 266, 273, 286, 287, 292, 293, 314, 315, 320, 321, 326, 645, 679, 680, 717, 763, 818, 840, 859, 860, 861, 862, 863, 864, 865, 902, 906, 915, 933, 970, 971, 1001, 1067, 1069, 1070, 1071, 1074, 1077, 1080, 1081, 1087, 1088, 1089, 1090, 1091, 1092, 1106, 1136, 1171], "python_exercises_legacy_mixed_list_execut": [29, 211, 763, 1067, 1077, 1080, 1081, 1082, 1083, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1106], "execut": [29, 44, 64, 109, 111, 112, 116, 147, 150, 154, 156, 164, 165, 169, 174, 181, 186, 193, 200, 206, 211, 221, 223, 224, 227, 229, 237, 239, 242, 266, 273, 286, 287, 292, 293, 296, 297, 312, 313, 314, 315, 320, 321, 326, 327, 328, 335, 342, 364, 365, 399, 401, 405, 427, 432, 436, 445, 453, 456, 457, 469, 488, 491, 498, 505, 510, 524, 553, 577, 592, 695, 761, 763, 808, 810, 836, 837, 838, 845, 847, 852, 857, 858, 866, 870, 917, 926, 955, 968, 982, 984, 985, 986, 987, 990, 994, 996, 1000, 1002, 1008, 1012, 1016, 1019, 1032, 1042, 1043, 1046, 1065, 1067, 1077, 1080, 1081, 1082, 1083, 1087, 1088, 1089, 1090, 1091, 1092, 1106, 1117, 1120, 1149, 1151, 1163, 1174, 1175], "python_basics_python_0170_if": [29, 91, 211, 328, 329, 330, 331, 332, 333, 342, 763, 1009, 1031, 1042, 1064, 1065, 1066, 1067, 1069, 1070, 1071, 1072, 1074, 1077, 1080, 1081, 1082, 1083, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1118, 1122], "statement": [29, 54, 91, 111, 112, 174, 186, 190, 191, 192, 193, 198, 200, 205, 211, 214, 215, 217, 221, 224, 227, 233, 237, 243, 245, 248, 251, 257, 263, 266, 273, 276, 280, 282, 283, 286, 287, 292, 293, 298, 301, 304, 305, 308, 309, 314, 315, 320, 321, 326, 328, 329, 330, 331, 332, 333, 342, 347, 364, 367, 371, 384, 397, 399, 400, 403, 404, 409, 411, 417, 421, 424, 428, 431, 437, 441, 446, 447, 623, 649, 668, 669, 707, 760, 762, 763, 771, 843, 883, 969, 990, 1004, 1007, 1009, 1010, 1015, 1019, 1021, 1031, 1038, 1041, 1043, 1050, 1061, 1064, 1065, 1066, 1067, 1069, 1070, 1071, 1072, 1074, 1077, 1080, 1081, 1082, 1083, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1109, 1110, 1114, 1118, 1122, 1124, 1135, 1138, 1141, 1145, 1171], "python_basics_python_0140_vari": [29, 91, 211, 328, 329, 330, 331, 332, 333, 342, 763, 1009, 1016, 1017, 1018, 1019, 1023, 1031, 1042, 1051, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1118, 1121, 1122, 1128, 1135], "python_exercises_legacy_max_numbers_funct": [29, 211, 763, 1067, 1077, 1080, 1081, 1083, 1087, 1088, 1089, 1090, 1091, 1092, 1106], "python_exercises_legacy_distil": [29, 211, 763, 1067, 1077, 1080, 1091, 1106], "elimin": [29, 58, 147, 211, 233, 240, 242, 243, 245, 251, 266, 273, 286, 292, 293, 314, 320, 321, 326, 494, 539, 667, 730, 749, 763, 903, 1010, 1067, 1080, 1091, 1106], "empti": [29, 38, 42, 48, 50, 154, 157, 164, 172, 192, 194, 211, 223, 226, 233, 234, 240, 242, 243, 245, 246, 249, 251, 252, 255, 266, 267, 272, 273, 274, 284, 286, 288, 292, 293, 310, 314, 316, 320, 321, 322, 326, 337, 371, 423, 562, 571, 572, 576, 586, 588, 604, 605, 623, 641, 661, 667, 716, 726, 727, 739, 761, 763, 773, 810, 837, 838, 850, 854, 864, 901, 910, 923, 957, 977, 1015, 1056, 1067, 1080, 1081, 1085, 1091, 1106], "comment": [29, 34, 35, 36, 38, 44, 147, 156, 191, 211, 212, 214, 227, 233, 235, 239, 240, 243, 245, 250, 251, 266, 273, 275, 286, 292, 293, 314, 320, 321, 326, 342, 365, 410, 429, 457, 494, 495, 523, 763, 915, 1053, 1067, 1080, 1091, 1106, 1121], "python_basics_python_0210_indexing_sl": [29, 91, 763, 1031, 1067, 1080, 1091, 1106, 1122, 1128], "python_exercises_legacy_for_prim": [29, 211, 763, 1067, 1077, 1080, 1081, 1083, 1087, 1088, 1089, 1090, 1091, 1092, 1106], "python_exercises_legacy_mixed_list_interact": [29, 211, 763, 1067, 1077, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1106], "interact": [29, 64, 86, 127, 129, 133, 150, 161, 193, 194, 200, 211, 221, 223, 224, 227, 229, 237, 239, 242, 247, 266, 267, 273, 286, 287, 292, 293, 295, 314, 315, 320, 321, 326, 763, 870, 918, 923, 926, 936, 998, 1033, 1067, 1076, 1077, 1080, 1081, 1082, 1083, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1106, 1113, 1121], "interpret": [29, 64, 150, 156, 174, 175, 186, 190, 193, 200, 211, 214, 221, 223, 224, 227, 229, 237, 239, 242, 246, 262, 263, 266, 272, 273, 286, 287, 288, 292, 293, 295, 304, 305, 309, 314, 315, 320, 321, 326, 342, 427, 462, 466, 473, 477, 487, 501, 515, 567, 763, 810, 894, 916, 937, 984, 985, 1032, 1033, 1034, 1035, 1065, 1067, 1076, 1077, 1080, 1081, 1082, 1083, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1106, 1108, 1121, 1143, 1164], "python_basics_python_0160_boolean": [29, 91, 211, 328, 329, 330, 331, 332, 333, 342, 763, 1009, 1031, 1042, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1077, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1118, 1122], "boolean": [29, 58, 85, 91, 174, 175, 191, 193, 195, 198, 199, 200, 211, 217, 221, 224, 225, 227, 228, 229, 233, 235, 237, 238, 243, 244, 245, 247, 248, 250, 251, 266, 273, 276, 286, 287, 292, 293, 314, 315, 317, 320, 321, 323, 326, 328, 329, 330, 331, 332, 333, 342, 347, 371, 394, 410, 763, 957, 1009, 1031, 1039, 1042, 1043, 1054, 1064, 1065, 1066, 1067, 1069, 1070, 1071, 1072, 1073, 1074, 1077, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1118, 1120, 1122, 1171], "python_basics_python_0120_helloworld": [29, 91, 211, 328, 329, 330, 331, 332, 333, 342, 763, 1009, 1016, 1017, 1018, 1019, 1023, 1031, 1042, 1051, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1118, 1121, 1122, 1128, 1135], "world": [29, 79, 91, 123, 147, 150, 151, 154, 159, 165, 184, 193, 197, 198, 200, 204, 211, 215, 217, 219, 221, 223, 224, 227, 229, 232, 233, 234, 236, 237, 243, 244, 245, 246, 248, 249, 251, 254, 266, 267, 273, 276, 286, 287, 292, 293, 306, 314, 315, 316, 320, 321, 326, 328, 329, 330, 331, 332, 333, 337, 342, 375, 380, 384, 395, 404, 411, 417, 421, 424, 428, 437, 441, 446, 447, 452, 457, 465, 488, 493, 495, 666, 669, 707, 733, 741, 760, 762, 763, 767, 770, 772, 775, 777, 780, 787, 791, 795, 801, 807, 812, 814, 819, 822, 825, 828, 831, 848, 861, 873, 906, 944, 955, 970, 971, 984, 996, 998, 1000, 1001, 1002, 1009, 1016, 1017, 1018, 1019, 1023, 1031, 1035, 1036, 1042, 1045, 1047, 1051, 1052, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1113, 1118, 1121, 1122, 1128, 1135, 1157, 1161, 1171], "python_basics_python_0225_rang": [29, 91, 211, 763, 1009, 1031, 1064, 1065, 1066, 1067, 1077, 1080, 1081, 1083, 1087, 1088, 1089, 1090, 1091, 1092, 1106, 1118], "python_exercises_csv_csv_modul": [29, 763, 1065, 1066, 1067, 1106], "python_exercises_csv_csv_db": [29, 763, 1064, 1066, 1067, 1106], "sqlite3": [29, 86, 190, 221, 227, 233, 240, 763, 1066, 1067, 1106, 1117, 1118, 1122], "python_db_sqlite3": [29, 763, 1064, 1066, 1067, 1106, 1118], "dbapi": [29, 190, 221, 233, 763, 1064, 1066, 1067, 1106, 1118], "python_exercises_herdt_boolean": [29, 763, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1106], "express": [29, 59, 63, 173, 189, 190, 192, 193, 203, 213, 222, 227, 228, 230, 234, 253, 254, 256, 257, 258, 259, 262, 263, 268, 287, 288, 293, 306, 317, 323, 365, 367, 371, 375, 384, 385, 387, 388, 389, 392, 394, 397, 399, 400, 402, 404, 410, 411, 417, 421, 424, 428, 437, 441, 446, 447, 451, 466, 475, 487, 488, 491, 495, 501, 502, 515, 523, 567, 569, 647, 669, 680, 684, 689, 707, 760, 762, 763, 870, 903, 984, 1004, 1014, 1020, 1041, 1043, 1050, 1052, 1067, 1069, 1070, 1071, 1072, 1073, 1074, 1104, 1105, 1106, 1108, 1129, 1160, 1161, 1162], "python_exercises_herdt_while_even_numb": [29, 763, 1067, 1069, 1071, 1106], "python_exercises_herdt_username_password": [29, 763, 1067, 1069, 1071, 1074, 1106], "usernam": [29, 169, 198, 206, 227, 339, 763, 837, 845, 854, 917, 927, 1054, 1067, 1069, 1071, 1086, 1106, 1171], "password": [29, 161, 164, 169, 194, 198, 206, 227, 339, 342, 347, 763, 845, 867, 907, 917, 918, 923, 1067, 1069, 1071, 1086, 1106, 1119, 1171], "python_exercises_herdt_greet": [29, 763, 1067, 1069, 1070, 1071, 1074, 1106], "python_exercises_herdt_max_numb": [29, 763, 1067, 1069, 1070, 1071, 1072, 1074, 1106], "python_exercises_herdt_swap": [29, 763, 1067, 1069, 1070, 1071, 1072, 1073, 1074, 1106], "python_exercises_sensors_project_setup": [29, 763, 1067, 1094, 1095, 1096, 1106], "setup": [29, 107, 116, 129, 138, 142, 151, 169, 181, 185, 186, 224, 226, 242, 249, 252, 254, 259, 261, 267, 270, 274, 284, 288, 310, 316, 322, 339, 342, 347, 348, 433, 466, 480, 491, 493, 507, 521, 524, 526, 527, 660, 662, 763, 778, 804, 901, 906, 914, 916, 931, 933, 944, 981, 985, 989, 991, 994, 995, 1005, 1012, 1020, 1063, 1067, 1094, 1106, 1142, 1152, 1154], "python_exercises_sensors_sensor_const": [29, 763, 1067, 1094, 1095, 1096, 1106], "python_advanced_oo_method": [29, 763, 1009, 1023, 1067, 1094, 1095, 1096, 1106], "python_misc_import": [29, 763, 1061, 1106, 1109, 1110, 1114, 1122, 1124, 1135, 1138, 1145], "incomplet": [29, 184, 223, 229, 239, 242, 246, 460, 567, 642, 748, 763, 913, 1061, 1106, 1109, 1110, 1114, 1122, 1124, 1135, 1138, 1145, 1146], "python_misc_vscod": [29, 763, 1106, 1122], "visual": [29, 79, 105, 181, 186, 190, 191, 193, 195, 206, 215, 216, 221, 224, 237, 243, 251, 254, 266, 270, 273, 276, 280, 286, 287, 292, 293, 314, 315, 320, 321, 326, 342, 347, 362, 763, 849, 915, 986, 1032, 1065, 1106, 1122], "studio": [29, 105, 181, 186, 190, 191, 193, 195, 206, 215, 216, 221, 224, 237, 243, 251, 266, 270, 273, 276, 280, 286, 287, 292, 293, 314, 315, 320, 321, 326, 342, 347, 362, 763, 849, 1032, 1106, 1122], "python_misc_mqtt": [29, 763, 1106, 1122, 1124], "python_swdev_venv": [29, 763, 1061, 1106, 1109, 1110, 1114, 1122, 1124, 1135, 1145], "python_misc_encod": [29, 91, 211, 328, 329, 330, 331, 332, 333, 342, 763, 1009, 1031, 1065, 1066, 1067, 1077, 1080, 1088, 1091, 1092, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1121, 1122], "encod": [29, 43, 91, 173, 190, 191, 193, 195, 211, 214, 221, 223, 226, 229, 230, 233, 239, 240, 242, 248, 250, 253, 267, 271, 272, 274, 287, 288, 295, 305, 306, 308, 309, 311, 316, 322, 327, 328, 329, 330, 331, 332, 333, 347, 451, 763, 1009, 1031, 1039, 1044, 1058, 1065, 1066, 1067, 1077, 1080, 1088, 1091, 1092, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1116, 1122, 1124], "python_misc_ai_k_mean": [29, 763, 1106, 1109, 1110, 1122], "python_misc_ai_machine_learning_intro": [29, 763, 1106, 1109, 1110, 1114, 1115, 1122], "concept": [29, 79, 98, 99, 100, 116, 154, 164, 178, 186, 190, 192, 194, 196, 206, 257, 260, 269, 270, 273, 290, 304, 308, 344, 345, 360, 363, 410, 433, 473, 487, 515, 516, 517, 518, 519, 520, 521, 522, 525, 567, 609, 666, 707, 717, 740, 762, 763, 833, 837, 838, 839, 840, 843, 849, 851, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 890, 900, 906, 918, 919, 920, 921, 922, 929, 935, 937, 945, 947, 951, 961, 964, 967, 969, 986, 988, 989, 990, 991, 992, 993, 994, 995, 1038, 1046, 1056, 1106, 1109, 1110, 1114, 1121, 1122, 1124, 1176], "terminologi": [29, 99, 100, 116, 160, 178, 190, 225, 260, 269, 270, 273, 290, 304, 308, 400, 473, 487, 515, 516, 517, 518, 519, 520, 521, 522, 525, 567, 582, 740, 762, 763, 833, 837, 838, 839, 840, 843, 851, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 890, 899, 900, 906, 918, 919, 920, 921, 922, 929, 935, 937, 945, 947, 961, 964, 967, 968, 969, 983, 986, 988, 989, 990, 991, 992, 993, 994, 995, 1106, 1109, 1110, 1114, 1122, 1179], "python_misc_ai_linear_regress": [29, 763, 1106, 1109, 1110, 1114, 1122], "linear": [29, 175, 177, 187, 190, 192, 210, 218, 273, 304, 308, 418, 440, 592, 717, 763, 846, 915, 981, 1043, 1106, 1109, 1110, 1115, 1122], "regress": [29, 190, 242, 273, 304, 308, 763, 1106, 1109, 1110, 1115, 1122], "python_misc_pandas_index": [29, 763, 1106, 1122, 1128], "python_misc_pandas_iloc": [29, 763, 1106, 1122, 1128], "select": [29, 64, 153, 154, 156, 160, 213, 218, 226, 243, 273, 276, 305, 326, 388, 410, 763, 810, 854, 911, 916, 950, 951, 970, 973, 975, 978, 998, 1065, 1106, 1111, 1120, 1122, 1128, 1130, 1141, 1149, 1176, 1178], "row": [29, 155, 177, 193, 213, 226, 230, 232, 234, 246, 271, 272, 273, 276, 280, 293, 305, 306, 310, 316, 326, 398, 440, 763, 850, 955, 1007, 1026, 1046, 1065, 1097, 1099, 1106, 1113, 1116, 1120, 1122, 1126, 1127, 1128, 1132], "column": [29, 64, 147, 156, 159, 174, 177, 223, 242, 271, 272, 273, 274, 276, 280, 305, 306, 310, 316, 326, 440, 451, 763, 850, 855, 866, 1065, 1077, 1089, 1106, 1113, 1116, 1122, 1128], "iloc": [29, 273, 274, 276, 278, 280, 305, 310, 326, 451, 763, 1106, 1122, 1126, 1128, 1131], "python_misc_pandas_loc": [29, 763, 1106, 1122, 1128], "loc": [29, 174, 267, 271, 272, 273, 274, 276, 278, 280, 305, 326, 426, 763, 955, 1018, 1106, 1122, 1125, 1126, 1127, 1128, 1129], "python_misc_pandas_bas": [29, 763, 1106, 1122, 1128], "datafram": [29, 272, 273, 274, 276, 280, 283, 305, 310, 326, 451, 763, 1106, 1111, 1114, 1122, 1125, 1127, 1128, 1129, 1131, 1132], "python_misc_pandas_filt": [29, 763, 1106, 1122, 1128], "python_misc_pandas_mod_col": [29, 763, 1106, 1122, 1128], "ad": [29, 32, 33, 39, 86, 117, 121, 134, 160, 164, 165, 166, 169, 174, 194, 206, 216, 272, 273, 276, 280, 305, 326, 339, 390, 409, 431, 458, 468, 472, 477, 586, 588, 589, 624, 678, 714, 753, 754, 763, 779, 914, 916, 966, 970, 971, 1006, 1024, 1039, 1058, 1106, 1122, 1128, 1129, 1133, 1142], "modifi": [29, 42, 76, 89, 111, 112, 117, 121, 132, 134, 156, 161, 169, 172, 174, 194, 213, 270, 272, 273, 276, 280, 281, 282, 283, 304, 305, 326, 353, 368, 370, 376, 413, 425, 432, 449, 451, 453, 462, 472, 474, 477, 493, 494, 514, 523, 526, 527, 529, 530, 531, 543, 556, 559, 569, 576, 579, 580, 582, 585, 597, 649, 653, 655, 658, 661, 675, 689, 712, 717, 729, 740, 742, 757, 758, 761, 762, 763, 783, 798, 818, 837, 838, 850, 855, 906, 919, 923, 928, 947, 955, 961, 999, 1000, 1006, 1008, 1019, 1040, 1083, 1087, 1105, 1106, 1122, 1128, 1130, 1173, 1177], "python_misc_pandas_add_row": [29, 763, 1106, 1122, 1128], "python_basics_python_0400_list": [29, 91, 763, 1031, 1106], "python_basics_python_0110_blahblah": [29, 91, 211, 328, 329, 330, 331, 332, 333, 342, 763, 1009, 1016, 1017, 1018, 1019, 1023, 1031, 1042, 1051, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1118, 1121, 1122, 1128, 1135], "blahblah": [29, 91, 193, 198, 200, 211, 217, 221, 224, 227, 233, 237, 243, 244, 245, 247, 248, 250, 251, 253, 266, 273, 276, 286, 287, 292, 293, 314, 315, 317, 320, 321, 322, 326, 328, 329, 330, 331, 332, 333, 342, 763, 1009, 1016, 1017, 1018, 1019, 1023, 1031, 1042, 1051, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1118, 1121, 1122, 1128, 1135, 1171], "python_basics_python_0125_run": [29, 91, 211, 342, 763, 1031, 1061, 1064, 1065, 1066, 1067, 1069, 1070, 1071, 1072, 1074, 1075, 1077, 1080, 1081, 1082, 1083, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106], "run": [29, 42, 59, 63, 64, 91, 98, 109, 111, 112, 129, 144, 147, 150, 153, 154, 155, 156, 157, 160, 161, 164, 165, 173, 185, 186, 193, 194, 206, 211, 215, 216, 221, 226, 234, 242, 243, 246, 249, 252, 254, 259, 266, 267, 270, 273, 274, 276, 284, 286, 287, 288, 292, 293, 297, 306, 310, 313, 314, 315, 316, 320, 321, 322, 326, 327, 342, 345, 367, 385, 427, 430, 438, 439, 443, 444, 456, 457, 469, 474, 493, 494, 495, 523, 525, 526, 527, 549, 576, 589, 598, 610, 667, 725, 726, 761, 763, 783, 798, 808, 810, 811, 820, 843, 845, 847, 848, 849, 850, 866, 867, 870, 871, 901, 914, 915, 916, 917, 925, 927, 935, 937, 953, 966, 968, 969, 970, 972, 977, 982, 984, 987, 992, 994, 996, 1000, 1005, 1016, 1019, 1031, 1032, 1034, 1061, 1064, 1065, 1066, 1067, 1069, 1070, 1071, 1072, 1074, 1075, 1077, 1080, 1081, 1082, 1083, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1110, 1124, 1136, 1142, 1147, 1148, 1153, 1166], "python_basics_python_1000_function_object": [29, 91, 763, 1031, 1106], "python_basics_python_0200_sequential_typ": [29, 91, 211, 328, 329, 330, 331, 332, 333, 342, 763, 1009, 1031, 1064, 1065, 1066, 1067, 1077, 1080, 1081, 1083, 1087, 1088, 1089, 1090, 1091, 1092, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1118, 1121, 1122, 1128], "sequenti": [29, 64, 91, 107, 109, 190, 191, 193, 195, 198, 199, 200, 203, 211, 216, 221, 224, 227, 232, 233, 235, 237, 245, 247, 248, 251, 255, 263, 266, 273, 276, 279, 281, 283, 284, 286, 287, 292, 293, 304, 305, 308, 309, 314, 315, 317, 319, 320, 321, 326, 328, 329, 330, 331, 332, 333, 342, 347, 440, 515, 528, 532, 567, 602, 612, 620, 631, 635, 664, 763, 914, 916, 946, 1009, 1014, 1031, 1064, 1065, 1066, 1067, 1077, 1080, 1081, 1083, 1087, 1088, 1089, 1090, 1091, 1092, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1118, 1121, 1122, 1128, 1171], "python_basics_python_0250_refs_flat_deep_copi": [29, 91, 211, 328, 329, 330, 331, 332, 333, 342, 763, 1009, 1031, 1065, 1066, 1067, 1077, 1080, 1088, 1089, 1091, 1092, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1121, 1122], "mutabl": [29, 91, 186, 190, 191, 193, 195, 198, 199, 205, 211, 212, 221, 224, 225, 227, 228, 229, 230, 235, 237, 238, 241, 244, 248, 250, 251, 253, 256, 266, 268, 273, 275, 276, 280, 282, 283, 285, 286, 287, 289, 292, 293, 295, 304, 305, 307, 308, 309, 311, 314, 317, 320, 321, 326, 328, 329, 330, 331, 332, 333, 342, 717, 763, 1009, 1031, 1040, 1044, 1065, 1066, 1067, 1077, 1080, 1088, 1089, 1091, 1092, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1121, 1122, 1171], "python_basics_python_0130_syntax_etc": [29, 91, 211, 328, 329, 330, 331, 332, 333, 342, 763, 1009, 1016, 1017, 1018, 1019, 1023, 1031, 1042, 1051, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1118, 1121, 1122, 1128, 1135], "syntax": [29, 69, 91, 147, 177, 186, 193, 194, 196, 198, 199, 200, 205, 211, 212, 217, 221, 224, 227, 233, 234, 237, 239, 243, 244, 245, 248, 251, 253, 264, 266, 273, 275, 276, 286, 287, 289, 292, 293, 314, 315, 317, 318, 320, 321, 326, 328, 329, 330, 331, 332, 333, 342, 489, 568, 569, 672, 689, 716, 729, 763, 898, 1004, 1006, 1007, 1008, 1009, 1016, 1017, 1018, 1019, 1023, 1031, 1033, 1042, 1050, 1051, 1053, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1118, 1121, 1122, 1128, 1135, 1161, 1171], "python_basics_python_0460_set": [29, 91, 763, 1031, 1106], "python_basics_instal": [29, 91, 763, 1031, 1106], "python_db_postgr": [29, 763, 1106, 1118], "postgresql": [29, 763, 1106, 1117, 1118], "python_db_dbapi2": [29, 763, 1064, 1066, 1067, 1106, 1118], "python_swdev_unittest": [29, 763, 1106, 1135], "unittest": [29, 66, 116, 150, 151, 167, 170, 181, 183, 186, 189, 190, 200, 203, 214, 216, 221, 263, 272, 283, 332, 342, 350, 351, 360, 361, 761, 763, 1050, 1106, 1108, 1135, 1146], "python_advanced_oo_inherit": [29, 763, 1009, 1016, 1017, 1018, 1019, 1023, 1106, 1135], "inherit": [29, 66, 70, 74, 107, 134, 171, 181, 190, 214, 227, 244, 246, 279, 280, 281, 282, 283, 287, 304, 305, 308, 309, 319, 351, 473, 487, 515, 523, 525, 565, 567, 568, 592, 641, 644, 664, 706, 748, 762, 763, 802, 842, 845, 848, 869, 871, 978, 1007, 1009, 1017, 1018, 1019, 1020, 1023, 1025, 1028, 1106, 1135, 1177], "python_swdev_pip": [29, 763, 1061, 1106, 1109, 1110, 1114, 1122, 1124, 1135, 1138, 1145], "python_swdev_pytest_intro": [29, 763, 1106, 1135, 1140], "By": [29, 51, 53, 154, 156, 161, 165, 169, 181, 187, 223, 229, 230, 232, 239, 240, 242, 243, 247, 251, 254, 258, 259, 261, 263, 272, 280, 282, 283, 287, 298, 301, 304, 305, 308, 318, 319, 350, 382, 409, 432, 435, 652, 653, 655, 656, 659, 661, 663, 664, 707, 708, 760, 762, 763, 779, 852, 901, 914, 950, 969, 985, 996, 1020, 1027, 1104, 1105, 1106, 1115, 1135, 1140], "python_advanced_except": [29, 763, 1009, 1106], "python_advanced_context_mgr": [29, 763, 1009, 1106], "python_advanced_iteration_gener": [29, 763, 1009, 1106], "comprehens": [29, 64, 69, 174, 175, 187, 190, 193, 199, 213, 214, 215, 222, 227, 228, 230, 231, 232, 235, 238, 244, 247, 263, 266, 268, 275, 280, 286, 287, 292, 293, 304, 305, 307, 308, 309, 314, 315, 317, 320, 321, 323, 326, 712, 763, 781, 798, 806, 1009, 1014, 1106, 1127], "python_advanced_oo_classes_and_dict": [29, 763, 1009, 1016, 1017, 1018, 1019, 1023, 1067, 1094, 1095, 1096, 1101, 1103, 1106, 1135], "python_advanced_stararg": [29, 763, 1009, 1106], "keyword": [29, 39, 64, 138, 149, 187, 190, 191, 192, 193, 195, 214, 216, 230, 235, 240, 242, 263, 266, 267, 273, 276, 280, 282, 283, 286, 288, 292, 298, 301, 304, 305, 308, 309, 342, 409, 439, 582, 583, 585, 603, 654, 714, 763, 959, 1005, 1006, 1007, 1009, 1033, 1049, 1051, 1063, 1106, 1119, 1158, 1160], "python_advanced_exec": [29, 763, 1009, 1106], "python_advanced_comprehens": [29, 763, 1009, 1106], "python_advanced_closur": [29, 763, 1009, 1106], "closur": [29, 59, 63, 64, 173, 186, 190, 198, 199, 214, 227, 230, 240, 273, 276, 305, 309, 711, 763, 1006, 1009, 1049, 1051, 1106, 1171], "python_advanced_decor": [29, 763, 1009, 1106], "decor": [29, 59, 60, 63, 174, 186, 189, 190, 205, 214, 230, 240, 254, 309, 466, 473, 487, 501, 515, 567, 763, 1005, 1009, 1020, 1027, 1028, 1030, 1051, 1106, 1108, 1141, 1164], "python_advanced_oo_constructor": [29, 763, 1009, 1016, 1017, 1018, 1019, 1023, 1106, 1135], "constructor": [29, 43, 53, 56, 71, 98, 111, 112, 116, 121, 124, 127, 129, 133, 134, 181, 187, 193, 213, 214, 216, 227, 232, 240, 244, 263, 266, 268, 273, 276, 279, 280, 281, 282, 283, 284, 286, 287, 292, 298, 301, 304, 305, 308, 309, 314, 319, 320, 321, 326, 344, 345, 346, 419, 473, 487, 513, 515, 518, 521, 525, 526, 545, 554, 560, 567, 568, 569, 575, 592, 623, 639, 640, 649, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 667, 675, 676, 677, 679, 705, 707, 723, 726, 727, 728, 732, 737, 738, 739, 740, 741, 748, 760, 762, 763, 769, 771, 802, 955, 1009, 1016, 1017, 1018, 1019, 1021, 1023, 1024, 1025, 1039, 1106, 1135, 1141, 1153, 1161], "python_advanced_oo_str_repr": [29, 763, 1009, 1023, 1106], "str": [29, 173, 176, 187, 197, 202, 204, 205, 210, 213, 215, 223, 226, 229, 234, 236, 239, 242, 246, 249, 252, 255, 263, 264, 266, 267, 271, 272, 273, 274, 276, 278, 280, 282, 283, 284, 286, 287, 288, 292, 294, 298, 299, 301, 302, 304, 305, 306, 308, 309, 310, 314, 316, 320, 321, 322, 326, 327, 333, 336, 337, 338, 342, 415, 433, 451, 500, 505, 586, 587, 588, 589, 704, 716, 763, 1007, 1009, 1021, 1023, 1024, 1027, 1036, 1038, 1039, 1050, 1054, 1058, 1065, 1073, 1075, 1106, 1121, 1127, 1132, 1133], "repr": [29, 204, 223, 229, 239, 242, 246, 249, 252, 263, 266, 267, 273, 276, 280, 282, 283, 286, 287, 288, 292, 298, 299, 301, 304, 305, 308, 309, 314, 320, 326, 763, 1007, 1009, 1023, 1024, 1106], "python_advanced_oo_properti": [29, 763, 1009, 1023, 1106], "properti": [29, 40, 174, 190, 214, 227, 244, 246, 263, 267, 280, 282, 283, 287, 297, 298, 301, 304, 305, 308, 309, 313, 321, 346, 455, 456, 457, 462, 465, 763, 1009, 1023, 1106, 1147, 1150], "python_advanced_oo_operator_overload": [29, 763, 1009, 1023, 1106], "overload": [29, 98, 173, 181, 190, 216, 244, 279, 280, 281, 282, 283, 304, 308, 309, 311, 318, 435, 515, 523, 532, 534, 567, 569, 590, 593, 594, 596, 602, 612, 618, 622, 623, 631, 634, 635, 649, 650, 652, 653, 655, 656, 657, 659, 660, 661, 662, 663, 664, 675, 676, 680, 707, 723, 732, 740, 760, 762, 763, 769, 1009, 1023, 1106, 1127, 1160], "python_advanced_oo_abc": [29, 763, 1009, 1023, 1106], "abstract": [29, 79, 85, 190, 230, 262, 279, 280, 281, 282, 283, 304, 305, 308, 309, 346, 410, 449, 451, 466, 473, 477, 479, 481, 487, 489, 501, 515, 525, 567, 602, 641, 642, 719, 751, 763, 843, 847, 916, 931, 1009, 1023, 1106, 1164, 1166], "abc": [29, 32, 173, 187, 190, 192, 197, 202, 204, 210, 213, 215, 219, 223, 226, 229, 230, 234, 236, 239, 242, 246, 249, 252, 255, 263, 264, 267, 274, 280, 282, 283, 284, 288, 294, 298, 301, 304, 305, 306, 308, 309, 310, 316, 322, 329, 337, 451, 525, 594, 615, 632, 634, 751, 763, 1009, 1023, 1039, 1106, 1130], "duck": [29, 32, 189, 190, 244, 263, 280, 282, 283, 287, 304, 305, 308, 309, 319, 466, 525, 667, 669, 707, 715, 716, 721, 727, 748, 753, 760, 762, 763, 1009, 1016, 1023, 1106, 1108, 1113, 1161], "python_advanced_multithreading_mutex": [29, 763, 1009, 1017, 1018, 1019, 1106], "race": [29, 73, 74, 75, 79, 88, 154, 172, 232, 258, 259, 261, 270, 281, 282, 283, 304, 305, 308, 318, 350, 351, 357, 426, 436, 545, 717, 733, 740, 762, 763, 787, 791, 812, 814, 819, 823, 825, 828, 831, 906, 936, 946, 947, 952, 960, 961, 967, 1009, 1017, 1019, 1106, 1166, 1176, 1177], "condit": [29, 73, 74, 75, 79, 88, 90, 133, 154, 165, 172, 213, 232, 252, 258, 259, 261, 270, 281, 282, 283, 304, 305, 308, 318, 350, 351, 357, 365, 367, 371, 394, 395, 397, 398, 400, 402, 404, 411, 417, 421, 424, 426, 428, 436, 437, 441, 446, 447, 454, 459, 460, 461, 545, 562, 651, 669, 707, 717, 727, 733, 740, 741, 760, 762, 763, 787, 791, 812, 814, 819, 823, 825, 827, 828, 831, 906, 936, 942, 946, 947, 952, 960, 961, 963, 967, 1009, 1017, 1019, 1042, 1043, 1058, 1106, 1112, 1127, 1166, 1176, 1177], "mutex": [29, 73, 74, 75, 77, 79, 88, 90, 172, 201, 232, 257, 258, 259, 261, 270, 281, 282, 283, 304, 305, 308, 318, 350, 351, 357, 545, 734, 736, 738, 739, 740, 762, 763, 787, 791, 808, 812, 813, 814, 819, 825, 828, 829, 831, 906, 947, 952, 957, 960, 961, 1009, 1017, 1019, 1106, 1161, 1166, 1177], "python_advanced_multithreading_bas": [29, 763, 1009, 1016, 1017, 1018, 1019, 1106], "python_advanced_multithreading_exam_quest": [29, 763, 1009, 1017, 1019, 1106], "exam": [29, 97, 98, 107, 215, 231, 260, 269, 290, 344, 356, 763, 840, 906, 947, 967, 1009, 1017, 1106], "python_drafts_setuptool": [29, 763, 1061, 1106], "setuptool": [29, 62, 150, 263, 298, 308, 763, 1061, 1106, 1143], "python_drafts_matplotlib": [29, 763, 1061, 1106], "matplotlib": [29, 186, 205, 224, 225, 237, 251, 252, 254, 256, 287, 306, 311, 315, 317, 351, 763, 1004, 1061, 1106, 1108, 1114], "python_drafts_argpars": [29, 763, 1061, 1106], "argpars": [29, 230, 251, 282, 304, 308, 328, 763, 1061, 1106], "As": [30, 46, 69, 81, 116, 151, 154, 156, 161, 165, 171, 183, 186, 190, 221, 234, 296, 312, 345, 362, 400, 431, 434, 510, 512, 526, 577, 582, 584, 585, 662, 745, 783, 810, 836, 845, 914, 915, 923, 925, 942, 970, 978, 1000, 1006, 1027, 1032, 1036, 1093, 1097, 1110, 1151, 1163], "follow": [30, 39, 43, 79, 107, 108, 110, 113, 119, 122, 144, 153, 154, 156, 157, 158, 159, 161, 169, 174, 178, 182, 183, 186, 190, 194, 195, 206, 223, 229, 239, 240, 242, 246, 255, 259, 261, 278, 279, 281, 287, 288, 339, 361, 363, 366, 383, 384, 397, 400, 427, 429, 431, 433, 438, 439, 442, 450, 452, 457, 467, 468, 471, 472, 488, 489, 491, 492, 493, 494, 495, 513, 516, 517, 520, 521, 523, 524, 525, 526, 527, 539, 545, 571, 586, 587, 588, 589, 642, 649, 651, 656, 658, 659, 662, 663, 666, 684, 717, 757, 758, 761, 771, 773, 779, 810, 836, 837, 838, 843, 845, 847, 849, 861, 863, 864, 870, 874, 882, 883, 907, 914, 915, 916, 937, 940, 941, 942, 943, 952, 969, 978, 982, 984, 990, 992, 994, 996, 998, 999, 1000, 1003, 1007, 1008, 1012, 1019, 1038, 1052, 1060, 1065, 1068, 1073, 1077, 1079, 1083, 1086, 1087, 1090, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1130, 1134, 1143, 1164], "version": [30, 62, 153, 157, 159, 160, 161, 164, 167, 169, 182, 183, 184, 186, 193, 202, 204, 213, 214, 223, 227, 229, 233, 239, 242, 249, 254, 257, 266, 272, 278, 279, 280, 281, 288, 321, 335, 350, 410, 449, 450, 452, 453, 455, 462, 465, 562, 659, 661, 662, 709, 713, 725, 758, 783, 785, 802, 810, 811, 826, 870, 914, 915, 985, 986, 996, 998, 999, 1001, 1032, 1033, 1039, 1063, 1136, 1143, 1144, 1150, 1156], "control": [30, 45, 59, 60, 63, 64, 87, 117, 119, 125, 126, 133, 134, 153, 160, 167, 169, 172, 183, 186, 191, 193, 194, 195, 196, 205, 206, 221, 224, 237, 242, 248, 262, 319, 343, 344, 345, 347, 350, 388, 402, 403, 449, 452, 466, 473, 516, 517, 520, 526, 568, 763, 783, 808, 810, 815, 870, 906, 908, 909, 913, 914, 916, 932, 981, 986, 1005, 1008, 1016, 1028, 1041, 1043, 1127, 1142, 1144, 1162, 1172, 1178], "done": [30, 42, 46, 47, 50, 53, 55, 56, 57, 64, 76, 85, 88, 92, 103, 111, 112, 118, 119, 120, 122, 123, 124, 125, 126, 127, 129, 133, 134, 141, 146, 150, 151, 153, 155, 156, 158, 159, 160, 161, 164, 169, 174, 175, 178, 182, 186, 193, 215, 230, 234, 240, 242, 258, 259, 261, 273, 276, 283, 288, 306, 328, 334, 345, 351, 366, 367, 415, 422, 423, 425, 427, 438, 449, 451, 452, 453, 457, 491, 510, 524, 527, 569, 581, 582, 610, 624, 632, 637, 661, 662, 664, 667, 674, 695, 698, 702, 703, 713, 719, 727, 731, 739, 741, 763, 769, 779, 781, 800, 802, 810, 812, 837, 838, 842, 843, 845, 846, 854, 866, 889, 907, 908, 910, 915, 916, 932, 933, 934, 944, 958, 966, 972, 981, 985, 986, 994, 998, 1000, 1007, 1010, 1011, 1012, 1030, 1039, 1050, 1058, 1059, 1060, 1063, 1066, 1087, 1120, 1141, 1166], "No": [30, 43, 64, 81, 144, 150, 154, 156, 160, 161, 169, 196, 213, 229, 230, 246, 272, 353, 373, 375, 389, 405, 409, 416, 427, 432, 444, 449, 453, 454, 457, 459, 462, 463, 464, 465, 477, 523, 562, 572, 573, 585, 592, 602, 617, 620, 638, 656, 666, 668, 671, 675, 678, 682, 726, 727, 734, 741, 788, 790, 792, 794, 808, 810, 815, 827, 846, 852, 854, 857, 858, 873, 881, 889, 892, 908, 910, 916, 930, 937, 942, 943, 952, 953, 955, 957, 966, 970, 978, 981, 987, 1001, 1003, 1020, 1027, 1033, 1036, 1039, 1040, 1048, 1052, 1056, 1058, 1115, 1116, 1120, 1121, 1130, 1133, 1141, 1143, 1149], "proprietari": 30, "accept": [30, 32, 61, 133, 156, 182, 278, 449, 451, 717, 727, 729, 778, 910, 936, 1006, 1030, 1176, 1178], "proven": [30, 438, 442, 586, 588, 589, 678], "difficult": [30, 69, 213, 394, 412, 562, 796, 808, 970], "ffmpeg": 31, "video4linux2": 31, "640x480": [31, 1004], "dev": [31, 64, 101, 124, 154, 155, 165, 171, 172, 182, 183, 226, 232, 242, 249, 252, 267, 270, 274, 279, 281, 284, 288, 310, 316, 322, 348, 438, 457, 521, 763, 765, 766, 768, 774, 781, 790, 804, 806, 810, 823, 840, 841, 850, 852, 853, 870, 884, 887, 890, 892, 906, 909, 914, 915, 916, 939, 946, 966, 969, 972, 974, 977, 978, 998, 1148, 1150, 1166], "video0": 31, "500k": 31, "matroska": 31, "mk": [31, 32], "disabl": [31, 154, 157, 159, 165, 223, 229, 239, 242, 410, 802, 808, 813, 815, 970, 1136, 1156], "audio": [31, 137, 142, 156, 161, 763, 1165], "appar": [31, 57, 62, 64, 66, 67, 156, 158, 159, 161, 165, 215, 226, 278, 454, 468, 639, 684, 695, 727, 778, 914, 972, 1121], "next": [31, 39, 42, 64, 99, 116, 150, 155, 156, 161, 169, 174, 176, 187, 192, 194, 202, 206, 213, 219, 223, 226, 227, 229, 232, 234, 236, 239, 242, 246, 252, 258, 259, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322, 327, 334, 348, 382, 400, 402, 423, 451, 489, 493, 507, 517, 526, 562, 599, 675, 688, 695, 697, 719, 800, 810, 829, 854, 870, 902, 914, 916, 936, 946, 966, 985, 1011, 1012, 1015, 1043, 1046, 1113, 1149], "mention": [31, 134, 154, 155, 182, 186, 190, 216, 240, 282, 283, 304, 305, 309, 512, 526, 710, 822, 915, 1003, 1108, 1124], "frame": [31, 148, 159, 171, 193, 223, 229, 239, 242, 272, 278, 310, 422, 435, 439, 489, 680, 908, 909, 1126], "size": [31, 101, 110, 121, 153, 155, 156, 173, 175, 181, 223, 224, 229, 232, 237, 239, 242, 246, 251, 254, 270, 287, 288, 293, 342, 373, 390, 395, 404, 411, 415, 417, 421, 422, 424, 427, 428, 430, 435, 436, 437, 439, 441, 446, 447, 469, 470, 476, 515, 527, 528, 532, 533, 534, 535, 536, 540, 541, 544, 550, 562, 567, 569, 573, 577, 582, 586, 588, 589, 602, 603, 604, 605, 610, 615, 616, 620, 624, 626, 627, 632, 634, 661, 663, 669, 672, 673, 678, 689, 690, 691, 693, 707, 717, 726, 730, 731, 739, 747, 760, 761, 762, 763, 769, 781, 796, 806, 826, 835, 840, 841, 847, 854, 884, 887, 890, 892, 898, 902, 906, 910, 915, 936, 938, 977, 978, 984, 1001, 1004, 1108, 1121], "input": [31, 40, 60, 69, 87, 124, 174, 175, 176, 177, 187, 190, 193, 195, 217, 223, 229, 232, 239, 242, 245, 246, 267, 270, 342, 347, 371, 372, 378, 402, 410, 433, 438, 450, 528, 529, 530, 531, 543, 582, 632, 651, 674, 761, 781, 836, 854, 885, 903, 907, 917, 933, 936, 948, 950, 951, 958, 1014, 1029, 1058, 1070, 1074, 1075, 1087, 1090, 1093, 1099, 1102, 1110, 1111, 1114, 1115, 1172], "rate": [31, 164, 186, 246, 305, 431, 829, 968], "hz": [31, 820], "bitrat": [31, 909], "If": [31, 43, 45, 47, 53, 55, 56, 57, 90, 114, 116, 134, 153, 154, 155, 156, 159, 160, 161, 169, 170, 178, 186, 223, 229, 236, 239, 242, 246, 254, 259, 261, 270, 276, 288, 305, 342, 347, 388, 397, 427, 439, 459, 461, 467, 517, 523, 524, 539, 569, 574, 638, 645, 661, 662, 675, 680, 726, 730, 731, 739, 741, 763, 783, 788, 802, 810, 815, 827, 836, 845, 849, 852, 870, 871, 879, 882, 906, 907, 914, 915, 916, 917, 923, 937, 945, 947, 955, 960, 964, 977, 999, 1000, 1012, 1020, 1022, 1032, 1039, 1047, 1049, 1060, 1085, 1113, 1116, 1130, 1142, 1161], "instead": [31, 58, 64, 121, 128, 134, 147, 153, 154, 155, 156, 174, 175, 183, 215, 232, 234, 242, 272, 288, 327, 348, 353, 390, 439, 467, 510, 513, 527, 589, 605, 661, 663, 680, 684, 726, 727, 741, 778, 779, 788, 841, 870, 892, 915, 957, 977, 984, 986, 996, 1002, 1033, 1079, 1091, 1103, 1127, 1148], "stdout": [31, 134, 173, 206, 210, 214, 223, 229, 239, 242, 252, 260, 267, 269, 270, 290, 291, 305, 327, 335, 337, 342, 346, 348, 638, 763, 834, 836, 840, 851, 852, 895, 898, 901, 906, 936, 981, 1008, 1058, 1060, 1065, 1070, 1074, 1077, 1092, 1124, 1133, 1167], "hold": [31, 121, 153, 155, 174, 190, 192, 193, 213, 240, 365, 377, 397, 469, 599, 654, 661, 712, 717, 731, 739, 743, 774, 808, 812, 813, 907, 914, 970, 1008, 1021, 1043, 1091, 1113], "mplayer": [31, 284, 322], "stdin": [31, 42, 206, 214, 223, 229, 232, 239, 242, 335, 342, 374, 380, 395, 404, 411, 417, 421, 424, 428, 437, 441, 446, 447, 669, 707, 760, 762, 763, 836, 852, 853, 885, 936, 1056, 1058, 1059, 1070, 1121, 1133, 1167], "unicod": [32, 34, 35, 36, 38, 214, 223, 227, 229, 239, 242, 264, 288, 322, 377, 1038, 1044, 1058, 1121], "sphinxemojicod": 32, "pip": [32, 62, 138, 150, 186, 190, 211, 240, 254, 936, 1032, 1062, 1063, 1095, 1108, 1124, 1135, 1136, 1137, 1141, 1143, 1144], "conf": [32, 66, 155, 157, 159, 322, 462, 810, 916, 1008], "grimac": 32, "astonish": 32, "rolling_ey": 32, "face_with_raised_eyebrow": 32, "flush": [32, 267, 526, 769, 781], "innoc": [32, 160, 432, 733, 849, 983, 1027], "kiss": 32, "kissing_heart": 32, "middle_fing": 32, "metal": [32, 79, 81, 88, 90, 154, 360, 907, 915, 916], "muscl": 32, "nerd": [32, 870], "ok_hand": 32, "penguin": 32, "pig": [32, 427], "point_up": 32, "sleep": [32, 64, 113, 154, 229, 258, 259, 282, 283, 304, 328, 400, 409, 739, 763, 787, 790, 792, 802, 812, 815, 819, 825, 827, 828, 831, 906, 907, 915, 944, 948, 951, 966, 968, 969, 972, 977, 1016], "sunglass": 32, "think": [32, 42, 43, 70, 154, 155, 169, 192, 216, 318, 410, 431, 432, 435, 521, 525, 572, 592, 667, 675, 677, 726, 837, 838, 841, 931, 977, 1039], "thumbsdown": 32, "thumbsup": 32, "wink": 32, "1_tone1": 32, "1_tone2": 32, "1_tone3": 32, "1_tone4": 32, "1_tone5": 32, "1st_place_med": 32, "2nd_place_med": 32, "3rd_place_med": 32, "8ball": 32, "abacu": 32, "abcd": [32, 204, 210, 226, 246, 288], "ac": [32, 164, 202], "accordion": 32, "adhesive_bandag": 32, "admission_ticket": 32, "adult": [32, 1028], "adult_dark_skin_ton": 32, "adult_light_skin_ton": 32, "adult_medium_dark_skin_ton": 32, "adult_medium_light_skin_ton": 32, "adult_medium_skin_ton": 32, "adult_tone1": 32, "adult_tone2": 32, "adult_tone3": 32, "adult_tone4": 32, "adult_tone5": 32, "ae": [32, 164], "aerial_tramwai": 32, "af": [32, 164], "afghanistan": 32, "ai": [32, 190, 1115, 1122], "airplan": [32, 907], "airplane_arriv": 32, "airplane_departur": 32, "airplane_smal": 32, "aland_island": 32, "alarm_clock": 32, "albania": 32, "alemb": 32, "algeria": 32, "alien": 32, "ambul": 32, "american_samoa": 32, "amphora": 32, "anatomical_heart": 32, "anchor": 32, "andorra": 32, "angel": [32, 278], "angel_tone1": 32, "angel_tone2": 32, "angel_tone3": 32, "angel_tone4": 32, "angel_tone5": 32, "anger": 32, "anger_right": 32, "angola": 32, "angri": 32, "anguilla": 32, "anguish": 32, "ant": 32, "antarctica": 32, "antigua_barbuda": 32, "ao": 32, "appl": [32, 984, 1050], "aq": 32, "aquariu": 32, "archeri": 32, "argentina": 32, "ari": [32, 35, 38], "armenia": 32, "arrow_backward": 32, "arrow_double_down": 32, "arrow_double_up": 32, "arrow_down": 32, "arrow_down_smal": 32, "arrow_forward": 32, "arrow_heading_down": 32, "arrow_heading_up": 32, "arrow_left": 32, "arrow_lower_left": 32, "arrow_lower_right": 32, "arrow_right": 32, "arrow_right_hook": 32, "arrow_up": 32, "arrow_up_down": 32, "arrow_up_smal": 32, "arrow_upper_left": 32, "arrow_upper_right": 32, "arrows_clockwis": 32, "arrows_counterclockwis": 32, "articulated_lorri": 32, "artificial_satellit": 32, "artist": 32, "artist_dark_skin_ton": 32, "artist_light_skin_ton": 32, "artist_medium_dark_skin_ton": 32, "artist_medium_light_skin_ton": 32, "artist_medium_skin_ton": 32, "artist_tone1": 32, "artist_tone2": 32, "artist_tone3": 32, "artist_tone4": 32, "artist_tone5": 32, "aruba": 32, "ascens": 32, "astronaut": 32, "astronaut_dark_skin_ton": 32, "astronaut_light_skin_ton": 32, "astronaut_medium_dark_skin_ton": 32, "astronaut_medium_light_skin_ton": 32, "astronaut_medium_skin_ton": 32, "astronaut_tone1": 32, "astronaut_tone2": 32, "astronaut_tone3": 32, "astronaut_tone4": 32, "astronaut_tone5": 32, "athletic_sho": 32, "atm": 32, "atom": [32, 66, 77, 89, 177, 232, 257, 258, 259, 261, 270, 281, 318, 319, 545, 677, 726, 739, 740, 762, 763, 772, 777, 780, 782, 787, 790, 791, 793, 796, 797, 801, 802, 803, 805, 807, 812, 815, 816, 819, 820, 821, 825, 828, 830, 831, 906, 946, 956, 957, 1019, 1161], "atom_symbol": 32, "australia": 32, "austria": [32, 154, 360], "auto_rickshaw": 32, "avocado": 32, "aw": 32, "ax": [32, 175, 1004], "az": 32, "azerbaijan": 32, "ba": [32, 164], "babi": 32, "baby_bottl": 32, "baby_chick": 32, "baby_symbol": 32, "baby_tone1": 32, "baby_tone2": 32, "baby_tone3": 32, "baby_tone4": 32, "baby_tone5": 32, "back_of_hand": 32, "back_of_hand_tone1": 32, "back_of_hand_tone2": 32, "back_of_hand_tone3": 32, "back_of_hand_tone4": 32, "back_of_hand_tone5": 32, "bacon": 32, "badger": 32, "badminton": 32, "bagel": 32, "baggage_claim": 32, "baguette_bread": 32, "bahama": 32, "bahrain": 32, "balance_scal": 32, "bald": 32, "ballet_sho": 32, "balloon": 32, "ballot_box": 32, "ballot_box_with_ballot": 32, "ballot_box_with_check": 32, "bamboo": 32, "banana": 32, "bangbang": 32, "bangladesh": 32, "banjo": 32, "bank": [32, 451], "bar_chart": 32, "barbado": 32, "barber": 32, "basebal": 32, "basket": 32, "basketbal": 32, "basketball_man": 32, "basketball_play": 32, "basketball_player_tone1": 32, "basketball_player_tone2": 32, "basketball_player_tone3": 32, "basketball_player_tone4": 32, "basketball_player_tone5": 32, "basketball_woman": 32, "bat": [32, 1143], "bath": 32, "bath_tone1": 32, "bath_tone2": 32, "bath_tone3": 32, "bath_tone4": 32, "bath_tone5": 32, "bathtub": 32, "batteri": [32, 90, 186, 342, 907, 1031, 1032, 1033, 1059, 1137], "bb": [32, 146, 157, 914], "bd": [32, 164], "beach": 32, "beach_umbrella": 32, "beach_with_umbrella": 32, "bear": [32, 955, 1131], "bearded_person": 32, "bearded_person_dark_skin_ton": 32, "bearded_person_light_skin_ton": 32, "bearded_person_medium_dark_skin_ton": 32, "bearded_person_medium_light_skin_ton": 32, "bearded_person_medium_skin_ton": 32, "bearded_person_tone1": 32, "bearded_person_tone2": 32, "bearded_person_tone3": 32, "bearded_person_tone4": 32, "bearded_person_tone5": 32, "beaver": 32, "bed": 32, "bee": 32, "beer": [32, 429], "beetl": 32, "belaru": 32, "belgium": 32, "beliz": 32, "bell": [32, 1027, 1030], "bell_pepp": 32, "bellhop": 32, "bellhop_bel": 32, "benin": 32, "bento": 32, "bermuda": 32, "beverage_box": 32, "bf": [32, 164], "bg": [32, 451], "bh": 32, "bhutan": 32, "bicyclist": 32, "bicyclist_tone1": 32, "bicyclist_tone2": 32, "bicyclist_tone3": 32, "bicyclist_tone4": 32, "bicyclist_tone5": 32, "bike": 32, "biking_man": 32, "biking_woman": 32, "bikini": 32, "billed_cap": 32, "biohazard": 32, "biohazard_sign": 32, "bird": 32, "birthdai": [32, 195, 657], "bison": [32, 165, 790, 914, 998], "bj": 32, "bl": 32, "black_cat": 32, "black_circl": 32, "black_flag": 32, "black_heart": 32, "black_jok": 32, "black_large_squar": 32, "black_medium_small_squar": 32, "black_medium_squar": 32, "black_nib": 32, "black_small_squar": 32, "black_square_button": 32, "blond": 32, "haired_man": 32, "haired_man_dark_skin_ton": 32, "haired_man_light_skin_ton": 32, "haired_man_medium_dark_skin_ton": 32, "haired_man_medium_light_skin_ton": 32, "haired_man_medium_skin_ton": 32, "haired_man_tone1": 32, "haired_man_tone2": 32, "haired_man_tone3": 32, "haired_man_tone4": 32, "haired_man_tone5": 32, "haired_woman": 32, "haired_woman_dark_skin_ton": 32, "haired_woman_light_skin_ton": 32, "haired_woman_medium_dark_skin_ton": 32, "haired_woman_medium_light_skin_ton": 32, "haired_woman_medium_skin_ton": 32, "haired_woman_tone1": 32, "haired_woman_tone2": 32, "haired_woman_tone3": 32, "haired_woman_tone4": 32, "haired_woman_tone5": 32, "blond_haired_person": 32, "blond_haired_person_tone1": 32, "blond_haired_person_tone2": 32, "blond_haired_person_tone3": 32, "blond_haired_person_tone4": 32, "blond_haired_person_tone5": 32, "blonde_man": 32, "blonde_woman": 32, "blossom": 32, "blowfish": 32, "blue_book": 32, "blue_car": 32, "blue_circl": 32, "blue_heart": 32, "blue_squar": 32, "blueberri": 32, "blush": 32, "bm": 32, "bn": 32, "bo": [32, 1021], "boar": 32, "boat": 32, "bolivia": 32, "bomb": 32, "bone": 32, "bookmark": [32, 1120], "bookmark_tab": 32, "boom": [32, 695, 712], "boomerang": 32, "boot": [32, 144, 155, 157, 161, 173, 274, 445, 742, 783, 788, 806, 810, 820, 848, 914, 915, 916, 1156], "bosnia_herzegovina": 32, "botswana": 32, "bottle_with_popping_cork": 32, "bouquet": 32, "bouvet_island": 32, "bow": 32, "bow_and_arrow": 32, "bow_tone1": 32, "bow_tone2": 32, "bow_tone3": 32, "bow_tone4": 32, "bow_tone5": 32, "bowing_man": 32, "bowing_woman": 32, "bowl_with_spoon": 32, "bowl": 32, "boxing_glov": 32, "boi": 32, "boy_tone1": 32, "boy_tone2": 32, "boy_tone3": 32, "boy_tone4": 32, "boy_tone5": 32, "bq": 32, "br": [32, 252, 310], "brain": [32, 59, 63], "brazil": 32, "bread": 32, "breast_feed": 32, "breast_feeding_dark_skin_ton": 32, "breast_feeding_light_skin_ton": 32, "breast_feeding_medium_dark_skin_ton": 32, "breast_feeding_medium_light_skin_ton": 32, "breast_feeding_medium_skin_ton": 32, "breast_feeding_tone1": 32, "breast_feeding_tone2": 32, "breast_feeding_tone3": 32, "breast_feeding_tone4": 32, "breast_feeding_tone5": 32, "brick": [32, 153, 166], "bride_with_veil": 32, "bride_with_veil_tone1": 32, "bride_with_veil_tone2": 32, "bride_with_veil_tone3": 32, "bride_with_veil_tone4": 32, "bride_with_veil_tone5": 32, "bridge_at_night": 32, "briefcas": 32, "brief": [32, 443, 870], "british_indian_ocean_territori": 32, "british_virgin_island": 32, "broccoli": 32, "broken_heart": 32, "broom": 32, "brown_circl": 32, "brown_heart": 32, "brown_squar": 32, "brunei": 32, "bt": 32, "bubble_tea": 32, "bucket": [32, 781], "bug": [32, 46, 55, 56, 108, 155, 156, 157, 197, 216, 232, 243, 351, 407, 409, 410, 425, 430, 432, 436, 449, 454, 459, 550, 552, 554, 562, 568, 569, 572, 577, 639, 642, 695, 705, 724, 741, 763, 800, 928, 959, 968, 969, 1001, 1021, 1022, 1036, 1039], "building_construct": 32, "bulb": 32, "bulgaria": 32, "bullettrain_front": 32, "bullettrain_sid": 32, "burkina_faso": 32, "burrito": 32, "burundi": 32, "bu": [32, 82, 117, 201, 226, 242, 249, 251, 252, 267, 270, 274, 284, 288, 310, 316, 322, 467, 481, 496, 510, 526, 527, 763, 781, 806, 870, 906, 908, 913, 914, 915, 944, 950, 1006, 1107, 1165, 1172, 1176, 1178], "business_suit_levit": 32, "busstop": 32, "bust_in_silhouett": 32, "busts_in_silhouett": 32, "butter": 32, "butterfli": 32, "bv": 32, "bw": 32, "bz": 32, "cactu": 32, "cake": 32, "calendar": 32, "calendar_spir": 32, "call_m": 32, "call_me_hand": 32, "call_me_hand_tone1": 32, "call_me_hand_tone2": 32, "call_me_hand_tone3": 32, "call_me_hand_tone4": 32, "call_me_hand_tone5": 32, "call_me_tone1": 32, "call_me_tone2": 32, "call_me_tone3": 32, "call_me_tone4": 32, "call_me_tone5": 32, "cambodia": 32, "camel": 32, "camera": [32, 33, 134, 159, 161, 915], "camera_flash": 32, "camera_with_flash": 32, "cameroon": 32, "camp": 32, "canada": 32, "canary_island": 32, "cancer": 32, "candl": 32, "candi": 32, "canned_food": 32, "cano": 32, "cape_verd": 32, "capital_abcd": 32, "capricorn": 32, "car": [32, 272, 451, 907], "card_box": 32, "card_file_box": 32, "card_index": 32, "card_index_divid": 32, "caribbean_netherland": 32, "carousel_hors": 32, "carpentry_saw": 32, "carrot": 32, "cartwheel": 32, "cartwheel_tone1": 32, "cartwheel_tone2": 32, "cartwheel_tone3": 32, "cartwheel_tone4": 32, "cartwheel_tone5": 32, "cat2": 32, "cat": [32, 156, 160, 194, 206, 260, 269, 270, 272, 290, 291, 327, 328, 427, 451, 526, 763, 768, 773, 790, 810, 826, 837, 838, 840, 841, 850, 852, 854, 882, 889, 897, 898, 900, 901, 903, 906, 907, 914, 915, 916, 917, 941, 943, 944, 948, 972, 978, 981, 1167], "cayman_island": 32, "cd": [32, 62, 140, 157, 158, 160, 161, 164, 165, 169, 182, 183, 216, 226, 246, 254, 259, 261, 328, 342, 347, 452, 524, 527, 587, 783, 785, 810, 811, 834, 836, 837, 838, 841, 847, 855, 860, 862, 870, 894, 907, 914, 915, 923, 936, 985, 986, 998, 999, 1063], "central_african_republ": 32, "ceuta_melilla": 32, "cf": [32, 316, 836, 953], "cg": 32, "ch": 32, "chad": 32, "chain": [32, 147, 153, 164, 174, 236, 253, 429, 815, 963], "chair": [32, 186], "champagn": 32, "champagne_glass": 32, "chart": [32, 200, 215, 224, 237, 251, 254, 287, 293, 1108, 1115], "chart_with_downwards_trend": 32, "chart_with_upwards_trend": 32, "checkered_flag": 32, "chees": 32, "cheese_wedg": 32, "cherri": 32, "cherry_blossom": 32, "chess_pawn": 32, "chestnut": 32, "chicken": 32, "child": [32, 100, 171, 260, 269, 270, 290, 291, 761, 763, 840, 842, 844, 845, 856, 859, 860, 861, 862, 863, 864, 865, 874, 875, 876, 879, 881, 882, 906, 918, 919, 920, 921, 922, 947, 953, 960, 965, 982, 994, 995, 1025, 1133], "child_dark_skin_ton": 32, "child_light_skin_ton": 32, "child_medium_dark_skin_ton": 32, "child_medium_light_skin_ton": 32, "child_medium_skin_ton": 32, "child_tone1": 32, "child_tone2": 32, "child_tone3": 32, "child_tone4": 32, "child_tone5": 32, "children_cross": 32, "chile": 32, "china": 32, "chipmunk": 32, "chocolate_bar": 32, "chopstick": 32, "christmas_island": 32, "christmas_tre": 32, "church": 32, "ci": [32, 1141], "cinema": 32, "circus_t": 32, "city_dusk": 32, "city_sunris": 32, "city_sunset": 32, "cityscap": 32, "ck": 32, "cl": [32, 242, 267, 1024, 1025], "clamp": 32, "clap": 32, "clap_tone1": 32, "clap_tone2": 32, "clap_tone3": 32, "clap_tone4": 32, "clap_tone5": 32, "clapper": 32, "classical_build": 32, "clinking_glass": 32, "clipboard": 32, "clipperton_island": 32, "clock1030": 32, "clock10": 32, "clock1130": 32, "clock11": 32, "clock1230": 32, "clock12": 32, "clock130": 32, "clock1": 32, "clock230": 32, "clock2": 32, "clock330": 32, "clock3": 32, "clock430": 32, "clock4": 32, "clock530": 32, "clock5": 32, "clock630": 32, "clock6": 32, "clock730": 32, "clock7": 32, "clock830": 32, "clock8": 32, "clock930": 32, "clock9": 32, "clock": [32, 128, 229, 230, 438, 914], "closed_book": 32, "closed_lock_with_kei": 32, "closed_umbrella": 32, "cloud": [32, 102, 161, 206, 230, 341, 342, 345, 670, 672, 923, 1112, 1113, 1136], "cloud_lightn": 32, "cloud_rain": 32, "cloud_snow": 32, "cloud_tornado": 32, "cloud_with_lightn": 32, "cloud_with_lightning_and_rain": 32, "cloud_with_rain": 32, "cloud_with_snow": 32, "cloud_with_tornado": 32, "clown": 32, "clown_fac": 32, "club": [32, 38], "cm": 32, "cn": [32, 164], "coat": 32, "cockroach": 32, "cocktail": 32, "coconut": [32, 278], "cocos_island": 32, "coffe": [32, 157, 642, 914], "coffin": 32, "coin": 32, "cold_fac": 32, "cold_sweat": 32, "colombia": 32, "comet": 32, "comoro": 32, "compass": 32, "compress": [32, 114, 155, 169, 260, 269, 270, 290, 763, 834, 840, 906, 994, 995, 996, 999], "computer_mous": 32, "confetti_bal": 32, "confound": 32, "confus": [32, 154, 158, 186, 215, 384, 392, 438, 585, 595, 671, 682, 1050, 1134], "congo": 32, "congo_brazzavil": 32, "congo_kinshasa": 32, "congratul": 32, "construct": [32, 186, 192, 273, 276, 387, 400, 410, 439, 449, 553, 604, 623, 624, 680, 728, 1022, 1029, 1046, 1057], "construction_sit": 32, "construction_work": 32, "construction_worker_man": 32, "construction_worker_tone1": 32, "construction_worker_tone2": 32, "construction_worker_tone3": 32, "construction_worker_tone4": 32, "construction_worker_tone5": 32, "construction_worker_woman": 32, "control_knob": 32, "convenience_stor": 32, "cook": [32, 270], "cook_dark_skin_ton": 32, "cook_island": 32, "cook_light_skin_ton": 32, "cook_medium_dark_skin_ton": 32, "cook_medium_light_skin_ton": 32, "cook_medium_skin_ton": 32, "cook_tone1": 32, "cook_tone2": 32, "cook_tone3": 32, "cook_tone4": 32, "cook_tone5": 32, "cooki": [32, 792, 806], "cool": [32, 60, 66, 140, 155, 156, 159, 161, 169, 174, 175, 186, 187, 190, 205, 270, 283, 360, 445, 451, 479, 488, 625, 667, 668, 684, 687, 706, 716, 719, 741, 810, 866, 916, 1001, 1005, 1008, 1025, 1044, 1058, 1108, 1115, 1120, 1161], "cop": 32, "cop_tone1": 32, "cop_tone2": 32, "cop_tone3": 32, "cop_tone4": 32, "cop_tone5": 32, "copyright": [32, 36, 165, 206, 223, 229, 239, 242, 267, 335, 339, 577, 726, 1034], "corn": 32, "costa_rica": 32, "cote_divoir": 32, "couch": 32, "couch_and_lamp": 32, "coupl": [32, 43, 134, 153, 154, 155, 156, 161, 174, 186, 190, 363, 400, 434, 439, 715, 903, 938, 957], "couple_mm": 32, "couple_with_heart": 32, "couple_with_heart_dark_skin_ton": 32, "couple_with_heart_light_skin_ton": 32, "couple_with_heart_man_man": 32, "couple_with_heart_man_man_dark_skin_ton": 32, "couple_with_heart_man_man_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_man_man_dark_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_man_man_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_man_man_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_man_man_light_skin_ton": 32, "couple_with_heart_man_man_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_man_man_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_man_man_light_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_man_man_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_man_man_medium_dark_skin_ton": 32, "couple_with_heart_man_man_medium_dark_skin_tone_dark_skin_ton": 32, "couple_with_heart_man_man_medium_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_man_man_medium_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_man_man_medium_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_man_man_medium_light_skin_ton": 32, "couple_with_heart_man_man_medium_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_man_man_medium_light_skin_tone_light_skin_ton": 32, "couple_with_heart_man_man_medium_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_man_man_medium_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_man_man_medium_skin_ton": 32, "couple_with_heart_man_man_medium_skin_tone_dark_skin_ton": 32, "couple_with_heart_man_man_medium_skin_tone_light_skin_ton": 32, "couple_with_heart_man_man_medium_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_man_man_medium_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_man_man_tone1": 32, "couple_with_heart_man_man_tone1_tone2": 32, "couple_with_heart_man_man_tone1_tone3": 32, "couple_with_heart_man_man_tone1_tone4": 32, "couple_with_heart_man_man_tone1_tone5": 32, "couple_with_heart_man_man_tone2": 32, "couple_with_heart_man_man_tone2_tone1": 32, "couple_with_heart_man_man_tone2_tone3": 32, "couple_with_heart_man_man_tone2_tone4": 32, "couple_with_heart_man_man_tone2_tone5": 32, "couple_with_heart_man_man_tone3": 32, "couple_with_heart_man_man_tone3_tone1": 32, "couple_with_heart_man_man_tone3_tone2": 32, "couple_with_heart_man_man_tone3_tone4": 32, "couple_with_heart_man_man_tone3_tone5": 32, "couple_with_heart_man_man_tone4": 32, "couple_with_heart_man_man_tone4_tone1": 32, "couple_with_heart_man_man_tone4_tone2": 32, "couple_with_heart_man_man_tone4_tone3": 32, "couple_with_heart_man_man_tone4_tone5": 32, "couple_with_heart_man_man_tone5": 32, "couple_with_heart_man_man_tone5_tone1": 32, "couple_with_heart_man_man_tone5_tone2": 32, "couple_with_heart_man_man_tone5_tone3": 32, "couple_with_heart_man_man_tone5_tone4": 32, "couple_with_heart_medium_dark_skin_ton": 32, "couple_with_heart_medium_light_skin_ton": 32, "couple_with_heart_medium_skin_ton": 32, "couple_with_heart_mm": 32, "couple_with_heart_person_person_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_person_person_dark_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_person_person_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_person_person_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_person_person_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_person_person_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_person_person_light_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_person_person_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_person_person_medium_dark_skin_tone_dark_skin_ton": 32, "couple_with_heart_person_person_medium_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_person_person_medium_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_person_person_medium_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_person_person_medium_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_person_person_medium_light_skin_tone_light_skin_ton": 32, "couple_with_heart_person_person_medium_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_person_person_medium_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_person_person_medium_skin_tone_dark_skin_ton": 32, "couple_with_heart_person_person_medium_skin_tone_light_skin_ton": 32, "couple_with_heart_person_person_medium_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_person_person_medium_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_person_person_tone1_tone2": 32, "couple_with_heart_person_person_tone1_tone3": 32, "couple_with_heart_person_person_tone1_tone4": 32, "couple_with_heart_person_person_tone1_tone5": 32, "couple_with_heart_person_person_tone2_tone1": 32, "couple_with_heart_person_person_tone2_tone3": 32, "couple_with_heart_person_person_tone2_tone4": 32, "couple_with_heart_person_person_tone2_tone5": 32, "couple_with_heart_person_person_tone3_tone1": 32, "couple_with_heart_person_person_tone3_tone2": 32, "couple_with_heart_person_person_tone3_tone4": 32, "couple_with_heart_person_person_tone3_tone5": 32, "couple_with_heart_person_person_tone4_tone1": 32, "couple_with_heart_person_person_tone4_tone2": 32, "couple_with_heart_person_person_tone4_tone3": 32, "couple_with_heart_person_person_tone4_tone5": 32, "couple_with_heart_person_person_tone5_tone1": 32, "couple_with_heart_person_person_tone5_tone2": 32, "couple_with_heart_person_person_tone5_tone3": 32, "couple_with_heart_person_person_tone5_tone4": 32, "couple_with_heart_tone1": 32, "couple_with_heart_tone2": 32, "couple_with_heart_tone3": 32, "couple_with_heart_tone4": 32, "couple_with_heart_tone5": 32, "couple_with_heart_woman_man": 32, "couple_with_heart_woman_man_dark_skin_ton": 32, "couple_with_heart_woman_man_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_man_dark_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_man_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_man_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_man_light_skin_ton": 32, "couple_with_heart_woman_man_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_man_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_man_light_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_man_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_man_medium_dark_skin_ton": 32, "couple_with_heart_woman_man_medium_dark_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_man_medium_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_man_medium_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_man_medium_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_man_medium_light_skin_ton": 32, "couple_with_heart_woman_man_medium_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_man_medium_light_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_man_medium_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_man_medium_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_man_medium_skin_ton": 32, "couple_with_heart_woman_man_medium_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_man_medium_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_man_medium_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_man_medium_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_man_tone1": 32, "couple_with_heart_woman_man_tone1_tone2": 32, "couple_with_heart_woman_man_tone1_tone3": 32, "couple_with_heart_woman_man_tone1_tone4": 32, "couple_with_heart_woman_man_tone1_tone5": 32, "couple_with_heart_woman_man_tone2": 32, "couple_with_heart_woman_man_tone2_tone1": 32, "couple_with_heart_woman_man_tone2_tone3": 32, "couple_with_heart_woman_man_tone2_tone4": 32, "couple_with_heart_woman_man_tone2_tone5": 32, "couple_with_heart_woman_man_tone3": 32, "couple_with_heart_woman_man_tone3_tone1": 32, "couple_with_heart_woman_man_tone3_tone2": 32, "couple_with_heart_woman_man_tone3_tone4": 32, "couple_with_heart_woman_man_tone3_tone5": 32, "couple_with_heart_woman_man_tone4": 32, "couple_with_heart_woman_man_tone4_tone1": 32, "couple_with_heart_woman_man_tone4_tone2": 32, "couple_with_heart_woman_man_tone4_tone3": 32, "couple_with_heart_woman_man_tone4_tone5": 32, "couple_with_heart_woman_man_tone5": 32, "couple_with_heart_woman_man_tone5_tone1": 32, "couple_with_heart_woman_man_tone5_tone2": 32, "couple_with_heart_woman_man_tone5_tone3": 32, "couple_with_heart_woman_man_tone5_tone4": 32, "couple_with_heart_woman_woman": 32, "couple_with_heart_woman_woman_dark_skin_ton": 32, "couple_with_heart_woman_woman_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_woman_dark_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_woman_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_woman_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_woman_light_skin_ton": 32, "couple_with_heart_woman_woman_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_woman_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_woman_light_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_woman_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_woman_medium_dark_skin_ton": 32, "couple_with_heart_woman_woman_medium_dark_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_woman_medium_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_woman_medium_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_woman_medium_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_woman_medium_light_skin_ton": 32, "couple_with_heart_woman_woman_medium_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_woman_medium_light_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_woman_medium_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_woman_medium_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_woman_medium_skin_ton": 32, "couple_with_heart_woman_woman_medium_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_woman_medium_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_woman_medium_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_woman_medium_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_woman_tone1": 32, "couple_with_heart_woman_woman_tone1_tone2": 32, "couple_with_heart_woman_woman_tone1_tone3": 32, "couple_with_heart_woman_woman_tone1_tone4": 32, "couple_with_heart_woman_woman_tone1_tone5": 32, "couple_with_heart_woman_woman_tone2": 32, "couple_with_heart_woman_woman_tone2_tone1": 32, "couple_with_heart_woman_woman_tone2_tone3": 32, "couple_with_heart_woman_woman_tone2_tone4": 32, "couple_with_heart_woman_woman_tone2_tone5": 32, "couple_with_heart_woman_woman_tone3": 32, "couple_with_heart_woman_woman_tone3_tone1": 32, "couple_with_heart_woman_woman_tone3_tone2": 32, "couple_with_heart_woman_woman_tone3_tone4": 32, "couple_with_heart_woman_woman_tone3_tone5": 32, "couple_with_heart_woman_woman_tone4": 32, "couple_with_heart_woman_woman_tone4_tone1": 32, "couple_with_heart_woman_woman_tone4_tone2": 32, "couple_with_heart_woman_woman_tone4_tone3": 32, "couple_with_heart_woman_woman_tone4_tone5": 32, "couple_with_heart_woman_woman_tone5": 32, "couple_with_heart_woman_woman_tone5_tone1": 32, "couple_with_heart_woman_woman_tone5_tone2": 32, "couple_with_heart_woman_woman_tone5_tone3": 32, "couple_with_heart_woman_woman_tone5_tone4": 32, "couple_with_heart_ww": 32, "couple_ww": 32, "couplekiss": 32, "couplekiss_man_man": 32, "couplekiss_man_woman": 32, "couplekiss_mm": 32, "couplekiss_woman_woman": 32, "couplekiss_ww": 32, "cow2": 32, "cow": 32, "cowboi": 32, "cowboy_hat_fac": 32, "cp": [32, 100, 116, 155, 157, 160, 194, 196, 260, 269, 270, 290, 291, 342, 347, 763, 810, 837, 838, 839, 840, 841, 870, 874, 875, 877, 878, 881, 882, 884, 890, 906, 914, 926, 937, 998, 1167], "cr": [32, 1058], "crab": 32, "crayon": 32, "credit_card": 32, "crescent_moon": 32, "cricket": 32, "cricket_bat_bal": 32, "cricket_gam": 32, "croatia": 32, "crocodil": 32, "croissant": 32, "cross": [32, 38, 66, 104, 105, 107, 124, 153, 166, 190, 284, 296, 297, 312, 313, 343, 344, 345, 473, 487, 515, 516, 517, 518, 519, 520, 521, 522, 525, 526, 527, 567, 740, 762, 763, 840, 843, 844, 906, 929, 935, 937, 944, 945, 947, 961, 964, 967, 969, 986, 990, 991, 992, 993, 995, 998, 1163], "crossed_fing": 32, "crossed_flag": 32, "crossed_sword": 32, "crown": 32, "cruise_ship": 32, "cry": [32, 154], "crying_cat_fac": 32, "crystal_bal": 32, "cu": 32, "cuba": 32, "cucumb": 32, "cup_with_straw": 32, "cupcak": 32, "cupid": 32, "curacao": 32, "curling_ston": 32, "curly_hair": 32, "curly_loop": 32, "currency_exchang": 32, "curri": [32, 215], "custard": 32, "cut_of_meat": 32, "cw": 32, "cx": 32, "cy": 32, "cyclon": 32, "cypru": 32, "cz": 32, "czech_republ": 32, "dagger": [32, 38], "dagger_knif": 32, "dancer": 32, "dancer_tone1": 32, "dancer_tone2": 32, "dancer_tone3": 32, "dancer_tone4": 32, "dancer_tone5": 32, "dancing_men": 32, "dancing_women": 32, "dango": 32, "dark_sunglass": 32, "dart": 32, "dash": [32, 34, 35, 38, 611], "date": [32, 114, 151, 157, 165, 169, 186, 192, 222, 254, 270, 272, 315, 355, 356, 451, 811, 1003, 1097, 1099, 1103, 1105, 1112, 1117], "deaf_man": 32, "deaf_man_dark_skin_ton": 32, "deaf_man_light_skin_ton": 32, "deaf_man_medium_dark_skin_ton": 32, "deaf_man_medium_light_skin_ton": 32, "deaf_man_medium_skin_ton": 32, "deaf_man_tone1": 32, "deaf_man_tone2": 32, "deaf_man_tone3": 32, "deaf_man_tone4": 32, "deaf_man_tone5": 32, "deaf_person": 32, "deaf_person_dark_skin_ton": 32, "deaf_person_light_skin_ton": 32, "deaf_person_medium_dark_skin_ton": 32, "deaf_person_medium_light_skin_ton": 32, "deaf_person_medium_skin_ton": 32, "deaf_person_tone1": 32, "deaf_person_tone2": 32, "deaf_person_tone3": 32, "deaf_person_tone4": 32, "deaf_person_tone5": 32, "deaf_woman": 32, "deaf_woman_dark_skin_ton": 32, "deaf_woman_light_skin_ton": 32, "deaf_woman_medium_dark_skin_ton": 32, "deaf_woman_medium_light_skin_ton": 32, "deaf_woman_medium_skin_ton": 32, "deaf_woman_tone1": 32, "deaf_woman_tone2": 32, "deaf_woman_tone3": 32, "deaf_woman_tone4": 32, "deaf_woman_tone5": 32, "deciduous_tre": 32, "deer": 32, "denmark": 32, "department_stor": 32, "derelict_hous": 32, "derelict_house_build": 32, "desert": 32, "desert_island": 32, "desktop": [32, 142, 154, 159, 215, 284, 892, 969, 1165, 1172], "desktop_comput": 32, "detective_tone1": 32, "detective_tone2": 32, "detective_tone3": 32, "detective_tone4": 32, "detective_tone5": 32, "dg": 32, "diamond_shape_with_a_dot_insid": 32, "diamond": [32, 34, 38, 214, 227], "diego_garcia": 32, "digit_eight": 32, "digit_f": 32, "digit_four": 32, "digit_nin": 32, "digit_on": 32, "digit_seven": 32, "digit_six": 32, "digit_thre": 32, "digit_two": 32, "digit_zero": 32, "disappoint": 32, "disappointed_reliev": 32, "disguised_fac": 32, "divid": [32, 35, 36, 38, 246, 1115], "diving_mask": 32, "diya_lamp": 32, "dizzi": 32, "dizzy_fac": 32, "dj": 32, "djibouti": 32, "dk": 32, "dm": 32, "dna": 32, "do_not_litt": 32, "dodo": 32, "dog2": 32, "dog": [32, 427], "dollar": [32, 36], "doll": 32, "dolphin": 32, "dominica": 32, "dominican_republ": 32, "door": [32, 232, 545, 800, 1018], "double_vertical_bar": 32, "doughnut": 32, "dove": 32, "dove_of_peac": 32, "dragon": [32, 98, 216, 232, 279, 281, 319, 545, 569, 570, 575, 664, 676, 678, 707, 712, 723, 727, 732, 740, 760, 762, 763, 981], "dragon_fac": 32, "dress": [32, 151], "dromedary_camel": 32, "drool": 32, "drooling_fac": 32, "drop_of_blood": 32, "droplet": 32, "drum": 32, "drum_with_drumstick": 32, "dumpl": 32, "dvd": 32, "dz": 32, "mail": [32, 151, 226, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322, 901, 1121, 1155], "ea": [32, 164], "eagl": [32, 226, 1065], "ear": 32, "ear_of_ric": 32, "ear_tone1": 32, "ear_tone2": 32, "ear_tone3": 32, "ear_tone4": 32, "ear_tone5": 32, "ear_with_hearing_aid": 32, "ear_with_hearing_aid_dark_skin_ton": 32, "ear_with_hearing_aid_light_skin_ton": 32, "ear_with_hearing_aid_medium_dark_skin_ton": 32, "ear_with_hearing_aid_medium_light_skin_ton": 32, "ear_with_hearing_aid_medium_skin_ton": 32, "ear_with_hearing_aid_tone1": 32, "ear_with_hearing_aid_tone2": 32, "ear_with_hearing_aid_tone3": 32, "ear_with_hearing_aid_tone4": 32, "ear_with_hearing_aid_tone5": 32, "earth_africa": 32, "earth_america": 32, "earth_asia": 32, "ec": [32, 98, 164, 206, 339, 342, 347, 350, 359, 763, 839, 840, 870, 906], "ecuador": 32, "ee": [32, 164], "eg": [32, 35, 121], "egg": [32, 62, 1052], "eggplant": 32, "egypt": 32, "eight": [32, 125, 156, 174, 187, 197, 205, 234, 236, 322, 342, 916, 1121], "eight_pointed_black_star": 32, "eight_spoked_asterisk": 32, "eject": 32, "eject_symbol": 32, "el_salvador": 32, "electric_plug": 32, "eleph": 32, "elev": 32, "elf": [32, 162, 165, 197, 213, 223, 457, 553, 953, 984, 985, 1001, 1035, 1175], "elf_dark_skin_ton": 32, "elf_light_skin_ton": 32, "elf_medium_dark_skin_ton": 32, "elf_medium_light_skin_ton": 32, "elf_medium_skin_ton": 32, "elf_tone1": 32, "elf_tone2": 32, "elf_tone3": 32, "elf_tone4": 32, "elf_tone5": 32, "england": 32, "envelop": [32, 810], "envelope_with_arrow": 32, "equatorial_guinea": 32, "er": [32, 163, 172, 187, 189, 197, 234, 1156, 1157, 1158], "eritrea": 32, "estonia": 32, "et": [32, 98, 577, 726, 930, 985, 986, 1027], "ethiopia": 32, "euro": [32, 493, 494, 495, 507, 508, 509], "european_castl": 32, "european_post_offic": 32, "european_union": 32, "evergreen_tre": 32, "exclam": [32, 36], "expecting_woman": 32, "expecting_woman_tone1": 32, "expecting_woman_tone2": 32, "expecting_woman_tone3": 32, "expecting_woman_tone4": 32, "expecting_woman_tone5": 32, "exploding_head": 32, "expressionless": 32, "eye_in_speech_bubbl": 32, "eye_speech_bubbl": 32, "eyeglass": 32, "face_exh": 32, "face_in_cloud": 32, "face_palm": 32, "face_palm_tone1": 32, "face_palm_tone2": 32, "face_palm_tone3": 32, "face_palm_tone4": 32, "face_palm_tone5": 32, "face_vomit": 32, "face_with_cowboy_hat": 32, "face_with_hand_over_mouth": 32, "face_with_head_bandag": 32, "face_with_monocl": 32, "face_with_rolling_ey": 32, "face_with_spiral_ey": 32, "face_with_symbols_over_mouth": 32, "face_with_thermomet": 32, "facepalm": 32, "facepalm_tone1": 32, "facepalm_tone2": 32, "facepalm_tone3": 32, "facepalm_tone4": 32, "facepalm_tone5": 32, "factori": [32, 107, 214, 227, 262, 281, 351, 466, 473, 487, 501, 515, 567, 763, 936, 1164], "factory_work": 32, "factory_worker_dark_skin_ton": 32, "factory_worker_light_skin_ton": 32, "factory_worker_medium_dark_skin_ton": 32, "factory_worker_medium_light_skin_ton": 32, "factory_worker_medium_skin_ton": 32, "factory_worker_tone1": 32, "factory_worker_tone2": 32, "factory_worker_tone3": 32, "factory_worker_tone4": 32, "factory_worker_tone5": 32, "fairi": 32, "fairy_dark_skin_ton": 32, "fairy_light_skin_ton": 32, "fairy_medium_dark_skin_ton": 32, "fairy_medium_light_skin_ton": 32, "fairy_medium_skin_ton": 32, "fairy_tone1": 32, "fairy_tone2": 32, "fairy_tone3": 32, "fairy_tone4": 32, "fairy_tone5": 32, "falafel": 32, "falkland_island": 32, "fallen_leaf": 32, "famili": [32, 178, 910, 916], "family_man_boi": 32, "family_man_boy_boi": 32, "family_man_girl": 32, "family_man_girl_boi": 32, "family_man_girl_girl": 32, "family_man_man_boi": 32, "family_man_man_boy_boi": 32, "family_man_man_girl": 32, "family_man_man_girl_boi": 32, "family_man_man_girl_girl": 32, "family_man_woman_boi": 32, "family_man_woman_boy_boi": 32, "family_man_woman_girl": 32, "family_man_woman_girl_boi": 32, "family_man_woman_girl_girl": 32, "family_mmb": 32, "family_mmbb": 32, "family_mmg": 32, "family_mmgb": 32, "family_mmgg": 32, "family_mwbb": 32, "family_mwg": 32, "family_mwgb": 32, "family_mwgg": 32, "family_woman_boi": 32, "family_woman_boy_boi": 32, "family_woman_girl": 32, "family_woman_girl_boi": 32, "family_woman_girl_girl": 32, "family_woman_woman_boi": 32, "family_woman_woman_boy_boi": 32, "family_woman_woman_girl": 32, "family_woman_woman_girl_boi": 32, "family_woman_woman_girl_girl": 32, "family_wwb": 32, "family_wwbb": 32, "family_wwg": 32, "family_wwgb": 32, "family_wwgg": 32, "farmer": 32, "farmer_dark_skin_ton": 32, "farmer_light_skin_ton": 32, "farmer_medium_dark_skin_ton": 32, "farmer_medium_light_skin_ton": 32, "farmer_medium_skin_ton": 32, "farmer_tone1": 32, "farmer_tone2": 32, "farmer_tone3": 32, "farmer_tone4": 32, "farmer_tone5": 32, "faroe_island": 32, "fast_forward": 32, "fax": 32, "fear": [32, 272, 944], "feather": 32, "feet": 32, "female_detect": 32, "female_sign": 32, "fencer": 32, "fenc": 32, "ferris_wheel": 32, "ferri": 32, "fi": [32, 940, 948, 963], "field_hockei": 32, "fiji": 32, "file_cabinet": 32, "file_fold": 32, "film_fram": 32, "film_projector": 32, "film_strip": 32, "fingers_cross": 32, "fingers_crossed_tone1": 32, "fingers_crossed_tone2": 32, "fingers_crossed_tone3": 32, "fingers_crossed_tone4": 32, "fingers_crossed_tone5": 32, "finland": 32, "fire": [32, 43, 64, 429], "fire_engin": 32, "fire_extinguish": 32, "firecrack": 32, "firefight": 32, "firefighter_dark_skin_ton": 32, "firefighter_light_skin_ton": 32, "firefighter_medium_dark_skin_ton": 32, "firefighter_medium_light_skin_ton": 32, "firefighter_medium_skin_ton": 32, "firefighter_tone1": 32, "firefighter_tone2": 32, "firefighter_tone3": 32, "firefighter_tone4": 32, "firefighter_tone5": 32, "firework": 32, "first_plac": 32, "first_place_med": 32, "first_quarter_moon": 32, "first_quarter_moon_with_fac": 32, "fish": [32, 34, 1143], "fish_cak": 32, "fishing_pole_and_fish": 32, "fist": 32, "fist_left": 32, "fist_oncom": 32, "fist_rais": 32, "fist_right": 32, "fist_tone1": 32, "fist_tone2": 32, "fist_tone3": 32, "fist_tone4": 32, "fist_tone5": 32, "five": [32, 36, 64, 113, 154, 174, 187, 197, 205, 226, 236, 242, 252, 267, 288, 306, 310, 318, 322, 342, 360, 1065, 1107], "fj": 32, "fk": 32, "flag_ac": 32, "flag_ad": 32, "flag_a": 32, "flag_af": 32, "flag_ag": 32, "flag_ai": 32, "flag_al": 32, "flag_am": 32, "flag_ao": 32, "flag_aq": 32, "flag_ar": 32, "flag_at": 32, "flag_au": 32, "flag_aw": 32, "flag_ax": 32, "flag_az": 32, "flag_ba": 32, "flag_bb": 32, "flag_bd": 32, "flag_b": 32, "flag_bf": 32, "flag_bg": 32, "flag_bh": 32, "flag_bi": 32, "flag_bj": 32, "flag_bl": 32, "flag_black": 32, "flag_bm": 32, "flag_bn": 32, "flag_bo": 32, "flag_bq": 32, "flag_br": 32, "flag_bt": 32, "flag_bv": 32, "flag_bw": 32, "flag_bz": 32, "flag_ca": 32, "flag_cc": 32, "flag_cd": 32, "flag_cf": 32, "flag_cg": 32, "flag_ch": 32, "flag_ci": 32, "flag_ck": 32, "flag_cl": 32, "flag_cm": 32, "flag_cn": 32, "flag_co": 32, "flag_cp": 32, "flag_cr": 32, "flag_cu": 32, "flag_cv": 32, "flag_cw": 32, "flag_cx": 32, "flag_cz": 32, "flag_d": 32, "flag_dg": 32, "flag_dj": 32, "flag_dk": 32, "flag_dm": 32, "flag_do": 32, "flag_dz": 32, "flag_ea": 32, "flag_ec": 32, "flag_e": 32, "flag_eg": 32, "flag_eh": 32, "flag_er": 32, "flag_": 32, "flag_et": 32, "flag_eu": 32, "flag_fi": 32, "flag_fj": 32, "flag_fk": 32, "flag_fm": 32, "flag_fo": 32, "flag_fr": 32, "flag_ga": 32, "flag_gb": 32, "flag_gd": 32, "flag_g": 32, "flag_gf": 32, "flag_gg": 32, "flag_gh": 32, "flag_gi": 32, "flag_gl": 32, "flag_gm": 32, "flag_gn": 32, "flag_gp": 32, "flag_gq": 32, "flag_gr": 32, "flag_gt": 32, "flag_gu": 32, "flag_gw": 32, "flag_hk": 32, "flag_hm": 32, "flag_hn": 32, "flag_hr": 32, "flag_ht": 32, "flag_hu": 32, "flag_ic": 32, "flag_id": 32, "flag_i": 32, "flag_il": 32, "flag_im": 32, "flag_in": 32, "flag_io": 32, "flag_iq": 32, "flag_ir": 32, "flag_it": 32, "flag_j": 32, "flag_jm": 32, "flag_jo": 32, "flag_jp": 32, "flag_k": 32, "flag_kg": 32, "flag_kh": 32, "flag_ki": 32, "flag_km": 32, "flag_kn": 32, "flag_kp": 32, "flag_kr": 32, "flag_kw": 32, "flag_kz": 32, "flag_la": 32, "flag_lb": 32, "flag_lc": 32, "flag_li": 32, "flag_lk": 32, "flag_lr": 32, "flag_l": 32, "flag_lt": 32, "flag_lu": 32, "flag_lv": 32, "flag_ma": 32, "flag_mc": 32, "flag_md": 32, "flag_m": 32, "flag_mf": 32, "flag_mg": 32, "flag_mh": 32, "flag_mk": 32, "flag_ml": 32, "flag_mm": 32, "flag_mn": 32, "flag_mo": 32, "flag_mp": 32, "flag_mq": 32, "flag_mr": 32, "flag_mt": 32, "flag_mu": 32, "flag_mv": 32, "flag_mw": 32, "flag_mx": 32, "flag_mi": 32, "flag_mz": 32, "flag_na": 32, "flag_nc": 32, "flag_n": 32, "flag_nf": 32, "flag_ng": 32, "flag_ni": 32, "flag_nl": 32, "flag_no": 32, "flag_np": 32, "flag_nr": 32, "flag_nu": 32, "flag_nz": 32, "flag_om": 32, "flag_pa": 32, "flag_p": 32, "flag_pf": 32, "flag_pg": 32, "flag_ph": 32, "flag_pk": 32, "flag_pl": 32, "flag_pm": 32, "flag_pn": 32, "flag_pr": 32, "flag_pt": 32, "flag_pw": 32, "flag_pi": 32, "flag_qa": 32, "flag_r": 32, "flag_ro": 32, "flag_ru": 32, "flag_rw": 32, "flag_sa": 32, "flag_sb": 32, "flag_sc": 32, "flag_sd": 32, "flag_s": 32, "flag_sg": 32, "flag_sh": 32, "flag_si": 32, "flag_sj": 32, "flag_sk": 32, "flag_sl": 32, "flag_sm": 32, "flag_sn": 32, "flag_so": 32, "flag_sr": 32, "flag_ss": 32, "flag_st": 32, "flag_sv": 32, "flag_sx": 32, "flag_sz": 32, "flag_ta": 32, "flag_tc": 32, "flag_td": 32, "flag_tf": 32, "flag_tg": 32, "flag_th": 32, "flag_tj": 32, "flag_tk": 32, "flag_tl": 32, "flag_tm": 32, "flag_tn": 32, "flag_to": 32, "flag_tr": 32, "flag_tt": 32, "flag_tv": 32, "flag_tw": 32, "flag_tz": 32, "flag_ua": 32, "flag_ug": 32, "flag_um": 32, "flag_u": 32, "flag_ui": 32, "flag_uz": 32, "flag_va": 32, "flag_vc": 32, "flag_v": 32, "flag_vg": 32, "flag_vi": 32, "flag_vn": 32, "flag_vu": 32, "flag_wf": 32, "flag_whit": 32, "flag_w": 32, "flag_xk": 32, "flag_y": 32, "flag_yt": 32, "flag_za": 32, "flag_zm": 32, "flag_zw": 32, "flag": [32, 48, 154, 156, 171, 182, 193, 223, 229, 232, 236, 239, 242, 267, 270, 281, 283, 297, 313, 335, 454, 455, 456, 461, 464, 650, 664, 741, 763, 769, 778, 792, 815, 818, 820, 908, 910, 939, 940, 941, 943, 957, 978, 982, 1043], "flame": [32, 157], "flamingo": 32, "flan": 32, "flashlight": 32, "flatbread": 32, "fleur": 32, "li": [32, 150, 246, 603], "fleur_de_li": 32, "flight_arriv": 32, "flight_departur": 32, "floppy_disk": 32, "flower_playing_card": 32, "fly": [32, 836, 907], "flying_disc": 32, "flying_sauc": 32, "fm": 32, "fo": 32, "fog": 32, "foggi": 32, "fondu": 32, "foot": [32, 70, 403, 872], "foot_dark_skin_ton": 32, "foot_light_skin_ton": 32, "foot_medium_dark_skin_ton": 32, "foot_medium_light_skin_ton": 32, "foot_medium_skin_ton": 32, "foot_tone1": 32, "foot_tone2": 32, "foot_tone3": 32, "foot_tone4": 32, "foot_tone5": 32, "footbal": 32, "footprint": [32, 186, 1032], "fork_and_knif": 32, "fork_and_knife_with_pl": 32, "fork_knife_pl": 32, "fortune_cooki": 32, "fountain": 32, "fountain_pen": 32, "four": [32, 35, 66, 153, 158, 174, 186, 187, 190, 197, 204, 205, 213, 229, 234, 236, 246, 249, 252, 263, 267, 270, 284, 287, 288, 294, 309, 310, 316, 322, 342, 810, 876, 1046, 1054, 1107, 1108, 1116, 1141, 1164], "four_leaf_clov": 32, "fox": [32, 427], "fox_fac": 32, "fr": [32, 165], "frame_photo": 32, "frame_with_pictur": 32, "framed_pictur": 32, "franc": 32, "french_bread": 32, "french_guiana": 32, "french_polynesia": 32, "french_southern_territori": 32, "fried_egg": 32, "fried_shrimp": 32, "fri": 32, "frog": 32, "frowning2": 32, "frown": [32, 35, 70, 1161], "frowning_fac": 32, "frowning_man": 32, "frowning_woman": 32, "fuelpump": 32, "full_moon": 32, "full_moon_with_fac": 32, "funeral_urn": 32, "ga": [32, 322], "gabon": 32, "gambia": 32, "game_di": 32, "garlic": 32, "gay_pride_flag": 32, "gb": [32, 938], "gd": 32, "ge": [32, 35], "gear": 32, "gem": 32, "gemini": 32, "geni": 32, "georgia": 32, "germani": [32, 154, 155, 360], "gf": 32, "gg": [32, 35, 38], "gh": [32, 150, 1130], "ghana": 32, "ghost": 32, "gi": [32, 150, 237], "gibraltar": 32, "gift": [32, 190, 221], "gift_heart": 32, "giraff": 32, "girl": 32, "girl_tone1": 32, "girl_tone2": 32, "girl_tone3": 32, "girl_tone4": 32, "girl_tone5": 32, "gl": [32, 35], "glass_of_milk": 32, "globe_with_meridian": 32, "glove": 32, "gm": 32, "gn": 32, "goal": [32, 42, 69, 154, 273, 276, 327, 451, 461, 730, 749, 837, 838, 1000, 1009], "goal_net": 32, "goat": 32, "goggl": 32, "golf": 32, "golfer": 32, "golfing_man": 32, "golfing_woman": 32, "gorilla": 32, "gp": 32, "gq": 32, "gr": [32, 294, 310, 1121], "grandma": 32, "grandma_tone1": 32, "grandma_tone2": 32, "grandma_tone3": 32, "grandma_tone4": 32, "grandma_tone5": 32, "grape": 32, "great_britain": 32, "greec": 32, "green_appl": 32, "green_book": 32, "green_circl": 32, "green_heart": 32, "green_salad": 32, "green_squar": 32, "greenland": 32, "grenada": 32, "grey_exclam": 32, "grey_quest": 32, "grin": 32, "gu": 32, "guadeloup": 32, "guam": 32, "guard": [32, 216, 232, 459, 738, 739, 741], "guard_tone1": 32, "guard_tone2": 32, "guard_tone3": 32, "guard_tone4": 32, "guard_tone5": 32, "guardsman": 32, "guardsman_tone1": 32, "guardsman_tone2": 32, "guardsman_tone3": 32, "guardsman_tone4": 32, "guardsman_tone5": 32, "guardswoman": 32, "guatemala": 32, "guernsei": 32, "guide_dog": 32, "guinea": 32, "guinea_bissau": 32, "guitar": 32, "gun": 32, "guyana": 32, "gw": 32, "gy": 32, "haircut": 32, "haircut_man": 32, "haircut_tone1": 32, "haircut_tone2": 32, "haircut_tone3": 32, "haircut_tone4": 32, "haircut_tone5": 32, "haircut_woman": 32, "haiti": 32, "hamburg": 32, "hammer": [32, 154, 230, 270, 790, 800], "hammer_and_pick": 32, "hammer_and_wrench": 32, "hammer_pick": 32, "hamster": 32, "hand": [32, 150, 162, 169, 174, 181, 190, 205, 216, 232, 251, 278, 350, 377, 388, 407, 409, 472, 491, 559, 570, 586, 588, 589, 715, 854, 870, 915, 916, 932, 960, 994, 1012, 1027, 1034, 1161, 1167, 1179], "hand_splai": 32, "hand_splayed_tone1": 32, "hand_splayed_tone2": 32, "hand_splayed_tone3": 32, "hand_splayed_tone4": 32, "hand_splayed_tone5": 32, "hand_with_index_and_middle_finger_cross": 32, "hand_with_index_and_middle_fingers_crossed_tone1": 32, "hand_with_index_and_middle_fingers_crossed_tone2": 32, "hand_with_index_and_middle_fingers_crossed_tone3": 32, "hand_with_index_and_middle_fingers_crossed_tone4": 32, "hand_with_index_and_middle_fingers_crossed_tone5": 32, "handbag": 32, "handbal": 32, "handball_tone1": 32, "handball_tone2": 32, "handball_tone3": 32, "handball_tone4": 32, "handball_tone5": 32, "handshak": [32, 739], "handshake_tone1": 32, "handshake_tone2": 32, "handshake_tone3": 32, "handshake_tone4": 32, "handshake_tone5": 32, "hankei": 32, "hash": [32, 186, 192, 193, 204, 210, 223, 229, 230, 233, 237, 239, 242, 246, 267, 274, 288, 342, 462, 810, 1056, 1136], "hatched_chick": 32, "hatching_chick": 32, "head_bandag": 32, "headphon": 32, "headston": 32, "health_work": 32, "health_worker_dark_skin_ton": 32, "health_worker_light_skin_ton": 32, "health_worker_medium_dark_skin_ton": 32, "health_worker_medium_light_skin_ton": 32, "health_worker_medium_skin_ton": 32, "health_worker_tone1": 32, "health_worker_tone2": 32, "health_worker_tone3": 32, "health_worker_tone4": 32, "health_worker_tone5": 32, "hear_no_evil": 32, "heart_decor": 32, "heart_exclam": 32, "heart_ey": 32, "heart_eyes_cat": 32, "heart_on_fir": 32, "heartbeat": 32, "heartpuls": 32, "heavy_check_mark": 32, "heavy_division_sign": 32, "heavy_dollar_sign": 32, "heavy_heart_exclam": 32, "heavy_heart_exclamation_mark_orna": 32, "heavy_minus_sign": 32, "heavy_multiplication_x": 32, "heavy_plus_sign": 32, "hedgehog": 32, "helicopt": 32, "helmet_with_cross": 32, "helmet_with_white_cross": 32, "herb": 32, "hibiscu": 32, "high_bright": 32, "high_heel": 32, "hiking_boot": 32, "hindu_templ": 32, "hippopotamu": 32, "hk": 32, "hn": 32, "hocho": 32, "hockei": 32, "hole": [32, 232, 763, 906, 936, 945, 946, 947, 964, 977], "hondura": 32, "honey_pot": 32, "hong_kong": 32, "hook": [32, 34, 38, 205, 223, 229, 239, 242, 272, 305, 443, 478, 734, 769], "hors": 32, "horse_rac": 32, "horse_racing_tone1": 32, "horse_racing_tone2": 32, "horse_racing_tone3": 32, "horse_racing_tone4": 32, "horse_racing_tone5": 32, "hospit": 32, "hot_dog": 32, "hot_fac": 32, "hot_pepp": 32, "hotdog": 32, "hotel": [32, 159, 360], "hotspr": 32, "hourglass": 32, "hourglass_flowing_sand": 32, "house_abandon": 32, "house_build": 32, "house_with_garden": 32, "hr": 32, "ht": 32, "hu": [32, 333, 334, 351], "hug": 32, "hugging_fac": 32, "hungari": 32, "hush": 32, "hut": 32, "ic": [32, 388, 469, 498, 1160], "ice_cream": 32, "ice_cub": 32, "ice_hockei": 32, "ice_sk": 32, "icecream": 32, "iceland": 32, "id": [32, 42, 46, 108, 111, 112, 113, 156, 159, 169, 173, 176, 186, 187, 197, 204, 210, 223, 226, 229, 236, 239, 240, 242, 249, 252, 256, 264, 267, 274, 280, 284, 288, 294, 299, 306, 311, 316, 322, 337, 458, 493, 494, 495, 507, 508, 509, 526, 774, 806, 808, 830, 837, 838, 843, 845, 854, 855, 856, 866, 873, 894, 896, 897, 908, 914, 916, 923, 942, 952, 994, 1021, 1032, 1048, 1086, 1097, 1098, 1099, 1100, 1103, 1104, 1105, 1114, 1116, 1134, 1177], "ideograph_advantag": 32, "ie": 32, "il": [32, 164], "imp": 32, "inbox_trai": 32, "incoming_envelop": 32, "india": [32, 214, 263, 287, 309, 1108], "indonesia": 32, "infin": [32, 121, 193, 242, 315, 1013, 1014], "information_desk_person": 32, "information_desk_person_tone1": 32, "information_desk_person_tone2": 32, "information_desk_person_tone3": 32, "information_desk_person_tone4": 32, "information_desk_person_tone5": 32, "\u2139": 32, "information_sourc": 32, "interrobang": 32, "iphon": 32, "iq": 32, "ir": [32, 870], "iran": 32, "iraq": 32, "ireland": 32, "island": 32, "isle_of_man": 32, "israel": [32, 214, 263, 1108], "itali": 32, "izakaya_lantern": 32, "jack_o_lantern": 32, "jamaica": 32, "japan": 32, "japanese_castl": 32, "japanese_goblin": 32, "japanese_ogr": 32, "jean": 32, "jersei": 32, "jigsaw": 32, "jm": 32, "jo": [32, 197, 210, 223, 226, 236, 239, 242, 246, 249, 288, 294, 322], "jordan": 32, "joi": 32, "joy_cat": 32, "joystick": 32, "jp": 32, "judg": 32, "judge_dark_skin_ton": 32, "judge_light_skin_ton": 32, "judge_medium_dark_skin_ton": 32, "judge_medium_light_skin_ton": 32, "judge_medium_skin_ton": 32, "judge_tone1": 32, "judge_tone2": 32, "judge_tone3": 32, "judge_tone4": 32, "judge_tone5": 32, "juggler": 32, "juggler_tone1": 32, "juggler_tone2": 32, "juggler_tone3": 32, "juggler_tone4": 32, "juggler_tone5": 32, "juggl": 32, "juggling_tone1": 32, "juggling_tone2": 32, "juggling_tone3": 32, "juggling_tone4": 32, "juggling_tone5": 32, "kaaba": 32, "kangaroo": 32, "karate_uniform": 32, "kayak": 32, "kazakhstan": 32, "ke": 32, "kenya": 32, "key2": 32, "keyboard": [32, 342, 852, 902], "keycap_ten": 32, "kg": 32, "kh": 32, "ki": [32, 195], "kick_scoot": 32, "kimono": 32, "kiribati": 32, "kiss_dark_skin_ton": 32, "kiss_light_skin_ton": 32, "kiss_man_man_dark_skin_ton": 32, "kiss_man_man_dark_skin_tone_light_skin_ton": 32, "kiss_man_man_dark_skin_tone_medium_dark_skin_ton": 32, "kiss_man_man_dark_skin_tone_medium_light_skin_ton": 32, "kiss_man_man_dark_skin_tone_medium_skin_ton": 32, "kiss_man_man_light_skin_ton": 32, "kiss_man_man_light_skin_tone_dark_skin_ton": 32, "kiss_man_man_light_skin_tone_medium_dark_skin_ton": 32, "kiss_man_man_light_skin_tone_medium_light_skin_ton": 32, "kiss_man_man_light_skin_tone_medium_skin_ton": 32, "kiss_man_man_medium_dark_skin_ton": 32, "kiss_man_man_medium_dark_skin_tone_dark_skin_ton": 32, "kiss_man_man_medium_dark_skin_tone_light_skin_ton": 32, "kiss_man_man_medium_dark_skin_tone_medium_light_skin_ton": 32, "kiss_man_man_medium_dark_skin_tone_medium_skin_ton": 32, "kiss_man_man_medium_light_skin_ton": 32, "kiss_man_man_medium_light_skin_tone_dark_skin_ton": 32, "kiss_man_man_medium_light_skin_tone_light_skin_ton": 32, "kiss_man_man_medium_light_skin_tone_medium_dark_skin_ton": 32, "kiss_man_man_medium_light_skin_tone_medium_skin_ton": 32, "kiss_man_man_medium_skin_ton": 32, "kiss_man_man_medium_skin_tone_dark_skin_ton": 32, "kiss_man_man_medium_skin_tone_light_skin_ton": 32, "kiss_man_man_medium_skin_tone_medium_dark_skin_ton": 32, "kiss_man_man_medium_skin_tone_medium_light_skin_ton": 32, "kiss_man_man_tone1": 32, "kiss_man_man_tone1_tone2": 32, "kiss_man_man_tone1_tone3": 32, "kiss_man_man_tone1_tone4": 32, "kiss_man_man_tone1_tone5": 32, "kiss_man_man_tone2": 32, "kiss_man_man_tone2_tone1": 32, "kiss_man_man_tone2_tone3": 32, "kiss_man_man_tone2_tone4": 32, "kiss_man_man_tone2_tone5": 32, "kiss_man_man_tone3": 32, "kiss_man_man_tone3_tone1": 32, "kiss_man_man_tone3_tone2": 32, "kiss_man_man_tone3_tone4": 32, "kiss_man_man_tone3_tone5": 32, "kiss_man_man_tone4": 32, "kiss_man_man_tone4_tone1": 32, "kiss_man_man_tone4_tone2": 32, "kiss_man_man_tone4_tone3": 32, "kiss_man_man_tone4_tone5": 32, "kiss_man_man_tone5": 32, "kiss_man_man_tone5_tone1": 32, "kiss_man_man_tone5_tone2": 32, "kiss_man_man_tone5_tone3": 32, "kiss_man_man_tone5_tone4": 32, "kiss_medium_dark_skin_ton": 32, "kiss_medium_light_skin_ton": 32, "kiss_medium_skin_ton": 32, "kiss_mm": 32, "kiss_person_person_dark_skin_tone_light_skin_ton": 32, "kiss_person_person_dark_skin_tone_medium_dark_skin_ton": 32, "kiss_person_person_dark_skin_tone_medium_light_skin_ton": 32, "kiss_person_person_dark_skin_tone_medium_skin_ton": 32, "kiss_person_person_light_skin_tone_dark_skin_ton": 32, "kiss_person_person_light_skin_tone_medium_dark_skin_ton": 32, "kiss_person_person_light_skin_tone_medium_light_skin_ton": 32, "kiss_person_person_light_skin_tone_medium_skin_ton": 32, "kiss_person_person_medium_dark_skin_tone_dark_skin_ton": 32, "kiss_person_person_medium_dark_skin_tone_light_skin_ton": 32, "kiss_person_person_medium_dark_skin_tone_medium_light_skin_ton": 32, "kiss_person_person_medium_dark_skin_tone_medium_skin_ton": 32, "kiss_person_person_medium_light_skin_tone_dark_skin_ton": 32, "kiss_person_person_medium_light_skin_tone_light_skin_ton": 32, "kiss_person_person_medium_light_skin_tone_medium_dark_skin_ton": 32, "kiss_person_person_medium_light_skin_tone_medium_skin_ton": 32, "kiss_person_person_medium_skin_tone_dark_skin_ton": 32, "kiss_person_person_medium_skin_tone_light_skin_ton": 32, "kiss_person_person_medium_skin_tone_medium_dark_skin_ton": 32, "kiss_person_person_medium_skin_tone_medium_light_skin_ton": 32, "kiss_person_person_tone1_tone2": 32, "kiss_person_person_tone1_tone3": 32, "kiss_person_person_tone1_tone4": 32, "kiss_person_person_tone1_tone5": 32, "kiss_person_person_tone2_tone1": 32, "kiss_person_person_tone2_tone3": 32, "kiss_person_person_tone2_tone4": 32, "kiss_person_person_tone2_tone5": 32, "kiss_person_person_tone3_tone1": 32, "kiss_person_person_tone3_tone2": 32, "kiss_person_person_tone3_tone4": 32, "kiss_person_person_tone3_tone5": 32, "kiss_person_person_tone4_tone1": 32, "kiss_person_person_tone4_tone2": 32, "kiss_person_person_tone4_tone3": 32, "kiss_person_person_tone4_tone5": 32, "kiss_person_person_tone5_tone1": 32, "kiss_person_person_tone5_tone2": 32, "kiss_person_person_tone5_tone3": 32, "kiss_person_person_tone5_tone4": 32, "kiss_tone1": 32, "kiss_tone2": 32, "kiss_tone3": 32, "kiss_tone4": 32, "kiss_tone5": 32, "kiss_woman_man": 32, "kiss_woman_man_dark_skin_ton": 32, "kiss_woman_man_dark_skin_tone_light_skin_ton": 32, "kiss_woman_man_dark_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_man_dark_skin_tone_medium_light_skin_ton": 32, "kiss_woman_man_dark_skin_tone_medium_skin_ton": 32, "kiss_woman_man_light_skin_ton": 32, "kiss_woman_man_light_skin_tone_dark_skin_ton": 32, "kiss_woman_man_light_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_man_light_skin_tone_medium_light_skin_ton": 32, "kiss_woman_man_light_skin_tone_medium_skin_ton": 32, "kiss_woman_man_medium_dark_skin_ton": 32, "kiss_woman_man_medium_dark_skin_tone_dark_skin_ton": 32, "kiss_woman_man_medium_dark_skin_tone_light_skin_ton": 32, "kiss_woman_man_medium_dark_skin_tone_medium_light_skin_ton": 32, "kiss_woman_man_medium_dark_skin_tone_medium_skin_ton": 32, "kiss_woman_man_medium_light_skin_ton": 32, "kiss_woman_man_medium_light_skin_tone_dark_skin_ton": 32, "kiss_woman_man_medium_light_skin_tone_light_skin_ton": 32, "kiss_woman_man_medium_light_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_man_medium_light_skin_tone_medium_skin_ton": 32, "kiss_woman_man_medium_skin_ton": 32, "kiss_woman_man_medium_skin_tone_dark_skin_ton": 32, "kiss_woman_man_medium_skin_tone_light_skin_ton": 32, "kiss_woman_man_medium_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_man_medium_skin_tone_medium_light_skin_ton": 32, "kiss_woman_man_tone1": 32, "kiss_woman_man_tone1_tone2": 32, "kiss_woman_man_tone1_tone3": 32, "kiss_woman_man_tone1_tone4": 32, "kiss_woman_man_tone1_tone5": 32, "kiss_woman_man_tone2": 32, "kiss_woman_man_tone2_tone1": 32, "kiss_woman_man_tone2_tone3": 32, "kiss_woman_man_tone2_tone4": 32, "kiss_woman_man_tone2_tone5": 32, "kiss_woman_man_tone3": 32, "kiss_woman_man_tone3_tone1": 32, "kiss_woman_man_tone3_tone2": 32, "kiss_woman_man_tone3_tone4": 32, "kiss_woman_man_tone3_tone5": 32, "kiss_woman_man_tone4": 32, "kiss_woman_man_tone4_tone1": 32, "kiss_woman_man_tone4_tone2": 32, "kiss_woman_man_tone4_tone3": 32, "kiss_woman_man_tone4_tone5": 32, "kiss_woman_man_tone5": 32, "kiss_woman_man_tone5_tone1": 32, "kiss_woman_man_tone5_tone2": 32, "kiss_woman_man_tone5_tone3": 32, "kiss_woman_man_tone5_tone4": 32, "kiss_woman_woman_dark_skin_ton": 32, "kiss_woman_woman_dark_skin_tone_light_skin_ton": 32, "kiss_woman_woman_dark_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_woman_dark_skin_tone_medium_light_skin_ton": 32, "kiss_woman_woman_dark_skin_tone_medium_skin_ton": 32, "kiss_woman_woman_light_skin_ton": 32, "kiss_woman_woman_light_skin_tone_dark_skin_ton": 32, "kiss_woman_woman_light_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_woman_light_skin_tone_medium_light_skin_ton": 32, "kiss_woman_woman_light_skin_tone_medium_skin_ton": 32, "kiss_woman_woman_medium_dark_skin_ton": 32, "kiss_woman_woman_medium_dark_skin_tone_dark_skin_ton": 32, "kiss_woman_woman_medium_dark_skin_tone_light_skin_ton": 32, "kiss_woman_woman_medium_dark_skin_tone_medium_light_skin_ton": 32, "kiss_woman_woman_medium_dark_skin_tone_medium_skin_ton": 32, "kiss_woman_woman_medium_light_skin_ton": 32, "kiss_woman_woman_medium_light_skin_tone_dark_skin_ton": 32, "kiss_woman_woman_medium_light_skin_tone_light_skin_ton": 32, "kiss_woman_woman_medium_light_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_woman_medium_light_skin_tone_medium_skin_ton": 32, "kiss_woman_woman_medium_skin_ton": 32, "kiss_woman_woman_medium_skin_tone_dark_skin_ton": 32, "kiss_woman_woman_medium_skin_tone_light_skin_ton": 32, "kiss_woman_woman_medium_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_woman_medium_skin_tone_medium_light_skin_ton": 32, "kiss_woman_woman_tone1": 32, "kiss_woman_woman_tone1_tone2": 32, "kiss_woman_woman_tone1_tone3": 32, "kiss_woman_woman_tone1_tone4": 32, "kiss_woman_woman_tone1_tone5": 32, "kiss_woman_woman_tone2": 32, "kiss_woman_woman_tone2_tone1": 32, "kiss_woman_woman_tone2_tone3": 32, "kiss_woman_woman_tone2_tone4": 32, "kiss_woman_woman_tone2_tone5": 32, "kiss_woman_woman_tone3": 32, "kiss_woman_woman_tone3_tone1": 32, "kiss_woman_woman_tone3_tone2": 32, "kiss_woman_woman_tone3_tone4": 32, "kiss_woman_woman_tone3_tone5": 32, "kiss_woman_woman_tone4": 32, "kiss_woman_woman_tone4_tone1": 32, "kiss_woman_woman_tone4_tone2": 32, "kiss_woman_woman_tone4_tone3": 32, "kiss_woman_woman_tone4_tone5": 32, "kiss_woman_woman_tone5": 32, "kiss_woman_woman_tone5_tone1": 32, "kiss_woman_woman_tone5_tone2": 32, "kiss_woman_woman_tone5_tone3": 32, "kiss_woman_woman_tone5_tone4": 32, "kiss_ww": 32, "kissing_cat": 32, "kissing_closed_ey": 32, "kissing_smiling_ey": 32, "kite": 32, "kiwi": 32, "kiwi_fruit": 32, "kiwifruit": 32, "km": [32, 175, 177], "kn": 32, "knife": [32, 769, 936, 1161], "knot": 32, "koala": 32, "koko": 32, "korea": 32, "kosovo": 32, "kp": 32, "kr": 32, "kuwait": 32, "kw": [32, 223, 229, 239, 242], "ky": 32, "kyrgyzstan": 32, "kz": 32, "la": 32, "lab_coat": 32, "label": [32, 39, 40, 58, 175, 177, 224, 237, 251, 254, 287, 293, 399, 404, 411, 417, 421, 424, 428, 431, 437, 441, 446, 447, 668, 669, 707, 760, 762, 763, 790, 1108, 1115, 1127, 1130], "lacross": 32, "ladder": 32, "lady_beetl": 32, "lao": 32, "large_blue_circl": 32, "large_blue_diamond": 32, "large_orange_diamond": 32, "last_quarter_moon": 32, "last_quarter_moon_with_fac": 32, "latin_cross": 32, "latvia": 32, "laugh": 32, "lb": 32, "lc": [32, 191], "leafy_green": 32, "leav": [32, 49, 66, 151, 154, 155, 161, 164, 194, 223, 246, 283, 353, 571, 573, 582, 583, 598, 600, 601, 758, 761, 773, 778, 788, 810, 915, 940, 960, 1048, 1121], "lebanon": 32, "ledger": 32, "left_facing_fist": 32, "left_facing_fist_tone1": 32, "left_facing_fist_tone2": 32, "left_facing_fist_tone3": 32, "left_facing_fist_tone4": 32, "left_facing_fist_tone5": 32, "left_fist": 32, "left_fist_tone1": 32, "left_fist_tone2": 32, "left_fist_tone3": 32, "left_fist_tone4": 32, "left_fist_tone5": 32, "left_luggag": 32, "left_right_arrow": 32, "left_speech_bubbl": 32, "leftwards_arrow_with_hook": 32, "leg": [32, 35], "leg_dark_skin_ton": 32, "leg_light_skin_ton": 32, "leg_medium_dark_skin_ton": 32, "leg_medium_light_skin_ton": 32, "leg_medium_skin_ton": 32, "leg_tone1": 32, "leg_tone2": 32, "leg_tone3": 32, "leg_tone4": 32, "leg_tone5": 32, "lemon": 32, "leo": [32, 333, 334, 351], "leopard": 32, "lesotho": 32, "level_slid": 32, "levit": 32, "levitate_tone1": 32, "levitate_tone2": 32, "levitate_tone3": 32, "levitate_tone4": 32, "levitate_tone5": 32, "liar": 32, "liberia": 32, "libra": 32, "libya": 32, "liechtenstein": 32, "lifter": 32, "lifter_tone1": 32, "lifter_tone2": 32, "lifter_tone3": 32, "lifter_tone4": 32, "lifter_tone5": 32, "light_rail": 32, "linked_paperclip": 32, "lion": 32, "lion_fac": 32, "lip": 32, "lipstick": 32, "lithuania": 32, "lizard": 32, "lk": 32, "llama": 32, "lobster": 32, "lock": [32, 154, 156, 186, 190, 223, 229, 232, 239, 242, 258, 259, 261, 270, 291, 304, 305, 318, 322, 351, 425, 465, 545, 728, 734, 737, 739, 740, 758, 762, 763, 800, 808, 813, 818, 847, 923, 955, 960, 962, 970, 977, 1018, 1108, 1161, 1173, 1176], "lock_with_ink_pen": 32, "lollipop": 32, "long_drum": 32, "loud_sound": 32, "loudspeak": 32, "love_hotel": 32, "love_lett": 32, "love_you_gestur": 32, "love_you_gesture_dark_skin_ton": 32, "love_you_gesture_light_skin_ton": 32, "love_you_gesture_medium_dark_skin_ton": 32, "love_you_gesture_medium_light_skin_ton": 32, "love_you_gesture_medium_skin_ton": 32, "love_you_gesture_tone1": 32, "love_you_gesture_tone2": 32, "love_you_gesture_tone3": 32, "love_you_gesture_tone4": 32, "love_you_gesture_tone5": 32, "low_bright": 32, "lower_left_ballpoint_pen": 32, "lower_left_crayon": 32, "lower_left_fountain_pen": 32, "lower_left_paintbrush": 32, "lr": 32, "lu": 32, "luggag": 32, "lung": 32, "luxembourg": 32, "lv": 32, "ly": 32, "lying_fac": 32, "ma": 32, "macau": 32, "macedonia": 32, "madagascar": 32, "mag": 32, "mag_right": 32, "mage": 32, "mage_dark_skin_ton": 32, "mage_light_skin_ton": 32, "mage_medium_dark_skin_ton": 32, "mage_medium_light_skin_ton": 32, "mage_medium_skin_ton": 32, "mage_tone1": 32, "mage_tone2": 32, "mage_tone3": 32, "mage_tone4": 32, "mage_tone5": 32, "magic_wand": 32, "magnet": 32, "mahjong": 32, "mailbox": 32, "mailbox_clos": 32, "mailbox_with_mail": 32, "mailbox_with_no_mail": 32, "malawi": 32, "malaysia": 32, "maldiv": 32, "male_danc": 32, "male_dancer_tone1": 32, "male_dancer_tone2": 32, "male_dancer_tone3": 32, "male_dancer_tone4": 32, "male_dancer_tone5": 32, "male_detect": 32, "male_sign": 32, "mali": 32, "malta": 32, "mammoth": 32, "man_artist": 32, "man_artist_dark_skin_ton": 32, "man_artist_light_skin_ton": 32, "man_artist_medium_dark_skin_ton": 32, "man_artist_medium_light_skin_ton": 32, "man_artist_medium_skin_ton": 32, "man_artist_tone1": 32, "man_artist_tone2": 32, "man_artist_tone3": 32, "man_artist_tone4": 32, "man_artist_tone5": 32, "man_astronaut": 32, "man_astronaut_dark_skin_ton": 32, "man_astronaut_light_skin_ton": 32, "man_astronaut_medium_dark_skin_ton": 32, "man_astronaut_medium_light_skin_ton": 32, "man_astronaut_medium_skin_ton": 32, "man_astronaut_tone1": 32, "man_astronaut_tone2": 32, "man_astronaut_tone3": 32, "man_astronaut_tone4": 32, "man_astronaut_tone5": 32, "man_bald": 32, "man_bald_dark_skin_ton": 32, "man_bald_light_skin_ton": 32, "man_bald_medium_dark_skin_ton": 32, "man_bald_medium_light_skin_ton": 32, "man_bald_medium_skin_ton": 32, "man_bald_tone1": 32, "man_bald_tone2": 32, "man_bald_tone3": 32, "man_bald_tone4": 32, "man_bald_tone5": 32, "man_beard": 32, "man_bik": 32, "man_biking_dark_skin_ton": 32, "man_biking_light_skin_ton": 32, "man_biking_medium_dark_skin_ton": 32, "man_biking_medium_light_skin_ton": 32, "man_biking_medium_skin_ton": 32, "man_biking_tone1": 32, "man_biking_tone2": 32, "man_biking_tone3": 32, "man_biking_tone4": 32, "man_biking_tone5": 32, "man_bouncing_bal": 32, "man_bouncing_ball_dark_skin_ton": 32, "man_bouncing_ball_light_skin_ton": 32, "man_bouncing_ball_medium_dark_skin_ton": 32, "man_bouncing_ball_medium_light_skin_ton": 32, "man_bouncing_ball_medium_skin_ton": 32, "man_bouncing_ball_tone1": 32, "man_bouncing_ball_tone2": 32, "man_bouncing_ball_tone3": 32, "man_bouncing_ball_tone4": 32, "man_bouncing_ball_tone5": 32, "man_bow": 32, "man_bowing_dark_skin_ton": 32, "man_bowing_light_skin_ton": 32, "man_bowing_medium_dark_skin_ton": 32, "man_bowing_medium_light_skin_ton": 32, "man_bowing_medium_skin_ton": 32, "man_bowing_tone1": 32, "man_bowing_tone2": 32, "man_bowing_tone3": 32, "man_bowing_tone4": 32, "man_bowing_tone5": 32, "man_cartwheel": 32, "man_cartwheeling_dark_skin_ton": 32, "man_cartwheeling_light_skin_ton": 32, "man_cartwheeling_medium_dark_skin_ton": 32, "man_cartwheeling_medium_light_skin_ton": 32, "man_cartwheeling_medium_skin_ton": 32, "man_cartwheeling_tone1": 32, "man_cartwheeling_tone2": 32, "man_cartwheeling_tone3": 32, "man_cartwheeling_tone4": 32, "man_cartwheeling_tone5": 32, "man_climb": 32, "man_climbing_dark_skin_ton": 32, "man_climbing_light_skin_ton": 32, "man_climbing_medium_dark_skin_ton": 32, "man_climbing_medium_light_skin_ton": 32, "man_climbing_medium_skin_ton": 32, "man_climbing_tone1": 32, "man_climbing_tone2": 32, "man_climbing_tone3": 32, "man_climbing_tone4": 32, "man_climbing_tone5": 32, "man_construction_work": 32, "man_construction_worker_dark_skin_ton": 32, "man_construction_worker_light_skin_ton": 32, "man_construction_worker_medium_dark_skin_ton": 32, "man_construction_worker_medium_light_skin_ton": 32, "man_construction_worker_medium_skin_ton": 32, "man_construction_worker_tone1": 32, "man_construction_worker_tone2": 32, "man_construction_worker_tone3": 32, "man_construction_worker_tone4": 32, "man_construction_worker_tone5": 32, "man_cook": 32, "man_cook_dark_skin_ton": 32, "man_cook_light_skin_ton": 32, "man_cook_medium_dark_skin_ton": 32, "man_cook_medium_light_skin_ton": 32, "man_cook_medium_skin_ton": 32, "man_cook_tone1": 32, "man_cook_tone2": 32, "man_cook_tone3": 32, "man_cook_tone4": 32, "man_cook_tone5": 32, "man_curly_hair": 32, "man_curly_haired_dark_skin_ton": 32, "man_curly_haired_light_skin_ton": 32, "man_curly_haired_medium_dark_skin_ton": 32, "man_curly_haired_medium_light_skin_ton": 32, "man_curly_haired_medium_skin_ton": 32, "man_curly_haired_tone1": 32, "man_curly_haired_tone2": 32, "man_curly_haired_tone3": 32, "man_curly_haired_tone4": 32, "man_curly_haired_tone5": 32, "man_danc": 32, "man_dancing_tone1": 32, "man_dancing_tone2": 32, "man_dancing_tone3": 32, "man_dancing_tone4": 32, "man_dancing_tone5": 32, "man_dark_skin_tone_beard": 32, "man_detect": 32, "man_detective_dark_skin_ton": 32, "man_detective_light_skin_ton": 32, "man_detective_medium_dark_skin_ton": 32, "man_detective_medium_light_skin_ton": 32, "man_detective_medium_skin_ton": 32, "man_detective_tone1": 32, "man_detective_tone2": 32, "man_detective_tone3": 32, "man_detective_tone4": 32, "man_detective_tone5": 32, "man_elf": 32, "man_elf_dark_skin_ton": 32, "man_elf_light_skin_ton": 32, "man_elf_medium_dark_skin_ton": 32, "man_elf_medium_light_skin_ton": 32, "man_elf_medium_skin_ton": 32, "man_elf_tone1": 32, "man_elf_tone2": 32, "man_elf_tone3": 32, "man_elf_tone4": 32, "man_elf_tone5": 32, "man_facepalm": 32, "man_facepalming_dark_skin_ton": 32, "man_facepalming_light_skin_ton": 32, "man_facepalming_medium_dark_skin_ton": 32, "man_facepalming_medium_light_skin_ton": 32, "man_facepalming_medium_skin_ton": 32, "man_facepalming_tone1": 32, "man_facepalming_tone2": 32, "man_facepalming_tone3": 32, "man_facepalming_tone4": 32, "man_facepalming_tone5": 32, "man_factory_work": 32, "man_factory_worker_dark_skin_ton": 32, "man_factory_worker_light_skin_ton": 32, "man_factory_worker_medium_dark_skin_ton": 32, "man_factory_worker_medium_light_skin_ton": 32, "man_factory_worker_medium_skin_ton": 32, "man_factory_worker_tone1": 32, "man_factory_worker_tone2": 32, "man_factory_worker_tone3": 32, "man_factory_worker_tone4": 32, "man_factory_worker_tone5": 32, "man_fairi": 32, "man_fairy_dark_skin_ton": 32, "man_fairy_light_skin_ton": 32, "man_fairy_medium_dark_skin_ton": 32, "man_fairy_medium_light_skin_ton": 32, "man_fairy_medium_skin_ton": 32, "man_fairy_tone1": 32, "man_fairy_tone2": 32, "man_fairy_tone3": 32, "man_fairy_tone4": 32, "man_fairy_tone5": 32, "man_farm": 32, "man_farmer_dark_skin_ton": 32, "man_farmer_light_skin_ton": 32, "man_farmer_medium_dark_skin_ton": 32, "man_farmer_medium_light_skin_ton": 32, "man_farmer_medium_skin_ton": 32, "man_farmer_tone1": 32, "man_farmer_tone2": 32, "man_farmer_tone3": 32, "man_farmer_tone4": 32, "man_farmer_tone5": 32, "man_feeding_babi": 32, "man_feeding_baby_dark_skin_ton": 32, "man_feeding_baby_light_skin_ton": 32, "man_feeding_baby_medium_dark_skin_ton": 32, "man_feeding_baby_medium_light_skin_ton": 32, "man_feeding_baby_medium_skin_ton": 32, "man_feeding_baby_tone1": 32, "man_feeding_baby_tone2": 32, "man_feeding_baby_tone3": 32, "man_feeding_baby_tone4": 32, "man_feeding_baby_tone5": 32, "man_firefight": 32, "man_firefighter_dark_skin_ton": 32, "man_firefighter_light_skin_ton": 32, "man_firefighter_medium_dark_skin_ton": 32, "man_firefighter_medium_light_skin_ton": 32, "man_firefighter_medium_skin_ton": 32, "man_firefighter_tone1": 32, "man_firefighter_tone2": 32, "man_firefighter_tone3": 32, "man_firefighter_tone4": 32, "man_firefighter_tone5": 32, "man_frown": 32, "man_frowning_dark_skin_ton": 32, "man_frowning_light_skin_ton": 32, "man_frowning_medium_dark_skin_ton": 32, "man_frowning_medium_light_skin_ton": 32, "man_frowning_medium_skin_ton": 32, "man_frowning_tone1": 32, "man_frowning_tone2": 32, "man_frowning_tone3": 32, "man_frowning_tone4": 32, "man_frowning_tone5": 32, "man_geni": 32, "man_gesturing_no": 32, "man_gesturing_no_dark_skin_ton": 32, "man_gesturing_no_light_skin_ton": 32, "man_gesturing_no_medium_dark_skin_ton": 32, "man_gesturing_no_medium_light_skin_ton": 32, "man_gesturing_no_medium_skin_ton": 32, "man_gesturing_no_tone1": 32, "man_gesturing_no_tone2": 32, "man_gesturing_no_tone3": 32, "man_gesturing_no_tone4": 32, "man_gesturing_no_tone5": 32, "man_gesturing_ok": 32, "man_gesturing_ok_dark_skin_ton": 32, "man_gesturing_ok_light_skin_ton": 32, "man_gesturing_ok_medium_dark_skin_ton": 32, "man_gesturing_ok_medium_light_skin_ton": 32, "man_gesturing_ok_medium_skin_ton": 32, "man_gesturing_ok_tone1": 32, "man_gesturing_ok_tone2": 32, "man_gesturing_ok_tone3": 32, "man_gesturing_ok_tone4": 32, "man_gesturing_ok_tone5": 32, "man_getting_face_massag": 32, "man_getting_face_massage_dark_skin_ton": 32, "man_getting_face_massage_light_skin_ton": 32, "man_getting_face_massage_medium_dark_skin_ton": 32, "man_getting_face_massage_medium_light_skin_ton": 32, "man_getting_face_massage_medium_skin_ton": 32, "man_getting_face_massage_tone1": 32, "man_getting_face_massage_tone2": 32, "man_getting_face_massage_tone3": 32, "man_getting_face_massage_tone4": 32, "man_getting_face_massage_tone5": 32, "man_getting_haircut": 32, "man_getting_haircut_dark_skin_ton": 32, "man_getting_haircut_light_skin_ton": 32, "man_getting_haircut_medium_dark_skin_ton": 32, "man_getting_haircut_medium_light_skin_ton": 32, "man_getting_haircut_medium_skin_ton": 32, "man_getting_haircut_tone1": 32, "man_getting_haircut_tone2": 32, "man_getting_haircut_tone3": 32, "man_getting_haircut_tone4": 32, "man_getting_haircut_tone5": 32, "man_golf": 32, "man_golfing_dark_skin_ton": 32, "man_golfing_light_skin_ton": 32, "man_golfing_medium_dark_skin_ton": 32, "man_golfing_medium_light_skin_ton": 32, "man_golfing_medium_skin_ton": 32, "man_golfing_tone1": 32, "man_golfing_tone2": 32, "man_golfing_tone3": 32, "man_golfing_tone4": 32, "man_golfing_tone5": 32, "man_guard": 32, "man_guard_dark_skin_ton": 32, "man_guard_light_skin_ton": 32, "man_guard_medium_dark_skin_ton": 32, "man_guard_medium_light_skin_ton": 32, "man_guard_medium_skin_ton": 32, "man_guard_tone1": 32, "man_guard_tone2": 32, "man_guard_tone3": 32, "man_guard_tone4": 32, "man_guard_tone5": 32, "man_health_work": 32, "man_health_worker_dark_skin_ton": 32, "man_health_worker_light_skin_ton": 32, "man_health_worker_medium_dark_skin_ton": 32, "man_health_worker_medium_light_skin_ton": 32, "man_health_worker_medium_skin_ton": 32, "man_health_worker_tone1": 32, "man_health_worker_tone2": 32, "man_health_worker_tone3": 32, "man_health_worker_tone4": 32, "man_health_worker_tone5": 32, "man_in_business_suit_levit": 32, "man_in_business_suit_levitating_dark_skin_ton": 32, "man_in_business_suit_levitating_light_skin_ton": 32, "man_in_business_suit_levitating_medium_dark_skin_ton": 32, "man_in_business_suit_levitating_medium_light_skin_ton": 32, "man_in_business_suit_levitating_medium_skin_ton": 32, "man_in_business_suit_levitating_tone1": 32, "man_in_business_suit_levitating_tone2": 32, "man_in_business_suit_levitating_tone3": 32, "man_in_business_suit_levitating_tone4": 32, "man_in_business_suit_levitating_tone5": 32, "man_in_lotus_posit": 32, "man_in_lotus_position_dark_skin_ton": 32, "man_in_lotus_position_light_skin_ton": 32, "man_in_lotus_position_medium_dark_skin_ton": 32, "man_in_lotus_position_medium_light_skin_ton": 32, "man_in_lotus_position_medium_skin_ton": 32, "man_in_lotus_position_tone1": 32, "man_in_lotus_position_tone2": 32, "man_in_lotus_position_tone3": 32, "man_in_lotus_position_tone4": 32, "man_in_lotus_position_tone5": 32, "man_in_manual_wheelchair": 32, "man_in_manual_wheelchair_dark_skin_ton": 32, "man_in_manual_wheelchair_light_skin_ton": 32, "man_in_manual_wheelchair_medium_dark_skin_ton": 32, "man_in_manual_wheelchair_medium_light_skin_ton": 32, "man_in_manual_wheelchair_medium_skin_ton": 32, "man_in_manual_wheelchair_tone1": 32, "man_in_manual_wheelchair_tone2": 32, "man_in_manual_wheelchair_tone3": 32, "man_in_manual_wheelchair_tone4": 32, "man_in_manual_wheelchair_tone5": 32, "man_in_motorized_wheelchair": 32, "man_in_motorized_wheelchair_dark_skin_ton": 32, "man_in_motorized_wheelchair_light_skin_ton": 32, "man_in_motorized_wheelchair_medium_dark_skin_ton": 32, "man_in_motorized_wheelchair_medium_light_skin_ton": 32, "man_in_motorized_wheelchair_medium_skin_ton": 32, "man_in_motorized_wheelchair_tone1": 32, "man_in_motorized_wheelchair_tone2": 32, "man_in_motorized_wheelchair_tone3": 32, "man_in_motorized_wheelchair_tone4": 32, "man_in_motorized_wheelchair_tone5": 32, "man_in_steamy_room": 32, "man_in_steamy_room_dark_skin_ton": 32, "man_in_steamy_room_light_skin_ton": 32, "man_in_steamy_room_medium_dark_skin_ton": 32, "man_in_steamy_room_medium_light_skin_ton": 32, "man_in_steamy_room_medium_skin_ton": 32, "man_in_steamy_room_tone1": 32, "man_in_steamy_room_tone2": 32, "man_in_steamy_room_tone3": 32, "man_in_steamy_room_tone4": 32, "man_in_steamy_room_tone5": 32, "man_in_tuxedo": 32, "man_in_tuxedo_dark_skin_ton": 32, "man_in_tuxedo_light_skin_ton": 32, "man_in_tuxedo_medium_dark_skin_ton": 32, "man_in_tuxedo_medium_light_skin_ton": 32, "man_in_tuxedo_medium_skin_ton": 32, "man_in_tuxedo_tone1": 32, "man_in_tuxedo_tone2": 32, "man_in_tuxedo_tone3": 32, "man_in_tuxedo_tone4": 32, "man_in_tuxedo_tone5": 32, "man_judg": 32, "man_judge_dark_skin_ton": 32, "man_judge_light_skin_ton": 32, "man_judge_medium_dark_skin_ton": 32, "man_judge_medium_light_skin_ton": 32, "man_judge_medium_skin_ton": 32, "man_judge_tone1": 32, "man_judge_tone2": 32, "man_judge_tone3": 32, "man_judge_tone4": 32, "man_judge_tone5": 32, "man_juggl": 32, "man_juggling_dark_skin_ton": 32, "man_juggling_light_skin_ton": 32, "man_juggling_medium_dark_skin_ton": 32, "man_juggling_medium_light_skin_ton": 32, "man_juggling_medium_skin_ton": 32, "man_juggling_tone1": 32, "man_juggling_tone2": 32, "man_juggling_tone3": 32, "man_juggling_tone4": 32, "man_juggling_tone5": 32, "man_kneel": 32, "man_kneeling_dark_skin_ton": 32, "man_kneeling_light_skin_ton": 32, "man_kneeling_medium_dark_skin_ton": 32, "man_kneeling_medium_light_skin_ton": 32, "man_kneeling_medium_skin_ton": 32, "man_kneeling_tone1": 32, "man_kneeling_tone2": 32, "man_kneeling_tone3": 32, "man_kneeling_tone4": 32, "man_kneeling_tone5": 32, "man_lifting_weight": 32, "man_lifting_weights_dark_skin_ton": 32, "man_lifting_weights_light_skin_ton": 32, "man_lifting_weights_medium_dark_skin_ton": 32, "man_lifting_weights_medium_light_skin_ton": 32, "man_lifting_weights_medium_skin_ton": 32, "man_lifting_weights_tone1": 32, "man_lifting_weights_tone2": 32, "man_lifting_weights_tone3": 32, "man_lifting_weights_tone4": 32, "man_lifting_weights_tone5": 32, "man_light_skin_tone_beard": 32, "man_mag": 32, "man_mage_dark_skin_ton": 32, "man_mage_light_skin_ton": 32, "man_mage_medium_dark_skin_ton": 32, "man_mage_medium_light_skin_ton": 32, "man_mage_medium_skin_ton": 32, "man_mage_tone1": 32, "man_mage_tone2": 32, "man_mage_tone3": 32, "man_mage_tone4": 32, "man_mage_tone5": 32, "man_mechan": 32, "man_mechanic_dark_skin_ton": 32, "man_mechanic_light_skin_ton": 32, "man_mechanic_medium_dark_skin_ton": 32, "man_mechanic_medium_light_skin_ton": 32, "man_mechanic_medium_skin_ton": 32, "man_mechanic_tone1": 32, "man_mechanic_tone2": 32, "man_mechanic_tone3": 32, "man_mechanic_tone4": 32, "man_mechanic_tone5": 32, "man_medium_dark_skin_tone_beard": 32, "man_medium_light_skin_tone_beard": 32, "man_medium_skin_tone_beard": 32, "man_mountain_bik": 32, "man_mountain_biking_dark_skin_ton": 32, "man_mountain_biking_light_skin_ton": 32, "man_mountain_biking_medium_dark_skin_ton": 32, "man_mountain_biking_medium_light_skin_ton": 32, "man_mountain_biking_medium_skin_ton": 32, "man_mountain_biking_tone1": 32, "man_mountain_biking_tone2": 32, "man_mountain_biking_tone3": 32, "man_mountain_biking_tone4": 32, "man_mountain_biking_tone5": 32, "man_office_work": 32, "man_office_worker_dark_skin_ton": 32, "man_office_worker_light_skin_ton": 32, "man_office_worker_medium_dark_skin_ton": 32, "man_office_worker_medium_light_skin_ton": 32, "man_office_worker_medium_skin_ton": 32, "man_office_worker_tone1": 32, "man_office_worker_tone2": 32, "man_office_worker_tone3": 32, "man_office_worker_tone4": 32, "man_office_worker_tone5": 32, "man_pilot": 32, "man_pilot_dark_skin_ton": 32, "man_pilot_light_skin_ton": 32, "man_pilot_medium_dark_skin_ton": 32, "man_pilot_medium_light_skin_ton": 32, "man_pilot_medium_skin_ton": 32, "man_pilot_tone1": 32, "man_pilot_tone2": 32, "man_pilot_tone3": 32, "man_pilot_tone4": 32, "man_pilot_tone5": 32, "man_playing_handbal": 32, "man_playing_handball_dark_skin_ton": 32, "man_playing_handball_light_skin_ton": 32, "man_playing_handball_medium_dark_skin_ton": 32, "man_playing_handball_medium_light_skin_ton": 32, "man_playing_handball_medium_skin_ton": 32, "man_playing_handball_tone1": 32, "man_playing_handball_tone2": 32, "man_playing_handball_tone3": 32, "man_playing_handball_tone4": 32, "man_playing_handball_tone5": 32, "man_playing_water_polo": 32, "man_playing_water_polo_dark_skin_ton": 32, "man_playing_water_polo_light_skin_ton": 32, "man_playing_water_polo_medium_dark_skin_ton": 32, "man_playing_water_polo_medium_light_skin_ton": 32, "man_playing_water_polo_medium_skin_ton": 32, "man_playing_water_polo_tone1": 32, "man_playing_water_polo_tone2": 32, "man_playing_water_polo_tone3": 32, "man_playing_water_polo_tone4": 32, "man_playing_water_polo_tone5": 32, "man_police_offic": 32, "man_police_officer_dark_skin_ton": 32, "man_police_officer_light_skin_ton": 32, "man_police_officer_medium_dark_skin_ton": 32, "man_police_officer_medium_light_skin_ton": 32, "man_police_officer_medium_skin_ton": 32, "man_police_officer_tone1": 32, "man_police_officer_tone2": 32, "man_police_officer_tone3": 32, "man_police_officer_tone4": 32, "man_police_officer_tone5": 32, "man_pout": 32, "man_pouting_dark_skin_ton": 32, "man_pouting_light_skin_ton": 32, "man_pouting_medium_dark_skin_ton": 32, "man_pouting_medium_light_skin_ton": 32, "man_pouting_medium_skin_ton": 32, "man_pouting_tone1": 32, "man_pouting_tone2": 32, "man_pouting_tone3": 32, "man_pouting_tone4": 32, "man_pouting_tone5": 32, "man_raising_hand": 32, "man_raising_hand_dark_skin_ton": 32, "man_raising_hand_light_skin_ton": 32, "man_raising_hand_medium_dark_skin_ton": 32, "man_raising_hand_medium_light_skin_ton": 32, "man_raising_hand_medium_skin_ton": 32, "man_raising_hand_tone1": 32, "man_raising_hand_tone2": 32, "man_raising_hand_tone3": 32, "man_raising_hand_tone4": 32, "man_raising_hand_tone5": 32, "man_red_hair": 32, "man_red_haired_dark_skin_ton": 32, "man_red_haired_light_skin_ton": 32, "man_red_haired_medium_dark_skin_ton": 32, "man_red_haired_medium_light_skin_ton": 32, "man_red_haired_medium_skin_ton": 32, "man_red_haired_tone1": 32, "man_red_haired_tone2": 32, "man_red_haired_tone3": 32, "man_red_haired_tone4": 32, "man_red_haired_tone5": 32, "man_rowing_boat": 32, "man_rowing_boat_dark_skin_ton": 32, "man_rowing_boat_light_skin_ton": 32, "man_rowing_boat_medium_dark_skin_ton": 32, "man_rowing_boat_medium_light_skin_ton": 32, "man_rowing_boat_medium_skin_ton": 32, "man_rowing_boat_tone1": 32, "man_rowing_boat_tone2": 32, "man_rowing_boat_tone3": 32, "man_rowing_boat_tone4": 32, "man_rowing_boat_tone5": 32, "man_run": 32, "man_running_dark_skin_ton": 32, "man_running_light_skin_ton": 32, "man_running_medium_dark_skin_ton": 32, "man_running_medium_light_skin_ton": 32, "man_running_medium_skin_ton": 32, "man_running_tone1": 32, "man_running_tone2": 32, "man_running_tone3": 32, "man_running_tone4": 32, "man_running_tone5": 32, "man_scientist": 32, "man_scientist_dark_skin_ton": 32, "man_scientist_light_skin_ton": 32, "man_scientist_medium_dark_skin_ton": 32, "man_scientist_medium_light_skin_ton": 32, "man_scientist_medium_skin_ton": 32, "man_scientist_tone1": 32, "man_scientist_tone2": 32, "man_scientist_tone3": 32, "man_scientist_tone4": 32, "man_scientist_tone5": 32, "man_shrug": 32, "man_shrugging_dark_skin_ton": 32, "man_shrugging_light_skin_ton": 32, "man_shrugging_medium_dark_skin_ton": 32, "man_shrugging_medium_light_skin_ton": 32, "man_shrugging_medium_skin_ton": 32, "man_shrugging_tone1": 32, "man_shrugging_tone2": 32, "man_shrugging_tone3": 32, "man_shrugging_tone4": 32, "man_shrugging_tone5": 32, "man_sing": 32, "man_singer_dark_skin_ton": 32, "man_singer_light_skin_ton": 32, "man_singer_medium_dark_skin_ton": 32, "man_singer_medium_light_skin_ton": 32, "man_singer_medium_skin_ton": 32, "man_singer_tone1": 32, "man_singer_tone2": 32, "man_singer_tone3": 32, "man_singer_tone4": 32, "man_singer_tone5": 32, "man_stand": 32, "man_standing_dark_skin_ton": 32, "man_standing_light_skin_ton": 32, "man_standing_medium_dark_skin_ton": 32, "man_standing_medium_light_skin_ton": 32, "man_standing_medium_skin_ton": 32, "man_standing_tone1": 32, "man_standing_tone2": 32, "man_standing_tone3": 32, "man_standing_tone4": 32, "man_standing_tone5": 32, "man_stud": 32, "man_student_dark_skin_ton": 32, "man_student_light_skin_ton": 32, "man_student_medium_dark_skin_ton": 32, "man_student_medium_light_skin_ton": 32, "man_student_medium_skin_ton": 32, "man_student_tone1": 32, "man_student_tone2": 32, "man_student_tone3": 32, "man_student_tone4": 32, "man_student_tone5": 32, "man_superhero": 32, "man_superhero_dark_skin_ton": 32, "man_superhero_light_skin_ton": 32, "man_superhero_medium_dark_skin_ton": 32, "man_superhero_medium_light_skin_ton": 32, "man_superhero_medium_skin_ton": 32, "man_superhero_tone1": 32, "man_superhero_tone2": 32, "man_superhero_tone3": 32, "man_superhero_tone4": 32, "man_superhero_tone5": 32, "man_supervillain": 32, "man_supervillain_dark_skin_ton": 32, "man_supervillain_light_skin_ton": 32, "man_supervillain_medium_dark_skin_ton": 32, "man_supervillain_medium_light_skin_ton": 32, "man_supervillain_medium_skin_ton": 32, "man_supervillain_tone1": 32, "man_supervillain_tone2": 32, "man_supervillain_tone3": 32, "man_supervillain_tone4": 32, "man_supervillain_tone5": 32, "man_surf": 32, "man_surfing_dark_skin_ton": 32, "man_surfing_light_skin_ton": 32, "man_surfing_medium_dark_skin_ton": 32, "man_surfing_medium_light_skin_ton": 32, "man_surfing_medium_skin_ton": 32, "man_surfing_tone1": 32, "man_surfing_tone2": 32, "man_surfing_tone3": 32, "man_surfing_tone4": 32, "man_surfing_tone5": 32, "man_swim": 32, "man_swimming_dark_skin_ton": 32, "man_swimming_light_skin_ton": 32, "man_swimming_medium_dark_skin_ton": 32, "man_swimming_medium_light_skin_ton": 32, "man_swimming_medium_skin_ton": 32, "man_swimming_tone1": 32, "man_swimming_tone2": 32, "man_swimming_tone3": 32, "man_swimming_tone4": 32, "man_swimming_tone5": 32, "man_teach": 32, "man_teacher_dark_skin_ton": 32, "man_teacher_light_skin_ton": 32, "man_teacher_medium_dark_skin_ton": 32, "man_teacher_medium_light_skin_ton": 32, "man_teacher_medium_skin_ton": 32, "man_teacher_tone1": 32, "man_teacher_tone2": 32, "man_teacher_tone3": 32, "man_teacher_tone4": 32, "man_teacher_tone5": 32, "man_technologist": 32, "man_technologist_dark_skin_ton": 32, "man_technologist_light_skin_ton": 32, "man_technologist_medium_dark_skin_ton": 32, "man_technologist_medium_light_skin_ton": 32, "man_technologist_medium_skin_ton": 32, "man_technologist_tone1": 32, "man_technologist_tone2": 32, "man_technologist_tone3": 32, "man_technologist_tone4": 32, "man_technologist_tone5": 32, "man_tipping_hand": 32, "man_tipping_hand_dark_skin_ton": 32, "man_tipping_hand_light_skin_ton": 32, "man_tipping_hand_medium_dark_skin_ton": 32, "man_tipping_hand_medium_light_skin_ton": 32, "man_tipping_hand_medium_skin_ton": 32, "man_tipping_hand_tone1": 32, "man_tipping_hand_tone2": 32, "man_tipping_hand_tone3": 32, "man_tipping_hand_tone4": 32, "man_tipping_hand_tone5": 32, "man_tone1": 32, "man_tone1_beard": 32, "man_tone2": 32, "man_tone2_beard": 32, "man_tone3": 32, "man_tone3_beard": 32, "man_tone4": 32, "man_tone4_beard": 32, "man_tone5": 32, "man_tone5_beard": 32, "man_vampir": 32, "man_vampire_dark_skin_ton": 32, "man_vampire_light_skin_ton": 32, "man_vampire_medium_dark_skin_ton": 32, "man_vampire_medium_light_skin_ton": 32, "man_vampire_medium_skin_ton": 32, "man_vampire_tone1": 32, "man_vampire_tone2": 32, "man_vampire_tone3": 32, "man_vampire_tone4": 32, "man_vampire_tone5": 32, "man_walk": 32, "man_walking_dark_skin_ton": 32, "man_walking_light_skin_ton": 32, "man_walking_medium_dark_skin_ton": 32, "man_walking_medium_light_skin_ton": 32, "man_walking_medium_skin_ton": 32, "man_walking_tone1": 32, "man_walking_tone2": 32, "man_walking_tone3": 32, "man_walking_tone4": 32, "man_walking_tone5": 32, "man_wearing_turban": 32, "man_wearing_turban_dark_skin_ton": 32, "man_wearing_turban_light_skin_ton": 32, "man_wearing_turban_medium_dark_skin_ton": 32, "man_wearing_turban_medium_light_skin_ton": 32, "man_wearing_turban_medium_skin_ton": 32, "man_wearing_turban_tone1": 32, "man_wearing_turban_tone2": 32, "man_wearing_turban_tone3": 32, "man_wearing_turban_tone4": 32, "man_wearing_turban_tone5": 32, "man_white_hair": 32, "man_white_haired_dark_skin_ton": 32, "man_white_haired_light_skin_ton": 32, "man_white_haired_medium_dark_skin_ton": 32, "man_white_haired_medium_light_skin_ton": 32, "man_white_haired_medium_skin_ton": 32, "man_white_haired_tone1": 32, "man_white_haired_tone2": 32, "man_white_haired_tone3": 32, "man_white_haired_tone4": 32, "man_white_haired_tone5": 32, "man_with_chinese_cap": 32, "man_with_chinese_cap_tone1": 32, "man_with_chinese_cap_tone2": 32, "man_with_chinese_cap_tone3": 32, "man_with_chinese_cap_tone4": 32, "man_with_chinese_cap_tone5": 32, "man_with_gua_pi_mao": 32, "man_with_gua_pi_mao_tone1": 32, "man_with_gua_pi_mao_tone2": 32, "man_with_gua_pi_mao_tone3": 32, "man_with_gua_pi_mao_tone4": 32, "man_with_gua_pi_mao_tone5": 32, "man_with_probing_can": 32, "man_with_probing_cane_dark_skin_ton": 32, "man_with_probing_cane_light_skin_ton": 32, "man_with_probing_cane_medium_dark_skin_ton": 32, "man_with_probing_cane_medium_light_skin_ton": 32, "man_with_probing_cane_medium_skin_ton": 32, "man_with_probing_cane_tone1": 32, "man_with_probing_cane_tone2": 32, "man_with_probing_cane_tone3": 32, "man_with_probing_cane_tone4": 32, "man_with_probing_cane_tone5": 32, "man_with_turban": 32, "man_with_turban_tone1": 32, "man_with_turban_tone2": 32, "man_with_turban_tone3": 32, "man_with_turban_tone4": 32, "man_with_turban_tone5": 32, "man_with_veil": 32, "man_with_veil_dark_skin_ton": 32, "man_with_veil_light_skin_ton": 32, "man_with_veil_medium_dark_skin_ton": 32, "man_with_veil_medium_light_skin_ton": 32, "man_with_veil_medium_skin_ton": 32, "man_with_veil_tone1": 32, "man_with_veil_tone2": 32, "man_with_veil_tone3": 32, "man_with_veil_tone4": 32, "man_with_veil_tone5": 32, "man_zombi": 32, "mango": 32, "mans_sho": 32, "mantelpiece_clock": 32, "mantlepiece_clock": 32, "manual_wheelchair": 32, "maple_leaf": 32, "marshall_island": 32, "martial_arts_uniform": 32, "martiniqu": 32, "mask": [32, 175, 246, 391, 806, 857, 858, 869, 952, 981, 983], "massage_man": 32, "massage_tone1": 32, "massage_tone2": 32, "massage_tone3": 32, "massage_tone4": 32, "massage_tone5": 32, "massage_woman": 32, "mate": [32, 240, 862], "mauritania": 32, "mauritiu": 32, "mayott": 32, "mc": [32, 157, 272, 451], "md": [32, 138, 362, 811], "meat_on_bon": 32, "mechanic_dark_skin_ton": 32, "mechanic_light_skin_ton": 32, "mechanic_medium_dark_skin_ton": 32, "mechanic_medium_light_skin_ton": 32, "mechanic_medium_skin_ton": 32, "mechanic_tone1": 32, "mechanic_tone2": 32, "mechanic_tone3": 32, "mechanic_tone4": 32, "mechanic_tone5": 32, "mechanical_arm": 32, "mechanical_leg": 32, "medal": 32, "medal_militari": 32, "medal_sport": 32, "medical_symbol": 32, "mega": [32, 1005], "melon": 32, "memo": 32, "men_holding_hands_dark_skin_ton": 32, "men_holding_hands_dark_skin_tone_light_skin_ton": 32, "men_holding_hands_dark_skin_tone_medium_dark_skin_ton": 32, "men_holding_hands_dark_skin_tone_medium_light_skin_ton": 32, "men_holding_hands_dark_skin_tone_medium_skin_ton": 32, "men_holding_hands_light_skin_ton": 32, "men_holding_hands_light_skin_tone_dark_skin_ton": 32, "men_holding_hands_light_skin_tone_medium_dark_skin_ton": 32, "men_holding_hands_light_skin_tone_medium_light_skin_ton": 32, "men_holding_hands_light_skin_tone_medium_skin_ton": 32, "men_holding_hands_medium_dark_skin_ton": 32, "men_holding_hands_medium_dark_skin_tone_dark_skin_ton": 32, "men_holding_hands_medium_dark_skin_tone_light_skin_ton": 32, "men_holding_hands_medium_dark_skin_tone_medium_light_skin_ton": 32, "men_holding_hands_medium_dark_skin_tone_medium_skin_ton": 32, "men_holding_hands_medium_light_skin_ton": 32, "men_holding_hands_medium_light_skin_tone_dark_skin_ton": 32, "men_holding_hands_medium_light_skin_tone_light_skin_ton": 32, "men_holding_hands_medium_light_skin_tone_medium_dark_skin_ton": 32, "men_holding_hands_medium_light_skin_tone_medium_skin_ton": 32, "men_holding_hands_medium_skin_ton": 32, "men_holding_hands_medium_skin_tone_dark_skin_ton": 32, "men_holding_hands_medium_skin_tone_light_skin_ton": 32, "men_holding_hands_medium_skin_tone_medium_dark_skin_ton": 32, "men_holding_hands_medium_skin_tone_medium_light_skin_ton": 32, "men_holding_hands_tone1": 32, "men_holding_hands_tone1_tone2": 32, "men_holding_hands_tone1_tone3": 32, "men_holding_hands_tone1_tone4": 32, "men_holding_hands_tone1_tone5": 32, "men_holding_hands_tone2": 32, "men_holding_hands_tone2_tone1": 32, "men_holding_hands_tone2_tone3": 32, "men_holding_hands_tone2_tone4": 32, "men_holding_hands_tone2_tone5": 32, "men_holding_hands_tone3": 32, "men_holding_hands_tone3_tone1": 32, "men_holding_hands_tone3_tone2": 32, "men_holding_hands_tone3_tone4": 32, "men_holding_hands_tone3_tone5": 32, "men_holding_hands_tone4": 32, "men_holding_hands_tone4_tone1": 32, "men_holding_hands_tone4_tone2": 32, "men_holding_hands_tone4_tone3": 32, "men_holding_hands_tone4_tone5": 32, "men_holding_hands_tone5": 32, "men_holding_hands_tone5_tone1": 32, "men_holding_hands_tone5_tone2": 32, "men_holding_hands_tone5_tone3": 32, "men_holding_hands_tone5_tone4": 32, "men_with_bunny_ears_parti": 32, "men_wrestl": 32, "mending_heart": 32, "menorah": 32, "men": [32, 389, 445, 568], "mermaid": 32, "mermaid_dark_skin_ton": 32, "mermaid_light_skin_ton": 32, "mermaid_medium_dark_skin_ton": 32, "mermaid_medium_light_skin_ton": 32, "mermaid_medium_skin_ton": 32, "mermaid_tone1": 32, "mermaid_tone2": 32, "mermaid_tone3": 32, "mermaid_tone4": 32, "mermaid_tone5": 32, "merman": 32, "merman_dark_skin_ton": 32, "merman_light_skin_ton": 32, "merman_medium_dark_skin_ton": 32, "merman_medium_light_skin_ton": 32, "merman_medium_skin_ton": 32, "merman_tone1": 32, "merman_tone2": 32, "merman_tone3": 32, "merman_tone4": 32, "merman_tone5": 32, "merperson": 32, "merperson_dark_skin_ton": 32, "merperson_light_skin_ton": 32, "merperson_medium_dark_skin_ton": 32, "merperson_medium_light_skin_ton": 32, "merperson_medium_skin_ton": 32, "merperson_tone1": 32, "merperson_tone2": 32, "merperson_tone3": 32, "merperson_tone4": 32, "merperson_tone5": 32, "metal_tone1": 32, "metal_tone2": 32, "metal_tone3": 32, "metal_tone4": 32, "metal_tone5": 32, "metro": 32, "mexico": 32, "mf": [32, 226, 1065], "mg": 32, "mh": 32, "microb": 32, "micronesia": 32, "microphone2": 32, "microphon": [32, 159, 161], "microscop": 32, "middle_finger_tone1": 32, "middle_finger_tone2": 32, "middle_finger_tone3": 32, "middle_finger_tone4": 32, "middle_finger_tone5": 32, "military_helmet": 32, "military_med": 32, "milk": 32, "milk_glass": 32, "milky_wai": 32, "minibu": 32, "minidisc": 32, "mirror": 32, "ml": 32, "mm": [32, 450], "mn": 32, "mo": [32, 559], "mobile_phon": 32, "mobile_phone_off": 32, "moldova": 32, "monaco": 32, "money_mouth": 32, "money_mouth_fac": 32, "money_with_w": 32, "moneybag": 32, "mongolia": 32, "monkei": 32, "monkey_fac": 32, "monorail": 32, "montenegro": 32, "montserrat": 32, "moon": 32, "moon_cak": 32, "morocco": 32, "mortar_board": 32, "mosqu": 32, "mosquito": 32, "mother_christma": 32, "mother_christmas_tone1": 32, "mother_christmas_tone2": 32, "mother_christmas_tone3": 32, "mother_christmas_tone4": 32, "mother_christmas_tone5": 32, "motor_boat": 32, "motor_scoot": 32, "motorbik": 32, "motorboat": 32, "motorcycl": 32, "motorized_wheelchair": 32, "motorwai": 32, "mount_fuji": 32, "mountain": 32, "mountain_bicyclist": 32, "mountain_bicyclist_tone1": 32, "mountain_bicyclist_tone2": 32, "mountain_bicyclist_tone3": 32, "mountain_bicyclist_tone4": 32, "mountain_bicyclist_tone5": 32, "mountain_biking_man": 32, "mountain_biking_woman": 32, "mountain_cablewai": 32, "mountain_railwai": 32, "mountain_snow": 32, "mouse2": 32, "mous": [32, 154, 159, 870, 1046, 1054], "mouse_three_button": 32, "mouse_trap": 32, "movie_camera": 32, "moyai": 32, "mozambiqu": 32, "mp": [32, 38], "mq": [32, 976, 977], "mr": [32, 116, 223, 234, 242, 246, 1070], "mrs_clau": 32, "mrs_claus_tone1": 32, "mrs_claus_tone2": 32, "mrs_claus_tone3": 32, "mrs_claus_tone4": 32, "mrs_claus_tone5": 32, "mt": [32, 351, 980, 981], "mu": [32, 246], "muscle_tone1": 32, "muscle_tone2": 32, "muscle_tone3": 32, "muscle_tone4": 32, "muscle_tone5": 32, "mushroom": 32, "musical_keyboard": 32, "musical_not": 32, "musical_scor": 32, "mute": 32, "mv": [32, 100, 116, 194, 196, 260, 269, 270, 290, 291, 342, 347, 763, 783, 840, 877, 890, 906, 1167], "mw": 32, "mx": 32, "mx_clau": 32, "mx_claus_dark_skin_ton": 32, "mx_claus_light_skin_ton": 32, "mx_claus_medium_dark_skin_ton": 32, "mx_claus_medium_light_skin_ton": 32, "mx_claus_medium_skin_ton": 32, "mx_claus_tone1": 32, "mx_claus_tone2": 32, "mx_claus_tone3": 32, "mx_claus_tone4": 32, "mx_claus_tone5": 32, "myanmar": 32, "mz": 32, "na": [32, 223, 226, 229, 242, 249, 267, 322], "nail_car": 32, "nail_care_tone1": 32, "nail_care_tone2": 32, "nail_care_tone3": 32, "nail_care_tone4": 32, "nail_care_tone5": 32, "name_badg": 32, "namibia": 32, "national_park": 32, "nauru": 32, "nauseated_fac": 32, "nazar_amulet": 32, "nc": [32, 194, 196, 269, 290, 291, 371, 933], "ne": [32, 569, 587, 589, 948], "neckti": 32, "negative_squared_cross_mark": 32, "nepal": 32, "nerd_fac": 32, "nesting_dol": 32, "netherland": [32, 155, 1033], "neutral_fac": 32, "new_caledonia": 32, "new_moon": 32, "new_moon_with_fac": 32, "new_zealand": 32, "newspaper2": 32, "newspap": [32, 43], "newspaper_rol": 32, "next_track": 32, "next_track_button": 32, "nf": [32, 226, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322, 927], "ng": [32, 155, 166, 270, 763, 906, 985, 987, 994, 995, 996], "ni": 32, "nicaragua": 32, "niger": 32, "nigeria": 32, "night_with_star": 32, "nine": [32, 174, 187, 197, 205, 223, 234, 322, 342], "ninja_dark_skin_ton": 32, "ninja_light_skin_ton": 32, "ninja_medium_dark_skin_ton": 32, "ninja_medium_light_skin_ton": 32, "ninja_medium_skin_ton": 32, "ninja_tone1": 32, "ninja_tone2": 32, "ninja_tone3": 32, "ninja_tone4": 32, "ninja_tone5": 32, "niue": 32, "nl": [32, 371], "no_bel": 32, "no_bicycl": 32, "no_entri": 32, "no_entry_sign": 32, "no_good": 32, "no_good_man": 32, "no_good_tone1": 32, "no_good_tone2": 32, "no_good_tone3": 32, "no_good_tone4": 32, "no_good_tone5": 32, "no_good_woman": 32, "no_mobile_phon": 32, "no_mouth": 32, "no_pedestrian": 32, "no_smok": 32, "non": [32, 79, 116, 117, 132, 134, 136, 150, 156, 157, 164, 181, 194, 216, 234, 242, 246, 251, 270, 279, 281, 288, 310, 405, 427, 445, 461, 464, 515, 558, 560, 567, 569, 572, 580, 584, 585, 624, 639, 674, 680, 721, 725, 726, 741, 748, 762, 763, 796, 802, 815, 826, 847, 850, 852, 892, 917, 918, 926, 944, 959, 963, 970, 978, 1003, 1007, 1019, 1020, 1043, 1056, 1076, 1093, 1129, 1130, 1135, 1149, 1164], "potable_wat": 32, "norfolk_island": 32, "north_korea": 32, "northern_mariana_island": 32, "norwai": 32, "nose": 32, "nose_tone1": 32, "nose_tone2": 32, "nose_tone3": 32, "nose_tone4": 32, "nose_tone5": 32, "notebook_with_decorative_cov": 32, "notepad_spir": 32, "np": [32, 177, 204, 272, 306, 451, 1111, 1130], "nr": [32, 202, 246, 769], "nu": 32, "nut_and_bolt": 32, "nz": 32, "o2": [32, 439], "ocean": 32, "octagonal_sign": 32, "octopu": 32, "oden": 32, "office_work": 32, "office_worker_dark_skin_ton": 32, "office_worker_light_skin_ton": 32, "office_worker_medium_dark_skin_ton": 32, "office_worker_medium_light_skin_ton": 32, "office_worker_medium_skin_ton": 32, "office_worker_tone1": 32, "office_worker_tone2": 32, "office_worker_tone3": 32, "office_worker_tone4": 32, "office_worker_tone5": 32, "oil": 32, "oil_drum": 32, "ok": [32, 53, 66, 122, 153, 155, 156, 160, 169, 186, 202, 232, 272, 338, 379, 415, 433, 435, 465, 474, 524, 525, 526, 571, 579, 582, 587, 592, 602, 654, 661, 672, 680, 695, 714, 717, 726, 727, 743, 824, 915, 942, 960, 987, 998, 1016, 1019, 1032, 1148], "ok_hand_tone1": 32, "ok_hand_tone2": 32, "ok_hand_tone3": 32, "ok_hand_tone4": 32, "ok_hand_tone5": 32, "ok_man": 32, "ok_woman": 32, "ok_woman_tone1": 32, "ok_woman_tone2": 32, "ok_woman_tone3": 32, "ok_woman_tone4": 32, "ok_woman_tone5": 32, "old_kei": 32, "older_adult": 32, "older_adult_dark_skin_ton": 32, "older_adult_light_skin_ton": 32, "older_adult_medium_dark_skin_ton": 32, "older_adult_medium_light_skin_ton": 32, "older_adult_medium_skin_ton": 32, "older_adult_tone1": 32, "older_adult_tone2": 32, "older_adult_tone3": 32, "older_adult_tone4": 32, "older_adult_tone5": 32, "older_man": 32, "older_man_tone1": 32, "older_man_tone2": 32, "older_man_tone3": 32, "older_man_tone4": 32, "older_man_tone5": 32, "older_woman": 32, "older_woman_tone1": 32, "older_woman_tone2": 32, "older_woman_tone3": 32, "older_woman_tone4": 32, "older_woman_tone5": 32, "oliv": [32, 218], "om": [32, 705], "om_symbol": 32, "oman": 32, "oncoming_automobil": 32, "oncoming_bu": 32, "oncoming_police_car": 32, "oncoming_taxi": 32, "one_piece_swimsuit": 32, "onion": 32, "open_file_fold": 32, "open_hand": 32, "open_hands_tone1": 32, "open_hands_tone2": 32, "open_hands_tone3": 32, "open_hands_tone4": 32, "open_hands_tone5": 32, "open_mouth": 32, "open_umbrella": 32, "ophiuchu": 32, "orange_book": 32, "orange_circl": 32, "orange_heart": 32, "orange_squar": 32, "orangutan": 32, "orthodox_cross": 32, "otter": 32, "outbox_trai": 32, "owl": 32, "ox": 32, "oyster": 32, "pa": [32, 223, 229, 239, 242, 415, 599, 601, 602], "paella": 32, "page_facing_up": 32, "page_with_curl": 32, "pager": [32, 902], "paintbrush": 32, "pakistan": 32, "palau": 32, "palestinian_territori": 32, "palm_tre": 32, "palms_up_togeth": 32, "palms_up_together_dark_skin_ton": 32, "palms_up_together_light_skin_ton": 32, "palms_up_together_medium_dark_skin_ton": 32, "palms_up_together_medium_light_skin_ton": 32, "palms_up_together_medium_skin_ton": 32, "palms_up_together_tone1": 32, "palms_up_together_tone2": 32, "palms_up_together_tone3": 32, "palms_up_together_tone4": 32, "palms_up_together_tone5": 32, "panama": 32, "pancak": 32, "panda_fac": 32, "paperclip": 32, "papua_new_guinea": 32, "parachut": 32, "paraguai": 32, "parasol_on_ground": 32, "park": 32, "parrot": 32, "part_alternation_mark": 32, "partly_sunni": 32, "partying_fac": 32, "passenger_ship": 32, "passport_control": 32, "pause_button": 32, "paw_print": 32, "pe": 32, "peac": 32, "peace_symbol": 32, "peach": 32, "peacock": 32, "peanut": 32, "pear": 32, "pen": 32, "pen_ballpoint": 32, "pen_fountain": 32, "pencil2": 32, "pencil": 32, "pensiv": 32, "people_holding_hand": 32, "people_holding_hands_dark_skin_ton": 32, "people_holding_hands_dark_skin_tone_light_skin_ton": 32, "people_holding_hands_dark_skin_tone_medium_dark_skin_ton": 32, "people_holding_hands_dark_skin_tone_medium_light_skin_ton": 32, "people_holding_hands_dark_skin_tone_medium_skin_ton": 32, "people_holding_hands_light_skin_ton": 32, "people_holding_hands_light_skin_tone_dark_skin_ton": 32, "people_holding_hands_light_skin_tone_medium_dark_skin_ton": 32, "people_holding_hands_light_skin_tone_medium_light_skin_ton": 32, "people_holding_hands_light_skin_tone_medium_skin_ton": 32, "people_holding_hands_medium_dark_skin_ton": 32, "people_holding_hands_medium_dark_skin_tone_dark_skin_ton": 32, "people_holding_hands_medium_dark_skin_tone_light_skin_ton": 32, "people_holding_hands_medium_dark_skin_tone_medium_light_skin_ton": 32, "people_holding_hands_medium_dark_skin_tone_medium_skin_ton": 32, "people_holding_hands_medium_light_skin_ton": 32, "people_holding_hands_medium_light_skin_tone_dark_skin_ton": 32, "people_holding_hands_medium_light_skin_tone_light_skin_ton": 32, "people_holding_hands_medium_light_skin_tone_medium_dark_skin_ton": 32, "people_holding_hands_medium_light_skin_tone_medium_skin_ton": 32, "people_holding_hands_medium_skin_ton": 32, "people_holding_hands_medium_skin_tone_dark_skin_ton": 32, "people_holding_hands_medium_skin_tone_light_skin_ton": 32, "people_holding_hands_medium_skin_tone_medium_dark_skin_ton": 32, "people_holding_hands_medium_skin_tone_medium_light_skin_ton": 32, "people_holding_hands_tone1": 32, "people_holding_hands_tone1_tone2": 32, "people_holding_hands_tone1_tone3": 32, "people_holding_hands_tone1_tone4": 32, "people_holding_hands_tone1_tone5": 32, "people_holding_hands_tone2": 32, "people_holding_hands_tone2_tone1": 32, "people_holding_hands_tone2_tone3": 32, "people_holding_hands_tone2_tone4": 32, "people_holding_hands_tone2_tone5": 32, "people_holding_hands_tone3": 32, "people_holding_hands_tone3_tone1": 32, "people_holding_hands_tone3_tone2": 32, "people_holding_hands_tone3_tone4": 32, "people_holding_hands_tone3_tone5": 32, "people_holding_hands_tone4": 32, "people_holding_hands_tone4_tone1": 32, "people_holding_hands_tone4_tone2": 32, "people_holding_hands_tone4_tone3": 32, "people_holding_hands_tone4_tone5": 32, "people_holding_hands_tone5": 32, "people_holding_hands_tone5_tone1": 32, "people_holding_hands_tone5_tone2": 32, "people_holding_hands_tone5_tone3": 32, "people_holding_hands_tone5_tone4": 32, "people_hug": 32, "people_with_bunny_ears_parti": 32, "people_wrestl": 32, "performing_art": 32, "persever": 32, "person_bald": 32, "person_bik": 32, "person_biking_tone1": 32, "person_biking_tone2": 32, "person_biking_tone3": 32, "person_biking_tone4": 32, "person_biking_tone5": 32, "person_bouncing_bal": 32, "person_bouncing_ball_tone1": 32, "person_bouncing_ball_tone2": 32, "person_bouncing_ball_tone3": 32, "person_bouncing_ball_tone4": 32, "person_bouncing_ball_tone5": 32, "person_bow": 32, "person_bowing_tone1": 32, "person_bowing_tone2": 32, "person_bowing_tone3": 32, "person_bowing_tone4": 32, "person_bowing_tone5": 32, "person_climb": 32, "person_climbing_dark_skin_ton": 32, "person_climbing_light_skin_ton": 32, "person_climbing_medium_dark_skin_ton": 32, "person_climbing_medium_light_skin_ton": 32, "person_climbing_medium_skin_ton": 32, "person_climbing_tone1": 32, "person_climbing_tone2": 32, "person_climbing_tone3": 32, "person_climbing_tone4": 32, "person_climbing_tone5": 32, "person_curly_hair": 32, "person_dark_skin_tone_bald": 32, "person_dark_skin_tone_curly_hair": 32, "person_dark_skin_tone_red_hair": 32, "person_dark_skin_tone_white_hair": 32, "person_doing_cartwheel": 32, "person_doing_cartwheel_tone1": 32, "person_doing_cartwheel_tone2": 32, "person_doing_cartwheel_tone3": 32, "person_doing_cartwheel_tone4": 32, "person_doing_cartwheel_tone5": 32, "person_facepalm": 32, "person_facepalming_tone1": 32, "person_facepalming_tone2": 32, "person_facepalming_tone3": 32, "person_facepalming_tone4": 32, "person_facepalming_tone5": 32, "person_feeding_babi": 32, "person_feeding_baby_dark_skin_ton": 32, "person_feeding_baby_light_skin_ton": 32, "person_feeding_baby_medium_dark_skin_ton": 32, "person_feeding_baby_medium_light_skin_ton": 32, "person_feeding_baby_medium_skin_ton": 32, "person_feeding_baby_tone1": 32, "person_feeding_baby_tone2": 32, "person_feeding_baby_tone3": 32, "person_feeding_baby_tone4": 32, "person_feeding_baby_tone5": 32, "person_fenc": 32, "person_frown": 32, "person_frowning_tone1": 32, "person_frowning_tone2": 32, "person_frowning_tone3": 32, "person_frowning_tone4": 32, "person_frowning_tone5": 32, "person_gesturing_no": 32, "person_gesturing_no_tone1": 32, "person_gesturing_no_tone2": 32, "person_gesturing_no_tone3": 32, "person_gesturing_no_tone4": 32, "person_gesturing_no_tone5": 32, "person_gesturing_ok": 32, "person_gesturing_ok_tone1": 32, "person_gesturing_ok_tone2": 32, "person_gesturing_ok_tone3": 32, "person_gesturing_ok_tone4": 32, "person_gesturing_ok_tone5": 32, "person_getting_haircut": 32, "person_getting_haircut_tone1": 32, "person_getting_haircut_tone2": 32, "person_getting_haircut_tone3": 32, "person_getting_haircut_tone4": 32, "person_getting_haircut_tone5": 32, "person_getting_massag": 32, "person_getting_massage_tone1": 32, "person_getting_massage_tone2": 32, "person_getting_massage_tone3": 32, "person_getting_massage_tone4": 32, "person_getting_massage_tone5": 32, "person_golf": 32, "person_golfing_dark_skin_ton": 32, "person_golfing_light_skin_ton": 32, "person_golfing_medium_dark_skin_ton": 32, "person_golfing_medium_light_skin_ton": 32, "person_golfing_medium_skin_ton": 32, "person_golfing_tone1": 32, "person_golfing_tone2": 32, "person_golfing_tone3": 32, "person_golfing_tone4": 32, "person_golfing_tone5": 32, "person_in_bed_dark_skin_ton": 32, "person_in_bed_light_skin_ton": 32, "person_in_bed_medium_dark_skin_ton": 32, "person_in_bed_medium_light_skin_ton": 32, "person_in_bed_medium_skin_ton": 32, "person_in_bed_tone1": 32, "person_in_bed_tone2": 32, "person_in_bed_tone3": 32, "person_in_bed_tone4": 32, "person_in_bed_tone5": 32, "person_in_lotus_posit": 32, "person_in_lotus_position_dark_skin_ton": 32, "person_in_lotus_position_light_skin_ton": 32, "person_in_lotus_position_medium_dark_skin_ton": 32, "person_in_lotus_position_medium_light_skin_ton": 32, "person_in_lotus_position_medium_skin_ton": 32, "person_in_lotus_position_tone1": 32, "person_in_lotus_position_tone2": 32, "person_in_lotus_position_tone3": 32, "person_in_lotus_position_tone4": 32, "person_in_lotus_position_tone5": 32, "person_in_manual_wheelchair": 32, "person_in_manual_wheelchair_dark_skin_ton": 32, "person_in_manual_wheelchair_light_skin_ton": 32, "person_in_manual_wheelchair_medium_dark_skin_ton": 32, "person_in_manual_wheelchair_medium_light_skin_ton": 32, "person_in_manual_wheelchair_medium_skin_ton": 32, "person_in_manual_wheelchair_tone1": 32, "person_in_manual_wheelchair_tone2": 32, "person_in_manual_wheelchair_tone3": 32, "person_in_manual_wheelchair_tone4": 32, "person_in_manual_wheelchair_tone5": 32, "person_in_motorized_wheelchair": 32, "person_in_motorized_wheelchair_dark_skin_ton": 32, "person_in_motorized_wheelchair_light_skin_ton": 32, "person_in_motorized_wheelchair_medium_dark_skin_ton": 32, "person_in_motorized_wheelchair_medium_light_skin_ton": 32, "person_in_motorized_wheelchair_medium_skin_ton": 32, "person_in_motorized_wheelchair_tone1": 32, "person_in_motorized_wheelchair_tone2": 32, "person_in_motorized_wheelchair_tone3": 32, "person_in_motorized_wheelchair_tone4": 32, "person_in_motorized_wheelchair_tone5": 32, "person_in_steamy_room": 32, "person_in_steamy_room_dark_skin_ton": 32, "person_in_steamy_room_light_skin_ton": 32, "person_in_steamy_room_medium_dark_skin_ton": 32, "person_in_steamy_room_medium_light_skin_ton": 32, "person_in_steamy_room_medium_skin_ton": 32, "person_in_steamy_room_tone1": 32, "person_in_steamy_room_tone2": 32, "person_in_steamy_room_tone3": 32, "person_in_steamy_room_tone4": 32, "person_in_steamy_room_tone5": 32, "person_in_tuxedo": 32, "person_in_tuxedo_tone1": 32, "person_in_tuxedo_tone2": 32, "person_in_tuxedo_tone3": 32, "person_in_tuxedo_tone4": 32, "person_in_tuxedo_tone5": 32, "person_juggl": 32, "person_juggling_tone1": 32, "person_juggling_tone2": 32, "person_juggling_tone3": 32, "person_juggling_tone4": 32, "person_juggling_tone5": 32, "person_kneel": 32, "person_kneeling_dark_skin_ton": 32, "person_kneeling_light_skin_ton": 32, "person_kneeling_medium_dark_skin_ton": 32, "person_kneeling_medium_light_skin_ton": 32, "person_kneeling_medium_skin_ton": 32, "person_kneeling_tone1": 32, "person_kneeling_tone2": 32, "person_kneeling_tone3": 32, "person_kneeling_tone4": 32, "person_kneeling_tone5": 32, "person_lifting_weight": 32, "person_lifting_weights_tone1": 32, "person_lifting_weights_tone2": 32, "person_lifting_weights_tone3": 32, "person_lifting_weights_tone4": 32, "person_lifting_weights_tone5": 32, "person_light_skin_tone_bald": 32, "person_light_skin_tone_curly_hair": 32, "person_light_skin_tone_red_hair": 32, "person_light_skin_tone_white_hair": 32, "person_medium_dark_skin_tone_bald": 32, "person_medium_dark_skin_tone_curly_hair": 32, "person_medium_dark_skin_tone_red_hair": 32, "person_medium_dark_skin_tone_white_hair": 32, "person_medium_light_skin_tone_bald": 32, "person_medium_light_skin_tone_curly_hair": 32, "person_medium_light_skin_tone_red_hair": 32, "person_medium_light_skin_tone_white_hair": 32, "person_medium_skin_tone_bald": 32, "person_medium_skin_tone_curly_hair": 32, "person_medium_skin_tone_red_hair": 32, "person_medium_skin_tone_white_hair": 32, "person_mountain_bik": 32, "person_mountain_biking_tone1": 32, "person_mountain_biking_tone2": 32, "person_mountain_biking_tone3": 32, "person_mountain_biking_tone4": 32, "person_mountain_biking_tone5": 32, "person_playing_handbal": 32, "person_playing_handball_tone1": 32, "person_playing_handball_tone2": 32, "person_playing_handball_tone3": 32, "person_playing_handball_tone4": 32, "person_playing_handball_tone5": 32, "person_playing_water_polo": 32, "person_playing_water_polo_tone1": 32, "person_playing_water_polo_tone2": 32, "person_playing_water_polo_tone3": 32, "person_playing_water_polo_tone4": 32, "person_playing_water_polo_tone5": 32, "person_pout": 32, "person_pouting_tone1": 32, "person_pouting_tone2": 32, "person_pouting_tone3": 32, "person_pouting_tone4": 32, "person_pouting_tone5": 32, "person_raising_hand": 32, "person_raising_hand_tone1": 32, "person_raising_hand_tone2": 32, "person_raising_hand_tone3": 32, "person_raising_hand_tone4": 32, "person_raising_hand_tone5": 32, "person_red_hair": 32, "person_rowing_boat": 32, "person_rowing_boat_tone1": 32, "person_rowing_boat_tone2": 32, "person_rowing_boat_tone3": 32, "person_rowing_boat_tone4": 32, "person_rowing_boat_tone5": 32, "person_run": 32, "person_running_tone1": 32, "person_running_tone2": 32, "person_running_tone3": 32, "person_running_tone4": 32, "person_running_tone5": 32, "person_shrug": 32, "person_shrugging_tone1": 32, "person_shrugging_tone2": 32, "person_shrugging_tone3": 32, "person_shrugging_tone4": 32, "person_shrugging_tone5": 32, "person_stand": 32, "person_standing_dark_skin_ton": 32, "person_standing_light_skin_ton": 32, "person_standing_medium_dark_skin_ton": 32, "person_standing_medium_light_skin_ton": 32, "person_standing_medium_skin_ton": 32, "person_standing_tone1": 32, "person_standing_tone2": 32, "person_standing_tone3": 32, "person_standing_tone4": 32, "person_standing_tone5": 32, "person_surf": 32, "person_surfing_tone1": 32, "person_surfing_tone2": 32, "person_surfing_tone3": 32, "person_surfing_tone4": 32, "person_surfing_tone5": 32, "person_swim": 32, "person_swimming_tone1": 32, "person_swimming_tone2": 32, "person_swimming_tone3": 32, "person_swimming_tone4": 32, "person_swimming_tone5": 32, "person_tipping_hand": 32, "person_tipping_hand_tone1": 32, "person_tipping_hand_tone2": 32, "person_tipping_hand_tone3": 32, "person_tipping_hand_tone4": 32, "person_tipping_hand_tone5": 32, "person_tone1_bald": 32, "person_tone1_curly_hair": 32, "person_tone1_red_hair": 32, "person_tone1_white_hair": 32, "person_tone2_bald": 32, "person_tone2_curly_hair": 32, "person_tone2_red_hair": 32, "person_tone2_white_hair": 32, "person_tone3_bald": 32, "person_tone3_curly_hair": 32, "person_tone3_red_hair": 32, "person_tone3_white_hair": 32, "person_tone4_bald": 32, "person_tone4_curly_hair": 32, "person_tone4_red_hair": 32, "person_tone4_white_hair": 32, "person_tone5_bald": 32, "person_tone5_curly_hair": 32, "person_tone5_red_hair": 32, "person_tone5_white_hair": 32, "person_walk": 32, "person_walking_tone1": 32, "person_walking_tone2": 32, "person_walking_tone3": 32, "person_walking_tone4": 32, "person_walking_tone5": 32, "person_wearing_turban": 32, "person_wearing_turban_tone1": 32, "person_wearing_turban_tone2": 32, "person_wearing_turban_tone3": 32, "person_wearing_turban_tone4": 32, "person_wearing_turban_tone5": 32, "person_white_hair": 32, "person_with_bal": 32, "person_with_ball_tone1": 32, "person_with_ball_tone2": 32, "person_with_ball_tone3": 32, "person_with_ball_tone4": 32, "person_with_ball_tone5": 32, "person_with_blond_hair": 32, "person_with_blond_hair_tone1": 32, "person_with_blond_hair_tone2": 32, "person_with_blond_hair_tone3": 32, "person_with_blond_hair_tone4": 32, "person_with_blond_hair_tone5": 32, "person_with_pouting_fac": 32, "person_with_pouting_face_tone1": 32, "person_with_pouting_face_tone2": 32, "person_with_pouting_face_tone3": 32, "person_with_pouting_face_tone4": 32, "person_with_pouting_face_tone5": 32, "person_with_probing_can": 32, "person_with_probing_cane_dark_skin_ton": 32, "person_with_probing_cane_light_skin_ton": 32, "person_with_probing_cane_medium_dark_skin_ton": 32, "person_with_probing_cane_medium_light_skin_ton": 32, "person_with_probing_cane_medium_skin_ton": 32, "person_with_probing_cane_tone1": 32, "person_with_probing_cane_tone2": 32, "person_with_probing_cane_tone3": 32, "person_with_probing_cane_tone4": 32, "person_with_probing_cane_tone5": 32, "person_with_veil": 32, "person_with_veil_tone1": 32, "person_with_veil_tone2": 32, "person_with_veil_tone3": 32, "person_with_veil_tone4": 32, "person_with_veil_tone5": 32, "peru": 32, "petri_dish": 32, "pf": [32, 157, 743], "pg": [32, 443], "ph": 32, "philippin": 32, "phone": 32, "pick": [32, 79, 147, 157, 164, 215, 453, 526, 966, 996, 1001], "pickup_truck": 32, "pie": 32, "pig2": 32, "pig_nos": 32, "pill": 32, "pilot": 32, "pilot_dark_skin_ton": 32, "pilot_light_skin_ton": 32, "pilot_medium_dark_skin_ton": 32, "pilot_medium_light_skin_ton": 32, "pilot_medium_skin_ton": 32, "pilot_tone1": 32, "pilot_tone2": 32, "pilot_tone3": 32, "pilot_tone4": 32, "pilot_tone5": 32, "pinched_fing": 32, "pinched_fingers_dark_skin_ton": 32, "pinched_fingers_light_skin_ton": 32, "pinched_fingers_medium_dark_skin_ton": 32, "pinched_fingers_medium_light_skin_ton": 32, "pinched_fingers_medium_skin_ton": 32, "pinched_fingers_tone1": 32, "pinched_fingers_tone2": 32, "pinched_fingers_tone3": 32, "pinched_fingers_tone4": 32, "pinched_fingers_tone5": 32, "pinching_hand": 32, "pinching_hand_dark_skin_ton": 32, "pinching_hand_light_skin_ton": 32, "pinching_hand_medium_dark_skin_ton": 32, "pinching_hand_medium_light_skin_ton": 32, "pinching_hand_medium_skin_ton": 32, "pinching_hand_tone1": 32, "pinching_hand_tone2": 32, "pinching_hand_tone3": 32, "pinching_hand_tone4": 32, "pinching_hand_tone5": 32, "pineappl": [32, 278], "ping_pong": 32, "pirate_flag": 32, "pisc": 32, "pitcairn_island": 32, "pizza": 32, "pi\u00f1ata": 32, "pk": 32, "pl": 32, "placard": 32, "place_of_worship": 32, "plate_with_cutleri": 32, "play_or_pause_button": 32, "play_paus": 32, "pleading_fac": 32, "plunger": 32, "pm": [32, 38, 322], "pn": 32, "point_down": 32, "point_down_tone1": 32, "point_down_tone2": 32, "point_down_tone3": 32, "point_down_tone4": 32, "point_down_tone5": 32, "point_left": 32, "point_left_tone1": 32, "point_left_tone2": 32, "point_left_tone3": 32, "point_left_tone4": 32, "point_left_tone5": 32, "point_right": 32, "point_right_tone1": 32, "point_right_tone2": 32, "point_right_tone3": 32, "point_right_tone4": 32, "point_right_tone5": 32, "point_up_2": 32, "point_up_2_tone1": 32, "point_up_2_tone2": 32, "point_up_2_tone3": 32, "point_up_2_tone4": 32, "point_up_2_tone5": 32, "point_up_tone1": 32, "point_up_tone2": 32, "point_up_tone3": 32, "point_up_tone4": 32, "point_up_tone5": 32, "poland": 32, "polar_bear": 32, "police_car": 32, "police_offic": 32, "police_officer_tone1": 32, "police_officer_tone2": 32, "police_officer_tone3": 32, "police_officer_tone4": 32, "police_officer_tone5": 32, "policeman": 32, "policewoman": 32, "poo": 32, "poodl": 32, "poop": 32, "popcorn": 32, "portug": 32, "post_offic": 32, "postal_horn": 32, "postbox": 32, "potato": 32, "potted_pl": 32, "pouch": 32, "poultry_leg": 32, "pound": [32, 36], "pound_symbol": 32, "pouting_cat": 32, "pouting_man": 32, "pouting_woman": 32, "pr": [32, 35, 242, 257], "prai": 32, "pray_tone1": 32, "pray_tone2": 32, "pray_tone3": 32, "pray_tone4": 32, "pray_tone5": 32, "prayer_bead": 32, "pregnant_woman": 32, "pregnant_woman_tone1": 32, "pregnant_woman_tone2": 32, "pregnant_woman_tone3": 32, "pregnant_woman_tone4": 32, "pregnant_woman_tone5": 32, "pretzel": 32, "previous_track": 32, "previous_track_button": 32, "princ": 32, "prince_tone1": 32, "prince_tone2": 32, "prince_tone3": 32, "prince_tone4": 32, "prince_tone5": 32, "princess": 32, "princess_tone1": 32, "princess_tone2": 32, "princess_tone3": 32, "princess_tone4": 32, "princess_tone5": 32, "printer": 32, "probing_can": 32, "projector": 32, "p": [32, 38, 64, 116, 134, 150, 154, 155, 159, 160, 166, 182, 194, 196, 197, 213, 226, 242, 246, 272, 274, 375, 409, 415, 418, 419, 422, 423, 427, 498, 523, 524, 526, 527, 569, 571, 574, 579, 580, 581, 582, 583, 585, 587, 588, 602, 610, 670, 673, 674, 677, 679, 682, 691, 692, 693, 695, 697, 698, 701, 702, 703, 709, 711, 712, 721, 725, 730, 741, 758, 761, 774, 810, 829, 837, 838, 847, 870, 872, 889, 892, 899, 909, 917, 926, 933, 944, 953, 968, 981, 996, 1003, 1005, 1065, 1143, 1167], "pt": [32, 729, 841, 968], "pud": 32, "puerto_rico": 32, "punch": 32, "punch_tone1": 32, "punch_tone2": 32, "punch_tone3": 32, "punch_tone4": 32, "punch_tone5": 32, "purple_circl": 32, "purple_heart": 32, "purple_squar": 32, "purs": 32, "pushpin": 32, "put_litter_in_its_plac": 32, "pw": 32, "qa": 32, "qatar": 32, "rabbit2": 32, "rabbit": 32, "raccoon": 32, "race_car": 32, "racehors": 32, "racing_car": 32, "racing_motorcycl": 32, "radio": 32, "radio_button": 32, "radioact": 32, "radioactive_sign": 32, "rage": 32, "railroad_track": 32, "railway_car": 32, "railway_track": 32, "rainbow": 32, "rainbow_flag": 32, "raised_back_of_hand": 32, "raised_back_of_hand_tone1": 32, "raised_back_of_hand_tone2": 32, "raised_back_of_hand_tone3": 32, "raised_back_of_hand_tone4": 32, "raised_back_of_hand_tone5": 32, "raised_hand": 32, "raised_hand_tone1": 32, "raised_hand_tone2": 32, "raised_hand_tone3": 32, "raised_hand_tone4": 32, "raised_hand_tone5": 32, "raised_hand_with_fingers_splai": 32, "raised_hand_with_fingers_splayed_tone1": 32, "raised_hand_with_fingers_splayed_tone2": 32, "raised_hand_with_fingers_splayed_tone3": 32, "raised_hand_with_fingers_splayed_tone4": 32, "raised_hand_with_fingers_splayed_tone5": 32, "raised_hand_with_part_between_middle_and_ring_fing": 32, "raised_hand_with_part_between_middle_and_ring_fingers_tone1": 32, "raised_hand_with_part_between_middle_and_ring_fingers_tone2": 32, "raised_hand_with_part_between_middle_and_ring_fingers_tone3": 32, "raised_hand_with_part_between_middle_and_ring_fingers_tone4": 32, "raised_hand_with_part_between_middle_and_ring_fingers_tone5": 32, "raised_hands_tone1": 32, "raised_hands_tone2": 32, "raised_hands_tone3": 32, "raised_hands_tone4": 32, "raised_hands_tone5": 32, "raising_hand": 32, "raising_hand_man": 32, "raising_hand_tone1": 32, "raising_hand_tone2": 32, "raising_hand_tone3": 32, "raising_hand_tone4": 32, "raising_hand_tone5": 32, "raising_hand_woman": 32, "ram": [32, 156, 157, 161, 279, 810, 846, 848, 932], "ramen": 32, "rat": 32, "razor": 32, "re": [32, 38, 64, 114, 121, 123, 156, 161, 193, 202, 205, 206, 216, 219, 226, 227, 229, 234, 236, 242, 246, 252, 254, 255, 264, 267, 271, 287, 288, 294, 316, 322, 342, 347, 405, 451, 452, 461, 469, 494, 524, 571, 577, 695, 717, 779, 815, 824, 829, 871, 960, 981, 996, 1000, 1005, 1010, 1029, 1052, 1103, 1108, 1130], "receipt": 32, "record_button": 32, "recycl": 32, "red_car": 32, "red_circl": 32, "red_envelop": 32, "red_hair": 32, "red_squar": 32, "regional_indicator_a": 32, "regional_indicator_b": 32, "regional_indicator_c": 32, "regional_indicator_d": 32, "regional_indicator_": 32, "regional_indicator_f": 32, "regional_indicator_g": 32, "regional_indicator_h": 32, "regional_indicator_i": 32, "regional_indicator_j": 32, "regional_indicator_k": 32, "regional_indicator_l": 32, "regional_indicator_m": 32, "regional_indicator_n": 32, "regional_indicator_o": 32, "regional_indicator_p": 32, "regional_indicator_q": 32, "regional_indicator_r": 32, "regional_indicator_t": 32, "regional_indicator_u": 32, "regional_indicator_v": 32, "regional_indicator_w": 32, "regional_indicator_x": 32, "regional_indicator_z": 32, "regist": [32, 36, 38, 154, 164, 172, 197, 201, 229, 242, 288, 328, 391, 425, 476, 504, 525, 527, 534, 766, 773, 781, 788, 794, 806, 897, 914, 930, 934, 1035, 1124], "relax": 32, "reliev": [32, 57], "reminder_ribbon": 32, "repeat": [32, 43, 101, 116, 134, 144, 160, 215, 270, 349, 439, 451, 587, 763, 810, 840, 870, 874, 878, 881, 884, 889, 890, 906, 919, 946, 1043], "repeat_on": 32, "rescue_worker_helmet": 32, "restroom": 32, "reunion": 32, "reversed_hand_with_middle_finger_extend": 32, "reversed_hand_with_middle_finger_extended_tone1": 32, "reversed_hand_with_middle_finger_extended_tone2": 32, "reversed_hand_with_middle_finger_extended_tone3": 32, "reversed_hand_with_middle_finger_extended_tone4": 32, "reversed_hand_with_middle_finger_extended_tone5": 32, "revolving_heart": 32, "rewind": [32, 334, 717], "rhino": 32, "rhinocero": 32, "ribbon": 32, "rice": 32, "rice_bal": 32, "rice_crack": 32, "rice_scen": 32, "right_anger_bubbl": 32, "right_facing_fist": 32, "right_facing_fist_tone1": 32, "right_facing_fist_tone2": 32, "right_facing_fist_tone3": 32, "right_facing_fist_tone4": 32, "right_facing_fist_tone5": 32, "right_fist": 32, "right_fist_tone1": 32, "right_fist_tone2": 32, "right_fist_tone3": 32, "right_fist_tone4": 32, "right_fist_tone5": 32, "ring": [32, 35, 38, 870], "ringed_planet": 32, "ro": 32, "robot": [32, 242], "robot_fac": 32, "rock": [32, 283, 449, 1000, 1002, 1137], "rocket": [32, 161], "rofl": 32, "roll_ey": 32, "roll_of_pap": 32, "rolled_up_newspap": 32, "roller_coast": 32, "roller_sk": 32, "rolling_on_the_floor_laugh": 32, "romania": 32, "rooster": 32, "rosett": 32, "rotating_light": 32, "round_pushpin": 32, "rowboat": 32, "rowboat_tone1": 32, "rowboat_tone2": 32, "rowboat_tone3": 32, "rowboat_tone4": 32, "rowboat_tone5": 32, "rowing_man": 32, "rowing_woman": 32, "ru": 32, "rugby_footbal": 32, "runner": [32, 44, 1148, 1179], "runner_tone1": 32, "runner_tone2": 32, "runner_tone3": 32, "runner_tone4": 32, "runner_tone5": 32, "running_man": 32, "running_shirt_with_sash": 32, "running_woman": 32, "russia": [32, 1121], "rw": [32, 62, 64, 155, 156, 165, 173, 242, 252, 458, 761, 766, 774, 841, 852, 855, 866, 869, 889, 892, 907, 914, 915, 916, 918, 927, 938, 941, 942, 950, 978, 984, 985, 986, 996, 998, 999, 1035, 1063], "rwanda": 32, "safety_pin": 32, "safety_vest": 32, "sagittariu": 32, "sailboat": 32, "saint_martin": 32, "sake": 32, "salad": 32, "salt": [32, 866], "samoa": 32, "san_marino": 32, "sandal": 32, "sandwich": 32, "santa": 32, "santa_tone1": 32, "santa_tone2": 32, "santa_tone3": 32, "santa_tone4": 32, "santa_tone5": 32, "sao_tome_princip": 32, "sari": 32, "satellit": 32, "satellite_orbit": 32, "saudi": 32, "saudi_arabia": 32, "saudiarabia": 32, "sauropod": 32, "saxophon": 32, "sb": [32, 271], "sc": [32, 35], "scale": [32, 79, 186, 232, 246, 439, 914, 987, 1000], "scarf": 32, "school": [32, 246, 510, 545, 1130, 1162], "school_satchel": 32, "scientist": [32, 186, 1032, 1113, 1114, 1115, 1122], "scientist_dark_skin_ton": 32, "scientist_light_skin_ton": 32, "scientist_medium_dark_skin_ton": 32, "scientist_medium_light_skin_ton": 32, "scientist_medium_skin_ton": 32, "scientist_tone1": 32, "scientist_tone2": 32, "scientist_tone3": 32, "scientist_tone4": 32, "scientist_tone5": 32, "scissor": 32, "scooter": 32, "scorpion": 32, "scorpiu": 32, "scotland": 32, "scream": [32, 215, 870], "scream_cat": 32, "screwdriv": 32, "scroll": [32, 160, 510], "sd": [32, 226, 242, 246, 249, 252, 267, 274, 284, 288, 310, 316, 322, 810], "se": [32, 574], "seal": 32, "seat": 32, "second_plac": 32, "second_place_med": 32, "secret": [32, 654, 675, 923, 1007, 1119], "see_no_evil": 32, "seedl": 32, "selfi": 32, "selfie_tone1": 32, "selfie_tone2": 32, "selfie_tone3": 32, "selfie_tone4": 32, "selfie_tone5": 32, "seneg": 32, "serbia": 32, "service_dog": 32, "seven": [32, 36, 85, 174, 187, 197, 205, 234, 322, 342, 1075, 1086], "sewing_needl": 32, "seychel": 32, "sg": 32, "sh": [32, 62, 161, 165, 254, 783, 837, 838, 855, 916, 938, 948, 1095], "shaking_hand": 32, "shaking_hands_tone1": 32, "shaking_hands_tone2": 32, "shaking_hands_tone3": 32, "shaking_hands_tone4": 32, "shaking_hands_tone5": 32, "shallow_pan_of_food": 32, "shamrock": 32, "shark": 32, "shaved_ic": 32, "sheep": 32, "shelled_peanut": 32, "shield": [32, 154], "shinto_shrin": 32, "ship": [32, 159], "shirt": [32, 43, 151], "shit": [32, 213], "shop": [32, 278], "shopping_bag": 32, "shopping_cart": 32, "shopping_trollei": 32, "shower": 32, "shrimp": 32, "shrug": 32, "shrug_tone1": 32, "shrug_tone2": 32, "shrug_tone3": 32, "shrug_tone4": 32, "shrug_tone5": 32, "shushing_fac": 32, "si": 32, "sick": [32, 473], "sierra_leon": 32, "sign_of_the_horn": 32, "sign_of_the_horns_tone1": 32, "sign_of_the_horns_tone2": 32, "sign_of_the_horns_tone3": 32, "sign_of_the_horns_tone4": 32, "sign_of_the_horns_tone5": 32, "signal_strength": 32, "singapor": 32, "singer": 32, "singer_dark_skin_ton": 32, "singer_light_skin_ton": 32, "singer_medium_dark_skin_ton": 32, "singer_medium_light_skin_ton": 32, "singer_medium_skin_ton": 32, "singer_tone1": 32, "singer_tone2": 32, "singer_tone3": 32, "singer_tone4": 32, "singer_tone5": 32, "sint_maarten": 32, "six": [32, 174, 187, 197, 205, 223, 322, 342, 1043], "six_pointed_star": 32, "sj": 32, "sk": 32, "skateboard": 32, "skeleton": [32, 157, 169, 452, 839], "ski": 32, "skier": 32, "skull": 32, "skull_and_crossbon": 32, "skull_crossbon": 32, "skunk": 32, "sl": [32, 334, 968], "sled": 32, "sleeping_accommod": 32, "sleeping_b": 32, "sleepi": 32, "sleuth_or_spi": 32, "sleuth_or_spy_tone1": 32, "sleuth_or_spy_tone2": 32, "sleuth_or_spy_tone3": 32, "sleuth_or_spy_tone4": 32, "sleuth_or_spy_tone5": 32, "slight_frown": 32, "slight_smil": 32, "slightly_frowning_fac": 32, "slightly_smiling_fac": 32, "slot_machin": 32, "sloth": 32, "slovakia": 32, "slovenia": [32, 221], "sm": 32, "small_airplan": 32, "small_blue_diamond": 32, "small_orange_diamond": 32, "small_red_triangl": 32, "small_red_triangle_down": 32, "smile": [32, 35], "smile_cat": 32, "smilei": [32, 64], "smiley_cat": 32, "smiling_face_with_3_heart": 32, "smiling_face_with_tear": 32, "smiling_imp": 32, "smirk": 32, "smirk_cat": 32, "smoke": 32, "sn": 32, "snail": 32, "snake": 32, "sneez": 32, "sneezing_fac": 32, "snow_capped_mountain": 32, "snowboard": 32, "snowboarder_dark_skin_ton": 32, "snowboarder_light_skin_ton": 32, "snowboarder_medium_dark_skin_ton": 32, "snowboarder_medium_light_skin_ton": 32, "snowboarder_medium_skin_ton": 32, "snowboarder_tone1": 32, "snowboarder_tone2": 32, "snowboarder_tone3": 32, "snowboarder_tone4": 32, "snowboarder_tone5": 32, "snowflak": 32, "snowman2": 32, "snowman": 32, "snowman_with_snow": 32, "sob": 32, "soccer": 32, "sock": 32, "softbal": 32, "solomon_island": 32, "somalia": 32, "soon": [32, 155, 156, 161, 574, 661, 810, 916, 968, 982, 1124], "sound": [32, 59, 63, 153, 157, 160, 161, 230, 731, 852, 907, 915, 916, 1142], "south_africa": 32, "south_georgia_south_sandwich_island": 32, "south_sudan": 32, "space_invad": 32, "spade": [32, 38], "spaghetti": [32, 121, 439, 450], "spain": 32, "sparkl": 32, "sparkler": 32, "sparkling_heart": 32, "speak_no_evil": 32, "speaker": [32, 748], "speaking_head": 32, "speaking_head_in_silhouett": 32, "speech_balloon": 32, "speech_left": 32, "speedboat": 32, "spider": 32, "spider_web": 32, "spiral_calendar": 32, "spiral_calendar_pad": 32, "spiral_note_pad": 32, "spiral_notepad": 32, "spong": 32, "spoon": 32, "sports_med": 32, "spy": 32, "spy_tone1": 32, "spy_tone2": 32, "spy_tone3": 32, "spy_tone4": 32, "spy_tone5": 32, "squeeze_bottl": 32, "squid": 32, "sr": [32, 226, 1065], "sri_lanka": 32, "st": [32, 220, 451, 978, 980, 981], "st_barthelemi": 32, "st_helena": 32, "st_kitts_nevi": 32, "st_lucia": 32, "st_pierre_miquelon": 32, "st_vincent_grenadin": 32, "stadium": 32, "star2": 32, "star": [32, 38, 611, 916, 998], "star_and_cresc": 32, "star_of_david": 32, "star_struck": 32, "station": 32, "statue_of_liberti": 32, "steam_locomot": 32, "stethoscop": 32, "stew": 32, "stop_button": 32, "stop_sign": 32, "stopwatch": 32, "straight_rul": 32, "strawberri": 32, "stuck_out_tongu": 32, "stuck_out_tongue_closed_ey": 32, "stuck_out_tongue_winking_ey": 32, "student": [32, 102, 107, 116, 134, 161, 254, 327, 328, 333, 334, 342, 1008, 1143], "student_dark_skin_ton": 32, "student_light_skin_ton": 32, "student_medium_dark_skin_ton": 32, "student_medium_light_skin_ton": 32, "student_medium_skin_ton": 32, "student_tone1": 32, "student_tone2": 32, "student_tone3": 32, "student_tone4": 32, "student_tone5": 32, "studio_microphon": 32, "stuffed_flatbread": 32, "stuffed_pita": 32, "sudan": 32, "sun_behind_large_cloud": 32, "sun_behind_rain_cloud": 32, "sun_behind_small_cloud": 32, "sun_with_fac": 32, "sunflow": 32, "sunni": [32, 110, 273, 276, 515, 526, 532, 534, 567, 763, 963, 1007], "sunris": 32, "sunrise_over_mountain": 32, "superhero": 32, "superhero_dark_skin_ton": 32, "superhero_light_skin_ton": 32, "superhero_medium_dark_skin_ton": 32, "superhero_medium_light_skin_ton": 32, "superhero_medium_skin_ton": 32, "superhero_tone1": 32, "superhero_tone2": 32, "superhero_tone3": 32, "superhero_tone4": 32, "superhero_tone5": 32, "supervillain": 32, "supervillain_dark_skin_ton": 32, "supervillain_light_skin_ton": 32, "supervillain_medium_dark_skin_ton": 32, "supervillain_medium_light_skin_ton": 32, "supervillain_medium_skin_ton": 32, "supervillain_tone1": 32, "supervillain_tone2": 32, "supervillain_tone3": 32, "supervillain_tone4": 32, "supervillain_tone5": 32, "surfer": 32, "surfer_tone1": 32, "surfer_tone2": 32, "surfer_tone3": 32, "surfer_tone4": 32, "surfer_tone5": 32, "surfing_man": 32, "surfing_woman": 32, "surinam": 32, "sushi": 32, "suspension_railwai": 32, "sv": [32, 493, 494], "swan": 32, "swaziland": 32, "sweat": 32, "sweat_drop": 32, "sweat_smil": 32, "sweden": 32, "sweet_potato": 32, "swimmer": 32, "swimmer_tone1": 32, "swimmer_tone2": 32, "swimmer_tone3": 32, "swimmer_tone4": 32, "swimmer_tone5": 32, "swimming_man": 32, "swimming_woman": 32, "switzerland": 32, "sx": 32, "symbol": [32, 33, 38, 116, 165, 194, 215, 223, 229, 232, 239, 242, 260, 269, 270, 290, 291, 380, 395, 404, 411, 417, 421, 424, 428, 431, 432, 437, 441, 446, 447, 669, 707, 713, 760, 761, 762, 763, 766, 785, 788, 810, 840, 855, 870, 890, 892, 906, 915, 1015], "synagogu": 32, "syria": 32, "syring": 32, "sz": [32, 156, 159], "t_rex": 32, "ta": 32, "table_tenni": 32, "taco": 32, "tada": 32, "taiwan": 32, "tajikistan": 32, "takeout_box": 32, "tamal": 32, "tanabata_tre": 32, "tangerin": 32, "tanzania": 32, "tauru": 32, "taxi": 32, "tc": 32, "td": [32, 218], "tea": 32, "teacher": [32, 107, 159, 455, 457, 837, 838, 996], "teacher_dark_skin_ton": 32, "teacher_light_skin_ton": 32, "teacher_medium_dark_skin_ton": 32, "teacher_medium_light_skin_ton": 32, "teacher_medium_skin_ton": 32, "teacher_tone1": 32, "teacher_tone2": 32, "teacher_tone3": 32, "teacher_tone4": 32, "teacher_tone5": 32, "teapot": 32, "technologist": 32, "technologist_dark_skin_ton": 32, "technologist_light_skin_ton": 32, "technologist_medium_dark_skin_ton": 32, "technologist_medium_light_skin_ton": 32, "technologist_medium_skin_ton": 32, "technologist_tone1": 32, "technologist_tone2": 32, "technologist_tone3": 32, "technologist_tone4": 32, "technologist_tone5": 32, "teddy_bear": 32, "telephon": 32, "telephone_receiv": 32, "telescop": 32, "ten": [32, 156, 177, 197, 236, 242, 901], "tenni": 32, "tent": 32, "test_tub": 32, "tf": [32, 249, 836, 1005], "tg": 32, "th": [32, 190, 218, 373, 415, 524, 602, 1045, 1054], "thailand": 32, "thermomet": [32, 70, 83, 85, 86, 181, 190, 242, 262, 346, 348, 349, 351, 466, 473, 476, 478, 487, 488, 501, 515, 555, 556, 564, 567, 642, 645, 763, 916], "thermometer_fac": 32, "thinking_fac": 32, "third_plac": 32, "third_place_med": 32, "thong_sand": 32, "thought_balloon": 32, "thread": [32, 59, 63, 66, 84, 90, 92, 159, 171, 172, 181, 186, 190, 201, 223, 229, 230, 232, 239, 242, 257, 258, 259, 261, 270, 279, 281, 305, 318, 319, 352, 355, 356, 357, 445, 474, 491, 505, 568, 709, 717, 726, 728, 735, 737, 740, 741, 762, 763, 792, 802, 808, 822, 830, 906, 928, 947, 955, 957, 958, 960, 962, 966, 967, 969, 980, 981, 982, 1018, 1019, 1108, 1150, 1160, 1161, 1162, 1164, 1176, 1177, 1178], "three_button_mous": 32, "thumbdown": 32, "thumbdown_tone1": 32, "thumbdown_tone2": 32, "thumbdown_tone3": 32, "thumbdown_tone4": 32, "thumbdown_tone5": 32, "thumbsdown_tone1": 32, "thumbsdown_tone2": 32, "thumbsdown_tone3": 32, "thumbsdown_tone4": 32, "thumbsdown_tone5": 32, "thumbsup_tone1": 32, "thumbsup_tone2": 32, "thumbsup_tone3": 32, "thumbsup_tone4": 32, "thumbsup_tone5": 32, "thumbup": 32, "thumbup_tone1": 32, "thumbup_tone2": 32, "thumbup_tone3": 32, "thumbup_tone4": 32, "thumbup_tone5": 32, "thunder_cloud_and_rain": 32, "thunder_cloud_rain": 32, "ticket": 32, "tiger2": 32, "tiger": 32, "timer": [32, 59, 63, 66, 116, 128, 178, 279, 430, 742, 763, 787, 812, 819, 825, 828, 829, 831, 843, 846, 906, 915, 931, 935, 947, 966, 972, 974, 982, 1175, 1178], "timer_clock": 32, "timor_lest": 32, "tipping_hand_man": 32, "tipping_hand_woman": 32, "tired_fac": 32, "tj": 32, "tk": 32, "tl": [32, 159], "tm": 32, "tn": [32, 194], "togo": 32, "toilet": [32, 232, 545, 800, 1018], "tokelau": 32, "tokyo_tow": 32, "tomato": 32, "tone1": 32, "tone2": 32, "tone3": 32, "tone4": 32, "tone5": 32, "tonga": 32, "tongu": [32, 1161], "toolbox": [32, 175], "tooth": 32, "toothbrush": 32, "tophat": 32, "tornado": 32, "tr": [32, 218], "track_next": 32, "track_previ": 32, "trackbal": 32, "tractor": 32, "traffic_light": 32, "train2": 32, "tram": 32, "transgender_flag": 32, "transgender_symbol": 32, "triangular_flag_on_post": 32, "triangular_rul": 32, "trident": 32, "trinidad_tobago": 32, "tristan_da_cunha": 32, "triumph": 32, "trolleybu": 32, "trophi": 32, "tropical_drink": 32, "tropical_fish": 32, "truck": 32, "trumpet": 32, "tt": 32, "tulip": 32, "tumbler_glass": 32, "tunisia": 32, "turkei": 32, "turkmenistan": 32, "turks_caicos_island": 32, "turtl": 32, "tuvalu": 32, "tuxedo_tone1": 32, "tuxedo_tone2": 32, "tuxedo_tone3": 32, "tuxedo_tone4": 32, "tuxedo_tone5": 32, "tw": 32, "twisted_rightwards_arrow": 32, "two_heart": 32, "two_men_holding_hand": 32, "two_women_holding_hand": 32, "tz": 32, "u5272": 32, "u5408": 32, "u55b6": 32, "u6307": 32, "u6708": 32, "u6709": 32, "u6e80": 32, "u7121": 32, "u7533": 32, "u7981": 32, "u7a7a": 32, "ua": [32, 221, 230, 305], "ug": 32, "uganda": 32, "ukrain": 32, "umbrella2": 32, "umbrella": 32, "umbrella_on_ground": 32, "unamus": 32, "underag": 32, "unicorn": 32, "unicorn_fac": 32, "united_arab_emir": 32, "united_n": 32, "united_st": 32, "unlock": [32, 737, 739, 741, 802, 808, 955, 1173], "upside_down": 32, "upside_down_fac": 32, "urn": 32, "uruguai": 32, "us_virgin_island": 32, "uz": 32, "uzbekistan": 32, "v_tone1": 32, "v_tone2": 32, "v_tone3": 32, "v_tone4": 32, "v_tone5": 32, "va": [32, 273, 276], "vampir": 32, "vampire_dark_skin_ton": 32, "vampire_light_skin_ton": 32, "vampire_medium_dark_skin_ton": 32, "vampire_medium_light_skin_ton": 32, "vampire_medium_skin_ton": 32, "vampire_tone1": 32, "vampire_tone2": 32, "vampire_tone3": 32, "vampire_tone4": 32, "vampire_tone5": 32, "vanuatu": 32, "vatican_c": 32, "vc": [32, 136, 160], "ve": [32, 154, 156, 852, 1142], "venezuela": 32, "vertical_traffic_light": 32, "vg": 32, "vh": 32, "vi": [32, 743], "vibration_mod": 32, "video_camera": 32, "video_gam": 32, "vietnam": 32, "violin": 32, "virgo": 32, "vn": 32, "volcano": 32, "volleybal": 32, "vu": 32, "vulcan": 32, "vulcan_salut": 32, "vulcan_tone1": 32, "vulcan_tone2": 32, "vulcan_tone3": 32, "vulcan_tone4": 32, "vulcan_tone5": 32, "waffl": 32, "wale": 32, "walk": [32, 153, 173, 186, 282, 283, 304, 349, 360, 667, 684, 854, 916, 1020], "walking_man": 32, "walking_tone1": 32, "walking_tone2": 32, "walking_tone3": 32, "walking_tone4": 32, "walking_tone5": 32, "walking_woman": 32, "wallis_futuna": 32, "waning_crescent_moon": 32, "waning_gibbous_moon": 32, "wastebasket": 32, "water_buffalo": 32, "water_polo": 32, "water_polo_tone1": 32, "water_polo_tone2": 32, "water_polo_tone3": 32, "water_polo_tone4": 32, "water_polo_tone5": 32, "watermelon": [32, 278], "wave": [32, 34, 38, 270, 287], "wave_tone1": 32, "wave_tone2": 32, "wave_tone3": 32, "wave_tone4": 32, "wave_tone5": 32, "waving_black_flag": 32, "waving_white_flag": 32, "wavy_dash": 32, "waxing_crescent_moon": 32, "waxing_gibbous_moon": 32, "wc": [32, 214, 215, 232, 252, 380, 395, 404, 411, 417, 421, 424, 428, 437, 441, 446, 447, 451, 669, 707, 760, 762, 763, 850, 853, 903, 917, 1092], "weari": 32, "wed": [32, 213], "weight_lift": 32, "weight_lifter_tone1": 32, "weight_lifter_tone2": 32, "weight_lifter_tone3": 32, "weight_lifter_tone4": 32, "weight_lifter_tone5": 32, "weight_lifting_man": 32, "weight_lifting_woman": 32, "western_sahara": 32, "wf": 32, "whale2": 32, "whale": 32, "wheel_of_dharma": 32, "wheelchair": 32, "whiski": 32, "white_check_mark": 32, "white_circl": 32, "white_flag": 32, "white_flow": 32, "white_frowning_fac": 32, "white_hair": 32, "white_heart": 32, "white_large_squar": 32, "white_medium_small_squar": 32, "white_medium_squar": 32, "white_small_squar": 32, "white_square_button": 32, "white_sun_behind_cloud": 32, "white_sun_behind_cloud_with_rain": 32, "white_sun_cloud": 32, "white_sun_rain_cloud": 32, "white_sun_small_cloud": 32, "white_sun_with_small_cloud": 32, "wilted_flow": 32, "wilted_ros": 32, "wind_blowing_fac": 32, "wind_chim": 32, "wind_fac": 32, "wine_glass": 32, "wolf": 32, "woman": 32, "woman_and_man_holding_hands_dark_skin_ton": 32, "woman_and_man_holding_hands_dark_skin_tone_light_skin_ton": 32, "woman_and_man_holding_hands_dark_skin_tone_medium_dark_skin_ton": 32, "woman_and_man_holding_hands_dark_skin_tone_medium_light_skin_ton": 32, "woman_and_man_holding_hands_dark_skin_tone_medium_skin_ton": 32, "woman_and_man_holding_hands_light_skin_ton": 32, "woman_and_man_holding_hands_light_skin_tone_dark_skin_ton": 32, "woman_and_man_holding_hands_light_skin_tone_medium_dark_skin_ton": 32, "woman_and_man_holding_hands_light_skin_tone_medium_light_skin_ton": 32, "woman_and_man_holding_hands_light_skin_tone_medium_skin_ton": 32, "woman_and_man_holding_hands_medium_dark_skin_ton": 32, "woman_and_man_holding_hands_medium_dark_skin_tone_dark_skin_ton": 32, "woman_and_man_holding_hands_medium_dark_skin_tone_light_skin_ton": 32, "woman_and_man_holding_hands_medium_dark_skin_tone_medium_light_skin_ton": 32, "woman_and_man_holding_hands_medium_dark_skin_tone_medium_skin_ton": 32, "woman_and_man_holding_hands_medium_light_skin_ton": 32, "woman_and_man_holding_hands_medium_light_skin_tone_dark_skin_ton": 32, "woman_and_man_holding_hands_medium_light_skin_tone_light_skin_ton": 32, "woman_and_man_holding_hands_medium_light_skin_tone_medium_dark_skin_ton": 32, "woman_and_man_holding_hands_medium_light_skin_tone_medium_skin_ton": 32, "woman_and_man_holding_hands_medium_skin_ton": 32, "woman_and_man_holding_hands_medium_skin_tone_dark_skin_ton": 32, "woman_and_man_holding_hands_medium_skin_tone_light_skin_ton": 32, "woman_and_man_holding_hands_medium_skin_tone_medium_dark_skin_ton": 32, "woman_and_man_holding_hands_medium_skin_tone_medium_light_skin_ton": 32, "woman_and_man_holding_hands_tone1": 32, "woman_and_man_holding_hands_tone1_tone2": 32, "woman_and_man_holding_hands_tone1_tone3": 32, "woman_and_man_holding_hands_tone1_tone4": 32, "woman_and_man_holding_hands_tone1_tone5": 32, "woman_and_man_holding_hands_tone2": 32, "woman_and_man_holding_hands_tone2_tone1": 32, "woman_and_man_holding_hands_tone2_tone3": 32, "woman_and_man_holding_hands_tone2_tone4": 32, "woman_and_man_holding_hands_tone2_tone5": 32, "woman_and_man_holding_hands_tone3": 32, "woman_and_man_holding_hands_tone3_tone1": 32, "woman_and_man_holding_hands_tone3_tone2": 32, "woman_and_man_holding_hands_tone3_tone4": 32, "woman_and_man_holding_hands_tone3_tone5": 32, "woman_and_man_holding_hands_tone4": 32, "woman_and_man_holding_hands_tone4_tone1": 32, "woman_and_man_holding_hands_tone4_tone2": 32, "woman_and_man_holding_hands_tone4_tone3": 32, "woman_and_man_holding_hands_tone4_tone5": 32, "woman_and_man_holding_hands_tone5": 32, "woman_and_man_holding_hands_tone5_tone1": 32, "woman_and_man_holding_hands_tone5_tone2": 32, "woman_and_man_holding_hands_tone5_tone3": 32, "woman_and_man_holding_hands_tone5_tone4": 32, "woman_artist": 32, "woman_artist_dark_skin_ton": 32, "woman_artist_light_skin_ton": 32, "woman_artist_medium_dark_skin_ton": 32, "woman_artist_medium_light_skin_ton": 32, "woman_artist_medium_skin_ton": 32, "woman_artist_tone1": 32, "woman_artist_tone2": 32, "woman_artist_tone3": 32, "woman_artist_tone4": 32, "woman_artist_tone5": 32, "woman_astronaut": 32, "woman_astronaut_dark_skin_ton": 32, "woman_astronaut_light_skin_ton": 32, "woman_astronaut_medium_dark_skin_ton": 32, "woman_astronaut_medium_light_skin_ton": 32, "woman_astronaut_medium_skin_ton": 32, "woman_astronaut_tone1": 32, "woman_astronaut_tone2": 32, "woman_astronaut_tone3": 32, "woman_astronaut_tone4": 32, "woman_astronaut_tone5": 32, "woman_bald": 32, "woman_bald_dark_skin_ton": 32, "woman_bald_light_skin_ton": 32, "woman_bald_medium_dark_skin_ton": 32, "woman_bald_medium_light_skin_ton": 32, "woman_bald_medium_skin_ton": 32, "woman_bald_tone1": 32, "woman_bald_tone2": 32, "woman_bald_tone3": 32, "woman_bald_tone4": 32, "woman_bald_tone5": 32, "woman_beard": 32, "woman_bik": 32, "woman_biking_dark_skin_ton": 32, "woman_biking_light_skin_ton": 32, "woman_biking_medium_dark_skin_ton": 32, "woman_biking_medium_light_skin_ton": 32, "woman_biking_medium_skin_ton": 32, "woman_biking_tone1": 32, "woman_biking_tone2": 32, "woman_biking_tone3": 32, "woman_biking_tone4": 32, "woman_biking_tone5": 32, "woman_bouncing_bal": 32, "woman_bouncing_ball_dark_skin_ton": 32, "woman_bouncing_ball_light_skin_ton": 32, "woman_bouncing_ball_medium_dark_skin_ton": 32, "woman_bouncing_ball_medium_light_skin_ton": 32, "woman_bouncing_ball_medium_skin_ton": 32, "woman_bouncing_ball_tone1": 32, "woman_bouncing_ball_tone2": 32, "woman_bouncing_ball_tone3": 32, "woman_bouncing_ball_tone4": 32, "woman_bouncing_ball_tone5": 32, "woman_bow": 32, "woman_bowing_dark_skin_ton": 32, "woman_bowing_light_skin_ton": 32, "woman_bowing_medium_dark_skin_ton": 32, "woman_bowing_medium_light_skin_ton": 32, "woman_bowing_medium_skin_ton": 32, "woman_bowing_tone1": 32, "woman_bowing_tone2": 32, "woman_bowing_tone3": 32, "woman_bowing_tone4": 32, "woman_bowing_tone5": 32, "woman_cartwheel": 32, "woman_cartwheeling_dark_skin_ton": 32, "woman_cartwheeling_light_skin_ton": 32, "woman_cartwheeling_medium_dark_skin_ton": 32, "woman_cartwheeling_medium_light_skin_ton": 32, "woman_cartwheeling_medium_skin_ton": 32, "woman_cartwheeling_tone1": 32, "woman_cartwheeling_tone2": 32, "woman_cartwheeling_tone3": 32, "woman_cartwheeling_tone4": 32, "woman_cartwheeling_tone5": 32, "woman_climb": 32, "woman_climbing_dark_skin_ton": 32, "woman_climbing_light_skin_ton": 32, "woman_climbing_medium_dark_skin_ton": 32, "woman_climbing_medium_light_skin_ton": 32, "woman_climbing_medium_skin_ton": 32, "woman_climbing_tone1": 32, "woman_climbing_tone2": 32, "woman_climbing_tone3": 32, "woman_climbing_tone4": 32, "woman_climbing_tone5": 32, "woman_construction_work": 32, "woman_construction_worker_dark_skin_ton": 32, "woman_construction_worker_light_skin_ton": 32, "woman_construction_worker_medium_dark_skin_ton": 32, "woman_construction_worker_medium_light_skin_ton": 32, "woman_construction_worker_medium_skin_ton": 32, "woman_construction_worker_tone1": 32, "woman_construction_worker_tone2": 32, "woman_construction_worker_tone3": 32, "woman_construction_worker_tone4": 32, "woman_construction_worker_tone5": 32, "woman_cook": 32, "woman_cook_dark_skin_ton": 32, "woman_cook_light_skin_ton": 32, "woman_cook_medium_dark_skin_ton": 32, "woman_cook_medium_light_skin_ton": 32, "woman_cook_medium_skin_ton": 32, "woman_cook_tone1": 32, "woman_cook_tone2": 32, "woman_cook_tone3": 32, "woman_cook_tone4": 32, "woman_cook_tone5": 32, "woman_curly_hair": 32, "woman_curly_haired_dark_skin_ton": 32, "woman_curly_haired_light_skin_ton": 32, "woman_curly_haired_medium_dark_skin_ton": 32, "woman_curly_haired_medium_light_skin_ton": 32, "woman_curly_haired_medium_skin_ton": 32, "woman_curly_haired_tone1": 32, "woman_curly_haired_tone2": 32, "woman_curly_haired_tone3": 32, "woman_curly_haired_tone4": 32, "woman_curly_haired_tone5": 32, "woman_dark_skin_tone_beard": 32, "woman_detect": 32, "woman_detective_dark_skin_ton": 32, "woman_detective_light_skin_ton": 32, "woman_detective_medium_dark_skin_ton": 32, "woman_detective_medium_light_skin_ton": 32, "woman_detective_medium_skin_ton": 32, "woman_detective_tone1": 32, "woman_detective_tone2": 32, "woman_detective_tone3": 32, "woman_detective_tone4": 32, "woman_detective_tone5": 32, "woman_elf": 32, "woman_elf_dark_skin_ton": 32, "woman_elf_light_skin_ton": 32, "woman_elf_medium_dark_skin_ton": 32, "woman_elf_medium_light_skin_ton": 32, "woman_elf_medium_skin_ton": 32, "woman_elf_tone1": 32, "woman_elf_tone2": 32, "woman_elf_tone3": 32, "woman_elf_tone4": 32, "woman_elf_tone5": 32, "woman_facepalm": 32, "woman_facepalming_dark_skin_ton": 32, "woman_facepalming_light_skin_ton": 32, "woman_facepalming_medium_dark_skin_ton": 32, "woman_facepalming_medium_light_skin_ton": 32, "woman_facepalming_medium_skin_ton": 32, "woman_facepalming_tone1": 32, "woman_facepalming_tone2": 32, "woman_facepalming_tone3": 32, "woman_facepalming_tone4": 32, "woman_facepalming_tone5": 32, "woman_factory_work": 32, "woman_factory_worker_dark_skin_ton": 32, "woman_factory_worker_light_skin_ton": 32, "woman_factory_worker_medium_dark_skin_ton": 32, "woman_factory_worker_medium_light_skin_ton": 32, "woman_factory_worker_medium_skin_ton": 32, "woman_factory_worker_tone1": 32, "woman_factory_worker_tone2": 32, "woman_factory_worker_tone3": 32, "woman_factory_worker_tone4": 32, "woman_factory_worker_tone5": 32, "woman_fairi": 32, "woman_fairy_dark_skin_ton": 32, "woman_fairy_light_skin_ton": 32, "woman_fairy_medium_dark_skin_ton": 32, "woman_fairy_medium_light_skin_ton": 32, "woman_fairy_medium_skin_ton": 32, "woman_fairy_tone1": 32, "woman_fairy_tone2": 32, "woman_fairy_tone3": 32, "woman_fairy_tone4": 32, "woman_fairy_tone5": 32, "woman_farm": 32, "woman_farmer_dark_skin_ton": 32, "woman_farmer_light_skin_ton": 32, "woman_farmer_medium_dark_skin_ton": 32, "woman_farmer_medium_light_skin_ton": 32, "woman_farmer_medium_skin_ton": 32, "woman_farmer_tone1": 32, "woman_farmer_tone2": 32, "woman_farmer_tone3": 32, "woman_farmer_tone4": 32, "woman_farmer_tone5": 32, "woman_feeding_babi": 32, "woman_feeding_baby_dark_skin_ton": 32, "woman_feeding_baby_light_skin_ton": 32, "woman_feeding_baby_medium_dark_skin_ton": 32, "woman_feeding_baby_medium_light_skin_ton": 32, "woman_feeding_baby_medium_skin_ton": 32, "woman_feeding_baby_tone1": 32, "woman_feeding_baby_tone2": 32, "woman_feeding_baby_tone3": 32, "woman_feeding_baby_tone4": 32, "woman_feeding_baby_tone5": 32, "woman_firefight": 32, "woman_firefighter_dark_skin_ton": 32, "woman_firefighter_light_skin_ton": 32, "woman_firefighter_medium_dark_skin_ton": 32, "woman_firefighter_medium_light_skin_ton": 32, "woman_firefighter_medium_skin_ton": 32, "woman_firefighter_tone1": 32, "woman_firefighter_tone2": 32, "woman_firefighter_tone3": 32, "woman_firefighter_tone4": 32, "woman_firefighter_tone5": 32, "woman_frown": 32, "woman_frowning_dark_skin_ton": 32, "woman_frowning_light_skin_ton": 32, "woman_frowning_medium_dark_skin_ton": 32, "woman_frowning_medium_light_skin_ton": 32, "woman_frowning_medium_skin_ton": 32, "woman_frowning_tone1": 32, "woman_frowning_tone2": 32, "woman_frowning_tone3": 32, "woman_frowning_tone4": 32, "woman_frowning_tone5": 32, "woman_geni": 32, "woman_gesturing_no": 32, "woman_gesturing_no_dark_skin_ton": 32, "woman_gesturing_no_light_skin_ton": 32, "woman_gesturing_no_medium_dark_skin_ton": 32, "woman_gesturing_no_medium_light_skin_ton": 32, "woman_gesturing_no_medium_skin_ton": 32, "woman_gesturing_no_tone1": 32, "woman_gesturing_no_tone2": 32, "woman_gesturing_no_tone3": 32, "woman_gesturing_no_tone4": 32, "woman_gesturing_no_tone5": 32, "woman_gesturing_ok": 32, "woman_gesturing_ok_dark_skin_ton": 32, "woman_gesturing_ok_light_skin_ton": 32, "woman_gesturing_ok_medium_dark_skin_ton": 32, "woman_gesturing_ok_medium_light_skin_ton": 32, "woman_gesturing_ok_medium_skin_ton": 32, "woman_gesturing_ok_tone1": 32, "woman_gesturing_ok_tone2": 32, "woman_gesturing_ok_tone3": 32, "woman_gesturing_ok_tone4": 32, "woman_gesturing_ok_tone5": 32, "woman_getting_face_massag": 32, "woman_getting_face_massage_dark_skin_ton": 32, "woman_getting_face_massage_light_skin_ton": 32, "woman_getting_face_massage_medium_dark_skin_ton": 32, "woman_getting_face_massage_medium_light_skin_ton": 32, "woman_getting_face_massage_medium_skin_ton": 32, "woman_getting_face_massage_tone1": 32, "woman_getting_face_massage_tone2": 32, "woman_getting_face_massage_tone3": 32, "woman_getting_face_massage_tone4": 32, "woman_getting_face_massage_tone5": 32, "woman_getting_haircut": 32, "woman_getting_haircut_dark_skin_ton": 32, "woman_getting_haircut_light_skin_ton": 32, "woman_getting_haircut_medium_dark_skin_ton": 32, "woman_getting_haircut_medium_light_skin_ton": 32, "woman_getting_haircut_medium_skin_ton": 32, "woman_getting_haircut_tone1": 32, "woman_getting_haircut_tone2": 32, "woman_getting_haircut_tone3": 32, "woman_getting_haircut_tone4": 32, "woman_getting_haircut_tone5": 32, "woman_golf": 32, "woman_golfing_dark_skin_ton": 32, "woman_golfing_light_skin_ton": 32, "woman_golfing_medium_dark_skin_ton": 32, "woman_golfing_medium_light_skin_ton": 32, "woman_golfing_medium_skin_ton": 32, "woman_golfing_tone1": 32, "woman_golfing_tone2": 32, "woman_golfing_tone3": 32, "woman_golfing_tone4": 32, "woman_golfing_tone5": 32, "woman_guard": 32, "woman_guard_dark_skin_ton": 32, "woman_guard_light_skin_ton": 32, "woman_guard_medium_dark_skin_ton": 32, "woman_guard_medium_light_skin_ton": 32, "woman_guard_medium_skin_ton": 32, "woman_guard_tone1": 32, "woman_guard_tone2": 32, "woman_guard_tone3": 32, "woman_guard_tone4": 32, "woman_guard_tone5": 32, "woman_health_work": 32, "woman_health_worker_dark_skin_ton": 32, "woman_health_worker_light_skin_ton": 32, "woman_health_worker_medium_dark_skin_ton": 32, "woman_health_worker_medium_light_skin_ton": 32, "woman_health_worker_medium_skin_ton": 32, "woman_health_worker_tone1": 32, "woman_health_worker_tone2": 32, "woman_health_worker_tone3": 32, "woman_health_worker_tone4": 32, "woman_health_worker_tone5": 32, "woman_in_lotus_posit": 32, "woman_in_lotus_position_dark_skin_ton": 32, "woman_in_lotus_position_light_skin_ton": 32, "woman_in_lotus_position_medium_dark_skin_ton": 32, "woman_in_lotus_position_medium_light_skin_ton": 32, "woman_in_lotus_position_medium_skin_ton": 32, "woman_in_lotus_position_tone1": 32, "woman_in_lotus_position_tone2": 32, "woman_in_lotus_position_tone3": 32, "woman_in_lotus_position_tone4": 32, "woman_in_lotus_position_tone5": 32, "woman_in_manual_wheelchair": 32, "woman_in_manual_wheelchair_dark_skin_ton": 32, "woman_in_manual_wheelchair_light_skin_ton": 32, "woman_in_manual_wheelchair_medium_dark_skin_ton": 32, "woman_in_manual_wheelchair_medium_light_skin_ton": 32, "woman_in_manual_wheelchair_medium_skin_ton": 32, "woman_in_manual_wheelchair_tone1": 32, "woman_in_manual_wheelchair_tone2": 32, "woman_in_manual_wheelchair_tone3": 32, "woman_in_manual_wheelchair_tone4": 32, "woman_in_manual_wheelchair_tone5": 32, "woman_in_motorized_wheelchair": 32, "woman_in_motorized_wheelchair_dark_skin_ton": 32, "woman_in_motorized_wheelchair_light_skin_ton": 32, "woman_in_motorized_wheelchair_medium_dark_skin_ton": 32, "woman_in_motorized_wheelchair_medium_light_skin_ton": 32, "woman_in_motorized_wheelchair_medium_skin_ton": 32, "woman_in_motorized_wheelchair_tone1": 32, "woman_in_motorized_wheelchair_tone2": 32, "woman_in_motorized_wheelchair_tone3": 32, "woman_in_motorized_wheelchair_tone4": 32, "woman_in_motorized_wheelchair_tone5": 32, "woman_in_steamy_room": 32, "woman_in_steamy_room_dark_skin_ton": 32, "woman_in_steamy_room_light_skin_ton": 32, "woman_in_steamy_room_medium_dark_skin_ton": 32, "woman_in_steamy_room_medium_light_skin_ton": 32, "woman_in_steamy_room_medium_skin_ton": 32, "woman_in_steamy_room_tone1": 32, "woman_in_steamy_room_tone2": 32, "woman_in_steamy_room_tone3": 32, "woman_in_steamy_room_tone4": 32, "woman_in_steamy_room_tone5": 32, "woman_in_tuxedo": 32, "woman_in_tuxedo_dark_skin_ton": 32, "woman_in_tuxedo_light_skin_ton": 32, "woman_in_tuxedo_medium_dark_skin_ton": 32, "woman_in_tuxedo_medium_light_skin_ton": 32, "woman_in_tuxedo_medium_skin_ton": 32, "woman_in_tuxedo_tone1": 32, "woman_in_tuxedo_tone2": 32, "woman_in_tuxedo_tone3": 32, "woman_in_tuxedo_tone4": 32, "woman_in_tuxedo_tone5": 32, "woman_judg": 32, "woman_judge_dark_skin_ton": 32, "woman_judge_light_skin_ton": 32, "woman_judge_medium_dark_skin_ton": 32, "woman_judge_medium_light_skin_ton": 32, "woman_judge_medium_skin_ton": 32, "woman_judge_tone1": 32, "woman_judge_tone2": 32, "woman_judge_tone3": 32, "woman_judge_tone4": 32, "woman_judge_tone5": 32, "woman_juggl": 32, "woman_juggling_dark_skin_ton": 32, "woman_juggling_light_skin_ton": 32, "woman_juggling_medium_dark_skin_ton": 32, "woman_juggling_medium_light_skin_ton": 32, "woman_juggling_medium_skin_ton": 32, "woman_juggling_tone1": 32, "woman_juggling_tone2": 32, "woman_juggling_tone3": 32, "woman_juggling_tone4": 32, "woman_juggling_tone5": 32, "woman_kneel": 32, "woman_kneeling_dark_skin_ton": 32, "woman_kneeling_light_skin_ton": 32, "woman_kneeling_medium_dark_skin_ton": 32, "woman_kneeling_medium_light_skin_ton": 32, "woman_kneeling_medium_skin_ton": 32, "woman_kneeling_tone1": 32, "woman_kneeling_tone2": 32, "woman_kneeling_tone3": 32, "woman_kneeling_tone4": 32, "woman_kneeling_tone5": 32, "woman_lifting_weight": 32, "woman_lifting_weights_dark_skin_ton": 32, "woman_lifting_weights_light_skin_ton": 32, "woman_lifting_weights_medium_dark_skin_ton": 32, "woman_lifting_weights_medium_light_skin_ton": 32, "woman_lifting_weights_medium_skin_ton": 32, "woman_lifting_weights_tone1": 32, "woman_lifting_weights_tone2": 32, "woman_lifting_weights_tone3": 32, "woman_lifting_weights_tone4": 32, "woman_lifting_weights_tone5": 32, "woman_light_skin_tone_beard": 32, "woman_mag": 32, "woman_mage_dark_skin_ton": 32, "woman_mage_light_skin_ton": 32, "woman_mage_medium_dark_skin_ton": 32, "woman_mage_medium_light_skin_ton": 32, "woman_mage_medium_skin_ton": 32, "woman_mage_tone1": 32, "woman_mage_tone2": 32, "woman_mage_tone3": 32, "woman_mage_tone4": 32, "woman_mage_tone5": 32, "woman_mechan": 32, "woman_mechanic_dark_skin_ton": 32, "woman_mechanic_light_skin_ton": 32, "woman_mechanic_medium_dark_skin_ton": 32, "woman_mechanic_medium_light_skin_ton": 32, "woman_mechanic_medium_skin_ton": 32, "woman_mechanic_tone1": 32, "woman_mechanic_tone2": 32, "woman_mechanic_tone3": 32, "woman_mechanic_tone4": 32, "woman_mechanic_tone5": 32, "woman_medium_dark_skin_tone_beard": 32, "woman_medium_light_skin_tone_beard": 32, "woman_medium_skin_tone_beard": 32, "woman_mountain_bik": 32, "woman_mountain_biking_dark_skin_ton": 32, "woman_mountain_biking_light_skin_ton": 32, "woman_mountain_biking_medium_dark_skin_ton": 32, "woman_mountain_biking_medium_light_skin_ton": 32, "woman_mountain_biking_medium_skin_ton": 32, "woman_mountain_biking_tone1": 32, "woman_mountain_biking_tone2": 32, "woman_mountain_biking_tone3": 32, "woman_mountain_biking_tone4": 32, "woman_mountain_biking_tone5": 32, "woman_office_work": 32, "woman_office_worker_dark_skin_ton": 32, "woman_office_worker_light_skin_ton": 32, "woman_office_worker_medium_dark_skin_ton": 32, "woman_office_worker_medium_light_skin_ton": 32, "woman_office_worker_medium_skin_ton": 32, "woman_office_worker_tone1": 32, "woman_office_worker_tone2": 32, "woman_office_worker_tone3": 32, "woman_office_worker_tone4": 32, "woman_office_worker_tone5": 32, "woman_pilot": 32, "woman_pilot_dark_skin_ton": 32, "woman_pilot_light_skin_ton": 32, "woman_pilot_medium_dark_skin_ton": 32, "woman_pilot_medium_light_skin_ton": 32, "woman_pilot_medium_skin_ton": 32, "woman_pilot_tone1": 32, "woman_pilot_tone2": 32, "woman_pilot_tone3": 32, "woman_pilot_tone4": 32, "woman_pilot_tone5": 32, "woman_playing_handbal": 32, "woman_playing_handball_dark_skin_ton": 32, "woman_playing_handball_light_skin_ton": 32, "woman_playing_handball_medium_dark_skin_ton": 32, "woman_playing_handball_medium_light_skin_ton": 32, "woman_playing_handball_medium_skin_ton": 32, "woman_playing_handball_tone1": 32, "woman_playing_handball_tone2": 32, "woman_playing_handball_tone3": 32, "woman_playing_handball_tone4": 32, "woman_playing_handball_tone5": 32, "woman_playing_water_polo": 32, "woman_playing_water_polo_dark_skin_ton": 32, "woman_playing_water_polo_light_skin_ton": 32, "woman_playing_water_polo_medium_dark_skin_ton": 32, "woman_playing_water_polo_medium_light_skin_ton": 32, "woman_playing_water_polo_medium_skin_ton": 32, "woman_playing_water_polo_tone1": 32, "woman_playing_water_polo_tone2": 32, "woman_playing_water_polo_tone3": 32, "woman_playing_water_polo_tone4": 32, "woman_playing_water_polo_tone5": 32, "woman_police_offic": 32, "woman_police_officer_dark_skin_ton": 32, "woman_police_officer_light_skin_ton": 32, "woman_police_officer_medium_dark_skin_ton": 32, "woman_police_officer_medium_light_skin_ton": 32, "woman_police_officer_medium_skin_ton": 32, "woman_police_officer_tone1": 32, "woman_police_officer_tone2": 32, "woman_police_officer_tone3": 32, "woman_police_officer_tone4": 32, "woman_police_officer_tone5": 32, "woman_pout": 32, "woman_pouting_dark_skin_ton": 32, "woman_pouting_light_skin_ton": 32, "woman_pouting_medium_dark_skin_ton": 32, "woman_pouting_medium_light_skin_ton": 32, "woman_pouting_medium_skin_ton": 32, "woman_pouting_tone1": 32, "woman_pouting_tone2": 32, "woman_pouting_tone3": 32, "woman_pouting_tone4": 32, "woman_pouting_tone5": 32, "woman_raising_hand": 32, "woman_raising_hand_dark_skin_ton": 32, "woman_raising_hand_light_skin_ton": 32, "woman_raising_hand_medium_dark_skin_ton": 32, "woman_raising_hand_medium_light_skin_ton": 32, "woman_raising_hand_medium_skin_ton": 32, "woman_raising_hand_tone1": 32, "woman_raising_hand_tone2": 32, "woman_raising_hand_tone3": 32, "woman_raising_hand_tone4": 32, "woman_raising_hand_tone5": 32, "woman_red_hair": 32, "woman_red_haired_dark_skin_ton": 32, "woman_red_haired_light_skin_ton": 32, "woman_red_haired_medium_dark_skin_ton": 32, "woman_red_haired_medium_light_skin_ton": 32, "woman_red_haired_medium_skin_ton": 32, "woman_red_haired_tone1": 32, "woman_red_haired_tone2": 32, "woman_red_haired_tone3": 32, "woman_red_haired_tone4": 32, "woman_red_haired_tone5": 32, "woman_rowing_boat": 32, "woman_rowing_boat_dark_skin_ton": 32, "woman_rowing_boat_light_skin_ton": 32, "woman_rowing_boat_medium_dark_skin_ton": 32, "woman_rowing_boat_medium_light_skin_ton": 32, "woman_rowing_boat_medium_skin_ton": 32, "woman_rowing_boat_tone1": 32, "woman_rowing_boat_tone2": 32, "woman_rowing_boat_tone3": 32, "woman_rowing_boat_tone4": 32, "woman_rowing_boat_tone5": 32, "woman_run": 32, "woman_running_dark_skin_ton": 32, "woman_running_light_skin_ton": 32, "woman_running_medium_dark_skin_ton": 32, "woman_running_medium_light_skin_ton": 32, "woman_running_medium_skin_ton": 32, "woman_running_tone1": 32, "woman_running_tone2": 32, "woman_running_tone3": 32, "woman_running_tone4": 32, "woman_running_tone5": 32, "woman_scientist": 32, "woman_scientist_dark_skin_ton": 32, "woman_scientist_light_skin_ton": 32, "woman_scientist_medium_dark_skin_ton": 32, "woman_scientist_medium_light_skin_ton": 32, "woman_scientist_medium_skin_ton": 32, "woman_scientist_tone1": 32, "woman_scientist_tone2": 32, "woman_scientist_tone3": 32, "woman_scientist_tone4": 32, "woman_scientist_tone5": 32, "woman_shrug": 32, "woman_shrugging_dark_skin_ton": 32, "woman_shrugging_light_skin_ton": 32, "woman_shrugging_medium_dark_skin_ton": 32, "woman_shrugging_medium_light_skin_ton": 32, "woman_shrugging_medium_skin_ton": 32, "woman_shrugging_tone1": 32, "woman_shrugging_tone2": 32, "woman_shrugging_tone3": 32, "woman_shrugging_tone4": 32, "woman_shrugging_tone5": 32, "woman_sing": 32, "woman_singer_dark_skin_ton": 32, "woman_singer_light_skin_ton": 32, "woman_singer_medium_dark_skin_ton": 32, "woman_singer_medium_light_skin_ton": 32, "woman_singer_medium_skin_ton": 32, "woman_singer_tone1": 32, "woman_singer_tone2": 32, "woman_singer_tone3": 32, "woman_singer_tone4": 32, "woman_singer_tone5": 32, "woman_stand": 32, "woman_standing_dark_skin_ton": 32, "woman_standing_light_skin_ton": 32, "woman_standing_medium_dark_skin_ton": 32, "woman_standing_medium_light_skin_ton": 32, "woman_standing_medium_skin_ton": 32, "woman_standing_tone1": 32, "woman_standing_tone2": 32, "woman_standing_tone3": 32, "woman_standing_tone4": 32, "woman_standing_tone5": 32, "woman_stud": 32, "woman_student_dark_skin_ton": 32, "woman_student_light_skin_ton": 32, "woman_student_medium_dark_skin_ton": 32, "woman_student_medium_light_skin_ton": 32, "woman_student_medium_skin_ton": 32, "woman_student_tone1": 32, "woman_student_tone2": 32, "woman_student_tone3": 32, "woman_student_tone4": 32, "woman_student_tone5": 32, "woman_superhero": 32, "woman_superhero_dark_skin_ton": 32, "woman_superhero_light_skin_ton": 32, "woman_superhero_medium_dark_skin_ton": 32, "woman_superhero_medium_light_skin_ton": 32, "woman_superhero_medium_skin_ton": 32, "woman_superhero_tone1": 32, "woman_superhero_tone2": 32, "woman_superhero_tone3": 32, "woman_superhero_tone4": 32, "woman_superhero_tone5": 32, "woman_supervillain": 32, "woman_supervillain_dark_skin_ton": 32, "woman_supervillain_light_skin_ton": 32, "woman_supervillain_medium_dark_skin_ton": 32, "woman_supervillain_medium_light_skin_ton": 32, "woman_supervillain_medium_skin_ton": 32, "woman_supervillain_tone1": 32, "woman_supervillain_tone2": 32, "woman_supervillain_tone3": 32, "woman_supervillain_tone4": 32, "woman_supervillain_tone5": 32, "woman_surf": 32, "woman_surfing_dark_skin_ton": 32, "woman_surfing_light_skin_ton": 32, "woman_surfing_medium_dark_skin_ton": 32, "woman_surfing_medium_light_skin_ton": 32, "woman_surfing_medium_skin_ton": 32, "woman_surfing_tone1": 32, "woman_surfing_tone2": 32, "woman_surfing_tone3": 32, "woman_surfing_tone4": 32, "woman_surfing_tone5": 32, "woman_swim": 32, "woman_swimming_dark_skin_ton": 32, "woman_swimming_light_skin_ton": 32, "woman_swimming_medium_dark_skin_ton": 32, "woman_swimming_medium_light_skin_ton": 32, "woman_swimming_medium_skin_ton": 32, "woman_swimming_tone1": 32, "woman_swimming_tone2": 32, "woman_swimming_tone3": 32, "woman_swimming_tone4": 32, "woman_swimming_tone5": 32, "woman_teach": 32, "woman_teacher_dark_skin_ton": 32, "woman_teacher_light_skin_ton": 32, "woman_teacher_medium_dark_skin_ton": 32, "woman_teacher_medium_light_skin_ton": 32, "woman_teacher_medium_skin_ton": 32, "woman_teacher_tone1": 32, "woman_teacher_tone2": 32, "woman_teacher_tone3": 32, "woman_teacher_tone4": 32, "woman_teacher_tone5": 32, "woman_technologist": 32, "woman_technologist_dark_skin_ton": 32, "woman_technologist_light_skin_ton": 32, "woman_technologist_medium_dark_skin_ton": 32, "woman_technologist_medium_light_skin_ton": 32, "woman_technologist_medium_skin_ton": 32, "woman_technologist_tone1": 32, "woman_technologist_tone2": 32, "woman_technologist_tone3": 32, "woman_technologist_tone4": 32, "woman_technologist_tone5": 32, "woman_tipping_hand": 32, "woman_tipping_hand_dark_skin_ton": 32, "woman_tipping_hand_light_skin_ton": 32, "woman_tipping_hand_medium_dark_skin_ton": 32, "woman_tipping_hand_medium_light_skin_ton": 32, "woman_tipping_hand_medium_skin_ton": 32, "woman_tipping_hand_tone1": 32, "woman_tipping_hand_tone2": 32, "woman_tipping_hand_tone3": 32, "woman_tipping_hand_tone4": 32, "woman_tipping_hand_tone5": 32, "woman_tone1": 32, "woman_tone1_beard": 32, "woman_tone2": 32, "woman_tone2_beard": 32, "woman_tone3": 32, "woman_tone3_beard": 32, "woman_tone4": 32, "woman_tone4_beard": 32, "woman_tone5": 32, "woman_tone5_beard": 32, "woman_vampir": 32, "woman_vampire_dark_skin_ton": 32, "woman_vampire_light_skin_ton": 32, "woman_vampire_medium_dark_skin_ton": 32, "woman_vampire_medium_light_skin_ton": 32, "woman_vampire_medium_skin_ton": 32, "woman_vampire_tone1": 32, "woman_vampire_tone2": 32, "woman_vampire_tone3": 32, "woman_vampire_tone4": 32, "woman_vampire_tone5": 32, "woman_walk": 32, "woman_walking_dark_skin_ton": 32, "woman_walking_light_skin_ton": 32, "woman_walking_medium_dark_skin_ton": 32, "woman_walking_medium_light_skin_ton": 32, "woman_walking_medium_skin_ton": 32, "woman_walking_tone1": 32, "woman_walking_tone2": 32, "woman_walking_tone3": 32, "woman_walking_tone4": 32, "woman_walking_tone5": 32, "woman_wearing_turban": 32, "woman_wearing_turban_dark_skin_ton": 32, "woman_wearing_turban_light_skin_ton": 32, "woman_wearing_turban_medium_dark_skin_ton": 32, "woman_wearing_turban_medium_light_skin_ton": 32, "woman_wearing_turban_medium_skin_ton": 32, "woman_wearing_turban_tone1": 32, "woman_wearing_turban_tone2": 32, "woman_wearing_turban_tone3": 32, "woman_wearing_turban_tone4": 32, "woman_wearing_turban_tone5": 32, "woman_white_hair": 32, "woman_white_haired_dark_skin_ton": 32, "woman_white_haired_light_skin_ton": 32, "woman_white_haired_medium_dark_skin_ton": 32, "woman_white_haired_medium_light_skin_ton": 32, "woman_white_haired_medium_skin_ton": 32, "woman_white_haired_tone1": 32, "woman_white_haired_tone2": 32, "woman_white_haired_tone3": 32, "woman_white_haired_tone4": 32, "woman_white_haired_tone5": 32, "woman_with_headscarf": 32, "woman_with_headscarf_dark_skin_ton": 32, "woman_with_headscarf_light_skin_ton": 32, "woman_with_headscarf_medium_dark_skin_ton": 32, "woman_with_headscarf_medium_light_skin_ton": 32, "woman_with_headscarf_medium_skin_ton": 32, "woman_with_headscarf_tone1": 32, "woman_with_headscarf_tone2": 32, "woman_with_headscarf_tone3": 32, "woman_with_headscarf_tone4": 32, "woman_with_headscarf_tone5": 32, "woman_with_probing_can": 32, "woman_with_probing_cane_dark_skin_ton": 32, "woman_with_probing_cane_light_skin_ton": 32, "woman_with_probing_cane_medium_dark_skin_ton": 32, "woman_with_probing_cane_medium_light_skin_ton": 32, "woman_with_probing_cane_medium_skin_ton": 32, "woman_with_probing_cane_tone1": 32, "woman_with_probing_cane_tone2": 32, "woman_with_probing_cane_tone3": 32, "woman_with_probing_cane_tone4": 32, "woman_with_probing_cane_tone5": 32, "woman_with_turban": 32, "woman_with_veil": 32, "woman_with_veil_dark_skin_ton": 32, "woman_with_veil_light_skin_ton": 32, "woman_with_veil_medium_dark_skin_ton": 32, "woman_with_veil_medium_light_skin_ton": 32, "woman_with_veil_medium_skin_ton": 32, "woman_with_veil_tone1": 32, "woman_with_veil_tone2": 32, "woman_with_veil_tone3": 32, "woman_with_veil_tone4": 32, "woman_with_veil_tone5": 32, "woman_zombi": 32, "womans_cloth": 32, "womans_flat_sho": 32, "womans_hat": 32, "women_holding_hands_dark_skin_ton": 32, "women_holding_hands_dark_skin_tone_light_skin_ton": 32, "women_holding_hands_dark_skin_tone_medium_dark_skin_ton": 32, "women_holding_hands_dark_skin_tone_medium_light_skin_ton": 32, "women_holding_hands_dark_skin_tone_medium_skin_ton": 32, "women_holding_hands_light_skin_ton": 32, "women_holding_hands_light_skin_tone_dark_skin_ton": 32, "women_holding_hands_light_skin_tone_medium_dark_skin_ton": 32, "women_holding_hands_light_skin_tone_medium_light_skin_ton": 32, "women_holding_hands_light_skin_tone_medium_skin_ton": 32, "women_holding_hands_medium_dark_skin_ton": 32, "women_holding_hands_medium_dark_skin_tone_dark_skin_ton": 32, "women_holding_hands_medium_dark_skin_tone_light_skin_ton": 32, "women_holding_hands_medium_dark_skin_tone_medium_light_skin_ton": 32, "women_holding_hands_medium_dark_skin_tone_medium_skin_ton": 32, "women_holding_hands_medium_light_skin_ton": 32, "women_holding_hands_medium_light_skin_tone_dark_skin_ton": 32, "women_holding_hands_medium_light_skin_tone_light_skin_ton": 32, "women_holding_hands_medium_light_skin_tone_medium_dark_skin_ton": 32, "women_holding_hands_medium_light_skin_tone_medium_skin_ton": 32, "women_holding_hands_medium_skin_ton": 32, "women_holding_hands_medium_skin_tone_dark_skin_ton": 32, "women_holding_hands_medium_skin_tone_light_skin_ton": 32, "women_holding_hands_medium_skin_tone_medium_dark_skin_ton": 32, "women_holding_hands_medium_skin_tone_medium_light_skin_ton": 32, "women_holding_hands_tone1": 32, "women_holding_hands_tone1_tone2": 32, "women_holding_hands_tone1_tone3": 32, "women_holding_hands_tone1_tone4": 32, "women_holding_hands_tone1_tone5": 32, "women_holding_hands_tone2": 32, "women_holding_hands_tone2_tone1": 32, "women_holding_hands_tone2_tone3": 32, "women_holding_hands_tone2_tone4": 32, "women_holding_hands_tone2_tone5": 32, "women_holding_hands_tone3": 32, "women_holding_hands_tone3_tone1": 32, "women_holding_hands_tone3_tone2": 32, "women_holding_hands_tone3_tone4": 32, "women_holding_hands_tone3_tone5": 32, "women_holding_hands_tone4": 32, "women_holding_hands_tone4_tone1": 32, "women_holding_hands_tone4_tone2": 32, "women_holding_hands_tone4_tone3": 32, "women_holding_hands_tone4_tone5": 32, "women_holding_hands_tone5": 32, "women_holding_hands_tone5_tone1": 32, "women_holding_hands_tone5_tone2": 32, "women_holding_hands_tone5_tone3": 32, "women_holding_hands_tone5_tone4": 32, "women_with_bunny_ears_parti": 32, "women_wrestl": 32, "women": 32, "wood": 32, "woozy_fac": 32, "world_map": 32, "worm": [32, 462], "worri": [32, 430], "worship_symbol": 32, "wrench": 32, "wrestler": 32, "wrestlers_tone1": 32, "wrestlers_tone2": 32, "wrestlers_tone3": 32, "wrestlers_tone4": 32, "wrestlers_tone5": 32, "wrestl": 32, "wrestling_tone1": 32, "wrestling_tone2": 32, "wrestling_tone3": 32, "wrestling_tone4": 32, "wrestling_tone5": 32, "writing_hand": 32, "writing_hand_tone1": 32, "writing_hand_tone2": 32, "writing_hand_tone3": 32, "writing_hand_tone4": 32, "writing_hand_tone5": 32, "w": [32, 40, 190, 194, 197, 219, 223, 229, 239, 242, 249, 270, 284, 343, 344, 363, 451, 586, 647, 855, 869, 915, 916, 950, 1005, 1045, 1058, 1103, 1105, 1133, 1136, 1141], "xk": 32, "yarn": 32, "yawning_fac": 32, "yellow_circl": 32, "yellow_heart": 32, "yellow_squar": 32, "yemen": 32, "yen": [32, 36], "yin_yang": 32, "yo_yo": 32, "yt": 32, "yum": [32, 322], "za": [32, 294, 322, 382], "zambia": 32, "zany_fac": 32, "zap": 32, "zebra": 32, "zimbabw": 32, "zipper_mouth": 32, "zipper_mouth_fac": 32, "zm": 32, "zombi": 32, "zw": 32, "zzz": 32, "sheet": [33, 66, 155, 194, 206, 346, 348, 349, 695, 870, 914, 915], "layout": [33, 150, 171, 244, 427, 440, 1141], "emoji": 33, "sphinxemoji": 33, "mmlalia": 33, "mathml": 33, "alias": [33, 322, 383, 871], "entiti": [33, 154, 391, 405, 432, 449, 469, 477, 584, 779, 968, 1121], "isoamsa": 33, "mathemat": [33, 246, 1057], "arrow": [33, 35, 36, 38, 74, 75, 870, 1000], "isoamsr": 33, "relat": [33, 70, 142, 175, 186, 190, 211, 215, 270, 283, 395, 404, 411, 415, 417, 421, 424, 428, 437, 441, 446, 447, 454, 569, 669, 707, 724, 748, 760, 761, 762, 763, 778, 787, 835, 913, 968, 978, 1108, 1141, 1142], "isonum": 33, "binari": [33, 42, 50, 54, 55, 58, 77, 88, 89, 150, 154, 160, 214, 215, 223, 227, 229, 230, 232, 237, 239, 242, 252, 350, 394, 427, 439, 607, 684, 747, 788, 802, 810, 855, 984, 987, 1000, 1012, 1039, 1044, 1121], "sphinxish": 33, "send": [33, 102, 116, 134, 136, 151, 154, 165, 190, 191, 193, 194, 195, 196, 229, 230, 249, 251, 252, 270, 291, 342, 347, 491, 834, 850, 866, 909, 910, 914, 923, 933, 981, 983, 1104, 1121], "v4l": [33, 134], "ssh": [33, 98, 102, 103, 116, 134, 136, 151, 161, 165, 194, 226, 242, 249, 252, 260, 267, 269, 274, 284, 288, 290, 310, 316, 322, 328, 341, 342, 348, 349, 355, 356, 360, 526, 527, 763, 836, 837, 838, 845, 892, 901, 906, 907, 918, 919, 944, 994, 995, 996, 1165, 1167, 1172], "taken": [34, 35, 36, 38, 40, 74, 75, 120, 153, 157, 158, 165, 214, 429, 461, 526, 535, 582, 737, 813, 835, 845, 870, 984, 1035, 1121], "definit": [34, 35, 36, 38, 108, 124, 134, 150, 154, 156, 157, 159, 161, 174, 183, 186, 187, 192, 206, 213, 215, 279, 281, 297, 313, 342, 363, 364, 365, 395, 404, 407, 410, 411, 417, 421, 424, 428, 434, 435, 436, 437, 439, 440, 441, 446, 447, 454, 456, 460, 468, 469, 491, 513, 553, 571, 572, 573, 578, 579, 585, 586, 588, 597, 600, 601, 623, 649, 658, 669, 679, 695, 707, 709, 722, 726, 730, 760, 762, 763, 788, 810, 871, 915, 916, 984, 1003, 1010, 1016, 1021, 1032, 1036, 1049, 1050, 1053, 1117, 1131, 1148, 1158, 1161], "includ": [34, 35, 36, 38, 44, 108, 113, 146, 156, 161, 165, 169, 171, 182, 186, 193, 205, 206, 215, 216, 223, 227, 229, 230, 232, 239, 242, 246, 267, 281, 288, 297, 309, 313, 339, 350, 364, 365, 367, 371, 373, 375, 406, 407, 422, 427, 430, 432, 436, 443, 452, 453, 455, 456, 457, 459, 464, 467, 468, 469, 470, 471, 472, 474, 476, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 513, 516, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 533, 535, 536, 537, 538, 540, 541, 542, 543, 544, 553, 559, 562, 569, 570, 571, 573, 577, 578, 579, 580, 582, 583, 584, 585, 586, 587, 588, 589, 594, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 610, 611, 614, 615, 616, 620, 624, 625, 626, 627, 628, 634, 638, 639, 642, 644, 645, 647, 651, 656, 657, 658, 659, 660, 661, 662, 663, 666, 667, 668, 670, 672, 674, 677, 678, 679, 680, 682, 684, 685, 686, 687, 690, 691, 692, 693, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 709, 710, 711, 712, 714, 716, 717, 719, 721, 725, 726, 727, 728, 729, 730, 731, 734, 736, 739, 741, 742, 743, 747, 749, 751, 753, 757, 758, 759, 761, 763, 769, 774, 779, 781, 788, 790, 792, 794, 796, 798, 802, 804, 806, 815, 820, 824, 827, 830, 847, 867, 870, 876, 903, 908, 910, 914, 930, 932, 933, 934, 936, 939, 940, 941, 942, 943, 946, 948, 951, 959, 963, 965, 968, 974, 977, 981, 984, 987, 996, 999, 1000, 1002, 1004, 1032, 1033, 1058, 1059, 1131, 1137, 1143, 1148, 1150, 1153, 1163], "substitut": [34, 35, 36, 38, 107, 113, 134, 206, 242, 288, 339, 433, 449, 453, 684, 927, 1120], "angzarr": 34, "0237c": 34, "angl": [34, 36, 38, 1164], "WITH": [34, 35, 38, 933], "downward": [34, 35, 36, 38, 461], "zigzag": 34, "cirmid": 34, "02aef": 34, "vertic": [34, 35, 36, 38, 384], "circl": [34, 35, 38, 216, 545, 850], "abov": [34, 35, 38, 79, 116, 121, 154, 156, 157, 158, 159, 161, 165, 169, 173, 192, 195, 206, 215, 223, 229, 239, 242, 246, 305, 353, 400, 423, 433, 443, 469, 489, 491, 513, 516, 517, 526, 527, 552, 562, 579, 580, 584, 585, 604, 648, 710, 771, 804, 810, 820, 837, 838, 854, 882, 914, 915, 916, 940, 944, 970, 977, 1000, 1008, 1039, 1053, 1124, 1130, 1141, 1148], "cudarrl": 34, "02938": 34, "side": [34, 174, 196, 270, 279, 379, 388, 429, 491, 523, 562, 586, 588, 589, 739, 790, 794, 849, 870, 918, 1008, 1041, 1087, 1113, 1115, 1124], "arc": 34, "clockwis": [34, 38], "cudarrr": 34, "02935": 34, "rightward": [34, 35, 36, 38], "THEN": 34, "curv": [34, 35], "cularr": 34, "021b6": [34, 38], "anticlockwis": [34, 38], "semicircl": [34, 38], "cularrp": 34, "0293d": 34, "plu": [34, 35, 36, 38, 66, 155, 161, 223, 229, 239, 242, 255, 400, 527, 553, 585, 587, 589, 810, 936], "curarr": 34, "021b7": [34, 38], "curarrm": 34, "0293c": 34, "minu": [34, 35, 36, 38, 234, 587, 730], "darr": [34, 36], "021a1": 34, "head": [34, 38, 40, 62, 114, 155, 157, 160, 194, 196, 206, 260, 269, 278, 290, 291, 739, 763, 840, 896, 897, 900, 903, 906, 931, 932, 999, 1065], "021d3": [34, 38], "doubl": [34, 35, 36, 38, 113, 122, 125, 216, 232, 236, 242, 350, 365, 383, 384, 385, 388, 407, 427, 436, 468, 474, 479, 481, 488, 497, 499, 500, 505, 506, 507, 508, 509, 510, 513, 521, 523, 525, 526, 527, 538, 569, 571, 577, 579, 580, 584, 588, 620, 647, 671, 674, 677, 680, 684, 689, 690, 691, 692, 705, 724, 725, 727, 730, 739, 747, 749, 751, 752, 753, 754, 810, 870, 914, 1008, 1028, 1052, 1129], "darr2": 34, "021ca": [34, 38], "pair": [34, 38, 102, 103, 121, 122, 169, 211, 221, 224, 227, 232, 236, 237, 242, 249, 251, 263, 264, 287, 293, 321, 470, 474, 477, 527, 545, 623, 624, 625, 628, 670, 716, 717, 721, 763, 774, 779, 906, 918, 919, 920, 922, 1002, 1012, 1056, 1108, 1119, 1136], "ddarr": 34, "ddotrahd": 34, "02911": 34, "dot": [34, 35, 36, 38, 158, 443, 458, 463, 892, 986], "stem": [34, 779], "dfisht": 34, "0297f": 34, "down": [34, 35, 38, 153, 154, 157, 182, 259, 297, 313, 348, 369, 410, 455, 456, 467, 474, 516, 523, 524, 525, 526, 545, 587, 620, 645, 667, 684, 709, 726, 763, 778, 779, 810, 856, 902, 909, 916, 984, 987, 1148, 1153], "tail": [34, 38, 155, 194, 196, 206, 260, 269, 290, 291, 739, 763, 798, 840, 897, 900, 903, 906, 1133], "dhar": 34, "02965": 34, "harpoon": [34, 38], "barb": [34, 38], "left": [34, 35, 36, 38, 64, 85, 111, 112, 121, 153, 154, 156, 174, 205, 216, 242, 288, 386, 387, 394, 400, 472, 516, 523, 569, 572, 576, 584, 585, 642, 649, 675, 852, 853, 870, 914, 923, 942, 984, 1012, 1016, 1027, 1028, 1039, 1053, 1107, 1113, 1131], "besid": [34, 35, 38, 169], "dharl": 34, "021c3": [34, 38], "leftward": [34, 35, 36, 38], "dharr": 34, "021c2": [34, 38], "dlarr": 34, "02199": [34, 38], "south": [34, 38], "west": [34, 38, 163], "drarr": 34, "02198": [34, 38], "east": [34, 38], "duarr": 34, "021f5": [34, 38], "OF": [34, 35, 38, 157, 717], "upward": [34, 36, 38], "duhar": 34, "0296f": [34, 38], "dzigrarr": 34, "027ff": 34, "long": [34, 35, 38, 53, 129, 153, 154, 155, 156, 157, 161, 164, 182, 186, 194, 206, 223, 227, 229, 232, 239, 242, 250, 278, 342, 360, 371, 381, 383, 384, 388, 392, 393, 420, 427, 429, 438, 442, 444, 445, 464, 469, 526, 571, 572, 577, 582, 647, 717, 726, 736, 747, 749, 751, 753, 761, 769, 781, 790, 792, 808, 810, 815, 820, 824, 849, 870, 892, 916, 927, 933, 936, 966, 974, 1003, 1010, 1050, 1060, 1108, 1115, 1126, 1133, 1161], "squiggl": 34, "erarr": 34, "02971": 34, "equal": [34, 35, 36, 38, 156, 178, 190, 206, 213, 216, 242, 246, 278, 279, 288, 300, 316, 365, 371, 387, 394, 399, 410, 435, 438, 515, 521, 528, 532, 567, 612, 631, 635, 662, 664, 730, 763, 845, 849, 903, 927, 966, 970, 971, 1039, 1093, 1148], "sign": [34, 35, 36, 38, 157, 164, 169, 232, 381, 383, 391, 435, 449, 473, 647, 710, 783, 1039, 1053, 1113, 1158, 1159], "harr": 34, "021d4": [34, 38], "02194": [34, 38], "harrcir": 34, "02948": 34, "small": [34, 38, 43, 107, 153, 155, 156, 186, 206, 210, 266, 305, 315, 363, 435, 439, 472, 524, 569, 681, 726, 907, 908, 914, 946, 978, 1031, 1054, 1120, 1148], "harrw": 34, "021ad": [34, 38], "hoarr": 34, "021ff": 34, "imof": 34, "022b7": 34, "imag": [34, 35, 38, 148, 150, 153, 154, 155, 156, 164, 177, 239, 242, 246, 264, 342, 348, 445, 451, 458, 577, 788, 810, 907, 1110, 1115], "laarr": 34, "021da": [34, 38], "tripl": [34, 35, 38, 59, 63], "larr": [34, 36], "0219e": [34, 38], "larr2": 34, "021c7": [34, 38], "larrbf": 34, "0291f": 34, "bar": [34, 35, 36, 38, 160, 181, 201, 224, 237, 242, 251, 254, 284, 287, 288, 293, 306, 310, 316, 322, 351, 451, 516, 731, 1006, 1048, 1108], "TO": [34, 35, 38, 1063], "black": [34, 38, 159, 210, 218, 230, 233, 623, 996], "larrf": 34, "0291d": 34, "larrhk": 34, "021a9": [34, 38], "larrlp": 34, "021ab": [34, 38], "larrpl": 34, "02939": 34, "larrsim": 34, "02973": 34, "tild": [34, 35, 38], "larrtl": 34, "021a2": [34, 38], "latail": 34, "0291b": 34, "02919": 34, "lbarr": 34, "0290e": 34, "0290c": 34, "ldca": 34, "02936": 34, "ldrdhar": 34, "02967": 34, "ldrushar": 34, "0294b": 34, "ldsh": 34, "021b2": 34, "tip": [34, 38, 211, 221, 224, 227, 251, 263, 287, 293, 1108], "lfisht": 34, "0297c": 34, "lhar": 34, "02962": 34, "lhard": 34, "021bd": [34, 38], "lharu": 34, "021bc": [34, 38], "lharul": 34, "0296a": 34, "llarr": 34, "llhard": 34, "0296b": 34, "below": [34, 35, 38, 124, 132, 150, 154, 155, 156, 159, 161, 165, 174, 186, 195, 213, 246, 259, 305, 374, 376, 443, 450, 461, 494, 508, 516, 517, 523, 526, 661, 663, 677, 689, 709, 710, 726, 730, 739, 741, 758, 759, 761, 783, 804, 845, 849, 853, 870, 907, 916, 937, 981, 984, 1148], "loarr": 34, "021fd": 34, "lrarr": 34, "021c6": [34, 38], "lrarr2": 34, "lrhar": 34, "021cb": [34, 38], "lrhar2": 34, "lrhard": 34, "0296d": 34, "lsh": [34, 38], "021b0": [34, 38], "lurdshar": 34, "0294a": 34, "luruhar": 34, "02966": 34, "02905": 34, "021a6": [34, 38], "midcir": 34, "02af0": 34, "mumap": 34, "022b8": [34, 38], "multimap": [34, 38, 279, 545, 622, 631, 635, 664, 763], "nearhk": 34, "02924": 34, "north": [34, 38], "nearr": 34, "021d7": 34, "02197": [34, 38], "nesear": 34, "02928": [34, 38], "AND": [34, 35, 38, 371, 387, 410, 573, 898, 1027], "nharr": 34, "021ce": [34, 38], "stroke": [34, 38], "021ae": [34, 38], "nlarr": 34, "021cd": [34, 38], "0219a": [34, 38], "nrarr": 34, "021cf": [34, 38], "0219b": [34, 38], "nrarrc": 34, "02933": 34, "00338": [34, 38], "directli": [34, 40, 121, 150, 169, 255, 280, 328, 467, 584, 653, 781, 794, 806, 813, 824, 916, 926, 930, 984, 1007, 1027, 1035, 1098, 1100, 1127], "slash": [34, 38, 894, 978], "nrarrw": 34, "0219d": [34, 38], "nvharr": 34, "02904": 34, "nvlarr": 34, "02902": 34, "nvrarr": 34, "02903": 34, "nwarhk": 34, "02923": 34, "nwarr": 34, "021d6": 34, "02196": [34, 38], "nwnear": 34, "02927": 34, "olarr": 34, "021ba": [34, 38], "orarr": 34, "021bb": [34, 38], "origof": 34, "022b6": 34, "origin": [34, 35, 38, 62, 64, 114, 136, 151, 157, 159, 164, 169, 175, 187, 219, 223, 229, 232, 234, 239, 242, 267, 278, 283, 287, 288, 290, 291, 293, 297, 305, 309, 313, 315, 319, 321, 409, 425, 469, 472, 523, 570, 578, 579, 580, 608, 659, 660, 662, 663, 721, 725, 728, 730, 741, 783, 810, 811, 834, 837, 838, 853, 867, 1005, 1110, 1121, 1143], "raarr": 34, "021db": [34, 38], "rarr": [34, 36], "021a0": [34, 38], "rarr2": 34, "021c9": [34, 38], "rarrap": 34, "02975": 34, "almost": [34, 35, 38, 59, 63, 156, 169, 178, 215, 388, 436, 438, 459, 574, 639, 667, 715, 731, 978], "rarrbf": 34, "02920": 34, "rarrc": 34, "rarrf": 34, "0291e": 34, "rarrhk": 34, "021aa": [34, 38], "rarrlp": 34, "021ac": [34, 38], "rarrpl": 34, "02945": 34, "rarrsim": 34, "02974": 34, "rarrtl": 34, "02916": 34, "021a3": [34, 38], "rarrw": 34, "ratail": 34, "0291c": 34, "0291a": 34, "rbarr": 34, "02910": [34, 38], "0290f": [34, 38], "0290d": [34, 38], "rdca": 34, "02937": 34, "rdldhar": 34, "02969": 34, "rdsh": 34, "021b3": 34, "rfisht": 34, "0297d": 34, "rhar": 34, "02964": 34, "rhard": 34, "021c1": [34, 38], "rharu": 34, "021c0": [34, 38], "rharul": 34, "0296c": 34, "rlarr": 34, "021c4": [34, 38], "rlarr2": 34, "rlhar": 34, "021cc": [34, 38], "rlhar2": 34, "roarr": 34, "021fe": 34, "rrarr": 34, "rsh": [34, 38, 585, 917], "021b1": [34, 38], "ruluhar": 34, "02968": 34, "searhk": 34, "02925": [34, 38], "searr": 34, "021d8": 34, "seswar": 34, "02929": [34, 38], "simrarr": 34, "02972": 34, "slarr": 34, "02190": [34, 36, 38], "srarr": 34, "02192": [34, 36, 38], "swarhk": 34, "02926": [34, 38], "swarr": 34, "021d9": 34, "swnwar": 34, "0292a": 34, "uarr": [34, 36], "0219f": 34, "021d1": [34, 38], "uarr2": 34, "021c8": [34, 38], "uarrocir": 34, "02949": 34, "udarr": 34, "021c5": [34, 38], "udhar": 34, "0296e": [34, 38], "ufisht": 34, "0297e": 34, "uhar": 34, "02963": 34, "uharl": 34, "021bf": [34, 38], "uharr": 34, "021be": [34, 38], "uuarr": 34, "varr": 34, "021d5": [34, 38], "02195": [34, 38], "xharr": 34, "027fa": [34, 38], "027f7": [34, 38], "xlarr": 34, "027f8": [34, 38], "027f5": [34, 38], "xmap": 34, "027fc": [34, 38], "xrarr": 34, "027f9": [34, 38], "027f6": [34, 38], "zigrarr": 34, "021dd": 34, "ap": [35, 940], "02a70": 35, "approxim": [35, 38, 156, 252], "OR": [35, 38, 229, 371, 387, 410, 427, 898, 1027], "0224a": [35, 38], "apid": 35, "0224b": 35, "asymp": 35, "02248": [35, 38], "barv": 35, "02ae7": 35, "tack": [35, 38], "overbar": 35, "bcong": 35, "0224c": [35, 38], "bepsi": 35, "003f6": [35, 38], "greek": [35, 38], "revers": [35, 36, 38, 199, 226, 232, 249, 267, 274, 279, 288, 294, 316, 322, 368, 545, 552, 553, 612, 616, 631, 635, 664, 709, 763, 765, 804, 843, 907, 968, 1055, 1088], "lunat": [35, 38], "epsilon": [35, 38], "bowti": 35, "022c8": 35, "bsim": 35, "0223d": [35, 38], "bsime": 35, "022cd": [35, 38], "bsolhsub": 35, "0005c": [35, 36], "02282": [35, 38], "solidu": [35, 36], "subset": [35, 38, 242, 987, 1000, 1057], "bump": 35, "0224e": [35, 38], "geometr": [35, 38, 246], "equival": [35, 38, 79, 93, 107, 110, 242, 396, 400, 415, 420, 581, 658, 834, 836, 871, 903, 936, 1016, 1038, 1048, 1058], "02aae": 35, "bumpi": 35, "0224f": [35, 38], "between": [35, 38, 70, 90, 104, 129, 154, 155, 156, 158, 164, 165, 175, 190, 202, 215, 223, 226, 229, 234, 236, 239, 242, 246, 249, 264, 267, 274, 288, 293, 306, 316, 319, 322, 328, 338, 372, 375, 388, 410, 415, 422, 435, 440, 449, 460, 481, 491, 513, 521, 585, 602, 661, 717, 727, 731, 742, 764, 765, 769, 815, 841, 842, 847, 907, 914, 944, 954, 968, 969, 970, 971, 978, 982, 1016, 1027, 1037, 1039, 1050, 1114, 1166], "cire": 35, "02257": [35, 38], "colon": [35, 36, 38, 1086], "02237": [35, 38], "proport": [35, 38, 155], "02a74": 35, "02254": [35, 38], "congdot": 35, "02a6d": 35, "congruent": [35, 38], "csub": 35, "02acf": 35, "close": [35, 54, 113, 134, 159, 165, 174, 186, 204, 213, 214, 227, 234, 258, 259, 261, 284, 288, 316, 318, 319, 415, 449, 454, 527, 545, 695, 723, 732, 740, 762, 763, 853, 914, 932, 933, 934, 936, 937, 939, 940, 941, 942, 943, 946, 948, 951, 977, 981, 1005, 1117, 1174], "csube": 35, "02ad1": 35, "csup": 35, "02ad0": 35, "superset": [35, 38, 1057, 1160], "csupe": 35, "02ad2": 35, "cuepr": 35, "022de": [35, 38], "cuesc": 35, "022df": [35, 38], "succe": [35, 38, 788, 889, 918, 1007], "cupr": 35, "0227c": [35, 38], "dashv": 35, "02ae4": [35, 38], "turnstil": [35, 38], "022a3": [35, 38], "easter": [35, 206], "02a6e": 35, "asterisk": [35, 36, 38], "ecir": 35, "02256": [35, 38], "IN": [35, 38, 158], "ecolon": 35, "02255": [35, 38], "eddot": 35, "02a77": [35, 38], "edot": 35, "02251": [35, 38], "efdot": 35, "02252": [35, 38], "THE": [35, 38, 933], "02a9a": 35, "greater": [35, 36, 38, 107, 116, 281, 387, 515, 521, 529, 532, 567, 709, 763, 796, 1039], "than": [35, 36, 38, 43, 66, 69, 107, 114, 116, 124, 133, 134, 150, 154, 155, 159, 161, 164, 165, 169, 186, 190, 193, 197, 206, 213, 216, 223, 229, 234, 236, 239, 242, 246, 273, 276, 281, 305, 308, 328, 387, 388, 407, 409, 438, 439, 440, 451, 452, 454, 460, 467, 515, 523, 529, 532, 567, 571, 583, 586, 588, 589, 654, 667, 678, 704, 717, 741, 763, 766, 781, 796, 802, 806, 810, 870, 895, 899, 907, 915, 925, 926, 933, 936, 953, 981, 985, 1000, 1001, 1016, 1021, 1038, 1039, 1083, 1087, 1117, 1124, 1127, 1143, 1161], "02a96": [35, 38], "slant": [35, 38], "egsdot": 35, "02a98": 35, "el": [35, 202, 213, 249], "02a99": 35, "less": [35, 36, 38, 59, 63, 79, 150, 154, 155, 156, 161, 165, 215, 229, 246, 260, 269, 270, 276, 290, 291, 365, 387, 388, 392, 435, 438, 469, 521, 625, 645, 671, 717, 719, 741, 763, 781, 783, 810, 840, 854, 870, 897, 900, 901, 903, 906, 936, 1021, 1039, 1058, 1136, 1137, 1150, 1161, 1167], "02a95": [35, 38], "elsdot": 35, "02a97": 35, "equest": 35, "0225f": [35, 38], "equivdd": 35, "02a78": 35, "erdot": 35, "02253": [35, 38], "esdot": 35, "02250": [35, 38], "limit": [35, 38, 64, 154, 155, 171, 193, 223, 229, 239, 242, 288, 388, 430, 623, 667, 810, 847, 952, 971, 1013, 1014, 1039, 1112, 1134], "esim": 35, "02a73": 35, "02242": [35, 38], "fork": [35, 43, 133, 156, 171, 175, 763, 769, 770, 772, 777, 780, 787, 791, 801, 814, 819, 825, 828, 831, 906, 939, 952, 960, 978, 1174], "022d4": [35, 38], "pitchfork": [35, 38], "forkv": 35, "02ad9": 35, "02322": 35, "gap": 35, "02a86": [35, 38], "02267": [35, 38], "gel": 35, "02a8c": [35, 38], "022db": [35, 38], "02a7e": [35, 38], "gescc": 35, "02aa9": 35, "gesdot": 35, "02a80": 35, "gesdoto": 35, "02a82": 35, "gesdotol": 35, "02a84": 35, "gesl": 35, "0fe00": [35, 38], "02a94": 35, "022d9": [35, 38], "02277": [35, 38], "gla": 35, "02aa5": 35, "gle": 35, "02a92": 35, "glj": 35, "02aa4": 35, "overlap": [35, 242, 246, 288, 761, 794, 1019], "gsdot": 35, "022d7": [35, 38], "gsim": 35, "02273": [35, 38], "gsime": 35, "02a8e": 35, "similar": [35, 59, 63, 122, 154, 156, 186, 190, 194, 196, 227, 240, 254, 390, 397, 468, 495, 524, 525, 556, 568, 577, 695, 730, 731, 758, 759, 781, 796, 810, 854, 1000, 1002, 1108], "gsiml": 35, "02a90": 35, "0226b": [35, 38], "gtcc": 35, "02aa7": 35, "gtcir": 35, "02a7a": 35, "gtdot": 35, "gtquest": 35, "02a7c": 35, "mark": [35, 36, 38, 213, 254, 343, 344, 384, 406, 706, 714, 826, 1016, 1018, 1136], "gtrarr": 35, "02978": 35, "homtht": 35, "0223b": 35, "homothet": 35, "lap": 35, "02a85": [35, 38], "lat": 35, "02aab": 35, "larger": [35, 69, 79, 186, 193, 216, 233, 246, 296, 312, 436, 439, 451, 489, 569, 586, 588, 781, 830, 852, 914, 916, 981, 1001, 1014, 1163], "late": [35, 154, 156, 279, 281, 730, 731, 916, 972, 1016, 1033, 1050, 1164], "02aad": 35, "ldot": 35, "022d6": [35, 38], "le": [35, 489], "02266": [35, 38], "02a8b": [35, 38], "022da": [35, 38], "02a7d": [35, 38], "lescc": 35, "02aa8": 35, "lesdot": 35, "02a7f": 35, "lesdoto": 35, "02a81": 35, "lesdotor": 35, "02a83": 35, "lesg": 35, "02a93": 35, "lg": [35, 294, 310, 1121], "02276": [35, 38], "lge": 35, "02a91": 35, "ll": [35, 38, 59, 60, 63, 116, 153, 154, 155, 157, 159, 161, 164, 169, 170, 182, 184, 194, 196, 210, 239, 242, 270, 273, 276, 510, 524, 586, 588, 589, 810, 836, 907, 916, 927, 942, 989, 992, 998, 1031, 1124], "022d8": 35, "lsim": 35, "02272": [35, 38], "lsime": 35, "02a8d": 35, "lsimg": 35, "02a8f": 35, "0226a": [35, 38], "ltcc": 35, "02aa6": 35, "ltcir": 35, "02a79": 35, "ltdot": 35, "ltlarr": 35, "02976": 35, "ltquest": 35, "02a7b": 35, "ltrie": 35, "022b4": [35, 38], "normal": [35, 38, 89, 142, 154, 156, 161, 169, 172, 177, 186, 246, 427, 454, 459, 464, 583, 585, 826, 842, 847, 968, 982, 1035, 1114, 1127, 1141, 1153], "mcomma": 35, "02a29": 35, "comma": [35, 36, 192, 205, 226, 306, 1116], "mddot": 35, "0223a": 35, "mid": 35, "02223": [35, 38], "mlcp": 35, "02adb": 35, "transvers": 35, "intersect": [35, 38, 210, 234, 306, 1057], "model": [35, 114, 257, 272, 278, 281, 426, 1039, 1111, 1114, 1133], "022a7": 35, "mstpo": 35, "0223e": 35, "invert": [35, 36, 64, 186, 950], "lazi": [35, 223, 229, 239, 242, 379, 726], "02abb": 35, "0227a": [35, 38], "prap": 35, "02ab7": [35, 38], "prcue": 35, "pre": [35, 156, 186, 215, 234, 389, 571, 573, 577, 623, 624, 625, 675, 716, 717, 870, 1032, 1047, 1120], "02ab3": 35, "02aaf": [35, 38], "singl": [35, 36, 38, 44, 59, 63, 64, 85, 107, 111, 112, 113, 116, 121, 124, 134, 136, 154, 156, 174, 213, 214, 223, 227, 229, 235, 236, 239, 242, 246, 270, 365, 371, 383, 384, 396, 442, 445, 449, 451, 454, 480, 493, 578, 632, 706, 717, 725, 727, 738, 769, 779, 781, 843, 845, 846, 847, 870, 875, 876, 877, 879, 895, 907, 915, 919, 955, 966, 968, 969, 978, 981, 985, 987, 990, 996, 1000, 1001, 1002, 1015, 1052, 1053, 1060, 1075, 1081, 1114, 1121, 1129, 1132, 1136, 1141, 1142, 1149], "prsim": 35, "0227e": [35, 38], "prurel": 35, "022b0": 35, "ratio": [35, 246], "02236": 35, "rtrie": 35, "022b5": [35, 38], "AS": [35, 38, 933], "rtriltri": 35, "029ce": 35, "triangl": [35, 38, 545], "samalg": 35, "02210": [35, 38], "coproduct": [35, 38], "02abc": 35, "0227b": [35, 38], "scap": 35, "02ab8": [35, 38], "sccue": 35, "0227d": [35, 38], "sce": 35, "02ab4": 35, "02ab0": [35, 38], "scsim": 35, "0227f": [35, 38], "sdote": 35, "02a66": 35, "sfrown": 35, "simg": 35, "02a9e": 35, "02aa0": 35, "siml": 35, "02a9d": 35, "02a9f": 35, "smid": 35, "02323": 35, "smt": 35, "02aaa": 35, "smaller": [35, 232, 246, 365, 427, 436, 451, 1002], "smte": 35, "02aac": 35, "spar": [35, 272, 451], "02225": [35, 38], "parallel": [35, 38, 59, 63, 73, 74, 75, 79, 92, 160, 183, 186, 190, 192, 227, 282, 283, 304, 459, 739, 763, 800, 802, 810, 813, 846, 854, 955, 966, 969, 1016, 1018, 1019, 1103, 1108, 1165, 1166, 1173, 1177], "sqsub": 35, "0228f": [35, 38], "squar": [35, 36, 38, 64, 174, 187, 197, 213, 219, 226, 229, 234, 236, 242, 246, 255, 267, 281, 288, 306, 310, 316, 322, 477, 588, 1010, 1059, 1062, 1129], "sqsube": 35, "02291": [35, 38], "sqsup": 35, "02290": [35, 38], "sqsupe": 35, "02292": [35, 38], "ssmile": 35, "sub": [35, 230, 242, 288, 472, 489, 569, 1006, 1045, 1054, 1060, 1150], "022d0": [35, 38], "sube": 35, "02ac5": [35, 38], "subedot": 35, "02ac3": 35, "submult": 35, "02ac1": 35, "subplu": 35, "02abf": 35, "subrarr": 35, "02979": 35, "subsim": 35, "02ac7": 35, "subsub": 35, "02ad5": 35, "subsup": 35, "02ad3": 35, "sup": [35, 940], "022d1": [35, 38], "supdsub": 35, "02ad8": 35, "supe": 35, "02ac6": [35, 38], "supedot": 35, "02ac4": 35, "suphsol": 35, "02283": [35, 38], "0002f": [35, 36], "suphsub": 35, "02ad7": 35, "suplarr": 35, "0297b": 35, "supmult": 35, "02ac2": 35, "supplu": 35, "02ac0": 35, "supsim": 35, "02ac8": 35, "supsub": 35, "02ad4": 35, "supsup": 35, "02ad6": 35, "thkap": 35, "thksim": 35, "0223c": [35, 38], "topfork": 35, "02ada": 35, "tee": [35, 854], "trie": 35, "0225c": [35, 38], "delta": [35, 38, 114, 169, 219], "twixt": 35, "0226c": [35, 38], "vbar": 35, "02aeb": 35, "02ae8": 35, "underbar": 35, "vbarv": 35, "02ae9": 35, "vdash": 35, "022ab": 35, "022a9": 35, "022a8": [35, 38], "022a2": [35, 38], "vdashl": 35, "02ae6": 35, "veebar": 35, "022bb": 35, "xor": [35, 1027], "vltri": 35, "022b2": [35, 38], "vprop": 35, "0221d": [35, 38], "vrtri": 35, "022b3": [35, 38], "vvdash": 35, "022aa": 35, "\u00bd": 36, "\u00bc": 36, "\u215b": 36, "\u00be": 36, "\u215c": 36, "\u215d": 36, "\u215e": 36, "_": [36, 39, 64, 174, 175, 210, 223, 226, 227, 229, 236, 239, 242, 249, 252, 264, 288, 310, 334, 382, 451, 581, 704, 800, 870, 972, 998, 1016, 1018], "\u00b5": 36, "\u03c9": 36, "\u00aa": 36, "\u00ba": 36, "\u00b9": 36, "\u00b2": 36, "\u00b3": 36, "amp": [36, 226], "00026": 36, "ampersand": [36, 680], "apo": 36, "00027": 36, "apostroph": 36, "ast": [36, 489], "0002a": 36, "brvbar": 36, "000a6": 36, "broken": [36, 425, 426, 695, 802, 815, 1020, 1086, 1116], "bsol": 36, "cent": 36, "000a2": 36, "0003a": 36, "0002c": 36, "commat": 36, "00040": 36, "commerci": [36, 161, 788, 849], "AT": 36, "000a9": 36, "curren": 36, "000a4": 36, "currenc": [36, 272, 451], "02193": [36, 38], "deg": 36, "000b0": 36, "degre": [36, 468, 479, 510, 621, 916, 1033], "000f7": [36, 38], "00024": 36, "0003d": 36, "excl": 36, "00021": 36, "frac12": 36, "000bd": 36, "vulgar": 36, "fraction": [36, 246, 328], "ONE": [36, 668], "frac14": 36, "000bc": 36, "quarter": 36, "frac18": 36, "0215b": 36, "eighth": 36, "frac34": 36, "000be": 36, "frac38": 36, "0215c": 36, "frac58": 36, "0215d": 36, "frac78": 36, "0215e": 36, "0003e": 36, "horbar": 36, "02015": 36, "horizont": [36, 384], "hyphen": 36, "02010": 36, "iexcl": 36, "000a1": 36, "iquest": 36, "000bf": 36, "laquo": 36, "000ab": 36, "quotat": [36, 38], "lcub": 36, "0007b": [36, 38], "curli": [36, 38], "bracket": [36, 38, 1036], "ldquo": 36, "0201c": [36, 38], "lowbar": 36, "0005f": 36, "low": [36, 117, 150, 197, 226, 246, 263, 377, 409, 445, 449, 454, 477, 500, 513, 516, 517, 521, 725, 727, 792, 806, 846, 914, 970, 986, 1065, 1163], "lpar": 36, "00028": 36, "parenthesi": 36, "lsqb": 36, "0005b": [36, 38], "lsquo": 36, "02018": [36, 38], "0003c": 36, "micro": [36, 223, 229, 239, 242], "000b5": 36, "middot": 36, "000b7": [36, 38], "middl": [36, 38, 39, 64, 164, 175, 230, 246, 298, 301, 429, 449, 516, 545, 788, 907, 917, 923, 984, 1018], "nbsp": 36, "000a0": [36, 38], "NO": [36, 38, 134, 165, 206, 339, 648, 916, 981], "space": [36, 38, 64, 79, 100, 111, 112, 116, 150, 154, 155, 156, 161, 174, 177, 201, 215, 242, 260, 267, 269, 270, 288, 290, 291, 333, 344, 345, 353, 372, 391, 393, 412, 473, 478, 487, 491, 515, 516, 517, 518, 519, 520, 521, 522, 525, 567, 576, 585, 620, 740, 762, 763, 771, 808, 823, 837, 838, 839, 840, 844, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 884, 885, 886, 887, 888, 890, 906, 915, 918, 919, 920, 921, 922, 929, 933, 934, 935, 936, 937, 945, 947, 952, 960, 961, 963, 964, 967, 969, 977, 984, 986, 988, 989, 990, 991, 992, 993, 994, 995, 1001, 1016, 1019, 1053], "000ac": 36, "NOT": [36, 38, 184, 371, 410, 455, 494, 495, 508, 509, 781, 898, 1127], "num": [36, 159, 173, 174, 187, 197, 213, 227, 229, 234, 236, 242, 246, 264, 267, 306, 310, 415, 600, 602, 684, 685, 686, 687, 696, 716, 747, 749, 751, 753, 898, 903, 1011, 1116], "00023": 36, "ohm": 36, "02126": 36, "ordf": 36, "000aa": 36, "feminin": 36, "ordin": [36, 242, 249, 252, 288, 294, 310, 316, 322, 1121], "indic": [36, 205, 223, 229, 234, 239, 242, 278, 623, 771], "ordm": 36, "000ba": 36, "masculin": 36, "para": 36, "000b6": 36, "pilcrow": 36, "percnt": 36, "00025": 36, "percent": [36, 246], "period": [36, 85, 125, 129, 171, 194, 443, 576, 742, 820, 907, 915, 934, 944, 966, 968, 981, 1136], "0002e": 36, "full": [36, 126, 134, 172, 217, 221, 267, 388, 403, 431, 436, 539, 550, 585, 689, 726, 739, 763, 849, 854, 915, 957, 963, 1008, 1027, 1060, 1116, 1124], "stop": [36, 148, 159, 215, 242, 279, 281, 283, 288, 306, 316, 327, 454, 494, 508, 804, 907, 982, 1007, 1130, 1148], "0002b": 36, "plusmn": 36, "000b1": [36, 38], "000a3": 36, "quest": 36, "0003f": 36, "quot": [36, 174, 222, 225, 229, 236, 242, 250, 384, 835, 898, 899, 917, 1052], "00022": 36, "raquo": 36, "000bb": 36, "rcub": 36, "0007d": [36, 38], "rdquo": 36, "0201d": [36, 38], "reg": 36, "000ae": [36, 38], "rpar": 36, "00029": 36, "rsqb": 36, "0005d": [36, 38], "rsquo": 36, "02019": [36, 38], "sect": 36, "000a7": 36, "section": [36, 38, 89, 154, 158, 159, 160, 169, 178, 191, 215, 273, 276, 279, 360, 553, 571, 653, 738, 800, 802, 870, 913, 914, 930, 984, 985, 986, 988, 994, 1000, 1001, 1002, 1141], "semi": [36, 274, 308, 481, 725, 952, 1003], "0003b": 36, "semicolon": [36, 454, 1116], "shy": 36, "000ad": 36, "soft": [36, 151, 349, 808], "sol": 36, "sung": 36, "0266a": 36, "sup1": 36, "000b9": 36, "superscript": 36, "sup2": 36, "000b2": 36, "sup3": 36, "000b3": 36, "000d7": 36, "trade": 36, "02122": 36, "02191": [36, 38], "verbar": 36, "0007c": [36, 38], "000a5": 36, "lorem": 37, "ipsum": 37, "h\u00f6dlmoser": 37, "anywai": [37, 43, 53, 62, 153, 155, 156, 165, 184, 186, 206, 215, 216, 242, 391, 439, 445, 449, 455, 571, 577, 586, 588, 589, 667, 675, 678, 682, 716, 717, 727, 802, 810, 849, 870, 960, 1016, 1127, 1141], "hmm": [37, 151, 160, 173, 184, 556, 689, 981], "annoi": [37, 43, 328, 451, 667, 1141], "thing": [37, 40, 42, 43, 49, 101, 129, 147, 153, 154, 156, 157, 158, 159, 160, 161, 165, 174, 178, 182, 185, 186, 190, 194, 206, 223, 229, 230, 232, 239, 242, 252, 305, 315, 331, 389, 405, 409, 433, 439, 442, 449, 473, 477, 545, 552, 553, 569, 571, 578, 583, 585, 607, 667, 689, 706, 730, 739, 761, 769, 774, 806, 810, 835, 849, 854, 903, 907, 908, 935, 940, 963, 968, 984, 996, 1000, 1001, 1007, 1021, 1035, 1058, 1148, 1166], "thin": [37, 38], "border": 37, "anfrag": [37, 1157, 1158, 1159, 1160, 1165, 1167, 1168, 1172, 1173, 1174, 1175, 1177, 1178, 1179], "dauer": [37, 1157, 1158, 1159, 1160, 1165, 1167, 1168, 1172, 1173, 1174, 1175, 1177, 1178, 1179], "tage": [37, 179, 181, 189, 359, 1157, 1158, 1159, 1160, 1165, 1167, 1168, 1172, 1174, 1175, 1177, 1178, 1179], "sysprog": [37, 150, 151, 270, 361, 763, 817, 822, 906, 947, 948, 951, 1174, 1175, 1177, 1178], "catcher": 37, "somehow": [37, 42, 122, 129, 133, 138, 155, 308, 583, 818, 1136, 1137], "einf\u00fchrungskur": [37, 1157, 1174, 1175, 1177, 1178], "richtet": [37, 1159, 1174], "kennen": [37, 343, 1174], "lernen": [37, 1174], "zusammenh\u00e4ng": [37, 1174], "grundpfeil": [37, 1174], "erkl\u00e4rt": [37, 174, 177, 181, 1158, 1174, 1178, 1179], "bild": [37, 177, 1174], "orientieren": [37, 1174], "zurechtfinden": [37, 343, 1174], "somedai": 37, "better": [37, 57, 62, 66, 133, 148, 150, 151, 155, 159, 165, 166, 176, 186, 187, 189, 190, 192, 193, 194, 197, 198, 211, 215, 221, 223, 224, 226, 227, 232, 233, 234, 236, 237, 240, 243, 246, 251, 255, 263, 270, 283, 287, 293, 368, 380, 388, 395, 404, 409, 410, 411, 417, 421, 424, 428, 429, 437, 439, 441, 446, 447, 450, 454, 459, 460, 465, 467, 545, 572, 580, 594, 607, 624, 647, 659, 662, 667, 669, 707, 719, 730, 760, 762, 763, 810, 889, 915, 916, 936, 952, 955, 981, 982, 1010, 1021, 1039, 1053, 1065, 1104, 1105, 1108, 1113, 1115, 1120, 1126, 1141, 1150], "yet": [37, 79, 144, 154, 161, 164, 174, 176, 243, 244, 254, 267, 305, 406, 439, 467, 476, 489, 491, 526, 527, 539, 545, 638, 741, 810, 827, 837, 838, 915, 923, 927, 981, 1008, 1038, 1065, 1132, 1141, 1150], "redefin": 37, "wrap": [37, 64, 213, 251, 305, 488, 727, 733, 810, 1133], "look": [37, 42, 43, 45, 59, 63, 66, 83, 90, 103, 116, 121, 129, 134, 147, 148, 153, 154, 155, 156, 157, 159, 161, 164, 169, 174, 182, 186, 190, 193, 205, 211, 215, 240, 270, 273, 276, 279, 280, 298, 301, 305, 319, 327, 360, 423, 431, 439, 445, 449, 451, 454, 455, 462, 510, 525, 526, 539, 556, 582, 594, 606, 658, 671, 695, 727, 733, 734, 764, 769, 779, 806, 810, 837, 838, 842, 846, 849, 860, 862, 867, 874, 882, 897, 908, 914, 915, 923, 940, 950, 977, 978, 1001, 1005, 1015, 1032, 1035, 1073, 1077, 1086, 1108, 1115, 1116, 1127, 1143, 1161, 1164], "mdbootstrap": 37, "jqueri": 37, "icon": 37, "longrightarrow": 38, "rightarrow": 38, "doubleleftrightarrow": 38, "02220": 38, "applyfunct": 38, "02061": 38, "applic": [38, 64, 79, 95, 129, 139, 154, 159, 171, 184, 206, 301, 305, 308, 339, 360, 435, 438, 445, 526, 603, 606, 674, 715, 848, 908, 915, 927, 952, 1115], "approx": [38, 1096, 1141], "approxeq": 38, "assign": [38, 98, 174, 175, 176, 181, 187, 197, 204, 212, 223, 226, 229, 232, 234, 238, 239, 244, 246, 250, 274, 278, 279, 281, 306, 311, 322, 342, 348, 349, 371, 388, 394, 395, 404, 411, 417, 418, 421, 424, 428, 433, 435, 437, 441, 446, 447, 481, 488, 494, 495, 503, 508, 509, 571, 572, 575, 582, 638, 647, 654, 664, 668, 669, 671, 675, 682, 705, 707, 712, 721, 727, 759, 760, 762, 763, 914, 916, 955, 966, 969, 971, 1048, 1059, 1130, 1132], "backcong": 38, "backepsilon": 38, "backprim": 38, "02035": 38, "backsim": 38, "backsimeq": 38, "backslash": [38, 384, 894, 1052], "02216": 38, "barwedg": 38, "02305": 38, "02235": 38, "bernoulli": 38, "0212c": 38, "bigcap": 38, "022c2": 38, "bigcirc": 38, "025ef": 38, "bigcup": 38, "022c3": 38, "union": [38, 210, 218, 234, 306, 427, 744, 748, 751, 752, 753, 754, 762, 763, 1057, 1162], "bigodot": 38, "02a00": 38, "bigoplu": 38, "02a01": 38, "bigotim": 38, "02a02": 38, "bigsqcup": 38, "02a06": 38, "bigstar": 38, "02605": 38, "bigtriangledown": 38, "025bd": 38, "white": [38, 278, 373], "bigtriangleup": 38, "025b3": 38, "biguplu": 38, "02a04": 38, "bigve": 38, "022c1": 38, "logic": [38, 117, 156, 331, 379, 395, 404, 409, 411, 417, 421, 424, 428, 433, 437, 441, 446, 447, 474, 491, 669, 707, 760, 762, 763, 1127], "bigwedg": 38, "022c0": 38, "bkarow": 38, "blacklozeng": 38, "029eb": 38, "lozeng": 38, "blacksquar": 38, "025aa": 38, "blacktriangl": 38, "025b4": 38, "blacktriangledown": 38, "025be": 38, "blacktriangleleft": 38, "025c2": 38, "blacktriangleright": 38, "025b8": 38, "bot": [38, 1141], "022a5": 38, "boxminu": 38, "0229f": 38, "boxplu": 38, "0229e": 38, "boxtim": 38, "022a0": 38, "breve": 38, "002d8": 38, "bullet": [38, 156, 1115], "02022": 38, "bumpeq": 38, "capitaldifferentiald": 38, "02145": 38, "struck": 38, "ital": 38, "d": [38, 86, 98, 108, 116, 154, 155, 156, 157, 173, 176, 184, 187, 192, 197, 202, 204, 210, 213, 216, 219, 220, 224, 226, 227, 229, 234, 236, 239, 242, 246, 249, 252, 264, 267, 270, 274, 283, 284, 287, 288, 294, 302, 306, 310, 316, 322, 334, 336, 337, 342, 365, 372, 373, 375, 379, 406, 410, 439, 449, 451, 465, 472, 477, 571, 577, 584, 638, 639, 644, 645, 647, 651, 677, 714, 726, 727, 739, 741, 783, 804, 818, 834, 837, 838, 847, 849, 853, 854, 867, 870, 871, 892, 896, 898, 903, 909, 914, 915, 916, 928, 933, 981, 984, 1006, 1008, 1034, 1040, 1045, 1047, 1048, 1052, 1053, 1056, 1076], "caylei": 38, "0212d": 38, "letter": [38, 66, 382, 1038], "cedilla": 38, "000b8": 38, "centerdot": 38, "checkmark": 38, "02713": 38, "circeq": 38, "circlearrowleft": 38, "circlearrowright": 38, "circledast": 38, "0229b": 38, "circledcirc": 38, "0229a": 38, "circleddash": 38, "0229d": 38, "circledot": 38, "02299": 38, "circledr": 38, "024c8": 38, "latin": [38, 233, 294, 310], "circleminu": 38, "02296": 38, "circleplu": 38, "02295": 38, "circletim": 38, "02297": 38, "clockwisecontourintegr": 38, "02232": 38, "contour": 38, "closecurlydoublequot": 38, "closecurlyquot": 38, "clubsuit": 38, "02663": 38, "suit": [38, 44, 98, 121, 150, 190, 259, 263, 350, 427, 436, 467, 468, 469, 471, 472, 474, 476, 489, 491, 492, 510, 523, 524, 525, 526, 527, 586, 587, 588, 589, 678, 679, 716, 725, 726, 757, 758, 759, 761, 1142, 1149, 1164, 1179], "coloneq": 38, "complement": [38, 107, 388], "02201": 38, "complex": [38, 70, 154, 165, 169, 186, 192, 212, 229, 234, 236, 242, 246, 250, 252, 267, 274, 288, 316, 342, 363, 406, 418, 433, 742, 914, 915, 939, 955, 978, 1039, 1048, 1154, 1164], "02102": 38, "02261": 38, "ident": [38, 238, 288, 300, 562, 1027, 1029, 1048], "contourintegr": 38, "0222e": 38, "counterclockwisecontourintegr": 38, "02233": 38, "cupcap": 38, "0224d": 38, "curlyeqprec": 38, "curlyeqsucc": 38, "curlyve": 38, "022ce": 38, "curlywedg": 38, "022cf": 38, "curvearrowleft": 38, "curvearrowright": 38, "dbkarow": 38, "ddagger": 38, "02021": 38, "ddotseq": 38, "02207": 38, "nabla": 38, "diacriticalacut": 38, "000b4": 38, "acut": 38, "accent": 38, "diacriticaldot": 38, "002d9": 38, "diacriticaldoubleacut": 38, "002dd": 38, "diacriticalgrav": 38, "00060": 38, "grave": 38, "diacriticaltild": 38, "002dc": 38, "022c4": 38, "diamondsuit": 38, "02666": 38, "differentiald": 38, "02146": 38, "digamma": 38, "003dd": 38, "div": [38, 439, 489], "divideontim": 38, "022c7": 38, "doteq": 38, "doteqdot": 38, "dotequ": 38, "dotminu": 38, "02238": 38, "dotplu": 38, "02214": 38, "dotsquar": 38, "022a1": 38, "doublebarwedg": 38, "02306": 38, "doublecontourintegr": 38, "0222f": 38, "surfac": [38, 186, 846, 914, 915, 1113, 1115], "doubledot": 38, "000a8": 38, "diaeresi": 38, "doubledownarrow": 38, "doubleleftarrow": 38, "021d0": 38, "doubleleftte": 38, "doublelongleftarrow": 38, "doublelongleftrightarrow": 38, "doublelongrightarrow": 38, "doublerightarrow": 38, "021d2": 38, "doublerightte": 38, "doubleuparrow": 38, "doubleupdownarrow": 38, "doubleverticalbar": 38, "downarrow": 38, "downarrowuparrow": 38, "downdownarrow": 38, "downharpoonleft": 38, "downharpoonright": 38, "downleftvector": 38, "downrightvector": 38, "downte": 38, "022a4": 38, "downteearrow": 38, "021a7": 38, "drbkarow": 38, "02208": 38, "emptyset": 38, "02205": 38, "eqcirc": 38, "eqcolon": 38, "eqsim": 38, "eqslantgtr": 38, "eqslantless": 38, "equaltild": 38, "equilibrium": 38, "02203": 38, "THERE": [38, 573], "02130": 38, "exponential": 38, "02147": 38, "fallingdotseq": 38, "foral": [38, 1059], "02200": 38, "FOR": [38, 165, 187, 194], "fouriertrf": 38, "02131": 38, "geq": 38, "02265": 38, "geqq": 38, "geqslant": 38, "ggg": 38, "gnapprox": 38, "02a8a": 38, "gneq": 38, "02a88": 38, "gneqq": 38, "02269": 38, "BUT": 38, "greaterequ": 38, "greaterequalless": 38, "greaterfullequ": 38, "greaterless": 38, "greaterslantequ": 38, "greatertild": 38, "gtrapprox": 38, "gtrdot": 38, "gtreqless": 38, "gtreqqless": 38, "gtrless": 38, "gtrsim": 38, "gvertneqq": 38, "hacek": 38, "002c7": 38, "caron": 38, "hbar": 38, "0210f": 38, "planck": 38, "constant": [38, 215, 223, 229, 232, 233, 234, 239, 242, 246, 284, 305, 371, 379, 380, 385, 395, 399, 404, 411, 417, 421, 424, 428, 437, 441, 446, 447, 512, 619, 669, 680, 707, 717, 719, 760, 762, 763], "heartsuit": 38, "02665": 38, "hilbertspac": 38, "0210b": 38, "h": [38, 42, 44, 98, 113, 116, 125, 129, 130, 131, 132, 134, 156, 161, 177, 180, 182, 187, 193, 197, 202, 215, 216, 223, 226, 227, 234, 236, 246, 259, 270, 281, 316, 319, 364, 365, 367, 371, 373, 375, 383, 406, 407, 409, 415, 422, 430, 432, 436, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 467, 468, 469, 470, 471, 472, 474, 476, 479, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 516, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 533, 535, 536, 537, 538, 540, 541, 542, 543, 544, 546, 552, 553, 555, 556, 559, 562, 564, 569, 570, 571, 572, 577, 578, 579, 580, 582, 583, 584, 585, 586, 587, 588, 589, 647, 656, 657, 658, 659, 660, 661, 662, 663, 672, 674, 677, 678, 679, 695, 696, 699, 710, 713, 716, 717, 721, 725, 726, 727, 728, 730, 739, 741, 743, 747, 749, 751, 752, 753, 754, 757, 758, 759, 761, 769, 774, 778, 779, 781, 788, 790, 792, 794, 796, 798, 802, 804, 806, 815, 820, 823, 824, 827, 829, 830, 836, 847, 854, 867, 870, 892, 898, 908, 910, 914, 930, 932, 933, 934, 936, 937, 939, 940, 941, 942, 943, 946, 948, 951, 965, 968, 972, 974, 976, 977, 981, 982, 984, 985, 986, 987, 992, 996, 999, 1000, 1002, 1045, 1060, 1136, 1143, 1148, 1150, 1153], "hksearow": 38, "hkswarow": 38, "hookleftarrow": 38, "hookrightarrow": 38, "hslash": 38, "humpdownhump": 38, "humpequ": 38, "iiiint": 38, "02a0c": 38, "quadrupl": 38, "iiint": 38, "0222d": 38, "02111": 38, "imaginaryi": 38, "02148": 38, "imaglin": 38, "02110": 38, "imagpart": 38, "impli": [38, 731, 1136], "02124": 38, "0222b": 38, "interc": 38, "022ba": 38, "intercal": 38, "intprod": 38, "02a3c": 38, "interior": 38, "invisiblecomma": 38, "02063": 38, "invis": [38, 495], "invisibletim": 38, "02062": 38, "langl": 38, "02329": 38, "laplacetrf": 38, "02112": 38, "lbrace": 38, "lbrack": 38, "leftanglebracket": 38, "leftarrow": 38, "leftarrowbar": 38, "021e4": 38, "leftarrowrightarrow": 38, "leftarrowtail": 38, "leftceil": 38, "02308": 38, "ceil": [38, 214, 227, 246, 316], "leftdoublebracket": 38, "0301a": 38, "leftdownvector": 38, "leftfloor": 38, "0230a": 38, "leftharpoondown": 38, "leftharpoonup": 38, "leftleftarrow": 38, "leftrightarrow": 38, "leftrightharpoon": 38, "leftrightsquigarrow": 38, "leftte": 38, "leftteearrow": 38, "021a4": 38, "leftthreetim": 38, "022cb": 38, "semidirect": 38, "lefttriangl": 38, "lefttriangleequ": 38, "leftupvector": 38, "leftvector": 38, "leq": 38, "02264": 38, "leqq": 38, "leqslant": 38, "lessapprox": 38, "lessdot": 38, "lesseqgtr": 38, "lesseqqgtr": 38, "lessequalgreat": 38, "lessfullequ": 38, "lessgreat": 38, "lessgtr": 38, "lesssim": 38, "lessslantequ": 38, "lesstild": 38, "llcorner": 38, "0231e": 38, "bottom": [38, 201, 305, 510, 523, 808, 870, 889, 907, 1007], "corner": [38, 215, 278, 360, 372, 452, 464, 523, 739], "lleftarrow": 38, "lmoustach": 38, "023b0": 38, "upper": [38, 187, 210, 234, 236, 242, 252, 267, 274, 288, 310, 322, 327, 336, 365, 369, 385, 409, 969, 1069], "lower": [38, 156, 210, 223, 229, 234, 239, 242, 246, 252, 267, 288, 327, 336, 365, 369, 385, 409, 469, 613, 970, 978, 1027, 1132], "lnapprox": 38, "02a89": 38, "lneq": 38, "02a87": 38, "lneqq": 38, "02268": 38, "longleftarrow": 38, "longleftrightarrow": 38, "longmapsto": 38, "looparrowleft": 38, "looparrowright": 38, "lowerleftarrow": 38, "lowerrightarrow": 38, "025ca": 38, "lrcorner": 38, "0231f": 38, "lvertneqq": 38, "maltes": 38, "02720": 38, "mapsto": 38, "measuredangl": 38, "02221": 38, "measur": [38, 98, 121, 124, 134, 156, 246, 279, 283, 305, 315, 435, 442, 488, 492, 514, 515, 516, 517, 518, 519, 520, 521, 525, 526, 567, 645, 747, 763, 769, 836, 845, 936, 977, 1001, 1113, 1115], "mellintrf": 38, "02133": 38, "minusplu": 38, "02213": 38, "napprox": 38, "02249": 38, "0266e": 38, "music": [38, 156, 284], "02115": 38, "nearrow": 38, "negativemediumspac": 38, "0200b": 38, "width": [38, 223, 229, 232, 233, 239, 242, 264, 272, 288, 365, 388, 477, 562, 586, 907, 978, 1053, 1116, 1165, 1172], "negativethickspac": 38, "negativethinspac": 38, "negativeverythinspac": 38, "nestedgreatergreat": 38, "nestedlessless": 38, "nexist": 38, "02204": 38, "ngeq": 38, "02271": 38, "neither": [38, 174, 467, 494, 508, 678, 855, 857, 858, 940, 1049], "nor": [38, 174, 230, 494, 508, 578, 678, 855, 857, 858, 907, 927, 940, 1049], "ngeqq": 38, "ngeqslant": 38, "ngtr": 38, "0226f": 38, "nleftarrow": 38, "nleftrightarrow": 38, "nleq": 38, "02270": 38, "nleqq": 38, "nleqslant": 38, "nless": 38, "0226e": 38, "nonbreakingspac": 38, "notcongru": 38, "02262": 38, "notdoubleverticalbar": 38, "02226": 38, "notel": 38, "02209": 38, "notequ": 38, "02260": 38, "notequaltild": 38, "notexist": 38, "notgreat": 38, "notgreaterequ": 38, "notgreaterfullequ": 38, "notgreatergreat": 38, "notgreaterless": 38, "02279": 38, "notgreaterslantequ": 38, "notgreatertild": 38, "02275": 38, "nothumpdownhump": 38, "notlefttriangl": 38, "022ea": 38, "notlefttriangleequ": 38, "022ec": 38, "notless": 38, "notlessequ": 38, "notlessgreat": 38, "02278": 38, "notlessless": 38, "notlessslantequ": 38, "notlesstild": 38, "02274": 38, "notpreced": 38, "02280": 38, "notprecedesequ": 38, "notprecedesslantequ": 38, "022e0": 38, "notreverseel": 38, "0220c": 38, "notrighttriangl": 38, "022eb": 38, "notrighttriangleequ": 38, "022ed": 38, "notsquaresubsetequ": 38, "022e2": 38, "notsquaresupersetequ": 38, "022e3": 38, "notsubset": 38, "020d2": 38, "notsubsetequ": 38, "02288": 38, "notsucce": 38, "02281": 38, "notsucceedsequ": 38, "notsucceedsslantequ": 38, "022e1": 38, "notsuperset": 38, "notsupersetequ": 38, "02289": 38, "nottild": 38, "02241": 38, "nottildeequ": 38, "02244": 38, "asymptot": 38, "nottildefullequ": 38, "02247": 38, "actual": [38, 42, 43, 48, 60, 62, 156, 159, 164, 169, 186, 213, 223, 229, 232, 239, 242, 246, 273, 276, 278, 308, 345, 469, 479, 638, 645, 667, 725, 769, 907, 915, 939, 982, 1005, 1021, 1030, 1063, 1111, 1113, 1115, 1134, 1148], "nottildetild": 38, "notverticalbar": 38, "02224": 38, "nparallel": 38, "nprec": 38, "npreceq": 38, "nrightarrow": 38, "nshortmid": 38, "nshortparallel": 38, "nsimeq": 38, "nsubset": 38, "nsubseteq": 38, "nsubseteqq": 38, "nsucc": 38, "nsucceq": 38, "nsupset": 38, "nsupseteq": 38, "nsupseteqq": 38, "ntriangleleft": 38, "ntrianglelefteq": 38, "ntriangleright": 38, "ntrianglerighteq": 38, "nwarrow": 38, "oint": 38, "opencurlydoublequot": 38, "opencurlyquot": 38, "orderof": 38, "02134": 38, "partiald": 38, "02202": 38, "partial": [38, 280, 309, 788, 1112], "differenti": [38, 70, 661, 729, 810, 855, 914, 1039, 1107, 1121], "plusminu": 38, "poincareplan": 38, "0210c": 38, "prec": 38, "precapprox": 38, "preccurlyeq": 38, "precedesequ": 38, "precedesslantequ": 38, "precedestild": 38, "preceq": 38, "precnapprox": 38, "02ab9": 38, "precneqq": 38, "02ab5": 38, "precnsim": 38, "022e8": 38, "precsim": 38, "02119": 38, "propto": 38, "quaternion": 38, "0210d": 38, "questeq": 38, "rangl": 38, "0232a": 38, "0211a": 38, "q": [38, 116, 194, 246, 409, 415, 569, 587, 588, 602, 730, 847, 870, 902, 977, 1136], "rbrace": 38, "rbrack": 38, "0211c": 38, "realin": 38, "0211b": 38, "realpart": 38, "real": [38, 74, 117, 123, 127, 129, 132, 133, 134, 145, 161, 164, 169, 172, 174, 190, 211, 224, 229, 230, 237, 239, 242, 246, 251, 254, 264, 272, 278, 287, 293, 305, 328, 389, 438, 445, 459, 465, 471, 488, 510, 518, 519, 520, 521, 522, 526, 568, 569, 574, 689, 704, 722, 725, 771, 810, 847, 848, 870, 907, 915, 927, 968, 1054, 1108, 1111, 1113, 1142, 1161, 1164], "0211d": 38, "reverseel": 38, "0220b": 38, "reverseequilibrium": 38, "reverseupequilibrium": 38, "rightanglebracket": 38, "rightarrowbar": 38, "021e5": 38, "rightarrowleftarrow": 38, "rightarrowtail": 38, "rightceil": 38, "02309": 38, "rightdoublebracket": 38, "0301b": 38, "rightdownvector": 38, "rightfloor": 38, "0230b": 38, "rightharpoondown": 38, "rightharpoonup": 38, "rightleftarrow": 38, "rightleftharpoon": 38, "rightrightarrow": 38, "rightsquigarrow": 38, "rightte": 38, "rightteearrow": 38, "rightthreetim": 38, "022cc": 38, "righttriangl": 38, "righttriangleequ": 38, "rightupvector": 38, "rightvector": 38, "risingdotseq": 38, "rmoustach": 38, "023b1": 38, "rrightarrow": 38, "searrow": 38, "setminu": 38, "shortdownarrow": 38, "shortleftarrow": 38, "shortmid": 38, "shortparallel": 38, "shortrightarrow": 38, "shortuparrow": 38, "simeq": 38, "02243": 38, "smallcircl": 38, "02218": 38, "smallsetminu": 38, "spadesuit": 38, "02660": 38, "sqrt": [38, 214, 227, 316, 569, 571, 579, 580, 588, 674, 689, 690, 691, 692, 693, 730], "0221a": 38, "sqsubset": 38, "sqsubseteq": 38, "sqsupset": 38, "sqsupseteq": 38, "025a1": 38, "squareintersect": 38, "02293": 38, "cap": [38, 226, 1065], "squaresubset": 38, "squaresubsetequ": 38, "squaresuperset": 38, "squaresupersetequ": 38, "squareunion": 38, "02294": 38, "cup": [38, 284, 322], "022c6": 38, "straightepsilon": 38, "003f5": 38, "straightphi": 38, "003d5": 38, "phi": 38, "subseteq": 38, "02286": 38, "subseteqq": 38, "subsetequ": 38, "subsetneq": 38, "0228a": 38, "subsetneqq": 38, "02acb": 38, "succ": 38, "succapprox": 38, "succcurlyeq": 38, "succeedsequ": 38, "succeedsslantequ": 38, "succeedstild": 38, "succeq": 38, "succnapprox": 38, "02aba": 38, "succneqq": 38, "02ab6": 38, "succnsim": 38, "022e9": 38, "succsim": 38, "suchthat": 38, "02211": 38, "summat": 38, "supersetequ": 38, "02287": 38, "supset": 38, "supseteq": 38, "supseteqq": 38, "supsetneq": 38, "0228b": 38, "supsetneqq": 38, "02acc": 38, "swarrow": 38, "therefor": [38, 144, 154], "02234": 38, "thickapprox": 38, "thicksim": 38, "thinspac": 38, "02009": 38, "tildeequ": 38, "tildefullequ": 38, "02245": 38, "tildetild": 38, "toea": 38, "tosa": 38, "025b5": 38, "triangledown": 38, "025bf": 38, "triangleleft": 38, "025c3": 38, "trianglelefteq": 38, "triangleq": 38, "triangleright": 38, "025b9": 38, "trianglerighteq": 38, "tripledot": 38, "020db": 38, "combin": [38, 86, 109, 111, 112, 157, 175, 206, 262, 394, 405, 410, 427, 435, 466, 475, 487, 501, 515, 567, 602, 641, 719, 763, 792, 850, 852, 854, 870, 892, 903, 940, 941, 943, 990, 1043, 1058, 1074, 1127, 1161], "twoheadleftarrow": 38, "twoheadrightarrow": 38, "ulcorn": 38, "0231c": 38, "unionplu": 38, "0228e": 38, "multiset": 38, "uparrow": 38, "uparrowdownarrow": 38, "updownarrow": 38, "upequilibrium": 38, "upharpoonleft": 38, "upharpoonright": 38, "upperleftarrow": 38, "upperrightarrow": 38, "upsilon": 38, "003c5": 38, "upte": 38, "upteearrow": 38, "021a5": 38, "upuparrow": 38, "urcorn": 38, "0231d": 38, "varepsilon": 38, "003b5": 38, "varkappa": 38, "003f0": 38, "kappa": 38, "varnoth": 38, "varphi": 38, "003c6": 38, "varpi": 38, "003d6": 38, "varpropto": 38, "varrho": 38, "003f1": 38, "rho": 38, "varsigma": 38, "003c2": 38, "sigma": [38, 246], "varsubsetneq": 38, "variant": [38, 198, 214, 227, 257, 258, 259, 318, 365, 381, 498, 562, 715, 719, 721, 744, 748, 751, 762, 763, 788, 1168, 1171], "varsubsetneqq": 38, "varsupsetneq": 38, "varsupsetneqq": 38, "vartheta": 38, "003d1": 38, "theta": 38, "vartriangleleft": 38, "vartriangleright": 38, "vee": 38, "02228": 38, "vert": 38, "02016": 38, "verticalbar": 38, "verticaltild": 38, "02240": 38, "wreath": 38, "verythinspac": 38, "0200a": 38, "hair": 38, "wedg": 38, "02227": 38, "wp": 38, "02118": 38, "wr": 38, "zeetrf": 38, "02128": 38, "restructured text": 39, "cheat sheet": 39, "restructur": 39, "guid": [39, 138, 159, 169, 190, 215, 362, 442, 520, 672, 781, 796, 849], "author": [39, 157, 164, 242, 585, 783, 914, 1063, 1117], "overridden": [39, 388, 639, 706, 1141], "titl": [39, 40, 150, 160, 224, 237, 242, 251, 254, 287, 288, 293, 1024, 1108, 1113], "favorit": [39, 186, 190, 193, 211, 215, 237, 240, 328, 810, 916, 968, 1032, 1108], "__": [39, 171, 173, 181, 288, 720, 724, 1028], "ref": [39, 116, 169, 258, 259, 667, 682, 726, 758], "uniqu": [39, 169, 216, 258, 259, 261, 526, 545, 727, 739, 758, 760, 762, 763, 916, 930, 944, 1003, 1056, 1060, 1130], "across": [39, 43, 154, 161, 171, 223, 229, 239, 242, 272, 281, 305, 360, 388, 408, 432, 467, 472, 491, 554, 730, 741, 761, 837, 838, 849, 867, 914, 916, 936, 944, 978, 1039, 1050, 1117], "tree": [39, 42, 101, 103, 116, 144, 146, 155, 157, 160, 165, 169, 182, 183, 190, 214, 227, 230, 233, 237, 270, 298, 301, 418, 440, 445, 457, 489, 524, 526, 623, 626, 763, 785, 788, 802, 812, 835, 837, 838, 840, 854, 870, 871, 878, 882, 884, 890, 899, 906, 915, 920, 922, 927, 947, 955, 964, 987, 992, 1012, 1024, 1115, 1133, 1141, 1143], "_dummi": 39, "dummi": [39, 160, 348, 349, 790, 829, 1148], "One": [39, 43, 59, 63, 64, 77, 81, 83, 98, 107, 154, 156, 165, 182, 193, 214, 232, 253, 254, 279, 328, 342, 353, 369, 409, 422, 431, 434, 443, 445, 450, 456, 461, 467, 526, 545, 553, 568, 587, 592, 602, 607, 672, 706, 731, 741, 810, 815, 841, 843, 846, 854, 870, 914, 915, 916, 940, 952, 957, 968, 969, 977, 982, 987, 1019, 1043, 1116, 1117, 1121, 1126, 1163, 1177], "a_footnot": 39, "footer": 39, "block": [39, 99, 111, 112, 153, 154, 155, 156, 194, 196, 214, 221, 223, 227, 229, 239, 242, 251, 254, 263, 284, 287, 305, 327, 342, 347, 351, 365, 367, 385, 404, 410, 411, 417, 421, 424, 428, 436, 437, 439, 441, 446, 447, 474, 574, 577, 669, 695, 707, 726, 737, 738, 739, 740, 741, 760, 761, 762, 763, 796, 812, 822, 826, 840, 841, 843, 844, 846, 847, 892, 906, 915, 939, 946, 947, 952, 957, 961, 962, 967, 969, 977, 978, 981, 983, 1005, 1007, 1033, 1036, 1043, 1046, 1108], "rubric": 39, "nbsphinx": 40, "capabl": [40, 79, 154, 155, 161, 736, 810, 836, 899, 907, 915, 968, 1134, 1164], "nice": [40, 151, 154, 171, 194, 216, 281, 444, 445, 465, 513, 580, 667, 829, 836, 909, 915, 966, 1029, 1065, 1113, 1115, 1124, 1130, 1144], "few": [40, 117, 154, 155, 156, 157, 160, 161, 186, 190, 223, 363, 433, 684, 810, 848, 1007, 1011, 1142, 1166], "keep": [40, 43, 111, 112, 155, 156, 169, 178, 190, 193, 197, 213, 246, 319, 328, 353, 377, 433, 439, 440, 649, 689, 802, 810, 815, 834, 849, 852, 908, 960, 996, 999, 1019, 1036, 1113, 1114, 1161], "mind": [40, 122, 154, 155, 366, 733, 1036], "though": [40, 43, 45, 53, 69, 153, 154, 159, 161, 164, 165, 169, 170, 175, 182, 186, 190, 192, 193, 211, 214, 216, 227, 229, 230, 232, 237, 240, 254, 263, 272, 273, 276, 287, 308, 309, 328, 369, 379, 388, 400, 405, 467, 468, 469, 472, 481, 489, 491, 524, 525, 526, 545, 569, 571, 572, 576, 579, 582, 585, 586, 588, 589, 602, 603, 638, 645, 667, 675, 677, 684, 689, 695, 712, 716, 721, 726, 727, 730, 737, 749, 751, 764, 765, 769, 788, 802, 841, 848, 849, 852, 855, 889, 903, 907, 914, 915, 916, 926, 934, 936, 963, 968, 970, 972, 978, 987, 1005, 1007, 1008, 1011, 1016, 1018, 1025, 1027, 1035, 1039, 1052, 1077, 1108, 1115, 1116, 1129, 1136, 1137, 1141, 1143, 1161, 1164], "toplevel": [40, 44, 110, 116, 134, 182, 215, 264, 453, 455, 459, 460, 461, 463, 510, 783, 811, 836, 1005, 1150], "begin": [40, 42, 43, 114, 118, 119, 120, 124, 126, 127, 133, 134, 136, 153, 154, 164, 192, 213, 214, 226, 229, 242, 246, 258, 259, 263, 280, 288, 309, 359, 365, 373, 385, 388, 409, 415, 432, 433, 435, 465, 472, 562, 572, 585, 598, 600, 602, 603, 604, 606, 607, 609, 610, 611, 613, 614, 615, 616, 620, 623, 634, 667, 682, 695, 698, 702, 709, 715, 716, 719, 733, 763, 836, 870, 894, 902, 928, 936, 1012, 1036, 1058, 1108, 1142], "deeper": [40, 155, 186, 273, 276, 454, 963], "trail": [40, 158, 242, 284, 288, 306, 333, 334], "underscor": [40, 382, 1008, 1015, 1028, 1038], "ipynb": [40, 173, 193, 203, 205, 242, 252, 273, 277, 283, 287, 293, 298, 301, 305, 309, 315, 316, 321, 1110, 1114], "labels_": [40, 175, 177], "result": [40, 79, 117, 122, 133, 147, 156, 165, 171, 173, 193, 197, 213, 223, 229, 232, 239, 242, 246, 255, 264, 284, 288, 372, 388, 423, 430, 432, 433, 439, 469, 494, 498, 585, 613, 674, 680, 689, 717, 781, 926, 972, 1000, 1012, 1027, 1041, 1047, 1059, 1116], "cluster": [40, 177, 1110, 1115], "membership": [40, 175, 192, 193, 235, 481, 1040, 1057], "sequenc": [40, 107, 110, 147, 174, 175, 177, 187, 193, 214, 216, 225, 227, 228, 229, 232, 235, 239, 242, 246, 264, 279, 281, 288, 294, 364, 418, 469, 515, 530, 531, 532, 567, 612, 631, 635, 651, 664, 672, 719, 763, 969, 1012, 1013, 1014, 1030, 1039, 1040, 1045, 1047, 1050, 1054, 1055, 1078, 1090, 1121, 1164], "bring": [40, 45, 114, 122, 134, 147, 154, 156, 164, 165, 186, 190, 193, 196, 232, 270, 273, 276, 279, 281, 305, 308, 350, 355, 356, 360, 545, 584, 623, 647, 658, 666, 806, 810, 822, 914, 915, 916, 985, 1032, 1080, 1103, 1121, 1161, 1164], "bigplan": [40, 177, 1110], "686": [40, 175, 229, 998], "unknown": [40, 272, 451, 748, 766, 915, 1021], "cmd": [40, 160, 804, 829, 1143], "color": [40, 159, 177, 892, 1110, 1136], "tmp": [40, 136, 150, 155, 157, 160, 197, 210, 213, 229, 234, 242, 246, 249, 252, 254, 259, 261, 264, 267, 274, 284, 288, 294, 310, 316, 322, 374, 416, 439, 452, 457, 458, 465, 526, 527, 647, 724, 743, 788, 810, 832, 836, 841, 850, 854, 855, 868, 869, 870, 872, 874, 875, 877, 879, 882, 889, 892, 893, 898, 919, 926, 937, 938, 940, 941, 943, 968, 974, 1007, 1058, 1064, 1120, 1142, 1143], "craft": [41, 46, 47, 51, 53, 55, 56, 240, 282, 283, 449, 494, 731, 763, 764], "tar": [42, 62, 110, 116, 141, 150, 165, 194, 196, 260, 269, 270, 290, 291, 445, 763, 810, 832, 833, 835, 840, 906, 992, 994, 995, 996, 998, 999, 1005, 1063, 1143, 1167], "xz": [42, 62, 157, 165, 270, 438, 992, 996, 998, 999], "push": [42, 78, 136, 158, 160, 169, 172, 215, 230, 240, 297, 313, 348, 410, 455, 456, 467, 491, 601, 604, 739, 763, 810, 952, 970, 1083, 1087, 1141], "cmakelist": [42, 44, 114, 116, 121, 134, 180, 181, 182, 183, 184, 215, 232, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 465, 510, 523, 524, 525, 526, 527, 546, 549, 552, 553, 555, 558, 561, 564, 658, 973, 976, 980, 985, 986, 1147, 1150, 1152], "src": [42, 154, 155, 157, 215, 229, 259, 261, 267, 348, 377, 389, 439, 463, 464, 474, 510, 513, 523, 524, 525, 526, 528, 587, 604, 725, 726, 836, 854, 898, 1058, 1063, 1141], "load": [42, 43, 53, 56, 64, 76, 89, 153, 164, 165, 172, 173, 177, 193, 201, 202, 218, 219, 223, 229, 239, 242, 246, 249, 255, 264, 281, 282, 283, 299, 302, 304, 305, 322, 425, 445, 457, 740, 762, 763, 766, 767, 769, 770, 772, 775, 777, 778, 780, 785, 787, 790, 791, 795, 801, 804, 806, 807, 810, 812, 814, 819, 822, 825, 828, 831, 846, 906, 915, 916, 947, 955, 961, 984, 1001, 1108, 1126, 1166, 1175, 1177], "store": [42, 57, 64, 76, 89, 107, 121, 125, 153, 155, 172, 174, 182, 183, 213, 216, 223, 281, 282, 283, 304, 305, 373, 425, 469, 651, 695, 709, 712, 719, 740, 747, 749, 753, 762, 763, 776, 810, 849, 862, 906, 923, 947, 955, 961, 985, 1003, 1007, 1008, 1012, 1056, 1086, 1120, 1136, 1177], "search": [42, 51, 53, 107, 147, 149, 150, 154, 175, 178, 184, 186, 192, 193, 202, 213, 214, 216, 219, 223, 226, 227, 229, 232, 233, 234, 237, 239, 242, 255, 264, 267, 271, 274, 279, 284, 288, 294, 296, 312, 316, 322, 409, 436, 439, 451, 515, 526, 528, 532, 567, 612, 617, 631, 635, 652, 664, 763, 788, 852, 870, 902, 963, 985, 998, 1015, 1044, 1114, 1141, 1163], "payload": [42, 771, 798, 908, 910], "primari": [42, 154, 165, 186, 272, 273, 276, 443, 808, 837, 838, 845, 847, 1086], "insert": [42, 64, 110, 114, 148, 153, 169, 173, 190, 192, 197, 227, 229, 232, 234, 236, 242, 246, 249, 267, 288, 294, 306, 322, 342, 406, 423, 427, 443, 470, 476, 498, 504, 515, 532, 533, 534, 545, 562, 567, 603, 604, 617, 627, 628, 652, 660, 661, 662, 664, 671, 678, 680, 695, 716, 759, 761, 763, 788, 794, 804, 806, 810, 870, 914, 927, 958, 968, 1040, 1055, 1056, 1064, 1120, 1141], "const": [42, 58, 71, 98, 108, 110, 111, 112, 113, 116, 121, 181, 216, 232, 279, 281, 318, 377, 385, 389, 407, 409, 415, 423, 435, 437, 439, 441, 446, 447, 452, 468, 469, 470, 471, 472, 474, 476, 491, 492, 498, 499, 500, 503, 504, 505, 507, 508, 509, 515, 519, 523, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 543, 544, 545, 553, 558, 560, 562, 567, 569, 570, 571, 572, 574, 576, 577, 583, 584, 585, 586, 587, 588, 589, 590, 592, 593, 595, 596, 602, 606, 608, 609, 610, 611, 612, 618, 622, 624, 627, 628, 631, 634, 635, 638, 641, 642, 645, 647, 648, 649, 652, 653, 656, 657, 659, 660, 661, 662, 663, 664, 671, 673, 674, 675, 676, 677, 678, 679, 680, 689, 690, 691, 692, 693, 695, 697, 698, 701, 702, 703, 704, 705, 707, 709, 710, 711, 712, 714, 715, 717, 719, 723, 725, 726, 727, 728, 729, 732, 740, 741, 743, 749, 753, 757, 758, 759, 760, 761, 762, 763, 766, 769, 774, 790, 792, 796, 804, 806, 820, 824, 830, 928, 936, 940, 941, 942, 943, 946, 948, 951, 953, 955, 957, 965, 971, 974, 977, 978, 982, 1002, 1020, 1096, 1119, 1153, 1159, 1160], "care": [42, 46, 48, 81, 134, 153, 154, 156, 159, 161, 186, 194, 226, 333, 365, 388, 397, 399, 415, 439, 440, 463, 494, 495, 570, 584, 602, 645, 716, 717, 721, 730, 753, 754, 757, 764, 788, 800, 802, 810, 815, 836, 837, 838, 915, 923, 927, 939, 952, 960, 986, 1008, 1032, 1036, 1048, 1055, 1058, 1059, 1065, 1088, 1112, 1120, 1133, 1143], "dump": [42, 154, 173, 202, 218, 219, 229, 242, 246, 249, 255, 264, 299, 302, 305, 474, 493, 494, 577, 582, 705, 725, 848, 981, 982], "db": [42, 50, 164, 190, 215, 216, 217, 221, 227, 240, 255, 455, 469, 470, 476, 498, 504, 659, 660, 661, 662, 663, 731, 1064], "pull": [42, 44, 50, 64, 78, 116, 117, 133, 158, 169, 206, 215, 216, 230, 327, 350, 451, 455, 467, 584, 667, 783, 810, 1012, 1015, 1132], "paramet": [42, 58, 64, 111, 112, 121, 129, 153, 156, 161, 171, 174, 181, 182, 186, 191, 192, 193, 195, 197, 205, 206, 210, 213, 214, 215, 216, 223, 227, 229, 232, 233, 235, 238, 239, 242, 249, 252, 273, 274, 276, 278, 323, 328, 333, 342, 364, 373, 375, 379, 390, 394, 409, 410, 415, 417, 418, 421, 424, 428, 429, 435, 437, 441, 446, 447, 450, 452, 457, 513, 523, 529, 545, 559, 569, 571, 574, 578, 581, 582, 585, 589, 594, 595, 649, 655, 669, 672, 679, 695, 707, 709, 714, 727, 739, 760, 762, 763, 768, 769, 776, 790, 813, 818, 823, 826, 829, 830, 850, 852, 915, 930, 953, 963, 978, 986, 999, 1003, 1008, 1022, 1025, 1030, 1037, 1053, 1060, 1065, 1075, 1081, 1083, 1087, 1093, 1102, 1113, 1116, 1119, 1126, 1129, 1130, 1132, 1157, 1158], "entri": [42, 122, 151, 155, 156, 160, 218, 229, 364, 464, 480, 623, 625, 645, 798, 836, 849, 853, 854, 855, 892, 898, 930, 936, 950, 1001, 1008, 1056, 1119, 1150], "o_creat": [42, 763, 906, 936, 937, 941, 945, 947, 964, 977], "o_trunc": [42, 48, 936], "o_wronli": [42, 763, 906, 936, 937, 939, 940, 941, 945, 946, 947, 948, 951, 964, 977], "0666": [42, 869, 940, 941, 977], "assert": [42, 46, 190, 214, 227, 239, 242, 256, 272, 305, 307, 451, 474, 616, 657, 660, 662, 668, 741, 934, 946, 948, 951, 977, 981, 982, 1020, 1096, 1103, 1104, 1105, 1141, 1147, 1148, 1150, 1158], "ing": [42, 942], "mode": [42, 102, 116, 157, 169, 171, 206, 214, 223, 226, 227, 229, 239, 242, 246, 249, 267, 270, 274, 288, 291, 305, 322, 439, 515, 567, 740, 762, 763, 769, 802, 808, 836, 837, 838, 840, 843, 844, 847, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 870, 906, 909, 916, 930, 935, 936, 937, 945, 947, 961, 964, 967, 969, 977, 978, 1033, 1035, 1136], "binaryus": 42, "hton": [42, 933], "arpa": [42, 933], "inet": [42, 171, 933], "again": [42, 100, 116, 153, 154, 156, 159, 161, 165, 169, 170, 182, 186, 190, 192, 193, 194, 206, 215, 240, 245, 254, 260, 263, 269, 270, 287, 290, 293, 309, 342, 343, 344, 347, 348, 353, 360, 361, 410, 451, 473, 477, 487, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 562, 567, 569, 571, 584, 585, 589, 599, 678, 689, 731, 739, 740, 758, 761, 762, 763, 830, 833, 837, 838, 839, 840, 843, 844, 851, 854, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 900, 906, 916, 923, 926, 929, 931, 933, 934, 935, 937, 942, 945, 947, 948, 957, 961, 963, 964, 967, 969, 978, 986, 988, 989, 990, 991, 992, 993, 994, 995, 1005, 1025, 1030, 1048, 1053, 1058, 1108, 1126, 1129, 1161], "od": [42, 242], "hardwir": [42, 64, 319, 771, 932, 1025], "enter": [42, 111, 112, 125, 187, 194, 223, 228, 229, 239, 242, 251, 252, 254, 255, 272, 305, 306, 327, 342, 347, 367, 562, 585, 644, 678, 684, 695, 727, 788, 810, 826, 843, 866, 968, 969, 1043, 1095], "joerg": [42, 50, 136, 173, 187, 188, 190, 191, 193, 195, 202, 206, 210, 213, 219, 226, 229, 232, 234, 236, 239, 242, 246, 249, 252, 255, 264, 267, 274, 281, 283, 284, 288, 294, 299, 306, 310, 316, 322, 336, 339, 434, 461, 469, 476, 510, 526, 528, 544, 582, 616, 628, 647, 657, 658, 659, 660, 662, 679, 837, 838, 845, 847, 852, 866, 882, 895, 901, 926, 963, 1005, 1021, 1022, 1024, 1025, 1026, 1028, 1029, 1037, 1059, 1063, 1086, 1103, 1116, 1125, 1126, 1127, 1129, 1130, 1131, 1132], "huber": [42, 236, 242, 1116], "caro": [42, 226, 236, 239, 246, 249, 252, 255, 264, 267, 274, 288, 306, 316, 469, 476, 528, 544, 616, 628, 660, 662, 1024, 1026, 1046, 1097, 1099, 1103, 1105, 1125, 1126, 1127, 1129, 1130, 1131, 1132], "johanna": [42, 226, 236, 239, 246, 249, 267, 274, 288, 306, 316, 469, 528, 544, 616, 628, 1046, 1097, 1099, 1103, 1105, 1125, 1126, 1127, 1129, 1130, 1131, 1132], "bodi": [42, 50, 55, 111, 112, 160, 364, 365, 367, 371, 400, 410, 439, 529, 562, 571, 572, 576, 579, 649, 667, 668, 671, 730, 1012, 1142], "compil": [42, 43, 66, 104, 105, 109, 111, 112, 116, 155, 156, 165, 174, 181, 182, 183, 202, 216, 219, 232, 239, 255, 264, 267, 270, 271, 279, 288, 294, 296, 312, 316, 319, 322, 350, 362, 375, 384, 385, 394, 397, 399, 406, 407, 416, 418, 425, 428, 431, 432, 433, 434, 435, 437, 438, 439, 441, 442, 443, 444, 446, 447, 451, 455, 458, 460, 463, 464, 467, 473, 487, 489, 494, 495, 508, 509, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 553, 559, 562, 567, 569, 572, 574, 578, 580, 584, 595, 623, 642, 649, 654, 656, 667, 668, 669, 670, 672, 674, 675, 677, 678, 680, 682, 684, 689, 692, 695, 704, 705, 707, 713, 716, 717, 719, 721, 725, 726, 760, 762, 763, 778, 779, 794, 906, 914, 985, 986, 989, 990, 991, 992, 994, 1008, 1033, 1038, 1050, 1052, 1148, 1150, 1158, 1159, 1161, 1162, 1163, 1174], "still": [42, 54, 62, 142, 148, 153, 154, 155, 156, 164, 165, 174, 175, 176, 216, 226, 232, 270, 272, 333, 353, 362, 413, 425, 451, 454, 460, 513, 535, 556, 559, 577, 578, 599, 605, 638, 653, 678, 695, 712, 716, 721, 725, 726, 728, 729, 730, 773, 778, 810, 813, 853, 867, 889, 914, 915, 916, 966, 968, 970, 981, 1003, 1011, 1014, 1020, 1033, 1036, 1039, 1063, 1099, 1122, 1130, 1150, 1158], "funni": [42, 44, 50, 101, 116, 186, 270, 472, 763, 840, 878, 884, 890, 906, 985], "temp": [42, 44, 242, 351, 725, 726, 727], "got": [42, 45, 154, 164, 216, 288, 310, 322, 409, 681, 936, 1009], "overwritten": [42, 47, 53, 55, 56, 604, 763, 937, 1015], "suspect": [42, 156, 158], "inmem": 42, "loos": [42, 43, 190, 206, 363, 388, 435, 800], "foolishli": 42, "main": [42, 50, 64, 108, 113, 125, 147, 156, 159, 160, 165, 193, 215, 227, 239, 240, 242, 259, 270, 278, 281, 283, 296, 298, 301, 305, 312, 342, 362, 364, 365, 367, 371, 373, 375, 376, 390, 405, 406, 407, 409, 413, 425, 432, 436, 439, 440, 443, 445, 451, 452, 454, 458, 474, 488, 493, 494, 495, 510, 511, 513, 521, 523, 525, 526, 545, 553, 556, 559, 573, 577, 578, 580, 582, 584, 585, 587, 597, 598, 599, 600, 601, 604, 605, 606, 607, 608, 610, 611, 614, 615, 616, 620, 624, 625, 626, 627, 628, 634, 638, 639, 642, 644, 645, 651, 656, 657, 658, 659, 660, 661, 662, 663, 667, 672, 682, 685, 686, 687, 690, 691, 692, 693, 695, 696, 697, 699, 700, 701, 702, 703, 704, 705, 709, 711, 712, 714, 717, 719, 725, 726, 728, 729, 730, 731, 734, 739, 741, 761, 771, 778, 779, 781, 810, 847, 849, 867, 914, 916, 917, 930, 932, 933, 934, 940, 941, 942, 943, 948, 951, 952, 954, 958, 963, 965, 968, 969, 974, 977, 978, 981, 984, 992, 996, 1002, 1016, 1019, 1034, 1098, 1100, 1148, 1153, 1166], "chang": [42, 45, 78, 81, 116, 118, 125, 132, 133, 153, 156, 158, 159, 160, 161, 164, 165, 169, 177, 190, 206, 215, 246, 254, 349, 388, 425, 427, 431, 434, 435, 439, 449, 452, 467, 512, 518, 523, 524, 526, 527, 578, 603, 660, 714, 739, 745, 761, 783, 788, 836, 845, 847, 849, 867, 876, 879, 894, 907, 909, 914, 915, 926, 930, 951, 981, 984, 999, 1015, 1039, 1048, 1087, 1098, 1100, 1103, 1126, 1130, 1144, 1161], "errorhandl": 42, "just": [42, 46, 64, 70, 85, 109, 123, 124, 129, 144, 153, 154, 155, 156, 157, 158, 160, 161, 165, 169, 176, 178, 182, 186, 193, 216, 227, 230, 255, 296, 305, 312, 330, 371, 390, 415, 418, 427, 445, 449, 454, 464, 469, 510, 513, 523, 525, 526, 527, 550, 569, 570, 571, 577, 580, 581, 582, 585, 604, 632, 639, 645, 649, 653, 667, 674, 678, 680, 681, 695, 710, 713, 727, 729, 731, 747, 761, 768, 773, 781, 783, 790, 794, 800, 802, 810, 826, 849, 870, 873, 874, 903, 907, 915, 916, 931, 933, 934, 940, 941, 943, 952, 953, 963, 970, 978, 996, 1003, 1006, 1007, 1010, 1012, 1030, 1031, 1037, 1038, 1039, 1046, 1050, 1058, 1059, 1113, 1114, 1121, 1126, 1127, 1131, 1132, 1137, 1141, 1153, 1163], "silent": [42, 66, 236, 246, 671, 914], "truncat": [42, 242, 288, 365, 386, 488, 852, 936, 1058], "faschingb": 42, "echo": [42, 155, 206, 242, 270, 328, 526, 651, 783, 792, 810, 837, 838, 841, 842, 850, 854, 864, 873, 876, 880, 889, 907, 909, 914, 915, 916, 917, 937, 939, 948, 950, 951, 963, 966, 972, 981, 1143], "success": [42, 183, 223, 229, 239, 242, 426, 455, 684, 737, 788, 792, 882, 1074], "failur": [42, 43, 223, 229, 239, 242, 254, 259, 288, 327, 435, 445, 451, 465, 523, 527, 1141, 1142, 1149, 1150, 1153], "renam": [42, 50, 57, 64, 67, 100, 114, 116, 147, 213, 260, 269, 270, 290, 291, 562, 714, 763, 778, 779, 840, 877, 890, 906, 1002, 1120], "most": [43, 44, 57, 59, 63, 66, 88, 114, 150, 153, 154, 156, 157, 160, 165, 176, 178, 184, 186, 190, 192, 214, 223, 226, 229, 230, 239, 240, 242, 246, 252, 272, 274, 288, 308, 309, 310, 327, 363, 371, 400, 403, 410, 425, 427, 433, 438, 439, 443, 444, 454, 468, 481, 524, 584, 585, 623, 675, 719, 724, 727, 733, 788, 796, 810, 815, 835, 837, 838, 841, 848, 872, 903, 907, 914, 916, 928, 936, 942, 955, 970, 978, 981, 982, 984, 1005, 1006, 1007, 1012, 1019, 1020, 1021, 1027, 1028, 1036, 1038, 1039, 1040, 1043, 1046, 1049, 1050, 1054, 1056, 1059, 1060, 1065, 1107, 1108, 1117, 1121, 1125, 1129, 1130, 1135, 1137, 1141, 1142, 1148, 1163, 1164, 1166], "somebodi": [43, 161, 169, 182, 216, 377, 434, 455, 553, 577, 629, 689, 695, 706, 737, 800, 818, 972], "concis": [43, 153, 186, 190, 240, 309, 343, 344, 454, 810, 1108], "longer": [43, 169, 972, 1033, 1161], "necessari": [43, 62, 133, 147, 155, 161, 165, 174, 183, 197, 213, 216, 273, 276, 308, 309, 367, 377, 409, 449, 451, 455, 467, 513, 572, 576, 644, 670, 671, 705, 715, 727, 739, 806, 810, 845, 914, 916, 917, 932, 970, 981, 1001, 1028, 1035, 1039, 1063, 1120, 1141], "gosh": [43, 150, 388, 433, 435, 629, 712, 960, 1005, 1006, 1012, 1039], "hungarian": [43, 429], "notat": [43, 181, 221, 237, 242, 247, 288, 429, 742, 915, 1021], "userdb": [43, 47, 48, 51, 53, 54, 56, 57, 216, 218, 232, 240, 287, 298, 301, 652, 660, 661, 662, 664, 763, 1097, 1098, 1099, 1100, 1105], "bolt": [43, 216], "onto": [43, 59, 63, 114, 122, 125, 164, 175, 216, 232, 305, 491, 573, 650, 664, 727, 763, 810, 895, 907, 915, 934, 966, 989, 996], "unclear": [43, 516, 982], "semant": [43, 49, 82, 154, 178, 258, 259, 261, 279, 318, 420, 434, 435, 489, 570, 623, 629, 668, 675, 707, 723, 726, 727, 728, 729, 732, 740, 760, 762, 763, 769, 774, 802, 981, 982, 1039, 1117, 1161], "backingstor": [43, 53, 56, 763], "mangl": [43, 213, 214, 227, 244, 1033], "prefix": [43, 62, 150, 165, 223, 227, 229, 239, 242, 288, 335, 581, 611, 667, 810, 996, 998, 1005, 1027, 1028, 1053, 1060, 1143], "m_": 43, "enough": [43, 157, 161, 178, 186, 236, 246, 279, 288, 353, 377, 468, 644, 914, 927, 955, 985, 1007, 1024, 1032, 1053, 1121, 1126, 1133, 1135, 1142, 1163], "take": [43, 48, 87, 103, 111, 112, 117, 122, 124, 147, 148, 153, 154, 155, 158, 159, 160, 161, 164, 169, 171, 174, 175, 177, 182, 186, 187, 192, 193, 194, 214, 227, 232, 234, 242, 246, 252, 276, 315, 327, 328, 333, 342, 372, 409, 412, 429, 431, 438, 440, 444, 445, 449, 450, 452, 467, 468, 491, 492, 494, 495, 513, 523, 526, 539, 545, 559, 571, 578, 582, 585, 587, 625, 649, 667, 672, 679, 680, 689, 717, 719, 725, 729, 739, 753, 754, 773, 800, 810, 836, 837, 838, 914, 944, 972, 996, 1002, 1006, 1010, 1032, 1048, 1049, 1065, 1072, 1075, 1077, 1081, 1082, 1083, 1086, 1087, 1088, 1090, 1092, 1102, 1107, 1115, 1116, 1121, 1126, 1136, 1143], "dogmat": [43, 232, 360, 1121], "switch": [43, 45, 54, 58, 59, 63, 111, 112, 114, 116, 117, 118, 119, 120, 124, 125, 126, 129, 155, 159, 161, 173, 174, 215, 223, 229, 239, 240, 242, 319, 328, 329, 331, 348, 351, 354, 384, 398, 402, 404, 411, 417, 421, 424, 426, 428, 437, 441, 444, 446, 447, 451, 454, 467, 481, 515, 516, 517, 567, 628, 668, 669, 707, 749, 751, 760, 762, 763, 790, 808, 815, 824, 827, 829, 843, 847, 907, 910, 968, 1001, 1158, 1162], "bool": [43, 50, 53, 55, 56, 127, 133, 197, 204, 226, 229, 232, 234, 236, 239, 242, 249, 252, 267, 271, 272, 274, 278, 288, 316, 322, 459, 461, 528, 529, 533, 535, 540, 569, 571, 585, 586, 587, 588, 589, 607, 610, 616, 625, 672, 684, 685, 686, 687, 695, 698, 702, 709, 739, 741, 743, 763, 823, 830, 968, 974, 981, 1039, 1065, 1127, 1132], "wear": [43, 151, 155], "incorrect": [43, 223, 229, 239, 242, 246, 388, 407, 1133], "metaphor": 43, "But": [43, 154, 155, 156, 159, 170, 206, 215, 305, 371, 377, 406, 409, 415, 418, 431, 433, 439, 449, 568, 569, 577, 582, 583, 584, 602, 620, 638, 639, 677, 680, 716, 725, 729, 731, 748, 762, 763, 792, 794, 810, 820, 837, 838, 892, 906, 914, 915, 916, 923, 937, 945, 947, 952, 960, 964, 987, 1001, 1003, 1024, 1027, 1033, 1113, 1116, 1127], "support": [43, 79, 122, 155, 157, 161, 165, 174, 178, 190, 202, 204, 223, 226, 229, 234, 236, 239, 242, 246, 249, 264, 267, 274, 306, 316, 322, 338, 407, 431, 445, 451, 568, 569, 571, 675, 727, 731, 747, 757, 761, 766, 802, 892, 914, 915, 916, 926, 978, 984, 1012, 1020, 1027, 1033, 1050, 1063, 1113, 1115, 1130, 1148], "copy_process": 43, "law": [43, 206, 339, 382, 427, 1007, 1132], "tdd": [43, 116, 185, 190, 200, 240, 282, 298, 301, 305, 319, 361, 1141], "until": [43, 55, 98, 99, 100, 103, 106, 111, 112, 116, 121, 129, 133, 142, 144, 154, 156, 158, 160, 205, 214, 226, 245, 263, 283, 309, 399, 405, 430, 433, 527, 587, 651, 695, 701, 739, 741, 778, 798, 808, 818, 820, 826, 843, 847, 854, 870, 882, 889, 931, 932, 933, 934, 957, 971, 978, 982, 1011, 1012, 1033, 1041, 1043, 1108], "fail": [43, 44, 150, 154, 156, 164, 165, 169, 181, 186, 216, 242, 259, 291, 327, 353, 452, 455, 465, 469, 474, 476, 523, 654, 675, 677, 684, 689, 743, 761, 763, 788, 810, 889, 906, 916, 937, 942, 945, 947, 962, 963, 964, 981, 1001, 1005, 1007, 1016, 1058, 1074, 1130, 1142, 1143, 1147, 1149, 1151], "suffici": [43, 118, 169, 174, 186, 328, 576, 604, 645, 649, 660, 668, 783, 892, 982, 1030, 1032, 1060, 1142], "pass": [43, 44, 48, 55, 57, 58, 64, 111, 112, 174, 182, 186, 191, 192, 193, 195, 202, 213, 215, 219, 223, 229, 232, 234, 236, 239, 242, 246, 249, 252, 254, 255, 259, 264, 267, 272, 273, 276, 284, 288, 306, 327, 353, 373, 375, 377, 388, 409, 413, 416, 418, 435, 465, 467, 472, 474, 513, 523, 524, 525, 526, 528, 529, 569, 579, 580, 586, 587, 588, 589, 598, 649, 655, 679, 709, 717, 722, 726, 729, 757, 758, 759, 776, 813, 854, 914, 940, 943, 954, 963, 986, 1003, 1005, 1006, 1007, 1008, 1020, 1021, 1022, 1024, 1030, 1048, 1050, 1058, 1060, 1096, 1125, 1141, 1148], "current": [43, 100, 110, 116, 121, 140, 142, 155, 156, 157, 159, 161, 164, 165, 169, 194, 216, 223, 229, 239, 242, 260, 267, 269, 270, 288, 290, 291, 334, 353, 356, 361, 410, 443, 451, 467, 469, 473, 487, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 567, 657, 661, 726, 727, 740, 748, 762, 763, 779, 810, 818, 832, 836, 837, 838, 839, 840, 843, 844, 845, 847, 853, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 870, 871, 874, 875, 876, 877, 878, 879, 880, 881, 882, 884, 885, 886, 887, 888, 890, 892, 894, 906, 915, 929, 935, 936, 937, 945, 947, 952, 954, 961, 964, 967, 968, 969, 986, 988, 989, 990, 991, 992, 993, 994, 995, 1001, 1006, 1011, 1032, 1035, 1043, 1046, 1167], "initi": [43, 45, 64, 111, 112, 114, 116, 127, 136, 153, 154, 157, 161, 169, 171, 181, 186, 190, 195, 201, 210, 214, 215, 225, 226, 227, 242, 246, 249, 252, 257, 267, 274, 279, 281, 284, 288, 301, 310, 316, 322, 365, 367, 374, 418, 423, 433, 437, 441, 443, 446, 447, 469, 471, 489, 494, 495, 508, 509, 513, 515, 516, 517, 518, 519, 520, 523, 545, 559, 562, 567, 571, 572, 573, 575, 580, 582, 584, 586, 588, 603, 604, 605, 610, 623, 628, 649, 654, 656, 657, 658, 663, 664, 678, 689, 707, 715, 726, 727, 729, 741, 760, 762, 763, 768, 771, 773, 774, 781, 788, 796, 806, 810, 837, 838, 846, 871, 901, 915, 916, 931, 934, 952, 955, 968, 977, 978, 984, 1019, 1022, 1052, 1113, 1117, 1161, 1166], "mess": [43, 154, 240, 259, 261, 316, 318, 319, 669, 707, 762, 763, 1039, 1052, 1142], "roughli": [43, 66, 156, 161, 305, 438, 835, 968, 977], "took": [43, 153, 160, 190, 1073], "our": [43, 53, 59, 63, 71, 78, 105, 116, 127, 129, 133, 134, 136, 155, 156, 158, 160, 165, 169, 176, 190, 205, 206, 215, 216, 230, 232, 270, 281, 283, 319, 342, 435, 438, 449, 460, 468, 472, 477, 489, 493, 510, 521, 526, 660, 663, 783, 790, 810, 914, 915, 940, 943, 968, 978, 982, 984, 996, 999, 1002, 1008, 1105, 1113, 1116], "craftsmanship": [43, 45], "anoth": [43, 64, 79, 114, 153, 154, 155, 156, 160, 161, 164, 165, 169, 176, 178, 183, 186, 192, 193, 216, 223, 229, 232, 239, 244, 246, 252, 267, 270, 273, 276, 279, 305, 379, 397, 398, 412, 420, 432, 439, 450, 467, 468, 471, 476, 491, 494, 495, 508, 509, 513, 518, 527, 579, 582, 583, 585, 667, 672, 695, 719, 727, 731, 741, 748, 753, 754, 798, 810, 836, 837, 838, 843, 852, 854, 866, 903, 914, 916, 926, 927, 941, 955, 957, 969, 977, 982, 999, 1002, 1003, 1006, 1007, 1024, 1031, 1039, 1055, 1059, 1064, 1116, 1124, 1130, 1133, 1141, 1164], "isol": [43, 54, 184, 186, 190, 240, 254, 914, 968, 969, 1019, 1108, 1120, 1136, 1152, 1154], "wrong": [43, 79, 113, 154, 156, 279, 388, 410, 429, 645, 731, 783, 940, 955, 969, 1003, 1007, 1019, 1038, 1102, 1113], "oracl": [43, 1117], "conduct": [43, 1141], "serious": 43, "safeti": [43, 134, 232, 431, 434, 437, 441, 446, 447, 450, 545, 668, 738, 763, 769, 907, 981, 982, 1005], "architectur": [43, 109, 151, 161, 213, 359, 383, 410, 427, 450, 731, 771, 907, 934, 984, 985, 994, 996, 1164], "treat": [43, 82, 246, 375, 405, 852], "them": [43, 64, 67, 111, 112, 147, 151, 153, 154, 156, 159, 160, 161, 164, 165, 169, 174, 175, 176, 183, 186, 190, 191, 193, 195, 211, 213, 216, 227, 251, 254, 263, 283, 293, 305, 405, 427, 458, 469, 473, 489, 525, 586, 588, 589, 642, 649, 651, 654, 667, 717, 731, 810, 836, 842, 843, 849, 852, 877, 889, 916, 923, 968, 969, 978, 981, 984, 985, 996, 1001, 1006, 1007, 1008, 1009, 1030, 1032, 1054, 1086, 1089, 1108, 1114, 1121, 1132, 1148], "carefulli": [43, 156, 169, 435, 494, 684, 1114], "independ": [43, 64, 234, 246, 377, 410, 582, 894, 908, 916, 986], "self": [43, 59, 60, 63, 64, 154, 155, 165, 173, 174, 181, 187, 190, 192, 210, 213, 214, 226, 227, 229, 236, 239, 244, 246, 252, 255, 267, 274, 284, 288, 294, 306, 310, 443, 451, 569, 571, 675, 677, 678, 712, 725, 731, 737, 771, 802, 806, 965, 1001, 1005, 1006, 1007, 1016, 1020, 1021, 1024, 1025, 1026, 1027, 1028, 1029, 1039, 1129, 1130, 1142, 1147, 1148, 1150, 1161], "valid": [43, 153, 156, 164, 242, 245, 288, 353, 408, 415, 431, 435, 594, 602, 626, 661, 675, 712, 715, 741, 823, 1038, 1039, 1053, 1054, 1070, 1075, 1129, 1130, 1136], "first": [43, 53, 62, 64, 88, 121, 144, 151, 153, 156, 157, 159, 160, 161, 165, 169, 174, 184, 186, 193, 213, 226, 227, 234, 236, 240, 242, 246, 270, 272, 283, 288, 305, 327, 333, 339, 363, 371, 394, 409, 410, 415, 423, 439, 440, 451, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 465, 515, 556, 562, 567, 569, 575, 577, 581, 600, 601, 602, 606, 625, 628, 660, 662, 667, 689, 696, 697, 716, 717, 719, 757, 758, 759, 763, 777, 780, 787, 791, 801, 810, 812, 814, 819, 825, 828, 831, 848, 849, 850, 855, 866, 870, 876, 892, 894, 897, 901, 903, 906, 907, 914, 915, 933, 937, 957, 965, 968, 971, 977, 985, 986, 1000, 1001, 1002, 1003, 1007, 1008, 1012, 1019, 1021, 1025, 1033, 1034, 1035, 1036, 1038, 1039, 1048, 1049, 1052, 1058, 1059, 1065, 1088, 1097, 1103, 1105, 1114, 1116, 1124, 1142, 1148, 1161, 1166], "debug": [43, 154, 155, 183, 213, 223, 229, 239, 242, 293, 297, 313, 342, 347, 360, 410, 436, 439, 443, 444, 445, 453, 455, 456, 472, 550, 695, 712, 763, 768, 790, 792, 852, 870, 936, 960, 981, 1058, 1136, 1159, 1162, 1167, 1176], "fact": [43, 53, 154, 155, 186, 305, 407, 415, 439, 449, 810, 855, 940, 978, 1117], "hard": [43, 71, 79, 86, 116, 121, 129, 133, 144, 154, 156, 159, 160, 165, 170, 175, 182, 186, 193, 215, 230, 236, 246, 260, 269, 270, 290, 291, 305, 388, 407, 436, 449, 477, 553, 761, 763, 810, 840, 846, 849, 890, 892, 906, 909, 915, 996, 1005, 1007, 1027, 1044, 1058, 1110, 1131, 1161, 1177], "principl": [43, 53, 54, 84, 107, 113, 134, 150, 156, 165, 280, 281, 282, 283, 450, 473, 474, 763, 810, 914, 916, 927, 987, 1116], "mayb": [43, 45, 57, 58, 62, 64, 79, 116, 121, 144, 147, 154, 155, 156, 159, 160, 169, 182, 186, 213, 229, 230, 280, 281, 282, 283, 298, 345, 348, 350, 351, 452, 471, 472, 473, 505, 558, 559, 629, 677, 759, 915, 999, 1021, 1150], "overview": [43, 99, 116, 150, 161, 178, 194, 196, 211, 215, 227, 260, 261, 269, 273, 276, 279, 281, 290, 291, 307, 356, 360, 473, 487, 515, 516, 517, 518, 519, 520, 521, 522, 525, 567, 587, 683, 694, 707, 718, 740, 762, 763, 833, 837, 838, 839, 840, 843, 844, 851, 853, 854, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 870, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 890, 900, 906, 918, 919, 920, 921, 922, 929, 930, 933, 935, 937, 945, 947, 961, 964, 967, 969, 986, 988, 989, 990, 991, 992, 993, 994, 995, 999, 1031, 1108, 1161, 1162, 1164, 1166], "respons": [43, 53, 56, 90, 113, 129, 134, 139, 153, 164, 169, 217, 449, 491, 505, 513, 571, 579, 727, 763, 806, 818, 915, 916, 939, 968, 969, 1035, 1115, 1166], "googl": [44, 149, 154, 161, 163, 175, 178, 181, 182, 186, 187, 190, 211, 216, 362, 524, 725, 726, 899, 1033, 1108, 1148, 1150, 1179], "cloner": 44, "init": [44, 136, 153, 155, 171, 175, 252, 259, 261, 322, 373, 400, 498, 499, 521, 524, 552, 569, 587, 605, 765, 773, 778, 798, 800, 812, 846, 898, 982], "cpp": [44, 50, 98, 114, 116, 117, 118, 119, 120, 121, 124, 125, 134, 165, 180, 190, 215, 216, 232, 259, 270, 279, 281, 362, 453, 454, 455, 460, 467, 468, 469, 471, 472, 474, 476, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 507, 508, 509, 514, 516, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 533, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 569, 570, 571, 572, 573, 577, 578, 580, 582, 583, 584, 585, 586, 587, 588, 589, 597, 598, 599, 600, 601, 604, 605, 606, 607, 608, 610, 611, 614, 615, 616, 620, 624, 625, 626, 627, 628, 634, 638, 639, 642, 644, 645, 647, 651, 656, 657, 658, 659, 660, 661, 662, 663, 667, 672, 674, 677, 678, 679, 682, 684, 689, 695, 704, 705, 706, 709, 710, 711, 712, 713, 714, 716, 717, 719, 721, 725, 726, 727, 728, 729, 730, 739, 741, 743, 747, 749, 751, 753, 757, 758, 759, 761, 914, 944, 948, 951, 963, 965, 968, 984], "assert_eq": [44, 467, 469, 472, 476, 489, 516, 517, 523, 526, 527, 528, 529, 530, 531, 533, 535, 536, 537, 540, 541, 542, 543, 544, 562, 569, 570, 571, 582, 583, 585, 586, 587, 588, 589, 647, 672, 674, 677, 678, 679, 710, 721, 725, 726, 727, 728, 730, 743, 757, 758, 759, 761, 1148, 1153], "test_f": [44, 491, 526, 527, 761, 1153], "simplefixtur": 44, "public": [44, 55, 102, 103, 108, 113, 116, 121, 125, 129, 151, 164, 169, 206, 214, 227, 255, 260, 269, 270, 278, 284, 290, 291, 339, 342, 347, 423, 459, 460, 461, 463, 468, 470, 474, 476, 479, 480, 481, 491, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 513, 526, 527, 539, 553, 559, 568, 569, 570, 572, 573, 574, 576, 577, 578, 579, 580, 581, 583, 584, 585, 592, 595, 610, 611, 628, 638, 639, 641, 642, 644, 645, 653, 654, 659, 661, 662, 667, 670, 671, 672, 673, 674, 677, 678, 680, 689, 691, 692, 693, 695, 697, 698, 701, 702, 703, 704, 705, 706, 710, 711, 712, 714, 725, 726, 727, 730, 731, 739, 741, 747, 749, 751, 753, 761, 763, 774, 778, 839, 840, 845, 859, 865, 906, 918, 919, 920, 921, 922, 927, 1028, 1033, 1153], "myfirstsuit": 44, "test_find": 44, "wtf": [44, 53, 116, 192, 223, 228, 229, 232, 234, 252, 291, 562, 577, 763, 906, 931, 935, 947, 981, 983, 1006], "tallk": 44, "morph": [44, 64, 181, 190, 215, 216, 281, 547, 559, 562, 565, 571, 667, 719, 812, 1010], "fixtur": [44, 181, 190, 282, 283, 298, 304, 305, 308, 309, 319, 350, 480, 491, 527, 763, 1146, 1179], "trivial": [44, 154, 165, 296, 312, 389, 405, 562, 579, 675, 680, 731, 815, 823, 916, 932, 968, 1163], "tempfil": [44, 1005], "crap": [44, 155, 230, 272, 435, 451, 454, 629, 668, 748, 916, 981], "null": [44, 64, 155, 156, 157, 172, 197, 213, 226, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322, 364, 377, 384, 412, 423, 433, 438, 451, 526, 582, 681, 768, 774, 781, 806, 841, 850, 852, 853, 870, 885, 892, 934, 939, 946, 953, 955, 957, 959, 965, 968, 969, 974, 977, 981], "deriv": [44, 108, 117, 133, 176, 230, 242, 309, 329, 353, 527, 545, 571, 641, 642, 644, 645, 706, 714, 747, 1007, 1020, 1153], "seminar": [45, 137], "psycho": 45, "rule": [45, 155, 161, 186, 236, 242, 246, 279, 318, 350, 365, 384, 386, 387, 388, 403, 409, 427, 438, 439, 440, 442, 450, 452, 477, 489, 494, 595, 641, 675, 678, 682, 684, 704, 730, 731, 849, 870, 931, 1007, 1030, 1038, 1039, 1049, 1058, 1121, 1168], "dont": [45, 246, 449, 783], "scenario": [45, 156, 169, 178, 186, 190, 372, 493, 645, 739, 969, 970, 977], "robert": [45, 477], "martin": [45, 449, 450, 477], "someon": [45, 118, 186, 227, 242, 249, 252, 283, 349, 584, 739, 802, 867, 873, 894, 916, 940, 984, 1032], "mistak": [45, 154, 160, 161, 211, 227, 251, 914, 1108, 1121], "kill": [45, 155, 156, 232, 870, 924, 953, 972, 981, 982, 1011, 1167], "peopl": [45, 64, 151, 154, 156, 158, 159, 161, 169, 174, 186, 215, 249, 360, 449, 477, 495, 684, 810, 849, 1016, 1032, 1060, 1115, 1117], "polit": [45, 717], "thei": [45, 55, 66, 79, 114, 142, 153, 154, 155, 156, 157, 158, 159, 160, 161, 165, 174, 176, 178, 182, 194, 216, 223, 227, 229, 232, 239, 242, 246, 288, 296, 312, 353, 379, 385, 405, 433, 436, 439, 445, 449, 450, 454, 463, 468, 469, 489, 494, 495, 523, 525, 545, 562, 572, 577, 603, 607, 639, 667, 668, 671, 678, 679, 726, 727, 733, 769, 783, 802, 810, 835, 845, 849, 871, 907, 914, 915, 916, 927, 952, 981, 982, 987, 1002, 1012, 1020, 1027, 1030, 1080, 1103, 1110, 1113, 1114, 1121, 1124, 1127, 1141, 1147, 1163, 1166], "regul": 45, "ethic": 45, "everi": [45, 53, 59, 63, 64, 79, 90, 111, 112, 122, 147, 154, 160, 190, 213, 242, 283, 374, 431, 445, 449, 472, 477, 493, 512, 513, 582, 592, 644, 666, 668, 673, 761, 781, 794, 810, 835, 843, 845, 847, 848, 864, 871, 873, 915, 930, 965, 968, 981, 982, 1001, 1003, 1012, 1048, 1066, 1077, 1088, 1114, 1148, 1163], "particular": [45, 114, 153, 165, 186, 418, 443, 469, 493, 545, 761, 856, 1031, 1032], "electr": 45, "seem": [45, 142, 153, 155, 156, 175, 280, 468, 914, 916, 981, 1163], "adher": [45, 852], "immedi": [45, 64, 154, 155, 160, 161, 232, 273, 276, 279, 281, 328, 410, 620, 734, 739, 792, 802, 806, 907, 957, 966, 969, 971, 1052, 1148], "survei": [45, 175], "had": [45, 114, 153, 155, 156, 160, 161, 165, 169, 174, 186, 190, 219, 221, 240, 379, 418, 489, 556, 568, 653, 667, 804, 837, 838, 849, 874, 914, 927, 998, 1032, 1039, 1058, 1127, 1131], "life": [45, 127, 133, 150, 161, 166, 169, 172, 174, 182, 574, 704, 725, 740, 762, 763, 810, 849, 906, 947, 961, 967, 1033, 1054, 1111], "accomplish": [45, 57, 79, 194, 280, 282, 283, 435, 450, 914], "befor": [45, 117, 121, 129, 133, 150, 154, 155, 157, 158, 159, 161, 164, 169, 174, 190, 193, 197, 215, 242, 258, 259, 261, 282, 283, 288, 304, 305, 306, 309, 316, 318, 367, 375, 376, 385, 405, 454, 526, 556, 562, 601, 627, 642, 668, 680, 695, 707, 712, 713, 723, 727, 728, 733, 734, 739, 741, 742, 761, 762, 763, 774, 788, 798, 804, 810, 836, 872, 907, 916, 955, 970, 972, 984, 1007, 1012, 1030, 1073, 1098, 1100, 1104, 1113, 1126, 1130, 1133, 1142, 1143, 1149], "formal": [45, 164, 178, 215, 216, 305, 308, 516, 1142], "googletest": [45, 66, 98, 181, 183, 184, 216, 259, 261, 296, 312, 465, 474, 510, 523, 525, 526, 587, 725, 726, 727, 761, 763, 764, 1148, 1150, 1163], "messag": [45, 121, 149, 151, 159, 160, 169, 172, 178, 184, 192, 193, 219, 223, 226, 229, 239, 242, 249, 252, 267, 274, 282, 283, 284, 288, 310, 316, 322, 330, 342, 347, 450, 453, 455, 474, 579, 595, 654, 684, 689, 709, 711, 712, 721, 731, 739, 763, 785, 810, 843, 847, 852, 906, 928, 947, 957, 961, 1036, 1050, 1060, 1102, 1143, 1147, 1149, 1175, 1176, 1177], "saniti": [45, 441, 446, 447, 450, 454, 458, 584, 669, 707, 760, 762, 763], "perform": [45, 154, 160, 169, 171, 193, 212, 213, 242, 283, 310, 348, 389, 392, 415, 422, 427, 435, 438, 439, 442, 445, 446, 447, 453, 562, 602, 620, 623, 645, 666, 680, 722, 763, 794, 972, 989, 999, 1000, 1058, 1141, 1159, 1162], "delici": [45, 53], "fearlessli": [45, 53], "backlog": 45, "Or": [45, 117, 133, 154, 261, 318, 434, 450, 553, 681, 707, 718, 762, 763, 901, 927, 937, 963, 1038, 1052, 1129, 1133], "Will": [45, 154, 187, 246, 328, 771, 984, 1050, 1136, 1150, 1156, 1175], "high": [46, 53, 117, 175, 215, 229, 246, 449, 477, 500, 513, 517, 521, 725, 727, 742, 792, 804, 808, 820, 829], "speed": [46, 53, 144, 149, 154, 223, 227, 229, 239, 242, 246, 310, 440, 730, 804, 810, 970, 972, 1112, 1113], "hype": [46, 748], "we": [46, 50, 59, 62, 63, 69, 117, 121, 125, 129, 132, 133, 134, 136, 144, 153, 154, 156, 157, 158, 159, 160, 161, 165, 169, 170, 173, 174, 175, 176, 177, 178, 182, 183, 186, 190, 191, 192, 193, 194, 196, 205, 206, 213, 214, 215, 216, 220, 223, 226, 227, 229, 230, 232, 259, 261, 263, 270, 273, 276, 278, 280, 282, 283, 301, 305, 308, 309, 328, 345, 348, 349, 353, 364, 379, 390, 397, 405, 418, 427, 429, 433, 435, 438, 443, 450, 452, 460, 461, 467, 468, 469, 472, 474, 476, 479, 488, 489, 493, 494, 510, 511, 512, 513, 521, 524, 525, 526, 556, 562, 571, 583, 607, 638, 642, 659, 660, 661, 662, 663, 667, 678, 689, 695, 721, 722, 727, 730, 741, 745, 771, 774, 778, 779, 783, 785, 788, 806, 810, 812, 818, 826, 837, 838, 852, 853, 867, 873, 874, 889, 907, 914, 915, 916, 923, 927, 932, 933, 934, 940, 941, 942, 943, 955, 968, 977, 994, 998, 999, 1000, 1008, 1027, 1032, 1058, 1060, 1064, 1066, 1095, 1102, 1103, 1104, 1108, 1113, 1114, 1115, 1116, 1123, 1124, 1130, 1133, 1149, 1150, 1166], "did": [46, 155, 156, 158, 160, 161, 164, 165, 173, 182, 186, 193, 278, 429, 433, 449, 474, 512, 660, 729, 731, 758, 783, 788, 810, 849, 907, 918, 927, 1008, 1161], "consequ": [46, 153, 154, 273, 276, 409, 430, 433, 434, 477, 940, 1027, 1127, 1161], "unsign": [46, 113, 129, 227, 232, 381, 383, 391, 420, 423, 427, 435, 481, 496, 511, 525, 526, 527, 577, 647, 648, 657, 705, 739, 741, 747, 749, 751, 753, 761, 766, 769, 774, 781, 790, 792, 794, 800, 806, 815, 820, 824, 936, 977, 978, 1158, 1159], "introduc": [46, 58, 79, 98, 215, 232, 240, 281, 296, 312, 431, 439, 451, 467, 472, 494, 512, 513, 514, 515, 545, 567, 653, 763, 829, 981, 1010, 1036, 1050, 1115, 1163], "throw": [46, 121, 158, 161, 232, 469, 493, 494, 498, 504, 505, 507, 508, 509, 527, 545, 623, 661, 703, 724, 727, 738, 741, 1153], "notfounderror": 46, "cbda1e98040d084c31ff6e83f04d78dbebf5c1c2": 46, "cluster_clean_cod": [46, 47, 51, 53, 55, 56, 763], "cluster_clean_code_bug": [46, 47, 53, 55, 56, 763], "clean_code_bugs_find_error": [46, 47, 53, 763], "twice": [47, 53, 55, 56, 57, 154, 371, 410, 432, 452, 675, 678, 737, 763, 830, 870, 907, 923, 955, 1000], "crash": [47, 53, 64, 111, 112, 152, 154, 155, 156, 159, 211, 213, 223, 229, 239, 242, 360, 400, 407, 493, 577, 604, 649, 725, 763, 968, 982, 1108], "found": [47, 53, 109, 110, 122, 141, 150, 153, 165, 174, 186, 219, 223, 226, 229, 232, 234, 236, 239, 242, 252, 267, 274, 288, 296, 306, 310, 312, 316, 322, 328, 342, 436, 445, 455, 457, 465, 503, 507, 508, 509, 515, 526, 528, 532, 533, 534, 562, 567, 607, 610, 613, 623, 627, 628, 652, 660, 662, 664, 672, 758, 763, 781, 842, 845, 852, 899, 916, 984, 987, 996, 1001, 1007, 1015, 1024, 1054, 1086, 1112, 1115, 1151, 1163], "clean_code_bugs_overwrite_store_content_on_read": [47, 53, 55, 56, 763], "clean_code_bugs_overwrite_existing_fil": [47, 53, 55, 56, 763], "explicitli": [48, 155, 156, 160, 186, 226, 236, 246, 279, 387, 388, 406, 444, 450, 494, 571, 574, 582, 623, 672, 675, 678, 731, 743, 841, 969, 978, 1006, 1016, 1035, 1121, 1129], "solut": [48, 66, 116, 159, 161, 169, 170, 178, 180, 186, 205, 215, 216, 221, 224, 227, 232, 237, 243, 259, 262, 273, 282, 283, 287, 293, 318, 319, 409, 410, 413, 432, 435, 453, 466, 493, 515, 545, 567, 573, 574, 594, 631, 633, 635, 642, 656, 664, 679, 684, 689, 715, 731, 756, 762, 763, 871, 872, 889, 952, 957, 970, 971, 987, 1012, 1048, 1079, 1091, 1121, 1164], "force_overwrit": 48, "descriptor": [48, 154, 178, 210, 242, 246, 267, 288, 306, 349, 574, 769, 790, 826, 846, 852, 853, 910, 932, 933, 934, 978], "mani": [49, 53, 56, 59, 60, 63, 90, 113, 134, 154, 156, 160, 161, 178, 183, 186, 202, 213, 234, 244, 249, 270, 274, 278, 279, 281, 287, 306, 328, 349, 353, 377, 389, 391, 400, 415, 429, 431, 436, 451, 452, 464, 465, 468, 471, 476, 479, 518, 545, 592, 602, 621, 623, 642, 654, 666, 667, 675, 695, 716, 721, 729, 737, 763, 769, 771, 788, 796, 802, 806, 810, 836, 846, 847, 849, 850, 903, 915, 933, 934, 953, 963, 966, 981, 982, 984, 994, 1003, 1005, 1007, 1012, 1021, 1031, 1036, 1039, 1042, 1046, 1054, 1058, 1060, 1064, 1113, 1115, 1116, 1117, 1121, 1130, 1148, 1161, 1164], "overwrit": [49, 110, 493, 494, 507, 515, 532, 534, 567, 577, 623, 625, 654, 763, 810, 872, 877, 889, 941, 1056], "present": [49, 62, 134, 151, 157, 161, 165, 169, 174, 187, 242, 288, 296, 305, 312, 461, 573, 806, 810, 845, 916, 927, 946, 1007, 1090, 1130, 1163], "continu": [50, 53, 60, 64, 90, 100, 107, 111, 112, 114, 117, 134, 147, 155, 164, 165, 177, 186, 187, 190, 199, 204, 205, 206, 235, 240, 246, 252, 262, 339, 403, 404, 410, 411, 417, 421, 424, 428, 433, 437, 441, 446, 447, 449, 451, 454, 455, 472, 586, 588, 589, 649, 669, 677, 707, 758, 759, 760, 761, 762, 763, 907, 909, 913, 919, 942, 943, 981, 982, 987, 998, 1005, 1012, 1016, 1049, 1052, 1070, 1115, 1130, 1148], "expected_cont": 50, "fill": [50, 156, 157, 169, 191, 242, 243, 288, 391, 667, 671, 716, 726, 781, 806, 810, 876, 933, 1010], "strategi": [50, 226, 425, 915, 1065, 1141], "hurri": [50, 410], "read_fil": 50, "compar": [50, 116, 214, 216, 227, 242, 283, 288, 388, 430, 444, 445, 454, 523, 569, 726, 918, 953, 1050, 1055, 1079, 1083, 1113], "binaryfil": 50, "doesn": [50, 156, 159, 267, 316, 405, 407, 410, 425, 439, 721, 769, 830, 837, 838, 872, 876, 889, 985, 996, 1052], "belong": [50, 183, 186, 377, 397, 423, 450, 545, 569, 583, 585, 855, 863, 942, 1023, 1037], "test_write_csv": 50, "test_read_csv": [50, 1105], "ah": [50, 59, 63, 160, 176, 213, 215, 229, 624, 984, 1060, 1124], "altern": [51, 53, 55, 56, 64, 66, 69, 79, 84, 133, 153, 154, 161, 187, 206, 232, 293, 322, 384, 461, 569, 578, 592, 603, 606, 675, 724, 730, 751, 763, 810, 849, 870, 910, 914, 916, 928, 936, 942, 953, 959, 977, 984, 1032, 1052, 1055, 1129, 1133, 1136, 1143, 1153, 1156, 1172, 1173, 1175, 1178], "cluster_clean_code_featur": [51, 53, 55, 56, 763], "clean_code_features_csv": [51, 53, 55, 56, 763], "clean_code_features_other_index": [51, 53, 763], "establish": [53, 72, 194, 206, 270, 282, 283, 304, 308, 339, 449, 810, 968, 1164], "were": [53, 114, 133, 147, 154, 156, 160, 169, 186, 190, 360, 409, 465, 568, 577, 578, 604, 671, 710, 837, 838, 916, 943, 998, 1006, 1030, 1039, 1058, 1063, 1121, 1127, 1161], "occas": [53, 90, 155, 726], "ourselv": [53, 186, 907], "gather": [53, 161, 193, 282, 283, 304, 305, 308, 327, 443, 445, 1092], "wreak": [53, 111, 112, 425, 649], "havoc": [53, 111, 112, 425, 649], "shoehorn": 53, "violat": [53, 113, 134, 154, 449, 477, 705, 727, 824, 968, 982], "nearli": [53, 186, 192, 427, 960], "solid": [53, 150, 166, 279, 281, 450, 477, 1159, 1160, 1174, 1175, 1177, 1178], "chanc": [53, 154, 156, 191, 429, 449, 765, 810, 935, 1166], "cluster_clean_code_refactor": [53, 55, 56, 763], "clean_code_refactoring_backingstore_interfac": [53, 56, 763], "clean_code_refactoring_backingstore_monolith": [53, 55, 56, 763], "clean_code_refactoring_store_enum_switch": [53, 55, 56, 763], "clean_code_refactoring_pass_store_in_ctor": [53, 56, 763], "now": [54, 62, 114, 153, 154, 155, 156, 157, 158, 160, 161, 169, 173, 182, 192, 202, 219, 226, 232, 236, 246, 254, 274, 278, 299, 328, 329, 342, 405, 418, 433, 438, 463, 469, 476, 489, 494, 516, 517, 524, 583, 607, 610, 616, 620, 628, 671, 722, 727, 742, 743, 768, 788, 810, 818, 820, 826, 842, 845, 907, 914, 915, 916, 942, 943, 951, 996, 998, 1003, 1006, 1021, 1024, 1048, 1103, 1113, 1115, 1133, 1142, 1161], "violatin": 54, "respect": [54, 59, 63, 66, 147, 155, 169, 216, 278, 280, 334, 381, 429, 449, 494, 512, 571, 578, 641, 675, 726, 727, 841, 849, 914, 968, 982, 1027], "mainli": [55, 154, 190, 279, 288, 623, 761, 950, 1010], "bugfix": 55, "ongo": [55, 114, 970], "scene": [55, 984, 1027], "pleas": [55, 116, 155, 156, 159, 161, 165, 182, 186, 190, 191, 193, 194, 195, 196, 206, 232, 259, 261, 270, 291, 333, 375, 409, 439, 527, 584, 586, 587, 588, 589, 849, 907, 915, 916, 931, 960, 978, 986, 987, 1032, 1134], "wait": [55, 73, 74, 75, 79, 84, 88, 129, 133, 143, 154, 155, 156, 157, 158, 160, 201, 305, 328, 639, 667, 734, 742, 763, 787, 802, 808, 812, 815, 818, 820, 843, 846, 854, 906, 907, 933, 935, 939, 951, 963, 966, 969, 976, 978, 981, 1056, 1124, 1148, 1166, 1174], "unnecessarili": [55, 70, 978], "conflict": [55, 76, 78, 114, 117, 133, 281, 282, 283, 304, 375, 426, 578, 668, 740, 762, 763, 766, 769, 779, 906, 915, 947, 955, 961, 981, 1015, 1144], "rip": [55, 157, 451, 510, 968, 1123], "detail": [55, 85, 151, 156, 159, 164, 168, 169, 181, 187, 201, 212, 213, 215, 216, 223, 229, 239, 243, 244, 246, 250, 272, 283, 322, 342, 449, 454, 477, 514, 524, 526, 574, 726, 788, 870, 914, 916, 970, 1002, 1110, 1150, 1159], "instanc": [55, 57, 108, 111, 112, 124, 161, 202, 210, 214, 223, 226, 227, 234, 236, 241, 244, 246, 249, 264, 267, 274, 288, 306, 316, 322, 338, 353, 467, 472, 480, 491, 493, 494, 495, 507, 508, 509, 512, 525, 638, 649, 656, 661, 709, 712, 771, 776, 779, 977, 978, 1005, 1007, 1021, 1022, 1024, 1027, 1050], "its": [55, 57, 59, 63, 66, 85, 88, 109, 111, 112, 129, 148, 153, 154, 155, 156, 158, 159, 160, 161, 164, 165, 171, 176, 178, 182, 183, 184, 186, 206, 213, 214, 216, 223, 227, 229, 239, 242, 246, 255, 270, 272, 273, 276, 279, 281, 288, 305, 333, 344, 375, 397, 408, 410, 425, 427, 429, 436, 438, 460, 468, 472, 491, 494, 495, 510, 511, 512, 513, 518, 523, 526, 568, 569, 570, 572, 574, 579, 609, 649, 667, 679, 689, 715, 734, 761, 774, 783, 788, 810, 815, 837, 838, 841, 843, 847, 852, 857, 858, 870, 871, 892, 894, 915, 918, 919, 926, 936, 937, 942, 957, 963, 966, 968, 969, 970, 978, 1000, 1005, 1007, 1010, 1015, 1020, 1024, 1030, 1038, 1048, 1050, 1055, 1059, 1065, 1113, 1115, 1134, 1141, 1143, 1161, 1163, 1164, 1166], "replac": [55, 64, 98, 121, 159, 204, 215, 223, 226, 227, 229, 230, 232, 239, 242, 274, 288, 305, 327, 369, 384, 425, 451, 514, 515, 567, 600, 601, 660, 667, 695, 712, 726, 741, 748, 761, 763, 813, 916, 956, 968, 982, 1006], "symptom": [57, 164], "mismatch": [57, 551], "onc": [57, 113, 117, 153, 155, 156, 159, 160, 161, 164, 169, 174, 175, 327, 345, 367, 392, 401, 409, 439, 452, 468, 469, 470, 474, 479, 491, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 524, 526, 584, 602, 603, 657, 698, 709, 719, 737, 747, 749, 751, 752, 753, 754, 761, 771, 774, 806, 907, 916, 958, 981, 982, 1001, 1007, 1008, 1009, 1043, 1064, 1073, 1086, 1117, 1120, 1143], "sync": [57, 134, 155, 226, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322, 425, 429, 810, 901], "imho": [57, 706], "forbidden": [58, 427], "accord": [58, 64, 116, 129, 153, 156, 242, 658, 854, 870, 903, 907, 915, 916], "uncl": [58, 360], "bob": [58, 242, 360, 449], "enum": [58, 215, 216, 319, 384, 399, 437, 441, 446, 447, 451, 454, 669, 707, 749, 751, 760, 762, 763, 769, 771, 779, 968, 1161], "born": [59, 60, 63, 848, 1033], "bound": [59, 60, 63, 64, 232, 236, 267, 279, 294, 426, 436, 441, 446, 447, 551, 579, 581, 583, 601, 680, 763, 848, 852, 908, 969, 972, 1025, 1046, 1069, 1129], "employe": [59, 60, 63, 181, 213, 1024], "year": [59, 60, 63, 153, 154, 155, 156, 160, 165, 186, 226, 232, 274, 278, 449, 568, 652, 653, 655, 656, 659, 660, 661, 662, 663, 664, 666, 713, 763, 1065], "emploi": [59, 60, 63, 155, 165, 190, 410, 810], "configur": [59, 62, 63, 64, 69, 74, 79, 83, 85, 86, 87, 105, 114, 116, 121, 127, 129, 133, 134, 139, 140, 153, 155, 156, 159, 161, 184, 194, 260, 269, 270, 279, 290, 291, 297, 298, 301, 305, 313, 342, 348, 452, 456, 457, 459, 460, 472, 474, 479, 516, 517, 518, 526, 763, 783, 790, 810, 824, 840, 841, 842, 845, 854, 890, 903, 906, 907, 915, 927, 934, 948, 950, 978, 985, 986, 998, 1008, 1078, 1116, 1120, 1129, 1136, 1164], "pattern": [59, 63, 83, 107, 134, 150, 151, 167, 170, 189, 190, 216, 219, 242, 281, 322, 350, 359, 361, 449, 466, 467, 468, 469, 471, 472, 474, 476, 477, 478, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 515, 567, 730, 731, 763, 764, 870, 899, 966, 1013, 1014, 1148, 1168], "led": [59, 63, 73, 74, 75, 79, 92, 118, 119, 120, 125, 126, 134, 172, 194, 270, 328, 351, 516, 763, 769, 907, 915], "hei": [59, 63, 154, 194, 246, 584, 585, 845, 931, 1053, 1121], "reinvent": [59, 63, 214, 263, 1108], "wheel": [59, 63, 117, 138, 150, 812, 847, 942, 1136], "admit": [59, 63, 161], "notori": [59, 63], "fun": [59, 63, 123, 154, 159, 212, 214, 250, 279, 360, 473, 710, 810, 849, 907, 914, 915, 1012, 1024, 1036, 1052, 1107, 1108, 1135, 1142, 1161], "live": [59, 63, 71, 98, 99, 116, 121, 151, 155, 159, 177, 181, 186, 190, 195, 206, 214, 215, 216, 217, 230, 232, 240, 251, 258, 259, 260, 261, 263, 269, 271, 272, 279, 280, 281, 282, 283, 287, 290, 291, 305, 309, 318, 319, 342, 346, 350, 351, 353, 360, 361, 362, 422, 439, 451, 452, 457, 473, 478, 487, 489, 491, 513, 515, 516, 517, 518, 519, 520, 521, 522, 525, 532, 534, 545, 602, 603, 623, 665, 676, 707, 708, 709, 726, 740, 761, 762, 763, 764, 774, 810, 840, 843, 844, 849, 865, 866, 906, 947, 1015, 1032, 1065, 1108, 1134, 1142, 1160, 1161, 1175], "session": [59, 63, 150, 159, 161, 179, 186, 190, 194, 198, 223, 229, 239, 242, 254, 258, 259, 261, 272, 280, 348, 812, 841, 842, 924, 935, 1096, 1108, 1134, 1141, 1171], "simpl": [59, 63, 73, 75, 76, 79, 87, 114, 141, 150, 154, 158, 159, 161, 164, 165, 169, 174, 178, 181, 182, 186, 190, 193, 216, 232, 234, 236, 242, 246, 298, 301, 363, 364, 371, 410, 412, 426, 429, 436, 451, 452, 453, 454, 455, 459, 460, 462, 472, 570, 577, 578, 616, 644, 652, 653, 655, 656, 659, 660, 661, 662, 663, 664, 684, 717, 727, 736, 763, 769, 783, 790, 802, 810, 812, 820, 846, 899, 907, 908, 914, 915, 944, 950, 952, 955, 970, 978, 981, 985, 986, 987, 992, 1008, 1012, 1032, 1033, 1041, 1060, 1108, 1114, 1116, 1132, 1147, 1148], "thu": [59, 63, 154, 155, 156, 192, 394, 469, 783, 788, 830, 837, 940, 1120, 1166], "techniqu": [59, 63, 70, 71, 72, 429, 439, 525, 649, 910], "usag": [59, 63, 66, 81, 107, 113, 117, 134, 156, 161, 206, 216, 227, 240, 254, 279, 281, 282, 304, 319, 328, 348, 360, 410, 435, 436, 443, 454, 458, 464, 473, 474, 487, 513, 514, 515, 567, 577, 584, 585, 603, 638, 640, 641, 644, 645, 664, 666, 678, 689, 695, 709, 716, 748, 762, 763, 812, 847, 870, 899, 902, 917, 948, 951, 966, 1002, 1007, 1010, 1060, 1102, 1104, 1136, 1143, 1150, 1161], "At": [59, 63, 129, 154, 155, 158, 161, 165, 169, 186, 190, 216, 226, 230, 232, 266, 374, 403, 407, 439, 467, 725, 802, 1003, 1020, 1108], "flow": [59, 63, 155, 186, 191, 193, 194, 195, 196, 200, 205, 206, 221, 224, 237, 248, 343, 344, 345, 347, 383, 403, 411, 417, 421, 424, 428, 437, 439, 441, 446, 447, 669, 707, 716, 760, 762, 763, 981, 1016, 1041, 1043, 1050, 1127, 1162], "event": [59, 63, 64, 87, 124, 128, 157, 178, 214, 223, 227, 229, 239, 242, 270, 282, 283, 445, 695, 739, 746, 750, 763, 778, 779, 787, 812, 813, 825, 826, 827, 828, 831, 843, 847, 906, 910, 935, 947, 950, 966, 969, 970, 974, 978, 1019, 1124, 1133, 1166, 1175, 1177, 1178], "save": [59, 63, 64, 86, 150, 153, 154, 166, 174, 177, 223, 229, 239, 242, 273, 276, 279, 391, 393, 667, 698, 701, 702, 703, 854, 872, 926, 935, 972, 1001, 1005, 1011, 1021, 1054, 1113, 1143, 1161], "schedul": [59, 63, 64, 66, 100, 111, 112, 116, 128, 154, 171, 194, 196, 260, 269, 270, 290, 355, 356, 467, 473, 487, 515, 516, 517, 518, 519, 520, 521, 522, 525, 567, 740, 762, 763, 792, 802, 808, 815, 830, 837, 838, 839, 840, 844, 846, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 884, 885, 886, 887, 888, 890, 906, 918, 919, 920, 921, 922, 929, 935, 937, 945, 947, 952, 961, 963, 964, 968, 972, 986, 988, 989, 990, 991, 992, 993, 994, 995, 1120, 1156, 1166, 1167, 1177], "overhead": [59, 63, 439, 445, 556, 565, 730, 731], "usual": [59, 63, 85, 109, 116, 154, 155, 161, 164, 169, 174, 184, 186, 246, 280, 296, 312, 365, 405, 406, 432, 445, 449, 455, 457, 462, 467, 481, 489, 495, 524, 569, 585, 626, 680, 715, 716, 730, 739, 742, 761, 769, 781, 783, 788, 798, 804, 806, 810, 824, 826, 830, 846, 848, 852, 871, 907, 908, 915, 936, 950, 968, 969, 984, 985, 986, 987, 996, 1005, 1006, 1007, 1008, 1012, 1015, 1018, 1019, 1025, 1027, 1029, 1030, 1032, 1035, 1041, 1046, 1107, 1114, 1115, 1121, 1143, 1144, 1150, 1163], "exhibit": [59, 63, 232, 661, 916, 937, 942], "glitch": [59, 63, 156, 161, 915, 916], "caus": [59, 63, 154, 157, 169, 223, 229, 239, 242, 246, 916, 963, 968, 1130], "hiccup": [59, 63, 161, 272, 986], "twist": [59, 63, 794], "amazingli": [59, 63, 854], "stori": [60, 154, 155, 156, 160, 161, 165, 182, 183, 215, 278, 420, 553, 571, 585, 785, 788, 811, 849, 910, 927], "pointlessli": 60, "light": [60, 85, 164, 849, 1031, 1141], "textual": [60, 184, 186, 524], "focus": [60, 161], "beauti": [60, 175, 189, 190, 193, 211, 213, 214, 221, 232, 236, 237, 240, 246, 263, 287, 342, 415, 545, 603, 952, 1009, 1058, 1065, 1108], "love": [60, 280, 1103], "creativ": [60, 153, 231], "edit": [60, 157, 159, 160, 169, 201, 206, 242, 270, 363, 523, 783, 810, 915, 1063, 1134, 1174], "debounc": 60, "toolkit": [60, 1031], "termin": [60, 121, 153, 155, 159, 173, 184, 206, 252, 254, 270, 273, 276, 279, 281, 283, 364, 367, 371, 374, 377, 384, 396, 402, 425, 445, 451, 463, 467, 493, 494, 526, 545, 574, 695, 701, 728, 734, 826, 845, 848, 852, 853, 854, 870, 892, 902, 903, 936, 954, 958, 963, 968, 980, 981, 982, 1037, 1039, 1043, 1058, 1070, 1087, 1115, 1121, 1124, 1172], "async": [60, 64, 154, 186, 190, 223, 229, 239, 240, 242, 305, 309, 695, 960, 983, 1108, 1176], "perfectli": [60, 176, 232], "simul": [60, 128, 186, 348, 349, 526], "cannot": [60, 64, 111, 112, 150, 154, 155, 156, 161, 165, 176, 177, 183, 184, 186, 193, 213, 246, 273, 276, 310, 328, 405, 406, 409, 410, 429, 431, 433, 436, 439, 457, 460, 472, 495, 523, 562, 571, 574, 576, 579, 580, 603, 638, 639, 641, 642, 644, 645, 649, 668, 671, 674, 680, 706, 716, 717, 721, 727, 729, 739, 741, 806, 810, 815, 830, 847, 852, 855, 866, 881, 889, 925, 969, 978, 1000, 1001, 1002, 1006, 1008, 1020, 1025, 1032, 1040, 1041, 1047, 1048, 1058, 1127, 1129, 1130, 1141, 1166], "cute": [60, 1114], "submiss": 61, "submit": [61, 110, 804], "linuxtag": [61, 193, 309, 912], "pure": [62, 70, 124, 161, 342, 405, 478, 641, 667, 706, 731, 849, 1039, 1161], "local": [62, 154, 155, 157, 160, 169, 182, 186, 187, 194, 195, 199, 215, 216, 230, 232, 233, 239, 242, 245, 246, 267, 270, 282, 284, 293, 296, 304, 305, 308, 309, 312, 314, 315, 320, 321, 322, 326, 328, 342, 375, 379, 403, 405, 422, 460, 464, 473, 487, 489, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 567, 574, 592, 675, 678, 680, 709, 763, 783, 810, 815, 837, 838, 842, 892, 906, 914, 916, 917, 918, 919, 925, 927, 933, 944, 952, 994, 996, 1003, 1006, 1051, 1136, 1163, 1164, 1177], "easili": [62, 134, 148, 155, 161, 328, 384, 403, 436, 449, 468, 641, 717, 792, 808, 936, 966, 972, 1002, 1015, 1047, 1161], "guess": [62, 236, 246, 272, 429, 434, 684, 923, 978], "autotool": [62, 165], "portabl": [62, 178, 377, 439, 734, 952, 959, 978, 982, 1039, 1117], "archiv": [62, 104, 105, 116, 165, 166, 194, 196, 260, 269, 270, 290, 445, 458, 464, 473, 487, 515, 516, 517, 518, 519, 520, 521, 522, 525, 567, 763, 840, 870, 906, 986, 989, 991, 992, 994, 995, 996, 1001, 1005, 1136], "m4": 62, "macro": [62, 232, 297, 313, 369, 380, 383, 395, 404, 411, 417, 421, 424, 428, 431, 437, 441, 446, 447, 455, 456, 460, 461, 464, 669, 707, 713, 760, 762, 763, 779, 798, 812, 852, 930, 936, 942, 952, 986, 1058, 1148, 1153, 1158, 1162], "stock": [62, 226, 227, 1064, 1065], "sudo": [62, 102, 116, 124, 150, 157, 159, 161, 169, 183, 194, 232, 260, 269, 270, 279, 281, 290, 291, 322, 455, 462, 539, 763, 840, 865, 867, 906, 907, 916, 970, 998, 1143], "pwd": [62, 110, 114, 182, 259, 261, 322, 342, 347, 458, 524, 526, 587, 785, 788, 837, 838, 847, 892, 894, 907, 985, 986, 999, 1001, 1141], "pub": [62, 157, 194, 783, 923, 1102], "lib": [62, 116, 150, 159, 165, 193, 213, 216, 226, 242, 249, 252, 267, 274, 281, 284, 288, 310, 316, 322, 457, 523, 788, 800, 806, 810, 901, 916, 981, 985, 987, 996, 998, 1136, 1143], "remot": [62, 103, 105, 157, 159, 161, 169, 206, 215, 262, 328, 466, 487, 501, 515, 567, 763, 783, 810, 811, 815, 836, 839, 906, 915, 917, 920, 921, 922, 925, 933, 996, 1008, 1164, 1165, 1172], "v0": 62, "v1": [62, 272, 474, 489, 671], "v2": [62, 64, 161, 181, 272, 474, 489, 671], "autotooleri": 62, "autogen": 62, "step": [62, 64, 153, 154, 160, 161, 165, 169, 190, 229, 232, 233, 259, 261, 274, 278, 283, 306, 365, 367, 369, 385, 409, 451, 454, 471, 514, 524, 562, 587, 592, 725, 810, 837, 838, 984, 992, 1129, 1130, 1142], "noconfigur": 62, "suppress": [62, 160, 206, 443, 468, 577, 726, 889, 1136], "absorb": [62, 147, 192, 448, 450, 678, 1065], "Be": [62, 98, 232, 279, 281, 319, 328, 382, 415, 524, 545, 570, 575, 637, 664, 676, 678, 707, 709, 712, 723, 732, 740, 760, 762, 763, 836, 981, 996], "awar": [62, 328, 426, 459, 970], "enabl": [62, 153, 159, 186, 194, 215, 223, 229, 239, 242, 270, 280, 388, 439, 465, 472, 494, 550, 808, 810, 815, 862, 907, 911, 915, 927, 970, 994, 998, 1008, 1166], "mkdir": [62, 101, 116, 140, 155, 160, 164, 182, 183, 259, 261, 270, 342, 347, 524, 526, 527, 587, 761, 763, 810, 837, 838, 839, 840, 874, 875, 876, 877, 878, 881, 882, 884, 890, 906, 923, 927, 977, 996, 998, 999, 1005], "dist": [62, 138, 730, 1063], "406332": 62, "apr": [62, 64, 213, 223, 252, 335, 985, 986, 999], "transfer": [62, 154, 216, 219, 296, 312, 328, 445, 527, 577, 678, 781, 810, 823, 824, 836, 837, 838, 897, 917, 923, 926, 1124, 1161, 1163], "scp": [62, 98, 102, 116, 140, 165, 194, 260, 269, 270, 290, 291, 526, 527, 763, 783, 837, 838, 906, 917, 918, 919, 920, 922, 927, 944, 994, 995, 996], "192": [62, 187, 194, 226, 229, 234, 236, 239, 242, 246, 249, 252, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322, 348, 783, 845, 927, 1178], "168": [62, 187, 194, 197, 204, 213, 226, 229, 234, 236, 239, 242, 246, 249, 252, 255, 264, 267, 284, 288, 294, 306, 310, 316, 322, 348, 783, 845, 927, 996, 1178], "82": [62, 164, 173, 187, 197, 202, 204, 210, 213, 219, 226, 229, 234, 236, 242, 246, 249, 252, 255, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322, 337, 1065, 1112, 1113], "prerequisit": [62, 105, 232, 783, 914, 1035], "apt": [62, 124, 165, 169, 183, 232, 279, 281, 539, 790, 909, 914, 916, 927, 986, 998, 1143, 1148], "python3": [62, 64, 87, 138, 150, 165, 174, 187, 193, 213, 223, 229, 239, 242, 246, 322, 962, 972, 998, 1008, 1035, 1129, 1130, 1136, 1143], "along": [62, 155, 161, 214, 227, 360, 409, 479, 761, 855, 963, 984, 1015], "omit": [62, 64, 160, 169, 174, 223, 229, 239, 242, 243, 246, 316, 346, 390, 427, 439, 451, 471, 645, 667, 714, 788, 804, 853, 914, 915, 916, 923, 939, 940, 944, 955, 1005, 1008, 1060, 1141], "bind": [62, 134, 155, 257, 279, 281, 309, 319, 387, 394, 625, 667, 680, 707, 731, 732, 734, 740, 762, 763, 910, 984, 1016, 1020, 1039, 1050, 1127, 1161, 1176, 1178], "cxx": [62, 151, 452, 467, 468, 469, 470, 471, 472, 474, 476, 479, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 523, 525, 528, 529, 530, 531, 533, 535, 536, 537, 538, 540, 541, 542, 543, 544, 761, 985, 986], "xf": [62, 165, 836, 998], "ld_library_path": [62, 457, 1001], "gpiod": [62, 64, 790], "py3": [62, 138, 150, 1063], "aarch64": [62, 165, 996], "multi": [64, 1114, 1121], "chmod": [64, 161, 342, 837, 838, 855, 860, 862, 864, 867, 919, 923], "snippet": [64, 174, 193, 315, 327, 632, 915, 1008], "subdirectori": [64, 134, 160, 169, 181, 183, 206, 297, 313, 452, 456, 457, 510, 524, 763, 785, 836, 837, 838, 850, 860, 862, 879, 894, 898, 915, 916, 996, 1096, 1148], "stuff": [64, 71, 79, 101, 116, 125, 153, 156, 160, 169, 174, 186, 190, 193, 206, 215, 216, 237, 251, 270, 272, 293, 328, 346, 445, 451, 553, 600, 761, 763, 769, 778, 810, 840, 870, 878, 884, 890, 906, 914, 944, 1005, 1007, 1063, 1103, 1108, 1110, 1141], "stuff_complet": 64, "strace": [64, 98, 154, 156, 360, 768, 773, 826, 933, 939, 952, 968, 977, 1174], "pid": [64, 154, 156, 157, 444, 829, 842, 846, 848, 952, 968, 971, 977, 981, 982], "4677": 64, "11hello": 64, "clock_gettime64": 64, "clock_monoton": [64, 742, 934, 968], "tv_sec": [64, 968], "164646": 64, "tv_nsec": [64, 968], "833862215": 64, "_newselect": 64, "tv_usec": 64, "500000": [64, 909, 915, 1113], "unfinish": [64, 156], "4679": 64, "resum": [64, 697, 698, 701, 702, 703, 806, 968], "timeout": [64, 737, 739, 741, 933, 1136], "mi": [64, 234], "845864201": 64, "4678": [64, 229], "fd": [64, 164, 226, 270, 527, 769, 914, 928, 932, 933, 934, 936, 940, 941, 942, 943, 946, 948, 951, 974, 977, 981, 1065], "fourth": 64, "involv": [64, 79, 154, 157, 161, 164, 216, 270, 282, 283, 304, 348, 425, 433, 439, 445, 510, 577, 579, 668, 781, 810, 907, 985, 994, 996], "occasion": [64, 142, 169, 186, 215, 232, 435, 449, 459, 661, 810, 854, 1032, 1046, 1122], "due": [64, 161, 186, 467, 731, 1136], "weird": [64, 270, 315, 323, 435, 705, 743, 769, 794, 963, 981], "gil": [64, 186, 190, 282, 283, 304, 305, 308, 1108], "jitter": [64, 970, 972], "heavi": [64, 178, 186, 477, 916, 1032, 1166], "usr": [64, 154, 155, 159, 165, 174, 177, 182, 184, 206, 213, 214, 223, 226, 229, 239, 242, 246, 249, 252, 267, 272, 274, 284, 288, 310, 316, 322, 339, 342, 452, 454, 455, 457, 458, 462, 684, 717, 727, 761, 783, 810, 836, 842, 854, 866, 898, 901, 914, 916, 962, 972, 981, 984, 985, 986, 987, 996, 999, 1001, 1008, 1011, 1035, 1096, 1111, 1124, 1136, 1143, 1150], "env": [64, 150, 155, 177, 272, 962, 972, 1035, 1062, 1096, 1111, 1124], "hello_left": 64, "hello_right": 64, "rjust": [64, 174, 242, 288], "hello_middl": 64, "center": [64, 177, 219, 234, 236, 242, 246, 267, 274, 288, 306, 310, 316, 322, 336, 443, 523], "t1": [64, 173, 236, 246, 267, 271, 288, 310, 322, 953], "t2": [64, 173, 229, 236, 246, 267, 310, 322, 953], "t3": 64, "await": [64, 305], "epoll_wait": 64, "201": [64, 157, 187, 204, 213, 226, 229, 234, 236, 239, 242, 246, 249, 267, 274, 284, 288, 294, 306, 310, 316, 322], "multiplex": [64, 915, 934, 968, 1178], "create_task": 64, "sysf": [64, 116, 117, 118, 120, 126, 127, 151, 201, 270, 329, 330, 526, 763, 766, 767, 812, 906, 907, 914, 916, 947, 948, 951, 1165, 1172], "unmaintain": [64, 260, 269, 270, 313, 361, 986, 1050, 1158], "immun": [64, 584, 742], "hotplug": [64, 914], "reset": [64, 153, 474, 476, 726, 727, 728, 761, 1130, 1177], "pullup": 64, "pulldown": 64, "rpi": [64, 136, 165, 328, 810, 811, 914], "hope": [64, 154, 156, 159, 161, 165], "major": [64, 159, 172, 223, 229, 239, 242, 279, 281, 449, 453, 584, 769, 776, 841, 969, 1033, 1039, 1054], "releas": [64, 157, 183, 297, 313, 322, 410, 456, 727, 738, 739, 741, 763, 769, 783, 907, 914, 957, 962, 998, 1001, 1033, 1142, 1173], "ton": [64, 725, 849, 911, 936, 968, 972, 1161], "bartosz": 64, "golaszewski": 64, "gpiochip0": [64, 790, 950], "ioctl": [64, 270, 431, 776, 778, 804, 812, 813, 818, 824, 910, 914], "crw": [64, 774, 841, 892, 914, 915, 916], "254": [64, 175, 226, 229, 234, 236, 239, 246, 249, 267, 274, 284, 288, 294, 310, 322], "request": [64, 94, 99, 117, 133, 155, 156, 159, 216, 218, 243, 249, 305, 322, 450, 469, 491, 505, 674, 675, 678, 679, 768, 812, 936, 951, 1141], "request_lin": 64, "consum": [64, 134, 156, 159, 176, 226, 305, 443, 460, 489, 739, 741, 835, 843, 850, 957, 958, 969, 974, 976, 978, 981, 1008, 1030, 1039, 1065, 1120, 1166], "mytest": 64, "config": [64, 98, 121, 122, 143, 144, 150, 155, 157, 159, 165, 173, 267, 284, 288, 346, 353, 362, 526, 727, 763, 783, 811, 892, 914, 915, 916, 923, 998, 1008, 1136], "lineset": 64, "set_valu": [64, 741], "all_io": 64, "transform": [64, 67, 174, 189, 190, 193, 195, 205, 210, 211, 213, 214, 221, 232, 234, 237, 240, 263, 270, 272, 281, 287, 305, 318, 327, 439, 530, 531, 543, 545, 598, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 695, 719, 763, 994, 1014, 1058, 1091, 1108], "ntime": [64, 1018], "task": [64, 78, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 133, 169, 211, 224, 237, 251, 254, 257, 287, 293, 346, 349, 351, 352, 355, 356, 357, 360, 763, 837, 838, 855, 897, 906, 914, 917, 932, 947, 953, 966, 967, 969, 970, 1108, 1141], "interv": [64, 90, 121, 193, 223, 229, 230, 239, 242, 246, 267, 305, 346, 511, 513, 526, 527, 667, 741, 742, 934, 944, 968, 972], "none": [64, 129, 138, 150, 153, 154, 159, 164, 173, 175, 187, 197, 204, 205, 214, 219, 220, 223, 226, 229, 235, 236, 239, 242, 246, 249, 255, 264, 267, 271, 272, 274, 284, 288, 294, 306, 310, 316, 322, 337, 429, 430, 451, 454, 574, 660, 662, 933, 950, 978, 1005, 1008, 1030, 1056, 1063, 1133, 1148], "itertool": [64, 251, 253, 305, 1012], "cram": [64, 147, 184, 778, 968, 1005, 1121], "goe": [64, 66, 86, 114, 124, 157, 159, 174, 279, 439, 474, 539, 642, 662, 671, 721, 774, 810, 852, 853, 939, 966, 972, 982, 985, 992, 1035, 1038, 1058], "stuff_raw": 64, "mod": [64, 242, 267, 287, 788], "sidewai": [64, 190, 193, 248, 355, 356, 1013, 1014], "numpi": [64, 186, 190, 205, 224, 230, 237, 272, 278, 306, 308, 311, 451, 1032, 1107, 1111, 1114, 1122, 1126, 1136, 1143], "transpos": [64, 870], "col": 64, "tolist": 64, "outsid": [64, 242, 478, 491, 571, 579, 584, 726, 727, 800, 871, 953, 969, 1008], "instanti": [64, 125, 213, 346, 469, 480, 494, 495, 508, 509, 510, 513, 595, 624, 642, 663, 689, 695, 717, 730, 731, 1020, 1021, 1111], "coro": [64, 695, 697, 698, 700, 701, 702, 703], "stuff_raw2": 64, "05": [64, 98, 116, 157, 164, 169, 213, 248, 271, 278, 289, 298, 301, 341, 359, 458, 1112], "runtimeerror": [64, 177, 213, 267, 327, 1005, 1007], "reus": [64, 114, 169, 175, 1000, 1050], "alreadi": [64, 81, 116, 125, 154, 155, 157, 165, 176, 178, 186, 190, 246, 273, 276, 422, 433, 439, 471, 491, 493, 504, 507, 526, 543, 623, 763, 769, 783, 790, 798, 808, 810, 813, 830, 906, 914, 915, 916, 923, 936, 937, 939, 944, 945, 947, 964, 999, 1005, 1032, 1058, 1136, 1141, 1143, 1150], "bare": [64, 79, 81, 88, 90, 109, 136, 154, 360, 907, 915], "create_coro": 64, "ctor": [64, 181, 190, 239, 288, 321, 523, 545, 553, 570, 573, 574, 577, 587, 589, 624, 647, 671, 672, 674, 678, 679, 704, 712, 727, 743, 829], "nest": [64, 150, 214, 227, 236, 246, 253, 257, 274, 284, 373, 402, 403, 429, 689, 741, 757, 815, 1005, 1048], "_blink": 64, "coro_cr": 64, "creator": [64, 148, 165], "create_factory_for_blink": 64, "blinkfunc": 64, "blink_func": 64, "stuff_decorator_stage1": 64, "stage1": 64, "stararg": [64, 1006, 1009, 1030], "func": [64, 213, 223, 229, 239, 242, 273, 287, 529, 598, 667, 682, 689, 730, 1006, 1010], "becom": [64, 69, 79, 90, 93, 124, 129, 133, 154, 156, 182, 194, 273, 276, 296, 298, 301, 312, 388, 418, 420, 427, 430, 451, 467, 471, 510, 671, 726, 727, 728, 810, 847, 866, 899, 915, 916, 923, 966, 969, 970, 1005, 1011, 1041, 1142, 1148, 1163, 1164], "obsolet": [64, 186, 1032], "prog": [64, 227, 327], "demo": [64, 98, 99, 114, 116, 124, 134, 154, 177, 181, 186, 189, 191, 194, 195, 198, 206, 213, 221, 224, 227, 230, 232, 237, 243, 260, 263, 266, 269, 270, 290, 291, 342, 360, 452, 453, 457, 458, 462, 465, 513, 521, 651, 728, 763, 840, 843, 844, 865, 866, 906, 935, 977, 986, 1032, 1114, 1147, 1167, 1171], "opposit": [64, 158, 403, 916, 969, 1121], "futur": [64, 116, 132, 161, 226, 246, 258, 259, 261, 270, 318, 333, 355, 356, 427, 491, 661, 695, 737, 739, 740, 762, 763, 820, 1161], "steig": [65, 162], "normalweg": 65, "w\u00e4r": 65, "umst\u00e4nden": [65, 1156, 1160, 1175], "renat": 65, "beschreibung": [65, 198, 200, 208, 211, 214, 215, 217, 233, 245, 898], "bergfex": 65, "reden": 65, "sie": [65, 162, 168, 173, 177, 234, 239, 306, 337, 343, 360, 832, 897, 1155, 1157, 1158, 1159, 1165, 1175, 1177, 1178, 1179], "tagen": [65, 1165], "wir": [65, 172, 177, 181, 187, 189, 197, 198, 203, 217, 236, 242, 249, 302, 360, 628, 1156, 1171, 1172], "w\u00fcrden": 65, "denk": [65, 162, 218, 1175], "beiden": [65, 173, 187, 234, 242, 249], "h\u00fctten": [65, 163], "schlafen": 65, "hochk\u00f6nig": 66, "cite": [66, 161, 175, 186, 308], "complain": [66, 156, 165, 169, 183, 389, 562, 577, 578, 785, 813, 923], "subrepo": 66, "whole": [66, 233, 245, 246, 248, 251, 254, 263, 266, 305, 327, 451, 680, 689, 731, 785, 788, 810, 855, 937, 1006, 1077, 1164], "subtitl": 66, "fight": [66, 849], "against": [66, 156, 165, 206, 214, 226, 227, 409, 451, 455, 459, 510, 526, 742, 783, 785, 790, 794, 802, 845, 942, 987, 992, 1002, 1016, 1074, 1141, 1166], "fake": [66, 914], "simplest": [66, 192, 254, 452, 469, 602, 609, 716, 737, 815, 845, 899, 963, 996, 1034, 1039, 1141, 1149], "unprofession": [66, 158], "populist": 66, "gtest_discover_test": 66, "robust": 66, "sentenc": 66, "implicitli": [66, 210, 215, 226, 416, 466, 574, 582, 672, 680, 773, 940, 1005, 1037, 1121], "gtest_add_test": 66, "scan": [66, 223, 246, 249, 316, 914, 916], "primit": [66, 154, 198, 199, 279, 1014, 1161, 1171], "sort": [66, 86, 107, 109, 141, 154, 181, 187, 195, 199, 214, 216, 226, 227, 232, 234, 236, 237, 242, 250, 264, 267, 274, 279, 288, 294, 316, 322, 439, 440, 443, 444, 454, 545, 603, 621, 631, 635, 664, 705, 709, 717, 730, 739, 741, 763, 850, 854, 892, 903, 916, 1007, 1055, 1056, 1110, 1136], "port": [66, 124, 150, 151, 156, 161, 166, 226, 260, 269, 290, 291, 305, 328, 360, 763, 843, 849, 897, 906, 917, 922, 926, 944, 1065, 1120, 1124, 1136, 1165, 1172], "trap": [66, 155, 216, 422, 427, 445, 573, 1160, 1162], "hehe": [66, 186, 193], "html_sidebar": 66, "rtd": [66, 151], "linkcheck": 66, "admonit": 66, "matrix": [66, 175, 177, 278, 349, 351, 440], "thoma": [66, 148], "cokela": 66, "ablog": 66, "couldn": [66, 161, 165, 190, 193, 1046], "figur": [66, 116, 140, 146, 151, 159, 160, 175, 230, 1004], "piec": [66, 79, 147, 155, 429, 545, 597, 915, 946], "especi": [66, 87, 93, 114, 124, 155, 159, 178, 186, 270, 342, 360, 362, 388, 399, 429, 449, 671, 785, 916], "feed": [66, 85, 151, 1113], "blog_baseurl": 66, "nicer": [66, 970], "pour": [66, 467, 836], "tag": [66, 157, 159, 162, 163, 187, 203, 205, 247, 454, 462, 783, 998, 1001, 1173], "resolv": [67, 78, 114, 165, 169, 223, 226, 229, 232, 239, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322, 406, 432, 581, 927, 984, 987, 1112, 1113], "buildenviron": 67, "resolve_refer": 67, "builder": [67, 226, 1065], "get_and_resolve_doctre": 67, "apply_post_transform": 67, "addnod": 67, "docstr": [67, 150, 210, 213, 223, 229, 235, 247, 250, 253, 275, 307, 342, 1036], "emit": [67, 85, 494, 495, 852], "doctre": 67, "increasingli": 69, "whose": [69, 165, 223, 229, 239, 242, 278, 288, 355, 356, 489, 559, 662, 663, 907, 1008, 1141, 1148], "mainten": [69, 384, 410, 429, 1001], "easier": [69, 81, 86, 93, 175, 216, 451, 477, 582, 666, 810, 1161], "never": [69, 111, 112, 154, 155, 156, 161, 174, 236, 242, 246, 288, 306, 388, 409, 425, 436, 439, 449, 467, 489, 568, 649, 727, 749, 751, 753, 849, 907, 930, 955, 985], "simpler": [69, 165, 216, 280, 283, 367, 426, 460, 606, 806, 810, 915, 927], "wors": [69, 142, 157, 242, 435, 451, 689, 932, 1144], "makefil": [69, 98, 216, 259, 261, 452, 463, 779, 783, 811, 812, 989, 992, 994, 1001, 1002], "everytbodi": 70, "runtim": [70, 154, 165, 187, 191, 215, 239, 242, 322, 364, 385, 433, 443, 444, 457, 462, 493, 494, 507, 521, 556, 565, 605, 623, 624, 667, 709, 716, 730, 731, 953, 984, 1020, 1038, 1050, 1114, 1115], "dispatch": [70, 305, 322, 556, 565, 641, 644, 645, 747, 748, 749, 751, 762, 763], "hell": [70, 206, 240, 435, 468, 681, 712, 734, 800, 835, 960, 1121], "destructor": [70, 71, 98, 107, 124, 134, 216, 232, 253, 279, 281, 319, 344, 345, 473, 487, 515, 525, 539, 545, 554, 560, 567, 568, 569, 570, 575, 577, 592, 640, 641, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 676, 680, 707, 723, 732, 738, 740, 743, 748, 760, 762, 763, 771, 802, 815, 827, 1153], "opportun": [70, 161, 164, 174, 186, 205, 439, 658, 1021, 1164], "shoot": [70, 872], "oneself": [70, 1166], "encapsul": [71, 74, 214, 227, 232, 279, 281, 305, 328, 449, 469, 473, 487, 513, 515, 516, 517, 518, 519, 520, 521, 522, 525, 532, 534, 545, 567, 568, 590, 593, 596, 612, 618, 622, 631, 634, 635, 640, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 667, 676, 707, 723, 732, 740, 748, 760, 762, 763, 779, 812, 978, 1033, 1162], "hide": [71, 215, 227, 283, 1033], "fanci": [71, 1053, 1114, 1134], "whatnot": [71, 230, 739, 810, 907, 915, 933, 963], "boost": [72, 232, 462, 465, 545, 695, 971, 1179], "feel": [72, 154, 156, 165, 186, 562, 659, 661, 662, 667, 952, 970, 1032], "cluster_ecpropos": [73, 74, 75, 88, 763], "cluster_ecproposal_ec2": [73, 75, 763], "cluster_ecproposal_ec2_python": [73, 75, 763], "cluster_ecproposal_ec1": [73, 74, 75, 88, 763], "cluster_ecproposal_ec1_linux": [73, 74, 75, 763], "cluster_ecproposal_ec1_mt": [73, 74, 75, 88, 763], "cluster_ecproposal_ec1_cxx": [73, 74, 75, 88, 763], "ecproposal_ec2_python_bas": [73, 75, 763], "ecproposal_ec2_python_flask": [73, 75, 763], "ecproposal_ec2_python_exercise_sensor": [73, 75, 763], "ex": [73, 74, 75, 79, 88, 142, 214, 227, 539, 556, 717, 763, 855, 870, 1143], "temperatur": [73, 74, 75, 79, 83, 92, 95, 98, 113, 116, 117, 118, 119, 124, 125, 126, 134, 190, 223, 270, 305, 318, 319, 348, 351, 366, 368, 370, 468, 474, 479, 500, 514, 515, 516, 517, 518, 519, 520, 521, 525, 526, 527, 538, 556, 567, 645, 677, 747, 749, 751, 753, 763, 810, 906, 913, 945, 947, 964, 1020, 1096, 1111, 1112, 1113, 1114], "ecproposal_ec1_linux_exercise_sensor": [73, 74, 75, 763], "ecproposal_ec2_python_exercise_avg_displai": [73, 75, 763], "averag": [73, 74, 75, 79, 85, 86, 190, 226, 230, 246, 281, 305, 472, 488, 518, 525, 763, 972, 1065], "displai": [73, 74, 75, 79, 117, 126, 134, 159, 223, 229, 239, 242, 267, 270, 272, 274, 279, 284, 288, 310, 316, 322, 351, 443, 516, 763, 845, 892, 901, 914, 968, 1143], "ecproposal_ec1_linux_exercise_avg_sensor": [73, 74, 75, 763], "ecproposal_ec1_linux_exercise_avg_sensor_parallel": [73, 74, 75, 763], "ecproposal_ec1_linux_exercise_led_displai": [73, 74, 75, 763], "ecproposal_ec2_python_web_sensor": [73, 75, 763], "ecproposal_ec1_git": [73, 74, 75, 763], "ecproposal_ec1_cxx_unittest": [73, 74, 75, 763], "ecproposal_ec1_mt_wait": [73, 74, 75, 88, 763], "ecproposal_ec1_mt_exercise_mt_race_fix": [73, 74, 75, 88, 763], "avoid": [73, 74, 75, 79, 88, 154, 161, 169, 246, 375, 410, 488, 523, 525, 535, 569, 573, 624, 763, 808, 899, 915, 1162], "ecproposal_ec1_linux_gpio": [73, 74, 75, 763], "ecproposal_ec1_linux_dev_mgmt": [73, 74, 75, 763], "ecproposal_ec1_linux_bas": [73, 74, 75, 763], "ecproposal_ec1_cxx_build": [73, 74, 75, 88, 763], "ecproposal_ec1_cxx_ifac": [73, 74, 75, 763], "ecproposal_ec1_mt_lock": [73, 74, 75, 88, 763], "semaphor": [73, 74, 75, 77, 79, 88, 90, 149, 178, 179, 201, 223, 229, 239, 242, 360, 739, 763, 802, 957, 1166, 1176], "ecproposal_ec1_mt_exercise_mt_rac": [73, 74, 75, 88, 763], "ecproposal_ec1_cxx_oo_bas": [73, 74, 75, 763], "qualiti": [74, 161, 215, 278, 915, 1135], "assur": 74, "characterist": 74, "polymorph": [75, 107, 116, 117, 132, 213, 214, 227, 279, 281, 283, 298, 301, 451, 473, 487, 515, 567, 640, 641, 644, 645, 664, 725, 730, 747, 748, 749, 762, 763, 1161, 1164], "concurr": [75, 186, 190, 240, 309, 717, 800, 1016, 1108], "increment": [76, 172, 215, 229, 232, 255, 278, 367, 371, 375, 395, 404, 411, 415, 417, 421, 424, 428, 437, 441, 446, 447, 545, 562, 669, 707, 760, 762, 763, 842, 954, 955, 956, 977, 978, 1016], "lossi": 76, "access": [77, 79, 89, 111, 112, 113, 121, 151, 155, 156, 157, 159, 161, 174, 184, 194, 201, 213, 223, 226, 229, 232, 239, 242, 249, 252, 267, 270, 274, 284, 288, 298, 310, 315, 316, 322, 328, 342, 345, 347, 379, 418, 439, 440, 478, 494, 519, 520, 521, 522, 545, 568, 580, 582, 585, 586, 588, 589, 603, 628, 642, 649, 652, 655, 656, 659, 660, 661, 662, 663, 664, 678, 695, 710, 714, 726, 763, 768, 778, 781, 787, 798, 806, 810, 812, 828, 843, 846, 855, 857, 858, 881, 906, 916, 925, 926, 932, 936, 940, 942, 946, 950, 954, 968, 969, 977, 982, 1003, 1008, 1015, 1016, 1019, 1038, 1045, 1047, 1060, 1076, 1112, 1129, 1143, 1166], "flavor": [77, 88, 154, 452, 716, 721], "stash": 78, "suffic": [78, 161, 377, 427], "purpos": [78, 79, 81, 121, 132, 147, 155, 159, 165, 186, 205, 223, 229, 239, 242, 254, 267, 345, 373, 451, 463, 570, 602, 642, 731, 810, 843, 852, 915, 937, 942, 963, 984, 1002, 1032, 1113, 1142, 1165, 1172], "unifi": [79, 129, 193, 595], "intention": [79, 215, 288, 682], "power": [79, 90, 153, 155, 170, 175, 215, 232, 343, 344, 345, 363, 375, 376, 418, 427, 810, 820, 827, 841, 907, 911, 914, 915, 916, 935, 950, 968, 972, 1009, 1027, 1031, 1033, 1039, 1044, 1056, 1131], "being": [79, 82, 117, 142, 154, 157, 158, 164, 178, 186, 192, 213, 242, 246, 305, 319, 342, 388, 415, 432, 468, 471, 556, 580, 623, 725, 727, 731, 733, 739, 761, 792, 806, 810, 845, 927, 942, 968, 1015, 1022, 1032, 1035, 1112, 1150, 1153, 1166], "address": [79, 100, 107, 111, 112, 116, 117, 154, 156, 157, 158, 161, 194, 201, 206, 213, 215, 216, 232, 234, 260, 269, 270, 281, 290, 291, 339, 344, 345, 353, 406, 408, 417, 421, 424, 427, 428, 436, 437, 441, 446, 447, 467, 473, 478, 481, 487, 489, 491, 496, 515, 516, 517, 518, 519, 520, 521, 522, 525, 526, 567, 577, 582, 669, 679, 680, 707, 721, 740, 760, 762, 763, 790, 794, 806, 808, 837, 838, 839, 840, 843, 844, 846, 850, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 884, 885, 886, 887, 888, 890, 906, 908, 910, 915, 916, 918, 919, 920, 921, 922, 927, 929, 933, 935, 937, 944, 945, 947, 952, 960, 961, 963, 964, 967, 969, 977, 984, 986, 988, 989, 990, 991, 992, 993, 994, 995, 1001, 1016, 1019, 1112, 1113, 1132, 1141], "crucial": [79, 154, 178, 442, 604], "mmu": [79, 154, 781, 824, 847, 968], "sophist": [79, 223, 468, 489, 526, 663], "permiss": [79, 98, 101, 102, 103, 116, 189, 190, 194, 196, 206, 213, 229, 249, 260, 269, 284, 287, 290, 305, 328, 337, 342, 343, 344, 345, 347, 515, 567, 653, 740, 761, 762, 763, 769, 810, 837, 838, 840, 843, 844, 847, 853, 856, 860, 861, 862, 863, 864, 866, 867, 868, 872, 884, 887, 889, 890, 892, 906, 907, 917, 920, 922, 923, 926, 927, 932, 935, 936, 937, 940, 942, 943, 945, 947, 961, 964, 967, 969, 970, 982, 1007, 1108, 1136, 1143, 1167, 1176], "nativ": [79, 98, 105, 116, 153, 159, 161, 187, 223, 259, 261, 279, 349, 763, 810, 906, 985, 989, 991, 994, 1117, 1120, 1126], "varieti": [79, 445, 846, 984, 1164], "storag": [79, 159, 164, 452, 680, 810, 846, 907, 915, 932, 952, 1177], "underli": [79, 214, 221, 237, 246, 287, 342, 347, 717, 916, 1108, 1113, 1117], "platform": [79, 161, 214, 223, 227, 229, 239, 242, 246, 254, 272, 322, 335, 344, 362, 790, 810, 915, 916, 950, 968, 1096, 1141, 1143], "offer": [79, 154, 164, 205, 280, 403, 580, 584], "popular": [79, 165, 178, 182, 398, 675, 835, 916, 968, 984, 1000, 1026, 1110, 1116, 1124, 1137, 1164], "often": [79, 90, 153, 154, 155, 156, 186, 236, 246, 273, 276, 296, 312, 384, 394, 415, 454, 469, 481, 595, 717, 810, 870, 946, 1012, 1032, 1046, 1163, 1164], "appropri": [79, 118, 129, 141, 147, 154, 164, 169, 174, 206, 246, 384, 398, 410, 525, 731, 806, 914, 926, 977, 1114, 1120, 1164], "prototyp": [79, 328, 375, 467, 529, 562, 678, 810, 907, 915, 928, 1005, 1120], "higher": [79, 154, 165, 223, 229, 239, 242, 761, 808, 907, 969, 971, 978, 986, 994, 1120, 1163], "fulli": [79, 158, 161, 165, 190, 431, 526, 978], "distribut": [79, 159, 164, 169, 181, 186, 206, 216, 234, 246, 339, 467, 513, 521, 734, 781, 810, 848, 849, 970, 1032], "en": [79, 159, 171, 181, 242, 270, 647], "vogu": 79, "serial": [79, 153, 154, 164, 194, 229, 230, 242, 843, 845, 1165, 1172], "groundwork": 79, "lai": 79, "instruct": [79, 153, 157, 161, 184, 215, 270, 279, 281, 439, 510, 726, 741, 956, 968, 999, 1096], "consolid": [79, 186], "makeri": 79, "everybodi": [79, 159, 280, 431, 477, 571, 610, 653, 841, 1035, 1039, 1141, 1161], "clarifi": 79, "earli": [79, 153, 186, 190, 195, 280, 815, 827, 842, 970, 1003, 1020, 1058, 1163], "matter": [79, 153, 158, 159, 161, 169, 186, 192, 194, 369, 413, 445, 452, 459, 469, 569, 570, 582, 585, 671, 710, 717, 727, 729, 785, 810, 812, 855, 866, 908, 914, 916, 927, 1007, 1032, 1133, 1143, 1153, 1164], "rewrit": [79, 81, 154, 451], "translat": [79, 92, 93, 174, 187, 205, 242, 246, 249, 252, 288, 716, 1075], "flask": [79, 94, 151, 190, 193, 1006], "network": [79, 111, 112, 140, 149, 150, 151, 154, 161, 171, 172, 194, 196, 201, 226, 242, 249, 252, 263, 267, 269, 270, 274, 284, 288, 290, 305, 310, 316, 322, 344, 360, 361, 445, 478, 763, 764, 787, 827, 843, 845, 846, 848, 906, 909, 910, 915, 916, 917, 927, 931, 932, 935, 936, 947, 966, 1172, 1176], "oppos": [81, 116, 153, 193, 227, 234, 244, 279, 410, 454, 459, 556, 894, 908, 915, 923, 957, 970, 977, 982, 1001, 1027, 1038, 1039, 1121, 1129], "ahead": [81, 169, 449, 1022], "optimz": 81, "donald": [81, 438], "knuth": [81, 438], "prematur": [81, 438, 442], "optim": [81, 155, 267, 279, 310, 425, 441, 442, 446, 447, 454, 763, 794, 1120, 1160, 1162], "evil": [81, 232, 379, 429, 438, 442, 454, 582], "knowledg": [82, 86, 273, 276, 279, 526, 660, 662, 810, 908, 916, 1009, 1031, 1135], "onewir": [82, 86, 98, 107, 116, 117, 118, 126, 134, 270, 281, 318, 342, 345, 514, 515, 567, 763, 906, 913, 914, 945, 947, 964], "protocol": [82, 146, 159, 192, 193, 203, 225, 228, 230, 231, 235, 238, 241, 244, 253, 266, 268, 273, 276, 282, 283, 285, 286, 289, 292, 304, 305, 307, 308, 309, 311, 315, 317, 323, 348, 351, 383, 391, 478, 491, 768, 897, 908, 910, 914, 916, 917, 925, 926, 946, 1005, 1009, 1013, 1020], "aspect": [82, 121, 186, 190, 216, 240, 279, 281, 309, 474, 841, 914, 916, 1108, 1135, 1141, 1166], "regard": [82, 161, 186, 328, 870, 1032, 1039, 1137, 1141], "filesystem": [82, 86, 107, 116, 153, 156, 165, 194, 196, 206, 257, 322, 342, 347, 526, 762, 763, 810, 836, 915, 927, 943, 950, 968, 987, 1141, 1167, 1172, 1174, 1178], "hwmon": [82, 86, 117, 348, 351], "composit": [83, 107, 120, 123, 134, 190, 216, 262, 280, 281, 298, 466, 473, 487, 501, 515, 567, 763, 1012, 1164], "mock": [83, 116, 117, 132, 133, 134, 280, 282, 283, 304, 308, 319, 329, 331, 515, 516, 517, 518, 520, 556, 567, 763, 1148], "pin": [85, 133, 270, 328, 907, 911, 914, 915], "linearli": [85, 246, 609, 846], "cold": [85, 205], "hot": [85, 156, 440, 443, 792], "queri": [85, 1040], "said": [85, 111, 112, 156, 169, 186, 273, 276, 283, 489, 602, 649, 733, 739, 771, 907, 915, 916, 927, 954, 969, 1012, 1032, 1052, 1121, 1134], "ds18s20": [86, 348, 1141], "datasheet": [86, 139, 806, 907, 916], "lm73": [86, 270, 348, 351, 763, 906, 913, 916], "ti": [86, 153, 449, 527, 571, 728], "hoc": [86, 216, 409], "report": [86, 117, 120, 126, 134, 153, 156, 157, 169, 171, 173, 353, 435, 445, 568, 763, 928, 963, 1148, 1150], "experi": [86, 142, 161, 186, 449, 454, 553, 915, 916, 1142], "subsystem": [87, 98, 99, 104, 105, 116, 172, 194, 201, 206, 243, 259, 261, 263, 269, 270, 279, 281, 282, 298, 304, 763, 788, 806, 820, 840, 844, 846, 906, 907, 914, 915, 916, 950, 966, 1007, 1141, 1165, 1166, 1172], "deprec": [87, 133, 283, 636, 936, 950, 1161], "foremost": 88, "osen": [88, 90, 164, 733, 761, 968], "recurs": [88, 89, 190, 214, 223, 229, 239, 242, 737, 802, 815, 854, 855, 870, 882, 892, 899, 919, 926, 963, 1044, 1048, 1161], "mother": [89, 109, 170, 232, 545, 1025, 1161], "protect": [89, 154, 156, 206, 214, 226, 279, 281, 390, 409, 507, 508, 568, 571, 582, 638, 640, 641, 664, 739, 763, 794, 802, 808, 847, 889, 915, 956, 957, 968, 1016, 1019, 1028, 1153, 1166], "critic": [89, 154, 164, 445, 738, 800, 802, 1136], "kind": [89, 154, 156, 164, 169, 174, 186, 190, 223, 229, 230, 239, 240, 242, 254, 270, 282, 283, 304, 308, 474, 526, 574, 621, 671, 680, 725, 739, 841, 907, 914, 915, 1016, 1108, 1134, 1135, 1166], "poll": [90, 160, 171, 802, 804, 827, 950, 955, 957, 974, 978, 1165, 1172, 1176, 1178], "second": [90, 153, 156, 157, 161, 173, 186, 192, 213, 219, 223, 227, 229, 239, 242, 246, 272, 274, 328, 363, 373, 427, 443, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 503, 507, 508, 509, 513, 516, 526, 562, 577, 625, 627, 628, 667, 696, 697, 716, 727, 728, 741, 742, 757, 758, 759, 820, 847, 852, 855, 915, 934, 937, 944, 968, 977, 981, 985, 986, 1000, 1001, 1002, 1052, 1060, 1136, 1148, 1161], "readi": [90, 153, 907, 1141], "rare": [90, 159, 176, 190, 452, 462, 524, 526, 577, 675, 726, 892, 914, 931, 1043, 1047, 1060, 1142], "btw": [90, 158, 164, 186, 192, 206, 213, 233, 236, 342, 426, 779, 845, 1097, 1099], "increas": [90, 156, 439, 907, 970, 972, 1000, 1164], "tight": [90, 178, 383, 741, 813, 1133], "bui": [90, 154, 468], "bigger": [90, 154, 186, 439, 1114], "avail": [90, 124, 129, 134, 153, 154, 156, 157, 159, 165, 169, 178, 182, 186, 206, 215, 223, 229, 239, 242, 296, 304, 305, 308, 312, 361, 453, 455, 460, 464, 469, 494, 495, 695, 731, 737, 741, 783, 810, 815, 842, 866, 907, 911, 914, 915, 966, 969, 970, 987, 998, 1003, 1008, 1015, 1039, 1057, 1058, 1107, 1116, 1133, 1136, 1143, 1144, 1163, 1166], "intro": [94, 116, 133, 134, 151, 181, 205, 215, 224, 237, 238, 251, 254, 273, 276, 281, 287, 293, 305, 567, 667, 675, 695, 719, 763, 906, 930, 947, 949, 951, 1108, 1162, 1164, 1176], "rout": [94, 190, 1006], "jinja2": 94, "ss2022": [97, 763, 839, 840, 906], "ws2022": 97, "lab": [97, 107, 116, 342], "vo": [98, 107, 116, 348], "ku": [98, 106, 107, 116], "g1": [98, 763, 839, 840, 906], "g2": [98, 342, 763, 839, 840, 906], "08": [98, 100, 106, 116, 157, 164, 165, 166, 220, 223, 248, 252, 278, 316, 359, 463, 907, 914, 916, 938, 999, 1112], "cont": [98, 116, 224, 287], "command": [98, 100, 114, 116, 150, 153, 158, 164, 194, 206, 211, 221, 223, 229, 230, 237, 239, 242, 251, 254, 260, 262, 269, 270, 287, 290, 291, 328, 342, 347, 360, 410, 431, 442, 454, 464, 465, 466, 473, 487, 491, 501, 515, 524, 567, 577, 726, 740, 762, 763, 810, 836, 837, 838, 839, 840, 843, 844, 845, 847, 848, 849, 850, 852, 854, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 872, 873, 874, 875, 877, 878, 879, 881, 882, 884, 885, 886, 888, 890, 898, 903, 906, 915, 916, 917, 918, 919, 926, 930, 935, 937, 945, 947, 961, 963, 964, 967, 968, 969, 970, 984, 985, 992, 996, 1000, 1060, 1108, 1136, 1143, 1150, 1164], "wsl": [98, 99, 104, 105, 116, 243, 263, 269, 282, 298, 304, 763, 840, 844, 906, 987, 994, 995, 999], "homework": [98, 103, 106, 116, 156], "sshf": [98, 102, 116, 260, 269, 270, 290, 291, 349, 763, 906, 917, 922, 987, 996], "toolchain": [98, 104, 105, 107, 109, 116, 124, 149, 166, 181, 183, 270, 360, 451, 452, 458, 473, 487, 515, 516, 517, 518, 519, 520, 521, 522, 525, 526, 527, 567, 740, 762, 763, 811, 840, 843, 844, 906, 929, 935, 937, 944, 945, 947, 961, 964, 967, 969, 986, 987, 988, 989, 992, 1000, 1001, 1002, 1033, 1156, 1158, 1159, 1160, 1168, 1174, 1176], "bashrc": [98, 105, 116, 153, 165, 226, 260, 269, 270, 284, 290, 291, 322, 763, 840, 842, 890, 892, 906, 926, 996, 998], "studi": [98, 105, 215, 258, 259, 261, 262, 270, 318, 466, 473, 667, 707, 762, 763, 906, 989, 991, 994], "ds18b20": [98, 116, 118, 134, 270, 318, 342, 763, 906, 913, 944], "slave": [98, 116, 118, 134, 270, 318, 763, 906, 911, 913, 944], "redirect": [98, 101, 116, 155, 158, 194, 196, 206, 223, 229, 239, 242, 260, 269, 270, 290, 327, 342, 347, 763, 837, 838, 839, 840, 854, 874, 875, 877, 878, 881, 882, 884, 890, 903, 906, 936, 1058, 1157, 1167, 1174], "pipe": [98, 154, 159, 161, 174, 194, 196, 206, 260, 269, 270, 272, 290, 327, 342, 347, 761, 763, 840, 847, 852, 892, 897, 906, 936, 980, 981, 982, 996, 1058, 1157, 1167, 1174], "06": [98, 107, 116, 164, 195, 239, 258, 271, 278, 295, 298, 301, 341, 359, 451, 462, 545, 761, 1035, 1112], "past": [98, 154, 158, 159, 216, 232, 415, 600, 602, 606, 609, 613, 678, 783, 785, 849, 1103, 1107, 1158], "2p": [98, 105], "3p": [98, 105], "5p": [98, 105], "pointer": [98, 109, 116, 125, 134, 157, 181, 257, 318, 334, 343, 344, 345, 360, 373, 375, 377, 418, 419, 421, 422, 424, 426, 427, 428, 437, 441, 446, 447, 481, 526, 539, 556, 561, 563, 568, 569, 571, 579, 586, 588, 597, 601, 605, 609, 610, 613, 619, 623, 636, 669, 676, 677, 678, 705, 707, 712, 714, 716, 721, 726, 728, 731, 732, 740, 743, 747, 751, 753, 758, 759, 760, 762, 763, 769, 776, 781, 792, 798, 827, 830, 928, 954, 982, 1058, 1158, 1159, 1160, 1161, 1162, 1164], "exit": [98, 116, 150, 154, 156, 184, 205, 223, 229, 232, 239, 242, 264, 270, 305, 335, 360, 364, 416, 458, 465, 474, 577, 644, 724, 726, 763, 773, 778, 812, 906, 916, 932, 933, 934, 936, 937, 942, 944, 947, 948, 964, 974, 981, 982, 1001, 1007, 1015, 1016, 1034, 1037, 1050, 1060, 1070, 1087, 1136, 1143], "statu": [98, 116, 117, 126, 134, 150, 155, 157, 169, 223, 229, 232, 239, 242, 254, 264, 270, 360, 364, 416, 454, 458, 465, 644, 761, 763, 812, 826, 906, 937, 942, 944, 947, 964, 968, 981, 1001, 1037, 1063, 1122], "yai": [98, 150, 226, 234, 236, 249, 255, 274, 284, 316, 610, 661, 667, 963], "ol": [98, 116, 232, 279, 281, 288, 351, 473, 487, 515, 516, 517, 518, 519, 520, 521, 522, 525, 532, 534, 567, 571, 575, 590, 593, 596, 612, 618, 622, 631, 634, 635, 640, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 676, 707, 719, 723, 729, 732, 740, 748, 751, 760, 762, 763, 903, 978, 1053, 1058, 1080], "randomsensor": [98, 134, 474, 479, 488, 500, 514, 515, 521, 525, 535, 536, 537, 538, 540, 541, 567, 725, 726, 727, 728, 763, 1020], "rectangl": [98, 147, 477, 545, 574, 590, 664, 763], "mystr": [98, 180, 232], "point3d": [98, 590, 664, 763], "cuboid": [98, 590, 664, 763], "hierarchi": [100, 107, 111, 112, 113, 121, 190, 191, 193, 195, 213, 214, 227, 230, 242, 260, 269, 270, 290, 291, 301, 353, 440, 467, 468, 469, 472, 473, 487, 488, 492, 494, 515, 525, 567, 763, 840, 843, 844, 845, 856, 859, 860, 861, 862, 863, 864, 865, 870, 876, 882, 889, 906, 918, 919, 920, 921, 922, 947, 965, 994, 995], "parent": [100, 110, 111, 112, 156, 169, 171, 260, 269, 270, 290, 291, 761, 763, 790, 840, 842, 843, 844, 845, 846, 855, 856, 859, 860, 861, 862, 863, 864, 865, 873, 874, 875, 876, 877, 879, 881, 882, 883, 894, 906, 918, 919, 920, 921, 922, 947, 953, 994, 995], "login": [100, 116, 134, 159, 161, 194, 206, 260, 322, 341, 342, 763, 837, 838, 840, 841, 842, 844, 846, 847, 848, 856, 859, 860, 861, 862, 863, 864, 865, 871, 906, 907, 915, 918, 919, 920, 921, 922, 923, 925, 927, 944, 994, 995, 1086, 1156, 1165, 1172], "bourn": [100, 116, 170, 194, 196, 260, 269, 270, 290, 342, 343, 344, 347, 360, 361, 473, 487, 515, 516, 517, 518, 519, 520, 521, 522, 525, 567, 740, 761, 762, 763, 833, 837, 838, 839, 840, 843, 844, 851, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 900, 906, 929, 935, 937, 945, 947, 948, 961, 964, 967, 969, 986, 988, 989, 990, 991, 992, 993, 994, 995], "verifi": [101, 103, 116, 129, 133, 142, 164, 170, 182, 194, 206, 270, 353, 562, 580, 763, 840, 845, 874, 877, 878, 881, 884, 890, 906, 919, 920, 922, 1074, 1111, 1114, 1136], "joke": [101, 154], "mostli": [101, 240, 360, 365, 371, 383, 399, 429, 438, 583, 624, 726, 731, 778, 846, 849, 870, 936, 963, 966, 987, 1163], "secur": [102, 116, 157, 159, 161, 206, 226, 232, 260, 269, 290, 322, 341, 763, 837, 838, 843, 845, 848, 866, 870, 906, 907, 917, 918, 919, 920, 921, 925, 936, 944, 994, 995, 1001, 1003, 1035, 1065], "account": [102, 111, 112, 116, 159, 161, 181, 186, 190, 191, 226, 232, 242, 249, 252, 267, 271, 272, 274, 284, 288, 310, 316, 322, 342, 347, 372, 445, 451, 649, 667, 783, 914, 927, 1032, 1112], "authent": [102, 116, 194, 206, 215, 260, 269, 270, 290, 291, 339, 342, 763, 837, 838, 906, 917, 918, 919, 920, 921, 922, 927, 1074], "ownership": [102, 116, 181, 216, 270, 291, 305, 515, 535, 539, 545, 567, 680, 722, 725, 726, 740, 762, 763, 837, 838, 840, 843, 844, 847, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 906, 935, 936, 937, 945, 947, 961, 964, 967, 969, 1161, 1164], "setuid": [102, 116, 194, 260, 269, 270, 290, 291, 763, 840, 845, 865, 906], "quick": [103, 116, 186, 193, 211, 215, 221, 230, 237, 251, 263, 293, 494, 731, 897, 907, 1108, 1134], "credenti": [103, 116, 161, 254, 763, 838, 839, 840, 845, 859, 860, 861, 862, 863, 864, 865, 906, 923, 952, 1005], "share": [103, 104, 107, 111, 112, 116, 136, 149, 154, 156, 161, 165, 169, 178, 179, 181, 182, 184, 187, 206, 216, 223, 226, 229, 239, 242, 246, 249, 252, 257, 258, 259, 261, 267, 270, 274, 284, 288, 297, 310, 313, 316, 318, 322, 339, 360, 361, 405, 432, 433, 439, 445, 452, 456, 463, 464, 468, 480, 525, 545, 553, 667, 728, 730, 731, 739, 741, 760, 762, 763, 788, 792, 808, 815, 839, 840, 843, 849, 859, 862, 863, 865, 901, 906, 915, 939, 952, 954, 960, 966, 972, 984, 987, 994, 996, 1016, 1019, 1150, 1165, 1166, 1174, 1176], "adjust": [103, 144, 148, 763, 810, 906, 915, 920, 922, 978, 985], "ubuntu": [104, 124, 155, 161, 165, 169, 181, 182, 183, 184, 194, 259, 261, 270, 360, 763, 849, 906, 909, 927, 986, 987, 994, 995, 999, 1143, 1148], "zoom": [104, 105, 116, 161, 170, 186, 270, 284, 360, 452, 473, 487, 515, 516, 517, 518, 519, 520, 521, 522, 525, 567, 763, 892, 906, 986, 989, 990, 991, 992, 994, 1155], "recap": [105, 116, 190, 194, 203, 232, 279, 280, 307, 342, 563, 1014], "endeavor": 105, "hoop": [105, 849, 981], "doze": [105, 160, 215, 216, 229, 342, 349, 427, 761, 849, 894, 1052, 1058, 1143], "pictur": [105, 151, 154, 175, 186, 190, 283, 284, 439, 445, 524, 822, 870, 872, 892, 907, 926, 930, 1176], "fit": [105, 165, 170, 175, 177, 383, 388, 468, 592, 667, 689, 769, 810, 907, 1111, 1113, 1122], "theori": [107, 190, 412, 439, 1113], "Of": [107, 116, 134, 156, 159, 189, 190, 240, 258, 259, 261, 263, 270, 279, 281, 319, 359, 473, 487, 515, 525, 567, 600, 640, 641, 651, 664, 748, 760, 762, 763, 839, 854, 901, 906, 944, 947, 949, 1014, 1108, 1121, 1164], "ece20": [107, 110, 510, 526, 587, 837, 838, 845], "uml": [107, 134, 262, 280, 282, 283, 473, 487, 515, 525, 567, 763], "foundat": [107, 237, 267, 473, 487, 515, 567, 763, 810, 1172], "adapt": [107, 134, 157, 190, 262, 280, 466, 473, 475, 476, 487, 491, 501, 505, 515, 567, 731, 763, 915, 916, 1164], "syllabu": [107, 350], "vote": 107, "beurteilungsschema": 107, "grade": [107, 110, 116, 134, 346, 356, 1141], "total": [107, 110, 114, 156, 165, 169, 173, 226, 242, 252, 259, 438, 443, 451, 465, 474, 489, 523, 524, 525, 526, 577, 587, 726, 892, 894, 907, 914, 915, 916, 927, 950, 978, 985, 986, 987, 996, 999, 1063, 1065, 1148], "compos": [107, 120, 121, 136, 170, 232, 305, 377, 469, 648, 810, 998, 1001, 1010, 1024, 1070, 1121], "practic": [107, 227, 236, 246, 412, 449, 602, 641, 678, 713, 720, 914, 940, 982, 1116, 1161, 1164], "theoret": [107, 344, 363, 734], "semest": [107, 110, 346, 348], "addition": [107, 153, 156, 388, 472, 489], "deliv": [107, 154, 910, 981, 982], "variou": [107, 156, 232, 258, 259, 725, 739, 741, 810, 842, 1166], "weight": [107, 177, 186, 434, 804, 916, 1032], "decid": [107, 155, 156, 161, 186, 240, 438, 468, 529, 543, 607, 806, 810, 830, 914, 1015, 1032], "excerpt": [107, 190, 193, 344, 345, 1065, 1122], "w1": [107, 113, 116, 117, 131, 270, 319, 510, 526, 527, 944], "soup": [107, 151, 452, 454, 455, 457, 458, 460, 461, 463, 465, 467, 468, 469, 470, 471, 472, 474, 476, 479, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 523, 525, 528, 529, 530, 531, 533, 535, 536, 537, 538, 540, 541, 542, 543, 544, 647, 727, 761, 948, 951, 1008, 1011, 1060, 1141, 1150], "armv8": [107, 165, 270, 527, 985, 998, 999], "rpi4": [107, 165, 270, 527, 985, 998, 999], "gnueabihf": [107, 165, 270, 527, 810, 985, 996, 998, 999], "shape": [107, 147, 175, 177, 216, 278, 279, 310, 515, 545, 567, 587, 667, 763, 810, 936, 1113, 1116, 1126], "algorithm": [107, 155, 164, 175, 223, 229, 237, 239, 242, 250, 252, 258, 259, 279, 288, 439, 515, 532, 556, 563, 567, 594, 605, 607, 608, 610, 611, 614, 615, 631, 634, 635, 664, 709, 717, 719, 730, 734, 763, 1087, 1110, 1114], "find_if": [107, 109, 216, 232, 279, 318, 609, 612, 631, 635, 652, 661, 664, 730, 763], "customiz": [107, 279, 612, 631, 635, 664, 763], "binary_search": [107, 109, 216, 232, 279, 612, 631, 635, 664, 763], "associ": [107, 165, 183, 191, 193, 195, 211, 216, 270, 273, 276, 279, 281, 319, 386, 387, 395, 400, 404, 411, 417, 421, 424, 428, 437, 441, 446, 447, 515, 516, 532, 534, 567, 602, 631, 635, 664, 667, 669, 695, 707, 760, 762, 763, 769, 776, 834, 908, 936, 1008, 1038, 1039, 1040, 1056, 1058, 1115, 1164], "hour": [107, 159, 161, 186, 190, 223, 245, 263, 274, 287, 309, 348, 1070, 1108, 1115], "sent": [107, 154, 155, 194, 299, 445, 491, 850, 958, 978, 982, 1124], "015": 107, "voluntari": 107, "odd": [107, 116, 246, 281, 427, 515, 529, 532, 567, 763, 915, 1010, 1012], "char": [108, 156, 172, 215, 232, 242, 288, 365, 372, 377, 378, 381, 383, 384, 385, 388, 389, 402, 407, 410, 415, 416, 423, 427, 433, 434, 436, 452, 470, 474, 504, 508, 513, 527, 528, 559, 574, 577, 578, 582, 592, 632, 647, 648, 662, 678, 680, 705, 712, 729, 743, 761, 766, 769, 774, 790, 792, 804, 830, 914, 928, 932, 933, 936, 940, 941, 942, 943, 946, 948, 951, 965, 968, 974, 977, 978, 981, 1002, 1047, 1053, 1119, 1148, 1153], "cout": [108, 113, 121, 165, 453, 459, 474, 488, 493, 494, 495, 507, 508, 509, 510, 513, 521, 525, 526, 553, 571, 573, 578, 580, 584, 597, 598, 599, 600, 601, 604, 605, 606, 607, 608, 609, 610, 611, 613, 614, 615, 616, 620, 624, 625, 626, 627, 628, 634, 638, 639, 642, 644, 645, 648, 651, 658, 661, 667, 672, 682, 684, 685, 686, 687, 690, 691, 692, 693, 695, 696, 697, 699, 700, 701, 702, 703, 704, 709, 711, 712, 714, 715, 717, 719, 728, 729, 730, 731, 739, 741, 742, 747, 749, 751, 753, 853, 914, 948, 951, 963, 965, 977, 981, 1148], "endl": [108, 113, 165, 453, 474, 488, 493, 494, 495, 507, 508, 509, 510, 513, 521, 525, 526, 553, 571, 573, 578, 580, 584, 585, 592, 597, 598, 599, 600, 601, 604, 605, 606, 607, 608, 609, 610, 611, 613, 614, 615, 616, 620, 624, 625, 626, 627, 628, 634, 638, 639, 642, 644, 645, 648, 651, 658, 661, 667, 682, 684, 685, 686, 687, 690, 691, 692, 693, 695, 696, 697, 699, 700, 701, 702, 703, 704, 709, 711, 712, 714, 715, 717, 719, 728, 729, 730, 731, 739, 741, 742, 747, 749, 751, 753, 914, 948, 951, 963, 965, 977, 981, 1148], "constitut": 108, "_id": [108, 113], "objectcontain": 108, "add_object": 108, "_contain": [108, 717], "push_back": [108, 498, 499, 562, 603, 604, 605, 610, 613, 616, 620, 624, 671, 672, 675, 680, 739, 981, 1153], "fragment": [108, 440, 1012, 1148], "iostream": [108, 113, 223, 229, 239, 242, 474, 488, 493, 494, 495, 503, 507, 508, 509, 510, 513, 521, 525, 553, 571, 573, 578, 580, 584, 585, 597, 598, 599, 600, 601, 604, 605, 606, 607, 608, 610, 611, 614, 615, 616, 620, 624, 625, 626, 627, 628, 634, 638, 639, 642, 644, 645, 651, 657, 658, 659, 660, 661, 662, 667, 672, 682, 685, 686, 687, 690, 691, 692, 693, 695, 696, 697, 699, 700, 701, 702, 703, 704, 709, 711, 712, 714, 717, 719, 728, 729, 730, 731, 739, 741, 747, 749, 751, 753, 761, 914, 948, 951, 955, 963, 965, 977, 981, 982, 1148], "my_vector": 108, "sysroot": [109, 165, 985, 999], "intel": [109, 139, 143, 157, 763, 984], "header": [109, 150, 182, 216, 232, 257, 287, 296, 297, 312, 313, 409, 410, 411, 417, 421, 424, 428, 432, 437, 441, 446, 447, 451, 456, 457, 458, 463, 464, 474, 595, 669, 684, 689, 707, 713, 760, 762, 763, 854, 911, 916, 985, 987, 996, 1065, 1098, 1102, 1103, 1105, 1113, 1116, 1163], "match": [109, 153, 160, 189, 202, 219, 226, 227, 229, 234, 242, 252, 254, 255, 264, 267, 287, 288, 294, 305, 316, 322, 407, 451, 526, 680, 684, 704, 717, 721, 845, 854, 927, 987, 1007, 1053, 1108, 1148], "linker": [109, 111, 112, 149, 181, 296, 312, 406, 432, 439, 443, 444, 455, 462, 584, 595, 810, 984, 987, 990, 994, 1001, 1158, 1159, 1160, 1163, 1168, 1174], "uniquifi": [110, 281, 515, 532, 567, 763], "lookup": [110, 122, 174, 191, 204, 223, 229, 234, 239, 242, 256, 288, 434, 489, 515, 532, 534, 567, 682, 763, 1020, 1049, 1056, 1086, 1121, 1130, 1178], "leak": [110, 156, 422, 436, 474, 494, 495, 515, 532, 534, 535, 551, 559, 562, 567, 568, 574, 639, 713, 724, 726, 763, 1008], "sure": [110, 153, 154, 155, 156, 157, 159, 160, 161, 164, 165, 194, 206, 213, 230, 232, 272, 339, 433, 468, 469, 472, 491, 494, 495, 524, 550, 647, 721, 758, 810, 915, 916, 937, 941, 996, 1008, 1164], "gz": [110, 150, 810, 811, 834, 835, 836, 1063, 1143], "whatev": [110, 122, 129, 133, 153, 154, 156, 161, 177, 192, 252, 328, 445, 491, 570, 670, 695, 761, 875, 877, 927, 932, 968, 970, 1038, 1105, 1113, 1120, 1121, 1143], "quiz": [111, 112, 116, 650, 664, 763, 840, 844, 859, 865, 884, 890, 906, 991, 994], "servic": [111, 112, 150, 159, 160, 161, 194, 226, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322, 445, 451, 734, 802, 808, 813, 843, 846, 897, 916, 925, 927, 934, 970, 1037], "owner": [111, 112, 155, 194, 342, 347, 727, 769, 810, 843, 857, 858, 866, 892, 927, 955], "dimension": [111, 112, 175, 689, 843, 1113, 1114], "identifi": [111, 112, 155, 164, 223, 229, 239, 242, 288, 388, 410, 431, 433, 443, 658, 768, 808, 843, 914, 916, 1054, 1115], "pthread": [111, 112, 154, 165, 171, 223, 229, 239, 242, 733, 739, 843, 952, 957, 960, 968, 982, 987], "timeslic": [111, 112, 154, 843, 966, 971], "suspend": [111, 112, 154, 155, 695, 697, 737, 806, 841, 843, 854, 957, 982], "favor": [111, 112, 843, 969, 1161], "fair": [111, 112, 154, 808, 843, 969, 971], "ensur": [111, 112, 242, 469, 517, 843], "evenli": [111, 112, 234, 843], "cpu": [111, 112, 123, 153, 154, 157, 161, 164, 187, 197, 201, 281, 353, 357, 425, 426, 438, 440, 445, 603, 734, 741, 763, 781, 794, 808, 815, 820, 830, 841, 843, 846, 850, 906, 914, 915, 916, 930, 947, 955, 957, 967, 968, 969, 970, 971, 1018, 1035, 1166], "infinit": [111, 112, 154, 174, 193, 223, 227, 229, 232, 234, 239, 242, 250, 283, 287, 400, 418, 425, 843, 847, 966, 969, 1012, 1013, 1014, 1043, 1078], "illus": [111, 112, 843, 847, 966, 969, 1166], "action": [111, 112, 164, 193, 249, 452, 458, 570, 649, 869, 870, 931, 936, 968, 981, 983, 1115, 1136], "undefin": [111, 112, 215, 381, 388, 415, 458, 576, 584, 608, 615, 620, 644, 649, 680, 709, 981], "behavior": [111, 112, 121, 154, 156, 159, 191, 213, 215, 242, 388, 608, 615, 620, 649, 680, 697, 843, 937, 941, 982, 985, 1005, 1010, 1027], "declar": [111, 112, 214, 215, 227, 232, 364, 380, 395, 404, 409, 411, 417, 418, 421, 424, 425, 428, 431, 432, 433, 437, 439, 441, 446, 447, 452, 572, 582, 642, 649, 658, 659, 669, 680, 689, 705, 707, 727, 760, 762, 763, 916, 936, 940, 942, 943, 969, 1150], "promis": [111, 112, 156, 258, 259, 261, 270, 318, 375, 433, 491, 559, 571, 580, 649, 695, 697, 698, 701, 702, 739, 740, 762, 763, 981, 1033, 1161], "caller": [111, 112, 156, 232, 375, 377, 413, 419, 443, 445, 582, 649, 661, 678, 727, 729, 734, 737, 802, 813, 953, 957, 1008, 1087], "uniniti": [111, 112, 436, 562, 569, 571, 572, 573, 576, 649, 765], "guarante": [111, 112, 154, 192, 223, 242, 427, 472, 649, 774, 781, 915, 916, 969, 970, 978, 1005], "contigu": [111, 112, 440, 603, 620, 649, 796, 946, 1129], "vec": [111, 112, 569, 571, 578, 585, 586, 587, 588, 589, 649], "carri": [114, 156, 161, 176, 431, 463, 472, 489, 761, 914, 971, 984, 1007], "norm": [114, 232, 1121], "meantim": [114, 474, 931], "fresh": [114, 155], "made": [114, 121, 133, 147, 148, 153, 154, 155, 157, 160, 161, 165, 169, 206, 221, 246, 270, 305, 342, 374, 412, 413, 415, 418, 449, 469, 473, 489, 495, 695, 794, 810, 841, 842, 847, 907, 914, 940, 946, 951, 969, 987, 1012, 1019, 1029, 1065, 1113], "arbitrari": [114, 154, 175, 242, 246, 369, 385, 403, 439, 454, 592, 619, 620, 672, 730, 742, 769, 911, 936, 940, 968, 1008, 1044, 1058, 1086], "sinc": [114, 136, 165, 171, 216, 222, 253, 338, 439, 442, 571, 579, 580, 610, 623, 666, 667, 695, 716, 721, 727, 742, 761, 810, 914, 927, 934, 940, 943, 955, 970, 977, 1038, 1162], "whichev": 114, "enumer": [114, 169, 175, 177, 187, 193, 198, 199, 203, 205, 211, 212, 214, 235, 239, 244, 250, 264, 268, 285, 288, 307, 317, 384, 431, 451, 668, 771, 806, 916, 1171], "pack": [114, 165, 169, 215, 524, 545, 836, 870, 908, 910], "unpack": [114, 169, 173, 193, 199, 203, 205, 210, 214, 218, 223, 226, 231, 235, 236, 242, 247, 249, 253, 254, 265, 270, 272, 275, 284, 288, 306, 309, 311, 317, 319, 327, 342, 707, 762, 763, 810, 836, 908, 910, 914, 985, 992, 998, 999, 1038, 1056, 1161], "kib": [114, 169], "222": [114, 187, 226, 229, 234, 236, 242, 246, 249, 252, 264, 267, 284, 288, 294, 310, 316, 322, 458], "addit": [114, 156, 174, 186, 213, 242, 245, 327, 386, 433, 454, 488, 489, 503, 525, 571, 583, 589, 660, 810, 847, 923, 1027, 1039, 1055, 1057, 1136], "checkout": [114, 136, 146, 157, 169, 183, 783, 810, 811, 1173], "previou": [114, 158, 174, 305, 510, 562, 578, 660, 870, 902, 942, 1009, 1011, 1031, 1033, 1077, 1135], "9bfda12": 114, "mosquitto": [114, 226, 230, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322, 1102, 1124], "client": [114, 124, 136, 159, 161, 172, 217, 221, 249, 263, 449, 477, 478, 491, 730, 731, 910, 923, 925, 933, 978, 1120, 1136], "smoothli": 114, "forward": [114, 169, 232, 258, 259, 260, 269, 290, 291, 318, 380, 395, 404, 410, 411, 417, 421, 424, 428, 437, 441, 446, 447, 632, 669, 676, 707, 717, 760, 762, 763, 810, 870, 894, 902, 906, 907, 917, 922, 1161], "diverg": [114, 968], "00aea42": 114, "delet": [114, 181, 193, 223, 242, 257, 267, 288, 319, 337, 436, 467, 470, 509, 526, 535, 539, 551, 559, 574, 577, 636, 639, 644, 667, 677, 678, 679, 707, 712, 724, 725, 726, 727, 743, 753, 762, 763, 788, 818, 847, 1117, 1143, 1160, 1161], "footnot": [114, 157, 159, 160, 161, 164, 165, 170, 177, 183, 186, 189, 273, 276, 468, 495, 539, 586, 588, 589, 602, 632, 651, 779, 781, 842, 849, 864, 914, 915, 916, 937, 940, 1000, 1032, 1035, 1065, 1099, 1114, 1161, 1164], "term": [114, 121, 154, 156, 178, 206, 246, 279, 281, 339, 439, 582, 585, 649, 727, 730, 843, 916, 935, 969, 981, 1113, 1148], "ss2023": 115, "ws2023": [115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 133, 763], "firstnam": [116, 134, 187, 213, 226, 234, 236, 239, 242, 246, 249, 252, 254, 255, 264, 267, 274, 288, 294, 299, 306, 322, 328, 333, 469, 470, 498, 504, 513, 514, 527, 582, 628, 654, 658, 660, 662, 679, 837, 838, 874, 875, 877, 879, 882, 1008, 1021, 1022, 1024, 1025, 1026, 1028, 1029, 1037, 1097, 1098, 1099, 1100, 1103, 1104, 1105, 1116, 1125, 1126, 1127, 1129, 1130, 1131, 1132], "lastnam": [116, 134, 187, 216, 226, 232, 234, 236, 239, 242, 246, 249, 252, 254, 255, 267, 274, 288, 294, 299, 306, 322, 328, 333, 469, 470, 498, 504, 513, 514, 527, 582, 628, 652, 654, 658, 661, 664, 679, 763, 837, 838, 874, 875, 877, 879, 882, 1008, 1021, 1022, 1024, 1025, 1026, 1028, 1029, 1037, 1097, 1098, 1099, 1100, 1103, 1104, 1105, 1116, 1125, 1126, 1127, 1129, 1130, 1131, 1132], "bouncem": [116, 134, 526, 527, 837, 838], "procf": [116, 194, 196, 270, 763, 848, 906, 947, 964, 1165, 1172], "umask": [116, 260, 269, 270, 290, 291, 342, 347, 763, 840, 865, 889, 906, 940, 952], "diff": [116, 210, 229, 322, 569, 571, 1027, 1167], "raspi": [116, 150, 284, 342, 348, 763, 787, 810, 811, 812, 814, 819, 825, 828, 831, 906, 908, 909, 910, 911, 914, 915, 916, 998, 999], "spirit": [116, 403], "readm": [116, 138, 173, 279, 281, 914, 915], "modular": [116, 186, 191, 193, 221, 240, 272, 344, 345, 375, 452, 984, 1011], "plc": 116, "sallok": 116, "constantsensor_nopoli": [116, 134, 515, 521, 567, 763], "randomsensor_nopoli": [116, 134, 515, 567, 763], "ece21": [116, 133, 134], "labexam": 116, "hysteresis_nopoli": [116, 117, 134, 515, 516, 567, 763], "upload": [116, 160, 870, 1063, 1135], "j": [116, 151, 159, 165, 202, 217, 219, 229, 234, 236, 239, 242, 246, 249, 252, 264, 267, 274, 288, 294, 306, 310, 322, 389, 392, 409, 433, 440, 489, 582, 671, 682, 730, 820, 836, 992, 996, 1012, 1121, 1127], "bz2": [116, 155, 445, 810, 832, 835, 1005], "influenc": [116, 985, 1161], "felber": 116, "vscode": [116, 184, 348, 362, 892], "folder": [116, 160], "comprehend": [116, 240, 388, 394, 981], "workspacefold": 116, "suppli": [116, 156, 194, 527, 529, 573, 769, 810, 826, 845, 907, 911, 914, 916, 931, 940, 1069], "cpprefer": [116, 607, 608, 609, 610, 611, 613, 614, 615, 616, 619, 628, 647], "averagingsensor_nopoli": [116, 134, 515, 567, 763], "toolcas": [116, 129, 134, 279, 281, 684], "mocksensor_nopoli": [116, 134, 515, 516, 517, 518, 567, 763], "specifi": [116, 154, 171, 242, 254, 288, 383, 451, 460, 513, 516, 521, 524, 573, 653, 667, 682, 706, 717, 810, 870, 927, 940, 944, 970, 982, 1035, 1050, 1058, 1062, 1079, 1098, 1100, 1129, 1131, 1136], "hint": [116, 129, 169, 242, 254, 283, 366, 469, 529, 539, 543, 654, 837, 838, 850, 919, 968], "target_link_librari": [116, 182, 455, 457, 458, 459, 460, 464, 510, 546, 549, 555, 561, 564, 980, 985, 986, 1147, 1150, 1152], "inter": [116, 154, 172, 178, 969, 1165, 1172, 1175, 1177], "likewis": [116, 229, 556, 587, 836, 855, 926, 942, 992, 1113, 1150], "ledstripedisplay_nopoli": [116, 134, 515, 567, 763], "somewhat": [117, 174, 215, 439, 472], "02131d959eaa": [117, 510, 526, 527, 944], "heat": [117, 262, 466, 473, 517, 526, 763, 916, 1112, 1113], "hwmon2": [117, 914], "temp1_input": [117, 914, 916], "boilingpot": [117, 119], "hysteresi": [117, 127, 132, 133, 134, 319, 351, 517], "knob": [117, 1036], "steer": 117, "desir": [117, 159, 223, 229, 239, 242, 384, 388, 399, 521, 571, 573, 579, 661, 808, 941, 943, 1115], "hardcod": [117, 155, 346, 545, 769, 773, 1074], "ledstripedisplai": [117, 127, 129, 132, 133], "unreason": 117, "cluster_fh2021": [117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 133, 763], "fh2021_switch_interfac": [117, 118, 119, 120, 125, 126, 127, 133, 763], "fh2021_sysfs_gpio_switch": [117, 118, 120, 126, 133, 763], "fh2021_sensor_interfac": [117, 118, 119, 120, 126, 133, 763], "fh2021_boiling_pot": [117, 118, 119, 120, 126, 133, 763], "breadboard": [118, 120, 916, 1165, 1172], "acrobat": [118, 120], "boilingpot_suit": 119, "status_report": 119, "percentage_displai": 119, "fh2021_display_infrastructur": [119, 125, 126, 763], "infrastructur": [119, 120, 126, 134, 154, 444, 763, 766, 978], "fh2021_pwm_displai": [119, 125, 126, 129, 763], "pwm": [119, 120, 125, 126, 134, 270, 279, 763, 810, 906, 907, 913, 950, 1165, 1172], "fh2021_boiling_pot_displai": [119, 126, 763], "stripe": [120, 125, 129, 516], "style": [121, 150, 154, 159, 223, 229, 232, 239, 242, 281, 435, 450, 451, 545, 570, 571, 576, 610, 644, 647, 658, 667, 672, 703, 719, 744, 748, 752, 753, 754, 762, 763, 778, 827, 950, 1036, 1077, 1102, 1113], "reusabl": 121, "compon": [121, 214, 227, 319, 442, 894, 969], "dedic": [121, 154, 155, 186, 191, 240, 270, 273, 276, 435, 451, 778, 848, 849, 914, 915, 916, 950, 952, 986, 1004, 1015, 1048, 1164], "constrain": [121, 848], "decoupl": [121, 230, 467, 968], "sink": [121, 123, 126, 282, 283, 298, 301, 304, 308, 763], "datalogg": [121, 283, 305], "target_include_directori": [121, 460, 461, 463, 464], "announc": [121, 349, 460, 461, 638, 914, 915], "anyon": [121, 154, 559, 781], "node": [121, 147, 159, 164, 174, 423, 443, 460, 623, 766, 769, 773, 779, 788, 1000, 1124, 1141], "startlog": 121, "uint16_t": [121, 383], "special": [121, 147, 154, 201, 234, 236, 242, 246, 270, 364, 416, 477, 488, 491, 494, 495, 539, 562, 567, 680, 682, 736, 759, 836, 847, 852, 908, 930, 936, 958, 982, 1001, 1006, 1025, 1027, 1035, 1044, 1046, 1050, 1110, 1115, 1146, 1166, 1167], "unif": [121, 568], "leftov": 121, "gettim": 121, "defer": [121, 154, 449, 808, 830], "timestamp": [121, 219, 229, 249, 278, 282, 283, 304, 306, 308, 310, 316, 451, 731, 771, 872, 892, 926, 977], "sinkfil": 121, "sinkmock": 121, "usabl": [121, 242, 288, 393, 472, 523, 678, 917], "sensorconfig": [121, 134, 309], "sensorvalu": [121, 122, 124, 488, 502], "runtime_error": [121, 493, 494, 505, 507, 508, 509, 527, 741], "logger_suit": 121, "loggerbasictest": 121, "sensor_values_suit": 121, "sensor_config_suit": 121, "duplicate_sensor": 121, "outlook": [121, 134, 849], "prebuilt": [121, 914], "order": [121, 141, 147, 153, 159, 160, 164, 165, 174, 186, 187, 190, 192, 223, 229, 234, 244, 246, 249, 279, 296, 312, 368, 394, 405, 427, 439, 454, 469, 488, 543, 545, 552, 554, 617, 663, 761, 765, 781, 794, 810, 899, 907, 914, 916, 932, 971, 996, 1012, 1032, 1080, 1090, 1163], "acquisitionloop": [121, 305, 309], "n_iter": 121, "doit": [121, 226, 474], "write_measur": [121, 305], "mockingsink": 121, "receiv": [121, 155, 174, 229, 232, 270, 299, 375, 491, 582, 680, 769, 781, 802, 810, 870, 907, 910, 916, 923, 931, 936, 958, 966, 981, 982, 1005, 1008, 1058, 1089, 1104, 1121], "yaml": 121, "ini": [121, 138, 159, 173, 350, 353, 1141], "fh2021_datalogg": [121, 122, 123, 124, 126, 763], "predecessor": [122, 124, 240, 248, 254, 298, 301], "sinklogg": [122, 124], "csvsink": [122, 305], "logfil": [122, 155, 193, 852, 903], "linksoben": 122, "rechtsunten": 122, "addmeasur": 122, "rememb": [122, 159, 160, 175, 182, 192, 213, 394, 427, 477, 603, 604, 638, 641, 678, 679, 727, 806, 810, 852, 867, 870, 889, 914, 923, 925, 1006, 1072, 1082], "csvname": [122, 227, 272, 451], "valuenam": 122, "_config": 122, "sensor_valu": 122, "getmeasur": 122, "rotat": [122, 155, 907, 932], "backup": [122, 160, 194, 452, 839, 841, 923, 1126], "fh2021_datalogger_csv_sink": [122, 126, 763], "boil": [123, 124, 127, 133, 763, 810], "pot": [123, 124, 127, 133, 763], "struct": [124, 157, 181, 215, 216, 232, 410, 415, 421, 422, 423, 424, 427, 428, 431, 433, 435, 437, 441, 446, 447, 469, 474, 491, 526, 527, 571, 572, 577, 579, 581, 582, 602, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 667, 669, 670, 671, 672, 679, 695, 698, 700, 701, 702, 703, 707, 712, 730, 731, 741, 743, 751, 752, 754, 760, 761, 762, 763, 769, 771, 774, 776, 778, 779, 781, 794, 798, 800, 802, 804, 806, 812, 813, 818, 820, 823, 827, 829, 830, 908, 910, 914, 933, 934, 946, 957, 968, 971, 977, 978, 981, 982, 1162], "sensor_config": 124, "getallmeasur": 124, "localhost": [124, 1119, 1124], "1883": [124, 1124], "transport": [124, 178, 230, 232, 524, 741, 1104, 1124], "sensor1": [124, 264, 474, 747, 749, 751, 753, 754], "sensor2": [124, 474, 747, 749, 751, 753, 754], "api": [124, 154, 161, 178, 201, 215, 242, 353, 357, 763, 766, 773, 781, 788, 792, 804, 906, 947, 959, 967, 970, 978, 1063, 1119, 1137, 1165, 1166], "burden": [124, 451, 584, 1010, 1142], "handmad": 124, "fedora": [124, 150, 159, 165, 166, 169, 183, 270, 322, 539, 763, 767, 770, 772, 775, 777, 780, 787, 789, 790, 791, 795, 801, 807, 811, 814, 819, 825, 828, 831, 866, 870, 906, 909, 986, 987, 994, 995, 996, 999, 1124, 1148], "mosquitto_new": 124, "mosquitto_connect": 124, "mosquitto_destroi": 124, "prohibit": [124, 579], "wide": [124, 161, 165, 365, 366, 842, 923, 978, 984], "iot": [124, 126, 134, 230, 270, 763], "broadcast": [124, 739, 908, 915, 957, 982, 1178], "flexibl": [124, 262, 460, 466, 480, 487, 501, 515, 567, 613, 763, 953, 968, 984, 985, 986, 1001, 1002, 1053, 1156], "fh2021_datalogger_mqtt_sink": [124, 126, 763], "percentag": [125, 129, 443], "show_percentag": [125, 129], "wire": [125, 907, 917, 996], "connect": [125, 139, 154, 161, 174, 194, 206, 227, 270, 299, 339, 347, 348, 423, 741, 841, 903, 907, 908, 915, 916, 925, 930, 936, 950, 1117, 1119, 1124, 1136, 1164, 1176, 1178], "shown": [125, 159, 192, 333, 892, 978, 1121], "src_demo": [125, 129], "fh2021_datalogger_integr": [126, 763], "logger": [126, 134, 283, 301, 305, 308, 731, 763], "fh2021_libgpiod_switch": [126, 127, 763], "fh2021_mqtt_tkinter": [126, 128, 763], "subscrib": [126, 151, 230, 242, 763], "fh2021_boiling_pot_full_integr": [126, 763], "fh2021_boiling_pot_basic_integr": [126, 763], "fh2021_sensor_w1": [126, 763], "mockswitch": [127, 132, 133], "libgpiodswitch": 127, "set_stat": [127, 133, 319], "tkinter": 128, "stackoverflow": [128, 342, 347, 425], "2400262": 128, "random": [128, 134, 172, 174, 190, 202, 214, 226, 227, 230, 234, 236, 239, 242, 247, 249, 252, 274, 283, 316, 322, 337, 342, 385, 472, 474, 479, 488, 514, 525, 535, 536, 537, 538, 540, 541, 542, 572, 725, 841, 916, 927, 946, 974, 1008, 1020, 1043, 1115, 1124], "pca9685": [129, 134, 270, 763, 906, 907, 913], "pwmchip0": [129, 907, 915], "pwm0": [129, 907, 915], "danc": [129, 160, 526, 830, 1000], "phase": [129, 202, 493, 507, 978, 1012], "cumbersom": [129, 156, 158, 193, 580, 603, 671, 715, 766, 952, 978, 1148], "percentagedisplai": 129, "round": [129, 154, 221, 226, 236, 246, 262, 267, 316, 318, 466, 473, 474, 476, 478, 487, 488, 501, 515, 567, 763, 971, 1177], "hood": [129, 156, 984], "relationship": [129, 319, 342, 481, 514, 556, 638, 731, 953, 986, 1000, 1016, 1020, 1114], "pwmdisplai": 129, "pwm_control": 129, "bit": [129, 133, 148, 153, 154, 156, 159, 161, 164, 165, 186, 187, 190, 197, 216, 227, 229, 230, 236, 260, 263, 269, 270, 273, 276, 290, 291, 309, 337, 342, 347, 353, 365, 371, 377, 383, 388, 395, 404, 411, 412, 417, 421, 424, 427, 428, 437, 441, 446, 447, 510, 524, 585, 669, 704, 707, 717, 727, 760, 761, 762, 763, 806, 810, 829, 840, 841, 865, 867, 869, 906, 907, 908, 910, 915, 917, 940, 968, 985, 994, 1004, 1044, 1108, 1121, 1156, 1161], "pwm5": 129, "visibl": [129, 133, 169, 195, 215, 281, 328, 375, 377, 379, 403, 405, 436, 437, 441, 446, 447, 511, 660, 763, 781, 914, 916, 978, 1049, 1077, 1117], "10000000": [129, 156, 229, 391, 954, 1010, 1018], "set_percentag": 129, "duti": [129, 907, 915], "duty_cycl": [129, 907, 915], "unbuff": 129, "automat": [129, 133, 142, 156, 158, 160, 161, 169, 204, 206, 210, 216, 223, 229, 239, 242, 246, 279, 281, 379, 388, 415, 432, 435, 439, 451, 480, 481, 570, 573, 638, 642, 680, 709, 748, 762, 763, 766, 781, 810, 914, 916, 943, 1005, 1058, 1065, 1070], "serv": [132, 158, 160, 400, 1114, 1142, 1176], "ground": [132, 915, 916], "mocksensor": [132, 134], "upstream": [133, 157, 160, 165, 169, 788], "sysfsgpioswitch": 133, "wherea": 133, "gpio20": 133, "voltag": [133, 907, 914], "constructur": 133, "proid": 133, "lifecycl": 133, "avg": [134, 242, 322, 432, 471, 488, 499, 518, 525, 747, 749, 751, 753], "lifetim": [134, 155, 213, 215, 232, 244, 380, 395, 404, 411, 417, 421, 422, 424, 428, 437, 441, 446, 447, 481, 574, 657, 669, 680, 707, 760, 762, 763, 1003], "averagingsensor": [134, 471, 499], "overrid": [113, 134, 150, 214, 227, 242, 257, 319, 468, 474, 476, 481, 496, 498, 499, 500, 502, 503, 505, 527, 641, 642, 706, 707, 747, 762, 763, 1005, 1020, 1153], "scheme": [134, 242, 288, 305, 308, 583, 1003, 1007], "constantsensor": [134, 471, 474, 479, 491, 492, 500, 512, 519, 525, 535, 536, 537, 538, 540, 541, 677, 725, 726, 727, 728, 1020, 1096], "w1sensor": [113, 134, 511, 512, 513, 514, 526], "meet": [134, 159, 161, 186, 427, 854, 996, 1009], "liskow": [134, 477], "segreg": [113, 134, 449], "invers": [113, 134, 246, 357, 449, 467, 474, 774, 969, 970, 1177], "gcc": [134, 155, 156, 182, 202, 204, 223, 229, 239, 242, 335, 362, 364, 388, 405, 409, 427, 430, 431, 433, 443, 444, 452, 454, 553, 601, 604, 736, 810, 811, 847, 867, 932, 933, 934, 940, 941, 942, 943, 952, 955, 985, 996, 998, 999, 1000, 1001, 1002, 1034, 1150, 1156], "cycl": [134, 216, 251, 449, 451, 695, 726, 740, 762, 763, 906, 907, 915, 947, 961, 967], "todai": [134, 155, 206, 214, 230, 263, 280, 296, 309, 312, 351, 377, 1108, 1163, 1166], "minut": [134, 154, 160, 161, 186, 190, 193, 230, 916, 1108, 1124], "suppos": [134, 169, 190, 246, 327, 491, 788, 810, 827, 849, 907, 955, 1102, 1141], "deploi": [134, 166, 194, 342, 347, 467, 800, 837, 838, 915, 916, 921, 923, 927], "leddisplai": 134, "pwmcontrol": 134, "minor": [134, 161, 165, 223, 229, 239, 242, 272, 769, 776, 841], "tweak": [134, 1141], "standup": 134, "followup": [134, 237, 298, 301, 512, 1097], "bonu": 134, "donat": [134, 908], "relai": 134, "board": [134, 153, 155, 810, 914], "cooker": 134, "gapher": 134, "tape": 134, "coordin": [134, 523, 569, 571, 578, 579, 689, 932], "notic": [134, 153, 154, 156, 169, 223, 229, 239, 242, 435, 454, 455, 512, 759, 850, 954, 956, 1016, 1130], "dir": [136, 187, 206, 214, 227, 236, 239, 246, 264, 267, 287, 288, 306, 327, 335, 416, 451, 452, 458, 463, 855, 985, 986, 998, 1021, 1136, 1143], "wo": [136, 162, 172, 173, 181, 187, 189, 360, 1158, 1159, 1177], "jf": [136, 147, 161, 198, 199, 257, 274, 342, 347, 361, 491, 505, 785, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1166, 1171], "aon": 136, "biz": 136, "svn": [136, 150, 216, 360, 361], "recommend": [136, 165, 186, 194, 206, 239, 439, 592, 623, 810, 870, 915, 1063, 1117, 1125], "lokalen": 136, "fetch": [136, 155, 169, 810, 953, 981], "myremot": 136, "orig": [136, 157, 204], "stia": 136, "improv": [137, 439, 442, 454, 710, 725, 761, 1003], "stack": [137, 175, 176, 177, 184, 198, 199, 217, 223, 226, 229, 239, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322, 433, 439, 489, 573, 604, 724, 843, 847, 915, 940, 952, 1171], "hang": [137, 197, 569, 813, 836], "seo": [137, 822], "blog": [137, 150, 154, 157, 164, 169, 729], "i2": [137, 139, 144, 249, 284, 763], "kontron": [137, 146, 763], "smarc": [137, 146, 763], "proper": [138, 154, 182, 425, 785, 810, 942, 1027], "manifest": [138, 996, 1144], "cfg": [138, 146, 322], "author_email": 138, "classifi": [138, 1063, 1110], "tox": 138, "travi": 138, "yml": 138, "upgrad": [138, 142, 143, 173, 763, 1136, 1143], "zip": [138, 146, 150, 214, 234, 240, 254, 267, 317, 322, 870, 876, 892], "zipfil": [138, 214], "99": [138, 164, 173, 187, 197, 204, 210, 213, 219, 226, 229, 234, 236, 239, 242, 246, 249, 252, 255, 264, 267, 271, 274, 284, 288, 294, 306, 310, 316, 322, 337, 342, 347, 443, 971, 1047, 1082, 1112], "999": [138, 226, 229, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322], "whl": [138, 150, 1063, 1136], "uninstal": [138, 457, 1136, 1141], "pypa": 138, "sampleproject": 138, "devicetre": [139, 915], "signal": [139, 150, 151, 179, 281, 360, 443, 741, 763, 781, 802, 847, 906, 907, 915, 947, 952, 960, 968, 969, 974, 978, 1167, 1174, 1175, 1178], "audio_mck": 139, "i2s0_ck": 139, "i2s0_lrck": 139, "i2s0_sdout": 139, "alsa": [139, 157, 322], "tlv320dac3203irg": 139, "tlv320dac3203": 139, "drive": [139, 272, 429, 517, 915, 936, 1115], "suggest": [139, 153, 154, 156, 158, 160, 161, 169, 178, 186, 193, 194, 195, 196, 259, 261, 279, 281, 403, 1032, 1060, 1141], "tlv320aic32x4": 139, "compat": [139, 159, 175, 278, 578, 668, 684, 761, 766, 785, 987, 1033, 1056, 1121, 1136, 1137], "tlv320aic31xxsw": 139, "tlv320aic31xx": 139, "wget": [140, 159, 161, 165, 284, 996, 998], "cdimag": 140, "amd64": [140, 206, 339, 383], "iso": [140, 214, 232, 233, 249, 252, 272, 294, 306, 310, 363, 451, 568, 584, 834], "netinst": 140, "img": [140, 175, 177, 438, 810, 914], "qcow2": 140, "virtualdebian": 140, "30g": [140, 161], "kvm": [140, 157], "hda": 140, "cdrom": 140, "2048": [140, 164, 229], "nic": 140, "sic": [140, 165], "box": [140, 144, 186, 907, 914, 1032], "deliveri": [141, 145, 154, 980, 983], "outcom": [142, 190, 195, 281, 810, 869, 870, 992, 1064], "dirti": [142, 143, 156, 170, 409, 474, 763], "forget": [142, 147, 154, 155, 156, 230, 374, 377, 422, 451, 1117, 1123, 1142, 1161], "graphic": [142, 444, 845, 846, 915], "plug": [142, 155, 157, 473], "monitor": [142, 157, 171], "4k": [142, 156, 968, 977], "dual": [142, 144], "gnome": [142, 154, 159, 226, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322, 445, 810, 845, 901, 969], "applianc": [142, 156, 445], "x11": [142, 322], "wayland": [142, 159], "benchmark": 142, "glxgear": 142, "su": [142, 998], "pect": 142, "cluster_project_xxx": [143, 763], "project_xxx_debian_kernel_packag": [143, 763], "finish": [143, 186, 205, 734, 763, 820, 1019], "project_xxx_audio_chip": [143, 763], "chip": [143, 172, 226, 763, 907, 911, 914, 932, 934, 968, 1065], "bringup": [143, 144, 763], "project_xxx_dirty_upgrad": [143, 763], "project_xxx_hardware_bringup": [143, 763], "project_xxx_yocto_kernel": [143, 763], "bsp": [143, 763], "project_xxx_debian_config": [143, 763], "project_xxx_wait_hardwar": [143, 763], "shot": [144, 161, 403, 667, 741, 761], "dac": 144, "massacr": [144, 173, 232, 342, 403, 409, 435, 459, 667, 1015], "distro": [144, 457, 1039, 1150], "bootload": [144, 153, 164, 445, 846, 914, 916], "oldconfig": [144, 155, 783, 790, 810, 811], "qemu": [144, 226, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322], "grub": [144, 164, 322], "stabl": [144, 161, 165, 449, 788, 810, 849, 968, 1000, 1002, 1063, 1137], "yoctoproject": 146, "v5": [146, 157], "bsp_smarc": 146, "sxal4_smarc": 146, "sxal_r1": 146, "0_combin": 146, "sxal4_5": 146, "sxal4": 146, "inc": [146, 157, 278, 426, 463, 464, 736, 955, 1018], "filesextrapaths_prepend": 146, "thisdir": 146, "linux_vers": 146, "linux_version_extens": 146, "linux_kernel_typ": 146, "kbranch": 146, "kmeta": 146, "lic_files_chksum": 146, "md5": 146, "bbea815ee2795b2f4230826c0c6b8814": 146, "srcrev_machine_pn": 146, "3604bc07c035939266d78d65084c6cd54ffc6d56": 146, "srcrev_meta_pn": 146, "8d42b14fe517ef036dc4e7b290f16d142f4f1d39": 146, "src_uri": 146, "bareclon": 146, "cach": [146, 150, 155, 281, 284, 322, 425, 439, 444, 445, 603, 620, 892, 969, 1136, 1143, 1159], "destsuffix": 146, "scc": 146, "pv": 146, "srcpv": 146, "include_patch": 146, "patch": [146, 165, 166, 970, 998, 1156], "compatible_machin": 146, "therebi": [147, 186, 675, 901, 981, 1027, 1065], "simplifi": 147, "fine": [147, 156, 161, 190, 454, 455, 570, 682, 684, 790, 820, 927, 931, 999, 1016, 1028, 1037, 1043, 1058, 1121], "grain": [147, 161, 451, 454, 820, 1028, 1043], "surround": [147, 668, 709, 721], "cut": [147, 175, 193, 206, 246, 260, 269, 290, 291, 388, 423, 763, 800, 840, 854, 900, 903, 906, 916], "linewis": 147, "wherev": [147, 367], "obs studio": 148, "video edit": 148, "screen record": 148, "These": [148, 156, 158, 159, 223, 229, 239, 242, 454, 467, 783, 810, 914, 986], "offici": [148, 190, 191, 194, 195, 196, 201, 567, 998, 1146], "jonathan": [148, 343, 344, 1156], "himself": [148, 916], "paus": [148, 156, 968, 981], "meanwhil": 148, "freez": [148, 1136, 1144], "photo": 148, "length": [148, 210, 213, 223, 229, 239, 242, 271, 278, 288, 310, 316, 451, 523, 574, 586, 647, 781, 794, 806, 908, 910, 936, 946, 978, 1113, 1121, 1125, 1132], "grab": [148, 907, 915], "neil": 149, "patel": 149, "insight": [149, 153, 454, 996, 1135], "consol": [149, 206, 845, 848, 903, 1087, 1167], "crawlabl": 149, "dn": [149, 158, 161, 226, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322, 1178], "domain": [149, 150, 160, 161, 166, 435, 449, 461, 969, 1107, 1110, 1176, 1178], "ipc": [149, 150, 151, 154, 359, 361, 761, 763, 906, 947, 975, 1176], "queue": [149, 150, 155, 164, 165, 172, 178, 198, 199, 201, 230, 258, 259, 261, 270, 282, 283, 304, 305, 308, 318, 491, 740, 762, 763, 804, 812, 830, 843, 847, 906, 947, 957, 961, 1171, 1175, 1176, 1177], "pydbu": 150, "openh": [150, 151, 172, 213], "traceback": [150, 176, 223, 229, 239, 242, 252, 272, 274, 288, 310, 1005, 1006, 1007, 1012, 1020, 1021, 1027, 1028, 1049, 1050, 1054, 1056, 1059, 1060, 1121, 1129, 1130, 1142], "recent": [150, 153, 156, 161, 176, 184, 223, 229, 239, 242, 252, 272, 274, 288, 310, 363, 810, 889, 1005, 1006, 1007, 1012, 1020, 1021, 1027, 1028, 1049, 1050, 1054, 1056, 1059, 1060, 1121, 1129, 1130, 1142], "oh_test": 150, "easysuit": 150, "oh_dbus_easysuit": 150, "easysuite_error": 150, "error_suit": 150, "dbusheatingerror": 150, "modulenotfounderror": [150, 267, 272, 1007], "research": [150, 153, 154, 267, 1114], "pygobject": 150, "714": [150, 229], "kb": [150, 156, 1143], "venv": [150, 187, 213, 223, 229, 239, 240, 242, 254, 284, 322, 349, 350, 892, 1062, 1095, 1108, 1123, 1135, 1141, 1143, 1144], "standalon": [150, 427, 680, 981, 1148], "ss_9wmug": 150, "__env_pip__": 150, "ignor": [150, 171, 183, 242, 288, 353, 389, 409, 439, 461, 469, 601, 604, 667, 682, 695, 717, 768, 852, 915, 940, 982, 1005, 1136], "9lrqmi4l": 150, "overlai": [150, 810, 914, 915], "locat": [150, 151, 155, 160, 165, 186, 223, 229, 239, 242, 246, 296, 312, 342, 360, 412, 425, 433, 439, 467, 489, 582, 602, 678, 726, 785, 810, 914, 915, 916, 936, 954, 978, 985, 1005, 1112, 1129, 1163], "pycairo": 150, "cwd": [150, 322, 524, 761, 836, 847, 873, 892, 894, 898, 986], "821": [150, 229], "py2": 150, "344": [150, 229, 242, 274, 288, 306, 316, 322], "517": [150, 229, 274, 322], "tmpabab356k_in_process": 150, "build_wheel": 150, "tmpt1yod7mc": 150, "o4u45fjc": 150, "pycairo_33865a19ad6b4a719885f07926efe16d": 150, "bdist_wheel": [150, 1063], "build_pi": 150, "x86_64": [150, 157, 159, 206, 213, 322, 339, 362, 388, 526, 587, 783, 788, 987, 996], "cairo": 150, "pyi": 150, "build_ext": 150, "pkg": 150, "perhap": [150, 246, 779, 1116], "pkg_config_path": 150, "gobject": 150, "introspect": [150, 968], "cp39": 150, "linux_x86_64": 150, "lib64": [150, 182, 187, 213, 223, 229, 239, 242, 246, 322, 445, 455, 457, 462, 984, 987, 1001, 1008, 1129, 1130, 1136, 1150], "_vendor": 150, "pep517": 150, "in_process": 150, "_in_process": 150, "tmpf2wjv23h": 150, "4rtfumdz": 150, "pygobject_beef4432e2454eb0b7facc57fadf42b8": 150, "pygtkcompat": 150, "generictreemodel": 150, "_signalhelp": 150, "_propertyhelp": 150, "_ossighelp": 150, "_option": 150, "_gtktemplat": 150, "_error": [150, 498], "_constant": 150, "keysym": 150, "pango": 150, "gio": 150, "gdkpixbuf": 150, "gdk": 150, "glib": 150, "gimarshallingtest": 150, "tmp56g_ixbz": 150, "bvay4iv4": 150, "pygobject_6777f13e15934fb2b13139399b143557": 150, "todo": [150, 195, 230, 258, 259, 355, 356, 525, 667, 764], "summari": [150, 191, 474, 577, 726, 1141], "c1": [150, 164, 472, 586, 671], "misc": [150, 151, 173, 174, 545, 779, 823, 1160], "w3school": 150, "howto": [150, 151, 781], "howto_css_image_transpar": 150, "asp": 150, "titelseit": 150, "mitt": 150, "howto_js_read_mor": 150, "subdir": [150, 761, 1005], "gegen": [150, 1156], "clutter": [150, 183], "404": [150, 160, 229, 236, 274, 288, 306, 322], "prio": [150, 192, 970, 971, 977], "beagleboard": [150, 155, 166], "repair": [150, 166, 226], "nand": [150, 166], "40w": [150, 166], "suck": [150, 151, 166], "disk": [150, 153, 154, 157, 161, 166, 438, 846, 847, 867, 896, 931, 932, 1001, 1058, 1156], "contact": [150, 1163], "ssl": [150, 161, 322, 1136], "certif": [150, 161, 164, 211, 1136], "070": [150, 667], "fortgeschritten": [150, 361, 1158], "700": [150, 229, 620, 728, 923], "lf": [150, 213, 505, 1058], "descr": [150, 234, 310], "050": [150, 667, 980, 981], "080": [150, 647, 667], "020": [150, 229, 270, 647, 667, 976, 977, 980, 981], "060": [150, 151, 190, 350, 667], "_hidden": 150, "010": [150, 316, 667, 869, 973, 974, 976, 977, 980, 981], "190": [150, 187, 204, 213, 226, 229, 234, 236, 239, 242, 246, 249, 252, 255, 264, 267, 274, 284, 288, 294, 306, 310, 322], "propos": [150, 435, 513], "030": [150, 667, 677, 727, 976, 977, 980, 981], "040": [150, 316, 667, 976, 977, 980, 981], "central": [151, 183, 216, 305, 308, 363, 407, 467, 761, 1001, 1046, 1058, 1164], "rstjinja": 151, "105": [151, 173, 187, 197, 202, 204, 210, 223, 226, 229, 234, 236, 242, 246, 249, 252, 255, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322, 337, 342, 347, 972], "110": [151, 158, 173, 187, 197, 204, 210, 219, 223, 226, 229, 234, 236, 242, 246, 249, 252, 264, 267, 271, 274, 284, 288, 294, 306, 310, 316, 322, 337, 507, 508, 667, 869, 976, 977], "cxx_class_templ": [151, 567, 763], "cxx_dynamic_memori": [151, 567, 763], "cxx_global_initi": [151, 567, 763], "cxx_inheritance_virtu": [151, 567, 763], "cxx_ownership_raii": [151, 567, 763], "cxx_stl_container_intro": [151, 567, 763], "cxx_templates_vs_interfac": [151, 567, 763], "maj": [151, 767], "min": [151, 267, 745, 767, 1113], "cdev": [151, 766, 767, 769, 773, 774, 779], "fop": [151, 767, 774], "devtmpf": [151, 766, 767, 812], "dynam": [151, 181, 189, 190, 223, 229, 239, 240, 242, 285, 360, 424, 428, 437, 441, 446, 447, 457, 488, 525, 556, 565, 567, 574, 639, 641, 644, 645, 664, 669, 678, 707, 731, 747, 748, 749, 760, 762, 763, 767, 772, 777, 780, 782, 787, 791, 801, 805, 807, 812, 814, 819, 825, 828, 831, 836, 847, 906, 955, 957, 966, 984, 985, 1024, 1038, 1059, 1108, 1162, 1166], "sysprog_ev": 151, "sysprog_ipc": 151, "sysprog_sign": 151, "unittest_gtest_bas": [151, 763, 1146], "unittest_gtest_fixtur": [151, 763, 1146], "brows": [151, 153, 169, 849, 915], "blender": 151, "corda": 151, "figclass": 151, "homebrain": [151, 272, 284, 892, 893], "literalinclud": 151, "within": [151, 156, 232, 242, 288, 360, 516, 517, 521, 526, 571, 642, 705, 774, 907, 1019, 1036, 1048, 1132], "045": [151, 270, 316], "tex": 151, "055": 151, "056": 151, "910": [151, 229, 892], "glt": 151, "virtmem": 151, "fart": 151, "ungern": 151, "lost": [151, 161, 226, 232, 436, 545, 667, 726, 923, 957, 960, 977, 1019, 1141, 1142, 1148], "he": [151, 155, 169, 177, 186, 190, 193, 206, 211, 214, 216, 237, 240, 263, 282, 283, 287, 304, 309, 680, 682, 717, 720, 925, 958, 971, 982, 1024, 1052, 1108, 1134], "friend": [153, 154, 201, 222, 258, 259, 261, 270, 281, 318, 319, 445, 508, 585, 740, 741, 762, 763, 781, 802, 907, 1150], "alia": [153, 158, 206, 232, 421, 424, 428, 437, 441, 446, 447, 455, 669, 707, 760, 762, 763, 870, 871, 998], "rm": [153, 155, 159, 160, 194, 196, 342, 347, 917, 927, 1143], "rf": [153, 155, 870, 880, 1143], "variat": [153, 729, 815, 852], "thereof": [153, 270, 278, 472, 589, 1024], "happili": [153, 154, 232, 435, 584], "stage3": 153, "decad": [153, 161, 178, 810, 914, 916, 927, 1006, 1164], "busybox": [153, 154], "initramf": [153, 835], "resid": [153, 156], "flash": [153, 156, 161, 445, 848, 907, 968], "correct": [113, 153, 161, 165, 193, 213, 215, 226, 342, 388, 425, 429, 430, 437, 440, 441, 446, 447, 449, 477, 545, 577, 642, 644, 645, 677, 722, 725, 733, 763, 853, 857, 858, 882, 914, 915, 916, 969, 1011, 1019, 1113, 1136], "eras": [153, 504, 562, 623, 728, 757, 867], "hit": [153, 155, 156, 175, 178, 216, 761, 870, 899, 902, 1136], "sole": 153, "liter": [153, 176, 192, 197, 204, 214, 222, 223, 227, 234, 239, 242, 246, 249, 258, 259, 267, 274, 288, 306, 310, 316, 318, 322, 334, 338, 342, 369, 377, 384, 433, 488, 503, 523, 667, 680, 810, 982, 1039, 1052, 1056], "told": [153, 156, 455, 494, 907], "reboot": [153, 155, 172, 810, 871, 914, 915, 916], "fatal": [153, 181, 453, 463, 810, 1149], "saw": [153, 156, 186, 215, 353, 390, 571, 940, 942], "115200": 153, "8n1": 153, "remaind": [153, 154, 157, 159, 182, 186, 270, 788, 810, 907, 915, 986], "recov": [153, 173], "fauxpa": 153, "explan": [153, 156, 182, 186, 193, 216, 247, 307, 342, 443, 464, 545, 745, 810, 841, 907, 915, 942, 972, 977, 1111, 1114, 1143], "annot": [153, 214, 263, 303, 444, 568, 1108], "beagl": 153, "omap": 153, "rom": 153, "stage": [153, 169, 215, 1115], "processor": [153, 154, 213, 214, 227, 383, 427, 620, 731, 810, 815, 952, 969, 984], "sram": 153, "dram": 153, "latter": [153, 156, 968, 1008, 1048, 1115], "abil": [153, 667], "press": [153, 790, 827, 870, 907], "wrote": [153, 156, 350, 1161], "ones": [153, 169, 176, 178, 242, 280, 288, 371, 439, 915, 916, 1041, 1125], "revis": [153, 157, 160, 257, 568, 666, 1161], "slightli": [153, 165, 186, 215, 232, 233, 545, 1036], "season": 153, "c4": [153, 164], "valuabl": [153, 443, 837, 838, 1000, 1002, 1008], "c3": [153, 157, 164], "angstrom": 153, "mlo": 153, "ift": 153, "fdisk": [153, 1156], "obvoiusli": 153, "fat32": [153, 810], "fat16": 153, "partit": [153, 154, 155, 242, 288, 810], "mount": [153, 155, 270, 348, 766, 810, 841, 950, 977, 978, 987, 996, 998], "sector": [153, 226, 1065], "intend": [153, 159, 160, 161, 171, 206, 223, 229, 239, 242, 454, 783, 915, 942, 943, 1063], "slot": [153, 946, 1027], "partli": [153, 155, 431], "meaning": [153, 161, 792], "scr": 153, "omap3": 153, "mmc1": 153, "arch": [153, 157, 790, 810, 811, 914], "mach": [153, 215, 220, 236], "omap2": 153, "omap3beagl": 153, "Near": 153, "offset": [153, 761, 781, 939, 1001], "128k": 153, "0x80000": 153, "byte": [153, 156, 169, 171, 173, 223, 229, 239, 242, 249, 252, 267, 288, 294, 310, 316, 322, 327, 342, 365, 373, 383, 384, 415, 418, 427, 430, 436, 440, 474, 569, 574, 577, 582, 589, 602, 726, 761, 824, 841, 847, 870, 901, 908, 914, 931, 932, 933, 936, 938, 940, 941, 942, 943, 966, 969, 974, 977, 981, 1033, 1039, 1044, 1058, 1121], "reli": [153, 186, 716, 820, 1039], "ecc": [153, 157], "nandecc": 153, "hw": 153, "80000": 153, "0x0": [153, 914], "0x60000": 153, "unlik": [153, 206, 257, 731, 738, 907, 1047, 1126, 1166], "intermedi": [153, 174, 472, 984, 1033], "nevertheless": [153, 154, 161, 273, 276, 810], "0x20000": 153, "fatload": 153, "80200000": 153, "20392": 153, "131072": [153, 768], "40000": 153, "0x40000": 153, "60000": 153, "incarn": [153, 161, 409, 715], "choic": [153, 154, 155, 178, 214, 227, 246, 439, 449, 459, 524, 572, 641, 726, 914, 968, 996, 1124], "finger": [153, 164, 439, 849, 907], "sw": [153, 522], "0x1e0000": 153, "1e0000": 153, "0x240000": 153, "275928": 153, "1966080": 153, "prompt": [153, 161, 164, 174, 206, 217, 245, 254, 842, 870, 872, 923, 1033, 1034, 1070, 1074, 1087, 1093, 1143], "280000": 153, "400000": [153, 915, 1113], "month": [154, 216, 226, 274, 278, 384], "met": [154, 431, 916], "microcontrol": [154, 400, 907, 915, 968], "clue": 154, "minim": [154, 156, 165, 174, 433, 439, 592, 892, 996, 1007], "vxwork": 154, "ce": [154, 164, 998], "quit": [154, 156, 159, 281, 410, 425, 427, 645, 660, 811, 870, 871, 902, 907, 915, 958, 981, 996], "blob": [154, 270, 281, 362, 545, 810], "presenc": [154, 156, 461, 1166], "probabl": [154, 160, 186, 246, 276, 334, 460, 465, 570, 675, 810, 822, 870, 916, 968, 1044, 1058, 1121, 1124], "sooner": [154, 169, 435, 813], "chose": [154, 165, 232, 661, 894, 927, 996], "opinion": [154, 165, 186, 240, 761, 849, 1016], "unless": [154, 236, 242, 246, 288, 639, 672, 836, 892, 953, 1039, 1058, 1129], "hire": 154, "cheap": [154, 156, 452, 582, 675, 680, 716, 717, 815, 1161], "misl": 154, "posix": [154, 156, 179, 733, 740, 742, 762, 763, 847, 906, 936, 947, 953, 957, 959, 967, 975, 1058, 1175, 1176], "tell": [154, 155, 156, 159, 160, 161, 169, 183, 230, 432, 603, 836, 916, 984], "pitfal": [154, 238, 258, 259, 261, 318, 319, 342, 603, 682, 707, 708, 709, 727, 762, 763, 907, 1161], "seen": [154, 156, 161, 174, 187, 215, 375, 394, 432, 467, 477, 781, 806, 835, 955, 1115, 1119, 1153], "didn": [154, 155, 156, 165, 186, 190, 206, 216, 240, 309, 810, 889, 941, 1058, 1060, 1108, 1112], "rtoss": 154, "commonli": [154, 223, 246, 273, 276, 481, 742, 761, 796, 830, 872, 936, 984, 1133], "tear": [154, 259, 474, 523, 524, 525, 526, 587, 726, 779, 984, 1148], "notif": [154, 159, 178, 739, 911, 982], "dread": 154, "segment": [154, 156, 407, 516, 582, 705, 725, 968, 978], "fault": [154, 156, 355, 356, 407, 582, 725, 968], "arriv": [154, 802, 827, 966, 981], "handler": [154, 223, 229, 239, 242, 281, 288, 301, 443, 790, 792, 820, 952, 968, 980, 983], "pai": [154, 278, 438, 461, 841], "attent": [154, 210, 226, 234, 373, 394, 396, 425, 444, 454, 604, 609, 678, 709, 712, 802, 970, 1005, 1131, 1153], "safe": [154, 223, 229, 230, 239, 242, 252, 435, 675, 717, 719, 727, 741, 923, 928, 952, 955, 960, 983], "pthread_": 154, "trick": [154, 211, 221, 224, 227, 251, 263, 287, 293, 410, 1108], "asynchron": [154, 223, 229, 239, 242, 309, 328, 931, 948, 951, 981, 982], "sigwait": [154, 981], "sigwaitinfo": 154, "sigtimedwait": 154, "caught": [154, 223, 229, 239, 242, 442, 592], "synchron": [154, 226, 232, 242, 249, 252, 267, 274, 282, 283, 284, 288, 304, 305, 308, 310, 316, 322, 734, 740, 762, 763, 901, 906, 931, 947, 953, 954, 961, 967, 968, 978, 980, 983, 1166], "signalfd": [154, 936, 974, 1175, 1176], "Its": [154, 156, 159, 523, 899, 969], "emb": 154, "among": [154, 178, 186, 223, 229, 239, 242, 432, 726, 855, 914, 936, 942, 966, 982, 1032, 1116, 1117, 1141, 1164], "epol": [154, 950, 974, 978, 1176, 1178], "err": [154, 193, 213, 278, 319, 526, 623, 667, 669, 707, 715, 727, 760, 762, 763, 774, 804, 806, 841, 908, 910, 914, 1027, 1130], "naiv": [154, 174, 229, 232, 296, 312, 427, 460, 469, 561, 563, 577, 644, 725, 759, 818, 952, 972, 983, 1013, 1014, 1115, 1120, 1153, 1163], "intra": 154, "oss": 154, "synchronis": [154, 952, 1177], "pthread_mutex_init": [154, 739, 955], "critical_sect": 154, "closest": [154, 675], "pendant": [154, 562, 769], "expir": [154, 820, 934, 966, 968, 982], "sometim": [154, 169, 246, 399, 415, 439, 576, 666, 841, 848, 941, 953, 998, 1004, 1035, 1141], "setitim": 154, "timer_cr": [154, 968], "drawback": [154, 409, 426, 431, 436, 480, 603, 923], "unfortun": [154, 155, 178, 215, 494, 907, 1126], "straightforward": [154, 233, 689, 727, 778, 1010, 1027, 1045, 1113], "nanosleep": [154, 741, 968], "timerfd_cr": [154, 934, 936, 1175, 1176], "conjunct": 154, "emul": [154, 259, 261, 279, 427, 436, 442], "stupid": [154, 156, 213, 229, 232, 234, 384, 409, 415, 433, 439, 449, 675, 730, 827, 889, 931, 1012, 1058], "screw": [154, 629], "otherwis": [154, 155, 240, 242, 246, 283, 288, 316, 333, 388, 399, 425, 435, 585, 623, 680, 709, 716, 731, 737, 781, 794, 802, 810, 818, 837, 838, 923, 952, 957, 963, 978, 1007, 1036, 1039, 1056, 1058, 1077, 1088, 1130, 1153], "millisecond": [154, 223, 229, 239, 242, 728, 742, 818, 915], "etern": 154, "nowadai": [154, 156, 158, 159, 215, 282, 283, 304, 365, 383, 785, 820, 845, 848, 936, 982, 1121], "imagin": [113, 154, 156, 429, 434, 435, 467, 480, 810, 849, 866, 907, 916, 955, 982], "moder": [154, 161, 221], "tri": [154, 155, 156, 165, 169, 175, 186, 234, 353, 524, 654, 737, 761, 907, 916, 969, 1161], "achiev": [154, 213, 246, 645, 966, 1019], "albeit": [154, 489, 715, 963, 1044, 1161], "lose": [154, 205, 216, 236, 239, 242, 252, 316, 322, 1043], "wealth": 154, "socket": [154, 172, 193, 263, 761, 763, 843, 846, 906, 931, 935, 936, 947, 978, 982, 1136, 1175, 1176, 1178], "uart": [154, 431, 843], "previous": [154, 223, 229, 239, 242, 246, 982, 1161], "regardless": [154, 410, 915], "surpris": [154, 156, 270, 433, 638, 1003, 1027], "alon": [154, 155, 156, 169, 279, 281, 439, 443, 684, 1048, 1115, 1166], "advantag": [154, 431, 582], "consid": [113, 154, 156, 186, 190, 214, 223, 229, 239, 240, 242, 246, 270, 288, 309, 403, 430, 431, 439, 491, 645, 870, 914, 969, 1024, 1032, 1108, 1135, 1136, 1163], "regularli": [154, 436], "buffer": [154, 242, 267, 282, 283, 288, 304, 308, 371, 500, 505, 680, 826, 854, 928, 931, 932, 933, 934, 942, 981, 1058], "ttys0": 154, "stream": [154, 159, 161, 201, 227, 242, 267, 568, 585, 854, 908, 966, 1012, 1133, 1178], "eventfd": [154, 936, 974, 1175, 1176], "complic": [154, 155, 164, 193, 236, 246, 381, 400, 439, 464, 595, 678, 684, 704, 769, 806, 908, 916, 981, 984, 1012, 1124, 1163, 1166], "unregist": [154, 476], "callback": [154, 190, 223, 229, 239, 242, 351, 695, 820, 829, 1124], "comfort": [154, 206, 345, 719, 914, 1133], "excit": 154, "hundr": [154, 156, 161, 264, 267, 936], "panel": 154, "deal": [154, 230, 433, 579, 810, 916, 1037, 1110, 1121, 1161, 1166], "touch": [154, 160, 186, 223, 229, 239, 242, 451, 855, 864, 869, 914, 937, 943, 1166], "stai": [154, 178, 190, 221, 981], "harder": [154, 731, 917], "buggi": [154, 577, 705, 717, 968], "examin": [154, 156, 435, 585, 726, 753, 870, 963], "debugg": [154, 223, 229, 239, 240, 242, 472, 1159, 1174], "gdb": [154, 206, 360, 1159], "remain": [154, 155, 165, 174, 187, 234, 242, 288, 530, 531, 543, 572, 620, 626, 657, 663, 668, 730, 738, 792, 923, 971, 982, 984, 1083, 1086, 1087, 1090, 1098, 1100, 1116, 1150], "spidev": 154, "bluntli": 154, "whether": [154, 174, 242, 246, 267, 278, 288, 374, 438, 529, 574, 607, 761, 806, 915, 1087, 1093, 1136], "deadlin": 154, "howev": [154, 164, 183, 246, 468, 783, 785, 907, 950, 952], "sched_setschedul": [154, 171, 971], "pthread_attr_setschedparam": [154, 971], "runnabl": [154, 808, 969, 970, 971], "prioriti": [154, 171, 242, 802, 808, 810, 812, 847, 969, 970, 978, 1177], "anymor": [154, 160, 165, 178, 215, 232, 451, 455, 584, 678, 680, 689, 713, 726, 727, 731, 845, 914, 957, 968, 970, 1001, 1039, 1041, 1130], "potenti": [154, 452, 582, 689, 737, 927, 1007, 1019, 1064], "harm": [154, 403, 431, 727, 729, 1007], "polici": [154, 159, 171, 322, 451, 467, 641, 645, 788, 969, 970, 1177], "sched_fifo": [154, 970, 971, 1156], "sched_rr": [154, 156, 971, 1156], "robin": [154, 221, 971, 1177], "manner": [154, 409, 810, 914], "troubl": 154, "trigger": [154, 353, 792, 796, 914, 1027, 1117], "certain": [154, 186, 193, 430, 435, 493, 516, 517, 695, 717, 806, 841, 854, 957, 984, 1032], "circumst": [154, 969], "deadlock": [154, 545, 737, 738, 802, 815, 955, 969, 970], "inspect": [154, 156, 223, 229, 239, 242, 260, 269, 280, 290, 305, 763, 840, 906, 927], "deploy": [154, 186, 190, 211, 297, 313, 456, 462, 763, 785, 1108], "uclibc": 154, "investig": 154, "spend": [154, 161, 175, 186, 190, 211, 214, 237, 263, 287, 309, 438, 1108], "browser": [155, 161, 173, 184, 217], "significantli": [155, 981], "decreas": [155, 156, 427, 870, 972], "week": [155, 170, 429], "forth": [155, 440, 841, 914, 927, 1039], "spare": 155, "volum": 155, "undertak": 155, "indirectli": [155, 726], "pocket": 155, "purchas": [155, 246], "corsair": 155, "120": [155, 173, 187, 197, 204, 219, 223, 226, 229, 234, 236, 239, 242, 246, 249, 252, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322, 586, 667, 976, 977], "overhaul": 155, "reserv": [155, 161, 178, 190, 226, 242, 267, 288, 382, 604, 774, 806, 866, 971, 1065], "livecd": 155, "ssd": [155, 438, 932], "vanish": 155, "gone": [155, 176, 226, 695, 727, 790, 813, 871, 960], "nowher": [155, 294, 537], "depart": 155, "unusu": 155, "cope": 155, "bet": 155, "themselv": [155, 409, 449, 489], "aggress": 155, "harddisk": 155, "treatment": [155, 246, 870, 1001], "proud": 155, "120g": 155, "fresher": 155, "plenti": [155, 157, 443], "4g": [155, 156], "shouldn": [155, 667, 810, 1056], "hibern": 155, "fstab": [155, 322], "room": [155, 161, 190, 305, 469, 620, 804, 916, 1121, 1164], "swapon": 155, "sda1": 155, "swapoff": 155, "overal": 155, "mitig": [155, 804], "temporari": [155, 164, 181, 223, 229, 232, 239, 242, 282, 283, 304, 308, 454, 526, 527, 675, 679, 680, 695, 709, 717, 761, 854, 984, 1010, 1091], "perfect": [155, 161, 169, 215, 263, 318, 363, 620, 676, 707, 730, 762, 763, 1010, 1063, 1108, 1139, 1161], "portag": [155, 810, 899], "openoffic": 155, "tmpdir": [155, 280, 309, 451, 526, 761, 1005, 1103, 1105, 1141], "500m": 155, "2g": 155, "6g": 155, "throwawai": 155, "1tb": 155, "sdc1": [155, 841], "mnt": [155, 841, 849, 978], "emerg": 155, "umount": 155, "runnung": 155, "offend": [155, 157, 159, 169, 494, 968], "candid": [155, 174, 215, 439, 684, 704, 717, 1007, 1079], "destin": [155, 390, 457, 562, 603, 678, 926, 933], "app": [155, 159, 968, 1120], "admin": [155, 161, 342, 921, 925], "cron": [155, 853, 1037], "rc": [155, 322, 907], "grep": [155, 159, 165, 194, 196, 206, 260, 269, 290, 291, 763, 829, 834, 840, 845, 847, 852, 854, 866, 897, 900, 903, 906, 914, 916, 917, 953, 963, 968, 1124, 1165, 1167, 1172], "tune": [155, 156, 165, 439, 837, 838, 860, 862, 864, 871, 919, 1036], "exce": [155, 190, 771, 968, 978], "20m": [155, 907, 966], "compresscmd": 155, "bzip2": [155, 165, 194, 196, 835, 836, 998], "compressopt": 155, "compressext": 155, "missingok": 155, "sharedscript": 155, "postrot": 155, "reload": [155, 194], "endscript": 155, "adjac": [155, 349, 726, 781], "sda": [155, 914, 916], "cfq": 155, "noop": [155, 909], "believ": [155, 161, 907, 916, 944], "r5": 155, "menuconfig": [155, 165, 810, 914, 998], "xorg": [155, 159], "emerge_log_dir": 155, "unionf": 155, "fuse": [155, 157, 322, 917, 927], "persist": [155, 171, 379, 383, 391, 461, 871, 915], "held": [156, 298, 301, 360, 768, 802, 815], "compani": [156, 159, 160, 161, 196, 206, 246, 272, 283, 298, 449, 467, 468, 849, 1063, 1110], "z\u00fcrich": [156, 359], "hardcor": 156, "attitud": [156, 161, 280], "began": 156, "dive": [156, 273, 276, 1122], "inevit": [156, 360, 719], "came": [156, 223, 227, 229, 239, 242, 867, 873, 914, 1039, 1091, 1161], "mb": [156, 848], "heap": [156, 422, 474, 574, 577, 629, 709, 726, 771, 796], "128": [156, 159, 173, 187, 197, 204, 210, 213, 219, 223, 226, 229, 232, 234, 236, 239, 242, 246, 249, 252, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322, 438, 582, 914, 942, 999, 1121], "dead": [156, 165, 439], "attempt": [156, 161, 184, 242, 361, 675, 677, 748, 1136], "reject": [156, 169], "proof": [156, 178, 427, 438, 442, 472, 556], "evid": 156, "fortun": [156, 161, 439, 451, 680, 1113], "overnight": [156, 221], "night": [156, 190], "instinct": 156, "defens": [156, 381, 382], "grow": [156, 603, 847, 1000], "growth": [156, 226, 1065], "handi": [156, 1172], "tricki": 156, "alloca": 156, "essenti": [156, 183, 232, 279, 281, 657], "stdio": [156, 215, 227, 364, 365, 367, 371, 373, 375, 406, 432, 452, 578, 584, 847, 867, 914, 932, 933, 934, 936, 937, 940, 941, 942, 943, 955, 968, 974, 977, 981, 982, 984, 987, 996, 1000, 1002, 1058], "unistd": [113, 156, 430, 527, 559, 867, 914, 930, 932, 933, 934, 936, 939, 940, 941, 942, 943, 946, 948, 951, 965, 968, 974, 977, 981], "stdlib": [156, 422, 436, 914, 932, 933, 934, 965, 974, 981], "size_t": [156, 422, 435, 470, 550, 559, 562, 605, 610, 616, 620, 626, 647, 661, 673, 678, 689, 690, 691, 692, 693, 757, 758, 759, 761, 769, 796, 928, 936, 946, 978, 981], "stack_growth": 156, "argc": [156, 416, 474, 513, 914, 940, 941, 942, 943, 948, 951, 965, 981, 1002, 1148, 1153], "mem": [156, 172, 559, 774], "fprintf": [156, 397, 410, 928, 968, 1002], "stderr": [156, 205, 214, 223, 229, 239, 242, 252, 260, 269, 270, 290, 291, 335, 342, 397, 410, 454, 763, 840, 851, 852, 906, 928, 936, 968, 1002, 1037, 1050, 1058, 1167], "atoi": [156, 944], "printf": [156, 165, 215, 227, 364, 365, 367, 373, 375, 379, 405, 406, 409, 410, 432, 452, 578, 584, 847, 867, 930, 934, 974, 981, 982, 984, 996, 1000, 1002, 1047, 1053], "getpid": [156, 981], "memset": [156, 933, 968, 977, 981], "24299": 156, "vsz": 156, "rss": 156, "3944": [156, 229], "986": [156, 226, 229, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322, 901], "188": [156, 187, 204, 213, 226, 229, 234, 236, 239, 242, 246, 249, 264, 267, 274, 284, 288, 294, 306, 310, 322], "320": [156, 229, 239, 242, 267, 274, 288, 294, 306, 322], "exact": [156, 206, 246, 339, 403, 714, 731, 783, 785, 1136], "glibc": [156, 790, 996, 998, 999, 1156], "presum": 156, "assum": [156, 242, 246, 288, 433, 580, 741, 788, 870, 914, 916, 927, 999, 1068, 1143], "writabl": [156, 433, 855, 870, 942], "eater": [156, 972], "1k": 156, "furthermor": 156, "188k": 156, "anyth": [156, 160, 161, 186, 213, 229, 233, 256, 278, 279, 349, 449, 460, 464, 481, 516, 591, 660, 680, 757, 758, 759, 907, 919, 927, 931, 937, 966, 1000, 1005, 1006, 1007, 1050, 1058, 1113, 1130, 1134], "proce": [156, 164, 243, 276, 348, 526], "million": [156, 192, 467, 645, 810, 1010], "24908": 156, "4800": [156, 229], "1200": [156, 229, 620], "1044": [156, 229], "1376": [156, 229], "grown": [156, 159], "reflect": [156, 810, 969, 999, 1000, 1027], "greedi": 156, "24960": 156, "8mb": 156, "barrier": [156, 425, 726, 741, 794], "ulimit": [156, 847], "8192": [156, 229, 410, 847], "8000000": 156, "25018": 156, "11632": [156, 229], "2908": [156, 229], "7876": [156, 229], "8236": [156, 229], "demand": [156, 159, 176, 276, 433, 810, 861, 863, 1012, 1047], "magic": [156, 158, 322, 416, 451, 695, 769, 810, 1012, 1141], "bother": [156, 927, 931], "pthread_attr_setstacks": 156, "2mb": 156, "rlimit_stack": 156, "pthread_creat": [156, 953, 968], "nthread": 156, "act": [156, 213, 534, 604, 916, 927, 930, 982, 1018], "shut": [156, 778, 810], "sit": [156, 232, 348, 479, 854, 914, 915, 925, 927, 931, 981, 1124], "stack_limit": 156, "thread_func": 156, "arg": [156, 173, 187, 213, 214, 223, 227, 229, 239, 240, 242, 246, 252, 267, 288, 306, 452, 769, 953, 1005, 1009, 1030, 1037, 1060, 1150, 1156], "pthread_attr_t": [156, 953, 971], "attr": [156, 171, 953, 955, 957, 971, 977, 978], "pthread_attr_init": 156, "ld": [156, 322, 458, 462, 553, 571, 644, 788, 810, 837, 838, 855, 868, 892, 974, 984, 985, 996, 1001], "strerror": [156, 229, 928, 937, 968, 981], "p_attr": 156, "pthread_t": [156, 953, 968, 971], "rv": [156, 202, 264, 322], "31524": 156, "825840": 156, "206460": 156, "819936": 156, "1404": [156, 229], "800mb": 156, "writeabl": [156, 866, 889], "worth": [156, 810, 916, 1036, 1107, 1161, 1176], "physic": [113, 156, 159, 194, 201, 282, 283, 304, 308, 440, 645, 794, 846, 915, 934, 938, 968, 969], "eaten": 156, "field": [156, 159, 161, 173, 178, 184, 220, 227, 234, 242, 252, 255, 272, 274, 278, 288, 322, 334, 353, 366, 749, 751, 845, 850, 869, 903, 1054, 1065, 1086, 1115, 1116], "alleg": 156, "wast": [156, 164, 165, 435, 722, 739, 1121], "moment": [156, 190, 435, 467, 469, 663, 712], "771": [156, 229, 316], "766604": 156, "aha": [156, 176, 187, 327, 773, 790, 915, 1121, 1148], "hasn": [156, 159, 160, 169, 804, 827, 1038], "effect": [156, 160, 181, 343, 344, 379, 429, 439, 491, 638, 765, 794, 866, 871, 914, 926, 927, 969, 983, 1008, 1020, 1041, 1087, 1115, 1135, 1143], "4096": [156, 173, 229, 761, 837, 838, 907, 914, 915, 916, 927, 950, 977], "1026": [156, 229], "invalid": [156, 197, 204, 234, 239, 240, 242, 246, 249, 267, 274, 281, 288, 306, 310, 316, 322, 338, 353, 436, 494, 505, 508, 562, 577, 660, 661, 662, 675, 678, 684, 725, 727, 741, 768, 957, 1060], "insist": [156, 186, 584, 1150], "pthread_stack_min": 156, "16384": [156, 161, 229, 914, 915, 916], "1125": 156, "7840": [156, 229], "1960": [156, 229], "1936": [156, 229], "risk": [156, 467, 907, 925, 970, 1035], "512": [156, 229, 274, 306, 322, 440, 847], "513": [156, 229, 274, 322, 726], "2212": [156, 229], "4210920": 156, "1052730": 156, "4205016": 156, "4576": [156, 229], "misunderstand": [156, 735], "obvious": [156, 157, 159, 165, 177, 365, 429, 433, 460, 489, 553, 579, 585, 623, 638, 639, 667, 678, 712, 716, 721, 761, 808, 810, 823, 846, 847, 853, 867, 915, 916, 926, 942, 943, 970, 982, 984, 1000, 1021, 1024, 1163], "overcommit": 156, "kept": [156, 161, 186, 192, 410, 425, 847, 908, 984, 1012], "plai": [156, 164, 206, 427, 445, 810, 907, 1025, 1028, 1115], "stutter": 156, "4353": 156, "red": [156, 157, 202, 204, 210, 218, 230, 233, 246, 278, 335, 623, 907, 1034, 1124], "chili": 156, "pepper": 156, "overli": [156, 853, 1011], "adob": 156, "riddanc": 156, "8462": [156, 229], "3284640": 156, "821160": 156, "3278736": 156, "3064580": 156, "lie": [156, 717], "constraint": [156, 164, 684, 687, 689, 916], "800": [156, 197, 229, 620, 1068], "4000000": 156, "11338": [156, 229], "900": [156, 229, 620], "12156": [156, 229], "shrink": [156, 603], "inadvert": 156, "3mb": 156, "nois": 156, "henc": [156, 161, 526, 580, 624, 932, 936, 984], "14386": [156, 229], "child_stack": 156, "0x7f5813f22ff0": 156, "clone_vm": 156, "clone_f": 156, "clone_fil": 156, "clone_sigha": 156, "14413": 156, "mmap": [156, 976, 978, 1175], "8392704": 156, "prot_read": [156, 977], "prot_writ": [156, 977], "map_priv": [156, 977], "map_anonym": 156, "map_stack": 156, "0x7fd14f9af000": 156, "mprotect": 156, "0x7fd14f1ae000": 156, "prot_non": 156, "placehold": [156, 495, 527, 682, 731, 916], "proc": [156, 226, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322, 773, 790, 792, 794, 810, 811, 936, 953, 977, 981, 1174], "7fd14f1af000": 156, "7fd14f9af000": 156, "00000000": 156, "7fd14f9b0000": 156, "topmost": [156, 1141], "pseudo": [156, 174], "redund": [156, 410, 439], "smap": 156, "7fd14f1ae000": 156, "pss": 156, "shared_clean": 156, "shared_dirti": 156, "private_clean": 156, "private_dirti": 156, "referenc": [156, 174, 197, 305, 308, 466, 584, 726, 727, 728, 944, 1150], "anonym": [156, 469, 783, 977], "anonhugepag": 156, "kernelpages": 156, "mmupages": 156, "miss": [156, 175, 182, 184, 186, 202, 229, 234, 239, 246, 305, 308, 342, 399, 444, 445, 453, 455, 463, 525, 556, 577, 668, 704, 785, 788, 934, 968, 986, 1009], "shallow": [156, 226, 238, 670], "extent": [156, 186, 193, 206, 339, 430, 435, 810, 984, 1032], "8k": [156, 854], "swamp": 156, "panic": [156, 169, 818, 870], "meaningless": 156, "global": [156, 157, 175, 181, 186, 190, 195, 199, 202, 215, 223, 226, 229, 232, 233, 239, 242, 245, 256, 259, 267, 279, 282, 284, 288, 293, 297, 304, 308, 309, 313, 314, 315, 320, 321, 326, 337, 342, 388, 405, 411, 417, 421, 424, 428, 432, 435, 437, 441, 442, 446, 447, 455, 456, 461, 474, 480, 489, 523, 524, 525, 526, 567, 574, 587, 669, 707, 710, 725, 726, 736, 760, 762, 763, 779, 916, 952, 955, 959, 960, 962, 984, 1005, 1008, 1016, 1018, 1051, 1065, 1108, 1136, 1144, 1148], "dig": [156, 158], "thorough": [156, 165, 1031, 1115, 1134, 1176], "counter": [156, 239, 367, 373, 374, 383, 439, 444, 445, 569, 678, 977], "delai": [156, 223, 229, 239, 242, 915], "substanti": 156, "overcom": [156, 305, 342, 429], "beforehand": 156, "mlock": [156, 1175], "mlockal": [156, 1175], "contradictori": 156, "lengthi": 156, "felt": 156, "lucki": [156, 577], "agre": [156, 186, 190, 348, 477, 969, 1114], "glad": 156, "outdat": [157, 165, 810, 1136], "halfwai": 157, "procedur": [157, 165, 375, 719, 907, 1065], "thunderbolt": 157, "hdmi": 157, "unplug": 157, "oop": [157, 1160], "feb": [157, 202, 204, 206, 339, 384, 892, 950, 996], "derefer": [157, 582], "0000000000000080": 157, "supervisor": 157, "error_cod": 157, "0x0000": 157, "pgd": 157, "p4d": 157, "0000": [157, 242, 288, 916], "smp": [157, 206, 213, 339], "pti": 157, "281": [157, 226, 229, 234, 236, 239, 242, 246, 249, 267, 274, 288, 294, 306, 316, 322], "comm": 157, "kworker": 157, "taint": 157, "fc31": 157, "asustek": 157, "zenbook": 157, "ux391ua": 157, "bio": 157, "204": [157, 187, 213, 226, 229, 234, 236, 239, 242, 246, 249, 252, 264, 267, 274, 288, 294, 306, 310, 316, 322, 474], "workqueu": [157, 763, 787, 812, 825, 828, 906], "ucsi_connector_chang": 157, "typec_ucsi": 157, "0010": 157, "ucsi_displayport_remove_partn": 157, "0xa": 157, "0x20": [157, 800], "c7": [157, 164, 1136], "83": [157, 164, 173, 187, 197, 202, 204, 210, 213, 219, 223, 226, 229, 234, 236, 239, 242, 246, 249, 252, 255, 264, 267, 271, 274, 284, 288, 294, 306, 310, 316, 322, 337, 761, 811, 1112, 1113], "5b": [157, 164], "e9": [157, 164], "6d": [157, 164, 366, 367], "f3": [157, 164], "3d": [157, 164, 175], "fb": [157, 164], "2e": [157, 164, 671], "0f": [157, 164], "1f": [157, 164], "84": [157, 164, 173, 187, 197, 202, 204, 210, 213, 219, 223, 226, 229, 234, 236, 239, 242, 246, 249, 252, 255, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322, 337, 342, 347, 1112, 1113], "90": [157, 164, 173, 197, 202, 204, 210, 213, 219, 226, 229, 234, 236, 242, 246, 249, 252, 255, 264, 267, 271, 274, 284, 288, 294, 306, 310, 316, 322, 337, 451, 1112, 1113, 1141], "85": [157, 164, 173, 187, 197, 202, 204, 210, 213, 219, 226, 229, 234, 236, 242, 246, 249, 252, 255, 264, 267, 271, 274, 284, 288, 294, 306, 310, 316, 322, 337, 985, 986, 1112, 1113, 1148], "ff": [157, 164, 360, 750, 916], "8b": 157, "78": [157, 164, 187, 197, 202, 204, 210, 213, 219, 226, 229, 234, 236, 242, 246, 249, 255, 264, 267, 271, 274, 284, 288, 294, 306, 310, 316, 322, 337, 523, 1112, 1113], "c6": 157, "rsp": [157, 226, 1065], "0018": 157, "ffff9daa002d3df8": 157, "eflag": 157, "00010202": 157, "rax": 157, "0000000000000008": 157, "rbx": 157, "ffff901f4ce35710": 157, "rcx": 157, "0000000000003c7d": 157, "rdx": 157, "0000000000003c7c": 157, "rsi": [157, 870], "0000000000000001": 157, "rdi": 157, "rbp": 157, "0000000000000000": [157, 1002], "r08": 157, "ffffffffbc7dbe60": 157, "r09": 157, "ffff9daa002d3cf0": 157, "r10": 157, "ffff901f54951a18": 157, "r11": 157, "ffff901f56a68a78": 157, "r12": 157, "r13": 157, "r14": 157, "ffff901f4ce35860": 157, "r15": 157, "ffff901f4ce355d8": 157, "ffff901f56a00000": 157, "knlg": 157, "cr0": 157, "0000000080050033": 157, "cr2": 157, "cr3": 157, "000000028fbbc003": 157, "cr4": 157, "00000000003606f0": 157, "trace": [157, 176, 223, 229, 239, 242, 454, 800], "ucsi_unregister_altmod": 157, "0x77": 157, "0x90": [157, 800], "ucsi_unregister_partn": 157, "0x13": 157, "0x30": [157, 391], "0x247": 157, "0x340": 157, "process_one_work": 157, "0x1b5": 157, "0x360": 157, "worker_thread": 157, "0x50": 157, "0x3c0": 157, "kthread": 157, "0xf9": 157, "0x130": 157, "kthread_park": 157, "ret_from_fork": 157, "0x35": 157, "0x40": [157, 915], "cdc_ether": 157, "usbnet": 157, "r8152": 157, "mii": 157, "rc_cec": 157, "typec_displayport": 157, "uinput": 157, "rfcomm": 157, "ccm": 157, "xt_checksum": 157, "xt_masquerad": 157, "nf_nat_tftp": 157, "nf_conntrack_tftp": 157, "tun": [157, 162, 177, 181, 197, 204, 243, 1158, 1159, 1160], "bridg": 157, "stp": 157, "llc": 157, "nf_conntrack_netbios_n": 157, "nf_conntrack_broadcast": 157, "xt_ct": 157, "ip6t_reject": 157, "nf_reject_ipv6": 157, "ip6t_rpfilt": 157, "ipt_reject": 157, "nf_reject_ipv4": 157, "xt_conntrack": 157, "ebtable_nat": 157, "ebtable_brout": 157, "ip6table_nat": 157, "ip6table_mangl": 157, "ip6table_raw": 157, "ip6table_secur": 157, "iptable_nat": 157, "nf_nat": 157, "iptable_mangl": 157, "iptable_raw": 157, "iptable_secur": 157, "nf_conntrack": 157, "nf_defrag_ipv6": 157, "nf_defrag_ipv4": 157, "libcrc32c": 157, "ip_set": 157, "nfnetlink": 157, "ebtable_filt": 157, "ebtabl": 157, "ip6table_filt": 157, "ip6_tabl": 157, "iptable_filt": 157, "cmac": 157, "bnep": 157, "sunrpc": 157, "vfat": [157, 810, 841], "snd_hda_codec_hdmi": 157, "snd_soc_skl": 157, "snd_soc_sst_ipc": 157, "snd_soc_sst_dsp": 157, "snd_hda_ext_cor": 157, "x86_pkg_temp_therm": 157, "intel_powerclamp": 157, "snd_soc_acpi_intel_match": 157, "coretemp": 157, "snd_soc_acpi": 157, "kvm_intel": 157, "snd_soc_cor": 157, "snd_hda_codec_realtek": 157, "snd_hda_codec_gener": 157, "snd_compress": 157, "ledtrig_audio": 157, "ac97_bu": 157, "snd_pcm_dmaengin": 157, "iwlmvm": 157, "snd_hda_intel": 157, "snd_intel_dspcfg": 157, "irqbypass": 157, "snd_hda_codec": 157, "uvcvideo": 157, "mac80211": 157, "btusb": 157, "itco_wdt": 157, "btrtl": 157, "crct10dif_pclmul": 157, "videobuf2_vmalloc": 157, "itco_vendor_support": 157, "videobuf2_memop": 157, "mei_hdcp": 157, "btbcm": 157, "btintel": 157, "crc32_pclmul": 157, "intel_rapl_msr": 157, "snd_hda_cor": 157, "videobuf2_v4l2": 157, "libarc4": 157, "ghash_clmulni_intel": 157, "videobuf2_common": 157, "snd_hwdep": 157, "intel_cst": 157, "bluetooth": [157, 322, 1165, 1178], "snd_seq": 157, "asus_nb_wmi": 157, "iwlwifi": 157, "videodev": 157, "snd_seq_devic": 157, "intel_uncor": 157, "asus_wmi": 157, "snd_pcm": 157, "intel_rapl_perf": 157, "cdc_acm": 157, "sparse_keymap": 157, "wmi_bmof": 157, "ecdh_gener": 157, "cfg80211": 157, "intel_wmi_thunderbolt": 157, "pcspkr": 157, "snd_timer": 157, "snd": 157, "i2c_i801": 157, "soundcor": 157, "joydev": 157, "idma64": 157, "intel_xhci_usb_role_switch": 157, "mei_m": 157, "ucsi_acpi": 157, "processor_thermal_devic": 157, "intel_rapl_common": 157, "mei": [157, 229], "intel_soc_dts_iosf": 157, "intel_pch_therm": 157, "typec": 157, "int3403_therm": 157, "int340x_thermal_zon": 157, "int3400_therm": 157, "acpi_thermal_rel": 157, "acpi_pad": 157, "binfmt_misc": 157, "ip_tabl": 157, "rfkill": 157, "i915": 157, "i2c_algo_bit": 157, "drm_kms_helper": 157, "hid_multitouch": 157, "drm": 157, "nvme": 157, "crc32c_intel": 157, "nvme_cor": 157, "serio_raw": 157, "wmi": 157, "i2c_hid": 157, "76d248e576fee192": 157, "deferenc": 157, "dp": 157, "ness": [157, 193, 278], "ucsi": 157, "displayport": 157, "linu": [157, 802, 810], "typec_altmod": 157, "alt": [157, 187, 870, 898, 1158, 1165, 1172], "ucsi_dp": 157, "typec_altmode_get_drvdata": 157, "271": [157, 226, 229, 234, 236, 242, 267, 274, 288, 294, 316, 322], "bugzilla": 157, "1785972": 157, "john": [157, 439], "stebbin": 157, "roundtrip": 157, "wiki": [157, 171, 282, 283, 304, 308, 783, 810], "explod": [157, 785, 1047], "jwboyer": [157, 783], "f31": 157, "quiet": [157, 190, 1136], "4382f76bc8ef9fce5e7e96d4cdb0c073564ad249": 157, "josh": 157, "boyer": 157, "fedoraproject": [157, 783], "mon": 157, "rpmdevtool": [157, 783], "koji": 157, "rpmdev": 157, "setuptre": 157, "spec": [157, 242, 783, 806], "srpm": 157, "unam": [157, 783, 788, 806, 810, 811], "correspond": [157, 169, 242, 364, 407, 915, 992, 1000, 1039, 1075, 1110, 1136], "kenrel": 157, "ivh": [157, 159], "crypto": [157, 322], "ccp": 157, "sha": 157, "drop": [157, 169, 305, 470, 489, 498, 719, 726, 728, 829, 977, 982], "zips": 157, "ko": [157, 779, 788, 810], "endif": [157, 407, 409, 410, 452, 454, 459, 460, 553, 562, 571, 577, 579, 580, 620, 678, 679, 725, 741, 984, 1000, 1002, 1150], "buildid": [157, 783, 985], "primary_target": 157, "825": [157, 229], "asoc": 157, "patch601": 157, "patch999": 157, "roedel": [157, 524, 527, 986, 999, 1095, 1143], "patienc": [157, 186, 1032], "oldpackag": 157, "uefi": [157, 164], "market": [158, 161, 226, 270, 278, 1065], "intent": [158, 160, 164, 165, 472, 727, 731, 783, 940, 942, 943], "remark": 158, "organ": [158, 183, 405, 440, 451, 479, 620, 846, 932, 999], "numer": [158, 175, 191, 193, 195, 229, 239, 242, 246, 278, 288, 454, 626, 927], "enforc": [158, 216, 427, 449, 584, 769, 916], "cname": [158, 160], "propag": [158, 381, 439, 455, 460, 463, 464, 645, 695, 917], "1100": [158, 223, 229, 246, 620], "3600": [158, 229], "185": [158, 187, 204, 226, 229, 234, 236, 242, 246, 249, 252, 255, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322], "199": [158, 187, 204, 226, 229, 234, 236, 239, 242, 246, 249, 267, 274, 284, 288, 294, 306, 310, 316, 322, 810, 1065], "109": [158, 173, 187, 197, 202, 204, 210, 223, 226, 229, 234, 236, 242, 246, 249, 252, 264, 267, 271, 274, 284, 288, 294, 306, 310, 316, 322, 337, 342, 347], "153": [158, 173, 187, 197, 204, 213, 226, 229, 234, 236, 242, 246, 249, 252, 255, 264, 267, 284, 288, 294, 306, 310, 316, 322, 349], "111": [158, 173, 175, 187, 197, 204, 210, 226, 229, 234, 236, 239, 242, 246, 249, 252, 264, 267, 271, 274, 284, 288, 294, 306, 310, 316, 322, 337], "108": [158, 173, 187, 197, 204, 210, 213, 219, 226, 229, 234, 236, 239, 242, 246, 249, 252, 264, 267, 271, 274, 284, 288, 294, 306, 310, 316, 322, 337], "strip": [158, 177, 186, 220, 222, 223, 226, 234, 238, 239, 244, 246, 252, 255, 267, 274, 284, 288, 294, 310, 316, 322, 342, 351, 984, 985, 987, 996, 1015, 1088, 1133], "breviti": 158, "fqdn": 158, "qualifi": [158, 433, 579, 580, 717], "surf": 158, "consequenti": [158, 161, 164, 192, 841, 914, 1004, 1025, 1150], "microsoft team": 159, "chrome": 159, "google chrom": 159, "confer": [159, 161, 190, 214, 237, 263, 309, 748], "virtual classroom": 159, "classroom": [159, 161], "remote train": 159, "dr": [159, 999], "chromium": [159, 194, 322], "frequent": [159, 161, 169, 186, 246, 895, 915, 1032, 1053], "face": [159, 161, 186, 236, 246, 733], "travel": [159, 870], "corona": [159, 161, 186], "viru": [159, 161], "conferenc": 159, "dramat": 159, "march": 159, "spent": [159, 438, 742, 1006, 1114], "weston": 159, "invest": [159, 161, 165, 246], "smooth": 159, "layer": [159, 259, 261, 279, 769, 841, 915, 927, 937, 946], "cornercas": 159, "hover": 159, "sharer": 159, "gdm": [159, 226, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322, 845, 901], "daemon": [159, 206, 226, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322, 445, 845, 848, 895, 896, 899, 901, 917, 925, 930, 932, 962, 1018], "uncom": [159, 494, 495, 689, 914], "waylanden": 159, "defaultsess": 159, "deb": [159, 291], "5153": 159, "thank": [159, 240, 267, 681, 717, 792, 952, 1113], "marjan": 159, "javorka": 159, "fashion": 159, "efl": [159, 829, 917, 968], "61762": 159, "1670": [159, 229], "80": [159, 164, 173, 187, 197, 202, 204, 210, 213, 219, 223, 226, 229, 234, 236, 242, 246, 249, 252, 255, 264, 267, 271, 274, 284, 288, 294, 306, 310, 316, 322, 337, 443, 516, 892, 968, 998, 1010, 1065, 1112, 1113, 1141], "947213": 159, "61764": 159, "98775": 159, "zygot": 159, "sandbox": [159, 186, 190, 240, 254, 272, 1108, 1143, 1144], "61800": 159, "239615": 159, "gpu": 159, "sharedarraybuff": 159, "sparerendererforsiteperprocess": 159, "prefer": [159, 236, 246, 383, 439, 481, 585, 672, 680, 684, 802, 854, 1060], "kaaaaaaaaacaaabaaqaaaaaaaaaaagaaaaaaaaaaaaaiaaaaaaaaaagaaaaaaaaa": 159, "token": [159, 216, 232, 369, 409, 845, 958, 1063, 1158], "4327801531638606376": 159, "61825": 159, "420846": 159, "autoplai": 159, "gestur": 159, "12993561460135093079": 159, "asar": 159, "agent": [159, 923, 1115], "mozilla": [159, 284, 892], "applewebkit": 159, "537": [159, 229, 316, 322], "khtml": 159, "gecko": 159, "microsoftteam": 159, "preview": [159, 244, 297, 313, 456, 763], "3497": 159, "safari": 159, "webview": 159, "preload": 159, "preload_notif": 159, "fff": 159, "eyjjci5jb21wyw55ijoirwxly3ryb24ilcjjci5kdw1wcyi6iiisimnylmvuywjszwqiomzhbhnllcjjci5wcm9kdwn0ijoirwxly3ryb24ilcjjci5zzxnzaw9uijoiiiwiy3iudxjsijoiiiwiy3iudmvyc2lvbii6iny0ljiumtiifq": 159, "raster": 159, "v8_context_snapshot_data": 159, "v8_natives_data": 159, "101": [159, 173, 187, 197, 204, 210, 219, 226, 229, 234, 236, 239, 242, 246, 249, 255, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322, 337, 342, 347, 1043, 1112, 1113], "msteam": 159, "notificationsmanag": 159, "61973": 159, "790018": 159, "432557619363765409": 159, "mainwindow": 159, "62033": 159, "1259666": 159, "5585537623314398260": 159, "pluginhost": 159, "wish": [159, 161, 169, 190, 443, 452, 591, 658, 739, 1031, 1126, 1127, 1143], "insan": [159, 298, 841], "killal": [159, 972, 982], "63500": 159, "298385": 159, "63502": 159, "blood": 159, "pressur": [159, 223], "rise": [159, 517, 792, 950, 951, 968], "wipe": 159, "logout": 159, "pop": [159, 172, 234, 236, 249, 264, 274, 284, 294, 306, 322, 410, 601, 604, 739, 1030, 1055], "morn": [159, 195, 205, 223, 232, 234, 240, 309, 1070], "webassembli": 159, "blow": 159, "water": [159, 278], "tab": [159, 160, 173, 242, 270, 288, 333, 384, 810, 870, 1052, 1077, 1167], "firefox": [159, 322, 445, 953, 982, 1120], "dom": [159, 218], "gave": [159, 161, 174, 186, 912, 1113], "3987": 159, "132": [159, 173, 175, 187, 197, 204, 213, 226, 229, 234, 236, 239, 242, 246, 249, 252, 264, 267, 284, 288, 294, 306, 310, 316, 322], "plagu": 159, "invent": [159, 377, 409, 469, 491, 492, 1163, 1164], "game": [159, 226, 242, 249, 252, 267, 274, 284, 288, 305, 310, 316, 322, 866, 930, 1046], "pornwatch": 159, "teamview": 159, "webpag": 160, "properli": [160, 663, 741, 810, 996], "retrospect": 160, "jekyl": 160, "bend": [160, 521], "companion": [160, 278], "pollut": [160, 410, 433, 439, 472, 668, 986], "distinguish": [160, 578, 731, 842, 996], "handwritten": [160, 258, 259, 261, 318, 319, 577, 677, 707, 708, 709, 725, 762, 763], "remind": 160, "pile": [160, 169, 479, 982], "incomprehens": [160, 240, 641, 748, 1161], "blame": [160, 916], "technic": [160, 161, 183, 319, 464, 468, 568, 623, 667, 1012, 1121, 1153], "nojekyl": 160, "eof": [160, 210, 213, 232, 233, 249, 334, 371, 372, 373, 374, 387, 651, 812, 826, 932, 933, 936, 942, 974, 981, 1034], "doctyp": 160, "constel": 160, "machineri": [160, 282, 283, 304, 308], "eventu": [160, 169, 442, 950, 999], "click": [160, 161], "cri": [160, 730], "haven": [160, 161, 186, 545, 907, 914], "subdomain": 160, "afterthough": 160, "preserv": [160, 171, 192, 249, 427, 837, 838, 872, 926, 1133], "_build": 160, "restor": [160, 169, 176, 223, 229, 239, 242, 783, 982, 1005], "shini": 160, "nervous": 160, "marketinges": [160, 270], "familiar": [160, 186, 242, 344, 345, 734, 915, 1032], "big blue button": 161, "strongli": [161, 223, 229, 239, 242, 273, 276, 319, 525, 623, 669, 707, 760, 762, 763, 1161], "shame": 161, "pursu": 161, "collabor": [161, 171, 178, 183, 190, 263], "moreov": 161, "teach": [161, 186, 360], "trust": [161, 164, 226, 282, 283, 304, 322, 675, 923, 925, 1065, 1136, 1153], "benefit": [161, 273, 276, 279, 281, 433, 1103], "beat": [161, 236, 246, 748, 1107], "talent": [161, 360], "whiteboard": [161, 977], "chat": 161, "breakout": [161, 914], "stabil": [161, 474, 916, 1137], "thousand": [161, 267, 316, 841], "curiou": [161, 1108], "curious": 161, "licens": [161, 267, 461, 766, 1034, 1063], "lgpl": 161, "blindsid": 161, "govern": [161, 796, 936], "html5": 161, "exception": [161, 916], "modern": [161, 165, 167, 170, 178, 181, 186, 193, 215, 237, 455, 729, 763, 770, 772, 777, 780, 787, 791, 801, 812, 814, 819, 825, 828, 831, 906, 984, 1003, 1033, 1108, 1134, 1162, 1164], "heavili": [161, 183, 186, 270, 272, 360, 525, 720, 810, 907, 916, 1032], "webrtc": 161, "pain": [161, 810, 987, 996], "death": [161, 213, 982], "firewal": [161, 194, 925], "busi": [161, 305, 449, 459, 584, 815, 827, 839, 874, 876, 881, 882], "indefinit": [161, 657], "vm": [161, 345], "encrypt": [161, 845, 866, 917, 925, 926, 927, 1086, 1124], "bbb": [161, 173, 234, 252, 322], "provis": 161, "gcp": 161, "expertis": [161, 526], "n1": [161, 187, 246], "accordingli": [161, 194, 513, 523, 526, 556, 914, 916, 1001, 1036, 1039, 1133], "500gb": 161, "10gb": 161, "spars": [161, 236, 246, 587, 589, 806], "mandatori": [161, 916, 1033], "issuanc": 161, "udp": [161, 908, 910, 1176, 1178], "32768": 161, "clickabl": 161, "7443": 161, "755": [161, 229, 342, 855, 1035], "xenial": 161, "220": [161, 187, 202, 213, 223, 226, 229, 234, 236, 242, 246, 249, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322], "hostnam": [161, 322, 1136], "certbot": 161, "greenlight": 161, "letsencrypt": 161, "docker": [161, 165, 322], "bundl": [161, 184, 1120, 1136], "rake": 161, "succesfulli": 161, "screenshot": [161, 184, 342], "tryout": [161, 916], "kid": [161, 206, 224, 328], "layman": 161, "knew": [161, 190, 682, 1001], "reproduc": [161, 164, 280, 436, 916], "thought": [161, 410, 722, 810, 1121], "fred": [161, 908, 1008], "dixon": 161, "leader": 161, "aka": [161, 206, 229, 232, 234, 254, 545, 729], "canva": 161, "bradlei": 161, "schreffler": 161, "upfront": 161, "far": [161, 186, 194, 215, 221, 229, 232, 272, 379, 394, 415, 416, 418, 429, 433, 438, 463, 592, 602, 667, 730, 788, 852, 916, 1010, 1032, 1113, 1161], "exhaust": [161, 966, 969, 1012], "heard": 161, "tast": [161, 369, 585, 641, 667, 710, 730], "era": 161, "budget": [161, 210], "advertis": [161, 720], "viabl": 161, "shout": [161, 709, 712], "loud": [161, 388, 603, 671, 709, 715, 716], "gmunden": [162, 360], "traunse": 162, "hike": [162, 163, 190], "bergsteigen": [162, 163], "climb": [162, 163, 190, 221], "klettern": [162, 163], "outdoor": [162, 163], "donnerstag": 162, "geistigen": 162, "ersch\u00f6pfung": 162, "k\u00f6rperlich": 162, "erfahren": [162, 163, 360, 1159], "dazu": [162, 171, 172, 177, 181, 198, 342, 347, 360, 1157, 1171, 1179], "ausgesucht": [162, 163], "zwar": [162, 1156, 1160, 1172], "lo": [162, 163, 204, 242, 278, 521, 790, 1020], "gmundner": [162, 190], "h\u00fctte": [162, 163, 190], "n\u00e4chsten": 162, "naturfreundesteig": 162, "zusammenfassung": [162, 168], "wunsch": 162, "vollend": 162, "erf\u00fcllt": 162, "unversichert": 162, "unmarkiert": 162, "leicht": [162, 198, 1156, 1171, 1177, 1178], "panik": 162, "geraten": 162, "h\u00e4nde": [162, 163], "braucht": [162, 163], "fingern\u00e4gel": 162, "z\u00e4hne": 162, "mitunt": [162, 163, 1168], "verkoffert": 162, "augen": [162, 249], "offenhalten": 162, "jeder": [162, 1155, 1158, 1159, 1178], "spur": 162, "folgen": [162, 198, 199, 1158, 1171], "fr\u00fcher": [162, 243], "umdrehen": 162, "sackgass": 162, "erweist": 162, "vielleicht": [162, 187, 198, 249, 1160, 1171], "weggehen": 162, "stirnlamp": 162, "mitnehmen": 162, "war": [162, 172, 177, 179, 187, 198, 202, 360, 449, 1156, 1158, 1160, 1171, 1177, 1178], "sch\u00f6nsten": 162, "jemal": 162, "zuletzt": 162, "traumhaften": 162, "gegend": 162, "immer": [162, 163, 177, 181, 187, 189, 202, 274, 1156, 1160, 1167, 1177], "griffweit": 162, "erscheint": 162, "paar": [162, 172, 187, 189, 197, 204, 236, 342, 347, 1156, 1179], "eindr\u00fcck": 162, "m\u00fcder": 162, "abklatsch": 162, "erinnerungen": 162, "hirn": 162, "eingebrannt": 162, "einstieg": [162, 198, 1171], "traunsteinstra\u00df": 162, "hundert": [162, 173, 246], "meter": 162, "s\u00fcdlich": 162, "hoisn": [162, 190], "wirt": [162, 190], "markiert": [162, 163], "wanderweg": [162, 163], "wegweisern": [162, 163], "bergauf": [162, 163], "kupp": 162, "klamm": 162, "einsteigt": 162, "bergab": 162, "touristisch": 162, "erschlossen": 162, "trifft": 162, "familien": 162, "kindern": [162, 1172], "rechter": 162, "felsstock": 162, "adlerhorst": 162, "sieht": [162, 173, 177, 187], "rau": [162, 236], "touristenzon": 162, "rauf": 162, "schart": 162, "durchschnaufen": 162, "einstellen": 162, "gen\u00fcsslich": 162, "h\u00f6henmet": 162, "verspeisen": 162, "steinmanderl": 162, "verfehlen": 162, "erkennbar": [162, 173, 1174], "kamm": 162, "r\u00fcber": 162, "traunsteinfelsen": 162, "erstreckt": [162, 163], "sch\u00f6nste": 162, "teil": [162, 172, 181, 189, 1156, 1158], "meditativ": 162, "wundersch\u00f6n": [162, 163], "steil": 162, "voll": 162, "zecken": 162, "schon": [162, 163, 172, 187, 189, 197, 227, 360, 1158, 1160, 1165, 1172, 1174, 1177], "bl\u00fcht": 162, "rinnen": 162, "leichtest": [162, 173], "dahin": [162, 1156], "wieder": [162, 187, 189, 197, 202, 204, 218, 1158, 1172], "vertun": 162, "manderl": 162, "aufstellen": 162, "nachwelt": 162, "nemesi": 162, "bergverr\u00fcckten": 162, "gleich": [162, 173, 187, 197, 198, 202, 204, 236, 284, 316, 322, 337, 1156, 1171, 1178], "schl\u00fcsselstel": 162, "quert": 162, "latschen": 162, "\u00f6fter": [162, 163], "festhalten": 162, "gel\u00e4nd": 162, "einsam": 162, "bohrhaken": 162, "verrotteten": 162, "schuhband": 162, "festh\u00e4lt": 162, "runterfallen": 162, "glaub": [162, 171, 172], "stell": [162, 187, 218], "umgehen": [162, 1165], "querung": 162, "hierher": 162, "st\u00fcck": 162, "reinzum\u00fcnden": 162, "scheint": [162, 171], "gibt": [162, 163, 168, 171, 173, 174, 177, 187, 198, 199, 210, 236, 337, 1155, 1156, 1157, 1158, 1160, 1165, 1171, 1177], "foto": [162, 872], "mittendrin": 162, "besch\u00e4ftigt": 162, "hose": 162, "kacken": 162, "gesagt": [162, 177, 187, 197, 360, 1156], "manderln": 162, "aufnahmen": 162, "zunehmenden": 162, "sonnenuntergang": 162, "unvergesslich": 162, "nacht": [162, 163], "geworden": 162, "halten": [162, 163], "zumindest": [162, 187, 1158], "hinauf": 162, "stund": [162, 897, 1179], "gekostet": 162, "exklus": [162, 187, 197], "schneck": 162, "j\u00e4gerbrot": 162, "schein": 162, "ausstieg": 162, "hernlersteig": 162, "m\u00fcndet": 162, "gmundnerh\u00fctt": 162, "gem\u00fctlich": [162, 163], "nett": [162, 163, 177, 288, 360, 1165, 1172], "wirtsleut": 162, "h\u00fcttenruh": 162, "ansitzen": 162, "schweinsbraten": 162, "reinkommt": 162, "k\u00fcche": 162, "geputzt": 162, "backerbsen": 162, "morgen": [162, 242, 246], "hochnebel": 162, "blick": [162, 163, 1157], "flugzeug": 162, "gipfel": [162, 163], "dolin": 162, "nebel": 162, "dabei": [162, 173, 177, 213, 360, 1155], "verziehen": 162, "r\u00fcckweg": 162, "hoisnwirt": 162, "miesweg": 162, "karibik": 162, "steiner alpen": 163, "kamni\u0161ke alp": 163, "kamni\u0161ko savinjskih alp": 163, "alten": [163, 1160], "tradit": [163, 226, 229, 435, 450, 586, 588, 589, 591, 611, 852, 916, 1055, 1086, 1175], "bleiburg": [163, 221], "k\u00e4rnten": [163, 360], "umliegenden": 163, "bergen": 163, "interessantesten": 163, "2558m": [163, 221], "steiner": 163, "alpen": 163, "davor": [163, 205], "gekannt": 163, "nun": [163, 181, 187, 210, 217, 242, 628], "gesehen": [163, 187, 193, 227], "steht": [163, 187, 197, 198, 1168, 1171], "fest": 163, "n\u00e4chste": [163, 181], "jahr": [163, 187], "\u00fcberschreitung": 163, "soweit": [163, 1165, 1172], "h\u00f6chst": 163, "interessant": [163, 1157], "steinhaufen": 163, "unge\u00fcbt": 163, "verloren": [163, 202, 205], "h\u00f6henangst": 163, "schauen": [163, 198, 1171], "helm": 163, "schaden": 163, "schottersurf": 163, "kommen": [163, 168, 236, 342, 347, 360, 898], "ihr": [163, 168, 172, 177, 187, 832, 1155, 1157, 1159, 1160, 1165, 1172, 1178], "artikel": [163, 171], "rein": [163, 173, 198, 1171, 1172], "ins": [163, 172, 360, 736, 1156, 1172], "eisenkappel": 163, "seebergsattel": 163, "openstreetmap": 163, "klein": [163, 172, 173, 177, 1156, 1158, 1159], "dorf": 163, "uhren": 163, "stehengeblieben": 163, "scheinen": 163, "parkplatz": 163, "geparkt": 163, "wissend": 163, "hinten": 163, "tal": 163, "beginnt": [163, 197, 1179], "ahnen": 163, "stetig": 163, "verzagen": 163, "eingang": [163, 1156], "kar": 163, "pl\u00f6tzlich": 163, "freundlich": 163, "vorhanden": [163, 1165, 1172], "fr\u00fchst\u00fcck": 163, "lager": [163, 278], "respektvol": 163, "erklimmenden": 163, "zieht": 163, "haltend": 163, "wand": 163, "wiederum": [163, 187], "gilt": [163, 177, 218, 360], "mittlerweil": [163, 1156, 1173], "akzeptiert": 163, "deswegen": [163, 197, 202, 1158], "schliesslich": [163, 1156], "stehend": 163, "denn": [163, 187, 197, 1177, 1179], "hinaufkomm": 163, "passiert": [163, 187, 204], "anf\u00e4ngern": 163, "geschehen": [163, 322], "jung": [163, 360], "izola": 163, "slowenien": 163, "stellten": 163, "ankam": 163, "ob": [163, 171, 197, 1160, 1179], "beantwortet": 163, "adoptivs\u00f6hn": 163, "gewonnen": 163, "nachbarberg": 163, "ko\u010dna": 163, "sichtlich": 163, "spa\u00df": [163, 243, 1174], "abstieg": 163, "erweitert": 163, "rund": 163, "fertig": [163, 197, 214, 242, 322, 688, 695], "empfehl": [163, 1156], "runterzugehen": 163, "raufgekommen": 163, "ostseitigen": 163, "westseitig": 163, "sch\u00f6ner": [163, 187], "langen": 163, "grat": 163, "felst\u00fcrm": 163, "daf\u00fcr": [163, 181, 187, 197, 198, 1156], "anstrengend": 163, "200m": 163, "pulverhangerl": 163, "zur\u00fcck": [163, 187, 199, 1165, 1172], "wohlverdient": 163, "la\u0161ko": 163, "geschmack": 163, "schroff": 163, "selektiv": 163, "jedermann": 163, "kett": 163, "2000m": 163, "umschlossen": 163, "gletschergeformten": 163, "karen": 163, "steilen": 163, "w\u00e4nden": 163, "ost": 163, "richtung": [163, 1167], "schlafm\u00f6glichkeiten": 163, "biwak": 163, "einladung": 163, "\u00fcberquerung": 163, "dringend": 163, "f\u00e4llig": [163, 360], "fu\u00dfnoten": [163, 1155], "belieben": 163, "gummi": 163, "reifen": 163, "fahren": 163, "mehrplatzlag": 163, "reserviert": 163, "h\u00fcttenschl\u00e4fer": 163, "ohrenst\u00f6psel": 163, "f\u00e4lle": 163, "eingetreten": 163, "fassen": [163, 242], "typ": [163, 199, 210, 220, 898, 1120], "geschnarcht": 163, "geschrien": 163, "modules sign": 164, "secure boot": 164, "shim": 164, "dell xps 13": 164, "unresolv": [164, 785, 788, 984], "upset": [164, 720], "tendenc": 164, "vendor": [164, 165, 465, 467, 526, 806, 810, 914, 944], "efi": [164, 322], "implementor": [164, 258, 259, 261, 318, 319, 669, 707, 716, 762, 763, 769, 1141, 1161], "shine": 164, "stuck": 164, "cryptographi": 164, "third": [164, 201, 213, 242, 288, 455, 583, 585, 696, 697, 788, 790, 855, 897, 940], "parti": [164, 169, 473, 585, 781, 788, 936, 977, 1124], "signatur": [164, 210, 242, 246, 267, 288, 571, 667, 714, 730, 731, 978], "openssl": [164, 866], "req": 164, "x509": 164, "newkei": 164, "rsa": [164, 923], "keyout": 164, "xps13": 164, "priv": [164, 804], "outform": 164, "36500": [164, 526], "subj": 164, "passphras": [164, 194, 923], "expiri": 164, "0x2": 164, "97": [164, 173, 187, 197, 202, 204, 210, 213, 226, 229, 234, 236, 239, 242, 246, 249, 255, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322, 337, 342, 347, 443, 1112], "e5": 164, "ef": 164, "88": [164, 173, 187, 197, 202, 204, 210, 213, 215, 219, 226, 229, 234, 236, 239, 242, 246, 249, 252, 255, 264, 267, 271, 274, 284, 288, 294, 306, 310, 316, 322, 337, 342, 347, 445, 1052, 1112, 1113, 1148], "3a": 164, "b3": 164, "9c": 164, "1b": 164, "a4": 164, "d7": 164, "sha256withrsaencrypt": 164, "issuer": [164, 469], "sep": [164, 165, 193, 213, 226, 229, 234, 242, 246, 249, 267, 288, 306, 322, 451, 648, 892, 914, 916, 927, 984], "gmt": 164, "aug": [164, 229, 907, 915], "2121": 164, "subject": [164, 452, 771, 808, 1141], "rsaencrypt": 164, "modulu": [164, 223, 229, 239, 242], "b5": 164, "2d": [164, 216, 585, 1053], "5c": 164, "6f": [164, 322, 972], "b0": 164, "95": [164, 173, 187, 197, 202, 204, 210, 213, 219, 223, 226, 229, 234, 236, 239, 242, 246, 249, 252, 255, 264, 267, 271, 274, 284, 288, 294, 306, 310, 316, 322, 337, 1112, 1113], "f6": 164, "9e": 164, "9d": 164, "0d": 164, "bc": [164, 790, 914], "f5": 164, "6e": 164, "fe": [164, 451], "94": [164, 173, 197, 202, 204, 210, 213, 219, 226, 229, 234, 236, 242, 246, 249, 252, 255, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322, 337, 494, 495, 1112], "2b": [164, 916], "e6": 164, "b2": 164, "a0": [164, 915], "f8": 164, "7d": 164, "1c": 164, "2c": 164, "9f": 164, "4d": [164, 1053], "86": [164, 173, 187, 197, 202, 204, 210, 213, 219, 226, 229, 234, 236, 242, 246, 249, 252, 255, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322, 337, 1112, 1113], "e3": [164, 488], "dd": [164, 841, 870, 1156], "7b": 164, "3f": 164, "aa": 164, "b8": 164, "a5": [164, 915], "d5": 164, "0b": 164, "81": [164, 173, 175, 187, 197, 202, 204, 210, 213, 215, 219, 226, 229, 234, 236, 242, 246, 249, 252, 255, 264, 267, 271, 274, 284, 288, 294, 306, 310, 316, 322, 337, 986, 1010, 1112, 1113], "d1": [164, 236, 299, 322, 642], "e8": 164, "dc": [164, 469], "c5": 164, "d2": [164, 236, 299, 642], "c2": [164, 472, 586, 671], "0a": [164, 371], "a1": [164, 226, 271, 1065], "e1": [164, 214, 227, 488, 668], "89": [164, 173, 187, 197, 202, 204, 210, 213, 219, 223, 226, 229, 234, 236, 239, 242, 246, 249, 252, 255, 264, 267, 271, 274, 284, 288, 294, 306, 310, 316, 322, 337, 443, 914, 915, 916, 986, 1112, 1113], "4c": 164, "4a": 164, "77": [164, 187, 195, 197, 202, 204, 206, 210, 213, 219, 223, 226, 229, 234, 236, 242, 246, 249, 252, 255, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322, 337, 339, 342, 347, 1112, 1113], "a9": 164, "68": [164, 187, 192, 197, 202, 204, 210, 213, 219, 223, 226, 229, 234, 236, 242, 246, 249, 252, 255, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322, 334, 337, 892, 1112, 1113], "b6": 164, "a8": 164, "9b": 164, "d8": 164, "7f": [164, 916], "e2": [164, 214, 227, 488, 668], "a3": 164, "79": [164, 187, 197, 202, 204, 210, 213, 219, 223, 226, 229, 234, 236, 242, 246, 249, 252, 255, 264, 267, 271, 274, 284, 288, 294, 306, 310, 316, 322, 337, 342, 347, 1112, 1113], "f4": 164, "96": [164, 173, 187, 197, 202, 204, 210, 213, 223, 226, 229, 234, 236, 242, 246, 249, 252, 255, 264, 267, 271, 274, 284, 288, 294, 306, 310, 316, 322, 337, 443, 985, 986, 1112, 1113], "4f": [164, 1053], "1d": 164, "7e": 164, "4e": 164, "0e": 164, "d9": 164, "8c": 164, "d3": [164, 642], "c8": 164, "f7": 164, "8e": 164, "d6": 164, "3b": 164, "1e": 164, "4b": [164, 916, 972], "5e": [164, 1039], "5f": [164, 743], "7c": 164, "expon": [164, 1039], "65537": 164, "0x10001": 164, "x509v3": 164, "98": [164, 173, 187, 197, 204, 210, 213, 219, 226, 229, 234, 236, 239, 242, 246, 249, 252, 255, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322, 337, 342, 347, 568, 605, 986], "0c": [164, 916], "keyid": 164, "c0": 164, "8f": 164, "b1": 164, "b7": 164, "9a": 164, "fa": 164, "7a": 164, "df": [164, 190, 306, 310, 316, 451], "a6": 164, "c9": 164, "76": [164, 187, 197, 202, 204, 210, 213, 215, 219, 226, 229, 234, 236, 242, 246, 249, 252, 255, 264, 267, 271, 274, 284, 288, 294, 306, 310, 316, 322, 337, 342, 347, 462, 463, 727, 761, 1065, 1112, 1113], "f0": 164, "b4": 164, "f9": 164, "eb": 164, "f1": 164, "6c": [164, 916], "2f": [164, 367, 1053], "5a": 164, "e0": 164, "d0": 164, "93": [164, 173, 187, 197, 202, 204, 210, 213, 219, 223, 226, 229, 234, 236, 242, 246, 249, 255, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322, 337, 1112], "8d": 164, "2a": 164, "fc": [164, 468, 469], "1a": 164, "b9": 164, "cb": [164, 632], "miidbtccae2gawibagiuarax5e9vn4g6eclb5bocbruks9cwdqyjkozihvcnaqel": 164, "bqawetepma0ga1ueawwgamzhc2nomcaxdtixmdkwnzeyntc1nloydzixmjewode0": 164, "mti1nzu2wjarmq8wdqydvqqddazqzmfzy2gwggeima0gcsqgsib3dqebaquaa4ib": 164, "dwawggekaoibaqc1lvzqb2aw15x2nlvnnmth6qxdnq1xvokb9vbu6zx": 164, "wl72mzqr": 164, "5rkvwabpeph9hcwdnwcm9mjnhupdexi": 164, "hmszvaowukuzi2kflrpvc": 164, "79gwnr4": 164, "jc": 164, "xdlzwnekcnuhsogjwxxttbydsghpd8q": 164, "valspcvotvjdokib4eyxnavjbdjdldd": 164, "rb8ueftirkn5abigzdoortik9jy1v2ocui5zqu8dkg4vph4mtkp": 164, "nb3kgq7zt5ym": 164, "b8ce2f": 164, "ettmprmfi94x": 164, "7i5tuqrbsylistict": 164, "rf1kw6": 164, "zuzvmwyow9cyzwc5rar": 164, "ys0exg3v": 164, "hyjl7vaxa23rb": 164, "xyiuztxqunxragmbaagjuzbrmb0ga1uddgqwbbqk": 164, "p1jr3huijl4otbwyvngmdz1idzafbgnvhsmegdawgbqkp1jr3huijl4otbwyvngm": 164, "dz1idzapbgnvhrmbaf8ebtadaqh": 164, "ma0gcsqgsib3dqebcwuaa4ibaqa5yke5gyfa": 164, "h49rsbdpobkbr5rv0hz693pljj02mn9hprusmgbygdujyx6odqbzcfah8ko0": 164, "xra": 164, "kdtflvc7uuvwtp": 164, "envqn8vx6twkd0r7maeyze8q6w2y1p1xcbrbwhmhemi": 164, "tjjadwenms9xosesipxkduey9oa6ep6indatkyt2lrw5tyagfocnxyiniybsvdtw": 164, "yqfvxbjphkw": 164, "dintokuzmazeiq3j0hi8o789xdyxlf2snsdshq5huaz67c5brli": 164, "ahemjzbycfiiq65b5x": 164, "y7aq": 164, "eg70tffm4fd8iys4tyxajdhcarqvfpdxazkhx": 164, "rk": 164, "b3lljngstu2g": 164, "mokutil": 164, "mokmanag": 164, "bloodi": [164, 981, 1121], "fan": [164, 186, 190, 216, 240, 309, 1108], "highest": [164, 223, 229, 239, 242, 288, 394, 439, 915, 971], "melt": 164, "7390": [164, 229], "cross develop": 165, "raspberry pi": [165, 907, 908, 909, 910, 911, 914, 915, 916], "crosstool-ng": 165, "c++": [165, 167, 1160, 1161, 1162, 1164], "sadli": [165, 216, 433, 779, 914, 948, 951, 985, 1007], "linaro": [165, 763, 906, 994, 995], "libstdc": [165, 996, 998], "unsatisfi": 165, "libpthread": [165, 987], "feedback": [165, 181, 184, 193, 194, 195], "thankfulli": 165, "gperf": [165, 998], "flex": [165, 790, 914, 998], "texinfo": [165, 998], "help2man": [165, 998], "libtool": [165, 998], "ncurs": [165, 783], "unzip": [165, 811, 998], "rsync": [165, 998], "diffutil": 165, "libncurses5": [165, 998], "gawk": [165, 998], "util": [165, 172, 193, 322, 466, 472, 491, 505, 620, 675, 678, 680, 761, 998, 1005, 1136], "ct": [165, 998], "zlib": [165, 998], "extra": [165, 187, 197, 223, 400, 461, 553, 724, 810], "prior": [165, 836, 852, 877, 914, 984, 1000, 1054], "bootstrap": [165, 998, 1143], "latest": [165, 766, 781, 787, 1136], "yann": 165, "morin": 165, "warranti": [165, 206, 339], "merchant": 165, "chosen": [165, 454, 907, 914, 916, 942, 946, 966, 970, 1114, 1127], "rpi3": 165, "armv7": 165, "rpi2": 165, "23179": 165, "libc": [165, 984, 1001], "glibc_2": [165, 984], "ldd": [165, 455, 457, 1001], "0xb6e06000": 165, "invok": [165, 195, 214, 227, 328, 333, 469, 571, 583, 642, 672, 963, 985, 1022, 1034, 1035, 1060], "rpt2": 165, "rpi1": 165, "deb10u1": 165, "quirk": [165, 907], "werror": [165, 375, 388, 431, 454, 469, 476, 761, 778, 779, 1150], "behind": [165, 205, 388, 439, 469, 491, 601, 810, 925, 984, 1027, 1125], "glibcxx_3": 165, "libgcc_": 165, "downgrad": 165, "cmake_find_root_path": [165, 985], "cmake_sysroot": [165, 985], "viewpoint": 165, "bye": [165, 695, 699, 701, 702, 703, 1121], "relocat": 165, "fragil": 165, "sdk": 165, "buildroot": 165, "encount": [165, 194, 242, 246, 915, 916, 942], "ct_prefix": 165, "categori": [166, 178, 451, 1110], "crosstool": [166, 270, 763, 906, 985, 987, 994, 995, 996], "1399": 166, "dell": 166, "xp": [166, 449], "grintovec": [166, 221], "plan\u0161arsko": 166, "jezero": 166, "\u010de\u0161ka": [166, 221], "ko\u010da": [166, 221], "traunstein": [166, 190, 360], "zierlersteig": [166, 190], "bigbluebutton": [166, 170, 1155], "consumpt": 166, "buildmanag": 167, "embeddedentwicklung": 167, "anpassungen": 167, "paketen": 167, "rootfilesystem": [167, 987], "dient": 168, "vermarktung": 168, "referenz": [168, 257], "kursteilnehm": [168, 360], "beendigung": 168, "entstandenen": 168, "zur\u00fcckgreifen": 168, "finden": [168, 172, 181, 1155], "sofern": 168, "kund": [168, 181], "w\u00fcnscht": 168, "abstufungen": 168, "\u00f6ffentlichkeit": [168, 1172], "besprochen": 168, "hierbei": 168, "anwendung": [168, 1177], "g\u00e4nzlich": 168, "abgesehen": 168, "ausdr\u00fccklich": 168, "zustimmt": 168, "namen": [168, 187, 197, 246, 306, 898, 1179], "individuen": 168, "prinzipiel": 168, "erw\u00e4hnt": [168, 181], "erlaubni": 168, "sollten": [168, 236, 274], "vorgehen": [168, 254, 1172, 1179], "anbietet": 168, "nie": [168, 177, 189, 360, 1160], "zug\u00e4nglich": 168, "onlinekursen": 168, "m\u00f6glichkeit": [168, 171, 189, 1158, 1177, 1178], "\u00fcbungsmateri": 168, "zustimmen": 168, "einzeln": [168, 181], "keinesfal": 168, "ver\u00f6ffentlicht": 168, "verschiedenst": 168, "m\u00f6glichkeiten": [168, 181, 1174, 1177], "entstanden": [168, 181, 189], "nichtsdestotrotz": [168, 1158], "verf\u00fcgung": [168, 187, 1160, 1177], "accompani": [169, 190, 279, 281, 1111, 1166], "privaci": [169, 186, 190, 191], "guidelin": [169, 186, 305, 916], "certainli": [169, 942], "redhat": [169, 291, 322, 445], "gitk": [169, 870], "traine": [169, 196], "respositori": [169, 181], "user1": 169, "user2": 169, "user3": 169, "untrack": 169, "beast": 169, "similarli": 169, "unstag": 169, "accident": [169, 582, 714, 794, 837, 838, 877, 941, 1049], "7434a5b": 169, "100755": 169, "cowork": 169, "employ": [169, 449], "favourit": 169, "869": [169, 229, 316], "124": [169, 173, 187, 194, 197, 204, 210, 213, 223, 226, 229, 234, 236, 239, 242, 246, 249, 252, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322, 1065], "a4b9666": 169, "bf5bb75": 169, "went": [169, 190], "retri": [169, 928, 1027, 1136], "noon": [169, 309, 970, 1058], "lack": [169, 429, 454, 526, 660, 662, 916, 996], "unavoid": 169, "her": [169, 173, 198, 242, 245, 662, 845, 866, 1074, 1116, 1171], "confid": 169, "merg": [169, 215, 812, 970, 1056, 1173], "gentl": [170, 1162], "tinker": 170, "solder": 170, "sysv": [171, 985], "grace": [171, 283, 734], "sigterm": [171, 981, 982], "sigkil": 171, "beeinflussen": 171, "shutdown": [171, 226, 242, 249, 252, 267, 274, 284, 288, 310, 316, 319, 322, 350, 788, 901, 978, 1016], "herausgefunden": [171, 177, 360], "nachfolgend": [171, 1156], "manpag": 171, "verhindern": 171, "genehm": 171, "systemd": [171, 226, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322, 810, 848, 901, 916, 981, 1156], "inhibit": [171, 318, 667, 705], "children": [171, 443], "vererbt": 171, "attributen": 171, "setprior": 171, "execv": [171, 939, 984], "sched_reset_on_fork": 171, "ORed": 171, "privileg": [171, 226, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322, 866, 901], "playback": 171, "prevent": [171, 174, 223, 229, 232, 239, 242, 270, 425, 431, 435, 847, 936, 941, 970, 981, 1007, 1019, 1049], "evad": 171, "rlimit_rttim": 171, "getr": 171, "anstel": 171, "prozessen": 171, "teilen": 171, "prozess": [171, 343, 1165, 1167, 1174, 1175, 1178], "startenden": 171, "gestarteten": 171, "weitergegeben": 171, "ausser": [171, 198, 337, 1171], "unterbunden": 171, "pthread_attr_setinheritsch": 171, "pthread_inherit_sch": 171, "pthread_explicit_sch": 171, "newli": [171, 431], "sowa": [171, 177, 360, 1156], "\u00e4hnlich": [171, 202], "wikipedia": [113, 171, 232, 439, 582, 916, 927, 971, 1003, 1121], "filter_driv": 171, "offenbar": [171, 187, 360, 1158], "miser": [171, 620], "netzwerkdrivern": 171, "hoher": 171, "interruptlast": 171, "verbessern": 171, "n\u00f6tig": [171, 1167], "diesbez\u00fcglich": 171, "\u00fcberlegt": 171, "schaltet": 171, "netzwerkdriv": 171, "30107": 171, "linuxfound": 171, "workgroup": 171, "napi": [171, 201, 804], "implementationen": 171, "libmodbu": 171, "freemodbu": 171, "konfiguriert": [171, 172], "jumbo": 171, "jumbo_fram": 171, "mtu": [171, 909], "1500": [171, 229], "eth0": 171, "9000": [171, 229], "ifconfig": [171, 804], "abgelegt": 171, "konfigur": [171, 173], "ifac": [171, 494, 508, 731], "vorsicht": [171, 197, 898], "routern": 171, "fragmentieren": 171, "tracerout": 171, "netzwerkverbindung": 171, "g\u00fcte": 171, "wissen": [171, 360, 1158, 1165], "sar": 171, "sysstat": 171, "schmerzvol": 171, "netter": 171, "ausprogrammiert": 172, "konflikt": [172, 1173], "parallelen": [172, 1177], "demonstr": [172, 174, 194, 266, 521, 570, 1110, 1114, 1153], "mutter": [172, 360, 361, 1177], "aller": [172, 181, 360, 361, 1156, 1177], "danach": [172, 1155], "hilf": [172, 197, 342, 347, 1167], "gefixt": 172, "kommunk": 172, "variablen": [172, 173, 198, 199, 202, 205, 210, 238, 256, 257, 334, 337, 343, 1157, 1167, 1168, 1171], "frontal": 172, "vorgef\u00fchrt": 172, "diskuss": [172, 181, 203, 360], "dank": [172, 177, 360, 1156], "beispielcod": 172, "h\u00e4ndisch": [172, 1159], "zweier": [172, 198, 1171], "bewundern": 172, "k\u00f6nnt": 172, "euch": 172, "erinnern": [172, 360], "blinken": 172, "liess": 172, "irgendwo": [172, 246], "hatten": [172, 177, 360], "edg": [172, 216, 792, 950, 951], "kleinen": 172, "empf": 172, "unbedingt": [172, 187, 1156], "beispielprogramm": 172, "horcht": 172, "gesprochen": 172, "ausf\u00fchrlich": [172, 257], "schamlos": 172, "eigenwerbung": 172, "\u00fcberbleibsel": 172, "ehemaligen": 172, "socketcan": [172, 908, 909], "absorbiert": 172, "worden": [172, 181, 1156], "enth\u00e4lt": [172, 187], "schnuckelig": 172, "aufzeichnen": 172, "replai": [172, 909], "folien": [172, 181, 189, 1155], "freitag": [172, 1156], "kerneldrivertag": 172, "sorri": [172, 178, 849], "emanuel": 172, "beispieldriv": 172, "han": 172, "findet": 172, "angeboten": [172, 1155], "promin": [172, 724, 806], "implementiert": [172, 187, 218, 1165, 1179], "gute": [172, 189, 1165, 1172], "anfang": [172, 173, 181], "mcp2515": [172, 810], "angesprochen": [172, 189], "fortgeschrittener": [172, 189], "einpflegt": 172, "agiert": 172, "mcp251x": 172, "at91": 172, "soc": [172, 914, 915, 916, 950], "deinem": 172, "stecker": 172, "verbaut": 172, "at91_can": 172, "lacht": 172, "zeilenweisen": 173, "nutzdaten": [173, 226], "extrahieren": [173, 200], "wollend": [173, 1172], "spalt": 173, "offensichtlich": [173, 1159], "separiert": 173, "felder": 173, "antwort": [173, 274, 316], "stdtype": 173, "gscheitesten": 173, "aufeinanderfolgend": 173, "whitespac": [173, 234, 242, 288, 373, 1054, 1077, 1133], "nimmt": [173, 198, 210, 234, 236, 242, 274, 1158, 1171], "tupl": [173, 186, 191, 193, 195, 199, 203, 205, 211, 212, 214, 218, 221, 224, 225, 227, 228, 230, 231, 235, 237, 238, 239, 244, 247, 250, 251, 253, 263, 265, 268, 271, 272, 275, 285, 287, 289, 293, 294, 306, 309, 311, 317, 319, 321, 323, 327, 342, 498, 707, 762, 763, 1012, 1030, 1031, 1038, 1039, 1044, 1053, 1056, 1085, 1108, 1161], "weiss": [173, 177, 187, 306, 1174, 1179], "rauskommen": 173, "aaa": [173, 234, 246, 252, 288, 322], "tbbb": 173, "tccc": 173, "feld0": 173, "feld1": 173, "feld2": 173, "ccc": [173, 252], "optional": [173, 1158], "splittet": 173, "bearbeitet": [173, 1178], "manuel": [173, 197, 202], "ddd": 173, "eee": 173, "maxsplit": [173, 242, 288, 451], "restfield": 173, "len": [173, 174, 175, 177, 187, 197, 202, 204, 205, 210, 213, 214, 218, 219, 223, 226, 229, 234, 236, 239, 242, 246, 249, 252, 264, 267, 274, 284, 288, 295, 306, 310, 316, 322, 334, 337, 451, 806, 910, 1011, 1024, 1037, 1039, 1045, 1047, 1054, 1056, 1058, 1059, 1103, 1121, 1125, 1129, 1132], "10101010": 173, "switchnumb": 173, "rsplit": [173, 242, 288, 451, 1054], "l1": [173, 176, 187, 204, 210, 213, 223, 226, 229, 234, 236, 242, 246, 249, 252, 255, 264, 267, 271, 274, 284, 288, 294, 306, 310, 316, 322, 489], "l2": [173, 176, 187, 204, 210, 213, 218, 223, 226, 229, 236, 242, 246, 249, 252, 255, 264, 267, 271, 274, 284, 288, 294, 306, 310, 316, 322], "\u00e4nderung": [173, 187, 1179], "87": [173, 187, 197, 202, 204, 210, 213, 219, 226, 229, 234, 236, 242, 246, 249, 252, 255, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322, 337, 342, 347, 1065, 1112, 1113], "zeigen": [173, 897], "dasselb": 173, "objekt": [173, 187, 197, 288], "140070310441600": 173, "ver\u00e4ndert": 173, "91": [173, 187, 197, 202, 204, 210, 213, 219, 223, 226, 229, 234, 236, 239, 242, 246, 249, 255, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322, 337, 342, 347, 1112, 1113], "140070371015728": 173, "92": [173, 174, 197, 202, 204, 206, 210, 213, 219, 226, 229, 234, 236, 239, 242, 246, 249, 252, 255, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322, 337, 342, 347, 894, 1112, 1113], "attributeerror": [173, 187, 223, 229, 234, 236, 239, 242, 246, 249, 252, 255, 264, 267, 271, 274, 284, 288, 294, 306, 310, 316, 322, 1007, 1020, 1021, 1028], "gottseidank": 173, "alternativ": 173, "aufruf": [173, 187, 193, 197, 242, 338], "paaren": 173, "keyerror": [173, 176, 187, 197, 204, 213, 223, 226, 229, 234, 236, 239, 242, 249, 252, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322, 337, 1007, 1056, 1130], "nix": [173, 174, 187, 205, 213, 234, 236, 239, 264, 284, 316, 322, 337, 527], "umstaendlich": 173, "102": [173, 187, 197, 202, 204, 210, 219, 223, 226, 229, 234, 236, 239, 242, 246, 249, 252, 255, 264, 267, 271, 274, 284, 288, 294, 306, 310, 316, 322, 337, 342, 347], "103": [173, 187, 197, 204, 210, 219, 226, 229, 234, 236, 239, 242, 246, 249, 252, 255, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322, 337], "104": [173, 175, 187, 197, 202, 204, 210, 223, 226, 229, 234, 236, 239, 242, 246, 249, 252, 255, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322, 337, 1065], "106": [173, 187, 197, 202, 204, 210, 213, 219, 223, 226, 229, 234, 236, 239, 242, 246, 249, 252, 264, 267, 271, 274, 284, 288, 294, 306, 310, 316, 322, 337, 892], "setdefault": [173, 214, 234, 249, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322, 1056], "107": [173, 187, 197, 202, 204, 206, 210, 213, 226, 229, 234, 236, 242, 246, 249, 252, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322, 337, 339, 438], "meinvoelligsinnlosertyp": 173, "sinnlose_addit": 173, "sinnlobj": 173, "112": [173, 187, 194, 197, 202, 204, 210, 219, 223, 226, 229, 234, 236, 242, 246, 249, 252, 264, 267, 271, 274, 284, 288, 294, 306, 310, 316, 322, 337, 892], "113": [173, 187, 197, 202, 204, 210, 213, 223, 226, 229, 234, 236, 242, 246, 249, 252, 255, 264, 267, 271, 274, 284, 288, 294, 306, 310, 316, 322, 474], "__main__": [173, 177, 187, 192, 210, 213, 223, 226, 227, 229, 234, 236, 239, 242, 246, 249, 252, 255, 267, 274, 284, 288, 294, 306, 310, 316, 322, 337, 342, 1008, 1011, 1015, 1021, 1029, 1136, 1142], "0x7f64a8934890": 173, "114": [173, 175, 187, 197, 204, 210, 219, 223, 226, 229, 234, 236, 242, 246, 249, 252, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322], "115": [173, 187, 197, 202, 204, 210, 223, 226, 229, 234, 236, 242, 246, 249, 252, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322], "116": [173, 187, 197, 204, 210, 219, 223, 226, 229, 234, 236, 239, 242, 246, 249, 252, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322], "nochwenigersinnvol": 173, "der_absolute_unsinn": 173, "super": [173, 189, 190, 197, 211, 213, 214, 229, 237, 240, 244, 263, 267, 278, 287, 309, 488, 1005, 1007, 1024, 1108, 1115], "unsinn": 173, "uebertreibs_jetzt_bitt": 173, "117": [173, 187, 197, 204, 210, 223, 226, 229, 234, 236, 239, 242, 246, 249, 252, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322], "118": [173, 187, 197, 204, 219, 223, 226, 229, 234, 236, 239, 242, 246, 249, 252, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322, 892, 1065], "0x7f64a894a790": 173, "119": [173, 187, 197, 204, 206, 213, 226, 229, 234, 236, 242, 246, 249, 252, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322, 339], "121": [173, 175, 187, 197, 204, 210, 213, 219, 226, 229, 234, 236, 242, 246, 249, 252, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322], "1335": 173, "122": [173, 175, 187, 197, 202, 204, 210, 213, 223, 226, 229, 234, 236, 239, 242, 246, 249, 252, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322, 986], "819508": 173, "123": [173, 187, 197, 204, 205, 210, 213, 219, 223, 226, 229, 234, 236, 239, 242, 246, 249, 252, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322, 384, 909, 1065, 1072, 1142], "uptim": 173, "timedelta": [173, 192, 219, 221, 274], "358": [173, 229, 274, 288, 306, 316, 322, 445], "125": [173, 197, 202, 204, 210, 213, 223, 226, 229, 234, 236, 242, 246, 249, 252, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322], "irgendwann_einmal_gewesen": 173, "834972": 173, "126": [173, 187, 197, 202, 204, 210, 213, 226, 229, 234, 236, 239, 242, 246, 249, 252, 264, 267, 284, 288, 294, 306, 310, 316, 322], "datetime_from_batteri": 173, "840837": 173, "127": [173, 187, 197, 202, 204, 210, 213, 219, 226, 229, 234, 236, 242, 246, 249, 252, 264, 267, 284, 288, 294, 306, 310, 316, 322, 925, 933], "846889": 173, "woher": [173, 236], "ausschauen": 173, "sinnlo": [173, 236], "sinnlos": [173, 210, 288], "repraesent": 173, "129": [173, 187, 197, 204, 206, 213, 223, 226, 229, 234, 236, 239, 242, 246, 249, 252, 255, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322, 339], "130": [173, 187, 197, 204, 219, 226, 229, 234, 236, 239, 242, 246, 249, 252, 264, 267, 274, 278, 284, 288, 294, 306, 310, 316, 322, 667, 783, 1052], "completedprocess": [173, 242, 252], "returncod": [173, 242, 252], "erfolgreich": 173, "beendet": [173, 1177], "schau": 173, "du": [173, 187, 242, 249, 255, 933, 938], "verwendest": 173, "anzuzeigen": 173, "cell": [173, 186, 907, 1005, 1006, 1007, 1012, 1020, 1021, 1027, 1028, 1032, 1049, 1050, 1054, 1113, 1129, 1130], "gesendet": 173, "ausf\u00fchrt": 173, "krieg": 173, "131": [173, 187, 197, 204, 213, 219, 226, 229, 234, 236, 242, 246, 249, 252, 264, 267, 284, 288, 294, 306, 310, 316, 322, 717], "capture_output": [173, 252], "ndrwxrwxr": [173, 252], "mar": [173, 242, 384, 837, 838, 841, 855, 867, 889, 892, 894, 918, 932, 942, 984, 987, 996], "2607": 173, "33768": 173, "ndrwxr": 173, "xr": [173, 462, 837, 838, 855, 857, 858, 866, 867, 892, 907, 914, 915, 916, 984, 996, 998, 999, 1035], "switchzeug": 173, "keiner": [173, 187, 306, 1160], "seinen": [173, 187], "formuliert": [173, 181], "logisch": [173, 197], "irgendwa": [173, 219, 234, 236], "konverti": 173, "musst": 173, "dich": 173, "festlegen": 173, "133": [173, 187, 197, 204, 226, 229, 234, 236, 242, 246, 249, 252, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322], "stdout_as_utf8": 173, "utf": [173, 214, 223, 226, 227, 229, 233, 239, 242, 252, 274, 288, 294, 306, 310, 316, 322, 1039, 1058, 1105], "134": [173, 187, 197, 204, 213, 226, 229, 234, 236, 239, 242, 246, 249, 252, 255, 264, 267, 284, 288, 294, 306, 310, 316, 322, 726], "135": [173, 187, 197, 204, 213, 226, 229, 234, 236, 242, 246, 249, 252, 255, 264, 267, 284, 288, 294, 306, 310, 316, 322], "drwxrwxr": [173, 252, 892, 950, 985, 986, 987, 996, 998], "drwxr": [173, 837, 838, 855, 892, 907, 914, 915, 916, 996, 998], "136": [173, 175, 187, 197, 204, 213, 226, 229, 234, 236, 239, 242, 246, 249, 252, 264, 267, 284, 288, 294, 306, 310, 316, 322, 463], "fuer": [173, 234, 239, 246], "listdir": [173, 280, 284, 316, 322, 349, 451], "ipynb_checkpoint": [173, 252, 316], "gitignor": [173, 452, 986], "137": [173, 184, 187, 197, 204, 226, 229, 234, 236, 239, 242, 246, 249, 252, 255, 264, 267, 284, 288, 294, 306, 310, 316, 322], "rekurs": 173, "iterieren": [173, 177, 187, 202, 210], "dirpath": 173, "dirnam": [173, 226, 229, 280, 451, 526, 761, 1141], "checkpoint": [173, 223, 229, 239, 242], "itg": 173, "scope": [173, 181, 187, 198, 199, 202, 233, 245, 258, 259, 261, 270, 282, 293, 304, 308, 309, 314, 315, 318, 320, 321, 326, 342, 379, 385, 489, 539, 559, 572, 574, 583, 668, 709, 721, 724, 739, 740, 762, 763, 1006, 1051, 1161, 1171, 1175], "getter": [173, 580, 628], "setter": [173, 213, 1028], "fibo": [173, 174, 193, 213, 227, 695, 697, 1011], "listcomprehens": 173, "generatorexpress": [173, 174], "switchdb": 173, "schema": [173, 254, 569, 1064], "michi": 173, "pyexec": 173, "ifadminstatu": 173, "ifdescr": 173, "iflastchang": 173, "snmpenginetim": 173, "ifoperstatu": 173, "fein": [173, 197], "helferlein": 173, "hochtrabend": 173, "nennt": 173, "funktional": 173, "138": [173, 187, 197, 204, 213, 226, 229, 234, 236, 242, 246, 249, 252, 264, 267, 284, 288, 294, 306, 310, 316, 322, 1065], "139": [173, 187, 197, 204, 213, 226, 229, 234, 236, 242, 246, 249, 252, 264, 267, 284, 288, 294, 306, 310, 316, 322], "140": [173, 187, 197, 204, 213, 226, 229, 234, 236, 239, 242, 246, 249, 252, 255, 264, 267, 271, 284, 288, 294, 306, 310, 316, 322, 667], "l_quadrat": 173, "141": [173, 187, 197, 204, 226, 229, 234, 236, 242, 246, 249, 252, 255, 264, 267, 284, 288, 294, 306, 310, 316, 322, 384, 892], "kompliziert": [173, 187, 239, 242, 264, 1156, 1175], "anm": 173, "versionen": [173, 243], "aufgebaut": 173, "rausnehmen": 173, "konfigurationsfil": 173, "configpars": 173, "142": [173, 187, 197, 204, 213, 226, 229, 234, 236, 242, 246, 249, 252, 264, 267, 271, 284, 288, 294, 306, 310, 316, 322, 927, 972], "143": [173, 187, 197, 204, 213, 226, 229, 234, 236, 239, 242, 246, 249, 252, 255, 264, 267, 284, 288, 294, 306, 310, 316, 322], "liste_als_str": 173, "144": [173, 187, 197, 204, 213, 220, 226, 229, 234, 236, 239, 242, 246, 249, 252, 255, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322, 463], "145": [173, 187, 197, 204, 213, 226, 229, 234, 236, 239, 242, 246, 249, 252, 255, 264, 267, 284, 288, 294, 306, 310, 316, 322, 1126], "herbert": 173, "146": [173, 187, 197, 204, 213, 226, 229, 234, 236, 242, 246, 249, 252, 255, 264, 267, 284, 288, 294, 306, 310, 316, 322], "heraussen": 173, "147": [173, 187, 197, 204, 213, 226, 229, 234, 236, 239, 242, 246, 249, 252, 264, 267, 284, 288, 294, 306, 310, 316, 322, 845], "148": [173, 187, 197, 204, 213, 226, 229, 234, 236, 242, 246, 249, 252, 255, 264, 267, 284, 288, 294, 306, 310, 316, 322, 586], "149": [173, 187, 197, 204, 226, 229, 234, 236, 239, 242, 246, 249, 252, 255, 264, 267, 284, 288, 294, 306, 310, 316, 322], "151": [173, 187, 197, 204, 213, 226, 229, 234, 236, 242, 246, 249, 252, 255, 264, 267, 284, 288, 294, 306, 310, 316, 322, 349], "152": [173, 187, 197, 204, 213, 226, 229, 234, 236, 242, 246, 249, 252, 264, 267, 284, 288, 294, 306, 310, 316, 322, 349, 1130], "mein_dict": 173, "gerhard": 173, "175": [173, 187, 204, 213, 226, 229, 234, 236, 239, 242, 246, 249, 252, 264, 267, 288, 294, 306, 310, 316, 322], "154": [173, 187, 197, 204, 213, 226, 229, 234, 236, 242, 246, 249, 252, 264, 267, 284, 288, 294, 306, 310, 316, 322, 892], "dict_as_json_str": 173, "155": [173, 187, 197, 204, 213, 226, 229, 234, 236, 239, 242, 246, 249, 252, 255, 264, 267, 284, 288, 294, 306, 310, 316, 322, 349], "gelesenes_dict_von_json": 173, "nahm": 174, "woch": [174, 194, 360, 361, 1156], "anspruch": 174, "platz": 174, "gesammelten": 174, "notizen": 174, "schnell": [174, 177, 197, 218, 243, 1159], "sachen": [174, 200], "is_prim": [174, 197, 200, 205, 1087], "divisor": [174, 205, 761, 1079], "unmodifi": [174, 187, 223, 234, 472, 523, 569, 583, 914, 916, 1007, 1020, 1090], "randomnumb": 174, "howmani": 174, "randrang": [174, 202, 226, 234, 236, 239, 242, 246, 249, 252, 274, 316, 322, 337, 1008, 1043], "prev": [174, 800], "cur": [174, 294, 389], "fibonum": 174, "tend": [174, 273, 276, 283, 439, 783, 849, 999], "input_list_str": 174, "input_list": [174, 249, 1090], "__n": [174, 761], "__lt__": [174, 236, 239, 242, 246, 264, 267, 288, 306], "rh": [174, 223, 227, 242, 377, 419, 435, 489, 503, 569, 583, 585, 709], "__le__": [174, 236, 239, 242, 246, 264, 267, 288, 306, 1027], "__eq__": [174, 236, 239, 242, 246, 264, 267, 288, 306, 1027], "__iadd__": 174, "iadd": 174, "__add__": [174, 239, 242, 246, 264, 288, 306, 1027], "new_numb": [174, 229], "__radd__": [174, 239, 246, 264, 1027], "radd": 174, "lh": [174, 223, 227, 377, 419, 435, 489, 503, 559, 569, 583, 585, 709, 841], "makesnosens": 174, "__number": 174, "input_numb": 174, "numnber": 174, "list_of_squar": 174, "shorter": [174, 1015, 1026, 1058, 1107], "compehens": 174, "effort": [174, 246, 280, 432, 433, 450, 915], "local_assign": 174, "read_global_vari": 174, "enclos": [174, 242, 402], "local_shadows_glob": 174, "explicit_global_assign": 174, "creation": [174, 283, 305, 733, 735, 740, 762, 763, 869, 906, 936, 947, 952, 961, 967, 978, 987, 1049, 1058, 1059, 1143], "captur": [174, 257, 258, 259, 261, 281, 318, 319, 327, 342, 707, 708, 711, 762, 763, 907, 1003, 1161], "create_funct": 174, "inner_funct": 174, "whic": 174, "f_one": 174, "f_two": 174, "launch": [174, 190], "discov": [174, 186, 193], "area": [174, 183, 216, 246, 806, 915, 1172, 1178], "scikit": [175, 177, 224, 1143], "manipul": [175, 454, 603, 726, 761, 808, 914, 927, 936, 971, 983, 1046, 1064], "appreci": [175, 226, 849, 1065], "spectral": [175, 1110], "mat": 175, "scipi": [175, 177, 205, 224, 1143], "loadmat": [175, 177], "sklearn": [175, 177, 1111, 1113, 1143], "pixel": 175, "rgb": [175, 177, 351], "dimens": [175, 177, 1113, 1164], "xkcd": 175, "schafer": [175, 186, 189, 190, 193, 211, 214, 221, 224, 227, 237, 240, 251, 254, 263, 287, 293, 321, 342, 347, 1108, 1126, 1127, 1129, 1130, 1131, 1132, 1134, 1144], "keith": [175, 186, 190, 211, 224, 237, 251, 254, 287, 293, 1108], "galli": [175, 186, 190, 211, 224, 237, 251, 254, 287, 293, 1108], "sci": 175, "kit": [175, 351], "spyder": [175, 186, 1032], "pycharm": [175, 186, 280, 1032], "retain": [175, 408, 1050], "invoc": [175, 489], "comparison": [175, 192, 215, 229, 232, 242, 250, 288, 384, 388, 394, 545, 709, 1041, 1083], "misfeatur": 175, "png": [175, 177, 322, 458, 986, 1110], "imgfil": 175, "veggi": [175, 177, 1110], "pillow": [175, 177], "welcom": 175, "cooper": [175, 734], "477x686": 175, "imgarrai": [175, 177], "ndim": [175, 1113], "477": [175, 229, 274, 322], "dtype": [175, 177, 271, 274, 278, 310, 316, 1113, 1126, 1127, 1129, 1130, 1131, 1132], "uint8": 175, "255": [175, 210, 226, 229, 234, 236, 239, 242, 246, 249, 267, 274, 284, 288, 294, 306, 310, 316, 322, 963], "172": [175, 187, 204, 226, 229, 234, 236, 239, 242, 246, 249, 252, 255, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322, 434], "nrow": [175, 177], "ncol": [175, 177], "reshap": [175, 177, 211, 224, 237, 251, 254, 287, 293, 1108, 1111, 1113], "irrelev": [175, 192, 197, 230, 384, 426, 449, 855, 1039, 1121], "colorspac": 175, "mpl_toolkit": 175, "mplot3d": 175, "axes3d": 175, "pyplot": [175, 204, 223, 252, 255, 306, 310, 316, 1004, 1062, 1113], "plt": [175, 204, 223, 252, 255, 306, 310, 316, 1004, 1062, 1113], "fig": 175, "add_subplot": 175, "set_xlabel": 175, "set_ylabel": 175, "set_zlabel": 175, "ndindex": 175, "scatter": [175, 781], "rgb_linear": 175, "n_cluster": [175, 177], "copy_x": 175, "max_it": 175, "n_init": 175, "n_job": 175, "precompute_dist": 175, "random_st": [175, 1111, 1113], "tol": 175, "verbos": [175, 182, 454, 727, 836, 870, 872, 1043, 1136], "cluster_cent": 175, "int32": [175, 435], "327222": 175, "cluster_centers_": [175, 177], "20529747": 175, "50360681": 175, "3796182": 175, "94408609": 175, "75471018": 175, "53133237": 175, "226": [175, 187, 206, 226, 229, 234, 236, 239, 242, 246, 249, 252, 267, 274, 284, 288, 294, 306, 310, 322, 339], "64913628": 175, "76939951": 175, "92569235": 175, "71464963": 175, "47333306": 175, "60640492": 175, "8888303": 175, "92275244": 175, "84313209": 175, "157": [175, 187, 197, 204, 226, 229, 234, 236, 242, 246, 249, 252, 264, 267, 284, 288, 294, 306, 310, 316, 322], "30685398": 175, "43988931": 175, "03959132": 175, "225": [175, 187, 226, 229, 234, 236, 242, 246, 249, 252, 267, 274, 288, 294, 310, 316, 322, 458, 1065], "55934051": 175, "182": [175, 187, 204, 226, 229, 234, 236, 239, 242, 246, 249, 255, 264, 267, 284, 288, 294, 306, 310, 316, 322], "98255893": 175, "3232048": 175, "241": [175, 226, 229, 234, 236, 239, 242, 249, 252, 267, 284, 288, 294, 310, 322, 1065], "37322907": 175, "159": [175, 187, 197, 204, 226, 229, 234, 236, 239, 242, 246, 249, 252, 264, 267, 284, 288, 294, 306, 310, 316, 322], "54158234": 175, "51775529": 175, "idx": [175, 177, 242], "cube": 175, "concaten": [175, 177, 214, 226, 227, 234, 242, 288, 316, 336, 384, 450, 895, 1044, 1052], "axi": [175, 177, 278, 1129, 1130], "reduced_img": [175, 177], "fromarrai": [175, 177], "float": [176, 187, 191, 193, 195, 197, 204, 205, 210, 213, 223, 226, 227, 229, 232, 234, 236, 239, 242, 247, 250, 264, 267, 272, 284, 288, 294, 305, 307, 310, 316, 322, 337, 338, 365, 366, 367, 371, 381, 383, 384, 388, 418, 427, 432, 451, 479, 488, 594, 595, 684, 743, 914, 972, 982, 1020, 1038, 1053, 1060, 1065, 1158, 1162], "franziska": [176, 177], "baseexcept": [176, 213, 242, 246, 267, 1007], "callabl": [176, 190, 226, 239, 249, 252, 267, 274, 284, 288, 295, 322, 667, 709, 731, 739, 1021, 1022, 1059], "forev": [176, 409, 410], "rescu": [176, 234, 582, 603, 725, 727, 810, 1005], "pooh": [176, 595], "hex": [176, 187, 197, 204, 219, 229, 239, 252, 264, 267, 274, 284, 294, 310, 316, 322, 337, 353, 526, 916, 1053], "0x7f03d41165f0": 176, "nonexist": 176, "react": [176, 191, 193, 195, 296, 312, 431, 592, 914, 931, 1007, 1163], "ensu": 176, "catch": [176, 216, 232, 255, 281, 327, 353, 469, 476, 498, 515, 532, 534, 567, 593, 596, 612, 618, 622, 627, 631, 634, 635, 652, 659, 660, 661, 662, 663, 664, 695, 703, 741, 743, 761, 763, 982], "jessa": [176, 197, 204, 226, 255, 306], "verdammt": [176, 342], "ipython": [176, 213, 223, 229, 239, 242, 267, 284, 322, 892], "bd3a1af9b474": 176, "issubclass": [176, 213, 229, 242, 267], "rais": [176, 177, 191, 193, 195, 213, 214, 223, 227, 229, 230, 234, 236, 239, 240, 242, 246, 254, 255, 288, 305, 327, 353, 1005, 1012, 1018, 1028, 1054, 1056, 1129, 1130], "bummer": [176, 229, 741, 1052], "peter": [176, 199, 236, 246, 333, 334, 1045], "paul": [176, 333, 334, 1045], "mari": [176, 1045], "pet": 176, "bloh": [176, 213], "blech": [176, 284, 680, 1124], "range_iter": [176, 187, 202, 219, 226, 234, 236, 239, 242, 252, 264, 267, 274, 284], "0x7f03d402e570": 176, "stopiter": [176, 187, 202, 213, 219, 223, 226, 229, 234, 236, 239, 242, 246, 252, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322, 695, 703, 1007, 1012], "beantwortung": [177, 360], "herrschaft": [177, 360], "gestellt": [177, 187, 360, 1160], "schulungsr\u00e4umen": [177, 360], "platzhirsch": [177, 360], "schlagen": [177, 360], "spass": [177, 360, 1165, 1167, 1172], "unglaublich": [177, 360], "lustig": [177, 198, 360, 1156, 1167], "vermittelt": [177, 360, 1177], "gelernt": [177, 360, 1165], "anwend": [177, 360], "beachten": [177, 198, 360, 1171], "zudem": [177, 360], "kursleit": [177, 360], "sympathisch": [177, 360], "kompet": [177, 360], "w\u00fcrde": [177, 187, 360], "weiterempfehlen": [177, 360], "wiederholen": [177, 360], "christoph": [177, 219, 360], "jemand": [177, 360], "lassen": [177, 187, 198, 360, 1159, 1165, 1171, 1175, 1179], "bevor": [177, 1165, 1172, 1179], "anf\u00e4ngerthemen": 177, "vorbei": [177, 236, 242, 1168], "herumzureiten": 177, "gehackt": [177, 217], "zeug": [177, 306, 1174], "chef": 177, "vorgespr\u00e4ch": 177, "\u00fcbungsbeispiel": [177, 187], "mitgegeben": 177, "ausgehend": [177, 198, 360], "spektralbild": 177, "sagt": [177, 234], "verwend": [177, 210, 360], "clusteringalgorithmu": 177, "kategorisieren": 177, "abgebildeten": 177, "st\u00fccke": [177, 181], "erkennen": [177, 1160], "hab": 177, "erlaubt": [177, 187, 1156], "kursvorbereitung": 177, "appet": 177, "reduzieren": 177, "farbredukt": 177, "farben": 177, "bilddaten": 177, "interoperiert": 177, "nahtlo": [177, 1165, 1172], "zufal": [177, 203, 1159], "alpha": [177, 242, 288, 1063], "ausgangsbild": 177, "abzuschneiden": 177, "restoren": 177, "algorithmu": [177, 197, 242, 246, 249], "reduc": [177, 395, 404, 411, 417, 421, 424, 428, 437, 441, 446, 447, 467, 669, 707, 760, 762, 763, 916, 1110], "acht": [177, 197, 198, 242, 274, 294, 322, 1171], "\u00fcberschaubar": 177, "ausdrucksst\u00e4rk": 177, "bemerkbar": 177, "wegschneiden": 177, "pil": 177, "kmean": 177, "nrgba": 177, "disregard": [177, 388], "arbitrarili": [177, 769, 942, 946, 1005], "linear_rgb": 177, "rgba": 177, "ergeben": 177, "testprogramm": 177, "imndata": 177, "teilzeitmitarbeiterin": 177, "studiert": 177, "folgendem": [177, 219, 1179], "bekackten": 177, "inputformat": 177, "parsen": [177, 202], "zwischendurch": 177, "gruppenarbeit": 177, "h2o": 177, "dat": 177, "mass": [177, 283], "0000000e": 177, "2662399e": 177, "5994910e": 177, "4391972e": 177, "0048070e": 177, "0078250e": 177, "hessian": 177, "hartre": 177, "bohr": 177, "kamu": 177, "05054e": 177, "61610e": 177, "00000e": 177, "20781e": 177, "08051e": 177, "83024e": 177, "06829e": 177, "42629e": 177, "65256e": 177, "52600e": 177, "69570e": 177, "91733e": 177, "04388e": 177, "34292e": 177, "04780e": 177, "63758e": 177, "19019e": 177, "41217e": 177, "11622e": 177, "21912e": 177, "11752e": 177, "04198e": 177, "36702e": 177, "14839e": 177, "71613e": 177, "96373e": 177, "40456e": 177, "21369e": 177, "24236e": 177, "60956e": 177, "84350e": 177, "29686e": 177, "92365e": 177, "einigen": [177, 198, 360], "runden": [177, 187], "nachdenken": 177, "einigerma\u00dfen": 177, "zufrieden": 177, "load_dat": 177, "matrix_lin": 177, "readlin": [177, 204, 206, 213, 214, 226, 227, 233, 242, 249, 274, 284, 310, 316, 322, 334, 870, 1058], "vergeigt": 177, "matrix_el": 177, "unnecessari": [177, 379, 409], "triangular": 177, "max": [177, 187, 205, 210, 223, 229, 232, 234, 236, 239, 244, 249, 267, 321, 322, 393, 409, 545, 594, 847, 908, 1113], "row_no": 177, "__name__": [177, 213, 214, 227, 236, 242, 246, 267, 284, 288, 335, 342, 1006, 1008, 1011, 1015], "bildverarbeitung": 177, "ahnung": [177, 219], "beeeeeep": 178, "broad": [178, 468, 1115, 1161, 1162], "histori": [178, 214, 232, 258, 259, 261, 263, 309, 318, 319, 388, 665, 669, 671, 707, 760, 762, 763, 769, 812, 841, 847, 898, 1108, 1114, 1120, 1163, 1167, 1174], "responsibl": [178, 969, 1141], "sane": [178, 322, 353, 847, 1116, 1141], "interfer": [178, 439, 452, 915], "paradigm": [178, 846, 854, 907, 915, 1176], "breakag": [178, 790], "nontrivi": [178, 186, 190, 344, 1032, 1135], "inappropri": [178, 366, 371, 472, 768], "conclus": [178, 186, 193, 808], "awkward": 178, "encourag": [178, 769], "hear": 178, "predat": [178, 773, 899, 978], "doubt": [178, 223, 229, 239, 242, 246, 726, 1039], "schulungsbeschreibung": [179, 1155], "drehbuch": 179, "workshop": 179, "infolgedessen": 179, "virtuel": [179, 243, 1165, 1175, 1176], "konzipiert": [179, 189, 360], "add_subdirectori": [180, 459, 463, 976, 1150], "group1": 180, "group2": 180, "montag": [181, 189, 190, 211, 215, 1156], "vorbereitung": [181, 360, 1158], "mitbringen": 181, "teilzunehmen": 181, "stattfinden": [181, 257], "folgt": 181, "hierzu": 181, "privatheitsrichtlinien": 181, "bauanleitung": 181, "ausprobieren": 181, "willkommen": 181, "schulungsbeschreibungen": 181, "raii": [181, 283, 567, 763], "stl": [181, 351, 415, 528, 529, 530, 531, 533, 535, 536, 537, 538, 540, 541, 542, 543, 544, 567, 568, 606, 610, 632, 634, 635, 649, 664, 675, 763, 1160, 1161, 1162], "scott": [181, 674, 729], "meyer": [181, 477, 729], "primer": [181, 1148], "sonstig": 181, "argh": [181, 410, 661, 689, 1007, 1136, 1148], "kursanforderung": 181, "erg\u00e4nzend": 181, "lasst": 181, "testgetrieben": 181, "testcas": [181, 1142], "aufgab": [181, 187, 217, 1168], "hacken": 181, "diskutieren": 181, "niederschrift": 181, "geschehenen": 181, "geh\u00f6renden": 181, "privaten": 181, "verl\u00e4uft": 181, "ansehen": 181, "clonen": 181, "wann": [181, 189], "zugeh\u00f6rigen": 181, "entspricht": 181, "unbetr\u00e4chtlich": 181, "gcc5": 181, "laufen": [181, 1156], "darau": [181, 189], "installationsanleitung": 181, "benutzung": [181, 342, 347], "zuerst": [181, 1179], "aggreg": [181, 440, 451, 569, 822, 1126, 1148], "klassen": [181, 187, 193, 343, 1160], "konstruktoren": [181, 205, 257, 343, 1160], "methoden": [181, 187, 199, 337, 1160], "referenzen": [181, 187, 198, 199, 257, 1160, 1171], "klass": [181, 210, 306], "\u00e4quival": 181, "\u00fcbergab": 181, "langsam": [181, 187, 236], "ausbauen": 181, "dynmem": 181, "demonstrieren": 181, "alloziert": [181, 187, 204], "konstruktor": 181, "destruktor": 181, "vermeiden": [181, 187, 1177], "dtor": [181, 467, 553, 639, 644, 675, 678, 712], "ausflug": [181, 197, 238], "capac": [181, 620], "\u00fcbung": [181, 198, 199, 1171], "handgestrickt": 181, "fallen": [181, 1159, 1160], "lustvol": 181, "erleiden": 181, "teufel": [181, 1159], "smart": [181, 257, 279, 318, 343, 344, 345, 360, 449, 526, 636, 676, 677, 707, 727, 732, 740, 760, 762, 763, 1161, 1164], "shared_ptr": [181, 216, 232, 258, 259, 261, 279, 281, 318, 319, 481, 545, 636, 667, 676, 707, 722, 728, 729, 732, 740, 760, 762, 763, 1161], "unique_ptr": [181, 216, 232, 258, 259, 261, 279, 281, 318, 319, 467, 474, 481, 507, 508, 545, 636, 675, 676, 707, 722, 725, 732, 740, 759, 760, 761, 762, 763, 1161], "demonstriert": 181, "vorgriff": 181, "sortieren": [181, 1160], "employeerecord": 181, "parametrisierbarem": 181, "koordinatentyp": 181, "102ff": 181, "arten": [181, 1158], "containern": 181, "pointerarithmetik": 181, "wiederholung": [181, 198, 205, 241, 1171], "iteratoren": [181, 244], "laufzeitverhalten": [181, 199], "verbesserungen": 181, "gegen\u00fcb": [181, 1158], "6ff": 181, "lambda": [181, 213, 214, 227, 229, 232, 244, 257, 264, 281, 284, 289, 306, 310, 322, 451, 545, 610, 682, 707, 712, 717, 719, 731, 734, 739, 762, 763, 1003, 1160, 1161, 1162], "gegen\u00fcberstellung": 181, "sort_algorithm_reverse_lambda": 181, "vererbung": [181, 1160], "fallstudi": 181, "livegehackt": 181, "angebunden": 181, "komplex": [181, 234, 236, 242, 249, 274, 1177], "aufbauen": 181, "vergleichbaren": 181, "anbinden": 181, "wurden": [181, 189], "eigen": [181, 200, 1160, 1165, 1172, 1177, 1178], "kapitel": [181, 342, 347, 1158], "behandelt": [181, 1155], "vorbeigehen": 181, "dcmake_cxx_flag": 182, "dcmake_install_prefix": [182, 457], "libgtest": [182, 183, 279, 281, 1148, 1150], "claim": [182, 377, 586, 588, 589, 845, 938], "simlp": 182, "concret": [182, 190, 216, 279, 467, 474, 479, 494, 556, 642, 644, 739, 747, 1020, 1115], "find_packag": [182, 184, 1150], "add_execut": [182, 452, 458, 464, 510, 546, 549, 552, 555, 558, 561, 564, 658, 973, 980, 985, 986, 1147, 1150, 1152], "add_test": [182, 465, 549, 1147, 1150], "emphasi": 182, "ultim": [182, 213, 233, 577, 742, 915], "luke": [182, 242, 1150], "thetoplevel": 182, "findgtest": [182, 184, 1150], "gtest_root": 182, "dgtest_root": 182, "paranoidli": 182, "bitrot": [183, 1150], "var": [183, 187, 226, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322, 503, 810, 842, 872, 892, 897, 898, 901, 998], "libgmock": [183, 279, 281], "gmock": [183, 1148], "dcmake_build_typ": [183, 454], "loudli": [183, 577, 813, 923], "flathub": 184, "appstream": [184, 322], "visualstudio": [184, 243, 362], "flatpakref": 184, "stone": 184, "snap": 184, "hate": [184, 571], "findpackagehandlestandardarg": 184, "gtest_librari": 184, "gtest_include_dir": 184, "gtest_main_librari": 184, "378": [184, 226, 229, 236, 274, 316, 322, 1065], "_fphsa_failure_messag": 184, "197": [184, 187, 204, 213, 226, 229, 234, 236, 239, 242, 246, 249, 255, 267, 284, 288, 294, 306, 310, 316, 322], "find_package_handle_standard_arg": 184, "occur": [184, 246, 369, 384, 389, 390, 436, 460, 543, 737, 808, 870, 899, 969, 1053, 1054, 1058, 1166], "gessmann": 184, "cpoint_demo": 184, "cmakefil": [184, 452, 458, 463, 985, 986], "cmakeoutput": 184, "sigh": [184, 216, 526, 729, 1099], "jail": 184, "dict_extensions_suit": 185, "thing_suit": 185, "xsv": 185, "dict_extens": 185, "wednesdai": [186, 194, 276], "thursdai": [186, 190], "publicli": [186, 559], "freedom": [186, 439, 645], "spontan": 186, "cost": 186, "agil": [186, 200, 449, 1135], "methodologi": 186, "formul": [186, 282, 451, 684, 742, 933, 1164], "diadact": [186, 1032], "anaconda": [186, 280, 322, 1032], "dictat": [186, 296, 312, 388, 427, 978, 1032, 1033, 1117, 1134, 1136, 1163], "volumin": [186, 1032], "nodepad": [186, 1032], "configurabilti": [186, 1134], "eclips": [186, 1032, 1124], "pydev": [186, 1032], "seemingli": [186, 190, 984, 1032, 1108], "strang": [186, 914, 1032], "emac": [186, 206, 284, 870, 892, 984, 1032, 1134], "immutabilii": 186, "crisi": 186, "slept": 186, "lunch": 186, "squeez": 186, "Such": [186, 265, 984, 1141], "takeawai": 186, "nonverb": 186, "antenna": 186, "Being": [186, 853, 894, 916, 1048], "stubborn": 186, "greybeard": 186, "distutil": 186, "azur": 186, "devop": [186, 1031], "heavyweight": [186, 348, 731], "reach": [186, 234, 651, 726, 749, 751, 769, 774, 841, 942, 1053], "afternoon": [186, 309], "simplic": [186, 489, 841, 908, 931, 1005], "paral": 186, "imposs": [186, 246, 435, 471, 695, 706, 808, 960], "expand": [186, 242, 288, 409, 410, 913, 942, 984, 986], "entertain": [186, 190, 211, 214, 237, 263, 287, 309, 1108], "david": [186, 189, 190, 198, 211, 214, 237, 263, 278, 282, 283, 287, 304, 308, 309, 343, 344, 675, 724], "beazlei": [186, 189, 190, 198, 211, 214, 237, 263, 282, 283, 287, 304, 308, 309, 343, 344], "freelanc": 186, "raymond": [186, 189, 190, 193, 197, 198, 211, 214, 221, 237, 240, 263, 287, 309], "hetting": [186, 189, 190, 193, 197, 198, 211, 214, 221, 237, 240, 263, 287, 309], "bias": 186, "humor": [186, 914, 1053], "emphas": [186, 193, 215, 562, 765, 773, 790, 1136], "dissect": [186, 190, 278, 712, 1012, 1108], "multiprocess": [186, 190, 240, 282, 283, 309, 1108, 1165, 1172, 1176], "truli": [186, 190, 1108], "chri": [186, 190, 211, 1108], "wilcox": [186, 190, 211, 1108], "frontier": [186, 190, 263, 287, 309, 1108], "whop": [186, 190, 263, 287, 309, 999, 1108, 1115], "covid": 186, "apart": [186, 246, 283, 402, 668, 908, 1010], "ipykernel_launch": [187, 239, 242, 322], "57bd7d77": 187, "6e54": 187, "4dcd": 187, "b7a8": 187, "452f82f88569": 187, "welt": [187, 197, 210, 337, 360, 1156, 1177], "doku": [187, 197, 264], "aeh": 187, "__doc__": [187, 210, 213, 223, 226, 229, 234, 236, 239, 242, 246, 249, 252, 255, 264, 267, 274, 288, 306, 310, 316, 322, 335, 337, 1008, 1036, 1059], "interaktiven": 187, "modu": 187, "formatierung": [187, 197, 257], "\u00fcbernimmt": 187, "nachdem": [187, 197], "welch": [187, 227], "hamma": 187, "bieten": [187, 1175], "sech": [187, 197, 210, 242, 249, 274, 288], "zurueck": [187, 246, 284], "objektidentit\u00e4t": [187, 205], "0x7fe9d8578dc0": 187, "referenzieren": 187, "wechselt": 187, "zeigt": [187, 197, 1172], "identit\u00e4t": 187, "0x7fe9c4454d90": 187, "listen": [187, 193, 198, 199, 203, 238, 257, 310, 342, 794, 909, 925, 1124, 1171, 1176, 1178], "ausdrucksstark": 187, "trotzdem": [187, 1165, 1172], "lesbar": [187, 236], "beid": [187, 202, 218, 322, 1179], "modifizieren": 187, "modifik": 187, "sichtbar": [187, 360], "gerechnet": 187, "valueerror": [187, 197, 213, 219, 226, 234, 236, 239, 242, 246, 249, 252, 255, 267, 274, 288, 306, 310, 316, 322, 1007, 1054], "typeerror": [187, 223, 226, 229, 234, 236, 239, 242, 246, 249, 252, 264, 267, 274, 284, 288, 306, 310, 316, 322, 336, 1006, 1007, 1020, 1027, 1050, 1059, 1129, 1130], "gel\u00f6scht": 187, "retten": 187, "uff": 187, "140641996429568": 187, "\u00e4ndern": [187, 199, 1179], "erzeugt": [187, 197], "operanden": 187, "unver\u00e4ndert": 187, "new_l": [187, 242, 1040], "140641996429632": 187, "hurra": [187, 204, 267], "killerfeatur": 187, "abcabc": [187, 226], "sequentiel": [187, 197, 236, 241, 1160], "suche": 187, "Suche": [187, 199, 210, 218, 236], "umst\u00e4ndlich": [187, 197], "andrea": [187, 188, 246, 688, 695], "pfeifer": 187, "gefundener_us": 187, "glauben": 187, "klammern": 187, "begrenz": 187, "interpretiert": 187, "overriden": 187, "ausdruck": 187, "evaluierungsreihenfolg": 187, "9223372036854775808": 187, "einstellig": 187, "schreibt": [187, 898, 1179], "datenmengen": 187, "abzulegen": 187, "sucht": 187, "solchen": [187, 197], "vorstellungsvermoegen": 187, "milliarden": 187, "sebastian": 187, "hugo": [187, 229], "machma": 187, "behandeln": 187, "nichtvorhandensein": 187, "ausnahm": 187, "regel": 187, "mim": 187, "victor": 187, "festzustellen": 187, "evaluiert": 187, "aufgerufen": 187, "operand": [187, 204, 223, 226, 252, 386, 387, 388, 394, 585, 586, 588, 589, 684, 717, 1027, 1041], "bereit": [187, 198, 1155, 1160, 1171], "gesamtergebni": 187, "jaja": [187, 242], "rechten": 187, "sparen": 187, "potschert": [187, 199, 202, 205, 229, 236, 249, 316], "berechnung": [187, 236], "summ": [187, 210, 236, 242, 246, 249, 274, 299, 322], "einzig": [187, 495, 509, 1174, 1177], "iteriert": [187, 197], "bildet": [187, 242], "primitiveren": 187, "intelligenteren": 187, "0x7fe9c43c3c90": 187, "letzt": [187, 202, 247], "schleif": [187, 198, 199, 203, 1171], "jede": [187, 342, 347, 1155, 1178, 1179], "selb": [187, 197], "k\u00fcrzer": 187, "vergleicht": 187, "objektidentit\u00e4ten": 187, "objektinhalt": 187, "modifiziert": 187, "kopieren": [187, 342, 347, 1160], "vermeintlich": 187, "modifiktionen": 187, "sch\u00fctzen": 187, "l3": [187, 204, 236, 242, 252, 264, 274, 284, 294, 316, 489], "kopi": [187, 236], "klar": [187, 197, 1156], "geschachtelt": [187, 198, 199, 1171], "gleicher": 187, "referenziert": [187, 197], "erachtet": 187, "ersparst": 187, "kopien": 187, "ran": [187, 259, 309, 457, 474, 523, 524, 525, 526, 587, 726, 1001, 1148], "parametern": [187, 210], "beliebigen": [187, 898], "definieren": 187, "vergleichbar": 187, "unterst\u00fctzen": 187, "ihn": [187, 246], "\u00e4pfel": 187, "birnen": 187, "verglichen": 187, "hingegen": [187, 197, 1174], "php": [187, 217, 233, 729], "falschem": 187, "uebergeben": 187, "vergleich": [187, 210, 218, 247, 257], "aepfeln": 187, "140641996137808": 187, "add_to_list": 187, "__defaults__": [187, 236, 246, 267, 288, 1050], "meine_list": [187, 197], "defaultwert": 187, "benutzt": [187, 1165], "allerhand": 187, "seiteneffekten": 187, "aufpassen": 187, "ewig": 187, "existierend": 187, "unf\u00e4ll": 187, "wechselwirkungen": 187, "eventuellen": 187, "globalen": [187, 197], "156": [187, 197, 204, 226, 229, 234, 236, 239, 242, 246, 249, 252, 264, 267, 284, 288, 294, 306, 310, 316, 322], "erzwingt": 187, "158": [187, 197, 204, 213, 226, 229, 234, 236, 239, 242, 246, 249, 252, 255, 264, 267, 271, 284, 288, 294, 306, 310, 316, 322], "160": [187, 197, 204, 213, 226, 229, 234, 236, 242, 246, 249, 264, 267, 278, 284, 288, 294, 306, 310, 316, 322, 456, 763], "gesucht": 187, "genauer": 187, "n\u00e4chst\u00e4u\u00dferen": 187, "162": [187, 197, 204, 226, 229, 234, 236, 239, 242, 246, 249, 252, 264, 267, 284, 288, 294, 306, 310, 316, 322], "nirgend": 187, "163": [187, 197, 204, 220, 226, 229, 234, 236, 242, 246, 249, 252, 264, 267, 284, 288, 294, 306, 310, 316, 322], "gibtsnetglob": 187, "gibtsnet": 187, "164": [187, 197, 204, 213, 226, 229, 234, 236, 242, 246, 249, 252, 264, 267, 284, 288, 294, 306, 310, 316, 322], "nameerror": [187, 202, 236, 242, 267, 288, 294, 322, 1007, 1049], "aufgabenstellung": 187, "kandidat": 187, "ersten": [187, 189, 202, 294, 334, 1157, 1177, 1179], "unsportlich": 187, "zweiten": [187, 189, 294], "unnachhaltig": 187, "dritten": [187, 294], "gelegenheit": 187, "gab": [187, 189], "erz\u00e4hlen": [187, 1158], "165": [187, 197, 204, 226, 229, 234, 236, 239, 242, 246, 249, 252, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322, 1065], "seq": [187, 205, 267, 322, 800, 972, 1010], "fromkei": [187, 233, 238, 250, 322], "166": [187, 197, 204, 226, 229, 234, 236, 242, 246, 249, 264, 267, 284, 288, 294, 306, 310, 316, 322], "167": [187, 197, 204, 226, 229, 234, 236, 239, 242, 246, 249, 252, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322], "xxx": [187, 204, 226, 234, 236, 242, 252, 274, 306, 310, 316, 322, 336, 338, 418, 494], "kksvjhbsk": 187, "sgkysdudsvvc": 187, "dict_kei": [187, 255, 284, 1056], "diesmal": 187, "169": [187, 197, 204, 213, 226, 229, 234, 236, 239, 242, 246, 249, 255, 264, 267, 284, 288, 294, 306, 310, 316, 322], "170": [187, 204, 213, 220, 226, 229, 234, 236, 239, 242, 246, 249, 252, 264, 267, 284, 288, 294, 306, 310, 316, 322], "irgendein": [187, 219], "171": [187, 204, 206, 213, 226, 229, 234, 236, 242, 246, 249, 252, 255, 264, 267, 284, 288, 294, 306, 310, 316, 322, 339], "sonst": [187, 197, 234, 236, 249], "kategori": 187, "number_str": 187, "173": [187, 204, 226, 229, 234, 236, 239, 242, 246, 249, 252, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322, 901], "ihm": [187, 189, 198], "174": [187, 204, 226, 229, 234, 236, 239, 242, 246, 249, 255, 264, 267, 284, 288, 294, 306, 310, 316, 322, 892], "176": [187, 204, 226, 229, 234, 236, 239, 242, 246, 249, 252, 264, 267, 288, 294, 306, 310, 316, 322], "177": [187, 204, 226, 229, 234, 236, 242, 246, 249, 252, 264, 267, 284, 288, 294, 306, 310, 316, 322], "178": [187, 204, 213, 226, 229, 234, 236, 242, 246, 249, 255, 264, 267, 284, 288, 294, 306, 310, 316, 322], "179": [187, 194, 204, 226, 229, 234, 236, 239, 242, 246, 249, 252, 255, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322], "180": [187, 204, 226, 229, 234, 236, 239, 242, 246, 249, 252, 255, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322, 451, 794], "181": [187, 204, 226, 229, 234, 236, 242, 246, 249, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322, 451, 1130], "heisst": [187, 199, 203, 204, 1159, 1165], "sequenz": 187, "kopiert": 187, "unterschi": [187, 204, 210, 234], "sobald": [187, 189], "183": [187, 204, 213, 226, 229, 234, 236, 242, 246, 249, 252, 255, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322], "\u00fcbergeben": 187, "184": [187, 204, 226, 229, 234, 236, 239, 242, 246, 249, 255, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322], "it1": 187, "it2": 187, "multipli": [187, 214, 227, 246, 288, 674], "n2": [187, 246], "combined_iter": 187, "186": [187, 204, 213, 226, 229, 234, 236, 239, 242, 246, 249, 252, 255, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322], "schlecht": 187, "simplen": 187, "transformationen": 187, "generieren": 187, "quadratzahlen": [187, 236], "187": [187, 226, 229, 234, 236, 242, 246, 249, 252, 255, 264, 267, 274, 284, 288, 294, 306, 310, 322], "quadrat": 187, "naeherung": 187, "performant": 187, "gen_squar": 187, "189": [187, 204, 226, 229, 234, 236, 239, 242, 246, 249, 255, 264, 267, 284, 288, 294, 306, 310, 322], "syntaktisch": [187, 210], "191": [187, 204, 213, 226, 229, 234, 236, 242, 246, 249, 252, 255, 264, 267, 284, 288, 294, 306, 310, 322], "genexpr": [187, 213, 306, 316, 322], "0x7fe9c43f2900": 187, "193": [187, 204, 213, 226, 229, 234, 236, 242, 246, 249, 252, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322], "194": [187, 204, 213, 226, 229, 234, 236, 239, 242, 246, 249, 255, 264, 267, 274, 288, 294, 306, 310, 316, 322], "195": [187, 204, 226, 229, 234, 236, 239, 242, 246, 249, 255, 267, 288, 294, 306, 310, 316, 322], "indent": [187, 202, 220, 227, 233, 242, 243, 397, 1030, 1033, 1043, 1133], "196": [187, 204, 213, 226, 229, 234, 236, 239, 242, 246, 249, 255, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322], "userlist": 187, "nochwa": [187, 236, 274], "dropdown": 187, "dropdownlist": 187, "fehleranf\u00e4llig": 187, "198": [187, 204, 213, 226, 229, 234, 236, 239, 242, 246, 249, 255, 267, 274, 284, 288, 294, 306, 310, 316, 322], "202": [187, 204, 213, 223, 226, 229, 234, 236, 239, 242, 246, 249, 252, 264, 267, 274, 288, 294, 306, 310, 322, 451, 474], "203": [187, 204, 213, 215, 226, 229, 234, 236, 239, 242, 246, 249, 264, 267, 288, 294, 306, 310, 316, 322], "205": [187, 213, 226, 229, 234, 236, 239, 242, 246, 249, 252, 264, 267, 284, 288, 294, 306, 310, 316, 322], "206": [187, 226, 229, 234, 236, 242, 246, 249, 252, 264, 267, 288, 294, 306, 310, 316, 322], "207": [187, 213, 226, 229, 234, 236, 242, 246, 249, 252, 267, 288, 294, 310, 316, 322], "208": [187, 226, 229, 234, 236, 242, 246, 249, 252, 267, 288, 294, 306, 310, 316, 322], "209": [187, 213, 226, 229, 234, 236, 242, 246, 249, 252, 264, 267, 288, 294, 306, 310, 316, 322], "user_a": 187, "user_b": 187, "n\u00e4herung": 187, "nackten": [187, 1158], "210": [187, 213, 226, 229, 234, 236, 242, 246, 249, 267, 274, 288, 294, 306, 310, 316, 322], "hantiert": [187, 1159], "anderem": [187, 1165, 1172], "211": [187, 213, 226, 229, 234, 236, 242, 246, 249, 252, 264, 267, 284, 288, 294, 310, 316, 322], "reviewten": 187, "funktionsaufruf": [187, 249], "sonder": 187, "stackoverflowprogrammierung": 187, "entgegenwirken": 187, "ausholen": 187, "212": [187, 213, 226, 229, 234, 236, 239, 242, 246, 249, 252, 264, 267, 288, 294, 306, 316, 322], "veloc": [187, 213, 338, 1050], "length_m": [187, 213, 338, 1050], "time_": [187, 213, 338, 1050], "213": [187, 226, 229, 234, 236, 239, 242, 246, 249, 252, 264, 267, 288, 294, 316, 322], "spiel": 187, "214": [187, 226, 229, 234, 236, 242, 246, 249, 252, 264, 267, 288, 294, 306, 316, 322], "liegen": 187, "positionel": 187, "215": [187, 226, 229, 234, 236, 242, 246, 249, 252, 264, 267, 274, 288, 294, 316, 322], "param": [187, 197, 210, 227, 255, 288, 680, 729, 730, 915, 971], "216": [187, 213, 226, 229, 234, 236, 242, 246, 249, 264, 267, 274, 288, 294, 306, 310, 316, 322], "217": [187, 226, 229, 234, 236, 239, 242, 246, 249, 252, 267, 274, 284, 288, 294, 306, 310, 316, 322], "218": [187, 226, 229, 234, 236, 239, 242, 246, 249, 252, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322], "219": [187, 213, 226, 229, 234, 236, 242, 246, 249, 252, 264, 267, 284, 288, 294, 306, 316, 322], "entpacken": 187, "positionellen": 187, "221": [187, 213, 226, 229, 234, 236, 242, 246, 249, 252, 264, 267, 274, 284, 288, 294, 306, 310, 322], "kwarg": [187, 213, 240, 242, 246, 267, 288, 1005, 1009, 1030], "explizi": 187, "rauskletzeln": 187, "223": [187, 226, 229, 234, 236, 239, 242, 246, 249, 252, 267, 274, 288, 294, 306, 310, 316, 322, 1121], "celebrate_another_birthdai": 187, "224": [187, 226, 229, 234, 236, 239, 242, 246, 249, 252, 267, 274, 288, 294, 310, 316, 322], "227": [187, 226, 229, 234, 236, 242, 246, 249, 252, 267, 274, 284, 288, 294, 306, 316, 322], "228": [187, 226, 229, 234, 236, 239, 242, 246, 249, 252, 267, 274, 288, 294, 306, 316, 322], "zeiterfassung": 188, "__pycache__": [188, 214, 227], "supp": 188, "cpython": [188, 213, 223, 229, 239, 242], "pyc": 188, "dienstag": 189, "anleitung": 189, "offen": [189, 360, 1155], "vorwissen": [189, 1160], "konkreten": [189, 360], "aufgabenstellungen": 189, "dienstgeb": 189, "mitgebracht": 189, "quickstart": [189, 1166], "vorgetragen": 189, "wenngleich": [189, 360, 1165, 1175, 1177, 1178], "un\u00fcblichen": 189, "reihenfolg": [189, 1156], "verbrachten": 189, "firmenprojekt": 189, "entspringenden": 189, "festgehalten": 189, "empfehlungen": 189, "weitergehen": 189, "k\u00f6nnte": [189, 1179], "idiomat": [189, 190, 193, 211, 214, 221, 237, 240, 263, 287, 1108], "lieblingsphras": 189, "bringt": [189, 1158, 1177], "forgiv": [189, 190, 287, 1108], "eafp": [189, 190, 287, 1108], "begriff": [189, 203], "viertelstund": 189, "regex": [189, 202, 227, 229, 254, 255, 264, 287, 294, 322, 1052, 1108], "unumg\u00e4nglich": [189, 1173], "textuel": 189, "analysieren": 189, "hero": [189, 190, 211, 214, 237, 263, 287, 309, 1108], "unterhaltsamen": 189, "keynot": [189, 190, 211, 214, 237, 240, 263, 287, 309, 1108], "konferenz": 189, "pydata": [189, 190, 211, 214, 237, 263, 287, 309, 1108], "chicago": [189, 190, 211, 214, 237, 263, 287, 309, 1108], "witzig": 189, "kommt": [189, 204, 214, 217, 243, 1168, 1177, 1179], "selten": 189, "l\u00e4nge": 189, "ganzen": [189, 198, 1171], "abend": 189, "totalschaden": 189, "\u00fcbertragen": 189, "jedem": 189, "angemeldet": 189, "experienc": [190, 279, 281, 308, 360, 1036, 1166], "machinelearn": 190, "fuzzi": [190, 229], "improvis": 190, "shall": 190, "jango": 190, "rush": 190, "strong": [190, 240, 387, 1115, 1117], "claus": [190, 193, 223, 229, 239, 244, 266, 689, 1010, 1043, 1046], "whet": [190, 273], "appetit": [190, 273], "get_temperatur": [113, 190, 242, 305, 468, 471, 472, 474, 479, 481, 491, 492, 497, 499, 500, 502, 505, 506, 510, 513, 518, 519, 520, 521, 525, 526, 527, 538, 556, 677, 725, 726, 727, 728, 747, 749, 751, 752, 753, 754, 1020, 1096], "__dict__": [190, 210, 213, 214, 226, 227, 236, 239, 242, 246, 255, 267, 284, 288, 306, 1021, 1027], "con": [190, 747, 895, 1001], "fiction": 190, "get_temperature_celsiu": 190, "competitor": 190, "eana": 190, "get_temperature_fahrenheit": 190, "eanaadapt": 190, "unserthermomet": 190, "revisit": [190, 232, 240, 263, 281, 305, 602], "shift": [190, 231, 427, 439, 571, 620, 915, 1027], "visitor": [190, 743, 752, 754], "gang": [190, 1164], "idiom": [190, 568, 705], "classic": [190, 426, 477, 568, 748, 762, 763, 802, 1164], "travers": [190, 440, 713, 725, 1007, 1012, 1048], "convolut": 190, "__call__": [190, 236, 246, 267, 288, 294, 1006], "__str__": [190, 213, 214, 227, 236, 239, 242, 246, 264, 267, 288, 305, 306, 353, 1007], "__repr__": [190, 236, 239, 242, 246, 264, 267, 288, 306], "poor": [190, 232, 380, 395, 404, 411, 417, 421, 424, 428, 437, 441, 446, 447, 669, 707, 760, 762, 763, 800, 907, 937, 982], "deleg": [190, 319, 577, 707, 762, 763, 1161], "deck": [190, 215, 545], "sensordata": 190, "sensordata_test": 190, "historydata": 190, "slowli": [190, 562, 667, 792, 907], "csvreport": 190, "csv2sqlite3": 190, "frontend": [190, 578, 984, 1002, 1137], "flaskerl": 190, "reiter": [190, 211, 230, 232, 237, 240, 350, 579, 1108], "phrase": [190, 193, 211, 234, 236, 237, 240, 242, 267, 837, 838, 1025, 1108], "impress": [190, 425], "brought": [190, 439, 1016], "cloth": 190, "extraordinari": 190, "mondai": [191, 193, 195, 196, 221, 270, 276, 279, 281], "preliminari": [191, 193, 194, 195, 196], "homogen": [191, 360], "versu": [191, 193, 195], "immut": [191, 193, 195, 197, 198, 205, 212, 214, 225, 226, 227, 229, 235, 241, 244, 250, 256, 265, 273, 275, 276, 289, 306, 310, 317, 323, 337, 409, 1031, 1038, 1039, 1040, 1044, 1171], "datastructur": [191, 215, 233, 1044], "exercise4": 191, "uh2ebfw8oym": [191, 195], "f26namfjggw": 191, "5qqq3yzbkp8": 191, "ugharkscop9uthgcoaec": 191, "pairwis": [192, 226, 584], "vale": 192, "bewar": [192, 388, 914, 982, 1113, 1115], "cheaper": [192, 439, 586, 588, 589, 667], "memorywis": 192, "johann": 192, "syntact": [192, 213, 396, 539, 579, 667, 719], "sugar": [192, 667, 719], "allow": [192, 193, 213, 242, 382, 449, 654, 727, 761, 792, 815, 1070, 1141, 1161], "retval": [192, 435, 625, 953], "dlc": 192, "msg1": 192, "readabl": [192, 236, 246, 280, 375, 406, 410, 430, 431, 432, 439, 449, 451, 510, 624, 645, 660, 668, 671, 706, 717, 719, 725, 730, 731, 845, 855, 861, 866, 870, 892, 917, 984, 1010, 1029, 1050, 1058, 1060, 1079], "0x7f41f5ff26a0": 192, "msglist": 192, "0x7f41f5ff4160": 192, "0x7f41f5ff41c0": 192, "291130": 192, "now_timestamp": 192, "1603884859": 192, "3412576": 192, "fromtimestamp": 192, "341258": 192, "372": [192, 229, 236, 274, 322], "45259": 192, "microsecond": [192, 430, 847], "programmverweis": 193, "xy": [193, 236, 239, 274, 587, 1048], "zab": 193, "eventcodefil": 193, "definedlisaev": 193, "event_id": 193, "bla": [193, 316, 322], "blubb": 193, "verbessert": 193, "stringformatierung": 193, "ctype": 193, "headerfil": [193, 898], "lst": [193, 229, 852, 1156], "callbackfunc": 193, "datetim": [193, 214, 220, 221, 222, 227, 275, 278, 315, 316, 1065], "observ": [193, 262, 280, 327, 466, 473, 487, 490, 501, 515, 567, 763, 1013, 1014, 1120, 1164], "longish": 193, "resurrect": [193, 452, 870], "outputsequ": 193, "resist": 193, "uncondition": [193, 813, 1007], "suitabl": [193, 242, 288, 783, 907, 956, 1020, 1029], "analysi": [193, 439, 748, 1110, 1113, 1126], "cp1252": [193, 1102, 1103, 1105], "csvlog": 193, "csv_reader": 193, "recv": [193, 194, 910], "tuesdai": [194, 276, 291], "246": [194, 226, 229, 234, 236, 239, 242, 249, 267, 284, 288, 294, 316, 322, 1121], "corpor": [194, 267], "commandin": [194, 196], "comress": [194, 196], "gzip": [194, 196, 260, 269, 290, 291, 763, 810, 833, 835, 836, 840, 906, 994, 995, 1167], "diagnos": [194, 196, 343, 344, 1165, 1172], "netstat": [194, 196, 269, 290, 291, 1124, 1165, 1172], "netcat": [194, 196, 269, 290, 291], "subshel": [194, 196, 206], "telnetd": 194, "insecur": [194, 923], "proto": 194, "foreign": [194, 270, 410], "34490": 194, "56062": 194, "sshd": [194, 226, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322, 842, 846, 848, 901, 917, 927], "systemctl": [194, 998, 1124], "freedesktop": 194, "systemd1": 194, "quickli": [194, 281, 296, 308, 309, 312, 345, 409, 469, 915, 1163], "unprivileg": 194, "putti": [194, 206, 339], "puttygen": 194, "id_rsa": [194, 923], "authorized_kei": [194, 923], "trivia": 194, "hoorai": [194, 239, 252, 274, 1043], "idiot": 194, "blinker": 194, "briana": 194, "mac": [194, 211, 227, 870, 1034, 1108, 1144], "wakeup": [195, 232, 309, 353, 357, 739, 763, 806, 906, 915, 934, 947, 957, 967, 969], "patrick": 195, "1996": [195, 229], "wagna": 195, "gernot": 195, "1982": [195, 229], "birthplac": 195, "txt2json": 195, "equip": [196, 270, 350, 907, 1165, 1172], "wobei": 197, "deppert": [197, 210, 337], "sidestep": 197, "builtin_function_or_method": [197, 267, 294, 316], "sozusagen": 197, "genauso": [197, 1155], "aufrufen": [197, 898], "zaehler": 197, "initialwert": 197, "zaehlen": 197, "naechsten": 197, "schleifendurchlauf": 197, "locker": [197, 808], "mein_integ": 197, "1024": [197, 229, 841, 847, 870, 932], "sch\u00fctzt": 197, "passen": [197, 264], "gehandhabt": 197, "1267650600228229401496703205376": [197, 223, 226, 234, 246, 252, 274], "hoch": 197, "rechnen": [197, 342, 347], "tut": [197, 306, 337, 1158], "ausschliesslich": [197, 1167], "ganzzahldivis": 197, "ganzzahligen": 197, "resultat": 197, "gleichen": [197, 1165, 1178], "vorrang": 197, "ghi": [197, 236, 322], "viert": 197, "nwelt": 197, "nwie": 197, "linefe": [197, 206, 227, 234, 371, 372, 1052, 1058, 1088, 1133], "bedeutung": [197, 1160, 1167], "unangetastet": 197, "glump": 197, "nebenlaeufigkeitsdemo": 197, "ebenlaeufigkeitsdemo": 197, "l\u00f6sung": [197, 210, 219, 360, 909], "formatierungsm\u00f6glichkeit": 197, "pfx_var1": 197, "pfx_var2": 197, "ausgab": [197, 1158], "notwendig": [197, 1157, 1173, 1174], "abzubrechen": 197, "ignorieren": [197, 198, 204, 1171], "gefunden": [197, 267, 898], "value1": [197, 1068], "501": [197, 229, 322, 1068], "value2": [197, 1068], "799": [197, 226, 229, 1065, 1068], "value3": [197, 1068], "sprachen": [197, 198, 1158, 1171], "neg": [197, 242, 246, 316, 388, 430, 435, 647, 788, 901, 1148], "indiz": 197, "erscheinen": 197, "komisch": 197, "bequem": 197, "mapping_t": 197, "f\u00fcnf": [197, 1165], "sieben": [197, 210, 236, 625], "neun": [197, 322], "explicit": [197, 216, 223, 227, 236, 244, 246, 385, 394, 422, 435, 439, 452, 494, 495, 508, 509, 545, 571, 573, 574, 598, 624, 667, 668, 677, 684, 689, 697, 704, 709, 724, 727, 781, 936, 950, 982, 1002, 1003, 1033, 1036, 1039, 1116, 1129], "implicit": [197, 223, 236, 246, 375, 381, 385, 550, 666, 668, 684, 870, 939, 1025, 1039], "primzahlen": 197, "checken": 197, "primzahl": [197, 198, 1171], "checkenden": 197, "zahl": [197, 204, 210, 235, 236, 239, 249, 337], "probier": 197, "gach": [197, 236], "teiler": 197, "teiler_kandidaten": 197, "prim": 197, "gleichema\u00dfen": 197, "vollst\u00e4ndigkeit": 197, "halber": 197, "startend": [197, 236], "schrittweit": 197, "0x7f24f2ac0e50": 197, "ablegen": 197, "0x7f24f2ac0e70": 197, "arschlangsam": 197, "num_comparison": 197, "datenstruktur": [197, 218], "suchen": [197, 218, 897, 1160, 1167], "einf\u00fcgen": [197, 1165], "optimiert": [197, 210], "perfekt": 197, "einitreten": 197, "himmi": 197, "list_reverseiter": [197, 226, 249, 274], "0x7f24ec31d190": 197, "bricht": 197, "beinhart": 197, "liefert": [197, 1167], "lieber": 197, "zweit": [197, 210, 236, 267, 306, 322, 337, 1165], "po": [197, 236, 242, 246, 267, 272, 284, 288, 310, 316, 451, 527, 620, 647], "wirklichkeit": 197, "ordin\u00e4r": 197, "alternativen": 197, "fruit": 197, "gemma": 197, "divisor_candid": 197, "161": [197, 204, 226, 229, 234, 236, 239, 242, 246, 249, 252, 264, 267, 284, 288, 294, 306, 310, 316, 322], "wegen": 197, "dogma": 197, "zugewiesen": 197, "meine_vari": 197, "eine_vari": [197, 274, 284, 316], "angelegt": 197, "streng": 197, "obigem": 197, "dazusagen": 197, "noch_eine_globale_vari": 197, "increment_diese_vari": 197, "offiziel": [198, 200, 208, 211, 214, 215, 217, 233, 245], "leitfaden": 198, "kommentar": [198, 199, 210, 274, 337, 1171], "platziert": [198, 218], "hackereien": 198, "gleicherma\u00dfen": 198, "sogenannten": 198, "semantik": [198, 199, 1171], "sprach": [198, 199, 1158, 1159, 1160, 1171, 1172, 1179], "standarddatentypen": [198, 199, 1171], "literal": [198, 199, 257, 1171], "python2": [198, 236, 1171], "endg\u00fcltig": [198, 1171], "rausl\u00f6schen": [198, 1171], "konstanten": [198, 199, 1171], "typen": [198, 204, 1167, 1171, 1177], "operatoren": [198, 199, 898, 1160, 1171], "angeschnitten": [198, 1171], "vertiefung": [198, 214, 1171], "nocheinm": [198, 360, 1171], "ausdr\u00fcck": [198, 199, 257, 1171], "operatorrangfolgen": [198, 199, 1171], "grundlegenden": [198, 343, 1167, 1171], "sprachelementen": [198, 1171], "rede": [198, 1171], "syntaxdiagramm": [198, 1171], "gespritzt": [198, 1171], "gesamt": [198, 1171], "sperrig": [198, 1171], "n\u00fctzt": [198, 1171], "menschlich": [198, 1171], "abzubilden": [198, 1171], "tabel": [198, 1171], "anweisungen": [198, 199, 1171], "gro\u00dfen": [198, 1171], "fisch": [198, 1171], "instruktiv": [198, 1171], "bedingungen": [198, 199, 1157, 1171], "verzweigungen": [198, 199, 1171], "bedingt": [198, 199, 1158, 1171], "anweisung": [198, 199, 1171], "formulierungen": [198, 1171], "mehrfach": [198, 199, 1171], "fallauswahl": [198, 199, 1171], "benutzereingaben": [198, 1171], "\u00fcberpr\u00fcfen": [198, 1171], "schleifenkonstrukt": [198, 1171], "weitgehend": [198, 1171], "unserem": [198, 1171], "vehikel": [198, 1171], "hilfreich": [198, 1167, 1171], "klarstellung": [198, 1171], "fu\u00dfgesteuert": [198, 199, 1171], "z\u00e4hlergesteuert": [198, 199, 1171], "auslassen": [198, 1171], "kopfgesteuert": [198, 199, 1171], "gewinnt": [198, 1171], "konsol": [198, 1171], "anzeigen": [198, 1167, 1171], "voraussetzung": [198, 1171], "ausblick": [198, 1171], "schnell\u00fcbersicht": [198, 199, 1171], "sprunganweisungen": [198, 199, 1171], "endlosschleifen": [198, 199, 1171], "naja": [198, 1171], "reinschauen": [198, 1171], "mager": [198, 1171], "ausgelassen": [198, 1171], "eindimensional": [198, 199, 1171], "gefolgt": [198, 236, 1171], "zeichenketten": [198, 199, 1171], "tupel": [198, 199, 202, 1171], "besonder": [198, 199, 1171], "stapel": [198, 199, 1171], "schlangen": [198, 199, 1171], "tempo": [198, 1171], "schauma": [198, 204, 1171], "fallt": [198, 1171], "gscheit": [198, 205, 316, 1171], "gemeinsam": [198, 1155, 1157, 1171, 1174], "dr\u00fcber": [198, 1171], "vielzahl": [198, 1171, 1175, 1178], "l\u00f6sungsm\u00f6glichkeiten": [198, 1171], "eingegangen": [198, 1155, 1171, 1175], "pythonischst": [198, 1171], "bestritten": [198, 1171], "unterprogramm": [198, 199, 1171], "parameter\u00fcbergab": [198, 199, 1171], "r\u00fcckgabewert": [198, 199, 1171], "inner": [198, 199, 219, 451, 1006, 1171], "standardbibliotheken": [198, 199, 1171], "funktionalit\u00e4ten": [198, 199, 1171], "berechnet": [198, 234, 242, 1171], "satz": 198, "gepr\u00e4gt": 198, "konferenzen": 198, "definitiv": 198, "sehenswert": 198, "anf\u00e4nger": [198, 1174], "hochinteress": 198, "sprachelement": 199, "elementar": 199, "beliebig": [199, 234, 1172], "gro\u00df": [199, 1177], "vergleichsoperatoren": 199, "strichrechnung": 199, "modulo": [199, 210, 223, 229, 234, 242, 337, 386, 1027, 1039], "un\u00e4rer": 199, "negat": [199, 223, 246, 899, 1027, 1039, 1057], "konvertierungen": [199, 1158], "pr\u00e4zendenzregeln": 199, "vertauschen": [199, 210, 337], "kontrollstrukturen": [199, 235, 1158], "verzweigung": 199, "schleifen": [199, 257, 1157], "versuch": [199, 211, 322], "hybrid": [199, 641], "supergscheit": 199, "prozeduren": 199, "funktionen": [199, 203, 257, 343, 1157, 1158, 1160, 1168], "funktionspoint": 199, "funktionsobjekt": 199, "primzahlenbeispiel": 199, "laufzeitfehl": 199, "lokal": [199, 210, 256, 257, 1178], "zuweisen": 199, "fehlerfal": 199, "anschliessend": 200, "interaktiv": 200, "uebungen": 200, "idealerweis": [200, 274], "ueblichen": 200, "negoti": 201, "deiniti": [201, 788, 1166], "unload": [201, 790, 804, 806, 1166], "synchronizt": 201, "spinlock": [201, 763, 787, 802, 808, 812, 814, 818, 819, 825, 828, 829, 831, 906, 970, 1166], "rcu": 201, "halv": 201, "softirq": 201, "tasklet": [201, 808], "irss": 201, "kmalloc": [201, 763, 772, 777, 780, 781, 782, 787, 791, 800, 801, 805, 807, 814, 819, 822, 825, 828, 831, 906], "dma": [201, 763, 787, 805, 807, 849, 906, 931, 932, 933, 1166], "coher": [201, 781], "20201125": [202, 204], "unbekannten": 202, "lookup_t": [202, 205, 337], "12345": [202, 234, 246, 274, 322, 1142], "noch_eine_list": 202, "gesamte_list": 202, "vorl\u00e4ufig": 202, "letz": 202, "indented_text": 202, "nebenbei": [202, 204, 337], "eine_zum_sterben_verurteilte_vari": 202, "ein_set": 202, "sequenzen": 202, "grottenlangsam": 202, "subscript": [202, 236, 306, 415, 602, 623, 627, 1129], "multiple_return_valu": 202, "xyz": [202, 204, 210, 229, 236, 267], "mein_formatierter_str": 202, "my_rang": [202, 242, 288, 294, 316], "retlist": 202, "zeichenkett": 202, "funktionieren": [202, 1160, 1178], "my_list": [202, 213, 255], "airms_eth": 202, "simplizistisch": 202, "bl\u00f6d": 202, "i_oder_v": 202, "iv": 202, "rms_eth": 202, "vorcompilieren": 202, "acirms_eth": 202, "my_regex": 202, "zeilennumm": 202, "dazuhaben": 202, "meine_zu_sendenden_daten": 202, "345": [202, 223, 229, 242, 274, 306, 316, 322], "234": [202, 226, 229, 234, 236, 239, 242, 246, 249, 252, 267, 284, 288, 294, 306, 310, 316, 322, 337], "meine_zu_sendenden_daten_in_string_form": 202, "ueblicherweis": 202, "ueber": 202, "verschickt": 202, "empfangen": [202, 217], "geschrieben": [202, 1178], "empfaeng": 202, "empfangenen": 202, "natuerlich": 202, "zurueckkonvertieren": 202, "meine_empfangenen_daten_python_form": 202, "gegangen": [202, 255], "wurscht": [202, 242, 316, 898], "returnwerten": 203, "containerdatentypen": 203, "untypisiert": 203, "zeilen": [204, 246, 1167], "neiner": 204, "nund": [204, 223], "nb": 204, "stoppt": 204, "newlin": [204, 206, 219, 242, 267, 284, 333, 364, 371, 384, 1036, 1052], "ndrin": 204, "drin": [204, 205, 210, 246, 274, 284, 322, 337, 342], "zuviel": [204, 1160], "mischt": 204, "unsupport": [204, 226, 252, 1027], "140546731085392": 204, "0x7fd395fb0e50": 204, "0x7fd3900395b0": 204, "new_t": [204, 1040], "0x7fd390052800": 204, "667": [204, 226, 229, 249, 255, 562], "2923750584022716461": 204, "529344067295497451": 204, "unhash": [204, 264, 274, 288, 316], "fuenf": [204, 226, 236, 264, 274, 288, 306, 322, 337], "verschluckt": 204, "6000000": 204, "elementen": [204, 218], "nonetyp": [204, 214, 228, 229, 284, 294, 306, 322], "_io": [204, 223, 226, 229, 239, 242, 274, 288, 322, 334, 812], "textiowrapp": [204, 223, 226, 229, 239, 242, 274, 288, 322, 334, 1005], "oi": 204, "456": [204, 205, 229, 236, 274, 322, 384], "hansi": [204, 242, 246, 249], "linspac": [204, 310], "11111111": 204, "22222222": 204, "33333333": 204, "44444444": 204, "55555556": 204, "66666667": 204, "77777778": 204, "88888889": 204, "sin": 204, "8961922": 204, "79522006": 204, "19056796": 204, "96431712": 204, "66510151": 204, "37415123": 204, "99709789": 204, "51060568": 204, "54402111": 204, "plot": [204, 223, 252, 255, 306, 310, 316, 1004, 1062, 1114, 1115], "line2d": [204, 252, 255, 306, 310, 316], "0x7fd35cd3ef40": 204, "splev": 204, "splrep": 204, "spline": 204, "represent": [204, 223, 242, 713, 820, 914, 915], "spl": 204, "evalu": [204, 223, 228, 234, 244, 367, 387, 392, 394, 402, 409, 410, 488, 489, 502, 503, 674, 684, 853, 870, 1007, 1041, 1043, 1050, 1148], "x2": [204, 246], "y2": 204, "0x7fd341a486d0": 204, "speicher": [205, 1158, 1165, 1172], "sch\u00fctze": 205, "gemischten": 205, "operationen": [205, 1177], "interpol": [205, 246, 1113], "lag": 205, "gib": [205, 284], "depp": [205, 234], "ret_l": 205, "uniq_l": 205, "read_excel": [205, 1113], "invit": [206, 641], "effici": [206, 251, 305, 399, 438, 440, 442, 603, 607, 617, 620, 722, 854, 901, 903, 1012, 1115, 1126, 1129, 1166], "expans": [206, 898, 899, 1157], "ecdsa": [206, 339], "fingerprint": [206, 339, 918, 969], "sha256": [206, 339, 918], "in22o4vcd400x0bb4flcb5": [206, 339], "vqnrvkvoirgfqq6mapo": [206, 339], "perman": [206, 339], "individu": [206, 339, 391, 449], "sat": [206, 339], "straight": [206, 689, 1130], "startung": 206, "standpoint": 206, "suboptim": [206, 255], "pwned": 206, "hidden": [206, 480, 675, 783, 984], "clumsi": [206, 232, 233, 273, 276, 465, 469, 569, 577, 585, 598, 625, 667, 730, 1004, 1005, 1021, 1022, 1129, 1161], "clumsier": 206, "dumpbin": 206, "hmoe": 206, "frcoll": 206, "bunch": [206, 731, 837, 996, 1020], "oom": [206, 226, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322, 1011], "killer": [206, 226, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322, 1045], "amoc": 206, "snapshot": [206, 709, 742, 848, 996], "tinkernut": 206, "raspberi": 206, "awesom": [206, 1141], "tunnel": [206, 272, 917, 925, 936], "centric": [206, 1166], "virtualbox": [206, 849], "cygwin": [206, 259, 261, 279, 849], "assort": 206, "nano": 206, "univers": [206, 281, 526, 936, 1033, 1166], "scripe": 206, "voellig": 210, "wohl": [210, 294, 1158, 1179], "selbsterklaerend": 210, "printet": 210, "builtin": [210, 216, 223, 229, 230, 239, 242, 246, 267, 288, 305, 306, 316, 322, 870, 1008], "accur": [210, 242, 246, 267, 288, 444], "__weakref__": [210, 226, 236, 239, 242, 246, 255, 267, 288, 306], "weak": [210, 242, 246, 267, 288, 306, 728, 1115], "_abc": [210, 223, 229, 239, 242], "_1": [210, 730, 731], "a123": 210, "vernichten": 210, "laufzeit": 210, "140032702361168": 210, "refcount": [210, 726, 728, 1005, 1161], "dezim": 210, "oktal": 210, "0o755": [210, 246, 337], "493": [210, 229, 246, 322], "0b11": [210, 246, 249], "sql": [210, 221, 233, 1117, 1120], "0b11111111": 210, "ordnung": 210, "uhrzeit": 210, "vormittag": 210, "6666666666666666": [210, 246], "nda": [210, 264], "python_dir": 210, "jan": [210, 239, 242, 333, 334, 351, 384, 774, 866, 892, 950, 984, 998, 1007, 1035], "lowercas": [210, 242, 288, 870, 917, 1053, 1070, 1075], "140032636418048": 210, "ein_iterierbares_d": 210, "extraw\u00fcrschtl": 210, "sex": [210, 223, 245, 246, 1070], "diver": 210, "translation_t": [210, 246, 249, 252, 322], "bag": [210, 258, 259, 261, 452, 462, 760, 762, 763, 978, 1040], "green": [210, 246, 491, 526, 527, 587, 907], "blue": [210, 218, 226, 246, 1065], "mengenoperationen": 210, "set1": 210, "set2": 210, "symm_diff": 210, "lisa": 210, "eugeni": [210, 213], "okan": 210, "mcguir": 210, "sinner": 210, "vornam": [210, 218, 219], "nachnam": [210, 218, 219], "persnr": 210, "personalnumm": 210, "5000": [210, 223, 229, 1024], "4000": [210, 229], "3000": [210, 223, 229, 249, 288], "15000": [210, 229], "uppercas": [210, 242, 288, 870, 1053, 1070], "verfuegbar": 210, "restlichen": 210, "gehaelt": 210, "konstant": [210, 218, 241], "unexpect": [210, 429], "pcap": [211, 231], "certifi": 211, "math": [211, 214, 224, 226, 227, 229, 237, 246, 251, 254, 287, 293, 316, 569, 571, 1033, 1108], "statist": [211, 224, 237, 246, 251, 254, 287, 293, 443, 972, 1092, 1108, 1113, 1141], "undo": [211, 870, 1108], "brad": [211, 1108], "traversi": [211, 1108], "evaluierung": 212, "eval": [212, 240, 241, 250, 268, 282, 283, 288, 295, 304, 307, 308, 1029], "openfil": 213, "hanld": 213, "soemth": [213, 824], "zf": [213, 322], "namelist": 213, "zipdemo": 213, "extracted_nam": 213, "isinst": [213, 214, 227, 229, 242, 255, 267, 1027, 1130], "superclass": [213, 214, 227, 242], "subclass": [213, 214, 227, 242, 246, 1007, 1024], "class1": 213, "class2": 213, "salari": 213, "selina": 213, "orgl": 213, "8010": [213, 229, 451], "birth": [213, 239, 252, 569, 761, 1097, 1098, 1099, 1100, 1103, 1104, 1105], "1622102062": 213, "4778333": 213, "019427776336669922": 213, "009679079055786133": 213, "daniel": [213, 216, 333, 334, 351], "ortner": 213, "num_employe": 213, "__first": 213, "__last": 213, "__address": 213, "_person__first": 213, "_person__last": 213, "_person__address": 213, "_first": 213, "_last": 213, "_address": 213, "do_debug": 213, "val": [213, 242, 730, 915], "ueberhaupt": 213, "l_float": 213, "0x7fd9881b04a0": 213, "functool": [213, 280], "wrapper": [213, 242, 252, 257, 294, 316, 472, 670, 695, 930, 978, 1006, 1027, 1110], "komplexen": 213, "testfil": 213, "nzeil": [213, 242, 310], "seek": [213, 288, 322, 334], "nth_fibo": 213, "accomod": 213, "0x7fd9801cec10": 213, "0x7fd9801b8d60": 213, "0x7fd9801b4900": 213, "0x7fd98014cd40": 213, "gen": [213, 288], "sequenceno": 213, "kv_pair": 213, "permissionerror": [213, 229, 249, 267, 284, 1007], "deni": [213, 229, 249, 284, 322, 494, 508, 853, 889, 917, 925, 937, 942, 943, 1007, 1136], "eacc": 213, "filenotfounderror": [213, 229, 267, 1007], "64bit": 213, "utc": 213, "python_implement": [213, 214, 227], "python_version_tupl": [213, 214, 227], "python39": 213, "dynload": [213, 322], "isfil": [213, 327, 451], "isdir": [213, 451], "my_path": 213, "hopefulli": 213, "the_except": 213, "__class__": [213, 236, 239, 242, 246, 255, 264, 267, 288, 306], "__bases__": [213, 214, 227, 244], "distrust": 213, "guido": [213, 1132], "incompet": 213, "precondit": [213, 839], "abdefg": 213, "beg": [213, 410, 1008], "bdefg": 213, "stringifi": 213, "0x7ffa9c2ac3a0": 213, "formatstr": 213, "ding": [213, 243, 977], "formatierter_str": 213, "oserror": [214, 242, 267, 1007], "errno": [214, 227, 229, 249, 284, 435, 788, 937, 952, 981, 982, 999, 1007, 1136], "assertionerror": [214, 239, 255, 267, 306, 1007, 1020, 1141, 1142], "jjjj": [214, 355, 356, 448], "line_count": 214, "aud": 214, "qualifii": [214, 227], "trunc": [214, 227], "hypot": [214, 227], "seed": [214, 227, 246, 521], "ascii": [214, 227, 242, 249, 252, 267, 288, 294, 310, 316, 322, 371, 374, 377, 383, 1038, 1039, 1052, 1058, 1116], "codepoint": [214, 227], "escap": [214, 227, 242, 264, 364, 1116], "ord": [214, 227, 246, 267, 1047], "chr": [214, 227, 267], "isxxx": [214, 227], "rfind": [214, 227, 242, 288, 294, 1054], "grammar": [214, 227], "instrospect": [214, 227], "hasattr": [214, 227, 242, 255, 267, 1021, 1027], "__module__": [214, 226, 227, 236, 239, 242, 246, 255, 267, 288, 306], "bytearrai": [214, 227, 242, 267], "histogram": [214, 215, 232, 380, 395, 404, 411, 417, 421, 424, 428, 437, 441, 446, 447, 555, 556, 564, 669, 707, 760, 762, 763], "defaultdict": [214, 240, 241, 265], "make_histogram": [214, 556, 565], "fileobj": 214, "stringio": [214, 242], "8859": [214, 232, 233, 249, 252, 272, 294, 306, 310, 451], "pycon": [214, 240, 263, 287, 309, 1108], "2017": [214, 240, 263, 309, 577, 675, 726, 1108], "metaprogram": [214, 241, 263, 684, 1020, 1108, 1162], "contract": [214, 216, 263, 1108], "evolut": [214, 263, 309, 870, 1108], "unauthor": [214, 263, 309, 1108], "biographi": [214, 263, 309, 1108], "lesson": [214, 263, 309, 339, 345, 450, 713, 1000, 1108], "evolv": [214, 263, 309, 710, 1108], "assembli": [214, 263, 287, 309, 984, 986, 1108, 1163], "revolv": [214, 240, 309, 1108, 1114], "mro": [214, 240, 244, 309, 1108], "cpa": 215, "fahr": [215, 365, 367], "tomorrow": [215, 230, 349, 350], "correctli": [215, 305, 328, 427, 914, 937, 1060, 1116], "consecut": [215, 390, 719, 903], "becam": [215, 301], "44ff": 215, "gig": 215, "upcom": 215, "msi": 215, "wswitch": [215, 431, 668, 779], "wall": [215, 229, 230, 388, 438, 454, 742, 778, 779, 1150], "77ff": 215, "skip": [215, 242, 334, 452, 454, 785, 915, 985, 986, 1007, 1143], "89ff": 215, "alongsid": [215, 804], "num_us": 215, "199ff": 215, "204ff": 215, "208ff": 215, "220ff": 215, "222ff": 215, "db_get_user_at_index": 215, "298ff": 215, "strcpy": [215, 232, 377, 423, 559, 574, 577, 678, 712, 910, 968], "strlen": [215, 377, 402, 430, 574, 577, 678, 712, 948, 951, 981], "bahavior": 215, "dest": [215, 377], "strtol": 215, "stringif": [215, 1158], "db_error_str": 215, "sexi": [215, 960], "caleb": 215, "discret": [216, 246, 305, 437, 441, 446, 447, 669, 707, 760, 762, 763], "bleed": 216, "rect": [216, 418, 545], "sphere": [216, 545], "preprocessor": [216, 232, 384, 411, 417, 421, 424, 428, 433, 437, 441, 446, 447, 666, 669, 707, 760, 762, 763, 984, 1148, 1162], "julia": 216, "yesterdai": [216, 232, 240, 280], "distanc": [216, 571, 579, 580, 600, 717, 730], "has_lastnam": 216, "botton": 216, "mingw": [216, 259, 261, 279, 349, 362, 849], "resembl": 216, "tortur": 216, "functor": [216, 258, 259, 261, 318, 319, 611, 707, 708, 762, 763], "rudimentarili": [216, 1037, 1111], "gotten": [216, 743], "recourc": 216, "outright": [216, 272, 425, 1012, 1043], "geniu": [216, 272, 602, 1012, 1043], "livehackingli": 216, "zuordnung": [217, 233, 245], "bissl": 217, "commandlineargument": [217, 1157], "stoff": 217, "summenbeispiel": 217, "showcas": 217, "datenbank": 217, "formulieren": 217, "verbindung": [217, 1155, 1165, 1172, 1178], "schicken": [217, 1155], "schickman": 217, "muessen": 217, "verwandlen": 217, "fractal": [217, 233], "schatzi": 218, "zeitkomplexit\u00e4t": 218, "foreach": 218, "assozi": [218, 1160], "color_transl": 218, "gelb": 218, "yellow": 218, "hashtabl": [218, 1130], "englisch": [218, 1155], "sack": 218, "my_color": 218, "her_color": 218, "pink": 218, "gr\u00fcn": 218, "beig": 218, "vereiningungsmeng": 218, "schnittmeng": 218, "symmetrisch": 218, "differenzmeng": 218, "sei": 218, "gewesen": 218, "waer": [218, 294], "1037190666": [218, 234, 236, 242, 246, 249, 252, 255, 469, 476, 493, 494, 495, 507, 508, 509, 628, 1021], "6666010185": 218, "schwarzbauer": 218, "json_string_fuer_den_brows": 218, "response_dict": 218, "svnr": [218, 226, 229, 236, 242, 246, 249, 252, 254, 255, 294, 470, 476, 498, 504, 1021, 1125], "pprint": [218, 220, 227, 229, 264, 1008, 1116], "formatieren": 218, "endlich": 218, "transfer_string_in_php_am_serv": 218, "u00f6rg": 218, "transfer_string_in_js_am_brows": 218, "response_dict_am_brows": 218, "verwandeln": [218, 1174], "schlussendlich": 218, "geeignet": [218, 1156], "platzieren": 218, "meine_t": 218, "sozialversicherungsnumm": 218, "simmer": 219, "mein_str": 219, "sq": [219, 226, 229, 236, 246, 267, 288, 306, 310, 322], "docu": 219, "nmehrzeilig": 219, "nvon": 219, "mehrzeilig": 219, "deppertem": 219, "irrelevant": 219, "quargel": [219, 220], "190666": 219, "inkorrekt": 219, "geburtsdatum": 219, "endswith": [219, 234, 236, 242, 252, 267, 271, 274, 288, 294, 310, 316, 322, 1054], "sss": 219, "isalpha": [219, 223, 234, 236, 242, 246, 267, 288, 294, 316, 1054], "isidentifi": [219, 223, 236, 242, 252, 267, 288, 294, 1054], "islow": [219, 242, 252, 267, 288, 322, 1054], "arg1": 219, "arg2": 219, "arg3": 219, "abcblah": 219, "blahabcbcabcc": 219, "lah": 219, "rstrip": [219, 223, 227, 234, 238, 239, 242, 252, 267, 284, 288, 294, 310, 333, 342], "lstrip": [219, 234, 238, 242, 267, 288, 294, 342], "wieviel": [219, 1165, 1172], "995237": 219, "datestr": 219, "dt": [219, 316, 810, 914], "strptime": [219, 220, 221, 227, 316], "uuid": 219, "msg_aussi": 219, "sea": [219, 234, 267, 338, 688], "oida": [219, 236, 239, 288, 454], "msgid": 219, "uuid4": 219, "345654325678": 219, "json_aussi": 219, "6563515ef0824d42b459389cefd09127": 219, "json_eini": 219, "sender": [219, 982], "msg_eini": 219, "sauberestextfil": 220, "12345678": 220, "2270": [220, 229], "20333": 220, "360": [220, 229, 306, 316, 322], "91011121": 220, "30333": 220, "36756788": 220, "1112": [220, 229], "1244": [220, 229], "31333": 220, "45011121": 220, "44444": 220, "340": [220, 229, 236, 242, 274, 288, 316, 322], "sauber": 220, "read_sauberes_text_fil": 220, "item1": [220, 316], "item13": 220, "werk": 220, "lort": 220, "charg": [220, 473, 480, 493, 494, 495, 507, 508, 509], "sonderbestandsnumm": 220, "materialkurztext": 220, "lagerplatz": 220, "verfueg_bestand": 220, "bme": 220, "we_datum": 220, "verf\u00fcg": 220, "bestand": 220, "datum": [220, 1115], "api2": 221, "opc": [221, 230, 305], "rrdtool": 221, "rrd": 221, "subprocess": [221, 237, 242, 251, 253, 263, 287, 327, 342, 347, 1108], "commmon": [223, 410], "140576769461632": 223, "simplicit": 223, "inputfil": [223, 451], "450": [223, 229, 236, 271, 274, 322], "paragraph": [223, 464], "highli": [223, 360, 526], "pathnam": [223, 229, 239, 242, 769, 936, 940, 1052], "displayhook": [223, 229, 239, 242, 335], "excepthook": [223, 229, 239, 242, 335], "uncaught": [223, 229, 239, 242, 545], "systemexit": [223, 229, 239, 242, 264, 267, 335, 1007], "behav": [223, 229, 232, 239, 242, 524, 545, 671, 726, 727, 758, 826, 852, 972], "last_typ": [223, 229, 239, 242, 335], "last_valu": [223, 229, 239, 242, 335, 695, 698, 701, 702, 703], "last_traceback": [223, 229, 239, 242, 335], "builtin_module_nam": [223, 229, 239, 242, 335], "pertain": [223, 229, 239, 242], "exec_prefix": [223, 229, 239, 242, 335], "float_info": [223, 229, 239, 242, 335], "float_repr_styl": [223, 229, 239, 242, 335], "hash_info": [223, 229, 239, 242, 335], "hexvers": [223, 229, 239, 242, 335], "int_info": [223, 229, 239, 242, 335], "maxsiz": [223, 229, 239, 242, 335], "largest": [223, 229, 239, 242, 427], "maxunicod": [223, 229, 239, 242, 335], "thread_info": [223, 229, 239, 242, 335], "version_info": [223, 229, 239, 242, 335], "__stdin__": [223, 229, 239, 242, 335], "__stdout__": [223, 229, 239, 242, 335], "__stderr__": [223, 229, 239, 242, 335], "__displayhook__": [223, 229, 239, 242, 335], "__excepthook__": [223, 229, 239, 242, 335], "screen": [223, 229, 239, 242, 846, 852, 870], "exc_info": [223, 229, 239, 242, 335], "getdlopenflag": [223, 229, 239, 242, 335], "dlopen": [223, 229, 239, 242, 1175], "getprofil": [223, 229, 239, 242, 335], "profil": [223, 229, 239, 242, 322, 360, 438, 444, 447, 763, 810, 842, 1159, 1162], "getrefcount": [223, 229, 239, 242, 249, 335], "getrecursionlimit": [223, 229, 239, 242, 335], "getsizeof": [223, 229, 239, 242, 264, 267, 310, 335], "gettrac": [223, 229, 239, 242, 335], "setdlopenflag": [223, 229, 239, 242, 335], "setprofil": [223, 229, 239, 242, 335], "setrecursionlimit": [223, 229, 239, 242, 335], "settrac": [223, 229, 239, 242, 335], "__breakpointhook__": [223, 229, 239, 242, 335], "breakpointhook": [223, 229, 239, 242, 335], "breakpoint": [223, 229, 239, 242, 267], "exctyp": [223, 229, 239, 242], "__unraisablehook__": [223, 229, 239, 242, 335], "unraisablehook": [223, 229, 239, 242, 335], "unrais": [223, 229, 239, 242], "exc_typ": [223, 229, 239, 242, 1005], "exc_valu": [223, 229, 239, 242, 1005], "exc_traceback": [223, 229, 239, 242, 1005], "err_msg": [223, 229, 239, 242], "addaudithook": [223, 229, 239, 242, 335], "audit": [223, 229, 239, 242, 322, 335], "call_trac": [223, 229, 239, 242, 335], "afterward": [223, 229, 239, 242, 389, 439, 576, 726, 727, 728, 741, 806, 978, 1142], "older": [223, 229, 239, 242, 835, 978], "get_asyncgen_hook": [223, 229, 239, 242, 335], "firstit": [223, 229, 239, 242], "get_coroutine_origin_tracking_depth": [223, 229, 239, 242, 335], "coroutin": [223, 229, 239, 242, 318, 697, 698, 700, 701, 702, 703, 707, 762, 763, 1108], "getallocatedblock": [223, 229, 239, 242, 335], "getdefaultencod": [223, 229, 239, 242, 288, 335], "getfilesystemencodeerror": [223, 229, 239, 242, 335], "getfilesystemencod": [223, 229, 239, 242, 335], "getswitchinterv": [223, 229, 239, 242, 335], "setswitchinterv": [223, 229, 239, 242, 335], "is_fin": [223, 229, 239, 242, 335], "set_asyncgen_hook": [223, 229, 239, 242, 335], "set_coroutine_origin_tracking_depth": [223, 229, 239, 242, 335], "cr_origin": [223, 229, 239, 242], "rtld_global": [223, 229, 239, 242], "rtld_xxx": [223, 229, 239, 242], "rtld_lazi": [223, 229, 239, 242], "frequenc": [223, 229, 239, 242, 246, 282, 283, 304, 308, 328, 353, 357, 763, 906, 907, 915, 947, 967, 969], "uninterrupt": [223, 229, 239, 242, 802], "workload": [223, 229, 239, 242], "typic": [223, 229, 239, 242, 270, 280, 296, 308, 312, 410, 450, 454, 471, 495, 524, 651, 781, 830, 855, 985, 1030, 1040, 1161, 1163], "005": [223, 229, 239, 242], "abiflag": [223, 229, 239, 242, 335], "api_vers": [223, 229, 239, 242, 335], "1013": [223, 229, 239, 242], "ipyk": 223, "base_exec_prefix": [223, 229, 239, 242, 335], "base_prefix": [223, 229, 239, 242, 335], "_ast": [223, 229, 239, 242], "_codec": [223, 229, 239, 242], "_collect": [223, 229, 239, 242], "_f": [223, 229, 239, 242], "byteord": [223, 229, 239, 242, 264, 335, 908], "foundati": [223, 229, 239, 242], "emati": [223, 229, 239, 242], "ipykernel": [223, 229, 239, 242, 267], "zmqshelldisplayhook": [223, 229, 239, 242], "dont_write_bytecod": [223, 229, 239, 242, 335], "opt": [223, 229, 239, 242, 322, 416], "ation": [223, 229, 239, 242], "7976931348623157e": [223, 229, 239, 242], "308": [223, 229, 236, 239, 242, 284, 294, 306, 316, 322], "max_": [223, 229, 239, 242], "epsilo": [223, 229, 239, 242], "2305843009213693": [223, 229, 239, 242], "iphash2": [223, 229, 239, 242], "50922736": 223, "cache_tag": [223, 229, 239, 242], "xv": [223, 229, 239, 242], "bits_per_digit": [223, 229, 239, 242], "sizeof_digit": [223, 229, 239, 242], "syntaxerror": [223, 234, 239, 246, 267, 1007], "eol": [223, 246], "9223372036854775807": [223, 229, 239, 242, 761], "1114111": [223, 229, 239, 242], "meta_path": [223, 229, 239, 242, 335], "_frozen_importlib": [223, 229, 239, 242, 267], "builtinimport": [223, 229, 239, 242, 267], "_fro": [223, 229, 239, 242], "homepa": 223, "path_hook": [223, 229, 239, 242, 335], "zipimport": [223, 229, 239, 242], "filefind": [223, 229, 239, 242], "path_importer_cach": [223, 229, 239, 242, 335], "jfa": [223, 229, 239, 242], "platlibdir": [223, 229, 239, 242, 335], "ps1": [223, 229, 239, 242, 335, 1143], "ps2": [223, 229, 239, 242, 335], "ps3": [223, 229, 239, 242, 335], "pycache_prefix": [223, 229, 239, 242, 335], "outstream": [223, 229, 239, 242], "versio": [223, 229, 239, 242], "202103": 223, "releaselev": [223, 229, 239, 242], "warnopt": [223, 229, 239, 242, 335], "isdigit": [223, 234, 242, 246, 267, 274, 288, 294, 322, 1054], "pp": [223, 274, 415, 602], "list_of_str": 223, "tensorflow": 224, "kesselfal": 224, "rettenbachklamm": 224, "hochtor": 224, "hochschwab": 224, "_a": [226, 242, 267], "_123": 226, "140575811317328": 226, "140575811316208": 226, "0xffffffff": [226, 227, 388], "4294967296": [226, 234], "0x48": [226, 914], "330": [226, 229, 242, 267, 274, 288, 306, 316, 322], "332": [226, 229, 242, 274, 288, 306, 322], "333": [226, 229, 242, 274, 288, 316, 322, 338], "334": [226, 229, 242, 274, 316, 322], "dstr": 226, "777": [226, 229, 316], "aliv": [226, 408, 960, 1003], "bcd": 226, "dusan": 226, "alex": [226, 240, 1025], "mist": [226, 274], "span": [226, 252, 255, 257, 264, 288, 322, 365, 384, 408, 785], "141592653589793": [226, 229], "roll": [226, 245, 266, 282, 283, 1043, 1158], "dice": [226, 245, 266, 282, 283, 1043], "win": [226, 242, 252, 316, 901, 968, 1043], "rnd": [226, 249], "convention": 226, "wise": [226, 270, 433, 577, 649, 680, 761, 763, 778, 788, 808, 906, 947, 1007], "resultset": [226, 229, 1120], "sbin": [226, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322, 842, 846, 848, 895, 901, 932, 942], "nologin": [226, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322, 895, 901, 932, 942], "adm": [226, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322, 896, 899, 901], "lp": [226, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322, 901], "spool": [226, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322, 901], "lpd": [226, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322, 901], "ftp": [226, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322, 897, 998], "65534": [226, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322], "apach": [226, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322], "httpd": [226, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322], "coredump": [226, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322, 901, 981], "997": [226, 229, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322], "dumper": [226, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322, 901], "998": [226, 229, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322], "996": [226, 229, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322], "timesync": [226, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322, 901], "995": [226, 229, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322], "tss": [226, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322], "tpm": [226, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322], "dbu": [226, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322, 848], "polkitd": [226, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322, 848], "994": [226, 229, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322], "avahi": [226, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322, 848], "mdn": [226, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322], "unbound": [226, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322, 1039], "992": [226, 229, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322], "dnsmasq": [226, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322, 848], "991": [226, 229, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322], "dhcp": [226, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322], "nm": [226, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322, 445, 578, 810, 996, 1002], "openconnect": [226, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322], "993": [226, 229, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322], "989": [226, 229, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322], "networkmanag": [226, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322, 445, 848], "usbmuxd": [226, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322], "gluster": [226, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322], "988": [226, 229, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322], "glusterf": [226, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322], "rtkit": [226, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322], "realtimekit": [226, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322], "pipewir": [226, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322], "987": [226, 229, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322], "geoclu": [226, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322], "990": [226, 229, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322], "chroni": [226, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322], "984": [226, 229, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322, 901], "saslauth": [226, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322], "saslauthd": [226, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322], "radvd": [226, 242, 249, 252], "rpc": [226, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322], "rpcbind": [226, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322], "openvpn": [226, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322], "982": [226, 229, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322, 901], "981": [226, 229, 242, 249, 252], "spawn": [226, 242, 249, 252, 267, 274, 284, 288, 305, 310, 316, 322], "colord": [226, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322], "985": [226, 229, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322, 901], "rpcuser": [226, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322], "abrt": [226, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322, 848, 901], "flatpak": [226, 242, 249, 252, 267, 274, 284, 288, 291, 310, 316, 322, 901], "979": [226, 229, 242, 249, 252], "helper": [226, 242, 246, 249, 252, 267, 274, 284, 288, 310, 316, 322, 383, 577, 641, 689, 730, 804, 901, 1133, 1136], "983": [226, 229, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322, 901], "978": [226, 229, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322, 901], "vboxadd": [226, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322, 901], "tcpdump": [226, 242, 249, 252, 267, 274, 284, 288, 310, 316, 322, 901], "974": [226, 229, 242, 249, 252], "broker": [226, 230, 242, 249, 252, 267, 274, 284, 288, 305, 310, 316, 322, 848, 1102], "mappingproxi": [226, 242, 255], "229": [226, 229, 234, 236, 242, 246, 249, 267, 274, 284, 288, 294, 306, 310, 316, 322], "230": [226, 229, 234, 236, 239, 242, 246, 249, 252, 267, 274, 284, 288, 294, 306, 310, 316, 322], "231": [226, 229, 234, 236, 239, 242, 246, 249, 267, 274, 288, 294, 310, 316, 322, 493, 494, 495, 507, 508, 509], "232": [226, 229, 234, 236, 239, 242, 246, 249, 252, 267, 288, 294, 310, 316, 322], "233": [226, 229, 234, 236, 242, 246, 249, 252, 267, 274, 284, 288, 294, 310, 316, 322], "inputlist": [226, 1010], "ret": [226, 229, 234, 451, 689, 974, 1010, 1055], "235": [226, 229, 234, 236, 239, 242, 246, 249, 252, 267, 274, 284, 288, 294, 306, 310, 322], "236": [226, 229, 234, 236, 239, 242, 246, 249, 252, 267, 288, 294, 306, 310, 316, 322, 436], "237": [226, 229, 234, 236, 242, 246, 249, 252, 267, 284, 288, 294, 310, 316, 322], "238": [226, 229, 234, 236, 239, 242, 246, 249, 252, 267, 274, 284, 288, 294, 306, 310, 316, 322], "239": [226, 229, 234, 236, 242, 246, 249, 267, 274, 284, 288, 294, 306, 310, 316, 322], "240": [226, 229, 234, 236, 239, 242, 246, 249, 252, 267, 284, 288, 294, 310, 316, 322], "242": [226, 229, 234, 236, 239, 242, 249, 252, 267, 284, 288, 294, 306, 310, 316, 322], "243": [226, 229, 234, 236, 242, 249, 252, 267, 284, 288, 294, 306, 316, 322], "244": [226, 229, 234, 236, 239, 242, 249, 252, 267, 288, 294, 306, 316, 322], "245": [226, 229, 234, 236, 249, 267, 284, 288, 294, 306, 316, 322], "247": [226, 229, 234, 236, 242, 246, 249, 267, 284, 288, 294, 310, 316, 322], "248": [226, 229, 234, 236, 239, 246, 249, 267, 274, 284, 288, 294, 306, 310, 316, 322], "249": [226, 229, 234, 236, 242, 246, 249, 252, 267, 274, 288, 294, 306, 310, 316, 322], "250": [226, 229, 234, 236, 242, 246, 249, 252, 267, 274, 278, 284, 288, 294, 316, 322, 899], "251": [226, 229, 234, 236, 239, 242, 246, 249, 267, 274, 284, 288, 294, 306, 310, 322], "252": [226, 229, 234, 236, 239, 246, 249, 267, 274, 284, 288, 294, 306, 310, 316, 322, 1121], "253": [226, 229, 234, 236, 239, 242, 249, 252, 267, 274, 288, 294, 310, 322], "256": [226, 229, 234, 236, 242, 249, 252, 267, 274, 284, 288, 294, 310, 316, 322, 374, 582, 1110, 1121], "257": [226, 229, 234, 236, 239, 242, 246, 249, 252, 267, 274, 284, 288, 294, 316, 322], "258": [226, 229, 234, 236, 239, 242, 246, 249, 267, 274, 284, 288, 294, 322], "0x7fda5444e6a0": 226, "259": [226, 229, 234, 236, 239, 242, 249, 267, 274, 284, 288, 294, 316, 322], "260": [226, 229, 234, 236, 239, 242, 249, 267, 274, 284, 288, 294, 306, 316, 322], "261": [226, 229, 234, 236, 242, 246, 252, 267, 274, 284, 288, 294, 322], "262": [226, 229, 234, 236, 242, 252, 267, 274, 284, 288, 294, 306, 316, 322], "263": [226, 229, 234, 236, 242, 246, 249, 252, 267, 274, 284, 288, 294, 306, 322], "264": [226, 229, 234, 236, 239, 242, 249, 252, 267, 274, 288, 294, 306, 316, 322], "265": [226, 229, 234, 236, 242, 249, 267, 274, 288, 294, 306, 316, 322], "266": [226, 229, 234, 236, 239, 242, 246, 252, 267, 288, 294, 322], "267": [226, 229, 234, 236, 239, 242, 249, 252, 267, 274, 288, 294, 306, 322], "268": [226, 229, 234, 236, 242, 249, 252, 267, 274, 288, 294, 316, 322], "269": [226, 229, 234, 236, 239, 242, 246, 249, 267, 274, 284, 288, 294, 322, 986], "270": [226, 229, 234, 236, 242, 246, 249, 267, 274, 284, 288, 294, 306, 316, 322], "other_map": 226, "272": [226, 229, 234, 236, 239, 242, 246, 249, 267, 274, 284, 288, 294, 306, 322], "273": [226, 229, 234, 236, 242, 246, 267, 274, 288, 294, 316, 322, 517, 535, 536, 537, 538, 540, 541, 749, 751, 753, 1020], "274": [226, 229, 234, 236, 239, 242, 246, 249, 267, 274, 284, 288, 294, 316, 322], "140575811316304": 226, "275": [226, 229, 234, 236, 242, 246, 249, 267, 274, 284, 288, 294, 306, 322], "276": [226, 229, 234, 236, 239, 249, 267, 274, 284, 288, 294, 306, 322], "277": [226, 229, 234, 236, 239, 242, 246, 249, 267, 284, 288, 294, 316, 322], "278": [226, 229, 234, 236, 242, 249, 267, 274, 288, 294, 306, 316, 322], "279": [226, 229, 234, 236, 239, 242, 246, 249, 267, 274, 288, 294, 306, 322], "280": [226, 229, 234, 236, 239, 242, 246, 267, 274, 288, 294, 306, 322, 985, 986], "140575692459008": 226, "282": [226, 229, 234, 236, 239, 242, 246, 249, 267, 274, 288, 294, 306, 322], "283": [226, 229, 234, 236, 239, 242, 246, 249, 267, 288, 294, 322], "284": [226, 229, 234, 236, 242, 246, 249, 267, 271, 294, 306, 316, 322], "elementwis": 226, "285": [226, 229, 234, 236, 239, 242, 267, 274, 288, 294, 306, 322], "286": [226, 229, 234, 236, 239, 242, 246, 267, 288, 294, 306, 322], "287": [226, 229, 234, 236, 239, 242, 246, 249, 267, 274, 294, 306, 316, 322], "140575692438848": 226, "288": [226, 229, 234, 236, 242, 246, 249, 267, 274, 288, 294, 306, 316, 322], "140575692448960": 226, "289": [226, 229, 234, 236, 242, 267, 274, 288, 294, 306, 316, 322], "290": [226, 229, 234, 236, 242, 267, 274, 288, 294, 322], "292": [226, 229, 234, 242, 246, 267, 274, 284, 288, 322], "293": [226, 229, 234, 236, 242, 267, 274, 284, 288, 294, 322], "295": [226, 229, 234, 236, 242, 246, 267, 274, 284, 288, 322], "296": [226, 229, 234, 236, 242, 267, 274, 284, 288, 294, 322], "298": [226, 229, 234, 242, 246, 267, 274, 284, 288, 294, 316, 322], "deep": [226, 238, 306, 684, 689, 972], "301": [226, 229, 234, 239, 242, 246, 267, 274, 284, 288, 294, 306, 322], "302": [226, 229, 236, 242, 246, 267, 274, 288, 294, 306, 322, 1065], "deepcopi": [226, 236, 249, 274, 294, 306, 1048], "303": [226, 229, 236, 239, 242, 274, 288, 294, 306, 316, 322, 986], "304": [226, 229, 236, 239, 242, 246, 306, 322], "305": [226, 229, 239, 242, 267, 284, 288, 294, 306, 322], "314": [226, 229, 236, 239, 242, 267, 274, 284, 288, 294, 316, 322], "315": [226, 229, 242, 267, 288, 294, 316, 322], "rdr": [226, 227, 310, 451, 474, 1116], "delimit": [226, 227, 242, 271, 272, 288, 310, 316, 598, 896, 1036, 1116], "fund_nam": [226, 227, 1065], "fund_isin": [226, 227, 1065], "fund_tick": [226, 227, 1065], "as_of_d": [226, 227, 1065], "fund_in_univers": [226, 227, 1065], "fund_of_fund": [226, 227, 1065], "fund_holdings_count": [226, 227, 1065], "fund_holding_funds_count": [226, 227, 1065], "american": [226, 232, 650, 664, 763, 1065, 1121], "fund": [226, 1065], "balanc": [226, 230, 418, 1065], "us0240711020": [226, 1065], "abalx": [226, 1065], "20210103": [226, 1065], "084": [226, 1065], "dodg": [226, 1065], "cox": [226, 1065], "us2562011047": [226, 1065], "dodbx": [226, 1065], "410": [226, 229, 274, 288, 322, 1065], "us2562191062": [226, 1065], "dodgx": [226, 1065], "franklin": [226, 1065], "incom": [226, 242, 305, 1065, 1124], "us3534963000": [226, 1065], "fkinx": [226, 1065], "america": [226, 1065], "us3998741066": [226, 1065], "agthx": [226, 1065], "price": [226, 246, 444, 467, 1065], "us7414791092": [226, 1065], "prgfx": [226, 1065], "fidel": [226, 1065], "puritan": [226, 1065], "us3163451079": [226, 1065], "fpurx": [226, 1065], "contrafund": [226, 1065], "us3160711095": [226, 1065], "fcntx": [226, 1065], "363": [226, 229, 274, 288, 306, 316, 322, 1065], "us77954m1053": [226, 1065], "prwcx": [226, 1065], "westburi": [226, 1065], "us6804141090": [226, 1065], "owlsx": [226, 1065], "us1401931035": [226, 1065], "caibx": [226, 1065], "582": [226, 229, 322, 1065], "harbor": [226, 1065], "institut": [226, 227, 480, 495, 1065], "us4115115044": [226, 1065], "hacax": [226, 1065], "us77954q1067": [226, 1065], "trbcx": [226, 1065], "dreyfu": [226, 1065], "treasuri": [226, 1065], "cash": [226, 1065], "inst": [226, 1065], "us2619411083": [226, 1065], "dirxx": [226, 1065], "blackrock": [226, 1065], "us09251t5092": [226, 1065], "malox": [226, 1065], "us3163453059": [226, 1065], "flpsx": [226, 1065], "liquid": [226, 1065], "us09248u5517": [226, 1065], "tttxx": [226, 1065], "dfa": [226, 1065], "portfolio": [226, 246, 1065], "us2332038841": [226, 1065], "dfgbx": [226, 1065], "feder": [226, 1065], "herm": [226, 1065], "us60934n6821": [226, 1065], "utixx": [226, 1065], "oakmark": [226, 1065], "investor": [226, 246, 1065], "us4138382027": [226, 1065], "oakix": [226, 1065], "asset": [226, 1065], "us00767h4939": [226, 1065], "787": [226, 229, 1065], "fpa": [226, 1065], "crescent": [226, 1065], "us30254t7596": [226, 1065], "fpacx": [226, 1065], "us3534968058": [226, 1065], "fcisx": [226, 1065], "us5529836943": [226, 1065], "meiix": [226, 1065], "goldman": [226, 1065], "sach": [226, 1065, 1179], "instrument": [226, 442, 444, 914, 1065], "us38142b5003": [226, 1065], "ftixx": [226, 1065], "schwab": [226, 1065], "us8085098551": [226, 1065], "swppx": [226, 1065], "508": [226, 229, 274, 306, 322, 1065], "templeton": [226, 1065], "bond": [226, 1065], "advisor": [226, 1065], "us8802084009": [226, 1065], "tgbax": [226, 1065], "us32008f6060": [226, 1065], "sgiix": [226, 1065], "ishar": [226, 1065], "etf": [226, 1065], "us4642872000": [226, 1065], "ivv": [226, 1065], "507": [226, 229, 306, 1065], "vanguard": [226, 1065], "admir": [226, 1065], "us9229087104": [226, 1065], "vfiax": [226, 1065], "510": [226, 229, 306, 316, 322, 1065], "us9229087286": [226, 1065], "vtsax": [226, 1065], "370": [226, 229, 274, 288, 316, 322, 1065], "spdr": [226, 1065], "midcap": [226, 1065], "us78467y1073": [226, 1065], "mdy": [226, 1065], "dow": [226, 1065], "jone": [226, 343, 344, 1065], "industri": [226, 810, 1065], "us78467x1090": [226, 1065], "health": [226, 1065], "us81369y2090": [226, 1065], "xlv": [226, 1065], "discretionari": [226, 1065], "us81369y4070": [226, 1065], "xly": [226, 1065], "energi": [226, 1065], "us81369y5069": [226, 1065], "xle": [226, 1065], "financi": [226, 1065], "us81369y6059": [226, 1065], "xlf": [226, 1065], "us81369y8030": [226, 1065], "xlk": [226, 1065], "invesco": [226, 1065], "qqq": [226, 1065], "us46090e1038": [226, 1065], "us2562061034": [226, 1065], "dodfx": [226, 1065], "msci": [226, 1065], "eaf": [226, 1065], "us4642874659": [226, 1065], "efa": [226, 1065], "897": [226, 229, 1065], "jpmorgan": [226, 1065], "sec": [226, 465, 968, 1065, 1136], "mny": [226, 1065], "mkt": [226, 1065], "us4812a28358": [226, 1065], "jtsxx": [226, 1065], "eql": [226, 1065], "wght": [226, 1065], "us46137v3574": [226, 1065], "us4812a03757": [226, 1065], "cjtxx": [226, 1065], "us00143w8753": [226, 1065], "odvyx": [226, 1065], "dividend": [226, 1065], "us78464a7634": [226, 1065], "sdy": [226, 1065], "equiti": [226, 1065], "us2332033719": [226, 1065], "dfiex": [226, 1065], "888": [226, 229, 1065], "edgewood": [226, 1065], "us0075w07594": [226, 1065], "egfix": [226, 1065], "prudenti": [226, 1065], "us00767h7585": [226, 1065], "r6": [226, 1065], "us55273h3536": [226, 1065], "meikx": [226, 1065], "327": [226, 229, 242, 267, 274, 284, 316, 322], "328": [226, 229, 236, 242, 274, 322], "geschieht": [227, 360, 897], "wunder": 227, "groesser": 227, "jave": 227, "shorthand": [227, 375, 889, 1021], "lin": 227, "lout": 227, "faster": [227, 246, 305, 427, 439, 972, 978], "outputlist": 227, "getus": [227, 1086], "userdatabas": [227, 1086], "userid": [227, 239], "groupid": 227, "loginshel": 227, "userrecord": 227, "dens": [227, 236, 246], "pratic": 227, "_fix_float_numb": 227, "fieldnam": [227, 1116], "_fix_bool": 227, "elif": [227, 234, 310, 373, 410, 451, 1027, 1042, 1043], "_fix_dat": 227, "read_stock": [227, 1065], "csvfile": [227, 1020], "converted_record": 227, "dbname": [227, 1119], "stmt": 227, "predefin": [227, 942, 977, 982, 1154], "circuit": [228, 234, 244, 915, 1041, 1165, 1172], "windows_path": [229, 234], "festplatt": [229, 1175], "eue": [229, 306, 322, 337], "lehrer": 229, "50923504": 229, "202107": 229, "140106795875920": 229, "140106669190640": 229, "669": [229, 246], "140106669191024": 229, "0j": 229, "copied_l": [229, 236], "140106669249856": 229, "copied_t": 229, "tuple_containing_one_el": 229, "tran": 229, "satan": [229, 239], "queen": [229, 249, 1097, 1099, 1103, 1105, 1116], "10000000000": [229, 284, 337], "prod": 229, "resultset_to_local_db": 229, "my_local_db": 229, "basenam": 229, "normalized_path": 229, "normpath": [229, 236, 1015], "291": [229, 234, 242, 267, 284, 294, 306, 316, 322, 443], "294": [229, 234, 242, 267, 284, 288, 294, 322], "297": [229, 234, 236, 242, 246, 288, 316, 322], "299": [229, 234, 239, 242, 246, 267, 274, 284, 288, 294, 316, 322], "306": [229, 239, 246, 267, 284, 288, 294, 306, 316, 322], "307": [229, 236, 242, 267, 284, 288, 294, 306, 316, 322], "309": [229, 236, 239, 242, 274, 284, 288, 294, 306, 310, 322], "310": [229, 236, 239, 242, 288, 294, 306, 322, 388], "311": [229, 236, 267, 288, 294, 316, 322], "312": [229, 236, 242, 267, 274, 284, 294, 316, 322], "313": [229, 236, 242, 274, 288, 294, 316, 322], "316": [229, 236, 239, 242, 267, 288, 306, 316, 322], "317": [229, 236, 239, 267, 274, 284, 288, 306, 316, 322], "318": [229, 239, 242, 274, 288, 316, 322], "319": [229, 236, 239, 242, 267, 284, 288, 306, 316, 322], "321": [229, 239, 242, 274, 284, 288, 294, 306, 322], "322": [229, 239, 242, 274, 294, 306, 316, 322], "323": [229, 236, 239, 242, 267, 288, 294, 306, 316, 322], "324": [229, 239, 242, 267, 284, 288, 294, 306, 316, 322, 526], "325": [229, 236, 242, 274, 284, 294, 316, 322], "326": [229, 236, 242, 267, 284, 294, 306, 316, 322], "329": [229, 242, 267, 274, 306, 322], "331": [229, 236, 242, 267, 288, 322], "335": [229, 236, 242, 274, 288, 316, 322], "336": [229, 236, 242, 288, 316, 322, 458], "337": [229, 242, 274, 288, 316, 322], "338": [229, 236, 274, 288, 316, 322], "339": [229, 236, 242, 288, 316, 322], "341": [229, 236, 242, 274, 288, 306, 316, 322], "342": [229, 236, 242, 274, 294, 316, 322], "343": [229, 242, 274, 288, 306, 322], "346": [229, 242, 288, 306, 316, 322, 624, 625, 626, 627], "347": [229, 274, 288, 306, 316, 322], "348": [229, 242, 306, 316, 322], "349": [229, 242, 288, 306, 316, 322, 438], "351": [229, 236, 242, 288, 316, 322], "352": [229, 236, 242, 274, 288, 316, 322], "353": [229, 236, 242, 274, 288, 316, 322], "354": [229, 242, 288, 316, 322, 472], "355": [229, 274, 288, 316, 322], "356": [229, 249, 288, 306, 322], "357": [229, 274, 288, 306, 316, 322], "359": [229, 288, 316, 322], "361": [229, 288, 306, 316, 322], "362": [229, 274, 288, 306, 316, 322], "364": [229, 288, 322], "365": [229, 306, 322], "366": [229, 274, 288, 322], "367": [229, 288, 306, 316, 322], "368": [229, 288, 316, 322], "369": [229, 274, 288, 316, 322], "371": [229, 274, 316, 322], "373": [229, 236, 274, 306, 316, 322], "374": [229, 236, 288, 306, 322], "375": [229, 236, 246, 274, 288, 306, 316, 322, 438], "376": [229, 274, 288, 306, 316, 322], "377": [229, 236, 274, 288, 306, 316, 322], "379": [229, 274, 288, 306, 316, 322], "380": [229, 274, 288, 306, 322], "381": [229, 236, 274, 288, 322], "382": [229, 274, 288, 306, 322], "383": [229, 236, 274, 278, 306, 316, 322], "384": [229, 274, 288, 306, 316, 322], "385": [229, 274, 288, 306, 322], "386": [229, 274, 288, 306, 322], "387": [229, 322], "388": [229, 274, 288, 306, 322], "389": [229, 306, 322], "390": [229, 288, 306, 322], "391": [229, 274, 306, 322], "392": [229, 274, 322], "393": [229, 236, 274, 288, 306, 322], "394": [229, 236, 274, 288, 306, 322], "395": [229, 236, 274, 288, 306, 316, 322], "396": [229, 236, 274, 322, 855], "397": [229, 236, 288, 306, 322], "398": [229, 236, 288, 322], "399": [229, 236, 288, 306, 322], "401": [229, 236, 274, 288, 322], "402": [229, 274, 306, 322], "403": [229, 236, 288, 306, 322], "405": [229, 288, 322], "406": [229, 236, 274, 288, 306, 322], "407": [229, 274, 288, 306, 322], "408": [229, 236, 274, 288, 306, 322], "409": [229, 236, 274, 288, 306, 316, 322], "411": [229, 236, 274, 288, 316, 322], "412": [229, 288, 322], "413": [229, 236, 274, 288, 322], "414": [229, 236, 274, 288, 306, 322], "415": [229, 288, 306, 322], "416": [229, 236, 274, 306, 322], "417": [229, 236, 274, 288, 322], "418": [229, 236, 274, 306, 322], "419": [229, 236, 274, 288, 306, 322], "420": [229, 236, 274, 288, 306, 322], "421": [229, 236, 274, 288, 306, 322], "422": [229, 236, 316, 322], "423": [229, 274, 288, 306, 322, 761], "424": [229, 236, 274, 288, 322], "425": [229, 274, 322], "426": [229, 306], "427": [229, 236, 274, 306, 322], "428": [229, 236, 274, 306, 322], "429": [229, 274, 306, 322], "430": [229, 236, 274, 306, 322], "431": [229, 274, 306, 316, 322, 761], "432": [229, 236, 274, 306], "433": [229, 274, 306, 316], "434": [229, 274, 322], "435": 229, "436": [229, 274, 306, 322], "437": [229, 236, 274, 306, 316, 322], "438": [229, 236, 306, 322], "439": [229, 274, 322], "440": [229, 236, 274, 322], "441": [229, 236, 274, 322], "442": [229, 236, 274, 316], "443": [229, 236, 306, 322], "444": [229, 236, 306, 322], "445": [229, 236, 306, 316, 322], "446": [229, 274], "447": [229, 236, 274, 306, 316, 322], "448": [229, 274, 322], "449": [229, 236, 322], "451": [229, 236, 306, 322], "452": [229, 236, 274, 322], "453": [229, 236, 306, 322], "454": [229, 236, 274, 322], "455": [229, 236, 322], "457": 229, "458": [229, 274, 322], "459": [229, 316], "460": [229, 274], "461": [229, 274], "462": [229, 274], "463": [229, 322], "464": [229, 274, 322], "465": [229, 274, 278, 316, 322], "466": [229, 274], "467": [229, 274, 316, 322], "468": [229, 274, 322], "469": [229, 274, 322, 727], "470": [229, 274, 322], "471": [229, 274, 316, 322], "472": [229, 274, 322], "473": [229, 322], "474": [229, 274, 322], "475": [229, 274, 322], "476": [229, 274, 316, 322], "478": 229, "479": [229, 274, 322], "480": [229, 274, 322], "481": [229, 274, 322], "482": [229, 274, 316], "483": [229, 274, 316, 322], "484": 229, "485": 229, "486": [229, 274, 322], "487": [229, 274, 322], "488": [229, 274, 322], "489": 229, "490": [229, 322, 892], "491": [229, 322], "492": [229, 322], "494": [229, 274, 322], "495": 229, "496": 229, "497": [229, 274, 322], "498": [229, 274, 322], "499": [229, 322], "502": [229, 274, 322], "503": [229, 322], "504": [229, 274], "505": [229, 242, 274, 322], "506": [229, 274, 322], "509": [229, 306], "511": [229, 306, 316, 322], "514": [229, 322], "515": [229, 274, 322, 726], "516": [229, 274], "518": [229, 274, 322], "519": [229, 322], "520": [229, 274], "521": [229, 274, 746, 750], "522": 229, "523": 229, "524": [229, 274], "525": [229, 274, 322], "526": 229, "527": [229, 322], "528": 229, "529": [229, 316, 322], "530": 229, "531": [229, 274, 322], "532": [229, 761], "533": [229, 322], "534": [229, 322], "535": [229, 322], "536": [229, 892], "538": [229, 322], "539": [229, 322], "540": [229, 316], "541": [229, 322], "542": [229, 322], "543": 229, "544": [229, 316, 322], "545": [229, 316, 322], "546": [229, 322], "547": [229, 322], "548": [229, 278, 322], "549": [229, 322], "550": [229, 322], "551": 229, "552": [229, 316, 322], "553": [229, 316, 322], "554": [229, 894], "555": 229, "556": [229, 316], "557": [229, 322], "558": [229, 322], "559": [229, 322], "560": 229, "561": [229, 322], "562": [229, 322], "563": [229, 322], "564": [229, 322], "565": [229, 322], "566": 229, "567": [229, 322], "568": 229, "569": [229, 322], "570": 229, "571": 229, "572": 229, "573": 229, "574": [229, 322], "575": [229, 322], "576": 229, "577": [229, 322], "578": [229, 322], "579": [229, 322], "580": [229, 322], "581": [229, 322], "583": [229, 316], "584": 229, "585": [229, 322], "586": 229, "587": 229, "588": [229, 310, 322], "589": [229, 322], "590": [229, 322], "591": [229, 316], "592": 229, "593": [229, 322], "594": [229, 316], "595": [229, 322], "596": [229, 998], "597": 229, "598": 229, "599": 229, "601": 229, "602": 229, "603": 229, "604": 229, "605": 229, "606": 229, "607": [229, 316], "608": 229, "609": [229, 316], "610": [229, 892], "611": 229, "612": [229, 855], "613": 229, "614": 229, "615": [229, 316], "616": 229, "617": 229, "618": 229, "619": 229, "620": 229, "621": 229, "622": 229, "623": 229, "624": 229, "625": [229, 246], "626": 229, "627": 229, "628": 229, "629": 229, "630": 229, "631": 229, "632": 229, "633": 229, "634": 229, "635": 229, "636": 229, "637": 229, "638": 229, "639": 229, "640": [229, 577], "641": 229, "642": 229, "643": 229, "644": [229, 1035], "645": 229, "646": 229, "647": 229, "648": 229, "649": 229, "650": [229, 316], "651": 229, "652": 229, "653": 229, "654": 229, "655": [229, 316], "656": 229, "657": [229, 316], "658": 229, "659": 229, "660": 229, "661": 229, "662": 229, "663": 229, "665": [229, 316], "668": [229, 316, 1039], "670": 229, "671": [229, 316], "672": 229, "673": 229, "674": 229, "675": 229, "676": 229, "677": 229, "678": 229, "679": 229, "680": [229, 316], "681": [229, 316], "682": [229, 892], "683": 229, "684": 229, "685": 229, "687": 229, "688": 229, "689": 229, "690": 229, "691": 229, "692": 229, "693": 229, "694": 229, "695": [229, 316], "696": 229, "697": [229, 316], "698": [229, 892, 932], "699": 229, "701": [229, 316], "702": 229, "703": [229, 282, 283, 304], "704": 229, "705": 229, "706": [229, 316], "707": 229, "708": [229, 242], "709": 229, "710": [229, 577], "711": 229, "712": 229, "713": 229, "715": [229, 651], "716": [229, 316], "717": 229, "718": 229, "719": 229, "720": 229, "721": 229, "722": 229, "723": 229, "724": 229, "725": 229, "726": 229, "727": [229, 316], "728": 229, "729": 229, "730": [229, 271], "731": 229, "732": 229, "733": 229, "734": 229, "735": 229, "736": 229, "737": 229, "738": 229, "739": 229, "740": 229, "741": 229, "742": 229, "743": 229, "744": 229, "745": 229, "746": [229, 316, 986], "747": 229, "748": 229, "749": 229, "750": 229, "751": 229, "752": 229, "753": 229, "754": 229, "756": 229, "757": 229, "758": 229, "759": 229, "760": 229, "761": 229, "762": 229, "763": 229, "764": 229, "765": 229, "766": 229, "767": 229, "768": [229, 316], "769": 229, "770": [229, 316], "772": 229, "773": 229, "774": [229, 316], "775": 229, "776": 229, "778": 229, "779": 229, "780": 229, "781": [229, 316], "782": [229, 278], "783": 229, "784": 229, "785": 229, "786": 229, "788": [229, 316], "789": [229, 236], "790": 229, "791": [229, 726], "792": 229, "793": 229, "794": 229, "795": 229, "796": 229, "797": 229, "798": 229, "801": [229, 271], "802": 229, "803": 229, "804": [229, 316], "805": 229, "806": 229, "807": 229, "808": 229, "809": [229, 310], "810": 229, "811": [229, 316], "812": [229, 316], "813": [229, 316], "814": 229, "815": [229, 246], "816": [229, 252, 316], "817": 229, "818": 229, "819": 229, "820": 229, "822": 229, "823": 229, "824": 229, "826": 229, "827": [229, 316], "828": [229, 278, 316], "829": 229, "830": 229, "831": 229, "832": 229, "833": 229, "834": 229, "835": 229, "836": 229, "837": 229, "838": 229, "839": [229, 316], "840": 229, "841": 229, "842": 229, "843": 229, "844": [229, 316], "845": 229, "846": 229, "847": 229, "848": 229, "849": 229, "850": 229, "851": 229, "852": 229, "853": 229, "854": 229, "855": 229, "856": 229, "857": 229, "858": 229, "859": 229, "860": 229, "861": 229, "862": [229, 316], "863": 229, "864": 229, "865": 229, "866": 229, "867": 229, "868": 229, "870": 229, "871": 229, "872": 229, "873": 229, "874": [229, 474], "875": 229, "876": 229, "877": [229, 316], "878": 229, "879": [229, 438], "880": 229, "881": [229, 316], "882": 229, "883": [229, 316], "884": 229, "885": 229, "886": 229, "887": [229, 316], "889": 229, "890": 229, "891": [229, 316], "892": 229, "893": 229, "894": 229, "895": 229, "896": 229, "898": [229, 316], "899": 229, "901": 229, "902": [229, 892], "903": 229, "904": 229, "905": 229, "906": 229, "907": 229, "908": 229, "909": [229, 316], "911": 229, "912": 229, "913": 229, "914": 229, "915": 229, "916": 229, "917": [229, 278], "918": [229, 316], "919": 229, "920": 229, "921": [229, 316], "922": [229, 316], "923": 229, "924": 229, "925": 229, "926": [229, 316], "927": 229, "928": 229, "929": [229, 316], "930": 229, "931": 229, "932": 229, "933": [229, 316], "934": 229, "935": [229, 316], "936": 229, "937": 229, "938": 229, "939": [229, 316], "940": [229, 316], "941": [229, 316], "942": 229, "943": 229, "944": 229, "945": 229, "946": [229, 316], "947": 229, "948": 229, "949": [229, 316], "950": 229, "951": [229, 310], "952": 229, "953": 229, "954": 229, "955": 229, "956": 229, "957": 229, "958": 229, "959": 229, "960": 229, "961": 229, "962": 229, "963": 229, "964": [229, 316], "965": 229, "966": 229, "967": [229, 316], "968": 229, "969": 229, "970": 229, "971": [229, 316], "972": 229, "973": 229, "975": 229, "976": [229, 267, 274, 284, 288, 310, 316, 322], "977": [229, 267, 274, 284, 288, 310, 316, 322, 901], "timeaxi": 229, "myrang": 229, "1002": [229, 624, 625, 626, 627, 855], "1004": 229, "1006": 229, "1008": 229, "1010": 229, "1012": 229, "1014": 229, "1016": 229, "1018": 229, "1020": [229, 837, 838, 845], "1022": 229, "1028": 229, "1030": 229, "1032": 229, "1034": 229, "1036": 229, "1038": 229, "1040": 229, "1042": [229, 972], "1046": 229, "1048": 229, "1050": 229, "1052": 229, "1054": 229, "1056": 229, "1058": 229, "1060": 229, "1062": 229, "1064": 229, "1066": 229, "1068": [229, 278], "1070": [229, 278], "1072": [229, 278], "1074": 229, "1076": 229, "1078": 229, "1080": 229, "1082": 229, "1084": 229, "1086": 229, "1088": 229, "1090": 229, "1092": 229, "1094": 229, "1096": 229, "1098": 229, "1102": 229, "1104": 229, "1106": 229, "1108": 229, "1110": 229, "1114": 229, "1116": 229, "1118": 229, "1120": 229, "1122": 229, "1124": 229, "1126": 229, "1128": 229, "1130": 229, "1132": 229, "1134": 229, "1136": 229, "1138": 229, "1140": 229, "1142": 229, "1144": 229, "1146": 229, "1148": 229, "1150": [229, 1129, 1130], "1152": [229, 1129, 1130], "1154": 229, "1156": 229, "1158": 229, "1160": 229, "1162": 229, "1164": 229, "1166": 229, "1168": 229, "1170": 229, "1172": 229, "1174": 229, "1176": 229, "1178": 229, "1180": 229, "1182": 229, "1184": 229, "1186": 229, "1188": 229, "1190": 229, "1192": 229, "1194": 229, "1196": 229, "1198": 229, "1202": 229, "1204": 229, "1206": 229, "1208": 229, "1210": 229, "1212": 229, "1214": 229, "1216": 229, "1218": 229, "1220": 229, "1222": 229, "1224": 229, "1226": 229, "1228": 229, "1230": 229, "1232": 229, "1236": 229, "1238": 229, "1240": 229, "1242": 229, "1246": 229, "1248": 229, "1250": 229, "1252": 229, "1254": [229, 493, 494, 495, 507, 508, 509], "1256": 229, "1258": 229, "1260": [229, 458], "1262": 229, "1264": 229, "1266": 229, "1268": 229, "1270": 229, "1272": 229, "1274": 229, "1276": 229, "1278": 229, "1280": 229, "1282": 229, "1284": 229, "1286": 229, "1288": 229, "1290": 229, "1292": 229, "1294": 229, "1296": 229, "1298": 229, "1300": 229, "1302": 229, "1304": 229, "1306": 229, "1308": 229, "1310": 229, "1312": 229, "1314": 229, "1316": 229, "1318": 229, "1320": 229, "1322": 229, "1324": 229, "1326": 229, "1328": 229, "1330": 229, "1332": 229, "1334": 229, "1336": 229, "1338": 229, "1340": 229, "1342": [229, 1130], "1344": 229, "1346": 229, "1348": 229, "1350": 229, "1352": [229, 942], "1354": 229, "1356": 229, "1358": 229, "1360": 229, "1362": 229, "1364": 229, "1366": 229, "1368": 229, "1370": 229, "1372": 229, "1374": 229, "1378": 229, "1380": 229, "1382": 229, "1384": 229, "1386": 229, "1388": 229, "1390": 229, "1392": [229, 474, 1130], "1394": 229, "1396": 229, "1398": 229, "1400": 229, "1402": 229, "1406": 229, "1408": 229, "1410": 229, "1412": 229, "1414": 229, "1416": [229, 1053], "1418": 229, "1420": 229, "1422": 229, "1424": 229, "1426": 229, "1428": 229, "1430": 229, "1432": 229, "1434": 229, "1436": 229, "1438": 229, "1440": 229, "1442": 229, "1444": 229, "1446": 229, "1448": 229, "1450": 229, "1452": 229, "1454": 229, "1456": 229, "1458": 229, "1460": 229, "1462": 229, "1464": 229, "1466": 229, "1468": 229, "1470": 229, "1472": 229, "1474": 229, "1476": 229, "1478": 229, "1480": 229, "1482": 229, "1484": 229, "1486": 229, "1488": 229, "1490": 229, "1492": 229, "1494": 229, "1496": 229, "1498": 229, "1502": 229, "1504": 229, "1506": 229, "1508": 229, "1510": 229, "1512": 229, "1514": 229, "1516": 229, "1518": 229, "1520": 229, "1522": 229, "1524": 229, "1526": 229, "1528": 229, "1530": 229, "1532": 229, "1534": 229, "1536": [229, 984], "1538": 229, "1540": 229, "1542": 229, "1544": 229, "1546": 229, "1548": 229, "1550": 229, "1552": 229, "1554": 229, "1556": 229, "1558": [229, 853], "1560": 229, "1562": 229, "1564": 229, "1566": 229, "1568": 229, "1570": 229, "1572": 229, "1574": 229, "1576": 229, "1578": 229, "1580": 229, "1582": 229, "1584": 229, "1586": 229, "1588": 229, "1590": 229, "1592": 229, "1594": 229, "1596": 229, "1598": 229, "1600": 229, "1602": 229, "1604": [229, 978], "1606": 229, "1608": 229, "1610": 229, "1612": 229, "1614": 229, "1616": 229, "1618": 229, "1620": 229, "1622": 229, "1624": 229, "1626": 229, "1628": 229, "1630": 229, "1632": 229, "1634": [229, 493, 494], "1636": 229, "1638": 229, "1640": 229, "1642": 229, "1644": 229, "1646": [229, 1129], "1648": 229, "1650": 229, "1652": 229, "1654": 229, "1656": 229, "1658": 229, "1660": 229, "1662": 229, "1664": 229, "1666": 229, "1668": 229, "1672": 229, "1674": 229, "1676": 229, "1678": 229, "1680": 229, "1682": 229, "1684": 229, "1686": 229, "1688": [229, 985, 986], "1690": 229, "1692": 229, "1694": 229, "1696": 229, "1698": 229, "1700": 229, "1702": 229, "1704": 229, "1706": [229, 996], "1708": 229, "1710": 229, "1712": 229, "1714": [229, 1129], "1716": [229, 1129], "1718": 229, "1722": 229, "1724": 229, "1726": 229, "1728": 229, "1730": 229, "1732": 229, "1734": 229, "1736": 229, "1738": 229, "1740": 229, "1742": 229, "1744": 229, "1746": 229, "1748": 229, "1750": 229, "1752": 229, "1754": 229, "1756": 229, "1758": 229, "1760": 229, "1762": 229, "1764": [229, 288], "1766": 229, "1768": 229, "1770": 229, "1772": 229, "1774": 229, "1776": 229, "1778": 229, "1780": 229, "1782": 229, "1784": 229, "1786": 229, "1788": 229, "1790": 229, "1792": 229, "1794": 229, "1796": 229, "1798": 229, "1800": [229, 984], "1802": 229, "1804": 229, "1806": 229, "1808": 229, "1810": 229, "1812": 229, "1814": 229, "1816": 229, "1818": 229, "1820": 229, "1822": 229, "1824": 229, "1826": 229, "1828": 229, "1830": 229, "1832": 229, "1834": 229, "1836": 229, "1838": 229, "1840": 229, "1842": 229, "1844": 229, "1846": 229, "1848": 229, "1850": 229, "1852": 229, "1854": 229, "1856": 229, "1858": 229, "1860": 229, "1862": 229, "1864": 229, "1866": 229, "1868": 229, "1870": 229, "1872": 229, "1874": 229, "1876": 229, "1878": 229, "1880": 229, "1882": 229, "1884": 229, "1886": 229, "1888": 229, "1890": 229, "1892": 229, "1894": 229, "1896": 229, "1898": 229, "1900": [229, 239, 1097, 1099, 1103, 1105], "1902": 229, "1904": 229, "1906": 229, "1908": 229, "1910": 229, "1912": 229, "1914": 229, "1916": 229, "1918": 229, "1920": 229, "1922": 229, "1924": 229, "1926": 229, "1928": 229, "1930": 229, "1932": 229, "1934": 229, "1938": 229, "1940": 229, "1942": 229, "1944": 229, "1946": 229, "1948": 229, "1950": 229, "1952": 229, "1954": [229, 1063], "1956": [229, 1033], "1958": 229, "1962": 229, "1964": 229, "1968": [229, 403], "1970": [229, 742], "1972": 229, "1974": 229, "1976": 229, "1978": [229, 363], "1980": [229, 568, 984], "1984": 229, "1986": [229, 1097, 1099, 1103, 1105], "1988": [229, 363, 477], "1990": [229, 568], "1992": 229, "1994": 229, "2004": 229, "2024": [229, 359], "2026": 229, "2028": 229, "2030": 229, "2032": 229, "2034": 229, "2036": 229, "2038": 229, "2040": 229, "2042": 229, "2044": 229, "2046": 229, "2050": 229, "2052": 229, "2054": 229, "2056": 229, "2058": 229, "2060": 229, "2062": 229, "2064": 229, "2066": 229, "2068": 229, "2070": 229, "2072": 229, "2074": 229, "2076": 229, "2078": 229, "2080": 229, "2082": 229, "2084": 229, "2086": 229, "2088": 229, "2090": 229, "2092": 229, "2094": 229, "2096": 229, "2098": 229, "2100": 229, "2102": 229, "2104": 229, "2106": 229, "2108": 229, "2110": 229, "2112": 229, "2114": 229, "2116": 229, "2118": 229, "2120": 229, "2122": 229, "2124": 229, "2126": 229, "2128": 229, "2130": 229, "2132": 229, "2134": 229, "2136": 229, "2138": 229, "2140": 229, "2142": 229, "2144": 229, "2146": 229, "2148": 229, "2150": 229, "2152": 229, "2154": 229, "2156": 229, "2158": 229, "2160": 229, "2162": 229, "2164": 229, "2166": 229, "2168": 229, "2170": 229, "2172": 229, "2174": 229, "2176": 229, "2178": 229, "2180": 229, "2182": 229, "2184": 229, "2186": 229, "2188": 229, "2190": 229, "2192": 229, "2194": 229, "2196": [229, 761], "2198": 229, "2200": 229, "2202": 229, "2204": 229, "2206": 229, "2208": 229, "2210": 229, "2214": 229, "2216": 229, "2218": 229, "2220": 229, "2222": 229, "2224": 229, "2226": 229, "2228": 229, "2230": 229, "2232": 229, "2234": 229, "2236": 229, "2238": 229, "2240": 229, "2242": 229, "2244": 229, "2246": 229, "2248": 229, "2250": 229, "2252": 229, "2254": 229, "2256": 229, "2258": 229, "2260": 229, "2262": 229, "2264": 229, "2266": 229, "2268": 229, "2272": 229, "2274": 229, "2276": 229, "2278": 229, "2280": 229, "2282": 229, "2284": 229, "2286": 229, "2288": 229, "2290": 229, "2292": 229, "2294": 229, "2296": 229, "2298": 229, "2300": 229, "2302": 229, "2304": 229, "2306": 229, "2308": 229, "2310": 229, "2312": 229, "2314": 229, "2316": 229, "2318": 229, "2320": 229, "2322": 229, "2324": 229, "2326": 229, "2328": 229, "2330": 229, "2332": [229, 892], "2334": 229, "2336": 229, "2338": 229, "2340": 229, "2342": 229, "2344": 229, "2346": 229, "2348": 229, "2350": 229, "2352": 229, "2354": 229, "2356": 229, "2358": 229, "2360": 229, "2362": 229, "2364": 229, "2366": 229, "2368": 229, "2370": 229, "2372": 229, "2374": 229, "2376": 229, "2378": 229, "2380": 229, "2382": 229, "2384": 229, "2386": 229, "2388": 229, "2390": 229, "2392": 229, "2394": 229, "2396": 229, "2398": 229, "2400": 229, "2402": 229, "2404": 229, "2406": 229, "2408": 229, "2410": 229, "2412": 229, "2414": 229, "2416": 229, "2418": 229, "2420": 229, "2422": 229, "2424": 229, "2426": 229, "2428": 229, "2430": 229, "2432": 229, "2434": 229, "2436": 229, "2438": 229, "2440": [229, 310, 316, 322], "2442": 229, "2444": 229, "2446": 229, "2448": 229, "2450": 229, "2452": 229, "2454": 229, "2456": 229, "2458": 229, "2460": [229, 717], "2462": 229, "2464": 229, "2466": 229, "2468": 229, "2470": 229, "2472": 229, "2474": 229, "2476": 229, "2478": 229, "2480": 229, "2482": 229, "2484": 229, "2486": 229, "2488": 229, "2490": 229, "2492": 229, "2494": 229, "2496": 229, "2498": 229, "2500": 229, "2502": 229, "2504": 229, "2506": 229, "2508": 229, "2510": 229, "2512": 229, "2514": 229, "2516": 229, "2518": 229, "2520": 229, "2522": 229, "2524": 229, "2526": 229, "2528": 229, "2530": 229, "2532": 229, "2534": 229, "2536": 229, "2538": 229, "2540": 229, "2542": 229, "2544": 229, "2546": 229, "2548": 229, "2550": 229, "2552": 229, "2554": 229, "2556": 229, "2558": 229, "2560": 229, "2562": 229, "2564": 229, "2566": 229, "2568": 229, "2570": 229, "2572": 229, "2574": 229, "2576": 229, "2578": 229, "2580": 229, "2582": 229, "2584": 229, "2586": 229, "2588": 229, "2590": 229, "2592": 229, "2594": 229, "2596": 229, "2598": 229, "2600": 229, "2602": 229, "2604": 229, "2606": 229, "2608": 229, "2610": 229, "2612": 229, "2614": 229, "2616": 229, "2618": 229, "2620": 229, "2622": 229, "2624": 229, "2626": 229, "2628": 229, "2630": 229, "2632": 229, "2634": 229, "2636": 229, "2638": 229, "2640": [229, 288], "2642": 229, "2644": 229, "2646": 229, "2648": 229, "2650": 229, "2652": 229, "2654": 229, "2656": 229, "2658": 229, "2660": 229, "2662": 229, "2664": 229, "2666": 229, "2668": 229, "2670": 229, "2672": 229, "2674": 229, "2676": 229, "2678": 229, "2680": 229, "2682": 229, "2684": 229, "2686": 229, "2688": 229, "2690": 229, "2692": 229, "2694": 229, "2696": 229, "2698": 229, "2700": 229, "2702": 229, "2704": 229, "2706": 229, "2708": 229, "2710": 229, "2712": 229, "2714": 229, "2716": 229, "2718": 229, "2720": 229, "2722": 229, "2724": 229, "2726": 229, "2728": 229, "2730": [229, 284], "2732": 229, "2734": 229, "2736": 229, "2738": 229, "2740": 229, "2742": 229, "2744": 229, "2746": [229, 892, 918, 942], "2748": [229, 249, 267, 274, 306, 310, 316, 322], "2750": 229, "2752": 229, "2754": 229, "2756": 229, "2758": 229, "2760": 229, "2762": 229, "2764": 229, "2766": 229, "2768": 229, "2770": 229, "2772": 229, "2774": 229, "2776": 229, "2778": 229, "2780": 229, "2782": 229, "2784": 229, "2786": 229, "2788": 229, "2790": 229, "2792": 229, "2794": 229, "2796": 229, "2798": 229, "2800": [229, 272, 451], "2802": [229, 451], "2804": 229, "2806": 229, "2808": 229, "2810": 229, "2812": 229, "2814": 229, "2816": 229, "2818": 229, "2820": 229, "2822": 229, "2824": 229, "2826": 229, "2828": [229, 445], "2830": 229, "2832": 229, "2834": 229, "2836": 229, "2838": 229, "2840": 229, "2842": 229, "2844": 229, "2846": 229, "2848": 229, "2850": 229, "2852": 229, "2854": 229, "2856": 229, "2858": 229, "2860": 229, "2862": 229, "2864": 229, "2866": 229, "2868": 229, "2870": 229, "2872": 229, "2874": 229, "2876": 229, "2878": 229, "2880": 229, "2882": 229, "2884": 229, "2886": 229, "2888": 229, "2890": 229, "2892": 229, "2894": 229, "2896": 229, "2898": 229, "2900": 229, "2902": 229, "2904": 229, "2906": 229, "2910": 229, "2912": 229, "2914": 229, "2916": 229, "2918": 229, "2920": 229, "2922": 229, "2924": 229, "2926": 229, "2928": 229, "2930": 229, "2932": 229, "2934": 229, "2936": 229, "2938": 229, "2940": 229, "2942": 229, "2944": 229, "2946": 229, "2948": 229, "2950": 229, "2952": 229, "2954": 229, "2956": 229, "2958": 229, "2960": 229, "2962": 229, "2964": 229, "2966": 229, "2968": 229, "2970": 229, "2972": 229, "2974": 229, "2976": 229, "2978": 229, "2980": 229, "2982": 229, "2984": 229, "2986": 229, "2988": 229, "2990": 229, "2992": 229, "2994": 229, "2996": 229, "2998": 229, "3002": 229, "3004": 229, "3006": 229, "3008": 229, "3010": 229, "3012": 229, "3014": 229, "3016": 229, "3018": 229, "3020": 229, "3022": 229, "3024": 229, "3026": 229, "3028": 229, "3030": 229, "3032": 229, "3034": 229, "3036": 229, "3038": 229, "3040": 229, "3042": 229, "3044": 229, "3046": 229, "3048": 229, "3050": 229, "3052": 229, "3054": 229, "3056": 229, "3058": 229, "3060": 229, "3062": 229, "3064": 229, "3066": 229, "3068": 229, "3070": 229, "3072": 229, "3074": 229, "3076": 229, "3078": 229, "3080": 229, "3082": 229, "3084": 229, "3086": 229, "3088": 229, "3090": 229, "3092": 229, "3094": 229, "3096": 229, "3098": 229, "3100": 229, "3102": 229, "3104": 229, "3106": 229, "3108": 229, "3110": [229, 278], "3112": 229, "3114": 229, "3116": 229, "3118": 229, "3120": 229, "3122": 229, "3124": 229, "3126": 229, "3128": 229, "3130": 229, "3132": 229, "3134": 229, "3136": 229, "3138": 229, "3140": 229, "3142": 229, "3144": 229, "3146": 229, "3148": 229, "3150": 229, "3152": 229, "3154": 229, "3156": 229, "3158": 229, "3160": 229, "3162": 229, "3164": 229, "3166": 229, "3168": 229, "3170": 229, "3172": 229, "3174": 229, "3176": 229, "3178": 229, "3180": 229, "3182": 229, "3184": 229, "3186": 229, "3188": 229, "3190": 229, "3192": 229, "3194": 229, "3196": 229, "3198": 229, "3200": 229, "3202": 229, "3204": 229, "3206": 229, "3208": 229, "3210": 229, "3212": 229, "3214": 229, "3216": 229, "3218": 229, "3220": 229, "3222": 229, "3224": 229, "3226": 229, "3228": 229, "3230": 229, "3232": 229, "3234": 229, "3236": 229, "3238": 229, "3240": 229, "3242": 229, "3244": 229, "3246": 229, "3248": 229, "3250": 229, "3252": 229, "3254": 229, "3256": 229, "3258": 229, "3260": 229, "3262": 229, "3264": 229, "3266": 229, "3268": 229, "3270": 229, "3272": 229, "3274": 229, "3276": 229, "3278": 229, "3280": 229, "3282": 229, "3284": 229, "3286": 229, "3288": 229, "3290": 229, "3292": 229, "3294": 229, "3296": 229, "3298": 229, "3300": 229, "3302": 229, "3304": 229, "3306": 229, "3308": 229, "3310": 229, "3312": 229, "3314": 229, "3316": 229, "3318": 229, "3320": 229, "3322": 229, "3324": 229, "3326": 229, "3328": 229, "3330": 229, "3332": 229, "3334": 229, "3336": 229, "3338": 229, "3340": 229, "3342": 229, "3344": 229, "3346": 229, "3348": 229, "3350": 229, "3352": 229, "3354": 229, "3356": 229, "3358": 229, "3360": 229, "3362": 229, "3364": 229, "3366": 229, "3368": 229, "3370": 229, "3372": 229, "3374": 229, "3376": 229, "3378": 229, "3380": 229, "3382": 229, "3384": 229, "3386": 229, "3388": 229, "3390": 229, "3392": 229, "3394": 229, "3396": 229, "3398": 229, "3400": 229, "3402": 229, "3404": 229, "3406": 229, "3408": 229, "3410": 229, "3412": 229, "3414": 229, "3416": 229, "3418": 229, "3420": 229, "3422": 229, "3424": 229, "3426": 229, "3428": 229, "3430": 229, "3432": 229, "3434": 229, "3436": 229, "3438": 229, "3440": 229, "3442": 229, "3444": 229, "3446": 229, "3448": 229, "3450": 229, "3452": 229, "3454": 229, "3456": 229, "3458": 229, "3460": 229, "3462": 229, "3464": 229, "3466": 229, "3468": 229, "3470": 229, "3472": 229, "3474": 229, "3476": 229, "3478": 229, "3480": 229, "3482": 229, "3484": 229, "3486": 229, "3488": 229, "3490": 229, "3492": 229, "3494": 229, "3496": 229, "3498": 229, "3500": 229, "3502": 229, "3504": 229, "3506": 229, "3508": 229, "3510": 229, "3512": 229, "3514": 229, "3516": 229, "3518": 229, "3520": 229, "3522": 229, "3524": 229, "3526": 229, "3528": 229, "3530": 229, "3532": 229, "3534": 229, "3536": 229, "3538": 229, "3540": 229, "3542": 229, "3544": 229, "3546": 229, "3548": 229, "3550": 229, "3552": 229, "3554": 229, "3556": 229, "3558": 229, "3560": 229, "3562": 229, "3564": 229, "3566": 229, "3568": 229, "3570": 229, "3572": 229, "3574": 229, "3576": 229, "3578": 229, "3580": 229, "3582": 229, "3584": 229, "3586": 229, "3588": 229, "3590": 229, "3592": 229, "3594": 229, "3596": 229, "3598": 229, "3602": 229, "3604": 229, "3606": 229, "3608": 229, "3610": 229, "3612": 229, "3614": 229, "3616": 229, "3618": 229, "3620": 229, "3622": 229, "3624": 229, "3626": 229, "3628": 229, "3630": 229, "3632": 229, "3634": 229, "3636": 229, "3638": 229, "3640": 229, "3642": 229, "3644": 229, "3646": 229, "3648": 229, "3650": 229, "3652": 229, "3654": 229, "3656": 229, "3658": 229, "3660": 229, "3662": 229, "3664": 229, "3666": 229, "3668": 229, "3670": 229, "3672": 229, "3674": 229, "3676": 229, "3678": 229, "3680": 229, "3682": 229, "3684": 229, "3686": 229, "3688": 229, "3690": 229, "3692": 229, "3694": 229, "3696": 229, "3698": 229, "3700": 229, "3702": 229, "3704": 229, "3706": 229, "3708": 229, "3710": 229, "3712": 229, "3714": 229, "3716": 229, "3718": 229, "3720": 229, "3722": [229, 939], "3724": 229, "3726": 229, "3728": 229, "3730": 229, "3732": 229, "3734": 229, "3736": 229, "3738": 229, "3740": 229, "3742": 229, "3744": 229, "3746": 229, "3748": 229, "3750": 229, "3752": 229, "3754": 229, "3756": 229, "3758": 229, "3760": 229, "3762": 229, "3764": 229, "3766": 229, "3768": 229, "3770": [229, 278], "3772": 229, "3774": 229, "3776": 229, "3778": 229, "3780": 229, "3782": 229, "3784": 229, "3786": 229, "3788": 229, "3790": [229, 1130], "3792": [229, 1130], "3794": [229, 1130], "3796": [229, 1130], "3798": [229, 1130], "3800": [229, 1130], "3802": [229, 1130], "3804": 229, "3806": 229, "3808": 229, "3810": 229, "3812": 229, "3814": 229, "3816": 229, "3818": 229, "3820": 229, "3822": 229, "3824": 229, "3826": 229, "3828": 229, "3830": 229, "3832": 229, "3834": 229, "3836": 229, "3838": 229, "3840": 229, "3842": 229, "3844": 229, "3846": 229, "3848": 229, "3850": 229, "3852": 229, "3854": 229, "3856": 229, "3858": 229, "3860": 229, "3862": 229, "3864": 229, "3866": 229, "3868": 229, "3870": 229, "3872": 229, "3874": 229, "3876": 229, "3878": 229, "3880": 229, "3882": 229, "3884": 229, "3886": 229, "3888": 229, "3890": 229, "3892": 229, "3894": 229, "3896": 229, "3898": 229, "3900": 229, "3902": 229, "3904": 229, "3906": 229, "3908": 229, "3910": 229, "3912": 229, "3914": 229, "3916": 229, "3918": 229, "3920": 229, "3922": 229, "3924": 229, "3926": 229, "3928": 229, "3930": 229, "3932": 229, "3934": 229, "3936": 229, "3938": 229, "3940": 229, "3942": 229, "3946": 229, "3948": 229, "3950": 229, "3952": 229, "3954": 229, "3956": 229, "3958": 229, "3960": 229, "3962": 229, "3964": 229, "3966": 229, "3968": 229, "3970": 229, "3972": 229, "3974": 229, "3976": 229, "3978": 229, "3980": 229, "3982": 229, "3984": 229, "3986": 229, "3988": 229, "3990": 229, "3992": 229, "3994": 229, "3996": 229, "3998": 229, "4002": 229, "4004": 229, "4006": 229, "4008": 229, "4010": 229, "4012": 229, "4014": 229, "4016": 229, "4018": 229, "4020": 229, "4022": 229, "4024": 229, "4026": 229, "4028": 229, "4030": 229, "4032": 229, "4034": 229, "4036": 229, "4038": 229, "4040": 229, "4042": 229, "4044": 229, "4046": 229, "4048": 229, "4050": 229, "4052": 229, "4054": 229, "4056": 229, "4058": 229, "4060": 229, "4062": 229, "4064": 229, "4066": 229, "4068": 229, "4070": 229, "4072": 229, "4074": 229, "4076": 229, "4078": 229, "4080": 229, "4082": 229, "4084": 229, "4086": 229, "4088": 229, "4090": 229, "4092": 229, "4094": 229, "4098": 229, "4100": 229, "4102": 229, "4104": 229, "4106": 229, "4108": 229, "4110": 229, "4112": 229, "4114": 229, "4116": 229, "4118": 229, "4120": 229, "4122": 229, "4124": 229, "4126": 229, "4128": 229, "4130": 229, "4132": 229, "4134": 229, "4136": 229, "4138": 229, "4140": 229, "4142": 229, "4144": 229, "4146": 229, "4148": 229, "4150": 229, "4152": 229, "4154": 229, "4156": 229, "4158": 229, "4160": 229, "4162": 229, "4164": 229, "4166": 229, "4168": 229, "4170": 229, "4172": 229, "4174": 229, "4176": 229, "4178": 229, "4180": 229, "4182": 229, "4184": 229, "4186": 229, "4188": 229, "4190": 229, "4192": 229, "4194": 229, "4196": 229, "4198": 229, "4200": 229, "4202": 229, "4204": 229, "4206": 229, "4208": 229, "4210": 229, "4212": 229, "4214": 229, "4216": 229, "4218": 229, "4220": 229, "4222": 229, "4224": 229, "4226": 229, "4228": 229, "4230": 229, "4232": 229, "4234": [229, 1130], "4236": [229, 1130], "4238": [229, 1130], "4240": 229, "4242": 229, "4244": 229, "4246": 229, "4248": 229, "4250": 229, "4252": 229, "4254": 229, "4256": 229, "4258": 229, "4260": 229, "4262": 229, "4264": 229, "4266": 229, "4268": 229, "4270": 229, "4272": 229, "4274": 229, "4276": 229, "4278": 229, "4280": 229, "4282": 229, "4284": 229, "4286": 229, "4288": 229, "4290": 229, "4292": 229, "4294": 229, "4296": 229, "4298": 229, "4300": 229, "4302": 229, "4304": 229, "4306": 229, "4308": 229, "4310": 229, "4312": 229, "4314": 229, "4316": 229, "4318": 229, "4320": 229, "4322": 229, "4324": 229, "4326": 229, "4328": 229, "4330": 229, "4332": 229, "4334": 229, "4336": 229, "4338": 229, "4340": 229, "4342": 229, "4344": 229, "4346": 229, "4348": 229, "4350": 229, "4352": 229, "4354": 229, "4356": 229, "4358": 229, "4360": 229, "4362": 229, "4364": 229, "4366": 229, "4368": 229, "4370": 229, "4372": 229, "4374": 229, "4376": 229, "4378": 229, "4380": 229, "4382": 229, "4384": 229, "4386": 229, "4388": 229, "4390": 229, "4392": 229, "4394": 229, "4396": 229, "4398": 229, "4400": 229, "4402": 229, "4404": 229, "4406": 229, "4408": 229, "4410": 229, "4412": 229, "4414": 229, "4416": 229, "4418": 229, "4420": 229, "4422": 229, "4424": 229, "4426": 229, "4428": 229, "4430": 229, "4432": 229, "4434": 229, "4436": 229, "4438": 229, "4440": 229, "4442": 229, "4444": 229, "4446": 229, "4448": 229, "4450": 229, "4452": 229, "4454": 229, "4456": 229, "4458": 229, "4460": 229, "4462": 229, "4464": 229, "4466": 229, "4468": 229, "4470": 229, "4472": 229, "4474": 229, "4476": 229, "4478": 229, "4480": 229, "4482": 229, "4484": 229, "4486": 229, "4488": 229, "4490": 229, "4492": 229, "4494": 229, "4496": 229, "4498": 229, "4502": 229, "4504": 229, "4506": 229, "4508": 229, "4510": 229, "4512": 229, "4514": 229, "4516": 229, "4518": 229, "4520": 229, "4522": 229, "4524": 229, "4526": 229, "4528": 229, "4530": 229, "4532": 229, "4534": 229, "4536": 229, "4538": 229, "4540": 229, "4542": 229, "4544": 229, "4546": 229, "4548": 229, "4550": 229, "4552": 229, "4554": 229, "4556": 229, "4558": 229, "4560": 229, "4562": 229, "4564": 229, "4566": 229, "4568": 229, "4570": 229, "4572": 229, "4574": 229, "4578": 229, "4580": 229, "4582": 229, "4584": 229, "4586": 229, "4588": 229, "4590": 229, "4592": 229, "4594": 229, "4596": 229, "4598": 229, "4600": 229, "4602": 229, "4604": 229, "4606": 229, "4608": 229, "4610": 229, "4612": 229, "4614": 229, "4616": 229, "4618": 229, "4620": 229, "4622": 229, "4624": 229, "4626": 229, "4628": [229, 242], "4630": [229, 445], "4632": 229, "4634": 229, "4636": 229, "4638": 229, "4640": 229, "4642": 229, "4644": 229, "4646": 229, "4648": 229, "4650": 229, "4652": 229, "4654": 229, "4656": 229, "4658": 229, "4662": 229, "4664": 229, "4666": 229, "4668": 229, "4670": 229, "4672": 229, "4674": 229, "4676": 229, "4680": 229, "4682": 229, "4684": 229, "4686": 229, "4688": 229, "4690": 229, "4692": 229, "4694": 229, "4696": 229, "4698": 229, "4700": 229, "4702": 229, "4704": 229, "4706": 229, "4708": 229, "4710": 229, "4712": 229, "4714": 229, "4716": 229, "4718": 229, "4720": 229, "4722": 229, "4724": 229, "4726": 229, "4728": 229, "4730": 229, "4732": 229, "4734": 229, "4736": 229, "4738": 229, "4740": 229, "4742": 229, "4744": 229, "4746": 229, "4748": 229, "4750": 229, "4752": 229, "4754": 229, "4756": 229, "4758": 229, "4760": 229, "4762": 229, "4764": 229, "4766": 229, "4768": 229, "4770": 229, "4772": 229, "4774": 229, "4776": 229, "4778": 229, "4780": 229, "4782": 229, "4784": 229, "4786": 229, "4788": 229, "4790": 229, "4792": 229, "4794": 229, "4796": 229, "4798": 229, "4802": 229, "4804": 229, "4806": 229, "4808": 229, "4810": 229, "4812": 229, "4814": 229, "4816": 229, "4818": 229, "4820": 229, "4822": 229, "4824": 229, "4826": 229, "4828": 229, "4830": 229, "4832": 229, "4834": 229, "4836": 229, "4838": 229, "4840": 229, "4842": 229, "4844": 229, "4846": 229, "4848": 229, "4850": 229, "4852": 229, "4854": 229, "4856": 229, "4858": 229, "4860": 229, "4862": 229, "4864": 229, "4866": [229, 239], "4868": 229, "4870": 229, "4872": 229, "4874": 229, "4876": 229, "4878": 229, "4880": 229, "4882": [229, 855], "4884": 229, "4886": 229, "4888": 229, "4890": 229, "4892": 229, "4894": 229, "4896": 229, "4898": 229, "4900": 229, "4902": 229, "4904": 229, "4906": 229, "4908": 229, "4910": 229, "4912": 229, "4914": 229, "4916": 229, "4918": 229, "4920": 229, "4922": 229, "4924": 229, "4926": [229, 242], "4928": 229, "4930": 229, "4932": 229, "4934": 229, "4936": 229, "4938": 229, "4940": 229, "4942": 229, "4944": 229, "4946": 229, "4948": 229, "4950": [229, 246], "4952": 229, "4954": 229, "4956": 229, "4958": 229, "4960": 229, "4962": 229, "4964": 229, "4966": 229, "4968": 229, "4970": 229, "4972": 229, "4974": 229, "4976": 229, "4978": 229, "4980": 229, "4982": 229, "4984": 229, "4986": 229, "4988": 229, "4990": 229, "4992": 229, "4994": 229, "4996": 229, "4998": 229, "5002": 229, "5004": 229, "5006": 229, "5008": 229, "5010": 229, "5012": 229, "5014": 229, "5016": 229, "5018": 229, "5020": 229, "5022": 229, "5024": 229, "5026": 229, "5028": 229, "5030": 229, "5032": 229, "5034": 229, "5036": 229, "5038": 229, "5040": 229, "5042": 229, "5044": 229, "5046": 229, "5048": 229, "5052": 229, "5054": 229, "5056": 229, "5058": 229, "5060": 229, "5062": 229, "5064": 229, "5066": 229, "5068": 229, "5070": 229, "5072": 229, "5074": 229, "5076": 229, "5078": 229, "5080": [229, 892], "5082": 229, "5084": 229, "5086": 229, "5088": 229, "5090": 229, "5092": 229, "5094": 229, "5096": 229, "5098": 229, "5100": 229, "5102": 229, "5104": 229, "5106": 229, "5108": 229, "5110": 229, "5112": 229, "5114": 229, "5116": 229, "5118": 229, "5120": 229, "5122": 229, "5124": 229, "5126": 229, "5128": 229, "5130": 229, "5132": 229, "5134": 229, "5136": 229, "5138": 229, "5140": 229, "5142": 229, "5144": 229, "5146": 229, "5148": 229, "5150": 229, "5152": 229, "5154": 229, "5156": 229, "5158": 229, "5160": 229, "5162": 229, "5164": 229, "5166": 229, "5168": 229, "5170": 229, "5172": 229, "5174": 229, "5176": 229, "5178": 229, "5180": 229, "5182": 229, "5184": 229, "5186": 229, "5188": 229, "5190": 229, "5192": 229, "5194": 229, "5196": 229, "5198": 229, "5200": 229, "5202": 229, "5204": 229, "5206": 229, "5208": 229, "5210": 229, "5212": 229, "5214": 229, "5216": 229, "5218": 229, "5220": 229, "5222": 229, "5224": 229, "5226": 229, "5228": 229, "5230": 229, "5232": 229, "5234": 229, "5236": 229, "5238": 229, "5240": 229, "5242": 229, "5244": 229, "5246": 229, "5248": 229, "5250": 229, "5252": 229, "5254": 229, "5256": 229, "5258": 229, "5260": 229, "5262": 229, "5264": 229, "5266": 229, "5268": 229, "5270": 229, "5272": 229, "5274": 229, "5276": 229, "5278": 229, "5280": 229, "5282": 229, "5284": 229, "5286": 229, "5288": 229, "5290": 229, "5292": 229, "5294": 229, "5296": 229, "5298": 229, "5300": 229, "5302": 229, "5304": 229, "5306": 229, "5308": 229, "5310": 229, "5312": 229, "5314": 229, "5316": 229, "5318": 229, "5320": 229, "5322": 229, "5324": 229, "5326": 229, "5328": 229, "5330": 229, "5332": 229, "5334": 229, "5336": 229, "5338": 229, "5340": 229, "5342": 229, "5344": 229, "5346": 229, "5348": 229, "5350": 229, "5352": 229, "5354": 229, "5356": 229, "5358": 229, "5360": 229, "5362": [229, 272, 451], "5364": 229, "5366": 229, "5368": 229, "5370": 229, "5372": 229, "5374": 229, "5376": 229, "5378": 229, "5380": 229, "5382": 229, "5384": 229, "5386": 229, "5388": 229, "5390": 229, "5392": 229, "5394": 229, "5396": 229, "5398": 229, "5400": 229, "5402": 229, "5404": 229, "5406": 229, "5408": 229, "5410": [229, 445], "5412": 229, "5414": 229, "5416": 229, "5418": 229, "5420": 229, "5422": 229, "5424": 229, "5426": 229, "5428": 229, "5430": 229, "5432": 229, "5434": 229, "5436": 229, "5438": 229, "5440": 229, "5442": 229, "5444": 229, "5446": 229, "5448": 229, "5450": 229, "5452": 229, "5454": 229, "5456": 229, "5458": 229, "5460": 229, "5462": 229, "5464": 229, "5466": 229, "5468": 229, "5470": 229, "5472": 229, "5474": 229, "5476": 229, "5478": 229, "5480": 229, "5482": 229, "5484": 229, "5486": 229, "5488": 229, "5490": 229, "5492": 229, "5494": 229, "5496": 229, "5498": 229, "5500": 229, "5502": 229, "5504": 229, "5506": 229, "5508": 229, "5510": 229, "5512": 229, "5514": 229, "5516": 229, "5518": 229, "5520": 229, "5522": 229, "5524": 229, "5526": 229, "5528": 229, "5530": 229, "5532": 229, "5534": 229, "5536": 229, "5538": 229, "5540": 229, "5542": 229, "5544": 229, "5546": 229, "5548": 229, "5550": 229, "5552": 229, "5554": 229, "5556": 229, "5558": 229, "5560": 229, "5562": 229, "5564": 229, "5566": 229, "5568": 229, "5570": 229, "5572": 229, "5574": 229, "5576": 229, "5578": 229, "5580": 229, "5582": 229, "5584": 229, "5586": 229, "5588": 229, "5590": 229, "5592": 229, "5594": 229, "5596": 229, "5598": 229, "5600": 229, "5602": 229, "5604": 229, "5606": 229, "5608": 229, "5610": 229, "5612": 229, "5614": 229, "5616": 229, "5618": 229, "5620": 229, "5622": 229, "5624": 229, "5626": 229, "5628": 229, "5630": 229, "5632": 229, "5634": 229, "5636": 229, "5638": 229, "5640": 229, "5642": 229, "5644": 229, "5646": 229, "5648": 229, "5650": 229, "5652": 229, "5654": 229, "5656": 229, "5658": 229, "5660": 229, "5662": 229, "5664": 229, "5666": 229, "5668": 229, "5670": 229, "5672": 229, "5674": 229, "5676": 229, "5678": [229, 925], "5680": 229, "5682": 229, "5684": 229, "5686": 229, "5688": 229, "5690": 229, "5692": 229, "5694": 229, "5696": 229, "5698": 229, "5700": 229, "5702": 229, "5704": 229, "5706": 229, "5708": 229, "5710": 229, "5712": 229, "5714": 229, "5716": 229, "5718": 229, "5720": 229, "5722": 229, "5724": 229, "5726": 229, "5728": 229, "5730": 229, "5732": 229, "5734": 229, "5736": 229, "5738": 229, "5740": 229, "5742": 229, "5744": 229, "5746": 229, "5748": 229, "5750": 229, "5752": 229, "5754": 229, "5756": 229, "5758": 229, "5760": 229, "5762": 229, "5764": 229, "5766": 229, "5768": 229, "5770": 229, "5772": 229, "5774": 229, "5776": 229, "5778": 229, "5780": 229, "5782": 229, "5784": 229, "5786": 229, "5788": 229, "5790": 229, "5792": 229, "5794": 229, "5796": 229, "5798": 229, "5800": 229, "5802": 229, "5804": 229, "5806": 229, "5808": 229, "5810": 229, "5812": 229, "5814": 229, "5816": 229, "5818": 229, "5820": 229, "5822": 229, "5824": 229, "5826": 229, "5828": 229, "5830": 229, "5832": [229, 239], "5834": 229, "5836": 229, "5838": 229, "5840": 229, "5842": 229, "5844": 229, "5846": 229, "5848": 229, "5850": 229, "5852": 229, "5854": 229, "5856": 229, "5858": 229, "5860": 229, "5862": 229, "5864": 229, "5866": 229, "5868": 229, "5870": 229, "5872": 229, "5874": 229, "5876": 229, "5878": 229, "5880": 229, "5882": 229, "5884": 229, "5886": 229, "5888": 229, "5890": 229, "5892": 229, "5894": 229, "5896": 229, "5898": 229, "5900": 229, "5902": 229, "5904": 229, "5906": 229, "5908": 229, "5910": 229, "5912": 229, "5914": 229, "5916": 229, "5918": 229, "5920": 229, "5922": 229, "5924": 229, "5926": 229, "5928": 229, "5930": 229, "5932": 229, "5934": 229, "5936": 229, "5938": 229, "5940": 229, "5942": 229, "5944": 229, "5946": 229, "5948": 229, "5950": 229, "5952": 229, "5954": 229, "5956": 229, "5958": 229, "5960": 229, "5962": 229, "5964": 229, "5966": 229, "5968": 229, "5970": 229, "5972": 229, "5974": 229, "5976": 229, "5978": 229, "5980": 229, "5982": 229, "5984": 229, "5986": 229, "5988": 229, "5990": 229, "5992": 229, "5994": 229, "5996": 229, "5998": 229, "6000": [229, 1024], "6002": 229, "6004": 229, "6006": 229, "6008": 229, "6010": 229, "6012": 229, "6014": 229, "6016": 229, "6018": 229, "6020": 229, "6022": 229, "6024": 229, "6026": 229, "6028": 229, "6030": 229, "6032": 229, "6034": 229, "6036": 229, "6038": 229, "6040": 229, "6042": 229, "6044": 229, "6046": 229, "6048": 229, "6050": 229, "6052": 229, "6054": 229, "6056": 229, "6058": 229, "6060": 229, "6062": 229, "6064": 229, "6066": 229, "6068": 229, "6070": 229, "6072": 229, "6074": 229, "6076": 229, "6078": 229, "6080": 229, "6082": 229, "6084": 229, "6086": 229, "6088": 229, "6090": 229, "6092": 229, "6094": 229, "6096": 229, "6098": 229, "6100": 229, "6102": 229, "6104": 229, "6106": 229, "6108": 229, "6110": 229, "6112": 229, "6114": 229, "6116": 229, "6118": 229, "6120": 229, "6122": 229, "6124": 229, "6126": 229, "6128": 229, "6130": 229, "6132": 229, "6134": 229, "6136": 229, "6138": 229, "6140": 229, "6142": 229, "6144": 229, "6146": 229, "6148": 229, "6150": 229, "6152": 229, "6154": 229, "6156": 229, "6158": 229, "6160": 229, "6162": 229, "6164": 229, "6166": 229, "6168": 229, "6170": 229, "6172": 229, "6174": 229, "6176": 229, "6178": 229, "6180": 229, "6182": 229, "6184": 229, "6186": 229, "6188": 229, "6190": 229, "6192": 229, "6194": 229, "6196": 229, "6198": 229, "6200": 229, "6202": 229, "6204": 229, "6206": 229, "6208": 229, "6210": 229, "6212": 229, "6214": 229, "6216": 229, "6218": 229, "6220": 229, "6222": 229, "6224": 229, "6226": 229, "6228": 229, "6230": 229, "6232": 229, "6234": 229, "6236": 229, "6238": 229, "6240": 229, "6242": 229, "6244": 229, "6246": 229, "6248": 229, "6250": 229, "6252": 229, "6254": 229, "6256": 229, "6258": 229, "6260": 229, "6262": 229, "6264": 229, "6266": 229, "6268": 229, "6270": 229, "6272": 229, "6274": 229, "6276": 229, "6278": 229, "6280": 229, "6282": 229, "6284": 229, "6286": 229, "6288": 229, "6290": 229, "6292": 229, "6294": 229, "6296": 229, "6298": 229, "6300": 229, "6302": 229, "6304": 229, "6306": 229, "6308": 229, "6310": 229, "6312": 229, "6314": 229, "6316": 229, "6318": 229, "6320": 229, "6322": 229, "6324": 229, "6326": 229, "6328": 229, "6330": 229, "6332": 229, "6334": 229, "6336": 229, "6338": 229, "6340": 229, "6342": 229, "6344": 229, "6346": 229, "6348": 229, "6350": 229, "6352": 229, "6354": 229, "6356": 229, "6358": 229, "6360": 229, "6362": 229, "6364": 229, "6366": 229, "6368": 229, "6370": 229, "6372": 229, "6374": 229, "6376": 229, "6378": 229, "6380": 229, "6382": 229, "6384": 229, "6386": 229, "6388": 229, "6390": 229, "6392": 229, "6394": 229, "6396": 229, "6398": 229, "6400": 229, "6402": 229, "6404": 229, "6406": 229, "6408": 229, "6410": 229, "6412": 229, "6414": 229, "6416": 229, "6418": 229, "6420": 229, "6422": 229, "6424": 229, "6426": 229, "6428": 229, "6430": 229, "6432": 229, "6434": 229, "6436": 229, "6438": 229, "6440": 229, "6442": 229, "6444": 229, "6446": 229, "6448": 229, "6450": 229, "6452": 229, "6454": 229, "6456": 229, "6458": 229, "6460": 229, "6462": 229, "6464": 229, "6466": 229, "6468": 229, "6470": 229, "6472": 229, "6474": 229, "6476": 229, "6478": 229, "6480": 229, "6482": 229, "6484": 229, "6486": 229, "6488": 229, "6490": 229, "6492": 229, "6494": 229, "6496": 229, "6498": 229, "6500": 229, "6502": 229, "6504": 229, "6506": 229, "6508": 229, "6510": 229, "6512": 229, "6514": 229, "6516": 229, "6518": 229, "6520": 229, "6522": 229, "6524": 229, "6526": 229, "6528": 229, "6530": 229, "6532": 229, "6534": 229, "6536": 229, "6538": 229, "6540": 229, "6542": 229, "6544": 229, "6546": 229, "6548": 229, "6550": 229, "6552": 229, "6554": 229, "6556": 229, "6558": 229, "6560": 229, "6562": 229, "6564": 229, "6566": 229, "6568": 229, "6570": 229, "6572": 229, "6574": 229, "6576": 229, "6578": 229, "6580": 229, "6582": 229, "6584": 229, "6586": 229, "6588": 229, "6590": 229, "6592": 229, "6594": 229, "6596": 229, "6598": 229, "6600": 229, "6602": 229, "6604": 229, "6606": 229, "6608": 229, "6610": 229, "6612": 229, "6614": 229, "6616": 229, "6618": 229, "6620": 229, "6622": 229, "6624": 229, "6626": 229, "6628": 229, "6630": 229, "6632": 229, "6634": 229, "6636": 229, "6638": 229, "6640": 229, "6642": 229, "6644": 229, "6646": 229, "6648": 229, "6650": 229, "6652": 229, "6654": 229, "6656": 229, "6658": 229, "6660": 229, "6662": 229, "6664": 229, "6666": 229, "6668": 229, "6670": 229, "6672": 229, "6674": 229, "6676": 229, "6678": 229, "6680": 229, "6682": 229, "6684": 229, "6686": 229, "6688": 229, "6690": 229, "6692": 229, "6694": 229, "6696": 229, "6698": 229, "6700": 229, "6702": 229, "6704": 229, "6706": 229, "6708": 229, "6710": 229, "6714": 229, "6716": [229, 252], "6718": 229, "6720": 229, "6722": 229, "6724": 229, "6726": 229, "6728": 229, "6730": 229, "6732": 229, "6734": 229, "6736": 229, "6738": 229, "6740": 229, "6742": 229, "6744": 229, "6746": 229, "6748": 229, "6750": 229, "6752": 229, "6754": 229, "6756": 229, "6758": 229, "6760": 229, "6762": 229, "6764": 229, "6766": 229, "6768": 229, "6770": 229, "6772": 229, "6774": 229, "6776": 229, "6778": 229, "6780": 229, "6782": 229, "6784": 229, "6786": 229, "6788": 229, "6790": 229, "6792": 229, "6794": 229, "6796": 229, "6798": 229, "6800": 229, "6802": 229, "6804": 229, "6806": 229, "6808": 229, "6810": 229, "6812": 229, "6814": 229, "6816": 229, "6818": 229, "6820": 229, "6822": 229, "6824": 229, "6826": 229, "6828": 229, "6830": 229, "6832": 229, "6834": 229, "6836": 229, "6838": 229, "6840": 229, "6842": 229, "6844": 229, "6846": 229, "6848": 229, "6850": 229, "6852": 229, "6854": 229, "6856": 229, "6858": [229, 278], "6860": 229, "6862": 229, "6864": 229, "6866": 229, "6868": 229, "6870": 229, "6872": 229, "6874": 229, "6876": 229, "6878": 229, "6880": 229, "6882": 229, "6884": 229, "6886": 229, "6888": 229, "6890": 229, "6892": 229, "6894": 229, "6896": 229, "6898": 229, "6900": 229, "6902": 229, "6904": 229, "6906": 229, "6908": 229, "6910": 229, "6912": 229, "6914": 229, "6916": 229, "6918": 229, "6920": 229, "6922": 229, "6924": 229, "6926": 229, "6928": 229, "6930": 229, "6932": 229, "6934": 229, "6936": 229, "6938": 229, "6940": 229, "6942": 229, "6944": 229, "6946": 229, "6948": 229, "6950": 229, "6952": 229, "6954": 229, "6956": 229, "6958": 229, "6960": 229, "6962": 229, "6964": 229, "6966": 229, "6968": 229, "6970": 229, "6972": 229, "6974": 229, "6976": 229, "6978": 229, "6980": 229, "6982": 229, "6984": 229, "6986": 229, "6988": 229, "6990": 229, "6992": 229, "6994": 229, "6996": 229, "6998": 229, "7000": 229, "7002": 229, "7004": 229, "7006": 229, "7008": 229, "7010": 229, "7012": 229, "7014": 229, "7016": 229, "7018": 229, "7020": 229, "7022": 229, "7024": 229, "7026": 229, "7028": 229, "7030": 229, "7032": 229, "7034": 229, "7036": 229, "7038": 229, "7040": 229, "7042": 229, "7044": 229, "7046": 229, "7048": 229, "7050": 229, "7052": 229, "7054": 229, "7056": 229, "7058": 229, "7060": 229, "7062": 229, "7064": 229, "7066": 229, "7068": 229, "7070": 229, "7072": 229, "7074": 229, "7076": 229, "7078": 229, "7080": [229, 1130], "7082": 229, "7084": 229, "7086": 229, "7088": [229, 1130], "7090": 229, "7092": 229, "7094": 229, "7096": 229, "7098": 229, "7100": 229, "7102": 229, "7104": 229, "7106": 229, "7108": 229, "7110": 229, "7112": 229, "7114": 229, "7116": 229, "7118": 229, "7120": 229, "7122": 229, "7124": 229, "7126": 229, "7128": 229, "7130": 229, "7132": 229, "7134": 229, "7136": 229, "7138": 229, "7140": 229, "7142": 229, "7144": 229, "7146": 229, "7148": 229, "7150": 229, "7152": 229, "7154": 229, "7156": 229, "7158": 229, "7160": 229, "7162": 229, "7164": 229, "7166": 229, "7168": 229, "7170": 229, "7172": 229, "7174": 229, "7176": 229, "7178": 229, "7180": 229, "7182": 229, "7184": 229, "7186": 229, "7188": 229, "7190": 229, "7192": 229, "7194": 229, "7196": 229, "7198": 229, "7200": 229, "7202": 229, "7204": 229, "7206": 229, "7208": 229, "7210": 229, "7212": 229, "7214": 229, "7216": 229, "7218": 229, "7220": 229, "7222": 229, "7224": 229, "7226": 229, "7228": 229, "7230": 229, "7232": 229, "7234": 229, "7236": 229, "7238": 229, "7240": 229, "7242": 229, "7244": 229, "7246": 229, "7248": 229, "7250": 229, "7252": 229, "7254": 229, "7256": 229, "7258": 229, "7260": 229, "7262": 229, "7264": 229, "7266": 229, "7268": 229, "7270": 229, "7272": 229, "7274": 229, "7276": 229, "7278": 229, "7280": 229, "7282": 229, "7284": 229, "7286": 229, "7288": 229, "7290": 229, "7292": 229, "7294": 229, "7296": 229, "7298": 229, "7300": 229, "7302": 229, "7304": 229, "7306": 229, "7308": 229, "7310": 229, "7312": 229, "7314": 229, "7316": 229, "7318": 229, "7320": 229, "7322": 229, "7324": 229, "7326": 229, "7328": 229, "7330": 229, "7332": 229, "7334": 229, "7336": 229, "7338": 229, "7340": 229, "7342": 229, "7344": 229, "7346": 229, "7348": 229, "7350": 229, "7352": 229, "7354": 229, "7356": 229, "7358": 229, "7360": 229, "7362": 229, "7364": 229, "7366": 229, "7368": 229, "7370": 229, "7372": 229, "7374": 229, "7376": 229, "7378": 229, "7380": 229, "7382": 229, "7384": 229, "7386": 229, "7388": 229, "7392": 229, "7394": 229, "7396": 229, "7398": 229, "7400": 229, "7402": 229, "7404": 229, "7406": 229, "7408": 229, "7410": 229, "7412": 229, "7414": 229, "7416": 229, "7418": 229, "7420": 229, "7422": 229, "7424": 229, "7426": 229, "7428": 229, "7430": 229, "7432": 229, "7434": 229, "7436": 229, "7438": 229, "7440": 229, "7442": 229, "7444": 229, "7446": 229, "7448": 229, "7450": 229, "7452": 229, "7454": 229, "7456": [229, 1008], "7458": 229, "7460": 229, "7462": 229, "7464": 229, "7466": 229, "7468": 229, "7470": 229, "7472": 229, "7474": 229, "7476": 229, "7478": 229, "7480": 229, "7482": 229, "7484": 229, "7486": 229, "7488": 229, "7490": 229, "7492": 229, "7494": 229, "7496": 229, "7498": 229, "7500": 229, "7502": 229, "7504": 229, "7506": 229, "7508": 229, "7510": 229, "7512": 229, "7514": 229, "7516": 229, "7518": 229, "7520": 229, "7522": 229, "7524": 229, "7526": 229, "7528": 229, "7530": 229, "7532": 229, "7534": 229, "7536": 229, "7538": 229, "7540": 229, "7542": 229, "7544": 229, "7546": 229, "7548": 229, "7550": 229, "7552": 229, "7554": 229, "7556": 229, "7558": 229, "7560": 229, "7562": 229, "7564": 229, "7566": 229, "7568": 229, "7570": 229, "7572": 229, "7574": 229, "7576": 229, "7578": 229, "7580": 229, "7582": 229, "7584": 229, "7586": 229, "7588": 229, "7590": 229, "7592": 229, "7594": 229, "7596": 229, "7598": 229, "7600": 229, "7602": 229, "7604": 229, "7606": 229, "7608": 229, "7610": 229, "7612": 229, "7614": 229, "7616": 229, "7618": 229, "7620": 229, "7622": 229, "7624": 229, "7626": 229, "7628": 229, "7630": 229, "7632": 229, "7634": 229, "7636": 229, "7638": 229, "7640": 229, "7642": 229, "7644": 229, "7646": 229, "7648": 229, "7650": 229, "7652": 229, "7654": 229, "7656": 229, "7658": 229, "7660": 229, "7662": 229, "7664": 229, "7666": 229, "7668": 229, "7670": 229, "7672": 229, "7674": 229, "7676": 229, "7678": 229, "7680": 229, "7682": 229, "7684": 229, "7686": 229, "7688": 229, "7690": 229, "7692": 229, "7694": 229, "7696": 229, "7698": 229, "7700": 229, "7702": 229, "7704": 229, "7706": 229, "7708": 229, "7710": 229, "7712": 229, "7714": 229, "7716": 229, "7718": 229, "7720": 229, "7722": 229, "7724": 229, "7726": 229, "7728": 229, "7730": 229, "7732": 229, "7734": 229, "7736": 229, "7738": 229, "7740": 229, "7742": 229, "7744": 229, "7746": 229, "7748": 229, "7750": 229, "7752": 229, "7754": 229, "7756": 229, "7758": 229, "7760": 229, "7762": 229, "7764": 229, "7766": 229, "7768": 229, "7770": 229, "7772": 229, "7774": 229, "7776": 229, "7778": 229, "7780": 229, "7782": 229, "7784": 229, "7786": 229, "7788": 229, "7790": 229, "7792": 229, "7794": 229, "7796": 229, "7798": 229, "7800": 229, "7802": 229, "7804": 229, "7806": 229, "7808": 229, "7810": 229, "7812": 229, "7814": 229, "7816": 229, "7818": 229, "7820": 229, "7822": 229, "7824": 229, "7826": 229, "7828": 229, "7830": 229, "7832": 229, "7834": 229, "7836": 229, "7838": 229, "7842": 229, "7844": 229, "7846": 229, "7848": 229, "7850": 229, "7852": 229, "7854": 229, "7856": 229, "7858": 229, "7860": 229, "7862": 229, "7864": 229, "7866": 229, "7868": 229, "7870": 229, "7872": 229, "7874": 229, "7878": 229, "7880": 229, "7882": 229, "7884": 229, "7886": 229, "7888": 229, "7890": 229, "7892": 229, "7894": 229, "7896": 229, "7898": 229, "7900": 229, "7902": 229, "7904": 229, "7906": 229, "7908": 229, "7910": 229, "7912": 229, "7914": 229, "7916": 229, "7918": 229, "7920": 229, "7922": 229, "7924": 229, "7926": 229, "7928": 229, "7930": 229, "7932": 229, "7934": 229, "7936": 229, "7938": 229, "7940": 229, "7942": 229, "7944": 229, "7946": 229, "7948": 229, "7950": 229, "7952": 229, "7954": 229, "7956": 229, "7958": 229, "7960": 229, "7962": 229, "7964": 229, "7966": 229, "7968": 229, "7970": 229, "7972": 229, "7974": 229, "7976": 229, "7978": 229, "7980": 229, "7982": 229, "7984": 229, "7986": 229, "7988": 229, "7990": 229, "7992": 229, "7994": 229, "7996": 229, "7998": 229, "8002": 229, "8004": 229, "8006": 229, "8008": 229, "8012": 229, "8014": 229, "8016": 229, "8018": 229, "8022": 229, "8024": 229, "8026": 229, "8028": 229, "8030": 229, "8032": 229, "8034": 229, "8036": 229, "8038": 229, "8040": 229, "8042": 229, "8044": 229, "8046": 229, "8048": 229, "8050": 229, "8052": 229, "8054": 229, "8056": 229, "8058": 229, "8060": 229, "8062": 229, "8064": 229, "8066": 229, "8068": 229, "8070": 229, "8072": 229, "8074": 229, "8076": 229, "8078": 229, "8080": 229, "8082": 229, "8084": 229, "8086": 229, "8088": 229, "8090": 229, "8092": 229, "8094": 229, "8096": 229, "8098": 229, "8100": 229, "8102": [229, 985, 986], "8104": 229, "8106": 229, "8108": 229, "8110": 229, "8112": 229, "8114": 229, "8116": 229, "8118": 229, "8120": 229, "8122": 229, "8124": 229, "8126": 229, "8128": 229, "8130": 229, "8132": 229, "8134": 229, "8136": 229, "8138": 229, "8140": 229, "8142": 229, "8144": 229, "8146": 229, "8148": 229, "8150": 229, "8152": 229, "8154": 229, "8156": 229, "8158": 229, "8160": 229, "8162": 229, "8164": 229, "8166": 229, "8168": 229, "8170": 229, "8172": 229, "8174": 229, "8176": 229, "8178": 229, "8180": 229, "8182": 229, "8184": 229, "8186": 229, "8188": 229, "8190": 229, "8194": 229, "8196": 229, "8198": 229, "8200": 229, "8202": 229, "8204": 229, "8206": 229, "8208": 229, "8210": 229, "8212": 229, "8214": 229, "8216": 229, "8218": 229, "8220": 229, "8222": 229, "8224": 229, "8226": 229, "8228": 229, "8230": 229, "8232": 229, "8234": 229, "8238": 229, "8240": 229, "8242": 229, "8244": 229, "8246": 229, "8248": 229, "8250": 229, "8252": 229, "8254": 229, "8256": 229, "8258": 229, "8260": [229, 810], "8262": 229, "8264": 229, "8266": 229, "8268": 229, "8270": 229, "8272": 229, "8274": 229, "8276": 229, "8278": 229, "8280": 229, "8282": 229, "8284": 229, "8286": 229, "8288": 229, "8290": 229, "8292": 229, "8294": 229, "8296": 229, "8298": 229, "8300": 229, "8302": 229, "8304": 229, "8306": 229, "8308": 229, "8310": 229, "8312": 229, "8314": 229, "8316": 229, "8318": 229, "8320": 229, "8322": 229, "8324": 229, "8326": 229, "8328": 229, "8330": 229, "8332": 229, "8334": 229, "8336": 229, "8338": 229, "8340": 229, "8342": 229, "8344": 229, "8346": 229, "8348": 229, "8350": 229, "8352": 229, "8354": 229, "8356": 229, "8358": 229, "8360": 229, "8362": 229, "8364": 229, "8366": 229, "8368": 229, "8370": 229, "8372": 229, "8374": 229, "8376": 229, "8378": 229, "8380": 229, "8382": 229, "8384": 229, "8386": 229, "8388": 229, "8390": 229, "8392": 229, "8394": 229, "8396": 229, "8398": 229, "8400": 229, "8402": 229, "8404": 229, "8406": 229, "8408": 229, "8410": 229, "8412": 229, "8414": 229, "8416": 229, "8418": 229, "8420": 229, "8422": 229, "8424": 229, "8426": 229, "8428": 229, "8430": 229, "8432": 229, "8434": 229, "8436": 229, "8438": 229, "8440": 229, "8442": 229, "8444": 229, "8446": 229, "8448": 229, "8450": 229, "8452": 229, "8454": 229, "8456": 229, "8458": 229, "8460": 229, "8464": 229, "8466": 229, "8468": 229, "8470": 229, "8472": 229, "8474": 229, "8476": 229, "8478": 229, "8480": 229, "8482": 229, "8484": 229, "8486": 229, "8488": 229, "8490": 229, "8492": 229, "8494": 229, "8496": 229, "8498": 229, "8500": 229, "8502": 229, "8504": 229, "8506": 229, "8508": 229, "8510": 229, "8512": 229, "8514": 229, "8516": 229, "8518": 229, "8520": 229, "8522": 229, "8524": 229, "8526": 229, "8528": 229, "8530": 229, "8532": 229, "8534": 229, "8536": 229, "8538": 229, "8540": 229, "8542": 229, "8544": 229, "8546": 229, "8548": 229, "8550": 229, "8552": 229, "8554": 229, "8556": 229, "8558": 229, "8560": 229, "8562": 229, "8564": 229, "8566": 229, "8568": 229, "8570": 229, "8572": 229, "8574": 229, "8576": 229, "8578": 229, "8580": 229, "8582": 229, "8584": 229, "8586": 229, "8588": 229, "8590": 229, "8592": 229, "8594": 229, "8596": 229, "8598": 229, "8600": 229, "8602": 229, "8604": 229, "8606": 229, "8608": 229, "8610": 229, "8612": 229, "8614": 229, "8616": 229, "8618": 229, "8620": 229, "8622": 229, "8624": 229, "8626": 229, "8628": 229, "8630": 229, "8632": 229, "8634": 229, "8636": 229, "8638": 229, "8640": 229, "8642": 229, "8644": 229, "8646": 229, "8648": 229, "8650": 229, "8652": 229, "8654": 229, "8656": 229, "8658": 229, "8660": 229, "8662": 229, "8664": 229, "8666": 229, "8668": 229, "8670": 229, "8672": 229, "8674": 229, "8676": 229, "8678": 229, "8680": 229, "8682": 229, "8684": 229, "8686": 229, "8688": 229, "8690": 229, "8692": 229, "8694": 229, "8696": 229, "8698": 229, "8700": 229, "8702": 229, "8704": 229, "8706": 229, "8708": 229, "8710": 229, "8712": 229, "8714": 229, "8716": 229, "8718": 229, "8720": 229, "8722": 229, "8724": 229, "8726": 229, "8728": 229, "8730": 229, "8732": 229, "8734": 229, "8736": 229, "8738": 229, "8740": 229, "8742": 229, "8744": 229, "8746": 229, "8748": 229, "8750": 229, "8752": 229, "8754": 229, "8756": 229, "8758": 229, "8760": 229, "8762": 229, "8764": 229, "8766": 229, "8768": 229, "8770": 229, "8772": 229, "8774": 229, "8776": 229, "8778": 229, "8780": 229, "8782": 229, "8784": 229, "8786": 229, "8788": 229, "8790": 229, "8792": 229, "8794": 229, "8796": 229, "8798": 229, "8800": 229, "8802": 229, "8804": 229, "8806": 229, "8808": 229, "8810": 229, "8812": 229, "8814": 229, "8816": 229, "8818": 229, "8820": 229, "8822": 229, "8824": 229, "8826": 229, "8828": 229, "8830": 229, "8832": 229, "8834": 229, "8836": 229, "8838": 229, "8840": 229, "8842": 229, "8844": 229, "8846": 229, "8848": 229, "8850": 229, "8852": 229, "8854": 229, "8856": 229, "8858": 229, "8860": 229, "8862": 229, "8864": 229, "8866": 229, "8868": 229, "8870": 229, "8872": 229, "8874": 229, "8876": 229, "8878": 229, "8880": 229, "8882": 229, "8884": 229, "8886": 229, "8888": 229, "8890": 229, "8892": 229, "8894": 229, "8896": 229, "8898": 229, "8900": 229, "8902": 229, "8904": 229, "8906": 229, "8908": 229, "8910": 229, "8912": 229, "8914": 229, "8916": 229, "8918": 229, "8920": 229, "8922": 229, "8924": 229, "8926": 229, "8928": 229, "8930": 229, "8932": 229, "8934": 229, "8936": 229, "8938": 229, "8940": 229, "8942": 229, "8944": 229, "8946": 229, "8948": 229, "8950": 229, "8952": 229, "8954": 229, "8956": 229, "8958": 229, "8960": 229, "8962": 229, "8964": 229, "8966": 229, "8968": 229, "8970": 229, "8972": 229, "8974": 229, "8976": 229, "8978": 229, "8980": 229, "8982": 229, "8984": 229, "8986": 229, "8988": 229, "8990": 229, "8992": 229, "8994": 229, "8996": 229, "8998": 229, "9002": 229, "9004": 229, "9006": 229, "9008": 229, "9010": 229, "9012": 229, "9014": 229, "9016": 229, "9018": 229, "9020": 229, "9022": 229, "9024": 229, "9026": 229, "9028": 229, "9030": 229, "9032": 229, "9034": 229, "9036": 229, "9038": 229, "9040": 229, "9042": 229, "9044": 229, "9046": 229, "9048": 229, "9050": 229, "9052": 229, "9054": 229, "9056": 229, "9058": 229, "9060": 229, "9062": 229, "9064": 229, "9066": 229, "9068": 229, "9070": 229, "9072": 229, "9074": 229, "9076": 229, "9078": 229, "9080": 229, "9082": 229, "9084": 229, "9086": 229, "9088": 229, "9090": 229, "9092": 229, "9094": 229, "9096": 229, "9098": 229, "9100": 229, "9102": 229, "9104": 229, "9106": 229, "9108": 229, "9110": 229, "9112": 229, "9114": 229, "9116": 229, "9118": 229, "9120": 229, "9122": 229, "9124": 229, "9126": 229, "9128": 229, "9130": 229, "9132": 229, "9134": 229, "9136": 229, "9138": 229, "9140": 229, "9142": 229, "9144": 229, "9146": 229, "9148": 229, "9150": 229, "9152": 229, "9154": 229, "9156": 229, "9158": 229, "9160": 229, "9162": 229, "9164": 229, "9166": 229, "9168": 229, "9170": 229, "9172": 229, "9174": 229, "9176": 229, "9178": 229, "9180": 229, "9182": 229, "9184": 229, "9186": 229, "9188": 229, "9190": 229, "9192": 229, "9194": 229, "9196": 229, "9198": 229, "9200": 229, "9202": 229, "9204": 229, "9206": 229, "9208": 229, "9210": 229, "9212": 229, "9214": 229, "9216": 229, "9218": 229, "9220": 229, "9222": 229, "9224": 229, "9226": 229, "9228": 229, "9230": 229, "9232": 229, "9234": 229, "9236": 229, "9238": 229, "9240": 229, "9242": 229, "9244": 229, "9246": 229, "9248": 229, "9250": 229, "9252": 229, "9254": 229, "9256": 229, "9258": 229, "9260": 229, "9262": 229, "9264": 229, "9266": 229, "9268": 229, "9270": 229, "9272": 229, "9274": 229, "9276": 229, "9278": 229, "9280": 229, "9282": 229, "9284": 229, "9286": 229, "9288": 229, "9290": 229, "9292": 229, "9294": 229, "9296": 229, "9298": 229, "9300": 229, "9302": 229, "9304": 229, "9306": 229, "9308": 229, "9310": 229, "9312": 229, "9314": 229, "9316": 229, "9318": 229, "9320": 229, "9322": 229, "9324": 229, "9326": 229, "9328": 229, "9330": 229, "9332": 229, "9334": 229, "9336": 229, "9338": 229, "9340": 229, "9342": 229, "9344": 229, "9346": 229, "9348": 229, "9350": 229, "9352": 229, "9354": 229, "9356": 229, "9358": 229, "9360": 229, "9362": 229, "9364": 229, "9366": 229, "9368": 229, "9370": 229, "9372": 229, "9374": 229, "9376": 229, "9378": 229, "9380": 229, "9382": 229, "9384": 229, "9386": 229, "9388": 229, "9390": 229, "9392": 229, "9394": [229, 870], "9396": 229, "9398": 229, "9400": 229, "9402": 229, "9404": 229, "9406": 229, "9408": 229, "9410": 229, "9412": 229, "9414": 229, "9416": 229, "9418": 229, "9420": 229, "9422": 229, "9424": 229, "9426": 229, "9428": 229, "9430": 229, "9432": 229, "9434": 229, "9436": 229, "9438": 229, "9440": 229, "9442": 229, "9444": 229, "9446": 229, "9448": 229, "9450": 229, "9452": 229, "9454": 229, "9456": 229, "9458": 229, "9460": 229, "9462": 229, "9464": 229, "9466": 229, "9468": 229, "9470": 229, "9472": 229, "9474": 229, "9476": 229, "9478": 229, "9480": 229, "9482": 229, "9484": 229, "9486": 229, "9488": 229, "9490": 229, "9492": 229, "9494": 229, "9496": 229, "9498": 229, "9500": 229, "9502": 229, "9504": 229, "9506": 229, "9508": 229, "9510": 229, "9512": 229, "9514": 229, "9516": 229, "9518": 229, "9520": 229, "9522": 229, "9524": 229, "9526": 229, "9528": 229, "9530": 229, "9532": 229, "9534": 229, "9536": 229, "9538": 229, "9540": 229, "9542": 229, "9544": 229, "9546": 229, "9548": 229, "9550": 229, "9552": 229, "9554": 229, "9556": 229, "9558": 229, "9560": 229, "9562": 229, "9564": 229, "9566": 229, "9568": 229, "9570": 229, "9572": 229, "9574": 229, "9576": 229, "9578": 229, "9580": 229, "9582": 229, "9584": 229, "9586": 229, "9588": 229, "9590": 229, "9592": 229, "9594": 229, "9596": 229, "9598": 229, "9600": 229, "9602": 229, "9604": 229, "9606": 229, "9608": 229, "9610": 229, "9612": 229, "9614": 229, "9616": 229, "9618": 229, "9620": 229, "9622": 229, "9624": 229, "9626": 229, "9628": 229, "9630": 229, "9632": 229, "9634": 229, "9636": 229, "9638": 229, "9640": 229, "9642": 229, "9644": 229, "9646": 229, "9648": 229, "9650": 229, "9652": 229, "9654": 229, "9656": 229, "9658": 229, "9660": 229, "9662": 229, "9664": 229, "9666": 229, "9668": 229, "9670": 229, "9672": 229, "9674": 229, "9676": 229, "9678": 229, "9680": 229, "9682": 229, "9684": 229, "9686": 229, "9688": 229, "9690": 229, "9692": 229, "9694": 229, "9696": 229, "9698": 229, "9700": 229, "9702": 229, "9704": 229, "9706": 229, "9708": 229, "9710": 229, "9712": 229, "9714": 229, "9716": 229, "9718": 229, "9720": 229, "9722": 229, "9724": 229, "9726": 229, "9728": 229, "9730": 229, "9732": 229, "9734": 229, "9736": 229, "9738": 229, "9740": 229, "9742": 229, "9744": 229, "9746": 229, "9748": 229, "9750": 229, "9752": 229, "9754": 229, "9756": 229, "9758": 229, "9760": 229, "9762": 229, "9764": 229, "9766": 229, "9768": [229, 239], "9770": 229, "9772": 229, "9774": 229, "9776": 229, "9778": 229, "9780": 229, "9782": 229, "9784": 229, "9786": 229, "9788": 229, "9790": 229, "9792": 229, "9794": 229, "9796": 229, "9798": 229, "9800": 229, "9802": 229, "9804": 229, "9806": 229, "9808": 229, "9810": 229, "9812": 229, "9814": 229, "9816": 229, "9818": 229, "9820": 229, "9822": 229, "9824": 229, "9826": 229, "9828": 229, "9830": 229, "9832": 229, "9834": 229, "9836": 229, "9838": 229, "9840": 229, "9842": 229, "9844": 229, "9846": 229, "9848": 229, "9850": 229, "9852": 229, "9854": 229, "9856": 229, "9858": 229, "9860": 229, "9862": 229, "9864": 229, "9866": 229, "9868": 229, "9870": 229, "9872": 229, "9874": 229, "9876": 229, "9878": 229, "9880": 229, "9882": 229, "9884": 229, "9886": 229, "9888": 229, "9890": 229, "9892": 229, "9894": 229, "9896": 229, "9898": 229, "9900": 229, "9902": 229, "9904": 229, "9906": 229, "9908": 229, "9910": 229, "9912": 229, "9914": 229, "9916": 229, "9918": 229, "9920": 229, "9922": 229, "9924": 229, "9926": 229, "9928": 229, "9930": 229, "9932": 229, "9934": 229, "9936": 229, "9938": 229, "9940": 229, "9942": 229, "9944": 229, "9946": 229, "9948": 229, "9950": 229, "9952": 229, "9954": 229, "9956": 229, "9958": 229, "9960": 229, "9962": 229, "9964": 229, "9966": 229, "9968": 229, "9970": 229, "9972": 229, "9974": 229, "9976": 229, "9978": 229, "9980": 229, "9982": 229, "9984": 229, "9986": 229, "9988": 229, "9990": 229, "9992": 229, "9994": 229, "9996": 229, "9998": 229, "10002": 229, "10004": 229, "10006": 229, "10008": 229, "10010": 229, "10012": 229, "10014": 229, "10016": 229, "10018": 229, "10020": 229, "10022": 229, "10024": 229, "10026": 229, "10028": 229, "10030": 229, "10032": 229, "10034": 229, "10036": 229, "10038": 229, "10040": 229, "10042": 229, "10044": 229, "10046": 229, "10048": 229, "10050": 229, "10052": 229, "10054": 229, "10056": 229, "10058": 229, "10060": 229, "10062": 229, "10064": 229, "10066": 229, "10068": 229, "10070": 229, "10072": 229, "10074": 229, "10076": 229, "10078": 229, "10080": 229, "10082": 229, "10084": 229, "10086": 229, "10088": 229, "10090": 229, "10092": 229, "10094": 229, "10096": 229, "10098": 229, "10100": 229, "10102": 229, "10104": 229, "10106": 229, "10108": 229, "10110": 229, "10112": 229, "10114": 229, "10116": 229, "10118": 229, "10120": 229, "10122": 229, "10124": 229, "10126": 229, "10128": 229, "10130": 229, "10132": 229, "10134": 229, "10136": 229, "10138": 229, "10140": 229, "10142": 229, "10144": 229, "10146": 229, "10148": 229, "10150": 229, "10152": 229, "10154": 229, "10156": 229, "10158": 229, "10160": 229, "10162": 229, "10164": 229, "10166": 229, "10168": 229, "10170": 229, "10172": 229, "10174": 229, "10176": 229, "10178": 229, "10180": 229, "10182": 229, "10184": 229, "10186": 229, "10188": 229, "10190": 229, "10192": 229, "10194": 229, "10196": 229, "10198": 229, "10200": 229, "10202": 229, "10204": 229, "10206": 229, "10208": 229, "10210": 229, "10212": 229, "10214": 229, "10216": 229, "10218": 229, "10220": 229, "10222": 229, "10224": 229, "10226": [229, 278], "10228": 229, "10230": 229, "10232": 229, "10234": 229, "10236": 229, "10238": 229, "10240": 229, "10242": 229, "10244": 229, "10246": 229, "10248": 229, "10250": 229, "10252": 229, "10254": 229, "10256": 229, "10258": 229, "10260": 229, "10262": 229, "10264": 229, "10266": 229, "10268": 229, "10270": 229, "10272": 229, "10274": 229, "10276": 229, "10278": 229, "10280": 229, "10282": 229, "10284": 229, "10286": 229, "10288": 229, "10290": 229, "10292": 229, "10294": 229, "10296": 229, "10298": 229, "10300": 229, "10302": 229, "10304": 229, "10306": 229, "10308": 229, "10310": 229, "10312": 229, "10314": 229, "10316": 229, "10318": 229, "10320": 229, "10322": 229, "10324": 229, "10326": 229, "10328": 229, "10330": 229, "10332": 229, "10334": 229, "10336": 229, "10338": 229, "10340": 229, "10342": 229, "10344": 229, "10346": 229, "10348": 229, "10350": 229, "10352": 229, "10354": 229, "10356": 229, "10358": 229, "10360": 229, "10362": 229, "10364": 229, "10366": 229, "10368": 229, "10370": 229, "10372": 229, "10374": 229, "10376": 229, "10378": 229, "10380": 229, "10382": 229, "10384": 229, "10386": 229, "10388": 229, "10390": 229, "10392": 229, "10394": 229, "10396": 229, "10398": 229, "10400": 229, "10402": 229, "10404": 229, "10406": 229, "10408": 229, "10410": 229, "10412": 229, "10414": 229, "10416": 229, "10418": 229, "10420": 229, "10422": 229, "10424": 229, "10426": 229, "10428": 229, "10430": 229, "10432": 229, "10434": 229, "10436": 229, "10438": 229, "10440": 229, "10442": 229, "10444": 229, "10446": 229, "10448": 229, "10450": 229, "10452": 229, "10454": 229, "10456": 229, "10458": 229, "10460": 229, "10462": 229, "10464": 229, "10466": 229, "10468": 229, "10470": 229, "10472": 229, "10474": 229, "10476": 229, "10478": 229, "10480": 229, "10482": 229, "10484": 229, "10486": 229, "10488": 229, "10490": 229, "10492": 229, "10494": 229, "10496": 229, "10498": 229, "10500": 229, "10502": 229, "10504": 229, "10506": 229, "10508": 229, "10510": 229, "10512": 229, "10514": 229, "10516": 229, "10518": 229, "10520": 229, "10522": 229, "10524": 229, "10526": 229, "10528": 229, "10530": 229, "10532": 229, "10534": 229, "10536": 229, "10538": 229, "10540": 229, "10542": 229, "10544": 229, "10546": 229, "10548": 229, "10550": 229, "10552": [229, 996], "10554": 229, "10556": 229, "10558": 229, "10560": 229, "10562": 229, "10564": 229, "10566": 229, "10568": 229, "10570": 229, "10572": 229, "10574": 229, "10576": 229, "10578": 229, "10580": 229, "10582": 229, "10584": 229, "10586": 229, "10588": 229, "10590": 229, "10592": 229, "10594": 229, "10596": 229, "10598": 229, "10600": 229, "10602": 229, "10604": 229, "10606": 229, "10608": 229, "10610": 229, "10612": 229, "10614": 229, "10616": 229, "10618": 229, "10620": 229, "10622": 229, "10624": 229, "10626": 229, "10628": 229, "10630": 229, "10632": 229, "10634": 229, "10636": 229, "10638": 229, "10640": 229, "10642": 229, "10644": 229, "10646": 229, "10648": 229, "10650": 229, "10652": 229, "10654": 229, "10656": 229, "10658": 229, "10660": 229, "10662": 229, "10664": 229, "10666": 229, "10668": 229, "10670": 229, "10672": 229, "10674": 229, "10676": 229, "10678": 229, "10680": 229, "10682": 229, "10684": 229, "10686": 229, "10688": 229, "10690": 229, "10692": 229, "10694": 229, "10696": 229, "10698": 229, "10700": 229, "10702": 229, "10704": 229, "10706": 229, "10708": 229, "10710": 229, "10712": 229, "10714": 229, "10716": 229, "10718": 229, "10720": 229, "10722": 229, "10724": 229, "10726": 229, "10728": 229, "10730": 229, "10732": 229, "10734": 229, "10736": 229, "10738": 229, "10740": 229, "10742": 229, "10744": 229, "10746": 229, "10748": 229, "10750": 229, "10752": 229, "10754": 229, "10756": 229, "10758": 229, "10760": 229, "10762": 229, "10764": 229, "10766": 229, "10768": 229, "10770": 229, "10772": 229, "10774": 229, "10776": 229, "10778": 229, "10780": 229, "10782": 229, "10784": 229, "10786": 229, "10788": 229, "10790": 229, "10792": 229, "10794": 229, "10796": 229, "10798": 229, "10800": 229, "10802": 229, "10804": 229, "10806": 229, "10808": 229, "10810": 229, "10812": 229, "10814": 229, "10816": 229, "10818": 229, "10820": 229, "10822": 229, "10824": 229, "10826": 229, "10828": 229, "10830": 229, "10832": 229, "10834": 229, "10836": 229, "10838": 229, "10840": 229, "10842": 229, "10844": 229, "10846": 229, "10848": 229, "10850": 229, "10852": 229, "10854": 229, "10856": 229, "10858": 229, "10860": 229, "10862": 229, "10864": 229, "10866": 229, "10868": 229, "10870": 229, "10872": 229, "10874": 229, "10876": 229, "10878": 229, "10880": 229, "10882": 229, "10884": 229, "10886": 229, "10888": 229, "10890": 229, "10892": 229, "10894": 229, "10896": 229, "10898": 229, "10900": 229, "10902": 229, "10904": 229, "10906": 229, "10908": 229, "10910": 229, "10912": 229, "10914": 229, "10916": 229, "10918": 229, "10920": 229, "10922": 229, "10924": 229, "10926": 229, "10928": 229, "10930": 229, "10932": 229, "10934": 229, "10936": 229, "10938": 229, "10940": 229, "10942": 229, "10944": 229, "10946": 229, "10948": 229, "10950": 229, "10952": 229, "10954": 229, "10956": 229, "10958": 229, "10960": 229, "10962": 229, "10964": 229, "10966": 229, "10968": 229, "10970": 229, "10972": 229, "10974": 229, "10976": 229, "10978": 229, "10980": 229, "10982": 229, "10984": 229, "10986": 229, "10988": 229, "10990": 229, "10992": 229, "10994": 229, "10996": 229, "10998": 229, "11000": 229, "11002": 229, "11004": 229, "11006": 229, "11008": 229, "11010": 229, "11012": 229, "11014": 229, "11016": 229, "11018": 229, "11020": 229, "11022": 229, "11024": 229, "11026": 229, "11028": 229, "11030": 229, "11032": 229, "11034": 229, "11036": 229, "11038": 229, "11040": 229, "11042": 229, "11044": 229, "11046": 229, "11048": 229, "11050": 229, "11052": 229, "11054": 229, "11056": 229, "11058": 229, "11060": 229, "11062": 229, "11064": 229, "11066": 229, "11068": 229, "11070": 229, "11072": 229, "11074": 229, "11076": 229, "11078": 229, "11080": 229, "11082": 229, "11084": 229, "11086": 229, "11088": 229, "11090": 229, "11092": 229, "11094": 229, "11096": 229, "11098": 229, "11100": 229, "11102": 229, "11104": 229, "11106": 229, "11108": 229, "11110": 229, "11112": 229, "11114": 229, "11116": 229, "11118": 229, "11120": 229, "11122": 229, "11124": 229, "11126": 229, "11128": 229, "11130": 229, "11132": 229, "11134": 229, "11136": 229, "11138": 229, "11140": 229, "11142": 229, "11144": 229, "11146": 229, "11148": 229, "11150": 229, "11152": 229, "11154": 229, "11156": 229, "11158": 229, "11160": 229, "11162": 229, "11164": 229, "11166": 229, "11168": 229, "11170": 229, "11172": 229, "11174": 229, "11176": 229, "11178": 229, "11180": 229, "11182": 229, "11184": 229, "11186": 229, "11188": 229, "11190": 229, "11192": 229, "11194": 229, "11196": 229, "11198": 229, "11200": 229, "11202": 229, "11204": 229, "11206": 229, "11208": 229, "11210": 229, "11212": 229, "11214": 229, "11216": 229, "11218": 229, "11220": 229, "11222": 229, "11224": 229, "11226": 229, "11228": 229, "11230": 229, "11232": 229, "11234": 229, "11236": 229, "11238": 229, "11240": 229, "11242": 229, "11244": 229, "11246": 229, "11248": 229, "11250": 229, "11252": 229, "11254": 229, "11256": 229, "11258": 229, "11260": 229, "11262": 229, "11264": 229, "11266": 229, "11268": 229, "11270": 229, "11272": 229, "11274": 229, "11276": 229, "11278": 229, "11280": 229, "11282": 229, "11284": 229, "11286": 229, "11288": 229, "11290": 229, "11292": 229, "11294": 229, "11296": 229, "11298": 229, "11300": 229, "11302": 229, "11304": 229, "11306": 229, "11308": 229, "11310": 229, "11312": 229, "11314": 229, "11316": 229, "11318": 229, "11320": 229, "11322": 229, "11324": 229, "11326": 229, "11328": 229, "11330": 229, "11332": 229, "11334": 229, "11336": 229, "11340": 229, "11342": 229, "11344": 229, "11346": 229, "11348": [229, 278], "11350": 229, "11352": 229, "11354": 229, "11356": 229, "11358": 229, "11360": 229, "11362": 229, "11364": 229, "11366": 229, "11368": 229, "11370": 229, "11372": 229, "11374": 229, "11376": 229, "11378": 229, "11380": 229, "11382": 229, "11384": 229, "11386": 229, "11388": 229, "11390": 229, "11392": 229, "11394": 229, "11396": 229, "11398": 229, "11400": 229, "11402": 229, "11404": 229, "11406": 229, "11408": 229, "11410": 229, "11412": 229, "11414": 229, "11416": 229, "11418": 229, "11420": 229, "11422": 229, "11424": 229, "11426": 229, "11428": 229, "11430": 229, "11432": 229, "11434": 229, "11436": 229, "11438": 229, "11440": 229, "11442": 229, "11444": 229, "11446": 229, "11448": 229, "11450": 229, "11452": 229, "11454": 229, "11456": 229, "11458": 229, "11460": 229, "11462": 229, "11464": 229, "11466": 229, "11468": 229, "11470": 229, "11472": 229, "11474": 229, "11476": 229, "11478": 229, "11480": 229, "11482": 229, "11484": 229, "11486": 229, "11488": 229, "11490": 229, "11492": 229, "11494": 229, "11496": 229, "11498": 229, "11500": 229, "11502": 229, "11504": 229, "11506": 229, "11508": 229, "11510": 229, "11512": 229, "11514": 229, "11516": 229, "11518": 229, "11520": 229, "11522": 229, "11524": 229, "11526": 229, "11528": 229, "11530": 229, "11532": 229, "11534": 229, "11536": 229, "11538": 229, "11540": 229, "11542": 229, "11544": 229, "11546": 229, "11548": 229, "11550": 229, "11552": 229, "11554": 229, "11556": 229, "11558": 229, "11560": 229, "11562": 229, "11564": 229, "11566": 229, "11568": 229, "11570": 229, "11572": 229, "11574": 229, "11576": 229, "11578": 229, "11580": 229, "11582": 229, "11584": 229, "11586": 229, "11588": 229, "11590": 229, "11592": 229, "11594": 229, "11596": 229, "11598": 229, "11600": 229, "11602": 229, "11604": 229, "11606": 229, "11608": 229, "11610": 229, "11612": 229, "11614": 229, "11616": 229, "11618": 229, "11620": 229, "11622": 229, "11624": 229, "11626": 229, "11628": 229, "11630": 229, "11634": 229, "11636": 229, "11638": 229, "11640": 229, "11642": 229, "11644": 229, "11646": 229, "11648": 229, "11650": 229, "11652": 229, "11654": 229, "11656": 229, "11658": 229, "11660": 229, "11662": 229, "11664": 229, "11666": 229, "11668": 229, "11670": 229, "11672": 229, "11674": 229, "11676": 229, "11678": 229, "11680": 229, "11682": 229, "11684": 229, "11686": 229, "11688": 229, "11690": 229, "11692": 229, "11694": 229, "11696": 229, "11698": 229, "11700": 229, "11702": 229, "11704": 229, "11706": 229, "11708": 229, "11710": 229, "11712": 229, "11714": 229, "11716": 229, "11718": 229, "11720": 229, "11722": 229, "11724": 229, "11726": 229, "11728": 229, "11730": 229, "11732": 229, "11734": 229, "11736": 229, "11738": 229, "11740": 229, "11742": 229, "11744": 229, "11746": 229, "11748": 229, "11750": 229, "11752": 229, "11754": 229, "11756": 229, "11758": 229, "11760": 229, "11762": 229, "11764": 229, "11766": 229, "11768": 229, "11770": 229, "11772": 229, "11774": 229, "11776": 229, "11778": 229, "11780": 229, "11782": 229, "11784": 229, "11786": 229, "11788": 229, "11790": 229, "11792": 229, "11794": 229, "11796": 229, "11798": 229, "11800": 229, "11802": 229, "11804": 229, "11806": 229, "11808": 229, "11810": 229, "11812": 229, "11814": 229, "11816": 229, "11818": 229, "11820": 229, "11822": 229, "11824": 229, "11826": 229, "11828": 229, "11830": 229, "11832": 229, "11834": 229, "11836": 229, "11838": 229, "11840": 229, "11842": 229, "11844": 229, "11846": 229, "11848": 229, "11850": 229, "11852": 229, "11854": 229, "11856": 229, "11858": 229, "11860": 229, "11862": 229, "11864": 229, "11866": 229, "11868": 229, "11870": 229, "11872": 229, "11874": 229, "11876": 229, "11878": 229, "11880": 229, "11882": 229, "11884": 229, "11886": 229, "11888": 229, "11890": 229, "11892": 229, "11894": 229, "11896": 229, "11898": 229, "11900": 229, "11902": 229, "11904": 229, "11906": 229, "11908": 229, "11910": 229, "11912": 229, "11914": 229, "11916": 229, "11918": 229, "11920": 229, "11922": 229, "11924": 229, "11926": 229, "11928": 229, "11930": 229, "11932": 229, "11934": 229, "11936": 229, "11938": 229, "11940": 229, "11942": 229, "11944": 229, "11946": 229, "11948": 229, "11950": 229, "11952": 229, "11954": 229, "11956": 229, "11958": 229, "11960": 229, "11962": 229, "11964": 229, "11966": 229, "11968": 229, "11970": 229, "11972": 229, "11974": 229, "11976": 229, "11978": 229, "11980": 229, "11982": 229, "11984": 229, "11986": 229, "11988": 229, "11990": 229, "11992": 229, "11994": 229, "11996": 229, "11998": 229, "12000": 229, "12002": 229, "12004": 229, "12006": 229, "12008": 229, "12010": 229, "12012": 229, "12014": 229, "12016": 229, "12018": 229, "12020": 229, "12022": 229, "12024": 229, "12026": 229, "12028": 229, "12030": 229, "12032": 229, "12034": 229, "12036": 229, "12038": 229, "12040": 229, "12042": 229, "12044": 229, "12046": 229, "12048": 229, "12050": 229, "12052": 229, "12054": 229, "12056": 229, "12058": 229, "12060": 229, "12062": 229, "12064": 229, "12066": 229, "12068": 229, "12070": 229, "12072": 229, "12074": 229, "12076": 229, "12078": 229, "12080": 229, "12082": 229, "12084": 229, "12086": 229, "12088": 229, "12090": 229, "12092": 229, "12094": 229, "12096": 229, "12098": 229, "12100": 229, "12102": 229, "12104": 229, "12106": 229, "12108": 229, "12110": 229, "12112": 229, "12114": 229, "12116": 229, "12118": 229, "12120": 229, "12122": 229, "12124": 229, "12126": 229, "12128": 229, "12130": 229, "12132": 229, "12134": 229, "12136": 229, "12138": 229, "12140": 229, "12142": 229, "12144": 229, "12146": 229, "12148": 229, "12150": 229, "12152": 229, "12154": 229, "12158": 229, "12160": 229, "12162": 229, "12164": 229, "12166": 229, "12168": 229, "12170": 229, "12172": 229, "12174": 229, "12176": 229, "12178": 229, "12180": 229, "12182": 229, "12184": 229, "12186": 229, "12188": 229, "12190": 229, "12192": 229, "12194": 229, "12196": 229, "12198": 229, "12200": 229, "12202": 229, "12204": 229, "12206": 229, "12208": 229, "12210": 229, "12212": 229, "12214": 229, "12216": 229, "12218": 229, "12220": 229, "12222": 229, "12224": 229, "12226": 229, "12228": 229, "12230": 229, "12232": 229, "12234": 229, "12236": 229, "12238": 229, "12240": 229, "12242": 229, "12244": 229, "12246": 229, "12248": 229, "12250": 229, "12252": 229, "12254": 229, "12256": 229, "12258": 229, "12260": 229, "12262": 229, "12264": 229, "12266": 229, "12268": 229, "12270": 229, "12272": 229, "12274": 229, "12276": 229, "12278": 229, "12280": 229, "12282": 229, "12284": 229, "12286": 229, "12288": 229, "12290": 229, "12292": 229, "12294": 229, "12296": 229, "12298": 229, "12300": 229, "12302": 229, "12304": 229, "12306": 229, "12308": 229, "12310": 229, "12312": 229, "12314": 229, "12316": 229, "12318": 229, "12320": 229, "12322": 229, "12324": 229, "12326": 229, "12328": 229, "12330": 229, "12332": 229, "12334": 229, "12336": 229, "12338": 229, "12340": 229, "12342": 229, "12344": 229, "12346": 229, "12348": 229, "12350": 229, "12352": 229, "12354": 229, "12356": 229, "12358": 229, "12360": 229, "12362": 229, "12364": 229, "12366": 229, "12368": 229, "12370": 229, "12372": 229, "12374": 229, "12376": 229, "12378": 229, "12380": 229, "12382": 229, "12384": 229, "12386": 229, "12388": 229, "12390": 229, "12392": 229, "12394": 229, "12396": 229, "12398": 229, "12400": 229, "12402": 229, "12404": 229, "12406": 229, "12408": 229, "12410": 229, "12412": 229, "12414": 229, "12416": 229, "12418": 229, "12420": 229, "12422": 229, "12424": 229, "12426": 229, "12428": 229, "12430": 229, "12432": 229, "12434": 229, "12436": 229, "12438": 229, "12440": 229, "12442": 229, "12444": 229, "12446": 229, "12448": 229, "12450": 229, "12452": 229, "12454": 229, "12456": 229, "12458": 229, "12460": 229, "12462": 229, "12464": 229, "12466": 229, "12468": 229, "12470": 229, "12472": 229, "12474": 229, "12476": 229, "12478": 229, "12480": 229, "12482": 229, "12484": 229, "12486": 229, "12488": 229, "12490": 229, "12492": 229, "12494": 229, "12496": 229, "12498": 229, "12500": 229, "12502": 229, "12504": 229, "12506": 229, "12508": 229, "12510": 229, "12512": 229, "12514": 229, "12516": 229, "12518": 229, "12520": 229, "12522": 229, "12524": 229, "12526": 229, "12528": 229, "12530": 229, "12532": 229, "12534": 229, "12536": 229, "12538": 229, "12540": 229, "12542": 229, "12544": 229, "12546": 229, "12548": 229, "12550": 229, "12552": 229, "12554": 229, "12556": 229, "12558": 229, "12560": 229, "12562": 229, "12564": 229, "12566": 229, "12568": 229, "12570": 229, "12572": 229, "12574": 229, "12576": 229, "12578": 229, "12580": 229, "12582": 229, "12584": 229, "12586": 229, "12588": 229, "12590": 229, "12592": 229, "12594": 229, "12596": 229, "12598": 229, "12600": 229, "12602": 229, "12604": 229, "12606": 229, "12608": 229, "12610": 229, "12612": 229, "12614": 229, "12616": 229, "12618": 229, "12620": 229, "12622": 229, "12624": 229, "12626": 229, "12628": 229, "12630": 229, "12632": 229, "12634": 229, "12636": 229, "12638": 229, "12640": 229, "12642": 229, "12644": 229, "12646": 229, "12648": 229, "12650": 229, "12652": 229, "12654": 229, "12656": 229, "12658": 229, "12660": 229, "12662": 229, "12664": 229, "12666": 229, "12668": 229, "12670": 229, "12672": 229, "12674": 229, "12676": 229, "12678": 229, "12680": 229, "12682": 229, "12684": 229, "12686": 229, "12688": 229, "12690": 229, "12692": 229, "12694": 229, "12696": 229, "12698": 229, "12700": 229, "12702": 229, "12704": 229, "12706": 229, "12708": 229, "12710": 229, "12712": 229, "12714": 229, "12716": 229, "12718": 229, "12720": 229, "12722": 229, "12724": 229, "12726": 229, "12728": 229, "12730": 229, "12732": 229, "12734": 229, "12736": 229, "12738": 229, "12740": 229, "12742": 229, "12744": 229, "12746": 229, "12748": 229, "12750": 229, "12752": 229, "12754": 229, "12756": 229, "12758": 229, "12760": 229, "12762": 229, "12764": 229, "12766": 229, "12768": 229, "12770": 229, "12772": 229, "12774": 229, "12776": 229, "12778": 229, "12780": 229, "12782": 229, "12784": 229, "12786": 229, "12788": 229, "12790": 229, "12792": 229, "12794": 229, "12796": 229, "12798": 229, "12800": 229, "12802": 229, "12804": 229, "12806": 229, "12808": 229, "12810": 229, "12812": 229, "12814": 229, "12816": 229, "12818": 229, "12820": 229, "12822": 229, "12824": 229, "12826": 229, "12828": 229, "12830": 229, "12832": 229, "12834": 229, "12836": 229, "12838": 229, "12840": 229, "12842": 229, "12844": 229, "12846": 229, "12848": 229, "12850": 229, "12852": 229, "12854": 229, "12856": 229, "12858": 229, "12860": 229, "12862": 229, "12864": 229, "12866": 229, "12868": 229, "12870": 229, "12872": 229, "12874": 229, "12876": 229, "12878": 229, "12880": 229, "12882": 229, "12884": 229, "12886": 229, "12888": 229, "12890": 229, "12892": 229, "12894": 229, "12896": 229, "12898": 229, "12900": 229, "12902": 229, "12904": 229, "12906": 229, "12908": 229, "12910": 229, "12912": 229, "12914": 229, "12916": 229, "12918": 229, "12920": 229, "12922": 229, "12924": 229, "12926": 229, "12928": 229, "12930": 229, "12932": 229, "12934": 229, "12936": 229, "12938": 229, "12940": 229, "12942": 229, "12944": 229, "12946": 229, "12948": 229, "12950": 229, "12952": 229, "12954": 229, "12956": 229, "12958": 229, "12960": 229, "12962": 229, "12964": 229, "12966": 229, "12968": 229, "12970": 229, "12972": 229, "12974": 229, "12976": 229, "12978": 229, "12980": 229, "12982": 229, "12984": 229, "12986": 229, "12988": 229, "12990": 229, "12992": 229, "12994": 229, "12996": 229, "12998": 229, "13000": 229, "13002": 229, "13004": 229, "13006": 229, "13008": 229, "13010": 229, "13012": 229, "13014": 229, "13016": 229, "13018": 229, "13020": 229, "13022": 229, "13024": 229, "13026": 229, "13028": 229, "13030": 229, "13032": 229, "13034": 229, "13036": 229, "13038": 229, "13040": 229, "13042": 229, "13044": 229, "13046": 229, "13048": 229, "13050": 229, "13052": 229, "13054": 229, "13056": 229, "13058": 229, "13060": 229, "13062": 229, "13064": 229, "13066": 229, "13068": 229, "13070": 229, "13072": 229, "13074": 229, "13076": 229, "13078": 229, "13080": 229, "13082": 229, "13084": 229, "13086": 229, "13088": 229, "13090": 229, "13092": 229, "13094": 229, "13096": 229, "13098": 229, "13100": 229, "13102": 229, "13104": 229, "13106": 229, "13108": 229, "13110": 229, "13112": 229, "13114": 229, "13116": 229, "13118": 229, "13120": 229, "13122": 229, "13124": 229, "13126": 229, "13128": 229, "13130": 229, "13132": 229, "13134": 229, "13136": 229, "13138": 229, "13140": 229, "13142": 229, "13144": 229, "13146": 229, "13148": 229, "13150": 229, "13152": 229, "13154": 229, "13156": 229, "13158": 229, "13160": 229, "13162": 229, "13164": 229, "13166": 229, "13168": 229, "13170": 229, "13172": 229, "13174": 229, "13176": 229, "13178": 229, "13180": 229, "13182": 229, "13184": 229, "13186": 229, "13188": 229, "13190": 229, "13192": 229, "13194": 229, "13196": 229, "13198": 229, "13200": 229, "13202": 229, "13204": 229, "13206": 229, "13208": 229, "13210": 229, "13212": 229, "13214": 229, "13216": 229, "13218": 229, "13220": 229, "13222": 229, "13224": 229, "13226": 229, "13228": 229, "13230": 229, "13232": 229, "13234": 229, "13236": 229, "13238": 229, "13240": 229, "13242": 229, "13244": 229, "13246": 229, "13248": 229, "13250": 229, "13252": 229, "13254": 229, "13256": 229, "13258": 229, "13260": 229, "13262": 229, "13264": 229, "13266": 229, "13268": 229, "13270": 229, "13272": 229, "13274": 229, "13276": 229, "13278": 229, "13280": 229, "13282": 229, "13284": 229, "13286": 229, "13288": 229, "13290": 229, "13292": 229, "13294": 229, "13296": 229, "13298": 229, "13300": 229, "13302": 229, "13304": 229, "13306": 229, "13308": 229, "13310": 229, "13312": 229, "13314": 229, "13316": 229, "13318": 229, "13320": 229, "13322": 229, "13324": 229, "13326": 229, "13328": 229, "13330": 229, "13332": 229, "13334": 229, "13336": 229, "13338": 229, "13340": 229, "13342": 229, "13344": 229, "13346": 229, "13348": 229, "13350": 229, "13352": 229, "13354": 229, "13356": 229, "13358": 229, "13360": 229, "13362": 229, "13364": 229, "13366": 229, "13368": 229, "13370": 229, "13372": 229, "13374": 229, "13376": 229, "13378": 229, "13380": 229, "13382": 229, "13384": 229, "13386": 229, "13388": 229, "13390": 229, "13392": 229, "13394": 229, "13396": 229, "13398": 229, "13400": 229, "13402": 229, "13404": 229, "13406": 229, "13408": 229, "13410": 229, "13412": 229, "13414": 229, "13416": 229, "13418": 229, "13420": 229, "13422": 229, "13424": 229, "13426": 229, "13428": 229, "13430": 229, "13432": 229, "13434": 229, "13436": 229, "13438": 229, "13440": 229, "13442": 229, "13444": 229, "13446": 229, "13448": 229, "13450": 229, "13452": 229, "13454": 229, "13456": 229, "13458": 229, "13460": 229, "13462": 229, "13464": 229, "13466": 229, "13468": 229, "13470": 229, "13472": 229, "13474": 229, "13476": 229, "13478": 229, "13480": 229, "13482": 229, "13484": 229, "13486": 229, "13488": 229, "13490": 229, "13492": 229, "13494": 229, "13496": 229, "13498": 229, "13502": 229, "13504": 229, "13506": 229, "13508": 229, "13510": 229, "13512": 229, "13514": 229, "13516": 229, "13518": 229, "13520": 229, "13522": 229, "13524": 229, "13526": 229, "13528": 229, "13530": 229, "13532": 229, "13534": 229, "13536": 229, "13538": 229, "13540": 229, "13542": 229, "13544": 229, "13546": 229, "13548": 229, "13550": 229, "13552": 229, "13554": 229, "13556": 229, "13558": 229, "13560": 229, "13562": 229, "13564": 229, "13566": 229, "13568": 229, "13570": 229, "13572": 229, "13574": 229, "13576": 229, "13578": 229, "13580": 229, "13582": 229, "13584": 229, "13586": 229, "13588": 229, "13590": 229, "13592": 229, "13594": 229, "13596": 229, "13598": 229, "13600": 229, "13602": 229, "13604": 229, "13606": 229, "13608": 229, "13610": 229, "13612": 229, "13614": 229, "13616": 229, "13618": 229, "13620": 229, "13622": 229, "13624": 229, "13626": 229, "13628": 229, "13630": 229, "13632": 229, "13634": 229, "13636": 229, "13638": 229, "13640": 229, "13642": 229, "13644": 229, "13646": 229, "13648": 229, "13650": 229, "13652": 229, "13654": 229, "13656": 229, "13658": 229, "13660": 229, "13662": 229, "13664": 229, "13666": 229, "13668": 229, "13670": 229, "13672": 229, "13674": 229, "13676": 229, "13678": 229, "13680": 229, "13682": 229, "13684": 229, "13686": 229, "13688": 229, "13690": 229, "13692": 229, "13694": 229, "13696": 229, "13698": 229, "13700": 229, "13702": 229, "13704": 229, "13706": 229, "13708": 229, "13710": 229, "13712": 229, "13714": 229, "13716": 229, "13718": 229, "13720": 229, "13722": 229, "13724": 229, "13726": 229, "13728": 229, "13730": 229, "13732": 229, "13734": 229, "13736": 229, "13738": 229, "13740": 229, "13742": 229, "13744": 229, "13746": 229, "13748": 229, "13750": 229, "13752": 229, "13754": 229, "13756": 229, "13758": 229, "13760": 229, "13762": 229, "13764": 229, "13766": 229, "13768": 229, "13770": 229, "13772": 229, "13774": 229, "13776": 229, "13778": 229, "13780": 229, "13782": 229, "13784": 229, "13786": 229, "13788": 229, "13790": 229, "13792": 229, "13794": 229, "13796": 229, "13798": 229, "13800": 229, "13802": 229, "13804": 229, "13806": 229, "13808": 229, "13810": 229, "13812": 229, "13814": 229, "13816": 229, "13818": 229, "13820": 229, "13822": 229, "13824": 229, "13826": 229, "13828": 229, "13830": 229, "13832": 229, "13834": 229, "13836": 229, "13838": 229, "13840": 229, "13842": 229, "13844": 229, "13846": 229, "13848": 229, "13850": 229, "13852": 229, "13854": 229, "13856": 229, "13858": 229, "13860": 229, "13862": 229, "13864": 229, "13866": 229, "13868": 229, "13870": 229, "13872": 229, "13874": 229, "13876": 229, "13878": 229, "13880": 229, "13882": 229, "13884": 229, "13886": 229, "13888": 229, "13890": 229, "13892": 229, "13894": 229, "13896": 229, "13898": 229, "13900": 229, "13902": 229, "13904": 229, "13906": 229, "13908": 229, "13910": 229, "13912": 229, "13914": 229, "13916": 229, "13918": 229, "13920": 229, "13922": 229, "13924": 229, "13926": 229, "13928": 229, "13930": 229, "13932": 229, "13934": 229, "13936": 229, "13938": 229, "13940": 229, "13942": 229, "13944": 229, "13946": 229, "13948": 229, "13950": 229, "13952": 229, "13954": 229, "13956": 229, "13958": 229, "13960": [229, 953], "13962": 229, "13964": 229, "13966": 229, "13968": 229, "13970": 229, "13972": 229, "13974": 229, "13976": 229, "13978": 229, "13980": 229, "13982": 229, "13984": 229, "13986": 229, "13988": 229, "13990": 229, "13992": 229, "13994": 229, "13996": 229, "13998": 229, "14000": 229, "14002": 229, "14004": 229, "14006": 229, "14008": 229, "14010": 229, "14012": 229, "14014": 229, "14016": 229, "14018": 229, "14020": 229, "14022": 229, "14024": 229, "14026": 229, "14028": 229, "14030": 229, "14032": 229, "14034": 229, "14036": 229, "14038": 229, "14040": 229, "14042": 229, "14044": 229, "14046": 229, "14048": 229, "14050": 229, "14052": 229, "14054": 229, "14056": 229, "14058": 229, "14060": 229, "14062": 229, "14064": 229, "14066": 229, "14068": 229, "14070": 229, "14072": 229, "14074": 229, "14076": 229, "14078": 229, "14080": 229, "14082": 229, "14084": 229, "14086": 229, "14088": 229, "14090": 229, "14092": 229, "14094": 229, "14096": 229, "14098": 229, "14100": 229, "14102": 229, "14104": 229, "14106": 229, "14108": 229, "14110": 229, "14112": 229, "14114": 229, "14116": 229, "14118": 229, "14120": 229, "14122": 229, "14124": 229, "14126": 229, "14128": 229, "14130": 229, "14132": 229, "14134": 229, "14136": 229, "14138": 229, "14140": 229, "14142": 229, "14144": 229, "14146": 229, "14148": 229, "14150": 229, "14152": 229, "14154": 229, "14156": 229, "14158": 229, "14160": 229, "14162": 229, "14164": 229, "14166": 229, "14168": 229, "14170": 229, "14172": 229, "14174": 229, "14176": 229, "14178": 229, "14180": 229, "14182": 229, "14184": 229, "14186": 229, "14188": 229, "14190": 229, "14192": 229, "14194": 229, "14196": 229, "14198": 229, "14200": 229, "14202": 229, "14204": 229, "14206": 229, "14208": 229, "14210": 229, "14212": 229, "14214": 229, "14216": 229, "14218": 229, "14220": 229, "14222": 229, "14224": 229, "14226": 229, "14228": 229, "14230": 229, "14232": 229, "14234": 229, "14236": 229, "14238": 229, "14240": 229, "14242": 229, "14244": 229, "14246": 229, "14248": 229, "14250": 229, "14252": 229, "14254": 229, "14256": 229, "14258": 229, "14260": 229, "14262": 229, "14264": 229, "14266": 229, "14268": 229, "14270": 229, "14272": 229, "14274": 229, "14276": 229, "14278": 229, "14280": 229, "14282": 229, "14284": 229, "14286": 229, "14288": 229, "14290": 229, "14292": 229, "14294": 229, "14296": 229, "14298": 229, "14300": 229, "14302": 229, "14304": 229, "14306": 229, "14308": 229, "14310": 229, "14312": 229, "14314": 229, "14316": 229, "14318": 229, "14320": 229, "14322": 229, "14324": 229, "14326": 229, "14328": 229, "14330": 229, "14332": 229, "14334": 229, "14336": 229, "14338": 229, "14340": 229, "14342": 229, "14344": 229, "14346": 229, "14348": 229, "14350": 229, "14352": 229, "14354": 229, "14356": 229, "14358": 229, "14360": 229, "14362": 229, "14364": 229, "14366": 229, "14368": 229, "14370": 229, "14372": 229, "14374": 229, "14376": 229, "14378": 229, "14380": 229, "14382": 229, "14384": 229, "14388": 229, "14390": 229, "14392": 229, "14394": 229, "14396": 229, "14398": 229, "14400": 229, "14402": 229, "14404": 229, "14406": 229, "14408": 229, "14410": 229, "14412": 229, "14414": 229, "14416": 229, "14418": 229, "14420": 229, "14422": 229, "14424": 229, "14426": 229, "14428": 229, "14430": 229, "14432": 229, "14434": 229, "14436": 229, "14438": 229, "14440": 229, "14442": 229, "14444": 229, "14446": 229, "14448": 229, "14450": 229, "14452": 229, "14454": 229, "14456": 229, "14458": 229, "14460": 229, "14462": 229, "14464": 229, "14466": 229, "14468": 229, "14470": 229, "14472": 229, "14474": 229, "14476": 229, "14478": 229, "14480": 229, "14482": 229, "14484": 229, "14486": 229, "14488": 229, "14490": 229, "14492": 229, "14494": 229, "14496": 229, "14498": 229, "14500": 229, "14502": 229, "14504": 229, "14506": 229, "14508": 229, "14510": 229, "14512": 229, "14514": 229, "14516": 229, "14518": 229, "14520": 229, "14522": 229, "14524": 229, "14526": 229, "14528": 229, "14530": 229, "14532": 229, "14534": 229, "14536": 229, "14538": 229, "14540": 229, "14542": 229, "14544": 229, "14546": 229, "14548": 229, "14550": 229, "14552": 229, "14554": 229, "14556": 229, "14558": 229, "14560": 229, "14562": 229, "14564": 229, "14566": 229, "14568": 229, "14570": 229, "14572": 229, "14574": 229, "14576": 229, "14578": 229, "14580": 229, "14582": 229, "14584": 229, "14586": 229, "14588": 229, "14590": 229, "14592": 229, "14594": 229, "14596": 229, "14598": 229, "14600": 229, "14602": 229, "14604": 229, "14606": 229, "14608": 229, "14610": 229, "14612": 229, "14614": 229, "14616": 229, "14618": 229, "14620": 229, "14622": 229, "14624": 229, "14626": 229, "14628": 229, "14630": 229, "14632": 229, "14634": 229, "14636": 229, "14638": 229, "14640": 229, "14642": 229, "14644": 229, "14646": 229, "14648": 229, "14650": 229, "14652": 229, "14654": 229, "14656": 229, "14658": 229, "14660": 229, "14662": 229, "14664": 229, "14666": 229, "14668": 229, "14670": 229, "14672": 229, "14674": 229, "14676": 229, "14678": 229, "14680": 229, "14682": 229, "14684": 229, "14686": 229, "14688": 229, "14690": 229, "14692": 229, "14694": 229, "14696": 229, "14698": 229, "14700": 229, "14702": 229, "14704": 229, "14706": 229, "14708": 229, "14710": 229, "14712": 229, "14714": 229, "14716": 229, "14718": 229, "14720": 229, "14722": 229, "14724": 229, "14726": 229, "14728": 229, "14730": 229, "14732": 229, "14734": 229, "14736": 229, "14738": 229, "14740": 229, "14742": 229, "14744": 229, "14746": 229, "14748": 229, "14750": 229, "14752": 229, "14754": 229, "14756": 229, "14758": 229, "14760": 229, "14762": 229, "14764": 229, "14766": 229, "14768": 229, "14770": 229, "14772": 229, "14774": 229, "14776": 229, "14778": 229, "14780": 229, "14782": 229, "14784": 229, "14786": 229, "14788": 229, "14790": 229, "14792": 229, "14794": 229, "14796": 229, "14798": 229, "14800": 229, "14802": 229, "14804": 229, "14806": 229, "14808": 229, "14810": 229, "14812": 229, "14814": 229, "14816": 229, "14818": 229, "14820": 229, "14822": 229, "14824": 229, "14826": 229, "14828": 229, "14830": 229, "14832": 229, "14834": 229, "14836": 229, "14838": 229, "14840": 229, "14842": 229, "14844": 229, "14846": 229, "14848": 229, "14850": 229, "14852": 229, "14854": 229, "14856": 229, "14858": 229, "14860": 229, "14862": 229, "14864": 229, "14866": 229, "14868": 229, "14870": 229, "14872": 229, "14874": 229, "14876": 229, "14878": 229, "14880": 229, "14882": [229, 568], "14884": 229, "14886": 229, "14888": 229, "14890": 229, "14892": 229, "14894": 229, "14896": 229, "14898": 229, "14900": 229, "14902": 229, "14904": 229, "14906": 229, "14908": 229, "14910": 229, "14912": 229, "14914": 229, "14916": 229, "14918": 229, "14920": 229, "14922": 229, "14924": 229, "14926": 229, "14928": 229, "14930": 229, "14932": 229, "14934": 229, "14936": 229, "14938": 229, "14940": 229, "14942": 229, "14944": 229, "14946": 229, "14948": 229, "14950": 229, "14952": 229, "14954": 229, "14956": 229, "14958": 229, "14960": 229, "14962": 229, "14964": 229, "14966": 229, "14968": 229, "14970": 229, "14972": 229, "14974": 229, "14976": 229, "14978": 229, "14980": 229, "14982": 229, "14984": 229, "14986": 229, "14988": 229, "14990": [229, 278], "14992": 229, "14994": 229, "14996": 229, "14998": 229, "15002": 229, "15004": 229, "15006": 229, "15008": 229, "15010": 229, "15012": 229, "15014": 229, "15016": 229, "15018": 229, "15020": 229, "15022": 229, "15024": 229, "15026": 229, "15028": 229, "15030": 229, "15032": 229, "15034": 229, "15036": 229, "15038": 229, "15040": 229, "15042": 229, "15044": 229, "15046": 229, "15048": 229, "15050": 229, "15052": 229, "15054": 229, "15056": 229, "15058": 229, "15060": 229, "15062": 229, "15064": 229, "15066": 229, "15068": 229, "15070": 229, "15072": 229, "15074": 229, "15076": 229, "15078": 229, "15080": 229, "15082": 229, "15084": 229, "15086": 229, "15088": 229, "15090": 229, "15092": 229, "15094": 229, "15096": 229, "15098": 229, "15100": 229, "15102": 229, "15104": 229, "15106": 229, "15108": 229, "15110": 229, "15112": 229, "15114": 229, "15116": 229, "15118": 229, "15120": 229, "15122": 229, "15124": 229, "15126": 229, "15128": 229, "15130": 229, "15132": 229, "15134": 229, "15136": 229, "15138": 229, "15140": 229, "15142": 229, "15144": 229, "15146": 229, "15148": 229, "15150": 229, "15152": 229, "15154": 229, "15156": 229, "15158": 229, "15160": 229, "15162": 229, "15164": 229, "15166": 229, "15168": 229, "15170": 229, "15172": 229, "15174": 229, "15176": 229, "15178": 229, "15180": 229, "15182": 229, "15184": 229, "15186": 229, "15188": 229, "15190": 229, "15192": 229, "15194": 229, "15196": 229, "15198": 229, "15200": 229, "15202": 229, "15204": 229, "15206": 229, "15208": 229, "15210": 229, "15212": 229, "15214": 229, "15216": 229, "15218": 229, "15220": 229, "15222": 229, "15224": 229, "15226": 229, "15228": 229, "15230": 229, "15232": 229, "15234": 229, "15236": 229, "15238": 229, "15240": 229, "15242": 229, "15244": [229, 998], "15246": 229, "15248": 229, "15250": 229, "15252": 229, "15254": 229, "15256": 229, "15258": 229, "15260": 229, "15262": 229, "15264": 229, "15266": 229, "15268": 229, "15270": 229, "15272": 229, "15274": 229, "15276": 229, "15278": 229, "15280": 229, "15282": 229, "15284": 229, "15286": 229, "15288": 229, "15290": 229, "15292": 229, "15294": 229, "15296": 229, "15298": 229, "15300": 229, "15302": 229, "15304": 229, "15306": 229, "15308": 229, "15310": 229, "15312": 229, "15314": 229, "15316": 229, "15318": 229, "15320": 229, "15322": 229, "15324": 229, "15326": 229, "15328": 229, "15330": 229, "15332": 229, "15334": 229, "15336": 229, "15338": 229, "15340": 229, "15342": 229, "15344": 229, "15346": 229, "15348": 229, "15350": 229, "15352": 229, "15354": 229, "15356": 229, "15358": 229, "15360": 229, "15362": 229, "15364": 229, "15366": 229, "15368": 229, "15370": 229, "15372": 229, "15374": 229, "15376": 229, "15378": 229, "15380": 229, "15382": 229, "15384": 229, "15386": 229, "15388": 229, "15390": 229, "15392": 229, "15394": 229, "15396": 229, "15398": 229, "15400": 229, "15402": 229, "15404": 229, "15406": 229, "15408": 229, "15410": 229, "15412": 229, "15414": 229, "15416": 229, "15418": 229, "15420": 229, "15422": 229, "15424": 229, "15426": 229, "15428": 229, "15430": 229, "15432": 229, "15434": 229, "15436": 229, "15438": 229, "15440": 229, "15442": 229, "15444": 229, "15446": 229, "15448": 229, "15450": 229, "15452": 229, "15454": 229, "15456": 229, "15458": 229, "15460": 229, "15462": 229, "15464": 229, "15466": 229, "15468": 229, "15470": 229, "15472": 229, "15474": 229, "15476": 229, "15478": 229, "15480": 229, "15482": 229, "15484": 229, "15486": 229, "15488": 229, "15490": 229, "15492": 229, "15494": 229, "15496": 229, "15498": 229, "15500": 229, "15502": 229, "15504": 229, "15506": 229, "15508": 229, "15510": 229, "15512": 229, "15514": 229, "15516": 229, "15518": 229, "15520": 229, "15522": 229, "15524": 229, "15526": 229, "15528": 229, "15530": 229, "15532": 229, "15534": 229, "15536": 229, "15538": 229, "15540": 229, "15542": 229, "15544": 229, "15546": 229, "15548": 229, "15550": 229, "15552": 229, "15554": 229, "15556": 229, "15558": 229, "15560": 229, "15562": 229, "15564": 229, "15566": 229, "15568": 229, "15570": 229, "15572": 229, "15574": 229, "15576": 229, "15578": 229, "15580": 229, "15582": 229, "15584": 229, "15586": 229, "15588": 229, "15590": 229, "15592": 229, "15594": 229, "15596": 229, "15598": 229, "15600": 229, "15602": 229, "15604": 229, "15606": 229, "15608": 229, "15610": 229, "15612": 229, "15614": 229, "15616": 229, "15618": 229, "15620": 229, "15622": 229, "15624": 229, "15626": 229, "15628": 229, "15630": 229, "15632": 229, "15634": 229, "15636": 229, "15638": 229, "15640": 229, "15642": 229, "15644": 229, "15646": 229, "15648": 229, "15650": 229, "15652": 229, "15654": 229, "15656": 229, "15658": 229, "15660": 229, "15662": 229, "15664": 229, "15666": 229, "15668": 229, "15670": 229, "15672": 229, "15674": 229, "15676": 229, "15678": 229, "15680": 229, "15682": 229, "15684": 229, "15686": 229, "15688": 229, "15690": 229, "15692": 229, "15694": 229, "15696": 229, "15698": 229, "15700": 229, "15702": 229, "15704": 229, "15706": 229, "15708": 229, "15710": 229, "15712": 229, "15714": 229, "15716": 229, "15718": 229, "15720": 229, "15722": 229, "15724": 229, "15726": 229, "15728": 229, "15730": 229, "15732": 229, "15734": 229, "15736": 229, "15738": 229, "15740": 229, "15742": 229, "15744": 229, "15746": 229, "15748": 229, "15750": 229, "15752": 229, "15754": 229, "15756": 229, "15758": 229, "15760": 229, "15762": 229, "15764": 229, "15766": 229, "15768": 229, "15770": 229, "15772": 229, "15774": 229, "15776": 229, "15778": 229, "15780": 229, "15782": 229, "15784": 229, "15786": 229, "15788": 229, "15790": 229, "15792": 229, "15794": 229, "15796": 229, "15798": 229, "15800": 229, "15802": 229, "15804": 229, "15806": 229, "15808": 229, "15810": 229, "15812": 229, "15814": 229, "15816": 229, "15818": 229, "15820": 229, "15822": 229, "15824": 229, "15826": 229, "15828": 229, "15830": 229, "15832": 229, "15834": 229, "15836": 229, "15838": 229, "15840": 229, "15842": 229, "15844": 229, "15846": 229, "15848": 229, "15850": 229, "15852": 229, "15854": 229, "15856": 229, "15858": 229, "15860": 229, "15862": 229, "15864": 229, "15866": 229, "15868": 229, "15870": 229, "15872": 229, "15874": 229, "15876": 229, "15878": 229, "15880": 229, "15882": 229, "15884": 229, "15886": 229, "15888": 229, "15890": 229, "15892": 229, "15894": 229, "15896": 229, "15898": 229, "15900": 229, "15902": 229, "15904": 229, "15906": 229, "15908": 229, "15910": 229, "15912": 229, "15914": 229, "15916": 229, "15918": 229, "15920": 229, "15922": 229, "15924": 229, "15926": 229, "15928": 229, "15930": 229, "15932": 229, "15934": 229, "15936": 229, "15938": 229, "15940": 229, "15942": 229, "15944": 229, "15946": 229, "15948": 229, "15950": 229, "15952": 229, "15954": 229, "15956": 229, "15958": 229, "15960": 229, "15962": 229, "15964": 229, "15966": 229, "15968": 229, "15970": 229, "15972": 229, "15974": 229, "15976": 229, "15978": 229, "15980": 229, "15982": 229, "15984": 229, "15986": 229, "15988": 229, "15990": 229, "15992": 229, "15994": 229, "15996": 229, "15998": 229, "16000": 229, "16002": 229, "16004": 229, "16006": 229, "16008": 229, "16010": 229, "16012": 229, "16014": 229, "16016": 229, "16018": 229, "16020": 229, "16022": 229, "16024": 229, "16026": 229, "16028": 229, "16030": 229, "16032": 229, "16034": 229, "16036": 229, "16038": 229, "16040": 229, "16042": 229, "16044": 229, "16046": 229, "16048": 229, "16050": 229, "16052": 229, "16054": 229, "16056": 229, "16058": 229, "16060": 229, "16062": 229, "16064": 229, "16066": 229, "16068": 229, "16070": 229, "16072": 229, "16074": 229, "16076": 229, "16078": 229, "16080": 229, "16082": 229, "16084": 229, "16086": 229, "16088": 229, "16090": 229, "16092": 229, "16094": 229, "16096": 229, "16098": 229, "16100": 229, "16102": 229, "16104": 229, "16106": 229, "16108": 229, "16110": 229, "16112": 229, "16114": 229, "16116": 229, "16118": 229, "16120": 229, "16122": 229, "16124": 229, "16126": 229, "16128": 229, "16130": 229, "16132": 229, "16134": 229, "16136": 229, "16138": 229, "16140": 229, "16142": 229, "16144": 229, "16146": 229, "16148": 229, "16150": 229, "16152": 229, "16154": 229, "16156": 229, "16158": 229, "16160": 229, "16162": 229, "16164": 229, "16166": 229, "16168": 229, "16170": 229, "16172": 229, "16174": 229, "16176": 229, "16178": 229, "16180": 229, "16182": 229, "16184": 229, "16186": 229, "16188": 229, "16190": 229, "16192": 229, "16194": 229, "16196": 229, "16198": 229, "16200": 229, "16202": 229, "16204": 229, "16206": 229, "16208": 229, "16210": 229, "16212": 229, "16214": 229, "16216": 229, "16218": 229, "16220": 229, "16222": 229, "16224": 229, "16226": 229, "16228": 229, "16230": 229, "16232": 229, "16234": 229, "16236": 229, "16238": 229, "16240": 229, "16242": 229, "16244": 229, "16246": 229, "16248": 229, "16250": 229, "16252": 229, "16254": 229, "16256": 229, "16258": 229, "16260": 229, "16262": 229, "16264": 229, "16266": 229, "16268": 229, "16270": 229, "16272": 229, "16274": 229, "16276": 229, "16278": 229, "16280": 229, "16282": 229, "16284": 229, "16286": 229, "16288": 229, "16290": 229, "16292": 229, "16294": 229, "16296": 229, "16298": 229, "16300": 229, "16302": 229, "16304": 229, "16306": 229, "16308": 229, "16310": 229, "16312": 229, "16314": 229, "16316": 229, "16318": 229, "16320": 229, "16322": 229, "16324": 229, "16326": 229, "16328": 229, "16330": 229, "16332": 229, "16334": 229, "16336": 229, "16338": 229, "16340": 229, "16342": 229, "16344": 229, "16346": 229, "16348": 229, "16350": 229, "16352": 229, "16354": 229, "16356": 229, "16358": 229, "16360": 229, "16362": 229, "16364": 229, "16366": 229, "16368": 229, "16370": 229, "16372": 229, "16374": 229, "16376": 229, "16378": 229, "16380": 229, "16382": 229, "16386": 229, "16388": 229, "16390": 229, "16392": 229, "16394": 229, "16396": 229, "16398": 229, "16400": 229, "16402": 229, "16404": 229, "16406": 229, "16408": 229, "16410": 229, "16412": 229, "16414": 229, "16416": 229, "16418": 229, "16420": 229, "16422": 229, "16424": 229, "16426": 229, "16428": 229, "16430": 229, "16432": 229, "16434": 229, "16436": 229, "16438": 229, "16440": 229, "16442": 229, "16444": 229, "16446": 229, "16448": 229, "16450": 229, "16452": 229, "16454": 229, "16456": 229, "16458": 229, "16460": 229, "16462": 229, "16464": 229, "16466": 229, "16468": 229, "16470": 229, "16472": 229, "16474": 229, "16476": 229, "16478": 229, "16480": 229, "16482": 229, "16484": 229, "16486": 229, "16488": 229, "16490": 229, "16492": 229, "16494": 229, "16496": 229, "16498": 229, "16500": 229, "16502": 229, "16504": 229, "16506": 229, "16508": 229, "16510": 229, "16512": 229, "16514": 229, "16516": 229, "16518": 229, "16520": 229, "16522": 229, "16524": 229, "16526": 229, "16528": 229, "16530": 229, "16532": 229, "16534": 229, "16536": 229, "16538": 229, "16540": 229, "16542": 229, "16544": 229, "16546": 229, "16548": 229, "16550": 229, "16552": 229, "16554": 229, "16556": 229, "16558": 229, "16560": 229, "16562": 229, "16564": 229, "16566": 229, "16568": 229, "16570": 229, "16572": 229, "16574": 229, "16576": 229, "16578": 229, "16580": 229, "16582": 229, "16584": 229, "16586": 229, "16588": 229, "16590": 229, "16592": 229, "16594": 229, "16596": 229, "16598": 229, "16600": 229, "16602": 229, "16604": 229, "16606": 229, "16608": 229, "16610": 229, "16612": 229, "16614": 229, "16616": 229, "16618": 229, "16620": 229, "16622": 229, "16624": 229, "16626": 229, "16628": 229, "16630": 229, "16632": 229, "16634": 229, "16636": 229, "16638": 229, "16640": 229, "16642": 229, "16644": 229, "16646": 229, "16648": 229, "16650": 229, "16652": 229, "16654": 229, "16656": 229, "16658": 229, "16660": 229, "16662": 229, "16664": 229, "16666": 229, "16668": 229, "16670": 229, "16672": 229, "16674": 229, "16676": 229, "16678": 229, "16680": 229, "16682": 229, "16684": 229, "16686": 229, "16688": 229, "16690": 229, "16692": 229, "16694": 229, "16696": 229, "16698": 229, "16700": 229, "16702": 229, "16704": 229, "16706": 229, "16708": 229, "16710": 229, "16712": 229, "16714": 229, "16716": 229, "16718": 229, "16720": 229, "16722": 229, "16724": 229, "16726": 229, "16728": 229, "16730": 229, "16732": 229, "16734": 229, "16736": 229, "16738": 229, "16740": 229, "16742": 229, "16744": 229, "16746": 229, "16748": 229, "16750": 229, "16752": 229, "16754": 229, "16756": 229, "16758": 229, "16760": 229, "16762": 229, "16764": 229, "16766": 229, "16768": 229, "16770": 229, "16772": 229, "16774": 229, "16776": 229, "16778": 229, "16780": 229, "16782": 229, "16784": 229, "16786": 229, "16788": 229, "16790": 229, "16792": 229, "16794": 229, "16796": 229, "16798": 229, "16800": 229, "16802": 229, "16804": 229, "16806": 229, "16808": 229, "16810": 229, "16812": 229, "16814": 229, "16816": 229, "16818": 229, "16820": 229, "16822": 229, "16824": 229, "16826": 229, "16828": 229, "16830": 229, "16832": 229, "16834": 229, "16836": 229, "16838": 229, "16840": 229, "16842": 229, "16844": 229, "16846": 229, "16848": 229, "16850": 229, "16852": 229, "16854": 229, "16856": 229, "16858": 229, "16860": 229, "16862": 229, "16864": 229, "16866": 229, "16868": 229, "16870": 229, "16872": 229, "16874": 229, "16876": 229, "16878": 229, "16880": 229, "16882": 229, "16884": 229, "16886": 229, "16888": 229, "16890": 229, "16892": 229, "16894": 229, "16896": 229, "16898": 229, "16900": 229, "16902": 229, "16904": 229, "16906": 229, "16908": 229, "16910": 229, "16912": 229, "16914": 229, "16916": 229, "16918": 229, "16920": 229, "16922": 229, "16924": 229, "16926": 229, "16928": 229, "16930": 229, "16932": 229, "16934": 229, "16936": 229, "16938": 229, "16940": 229, "16942": 229, "16944": 229, "16946": 229, "16948": 229, "16950": 229, "16952": 229, "16954": 229, "16956": 229, "16958": 229, "16960": 229, "16962": 229, "16964": 229, "16966": 229, "16968": 229, "16970": 229, "16972": 229, "16974": 229, "16976": 229, "16978": 229, "16980": 229, "16982": 229, "16984": 229, "16986": 229, "16988": 229, "16990": 229, "16992": 229, "16994": 229, "16996": 229, "16998": 229, "17000": 229, "17002": 229, "17004": 229, "17006": 229, "17008": 229, "17010": 229, "17012": 229, "17014": 229, "17016": 229, "17018": 229, "17020": 229, "17022": 229, "17024": 229, "17026": 229, "17028": 229, "17030": 229, "17032": 229, "17034": 229, "17036": 229, "17038": 229, "17040": 229, "17042": 229, "17044": 229, "17046": 229, "17048": 229, "17050": 229, "17052": 229, "17054": 229, "17056": 229, "17058": 229, "17060": 229, "17062": 229, "17064": 229, "17066": 229, "17068": 229, "17070": 229, "17072": 229, "17074": 229, "17076": 229, "17078": 229, "17080": 229, "17082": 229, "17084": 229, "17086": 229, "17088": 229, "17090": 229, "17092": 229, "17094": 229, "17096": 229, "17098": 229, "17100": 229, "17102": 229, "17104": 229, "17106": 229, "17108": 229, "17110": 229, "17112": 229, "17114": 229, "17116": 229, "17118": 229, "17120": 229, "17122": 229, "17124": 229, "17126": [229, 278], "17128": 229, "17130": 229, "17132": 229, "17134": 229, "17136": 229, "17138": 229, "17140": 229, "17142": 229, "17144": 229, "17146": 229, "17148": 229, "17150": 229, "17152": 229, "17154": 229, "17156": 229, "17158": 229, "17160": 229, "17162": 229, "17164": 229, "17166": 229, "17168": 229, "17170": 229, "17172": 229, "17174": 229, "17176": 229, "17178": 229, "17180": 229, "17182": 229, "17184": 229, "17186": 229, "17188": 229, "17190": 229, "17192": 229, "17194": 229, "17196": 229, "17198": 229, "17200": 229, "17202": 229, "17204": 229, "17206": 229, "17208": 229, "17210": 229, "17212": 229, "17214": 229, "17216": 229, "17218": 229, "17220": 229, "17222": 229, "17224": 229, "17226": 229, "17228": 229, "17230": 229, "17232": 229, "17234": 229, "17236": 229, "17238": 229, "17240": 229, "17242": 229, "17244": 229, "17246": 229, "17248": 229, "17250": 229, "17252": 229, "17254": 229, "17256": 229, "17258": 229, "17260": 229, "17262": 229, "17264": 229, "17266": 229, "17268": 229, "17270": 229, "17272": 229, "17274": 229, "17276": 229, "17278": 229, "17280": 229, "17282": 229, "17284": 229, "17286": 229, "17288": 229, "17290": 229, "17292": 229, "17294": 229, "17296": 229, "17298": 229, "17300": 229, "17302": 229, "17304": 229, "17306": 229, "17308": 229, "17310": 229, "17312": 229, "17314": 229, "17316": 229, "17318": 229, "17320": 229, "17322": 229, "17324": 229, "17326": 229, "17328": 229, "17330": 229, "17332": 229, "17334": 229, "17336": 229, "17338": 229, "17340": 229, "17342": 229, "17344": 229, "17346": 229, "17348": 229, "17350": 229, "17352": 229, "17354": 229, "17356": 229, "17358": 229, "17360": 229, "17362": 229, "17364": 229, "17366": 229, "17368": 229, "17370": 229, "17372": 229, "17374": 229, "17376": 229, "17378": 229, "17380": 229, "17382": 229, "17384": 229, "17386": 229, "17388": 229, "17390": 229, "17392": 229, "17394": 229, "17396": 229, "17398": 229, "17400": 229, "17402": 229, "17404": 229, "17406": 229, "17408": 229, "17410": 229, "17412": 229, "17414": 229, "17416": 229, "17418": 229, "17420": 229, "17422": 229, "17424": 229, "17426": 229, "17428": 229, "17430": 229, "17432": 229, "17434": 229, "17436": 229, "17438": 229, "17440": 229, "17442": 229, "17444": 229, "17446": 229, "17448": 229, "17450": 229, "17452": 229, "17454": 229, "17456": 229, "17458": 229, "17460": 229, "17462": 229, "17464": 229, "17466": 229, "17468": 229, "17470": 229, "17472": 229, "17474": 229, "17476": 229, "17478": 229, "17480": 229, "17482": 229, "17484": 229, "17486": 229, "17488": 229, "17490": 229, "17492": 229, "17494": 229, "17496": 229, "17498": 229, "17500": 229, "17502": 229, "17504": 229, "17506": 229, "17508": 229, "17510": 229, "17512": 229, "17514": 229, "17516": 229, "17518": 229, "17520": 229, "17522": 229, "17524": 229, "17526": 229, "17528": 229, "17530": 229, "17532": 229, "17534": 229, "17536": 229, "17538": 229, "17540": 229, "17542": 229, "17544": 229, "17546": 229, "17548": 229, "17550": 229, "17552": 229, "17554": 229, "17556": 229, "17558": 229, "17560": 229, "17562": 229, "17564": 229, "17566": 229, "17568": 229, "17570": 229, "17572": 229, "17574": 229, "17576": 229, "17578": 229, "17580": 229, "17582": 229, "17584": 229, "17586": 229, "17588": 229, "17590": 229, "17592": 229, "17594": 229, "17596": 229, "17598": 229, "17600": 229, "17602": 229, "17604": 229, "17606": 229, "17608": 229, "17610": 229, "17612": 229, "17614": 229, "17616": 229, "17618": 229, "17620": 229, "17622": 229, "17624": 229, "17626": 229, "17628": 229, "17630": 229, "17632": 229, "17634": 229, "17636": 229, "17638": 229, "17640": 229, "17642": 229, "17644": 229, "17646": 229, "17648": 229, "17650": 229, "17652": 229, "17654": 229, "17656": 229, "17658": 229, "17660": 229, "17662": 229, "17664": 229, "17666": 229, "17668": 229, "17670": 229, "17672": 229, "17674": 229, "17676": 229, "17678": 229, "17680": 229, "17682": 229, "17684": 229, "17686": 229, "17688": 229, "17690": 229, "17692": 229, "17694": 229, "17696": 229, "17698": 229, "17700": 229, "17702": 229, "17704": 229, "17706": 229, "17708": 229, "17710": 229, "17712": 229, "17714": 229, "17716": 229, "17718": 229, "17720": 229, "17722": 229, "17724": 229, "17726": 229, "17728": 229, "17730": 229, "17732": 229, "17734": 229, "17736": 229, "17738": 229, "17740": 229, "17742": 229, "17744": 229, "17746": 229, "17748": 229, "17750": 229, "17752": 229, "17754": 229, "17756": 229, "17758": 229, "17760": 229, "17762": 229, "17764": 229, "17766": 229, "17768": 229, "17770": 229, "17772": 229, "17774": 229, "17776": 229, "17778": 229, "17780": 229, "17782": 229, "17784": 229, "17786": 229, "17788": 229, "17790": 229, "17792": 229, "17794": 229, "17796": 229, "17798": 229, "17800": 229, "17802": 229, "17804": 229, "17806": 229, "17808": 229, "17810": 229, "17812": 229, "17814": 229, "17816": 229, "17818": 229, "17820": 229, "17822": 229, "17824": 229, "17826": 229, "17828": 229, "17830": 229, "17832": 229, "17834": 229, "17836": 229, "17838": 229, "17840": 229, "17842": 229, "17844": 229, "17846": 229, "17848": 229, "17850": 229, "17852": 229, "17854": 229, "17856": 229, "17858": 229, "17860": 229, "17862": 229, "17864": 229, "17866": 229, "17868": 229, "17870": 229, "17872": 229, "17874": 229, "17876": 229, "17878": 229, "17880": 229, "17882": 229, "17884": 229, "17886": 229, "17888": 229, "17890": 229, "17892": 229, "17894": 229, "17896": 229, "17898": 229, "17900": 229, "17902": 229, "17904": 229, "17906": 229, "17908": 229, "17910": 229, "17912": 229, "17914": 229, "17916": 229, "17918": 229, "17920": 229, "17922": 229, "17924": 229, "17926": 229, "17928": 229, "17930": 229, "17932": 229, "17934": 229, "17936": 229, "17938": 229, "17940": 229, "17942": 229, "17944": 229, "17946": 229, "17948": 229, "17950": 229, "17952": 229, "17954": 229, "17956": 229, "17958": 229, "17960": 229, "17962": 229, "17964": 229, "17966": 229, "17968": 229, "17970": 229, "17972": 229, "17974": 229, "17976": 229, "17978": 229, "17980": 229, "17982": 229, "17984": 229, "17986": 229, "17988": 229, "17990": 229, "17992": 229, "17994": 229, "17996": 229, "17998": 229, "18000": [229, 916], "18002": 229, "18004": 229, "18006": 229, "18008": 229, "18010": 229, "18012": 229, "18014": 229, "18016": 229, "18018": 229, "18020": 229, "18022": 229, "18024": 229, "18026": 229, "18028": 229, "18030": 229, "18032": 229, "18034": 229, "18036": 229, "18038": 229, "18040": 229, "18042": 229, "18044": 229, "18046": 229, "18048": 229, "18050": 229, "18052": 229, "18054": 229, "18056": 229, "18058": 229, "18060": 229, "18062": 229, "18064": 229, "18066": 229, "18068": 229, "18070": 229, "18072": 229, "18074": 229, "18076": 229, "18078": 229, "18080": 229, "18082": 229, "18084": 229, "18086": 229, "18088": 229, "18090": 229, "18092": 229, "18094": 229, "18096": 229, "18098": 229, "18100": 229, "18102": 229, "18104": 229, "18106": 229, "18108": 229, "18110": 229, "18112": 229, "18114": 229, "18116": 229, "18118": 229, "18120": 229, "18122": 229, "18124": 229, "18126": 229, "18128": 229, "18130": 229, "18132": 229, "18134": 229, "18136": 229, "18138": 229, "18140": 229, "18142": 229, "18144": 229, "18146": 229, "18148": 229, "18150": 229, "18152": 229, "18154": 229, "18156": 229, "18158": 229, "18160": 229, "18162": 229, "18164": 229, "18166": 229, "18168": 229, "18170": 229, "18172": 229, "18174": 229, "18176": 229, "18178": 229, "18180": 229, "18182": 229, "18184": 229, "18186": 229, "18188": 229, "18190": 229, "18192": 229, "18194": 229, "18196": 229, "18198": 229, "18200": 229, "18202": 229, "18204": 229, "18206": 229, "18208": 229, "18210": 229, "18212": 229, "18214": 229, "18216": 229, "18218": 229, "18220": 229, "18222": 229, "18224": 229, "18226": 229, "18228": 229, "18230": 229, "18232": 229, "18234": 229, "18236": 229, "18238": 229, "18240": 229, "18242": 229, "18244": 229, "18246": 229, "18248": 229, "18250": 229, "18252": 229, "18254": 229, "18256": 229, "18258": 229, "18260": 229, "18262": 229, "18264": 229, "18266": 229, "18268": 229, "18270": 229, "18272": 229, "18274": 229, "18276": 229, "18278": 229, "18280": 229, "18282": 229, "18284": 229, "18286": 229, "18288": 229, "18290": 229, "18292": 229, "18294": 229, "18296": 229, "18298": 229, "18300": 229, "18302": 229, "18304": 229, "18306": 229, "18308": 229, "18310": 229, "18312": 229, "18314": 229, "18316": 229, "18318": 229, "18320": 229, "18322": 229, "18324": 229, "18326": 229, "18328": 229, "18330": 229, "18332": 229, "18334": 229, "18336": 229, "18338": 229, "18340": 229, "18342": 229, "18344": 229, "18346": 229, "18348": 229, "18350": 229, "18352": 229, "18354": 229, "18356": 229, "18358": 229, "18360": 229, "18362": 229, "18364": 229, "18366": 229, "18368": 229, "18370": 229, "18372": 229, "18374": 229, "18376": 229, "18378": 229, "18380": 229, "18382": 229, "18384": [229, 984], "18386": 229, "18388": 229, "18390": 229, "18392": 229, "18394": 229, "18396": 229, "18398": 229, "18400": 229, "18402": 229, "18404": 229, "18406": 229, "18408": 229, "18410": 229, "18412": 229, "18414": 229, "18416": 229, "18418": 229, "18420": 229, "18422": 229, "18424": 229, "18426": 229, "18428": 229, "18430": 229, "18432": 229, "18434": 229, "18436": 229, "18438": 229, "18440": 229, "18442": 229, "18444": 229, "18446": 229, "18448": 229, "18450": 229, "18452": 229, "18454": 229, "18456": 229, "18458": 229, "18460": 229, "18462": 229, "18464": 229, "18466": 229, "18468": 229, "18470": 229, "18472": 229, "18474": 229, "18476": 229, "18478": 229, "18480": 229, "18482": 229, "18484": 229, "18486": 229, "18488": 229, "18490": 229, "18492": 229, "18494": 229, "18496": 229, "18498": 229, "18500": 229, "18502": 229, "18504": 229, "18506": 229, "18508": 229, "18510": 229, "18512": 229, "18514": 229, "18516": 229, "18518": 229, "18520": 229, "18522": 229, "18524": 229, "18526": 229, "18528": 229, "18530": 229, "18532": 229, "18534": 229, "18536": 229, "18538": 229, "18540": 229, "18542": 229, "18544": 229, "18546": 229, "18548": 229, "18550": 229, "18552": 229, "18554": 229, "18556": 229, "18558": 229, "18560": 229, "18562": 229, "18564": 229, "18566": 229, "18568": 229, "18570": 229, "18572": 229, "18574": 229, "18576": 229, "18578": 229, "18580": 229, "18582": 229, "18584": 229, "18586": 229, "18588": 229, "18590": 229, "18592": 229, "18594": 229, "18596": 229, "18598": 229, "18600": 229, "18602": 229, "18604": 229, "18606": 229, "18608": 229, "18610": 229, "18612": 229, "18614": 229, "18616": 229, "18618": 229, "18620": 229, "18622": 229, "18624": 229, "18626": 229, "18628": 229, "18630": 229, "18632": 229, "18634": 229, "18636": 229, "18638": 229, "18640": 229, "18642": 229, "18644": 229, "18646": 229, "18648": 229, "18650": 229, "18652": 229, "18654": 229, "18656": 229, "18658": 229, "18660": 229, "18662": 229, "18664": 229, "18666": 229, "18668": 229, "18670": 229, "18672": 229, "18674": 229, "18676": 229, "18678": 229, "18680": 229, "18682": 229, "18684": 229, "18686": 229, "18688": 229, "18690": 229, "18692": 229, "18694": 229, "18696": 229, "18698": 229, "18700": 229, "18702": 229, "18704": 229, "18706": 229, "18708": 229, "18710": 229, "18712": 229, "18714": 229, "18716": 229, "18718": 229, "18720": 229, "18722": 229, "18724": 229, "18726": 229, "18728": 229, "18730": 229, "18732": 229, "18734": 229, "18736": 229, "18738": 229, "18740": 229, "18742": 229, "18744": 229, "18746": 229, "18748": 229, "18750": 229, "18752": 229, "18754": 229, "18756": 229, "18758": 229, "18760": 229, "18762": 229, "18764": 229, "18766": 229, "18768": 229, "18770": 229, "18772": 229, "18774": 229, "18776": 229, "18778": 229, "18780": 229, "18782": 229, "18784": 229, "18786": 229, "18788": 229, "18790": 229, "18792": 229, "18794": 229, "18796": 229, "18798": 229, "18800": 229, "18802": 229, "18804": 229, "18806": 229, "18808": 229, "18810": 229, "18812": 229, "18814": 229, "18816": 229, "18818": 229, "18820": 229, "18822": 229, "18824": 229, "18826": 229, "18828": 229, "18830": 229, "18832": 229, "18834": 229, "18836": 229, "18838": 229, "18840": 229, "18842": 229, "18844": 229, "18846": 229, "18848": 229, "18850": 229, "18852": 229, "18854": 229, "18856": 229, "18858": 229, "18860": 229, "18862": 229, "18864": 229, "18866": 229, "18868": 229, "18870": 229, "18872": 229, "18874": 229, "18876": 229, "18878": 229, "18880": 229, "18882": 229, "18884": 229, "18886": 229, "18888": 229, "18890": 229, "18892": 229, "18894": 229, "18896": 229, "18898": 229, "18900": 229, "18902": 229, "18904": 229, "18906": 229, "18908": 229, "18910": 229, "18912": 229, "18914": 229, "18916": 229, "18918": 229, "18920": 229, "18922": 229, "18924": 229, "18926": 229, "18928": 229, "18930": 229, "18932": 229, "18934": 229, "18936": 229, "18938": 229, "18940": 229, "18942": 229, "18944": 229, "18946": 229, "18948": 229, "18950": 229, "18952": 229, "18954": 229, "18956": 229, "18958": 229, "18960": 229, "18962": 229, "18964": 229, "18966": 229, "18968": 229, "18970": 229, "18972": 229, "18974": 229, "18976": 229, "18978": 229, "18980": 229, "18982": 229, "18984": 229, "18986": 229, "18988": 229, "18990": 229, "18992": 229, "18994": 229, "18996": 229, "18998": 229, "19000": 229, "19002": 229, "19004": 229, "19006": 229, "19008": 229, "19010": 229, "19012": 229, "19014": 229, "19016": 229, "19018": 229, "19020": 229, "19022": 229, "19024": 229, "19026": 229, "19028": 229, "19030": 229, "19032": 229, "19034": 229, "19036": 229, "19038": 229, "19040": 229, "19042": 229, "19044": 229, "19046": 229, "19048": 229, "19050": 229, "19052": 229, "19054": 229, "19056": 229, "19058": 229, "19060": 229, "19062": 229, "19064": 229, "19066": 229, "19068": 229, "19070": 229, "19072": 229, "19074": 229, "19076": 229, "19078": 229, "19080": 229, "19082": 229, "19084": 229, "19086": 229, "19088": 229, "19090": 229, "19092": 229, "19094": 229, "19096": 229, "19098": 229, "19100": 229, "19102": 229, "19104": 229, "19106": 229, "19108": 229, "19110": 229, "19112": 229, "19114": 229, "19116": 229, "19118": 229, "19120": 229, "19122": 229, "19124": 229, "19126": 229, "19128": 229, "19130": 229, "19132": 229, "19134": 229, "19136": 229, "19138": 229, "19140": 229, "19142": 229, "19144": 229, "19146": 229, "19148": 229, "19150": 229, "19152": 229, "19154": 229, "19156": 229, "19158": 229, "19160": 229, "19162": 229, "19164": 229, "19166": 229, "19168": 229, "19170": 229, "19172": 229, "19174": 229, "19176": 229, "19178": 229, "19180": 229, "19182": 229, "19184": 229, "19186": 229, "19188": 229, "19190": 229, "19192": 229, "19194": 229, "19196": 229, "19198": 229, "19200": 229, "19202": 229, "19204": 229, "19206": 229, "19208": 229, "19210": 229, "19212": 229, "19214": 229, "19216": 229, "19218": 229, "19220": 229, "19222": 229, "19224": 229, "19226": 229, "19228": 229, "19230": 229, "19232": 229, "19234": 229, "19236": 229, "19238": 229, "19240": 229, "19242": 229, "19244": 229, "19246": 229, "19248": 229, "19250": 229, "19252": 229, "19254": 229, "19256": 229, "19258": 229, "19260": 229, "19262": 229, "19264": 229, "19266": 229, "19268": 229, "19270": 229, "19272": 229, "19274": 229, "19276": 229, "19278": 229, "19280": 229, "19282": 229, "19284": 229, "19286": 229, "19288": 229, "19290": 229, "19292": 229, "19294": 229, "19296": 229, "19298": 229, "19300": 229, "19302": 229, "19304": 229, "19306": 229, "19308": 229, "19310": 229, "19312": 229, "19314": 229, "19316": 229, "19318": 229, "19320": 229, "19322": 229, "19324": 229, "19326": 229, "19328": 229, "19330": 229, "19332": 229, "19334": 229, "19336": 229, "19338": 229, "19340": 229, "19342": 229, "19344": 229, "19346": 229, "19348": 229, "19350": 229, "19352": 229, "19354": 229, "19356": 229, "19358": 229, "19360": 229, "19362": 229, "19364": 229, "19366": 229, "19368": 229, "19370": 229, "19372": 229, "19374": 229, "19376": 229, "19378": 229, "19380": 229, "19382": 229, "19384": 229, "19386": 229, "19388": 229, "19390": 229, "19392": 229, "19394": 229, "19396": 229, "19398": 229, "19400": 229, "19402": 229, "19404": 229, "19406": 229, "19408": 229, "19410": 229, "19412": 229, "19414": 229, "19416": 229, "19418": 229, "19420": 229, "19422": 229, "19424": 229, "19426": 229, "19428": 229, "19430": 229, "19432": 229, "19434": 229, "19436": 229, "19438": 229, "19440": 229, "19442": 229, "19444": 229, "19446": 229, "19448": 229, "19450": 229, "19452": 229, "19454": 229, "19456": 229, "19458": 229, "19460": 229, "19462": 229, "19464": 229, "19466": 229, "19468": 229, "19470": 229, "19472": 229, "19474": 229, "19476": 229, "19478": 229, "19480": 229, "19482": 229, "19484": 229, "19486": 229, "19488": 229, "19490": 229, "19492": 229, "19494": 229, "19496": 229, "19498": 229, "19500": 229, "19502": 229, "19504": 229, "19506": 229, "19508": 229, "19510": 229, "19512": 229, "19514": 229, "19516": 229, "19518": 229, "19520": 229, "19522": 229, "19524": 229, "19526": 229, "19528": 229, "19530": 229, "19532": 229, "19534": 229, "19536": 229, "19538": 229, "19540": 229, "19542": 229, "19544": 229, "19546": 229, "19548": 229, "19550": 229, "19552": 229, "19554": 229, "19556": 229, "19558": 229, "19560": 229, "19562": 229, "19564": 229, "19566": 229, "19568": 229, "19570": 229, "19572": 229, "19574": 229, "19576": 229, "19578": 229, "19580": 229, "19582": 229, "19584": 229, "19586": 229, "19588": 229, "19590": 229, "19592": 229, "19594": 229, "19596": 229, "19598": 229, "19600": 229, "19602": 229, "19604": 229, "19606": 229, "19608": 229, "19610": 229, "19612": 229, "19614": 229, "19616": 229, "19618": 229, "19620": 229, "19622": 229, "19624": 229, "19626": 229, "19628": 229, "19630": 229, "19632": 229, "19634": 229, "19636": 229, "19638": 229, "19640": 229, "19642": 229, "19644": 229, "19646": 229, "19648": 229, "19650": 229, "19652": 229, "19654": 229, "19656": 229, "19658": 229, "19660": 229, "19662": 229, "19664": 229, "19666": 229, "19668": 229, "19670": 229, "19672": 229, "19674": 229, "19676": 229, "19678": 229, "19680": 229, "19682": 229, "19684": 229, "19686": 229, "19688": 229, "19690": 229, "19692": 229, "19694": 229, "19696": 229, "19698": 229, "19700": 229, "19702": 229, "19704": 229, "19706": 229, "19708": 229, "19710": 229, "19712": 229, "19714": 229, "19716": 229, "19718": 229, "19720": 229, "19722": 229, "19724": 229, "19726": 229, "19728": 229, "19730": 229, "19732": 229, "19734": 229, "19736": 229, "19738": 229, "19740": 229, "19742": 229, "19744": 229, "19746": 229, "19748": 229, "19750": 229, "19752": 229, "19754": 229, "19756": 229, "19758": 229, "19760": 229, "19762": 229, "19764": 229, "19766": 229, "19768": 229, "19770": 229, "19772": 229, "19774": 229, "19776": 229, "19778": 229, "19780": 229, "19782": 229, "19784": 229, "19786": 229, "19788": 229, "19790": 229, "19792": 229, "19794": 229, "19796": 229, "19798": 229, "19800": 229, "19802": 229, "19804": 229, "19806": 229, "19808": 229, "19810": 229, "19812": 229, "19814": 229, "19816": 229, "19818": 229, "19820": 229, "19822": 229, "19824": 229, "19826": 229, "19828": 229, "19830": 229, "19832": 229, "19834": 229, "19836": 229, "19838": 229, "19840": 229, "19842": 229, "19844": 229, "19846": 229, "19848": 229, "19850": 229, "19852": 229, "19854": 229, "19856": 229, "19858": 229, "19860": 229, "19862": 229, "19864": 229, "19866": 229, "19868": 229, "19870": 229, "19872": 229, "19874": 229, "19876": 229, "19878": 229, "19880": 229, "19882": 229, "19884": 229, "19886": 229, "19888": 229, "19890": 229, "19892": 229, "19894": 229, "19896": 229, "19898": 229, "19900": 229, "19902": 229, "19904": 229, "19906": 229, "19908": 229, "19910": 229, "19912": 229, "19914": 229, "19916": 229, "19918": 229, "19920": 229, "19922": 229, "19924": 229, "19926": 229, "19928": 229, "19930": 229, "19932": 229, "19934": 229, "19936": 229, "19938": 229, "19940": 229, "19942": 229, "19944": 229, "19946": 229, "19948": 229, "19950": 229, "19952": 229, "19954": 229, "19956": 229, "19958": 229, "19960": 229, "19962": 229, "19964": 229, "19966": 229, "19968": 229, "19970": 229, "19972": 229, "19974": 229, "19976": 229, "19978": 229, "19980": 229, "19982": 229, "19984": 229, "19986": 229, "19988": 229, "19990": 229, "19992": 229, "19994": 229, "19996": 229, "19998": 229, "l_to_send": 229, "json_to_send": 229, "json_receiv": 229, "l_receiv": 229, "sine": [229, 270, 287], "140106668681968": 229, "wallclock_axi": 229, "1638538131": 229, "1975703": 229, "2978473": 229, "3981225": 229, "498449": 229, "5987027": 229, "698947": 229, "7996597": 229, "899947": 229, "1638538132": 229, "0001943": 229, "1010473": 229, "0b10110": 229, "0x16": [229, 800], "0b1011": [229, 264], "bit_3": 229, "0b00001": 229, "0b1": [229, 246, 316], "0b1000": [229, 246], "0b11110": 229, "bitwis": [229, 394, 427, 936, 940, 1027], "num1": [229, 246], "0b110101101": 229, "num2": [229, 246], "0b101110100": 229, "0b100100100": 229, "0b111111101": 229, "0b1010": 229, "0b10100": [229, 246], "1fuzzi2fuzzi3fuzzi4": 229, "0b11011001": 229, "abcdef": [229, 236, 242, 246], "cde": 229, "lexic": [229, 454, 761], "indexerror": [229, 246, 249, 267, 306, 342, 1007, 1060, 1129], "auer": 229, "aue": 229, "zerodivisionerror": [229, 242, 267, 1007], "lst1": 229, "lst2": 229, "toc": 230, "treeset": 230, "searchabl": [230, 233], "diesel": 230, "vibrat": 230, "lighter": 230, "sensorrandom": 230, "sensorsin": 230, "sensorconst": 230, "wild": [230, 232, 237, 272], "yesterai": 230, "deseri": [230, 242], "decod": [230, 242, 249, 252, 288, 294, 305, 308, 310, 316, 322, 1058, 1104], "swallow": [230, 841, 1007], "walkthrough": [230, 232, 237, 1176], "1h": 230, "exchangeformat": 230, "test_mqtt_format": 230, "parser": [230, 242, 296, 312, 353, 681, 1060, 1163], "mosquitto_sub": [230, 1124], "writer": [230, 769, 854], "deserializeerror": 230, "dangl": [230, 397, 568, 582], "fahrenheit": [232, 365, 367, 380, 395, 404, 411, 417, 421, 424, 428, 437, 441, 446, 447, 468, 669, 707, 760, 762, 763], "nonconst": [232, 580], "getchar": [232, 371, 373, 378, 387], "dry": 232, "verif": [232, 1113], "umlaut": [232, 233, 327, 1039, 1121], "\u00f6": [232, 252, 1121], "canari": 232, "asid": [232, 405, 406, 418, 680, 969], "brainfuck": 232, "nok": [232, 717, 963], "singli": [232, 424, 428, 437, 441, 446, 447, 669, 707, 760, 762, 763], "typedef": [232, 421, 424, 428, 437, 441, 446, 447, 667, 669, 707, 715, 731, 760, 762, 763, 830, 978], "commonplac": [232, 1166], "boundari": [232, 242, 288, 427, 741, 908], "neighborhood": 232, "signed": [232, 381, 430], "unsigned": 232, "excurs": [232, 471, 1107], "pointerarith": 232, "lower_bound": [232, 279, 318, 607, 612, 631, 635, 664, 763], "for_each": [232, 279, 612, 631, 635, 664, 715, 763], "diagram": [232, 471, 489, 491, 823, 907, 914, 916], "search_by_lastnam": [232, 660, 661, 662], "const_iter": [232, 562, 606, 609, 610, 611, 613, 628, 667, 682, 715, 716], "calloper": [232, 545], "exc": [232, 545], "ostream": [232, 545, 571, 731, 761, 1148], "paint": [232, 650, 664, 763], "reverse_copi": [232, 279, 545, 612, 631, 635, 664, 763], "cin": [232, 614, 632, 634, 650, 664, 763], "accumul": [232, 545], "raci": [232, 545], "wsl2": [232, 259, 261, 279, 281, 349], "libsqlite3": [232, 455], "libboost": 232, "libgtk": 232, "prosaic": 232, "roman": 232, "mad": [232, 429], "wxwidget": 232, "lieb": [233, 294, 310], "gr\u00fc\u00dfe": [233, 294, 310], "utf8": 233, "distil": [233, 293, 323, 328, 1005, 1077], "4j": 234, "unlimit": [234, 847, 1039], "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000": [234, 267, 284, 288, 306, 337], "0xdeadbeef": [234, 236, 242, 288, 294, 337, 526], "3735928559": [234, 236, 242, 246, 288, 294, 337], "0b10010011": 234, "ippi": 234, "0b0101": 234, "0101": 234, "teifl": [234, 322], "fun1": 234, "fun2": 234, "ipykernel_165524": 234, "729327466": 234, "nsecond": [234, 1052], "rline": 234, "carriag": [234, 384, 1052], "sphinxverbatim": 234, "neuer": 234, "ordner": 234, "euer": 234, "regex_str": [234, 252], "calim": 234, "yaaai": 234, "needl": [234, 1046, 1054], "haystack": [234, 1046, 1054], "finit": [234, 283, 399, 899], "haystack_s": 234, "0x7fe07c0cdf90": 234, "list_iter": [234, 252, 306, 316, 322], "0x7fe07c0cd7f0": 234, "unicode_code_point": 234, "l_new": 234, "ijk": 234, "mengenlehr": 234, "s1": [234, 242, 246, 249, 252, 267, 274, 284, 294, 306, 316, 322, 471, 488, 518, 577, 671, 677, 725, 747, 749, 751, 753, 1057], "s2": [234, 242, 246, 249, 252, 267, 274, 284, 294, 306, 316, 322, 471, 488, 518, 577, 671, 677, 725, 747, 749, 751, 1057], "gunnar": 234, "liam": 234, "maximumum": 234, "variable2": 234, "maximum2": 234, "mrmr": 234, "einser": 234, "square_numb": [234, 1055], "squares_gener": 234, "other_d": [234, 267], "nove": 234, "isspac": [234, 236, 239, 242, 267, 288, 316, 322, 1054], "buchhaltung": [234, 870, 892, 893], "startswith": [234, 242, 271, 272, 274, 288, 451, 1054, 1127], "buch": [234, 1158], "oooo": 234, "isupp": [234, 242, 252, 288, 322, 1054], "zz": 234, "traurig": 234, "substr": [234, 236, 242, 252, 267, 274, 288, 306, 310, 316, 322, 1148], "gid": [234, 242, 310, 761, 837, 838, 845, 847, 855, 927, 942, 1086], "count_byt": 234, "nbyte": 234, "2691": [234, 761, 866], "miscellanea": [235, 930], "brace": [235, 242, 288, 371, 394, 397, 409, 469, 562, 571, 603, 605, 610, 623, 624, 667, 707, 716, 760, 762, 763, 1036, 1039], "hour_of_dai": 235, "ein_str": 236, "ein_anderer_str": 236, "fghjgfgh": 236, "dfghgfgh": 236, "do_someth": [236, 255, 337, 400, 402, 410, 425, 439, 724, 1036], "komplett": [236, 322], "returnwert": [236, 1158], "sinnloser": 236, "weis": [236, 1179], "vorgenommen": 236, "obacht": 236, "140672599989840": 236, "140672464974720": 236, "hoechst": [236, 274], "rechnern": 236, "100000": [236, 252, 680, 915, 1113], "": [236, 252], "exponenti": [236, 1039, 1053], "__annotations__": [236, 246, 267, 288, 302, 1008], "__closure__": [236, 246, 267, 288], "__code__": [236, 246, 267, 288], "__delattr__": [236, 239, 242, 246, 264, 267, 288, 306], "__dir__": [236, 239, 246, 264, 267, 288, 306], "__format__": [236, 239, 242, 246, 264, 267, 288, 306], "__ge__": [236, 239, 242, 246, 264, 267, 288, 306, 1027], "__get__": [236, 246, 267, 288], "__getattribute__": [236, 239, 242, 246, 264, 267, 288, 306], "__globals__": [236, 246, 267, 288], "__gt__": [236, 239, 242, 246, 264, 267, 288, 306], "__hash__": [236, 239, 242, 246, 264, 267, 288, 306, 316], "__init_subclass__": [236, 239, 246, 264, 267, 288, 306], "__kwdefaults__": [236, 246, 267, 288], "__ne__": [236, 239, 242, 246, 264, 267, 288, 306, 1027], "__new__": [236, 239, 242, 246, 264, 267, 288, 306], "__qualname__": [236, 246, 267, 288], "__reduce__": [236, 239, 242, 246, 264, 267, 288, 306], "__reduce_ex__": [236, 239, 246, 264, 267, 288, 306], "__setattr__": [236, 239, 242, 246, 264, 267, 288, 306], "__sizeof__": [236, 239, 242, 246, 264, 267, 288, 306], "__subclasshook__": [236, 239, 246, 264, 267, 288, 306], "karteikart": 236, "my_formatted_person": 236, "123425041997": 236, "caros_str": 236, "joergs_str": 236, "0x7ff0dc48b490": 236, "next_po": 236, "tim": [236, 246, 333, 334], "ugli": [236, 246, 260, 269, 270, 283, 290, 291, 366, 371, 545, 763, 835, 840, 865, 866, 906, 1005, 1006], "flat": [236, 246, 418, 444, 445, 977, 978], "puriti": [236, 246], "silenc": [236, 246, 410, 853], "ambigu": [236, 246, 397, 432, 433, 434, 581, 681, 870], "refus": [236, 246, 255, 461, 783, 836, 907, 923, 982], "temptat": [236, 246], "dutch": [236, 246], "honk": [236, 246], "wahr": 236, "falsch": [236, 249, 1165], "kriegt": 236, "nachkommastellen": 236, "moeglichkeit": 236, "f_str": 236, "punkt_po": 236, "nachkomma_str": 236, "praezedenz": 236, "wandel": 236, "vorn": 236, "anhaengen": 236, "wuenschen": 236, "wuerd": 236, "appendleft": 236, "extendleft": 236, "relem": 236, "popleft": 236, "sorted_l": 236, "sorted_t": 236, "sorted_": 236, "subtext": 236, "ssissippi": 236, "140672464726576": 236, "copied_text": 236, "140672464784832": 236, "140672464784064": 236, "140672599989872": 236, "140672464751872": 236, "140672464768512": 236, "140672464594880": 236, "jkl": 236, "suesser": [236, 242, 249, 252, 255, 271], "sechser_gewuerfelt": 236, "n_tri": [236, 239, 274, 316, 322, 1043], "versag": [236, 274], "eva": [236, 288, 1046], "xrang": [236, 1047], "0x7ff0dc48bed0": 236, "hann": 236, "gruess": 236, "gott": [236, 267, 360], "fill_in_us": 236, "scho": 236, "my_db": 236, "uniq_dict": 236, "konfigurierbaren": 236, "startwert": 236, "ausgibt": 236, "sqnum": 236, "0x7ff014b01820": 236, "xslx": 236, "yz": 236, "lret": 236, "ochwa": 236, "unbalanc": 237, "geospati": 237, "gdal": 237, "sweigart": [237, 251, 293, 1108], "datenypen": 238, "libarari": 238, "chainmap": 238, "dequ": [238, 739], "suchalgorithmen": 238, "51139385": 239, "77397a312b47": 239, "50924272": [239, 242], "20210728": [239, 242, 1034], "eine_komplizierte_funkt": 239, "endeffekt": 239, "zusammenzuzaehlen": 239, "tarnt": 239, "vergeblich": 239, "komplexitaet": 239, "zahl_als_str": 239, "bledsinn": 239, "try_no": 239, "blahblahblah": 239, "cxyxyyyyxi": 239, "table_str": 239, "table_dict": 239, "139769175732912": 239, "139769175738624": 239, "satan_str": 239, "satan_int": 239, "result_of_print": 239, "result_of_evald_print": 239, "code_str": [239, 249], "compiled_cod": 239, "woswasi": [239, 246], "0x7f1e91eb42f0": 239, "philipp": [239, 246, 249, 267, 274, 288, 306, 316, 469, 544, 616, 628, 660, 662, 1097, 1099, 1103, 1105, 1125, 1126, 1127, 1129, 1130, 1131, 1132], "lastnma": 239, "0x7f1e8c0fe2e0": 239, "__abs__": [239, 246, 264], "__and__": [239, 246, 306, 1027], "__bool__": [239, 246, 264], "__ceil__": [239, 246, 264], "__divmod__": [239, 246, 264], "__float__": [239, 246, 264, 288], "__floor__": [239, 246, 264], "__floordiv__": [239, 246, 264, 1027], "__getnewargs__": [239, 242, 246, 264, 288], "__index__": [239, 246], "__int__": [239, 246, 264, 288, 305], "__invert__": [239, 246], "__lshift__": [239, 246, 1027], "__mod__": [239, 242, 246, 264, 288, 1027], "__mul__": [239, 242, 246, 264, 288, 1027], "__neg__": [239, 246, 264], "__or__": [239, 246, 306, 1027], "__pos__": [239, 246, 264], "__pow__": [239, 246, 264, 1027], "__rand__": [239, 246, 306], "__rdivmod__": [239, 246, 264], "__rfloordiv__": [239, 246, 264], "__rlshift__": [239, 246], "__rmod__": [239, 242, 246, 264, 288], "__rmul__": [239, 242, 246, 264, 288], "__ror__": [239, 246, 306], "__round__": [239, 246, 264], "__rpow__": [239, 246, 264], "__rrshift__": [239, 246, 1027], "__rshift__": [239, 246, 1027], "__rsub__": [239, 246, 264, 306, 310, 1027], "__rtruediv__": [239, 246, 264], "__rxor__": [239, 246, 306], "__sub__": [239, 246, 264, 306, 310, 1027], "__truediv__": [239, 246, 264, 1027], "__trunc__": [239, 246, 264], "__xor__": [239, 246, 306, 1027], "as_integer_ratio": [239, 246, 264], "bit_length": [239, 246], "conjug": [239, 246, 264], "denomin": [239, 246], "from_byt": [239, 246], "to_byt": [239, 246], "0x7f1e8c0b3130": 239, "int_list": 239, "0x7f1e8c0fe340": 239, "0x7f1e8c0fe760": 239, "u1": 239, "u2": 239, "type_of_us": 239, "scrambl": 239, "hansj\u00f6rg": [239, 451], "gr\u00f6jsnah": 239, "class_str": 239, "1997": [239, 249, 1033, 1097, 1099, 1103, 1105], "0x7f1e8c1c2e50": 239, "joleckmi": 239, "cmdline": 240, "excess": [240, 400], "provocantli": 240, "pybai": [240, 309, 1108], "suchzeit": 241, "everywher": [241, 256, 430, 445, 461, 671, 822, 960, 1046], "d_as_str": 242, "received_d": 242, "1939": 242, "145415": 242, "bytes_or_buff": [242, 288], "expos": [242, 288, 559, 645, 841, 907, 915, 916, 950], "strict": [242, 262, 288, 306, 466, 480, 487, 501, 515, 567, 763, 1057, 1137], "__contains__": [242, 288, 306], "format_spec": [242, 267, 288], "getattr": [242, 246, 267, 288, 1021], "__getitem__": [242, 288, 1129, 1130], "__iter__": [242, 288, 306, 1012], "__len__": [242, 288, 306], "casefold": [242, 288], "caseless": [242, 288], "fillchar": [242, 288], "pad": [242, 288, 1053], "occurr": [242, 288, 374], "codec": [242, 249, 252, 288, 294, 310, 316, 322, 1121], "unicodeencodeerror": [242, 249, 252, 267, 288, 294, 310, 1007, 1121], "xmlcharrefreplac": [242, 288], "register_error": [242, 288], "suffix": [242, 288], "expandtab": [242, 267, 288, 316], "tabsiz": [242, 288], "lowest": [242, 288, 394, 400, 970, 971, 1058], "format_map": [242, 288], "isalnum": [242, 288, 1054], "alphabet": [242, 288, 374, 429, 451, 854, 1121], "isascii": [242, 288], "007f": [242, 288], "isdecim": [242, 288], "iskeyword": [242, 252, 288], "isnumer": [242, 288], "isprint": [242, 288, 374, 402], "printabl": [242, 288, 374, 1007], "istitl": [242, 288], "uncas": [242, 288], "pq": [242, 288], "ljust": [242, 288], "removeprefix": [242, 288], "removesuffix": [242, 288], "rindex": [242, 288, 1054], "rpartit": [242, 288], "discard": [242, 288, 306, 433, 579, 580, 717, 852, 853], "splitlin": [242, 288], "keepend": [242, 288], "swapcas": [242, 288], "titlecas": [242, 288], "lookuperror": [242, 267, 288, 1007], "untouch": [242, 288, 810], "zfill": [242, 288], "maketran": [242, 288], "numerischen": 242, "ecma": 242, "3rd": [242, 769], "interchang": [242, 649, 731, 1121], "marshal": 242, "pickl": [242, 246], "simplejson": 242, "foo": [242, 274, 284, 288, 306, 310, 316, 322, 539, 680, 713, 731, 743, 1007, 1048], "baz": 242, "u1234": 242, "sort_kei": 242, "getvalu": 242, "compact": [242, 400], "mydict": 242, "obj": [242, 267, 310, 322, 507, 778, 779, 788, 1021, 1029, 1129, 1130], "x08ar": 242, "as_complex": 242, "dct": 242, "__complex__": 242, "object_hook": 242, "2j": 242, "parse_float": 242, "encode_complex": 242, "serializ": 242, "1j": 242, "jsonencod": 242, "iterencod": 242, "scanner": 242, "jsondecodeerror": 242, "jsondecod": 242, "msg": [242, 255, 316, 385, 470, 474, 974, 976, 977, 981, 1003, 1006, 1007], "unformat": 242, "lineno": [242, 249, 316], "colno": 242, "delattr": [242, 246, 267], "setattr": [242, 246, 267, 1021], "__setstate__": [242, 246], "with_traceback": [242, 246], "tb": [242, 246, 322], "__traceback__": [242, 246], "__cause__": [242, 246], "__context__": [242, 246], "__suppress_context__": [242, 246], "parse_int": 242, "parse_const": 242, "object_pairs_hook": 242, "nan": [242, 274, 1113, 1125], "num_str": 242, "_w": 242, "0x7f99fff1bb70": 242, "raw_decod": 242, "extran": 242, "skipkei": 242, "ensure_ascii": 242, "check_circular": 242, "allow_nan": 242, "recogn": [242, 595, 916, 1164], "sensibl": 242, "circular": 242, "recursionerror": [242, 267, 1007], "compliant": [242, 1020], "item_separ": 242, "key_separ": 242, "_one_shot": 242, "chunk": [242, 342, 430, 804, 942, 1110, 1121], "bigobject": 242, "mysocket": 242, "fp": 242, "inf": 242, "complianc": 242, "ippolito": 242, "redivi": 242, "140299267714496": 242, "140299267930496": 242, "schweissparameter_aussi": 242, "strom_ma": 242, "200004": 242, "spannung_v": 242, "aufs_kabel": 242, "maschine_112": 242, "kabel": [242, 246], "vom_kabel": 242, "schweissparameter_eini": 242, "strom_a": 242, "hal": 242, "2c445fb3": 242, "6ca4": 242, "b9d9": 242, "7cfbbff55326": 242, "doesnt_exist": 242, "_a666": 242, "140299402960464": 242, "0b10000000000000000000000000000000000000000000000000000000000000000": [242, 246, 267, 284, 322], "140299327492352": 242, "func_fals": 242, "func_tru": 242, "sex_opt": 242, "140298898107648": 242, "t_mit_einem_el": 242, "supi": 242, "squares_map": 242, "squares_set": 242, "numtri": 242, "even_numb": [242, 306], "mississppi": 242, "xxxx": 242, "nbin": [242, 249, 274, 288, 310], "ndaemon": [242, 249, 274, 288, 310], "nadm": [242, 249, 274, 288, 310, 322], "nlp": [242, 249, 274, 288, 310, 322], "nsync": [242, 249, 274, 288, 310, 322], "nshutdown": [242, 249, 274, 288, 310, 322], "nhalt": [242, 249, 274, 288, 310, 322], "nmail": [242, 249, 274, 288, 310, 322], "noper": [242, 249, 274, 288, 310, 322], "ngame": [242, 249, 274, 288, 310, 322], "nftp": [242, 249, 274, 288, 310, 322], "nnobodi": [242, 249, 274, 288, 310, 322], "napach": [242, 249, 274, 288, 310, 322], "nsystemd": [242, 249, 274, 288, 310, 322], "ntss": [242, 249, 274, 288, 310, 322], "ndbu": [242, 249, 274, 288, 310, 322], "npolkitd": [242, 249, 274, 288, 310, 322], "navahi": [242, 249, 274, 288, 310, 322], "nunbound": [242, 249, 274, 288, 310, 322], "ndnsmasq": [242, 249, 274, 288, 310, 322], "nnm": [242, 249, 274, 288, 310, 322], "nusbmuxd": [242, 249, 274, 288, 310, 322], "ngluster": [242, 249, 274, 288, 310, 322], "nrtkit": [242, 249, 274, 288, 310, 322], "npipewir": [242, 249, 274, 288, 310, 322], "ngeoclu": [242, 249, 274, 288, 310, 322], "nchroni": [242, 249, 274, 288, 310, 322], "nsaslauth": [242, 249, 274, 288, 310, 322], "nradvd": [242, 249], "nrpc": [242, 249, 274, 288, 310, 322], "nqemu": [242, 249, 274, 288, 310, 322], "nopenvpn": [242, 249, 274, 288, 310, 322], "ncolord": [242, 249, 274, 288, 310, 322, 932], "nrpcuser": [242, 249, 274, 288, 310, 322], "nabrt": [242, 249, 274, 288, 310, 322], "nflatpak": [242, 249, 274, 288, 310, 322], "ngdm": [242, 249, 274, 288, 310, 322], "ngnome": [242, 249, 274, 288, 310, 322], "nvboxadd": [242, 249, 274, 288, 310, 322], "nsshd": [242, 249, 274, 288, 310, 322], "ntcpdump": [242, 249, 274, 288, 310, 322], "njfasch": [242, 249, 274, 288, 310, 322], "nmosquitto": [242, 249, 274, 288, 310, 322], "nsomeon": [242, 249], "1001": [242, 249, 252, 624, 625, 626, 627, 855, 867, 898, 927], "move_to_end": 242, "thermometera": 242, "thermometerb": 242, "get_average_temperatur": 242, "th_list": 242, "ipykernel_9164": 242, "859664274": 242, "2942790015": 242, "0x7fac83797be0": 242, "basisklass": 242, "level2_1": 242, "l21": 242, "level2_2": 242, "level3": 242, "jedi": 242, "blueey": 242, "droid": 242, "r2d2": 242, "derivednoctor": 242, "dnoctor": 242, "derivedctorcallingsup": 242, "derivedctorcallingbasector": 242, "__firstnam": 242, "__lastnam": 242, "_user__firstnam": 242, "_user__lastnam": 242, "lightsab": 242, "padawan": 242, "arithmeticerror": [242, 267, 1007], "waaah": 242, "abgebrannt": 242, "puh": 242, "intakt": 242, "is_even": [242, 246, 316, 322, 684, 685, 686, 687], "0x7fac81f52df0": 242, "0x7fac81cb5700": 242, "progamm": 242, "tumpfback": 242, "och": 242, "umpfback": 242, "rt": [242, 763, 787, 791, 801, 812, 814, 819, 822, 825, 828, 831, 906], "wholefil": 242, "notepad": 243, "betreiben": [243, 1165, 1172, 1173], "unterschiedlichen": 243, "sinnvol": 243, "umgebungen": 243, "unausweichlich": 243, "installationsverzeichni": 243, "verzeichniss": [243, 1167], "ausf\u00fchren": 243, "hernimmt": 243, "wei\u00df": 243, "rennt": 243, "ordereddict": 244, "__mro__": 244, "udemi": 244, "successor": [245, 394], "repeatedli": [245, 624, 1120], "kantenlaeng": 246, "ipykernel_101004": 246, "2437887948": 246, "0x10": [246, 249, 458], "0b1111111111111111111111111111111111111111111111111111111111111111": [246, 267, 284, 288, 316, 322], "1267650600228229401496703205381": 246, "735611673": 246, "ndigit": [246, 267, 316, 373], "0b101": 246, "0b100": [246, 249], "register_statu": 246, "0b1001000": 246, "0b00001000": 246, "strom": [246, 316], "liegt_strom_an": 246, "0b00111110": 246, "ever": [246, 306, 449, 458, 489, 849, 915, 1038, 1161], "deadbeef": [246, 526, 909], "gross": 246, "doktor": 246, "jawui": 246, "akademik": 246, "ndef": [246, 316], "tdef": [246, 267], "geh": 246, "hochkomplex": [246, 322], "verendet": 246, "euler": 246, "sche": 246, "dokumentiern": 246, "koennt": 246, "varianc": 246, "fmean": 246, "geometric_mean": 246, "harmonic_mean": 246, "harmon": 246, "median": 246, "median_low": 246, "median_high": 246, "median_group": 246, "50th": 246, "percentil": 246, "multimod": 246, "quantil": 246, "centr": 246, "nearest": [246, 492, 1115], "doctest": 246, "ellipsi": [246, 267], "8333333333": 246, "8333": 246, "spread": 246, "pvarianc": 246, "pstdev": 246, "stdev": [246, 970, 972], "38961843444": 246, "recalcul": 246, "statisticserror": 246, "normaldist": 246, "x1": 246, "unchang": [246, 668, 1001], "jointli": 246, "rescal": 246, "cdf": 246, "cumul": [246, 443], "inv_cdf": 246, "coeffici": 246, "ovl": 246, "agreement": 246, "densiti": 246, "8035050657330205": 246, "dx": 246, "quartil": 246, "decil": 246, "zscore": 246, "score": 246, "from_sampl": 246, "readonli": 246, "dataset": [246, 1111, 1113, 1126, 1128, 1130, 1132], "subcontrari": 246, "reciproc": 246, "quantiti": [246, 278, 1115], "earn": 246, "5625": 246, "midpoint": 246, "estim": 246, "nomin": 246, "taught": [246, 1031, 1166], "aabbbbbbbbcc": 246, "aabbbbccddddeeffffgg": 246, "986893273527251": 246, "0th": 246, "100th": 246, "xbar": 246, "0810874155219827": 246, "3720238095238095": 246, "01875": 246, "gesamter_gruss": 246, "excelsheet": 246, "hinters": 246, "gabali": 246, "helen": 246, "fischer": 246, "sssklndkfgv": 246, "fosvh": 246, "worl": [246, 249, 1045], "lowr": 246, "dlrow": [246, 1045], "olleh": [246, 1045], "even_numbers_fun": 246, "even_numbers_gen": 246, "evennum": 246, "even_filt": 246, "tausend": 246, "1234250497": [246, 249, 252, 255, 469, 476, 628], "1234250597": 246, "users_json_str": 246, "liest": 246, "kontrah": 246, "verwandelt": 246, "gelesenes_ding_wieder_als_dict": 246, "schatz": 246, "erich": 246, "koxi": 246, "hatkeinenwert": 246, "fn": [246, 434, 451, 761, 1132], "ul": [246, 388], "ln": [246, 434], "1st": [247, 1150], "einschub": 247, "filterketten": 247, "datensatz": 247, "letzten": 247, "recapitul": 248, "naeherungsverfahren": 249, "addieren": 249, "140606563548752": 249, "wirklich": [249, 1156], "0o10": 249, "teilbar": 249, "00001": 249, "abd": [249, 594], "i1": [249, 284], "140606428182128": 249, "140606428182896": 249, "2345010101": 249, "elizabeth": [249, 1097, 1099, 1103, 1105, 1116], "1901": 249, "evi": 249, "maxim": [249, 449, 916], "wuerfeln": 249, "freuen": 249, "sechser": 249, "faellt": 249, "jammern": 249, "versuch_numm": 249, "versuchen": 249, "jammert": 249, "hlo": [249, 1045], "output_list": [249, 1090], "nullt": 249, "34567654567": 249, "gsd": 249, "another_t": 249, "symmetisch": 249, "netzwerkkommunik": 249, "request_to_send": 249, "request_str_to_send": 249, "1651046407": 249, "3633313": 249, "cabl": [249, 841], "request_str_from_c": 249, "request_from_c": 249, "1651046335": 249, "8477345": 249, "139909434561408": 249, "139909544402512": 249, "139909544402544": 249, "139909543772528": 249, "139909433666288": 249, "roo": [249, 288, 901], "xf6": [249, 252, 294, 1039, 1121], "joerg_latin": 249, "xf6rg": [249, 252, 294, 306, 310, 1121], "j\u0456rg": [249, 252, 294, 310, 1121], "cyclic": 251, "140616191009600": 252, "140616191012720": 252, "140116274372176": 252, "0x7f6f5cc2de50": 252, "0x7f6f5cc2df30": 252, "18446744073709551617": 252, "multi_dict": 252, "ipykernel_189565": 252, "1743780635": 252, "140115753096128": 252, "ntri": 252, "bytes_joerg": 252, "bytes_joerg_iso_latin_1": 252, "bytes_joerg_utf_32": 252, "xff": [252, 294, 310], "xfe": [252, 294, 310], "x00": [252, 294, 310, 914], "x00j": [252, 294], "x00r": [252, 294], "x00g": [252, 294], "bytes_joerg_utf_16": 252, "xfej": 252, "bytes_joerg_utf_8": 252, "xc3": [252, 288, 294, 310, 1039, 1121], "xb6rg": [252, 288, 294, 310, 1121], "iso_latin_1": 252, "russian": 252, "bytes_received_by_russian": 252, "2435": 252, "010d": 252, "0000000666": 252, "ssi": 252, "garbag": [252, 444, 451, 467, 726, 738, 916, 943, 1005], "ipykernel_4000": 252, "3227798639": 252, "ahja": 252, "24000": 252, "24500": 252, "25000": 252, "25500": 252, "26000": 252, "26500": 252, "__del__": 252, "whe": 252, "13397": 252, "116985": 252, "120725": 252, "118110": 252, "0x7fe3a392aa30": 252, "test_person_bas": 254, "pluggi": [254, 272, 1096, 1141], "rootdir": [254, 272, 810, 1096, 1141], "test_persondb_bas": 254, "test_pytest_demo": 254, "xfail": [254, 1141], "test_persondb": 254, "test_duplicate_svnr": 254, "test_update_sunnycas": 254, "test_update_notexist": 254, "test_update_exact_dupl": 254, "former": [254, 1048], "persondb": 254, "sqlite": [254, 455, 1064, 1117], "ics_demand": 254, "maco": [254, 342, 347], "woe": 254, "homebrew": 254, "brew": 254, "flaviocop": 254, "str_mit_666": 255, "140240419976192": 255, "140240419593568": 255, "aclass": 255, "almostempti": 255, "beenther": 255, "kuckucksei": 255, "chirp": 255, "some_bullshit": 255, "bad_thing_happen": 255, "do_some_bullshit": 255, "boah": [255, 316], "python_cod": 255, "a_global_vari": 255, "globale_vari": 255, "140240513015376": 255, "140240513014256": 255, "140240419270768": 255, "140240419271792": 255, "storesanintegerandmodifiesit": 255, "the_int": 255, "my_int": 255, "saiami": 255, "storesalistandmodifiesit": 255, "the_list": 255, "append_someth": 255, "salami": 255, "compute_squar": 255, "satanicerror": 255, "jess": 255, "invalidsvnr": 255, "rex_lin": 255, "json_str": [255, 1104], "python_l": 255, "0x7f8c0551f490": 255, "behandlung": 257, "kurzer": 257, "reicht": [257, 1156], "unwichtig": 257, "weggelassen": 257, "\u00fc": [257, 1121], "jeden": 257, "teilnehmer\u00fcbung": 257, "kernsprach": 257, "rvalu": [257, 279, 319, 570, 675, 707, 717, 723, 726, 727, 728, 729, 732, 740, 760, 762, 763, 1160, 1161, 1162], "constexpr": [257, 258, 259, 279, 281, 319, 707, 717, 741, 761, 762, 763, 1161], "uniform": [257, 258, 259, 261, 318, 449, 469, 571, 603, 623, 624, 667, 707, 716, 760, 762, 763, 1020, 1161], "initialisierung": [257, 1177], "infer": 257, "speichermodel": 257, "atomar": [257, 1159, 1177], "standardbibliothek": 257, "regu\u00e4r": 257, "trait": 257, "zufallszahlen": 257, "zeitbibliothek": 257, "sprachsyntax": 257, "deduct": [257, 682, 684], "erweiterungen": 257, "ge\u00e4ndert": 257, "definitionen": 257, "bibliothek": 257, "zusatzvari": 257, "constinit": 257, "modularisierung": [257, 343, 1158], "versionierung": 257, "routinen": 257, "synchronisierung": 257, "werkzeug": [257, 1158, 1165, 1167, 1172, 1175], "kalend": [257, 1155], "zeitzonen": 257, "zus\u00e4tz": 257, "chrono": [257, 258, 259, 261, 270, 318, 474, 667, 728, 739, 740, 744, 762, 763], "initializer_list": [258, 259, 261, 318, 319, 470, 471, 498, 499, 667, 669, 707, 762, 763], "handwrit": [258, 259, 261, 318, 707, 723, 762, 763], "weak_ptr": [258, 259, 261, 318, 319, 723, 760, 762, 763], "boilerpl": [258, 259, 261, 297, 313, 318, 319, 456, 707, 708, 709, 727, 762, 763, 986, 1157], "condition_vari": [258, 259, 261, 270, 318, 740, 762, 763, 1161], "emplace_back": [258, 259, 603], "cref": [258, 259], "interoper": [259, 261, 279, 281], "wazoo": [259, 261, 279, 281], "anviron": [259, 261], "submodul": [259, 261, 524, 587], "chdir": [259, 261, 322], "gtest_main": [259, 474, 523, 525, 526, 546, 549, 561, 587, 725, 726, 1147, 1152], "dummy_suit": 259, "sticki": [260, 269, 270, 290, 291, 342, 347, 763, 840, 865, 906], "insod": 261, "lvalu": [261, 318, 319, 675, 676, 679, 707, 717, 723, 727, 732, 740, 760, 762, 763], "afterword": [261, 318, 319, 676, 707, 762, 763], "ain": [261, 449, 1035], "singleton": [262, 322, 466, 467, 473, 487, 501, 515, 567, 763, 1164], "inflex": [262, 369, 466, 480, 487, 493, 494, 501, 515, 567, 763], "proxi": [262, 280, 282, 283, 304, 308, 348, 466, 473, 475, 476, 487, 501, 515, 567, 763, 1136, 1164], "serverthread": [262, 491, 505], "my_si": [264, 1015], "function_returns_two_valu": 264, "140134238766608": 264, "sizeof": [264, 373, 383, 394, 415, 422, 423, 427, 430, 550, 562, 574, 602, 668, 730, 910, 928, 932, 933, 934, 940, 941, 942, 943, 968, 974, 977, 981, 1047], "__getformat__": 264, "__setformat__": 264, "fromhex": 264, "0b0010": 264, "0b1001": 264, "key_list": 264, "key_tupl": 264, "evil_list": 264, "evil_list_2": 264, "neinem": 264, "nviel": 264, "doze_path": [264, 267], "compiled_regex": 264, "l_json": 264, "l_json_sent": 264, "received_data": 264, "0x7f73869f06c0": 264, "create_avg_item": 264, "ninetynin": 264, "koppel": 266, "netzwerk": [266, 343, 1165, 1175, 1178], "condens": [266, 321, 450], "nprint": 267, "noption": 267, "nfile": 267, "nsep": 267, "nend": 267, "nflush": 267, "forcibli": 267, "didact": [267, 360, 363, 586, 588, 589, 1164], "fullnam": [267, 274, 1024, 1028], "nerst": 267, "nzweit": [267, 322, 337], "andere_list": 267, "neue_list": 267, "140323934455312": 267, "140323934455344": 267, "140323934455376": 267, "140323852147712": 267, "140323933649904": 267, "140323833601584": 267, "frozenset": [267, 284, 305], "__builtins__": [267, 288, 322, 1008], "gr\u00fc\u00df": 267, "nocheinprogramm": 267, "ocheinprogramm": 267, "dfghgfdfghj": 267, "jhghgh": 267, "matchstr": 267, "compiled_match": 267, "tprint": 267, "num_ss": 267, "isi": [267, 528, 544, 1125], "strippeditem": 267, "yet_another_d": 267, "s3": [267, 274, 488], "s4": 267, "isdisjoint": [267, 274, 306, 1057], "nnoteworthi": 267, "nil": 267, "__package__": [267, 335, 1008], "__loader__": [267, 335, 1008], "__spec__": [267, 335, 1008], "modulespec": 267, "loader": [267, 439, 457, 462, 984, 1001, 1175], "__build_class__": 267, "__import__": 267, "dont_inherit": 267, "_feature_vers": 267, "divmod": 267, "raw_input": 267, "ipkernel": 267, "ipythonkernel": 267, "0x7f9fb16abcd0": 267, "class_or_tupl": 267, "aiter": 267, "async_iter": 267, "anext": 267, "oct": [267, 892, 914, 916], "pow": [267, 579, 580, 730], "exp": [267, 503], "notimpl": [267, 306, 310, 1027], "memoryview": 267, "__debug__": 267, "stopasynciter": [267, 1007], "generatorexit": [267, 1007], "keyboardinterrupt": [267, 283, 1007], "importerror": [267, 1007], "environmenterror": [267, 1136], "ioerror": [267, 1142], "eoferror": [267, 1007], "notimplementederror": [267, 1007], "unboundlocalerror": [267, 1007], "indentationerror": [267, 1007], "taberror": [267, 1007], "unicodeerror": [267, 1007], "unicodedecodeerror": [267, 310, 316, 322, 1007], "unicodetranslateerror": [267, 1007], "floatingpointerror": [267, 1007], "overflowerror": [267, 1007], "systemerror": [267, 1007], "referenceerror": [267, 1007], "memoryerror": [267, 1007], "buffererror": [267, 1007], "userwarn": [267, 1007], "encodingwarn": [267, 1007], "deprecationwarn": [267, 1007], "pendingdeprecationwarn": [267, 1007], "syntaxwarn": [267, 1007], "runtimewarn": [267, 1007], "futurewarn": [267, 1007, 1125], "importwarn": [267, 1007], "unicodewarn": [267, 1007], "byteswarn": [267, 1007], "resourcewarn": [267, 1007], "connectionerror": [267, 1007], "blockingioerror": [267, 1007], "brokenpipeerror": [267, 1007], "childprocesserror": [267, 1007], "connectionabortederror": [267, 1007], "connectionrefusederror": [267, 1007], "connectionreseterror": [267, 1007], "fileexistserror": [267, 1007], "isadirectoryerror": [267, 1007], "notadirectoryerror": [267, 1007], "interruptederror": [267, 1007], "processlookuperror": [267, 1007], "timeouterror": [267, 1007], "closefd": 267, "beopen": 267, "1995": [267, 477, 1097, 1099, 1103, 1105], "nation": [267, 914], "1991": [267, 1033], "sticht": 267, "centrum": 267, "amsterdam": [267, 1033], "credit": [267, 781, 1034], "cwi": 267, "cnri": 267, "zope": 267, "cast": [267, 394, 550, 638, 645, 769], "execfil": 267, "_pydev_imp": 267, "_pydev_execfil": 267, "glob": [267, 426, 898, 955, 1003, 1018, 1148], "runfil": 267, "_pydev_bundl": 267, "pydev_umd": 267, "wdir": 267, "__ipython__": 267, "exclud": [267, 445, 572], "transient": 267, "display_id": 267, "get_ipython": 267, "interactiveshel": 267, "zmqshell": 267, "zmqinteractiveshel": 267, "0x7f9fb1516200": 267, "config_fil": 267, "srcdir": 267, "dstdir": 267, "dst": [267, 389, 439, 528, 569, 588, 597, 598, 604, 1058], "untrust": 270, "lan": 270, "programmat": [270, 495, 907, 915, 963, 983, 1133], "stty": 270, "termio": 270, "ioctl_tti": 270, "setseri": 270, "tty": [270, 841, 896, 968, 974, 998], "tty_io": 270, "bidirection": 270, "nake": 270, "tiocgseri": 270, "tiocsseri": 270, "async_low_lat": 270, "cfmakeraw": 270, "ttyusb0": [270, 841], "low_lat": 270, "serial_struct": 270, "bidir": 270, "advantec": 270, "nonetheless": [270, 273, 276, 305, 684, 1148], "mycat": 270, "mimick": [270, 725], "make_realtim": 270, "interfaceri": 270, "cif": [270, 322], "samba": [270, 322], "automationadmin": 270, "gsc": 270, "pd": [271, 272, 274, 278, 306, 451, 1111, 1113, 1125, 1126, 1127, 1129, 1130, 1131, 1132], "read_csv": [271, 272, 278, 306, 310, 316, 451, 1111, 1113], "txn": 271, "iso8859": 271, "time_book": [271, 272, 451], "time_valuta": [271, 272, 451], "at66666666666666": 271, "bezahlung": [271, 272, 274, 451], "kart": [271, 272, 274, 451], "eur": [271, 272, 451], "95111243": [271, 451], "abbuchung": [271, 451], "onlinebank": [271, 451], "gutschrift": 271, "000000144919": 271, "339099446722187": 271, "000": [271, 306, 310, 316, 451, 869, 907], "card_pay": 271, "filt": 271, "9325008697": 271, "339099446790254": 271, "og": [271, 439], "237811001182": 271, "auszahlung": 271, "200075787001": 271, "tzb": 271, "anl": 271, "347159strom": 271, "200004871820": 271, "200004876265": 271, "200004848862": 271, "200004871863": 271, "dauerauftrag": 271, "qsnng6xau": 271, "00121672661": 271, "120016487112": [271, 451], "bx": 271, "000009219": 271, "entgelt": 271, "nichtdurchf\u00fchrung": 271, "032300005522384": 271, "saldo": 271, "messtechnik": 271, "602674240071": 271, "0004325259000023": 271, "oeamtc": 271, "mitgliedschaft": 271, "re_liv": 271, "billa": [271, 274, 451], "rew": 271, "dankt": [271, 272, 274, 451], "pipe_stag": 272, "max_colwidth": 272, "max_column": 272, "max_row": 272, "039": 272, "consolut": 272, "insuffici": [272, 681], "categor": [272, 450, 1115], "fuction": 272, "filt_uncat": 272, "uncat_row": 272, "unspecif": [272, 353, 788], "useless": [272, 675, 733, 854, 901, 957, 1029], "food": [272, 278], "luxuri": 272, "categorize_card_pay": 272, "jet": 272, "uncertainti": 272, "categorize_v1": 272, "categorize_v2": 272, "secondari": 272, "test_categori": [272, 451], "test_bas": [272, 1096], "000009258": 272, "k002": [272, 451], "impos": [273, 276], "hurt": [273, 276, 388], "strength": [273, 276, 415, 1031], "overengin": [273, 276, 388, 449, 450, 1156, 1164], "140480285361680": 274, "0xffffffffffffffff": [274, 294, 310], "0x10000000000000000": [274, 294, 310], "140479638276224": 274, "140480203220736": 274, "140480210406176": 274, "7940943354778932823": 274, "0x7fc4189e7c90": 274, "28800": 274, "237988": 274, "produce_dai": 274, "374557": 274, "l_mal_2": 274, "140480285361712": 274, "140479638477760": 274, "140479638427520": 274, "l4": 274, "l5": 274, "140480202528192": 274, "140479638428736": 274, "140480203212992": 274, "l6": 274, "140479598069936": 274, "is_old": 274, "ipykernel_370861": 274, "4290492544": 274, "abc123": 274, "0x7fc4189e5030": 274, "yyi": [274, 316], "lichtenberg": [274, 469, 628, 660, 662, 1097, 1099, 1103, 1105, 1125, 1126, 1127, 1129, 1130, 1131, 1132], "persons2": [274, 1125, 1126], "set_index": [274, 1130], "sort_valu": 274, "inplac": [274, 278, 923, 1126], "flt": [274, 1127], "isin": [274, 1127], "reset_index": 274, "dropna": 274, "value_count": [274, 278], "int64": [274, 278, 1132], "conversiosn": 275, "9am": 276, "woven": [276, 280], "pipelin": [276, 360, 835, 850, 853, 854, 903, 917, 996], "accountid": 278, "accountdescript": 278, "accountparentid": 278, "storeid": 278, "storedescript": 278, "locationid": 278, "locationdescript": 278, "productid": 278, "productdescript": 278, "sales_managerid": 278, "dateyear": 278, "datequart": 278, "datemonth": 278, "datedai": 278, "categoryvers": 278, "categorycategori": 278, "categorytyp": 278, "valueunit": 278, "original_sales_pric": 278, "sale": 278, "st43": 278, "franchescini": 278, "ct14": 278, "salem": 278, "pd23": 278, "ipa": 278, "sm1": 278, "20144": 278, "201412": 278, "1779": 278, "763910": 278, "usd": 278, "st35": 278, "pd2": 278, "pepsi": 278, "sm4": 278, "201410": 278, "957113": 278, "st98": 278, "walter": 278, "pd24": 278, "amber": 278, "20142": 278, "201406": 278, "449395": 278, "st188": 278, "arrowhead": 278, "ct1": 278, "pd19": 278, "sm8": 278, "20164": 278, "201611": 278, "078689": 278, "st107": 278, "spire": 278, "ct5": 278, "san": 278, "jose": 278, "pd15": 278, "juic": 278, "sm5": 278, "20154": 278, "201512": 278, "303679": 278, "quantity_sold": 278, "sold": 278, "st4": 278, "gstore": 278, "ct13": 278, "portland": 278, "pd26": 278, "wine": 278, "000000": [278, 1113], "1069": 278, "st49": 278, "bai": 278, "depot": 278, "ct4": 278, "sacramento": 278, "pd27": 278, "20151": 278, "201501": 278, "592904": 278, "discount": 278, "st36": 278, "pricelow": 278, "arena": [278, 746], "ct10": 278, "reno": 278, "pd22": 278, "sm3": 278, "20162": 278, "201605": 278, "4351": 278, "045830": 278, "1071": 278, "st7": 278, "street": [278, 876], "pd16": 278, "7905": 278, "590606": 278, "pd12": 278, "lemonad": 278, "20153": 278, "201507": 278, "1073": 278, "modified_model": 278, "sales_managerdescript": 278, "janet": 278, "buri": 278, "nanci": 278, "miller": 278, "setp": 278, "nan_field": 278, "bitfield": 278, "bitfi": 278, "nan_column": 278, "gabriel": [278, 713], "walton": 278, "carl": 278, "jjjjj": 278, "ref_t": 278, "datetime64": 278, "damn": 278, "ref_2015_12_04": 278, "flt_before_2015_12_04": 278, "rows_before_2015_12_04": 278, "st119": 278, "ct2": 278, "francisco": 278, "pd11": 278, "orang": [278, 1050], "pulp": 278, "sm7": 278, "kiran": 278, "raj": 278, "201503": 278, "226847": 278, "13627": 278, "793342": 278, "3427": 278, "896898": 278, "15569": 278, "353983": 278, "float64": [278, 310, 316, 1113], "1957": 278, "740301": 278, "572676": 278, "686587": 278, "289381": 278, "flt_product_pd2": 278, "flt_2015": 278, "flt_only_sold": 278, "flt_combin": 278, "st139": 278, "farlo": 278, "ct15": 278, "eugen": 278, "sm11": 278, "jame": 278, "frank": 278, "201511": 278, "st178": 278, "rai": 278, "ct8": 278, "beverli": 278, "hill": 278, "201508": 278, "facet": [279, 281, 623], "rich": [279, 281, 1126, 1135], "toolset": [279, 281, 641], "conceptu": [279, 281, 440, 781, 788, 926], "undergon": [279, 281], "revolut": [279, 281], "odr": [279, 713], "explor": [279, 915], "rodata": [279, 1001], "unspecifi": [279, 394, 481, 553, 981, 982], "bookkeep": [280, 450], "fewer": 280, "closer": 280, "augment": [280, 810, 1122], "test_blah": 280, "monkeypatch": [280, 282, 283, 298, 304, 305, 308], "contextlib": 280, "chatgpt": 281, "ludwig": 281, "registri": [281, 534], "memleak": 281, "jason": [282, 283, 304], "brownle": [282, 283, 304], "contriv": [282, 283, 304, 472, 1008, 1043], "subthread": [282, 283], "introductori": [282, 283, 304, 309, 763, 906, 947, 1114, 1115, 1161], "mindset": [282, 283, 304, 308, 810], "develp": 282, "10am": 283, "reopen": 283, "drei_millionen_int": 284, "3_000_000": 284, "odd_numb": [284, 1012], "odd_numbers_func": 284, "ret_num": 284, "0x7f32ccc4c610": 284, "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000": [284, 337], "139855258515840": 284, "139856078033344": 284, "139856078226432": 284, "139856160540176": 284, "i3": 284, "i4": 284, "nope": [284, 963], "0101010101010": 284, "bash_logout": [284, 892], "bash_profil": [284, 892], "thunderbird": [284, 322, 872, 892], "gnupg": [284, 322, 892], "hst": 284, "gitconfig": [284, 892], "pki": [284, 322, 892], "daham": 284, "20230403": 284, "222915": 284, "bash_histori": [284, 892], "python_histori": [284, 892], "lesshst": [284, 892], "139855258795072": 284, "139855260513728": 284, "139856085569920": 284, "doppelt": 284, "gemoppelt": 284, "trag": 284, "exakt": 284, "paarweis": 284, "read_lines_of_fil": 284, "0x7f32c7d8d390": 284, "nohead": [287, 1102, 1103, 1105], "userdb_csv": [287, 1103, 1104, 1105], "interleav": 287, "dosometh": 288, "0x7fe7fbf80df0": 288, "140634424624656": 288, "140634424623536": 288, "0o644": 288, "0b01110101": 288, "setting_blah": 288, "setting_foo": 288, "config_context": 288, "140634341074320": 288, "140634424624688": 288, "140634341076688": 288, "140634341077776": 288, "140634343012864": 288, "140634341099856": 288, "ipykernel_61373": 288, "1125713270": 288, "1234567876543234567654321234565432123456": 288, "140634281233520": 288, "140634341798400": 288, "140634341995008": 288, "140634341576640": 288, "140634341773312": 288, "140634281802304": 288, "global_vari": 288, "bar2": 288, "bar3": 288, "bar4": 288, "bar5": 288, "bar6": 288, "0x7fe7f869b7d0": 288, "0x7fe7f869b920": 288, "0x7fe7f869bbc0": 288, "punctuat": 288, "abcabcabcabcabc": [288, 316], "rex": [288, 322], "cba": [288, 632], "another_d": 288, "rb": 288, "30000": 288, "coreutil": 291, "autopoint": 291, "rpm": [291, 322, 462], "fcntl": [291, 914, 932, 936, 940, 941, 942, 943, 948, 951, 974, 977, 981], "luciano": [293, 343, 344, 1108], "ramalho": [293, 343, 344, 1108], "140640823526928": 294, "0x7fe97e53c610": 294, "140640823526960": 294, "140640741310912": 294, "140640741034048": 294, "140640741341184": 294, "wasjetzt": 294, "140640722624768": 294, "140640722715136": 294, "l1_copi": [294, 322], "my_funky_gener": 294, "meine_dumme_sequenz": 294, "0x7fe9785083a0": 294, "0x7fe98c21bce0": 294, "greeter": [294, 453, 454, 455, 459, 460, 1000], "0x7fe9796976d0": 294, "140640740502720": 294, "140640722823952": 294, "140640741119552": 294, "l_copi": 294, "140640741312256": 294, "140640722734080": 294, "140640722760768": 294, "140640722739712": 294, "140640741402496": 294, "owher": 294, "0000042": [294, 1053], "bled": 294, "xfc": [294, 310, 1039, 1121], "xdfe": [294, 310, 1121], "gr\u045c\u043fe": [294, 310, 1121], "\u795d\u597d": [294, 310], "big5": [294, 310, 1121], "xaf": [294, 310], "xac": [294, 310], "xa6n": [294, 310], "unterschrift": 294, "illeg": [294, 431, 1121], "multibyt": [294, 377, 1121], "xe7": [294, 310, 1121], "xa5": [294, 310, 1121], "x9d": [294, 310, 1121], "xe5": [294, 310, 1121], "xbd": [294, 310, 1121], "incorpor": [296, 312, 1163], "tradition": [296, 312, 717, 909, 1030, 1163], "lexer": [296, 312, 1163], "aris": [296, 312, 480, 1163], "compili": [296, 312, 1163], "rant": [297, 313, 456, 763, 1131], "blacklist": [297, 313, 322, 455, 456, 461, 464, 763], "acquaint": [298, 301], "data_to_send": 299, "data_receiv": 299, "user_receiv": [299, 1104], "140048588115008": 299, "140048588341376": 299, "d_str": [302, 647], "uebertragen": 302, "d_str_receiv": 302, "d_receiv": 302, "ala": [305, 308, 494, 585, 866, 932, 972, 1136], "frozendict": [305, 306], "filesensor": 305, "sergei": 305, "test_acquisition_loop": 305, "test_mock_csv_sink": 305, "mymockedth": 305, "nonloc": [305, 1049], "millcelsiu": 305, "acquisition_loop_util": 305, "ont": 305, "necessarili": [305, 415, 445, 602, 761, 796, 810, 847, 927, 1025, 1143, 1150], "10m": [305, 972], "acquir": [305, 351, 741, 815, 957, 962, 971], "slower": [305, 439, 847], "packet": [305, 491, 804, 910, 933, 966], "transmit": 305, "datatim": 305, "read_measur": 305, "fourier": 305, "fft": 305, "011": [305, 316], "ifft": 305, "print_": 306, "0x7f0b165fdf00": 306, "dos_path": [306, 322, 337], "vernuenftigen": 306, "__class_getitem__": 306, "__iand__": 306, "__ior__": 306, "__isub__": 306, "__ixor__": 306, "difference_upd": 306, "intersection_upd": 306, "issubset": 306, "issuperset": 306, "symmetric_differ": 306, "symmetric_difference_upd": 306, "hallohallohallohallohallo": 306, "139685905188368": 306, "139685905188400": 306, "0x7f0b14487be0": 306, "fasschingbau": 306, "139685602274352": 306, "139685561461616": 306, "139685561690240": 306, "139685561316032": 306, "139685595970464": 306, "139685561151488": 306, "30000000": 306, "my_iter": 306, "my_print": [306, 1030], "my_arg": [306, 1005], "even_squar": [306, 316], "squares_fun": 306, "squares_gen": 306, "0x7f0aefb94f20": 306, "0x7f0aefb955b0": 306, "squares_list": 306, "foobar": 306, "expr_str": 306, "expr": [306, 400, 410, 870], "skiprow": 306, "hz2": 306, "hz3_5": 306, "000566": 306, "000729": 306, "132363": 306, "229977": 306, "260597": 306, "444942": 306, "385433": 306, "638212": 306, "502710": 306, "796519": 306, "936250": 306, "972326": 306, "974442": 306, "999992": 306, "995683": 306, "973719": 306, "999245": 306, "895850": 306, "985202": 306, "768778": 306, "arang": 306, "001": [306, 316, 391], "002": 306, "003": 306, "004": 306, "0x7f0ad44b8f70": 306, "0x7f0ad23371f0": 306, "aaarghhh": 307, "expresss": 307, "realist": [308, 926], "postpon": [308, 830], "coverag": [309, 1014], "hackin": 309, "mocksink": 309, "139680347735568": 310, "0x10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000": 310, "0xabc": 310, "convert_to_int": 310, "konvertieren": 310, "drei_int": 310, "fooabc": 310, "userlin": 310, "tjr": 310, "\u00f6rg": 310, "0xc3": [310, 316, 322], "enc_": 310, "enc_s_recvd": 310, "ipykernel_81650": 310, "1521975281": 310, "lg_joerg": 310, "concat": [310, 451, 1125], "linksunten": 310, "rechtsoben": 310, "meinsinussensor": 310, "sinvalu": 310, "ndarrai": [310, 1114, 1130], "0x7f67142f53c0": 310, "timeit": 315, "0x64": 316, "0b1100100": 316, "0b100101100": 316, "0b0": 316, "type_of_i": 316, "schade": 316, "worldhello": 316, "140572055569936": 316, "500001": 316, "499999999999999999999999": 316, "4999": 316, "my_round": 316, "diff_to_next": 316, "5001": 316, "500000001": 316, "str_i": 316, "int_i": 316, "float_i": 316, "nocheinelist": 316, "140571746172800": 316, "140571753417312": 316, "my_": 316, "2282548071841868421": 316, "oioi": 316, "ueberbleibsel": 316, "my_sum": 316, "doom": 316, "0x7f48e8543060": 316, "doedel": 316, "sdhcbdhcb": 316, "kjsdskbh": 316, "akjsdhvksb": 316, "item2": [316, 758, 759], "line_r": 316, "tyyi": 316, "mp_left": 316, "mp_top": 316, "mp_right": 316, "mp_righ": 316, "brenner": 316, "kupfer": 316, "koax": 316, "oberflaech": 316, "gasdues": 316, "fsc": 316, "zellentemp": 316, "raumtemp": 316, "vdc": 316, "077": 316, "090": [316, 667], "76220": 316, "77849": 316, "086": 316, "81216": 316, "99354": 316, "92051": 316, "035": [316, 980, 981], "82874": 316, "075": 316, "006": 316, "78855": 316, "098": 316, "036": 316, "007": 316, "76466": 316, "091": 316, "64736": 316, "65062": 316, "transform_t": 316, "transformed_timestamp": 316, "646126e": 316, "646130e": 316, "mpleft_1": 316, "mpleft_2": 316, "0x7f48ab74abf0": 316, "0x7f48a96648b0": 316, "noch_eine_vari": 316, "even_pr": 316, "0x7f48a9505b40": 316, "0x7f48a95250e0": 316, "squaredict": 316, "squaresset": 316, "bloat": [318, 319, 427, 747, 756, 762, 763, 1027], "ugh": 318, "urgh": 318, "nodiscard": 318, "fallthrough": [318, 981], "noexcept": [318, 470, 504, 675, 678, 680, 695, 697, 698, 700, 701, 702, 703, 717, 727, 741], "string_view": 318, "hierachi": 319, "conveni": [319, 374, 458, 836, 916, 981, 1001, 1113], "powercontrol": 319, "temperaturecontrol": 319, "get_target_temperatur": 319, "copyabl": [319, 570], "_run": 319, "kochtopftemperaturecontrol": 319, "get_current_temperatur": 319, "debt": [319, 493, 494, 495, 507, 508, 509], "erasur": [319, 747, 756, 762, 763], "align": [319, 360, 428, 437, 441, 446, 447, 669, 707, 746, 760, 762, 763, 908, 910, 977, 1053, 1159, 1162], "98f8b9be": 322, "ad8f": 322, "4023": 322, "81a2": 322, "d1dc67d0282c": 322, "python310": 322, "139783143835152": 322, "0x7f21cca24610": 322, "0b10000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000": 322, "1_000_000": 322, "3267": 322, "139782834179584": 322, "139783143835184": 322, "meng": 322, "m1": 322, "m2": 322, "leeres_set": 322, "d_revers": 322, "yaai": 322, "my_deppertes_rang": 322, "mdr": 322, "objeckt": 322, "139782799029888": 322, "139782798781696": 322, "139782798895952": 322, "139782798895792": 322, "139782798980096": 322, "schuld": 322, "300000": [322, 915, 1113], "compiled_pattern": 322, "__builtin__": 322, "139782799135312": 322, "0x7f21b81bbe60": 322, "getcwd": 322, "extlinux": 322, "favicon": 322, "grub2": 322, "opensc": 322, "packagekit": 322, "upow": 322, "authselect": 322, "bash_complet": 322, "binfmt": 322, "brltty": 322, "ceph": [322, 836], "chkconfig": 322, "cupshelp": 322, "dconf": 322, "debuginfod": 322, "depmod": [322, 788, 806], "dracut": 322, "egl": 322, "firewalld": [322, 848], "flexiblasrc": 322, "font": 322, "fwupd": [322, 848], "gcrypt": 322, "gdbinit": 322, "glvnd": 322, "groff": 322, "gss": 322, "gssproxi": 322, "hp": 322, "iproute2": 322, "iscsi": 322, "jvm": 322, "kdump": 322, "krb5": 322, "libblockdev": 322, "libibverb": 322, "libnl": 322, "libpap": 322, "libreport": 322, "libssh": 322, "libvirt": 322, "logrot": 322, "lvm": 322, "mcelog": 322, "mdevctl": 322, "modprob": [322, 788, 810, 811, 909, 914, 915, 916], "motd": 322, "cnf": 322, "ndctl": 322, "nftabl": 322, "openldap": 322, "ostre": 322, "pam": 322, "pkcs11": 322, "pkgconfig": 322, "plymouth": 322, "polkit": 322, "popt": 322, "ppp": 322, "puls": [322, 907, 1165, 1172], "rwtab": 322, "sasl2": 322, "selinux": 322, "sgml": 322, "skel": 322, "speech": 322, "sssd": 322, "statetab": 322, "sudoer": [322, 853], "swid": 322, "sysconfig": 322, "sysctl": 322, "terminfo": 322, "thermald": 322, "tmpfile": 322, "tpm2": 322, "udev": 322, "udisks2": 322, "vmware": [322, 849], "vpnc": 322, "vulkan": 322, "wireplumb": 322, "wpa_supplic": 322, "xdg": 322, "dir_color": 322, "lightbgcolor": 322, "grep_color": 322, "adjtim": 322, "bindresvport": 322, "brlapi": 322, "dleyna": 322, "fprintd": 322, "jwhoi": 322, "libaudit": 322, "libus": 322, "mailcap": 322, "man_db": 322, "mime": 322, "mke2f": 322, "nanorc": 322, "netconfig": 322, "papers": 322, "passwdqc": 322, "pinforc": 322, "sestatu": 322, "tcsd": 322, "usb_modeswitch": 322, "vconsol": 322, "wgetrc": 322, "xattr": 322, "crypttab": 322, "localtim": 322, "mtab": 322, "subuid": 322, "subgid": 322, "timid": 322, "vdpau_wrapp": 322, "asound": 322, "idmapd": 322, "mtool": 322, "rsyncd": 322, "anthi": 322, "trolltech": 322, "rygel": 322, "virc": 322, "swtpm": 322, "localca": 322, "swtpm_setup": 322, "uresourc": 322, "ethertyp": 322, "inputrc": 322, "printcap": 322, "csh": [322, 1143], "nfsmount": 322, "nsswitch": 322, "gshadow": 322, "shadow": [322, 845, 866, 942, 1049, 1086], "rhashrc": 322, "imagemagick": 322, "cshrc": 322, "gimp": 322, "updatedb": 322, "dl": 322, "containerd": [322, 998], "lftp": 322, "rc0": 322, "rc1": 322, "rc2": 322, "rc3": 322, "rc4": 322, "rc5": 322, "rc6": 322, "cpe": 322, "inittab": 322, "makedumpfil": 322, "sensors3": 322, "posixpath": 322, "kadjckk": 322, "xxddjh": 322, "blahblahblahblah": 322, "schuetzen": 323, "pathlib": [323, 1141], "regexen": 323, "commmandlin": 327, "omg": [327, 409, 769, 1142], "checker": [328, 333, 342], "horribl": 328, "gpio25": [328, 911], "embarass": 328, "winscp": 328, "cluster_ece19": [328, 329, 330, 331, 332, 333, 342, 763], "ece19": [328, 329, 330, 331, 333, 341, 342, 348, 349, 353, 763], "ece19_blinklicht": [328, 329, 330, 331, 332, 342, 763], "ece19_file_read": [328, 329, 330, 331, 332, 333, 342, 763], "ece19_blinklicht_oo": [329, 330, 331, 332, 342, 763], "ece19_blinklicht_unittest": [331, 332, 342, 763], "ece19_blinklicht_abc": [331, 332, 342, 763], "blinklicht": [332, 342, 347, 763], "1910420003": [333, 334], "corinna": [333, 334], "baumgartn": [333, 334, 351], "1910420002": [333, 334], "anzhelika": [333, 334, 342], "chernykh": [333, 334, 342, 351], "1910420005": [333, 334], "simon": [333, 334], "1910420006": [333, 334], "matthia": [333, 334, 351], "kappel": [333, 334, 351], "1810420009": [333, 334], "kolter": [333, 334], "1920420033": [333, 334], "kornberg": [333, 334, 351, 354], "1910420007": [333, 334], "lui": [333, 334, 351], "kraker": [333, 334, 351, 354], "1810420010": [333, 334], "leonid": [333, 334], "kudriaschov": [333, 334], "1910420008": [333, 334], "michael": [333, 334, 343, 344], "1910420010": [333, 334], "sonja": [333, 334, 351], "luka": [333, 334, 351, 354], "1910420013": [333, 334], "behnaz": [333, 334], "mehrabadi": [333, 334, 351], "1910420014": [333, 334], "moser": [333, 334, 351], "1910420015": [333, 334], "moritz": [333, 334], "nagelschmi": [333, 334, 351], "1910420018": [333, 334], "bianca": [333, 334], "reimer": [333, 334], "1910420020": [333, 334], "schmid": [333, 334, 351], "1910420021": [333, 334], "sch\u00fcttler": [333, 334], "1910420022": [333, 334], "schweiger": [333, 334, 351], "1910420024": [333, 334], "sinabel": [333, 334], "1910420025": [333, 334], "slovik": [333, 334, 351], "1910420026": [333, 334], "s\u00f6l": [333, 334, 351], "1910420027": [333, 334], "stangl": [333, 334, 351], "1910420028": [333, 334], "felix": [333, 334, 351], "themessl": [333, 334, 351], "1920420035": [333, 334], "astrid": [333, 334], "vogel": [333, 334, 351], "1810420029": [333, 334], "florian": [333, 334, 351], "zwittnigg": [333, 334], "matricul": [333, 1008], "studentdb": 333, "greatli": [333, 435, 1161], "matnr": 333, "rid": [333, 433, 474, 812, 829], "zuweisung": 334, "n1910420002": 334, "n1910420005": 334, "n1910420006": 334, "n1810420009": 334, "n1920420033": 334, "n1910420007": 334, "n1810420010": 334, "n1910420008": 334, "n1910420010": 334, "n1910420013": 334, "n1910420014": 334, "n1910420015": 334, "n1910420018": 334, "n1910420020": 334, "n1910420021": 334, "n1910420022": 334, "n1910420024": 334, "n1910420025": 334, "n1910420026": 334, "n1910420027": 334, "n1910420028": 334, "n1920420035": 334, "n1810420029": 334, "n666": 334, "5g": 334, "n19": 334, "10420013": 334, "n181": 334, "0420029": 334, "20210324": 335, "orig_si": 335, "__interactivehook__": 335, "_base_execut": 335, "_clear_type_cach": 335, "_current_fram": 335, "_debugmallocstat": 335, "_framework": 335, "_getfram": 335, "_git": 335, "_home": 335, "_xoption": 335, "flo": 336, "ted": 336, "rainer": 336, "rg": 336, "some_numb": [337, 1036], "auszuspucken": 337, "eine_neue_vari": 337, "klassisch": 337, "140705292246608": 337, "register_cont": 337, "0b11010001110101000": 337, "107432": 337, "erzwungen": 337, "0x1249ad2594c37ceb0b2784c4ce0bf38ace408e211a7caab24308a82e8f10000000000000000000000000": 337, "groesst": 337, "darstellbar": 337, "ein_string_der_aussieht_wie_ein_integ": 337, "ein_integ": 337, "ver\u00e4ndernd": 337, "say_hello": [338, 1025], "333333333333336": 338, "disclos": [339, 923], "formalit\u00e4ten": 341, "summer": [341, 342, 348], "daili": [341, 853], "organiz": 342, "shortcut": [342, 419, 870, 902, 1039, 1167], "baustein": [342, 347], "navigieren": [342, 347], "sitzen": [342, 347], "nat\u00fcrlich": [342, 347, 360, 1155], "verstehen": [342, 347, 360, 1168], "pr\u00fcfung": [342, 347], "trocken": [342, 347], "pfade": [342, 347, 1156, 1167], "symbolisch": [342, 347, 897], "verschieben": [342, 347], "textfil": [342, 347], "113ff": [342, 347], "ansatzweis": [342, 347], "durchgegangen": [342, 347], "133ff": [342, 347], "durchgemacht": [342, 347], "wirkungsweis": [342, 347], "verstanden": [342, 347, 1158], "verkn\u00fcpfen": [342, 347], "aufw\u00e4rmen": 342, "fremden": 342, "fragerund": 342, "tire": [342, 347], "transact": [342, 347], "wertebereich": 342, "vpn": [342, 917], "gitlab": 342, "sidenot": 342, "swoop": [342, 468], "hashbang": 342, "student1": 342, "student2": 342, "student3": 342, "undescript": 342, "contribut": [342, 984], "crlf": 342, "bang": [342, 462], "trial": [342, 987, 996, 1115], "systemkonzept": [343, 360, 1174], "adressr\u00e4um": [343, 360, 1165], "ger\u00e4t": 343, "destruktoren": [343, 1160], "containertempl": 343, "ausz\u00fcg": 343, "labor\u00fcbungen": 343, "absolventinnen": 343, "absolventen": 343, "entwicklungsplatform": 343, "zielplattform": [343, 1160], "dortigen": 343, "betriebssystemkonzept": [343, 1165, 1172], "verinnerlichen": 343, "eckpfeil": [343, 1160], "ansteuern": 343, "merkmal": 343, "nichttrivial": 343, "kerrisk": [343, 344], "handbook": [343, 344], "corbet": [343, 344, 1156], "allessandro": [343, 344], "rubini": [343, 344], "greg": [343, 344], "kroah": [343, 344], "hartman": [343, 344], "richard": [343, 344, 984], "steven": [343, 344, 439], "stephen": [343, 344], "rago": [343, 344], "brian": [343, 344, 363, 1158], "cookbook": [343, 344, 1148], "lutz": [343, 344], "integriert": 343, "\u00fcbungsanteil": 343, "informatik": 343, "einzelpr\u00fcfung": 343, "schriftlich": 343, "vorlesung": 343, "graduat": 344, "copver": 344, "warm": 345, "briefli": [346, 907], "filethermomet": 346, "ue": 348, "arduino": [348, 350, 907, 915, 1124], "homedirectori": [348, 898], "vbox": 348, "subnet": 348, "mgmt": 349, "64ff": 349, "readdir": [349, 761], "ow": [349, 493, 494, 495, 507, 508, 509], "readlink": 349, "tracker": [350, 351], "thermometers_docu": 350, "toctre": 350, "execconfig": 350, "wacom": [350, 412, 413], "schuettler": 351, "zwittnig": 351, "simu": 351, "kudriaschow": 351, "hysteres": 351, "impl": 351, "marku": 351, "stepper": 351, "motor": [351, 763, 906, 913], "wasserfal": 351, "influxdb": 351, "grafana": 351, "nachmittag": 351, "multitask": [352, 357, 740, 762, 763, 906, 947, 961, 967, 969, 970, 972, 1172], "latenc": [353, 357, 741, 763, 808, 906, 947, 967, 969], "gotcha": [353, 357, 642, 763, 906, 927, 947, 967, 969, 977], "type_from_ini": 353, "ece19error": 353, "configfil": [353, 1008], "prettier": [353, 584], "support_address": 353, "invalidtypeerror": 353, "newcom": [355, 356], "individualtrain": 359, "baden": 359, "w\u00fcrttemberg": 359, "beginnend": 359, "kursnotizen": 359, "qualivis": 359, "logbuch": 360, "kursteilnehmern": 360, "zustandegekommen": 360, "zukommen": 360, "potentiellen": 360, "zuk\u00fcnftigen": 360, "eindruck": [360, 1155], "zukommt": 360, "publizieren": 360, "einverst\u00e4ndni": 360, "richtlinien": 360, "thalheim": 360, "aachen": 360, "herzogenrath": 360, "mixtur": [360, 603], "gr\u00e4felf": 360, "wel": 360, "regensburg": 360, "pr\u00e4sent": 360, "inhous": [360, 1110, 1155], "linuxcampu": 360, "sch\u00f6nen": 360, "aktiv": 360, "mitgestaltet": 360, "kursabschluss": 360, "dran": 360, "provok": 360, "kam": 360, "anmeldung": 360, "zustand": 360, "freiheiten": 360, "gestanden": 360, "zusatzaufgab": 360, "gef\u00fchrt": [360, 1155], "einschr\u00e4nkungen": [360, 1173], "eintagesworkshop": 360, "leuten": 360, "kenn": 360, "einhergehend": 360, "l\u00f6sungen": [360, 1155, 1156], "darauffolgend": 360, "vertiefen": 360, "ausgew\u00e4hlten": 360, "bereichen": 360, "dbapi2": [360, 1120], "objektorientierung": 360, "r\u00e4umen": 360, "zweit\u00e4gig": 360, "gemisch": 360, "kursen": 360, "ziemlich": 360, "eingemacht": 360, "bestellt": 360, "neugier": 360, "leichtfertig": 360, "tief": 360, "hinabgestiegen": 360, "feiner": 360, "internen": 360, "forschungsprojekt": 360, "gebracht": 360, "diesen": [360, 1175], "zusammenschnitt": 360, "workshopcharakt": [360, 1179], "angegraut": 360, "bewusst": [360, 1177], "verwendung": 360, "wunderbar": 360, "automatisieren": 360, "zurerst": 360, "shellbenutzung": 360, "betriebssystemen": [360, 1167, 1172, 1174], "angeordnet": 360, "ge\u00fcbt": 360, "herk\u00f6mmlichen": [360, 1160], "auffrischung": 360, "eingerostet": 360, "neuigkeiten": 360, "querbeet": 360, "aufbauend": 360, "zuvor": 360, "grundkur": 360, "wichtigsten": 360, "neuerungen": [360, 1160], "tobak": 360, "lieblingsschulungen": 360, "basiswissen": 360, "hoeri": 360, "bastelwoch": 360, "betrachtung": 360, "realtimef\u00e4higkeit": 360, "xenomai": [360, 1156], "fad": 360, "auszugsweis": 360, "richtig": [360, 1175], "n\u00e4chten": 360, "schulungstagen": 360, "kurzweil": 360, "beschert": 360, "einf\u00fchrungscharakt": 360, "kernelprogrammierung": 360, "auftrag": 360, "hardwarenah": [360, 1165, 1172], "ausgew\u00e4ht": 360, "kernelstruktur": 360, "crosscompil": 360, "newer": [361, 764, 927, 1000, 1164], "msys2": 362, "5595": 362, "17619": 362, "pacman": 362, "mingw64": 362, "w64": 362, "x64": 362, "medium": [362, 452, 729, 982, 1178], "swlh": 362, "2b2e66352456": 362, "kernighan": [363, 1158, 1159], "denni": [363, 403, 602, 1158], "ritchi": [363, 403, 602, 1158, 1159], "ansi": 363, "iec": [363, 568], "9899": 363, "c11": 363, "pdp": [363, 377], "ken": 363, "thompson": 363, "tabul": [364, 372], "celsiu": [365, 366, 468, 479, 510, 914, 916], "brutal": [365, 384, 388, 409, 667, 684, 970], "ordinari": [365, 585, 639, 689, 794, 802, 873, 950, 1030, 1037], "everytim": [367, 385, 914], "ascend": [368, 1130], "unread": [369, 387, 444, 730, 985, 986, 1006, 1050], "putchar": 371, "caution": [371, 577, 836, 910], "obscur": [371, 379, 524, 645, 827, 936, 978], "alright": [371, 397], "inequ": [371, 585], "word1": [372, 544], "word2": [372, 544], "word3": [372, 544], "word4": 372, "word5": 372, "unixen": [372, 761, 978, 1143, 1156], "nonsens": [373, 391, 410, 570, 574, 577, 667, 726, 873, 968, 1005, 1114, 1153], "illustr": [373, 1008], "countchar": 373, "nwhite": 373, "nother": 373, "stat": [373, 761, 932, 940, 941, 942, 943, 968, 974, 977, 981, 1141], "nonprint": [374, 402], "decis": [374, 449, 529, 576, 592, 726, 907, 970, 1010, 1115, 1164], "xxxxxxxxxxxxxxxxxxxxxxxxx": 374, "xxxxxxxxxxxxxxxxxx": 374, "subroutin": [375, 443], "outer": [375, 402], "wimplicit": [375, 778], "hygien": 375, "dear": 375, "assembl": [377, 984], "contradict": [377, 672], "640k": 377, "a_str": 377, "strncpy": 377, "maxlen": [377, 378], "strcat": 377, "strncat": 377, "strcmp": [377, 678, 679], "strncmp": 377, "another_str": 377, "nonsensi": 378, "read_lin": 378, "longest": 378, "confin": [379, 1008], "cluster_c": [380, 395, 404, 411, 417, 421, 424, 428, 437, 441, 446, 447, 473, 487, 515, 516, 517, 518, 519, 520, 521, 522, 525, 532, 534, 567, 575, 590, 593, 596, 612, 618, 622, 631, 634, 635, 640, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 669, 676, 707, 723, 732, 740, 748, 760, 762, 763], "cluster_c_introduct": [380, 395, 404, 411, 417, 421, 424, 428, 437, 441, 446, 447, 473, 487, 515, 516, 517, 518, 519, 520, 521, 522, 525, 532, 534, 567, 575, 590, 593, 596, 612, 618, 622, 631, 634, 635, 640, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 669, 676, 707, 723, 732, 740, 748, 760, 762, 763], "c_introduction_exercise_fahrenheit_float": [380, 395, 404, 411, 417, 421, 424, 428, 437, 441, 446, 447, 669, 707, 760, 762, 763], "c_introduction_variables_and_arithmetic_express": [380, 395, 404, 411, 417, 421, 424, 428, 437, 441, 446, 447, 669, 707, 760, 762, 763], "c_introduction_exercise_histogram": [380, 395, 404, 411, 417, 421, 424, 428, 437, 441, 446, 447, 669, 707, 760, 762, 763], "c_introduction_arrai": [380, 395, 404, 411, 417, 421, 424, 428, 437, 441, 446, 447, 669, 707, 760, 762, 763], "c_introduction_character_arrai": [380, 395, 404, 411, 417, 421, 424, 428, 437, 441, 446, 447, 669, 707, 760, 762, 763], "c_introduction_exercise_power_declar": [380, 395, 404, 411, 417, 421, 424, 428, 437, 441, 446, 447, 669, 707, 760, 762, 763], "c_introduction_exercise_fahrenheit_cpp": [380, 395, 404, 411, 417, 421, 424, 428, 437, 441, 446, 447, 669, 707, 760, 762, 763], "c_introduction_cpp_symbolic_const": [380, 395, 404, 411, 417, 421, 424, 428, 437, 441, 446, 447, 669, 707, 760, 762, 763], "c_introduction_hello_world": [380, 395, 404, 411, 417, 421, 424, 428, 437, 441, 446, 447, 669, 707, 760, 762, 763], "c_introduction_external_variables_and_scop": [380, 395, 404, 411, 417, 421, 424, 428, 437, 441, 446, 447, 669, 707, 760, 762, 763], "c_introduction_exercise_string_read_lin": [380, 395, 404, 411, 417, 421, 424, 428, 437, 441, 446, 447, 669, 707, 760, 762, 763], "c_introduction_introduct": [380, 395, 404, 411, 417, 421, 424, 428, 437, 441, 446, 447, 669, 707, 760, 762, 763], "c_introduction_exercise_fahrenheit_for": [380, 395, 404, 411, 417, 421, 424, 428, 437, 441, 446, 447, 669, 707, 760, 762, 763], "c_introduction_for_loop": [380, 395, 404, 411, 417, 421, 424, 428, 437, 441, 446, 447, 669, 707, 760, 762, 763], "c_introduction_exercise_wc": [380, 395, 404, 411, 417, 421, 424, 428, 437, 441, 446, 447, 669, 707, 760, 762, 763], "c_introduction_character_io": [380, 395, 404, 411, 417, 421, 424, 428, 437, 441, 446, 447, 669, 707, 760, 762, 763], "c_introduction_funct": [380, 395, 404, 411, 417, 421, 424, 428, 437, 441, 446, 447, 669, 707, 760, 762, 763], "c_introduction_instal": [380, 395, 404, 411, 417, 421, 424, 428, 437, 441, 446, 447, 473, 487, 515, 516, 517, 518, 519, 520, 521, 522, 525, 532, 534, 567, 575, 590, 593, 596, 612, 618, 622, 631, 634, 635, 640, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 669, 676, 707, 723, 732, 740, 748, 760, 762, 763], "z0": 382, "abbrevi": [383, 684, 687, 689, 693, 747, 749, 751, 752, 753], "char_bit": 383, "x86": [383, 462, 984, 1001], "stdint": [383, 914, 934, 977], "int8_t": 383, "uint8_t": [383, 481, 496, 668, 914], "int16_t": 383, "int32_t": 383, "uint32_t": 383, "int64_t": 383, "uint64_t": [113, 383, 420, 526, 696, 697, 731, 934, 977], "052": 384, "0x2a": 384, "0b010010": 384, "42l": 384, "456f": 384, "456l": 384, "x61": 384, "alert": [384, 427, 433, 727, 1039, 1047, 1056, 1058], "backspac": [384, 870, 1052], "formfe": 384, "ooo": 384, "octal": [384, 1039, 1052, 1053], "xhh": 384, "some_funct": 385, "some_vari": 385, "1415926535897932": 385, "some_nonsensical_numb": 385, "legal": [387, 431, 577, 675, 940, 982], "truth": [387, 937, 963], "eleg": [387, 730], "blank": 387, "num_lf": 387, "narrow": [388, 1115], "4294967295u": 388, "wsign": [388, 430], "wconvers": 388, "4294967296u": 388, "unscrupul": 388, "0x100000000": 388, "weaker": 388, "stronger": [388, 1020, 1127], "1l": 388, "1u": 388, "losslessli": 388, "1ul": 388, "wtype": [388, 430], "wextra": [388, 430], "pedant": 388, "anti": [388, 815, 952], "sloppi": 388, "advic": [388, 1039], "immens": [388, 982], "hazard": 388, "messi": [388, 459], "subtl": [389, 409, 432, 524, 1033], "copy_and_omit": 389, "0x4b": 391, "01001011": 391, "0x0c": 391, "00001100": 391, "0x08": 391, "00001000": 391, "0x4f": 391, "01001111": 391, "0x47": 391, "01000111": 391, "0x03": 391, "00000011": 391, "0x80": 391, "00110000": 391, "0x4c": [391, 800], "01001100": 391, "0xb3": 391, "10110011": 391, "arr": [392, 671], "unari": [394, 1039], "strongest": [394, 1039], "intuit": [394, 442], "danger": [394, 412, 570, 810, 960, 981, 1048, 1161], "decrement": [395, 404, 411, 415, 417, 421, 424, 428, 437, 441, 446, 447, 620, 669, 707, 726, 760, 762, 763, 769], "cluster_c_types_operators_express": [395, 404, 411, 417, 421, 424, 428, 437, 441, 446, 447, 669, 707, 760, 762, 763], "c_types_operators_expressions_relational_logical_oper": [395, 404, 411, 417, 421, 424, 428, 437, 441, 446, 447, 669, 707, 760, 762, 763], "c_types_operators_expressions_arithmetic_oper": [395, 404, 411, 417, 421, 424, 428, 437, 441, 446, 447, 669, 707, 760, 762, 763], "c_types_operators_expressions_variable_nam": [395, 404, 411, 417, 421, 424, 428, 437, 441, 446, 447, 669, 707, 760, 762, 763], "c_types_operators_expressions_introduct": [395, 404, 411, 417, 421, 424, 428, 437, 441, 446, 447, 669, 707, 760, 762, 763], "c_types_operators_expressions_datatypes_s": [395, 404, 411, 417, 421, 424, 428, 437, 441, 446, 447, 669, 707, 760, 762, 763], "c_types_operators_expressions_declar": [395, 404, 411, 417, 421, 424, 428, 437, 441, 446, 447, 669, 707, 760, 762, 763], "c_types_operators_expressions_const": [395, 404, 411, 417, 421, 424, 428, 437, 441, 446, 447, 669, 707, 760, 762, 763], "c_types_operators_expressions_assignment_operators_and_express": [395, 404, 411, 417, 421, 424, 428, 437, 441, 446, 447, 669, 707, 760, 762, 763], "c_types_operators_expressions_bit_oper": [395, 404, 411, 417, 421, 424, 428, 437, 441, 446, 447, 669, 707, 760, 762, 763], "c_types_operators_expressions_increment_decrement_oper": [395, 404, 411, 417, 421, 424, 428, 437, 441, 446, 447, 669, 707, 760, 762, 763], "c_types_operators_expressions_type_convers": [395, 404, 411, 417, 421, 424, 428, 437, 441, 446, 447, 669, 707, 760, 762, 763], "c_types_operators_expressions_exercise_string_reduc": [395, 404, 411, 417, 421, 424, 428, 437, 441, 446, 447, 669, 707, 760, 762, 763], "c_types_operators_expressions_conditional_express": [395, 404, 411, 417, 421, 424, 428, 437, 441, 446, 447, 669, 707, 760, 762, 763], "c_types_operators_expressions_precedence_and_order_of_evalu": [395, 404, 411, 417, 421, 424, 428, 437, 441, 446, 447, 669, 707, 760, 762, 763], "doabl": 400, "cond": [400, 957], "precedenceof": 400, "innermost": [402, 639, 644], "concern": [402, 403, 451, 769, 846, 916, 1007, 1163], "edsger": 403, "dijkstra": 403, "plea": 403, "manifold": 403, "judici": [403, 439, 1163], "do_complicated_stuff": 403, "cleanup_mess": 403, "cluster_c_program_flow": [404, 411, 417, 421, 424, 428, 437, 441, 446, 447, 669, 707, 760, 762, 763], "c_program_flow_switch": [404, 411, 417, 421, 424, 428, 437, 441, 446, 447, 669, 707, 760, 762, 763], "c_program_flow_else_if": [404, 411, 417, 421, 424, 428, 437, 441, 446, 447, 669, 707, 760, 762, 763], "c_program_flow_if_els": [404, 411, 417, 421, 424, 428, 437, 441, 446, 447, 669, 707, 760, 762, 763], "c_program_flow_loops_while_and_for": [404, 411, 417, 421, 424, 428, 437, 441, 446, 447, 669, 707, 760, 762, 763], "c_program_flow_goto_and_label": [404, 411, 417, 421, 424, 428, 437, 441, 446, 447, 669, 707, 760, 762, 763], "c_program_flow_break_and_continu": [404, 411, 417, 421, 424, 428, 437, 441, 446, 447, 669, 707, 760, 762, 763], "c_program_flow_statements_and_block": [404, 411, 417, 421, 424, 428, 437, 441, 446, 447, 669, 707, 760, 762, 763], "c_program_flow_loops_do_whil": [404, 411, 417, 421, 424, 428, 437, 441, 446, 447, 669, 707, 760, 762, 763], "vice": 405, "versa": 405, "g_lobal": [406, 407, 409], "print_g": [406, 407], "linkag": 407, "percept": [407, 846], "disciplin": [407, 429, 439, 449, 1114], "convent": [407, 451, 826, 870, 892, 930, 1007, 1022], "ifndef": [407, 409, 410, 452, 459, 553, 571, 577, 579, 580, 678, 679, 725, 984, 1000, 1002], "g_h": 407, "programx": 408, "cautious": 409, "c99": [409, 1159], "slow": [409, 440, 444, 620, 916, 927], "have_c_h": 409, "clash": [409, 432], "include_onc": 409, "newbi": [409, 671], "hurdl": 409, "ifdef": [410, 467, 620], "defined": 410, "unequ": 410, "tempt": 410, "horror": 410, "do_much": 410, "do_thi": [410, 731], "do_that": [410, 731], "do_less": 410, "__pragma": 410, "4127": 410, "warn_if": 410, "statem": 410, "function_help": 410, "function_quit": 410, "function_": 410, "inject_viru": 410, "doomed_process": 410, "win32": [410, 1177], "foreign_mem": 410, "virtualallocex": 410, "mem_commit": 410, "page_execut": 410, "page_readwrit": 410, "infect": 410, "__file__": [410, 1008, 1141], "__line__": 410, "smell": [410, 464], "pest": 410, "cluster_c_functions_and_program_structur": [411, 417, 421, 424, 428, 437, 441, 446, 447, 669, 707, 760, 762, 763], "c_functions_and_program_structure_c_preprocessor": [411, 417, 421, 424, 428, 437, 441, 446, 447, 669, 707, 760, 762, 763], "c_functions_and_program_structure_static_vari": [411, 417, 421, 424, 428, 437, 441, 446, 447, 669, 707, 760, 762, 763], "c_functions_and_program_structure_header_fil": [411, 417, 421, 424, 428, 437, 441, 446, 447, 669, 707, 760, 762, 763], "c_functions_and_program_structure_bas": [411, 417, 421, 424, 428, 437, 441, 446, 447, 669, 707, 760, 762, 763], "c_functions_and_program_structure_c_preprocessor_advanc": [411, 417, 421, 424, 428, 437, 441, 446, 447, 669, 707, 760, 762, 763], "c_functions_and_program_structure_external_vari": [411, 417, 421, 424, 428, 437, 441, 446, 447, 669, 707, 760, 762, 763], "dereferenc": [412, 680, 715, 719], "35129": 412, "calle": [413, 443, 445, 582, 1003], "tablet": 413, "excang": 414, "pa1": 415, "pa2": 415, "cluster_c_pointers_and_arrai": [417, 421, 424, 428, 437, 441, 446, 447, 669, 707, 760, 762, 763], "c_pointers_and_arrays_pointers_and_arrai": [417, 421, 424, 428, 437, 441, 446, 447, 669, 707, 760, 762, 763], "c_pointers_and_arrays_exercise_swap": [417, 421, 424, 428, 437, 441, 446, 447, 669, 707, 760, 762, 763], "c_pointers_and_arrays_pointers_and_function_argu": [417, 421, 424, 428, 437, 441, 446, 447, 669, 707, 760, 762, 763], "c_pointers_and_arrays_pointers_and_address": [417, 421, 424, 428, 437, 441, 446, 447, 669, 707, 760, 762, 763], "c_pointers_and_arrays_command_line_argu": [417, 421, 424, 428, 437, 441, 446, 447, 669, 707, 760, 762, 763], "scalar": [418, 433, 1056], "fantasi": [418, 907, 909], "p1": [418, 523, 569, 571, 577, 583, 585, 587, 588, 672], "p2": [418, 523, 569, 571, 577, 583, 585, 588, 672], "laid": 418, "makepoint": 419, "addpoint": [419, 435], "addtopoint": 419, "pid_t": [420, 953, 971, 982], "cluster_c_structur": [421, 424, 428, 437, 441, 446, 447, 669, 707, 760, 762, 763], "c_structures_bas": [421, 424, 428, 437, 441, 446, 447, 669, 707, 760, 762, 763], "c_structures_structures_and_funct": [421, 424, 428, 437, 441, 446, 447, 669, 707, 760, 762, 763], "c_structures_typedef": [421, 424, 428, 437, 441, 446, 447, 669, 707, 760, 762, 763], "dealloc": [422, 560, 712, 771, 798, 804], "ptr": [422, 545, 677, 725, 726, 727, 728], "do_something_with": [422, 670, 716], "list_init": 423, "list_destroi": 423, "list_insert": 423, "list_remov": 423, "list_count": 423, "list_print": 423, "keylen": 423, "cluster_c_memori": [424, 428, 437, 441, 446, 447, 669, 707, 760, 762, 763], "c_memory_exercise_linked_list": [424, 428, 437, 441, 446, 447, 669, 707, 760, 762, 763], "c_memory_malloc": [424, 428, 437, 441, 446, 447, 669, 707, 760, 762, 763], "corollari": [425, 427, 733, 1016], "reorder": [425, 741, 794], "use_count": [425, 426, 726, 728, 758], "use_resourc": [425, 426], "do_something_with_shared_resourc": [425, 426], "conceiv": [425, 1033], "completion_flag": 425, "out_word": 425, "in_word": 425, "unforese": 425, "volatil": [426, 428, 437, 441, 446, 447, 669, 707, 735, 760, 762, 763, 820, 982, 1159, 1162], "instr": [426, 444, 955, 1018], "pthread_mutex_t": [426, 739, 802, 955, 957], "use_count_mutex": 426, "pthread_mutex_initi": [426, 955], "pthread_mutex_lock": [426, 739, 955, 957], "pthread_mutex_unlock": [426, 739, 955, 957], "expens": [426, 433, 569, 582, 585, 675, 680, 716, 717, 726, 815, 952, 1161], "fetch_and_add": [426, 955], "__sync_fetch_and_add": [426, 736, 955, 956], "sheer": [426, 572], "neglig": 427, "penalti": 427, "memcpi": 427, "freeli": 427, "rearrang": [427, 619], "anim": 427, "pragma": [113, 427, 468, 470, 474, 479, 491, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 526, 584, 601, 604, 698, 747, 749, 751, 752, 753, 754, 761], "textit": 427, "bogu": [427, 439, 580, 678, 679, 705, 916, 982], "__pad0": 427, "__pad1": 427, "misalign": 427, "intrins": [428, 437, 441, 446, 447, 669, 707, 760, 762, 763], "cluster_c_advanced_language_featur": [428, 437, 441, 446, 447, 669, 707, 760, 762, 763], "c_advanced_language_features_atom": [428, 437, 441, 446, 447, 669, 707, 760, 762, 763], "c_advanced_language_features_volatil": [428, 437, 441, 446, 447, 669, 707, 760, 762, 763], "c_advanced_language_features_align": [428, 437, 441, 446, 447, 669, 707, 760, 762, 763], "matur": 429, "odditi": 429, "rectifi": 429, "fortran": 429, "lazy": [429, 710], "meant": [429, 981], "shortcom": [429, 494, 655, 660, 663], "holidai": 429, "handcraft": [429, 477, 1043], "clariti": [430, 434, 939], "baud": 431, "idl": 431, "writing_request": 431, "reading_respons": 431, "wait_retri": 431, "protocol_engin": [431, 435], "deduc": [431, 667, 670, 695], "obligatori": 431, "anyhow": 431, "forgot": 431, "unambigu": [431, 667], "protocol_error": 431, "eat": [431, 439], "unintend": 433, "wwrite": 433, "max_bucket": 433, "unus": [113, 433, 468, 523, 525, 569, 573, 584, 623, 624, 677, 788, 847, 963, 977], "pj": 433, "pointe": 433, "ppi": 433, "height": [434, 477, 586], "beman": 434, "daw": 434, "obfusc": 435, "ssize_t": [435, 527, 769, 928, 932, 933, 934, 936, 940, 941, 942, 943, 946, 948, 951, 974, 977, 978, 981], "send_fram": 435, "eng": 435, "send_sum": 435, "v_int32": 435, "spectacular": 435, "adequ": 435, "unix_error": 435, "app_error": 435, "unix_error_cr": 435, "unix_error_ok": 435, "uerr": 435, "app_error_cr": 435, "app_os_error": 435, "impact": [435, 439], "enhanc": [435, 843], "beyond": [436, 936], "consider": [436, 870], "slowdown": 436, "0x400552": 436, "0x51bb072": 436, "0x4c28c6d": 436, "vg_replace_malloc": [436, 577], "0x400545": 436, "loss": [436, 918], "rec": [436, 1098, 1100], "uncov": 436, "readabilti": [437, 441, 446, 447, 669, 707, 760, 762, 763], "explict": [437, 441, 446, 447, 763], "cluster_c_program_san": [437, 441, 446, 447, 669, 707, 760, 762, 763], "c_program_sanity_stat": [437, 441, 446, 447, 763], "c_program_sanity_discrete_valu": [437, 441, 446, 447, 669, 707, 760, 762, 763], "c_program_sanity_integral_typ": [437, 441, 446, 447, 669, 707, 760, 762, 763], "c_program_sanity_introduct": [437, 441, 446, 447, 669, 707, 760, 762, 763], "c_program_sanity_explicit_type_safeti": [437, 441, 446, 447, 763], "c_program_sanity_struct_initi": [437, 441, 446, 447, 763], "c_program_sanity_valgrind": [437, 441, 446, 447, 763], "c_program_sanity_const": [437, 441, 446, 447, 763], "hotspot": [438, 442], "checksum": [438, 918, 966], "externel": 438, "sha1sum": [438, 966, 969, 972], "8g": 438, "0m38": 438, "0m3": 438, "0m0": 438, "perceiv": 438, "daze": 438, "mp3": 438, "018": 438, "mult": 439, "rumour": 439, "uncondit": 439, "finlin": 439, "o3": [439, 454, 761, 1150], "heurist": 439, "o1": 439, "magnitud": [439, 440], "overus": [439, 481, 1021, 1161], "spill": 439, "fira": 439, "rtfm": [439, 1054, 1148], "compromis": [439, 449, 477], "transit": [439, 464], "fmove": 439, "outweigh": 439, "thrash": [439, 969, 1159], "understood": [439, 449, 526, 731, 810, 1163], "misnom": [439, 1058], "o0": [439, 454], "unagress": 439, "chew": [439, 741], "agress": 439, "muchnik": 439, "levin": 439, "nearbi": 440, "bounc": [440, 829], "4x3": 440, "rectangular": 440, "cluster_c_perform": [441, 446, 447, 763], "c_performance_computebound": [441, 446, 447, 763], "c_performance_introduct": [441, 446, 447, 763], "c_performance_memori": [441, 446, 447, 763], "bust": 442, "haul": 442, "cheater": 442, "fallibl": 442, "supplement": 442, "gprof": [442, 444, 445, 446, 447, 763, 1159], "callgrind": [442, 445, 446, 447, 763, 1159], "oprofil": [442, 446, 447, 763, 1159], "gmon": 443, "spot": 443, "38000000": 443, "find_dupl": [443, 445], "criterion": [443, 610], "37000000": 443, "luck": [443, 914, 1005, 1007], "gprof2dot": 443, "tjpeg": 443, "predict": [444, 445, 1111, 1113, 1114], "sluggishli": 444, "16761": 444, "callgrind_annot": 444, "atstart": 444, "callgrind_control": 444, "nmi": 445, "ophelp": 445, "operf": 445, "oprofile_data": 445, "opreport": 445, "opannot": 445, "oparch": 445, "opgprof": 445, "Their": 445, "2085": 445, "2505": 445, "maskabl": 445, "callgraph": 445, "pxe": 445, "vmlinux": [445, 785], "debuginfo": 445, "userland": [445, 769], "routin": [445, 451, 556, 761, 802, 808, 813, 934, 970, 1002, 1102, 1104], "analyz": 445, "jcf": [445, 810, 836], "jxf": [445, 810, 836], "gdf": 445, "op2calltre": 445, "oprof": 445, "applet": 445, "viewabl": [445, 458], "kcachegrind": 445, "cluster_c_profil": [446, 447, 763], "c_profiling_introduct": [446, 447, 763], "c_profiling_gprof": [446, 447, 763], "c_profiling_callgrind": [446, 447, 763], "c_profiling_oprofil": [446, 447, 763], "worker": [449, 675], "consensu": [449, 472], "consent": [449, 1028], "male": [449, 1070], "prcess": 449, "obei": [449, 451], "liskov": [113, 449], "antipattern": [449, 477], "gonna": 449, "indecis": [449, 1164], "road": 449, "manufactur": [449, 916], "pcb": [449, 914], "bom": 449, "requiremenet": 449, "yyyi": 450, "testabl": [450, 1142], "yagni": 450, "fraunhof": 450, "make_categori": 451, "outputfil": 451, "to_datetim": 451, "make_float": 451, "orpheum": 451, "goingout": 451, "hervi": 451, "sport": 451, "card": [451, 810, 839, 874, 876, 881, 882], "to_csv": 451, "read_from_csv": 451, "write_to_csv": 451, "clean_data": 451, "csvname_or_list_thereof": 451, "workaround": [451, 668, 671, 783, 1141], "read_from_dir": 451, "re_yyyy_mm": 451, "inputdir": 451, "libreoffic": 451, "monolith": [451, 984], "factor": [451, 778, 779, 810], "test_data_clean": 451, "test_make_float": 451, "1999": 451, "test_date_convers": 451, "at666666666666666666": 451, "000009173": 451, "bawaatwwxxx": 451, "at211420020010848041": 451, "ausgleich": 451, "firmenkonto": 451, "test_input": 451, "read_from_csv_singl": 451, "read_from_csv_multipl": 451, "deliber": 451, "test_read_csv_singl": 451, "000009284": 451, "2371": 451, "000009283": 451, "at613400000005077508": 451, "world4you": 451, "writelin": [451, 1058, 1103, 1105], "test_read_csv_multipl": 451, "lines_2023_02": 451, "lines_2023_01": 451, "000009229": 451, "4111": 451, "bp": 451, "tankstel": 451, "000009228": 451, "at081400086210003454": 451, "\u00f6sterreichisch": 451, "gesundheitskass": 451, "_write_csv": 451, "read_from_csv_dir": 451, "test_read_csv_dir": 451, "testutil": 451, "write_csv": 451, "test_category_csv": 451, "000009168": 451, "000009169": 451, "2801": 451, "strassenbahn": 451, "eas": [451, 1120], "finer": 451, "refact": 451, "str_categori": 451, "cardunknown": 451, "flughafen": 451, "wien": 451, "test_more_of_it": 451, "000009153": 451, "parken": 451, "fl": 451, "inputread": 451, "recursivecsvinputread": 451, "singlecsvinputread": 451, "compositeinputread": 451, "input_abc": 451, "abstractmethod": [451, 1020], "multiplecsvinputread": 451, "test_input_abc": 451, "cmake_minimum_requir": [452, 986, 1150], "identif": [452, 914, 985, 986], "abi": [452, 462, 788, 790, 930, 985, 986], "hello_nam": [452, 458], "hello_name_h": 452, "democonfig": [453, 455, 459, 460, 461], "libhello": [453, 454, 455, 457, 460, 463], "configure_fil": 453, "demo_version_major": 453, "demo_version_minor": 453, "cmake_current_binary_dir": 453, "demo_major": 453, "demo_minor": 453, "include_directori": [453, 464], "overkil": 453, "cmake_cxx_standard": [454, 1150], "dndebug": 454, "cmake_": 454, "_compiler_id": 454, "IF": [454, 459, 460, 461], "g3": 454, "strequal": 454, "cmake_c_compiler_id": 454, "cmake_c_flag": [454, 1150], "cmake_cxx_compiler_id": 454, "cmake_cxx_flag": [454, 1150], "howdi": [454, 578, 709, 711, 712, 850, 854, 940, 941, 943, 1025], "bullshithowdi": 454, "fatal_error": 454, "send_error": 454, "attract": [454, 671], "findsqlite3": 455, "sqlite3_include_dir": 455, "sqlite3_librari": 455, "typo": [455, 1021, 1022], "sqlite3_vers": 455, "sqlite3_found": 455, "olden": 455, "0x00007f76ae011000": 455, "libz": 455, "0x00007f76adef7000": 455, "cluster_cmak": [456, 763], "cmake_configure_fil": [456, 763], "cmake_cxx_and_r": [456, 763], "cmake_structur": [456, 763], "cmake_instal": [456, 763, 985, 986], "cmake_bas": [456, 763], "cmake_optional_code_approach_2": [456, 763], "cmake_optional_code_approach_1": [456, 763], "cmake_optional_code_problem": [456, 763], "cmake_shared_libraries_preview": [456, 763], "cmake_librari": [456, 763], "cmake_targets_properti": [456, 763], "cmake_test": [456, 763], "cmake_external_depend": [456, 763], "cmake_install_prefix": 457, "set_properti": [457, 462], "dbuild_shared_lib": [457, 462], "ON": [457, 460, 461, 462, 516, 517, 522, 968], "readelf": [457, 984, 996, 1001], "0x0000000000000001": [457, 1001], "0x000000000000001d": 457, "0x00007f773aefe000": 457, "ldconfig": [457, 1156], "sonam": [457, 462], "add_librari": [458, 460, 462, 464, 510, 555, 564, 985, 986], "0x29": 458, "collect2": [458, 644, 1001], "acycl": [458, 986, 1000], "dag": 458, "jul": [458, 462], "tpng": [458, 986], "descend": [459, 460, 461, 463, 510, 871, 978], "use_blacklist": [459, 460], "macro_use_blacklist": [459, 461], "demo_use_blacklist": [459, 460], "namegreet": 459, "_blacklist": 459, "implic": [459, 794, 866, 927], "sayhello": 459, "is_forbidden": 459, "_name": [459, 500, 503, 507, 508, 509], "goodby": [459, 982], "use_backlist": 459, "condition": 459, "duse_blacklist": [460, 461], "target_compile_opt": [460, 464], "manyfold": 461, "target_compile_definit": [461, 464], "lightli": 461, "symlink": [462, 761, 914, 1143, 1167], "build_shared_lib": 462, "qf": 462, "libboost_regex": 462, "lrwxrwxrwx": [462, 892, 914, 915, 916, 950, 984], "rwxr": [462, 855, 857, 858, 867, 984, 996, 1035], "289264": 462, "temporarili": [462, 971, 984], "project_vers": 462, "makefile2": 463, "compile_definit": 464, "dname": 464, "compile_opt": 464, "widest": 464, "asymmetr": 464, "enable_test": 465, "toplavel": 465, "set_tests_properti": [465, 1147, 1150], "pass_regular_express": 465, "ctest": 465, "cdash": 465, "kitwar": 465, "socialdb": [466, 469, 473, 498, 504], "i2csensor_vendor1": [467, 496], "0x37": 467, "suddenli": [467, 810, 850, 1116], "vener": [467, 488, 570, 585, 713], "damag": [467, 1130], "slip": 467, "cascad": 467, "i2csensor": [467, 481, 496], "create_i2c_sensor": 467, "i2csensorfactori": 467, "speak": [467, 897, 915, 1012, 1037], "vendor1": [467, 496], "abstract_factory_suit": 467, "instantiate_vendor1": 467, "i2csensorfactory_vendor1": 467, "i2c_factory_vendor1": 467, "i2c_sensor": 467, "assert_tru": [467, 522, 523, 528, 533, 535, 540, 569, 571, 586, 587, 588, 589, 672, 726, 727, 743, 761, 1148], "dynamic_cast": [467, 494, 508], "a_sensor": [467, 677], "vendor2": [467, 496], "instantiate_vendor2": 467, "i2csensorfactory_vendor2": [467, 496], "i2c_factory_vendor2": 467, "i2csensor_vendor2": [467, 496], "pu": 467, "tinto": 467, "fahrenheitsensor": [468, 497], "get_temperature_f": [468, 497], "formula": 468, "adapter_suit": 468, "constantfahrenheitsensor": 468, "assert_float_eq": [468, 471, 472, 474, 491, 492, 518, 519, 520, 521, 523, 526, 527, 538, 569, 571, 588, 674, 677, 743], "fahrenheitsensor_adapt": [468, 497], "adapter__is_a__sensor": 468, "adapter__knows__an_a_sensor": 468, "variablefahrenheitsensor": 468, "initial_valu": 468, "_valu": [468, 503], "change_temperatur": [468, 518, 526, 527], "adapter__definitely_knows__a_sensor__hel": 468, "multitud": 469, "socialdbcommand": [469, 498], "command_suit": 469, "2345110695": [469, 628], "socialdbinsertcommand": [469, 498], "3456060486": [469, 628], "insert_by_bas": 469, "socialdbfindcommand": [469, 498], "socialdbdropcommand": [469, 498], "notfound": [469, 470, 498, 660, 661, 662], "assert_throw": [469, 476, 761], "notinsert": [469, 470, 498], "bulkinsert": 469, "bulk_insert": 469, "socialdbbulkinsertcommand": [469, 498], "bic": 469, "std_initializer_list": 469, "bulk_insert__std_initializer_list": 469, "_msg": 470, "c_str": [470, 505, 527, 673, 678, 679, 981], "_db": 470, "hypthet": 471, "composite_suit": 471, "cs1": 471, "cs2": 471, "recompil": [472, 1001], "decorator_suit": 472, "average_with_base_sensor": 472, "decoratedsensor": [472, 500], "propon": 472, "diagnost": [472, 601, 604], "decorated_sensor_const_added_function": 472, "decorated_sensor_random_added_function": 472, "decorated_sensor_const__is_a__sensor": 472, "decorated_sensor_random__is_a__sensor": 472, "assert_g": [472, 521, 538], "assert_l": [472, 521, 538], "average_with_decorated_sensor": 472, "mtqueue": [473, 491], "devis": 473, "notifi": [473, 739, 931, 978, 1124], "cluster_cxx_design_pattern": [473, 487, 515, 567, 763], "cluster_linux": [473, 487, 515, 516, 517, 518, 519, 520, 521, 522, 525, 567, 740, 762, 763, 767, 770, 772, 775, 777, 780, 782, 784, 786, 787, 789, 791, 793, 795, 797, 799, 801, 803, 805, 807, 809, 811, 814, 816, 819, 821, 825, 828, 831, 833, 837, 838, 839, 840, 843, 844, 851, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 890, 900, 906, 912, 913, 918, 919, 920, 921, 922, 929, 935, 937, 945, 947, 949, 961, 964, 967, 969, 986, 988, 989, 990, 991, 992, 993, 994, 995], "cluster_linux_bas": [473, 487, 515, 516, 517, 518, 519, 520, 521, 522, 525, 567, 740, 762, 763, 833, 837, 838, 839, 840, 843, 844, 851, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 890, 900, 906, 918, 919, 920, 921, 922, 929, 935, 937, 945, 947, 961, 964, 967, 969, 986, 988, 989, 990, 991, 992, 993, 994, 995], "cluster_linux_basics_shel": [473, 487, 515, 516, 517, 518, 519, 520, 521, 522, 525, 567, 740, 762, 763, 833, 837, 838, 839, 840, 843, 844, 851, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 890, 900, 906, 929, 935, 937, 945, 947, 961, 964, 967, 969, 986, 988, 989, 990, 991, 992, 993, 994, 995], "cluster_linux_basics_intro": [473, 487, 515, 516, 517, 518, 519, 520, 521, 522, 525, 567, 740, 762, 763, 833, 837, 838, 839, 840, 843, 844, 851, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 890, 900, 906, 918, 919, 920, 921, 922, 929, 935, 937, 945, 947, 961, 964, 967, 969, 986, 988, 989, 990, 991, 992, 993, 994, 995], "cluster_linux_toolchain": [473, 487, 515, 516, 517, 518, 519, 520, 521, 522, 525, 567, 740, 762, 763, 840, 843, 844, 906, 929, 935, 937, 945, 947, 961, 964, 967, 969, 986, 988, 989, 990, 991, 992, 993, 994, 995], "cluster_cxx": [473, 487, 515, 516, 517, 518, 519, 520, 521, 522, 525, 532, 534, 567, 763], "cluster_cxx_exercis": [473, 487, 515, 516, 517, 518, 519, 520, 521, 522, 525, 532, 534, 567, 763], "cluster_cxx_exercises_design_pattern": [473, 487, 515, 567, 763], "cluster_cxx03": [473, 487, 515, 516, 517, 518, 519, 520, 521, 522, 525, 532, 534, 567, 575, 590, 593, 596, 612, 618, 622, 630, 631, 632, 634, 635, 637, 640, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 676, 707, 723, 732, 740, 748, 760, 762, 763], "cluster_cxx03_inheritance_oo": [473, 487, 515, 525, 567, 640, 664, 748, 762, 763], "cluster_cxx03_data_encapsul": [473, 487, 515, 516, 517, 518, 519, 520, 521, 522, 525, 532, 534, 567, 575, 590, 593, 596, 612, 618, 622, 631, 634, 635, 640, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 676, 707, 723, 732, 740, 748, 760, 762, 763], "cxx_design_patterns_singleton": [473, 487, 515, 567, 763], "cxx_design_patterns_uml": [473, 487, 515, 567, 763], "cxx03_inheritance_oo_interfac": [473, 487, 515, 525, 567, 640, 664, 748, 762, 763], "cxx_design_patterns_adapt": [473, 487, 515, 567, 763], "cxx_design_patterns_sensor_hierarchi": [473, 487, 515, 567, 763], "cxx_design_patterns_proxi": [473, 487, 515, 567, 763], "cxx_design_patterns_abstract_factori": [473, 487, 515, 567, 763], "cxx_design_patterns_observ": [473, 487, 515, 567, 763], "cxx_design_patterns_decor": [473, 487, 515, 567, 763], "cxx_design_patterns_heating_screenplai": [473, 763], "cxx_design_patterns_oo_principl": [473, 763], "cxx_design_patterns_composit": [473, 487, 515, 567, 763], "cxx_exercises_design_patterns_proxy_round": [473, 487, 515, 567, 763], "cxx_design_patterns_command": [473, 487, 515, 567, 763], "cxx_design_patterns_interpret": [473, 487, 515, 567, 763], "linux_basics_shell_cwd": [473, 487, 515, 516, 517, 518, 519, 520, 521, 522, 525, 567, 740, 762, 763, 837, 838, 839, 840, 843, 844, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 874, 875, 876, 877, 878, 879, 880, 881, 882, 884, 885, 886, 887, 888, 890, 906, 929, 935, 937, 945, 947, 961, 964, 967, 969, 986, 988, 989, 990, 991, 992, 993, 994, 995], "linux_basics_shell_commandlin": [473, 487, 515, 516, 517, 518, 519, 520, 521, 522, 525, 567, 740, 762, 763, 833, 837, 838, 839, 840, 843, 844, 851, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 890, 900, 906, 929, 935, 937, 945, 947, 961, 964, 967, 969, 986, 988, 989, 990, 991, 992, 993, 994, 995], "linux_basics_shell_path": [473, 487, 515, 516, 517, 518, 519, 520, 521, 522, 525, 567, 740, 762, 763, 837, 838, 839, 840, 843, 844, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 890, 906, 929, 935, 937, 945, 947, 961, 964, 967, 969, 986, 988, 989, 990, 991, 992, 993, 994, 995], "linux_basics_intro_process": [473, 487, 515, 516, 517, 518, 519, 520, 521, 522, 525, 567, 740, 762, 763, 837, 838, 839, 840, 843, 844, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 874, 875, 876, 877, 878, 879, 880, 881, 882, 884, 885, 886, 887, 888, 890, 906, 918, 919, 920, 921, 922, 929, 935, 937, 945, 947, 961, 964, 967, 969, 986, 988, 989, 990, 991, 992, 993, 994, 995], "linux_basics_intro_overview": [473, 487, 515, 516, 517, 518, 519, 520, 521, 522, 525, 567, 740, 762, 763, 833, 837, 838, 839, 840, 843, 844, 851, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 890, 900, 906, 918, 919, 920, 921, 922, 929, 935, 937, 945, 947, 961, 964, 967, 969, 986, 988, 989, 990, 991, 992, 993, 994, 995], "linux_basics_shell_file_dir_create_rm": [473, 487, 515, 516, 517, 518, 519, 520, 521, 522, 525, 567, 740, 762, 763, 837, 838, 839, 840, 843, 844, 865, 874, 875, 876, 877, 878, 879, 880, 881, 882, 884, 890, 906, 929, 935, 937, 945, 947, 961, 964, 967, 969, 986, 988, 989, 990, 991, 992, 993, 994, 995], "linux_toolchain_bas": [473, 487, 515, 516, 517, 518, 519, 520, 521, 522, 525, 567, 740, 762, 763, 840, 843, 844, 906, 929, 935, 937, 945, 947, 961, 964, 967, 969, 986, 988, 989, 990, 991, 992, 993, 994, 995], "linux_toolchain_separate_compil": [473, 487, 515, 516, 517, 518, 519, 520, 521, 522, 525, 567, 763, 906, 986, 989, 990, 991, 992, 994], "linux_toolchain_cmake_loc": [473, 487, 515, 516, 517, 518, 519, 520, 521, 522, 525, 567, 763, 906, 986, 994], "linux_toolchain_static_librari": [473, 487, 515, 516, 517, 518, 519, 520, 521, 522, 525, 567, 763, 906, 986, 989, 991, 992, 994], "cxx_exercises_sensor_interfac": [473, 487, 515, 525, 567, 763], "cxx03_introduct": [473, 487, 515, 516, 517, 518, 519, 520, 521, 522, 525, 532, 534, 567, 575, 590, 593, 596, 612, 618, 622, 631, 634, 635, 640, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 676, 707, 723, 732, 740, 748, 760, 762, 763], "cxx03_inheritance_oo_virtual_method": [473, 487, 515, 525, 567, 640, 664, 748, 762, 763], "cxx03_inheritance_oo_polymorph": [473, 487, 515, 525, 567, 640, 664, 748, 762, 763], "cxx03_inheritance_oo_virtual_destructor": [473, 487, 515, 525, 567, 640, 664, 748, 762, 763], "cxx03_inheritance_oo_bas": [473, 487, 515, 525, 567, 640, 664, 748, 762, 763], "cxx03_inheritance_oo_destructor": [473, 487, 515, 525, 567, 640, 664, 748, 762, 763], "cxx03_data_encapsulation_ctor_dtor": [473, 487, 515, 525, 567, 575, 640, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 676, 707, 723, 732, 740, 748, 760, 762, 763], "cxx03_data_encapsulation_classes_object": [473, 487, 515, 516, 517, 518, 519, 520, 521, 522, 525, 532, 534, 567, 575, 590, 593, 596, 612, 618, 622, 631, 634, 635, 640, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 676, 707, 723, 732, 740, 748, 760, 762, 763], "cxx03_data_encapsulation_ctor_default": [473, 487, 515, 525, 567, 575, 640, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 676, 707, 723, 732, 740, 748, 760, 762, 763], "cxx03_data_encapsulation_ctor_custom": [473, 487, 515, 518, 521, 525, 567, 575, 640, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 676, 707, 723, 732, 740, 748, 760, 762, 763], "cxx03_data_encapsulation_c": [473, 487, 515, 516, 517, 518, 519, 520, 521, 522, 525, 532, 534, 567, 575, 590, 593, 596, 612, 618, 622, 631, 634, 635, 640, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 676, 707, 723, 732, 740, 748, 760, 762, 763], "sensorread": 474, "chrono_liter": [474, 667, 739, 741, 742], "demologg": 474, "cerr": [474, 513, 592, 661, 731, 741, 914, 948, 951], "demovaluestor": 474, "_store": 474, "namedsensor": 474, "_sensor": [474, 481, 499, 500, 502, 505, 506, 727], "_logger": 474, "_value_stor": 474, "sensora": 474, "sensorb": 474, "sensorc": 474, "200000": [474, 915, 1113], "this_thread": [474, 667, 728, 739, 741], "sleep_for": [474, 667, 728, 739, 741], "12597": 474, "valuestor": 474, "2895": 474, "158243": 474, "cassert": [474, 616, 657, 660, 662, 668, 741], "boss": 474, "v3": 474, "abort": [474, 493, 494, 577, 705, 928], "mocklogg": 474, "lines_log": 474, "mockvaluestor": 474, "sensorreader_suit": 474, "141320": 474, "memcheck": [474, 577, 726], "detector": [474, 577, 726], "myobserv": 476, "socialdb_observ": [476, 504], "newcitizenobserv": [476, 504], "new_citizen": 476, "_new_citizen_svnr": 476, "new_citizen_ad": [476, 504], "observer_suit": 476, "register_on": 476, "register_new_citizen_notif": [476, 504], "register_mani": 476, "observer1": 476, "observer2": 476, "register_dupl": 476, "observeralreadyregist": [476, 504], "unregister_new_citizen_notif": [476, 504], "unregister_not_regist": 476, "observernotregist": [476, 504], "addict": [477, 849, 870, 1134, 1142], "bertrand": 477, "barbara": 477, "polish": 477, "be_sick": 480, "insur": [480, 493, 494, 495, 507, 508, 509], "teardown": [480, 527, 1005, 1142, 1152, 1154], "purest": 481, "lightest": 481, "pidcontrol": 481, "_switch": 481, "cluster_cxx_exercises_design_patterns_solut": [487, 515, 567, 763], "cxx_exercises_design_patterns_singleton_flexible_strict": [487, 515, 567, 763], "cxx_exercises_design_patterns_singleton_inflex": [487, 515, 567, 763], "cxx_exercises_design_patterns_singleton_flex": [487, 515, 567, 763], "cxx_exercises_design_patterns_composit": [487, 515, 567, 763], "cxx_exercises_design_patterns_command": [487, 515, 567, 763], "cxx_exercises_design_patterns_decor": [487, 515, 567, 763], "cxx_exercises_design_patterns_interpreter_and_adapt": [487, 515, 567, 763], "cxx_exercises_design_patterns_interpreter_bas": [487, 515, 567, 763], "cxx_exercises_design_patterns_abstract_factori": [487, 515, 567, 763], "cxx_exercises_design_patterns_proxy_remot": [487, 515, 567, 763], "cxx_exercises_design_patterns_adapt": [487, 515, 567, 763], "cxx_exercises_design_patterns_observ": [487, 515, 567, 763], "cxx_exercises_design_patterns_solutions_composit": [487, 515, 567, 763], "cxx_exercises_design_patterns_solutions_command": [487, 515, 567, 763], "cxx_exercises_design_patterns_solutions_decor": [487, 515, 567, 763], "cxx_exercises_design_patterns_solutions_singleton_flexible_strict": [487, 515, 567, 763], "cxx_exercises_design_patterns_solutions_adapt": [487, 515, 567, 763], "cxx_exercises_design_patterns_solutions_proxy_round": [487, 515, 567, 763], "cxx_exercises_design_patterns_solutions_singleton_flex": [487, 515, 567, 763], "cxx_exercises_design_patterns_solutions_abstract_factori": [487, 515, 567, 763], "cxx_exercises_design_patterns_solutions_singleton_inflex": [487, 515, 567, 763], "cxx_exercises_design_patterns_solutions_interpreter_bas": [487, 515, 567, 763], "cxx_exercises_design_patterns_solutions_observ": [487, 515, 567, 763], "cxx_exercises_design_patterns_solutions_interpreter_and_adapt": [487, 515, 567, 763], "cxx_exercises_design_patterns_solutions_proxy_remot": [487, 515, 567, 763], "cla": 488, "roundingsensor": [488, 492, 506], "r1": [488, 589, 680], "r2": [488, 589, 680], "r3": 488, "sensorvalueexpress": [488, 502], "e1_e2": 488, "e1_e2_e3": 488, "num_measur": 488, "v_avg": 488, "v_ass": 488, "combinatin": 489, "interpreter_suit": 489, "e_lh": 489, "e_rh": 489, "e_add": 489, "e_sub": 489, "mul": 489, "e_mul": 489, "e_div": 489, "arithemet": 489, "arith": [489, 561, 562, 598, 599, 600, 601, 606], "combined_arith": 489, "l7": 489, "a_7_plus_3": 489, "s_3_minus_1": 489, "variable_not_set": 489, "analogi": [489, 513, 916, 978, 1018], "assignment_valu": 489, "variable_assign": 489, "ass": 489, "variable_used_as_express": 489, "ass_v1": 489, "ass_v2": 489, "reachabl": [491, 726, 914, 916], "remoteadapt": [491, 505], "response_promis": 491, "_adapt": 491, "_queue": [491, 739], "_thread": 491, "fulfil": [491, 526], "proxy_remote_suit": 491, "_c": 491, "remotesensoradapt": [491, 505], "remotesensor": [491, 505], "remote_sensor__is_a__sensor": 491, "somth": 491, "simplist": 491, "fullfil": 492, "proxy_round_suit": 492, "round_down": 492, "round_up": 492, "rouding_sensor__is_a__sensor": 492, "advis": [493, 1104], "hypothet": [493, 525, 526, 576, 907], "fee": 493, "socialinsur": [493, 494, 495, 509], "oegk": [493, 494], "startup": [493, 494, 495, 507, 842, 978, 984, 1016], "set_inst": [493, 494, 507], "make_uniqu": [493, 507, 759], "socinsur": [494, 508], "inisur": 494, "reimplement": [494, 663], "compiabl": [494, 508], "iface_inst": [494, 508], "svs_instanc": [494, 508], "oegk_inst": [494, 508], "another_inst": [494, 495, 508, 509], "1485": [494, 495], "unset": [494, 957], "sozialversicherung": [495, 509], "unrealist": 495, "adapte": 497, "_adapte": 497, "_svnr": 498, "_firstnam": [498, 628, 1028], "_lastnam": [498, 628, 1028], "_result": 498, "_command": 498, "get_if": [498, 753], "decoratedconstantsensor": 500, "sstream": [500, 505, 587, 589], "iomanip": 500, "ostringstream": [500, 505, 586, 587, 588, 589], "decoratedrandomsensor": 500, "_variabl": 503, "_lh": 503, "_rh": 503, "_context": 503, "_var": 503, "_exp": 503, "stdexcept": [503, 505, 507, 508, 509, 527, 761], "_new_citizen_observ": 504, "num_eras": 504, "_server": 505, "cstdio": 505, "num_item": 505, "sscanf": 505, "cmath": [506, 571, 579, 580, 588, 674, 690, 691, 692, 693, 730], "_instanc": [507, 508, 509], "nullptr": [507, 508, 526, 537, 541, 667, 677, 678, 725, 726, 727, 739, 741, 743, 758, 759, 951, 1161], "_databas": [507, 508, 509], "0l": [507, 508], "cstdlib": [508, 527], "ssocinsur": 508, "toi": [510, 667, 982], "millidegre": 510, "parameteriz": [511, 1110], "loop_and_measur": 511, "niter": 511, "counterpart": 512, "stod": 513, "uniform_real_distribut": [513, 521, 725], "default_random_engin": [513, 521, 725], "random_devic": [513, 521, 725], "_distribut": [513, 725], "_engin": [513, 725, 1130], "_x": [513, 571, 572, 574, 576, 578, 579, 580, 581, 583, 585, 595, 610, 674, 689, 691, 692, 693], "_y": [513, 571, 572, 574, 576, 578, 579, 580, 581, 583, 585, 595, 610, 674, 689, 691, 692, 693], "spit": [513, 1116], "cluster_cxx03_functions_and_method": [515, 532, 534, 567, 590, 593, 596, 612, 618, 622, 631, 634, 635, 649, 650, 652, 653, 655, 656, 657, 659, 660, 661, 662, 663, 664, 676, 707, 723, 732, 740, 760, 762, 763], "cluster_cxx03_except": [515, 532, 534, 567, 593, 596, 612, 618, 622, 631, 634, 635, 652, 659, 660, 661, 662, 663, 664, 763], "cluster_cxx03_stl": [515, 532, 534, 567, 612, 618, 622, 630, 631, 632, 634, 635, 652, 659, 660, 661, 662, 663, 664, 763], "cluster_cxx03_stl_associative_contain": [515, 532, 534, 567, 622, 631, 635, 664, 763], "cluster_cxx03_stl_algorithm": [515, 532, 567, 612, 631, 634, 635, 664, 763], "cluster_cxx03_templ": [515, 532, 534, 567, 596, 612, 618, 622, 631, 634, 635, 652, 659, 660, 661, 662, 663, 664, 763], "cluster_cxx_exercises_stl": [515, 532, 534, 567, 763], "cluster_cxx_exercises_stl_sensor_repositori": [515, 532, 534, 567, 763], "cluster_cxx_exercises_fh_sensor_first_tri": [515, 567, 763], "cluster_linux_basics_permiss": [515, 567, 740, 762, 763, 840, 843, 844, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 906, 935, 937, 945, 947, 961, 964, 967, 969], "cluster_linux_sysprog": [515, 567, 740, 762, 763, 840, 843, 844, 906, 929, 935, 937, 945, 947, 949, 961, 964, 967, 969], "cluster_linux_sysprog_bas": [515, 567, 740, 762, 763, 840, 843, 844, 906, 929, 935, 937, 945, 947, 961, 964, 967, 969], "cluster_linux_sysprog_fileio": [515, 567, 740, 762, 763, 840, 843, 844, 906, 935, 937, 945, 947, 961, 964, 967, 969], "cxx03_functions_and_methods_stat": [515, 532, 534, 567, 590, 593, 596, 612, 618, 622, 631, 634, 635, 652, 659, 660, 661, 662, 663, 664, 763], "cxx03_functions_and_methods_refer": [515, 532, 534, 567, 590, 593, 596, 612, 618, 622, 631, 634, 635, 652, 655, 656, 659, 660, 661, 662, 663, 664, 676, 707, 723, 732, 740, 760, 762, 763], "cxx03_functions_and_methods_overload": [515, 532, 534, 567, 590, 593, 596, 612, 618, 622, 631, 634, 635, 649, 650, 652, 653, 655, 656, 657, 659, 660, 661, 662, 663, 664, 676, 707, 723, 732, 740, 760, 762, 763], "cxx03_functions_and_methods_oper": [515, 532, 534, 567, 590, 593, 596, 612, 618, 622, 631, 634, 635, 652, 659, 660, 661, 662, 663, 664, 763], "cxx03_functions_and_methods_thi": [515, 532, 534, 567, 590, 593, 596, 612, 618, 622, 631, 634, 635, 652, 655, 656, 659, 660, 661, 662, 663, 664, 676, 707, 723, 732, 740, 760, 762, 763], "cxx03_functions_and_methods_const": [515, 532, 534, 567, 590, 593, 596, 612, 618, 622, 631, 634, 635, 652, 655, 656, 659, 660, 661, 662, 663, 664, 676, 707, 723, 732, 740, 760, 762, 763], "cxx03_functions_and_methods_method": [515, 532, 534, 567, 590, 593, 596, 612, 618, 622, 631, 634, 635, 652, 653, 655, 656, 657, 659, 660, 661, 662, 663, 664, 676, 707, 723, 732, 740, 760, 762, 763], "cxx03_data_encapsulation_initializer_list": [515, 518, 521, 567, 575, 664, 763], "cxx03_exceptions_bas": [515, 532, 534, 567, 593, 596, 612, 618, 622, 631, 634, 635, 652, 659, 660, 661, 662, 663, 664, 763], "cxx03_exceptions_try_catch": [515, 532, 534, 567, 593, 596, 612, 618, 622, 631, 634, 635, 652, 659, 660, 661, 662, 663, 664, 763], "cxx03_stl_vector_copy_etc": [515, 532, 567, 631, 635, 664, 763], "cxx03_stl_basic": [515, 532, 534, 567, 612, 618, 622, 631, 634, 635, 652, 659, 660, 661, 662, 663, 664, 763], "cxx03_templates_class_templ": [515, 532, 534, 567, 596, 612, 618, 622, 631, 634, 635, 652, 659, 660, 661, 662, 663, 664, 763], "cxx03_stl_associative_containers_map": [515, 532, 534, 567, 622, 631, 635, 664, 763], "cxx03_stl_associative_containers_bas": [515, 532, 534, 567, 622, 631, 635, 664, 763], "cxx03_stl_algorithm_find": [515, 532, 567, 612, 631, 635, 664, 763], "cxx03_stl_algorithm_copi": [515, 532, 567, 612, 631, 635, 664, 763], "cxx03_templates_function_templ": [515, 532, 534, 567, 596, 612, 618, 622, 631, 634, 635, 652, 659, 660, 661, 662, 663, 664, 763], "cxx_exercises_sensor_w1_factori": [515, 567, 763], "cxx_exercises_sensor_w1": [515, 567, 763], "cxx_exercises_sensor_const_nopoli": [515, 519, 521, 567, 763], "cxx_exercises_display_led_stripe_nopoli": [515, 516, 567, 763], "cxx_exercises_sensor_mock_nopoli": [515, 516, 517, 518, 520, 567, 763], "cxx_exercises_switch_mock_nopoli": [515, 516, 517, 522, 567, 763], "cxx_exercises_oo_shap": [515, 567, 763], "cxx_exercises_sensor_avg_nopoli": [515, 518, 567, 763], "linux_sysprog_fileio_exercise_w1_sensor": [515, 567, 763, 906, 945, 947, 964], "cxx_exercises_hysteresis_nopoli": [515, 517, 567, 763], "cxx_exercises_sensor_random_nopoli": [515, 521, 567, 763], "cxx_exercises_stl_filter_odd": [515, 532, 567, 763], "cxx_exercises_stl_algo": [515, 532, 567, 763], "cxx_exercises_stl_filter_greater_10": [515, 532, 567, 763], "cxx_exercises_stl_vector": [515, 532, 567, 763], "cxx_exercises_stl_filter_gener": [515, 532, 567, 763], "cxx_exercises_stl_map": [515, 532, 534, 567, 763], "cxx_exercises_stl_uniq": [515, 532, 567, 763], "cxx_exercises_stl_sensor_repository_insert_no_overwrit": [515, 532, 534, 567, 763], "cxx_exercises_stl_sensor_repository_insert_sunni": [515, 532, 534, 567, 763], "cxx_exercises_stl_sensor_repository_memory_leak": [515, 532, 534, 567, 763], "cxx_exercises_stl_sensor_repository_remove_not_found": [515, 532, 534, 567, 763], "cxx_exercises_stl_sensor_repository_remove_sunni": [515, 532, 534, 567, 763], "cxx_exercises_stl_sensor_repository_lookup_not_found": [515, 532, 534, 567, 763], "cxx_exercises_stl_sensor_repository_lookup_sunni": [515, 532, 534, 567, 763], "cxx_exercises_stl_sensor_repository_size_const": [515, 532, 534, 567, 763], "cxx_exercises_fh_sensor_first_try_exercise_fh_sensor_oo_loop_funct": [515, 567, 763], "cxx_exercises_fh_sensor_first_try_exercise_fh_sensor_oo": [515, 567, 763], "cxx_exercises_fh_sensor_first_try_exercise_fh_sensor_oo_no_polymorph": [515, 567, 763], "cxx_exercises_fh_sensor_first_try_exercise_fh_sensor_oo_random_sensor": [515, 567, 763], "linux_basics_shell_l": [515, 567, 740, 762, 763, 837, 838, 839, 840, 843, 844, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 874, 877, 878, 881, 882, 884, 885, 886, 887, 888, 890, 906, 935, 937, 945, 947, 961, 964, 967, 969], "linux_basics_permissions_bas": [515, 567, 740, 762, 763, 840, 843, 844, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 906, 935, 937, 945, 947, 961, 964, 967, 969], "linux_sysprog_basics_errorhandl": [515, 567, 740, 762, 763, 840, 843, 844, 906, 929, 935, 937, 945, 947, 961, 964, 967, 969], "linux_sysprog_basics_syscal": [515, 567, 740, 762, 763, 840, 843, 844, 906, 929, 935, 937, 945, 947, 961, 964, 967, 969], "linux_sysprog_basics_groupnod": [515, 567, 740, 762, 763, 840, 843, 844, 906, 929, 935, 937, 945, 947, 961, 964, 967, 969], "linux_sysprog_fileio_bas": [515, 567, 740, 762, 763, 840, 843, 844, 906, 935, 937, 945, 947, 961, 964, 967, 969], "mockswitch_nopoli": [516, 517, 522], "display_led_stripe_nopoly_suite__somewhere_in_the_middl": 516, "nopoli": [516, 517, 518, 519, 520, 521, 522], "display_led_stripe_nopoly_suit": 516, "somewhere_in_the_middl": 516, "sw0": 516, "sw1": 516, "sw2": 516, "sw3": 516, "sw4": 516, "sw5": 516, "sw6": 516, "sw7": 516, "display_led_stripe_nopoly_suite__below_rang": 516, "below_rang": 516, "display_led_stripe_nopoly_suite__above_rang": 516, "above_rang": 516, "display_led_stripe_nopoly_suite__mov": 516, "movement": [516, 907], "set_temperatur": [516, 517, 518, 520], "display_led_stripe_nopoly_suite__vari": 516, "variation_2_switch": 516, "variation_interval_not_from_0": 516, "thermostat": 517, "threshold": 517, "nop_when_within_rang": 517, "hysteresis_suit": 517, "hyst": 517, "falls_below_rang": 517, "rises_above_rang": 517, "rises_above_range_when_on": 517, "sensor_avg_nopoly_suit": 518, "sensor_const_nopoly_suit": 519, "subsequ": 520, "sensor_mock_nopoly_suit": 520, "sensor_random_suit": [521, 525, 526], "uniformli": 521, "rd": 521, "obtain": [521, 738, 1058], "rng": 521, "tailor": 521, "switch_mock_suit": 522, "initial_st": [522, 1153], "set_on_off": 522, "initial_failur": 523, "failit": 523, "point_suit": [523, 587], "ctor_and_gett": 523, "ctor_and_getters_const": 523, "default_ctor": [523, 586, 587, 588, 589, 743], "equal_method": 523, "p3": 523, "p4": [523, 870], "assert_fals": [523, 528, 533, 535, 540, 569, 586, 587, 588, 589, 761], "equal_method_const": 523, "operator_equ": 523, "operator_equals_const": 523, "move_method": 523, "operator_plus_equ": 523, "add_method": 523, "new_p": 523, "add_method_const": 523, "operator_plu": [523, 586, 587, 588], "operator_plus_const": 523, "radiu": 523, "circle_suit": 523, "ctor_and_getters_using_operator_equ": 523, "14159": 523, "53981634": 523, "area_const": 523, "square_suit": 523, "bottom_left": [523, 589], "side_length": 523, "shape_suit": 523, "circle_is_a_shap": 523, "square_is_a_shap": 523, "area_is_shape_functionality__circl": 523, "area_is_shape_functionality__squar": 523, "human": [524, 526, 731, 870, 892, 984, 1029, 1115], "ineffici": [524, 647, 827, 946], "epath": 524, "bag_copy_suit": [524, 757], "find_by_int_ok": [524, 757, 758, 759], "find_by_int_nok": [524, 757, 758, 759], "remove_by_int_ok": [524, 757, 758, 759], "bag_unique_suit": [524, 759], "bag_shared_suit": [524, 758], "insert_const_ref": [524, 758], "insert_mov": [524, 758], "unrel": [525, 556, 565, 731, 748, 749, 753, 762, 763, 968, 978, 1007, 1024, 1122], "tyo": 525, "sensor_const_suit": [525, 526], "is_a_sensor": [525, 526], "5731": 525, "aptli": 526, "23062": 526, "w1sensorfactori": 526, "find_by_address": 526, "sensor_w1_factory_suit": 526, "fstream": [526, 761], "tmpdir_fixtur": 526, "device_dir": 526, "create_directori": 526, "ofstream": [526, 761], "42459": 526, "temp_milli": [526, 527], "w1_fs_root": 526, "sensor_factori": 526, "0x02131d959eaa": 526, "assert_n": [526, 562, 585, 586, 721, 743, 758, 759], "horizon": 526, "0x012345678901": 526, "w1_sensor_suit": [526, 527], "test_read_sensor": [526, 527], "36700": 526, "basedir": 526, "0x2131d959eaa": 526, "dcmake_toolchain_fil": [527, 985, 999], "20687": 527, "write_temperatur": 527, "thaht": 527, "filename_pattern": 527, "xxxxxx": 527, "mkstemp": 527, "unlink": [527, 976, 978], "to_str": [527, 647], "off_t": [527, 936, 946, 951, 977], "lseek": [527, 946, 951, 977], "seek_set": [527, 936, 951, 977], "nwritten": [527, 940, 941, 942, 943, 948, 951, 977, 981], "algo": [528, 561, 562, 597, 598], "copy_into_vector": 528, "stl_exercises_suit": [528, 529, 530, 531, 533, 535, 536, 537, 538, 540, 541, 542, 543, 544], "required_cont": 528, "find_in_vector": 528, "my_vec": [528, 544], "wladimir": 528, "sort_in_plac": 528, "required_output": [528, 529, 530, 531, 543], "orig_input": [528, 529, 530, 531, 543], "alement": 529, "is_odd": 529, "filter_greater_10": 530, "filter_odd": 531, "map_insert": 533, "my_map": [533, 623, 624, 625, 626, 627], "map_insert_simpl": 533, "insert_check_dupl": 533, "map_insert_check_dupl": 533, "insert_remove_by_kei": 533, "map_insert_remove_by_kei": 533, "map_remove_by_kei": 533, "map_find": 533, "sensorrepositori": [534, 535, 536, 537, 538, 539, 540, 541, 542], "decript": 534, "sensor_repository_insert_dupl": 535, "add_sensor": [535, 536, 537, 538, 540, 541], "ofen": [535, 536, 537, 538, 540, 541], "weltraum": [535, 536, 537, 538, 540, 541], "mond": [535, 540], "sucess": 535, "sensor_repository_insert": 536, "sensor_repository_lookup_neg": 537, "get_sensor": [537, 538, 541], "sensor_repository_lookup_posit": 538, "complaint": 539, "ish": 539, "sensor_repository_remove_nonexist": 540, "remove_sensor": [540, 541], "sensor_repository_remov": 541, "sensor_repository_size_const": 542, "vector_append": 544, "vector_join": 544, "joined_cont": 544, "userdb_map": 545, "userdb_vector": 545, "dan": 545, "sak": 545, "cppcon": [545, 672, 674, 675, 688, 695, 713, 724, 745, 748], "transcrib": 545, "mallocfre": 550, "arrayofinteg": 550, "memoryleak": 550, "arrayboundswrit": 550, "newdelet": 550, "singleinteg": 550, "deletemismatch": 550, "thing1": [552, 553], "thing2": [552, 553], "global_str": 553, "__have_thing_h__": 553, "_content": 553, "denstruct": 553, "destruct": [553, 574, 644, 675, 725, 852], "essenc": [553, 1148], "collaps": 556, "thoroughli": [556, 914], "_mem": [559, 705], "determinist": [559, 724, 738, 1005, 1056], "maybeown": 559, "pointerarithmet": 562, "bugp": 562, "105ff": 562, "num_el": 562, "another_arrai": 562, "yet_another_arrai": 562, "108ff": 562, "basics_cxx03": 562, "basics_cxx11": 562, "cbegin": [562, 615, 634, 671, 682], "my_copi": 562, "naivecopi": 562, "cend": [562, 615, 634, 671], "algocopi": 562, "backinsert": 562, "back_insert_iter": [562, 603], "nah": [562, 1150], "insertfind": 562, "make_pair": [562, 625, 628, 716], "erasebyposit": 562, "erasebykei": 562, "domin": 568, "bjarn": 568, "stroustrup": 568, "1985": 568, "2003": [568, 1161], "point_c_suit": [569, 571], "struct_initi": 569, "point_init_default": 569, "c_default_constructor_init": 569, "point_create_default": 569, "c_default_constructor_cr": 569, "point_creat": [569, 571], "c_constructor": [569, 571], "eq": [569, 585, 587, 589], "point_equ": 569, "point_not_equ": 569, "eq_n": 569, "point_mov": [569, 571, 579, 581], "point_add": 569, "point_sub": 569, "add_sub": 569, "point_dist": 569, "point_ab": [569, 571], "hyp": [569, 571, 579], "unwant": [569, 620, 716, 788, 1007, 1028, 1052], "cpp_copy_suit": 570, "generated_copy_ctor": 570, "copy1": [570, 726], "copy2": [570, 726], "copy3": 570, "manual_copy_suit": 570, "copy_ctor": [570, 725], "assignment_oper": 570, "earlier": 571, "point_h": [571, 579, 580], "point_cpp_suit": 571, "constructor_coordin": 571, "inaccessibil": 571, "move_op_pluseq": 571, "whenev": [572, 579, 589, 675], "sth": 573, "dirty_stack": 573, "use_uniniti": 573, "onward": [573, 577, 584], "nw": 574, "memberwis": 574, "_c_str": [574, 577, 678], "cxx03_data_encapsulation_object_copi": [575, 664, 676, 707, 723, 732, 740, 760, 762, 763], "cxx03_data_encapsulation_copy_bas": [575, 664, 763], "string_h": [577, 678], "cstring": [577, 678, 679, 712], "tcach": [577, 705], "221601": 577, "julian": [577, 726], "seward": [577, 726], "libvex": [577, 726], "rerun": [577, 726], "realloc": [577, 620], "0x484465b": 577, "1103": 577, "0x401210": 577, "0x401194": 577, "0x4dc8c80": 577, "0x401188": 577, "0x484222f": 577, "0x4011c5": 577, "0x40116f": 577, "freed": [577, 769, 939, 1005], "destroi": [577, 639, 661, 680, 697, 712, 727, 738, 800], "221807": 577, "twostr": 577, "twotwostr": 577, "s21": 577, "s22": 577, "segfault": [577, 824, 982], "paraamet": 578, "__pretty_function__": 578, "0000000000401176": 578, "_z1fi": 578, "00000000004011a0": 578, "_z1fpc": 578, "demangl": 578, "anywher": [579, 1003], "fab": [579, 580], "distance_origin": [579, 580, 730], "hid": 579, "standardes": 579, "d_orig": 580, "fpermiss": [580, 717], "arrog": 580, "goodi": [580, 908], "pascal": 582, "uninitil": 582, "pass_by_copi": 582, "references_suit": 582, "voila": [582, 914, 972, 985, 986, 996, 1027], "tediou": [582, 933, 986, 1060], "pass_by_point": 582, "pass_by_refer": 582, "pass_by_const_point": 582, "const_point": 582, "pass_by_const_refer": 582, "const_refer": 582, "pass_by_copy_expens": 582, "copy_expens": 582, "pass_by_const_reference_cheap": 582, "const_reference_cheap": 582, "addend": [583, 710, 730], "straightforwardli": [583, 1065], "add_point": 583, "static_suit": 583, "global_funct": 583, "static_method": 583, "bss": 584, "definition1": 584, "definition2": 584, "forbid": 584, "trickeri": 584, "points_equ": 585, "oddli": 585, "operators_suit": 585, "equals_glob": 585, "difficulti": 585, "equals_object": 585, "vector_addition_glob": 585, "vector_addition_object": 585, "point_plus_equ": 585, "combo": [586, 588], "cuboid_suit": 586, "front_bottom_left": 586, "point_whl_ctor": 586, "operator_eq_n": [586, 587, 588, 589], "operator_pluseq": [586, 587, 588], "operator_minuseq": [586, 588], "operator_minu": [586, 588], "operator_ostream": [586, 587, 588, 589], "buf": [586, 587, 588, 589, 928, 936, 946], "entirei": [586, 588, 589], "starting_point": 587, "implementation_in_cpp_fil": 587, "rectangle_suit": [587, 589], "pluseq": 587, "operator_unary_minu": [587, 588], "minus_p": [587, 588], "point3d_suit": 588, "coordinates_ctor": 588, "071067812": 588, "69041576": 588, "top_right": 589, "top_left": 589, "bottom_right": 589, "rational": [589, 623], "operator_plus_equal_vec": 589, "plus_vec": 589, "cxx03_functions_and_methods_static_member_vari": [590, 664, 763], "cxx03_functions_and_methods_exercise_class_point": [590, 664, 763], "cxx03_functions_and_methods_exercise_class_point3d": [590, 664, 763], "cxx03_functions_and_methods_exercise_class_cuboid": [590, 664, 763], "cxx03_functions_and_methods_exercise_class_rectangl": [590, 664, 763], "dothat": [591, 592], "dothi": [591, 592], "dothos": [591, 592], "dammit": [591, 592, 671], "thisexcept": 592, "thatexcept": 592, "thrown": [592, 981], "myexcept": 592, "error_detect": 592, "granular": [592, 781, 968], "typenam": [594, 595, 677, 684, 685, 686, 687, 689, 691, 692, 693, 698, 719, 725, 729, 739, 741], "a_begin": [598, 600], "a_end": [598, 600], "src_begin": [598, 602], "src_end": [598, 602], "dst_begin": [598, 602], "decai": 599, "zeroth": 599, "warrai": 601, "unflex": 603, "shrink_to_fit": 603, "prealloc": [603, 604], "wnonnul": 604, "gool": [605, 672], "cplusplu": [607, 608, 609, 610, 611, 613, 614, 615, 616, 619, 628], "int_arrai": [607, 609, 613, 616], "binarili": 607, "is_el": 607, "original_begin": 608, "original_end": 608, "copy_run": 608, "original_run": 608, "int_array_c": 609, "match_666": 610, "match_42": 610, "x_equals_666": 610, "x_equals_4": 610, "x_equal": 610, "_criterion": 610, "yesno": [610, 837, 838], "output_stern": 611, "output_bindestrich": 611, "output_with_prefix": 611, "_prefix": 611, "cxx03_stl_algorithm_reverse_copi": [612, 631, 634, 635, 664, 763], "cxx03_stl_algorithm_sort": [612, 631, 635, 664, 763], "cxx03_stl_algorithm_for_each": [612, 631, 635, 664, 763], "cxx03_stl_algorithm_revers": [612, 631, 634, 635, 664, 763], "cxx03_stl_algorithm_lower_bound": [612, 631, 635, 664, 763], "cxx03_stl_algorithm_binary_search": [612, 631, 635, 664, 763], "cxx03_stl_algorithm_find_if": [612, 631, 635, 664, 763], "reversed_": [615, 634], "less_revers": 616, "greater_than": 616, "cluster_cxx03_stl_sequential_contain": [618, 631, 635, 664, 763], "cxx03_stl_sequential_containers_vector": [618, 631, 635, 664, 763], "cxx03_stl_sequential_containers_bas": [618, 631, 635, 664, 763], "cxx03_stl_sequential_containers_list": [618, 631, 635, 664, 763], "liek": 620, "logarithm": 620, "mein_int_arrai": 620, "insert_po": 620, "new_elems_as_vector": 620, "elems_to_insert": 620, "cxx03_stl_associative_containers_multimap": [622, 631, 635, 664, 763], "realiz": [623, 1056], "parameter": [623, 729, 734, 992, 1006], "keytyp": [623, 667], "valuetyp": [623, 667], "some_map": 623, "key_typ": [623, 624], "mapped_typ": [623, 624], "value_typ": [623, 624], "emplac": 623, "collis": 623, "zweiundvierzig": 623, "out_of_rang": [623, 627], "mymap": [624, 625, 626, 627], "sechshundersechsundsechzig": 624, "kv": 624, "pre11": [624, 625], "einundfuenfzig": [624, 625, 626, 627], "vierundfuenfzig": [624, 625, 626, 627], "dreihundertsechsundvierzig": [624, 625, 626, 627], "tausendein": [624, 625, 626, 627], "tausendzwei": [624, 625, 626, 627], "retval_7": 625, "retval_2": 625, "n_remov": 626, "found_value_1001": 627, "found_value_666": 627, "found_valu": 627, "joerg_svnr": 628, "caro_svnr": 628, "johanna_svnr": 628, "philipp_svnr": 628, "datenzwilling_von_joerg": 628, "faschingzwil": 628, "meine_map": 628, "datenzwil": 628, "equal_rang": 628, "found_rang": 628, "svnr_notexist": 628, "1234567": 628, "memory_resourc": 629, "cluster_cxx03_stl_alloc": [630, 631, 635, 664, 763], "cxx03_stl_allocator_bas": [630, 631, 635, 664, 763], "cluster_cxx03_stl_exercis": [631, 632, 634, 635, 664, 763], "cluster_cxx03_stl_exercises_reverse_str": [631, 632, 634, 635, 664, 763], "cxx03_stl_exercises_reverse_string_exercis": [631, 632, 634, 635, 664, 763], "cxx03_stl_exercises_reverse_string_solut": [631, 634, 635, 664, 763], "auto_ptr": [636, 675, 1161], "cluster_cxx03_dynamic_memori": [637, 664, 763], "cxx03_dynamic_memory_todo": [637, 664, 763], "inher": [638, 639, 642, 644, 645, 970, 1058], "novirtu": [638, 639, 645], "mantra": [639, 835], "spoiler": [639, 1016], "cxx03_inheritance_oo_private_protect": [640, 664, 763], "derived1": 642, "derived2": 642, "countless": 642, "derived3": 642, "unimpl": [642, 1020], "polymorp": [644, 747], "strictli": [644, 914, 915, 1016], "indirect": [645, 731, 847, 1001], "cluster_cxx03_standard_library_miscellanea": [646, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 763], "cxx03_standard_library_miscellanea_str": [646, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 763], "string_suit": 647, "another_hello": 647, "greeting1": 647, "greeting2": 647, "convert_to_signed_integ": 647, "stol": 647, "stoll": 647, "numstr": 647, "stoi": [647, 948, 951], "convert_to_unsigned_integ": 647, "stoull": 647, "stoui": 647, "stoul": 647, "convert_from_someth": 647, "basic_str": [647, 729, 761], "i_str": 647, "ui_str": 647, "666000": 647, "sprintf": [647, 948, 951, 981, 982], "print_char": 648, "cluster_cxx03_exercises_misc": [648, 649, 650, 651, 664, 763], "cxx03_exercises_misc_american_flag": [648, 650, 664, 763], "cxx03_exercises_misc_fh_moodle_quiz": [649, 650, 664, 763], "cxx03_exercises_misc_sum_integers_from_stdin": [650, 651, 664, 763], "ctrl": [651, 982, 1034], "cluster_cxx03_exercises_userdb": [652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 763], "cxx03_exercises_userdb_userdb_insert": [652, 659, 660, 661, 662, 664, 763], "cxx03_exercises_userdb_userdb_vector_bas": [652, 659, 660, 661, 662, 663, 664, 763], "cxx03_exercises_userdb_userdb_search_notfound_except": [652, 661, 664, 763], "cxx03_exercises_userdb_userdb_search_find_if": [652, 660, 661, 664, 763], "cxx03_exercises_userdb_user_access_method": [652, 653, 655, 656, 659, 660, 661, 662, 663, 664, 763], "cxx03_exercises_userdb_user_simple_method": [652, 653, 655, 656, 657, 659, 660, 661, 662, 663, 664, 763], "cxx03_exercises_userdb_userdb_search": [652, 660, 661, 662, 664, 763], "cxx03_exercises_userdb_user_default_ctor": [652, 659, 660, 661, 662, 663, 664, 763], "cxx03_exercises_userdb_user_const": [652, 655, 656, 659, 660, 661, 662, 663, 664, 763], "cxx03_exercises_userdb_user_const_memb": [652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 763], "cxx03_exercises_userdb_user_ctor": [652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 763], "architecton": 654, "celebr": 657, "trittsich": [657, 658], "age_by_n_year": 657, "user_init": 658, "userdb_insert": 659, "doesnotexist": [660, 662], "isvalid": [660, 661, 662], "unnatur": 661, "_user": [661, 812], "thereaft": 661, "wrinkl": 661, "usernotfound": 661, "unreach": [661, 925], "userdb_search_by_lastnam": 662, "undetect": 662, "userdb_init": 663, "cluster_cxx11": [665, 669, 676, 683, 694, 707, 708, 718, 723, 732, 740, 744, 748, 760, 762, 763], "cluster_cxx11_introduct": [665, 669, 707, 760, 762, 763], "cxx11_introduction_overview_livehack": [665, 762, 763], "cxx11_introduction_histori": [665, 669, 707, 760, 762, 763], "ugliest": 666, "todo_list": 667, "tdl": 667, "desc": 667, "key_value_pair": 667, "up_1_to_10": 667, "down_1000_to_980": 667, "todo_item": 667, "make_shar": [667, 728, 758], "todolist": 667, "nocopi": 667, "add_item": 667, "_list": 667, "evangelist": 667, "cstdint": [113, 668, 696, 697], "wchar_t": 668, "cluster_cxx11_new_language_featur": [669, 676, 683, 694, 707, 708, 718, 723, 732, 740, 760, 762, 763], "cluster_cxx11_new_language_features_brace_initi": [669, 707, 760, 762, 763], "cxx11_new_language_features_auto": [669, 707, 760, 762, 763], "cxx11_new_language_features_strongly_typed_enum": [669, 707, 760, 762, 763], "cxx11_new_language_features_brace_initialization_intro": [669, 707, 760, 762, 763], "cxx11_new_language_features_brace_initialization_implementor_view": [669, 707, 762, 763], "cxx11_new_language_features_brace_initialization_mess": [669, 707, 762, 763], "pointcloud": [670, 672], "_point": 670, "data_": [671, 673], "memoriz": 671, "brace_initialization_suit": 672, "explicit_ctor_cal": 672, "initlist_ctor_cal": 672, "explicit_ctor": 672, "initlist_ctor": 672, "disabigu": 672, "nightmar": [672, 675, 1001], "size_": 673, "constexpr_suit": 674, "basic_const_is_constexpr": 674, "constexpr_function_request": 674, "constexpr_function_not_request": 674, "constexpr_recursive_funct": 674, "6765": 674, "constexpr_ctor": 674, "schurr": 674, "olsen": [675, 724], "nicolai": [675, 717, 720], "josutti": [675, 717, 720], "smartptr": [676, 707, 725, 726, 762, 763], "cluster_cxx11_new_language_features_move_pf": [676, 707, 723, 732, 740, 760, 762, 763], "cluster_cxx11_smart_point": [676, 707, 723, 732, 740, 760, 762, 763], "cxx11_perfect_forward": [676, 707, 762, 763], "cxx11_new_language_features_move_pf_overview": [676, 707, 723, 732, 740, 760, 762, 763], "cxx11_new_language_features_miscellan": [676, 707, 723, 732, 740, 760, 762, 763], "cxx11_smart_pointers_unique_ptr": [676, 707, 723, 732, 740, 760, 762, 763], "cxx11_new_language_features_move_pf_livehack_string_mov": [676, 707, 762, 763], "cxx11_new_language_features_move_pf_afterword": [676, 707, 762, 763], "cxx11_new_language_features_move_pf_livehack_using_string_mov": [676, 707, 762, 763], "cxx11_smart_pointers_introduct": [676, 707, 723, 732, 740, 760, 762, 763], "_p": [677, 725], "handwritten_suit": [677, 725], "explicit_mov": [677, 725], "assert_double_eq": [677, 725, 726], "create_constant_sensor": [677, 727], "prove": [677, 849], "return_by_copi": 677, "another_sensor": 677, "assigne": 677, "dubiou": 677, "bugfre": 678, "string_move_suit": 678, "make_a_string_from": 678, "ret_": 678, "move_return": 678, "move_assign": 678, "assig": 678, "person_h": 679, "person_suit": 679, "contructor": 679, "outliv": [680, 1003], "rvr": 680, "ado": [682, 953, 1117], "mytyp": 682, "spellabl": 682, "0x7ffcd604846c": 682, "0x7ffcd6048468": 682, "iref": 682, "0x7ffffefe2b54": 682, "0x7ffffefe2b50": 682, "0x7ffc59ebd7bc": 682, "ciref": 682, "0x7ffc23e46284": 682, "0x7ffe4a148064": 682, "0x7ffc528e013c": 682, "cluster_cxx11_new_language_features_concept": [683, 707, 762, 763], "cxx11_new_language_features_concepts_writing_concept": [683, 707, 762, 763], "cxx11_new_language_features_concepts_intro": [683, 707, 762, 763], "cxx11_new_language_features_concepts_link": [683, 707, 762, 763], "conceptless": 684, "4ul": [684, 685], "4l": [684, 685], "satisfact": 684, "is_integral_v": 684, "_tp": [684, 717, 727], "hendrik": 688, "niemey": 688, "hypotenus": [689, 690, 691, 692, 693], "sumsq": [689, 690, 691, 692, 693], "point2d": [689, 691, 692, 693], "dozen": 689, "ruin": 689, "5l": 689, "same_a": 689, "commone_reference_with": 689, "common_reference_with": [689, 693], "has_siz": [692, 693], "index_returns_doubl": 693, "cluster_cxx11_new_language_features_coroutin": [694, 707, 762, 763], "cxx11_new_language_features_coroutines_intro": [694, 707, 762, 763], "stackless": 695, "asio": 695, "co_return": [695, 699, 700, 701, 702, 703], "hello_inst": [695, 699, 700, 701, 702, 703], "promise_typ": [695, 697, 698, 700, 701, 702, 703], "get_return_object": [695, 697, 698, 700, 701, 702, 703], "suspend_alwai": [695, 697, 698, 700, 701, 702, 703], "initial_suspend": [695, 697, 698, 700, 701, 702, 703], "final_suspend": [695, 697, 698, 700, 701, 702, 703], "return_void": [695, 698, 700, 701, 702, 703], "unhandled_except": [695, 697, 698, 700, 701, 702, 703], "suspend_nev": [695, 697, 698, 702], "coroutine_handl": [695, 697, 698, 701, 702, 703], "from_promis": [695, 697, 698, 701, 702, 703], "_coro": [695, 697], "yield_valu": [695, 697, 698, 701, 702, 703], "sentinel": [695, 698, 702, 703, 717], "_promis": [695, 698, 701, 702, 703], "glue": 695, "deciph": 695, "diagrammat": 695, "wei": 695, "co_yield": [696, 697, 698, 699, 701, 702, 703], "_elem": 697, "ed": [698, 701, 702, 703, 899, 936], "lackingdefaultconstructor": 704, "ldc": 704, "hasdefaultconstructor": 704, "hmpf": 704, "hdc": 704, "ownsmemori": 705, "om_copi": 705, "incontin": 706, "leaf": [706, 889], "method1": 706, "method2": 706, "cluster_cxx11_new_language_features_lambda": [707, 708, 762, 763], "cluster_cxx11_new_language_features_rang": [707, 718, 762, 763], "cxx11_new_language_features_delegating_ctor": [707, 762, 763], "cxx11_new_language_features_range_based_for": [707, 760, 762, 763], "cxx11_new_language_features_fin": [707, 762, 763], "cxx11_new_language_features_structured_bind": [707, 762, 763], "cxx11_new_language_features_livehack_smartptr_mov": [707, 762, 763], "cxx11_smart_pointers_introduction_livehack": [707, 723, 762, 763], "cxx11_new_language_features_range_based_for_map": [707, 762, 763], "cxx11_new_language_features_default": [707, 762, 763], "cxx11_new_language_features_overrid": [707, 762, 763], "cxx11_new_language_features_modul": [707, 762, 763], "cxx11_new_language_features_delet": [707, 762, 763], "cxx11_new_language_features_constexpr": [707, 762, 763], "cxx11_new_language_features_lambda_lambda_captur": [707, 708, 762, 763], "cxx11_new_language_features_lambda_lambda": [707, 708, 762, 763], "cxx11_new_language_features_lambda_lambda_is_functor": [707, 708, 762, 763], "cxx11_new_language_features_lambda_lambda_is_functor_pitfal": [707, 708, 762, 763], "cxx11_new_language_features_ranges_intro": [707, 718, 762, 763], "cxx11_new_language_features_ranges_link": [707, 718, 762, 763], "cxx11_new_language_features_ranges_good_bad": [707, 718, 762, 763], "elsewher": [709, 810, 1010], "lamda": 709, "print_messag": [709, 711, 712], "create_print_funct": [709, 711, 712], "constantli": [710, 827, 969], "mere": 710, "catur": 710, "akin": 710, "lambda_capture_suit": 710, "explicit_by_copi": 710, "lambda_capure_suit": 710, "explicit_by_refer": 710, "dubio": 710, "explicit_mix": 710, "initialized_captur": 710, "all_by_refer": 710, "all_by_copi": 710, "all_by_copy_except": 710, "this_captur": 710, "_i": [710, 730], "add_to_yourself_and_guarantee_programmers_job_secur": 710, "print_message_func": [711, 712], "_messag": [711, 712], "piti": 712, "mpp": 713, "precompil": [713, 810, 984], "speedup": 713, "rei": 713, "bori": 713, "kolpackov": 713, "abandon": 713, "inde": 715, "range_based_for_suit": 716, "map_pre_11": 716, "map_bas": 716, "map_basic_const_auto_refer": 716, "ific": [716, 721], "map_unpack_copi": 716, "map_unpack_refer": 716, "map_unpack_const_refer": 716, "min_el": 717, "forward_rang": [717, 719], "drop_view": 717, "filter_view": 717, "ref_view": 717, "ranges_util": 717, "view_interfac": 717, "_deriv": 717, "sized_sentinel_for": 717, "decltyp": 717, "__cust": 717, "declval": 717, "__cust_access": 717, "__begin": 717, "_s_size": 717, "_m_deriv": 717, "forward_iter": 717, "coll": 717, "2nd": [717, 1150], "__cxx11": [717, 729, 761], "_vp": 717, "__simple_view": 717, "random_access_rang": [717, 719], "sized_rang": 717, "pretend": 717, "comitte": [717, 720], "lazili": 719, "first_two_drop": 719, "first_two_dropped_next_two_taken": 719, "oldstyl": 719, "inspir": 719, "refin": 719, "input_rang": 719, "bidirectional_rang": 719, "backward": [719, 785, 870, 902, 907, 1033, 1137], "contiguous_rang": 719, "tristan": 720, "brindl": 720, "cppnorth": 720, "l0bhzp6hmdm": 720, "nico": 720, "accu": 720, "rust": [720, 984], "parrai": 721, "decompos": 721, "structured_binding_suit": 721, "struct_copi": 721, "struct_refer": 721, "struct_const_refer": 721, "tuple_copi": 721, "make_tupl": 721, "affect": 721, "tuple_refer": 721, "tuple_const_refer": 721, "array_copi": 721, "array_refer": 721, "array_const_refer": 721, "suspici": 721, "designwis": 722, "uptr": 722, "cxx11_smart_pointers_shared_ptr": [723, 732, 740, 760, 762, 763], "cxx11_smart_pointers_weak_ptr": [723, 760, 762, 763], "cxx11_smart_pointers_closing_word": [723, 732, 740, 762, 763], "myclass": [724, 726], "unwind": 724, "yoky6hzlkx": 724, "steal": [725, 970], "cxx11_unique_ptr_sensors_h": 725, "_temp": 725, "basic_const": 725, "raw_": 725, "raw_s_ref": 725, "copy_ctor_bad": 725, "assignment_operator_bad": 725, "gtest_filt": [725, 726, 1148], "reveal": [725, 1003], "vtabl": 725, "autoptr": 725, "copy_ctor_good_autoptr_styl": 725, "unexpectedli": 725, "assignment_operator_good_autoptr_styl": 725, "destiat": 725, "excus": 726, "shared_ptr_suit": 726, "rs1": [726, 727], "rs2": [726, 727], "rand1": [726, 727, 728], "rand2": [726, 727, 728], "cann": 726, "basic_make_shar": 726, "set_refer": 726, "_ref": 726, "cyclic_refer": 726, "303549": 726, "unique_ptr_suit": 727, "threw": 727, "ownership_error": 727, "cxx11": [727, 761], "unique_ptr_suite_ownership_error_test": 727, "testbodi": 727, "_dp": 727, "default_delet": 727, "verbose_ctor": 727, "make_unique_auto": 727, "tranfer": 727, "create_random_sensor": 727, "implicit_ownership_transf": 727, "holdsasensor": 727, "taking_ownership_in_own_cod": 727, "sompil": 727, "raw1": 727, "tie": 728, "unti": 728, "weak_ptr_suit": 728, "borrowed_sensor": 728, "another_refer": 728, "sensor_ref": 728, "measurement_thread": 728, "rvref": 729, "lo_funct": 729, "adventur": 729, "grimm": 729, "jaud": 729, "factset": 729, "570f242261f8": 729, "suffer": [730, 915], "origin_dist": 730, "criteria": [730, 854, 1137], "predic": 730, "void_funct": 730, "bind_suit": 730, "plain_void_funct": 730, "one_parameter_funct": 730, "plain_one_parameter_funct": 730, "minus_hardcod": 730, "_1_minus_2": 730, "minus_swap_paramet": 730, "second_minus_first": 730, "_2": [730, 731], "minus_hardcode_first_paramet": 730, "_42_minus_param": 730, "funcfunc": 730, "tradeoff": [730, 815], "oneimplement": 731, "anotherimplement": 731, "do_much_work": 731, "c_using_on": 731, "c_using_anoth": 731, "explanatori": 731, "trampolin": 731, "rtti": 731, "pod": 731, "metaphys": 731, "ostreamlogg": 731, "databaselogg": 731, "logfunc_t": 731, "funcptrlogg": 731, "somebusinessclasswithneedforlog": 731, "successfulli": [731, 830, 845, 1136, 1143], "do_stupid_log": 731, "ostream_logg": 731, "database_logg": 731, "funcptr_logg": 731, "busy_logging_to_ostream": 731, "busy_logging_to_databas": 731, "busy_logging_to_funcptr": 731, "foo_func": 731, "explos": 731, "cluster_cxx11_functions_funct": [732, 740, 762, 763], "cxx11_functions_functions_funct": [732, 740, 762, 763], "cxx11_functions_functions_bind": [732, 740, 762, 763], "msdn": 733, "devil": 733, "singlethread": 733, "god": 733, "paralleliz": 734, "cancel": [734, 960], "interlockedincr": 736, "mutual": [737, 1018], "try_lock": 737, "try_lock_for": 737, "unavail": 737, "try_lock_until": 737, "time_point": [737, 742], "do_something_errorpron": 738, "do_more_of_it": 738, "wake": [739, 792, 802, 933, 957, 966, 972], "waiter": [739, 802, 827, 957], "stop_wait": 739, "wait_for": [739, 741], "wait_until": [739, 741], "notify_on": 739, "notify_al": 739, "thunder": 739, "herd": 739, "condvar": 739, "threadsafequeu": 739, "maxelem": 739, "_maxelem": 739, "dur": [739, 741], "scoped_lock": [739, 741], "_lock": [739, 741], "pop_front": 739, "2m": [739, 741, 907], "1m": [739, 835, 907], "consumer1": 739, "consumer2": 739, "pthread_cond_init": [739, 957], "_not_empti": 739, "_not_ful": 739, "pthread_cond_wait": [739, 957], "pthread_cond_sign": [739, 957], "pthread_cond_t": [739, 957], "unique_lock": 739, "cluster_linux_sysprog_posix_thread": [740, 762, 763, 906, 947, 961, 967], "cluster_linux_sysprog_schedul": [740, 762, 763, 906, 947, 961, 967, 969], "cluster_linux_sysprog_blocking_io": [740, 762, 763, 840, 843, 844, 906, 935, 947, 961, 967, 969], "cluster_cxx11_multithread": [740, 762, 763], "linux_sysprog_posix_threads_lifecycl": [740, 762, 763, 906, 947, 961, 967], "linux_sysprog_posix_threads_bas": [740, 762, 763, 906, 947, 961, 967], "linux_sysprog_posix_threads_exercise_pthcreate_racecondit": [740, 762, 763, 906, 947, 961, 967], "linux_sysprog_scheduling_bas": [740, 762, 763, 906, 947, 961, 967, 969], "linux_sysprog_posix_threads_condition_vari": [740, 762, 763, 906, 947, 961], "linux_sysprog_posix_threads_exercise_mutex": [740, 762, 763, 906, 947, 961], "linux_sysprog_posix_threads_mutex": [740, 762, 763, 906, 947, 961, 967], "linux_sysprog_blocking_io_blocking_io": [740, 762, 763, 840, 843, 844, 906, 935, 947, 961, 967, 969], "cxx11_multithreading_introduct": [740, 762, 763], "cxx11_multithreading_atom": [740, 762, 763], "cxx11_multithreading_race_condit": [740, 762, 763], "cxx11_multithreading_thread": [740, 762, 763], "cxx11_multithreading_promise_futur": [740, 762, 763], "cxx11_multithreading_chrono": [740, 762, 763], "cxx11_multithreading_scoped_lock": [740, 762, 763], "cxx11_multithreading_mutex": [740, 762, 763], "cxx11_multithreading_condition_vari": [740, 762, 763], "get_futur": 741, "set_except": 741, "exception_ptr": 741, "shared_futur": 741, "uncoordin": 741, "ten_million_years_": 741, "answer_poll_interval_m": 741, "answer_valid": 741, "chew_answ": 741, "timespec": [741, 957, 968, 978], "reaction": [741, 925, 1007], "answer_computation_tim": 741, "answer_poll_interv": 741, "ten_million_year": 741, "lockguard": 741, "_answer_valid": 741, "_answer": 741, "_data": [741, 998], "binary_semaphor": 741, "__cplusplu": 741, "202001l": 741, "_notifi": 741, "answer_promis": 741, "answer_futur": 741, "make_exception_ptr": 741, "epoch": [742, 977], "time_t": 742, "notion": 742, "system_clock": 742, "monoton": [742, 818, 820], "ntp": 742, "steady_clock": 742, "timepoint": 742, "steadili": 742, "high_resolution_clock": 742, "brand": 742, "spent_milli": 742, "duration_cast": 742, "variant_suit": 743, "holds_altern": 743, "converting_ctor": 743, "bad_access": 743, "visit": [743, 748, 752, 762, 763], "int_seen": 743, "float_seen": 743, "charp": 743, "string_charp": 743, "no_default_ctor": 743, "cluster_cxx11_miscellan": [744, 748, 762, 763], "cxx11_miscellaneous_vari": [744, 748, 762, 763], "timur": 745, "doumler": 745, "aligned_alloc": 746, "alignof": 746, "pmr": 746, "heis": [746, 750], "_temperatur": [747, 749, 751, 753], "crtp": [748, 756], "klau": 748, "iglberg": 748, "cluster_cxx11_embedded_problem": [748, 762, 763], "cxx11_embedded_problems_unrel": [748, 762, 763], "cxx11_embedded_problems_related_no_virtu": [748, 762, 763], "cxx11_embedded_problems_variant_manual_if": [748, 762, 763], "cxx11_embedded_problems_variant_manual_visit": [748, 762, 763], "cxx11_embedded_problems_classic_virtu": [748, 762, 763], "cxx11_embedded_problems_variant_automatic_visit": [748, 762, 763], "static_cast": [749, 761], "derivedtyp": 749, "sensorptr": 751, "get_temperature_visitor": [752, 754], "bagcopi": 757, "find_by_int": [757, 758, 759], "remove_by_int": [757, 758, 759], "nremov": [757, 758, 759], "bagshar": 758, "weakref": 758, "sharedref": 758, "baguniqu": 759, "constbag": 759, "cluster_cxx11_exercis": [760, 762, 763], "cxx11_exercises_bag_copi": [760, 762, 763], "cxx11_exercises_bag_uniqu": [760, 762, 763], "cxx11_exercises_bag_shar": [760, 762, 763], "withing": 761, "filesystem_suit": 761, "cd_to_tmpdir_fixtur": 761, "path_compose_compar": 761, "path_compose_compare_2": 761, "is_absolut": 761, "is_rel": 761, "path_abs_rel": 761, "abspath": 761, "relpath": 761, "parent_path": 761, "remove_filenam": 761, "replace_filenam": 761, "replace_extens": 761, "path_component_access": 761, "filename_part": 761, "dir_part": 761, "path_iter": 761, "current_directori": 761, "cwd_chdir": 761, "current_path": 761, "create_directory_error": 761, "filesystem_error": 761, "char_trait": 761, "char_typ": 761, "_chart": 761, "_trait": 761, "_alloc": 761, "_s_copi": 761, "size_typ": 761, "_m_replac": 761, "tcc": 761, "2171": 761, "canonicalizeforstdlibvers": 761, "__builtin_memcpi": 761, "9223372036854775810": 761, "9223372036854775813": 761, "__s1": 761, "__s2": 761, "create_directory_singl": 761, "is_regular_fil": 761, "create_directory_multipl": 761, "is_directori": 761, "is_block_fil": 761, "is_character_fil": 761, "is_empti": 761, "is_fifo": 761, "is_oth": 761, "is_socket": 761, "is_symlink": 761, "greatest": 761, "nov": [761, 800, 866, 892, 914, 998, 1034, 1063], "inod": [761, 769, 776], "919153": 761, "0644": [761, 855, 869], "system_u": 761, "object_r": 761, "passwd_file_t": 761, "s0": 761, "111282886": 761, "0100": 761, "737858445": 761, "743858359": 761, "file_s": 761, "hard_link_count": 761, "last_write_tim": 761, "ext4": [761, 810], "btrf": 761, "ntf": 761, "directory_iter": 761, "subdir1": 761, "subdir2": 761, "file1": [761, 779, 895], "file2": [761, 779, 895], "dirit": 761, "recursive_directory_iter": 761, "cxx11_filesystem": [762, 763], "cluster_unittest": [763, 1146], "cluster_linux_sysprog_intro_hw": [763, 906, 947, 949], "cluster_linux_sysprog_process": [763, 906, 947], "cluster_linux_toolchain_raspi": [763, 906, 989, 991, 994, 995], "cluster_linux_toolchain_cross": [763, 906, 988, 989, 991, 993, 994, 995], "cluster_linux_toolchain_exercis": [763, 906, 989, 990, 991, 992, 993, 994], "cluster_linux_basics_io_redir_pip": [763, 840, 851, 906], "cluster_linux_basics_shell_exercis": [763, 837, 838, 839, 840, 874, 875, 876, 877, 878, 879, 880, 881, 882, 884, 885, 886, 887, 888, 890, 906], "cluster_linux_basics_shell_exercises_cp_mv_mkdir_rm": [763, 837, 838, 839, 840, 874, 875, 876, 877, 878, 879, 880, 881, 882, 884, 890, 906], "cluster_linux_basics_shell_exercises_l": [763, 840, 884, 885, 886, 887, 888, 890, 906], "cluster_linux_basics_archiving_compress": [763, 833, 840, 906, 994, 995], "cluster_linux_basics_permissions_exercis": [763, 840, 856, 859, 860, 861, 862, 863, 864, 865, 906], "cluster_linux_basics_exercis": [763, 837, 838, 839, 840, 906], "cluster_linux_basics_text_tool": [763, 840, 900, 906], "cluster_linux_hardwar": [763, 906, 912, 913], "cluster_linux_hardware_can": [763, 906, 912, 913], "cluster_linux_ssh": [763, 906, 918, 919, 920, 921, 922, 994, 995], "cluster_linux_ssh_exercis": [763, 906, 918, 919, 920, 921, 922], "cluster_linux_kernel": [763, 767, 770, 772, 775, 777, 780, 782, 784, 786, 787, 789, 791, 793, 795, 797, 799, 801, 803, 805, 807, 809, 811, 814, 816, 819, 821, 825, 828, 831, 906], "unittest_gtest_cmak": [763, 1146], "linux_sysprog_ev": [763, 906, 947], "linux_sysprog_sign": [763, 906, 947], "linux_sysprog_ipc": [763, 906, 947], "linux_sysprog_posix_threads_exercise_condition_vari": [763, 906, 947, 961], "linux_sysprog_posix_threads_mutex_trylock": [763, 906, 947, 961], "trylock": [763, 906, 947, 955, 961], "islock": [763, 906, 947, 955, 961], "linux_sysprog_posix_threads_miscellan": [763, 906, 947, 961], "linux_sysprog_posix_threads_last_warn": [763, 906, 947, 961], "linux_sysprog_fileio_dupl": [763, 906, 945, 947, 964], "linux_sysprog_fileio_example_o_rdonli": [763, 906, 945, 947, 964], "o_rdonli": [763, 768, 906, 932, 936, 937, 940, 943, 944, 945, 947, 948, 951, 964, 974, 977, 981], "linux_sysprog_fileio_fileio_group": [763, 906, 945, 947, 964], "linux_sysprog_fileio_example_o_wronli": [763, 906, 945, 947, 964], "linux_sysprog_fileio_basics_exercise_copi": [763, 906, 937, 945, 947, 964], "linux_sysprog_fileio_basics_exercise_hol": [763, 906, 945, 947, 964], "linux_sysprog_fileio_misc": [763, 906, 945, 947, 964], "linux_sysprog_fileio_example_o_creat": [763, 906, 945, 947, 964], "linux_sysprog_fileio_example_o_excl": [763, 906, 945, 947, 964], "o_excl": [763, 906, 936, 937, 945, 947, 964, 977], "linux_sysprog_blocking_io_blocking_io_fil": [763, 840, 843, 844, 906, 935, 947], "linux_sysprog_blocking_io_blocking_io_tim": [763, 906, 935, 947], "linux_sysprog_blocking_io_blocking_io_network": [763, 906, 935, 947], "linux_sysprog_scheduling_processes_and_thread": [763, 906, 947, 967, 969], "linux_sysprog_scheduling_realtime_api": [763, 906, 947, 967], "linux_sysprog_scheduling_realtim": [763, 906, 947, 967, 969], "linux_sysprog_scheduling_wakeup_lat": [763, 906, 947, 967, 969], "linux_sysprog_scheduling_exam_quest": [763, 906, 947, 967, 969], "linux_sysprog_intro_hw_get": [763, 906, 947, 949], "linux_sysprog_intro_hw_sysfs_gpio": [763, 906, 947, 949], "linux_sysprog_intro_hw_watch": [763, 906, 947, 949], "linux_sysprog_process_tre": [763, 906, 947], "linux_sysprog_process_commandlin": [763, 906, 947], "linux_basics_intro_environ": [763, 840, 844, 890, 906, 947, 994, 995], "linux_basics_intro_process_tre": [763, 840, 844, 856, 859, 860, 861, 862, 863, 864, 865, 906, 918, 919, 920, 921, 922, 947, 994, 995], "linux_toolchain_shared_librari": [763, 906, 994], "linux_toolchain_cmake_cross": [763, 906, 994], "linux_toolchain_raspi_detail": [763, 906, 994, 995], "linux_toolchain_cross_bas": [763, 906, 988, 989, 991, 993, 994, 995], "linux_basics_archiving_compression_tar": [763, 833, 840, 906, 994, 995], "linux_ssh_bas": [763, 906, 918, 919, 920, 921, 922, 994, 995], "linux_ssh_scp": [763, 906, 918, 919, 920, 922, 994, 995], "linux_toolchain_raspi_toolchain_setup": [763, 906, 989, 991, 994, 995], "linux_toolchain_raspi_linaro_pi": [763, 906, 994, 995], "defunct": [763, 906, 994, 995], "linux_toolchain_raspi_docker_fedora_wsl": [763, 906, 994, 995], "linux_toolchain_exercises_native_build": [763, 906, 991, 992, 994], "linux_toolchain_exercises_raspberry_toolchain": [763, 906, 991, 993, 994], "linux_toolchain_exercises_cross_build": [763, 906, 989, 991, 994], "linux_toolchain_exercises_fh_moodle_quiz": [763, 906, 990, 991, 994], "linux_basics_io_redir_pipes_pip": [763, 840, 851, 906], "linux_basics_io_redir_pipes_io_redir": [763, 840, 851, 906], "linux_basics_io_redir_pipes_io_redir_swap_stdout_stderr": [763, 840, 851, 906], "linux_basics_io_redir_pipes_exercis": [763, 840, 851, 906], "linux_basics_shell_cp": [763, 837, 838, 839, 840, 874, 875, 877, 878, 881, 882, 884, 890, 906], "linux_basics_shell_configfil": [763, 840, 890, 906], "linux_basics_shell_mv": [763, 840, 890, 906], "linux_basics_shell_link": [763, 840, 890, 906], "linux_basics_shell_fh_moodle_quiz": [763, 840, 883, 890, 906], "linux_basics_shell_exercises_cp_mv_mkdir_rm_mkdir_p_rm_r": [763, 837, 838, 839, 840, 874, 875, 876, 877, 878, 879, 881, 882, 884, 890, 906], "linux_basics_shell_exercises_cp_mv_mkdir_rm_echo_create_fil": [763, 837, 838, 839, 840, 874, 875, 876, 877, 878, 881, 882, 884, 890, 906], "linux_basics_shell_exercises_cp_mv_mkdir_rm_verify_hierarchi": [763, 840, 874, 878, 881, 882, 884, 890, 906], "linux_basics_shell_exercises_cp_mv_mkdir_rm_echo_copy_fil": [763, 840, 874, 875, 878, 881, 882, 884, 890, 906], "linux_basics_shell_exercises_cp_mv_mkdir_rm_echo_move_fil": [763, 840, 874, 877, 878, 881, 882, 884, 890, 906], "linux_basics_shell_exercises_cp_mv_mkdir_rm_copy_tre": [763, 840, 874, 878, 881, 884, 890, 906], "linux_basics_shell_exercises_cp_mv_mkdir_rm_rm_tre": [763, 840, 878, 881, 884, 890, 906], "linux_basics_shell_exercises_cp_mv_mkdir_rm_rm_rf": [763, 840, 878, 880, 884, 890, 906], "linux_basics_shell_exercises_ls_etc_passwd_s": [763, 840, 884, 886, 887, 890, 906], "linux_basics_shell_exercises_ls_dev_typ": [763, 840, 884, 885, 887, 890, 906], "linux_basics_shell_exercises_ls_home_permiss": [763, 840, 884, 887, 888, 890, 906], "linux_basics_archiving_compression_exercis": [763, 833, 840, 906], "linux_basics_archiving_compression_gzip": [763, 833, 840, 906, 994, 995], "linux_basics_archiving_compression_overview": [763, 833, 840, 906, 994, 995], "linux_basics_intro_fh_moodle_quiz": [763, 840, 843, 844, 906], "linux_basics_intro_demo_everything_is_a_fil": [763, 840, 843, 844, 906], "linux_basics_intro_login": [763, 840, 844, 856, 859, 860, 861, 862, 863, 864, 865, 906, 918, 919, 920, 921, 922, 994, 995], "linux_basics_intro_wsl": [763, 840, 844, 906], "linux_basics_permissions_setuid_livedemo": [763, 840, 865, 906], "linux_basics_permissions_setuid": [763, 840, 865, 906], "linux_basics_permissions_sticki": [763, 840, 865, 906], "linux_basics_permissions_fh_moodle_quiz_nocheat": [763, 840, 858, 865, 906], "linux_basics_permissions_fh_moodle_quiz": [763, 840, 857, 865, 906], "linux_basics_permissions_umask": [763, 840, 865, 906], "linux_basics_permissions_exercises_private_directori": [763, 840, 859, 860, 861, 865, 906], "linux_basics_permissions_exercises_credenti": [763, 840, 856, 859, 860, 861, 862, 863, 864, 865, 906], "linux_basics_permissions_exercises_public_directory_quest": [763, 840, 859, 863, 865, 906], "linux_basics_permissions_exercises_public_directori": [763, 840, 859, 862, 863, 865, 906], "linux_basics_permissions_exercises_shared_fil": [763, 840, 859, 864, 865, 906], "linux_basics_permissions_exercises_private_directory_quest": [763, 840, 859, 861, 865, 906], "linux_basics_exercises_fh_ss2022_exam_01_g2": [763, 838, 839, 840, 906], "linux_basics_exercises_fh_ss2022_exam_01_g1": [763, 837, 839, 840, 906], "linux_basics_text_tools_overview": [763, 840, 900, 906], "linux_basics_text_tools_grep": [763, 840, 900, 906], "linux_basics_text_tools_less": [763, 840, 900, 906], "linux_basics_text_tools_head_tail": [763, 840, 900, 906], "linux_basics_text_tools_cat": [763, 840, 900, 906], "linux_basics_text_tools_cut": [763, 840, 900, 906], "linux_basics_text_tools_exercis": [763, 840, 900, 906], "linux_basics_text_tools_find": [763, 840, 900, 906], "linux_hardware_w1": [763, 906, 913], "linux_hardware_brushless_motor": [763, 906, 913], "brushless": [763, 906, 913], "linux_hardware_pwm": [763, 906, 913], "linux_hardware_i2c": [763, 906, 913], "linux_hardware_can_program": [763, 906, 912, 913], "linux_hardware_can_hardwar": [763, 906, 912, 913], "linux_hardware_can_interfac": [763, 906, 912, 913], "linux_hardware_can_intro": [763, 906, 912, 913], "linux_ssh_key_pair": [763, 906, 918, 919, 920, 921, 922], "linux_ssh_portforward": [763, 906, 922], "linux_ssh_link": [763, 906, 922], "linux_ssh_sshf": [763, 906, 922], "linux_ssh_exercises_pubkei": [763, 906, 918, 919, 920, 921, 922], "linux_ssh_exercises_copy_fil": [763, 906, 918, 919, 920, 922], "linux_ssh_exercises_copy_tre": [763, 906, 919, 920, 922], "linux_kernel_workqueu": [763, 787, 825, 828, 831, 906], "linux_kernel_timer_cod": [763, 787, 819, 825, 828, 831, 906], "linux_kernel_process_vs_atom": [763, 772, 777, 780, 782, 787, 791, 793, 797, 801, 803, 805, 807, 809, 814, 816, 819, 821, 825, 828, 831, 906], "linux_kernel_spinlock_cod": [763, 787, 814, 819, 825, 828, 831, 906], "linux_kernel_tim": [763, 787, 819, 821, 825, 828, 831, 906], "linux_kernel_modules_hello_world": [763, 767, 770, 772, 775, 777, 780, 787, 789, 791, 795, 801, 807, 814, 819, 825, 828, 831, 906], "linux_kernel_fedora_module_build": [763, 767, 770, 772, 775, 777, 780, 786, 787, 789, 791, 795, 801, 807, 814, 819, 825, 828, 831, 906], "linux_kernel_fedora_kernel_build": [763, 767, 770, 772, 775, 777, 780, 784, 786, 787, 789, 791, 795, 801, 807, 814, 819, 825, 828, 831, 906], "linux_kernel_interrupt": [763, 787, 791, 793, 805, 807, 814, 819, 825, 828, 831, 906], "linux_kernel_spinlock": [763, 787, 814, 816, 819, 825, 828, 831, 906], "linux_kernel_mutex_cod": [763, 787, 791, 801, 814, 819, 825, 828, 831, 906], "linux_kernel_multiple_devic": [763, 777, 787, 791, 801, 814, 819, 825, 828, 831, 906], "linux_kernel_mutex": [763, 787, 791, 801, 803, 814, 819, 825, 828, 831, 906], "linux_kernel_cdev_refactor": [763, 777, 780, 787, 791, 801, 814, 819, 825, 828, 831, 906], "linux_kernel_cdev_first_function": [763, 772, 777, 780, 787, 791, 801, 814, 819, 825, 828, 831, 906], "linux_kernel_cdev_file_oper": [763, 770, 772, 777, 780, 787, 791, 801, 814, 819, 825, 828, 831, 906], "linux_kernel_kmalloc": [763, 772, 777, 780, 782, 787, 791, 801, 805, 807, 814, 819, 825, 828, 831, 906], "linux_kernel_list": [763, 772, 777, 780, 787, 791, 799, 801, 814, 819, 825, 828, 831, 906], "doubli": [763, 772, 776, 777, 780, 787, 791, 800, 801, 812, 814, 819, 825, 828, 831, 906], "linux_kernel_cdev_auto": [763, 767, 770, 772, 777, 780, 787, 791, 801, 814, 819, 825, 828, 831, 906], "linux_kernel_stub_sysprog_dup": [763, 770, 772, 777, 780, 787, 791, 801, 814, 819, 825, 828, 831, 906], "dup": [763, 769, 770, 772, 777, 780, 787, 791, 801, 814, 819, 825, 828, 831, 853, 906, 939, 978], "stub": [763, 770, 772, 777, 780, 787, 791, 801, 814, 819, 825, 828, 831, 906, 997], "linux_kernel_pci": [763, 787, 807, 906], "linux_kernel_iomemori": [763, 787, 795, 807, 906], "linux_kernel_dma": [763, 782, 787, 805, 807, 906], "linux_kernel_netdev": [763, 787, 805, 906], "linux_kernel_interrupt_cod": [763, 787, 791, 814, 819, 825, 828, 831, 906], "linux_kernel_raspi_kernel_build": [763, 787, 791, 811, 814, 819, 825, 828, 831, 906], "linux_kernel_cdev_manu": [763, 767, 770, 772, 775, 777, 780, 787, 791, 801, 814, 819, 825, 828, 831, 906], "linux_kernel_usermem": [763, 787, 825, 828, 906], "linux_kernel_waitqueu": [763, 787, 828, 906], "interconnect": 764, "device_cr": [765, 766, 769], "cdev_init": [765, 773, 774], "cdev_add": [765, 773, 774], "unhappi": 765, "device_destroi": 765, "my_class": 765, "my_driv": [765, 768, 778, 779, 790, 800, 806, 812, 818, 829], "mknod": [765, 773, 774], "character devic": [766, 769, 774, 1166], "relatim": 766, "register_chrdev_region": [766, 773, 774], "alloc_chrdev_region": [766, 774], "htmldoc": 766, "chrdev": 766, "dev_t": [766, 774], "baseminor": 766, "highlight": 766, "bug_on": 766, "module_licens": [766, 788], "openat": [768, 932], "at_fdcwd": [768, 932], "0x7f3d11330000": 768, "einval": [768, 773, 788, 826], "enotti": 768, "file_oper": [769, 773, 774, 812], "citizenship": 769, "__user": [769, 824], "loff_t": 769, "unlocked_ioctl": 769, "my_op": 769, "this_modul": 769, "my_open": 769, "my_read": 769, "my_writ": 769, "my_ioctl": [769, 800], "mode_t": [769, 936, 940, 978], "filp": [769, 812, 826], "vf": 769, "swiss": [769, 936, 1161], "armi": [769, 936, 1161], "my_ioctl_request": [769, 771], "my_request_such": 769, "my_request_such_and_such": 769, "laden": [769, 1175], "endod": 769, "_iow": 769, "_ior": 769, "_ioc": 769, "_ioc_non": 769, "_ioc_read": 769, "_ioc_typecheck": 769, "_ioc_writ": 769, "_iowr": 769, "my_ev": [771, 778, 779, 818, 823], "my_event_typ": 771, "my_event_ioctl": 771, "jiffi": [771, 812, 818], "my_event_list": [771, 778, 779, 800], "list_head": [771, 798, 800, 823], "num_ev": 771, "my_event_list_init": 771, "my_event_list_destroi": 771, "my_event_list_add": [771, 800, 813, 818, 829], "my_ioctl_add_ev": 771, "printk": [771, 788, 790, 829], "unregister_chrdev_region": [773, 774], "caveat": [773, 812, 915], "register_chrdev": 773, "unregister_chrdev": 773, "kern_err": 773, "cdev_del": [773, 774], "my_driver_henkel": 773, "kmem": 774, "opaqu": 774, "majmin": 774, "mkdev": 774, "drivernam": 774, "my_fop": 774, "my_cdev": 774, "devicefil": 774, "ndevic": 776, "module_param": 776, "my_devic": [776, 778, 779, 790, 806, 818], "private_data": [776, 806, 812], "kbuild": [778, 779], "torn": [778, 1153], "ccflag": [778, 779], "container_of": [779, 830], "file3": 779, "distinct": [779, 846, 930, 1057], "my_device_init": 779, "my_device_destroi": [779, 818], "everyt": 781, "vmalloc": 781, "ioremap": [781, 794], "iommu": 781, "pysic": 781, "dma_addr_t": 781, "alloc_pag": 781, "gfp_mask": 781, "get_free_pag": 781, "__get_free_pag": 781, "2order": 781, "__get_dma_pag": 781, "zone": 781, "__free_pag": 781, "free_pag": 781, "addr": [781, 794, 806, 910, 915, 933, 977, 1141], "dma_handl": 781, "cpu_addr": [781, 806], "dma_alloc_coher": 781, "gfp": [781, 796, 822], "dma_free_coher": 781, "pci_dev": [781, 806], "gfp_kernel": [781, 796, 813], "gfp_atom": [781, 796], "dma_bidirect": 781, "dma_to_devic": 781, "dma_from_devic": 781, "dma_map_singl": 781, "dma_mapping_error": 781, "fuck": 781, "dma_unmap_singl": 781, "dma_map_pag": 781, "dma_unmap_pag": 781, "dma_address": 781, "sglist": 781, "sg_run": 781, "dma_map_sg": 781, "for_each_sg": 781, "hw_address": 781, "sg_dma_address": 781, "hw_len": 781, "sg_dma_len": 781, "dma_unmap_sg": 781, "nent": 781, "unmap": [781, 806], "recreat": [781, 882, 1000], "dma_sync_single_for_cpu": 781, "dma_sync_sg_for_cpu": 781, "mel": [781, 796], "gorman": [781, 796], "incredibli": 781, "transcript": [783, 810, 1107], "building_a_custom_kernel": 783, "fc33": [783, 788], "extravers": [783, 811], "cleanli": 783, "uncommit": 783, "j6": 783, "fedpkg": 783, "pesign": 783, "grubbi": 783, "33rd": 783, "f33": 783, "builddep": 783, "libexec": [783, 996], "symver": [785, 788], "modpost": [785, 788], "module_src": 785, "kernel_build": 785, "install_mod_path": [785, 810], "modules_instal": [785, 810, 914], "fedora_kernel_build": 787, "fedora_module_build": 787, "modules_hello_world": 787, "cdev_manu": 787, "process_vs_atom": 787, "stub_sysprog_dup": 787, "cdev_auto": 787, "cdev_file_oper": 787, "cdev_first_function": 787, "cdev_refactor": 787, "multiple_devic": 787, "mutex_cod": 787, "raspi_kernel_build": 787, "interrupt_cod": 787, "spinlock_cod": 787, "timer_cod": 787, "usermem": 787, "iomemori": 787, "waitqueu": [787, 1166], "netdev": 787, "ldd3": [787, 798], "reilli": [787, 899], "probe": [788, 914, 915, 916], "hello_init": 788, "kern_debug": 788, "hello_exit": 788, "module_init": 788, "module_exit": 788, "exot": 788, "currect": [788, 883], "lsmod": [788, 914, 915, 916], "insmod": 788, "rmmod": [788, 818], "dep": 788, "softdep": 788, "rebuilt": 788, "cross_compil": [790, 810, 811], "libssl": [790, 914], "gpio_request": 790, "gpio_fre": 790, "gpio_direction_input": 790, "gpio_direction_output": 790, "gpio_to_irq": 790, "my_device_activate_gpio": 790, "_destroi": 790, "3f200000": 790, "pinctrl": 790, "bcm2835": [790, 911], "request_irq": [790, 792, 806], "free_irq": [790, 792, 806], "priorit": [792, 808, 908, 966, 978], "preempt_rt": [792, 802, 1156], "mainlin": [792, 810, 970, 1156], "irqreturn_t": [792, 806], "irq_handl": [792, 806], "irq": [792, 806, 808, 812, 968], "opqu": 792, "irq_non": 792, "irq_wake_thread": 792, "irq_handler_t": 792, "irqf_shar": [792, 806], "irqf_trigger_ris": 792, "irqf_trigger_fal": 792, "irqf_trigger_high": 792, "irqf_trigger_low": 792, "iomem": 794, "ioport": 794, "request_mem_region": 794, "0x20200000": 794, "release_mem_region": 794, "asm": [794, 999], "iounmap": 794, "ioread8": 794, "ioread16": 794, "ioread32": 794, "iowrite8": 794, "u8": 794, "iowrite16": 794, "u16": 794, "iowrite32": 794, "u32": 794, "kmalloc kfre": 796, "dynamic memori": 796, "slab": 796, "gfp_t": [796, 813, 829], "kzalloc": 796, "kfree": 796, "scarc": 796, "discourag": 796, "stolen": [798, 907], "some_list": 798, "init_list_head": 798, "some_data": 798, "list_add": 798, "list_add_tail": 798, "new_payload": 798, "existing_payload": 798, "prepend": [798, 810, 842, 1045], "list_for_each": 798, "list_entri": 798, "cursor": [798, 870, 1117], "run_payload": 798, "list_empti": 798, "list_first_entri": 798, "list_del": [798, 800], "a_payload": 798, "inject": [800, 813, 818, 1120], "opfer": 800, "corrupt": 800, "ffff91285ae68f00": 800, "ffff9128406cec00": 800, "list_debug": 800, "0x70": [800, 915], "0xb0": 800, "0xdd": 800, "ksys_ioctl": 800, "0x82": 800, "0xc0": 800, "__x64_sys_ioctl": 800, "do_syscall_64": 800, "0x4d": 800, "entry_syscall_64_after_hwfram": 800, "0x44": 800, "0xa9": 800, "unprotect": [800, 812, 1028], "nevent": [800, 823], "my_device_list": 800, "preemptibl": [802, 970], "preemption": [802, 808, 815, 915, 966, 969, 970], "holder": [802, 1026], "mutex_init": 802, "mutex_destroi": 802, "mutex_lock": 802, "mutex_lock_interrupt": 802, "eintr": [802, 928, 981, 982], "mutex_lock_interruptible_nest": 802, "mutex_trylock": 802, "eagain": [802, 812, 826], "mutex_unlock": 802, "torvald": [802, 810], "trickl": 802, "rtmutex": 802, "rt_mutex": 802, "net_devic": 804, "alloc_netdev": 804, "sizeof_priv": 804, "netdev_priv": 804, "funcion": 804, "ethernet": 804, "etherdevic": 804, "alloc_etherdev": 804, "free_netdev": 804, "register_netdev": 804, "unregister_netdev": 804, "devinc": 804, "hard_start_xmit": 804, "sk_buff": 804, "skb": 804, "transmiss": [804, 933, 1104], "tx_timeout": 804, "quota": [804, 836], "stead": 804, "do_ioctl": 804, "ifreq": [804, 910], "ifr": [804, 910], "netif_start_queu": 804, "netif_stop_queu": 804, "netif_wake_queu": 804, "udevd": 806, "pci_device_id": 806, "my_id": 806, "pci_devic": 806, "0xdead": 806, "0xbeef": 806, "0xbeee": 806, "module_device_t": 806, "my_prob": 806, "my_remov": 806, "my_suspend": 806, "pm_message_t": 806, "my_resum": 806, "my_shutdown": 806, "pci_driv": 806, "id_tabl": 806, "my_init": 806, "pci_register_driv": 806, "my_exit": [806, 1015], "pci_unregister_driv": 806, "subsystem_vendor": 806, "subsystem_devic": 806, "u64": [806, 820], "dma_mask": 806, "device_count_resourc": 806, "pci_enable_devic": 806, "pdev": 806, "wizardri": 806, "pci_request_region": 806, "pci_set_mast": 806, "pci_clear_mast": 806, "pci_set_dma_mask": 806, "pci_set_drvdata": 806, "ioread": 806, "iowrit": 806, "pci_resource_len": 806, "bar_no": 806, "__iomem": 806, "pci_iomap": 806, "pci_iounmap": 806, "pci_alloc_consist": 806, "os_devic": 806, "_o": 806, "dma_addr": 806, "pci_free_consist": 806, "_size": 806, "_cpu_addr": 806, "t_os_dma_addr__get_n": 806, "_dma_addr": 806, "_os_devic": 806, "dma_bit_mask": 806, "pci_set_consistent_dma_mask": 806, "config_debug_atomic_sleep": [808, 813], "cross compil": 810, "educ": 810, "raspberrypi": [810, 811, 914, 986, 993], "borrow": 810, "pi2": 810, "1gb": 810, "canon": [810, 927], "workstat": 810, "hf": 810, "armv6j": 810, "hardfloat": 810, "gnueabi": 810, "objcopi": 810, "raspberry_pi": 810, "local_overlai": 810, "ebuild": 810, "binutil": [810, 811], "repo_nam": 810, "9999": 810, "sourcedir": 810, "builddir": 810, "buildparam": 810, "kconfig": 810, "zconf": 810, "raspbian": 810, "bootdir": 810, "bootf": 810, "rootf": 810, "kernel7": 810, "Then": [810, 925, 1124], "assimil": 810, "bcmrpi_defconfig": 810, "bcm2709_defconfig": 810, "config_localvers": 810, "config_ikconfig": 810, "eveytim": 810, "config_can_mcp251x": 810, "config_sensors_lm73": 810, "zimag": [810, 811, 914], "dtb": [810, 811, 914], "j3": 810, "mkknlimg": 810, "te": 810, "superus": 810, "jtf": 810, "bcm2709": 810, "smi": 810, "ft5406": 810, "can1": [810, 909], "v7": [810, 811], "ipv4": [810, 1178], "xfrm4_mode_beet": 810, "inet_lro": 810, "esp4": 810, "xfrm4_mode_transport": 810, "udp_tunnel": 810, "sdb": 810, "57344": 810, "sdb1": 810, "4162560": 810, "sdb2": 810, "enjoi": 810, "ec2aa3d2": 810, "eee7": 810, "454e": 810, "d145df5ddcba": 810, "agnost": 810, "urg": 810, "rasperri": [811, 914, 916, 1165, 1172], "patchlevel": 811, "sublevel": 811, "_morph": [812, 822], "my_driver_hello": 812, "my_driver_cdev_manu": 812, "my_driver_cdev_dynamic_major": 812, "my_driver_cdev_file_oper": 812, "my_driver_cdev_first_function": 812, "my_driver_cdev_refactor": 812, "my_driver_multiple_devic": 812, "my_driver_mutex": 812, "my_driver_interrupt": 812, "my_driver_spinlock_atom": 812, "my_driver_time_tim": 812, "my_driver_workqueu": 812, "my_driver_usermem": 812, "copy_": 812, "my_driver_waitqueu": 812, "nonblock": [812, 826, 978, 1178], "spinlock_t": [813, 815], "isr": [813, 970, 1166], "spin_unlock": [813, 815], "reenabl": 813, "uniprocessor": 815, "multiprocessor": 815, "spin_lock_init": 815, "spin_lock": 815, "spin_trylock": 815, "irqflag": 815, "spin_lock_irqsav": 815, "spin_unlock_irqrestor": 815, "pend": [818, 847, 970, 983], "my_inject_deferred_ev": 818, "my_device_add_deferred_ev": 818, "del_timer_sync": [818, 820], "paranoia": 818, "symmetri": 818, "my_device_add_ev": 818, "my_inject_ev": 818, "tick": 820, "config_hz": 820, "friendli": [820, 1058, 1127, 1131], "hrtimer": 820, "jiffies_to_msec": 820, "jiffies_to_usec": 820, "jiffies_to_nsec": 820, "msecs_to_jiffi": 820, "usecs_to_jiffi": 820, "timespec64_to_jiffi": 820, "timespec64": 820, "jiffies_to_timespec64": 820, "timer_list": 820, "my_tim": 820, "timerfunc": 820, "timer_setup": 820, "add_tim": 820, "del_tim": 820, "0520": 822, "0521": 822, "0525": 822, "0532": 822, "0710": 822, "preempt": [822, 966, 970], "caption": 822, "backlink": 822, "my_event_nod": 823, "my_get_one_ev": [823, 826], "my_device_get_one_ev": 823, "my_event_get_one_ev": 823, "efault": [823, 824], "uaccess": 824, "copy_to_us": 824, "copy_from_us": 824, "enosi": 826, "timerfd": [826, 934, 974], "f_flag": 826, "wait_queue_head_t": 827, "wq": [827, 829, 830], "init_waitqueue_head": 827, "sched": 827, "wait_ev": 827, "wait_event_interrupt": 827, "wait_event_timeout": 827, "timeout_jiffi": 827, "wait_event_interruptible_timeout": 827, "wake_up": 827, "wake_up_interrupt": 827, "task_interrupt": 827, "create_workqueu": [829, 830], "destroy_workqueu": [829, 830], "eo": 829, "rtprio": 829, "work_struct": [829, 830], "init_work": [829, 830], "chrt": [829, 970], "workqueue_struct": 830, "work_func_t": 830, "queue_work": 830, "packen": 832, "gunzip": 834, "zgrep": 834, "zcat": 834, "zless": 834, "intact": [834, 1083, 1087], "viro": 835, "cpio": 835, "cleaner": 835, "archivformat": 835, "lzma": 835, "430mb": 835, "95mb": 835, "74mb": 835, "5m": [835, 907], "64mb": 835, "togeht": 836, "gfs2": 836, "zcf": 836, "decompress": [836, 996], "zxf": 836, "ztf": 836, "dirt": 836, "livingroom": 836, "grumbl": 836, "reat": 836, "tract": 836, "ell": [836, 870], "vv": 836, "supplementari": [837, 838, 845, 847], "1021": [837, 838, 845], "somefil": [837, 838, 876], "chgrp": [837, 838, 855, 862, 864], "fellow": [837, 838], "picki": [837, 838, 1020], "ttyusb1": 841, "stick": [841, 845], "2006854": 841, "sdc": 841, "2006823": 841, "deserv": [841, 899, 960, 986], "trash": [841, 870], "burn": [841, 916], "1mib": 841, "1mibf": 841, "0m": [841, 892, 968], "mkf": 841, "entropi": 841, "my_vari": 842, "1034184": 842, "1035812": 842, "ancestor": [842, 848, 926], "decriptor": [843, 942], "getti": 845, "kerbero": [845, 847], "gnome3": 845, "agetti": 845, "cleartext": [845, 866], "brute": [845, 923, 986], "crack": 845, "attack": [845, 923, 1001, 1120, 1164], "hierarch": 846, "peripher": [846, 1165, 1172], "grand": 846, "ten_integ": 847, "unfair": [847, 970], "dialout": [847, 942], "seg": 847, "kbyte": 847, "62715": 847, "819200": 847, "pstree": 848, "modemmanag": 848, "journ": 848, "abrtd": 848, "auditd": 848, "bluetoothd": 848, "cupsd": 848, "lau": 848, "tini": [848, 984], "enemi": 849, "guidanc": 849, "dicdat": 849, "acknowledg": [849, 907], "seamless": [849, 1133], "exampk": 849, "altruism": 849, "mkfifo": [850, 854], "stdin_fileno": [852, 936, 946, 982, 1058], "stdout_fileno": [852, 932, 933, 936, 942, 968, 977, 981, 982, 1058], "stderr_fileno": [852, 936, 1058], "religi": 852, "fed": 852, "filefor": 852, "weekli": 853, "compet": [854, 915], "award": [854, 901], "plumber": 854, "sniff": 854, "fifo": [854, 936, 1177], "rendezv": 854, "unnam": 854, "chown": [855, 867, 998], "useradd": [855, 998], "groupadd": 855, "usermod": 855, "groupmod": 855, "teammember42": 855, "manfromthestreet": 855, "jun": [855, 986], "triplet": 855, "1003": 855, "110100100": 855, "110000000": 855, "0600": 855, "111101101": 855, "0755": 855, "bitmask": [855, 866, 982], "1317": 866, "mdmckqvpfaqquqypvzjjkihsbkkcniogknxtiobvbfw8u7zuf3": 866, "0g2rqr9cnydnqq5unt": 866, "wpu8jyzeuxktapl0": 866, "burnout": 866, "retyp": 866, "rwsr": [866, 867], "32712": 866, "rwxrwxrwx": 866, "4755": [866, 867], "uid_t": 867, "getuid": 867, "geteuid": 867, "rwxrwxr": [867, 932, 984, 985, 986], "24456": 867, "drwxrwxrwt": 868, "0022": 869, "strain": 870, "injuri": 870, "diseas": 870, "outout": 870, "20k": 870, "olevel": 870, "debugopt": 870, "expr1": 870, "expr2": 870, "daystart": 870, "regextyp": 870, "synopsi": 870, "findu": 870, "til": 870, "findutil": 870, "pression": 870, "print0": 870, "keystrok": 870, "noob": [870, 1031], "pos1": 870, "misconfigur": 870, "esc": 870, "freak": 870, "cvsserver": 870, "gitview": 870, "oesterreich": 870, "clearanc": 870, "e7d76d19": 870, "dd3d": 870, "4d52": 870, "2c16dc73f9d1_vstv_921302213705_2021___vstvf": 870, "boardingpass_1d9xf3dvd1uzt00tsswu68duh": 870, "gif": [870, 1121], "einkommensteuerbescheid1": 870, "boardingpass_b6uy9xqgeojspx1hxshogcbbq": 870, "einkommensteuervorauszahlungsbescheid1": 870, "immobilienbewertung": 870, "etw": 870, "confirm": 870, "ova": 870, "umsatzsteuerbescheid1": [870, 892, 893], "h0020211105124337": 870, "vk9vst311192021_0022021": 870, "img_": 872, "jpg": 872, "bilder": 872, "121751": 873, "op": [873, 1059], "garbage1": [874, 875, 877, 881, 882], "garbage2": [874, 875, 877, 881, 882], "diretori": 876, "sweetheart": [876, 882, 889, 963], "citi": 876, "mqueue": [885, 977], "leavel": 889, "hintingx": 892, "1048576": 892, "drwx": [892, 894], "36817": 892, "umsatzsteuerbescheid": 893, "finanzamt": 893, "abgab": 893, "neighbor": [894, 1115], "enat": 895, "dereferenzieren": 897, "50k": [897, 898], "rekursiv": 898, "eintr\u00e4g": 898, "unterhalb": 898, "gefiltert": 898, "un\u00fcblich": 898, "gebr\u00e4uchlich": 898, "geh\u00f6ren": 898, "mmin": 898, "h\u00f6chsten": 898, "gefundenem": 898, "eintrag": 898, "heissen": 898, "beginnen": 898, "versteht": 898, "vergessen": 898, "j\u00fcnger": 898, "verkn\u00fcpft": 898, "metacharact": [898, 917], "gr\u00f6\u00dfer": 898, "lobal": 899, "egular": 899, "xpression": 899, "rint": 899, "sed": [899, 1165, 1172], "tream": 899, "itor": 899, "verb": 899, "insensit": [899, 1132], "entor": 899, "perlr": 899, "perlretut": 899, "perlrequick": 899, "jeffrei": 899, "friedl": 899, "philosopi": 903, "toether": 903, "hc": 903, "325324": 903, "xarg": 903, "bitbak": 905, "behan": 905, "webster": 905, "drone": 907, "electronic speed control": 907, "vehicl": 907, "rack": 907, "recognit": [907, 1115], "flight": 907, "fritz": [907, 915], "brigh": 907, "heinrich": 907, "polar": 907, "uevent": [907, 914, 915, 916, 950], "cheapest": 907, "quicrun": 907, "16bl30": 907, "brake": 907, "11v": 907, "conclud": [907, 915], "lipo": 907, "madli": 907, "transmitt": 907, "throttl": 907, "neutral": [907, 1117], "chop": 907, "kindli": [907, 1121], "mechatron": 907, "50hz": 907, "nanosecond": [907, 915, 934], "20000000": [907, 1018], "oscil": 907, "10bl60": 907, "000n": 907, "1500000": [907, 972], "2000000": 907, "1550000": 907, "1600000": 907, "acceler": 907, "1650000": 907, "1700000": 907, "1750000": 907, "1800000": 907, "1850000": 907, "1900000": 907, "1950000": 907, "logist": [907, 1115], "hobbi": 907, "can bu": [908, 909, 910, 911], "sinowatz": [908, 1008], "volkswagen": 908, "traffic": 908, "octet": 908, "arbitr": 908, "can_fram": [908, 910], "canid_t": [908, 910], "can_id": [908, 910], "eff": [908, 910], "rtr": [908, 910], "__u8": [908, 910], "can_dlc": [908, 910], "__attribute__": [908, 910], "can0": [909, 910], "noarp": 909, "qdisc": 909, "qlen": 909, "relic": 909, "cansend": 909, "candump": 909, "canplay": 909, "cangen": 909, "snif": 909, "loopback": 909, "pf_can": 910, "sockaddr_can": 910, "sock_raw": 910, "can_raw": 910, "ifr_nam": 910, "siocgifindex": 910, "can_famili": 910, "af_can": 910, "can_ifindex": 910, "ifr_ifindex": 910, "sockaddr": [910, 933], "can_socket": 910, "packt": 910, "frame_layout": 910, "ib3x8": 910, "frame_s": 910, "calcsiz": 910, "recvfrom": 910, "sendto": 910, "lnxpp": 911, "can2udp": 911, "openwrt": 911, "asymmetrisch": 911, "mosi": 911, "miso": 911, "sclk": 911, "broadcom": 911, "ce0": 911, "3v": [911, 914], "5v": [911, 914], "transceiv": 911, "inter intergrated circuit": 914, "lm-sensor": 914, "handwork": [914, 916], "texa": 914, "maker": 914, "dtparam": [914, 915, 916], "i2c_arm": [914, 915, 916], "gpio2": 914, "gpio3": 914, "i2c_bcm2835": [914, 915, 916], "fe804000": [914, 916, 950], "i2c_dev": [914, 915], "sot": 914, "7v": 914, "rail": 914, "capacitor": 914, "idc": 914, "gnd": [914, 916], "vdd": 914, "smbdat": 914, "smbclk": 914, "unconnect": 914, "0x49": 914, "0x4a": 914, "jumper": 914, "3v3": [914, 916], "scl": [914, 916], "probl": 914, "i2c_slav": 914, "0x0703": 914, "o_rdwr": [914, 936, 943, 977], "msb_lsb": 914, "msb": 914, "lsb": [914, 985], "65535": 914, "dev_fd": 914, "perror": [914, 928, 932, 933, 934, 940, 941, 942, 943, 948, 951, 968, 974, 977, 981], "libncurs": 914, "bcm2711_defconfig": 914, "v7l": 914, "semiconductor": 914, "j4": 914, "kernel7l": 914, "new_devic": [914, 916], "0048": 914, "modalia": 914, "preinstal": 914, "hwmon0": 914, "thermal": 914, "thermal_zone0": 914, "hwmon1": [914, 916], "temp1_max": 914, "temp1_max_alarm": 914, "temp1_min": 914, "temp1_min_alarm": 914, "update_interv": 914, "milli": [914, 916], "22000": 914, "randomli": [914, 916], "nomenclatur": 914, "pulse width modul": 915, "resistor": 915, "bright": 915, "potentiomet": 915, "ssop": 915, "0b1000000": 915, "buse": [915, 916], "i2cdetect": [915, 916], "charactr": 915, "pca": 915, "simultan": [915, 981], "peculiar": 915, "pca9685a": 915, "nxp": 915, "dtoverlai": [915, 916], "pwm_pca9685": 915, "regmap_i2c": 915, "3f804000": 915, "0040": [915, 950], "npwm": 915, "unexport": [915, 950], "butt": [915, 996], "intercept": [915, 1007], "dim": 915, "fade": 915, "800000": [915, 1113], "600000": [915, 1113], "50000": 915, "apolog": 915, "kenel": 915, "devlop": 915, "pleasur": 915, "cornerston": 916, "unstabl": 916, "parasit": 916, "bitbang": 916, "gpiopin": 916, "profession": 916, "addon": 916, "pinout": 916, "01144fe43baa": 916, "w1_bus_master8": 916, "w1_bus_master1": 916, "amaz": 916, "400000000000": 916, "800000000000": 916, "behalf": [916, 930, 984], "ad0": 916, "ad1": 916, "ad2": 916, "vcc": 916, "0x18": 916, "0b0011000": 916, "shortli": [916, 1007], "execstart": 916, "36864": 916, "w1_bus_master2": 916, "w1_bus_master3": 916, "w1_bus_master4": 916, "w1_bus_master5": 916, "w1_bus_master6": 916, "w1_bus_master7": 916, "busno": 916, "abtract": 916, "prepackag": 916, "afford": 916, "alarm": [916, 980, 983], "conv_tim": 916, "w1_slave_driv": 916, "eeprom": 916, "ext_pow": 916, "w1_slave": 916, "22750": 916, "crc": 916, "rpi_volt": 916, "isa": 916, "in0": 916, "cpu_therm": 916, "temp1": 916, "w1_slave_temp": 916, "reliabl": 916, "radiou": 916, "disappear": 916, "0c4000000000": 916, "0x28": 916, "dalla": [916, 944], "02131d9920aa": 916, "5d": 916, "011432f138f9": 916, "misbehavior": 916, "instabl": 916, "pump": 916, "nuclear": 916, "plant": 916, "ssh-keygen": [917, 923], "password authent": [917, 923], "key based authent": [917, 923], "remote login": [917, 923], "unencrypt": 917, "rlogin": 917, "telnet": 917, "nsa": 917, "primarili": [917, 1010, 1129], "sftp": 917, "portno": 917, "unabl": 917, "propaget": 917, "sha256sum": 918, "72c18232434d0551af75f964ea66ae5d9271faba895f40a929fb17f19d7ab44c": 918, "mitm": 923, "uncomfort": 923, "keygen": 923, "safeguard": 923, "unrespons": 924, "port forward": 925, "portforward": 925, "secure copi": [925, 926], "hmmm": 925, "whateer": 925, "mydocu": 926, "recus": 926, "mobil": 926, "bandwidth": 926, "mediat": 926, "descriptiotn": 926, "file system": 927, "network file system": 927, "smb": 927, "crawl": 927, "debianish": 927, "mountpoint": 927, "grant": 927, "idmap": 927, "errnum": 928, "strerror_r": 928, "buflen": 928, "cleanest": 928, "_r": 928, "reentrant": 928, "syscal": 930, "getaddrinfo": 930, "ri": 932, "nbytes_read": [932, 933, 934], "24608": 932, "1024root": 932, "nager": 932, "698nager": 932, "gatewai": 933, "peer": [933, 936], "netinet": 933, "af_inet": 933, "sock_stream": 933, "sockaddr_in": 933, "sin_famili": 933, "sin_port": 933, "inet_aton": 933, "sin_addr": 933, "ipproto_ip": 933, "sa_famili": 933, "inet_addr": 933, "10hallo": 933, "16thi": 933, "ong": 933, "14ong": 933, "timerfd_settim": 934, "itimerspec": [934, 968], "nasti": [935, 968], "ingenu": 936, "smae": 936, "o_append": 936, "o_cloexec": 936, "sigpip": [936, 982], "whenc": 936, "seek_cur": 936, "seek_end": 936, "occupi": [936, 938, 939], "status": 937, "srcfile": 937, "dstfile": 937, "1073741825": 938, "0k": 938, "texttt": 939, "dup2": 939, "oldfd": 939, "newfd": 939, "o_": 939, "bytes_to_writ": [940, 941, 943], "wxr": 940, "o_tmpfil": 940, "speci": 940, "pli": 940, "nread": [942, 948, 951, 974, 977, 981], "thats": [942, 943], "litter": 943, "misspel": 943, "24625": 944, "24562": 944, "pread": 946, "pwrite": 946, "readv": 946, "writev": 946, "uio": 946, "iovec": 946, "iov": 946, "iovcnt": 946, "preadv": 946, "pwritev": 946, "ftruncat": [946, 977, 978], "filedescriptor": 946, "gpio26": [948, 950, 951], "subtre": 950, "fe200000": 950, "gpiochip488": 950, "gpiochip504": 950, "active_low": 950, "fd_set": [951, 974], "exc_fd": 951, "fd_zero": [951, 974], "nreadi": 951, "fd_isset": [951, 974], "eek": 951, "intens": 952, "ppid": 952, "tid": 952, "tsd": 952, "spezif": 952, "_reentrant": 952, "lpthread": [952, 968, 987], "start_routin": 953, "pthread_exit": 953, "pthread_cancel": 953, "pthread_attr_setdetachst": 953, "detachst": 953, "pthread_create_detach": 953, "pthread_detach": 953, "pthread_self": 953, "pthread_equ": 953, "30650": 953, "13961": 953, "correl": 953, "gettid": 953, "pthread_mutexattr_t": [955, 971], "pthread_mutex_destroi": 955, "pthread_mutex_trylock": 955, "global_mutex": 955, "pthread_mutexattr_settyp": 955, "pthread_mutex_norm": 955, "pthread_mutex_errorcheck": 955, "pthread_mutex_recurs": 955, "pthread_mutex_default": 955, "pthread_cond_destroi": 957, "pthread_cond_broadcast": 957, "parlanc": 957, "set_autoreset_ev": 957, "ev": 957, "is_set": 957, "wait_autoreset_ev": 957, "acquiriert": 957, "autoreset": 957, "spuriou": 957, "woken": 957, "pthread_condattr_t": 957, "pthread_cond_initi": 957, "pthread_cond_timedwait": 957, "abstim": 957, "use_glob": 959, "pthread_once_t": 959, "global_onc": 959, "pthread_once_init": 959, "init_glob": 959, "pthread_onc": 959, "once_control": 959, "init_routin": 959, "pthread_key_cr": 959, "__thread": 959, "pthread_atfork": 960, "legales": 960, "lock_rac": 962, "succeed": [962, 1148], "foreground": [963, 1016], "huh": 963, "paradox": 963, "setenv": 965, "putenv": 965, "unsetenv": 965, "clearenv": 965, "customvar": 965, "timesl": 966, "starv": 966, "throughput": 966, "sha1": [966, 969, 985], "voluntarili": [966, 969], "lrt": 968, "app_statu": 968, "tick_count": 968, "update_statu": 968, "sigact": [968, 981, 982], "sa_handl": [968, 981, 982], "sigrtmin": 968, "sigev": [968, 978], "sev": 968, "sigev_notifi": 968, "sigev_sign": 968, "sigev_signo": 968, "timer_t": 968, "tspec": 968, "nsec": 968, "timer_settim": 968, "show_statu": 968, "freerto": [968, 971], "syncron": 968, "update_status_func": 968, "initial_t": 968, "interval_t": 968, "show_status_func": 968, "update_task": 968, "show_task": 968, "231765": 968, "225819": 968, "5635": 968, "lwp": 968, "231766": 968, "231767": 968, "tracer": 968, "restart_syscal": 968, "clock_nanosleep": 968, "clock_realtim": 968, "500000000": 968, "033": 968, "7m": 968, "flash_func": 968, "is_revers": 968, "flash_task": 968, "flasher": 968, "indepen": 968, "toggl": 968, "fore": [968, 1018], "particularli": 969, "suscept": 969, "renic": 970, "din": 970, "44300": 970, "echtzeitbetrieb": 970, "betrieb": 970, "rechensystem": 970, "verarbeitung": 970, "anfallend": 970, "st\u00e4ndig": 970, "derart": 970, "betriebsbereit": 970, "da\u00df": 970, "verarbeitungsergebniss": 970, "innerhalb": [970, 1178], "vorgegebenen": 970, "zeitspann": 970, "000014": 970, "013914m": 970, "91410827636698u": 970, "000002": [970, 972], "002382m": 970, "3820173632900326u": 970, "intrus": 970, "controversi": 970, "sched_oth": 971, "relinquish": 971, "sched_param": 971, "sched_getschedul": 971, "sched_prior": 971, "pthread_setschedparam": 971, "pthread_getschedparam": 971, "predefini": 971, "pthread_attr_setschedpolici": 971, "spoken": 971, "pthread_mutexattr_setprotocol": 971, "pthread_prio_inherit": 971, "pthread_prio_protect": 971, "risen": 971, "pthread_mutexattr_setprioceil": 971, "000105": 972, "105247m": 972, "24749755859354u": 972, "000015": 972, "014643m": 972, "64260525619006u": 972, "105u": 972, "000067": 972, "067263m": 972, "2626495361326u": 972, "000003": 972, "002883m": 972, "8827592917392217u": 972, "ondemand": 972, "governor": 972, "cpufreq": 972, "scaling_governor": 972, "cpuinfo_cur_freq": 972, "067036m": 972, "03615188598611u": 972, "000001": 972, "001257m": 972, "2571678380193383u": 972, "000065": 972, "065188m": 972, "188407897949u": 972, "002376m": 972, "3758434034066656u": 972, "001042": 972, "042438m": 972, "4375534057617u": 972, "000017": 972, "017123m": 972, "123423079175748u": 972, "000143": 972, "142646m": 972, "6458358764593u": 972, "000005": 972, "004995m": 972, "994855006705264u": 972, "_syse": 974, "exit_failur": 974, "consume_fd": 974, "random_fd": 974, "tty_fd": 974, "nfd": 974, "ttys4": 974, "in_fd": 974, "eof_detect": 974, "shm": [976, 977, 978], "099": 976, "sem": [976, 977, 978], "shared memori": 977, "message queu": 977, "mman": 977, "fstat": 977, "st_size": 977, "map_fail": 977, "shm_open": [977, 978], "tmpf": [977, 978], "resiz": 977, "4095": 977, "weigh": 977, "map_shar": 977, "counter_loc": 977, "sem_t": [977, 978], "sem_open": 977, "sem_fail": 977, "sem_wait": 977, "sem_post": 977, "mq_attr": [977, 978], "mq_maxmsg": [977, 978], "mq_msgsize": [977, 978], "mqd_t": [977, 978], "mq_open": 977, "mq_send": 977, "mq_receiv": 977, "shm_unlink": 978, "overtak": 978, "mq_overview": 978, "oflag": 978, "mq_flag": 978, "mqde": 978, "msg_ptr": 978, "msg_len": 978, "msg_prio": 978, "sevp": 978, "disturb": [978, 981], "elegantli": 978, "qsize": 978, "signo": 978, "notify_pid": 978, "goiven": 978, "sem_overview": 978, "sem_trywait": 978, "sem_timedwait": 978, "abs_timeout": 978, "shm_close": 978, "shm_overview": 978, "051": [980, 981], "segv": [981, 982], "mortem": [981, 1107], "core_pattern": 981, "termination_handl": 981, "sigint": [981, 982], "sig_atomic_t": [981, 982], "term_act": 981, "alarm_handl": 981, "alarm_act": 981, "sigset_t": [981, 983], "termination_sign": 981, "sigemptyset": [981, 982], "sigaddset": [981, 982], "sigquit": 981, "sigprocmask": [981, 982], "sig_block": 981, "impolit": 981, "sig": [981, 982], "consume_pip": 981, "pipenam": 981, "puzzl": 981, "pthread_sigmask": [981, 982], "sigtstp": 982, "sigalrm": [982, 983], "sigchld": 982, "abnorm": 982, "sigabrt": 982, "sigsegv": 982, "sigbu": 982, "sigil": 982, "sigfp": 982, "unblock": 982, "oldset": 982, "sigpend": 982, "sigfillset": 982, "signum": 982, "sigdelset": 982, "sigismemb": 982, "sigsetop": 982, "recept": 982, "sa_mask": 982, "sa_flag": 982, "oldact": 982, "sig_ign": 982, "sig_dfl": 982, "sighandler_t": 982, "_exit": 982, "barebon": 983, "louder": 983, "stallman": 984, "risc": 984, "llvm": 984, "24360": 984, "hello_h": [984, 1000, 1002], "24416": 984, "linkabl": [984, 1120, 1175], "0000000000401040": 984, "_start": 984, "0000000000401000": 984, "_init": 984, "00000000004011b8": 984, "_fini": 984, "crt": 984, "crt1": 984, "crti": 984, "crtn": 984, "0000000000404000": 984, "_global_offset_table_": 984, "reloc": 984, "1762320": 984, "0000000000401126": 984, "1224008": 984, "greetdemo": 985, "cmake_system_nam": 985, "toolchain_base_dir": [985, 999], "cmake_c_compil": 985, "cmake_cxx_compil": 985, "find_xxx": 985, "cmake_find_root_path_mode_program": 985, "cmake_find_root_path_mode_librari": 985, "cmake_find_root_path_mode_includ": 985, "toolchian": 985, "cmake_toolchain_fil": 985, "libgreet": [985, 986, 992, 1001, 1002], "13921": [985, 986], "cmakecach": [985, 986], "26192": [985, 986], "27920": [985, 986], "8503": [985, 986], "eabi5": 985, "armhf": 985, "5db807d9b005b19e1e0c957755fa7ca7b771edcb": 985, "debug_info": 985, "armv7l": 987, "challeng": 987, "metadistribut": 987, "miniumum": 987, "realiti": 987, "rasberri": 989, "clickabout": 994, "workabl": 996, "tarbal": 996, "lastest": 996, "x86_64_arm": 996, "precompos": 996, "uncompress": 996, "73812": 996, "1107168": 996, "1481768": 996, "1968456": 996, "1091864": 996, "1030432": 996, "1221816": 996, "lynxbe": 998, "y3p9kn7mjei": 998, "cli": 998, "dockerhub": 998, "hub": 998, "sh_18_04": 998, "78683068": 998, "1292296": 998, "70mb": 999, "73018472": 999, "auxvec": 999, "bitsperlong": 999, "bpf_perf_ev": 999, "rapidli": 1000, "phoni": [1000, 1001, 1002], "origaniz": 1001, "relink": 1001, "0x2e20": 1001, "vdso": 1001, "0x00007fffe9fa7000": 1001, "0x00007f75ca289000": 1001, "0x00007f75ca46d000": 1001, "r_x86_64_32": 1001, "fpic": 1001, "whom": 1002, "hello_flex": 1002, "hello_flexible_h": 1002, "cq": 1002, "lisp": 1003, "create_f": 1003, "create_print": 1003, "print_blah": 1003, "print_someth": 1003, "sytax": 1004, "shutil": 1005, "tarfil": 1005, "temporarydirectori": 1005, "tmpd": 1005, "tarnam": 1005, "expandvar": 1005, "contrain": 1005, "__enter__": 1005, "__exit__": 1005, "openforread": 1005, "myprint": 1005, "orig_print": 1005, "exc_val": 1005, "exc_tb": 1005, "myarg": 1005, "total_ord": 1006, "a_vari": 1007, "fallback": [1007, 1027], "baseexceptiongroup": 1007, "exceptiongroup": 1007, "subtyp": 1007, "maybe_fail": 1007, "lone": 1007, "mysubsystemerror": 1007, "reallybaderror": 1007, "someothererror": 1007, "definitelybad": 1007, "evenwors": 1007, "collapsingtheworld": 1007, "errorcod": 1007, "__cached__": 1008, "_frozen_importlib_extern": 1008, "sourcefileload": 1008, "0x7f2bcf1fc380": 1008, "blindli": 1008, "ansibl": 1008, "matno": 1008, "conffil": 1008, "confcod": 1008, "confdict": 1008, "5733": 1008, "object ori": [1009, 1164], "keyword argu": 1009, "starstararg": [1009, 1030], "for loop": 1009, "iterator protocol": 1009, "operator overload": 1009, "drawn": 1010, "cnt": 1010, "inputrang": 1010, "disgust": 1010, "gentli": 1010, "smarter": 1010, "nolimit": 1011, "fibo_numb": 1011, "jerki": 1011, "max_numb": 1011, "satisfactori": 1011, "python_1010_generators_yield": 1011, "glossari": 1012, "breadth": 1012, "subnamespac": 1015, "mysupermodul": 1015, "mysuperfunct": 1015, "subpackage1": 1015, "module1": 1015, "module2": 1015, "subpackage2": 1015, "disambigu": 1015, "increment_background": [1016, 1018], "background_integ": 1016, "foreground_integ": 1016, "runn": 1016, "backgroundincrement": 1016, "uncool": 1016, "14784035": 1018, "quack": 1020, "mockup": 1020, "460275167874975": 1020, "65650371704711": 1020, "00647623520645": 1020, "58094975712764": 1020, "65429387013364": 1020, "__next__": 1020, "brokensensor": 1020, "gettemperatur": 1020, "refect": 1021, "emp": 1024, "add_employe": 1024, "mgr": 1024, "isold": [1024, 1025, 1125], "haubentauch": [1024, 1025, 1028, 1125], "parentcl": 1024, "funnili": 1024, "make_child": 1025, "parent1": 1025, "parent2": 1025, "vvv": 1025, "father": 1025, "vvvvvv": 1025, "tabular": 1026, "someclass": 1026, "persons_from_csv": 1026, "person_dict": 1026, "operators object oriented program": 1027, "behaivor": 1027, "number2": 1027, "int2": 1027, "whistl": [1027, 1030], "symmetr": [1027, 1057], "commut": 1027, "summar": 1027, "attrnam": 1028, "meier": 1028, "expicitli": 1029, "0x7f7ce86c90a0": 1029, "marker": 1033, "eighti": 1033, "monti": 1033, "incompat": [1033, 1039, 1047, 1058], "benevol": 1033, "bdfl": [1033, 1117], "overse": 1033, "januari": 1033, "dropbox": 1033, "awk": 1035, "sensit": 1038, "throughout": 1038, "0o01234": 1039, "14159265359": [1039, 1053], "3e12": 1039, "afterthought": 1039, "\u00e4\u00f6\u00fc": 1039, "xa4": 1039, "xb6": 1039, "xbc": 1039, "xe4": 1039, "compel": 1039, "codebas": 1039, "ancient": 1039, "sequencish": 1043, "sixtim": 1043, "seen_sixey": 1043, "blahblahblahblahblah": 1044, "aah": 1045, "a_list": 1045, "a_tupl": 1045, "hlow": 1045, "hlowrd": 1045, "straw": [1046, 1054], "heritag": 1047, "140405498574056": 1048, "140405498574088": 1048, "140405498574312": 1048, "140405171487360": 1048, "140405215227920": 1048, "globvar": 1049, "parameterizab": 1050, "program_exit": 1050, "exitstatu": 1050, "spam": [1052, 1115], "dec": 1052, "x58": 1052, "07d": 1053, "0x": 1053, "5x": 1053, "0x2f": 1053, "4x": 1053, "0x002f": 1053, "5o": 1053, "0o31": 1053, "04d": 1053, "0042": 1053, "05d": 1053, "00042": 1053, "thistl": 1054, "thorn": 1054, "annoy": 1054, "sqn": 1055, "defval": 1056, "iterkei": 1056, "keyiter": 1056, "0x7ff2e8753418": 1056, "unord": 1057, "tunabl": 1058, "shoudn": 1058, "0x7fca2c785b70": 1059, "tof": 1059, "outputfilenam": 1060, "argumentpars": 1060, "add_argu": 1060, "parse_arg": 1060, "ou": 1060, "ylabel": [1062, 1113], "xmin": 1062, "xmax": 1062, "ymin": 1062, "ymax": 1062, "twine": 1063, "lotsa": [1063, 1136], "long_descript": 1063, "long_description_content_typ": 1063, "beta": 1063, "osi": 1063, "approv": 1063, "package_dir": 1063, "python_requir": 1063, "install_requir": 1063, "paho": [1063, 1124], "pyproject": 1063, "toml": 1063, "backend": 1063, "build_meta": 1063, "yadda": 1063, "sdist": 1063, "python_course_2022_11_07": 1063, "12549": 1063, "BE": 1063, "mydb": 1064, "hardli": 1065, "femal": 1070, "miracl": [1073, 1090], "previouslin": 1077, "ifi": 1090, "uniqifi": 1091, "sensor_const": 1096, "test_sensor_const": 1096, "ii": [1097, 1099, 1103, 1105, 1116], "user_record": [1098, 1100], "read_csv_head": [1098, 1105], "read_csv_nohead": [1100, 1104, 1105], "csvfilenam": 1102, "test_noheader_person": 1103, "read_noheader_person": 1103, "test_must_not_use_global_variables_as_return_object": 1103, "filename1": 1103, "noheader1": 1103, "filename2": 1103, "noheader2": 1103, "users1": 1103, "users2": 1103, "test_header_person": 1103, "read_header_person": 1103, "test_user_json_person": 1103, "userdb_json": [1103, 1104], "test_person_to_json": 1103, "joerg_sent": 1103, "to_json_person": 1103, "joerg_receiv": 1103, "from_json_person": 1103, "envis": [1104, 1162], "to_json": 1104, "test_user_json": 1104, "test_user_to_json": 1104, "user_s": 1104, "json_user_s": 1104, "from_json": 1104, "test_nohead": 1105, "test_head": 1105, "lectur": [1107, 1176], "unsupervis": [1110, 1115], "conveyor": 1110, "belt": 1110, "linear_regress": [1111, 1114], "model_select": [1111, 1113], "train_test_split": [1111, 1113], "linear_model": [1111, 1113], "linearregress": [1111, 1113], "history_data": [1111, 1112, 1113, 1114], "inputfeatur": [1111, 1113], "outputfeatur": [1111, 1113], "input_train": [1111, 1113], "input_test": [1111, 1113], "output_train": [1111, 1113], "output_test": [1111, 1113], "test_siz": [1111, 1113], "output_predict": [1111, 1113], "visualcross": 1112, "york": [1112, 1113], "wind": [1112, 1113], "chill": [1112, 1113], "precipit": [1112, 1113], "snow": [1112, 1113], "gust": [1112, 1113], "humid": [1112, 1113], "rain": 1112, "cloudi": 1112, "995833": 1113, "688889": 1113, "287500": 1113, "327273": 1113, "012222": 1113, "690278": 1113, "470769": 1113, "369444": 1113, "513421": 1113, "946106": 1113, "574023": 1113, "313256": 1113, "994536": 1113, "070695": 1113, "025980": 1113, "302423": 1113, "214825": 1113, "665492": 1113, "900000": 1113, "700000": 1113, "090000": 1113, "050000": 1113, "377500": 1113, "750000": 1113, "950000": 1113, "650000": 1113, "330000": 1113, "325000": 1113, "850000": 1113, "425000": 1113, "825000": 1113, "715000": 1113, "470000": 1113, "970000": 1113, "multidimension": 1113, "xlabel": 1113, "coef_": 1113, "80189231": 1113, "intercept_": 1113, "95355086": 1113, "609608": 1113, "571879": 1113, "736988": 1113, "170933": 1113, "798254": 1113, "189739": 1113, "180394": 1113, "449230": 1113, "661530": 1113, "057745": 1113, "850176": 1113, "284120": 1113, "685067": 1113, "weather": [1114, 1115], "splice": [1114, 1115], "paper": 1114, "aspir": [1114, 1141], "dilig": 1115, "bite": 1115, "forecast": 1115, "agi": 1115, "asi": 1115, "forest": 1115, "predictor": 1115, "accuraci": 1115, "classif": 1115, "unlabel": 1115, "reinforc": 1115, "reward": 1115, "bay": 1115, "sepp": 1116, "tupleunpack": 1116, "spell": 1116, "redundantli": 1116, "quotechar": 1116, "spreadsheet": 1116, "odbc": 1117, "mysql": 1117, "informix": 1117, "berkeleydb": 1117, "mongodb": 1117, "rollback": 1117, "initd": 1119, "psycopg": 1119, "libpq": 1119, "conninfo": 1119, "psycopg2": 1119, "schwammerldb": 1119, "android": 1120, "schwammerln": 1120, "giftig": 1120, "geniessbar": 1120, "dbm": 1120, "steinpilz": 1120, "roehren": 1120, "speisetaeubl": 1120, "lamellen": 1120, "speitaeubl": 1120, "eierschwammerl": 1120, "teufelsroehrl": 1120, "overcod": 1121, "512119": 1121, "european": 1121, "steroid": 1121, "htmlhelp": 1121, "charset": 1121, "latin1": 1121, "chines": 1121, "enc": 1121, "0xfc": 1121, "0xdf": 1121, "0xf6": 1121, "\u00df": 1121, "cyril": 1121, "received_enc": 1121, "lg_enc": 1121, "bye_enc": 1121, "artificial intellig": 1122, "postgr": 1122, "mssql": 1122, "data sci": 1122, "ecosystem": 1122, "antp": 1124, "53767": 1124, "tcp6": 1124, "mosquitto_pub": 1124, "easiest": 1124, "message_receiv": 1124, "userdata": 1124, "on_messag": 1124, "loop_forev": 1124, "mosqitto_pub": 1124, "styrian": 1124, "esp": 1124, "666608091972": 1125, "ignore_index": 1125, "new_person": 1125, "saskia": 1125, "456710042003": 1125, "irrevers": 1126, "1153": [1129, 1130], "_locationindex": [1129, 1130], "maybe_cal": [1129, 1130], "apply_if_cal": [1129, 1130], "_getitem_axi": [1129, 1130], "_ilocindex": 1129, "1711": 1129, "1713": 1129, "_validate_integ": 1129, "_ix": 1129, "1647": 1129, "1645": 1129, "len_axi": 1129, "_get_axi": 1129, "rangeindex": 1130, "3791": 1130, "get_loc": 1130, "casted_kei": 1130, "pyx": 1130, "_lib": 1130, "indexengin": 1130, "hashtable_class_help": 1130, "pxi": 1130, "pyobjecthasht": 1130, "get_item": 1130, "1393": 1130, "_locindex": 1130, "1391": 1130, "thru": 1130, "_validate_kei": 1130, "_get_label": 1130, "1343": 1130, "1341": 1130, "axisint": 1130, "5567": 1130, "ndframe": 1130, "drop_level": 1130, "new_index": 1130, "4235": 1130, "4239": 1130, "bool_": 1130, "3793": 1130, "3795": 1130, "3797": 1130, "invalidindexerror": 1130, "3799": 1130, "listlik": 1130, "_check_indexing_error": 1130, "3801": 1130, "3803": 1130, "sort_index": 1130, "multiindex": 1130, "contrari": 1131, "lower_email": 1132, "rentner": 1132, "is_palindrom": 1132, "facto": [1133, 1157], "subel": 1133, "attrib": 1133, "getroot": 1133, "package manag": 1135, "project manag": [1135, 1163], "unit test": 1135, "virtual environ": 1135, "affin": 1135, "witch": 1136, "gnore": 1136, "ackup": 1136, "bort": 1136, "cert": 1136, "pem": 1136, "pythonhost": 1136, "e17846ef3601dcb6f118ea447439650e0c35cb4fe60274fbe24214156df2": 1136, "cp38": 1136, "manylinux2010_x86_64": 1136, "ext": 1136, "argcomplet": 1136, "asn1crypto": 1136, "ensurepip": [1137, 1143], "test_project": 1141, "test_soup": 1141, "test_task": 1141, "stringent": 1141, "discoveri": 1141, "syndrom": [1141, 1142, 1148], "test_person_point": 1141, "deselect": 1141, "test_": 1141, "test_simpl": 1141, "test_trivi": 1141, "test_trivial_but_fail": 1141, "___________________________": 1141, "____________________________": 1141, "test_stat": 1141, "implementation_point": 1141, "implementor1": 1141, "implementor2": 1141, "documentation_point": 1141, "integration_point": 1141, "implementation_perc": 1141, "documentation_perc": 1141, "integration_perc": 1141, "total_perc": 1141, "total_point": 1141, "gathered_point": 1141, "test_another_task_aspect": 1141, "test_ini_file_pars": 1141, "my_test_fil": 1141, "mytestcas": 1142, "runtest": 1142, "assertequ": 1142, "texttestrunn": 1142, "__db": 1142, "create_databas": 1142, "fill_test_data": 1142, "remove_databas": 1142, "testfeature1": 1142, "testfeature2": 1142, "testsuit": 1142, "addtest": 1142, "testload": 1142, "loadtestsfromtestcas": 1142, "testsometh": 1142, "failif": 1142, "failunless": 1142, "failunlessequ": 1142, "failifequ": 1142, "failunlessalmostequ": 1142, "failunlessrais": 1142, "env_dir": 1143, "my_venv": 1143, "easy_instal": 1143, "pip3": 1143, "powershel": 1143, "joblib": 1143, "threadpoolctl": 1143, "deactiv": 1143, "my_recreated_venv": 1143, "persuad": 1143, "will_fail": [1147, 1150], "initgoogletest": [1148, 1153], "run_all_test": [1148, 1153], "lgtest": [1148, 1150], "onesuit": 1148, "test1": 1148, "test2": 1148, "anothersuit": 1148, "postive_pattern": 1148, "negative_pattern": 1148, "gtest_list_test": 1148, "faildemo": 1148, "failisfat": 1148, "assertdemo": 1148, "assertisfat": 1148, "expect_": 1148, "expectdemo": 1148, "expectisnonfat": 1148, "expect_tru": 1148, "expect_eq": 1148, "0x58": 1148, "0x55": 1148, "assert_": 1149, "repoqueri": 1150, "dpkg": 1150, "listfil": 1150, "joergfaschingbau": 1150, "cmake_compiler_is_gnucc": 1150, "ggdb": 1150, "googlebenchmark": 1150, "predef": [1152, 1153], "predefinedtestenviron": 1153, "paranoidtest": 1153, "untechn": 1153, "thefixtur": 1153, "testthatmodifiesst": 1153, "complexfixtur": 1153, "first_n": 1153, "sometest": 1153, "egal": 1155, "welcher": 1155, "schulungstyp": 1155, "problemlo": 1155, "verifiziert": 1155, "formlos": 1155, "anliegen": 1155, "umgehend": 1155, "setzen": 1155, "besprechen": 1155, "gestaltung": 1155, "schl\u00fcssigkeit": 1155, "chronologisch": 1155, "gehaltenen": 1155, "querzulesen": 1155, "roter": 1155, "faden": 1155, "ablaufen": 1155, "\u00e4nderungen": 1155, "kursgeschehen": 1155, "passieren": 1155, "detailliert": 1155, "kosten": 1155, "terminen": 1155, "inhouseschulungen": 1155, "buchenden": 1155, "terminisiert": 1155, "zustandekommt": 1155, "zeitlich": 1155, "\u00f6rtlich": 1155, "flexibel": [1155, 1156], "zul\u00e4sst": 1155, "besond": 1155, "onlineschulungen": 1155, "erwiesen": 1155, "dedizierten": 1155, "implementieren": [1155, 1160], "instruktionen": [1155, 1159], "datenschutzrichtlinien": 1155, "genug": 1155, "durchweg": 1155, "wahlweis": 1155, "offenen": 1155, "anmelden": 1155, "inhouseschulung": 1155, "exklusiv": 1155, "\u00fcblicherweis": 1155, "firmenstandort": 1155, "basteln": [1155, 1172], "schwierig": 1155, "z\u00fcgig": 1156, "uhr": 1156, "punktlandung": 1156, "mbr": 1156, "bootet": 1156, "nachs\u00e4tz": 1156, "wahllos": 1156, "reinen": [1156, 1172], "gebastelt": 1156, "leichtfertigerweis": 1156, "richtigerweis": 1156, "multilib": 1156, "ausgestattet": [1156, 1165, 1172, 1179], "l\u00e4uft": 1156, "seltsamerweis": 1156, "dar\u00fcber": 1156, "zeitersparnisgr\u00fcnden": 1156, "hinweggeholfen": 1156, "vorcompilierten": 1156, "statisch": [1156, 1174], "gelinkten": 1156, "christof": 1156, "sourcen": 1156, "crosszucompilieren": 1156, "gescheitert": 1156, "ungl\u00fccklichen": 1156, "umstand": 1156, "schulungsrechn": 1156, "neu": 1156, "aufzusetzen": 1156, "kompil": 1156, "verschwunden": 1156, "buildscript": 1156, "konnt": 1156, "kreativen": 1156, "wiederhergestellt": 1156, "v\u00f6llig": 1156, "sinnfrei": 1156, "distributionen": 1156, "compilieren": [1156, 1158], "architekturen": 1156, "versucht": [1156, 1157, 1159], "richtigen": 1156, "leben": [1156, 1172], "anzuwenden": 1156, "leut": 1156, "anzusehen": 1156, "wort": [1156, 1158], "gefallen": 1156, "hart": 1156, "garantien": 1156, "durchau": 1156, "gerechtfertigt": 1156, "gesch\u00fctz": 1156, "auffahren": 1156, "enthaltenen": 1156, "n\u00fctzen": 1156, "stichwort": [1156, 1165, 1172], "mittelweg": 1156, "diffundieren": 1156, "aufruft": 1156, "startet": 1156, "ausgekl\u00fcgelt": 1156, "funktionsweis": 1156, "jeher": 1156, "kennt": [1156, 1178], "gewaltig": 1156, "geschichtsbelastet": 1156, "tr\u00e4gt": 1156, "intelligent": [1156, 1165, 1172], "trotz": 1156, "behauptungen": 1156, "gar": 1156, "lieblingsseit": 1156, "linuxthemen": 1156, "zentrisch": 1156, "bourne shel": [1157, 1167], "\u00fcbel": 1157, "sprechen": [1157, 1165, 1172], "vollst\u00e4ndig": 1157, "shellprogrammierung": 1157, "ruf": 1157, "schmutzigen": 1157, "stattdessen": 1157, "hauch": 1157, "pervers": 1157, "\u00e4sthetik": 1157, "verpassen": 1157, "geschicht": 1157, "kram": 1157, "environmentvariablen": 1157, "kontrollkonstrukt": [1157, 1158], "hauptteil": 1157, "stringmanipul": 1157, "obskur": 1157, "konstrukt": [1157, 1167], "auskommt": 1157, "umgang": [1157, 1167], "vorausgesetzt": [1157, 1159, 1160, 1168, 1174, 1175, 1177, 1178], "bibel": 1158, "hinzuf\u00fcgen": 1158, "erfind": 1158, "tickt": 1158, "wozu": 1158, "grenzen": 1158, "vorlag": 1158, "didaktik": 1158, "erg\u00e4nzt": 1158, "kontext": 1158, "heutigen": 1158, "dienen": 1158, "sprachkern": 1158, "unterrichten": 1158, "standardlibrari": 1158, "zugunsten": 1158, "bequemeren": 1158, "verzichten": 1158, "sprachdesign": 1158, "geachtet": 1158, "isoliert": 1158, "abseit": [1158, 1160, 1178], "mitbringt": 1158, "h\u00e4lt": 1158, "eignet": 1158, "hervorragend": [1158, 1165, 1173, 1178], "systemprogrammierung": 1158, "weglassen": 1158, "programmiert": [1158, 1160], "dementsprechend": [1158, 1178], "sinngem\u00e4ss": 1158, "aufgeteilt": 1158, "manipulieren": [1158, 1167], "maschineninstruktionen": 1158, "ausgef\u00fchrt": [1158, 1159], "geschwindigkeitsvorteil": 1158, "interpretierten": 1158, "nachteil": 1158, "verst\u00e4ndni": [1158, 1167, 1177], "speicherverwaltung": [1158, 1160, 1175], "integral": 1158, "zusammengesetzt": 1158, "speicherlayout": 1158, "wenigst": 1158, "worin": 1158, "programmstrukturierung": 1158, "deklar": 1158, "beliebtest": 1158, "unmeng": 1158, "flexibilit\u00e4t": [1158, 1175], "einbringen": 1158, "unbeliebtest": 1158, "fehlerm\u00f6glichkeiten": 1158, "verkettet": 1158, "fehlerszenarien": [1158, 1178], "absturz": 1158, "dahinsiechen": 1158, "debugginghilfen": 1158, "typumwandlungen": 1158, "hauptkritikpunkt": 1158, "sorglos": 1158, "integertypen": 1158, "breit": [1158, 1165], "regelwerk": 1158, "historisch": 1158, "aufarbeitung": 1158, "historischem": 1158, "ballast": 1158, "compileroptionen": 1158, "pr\u00e4prozessor": [1158, 1159], "leid": 1158, "grundz\u00fcgen": 1158, "gezeigt": [1158, 1167, 1172], "compilierung": 1158, "heutzutag": 1158, "wegzudenken": [1158, 1165], "damal": [1158, 1160], "programmen": [1158, 1159, 1174], "separat": 1158, "verbinden": 1158, "spielt": 1158, "archivieren": 1158, "linken": 1158, "programmgesundheit": 1158, "bedeutungen": 1158, "optimierungsm\u00f6glichkeiten": 1158, "memoryfehlern": 1158, "verwalten": 1158, "formatiert": 1158, "_und_": 1158, "komfort": 1158, "m\u00e4chtige": [1158, 1175], "jedoch": [1158, 1165, 1172, 1178], "weit": 1158, "fehlerimmunit\u00e4t": 1158, "allein": 1158, "verdienen": 1158, "erw\u00e4hnung": 1158, "stringbearbeitung": 1158, "heutig": 1158, "eigenwillig": 1158, "f\u00fclle": 1158, "erleichtern": 1158, "lauern": [1158, 1177], "gefahren": [1158, 1177, 1178], "sprachumfang": 1159, "angeht": 1159, "compiliert": 1159, "maschinencod": 1159, "pointern": 1159, "sofort": 1159, "beipflichten": 1159, "einmal": [1159, 1174, 1175, 1179], "beinharten": 1159, "typenkonvertierungen": 1159, "aufgesessen": 1159, "beleuchtet": [1159, 1177], "beschrittenen": 1159, "dunklen": 1159, "ecken": 1159, "widmet": 1159, "intensiv": 1159, "fehlersuch": 1159, "erkl\u00e4rungen": 1159, "sprachdefinit": 1159, "greifbar": 1159, "verdacht": 1159, "manch": 1159, "typkonversionen": 1159, "l\u00fccken": 1159, "typensystem": [1159, 1160], "techniken": [1159, 1165], "typensicherheit": 1159, "dunkl": 1159, "unn\u00f6tig": 1159, "programmhygien": 1159, "wege": 1159, "sauberen": 1159, "weisen": 1159, "optimierungstechniken": 1159, "anwenden": 1159, "optimierung": 1159, "erschweren": 1159, "lesbarkeit": 1159, "memoryzugriff": 1159, "ur": 1159, "beziehungsweis": 1159, "hardwareunterst\u00fctzung": 1159, "Ins": 1159, "kenntniss": [1159, 1160, 1168, 1174, 1175, 1177, 1178], "urspr\u00fcnglich": 1160, "erfunden": 1160, "leichter": 1160, "handhabbar": 1160, "erm\u00f6glichen": [1160, 1175], "ressourcenverwaltung": 1160, "kontrolliert": 1160, "mainstream": 1160, "einzug": 1160, "hie\u00df": 1160, "treffend": 1160, "seitdem": 1160, "vereinzelt": 1160, "soviel": 1160, "dampflokomot": 1160, "stellt": [1160, 1178], "vielfalt": 1160, "sprachkonstrukt": 1160, "genial": 1160, "gewagt": 1160, "behaupten": 1160, "anbelangt": 1160, "sprachmittel": 1160, "wichtigst": 1160, "n\u00e4mlich": 1160, "reichlich": [1160, 1165, 1172], "umstieg": 1160, "erw\u00e4gen": 1160, "embeddedbetriebssystem": 1160, "einsetzen": 1160, "vielerort": 1160, "m\u00f6glich": [1160, 1165], "datenkapselung": 1160, "objekten": 1160, "fallstrick": 1160, "korrektheit": 1160, "100ste": 1160, "strukturiert": 1160, "fehlerbehandlung": 1160, "generisch": 1160, "mechanismen": [1160, 1175, 1177, 1179], "mehrfachvererbung": 1160, "teilweis": 1160, "kapiteln": 1160, "unterschied": 1160, "erl\u00e4utert": [1160, 1165], "c++ 11": 1161, "enjoy": 1161, "overrrid": 1161, "coolest": 1161, "optinion": 1161, "oneshot": 1161, "communict": 1161, "unlearn": 1161, "inventor": 1162, "weren": 1163, "intricaci": 1163, "interdepend": 1163, "rudimentari": 1163, "graviti": 1164, "vocabulari": 1164, "confront": 1164, "reusab": 1164, "nicknam": 1164, "zentrum": [1165, 1172], "vollwertig": 1165, "selben": 1165, "betriessystemkonzept": 1165, "jahrzehnten": 1165, "bew\u00e4hrt": 1165, "automot": 1165, "sektor": 1165, "vertreten": 1165, "altbew\u00e4hrten": 1165, "konsequ": [1165, 1175], "ausbaut": 1165, "hardwareschnittstellen": 1165, "echtzeitf\u00e4higkeit": 1165, "dahint": 1165, "rundet": 1165, "hardwarebastelworkshop": 1165, "embeddedprogrammier": [1165, 1172], "l\u00e4nger": [1165, 1172], "normalen": [1165, 1172], "dateisystem": [1165, 1172], "versagt": [1165, 1172], "teuer": [1165, 1172], "erkauft": [1165, 1172], "elektronik": [1165, 1172], "testen": [1165, 1172, 1179], "hostsoftwar": [1165, 1172], "architekten": [1165, 1172], "plattformzusammensetzung": [1165, 1172], "entscheiden": [1165, 1172, 1179], "rechtfertigen": [1165, 1172], "logik": [1165, 1172], "steck": [1165, 1172], "beantworten": [1165, 1172, 1179], "eingeladen": [1165, 1172], "l\u00f6tmateri": [1165, 1172], "mitzubringen": [1165, 1172], "bastelei": 1165, "erfolgt": 1165, "vorhandenen": [1165, 1172, 1179], "minicomputern": 1165, "prototypen": 1165, "desktopbetriebssystem": [1165, 1172], "verh\u00e4ltniss": [1165, 1172], "512mb": [1165, 1172], "m\u00fchsam": [1165, 1172], "produktivsystem": [1165, 1172], "ohnehin": [1165, 1172], "unangebracht": [1165, 1172], "anf\u00e4ng": [1165, 1172], "filesystemen": [1165, 1172], "durchzuf\u00fchren": 1165, "filedeskriptoren": [1165, 1167], "getrennt": 1165, "abl\u00e4uf": 1165, "adressraum": 1165, "sorgfalt": 1165, "bloss": 1165, "gef\u00e4chert": 1165, "gewissen": 1165, "szenarien": 1165, "steuerungen": 1165, "gef\u00e4hrlich": 1165, "umfangreich": 1165, "hauptthema": 1165, "dennoch": 1165, "n\u00fctzlich": 1165, "haub": 1165, "schalten": [1165, 1172], "ausg\u00e4ngen": [1165, 1172], "abfragen": [1165, 1172], "eing\u00e4ngen": [1165, 1172], "sowohl": [1165, 1172], "dumm": [1165, 1172], "ereignisgesteuert": [1165, 1172], "mikrocontrollern": [1165, 1172], "aufgaben": [1165, 1172], "temperaturmessung": [1165, 1172], "expandierung": [1165, 1172], "ausgelagert": [1165, 1172, 1175], "dediziert": [1165, 1172], "angesteuert": [1165, 1172], "gegeben": [1165, 1172, 1174, 1175], "driverframework": 1165, "netzwerkstack": [1165, 1172], "einpasst": [1165, 1172], "schnittstellen": [1165, 1175], "implementationssprachen": 1165, "hardwareerfahrung": [1165, 1172], "linux kernel": 1166, "kernel driv": [1166, 1176], "wait queu": 1166, "block devic": 1166, "interrupt handl": 1166, "dose": 1166, "curios": 1166, "userpac": 1166, "massiv": 1166, "vital": 1166, "einblick": 1167, "gingen": 1167, "vieler": 1167, "demosess": 1167, "vertrackt": 1167, "entmystifiziert": 1167, "gef\u00fcrchteten": 1167, "erlernt": 1167, "inbetriebsetz": 1167, "hardwareingenieur": 1167, "angehend": 1167, "administratoren": 1167, "editieren": 1167, "bl\u00e4ttern": 1167, "textdateien": 1167, "schnittstel": 1167, "kombinationen": 1167, "kombin": 1167, "abschweifen": 1167, "programmierkenntniss": 1167, "zwingend": [1167, 1174], "make gnu": 1168, "gnu mak": 1168, "build manag": 1168, "seiner": [1168, 1175, 1179], "m\u00e4chtigen": 1168, "daran": 1168, "wendet": 1168, "interessiert": 1168, "gr\u00f6\u00dfere": 1168, "gebaut": 1168, "komplizierten": 1168, "griff": 1168, "regeln": 1168, "selbstdefiniert": 1168, "gewiss": [1168, 1173, 1175], "fertigkeit": 1168, "hemmenhofen": 1172, "gleichnamigen": 1172, "gerufen": 1172, "produktivem": 1172, "n\u00e4herzubringen": 1172, "spielekonsumenten": 1172, "kinder": 1172, "enden": 1172, "erstem": 1172, "breiteren": 1172, "drauf": 1172, "vorhandensein": 1172, "basisinfrastruktur": 1172, "vielem": 1172, "hervorragenden": 1172, "gestandenen": 1172, "obwohl": [1172, 1175], "sprachunabh\u00e4ngig": 1172, "brauchen": 1172, "computerspielen": 1172, "spielerischen": 1172, "f\u00fchren": 1172, "w\u00e4hlt": 1172, "lm": 1172, "netzwerkprotokol": [1172, 1178], "behaupt": 1173, "allen": 1173, "gro\u00dfkopferten": 1173, "kommerziellen": 1173, "systemen": 1173, "perforc": 1173, "etabliert": 1173, "erh\u00e4ltlich": 1173, "nachfolg": 1173, "abgel\u00f6st": 1173, "prim\u00e4r": 1173, "publikum": 1173, "sekund\u00e4r": 1173, "versionieren": 1173, "arbeitsweis": 1173, "bereinigung": 1173, "strategien": 1173, "programmierern": 1173, "vertrautheit": 1173, "vorteil": [1173, 1174], "umsteig": 1174, "\u00e4rgerni": 1174, "schl\u00e4gt": 1174, "ausgekl\u00fcgeltst": 1174, "systemcal": [1174, 1175, 1178], "sogenannt": 1174, "inspizieren": 1174, "grundprinzip": [1174, 1178], "sammlung": [1174, 1175], "ausf\u00fchrbar": 1174, "bedient": 1174, "handhabung": 1174, "gew\u00f6hnungsbed\u00fcrftig": 1174, "filedescriptoren": 1174, "lowlevel": 1174, "tiefen": 1175, "steigen": 1175, "alltagsprogrammier": 1175, "normalerweis": 1175, "verborgen": 1175, "hochperformant": 1175, "anwendungen": 1175, "modernen": [1175, 1177], "bertriebssystemen": 1175, "sogenanntem": 1175, "virtuellen": 1175, "speicherbereich": 1175, "instanzen": 1175, "desselben": 1175, "hauptspeich": 1175, "speicherzugriff": 1175, "schutzmechanismen": 1175, "miteinand": 1175, "kommunizieren": [1175, 1178], "semaphoren": 1175, "steinalt": 1175, "\u00fcberlebt": 1175, "keinesweg": 1175, "fehlerfrei": 1175, "benutzen": 1175, "verpasst": 1175, "beruht": 1175, "ladbar": 1175, "ressourcenschonung": 1175, "wasserdichten": 1175, "upgradepfad": 1175, "grundkenntni": [1175, 1177, 1178], "memory manag": 1176, "tcp-ip": 1176, "unverst\u00e4ndlich": 1177, "ungeachtet": 1177, "effizient": 1177, "propagiert": 1177, "soliden": 1177, "unbedacht": 1177, "handeln": 1177, "lebenszyklu": 1177, "gestartet": 1177, "versuchung": 1177, "gewalt": 1177, "terminieren": 1177, "konsequenzen": 1177, "joinabl": 1177, "detach": 1177, "eigenschaften": 1177, "racecondit": 1177, "vermeidung": 1177, "\u00fcberal": 1177, "vermutet": 1177, "integeroperationen": 1177, "kommunikationsmechanismen": 1177, "werkzeugkasten": 1177, "kommunikationskan\u00e4l": 1177, "niemal": 1177, "reihen": 1177, "traditionellen": 1177, "aufgenommen": 1177, "codebasi": 1177, "verzweigt": 1177, "ansehnlich": 1177, "realtimef\u00e4higkeiten": 1177, "priorit\u00e4ten": 1177, "f\u00fcgt": 1178, "benutzend": 1178, "programmierparadigma": 1178, "dar": 1178, "beschr\u00e4nkt": 1178, "streamverbindungen": 1178, "verbindungsaufnahm": 1178, "datagramm": 1178, "verbindungslos": 1178, "adressfamilien": 1178, "auffassung": 1178, "adress": 1178, "endpoint": 1178, "nummern": 1178, "adressen": 1178, "verbindungen": 1178, "hilfsfunktionen": 1178, "adresskonvertierung": 1178, "ipv6": 1178, "\u00e4quivalent": 1178, "ungleich": 1178, "ressourcenschonend": 1178, "pfadnamen": 1178, "bedienbar": 1178, "mittlerweis": 1178, "eingepasst": 1178, "angenehm": 1178, "umzugehen": 1178, "widmen": 1178, "verbundenen": 1178, "auszusetzen": 1178, "reagiert": 1178, "gelesen": 1178, "eventgetrieben": 1178, "knopfdruck": 1179, "abnimmt": 1179, "zahlreichen": 1179, "abgeklopft": 1179, "angst": 1179, "kaputtmachen": 1179, "konstruktiv": 1179, "einfachheit": 1179, "klarzumachen": 1179, "umzusetzen": 1179, "anstatt": 1179, "auszustatten": 1179, "gedanken": 1179, "erkannt": 1179, "entscheidung": 1179, "verbockt": 1179, "softwareentwickl": 1179, "jedwed": 1179, "stabilen": 1179, "abliefern": 1179, "entscheidungstr\u00e4g": 1179, "vorgesetzt": 1179, "schl\u00fcssige": 1179, "kan\u00e4l": 1179, "etablieren": 1179, "unittestframework": 1179, "tragen": 1179, "schwerf\u00e4llig": 1179, "halben": 1179, "\u00fcbrige": 1179, "zurechtzufinden": 1179, "vortragend": 1179, "aufgrund": 1179, "aufwarten": 1179, "beibringen": 1179, "\u00fcppigen": 1179, "verbergen": 1179, "pr\u00e4ferierten": 1179, "vortragenden": 1179, "w1_address": 113, "_w1_address": 113, "samp": 113, "0xdeadbe": 113, "answr": 113}, "objects": {}, "objtypes": {}, "objnames": {}, "titleterms": {"kontakt": 0, "navig": [0, 870], "googl": 0, "map": [0, 7, 134, 202, 207, 210, 213, 216, 232, 242, 306, 337, 533, 534, 562, 623, 624, 715, 716, 781, 927], "streetview": 0, "curriculum": [1, 74, 75], "vita": 1, "\u00fcber": [2, 187, 197, 202, 210, 218], "mich": [2, 204], "projekt": [3, 23], "au": 3, "selbstst\u00e4ndig": 3, "t\u00e4tigkeit": 3, "nichtselbstst\u00e4ndig": 3, "skill": [4, 151], "angebot": 5, "In": [5, 32, 45, 66, 114, 159, 161, 162, 164, 194, 197, 258, 259, 261, 280, 282, 305, 318, 360, 451, 453, 459, 460, 521, 526, 528, 569, 573, 584, 585, 586, 587, 588, 589, 614, 671, 675, 679, 709, 710, 716, 729, 788, 837, 838, 845, 901, 951, 984, 986, 1000, 1007, 1048, 1161], "hous": 5, "schulungen": [5, 1155], "zu": [5, 23, 180, 197], "meiner": 5, "person": [5, 255, 480, 679], "schwerpunk": 5, "c": [5, 7, 68, 69, 70, 71, 72, 98, 108, 109, 111, 112, 116, 151, 165, 180, 181, 197, 207, 215, 216, 232, 257, 258, 259, 261, 262, 270, 279, 281, 318, 319, 324, 345, 351, 360, 369, 409, 410, 447, 454, 459, 466, 473, 515, 521, 532, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 571, 577, 578, 582, 583, 584, 596, 602, 604, 641, 649, 664, 666, 667, 668, 671, 672, 704, 705, 709, 716, 717, 725, 734, 739, 743, 762, 910, 930, 948, 951, 1053, 1158, 1159, 1160, 1161, 1162, 1164], "python": [5, 8, 11, 59, 61, 63, 64, 91, 96, 128, 147, 174, 177, 186, 187, 189, 190, 191, 193, 195, 197, 200, 202, 205, 211, 212, 214, 217, 219, 221, 224, 225, 226, 227, 228, 230, 231, 233, 236, 237, 240, 243, 245, 248, 250, 251, 252, 253, 254, 256, 258, 259, 261, 263, 264, 265, 266, 267, 268, 273, 275, 276, 280, 282, 283, 284, 285, 286, 287, 288, 289, 292, 293, 294, 295, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 342, 345, 347, 360, 667, 695, 709, 716, 910, 912, 1009, 1012, 1016, 1031, 1032, 1033, 1035, 1037, 1039, 1047, 1058, 1061, 1106, 1107, 1108, 1121, 1122, 1124, 1134, 1135, 1136, 1137, 1138, 1169, 1170], "linux": [5, 80, 81, 82, 98, 111, 112, 116, 154, 159, 167, 169, 170, 172, 179, 194, 196, 201, 206, 260, 269, 270, 290, 291, 345, 347, 360, 362, 787, 839, 840, 843, 849, 906, 908, 912, 913, 914, 916, 929, 947, 970, 1156, 1166, 1167, 1174, 1175, 1176, 1177, 1178], "schulungsstil": 5, "preis": 5, "cours": [6, 11, 12, 59, 61, 63, 64, 79, 147, 149, 170, 206, 215, 259, 261, 269, 298, 301, 344, 450, 1107, 1163, 1166], "materi": [6, 24, 28, 30, 177, 179, 194, 215, 341, 356, 357, 361, 450, 1106, 1107, 1128], "einleitung": [7, 207], "datatyp": [7, 197, 202, 204, 207, 210, 219, 223, 226, 229, 234, 236, 242, 246, 249, 251, 252, 264, 266, 267, 273, 274, 276, 284, 286, 287, 288, 292, 293, 294, 304, 306, 308, 310, 314, 315, 316, 320, 321, 322, 326, 337, 365, 415, 418, 1010, 1039, 1040, 1044], "number": [7, 207, 210, 213, 234, 246, 249, 337, 695, 766, 773, 774, 937, 1011, 1027, 1030, 1039, 1047, 1048, 1069, 1072, 1082, 1083, 1125, 1129, 1130, 1153], "integ": [7, 187, 197, 202, 207, 210, 234, 236, 246, 249, 255, 267, 274, 294, 306, 310, 316, 322, 337, 383, 430, 435, 651, 1018, 1039, 1048], "string": [7, 173, 174, 180, 187, 197, 204, 207, 210, 213, 218, 219, 223, 226, 229, 234, 236, 239, 242, 246, 249, 251, 252, 255, 264, 267, 271, 274, 288, 294, 306, 310, 316, 322, 334, 336, 337, 364, 377, 378, 384, 390, 454, 632, 633, 634, 647, 678, 679, 1039, 1052, 1053, 1054, 1089, 1132], "compound": [7, 197, 207, 219, 223, 226, 229, 234, 236, 242, 246, 249, 252, 264, 284, 288, 294, 306, 310, 322, 418, 1040], "list": [7, 11, 23, 173, 174, 187, 197, 204, 207, 210, 213, 218, 219, 223, 226, 229, 234, 236, 242, 246, 249, 252, 264, 267, 274, 284, 288, 294, 306, 316, 322, 423, 454, 521, 545, 562, 576, 619, 667, 680, 717, 771, 798, 799, 800, 822, 892, 1004, 1007, 1010, 1011, 1020, 1040, 1048, 1055, 1084, 1085, 1136], "arrai": [7, 175, 197, 207, 364, 373, 377, 415, 417, 427, 440, 550, 602, 604, 612, 656, 671, 682, 721], "javascript": [7, 207, 246], "std": [7, 108, 134, 207, 216, 232, 258, 259, 261, 318, 319, 469, 528, 533, 534, 544, 562, 585, 586, 587, 588, 589, 597, 603, 604, 605, 606, 616, 623, 624, 634, 647, 660, 663, 667, 670, 672, 679, 715, 716, 717, 721, 723, 726, 727, 728, 730, 731, 736, 737, 738, 739, 741, 742, 743, 746, 752, 753, 754, 758, 761], "vector": [7, 108, 207, 528, 544, 562, 569, 585, 603, 604, 605, 606, 620, 663, 672, 717, 746, 963], "java": [7, 207], "dictionari": [7, 173, 187, 197, 202, 204, 207, 210, 218, 219, 223, 226, 229, 234, 236, 239, 242, 246, 249, 252, 255, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322, 337, 1004, 1008, 1021, 1040, 1056, 1076, 1103], "kei": [7, 164, 207, 255, 322, 337, 626, 627, 870, 921, 923], "valu": [7, 64, 192, 207, 278, 279, 322, 337, 375, 431, 588, 948, 970, 1041], "set": [7, 38, 64, 192, 197, 202, 207, 210, 218, 219, 223, 226, 229, 234, 236, 242, 246, 249, 252, 264, 267, 274, 284, 288, 294, 306, 310, 316, 322, 866, 867, 982, 1004, 1040, 1057, 1095, 1120, 1130], "mathematisch": [7, 207], "mengen": [7, 197, 207], "while": [7, 174, 187, 197, 207, 226, 234, 236, 239, 242, 249, 252, 274, 316, 322, 400, 401, 808, 813, 814, 1043, 1069, 1093], "function": [7, 43, 161, 174, 192, 197, 207, 210, 213, 216, 219, 223, 226, 234, 236, 242, 246, 251, 252, 255, 258, 259, 261, 263, 267, 274, 280, 288, 298, 299, 301, 304, 305, 306, 308, 314, 315, 316, 318, 319, 320, 321, 322, 326, 342, 375, 377, 382, 409, 411, 413, 414, 419, 451, 452, 511, 545, 569, 578, 583, 585, 590, 594, 610, 667, 674, 677, 678, 679, 680, 689, 719, 731, 732, 771, 772, 834, 928, 930, 968, 1003, 1005, 1006, 1008, 1010, 1011, 1030, 1047, 1049, 1050, 1051, 1059, 1081, 1083, 1087, 1090, 1098, 1100, 1132], "basic": [8, 64, 71, 91, 118, 153, 165, 174, 186, 191, 193, 194, 195, 196, 200, 201, 205, 206, 215, 224, 227, 230, 237, 243, 248, 251, 254, 260, 266, 269, 273, 276, 283, 286, 287, 288, 290, 291, 292, 293, 294, 295, 298, 301, 304, 305, 306, 308, 309, 310, 314, 315, 316, 317, 320, 321, 322, 323, 326, 337, 360, 405, 409, 412, 418, 445, 452, 468, 469, 523, 526, 591, 596, 599, 602, 603, 605, 609, 612, 623, 629, 638, 674, 682, 716, 721, 725, 726, 727, 728, 761, 773, 774, 775, 836, 839, 840, 843, 853, 892, 903, 908, 917, 929, 936, 944, 952, 984, 1006, 1007, 1060, 1062, 1096, 1115, 1126, 1127, 1147, 1148, 1149, 1167, 1170], "2021": [8, 11, 115, 198, 200, 203, 205, 206, 208, 211, 214, 215, 216, 217, 221, 224, 226, 227, 229, 230, 232, 334, 335, 342, 345, 346, 347, 348, 349, 350, 351, 360], "xx": 8, "yy": 8, "train": [8, 24, 25, 26, 27, 28, 147, 151, 161, 170, 175, 190, 191, 193, 194, 195, 196, 198, 200, 201, 205, 208, 211, 214, 215, 216, 217, 221, 224, 233, 237, 240, 243, 245, 248, 251, 254, 263, 266, 273, 276, 361, 1107, 1113], "inform": [8, 39, 139, 149, 161, 186, 189, 190, 191, 193, 194, 195, 196, 198, 200, 201, 205, 208, 211, 214, 215, 216, 217, 221, 224, 233, 237, 240, 243, 245, 248, 251, 254, 263, 266, 273, 276, 333, 342, 445, 729, 1037, 1107], "\u00fcberblick": [8, 198, 208, 217, 233, 245, 1160], "log": [8, 106, 138, 155, 190, 191, 194, 195, 203, 205, 206, 208, 211, 215, 217, 221, 224, 233, 245, 254, 342, 355, 356, 837, 838, 845], "tag": [8, 181, 200, 204, 208, 211, 217, 233, 245, 246], "1": [8, 19, 23, 37, 74, 79, 98, 108, 113, 116, 156, 159, 171, 179, 181, 186, 190, 191, 193, 194, 195, 197, 198, 200, 205, 206, 208, 211, 215, 216, 217, 221, 224, 227, 230, 233, 237, 245, 270, 273, 276, 279, 280, 281, 282, 283, 287, 291, 293, 298, 304, 305, 308, 309, 319, 341, 343, 344, 351, 358, 360, 363, 364, 365, 367, 371, 375, 384, 386, 387, 388, 389, 393, 394, 397, 400, 406, 407, 408, 409, 410, 413, 415, 419, 423, 425, 427, 430, 431, 432, 433, 435, 436, 438, 439, 445, 459, 469, 472, 474, 510, 572, 574, 581, 592, 595, 602, 604, 685, 690, 731, 736, 742, 757, 758, 769, 774, 781, 792, 802, 870, 909, 910, 916, 925, 939, 952, 953, 955, 957, 959, 960, 971, 978, 982, 985, 986, 1002, 1010, 1015, 1036, 1038, 1039, 1045, 1048, 1053, 1054, 1056, 1057, 1058, 1059, 1121, 1132, 1133, 1156], "2": [8, 19, 23, 37, 75, 79, 98, 108, 116, 156, 159, 181, 186, 187, 190, 191, 193, 194, 195, 197, 200, 204, 205, 206, 208, 211, 215, 216, 217, 221, 224, 226, 227, 230, 233, 237, 245, 270, 273, 276, 279, 280, 281, 282, 283, 287, 291, 298, 304, 305, 308, 309, 315, 319, 356, 358, 360, 363, 364, 365, 367, 371, 375, 384, 386, 387, 388, 389, 393, 394, 397, 400, 406, 407, 409, 410, 413, 415, 419, 423, 425, 427, 430, 431, 432, 433, 435, 436, 438, 439, 445, 460, 469, 472, 474, 510, 559, 572, 574, 581, 592, 595, 602, 604, 686, 691, 731, 736, 742, 757, 758, 774, 781, 802, 870, 909, 910, 916, 925, 939, 952, 953, 955, 957, 959, 960, 971, 978, 982, 985, 986, 998, 1002, 1010, 1015, 1036, 1038, 1039, 1045, 1047, 1048, 1054, 1056, 1057, 1058, 1059, 1117, 1119, 1120, 1121, 1132, 1133], "live": [8, 42, 44, 45, 173, 176, 198, 208, 211, 221, 270, 567, 607, 608, 610, 611, 614, 615, 616, 628, 667, 678, 711, 712, 739, 741, 841, 867, 931, 949], "hack": [8, 42, 44, 45, 173, 176, 198, 208, 211, 221, 270, 273, 277, 280, 283, 309, 567, 607, 608, 610, 611, 614, 615, 616, 628, 667, 678, 711, 712, 739, 741, 868, 949], "jupyt": [8, 9, 40, 198, 199, 203, 204, 205, 208, 209, 211, 212, 221, 222, 224, 225, 227, 228, 231, 233, 235, 238, 241, 244, 247, 250, 252, 253, 256, 265, 268, 271, 275, 284, 285, 289, 295, 300, 303, 306, 307, 310, 311, 317, 337, 1113, 1114], "notebook": [8, 9, 40, 193, 198, 199, 203, 204, 205, 208, 209, 211, 212, 214, 221, 222, 224, 225, 227, 228, 229, 231, 233, 235, 238, 241, 244, 247, 250, 252, 253, 256, 265, 268, 271, 275, 284, 285, 289, 295, 300, 303, 306, 307, 310, 311, 317, 337, 342, 1111, 1113, 1114], "link": [8, 23, 39, 138, 157, 175, 186, 189, 191, 193, 195, 198, 200, 205, 206, 208, 217, 221, 224, 227, 233, 240, 251, 254, 287, 293, 347, 349, 423, 425, 674, 688, 695, 713, 720, 724, 787, 798, 799, 849, 870, 891, 909, 916, 924, 1000, 1001, 1032, 1062, 1063, 1108, 1124, 1126, 1127, 1129, 1130, 1131, 1132, 1139, 1144], "programmierung": [9, 11, 173, 198, 199, 208, 209, 217, 233, 235, 245, 247, 360], "grundlagen": [9, 11, 186, 197, 198, 199, 208, 209, 211, 212, 217, 221, 225, 228, 231, 233, 235, 245, 247, 250, 253, 256, 265, 268, 289, 360], "detail": [10, 79, 206, 210, 242, 249, 281, 337, 359, 435, 513, 603, 1038], "content": [11, 24, 37, 149, 151, 153, 154, 155, 156, 157, 158, 159, 160, 169, 178, 182, 183, 213, 344, 448, 550, 553, 559, 562, 568, 650, 727, 839, 859, 872, 878, 884, 887, 904, 912, 913, 920, 929, 945, 947, 949, 964, 974, 977, 991, 1011, 1066, 1067, 1071, 1080, 1094, 1101, 1148, 1150, 1153, 1161, 1164, 1166], "anhand": [11, 197, 217, 233, 245, 360, 1167], "von": [11, 23, 168, 173, 177, 180, 187, 197, 204, 217, 218, 233, 245, 337, 360, 1167], "12": [11, 23, 45, 117, 118, 121, 129, 134, 177, 196, 197, 201, 208, 216, 229, 230, 232, 263, 314, 315, 316, 319, 320, 321, 322, 323, 342, 347, 351, 353, 360], "und": [11, 23, 167, 171, 187, 197, 198, 202, 204, 208, 210, 213, 217, 233, 236, 242, 245, 249, 255, 322, 343, 360, 385, 394, 1160, 1171], "13": [11, 23, 41, 45, 164, 186, 197, 198, 208, 261, 270, 273, 274, 276, 360], "4": [11, 23, 108, 156, 181, 190, 193, 197, 205, 206, 208, 211, 215, 216, 233, 245, 270, 351, 360, 365, 423, 427, 433, 469, 472, 574, 692, 1010], "templat": [12, 134, 215, 232, 281, 532, 545, 546, 547, 548, 564, 565, 566, 594, 595, 596, 602, 635, 681, 684, 689, 691, 719, 752], "descript": [12, 59, 60, 63, 380, 395, 404, 411, 417, 421, 424, 428, 437, 441, 446, 447, 480, 567, 575, 590, 593, 596, 632, 637, 646, 648, 651, 653, 654, 655, 656, 657, 658, 659, 660, 662, 663, 665, 707, 708, 732, 740, 744, 756, 760, 762, 904, 912, 913, 967], "sidebar": [12, 37], "metadata": [12, 258, 259, 261, 892], "about": [13, 108, 151, 170, 229, 234, 246, 264, 267, 273, 277, 294, 301, 316, 321, 322, 462, 672, 709, 899, 1000, 1052, 1055, 1056, 1057], "thi": [13, 32, 37, 117, 121, 122, 124, 127, 129, 133, 138, 156, 161, 162, 164, 165, 175, 184, 581, 595, 710, 829, 908, 931, 984, 1001, 1008, 1010], "site": [13, 28, 32, 138, 158, 160, 184], "licens": 13, "gplv3": 13, "github": [13, 114, 134, 158, 160, 190, 191, 203, 211, 342, 510, 524, 1108], "sphinx": [13, 40, 67, 160], "instal": [13, 62, 124, 157, 161, 165, 169, 182, 183, 186, 211, 215, 216, 296, 312, 342, 347, 362, 457, 785, 927, 982, 993, 998, 999, 1032, 1062, 1063, 1095, 1108, 1124, 1141, 1143, 1148, 1150, 1163], "instruct": [13, 426, 736, 955, 985, 1002], "pip": [13, 287], "venv": [13, 287], "work": [13, 17, 66, 98, 114, 116, 137, 142, 156, 190, 221, 259, 261, 278, 279, 280, 281, 349, 443, 444, 445, 524, 595, 761, 829, 830, 866, 869, 873, 998], "progress": [13, 17, 137], "more": [13, 156, 174, 187, 226, 229, 234, 242, 246, 249, 251, 263, 264, 266, 267, 270, 272, 273, 276, 282, 283, 286, 287, 292, 293, 294, 301, 304, 308, 314, 315, 316, 320, 321, 322, 326, 342, 365, 371, 394, 410, 412, 426, 436, 452, 462, 464, 574, 584, 587, 594, 607, 613, 667, 709, 710, 714, 731, 818, 847, 848, 849, 853, 854, 899, 926, 968, 1005, 1007, 1009, 1052, 1055, 1056, 1057, 1107, 1116, 1141, 1153], "opentrain": [14, 23], "draft": [15, 756, 904, 1061], "topic": [15, 21, 74, 75, 99, 100, 102, 103, 104, 105, 150, 186, 190, 193, 214, 215, 216, 227, 232, 251, 254, 270, 273, 276, 279, 280, 304, 308, 318, 319, 332, 346, 350, 351, 360, 380, 395, 404, 411, 417, 421, 424, 428, 437, 441, 446, 447, 473, 516, 517, 518, 519, 520, 521, 522, 525, 567, 575, 590, 593, 596, 612, 618, 622, 630, 635, 637, 640, 646, 664, 665, 669, 676, 683, 694, 707, 708, 718, 723, 732, 740, 744, 756, 760, 762, 763, 764, 787, 907, 922, 940, 942, 961, 967, 988, 994, 995, 1010, 1015, 1023, 1061, 1110, 1114, 1118, 1122, 1124, 1128, 1140, 1146], "miscellan": [16, 136, 147, 151, 170, 174, 194, 223, 234, 236, 242, 252, 258, 259, 263, 267, 270, 279, 282, 283, 288, 293, 294, 304, 305, 308, 315, 316, 318, 322, 545, 567, 646, 650, 681, 744, 946, 957, 959, 1054, 1122], "s5": [17, 18, 151], "integr": [17, 118, 120, 123, 671, 687], "web": [17, 94, 95, 152], "slide": [17, 18, 30, 45, 174, 345, 357, 978, 982], "implement": [17, 117, 121, 122, 124, 125, 127, 129, 133, 134, 242, 305, 318, 328, 334, 474, 481, 491, 496, 506, 507, 508, 509, 513, 521, 526, 527, 571, 572, 577, 583, 585, 643, 667, 678, 768, 771, 790, 826, 1005, 1011, 1027, 1086], "note": [17, 37, 62, 128, 136, 169, 328, 467, 855], "todo": [17, 151, 180, 183, 194, 200, 329, 330, 331, 348, 450, 545, 546, 549, 552, 555, 558, 561, 564, 767, 771, 779, 811, 973, 976, 980, 1123, 1147, 1152], "test": [18, 37, 42, 43, 44, 45, 50, 72, 117, 121, 122, 124, 125, 127, 129, 133, 165, 186, 216, 240, 251, 254, 263, 272, 273, 276, 277, 278, 282, 283, 296, 298, 301, 304, 305, 308, 312, 350, 356, 360, 451, 465, 474, 494, 510, 524, 526, 527, 587, 771, 790, 823, 915, 944, 996, 999, 1063, 1096, 1103, 1104, 1105, 1113, 1141, 1142, 1146, 1148, 1150, 1153, 1163, 1179], "level": [19, 439], "head": [19, 37, 798, 901, 1116], "imag": [19, 175, 194, 998], "screencast": [20, 148], "written": [21, 116, 570, 573], "new": [21, 125, 134, 150, 216, 232, 258, 259, 261, 318, 319, 360, 513, 550, 666, 667, 707, 743, 762, 790, 823, 1125], "write": [21, 42, 50, 58, 153, 513, 550, 577, 689, 704, 727, 768, 936, 943, 1028, 1058, 1064, 1133], "netide": [22, 23], "f\u00f6rderantrag": [22, 23], "daten": [23, 210, 218], "antragsteller_in": 23, "allgemein": 23, "projektnam": 23, "untertitel": 23, "3": [23, 98, 108, 116, 134, 156, 181, 190, 191, 193, 194, 195, 196, 197, 200, 205, 206, 211, 215, 216, 217, 219, 221, 226, 227, 230, 233, 237, 245, 252, 270, 273, 276, 279, 281, 282, 283, 287, 291, 293, 304, 305, 306, 308, 309, 315, 319, 360, 365, 415, 419, 423, 427, 433, 435, 436, 438, 439, 469, 472, 474, 510, 574, 687, 758, 939, 955, 959, 960, 1010, 1039, 1047, 1053, 1058], "allgemeinverst\u00e4ndlich": 23, "kurzbeschreibung": 23, "de": [23, 263, 360, 836], "anschlussf\u00f6rderung": 23, "die": [23, 53, 162, 180, 218, 1168], "besonder": [23, 197], "bedeutung": 23, "ihr": 23, "f\u00fcr": [23, 181, 187, 197, 360, 1159], "da": [23, 177, 187, 204, 213, 246], "internet": 23, "internetnutzung": 23, "IN": 23, "\u00f6sterreich": 23, "zielgrupp": 23, "projektziel": 23, "5": [23, 156, 174, 181, 186, 187, 189, 197, 215, 216, 218, 270, 351, 360, 423, 433, 469, 472, 693, 837, 838], "l\u00f6sung": [23, 187], "beschreibung": 23, "der": [23, 197, 202, 218, 343, 360, 1156], "probleml\u00f6sung": 23, "wesentlich": 23, "element": [23, 197, 234, 252, 254, 528, 530, 531, 535, 623, 625, 626, 1044], "ein": [23, 187, 218, 1167, 1172], "nachhaltigen": 23, "impact": 23, "nach": [23, 254], "projektend": 23, "6": [23, 134, 197, 198, 218, 219, 252, 360, 423, 433, 469, 472, 1053, 1171], "umfeldanalys": 23, "wa": [23, 186, 202, 656, 748], "ist": [23, 187], "stand": 23, "technik": 23, "method": [23, 210, 213, 223, 234, 236, 239, 242, 252, 267, 279, 288, 294, 306, 310, 316, 322, 334, 336, 344, 523, 559, 571, 578, 579, 580, 583, 585, 587, 590, 642, 645, 653, 657, 725, 726, 727, 728, 729, 752, 769, 804, 806, 820, 1025, 1027, 1053, 1054, 1055, 1142], "wissen": 23, "welch": 23, "ander": [23, 173, 343], "l\u00f6sungen": 23, "vorhaben": 23, "den": [23, 162, 202, 218], "genannten": 23, "problemen": 23, "gibt": [23, 197], "e": [23, 442, 726], "schon": 23, "7": [23, 190, 197, 198, 218, 360, 423, 433, 1171], "alleinstellungsmerkm": 23, "8": [23, 197, 198, 217, 218, 360, 423, 433, 916, 1121, 1171], "projektergebniss": 23, "erforderlich": 23, "lizenzen": 23, "dritter": 23, "9": [23, 190, 191, 197, 198, 218, 360, 423, 433, 1010, 1156, 1171], "erfolgreich": 23, "projektabschluss": 23, "sonstigen": 23, "aktivit\u00e4ten": 23, "im": [23, 197, 223, 236, 249, 252, 267, 274, 288, 294, 306, 310, 360, 1048], "projektbereich": 23, "angaben": 23, "zur": [23, 168, 187, 197], "fachlichen": 23, "eignung": 23, "mitarbeiterinnen": 23, "projektkernteam": 23, "erfahrung": 23, "vorgesehenen": 23, "projektleiterin": 23, "zum": [23, 173, 218], "maxim": 23, "min\u00fctigen": 23, "video": [23, 24, 31, 205, 263, 293, 309, 675], "risiken": 23, "erfolgskriterien": 23, "am": [23, 187, 246, 360], "angestrebt": 23, "jahr": 23, "10": [23, 45, 100, 101, 134, 140, 171, 174, 179, 190, 193, 197, 232, 233, 260, 261, 262, 263, 264, 278, 301, 302, 304, 305, 307, 342, 346, 347, 348, 352, 360, 423, 530, 837, 838], "umsetzung": 23, "einj\u00e4hrig": 23, "wichtig": 23, "partner_innen": 23, "arbeitsschwerpunkt": 23, "ressourcen": 23, "nutzer_innen": 23, "kommunikationskan\u00e4l": 23, "11": [23, 45, 117, 121, 129, 133, 134, 172, 177, 195, 196, 197, 226, 227, 232, 257, 261, 263, 266, 267, 301, 308, 309, 310, 311, 312, 313, 314, 315, 316, 349, 350, 360, 423, 545, 668, 671, 704, 705, 716, 725, 762], "projekttermin": 23, "termin": [23, 841, 953, 1016], "projektstart": 23, "kosten": 23, "finanzierung": 23, "projektkosten": 23, "personalkosten": 23, "sonstig": 23, "gesamtkosten": 23, "wir": [23, 202, 218], "beantragen": 23, "folgend": 23, "f\u00f6rderung": 23, "restlichen": 23, "werden": [23, 197], "finanziert": 23, "durch": [23, 187], "sonderprei": 23, "14": [23, 45, 117, 118, 121, 129, 134, 177, 186, 197, 198, 201, 215, 257, 360], "erg\u00e4nzend": 23, "transparenz": 23, "mehrfachantr\u00e4g": 23, "nutzung": 23, "whataventur": 23, "plattform": 23, "eingereicht": 23, "teil": 23, "einer": [23, 177, 186, 197, 360], "schulischen": 23, "verpflichtung": 23, "z": 23, "b": 23, "htl": 23, "diplomarbeit": 23, "wie": [23, 204, 210], "haben": [23, 187], "sie": [23, 187], "erfahren": 23, "mehrfachnennungen": 23, "m\u00f6glich": 23, "16": [23, 216, 240, 254, 266, 267, 360, 1010, 1156], "datenschutz": 23, "screenplai": [24, 64, 327, 451, 547, 550, 553, 556, 559, 562, 565, 597, 598, 599, 600, 601, 604, 605, 606, 624, 625, 626, 627, 765, 768, 773, 778, 783, 785, 823, 826, 829, 974, 977, 981, 1049, 1136, 1143, 1148, 1150, 1153], "The": [24, 39, 43, 45, 62, 101, 114, 117, 152, 165, 197, 213, 216, 219, 226, 243, 252, 255, 270, 278, 280, 282, 288, 291, 298, 301, 304, 305, 308, 310, 318, 319, 322, 363, 371, 372, 409, 410, 425, 432, 433, 442, 443, 447, 448, 457, 525, 526, 578, 602, 623, 624, 646, 666, 667, 675, 680, 682, 684, 709, 727, 730, 741, 762, 806, 836, 845, 846, 853, 870, 873, 884, 887, 890, 892, 901, 903, 907, 923, 925, 927, 928, 930, 936, 944, 948, 963, 965, 972, 984, 986, 987, 996, 997, 1005, 1006, 1008, 1012, 1016, 1024, 1027, 1031, 1033, 1035, 1042, 1047, 1053, 1095, 1116, 1123, 1132, 1142, 1163], "problem": [24, 407, 429, 452, 453, 461, 467, 468, 469, 472, 478, 525, 526, 668, 680, 684, 704, 705, 714, 730, 743, 748, 766, 800, 847, 866, 925, 927, 931, 986, 1001, 1002, 1006, 1020, 1115, 1137, 1144], "And": [24, 42, 62, 64, 114, 119, 120, 134, 165, 261, 264, 267, 270, 273, 278, 279, 280, 281, 282, 283, 288, 291, 293, 296, 298, 301, 304, 305, 308, 309, 310, 312, 316, 318, 319, 322, 383, 427, 451, 452, 454, 457, 458, 463, 464, 465, 471, 474, 480, 488, 489, 494, 502, 508, 523, 570, 571, 577, 582, 598, 602, 603, 604, 606, 624, 639, 640, 644, 647, 672, 678, 680, 682, 695, 712, 715, 716, 717, 719, 720, 725, 737, 739, 741, 743, 758, 774, 832, 836, 837, 838, 842, 845, 851, 853, 889, 901, 903, 908, 912, 918, 919, 930, 943, 965, 993, 994, 996, 998, 999, 1000, 1001, 1003, 1008, 1012, 1013, 1016, 1020, 1021, 1022, 1027, 1028, 1029, 1030, 1094, 1095, 1096, 1104, 1116, 1121, 1126, 1127, 1129, 1130, 1131, 1141, 1163], "me": [24, 158, 318, 942], "open": [24, 142, 167, 283, 477, 768, 769, 933, 936, 939, 941, 978, 1005, 1058], "sourc": [24, 40, 157, 167, 183, 452, 470, 766, 769, 771, 774, 776, 779, 783, 788, 790, 800, 802, 810, 813, 818, 937, 986, 1063, 1121], "walk": [24, 270, 342], "through": [24, 270, 342], "us": [25, 26, 27, 28, 29, 30, 31, 32, 38, 42, 155, 159, 161, 165, 175, 176, 182, 184, 194, 213, 215, 216, 229, 232, 368, 370, 373, 388, 403, 425, 435, 443, 444, 453, 455, 469, 472, 489, 510, 610, 634, 655, 663, 675, 679, 680, 716, 730, 741, 752, 753, 754, 902, 914, 915, 916, 952, 968, 985, 986, 996, 997, 1003, 1005, 1008, 1011, 1021, 1030, 1136, 1142, 1143], "case": [25, 26, 27, 28, 29, 30, 215, 399, 403, 474, 536, 538, 541, 715, 716, 937, 941, 942, 943, 995, 1003, 1030, 1142, 1148], "custom": [25, 142, 145, 158, 332, 571, 572, 586, 592, 616, 670, 1130, 1132, 1148], "subtract": [25, 569], "known": [25, 153], "calcul": [26, 213, 392, 471, 1028], "minimum": [26, 788], "durat": 26, "trainer": [27, 169], "editor": [27, 206], "end": [27, 681], "user": [27, 42, 46, 216, 218, 360, 573, 652, 657, 658, 659, 660, 661, 662, 774, 842, 843, 845, 846, 847, 855, 856, 867, 927, 1007, 1097, 1099, 1101, 1102, 1104, 1136], "audienc": [27, 1163], "from": [28, 29, 31, 38, 40, 42, 43, 45, 57, 101, 114, 134, 140, 146, 165, 175, 183, 184, 192, 232, 242, 270, 273, 278, 287, 305, 360, 378, 400, 406, 448, 451, 594, 597, 638, 647, 651, 677, 678, 717, 778, 783, 824, 829, 914, 926, 944, 968, 977, 984, 1026, 1063, 1103, 1107, 1108, 1113, 1115, 1156], "other": [28, 38, 52, 213, 282, 294, 344, 675, 788, 810, 855, 1015], "menu": 29, "choos": 29, "show": 30, "plain": [30, 610, 638, 639, 667], "text": [30, 291, 409, 897, 900, 903, 1058, 1133], "file": [30, 31, 42, 48, 175, 177, 213, 223, 226, 242, 249, 251, 252, 266, 270, 274, 284, 286, 287, 288, 291, 292, 293, 310, 314, 315, 316, 321, 322, 326, 333, 334, 349, 407, 451, 453, 459, 474, 553, 584, 768, 769, 770, 778, 810, 837, 838, 841, 859, 864, 865, 871, 872, 875, 876, 877, 885, 889, 892, 893, 897, 900, 902, 918, 926, 927, 931, 932, 936, 937, 938, 939, 940, 941, 942, 943, 945, 946, 950, 974, 978, 984, 985, 999, 1005, 1034, 1058, 1063, 1064, 1065, 1086, 1088, 1097, 1099, 1116, 1148], "send": [31, 978, 982], "A": [31, 45, 64, 114, 129, 134, 154, 165, 232, 258, 259, 261, 273, 277, 278, 279, 280, 282, 287, 318, 319, 321, 360, 366, 375, 405, 432, 450, 451, 454, 468, 488, 502, 510, 513, 523, 528, 543, 569, 584, 585, 594, 603, 633, 644, 645, 658, 667, 672, 680, 682, 709, 712, 725, 728, 730, 837, 838, 841, 855, 866, 889, 893, 926, 928, 932, 933, 934, 937, 940, 941, 942, 943, 950, 963, 968, 971, 984, 997, 998, 1001, 1002, 1003, 1006, 1011, 1030, 1033, 1095, 1121, 1126, 1129, 1132, 1133, 1141], "v4l": 31, "camera": 31, "devic": [31, 64, 82, 98, 116, 765, 766, 767, 768, 769, 770, 773, 774, 775, 776, 777, 778, 800, 804, 805, 806, 841, 914, 916, 974], "output": [31, 50, 122, 175, 187, 333, 465, 648, 852, 1010, 1113, 1148], "over": [31, 226, 234, 236, 761, 916, 1046, 1047], "ssh": [31, 206, 270, 291, 339, 347, 917, 920, 921, 922, 923, 924, 925, 926, 927], "captur": [31, 709, 710, 712], "To": [31, 37, 39, 42, 44, 53, 151, 249, 278, 318, 473, 474, 489, 510, 636, 647, 667, 671, 680, 682, 684, 695, 709, 717, 725, 727, 729, 730, 741, 781, 822, 824, 837, 838, 918, 919, 926, 986, 996, 998, 1003, 1005, 1006, 1026, 1027, 1104, 1125, 1126, 1132], "plai": [31, 64, 695], "remot": [31, 98, 114, 116, 136, 478, 491, 505, 837, 838, 918, 919, 923, 926, 927], "system": [31, 156, 229, 270, 291, 349, 360, 381, 445, 642, 733, 859, 865, 927, 929, 930, 931, 936, 947, 965, 968, 971, 1037, 1136, 1156, 1174, 1175, 1176, 1177, 1178], "emoji": 32, "code": [32, 41, 43, 45, 108, 184, 185, 187, 188, 211, 227, 280, 282, 283, 296, 312, 360, 429, 439, 449, 450, 451, 453, 459, 460, 461, 466, 470, 546, 549, 552, 555, 558, 561, 564, 594, 679, 727, 748, 771, 772, 776, 777, 778, 779, 780, 790, 791, 800, 801, 812, 813, 814, 818, 819, 942, 973, 976, 980, 1000, 1001, 1002, 1103, 1104, 1105, 1108, 1111, 1114, 1121, 1134, 1143, 1147, 1152, 1163], "sphinxemoji": 32, "setup": [32, 64, 79, 110, 157, 161, 183, 190, 191, 193, 194, 195, 216, 266, 272, 273, 276, 279, 281, 283, 286, 287, 291, 292, 293, 314, 315, 320, 321, 326, 465, 523, 525, 907, 915, 923, 934, 998, 999, 1032, 1095, 1096, 1143, 1153], "most": [32, 38, 64, 682, 1136], "here": [32, 155, 474, 926], "all": [32, 38, 53, 64, 210, 213, 232, 278, 308, 319, 360, 641, 667, 675, 710, 730, 829, 847, 984, 1000, 1018, 1106], "recip": 33, "isoamsa": 34, "txt": [34, 35, 36, 38], "ad": [34, 35, 36, 158, 1000, 1125, 1132], "mathemat": [34, 35, 36], "symbol": [34, 35, 36, 369, 384, 445, 891, 984], "arrow": 34, "isoamsr": 35, "relat": [35, 170, 273, 276, 387, 749], "isonum": 36, "binari": [36, 489, 1058], "oper": [36, 174, 187, 197, 210, 226, 229, 232, 239, 242, 246, 249, 263, 278, 298, 310, 337, 371, 386, 387, 388, 391, 392, 394, 395, 400, 412, 523, 545, 570, 571, 577, 585, 625, 725, 733, 739, 768, 769, 770, 852, 931, 968, 1027, 1037, 1039, 1041, 1057, 1127], "layout": [37, 242, 418], "page": [37, 95, 158, 160, 781, 870, 902, 930], "admonit": 37, "i": [37, 45, 155, 156, 173, 213, 223, 229, 234, 239, 242, 249, 251, 252, 284, 288, 291, 293, 322, 334, 346, 371, 397, 444, 450, 468, 523, 542, 569, 576, 638, 644, 645, 680, 682, 705, 709, 714, 717, 726, 730, 734, 738, 783, 794, 815, 830, 841, 845, 846, 851, 852, 853, 866, 876, 889, 916, 926, 927, 928, 931, 932, 933, 934, 935, 936, 939, 941, 943, 945, 946, 963, 966, 984, 1001, 1003, 1008, 1058, 1115, 1129, 1153], "an": [37, 158, 229, 282, 297, 304, 308, 313, 338, 342, 360, 456, 461, 571, 680, 695, 771, 889, 915, 926, 931, 968, 1001, 1012, 1021, 1048, 1050, 1143, 1161], "tip": 37, "hint": [37, 491, 521], "import": [37, 165, 173, 213, 223, 232, 342, 576, 982, 1007, 1015, 1123], "attent": [37, 1050], "caution": [37, 645], "error": [37, 43, 165, 229, 282, 283, 304, 305, 308, 410, 435, 469, 591, 601, 602, 686, 689, 852, 916, 928, 937, 941, 942, 943, 1020, 1076], "danger": [37, 377, 738, 867], "blech": 37, "titl": 37, "blah": 37, "kursdaten": [37, 1157, 1158, 1159, 1160, 1165, 1167, 1168, 1172, 1173, 1174, 1175, 1177, 1178, 1179], "local": [37, 39, 98, 114, 116, 136, 174, 197, 408, 440, 457, 478, 923, 926, 959, 986, 1049, 1143], "bleh": 37, "do": [37, 42, 151, 213, 255, 318, 401, 438, 457, 468, 667, 800, 822, 837, 838, 853, 984], "mmlalia": 38, "mathml": 38, "alias": 38, "entiti": [38, 953], "restructuredtext": 39, "cheat": [39, 342], "sheet": [39, 342], "further": [39, 139, 178, 214, 215, 237, 333, 342, 439, 675, 729, 1037], "document": [39, 160, 210, 226, 306, 337, 607, 608, 609, 610, 611, 613, 614, 615, 616, 619, 620, 623, 628, 774, 790, 792, 796, 798, 820, 824, 827, 837, 838, 841, 845, 852, 853, 854, 855, 870, 871, 872, 873, 889, 892, 893, 926, 928, 930, 932, 933, 934, 936, 939, 940, 941, 942, 943, 946, 984, 985, 1036, 1060, 1070, 1133, 1141, 1148], "extern": [39, 296, 312, 328, 406, 455, 584, 785, 786, 915, 1001, 1071, 1163], "section": 39, "refer": [39, 151, 154, 197, 223, 226, 229, 236, 249, 252, 258, 259, 261, 264, 267, 271, 274, 279, 282, 288, 294, 306, 318, 322, 375, 413, 440, 582, 676, 679, 680, 682, 709, 710, 712, 721, 726, 728, 729, 758, 759, 817, 1048], "That": [39, 255, 258, 259, 261, 278, 305, 414, 472, 569, 576, 667, 670, 680, 709, 727, 728, 810, 845, 916, 926, 931, 932, 935, 1003, 1030, 1150], "we": [39, 42, 45, 53, 318, 449, 451, 800, 829, 996, 1148], "anoth": [39, 242, 449, 968, 1000], "contain": [39, 134, 232, 252, 278, 281, 319, 545, 561, 562, 563, 602, 603, 617, 618, 621, 622, 623, 667, 671, 719, 798, 998], "abov": 39, "footnot": 39, "sphinxish": 40, "run": [40, 140, 159, 465, 524, 587, 818, 907, 932, 933, 934, 998, 999, 1035, 1111, 1114, 1141], "seminar": 41, "clean": [41, 43, 45, 220, 280, 282, 283, 360, 450, 451], "2022": [41, 99, 100, 101, 102, 103, 104, 105, 232, 233, 234, 237, 240, 243, 245, 248, 251, 254, 257, 260, 261, 262, 263, 264, 266, 267, 352, 353, 354, 360], "04": [41, 105, 159, 232, 243, 245, 248, 281, 282, 283, 284, 285, 319, 342, 360, 998], "agenda": [41, 190, 191, 193, 194, 195, 196, 201, 205, 206, 243, 248, 260, 269, 273, 276, 282, 286, 290, 292, 296, 298, 304, 308, 312, 314, 318, 320, 326, 355, 356, 1163], "timelin": 41, "befor": [42, 64, 142, 175, 298, 301, 725, 1148], "formal": [42, 371], "unit": [42, 43, 45, 72, 186, 216, 254, 263, 273, 276, 350, 510, 526, 587, 1096, 1146], "initi": [42, 223, 258, 259, 261, 318, 319, 373, 385, 434, 521, 552, 553, 554, 569, 576, 587, 624, 647, 667, 669, 670, 671, 672, 716, 738, 743, 804, 815, 827, 957, 959], "structur": [42, 43, 134, 147, 151, 174, 237, 258, 259, 261, 263, 285, 296, 307, 311, 312, 318, 403, 411, 418, 421, 427, 463, 510, 545, 716, 721, 741, 778, 806, 1002, 1015, 1141, 1148, 1163], "snippet": [42, 44, 50], "userdb": [42, 46, 49, 50, 55, 58, 215, 545, 659, 663], "bin": 42, "binaryfil": 42, "cpp": [42, 459, 510, 513, 685, 686, 687, 690, 691, 692, 693, 696, 697, 699, 700, 701, 702, 703], "extend": [42, 210, 587, 1024], "read": [42, 49, 50, 58, 213, 220, 333, 334, 344, 378, 439, 451, 474, 675, 717, 768, 826, 932, 936, 942, 944, 1058, 1064, 1065, 1097, 1098, 1099, 1100, 1113, 1133], "iter": [42, 176, 187, 192, 197, 202, 204, 210, 213, 218, 219, 223, 226, 229, 234, 236, 239, 242, 251, 252, 263, 264, 266, 267, 273, 276, 280, 284, 286, 287, 288, 292, 293, 305, 306, 310, 314, 315, 316, 320, 321, 322, 326, 334, 602, 603, 626, 667, 695, 702, 715, 716, 717, 761, 798, 1010, 1012, 1013, 1014, 1026, 1046, 1047, 1056], "bug": [42, 47, 53, 388, 553, 717], "faschingbau": [42, 158], "As": [42, 472, 489, 680, 719, 916, 950, 984, 1021, 1150], "last": [42, 388, 409, 410, 439, 592, 595, 731, 960, 982, 1148], "name": [42, 43, 122, 223, 226, 242, 382, 420, 578, 667, 810, 854, 872, 978, 1049, 1060], "wrap": [42, 186, 435, 667, 1006], "up": [42, 156, 186, 220, 263, 281, 282, 304, 347, 435, 667, 1021], "what": [42, 45, 49, 53, 161, 164, 229, 239, 397, 438, 449, 573, 642, 661, 667, 679, 680, 709, 730, 779, 800, 810, 826, 830, 845, 853, 871, 910, 923, 926, 927, 931, 932, 935, 939, 971, 984, 996, 1000, 1008, 1012, 1016, 1059, 1129, 1132], "have": [42, 45, 449, 800, 996, 1001], "messag": [43, 154, 155, 448, 454, 958, 977, 978, 1124, 1148], "book": [43, 45, 201, 251, 293, 363, 448, 1108], "survei": [43, 449], "comment": [43, 210, 234, 249, 274, 337, 1036, 1077], "format": [43, 50, 213, 219, 234, 294, 322, 1053, 1105], "object": [43, 187, 192, 229, 236, 242, 246, 254, 255, 263, 266, 267, 279, 280, 282, 283, 286, 287, 292, 298, 299, 301, 304, 305, 308, 309, 314, 320, 326, 330, 449, 467, 472, 552, 553, 554, 569, 571, 574, 577, 579, 583, 585, 640, 642, 656, 671, 674, 677, 680, 726, 978, 1001, 1002, 1007, 1015, 1021, 1023, 1025, 1059, 1126, 1130], "data": [43, 121, 122, 123, 124, 174, 176, 202, 211, 237, 251, 254, 263, 287, 304, 305, 306, 308, 383, 427, 430, 451, 575, 579, 602, 721, 845, 959, 1026, 1094, 1108, 1113, 1115], "handl": [43, 229, 232, 242, 254, 273, 276, 281, 282, 283, 304, 305, 308, 353, 461, 469, 591, 928, 1007, 1060], "boundari": [43, 1121], "class": [43, 187, 213, 232, 236, 239, 242, 255, 263, 279, 284, 298, 301, 454, 472, 479, 480, 497, 498, 510, 513, 527, 546, 547, 548, 571, 578, 579, 584, 586, 587, 588, 589, 595, 610, 638, 639, 658, 667, 668, 670, 678, 679, 711, 725, 766, 1006, 1020, 1021, 1024, 1025, 1026, 1027], "switch": [44, 127, 132, 133, 134, 399, 431, 522], "googletest": [44, 182, 524, 1146], "git": [44, 78, 114, 134, 136, 157, 165, 169, 211, 215, 216, 270, 342, 347, 360, 783, 1108], "submodul": 44, "establish": [44, 45, 999], "demo": [44, 125, 272, 273, 280, 455, 474, 711, 726, 841, 867, 931, 966, 970], "straightforward": [44, 187], "main": [44, 114, 416, 507, 508, 509, 747, 749, 751, 753, 1000], "convers": [44, 210, 226, 234, 236, 242, 246, 249, 267, 278, 284, 288, 294, 306, 310, 316, 322, 337, 388, 415, 639, 647, 1039, 1053], "fix": [44, 157, 165, 258, 259, 261, 278, 334, 577, 695, 741, 800, 801, 813, 814], "shortcom": 44, "softwar": [45, 134, 183, 280, 449, 450, 916, 989, 992, 1165], "craft": [45, 280, 450], "09": [45, 134, 159, 214, 224, 232, 298, 299, 300, 301, 302, 303, 360], "00": 45, "15": [45, 197, 203, 240, 273, 276, 286, 287, 288, 342, 349, 354, 360, 837, 838], "introductori": [45, 270, 695, 949], "word": [45, 249, 409, 410, 439, 442, 592, 595, 722, 731, 870, 1075, 1092], "engin": [45, 251, 916], "disciplin": 45, "coffe": 45, "break": [45, 197, 234, 402, 1043, 1046], "project": [45, 110, 114, 126, 134, 158, 174, 215, 216, 230, 254, 259, 261, 263, 279, 281, 282, 283, 296, 298, 301, 304, 305, 308, 309, 312, 348, 349, 350, 354, 356, 449, 451, 510, 515, 524, 525, 587, 1095, 1135, 1141, 1163, 1166], "enter": [45, 64, 226, 602, 645, 680, 706, 715, 729, 813, 902, 970, 1000, 1008, 1020, 1021, 1116, 1121, 1126], "framework": 45, "lunch": 45, "cornerston": 45, "45": 45, "keep": [45, 159, 872], "small": 45, "23": [45, 195, 221, 237, 243, 261, 269, 279, 290, 291, 360], "59": 45, "extrem": 45, "program": [45, 50, 64, 94, 125, 170, 186, 192, 213, 216, 232, 242, 254, 255, 263, 266, 270, 280, 282, 283, 286, 287, 288, 292, 298, 301, 304, 305, 308, 309, 314, 320, 322, 326, 349, 360, 364, 365, 367, 403, 404, 405, 411, 437, 442, 447, 449, 454, 474, 507, 508, 509, 513, 569, 730, 747, 749, 751, 753, 771, 823, 855, 866, 867, 908, 910, 929, 944, 947, 948, 951, 963, 973, 981, 984, 1016, 1023, 1032, 1033, 1035, 1037, 1084, 1096, 1107, 1134, 1162, 1174, 1175, 1176, 1177, 1178], "session": 45, "find": [46, 139, 157, 175, 469, 528, 609, 627, 757, 898, 1150], "crash": [46, 157], "If": [46, 49, 573, 667, 682, 826, 940, 941, 1007, 1132], "Not": [46, 64, 66, 117, 121, 122, 124, 127, 129, 133, 165, 246, 255, 535, 537, 540, 609, 645, 661, 667, 689, 704, 705, 717, 726, 800, 826, 866, 937, 940, 941, 942, 943, 963, 984, 1001, 1011, 1126, 1148], "found": [46, 537, 540, 609, 661, 1150], "state": [46, 155, 215, 695, 813, 815], "exist": [48, 66, 125, 151, 535, 937, 940, 941, 943, 1024, 1132], "ar": [48, 154, 155, 234, 236, 249, 299, 435, 451, 573, 579, 667, 695, 968, 978, 1006, 1015, 1027, 1131, 1150], "overwritten": 48, "done": [49, 114, 117, 121, 130, 131, 132, 319, 473, 636, 730], "twice": 49, "altern": [50, 676], "csv": [50, 122, 134, 226, 243, 251, 254, 263, 266, 286, 287, 288, 292, 293, 308, 314, 315, 321, 326, 451, 1064, 1065, 1066, 1097, 1098, 1099, 1100, 1105, 1116], "frontend": 50, "featur": [51, 53, 64, 266, 282, 283, 284, 286, 287, 292, 304, 308, 319, 428, 451, 707, 1009, 1024, 1043, 1113, 1115], "search": [52, 607, 609, 610, 613, 623, 627, 647, 660, 661, 662, 899, 1001, 1054, 1136], "By": [52, 182, 246, 278, 375, 582, 626, 657, 660, 662, 684, 695, 706, 709, 710, 712, 717, 721, 729, 757, 758, 759, 1007, 1040, 1129, 1130, 1131, 1141], "index": [52, 197, 215, 234, 246, 294, 440, 693, 910, 1045, 1130, 1136, 1137, 1138], "backlog": 53, "need": [53, 334, 474, 689, 691, 968, 1116], "chang": [53, 114, 855, 866, 873], "Or": [53, 451, 459, 460, 474, 678, 717, 930, 1021, 1126], "Will": 53, "refactor": [53, 56, 451, 527, 778, 779, 780, 818, 1098, 1100, 1105], "after": [53, 190, 221, 401, 829, 845, 1024], "backingstor": [54, 55, 57], "ha": [54, 55, 692], "too": [54, 55, 445, 460, 667, 711, 734], "mani": [54, 55, 242, 439, 461, 717, 747, 749, 751, 753, 892, 972], "respons": [54, 55, 218, 477], "interfac": [54, 70, 87, 125, 130, 132, 194, 242, 281, 319, 329, 460, 464, 474, 477, 481, 489, 500, 507, 508, 523, 525, 555, 556, 557, 564, 565, 566, 641, 769, 841, 909, 910, 913, 915, 1020, 1117], "load": [57, 175, 426, 462, 788, 789, 914, 956, 1018], "constructor": [57, 192, 242, 258, 259, 261, 267, 318, 523, 553, 559, 570, 571, 572, 573, 574, 576, 577, 586, 587, 588, 589, 656, 671, 672, 673, 678, 680, 704, 724, 725, 1022], "bool": 58, "realli": [58, 667, 729], "glt": [59, 60], "2023": [59, 108, 109, 110, 111, 112, 117, 118, 121, 129, 133, 134, 261, 269, 270, 273, 274, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 319, 320, 321, 322, 323, 324, 360], "submiss": [59, 60, 63, 110], "pointless": [59, 60, 61, 63, 64, 1027], "blink": [59, 60, 61, 63, 64, 342], "With": [59, 61, 63, 64, 98, 116, 184, 215, 262, 278, 280, 282, 304, 308, 360, 444, 452, 473, 488, 502, 524, 595, 677, 730, 743, 836, 837, 838, 899, 902, 907, 912, 938, 1001, 1049, 1129, 1131, 1142, 1143, 1146], "asyncio": [59, 61, 63, 64], "libgpiod": [59, 61, 62, 63, 64, 127], "raspberri": [59, 61, 63, 64, 165, 194, 328, 360, 790, 811, 907, 911, 914, 989, 993, 995, 997, 1172], "pi": [59, 61, 62, 63, 64, 165, 194, 360, 790, 810, 811, 907, 914, 996, 997, 1172], "biographi": [59, 60, 63], "abstract": [59, 60, 63, 263, 298, 301, 467, 482, 496, 846, 932, 933, 934, 1020], "2024": [60, 113, 134, 326, 360], "evolut": [60, 107], "fedora": [62, 157, 164, 783, 784, 785, 786, 998], "prepar": [62, 157, 175, 190, 191, 193, 194, 195, 196, 206, 215, 230, 259, 261, 269, 510, 587, 810], "tarbal": [62, 165], "On": [62, 64, 114, 215, 249, 251, 273, 277, 278, 282, 304, 308, 362, 524, 526, 571, 602, 603, 607, 613, 716, 741, 853, 932, 933, 934, 939, 944, 948, 971, 998, 1063], "build": [62, 69, 155, 157, 165, 182, 183, 216, 234, 452, 454, 462, 510, 524, 586, 587, 588, 589, 778, 783, 784, 785, 786, 788, 810, 811, 914, 932, 933, 934, 944, 985, 986, 989, 992, 996, 997, 998, 1000, 1001, 1002, 1056, 1150, 1168], "present": 64, "start": [64, 232, 258, 259, 261, 360, 474, 677, 689, 1001, 1124, 1148], "point": [64, 246, 249, 523, 569, 571, 579, 585, 587, 588, 589, 595, 677, 689, 741, 837, 838, 996, 1039], "greet": [64, 305, 1070], "multipl": [64, 114, 192, 410, 451, 452, 776, 777, 778, 872, 926, 984, 1005, 1007, 1044, 1126, 1129, 1142], "background": [64, 159, 161, 568, 666], "thread": [64, 154, 156, 165, 282, 283, 351, 545, 667, 733, 734, 739, 952, 953, 954, 959, 961, 968, 971, 1016], "charact": [64, 364, 371, 374, 377, 384, 765, 766, 767, 768, 769, 770, 773, 774, 775, 1092], "base": [64, 165, 234, 242, 258, 259, 261, 263, 298, 301, 318, 472, 638, 639, 667, 680, 695, 715, 716, 1002, 1007, 1020], "gpio": [64, 87, 133, 134, 172, 194, 328, 329, 330, 331, 342, 790, 791, 914, 916, 948, 949, 950], "entir": [64, 278, 783, 785, 870, 926], "matrix": 64, "off": [64, 215], "bring": [64, 136, 347, 641], "togeth": [64, 457, 641, 872], "modular": [64, 232, 405], "bit": [64, 287, 321, 391, 855, 866, 868, 1033, 1035], "row": [64, 278, 1125, 1129, 1130, 1131], "coroutin": [64, 261, 694, 695], "enough": [64, 569, 645], "sequenc": [64, 223, 226, 234, 266, 273, 276, 286, 287, 292, 293, 314, 315, 320, 321, 326, 384, 543, 607, 613, 1011, 1044, 1052], "loop": [64, 174, 176, 187, 197, 202, 234, 236, 246, 249, 252, 258, 259, 261, 280, 282, 304, 308, 316, 318, 367, 400, 401, 439, 511, 715, 951, 1012, 1043, 1046], "forev": 64, "strip": [64, 219, 236, 242, 334], "down": [64, 460], "factori": [64, 467, 482, 496, 526], "turn": [64, 1011], "Into": [64, 114, 276, 298, 301, 304, 378, 474, 511, 528, 604, 658, 667, 711, 1098, 1100, 1105], "anti": [64, 739, 741], "clumsi": [64, 741], "decor": [64, 213, 263, 273, 276, 280, 282, 283, 298, 304, 305, 308, 472, 486, 500, 1006], "wrapper": [64, 124], "final": [64, 242, 258, 259, 261, 318, 706, 845, 849, 1007], "playground": 64, "cycl": [64, 117, 121, 122, 124, 127, 129, 133, 953], "fast": [64, 192], "forward": [64, 261, 376, 440, 729, 925], "ani": [64, 278, 468, 523, 963], "cancel": 64, "goodby": 64, "hochk\u00f6nig": 65, "k\u00f6nigsjodl": 65, "klettersteig": 65, "tour": [65, 263, 667], "werfen": 65, "ostpreussenh\u00fctt": 65, "matrashau": 65, "blog": [66, 151], "articl": [66, 161, 162, 164, 165], "yet": [66, 242], "revisit": [66, 367, 435, 678], "post": [66, 166, 175, 977], "pending_xref": 67, "cmake": [69, 182, 183, 215, 270, 296, 297, 312, 313, 360, 452, 454, 456, 460, 510, 524, 944, 985, 986, 999, 1150, 1151, 1163], "oo": [71, 109, 134, 187, 213, 216, 232, 239, 242, 251, 254, 258, 259, 261, 263, 273, 276, 279, 281, 298, 301, 305, 309, 318, 319, 321, 351, 477, 514, 523, 545, 1016], "graph": [73, 74, 75, 443, 445, 650, 763, 811, 1066, 1067, 1071, 1080, 1094, 1101], "embed": [74, 75, 79, 97, 98, 108, 109, 115, 116, 135, 172, 181, 270, 279, 281, 319, 324, 341, 343, 344, 356, 358, 360, 748, 1165], "comput": [74, 75, 79, 97, 108, 109, 115, 135, 339, 341, 343, 344, 356, 358, 438, 439, 523, 837, 838, 846], "current": [74, 75, 472, 743, 761, 873], "depend": [74, 75, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 133, 183, 296, 298, 312, 328, 329, 330, 331, 333, 455, 456, 458, 459, 463, 473, 477, 487, 510, 515, 532, 534, 545, 553, 612, 618, 622, 630, 632, 635, 640, 648, 649, 651, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 669, 676, 683, 694, 718, 723, 748, 787, 788, 837, 838, 839, 843, 857, 858, 859, 878, 883, 884, 887, 920, 922, 929, 935, 937, 945, 947, 949, 961, 964, 986, 988, 990, 991, 994, 995, 1001, 1016, 1018, 1064, 1065, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1110, 1114, 1118, 1121, 1124, 1128, 1140, 1146, 1163], "ex": [76, 77, 83, 84, 85, 86, 92, 93], "race": [76, 77, 89, 735, 800, 801, 808, 954, 955, 1018], "condit": [76, 77, 89, 393, 401, 410, 735, 739, 800, 801, 808, 954, 955, 957, 958, 1018], "avoid": [77, 89], "goal": [77, 83, 84, 85, 86, 88, 89, 90, 92, 139, 141, 142, 144, 175, 279, 281, 1161, 1164], "outcom": [77, 83, 84, 85, 86, 193, 301, 344], "introduct": [78, 81, 174, 258, 259, 261, 273, 276, 280, 281, 291, 296, 297, 312, 313, 318, 319, 345, 360, 363, 380, 438, 442, 456, 473, 481, 568, 665, 671, 715, 724, 733, 790, 810, 844, 1007, 1141, 1161, 1163, 1174], "2019": [79, 174, 177, 360], "overview": [79, 134, 170, 270, 282, 283, 306, 318, 357, 361, 677, 684, 695, 719, 725, 739, 741, 747, 749, 751, 752, 753, 754, 761, 781, 835, 846, 872, 903, 914, 915, 916, 917, 952, 984, 1006, 1110, 1114], "knowledg": [79, 1163], "transfer": [79, 727], "unix": [81, 111, 112, 178, 347, 363, 425, 435, 471, 1035], "hardwar": [82, 85, 86, 134, 142, 145, 270, 425, 911, 913, 914, 916, 949, 1165], "manag": [82, 156, 204, 234, 254, 263, 273, 276, 279, 280, 282, 298, 301, 304, 305, 308, 349, 350, 354, 449, 577, 637, 725, 820, 821, 986, 1005, 1024, 1135, 1165], "averag": [83, 84, 92, 471, 499, 747, 749, 751, 753], "sensor": [83, 84, 86, 92, 93, 95, 130, 131, 281, 305, 318, 467, 468, 472, 474, 479, 497, 499, 500, 506, 510, 512, 513, 514, 525, 526, 527, 534, 725, 747, 749, 751, 753, 914, 916, 944, 1094, 1096], "parallel": 84, "led": [85, 129, 342], "temperatur": [85, 86, 93, 129, 510, 513, 914, 916, 944], "displai": [85, 92, 119, 120, 125, 129], "sysf": [87, 133, 134, 194, 328, 342, 915, 949, 950], "gpiod": 87, "multithread": [88, 172, 232, 258, 259, 261, 270, 304, 305, 308, 318, 350, 357, 739, 740, 981, 1016, 1017, 1019, 1177], "semaphor": [89, 154, 741, 977, 978], "mutex": [89, 154, 426, 737, 741, 800, 801, 802, 803, 815, 816, 955, 956, 971, 1018], "commun": [90, 251, 491, 739, 957, 978], "wait": [90, 145, 739, 741, 826, 827, 828, 957, 977], "someth": [90, 187, 569, 667, 741, 826, 827, 828, 1046], "simpl": [94, 192, 465, 569, 579, 594, 645, 657, 813, 815, 841, 855, 984, 1001, 1006, 1026, 1056, 1133, 1141], "2020": [97, 159, 179, 181, 186, 187, 189, 190, 191, 193, 195, 196, 201, 360], "ss2022": [98, 106, 837, 838], "block": [98, 116, 396, 592, 931, 932, 933, 934, 935, 982], "cross": [98, 109, 116, 165, 270, 790, 810, 985, 987, 988, 989, 994, 996, 997, 999, 1156], "develop": [98, 109, 116, 117, 121, 122, 124, 127, 129, 133, 134, 186, 201, 215, 218, 240, 251, 254, 270, 273, 275, 276, 279, 280, 281, 282, 283, 304, 305, 308, 324, 345, 360, 787, 987, 988, 994, 1164, 1165, 1166, 1179], "03": [99, 100, 101, 102, 103, 104, 134, 203, 206, 211, 230, 232, 240, 243, 260, 273, 274, 276, 279, 280, 296, 342, 360, 667, 668], "08": [99, 134, 221, 224, 232, 245, 360], "homework": [99, 100, 101, 102, 105], "until": 101, "21": [101, 102, 243, 335, 342, 360], "exercis": [101, 110, 147, 169, 174, 175, 187, 190, 191, 195, 203, 204, 206, 215, 216, 226, 232, 249, 254, 258, 259, 261, 263, 266, 270, 274, 279, 281, 282, 286, 287, 292, 293, 294, 298, 301, 304, 305, 308, 314, 315, 321, 326, 332, 334, 342, 348, 366, 368, 370, 372, 374, 376, 378, 390, 414, 423, 467, 468, 469, 471, 472, 473, 475, 476, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 543, 544, 545, 575, 586, 587, 588, 589, 590, 631, 632, 633, 640, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 729, 757, 758, 759, 760, 832, 839, 850, 856, 859, 860, 862, 864, 874, 875, 876, 877, 878, 879, 880, 881, 882, 884, 885, 886, 887, 888, 897, 918, 919, 920, 921, 937, 938, 944, 978, 982, 989, 991, 992, 993, 994, 1023, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105], "creat": [101, 114, 136, 148, 153, 157, 160, 182, 183, 524, 667, 734, 830, 836, 837, 838, 855, 860, 862, 864, 872, 876, 878, 889, 921, 938, 940, 941, 943, 977, 978, 996, 998, 1003, 1095, 1113, 1115], "copi": [101, 187, 236, 271, 318, 390, 528, 562, 570, 577, 582, 597, 603, 604, 608, 615, 667, 678, 680, 705, 710, 712, 716, 721, 725, 726, 757, 824, 872, 874, 875, 878, 918, 919, 926, 937, 1048, 1126], "move": [101, 258, 259, 261, 279, 318, 319, 523, 569, 585, 676, 677, 678, 679, 680, 725, 727, 758, 790, 870, 877, 878, 893], "remov": [101, 252, 460, 540, 541, 623, 626, 757, 878, 881, 889, 978], "l": [101, 887, 892], "command": [101, 469, 484, 498, 788, 855, 866, 870, 887, 892, 907, 998], "22": [103, 193, 200, 205, 292, 293, 294, 308, 309, 310, 311, 360], "24": [103, 126, 134, 200, 232, 262, 282, 283, 284, 285, 304, 305, 307, 308, 309, 310, 311, 360], "ku": 103, "28": [104, 174, 191, 232, 280, 348, 360], "01": [105, 110, 134, 224, 230, 232, 233, 234, 263, 269, 314, 315, 316, 342, 352, 353, 360, 837, 838], "ws2022": [107, 108, 109], "plan": [107, 134, 243, 345], "fh": [108, 109, 114, 135, 510, 511, 512, 513, 514, 586, 587, 588, 589, 649, 843, 857, 858, 883, 990], "joanneum": [108, 109, 135], "question": [108, 109, 113, 142, 213, 357, 451, 465, 510, 649, 843, 857, 858, 861, 863, 883, 969, 990, 1019], "inherit": [108, 173, 213, 242, 263, 298, 301, 481, 555, 556, 557, 638, 639, 640, 643, 667, 939, 1016, 1024], "memori": [108, 156, 178, 204, 415, 418, 422, 424, 426, 433, 440, 539, 549, 550, 551, 577, 636, 637, 781, 794, 795, 796, 797, 823, 824, 825, 843, 847, 977, 978, 1165, 1175], "leak": [108, 539, 550, 577, 727], "ye": [109, 1121], "No": [109, 155, 194, 489, 667, 684, 730, 1007, 1132, 1148], "lab": 110, "exam": [110, 111, 112, 113, 116, 134, 214, 227, 229, 342, 357, 523, 837, 838, 839, 969, 1019], "17": [110, 134, 226, 227, 229, 233, 234, 240, 257, 264, 270, 286, 287, 288, 360, 584], "ss2023": [111, 112, 116], "06": [111, 112, 214, 215, 232, 261, 292, 293, 294, 319, 342, 360], "30": [111, 112, 172, 181, 191, 196, 243, 360], "handout": 111, "concept": [111, 112, 261, 291, 318, 683, 684, 687, 688, 689, 692, 693, 719, 844, 1115], "toolchain": [111, 112, 165, 216, 296, 312, 810, 984, 985, 990, 991, 993, 994, 995, 996, 997, 998, 999, 1163], "solv": [112, 956, 1115, 1137, 1144], "ws2023": [113, 126, 134], "02": [113, 134, 232, 237, 251, 270, 354, 360, 849], "sampl": [113, 229, 730, 812, 867, 1065, 1086, 1107, 1141, 1166], "solid": [113, 155, 449], "our": [114, 182, 916], "ece21": 114, "fork": [114, 134, 817], "pull": [114, 134, 474], "request": [114, 134, 451, 769, 771, 790, 792, 950], "upstream": [114, 134, 136], "sync": [114, 781], "onli": [114, 252, 278, 415, 682, 730, 783, 1077], "onc": [114, 342], "updat": [114, 134, 159], "It": [114, 157, 186, 278, 346, 415, 641, 866, 927, 940, 941, 984], "Its": [114, 1021], "fetch": 114, "your": [114, 178, 271, 272, 430, 689, 856], "clone": [114, 165, 169, 182, 524], "merg": 114, "push": [114, 460], "finish": [116, 141, 150, 216, 829], "boil": [117, 118, 119, 120, 126, 134], "pot": [117, 118, 119, 120, 126, 134], "begin": [117, 324, 326, 363, 717], "standup": [117, 118, 119, 120, 121, 125, 129, 133], "record": [117, 118, 119, 120, 121, 125, 129, 133, 197, 1102, 1104], "20": [117, 121, 129, 133, 134, 243, 257, 261, 279, 281, 292, 293, 294, 318, 320, 321, 322, 323, 334, 342, 360, 998], "requir": [117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 129, 133, 220, 251, 298, 301, 344, 455, 467, 488, 491, 510, 511, 512, 516, 517, 518, 519, 520, 521, 522, 689, 937, 944, 1064, 1065, 1086, 1095, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105], "futur": [117, 121, 122, 124, 127, 129, 133, 351, 741], "part": [117, 121, 122, 124, 127, 129, 133, 243, 1150], "Of": [117, 121, 122, 124, 127, 129, 133, 278, 287, 298, 301, 321, 326, 452, 523, 569, 601, 602, 642, 680, 712, 717, 727, 729, 739, 757, 758, 759, 837, 838, 845, 937, 948, 972, 986, 1007, 1010, 1030, 1126, 1132], "statu": [119, 917, 953, 963], "report": 119, "full": [120, 218], "iot": 120, "logger": [121, 122, 123, 124, 474], "sink": [122, 124, 134, 305], "column": [122, 278, 1126, 1127, 1129, 1130, 1131, 1132], "configur": [122, 158, 160, 165, 453, 871, 909, 914, 916, 951], "mqtt": [124, 128, 134, 242, 305, 308, 1102, 1124], "mosquitto": 124, "infrastructur": 125, "percentagedisplai": 125, "composit": [125, 471, 481, 485, 499, 761], "breadboard": 125, "acrobat": 125, "group": [126, 215, 216, 230, 263, 270, 282, 283, 298, 301, 304, 305, 308, 309, 348, 380, 395, 404, 411, 417, 421, 424, 428, 437, 441, 446, 447, 567, 575, 590, 593, 596, 637, 646, 665, 707, 708, 732, 740, 744, 756, 760, 762, 847, 855, 864, 904, 912, 913, 967], "task": [126, 134, 348, 968], "datalogg": [126, 134], "peripher": [126, 134], "client": [126, 218, 505, 1124], "subscrib": [128, 1124], "via": [129, 134, 162, 163, 339, 916], "pwm": [129, 915], "control": [129, 251, 266, 273, 276, 286, 287, 292, 293, 314, 315, 320, 321, 326, 474, 695, 907, 915], "onewir": [131, 510, 526, 527, 916, 944], "05": [134, 211, 214, 245, 251, 254, 257, 260, 286, 287, 288, 290, 291, 334, 335, 342, 360], "vo": 134, "recap": [134, 202, 215, 216, 230, 263, 283, 298, 301, 305, 306, 562, 724, 984, 1010], "polymorph": [134, 216, 319, 516, 517, 518, 519, 520, 521, 522, 525, 642, 731, 750], "collabor": 134, "necessarili": 134, "first": [134, 187, 216, 364, 514, 730, 771, 772, 806, 1143], "round": [134, 492, 506], "organiz": 134, "design": [134, 262, 280, 282, 283, 298, 301, 319, 360, 377, 434, 449, 473, 477, 487, 640, 1164], "At": 134, "larg": 134, "07": [134, 216, 232, 263, 296, 297, 342, 346, 360], "renam": [134, 893], "graz": [135, 177, 179, 186, 224, 360], "branch": [136, 397], "track": [136, 1000], "submit": [136, 829, 830], "appli": [136, 157, 1132], "patch": [136, 157], "packag": [138, 141, 159, 165, 182, 263, 280, 298, 304, 335, 810, 989, 992, 1015, 1063, 1135, 1136, 1137, 1138, 1139, 1143], "pypi": [138, 211, 251, 1063, 1108, 1137, 1139], "audio": [139, 143], "chip": [139, 915], "bringup": [139, 142, 916], "get": [140, 153, 183, 234, 319, 741, 798, 823, 948], "debian": [140, 141], "kernel": [140, 141, 142, 146, 155, 157, 201, 360, 445, 774, 783, 784, 785, 786, 787, 788, 802, 804, 810, 811, 843, 846, 911, 914, 1166], "config": [140, 810], "within": 140, "qemu": 140, "extract": [140, 146, 213, 511, 1098, 1100, 1105, 1113], "boot": [140, 153, 164, 360, 846], "etc": [141, 202, 210, 213, 242, 252, 255, 288, 886, 914, 942, 1036, 1086], "yocto": [142, 146, 905], "everyth": [142, 170, 229, 457, 841, 852, 931], "like": [142, 318, 569, 963], "i2": 143, "kontron": 143, "smarc": 143, "modul": [143, 187, 211, 213, 251, 252, 264, 280, 287, 304, 305, 335, 342, 445, 460, 524, 713, 778, 783, 785, 786, 788, 789, 804, 810, 915, 1015, 1105, 1108, 1116, 1142, 1150], "dirti": 144, "upgrad": 144, "path": [144, 165, 213, 223, 229, 236, 322, 463, 761, 842, 894, 996, 1001, 1095, 1150], "step": [144, 469, 472, 474, 510, 602, 695, 757, 758, 985, 986, 1000, 1020, 1045], "intel": 146, "bsp": 146, "improv": 147, "beginn": [147, 211, 223, 246, 251, 263, 287, 1107, 1108], "split": [147, 173, 236, 242, 316, 334, 1054, 1113], "openshot": 148, "seo": [149, 150], "sitemap": 149, "meta": [149, 150], "stack": [150, 156, 197, 218, 422, 680], "hang": 150, "dbu": [150, 474], "stuff": [150, 319, 342, 435, 846, 880], "extens": 151, "rest": [151, 213, 308, 319, 936], "style": [151, 398, 449, 569, 671, 725, 743, 1053], "convert": [151, 174, 278, 1026, 1104], "rst": 151, "exampl": [151, 236, 242, 246, 338, 371, 375, 410, 412, 432, 435, 471, 510, 595, 620, 671, 672, 690, 691, 692, 693, 719, 728, 834, 852, 854, 855, 903, 927, 931, 936, 939, 957, 982, 1005, 1020, 1040, 1050, 1053, 1054, 1055, 1056, 1077, 1119, 1127, 1132, 1141, 1142], "add": [151, 272, 461, 465, 523, 771, 818, 829, 981, 1024, 1125], "miss": [151, 263, 671, 940], "past": [151, 410], "learn": [152, 273, 344, 1109, 1115], "beagleboard": 153, "how": [153, 156, 164, 186, 216, 234, 379, 418, 443, 444, 445, 579, 717, 727, 853, 866, 869, 1012, 1115], "repair": 153, "nand": 153, "also": [153, 416, 841, 846, 847, 852, 853, 932, 933, 934, 936, 963, 966, 970, 972, 1051, 1115], "40w": 153, "x": [153, 216, 559], "loader": 153, "u": [153, 927], "bootabl": 153, "mmc": 153, "sd": [153, 194], "card": [153, 194, 272, 838], "port": [154, 925], "There": [154, 234, 449, 577, 733, 826, 916, 926, 931, 942, 943], "": [154, 169, 194, 391, 415, 449, 569, 661, 667, 670, 730, 774, 779, 798, 810, 826, 855, 871, 923, 971, 984, 1012, 1016, 1059], "alwai": [154, 234, 254, 705, 941], "better": [154, 366, 451, 820, 1030, 1121], "wai": [154, 213, 234, 242, 439, 972, 1016, 1035], "process": [154, 156, 175, 270, 291, 808, 809, 842, 843, 847, 848, 963, 964, 965, 968, 972], "signal": [154, 178, 425, 739, 957, 980, 981, 982, 983], "aren": 154, "t": [154, 211, 717, 1108], "queue": [154, 197, 739, 827, 958, 977, 978], "timer": [154, 818, 820, 821, 934, 968], "poll": [154, 739, 741], "event": [154, 771, 790, 800, 818, 819, 823, 951, 957, 973, 975], "dispatch": [154, 752, 753, 754], "interrupt": [154, 790, 791, 792, 793, 806, 815, 951, 968], "realtim": [154, 156, 353, 357, 360, 802, 970, 971, 1156, 1165], "save": [155, 727], "disk": [155, 194, 841], "life": [155, 728, 953], "gentoo": [155, 810], "rant": [155, 175, 454, 986], "swap": [155, 249, 414, 730, 853, 1073], "tmpf": 155, "instanc": [155, 213, 239, 242], "syslog": 155, "var": 155, "mountpoint": 155, "logrot": 155, "o": [155, 213, 223, 229, 236, 237, 242, 249, 251, 252, 284, 288, 291, 293, 322, 334, 371, 794, 851, 852, 853, 876, 889, 931, 932, 933, 934, 935, 936, 945, 946, 966, 1058], "schedul": [155, 291, 352, 353, 357, 843, 847, 953, 966, 967, 969, 970, 971], "ram": 155, "thing": [155, 216, 237, 258, 259, 261], "left": [155, 391, 582], "why": [156, 157, 165, 234, 449, 477, 569, 572, 576, 577, 724, 730, 755, 783, 829, 854, 908, 915, 923, 927, 952, 1005, 1050], "p": 156, "suck": [156, 790], "count": [156, 726, 817, 853, 1092], "consumpt": 156, "conclus": [156, 815, 907, 915], "pthread": 156, "experi": 156, "100": 156, "default": [156, 187, 234, 236, 258, 259, 261, 318, 338, 523, 571, 573, 574, 586, 587, 588, 589, 656, 704, 725, 743, 869, 982, 1050, 1130], "eat": 156, "limit": [156, 1011], "than": [156, 530, 1027], "my": [156, 159, 255, 364, 365, 451, 778, 849, 866], "could": [156, 728], "take": [156, 416, 727, 1030], "doe": [156, 595, 853, 866, 869, 937, 940, 941], "differ": [156, 187, 415, 600, 602, 872, 926], "rpm": [157, 159, 184, 783], "prerequisit": [157, 165, 183, 282, 304, 308, 344, 785, 1063], "rpmbuild": 157, "directori": [157, 182, 183, 349, 451, 452, 524, 761, 837, 838, 855, 860, 861, 862, 863, 872, 873, 874, 881, 888, 889, 892, 893, 898, 926, 937, 985, 986, 1005, 1141], "download": [157, 203, 205, 342, 347, 361, 527, 996, 999, 1155], "For": [157, 159, 165, 243, 246, 270, 273, 275, 276, 279, 281, 324, 360, 372, 497, 571, 582, 667, 695, 716, 741, 845, 931, 996, 997, 998, 1008, 1026, 1095, 1164], "domain": [158, 178, 276, 742], "subdomain": 158, "www": 158, "apex": 158, "microsoft": 159, "team": 159, "screen": [159, 902], "share": [159, 457, 462, 722, 726, 729, 758, 837, 838, 864, 977, 978, 1000, 1001, 1175], "x11": 159, "reviv": 159, "meh": 159, "annoy": 159, "re": [159, 1007], "regist": [159, 439], "itself": 159, "autostart": 159, "browser": [159, 218], "recommend": [159, 190, 344, 1142, 1163], "deploi": 160, "gener": [160, 164, 174, 183, 187, 192, 219, 226, 229, 234, 236, 242, 261, 263, 267, 273, 276, 280, 282, 283, 287, 294, 296, 304, 305, 306, 308, 312, 316, 322, 400, 529, 570, 573, 577, 695, 696, 698, 699, 704, 763, 916, 923, 950, 985, 986, 1010, 1011, 1012, 1013, 1014, 1039, 1078, 1091, 1163], "public": [160, 213, 464, 571, 837, 838, 862, 863, 923], "repo": [160, 182], "jfasch": [160, 867], "home": [160, 842, 872, 888, 927], "time": [160, 169, 173, 278, 455, 742, 818, 819, 847, 959, 1070], "deploy": [160, 296, 312, 457, 810, 1163], "bigbluebutton": 161, "onlin": [161, 170, 1155], "tl": 161, "dr": 161, "host": [161, 206, 810, 998], "check": [161, 465, 489, 855, 916, 957, 993, 1054, 1074], "els": [161, 229, 236, 242, 252, 282, 304, 308, 322, 373, 397, 398, 399, 576, 591, 893, 910, 923, 1007, 1043, 1046], "traunstein": 162, "zierlersteig": 162, "kaltenbachwildni": 162, "anstieg": 162, "auf": [162, 203], "zierlerberg": 162, "rinn": 162, "abstieg": 162, "grintovec": 163, "plan\u0161arsko": 163, "jezero": 163, "\u010de\u0161ka": 163, "ko\u010da": 163, "anreis": 163, "hinauf": 163, "runter": 163, "zusammenfassung": 163, "brick": 164, "1399": 164, "dell": 164, "xp": 164, "happen": 164, "virtualbox": 164, "secur": [164, 194, 270, 291, 339, 922, 926], "enrol": 164, "machin": [164, 194, 215, 273, 339, 918, 919, 944, 1109, 1115], "owner": [164, 855], "mok": 164, "pair": [164, 667, 921, 923], "stage": 164, "reboot": 164, "diagnost": [164, 914], "crosstool": [165, 997, 998], "ng": [165, 997, 998], "prebuilt": [165, 1132], "repositori": [165, 169, 356, 524, 534], "releas": [165, 454, 792, 802, 1018], "glibc": 165, "version": [165, 451, 454, 457, 667, 695, 940], "gcc": [165, 426, 439, 984], "simplest": [165, 695, 700, 738, 1004, 1027, 1142, 1148], "stdio": 165, "h": [165, 698, 902], "iostream": 165, "distribut": [165, 1063], "afterword": [165, 675], "schulung": [167, 187], "entwicklung": 167, "beratung": 167, "richtlinien": 168, "ver\u00f6ffentlichung": 168, "kursmateri": 168, "window": [169, 206, 223, 279, 281, 362, 849], "workflow": [169, 216], "conflict": [169, 956, 1018], "individu": 170, "languag": [170, 186, 216, 232, 258, 259, 261, 266, 286, 287, 292, 318, 319, 360, 428, 447, 707, 963, 1009, 1031, 1033], "qualivis": [171, 360], "z\u00fcrich": [171, 360], "2013": [171, 360, 1156], "fragen": [171, 204], "antworten": 171, "kursnotizen": 172, "2015": [172, 360], "userspac": [172, 769, 771, 823, 824, 825, 914, 915, 951], "can": [172, 193, 216, 251, 416, 468, 472, 523, 582, 667, 727, 908, 909, 910, 912], "bu": [172, 193, 474, 909, 912, 916], "driver": [172, 201, 272, 360, 787, 788, 806, 914, 1166], "beispiel": [172, 187, 246, 898], "heizungssteuerung": 172, "k\u00f6nnen": [173, 197, 210], "viel": 173, "mutabl": [173, 176, 187, 197, 204, 210, 223, 226, 234, 236, 239, 242, 249, 252, 255, 267, 274, 284, 288, 294, 306, 310, 316, 1048, 1050], "immut": [173, 176, 187, 204, 210, 223, 234, 239, 242, 249, 255, 264, 271, 274, 288, 316, 322, 580, 1048], "kann": [173, 218], "man": [173, 218, 870], "nicht": [173, 187, 197], "oft": 173, "genug": 173, "wiederholen": 173, "hart": 173, "indizieren": 173, "weich": 173, "nettfragen": 173, "shortcut": [173, 1026, 1056], "objektorientiert": 173, "date": [173, 219, 278, 347], "delta": 173, "datetim": [173, 192, 213, 219, 274], "bissl": 173, "potschert": [173, 197], "schreiben": [173, 197], "scho": 173, "formen": 173, "represent": [173, 1029], "__str__": [173, 1024, 1029], "subprocess": [173, 252], "enumer": [173, 197, 202, 204, 210, 213, 234, 242, 249, 267, 284, 306, 316], "zip": [173, 213, 316], "comprehens": [173, 197, 219, 226, 229, 234, 236, 242, 246, 267, 273, 274, 276, 306, 316, 322, 1004, 1010, 1055], "exec": [173, 239, 255, 263, 267, 294, 316, 1008], "eval": [173, 174, 210, 239, 249, 267, 294, 306], "umgebend": 173, "context": [173, 234, 273, 276, 280, 808, 809, 829, 1005, 1008], "eigen": 173, "json": [173, 195, 202, 218, 219, 229, 246, 249, 255, 263, 264, 299, 302, 1104], "individualtrain": [174, 189, 360], "tage": [174, 360], "beginnend": [174, 360], "inhalt": [174, 177, 981, 1158], "51": 174, "58": 174, "94": [174, 187], "121": 174, "famou": [174, 442], "overload": [174, 232, 242, 263, 298, 310, 545, 571, 578, 585, 725, 1027, 1029], "getter": [174, 523, 579], "setter": 174, "listcomprehens": 174, "express": [174, 187, 202, 219, 226, 252, 255, 267, 316, 322, 393, 395, 471, 489, 503, 674, 899, 1010, 1068, 1127], "global": [174, 187, 197, 255, 305, 379, 385, 406, 408, 422, 459, 552, 553, 554, 583, 584, 585, 928, 1003, 1049], "scope": [174, 197, 305, 738, 741, 1003, 1049], "variabl": [174, 197, 210, 213, 223, 226, 234, 242, 249, 252, 264, 284, 288, 310, 316, 322, 337, 365, 379, 382, 385, 406, 408, 414, 433, 489, 553, 580, 584, 710, 739, 842, 928, 957, 958, 965, 1038, 1049, 1073], "closur": [174, 197, 263, 280, 282, 283, 298, 304, 308, 709, 1003, 1005], "between": [174, 588, 1113], "walkthrough": 175, "reduc": [175, 390], "eight": 175, "color": 175, "pil": 175, "numpi": [175, 177, 204, 211, 251, 254, 273, 276, 287, 293, 305, 310, 326, 360, 1108, 1113], "cluster": 175, "excurs": [175, 251, 709], "matplotlib": [175, 204, 223, 255, 293, 310, 316, 1062, 1113], "now": [175, 187], "come": [175, 211, 457, 651, 984, 1108], "let": 175, "kmean": 175, "result": [175, 443, 1120], "properti": [175, 213, 242, 463, 464, 1028], "center": 175, "restor": 175, "alpha": 175, "back": [175, 620, 1104], "rgba": 175, "random": [176, 213, 246, 251, 500, 513, 521, 1128], "type": [176, 202, 226, 229, 239, 242, 249, 258, 259, 261, 263, 264, 278, 280, 298, 301, 302, 306, 318, 338, 381, 383, 384, 388, 395, 420, 430, 435, 454, 464, 573, 602, 623, 624, 667, 668, 671, 682, 684, 721, 743, 748, 750, 751, 781, 790, 885, 892, 955, 1005, 1007, 1020, 1027, 1050, 1115], "except": [176, 213, 229, 232, 239, 242, 254, 255, 263, 273, 276, 280, 281, 298, 301, 314, 320, 326, 353, 545, 592, 593, 661, 710, 717, 741, 1007], "demonstr": 176, "dict": [176, 226, 234, 236, 242, 249, 322, 1026], "access": [176, 215, 373, 426, 427, 571, 579, 587, 653, 743, 747, 749, 751, 752, 753, 754, 761, 794, 823, 824, 825, 1021, 1028, 1055, 1056], "indic": [176, 204], "slice": [176, 187, 202, 213, 236, 242, 246, 267, 288, 294, 847, 1045, 1129, 1131], "protocol": [176, 187, 202, 223, 226, 229, 234, 236, 239, 242, 252, 267, 280, 284, 288, 306, 310, 316, 322, 695, 907, 971, 1012, 1014], "standardthemen": 177, "hauptthema": 177, "numerik": 177, "lesen": [177, 197], "mat": 177, "l\u00f6sen": 177, "uni": 177, "\u00fcbung": [177, 180, 197], "propos": 178, "posix": [178, 739, 952, 961, 974, 976, 977, 978, 979], "ipc": [178, 179, 360, 974, 976, 977, 978, 979, 1175], "virtual": [178, 251, 272, 555, 556, 557, 642, 644, 645, 747, 748, 749, 751, 752, 753, 754, 755, 781, 843, 847, 909, 977, 1095, 1143, 1144, 1145, 1175], "socket": [178, 910, 933], "applic": [178, 968], "compani": 178, "thought": 178, "handgestrickt": 180, "um": 180, "fallen": 180, "lustvol": 180, "erleiden": 180, "programmier": 181, "baden": [181, 360], "w\u00fcrttemberg": [181, 360], "kursinform": 181, "kursaufbau": 181, "kursverlauf": [181, 189], "hand": 182, "privat": [182, 213, 242, 464, 571, 643, 705, 837, 838, 860, 861], "makefil": [183, 524, 778, 788, 985, 986, 1000], "argh": 184, "visual": [184, 211, 227, 443, 458, 1108, 1134, 1143], "studio": [184, 211, 227, 1108, 1134, 1143], "flatpak": 184, "issu": [184, 1003], "m": 184, "bei": [186, 197, 360], "firma": [186, 360], "environ": [186, 251, 259, 261, 270, 272, 279, 280, 281, 349, 842, 965, 1032, 1095, 1143, 1144, 1145, 1153], "driven": [186, 215, 240, 251, 254, 282, 283, 304, 305, 308, 360, 973, 1179], "dai": [186, 190, 191, 193, 194, 195, 205, 206, 215, 216, 221, 224, 226, 227, 230, 237, 270, 273, 276, 279, 280, 281, 282, 283, 287, 291, 293, 298, 304, 305, 308, 309, 315, 319, 716, 1070, 1161], "advanc": [186, 190, 193, 202, 205, 214, 230, 240, 243, 254, 263, 266, 276, 282, 283, 284, 285, 286, 287, 292, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 318, 319, 360, 428, 1107, 1108, 1169], "18": [187, 189, 215, 234, 254, 266, 267, 281, 297, 320, 321, 322, 323, 342, 360, 998], "19": [187, 189, 193, 227, 243, 341, 342, 356, 358, 360], "sy": [187, 213, 841, 1037], "multilin": [187, 219, 223, 316, 337, 1052], "docstr": [187, 234, 246, 249, 252, 274, 306, 337], "datentypen": [187, 197, 204, 217, 233, 245], "ausflug": [187, 236], "variablen": [187, 197, 204, 217, 233, 236, 245, 255], "deren": 187, "unterbau": 187, "zuweisung": 187, "mit": [187, 197, 202, 215, 360, 898, 1156, 1172], "hilf": 187, "tupl": [187, 192, 197, 202, 204, 210, 213, 223, 226, 229, 234, 236, 242, 246, 249, 252, 258, 259, 261, 264, 267, 274, 284, 288, 310, 316, 318, 322, 336, 337, 667, 716, 721, 1040, 1048, 1116], "unpack": [187, 192, 197, 202, 204, 213, 229, 234, 246, 252, 258, 259, 261, 264, 274, 310, 316, 318, 336, 337, 667, 716, 721, 996, 1116], "unendlich": 187, "breit": 187, "divis": [187, 197], "floor": [187, 197], "konvertierung": 187, "konstruktoren": [187, 204], "welchen": 187, "typ": [187, 197], "typen": 187, "besser": 187, "laufzeitverhalten": [187, 197], "geeigneter": 187, "datenstrukturen": [187, 197, 198, 218, 236, 1171], "boolean": [187, 197, 223, 226, 234, 236, 242, 246, 249, 316, 322, 387, 471, 1041, 1068, 1127], "short": [187, 226, 242, 387, 481, 790], "circuit": [187, 226, 242, 387], "evalu": [187, 226, 242], "warum": [187, 197], "sind": [187, 197], "mehr": [187, 202], "rang": [187, 192, 197, 204, 213, 219, 223, 226, 234, 236, 239, 246, 249, 252, 258, 259, 261, 264, 274, 288, 294, 305, 318, 322, 601, 602, 667, 695, 715, 716, 717, 718, 719, 720, 1010, 1047, 1062], "foli": 187, "161": 187, "shallow": [187, 236, 1048], "deep": [187, 236, 1048], "dem": [187, 1172], "deepcopi": 187, "funktionen": [187, 197, 198, 202, 1171], "gotcha": [187, 788, 818, 972], "paramet": [187, 234, 236, 280, 322, 338, 377, 413, 416, 419, 433, 451, 455, 680, 684, 719, 730, 810, 940, 985, 1050, 1120], "90": 187, "ff": 187, "lokal": [187, 197, 255], "92": 187, "uniq": [187, 1090, 1091], "punkt": [187, 197], "zusammengefasst": 187, "hier": 187, "sch\u00f6nere": 187, "al": [187, 197, 246], "comprens": 187, "125": 187, "lesbarkeit": 187, "perform": [187, 210, 441, 717], "review": [187, 216], "pprint": 187, "praktisch": 187, "debug": [187, 454, 808, 1006], "datentransform": 187, "127ff": 187, "complet": [187, 545, 870], "collect": [187, 236, 239, 264, 984, 1026, 1126, 1139], "namedtupl": [187, 1026], "parameter\u00fcbergab": [187, 197], "variabel": 187, "lang": 187, "argumentlisten": 187, "erst": 187, "klass": 187, "weiterf\u00fchrend": [189, 211], "workspac": [190, 191, 193, 195], "core": [190, 227, 270, 985], "special": [190, 309, 894], "tutori": [190, 193, 205, 211, 221, 251, 254, 287, 1108], "parti": [190, 221], "v": [192, 197, 204, 210, 213, 234, 239, 242, 246, 249, 255, 271, 274, 284, 288, 299, 336, 337, 375, 384, 396, 399, 403, 405, 454, 457, 564, 565, 566, 580, 726, 734, 750, 788, 808, 809, 815, 816, 930, 966, 1036, 1039, 1047, 1058, 1136], "return": [192, 255, 322, 419, 677, 678, 680, 695], "orient": [192, 242, 255, 263, 266, 267, 280, 282, 283, 286, 287, 292, 298, 301, 304, 305, 308, 309, 314, 320, 326, 330, 449, 569, 640, 1023], "addit": [193, 569, 585, 647, 1024], "brought": 193, "thoma": 193, "cloud": [194, 319, 339], "particip": 194, "desk": 194, "interlud": [194, 790], "bloodi": 194, "wild": [194, 243, 298, 301, 304], "watchdog": 194, "support": [194, 206, 670, 806], "25": [195, 205, 214, 221, 232, 237, 248, 290, 291, 298, 299, 300, 303, 360], "grundlegend": [197, 198, 1171], "sprachelement": [197, 198, 1171], "syntax": [197, 204, 210, 242, 252, 274, 288, 316, 337, 710, 719, 1036], "semantik": 197, "einr\u00fcckung": 197, "ihren": 197, "\u00e4ndern": 197, "kommentar": 197, "sprach": 197, "standarddatentypen": 197, "elementar": [197, 198, 1171], "beliebig": 197, "gro\u00df": 197, "vergleichsoperatoren": 197, "pr\u00e4zedenz": 197, "vor": 197, "strichrechnung": 197, "modulo": 197, "un\u00e4rer": 197, "negat": [197, 1127], "erzwingen": 197, "auch": 197, "zeichenketten": 197, "raw": [197, 204, 219, 223, 236, 242, 264, 294, 1021, 1052, 1103], "f": [197, 219, 234, 252, 294, 316, 1053], "konvertierungen": 197, "pr\u00e4zendenzregeln": 197, "literal": 197, "primit": [197, 733, 1010], "konstanten": 197, "operatoren": 197, "ausdr\u00fcck": 197, "operatorrangfolgen": 197, "\u00fcbungen": [197, 1155], "zwei": 197, "vertauschen": 197, "kontrollstrukturen": [197, 198, 217, 233, 234, 245, 1171], "anweisungen": 197, "folgen": 197, "bedingungen": 197, "verzweigungen": 197, "bedingt": 197, "anweisung": 197, "verzweigung": [197, 198, 1171], "geschachtelt": 197, "mehrfach": 197, "fallauswahl": 197, "schleifen": [197, 198, 1171], "z\u00e4hlergesteuert": 197, "kopfgesteuert": 197, "schleif": [197, 202], "fu\u00dfgesteuert": 197, "jf": 197, "continu": [197, 232, 234, 273, 281, 283, 305, 315, 402, 1043, 1046], "sequenti": [197, 202, 234, 246, 316, 609, 610, 617, 618, 1010, 1044], "schnell\u00fcbersicht": 197, "sprunganweisungen": 197, "endlosschleifen": 197, "ben\u00f6tigt": 197, "Suche": 197, "eindimensional": 197, "tupel": 197, "listen": [197, 202, 236, 337], "sort": [197, 249, 528, 607, 612, 613, 616, 1130], "revers": [197, 614, 615, 632, 633, 634, 1027], "stapel": 197, "schlangen": 197, "versuch": 197, "zur\u00fcck": 197, "hybrid": 197, "supergscheit": 197, "methoden": [197, 198, 1171], "prozeduren": [197, 198, 1171], "funktionspoint": 197, "so": [197, 210, 213, 223, 255, 279, 449, 569, 667, 680, 682, 709, 1129], "heisst": [197, 202], "funktionsobjekt": 197, "primzahlenbeispiel": 197, "funktion": 197, "laufzeitfehl": 197, "existiert": 197, "zuweisen": 197, "fehlerfal": 197, "peter": 197, "unterprogramm": 197, "wert": 197, "referenzen": 197, "r\u00fcckgabewert": 197, "oder": [197, 343, 1156], "inner": [197, 1003], "standardbibliotheken": 197, "built": [197, 280, 573, 671, 788, 1007], "funktionalit\u00e4ten": 197, "struktur": 198, "herdt": [198, 1171], "kapitel": [198, 1171], "ganz": [202, 234], "kurz": 202, "mehreren": 202, "returnwerten": 202, "bzw": [202, 343], "containerdatentypen": 202, "untypisiert": 202, "l\u00f6schen": 202, "begriff": 202, "zufal": 202, "regular": [202, 215, 216, 252, 255, 267, 316, 322, 899], "hallo": 204, "speicher": 204, "sch\u00fctze": 204, "ich": 204, "davor": 204, "aber": 204, "gemischten": 204, "wiederholung": [204, 239], "objektidentit\u00e4t": 204, "statement": [204, 213, 396, 410, 1003, 1005, 1018, 1036, 1042, 1120, 1123], "operationen": 204, "verloren": 204, "interpol": 204, "mittel": [204, 210], "scipi": 204, "shell": [206, 270, 291, 339, 360, 842, 853, 855, 871, 883, 884, 890, 922, 939, 948, 963, 1157], "script": [206, 291, 360, 917, 948, 1015, 1034, 1157], "29": [206, 280, 314, 315, 316, 342, 350, 360], "assign": [210, 236, 242, 249, 310, 337, 392, 489, 570, 576, 577, 677, 678, 680, 725, 1003, 1038, 1045, 1049, 1125], "fun": [210, 249, 263, 1038], "arithmet": [210, 215, 234, 246, 337, 365, 386, 415, 489, 503, 562, 585, 598, 599, 603, 606, 1027, 1039], "complex": [210, 249, 337, 1153], "nur": 210, "sum": [210, 651], "weiter": 210, "dynamisch": 210, "evaluierung": 210, "scienc": [211, 237, 251, 254, 287, 304, 305, 306, 308, 1108], "don": [211, 717, 1108], "batteri": [211, 337, 1054, 1108], "confer": [211, 287, 1108], "talk": [211, 287, 908, 914, 915, 1108], "zipfil": 213, "One": [213, 252, 278, 334, 391, 410, 449, 451, 584, 717, 730, 823, 908, 926, 959, 984, 1000], "member": [213, 242, 571, 576, 577, 579, 584, 653, 654, 671, 743], "attribut": [213, 239, 255, 318, 847, 950, 1021, 1028, 1133], "protect": [213, 643, 717, 800], "posit": [213, 569, 1001, 1030, 1060], "keyword": [213, 234, 258, 259, 261, 318, 338, 432, 433, 1003, 1030, 1050], "argument": [213, 234, 242, 263, 298, 338, 416, 937, 963, 1006, 1030, 1037, 1050, 1060], "mix": [213, 226, 294, 710, 1084, 1085], "yield": [213, 229, 234, 252, 280, 294, 1010, 1013], "filter": [213, 242, 271, 272, 278, 306, 316, 529, 530, 531, 717, 1127], "nonetyp": [213, 226], "none": [213, 234], "recurs": [213, 418, 577, 674, 761, 872], "fibonacci": [213, 695, 697, 1011, 1078], "sever": 213, "same": [213, 553, 578, 584, 709, 1049, 1142], "oserror": 213, "errno": [213, 928], "platform": [213, 914], "assert": [213, 255, 306], "assertionerror": 213, "27": [214, 232, 248, 298, 299, 300, 303, 312, 313, 360], "predefin": [214, 410, 1153], "stream": [214, 781, 852, 1058], "pcap": [214, 227, 229], "syllabu": [214, 227], "programmieren": [215, 360], "tool": [215, 288, 291, 306, 344, 835, 900, 903, 914, 1168], "massacr": 215, "kick": 215, "encapsul": [215, 435, 575, 741], "flow": [215, 245, 251, 266, 273, 276, 286, 287, 292, 293, 314, 315, 320, 321, 326, 404], "pointer": [215, 216, 232, 258, 259, 261, 279, 281, 319, 412, 413, 415, 417, 433, 545, 562, 577, 581, 582, 598, 599, 600, 602, 603, 606, 626, 667, 682, 722, 723, 724, 725, 727], "standard": [215, 227, 232, 236, 251, 279, 281, 287, 383, 430, 454, 532, 592, 602, 635, 646, 648, 675, 852, 936, 1058, 1108, 1150], "librari": [215, 227, 232, 251, 279, 281, 287, 377, 452, 457, 458, 462, 532, 592, 602, 635, 646, 675, 930, 1001, 1002, 1108, 1175], "stl": [215, 545, 561, 562, 563, 594, 602, 603, 631], "kid": 216, "recapitul": 216, "some": [216, 234, 239, 278, 281, 291, 710, 741], "jump": [216, 415], "complic": [216, 494, 1000], "Be": [216, 468, 472, 473, 577, 582, 636, 728, 733], "toolbox": 216, "databas": [216, 308, 652, 788, 1064, 1066, 1101, 1117, 1118, 1120], "gtest": [216, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154], "smart": [216, 232, 258, 259, 261, 281, 319, 545, 722, 723, 724, 725], "datenbank": 218, "showcas": 218, "kommt": 218, "db": 218, "aufgab": 218, "formulieren": 218, "damit": 218, "dies": 218, "http": [218, 306], "verbindung": 218, "schicken": 218, "jetzt": 218, "schickman": 218, "weg": 218, "vom": [218, 360], "server": [218, 1124], "php": 218, "j": 218, "empfangen": 218, "nun": 218, "muessen": 218, "verwandlen": 218, "liter": [219, 337, 489, 741, 742], "quot": [219, 223, 249, 1116], "friend": [219, 737], "sinc": [219, 252, 258, 259, 261, 584, 1053], "pars": [219, 1037, 1060, 1086], "sap": [220, 273, 275, 276, 277, 278, 325, 360], "export": 220, "solut": [220, 407, 429, 452, 461, 467, 468, 469, 472, 473, 478, 487, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 577, 604, 634, 671, 673, 680, 704, 705, 714, 748, 847, 866, 925, 927, 931, 1000, 1002, 1018, 1144], "terminologi": [223, 291, 844, 982, 1115], "31": [224, 232, 240, 360], "numer": [224, 326], "ai": 224, "mountain": 224, "io": [226, 242, 270, 274, 310, 316, 438, 794, 795, 850, 950], "common": [226, 439, 451, 617, 1011, 1020], "wtf": [226, 934, 982], "creativ": [229, 836, 1024], "shift": [229, 391, 585], "hmmm": 230, "undefin": [232, 1049], "behavior": [232, 719], "again": [232, 280, 291, 579, 666, 890, 1027, 1157], "26": [232, 262, 269, 282, 283, 284, 285, 304, 305, 307, 342, 360], "repeat": [232, 882], "quickli": 232, "algorithm": [232, 249, 273, 281, 318, 319, 415, 528, 545, 562, 597, 598, 602, 603, 612, 616, 1113, 1115], "functor": [232, 545, 610, 709, 711, 712, 730], "unifi": 232, "model": [232, 1113, 1115], "uml": [232, 481], "todai": [232, 1003], "associ": [232, 394, 481, 621, 622], "dynam": [232, 263, 282, 283, 284, 304, 308, 422, 549, 550, 551, 603, 636, 637, 750, 766, 796, 797, 1001, 1021, 1030], "alloc": [232, 318, 439, 559, 604, 629, 630, 637, 746, 748, 781, 804, 946, 1010], "week": 232, "zahl": 234, "miscellanea": 234, "brace": [234, 258, 259, 261, 318, 319, 669, 670, 671, 672, 1127], "singl": [234, 452, 477, 926, 984, 1148], "hour_of_dai": 234, "membership": [234, 1044], "best": 234, "intro": [236, 270, 342, 561, 562, 563, 950, 1004], "doc": [236, 306], "ident": [236, 299], "datenypen": 236, "libarari": 236, "chainmap": 236, "dequ": 236, "suchalgorithmen": 236, "pitfal": [236, 279, 282, 338, 573, 642, 667, 695, 712], "fromkei": [236, 249], "join": [236, 242, 316, 1054, 1081], "lstrip": [236, 334], "rstrip": [236, 334], "sequentiel": 239, "konstant": 239, "suchzeit": 239, "metaprogram": 239, "everywher": [239, 255, 577, 1008], "defaultdict": [239, 264], "hello": [242, 252, 364, 699, 788, 789, 1034], "world": [242, 364, 371, 788, 789, 1034], "blahblah": [242, 246, 249, 252, 316, 602, 1033], "commandlin": [242, 270, 308, 328, 333, 416, 444, 451, 870, 925, 948, 982, 1037, 1060], "lifetim": [242, 379, 408, 712, 726, 734, 1117], "preview": [242, 462], "explicit": [242, 373, 569, 581, 672, 710, 712, 725, 738, 1018], "max": 242, "iteratoren": 242, "generatoren": 242, "ordereddict": 242, "duck": [242, 258, 259, 261, 298, 301, 318, 682, 751, 1020], "resolut": 242, "order": [242, 553, 1007, 1027], "mro": 242, "super": 242, "__bases__": 242, "__mro__": 242, "self": [242, 577, 1022], "call": [242, 409, 413, 439, 443, 445, 545, 813, 930, 936, 965, 971, 1030], "mangl": [242, 578], "udemi": 242, "claus": [242, 282, 304, 308, 1007], "lambda": [242, 258, 259, 261, 288, 318, 319, 667, 708, 709, 710, 711, 730], "oppos": 242, "discuss": [245, 282, 283, 348, 373, 375, 739, 813, 818, 826], "chart": 245, "interact": [246, 294, 1034, 1085], "1st": 246, "explan": [246, 306], "preced": [246, 249, 394, 1039], "float": [246, 249, 306, 1039], "einschub": 246, "vergleich": 246, "filterketten": 246, "zen": 246, "datensatz": 246, "notat": 246, "letzt": 246, "letzten": 246, "infinit": [249, 1011], "long": [249, 667], "comparison": [249, 569, 616, 761, 835, 1027, 1039], "digit": [249, 342, 1075], "english": [249, 344, 1075], "determin": [249, 856, 1072, 1082, 1083], "maximum": [249, 1072, 1082, 1083], "two": [249, 414, 507, 508, 569, 588, 672, 978, 1072, 1073, 1082, 1083], "out": [249, 282, 283, 474, 572, 601, 602, 972, 986, 1003, 1045], "duplic": [249, 452, 594, 939], "encod": [249, 251, 252, 263, 273, 293, 294, 310, 342, 1121], "nest": [252, 405, 418], "itertool": 252, "chain": [252, 813], "destructor": [252, 553, 559, 574, 639, 644, 724], "prient": 254, "next": [254, 438, 703, 1148], "standesregist": 254, "sqlite3": [254, 455, 1064, 1120], "xml": [254, 1133], "tree": [254, 783, 810, 848, 874, 881, 919, 926, 965], "projektabschlusstag": 254, "id": [255, 283, 310, 847, 867, 927, 953, 965, 1156], "anyth": 255, "defin": [255, 461, 573, 710, 1007], "own": [255, 451, 679, 689, 847], "lookup": [255, 537, 538], "vorbesprechung": 257, "legend": 257, "neuerungen": 257, "seit": 257, "2011": [257, 258, 259, 261, 360], "ausblick": 257, "thank": [258, 259, 261], "you": [258, 259, 261, 682], "readablil": [258, 259, 261], "writabl": [258, 259, 261, 937], "err": [258, 259, 261, 318, 626, 682, 716, 721], "bind": [258, 259, 261, 318, 716, 721, 729, 730, 1120], "auto": [258, 259, 261, 318, 667, 682, 715, 716, 957, 1142], "without": [258, 259, 261, 318, 583, 604, 678, 682, 946], "simpli": [258, 259, 261, 319, 927], "deserv": [258, 259, 261], "ag": [258, 259, 261, 657], "overrid": [258, 259, 261, 318, 714], "delet": [258, 259, 261, 318, 550, 619, 705, 870], "strongli": [258, 259, 261, 318, 668], "enum": [258, 259, 261, 318, 431, 668, 778], "deleg": [258, 259, 261, 318, 673], "nullptr": [258, 259, 261, 318, 681], "rvalu": [258, 259, 261, 318, 676, 679, 680], "skeleton": [259, 261, 279, 281, 587, 837, 838], "perfect": [261, 389, 431, 729], "view": [261, 670, 717, 719, 720, 774, 836], "architectur": [262, 360, 449, 667, 706, 810], "pattern": [262, 280, 282, 283, 360, 473, 487, 1011, 1164], "mondai": 262, "tuesdai": 262, "wednesdai": 262, "forc": [263, 388], "front": [263, 282, 304, 1021], "seri": [263, 266, 286, 287, 292, 293, 314, 315, 321, 326, 545, 1094, 1101, 1126], "piec": 263, "go": [263, 939, 1116], "kickoff": [263, 282, 283, 298, 301, 305, 308], "livehack": [263, 272, 451, 474, 676, 773, 1049, 1136, 1143], "Such": [264, 647], "noob": 266, "wsl": [270, 279, 281, 849, 998], "quick": 270, "permiss": [270, 291, 855, 857, 858, 859, 865, 869, 888, 919], "uart": [270, 841], "susi": 270, "untold": [270, 273, 279, 280, 283, 319], "whet": [271, 272], "appetit": [271, 272], "panda": [271, 273, 274, 276, 278, 280, 293, 305, 310, 316, 326, 1113, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132], "regex": 271, "pipelin": 272, "categori": 272, "payment": 272, "select": [272, 278, 280, 907, 914, 974, 1126, 1127, 1129, 1131, 1148], "uncategor": 272, "dataset": [273, 277, 278, 1112, 1114], "origin": [273, 276, 594, 711, 712, 820, 1116], "automat": [273, 276, 296, 312, 385, 408, 704, 752, 1163], "cleanup": [273, 276, 818, 829], "conversiosn": 274, "outlook": [276, 318], "specif": [276, 959, 1096], "usecas": 278, "drop": [278, 469, 717], "nan": 278, "datafram": [278, 1113, 1126, 1130], "isna": 278, "to_datetim": 278, "dated": 278, "workabl": 278, "usag": [278, 283, 318, 418, 422, 445, 461, 465, 510, 525, 571, 608, 609, 615, 642, 670, 674, 682, 726, 727, 728, 769, 813, 853, 892, 909, 916, 940, 984, 1062], "modifi": [278, 426, 433, 510, 956, 1018, 1048, 1132], "increas": 278, "price": 278, "particular": 278, "store": [278, 426, 474, 956, 1018], "readabl": [278, 429, 741, 942], "combin": [278, 392, 488, 489, 502], "prefer": [279, 281], "ubuntu": [279, 281, 998], "under": [279, 281, 872, 932, 1005], "unsupport": 279, "heavi": [279, 281, 846], "weight": [279, 281], "resourc": [279, 344, 577, 637, 725, 738, 806], "r": [279, 889, 926], "littl": [279, 400, 451, 1033], "concurr": 279, "far": [279, 734, 1115], "fact": [280, 792, 854, 1021, 1024], "fixtur": [280, 526, 761, 1141, 1142, 1152, 1153, 1154], "omin": [280, 1006], "warm": 281, "resolv": 281, "cont": 281, "d": [281, 474], "insid": [282, 283, 579, 584, 679, 680], "construct": [282, 304, 308, 1026, 1043], "emphasi": [282, 304, 308], "recoveri": [282, 283, 304, 305, 308], "broader": 282, "sens": 282, "morn": [283, 287, 291, 293, 305, 315, 319], "pytest": [283, 1140, 1141], "awaken": [287, 315], "bash": [291, 360, 890, 1157], "bourn": [291, 890, 1157], "inspect": [291, 897, 900], "wakeup": [291, 293, 319, 970, 972], "redirect": [291, 850, 851, 852, 853, 876, 889, 939], "pipe": [291, 719, 836, 850, 851, 853, 854, 901, 903], "archiv": [291, 832, 833, 835, 836, 998, 999, 1002], "compress": [291, 832, 833, 835, 836], "network": [291, 491, 804, 805, 908, 933, 1178], "least": [291, 1148], "day2": 293, "interpret": [294, 443, 475, 488, 489, 502, 503, 1085], "len": 294, "abl": 294, "callabl": [294, 730], "summer": [298, 301, 345], "sandbox": [298, 301], "equal": [299, 523, 569, 585, 586, 587, 588, 589, 609, 1027], "spoiler": 301, "annot": 302, "multiprocess": 304, "idea": 304, "veri": [305, 714, 746, 1133], "leftov": 305, "yesterdai": 305, "ifi": 305, "toolcas": [305, 318, 685, 686, 687], "arg": [305, 1006], "kwarg": [305, 1006], "includ": [305, 409, 463, 1054], "receiv": [305, 978], "udp": 305, "datagram": [305, 908], "compositesink": 305, "timestamp": [305, 818], "org": [306, 342], "aaarghhh": 306, "expresss": 306, "constexpr": [318, 674], "constinit": 318, "constev": 318, "want": [318, 642, 667, 678, 682, 705, 778, 783, 941, 1024], "erasur": [318, 748, 750], "classic": [319, 731, 747], "semant": [319, 676, 677, 678, 679, 680, 978], "kochtopf": 319, "roundup": 319, "still": [319, 472, 667, 1005, 1010], "weird": 322, "exchang": [322, 908], "schuetzen": 322, "pathlib": 322, "regexen": 322, "distil": 322, "py": 322, "checker": 327, "blinklicht": [328, 329, 330, 331], "electron": [328, 907], "aspect": 328, "circuitri": 328, "header": [328, 407, 453, 459, 584, 914, 1097], "pinout": [328, 914], "unittest": [331, 1142, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1179], "ece19": 332, "g2": [334, 838], "big": [334, 360, 798], "swoop": 334, "size": [334, 383, 542, 692, 886], "chunk": 334, "line": [334, 378, 410, 572, 853, 870, 1036, 1077, 1088, 1092], "str": [334, 1029], "byte": 336, "btw": 337, "wertebereich": 337, "sidenot": [338, 1050], "pure": [338, 642, 644, 1050], "beauti": [338, 445, 841, 916, 1050], "login": [339, 845, 917], "formalit\u00e4ten": 340, "ec": [341, 356, 358, 837, 838], "daili": 342, "pass": [342, 582], "fail": [342, 941, 1141, 1148, 1150], "reiter": 342, "argpars": [342, 1037, 1060], "deutsch": [343, 360], "lehrinhalt": 343, "lernergebniss": 343, "lv": 343, "empfohlen": [343, 1157, 1159, 1160, 1165, 1167, 1168, 1172, 1173, 1174, 1175, 1177, 1178, 1179], "verpflichtend": 343, "fachliteratur": 343, "lernressourcen": 343, "instrument": 343, "art": 343, "vermittlung": 343, "voraussetzungen": 343, "begleitbedingungen": 343, "pr\u00fcfungsmethod": 343, "beurteilungskriterien": 343, "mode": [344, 454, 855, 907, 940, 1034, 1058], "deliveri": [344, 981, 982], "co": 344, "requisit": 344, "assess": 344, "criteria": [344, 966], "whose": 346, "fault": 346, "newcom": 347, "jjjj": 350, "sidewai": [351, 584, 730, 741, 1006, 1011], "bisher": 360, "gehalten": 360, "entwickl": 360, "fortgeschritten": [360, 1159], "wiener": 360, "neustadt": 360, "einf\u00fchrung": [360, 1158, 1160, 1167], "ober\u00f6sterreich": 360, "pictur": [360, 798], "obersteiermark": 360, "korn": 360, "salzburg": 360, "ausgew\u00e4hlt": 360, "themen": 360, "2018": 360, "raum": 360, "n\u00fcrnberg": 360, "oberb\u00fcren": 360, "schweiz": 360, "2017": 360, "m\u00fcnchen": [360, 1156], "lowlevel": 360, "refresh": 360, "programmiererstandpunkt": 360, "2016": 360, "wien": 360, "workshop": 360, "bodenseo": 360, "hemmenhofen": 360, "bodense": 360, "systemnah": 360, "2014": 360, "mathia": 360, "kettner": 360, "siemen": 360, "braunschweig": 360, "intermedi": [360, 500, 1003, 1020], "scratch": [360, 1156], "lpd": 360, "hannov": 360, "unter": 360, "k\u00f6ln": 360, "projektverwaltung": 360, "subvers": [360, 1173], "lka": 360, "niedersachsen": 360, "konfigur": 360, "gnu": [360, 443, 984, 1168], "make": [360, 457, 524, 666, 705, 794, 837, 838, 985, 986, 1168], "2012": 360, "hamburg": 360, "fehlerdiagnos": 360, "polizei": 360, "stia": 360, "admont": 360, "bi": 360, "2010": 360, "softwareentwicklung": 360, "darmstadt": 360, "ulm": 360, "bundeswehr": 360, "wildflecken": 360, "cool": [363, 1053], "gui": 363, "Their": [363, 383], "hobbi": 363, "histori": [363, 568, 666, 774, 978, 1003, 1033, 1112], "second": [365, 367], "fahrenheit": [366, 368, 370, 497], "tabl": [366, 368, 370, 523, 1027], "simplif": 367, "constant": [369, 384, 409, 439, 500], "preprocessor": [369, 409, 410], "macro": [370, 409, 410, 459, 769, 790], "outsid": 371, "cat": [371, 895], "poor": [371, 372], "wc": 372, "definit": [373, 375, 377, 385, 403, 405, 406, 409, 461, 584, 667, 747, 749, 751, 753, 769, 970, 1047], "memset": 373, "histogram": 374, "nonsens": 375, "signatur": 375, "declar": [375, 376, 405, 406, 407, 584], "mistak": 377, "stdin": [378, 903, 917], "variant": [383, 472, 478, 667, 743, 752, 753, 754, 978], "qualifi": 383, "width": [383, 415, 589, 602, 915, 1045], "escap": [384, 1052], "logic": 387, "implicit": [388, 727], "sign": 388, "truncat": [388, 946], "propag": 388, "unsign": 388, "compil": [388, 405, 410, 426, 427, 452, 453, 454, 570, 573, 577, 706, 727, 790, 810, 984, 987, 996, 1000], "warn": [388, 394, 410, 960, 982], "cast": 388, "increment": [389, 602, 695, 1018], "decrement": [389, 602], "confus": [389, 1039, 1127], "manipul": [391, 727, 946, 982], "bitwis": [391, 1127], "AND": 391, "OR": 391, "xor": 391, "right": [391, 1089], "invert": [391, 1126], "complement": 391, "summari": [394, 569, 730, 810, 836, 1001, 1021, 1129, 1131], "true": [397, 472, 582, 1130], "fals": 397, "truth": 397, "option": [397, 444, 459, 460, 461, 836, 870, 872, 892, 899, 914, 926, 1116], "matter": 398, "distinct": 399, "purpos": [400, 950], "closer": 400, "comma": 400, "infam": 400, "idiom": 400, "bodi": 401, "goto": 403, "label": [403, 1131], "monolith": [405, 452, 474, 527], "separ": [405, 406, 452, 474, 739, 894, 1000], "static": [408, 432, 523, 583, 584, 750, 1000, 1001, 1002, 1025], "visibl": [408, 432], "replac": [409, 512, 755], "inlin": [409, 439, 572, 584], "guard": 409, "rule": [410, 449, 570, 573, 584, 672, 680, 717, 848], "span": 410, "stringif": [410, 1029], "token": 410, "address": [412, 781, 824, 847, 914, 968, 1127], "arbitrari": [415, 602, 1006, 1030], "see": [416, 841, 846, 847, 852, 853, 932, 933, 934, 936, 963, 966, 970, 972, 1051, 1115], "struct": [418, 419, 434, 569, 658, 721], "typedef": 420, "alia": 420, "singli": 423, "volatil": [425, 871], "lie": 425, "valid": 425, "handler": [425, 981, 982], "intrins": 426, "atom": [426, 736, 741, 808, 809, 813, 814, 829, 955], "builtin": 426, "align": 427, "unalign": 427, "pad": 427, "saniti": [429, 437, 451], "readabilti": 429, "shoot": 429, "offens": 429, "unobvi": 429, "ambigu": [429, 435, 672], "smell": 429, "know": 430, "size_t": 430, "discret": 431, "tradit": [431, 449, 1030], "approach": [431, 459, 460, 461], "wishlist": 431, "close": [431, 477, 722, 978], "somewhat": 432, "contriv": 432, "hoorai": 432, "correct": [433, 580, 714], "const": [433, 542, 559, 579, 580, 582, 654, 655, 667, 682, 716, 721], "non": [433, 516, 517, 518, 519, 520, 521, 522, 559, 579, 743, 749, 1148], "good": [434, 459, 460, 569, 584, 602, 671, 680, 689, 690, 717, 719], "old": [434, 584, 602, 667, 680, 689, 690, 719], "c99": 434, "explict": 435, "safeti": [435, 451], "scheme": 435, "artifici": [435, 1109], "valgrind": [436, 550], "action": [436, 982], "optim": [438, 439, 440], "bound": [438, 439, 550, 966], "unnecessari": 439, "peephol": 439, "subexpress": 439, "elimin": [439, 727, 748, 1077], "strength": 439, "reduct": 439, "fold": 439, "invari": 439, "unrol": 439, "tail": [439, 901], "cpu": [439, 847, 966, 972], "cach": [440, 461, 717], "multidimension": 440, "thrash": 440, "profil": [442, 443, 445, 446], "donald": 442, "knuth": 442, "toni": 442, "hoar": 442, "larri": 442, "wall": 442, "practic": 442, "brian": 442, "w": 442, "kernighan": 442, "rob": 442, "pike": 442, "gprof": 443, "flat": 443, "callgrind": 444, "analysi": 444, "per": [444, 778, 818, 1153], "kcachegrind": 444, "oprofil": 445, "much": [445, 460, 711, 1005], "wide": 445, "offlin": 445, "graphic": 445, "accomplish": 449, "disclaim": [449, 849], "principl": [449, 477], "yagni": 449, "uncl": 450, "bob": 450, "typic": [451, 848, 952, 968], "bookkeep": 451, "effort": 451, "spaghetti": 451, "concaten": [451, 1125], "input": [451, 852, 1010, 1113], "yyyi": 451, "mm": 451, "where": [451, 457, 846, 984], "testabl": 451, "explicitli": [451, 710, 727], "categor": 451, "net": 451, "place": [451, 528, 573, 614, 837, 838, 1048], "overengin": [451, 584], "boilerpl": [452, 711, 806], "execut": [452, 458, 855, 1001, 1007, 1015, 1035, 1084, 1148, 1150], "consist": [452, 781], "paus": 454, "diagram": 454, "cmake_build_typ": 454, "k": [454, 1110], "printf": [454, 571], "popular": [454, 842], "find_packag": 455, "prefix": [457, 1006], "target": [457, 458, 460, 463, 464, 526, 944, 985, 1163], "runpath": 457, "abi": 457, "blacklist": [459, 460], "flag": [459, 648, 796, 936, 1053], "libhello": 459, "bad": [459, 460, 717, 779], "target_compile_definit": 460, "backlist": 460, "availablil": 460, "use_blacklist": 461, "normal": 462, "subdirectori": 463, "reorgan": 463, "i2c": [467, 914, 916], "subhierarchi": 467, "instanti": [467, 474, 623, 684, 743, 776], "adapt": [468, 474, 483, 488, 490, 497, 502, 730], "must": [468, 943], "adapte": 468, "asensor": 468, "real": [468, 576, 667, 728, 867], "measur": [468, 511, 742, 970, 972], "motiv": [469, 472, 488, 489, 585, 668, 671, 673, 682, 684, 709, 715, 830, 1012, 1022, 1028], "insert": [469, 535, 536, 619, 620, 623, 624, 625, 659, 729, 757, 758, 798], "bulk": 469, "6a": 469, "initializer_list": [469, 670, 672], "socialdb": 470, "filesystem": [471, 761, 978], "thermomet": [471, 491, 492, 505, 506, 525], "aggreg": [472, 481, 671], "conret": 472, "realiz": 472, "situat": [472, 927], "constantsensor": 472, "decoratedconstantsensor": 472, "randomsensor": [472, 513], "decoratedrandomsensor": 472, "verifi": [472, 882, 916, 918, 1113], "hold": [472, 1026], "studi": [474, 715, 716, 995], "heat": 474, "dbuslogg": 474, "dbusvaluestor": 474, "either": 474, "stop": [474, 725], "help": [474, 870, 902, 1136, 1143], "observ": [476, 504, 1012], "which": [477, 943, 984], "liskov": 477, "substitut": [477, 582], "segreg": 477, "invers": [477, 971], "proxi": [478, 488, 491, 492, 502, 505, 506], "foundat": 479, "hierarchi": [479, 592, 848, 1007], "hypothet": [479, 1027], "singleton": [480, 493, 494, 495, 507, 508, 509], "connector": 481, "uniniti": [489, 582], "flexibl": [493, 494, 507, 508], "strict": [494, 508], "inflex": [495, 509], "i2csensorfactori": 496, "concret": [496, 507, 508], "i2csensorfactory_vendor1": 496, "stub": [505, 817], "socialinsur": [507, 508], "oegk": [507, 508], "sv": [507, 508], "introduc": [510, 571, 717], "relationship": [510, 644, 645, 1113], "firstnam": 510, "lastnam": [510, 660, 662], "w1sensor": [510, 527], "answer": [510, 709], "try": [514, 592, 725, 1007], "ledstripedisplay_nopoli": 516, "cover": [516, 517, 518, 519, 520, 521, 522, 525], "hysteresis_nopoli": 517, "averagingsensor_nopoli": 518, "constantsensor_nopoli": 519, "mocksensor_nopoli": 520, "randomsensor_nopoli": 521, "mock": 522, "shape": [523, 870], "procedur": 523, "circl": 523, "area": [523, 589], "squar": 523, "massag": 524, "sub": 524, "notfound": 526, "find_is_const": 526, "isol": [526, 1117, 1153], "realiti": 526, "pc": 526, "greater": 530, "odd": 531, "overwrit": 535, "sunni": [536, 538, 541, 937, 941, 942, 943], "uniquifi": 543, "transcript": 545, "malloc": 550, "free": 550, "mismatch": [550, 927], "across": [553, 747, 749, 751, 753], "ownership": [558, 559, 560, 727, 855], "raii": [558, 559, 560, 738], "dealloc": 559, "naiv": [562, 583, 634, 826, 981, 1011, 1126], "ol": [569, 716], "look": [569, 932, 933, 934], "distanc": [569, 588], "length": 569, "manual": [570, 573, 577, 730, 753, 754, 870, 930, 948, 951, 1012], "specifi": [571, 937], "otherwis": 571, "lifecycl": 574, "dragon": [577, 733], "memberwis": 577, "straighforward": 577, "correctli": 577, "underli": [578, 668], "mechan": 578, "just": 578, "pollut": 580, "hidden": [581, 892], "cannot": 582, "easili": 582, "odr": 584, "litt": 584, "defnit": 584, "ostream": [585, 586, 587, 588, 589], "cout": 585, "cuboid": 586, "upon": [586, 588, 589], "point3d": [586, 588], "surfac": 586, "volum": [586, 998], "unari": [587, 588], "rectangl": [588, 589], "coordin": [588, 589], "absolut": [588, 761, 894, 1107], "height": 589, "catch": [592, 1007], "throw": [592, 743], "spirit": [602, 726, 727, 728], "pre": [604, 671], "destin": [604, 937], "back_insert_iter": 604, "binary_search": 607, "intellig": [607, 613, 1014, 1109], "find_if": [610, 660], "customiz": 610, "for_each": 611, "lower_bound": 613, "reverse_copi": [615, 634], "characterist": [617, 620], "modif": [620, 1000], "fill": [623, 1120], "definin": 624, "subscript": 625, "eras": 626, "multimap": 628, "deriv": [638, 639], "larger": [642, 1002, 1010], "substr": [647, 1054], "paint": 648, "american": 648, "onto": 648, "moodl": [649, 843, 857, 858, 883, 990], "quiz": [649, 843, 857, 858, 883, 990], "cin": 651, "n": 657, "year": 657, "transform": [658, 730, 758, 1010], "wrong": [661, 741, 937], "great": [666, 968], "around": [667, 695], "school": 667, "item": [667, 729, 757, 758, 759, 1005, 1011], "inevit": 667, "union": [667, 743], "consider": [667, 968], "uniform": 669, "implementor": 670, "direct": [670, 781], "inconsist": 671, "heap": 671, "refus": 671, "narrow": 671, "mess": [672, 1121], "realist": [672, 1008, 1141], "int": [672, 963], "nicolai": 672, "josutti": 672, "complain": 672, "said": 675, "guidelin": 675, "well": 675, "smartptr": 677, "lvalu": [680, 729], "wish": [680, 1020], "theori": 680, "Ones": 680, "sai": [682, 872], "decai": 682, "chosen": 684, "rescu": [684, 709, 731, 986, 1006, 1027, 1132], "syntact": [684, 1006], "variat": [684, 716, 721, 810], "conceptless": [685, 686], "fulfil": 689, "has_siz": 689, "index_returns_doubl": 689, "func": 690, "ret": 693, "doubl": 693, "foreword": 695, "prototyp": 695, "examp": 695, "explain": 695, "drive": [695, 907], "anatomi": [695, 788], "resum": 695, "suspens": 695, "caller": 695, "co_yield": 695, "mimick": 695, "fibo": 696, "suspend": [701, 702, 703], "decis": [706, 966], "cleanli": 706, "care": 709, "handwritten": [711, 712], "proggi": 711, "morph": 711, "possibl": 712, "temporari": [712, 1005, 1141], "made": 712, "hard": [714, 891], "aris": 714, "gool": 716, "prevent": [716, 727], "accident": [716, 758], "dangl": 717, "easi": [717, 734], "constraint": 717, "dogmat": 717, "sigh": 717, "storag": [719, 959], "abbrevi": 719, "avail": [719, 769], "compat": 721, "unique_ptr": [723, 726, 727], "shared_ptr": [723, 726, 758], "handwrit": 725, "ctor": 725, "auto_ptr": 725, "mayb": 725, "uniqu": [726, 759], "But": [726, 749, 941], "juggl": 726, "make_shar": 726, "cyclic": 726, "chanc": 727, "leakag": 727, "keystrok": 727, "make_uniqu": 727, "acknowledg": 727, "prove": 727, "weak_ptr": [728, 758], "borrow": 728, "invalid": 728, "univers": 729, "dual": 729, "bag": [729, 757, 758, 759], "null": 730, "pointlessli": 730, "hardcod": [730, 774], "placehold": 730, "upsid": 731, "technic": 731, "downsid": 731, "joinabl": 734, "detach": [734, 953], "cornercas": 734, "recursive_mutex": 737, "timed_mutex": 737, "recursive_timed_mutex": 737, "lock": [738, 741, 802, 815], "unlock": [738, 815], "consid": 738, "acquisit": [738, 1094], "lock_guard": 738, "condition_vari": 739, "safe": [739, 982], "predic": [739, 957], "concern": 739, "promis": 741, "chrono": [741, 742], "utterli": 741, "becom": [741, 1002], "readi": 741, "minim": 741, "pro": 741, "clock": 742, "sleep": [742, 808, 813, 814], "bad_variant_access": 743, "accessor": 743, "get_if": 743, "fundament": [743, 1031], "crtp": [745, 750], "incomplet": [746, 1123], "bloat": 748, "unrel": 751, "visit": 754, "rel": [761, 894, 1015], "compon": 761, "creation": [761, 842, 953, 954], "create_directori": 761, "entri": 761, "classif": 761, "is_xxx": 761, "directory_entri": 761, "modern": [765, 766, 767, 1161], "slideshow": [766, 769, 771, 774, 776, 779, 781, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 808, 813, 815, 818, 820, 824, 827, 830, 978, 982, 1050, 1137, 1144], "hook": 768, "necessari": 768, "ioctl": [768, 769, 771, 790, 823, 936], "vtabl": 769, "kernelspac": 769, "_io": [769, 790], "major": [773, 774], "minor": [773, 774], "space": [774, 824, 843, 846, 847, 968], "hair": 778, "pretti": 778, "wswitch": 778, "dma": [781, 782, 806], "physic": 781, "scatterlist": 781, "when": 783, "explod": 783, "loadabl": 788, "init": [788, 806, 848, 1156], "exit": [788, 917, 953, 963], "unload": 788, "raspi": [790, 791, 927], "legaci": [790, 1080], "api": [790, 820, 952, 971], "my_activate_gpio": 790, "servic": [792, 848, 1124], "routin": [792, 806], "reserv": 794, "kmalloc": [796, 797, 813], "doubli": [798, 799], "node": [798, 939], "empti": [798, 889, 1021, 1077], "consequ": 800, "rt": [802, 803], "mutual": [802, 815], "exclus": [802, 815], "registr": 804, "layer": 804, "util": [804, 909], "pci": [806, 807], "foremost": 806, "probe": 806, "bar": 806, "rasperri": 810, "crossdev": 810, "artifact": [810, 1110], "bootload": 810, "jjj": 811, "mainten": 812, "spinlock": [813, 815, 816], "spin_lock": 813, "irq": 813, "spin_lock_irqsav": 813, "spin_unlock_irqrestor": 813, "ah": [813, 1121], "bulletproof": 815, "dup": 817, "defer": [818, 829], "jiffi": 820, "wheel": [820, 1063], "get_one_ev": 823, "copy_to_us": 823, "noth": 826, "o_nonblock": 826, "wake": 827, "workqueu": [829, 830, 831], "did": 829, "destroi": [830, 1143], "gzip": 834, "tar": 836, "etiquett": 836, "Being": 836, "g1": 837, "lot": [837, 838], "precondit": [837, 838], "credenti": [837, 856], "backup": [837, 838, 872], "busi": 838, "ok": [841, 963], "serial": 841, "pseudo": 841, "partit": 841, "proc": 841, "authent": [845, 923], "prompt": 845, "verif": [845, 1096], "success": 845, "imperson": 845, "uid": [847, 866, 867], "parent": [848, 965], "child": 848, "subsystem": 849, "0": [849, 963, 1117, 1156], "stdout": [853, 903, 917, 939], "stderr": 853, "trick": [853, 1052], "teacher": 855, "constel": 855, "root": [855, 867], "octal": 855, "tune": [855, 970, 1116], "setuid": [866, 867], "passwd": [866, 886, 942, 1086], "sudo": 866, "password": [866, 1074], "chmod": [866, 1035], "toi": 866, "effect": [867, 982, 1021], "ugli": 868, "sticki": 868, "umask": 869, "edit": 870, "tabul": 870, "filenam": 870, "bashrc": [871, 872], "cp": 872, "similar": 872, "its": [872, 1116], "pwd": 873, "cd": 873, "mkdir": [879, 889], "funni": 880, "dev": 885, "touch": 889, "rm": 889, "rmdir": 889, "mv": 893, "somewher": 893, "cut": [896, 1045], "durchsuchen": 898, "optionen": 898, "verkn\u00fcpfungen": 898, "grep": 899, "less": [902, 1003, 1027], "brushless": 907, "motor": 907, "speed": 907, "esc": 907, "fwd": 907, "rev": 907, "calibr": 907, "packet": 908, "vcan": 909, "frame": [910, 1125], "mcp2515": 911, "schemat": 911, "solder": 911, "spi": 911, "lm73": 914, "slave": [914, 916], "master": [914, 916], "enabl": [914, 916], "bcm2835": 914, "datasheet": 914, "connect": [914, 933, 1120], "i2cdetect": 914, "detect": 914, "hwmon": [914, 916], "monitor": [914, 916], "pca9685": 915, "puls": 915, "wire": [915, 916], "ds18b20": 916, "alter": 916, "w1": 916, "attach": 916, "pin": [916, 950], "ds2482": 916, "800": 916, "channel": 916, "announc": 916, "hotplug": 916, "lm": 916, "caveat": [916, 1117], "topologi": 916, "symptom": 916, "adjust": [919, 996], "wear": 923, "admin": 923, "hat": 923, "scp": 926, "sshf": 927, "mount": 927, "logdata": 927, "unmount": 927, "fusermount": 927, "umount": 927, "helper": [928, 1127], "simplic": [932, 933, 934], "watch": 932, "strace": 932, "supervis": 932, "descriptor": [936, 939, 946], "filedescriptor": 936, "offset": [936, 946], "lseek": 936, "hole": 938, "o_creat": 940, "bogu": 940, "o_excl": 941, "alreadi": 941, "o_rdonli": 942, "even": [942, 943, 1069], "o_wronli": 943, "writeabl": 943, "implicitli": 943, "scatter": 946, "gather": 946, "retriev": 948, "wise": 949, "legal": 952, "pthread_join": 953, "synchron": [955, 981], "win32": 957, "reset": 957, "trylock": 962, "islock": 962, "argc": 963, "char": 963, "argv": [963, 1037], "procf": 965, "pid": 965, "ppid": 965, "getpid": 965, "getppid": 965, "multitask": 966, "fair": [966, 970], "runnabl": [966, 972], "bare": 968, "metal": 968, "hm": 968, "awai": [968, 1103], "stabil": 968, "latenc": [970, 972], "nice": 970, "inexact": 970, "immedi": 970, "preempt_rt": 970, "polici": 971, "prioriti": 971, "runn": 971, "frequenc": 972, "scale": 972, "mysteri": 972, "remain": 972, "sysprog": [973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983], "mmap": 977, "segment": 977, "produc": [977, 1011], "consum": 977, "mq_open": 978, "mq_send": 978, "mq_receiv": 978, "mq_close": 978, "mq_unlink": 978, "notif": 978, "mq_notifi": 978, "mqueue": 978, "sem_open": 978, "sem_wait": 978, "sem_post": 978, "sem_clos": 978, "sem_unlink": 978, "barebon": 981, "alarm": 981, "louder": 981, "innoc": 981, "sigalrm": 981, "programmat": 982, "mask": 982, "pend": 982, "sigset_t": 982, "async": 982, "seem": 984, "nm": 984, "agnost": 985, "goodi": 986, "nativ": [987, 992], "sysroot": [987, 996], "linaro": 996, "defunct": 996, "patienc": 996, "against": [996, 1001, 1027], "docker": 998, "autoconf": 998, "71": 998, "zoom": 1000, "rememb": 1000, "reloc": 1001, "independ": 1001, "pic": 1001, "runtim": 1001, "versu": 1001, "def": 1003, "reach": 1003, "theoret": 1003, "nonloc": 1003, "hood": 1005, "monkeypatch": 1005, "print": [1005, 1030], "contextlib": 1005, "contextmanag": 1005, "involv": 1005, "prefixprint": 1005, "mind": 1006, "sugar": 1006, "functool": [1006, 1027], "rais": 1007, "regardless": 1007, "coverag": 1010, "infin": 1011, "form": 1015, "daemon": 1016, "mother": 1018, "acquir": 1018, "abc": 1020, "late": 1020, "abtract": 1020, "interrelationship": 1023, "salari": 1024, "introspect": 1024, "isinst": 1024, "issubclass": 1024, "classmethod": 1025, "staticmethod": 1025, "_make": 1026, "_asdict": 1026, "dunder": 1027, "compar": 1027, "incompat": 1027, "lotsa": 1027, "magic": 1027, "__gt__": 1027, "term": 1027, "__lt__": 1027, "total_ord": 1027, "them": 1027, "readonli": 1028, "repr": 1029, "__repr__": 1029, "suppli": 1030, "ultim": 1030, "guido": 1033, "van": 1033, "rossum": 1033, "hash": 1035, "bang": 1035, "she": 1035, "doze": 1035, "registri": 1035, "indent": 1036, "cosmet": 1037, "rudimentari": 1037, "python2": 1039, "unicod": 1039, "esoter": 1043, "delimit": 1052, "interv": 1060, "axi": 1062, "setuptool": 1063, "manifest": 1063, "publish": [1063, 1102, 1124], "usernam": 1074, "prime": [1079, 1087, 1093], "strategi": 1086, "revert": 1088, "justifi": 1089, "activ": 1095, "dictread": [1097, 1098, 1116], "cp1252": [1097, 1099], "reader": [1099, 1100, 1116], "nohead": 1099, "both": 1105, "interrel": 1106, "product": 1107, "david": 1108, "beazlei": 1108, "raymond": 1108, "hetting": 1108, "mean": 1110, "linear": [1111, 1113, 1114], "regress": [1111, 1113, 1114], "weather": 1112, "ndarrai": 1113, "plot": 1113, "splice": 1113, "mankind": 1115, "god": 1115, "insan": 1116, "scsv": 1116, "dbapi": [1117, 1119, 1120], "transact": 1117, "postgresql": 1119, "postgr": 1119, "cursor": 1120, "queri": 1120, "ascii": 1121, "iso": 1121, "latin": 1121, "8859": 1121, "lieb": 1121, "gr\u00fc\u00dfe": 1121, "j\u00f6rg": 1121, "\u795d\u597d": 1121, "utf": 1121, "decod": 1121, "broker": 1124, "payload": 1124, "append": 1125, "deprec": 1125, "bitmap": 1127, "neat": 1127, "iloc": [1129, 1130], "Then": 1129, "inplac": 1130, "loc": [1130, 1131], "hiccup": 1131, "inclus": 1131, "lowercas": 1132, "email": 1132, "normalized_email": 1132, "ing": 1132, "elementtre": 1133, "etre": 1133, "sax": 1133, "dom": 1133, "invoc": 1136, "subcommand": 1136, "upload": 1139, "pythonpath": 1141, "mark": 1141, "expect": [1141, 1150], "recogn": 1142, "meat": 1142, "freez": 1143, "recreat": 1143, "fatal": 1148, "failur": 1148, "assert_": 1148, "suit": 1148, "teardown": 1153, "organisatorisch": 1155, "buchung": 1155, "kursablauf": 1155, "kursgestaltung": 1155, "unterlagen": 1155, "grub": 1156, "97": 1156, "bauen": 1156, "prozess": 1156, "verschieden": 1156, "zielpublikum": [1157, 1159, 1160, 1165, 1167, 1172, 1173, 1179], "kursinhalt": [1157, 1159, 1160, 1165, 1167, 1168, 1172, 1173, 1174, 1175, 1177, 1178, 1179], "vorkenntniss": [1157, 1159, 1160, 1165, 1167, 1168, 1172, 1173, 1174, 1175, 1177, 1178, 1179], "three": 1161, "prior": 1163, "beispielen": 1167, "mutter": 1168, "aller": 1168, "woch": 1172, "svn": 1173}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "nbsphinx": 4, "sphinx": 60}, "alltitles": {"Kontakt": [[0, "kontakt"]], "Navigation": [[0, "navigation"]], "Google Maps": [[0, "google-maps"]], "Google Streetview": [[0, "google-streetview"]], "Curriculum Vitae": [[1, "curriculum-vitae"]], "\u00dcber Mich": [[2, "uber-mich"]], "Projekte": [[3, "projekte"]], "Projekte aus selbstst\u00e4ndiger T\u00e4tigkeit": [[3, "projekte-aus-selbststandiger-tatigkeit"]], "Projekte aus nichtselbstst\u00e4ndiger T\u00e4tigkeit": [[3, "projekte-aus-nichtselbststandiger-tatigkeit"]], "Skills": [[4, "skills"], [151, "skills"]], "Angebot: In-House Schulungen": [[5, "angebot-in-house-schulungen"]], "Zu meiner Person": [[5, "zu-meiner-person"]], "Schwerpunke": [[5, "schwerpunke"]], "C/C++": [[5, "c-c"]], "Python": [[5, "python"], [96, "python"], [342, "python"], [347, "python"]], "Linux": [[5, "linux"], [80, "linux"], [169, "linux"], [906, "linux"]], "Schulungsstil": [[5, "schulungsstil"]], "Preise": [[5, "preise"]], "Course Material": [[6, "course-material"], [450, "course-material"], [1107, "course-material"]], "Einleitung": [[7, "Einleitung"], [207, "Einleitung"]], "Datatypes": [[7, "Datatypes"], [204, "Datatypes"], [207, "Datatypes"], [210, "Datatypes"], [223, "Datatypes"], [226, "Datatypes"], [234, "Datatypes"], [236, "Datatypes"], [242, "Datatypes"], [246, "Datatypes"], [249, "Datatypes"], [252, "Datatypes"], [266, "datatypes"], [273, "datatypes"], [276, "datatypes"], [284, "Datatypes"], [286, "datatypes"], [287, "datatypes"], [288, "Datatypes"], [292, "datatypes"], [293, "datatypes"], [310, "Datatypes"], [314, "datatypes"], [315, "datatypes"], [320, "datatypes"], [321, "datatypes"], [322, "Datatypes"], [337, "Datatypes"], [1039, "datatypes"], [326, "datatypes"]], "Numbers": [[7, "Numbers"], [207, "Numbers"], [210, "Numbers"], [234, "Numbers"], [337, "Numbers"], [1039, "numbers"]], "Integer Numbers": [[7, "Integer-Numbers"], [207, "Integer-Numbers"], [1039, "integer-numbers"]], "Strings": [[7, "Strings"], [204, "Strings"], [207, "Strings"], [210, "Strings"], [219, "Strings"], [223, "Strings"], [223, "id3"], [226, "Strings"], [234, "Strings"], [246, "Strings"], [264, "Strings"], [267, "Strings"], [267, "id1"], [267, "id3"], [274, "Strings"], [310, "Strings"], [337, "Strings"]], "Compound Datatypes": [[7, "Compound-Datatypes"], [207, "Compound-Datatypes"], [219, "Compound-Datatypes"], [223, "Compound-Datatypes"], [226, "Compound-Datatypes"], [229, "Compound-Datatypes"], [234, "Compound-Datatypes"], [236, "Compound-Datatypes"], [242, "Compound-Datatypes"], [246, "Compound-Datatypes"], [249, "Compound-Datatypes"], [252, "Compound-Datatypes"], [264, "Compound-Datatypes"], [288, "Compound-Datatypes"], [294, "Compound-Datatypes"], [306, "Compound-Datatypes"], [310, "Compound-Datatypes"], [322, "Compound-Datatypes"], [1040, "compound-datatypes"]], "Lists (Array in JavaScript, std::vector<> in C++, Array in Java)": [[7, "Lists-(Array-in-JavaScript,-std::vector<>-in-C++,-Array-in-Java)"], [207, "Lists-(Array-in-JavaScript,-std::vector<>-in-C++,-Array-in-Java)"]], "Dictionary (Key/Value Map in Javascript)": [[7, "Dictionary-(Key/Value-Map-in-Javascript)"], [207, "Dictionary-(Key/Value-Map-in-Javascript)"]], "Set: mathematische Mengen": [[7, "Set:-mathematische-Mengen"], [207, "Set:-mathematische-Mengen"]], "while": [[7, "while"], [207, "while"], [226, "while"], [242, "while"], [274, "while"]], "Functions": [[7, "Functions"], [43, "functions"], [207, "Functions"], [210, "Functions"], [223, "Functions"], [234, "Functions"], [236, "Functions"], [242, "Functions"], [246, "Functions"], [251, "functions"], [267, "Functions"], [274, "Functions"], [288, "Functions"], [304, "functions"], [308, "functions"], [314, "functions"], [315, "functions"], [316, "Functions"], [320, "functions"], [321, "functions"], [322, "Functions"], [375, "functions"], [375, "id1"], [1051, "functions"], [326, "functions"]], "Python Basics (2021-xx-xx - 2021-yy-yy)": [[8, "python-basics-2021-xx-xx-2021-yy-yy"]], "Training Information": [[8, null], [190, null], [191, null], [193, null], [194, null], [195, null], [196, null], [198, null], [200, null], [201, null], [205, null], [208, null], [211, null], [214, null], [215, null], [216, null], [217, null], [221, null], [224, null], [233, null], [237, null], [240, null], [243, null], [245, null], [248, null], [251, null], [254, null], [263, null], [266, null], [273, null], [276, null]], "\u00dcberblick": [[8, "uberblick"], [198, "uberblick"], [208, "uberblick"], [217, "uberblick"], [233, "uberblick"], [245, "uberblick"]], "Log": [[8, "log"], [138, "log"], [190, "log"], [191, "log"], [194, "log"], [195, "log"], [203, "log"], [205, "log"], [206, "log"], [208, "log"], [211, "log"], [215, "log"], [217, "log"], [221, "log"], [224, "log"], [233, "log"], [245, "log"], [254, "log"]], "Tag 1": [[8, "tag-1"], [181, "tag-1"], [200, "tag-1"], [208, "tag-1"], [211, "tag-1"], [217, "tag-1"], [233, "tag-1"], [245, "tag-1"]], "Tag 2": [[8, "tag-2"], [181, "tag-2"], [200, "tag-2"], [208, "tag-2"], [211, "tag-2"], [217, "tag-2"], [233, "tag-2"], [245, "tag-2"]], "Live-Hacking (Jupyter Notebook)": [[8, "live-hacking-jupyter-notebook"], [198, "live-hacking-jupyter-notebook"], [208, "live-hacking-jupyter-notebook"], [211, "live-hacking-jupyter-notebook"], [221, "live-hacking-jupyter-notebook"]], "Links": [[8, "links"], [39, "links"], [138, "links"], [175, "Links"], [186, "links"], [191, "links"], [193, "links"], [195, "links"], [198, "links"], [205, "links"], [206, "links"], [208, "links"], [217, "links"], [221, "links"], [224, "links"], [227, "links"], [233, "links"], [240, "links"], [251, "links"], [254, "links"], [287, "links"], [293, "links"], [347, "links"], [425, "links"], [674, "links"], [695, "links"], [713, "links"], [724, "links"], [849, "links"], [870, "links"], [909, null], [916, "links"], [1032, null], [1062, null], [1063, "links"], [1124, "links"], [1126, "links"], [1127, "links"], [1129, "links"], [1130, "links"], [1131, "links"], [1132, "links"], [1144, "links"], [787, "links"]], "Programmierung Grundlagen (Jupyter Notebook)": [[9, "programmierung-grundlagen-jupyter-notebook"], [199, "programmierung-grundlagen-jupyter-notebook"], [209, "programmierung-grundlagen-jupyter-notebook"], [235, "programmierung-grundlagen-jupyter-notebook"], [247, "programmierung-grundlagen-jupyter-notebook"]], "Details": [[10, "details"], [79, "details"], [359, "details"]], "Course List": [[11, "course-list"]], "Contents": [[11, null], [24, null], [149, null], [151, null], [153, null], [154, null], [155, null], [156, null], [157, null], [158, null], [159, null], [160, null], [169, null], [178, null], [182, "contents"], [183, null], [448, "contents"], [550, null], [553, null], [559, null], [562, null], [650, "id1"], [839, "id1"], [859, "id1"], [878, "id1"], [884, "id1"], [887, "id1"], [904, "id1"], [912, "id1"], [913, "id1"], [920, "id1"], [929, "id1"], [945, "id1"], [947, "id1"], [949, "id1"], [964, "id1"], [974, null], [977, null], [991, "id1"], [1011, null], [1066, "id1"], [1067, "id1"], [1071, "id1"], [1080, "id1"], [1094, "id1"], [1101, "id1"], [1148, null], [1150, null], [1153, null], [1161, "id2"], [1164, "contents"]], "Programmierung Grundlagen, anhand von Python (12. und 13.4.2021)": [[11, "programmierung-grundlagen-anhand-von-python-12-und-13-4-2021"], [360, "programmierung-grundlagen-anhand-von-python-12-und-13-4-2021"]], "Templates for Course Descriptions": [[12, "templates-for-course-descriptions"]], "Sidebar: Course Metadata": [[12, "sidebar-course-metadata"]], "About This Site": [[13, "about-this-site"]], "License: GPLv3": [[13, "license-gplv3"]], "Github": [[13, "github"], [342, "github"]], "Sphinx": [[13, "sphinx"], [67, "sphinx"]], "Installation Instructions": [[13, "installation-instructions"]], "pip and venv": [[13, null]], "Work in Progress": [[13, "work-in-progress"], [137, "work-in-progress"]], "More": [[13, "more"]], "OpenTraining": [[14, "opentraining"]], "Draft Topics": [[15, "draft-topics"]], "Miscellaneous": [[16, "miscellaneous"], [136, "miscellaneous"], [147, "miscellaneous"], [174, "miscellaneous"], [194, "miscellaneous"], [258, "miscellaneous"], [259, "miscellaneous"], [279, "miscellaneous"], [293, "miscellaneous"], [304, "miscellaneous"], [305, "miscellaneous"], [308, "miscellaneous"], [315, "miscellaneous"], [318, "miscellaneous"], [545, "miscellaneous"], [545, "id1"], [681, "miscellaneous"], [946, "miscellaneous"], [959, "miscellaneous"], [744, "miscellaneous"]], "S5 Integration": [[17, "s5-integration"]], "Work in Progress: S5 Web Slides": [[17, "work-in-progress-s5-web-slides"]], "Implementation Notes": [[17, "implementation-notes"], [328, "implementation-notes"]], "Todo": [[17, "id1"], [151, null], [151, null], [151, null], [151, null], [151, null], [151, null], [151, null], [151, null], [151, null], [151, null], [151, null], [151, null], [151, null], [151, null], [151, null], [151, null], [151, null], [151, null], [151, null], [180, "id1"], [183, "id2"], [183, "id3"], [450, "todo"], [546, "id1"], [549, "id1"], [552, "id1"], [555, "id1"], [558, "id1"], [561, "id1"], [564, "id1"], [767, "id1"], [771, "id1"], [779, "id2"], [973, "id1"], [976, "id1"], [980, "id1"], [1147, "id1"], [1152, "id1"]], "S5 Slide Tests": [[18, "s5-slide-tests"]], "Level 1 Heading": [[19, "level-1-heading"]], "Level 2 Heading": [[19, "level-2-heading"]], "Level 2 Heading, Image": [[19, "level-2-heading-image"]], "Screencasts": [[20, "screencasts"]], "Topics to be Written": [[21, "topics-to-be-written"]], "New Topics to Write": [[21, "new-topics-to-write"]], "Netidee F\u00f6rderantrag": [[22, "netidee-forderantrag"]], "Netidee F\u00f6rderantrag: OpenTraining": [[23, "netidee-forderantrag-opentraining"]], "1. DATEN ANTRAGSTELLER_IN": [[23, "daten-antragsteller-in"]], "2. ALLGEMEINES": [[23, "allgemeines"]], "2.1 Projektname": [[23, "projektname"]], "2.2 Projekt-Untertitel": [[23, "projekt-untertitel"]], "2.3 Allgemeinverst\u00e4ndliche KURZbeschreibung des Projektes": [[23, "allgemeinverstandliche-kurzbeschreibung-des-projektes"]], "2.4 Anschlussf\u00f6rderung": [[23, "anschlussforderung"]], "3. DIE BESONDERE BEDEUTUNG IHRES PROJEKTES F\u00dcR DAS INTERNET (DIE INTERNETNUTZUNG) IN \u00d6STERREICH?": [[23, "die-besondere-bedeutung-ihres-projektes-fur-das-internet-die-internetnutzung-in-osterreich"]], "4. ZIELGRUPPE UND PROJEKTZIEL": [[23, "zielgruppe-und-projektziel"]], "5. L\u00d6SUNG": [[23, "losung"]], "5.1 Beschreibung der Probleml\u00f6sung": [[23, "beschreibung-der-problemlosung"]], "5.2 Wesentliche Elemente eines nachhaltigen Impact NACH netidee Projektende": [[23, "wesentliche-elemente-eines-nachhaltigen-impact-nach-netidee-projektende"]], "6. UMFELDANALYSE": [[23, "umfeldanalyse"]], "6.1 Was ist der Stand der Technik / Methode / des Wissens?": [[23, "was-ist-der-stand-der-technik-methode-des-wissens"]], "6.2 Welche andere L\u00f6sungen/Vorhaben zu den genannten Problemen gibt es schon?": [[23, "welche-andere-losungen-vorhaben-zu-den-genannten-problemen-gibt-es-schon"]], "7. ALLEINSTELLUNGSMERKMAL": [[23, "alleinstellungsmerkmal"]], "8. PROJEKTERGEBNISSE": [[23, "projektergebnisse"]], "8.1 Liste der Projektergebnisse": [[23, "liste-der-projektergebnisse"]], "8.2 Erforderliche Lizenzen Dritter": [[23, "erforderliche-lizenzen-dritter"]], "9. ERFOLGREICHER PROJEKTABSCHLUSS": [[23, "erfolgreicher-projektabschluss"]], "9.1 Ihre sonstigen Aktivit\u00e4ten im Projektbereich": [[23, "ihre-sonstigen-aktivitaten-im-projektbereich"]], "9.2 Angaben zur fachlichen Eignung der MitarbeiterInnen im Projektkernteam": [[23, "angaben-zur-fachlichen-eignung-der-mitarbeiterinnen-im-projektkernteam"]], "9.3 Erfahrung des/der vorgesehenen ProjektleiterIn": [[23, "erfahrung-des-der-vorgesehenen-projektleiterin"]], "9.4 Link zum maximal 2-min\u00fctigen Video des Projektkernteams": [[23, "link-zum-maximal-2-minutigen-video-des-projektkernteams"]], "9.5 Risiken": [[23, "risiken"]], "9.6 Erfolgskriterien am netidee-Projektende": [[23, "erfolgskriterien-am-netidee-projektende"]], "9.7 Angestrebter Impact 3 Jahre nach netidee-Projektende": [[23, "angestrebter-impact-3-jahre-nach-netidee-projektende"]], "10. UMSETZUNG (EINJ\u00c4HRIGES NETIDEE PROJEKT)": [[23, "umsetzung-einjahriges-netidee-projekt"]], "10.1 Wichtige Partner_innen": [[23, "wichtige-partner-innen"]], "10.2 Arbeitsschwerpunkte": [[23, "arbeitsschwerpunkte"]], "10.3 Wesentliche Ressourcen": [[23, "wesentliche-ressourcen"]], "10.4 Nutzer_innen-Kommunikationskan\u00e4le": [[23, "nutzer-innen-kommunikationskanale"]], "11. PROJEKTTERMINE": [[23, "projekttermine"]], "11.1 Termine Projektstart - Projektende": [[23, "termine-projektstart-projektende"]], "Projektstart": [[23, "projektstart"]], "12. KOSTEN UND FINANZIERUNG": [[23, "kosten-und-finanzierung"]], "12.1 Projektkosten": [[23, "projektkosten"]], "Personalkosten": [[23, "personalkosten"]], "Sonstige Kosten": [[23, "sonstige-kosten"]], "Gesamtkosten in \u20ac": [[23, "gesamtkosten-in"]], "12.2 Wir beantragen folgende netidee-F\u00f6rderung": [[23, "wir-beantragen-folgende-netidee-forderung"]], "13.3 Die restlichen Kosten werden finanziert durch": [[23, "die-restlichen-kosten-werden-finanziert-durch"]], "13. SONDERPREIS": [[23, "sonderpreis"]], "14. ERG\u00c4NZENDE ANGABEN": [[23, "erganzende-angaben"]], "14.1 Transparenz Mehrfachantr\u00e4ge": [[23, "transparenz-mehrfachantrage"]], "14.2 Nutzung der WhatAVenture-Plattform": [[23, "nutzung-der-whataventure-plattform"]], "14.3 Das eingereichte Projekt ist Teil einer schulischen Verpflichtung (z.B. HTL Diplomarbeit)": [[23, "das-eingereichte-projekt-ist-teil-einer-schulischen-verpflichtung-z-b-htl-diplomarbeit"]], "14.4 Wie haben Sie von der netidee erfahren? (Mehrfachnennungen m\u00f6glich)": [[23, "wie-haben-sie-von-der-netidee-erfahren-mehrfachnennungen-moglich"]], "16. DATENSCHUTZ": [[23, "datenschutz"]], "Video Screenplay": [[24, "video-screenplay"]], "The Problem And Me": [[24, "the-problem-and-me"]], "Open Source Training Material": [[24, "open-source-training-material"]], "Walk-Through": [[24, "walk-through"]], "Use Case: Custom Training, Subtract Known": [[25, "use-case-custom-training-subtract-known"]], "Use Case: Calculate Minimum Training Duration": [[26, "use-case-calculate-minimum-training-duration"]], "Use Cases": [[27, "use-cases"]], "Trainer": [[27, "trainer"]], "Editor": [[27, "editor"]], "End User (Training Audience)": [[27, "end-user-training-audience"]], "Use Case: Use Training Material From Other Sites": [[28, "use-case-use-training-material-from-other-sites"]], "Use Case: Menu to Choose From": [[29, "use-case-menu-to-choose-from"]], "Use Case: Slide Show Material as Plain-Text Files": [[30, "use-case-slide-show-material-as-plain-text-files"]], "Sending A V4L Camera Device Output Over SSH": [[31, "sending-a-v4l-camera-device-output-over-ssh"]], "Capture Video To File": [[31, "capture-video-to-file"]], "Play Video From Remote System, Using SSH": [[31, "play-video-from-remote-system-using-ssh"]], "Emoji Codes (sphinxemoji)": [[32, "emoji-codes-sphinxemoji"]], "Setup": [[32, "setup"], [266, "setup"], [273, "setup"], [276, "setup"], [286, "setup"], [287, "setup"], [291, "setup"], [292, "setup"], [293, "setup"], [314, "setup"], [315, "setup"], [320, "setup"], [321, "setup"], [907, "setup"], [1032, "setup"], [1143, "setup"], [326, "setup"]], "Most Used Here In This Site": [[32, "most-used-here-in-this-site"]], "All Codes": [[32, "all-codes"]], "Recipes": [[33, "recipes"]], "isoamsa.txt: Added Mathematical Symbols: Arrows": [[34, "isoamsa-txt-added-mathematical-symbols-arrows"]], "isoamsr.txt: Added Mathematical Symbols: Relations": [[35, "isoamsr-txt-added-mathematical-symbols-relations"]], "isonum.txt: Added Mathematical Symbols: Binary Operators": [[36, "isonum-txt-added-mathematical-symbols-binary-operators"]], "Layout Test Page": [[37, "layout-test-page"]], "Admonitions": [[37, "admonitions"]], "Admonition": [[37, "admonition"]], "This is an .. admonition::": [[37, null]], "Tip": [[37, "tip"]], "Note": [[37, "note"]], "Hint": [[37, "hint"]], "Important": [[37, "important"]], "Attention": [[37, "attention"]], "Caution": [[37, "caution"]], "Error": [[37, "error"]], "Danger": [[37, "danger"]], "Sidebar": [[37, "sidebar"]], "Blech Sidebar Title Blah": [[37, null]], "Sidebar \u201cKursdaten\u201d": [[37, "sidebar-kursdaten"]], "Kursdaten": [[37, null], [1157, null], [1158, null], [1159, null], [1160, null], [1165, null], [1167, null], [1168, null], [1172, null], [1173, null], [1174, null], [1175, null], [1177, null], [1178, null], [1179, null]], "Local Content": [[37, "local-content"]], "Local Heading 1": [[37, "local-heading-1"], [37, "id3"]], "Local Heading 1.1": [[37, "local-heading-1-1"], [37, "id4"]], "Local Heading 1.2": [[37, "local-heading-1-2"], [37, "id5"]], "Local Heading 2": [[37, "local-heading-2"], [37, "id6"]], "Sidebar with Local Content": [[37, "sidebar-with-local-content"]], "Bleh Content Blah": [[37, null]], "To Do": [[37, "to-do"]], "mmlalias.txt: MathML aliases for entities from other sets": [[38, "mmlalias-txt-mathml-aliases-for-entities-from-other-sets"]], "Most used": [[38, "id1"]], "All": [[38, "id2"]], "reStructuredText Cheat Sheet": [[39, "restructuredtext-cheat-sheet"]], "Further Information": [[39, "further-information"], [139, "further-information"], [214, "further-information"], [215, "further-information"], [237, "further-information"], [333, "further-information"], [342, "further-information"], [729, "further-information"]], "Local Documents": [[39, "local-documents"]], "External Links": [[39, "external-links"]], "Section References": [[39, "section-references"]], "Section That We Refer To": [[39, "section-that-we-refer-to"]], "Another Section Contains a Link To The Referred Section Above": [[39, "another-section-contains-a-link-to-the-referred-section-above"]], "Footnotes": [[39, "footnotes"]], "Sphinxish": [[40, "sphinxish"]], "Jupyter Notebooks": [[40, "jupyter-notebooks"]], "Running Sphinx From Source": [[40, "running-sphinx-from-source"]], "Seminar on \u201cClean Code\u201d (2022-04-13)": [[41, "seminar-on-clean-code-2022-04-13"]], "Seminar Agenda and Timeline": [[41, "seminar-agenda-and-timeline"]], "Live Hacking Before (Formal) Unit Testing": [[42, "live-hacking-before-formal-unit-testing"]], "Initial Structure": [[42, "initial-structure"]], "Snippets": [[42, null], [42, null], [42, null], [42, null], [42, null], [42, null], [44, null], [44, null], [50, null], [50, null]], "User": [[42, "user"]], "UserDB": [[42, "userdb"]], "bin/userdb-write-binaryfile.cpp": [[42, "bin-userdb-write-binaryfile-cpp"]], "Extend UserDB To Write": [[42, "extend-userdb-to-write"]], "Extend UserDB To Read From File, And Iterate": [[42, "extend-userdb-to-read-from-file-and-iterate"]], "Bug: Use \u201cFaschingbauer\u201d As Last Name": [[42, "bug-use-faschingbauer-as-last-name"]], "Wrap Up: What Do We Have?": [[42, "wrap-up-what-do-we-have"]], "Clean Code: Messages From The Book": [[43, "clean-code-messages-from-the-book"]], "Survey": [[43, null], [449, null]], "Names": [[43, "names"]], "Comments": [[43, "comments"]], "Formatting": [[43, "formatting"], [322, "Formatting"]], "Objects and Data Structures": [[43, "objects-and-data-structures"]], "Error Handling": [[43, "error-handling"], [928, "error-handling"]], "Boundaries": [[43, "boundaries"]], "Unit Tests": [[43, "unit-tests"], [526, "unit-tests"]], "Classes": [[43, "classes"], [213, "Classes"], [298, "classes"]], "Live Hacking: Switch To googletest": [[44, "live-hacking-switch-to-googletest"]], "Git Submodule": [[44, "git-submodule"]], "Establish Tests: Demo": [[44, "establish-tests-demo"]], "Straightforward main() Conversion": [[44, "straightforward-main-conversion"]], "Fix Shortcomings": [[44, "fix-shortcomings"]], "Is Software A Craft? Software Is A Craft!": [[45, "is-software-a-craft-software-is-a-craft"]], "09:00-09:15 Introductory Words": [[45, "introductory-words"]], "09:15-10:00 Software Engineering: A Discipline? (What Have We Established?)": [[45, "software-engineering-a-discipline-what-have-we-established"]], "10:00-10:15 Coffee Break": [[45, "coffee-break"]], "10:15-11:00 Establishing \u201cThe Project\u201d (Live Hacking, Slides)": [[45, "establishing-the-project-live-hacking-slides"]], "11:00-12:00 Enter Unit Testing Frameworks": [[45, "enter-unit-testing-frameworks"]], "12:00-13:00 Lunch Break": [[45, "lunch-break"]], "13:00-14:00 Cornerstones From The \u201cClean Code\u201d Book": [[45, "cornerstones-from-the-clean-code-book"]], "14:00-14:45 Keeping Code Clean In The Small": [[45, "keeping-code-clean-in-the-small"]], "14:45-15:00 Coffee Break": [[45, "id1"]], "15:00-23:59 \u201cExtreme Programming\u201d Session": [[45, "extreme-programming-session"]], "UserDB::find() Crashes If User Not Found": [[46, "userdb-find-crashes-if-user-not-found"]], "State": [[46, "state"]], "Bugs": [[47, "bugs"], [53, "bugs"]], "Existing Files Are Overwritten": [[48, "existing-files-are-overwritten"]], "UserDB::read(): What If Done Twice?": [[49, "userdb-read-what-if-done-twice"]], "UserDB: Alternative Output Format - CSV": [[50, "userdb-alternative-output-format-csv"]], "Write CSV: Test": [[50, "write-csv-test"]], "Write CSV: Frontend Program": [[50, "write-csv-frontend-program"], [50, "id1"]], "Read CSV: Test": [[50, "read-csv-test"]], "Features": [[51, "features"]], "Search By Other Indexes": [[52, "search-by-other-indexes"]], "Backlog: What Needs To Change, Or We Will All Die": [[53, "backlog-what-needs-to-change-or-we-will-all-die"]], "Refactoring After Featuritis": [[53, "refactoring-after-featuritis"]], "BackingStore Has Too Many Responsibilities \u27f6 Interface": [[54, "backingstore-has-too-many-responsibilities-longrightarrow-interface"]], "UserDB Has Too Many Responsibilities \u27f6 BackingStore": [[55, "userdb-has-too-many-responsibilities-longrightarrow-backingstore"]], "BackingStore": [[55, "backingstore"]], "Refactoring": [[56, "refactoring"], [527, "refactoring"], [818, "refactoring"]], "Load From BackingStore in Constructor": [[57, "load-from-backingstore-in-constructor"]], "UserDB::{read,write}(): bool, Really?": [[58, "userdb-read-write-bool-really"]], "GLT 2023 Submission: Pointless Blinking With Python, asyncio, and libgpiod (and a Raspberry Pi of Course)": [[59, "glt-2023-submission-pointless-blinking-with-python-asyncio-and-libgpiod-and-a-raspberry-pi-of-course"]], "Biography": [[59, "biography"], [60, "biography"], [63, "biography"]], "Abstract": [[59, "abstract"], [60, "abstract"], [63, "abstract"]], "Description": [[59, "description"], [60, "description"], [63, "description"], [480, "description"], [632, "description"], [648, "description"], [651, "description"], [653, "description"], [654, "description"], [655, "description"], [656, "description"], [657, "description"], [658, "description"], [659, "description"], [660, "description"], [662, "description"], [663, "description"]], "GLT 2024 Submission: Pointless Blinking: Evolution": [[60, "glt-2024-submission-pointless-blinking-evolution"]], "Pointless Blinking With Python, asyncio, and libgpiod (and a Raspberry Pi of Course)": [[61, "pointless-blinking-with-python-asyncio-and-libgpiod-and-a-raspberry-pi-of-course"]], "Installation Notes": [[62, "installation-notes"]], "libgpiod": [[62, "libgpiod"]], "Fedora: Prepare Tarballs": [[62, "fedora-prepare-tarballs"]], "On The Pi: Build And Install": [[62, "on-the-pi-build-and-install"]], "Submission: Pointless Blinking With Python, asyncio, and libgpiod (and a Raspberry Pi of Course)": [[63, "submission-pointless-blinking-with-python-asyncio-and-libgpiod-and-a-raspberry-pi-of-course"]], "Hochk\u00f6nig": [[65, "hochkonig"]], "K\u00f6nigsjodler (Klettersteig)": [[65, "konigsjodler-klettersteig"]], "Tour: Werfen - Ostpreussenh\u00fctte - Matrashaus - Werfen": [[65, "tour-werfen-ostpreussenhutte-matrashaus-werfen"]], "Blog": [[66, "blog"], [151, "blog"]], "Articles": [[66, "articles"]], "In the Works": [[66, "in-the-works"]], "Not Yet in the Works": [[66, "not-yet-in-the-works"]], "Revisit Existing Posts": [[66, "revisit-existing-posts"]], "pending_xref": [[67, "pending-xref"]], "C++": [[68, "c"], [111, "c"], [112, "c"], [151, "c"], [664, "c"]], "C++: Building with CMake": [[69, "c-building-with-cmake"]], "C++: Interfaces": [[70, "c-interfaces"]], "C++: OO Basics": [[71, "c-oo-basics"]], "C++: Unit Testing": [[72, "c-unit-testing"]], "Graph": [[73, "graph"], [650, "graph"], [811, "graph"], [1066, "graph"], [1067, "graph"], [1071, "graph"], [1080, "graph"], [1094, "graph"], [1101, "graph"]], "Embedded Computing 1": [[74, "embedded-computing-1"], [79, "embedded-computing-1"]], "Current Curriculum": [[74, "current-curriculum"], [75, "current-curriculum"]], "Topics": [[74, "topics"], [75, "topics"], [99, "topics"], [100, "topics"], [102, "topics"], [103, "topics"], [104, "topics"], [105, "topics"], [150, "topics"], [186, "topics"], [186, "id2"], [214, "topics"], [251, "topics"], [254, null], [346, "topics"], [350, "topics"], [447, "topics"], [575, "topics"], [612, "topics"], [618, "topics"], [622, "topics"], [630, "topics"], [635, "topics"], [640, "topics"], [664, "topics"], [665, "topics"], [669, "topics"], [676, "topics"], [683, "topics"], [694, "topics"], [707, "topics"], [708, "topics"], [718, "topics"], [723, "topics"], [756, "topics"], [760, "topics"], [762, "topics"], [764, "topics"], [922, "topics"], [940, null], [942, null], [942, null], [988, "topics"], [994, "topics"], [995, "topics"], [1015, null], [1023, "topics"], [1118, "topics"], [1128, "topics"], [1140, "topics"], [380, "topics"], [395, "topics"], [404, "topics"], [411, "topics"], [417, "topics"], [421, "topics"], [424, "topics"], [428, "topics"], [437, "topics"], [441, "topics"], [446, "topics"], [567, "topics"], [590, "topics"], [593, "topics"], [596, "topics"], [637, "topics"], [646, "topics"], [732, "topics"], [740, "topics"], [744, "topics"], [961, "topics"], [967, "topics"], [1146, "topics"]], "Dependency Graph": [[74, "dependency-graph"], [75, "dependency-graph"]], "Embedded Computing 2": [[75, "embedded-computing-2"], [79, "embedded-computing-2"]], "EX: Race Conditions": [[76, "ex-race-conditions"]], "EX: Avoiding Race Condition": [[77, "ex-avoiding-race-condition"]], "Goals": [[77, "goals"], [83, "goals"], [84, "goals"], [85, "goals"], [86, "goals"], [88, "goals"], [89, "goals"], [90, "goals"], [92, "goals"]], "Outcome": [[77, "outcome"], [83, "outcome"], [84, "outcome"], [85, "outcome"], [86, "outcome"], [193, "outcome"]], "Git Introduction": [[78, "git-introduction"]], "Embedded Computing 2019": [[79, "embedded-computing-2019"]], "Overview": [[79, "overview"], [677, "overview"], [725, "overview"], [739, "overview"], [741, "overview"], [747, "overview"], [749, "overview"], [751, "overview"], [752, "overview"], [753, "overview"], [754, "overview"], [761, "overview"], [835, "overview"], [846, "overview"], [903, "overview"], [914, "overview"], [915, "overview"], [916, "overview"], [916, "id1"], [917, "overview"], [952, "overview"]], "Knowledge Transferred": [[79, "knowledge-transferred"]], "Course Setup": [[79, "course-setup"]], "Introduction to Linux and Unix": [[81, "introduction-to-linux-and-unix"]], "Linux Hardware Device Management": [[82, "linux-hardware-device-management"]], "EX: Averaging Sensor": [[83, "ex-averaging-sensor"]], "EX: Averaging Sensor (parallel)": [[84, "ex-averaging-sensor-parallel"]], "EX: LED Temperature Display": [[85, "ex-led-temperature-display"]], "Hardware": [[85, "hardware"], [86, "hardware"]], "EX: Temperature Sensors": [[86, "ex-temperature-sensors"], [93, "ex-temperature-sensors"]], "GPIO": [[87, "gpio"]], "sysfs Interface": [[87, "sysfs-interface"]], "gpiod Interface": [[87, "gpiod-interface"]], "Multithreading": [[88, "multithreading"], [172, "multithreading"], [232, "multithreading"], [258, "multithreading"], [259, "multithreading"], [261, "multithreading"], [304, "multithreading"], [305, "multithreading"], [308, "multithreading"], [318, "multithreading"], [350, "multithreading"], [357, "multithreading"], [981, "multithreading"], [1017, "multithreading"], [740, "multithreading"]], "Avoiding Race Conditions: Semaphore/Mutex": [[89, "avoiding-race-conditions-semaphore-mutex"]], "Communication: Waiting for Something": [[90, "communication-waiting-for-something"]], "Python Basics": [[91, "python-basics"]], "EX: Averaging Sensor, Display": [[92, "ex-averaging-sensor-display"]], "Simple Web Programming": [[94, "simple-web-programming"]], "Sensors Web Pages": [[95, "sensors-web-pages"]], "Embedded Computing 2020": [[97, "embedded-computing-2020"]], "SS2022": [[98, "ss2022"]], "Block 1: Linux, and Working With Remote/Embedded Devices": [[98, "block-1-linux-and-working-with-remote-embedded-devices"], [116, "block-1-linux-and-working-with-remote-embedded-devices"]], "Block 2: C on Linux: Local and Cross Development": [[98, "block-2-c-on-linux-local-and-cross-development"], [116, "block-2-c-on-linux-local-and-cross-development"]], "Block 3: C++": [[98, "block-3-c"], [116, "block-3-c"]], "2022-03-08": [[99, "id1"]], "Homework": [[99, "homework"], [100, "homework"], [102, "homework"], [105, "homework"]], "2022-03-10": [[100, "id1"]], "2022-03-10 (Homework until 2022-03-21)": [[101, "homework-until-2022-03-21"]], "From Exercises: Create/Copy/Move/Remove": [[101, "from-trainings-material-soup-linux-basics-shell-exercises-cp-mv-mkdir-rm-group"]], "From  Exercises: The ls Command": [[101, "from-trainings-material-soup-linux-basics-shell-exercises-ls-group"]], "2022-03-21": [[102, "id1"]], "2022-03-22, 2022-03-24 (KU)": [[103, "ku"]], "2022-03-28": [[104, "id1"]], "2022-04-01": [[105, "id1"]], "SS2022: Logs": [[106, "ss2022-logs"]], "WS2022": [[107, "ws2022"]], "Plan: Evolution": [[107, "plan-evolution"]], "FH Joanneum (Embedded Computing): WS2022/2023 (Questions About Code)": [[108, "fh-joanneum-embedded-computing-ws2022-2023-questions-about-code"]], "Question 1: C++ Inheritance": [[108, "question-1-c-inheritance"]], "Question 2: C++ Inheritance": [[108, "question-2-c-inheritance"]], "Question 3: Memory Leak": [[108, "question-3-memory-leak"]], "Question 4: std::vector": [[108, "question-4-std-vector"]], "FH Joanneum (Embedded Computing): WS2022/2023 (Yes/No Questions)": [[109, "fh-joanneum-embedded-computing-ws2022-2023-yes-no-questions"]], "Cross Development": [[109, "cross-development"], [270, "cross-development"], [987, "cross-development"], [988, "cross-development"]], "C++, OO": [[109, "c-oo"]], "Lab Exam 2023-01-17": [[110, "lab-exam-2023-01-17"]], "Project Setup": [[110, "project-setup"], [525, "project-setup"], [1095, "project-setup"]], "Exercises": [[110, "exercises"], [169, "exercises"], [174, "exercises"], [206, "exercises"], [216, "exercises"], [216, "id1"], [216, "id3"], [274, "Exercises"], [279, "exercises"], [298, "exercises"], [298, "id1"], [301, "exercises"], [305, "exercises"], [478, "exercises"], [480, "exercises"], [487, "exercises"], [515, "exercises"], [532, "exercises"], [534, "exercises"], [575, "exercises"], [640, "exercises"], [664, "exercises"], [760, "exercises"], [994, "exercises"], [1023, "exercises"], [1067, "exercises"], [590, "exercises"]], "Exam Submission": [[110, "exam-submission"]], "SS2023: Exam 2023-06-30 (Handout)": [[111, "ss2023-exam-2023-06-30-handout"]], "UNIX/Linux Concepts": [[111, "unix-linux-concepts"], [112, "unix-linux-concepts"]], "Toolchain": [[111, "toolchain"], [112, "toolchain"]], "SS2023: Exam 2023-06-30 (Solved)": [[112, "ss2023-exam-2023-06-30-solved"]], "Working with Git In Our FH-ECE21 Project": [[114, "working-with-git-in-our-fh-ece21-project"]], "Forks And Pull Requests": [[114, "forks-and-pull-requests"]], "Multiple Pull Requests: Pulling Upstream Changes (\u201cSyncing\u201d A Fork)": [[114, "multiple-pull-requests-pulling-upstream-changes-syncing-a-fork"]], "Creating A Remote for Upstream (Done Only Once)": [[114, "creating-a-remote-for-upstream-done-only-once"]], "Updating The Fork (\u201cSyncing\u201d It From Its Upstream)": [[114, "updating-the-fork-syncing-it-from-its-upstream"]], "Fetch upstream Into Your Clone": [[114, "fetch-upstream-into-your-clone"]], "Merge upstream/main Into Local main": [[114, "merge-upstream-main-into-local-main"]], "Push Into Fork On Github": [[114, "push-into-fork-on-github"]], "Embedded Computing 2021": [[115, "embedded-computing-2021"]], "SS2023": [[116, "ss2023"]], "Finish: Written Exam": [[116, "finish-written-exam"]], "(DONE) Boiling Pot (The Beginning)": [[117, "done-boiling-pot-the-beginning"]], "Standup Records": [[117, "standup-records"], [118, "standup-records"], [119, "standup-records"], [120, "standup-records"], [121, "standup-records"], [125, "standup-records"], [129, "standup-records"], [133, "standup-records"]], "2023-11-20": [[117, "id1"], [121, "id1"], [129, "id1"], [133, "id1"]], "2023-12-14": [[117, "id2"], [118, "id1"], [121, "id2"], [129, "id2"]], "Requirements": [[117, "requirements"], [118, "requirements"], [119, "requirements"], [120, "requirements"], [121, "requirements"], [122, "requirements"], [123, "requirements"], [124, "requirements"], [125, "requirements"], [127, "requirements"], [129, "requirements"], [133, "requirements"], [467, "requirements"], [491, "requirements"], [522, "requirements"]], "Implementation": [[117, "implementation"], [121, "implementation"], [122, "implementation"], [124, "implementation"], [127, "implementation"], [129, "implementation"], [133, "implementation"], [526, "implementation"]], "Testing": [[117, "testing"], [121, "testing"], [122, "testing"], [124, "testing"], [127, "testing"], [129, "testing"], [133, "testing"], [272, "testing"]], "Future (Not Part Of This Development Cycle)": [[117, "future-not-part-of-this-development-cycle"], [121, "future-not-part-of-this-development-cycle"], [122, "future-not-part-of-this-development-cycle"], [124, "future-not-part-of-this-development-cycle"], [127, "future-not-part-of-this-development-cycle"], [129, "future-not-part-of-this-development-cycle"], [133, "future-not-part-of-this-development-cycle"]], "Dependencies": [[117, "dependencies"], [118, "dependencies"], [119, "dependencies"], [120, "dependencies"], [121, "dependencies"], [122, "dependencies"], [123, "dependencies"], [124, "dependencies"], [125, "dependencies"], [126, "dependencies"], [127, "dependencies"], [128, "dependencies"], [129, "dependencies"], [133, "dependencies"], [328, "dependencies"], [329, "dependencies"], [330, "dependencies"], [331, "dependencies"], [333, "dependencies"], [456, "dependencies"], [473, "dependencies"], [487, "dependencies"], [515, "dependencies"], [532, "dependencies"], [534, "dependencies"], [545, "dependencies"], [612, "dependencies"], [618, "dependencies"], [622, "dependencies"], [630, "dependencies"], [632, "dependencies"], [635, "dependencies"], [640, "dependencies"], [648, "dependencies"], [649, "dependencies"], [651, "dependencies"], [653, "dependencies"], [654, "dependencies"], [655, "dependencies"], [656, "dependencies"], [657, "dependencies"], [658, "dependencies"], [659, "dependencies"], [660, "dependencies"], [661, "dependencies"], [662, "dependencies"], [663, "dependencies"], [669, "dependencies"], [676, "dependencies"], [683, "dependencies"], [694, "dependencies"], [718, "dependencies"], [723, "dependencies"], [748, "dependencies"], [837, "dependencies"], [838, "dependencies"], [839, "dependencies"], [843, "dependencies"], [857, "dependencies"], [858, "dependencies"], [859, "dependencies"], [878, "dependencies"], [883, "dependencies"], [884, "dependencies"], [887, "dependencies"], [920, "dependencies"], [922, "dependencies"], [929, "dependencies"], [935, "dependencies"], [937, "dependencies"], [945, "dependencies"], [947, "dependencies"], [949, "dependencies"], [964, "dependencies"], [988, "dependencies"], [990, "dependencies"], [991, "dependencies"], [994, "dependencies"], [995, "dependencies"], [1016, "dependencies"], [1018, "dependencies"], [1064, "dependencies"], [1065, "dependencies"], [1068, "dependencies"], [1069, "dependencies"], [1070, "dependencies"], [1072, "dependencies"], [1073, "dependencies"], [1074, "dependencies"], [1075, "dependencies"], [1076, "dependencies"], [1077, "dependencies"], [1081, "dependencies"], [1082, "dependencies"], [1083, "dependencies"], [1084, "dependencies"], [1085, "dependencies"], [1087, "dependencies"], [1088, "dependencies"], [1089, "dependencies"], [1090, "dependencies"], [1091, "dependencies"], [1092, "dependencies"], [1093, "dependencies"], [1095, "dependencies"], [1096, "dependencies"], [1097, "dependencies"], [1098, "dependencies"], [1099, "dependencies"], [1100, "dependencies"], [1102, "dependencies"], [1103, "dependencies"], [1104, "dependencies"], [1105, "dependencies"], [1118, "dependencies"], [1121, "dependencies"], [1124, "dependencies"], [1128, "dependencies"], [1140, "dependencies"], [961, "dependencies"], [1146, "dependencies"]], "Boiling Pot: Basic Integration": [[118, "boiling-pot-basic-integration"]], "Boiling Pot: Display, And Status Reporting": [[119, "boiling-pot-display-and-status-reporting"]], "Boiling Pot: Full Integration (Display And IoT)": [[120, "boiling-pot-full-integration-display-and-iot"]], "(DONE) Data Logger": [[121, "done-data-logger"]], "Data Logger: CSV Sink": [[122, "data-logger-csv-sink"]], "Column name configuration": [[122, "column-name-configuration"]], "output()": [[122, "output"]], "Data Logger: Integration": [[123, "data-logger-integration"]], "Data Logger: MQTT Sink": [[124, "data-logger-mqtt-sink"]], "MQTT Implementation: mosquitto": [[124, "mqtt-implementation-mosquitto"]], "Installation": [[124, "installation"], [362, "installation"], [927, "installation"], [1062, "installation"], [1124, "installation"], [1148, "installation"]], "Wrapper": [[124, "wrapper"]], "Display Interface/Infrastructure": [[125, "display-interface-infrastructure"]], "New Interface PercentageDisplay": [[125, "new-interface-percentagedisplay"]], "Existing Implementations": [[125, "existing-implementations"]], "Composite Display": [[125, "composite-display"]], "Testing: Breadboard Acrobatics, Demo Program": [[125, "testing-breadboard-acrobatics-demo-program"]], "WS2023/24: Group Project - Tasks": [[126, "ws2023-24-group-project-tasks"]], "Tasks": [[126, "tasks"], [968, "tasks"], [134, "tasks"]], "Datalogger": [[126, "datalogger"], [134, "datalogger"]], "Boiling Pot": [[126, "boiling-pot"], [134, "boiling-pot"]], "Peripherals": [[126, "peripherals"], [134, "peripherals"]], "Client": [[126, "client"], [1124, "client"]], "libgpiod Switch": [[127, "libgpiod-switch"]], "Python MQTT Subscriber": [[128, "python-mqtt-subscriber"]], "Notes": [[128, "notes"], [467, "notes"]], "Temperature Display: LED Via A PWM Controller": [[129, "temperature-display-led-via-a-pwm-controller"]], "(DONE) Sensor Interface": [[130, "done-sensor-interface"]], "(DONE) Onewire Sensor": [[131, "done-onewire-sensor"]], "(DONE) Switch Interface": [[132, "done-switch-interface"]], "SysFS GPIO Switch": [[133, "sysfs-gpio-switch"], [134, "sysfs-gpio-switch"]], "Embedded Computing (FH Joanneum Graz)": [[135, "embedded-computing-fh-joanneum-graz"]], "Git Notes": [[136, "git-notes"]], "Bring Local Branch Upstream": [[136, "bring-local-branch-upstream"]], "Create Remote Tracking Branch": [[136, "create-remote-tracking-branch"]], "Create, Submit, Apply Patches": [[136, "create-submit-apply-patches"]], "Packaging this Site on PyPI": [[138, "packaging-this-site-on-pypi"]], "Audio Chip Bringup": [[139, "audio-chip-bringup"]], "Goal": [[139, "goal"], [141, "goal"], [142, "goal"], [144, "goal"], [279, "goal"], [281, "goal"], [1161, "goal"], [1164, "goal"]], "Findings": [[139, "findings"]], "Get Debian 10 Kernel Config": [[140, "get-debian-10-kernel-config"]], "Run Debian within Qemu": [[140, "run-debian-within-qemu"]], "Extract Kernel Config from /boot": [[140, "extract-kernel-config-from-boot"]], "Finish: Debian Kernel Package etc.": [[141, "finish-debian-kernel-package-etc"]], "Yocto Kernel Bringup on Customer Hardware": [[142, "yocto-kernel-bringup-on-customer-hardware"]], "Open Questions: Everything Works Like Before?": [[142, "open-questions-everything-works-like-before"]], "I2S Audio for a Kontron SMARC Module": [[143, "i2s-audio-for-a-kontron-smarc-module"]], "Dirty Upgrade Path": [[144, "dirty-upgrade-path"]], "Steps": [[144, "steps"]], "Wait for Customer Hardware": [[145, "wait-for-customer-hardware"]], "Extract Kernel from Intel Yocto BSP": [[146, "extract-kernel-from-intel-yocto-bsp"]], "Python Training Improvements": [[147, "python-training-improvements"]], "Beginner Course": [[147, "beginner-course"]], "Exercise Structure": [[147, "exercise-structure"]], "Split Exercises": [[147, "split-exercises"]], "Creating Screencasts": [[148, "creating-screencasts"]], "OpenShot": [[148, "openshot"]], "SEO": [[149, "seo"]], "Sitemap": [[149, "sitemap"]], "Meta Information": [[149, "meta-information"]], "Courses": [[149, "courses"]], "Stacks (Hanging)": [[150, "stacks-hanging"]], "DBus (New Topic)": [[150, "dbus-new-topic"]], "Finish Meta/SEO and Stuff": [[150, "finish-meta-seo-and-stuff"]], "Structure": [[151, "structure"], [510, "structure"], [134, "structure"]], "Miscellaneous To Do": [[151, "miscellaneous-to-do"]], "Extensions": [[151, "extensions"]], "reST Todos": [[151, "rest-todos"]], "Styling": [[151, "styling"]], "Convert to RST/S5": [[151, "convert-to-rst-s5"]], "Examples": [[151, "examples"], [471, "examples"], [671, "examples"], [719, "examples"], [834, "examples"], [936, null]], "Convert Existing Content": [[151, "convert-existing-content"]], "Add Missing": [[151, "add-missing"]], "References, Past Trainings": [[151, "references-past-trainings"]], "About": [[151, "about"]], "Learning The Web": [[152, "learning-the-web"]], "Beagleboard: How to Repair NAND (also known as 40W)": [[153, "beagleboard-how-to-repair-nand-also-known-as-40w"]], "Basics": [[153, "basics"], [224, "basics"], [251, "basics"], [266, "basics"], [286, "basics"], [287, "basics"], [287, "id1"], [292, "basics"], [293, "basics"], [293, "id1"], [314, "basics"], [320, "basics"], [337, "Basics"], [405, "basics"], [591, "basics"], [603, "basics"], [623, "basics"], [721, "basics"], [836, "basics"], [952, "basics"], [1060, "basics"], [326, "basics"]], "Getting X-Loader and U-Boot": [[153, "getting-x-loader-and-u-boot"]], "Creating a Bootable MMC/SD card": [[153, "creating-a-bootable-mmc-sd-card"]], "Repairing the NAND": [[153, "repairing-the-nand"]], "Writing X-Loader to NAND": [[153, "writing-x-loader-to-nand"]], "Writing U-Boot to NAND": [[153, "writing-u-boot-to-nand"]], "Porting to Linux (There\u2019s Always A Better Way)": [[154, "porting-to-linux-there-s-always-a-better-way"]], "Processes are Threads": [[154, "processes-are-threads"]], "Signals Aren\u2019t Messages": [[154, "signals-aren-t-messages"]], "References": [[154, null], [154, null], [154, null], [226, "References"], [229, "References"], [582, "references"]], "Message Queues aren\u2019t Message Queues": [[154, "message-queues-aren-t-message-queues"]], "Semaphores and Mutexes": [[154, "semaphores-and-mutexes"]], "Timers": [[154, "timers"]], "Polling": [[154, "polling"]], "Event Dispatching": [[154, "event-dispatching"]], "Interrupts": [[154, "interrupts"], [793, "interrupts"]], "Realtime": [[154, "realtime"], [970, "realtime"], [1156, "realtime"]], "Saving Solid State Disk Life (Gentoo)": [[155, "saving-solid-state-disk-life-gentoo"]], "Rant": [[155, "rant"], [175, "Rant"], [986, null]], "No Swap": [[155, "no-swap"]], "tmpfs instances here and there": [[155, "tmpfs-instances-here-and-there"]], "Syslog, /var/log/messages": [[155, "syslog-var-log-messages"]], "Mountpoint for messages": [[155, "mountpoint-for-messages"]], "Logrotate": [[155, "logrotate"]], "Kernel I/O Scheduler": [[155, "kernel-i-o-scheduler"]], "Use RAM for the Kernel Build": [[155, "use-ram-for-the-kernel-build"]], "Things that are left": [[155, "things-that-are-left"]], "\u201cWhy ps Sucks\u201d or \u201cCounting Memory Consumption\u201d": [[156, "why-ps-sucks-or-counting-memory-consumption"]], "Process Stack Management": [[156, "process-stack-management"]], "Conclusion": [[156, "conclusion"], [156, "id1"], [907, "conclusion"], [915, "conclusion"]], "Thread (pthread) Stack Management": [[156, "thread-pthread-stack-management"]], "Experiment #1: 100 default threads, eating no stack": [[156, "experiment-1-100-default-threads-eating-no-stack"]], "Experiment #2: 100 default threads, eating up stack": [[156, "experiment-2-100-default-threads-eating-up-stack"]], "Experiment #3: 100 threads with limited stack": [[156, "experiment-3-100-threads-with-limited-stack"]], "Experiment #4: more threads than my system could take (eat no stack)": [[156, "experiment-4-more-threads-than-my-system-could-take-eat-no-stack"]], "Experiment #5: more threads than my system could take (eat stack)": [[156, "experiment-5-more-threads-than-my-system-could-take-eat-stack"]], "How does this work?": [[156, "how-does-this-work"]], "Realtime is different": [[156, "realtime-is-different"]], "Patching and Building the Fedora Kernel": [[157, "patching-and-building-the-fedora-kernel"]], "Why?": [[157, "why"], [923, "why"], [1005, "why"]], "Find Kernel Source (Git), Fix It, and Create Patch": [[157, "find-kernel-source-git-fix-it-and-create-patch"]], "Link": [[157, null], [157, null]], "Prepare the RPM Build": [[157, "prepare-the-rpm-build"]], "Install Prerequisites": [[157, "install-prerequisites"]], "Setup rpmbuild Directory": [[157, "setup-rpmbuild-directory"]], "Download and Install Source RPM For Crashing Kernel": [[157, "download-and-install-source-rpm-for-crashing-kernel"]], "Apply the Patch": [[157, "apply-the-patch"]], "Build the Kernel RPMs": [[157, "build-the-kernel-rpms"]], "Install Kernel": [[157, "install-kernel"]], "Adding a Custom Domain to a Github Pages Project Site": [[158, "adding-a-custom-domain-to-a-github-pages-project-site"]], "Configure a Subdomain, www.faschingbauer.me": [[158, "configure-a-subdomain-www-faschingbauer-me"]], "Configure an Apex Domain, faschingbauer.me": [[158, "configure-an-apex-domain-faschingbauer-me"]], "Using Microsoft Teams on Linux": [[159, "using-microsoft-teams-on-linux"]], "Screen Sharing: X11 Revival": [[159, "screen-sharing-x11-revival"]], "RPM Package (Meh!)": [[159, "rpm-package-meh"]], "Updated on 2020-04-09": [[159, null]], "Annoyance #1: Keeps Running in Background": [[159, "annoyance-1-keeps-running-in-background"]], "Annoyance #2: (Re)Registers Itself For Autostart": [[159, "annoyance-2-re-registers-itself-for-autostart"]], "Run In Browser (My Recommendation)": [[159, "run-in-browser-my-recommendation"]], "Deploying Sphinx Generated Documentation to Github Pages": [[160, "deploying-sphinx-generated-documentation-to-github-pages"]], "Create \u201cSite Publication Repo\u201d": [[160, "create-site-publication-repo"]], "Configure Github Pages for jfasch-home-pages": [[160, "configure-github-pages-for-jfasch-home-pages"]], "Time for Deployment": [[160, "time-for-deployment"]], "Using BigBlueButton for Online Training": [[161, "using-bigbluebutton-for-online-training"]], "In this Article": [[161, null], [162, null], [164, null]], "TL;DR": [[161, "tl-dr"]], "Background Information": [[161, "background-information"]], "Hosting Setup": [[161, "hosting-setup"]], "BigBlueButton Installation": [[161, "bigbluebutton-installation"]], "Functionality Check": [[161, "functionality-check"]], "What Else?": [[161, "what-else"], [910, "what-else"], [923, "what-else"]], "Traunstein via Zierlersteig": [[162, "traunstein-via-zierlersteig"]], "Kaltenbachwildnis": [[162, "kaltenbachwildnis"]], "Anstieg auf den Zierlerberg": [[162, "anstieg-auf-den-zierlerberg"]], "Die Rinne": [[162, "die-rinne"]], "Abstieg": [[162, "abstieg"]], "Grintovec (via Plan\u0161arsko Jezero, \u010ce\u0161ka Ko\u010da)": [[163, "grintovec-via-plansarsko-jezero-ceska-koca"]], "Anreise": [[163, "anreise"]], "\u010ce\u0161ka Ko\u010da": [[163, "ceska-koca"]], "Hinauf": [[163, "hinauf"]], "Runter": [[163, "runter"]], "Zusammenfassung": [[163, "zusammenfassung"]], "How to Brick a \u20ac1399 Dell XPS 13": [[164, "how-to-brick-a-1399-dell-xps-13"]], "What Happened?": [[164, "what-happened"]], "VirtualBox, Fedora, and Secure Boot": [[164, "virtualbox-fedora-and-secure-boot"]], "Enrolling Machine Owner Key (MOK)": [[164, "enrolling-machine-owner-key-mok"]], "Generate Key Pair": [[164, "generate-key-pair"]], "Stage Key for Enrollment": [[164, "stage-key-for-enrollment"]], "Reboot, Brick": [[164, "reboot-brick"]], "Diagnostics": [[164, "diagnostics"]], "Building A Cross Toolchain For The Raspberry Pi, Using crosstool-ng": [[165, "building-a-cross-toolchain-for-the-raspberry-pi-using-crosstool-ng"], [997, "building-a-cross-toolchain-for-the-raspberry-pi-using-crosstool-ng"]], "Why This Article? Why Not Use A Prebuilt Toolchain?": [[165, "why-this-article-why-not-use-a-prebuilt-toolchain"]], "Installing crosstool-ng": [[165, "installing-crosstool-ng"]], "Prerequisites": [[165, "prerequisites"], [1063, "prerequisites"]], "Installing From Cloned Git Repository": [[165, "installing-from-cloned-git-repository"]], "Installing From Release Tarball": [[165, "installing-from-release-tarball"]], "PATH, And Basic Test": [[165, "path-and-basic-test"]], "Configure Toolchain Build": [[165, "configure-toolchain-build"]], "Base Configuration For The Raspberry": [[165, "base-configuration-for-the-raspberry"]], "Important: glibc Version": [[165, "important-glibc-version"]], "The Error": [[165, "the-error"], [165, "id4"]], "The Fix": [[165, "the-fix"], [165, "id5"]], "Important: GCC Version": [[165, "important-gcc-version"]], "Toolchain Build/Install": [[165, "toolchain-build-install"]], "Test": [[165, "test"], [790, "test"]], "Simplest: C, <stdio.h>": [[165, "simplest-c-stdio-h"]], "C++, <iostream>": [[165, "c-iostream"]], "C++, <thread>": [[165, "c-thread"]], "Packaging/Distributing The Toolchain": [[165, "packaging-distributing-the-toolchain"]], "Afterword": [[165, "afterword"]], "Posts": [[166, "posts"]], "Linux und Open Source": [[167, "linux-und-open-source"]], "Schulung": [[167, "schulung"]], "Entwicklung": [[167, "entwicklung"]], "Beratung": [[167, "beratung"]], "Richtlinien zur Ver\u00f6ffentlichung von Kursmaterial": [[168, "richtlinien-zur-veroffentlichung-von-kursmaterial"]], "Installing Git": [[169, "installing-git"]], "Windows": [[169, "windows"]], "Workflow": [[169, "workflow"]], "Cloning the Repository": [[169, "cloning-the-repository"]], "Exercise Time": [[169, "exercise-time"]], "Conflicts": [[169, "conflicts"]], "Trainer\u2019s Notes": [[169, "trainer-s-notes"]], "Courses: Overview": [[170, "courses-overview"]], "Online Trainings": [[170, null]], "Individual Trainings": [[170, null]], "Everything About Linux": [[170, "everything-about-linux"]], "Programming Languages": [[170, "programming-languages"]], "Miscellaneous but Related": [[170, "miscellaneous-but-related"]], "Qualivision, Z\u00fcrich, 1.10.2013": [[171, "qualivision-zurich-1-10-2013"]], "Fragen und Antworten": [[171, "fragen-und-antworten"]], "Kursnotizen: Linux Embedded 2015-11-30": [[172, "kursnotizen-linux-embedded-2015-11-30"]], "GPIOs in Userspace": [[172, "gpios-in-userspace"]], "CAN Bus": [[172, "can-bus"], [193, "can-bus"]], "Driver Beispiele": [[172, "driver-beispiele"]], "Heizungssteuerung": [[172, "heizungssteuerung"]], "Live Hacking": [[173, "Live-Hacking"], [607, "live-hacking"], [608, "live-hacking"], [610, "live-hacking"], [611, "live-hacking"], [614, "live-hacking"], [615, "live-hacking"], [616, "live-hacking"], [628, "live-hacking"]], "Strings k\u00f6nnen viel: split()": [[173, "Strings-k\u00f6nnen-viel:-split()"]], "Mutability, Immutability: kann man nicht oft genug wiederholen": [[173, "Mutability,-Immutability:-kann-man-nicht-oft-genug-wiederholen"]], "Dictionaries": [[173, "Dictionaries"], [202, "Dictionaries"], [274, "Dictionaries"], [288, "Dictionaries"], [337, "Dictionaries"], [1056, "dictionaries"]], "\u201cHartes\u201d Indizieren \u2026": [[173, "%22Hartes%22-Indizieren-..."]], "\u201cWeiches\u201d Nettfragen \u2026": [[173, "%22Weiches%22-Nettfragen-..."]], "Shortcuts": [[173, "Shortcuts"]], "Objektorientierte Programmierung": [[173, "Objektorientierte-Programmierung"]], "Inheritance": [[173, "Inheritance"], [213, "Inheritance"], [1024, "inheritance"]], "Date and Time and Time Deltas - datetime": [[173, "Date-and-Time-and-Time-Deltas---datetime"]], "Bissl potschert zum Schreiben is scho \u2026 (andere Formen von import)": [[173, "Bissl-potschert-zum-Schreiben-is-scho-...-(andere-Formen-von-import)"]], "String Representations: __str__()": [[173, "String-Representations:-__str__()"]], "subprocess": [[173, "subprocess"], [252, "subprocess"]], "enumerate(), zip()": [[173, "enumerate(),-zip()"]], "List Comprehension": [[173, "List-Comprehension"], [197, "List-Comprehension"], [236, "List-Comprehension"], [306, "List-Comprehension"], [316, "List-Comprehension"], [322, "List-Comprehension"], [1010, "list-comprehension"], [1055, "list-comprehension"]], "exec(), eval()": [[173, "exec(),-eval()"]], "Umgebender Context": [[173, "Umgebender-Context"]], "Eigener Context": [[173, "Eigener-Context"]], "json": [[173, "json"], [249, "json"]], "Project": [[174, "project"], [134, "project"], [134, "id3"], [134, "id5"], [134, "id7"], [134, "id9"], [134, "id11"], [134, "id13"], [134, "id15"], [134, "id17"]], "Python Individualtraining (5 Tage, beginnend 28.10.2019)": [[174, "python-individualtraining-5-tage-beginnend-28-10-2019"], [360, "python-individualtraining-5-tage-beginnend-28-10-2019"]], "Inhalt": [[174, null], [177, null], [981, null], [1158, "inhalt"]], "Slide 51, \u201cExercises: Basics\u201d": [[174, "slide-51-exercises-basics"]], "Slide 58, \u201cExercises: While Loop\u201d": [[174, "slide-58-exercises-while-loop"]], "Slide 94, \u201cExercises: Lists, Loops, Functions\u201d": [[174, "slide-94-exercises-lists-loops-functions"]], "Slide 121, \u201cExercises: Strings\u201d": [[174, "slide-121-exercises-strings"]], "Famous Generator Introduction": [[174, "famous-generator-introduction"]], "eval(): Convert a String into a Python Data Structure": [[174, "eval-convert-a-string-into-a-python-data-structure"]], "Operator Overloading": [[174, "operator-overloading"], [232, "operator-overloading"], [242, "Operator-Overloading"], [263, "operator-overloading"], [298, "operator-overloading"], [545, "operator-overloading"], [571, "operator-overloading"], [585, "operator-overloading"], [1027, "operator-overloading"]], "Getters and Setters": [[174, "getters-and-setters"]], "More on Listcomprehensions and Generator Expressions": [[174, "more-on-listcomprehensions-and-generator-expressions"]], "More on Local and Global Scope and Global Variables": [[174, "more-on-local-and-global-scope-and-global-variables"]], "Closures: Between Local and Global": [[174, "closures-between-local-and-global"]], "Goals of this Training": [[175, "Goals-of-this-Training"]], "Exercise": [[175, "Exercise"], [216, "exercise"], [258, "exercise"], [258, "id1"], [259, "exercise"], [261, "exercise"], [270, "exercise"], [279, "exercise"], [301, "exercise"], [342, "exercise"], [348, "exercise"], [467, "exercise"], [468, "exercise"], [469, "exercise"], [471, "exercise"], [472, "exercise"], [475, "exercise"], [476, "exercise"], [661, "exercise"]], "Walkthrough: Reduce Image to Eight Colors": [[175, "Walkthrough:-Reduce-Image-to-Eight-Colors"]], "Load Image from File: PIL": [[175, "Load-Image-from-File:-PIL"]], "Image as NumPy Array": [[175, "Image-as-NumPy-Array"]], "Preparation before Clustering": [[175, "Preparation-before-Clustering"]], "Excursion: matplotlib": [[175, "Excursion:-matplotlib"]], "Now Comes the Clustering": [[175, "Now-Comes-the-Clustering"]], "Let KMeans find eight clusters \u2026": [[175, "Let-KMeans-find-eight-clusters-..."]], "Use the result: output-properties": [[175, "Use-the-result:-output-properties"]], "Clusters be their Centers": [[175, "Clusters-be-their-Centers"]], "Post Processing: Restore Alpha, Back into RGBA": [[175, "Post-Processing:-Restore-Alpha,-Back-into-RGBA"]], "Random Live Hacking": [[176, "Random-Live-Hacking"]], "Data Types": [[176, "Data-Types"], [306, "Data-Types"]], "Mutable, Immutable": [[176, "Mutable,-Immutable"]], "Exception, demonstrated using dict access": [[176, "Exception,-demonstrated-using-dict-access"]], "Indices and Slicing": [[176, "Indices-and-Slicing"]], "for loops": [[176, "for-loops"]], "Iterator protocol": [[176, "Iterator-protocol"], [239, "Iterator-protocol"]], "Python (12.11.2019 - 14.11.2019 in Graz)": [[177, "python-12-11-2019-14-11-2019-in-graz"]], "Material": [[177, null], [179, null], [341, null]], "Standardthemen": [[177, "standardthemen"]], "Das Hauptthema: Numerik, NumPy": [[177, "das-hauptthema-numerik-numpy"]], "Lesen von .mat Files": [[177, "lesen-von-mat-files"]], "L\u00f6sen einer Uni-\u00dcbung": [[177, "losen-einer-uni-ubung"]], "Proposal": [[178, "proposal"]], "Signals": [[178, "signals"]], "Posix IPC (and Virtual Memory)": [[178, "posix-ipc-and-virtual-memory"]], "Unix Domain Sockets": [[178, "unix-domain-sockets"]], "Application in your Company": [[178, "application-in-your-company"]], "Further Thoughts": [[178, "further-thoughts"]], "IPC in Linux (10.1.2020 in Graz)": [[179, "ipc-in-linux-10-1-2020-in-graz"]], "\u00dcbung: handgestrickter String, um die Fallen von C++ lustvoll zu erleiden": [[180, "ubung-handgestrickter-string-um-die-fallen-von-c-lustvoll-zu-erleiden"]], "C++ f\u00fcr Embedded C Programmierer (30.3.2020 - 3.4.2020 Baden W\u00fcrttemberg)": [[181, "c-fur-embedded-c-programmierer-30-3-2020-3-4-2020-baden-wurttemberg"]], "Kursinformation": [[181, null]], "Kursaufbau": [[181, "kursaufbau"]], "Kursverlauf": [[181, "kursverlauf"], [189, "kursverlauf"]], "Tag 3": [[181, "tag-3"], [200, "tag-3"], [211, "tag-3"], [233, "tag-3"], [245, "tag-3"]], "Tag 4": [[181, "tag-4"], [211, "tag-4"], [233, "tag-4"], [245, "tag-4"]], "Tag 5": [[181, "tag-5"]], "Installing googletest By Hand": [[182, "installing-googletest-by-hand"]], "Clone googletest Repo": [[182, "clone-googletest-repo"]], "Create Build Directory": [[182, "create-build-directory"], [183, "create-build-directory"], [524, "create-build-directory"]], "CMake, Build and Install": [[182, "cmake-build-and-install"]], "Build Packages to Use Our Private googletest Install": [[182, "build-packages-to-use-our-private-googletest-install"]], "Software Setup, Build": [[183, "software-setup-build"]], "Getting the Source": [[183, "getting-the-source"]], "Install Prerequisites and Dependencies": [[183, "install-prerequisites-and-dependencies"]], "Generate Makefile Build from CMake Sources": [[183, "generate-makefile-build-from-cmake-sources"]], "Argh: Using This Site With Visual Studio Code": [[184, "argh-using-this-site-with-visual-studio-code"]], "Flatpak": [[184, "flatpak"]], "Issues": [[184, "issues"]], "RPM From M$": [[184, "rpm-from-m"]], "Code": [[185, "code"], [188, "code"]], "Python Grundlagen (13.5.2020 - 14.5.2020 bei einer Firma in Graz)": [[186, "python-grundlagen-13-5-2020-14-5-2020-bei-einer-firma-in-graz"]], "Information": [[186, null], [189, null]], "Environment": [[186, "environment"], [842, "environment"]], "Unit Testing and Test Driven Development": [[186, "unit-testing-and-test-driven-development"]], "Python Installation": [[186, "python-installation"], [1032, "python-installation"]], "Programming Environment": [[186, "programming-environment"], [270, "programming-environment"], [1032, "programming-environment"]], "Day 1: Language Basics": [[186, "day-1-language-basics"]], "Day 2: Advanced Topics": [[186, "day-2-advanced-topics"]], "Wrap-Up": [[186, "wrap-up"]], "How Was It?": [[186, "how-was-it"]], "Python Schulung 18. und 19.5.2020": [[187, "Python-Schulung-18.-und-19.5.2020"]], "Das sys Modul": [[187, "Das-sys-Modul"]], "Multiline Strings und Docstrings": [[187, "Multiline-Strings-und-Docstrings"]], "Datentypen (Ausflug)": [[187, "Datentypen-(Ausflug)"]], "Variablen und deren Unterbau": [[187, "Variablen-und-deren-Unterbau"]], "Ausflug \u201cPythonic\u201d: Zuweisung mit Hilfe von \u201cTuple Unpacking\u201d": [[187, "Ausflug-%22Pythonic%22:-Zuweisung-mit-Hilfe-von-%22Tuple-Unpacking%22"]], "Mutability am Beispiel list": [[187, "Mutability-am-Beispiel-list"]], "Integers haben unendliche Breite": [[187, "Integers-haben-unendliche-Breite"]], "Division und Floor Division": [[187, "Division-und-Floor-Division"]], "Konvertierung durch Konstruktoren": [[187, "Konvertierung-durch-Konstruktoren"]], "Welchen Typ haben Typen?": [[187, "Welchen-Typ-haben-Typen?"]], "list und Mutability": [[187, "list-und-Mutability"]], "Tuple und Immutability": [[187, "Tuple-und-Immutability"]], "Besseres Laufzeitverhalten durch Geeignetere Datenstrukturen": [[187, "Besseres-Laufzeitverhalten-durch-Geeignetere-Datenstrukturen"]], "Boolean: Short Circuit Evaluation": [[187, "Boolean:-Short-Circuit-Evaluation"]], "while Loops, und warum sie nicht Pythonic sind": [[187, "while-Loops,-und-warum-sie-nicht-Pythonic-sind"]], "Mehr \u00fcber range(): Iterator Protocol (Folie 161)": [[187, "Mehr-\u00fcber-range():-Iterator-Protocol-(Folie-161)"]], "Mutability, Shallow und Deep Copy": [[187, "Mutability,-Shallow-und-Deep-Copy"]], "Shallow Copy mit dem Slice-Operator": [[187, "Shallow-Copy-mit-dem-Slice-Operator"]], "Deep Copy (copy.deepcopy())": [[187, "Deep-Copy-(copy.deepcopy())"]], "Funktionen": [[187, "Funktionen"]], "Funktionen sind \u201cFirst Class Objects\u201d": [[187, "Funktionen-sind-%22First-Class-Objects%22"]], "Gotcha: Mutable Default Parameters (Folie 90 ff.)": [[187, "Gotcha:-Mutable-Default-Parameters-(Folie-90-ff.)"]], "Globale und lokale Variablen (Folie 92)": [[187, "Globale-und-lokale-Variablen-(Folie-92)"]], "Exercise: uniq() (Folie 94, Punkt 2)": [[187, "Exercise:-uniq()-(Folie-94,-Punkt-2)"]], "Zusammengefasst: hier eine \u201csch\u00f6nere\u201d L\u00f6sung": [[187, "Zusammengefasst:-hier-eine-%22sch\u00f6nere%22-L\u00f6sung"]], "Funktionen als Parameter": [[187, "Funktionen-als-Parameter"]], "List Comprensions (Folie 125)": [[187, "List-Comprensions-(Folie-125)"]], "Generator Expressions: Lesbarkeit und Performance": [[187, "Generator-Expressions:-Lesbarkeit-und-Performance"]], "Code Review": [[187, "Code-Review"]], "pprint() ist praktisch f\u00fcr Debug-Output": [[187, "pprint()-ist-praktisch-f\u00fcr-Debug-Output"]], "Straightforward Datentransformation": [[187, "Straightforward-Datentransformation"]], "Ausflug: More on Dictionaries (Folie 127ff.)": [[187, "Ausflug:-More-on-Dictionaries-(Folie-127ff.)"]], "Now for something completely different: collections.namedtuple": [[187, "Now-for-something-completely-different:-collections.namedtuple"]], "Mehr zur Parameter\u00fcbergabe: variabel lange Argumentlisten": [[187, "Mehr-zur-Parameter\u00fcbergabe:-variabel-lange-Argumentlisten"]], "OO: eine erste Klasse": [[187, "OO:-eine-erste-Klasse"]], "Python Individualtraining (18.5.2020 - 19.5.2020)": [[189, "python-individualtraining-18-5-2020-19-5-2020"], [360, "python-individualtraining-18-5-2020-19-5-2020"]], "Weiterf\u00fchrende Links": [[189, "weiterfuhrende-links"]], "Python Advanced (7.9.2020 - 10.9.2020)": [[190, "python-advanced-7-9-2020-10-9-2020"], [360, "python-advanced-7-9-2020-10-9-2020"]], "Preparation": [[190, "preparation"], [191, "preparation"], [193, "preparation"], [194, "preparation"], [195, "preparation"], [196, "preparation"], [587, "preparation"]], "Workspace Setup": [[190, "workspace-setup"], [191, "workspace-setup"], [193, "workspace-setup"], [195, "workspace-setup"]], "Github for Exercises": [[190, "github-for-exercises"], [191, "github-for-exercises"]], "Agenda": [[190, "agenda"], [191, "agenda"], [193, "agenda"], [194, "agenda"], [195, "agenda"], [196, "agenda"], [201, "agenda"], [205, "agenda"], [206, "agenda"], [243, "agenda"], [248, "agenda"], [260, "agenda"], [269, "agenda"], [290, "agenda"], [298, "agenda"], [1163, "agenda"]], "Advanced Core Python Topics": [[190, "advanced-core-python-topics"]], "Special Topics": [[190, "special-topics"]], "Day 1": [[190, "day-1"], [191, "day-1"], [193, "day-1"], [194, "day-1"], [195, "day-1"], [205, "day-1"], [206, "day-1"], [215, "day-1"], [216, "day-1"], [221, "day-1"], [224, "day-1"], [227, "day-1"], [230, "day-1"], [237, "day-1"], [279, "day-1"], [280, "day-1"], [281, "day-1"], [287, "day-1"], [291, "day-1"], [293, "day-1"], [298, "day-1"], [305, "day-1"]], "Day 2": [[190, "day-2"], [191, "day-2"], [193, "day-2"], [194, "day-2"], [195, "day-2"], [205, "day-2"], [206, "day-2"], [215, "day-2"], [216, "day-2"], [221, "day-2"], [224, "day-2"], [226, "Day-2"], [227, "day-2"], [230, "day-2"], [237, "day-2"], [270, "day-2"], [279, "day-2"], [281, "day-2"], [287, "day-2"], [291, "day-2"], [298, "day-2"], [305, "day-2"]], "Day 3": [[190, "day-3"], [191, "day-3"], [193, "day-3"], [194, "day-3"], [195, "day-3"], [205, "day-3"], [206, "day-3"], [215, "day-3"], [216, "day-3"], [221, "day-3"], [226, "Day-3"], [227, "day-3"], [230, "day-3"], [237, "day-3"], [270, "day-3"], [273, "day-3"], [279, "day-3"], [281, "day-3"], [287, "day-3"], [291, "day-3"], [293, "day-3"], [305, "day-3"]], "Day 4": [[190, "day-4"], [193, "day-4"], [205, "day-4"], [206, "day-4"], [215, "day-4"], [216, "day-4"], [270, "day-4"]], "Recommended Tutorials": [[190, "recommended-tutorials"]], "After Work Party": [[190, "after-work-party"], [221, "after-work-party"]], "Python Basics (28.9.2020 - 30.9.2020)": [[191, "python-basics-28-9-2020-30-9-2020"], [360, "python-basics-28-9-2020-30-9-2020"]], "Iterables": [[192, "Iterables"]], "set constructor": [[192, "set-constructor"]], "Fast vs. Simple": [[192, "Fast-vs.-Simple"]], "for, Iterables, range and Generators": [[192, "for,-Iterables,-range-and-Generators"]], "Tuples, Tuple Unpacking, Returning Multiple Values from Functions": [[192, "Tuples,-Tuple-Unpacking,-Returning-Multiple-Values-from-Functions"]], "Object Oriented Programming": [[192, "Object-Oriented-Programming"], [242, "Object-Oriented-Programming"], [255, "Object-Oriented-Programming"], [266, "object-oriented-programming"], [280, "object-oriented-programming"], [282, "object-oriented-programming"], [283, "object-oriented-programming"], [286, "object-oriented-programming"], [287, "object-oriented-programming"], [292, "object-oriented-programming"], [298, "object-oriented-programming"], [301, "object-oriented-programming"], [304, "object-oriented-programming"], [305, "object-oriented-programming"], [308, "object-oriented-programming"], [314, "object-oriented-programming"], [320, "object-oriented-programming"], [449, "object-oriented-programming"], [1023, "object-oriented-programming"], [326, "object-oriented-programming"]], "datetime": [[192, "datetime"], [219, "datetime"], [274, "datetime"]], "Python Basic and Advanced (19.10.2020 - 22.10.2020)": [[193, "python-basic-and-advanced-19-10-2020-22-10-2020"]], "Additional Topics, brought in by Thomas": [[193, "additional-topics-brought-in-by-thomas"]], "Notebook": [[193, "notebook"], [214, "notebook"], [229, "Notebook"], [342, "notebook"]], "Tutorials": [[193, "tutorials"], [221, "tutorials"]], "Linux on Raspberry Pi": [[194, "linux-on-raspberry-pi"]], "Cloud Machine": [[194, "cloud-machine"]], "Raspberry on Participant\u2019s Desks": [[194, "raspberry-on-participant-s-desks"]], "Basic security": [[194, "basic-security"]], "Interlude: SD Card Setup (No Bloody Disk Imager)": [[194, "interlude-sd-card-setup-no-bloody-disk-imager"]], "GPIO, using sysfs interface": [[194, "gpio-using-sysfs-interface"]], "In the Wild: Watchdog": [[194, "in-the-wild-watchdog"]], "TODO": [[194, "todo"], [329, "todo"], [330, "todo"], [331, "todo"], [1123, "todo"]], "Support Material": [[194, "support-material"]], "Python Basics (23.11.2020 - 25.11.2020)": [[195, "python-basics-23-11-2020-25-11-2020"], [360, "python-basics-23-11-2020-25-11-2020"]], "Exercise: JSON": [[195, "exercise-json"]], "Linux Basics (30.11.2020 - 3.12.2020)": [[196, "linux-basics-30-11-2020-3-12-2020"], [360, "linux-basics-30-11-2020-3-12-2020"]], "6 Grundlegende Sprachelemente": [[197, "6-Grundlegende-Sprachelemente"]], "6.1 Syntax und Semantik": [[197, "6.1-Syntax-und-Semantik"]], "Zur Syntax mit der Einr\u00fcckung \u2026": [[197, "Zur-Syntax-mit-der-Einr\u00fcckung-..."]], "In Python k\u00f6nnen Variablen ihren Typ \u00e4ndern": [[197, "In-Python-k\u00f6nnen-Variablen-ihren-Typ-\u00e4ndern"]], "Kommentare": [[197, "Kommentare"]], "6.2 Grundlegende Elemente einer Sprache": [[197, "6.2-Grundlegende-Elemente-einer-Sprache"]], "6.3 Standarddatentypen (elementare Datentypen)": [[197, "6.3-Standarddatentypen-(elementare-Datentypen)"]], "Integers sind beliebig gro\u00df": [[197, "Integers-sind-beliebig-gro\u00df"]], "Vergleichsoperatoren": [[197, "Vergleichsoperatoren"]], "Operator Pr\u00e4zedenz: Punkt vor Strichrechnung": [[197, "Operator-Pr\u00e4zedenz:-Punkt-vor-Strichrechnung"]], "Floor Division": [[197, "Floor-Division"]], "Modulo Operator: %": [[197, "Modulo-Operator:-%"]], "(Un\u00e4rer) Negations Operator": [[197, "(Un\u00e4rer)-Negations-Operator"]], "Operator Pr\u00e4zedenz erzwingen": [[197, "Operator-Pr\u00e4zedenz-erzwingen"]], "Strings gibts auch (Zeichenketten)": [[197, "Strings-gibts-auch-(Zeichenketten)"]], "Raw Strings": [[197, "Raw-Strings"], [219, "Raw-Strings"], [236, "Raw-Strings"], [242, "Raw-Strings"], [264, "Raw-Strings"], [294, "Raw-Strings"], [1052, "raw-strings"]], "f-Strings": [[197, "f-Strings"], [316, "f-Strings"]], "Konvertierungen": [[197, "Konvertierungen"]], "Boolean": [[197, "Boolean"], [223, "Boolean"], [226, "Boolean"], [234, "Boolean"], [236, "Boolean"], [246, "Boolean"], [249, "Boolean"], [322, "Boolean"], [1041, "boolean"]], "Pr\u00e4zendenzregeln: and vor or": [[197, "Pr\u00e4zendenzregeln:-and-vor-or"]], "6.4 Literale f\u00fcr primitive Datentypen": [[197, "6.4-Literale-f\u00fcr-primitive-Datentypen"]], "6.5 Variablen und Konstanten": [[197, "6.5-Variablen-und-Konstanten"]], "6.6 Operatoren": [[197, "6.6-Operatoren"]], "6.7 Ausdr\u00fccke und Operatorrangfolgen": [[197, "6.7-Ausdr\u00fccke-und-Operatorrangfolgen"]], "6.8 \u00dcbungen": [[197, "6.8-\u00dcbungen"]], "Zwei Variablen vertauschen": [[197, "Zwei-Variablen-vertauschen"]], "Zwei Variablen vertauschen mit Tuple Unpacking": [[197, "Zwei-Variablen-vertauschen-mit-Tuple-Unpacking"]], "\u00dcbung 1, 5.": [[197, "\u00dcbung-1,-5."]], "7 Kontrollstrukturen": [[197, "7-Kontrollstrukturen"]], "7.1 Anweisungen und Folgen": [[197, "7.1-Anweisungen-und-Folgen"]], "7.2 Bedingungen und Kontrollstrukturen": [[197, "7.2-Bedingungen-und-Kontrollstrukturen"]], "7.3 Grundlagen zu Verzweigungen": [[197, "7.3-Grundlagen-zu-Verzweigungen"]], "7.4 Bedingte Anweisung": [[197, "7.4-Bedingte-Anweisung"]], "7.5 Verzweigung": [[197, "7.5-Verzweigung"]], "7.6 Geschachtelte Verzweigung": [[197, "7.6-Geschachtelte-Verzweigung"]], "7.7 Mehrfache Verzweigung (Fallauswahl)": [[197, "7.7-Mehrfache-Verzweigung-(Fallauswahl)"]], "7.8 Schleifen": [[197, "7.8-Schleifen"]], "7.9 Z\u00e4hlergesteuerte Schleifen (Iteration)": [[197, "7.9-Z\u00e4hlergesteuerte-Schleifen-(Iteration)"]], "7.10 Kopfgesteuerte bedingte Schleife": [[197, "7.10-Kopfgesteuerte-bedingte-Schleife"]], "7.11 Fu\u00dfgesteuerte bedingte Schleife": [[197, "7.11-Fu\u00dfgesteuerte-bedingte-Schleife"]], "(jf) break und continue": [[197, "(jf)-break-und-continue"]], "(jf) Sequential Datatypes": [[197, "(jf)-Sequential-Datatypes"]], "(jf) for Loops": [[197, "(jf)-for-Loops"]], "Iteration mit Dictionaries": [[197, "Iteration-mit-Dictionaries"]], "(jf) The range() Function": [[197, "(jf)-The-range()-Function"]], "7.12 Schnell\u00fcbersicht": [[197, "7.12-Schnell\u00fcbersicht"]], "7.13 Sprunganweisungen": [[197, "7.13-Sprunganweisungen"]], "7.14 Endlosschleifen": [[197, "7.14-Endlosschleifen"]], "7.15 \u00dcbungen": [[197, "7.15-\u00dcbungen"]], "8 Elementare Datenstrukturen": [[197, "8-Elementare-Datenstrukturen"]], "8.1 Warum werden Datenstrukturen ben\u00f6tigt?": [[197, "8.1-Warum-werden-Datenstrukturen-ben\u00f6tigt?"]], "(jf) Compound Datatypes": [[197, "(jf)-Compound-Datatypes"]], "(jf) References, (Im)mutability": [[197, "(jf)-References,-(Im)mutability"]], "(jf) Laufzeitverhalten bei der Suche (der in Operator)": [[197, "(jf)-Laufzeitverhalten-bei-der-Suche-(der-in-Operator)"]], "Liste": [[197, "Liste"]], "Set": [[197, "Set"], [218, "Set"], [219, "Set"], [223, "Set"], [223, "id1"], [226, "Set"], [229, "Set"], [229, "id1"], [236, "Set"], [249, "Set"], [252, "Set"], [264, "Set"], [267, "Set"], [267, "id5"], [274, "Set"], [284, "Set"], [288, "Set"], [306, "Set"], [310, "Set"], [322, "Set"]], "8.2 Arrays": [[197, "8.2-Arrays"]], "8.3 Eindimensionale Arrays": [[197, "8.3-Eindimensionale-Arrays"]], "8.4 Records": [[197, "8.4-Records"]], "8.5 Zeichenketten": [[197, "8.5-Zeichenketten"]], "8.6 Tupel und Listen": [[197, "8.6-Tupel-und-Listen"]], "sorted, reversed": [[197, "sorted,-reversed"]], "8.7 Dictionaries": [[197, "8.7-Dictionaries"]], "(jf) Records in Python": [[197, "(jf)-Records-in-Python"]], "8.8 Mengen": [[197, "8.8-Mengen"]], "8.9 Besondere Datenstrukturen anhand von Stapel (Stack) und Schlangen (Queue)": [[197, "8.9-Besondere-Datenstrukturen-anhand-von-Stapel-(Stack)-und-Schlangen-(Queue)"]], "8.10 \u00dcbungen": [[197, "8.10-\u00dcbungen"]], "\u00dcbung 1": [[197, "\u00dcbung-1"]], "Versuch 1: in und index()": [[197, "Versuch-1:-in-und-index()"]], "Versuch 2: Zur\u00fcck zu while \u2026": [[197, "Versuch-2:-Zur\u00fcck-zu-while-..."]], "Versuch 3: hybrid potschert mit for": [[197, "Versuch-3:-hybrid-potschert-mit-for"]], "Versuch 4: supergscheit mit for und enumerate()": [[197, "Versuch-4:-supergscheit-mit-for-und-enumerate()"]], "9 Methoden, Prozeduren und Funktionen": [[197, "9-Methoden,-Prozeduren-und-Funktionen"]], "Funktionspointer (so heissts in C): Funktionsobjekte (Python)": [[197, "Funktionspointer-(so-heissts-in-C):-Funktionsobjekte-(Python)"]], "(jf) Primzahlenbeispiel mit Funktion": [[197, "(jf)-Primzahlenbeispiel-mit-Funktion"]], "(jf) Local vs. Global Scope": [[197, "(jf)-Local-vs.-Global-Scope"]], "Laufzeitfehler: Variable existiert nicht": [[197, "Laufzeitfehler:-Variable-existiert-nicht"]], "Lokale Variable": [[197, "Lokale-Variable"]], "Globale Variable (lesen)": [[197, "Globale-Variable-(lesen)"]], "Globale Variable (schreiben/zuweisen)": [[197, "Globale-Variable-(schreiben/zuweisen)"]], "Fehlerfall von Peter": [[197, "Fehlerfall-von-Peter"]], "9.1 Unterprogramme": [[197, "9.1-Unterprogramme"]], "9.2 Parameter\u00fcbergabe": [[197, "9.2-Parameter\u00fcbergabe"]], "9.3 Parameter\u00fcbergabe als Wert": [[197, "9.3-Parameter\u00fcbergabe-als-Wert"]], "9.4 Parameter\u00fcbergabe \u00fcber Referenzen": [[197, "9.4-Parameter\u00fcbergabe-\u00fcber-Referenzen"]], "9.5 R\u00fcckgabewerte von Funktionen oder Methoden": [[197, "9.5-R\u00fcckgabewerte-von-Funktionen-oder-Methoden"]], "9.6 Innere Funktionen - Closures": [[197, "9.6-Innere-Funktionen---Closures"]], "9.7 Standardbibliotheken und Built-in-Funktionalit\u00e4ten": [[197, "9.7-Standardbibliotheken-und-Built-in-Funktionalit\u00e4ten"]], "9.8 \u00dcbungen": [[197, "9.8-\u00dcbungen"]], "Programmierung Grundlagen (13. und 14.1.2021)": [[198, "programmierung-grundlagen-13-und-14-1-2021"]], "Struktur": [[198, "struktur"]], "Herdt Kapitel 6: Grundlegende Sprachelemente": [[198, "herdt-kapitel-6-grundlegende-sprachelemente"], [1171, "herdt-kapitel-6-grundlegende-sprachelemente"]], "Herdt Kapitel 7: Kontrollstrukturen": [[198, "herdt-kapitel-7-kontrollstrukturen"], [1171, "herdt-kapitel-7-kontrollstrukturen"]], "Verzweigung": [[198, "verzweigung"], [1171, "verzweigung"]], "Schleifen": [[198, "schleifen"], [1171, "schleifen"]], "Herdt Kapitel 8: Elementare Datenstrukturen": [[198, "herdt-kapitel-8-elementare-datenstrukturen"], [1171, "herdt-kapitel-8-elementare-datenstrukturen"]], "Herdt Kapitel 9: Methoden, Prozeduren und Funktionen": [[198, "herdt-kapitel-9-methoden-prozeduren-und-funktionen"], [1171, "herdt-kapitel-9-methoden-prozeduren-und-funktionen"]], "Python Basics (22.2.2021 - 24.2.2021)": [[200, "python-basics-22-2-2021-24-2-2021"], [360, "python-basics-22-2-2021-24-2-2021"]], "Links (ToDo)": [[200, "links-todo"]], "Linux Kernel Driver Development Basics (14.12.2020)": [[201, "linux-kernel-driver-development-basics-14-12-2020"]], "Books": [[201, "books"], [251, "books"], [293, "books"], [1108, "books"]], "Python Advanced": [[202, "Python-Advanced"]], "Data Types Recap": [[202, "Data-Types-Recap"]], "Sequential Datatypes": [[202, "Sequential-Datatypes"], [234, "Sequential-Datatypes"], [246, "Sequential-Datatypes"], [316, "Sequential-Datatypes"], [1044, "sequential-datatypes"], [1044, "id1"]], "Slicing etc.": [[202, "Slicing-etc."]], "Mapping Types (Dictionary, und mehr)": [[202, "Mapping-Types-(Dictionary,-und-mehr)"]], "Sets": [[202, "Sets"], [202, "id1"], [210, "Sets"], [1057, "sets"]], "for Schleife, ganz kurz": [[202, "for-Schleife,-ganz-kurz"]], "Tuple": [[202, "Tuple"], [226, "Tuple"], [229, "Tuple"], [236, "Tuple"], [249, "Tuple"], [252, "Tuple"], [264, "Tuple"], [322, "Tuple"]], "Funktionen mit mehreren Returnwerten (bzw. Tuple Unpacking)": [[202, "Funktionen-mit-mehreren-Returnwerten-(bzw.-Tuple-Unpacking)"]], "Iteration \u00fcber Containerdatentypen": [[202, "Iteration-\u00fcber-Containerdatentypen"]], "Listen": [[202, "Listen"], [236, "Listen"], [337, "Listen"]], "Was heisst \u201cUntypisiert\u201d?": [[202, "Was-heisst-%22Untypisiert%22?"]], "Wir l\u00f6schen den Integer": [[202, "Wir-l\u00f6schen-den-Integer"]], "Iterator Protocol, for Loops": [[202, "Iterator-Protocol,-for-Loops"]], "Iterable: Der Begriff": [[202, "Iterable:-Der-Begriff"]], "Zufall": [[202, "Zufall"]], "Regular Expressions": [[202, "Regular-Expressions"], [255, "Regular-Expressions"], [267, "Regular-Expressions"], [316, "Regular-Expressions"], [322, "Regular-Expressions"], [899, "regular-expressions"]], "enumerate()": [[202, "enumerate()"], [210, "enumerate()"], [213, "enumerate()"], [249, "enumerate()"], [267, "enumerate()"], [284, "enumerate()"], [306, "enumerate()"]], "JSON": [[202, "JSON"], [219, "JSON"], [229, "JSON"], [255, "JSON"], [264, "JSON"], [299, "JSON"], [302, "JSON"]], "2021-03-15": [[203, "id1"]], "Exercises (auf Github)": [[203, "exercises-auf-github"]], "Jupyter Notebook": [[203, "jupyter-notebook"], [205, "jupyter-notebook"], [222, "jupyter-notebook"], [224, "jupyter-notebook"], [227, "jupyter-notebook"], [233, "jupyter-notebook"], [238, "jupyter-notebook"], [241, "jupyter-notebook"], [244, "jupyter-notebook"], [337, "Jupyter-Notebook"], [1114, "jupyter-notebook"]], "Download": [[203, null], [205, null]], "Hallo Jupyter Notebook": [[204, "Hallo-Jupyter-Notebook"]], "Syntax": [[204, "Syntax"], [274, "Syntax"], [316, "Syntax"], [337, "Syntax"], [337, "id1"]], "Raw strings": [[204, "Raw-strings"]], "Variablen": [[204, "Variablen"], [236, "Variablen"]], "Tuple Unpacking": [[204, "Tuple-Unpacking"], [246, "Tuple-Unpacking"], [264, "Tuple-Unpacking"], [274, "Tuple-Unpacking"], [310, "Tuple-Unpacking"], [316, "Tuple-Unpacking"], [336, "Tuple-Unpacking"], [337, "Tuple-Unpacking"], [337, "id2"]], "Speicher, Memory Management": [[204, "Speicher,-Memory-Management"]], "Mutable vs. Immutable": [[204, "Mutable-vs.-Immutable"], [255, "Mutable-vs.-Immutable"]], "Wie sch\u00fctze ich mich davor?": [[204, "Wie-sch\u00fctze-ich-mich-davor?"]], "Aber!!!!": [[204, "Aber!!!!"]], "Dictionary": [[204, "Dictionary"], [210, "Dictionary"], [218, "Dictionary"], [219, "Dictionary"], [223, "Dictionary"], [223, "id2"], [226, "Dictionary"], [229, "Dictionary"], [229, "id2"], [236, "Dictionary"], [249, "Dictionary"], [252, "Dictionary"], [264, "Dictionary"], [267, "Dictionary"], [267, "id4"], [274, "Dictionary"], [284, "Dictionary"], [288, "Dictionary"], [294, "Dictionary"], [306, "Dictionary"], [310, "Dictionary"], [322, "Dictionary"]], "Exercise: Liste von gemischten Datentypen": [[204, "Exercise:-Liste-von-gemischten-Datentypen"]], "Konstruktoren": [[204, "Konstruktoren"]], "Tag 2: Wiederholung, Fragen": [[204, "Tag-2:-Wiederholung,-Fragen"]], "for und range()": [[204, "for-und-range()"]], "Objektidentit\u00e4t": [[204, "Objektidentit\u00e4t"]], "Das with Statement": [[204, "Das-with-Statement"], [213, "Das-with-Statement"]], "Tuple Unpacking, Dictionary Iteration": [[204, "Tuple-Unpacking,-Dictionary-Iteration"]], "String Operationen": [[204, "String-Operationen"]], "enumerate(), und verlorene Indices": [[204, "enumerate(),-und-verlorene-Indices"]], "NumPy, matplotlib": [[204, "NumPy,-matplotlib"]], "Interpolation mittels scipy": [[204, "Interpolation-mittels-scipy"]], "Python Basic and Advanced (22.3.2021 - 25.3.2021)": [[205, "python-basic-and-advanced-22-3-2021-25-3-2021"]], "(Tutorial) Videos": [[205, "tutorial-videos"]], "Linux Basics, Shell Scripting (2021-03-29)": [[206, "linux-basics-shell-scripting-2021-03-29"]], "Course Details": [[206, null]], "Course Preparation": [[206, "course-preparation"], [259, "course-preparation"], [261, "course-preparation"], [269, "course-preparation"]], "SSH": [[206, "ssh"], [347, "ssh"]], "Linux and/or Shell on Windows Host": [[206, "linux-and-or-shell-on-windows-host"]], "Editor Support for Shell Scripting": [[206, "editor-support-for-shell-scripting"]], "Programmierung Grundlagen (12. und 13.4.2021)": [[208, "programmierung-grundlagen-12-und-13-4-2021"]], "Syntax etc.": [[210, "Syntax-etc."], [242, "Syntax-etc."], [288, "Syntax-etc."], [1036, "syntax-etc"]], "Comments vs. Documentation": [[210, "Comments-vs.-Documentation"], [1036, "comments-vs-documentation"]], "Variables": [[210, "Variables"], [223, "Variables"], [226, "Variables"], [242, "Variables"], [252, "Variables"], [284, "Variables"], [288, "Variables"], [310, "Variables"], [316, "Variables"], [322, "Variables"], [337, "Variables"], [1038, "variables"]], "Assignment Fun": [[210, "Assignment-Fun"], [249, "Assignment-Fun"], [1038, "assignment-fun"]], "Assignment Details": [[210, "Assignment-Details"], [242, "Assignment-Details"], [249, "Assignment-Details"], [337, "Assignment-Details"], [1038, "assignment-details"]], "Operators": [[210, "Operators"], [246, "Operators"]], "Integer Arithmetic": [[210, "Integer-Arithmetic"]], "String Methods": [[210, "String-Methods"], [336, "String-Methods"]], "Datatype Conversions": [[210, "Datatype-Conversions"], [234, "Datatype-Conversions"], [236, "Datatype-Conversions"], [242, "Datatype-Conversions"], [246, "Datatype-Conversions"], [249, "Datatype-Conversions"], [267, "Datatype-Conversions"], [284, "Datatype-Conversions"], [288, "Datatype-Conversions"], [294, "Datatype-Conversions"], [306, "Datatype-Conversions"], [310, "Datatype-Conversions"], [316, "Datatype-Conversions"], [337, "Datatype-Conversions"], [1039, "datatype-conversions"]], "Strings k\u00f6nnen alles!": [[210, "Strings-k\u00f6nnen-alles!"]], "Complex Datatypes": [[210, "Complex-Datatypes"], [337, "Complex-Datatypes"]], "List (mutable)": [[210, "List-(mutable)"], [223, "List-(mutable)"], [316, "List-(mutable)"]], "extend()? Iterable?": [[210, "extend()?-Iterable?"]], "Tuple (wie Liste, nur immutable)": [[210, "Tuple-(wie-Liste,-nur-immutable)"]], "in Operator": [[210, "in-Operator"], [249, "in-Operator"]], "Iteration \u00fcber Daten: mittels for": [[210, "Iteration-\u00fcber-Daten:-mittels-for"]], "enumerate(), sum(), map(), und so weiter": [[210, "enumerate(),-sum(),-map(),-und-so-weiter"]], "sum()": [[210, "sum()"]], "map()": [[210, "map()"], [213, "map()"]], "list() function": [[210, "list()-function"]], "Performance: in Operator, und list und set": [[210, "Performance:-in-Operator,-und-list-und-set"]], "Dynamische Evaluierung: eval()": [[210, "Dynamische-Evaluierung:-eval()"]], "Python Grundlagen (2021-05-03 - 2021-05-05)": [[211, "python-grundlagen-2021-05-03-2021-05-05"], [360, "python-grundlagen-2021-05-03-2021-05-05"]], "Weiterf\u00fchrende Information": [[211, "weiterfuhrende-information"]], "Visual Studio Code": [[211, "visual-studio-code"], [227, "visual-studio-code"], [1108, "visual-studio-code"]], "Python Beginner Tutorials": [[211, "python-beginner-tutorials"], [251, "python-beginner-tutorials"], [1108, "python-beginner-tutorials"]], "NumPy and Data Science Tutorials": [[211, "numpy-and-data-science-tutorials"], [251, "numpy-and-data-science-tutorials"], [254, "numpy-and-data-science-tutorials"], [287, "numpy-and-data-science-tutorials"], [1108, "numpy-and-data-science-tutorials"]], "PyPI (Installing Modules that don\u2019t come as Batteries)": [[211, "pypi-installing-modules-that-don-t-come-as-batteries"], [1108, "pypi-installing-modules-that-don-t-come-as-batteries"]], "Git, and Github": [[211, "git-and-github"], [1108, "git-and-github"]], "Conference Talks": [[211, "conference-talks"], [287, "conference-talks"], [1108, "conference-talks"]], "Python Grundlagen (Jupyter Notebook)": [[212, "python-grundlagen-jupyter-notebook"], [225, "python-grundlagen-jupyter-notebook"], [228, "python-grundlagen-jupyter-notebook"], [231, "python-grundlagen-jupyter-notebook"], [250, "python-grundlagen-jupyter-notebook"], [253, "python-grundlagen-jupyter-notebook"], [256, "python-grundlagen-jupyter-notebook"], [265, "python-grundlagen-jupyter-notebook"], [268, "python-grundlagen-jupyter-notebook"], [289, "python-grundlagen-jupyter-notebook"]], "import zipfile": [[213, "import-zipfile"]], "Read Contents \u2026": [[213, "Read-Contents-..."]], "Extract One Member": [[213, "Extract-One-Member"]], "All in One, Using with": [[213, "All-in-One,-Using-with"]], "Functionality: Methods": [[213, "Functionality:-Methods"]], "Class Attributes vs. Instance Attributes (not Variables)": [[213, "Class-Attributes-vs.-Instance-Attributes-(not-Variables)"]], "Instance Attributes": [[213, "Instance-Attributes"]], "Class Attributes": [[213, "Class-Attributes"]], "Public, Protected, Private": [[213, "Public,-Protected,-Private"]], "Properties": [[213, "Properties"], [242, "Properties"], [464, "properties"], [1028, "properties"]], "Functions, Positional and Keyword Arguments": [[213, "Functions,-Positional-and-Keyword-Arguments"]], "Positional Arguments": [[213, "Positional-Arguments"]], "Keyword Arguments": [[213, "Keyword-Arguments"], [234, "Keyword-Arguments"], [338, "Keyword-Arguments"], [1050, "keyword-arguments"]], "Mixing Positional and Keyword Arguments": [[213, "Mixing-Positional-and-Keyword-Arguments"]], "The range() Function": [[213, "The-range()-Function"], [219, "The-range()-Function"], [226, "The-range()-Function"]], "Functional Programming, Iteration, yield, map(), filter(), \u2026": [[213, "Functional-Programming,-Iteration,-yield,-map(),-filter(),-..."]], "Iterable": [[213, "Iterable"], [229, "Iterable"]], "list(), and iterable?": [[213, "list(),-and-iterable?"]], "Tuple Unpacking and the Rest": [[213, "Tuple-Unpacking-and-the-Rest"]], "Decorators, etc.": [[213, "Decorators,-etc."]], "NoneType and None": [[213, "NoneType-and-None"]], "File I/O": [[213, "File-I/O"], [242, "File-I/O"], [249, "File-I/O"], [252, "File-I/O"], [284, "File-I/O"], [288, "File-I/O"], [322, "File-I/O"], [334, "File-I/O"], [945, "file-i-o"], [1058, "file-i-o"]], "Iteration, yield, Recursion": [[213, "Iteration,-yield,-Recursion"]], "Recursion": [[213, "Recursion"]], "Iteratively Calculating Fibonacci Numbers -> yield": [[213, "Iteratively-Calculating-Fibonacci-Numbers-->-yield"]], "map(), filter(), zip(), enumerate() \u2026": [[213, "map(),-filter(),-zip(),-enumerate()-..."]], "map(), and several other ways to do the same": [[213, "map(),-and-several-other-ways-to-do-the-same"]], "zip()": [[213, "zip()"]], "filter(), and several other methods to do the same": [[213, "filter(),-and-several-other-methods-to-do-the-same"]], "OSError, errno": [[213, "OSError,-errno"]], "The platform Module, sys.path": [[213, "The-platform-Module,-sys.path"]], "os.path": [[213, "os.path"], [229, "os.path"], [236, "os.path"]], "Exceptions und so (assert())": [[213, "Exceptions-und-so-(assert())"]], "AssertionError": [[213, "AssertionError"]], "Random Questions": [[213, "Random-Questions"]], "Slicing": [[213, "Slicing"], [236, "Slicing"], [242, "Slicing"], [267, "Slicing"], [288, "Slicing"], [1129, "slicing"]], "OO": [[213, "OO"], [281, "oo"], [351, "oo"], [545, "oo"]], "String Formatting": [[213, "String-Formatting"], [219, "String-Formatting"], [1053, "string-formatting"]], "import datetime": [[213, "import-datetime"]], "Python Advanced (2021-05-25 - 2021-05-27)": [[214, "python-advanced-2021-05-25-2021-05-27"]], "Predefined streams": [[214, "predefined-streams"]], "PCAP Exam Syllabus": [[214, "pcap-exam-syllabus"], [227, "pcap-exam-syllabus"]], "2021-06-09": [[214, "id1"]], "Programmieren mit C (2021-06-14 - 2021-06-18)": [[215, "programmieren-mit-c-2021-06-14-2021-06-18"], [360, "programmieren-mit-c-2021-06-14-2021-06-18"]], "Preparation: Tools": [[215, "preparation-tools"]], "State machine": [[215, "state-machine"]], "Regular Course Topics": [[215, "regular-course-topics"]], "Development Tools (Git & CMake) Installation Massacre": [[215, "development-tools-git-cmake-installation-massacre"]], "Regular Course Material": [[215, "regular-course-material"], [215, "id1"]], "Group Project Kick-Off :-)": [[215, "group-project-kick-off"]], "Exercise: Encapsulate Index Access to userdb": [[215, "exercise-encapsulate-index-access-to-userdb"]], "Group Project (Use Case Driven Course Flow :-) )": [[215, "group-project-use-case-driven-course-flow"]], "Day 5": [[215, "day-5"], [216, "day-5"], [270, "day-5"]], "Pointer Recap": [[215, "pointer-recap"]], "On With Group Project": [[215, "on-with-group-project"]], "C++ Basics": [[215, "c-basics"]], "Pointers, Pointer Arithmetic, and the Standard Template Library (STL)": [[215, "pointers-pointer-arithmetic-and-the-standard-template-library-stl"]], "The C++ Programming Language (2021-07-12 - 2021-07-16)": [[216, "the-c-programming-language-2021-07-12-2021-07-16"]], "Setup for the new kids": [[216, "setup-for-the-new-kids"]], "Recapitulate some C": [[216, "recapitulate-some-c"]], "Group project review": [[216, "group-project-review"]], "Jump into C++": [[216, "jump-into-c"]], "Regular Topics": [[216, "regular-topics"], [216, "id2"], [216, "id4"]], "Toolchain: C/C++ Build (How Complicated Can Things Be?)": [[216, "toolchain-c-c-build-how-complicated-can-things-be"]], "Exercises: Using the C++ Toolbox": [[216, "exercises-using-the-c-toolbox"]], "Finish First \u201cUser Database\u201d Functionality": [[216, "finish-first-user-database-functionality"]], "Unit Testing": [[216, "unit-testing"], [273, "unit-testing"], [276, "unit-testing"], [350, "unit-testing"]], "GTest Installation": [[216, "gtest-installation"]], "Git Workflows": [[216, "git-workflows"]], "Day X": [[216, "day-x"]], "Smart Pointers, Recap": [[216, "smart-pointers-recap"]], "std::map": [[216, "std-map"], [623, "std-map"]], "OO, and Polymorphism": [[216, "oo-and-polymorphism"]], "Programmierung Grundlagen, anhand von Python (2. und 3.8.2021)": [[217, "programmierung-grundlagen-anhand-von-python-2-und-3-8-2021"], [360, "programmierung-grundlagen-anhand-von-python-2-und-3-8-2021"]], "Variablen und Datentypen": [[217, "variablen-und-datentypen"], [233, "variablen-und-datentypen"], [245, "variablen-und-datentypen"]], "Kontrollstrukturen": [[217, "kontrollstrukturen"], [233, "kontrollstrukturen"], [234, "Kontrollstrukturen"], [245, "kontrollstrukturen"]], "Datenstrukturen": [[218, "Datenstrukturen"]], "List": [[218, "List"], [219, "List"], [226, "List"], [229, "List"], [249, "List"], [252, "List"], [264, "List"], [267, "List"], [294, "List"], [306, "List"], [322, "List"], [1136, "list"]], "Iteration": [[218, "Iteration"], [218, "id1"], [219, "Iteration"], [219, "id1"], [229, "Iteration"], [252, "Iteration"], [264, "Iteration"], [306, "Iteration"]], "User Datenbank: Showcase Full Stack Development": [[218, "User-Datenbank:-Showcase-Full-Stack-Development"]], "5: Response kommt von der DB": [[218, "5:-Response-kommt-von-der-DB"]], "6: Aufgabe: Formulieren eines JSON Strings, damit man diese Daten \u00fcber die HTTP Verbindung zum Client/Browser schicken kann.": [[218, "6:-Aufgabe:-Formulieren-eines-JSON-Strings,-damit-man-diese-Daten-\u00fcber-die-HTTP-Verbindung-zum-Client/Browser-schicken-kann."]], "7. Jetzt schickman weg: vom Server (PHP) zum Browser (JS)": [[218, "7.-Jetzt-schickman-weg:-vom-Server-(PHP)-zum-Browser-(JS)"]], "8. in JS JSON string empfangen": [[218, "8.-in-JS-JSON-string-empfangen"]], "9. Nun muessen wir den JSON-String in JS verwandlen": [[218, "9.-Nun-muessen-wir-den-JSON-String-in-JS-verwandlen"]], "Iterable?": [[219, "Iterable?"]], "List Comprehension, Generator Expression": [[219, "List-Comprehension,-Generator-Expression"]], "Literals": [[219, "Literals"], [489, "literals"]], "Quoting?": [[219, "Quoting?"], [223, "Quoting?"]], "Multiline Strings": [[219, "Multiline-Strings"], [223, "Multiline-Strings"], [316, "Multiline-Strings"], [1052, "multiline-strings"]], "Functionality": [[219, "Functionality"], [834, "functionality"]], "strip() and friends": [[219, "strip()-and-friends"]], "f-Strings (since Python 3.6)": [[219, "f-Strings-(since-Python-3.6)"]], "Parsing date formats": [[219, "Parsing-date-formats"]], "Read a Cleaned-Up SAP Export": [[220, "read-a-cleaned-up-sap-export"]], "Requirement": [[220, "requirement"], [488, "requirement"], [510, "requirement"], [511, "requirement"], [512, "requirement"], [516, "requirement"], [517, "requirement"], [518, "requirement"], [519, "requirement"], [520, "requirement"], [521, "requirement"], [937, "requirement"], [944, "requirement"], [1064, "requirement"], [1065, "requirement"], [1086, "requirement"], [1097, "requirement"], [1098, "requirement"], [1099, "requirement"], [1100, "requirement"], [1102, "requirement"], [1103, "requirement"], [1104, "requirement"], [1105, "requirement"]], "Solution": [[220, "solution"], [467, "solution"], [469, "solution"], [472, "solution"], [1144, "solution"]], "Python Grundlagen (2021-08-23 - 2021-08-25)": [[221, "python-grundlagen-2021-08-23-2021-08-25"]], "Initial Terminology": [[223, "Initial-Terminology"]], "Sequence": [[223, "Sequence"]], "Tuple (immutable)": [[223, "Tuple-(immutable)"], [316, "Tuple-(immutable)"]], "References, (Im)mutability": [[223, "References,-(Im)mutability"], [236, "References,-(Im)mutability"], [249, "References,-(Im)mutability"], [252, "References,-(Im)mutability"], [267, "References,-(Im)mutability"], [274, "References,-(Im)mutability"], [288, "References,-(Im)mutability"], [294, "References,-(Im)mutability"], [294, "id1"], [306, "References,-(Im)mutability"], [1048, "references-im-mutability"]], "Iteration, for, and range()": [[223, "Iteration,-for,-and-range()"]], "Iterator Protocol (not so important for beginners)": [[223, "Iterator-Protocol-(not-so-important-for-beginners)"]], "Iteration, and Compound Datatypes": [[223, "Iteration,-and-Compound-Datatypes"]], "List and Tuple": [[223, "List-and-Tuple"]], "matplotlib": [[223, "matplotlib"], [255, "matplotlib"]], "File I/O, and Strings": [[223, "File-I/O,-and-Strings"]], "Raw strings: Windows path names": [[223, "Raw-strings:-Windows-path-names"]], "Miscellaneous String Methods": [[223, "Miscellaneous-String-Methods"], [234, "Miscellaneous-String-Methods"], [236, "Miscellaneous-String-Methods"], [242, "Miscellaneous-String-Methods"], [252, "Miscellaneous-String-Methods"], [267, "Miscellaneous-String-Methods"], [288, "Miscellaneous-String-Methods"], [294, "Miscellaneous-String-Methods"], [316, "Miscellaneous-String-Methods"], [322, "Miscellaneous-String-Methods"], [1054, "miscellaneous-string-methods"]], "Python Basics (2021-08-31 - 2021-09-01)": [[224, "python-basics-2021-08-31-2021-09-01"], [360, "python-basics-2021-08-31-2021-09-01"]], "Numerics, and AI": [[224, "numerics-and-ai"]], "Mountains near Graz": [[224, "mountains-near-graz"]], "2021-11-17": [[226, "2021-11-17"]], "Enter Tuples": [[226, "Enter-Tuples"]], "Datatype Conversions, Type Names": [[226, "Datatype-Conversions,-Type-Names"]], "NoneType": [[226, "NoneType"]], "Short Circuit Evaluation of Boolean Expression": [[226, "Short-Circuit-Evaluation-of-Boolean-Expression"]], "Exercise: Mixed List": [[226, "Exercise:-Mixed-List"]], "Python Documentation": [[226, "Python-Documentation"]], "for": [[226, "for"], [288, "for"], [337, "for"]], "Iteration over Compound Datatypes": [[226, "Iteration-over-Compound-Datatypes"], [236, "Iteration-over-Compound-Datatypes"]], "File IO": [[226, "File-IO"], [242, "File-IO"], [270, "file-io"], [274, "File-IO"], [310, "File-IO"], [316, "File-IO"]], "Generators, Iterator Protocol, for": [[226, "Generators,-Iterator-Protocol,-for"]], "Common Sequence Operation": [[226, "Common-Sequence-Operation"]], "Comprehensions": [[226, "Comprehensions"], [229, "Comprehensions"], [242, "Comprehensions"], [274, "Comprehensions"], [306, "Comprehensions"]], "List, Iterable? WTF?": [[226, "List,-Iterable?-WTF?"]], "Dict and iterable": [[226, "Dict-and-iterable"]], "More on Lists": [[226, "More-on-Lists"], [234, "More-on-Lists"], [249, "More-on-Lists"]], "More on Dictionaries": [[226, "More-on-Dictionaries"], [234, "More-on-Dictionaries"]], "References, Mutability": [[226, "References,-Mutability"]], "CSV": [[226, "CSV"], [243, "csv"], [251, "csv"], [288, "CSV"]], "Python Basics (2021-11-17 - 2021-11-19)": [[227, "python-basics-2021-11-17-2021-11-19"], [360, "python-basics-2021-11-17-2021-11-19"]], "Python (Core Topics)": [[227, "python-core-topics"]], "Python Standard Library": [[227, "python-standard-library"]], "More About Strings": [[229, "More-About-Strings"], [246, "More-About-Strings"], [294, "More-About-Strings"], [316, "More-About-Strings"], [322, "More-About-Strings"], [1052, "more-about-strings"]], "List, Tuple": [[229, "List,-Tuple"], [284, "List,-Tuple"], [288, "List,-Tuple"]], "Tuple Unpacking: What Else": [[229, "Tuple-Unpacking:-What-Else"]], "Iterator Protocol": [[229, "Iterator-Protocol"], [236, "Iterator-Protocol"], [267, "Iterator-Protocol"], [284, "Iterator-Protocol"], [288, "Iterator-Protocol"], [316, "Iterator-Protocol"]], "yield": [[229, "yield"], [252, "yield"]], "Everything is an Object of a Type": [[229, "Everything-is-an-Object-of-a-Type"]], "Generators, used more creatively": [[229, "Generators,-used-more-creatively"]], "Exception Handling and Exception Types": [[229, "Exception-Handling-and-Exception-Types"]], "2021-12-17": [[229, "2021-12-17"]], "Shift Operators": [[229, "Shift-Operators"]], "PCAP Sample Exam": [[229, "PCAP-Sample-Exam"]], "System Errors": [[229, "System-Errors"]], "Python Advanced (2021-12-01 - 2021-12-03)": [[230, "python-advanced-2021-12-01-2021-12-03"], [360, "python-advanced-2021-12-01-2021-12-03"]], "Basics Recap": [[230, "basics-recap"], [283, "basics-recap"]], "Group Project Preparation": [[230, "group-project-preparation"]], "Hmmm?": [[230, "hmmm"]], "C/C++ Programming (2021-12-06 - 2021-12-10, 2022-01-24 - 2022-02-04)": [[232, "c-c-programming-2021-12-06-2021-12-10-2022-01-24-2022-02-04"], [360, "c-c-programming-2021-12-06-2021-12-10-2022-01-24-2022-02-04"]], "2021-12-06": [[232, "id1"]], "2021-12-07": [[232, "id2"]], "2021-12-08": [[232, "id3"]], "2021-12-09": [[232, "id4"]], "2022-01-24": [[232, "id5"]], "Undefined Behavior": [[232, "undefined-behavior"]], "Modularization": [[232, "modularization"], [405, "modularization"]], "2022-01-25": [[232, "id6"]], "C++ and OO (Classes)": [[232, "c-and-oo-classes"]], "Modularization (again)": [[232, "modularization-again"]], "2022-01-26": [[232, "id7"]], "Modularization: Repeating Important Topics (Quickly)": [[232, "modularization-repeating-important-topics-quickly"]], "Classes (continued)": [[232, "classes-continued"]], "2022-01-27": [[232, "id8"]], "2022-01-28": [[232, "id9"]], "Standard Template Library: Container Templates": [[232, "standard-template-library-container-templates"]], "2022-01-31": [[232, "id10"]], "2022-02-01": [[232, "id11"]], "Algorithms": [[232, "algorithms"], [612, "algorithms"]], "Functors": [[232, "functors"]], "Unified Modeling Language (UML)": [[232, "unified-modeling-language-uml"]], "Exercise (Using All From Today)": [[232, "exercise-using-all-from-today"]], "2022-02-02": [[232, "id12"]], "Associative Container: std::map": [[232, "associative-container-std-map"]], "Exceptions, and Exception Handling": [[232, "exceptions-and-exception-handling"]], "2022-02-03": [[232, "id13"]], "2022-02-04": [[232, "id14"]], "C++11: A New Language": [[232, "c-11-a-new-language"]], "Dynamic Allocation, Smart Pointers": [[232, "dynamic-allocation-smart-pointers"]], "2022-02-07: Start of Exercise Week": [[232, "start-of-exercise-week"]], "Programmierung Grundlagen, anhand von Python (2022-01-17 - 2022-01-10)": [[233, "programmierung-grundlagen-anhand-von-python-2022-01-17-2022-01-10"], [360, "programmierung-grundlagen-anhand-von-python-2022-01-17-2022-01-10"]], "2022-01-17": [[234, "2022-01-17"]], "Variables and Datatypes": [[234, "Variables-and-Datatypes"]], "Comments vs Docstrings": [[234, "Comments-vs-Docstrings"]], "Integer (Ganze Zahl)": [[234, "Integer-(Ganze-Zahl)"]], "Integer Numbers: Arithmetic": [[234, "Integer-Numbers:-Arithmetic"], [246, "Integer-Numbers:-Arithmetic"], [1039, "integer-numbers-arithmetic"]], "Some Methods": [[234, "Some-Methods"]], "String Formatting: f-Strings": [[234, "String-Formatting:-f-Strings"]], "More about Strings": [[234, "More-about-Strings"]], "if": [[234, "if"], [274, "if"]], "2022-01-18": [[234, "2022-01-18"]], "Miscellanea": [[234, "Miscellanea"]], "Braces: Single Element Tuples?": [[234, "Braces:-Single-Element-Tuples?"]], "Ranges -> range() (hour_of_day)": [[234, "Ranges-->-range()-(hour_of_day)"]], "while Loops": [[234, "while-Loops"], [236, "while-Loops"], [249, "while-Loops"], [316, "while-Loops"], [1043, "while-loops"], [1043, "id1"]], "break and continue": [[234, "break-and-continue"], [402, "break-and-continue"], [402, "id1"], [1043, "break-and-continue"]], "yield, Generator, Iteration Protocol": [[234, "yield,-Generator,-Iteration-Protocol"]], "Sequence Membership": [[234, "Sequence-Membership"], [1044, "sequence-membership"]], "list (mutable)": [[234, "list-(mutable)"]], "tuple (immutable)": [[234, "tuple-(immutable)"]], "dict (mutable)": [[234, "dict-(mutable)"]], "set (mutable)": [[234, "set-(mutable)"]], "Why Index Based Iteration is not Always the Best Way to Iterate": [[234, "Why-Index-Based-Iteration-is-not-Always-the-Best-Way-to-Iterate"]], "How to get Indexes if There are None? (enumerate(), and Tuple Unpacking)": [[234, "How-to-get-Indexes-if-There-are-None?-(enumerate(),-and-Tuple-Unpacking)"]], "Default Parameters": [[234, "Default-Parameters"], [236, "Default-Parameters"], [338, "Default-Parameters"], [1050, "default-parameters"]], "List Comprehensions": [[234, "List-Comprehensions"], [246, "List-Comprehensions"]], "Iteration over Dictionaries": [[234, "Iteration-over-Dictionaries"]], "Building Dictionaries": [[234, "Building-Dictionaries"], [1056, "building-dictionaries"]], "More on Sets": [[234, "More-on-Sets"]], "with: Context Managers": [[234, "with:-Context-Managers"]], "Strings Intro": [[236, "Strings-Intro"]], "Doc Strings": [[236, "Doc-Strings"]], "Object Identity": [[236, "Object-Identity"]], "Integers": [[236, "Integers"], [246, "Integers"], [249, "Integers"], [267, "Integers"], [274, "Integers"], [294, "Integers"], [310, "Integers"], [316, "Integers"], [322, "Integers"]], "Variablen? Datenypen?": [[236, "Variablen?-Datenypen?"]], "Objects, Classes": [[236, "Objects,-Classes"]], "Python Standard Libarary Examples": [[236, "Python-Standard-Libarary-Examples"]], "collections": [[236, "collections"]], "ChainMap": [[236, "ChainMap"]], "deque": [[236, "deque"]], "Suchalgorithmen und Datenstrukturen (Ausflug)": [[236, "Suchalgorithmen-und-Datenstrukturen-(Ausflug)"]], "Slice Assignment": [[236, "Slice-Assignment"], [1045, "slice-assignment"]], "Lists are mutable": [[236, "Lists-are-mutable"]], "Shallow copy and deep copy": [[236, "Shallow-copy-and-deep-copy"]], "else": [[236, "else"], [242, "else"]], "for Loops, range()": [[236, "for-Loops,-range()"]], "Default Parameters: Pitfalls": [[236, "Default-Parameters:-Pitfalls"]], "dict.fromkeys()": [[236, "dict.fromkeys()"], [249, "dict.fromkeys()"]], "Generators": [[236, "Generators"], [242, "Generators"], [282, "generators"], [283, "generators"], [287, "generators"], [304, "generators"], [308, "generators"]], "join, split": [[236, "join,-split"]], "strip, lstrip, rstrip": [[236, "strip,-lstrip,-rstrip"]], "Python Basics (2022-02-23 - 2022-02-25)": [[237, "python-basics-2022-02-23-2022-02-25"], [360, "python-basics-2022-02-23-2022-02-25"]], "Data Structures": [[237, "data-structures"]], "OS Things": [[237, "os-things"]], "Data Science": [[237, "data-science"], [305, "data-science"], [306, "Data-Science"]], "Wiederholung": [[239, "Wiederholung"]], "Mutable/Immutable": [[239, "Mutable/Immutable"]], "Attribute": [[239, "Attribute"]], "Sequentielle vs. Konstante Suchzeit": [[239, "Sequentielle-vs.-Konstante-Suchzeit"]], "Exceptions": [[239, "Exceptions"], [255, "Exceptions"], [280, "exceptions"], [314, "exceptions"], [320, "exceptions"], [545, "exceptions"], [592, "exceptions"], [326, "exceptions"], [593, "exceptions"]], "for vs. while, range()": [[239, "for-vs.-while,-range()"]], "String Methods (some)": [[239, "String-Methods-(some)"]], "eval()": [[239, "eval()"], [249, "eval()"], [306, "eval()"]], "exec()": [[239, "exec()"], [255, "exec()"], [316, "exec()"]], "Dictionary Iteration": [[239, "Dictionary-Iteration"]], "Classes, Attributes, OO": [[239, "Classes,-Attributes,-OO"]], "Types and Instances": [[239, "Types-and-Instances"]], "Metaprogramming? Types? What is a Type?": [[239, "Metaprogramming?-Types?-What-is-a-Type?"]], "OO Everywhere": [[239, "OO-Everywhere"]], "Dictionary Operations": [[239, "Dictionary-Operations"]], "collections.defaultdict": [[239, "collections.defaultdict"], [264, "collections.defaultdict"]], "Python Advanced (2022-03-15 - 2022-03-17, 2022-03-31)": [[240, "python-advanced-2022-03-15-2022-03-17-2022-03-31"]], "2022-03-15": [[240, "id1"]], "2022-03-16": [[240, "id2"]], "Test Driven Development": [[240, "test-driven-development"], [282, "test-driven-development"], [304, "test-driven-development"], [305, "test-driven-development"]], "2022-03-17": [[240, "id3"]], "2022-03-31": [[240, "id4"]], "Hello World": [[242, "Hello-World"], [364, "hello-world"], [1034, "hello-world"]], "Blahblah": [[242, "Blahblah"], [602, "blahblah"], [1033, "blahblah"]], "Object Oriented?": [[242, "Object-Oriented?"]], "MQTT": [[242, "MQTT"], [308, "mqtt"], [1124, "mqtt"]], "Commandline Arguments": [[242, "Commandline-Arguments"], [416, "commandline-arguments"], [416, "id1"]], "Object Lifetime": [[242, "Object-Lifetime"]], "Boolean, Short Circuit Evaluation": [[242, "Boolean,-Short-Circuit-Evaluation"]], "More String Methods": [[242, "More-String-Methods"], [242, "id1"]], "Dictionary Preview": [[242, "Dictionary-Preview"]], "list: Mutable": [[242, "list:-Mutable"]], "list(): explicit constructor": [[242, "list():-explicit-constructor"]], "tuple: Immutable": [[242, "tuple:-Immutable"]], "dict: Mutable": [[242, "dict:-Mutable"]], "set: Mutable": [[242, "set:-Mutable"]], "List comprehension": [[242, "List-comprehension"]], "DIctionary Comprehension": [[242, "DIctionary-Comprehension"]], "Set Comprehension": [[242, "Set-Comprehension"], [306, "Set-Comprehension"], [316, "Set-Comprehension"], [1004, "set-comprehension"]], "max": [[242, "max"]], "for, enumerate()": [[242, "for,-enumerate()"]], "Iteratoren, Generatoren": [[242, "Iteratoren,-Generatoren"]], "Generatoren": [[242, "Generatoren"]], "split und join": [[242, "split-und-join"]], "strip()": [[242, "strip()"]], "dict vs. OrderedDict": [[242, "dict-vs.-OrderedDict"]], "Duck Typing": [[242, "Duck-Typing"], [1020, "duck-typing"]], "Interfaces": [[242, "Interfaces"], [641, "interfaces"]], "Implementation Inheritance": [[242, "Implementation-Inheritance"]], "Method Resolution Order (MRO), and super()": [[242, "Method-Resolution-Order-(MRO),-and-super()"]], "__bases__": [[242, "__bases__"]], "__mro__": [[242, "__mro__"]], "Object Layout (self)": [[242, "Object-Layout-(self)"]], "More from OO": [[242, "More-from-OO"]], "Calling Base Class Constructor (Many Ways)": [[242, "Calling-Base-Class-Constructor-(Many-Ways)"]], "Name Mangling (\u201cprivate\u201d Members)": [[242, "Name-Mangling-(%22private%22-Members)"]], "Yet Another Example From Udemy": [[242, "Yet-Another-Example-From-Udemy"]], "Exception Handling": [[242, "Exception-Handling"], [273, "exception-handling"], [276, "exception-handling"], [281, "exception-handling"], [353, "exception-handling"], [1007, "exception-handling"]], "Order of except Clauses": [[242, "Order-of-except-Clauses"]], "finally": [[242, "finally"]], "lambda": [[242, "lambda"]], "map(), filter()": [[242, "map(),-filter()"], [306, "map(),-filter()"]], "Generators, Iteration Protocol": [[242, "Generators,-Iteration-Protocol"]], "Class Variables (as Opposed to Instance Variables)": [[242, "Class-Variables-(as-Opposed-to-Instance-Variables)"]], "Python (2022-03-23, 2022-03-30, 2022-04-19 - 2022-03-21)": [[243, "python-2022-03-23-2022-03-30-2022-04-19-2022-03-21"], [360, "python-2022-03-23-2022-03-30-2022-04-19-2022-03-21"]], "2022-03-23: Basics": [[243, "basics"]], "2022-03-30: Basics": [[243, "id1"]], "2022-04-19, 2022-04-20, 2022-04-21: Advanced": [[243, "advanced"]], "Plan For The Wild Part": [[243, "plan-for-the-wild-part"]], "Programmierung Grundlagen, anhand von Python (2022-04-05 - 2022-04-08)": [[245, "programmierung-grundlagen-anhand-von-python-2022-04-05-2022-04-08"], [360, "programmierung-grundlagen-anhand-von-python-2022-04-05-2022-04-08"]], "Discussion: Flow Charts?": [[245, "discussion-flow-charts"]], "BlahBlah": [[246, "BlahBlah"], [249, "BlahBlah"], [252, "BlahBlah"], [316, "BlahBlah"]], "Interactive": [[246, "Interactive"]], "For Beginners": [[246, "For-Beginners"]], "Not For Beginners?": [[246, "Not-For-Beginners?"]], "Strings, 1st Explanation": [[246, "Strings,-1st-Explanation"]], "Operator Precedence": [[246, "Operator-Precedence"], [249, "Operator-Precedence"], [1039, "operator-precedence"]], "Floating Point Numbers": [[246, "Floating-Point-Numbers"], [1039, "floating-point-numbers"]], "Docstrings": [[246, "Docstrings"], [252, "Docstrings"], [337, "Docstrings"]], "Einschub: String-Vergleich vs. Integer-Vergleich": [[246, "Einschub:-String-Vergleich-vs.-Integer-Vergleich"]], "Random Numbers": [[246, "Random-Numbers"]], "Indexing and Slicing": [[246, "Indexing-and-Slicing"], [294, "Indexing-and-Slicing"], [1045, "indexing-and-slicing"]], "for Loops": [[246, "for-Loops"], [316, "for-Loops"], [367, "for-loops"], [1046, "for-loops"]], "range()": [[246, "range()"], [274, "range()"], [322, "range()"]], "Filterketten": [[246, "Filterketten"]], "Zen": [[246, "Zen"]], "Compound Datatypes By Example: List, Tuple": [[246, "Compound-Datatypes-By-Example:-List,-Tuple"], [1040, "compound-datatypes-by-example-list-tuple"]], "Compound Datatypes By Example: Dictionary": [[246, "Compound-Datatypes-By-Example:-Dictionary"], [1040, "compound-datatypes-by-example-dictionary"]], "Datensatz als Dictionary?": [[246, "Datensatz-als-Dictionary?"]], "JSON (Javascript Object Notation)": [[246, "JSON-(Javascript-Object-Notation)"]], "Compound Datatypes By Example: Set": [[246, "Compound-Datatypes-By-Example:-Set"], [1040, "compound-datatypes-by-example-set"]], "Das Letzte Beispiel am Letzten Tag": [[246, "Das-Letzte-Beispiel-am-Letzten-Tag"]], "Python Basics (2022-04-25 - 2022-04-27)": [[248, "python-basics-2022-04-25-2022-04-27"], [360, "python-basics-2022-04-25-2022-04-27"]], "Strings und Quotes": [[249, "Strings-und-Quotes"]], "Comments vs. Docstrings": [[249, "Comments-vs.-Docstrings"]], "Variables and Types": [[249, "Variables-and-Types"]], "Swap": [[249, "Swap"]], "Integers are Infinitely long": [[249, "Integers-are-Infinitely-long"]], "Floating Point Comparison": [[249, "Floating-Point-Comparison"]], "Mutability/Immutability": [[249, "Mutability/Immutability"]], "Exercise: Digit To English Word": [[249, "Exercise:-Digit-To-English-Word"]], "Exercise: Determine Maximum of Two Numbers": [[249, "Exercise:-Determine-Maximum-of-Two-Numbers"], [1072, "exercise-determine-maximum-of-two-numbers"], [1082, "exercise-determine-maximum-of-two-numbers"]], "Ranges": [[249, "Ranges"], [718, "ranges"]], "Exercise: Sort out Duplicates": [[249, "Exercise:-Sort-out-Duplicates"]], "Algorithmic Complexity": [[249, "Algorithmic-Complexity"]], "More On Dictionaries": [[249, "More-On-Dictionaries"]], "More On Sets": [[249, "More-On-Sets"]], "eval(), json": [[249, "eval(),-json"]], "Encoding": [[249, "Encoding"], [273, "encoding"], [294, "Encoding"], [310, "Encoding"], [310, "id1"], [342, "encoding"], [1121, "encoding"]], "Python (2022-05-02 - 2022-05-05)": [[251, "python-2022-05-02-2022-05-05"], [360, "python-2022-05-02-2022-05-05"]], "Control Flow and Iteration": [[251, "control-flow-and-iteration"]], "Encoding, Strings, and File I/O": [[251, "encoding-strings-and-file-i-o"]], "Excursion: CAN Communication, OO, Modules": [[251, "excursion-can-communication-oo-modules"]], "Modules": [[251, "modules"], [264, "Modules"], [305, "modules"], [342, "modules"], [713, "modules"], [1015, "modules"]], "CSV, Functions": [[251, "csv-functions"]], "PyPI, Virtual Environments": [[251, "pypi-virtual-environments"]], "Requirements Engineering, Test Driven Development": [[251, "requirements-engineering-test-driven-development"]], "More On DataTypes": [[251, "more-on-datatypes"]], "Random Topics": [[251, "random-topics"]], "Standard Library": [[251, "standard-library"]], "Hello Jupyter Notebook": [[252, "Hello-Jupyter-Notebook"]], "Syntax etc": [[252, "Syntax-etc"]], "Mutability": [[252, "Mutability"], [284, "Mutability"]], "Removing Elements": [[252, "Removing-Elements"], [623, "removing-elements"]], "Nested Lists?": [[252, "Nested-Lists?"]], "while loops, and else": [[252, "while-loops,-and-else"]], "for loops (and else)": [[252, "for-loops-(and-else)"]], "The range() Function, Iterator Protocol": [[252, "The-range()-Function,-Iterator-Protocol"]], "Encoding, and String": [[252, "Encoding,-and-String"]], "Regular Expression": [[252, "Regular-Expression"]], "f-Strings (since Python 3.6 !!)": [[252, "f-Strings-(since-Python-3.6-!!)"]], "Tuples Containing Only One Element": [[252, "Tuples-Containing-Only-One-Element"]], "Iterables, Lists, and the itertools Modules": [[252, "Iterables,-Lists,-and-the-itertools-Modules"]], "itertools.chain()": [[252, "itertools.chain()"]], "Destructor?": [[252, "Destructor?"]], "Tuple Unpacking on Dictionaries": [[252, "Tuple-Unpacking-on-Dictionaries"]], "Python Advanced (2022-05-16 - 2022-05-18)": [[254, "python-advanced-2022-05-16-2022-05-18"], [360, "python-advanced-2022-05-16-2022-05-18"]], "Project Management": [[254, "project-management"], [305, "project-management"], [349, "project-management"], [350, "project-management"], [354, "project-management"]], "Unit Testing, Test Driven Development": [[254, "unit-testing-test-driven-development"]], "Object Priented Programming": [[254, "object-priented-programming"]], "OO: next exercise (CSV as always \ud83d\ude44)": [[254, "oo-next-exercise-csv-as-always-rolling-eyes"]], "Exercise: Exception Handling": [[254, "exercise-exception-handling"]], "Standesregister nach SQLite3": [[254, "standesregister-nach-sqlite3"]], "XML/Element Tree": [[254, "xml-element-tree"]], "Projektabschlusstag": [[254, "projektabschlusstag"]], "Basic Python": [[254, "basic-python"], [1170, "basic-python"]], "Assert": [[255, "Assert"]], "The id() function": [[255, "The-id()-function"]], "class Person": [[255, "class-Person"]], "Functions That Do Not Return Anything": [[255, "Functions-That-Do-Not-Return-Anything"]], "Classes, Attributes, und so (Dictionaries Everywhere!)": [[255, "Classes,-Attributes,-und-so-(Dictionaries-Everywhere!)"]], "Globale, lokale, und Class Variablen": [[255, "Globale,-lokale,-und-Class-Variablen"]], "Defining my Own Exceptions": [[255, "Defining-my-Own-Exceptions"]], "Dictionary Lookup, keys() etc.": [[255, "Dictionary-Lookup,-keys()-etc."]], "Integers, Strings, und so": [[255, "Integers,-Strings,-und-so"]], "Vorbesprechung 2022-05-11": [[257, "vorbesprechung-2022-05-11"]], "Legende": [[257, "legende"]], "Neuerungen in C++ seit 2011": [[257, "neuerungen-in-c-seit-2011"]], "Neuerungen in C++ 14": [[257, "neuerungen-in-c-14"]], "Neuerungen in C++ 17": [[257, "neuerungen-in-c-17"]], "Neuerungen in C++ 20 (Ausblick)": [[257, "neuerungen-in-c-20-ausblick"]], "C++: A New Language Starting In 2011": [[258, "c-a-new-language-starting-in-2011"], [259, "c-a-new-language-starting-in-2011"]], "Metadata": [[258, "metadata"], [259, "metadata"], [261, "metadata"], [892, "metadata"]], "Introduction": [[258, "introduction"], [259, "introduction"], [261, "introduction"], [280, "introduction"], [281, "introduction"], [363, "introduction"], [442, "introduction"], [473, "introduction"], [568, "introduction"], [665, "introduction"], [724, "introduction"], [810, "introduction"], [1007, "introduction"], [380, "introduction"]], "Pythonicity (Thank You: Readablility and Writability)": [[258, "pythonicity-thank-you-readablility-and-writability"], [259, "pythonicity-thank-you-readablility-and-writability"], [261, "pythonicity-thank-you-readablility-and-writability"]], "Range Based for Loops": [[258, "range-based-for-loops"], [259, "range-based-for-loops"], [261, "range-based-for-loops"], [318, "range-based-for-loops"]], "Tuple Unpacking (err, Structured Binding)": [[258, "tuple-unpacking-err-structured-binding"], [259, "tuple-unpacking-err-structured-binding"], [261, "tuple-unpacking-err-structured-binding"], [318, "tuple-unpacking-err-structured-binding"]], "Duck Typing (err, auto) Without A Duck": [[258, "duck-typing-err-auto-without-a-duck"], [259, "duck-typing-err-auto-without-a-duck"], [261, "duck-typing-err-auto-without-a-duck"], [318, "duck-typing-err-auto-without-a-duck"]], "Things That Simply Deserved Fixing Since Ages": [[258, "things-that-simply-deserved-fixing-since-ages"], [259, "things-that-simply-deserved-fixing-since-ages"], [261, "things-that-simply-deserved-fixing-since-ages"]], "Brace Initialization": [[258, "brace-initialization"], [259, "brace-initialization"], [261, "brace-initialization"], [318, "brace-initialization"], [319, "brace-initialization"]], "New OO keywords: override, final, default, delete": [[258, "new-oo-keywords-override-final-default-delete"], [259, "new-oo-keywords-override-final-default-delete"], [261, "new-oo-keywords-override-final-default-delete"], [318, "new-oo-keywords-override-final-default-delete"]], "Strongly Typed enum": [[258, "strongly-typed-enum"], [259, "strongly-typed-enum"], [261, "strongly-typed-enum"], [318, "strongly-typed-enum"], [668, "strongly-typed-enum"]], "Delegating Constructor": [[258, "delegating-constructor"], [259, "delegating-constructor"], [261, "delegating-constructor"], [318, "delegating-constructor"], [673, "delegating-constructor"]], "nullptr": [[258, "nullptr"], [259, "nullptr"], [261, "nullptr"], [318, "nullptr"], [681, "nullptr"]], "Smart Pointers": [[258, "smart-pointers"], [259, "smart-pointers"], [261, "smart-pointers"], [281, "smart-pointers"], [319, "smart-pointers"], [545, "smart-pointers"]], "Moving, \u201cRValue References\u201d": [[258, "moving-rvalue-references"], [259, "moving-rvalue-references"]], "Functions (std::bind<>, std::function<>, Lambdas)": [[258, "functions-std-bind-std-function-lambdas"], [259, "functions-std-bind-std-function-lambdas"], [261, "functions-std-bind-std-function-lambdas"]], "Work Environment": [[259, "work-environment"], [261, "work-environment"], [279, "work-environment"], [280, "work-environment"], [281, "work-environment"], [349, "work-environment"]], "Skeleton Project": [[259, "skeleton-project"], [261, "skeleton-project"], [587, "skeleton-project"]], "Linux Basics (2022-10-03 - 2022-10-05)": [[260, "linux-basics-2022-10-03-2022-10-05"], [360, "linux-basics-2022-10-03-2022-10-05"]], "C++: A New Language Starting In 2011 (2022-10-11 - 2022-10-13)": [[261, "c-a-new-language-starting-in-2011-2022-10-11-2022-10-13"], [360, "c-a-new-language-starting-in-2011-2022-10-11-2022-10-13"]], "Moving, \u201cRValue References\u201d, And Perfect Forwarding": [[261, "moving-rvalue-references-and-perfect-forwarding"]], "News in C++20 (2023-06-13)": [[261, "news-in-c-20-2023-06-13"]], "Coroutines and C++23 Generators": [[261, "coroutines-and-c-23-generators"]], "Ranges And Views": [[261, "ranges-and-views"]], "Concepts": [[261, "concepts"], [318, "concepts"], [683, "concepts"]], "Design- and Architectural Patterns With C++ (2022-10-24 - 2022-10-26)": [[262, "design-and-architectural-patterns-with-c-2022-10-24-2022-10-26"], [360, "design-and-architectural-patterns-with-c-2022-10-24-2022-10-26"]], "Monday": [[262, "monday"]], "Tuesday": [[262, "tuesday"]], "Wednesday": [[262, "wednesday"]], "Python: Tour-De-Force (2022-11-07 - 2022-11-10, 2022-12-01)": [[263, "python-tour-de-force-2022-11-07-2022-11-10-2022-12-01"]], "Up Front: Project Management": [[263, "up-front-project-management"], [282, "up-front-project-management"], [304, "up-front-project-management"]], "Object Oriented Programming: Classes": [[263, "object-oriented-programming-classes"]], "Exercise Series: CSV": [[263, "exercise-series-csv"]], "Missing Pieces: Encoding, Unit Testing": [[263, "missing-pieces-encoding-unit-testing"]], "Exercise Series: CSV, JSON": [[263, "exercise-series-csv-json"]], "Iteration, Generators": [[263, "iteration-generators"]], "Going Dynamic: type(), exec()": [[263, "going-dynamic-type-exec"]], "More OO: Inheritance, Abstract Base Classes": [[263, "more-oo-inheritance-abstract-base-classes"]], "Group Project Kickoff": [[263, "group-project-kickoff"], [283, "group-project-kickoff"], [305, "group-project-kickoff"], [308, "group-project-kickoff"]], "Data Structures Recap": [[263, "data-structures-recap"]], "Miscellaneous Livehacking": [[263, "miscellaneous-livehacking"]], "Function Arguments, Closures, Decorators": [[263, "function-arguments-closures-decorators"], [298, "function-arguments-closures-decorators"]], "Exceptions, with": [[263, "exceptions-with"], [298, "exceptions-with"], [301, "exceptions-with"]], "Package Management": [[263, "package-management"]], "Videos": [[263, "videos"], [309, "videos"]], "Beginner": [[263, "beginner"], [287, "beginner"]], "Advanced": [[263, "advanced"], [287, "advanced"]], "Fun": [[263, "fun"]], "Python (2022-10-17)": [[264, "Python-(2022-10-17)"]], "Tuple Unpacking, Lists Iteration, And Such": [[264, "Tuple-Unpacking,-Lists-Iteration,-And-Such"]], "Variables, Types": [[264, "Variables,-Types"]], "Immutable? References?": [[264, "Immutable?-References?"]], "And range()?": [[264, "And-range()?"]], "More About Dictionaries": [[264, "More-About-Dictionaries"], [264, "id1"], [267, "More-About-Dictionaries"], [294, "More-About-Dictionaries"], [316, "More-About-Dictionaries"], [322, "More-About-Dictionaries"], [1056, "more-about-dictionaries"]], "More About Lists": [[264, "More-About-Lists"], [267, "More-About-Lists"], [294, "More-About-Lists"], [316, "More-About-Lists"], [322, "More-About-Lists"], [1055, "more-about-lists"]], "Python (2022-11-16 - 2022-11-18)": [[266, "python-2022-11-16-2022-11-18"], [267, "Python-(2022-11-16---2022-11-18)"], [360, "python-2022-11-16-2022-11-18"]], "Control Flow, Sequences, Iteration": [[266, "control-flow-sequences-iteration"], [273, "control-flow-sequences-iteration"], [276, "control-flow-sequences-iteration"], [286, "control-flow-sequences-iteration"], [287, "control-flow-sequences-iteration"], [292, "control-flow-sequences-iteration"], [293, "control-flow-sequences-iteration"], [293, "id2"], [314, "control-flow-sequences-iteration"], [315, "control-flow-sequences-iteration"], [320, "control-flow-sequences-iteration"], [321, "control-flow-sequences-iteration"], [326, "control-flow-sequences-iteration"]], "More Datatypes": [[266, "more-datatypes"], [273, "more-datatypes"], [276, "more-datatypes"], [286, "more-datatypes"], [287, "more-datatypes"], [287, "id2"], [292, "more-datatypes"], [293, "more-datatypes"], [314, "more-datatypes"], [315, "more-datatypes"], [320, "more-datatypes"], [365, "more-datatypes"], [326, "more-datatypes"]], "Exercise Series: CSV Files": [[266, "exercise-series-csv-files"], [286, "exercise-series-csv-files"], [287, "exercise-series-csv-files"], [292, "exercise-series-csv-files"], [293, "exercise-series-csv-files"], [314, "exercise-series-csv-files"], [315, "exercise-series-csv-files"], [321, "exercise-series-csv-files"], [326, "exercise-series-csv-files"]], "Advanced Language Features": [[266, "advanced-language-features"], [286, "advanced-language-features"], [287, "advanced-language-features"], [292, "advanced-language-features"], [428, "advanced-language-features"]], "Noob Exercises": [[266, "noob-exercises"]], "Object Oriented": [[267, "Object-Oriented"]], "Lists and Tuples": [[267, "Lists-and-Tuples"]], "for, and Iteration, and Generators": [[267, "for,-and-Iteration,-and-Generators"]], "Lists, Dictionaries, Generators, Constructors": [[267, "Lists,-Dictionaries,-Generators,-Constructors"]], "And Lists? Mutable!": [[267, "And-Lists?-Mutable!"]], "Tuples?": [[267, "Tuples?"]], "set": [[267, "set"]], "More About Sets": [[267, "More-About-Sets"], [294, "More-About-Sets"], [322, "More-About-Sets"], [1057, "more-about-sets"]], "Comprehensions (List, Dictionary, Set)": [[267, "Comprehensions-(List,-Dictionary,-Set)"], [316, "Comprehensions-(List,-Dictionary,-Set)"], [1004, "comprehensions-list-dictionary-set"]], "Generator Expressions": [[267, "Generator-Expressions"]], "eval and exec": [[267, "eval-and-exec"]], "Linux Basics (2023-01-23 - 2023-01-26)": [[269, "linux-basics-2023-01-23-2023-01-26"], [360, "linux-basics-2023-01-23-2023-01-26"]], "Embedded Linux Systems Programming (2023-02-13 - 2023-02-17)": [[270, "embedded-linux-systems-programming-2023-02-13-2023-02-17"], [360, "embedded-linux-systems-programming-2023-02-13-2023-02-17"]], "WSL For Core Linux Topics": [[270, "wsl-for-core-linux-topics"]], "Cross Development For Hardware Topics": [[270, "cross-development-for-hardware-topics"]], "Day 1: Overview": [[270, "day-1-overview"]], "Introductory Live Hacking": [[270, "introductory-live-hacking"]], "The Shell": [[270, "the-shell"]], "Processes Quick Walk-Through": [[270, "processes-quick-walk-through"]], "Permissions": [[270, "permissions"]], "Development: CMake Quick Intro, And Git Quick Intro": [[270, "development-cmake-quick-intro-and-git-quick-intro"]], "UART": [[270, "uart"]], "SUSI": [[270, "susi"]], "Secure Shell (SSH)": [[270, "secure-shell-ssh"]], "Miscellaneous Hardware": [[270, "miscellaneous-hardware"]], "Group Exercise": [[270, "group-exercise"]], "Untold": [[270, "untold"], [280, "untold"], [283, "untold"]], "More From The Commandline": [[270, "more-from-the-commandline"]], "Multithreading (And C++)": [[270, "multithreading-and-c"]], "Whetting Your Appetite (Jupyter Notebook)": [[271, "Whetting-Your-Appetite-(Jupyter-Notebook)"]], "Filter in Pandas": [[271, "Filter-in-Pandas"]], "Copy vs Reference": [[271, "Copy-vs-Reference"]], "Immutable": [[271, "Immutable"]], "String": [[271, "String"]], "Regex": [[271, "Regex"]], "Whetting Your Appetite (Livehacking Demo)": [[272, "whetting-your-appetite-livehacking-demo"]], "Pipeline Driver": [[272, "pipeline-driver"]], "Virtual Environment Setup": [[272, "virtual-environment-setup"]], "Filter: Add Category: card-payment": [[272, "filter-add-category-card-payment"]], "Filter: Select Uncategorized": [[272, "filter-select-uncategorized"]], "More Categories": [[272, "more-categories"]], "Python For SAP Developers (2023-03-13 - 2023-03-15)": [[273, "python-for-sap-developers-2023-03-13-2023-03-15"], [360, "python-for-sap-developers-2023-03-13-2023-03-15"]], "Day 1 (Basics)": [[273, "day-1-basics"]], "Demo": [[273, "demo"]], "Day 2 (Basics, Continued)": [[273, "day-2-basics-continued"]], "Pandas": [[273, "pandas"], [274, "Pandas"], [276, "pandas"], [280, "pandas"], [305, "pandas"], [1128, "pandas"]], "Hacking About On A SAP Test Dataset": [[273, "hacking-about-on-a-sap-test-dataset"], [277, "hacking-about-on-a-sap-test-dataset"]], "Untold (From Original Agenda)": [[273, "untold-from-original-agenda"]], "OO Introduction": [[273, "oo-introduction"], [276, "oo-introduction"]], "Context Managers (Automatic Cleanup)": [[273, "context-managers-automatic-cleanup"], [276, "context-managers-automatic-cleanup"]], "Iteration, Generators, Comprehensions": [[273, "iteration-generators-comprehensions"], [276, "iteration-generators-comprehensions"]], "Decorators, and Related Topics": [[273, "decorators-and-related-topics"], [276, "decorators-and-related-topics"]], "Machine Learning: Pandas, NumPy, And Algorithms": [[273, "machine-learning-pandas-numpy-and-algorithms"]], "2023-03-13": [[274, "2023-03-13"]], "Comment vs Docstring": [[274, "Comment-vs-Docstring"]], "Mutable? Immutable?": [[274, "Mutable?-Immutable?"]], "Lists": [[274, "Lists"], [274, "id2"], [288, "Lists"]], "Tuples": [[274, "Tuples"]], "DataType Conversiosn": [[274, "DataType-Conversiosn"]], "String, File IO Exercise": [[274, "String,-File-IO-Exercise"]], "Python For SAP Developers (Jupyter Notebook)": [[275, "python-for-sap-developers-jupyter-notebook"]], "Original Agenda: Python For SAP Developers (2023-03-13 - 2023-03-15)": [[276, "original-agenda-python-for-sap-developers-2023-03-13-2023-03-15"]], "Day 1: Basics": [[276, "day-1-basics"], [309, "day-1-basics"]], "Day 2: Outlook Into Advanced Python": [[276, "day-2-outlook-into-advanced-python"]], "Day 3: Domain Specifics": [[276, "day-3-domain-specifics"]], "NumPy": [[276, "numpy"], [305, "numpy"]], "Some Usecases On A Test Dataset From SAP": [[278, "Some-Usecases-On-A-Test-Dataset-From-SAP"]], "Dropping Columns That Contain Only NaN Values": [[278, "Dropping-Columns-That-Contain-Only-NaN-Values"]], "DataFrame.isna()": [[278, "DataFrame.isna()"]], "DataFrame.all() (and any())": [[278, "DataFrame.all()-(and-any())"]], "Column Selection": [[278, "Column-Selection"]], "Dropping Columns": [[278, "Dropping-Columns"]], "Fixing Date Values/Columns, And Operating With Date And Time": [[278, "Fixing-Date-Values/Columns,-And-Operating-With-Date-And-Time"]], "pandas.to_datetime()": [[278, "pandas.to_datetime()"]], "Converting The Entire DateDATE Column To A Workable Type (And Working With It)": [[278, "Converting-The-Entire-DateDATE-Column-To-A-Workable-Type-(And-Working-With-It)"]], "Conversion": [[278, "Conversion"]], "Usage: A Filter": [[278, "Usage:-A-Filter"]], "Modify Rows: Increase All Prices Of One Particular Store By 10%": [[278, "Modify-Rows:-Increase-All-Prices-Of-One-Particular-Store-By-10%"]], "Filter Readability: Combining Filters": [[278, "Filter-Readability:-Combining-Filters"]], "C++ For Embedded Developers (2023-03-20 - 2023-03-23)": [[279, "c-for-embedded-developers-2023-03-20-2023-03-23"]], "Preferred: Ubuntu under Windows (WSL)": [[279, "preferred-ubuntu-under-windows-wsl"], [281, "preferred-ubuntu-under-windows-wsl"]], "Unsupported Environments": [[279, "unsupported-environments"]], "Skeleton Project Setup": [[279, "skeleton-project-setup"], [281, "skeleton-project-setup"]], "Classes, Objects, Methods": [[279, "classes-objects-methods"]], "Heavy Weight OO \ud83d\udcaa": [[279, "heavy-weight-oo-muscle"], [281, "heavy-weight-oo-muscle"]], "Resource Management Pitfalls": [[279, "resource-management-pitfalls"]], "R-Value References/Moving, And Managed Pointers": [[279, "r-value-references-moving-and-managed-pointers"]], "A Little Concurrency": [[279, "a-little-concurrency"]], "Untold So Far": [[279, "untold-so-far"]], "C++ Standard Library": [[279, "c-standard-library"]], "Miscellaneous Topics": [[279, "miscellaneous-topics"]], "Clean Code Development With Python (2023-03-28 - 2023-03-29)": [[280, "clean-code-development-with-python-2023-03-28-2023-03-29"]], "Clean Code?": [[280, "clean-code"], [282, "clean-code"], [283, "clean-code"]], "Demo Hacking": [[280, "demo-hacking"]], "Python Development: Select Topics": [[280, "python-development-select-topics"]], "Built-In Types: Facts": [[280, "built-in-types-facts"]], "for Loops, And The Iterator Protocol": [[280, "for-loops-and-the-iterator-protocol"]], "Day 2: Clean Code? (Software Development: A Craft)": [[280, "day-2-clean-code-software-development-a-craft"]], "Closures, And Function Parameters": [[280, "closures-and-function-parameters"]], "Generators (Again), yield Fixtures, And yield Context Managers": [[280, "generators-again-yield-fixtures-and-yield-context-managers"]], "Decorators (The Ominous @)": [[280, "decorators-the-ominous"]], "Modules And Packages": [[280, "modules-and-packages"], [304, "modules-and-packages"]], "Design Patterns": [[280, "design-patterns"]], "C++ For Embedded Developers (2023-04-18 - 2023-04-20)": [[281, "c-for-embedded-developers-2023-04-18-2023-04-20"], [360, "c-for-embedded-developers-2023-04-18-2023-04-20"]], "Some Details": [[281, "some-details"]], "Standard Template Library": [[281, "standard-template-library"], [635, "standard-template-library"]], "Warm-Up": [[281, "warm-up"]], "Sensor Exercise, Resolved": [[281, "sensor-exercise-resolved"]], "OO, Cont\u2019d": [[281, "oo-cont-d"]], "Smart Pointers (Continued)": [[281, "smart-pointers-continued"]], "Exercises: Containers And Algorithms": [[281, "exercises-containers-and-algorithms"]], "Exercises: OO And Interfaces": [[281, "exercises-oo-and-interfaces"]], "Agenda: Python Advanced (2023-04-24 - 2023-04-26)": [[282, "agenda-python-advanced-2023-04-24-2023-04-26"]], "Day 1: Python Inside Out": [[282, "day-1-python-inside-out"], [283, "day-1-python-inside-out"]], "Exercise Prerequisites": [[282, "exercise-prerequisites"], [304, "exercise-prerequisites"]], "References And Other Pitfalls": [[282, "references-and-other-pitfalls"]], "Looping Constructs (With An Emphasis On The else Clause)": [[282, "looping-constructs-with-an-emphasis-on-the-else-clause"], [304, "looping-constructs-with-an-emphasis-on-the-else-clause"], [308, "looping-constructs-with-an-emphasis-on-the-else-clause"]], "Closures, Decorators And More": [[282, "closures-decorators-and-more"], [283, "closures-decorators-and-more"], [304, "closures-decorators-and-more"], [308, "closures-decorators-and-more"]], "Dynamic Features": [[282, "dynamic-features"], [283, "dynamic-features"], [284, "Dynamic-Features"], [304, "dynamic-features"], [308, "dynamic-features"]], "Error Handling And Recovery": [[282, "error-handling-and-recovery"], [283, "error-handling-and-recovery"], [304, "error-handling-and-recovery"], [305, "error-handling-and-recovery"], [308, "error-handling-and-recovery"]], "Miscellaneous Threading": [[282, "miscellaneous-threading"], [283, "miscellaneous-threading"]], "Day 2: Clean Code (In A Broader Sense), Group Project Kickoff": [[282, "day-2-clean-code-in-a-broader-sense-group-project-kickoff"]], "Group Project: Discussion": [[282, "group-project-discussion"]], "Design Patterns Overview": [[282, "design-patterns-overview"], [283, "design-patterns-overview"]], "Day 3: Group Project": [[282, "day-3-group-project"], [283, "day-3-group-project"]], "Python Advanced (2023-04-24 - 2023-04-26)": [[283, "python-advanced-2023-04-24-2023-04-26"], [360, "python-advanced-2023-04-24-2023-04-26"]], "Day 2: Object Oriented Programming, And Miscellaneous Discussion": [[283, "day-2-object-oriented-programming-and-miscellaneous-discussion"]], "Morning Opening": [[283, "morning-opening"]], "Object Oriented Programming (Continued)": [[283, "object-oriented-programming-continued"]], "Project Setup (IDE Usage?)": [[283, "project-setup-ide-usage"]], "Continue Hacking": [[283, "continue-hacking"]], "Test Driven Development, pytest": [[283, "test-driven-development-pytest"]], "Jupyter Notebook: Python Advanced (2023-04-24 - 2023-04-26)": [[284, "Jupyter-Notebook:-Python-Advanced-(2023-04-24---2023-04-26)"]], "is vs. ==": [[284, "is-vs.-=="]], "Compound DataTypes": [[284, "Compound-DataTypes"]], "class": [[284, "class"]], "Jupyter Notebook (Structure): Python Advanced (2023-04-24 - 2023-04-26)": [[285, "jupyter-notebook-structure-python-advanced-2023-04-24-2023-04-26"]], "Agenda: Python Basics (2023-05-15 - 2023-05-17)": [[286, "agenda-python-basics-2023-05-15-2023-05-17"]], "Python Basics (2023-05-15 - 2023-05-17)": [[287, "python-basics-2023-05-15-2023-05-17"], [288, "Python-Basics-(2023-05-15---2023-05-17)"], [360, "python-basics-2023-05-15-2023-05-17"]], "Morning Awakening": [[287, "morning-awakening"]], "A Bit Of venv, A Bit Of pip": [[287, "a-bit-of-venv-a-bit-of-pip"]], "Modules from Standard Library": [[287, "modules-from-standard-library"], [1108, "modules-from-standard-library"]], "Immutable vs. Mutable": [[288, "Immutable-vs.-Mutable"]], "The range Function": [[288, "The-range-Function"], [1047, "the-range-function"]], "Lambda, And Functional Programming Tools": [[288, "Lambda,-And-Functional-Programming-Tools"]], "Agenda: Linux Basics (2023-05-23 - 2023-05-25)": [[290, "agenda-linux-basics-2023-05-23-2023-05-25"]], "Linux Basics (2023-05-23 - 2023-05-25)": [[291, "linux-basics-2023-05-23-2023-05-25"], [360, "linux-basics-2023-05-23-2023-05-25"]], "Introduction: Concepts and Terminology": [[291, "introduction-concepts-and-terminology"], [844, "introduction-concepts-and-terminology"]], "The Shell (Bash - \u201cBourne Again Shell\u201d)": [[291, "the-shell-bash-bourne-again-shell"], [291, "id1"], [890, "the-shell-bash-bourne-again-shell"]], "Tools: Inspecting Text Files": [[291, "tools-inspecting-text-files"], [900, "tools-inspecting-text-files"]], "File System Permissions": [[291, "file-system-permissions"], [291, "id2"], [865, "file-system-permissions"]], "Morning Wakeup": [[291, "morning-wakeup"], [293, "morning-wakeup"], [319, "morning-wakeup"]], "I/O Redirection And Pipes": [[291, "i-o-redirection-and-pipes"], [851, "i-o-redirection-and-pipes"]], "Archiving and Compression": [[291, "archiving-and-compression"], [833, "archiving-and-compression"], [835, "archiving-and-compression"]], "Networking": [[291, "networking"]], "Processes And Scheduling": [[291, "processes-and-scheduling"]], "SSH: Secure Shell": [[291, "ssh-secure-shell"], [922, "ssh-secure-shell"]], "Shell Scripting (at least some of it)": [[291, "shell-scripting-at-least-some-of-it"]], "Agenda: Python Basics (2023-06-20 - 2023-06-22)": [[292, "agenda-python-basics-2023-06-20-2023-06-22"]], "Python Basics (2023-06-20 - 2023-06-22)": [[293, "python-basics-2023-06-20-2023-06-22"], [294, "Python-Basics-(2023-06-20---2023-06-22)"], [360, "python-basics-2023-06-20-2023-06-22"]], "Day2": [[293, "day2"]], "File I/O, And Encoding": [[293, "file-i-o-and-encoding"]], "Python Videos": [[293, "python-videos"]], "NumPy, Pandas, Matplotlib": [[293, "numpy-pandas-matplotlib"]], "DataTypes": [[294, "DataTypes"], [316, "DataTypes"]], "(Im)mutable?": [[294, "(Im)mutable?"]], "Exercise: Mixed List, Interactive Interpreter": [[294, "Exercise:-Mixed-List,-Interactive-Interpreter"]], "len(), range(), for": [[294, "len(),-range(),-for"]], "Generators, yield": [[294, "Generators,-yield"]], "Other -ables: Callable": [[294, "Other--ables:-Callable"]], "exec() (and eval())": [[294, "exec()-(and-eval())"]], "Formatting (f-Strings)": [[294, "Formatting-(f-Strings)"]], "Python Basics (Jupyter Notebook)": [[295, "python-basics-jupyter-notebook"], [317, "python-basics-jupyter-notebook"]], "Agenda: CMake (2023-07-03)": [[296, "agenda-cmake-2023-07-03"]], "Toolchain Introduction": [[296, "toolchain-introduction"], [312, "toolchain-introduction"], [1163, "toolchain-introduction"]], "Project Structure, Dependencies": [[296, "project-structure-dependencies"], [312, "project-structure-dependencies"], [1163, "project-structure-dependencies"]], "External Dependencies": [[296, "external-dependencies"], [312, "external-dependencies"], [455, "external-dependencies"], [1163, "external-dependencies"]], "Code Generators": [[296, "code-generators"], [312, "code-generators"], [1163, "code-generators"]], "Automatic Testing": [[296, "automatic-testing"], [312, "automatic-testing"], [1163, "automatic-testing"]], "Installation And Deployment": [[296, "installation-and-deployment"], [312, "installation-and-deployment"], [1163, "installation-and-deployment"]], "CMake: An Introduction (2023-07-18)": [[297, "cmake-an-introduction-2023-07-18"], [360, "cmake-an-introduction-2023-07-18"]], "Python Advanced (2023-09-25 - 2023-09-27)": [[298, "python-advanced-2023-09-25-2023-09-27"], [299, "Python-Advanced-(2023-09-25---2023-09-27)"], [360, "python-advanced-2023-09-25-2023-09-27"]], "Recap Of Python Basics Course (Before Summer)": [[298, "recap-of-python-basics-course-before-summer"], [301, "recap-of-python-basics-course-before-summer"]], "Project Management: Requirements, Sandboxing, Testing": [[298, "project-management-requirements-sandboxing-testing"], [301, "project-management-requirements-sandboxing-testing"]], "Into The Wild: Group Project Kickoff": [[298, "into-the-wild-group-project-kickoff"], [301, "into-the-wild-group-project-kickoff"]], "OO Design: Duck Typing, Inheritance, And Abstract Base Classes": [[298, "oo-design-duck-typing-inheritance-and-abstract-base-classes"], [301, "oo-design-duck-typing-inheritance-and-abstract-base-classes"]], "Package And Dependency Management": [[298, "package-and-dependency-management"]], "Equality vs. Identity": [[299, "Equality-vs.-Identity"]], "Functions Are Objects": [[299, "Functions-Are-Objects"]], "Python Advanced, Jupyter Notebook (2023-09-25 - 2023-09-27)": [[300, "python-advanced-jupyter-notebook-2023-09-25-2023-09-27"], [303, "python-advanced-jupyter-notebook-2023-09-25-2023-09-27"]], "Python Advanced (2023-10-09 - 2023-10-11)": [[301, "python-advanced-2023-10-09-2023-10-11"], [360, "python-advanced-2023-10-09-2023-10-11"]], "Classes: Basics": [[301, "classes-basics"]], "Classes: More": [[301, "classes-more"]], "Spoiler: Group Project Outcome": [[301, "spoiler-group-project-outcome"]], "More About Functions": [[301, "more-about-functions"]], "Python Advanced (2023-10-09 - 2023-10-09)": [[302, "Python-Advanced-(2023-10-09---2023-10-09)"]], "Type Annotations": [[302, "Type-Annotations"]], "Agenda: Python Advanced (2023-10-24 - 2023-10-26)": [[304, "agenda-python-advanced-2023-10-24-2023-10-26"]], "Day 1: Basic Python": [[304, "day-1-basic-python"], [308, "day-1-basic-python"]], "Datatypes, Datatypes": [[304, "datatypes-datatypes"], [308, "datatypes-datatypes"]], "Day 2: Advanced Python Features": [[304, "day-2-advanced-python-features"]], "Multiprocessing": [[304, "multiprocessing"]], "Day 3: Into The Wild": [[304, "day-3-into-the-wild"]], "Data Science Topics": [[304, "data-science-topics"], [308, "data-science-topics"]], "Group Project: An Idea": [[304, "group-project-an-idea"]], "Python Advanced (2023-10-24 - 2023-10-26)": [[305, "python-advanced-2023-10-24-2023-10-26"], [360, "python-advanced-2023-10-24-2023-10-26"]], "Python Basics Recap": [[305, "python-basics-recap"], [306, "Python-Basics-Recap"]], "The Very Basics": [[305, "the-very-basics"]], "range(), And Iteration In General": [[305, "range-and-iteration-in-general"]], "Leftovers From Yesterday": [[305, "leftovers-from-yesterday"]], "Object Oriented Programming, Continued": [[305, "object-oriented-programming-continued"], [305, "id1"]], "Group Project, OO-ified": [[305, "group-project-oo-ified"]], "Decorator Toolcase: *args, **kwargs": [[305, "decorator-toolcase-args-kwargs"]], "Morning Greeting": [[305, "morning-greeting"]], "Decorator Toolcase, Continued (Including Function Scoping and global)": [[305, "decorator-toolcase-continued-including-function-scoping-and-global"]], "Sensor Implementation That Receives UDP Datagrams": [[305, "sensor-implementation-that-receives-udp-datagrams"]], "CompositeSink": [[305, "compositesink"]], "MQTT Sink Implementation": [[305, "mqtt-sink-implementation"]], "Timestamps?": [[305, "timestamps"]], "Jupyter Notebook: Python Advanced": [[306, "Jupyter-Notebook:-Python-Advanced"]], "Jupyter Notebook Explanation": [[306, "Jupyter-Notebook-Explanation"]], "Integers and Floats": [[306, "Integers-and-Floats"]], "Strings: String Methods, Docstrings, \u2026": [[306, "Strings:-String-Methods,-Docstrings,-..."]], "Python Documentation Overview: https://docs.python.org/3/": [[306, "Python-Documentation-Overview:-https://docs.python.org/3/"]], "assert": [[306, "assert"]], "Iteration, Generators, Iterator Protocol": [[306, "Iteration,-Generators,-Iterator-Protocol"]], "AAARGHHH": [[306, "AAARGHHH"]], "Generator Expresssions": [[306, "Generator-Expresssions"]], "Dictionary Comprehension": [[306, "Dictionary-Comprehension"], [316, "Dictionary-Comprehension"], [1004, "dictionary-comprehension"]], "Functional Tools": [[306, "Functional-Tools"]], "filter()": [[306, "filter()"], [316, "filter()"]], "Jupyter Notebook (Structure): Python Advanced (2023-10-24 - 2023-10-26)": [[307, "jupyter-notebook-structure-python-advanced-2023-10-24-2023-10-26"]], "Agenda: Python Advanced (2023-11-22 - 2023-11-24)": [[308, "agenda-python-advanced-2023-11-22-2023-11-24"]], "Exercise Prerequisites: The Commandline": [[308, "exercise-prerequisites-the-commandline"]], "Day 2: Group Project Kickoff, Advanced Topics": [[308, "day-2-group-project-kickoff-advanced-topics"]], "Project Management, Test Driven Development": [[308, "project-management-test-driven-development"]], "Day 3: More Advanced Topics (All The Rest, And More)": [[308, "day-3-more-advanced-topics-all-the-rest-and-more"]], "CSV And Databases": [[308, "csv-and-databases"]], "Python Advanced (2023-11-22 - 2023-22-24)": [[309, "python-advanced-2023-11-22-2023-22-24"]], "Day 2: Group Project, And Object Oriented Programming": [[309, "day-2-group-project-and-object-oriented-programming"]], "Day 3: OO, Hacking, Python Specials": [[309, "day-3-oo-hacking-python-specials"]], "Jupyter Notebook: Python Advanced (2023-11-22 - 2023-11-24)": [[310, "Jupyter-Notebook:-Python-Advanced-(2023-11-22---2023-11-24)"]], "Assignment, And IDs": [[310, "Assignment,-And-IDs"]], "(Im)Mutability": [[310, "(Im)Mutability"]], "Operator Overloading (Basics)": [[310, "Operator-Overloading-(Basics)"]], "And Iterables? The Iterator Protocol!": [[310, "And-Iterables?-The-Iterator-Protocol!"]], "Methods": [[310, "Methods"], [579, "methods"], [726, "methods"], [727, "methods"], [728, "methods"], [1025, "methods"]], "numpy, pandas, matplotlib": [[310, "numpy,-pandas,-matplotlib"]], "Jupyter Notebook (Structure): Python Advanced (2023-11-22 - 2023-11-24)": [[311, "jupyter-notebook-structure-python-advanced-2023-11-22-2023-11-24"]], "Agenda: CMake (2023-11-27)": [[312, "agenda-cmake-2023-11-27"]], "CMake: An Introduction (2023-11-27)": [[313, "cmake-an-introduction-2023-11-27"], [360, "cmake-an-introduction-2023-11-27"]], "Agenda: Python Basics (2023-11-29 - 2023-12-01)": [[314, "agenda-python-basics-2023-11-29-2023-12-01"]], "Python Basics (2023-11-29 - 2023-12-01)": [[315, "python-basics-2023-11-29-2023-12-01"], [316, "Python-Basics-(2023-11-29---2023-12-01)"], [360, "python-basics-2023-11-29-2023-12-01"]], "Day 2, Morning Awakening": [[315, "day-2-morning-awakening"]], "Control Flow, Sequences, Iteration (Continued)": [[315, "control-flow-sequences-iteration-continued"]], "Day 3, Morning Awakening": [[315, "day-3-morning-awakening"]], "Dictionary (mutable)": [[316, "Dictionary-(mutable)"]], "Set (mutable)": [[316, "Set-(mutable)"]], "Boolean (immutable)": [[316, "Boolean-(immutable)"]], "split() and join()": [[316, "split()-and-join()"]], "Pythonicity (enumerate())": [[316, "Pythonicity-(enumerate())"]], "pandas, matplotlib": [[316, "pandas,-matplotlib"]], "Generator Expression": [[316, "Generator-Expression"]], "zip(), And Dictionaries": [[316, "zip(),-And-Dictionaries"]], "Agenda: C++: Advanced Topics": [[318, "agenda-c-advanced-topics"]], "Introduction: A New Language To Me": [[318, "introduction-a-new-language-to-me"]], "constexpr, constinit, consteval": [[318, "constexpr-constinit-consteval"]], "Functions: std::function<>, Lambdas": [[318, "functions-std-function-lambdas"], [319, "functions-std-function-lambdas"]], "Moving, RValue References: Do We Want To Copy Sensors?": [[318, "moving-rvalue-references-do-we-want-to-copy-sensors"]], "Moving: Usage": [[318, "moving-usage"]], "Moving: Implementation": [[318, "moving-implementation"]], "Type Erasure": [[318, "type-erasure"]], "Allocators": [[318, "allocators"], [630, "allocators"], [748, "allocators"]], "C++ Pythonic Toolcase": [[318, "c-pythonic-toolcase"]], "Outlook In >=20": [[318, "outlook-in-20"]], "Attributes And The Like": [[318, "attributes-and-the-like"]], "<algorithm> Overview": [[318, "algorithm-overview"]], "Miscellaneous Miscellaneous": [[318, "miscellaneous-miscellaneous"]], "C++: Advanced Topics (2023-12-04 - 2023-12-06)": [[319, "c-advanced-topics-2023-12-04-2023-12-06"], [360, "c-advanced-topics-2023-12-04-2023-12-06"]], "Day 1: Introduction: C++, A New Language": [[319, "day-1-introduction-c-a-new-language"]], "Pythonicity": [[319, "pythonicity"]], "New OO Features": [[319, "new-oo-features"]], "Day 2: Simply Getting Stuff Done": [[319, "day-2-simply-getting-stuff-done"]], "Classic Polymorphism: Interfaces": [[319, "classic-polymorphism-interfaces"]], "Move Semantics": [[319, "move-semantics"]], "Day 3: All The Rest": [[319, "day-3-all-the-rest"]], "Interfaces, And OO Design: Kochtopf And The Cloud": [[319, "interfaces-and-oo-design-kochtopf-and-the-cloud"]], "Moving, Roundup": [[319, "moving-roundup"]], "Containers And Algorithms": [[319, "containers-and-algorithms"]], "And Embedded?": [[319, "and-embedded"]], "Still Untold": [[319, "still-untold"]], "Agenda: Python Basics (2023-12-18 - 2023-12-20)": [[320, "agenda-python-basics-2023-12-18-2023-12-20"]], "Python Basics (2023-12-18 - 2023-12-20)": [[321, "python-basics-2023-12-18-2023-12-20"], [322, "Python-Basics-(2023-12-18---2023-12-20)"], [323, "python-basics-2023-12-18-2023-12-20"], [360, "python-basics-2023-12-18-2023-12-20"]], "More About Datatypes": [[321, "more-about-datatypes"], [322, "More-About-Datatypes"]], "A Bit Of OO": [[321, "a-bit-of-oo"]], "Datatype Conversion": [[322, "Datatype-Conversion"]], "Weirdness (Comprehensions)": [[322, "Weirdness-(Comprehensions)"]], "Dictionary Comprehension (Exchange key and Value of dict)": [[322, "Dictionary-Comprehension-(Exchange-key-and-Value-of-dict)"]], "Functional Programming": [[322, "Functional-Programming"]], "set(), list(), dict()": [[322, "set(),-list(),-dict()"]], "while (and else)": [[322, "while-(and-else)"]], "range(), And Generators, The Iterator Protocol": [[322, "range(),-And-Generators,-The-Iterator-Protocol"]], "Return Value? Parameters?": [[322, "Return-Value?-Parameters?"]], "References, Immutability": [[322, "References,-Immutability"]], "Und Schuetzen?": [[322, "Und-Schuetzen?"]], "Comprehensions (Generator Expressions)": [[322, "Comprehensions-(Generator-Expressions)"]], "pathlib, os.path": [[322, "pathlib,-os.path"]], "Regexen": [[322, "Regexen"]], "distill.py": [[322, "distill.py"]], "C++ For Embedded Developers (Beginning of 2023)": [[324, "c-for-embedded-developers-beginning-of-2023"]], "Python/SAP": [[325, "python-sap"]], "Screenplay Checker": [[327, "screenplay-checker"]], "GPIO: Blinklicht": [[328, "gpio-blinklicht"]], "Commandline": [[328, "commandline"], [333, "commandline"], [870, "commandline"]], "sysfs GPIO": [[328, "sysfs-gpio"]], "Electronic Aspect": [[328, "electronic-aspect"]], "External Circuitry": [[328, "external-circuitry"]], "Raspberry Header Pinout": [[328, "raspberry-header-pinout"]], "GPIO: Blinklicht Interface": [[329, "gpio-blinklicht-interface"]], "GPIO: Object Oriented Blinklicht": [[330, "gpio-object-oriented-blinklicht"]], "GPIO: Blinklicht Unittests": [[331, "gpio-blinklicht-unittests"]], "ECE19: Exercises and Custom Topics": [[332, "ece19-exercises-and-custom-topics"]], "Reading a File": [[333, "reading-a-file"], [932, "reading-a-file"]], "Output": [[333, "output"]], "2021-05-20 (G2)": [[334, "2021-05-20-(G2)"]], "Reading File in One Big Swoop": [[334, "Reading-File-in-One-Big-Swoop"]], "Reading File in Fixed Sized Chunks": [[334, "Reading-File-in-Fixed-Sized-Chunks"]], "Reading File Line by Line": [[334, "Reading-File-Line-by-Line"]], "Iterating a File": [[334, "Iterating-a-File"]], "String Methods (Needed to Implement the Exercise)": [[334, "String-Methods-(Needed-to-Implement-the-Exercise)"]], "str.strip(), str.rstrip(), str.lstrip()": [[334, "str.strip(),-str.rstrip(),-str.lstrip()"]], "str.split()": [[334, "str.split()"]], "2021-05-21": [[335, "2021-05-21"], [342, "id11"]], "Modules and Packages": [[335, "Modules-and-Packages"], [1015, "modules-and-packages"]], "Strings vs. Bytes": [[336, "Strings-vs.-Bytes"]], "Batteries": [[337, "Batteries"]], "Key Value Map": [[337, "Key-Value-Map"]], "Comments vs Documentation": [[337, "Comments-vs-Documentation"]], "Multiline String (btw.)": [[337, "Multiline-String-(btw.)"]], "Integer Numbers (Literals)": [[337, "Integer-Numbers-(Literals)"]], "Arithmetic Operators": [[337, "Arithmetic-Operators"], [386, "arithmetic-operators"], [1027, "arithmetic-operators"]], "Wertebereich von Integers": [[337, "Wertebereich-von-Integers"]], "An Example": [[338, "An-Example"], [1050, "an-example"]], "Sidenote: Pure Beauty": [[338, "Sidenote:-Pure-Beauty"], [1050, "sidenote-pure-beauty"]], "Parameters and Types": [[338, "Parameters-and-Types"], [1050, "parameters-and-types"]], "Pitfalls": [[338, "Pitfalls"]], "Cloud Computer, SSH Login": [[339, "cloud-computer-ssh-login"]], "Machine, Logins": [[339, "machine-logins"]], "Login via Secure Shell (SSH)": [[339, "login-via-secure-shell-ssh"]], "Formalit\u00e4ten": [[340, "formalitaten"]], "Embedded Computing 1 (ECE 19)": [[341, "embedded-computing-1-ece-19"]], "Daily Log": [[342, "daily-log"]], "2021-03-04": [[342, "id1"]], "2021-03-05": [[342, "id2"]], "Cheat Sheets": [[342, null]], "2021-03-18": [[342, "id3"]], "2021-03-26": [[342, "id4"]], "2021-04-15": [[342, "id5"]], "2021-04-21": [[342, "id6"]], "Git Intro": [[342, "git-intro"]], "Download and Installation": [[342, null], [347, null]], "2021-04-29": [[342, "id7"]], "2021-05-10": [[342, "id8"]], "Org Stuff": [[342, "org-stuff"]], "Python: Functions": [[342, "python-functions"]], "2021-05-12": [[342, "id9"]], "Python: Walk-Through Passing and Failing an Exam": [[342, "python-walk-through-passing-and-failing-an-exam"]], "2021-05-{19,20}": [[342, "id10"]], "Reiterating on Exercise": [[342, "reiterating-on-exercise"]], "import argparse": [[342, "import-argparse"]], "Exercise digit (Once More)": [[342, "exercise-digit-once-more"]], "2021-06-01": [[342, "id12"]], "sysfs GPIO: Blinking an LED": [[342, "sysfs-gpio-blinking-an-led"]], "2021-06-07": [[342, "id13"]], "Embedded Computing 1 (Deutsch)": [[343, "embedded-computing-1-deutsch"]], "Lehrinhalte": [[343, "lehrinhalte"]], "Lernergebnisse der LV": [[343, "lernergebnisse-der-lv"]], "Empfohlene oder verpflichtende Fachliteratur und andere Lernressourcen bzw. \u2013instrumente": [[343, "empfohlene-oder-verpflichtende-fachliteratur-und-andere-lernressourcen-bzw-instrumente"]], "Art der Vermittlung": [[343, "art-der-vermittlung"]], "Voraussetzungen und Begleitbedingungen": [[343, "voraussetzungen-und-begleitbedingungen"]], "Pr\u00fcfungsmethode und Beurteilungskriterien": [[343, "prufungsmethode-und-beurteilungskriterien"]], "Embedded Computing 1 (English)": [[344, "embedded-computing-1-english"]], "Course Content": [[344, "course-content"]], "Learning Outcome": [[344, "learning-outcome"]], "Recommended or Required Reading and Other Learning Resources / Tools": [[344, "recommended-or-required-reading-and-other-learning-resources-tools"]], "Mode of delivery": [[344, "mode-of-delivery"]], "Prerequisites and Co-Requisites": [[344, "prerequisites-and-co-requisites"]], "Assessment Methods and Criteria": [[344, "assessment-methods-and-criteria"]], "Plan for Summer 2021": [[345, "plan-for-summer-2021"]], "Linux Introduction": [[345, "linux-introduction"]], "Slides": [[345, null], [345, null], [345, null]], "C/C++ Development": [[345, "c-c-development"]], "Python Development": [[345, "python-development"]], "2021-10-07": [[346, "id1"]], "Whose Fault It Is": [[346, "whose-fault-it-is"]], "2021-10-12 (Bringing Newcomers Up-to-Date)": [[347, "bringing-newcomers-up-to-date"]], "Linux/UNIX": [[347, "linux-unix"]], "Git": [[347, "git"]], "2021-10-28": [[348, "id1"]], "Group Project": [[348, "group-project"]], "Discussion of Tasks": [[348, "discussion-of-tasks"]], "TODOs": [[348, "todos"]], "2021-11-15": [[349, "id1"]], "Systems Programming: Files, Directories, Links \u2026": [[349, "systems-programming-files-directories-links"]], "2021-11-29": [[350, "id1"]], "jjjj": [[350, "jjjj"]], "2021-12-1{4,5}": [[351, "id1"]], "Future Topics": [[351, "future-topics"]], "Threading": [[351, "threading"]], "C++ Sideways": [[351, "c-sideways"]], "2022-01-10": [[352, "id1"]], "Scheduling": [[352, "scheduling"], [966, "scheduling"], [967, "scheduling"]], "2022-01-12": [[353, "id1"]], "Scheduling and Realtime": [[353, "scheduling-and-realtime"], [357, "scheduling-and-realtime"]], "2022-02-15": [[354, "id1"]], "Agenda/Log": [[355, "agenda-log"], [356, "agenda-log"]], "Embedded Computing 2 (ECE 19)": [[356, "embedded-computing-2-ece-19"]], "Project Repository": [[356, "project-repository"]], "Test Material": [[356, "test-material"]], "Exam Material Overview": [[357, "exam-material-overview"]], "Questions": [[357, "questions"], [357, "id1"], [649, "questions"], [843, "questions"], [857, "questions"], [858, "questions"], [883, "questions"], [990, "questions"]], "Slide Material": [[357, "slide-material"], [357, "id2"]], "Embedded Computing 1+2, ECE 19": [[358, "embedded-computing-1-2-ece-19"]], "Training Material: Overview and Download": [[361, "training-material-overview-and-download"]], "On Windows": [[362, "on-windows"]], "On Linux": [[362, "on-linux"]], "The Book (1)": [[363, "the-book-1"]], "The Book (2)": [[363, "the-book-2"]], "The Beginning": [[363, "the-beginning"]], "Cool Guys and Their Hobby": [[363, "cool-guys-and-their-hobby"]], "History of UNIX": [[363, "history-of-unix"]], "My First Program (1)": [[364, "my-first-program-1"]], "My First Program (2)": [[364, "my-first-program-2"]], "Character Arrays - Strings": [[364, "character-arrays-strings"]], "Variables and Arithmetic": [[365, "variables-and-arithmetic"]], "My Second Program (1)": [[365, "my-second-program-1"]], "My Second Program (2)": [[365, "my-second-program-2"]], "My Second Program (3)": [[365, "my-second-program-3"]], "My Second Program (4)": [[365, "my-second-program-4"]], "Exercise: A Better Fahrenheit Table": [[366, "exercise-a-better-fahrenheit-table"]], "for: Loop Simplification (1)": [[367, "for-loop-simplification-1"]], "for: Loop Simplification (2)": [[367, "for-loop-simplification-2"]], "Second Program, revisited": [[367, "second-program-revisited"]], "Exercise: Fahrenheit Table Using for": [[368, "exercise-fahrenheit-table-using-for"]], "Symbolic Constants": [[369, "symbolic-constants"]], "C Preprocessor: Symbolic Constants": [[369, "c-preprocessor-symbolic-constants"]], "Exercise: Fahrenheit Table Using Macros": [[370, "exercise-fahrenheit-table-using-macros"]], "Character I/O": [[371, "character-i-o"]], "The Outside World": [[371, "the-outside-world"]], "cat for the Poor (1)": [[371, "cat-for-the-poor-1"]], "cat for the Poor (2)": [[371, "cat-for-the-poor-2"]], "More Examples \u2026": [[371, "more-examples"]], "More Examples - if": [[371, "more-examples-if"]], "if, Formally": [[371, "if-formally"]], "Operators, Formally": [[371, "operators-formally"]], "Exercise: wc For The Poor": [[372, "exercise-wc-for-the-poor"]], "Arrays": [[373, "arrays"]], "Array Definition, Explicit Initialization": [[373, "array-definition-explicit-initialization"]], "Array Access": [[373, "array-access"]], "Discussion: Initialization": [[373, "discussion-initialization"]], "Discussion: if, else": [[373, "discussion-if-else"]], "Array Initializer": [[373, "array-initializer"]], "Discussion: Initializer": [[373, "discussion-initializer"]], "Initialization using memset()": [[373, "initialization-using-memset"]], "Discussion: memset()": [[373, "discussion-memset"]], "Exercise: Character Histogram": [[374, "exercise-character-histogram"]], "A Nonsensical Example": [[375, "a-nonsensical-example"]], "Function Signature": [[375, "function-signature"]], "Discussion": [[375, "discussion"]], "Definition vs. Declaration (1)": [[375, "definition-vs-declaration-1"]], "Definition vs. Declaration (2)": [[375, "definition-vs-declaration-2"]], "By Value / By Reference": [[375, "by-value-by-reference"]], "Exercise: Forward Declaration": [[376, "exercise-forward-declaration"]], "Character Arrays": [[377, "character-arrays"]], "Strings: Mistake by Design?": [[377, "strings-mistake-by-design"]], "Strings: Definition": [[377, "strings-definition"]], "Strings: Library Functions": [[377, "strings-library-functions"]], "Strings as Parameters": [[377, "strings-as-parameters"]], "Strings: Dangers": [[377, "strings-dangers"]], "Exercise: Read Line Into String from stdin": [[378, "exercise-read-line-into-string-from-stdin"]], "Lifetime of Variables": [[379, "lifetime-of-variables"]], "Lifetime": [[379, "lifetime"]], "Global Variables": [[379, "global-variables"], [553, "global-variables"]], "Global Variables: How?": [[379, "global-variables-how"]], "Type System": [[381, "type-system"]], "Variable Names": [[382, "variable-names"]], "Variable- and Function Names": [[382, "variable-and-function-names"]], "Data Types, Sizes": [[383, "data-types-sizes"]], "Standard Data Types And Their Sizes": [[383, "standard-data-types-and-their-sizes"]], "Integer Variants (\u201cQualifiers\u201d)": [[383, "integer-variants-qualifiers"]], "Widths": [[383, "widths"]], "Constants": [[384, "constants"]], "Constants and Types": [[384, "constants-and-types"]], "Character Constants: Escape Sequences": [[384, "character-constants-escape-sequences"]], "String Constants": [[384, "string-constants"]], "Character vs. String Constants": [[384, "character-vs-string-constants"]], "Symbolic Constants (1)": [[384, "symbolic-constants-1"]], "Symbolic Constants (2)": [[384, "symbolic-constants-2"]], "Variable Definitions": [[385, "variable-definitions"]], "Definitions und Initialization": [[385, "definitions-und-initialization"]], "Initialization of Automatic Variables": [[385, "initialization-of-automatic-variables"]], "Initialization of Global Variables": [[385, "initialization-of-global-variables"]], "Arithmetic Operators (1)": [[386, "arithmetic-operators-1"]], "Arithmetic Operators (2)": [[386, "arithmetic-operators-2"]], "Relational and Logical Operators": [[387, "relational-and-logical-operators"]], "Relational Operators (1)": [[387, "relational-operators-1"]], "Relational Operators (2)": [[387, "relational-operators-2"]], "Logical (Boolean) Operators": [[387, "logical-boolean-operators"]], "Boolean Operators: Short-Circuit": [[387, "boolean-operators-short-circuit"]], "Type Conversions": [[388, "type-conversions"]], "Implicit Type Conversions": [[388, "implicit-type-conversions"]], "Sign Bugs": [[388, "sign-bugs"]], "Truncation": [[388, "truncation"]], "Sign Propagation": [[388, "sign-propagation"]], "Conversion Using Operators": [[388, "conversion-using-operators"]], "Conversion and unsigned (1)": [[388, "conversion-and-unsigned-1"]], "Conversion and unsigned (2)": [[388, "conversion-and-unsigned-2"]], "Compiler Warnings": [[388, "compiler-warnings"]], "Last Warning": [[388, "last-warning"], [960, "last-warning"]], "Forced Conversion - Cast": [[388, "forced-conversion-cast"]], "Increment, Decrement": [[389, "increment-decrement"]], "Confusion: ++, --": [[389, "confusion"]], "Confused to perfection (1)": [[389, "confused-to-perfection-1"]], "Confused to perfection (2)": [[389, "confused-to-perfection-2"]], "Exercise: Copy and Reduce String": [[390, "exercise-copy-and-reduce-string"]], "Bit-Operators": [[391, "bit-operators"]], "Bit Manipulation": [[391, "bit-manipulation"]], "Bitwise AND and OR": [[391, "bitwise-and-and-or"]], "Bitwise XOR": [[391, "bitwise-xor"]], "Shift Left": [[391, "shift-left"]], "Shift Right": [[391, "shift-right"]], "Inverting (\u201cOne\u2019s-Complement\u201d)": [[391, "inverting-one-s-complement"]], "Assignment with Calculation": [[392, "assignment-with-calculation"]], "Combined Operators": [[392, "combined-operators"]], "?: - Conditional Expression": [[393, "conditional-expression"]], "?: - Conditional Expression (1)": [[393, "conditional-expression-1"]], "?: - Conditional Expression (2)": [[393, "conditional-expression-2"]], "Precedence, Associativity": [[394, "precedence-associativity"]], "Summary: Operators": [[394, "summary-operators"]], "Operators: Precedence und Associativity (1)": [[394, "operators-precedence-und-associativity-1"]], "Operators: Precedence und Associativity (2)": [[394, "operators-precedence-und-associativity-2"]], "More Warnings": [[394, "more-warnings"]], "Statements and Blocks": [[396, "statements-and-blocks"]], "Statement vs. Block": [[396, "statement-vs-block"]], "if - else": [[397, "if-else"]], "Branches": [[397, "branches"]], "True or False? What is Truth?": [[397, "true-or-false-what-is-truth"]], "else is optional (1)": [[397, "else-is-optional-1"]], "else is optional (2)": [[397, "else-is-optional-2"]], "else - if": [[398, "else-if"]], "Style Matters": [[398, "style-matters"]], "switch": [[399, "switch"], [399, "id1"]], "Case Distinctions": [[399, "case-distinctions"]], "if - else if vs. switch": [[399, "if-else-if-vs-switch"]], "Loops: while and for": [[400, "loops-while-and-for"]], "while: general purpose loop": [[400, "while-general-purpose-loop"]], "From while to for (1)": [[400, "from-while-to-for-1"]], "From while to for (2)": [[400, "from-while-to-for-2"]], "for, a Little Closer": [[400, "for-a-little-closer"]], "Comma Operator": [[400, "comma-operator"]], "for: Infamous Idioms": [[400, "for-infamous-idioms"]], "Loops: do - while": [[401, "loops-do-while"]], "do - while: Condition After Body": [[401, "do-while-condition-after-body"]], "goto and Labels": [[403, "goto-and-labels"]], "Structured Programming vs. goto": [[403, "structured-programming-vs-goto"]], "goto: Definition": [[403, "goto-definition"]], "goto: Use Cases": [[403, "goto-use-cases"]], "Nesting": [[405, "nesting"]], "Declaration vs. Definition": [[405, "declaration-vs-definition"]], "A Monolithic Program": [[405, "a-monolithic-program"]], "Separate Compilation": [[405, "separate-compilation"]], "Extern/Global Variables": [[406, "extern-global-variables"]], "Variables: Declaration and Definition": [[406, "variables-declaration-and-definition"]], "Variables: Separating Declaration from Definition (1)": [[406, "variables-separating-declaration-from-definition-1"]], "Variables: Separating Declaration from Definition (2)": [[406, "variables-separating-declaration-from-definition-2"]], "Header Files": [[407, "header-files"]], "Declarations: Problems (1)": [[407, "declarations-problems-1"]], "Declarations: Problems (2)": [[407, "declarations-problems-2"]], "Declarations: Solutions": [[407, "declarations-solutions"]], "Static Variables": [[408, "static-variables"]], "Lifetime and Visibility (1)": [[408, "lifetime-and-visibility-1"]], "Automatic Variables": [[408, "automatic-variables"]], "Local static Variable": [[408, "local-static-variable"]], "Global static Variable": [[408, "global-static-variable"]], "Global Variable": [[408, "global-variable"], [1049, "global-variable"]], "C Preprocessor: Basics": [[409, "c-preprocessor-basics"]], "#include": [[409, "include"]], "Macros: Text Replacement": [[409, "macros-text-replacement"]], "Macros: Constant Definition": [[409, "macros-constant-definition"]], "Macros: Inline Replacement as Function Call (1)": [[409, "macros-inline-replacement-as-function-call-1"]], "Macros: Inline Replacement as Function Call (2)": [[409, "macros-inline-replacement-as-function-call-2"]], "Include Guards (1)": [[409, "include-guards-1"]], "Include Guards (2)": [[409, "include-guards-2"]], "The C Preprocessor: Last Words": [[409, "the-c-preprocessor-last-words"], [410, "the-c-preprocessor-last-words"]], "C Preprocessor: More": [[410, "c-preprocessor-more"]], "Conditional Compilation: Rules": [[410, "conditional-compilation-rules"]], "Conditional Compilation: Examples": [[410, "conditional-compilation-examples"]], "Conditional Compilation: Last Words": [[410, "conditional-compilation-last-words"]], "Macros: Spanning Multiple Lines": [[410, "macros-spanning-multiple-lines"]], "Macros: Multiple Statements as One Statement (1)": [[410, "macros-multiple-statements-as-one-statement-1"]], "Macros: Multiple Statements as One Statement (2)": [[410, "macros-multiple-statements-as-one-statement-2"]], "Stringification (1)": [[410, "stringification-1"]], "Stringification (2)": [[410, "stringification-2"]], "Token Pasting (1)": [[410, "token-pasting-1"]], "Token Pasting (2)": [[410, "token-pasting-2"]], "Warnings and Errors": [[410, "warnings-and-errors"]], "Predefined Macros (1)": [[410, "predefined-macros-1"]], "Pointers and Addresses": [[412, "pointers-and-addresses"]], "Pointers: Basics": [[412, "pointers-basics"]], "Pointer: Operators": [[412, "pointer-operators"]], "More Examples": [[412, "more-examples"]], "Pointers as Function Parameters": [[413, "pointers-as-function-parameters"]], "Call by Reference (1)": [[413, "call-by-reference-1"]], "Call by Reference (2)": [[413, "call-by-reference-2"]], "Exercise: Function That Swaps Two Variables": [[414, "exercise-function-that-swaps-two-variables"]], "Pointers and Arrays": [[415, "pointers-and-arrays"], [417, "pointers-and-arrays"]], "It\u2019s Only Memory": [[415, "it-s-only-memory"]], "Conversion Array \u27f6 Pointer": [[415, "conversion-array-longrightarrow-pointer"]], "Pointer Arithmetic (1)": [[415, "pointer-arithmetic-1"]], "Pointer Arithmetic (2)": [[415, "pointer-arithmetic-2"]], "Pointer Arithmetic (3)": [[415, "pointer-arithmetic-3"]], "Pointer Arithmetic: Difference": [[415, "pointer-arithmetic-difference"]], "Pointer Arithmetic: Array Algorithms": [[415, "pointer-arithmetic-array-algorithms"]], "Pointer Arithmetic: Jump Width? (1)": [[415, "pointer-arithmetic-jump-width-1"]], "Pointer Arithmetic: Jump Width? (2)": [[415, "pointer-arithmetic-jump-width-2"]], "Pointer Arithmetic: Arbitrary Datatypes": [[415, "pointer-arithmetic-arbitrary-datatypes"]], "See also": [[416, null], [841, null], [846, null], [846, null], [847, null], [847, null], [847, null], [852, null], [853, null], [936, null], [963, null], [966, null], [970, null], [972, null], [1051, null]], "main() Can Take Parameters": [[416, "main-can-take-parameters"]], "struct: Basics": [[418, "struct-basics"]], "struct: Compound Datatypes": [[418, "struct-compound-datatypes"]], "struct: How?": [[418, "struct-how"]], "Usage": [[418, "usage"], [608, "usage"], [615, "usage"]], "Nested Structures": [[418, "nested-structures"]], "Memory Layout": [[418, "memory-layout"]], "Recursive Structures?": [[418, "recursive-structures"]], "struct: Functions": [[419, "struct-functions"]], "Parameters and Return (1)": [[419, "parameters-and-return-1"]], "Parameters and Return (2)": [[419, "parameters-and-return-2"]], "Parameters and Return (3)": [[419, "parameters-and-return-3"]], "typedef: Type Alias": [[420, "typedef-type-alias"]], "Alias for Type Names": [[420, "alias-for-type-names"]], "Dynamic Memory": [[422, "dynamic-memory"], [422, "id1"]], "Stack and Global Memory": [[422, "stack-and-global-memory"]], "Dynamic Memory - Usage": [[422, "dynamic-memory-usage"]], "Singly Linked List": [[423, "singly-linked-list"]], "Exercises (1)": [[423, "exercises-1"]], "Exercises (2)": [[423, "exercises-2"]], "Exercises (3)": [[423, "exercises-3"]], "Exercises (4)": [[423, "exercises-4"]], "Exercises (5)": [[423, "exercises-5"]], "Exercises (6)": [[423, "exercises-6"]], "Exercises (7)": [[423, "exercises-7"]], "Exercises (8)": [[423, "exercises-8"]], "Exercises (9)": [[423, "exercises-9"]], "Exercises (10)": [[423, "exercises-10"]], "Exercises (11)": [[423, "exercises-11"]], "Volatile": [[425, "volatile"]], "volatile: The Lie (1)": [[425, "volatile-the-lie-1"]], "volatile: The Lie (2)": [[425, "volatile-the-lie-2"]], "volatile: Valid Use: Hardware": [[425, "volatile-valid-use-hardware"]], "volatile: Valid Use: Unix Signal Handlers": [[425, "volatile-valid-use-unix-signal-handlers"]], "Compiler Intrinsics": [[426, "compiler-intrinsics"]], "Atomic Memory Access": [[426, "atomic-memory-access"]], "Atomic Memory Access: Load/Modify/Store": [[426, "atomic-memory-access-load-modify-store"]], "Load/Modify/Store: Mutex": [[426, "load-modify-store-mutex"]], "Atomic Instructions": [[426, "atomic-instructions"], [955, "atomic-instructions"]], "More GCC \u201cBuiltins\u201d": [[426, "more-gcc-builtins"]], "Alignment": [[427, "alignment"]], "Data Alignment": [[427, "data-alignment"]], "Data Alignment, Compilers": [[427, "data-alignment-compilers"]], "Unaligned Data Access (1)": [[427, "unaligned-data-access-1"]], "Unaligned Data Access (2)": [[427, "unaligned-data-access-2"]], "Padding (1)": [[427, "padding-1"]], "Padding (2)": [[427, "padding-2"]], "Padding (3)": [[427, "padding-3"]], "Padding (4)": [[427, "padding-4"]], "Structure Alignment (1)": [[427, "structure-alignment-1"]], "Structure Alignment (2)": [[427, "structure-alignment-2"]], "And Arrays? (1)": [[427, "and-arrays-1"]], "And Arrays? (2)": [[427, "and-arrays-2"]], "And Arrays? (3)": [[427, "and-arrays-3"]], "Sanity and Readabilty": [[429, "sanity-and-readabilty"]], "Shooting Offense: Unobvious Solution": [[429, "shooting-offense-unobvious-solution"]], "Shooting Offense: Unobvious Problem": [[429, "shooting-offense-unobvious-problem"]], "Shooting Offenses": [[429, "shooting-offenses"]], "Ambiguity": [[429, "ambiguity"]], "Readability": [[429, "readability"]], "Code Smells": [[429, "code-smells"]], "Know Your Integers": [[430, "know-your-integers"]], "Standard Data Types: size_t (1)": [[430, "standard-data-types-size-t-1"]], "Standard Data Types: size_t (2)": [[430, "standard-data-types-size-t-2"]], "Discrete Values - enum": [[431, "discrete-values-enum"], [431, "id1"]], "Discrete Values": [[431, "discrete-values"]], "Discrete Values - Traditional Approach (1)": [[431, "discrete-values-traditional-approach-1"]], "Discrete Values - Traditional Approach (2)": [[431, "discrete-values-traditional-approach-2"]], "Discrete Values - Wishlist": [[431, "discrete-values-wishlist"]], "Discrete Values - enum and switch": [[431, "discrete-values-enum-and-switch"], [431, "id2"]], "Discrete Values - Close to Perfection": [[431, "discrete-values-close-to-perfection"]], "Visibility - static": [[432, "visibility-static"]], "Visibility": [[432, "visibility"]], "A Somewhat Contrived Example (1)": [[432, "a-somewhat-contrived-example-1"]], "A Somewhat Contrived Example (2)": [[432, "a-somewhat-contrived-example-2"]], "The static Keyword (Hooray!)": [[432, "the-static-keyword-hooray"]], "Correctness - const": [[433, "correctness-const"]], "Non-Modifiable Memory (1)": [[433, "non-modifiable-memory-1"]], "Non-Modifiable Memory (2)": [[433, "non-modifiable-memory-2"]], "The const Keyword (1)": [[433, "the-const-keyword-1"]], "The const Keyword (2)": [[433, "the-const-keyword-2"]], "const Variables": [[433, "const-variables"]], "const Parameters (1)": [[433, "const-parameters-1"]], "const Parameters (2)": [[433, "const-parameters-2"]], "Pointers, Pointers, Pointers \u2026 (1)": [[433, "pointers-pointers-pointers-1"]], "Pointers, Pointers, Pointers \u2026 (2)": [[433, "pointers-pointers-pointers-2"]], "Pointers, Pointers, Pointers \u2026 (3)": [[433, "pointers-pointers-pointers-3"]], "Pointers, Pointers, Pointers \u2026 (4)": [[433, "pointers-pointers-pointers-4"]], "Pointers, Pointers, Pointers \u2026 (5)": [[433, "pointers-pointers-pointers-5"]], "Pointers, Pointers, Pointers \u2026 (6)": [[433, "pointers-pointers-pointers-6"]], "Pointers, Pointers, Pointers \u2026 (7)": [[433, "pointers-pointers-pointers-7"]], "Pointers, Pointers, Pointers \u2026 (8)": [[433, "pointers-pointers-pointers-8"]], "Pointers, Pointers, Pointers \u2026 (9)": [[433, "pointers-pointers-pointers-9"]], "Struct Initialization": [[434, "struct-initialization"]], "Good Old Struct Initialization": [[434, "good-old-struct-initialization"]], "C99 Designated Initializer": [[434, "c99-designated-initializer"]], "Explict Type Safety": [[435, "explict-type-safety"]], "Integer Types Are Ambiguous": [[435, "integer-types-are-ambiguous"]], "Example: Ambiguous Error Schemes (1)": [[435, "example-ambiguous-error-schemes-1"]], "Example: Ambiguous Error Schemes (2)": [[435, "example-ambiguous-error-schemes-2"]], "Example: Ambiguous Error Schemes (3)": [[435, "example-ambiguous-error-schemes-3"]], "Artificial Integer Type Safety": [[435, "artificial-integer-type-safety"]], "Error Schemes, Revisited": [[435, "error-schemes-revisited"]], "Error Schemes: Encapsulating Unix Details": [[435, "error-schemes-encapsulating-unix-details"]], "Error Schemes: Using Encapsulated Stuff": [[435, "error-schemes-using-encapsulated-stuff"]], "Wrap-Up: Artificial Type Safety": [[435, "wrap-up-artificial-type-safety"]], "valgrind": [[436, "valgrind"]], "Valgrind": [[436, "id1"]], "Valgrind in Action (1)": [[436, "valgrind-in-action-1"]], "Valgrind in Action (2)": [[436, "valgrind-in-action-2"]], "Valgrind in Action (3)": [[436, "valgrind-in-action-3"]], "Valgrind: more \u2026": [[436, "valgrind-more"]], "Optimization": [[438, "optimization"]], "Optimization - Introduction": [[438, "optimization-introduction"]], "Compute Bound or IO Bound? (1)": [[438, "compute-bound-or-io-bound-1"]], "Compute Bound or IO Bound? (2)": [[438, "compute-bound-or-io-bound-2"]], "Compute Bound or IO Bound? (3)": [[438, "compute-bound-or-io-bound-3"]], "What to do Next?": [[438, "what-to-do-next"]], "Optimizations: Compute Bound Code": [[439, "optimizations-compute-bound-code"]], "Many Ways of Optimization": [[439, "many-ways-of-optimization"]], "Unnecessary Optimizations": [[439, "unnecessary-optimizations"]], "Inlining (1)": [[439, "inlining-1"]], "Inlining (2)": [[439, "inlining-2"]], "Inlining (3)": [[439, "inlining-3"]], "Register Allocation (1)": [[439, "register-allocation-1"]], "Register Allocation (2)": [[439, "register-allocation-2"]], "Peephole Optimization": [[439, "peephole-optimization"]], "Peephole Optimization: Common Subexpression Elimination": [[439, "peephole-optimization-common-subexpression-elimination"]], "Peephole Optimization: Strength Reduction": [[439, "peephole-optimization-strength-reduction"]], "Peephole Optimization: Constant Folding": [[439, "peephole-optimization-constant-folding"]], "Loop Invariants": [[439, "loop-invariants"]], "Loop Unrolling": [[439, "loop-unrolling"]], "Tail Call Optimization": [[439, "tail-call-optimization"]], "CPU Optimization, Last Words": [[439, "cpu-optimization-last-words"]], "GCC: Optimization \u201cLevels\u201d": [[439, "gcc-optimization-levels"]], "Further Reading": [[439, "further-reading"]], "Optimizations: Memory Optimizations": [[440, "optimizations-memory-optimizations"]], "Memory: Caches": [[440, "memory-caches"]], "Locality of reference": [[440, "locality-of-reference"]], "Multidimensional Arrays": [[440, "multidimensional-arrays"]], "Multidimensional Arrays: Cache Thrashing": [[440, "multidimensional-arrays-cache-thrashing"]], "Multidimensional Arrays: Forward Indexing": [[440, "multidimensional-arrays-forward-indexing"]], "Profiling - Famous Words": [[442, "profiling-famous-words"]], "Donald E. Knuth": [[442, null]], "Tony Hoare": [[442, null]], "Larry Wall": [[442, null]], "The Practice of Programming, Brian W. Kernighan and\n             Rob Pike": [[442, null]], "Profiling - Introduction": [[442, "profiling-introduction"]], "GNU Profiler - gprof": [[443, "gnu-profiler-gprof"]], "gprof - How it Works": [[443, "gprof-how-it-works"]], "Using gprof": [[443, "using-gprof"]], "gprof: Flat Profile": [[443, "gprof-flat-profile"]], "gprof: Call Graph": [[443, "gprof-call-graph"]], "gprof: Interpreting The Results": [[443, "gprof-interpreting-the-results"]], "gprof: Visualization": [[443, "gprof-visualization"]], "callgrind": [[444, "callgrind"]], "callgrind - How it Works": [[444, "callgrind-how-it-works"]], "callgrind - How it is Used": [[444, "callgrind-how-it-is-used"]], "callgrind - Analysis Per Commandline": [[444, "callgrind-analysis-per-commandline"]], "callgrind - Analysis With kcachegrind": [[444, "callgrind-analysis-with-kcachegrind"]], "callgrind - Useful Options": [[444, "callgrind-useful-options"]], "oprofile": [[445, "oprofile"]], "oprofile - How it Works": [[445, "oprofile-how-it-works"]], "oprofile - Basic Usage (1)": [[445, "oprofile-basic-usage-1"]], "oprofile - Basic Usage (2)": [[445, "oprofile-basic-usage-2"]], "oprofile - Too Much Information": [[445, "oprofile-too-much-information"]], "oprofile - Call Graph": [[445, "oprofile-call-graph"]], "oprofile - Kernel Symbols (1)": [[445, "oprofile-kernel-symbols-1"]], "oprofile - Kernel Symbols (2)": [[445, "oprofile-kernel-symbols-2"]], "oprofile - Kernel Modules": [[445, "oprofile-kernel-modules"]], "oprofile - System-Wide Profiling": [[445, "oprofile-system-wide-profiling"]], "oprofile - Offline Profiling": [[445, "oprofile-offline-profiling"]], "oprofile - Graphical Beauty": [[445, "oprofile-graphical-beauty"]], "The C Programming Language": [[447, "the-c-programming-language"]], "Group Description": [[447, "group-description"], [575, "group-description"], [665, "group-description"], [707, "group-description"], [708, "group-description"], [756, "group-description"], [760, "group-description"], [762, "group-description"], [904, "group-description"], [912, "group-description"], [913, "group-description"], [380, "group-description"], [395, "group-description"], [404, "group-description"], [411, "group-description"], [417, "group-description"], [421, "group-description"], [424, "group-description"], [428, "group-description"], [437, "group-description"], [441, "group-description"], [446, "group-description"], [567, "group-description"], [590, "group-description"], [593, "group-description"], [596, "group-description"], [637, "group-description"], [646, "group-description"], [732, "group-description"], [740, "group-description"], [744, "group-description"], [967, "group-description"]], "Messages From The Book": [[448, "messages-from-the-book"]], "What\u2019s There? What Have We Accomplished?": [[449, "what-s-there-what-have-we-accomplished"]], "Rules? Why Rules?": [[449, "rules-why-rules"]], "Coding Style": [[449, "coding-style"]], "Disclaimer": [[449, null]], "Design Principles: SOLID": [[449, "design-principles-solid"]], "Another One: YAGNI": [[449, "another-one-yagni"]], "Architecture": [[449, "architecture"]], "Project Management: Traditional": [[449, "project-management-traditional"]], "Project Management: Software": [[449, "project-management-software"]], "So What?": [[449, "so-what"]], "Is Software A Craft? Software Is A Craft! \u27f6 Clean Code": [[450, "is-software-a-craft-software-is-a-craft-longrightarrow-clean-code"]], "Uncle Bob": [[450, "uncle-bob"]], "A Typical Project (Livehacking Screenplay: My Own Bookkeeping Effort)": [[451, "a-typical-project-livehacking-screenplay-my-own-bookkeeping-effort"]], "Spaghetti Version": [[451, "spaghetti-version"]], "A Little Better: Functions (And Commandline Parameters)": [[451, "a-little-better-functions-and-commandline-parameters"]], "Feature Request: Concatenate Input Data From Multiple CSV Files": [[451, "feature-request-concatenate-input-data-from-multiple-csv-files"]], "Feature Request: Concatenate Input Data From YYYY-MM.csv Files": [[451, "feature-request-concatenate-input-data-from-yyyy-mm-csv-files"]], "Where Are We? Questions!": [[451, "where-are-we-questions"]], "Testability: Input Cleaning": [[451, "testability-input-cleaning"]], "Testability: Reading Input (One Or Multiple Files, Explicitly)": [[451, "testability-reading-input-one-or-multiple-files-explicitly"]], "Test Sanity: Common Code": [[451, "test-sanity-common-code"]], "Testability: Reading Input From Directory": [[451, "testability-reading-input-from-directory"]], "Testability: Categorization": [[451, "testability-categorization"]], "Safety Net In Place \u27f6 Refactoring Categorization": [[451, "safety-net-in-place-longrightarrow-refactoring-categorization"]], "Refactoring Input Reading (\u27f6 Overengineering)": [[451, "refactoring-input-reading-longrightarrow-overengineering"]], "Basics: Boilerplate, And Executables": [[452, "basics-boilerplate-and-executables"]], "Single Monolithic Executable": [[452, "single-monolithic-executable"]], "Building With CMake": [[452, "building-with-cmake"]], "Building With CMake: Separate Source And Build Directories": [[452, "building-with-cmake-separate-source-and-build-directories"]], "Executables Consisting Of Multiple Sources": [[452, "executables-consisting-of-multiple-sources"]], "Problem: Duplicate Compilation": [[452, "problem-duplicate-compilation"]], "Problem: More Functionality": [[452, "problem-more-functionality"]], "Solution: Libraries": [[452, "solution-libraries"], [1002, "solution-libraries"]], "\u201cConfigured\u201d Header Files": [[453, "configured-header-files"]], "Problem": [[453, "problem"], [461, "problem"], [467, "problem"], [468, "problem"], [469, "problem"], [472, "problem"], [478, "problem"], [526, "problem"], [800, "problem"], [931, "problem"]], "Configured Files": [[453, "configured-files"]], "Use In Compiled Code": [[453, "use-in-compiled-code"]], "C++, Debug/Release, CMake \u201cProgramming\u201d, Rants": [[454, "c-debug-release-cmake-programming-rants"]], "Pause": [[454, "pause"]], "Class Diagram": [[454, "class-diagram"]], "C++ Standard Version": [[454, "c-standard-version"]], "Debug Vs. Release Builds: CMAKE_BUILD_TYPE": [[454, "debug-vs-release-builds-cmake-build-type"]], "Compiler Type": [[454, "compiler-type"]], "Strings And Lists": [[454, "strings-and-lists"]], "MESSAGE() (A.k.a printf() Debugging)": [[454, "message-a-k-a-printf-debugging"]], "MESSAGE(): Popular \u201cModes\u201d": [[454, "message-popular-modes"]], "FIND_PACKAGE()": [[455, "find-package"]], "FIND_PACKAGE(... REQUIRED)": [[455, "find-package-required"]], "SQLite3 Parameters": [[455, "sqlite3-parameters"]], "Using SQLite3 Parameters": [[455, "using-sqlite3-parameters"]], "Demo Time": [[455, "demo-time"]], "CMake: An Introduction": [[456, "cmake-an-introduction"]], "Installation (\u201cDeployment\u201d)": [[457, "installation-deployment"]], "\u201cPrefix\u201d: Where Everything Comes Together": [[457, "prefix-where-everything-comes-together"]], "Installing Targets": [[457, "installing-targets"]], "Doing The Installation (make install)": [[457, "doing-the-installation-make-install"]], "And Shared Libraries?": [[457, "and-shared-libraries"]], "Shared Libraries: Installed Vs. Local (RUNPATH)": [[457, "shared-libraries-installed-vs-local-runpath"]], "Shared Libraries: ABI Versions": [[457, "shared-libraries-abi-versions"]], "Libraries, And Dependencies": [[458, "libraries-and-dependencies"]], "Libraries And Executables": [[458, "libraries-and-executables"]], "Targets And Dependencies": [[458, "targets-and-dependencies"]], "Visualizing Dependencies": [[458, "visualizing-dependencies"]], "Optional Code, Approach 1: Optional blacklist, C Macro  (Global Flags)": [[459, "optional-code-approach-1-optional-blacklist-c-macro-global-flags"]], "Optional blacklist, C Macro": [[459, "optional-blacklist-c-macro"]], "Optional Dependency In libhello": [[459, "optional-dependency-in-libhello"]], "Optional Dependency In libhello Header File": [[459, "optional-dependency-in-libhello-header-file"]], "Optional Dependency In libhello CPP File": [[459, "optional-dependency-in-libhello-cpp-file"]], "Good Or Bad?": [[459, "good-or-bad"], [460, "good-or-bad"]], "Optional Code, Approach 2: Pushing Optionality Down In Module Interface": [[460, "optional-code-approach-2-pushing-optionality-down-in-module-interface"]], "Remove Too Much CMake Optionality": [[460, "remove-too-much-cmake-optionality"]], "TARGET_COMPILE_DEFINITIONS() (backlist Availablility)": [[460, "target-compile-definitions-backlist-availablility"]], "Push Optionality Down In blacklist (\u27f6 INTERFACE Targets)": [[460, "push-optionality-down-in-blacklist-longrightarrow-interface-targets"]], "Optional Code: Problem Definition, OPTION()": [[461, "optional-code-problem-definition-option"]], "Solution: Add An Option": [[461, "solution-add-an-option"]], "Define Option USE_BLACKLIST; Option Usage, Cache": [[461, "define-option-use-blacklist-option-usage-cache"]], "Option Handling: Many Approaches": [[461, "option-handling-many-approaches"]], "Shared Libraries (Preview)": [[462, "shared-libraries-preview"]], "\u201cNormal\u201d Libraries": [[462, "normal-libraries"]], "Building Shared Libraries": [[462, "building-shared-libraries"]], "More About Loading": [[462, "more-about-loading"]], "Structure - Subdirectories, Dependencies, and Include Paths": [[463, "structure-subdirectories-dependencies-and-include-paths"]], "Reorganization": [[463, "reorganization"]], "Dependencies, And Target Properties": [[463, "dependencies-and-target-properties"]], "Targets, Properties, And More": [[464, "targets-properties-and-more"]], "Target Types": [[464, "target-types"]], "Properties: PRIVATE, PUBLIC, INTERFACE?": [[464, "properties-private-public-interface"]], "Running Tests": [[465, "running-tests"], [1141, "running-tests"]], "Setup And Usage": [[465, "setup-and-usage"]], "Add Simple Test": [[465, "add-simple-test"]], "Checking Test Output": [[465, "checking-test-output"]], "Questionability": [[465, "questionability"]], "C++ Code": [[466, "c-code"]], "Abstract Factory": [[467, "abstract-factory"]], "I2C Sensor Subhierarchy": [[467, "i2c-sensor-subhierarchy"]], "Problem: I2C Sensor Instantiation": [[467, "problem-i2c-sensor-instantiation"]], "Solution: Factory Objects": [[467, "solution-factory-objects"]], "Adapter": [[468, "adapter"]], "Solution: Adaptation": [[468, "solution-adaptation"]], "Basic Adaptation": [[468, "basic-adaptation"]], "Adapter Must Be-A Sensor": [[468, "adapter-must-be-a-sensor"]], "Adaptee Can Be-Any ASensor": [[468, "adaptee-can-be-any-asensor"]], "Adapter Is Doing Real Measurements": [[468, "adapter-is-doing-real-measurements"]], "Command": [[469, "command"]], "Motivation": [[469, "motivation"], [472, "motivation"], [488, "motivation"], [489, "motivation"], [585, "motivation"], [682, "motivation"], [684, "motivation"], [709, "motivation"], [715, "motivation"], [1022, "motivation"], [1028, "motivation"]], "Step 1: Basic insert()": [[469, "step-1-basic-insert"]], "Step 2: Basic find()": [[469, "step-2-basic-find"]], "Step 3: drop()": [[469, "step-3-drop"]], "Step 4: Handle find() Errors": [[469, "step-4-handle-find-errors"]], "Step 5: Handle insert() Errors": [[469, "step-5-handle-insert-errors"]], "Step 6: Bulk Insert?": [[469, "step-6-bulk-insert"]], "Step 6a: Bulk Insert Using std::initializer_list?": [[469, "step-6a-bulk-insert-using-std-initializer-list"]], "SocialDB Source Code": [[470, "socialdb-source-code"]], "Composite": [[471, "composite"]], "Unix Filesystem": [[471, "unix-filesystem"]], "Boolean Expressions": [[471, "boolean-expressions"]], "Thermometers, And Average Calculation": [[471, "thermometers-and-average-calculation"]], "Decorator": [[472, "decorator"]], "Variant 1: Aggregate Base Class Objects": [[472, "variant-1-aggregate-base-class-objects"]], "Variant 2: Aggregate Conrete Class Objects": [[472, "variant-2-aggregate-conrete-class-objects"]], "Step 1: Realize Current Situation": [[472, "step-1-realize-current-situation"]], "Step 2: Decorate ConstantSensor \u27f6 DecoratedConstantSensor": [[472, "step-2-decorate-constantsensor-longrightarrow-decoratedconstantsensor"]], "Step 3: Decorate RandomSensor \u27f6 DecoratedRandomSensor": [[472, "step-3-decorate-randomsensor-longrightarrow-decoratedrandomsensor"]], "Step 4: Verify That DecoratedConstantSensor Can Be Used As Sensor": [[472, "step-4-verify-that-decoratedconstantsensor-can-be-used-as-sensor"]], "Step 5: Verify That DecoratedRandomSensor Can Be Used As Sensor": [[472, "step-5-verify-that-decoratedrandomsensor-can-be-used-as-sensor"]], "Step 6: Verify That Current Situation Still Holds True": [[472, "step-6-verify-that-current-situation-still-holds-true"]], "Design Patterns With C++": [[473, "design-patterns-with-c"]], "Topics/Exercises": [[473, "topics-exercises"]], "Solutions": [[473, "solutions"], [487, "solutions"], [501, "solutions"]], "To Be Done": [[473, "to-be-done"]], "Case Study/Livehacking: Heating Control (Reading Sensors)": [[474, "case-study-livehacking-heating-control-reading-sensors"]], "Step 1: Monolithic": [[474, "step-1-monolithic"]], "Step 2: And D-Bus? \u27f6 Interfaces": [[474, "step-2-and-d-bus-longrightarrow-interfaces"]], "Step 3: Start D-Bus Implementation": [[474, "step-3-start-d-bus-implementation"]], "Pull Demo Logger/Store Out Into Separate Files": [[474, "pull-demo-logger-store-out-into-separate-files"]], "Adapter: DBusLogger": [[474, "adapter-dbuslogger"]], "Adapter: DBusValueStore": [[474, "adapter-dbusvaluestore"]], "Demo Program To Instantiate Either Demo Or DBus": [[474, "demo-program-to-instantiate-either-demo-or-dbus"]], "Stop Here, Need Help": [[474, "stop-here-need-help"]], "Tests": [[474, "tests"], [494, "tests"]], "Interpreter": [[475, "interpreter"]], "Observer": [[476, "observer"]], "Proxy": [[478, "proxy"]], "Solution: Proxy": [[478, "solution-proxy"]], "Local Variant": [[478, "local-variant"]], "Remote Variant": [[478, "remote-variant"]], "Exercise Foundation: Sensor Hierarchy": [[479, "exercise-foundation-sensor-hierarchy"]], "Hypothetical": [[479, "hypothetical"]], "Class Hierarchy": [[479, "class-hierarchy"]], "Singleton": [[480, "singleton"]], "And class Person?": [[480, "and-class-person"]], "UML Short Introduction": [[481, "uml-short-introduction"]], "Interface": [[481, "interface"]], "Interface Implementation, Inheritance": [[481, "interface-implementation-inheritance"]], "Connectors: Association, Aggregation, Composition": [[481, "connectors-association-aggregation-composition"]], "Association": [[481, "association"]], "Aggregation": [[481, "aggregation"]], "Composition": [[481, "composition"]], "Exercise: Abstract Factory": [[482, "exercise-abstract-factory"]], "Exercise: Adapter": [[483, "exercise-adapter"], [490, "exercise-adapter"]], "Exercise: Command": [[484, "exercise-command"]], "Exercise: Composite": [[485, "exercise-composite"]], "Exercise: Decorator": [[486, "exercise-decorator"]], "Exercises: Design Patterns": [[487, "exercises-design-patterns"]], "Exercise: Interpreter Combined With Adapter (And A Proxy)": [[488, "exercise-interpreter-combined-with-adapter-and-a-proxy"]], "Exercise: Arithmetic Expression Interpreter": [[489, "exercise-arithmetic-expression-interpreter"]], "Expression Interface": [[489, "expression-interface"]], "Arithmetic (Binary) Expressions": [[489, "arithmetic-binary-expressions"]], "Check: Combined Arithmetic Expressions": [[489, "check-combined-arithmetic-expressions"]], "And Variables?": [[489, "and-variables"]], "No Uninitialized Variables!!": [[489, "no-uninitialized-variables"]], "Assigning To Variables": [[489, "assigning-to-variables"]], "Using Variables As Expressions": [[489, "using-variables-as-expressions"]], "Exercise: Proxy (Remote Thermometer)": [[491, "exercise-proxy-remote-thermometer"]], "Network Communication": [[491, "network-communication"]], "Implementation Hints": [[491, "implementation-hints"]], "Exercise: Proxy (Rounding Thermometer)": [[492, "exercise-proxy-rounding-thermometer"]], "Exercise: Singleton (Flexible)": [[493, "exercise-singleton-flexible"]], "Exercise: Singleton (Flexible And Strict)": [[494, "exercise-singleton-flexible-and-strict"]], "Complications": [[494, "complications"]], "Exercise: Singleton (Inflexible)": [[495, "exercise-singleton-inflexible"]], "Solution: Abstract Factory": [[496, "solution-abstract-factory"]], "I2CSensorFactory Abstract Factory": [[496, "i2csensorfactory-abstract-factory"]], "Concrete Factory Implementations": [[496, "concrete-factory-implementations"]], "I2CSensorFactory_Vendor1": [[496, "i2csensorfactory-vendor1"], [496, "id1"]], "Solution: Adapter": [[497, "solution-adapter"]], "Adapter Class For Fahrenheit Sensors": [[497, "adapter-class-for-fahrenheit-sensors"]], "Solution: Command": [[498, "solution-command"]], "Command Classes": [[498, "command-classes"]], "Solution: Composite": [[499, "solution-composite"]], "Averaging (Composite) Sensor": [[499, "averaging-composite-sensor"]], "Solution: Decorator": [[500, "solution-decorator"]], "Decorated Sensor (Intermediate Interface)": [[500, "decorated-sensor-intermediate-interface"]], "Decorated Constant Sensor": [[500, "decorated-constant-sensor"]], "Decorated Random Sensor": [[500, "decorated-random-sensor"]], "Solution: Interpreter Combined With Adapter (And A Proxy)": [[502, "solution-interpreter-combined-with-adapter-and-a-proxy"]], "Solution: Arithmetic Expression Interpreter": [[503, "solution-arithmetic-expression-interpreter"]], "Solution: Observer": [[504, "solution-observer"]], "Solution: Proxy (Remote Thermometer)": [[505, "solution-proxy-remote-thermometer"]], "Client (Proxy) Thermometer": [[505, "client-proxy-thermometer"]], "Remote Stub": [[505, "remote-stub"]], "Solution: Proxy (Rounding Thermometer)": [[506, "solution-proxy-rounding-thermometer"]], "Rounding Sensor (Proxy) Implementation": [[506, "rounding-sensor-proxy-implementation"]], "Solution: Singleton (Flexible)": [[507, "solution-singleton-flexible"]], "Main Program": [[507, "main-program"], [508, "main-program"], [509, "main-program"], [747, "main-program"], [749, "main-program"], [751, "main-program"], [753, "main-program"]], "SocialInsurance Interface": [[507, "socialinsurance-interface"], [508, "socialinsurance-interface"]], "Two Concrete Implementations": [[507, "two-concrete-implementations"], [508, "two-concrete-implementations"]], "OEGK": [[507, "oegk"], [508, "oegk"]], "SVS": [[507, "svs"], [508, "svs"]], "Solution: Singleton (Flexible And Strict)": [[508, "solution-singleton-flexible-and-strict"]], "Solution: Singleton (Inflexible)": [[509, "solution-singleton-inflexible"]], "Singleton Implementation": [[509, "singleton-implementation"]], "Exercise (FH): Introducing a Sensor Class": [[510, "exercise-fh-introducing-a-sensor-class"]], "Github Project": [[510, "github-project"]], "CMake Build": [[510, "cmake-build"], [944, "cmake-build"]], "Dependencies/Usage Relationships": [[510, "dependencies-usage-relationships"]], "Onewire Sensor Usage: Example/Unit-Test": [[510, "onewire-sensor-usage-example-unit-test"]], "Step 1: Preparation": [[510, "step-1-preparation"]], "Step 2: Modify onewire-temperature-<firstname>-<lastname>.cpp To Use class W1Sensor": [[510, "step-2-modify-onewire-temperature-firstname-lastname-cpp-to-use-class-w1sensor"]], "Step 3: Answer A Question": [[510, "step-3-answer-a-question"]], "Exercise (FH): Extract Measurement Loop Into Function": [[511, "exercise-fh-extract-measurement-loop-into-function"]], "Exercise (FH): Replace Sensor": [[512, "exercise-fh-replace-sensor"]], "Exercise (FH): Write A Sensor Class: RandomSensor": [[513, "exercise-fh-write-a-sensor-class-randomsensor"]], "New Sensor Class: RandomSensor": [[513, "new-sensor-class-randomsensor"]], "Implementation Details": [[513, "implementation-details"]], "New Program: random-temperature.cpp": [[513, "new-program-random-temperature-cpp"]], "FH Sensor OO (First Try)": [[514, "fh-sensor-oo-first-try"]], "C++ Exercises": [[515, "c-exercises"]], "Exercise Projects": [[515, "exercise-projects"]], "Exercise: LEDStripeDisplay_nopoly (Non-Polymorphic)": [[516, "exercise-ledstripedisplay-nopoly-non-polymorphic"]], "Topics Covered": [[516, "topics-covered"], [517, "topics-covered"], [518, "topics-covered"], [519, "topics-covered"], [520, "topics-covered"], [521, "topics-covered"], [522, "topics-covered"], [525, "topics-covered"]], "Exercise: Hysteresis_nopoly (Non-Polymorphic)": [[517, "exercise-hysteresis-nopoly-non-polymorphic"]], "Exercise: AveragingSensor_nopoly (Non-Polymorphic)": [[518, "exercise-averagingsensor-nopoly-non-polymorphic"]], "Exercise: ConstantSensor_nopoly (Non-Polymorphic)": [[519, "exercise-constantsensor-nopoly-non-polymorphic"]], "Exercise: MockSensor_nopoly (Non-Polymorphic)": [[520, "exercise-mocksensor-nopoly-non-polymorphic"]], "Exercise: RandomSensor_nopoly (Non-Polymorphic)": [[521, "exercise-randomsensor-nopoly-non-polymorphic"]], "Implementation Hint: Randomicity In C++": [[521, "implementation-hint-randomicity-in-c"]], "Implementation Hint: Initializer Lists": [[521, "implementation-hint-initializer-lists"]], "Exercise: Mocking Switch (Non-Polymorphic)": [[522, "exercise-mocking-switch-non-polymorphic"]], "OO Basics, Interfaces (Shapes)": [[523, "oo-basics-interfaces-shapes"]], "Exercise Table": [[523, "exercise-table"]], "Setup, Exam Procedure": [[523, "setup-exam-procedure"]], "Point": [[523, "point"]], "Point: Constructor and Getter Methods": [[523, "point-constructor-and-getter-methods"]], "Point: Default Constructor": [[523, "point-default-constructor"]], "Point: Static Method: equal()": [[523, "point-static-method-equal"]], "Point: operator==()": [[523, "point-operator"]], "Point: Method: move()": [[523, "point-method-move"]], "Point: operator+=()": [[523, "point-suite-operator-plus-equals"]], "Point: Static Method: add()": [[523, "point-static-method-add"]], "Point: operator+()": [[523, "point-suite-operator-plus"]], "Circle": [[523, "circle"]], "Circle: Constructor": [[523, "circle-constructor"]], "Circle: operator==()": [[523, "circle-operator"]], "Circle: Method: area()": [[523, "circle-method-area"]], "Square": [[523, "square"]], "Square: Constructor": [[523, "square-constructor"]], "Square: operator==()": [[523, "square-operator"]], "Square: Method: area()": [[523, "square-method-area"]], "Interface: Shape": [[523, "interface-shape"]], "Interface: Circle And Square Is-A Shape": [[523, "interface-circle-and-square-is-a-shape"]], "Interface: Can Compute Area Of Any Shape": [[523, "interface-can-compute-area-of-any-shape"]], "Working On Exercise Projects": [[524, "working-on-exercise-projects"]], "Clone Github Repository": [[524, "clone-github-repository"]], "Massage googletest Sub-Module": [[524, "massage-googletest-sub-module"]], "Build Directory: Create Makefiles With cmake": [[524, "build-directory-create-makefiles-with-cmake"]], "Build Directory: Build With make": [[524, "build-directory-build-with-make"]], "Build Directory: Run Tests": [[524, "build-directory-run-tests"]], "Exercise: Sensor Interface": [[525, "exercise-sensor-interface"]], "Problem: Polymorphic Thermometer Usage": [[525, "problem-polymorphic-thermometer-usage"]], "The Exercise": [[525, "the-exercise"]], "Exercise: OneWire Sensor Factory": [[526, "exercise-onewire-sensor-factory"]], "Fixture": [[526, "fixture"], [761, "fixture"]], "basic": [[526, "basic"]], "notfound": [[526, "notfound"]], "find_is_const": [[526, "find-is-const"]], "Testing In Isolation": [[526, "testing-in-isolation"]], "Testing In Reality": [[526, "testing-in-reality"]], "On The PC": [[526, "on-the-pc"]], "On The Target": [[526, "on-the-target"]], "Exercise: OneWire Sensor Class": [[527, "exercise-onewire-sensor-class"]], "Download Monolithic Sensor Implementation": [[527, "download-monolithic-sensor-implementation"]], "Test Monolithic Implementation": [[527, "test-monolithic-implementation"]], "class W1Sensor": [[527, "class-w1sensor"]], "Exercise: Algorithms": [[528, "exercise-algorithms"]], "Copy Into std::vector": [[528, "copy-into-std-vector"]], "Find Element In std::vector": [[528, "find-element-in-std-vector"]], "Sort In-Place": [[528, "sort-in-place"]], "Sort Into A Copy": [[528, "sort-into-a-copy"]], "Exercise: Generic Filter": [[529, "exercise-generic-filter"]], "Exercise: Filter Elements Greater Than 10": [[530, "exercise-filter-elements-greater-than-10"]], "Exercise: Filter Odd Elements": [[531, "exercise-filter-odd-elements"]], "C++ Exercises: Standard Template Library": [[532, "c-exercises-standard-template-library"]], "Exercise: std::map<>": [[533, "exercise-std-map"]], "Exercises: Sensor Repository (std::map)": [[534, "exercises-sensor-repository-std-map"]], "Insert - Not Overwriting Existing Elements": [[535, "insert-not-overwriting-existing-elements"]], "Insert - Sunny Case": [[536, "insert-sunny-case"]], "Lookup - Not Found": [[537, "lookup-not-found"]], "Lookup - Sunny Case": [[538, "lookup-sunny-case"]], "Memory Leaks?": [[539, "memory-leaks"]], "Remove - Not Found": [[540, "remove-not-found"]], "Remove - Sunny Case": [[541, "remove-sunny-case"]], ".size() Is const": [[542, "size-is-const"]], "Exercise: Uniquify A Sequence": [[543, "exercise-uniquify-a-sequence"]], "Exercise: std::vector<>": [[544, "exercise-std-vector"]], "C++: TODO List": [[545, "c-todo-list"]], "Structural": [[545, "structural"]], "STL, Containers and Algorithms": [[545, "stl-containers-and-algorithms"]], "Templates/Overloading": [[545, "templates-overloading"]], "Functors: Overloading the Function Call Operator": [[545, "functors-overloading-the-function-call-operator"]], "Threads": [[545, "threads"]], "C++ >= 11": [[545, "c-11"]], "UserDB Exercise": [[545, "userdb-exercise"]], "Complete Transcription of C++11": [[545, "complete-transcription-of-c-11"]], "Exercise series": [[545, "exercise-series"]], "Code: C++: Class Templates": [[546, "code-c-class-templates"]], "Screenplay: C++: Class Templates": [[547, "screenplay-c-class-templates"]], "C++: Class Templates": [[548, "c-class-templates"]], "Code: C++: Dynamic Memory": [[549, "code-c-dynamic-memory"]], "Screenplay: C++: Dynamic Memory": [[550, "screenplay-c-dynamic-memory"]], "C: malloc()/free()": [[550, "c-malloc-free"]], "valgrind: Memory Leak": [[550, "valgrind-memory-leak"]], "valgrind: Array Bounds Write": [[550, "valgrind-array-bounds-write"]], "C++: new, delete": [[550, "c-new-delete"]], "C++: new, delete on Arrays": [[550, "c-new-delete-on-arrays"]], "valgrind: delete Mismatch": [[550, "valgrind-delete-mismatch"]], "C++: Dynamic Memory": [[551, "c-dynamic-memory"]], "Code: C++: Global Objects Initialization": [[552, "code-c-global-objects-initialization"]], "Screenplay: C++: Global Objects Initialization": [[553, "screenplay-c-global-objects-initialization"]], "Constructor and Destructor Order in Same File": [[553, "constructor-and-destructor-order-in-same-file"]], "Constructor and Destructor Order Across Files": [[553, "constructor-and-destructor-order-across-files"]], "Constructor and Destructor Order Across Files: Dependencies, Bugs": [[553, "constructor-and-destructor-order-across-files-dependencies-bugs"]], "C++: Global Objects Initialization": [[554, "c-global-objects-initialization"]], "Code: C++: Inheritance, Interfaces, virtual": [[555, "code-c-inheritance-interfaces-virtual"]], "Screenplay: C++: Inheritance, Interfaces, virtual": [[556, "screenplay-c-inheritance-interfaces-virtual"]], "C++: Inheritance, Interfaces, virtual": [[557, "c-inheritance-interfaces-virtual"]], "Code: C++: Ownership/RAII": [[558, "code-c-ownership-raii"]], "Screenplay: C++: Ownership/RAII": [[559, "screenplay-c-ownership-raii"]], "Allocate in Constructor": [[559, "allocate-in-constructor"]], "Deallocate in Destructor - Ownership": [[559, "deallocate-in-destructor-ownership"]], "Ownership: 2 x non-const": [[559, "ownership-2-x-non-const"]], "Ownership: const Method": [[559, "ownership-const-method"]], "Ownership: 2 x const": [[559, "ownership-2-x-const"]], "C++: Ownership/RAII": [[560, "c-ownership-raii"]], "Code: C++: STL Containers (Intro)": [[561, "code-c-stl-containers-intro"]], "Screenplay: C++: STL Containers (Intro)": [[562, "screenplay-c-stl-containers-intro"]], "Pointer Arithmetics Recap": [[562, "pointer-arithmetics-recap"]], "Container: std::vector": [[562, "container-std-vector"]], "Algorithm: std::vector and Naive Copy": [[562, "algorithm-std-vector-and-naive-copy"]], "Algorithm: std::vector and std::copy<>": [[562, "algorithm-std-vector-and-std-copy"]], "Container: std::list": [[562, "container-std-list"]], "Container: std::map": [[562, "container-std-map"]], "C++: STL Containers (Intro)": [[563, "c-stl-containers-intro"]], "Code: C++: Templates vs. Interfaces": [[564, "code-c-templates-vs-interfaces"]], "Screenplay: C++: Templates vs. Interfaces": [[565, "screenplay-c-templates-vs-interfaces"]], "C++: Templates vs. Interfaces": [[566, "c-templates-vs-interfaces"]], "Background": [[568, "background"]], "History": [[568, "history"], [1003, "history"]], "Content": [[568, "content"]], "Object Oriented Programming In Good Ol\u2019 C": [[569, "object-oriented-programming-in-good-ol-c"]], "C Is Simple, So Why C++?": [[569, "c-is-simple-so-why-c"]], "struct point: Something That Looks Like A Point": [[569, "struct-point-something-that-looks-like-a-point"]], "Good Style: Explicit Initialization Functions": [[569, "good-style-explicit-initialization-functions"]], "Comparison Functions: (In)Equality": [[569, "comparison-functions-in-equality"]], "Moving Points": [[569, "moving-points"]], "Vector Addition and Subtraction": [[569, "vector-addition-and-subtraction"]], "Distance Of Two Points": [[569, "distance-of-two-points"]], "Length Of A Point\u2019s Position Vector": [[569, "length-of-a-point-s-position-vector"]], "Summary: Is C Good Enough?": [[569, "summary-is-c-good-enough"]], "Copy Constructor, Assignment Operator": [[570, "copy-constructor-assignment-operator"]], "Compiler Generated Copy Constructor": [[570, "compiler-generated-copy-constructor"]], "Rule": [[570, null], [573, null], [672, "rule"]], "Manually Written Copy Constructor And Assignment Operator": [[570, "manually-written-copy-constructor-and-assignment-operator"]], "Classes and Objects": [[571, "classes-and-objects"]], "Introducing C++: class point": [[571, "introducing-c-class-point"]], "Access Specifiers: public And private": [[571, "access-specifiers-public-and-private"]], "Default Constructor": [[571, "default-constructor"], [573, "default-constructor"], [586, "default-constructor"], [587, "default-constructor"], [588, "default-constructor"], [589, "default-constructor"]], "Custom Constructor: Usage": [[571, "custom-constructor-usage"]], "Custom Constructor: Implementation": [[571, "custom-constructor-implementation"]], "Access Methods For Otherwise Private Members": [[571, "access-methods-for-otherwise-private-members"]], "Methods: Operations On An Object": [[571, "methods-operations-on-an-object"]], "And printf()?!": [[571, "and-printf"]], "Custom Constructor": [[572, "custom-constructor"], [586, "custom-constructor"]], "Constructors: why? (1)": [[572, "constructors-why-1"]], "Constructors: why? (2)": [[572, "constructors-why-2"]], "Constructors: Implementation - Inline": [[572, "constructors-implementation-inline"]], "Constructors: Implementation - Out-of-Line": [[572, "constructors-implementation-out-of-line"]], "Compiler Generated Default Constructor": [[573, "compiler-generated-default-constructor"]], "Compiler Generated Default Constructor: Pitfall: Built-In Types": [[573, "compiler-generated-default-constructor-pitfall-built-in-types"]], "Manually Written Default Constructor": [[573, "manually-written-default-constructor"]], "What If User-Defined Constructors Are In Place?": [[573, "what-if-user-defined-constructors-are-in-place"]], "More Constructors, Destructors": [[574, "more-constructors-destructors"]], "Default Constructor (1)": [[574, "default-constructor-1"]], "Default Constructor (2)": [[574, "default-constructor-2"]], "Object Lifecycle - Destructor": [[574, "object-lifecycle-destructor"]], "Destructors (1)": [[574, "destructors-1"]], "Destructors (2)": [[574, "destructors-2"]], "Destructors (3)": [[574, "destructors-3"]], "Destructors (4)": [[574, "destructors-4"]], "Data Encapsulation": [[575, "data-encapsulation"]], "Constructors: Member Initialization": [[576, "constructors-member-initialization"]], "Member Initialization? Assignment?": [[576, "member-initialization-assignment"]], "Real Initialization: Initializer List": [[576, "real-initialization-initializer-list"]], "Why Is That Important?": [[576, "why-is-that-important"]], "Why Else Is That Important?": [[576, "why-else-is-that-important"]], "Object Copy (And Resource Management): There Be Dragons": [[577, "object-copy-and-resource-management-there-be-dragons"]], "Copy in C": [[577, "copy-in-c"]], "Copy Constructor": [[577, "copy-constructor"]], "Pointer Members, And Compiler Generated Copy": [[577, "pointer-members-and-compiler-generated-copy"]], "Why? Dragons Everywhere!": [[577, "why-dragons-everywhere"]], "Solution: Write Copy Constructor Manually": [[577, "solution-write-copy-constructor-manually"]], "Copy Constructor: Recursive/Memberwise": [[577, "copy-constructor-recursive-memberwise"]], "Assignment Operator": [[577, "assignment-operator"]], "Assignment Operator and Pointer Members: Memory Leak": [[577, "assignment-operator-and-pointer-members-memory-leak"]], "Assignment Operator and Pointer Members: Memory Leak, Straighforward Fix": [[577, "assignment-operator-and-pointer-members-memory-leak-straighforward-fix"]], "Assignment Operator and Pointer Members: Self-Assignment": [[577, "assignment-operator-and-pointer-members-self-assignment"]], "Assignment Operator: Self Assignment, Correctly Implemented": [[577, "assignment-operator-self-assignment-correctly-implemented"]], "Overloading": [[578, "overloading"]], "Functions in C": [[578, "functions-in-c"]], "Functions in C++ \u2014 Overloading": [[578, "functions-in-c-overloading"]], "Underlying Mechanism: Name Mangling": [[578, "underlying-mechanism-name-mangling"]], "Overloading Class Methods: Just The Same": [[578, "overloading-class-methods-just-the-same"]], "Objects - Data and Methods": [[579, "objects-data-and-methods"]], "class point Again": [[579, "class-point-again"]], "Simple Methods: Access Methods (\u201cGetters\u201d)": [[579, "simple-methods-access-methods-getters"]], "How Are Members Accessed Inside Methods?": [[579, "how-are-members-accessed-inside-methods"]], "const Methods": [[579, "const-methods"], [580, "const-methods"]], "Non const Methods": [[579, "non-const-methods"]], "const": [[580, "const"]], "const: Immutable Variable": [[580, "const-immutable-variable"]], "const Correctness vs. Pollution": [[580, "const-correctness-vs-pollution"]], "this": [[581, "this"]], "Hidden Pointer: this (1)": [[581, "hidden-pointer-this-1"]], "Hidden Pointer: this (2)": [[581, "hidden-pointer-this-2"]], "Explicit this Pointer": [[581, "explicit-this-pointer"]], "Pass By Copy/Reference": [[582, "pass-by-copy-reference"]], "Pointers Can Be Left Uninitialized": [[582, "pointers-can-be-left-uninitialized"]], "References Cannot (Easily) Be Left Uninitialized": [[582, "references-cannot-easily-be-left-uninitialized"]], "Copy? Reference? C? Pointers!": [[582, "copy-reference-c-pointers"]], "C++: True References": [[582, "c-true-references"]], "And const? Pointers?": [[582, "and-const-pointers"]], "const References": [[582, "const-references"]], "const Reference: Substitute For \u201cPass by Copy\u201d": [[582, "const-reference-substitute-for-pass-by-copy"]], "static Methods": [[583, "static-methods"]], "Methods without Object": [[583, "methods-without-object"]], "Naive Implementation: Global Function": [[583, "naive-implementation-global-function"]], "C++: static Method": [[583, "c-static-method"]], "static Member Variables": [[584, "static-member-variables"]], "Good Old C: extern Global Variables": [[584, "good-old-c-extern-global-variables"]], "ODR: One Definition Rule": [[584, "odr-one-definition-rule"]], "(A Litte) More Overengineered: Declaration In Header File": [[584, "a-litte-more-overengineered-declaration-in-header-file"]], "Same Inside A Class: static Member Variable": [[584, "same-inside-a-class-static-member-variable"]], "Sideway: Definition In A Header File?": [[584, "sideway-definition-in-a-header-file"]], "static inline Member Defnition (Since C++17)": [[584, "static-inline-member-defnition-since-c-17"]], "Implementing (In)Equality": [[585, "implementing-in-equality"]], "Implementing (In)Equality: Global Function": [[585, "implementing-in-equality-global-function"]], "Implementing (In)Equality: Object Method": [[585, "implementing-in-equality-object-method"]], "Implementing Arithmetic: + (Vector Addition)": [[585, "implementing-arithmetic-vector-addition"]], "Implementing Arithmetic: + (Vector Addition): Global Function": [[585, "implementing-arithmetic-vector-addition-global-function"]], "Implementing Arithmetic: + (Vector Addition): Object Method": [[585, "implementing-arithmetic-vector-addition-object-method"]], "Implementing Arithmetic: += (Moving A Point)": [[585, "implementing-arithmetic-moving-a-point"]], "Implementing ostream Shift: std::cout << ...": [[585, "implementing-ostream-shift-std-cout"]], "Exercise (FH): class cuboid": [[586, "exercise-fh-class-cuboid"]], "Building class cuboid Upon class point3d": [[586, "building-class-cuboid-upon-class-point3d"]], "(In-)Equality": [[586, "in-equality"], [587, "in-equality"], [588, "in-equality"], [589, "in-equality"]], "+=": [[586, "id2"], [587, "id1"], [588, "id2"], [589, "id2"]], "-=": [[586, "id4"], [588, "id4"]], "+": [[586, "id6"], [587, "id2"], [588, "id6"], [589, "id3"]], "-": [[586, "id8"], [588, "id8"]], "<< (std::ostream)": [[586, "std-ostream"], [587, "std-ostream"], [588, "std-ostream"], [589, "std-ostream"]], "Surface": [[586, "surface"]], "Volume": [[586, "volume"]], "Exercise (FH): class point": [[587, "exercise-fh-class-point"]], "Initial Build": [[587, "initial-build"]], "Initial Test Run": [[587, "initial-test-run"]], "Extending class point: More Unit Tests": [[587, "extending-class-point-more-unit-tests"]], "Access Methods": [[587, "access-methods"]], "Unary -": [[587, "unary"], [588, "unary"]], "Exercise (FH): class point3d": [[588, "exercise-fh-class-point3d"]], "Building class rectangle Upon class point": [[588, "building-class-rectangle-upon-class-point"], [589, "building-class-rectangle-upon-class-point"]], "Coordinates": [[588, "coordinates"], [589, "coordinates"]], "Absolute Value": [[588, "absolute-value"]], "Distance Between Two Points": [[588, "distance-between-two-points"]], "Exercise (FH): class rectangle": [[589, "exercise-fh-class-rectangle"]], "Width, Height, Area": [[589, "width-height-area"]], "Error Handling: if - else if - else": [[591, "error-handling-if-else-if-else"]], "try - catch": [[592, "try-catch"]], "try - Block": [[592, "try-block"]], "catch - Block": [[592, "catch-block"]], "Standard Library: Exception-Hierarchy": [[592, "standard-library-exception-hierarchy"]], "Custom Exceptions (1)": [[592, "custom-exceptions-1"]], "Custom Exceptions (2)": [[592, "custom-exceptions-2"]], "Throwing Exceptions - throw": [[592, "throwing-exceptions-throw"]], "Last Words": [[592, "last-words"], [595, "last-words"]], "Function Templates": [[594, "function-templates"]], "Origin: Duplicated Code": [[594, "origin-duplicated-code"]], "A simple Function-Template": [[594, "a-simple-function-template"]], "More Templates from the STL": [[594, "more-templates-from-the-stl"]], "Class Templates": [[595, "class-templates"]], "Does This Work With Classes?": [[595, "does-this-work-with-classes"]], "Example: point as a Class Template (1)": [[595, "example-point-as-a-class-template-1"]], "Example: point as a Class Template (2)": [[595, "example-point-as-a-class-template-2"]], "Screenplay: std::copy<>() From <algorithm>": [[597, "screenplay-std-copy-from-algorithm"]], "Screenplay: Pointer Arithmetic, And Algorithms": [[598, "screenplay-pointer-arithmetic-and-algorithms"]], "Screenplay: Pointer Arithmetic Basics": [[599, "screenplay-pointer-arithmetic-basics"]], "Screenplay: Pointer Difference": [[600, "screenplay-pointer-difference"]], "Screenplay: Out Of Range Errors": [[601, "screenplay-out-of-range-errors"]], "Standard Template Library: Basics": [[602, "standard-template-library-basics"]], "Containers, Iterators, Algorithms": [[602, "containers-iterators-algorithms"]], "Pointer Increment and Decrement": [[602, "pointer-increment-and-decrement"]], "Out Of Range Errors (The Spirit Of C)": [[602, "out-of-range-errors-the-spirit-of-c"]], "Pointer Difference": [[602, "pointer-difference"]], "Step Width? (1)": [[602, "step-width-1"]], "Step Width? (2)": [[602, "step-width-2"]], "And Arbitrary Data Types?": [[602, "and-arbitrary-data-types"]], "Enter Algorithms (On Good Old C Arrays)": [[602, "enter-algorithms-on-good-old-c-arrays"]], "STL Algorithms": [[602, "stl-algorithms"]], "STL Containers": [[602, "stl-containers"]], "std::vector (And std::copy())": [[603, "std-vector-and-std-copy"]], "Dynamicity Details": [[603, "dynamicity-details"]], "STL Iterators: Pointer Arithmetic On A std::vector<>": [[603, "stl-iterators-pointer-arithmetic-on-a-std-vector"]], "Algorithms And Containers : std::copy": [[603, "algorithms-and-containers-std-copy"]], "Screenplay: std::vector And std::copy()": [[604, "screenplay-std-vector-and-std-copy"]], "std::vector<> Into C Array": [[604, "std-vector-into-c-array"]], "Copying Into std::vector (Without Allocation)": [[604, "copying-into-std-vector-without-allocation"]], "Solution 1: Pre-allocate Destination": [[604, "solution-1-pre-allocate-destination"]], "Solution 2: std::back_insert_iterator": [[604, "solution-2-std-back-insert-iterator"]], "Screenplay: std::vector Basics": [[605, "screenplay-std-vector-basics"]], "Screenplay: std::vector, And Pointer Arithmetics": [[606, "screenplay-std-vector-and-pointer-arithmetics"]], "Documentation": [[607, null], [608, null], [609, null], [610, null], [611, null], [613, null], [614, null], [615, null], [616, null], [619, null], [620, null], [623, null], [628, null], [774, null], [774, null], [790, null], [792, "documentation"], [792, null], [796, "documentation"], [798, null], [798, null], [798, null], [824, "documentation"], [827, "documentation"], [837, null], [838, null], [841, null], [845, null], [845, null], [852, null], [853, null], [854, null], [854, null], [854, null], [855, null], [870, null], [870, null], [870, null], [871, null], [872, null], [873, null], [889, null], [889, null], [889, null], [892, null], [893, null], [926, null], [928, null], [930, null], [932, null], [933, null], [934, null], [936, null], [936, null], [936, null], [936, null], [936, null], [936, null], [939, null], [940, null], [941, null], [942, null], [942, null], [943, null], [946, null], [946, null], [946, null], [946, null], [984, null], [984, null], [985, null], [1060, null], [1070, null], [1148, "documentation"]], "binary_search<>: On Sorted Sequence": [[607, "binary-search-on-sorted-sequence"]], "More Intelligent Search": [[607, "more-intelligent-search"], [613, "more-intelligent-search"]], "copy<>": [[608, "copy"]], "find<>: Sequential Search, by Equality": [[609, "find-sequential-search-by-equality"]], "Basic Usage": [[609, "basic-usage"], [728, "basic-usage"], [892, "basic-usage"], [1062, "basic-usage"]], "Not Found?": [[609, "not-found"]], "find_if<>: Sequential Search, Customizable": [[610, "find-if-sequential-search-customizable"]], "if, Using a Plain Function": [[610, "if-using-a-plain-function"]], "if, Using a Functor Class": [[610, "if-using-a-functor-class"]], "for_each<>": [[611, "for-each"]], "Basic Algorithms": [[612, "basic-algorithms"]], "Sorted Arrays": [[612, "sorted-arrays"]], "lower_bound<>: On Sorted Sequence": [[613, "lower-bound-on-sorted-sequence"]], "reverse<>: Reversing In-Place": [[614, "reverse-reversing-in-place"]], "reverse_copy<>: Copying and Reversing": [[615, "reverse-copy-copying-and-reversing"]], "sort<>": [[616, "sort"]], "Algorithm: std::sort": [[616, "algorithm-std-sort"]], "Algorithm: std::sort, custom comparison": [[616, "algorithm-std-sort-custom-comparison"]], "Sequential Containers": [[617, "sequential-containers"], [618, "sequential-containers"]], "Common Characteristics": [[617, "common-characteristics"]], "list<>": [[619, "list"]], "Insertion and Deletion": [[619, "insertion-and-deletion"]], "vector<>": [[620, "vector"]], "Characteristics": [[620, "characteristics"]], "Modification at the Back": [[620, "modification-at-the-back"]], "Insertion": [[620, "insertion"]], "Example": [[620, "example"], [1077, "example"]], "Associative Containers": [[621, "associative-containers"], [622, "associative-containers"]], "Type Instantiation": [[623, "type-instantiation"]], "Filling The Container": [[623, "filling-the-container"]], "Inserting Elements": [[623, "inserting-elements"]], "Searching": [[623, "searching"], [647, "searching"]], "Screenplay: std::map Initialization And Inserting": [[624, "screenplay-std-map-initialization-and-inserting"]], "Definining The Type": [[624, "definining-the-type"]], "Initialization": [[624, "initialization"], [647, "initialization"]], "Screenplay: Inserting Elements": [[625, "screenplay-inserting-elements"]], "Subscript Operator": [[625, "subscript-operator"]], "insert()": [[625, "insert"]], "Screenplay: Removing (Erasing) Elements": [[626, "screenplay-removing-erasing-elements"]], "By Pointer (Err, Iterator)": [[626, "by-pointer-err-iterator"]], "By Key": [[626, "by-key"]], "Screenplay: Searching": [[627, "screenplay-searching"]], "find(key)": [[627, "find-key"]], "[key]": [[627, "key"]], "at(key)": [[627, "at-key"]], "multimap<>": [[628, "multimap"]], "Allocator Basics": [[629, "allocator-basics"]], "STL: Exercises": [[631, "stl-exercises"]], "Exercise: Reverse a String": [[632, "exercise-reverse-a-string"]], "Exercise: Reverse A String": [[633, "exercise-reverse-a-string"]], "Solution: Reverse a String": [[634, "solution-reverse-a-string"]], "Naive": [[634, "naive"]], "Using std::reverse<>": [[634, "using-std-reverse"]], "Using std::reverse_copy<>": [[634, "using-std-reverse-copy"]], "Dynamic Memory (To Be Done)": [[636, "dynamic-memory-to-be-done"]], "Inheritance Basics": [[638, "inheritance-basics"]], "Plain (Base) Class": [[638, "plain-base-class"], [639, "plain-base-class"]], "Inheriting (Deriving) From Base": [[638, "inheriting-deriving-from-base"]], "Derived is-a Base?": [[638, "derived-is-a-base"]], "Destructors And Inheritance": [[639, "destructors-and-inheritance"]], "Derived Class, And Destructor": [[639, "derived-class-and-destructor"]], "And Base Class Conversion?": [[639, "and-base-class-conversion"]], "Inheritance And Object Oriented Design": [[640, "inheritance-and-object-oriented-design"]], "C++ \u201cInterfaces\u201d": [[641, "c-interfaces"]], "Bringing It All Together": [[641, "bringing-it-all-together"]], "Polymorphic Usage Of Objects": [[642, "polymorphic-usage-of-objects"]], "What Larger Systems Want": [[642, "what-larger-systems-want"]], "Pitfall \u27f6 Pure Virtual Methods": [[642, "pitfall-longrightarrow-pure-virtual-methods"]], "Pure Virtual Method": [[642, "pure-virtual-method"]], "Inheritance: private, protected (Implementation Inheritance)": [[643, "inheritance-private-protected-implementation-inheritance"]], "Virtual Destructors": [[644, "virtual-destructors"]], "Is-A Relationships And Destructors": [[644, "is-a-relationships-and-destructors"]], "Pure Virtual Destructor?": [[644, "pure-virtual-destructor"]], "Virtual Methods": [[645, "virtual-methods"]], "Simple Is-A Relationship Is Not Enough": [[645, "simple-is-a-relationship-is-not-enough"]], "Enter virtual": [[645, "enter-virtual"]], "Caution: virtual": [[645, "caution-virtual"]], "std::string": [[647, "std-string"]], "Addition, And Such": [[647, "addition-and-such"]], "Conversion From String": [[647, "conversion-from-string"]], "Conversion To String": [[647, "conversion-to-string"]], "Substrings": [[647, "substrings"]], "Exercise: Paint the American Flag Onto Standard Output": [[648, "exercise-paint-the-american-flag-onto-standard-output"]], "FH/Moodle Quiz: C++": [[649, "fh-moodle-quiz-c"]], "Exercises: Miscellaneous": [[650, "exercises-miscellaneous"]], "Exercise: Sum of Integers Coming From cin": [[651, "exercise-sum-of-integers-coming-from-cin"]], "Exercises: User Database": [[652, "exercises-user-database"]], "Exercise: Access Methods for Members": [[653, "exercise-access-methods-for-members"]], "Exercise: const Members": [[654, "exercise-const-members"]], "Exercise: Use const": [[655, "exercise-use-const"]], "Exercise: Default Constructor (was: Arrays of Objects)": [[656, "exercise-default-constructor-was-arrays-of-objects"]], "Exercise: Simple Method (Users Age By n Years)": [[657, "exercise-simple-method-users-age-by-n-years"]], "Exercise: Transform struct User Into A Class": [[658, "exercise-transform-struct-user-into-a-class"]], "Exercise: Insert a User into UserDB": [[659, "exercise-insert-a-user-into-userdb"]], "Exercise: Search a User By Lastname (std::find_if)": [[660, "exercise-search-a-user-by-lastname-std-find-if"]], "Exercise: Search, \u201cUser Not Found\u201d Exception": [[661, "exercise-search-user-not-found-exception"]], "What\u2019s Wrong?": [[661, "what-s-wrong"]], "Exercise: Search a User By Lastname": [[662, "exercise-search-a-user-by-lastname"]], "Exercise: Use std::vector in UserDB": [[663, "exercise-use-std-vector-in-userdb"]], "History, Background": [[666, "history-background"]], "Make C++ Great Again": [[666, "make-c-great-again"]], "The \u201cNew\u201d C++": [[666, "the-new-c"]], "A Live-Hacked Tour Around The New C++": [[667, "a-live-hacked-tour-around-the-new-c"]], "C++03 To-Do List Version": [[667, "c-03-to-do-list-version"]], "Real Container Initialization": [[667, "real-container-initialization"]], "Long iterator Type Names \u27f6 auto": [[667, "long-iterator-type-names-longrightarrow-auto"]], "More auto: Unpacking std::pair": [[667, "more-auto-unpacking-std-pair"]], "Pitfall: Plain auto Creates Copy \u27f6 const auto&": [[667, "pitfall-plain-auto-creates-copy-longrightarrow-const-auto"]], "Iterators Are So Old-School: Range Based For": [[667, "iterators-are-so-old-school-range-based-for"]], "Still Too Old-School: Want Python\u2019s Tuple Unpacking": [[667, "still-too-old-school-want-python-s-tuple-unpacking"]], "What If To-Do List Items Can Really Do Something? \u27f6 Functions": [[667, "what-if-to-do-list-items-can-really-do-something-longrightarrow-functions"]], "Function Pointers Are Old-School \u27f6 std::function": [[667, "function-pointers-are-old-school-longrightarrow-std-function"]], "Definitely Not Old-School: Lambda": [[667, "definitely-not-old-school-lambda"]], "Inevitable: Threads": [[667, "inevitable-threads"]], "Unions? std::variant!": [[667, "unions-std-variant"]], "Wrapping All That Into A Class": [[667, "wrapping-all-that-into-a-class"]], "Architectural Considerations: No Implementation Inheritance Wanted": [[667, "architectural-considerations-no-implementation-inheritance-wanted"]], "Wrapping Up: Initializer": [[667, "wrapping-up-initializer"]], "C++03 enum Types: Motivation": [[668, "c-03-enum-types-motivation"]], "C++03 enum Types: Problems": [[668, "c-03-enum-types-problems"]], "C++11 enum class": [[668, "c-11-enum-class"]], "C++11 enum class: Underlying Type": [[668, "c-11-enum-class-underlying-type"]], "Brace Initialization (Uniform Initialization)": [[669, "brace-initialization-uniform-initialization"]], "std::initializer_list: Brace Initialization, Implementor\u2019s View": [[670, "std-initializer-list-brace-initialization-implementor-s-view"]], "std::initializer_list": [[670, "std-initializer-list"]], "Direct Usage": [[670, "direct-usage"]], "Custom Class That Supports Brace Initialization": [[670, "custom-class-that-supports-brace-initialization"]], "Brace Initialization: Introduction": [[671, "brace-initialization-introduction"]], "Motivation: Inconsistent Initialization Styles": [[671, "motivation-inconsistent-initialization-styles"]], "Motivation: Integral Types Initialization": [[671, "motivation-integral-types-initialization"]], "Motivation: Aggregate Initialization": [[671, "motivation-aggregate-initialization"]], "Motivation: Object Initialization/Constructor": [[671, "motivation-object-initialization-constructor"]], "Motivation: Container Initialization (Missing Pre C++11)": [[671, "motivation-container-initialization-missing-pre-c-11"]], "Motivation: Member Array Initialization": [[671, "motivation-member-array-initialization"]], "Motivation: Heap Array Initialization": [[671, "motivation-heap-array-initialization"]], "Solution: Brace Initialization In C++11": [[671, "solution-brace-initialization-in-c-11"]], "Good: Refuses To Narrow Built-In Types": [[671, "good-refuses-to-narrow-built-in-types"]], "Brace Initialization: A Mess": [[672, "brace-initialization-a-mess"]], "Explicit Constructor And Brace Initialization": [[672, "explicit-constructor-and-brace-initialization"]], "Ambiguity: Explicit And std::initializer_list Constructor": [[672, "ambiguity-explicit-and-std-initializer-list-constructor"]], "Realistic Example: std::vector: Two int (Explicit)": [[672, "realistic-example-std-vector-two-int-explicit"]], "Realistic Example: std::vector: Two int (std::initializer_list)": [[672, "realistic-example-std-vector-two-int-std-initializer-list"]], "Nicolai Josuttis, Complaining About C++": [[672, "nicolai-josuttis-complaining-about-c"]], "Delegating Constructor: Motivation": [[673, "delegating-constructor-motivation"]], "Delegating Constructor: Solution": [[673, "delegating-constructor-solution"]], "constexpr": [[674, "constexpr"]], "Basic Usage: Expressions": [[674, "basic-usage-expressions"]], "constexpr Functions": [[674, "constexpr-functions"]], "Recursive constexpr": [[674, "recursive-constexpr"]], "constexpr Objects": [[674, "constexpr-objects"]], "Afterword, Further Reading": [[675, "afterword-further-reading"]], "Uses In The Standard Library": [[675, "uses-in-the-standard-library"]], "Other Uses": [[675, "other-uses"]], "All Said \u27f6 Guidelines": [[675, "all-said-longrightarrow-guidelines"]], "Further Reading (Well, Videos \ud83d\ude09)": [[675, "further-reading-well-videos-wink"]], "Move Semantics, Rvalue References": [[676, "move-semantics-rvalue-references"]], "Alternative Livehacking": [[676, "alternative-livehacking"]], "Starting Point": [[677, "starting-point"], [64, "starting-point"]], "SmartPtr With Move Semantics": [[677, "smartptr-with-move-semantics"]], "Return SmartPtr Object From Function": [[677, "return-smartptr-object-from-function"]], "Assign SmartPtr Object \u27f6 Moved": [[677, "assign-smartptr-object-longrightarrow-moved"]], "Implementing Move Semantics (class String, Live Hacked)": [[678, "implementing-move-semantics-class-string-live-hacked"]], "Copy Semantics, Revisited": [[678, "copy-semantics-revisited"]], "class String, Without Copy": [[678, "class-string-without-copy"]], "Return From Function: Copy (Or Move) Wanted": [[678, "return-from-function-copy-or-move-wanted"]], "Move Constructor? Move?": [[678, "move-constructor-move"]], "Implementing Move Constructor": [[678, "implementing-move-constructor"]], "And Move Assignment?": [[678, "and-move-assignment"]], "Implementing Move Assignment": [[678, "implementing-move-assignment"]], "Using Move Semantics In Own Code": [[679, "using-move-semantics-in-own-code"]], "Using String: class Person": [[679, "using-string-class-person"]], "What?": [[679, "what"], [853, "what"]], "Using Rvalue References Inside Function: std::move": [[679, "using-rvalue-references-inside-function-std-move"]], "Lvalues, Rvalues, And Moving": [[680, "lvalues-rvalues-and-moving"]], "Return Object Problem: Reference To Stack-Based Object": [[680, "return-object-problem-reference-to-stack-based-object"]], "Return Object Problem: Solution: Copy": [[680, "return-object-problem-solution-copy"]], "Move Semantics: Wish List": [[680, "move-semantics-wish-list"]], "Theory: Lvalues": [[680, "theory-lvalues"]], "Theory: Rvalues": [[680, "theory-rvalues"]], "Lvalue References (The Good Old Ones)": [[680, "lvalue-references-the-good-old-ones"]], "Rvalue References: So What Is That?": [[680, "rvalue-references-so-what-is-that"]], "Rvalue References As Function Parameters": [[680, "rvalue-references-as-function-parameters"]], "Use Of Rvalue References Parameter Inside A Function: Is An Lvalue": [[680, "use-of-rvalue-references-parameter-inside-a-function-is-an-lvalue"]], "Enter Move Constructor And Move Assignment": [[680, "enter-move-constructor-and-move-assignment"]], "Rules": [[680, null]], "Templates end with \u201c>>\u201d": [[681, "templates-end-with"]], "Duck Typing (Err, auto) Without A Duck": [[682, "duck-typing-err-auto-without-a-duck"]], "Most Basic Usage": [[682, "most-basic-usage"]], "auto Is Only The Basic Type": [[682, "auto-is-only-the-basic-type"]], "If You Want Reference, Say So!": [[682, "if-you-want-reference-say-so"]], "If You Want Const-Reference, Say So!": [[682, "if-you-want-const-reference-say-so"]], "If You Want Pointer, Say So!": [[682, "if-you-want-pointer-say-so"]], "And Arrays? Decay To Pointers!": [[682, "and-arrays-decay-to-pointers"]], "Concepts: Overview": [[684, "concepts-overview"]], "No Problem: Template Instantiation Chosen By Parameter Type": [[684, "no-problem-template-instantiation-chosen-by-parameter-type"]], "Problem: Template Instantiation Chosen By Parameter Type": [[684, "problem-template-instantiation-chosen-by-parameter-type"]], "Concepts To The Rescue": [[684, "concepts-to-the-rescue"]], "Syntactic Variations": [[684, "syntactic-variations"]], "toolcase-1-conceptless.cpp": [[685, "toolcase-1-conceptless-cpp"]], "toolcase-2-conceptless-error.cpp": [[686, "toolcase-2-conceptless-error-cpp"]], "toolcase-3-concept-integral.cpp": [[687, "toolcase-3-concept-integral-cpp"]], "Concepts: Links": [[688, "concepts-links"]], "Writing Your Own Concepts": [[689, "writing-your-own-concepts"]], "Starting Point: Good Old Function": [[689, "starting-point-good-old-function"]], "Need Template": [[689, "need-template"]], "Error: Requirement Not Fulfilled": [[689, "error-requirement-not-fulfilled"]], "Concept: has_size": [[689, "concept-has-size"]], "Concept: index_returns_double": [[689, "concept-index-returns-double"]], "example-1-good-old-func.cpp": [[690, "example-1-good-old-func-cpp"]], "example-2-need-template.cpp": [[691, "example-2-need-template-cpp"]], "example-4-concept-has-size.cpp": [[692, "example-4-concept-has-size-cpp"]], "example-5-concept-index-ret-double.cpp": [[693, "example-5-concept-index-ret-double-cpp"]], "Coroutines": [[694, "coroutines"]], "Coroutines: An Overview": [[695, "coroutines-an-overview"]], "Foreword": [[695, "foreword"]], "Prototypical Introductory Exampe: Fibonacci Numbers": [[695, "prototypical-introductory-exampe-fibonacci-numbers"]], "Step By Step: Simplest": [[695, "step-by-step-simplest"]], "Simplest: Incremental Fixing And Explaining": [[695, "simplest-incremental-fixing-and-explaining"]], "Driving Coroutines: Coroutine Anatomy": [[695, "driving-coroutines-coroutine-anatomy"]], "Driving Coroutines: Resuming": [[695, "driving-coroutines-resuming"]], "Suspension: Returning Control To Caller (co_yield)": [[695, "suspension-returning-control-to-caller-co-yield"]], "Playing Around: Iteration, Mimicking Python Iterator Protocol": [[695, "playing-around-iteration-mimicking-python-iterator-protocol"]], "Playing Around: Iteration, Range-Based-For": [[695, "playing-around-iteration-range-based-for"]], "Playing Around: Generic Generator": [[695, "playing-around-generic-generator"]], "Playing Around: Fibonacci Numbers, Generator Version": [[695, "playing-around-fibonacci-numbers-generator-version"]], "Pitfalls: Coroutines Are Stateful!": [[695, "pitfalls-coroutines-are-stateful"]], "fibo-generator.cpp": [[696, "fibo-generator-cpp"]], "fibonacci.cpp": [[697, "fibonacci-cpp"]], "generator.h": [[698, "generator-h"]], "generator-hello.cpp": [[699, "generator-hello-cpp"]], "simplest.cpp": [[700, "simplest-cpp"]], "suspend.cpp": [[701, "suspend-cpp"]], "suspend-iter.cpp": [[702, "suspend-iter-cpp"]], "suspend-next.cpp": [[703, "suspend-next-cpp"]], "= default": [[704, "default"]], "Problem: Default Constructor Not Automatically Generated": [[704, "problem-default-constructor-not-automatically-generated"]], "C++ < 11 Solution: Write Default Constructor \ud83d\ude20 \ud83d\udc4e": [[704, "c-11-solution-write-default-constructor-angry-thumbsdown"]], "C++ >= 11 Solution: = default": [[704, "c-11-solution-default"]], "= delete": [[705, "delete"]], "Problem: Copy Is Not Always Wanted": [[705, "problem-copy-is-not-always-wanted"]], "C++ < 11 Solution: Make Copy private": [[705, "c-11-solution-make-copy-private"]], "C++ >= 11 Solution: = delete Copy": [[705, "c-11-solution-delete-copy"]], "final": [[706, "final"]], "Architectural Decisions": [[706, "architectural-decisions"]], "Enter final: Architectural Cleanliness By Compiler": [[706, "enter-final-architectural-cleanliness-by-compiler"]], "New Language Features": [[707, "new-language-features"]], "Lambda": [[708, "lambda"], [709, "lambda"]], "Lambda To The Rescue": [[709, "lambda-to-the-rescue"]], "Excursion: Python Closures": [[709, "excursion-python-closures"]], "Same In C++: Capturing": [[709, "same-in-c-capturing"]], "So What Is That? (Answer: A Functor)": [[709, "so-what-is-that-answer-a-functor"]], "Capturing By Reference \u27f6 Careful!": [[709, "capturing-by-reference-longrightarrow-careful"]], "More About Capturing": [[709, "more-about-capturing"]], "Lambda: More Capturing": [[710, "lambda-more-capturing"]], "More Capture Syntax": [[710, "more-capture-syntax"]], "Capturing Explicitly, By Copy": [[710, "capturing-explicitly-by-copy"]], "Capturing Explicitly, By Reference": [[710, "capturing-explicitly-by-reference"]], "Mixed Explicit Capture": [[710, "mixed-explicit-capture"]], "Define Variables In Capture": [[710, "define-variables-in-capture"]], "Capturing All By Reference": [[710, "capturing-all-by-reference"]], "Capturing All By Copy": [[710, "capturing-all-by-copy"]], "Capturing All By Copy, Except Some By Reference": [[710, "capturing-all-by-copy-except-some-by-reference"]], "Capturing this": [[710, "capturing-this"]], "Live Hacking: Handwritten Functors (Too Much Boilerplate)": [[711, "live-hacking-handwritten-functors-too-much-boilerplate"]], "Original Lambda Demo Proggy": [[711, "original-lambda-demo-proggy"]], "Morph Lambda Into Handwritten Functor Class": [[711, "morph-lambda-into-handwritten-functor-class"]], "Live Hacking: Handwritten Functors, And Capturing By Reference (Pitfalls)": [[712, "live-hacking-handwritten-functors-and-capturing-by-reference-pitfalls"]], "Original, Handwritten Functor (By Copy)": [[712, "original-handwritten-functor-by-copy"]], "Possible Pitfall: Capturing A Reference": [[712, "possible-pitfall-capturing-a-reference"]], "Lifetime Of Temporary, Made Explicit": [[712, "lifetime-of-temporary-made-explicit"]], "Lifetime Of Temporary, Made Explicit \u27f6 \ud83d\ude91": [[712, "lifetime-of-temporary-made-explicit-longrightarrow-ambulance"]], "override": [[714, "override"]], "Correct Overriding \u2026": [[714, "correct-overriding"]], "\u2026 Is Very Hard": [[714, "is-very-hard"]], "More Problems Arise": [[714, "more-problems-arise"]], "Solution: override": [[714, "solution-override"]], "Range Based for Loops: Introduction": [[715, "range-based-for-loops-introduction"]], "Enter Range Based for Loops": [[715, "enter-range-based-for-loops"]], "Range Based for Loops, And auto": [[715, "range-based-for-loops-and-auto"]], "Case Study: std::map Iteration": [[715, "case-study-std-map-iteration"]], "Case Study: Range Based for On std::map": [[716, "case-study-range-based-for-on-std-map"]], "Gool Ol\u2019 Days: Iteration In C++ < 11": [[716, "gool-ol-days-iteration-in-c-11"]], "Basic C++11 Iteration: Range Based For, auto, And Initialization": [[716, "basic-c-11-iteration-range-based-for-auto-and-initialization"]], "Variation: Preventing Accidental Copy Using const auto&": [[716, "variation-preventing-accidental-copy-using-const-auto"]], "Pythonicity: Tuple Unpacking, err Structured Binding": [[716, "pythonicity-tuple-unpacking-err-structured-binding"]], "Structured Binding - Preventing Accidental Copy": [[716, "structured-binding-preventing-accidental-copy"]], "Ranges And Views: Good Or Bad?": [[717, "ranges-and-views-good-or-bad"]], "Dangling Iterator Protection": [[717, "dangling-iterator-protection"]], "Performance: views::drop Is Easy": [[717, "performance-views-drop-is-easy"]], "Performance: views::filter Is Not Easy": [[717, "performance-views-filter-is-not-easy"]], "Constraints: How To Read?": [[717, "constraints-how-to-read"]], "And drop()? std::vector Is Easy": [[717, "and-drop-std-vector-is-easy"]], "And drop()? std::list Is Not Easy": [[717, "and-drop-std-list-is-not-easy"]], "One Of Many Bugs, Introduced By .begin() Caching": [[717, "one-of-many-bugs-introduced-by-begin-caching"]], "Exceptions From Rules \u27f6 Dogmatic Don\u2019ts (Sigh, C++)": [[717, "exceptions-from-rules-longrightarrow-dogmatic-don-ts-sigh-c"]], "Ranges: Overview": [[719, "ranges-overview"]], "Ranges?": [[719, "ranges"]], "Containers And Views (Storage Behavior)": [[719, "containers-and-views-storage-behavior"]], "Pipe Syntax": [[719, "pipe-syntax"]], "Views As Parameters: Good Old Template": [[719, "views-as-parameters-good-old-template"]], "Views As Parameters: Abbreviated Function Template": [[719, "views-as-parameters-abbreviated-function-template"]], "Views As Parameters: Concepts": [[719, "views-as-parameters-concepts"]], "Available <ranges> Concepts": [[719, "available-ranges-concepts"]], "Ranges And Views: Links": [[720, "ranges-and-views-links"]], "Tuple Unpacking (Err, Structured Binding)": [[721, "tuple-unpacking-err-structured-binding"]], "Variations, Compatible Data Types": [[721, "variations-compatible-data-types"]], "struct: By Copy": [[721, "struct-by-copy"]], "struct: Reference": [[721, "struct-reference"]], "struct: By const Reference": [[721, "struct-by-const-reference"]], "std::tuple: By Copy": [[721, "std-tuple-by-copy"]], "std::tuple: By Reference": [[721, "std-tuple-by-reference"]], "std::tuple: By const Reference": [[721, "std-tuple-by-const-reference"]], "Arrays: By Copy": [[721, "arrays-by-copy"]], "Arrays: By Reference": [[721, "arrays-by-reference"]], "Arrays: By const Reference": [[721, "arrays-by-const-reference"]], "Smart Pointers: Closing Words": [[722, "smart-pointers-closing-words"]], "Shared Pointers: Closing Words": [[722, "shared-pointers-closing-words"]], "Smart Pointers (std::unique_ptr, std::shared_ptr)": [[723, "smart-pointers-std-unique-ptr-std-shared-ptr"]], "Why Smart Pointers?": [[724, "why-smart-pointers"]], "Recap: Constructors and Destructors": [[724, "recap-constructors-and-destructors"]], "(Trying To) Handwrite A Smart Pointer Class in C++ Before C++11": [[725, "trying-to-handwrite-a-smart-pointer-class-in-c-before-c-11"]], "Sensors To Manage": [[725, "sensors-to-manage"]], "Basic Resource Management, Operator Overloading": [[725, "basic-resource-management-operator-overloading"]], "Copy Constructor And Assignment Operator (And Default Ctor)": [[725, "copy-constructor-and-assignment-operator-and-default-ctor"]], "auto_ptr Style": [[725, "auto-ptr-style"]], "Explicit move() Method Maybe?": [[725, "explicit-move-method-maybe"]], "Stop!!!": [[725, "stop"]], "std::shared_ptr": [[726, "std-shared-ptr"]], "Spirit: Not Unique, But Shared (i.e. Reference Counted)": [[726, "spirit-not-unique-but-shared-i-e-reference-counted"]], "std::shared_ptr: Copy": [[726, "std-shared-ptr-copy"]], "std::shared_ptr vs. std::unique_ptr": [[726, "std-shared-ptr-vs-std-unique-ptr"]], "std::shared_ptr: Object Lifetime": [[726, "std-shared-ptr-object-lifetime"]], "std::shared_ptr: Juggling": [[726, "std-shared-ptr-juggling"]], "Demo: Basic Usage": [[726, "demo-basic-usage"]], "Demo: std::make_shared": [[726, "demo-std-make-shared"]], "Demo: Cyclic References": [[726, "demo-cyclic-references"]], "std::unique_ptr": [[727, "std-unique-ptr"]], "The Spirit Of std::unique_ptr": [[727, "the-spirit-of-std-unique-ptr"]], "Basic Usage: Prevent Leaks": [[727, "basic-usage-prevent-leaks"]], "Eliminate Chance Of Leakage \u27f6 Ownership": [[727, "eliminate-chance-of-leakage-longrightarrow-ownership"]], "Saving Keystrokes: std::make_unique<>()": [[727, "saving-keystrokes-std-make-unique"]], "Explicitly Acknowledging Ownership Transfer: std::move()": [[727, "explicitly-acknowledging-ownership-transfer-std-move"]], "Compiler Can Prove: Implicit Ownership Transfer": [[727, "compiler-can-prove-implicit-ownership-transfer"]], "How To Write Code That Can Take Ownership?": [[727, "how-to-write-code-that-can-take-ownership"]], "Manipulating Pointer Content": [[727, "manipulating-pointer-content"]], "std::weak_ptr": [[728, "std-weak-ptr"]], "Spirit: Borrowed Reference That Could Be Invalid": [[728, "spirit-borrowed-reference-that-could-be-invalid"]], "A Real-Life Example": [[728, "a-real-life-example"]], "Perfect Forwarding": [[729, "perfect-forwarding"]], "Universal References? Forwarding References? REALLY?": [[729, "universal-references-forwarding-references-really"]], "Universal Reference? Binds To Lvalues?": [[729, "universal-reference-binds-to-lvalues"]], "Enter Forwarding": [[729, "enter-forwarding"]], "Exercise: Dual insert() Method In Exercise: Bag Of Items, By Shared Reference": [[729, "exercise-dual-insert-method-in-trainings-material-soup-cxx11-exercises-bag-shared"]], "std::bind": [[730, "std-bind"]], "Why? What\u2019s The Problem?": [[730, "why-what-s-the-problem"]], "Sample Program: All Done Manually": [[730, "sample-program-all-done-manually"]], "Sideway: std::transform": [[730, "sideway-std-transform"]], "Sample Program: Using std::transform": [[730, "sample-program-using-std-transform"]], "std::bind: Null Adaptation, Pointlessly": [[730, "std-bind-null-adaptation-pointlessly"]], "std::bind: Adapting One Parameter To No Parameter": [[730, "std-bind-adapting-one-parameter-to-no-parameter"]], "std::bind: Hardcoding Parameters": [[730, "std-bind-hardcoding-parameters"]], "std::bind: Swapping Parameters \u27f6 std::placeholders": [[730, "std-bind-swapping-parameters-longrightarrow-std-placeholders"]], "std::bind: Hardcoding Only First Parameter \u27f6 std::placeholders": [[730, "std-bind-hardcoding-only-first-parameter-longrightarrow-std-placeholders"]], "std::bind: Functor (Is-A Callable)": [[730, "std-bind-functor-is-a-callable"]], "std::bind: Lambda (Is-A Callable)": [[730, "std-bind-lambda-is-a-callable"]], "Sample Program: Using std::transform With std::bind": [[730, "sample-program-using-std-transform-with-std-bind"]], "Summary": [[730, "summary"], [810, "summary"], [810, "id1"], [1129, "summary"], [1131, "summary"]], "std::function": [[731, "std-function"]], "Classic Polymorphism": [[731, "classic-polymorphism"]], "Classic Polymorphism: Upsides": [[731, "classic-polymorphism-upsides"]], "Classic Polymorphism: Technical Downsides": [[731, "classic-polymorphism-technical-downsides"]], "Classic Polymorphism: More Downsides": [[731, "classic-polymorphism-more-downsides"]], "std::function to the Rescue (1)": [[731, "std-function-to-the-rescue-1"]], "std::function to the Rescue (2)": [[731, "std-function-to-the-rescue-2"]], "std::function: Last Words": [[731, "std-function-last-words"]], "Threads Introduction": [[733, "threads-introduction"]], "Operating System Primitives": [[733, "operating-system-primitives"]], "There Be Dragons": [[733, "there-be-dragons"]], "Threads in C++": [[734, "threads-in-c"]], "Creating Threads is Far Too Easy": [[734, "creating-threads-is-far-too-easy"]], "Joinable vs. Detached": [[734, "joinable-vs-detached"]], "Cornercases in Thread Lifetime": [[734, "cornercases-in-thread-lifetime"]], "Race Conditions": [[735, "race-conditions"], [808, "race-conditions"]], "std::atomic": [[736, "std-atomic"]], "Atomic Instructions (1)": [[736, "atomic-instructions-1"]], "Atomic Instructions (2)": [[736, "atomic-instructions-2"]], "std::mutex And Friends": [[737, "std-mutex-and-friends"]], "std::mutex": [[737, "std-mutex"]], "std::recursive_mutex": [[737, "std-recursive-mutex"]], "std::timed_mutex": [[737, "std-timed-mutex"]], "std::recursive_timed_mutex": [[737, "std-recursive-timed-mutex"]], "Scoped Locking": [[738, "scoped-locking"]], "Explicit Unlocking Considered Dangerous": [[738, "explicit-unlocking-considered-dangerous"]], "RAII - Resource Acquisition Is Initialization": [[738, "raii-resource-acquisition-is-initialization"]], "Simplest: std::lock_guard": [[738, "simplest-std-lock-guard"]], "std::condition_variable (Live Hacking Multithreaded Queue)": [[739, "std-condition-variable-live-hacking-multithreaded-queue"]], "Overview: Operations": [[739, "overview-operations"]], "Communication, Polling: Thread-Safe Queue": [[739, "communication-polling-thread-safe-queue"]], "Anti-Polling: Thread-Safe Queue, And POSIX Condition Variables": [[739, "anti-polling-thread-safe-queue-and-posix-condition-variables"]], "Discussion: Signalling And Waiting, Predicates: Separation Of Concerns": [[739, "discussion-signalling-and-waiting-predicates-separation-of-concerns"]], "Thread-Safe Queue, And C++ Condition Variables": [[739, "thread-safe-queue-and-c-condition-variables"]], "std::promise and std::future (And Some std::chrono) (Some Live Hacking)": [[741, "std-promise-and-std-future-and-some-std-chrono-some-live-hacking"]], "Overview: std::promise": [[741, "overview-std-promise"]], "Overview: std::future": [[741, "overview-std-future"]], "Utterly Wrong: Waiting For Something To Become Ready": [[741, "utterly-wrong-waiting-for-something-to-become-ready"]], "Sideways: std::chrono, And Literals": [[741, "sideways-std-chrono-and-literals"]], "Minimal Fix: Use std::mutex": [[741, "minimal-fix-use-std-mutex"]], "Anti-Clumsiness: Scoped Locking": [[741, "anti-clumsiness-scoped-locking"]], "Pro-Readability: Encapsulate": [[741, "pro-readability-encapsulate"]], "Atomics On Structures?": [[741, "atomics-on-structures"]], "Anti-Polling: Semaphore": [[741, "anti-polling-semaphore"]], "Getting To The Point: std::promise And std::future": [[741, "getting-to-the-point-std-promise-and-std-future"]], "And Exceptions?": [[741, "and-exceptions"]], "std::chrono": [[742, "std-chrono"], [742, "id1"]], "Clock Domains": [[742, "clock-domains"]], "Measuring Time (1)": [[742, "measuring-time-1"]], "Measuring Time (2)": [[742, "measuring-time-2"]], "Sleeping, and Literals": [[742, "sleeping-and-literals"]], "New-Style Union: std::variant": [[743, "new-style-union-std-variant"]], "Problems With C Unions, And C++ Types": [[743, "problems-with-c-unions-and-c-types"]], "Instantiation, Default Initialization, Member Access": [[743, "instantiation-default-initialization-member-access"]], "Non-Default Initialization": [[743, "non-default-initialization"]], "Accessing Non-Current Member: std::bad_variant_access": [[743, "accessing-non-current-member-std-bad-variant-access"]], "Non-Throwing Accessor: std::get_if<>": [[743, "non-throwing-accessor-std-get-if"]], "And Non-Fundamental Types?": [[743, "and-non-fundamental-types"]], "CRTP": [[745, "crtp"], [750, "crtp"]], "std::vector<>: Allocators (Very Incomplete)": [[746, "std-vector-allocators-very-incomplete"]], "Classic Virtual": [[747, "classic-virtual"]], "Sensor Definitions": [[747, "sensor-definitions"], [749, "sensor-definitions"], [751, "sensor-definitions"], [753, "sensor-definitions"]], "Virtual Access": [[747, "virtual-access"], [749, "virtual-access"], [751, "virtual-access"], [752, "virtual-access"], [753, "virtual-access"], [754, "virtual-access"]], "Average Across Many": [[747, "average-across-many"], [749, "average-across-many"], [751, "average-across-many"], [753, "average-across-many"]], "Embedded Problems? Code Bloat? Type Erasure? Solutions?": [[748, "embedded-problems-code-bloat-type-erasure-solutions"]], "Type Erasure (Was: Eliminating virtual)": [[748, "type-erasure-was-eliminating-virtual"]], "Non-Virtual, But Related": [[749, "non-virtual-but-related"]], "Type Erasure (Static vs. Dynamic Polymorphism), CRTP": [[750, "type-erasure-static-vs-dynamic-polymorphism-crtp"]], "Unrelated (Duck-Typed)": [[751, "unrelated-duck-typed"]], "std::variant (Automatic Virtual Dispatch Using Template Method)": [[752, "std-variant-automatic-virtual-dispatch-using-template-method"]], "std::variant (Manual Virtual Dispatch, Using if)": [[753, "std-variant-manual-virtual-dispatch-using-if"]], "std::variant (Manual Virtual Dispatch, Using std::visit)": [[754, "std-variant-manual-virtual-dispatch-using-std-visit"]], "Why Replace virtual?": [[755, "why-replace-virtual"]], "Drafts": [[756, "drafts"], [904, "drafts"]], "Exercise: Bag Of Items, By Copy": [[757, "exercise-bag-of-items-by-copy"]], "Step 1: Insert, Find": [[757, "step-1-insert-find"]], "Step 2: Remove": [[757, "step-2-remove"]], "Exercise: Bag Of Items, By Shared Reference": [[758, "exercise-bag-of-items-by-shared-reference"]], "Step 1: Transform into std::shared_ptr": [[758, "step-1-transform-into-std-shared-ptr"]], "Step 2: Accidental Move-Insert?": [[758, "step-2-accidental-move-insert"]], "Step 3: Move-Insert, And std::weak_ptr": [[758, "step-3-move-insert-and-std-weak-ptr"]], "Exercise: Bag Of Items, By Unique Reference": [[759, "exercise-bag-of-items-by-unique-reference"]], "std::filesystem": [[761, "std-filesystem"]], "Paths: Composition, Comparison": [[761, "paths-composition-comparison"]], "Absolute and Relative Paths": [[761, "absolute-and-relative-paths"], [894, "absolute-and-relative-paths"]], "Path Component Access": [[761, "path-component-access"]], "Iterating Over Path Components": [[761, "iterating-over-path-components"]], "Current Working Directory": [[761, "current-working-directory"], [873, "current-working-directory"]], "Directory Creation: std::filesystem::create_directory()": [[761, "directory-creation-std-filesystem-create-directory"]], "Directory Creation: std::filesystem::create_directories()": [[761, "directory-creation-std-filesystem-create-directories"]], "Directory Entry Classification: std::filesystem::is_xxx()": [[761, "directory-entry-classification-std-filesystem-is-xxx"]], "Directory Entries: Basics": [[761, "directory-entries-basics"]], "Directory Entries: std::filesystem::directory_entry": [[761, "directory-entries-std-filesystem-directory-entry"]], "Iterating Over Directory Entries": [[761, "iterating-over-directory-entries"]], "Recursive Directory Iteration": [[761, "recursive-directory-iteration"]], "The New C++ (11-\u2026)": [[762, "the-new-c-11"]], "Generated Topic Graph": [[763, "generated-topic-graph"]], "Modern Character Devices (Screenplay)": [[765, "modern-character-devices-screenplay"]], "Modern Character Devices (Slideshow)": [[766, "modern-character-devices-slideshow"]], "Source": [[766, null], [769, null], [771, null], [774, null], [776, null], [779, null], [788, null], [790, null], [800, null], [802, null], [813, null], [818, null]], "Character Devices: Problems": [[766, "character-devices-problems"]], "Dynamic Device Numbers": [[766, "dynamic-device-numbers"]], "Device Classes": [[766, "device-classes"]], "Devices": [[766, "devices"]], "Modern Character Devices": [[767, "modern-character-devices"]], "File Operations on Character Devices (Screenplay)": [[768, "file-operations-on-character-devices-screenplay"]], "Hooks Necessary": [[768, "hooks-necessary"]], "Implement open(), read(), write()": [[768, "implement-open-read-write"]], "ioctl()": [[768, "ioctl"]], "File Operations on Character Devices (Slideshow)": [[769, "file-operations-on-character-devices-slideshow"]], "File Operations: Interface Definition (\u201cvtable\u201d) (1)": [[769, "file-operations-interface-definition-vtable-1"]], "Available Methods": [[769, "available-methods"]], "open(): Userspace": [[769, "open-userspace"]], "open(): Kernelspace": [[769, "open-kernelspace"]], "ioctl(): Userspace": [[769, "ioctl-userspace"]], "ioctl(): Kernelspace": [[769, "ioctl-kernelspace"]], "ioctl(): Requests": [[769, "ioctl-requests"]], "_IO*() Macros": [[769, "io-macros"]], "_IO*() Macros: Usage": [[769, "io-macros-usage"]], "File Operations on Character Devices": [[770, "file-operations-on-character-devices"]], "Coding: First Functionality (Slideshow)": [[771, "coding-first-functionality-slideshow"]], "Implement Event List": [[771, "implement-event-list"]], "Implement ioctl Request to Add an Event": [[771, "implement-ioctl-request-to-add-an-event"]], "Implement a Userspace Test Program": [[771, "implement-a-userspace-test-program"]], "Coding: First Functionality": [[772, "coding-first-functionality"]], "Character Device Basics (Livehacking Screenplay)": [[773, "character-device-basics-livehacking-screenplay"]], "Major and Minor Numbers": [[773, "major-and-minor-numbers"]], "Character Device": [[773, "character-device"]], "Character Device Basics (Slideshow)": [[774, "character-device-basics-slideshow"]], "Major and Minor Numbers: User\u2019s View": [[774, "major-and-minor-numbers-user-s-view"]], "Major and Minor Numbers: Kernel Space": [[774, "major-and-minor-numbers-kernel-space"]], "History: Hardcoded Device Numbers (1)": [[774, "history-hardcoded-device-numbers-1"]], "History: Hardcoded Device Numbers (2)": [[774, "history-hardcoded-device-numbers-2"]], "Character Device (1)": [[774, "character-device-1"]], "Character Device (2)": [[774, "character-device-2"]], "And User Space?": [[774, "and-user-space"]], "Character Device Basics": [[775, "character-device-basics"]], "Coding: Multiple Devices (Slideshow)": [[776, "coding-multiple-devices-slideshow"]], "Instantiate Multiple Devices": [[776, "instantiate-multiple-devices"]], "Coding: Multiple Devices": [[777, "coding-multiple-devices"]], "Coding: Refactoring (Screenplay)": [[778, "coding-refactoring-screenplay"]], "Build Module From Multiple Files": [[778, "build-module-from-multiple-files"]], "Per-Device Structure": [[778, "per-device-structure"]], "Want My Hair Pretty": [[778, "want-my-hair-pretty"]], "Makefile: -Wswitch-enum": [[778, "makefile-wswitch-enum"]], "Coding: Refactoring (Slideshow)": [[779, "coding-refactoring-slideshow"]], "What\u2019s Bad?": [[779, "what-s-bad"]], "Coding: Refactoring": [[780, "coding-refactoring"]], "DMA (Slideshow)": [[781, "dma-slideshow"]], "Address Types": [[781, "address-types"]], "Physical Memory Allocation": [[781, "physical-memory-allocation"]], "DMA Mappings: Overview": [[781, "dma-mappings-overview"]], "Consistent DMA Mappings": [[781, "consistent-dma-mappings"]], "Streaming Mappings: Direction": [[781, "streaming-mappings-direction"]], "Streaming Mappings: To Virtual Address": [[781, "streaming-mappings-to-virtual-address"]], "Streaming Mappings: To Page": [[781, "streaming-mappings-to-page"]], "Streaming Mappings: Scatterlists (1)": [[781, "streaming-mappings-scatterlists-1"]], "Streaming Mappings: Scatterlists (2)": [[781, "streaming-mappings-scatterlists-2"]], "Streaming Mappings: Syncing": [[781, "streaming-mappings-syncing"]], "DMA": [[782, "dma"]], "Building a Fedora Kernel (Screenplay)": [[783, "building-a-fedora-kernel-screenplay"]], "Why Build the Entire Kernel When I Only Want to Build a Module": [[783, "why-build-the-entire-kernel-when-i-only-want-to-build-a-module"]], "Building from \u201cExploded Git Tree\u201d": [[783, "building-from-exploded-git-tree"]], "Building from the RPM Source": [[783, "building-from-the-rpm-source"]], "Fedora: Building the Kernel": [[784, "fedora-building-the-kernel"]], "Fedora: Building External Kernel Modules (Screenplay)": [[785, "fedora-building-external-kernel-modules-screenplay"]], "Prerequisite: Build Entire Kernel": [[785, "prerequisite-build-entire-kernel"]], "Build Modules": [[785, "build-modules"]], "Install Modules": [[785, "install-modules"]], "Fedora: Building External Kernel Modules": [[786, "fedora-building-external-kernel-modules"]], "Module Loading, Hello World (Slideshow)": [[788, "module-loading-hello-world-slideshow"]], "Kernel Driver Anatomy": [[788, "kernel-driver-anatomy"]], "Built-In vs. Loadable Module": [[788, "built-in-vs-loadable-module"]], "Minimum Module Source": [[788, "minimum-module-source"]], "Gotchas: init() and exit()": [[788, "gotchas-init-and-exit"]], "Module Build": [[788, "module-build"]], "Minimum Makefile, Building": [[788, "minimum-makefile-building"]], "Modules: Load/Unload Commands": [[788, "modules-load-unload-commands"]], "Modules: Dependency (and other) Databases": [[788, "modules-dependency-and-other-databases"]], "Module Loading, Hello World": [[789, "module-loading-hello-world"]], "Coding: Raspi GPIO Interrupts (Slideshow)": [[790, "coding-raspi-gpio-interrupts-slideshow"]], "Move to Raspberry Pi, Cross Compiling": [[790, "move-to-raspberry-pi-cross-compiling"]], "Cross Compilation": [[790, "cross-compilation"]], "Cross Compilation Sucks": [[790, "cross-compilation-sucks"]], "Short (Legacy) GPIO API Introduction": [[790, "short-legacy-gpio-api-introduction"]], "Implement New Event Type: Interrupt": [[790, "implement-new-event-type-interrupt"]], "New ioctl: MY_ACTIVATE_GPIO": [[790, "new-ioctl-my-activate-gpio"]], "Interlude: _IO*() Macros": [[790, "interlude-io-macros"]], "Request GPIO": [[790, "request-gpio"]], "Request Interrupt": [[790, "request-interrupt"]], "Coding: Raspi GPIO Interrupts": [[791, "coding-raspi-gpio-interrupts"]], "Interrupts (Slideshow)": [[792, "interrupts-slideshow"]], "Interrupt Facts": [[792, "interrupt-facts"]], "Interrupt Service Routine": [[792, "interrupt-service-routine"]], "Requesting (and Releasing) Interrupts (1)": [[792, "requesting-and-releasing-interrupts-1"]], "IO Memory (Slideshow)": [[794, "io-memory-slideshow"]], "I/O Memory": [[794, "i-o-memory"]], "I/O Memory: Reservation": [[794, "i-o-memory-reservation"]], "Making I/O Memory Accessible": [[794, "making-i-o-memory-accessible"]], "Accessing I/O Memory": [[794, "accessing-i-o-memory"]], "IO Memory": [[795, "io-memory"]], "Dynamic Memory: kmalloc() (Slideshow)": [[796, "dynamic-memory-kmalloc-slideshow"]], "Dynamic Memory: kmalloc()": [[796, "dynamic-memory-kmalloc"], [797, "dynamic-memory-kmalloc"]], "Dynamic Memory: Flags": [[796, "dynamic-memory-flags"]], "Doubly Linked Lists (Slideshow)": [[798, "doubly-linked-lists-slideshow"]], "Big Picture": [[798, "big-picture"]], "List Head": [[798, "list-head"]], "Insert a Node": [[798, "insert-a-node"]], "Iteration, and Getting a Node\u2019s Container": [[798, "iteration-and-getting-a-node-s-container"]], "Emptying a List": [[798, "emptying-a-list"]], "Doubly Linked Lists": [[799, "doubly-linked-lists"]], "Coding: Fix Race Condition (Mutex) (Slideshow)": [[800, "coding-fix-race-condition-mutex-slideshow"]], "What Do We Have?": [[800, "what-do-we-have"]], "Consequences of Not Protecting": [[800, "consequences-of-not-protecting"]], "Protect Event List": [[800, "protect-event-list"]], "Protect Device List": [[800, "protect-device-list"]], "Coding: Fix Race Condition (Mutex)": [[801, "coding-fix-race-condition-mutex"]], "Mutex (and RT Mutex) (Slideshow)": [[802, "mutex-and-rt-mutex-slideshow"]], "Locking in the Kernel": [[802, "locking-in-the-kernel"]], "Mutual Exclusion: Mutex": [[802, "mutual-exclusion-mutex"]], "Mutex: Locking (1)": [[802, "mutex-locking-1"]], "Mutex: Locking (2)": [[802, "mutex-locking-2"]], "Mutex: Releasing": [[802, "mutex-releasing"]], "Realtime Mutex": [[802, "realtime-mutex"]], "Mutex (and RT Mutex)": [[803, "mutex-and-rt-mutex"]], "Network Devices (Slideshow)": [[804, "network-devices-slideshow"]], "Module Initialization: Device Allocation": [[804, "module-initialization-device-allocation"]], "Module Initialization: Device Registration": [[804, "module-initialization-device-registration"]], "Device Methods": [[804, "device-methods"]], "Kernel Networking Layer Utilities": [[804, "kernel-networking-layer-utilities"]], "Network Devices": [[805, "network-devices"]], "PCI (Slideshow)": [[806, "pci-slideshow"]], "First and Foremost": [[806, "first-and-foremost"]], "PCI Driver Methods": [[806, "pci-driver-methods"]], "PCI Driver Structure, and the init() Method": [[806, "pci-driver-structure-and-the-init-method"]], "PCI Device Structure, and the probe() Method": [[806, "pci-device-structure-and-the-probe-method"]], "The probe() Method: Boilerplate": [[806, "the-probe-method-boilerplate"]], "The probe() Method: Interrupt": [[806, "the-probe-method-interrupt"]], "The probe() Method: PCI Resources (BARs)": [[806, "the-probe-method-pci-resources-bars"]], "DMA Support Routines": [[806, "dma-support-routines"]], "PCI": [[807, "pci"]], "Process vs.Atomic Context (Slideshow)": [[808, "process-vs-atomic-context-slideshow"]], "Process Context": [[808, "process-context"]], "Atomic Context": [[808, "atomic-context"]], "Atomic vs. Process Context": [[808, "atomic-vs-process-context"]], "\u201cSleep While Atomic\u201d Debugging": [[808, "sleep-while-atomic-debugging"]], "Process vs.Atomic Context": [[809, "process-vs-atomic-context"]], "Rasperry Pi: Kernel Build": [[810, "rasperry-pi-kernel-build"]], "Cross Toolchain on Host": [[810, "cross-toolchain-on-host"]], "Architecture Name - What\u2019s That?": [[810, "architecture-name-what-s-that"]], "Building a Toolchain with Gentoo\u2019s crossdev": [[810, "building-a-toolchain-with-gentoo-s-crossdev"]], "Other Toolchains": [[810, "other-toolchains"]], "Kernel Source": [[810, "kernel-source"]], "Kernel Compilation": [[810, "kernel-compilation"]], "Parameters for the Build": [[810, "parameters-for-the-build"]], "Preparing the Kernel .config File": [[810, "preparing-the-kernel-config-file"]], "Building the Kernel Artifacts": [[810, "building-the-kernel-artifacts"]], "Packaging": [[810, "packaging"], [1063, "packaging"]], "Bootloader Artifacts": [[810, "bootloader-artifacts"]], "Module Tree": [[810, "module-tree"]], "Deployment": [[810, "deployment"]], "Variation": [[810, "variation"]], "Raspberry Pi: Building the Kernel": [[811, "raspberry-pi-building-the-kernel"]], "Todo jjj": [[811, "todo-jjj"]], "Sample Code Maintenance": [[812, "sample-code-maintenance"]], "Coding: Fix Sleep While Atomic (Slideshow)": [[813, "coding-fix-sleep-while-atomic-slideshow"]], "Simple Spinlock Usage: spin_lock()": [[813, "simple-spinlock-usage-spin-lock"]], "Discuss Call Chain, IRQ State": [[813, "discuss-call-chain-irq-state"]], "Enter spin_lock_irqsave(), spin_unlock_irqrestore()": [[813, "enter-spin-lock-irqsave-spin-unlock-irqrestore"]], "Ah, kmalloc()": [[813, "ah-kmalloc"]], "Coding: Fix Sleep While Atomic": [[814, "coding-fix-sleep-while-atomic"]], "Spinlock (vs. Mutex) (Slideshow)": [[815, "spinlock-vs-mutex-slideshow"]], "Mutual Exclusion: Spinlock": [[815, "mutual-exclusion-spinlock"]], "Spinlock Initialization": [[815, "spinlock-initialization"]], "Simple Lock/Unlock": [[815, "simple-lock-unlock"]], "Simple is not Bulletproof: Interrupt State": [[815, "simple-is-not-bulletproof-interrupt-state"]], "Mutual Exclusion: Conclusion": [[815, "mutual-exclusion-conclusion"]], "Spinlock (vs. Mutex)": [[816, "spinlock-vs-mutex"]], "dup(), fork(), and Reference Counting (Stub)": [[817, "dup-fork-and-reference-counting-stub"]], "Coding: Timed Event (Slideshow)": [[818, "coding-timed-event-slideshow"]], "Per-Event Timestamp": [[818, "per-event-timestamp"]], "Discussion: Deferred Events": [[818, "discussion-deferred-events"]], "Add Timer": [[818, "add-timer"]], "Gotcha: Cleanup Running Timer": [[818, "gotcha-cleanup-running-timer"]], "More Gotchas": [[818, "more-gotchas"]], "Coding: Timed Event": [[819, "coding-timed-event"]], "Timer Management (Slideshow)": [[820, "timer-management-slideshow"]], "Original Timer API": [[820, "original-timer-api"]], "jiffies": [[820, "jiffies"]], "\u201cTimer Wheel\u201d Methods": [[820, "timer-wheel-methods"]], "Better Documentation": [[820, "better-documentation"]], "Timer Management": [[821, "timer-management"]], "To Do List": [[822, "to-do-list"]], "Accessing Userspace Memory (Screenplay)": [[823, "accessing-userspace-memory-screenplay"]], "New ioctl: GET_ONE_EVENT": [[823, "new-ioctl-get-one-event"]], "Getting One Event": [[823, "getting-one-event"]], "copy_to_user()": [[823, "copy-to-user"]], "Userspace Test Program": [[823, "userspace-test-program"]], "Accessing Userspace Memory (Slideshow)": [[824, "accessing-userspace-memory-slideshow"]], "Address Spaces": [[824, "address-spaces"]], "Copying To and From Userspace": [[824, "copying-to-and-from-userspace"]], "Accessing Userspace Memory": [[825, "accessing-userspace-memory"]], "Waiting for Something (Screenplay)": [[826, "waiting-for-something-screenplay"]], "read() Not Implemented": [[826, "read-not-implemented"]], "Implementing read() Naively": [[826, "implementing-read-naively"]], "Discussion: What If Nothing\u2019s There?": [[826, "discussion-what-if-nothing-s-there"]], "Implementing O_NONBLOCK": [[826, "implementing-o-nonblock"]], "Waiting for Something (Slideshow)": [[827, "waiting-for-something-slideshow"]], "Waiting for Something": [[827, "waiting-for-something"], [828, "waiting-for-something"]], "Wait Queues: Initializing": [[827, "wait-queues-initializing"]], "Wait Queue: Waiting": [[827, "wait-queue-waiting"]], "Wait Queue: Waking": [[827, "wait-queue-waking"]], "Workqueue (Screenplay)": [[829, "workqueue-screenplay"]], "Add Workqueue": [[829, "add-workqueue"]], "Submit/Defer Work From Atomic Context": [[829, "submit-defer-work-from-atomic-context"]], "Cleanup (Why We Did This, After All)": [[829, "cleanup-why-we-did-this-after-all"]], "Finish": [[829, "finish"]], "Workqueue (Slideshow)": [[830, "workqueue-slideshow"]], "Workqueue: Motivation": [[830, "workqueue-motivation"]], "Creating/Destroying a Workqueue": [[830, "creating-destroying-a-workqueue"]], "What is Work?": [[830, "what-is-work"]], "Submitting Work": [[830, "submitting-work"]], "Workqueue": [[831, "workqueue"]], "Exercises: Archiving And Compression": [[832, "exercises-archiving-and-compression"]], "gzip": [[834, "gzip"]], "Compression Tools: Comparison": [[835, "compression-tools-comparison"]], "tar": [[836, "tar"]], "Creating And Viewing Archives": [[836, "creating-and-viewing-archives"]], "(De)Compression": [[836, "de-compression"]], "Etiquette": [[836, "etiquette"]], "Option Summary": [[836, "option-summary"]], "Being Creative With The Pipe": [[836, "being-creative-with-the-pipe"]], "Exam (ECE/SS2022/G1): Do A Lot With Files And Directories": [[837, "exam-ece-ss2022-g1-do-a-lot-with-files-and-directories"]], "Precondition: Logged-In To Remote/Exam Computer": [[837, "precondition-logged-in-to-remote-exam-computer"], [838, "precondition-logged-in-to-remote-exam-computer"]], "Create Exam Skeleton (5 Points)": [[837, "create-exam-skeleton-5-points"], [838, "create-exam-skeleton-5-points"]], "Create Credentials Files (10 Points)": [[837, "create-credentials-files-10-points"]], "Public Place (10 Points)": [[837, "public-place-10-points"], [838, "public-place-10-points"]], "Private Place (10 Points)": [[837, "private-place-10-points"], [838, "private-place-10-points"]], "Shared File in Public Place (10 Points)": [[837, "shared-file-in-public-place-10-points"], [838, "shared-file-in-public-place-10-points"]], "Make A Backup Of ~/exam-01 (15 Points)": [[837, "make-a-backup-of-exam-01-15-points"], [838, "make-a-backup-of-exam-01-15-points"]], "Exam (ECE/SS2022/G2): Do A Lot With Files And Directories": [[838, "exam-ece-ss2022-g2-do-a-lot-with-files-and-directories"]], "Create Business Cards (10 Points)": [[838, "create-business-cards-10-points"]], "Exercises/Exams: Linux Basics": [[839, "exercises-exams-linux-basics"]], "Linux Basics": [[840, "linux-basics"]], "Everything Is A File (Live Demo)": [[841, "everything-is-a-file-live-demo"]], "Simple is beautiful": [[841, "simple-is-beautiful"]], "Ok: a File is a File": [[841, "ok-a-file-is-a-file"]], "Is a Serial Interface (UART) a File?": [[841, "is-a-serial-interface-uart-a-file"]], "Pseudo Terminals": [[841, "pseudo-terminals"]], "Disks and Partitions": [[841, "disks-and-partitions"]], "/proc and /sys": [[841, "proc-and-sys"]], "Pseudo Devices": [[841, "pseudo-devices"]], "Environment (Variables)": [[842, "environment-variables"]], "Shell: Environment Variables, And Process Creation": [[842, "shell-environment-variables-and-process-creation"]], "Popular Environment Variables: HOME, SHELL, USER": [[842, "popular-environment-variables-home-shell-user"]], "Popular Environment Variables: PATH": [[842, "popular-environment-variables-path"]], "FH/Moodle Quiz: Linux Basics": [[843, "fh-moodle-quiz-linux-basics"]], "User Space, Kernel Space": [[843, "user-space-kernel-space"]], "Processes, Scheduling, and Virtual Memory": [[843, "processes-scheduling-and-virtual-memory"]], "Login? What Is That?": [[845, "login-what-is-that"]], "Authentication: Prompting The User For Login Data": [[845, "authentication-prompting-the-user-for-login-data"]], "Authentication: Verification Of Login Data": [[845, "authentication-verification-of-login-data"]], "And After Successful Authentication?": [[845, "and-after-successful-authentication"]], "Impersonation": [[845, "impersonation"]], "Logged In, Finally": [[845, "logged-in-finally"]], "User Space, Kernel Space?": [[846, "user-space-kernel-space"]], "User Space: Abstractions": [[846, "user-space-abstractions"]], "Kernel: Where The Heavy Stuff Is": [[846, "kernel-where-the-heavy-stuff-is"]], "Booting a Computer": [[846, "booting-a-computer"]], "Processes, Scheduling, Address Spaces": [[847, "processes-scheduling-address-spaces"]], "Problem: Owning the CPU?": [[847, "problem-owning-the-cpu"]], "Solution: Scheduling (Time Slices)": [[847, "solution-scheduling-time-slices"]], "Problem: Owning all Memory?": [[847, "problem-owning-all-memory"]], "Solution: Virtual Memory": [[847, "solution-virtual-memory"]], "Process Attributes: User ID (UID)": [[847, "process-attributes-user-id-uid"]], "Process Attributes: Groups": [[847, "process-attributes-groups"]], "Processes: More Attributes": [[847, "processes-more-attributes"]], "Process Hierarchy (Parent, Child Process)": [[848, "process-hierarchy-parent-child-process"]], "More Process Rules": [[848, "more-process-rules"]], "Typical Process Tree": [[848, "typical-process-tree"]], "Services, init": [[848, "services-init"]], "Windows Subsystem for Linux (WSL)": [[849, "windows-subsystem-for-linux-wsl"]], "Disclaimer!": [[849, null]], "More Links": [[849, "more-links"]], "My $0.02": [[849, "my-0-02"]], "WSL, Finally": [[849, "wsl-finally"]], "Exercises: IO-Redirection, Pipes": [[850, "exercises-io-redirection-pipes"]], "I/O Redirection": [[852, "i-o-redirection"]], "Standard I/O Streams": [[852, "standard-i-o-streams"]], "I/O Redirection Operators": [[852, "i-o-redirection-operators"]], "Example: Standard Output Redirection": [[852, "example-standard-output-redirection"]], "Example: Standard Input Redirection": [[852, "example-standard-input-redirection"]], "Example: Standard Error Redirection": [[852, "example-standard-error-redirection"]], "Example: Everything Redirection": [[852, "example-everything-redirection"]], "I/O Redirection: Swap stdout And stderr": [[853, "i-o-redirection-swap-stdout-and-stderr"]], "Basic Pipe Usage": [[853, "basic-pipe-usage"]], "Basic Pipe Usage: What The Shell Does": [[853, "basic-pipe-usage-what-the-shell-does"]], "And How Do I Count Lines On stderr?": [[853, "and-how-do-i-count-lines-on-stderr"]], "More Tricks": [[853, "more-tricks"]], "Pipes": [[854, "pipes"]], "Why Pipes?": [[854, "why-pipes"]], "Pipe Facts": [[854, "pipe-facts"]], "Pipe Examples": [[854, "pipe-examples"]], "More Pipe Examples": [[854, "more-pipe-examples"]], "Named Pipes": [[854, "named-pipes"]], "Permissions: Mode, User and Group Ownership": [[855, "permissions-mode-user-and-group-ownership"]], "Owner and Permissions": [[855, "owner-and-permissions"]], "A Simple Example": [[855, "a-simple-example"]], "Teacher\u2019s note: create that constellation (as root)": [[855, null]], "Permission Check: User": [[855, "permission-check-user"]], "Permission Check: Group": [[855, "permission-check-group"]], "Permission Check: Others": [[855, "permission-check-others"]], "Programs: Execute Permissions": [[855, "programs-execute-permissions"]], "Directory Permissions": [[855, "directory-permissions"]], "Permission Bits, octal": [[855, "permission-bits-octal"]], "Shell Commands: Tuning Permissions": [[855, "shell-commands-tuning-permissions"]], "Shell Commands: Changing User/Group Ownership": [[855, "shell-commands-changing-user-group-ownership"]], "Exercise: Determine Your User Credentials": [[856, "exercise-determine-your-user-credentials"]], "FH/Moodle Quiz: Permissions": [[857, "fh-moodle-quiz-permissions"], [858, "fh-moodle-quiz-permissions"]], "Exercises: File System Permissions": [[859, "exercises-file-system-permissions"]], "Exercise: Create Private Directory": [[860, "exercise-create-private-directory"]], "Question: Private Directory": [[861, "question-private-directory"]], "Exercise: Create Public Directory": [[862, "exercise-create-public-directory"]], "Question: Public Directory": [[863, "question-public-directory"]], "Exercise: Create Group-Shared File": [[864, "exercise-create-group-shared-file"]], "SetUID Programs: passwd, sudo, \u2026": [[866, "setuid-programs-passwd-sudo"]], "Problem: Change My Password": [[866, "problem-change-my-password"]], "Solution: Set-UID Bit": [[866, "solution-set-uid-bit"]], "Set-UID: How Does It Work?": [[866, "set-uid-how-does-it-work"]], "Command: chmod": [[866, "command-chmod"]], "Set-UID Is Not A Toy!": [[866, "set-uid-is-not-a-toy"]], "SetUID: Live Demo": [[867, "setuid-live-demo"]], "Real and Effective User ID": [[867, "real-and-effective-user-id"]], "Sample Program": [[867, "sample-program"]], "Set-UID jfasch?": [[867, "set-uid-jfasch"]], "Set-UID root? Danger!": [[867, "set-uid-root-danger"]], "Ugly Hack: Sticky Bit": [[868, "ugly-hack-sticky-bit"]], "Sticky Bit": [[868, "sticky-bit"]], "Default Permissions: umask": [[869, "default-permissions-umask"]], "Default Permissions - umask": [[869, "id1"]], "umask: How Does it Work?": [[869, "umask-how-does-it-work"]], "Shape (1)": [[870, "shape-1"]], "Shape (2)": [[870, "shape-2"]], "Options": [[870, "options"], [899, "options"]], "Help and Manual": [[870, "help-and-manual"]], "Man Pages: Navigation": [[870, "man-pages-navigation"]], "Commandline Editing: Moving, Deleting": [[870, "commandline-editing-moving-deleting"]], "Commandline Editing: Entire Words": [[870, "commandline-editing-entire-words"]], "Commandline Editing: Entire Lines": [[870, "commandline-editing-entire-lines"]], "The Tabulator Key: Command Completion": [[870, "the-tabulator-key-command-completion"]], "The Tabulator Key: Filename Completion": [[870, "the-tabulator-key-filename-completion"]], "Shell Configuration File: ~/.bashrc": [[871, "shell-configuration-file-bashrc"]], "What\u2019s Volatile?": [[871, "what-s-volatile"]], "Copying: cp": [[872, "copying-cp"]], "Option Overview": [[872, "option-overview"]], "Creating backup copy of, say, .bashrc in the home directory": [[872, "creating-backup-copy-of-say-bashrc-in-the-home-directory"]], "Similar: copy a file into a different directory, under a different name": [[872, "similar-copy-a-file-into-a-different-directory-under-a-different-name"]], "Similar: copy a file into a different directory, keeping its name": [[872, "similar-copy-a-file-into-a-different-directory-keeping-its-name"]], "Copy multiple files into a directory": [[872, "copy-multiple-files-into-a-directory"]], "Copying a directory, together with its contents \u27f6 recursive copy": [[872, "copying-a-directory-together-with-its-contents-longrightarrow-recursive-copy"]], "Current Working Directory: pwd": [[873, "current-working-directory-pwd"]], "Changing The Current Working Directory: cd": [[873, "changing-the-current-working-directory-cd"]], "Exercise: Copy Directory Tree": [[874, "exercise-copy-directory-tree"]], "Exercise: Copy Files": [[875, "exercise-copy-files"]], "Exercise: Create Files (I/O Redirection)": [[876, "exercise-create-files-i-o-redirection"]], "Exercise: Move Files": [[877, "exercise-move-files"]], "Exercises: Create/Copy/Move/Remove": [[878, "exercises-create-copy-move-remove"]], "Exercise: mkdir": [[879, "exercise-mkdir"]], "Exercise: Funny Stuff": [[880, "exercise-funny-stuff"]], "Exercise: Remove Directory Tree": [[881, "exercise-remove-directory-tree"]], "Exercise: Verify, Repeat": [[882, "exercise-verify-repeat"]], "FH/Moodle Quiz: Shell": [[883, "fh-moodle-quiz-shell"]], "The Shell - Exercises": [[884, "the-shell-exercises"]], "Exercise: File Types in /dev": [[885, "exercise-file-types-in-dev"]], "Exercise: Size of /etc/passwd": [[886, "exercise-size-of-etc-passwd"]], "Exercises: The ls Command": [[887, "exercises-the-ls-command"]], "Exercise: Permissions of Home Directory": [[888, "exercise-permissions-of-home-directory"]], "Creating And Removing Files and Directories": [[889, "creating-and-removing-files-and-directories"]], "Creating a Directory: mkdir": [[889, "creating-a-directory-mkdir"]], "Creating a File: I/O redirection": [[889, "creating-a-file-i-o-redirection"]], "Creating an Empty File: touch": [[889, "creating-an-empty-file-touch"]], "Removing A File: rm": [[889, "removing-a-file-rm"]], "Removing A Directory: rmdir, rm -r": [[889, "removing-a-directory-rmdir-rm-r"]], "Symbolic Links, Hard Links": [[891, "symbolic-links-hard-links"]], "Directory Listings: The ls Command": [[892, "directory-listings-the-ls-command"]], "Many Options": [[892, "many-options"]], "Hidden Files": [[892, "hidden-files"]], "File Types": [[892, "file-types"]], "Moving and Renaming: mv": [[893, "moving-and-renaming-mv"]], "Renaming A File (or Directory)": [[893, "renaming-a-file-or-directory"]], "Moving a File to Somewhere Else": [[893, "moving-a-file-to-somewhere-else"]], "Moving a Directory to Somewhere Else": [[893, "moving-a-directory-to-somewhere-else"]], "Path Separator": [[894, "path-separator"]], "Relative Paths": [[894, "relative-paths"]], "Absolute Paths": [[894, "absolute-paths"]], "Special Paths": [[894, "special-paths"]], "cat": [[895, "cat"], [895, "id1"]], "cut": [[896, "cut"], [896, "id1"]], "Exercises: Inspecting Text Files": [[897, "exercises-inspecting-text-files"]], "find": [[898, "find"]], "Directories durchsuchen mit find": [[898, "directories-durchsuchen-mit-find"]], "find: Optionen": [[898, "find-optionen"]], "find: Beispiele": [[898, "find-beispiele"]], "find: Verkn\u00fcpfungen": [[898, "find-verknupfungen"]], "find: Verkn\u00fcpfungen: Beispiele": [[898, "find-verknupfungen-beispiele"]], "grep": [[899, "grep"]], "Searching With grep": [[899, "searching-with-grep"]], "More About Regular Expressions": [[899, "more-about-regular-expressions"]], "head And tail": [[901, "head-and-tail"]], "head": [[901, "head"]], "tail": [[901, "tail"]], "head And tail In The Pipe": [[901, "head-and-tail-in-the-pipe"]], "less": [[902, "less"]], "Paging Files Using less": [[902, "paging-files-using-less"]], "Help Screen (Enter With h)": [[902, "help-screen-enter-with-h"]], "stdin, stdout, And The Pipe": [[903, "stdin-stdout-and-the-pipe"]], "stdin, stdout: Examples": [[903, "stdin-stdout-examples"]], "Pipe: Examples": [[903, "pipe-examples"]], "Basics Text Tools": [[903, "basics-text-tools"]], "Yocto": [[905, "yocto"]], "Controlling a Brushless Motor With Raspberry Pi": [[907, "controlling-a-brushless-motor-with-raspberry-pi"]], "Topic": [[907, null]], "Electronic Speed Controller (ESC)": [[907, "electronic-speed-controller-esc"]], "Select Running Mode: \u201cFwd/Rev\u201d": [[907, "select-running-mode-fwd-rev"]], "The \u201cCommand Protocol\u201d, and Calibration": [[907, "the-command-protocol-and-calibration"]], "Driving the Motor": [[907, "driving-the-motor"]], "CAN/Linux Basics": [[908, "can-linux-basics"]], "Why This Talk?": [[908, "why-this-talk"]], "Network Programming: Datagram Exchange": [[908, "network-programming-datagram-exchange"]], "And CAN?": [[908, "and-can"]], "One CAN Network Packet \u2026": [[908, "one-can-network-packet"]], "CAN Interfaces": [[909, "can-interfaces"]], "CAN-Interface: Configuration": [[909, "can-interface-configuration"]], "CAN Utils": [[909, "can-utils"]], "CAN Utils: Usage (1)": [[909, "can-utils-usage-1"]], "CAN Utils: Usage (2)": [[909, "can-utils-usage-2"]], "vcan: Virtual CAN-Bus": [[909, "vcan-virtual-can-bus"]], "Programming": [[910, "programming"]], "CAN Programming": [[910, "can-programming"]], "CAN in C - Socket, Interface Index": [[910, "can-in-c-socket-interface-index"]], "CAN in Python - Socket, Interface Index": [[910, "can-in-python-socket-interface-index"]], "CAN in C - Frames (1)": [[910, "can-in-c-frames-1"]], "CAN in C - Frames (2)": [[910, "can-in-c-frames-2"]], "CAN in Python - Frames": [[910, "can-in-python-frames"]], "Hardware, Kernel": [[911, "hardware-kernel"]], "MCP2515: Schematic": [[911, "mcp2515-schematic"]], "MCP2515: Soldering": [[911, "mcp2515-soldering"]], "MCP2515: SPI": [[911, "mcp2515-spi"]], "MCP2515: Raspberry": [[911, "mcp2515-raspberry"]], "CAN Bus With Linux And Python": [[912, "can-bus-with-linux-and-python"]], "Linux Hardware Interfaces": [[913, "linux-hardware-interfaces"]], "Linux and I2C (using LM73 Temperature Sensor as Slave)": [[914, "linux-and-i2c-using-lm73-temperature-sensor-as-slave"]], "Configuring I2C Master": [[914, "configuring-i2c-master"]], "Enable I2C, Load BCM2835 Platform Driver": [[914, "enable-i2c-load-bcm2835-platform-driver"]], "Raspberry Pi GPIO header pinout": [[914, null]], "Enable Userspace I2C": [[914, "enable-userspace-i2c"]], "Slave Device: LM73": [[914, "slave-device-lm73"]], "Datasheet etc.": [[914, null]], "Optional: Address Selection": [[914, "optional-address-selection"]], "Connecting LM73 to Raspberry Pi": [[914, "connecting-lm73-to-raspberry-pi"]], "i2c-tools/i2cdetect: Diagnostics, Detecting Devices": [[914, "i2c-tools-i2cdetect-diagnostics-detecting-devices"]], "Using the Device: Talking I2C from Userspace": [[914, "using-the-device-talking-i2c-from-userspace"]], "Using the Device: hwmon - Hardware Monitoring": [[914, "using-the-device-hwmon-hardware-monitoring"]], "Building the Kernel, Enabling LM73": [[914, "building-the-kernel-enabling-lm73"]], "Loading the Driver": [[914, "loading-the-driver"]], "Hardware Monitoring (hwmon) Devices": [[914, "hardware-monitoring-hwmon-devices"]], "PWM Userspace Interface (using PCA9685)": [[915, "pwm-userspace-interface-using-pca9685"]], "Pulse Width Modulation (PWM)": [[915, "pulse-width-modulation-pwm"]], "Why An External PWM Controller?": [[915, "why-an-external-pwm-controller"]], "Wiring, Setup, and Testing": [[915, "wiring-setup-and-testing"]], "Talk to Chip Using the sysfs Interface": [[915, "talk-to-chip-using-the-sysfs-interface"]], "Linux and OneWire (using DS18B20 Temperature Sensor as Slave)": [[916, "linux-and-onewire-using-ds18b20-temperature-sensor-as-slave"]], "Master Device, Alterative 1: w1-gpio - OneWire Master in Software": [[916, "master-device-alterative-1-w1-gpio-onewire-master-in-software"]], "Wiring: Attach OneWire Device to GPIO Pin": [[916, "wiring-attach-onewire-device-to-gpio-pin"]], "Master Device, Alterative 2: DS2482 - I2C OneWire Master in Hardware": [[916, "master-device-alterative-2-ds2482-i2c-onewire-master-in-hardware"]], "DS2482-800: 8-Channel 1-Wire Master": [[916, null]], "Wiring: Attach DS2482-800 via I2C": [[916, "wiring-attach-ds2482-800-via-i2c"]], "Configure Software": [[916, "configure-software"]], "Enable I2C, and Check": [[916, "enable-i2c-and-check"]], "Verify That Our Device Is There": [[916, "verify-that-our-device-is-there"]], "Announce (\u201cHotplug\u201d) DS2482 to Linux": [[916, "announce-hotplug-ds2482-to-linux"]], "Wiring: Attach OneWire Device to DS2482-800": [[916, "wiring-attach-onewire-device-to-ds2482-800"]], "Over-Engineering? Beauty?": [[916, "over-engineering-beauty"]], "Hardware Bringup": [[916, "hardware-bringup"]], "Device Usage": [[916, "device-usage"]], "Slave Device: DS18B20 Temperature Sensor": [[916, "slave-device-ds18b20-temperature-sensor"]], "Using the Device": [[916, "using-the-device"]], "As a Generic OneWire Device": [[916, "as-a-generic-onewire-device"]], "As a Hardware Monitoring (hwmon) Device": [[916, "as-a-hardware-monitoring-hwmon-device"]], "lm-sensors": [[916, "lm-sensors"]], "OneWire Caveats": [[916, "onewire-caveats"]], "Bus Topology": [[916, "bus-topology"]], "Error Symptoms": [[916, "error-symptoms"]], "SSH: Basics": [[917, "ssh-basics"]], "Login": [[917, "login"]], "Exit Status, stdin, stdout: Scripting": [[917, "exit-status-stdin-stdout-scripting"]], "Exercise: Copy a File To Remote Machine, And Verify": [[918, "exercise-copy-a-file-to-remote-machine-and-verify"]], "Exercise: Copy a Tree To Remote Machine (And Adjust Permissions)": [[919, "exercise-copy-a-tree-to-remote-machine-and-adjust-permissions"]], "Exercises: SSH": [[920, "exercises-ssh"]], "Exercise: Create SSH Key Pair": [[921, "exercise-create-ssh-key-pair"]], "SSH: Public Key Authentication": [[923, "ssh-public-key-authentication"]], "Local Setup, Key Generation": [[923, "local-setup-key-generation"]], "Key Pair?": [[923, "key-pair"]], "Remote Setup (Wearing The Remote Admin\u2019s Hat)": [[923, "remote-setup-wearing-the-remote-admin-s-hat"]], "SSH: Links": [[924, "ssh-links"]], "SSH: Port Forwarding": [[925, "ssh-port-forwarding"]], "Port Forwarding - The Problem (1)": [[925, "port-forwarding-the-problem-1"]], "Port Forwarding - The Problem (2)": [[925, "port-forwarding-the-problem-2"]], "Port Forwarding - The Solution (1)": [[925, "port-forwarding-the-solution-1"]], "Port Forwarding - The Solution (2)": [[925, "port-forwarding-the-solution-2"]], "Port Forwarding - The Commandline": [[925, "port-forwarding-the-commandline"]], "SSH: Secure Copy (scp)": [[926, "ssh-secure-copy-scp"]], "What Is That?": [[926, "what-is-that"]], "Copy Single File From Local To Remote": [[926, "copy-single-file-from-local-to-remote"]], "Copy Single File from Remote To Local": [[926, "copy-single-file-from-remote-to-local"]], "Copy An Entire Directory Tree (-r)": [[926, "copy-an-entire-directory-tree-r"]], "Copy Multiple File From Here To There": [[926, "copy-multiple-file-from-here-to-there"]], "Copy From One Remote To A Different Remote": [[926, "copy-from-one-remote-to-a-different-remote"]], "More Options": [[926, "more-options"]], "SSH File System (sshfs)": [[927, "ssh-file-system-sshfs"]], "What Is It?": [[927, "what-is-it"]], "Why Is It?": [[927, "why-is-it"]], "Example Situation: The Raspi": [[927, "example-situation-the-raspi"]], "Mounting Remote  $HOME/logdata": [[927, "mounting-remote-home-logdata"]], "Unmounting: fusermount -u, or Simply umount": [[927, "unmounting-fusermount-u-or-simply-umount"]], "User ID Mismatch: Problem": [[927, "user-id-mismatch-problem"]], "User ID Mismatch: Solution (User Mapping)": [[927, "user-id-mismatch-solution-user-mapping"]], "The errno Variable": [[928, "the-errno-variable"]], "errno Is A Global Variable": [[928, "errno-is-a-global-variable"]], "Helper Functions": [[928, "helper-functions"]], "Linux Systems Programming: Basics": [[929, "linux-systems-programming-basics"]], "System Calls vs. Library Functions": [[930, "system-calls-vs-library-functions"]], "System Calls": [[930, "system-calls"]], "System Calls And The C-Library": [[930, "system-calls-and-the-c-library"]], "Library Function Or System Call?": [[930, "library-function-or-system-call"]], "Manual Pages": [[930, "manual-pages"]], "Blocking I/O: What is That? (\u201cEverything is a file\u201d)": [[931, "blocking-i-o-what-is-that-everything-is-a-file"]], "Examples/Live Demos": [[931, null]], "Solution: This Is What An Operating System Is There For": [[931, "solution-this-is-what-an-operating-system-is-there-for"]], "Blocking I/O (On A File): What is That?": [[932, "blocking-i-o-on-a-file-what-is-that"]], "See Also": [[932, null], [933, null], [934, null], [1115, "see-also"]], "Abstractions": [[932, "abstractions"], [933, "abstractions"], [934, "abstractions"]], "Simplicity": [[932, "simplicity"], [933, "simplicity"], [934, "simplicity"]], "Build, Run, Look": [[932, "build-run-look"], [933, "build-run-look"], [934, "build-run-look"]], "Watch: Run Under strace Supervision": [[932, "watch-run-under-strace-supervision"]], "Blocking I/O: On A Network Socket": [[933, "blocking-i-o-on-a-network-socket"]], "Opening a Network Connection": [[933, "opening-a-network-connection"]], "Blocking I/O: On A Timer? WTF?": [[934, "blocking-i-o-on-a-timer-wtf"]], "Setup A Timer": [[934, "setup-a-timer"]], "Blocking I/O: What Is That?": [[935, "blocking-i-o-what-is-that"]], "File I/O: Basics": [[936, "file-i-o-basics"]], "File Descriptors": [[936, "file-descriptors"]], "Standard Filedescriptors": [[936, "standard-filedescriptors"]], "File I/O: System Calls": [[936, "file-i-o-system-calls"]], "open()": [[936, "open"]], "open() Flags": [[936, "open-flags"]], "read()": [[936, "read"]], "write()": [[936, "write"]], "File Offset: lseek()": [[936, "file-offset-lseek"]], "The Rest: ioctl()": [[936, "the-rest-ioctl"]], "Exercise: Copy A File": [[937, "exercise-copy-a-file"]], "Sunny Case: Source File Exists, Destination Does Not Exist": [[937, "sunny-case-source-file-exists-destination-does-not-exist"]], "Error: Wrong Number Of Arguments Specified": [[937, "error-wrong-number-of-arguments-specified"]], "Error: Source File Does Not Exist": [[937, "error-source-file-does-not-exist"]], "Error: Destination File Exists": [[937, "error-destination-file-exists"]], "Error: Destination Directory Not Writable": [[937, "error-destination-directory-not-writable"]], "Exercise: Create File With Hole": [[938, "exercise-create-file-with-hole"]], "Duplicating (Whats Going On?)": [[939, "duplicating-whats-going-on"]], "File Descriptors, Open File, I-Node": [[939, "file-descriptors-open-file-i-node"]], "File Descriptors and Inheritance": [[939, "file-descriptors-and-inheritance"]], "Duplicating File Descriptors": [[939, "duplicating-file-descriptors"]], "Example: Shell Stdout-Redirection (1)": [[939, "example-shell-stdout-redirection-1"]], "Example: Shell Stdout-Redirection (2)": [[939, "example-shell-stdout-redirection-2"]], "Example: Shell Stdout-Redirection (3)": [[939, "example-shell-stdout-redirection-3"]], "O_CREAT: Creating A File": [[940, "o-creat-creating-a-file"]], "Creating A File If It Does Not Exist (Bogus Version)": [[940, "creating-a-file-if-it-does-not-exist-bogus-version"]], "Bogus O_CREAT Usage: Mode Parameter Missing": [[940, "bogus-o-creat-usage-mode-parameter-missing"]], "Creating A File If It Does Not Exist": [[940, "creating-a-file-if-it-does-not-exist"]], "O_EXCL: Creating A File, But Failing If It Already Exists": [[941, "o-excl-creating-a-file-but-failing-if-it-already-exists"]], "Is \u201cCreate or Open\u201d Always Wanted?": [[941, "is-create-or-open-always-wanted"]], "Sunny Case: File Does Not Exist": [[941, "sunny-case-file-does-not-exist"]], "Error: File Exists": [[941, "error-file-exists"]], "O_RDONLY: Reading a File": [[942, "o-rdonly-reading-a-file"]], "Me and /etc/passwd": [[942, "me-and-etc-passwd"]], "Code: Reading A File": [[942, "code-reading-a-file"]], "Sunny Case: Reading /etc/passwd": [[942, "sunny-case-reading-etc-passwd"]], "Error: File Not Readable": [[942, "error-file-not-readable"]], "Error: File Not Even There": [[942, "error-file-not-even-there"]], "O_WRONLY: Writing A File (Which Must Exist)": [[943, "o-wronly-writing-a-file-which-must-exist"]], "Writing (And Not Creating) A File": [[943, "writing-and-not-creating-a-file"]], "Error: File Not Writeable": [[943, "error-file-not-writeable"]], "Error: File Not Even There \u27f6 Not Implicitly Created": [[943, "error-file-not-even-there-longrightarrow-not-implicitly-created"]], "Sunny Case: File Exists, And Is Writeable": [[943, "sunny-case-file-exists-and-is-writeable"]], "Exercise: Read Temperature From Onewire Sensor": [[944, "exercise-read-temperature-from-onewire-sensor"]], "Onewire Basics": [[944, "onewire-basics"]], "Program": [[944, "program"], [1096, "program"]], "Test On The Target Machine": [[944, "test-on-the-target-machine"]], "I/O without Offset Manipulation": [[946, "i-o-without-offset-manipulation"]], "Scatter/Gather I/O": [[946, "scatter-gather-i-o"]], "Scatter/Gather I/O, without Offset Manipulation": [[946, "scatter-gather-i-o-without-offset-manipulation"]], "Truncating Files": [[946, "truncating-files"]], "File Descriptors - Allocation": [[946, "file-descriptors-allocation"]], "Linux Systems Programming": [[947, "linux-systems-programming"], [1176, "linux-systems-programming"]], "Get Value Of GPIO": [[948, "get-value-of-gpio"]], "Retrieving Value Manually, On The Commandline": [[948, "retrieving-value-manually-on-the-commandline"]], "Shell Script": [[948, "shell-script"]], "C Program": [[948, "c-program"]], "Introductory Live Hacking, Hardware-Wise (sysfs GPIO)": [[949, "introductory-live-hacking-hardware-wise-sysfs-gpio"]], "Intro: sysfs GPIO": [[950, "intro-sysfs-gpio"]], "sysfs?": [[950, "sysfs"]], "General Purpose IO (GPIO)": [[950, "general-purpose-io-gpio"]], "Requesting A GPIO Pin": [[950, "requesting-a-gpio-pin"]], "GPIO Attributes As Files": [[950, "gpio-attributes-as-files"]], "Interrupts In Userspace": [[951, "interrupts-in-userspace"]], "Manual Configuration": [[951, "manual-configuration"]], "C Program: Configuration, Event Loop": [[951, "c-program-configuration-event-loop"]], "Why Threads?": [[952, "why-threads"]], "Typical Uses": [[952, "typical-uses"]], "Legal (1)": [[952, "legal-1"]], "Legal (2)": [[952, "legal-2"]], "POSIX Thread API": [[952, "posix-thread-api"]], "Thread Life Cycle": [[953, "thread-life-cycle"], [953, "id1"]], "Thread Creation": [[953, "thread-creation"]], "Thread Termination (1)": [[953, "thread-termination-1"]], "Thread Termination (2)": [[953, "thread-termination-2"]], "Exit Status, pthread_join()": [[953, "exit-status-pthread-join"]], "Detached Threads": [[953, "detached-threads"]], "Thread ID": [[953, "thread-id"]], "Scheduled Entities (1)": [[953, "scheduled-entities-1"]], "Scheduled Entities (2)": [[953, "scheduled-entities-2"]], "Thread Creation, Race Condition": [[954, "thread-creation-race-condition"]], "Synchronization": [[955, "synchronization"]], "Race Conditions (1)": [[955, "race-conditions-1"]], "Race Conditions (2)": [[955, "race-conditions-2"]], "Mutex (1)": [[955, "mutex-1"]], "Mutex (2)": [[955, "mutex-2"]], "Mutex (3)": [[955, "mutex-3"]], "Mutex Types": [[955, "mutex-types"]], "Mutex: Solve Load/Modify/Store Conflict": [[956, "mutex-solve-load-modify-store-conflict"]], "Communication: Condition Variable": [[957, "communication-condition-variable"]], "Condition Variable (1)": [[957, "condition-variable-1"]], "Condition Variable (2)": [[957, "condition-variable-2"]], "Condition Variable: wait()": [[957, "condition-variable-wait"]], "Condition Variable: signal()": [[957, "condition-variable-signal"]], "Example: WIN32 Auto Reset Event (1)": [[957, "example-win32-auto-reset-event-1"]], "Example: WIN32 Auto Reset Event (2)": [[957, "example-win32-auto-reset-event-2"]], "Condition Variable: Checking the Predicate": [[957, "condition-variable-checking-the-predicate"]], "Condition Variable: Initialization": [[957, "condition-variable-initialization"]], "Condition Variable: Miscellaneous": [[957, "condition-variable-miscellaneous"]], "Condition Variable: Message Queue": [[958, "condition-variable-message-queue"]], "One-Time Initialization (1)": [[959, "one-time-initialization-1"]], "One-Time Initialization (2)": [[959, "one-time-initialization-2"]], "One-Time Initialization (3)": [[959, "one-time-initialization-3"]], "Thread Specific Data, Thread Local Storage": [[959, "thread-specific-data-thread-local-storage"]], "Last Warning (1)": [[960, "last-warning-1"]], "Last Warning (2)": [[960, "last-warning-2"]], "Last Warning (3)": [[960, "last-warning-3"]], "Trylock/islocked": [[962, "trylock-islocked"]], "Process: Arguments, Exit Status": [[963, "process-arguments-exit-status"]], "The Shell: A Program Like Any Program": [[963, "the-shell-a-program-like-any-program"]], "The Shell: A Programming Language": [[963, "the-shell-a-programming-language"]], "Exit Status": [[963, "exit-status"]], "Exit Status: 0 is \u201cOK\u201d": [[963, "exit-status-0-is-ok"]], "Exit Status: != 0 is \u201cNot OK\u201d": [[963, "exit-status-0-is-not-ok"]], "Argument Vector (int argc, char** argv)": [[963, "argument-vector-int-argc-char-argv"]], "Processes": [[964, "processes"]], "The Process Tree (And Environment, And procfs)": [[965, "the-process-tree-and-environment-and-procfs"]], "Process ID (PID) And Parent Process ID (PPID)": [[965, "process-id-pid-and-parent-process-id-ppid"]], "System Calls: getpid(), getppid()": [[965, "system-calls-getpid-getppid"]], "Environment Variables": [[965, "environment-variables"]], "Scheduling (and Multitasking)": [[966, "scheduling-and-multitasking"]], "Fairness Criteria": [[966, "fairness-criteria"]], "CPU bound vs. I/O bound": [[966, "cpu-bound-vs-i-o-bound"]], "Demo: I/O vs CPU bound": [[966, "demo-i-o-vs-cpu-bound"]], "Scheduling Decision, Runnability": [[966, "scheduling-decision-runnability"]], "Tasks? Processes? Threads?": [[968, "tasks-processes-threads"]], "A Typical Bare Metal Application": [[968, "a-typical-bare-metal-application"]], "Hm. Need Another Timer Interrupt!": [[968, "hm-need-another-timer-interrupt"]], "Away From Interrupts: Use An Operating System": [[968, "away-from-interrupts-use-an-operating-system"]], "Tasks?": [[968, "id1"]], "Threads Are Great: More Functionality": [[968, "threads-are-great-more-functionality"]], "Are Threads Great?": [[968, "are-threads-great"]], "Stability Considerations": [[968, "stability-considerations"]], "Processes, Address Spaces": [[968, "processes-address-spaces"]], "Stabilizing": [[968, "stabilizing"]], "Scheduling: Exam Questions": [[969, "scheduling-exam-questions"]], "Wakeup Latency, and Fair Scheduling": [[970, "wakeup-latency-and-fair-scheduling"]], "Nice Value: Inexact Tuning": [[970, "nice-value-inexact-tuning"]], "Enter Realtime: Definition": [[970, "enter-realtime-definition"]], "Realtime on Linux": [[970, "realtime-on-linux"]], "Demo: Measuring Wakeup Latency": [[970, "demo-measuring-wakeup-latency"]], "Immediately?": [[970, "immediately"]], "Immediately! \u27f6 PREEMPT_RT": [[970, "immediately-longrightarrow-preempt-rt"]], "Realtime API": [[971, "realtime-api"]], "Scheduling Policies": [[971, "scheduling-policies"]], "Scheduling Priorities": [[971, "scheduling-priorities"]], "What\u2019s Runnning On A System?": [[971, "what-s-runnning-on-a-system"]], "Scheduling: System Calls": [[971, "scheduling-system-calls"]], "Scheduling: Threads (1)": [[971, "scheduling-threads-1"]], "Scheduling: Threads (2)": [[971, "scheduling-threads-2"]], "Priority Inversion": [[971, "priority-inversion"]], "Priority Inversion: Mutex Protocols (1)": [[971, "priority-inversion-mutex-protocols-1"]], "Wakeup Latency, CPU Frequency (Gotcha)": [[972, "wakeup-latency-cpu-frequency-gotcha"]], "Measuring Wakeup Latency": [[972, "measuring-wakeup-latency"]], "Many Runnable Processes (Gotcha: CPU Frequency Scaling)": [[972, "many-runnable-processes-gotcha-cpu-frequency-scaling"]], "CPU Frequency Scaling Out Of The Way": [[972, "cpu-frequency-scaling-out-of-the-way"]], "Mysteries Remaining": [[972, "mysteries-remaining"]], "Code: Sysprog: Event Driven Programming": [[973, "code-sysprog-event-driven-programming"]], "Screenplay: Sysprog: POSIX IPC": [[974, "screenplay-sysprog-posix-ipc"], [977, "screenplay-sysprog-posix-ipc"]], "select on Device Files": [[974, "select-on-device-files"]], "Sysprog: Events": [[975, "sysprog-events"]], "Code: Sysprog: POSIX IPC": [[976, "code-sysprog-posix-ipc"]], "Virtual Memory, mmap()": [[977, "virtual-memory-mmap"]], "POSIX Shared Memory": [[977, "posix-shared-memory"]], "Create Shared Memory Segment": [[977, "create-shared-memory-segment"]], "Produce into Shared Memory": [[977, "produce-into-shared-memory"]], "Consume from Shared Memory": [[977, "consume-from-shared-memory"]], "POSIX Semaphores": [[977, "posix-semaphores"]], "Create Semaphore": [[977, "create-semaphore"]], "Wait": [[977, "wait"]], "Post": [[977, "post"]], "POSIX Message Queues": [[977, "posix-message-queues"]], "Create": [[977, "create"]], "Produce": [[977, "produce"]], "Consume": [[977, "consume"]], "Slides: Sysprog: POSIX IPC": [[978, "slides-sysprog-posix-ipc"]], "Slideshow": [[978, null], [982, null]], "History: Two IPC Variants": [[978, "history-two-ipc-variants"]], "Object Names": [[978, "object-names"]], "File Semantics": [[978, "file-semantics"]], "Message Queues": [[978, "message-queues"]], "Open/Create: mq_open()": [[978, "open-create-mq-open"]], "Sending/Receiving: mq_send(), mq_receive()": [[978, "sending-receiving-mq-send-mq-receive"]], "Closing/Removing: mq_close(), mq_unlink()": [[978, "closing-removing-mq-close-mq-unlink"]], "Notification: mq_notify()": [[978, "notification-mq-notify"]], "Message Queues are Files": [[978, "message-queues-are-files"]], "Message Queue Filesystem: mqueue": [[978, "message-queue-filesystem-mqueue"]], "Semaphores": [[978, "semaphores"]], "Open/Create: sem_open()": [[978, "open-create-sem-open"]], "Communication: sem_wait(), sem_post()": [[978, "communication-sem-wait-sem-post"]], "Closing/Removing: sem_close(), ``sem_unlink()": [[978, "closing-removing-sem-close-sem-unlink"]], "Semaphores are Files": [[978, "semaphores-are-files"]], "Shared Memory (1)": [[978, "shared-memory-1"]], "Shared Memory (2)": [[978, "shared-memory-2"]], "Exercise: POSIX Message Queues": [[978, "exercise-posix-message-queues"]], "Sysprog: POSIX IPC": [[979, "sysprog-posix-ipc"]], "Code: Sysprog: Signals": [[980, "code-sysprog-signals"]], "Screenplay: Sysprog: Signals": [[981, "screenplay-sysprog-signals"]], "Barebones Naive Program": [[981, "barebones-naive-program"]], "Signal Handler": [[981, "signal-handler"]], "Alarm": [[981, "alarm"]], "Alarm (Louder)": [[981, "alarm-louder"]], "Synchronous Delivery": [[981, "synchronous-delivery"]], "Innocent Multithreaded Program": [[981, "innocent-multithreaded-program"]], "Add SIGALRM": [[981, "add-sigalrm"]], "Slides: Sysprog: Signals": [[982, "slides-sysprog-signals"]], "Example Signals": [[982, "example-signals"]], "Terminology": [[982, "terminology"]], "Default Actions": [[982, "default-actions"]], "Important Signals": [[982, "important-signals"]], "Sending, Commandline": [[982, "sending-commandline"]], "Sending Signals, Programmatically": [[982, "sending-signals-programmatically"]], "Warning!": [[982, "warning"]], "Blocking Signals: Signal Mask": [[982, "blocking-signals-signal-mask"]], "Signal Mask Manipulation": [[982, "signal-mask-manipulation"]], "Pending Signals": [[982, "pending-signals"]], "Signal Set: sigset_t": [[982, "signal-set-sigset-t"]], "Signal Handlers": [[982, "signal-handlers"]], "Installing a Signal Handler (1)": [[982, "installing-a-signal-handler-1"]], "Installing a Signal Handler (2)": [[982, "installing-a-signal-handler-2"]], "Effects of Signal Delivery": [[982, "effects-of-signal-delivery"]], "Last Warning!": [[982, "last-warning"]], "WTF Async Signal Safe?": [[982, "wtf-async-signal-safe"]], "Exercise: Signals": [[982, "exercise-signals"]], "Sysprog: Signals": [[983, "sysprog-signals"]], "Toolchain: Basics": [[984, "toolchain-basics"]], "GCC - GNU Compiler Collection": [[984, "gcc-gnu-compiler-collection"]], "All-In-One Usage: Single File": [[984, "all-in-one-usage-single-file"]], "All-In-One Usage: Multiple Files": [[984, "all-in-one-usage-multiple-files"]], "This Is Not As Simple As It Seems!": [[984, "this-is-not-as-simple-as-it-seems"]], "What\u2019s In A Program? \u27f6 Symbols (nm)": [[984, "what-s-in-a-program-longrightarrow-symbols-nm"]], "Overview: Where Do Which Symbols Come From (\u27f6 The Toolchain)": [[984, "overview-where-do-which-symbols-come-from-longrightarrow-the-toolchain"]], "Recap: Toolchain": [[984, "recap-toolchain"]], "CMake: Cross Build": [[985, "cmake-cross-build"]], "Cross Build: Parameters": [[985, "cross-build-parameters"]], "Core Build Instructions: Target Agnostic": [[985, "core-build-instructions-target-agnostic"]], "Toolchain Files": [[985, "toolchain-files"]], "Step 1: Generate Makefile in Build Directory": [[985, "step-1-generate-makefile-in-build-directory"]], "Step 2: Build Using make": [[985, "step-2-build-using-make"], [986, "step-2-build-using-make"]], "CMake: Local Build": [[986, "cmake-local-build"]], "make: Problems": [[986, "make-problems"]], "CMake To The Rescue": [[986, "cmake-to-the-rescue"]], "Out-Of-Source Build": [[986, "out-of-source-build"]], "Step 1: Generate Makefile In Build Directory": [[986, "step-1-generate-makefile-in-build-directory"]], "Goodie: Dependency Management": [[986, "goodie-dependency-management"]], "Native Compilation": [[987, "native-compilation"]], "Cross?": [[987, "cross"]], "The sysroot": [[987, "the-sysroot"]], "Exercise: Build Software Package (Cross, Raspberry)": [[989, "exercise-build-software-package-cross-raspberry"]], "FH/Moodle Quiz: Toolchain": [[990, "fh-moodle-quiz-toolchain"]], "Exercises: Toolchain": [[991, "exercises-toolchain"]], "Exercise: Build Software Package (Native)": [[992, "exercise-build-software-package-native"]], "Exercise: Install And Check Raspberry Toolchain": [[993, "exercise-install-and-check-raspberry-toolchain"]], "Toolchain, And Cross Development": [[994, "toolchain-and-cross-development"]], "Case Study: Raspberry Toolchain": [[995, "case-study-raspberry-toolchain"]], "Linaro Toolchain For The Pi (Defunct)": [[996, "linaro-toolchain-for-the-pi-defunct"]], "Download And Unpack Linaro Toolchain": [[996, "download-and-unpack-linaro-toolchain"]], "Create a sysroot": [[996, "create-a-sysroot"]], "Patience!": [[996, null]], "Test Cross Build": [[996, "test-cross-build"]], "What We Have": [[996, "what-we-have"]], "Use Cross Compiler To Build Against sysroot": [[996, "use-cross-compiler-to-build-against-sysroot"]], "Adjust $PATH To Point To Toolchain": [[996, "adjust-path-to-point-to-toolchain"]], "Building A Toolchain On Fedora For Ubuntu 18.04 (WSL)": [[998, "building-a-toolchain-on-fedora-for-ubuntu-18-04-wsl"]], "Install And Run Docker": [[998, "install-and-run-docker"]], "Create Ubuntu Images (18.04 and 20.04)": [[998, "create-ubuntu-images-18-04-and-20-04"]], "Create Docker Volume": [[998, "create-docker-volume"]], "Container Work": [[998, "container-work"]], "Command To Run Container On Volumes": [[998, "command-to-run-container-on-volumes"]], "Setup container": [[998, "setup-container"]], "Install autoconf 2.71": [[998, "install-autoconf-2-71"]], "Install crosstool-ng": [[998, "install-crosstool-ng"]], "Build Toolchain": [[998, "build-toolchain"]], "crosstool-ng Toolchain Build": [[998, "crosstool-ng-toolchain-build"]], "Create Toolchain Archive": [[998, "create-toolchain-archive"]], "Install Toolchain On Host": [[998, "install-toolchain-on-host"]], "Cross Toolchain Setup": [[999, "cross-toolchain-setup"]], "Download And Install Toolchain Archive": [[999, "download-and-install-toolchain-archive"]], "Establish CMake Toolchain File": [[999, "establish-cmake-toolchain-file"]], "Test Run": [[999, "test-run"]], "Zooming In: Separate Compilation, and Linking Statically": [[1000, "zooming-in-separate-compilation-and-linking-statically"]], "Remember: All-In-One Build \u2026": [[1000, "remember-all-in-one-build"]], "Adding Another main(): What About Shared Code?": [[1000, "adding-another-main-what-about-shared-code"]], "Solution: Separate Compilation And Linking Steps": [[1000, "solution-separate-compilation-and-linking-steps"]], "Complication: Modification Tracking": [[1000, "complication-modification-tracking"]], "Enter Makefiles": [[1000, "enter-makefiles"]], "Shared Libraries (Shared Objects)": [[1001, "shared-libraries-shared-objects"]], "Problems With Static Libraries": [[1001, "problems-with-static-libraries"]], "And Dynamic Libraries?": [[1001, "and-dynamic-libraries"]], "Relocations": [[1001, "relocations"]], "Building A Shared Library: Position Independent Code (PIC)": [[1001, "building-a-shared-library-position-independent-code-pic"]], "Linking Executables Against Shared Libraries": [[1001, "linking-executables-against-shared-libraries"]], "And Build Dependencies?": [[1001, "and-build-dependencies"]], "And Runtime Dependencies?": [[1001, "and-runtime-dependencies"]], "And Starting An Executable Having External Dependencies?": [[1001, "and-starting-an-executable-having-external-dependencies"]], "This Is Not Simple: Library Search Path": [[1001, "this-is-not-simple-library-search-path"]], "Summary: Static Versus Dynamic Libraries": [[1001, "summary-static-versus-dynamic-libraries"]], "Object Code Archives/Static Libraries": [[1002, "object-code-archives-static-libraries"]], "Code Bases Become Larger (1)": [[1002, "code-bases-become-larger-1"]], "Code Bases Become Larger (2)": [[1002, "code-bases-become-larger-2"]], "Problem: Structure": [[1002, "problem-structure"]], "Build Instructions: Building A Library": [[1002, "build-instructions-building-a-library"]], "Closures": [[1003, "closures"]], "Today": [[1003, "today"]], "def is a Statement": [[1003, "def-is-a-statement"]], "Functions That Create Functions": [[1003, "functions-that-create-functions"]], "Inner Function Reaches Out To Global Scope": [[1003, "inner-function-reaches-out-to-global-scope"]], "And Intermediate Scope? \u27f6 Closure": [[1003, "and-intermediate-scope-longrightarrow-closure"]], "A Less Theoretical \u201cUse Case\u201d": [[1003, "a-less-theoretical-use-case"]], "Scope Issues: Assignment to Global Scope (global Keyword)": [[1003, "scope-issues-assignment-to-global-scope-global-keyword"]], "Scope Issues: Assignment to Intermediate Scope (nonlocal Keyword)": [[1003, "scope-issues-assignment-to-intermediate-scope-nonlocal-keyword"]], "Intro": [[1004, "intro"]], "Simplest: List Comprehension": [[1004, "simplest-list-comprehension"]], "Context Managers: The with Statement": [[1005, "context-managers-the-with-statement"]], "Example: Open File": [[1005, "example-open-file"]], "Example: Temporary Directory": [[1005, "example-temporary-directory"]], "Example: Multiple with Items": [[1005, "example-multiple-with-items"]], "Under The Hood: Context Manager": [[1005, "under-the-hood-context-manager"]], "Example: Monkeypatching The print Function": [[1005, "example-monkeypatching-the-print-function"]], "Still Much Typing \u27f6 @contextlib.contextmanager": [[1005, "still-much-typing-longrightarrow-contextlib-contextmanager"]], "More Involved: Using Closures To Implement PrefixPrint": [[1005, "more-involved-using-closures-to-implement-prefixprint"]], "Decorators": [[1006, "decorators"]], "The Ominous \u201c@\u201d": [[1006, "the-ominous"]], "Decorators Overview": [[1006, "decorators-overview"]], "A Simple Minded Function": [[1006, "a-simple-minded-function"]], "Decorator Basics": [[1006, "decorator-basics"]], "Decorators are Syntactic Sugar": [[1006, "decorators-are-syntactic-sugar"]], "Problem: Arbitrary Function Arguments": [[1006, "problem-arbitrary-function-arguments"]], "*args, **kwargs To The Rescue": [[1006, "args-kwargs-to-the-rescue"]], "Sideways: functools.wraps": [[1006, "sideways-functools-wraps"]], "Class Decorator: debug() with prefix": [[1006, "class-decorator-debug-with-prefix"]], "Basic Exception Handling: try, except": [[1007, "basic-exception-handling-try-except"]], "Catching Exceptions By Type": [[1007, "catching-exceptions-by-type"]], "Exception Objects": [[1007, "exception-objects"]], "Catching Multiple Exception Types: Exception List": [[1007, "catching-multiple-exception-types-exception-list"]], "Catching Multiple Exception Types: Multiple except Clauses": [[1007, "catching-multiple-exception-types-multiple-except-clauses"]], "Catching Multiple Exception Types: By Base Type": [[1007, "catching-multiple-exception-types-by-base-type"]], "Important: Order Of except Clauses": [[1007, "important-order-of-except-clauses"]], "Built-In Exception Hierarchy": [[1007, "built-in-exception-hierarchy"]], "Raising Exceptions": [[1007, "raising-exceptions"]], "Re-Raising Exceptions": [[1007, "re-raising-exceptions"]], "User-Defined Exceptions": [[1007, "user-defined-exceptions"]], "User-Defined Exceptions: More": [[1007, "user-defined-exceptions-more"]], "else: Executed If No Exception": [[1007, "else-executed-if-no-exception"]], "finally: Executed Regardless Of Exception": [[1007, "finally-executed-regardless-of-exception"]], "The exec() Function": [[1008, "the-exec-function"]], "Dictionaries Everywhere: Context": [[1008, "dictionaries-everywhere-context"]], "Enter exec()": [[1008, "enter-exec"]], "exec(), and Context": [[1008, "exec-and-context"]], "And What Is This Used For, Realistically?": [[1008, "and-what-is-this-used-for-realistically"]], "Python: More Language Features": [[1009, "python-more-language-features"]], "Iteration, Comprehensions, and Generators": [[1010, "iteration-comprehensions-and-generators"]], "Coverage Of This Topic": [[1010, "coverage-of-this-topic"]], "for Recap: Sequential Datatypes": [[1010, "for-recap-sequential-datatypes"]], "Primitive Transformation [1,2,3,4] \u27f6 [1,4,9,16]": [[1010, "primitive-transformation-1-2-3-4-longrightarrow-1-4-9-16"]], "Larger Input List (Still Allocated)": [[1010, "larger-input-list-still-allocated"]], "Input List \u27f6 range": [[1010, "input-list-longrightarrow-range"]], "Output List \u27f6 yield": [[1010, "output-list-longrightarrow-yield"]], "Generator Function \u27f6 Generator Expression": [[1010, "generator-function-longrightarrow-generator-expression"]], "Implementing A Fibonacci Number Generator": [[1011, "implementing-a-fibonacci-number-generator"]], "Fibonacci Numbers: Naive List": [[1011, "fibonacci-numbers-naive-list"]], "Fibonacci Numbers: Naive List, Limited": [[1011, "fibonacci-numbers-naive-list-limited"]], "Sideway: Infinity by Not Using Functions": [[1011, "sideway-infinity-by-not-using-functions"]], "Fibonacci Numbers: Function Producing Infinite Sequence": [[1011, "fibonacci-numbers-function-producing-infinite-sequence"]], "Common Pattern: Turn List into Generated Items": [[1011, "common-pattern-turn-list-into-generated-items"]], "The Iterator Protocol": [[1012, "the-iterator-protocol"], [1012, "id1"]], "Iteration in Python": [[1012, "iteration-in-python"]], "What\u2019s an Iterator?": [[1012, "what-s-an-iterator"]], "What\u2019s an Iterable?": [[1012, "what-s-an-iterable"]], "The Iterator Protocol: Manual Iteration": [[1012, "the-iterator-protocol-manual-iteration"]], "The Iterator Protocol, And The for Loop": [[1012, "the-iterator-protocol-and-the-for-loop"]], "Generators: Motivation": [[1012, "generators-motivation"]], "Generators: How?": [[1012, "generators-how"]], "Observations": [[1012, "observations"]], "Iteration, Generators, And yield": [[1013, "iteration-generators-and-yield"]], "Iterating Intelligently: Generators, and the Iterator Protocol": [[1014, "iterating-intelligently-generators-and-the-iterator-protocol"]], "Modules are Objects": [[1015, "modules-are-objects"]], "Other Forms (1)": [[1015, "other-forms-1"]], "Other Forms (2)": [[1015, "other-forms-2"]], "Packages": [[1015, "packages"]], "Executing Modules as Scripts": [[1015, "executing-modules-as-scripts"]], "Package Structure": [[1015, "package-structure"]], "Relative Imports (1)": [[1015, "relative-imports-1"]], "Relative Imports (2)": [[1015, "relative-imports-2"]], "Multithreading (Python)": [[1016, "multithreading-python"]], "What\u2019s a Thread?": [[1016, "what-s-a-thread"]], "Threads: The Pythonic Way": [[1016, "threads-the-pythonic-way"]], "Threads: The OO Way - Inheritance": [[1016, "threads-the-oo-way-inheritance"]], "And Program Termination?": [[1016, "and-program-termination"]], "Daemon Threads": [[1016, "daemon-threads"]], "Race Conditions, and Mutexes": [[1018, "race-conditions-and-mutexes"]], "Mother of All Race conditions: Integer Increment": [[1018, "mother-of-all-race-conditions-integer-increment"]], "Load Modify Store Conflict": [[1018, "load-modify-store-conflict"]], "Solution: Mutex (Explicit Acquire/Release)": [[1018, "solution-mutex-explicit-acquire-release"]], "Solution: Mutex (with Statement)": [[1018, "solution-mutex-with-statement"]], "Multithreading: Exam Questions": [[1019, "multithreading-exam-questions"]], "Abstract Base Classes (abc), And Duck Typing": [[1020, "abstract-base-classes-abc-and-duck-typing"]], "Duck Typing: Examples": [[1020, "duck-typing-examples"]], "Duck Typing Problem: Late Errors": [[1020, "duck-typing-problem-late-errors"]], "Intermediate Step: Common Base Class (\u201cInterface\u201d)": [[1020, "intermediate-step-common-base-class-interface"]], "Enter Abstract Base Classes: Wish List": [[1020, "enter-abstract-base-classes-wish-list"]], "Abtract Base Class": [[1020, "abtract-base-class"]], "Classes And Dictionaries": [[1021, "classes-and-dictionaries"]], "Facts Up-Front": [[1021, "facts-up-front"]], "Using Raw Dictionaries As Objects": [[1021, "using-raw-dictionaries-as-objects"]], "Enter Classes: An Empty Class, And Its Effects": [[1021, "enter-classes-an-empty-class-and-its-effects"]], "Attributes": [[1021, "attributes"], [1133, "attributes"]], "Summary: Classes Or Raw Dictionaries": [[1021, "summary-classes-or-raw-dictionaries"]], "Dynamic Attribute Access": [[1021, "dynamic-attribute-access"]], "Constructor": [[1022, "constructor"]], "And self?": [[1022, "and-self"]], "Interrelationships": [[1023, "interrelationships"]], "Extending Existing Classes": [[1024, "extending-existing-classes"]], "Additional Feature: Salary": [[1024, "additional-feature-salary"]], "Want Manager": [[1024, "want-manager"]], "Introspecting Inheritance: isinstance(), issubclass()": [[1024, "introspecting-inheritance-isinstance-issubclass"]], "isinstance()": [[1024, "isinstance"]], "issubclass()": [[1024, "issubclass"]], "Add __str__(), Creatively, After The Fact": [[1024, "add-str-creatively-after-the-fact"]], "Object Methods": [[1025, "object-methods"]], "Class Methods (@classmethod)": [[1025, "class-methods-classmethod"]], "Static Methods (@staticmethod)": [[1025, "static-methods-staticmethod"]], "collections.namedtuple": [[1026, "collections-namedtuple"]], "Shortcut For Simple Data-Holding Classes": [[1026, "shortcut-for-simple-data-holding-classes"]], "Constructing From Iterable: _make()": [[1026, "constructing-from-iterable-make"]], "Convert To dict: _asdict()": [[1026, "convert-to-dict-asdict"]], "Operators Are \u201cDunder\u201d Methods": [[1027, "operators-are-dunder-methods"]], "Hypothetical And Pointless class Number": [[1027, "hypothetical-and-pointless-class-number"]], "Simplest: Equality Comparison (==)": [[1027, "simplest-equality-comparison"]], "Comparing Against Incompatible Types? (Lotsa Magic!)": [[1027, "comparing-against-incompatible-types-lotsa-magic"]], "Ordering: Less-Than (<) Operator": [[1027, "ordering-less-than-operator"]], "Ordering Magic, Again: __gt__ in terms of __lt__": [[1027, "ordering-magic-again-gt-in-terms-of-lt"]], "Table: Comparison Operators": [[1027, "table-comparison-operators"]], "@functools.total_ordering To The Rescue": [[1027, "functools-total-ordering-to-the-rescue"]], "Arithmetic Operators, Reverse Operations": [[1027, "arithmetic-operators-reverse-operations"]], "Table: Operators And The Methods To Implement Them": [[1027, "table-operators-and-the-methods-to-implement-them"]], "Readonly Attributes": [[1028, "readonly-attributes"]], "And Write Access?": [[1028, "and-write-access"]], "Calculated Attributes": [[1028, "calculated-attributes"]], "str() And repr()": [[1029, "str-and-repr"]], "Stringification And Representation": [[1029, "stringification-and-representation"]], "Overloading str() And repr(): __str__(), __repr__()": [[1029, "overloading-str-and-repr-str-repr"]], "Positional and Keyword Arguments": [[1030, "positional-and-keyword-arguments"]], "Traditional Function Call": [[1030, "traditional-function-call"]], "Supplying Function Arguments Dynamically": [[1030, "supplying-function-arguments-dynamically"]], "Functions That Takes Arbitrary Number Of Positional Arguments": [[1030, "functions-that-takes-arbitrary-number-of-positional-arguments"]], "Functions That Take Arbitrary Keyword Arguments": [[1030, "functions-that-take-arbitrary-keyword-arguments"]], "And Arbitrary Positional And Keyword Arguments?": [[1030, "and-arbitrary-positional-and-keyword-arguments"]], "Ultimate Dynamicity: Arbitrary Positional And Keyword Arguments": [[1030, "ultimate-dynamicity-arbitrary-positional-and-keyword-arguments"]], "Use Case: A Better print()": [[1030, "use-case-a-better-print"]], "The Python Programming Language": [[1033, "the-python-programming-language"]], "A Little Bit of History": [[1033, "a-little-bit-of-history"]], "Guido Van Rossum": [[1033, "guido-van-rossum"]], "Hello World: Interactive Mode": [[1034, "hello-world-interactive-mode"]], "Hello World: Script Files": [[1034, "hello-world-script-files"]], "Running Python Programs": [[1035, "running-python-programs"]], "The UNIX Way: Executable Bit, chmod": [[1035, "the-unix-way-executable-bit-chmod"]], "The UNIX Way: Hash-Bang (She-Bang)": [[1035, "the-unix-way-hash-bang-she-bang"]], "The UNIX Way: Running": [[1035, "the-unix-way-running"]], "The Doze Way: Registry": [[1035, "the-doze-way-registry"]], "Syntax: Indentation (1)": [[1036, "syntax-indentation-1"]], "Syntax: Indentation (2)": [[1036, "syntax-indentation-2"]], "Syntax: Statements and Lines": [[1036, "syntax-statements-and-lines"]], "Commandline Arguments (sys.argv)": [[1037, "commandline-arguments-sys-argv"]], "Operating Systems and Programs": [[1037, "operating-systems-and-programs"]], "Commandline Arguments in Python": [[1037, "commandline-arguments-in-python"]], "Cosmetics: Rudimentary Argument Parsing": [[1037, "cosmetics-rudimentary-argument-parsing"]], "Further information: argparse": [[1037, null]], "Variables (1)": [[1038, "variables-1"]], "Variables (2)": [[1038, "variables-2"]], "Integer Numbers: Comparison": [[1039, "integer-numbers-comparison"]], "Numbers: Python2 vs. Python 3 (1)": [[1039, "numbers-python2-vs-python-3-1"]], "Numbers: Python2 vs. Python 3 (2)": [[1039, "numbers-python2-vs-python-3-2"]], "Strings: Python 2": [[1039, "strings-python-2"]], "Strings: Python 2 \u2014 Confusion": [[1039, "strings-python-2-confusion"]], "Strings: Python 2 - unicode (1)": [[1039, "strings-python-2-unicode-1"]], "Strings: Python 2 \u2014 unicode (2)": [[1039, "strings-python-2-unicode-2"]], "Strings: Python 3": [[1039, "strings-python-3"]], "Python 3, Generally": [[1039, "python-3-generally"]], "Boolean Values": [[1041, "boolean-values"]], "Boolean Operators": [[1041, "boolean-operators"]], "The if Statement": [[1042, "the-if-statement"], [1042, "id1"]], "Looping Constructs": [[1043, "looping-constructs"]], "Esoteric Feature: while/else": [[1043, "esoteric-feature-while-else"]], "Sequence Elements": [[1044, "sequence-elements"]], "Sequence Multiplication": [[1044, "sequence-multiplication"]], "Indexing (1)": [[1045, "indexing-1"]], "Indexing (2)": [[1045, "indexing-2"]], "Slicing: Cutting Out": [[1045, "slicing-cutting-out"]], "Slicing: Step Width": [[1045, "slicing-step-width"]], "Iteration over \u2026 Something": [[1046, "iteration-over-something"]], "break, continue, else": [[1046, "break-continue-else"]], "Iteration over Numbers: range()": [[1047, "iteration-over-numbers-range"]], "range(): Definition": [[1047, "range-definition"]], "range(): Python 2 vs. Python 3": [[1047, "range-python-2-vs-python-3"]], "Immutability: Numbers": [[1048, "immutability-numbers"]], "Modifying An Integer In-Place? (Immutability)": [[1048, "modifying-an-integer-in-place-immutability"]], "Immutability: Tuples": [[1048, "immutability-tuples"]], "Mutability: Lists (1)": [[1048, "mutability-lists-1"]], "Mutability: Lists (2)": [[1048, "mutability-lists-2"]], "Shallow Copy": [[1048, "shallow-copy"]], "Deep Copy": [[1048, "deep-copy"]], "Functions: Global and Local Scope (Livehacking Screenplay)": [[1049, "functions-global-and-local-scope-livehacking-screenplay"]], "Undefined Variable": [[1049, "undefined-variable"]], "Local Variable": [[1049, "local-variable"]], "Local and Global Variable With Same Name": [[1049, "local-and-global-variable-with-same-name"]], "Assignment to Global Variable: global": [[1049, "assignment-to-global-variable-global"]], "Functions (Slideshow)": [[1050, "functions-slideshow"]], "Why Functions?": [[1050, "why-functions"]], "Mutable Default Parameters: Attention!": [[1050, "mutable-default-parameters-attention"]], "String Delimiters": [[1052, "string-delimiters"]], "Escape Sequences": [[1052, "escape-sequences"]], "More String Tricks": [[1052, "more-string-tricks"]], "C-Style Formatting (1)": [[1053, "c-style-formatting-1"]], "C-Style Formatting: Conversions": [[1053, "c-style-formatting-conversions"]], "C-Style Formatting: Flags": [[1053, "c-style-formatting-flags"]], "C-Style Formatting: Examples": [[1053, "c-style-formatting-examples"]], "The format Method": [[1053, "the-format-method"]], "Cool Since 3.6: f-Strings": [[1053, "cool-since-3-6-f-strings"]], "Batteries Included: Checks": [[1054, "batteries-included-checks"]], "Batteries Included: Search": [[1054, "batteries-included-search"]], "Substring Search: Examples": [[1054, "substring-search-examples"]], "Split and Join (1)": [[1054, "split-and-join-1"]], "Split and Join (2)": [[1054, "split-and-join-2"]], "List Access": [[1055, "list-access"]], "List Methods: Examples": [[1055, "list-methods-examples"]], "Dictionary Access": [[1056, "dictionary-access"]], "Examples: Simple Access": [[1056, "examples-simple-access"]], "Examples: Shortcuts": [[1056, "examples-shortcuts"]], "Dictionary Iteration (1)": [[1056, "dictionary-iteration-1"]], "Dictionary Iteration (2)": [[1056, "dictionary-iteration-2"]], "Operations on Sets (1)": [[1057, "operations-on-sets-1"]], "Operations on Sets (2)": [[1057, "operations-on-sets-2"]], "Python 2 vs. Python 3": [[1058, "python-2-vs-python-3"]], "Opening Files": [[1058, "opening-files"]], "Reading Files": [[1058, "reading-files"]], "Reading Files: Pythonic": [[1058, "reading-files-pythonic"]], "Writing Files (1)": [[1058, "writing-files-1"]], "Writing Files (2)": [[1058, "writing-files-2"]], "File Modes": [[1058, "file-modes"]], "Text vs. Binary Mode": [[1058, "text-vs-binary-mode"]], "Standard Streams": [[1058, "standard-streams"]], "Function Objects": [[1059, "function-objects"]], "What\u2019s a Function?": [[1059, "what-s-a-function"]], "Function Objects?": [[1059, "id1"]], "Function Objects! (1)": [[1059, "function-objects-1"]], "Function Objects! (2)": [[1059, "function-objects-2"]], "Commandline Parsing with argparse": [[1060, "commandline-parsing-with-argparse"]], "Handling Positional Arguments": [[1060, "handling-positional-arguments"]], "Handling Named Arguments: --interval \u2026": [[1060, "handling-named-arguments-interval"]], "Python: Draft Topics": [[1061, "python-draft-topics"]], "Matplotlib": [[1062, "matplotlib"]], "Axis Ranges": [[1062, "axis-ranges"]], "Package Installation (setuptools)": [[1063, "package-installation-setuptools"]], "Files": [[1063, "files"]], "Test \u201cInstallation\u201d": [[1063, "test-installation"]], "Source Distribution": [[1063, "source-distribution"]], "Manifest": [[1063, "manifest"]], "Installing From Wheel File": [[1063, "installing-from-wheel-file"]], "Publishing On PyPI": [[1063, "publishing-on-pypi"]], "Exercise: Read CSV File, Write into Sqlite3 Database": [[1064, "exercise-read-csv-file-write-into-sqlite3-database"]], "Exercise: Read CSV File": [[1065, "exercise-read-csv-file"]], "Sample CSV File": [[1065, "sample-csv-file"]], "CSV and Databases": [[1066, "csv-and-databases"]], "Exercise: Boolean Expressions": [[1068, "exercise-boolean-expressions"]], "Exercise: Even Numbers (while)": [[1069, "exercise-even-numbers-while"]], "Exercise: Greeting, Depending on Time of Day": [[1070, "exercise-greeting-depending-on-time-of-day"]], "Exercises (External)": [[1071, "exercises-external"]], "Exercise: Swap Two Variables": [[1073, "exercise-swap-two-variables"]], "Exercise: Username/Password Check": [[1074, "exercise-username-password-check"]], "Exercise: Digit to English Word": [[1075, "exercise-digit-to-english-word"]], "Exercise: Dictionary: Errors?": [[1076, "exercise-dictionary-errors"]], "Exercise: Eliminate Empty/Comment-Only Lines": [[1077, "exercise-eliminate-empty-comment-only-lines"]], "Exercise: Generator: Fibonacci": [[1078, "exercise-generator-fibonacci"]], "Exercise: Primeness (for)": [[1079, "exercise-primeness-for"]], "Exercises (Legacy)": [[1080, "exercises-legacy"]], "Exercise: Functions: join()": [[1081, "exercise-functions-join"]], "Exercise: Determine Maximum of Two Numbers (Function)": [[1083, "exercise-determine-maximum-of-two-numbers-function"]], "Exercise: Mixed List (Executable Program)": [[1084, "exercise-mixed-list-executable-program"]], "Exercise: Mixed List (Interactive Interpreter)": [[1085, "exercise-mixed-list-interactive-interpreter"]], "Exercise: Parsing /etc/passwd": [[1086, "exercise-parsing-etc-passwd"]], "Sample /etc/passwd file": [[1086, null]], "Implementation Strategy": [[1086, "implementation-strategy"]], "Exercise: Primeness (Function)": [[1087, "exercise-primeness-function"]], "Exercise: Reverting Lines of a File": [[1088, "exercise-reverting-lines-of-a-file"]], "Exercise: String (Right-Justify)": [[1089, "exercise-string-right-justify"]], "Exercise: Function: uniq()": [[1090, "exercise-function-uniq"]], "Exercise: Generator: uniq()": [[1091, "exercise-generator-uniq"]], "Exercise: Counting Lines, Words, Characters": [[1092, "exercise-counting-lines-words-characters"]], "Exercise: Primeness (while)": [[1093, "exercise-primeness-while"]], "Sensors, And Data Acquisition (Exercise Series)": [[1094, "sensors-and-data-acquisition-exercise-series"]], "Setting Paths": [[1095, "setting-paths"]], "Create (And Activate) A Virtual Environment For The Project": [[1095, "create-and-activate-a-virtual-environment-for-the-project"]], "Install Requirements": [[1095, "install-requirements"]], "Exercise: Basic \u201cSensor\u201d": [[1096, "exercise-basic-sensor"]], "Specification, And Setup": [[1096, "specification-and-setup"]], "Verification": [[1096, "verification"]], "Unit Test": [[1096, "unit-test"]], "Exercise: Read CSV File (csv.dictreader)": [[1097, "exercise-read-csv-file-csv-dictreader"]], "Users-header-cp1252.csv": [[1097, "id1"]], "Exercise: Refactoring - Extract CSV Reading Into Function (csv.dictreader)": [[1098, "exercise-refactoring-extract-csv-reading-into-function-csv-dictreader"]], "Exercise: Read CSV File (csv.reader)": [[1099, "exercise-read-csv-file-csv-reader"]], "Users-noheader-cp1252.csv": [[1099, "id2"]], "Exercise: Refactoring - Extract CSV Reading Into Function (csv.reader)": [[1100, "exercise-refactoring-extract-csv-reading-into-function-csv-reader"]], "User Database (Exercise Series)": [[1101, "user-database-exercise-series"]], "Exercise: MQTT: Publish User Records": [[1102, "exercise-mqtt-publish-user-records"]], "Exercise: Away From Raw Dictionaries": [[1103, "exercise-away-from-raw-dictionaries"]], "Test Code": [[1103, "test-code"], [1104, "test-code"], [1105, "test-code"]], "Exercise: Convert User Record To JSON And Back": [[1104, "exercise-convert-user-record-to-json-and-back"]], "Exercise: Refactoring - Extract Both CSV Formats Into Module": [[1105, "exercise-refactoring-extract-both-csv-formats-into-module"]], "Python: All Material, Interrelated": [[1106, "python-all-material-interrelated"]], "Python Programming: From Absolute Beginner to Advanced Productivity": [[1107, "python-programming-from-absolute-beginner-to-advanced-productivity"]], "Sample Trainings": [[1107, "sample-trainings"]], "More Information": [[1107, "more-information"]], "Python Links": [[1108, "python-links"]], "Advanced Python": [[1108, "advanced-python"], [1169, "advanced-python"]], "David Beazley": [[1108, "david-beazley"]], "Raymond Hettinger": [[1108, "raymond-hettinger"]], "Machine Learning, Artificial Intelligence": [[1109, "machine-learning-artificial-intelligence"]], "K-Means": [[1110, "k-means"]], "Topic Overview": [[1110, "topic-overview"], [1114, "topic-overview"]], "Artifacts": [[1110, "artifacts"]], "Topic Dependencies": [[1110, "topic-dependencies"], [1114, "topic-dependencies"]], "Linear Regression: Running Code (no Notebook!)": [[1111, "linear-regression-running-code-no-notebook"]], "Weather History Dataset": [[1112, "weather-history-dataset"]], "Linear Regression: Jupyter Notebook": [[1113, "Linear-Regression:-Jupyter-Notebook"]], "pandas.DataFrame": [[1113, "pandas.DataFrame"]], "Reading Data": [[1113, "Reading-Data"]], "Relationship Between pandas.DataFrame and numpy.ndarray": [[1113, "Relationship-Between-pandas.DataFrame-and-numpy.ndarray"]], "Extracting Input and Output Features from a pandas.DataFrame": [[1113, "Extracting-Input-and-Output-Features-from-a-pandas.DataFrame"]], "Plotting with matplotlib": [[1113, "Plotting-with-matplotlib"]], "Data Splicing: Split into Training and Test Data": [[1113, "Data-Splicing:-Split-into-Training-and-Test-Data"]], "Creating the Model: Algorithm + Training Data": [[1113, "Creating-the-Model:-Algorithm-+-Training-Data"]], "Verify the Model": [[1113, "Verify-the-Model"]], "Linear Regression": [[1114, "linear-regression"]], "Running Code": [[1114, "running-code"]], "Dataset": [[1114, "dataset"]], "Machine Learning: Concepts and Terminology": [[1115, "machine-learning-concepts-and-terminology"]], "How Far Is Mankind from Creating God": [[1115, "how-far-is-mankind-from-creating-god"]], "Basic Terminology: Algorithm and Model": [[1115, "basic-terminology-algorithm-and-model"]], "Basic Terminology: Features and Data": [[1115, "basic-terminology-features-and-data"]], "Types of Machine Learning": [[1115, "types-of-machine-learning"]], "Problems Solved": [[1115, "problems-solved"], [1137, "problems-solved"], [1144, "problems-solved"]], "CSV Files": [[1116, "csv-files"]], "CSV in its Origins": [[1116, "csv-in-its-origins"]], "The csv Module: csv.reader": [[1116, "the-csv-module-csv-reader"]], "And Tuple Unpacking?": [[1116, "and-tuple-unpacking"]], "Going Insane: CSV? SCSV?": [[1116, "going-insane-csv-scsv"]], "More Tuning Needed: Quoting": [[1116, "more-tuning-needed-quoting"]], "Tuning Options": [[1116, "tuning-options"]], "And Headings?": [[1116, "and-headings"]], "Enter csv.DictReader": [[1116, "enter-csv-dictreader"]], "DBAPI 2": [[1117, "dbapi-2"]], "Database Interfaces": [[1117, "database-interfaces"]], "DBAPI 2.0": [[1117, "dbapi-2-0"]], "Caveat: Transaction Lifetime": [[1117, "caveat-transaction-lifetime"]], "Caveat: Isolation": [[1117, "caveat-isolation"]], "Databases": [[1118, "databases"]], "DBAPI 2: PostgreSQL": [[1119, "dbapi-2-postgresql"]], "DBAPI 2 Example: Postgres": [[1119, "dbapi-2-example-postgres"]], "DBAPI 2: sqlite3": [[1120, "dbapi-2-sqlite3"]], "SQLite3": [[1120, "sqlite3"]], "SQLite3 Connection": [[1120, "sqlite3-connection"]], "SQLite3: Cursors and Statements": [[1120, "sqlite3-cursors-and-statements"]], "SQLite3: Filling the Database": [[1120, "sqlite3-filling-the-database"]], "SQLite3: Queries - Result Set": [[1120, "sqlite3-queries-result-set"]], "SQLite3: Bind Parameters": [[1120, "sqlite3-bind-parameters"]], "ASCII": [[1121, "ascii"]], "ISO Latin 1 (ISO-8859-1)": [[1121, "iso-latin-1-iso-8859-1"]], "And Python?": [[1121, "and-python"]], "Liebe Gr\u00fc\u00dfe, J\u00f6rg": [[1121, "liebe-grusze-jorg"]], "A Better Encoding for Liebe Gr\u00fc\u00dfe, J\u00f6rg: ISO-8859-1": [[1121, "a-better-encoding-for-liebe-grusze-jorg-iso-8859-1"]], "Encoding Mess": [[1121, "encoding-mess"]], "And \u795d\u597d, J\u00f6rg? (1)": [[1121, "and-jorg-1"]], "And \u795d\u597d, J\u00f6rg? (2)": [[1121, "and-jorg-2"]], "Enter UTF-8": [[1121, "enter-utf-8"]], "Boundary Code": [[1121, "boundary-code"]], "Ah Yes: decode()": [[1121, "ah-yes-decode"]], "And Source Encoding?": [[1121, "and-source-encoding"]], "Python: Miscellaneous Topics": [[1122, "python-miscellaneous-topics"]], "The import Statement (incomplete)": [[1123, "the-import-statement-incomplete"]], "Server/Broker": [[1124, "server-broker"]], "Starting the Service": [[1124, "starting-the-service"]], "Publishing a Message in Python": [[1124, "publishing-a-message-in-python"]], "Subscribing a Topic in Python": [[1124, "subscribing-a-topic-in-python"]], "Message Payload?": [[1124, "message-payload"]], "Pandas: Adding Rows": [[1125, "pandas-adding-rows"]], "Add Rows: Assign To New Row Number": [[1125, "add-rows-assign-to-new-row-number"]], "Add Rows: append() (Deprecated)": [[1125, "add-rows-append-deprecated"]], "Add Rows: Concatenating Frames": [[1125, "add-rows-concatenating-frames"]], "Pandas: Basics (DataFrame And Series)": [[1126, "pandas-basics-dataframe-and-series"]], "Naive: Objects, And Collections Of Objects": [[1126, "naive-objects-and-collections-of-objects"]], "Inverted: Objects, And Collections Of Objects (\u27f6 DataFrame)": [[1126, "inverted-objects-and-collections-of-objects-longrightarrow-dataframe"]], "Enter pandas, DataFrame, Series": [[1126, "enter-pandas-dataframe-series"]], "Selecting A Column \u27f6 Series": [[1126, "selecting-a-column-longrightarrow-series"]], "Selecting Multiple Columns": [[1126, "selecting-multiple-columns"]], "To Copy Or Not To Copy": [[1126, "to-copy-or-not-to-copy"]], "Pandas: Filters": [[1127, "pandas-filters"]], "Basic Filter Example": [[1127, "basic-filter-example"]], "Filter? Bitmap!": [[1127, "filter-bitmap"]], "Confusion: Filter/Column Addressing": [[1127, "confusion-filter-column-addressing"]], "Column Selection And Filters": [[1127, "column-selection-and-filters"]], "Boolean Expressions: Bitwise Operators! Braces!": [[1127, "boolean-expressions-bitwise-operators-braces"]], "Negation: ~": [[1127, "negation"]], "Neat Helpers": [[1127, "neat-helpers"]], "Random Material": [[1128, "random-material"]], "Pandas: Selecting Rows (And Columns) With iloc[]": [[1129, "pandas-selecting-rows-and-columns-with-iloc"]], "Row By Number: iloc[]": [[1129, "row-by-number-iloc"]], "So What Is A Row, Then?": [[1129, "so-what-is-a-row-then"]], "Selecting Multiple Rows": [[1129, "selecting-multiple-rows"]], "Selecting Rows And Columns": [[1129, "selecting-rows-and-columns"]], "Pandas: Indexes": [[1130, "pandas-indexes"]], "Default Index: Row Number": [[1130, "default-index-row-number"]], "Setting Custom Index": [[1130, "setting-custom-index"]], "Setting Custom Index, inplace=True": [[1130, "setting-custom-index-inplace-true"]], "Custom Index, And loc[]": [[1130, "custom-index-and-loc"]], "Custom Index, And iloc[]": [[1130, "custom-index-and-iloc"]], "Sorting DataFrame Object By Index Column": [[1130, "sorting-dataframe-object-by-index-column"]], "Pandas: Selecting Rows (And Columns) With loc[]": [[1131, "pandas-selecting-rows-and-columns-with-loc"]], "Rows (And Columns) By Label": [[1131, "rows-and-columns-by-label"]], "Hiccup: Slices Are Inclusive": [[1131, "hiccup-slices-are-inclusive"]], "Column Selection By Label": [[1131, "column-selection-by-label"]], "Columns By Slicing: Inclusive": [[1131, "columns-by-slicing-inclusive"]], "Pandas: Adding/Modifying Columns": [[1132, "pandas-adding-modifying-columns"]], "Example 1: Lowercasing A Column Of Strings": [[1132, "example-1-lowercasing-a-column-of-strings"]], "Example 1: Modifying The email Column": [[1132, "example-1-modifying-the-email-column"]], "Example 2: Adding A normalized_email Column": [[1132, "example-2-adding-a-normalized-email-column"]], "What If No Prebuilt Functionality Exists? apply() To The Rescue!": [[1132, "what-if-no-prebuilt-functionality-exists-apply-to-the-rescue"]], "apply() -ing Custom Functions": [[1132, "apply-ing-custom-functions"]], "XML: ElementTree (etree)": [[1133, "xml-elementtree-etree"]], "SAX and DOM": [[1133, "sax-and-dom"]], "ElementTree": [[1133, "elementtree"]], "A Very Simple Document": [[1133, "a-very-simple-document"]], "Text (1)": [[1133, "text-1"]], "Text (2)": [[1133, "text-2"]], "Writing XML Documents": [[1133, "writing-xml-documents"]], "Reading XML Documents": [[1133, "reading-xml-documents"]], "Visual Studio Code for Python Programming": [[1134, "visual-studio-code-for-python-programming"]], "Python: Project/Package Management": [[1135, "python-project-package-management"]], "Python Package Index (Livehacking Screenplay)": [[1136, "python-package-index-livehacking-screenplay"]], "Invocation": [[1136, "invocation"]], "Help": [[1136, "help"]], "Most Used Subcommands": [[1136, "most-used-subcommands"]], "Subcommand Help": [[1136, "subcommand-help"]], "System vs. User": [[1136, "system-vs-user"]], "Search": [[1136, "search"]], "Python Package Index (Slideshow)": [[1137, "python-package-index-slideshow"]], "Python Package Index (PyPI)": [[1137, "python-package-index-pypi"]], "Python Package Index": [[1138, "python-package-index"]], "Packaging, PyPI Upload (Link Collection)": [[1139, "packaging-pypi-upload-link-collection"]], "PyTest": [[1140, "pytest"]], "pytest Introduction, By Example": [[1141, "pytest-introduction-by-example"]], "Sample Project Structure": [[1141, "sample-project-structure"]], "pytest: Installation, Documentation": [[1141, "pytest-installation-documentation"]], "And PYTHONPATH?": [[1141, "and-pythonpath"]], "A Simple Test": [[1141, "a-simple-test"]], "Failing Tests": [[1141, "failing-tests"]], "A More Realistic Example": [[1141, "a-more-realistic-example"]], "Fixtures": [[1141, "fixtures"]], "Temporary Test Directory": [[1141, "temporary-test-directory"]], "Marking Tests as Expected to Fail": [[1141, "marking-tests-as-expected-to-fail"]], "The unittest Module": [[1142, "the-unittest-module"]], "Simplest Example": [[1142, "simplest-example"]], "Using a Fixture": [[1142, "using-a-fixture"]], "Multiple Test Cases With Same Fixture": [[1142, "multiple-test-cases-with-same-fixture"]], "Auto Recognizing Test Methods": [[1142, "auto-recognizing-test-methods"]], "The Meat of a Test": [[1142, "the-meat-of-a-test"]], "Recommendations": [[1142, "recommendations"]], "Virtual Environments (Livehacking Screenplay)": [[1143, "virtual-environments-livehacking-screenplay"]], "First: Help": [[1143, "first-help"]], "Local Package Installation": [[1143, "local-package-installation"]], "Freezing an Environment": [[1143, "freezing-an-environment"]], "Destroying an Environment": [[1143, "destroying-an-environment"]], "Recreating an Environment": [[1143, "recreating-an-environment"]], "Using Virtual Environments With Visual Studio Code": [[1143, "using-virtual-environments-with-visual-studio-code"]], "Virtual Environments (Slideshow)": [[1144, "virtual-environments-slideshow"]], "Virtual Environments (Links)": [[1144, "virtual-environments-links"]], "Virtual Environments": [[1145, "virtual-environments"]], "Code: Unittest: GTest Basics": [[1147, "code-unittest-gtest-basics"]], "Screenplay: Unittest: GTest Basics": [[1148, "screenplay-unittest-gtest-basics"]], "Before We Start": [[1148, "before-we-start"]], "Simplest Test: No Test": [[1148, "simplest-test-no-test"]], "Next Simplest: Single File": [[1148, "next-simplest-single-file"]], "Executing Tests Selectively": [[1148, "executing-tests-selectively"]], "Fatal Failure": [[1148, "fatal-failure"]], "FAIL()": [[1148, "fail"]], "ASSERT_*()": [[1148, "assert"]], "Non-Fatal Failure": [[1148, "non-fatal-failure"]], "Custom Message Output": [[1148, "custom-message-output"]], "Last Not Least: Structure": [[1148, "last-not-least-structure"]], "Test Cases and Suites": [[1148, "test-cases-and-suites"]], "Unittest: GTest Basics": [[1149, "unittest-gtest-basics"]], "Screenplay: Unittest: GTest and CMake": [[1150, "screenplay-unittest-gtest-and-cmake"]], "Installed: to be found in Standard Paths": [[1150, "installed-to-be-found-in-standard-paths"]], "CMake: \u201cFind Modules\u201d": [[1150, "cmake-find-modules"]], "Executing Tests As Part of Build": [[1150, "executing-tests-as-part-of-build"]], "Tests That Are Expected to Fail": [[1150, "tests-that-are-expected-to-fail"]], "Unittest: GTest and CMake": [[1151, "unittest-gtest-and-cmake"]], "Code: Unittest: GTest Fixtures": [[1152, "code-unittest-gtest-fixtures"]], "Screenplay: Unittest: GTest Fixtures": [[1153, "screenplay-unittest-gtest-fixtures"]], "Predefined Environment for a Number of Tests": [[1153, "predefined-environment-for-a-number-of-tests"]], "Environment is Isolated Per Test": [[1153, "environment-is-isolated-per-test"]], "More Complex Environment: SetUp(), TearDown()": [[1153, "more-complex-environment-setup-teardown"]], "Unittest: GTest Fixtures": [[1154, "unittest-gtest-fixtures"]], "Organisatorisches: Buchung, Kursablauf": [[1155, "organisatorisches-buchung-kursablauf"]], "Online Schulungen": [[1155, null]], "Buchung": [[1155, "buchung"]], "Kursgestaltung": [[1155, "kursgestaltung"]], "\u00dcbungen": [[1155, "ubungen"]], "Unterlagen & Download": [[1155, "unterlagen-download"]], "Linux from Scratch, 16.9.2013, M\u00fcnchen": [[1156, "linux-from-scratch-16-9-2013-munchen"]], "GRUB 0.97": [[1156, "grub-0-97"]], "Cross Systeme Bauen": [[1156, "cross-systeme-bauen"]], "Init, oder der Prozess mit der ID 1": [[1156, "init-oder-der-prozess-mit-der-id-1"]], "Verschiedenes": [[1156, "verschiedenes"]], "Shell Scripting/Bourne Again Shell (Bash)": [[1157, "shell-scripting-bourne-again-shell-bash"]], "Zielpublikum": [[1157, "zielpublikum"], [1159, "zielpublikum"], [1160, "zielpublikum"], [1165, "zielpublikum"], [1167, "zielpublikum"], [1172, "zielpublikum"], [1173, "zielpublikum"], [1179, "zielpublikum"]], "Kursinhalt": [[1157, "kursinhalt"], [1159, "kursinhalt"], [1160, "kursinhalt"], [1165, "kursinhalt"], [1167, "kursinhalt"], [1168, "kursinhalt"], [1172, "kursinhalt"], [1173, "kursinhalt"], [1174, "kursinhalt"], [1175, "kursinhalt"], [1177, "kursinhalt"], [1178, "kursinhalt"], [1179, "kursinhalt"]], "Empfohlene Vorkenntnisse": [[1157, "empfohlene-vorkenntnisse"], [1159, "empfohlene-vorkenntnisse"], [1160, "empfohlene-vorkenntnisse"], [1165, "empfohlene-vorkenntnisse"], [1167, "empfohlene-vorkenntnisse"], [1168, "empfohlene-vorkenntnisse"], [1172, "empfohlene-vorkenntnisse"], [1173, "empfohlene-vorkenntnisse"], [1174, "empfohlene-vorkenntnisse"], [1175, "empfohlene-vorkenntnisse"], [1177, "empfohlene-vorkenntnisse"], [1178, "empfohlene-vorkenntnisse"], [1179, "empfohlene-vorkenntnisse"]], "C: Einf\u00fchrung": [[1158, "c-einfuhrung"]], "C f\u00fcr Fortgeschrittene": [[1159, "c-fur-fortgeschrittene"]], "C++: Einf\u00fchrung und \u00dcberblick": [[1160, "c-einfuhrung-und-uberblick"]], "An Introduction to Modern C++, In Three Days": [[1161, "an-introduction-to-modern-c-in-three-days"]], "C and C++ Programming": [[1162, "c-and-c-programming"]], "CMake": [[1163, "cmake"]], "The Course": [[1163, null]], "Target Audience": [[1163, "target-audience"]], "Recommended Prior Knowledge": [[1163, "recommended-prior-knowledge"]], "Design Patterns For C++ Developers": [[1164, "design-patterns-for-c-developers"]], "Embedded Software Development: Hardware, Realtime, and Memory Management": [[1165, "embedded-software-development-hardware-realtime-and-memory-management"]], "Linux Kernel Driver Development": [[1166, "linux-kernel-driver-development"], [787, "linux-kernel-driver-development"]], "Course Contents": [[1166, "course-contents"]], "Sample Project": [[1166, "sample-project"]], "Linux Basics: Eine Einf\u00fchrung Anhand von Beispielen": [[1167, "linux-basics-eine-einfuhrung-anhand-von-beispielen"]], "GNU Make: Die Mutter aller Build Tools": [[1168, "gnu-make-die-mutter-aller-build-tools"]], "Herdt": [[1171, "herdt"]], "Eine Woche mit dem Raspberry Pi": [[1172, "eine-woche-mit-dem-raspberry-pi"]], "Subversion (SVN)": [[1173, "subversion-svn"]], "Linux Systems Programming: Introduction": [[1174, "linux-systems-programming-introduction"]], "Linux Systems Programming: Virtual Memory, IPC, Shared Libraries": [[1175, "linux-systems-programming-virtual-memory-ipc-shared-libraries"]], "Linux Systems Programming: Multithreading": [[1177, "linux-systems-programming-multithreading"]], "Linux Systems Programming: Network Programming": [[1178, "linux-systems-programming-network-programming"]], "Unittesting and Test Driven Development": [[1179, "unittesting-and-test-driven-development"]], "WS2023/2024: Exam 2024-02-02 (Sample)": [[113, "ws2023-2024-exam-2024-02-02-sample"]], "SOLID": [[113, "solid"]], "Question 1": [[113, "question-1"]], "OO Design Principles": [[477, "oo-design-principles"]], "Principles: Why? Which?": [[477, "principles-why-which"]], "Single Responsibility": [[477, "single-responsibility"]], "Open/Closed": [[477, "open-closed"]], "Liskov Substitution": [[477, "liskov-substitution"]], "Interface Segregation": [[477, "interface-segregation"]], "Dependency Inversion": [[477, "dependency-inversion"]], "WS2023/24": [[134, "ws2023-24"]], "2023-10-05 (6 VO)": [[134, "vo"]], "OO: Recap": [[134, "oo-recap"]], "Plan \ud83d\udcaa": [[134, "plan-muscle"]], "OO: Polymorphism": [[134, "oo-polymorphism"]], "Git Collaboration (via Github, but not necessarily): Forks And Pull Request": [[134, "git-collaboration-via-github-but-not-necessarily-forks-and-pull-request"]], "Tasks, First Round": [[134, "tasks-first-round"]], "2023-11-03 (6 VO)": [[134, "id1"]], "Organizational": [[134, "organizational"]], "OO: Design?": [[134, "oo-design"]], "Hardware Overview": [[134, "hardware-overview"]], "2023-11-09 (3 VO)": [[134, "id2"]], "2023-11-10 (3 VO)": [[134, "id4"]], "2023-11-17 (3 VO)": [[134, "id6"]], "OO, And Software Development At Large": [[134, "oo-and-software-development-at-large"]], "Updating A Fork From Upstream": [[134, "updating-a-fork-from-upstream"]], "2023-11-20 (6 VO)": [[134, "id8"]], "Container Templates (std::map)": [[134, "container-templates-std-map"]], "New Tasks: MQTT And CSV Sink Implementations": [[134, "new-tasks-mqtt-and-csv-sink-implementations"]], "Datalogger Pull Request": [[134, "datalogger-pull-request"]], "Boiling Pot, Switches": [[134, "boiling-pot-switches"]], "2023-12-07 (6 VO)": [[134, "id10"]], "Renames": [[134, "renames"]], "2023-12-14 (6 VO)": [[134, "id12"]], "2024-01-08 (6 VO)": [[134, "id14"]], "2024-01-11 (6 VO)": [[134, "id16"]], "2024-02-02 (Exam)": [[134, "exam"]], "Screenplay: Pointless Blinking With Python, asyncio, and libgpiod (and a Raspberry Pi of Course)": [[64, "screenplay-pointless-blinking-with-python-asyncio-and-libgpiod-and-a-raspberry-pi-of-course"]], "Setup Before Presentation": [[64, "setup-before-presentation"]], "Greeting": [[64, "greeting"]], "Multiple Background Threads": [[64, "multiple-background-threads"]], "Enter asyncio": [[64, "enter-asyncio"]], "Character Device Based GPIO": [[64, "character-device-based-gpio"]], "GPIO Device": [[64, "gpio-device"]], "Most Basic Feature: Setting GPIO Values": [[64, "most-basic-feature-setting-gpio-values"]], "Entire Matrix On/Off": [[64, "entire-matrix-on-off"]], "Bringing All Together": [[64, "bringing-all-together"]], "Modularize": [[64, "modularize"]], "Play A Bit: Blink Entire Rows": [[64, "play-a-bit-blink-entire-rows"]], "Coroutines?": [[64, "coroutines"]], "Not Enough: sequence()": [[64, "not-enough-sequence"]], "Looping: forever()": [[64, "looping-forever"]], "A Stripped-Down Program (\u27f6 Factory)": [[64, "a-stripped-down-program-longrightarrow-factory"]], "Turn blink() Into A Factory": [[64, "turn-blink-into-a-factory"]], "Anti-Clumsy Decorator: blink() Wrapper": [[64, "anti-clumsy-decorator-blink-wrapper"]], "@program, Finally": [[64, "program-finally"]], "Playground: cycle()": [[64, "playground-cycle"]], "Fast Forward: any(), And Cancellation": [[64, "fast-forward-any-and-cancellation"]], "Playground: on()": [[64, "playground-on"]], "Goodbye": [[64, "goodbye"]], "Agenda: Python Basics (Beginning Of 2024)": [[326, "agenda-python-basics-beginning-of-2024"]], "Numerics: Pandas, NumPy": [[326, "numerics-pandas-numpy"]], "Bisher Gehaltene": [[360, "bisher-gehaltene"]], "Python Advanced (2024-01-15 - 2024-01-17)": [[360, "python-advanced-2024-01-15-2024-01-17"]], "Python Advanced (2023-11-22 - 2023-11-24)": [[360, "python-advanced-2023-11-22-2023-11-24"]], "Clean Code Development With Python (2023-03-28 - 2023-03-30)": [[360, "clean-code-development-with-python-2023-03-28-2023-03-30"]], "C++ For Embedded Developers (2023-03-20 - 2023-03-22)": [[360, "c-for-embedded-developers-2023-03-20-2023-03-22"]], "Python (2022-11-07 - 2022-11-10, 2022-12-01)": [[360, "python-2022-11-07-2022-11-10-2022-12-01"]], "C++: A New Language Starting In 2011 (2022-07-26 - 2022-07-27)": [[360, "c-a-new-language-starting-in-2011-2022-07-26-2022-07-27"]], "C++: A New Language Starting In 2011 (2022-06-14 - 2022-06-15)": [[360, "c-a-new-language-starting-in-2011-2022-06-14-2022-06-15"]], "Python Advanced (2022-03-15 - 2022-03-17)": [[360, "python-advanced-2022-03-15-2022-03-17"]], "Python Basics (2021-08-23 - 2021-08-25)": [[360, "python-basics-2021-08-23-2021-08-25"]], "Programmieren mit C++ (2021-07-12 - 2021-07-16)": [[360, "programmieren-mit-c-2021-07-12-2021-07-16"]], "Linux Basics, Shell Scripting (2019-03-29 - 1.4.2021)": [[360, "linux-basics-shell-scripting-2019-03-29-1-4-2021"]], "Python (22.3.2021 - 25.3.2021)": [[360, "python-22-3-2021-25-3-2021"]], "Python Advanced (15.3.2021 - 17.3.2021)": [[360, "python-advanced-15-3-2021-17-3-2021"]], "Linux Kernel Driver Development Basics (8.3.2021 - 12.3.2020)": [[360, "linux-kernel-driver-development-basics-8-3-2021-12-3-2020"]], "Programmierung Grundlagen, anhand von Python (13. und 14.1.2021)": [[360, "programmierung-grundlagen-anhand-von-python-13-und-14-1-2021"]], "Linux und Raspberry Pi (3.11.2020, 4.11.2020, 17.11.2020)": [[360, "linux-und-raspberry-pi-3-11-2020-4-11-2020-17-11-2020"]], "Python Basics (19.10.2020 - 22.10.2020)": [[360, "python-basics-19-10-2020-22-10-2020"]], "Python Advanced (13.5.2020 - 14.5.2020 bei einer Firma in Graz)": [[360, "python-advanced-13-5-2020-14-5-2020-bei-einer-firma-in-graz"]], "C++ f\u00fcr Embedded-Entwickler (30.3.2020 - 4.4.2020, bei einer Firma in Baden-W\u00fcrttemberg)": [[360, "c-fur-embedded-entwickler-30-3-2020-4-4-2020-bei-einer-firma-in-baden-wurttemberg"]], "IPC in Linux (10.1.2020, bei einer Firma in Graz)": [[360, "ipc-in-linux-10-1-2020-bei-einer-firma-in-graz"]], "Python/NumPy (12.11.2019 - 13.11.2019 in Graz)": [[360, "python-numpy-12-11-2019-13-11-2019-in-graz"]], "Python Advanced (9.10.2019 - 10.10.2019 bei einer Firma in Graz)": [[360, "python-advanced-9-10-2019-10-10-2019-bei-einer-firma-in-graz"]], "C f\u00fcr Fortgeschrittene (30.9.2019 - 4.10.2019 in Wiener Neustadt)": [[360, "c-fur-fortgeschrittene-30-9-2019-4-10-2019-in-wiener-neustadt"]], "Einf\u00fchrung in Raspberry Pi (8.7.2019 - 10.7.2019 in Graz)": [[360, "einfuhrung-in-raspberry-pi-8-7-2019-10-7-2019-in-graz"]], "Python Basics (24.6.2019 - 27.6.2019, bei einer Firma in Ober\u00f6sterreich)": [[360, "python-basics-24-6-2019-27-6-2019-bei-einer-firma-in-oberosterreich"]], "Linux Basics (13.6.2019 - 19.6.2019, bei einer Firma in Ober\u00f6sterreich)": [[360, "linux-basics-13-6-2019-19-6-2019-bei-einer-firma-in-oberosterreich"]], "Python Basics (3.6.2019 - 6.6.2019, bei einer Firma in Ober\u00f6sterreich)": [[360, "python-basics-3-6-2019-6-6-2019-bei-einer-firma-in-oberosterreich"]], "Linux Big Picture (27.5.2019 - 29.5.2019, bei einer Firma in Baden-W\u00fcrttemberg)": [[360, "linux-big-picture-27-5-2019-29-5-2019-bei-einer-firma-in-baden-wurttemberg"]], "Python Basics (23.5.2019 - 24.5.2019, bei einer Firma in der Obersteiermark)": [[360, "python-basics-23-5-2019-24-5-2019-bei-einer-firma-in-der-obersteiermark"]], "Korn Shell Scripting (20.5.2019 - 22.5.2019 bei einer Firma in Salzburg)": [[360, "korn-shell-scripting-20-5-2019-22-5-2019-bei-einer-firma-in-salzburg"]], "Linux Basics (13.5.2019 - 15.5.2019, bei einer Firma in Ober\u00f6sterreich)": [[360, "linux-basics-13-5-2019-15-5-2019-bei-einer-firma-in-oberosterreich"]], "C: Ausgew\u00e4hlte Themen (17.12.2018 - 19.12.2018 in Graz)": [[360, "c-ausgewahlte-themen-17-12-2018-19-12-2018-in-graz"]], "Python Basics (1.10.2018 - 4.10.2018, bei einer Firma in Ober\u00f6sterreich)": [[360, "python-basics-1-10-2018-4-10-2018-bei-einer-firma-in-oberosterreich"]], "Linux Basics, Shell Scripting (16.7.2018 - 20.7.2018, bei einer Firma in Ober\u00f6sterreich)": [[360, "linux-basics-shell-scripting-16-7-2018-20-7-2018-bei-einer-firma-in-oberosterreich"]], "Advanced C on Linux (9.7.2018 - 11.7.2018, Raum N\u00fcrnberg)": [[360, "advanced-c-on-linux-9-7-2018-11-7-2018-raum-nurnberg"]], "Linux f\u00fcr Fortgeschrittene (12.3.2018 - 16.3.2018, Oberb\u00fcren/Schweiz)": [[360, "linux-fur-fortgeschrittene-12-3-2018-16-3-2018-oberburen-schweiz"]], "Linux und Python (11.9.2017 - 13.9.2017, bei einer Firma im Raum M\u00fcnchen)": [[360, "linux-und-python-11-9-2017-13-9-2017-bei-einer-firma-im-raum-munchen"]], "Linux Lowlevel Programming (28.8.2017 - 30.8.2017, Raum N\u00fcrnberg)": [[360, "linux-lowlevel-programming-28-8-2017-30-8-2017-raum-nurnberg"]], "C Refresher (23.8.2017 - 24.8.2017, Raum N\u00fcrnberg)": [[360, "c-refresher-23-8-2017-24-8-2017-raum-nurnberg"]], "C++11: Ausgew\u00e4hlte Themen (6.6.2017 - 8.6.2017 bei einer Firma in Graz)": [[360, "c-11-ausgewahlte-themen-6-6-2017-8-6-2017-bei-einer-firma-in-graz"]], "Linux vom Programmiererstandpunkt (30.12.2016 in Wien)": [[360, "linux-vom-programmiererstandpunkt-30-12-2016-in-wien"]], "Embedded Linux anhand des Raspberry Pi (17.10.2016 - 21.10.2016 bei einer Firma in Baden-W\u00fcrttemberg)": [[360, "embedded-linux-anhand-des-raspberry-pi-17-10-2016-21-10-2016-bei-einer-firma-in-baden-wurttemberg"]], "Linux vom Programmiererstandpunkt (20.9.2016 in Wien)": [[360, "linux-vom-programmiererstandpunkt-20-9-2016-in-wien"]], "C for Advanced Users (5.7.2016 - 6.7.2016, Raum N\u00fcrnberg)": [[360, "c-for-advanced-users-5-7-2016-6-7-2016-raum-nurnberg"]], "Einf\u00fchrung in C++ (22.2.2016 - 26.2.2016 bei einer Firma in Graz)": [[360, "einfuhrung-in-c-22-2-2016-26-2-2016-bei-einer-firma-in-graz"]], "Advanced Python Workshop (20.2.2017 - 23.2.2017, bei einer Firma in Ober\u00f6sterreich)": [[360, "advanced-python-workshop-20-2-2017-23-2-2017-bei-einer-firma-in-oberosterreich"]], "Embedded Linux (30.11.2015 - 4.12.2015, Bodenseo, Hemmenhofen am Bodensee)": [[360, "embedded-linux-30-11-2015-4-12-2015-bodenseo-hemmenhofen-am-bodensee"]], "Linux Kernel, Realtime (17.11.2015 - 19.11.2015 bei einer Firma in Graz)": [[360, "linux-kernel-realtime-17-11-2015-19-11-2015-bei-einer-firma-in-graz"]], "Linux Basics (3.11.2015 - 5.11.2015 bei einer Firma in Graz)": [[360, "linux-basics-3-11-2015-5-11-2015-bei-einer-firma-in-graz"]], "Einf\u00fchrung in Python (5.10.2015 - 6.10.2015 in Wien)": [[360, "einfuhrung-in-python-5-10-2015-6-10-2015-in-wien"]], "Linux Basics, Systemnahe Programmierung (27.7.2015 - 31.7.2015, bei einer Firma in Ober\u00f6sterreich)": [[360, "linux-basics-systemnahe-programmierung-27-7-2015-31-7-2015-bei-einer-firma-in-oberosterreich"]], "Design Patterns and Test Driven Development (1.7.2015 - 3.7.2015, Raum N\u00fcrnberg)": [[360, "design-patterns-and-test-driven-development-1-7-2015-3-7-2015-raum-nurnberg"]], "C for Advanced Users (9.12.2014 - 11.12.2014, Raum N\u00fcrnberg)": [[360, "c-for-advanced-users-9-12-2014-11-12-2014-raum-nurnberg"]], "Python (1.6.2015 - 3.6.2015, Mathias Kettner in M\u00fcnchen)": [[360, "python-1-6-2015-3-6-2015-mathias-kettner-in-munchen"]], "Linux Basics, Kernel, Git (9.3.2015 - 13.3.2015, Siemens Braunschweig)": [[360, "linux-basics-kernel-git-9-3-2015-13-3-2015-siemens-braunschweig"]], "Embedded Linux (28.1.2015 - 30.1.2015, bei einer Firma im Raum M\u00fcnchen)": [[360, "embedded-linux-28-1-2015-30-1-2015-bei-einer-firma-im-raum-munchen"]], "C for Intermediate Users (9.12.2014 - 11.12.2014, Raum N\u00fcrnberg)": [[360, "c-for-intermediate-users-9-12-2014-11-12-2014-raum-nurnberg"]], "Linux from Scratch (1.12.2014 - 5.12.2014 LPD Hannover)": [[360, "linux-from-scratch-1-12-2014-5-12-2014-lpd-hannover"]], "Einf\u00fchrung in C++ (7.10.2014 - 10.10.2014 in Wien)": [[360, "einfuhrung-in-c-7-10-2014-10-10-2014-in-wien"]], "Systemnahe Programmierung unter Linux (14.4.2014 - 17.4.2014 in K\u00f6ln)": [[360, "systemnahe-programmierung-unter-linux-14-4-2014-17-4-2014-in-koln"]], "Einf\u00fchrung in C++ (3.3.2014 - 14.3.2014 in Wien)": [[360, "einfuhrung-in-c-3-3-2014-14-3-2014-in-wien"]], "Projektverwaltung mit Subversion und CMake (24.2.2014 - 27.2.2014 in Wien)": [[360, "projektverwaltung-mit-subversion-und-cmake-24-2-2014-27-2-2014-in-wien"]], "Einf\u00fchrung in Python (23.6.2014 - 26.6.2014, LKA Niedersachsen)": [[360, "einfuhrung-in-python-23-6-2014-26-6-2014-lka-niedersachsen"]], "Linux: Boot-Konfiguration und Systemnahe Programmierung (27.5.2014 - 30.5.2014 in Graz)": [[360, "linux-boot-konfiguration-und-systemnahe-programmierung-27-5-2014-30-5-2014-in-graz"]], "Einf\u00fchrung in C (11.11.2013 - 22.11.2013 in Wien)": [[360, "einfuhrung-in-c-11-11-2013-22-11-2013-in-wien"]], "Linux Basics (28.10.2013 - 31.10.2013 in Wien)": [[360, "linux-basics-28-10-2013-31-10-2013-in-wien"]], "Linux Basics, Embedded Linux (14.10.2013 - 15.10.2013 bei einer Firma im Raum M\u00fcnchen)": [[360, "linux-basics-embedded-linux-14-10-2013-15-10-2013-bei-einer-firma-im-raum-munchen"]], "Shell/Bash Scripting (7.10.2013 - 9.10.2013, bei einer Firma in Ober\u00f6sterreich)": [[360, "shell-bash-scripting-7-10-2013-9-10-2013-bei-einer-firma-in-oberosterreich"]], "Alles Linux (1.10.2013 - 4.10.2013, QualiVision in Z\u00fcrich)": [[360, "alles-linux-1-10-2013-4-10-2013-qualivision-in-zurich"]], "Linux from Scratch (16.9.2013 - 20.9.2013, Mathias Kettner in M\u00fcnchen)": [[360, "linux-from-scratch-16-9-2013-20-9-2013-mathias-kettner-in-munchen"]], "Linux Basics (2.7.2013 - 4.7.2013, bei einer Firma in Ober\u00f6sterreich)": [[360, "linux-basics-2-7-2013-4-7-2013-bei-einer-firma-in-oberosterreich"]], "Linux - Einf\u00fchrung und Programmierung (27.5.2013 - 29.5.2013, bei einer Firma im Raum M\u00fcnchen)": [[360, "linux-einfuhrung-und-programmierung-27-5-2013-29-5-2013-bei-einer-firma-im-raum-munchen"]], "GNU Make (23.4.2013 in Graz)": [[360, "gnu-make-23-4-2013-in-graz"]], "Linux Basics & Embedded (14.1.2013 - 18.1.2013, bei einer Firma in Ober\u00f6sterreich)": [[360, "linux-basics-embedded-14-1-2013-18-1-2013-bei-einer-firma-in-oberosterreich"]], "Linux Systemnah, Embedded, C++ (26.11.2012 - 28.11.2012, bei einer Firma in Hamburg)": [[360, "linux-systemnah-embedded-c-26-11-2012-28-11-2012-bei-einer-firma-in-hamburg"]], "Fehlerdiagnose unter Linux (19.11.2012 - 21.11.2012, Polizei Niedersachsen in Hannover)": [[360, "fehlerdiagnose-unter-linux-19-11-2012-21-11-2012-polizei-niedersachsen-in-hannover"]], "Systemnahe Programmierung unter Linux (29.10.2012 - 30.10.2012, bei einer Firma im Raum M\u00fcnchen)": [[360, "systemnahe-programmierung-unter-linux-29-10-2012-30-10-2012-bei-einer-firma-im-raum-munchen"]], "Einf\u00fchrung in Python (15.10.2012 - 17.10.2012, Mathias Kettner in M\u00fcnchen)": [[360, "einfuhrung-in-python-15-10-2012-17-10-2012-mathias-kettner-in-munchen"]], "Einf\u00fchrung in Python (25.9.2012 - 27.9.2012, STIA in Admont)": [[360, "einfuhrung-in-python-25-9-2012-27-9-2012-stia-in-admont"]], "Linux Systemnah (13.2.2012 bis 15.2.2012, bei einer Firma in Z\u00fcrich)": [[360, "linux-systemnah-13-2-2012-bis-15-2-2012-bei-einer-firma-in-zurich"]], "Einf\u00fchrung in Python (24.1.2012 - 26.1.2012, Mathias Kettner in M\u00fcnchen)": [[360, "einfuhrung-in-python-24-1-2012-26-1-2012-mathias-kettner-in-munchen"]], "Linux Systemnah (19.9.2011 - 22.9.2011, bei einer Firma in Ober\u00f6sterreich)": [[360, "linux-systemnah-19-9-2011-22-9-2011-bei-einer-firma-in-oberosterreich"]], "Linux Basics (13.9.2011 - 15.9.2011, bei einer Firma in Ober\u00f6sterreich)": [[360, "linux-basics-13-9-2011-15-9-2011-bei-einer-firma-in-oberosterreich"]], "Linux Systemnah (4.7.2011 - 7.7.2011, Bodenseo, Hemmenhofen am Bodensee)": [[360, "linux-systemnah-4-7-2011-7-7-2011-bodenseo-hemmenhofen-am-bodensee"]], "Linux Systemnah (14.2.2011 - 18.2.2011, Bodenseo, Hemmenhofen am Bodensee)": [[360, "linux-systemnah-14-2-2011-18-2-2011-bodenseo-hemmenhofen-am-bodensee"]], "Linux from Scratch (12.12.2010 - 17.12.2010, Mathias Kettner in M\u00fcnchen)": [[360, "linux-from-scratch-12-12-2010-17-12-2010-mathias-kettner-in-munchen"]], "Softwareentwicklung unter Linux (6.12.2010 - 10.12.2010, bei einer Firma in Darmstadt)": [[360, "softwareentwicklung-unter-linux-6-12-2010-10-12-2010-bei-einer-firma-in-darmstadt"]], "Softwareentwicklung unter Linux (24.11.2010 - 26.11.2010, bei einer Firma im Raum Ulm)": [[360, "softwareentwicklung-unter-linux-24-11-2010-26-11-2010-bei-einer-firma-im-raum-ulm"]], "Linux Kernel (25.10.2010 - 26.10.2010, Deutsche Bundeswehr in Wildflecken)": [[360, "linux-kernel-25-10-2010-26-10-2010-deutsche-bundeswehr-in-wildflecken"]], "Softwareentwicklung unter Linux (20.10.2010 - 24.10.2010, Mathias Kettner)": [[360, "softwareentwicklung-unter-linux-20-10-2010-24-10-2010-mathias-kettner"]], "Types, Operators, Expressions": [[395, "types-operators-expressions"]], "Program Flow": [[404, "program-flow"]], "Functions and Program Structure": [[411, "functions-and-program-structure"]], "Structures": [[421, "structures"]], "Memory": [[424, "memory"]], "Program Sanity": [[437, "program-sanity"]], "Performance": [[441, "performance"]], "Profiling": [[446, "profiling"]], "C++: Miscellaneous Live-Hacking": [[567, "c-miscellaneous-live-hacking"]], "Functions and Methods": [[590, "functions-and-methods"]], "C++ Template Basics": [[596, "c-template-basics"]], "Dynamic Memory Allocation, Resource Management": [[637, "dynamic-memory-allocation-resource-management"]], "The Standard Library: Miscellaneous Topics": [[646, "the-standard-library-miscellaneous-topics"]], "Functions, Functions": [[732, "functions-functions"]], "Topics and Dependencies": [[787, "topics-and-dependencies"]], "POSIX Threads": [[961, "posix-threads"]], "Python: The Language Fundamentals": [[1031, "python-the-language-fundamentals"]], "Unit Testing With googletest": [[1146, "unit-testing-with-googletest"]]}, "indexentries": {}})