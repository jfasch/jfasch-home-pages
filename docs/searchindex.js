Search.setIndex({"docnames": ["about/myself/contact", "about/myself/cv-de", "about/myself/index", "about/myself/projects-de", "about/myself/skills-de", "about/site/courses/angebot-2023-10-12", "about/site/courses/index", "about/site/courses/samples/detail/2021-04-12/Notebook", "about/site/courses/samples/detail/2021-04-12/index", "about/site/courses/samples/detail/2021-04-12/notebook-wrapper", "about/site/courses/samples/detail/index", "about/site/courses/samples/index", "about/site/courses/templates", "about/site/index", "about/site/opentraining/index", "about/site/opentraining/misc/draft-topics/index", "about/site/opentraining/misc/index", "about/site/opentraining/misc/s5/index", "about/site/opentraining/misc/s5/tests/index", "about/site/opentraining/misc/s5/tests/test-slides", "about/site/opentraining/misc/screencast", "about/site/opentraining/misc/topics-to-write", "about/site/opentraining/netidee/index", "about/site/opentraining/netidee/netidee-antrag", "about/site/opentraining/netidee/netidee-video-2min", "about/site/opentraining/usecases/agenda-subtract-known", "about/site/opentraining/usecases/duration", "about/site/opentraining/usecases/index", "about/site/opentraining/usecases/linking", "about/site/opentraining/usecases/menu", "about/site/opentraining/usecases/slides", "about/site/recipes/camera-ssh", "about/site/recipes/emoji", "about/site/recipes/index", "about/site/recipes/isoamsa", "about/site/recipes/isoamsr", "about/site/recipes/isonum", "about/site/recipes/layout-test", "about/site/recipes/mathml", "about/site/recipes/rst-cheatsheet", "about/site/recipes/sphinxish", "about/site/work-in-progress/2022-04-13/index", "about/site/work-in-progress/2022-04-13/seminar/block-before-googletest", "about/site/work-in-progress/2022-04-13/seminar/clean-code-craftsmanship", "about/site/work-in-progress/2022-04-13/seminar/enter-googletest", "about/site/work-in-progress/2022-04-13/seminar/index", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/find-error", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/group", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/overwrite-existing-files", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/overwrite-store-content-on-read", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/csv", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/group", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/other-indexes", "about/site/work-in-progress/2022-04-13/seminar/tasks/group", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/backingstore-interface", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/backingstore-monolithic", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/group", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/pass-store-in-ctor", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/store-enum-switch", "about/site/work-in-progress/blink/glt-2023", "about/site/work-in-progress/blink/glt-2024", "about/site/work-in-progress/blink/index", "about/site/work-in-progress/blink/installation", "about/site/work-in-progress/blink/pycon-2023", "about/site/work-in-progress/blink/screenplay", "about/site/work-in-progress/blog-queue/hochkoenig/index", "about/site/work-in-progress/blog-queue/index", "about/site/work-in-progress/blog-queue/sphinx", "about/site/work-in-progress/fh-joanneum/2019/cxx", "about/site/work-in-progress/fh-joanneum/2019/cxx_build", "about/site/work-in-progress/fh-joanneum/2019/cxx_iface", "about/site/work-in-progress/fh-joanneum/2019/cxx_oo_basics", "about/site/work-in-progress/fh-joanneum/2019/cxx_unittest", "about/site/work-in-progress/fh-joanneum/2019/ec", "about/site/work-in-progress/fh-joanneum/2019/embedded-computing-1", "about/site/work-in-progress/fh-joanneum/2019/embedded-computing-2", "about/site/work-in-progress/fh-joanneum/2019/exercise_mt_race", "about/site/work-in-progress/fh-joanneum/2019/exercise_mt_race_fixed", "about/site/work-in-progress/fh-joanneum/2019/git", "about/site/work-in-progress/fh-joanneum/2019/index", "about/site/work-in-progress/fh-joanneum/2019/linux", "about/site/work-in-progress/fh-joanneum/2019/linux_basics", "about/site/work-in-progress/fh-joanneum/2019/linux_dev_mgmt", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_avg_sensor", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_avg_sensor_parallel", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_led_display", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_sensors", "about/site/work-in-progress/fh-joanneum/2019/linux_gpio", "about/site/work-in-progress/fh-joanneum/2019/mt", "about/site/work-in-progress/fh-joanneum/2019/mt_lock", "about/site/work-in-progress/fh-joanneum/2019/mt_wait", "about/site/work-in-progress/fh-joanneum/2019/py_basics", "about/site/work-in-progress/fh-joanneum/2019/py_exercise_avg_display", "about/site/work-in-progress/fh-joanneum/2019/py_exercise_sensors", "about/site/work-in-progress/fh-joanneum/2019/py_web", "about/site/work-in-progress/fh-joanneum/2019/py_web_sensors", "about/site/work-in-progress/fh-joanneum/2019/python", "about/site/work-in-progress/fh-joanneum/2020/index", "about/site/work-in-progress/fh-joanneum/2020/ss2022", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-08", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-10", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-10-homework", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-21", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-22,24", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-28", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-04-01", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/index", "about/site/work-in-progress/fh-joanneum/2020/ws2022", "about/site/work-in-progress/fh-joanneum/2020/ws2022-questions-code-general", "about/site/work-in-progress/fh-joanneum/2020/ws2022-questions-yesno", "about/site/work-in-progress/fh-joanneum/2020/ws2022/lab-exam-2023-01-17", "about/site/work-in-progress/fh-joanneum/2021/exam-2023-06-30", "about/site/work-in-progress/fh-joanneum/2021/exam-2023-06-30-solved", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/exam-2024-01-26", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/exam-2024-02-02-sample", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/index", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/index", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/q-const", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/q-param-passing", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/q-solid--hysteresis-with-display", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/q-solid--sensor-with-id", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/q-virtual-method", "about/site/work-in-progress/fh-joanneum/2021/git/git", "about/site/work-in-progress/fh-joanneum/2021/index", "about/site/work-in-progress/fh-joanneum/2021/ss2023", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot-basic-integration", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot-display", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot-full-integration", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger-csv-sink", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger-integration", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger-mqtt-sink", "about/site/work-in-progress/fh-joanneum/2021/tasks/display-infrastructure", "about/site/work-in-progress/fh-joanneum/2021/tasks/group", "about/site/work-in-progress/fh-joanneum/2021/tasks/libgpiod-switch", "about/site/work-in-progress/fh-joanneum/2021/tasks/mqtt-tkinter", "about/site/work-in-progress/fh-joanneum/2021/tasks/pwm-display", "about/site/work-in-progress/fh-joanneum/2021/tasks/sensor-interface", "about/site/work-in-progress/fh-joanneum/2021/tasks/sensor-w1", "about/site/work-in-progress/fh-joanneum/2021/tasks/switch-interface", "about/site/work-in-progress/fh-joanneum/2021/tasks/sysfs-gpio-switch", "about/site/work-in-progress/fh-joanneum/2021/ws2023-2024", "about/site/work-in-progress/fh-joanneum/index", "about/site/work-in-progress/git", "about/site/work-in-progress/index", "about/site/work-in-progress/packaging/index", "about/site/work-in-progress/project-xxx/audio-chip", "about/site/work-in-progress/project-xxx/debian-config", "about/site/work-in-progress/project-xxx/debian-kernel-package", "about/site/work-in-progress/project-xxx/hardware-bringup", "about/site/work-in-progress/project-xxx/index", "about/site/work-in-progress/project-xxx/kernel-upgrade-dirty", "about/site/work-in-progress/project-xxx/wait-hardware", "about/site/work-in-progress/project-xxx/yocto-kernel", "about/site/work-in-progress/python-training", "about/site/work-in-progress/screencast", "about/site/work-in-progress/seo", "about/site/work-in-progress/stacks", "about/site/work-in-progress/todo-misc", "about/site/work-in-progress/web", "blog/2010/07/beagleboard-how-to-repair-nand-also-known-as-40w", "blog/2011/01/porting-to-linux-there-s-always-a-better-way", "blog/2011/01/saving-solid-state-disk-life--gentoo", "blog/2012/04/Why-ps-sucks", "blog/2020/02/fedora-kernel-build", "blog/2020/03/custom-domain-gh-pages", "blog/2020/03/ms-teams-on-linux", "blog/2020/03/sphinx-gh-pages", "blog/2020/04/bbb", "blog/2020/09/traunstein", "blog/2021/08/grintovec", "blog/2021/09/xps13-shim-mok-brick/index", "blog/2022/09/cross-raspi", "blog/index", "index", "trainings/codex", "trainings/exercises", "trainings/index", "trainings/log/detail/2013-10-01/index", "trainings/log/detail/2015-11-30/index", "trainings/log/detail/2019-10-28/LiveHacking", "trainings/log/detail/2019-10-28/index", "trainings/log/detail/2019-11-12/code/BigPlan", "trainings/log/detail/2019-11-12/code/LiveHacking", "trainings/log/detail/2019-11-12/index", "trainings/log/detail/2020-01-10/Proposal", "trainings/log/detail/2020-01-10/index", "trainings/log/detail/2020-03-30/code/exercise-string/index", "trainings/log/detail/2020-03-30/index", "trainings/log/detail/2020-03-30/install-googletest", "trainings/log/detail/2020-03-30/setup", "trainings/log/detail/2020-03-30/vs-code", "trainings/log/detail/2020-05-12/code/index", "trainings/log/detail/2020-05-12/index", "trainings/log/detail/2020-05-18/Livehacking", "trainings/log/detail/2020-05-18/code/index", "trainings/log/detail/2020-05-18/index", "trainings/log/detail/2020-09-07/index", "trainings/log/detail/2020-09-28/index", "trainings/log/detail/2020-10-19/Notebook", "trainings/log/detail/2020-10-19/index", "trainings/log/detail/2020-11-03/index", "trainings/log/detail/2020-11-23/index", "trainings/log/detail/2020-11-30/index", "trainings/log/detail/2021-01-13/Notebook", "trainings/log/detail/2021-01-13/index", "trainings/log/detail/2021-01-13/notebook-wrapper", "trainings/log/detail/2021-02-22/index", "trainings/log/detail/2021-03-08/index", "trainings/log/detail/2021-03-15/Notebook", "trainings/log/detail/2021-03-15/index", "trainings/log/detail/2021-03-22/Notebook", "trainings/log/detail/2021-03-22/index", "trainings/log/detail/2021-03-29/index", "trainings/log/detail/2021-04-12/Notebook", "trainings/log/detail/2021-04-12/index", "trainings/log/detail/2021-04-12/notebook-wrapper", "trainings/log/detail/2021-05-03/Notebook", "trainings/log/detail/2021-05-03/index", "trainings/log/detail/2021-05-03/notebook-wrapper", "trainings/log/detail/2021-05-25/Notebook", "trainings/log/detail/2021-05-25/index", "trainings/log/detail/2021-06-14/index", "trainings/log/detail/2021-07-12/index", "trainings/log/detail/2021-08-02/index", "trainings/log/detail/2021-08-02/notebook", "trainings/log/detail/2021-08-23/Notebook", "trainings/log/detail/2021-08-23/exercises/sap-cleaned", "trainings/log/detail/2021-08-23/index", "trainings/log/detail/2021-08-23/notebook-wrapper", "trainings/log/detail/2021-08-31/Notebook", "trainings/log/detail/2021-08-31/index", "trainings/log/detail/2021-08-31/notebook-wrapper", "trainings/log/detail/2021-11-17/Notebook", "trainings/log/detail/2021-11-17/index", "trainings/log/detail/2021-11-17/notebook-wrapper", "trainings/log/detail/2021-12-01/2021-12-01", "trainings/log/detail/2021-12-01/index", "trainings/log/detail/2021-12-01/notebook-wrapper", "trainings/log/detail/2021-12-06/index", "trainings/log/detail/2022-01-17/index", "trainings/log/detail/2022-01-17/notebook", "trainings/log/detail/2022-01-17/notebook-wrapper", "trainings/log/detail/2022-02-23/Notebook", "trainings/log/detail/2022-02-23/index", "trainings/log/detail/2022-02-23/notebook-wrapper", "trainings/log/detail/2022-03-15/Notebook", "trainings/log/detail/2022-03-15/index", "trainings/log/detail/2022-03-15/notebook-wrapper", "trainings/log/detail/2022-03-23/Notebook", "trainings/log/detail/2022-03-23/index", "trainings/log/detail/2022-03-23/notebook-wrapper", "trainings/log/detail/2022-04-05/index", "trainings/log/detail/2022-04-05/notebook", "trainings/log/detail/2022-04-05/notebook-wrapper", "trainings/log/detail/2022-04-25/index", "trainings/log/detail/2022-04-25/notebook", "trainings/log/detail/2022-04-25/notebook-wrapper", "trainings/log/detail/2022-05-02/index", "trainings/log/detail/2022-05-02/notebook", "trainings/log/detail/2022-05-02/notebook-wrapper", "trainings/log/detail/2022-05-16/index", "trainings/log/detail/2022-05-16/notebook", "trainings/log/detail/2022-05-16/notebook-wrapper", "trainings/log/detail/2022-06-14/2022-05-11", "trainings/log/detail/2022-06-14/index", "trainings/log/detail/2022-07-26/index", "trainings/log/detail/2022-10-03/index", "trainings/log/detail/2022-10-11/index", "trainings/log/detail/2022-10-24/index", "trainings/log/detail/2022-11-07/index", "trainings/log/detail/2022-11-07/notebook", "trainings/log/detail/2022-11-07/notebook-wrapper", "trainings/log/detail/2022-11-16/index", "trainings/log/detail/2022-11-16/notebook", "trainings/log/detail/2022-11-16/notebook-wrapper", "trainings/log/detail/2023-01-23/index", "trainings/log/detail/2023-02-13/index", "trainings/log/detail/2023-03-13-Python-SAP/Demo/demo-notebook", "trainings/log/detail/2023-03-13-Python-SAP/demo", "trainings/log/detail/2023-03-13-Python-SAP/index", "trainings/log/detail/2023-03-13-Python-SAP/notebook", "trainings/log/detail/2023-03-13-Python-SAP/notebook-wrapper", "trainings/log/detail/2023-03-13-Python-SAP/original-agenda", "trainings/log/detail/2023-03-13-Python-SAP/sap-dataset/index", "trainings/log/detail/2023-03-13-Python-SAP/sap-dataset/sap-dataset", "trainings/log/detail/2023-03-20--C++-embedded/index", "trainings/log/detail/2023-03-28--Python-Clean-Code/index", "trainings/log/detail/2023-04-18--C++-embedded/index", "trainings/log/detail/2023-04-24--Python-Advanced/agenda", "trainings/log/detail/2023-04-24--Python-Advanced/index", "trainings/log/detail/2023-04-24--Python-Advanced/notebook", "trainings/log/detail/2023-04-24--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-05-15--Python-Basics/agenda", "trainings/log/detail/2023-05-15--Python-Basics/index", "trainings/log/detail/2023-05-15--Python-Basics/notebook", "trainings/log/detail/2023-05-15--Python-Basics/notebook-wrapper", "trainings/log/detail/2023-05-23--Linux-Basics/agenda", "trainings/log/detail/2023-05-23--Linux-Basics/index", "trainings/log/detail/2023-06-20--Python-Basics/agenda", "trainings/log/detail/2023-06-20--Python-Basics/index", "trainings/log/detail/2023-06-20--Python-Basics/notebook", "trainings/log/detail/2023-06-20--Python-Basics/notebook-wrapper", "trainings/log/detail/2023-07-03--CMake/agenda", "trainings/log/detail/2023-07-03--CMake/index", "trainings/log/detail/2023-09-25--Python-Advanced/index", "trainings/log/detail/2023-09-25--Python-Advanced/notebook", "trainings/log/detail/2023-09-25--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-10-09--Python-Advanced/index", "trainings/log/detail/2023-10-09--Python-Advanced/notebook", "trainings/log/detail/2023-10-09--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-10-24--Python-Advanced/agenda", "trainings/log/detail/2023-10-24--Python-Advanced/index", "trainings/log/detail/2023-10-24--Python-Advanced/notebook", "trainings/log/detail/2023-10-24--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-11-22--Python-Advanced/agenda", "trainings/log/detail/2023-11-22--Python-Advanced/index", "trainings/log/detail/2023-11-22--Python-Advanced/notebook", "trainings/log/detail/2023-11-22--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-11-27--CMake/agenda", "trainings/log/detail/2023-11-27--CMake/index", "trainings/log/detail/2023-11-29--Python-Basics/agenda", "trainings/log/detail/2023-11-29--Python-Basics/index", "trainings/log/detail/2023-11-29--Python-Basics/notebook", "trainings/log/detail/2023-11-29--Python-Basics/notebook-wrapper", "trainings/log/detail/2023-12-04--C++-Advanced/agenda", "trainings/log/detail/2023-12-04--C++-Advanced/index", "trainings/log/detail/2023-12-18--Python-Basics/agenda", "trainings/log/detail/2023-12-18--Python-Basics/index", "trainings/log/detail/2023-12-18--Python-Basics/notebook", "trainings/log/detail/2023-12-18--Python-Basics/notebook-wrapper", "trainings/log/detail/2023-XX-XX-C++-embedded/index", "trainings/log/detail/2023-XX-XX-Python-SAP/index", "trainings/log/detail/2024-01-15--Python-Advanced/agenda", "trainings/log/detail/2024-01-15--Python-Advanced/index", "trainings/log/detail/2024-01-15--Python-Advanced/notebook", "trainings/log/detail/2024-01-15--Python-Advanced/notebook-wrapper", "trainings/log/detail/2024-01-29--Python-Basics/agenda", "trainings/log/detail/2024-01-29--Python-Basics/index", "trainings/log/detail/2024-01-29--Python-Basics/notebook", "trainings/log/detail/2024-01-29--Python-Basics/notebook-wrapper", "trainings/log/detail/FH-ECE-19/EC1/2021-05-12/screenplay-checker", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-abc", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-oo", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-unittest", "trainings/log/detail/FH-ECE-19/EC1/Exercises/fh-group", "trainings/log/detail/FH-ECE-19/EC1/Exercises/file-read", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/2021-05-20-G2", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/2021-05-21", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Checker-Explanations", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Datatypes", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Functions", "trainings/log/detail/FH-ECE-19/EC1/cloud-computer", "trainings/log/detail/FH-ECE-19/EC1/formales", "trainings/log/detail/FH-ECE-19/EC1/index", "trainings/log/detail/FH-ECE-19/EC1/log", "trainings/log/detail/FH-ECE-19/EC1/lv-de", "trainings/log/detail/FH-ECE-19/EC1/lv-en", "trainings/log/detail/FH-ECE-19/EC1/plan", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-07", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-12", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-28", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-11-15", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-11-29", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-12-14", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-01-10", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-01-12", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-02-15", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/index", "trainings/log/detail/FH-ECE-19/EC2/index", "trainings/log/detail/FH-ECE-19/EC2/test-material", "trainings/log/detail/FH-ECE-19/index", "trainings/log/detail/index", "trainings/log/index", "trainings/material/index", "trainings/material/soup/c/010-introduction/000-installation/topic", "trainings/material/soup/c/010-introduction/010-introduction/topic", "trainings/material/soup/c/010-introduction/020-getting-started/topic", "trainings/material/soup/c/010-introduction/030-variables-and-arithmetic-expressions/topic", "trainings/material/soup/c/010-introduction/040-exercise-fahrenheit-float/topic", "trainings/material/soup/c/010-introduction/050-the-for-statement/topic", "trainings/material/soup/c/010-introduction/060-exercise-fahrenheit-for/topic", "trainings/material/soup/c/010-introduction/070-symbolic-constants/topic", "trainings/material/soup/c/010-introduction/080-exercise-fahrenheit-cpp/topic", "trainings/material/soup/c/010-introduction/090-character-input-and-output/topic", "trainings/material/soup/c/010-introduction/100-exercise-wc/topic", "trainings/material/soup/c/010-introduction/110-arrays/topic", "trainings/material/soup/c/010-introduction/120-exercise-histogram/topic", "trainings/material/soup/c/010-introduction/130-functions/topic", "trainings/material/soup/c/010-introduction/140-exercise-power-declaration/topic", "trainings/material/soup/c/010-introduction/150-character-arrays/topic", "trainings/material/soup/c/010-introduction/160-exercise-string-read-line/topic", "trainings/material/soup/c/010-introduction/170-external-variables-and-scope/topic", "trainings/material/soup/c/010-introduction/group", "trainings/material/soup/c/020-types-operators-expressions/010-introduction/topic", "trainings/material/soup/c/020-types-operators-expressions/020-variable-names/topic", "trainings/material/soup/c/020-types-operators-expressions/030-data-types-and-sizes/topic", "trainings/material/soup/c/020-types-operators-expressions/040-constants/topic", "trainings/material/soup/c/020-types-operators-expressions/050-declarations/topic", "trainings/material/soup/c/020-types-operators-expressions/060-arithmetic-operators/topic", "trainings/material/soup/c/020-types-operators-expressions/070-relational-and-logical-operators/topic", "trainings/material/soup/c/020-types-operators-expressions/080-type-conversions/topic", "trainings/material/soup/c/020-types-operators-expressions/090-increment-and-decrement-operators/topic", "trainings/material/soup/c/020-types-operators-expressions/100-exercise-string-reduce/topic", "trainings/material/soup/c/020-types-operators-expressions/110-bitwise-operators/topic", "trainings/material/soup/c/020-types-operators-expressions/120-assignment-operators-and-expressions/topic", "trainings/material/soup/c/020-types-operators-expressions/130-conditional-expressions/topic", "trainings/material/soup/c/020-types-operators-expressions/140-precedence-and-order-of-evaluation/topic", "trainings/material/soup/c/020-types-operators-expressions/group", "trainings/material/soup/c/030-program-flow/010-statements-and-blocks/topic", "trainings/material/soup/c/030-program-flow/020-if-else/topic", "trainings/material/soup/c/030-program-flow/030-else-if/topic", "trainings/material/soup/c/030-program-flow/040-switch/topic", "trainings/material/soup/c/030-program-flow/050-loops-while-and-for/topic", "trainings/material/soup/c/030-program-flow/060-loops-do-while/topic", "trainings/material/soup/c/030-program-flow/070-break-and-continue/topic", "trainings/material/soup/c/030-program-flow/080-goto-and-labels/topic", "trainings/material/soup/c/030-program-flow/group", "trainings/material/soup/c/040-functions-and-program-structure/010-basics-of-functions/topic", "trainings/material/soup/c/040-functions-and-program-structure/020-external-variables/topic", "trainings/material/soup/c/040-functions-and-program-structure/030-header-files/topic", "trainings/material/soup/c/040-functions-and-program-structure/040-static-variables/topic", "trainings/material/soup/c/040-functions-and-program-structure/050-c-preprocessor/topic", "trainings/material/soup/c/040-functions-and-program-structure/060-c-preprocessor-advanced/topic", "trainings/material/soup/c/040-functions-and-program-structure/group", "trainings/material/soup/c/050-pointers-and-arrays/010-pointers-and-addresses/topic", "trainings/material/soup/c/050-pointers-and-arrays/020-pointers-and-function-arguments/topic", "trainings/material/soup/c/050-pointers-and-arrays/030-exercise-swap/topic", "trainings/material/soup/c/050-pointers-and-arrays/040-pointers-and-arrays/topic", "trainings/material/soup/c/050-pointers-and-arrays/050-command-line-arguments/topic", "trainings/material/soup/c/050-pointers-and-arrays/group", "trainings/material/soup/c/060-structures/010-basics-of-structures/topic", "trainings/material/soup/c/060-structures/020-structures-and-functions/topic", "trainings/material/soup/c/060-structures/030-typedef/topic", "trainings/material/soup/c/060-structures/group", "trainings/material/soup/c/070-memory/010-malloc/topic", "trainings/material/soup/c/070-memory/020-exercise-linked-list/topic", "trainings/material/soup/c/070-memory/group", "trainings/material/soup/c/080-advanced-language-features/010-volatile/topic", "trainings/material/soup/c/080-advanced-language-features/020-atomic/topic", "trainings/material/soup/c/080-advanced-language-features/030-alignment/topic", "trainings/material/soup/c/080-advanced-language-features/group", "trainings/material/soup/c/090-program-sanity/010-introduction/topic", "trainings/material/soup/c/090-program-sanity/020-integral-types/topic", "trainings/material/soup/c/090-program-sanity/030-discrete-values/topic", "trainings/material/soup/c/090-program-sanity/040-static/topic", "trainings/material/soup/c/090-program-sanity/050-const/topic", "trainings/material/soup/c/090-program-sanity/060-struct-initialization/topic", "trainings/material/soup/c/090-program-sanity/070-explicit-type-safety/topic", "trainings/material/soup/c/090-program-sanity/080-valgrind/topic", "trainings/material/soup/c/090-program-sanity/group", "trainings/material/soup/c/100-performance/010-introduction/topic", "trainings/material/soup/c/100-performance/020-computebound/topic", "trainings/material/soup/c/100-performance/030-memory/topic", "trainings/material/soup/c/100-performance/group", "trainings/material/soup/c/110-profiling/010-introduction/topic", "trainings/material/soup/c/110-profiling/020-gprof/topic", "trainings/material/soup/c/110-profiling/030-callgrind/topic", "trainings/material/soup/c/110-profiling/040-oprofile/topic", "trainings/material/soup/c/110-profiling/group", "trainings/material/soup/c/group", "trainings/material/soup/clean-code/book-messages", "trainings/material/soup/clean-code/craft-sw", "trainings/material/soup/clean-code/group", "trainings/material/soup/clean-code/intro-python/livehacking", "trainings/material/soup/cmake/basics", "trainings/material/soup/cmake/configure_file", "trainings/material/soup/cmake/cxx-and-rants", "trainings/material/soup/cmake/external-dependencies", "trainings/material/soup/cmake/group", "trainings/material/soup/cmake/installation", "trainings/material/soup/cmake/libraries", "trainings/material/soup/cmake/optional-code-approach-1", "trainings/material/soup/cmake/optional-code-approach-2", "trainings/material/soup/cmake/optional-code-problem", "trainings/material/soup/cmake/shared-libraries", "trainings/material/soup/cmake/structure", "trainings/material/soup/cmake/targets-properties", "trainings/material/soup/cmake/testing", "trainings/material/soup/cxx-code/index", "trainings/material/soup/cxx-design-patterns/abstract-factory/abstract-factory", "trainings/material/soup/cxx-design-patterns/adapter/adapter", "trainings/material/soup/cxx-design-patterns/command/command", "trainings/material/soup/cxx-design-patterns/command/socialdb", "trainings/material/soup/cxx-design-patterns/composite/composite", "trainings/material/soup/cxx-design-patterns/decorator/decorator", "trainings/material/soup/cxx-design-patterns/group", "trainings/material/soup/cxx-design-patterns/heating-screenplay/heating-screenplay", "trainings/material/soup/cxx-design-patterns/interpreter/interpreter", "trainings/material/soup/cxx-design-patterns/observer/observer", "trainings/material/soup/cxx-design-patterns/oo-principles", "trainings/material/soup/cxx-design-patterns/proxy/proxy", "trainings/material/soup/cxx-design-patterns/sensor-hierarchy", "trainings/material/soup/cxx-design-patterns/singleton/singleton", "trainings/material/soup/cxx-design-patterns/uml/uml", "trainings/material/soup/cxx-exercises/design-patterns/abstract-factory", "trainings/material/soup/cxx-exercises/design-patterns/adapter", "trainings/material/soup/cxx-exercises/design-patterns/command", "trainings/material/soup/cxx-exercises/design-patterns/composite", "trainings/material/soup/cxx-exercises/design-patterns/decorator", "trainings/material/soup/cxx-exercises/design-patterns/group", "trainings/material/soup/cxx-exercises/design-patterns/interpreter-and-adapter", "trainings/material/soup/cxx-exercises/design-patterns/interpreter-basic", "trainings/material/soup/cxx-exercises/design-patterns/observer", "trainings/material/soup/cxx-exercises/design-patterns/proxy-remote", "trainings/material/soup/cxx-exercises/design-patterns/proxy-round", "trainings/material/soup/cxx-exercises/design-patterns/singleton-flexible", "trainings/material/soup/cxx-exercises/design-patterns/singleton-flexible-strict", "trainings/material/soup/cxx-exercises/design-patterns/singleton-inflexible", "trainings/material/soup/cxx-exercises/design-patterns/solutions/abstract-factory", "trainings/material/soup/cxx-exercises/design-patterns/solutions/adapter", "trainings/material/soup/cxx-exercises/design-patterns/solutions/command", "trainings/material/soup/cxx-exercises/design-patterns/solutions/composite", "trainings/material/soup/cxx-exercises/design-patterns/solutions/decorator", "trainings/material/soup/cxx-exercises/design-patterns/solutions/group", "trainings/material/soup/cxx-exercises/design-patterns/solutions/interpreter-and-adapter", "trainings/material/soup/cxx-exercises/design-patterns/solutions/interpreter-basic", "trainings/material/soup/cxx-exercises/design-patterns/solutions/observer", "trainings/material/soup/cxx-exercises/design-patterns/solutions/proxy-remote", "trainings/material/soup/cxx-exercises/design-patterns/solutions/proxy-round", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-flexible", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-flexible-strict", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-inflexible", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-loop-function", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-no-polymorphism", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-random-sensor", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/group", "trainings/material/soup/cxx-exercises/group", "trainings/material/soup/cxx-exercises/nopoly-display-led-stripe/display-led-stripe-nopoly", "trainings/material/soup/cxx-exercises/nopoly-hysteresis/hysteresis-nopoly", "trainings/material/soup/cxx-exercises/nopoly-sensor-avg/sensor-avg-nopoly", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-const-nopoly", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-mock-nopoly", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-random-nopoly", "trainings/material/soup/cxx-exercises/nopoly-switch-mock/switch-mock-nopoly", "trainings/material/soup/cxx-exercises/oo-shapes/shapes", "trainings/material/soup/cxx-exercises/project-setup", "trainings/material/soup/cxx-exercises/sensor-interface/sensor-interface", "trainings/material/soup/cxx-exercises/sensor-w1-factory/sensor-w1-factory", "trainings/material/soup/cxx-exercises/sensor-w1/sensor-w1", "trainings/material/soup/cxx-exercises/stl/algo", "trainings/material/soup/cxx-exercises/stl/filter-generic", "trainings/material/soup/cxx-exercises/stl/filter-greater-10", "trainings/material/soup/cxx-exercises/stl/filter-odd", "trainings/material/soup/cxx-exercises/stl/group", "trainings/material/soup/cxx-exercises/stl/map", "trainings/material/soup/cxx-exercises/stl/sensor-repository/group", "trainings/material/soup/cxx-exercises/stl/sensor-repository/insert-no-overwrite", "trainings/material/soup/cxx-exercises/stl/sensor-repository/insert-sunny", "trainings/material/soup/cxx-exercises/stl/sensor-repository/lookup-not-found", "trainings/material/soup/cxx-exercises/stl/sensor-repository/lookup-sunny", "trainings/material/soup/cxx-exercises/stl/sensor-repository/no-memleak", "trainings/material/soup/cxx-exercises/stl/sensor-repository/remove-not-found", "trainings/material/soup/cxx-exercises/stl/sensor-repository/remove-sunny", "trainings/material/soup/cxx-exercises/stl/sensor-repository/size-const", "trainings/material/soup/cxx-exercises/stl/uniq", "trainings/material/soup/cxx-exercises/stl/vector", "trainings/material/soup/cxx-todo/index", "trainings/material/soup/cxx/cxx_class_templates/code/index", "trainings/material/soup/cxx/cxx_class_templates/screenplay", "trainings/material/soup/cxx/cxx_class_templates/topic", "trainings/material/soup/cxx/cxx_dynamic_memory/code/index", "trainings/material/soup/cxx/cxx_dynamic_memory/screenplay", "trainings/material/soup/cxx/cxx_dynamic_memory/topic", "trainings/material/soup/cxx/cxx_global_initialization/code/index", "trainings/material/soup/cxx/cxx_global_initialization/screenplay", "trainings/material/soup/cxx/cxx_global_initialization/topic", "trainings/material/soup/cxx/cxx_inheritance_virtual/code/index", "trainings/material/soup/cxx/cxx_inheritance_virtual/screenplay", "trainings/material/soup/cxx/cxx_inheritance_virtual/topic", "trainings/material/soup/cxx/cxx_ownership_raii/code/index", "trainings/material/soup/cxx/cxx_ownership_raii/screenplay", "trainings/material/soup/cxx/cxx_ownership_raii/topic", "trainings/material/soup/cxx/cxx_stl_container_intro/code/index", "trainings/material/soup/cxx/cxx_stl_container_intro/screenplay", "trainings/material/soup/cxx/cxx_stl_container_intro/topic", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/code/index", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/screenplay", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/topic", "trainings/material/soup/cxx/group", "trainings/material/soup/cxx03/001-introduction/topic", "trainings/material/soup/cxx03/020-data-encapsulation/c", "trainings/material/soup/cxx03/020-data-encapsulation/copy-basics", "trainings/material/soup/cxx03/020-data-encapsulation/cpp-introduction", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-custom", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-default", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-dtor", "trainings/material/soup/cxx03/020-data-encapsulation/group", "trainings/material/soup/cxx03/020-data-encapsulation/initializer-list", "trainings/material/soup/cxx03/020-data-encapsulation/object-copy", "trainings/material/soup/cxx03/030-functions-and-methods/010-overloading/topic", "trainings/material/soup/cxx03/030-functions-and-methods/020-methods/topic", "trainings/material/soup/cxx03/030-functions-and-methods/030-const/topic", "trainings/material/soup/cxx03/030-functions-and-methods/040-this/topic", "trainings/material/soup/cxx03/030-functions-and-methods/050-references/topic", "trainings/material/soup/cxx03/030-functions-and-methods/060-static/topic", "trainings/material/soup/cxx03/030-functions-and-methods/065-static-member-variables/topic", "trainings/material/soup/cxx03/030-functions-and-methods/070-operators/topic", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-cuboid", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-point", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-point3d", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-rectangle", "trainings/material/soup/cxx03/030-functions-and-methods/group", "trainings/material/soup/cxx03/040-exceptions/010-basics/topic", "trainings/material/soup/cxx03/040-exceptions/020-try-catch/topic", "trainings/material/soup/cxx03/040-exceptions/group", "trainings/material/soup/cxx03/050-templates/010-function-templates/topic", "trainings/material/soup/cxx03/050-templates/020-class-templates/topic", "trainings/material/soup/cxx03/050-templates/group", "trainings/material/soup/cxx03/060-stl/010-basics/algo-copy", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-algo", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-basics", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-difference", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-out-of-range", "trainings/material/soup/cxx03/060-stl/010-basics/topic", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/topic", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-and-copy", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-basic", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-pointer-arith", "trainings/material/soup/cxx03/060-stl/020-algorithm/binary_search", "trainings/material/soup/cxx03/060-stl/020-algorithm/copy", "trainings/material/soup/cxx03/060-stl/020-algorithm/find", "trainings/material/soup/cxx03/060-stl/020-algorithm/find_if", "trainings/material/soup/cxx03/060-stl/020-algorithm/for_each", "trainings/material/soup/cxx03/060-stl/020-algorithm/group", "trainings/material/soup/cxx03/060-stl/020-algorithm/lower_bound", "trainings/material/soup/cxx03/060-stl/020-algorithm/reverse", "trainings/material/soup/cxx03/060-stl/020-algorithm/reverse_copy", "trainings/material/soup/cxx03/060-stl/020-algorithm/sort", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/basics", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/group", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/list", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/vector", "trainings/material/soup/cxx03/060-stl/050-associative-containers/basics", "trainings/material/soup/cxx03/060-stl/050-associative-containers/group", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-init-fill", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-insert", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-remove", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-search", "trainings/material/soup/cxx03/060-stl/050-associative-containers/multimap", "trainings/material/soup/cxx03/060-stl/allocators/allocator_basics", "trainings/material/soup/cxx03/060-stl/allocators/group", "trainings/material/soup/cxx03/060-stl/exercises/group", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/exercise", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/group", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/solution", "trainings/material/soup/cxx03/060-stl/group", "trainings/material/soup/cxx03/070-dynamic-memory/000-todo/topic", "trainings/material/soup/cxx03/070-dynamic-memory/group", "trainings/material/soup/cxx03/100-inheritance-oo-design/basics", "trainings/material/soup/cxx03/100-inheritance-oo-design/destructor", "trainings/material/soup/cxx03/100-inheritance-oo-design/group", "trainings/material/soup/cxx03/100-inheritance-oo-design/interface", "trainings/material/soup/cxx03/100-inheritance-oo-design/polymorphism", "trainings/material/soup/cxx03/100-inheritance-oo-design/private-protected", "trainings/material/soup/cxx03/100-inheritance-oo-design/virtual-destructor", "trainings/material/soup/cxx03/100-inheritance-oo-design/virtual-method", "trainings/material/soup/cxx03/900-standard-library-miscellanea/group", "trainings/material/soup/cxx03/900-standard-library-miscellanea/string/topic", "trainings/material/soup/cxx03/exercises-misc/american-flag/exercise", "trainings/material/soup/cxx03/exercises-misc/fh-questions", "trainings/material/soup/cxx03/exercises-misc/group", "trainings/material/soup/cxx03/exercises-misc/sum-integers-from-stdin/exercise", "trainings/material/soup/cxx03/exercises-userdb/group", "trainings/material/soup/cxx03/exercises-userdb/user-access-methods/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-const-members/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-const/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-default-ctor/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-simple-method/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-to-cxx-ctor/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-insert/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-search-find_if/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-search-notfound-exception/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-search/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-vector/exercise", "trainings/material/soup/cxx03/group", "trainings/material/soup/cxx11/010-introduction/group", "trainings/material/soup/cxx11/010-introduction/history", "trainings/material/soup/cxx11/010-introduction/overview-livehacking", "trainings/material/soup/cxx11/020-new-language-features/010-strongly-typed-enums/topic", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/group", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/implementor-view", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/intro", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/mess", "trainings/material/soup/cxx11/020-new-language-features/050-delegating-ctor/topic", "trainings/material/soup/cxx11/020-new-language-features/055-constexpr/topic", "trainings/material/soup/cxx11/020-new-language-features/060-move/afterword", "trainings/material/soup/cxx11/020-new-language-features/060-move/group", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-smartptr-move", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-string-move", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-using-string-move", "trainings/material/soup/cxx11/020-new-language-features/060-move/overview", "trainings/material/soup/cxx11/020-new-language-features/070-miscellaneous/topic", "trainings/material/soup/cxx11/020-new-language-features/auto", "trainings/material/soup/cxx11/020-new-language-features/concepts/group", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-1-conceptless", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-2-conceptless-error", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-3-concept-integral", "trainings/material/soup/cxx11/020-new-language-features/concepts/links", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-1-good-old-func", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-2-need-template", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-4-concept-has-size", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-5-concept-index-ret-double", "trainings/material/soup/cxx11/020-new-language-features/coroutines/group", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/fibo-generator", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/fibonacci", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/generator-h", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/generator-hello", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/simplest", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend-iter", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend-next", "trainings/material/soup/cxx11/020-new-language-features/default", "trainings/material/soup/cxx11/020-new-language-features/delete", "trainings/material/soup/cxx11/020-new-language-features/final", "trainings/material/soup/cxx11/020-new-language-features/group", "trainings/material/soup/cxx11/020-new-language-features/lambda/group", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-capture", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-is-functor", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-is-functor-pitfall", "trainings/material/soup/cxx11/020-new-language-features/modules", "trainings/material/soup/cxx11/020-new-language-features/override", "trainings/material/soup/cxx11/020-new-language-features/range-based-for", "trainings/material/soup/cxx11/020-new-language-features/range-based-for-map", "trainings/material/soup/cxx11/020-new-language-features/ranges/good-bad", "trainings/material/soup/cxx11/020-new-language-features/ranges/group", "trainings/material/soup/cxx11/020-new-language-features/ranges/intro", "trainings/material/soup/cxx11/020-new-language-features/ranges/links", "trainings/material/soup/cxx11/020-new-language-features/structured-binding", "trainings/material/soup/cxx11/030-smart-pointers/040-closing-words/topic", "trainings/material/soup/cxx11/030-smart-pointers/group", "trainings/material/soup/cxx11/030-smart-pointers/introduction", "trainings/material/soup/cxx11/030-smart-pointers/introduction-livehack", "trainings/material/soup/cxx11/030-smart-pointers/sharedptr", "trainings/material/soup/cxx11/030-smart-pointers/uniqueptr", "trainings/material/soup/cxx11/030-smart-pointers/weakptr", "trainings/material/soup/cxx11/035-perfect-forwarding/topic", "trainings/material/soup/cxx11/040-bind-function/010-bind/topic", "trainings/material/soup/cxx11/040-bind-function/020-function/topic", "trainings/material/soup/cxx11/040-bind-function/group", "trainings/material/soup/cxx11/050-multithreading/010-introduction/topic", "trainings/material/soup/cxx11/050-multithreading/020-thread/topic", "trainings/material/soup/cxx11/050-multithreading/030-race-conditions/topic", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/atomics", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/mutex", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/scoped-locking", "trainings/material/soup/cxx11/050-multithreading/condition-variable", "trainings/material/soup/cxx11/050-multithreading/group", "trainings/material/soup/cxx11/050-multithreading/promise-future", "trainings/material/soup/cxx11/100-miscellaneous/010-chrono/topic", "trainings/material/soup/cxx11/100-miscellaneous/any-variant-optional/variant", "trainings/material/soup/cxx11/100-miscellaneous/group", "trainings/material/soup/cxx11/drafts/crtp", "trainings/material/soup/cxx11/drafts/embedded-problems/allocator", "trainings/material/soup/cxx11/drafts/embedded-problems/classic-virtual", "trainings/material/soup/cxx11/drafts/embedded-problems/group", "trainings/material/soup/cxx11/drafts/embedded-problems/related-no-virtual", "trainings/material/soup/cxx11/drafts/embedded-problems/type-erasure", "trainings/material/soup/cxx11/drafts/embedded-problems/unrelated", "trainings/material/soup/cxx11/drafts/embedded-problems/variant-automatic-visit", "trainings/material/soup/cxx11/drafts/embedded-problems/variant-manual-if", "trainings/material/soup/cxx11/drafts/embedded-problems/variant-manual-visit", "trainings/material/soup/cxx11/drafts/embedded-problems/why-replace-virtual", "trainings/material/soup/cxx11/drafts/group", "trainings/material/soup/cxx11/exercises/bag-copy", "trainings/material/soup/cxx11/exercises/bag-shared", "trainings/material/soup/cxx11/exercises/bag-unique", "trainings/material/soup/cxx11/exercises/group", "trainings/material/soup/cxx11/filesystem/topic", "trainings/material/soup/cxx11/group", "trainings/material/soup/graph", "trainings/material/soup/index", "trainings/material/soup/kernel/cdev-auto/screenplay", "trainings/material/soup/kernel/cdev-auto/slides", "trainings/material/soup/kernel/cdev-auto/topic", "trainings/material/soup/kernel/cdev-file-operations/screenplay", "trainings/material/soup/kernel/cdev-file-operations/slides", "trainings/material/soup/kernel/cdev-file-operations/topic", "trainings/material/soup/kernel/cdev-first-functionality/slides", "trainings/material/soup/kernel/cdev-first-functionality/topic", "trainings/material/soup/kernel/cdev-manual/screenplay", "trainings/material/soup/kernel/cdev-manual/slides", "trainings/material/soup/kernel/cdev-manual/topic", "trainings/material/soup/kernel/cdev-multiple-devices/slides", "trainings/material/soup/kernel/cdev-multiple-devices/topic", "trainings/material/soup/kernel/cdev-refactoring/screenplay", "trainings/material/soup/kernel/cdev-refactoring/slides", "trainings/material/soup/kernel/cdev-refactoring/topic", "trainings/material/soup/kernel/dma/slides", "trainings/material/soup/kernel/dma/topic", "trainings/material/soup/kernel/fedora-kernel-build/screenplay", "trainings/material/soup/kernel/fedora-kernel-build/topic", "trainings/material/soup/kernel/fedora-module-build/screenplay", "trainings/material/soup/kernel/fedora-module-build/topic", "trainings/material/soup/kernel/group", "trainings/material/soup/kernel/hello-world/slides", "trainings/material/soup/kernel/hello-world/topic", "trainings/material/soup/kernel/interrupt-coding/slides", "trainings/material/soup/kernel/interrupt-coding/topic", "trainings/material/soup/kernel/interrupt/slides", "trainings/material/soup/kernel/interrupt/topic", "trainings/material/soup/kernel/iomemory/slides", "trainings/material/soup/kernel/iomemory/topic", "trainings/material/soup/kernel/kmalloc/slides", "trainings/material/soup/kernel/kmalloc/topic", "trainings/material/soup/kernel/list/slides", "trainings/material/soup/kernel/list/topic", "trainings/material/soup/kernel/mutex-coding/slides", "trainings/material/soup/kernel/mutex-coding/topic", "trainings/material/soup/kernel/mutex/slides", "trainings/material/soup/kernel/mutex/topic", "trainings/material/soup/kernel/netdev/slides", "trainings/material/soup/kernel/netdev/topic", "trainings/material/soup/kernel/pci/slides", "trainings/material/soup/kernel/pci/topic", "trainings/material/soup/kernel/process-vs-atomic/slides", "trainings/material/soup/kernel/process-vs-atomic/topic", "trainings/material/soup/kernel/raspi-kernel-build/story", "trainings/material/soup/kernel/raspi-kernel-build/topic", "trainings/material/soup/kernel/sample-project", "trainings/material/soup/kernel/spinlock-coding/slides", "trainings/material/soup/kernel/spinlock-coding/topic", "trainings/material/soup/kernel/spinlock/slides", "trainings/material/soup/kernel/spinlock/topic", "trainings/material/soup/kernel/stub-sysprog-dup/topic", "trainings/material/soup/kernel/time_timer-coding/slides", "trainings/material/soup/kernel/time_timer-coding/topic", "trainings/material/soup/kernel/time_timer/slides", "trainings/material/soup/kernel/time_timer/topic", "trainings/material/soup/kernel/todo", "trainings/material/soup/kernel/usermem/screenplay", "trainings/material/soup/kernel/usermem/slides", "trainings/material/soup/kernel/usermem/topic", "trainings/material/soup/kernel/waitqueue/screenplay", "trainings/material/soup/kernel/waitqueue/slides", "trainings/material/soup/kernel/waitqueue/topic", "trainings/material/soup/kernel/workqueue/screenplay", "trainings/material/soup/kernel/workqueue/slides", "trainings/material/soup/kernel/workqueue/topic", "trainings/material/soup/linux/basics/archiving-compression/exercises", "trainings/material/soup/linux/basics/archiving-compression/group", "trainings/material/soup/linux/basics/archiving-compression/gzip", "trainings/material/soup/linux/basics/archiving-compression/overview", "trainings/material/soup/linux/basics/archiving-compression/tar", "trainings/material/soup/linux/basics/exercises/FH-SS2022-EXAM-01-G1", "trainings/material/soup/linux/basics/exercises/FH-SS2022-EXAM-01-G2", "trainings/material/soup/linux/basics/exercises/group", "trainings/material/soup/linux/basics/group", "trainings/material/soup/linux/basics/intro/demo-everything-is-a-file", "trainings/material/soup/linux/basics/intro/environment", "trainings/material/soup/linux/basics/intro/exercises/fh-questions", "trainings/material/soup/linux/basics/intro/group", "trainings/material/soup/linux/basics/intro/login", "trainings/material/soup/linux/basics/intro/overview", "trainings/material/soup/linux/basics/intro/process", "trainings/material/soup/linux/basics/intro/process-tree", "trainings/material/soup/linux/basics/intro/wsl", "trainings/material/soup/linux/basics/io-redirection-pipes/exercises", "trainings/material/soup/linux/basics/io-redirection-pipes/group", "trainings/material/soup/linux/basics/io-redirection-pipes/io-redirection", "trainings/material/soup/linux/basics/io-redirection-pipes/io-redirection-swap-stdout-stderr", "trainings/material/soup/linux/basics/io-redirection-pipes/pipes", "trainings/material/soup/linux/basics/permissions/basics", "trainings/material/soup/linux/basics/permissions/exercises/credentials", "trainings/material/soup/linux/basics/permissions/exercises/fh-questions", "trainings/material/soup/linux/basics/permissions/exercises/fh-questions-nocheat", "trainings/material/soup/linux/basics/permissions/exercises/group", "trainings/material/soup/linux/basics/permissions/exercises/private-directory", "trainings/material/soup/linux/basics/permissions/exercises/private-directory-question", "trainings/material/soup/linux/basics/permissions/exercises/public-directory", "trainings/material/soup/linux/basics/permissions/exercises/public-directory-question", "trainings/material/soup/linux/basics/permissions/exercises/shared-file", "trainings/material/soup/linux/basics/permissions/group", "trainings/material/soup/linux/basics/permissions/setuid", "trainings/material/soup/linux/basics/permissions/setuid-livedemo", "trainings/material/soup/linux/basics/permissions/sticky", "trainings/material/soup/linux/basics/permissions/umask", "trainings/material/soup/linux/basics/shell/commandline", "trainings/material/soup/linux/basics/shell/configfiles", "trainings/material/soup/linux/basics/shell/cp", "trainings/material/soup/linux/basics/shell/cwd", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/copy-tree", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-copy-files", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-create-files", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-move-files", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/group", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/mkdir-p-rm-r", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/rm-rf", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/rm-tree", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/verify-hierarchy", "trainings/material/soup/linux/basics/shell/exercises/fh-questions", "trainings/material/soup/linux/basics/shell/exercises/group", "trainings/material/soup/linux/basics/shell/exercises/ls/dev-types", "trainings/material/soup/linux/basics/shell/exercises/ls/etc-passwd-size", "trainings/material/soup/linux/basics/shell/exercises/ls/group", "trainings/material/soup/linux/basics/shell/exercises/ls/home-permissions", "trainings/material/soup/linux/basics/shell/file_dir_create_rm", "trainings/material/soup/linux/basics/shell/group", "trainings/material/soup/linux/basics/shell/links", "trainings/material/soup/linux/basics/shell/ls", "trainings/material/soup/linux/basics/shell/mv", "trainings/material/soup/linux/basics/shell/paths", "trainings/material/soup/linux/basics/text-tools/cat", "trainings/material/soup/linux/basics/text-tools/cut", "trainings/material/soup/linux/basics/text-tools/exercises", "trainings/material/soup/linux/basics/text-tools/find", "trainings/material/soup/linux/basics/text-tools/grep", "trainings/material/soup/linux/basics/text-tools/group", "trainings/material/soup/linux/basics/text-tools/head-tail", "trainings/material/soup/linux/basics/text-tools/less", "trainings/material/soup/linux/basics/text-tools/overview", "trainings/material/soup/linux/drafts/group", "trainings/material/soup/linux/drafts/yocto", "trainings/material/soup/linux/group", "trainings/material/soup/linux/hardware/brushless-motor/topic", "trainings/material/soup/linux/hardware/can/10-intro", "trainings/material/soup/linux/hardware/can/20-interfaces", "trainings/material/soup/linux/hardware/can/30-programming", "trainings/material/soup/linux/hardware/can/40-harware", "trainings/material/soup/linux/hardware/can/group", "trainings/material/soup/linux/hardware/group", "trainings/material/soup/linux/hardware/i2c/topic", "trainings/material/soup/linux/hardware/pwm/topic", "trainings/material/soup/linux/hardware/w1/topic", "trainings/material/soup/linux/ssh/basics", "trainings/material/soup/linux/ssh/exercises/copy-file", "trainings/material/soup/linux/ssh/exercises/copy-tree", "trainings/material/soup/linux/ssh/exercises/group", "trainings/material/soup/linux/ssh/exercises/pubkey", "trainings/material/soup/linux/ssh/group", "trainings/material/soup/linux/ssh/key-pair", "trainings/material/soup/linux/ssh/links", "trainings/material/soup/linux/ssh/portforwarding", "trainings/material/soup/linux/ssh/scp", "trainings/material/soup/linux/ssh/sshfs", "trainings/material/soup/linux/sysprog/basics/errorhandling", "trainings/material/soup/linux/sysprog/basics/group", "trainings/material/soup/linux/sysprog/basics/syscalls", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-file", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-network", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-timer", "trainings/material/soup/linux/sysprog/blocking-io/group", "trainings/material/soup/linux/sysprog/file-io/basics", "trainings/material/soup/linux/sysprog/file-io/basics-exercise-copy", "trainings/material/soup/linux/sysprog/file-io/basics-exercise-hole", "trainings/material/soup/linux/sysprog/file-io/duplicate", "trainings/material/soup/linux/sysprog/file-io/example-O_CREAT", "trainings/material/soup/linux/sysprog/file-io/example-O_EXCL", "trainings/material/soup/linux/sysprog/file-io/example-O_RDONLY", "trainings/material/soup/linux/sysprog/file-io/example-O_WRONLY", "trainings/material/soup/linux/sysprog/file-io/exercise-sensor-read", "trainings/material/soup/linux/sysprog/file-io/group", "trainings/material/soup/linux/sysprog/file-io/misc", "trainings/material/soup/linux/sysprog/group", "trainings/material/soup/linux/sysprog/intro-hw/get", "trainings/material/soup/linux/sysprog/intro-hw/group", "trainings/material/soup/linux/sysprog/intro-hw/sysfs-gpio", "trainings/material/soup/linux/sysprog/intro-hw/watch", "trainings/material/soup/linux/sysprog/posix-threads/010-introduction/topic", "trainings/material/soup/linux/sysprog/posix-threads/020-lifecycle/topic", "trainings/material/soup/linux/sysprog/posix-threads/030-exercise-pthcreate-race-condition/topic", "trainings/material/soup/linux/sysprog/posix-threads/040-mutex/topic", "trainings/material/soup/linux/sysprog/posix-threads/050-exercise-mutex/topic", "trainings/material/soup/linux/sysprog/posix-threads/060-condition-variable/topic", "trainings/material/soup/linux/sysprog/posix-threads/070-exercise-condition-variable/topic", "trainings/material/soup/linux/sysprog/posix-threads/080-miscellaneous/topic", "trainings/material/soup/linux/sysprog/posix-threads/090-last-warning/topic", "trainings/material/soup/linux/sysprog/posix-threads/group", "trainings/material/soup/linux/sysprog/posix-threads/locked-trylock", "trainings/material/soup/linux/sysprog/process/commandline", "trainings/material/soup/linux/sysprog/process/group", "trainings/material/soup/linux/sysprog/process/tree", "trainings/material/soup/linux/sysprog/scheduling/basics", "trainings/material/soup/linux/sysprog/scheduling/group", "trainings/material/soup/linux/sysprog/scheduling/processes-and-threads", "trainings/material/soup/linux/sysprog/scheduling/questions", "trainings/material/soup/linux/sysprog/scheduling/realtime", "trainings/material/soup/linux/sysprog/scheduling/realtime-api", "trainings/material/soup/linux/sysprog/scheduling/wakup-latency", "trainings/material/soup/linux/sysprog/sysprog_events/code/index", "trainings/material/soup/linux/sysprog/sysprog_events/screenplay", "trainings/material/soup/linux/sysprog/sysprog_events/topic", "trainings/material/soup/linux/sysprog/sysprog_ipc/code/index", "trainings/material/soup/linux/sysprog/sysprog_ipc/screenplay", "trainings/material/soup/linux/sysprog/sysprog_ipc/slides", "trainings/material/soup/linux/sysprog/sysprog_ipc/topic", "trainings/material/soup/linux/sysprog/sysprog_signals/code/index", "trainings/material/soup/linux/sysprog/sysprog_signals/screenplay", "trainings/material/soup/linux/sysprog/sysprog_signals/slides", "trainings/material/soup/linux/sysprog/sysprog_signals/topic", "trainings/material/soup/linux/toolchain/basics/topic", "trainings/material/soup/linux/toolchain/cmake/cross", "trainings/material/soup/linux/toolchain/cmake/local", "trainings/material/soup/linux/toolchain/cross/basics", "trainings/material/soup/linux/toolchain/cross/group", "trainings/material/soup/linux/toolchain/exercises/cross-build", "trainings/material/soup/linux/toolchain/exercises/fh-2022-questions", "trainings/material/soup/linux/toolchain/exercises/group", "trainings/material/soup/linux/toolchain/exercises/native-build", "trainings/material/soup/linux/toolchain/exercises/raspberry-toolchain", "trainings/material/soup/linux/toolchain/group", "trainings/material/soup/linux/toolchain/raspberry-pi/group", "trainings/material/soup/linux/toolchain/raspberry-pi/linaro", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-build-details", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-build-docker-fedora", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-setup", "trainings/material/soup/linux/toolchain/separate-compilation/topic", "trainings/material/soup/linux/toolchain/shared-libraries/topic", "trainings/material/soup/linux/toolchain/static-library/topic", "trainings/material/soup/python/advanced/closures/topic", "trainings/material/soup/python/advanced/comprehensions/topic", "trainings/material/soup/python/advanced/context-mgr/topic", "trainings/material/soup/python/advanced/decorators/topic", "trainings/material/soup/python/advanced/exceptions/topic", "trainings/material/soup/python/advanced/exec/topic", "trainings/material/soup/python/advanced/group", "trainings/material/soup/python/advanced/iteration-generation/iteration-generation/topic", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/fibonacci-generator", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/iterator-protocol", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/topic", "trainings/material/soup/python/advanced/iteration-generation/topic", "trainings/material/soup/python/advanced/modules", "trainings/material/soup/python/advanced/multithreading/basics", "trainings/material/soup/python/advanced/multithreading/group", "trainings/material/soup/python/advanced/multithreading/mutex", "trainings/material/soup/python/advanced/multithreading/questions", "trainings/material/soup/python/advanced/oo/abc/topic", "trainings/material/soup/python/advanced/oo/classes-and-dicts/topic", "trainings/material/soup/python/advanced/oo/constructor/topic", "trainings/material/soup/python/advanced/oo/group", "trainings/material/soup/python/advanced/oo/inheritance/topic", "trainings/material/soup/python/advanced/oo/methods/topic", "trainings/material/soup/python/advanced/oo/namedtuple/topic", "trainings/material/soup/python/advanced/oo/operator-overloading/topic", "trainings/material/soup/python/advanced/oo/properties/topic", "trainings/material/soup/python/advanced/oo/str-repr/topic", "trainings/material/soup/python/advanced/starargs/topic", "trainings/material/soup/python/basics/group", "trainings/material/soup/python/basics/installation", "trainings/material/soup/python/basics/python_0110_blahblah/topic", "trainings/material/soup/python/basics/python_0120_helloworld/topic", "trainings/material/soup/python/basics/python_0125_running/topic", "trainings/material/soup/python/basics/python_0130_syntax_etc/topic", "trainings/material/soup/python/basics/python_0139_commandline_argv/topic", "trainings/material/soup/python/basics/python_0140_variables/topic", "trainings/material/soup/python/basics/python_0150_datatypes_overview/topic", "trainings/material/soup/python/basics/python_0150_datatypes_overview_compound/topic", "trainings/material/soup/python/basics/python_0160_boolean/topic", "trainings/material/soup/python/basics/python_0170_if/topic", "trainings/material/soup/python/basics/python_0193_while/topic", "trainings/material/soup/python/basics/python_0200_sequential_types/topic", "trainings/material/soup/python/basics/python_0210_indexing_slicing/topic", "trainings/material/soup/python/basics/python_0220_for/topic", "trainings/material/soup/python/basics/python_0225_range/topic", "trainings/material/soup/python/basics/python_0250_refs_flat_deep_copy/topic", "trainings/material/soup/python/basics/python_0270_functions/screenplay-scoping", "trainings/material/soup/python/basics/python_0270_functions/slideshow", "trainings/material/soup/python/basics/python_0270_functions/topic", "trainings/material/soup/python/basics/python_0300_strings/topic", "trainings/material/soup/python/basics/python_0310_strings_formatting/topic", "trainings/material/soup/python/basics/python_0320_strings_methods/topic", "trainings/material/soup/python/basics/python_0400_lists/topic", "trainings/material/soup/python/basics/python_0450_dictionaries/topic", "trainings/material/soup/python/basics/python_0460_sets/topic", "trainings/material/soup/python/basics/python_0500_files/topic", "trainings/material/soup/python/basics/python_1000_function_objects/topic", "trainings/material/soup/python/drafts/argparse/topic", "trainings/material/soup/python/drafts/group", "trainings/material/soup/python/drafts/matplotlib/topic", "trainings/material/soup/python/drafts/setuptools/topic", "trainings/material/soup/python/exercises/csv/csv-db", "trainings/material/soup/python/exercises/csv/csv-module", "trainings/material/soup/python/exercises/csv/group", "trainings/material/soup/python/exercises/group", "trainings/material/soup/python/exercises/herdt/boolean", "trainings/material/soup/python/exercises/herdt/exercise_while_even_numbers", "trainings/material/soup/python/exercises/herdt/greet", "trainings/material/soup/python/exercises/herdt/group", "trainings/material/soup/python/exercises/herdt/max_numbers", "trainings/material/soup/python/exercises/herdt/swap", "trainings/material/soup/python/exercises/herdt/username_password", "trainings/material/soup/python/exercises/legacy/cmdline_digit", "trainings/material/soup/python/exercises/legacy/dict_keyerror", "trainings/material/soup/python/exercises/legacy/distill", "trainings/material/soup/python/exercises/legacy/fibonacci-generator", "trainings/material/soup/python/exercises/legacy/for_primeness", "trainings/material/soup/python/exercises/legacy/group", "trainings/material/soup/python/exercises/legacy/join_function", "trainings/material/soup/python/exercises/legacy/max_numbers", "trainings/material/soup/python/exercises/legacy/max_numbers_function", "trainings/material/soup/python/exercises/legacy/mixed_list_executable", "trainings/material/soup/python/exercises/legacy/mixed_list_interactive", "trainings/material/soup/python/exercises/legacy/passwd", "trainings/material/soup/python/exercises/legacy/primeness_function", "trainings/material/soup/python/exercises/legacy/revert", "trainings/material/soup/python/exercises/legacy/string-rightjustify", "trainings/material/soup/python/exercises/legacy/uniq_function", "trainings/material/soup/python/exercises/legacy/uniq_generator", "trainings/material/soup/python/exercises/legacy/wc", "trainings/material/soup/python/exercises/legacy/while_primeness", "trainings/material/soup/python/exercises/sensors/group", "trainings/material/soup/python/exercises/sensors/project-setup", "trainings/material/soup/python/exercises/sensors/sensor-const", "trainings/material/soup/python/exercises/userdb/csvdictreader", "trainings/material/soup/python/exercises/userdb/csvdictreader-function", "trainings/material/soup/python/exercises/userdb/csvreader", "trainings/material/soup/python/exercises/userdb/csvreader-function", "trainings/material/soup/python/exercises/userdb/group", "trainings/material/soup/python/exercises/userdb/mqtt-publish-csv", "trainings/material/soup/python/exercises/userdb/user-class-person", "trainings/material/soup/python/exercises/userdb/user_json", "trainings/material/soup/python/exercises/userdb/userdb_csv", "trainings/material/soup/python/graph", "trainings/material/soup/python/group", "trainings/material/soup/python/link-collection", "trainings/material/soup/python/misc/ai/group", "trainings/material/soup/python/misc/ai/k-means", "trainings/material/soup/python/misc/ai/linear-regression/code", "trainings/material/soup/python/misc/ai/linear-regression/history_data", "trainings/material/soup/python/misc/ai/linear-regression/linear_regression", "trainings/material/soup/python/misc/ai/linear-regression/topic", "trainings/material/soup/python/misc/ai/machine-learning-intro", "trainings/material/soup/python/misc/csv/topic", "trainings/material/soup/python/misc/db/dbapi2", "trainings/material/soup/python/misc/db/group", "trainings/material/soup/python/misc/db/postgres", "trainings/material/soup/python/misc/db/sqlite3", "trainings/material/soup/python/misc/encoding/topic", "trainings/material/soup/python/misc/group", "trainings/material/soup/python/misc/import", "trainings/material/soup/python/misc/mqtt/topic", "trainings/material/soup/python/misc/pandas/add_row", "trainings/material/soup/python/misc/pandas/basics", "trainings/material/soup/python/misc/pandas/filters", "trainings/material/soup/python/misc/pandas/group", "trainings/material/soup/python/misc/pandas/iloc", "trainings/material/soup/python/misc/pandas/indexes", "trainings/material/soup/python/misc/pandas/loc", "trainings/material/soup/python/misc/pandas/mod_col", "trainings/material/soup/python/misc/python_5550_xml_etree/topic", "trainings/material/soup/python/misc/vscode", "trainings/material/soup/python/swdev/group", "trainings/material/soup/python/swdev/pip/screenplay", "trainings/material/soup/python/swdev/pip/slides", "trainings/material/soup/python/swdev/pip/topic", "trainings/material/soup/python/swdev/pypi", "trainings/material/soup/python/swdev/pytest/group", "trainings/material/soup/python/swdev/pytest/intro", "trainings/material/soup/python/swdev/unittest", "trainings/material/soup/python/swdev/venv/screenplay", "trainings/material/soup/python/swdev/venv/slides", "trainings/material/soup/python/swdev/venv/topic", "trainings/material/soup/unittest/group", "trainings/material/soup/unittest/unittest_gtest_basics/code/index", "trainings/material/soup/unittest/unittest_gtest_basics/screenplay", "trainings/material/soup/unittest/unittest_gtest_basics/topic", "trainings/material/soup/unittest/unittest_gtest_cmake/screenplay", "trainings/material/soup/unittest/unittest_gtest_cmake/topic", "trainings/material/soup/unittest/unittest_gtest_fixture/code/index", "trainings/material/soup/unittest/unittest_gtest_fixture/screenplay", "trainings/material/soup/unittest/unittest_gtest_fixture/topic", "trainings/org", "trainings/repertoire/_hidden/kettner-lfs-2013-09-16", "trainings/repertoire/bash", "trainings/repertoire/c-like/c", "trainings/repertoire/c-like/c-advanced", "trainings/repertoire/c-like/cxx", "trainings/repertoire/c-like/cxx11", "trainings/repertoire/c-like/index", "trainings/repertoire/cmake", "trainings/repertoire/design-patterns/design-patterns", "trainings/repertoire/embedded", "trainings/repertoire/kernel-programming-basics", "trainings/repertoire/linux-basics", "trainings/repertoire/make", "trainings/repertoire/python/advanced", "trainings/repertoire/python/basics", "trainings/repertoire/python/herdt", "trainings/repertoire/raspi-hands-on", "trainings/repertoire/svn", "trainings/repertoire/sysprog/basics", "trainings/repertoire/sysprog/fortgeschrittenes", "trainings/repertoire/sysprog/index", "trainings/repertoire/sysprog/multithreading", "trainings/repertoire/sysprog/network", "trainings/repertoire/unittests"], "filenames": ["about/myself/contact.rst", "about/myself/cv-de.rst", "about/myself/index.rst", "about/myself/projects-de.rst", "about/myself/skills-de.rst", "about/site/courses/angebot-2023-10-12.rst", "about/site/courses/index.rst", "about/site/courses/samples/detail/2021-04-12/Notebook.ipynb", "about/site/courses/samples/detail/2021-04-12/index.rst", "about/site/courses/samples/detail/2021-04-12/notebook-wrapper.rst", "about/site/courses/samples/detail/index.rst", "about/site/courses/samples/index.rst", "about/site/courses/templates.rst", "about/site/index.rst", "about/site/opentraining/index.rst", "about/site/opentraining/misc/draft-topics/index.rst", "about/site/opentraining/misc/index.rst", "about/site/opentraining/misc/s5/index.rst", "about/site/opentraining/misc/s5/tests/index.rst", "about/site/opentraining/misc/s5/tests/test-slides.rst", "about/site/opentraining/misc/screencast.rst", "about/site/opentraining/misc/topics-to-write.rst", "about/site/opentraining/netidee/index.rst", "about/site/opentraining/netidee/netidee-antrag.rst", "about/site/opentraining/netidee/netidee-video-2min.rst", "about/site/opentraining/usecases/agenda-subtract-known.rst", "about/site/opentraining/usecases/duration.rst", "about/site/opentraining/usecases/index.rst", "about/site/opentraining/usecases/linking.rst", "about/site/opentraining/usecases/menu.rst", "about/site/opentraining/usecases/slides.rst", "about/site/recipes/camera-ssh.rst", "about/site/recipes/emoji.rst", "about/site/recipes/index.rst", "about/site/recipes/isoamsa.rst", "about/site/recipes/isoamsr.rst", "about/site/recipes/isonum.rst", "about/site/recipes/layout-test.rst", "about/site/recipes/mathml.rst", "about/site/recipes/rst-cheatsheet.rst", "about/site/recipes/sphinxish.rst", "about/site/work-in-progress/2022-04-13/index.rst", "about/site/work-in-progress/2022-04-13/seminar/block-before-googletest.rst", "about/site/work-in-progress/2022-04-13/seminar/clean-code-craftsmanship.rst", "about/site/work-in-progress/2022-04-13/seminar/enter-googletest.rst", "about/site/work-in-progress/2022-04-13/seminar/index.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/find-error.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/group.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/overwrite-existing-files.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/overwrite-store-content-on-read.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/csv.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/group.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/other-indexes.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/group.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/backingstore-interface.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/backingstore-monolithic.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/group.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/pass-store-in-ctor.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/store-enum-switch.rst", "about/site/work-in-progress/blink/glt-2023.rst", "about/site/work-in-progress/blink/glt-2024.rst", "about/site/work-in-progress/blink/index.rst", "about/site/work-in-progress/blink/installation.rst", "about/site/work-in-progress/blink/pycon-2023.rst", "about/site/work-in-progress/blink/screenplay.rst", "about/site/work-in-progress/blog-queue/hochkoenig/index.rst", "about/site/work-in-progress/blog-queue/index.rst", "about/site/work-in-progress/blog-queue/sphinx.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx_build.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx_iface.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx_oo_basics.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx_unittest.rst", "about/site/work-in-progress/fh-joanneum/2019/ec.rst", "about/site/work-in-progress/fh-joanneum/2019/embedded-computing-1.rst", "about/site/work-in-progress/fh-joanneum/2019/embedded-computing-2.rst", "about/site/work-in-progress/fh-joanneum/2019/exercise_mt_race.rst", "about/site/work-in-progress/fh-joanneum/2019/exercise_mt_race_fixed.rst", "about/site/work-in-progress/fh-joanneum/2019/git.rst", "about/site/work-in-progress/fh-joanneum/2019/index.rst", "about/site/work-in-progress/fh-joanneum/2019/linux.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_basics.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_dev_mgmt.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_avg_sensor.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_avg_sensor_parallel.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_led_display.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_sensors.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_gpio.rst", "about/site/work-in-progress/fh-joanneum/2019/mt.rst", "about/site/work-in-progress/fh-joanneum/2019/mt_lock.rst", "about/site/work-in-progress/fh-joanneum/2019/mt_wait.rst", "about/site/work-in-progress/fh-joanneum/2019/py_basics.rst", "about/site/work-in-progress/fh-joanneum/2019/py_exercise_avg_display.rst", "about/site/work-in-progress/fh-joanneum/2019/py_exercise_sensors.rst", "about/site/work-in-progress/fh-joanneum/2019/py_web.rst", "about/site/work-in-progress/fh-joanneum/2019/py_web_sensors.rst", "about/site/work-in-progress/fh-joanneum/2019/python.rst", "about/site/work-in-progress/fh-joanneum/2020/index.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-08.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-10.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-10-homework.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-21.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-22,24.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-28.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-04-01.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/index.rst", "about/site/work-in-progress/fh-joanneum/2020/ws2022.rst", "about/site/work-in-progress/fh-joanneum/2020/ws2022-questions-code-general.rst", "about/site/work-in-progress/fh-joanneum/2020/ws2022-questions-yesno.rst", "about/site/work-in-progress/fh-joanneum/2020/ws2022/lab-exam-2023-01-17.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2023-06-30.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2023-06-30-solved.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/exam-2024-01-26.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/exam-2024-02-02-sample.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/index.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/index.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/q-const.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/q-param-passing.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/q-solid--hysteresis-with-display.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/q-solid--sensor-with-id.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/q-virtual-method.rst", "about/site/work-in-progress/fh-joanneum/2021/git/git.rst", "about/site/work-in-progress/fh-joanneum/2021/index.rst", "about/site/work-in-progress/fh-joanneum/2021/ss2023.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot-basic-integration.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot-display.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot-full-integration.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger-csv-sink.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger-integration.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger-mqtt-sink.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/display-infrastructure.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/group.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/libgpiod-switch.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/mqtt-tkinter.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/pwm-display.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/sensor-interface.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/sensor-w1.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/switch-interface.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/sysfs-gpio-switch.rst", "about/site/work-in-progress/fh-joanneum/2021/ws2023-2024.rst", "about/site/work-in-progress/fh-joanneum/index.rst", "about/site/work-in-progress/git.rst", "about/site/work-in-progress/index.rst", "about/site/work-in-progress/packaging/index.rst", "about/site/work-in-progress/project-xxx/audio-chip.rst", "about/site/work-in-progress/project-xxx/debian-config.rst", "about/site/work-in-progress/project-xxx/debian-kernel-package.rst", "about/site/work-in-progress/project-xxx/hardware-bringup.rst", "about/site/work-in-progress/project-xxx/index.rst", "about/site/work-in-progress/project-xxx/kernel-upgrade-dirty.rst", "about/site/work-in-progress/project-xxx/wait-hardware.rst", "about/site/work-in-progress/project-xxx/yocto-kernel.rst", "about/site/work-in-progress/python-training.rst", "about/site/work-in-progress/screencast.rst", "about/site/work-in-progress/seo.rst", "about/site/work-in-progress/stacks.rst", "about/site/work-in-progress/todo-misc.rst", "about/site/work-in-progress/web.rst", "blog/2010/07/beagleboard-how-to-repair-nand-also-known-as-40w.rst", "blog/2011/01/porting-to-linux-there-s-always-a-better-way.rst", "blog/2011/01/saving-solid-state-disk-life--gentoo.rst", "blog/2012/04/Why-ps-sucks.rst", "blog/2020/02/fedora-kernel-build.rst", "blog/2020/03/custom-domain-gh-pages.rst", "blog/2020/03/ms-teams-on-linux.rst", "blog/2020/03/sphinx-gh-pages.rst", "blog/2020/04/bbb.rst", "blog/2020/09/traunstein.rst", "blog/2021/08/grintovec.rst", "blog/2021/09/xps13-shim-mok-brick/index.rst", "blog/2022/09/cross-raspi.rst", "blog/index.rst", "index.rst", "trainings/codex.rst", "trainings/exercises.rst", "trainings/index.rst", "trainings/log/detail/2013-10-01/index.rst", "trainings/log/detail/2015-11-30/index.rst", "trainings/log/detail/2019-10-28/LiveHacking.ipynb", "trainings/log/detail/2019-10-28/index.rst", "trainings/log/detail/2019-11-12/code/BigPlan.ipynb", "trainings/log/detail/2019-11-12/code/LiveHacking.ipynb", "trainings/log/detail/2019-11-12/index.rst", "trainings/log/detail/2020-01-10/Proposal.rst", "trainings/log/detail/2020-01-10/index.rst", "trainings/log/detail/2020-03-30/code/exercise-string/index.rst", "trainings/log/detail/2020-03-30/index.rst", "trainings/log/detail/2020-03-30/install-googletest.rst", "trainings/log/detail/2020-03-30/setup.rst", "trainings/log/detail/2020-03-30/vs-code.rst", "trainings/log/detail/2020-05-12/code/index.rst", "trainings/log/detail/2020-05-12/index.rst", "trainings/log/detail/2020-05-18/Livehacking.ipynb", "trainings/log/detail/2020-05-18/code/index.rst", "trainings/log/detail/2020-05-18/index.rst", "trainings/log/detail/2020-09-07/index.rst", "trainings/log/detail/2020-09-28/index.rst", "trainings/log/detail/2020-10-19/Notebook.ipynb", "trainings/log/detail/2020-10-19/index.rst", "trainings/log/detail/2020-11-03/index.rst", "trainings/log/detail/2020-11-23/index.rst", "trainings/log/detail/2020-11-30/index.rst", "trainings/log/detail/2021-01-13/Notebook.ipynb", "trainings/log/detail/2021-01-13/index.rst", "trainings/log/detail/2021-01-13/notebook-wrapper.rst", "trainings/log/detail/2021-02-22/index.rst", "trainings/log/detail/2021-03-08/index.rst", "trainings/log/detail/2021-03-15/Notebook.ipynb", "trainings/log/detail/2021-03-15/index.rst", "trainings/log/detail/2021-03-22/Notebook.ipynb", "trainings/log/detail/2021-03-22/index.rst", "trainings/log/detail/2021-03-29/index.rst", "trainings/log/detail/2021-04-12/Notebook.ipynb", "trainings/log/detail/2021-04-12/index.rst", "trainings/log/detail/2021-04-12/notebook-wrapper.rst", "trainings/log/detail/2021-05-03/Notebook.ipynb", "trainings/log/detail/2021-05-03/index.rst", "trainings/log/detail/2021-05-03/notebook-wrapper.rst", "trainings/log/detail/2021-05-25/Notebook.ipynb", "trainings/log/detail/2021-05-25/index.rst", "trainings/log/detail/2021-06-14/index.rst", "trainings/log/detail/2021-07-12/index.rst", "trainings/log/detail/2021-08-02/index.rst", "trainings/log/detail/2021-08-02/notebook.ipynb", "trainings/log/detail/2021-08-23/Notebook.ipynb", "trainings/log/detail/2021-08-23/exercises/sap-cleaned.rst", "trainings/log/detail/2021-08-23/index.rst", "trainings/log/detail/2021-08-23/notebook-wrapper.rst", "trainings/log/detail/2021-08-31/Notebook.ipynb", "trainings/log/detail/2021-08-31/index.rst", "trainings/log/detail/2021-08-31/notebook-wrapper.rst", "trainings/log/detail/2021-11-17/Notebook.ipynb", "trainings/log/detail/2021-11-17/index.rst", "trainings/log/detail/2021-11-17/notebook-wrapper.rst", "trainings/log/detail/2021-12-01/2021-12-01.ipynb", "trainings/log/detail/2021-12-01/index.rst", "trainings/log/detail/2021-12-01/notebook-wrapper.rst", "trainings/log/detail/2021-12-06/index.rst", "trainings/log/detail/2022-01-17/index.rst", "trainings/log/detail/2022-01-17/notebook.ipynb", "trainings/log/detail/2022-01-17/notebook-wrapper.rst", "trainings/log/detail/2022-02-23/Notebook.ipynb", "trainings/log/detail/2022-02-23/index.rst", "trainings/log/detail/2022-02-23/notebook-wrapper.rst", "trainings/log/detail/2022-03-15/Notebook.ipynb", "trainings/log/detail/2022-03-15/index.rst", "trainings/log/detail/2022-03-15/notebook-wrapper.rst", "trainings/log/detail/2022-03-23/Notebook.ipynb", "trainings/log/detail/2022-03-23/index.rst", "trainings/log/detail/2022-03-23/notebook-wrapper.rst", "trainings/log/detail/2022-04-05/index.rst", "trainings/log/detail/2022-04-05/notebook.ipynb", "trainings/log/detail/2022-04-05/notebook-wrapper.rst", "trainings/log/detail/2022-04-25/index.rst", "trainings/log/detail/2022-04-25/notebook.ipynb", "trainings/log/detail/2022-04-25/notebook-wrapper.rst", "trainings/log/detail/2022-05-02/index.rst", "trainings/log/detail/2022-05-02/notebook.ipynb", "trainings/log/detail/2022-05-02/notebook-wrapper.rst", "trainings/log/detail/2022-05-16/index.rst", "trainings/log/detail/2022-05-16/notebook.ipynb", "trainings/log/detail/2022-05-16/notebook-wrapper.rst", "trainings/log/detail/2022-06-14/2022-05-11.rst", "trainings/log/detail/2022-06-14/index.rst", "trainings/log/detail/2022-07-26/index.rst", "trainings/log/detail/2022-10-03/index.rst", "trainings/log/detail/2022-10-11/index.rst", "trainings/log/detail/2022-10-24/index.rst", "trainings/log/detail/2022-11-07/index.rst", "trainings/log/detail/2022-11-07/notebook.ipynb", "trainings/log/detail/2022-11-07/notebook-wrapper.rst", "trainings/log/detail/2022-11-16/index.rst", "trainings/log/detail/2022-11-16/notebook.ipynb", "trainings/log/detail/2022-11-16/notebook-wrapper.rst", "trainings/log/detail/2023-01-23/index.rst", "trainings/log/detail/2023-02-13/index.rst", "trainings/log/detail/2023-03-13-Python-SAP/Demo/demo-notebook.ipynb", "trainings/log/detail/2023-03-13-Python-SAP/demo.rst", "trainings/log/detail/2023-03-13-Python-SAP/index.rst", "trainings/log/detail/2023-03-13-Python-SAP/notebook.ipynb", "trainings/log/detail/2023-03-13-Python-SAP/notebook-wrapper.rst", "trainings/log/detail/2023-03-13-Python-SAP/original-agenda.rst", "trainings/log/detail/2023-03-13-Python-SAP/sap-dataset/index.rst", "trainings/log/detail/2023-03-13-Python-SAP/sap-dataset/sap-dataset.ipynb", "trainings/log/detail/2023-03-20--C++-embedded/index.rst", "trainings/log/detail/2023-03-28--Python-Clean-Code/index.rst", "trainings/log/detail/2023-04-18--C++-embedded/index.rst", "trainings/log/detail/2023-04-24--Python-Advanced/agenda.rst", "trainings/log/detail/2023-04-24--Python-Advanced/index.rst", "trainings/log/detail/2023-04-24--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-04-24--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-05-15--Python-Basics/agenda.rst", "trainings/log/detail/2023-05-15--Python-Basics/index.rst", "trainings/log/detail/2023-05-15--Python-Basics/notebook.ipynb", "trainings/log/detail/2023-05-15--Python-Basics/notebook-wrapper.rst", "trainings/log/detail/2023-05-23--Linux-Basics/agenda.rst", "trainings/log/detail/2023-05-23--Linux-Basics/index.rst", "trainings/log/detail/2023-06-20--Python-Basics/agenda.rst", "trainings/log/detail/2023-06-20--Python-Basics/index.rst", "trainings/log/detail/2023-06-20--Python-Basics/notebook.ipynb", "trainings/log/detail/2023-06-20--Python-Basics/notebook-wrapper.rst", "trainings/log/detail/2023-07-03--CMake/agenda.rst", "trainings/log/detail/2023-07-03--CMake/index.rst", "trainings/log/detail/2023-09-25--Python-Advanced/index.rst", "trainings/log/detail/2023-09-25--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-09-25--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-10-09--Python-Advanced/index.rst", "trainings/log/detail/2023-10-09--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-10-09--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-10-24--Python-Advanced/agenda.rst", "trainings/log/detail/2023-10-24--Python-Advanced/index.rst", "trainings/log/detail/2023-10-24--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-10-24--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-11-22--Python-Advanced/agenda.rst", "trainings/log/detail/2023-11-22--Python-Advanced/index.rst", "trainings/log/detail/2023-11-22--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-11-22--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-11-27--CMake/agenda.rst", "trainings/log/detail/2023-11-27--CMake/index.rst", "trainings/log/detail/2023-11-29--Python-Basics/agenda.rst", "trainings/log/detail/2023-11-29--Python-Basics/index.rst", "trainings/log/detail/2023-11-29--Python-Basics/notebook.ipynb", "trainings/log/detail/2023-11-29--Python-Basics/notebook-wrapper.rst", "trainings/log/detail/2023-12-04--C++-Advanced/agenda.rst", "trainings/log/detail/2023-12-04--C++-Advanced/index.rst", "trainings/log/detail/2023-12-18--Python-Basics/agenda.rst", "trainings/log/detail/2023-12-18--Python-Basics/index.rst", "trainings/log/detail/2023-12-18--Python-Basics/notebook.ipynb", "trainings/log/detail/2023-12-18--Python-Basics/notebook-wrapper.rst", "trainings/log/detail/2023-XX-XX-C++-embedded/index.rst", "trainings/log/detail/2023-XX-XX-Python-SAP/index.rst", "trainings/log/detail/2024-01-15--Python-Advanced/agenda.rst", "trainings/log/detail/2024-01-15--Python-Advanced/index.rst", "trainings/log/detail/2024-01-15--Python-Advanced/notebook.ipynb", "trainings/log/detail/2024-01-15--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2024-01-29--Python-Basics/agenda.rst", "trainings/log/detail/2024-01-29--Python-Basics/index.rst", "trainings/log/detail/2024-01-29--Python-Basics/notebook.ipynb", "trainings/log/detail/2024-01-29--Python-Basics/notebook-wrapper.rst", "trainings/log/detail/FH-ECE-19/EC1/2021-05-12/screenplay-checker.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-abc.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-oo.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-unittest.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/fh-group.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/file-read.rst", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/2021-05-20-G2.ipynb", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/2021-05-21.ipynb", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Checker-Explanations.ipynb", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Datatypes.ipynb", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Functions.ipynb", "trainings/log/detail/FH-ECE-19/EC1/cloud-computer.rst", "trainings/log/detail/FH-ECE-19/EC1/formales.rst", "trainings/log/detail/FH-ECE-19/EC1/index.rst", "trainings/log/detail/FH-ECE-19/EC1/log.rst", "trainings/log/detail/FH-ECE-19/EC1/lv-de.rst", "trainings/log/detail/FH-ECE-19/EC1/lv-en.rst", "trainings/log/detail/FH-ECE-19/EC1/plan.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-07.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-12.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-28.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-11-15.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-11-29.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-12-14.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-01-10.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-01-12.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-02-15.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/index.rst", "trainings/log/detail/FH-ECE-19/EC2/index.rst", "trainings/log/detail/FH-ECE-19/EC2/test-material.rst", "trainings/log/detail/FH-ECE-19/index.rst", "trainings/log/detail/index.rst", "trainings/log/index.rst", "trainings/material/index.rst", "trainings/material/soup/c/010-introduction/000-installation/topic.rst", "trainings/material/soup/c/010-introduction/010-introduction/topic.rst", "trainings/material/soup/c/010-introduction/020-getting-started/topic.rst", "trainings/material/soup/c/010-introduction/030-variables-and-arithmetic-expressions/topic.rst", "trainings/material/soup/c/010-introduction/040-exercise-fahrenheit-float/topic.rst", "trainings/material/soup/c/010-introduction/050-the-for-statement/topic.rst", "trainings/material/soup/c/010-introduction/060-exercise-fahrenheit-for/topic.rst", "trainings/material/soup/c/010-introduction/070-symbolic-constants/topic.rst", "trainings/material/soup/c/010-introduction/080-exercise-fahrenheit-cpp/topic.rst", "trainings/material/soup/c/010-introduction/090-character-input-and-output/topic.rst", "trainings/material/soup/c/010-introduction/100-exercise-wc/topic.rst", "trainings/material/soup/c/010-introduction/110-arrays/topic.rst", "trainings/material/soup/c/010-introduction/120-exercise-histogram/topic.rst", "trainings/material/soup/c/010-introduction/130-functions/topic.rst", "trainings/material/soup/c/010-introduction/140-exercise-power-declaration/topic.rst", "trainings/material/soup/c/010-introduction/150-character-arrays/topic.rst", "trainings/material/soup/c/010-introduction/160-exercise-string-read-line/topic.rst", "trainings/material/soup/c/010-introduction/170-external-variables-and-scope/topic.rst", "trainings/material/soup/c/010-introduction/group.rst", "trainings/material/soup/c/020-types-operators-expressions/010-introduction/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/020-variable-names/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/030-data-types-and-sizes/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/040-constants/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/050-declarations/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/060-arithmetic-operators/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/070-relational-and-logical-operators/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/080-type-conversions/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/090-increment-and-decrement-operators/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/100-exercise-string-reduce/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/110-bitwise-operators/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/120-assignment-operators-and-expressions/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/130-conditional-expressions/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/140-precedence-and-order-of-evaluation/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/group.rst", "trainings/material/soup/c/030-program-flow/010-statements-and-blocks/topic.rst", "trainings/material/soup/c/030-program-flow/020-if-else/topic.rst", "trainings/material/soup/c/030-program-flow/030-else-if/topic.rst", "trainings/material/soup/c/030-program-flow/040-switch/topic.rst", "trainings/material/soup/c/030-program-flow/050-loops-while-and-for/topic.rst", "trainings/material/soup/c/030-program-flow/060-loops-do-while/topic.rst", "trainings/material/soup/c/030-program-flow/070-break-and-continue/topic.rst", "trainings/material/soup/c/030-program-flow/080-goto-and-labels/topic.rst", "trainings/material/soup/c/030-program-flow/group.rst", "trainings/material/soup/c/040-functions-and-program-structure/010-basics-of-functions/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/020-external-variables/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/030-header-files/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/040-static-variables/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/050-c-preprocessor/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/060-c-preprocessor-advanced/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/group.rst", "trainings/material/soup/c/050-pointers-and-arrays/010-pointers-and-addresses/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/020-pointers-and-function-arguments/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/030-exercise-swap/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/040-pointers-and-arrays/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/050-command-line-arguments/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/group.rst", "trainings/material/soup/c/060-structures/010-basics-of-structures/topic.rst", "trainings/material/soup/c/060-structures/020-structures-and-functions/topic.rst", "trainings/material/soup/c/060-structures/030-typedef/topic.rst", "trainings/material/soup/c/060-structures/group.rst", "trainings/material/soup/c/070-memory/010-malloc/topic.rst", "trainings/material/soup/c/070-memory/020-exercise-linked-list/topic.rst", "trainings/material/soup/c/070-memory/group.rst", "trainings/material/soup/c/080-advanced-language-features/010-volatile/topic.rst", "trainings/material/soup/c/080-advanced-language-features/020-atomic/topic.rst", "trainings/material/soup/c/080-advanced-language-features/030-alignment/topic.rst", "trainings/material/soup/c/080-advanced-language-features/group.rst", "trainings/material/soup/c/090-program-sanity/010-introduction/topic.rst", "trainings/material/soup/c/090-program-sanity/020-integral-types/topic.rst", "trainings/material/soup/c/090-program-sanity/030-discrete-values/topic.rst", "trainings/material/soup/c/090-program-sanity/040-static/topic.rst", "trainings/material/soup/c/090-program-sanity/050-const/topic.rst", "trainings/material/soup/c/090-program-sanity/060-struct-initialization/topic.rst", "trainings/material/soup/c/090-program-sanity/070-explicit-type-safety/topic.rst", "trainings/material/soup/c/090-program-sanity/080-valgrind/topic.rst", "trainings/material/soup/c/090-program-sanity/group.rst", "trainings/material/soup/c/100-performance/010-introduction/topic.rst", "trainings/material/soup/c/100-performance/020-computebound/topic.rst", "trainings/material/soup/c/100-performance/030-memory/topic.rst", "trainings/material/soup/c/100-performance/group.rst", "trainings/material/soup/c/110-profiling/010-introduction/topic.rst", "trainings/material/soup/c/110-profiling/020-gprof/topic.rst", "trainings/material/soup/c/110-profiling/030-callgrind/topic.rst", "trainings/material/soup/c/110-profiling/040-oprofile/topic.rst", "trainings/material/soup/c/110-profiling/group.rst", "trainings/material/soup/c/group.rst", "trainings/material/soup/clean-code/book-messages.rst", "trainings/material/soup/clean-code/craft-sw.rst", "trainings/material/soup/clean-code/group.rst", "trainings/material/soup/clean-code/intro-python/livehacking.rst", "trainings/material/soup/cmake/basics.rst", "trainings/material/soup/cmake/configure_file.rst", "trainings/material/soup/cmake/cxx-and-rants.rst", "trainings/material/soup/cmake/external-dependencies.rst", "trainings/material/soup/cmake/group.rst", "trainings/material/soup/cmake/installation.rst", "trainings/material/soup/cmake/libraries.rst", "trainings/material/soup/cmake/optional-code-approach-1.rst", "trainings/material/soup/cmake/optional-code-approach-2.rst", "trainings/material/soup/cmake/optional-code-problem.rst", "trainings/material/soup/cmake/shared-libraries.rst", "trainings/material/soup/cmake/structure.rst", "trainings/material/soup/cmake/targets-properties.rst", "trainings/material/soup/cmake/testing.rst", "trainings/material/soup/cxx-code/index.rst", "trainings/material/soup/cxx-design-patterns/abstract-factory/abstract-factory.rst", "trainings/material/soup/cxx-design-patterns/adapter/adapter.rst", "trainings/material/soup/cxx-design-patterns/command/command.rst", "trainings/material/soup/cxx-design-patterns/command/socialdb.rst", "trainings/material/soup/cxx-design-patterns/composite/composite.rst", "trainings/material/soup/cxx-design-patterns/decorator/decorator.rst", "trainings/material/soup/cxx-design-patterns/group.rst", "trainings/material/soup/cxx-design-patterns/heating-screenplay/heating-screenplay.rst", "trainings/material/soup/cxx-design-patterns/interpreter/interpreter.rst", "trainings/material/soup/cxx-design-patterns/observer/observer.rst", "trainings/material/soup/cxx-design-patterns/oo-principles.rst", "trainings/material/soup/cxx-design-patterns/proxy/proxy.rst", "trainings/material/soup/cxx-design-patterns/sensor-hierarchy.rst", "trainings/material/soup/cxx-design-patterns/singleton/singleton.rst", "trainings/material/soup/cxx-design-patterns/uml/uml.rst", "trainings/material/soup/cxx-exercises/design-patterns/abstract-factory.rst", "trainings/material/soup/cxx-exercises/design-patterns/adapter.rst", "trainings/material/soup/cxx-exercises/design-patterns/command.rst", "trainings/material/soup/cxx-exercises/design-patterns/composite.rst", "trainings/material/soup/cxx-exercises/design-patterns/decorator.rst", "trainings/material/soup/cxx-exercises/design-patterns/group.rst", "trainings/material/soup/cxx-exercises/design-patterns/interpreter-and-adapter.rst", "trainings/material/soup/cxx-exercises/design-patterns/interpreter-basic.rst", "trainings/material/soup/cxx-exercises/design-patterns/observer.rst", "trainings/material/soup/cxx-exercises/design-patterns/proxy-remote.rst", "trainings/material/soup/cxx-exercises/design-patterns/proxy-round.rst", "trainings/material/soup/cxx-exercises/design-patterns/singleton-flexible.rst", "trainings/material/soup/cxx-exercises/design-patterns/singleton-flexible-strict.rst", "trainings/material/soup/cxx-exercises/design-patterns/singleton-inflexible.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/abstract-factory.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/adapter.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/command.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/composite.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/decorator.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/group.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/interpreter-and-adapter.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/interpreter-basic.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/observer.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/proxy-remote.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/proxy-round.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-flexible.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-flexible-strict.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-inflexible.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-loop-function.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-no-polymorphism.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-random-sensor.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/group.rst", "trainings/material/soup/cxx-exercises/group.rst", "trainings/material/soup/cxx-exercises/nopoly-display-led-stripe/display-led-stripe-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-hysteresis/hysteresis-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-sensor-avg/sensor-avg-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-const-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-mock-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-random-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-switch-mock/switch-mock-nopoly.rst", "trainings/material/soup/cxx-exercises/oo-shapes/shapes.rst", "trainings/material/soup/cxx-exercises/project-setup.rst", "trainings/material/soup/cxx-exercises/sensor-interface/sensor-interface.rst", "trainings/material/soup/cxx-exercises/sensor-w1-factory/sensor-w1-factory.rst", "trainings/material/soup/cxx-exercises/sensor-w1/sensor-w1.rst", "trainings/material/soup/cxx-exercises/stl/algo.rst", "trainings/material/soup/cxx-exercises/stl/filter-generic.rst", "trainings/material/soup/cxx-exercises/stl/filter-greater-10.rst", "trainings/material/soup/cxx-exercises/stl/filter-odd.rst", "trainings/material/soup/cxx-exercises/stl/group.rst", "trainings/material/soup/cxx-exercises/stl/map.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/group.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/insert-no-overwrite.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/insert-sunny.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/lookup-not-found.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/lookup-sunny.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/no-memleak.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/remove-not-found.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/remove-sunny.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/size-const.rst", "trainings/material/soup/cxx-exercises/stl/uniq.rst", "trainings/material/soup/cxx-exercises/stl/vector.rst", "trainings/material/soup/cxx-todo/index.rst", "trainings/material/soup/cxx/cxx_class_templates/code/index.rst", "trainings/material/soup/cxx/cxx_class_templates/screenplay.rst", "trainings/material/soup/cxx/cxx_class_templates/topic.rst", "trainings/material/soup/cxx/cxx_dynamic_memory/code/index.rst", "trainings/material/soup/cxx/cxx_dynamic_memory/screenplay.rst", "trainings/material/soup/cxx/cxx_dynamic_memory/topic.rst", "trainings/material/soup/cxx/cxx_global_initialization/code/index.rst", "trainings/material/soup/cxx/cxx_global_initialization/screenplay.rst", "trainings/material/soup/cxx/cxx_global_initialization/topic.rst", "trainings/material/soup/cxx/cxx_inheritance_virtual/code/index.rst", "trainings/material/soup/cxx/cxx_inheritance_virtual/screenplay.rst", "trainings/material/soup/cxx/cxx_inheritance_virtual/topic.rst", "trainings/material/soup/cxx/cxx_ownership_raii/code/index.rst", "trainings/material/soup/cxx/cxx_ownership_raii/screenplay.rst", "trainings/material/soup/cxx/cxx_ownership_raii/topic.rst", "trainings/material/soup/cxx/cxx_stl_container_intro/code/index.rst", "trainings/material/soup/cxx/cxx_stl_container_intro/screenplay.rst", "trainings/material/soup/cxx/cxx_stl_container_intro/topic.rst", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/code/index.rst", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/screenplay.rst", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/topic.rst", "trainings/material/soup/cxx/group.rst", "trainings/material/soup/cxx03/001-introduction/topic.rst", "trainings/material/soup/cxx03/020-data-encapsulation/c.rst", "trainings/material/soup/cxx03/020-data-encapsulation/copy-basics.rst", "trainings/material/soup/cxx03/020-data-encapsulation/cpp-introduction.rst", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-custom.rst", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-default.rst", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-dtor.rst", "trainings/material/soup/cxx03/020-data-encapsulation/group.rst", "trainings/material/soup/cxx03/020-data-encapsulation/initializer-list.rst", "trainings/material/soup/cxx03/020-data-encapsulation/object-copy.rst", "trainings/material/soup/cxx03/030-functions-and-methods/010-overloading/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/020-methods/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/030-const/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/040-this/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/050-references/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/060-static/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/065-static-member-variables/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/070-operators/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-cuboid.rst", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-point.rst", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-point3d.rst", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-rectangle.rst", "trainings/material/soup/cxx03/030-functions-and-methods/group.rst", "trainings/material/soup/cxx03/040-exceptions/010-basics/topic.rst", "trainings/material/soup/cxx03/040-exceptions/020-try-catch/topic.rst", "trainings/material/soup/cxx03/040-exceptions/group.rst", "trainings/material/soup/cxx03/050-templates/010-function-templates/topic.rst", "trainings/material/soup/cxx03/050-templates/020-class-templates/topic.rst", "trainings/material/soup/cxx03/050-templates/group.rst", "trainings/material/soup/cxx03/060-stl/010-basics/algo-copy.rst", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-algo.rst", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-basics.rst", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-difference.rst", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-out-of-range.rst", "trainings/material/soup/cxx03/060-stl/010-basics/topic.rst", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/topic.rst", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-and-copy.rst", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-basic.rst", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-pointer-arith.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/binary_search.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/copy.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/find.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/find_if.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/for_each.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/group.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/lower_bound.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/reverse.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/reverse_copy.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/sort.rst", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/basics.rst", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/group.rst", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/list.rst", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/vector.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/basics.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/group.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-init-fill.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-insert.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-remove.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-search.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/multimap.rst", "trainings/material/soup/cxx03/060-stl/allocators/allocator_basics.rst", "trainings/material/soup/cxx03/060-stl/allocators/group.rst", "trainings/material/soup/cxx03/060-stl/exercises/group.rst", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/exercise.rst", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/group.rst", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/solution.rst", "trainings/material/soup/cxx03/060-stl/group.rst", "trainings/material/soup/cxx03/070-dynamic-memory/000-todo/topic.rst", "trainings/material/soup/cxx03/070-dynamic-memory/group.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/basics.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/destructor.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/group.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/interface.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/polymorphism.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/private-protected.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/virtual-destructor.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/virtual-method.rst", "trainings/material/soup/cxx03/900-standard-library-miscellanea/group.rst", "trainings/material/soup/cxx03/900-standard-library-miscellanea/string/topic.rst", "trainings/material/soup/cxx03/exercises-misc/american-flag/exercise.rst", "trainings/material/soup/cxx03/exercises-misc/fh-questions.rst", "trainings/material/soup/cxx03/exercises-misc/group.rst", "trainings/material/soup/cxx03/exercises-misc/sum-integers-from-stdin/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/group.rst", "trainings/material/soup/cxx03/exercises-userdb/user-access-methods/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-const-members/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-const/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-default-ctor/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-simple-method/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-to-cxx-ctor/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-insert/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-search-find_if/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-search-notfound-exception/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-search/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-vector/exercise.rst", "trainings/material/soup/cxx03/group.rst", "trainings/material/soup/cxx11/010-introduction/group.rst", "trainings/material/soup/cxx11/010-introduction/history.rst", "trainings/material/soup/cxx11/010-introduction/overview-livehacking.rst", "trainings/material/soup/cxx11/020-new-language-features/010-strongly-typed-enums/topic.rst", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/group.rst", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/implementor-view.rst", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/intro.rst", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/mess.rst", "trainings/material/soup/cxx11/020-new-language-features/050-delegating-ctor/topic.rst", "trainings/material/soup/cxx11/020-new-language-features/055-constexpr/topic.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/afterword.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/group.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-smartptr-move.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-string-move.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-using-string-move.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/overview.rst", "trainings/material/soup/cxx11/020-new-language-features/070-miscellaneous/topic.rst", "trainings/material/soup/cxx11/020-new-language-features/auto.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/group.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-1-conceptless.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-2-conceptless-error.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-3-concept-integral.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/links.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-1-good-old-func.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-2-need-template.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-4-concept-has-size.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-5-concept-index-ret-double.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/group.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/fibo-generator.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/fibonacci.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/generator-h.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/generator-hello.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/simplest.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend-iter.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend-next.rst", "trainings/material/soup/cxx11/020-new-language-features/default.rst", "trainings/material/soup/cxx11/020-new-language-features/delete.rst", "trainings/material/soup/cxx11/020-new-language-features/final.rst", "trainings/material/soup/cxx11/020-new-language-features/group.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/group.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-capture.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-is-functor.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-is-functor-pitfall.rst", "trainings/material/soup/cxx11/020-new-language-features/modules.rst", "trainings/material/soup/cxx11/020-new-language-features/override.rst", "trainings/material/soup/cxx11/020-new-language-features/range-based-for.rst", "trainings/material/soup/cxx11/020-new-language-features/range-based-for-map.rst", "trainings/material/soup/cxx11/020-new-language-features/ranges/good-bad.rst", "trainings/material/soup/cxx11/020-new-language-features/ranges/group.rst", "trainings/material/soup/cxx11/020-new-language-features/ranges/intro.rst", "trainings/material/soup/cxx11/020-new-language-features/ranges/links.rst", "trainings/material/soup/cxx11/020-new-language-features/structured-binding.rst", "trainings/material/soup/cxx11/030-smart-pointers/040-closing-words/topic.rst", "trainings/material/soup/cxx11/030-smart-pointers/group.rst", "trainings/material/soup/cxx11/030-smart-pointers/introduction.rst", "trainings/material/soup/cxx11/030-smart-pointers/introduction-livehack.rst", "trainings/material/soup/cxx11/030-smart-pointers/sharedptr.rst", "trainings/material/soup/cxx11/030-smart-pointers/uniqueptr.rst", "trainings/material/soup/cxx11/030-smart-pointers/weakptr.rst", "trainings/material/soup/cxx11/035-perfect-forwarding/topic.rst", "trainings/material/soup/cxx11/040-bind-function/010-bind/topic.rst", "trainings/material/soup/cxx11/040-bind-function/020-function/topic.rst", "trainings/material/soup/cxx11/040-bind-function/group.rst", "trainings/material/soup/cxx11/050-multithreading/010-introduction/topic.rst", "trainings/material/soup/cxx11/050-multithreading/020-thread/topic.rst", "trainings/material/soup/cxx11/050-multithreading/030-race-conditions/topic.rst", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/atomics.rst", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/mutex.rst", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/scoped-locking.rst", "trainings/material/soup/cxx11/050-multithreading/condition-variable.rst", "trainings/material/soup/cxx11/050-multithreading/group.rst", "trainings/material/soup/cxx11/050-multithreading/promise-future.rst", "trainings/material/soup/cxx11/100-miscellaneous/010-chrono/topic.rst", "trainings/material/soup/cxx11/100-miscellaneous/any-variant-optional/variant.rst", "trainings/material/soup/cxx11/100-miscellaneous/group.rst", "trainings/material/soup/cxx11/drafts/crtp.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/allocator.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/classic-virtual.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/group.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/related-no-virtual.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/type-erasure.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/unrelated.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/variant-automatic-visit.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/variant-manual-if.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/variant-manual-visit.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/why-replace-virtual.rst", "trainings/material/soup/cxx11/drafts/group.rst", "trainings/material/soup/cxx11/exercises/bag-copy.rst", "trainings/material/soup/cxx11/exercises/bag-shared.rst", "trainings/material/soup/cxx11/exercises/bag-unique.rst", "trainings/material/soup/cxx11/exercises/group.rst", "trainings/material/soup/cxx11/filesystem/topic.rst", "trainings/material/soup/cxx11/group.rst", "trainings/material/soup/graph.rst", "trainings/material/soup/index.rst", "trainings/material/soup/kernel/cdev-auto/screenplay.rst", "trainings/material/soup/kernel/cdev-auto/slides.rst", "trainings/material/soup/kernel/cdev-auto/topic.rst", "trainings/material/soup/kernel/cdev-file-operations/screenplay.rst", "trainings/material/soup/kernel/cdev-file-operations/slides.rst", "trainings/material/soup/kernel/cdev-file-operations/topic.rst", "trainings/material/soup/kernel/cdev-first-functionality/slides.rst", "trainings/material/soup/kernel/cdev-first-functionality/topic.rst", "trainings/material/soup/kernel/cdev-manual/screenplay.rst", "trainings/material/soup/kernel/cdev-manual/slides.rst", "trainings/material/soup/kernel/cdev-manual/topic.rst", "trainings/material/soup/kernel/cdev-multiple-devices/slides.rst", "trainings/material/soup/kernel/cdev-multiple-devices/topic.rst", "trainings/material/soup/kernel/cdev-refactoring/screenplay.rst", "trainings/material/soup/kernel/cdev-refactoring/slides.rst", "trainings/material/soup/kernel/cdev-refactoring/topic.rst", "trainings/material/soup/kernel/dma/slides.rst", "trainings/material/soup/kernel/dma/topic.rst", "trainings/material/soup/kernel/fedora-kernel-build/screenplay.rst", "trainings/material/soup/kernel/fedora-kernel-build/topic.rst", "trainings/material/soup/kernel/fedora-module-build/screenplay.rst", "trainings/material/soup/kernel/fedora-module-build/topic.rst", "trainings/material/soup/kernel/group.rst", "trainings/material/soup/kernel/hello-world/slides.rst", "trainings/material/soup/kernel/hello-world/topic.rst", "trainings/material/soup/kernel/interrupt-coding/slides.rst", "trainings/material/soup/kernel/interrupt-coding/topic.rst", "trainings/material/soup/kernel/interrupt/slides.rst", "trainings/material/soup/kernel/interrupt/topic.rst", "trainings/material/soup/kernel/iomemory/slides.rst", "trainings/material/soup/kernel/iomemory/topic.rst", "trainings/material/soup/kernel/kmalloc/slides.rst", "trainings/material/soup/kernel/kmalloc/topic.rst", "trainings/material/soup/kernel/list/slides.rst", "trainings/material/soup/kernel/list/topic.rst", "trainings/material/soup/kernel/mutex-coding/slides.rst", "trainings/material/soup/kernel/mutex-coding/topic.rst", "trainings/material/soup/kernel/mutex/slides.rst", "trainings/material/soup/kernel/mutex/topic.rst", "trainings/material/soup/kernel/netdev/slides.rst", "trainings/material/soup/kernel/netdev/topic.rst", "trainings/material/soup/kernel/pci/slides.rst", "trainings/material/soup/kernel/pci/topic.rst", "trainings/material/soup/kernel/process-vs-atomic/slides.rst", "trainings/material/soup/kernel/process-vs-atomic/topic.rst", "trainings/material/soup/kernel/raspi-kernel-build/story.rst", "trainings/material/soup/kernel/raspi-kernel-build/topic.rst", "trainings/material/soup/kernel/sample-project.rst", "trainings/material/soup/kernel/spinlock-coding/slides.rst", "trainings/material/soup/kernel/spinlock-coding/topic.rst", "trainings/material/soup/kernel/spinlock/slides.rst", "trainings/material/soup/kernel/spinlock/topic.rst", "trainings/material/soup/kernel/stub-sysprog-dup/topic.rst", "trainings/material/soup/kernel/time_timer-coding/slides.rst", "trainings/material/soup/kernel/time_timer-coding/topic.rst", "trainings/material/soup/kernel/time_timer/slides.rst", "trainings/material/soup/kernel/time_timer/topic.rst", "trainings/material/soup/kernel/todo.rst", "trainings/material/soup/kernel/usermem/screenplay.rst", "trainings/material/soup/kernel/usermem/slides.rst", "trainings/material/soup/kernel/usermem/topic.rst", "trainings/material/soup/kernel/waitqueue/screenplay.rst", "trainings/material/soup/kernel/waitqueue/slides.rst", "trainings/material/soup/kernel/waitqueue/topic.rst", "trainings/material/soup/kernel/workqueue/screenplay.rst", "trainings/material/soup/kernel/workqueue/slides.rst", "trainings/material/soup/kernel/workqueue/topic.rst", "trainings/material/soup/linux/basics/archiving-compression/exercises.rst", "trainings/material/soup/linux/basics/archiving-compression/group.rst", "trainings/material/soup/linux/basics/archiving-compression/gzip.rst", "trainings/material/soup/linux/basics/archiving-compression/overview.rst", "trainings/material/soup/linux/basics/archiving-compression/tar.rst", "trainings/material/soup/linux/basics/exercises/FH-SS2022-EXAM-01-G1.rst", "trainings/material/soup/linux/basics/exercises/FH-SS2022-EXAM-01-G2.rst", "trainings/material/soup/linux/basics/exercises/group.rst", "trainings/material/soup/linux/basics/group.rst", "trainings/material/soup/linux/basics/intro/demo-everything-is-a-file.rst", "trainings/material/soup/linux/basics/intro/environment.rst", "trainings/material/soup/linux/basics/intro/exercises/fh-questions.rst", "trainings/material/soup/linux/basics/intro/group.rst", "trainings/material/soup/linux/basics/intro/login.rst", "trainings/material/soup/linux/basics/intro/overview.rst", "trainings/material/soup/linux/basics/intro/process.rst", "trainings/material/soup/linux/basics/intro/process-tree.rst", "trainings/material/soup/linux/basics/intro/wsl.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/exercises.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/group.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/io-redirection.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/io-redirection-swap-stdout-stderr.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/pipes.rst", "trainings/material/soup/linux/basics/permissions/basics.rst", "trainings/material/soup/linux/basics/permissions/exercises/credentials.rst", "trainings/material/soup/linux/basics/permissions/exercises/fh-questions.rst", "trainings/material/soup/linux/basics/permissions/exercises/fh-questions-nocheat.rst", "trainings/material/soup/linux/basics/permissions/exercises/group.rst", "trainings/material/soup/linux/basics/permissions/exercises/private-directory.rst", "trainings/material/soup/linux/basics/permissions/exercises/private-directory-question.rst", "trainings/material/soup/linux/basics/permissions/exercises/public-directory.rst", "trainings/material/soup/linux/basics/permissions/exercises/public-directory-question.rst", "trainings/material/soup/linux/basics/permissions/exercises/shared-file.rst", "trainings/material/soup/linux/basics/permissions/group.rst", "trainings/material/soup/linux/basics/permissions/setuid.rst", "trainings/material/soup/linux/basics/permissions/setuid-livedemo.rst", "trainings/material/soup/linux/basics/permissions/sticky.rst", "trainings/material/soup/linux/basics/permissions/umask.rst", "trainings/material/soup/linux/basics/shell/commandline.rst", "trainings/material/soup/linux/basics/shell/configfiles.rst", "trainings/material/soup/linux/basics/shell/cp.rst", "trainings/material/soup/linux/basics/shell/cwd.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/copy-tree.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-copy-files.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-create-files.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-move-files.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/group.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/mkdir-p-rm-r.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/rm-rf.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/rm-tree.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/verify-hierarchy.rst", "trainings/material/soup/linux/basics/shell/exercises/fh-questions.rst", "trainings/material/soup/linux/basics/shell/exercises/group.rst", "trainings/material/soup/linux/basics/shell/exercises/ls/dev-types.rst", "trainings/material/soup/linux/basics/shell/exercises/ls/etc-passwd-size.rst", "trainings/material/soup/linux/basics/shell/exercises/ls/group.rst", "trainings/material/soup/linux/basics/shell/exercises/ls/home-permissions.rst", "trainings/material/soup/linux/basics/shell/file_dir_create_rm.rst", "trainings/material/soup/linux/basics/shell/group.rst", "trainings/material/soup/linux/basics/shell/links.rst", "trainings/material/soup/linux/basics/shell/ls.rst", "trainings/material/soup/linux/basics/shell/mv.rst", "trainings/material/soup/linux/basics/shell/paths.rst", "trainings/material/soup/linux/basics/text-tools/cat.rst", "trainings/material/soup/linux/basics/text-tools/cut.rst", "trainings/material/soup/linux/basics/text-tools/exercises.rst", "trainings/material/soup/linux/basics/text-tools/find.rst", "trainings/material/soup/linux/basics/text-tools/grep.rst", "trainings/material/soup/linux/basics/text-tools/group.rst", "trainings/material/soup/linux/basics/text-tools/head-tail.rst", "trainings/material/soup/linux/basics/text-tools/less.rst", "trainings/material/soup/linux/basics/text-tools/overview.rst", "trainings/material/soup/linux/drafts/group.rst", "trainings/material/soup/linux/drafts/yocto.rst", "trainings/material/soup/linux/group.rst", "trainings/material/soup/linux/hardware/brushless-motor/topic.rst", "trainings/material/soup/linux/hardware/can/10-intro.rst", "trainings/material/soup/linux/hardware/can/20-interfaces.rst", "trainings/material/soup/linux/hardware/can/30-programming.rst", "trainings/material/soup/linux/hardware/can/40-harware.rst", "trainings/material/soup/linux/hardware/can/group.rst", "trainings/material/soup/linux/hardware/group.rst", "trainings/material/soup/linux/hardware/i2c/topic.rst", "trainings/material/soup/linux/hardware/pwm/topic.rst", "trainings/material/soup/linux/hardware/w1/topic.rst", "trainings/material/soup/linux/ssh/basics.rst", "trainings/material/soup/linux/ssh/exercises/copy-file.rst", "trainings/material/soup/linux/ssh/exercises/copy-tree.rst", "trainings/material/soup/linux/ssh/exercises/group.rst", "trainings/material/soup/linux/ssh/exercises/pubkey.rst", "trainings/material/soup/linux/ssh/group.rst", "trainings/material/soup/linux/ssh/key-pair.rst", "trainings/material/soup/linux/ssh/links.rst", "trainings/material/soup/linux/ssh/portforwarding.rst", "trainings/material/soup/linux/ssh/scp.rst", "trainings/material/soup/linux/ssh/sshfs.rst", "trainings/material/soup/linux/sysprog/basics/errorhandling.rst", "trainings/material/soup/linux/sysprog/basics/group.rst", "trainings/material/soup/linux/sysprog/basics/syscalls.rst", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io.rst", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-file.rst", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-network.rst", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-timer.rst", "trainings/material/soup/linux/sysprog/blocking-io/group.rst", "trainings/material/soup/linux/sysprog/file-io/basics.rst", "trainings/material/soup/linux/sysprog/file-io/basics-exercise-copy.rst", "trainings/material/soup/linux/sysprog/file-io/basics-exercise-hole.rst", "trainings/material/soup/linux/sysprog/file-io/duplicate.rst", "trainings/material/soup/linux/sysprog/file-io/example-O_CREAT.rst", "trainings/material/soup/linux/sysprog/file-io/example-O_EXCL.rst", "trainings/material/soup/linux/sysprog/file-io/example-O_RDONLY.rst", "trainings/material/soup/linux/sysprog/file-io/example-O_WRONLY.rst", "trainings/material/soup/linux/sysprog/file-io/exercise-sensor-read.rst", "trainings/material/soup/linux/sysprog/file-io/group.rst", "trainings/material/soup/linux/sysprog/file-io/misc.rst", "trainings/material/soup/linux/sysprog/group.rst", "trainings/material/soup/linux/sysprog/intro-hw/get.rst", "trainings/material/soup/linux/sysprog/intro-hw/group.rst", "trainings/material/soup/linux/sysprog/intro-hw/sysfs-gpio.rst", "trainings/material/soup/linux/sysprog/intro-hw/watch.rst", "trainings/material/soup/linux/sysprog/posix-threads/010-introduction/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/020-lifecycle/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/030-exercise-pthcreate-race-condition/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/040-mutex/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/050-exercise-mutex/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/060-condition-variable/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/070-exercise-condition-variable/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/080-miscellaneous/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/090-last-warning/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/group.rst", "trainings/material/soup/linux/sysprog/posix-threads/locked-trylock.rst", "trainings/material/soup/linux/sysprog/process/commandline.rst", "trainings/material/soup/linux/sysprog/process/group.rst", "trainings/material/soup/linux/sysprog/process/tree.rst", "trainings/material/soup/linux/sysprog/scheduling/basics.rst", "trainings/material/soup/linux/sysprog/scheduling/group.rst", "trainings/material/soup/linux/sysprog/scheduling/processes-and-threads.rst", "trainings/material/soup/linux/sysprog/scheduling/questions.rst", "trainings/material/soup/linux/sysprog/scheduling/realtime.rst", "trainings/material/soup/linux/sysprog/scheduling/realtime-api.rst", "trainings/material/soup/linux/sysprog/scheduling/wakup-latency.rst", "trainings/material/soup/linux/sysprog/sysprog_events/code/index.rst", "trainings/material/soup/linux/sysprog/sysprog_events/screenplay.rst", "trainings/material/soup/linux/sysprog/sysprog_events/topic.rst", "trainings/material/soup/linux/sysprog/sysprog_ipc/code/index.rst", "trainings/material/soup/linux/sysprog/sysprog_ipc/screenplay.rst", "trainings/material/soup/linux/sysprog/sysprog_ipc/slides.rst", "trainings/material/soup/linux/sysprog/sysprog_ipc/topic.rst", "trainings/material/soup/linux/sysprog/sysprog_signals/code/index.rst", "trainings/material/soup/linux/sysprog/sysprog_signals/screenplay.rst", "trainings/material/soup/linux/sysprog/sysprog_signals/slides.rst", "trainings/material/soup/linux/sysprog/sysprog_signals/topic.rst", "trainings/material/soup/linux/toolchain/basics/topic.rst", "trainings/material/soup/linux/toolchain/cmake/cross.rst", "trainings/material/soup/linux/toolchain/cmake/local.rst", "trainings/material/soup/linux/toolchain/cross/basics.rst", "trainings/material/soup/linux/toolchain/cross/group.rst", "trainings/material/soup/linux/toolchain/exercises/cross-build.rst", "trainings/material/soup/linux/toolchain/exercises/fh-2022-questions.rst", "trainings/material/soup/linux/toolchain/exercises/group.rst", "trainings/material/soup/linux/toolchain/exercises/native-build.rst", "trainings/material/soup/linux/toolchain/exercises/raspberry-toolchain.rst", "trainings/material/soup/linux/toolchain/group.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/group.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/linaro.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-build-details.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-build-docker-fedora.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-setup.rst", "trainings/material/soup/linux/toolchain/separate-compilation/topic.rst", "trainings/material/soup/linux/toolchain/shared-libraries/topic.rst", "trainings/material/soup/linux/toolchain/static-library/topic.rst", "trainings/material/soup/python/advanced/closures/topic.rst", "trainings/material/soup/python/advanced/comprehensions/topic.rst", "trainings/material/soup/python/advanced/context-mgr/topic.rst", "trainings/material/soup/python/advanced/decorators/topic.rst", "trainings/material/soup/python/advanced/exceptions/topic.rst", "trainings/material/soup/python/advanced/exec/topic.rst", "trainings/material/soup/python/advanced/group.rst", "trainings/material/soup/python/advanced/iteration-generation/iteration-generation/topic.rst", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/fibonacci-generator.rst", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/iterator-protocol.rst", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/topic.rst", "trainings/material/soup/python/advanced/iteration-generation/topic.rst", "trainings/material/soup/python/advanced/modules.rst", "trainings/material/soup/python/advanced/multithreading/basics.rst", "trainings/material/soup/python/advanced/multithreading/group.rst", "trainings/material/soup/python/advanced/multithreading/mutex.rst", "trainings/material/soup/python/advanced/multithreading/questions.rst", "trainings/material/soup/python/advanced/oo/abc/topic.rst", "trainings/material/soup/python/advanced/oo/classes-and-dicts/topic.rst", "trainings/material/soup/python/advanced/oo/constructor/topic.rst", "trainings/material/soup/python/advanced/oo/group.rst", "trainings/material/soup/python/advanced/oo/inheritance/topic.rst", "trainings/material/soup/python/advanced/oo/methods/topic.rst", "trainings/material/soup/python/advanced/oo/namedtuple/topic.rst", "trainings/material/soup/python/advanced/oo/operator-overloading/topic.rst", "trainings/material/soup/python/advanced/oo/properties/topic.rst", "trainings/material/soup/python/advanced/oo/str-repr/topic.rst", "trainings/material/soup/python/advanced/starargs/topic.rst", "trainings/material/soup/python/basics/group.rst", "trainings/material/soup/python/basics/installation.rst", "trainings/material/soup/python/basics/python_0110_blahblah/topic.rst", "trainings/material/soup/python/basics/python_0120_helloworld/topic.rst", "trainings/material/soup/python/basics/python_0125_running/topic.rst", "trainings/material/soup/python/basics/python_0130_syntax_etc/topic.rst", "trainings/material/soup/python/basics/python_0139_commandline_argv/topic.rst", "trainings/material/soup/python/basics/python_0140_variables/topic.rst", "trainings/material/soup/python/basics/python_0150_datatypes_overview/topic.rst", "trainings/material/soup/python/basics/python_0150_datatypes_overview_compound/topic.rst", "trainings/material/soup/python/basics/python_0160_boolean/topic.rst", "trainings/material/soup/python/basics/python_0170_if/topic.rst", "trainings/material/soup/python/basics/python_0193_while/topic.rst", "trainings/material/soup/python/basics/python_0200_sequential_types/topic.rst", "trainings/material/soup/python/basics/python_0210_indexing_slicing/topic.rst", "trainings/material/soup/python/basics/python_0220_for/topic.rst", "trainings/material/soup/python/basics/python_0225_range/topic.rst", "trainings/material/soup/python/basics/python_0250_refs_flat_deep_copy/topic.rst", "trainings/material/soup/python/basics/python_0270_functions/screenplay-scoping.rst", "trainings/material/soup/python/basics/python_0270_functions/slideshow.rst", "trainings/material/soup/python/basics/python_0270_functions/topic.rst", "trainings/material/soup/python/basics/python_0300_strings/topic.rst", "trainings/material/soup/python/basics/python_0310_strings_formatting/topic.rst", "trainings/material/soup/python/basics/python_0320_strings_methods/topic.rst", "trainings/material/soup/python/basics/python_0400_lists/topic.rst", "trainings/material/soup/python/basics/python_0450_dictionaries/topic.rst", "trainings/material/soup/python/basics/python_0460_sets/topic.rst", "trainings/material/soup/python/basics/python_0500_files/topic.rst", "trainings/material/soup/python/basics/python_1000_function_objects/topic.rst", "trainings/material/soup/python/drafts/argparse/topic.rst", "trainings/material/soup/python/drafts/group.rst", "trainings/material/soup/python/drafts/matplotlib/topic.rst", "trainings/material/soup/python/drafts/setuptools/topic.rst", "trainings/material/soup/python/exercises/csv/csv-db.rst", "trainings/material/soup/python/exercises/csv/csv-module.rst", "trainings/material/soup/python/exercises/csv/group.rst", "trainings/material/soup/python/exercises/group.rst", "trainings/material/soup/python/exercises/herdt/boolean.rst", "trainings/material/soup/python/exercises/herdt/exercise_while_even_numbers.rst", "trainings/material/soup/python/exercises/herdt/greet.rst", "trainings/material/soup/python/exercises/herdt/group.rst", "trainings/material/soup/python/exercises/herdt/max_numbers.rst", "trainings/material/soup/python/exercises/herdt/swap.rst", "trainings/material/soup/python/exercises/herdt/username_password.rst", "trainings/material/soup/python/exercises/legacy/cmdline_digit.rst", "trainings/material/soup/python/exercises/legacy/dict_keyerror.rst", "trainings/material/soup/python/exercises/legacy/distill.rst", "trainings/material/soup/python/exercises/legacy/fibonacci-generator.rst", "trainings/material/soup/python/exercises/legacy/for_primeness.rst", "trainings/material/soup/python/exercises/legacy/group.rst", "trainings/material/soup/python/exercises/legacy/join_function.rst", "trainings/material/soup/python/exercises/legacy/max_numbers.rst", "trainings/material/soup/python/exercises/legacy/max_numbers_function.rst", "trainings/material/soup/python/exercises/legacy/mixed_list_executable.rst", "trainings/material/soup/python/exercises/legacy/mixed_list_interactive.rst", "trainings/material/soup/python/exercises/legacy/passwd.rst", "trainings/material/soup/python/exercises/legacy/primeness_function.rst", "trainings/material/soup/python/exercises/legacy/revert.rst", "trainings/material/soup/python/exercises/legacy/string-rightjustify.rst", "trainings/material/soup/python/exercises/legacy/uniq_function.rst", "trainings/material/soup/python/exercises/legacy/uniq_generator.rst", "trainings/material/soup/python/exercises/legacy/wc.rst", "trainings/material/soup/python/exercises/legacy/while_primeness.rst", "trainings/material/soup/python/exercises/sensors/group.rst", "trainings/material/soup/python/exercises/sensors/project-setup.rst", "trainings/material/soup/python/exercises/sensors/sensor-const.rst", "trainings/material/soup/python/exercises/userdb/csvdictreader.rst", "trainings/material/soup/python/exercises/userdb/csvdictreader-function.rst", "trainings/material/soup/python/exercises/userdb/csvreader.rst", "trainings/material/soup/python/exercises/userdb/csvreader-function.rst", "trainings/material/soup/python/exercises/userdb/group.rst", "trainings/material/soup/python/exercises/userdb/mqtt-publish-csv.rst", "trainings/material/soup/python/exercises/userdb/user-class-person.rst", "trainings/material/soup/python/exercises/userdb/user_json.rst", "trainings/material/soup/python/exercises/userdb/userdb_csv.rst", "trainings/material/soup/python/graph.rst", "trainings/material/soup/python/group.rst", "trainings/material/soup/python/link-collection.rst", "trainings/material/soup/python/misc/ai/group.rst", "trainings/material/soup/python/misc/ai/k-means.rst", "trainings/material/soup/python/misc/ai/linear-regression/code.rst", "trainings/material/soup/python/misc/ai/linear-regression/history_data.rst", "trainings/material/soup/python/misc/ai/linear-regression/linear_regression.ipynb", "trainings/material/soup/python/misc/ai/linear-regression/topic.rst", "trainings/material/soup/python/misc/ai/machine-learning-intro.rst", "trainings/material/soup/python/misc/csv/topic.rst", "trainings/material/soup/python/misc/db/dbapi2.rst", "trainings/material/soup/python/misc/db/group.rst", "trainings/material/soup/python/misc/db/postgres.rst", "trainings/material/soup/python/misc/db/sqlite3.rst", "trainings/material/soup/python/misc/encoding/topic.rst", "trainings/material/soup/python/misc/group.rst", "trainings/material/soup/python/misc/import.rst", "trainings/material/soup/python/misc/mqtt/topic.rst", "trainings/material/soup/python/misc/pandas/add_row.rst", "trainings/material/soup/python/misc/pandas/basics.rst", "trainings/material/soup/python/misc/pandas/filters.rst", "trainings/material/soup/python/misc/pandas/group.rst", "trainings/material/soup/python/misc/pandas/iloc.rst", "trainings/material/soup/python/misc/pandas/indexes.rst", "trainings/material/soup/python/misc/pandas/loc.rst", "trainings/material/soup/python/misc/pandas/mod_col.rst", "trainings/material/soup/python/misc/python_5550_xml_etree/topic.rst", "trainings/material/soup/python/misc/vscode.rst", "trainings/material/soup/python/swdev/group.rst", "trainings/material/soup/python/swdev/pip/screenplay.rst", "trainings/material/soup/python/swdev/pip/slides.rst", "trainings/material/soup/python/swdev/pip/topic.rst", "trainings/material/soup/python/swdev/pypi.rst", "trainings/material/soup/python/swdev/pytest/group.rst", "trainings/material/soup/python/swdev/pytest/intro.rst", "trainings/material/soup/python/swdev/unittest.rst", "trainings/material/soup/python/swdev/venv/screenplay.rst", "trainings/material/soup/python/swdev/venv/slides.rst", "trainings/material/soup/python/swdev/venv/topic.rst", "trainings/material/soup/unittest/group.rst", "trainings/material/soup/unittest/unittest_gtest_basics/code/index.rst", "trainings/material/soup/unittest/unittest_gtest_basics/screenplay.rst", "trainings/material/soup/unittest/unittest_gtest_basics/topic.rst", "trainings/material/soup/unittest/unittest_gtest_cmake/screenplay.rst", "trainings/material/soup/unittest/unittest_gtest_cmake/topic.rst", "trainings/material/soup/unittest/unittest_gtest_fixture/code/index.rst", "trainings/material/soup/unittest/unittest_gtest_fixture/screenplay.rst", "trainings/material/soup/unittest/unittest_gtest_fixture/topic.rst", "trainings/org.rst", "trainings/repertoire/_hidden/kettner-lfs-2013-09-16.rst", "trainings/repertoire/bash.rst", "trainings/repertoire/c-like/c.rst", "trainings/repertoire/c-like/c-advanced.rst", "trainings/repertoire/c-like/cxx.rst", "trainings/repertoire/c-like/cxx11.rst", "trainings/repertoire/c-like/index.rst", "trainings/repertoire/cmake.rst", "trainings/repertoire/design-patterns/design-patterns.rst", "trainings/repertoire/embedded.rst", "trainings/repertoire/kernel-programming-basics.rst", "trainings/repertoire/linux-basics.rst", "trainings/repertoire/make.rst", "trainings/repertoire/python/advanced.rst", "trainings/repertoire/python/basics.rst", "trainings/repertoire/python/herdt.rst", "trainings/repertoire/raspi-hands-on.rst", "trainings/repertoire/svn.rst", "trainings/repertoire/sysprog/basics.rst", "trainings/repertoire/sysprog/fortgeschrittenes.rst", "trainings/repertoire/sysprog/index.rst", "trainings/repertoire/sysprog/multithreading.rst", "trainings/repertoire/sysprog/network.rst", "trainings/repertoire/unittests.rst"], "titles": ["Kontakt", "Curriculum Vitae", "\u00dcber Mich", "Projekte", "Skills", "Angebot: In-House Schulungen", "Course Material", "Einleitung", "Python Basics (2021-xx-xx - 2021-yy-yy)", "Programmierung Grundlagen (Jupyter Notebook)", "Details", "Course List", "Templates for Course Descriptions", "About This Site", "OpenTraining", "Draft Topics", "Miscellaneous", "S5 Integration", "S5 Slide Tests", "Level 1 Heading", "Screencasts", "Topics to be Written", "Netidee F\u00f6rderantrag", "Netidee F\u00f6rderantrag: OpenTraining", "Video Screenplay", "Use Case: Custom Training, Subtract Known", "Use Case: Calculate Minimum Training Duration", "Use Cases", "Use Case: Use Training Material From Other Sites", "Use Case: Menu to Choose From", "Use Case: Slide Show Material as Plain-Text Files", "Sending A V4L Camera Device Output Over SSH", "Emoji Codes (<code class=\"docutils literal notranslate\"><span class=\"pre\">sphinxemoji</span></code>)", "Recipes", "<code class=\"docutils literal notranslate\"><span class=\"pre\">isoamsa.txt</span></code>: Added Mathematical Symbols: Arrows", "<code class=\"docutils literal notranslate\"><span class=\"pre\">isoamsr.txt</span></code>: Added Mathematical Symbols: Relations", "<code class=\"docutils literal notranslate\"><span class=\"pre\">isonum.txt</span></code>: Added Mathematical Symbols: Binary Operators", "Layout Test Page", "<code class=\"docutils literal notranslate\"><span class=\"pre\">mmlalias.txt</span></code>: MathML aliases for entities from other sets", "reStructuredText Cheat Sheet", "Sphinxish", "Seminar on \u201cClean Code\u201d (2022-04-13)", "Live Hacking Before (Formal) Unit Testing", "Clean Code: Messages From The Book", "Live Hacking: Switch To <code class=\"docutils literal notranslate\"><span class=\"pre\">googletest</span></code>", "Is Software A Craft? Software Is A Craft!", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB::find()</span></code> Crashes If User Not Found", "Bugs", "Existing Files Are Overwritten", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB::read()</span></code>: What If Done Twice?", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB</span></code>: Alternative Output Format - CSV", "Features", "Search By Other Indexes", "Backlog: What Needs To Change, Or We Will All Die", "<code class=\"docutils literal notranslate\"><span class=\"pre\">BackingStore</span></code> Has Too Many Responsibilities \u27f6 Interface", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB</span></code> Has Too Many Responsibilities \u27f6 <code class=\"docutils literal notranslate\"><span class=\"pre\">BackingStore</span></code>", "Refactoring", "Load From BackingStore in Constructor", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB::{read,write}()</span></code>: <code class=\"docutils literal notranslate\"><span class=\"pre\">bool</span></code>, Really?", "GLT 2023 Submission: Pointless Blinking With Python, <code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> (and a Raspberry Pi of Course)", "GLT 2024 Submission: Pointless Blinking: Evolution", "Pointless Blinking With Python, <code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> (and a Raspberry Pi of Course)", "Installation Notes", "Submission: Pointless Blinking With Python, <code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> (and a Raspberry Pi of Course)", "Screenplay: Pointless Blinking With Python, <code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> (and a Raspberry Pi of Course)", "Hochk\u00f6nig", "Blog", "Sphinx", "C++", "C++: Building with CMake", "C++: Interfaces", "C++: OO Basics", "C++: Unit Testing", "Graph", "Embedded Computing 1", "Embedded Computing 2", "EX: Race Conditions", "EX: Avoiding Race Condition", "Git Introduction", "Embedded Computing 2019", "Linux", "Introduction to Linux and Unix", "Linux Hardware Device Management", "EX: Averaging Sensor", "EX: Averaging Sensor (parallel)", "EX: LED Temperature Display", "EX: Temperature Sensors", "GPIO", "Multithreading", "Avoiding Race Conditions: Semaphore/Mutex", "Communication: Waiting for Something", "Python Basics", "EX: Averaging Sensor, Display", "EX: Temperature Sensors", "Simple Web Programming", "Sensors Web Pages", "Python", "Embedded Computing 2020", "SS2022", "2022-03-08", "2022-03-10", "2022-03-10 (Homework until 2022-03-21)", "2022-03-21", "2022-03-22, 2022-03-24 (KU)", "2022-03-28", "2022-04-01", "SS2022: Logs", "WS2022", "FH Joanneum (Embedded Computing): WS2022/2023 (Questions About Code)", "FH Joanneum (Embedded Computing): WS2022/2023 (Yes/No Questions)", "Lab Exam 2023-01-17", "SS2023: Exam 2023-06-30 (Handout)", "SS2023: Exam 2023-06-30 (Solved)", "Exam: Embedded Computing 2 (2024-01-26)", "WS2023/2024: Exam 2024-02-02 (Sample)", "Exam Preparation WS2023/2024", "Questions 2024", "<code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code> Objects", "Parameter Passing", "SOLID: Hysteresis With Display", "SOLID: Sensor Has ID", "To Be Or Not To Be Virtual", "Working with Git In Our <code class=\"docutils literal notranslate\"><span class=\"pre\">FH-ECE21</span></code> Project", "Embedded Computing 2021", "SS2023", "(DONE) Boiling Pot (The Beginning)", "Boiling Pot: Basic Integration", "Boiling Pot: Display, And Status Reporting", "Boiling Pot: Full Integration (Display And IoT)", "(DONE) Data Logger", "Data Logger: CSV Sink", "Data Logger: Integration", "Data Logger: MQTT Sink", "Display Interface/Infrastructure", "WS2023/24: Group Project - Tasks", "<code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> Switch", "Python MQTT Subscriber", "Temperature Display: LED Via A PWM Controller", "(DONE) Sensor Interface", "(DONE) Onewire Sensor", "(DONE) Switch Interface", "SysFS GPIO Switch", "WS2023/24", "Embedded Computing (FH Joanneum Graz)", "Git Notes", "Work in Progress", "Packaging this Site on PyPI", "Audio Chip Bringup", "Get Debian 10 Kernel Config", "Finish: Debian Kernel Package etc.", "Yocto Kernel Bringup on Customer Hardware", "I2S Audio for a Kontron SMARC Module", "Dirty Upgrade Path", "Wait for Customer Hardware", "Extract Kernel from Intel Yocto BSP", "Python Training Improvements", "Creating Screencasts", "SEO", "Stacks (Hanging)", "Miscellaneous To Do", "Learning The Web", "Beagleboard: How to Repair NAND (also known as 40W)", "Porting to Linux (There\u2019s Always A Better Way)", "Saving Solid State Disk Life (Gentoo)", "\u201cWhy <code class=\"docutils literal notranslate\"><span class=\"pre\">ps</span></code> Sucks\u201d or \u201cCounting Memory Consumption\u201d", "Patching and Building the Fedora Kernel", "Adding a Custom Domain to a Github Pages Project Site", "Using Microsoft Teams on Linux", "Deploying Sphinx Generated Documentation to Github Pages", "Using BigBlueButton for Online Training", "Traunstein via Zierlersteig", "Grintovec (via Plan\u0161arsko Jezero, \u010ce\u0161ka Ko\u010da)", "How to Brick a \u20ac1399 Dell XPS 13", "Building A Cross Toolchain For The Raspberry Pi, Using <code class=\"docutils literal notranslate\"><span class=\"pre\">crosstool-ng</span></code>", "Posts", "Linux und Open Source", "Richtlinien zur Ver\u00f6ffentlichung von Kursmaterial", "Exercises", "Courses: Overview", "Qualivision, Z\u00fcrich, 1.10.2013", "Kursnotizen: Linux Embedded 2015-11-30", "Live Hacking", "Python Individualtraining (5 Tage, beginnend 28.10.2019)", "Goals of this Training", "Random Live Hacking", "Python (12.11.2019 - 14.11.2019 in Graz)", "Proposal", "IPC in Linux (10.1.2020 in Graz)", "\u00dcbung: handgestrickter String, um die Fallen von C++ lustvoll zu erleiden", "C++ f\u00fcr Embedded C Programmierer (30.3.2020 - 3.4.2020 Baden W\u00fcrttemberg)", "Installing <code class=\"docutils literal notranslate\"><span class=\"pre\">googletest</span></code> By Hand", "Software Setup, Build", "Argh: Using This Site With Visual Studio Code", "Code", "Python Grundlagen (13.5.2020 - 14.5.2020 bei einer Firma in Graz)", "Python Schulung 18. und 19.5.2020", "Code", "Python Individualtraining (18.5.2020 - 19.5.2020)", "Python Advanced (7.9.2020 - 10.9.2020)", "Python Basics (28.9.2020 - 30.9.2020)", "Iterables", "Python Basic and Advanced (19.10.2020 - 22.10.2020)", "Linux on Raspberry Pi", "Python Basics (23.11.2020 - 25.11.2020)", "Linux Basics (30.11.2020 - 3.12.2020)", "6 Grundlegende Sprachelemente", "Programmierung Grundlagen (13. und 14.1.2021)", "Programmierung Grundlagen (Jupyter Notebook)", "Python Basics (22.2.2021 - 24.2.2021)", "Linux Kernel Driver Development Basics (14.12.2020)", "Python Advanced", "2021-03-15", "Hallo Jupyter Notebook", "Python Basic and Advanced (22.3.2021 - 25.3.2021)", "Linux Basics, Shell Scripting (2021-03-29)", "Einleitung", "Programmierung Grundlagen (12. und 13.4.2021)", "Programmierung Grundlagen (Jupyter Notebook)", "Syntax etc.", "Python Grundlagen (2021-05-03 - 2021-05-05)", "Python Grundlagen (Jupyter Notebook)", "Das <code class=\"docutils literal notranslate\"><span class=\"pre\">with</span></code> Statement", "Python Advanced (2021-05-25 - 2021-05-27)", "Programmieren mit C (2021-06-14 - 2021-06-18)", "The C++ Programming Language (2021-07-12 - 2021-07-16)", "Programmierung Grundlagen, anhand von Python (2. und 3.8.2021)", "Datenstrukturen", "Compound Datatypes", "Read a Cleaned-Up SAP Export", "Python Grundlagen (2021-08-23 - 2021-08-25)", "Jupyter Notebook", "Initial Terminology", "Python Basics (2021-08-31 - 2021-09-01)", "Python Grundlagen (Jupyter Notebook)", "2021-11-17", "Python Basics (2021-11-17 - 2021-11-19)", "Python Grundlagen (Jupyter Notebook)", "Notebook", "Python Advanced (2021-12-01 - 2021-12-03)", "Python Grundlagen (Jupyter Notebook)", "C/C++ Programming (2021-12-06 - 2021-12-10, 2022-01-24 - 2022-02-04)", "Programmierung Grundlagen, anhand von Python (2022-01-17 - 2022-01-10)", "2022-01-17", "Programmierung Grundlagen (Jupyter Notebook)", "Datatypes", "Python Basics (2022-02-23 - 2022-02-25)", "Jupyter Notebook", "Wiederholung", "Python Advanced (2022-03-15 - 2022-03-17, 2022-03-31)", "Jupyter Notebook", "Hello World", "Python (2022-03-23, 2022-03-30, 2022-04-19 - 2022-03-21)", "Jupyter Notebook", "Programmierung Grundlagen, anhand von Python (2022-04-05 - 2022-04-08)", "BlahBlah", "Programmierung Grundlagen (Jupyter Notebook)", "Python Basics (2022-04-25 - 2022-04-27)", "BlahBlah", "Python Grundlagen (Jupyter Notebook)", "Python (2022-05-02 - 2022-05-05)", "Hello Jupyter Notebook", "Python Grundlagen (Jupyter Notebook)", "Python Advanced (2022-05-16 - 2022-05-18)", "Assert", "Python Grundlagen (Jupyter Notebook)", "Vorbesprechung 2022-05-11", "C++: A New Language Starting In 2011", "C++: A New Language Starting In 2011", "Linux Basics (2022-10-03 - 2022-10-05)", "C++: A New Language Starting In 2011 (2022-10-11 - 2022-10-13)", "Design- and Architectural Patterns With C++ (2022-10-24 - 2022-10-26)", "Python: Tour-De-Force (2022-11-07 - 2022-11-10, 2022-12-01)", "Python (2022-10-17)", "Python Grundlagen (Jupyter Notebook)", "Python (2022-11-16 - 2022-11-18)", "Python (2022-11-16 - 2022-11-18)", "Python Grundlagen (Jupyter Notebook)", "Linux Basics (2023-01-23 - 2023-01-26)", "Embedded Linux Systems Programming (2023-02-13 - 2023-02-17)", "Whetting Your Appetite (Jupyter Notebook)", "Whetting Your Appetite (Livehacking Demo)", "Python For SAP Developers (2023-03-13 - 2023-03-15)", "2023-03-13", "Python For SAP Developers (Jupyter Notebook)", "Original Agenda: Python For SAP Developers (2023-03-13 - 2023-03-15)", "Hacking About On A SAP Test Dataset", "Some Usecases On A Test Dataset From SAP", "C++ For Embedded Developers (2023-03-20 - 2023-03-23)", "Clean Code Development With Python (2023-03-28 - 2023-03-29)", "C++ For Embedded Developers (2023-04-18 - 2023-04-20)", "Agenda: Python Advanced (2023-04-24 - 2023-04-26)", "Python Advanced (2023-04-24 - 2023-04-26)", "Jupyter Notebook: Python Advanced (2023-04-24 - 2023-04-26)", "Jupyter Notebook (Structure): Python Advanced (2023-04-24 - 2023-04-26)", "Agenda: Python Basics (2023-05-15 - 2023-05-17)", "Python Basics (2023-05-15 - 2023-05-17)", "Python Basics (2023-05-15 - 2023-05-17)", "Python Grundlagen (Jupyter Notebook)", "Agenda: Linux Basics (2023-05-23 - 2023-05-25)", "Linux Basics (2023-05-23 - 2023-05-25)", "Agenda: Python Basics (2023-06-20 - 2023-06-22)", "Python Basics (2023-06-20 - 2023-06-22)", "Python Basics (2023-06-20 - 2023-06-22)", "Python Basics (Jupyter Notebook)", "Agenda: CMake (2023-07-03)", "CMake: An Introduction (2023-07-18)", "Python Advanced (2023-09-25 - 2023-09-27)", "Python Advanced (2023-09-25 - 2023-09-27)", "Python Advanced, Jupyter Notebook (2023-09-25 - 2023-09-27)", "Python Advanced (2023-10-09 - 2023-10-11)", "Python Advanced (2023-10-09 - 2023-10-09)", "Python Advanced, Jupyter Notebook (2023-09-25 - 2023-09-27)", "Agenda: Python Advanced (2023-10-24 - 2023-10-26)", "Python Advanced (2023-10-24 - 2023-10-26)", "Jupyter Notebook: Python Advanced", "Jupyter Notebook (Structure): Python Advanced (2023-10-24 - 2023-10-26)", "Agenda: Python Advanced (2023-11-22 - 2023-11-24)", "Python Advanced (2023-11-22 - 2023-22-24)", "Jupyter Notebook: Python Advanced (2023-11-22 - 2023-11-24)", "Jupyter Notebook (Structure): Python Advanced (2023-11-22 - 2023-11-24)", "Agenda: CMake (2023-11-27)", "CMake: An Introduction (2023-11-27)", "Agenda: Python Basics (2023-11-29 - 2023-12-01)", "Python Basics (2023-11-29 - 2023-12-01)", "Python Basics (2023-11-29 - 2023-12-01)", "Python Basics (Jupyter Notebook)", "Agenda: C++: Advanced Topics", "C++: Advanced Topics (2023-12-04 - 2023-12-06)", "Agenda: Python Basics (2023-12-18 - 2023-12-20)", "Python Basics (2023-12-18 - 2023-12-20)", "Python Basics (2023-12-18 - 2023-12-20)", "Python Basics (2023-12-18 - 2023-12-20)", "C++ For Embedded Developers (Beginning of 2023)", "Python/SAP", "Agenda: Python Advanced (2024-01-15 - 2024-01-17)", "Python Advanced (2024-01-15 - 2024-01-17)", "Python Advanced (2023-01-15 - 2024-01-17)", "Python Advanced (2024-01-15 - 2024-01-17)", "Agenda: Python Basics (2024-01-29 - 2024-01-31)", "Python Basics (2024-01-29 - 2024-01-31)", "Python Basics (2024-01-29 - 2024-01-31)", "Jupyter Notebook: Python Basics (2024-01-29 - 2024-01-31)", "Screenplay Checker", "GPIO: Blinklicht", "GPIO: Blinklicht Interface", "GPIO: Object Oriented Blinklicht", "GPIO: Blinklicht Unittests", "ECE19: Exercises and Custom Topics", "Reading a File", "2021-05-20 (G2)", "2021-05-21", "Tuple Unpacking", "Basics", "An Example", "Cloud Computer, SSH Login", "Formalit\u00e4ten", "Embedded Computing 1 (ECE 19)", "Daily Log", "Embedded Computing 1 (Deutsch)", "Embedded Computing 1 (English)", "Plan for Summer 2021", "2021-10-07", "2021-10-12 (Bringing Newcomers Up-to-Date)", "2021-10-28", "2021-11-15", "2021-11-29", "2021-12-1{4,5}", "2022-01-10", "2022-01-12", "2022-02-15", "Agenda/Log", "Embedded Computing 2 (ECE 19)", "Exam Material Overview", "Embedded Computing 1+2, ECE 19", "Details", "Bisher Gehaltene", "Training Material: Overview and Download", "Installation", "Introduction", "Hello World", "Variables and Arithmetic", "Exercise: A Better Fahrenheit Table", "<code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code> Loops", "Exercise: Fahrenheit Table Using <code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code>", "Symbolic Constants", "Exercise: Fahrenheit Table Using Macros", "Character I/O", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">wc</span></code> For The Poor", "Arrays", "Exercise: Character Histogram", "Functions", "Exercise: Forward Declaration", "Character Arrays", "Exercise: Read Line Into String from <code class=\"docutils literal notranslate\"><span class=\"pre\">stdin</span></code>", "Lifetime of Variables", "Introduction", "Type System", "Variable Names", "Data Types, Sizes", "Constants", "Variable Definitions", "Arithmetic Operators", "Relational and Logical Operators", "Type Conversions", "Increment, Decrement", "Exercise: Copy and Reduce String", "Bit-Operators", "Assignment with Calculation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">?:</span></code> - Conditional Expression", "Precedence, Associativity", "Types, Operators, Expressions", "Statements and Blocks", "<code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code> - <code class=\"docutils literal notranslate\"><span class=\"pre\">else</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">else</span></code> - <code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">switch</span></code>", "Loops: <code class=\"docutils literal notranslate\"><span class=\"pre\">while</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code>", "Loops: <code class=\"docutils literal notranslate\"><span class=\"pre\">do</span> <span class=\"pre\">-</span> <span class=\"pre\">while</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">break</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">continue</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">goto</span></code> and Labels", "Program Flow", "Basics", "Extern/Global Variables", "Header Files", "Static Variables", "C Preprocessor: Basics", "C Preprocessor: More", "Functions and Program Structure", "Pointers and Addresses", "Pointers as Function Parameters", "Exercise: Function That Swaps Two Variables", "Pointers and Arrays", "Commandline Arguments", "Pointers and Arrays", "<code class=\"docutils literal notranslate\"><span class=\"pre\">struct</span></code>: Basics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">struct</span></code>: Functions", "<code class=\"docutils literal notranslate\"><span class=\"pre\">typedef</span></code>: Type Alias", "Structures", "Dynamic Memory", "Singly Linked List", "Memory", "Volatile", "Compiler Intrinsics", "Alignment", "Advanced Language Features", "Sanity and Readabilty", "Know Your Integers", "Discrete Values - <code class=\"docutils literal notranslate\"><span class=\"pre\">enum</span></code>", "Visibility - <code class=\"docutils literal notranslate\"><span class=\"pre\">static</span></code>", "Correctness - <code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code>", "Struct Initialization", "Explict Type Safety", "<code class=\"docutils literal notranslate\"><span class=\"pre\">valgrind</span></code>", "Program Sanity", "Optimization", "Optimizations: Compute Bound Code", "Optimizations: Memory Optimizations", "Performance", "Introduction", "GNU Profiler - <code class=\"docutils literal notranslate\"><span class=\"pre\">gprof</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">callgrind</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">oprofile</span></code>", "Profiling", "The C Programming Language", "Messages From The Book", "What\u2019s There? What Have We Accomplished?", "Is Software A Craft? Software Is A Craft! \u27f6 <em>Clean Code</em>", "A Typical Project (Livehacking Screenplay: My Own Bookkeeping Effort)", "Basics: Boilerplate, And Executables", "\u201cConfigured\u201d Header Files", "C++, Debug/Release, CMake \u201cProgramming\u201d, Rants", "External Dependencies", "CMake: An Introduction", "Installation (\u201cDeployment\u201d)", "Libraries, And <em>Dependencies</em>", "Optional Code, Approach 1: Optional <code class=\"docutils literal notranslate\"><span class=\"pre\">blacklist</span></code>, C Macro  (Global Flags)", "Optional Code, Approach 2: Pushing Optionality Down In Module <em>Interface</em>", "Optional Code: Problem Definition, <code class=\"docutils literal notranslate\"><span class=\"pre\">OPTION()</span></code>", "Shared Libraries (Preview)", "Structure - Subdirectories, Dependencies, and Include Paths", "Targets, Properties, And More", "Running Tests", "C++ Code", "Abstract Factory", "Adapter", "Command", "SocialDB Source Code", "Composite", "Decorator", "Design Patterns With C++", "Case Study/Livehacking: Heating Control (Reading Sensors)", "Interpreter", "Observer", "OO Design Principles", "Proxy", "Exercise Foundation: <code class=\"docutils literal notranslate\"><span class=\"pre\">Sensor</span></code> Hierarchy", "Singleton", "UML Short Introduction", "Exercise: Abstract Factory", "Exercise: Adapter", "Exercise: Command", "Exercise: Composite", "Exercise: Decorator", "Exercises: Design Patterns", "Exercise: Interpreter Combined With Adapter (And A Proxy)", "Exercise: Arithmetic Expression Interpreter", "Exercise: Adapter", "Exercise: Proxy (Remote Thermometer)", "Exercise: Proxy (Rounding Thermometer)", "Exercise: Singleton (Flexible)", "Exercise: Singleton (Flexible <em>And</em> Strict)", "Exercise: Singleton (Inflexible)", "Solution: Abstract Factory", "Solution: Adapter", "Solution: Command", "Solution: Composite", "Solution: Decorator", "Solutions", "Solution: Interpreter Combined With Adapter (And A Proxy)", "Solution: Arithmetic Expression Interpreter", "Solution: Observer", "Solution: Proxy (Remote Thermometer)", "Solution: Proxy (Rounding Thermometer)", "Solution: Singleton (Flexible)", "Solution: Singleton (Flexible <em>And</em> Strict)", "Solution: Singleton (Inflexible)", "Exercise (FH): Introducing a Sensor Class", "Exercise (FH): Extract Measurement Loop Into Function", "Exercise (FH): Replace Sensor", "Exercise (FH): Write A Sensor Class: <code class=\"docutils literal notranslate\"><span class=\"pre\">RandomSensor</span></code>", "FH Sensor OO (First Try)", "C++ Exercises", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">LEDStripeDisplay_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">Hysteresis_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">AveragingSensor_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">ConstantSensor_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">MockSensor_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">RandomSensor_nopoly</span></code> (Non-Polymorphic)", "Exercise: Mocking Switch (Non-Polymorphic)", "OO Basics, Interfaces (Shapes)", "Working On Exercise Projects", "Exercise: Sensor Interface", "Exercise: OneWire Sensor Factory", "Exercise: OneWire Sensor Class", "Exercise: Algorithms", "Exercise: Generic Filter", "Exercise: Filter Elements Greater Than 10", "Exercise: Filter Odd Elements", "C++ Exercises: Standard Template Library", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::map&lt;&gt;</span></code>", "Exercises: Sensor Repository (<code class=\"docutils literal notranslate\"><span class=\"pre\">std::map</span></code>)", "Insert - Not Overwriting Existing Elements", "Insert - Sunny Case", "Lookup - Not Found", "Lookup - Sunny Case", "Memory Leaks?", "Remove - Not Found", "Remove - Sunny Case", "<code class=\"docutils literal notranslate\"><span class=\"pre\">.size()</span></code> Is <code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code>", "Exercise: Uniquify A Sequence", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector&lt;&gt;</span></code>", "C++: TODO List", "Code: C++: Class Templates", "Screenplay: C++: Class Templates", "C++: Class Templates", "Code: C++: Dynamic Memory", "Screenplay: C++: Dynamic Memory", "C++: Dynamic Memory", "Code: C++: Global Objects Initialization", "Screenplay: C++: Global Objects Initialization", "C++: Global Objects Initialization", "Code: C++: Inheritance, Interfaces, <code class=\"docutils literal notranslate\"><span class=\"pre\">virtual</span></code>", "Screenplay: C++: Inheritance, Interfaces, <code class=\"docutils literal notranslate\"><span class=\"pre\">virtual</span></code>", "C++: Inheritance, Interfaces, <code class=\"docutils literal notranslate\"><span class=\"pre\">virtual</span></code>", "Code: C++: Ownership/RAII", "Screenplay: C++: Ownership/RAII", "C++: Ownership/RAII", "Code: C++: STL Containers (Intro)", "Screenplay: C++: STL Containers (Intro)", "C++: STL Containers (Intro)", "Code: C++: Templates vs. Interfaces", "Screenplay: C++: Templates vs. Interfaces", "C++: Templates vs. Interfaces", "C++: Miscellaneous Live-Hacking", "Introduction", "Object Oriented Programming In Good Ol\u2019 C", "Copy Constructor, Assignment Operator", "Classes and Objects", "Custom Constructor", "Default Constructor", "More Constructors, Destructors", "Data Encapsulation", "Constructors: Member Initialization", "Object Copy (And Resource Management): There Be Dragons", "Overloading", "Methods", "<code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">this</span></code>", "References", "<code class=\"docutils literal notranslate\"><span class=\"pre\">static</span></code> Methods", "<code class=\"docutils literal notranslate\"><span class=\"pre\">static</span></code> Member Variables", "Operator Overloading", "Exercise (FH): <code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">cuboid</span></code>", "Exercise (FH): <code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">point</span></code>", "Exercise (FH): <code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">point3d</span></code>", "Exercise (FH): <code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">rectangle</span></code>", "Functions and Methods", "Basics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">try</span></code> - <code class=\"docutils literal notranslate\"><span class=\"pre\">catch</span></code>", "Exceptions", "Function Templates", "Class Templates", "C++ Template Basics", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::copy&lt;&gt;()</span></code> From <code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;algorithm&gt;</span></code>", "Screenplay: Pointer Arithmetic, And Algorithms", "Screenplay: Pointer Arithmetic Basics", "Screenplay: Pointer Difference", "Screenplay: Out Of Range Errors", "Standard Template Library: Basics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector</span></code> (And <code class=\"docutils literal notranslate\"><span class=\"pre\">std::copy()</span></code>)", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">std::copy()</span></code>", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector</span></code> Basics", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector</span></code>, And Pointer Arithmetics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">binary_search&lt;&gt;</span></code>: On Sorted Sequence", "<code class=\"docutils literal notranslate\"><span class=\"pre\">copy&lt;&gt;</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find&lt;&gt;</span></code>: Sequential Search, by Equality", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find_if&lt;&gt;</span></code>: Sequential Search, Customizable", "<code class=\"docutils literal notranslate\"><span class=\"pre\">for_each&lt;&gt;</span></code>", "Algorithms", "<code class=\"docutils literal notranslate\"><span class=\"pre\">lower_bound&lt;&gt;</span></code>: On Sorted Sequence", "<code class=\"docutils literal notranslate\"><span class=\"pre\">reverse&lt;&gt;</span></code>: Reversing In-Place", "<code class=\"docutils literal notranslate\"><span class=\"pre\">reverse_copy&lt;&gt;</span></code>: Copying <em>and</em> Reversing", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sort&lt;&gt;</span></code>", "Sequential Containers", "Sequential Containers", "<code class=\"docutils literal notranslate\"><span class=\"pre\">list&lt;&gt;</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">vector&lt;&gt;</span></code>", "Associative Containers", "Associative Containers", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::map</span></code>", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::map</span></code> Initialization And Inserting", "Screenplay: Inserting Elements", "Screenplay: Removing (Erasing) Elements", "Screenplay: Searching", "<code class=\"docutils literal notranslate\"><span class=\"pre\">multimap&lt;&gt;</span></code>", "Allocator Basics", "Allocators", "STL: Exercises", "Exercise: Reverse a String", "Exercise: Reverse A String", "Solution: Reverse a String", "Standard Template Library", "Dynamic Memory (To Be Done)", "Dynamic Memory Allocation, Resource Management", "Inheritance Basics", "Destructors And Inheritance", "Inheritance And Object Oriented Design", "C++ \u201cInterfaces\u201d", "<em>Polymorphic</em> Usage Of Objects", "Inheritance: <code class=\"docutils literal notranslate\"><span class=\"pre\">private</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">protected</span></code> (Implementation Inheritance)", "Virtual Destructors", "Virtual Methods", "The Standard Library: Miscellaneous Topics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::string</span></code>", "Exercise: Paint the American Flag Onto Standard Output", "FH/Moodle Quiz: C++", "Exercises: Miscellaneous", "Exercise: Sum of Integers Coming From <code class=\"docutils literal notranslate\"><span class=\"pre\">cin</span></code>", "Exercises: User Database", "Exercise: Access Methods for Members", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code> Members", "Exercise: Use <code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code>", "Exercise: Default Constructor (was: Arrays of Objects)", "Exercise: Simple Method (Users Age By <code class=\"docutils literal notranslate\"><span class=\"pre\">n</span></code> Years)", "Exercise: Transform <code class=\"docutils literal notranslate\"><span class=\"pre\">struct</span> <span class=\"pre\">User</span></code> Into A Class", "Exercise: Insert a User into UserDB", "Exercise: Search a User By Lastname (<code class=\"docutils literal notranslate\"><span class=\"pre\">std::find_if</span></code>)", "Exercise: Search, \u201cUser Not Found\u201d Exception", "Exercise: Search a User By Lastname", "Exercise: Use std::vector in UserDB", "C++", "Introduction", "History, Background", "A Live-Hacked Tour Around The New C++", "Strongly Typed <code class=\"docutils literal notranslate\"><span class=\"pre\">enum</span></code>", "Brace Initialization (Uniform Initialization)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::initializer_list</span></code>: Brace Initialization, Implementor\u2019s View", "Brace Initialization: Introduction", "Brace Initialization: A Mess", "Delegating Constructor", "<code class=\"docutils literal notranslate\"><span class=\"pre\">constexpr</span></code>", "Afterword, Further Reading", "Move Semantics, Rvalue References", "<code class=\"docutils literal notranslate\"><span class=\"pre\">SmartPtr</span></code> With Move Semantics", "Implementing Move Semantics (<code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">String</span></code>, Live Hacked)", "Using Move Semantics In Own Code", "Lvalues, Rvalues, And Moving", "Miscellaneous", "Duck Typing (Err, <code class=\"docutils literal notranslate\"><span class=\"pre\">auto</span></code>) Without A Duck", "Concepts", "Concepts: Overview", "<code class=\"docutils literal notranslate\"><span class=\"pre\">toolcase-1-conceptless.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">toolcase-2-conceptless-error.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">toolcase-3-concept-integral.cpp</span></code>", "Concepts: Links", "Writing Your Own Concepts", "<code class=\"docutils literal notranslate\"><span class=\"pre\">example-1-good-old-func.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">example-2-need-template.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">example-4-concept-has-size.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">example-5-concept-index-ret-double.cpp</span></code>", "Coroutines", "Coroutines: An Overview", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fibo-generator.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fibonacci.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">generator.h</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">generator-hello.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">simplest.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">suspend.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">suspend-iter.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">suspend-next.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">=</span> <span class=\"pre\">default</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">=</span> <span class=\"pre\">delete</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">final</span></code>", "New Language Features", "Lambda", "Lambda", "Lambda: More Capturing", "Live Hacking: Handwritten Functors (Too Much Boilerplate)", "Live Hacking: Handwritten Functors, And Capturing By Reference (Pitfalls)", "Modules", "<code class=\"docutils literal notranslate\"><span class=\"pre\">override</span></code>", "Range Based <code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code> Loops: Introduction", "Case Study: Range Based <code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code> On <code class=\"docutils literal notranslate\"><span class=\"pre\">std::map</span></code>", "Ranges And Views: Good Or Bad?", "Ranges", "Ranges: Overview", "Ranges And Views: Links", "Tuple Unpacking (Err, Structured Binding)", "Smart Pointers: Closing Words", "Smart Pointers (<code class=\"docutils literal notranslate\"><span class=\"pre\">std::unique_ptr</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">std::shared_ptr</span></code>)", "Introduction", "(Trying To) Handwrite A Smart Pointer Class in C++ Before C++11", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::shared_ptr</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::unique_ptr</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::weak_ptr</span></code>", "Perfect Forwarding", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::bind</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::function</span></code>", "Functions, Functions", "Threads Introduction", "Threads in C++", "Race Conditions", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::atomic</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::mutex</span></code> And Friends", "Scoped Locking", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::condition_variable</span></code> (Live Hacking Multithreaded Queue)", "Multithreading", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::promise</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">std::future</span></code> (And Some <code class=\"docutils literal notranslate\"><span class=\"pre\">std::chrono</span></code>) (Some Live Hacking)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::chrono</span></code>", "New-Style Union: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::variant</span></code>", "Miscellaneous", "CRTP", "std::vector&lt;&gt;: Allocators (<em>Very</em> Incomplete)", "Classic Virtual", "Embedded Problems? Code Bloat? Type Erasure? Solutions?", "Non-Virtual, But Related", "Type Erasure (Static vs. Dynamic Polymorphism), CRTP", "Unrelated (Duck-Typed)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::variant</span></code> (Automatic Virtual Dispatch Using Template Method)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::variant</span></code> (Manual Virtual Dispatch, Using <code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code>)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::variant</span></code> (Manual Virtual Dispatch, Using <code class=\"docutils literal notranslate\"><span class=\"pre\">std::visit</span></code>)", "Why Replace <code class=\"docutils literal notranslate\"><span class=\"pre\">virtual</span></code>?", "Drafts", "Exercise: Bag Of Items, By Copy", "Exercise: Bag Of Items, By Shared Reference", "Exercise: Bag Of Items, By Unique Reference", "Exercises", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::filesystem</span></code>", "The New C++ (11-\u2026)", "Generated Topic Graph", "Topics", "Modern Character Devices (Screenplay)", "Modern Character Devices (Slideshow)", "Modern Character Devices", "File Operations on Character Devices (Screenplay)", "File Operations on Character Devices (Slideshow)", "File Operations on Character Devices", "Coding: First Functionality (Slideshow)", "Coding: First Functionality", "Character Device Basics (Livehacking Screenplay)", "Character Device Basics (Slideshow)", "Character Device Basics", "Coding: Multiple Devices (Slideshow)", "Coding: Multiple Devices", "Coding: Refactoring (Screenplay)", "Coding: Refactoring (Slideshow)", "Coding: Refactoring", "DMA (Slideshow)", "DMA", "Building a Fedora Kernel (Screenplay)", "Fedora: Building the Kernel", "Fedora: Building External Kernel Modules (Screenplay)", "Fedora: Building External Kernel Modules", "Linux Kernel Driver Development", "Module Loading, Hello World (Slideshow)", "Module Loading, Hello World", "Coding: Raspi GPIO Interrupts (Slideshow)", "Coding: Raspi GPIO Interrupts", "Interrupts (Slideshow)", "Interrupts", "IO Memory (Slideshow)", "IO Memory", "Dynamic Memory: <code class=\"docutils literal notranslate\"><span class=\"pre\">kmalloc()</span></code> (Slideshow)", "Dynamic Memory: <code class=\"docutils literal notranslate\"><span class=\"pre\">kmalloc()</span></code>", "Doubly Linked Lists (Slideshow)", "Doubly Linked Lists", "Coding: Fix Race Condition (Mutex) (Slideshow)", "Coding: Fix Race Condition (Mutex)", "Mutex (and RT Mutex) (Slideshow)", "Mutex (and RT Mutex)", "Network Devices (Slideshow)", "Network Devices", "PCI (Slideshow)", "PCI", "Process vs.Atomic Context (Slideshow)", "Process vs.Atomic Context", "Rasperry Pi: Kernel Build", "Raspberry Pi: Building the Kernel", "Sample Code Maintenance", "Coding: Fix <em>Sleep While Atomic</em> (Slideshow)", "Coding: Fix <em>Sleep While Atomic</em>", "Spinlock (vs. Mutex) (Slideshow)", "Spinlock (vs. Mutex)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">dup()</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">fork()</span></code>, and Reference Counting (Stub)", "Coding: Timed Event (Slideshow)", "Coding: Timed Event", "Timer Management (Slideshow)", "Timer Management", "To Do List", "Accessing Userspace Memory (Screenplay)", "Accessing Userspace Memory (Slideshow)", "Accessing Userspace Memory", "Waiting for Something (Screenplay)", "Waiting for Something (Slideshow)", "Waiting for Something", "Workqueue (Screenplay)", "Workqueue (Slideshow)", "Workqueue", "Exercises: Archiving And Compression", "Archiving and Compression", "<code class=\"docutils literal notranslate\"><span class=\"pre\">gzip</span></code>", "Archiving and Compression", "<code class=\"docutils literal notranslate\"><span class=\"pre\">tar</span></code>", "Exam (ECE/SS2022/G1): Do A Lot With Files And Directories", "Exam (ECE/SS2022/G2): Do A Lot With Files And Directories", "Exercises/Exams: Linux Basics", "Linux Basics", "Everything Is A File (Live Demo)", "Environment (Variables)", "FH/Moodle Quiz: Linux Basics", "Introduction: Concepts and Terminology", "Login? What Is That?", "Overview", "Processes, Scheduling, Address Spaces", "Process Hierarchy (Parent, Child Process)", "Windows Subsystem for Linux (WSL)", "Exercises: IO-Redirection, Pipes", "I/O Redirection And Pipes", "I/O Redirection", "I/O Redirection: Swap <code class=\"docutils literal notranslate\"><span class=\"pre\">stdout</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">stderr</span></code>", "Pipes", "Permissions: Mode, User and Group Ownership", "Exercise: Determine Your User Credentials", "FH/Moodle Quiz: Permissions", "FH/Moodle Quiz: Permissions", "Exercises: File System Permissions", "Exercise: Create Private Directory", "Question: Private Directory", "Exercise: Create Public Directory", "Question: Public Directory", "Exercise: Create Group-Shared File", "File System Permissions", "SetUID Programs: <code class=\"docutils literal notranslate\"><span class=\"pre\">passwd</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">sudo</span></code>, \u2026", "SetUID: Live Demo", "Ugly Hack: Sticky Bit", "Default Permissions: <code class=\"docutils literal notranslate\"><span class=\"pre\">umask</span></code>", "Commandline", "Shell Configuration File: <code class=\"docutils literal notranslate\"><span class=\"pre\">~/.bashrc</span></code>", "Copying: <code class=\"docutils literal notranslate\"><span class=\"pre\">cp</span></code>", "Current Working Directory", "Exercise: Copy Directory Tree", "Exercise: Copy Files", "Exercise: Create Files (I/O Redirection)", "Exercise: Move Files", "Exercises: Create/Copy/Move/Remove", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">mkdir</span></code>", "Exercise: Funny Stuff", "Exercise: Remove Directory Tree", "Exercise: Verify, Repeat", "FH/Moodle Quiz: Shell", "The Shell - Exercises", "Exercise: File Types in <code class=\"docutils literal notranslate\"><span class=\"pre\">/dev</span></code>", "Exercise: Size of <code class=\"docutils literal notranslate\"><span class=\"pre\">/etc/passwd</span></code>", "Exercises: The <code class=\"docutils literal notranslate\"><span class=\"pre\">ls</span></code> Command", "Exercise: Permissions of Home Directory", "Creating And Removing Files and Directories", "The Shell (Bash - \u201cBourne Again Shell\u201d)", "Symbolic Links, Hard Links", "Directory Listings: The <code class=\"docutils literal notranslate\"><span class=\"pre\">ls</span></code> Command", "Moving and Renaming: <code class=\"docutils literal notranslate\"><span class=\"pre\">mv</span></code>", "Absolute and Relative Paths", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cat</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cut</span></code>", "Exercises: Inspecting Text Files", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">grep</span></code>", "Tools: Inspecting Text Files", "<code class=\"docutils literal notranslate\"><span class=\"pre\">head</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">tail</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">less</span></code>", "Overview", "Drafts", "Yocto", "Linux", "Controlling a Brushless Motor With Raspberry Pi", "CAN/Linux Basics", "CAN Interfaces", "Programming", "Hardware, Kernel", "CAN Bus With Linux And Python", "Linux Hardware Interfaces", "Linux and I2C (using LM73 Temperature Sensor as Slave)", "PWM Userspace Interface (using PCA9685)", "Linux and OneWire (using DS18B20 Temperature Sensor as Slave)", "SSH: Basics", "Exercise: Copy a File To Remote Machine, And Verify", "Exercise: Copy a Tree To Remote Machine (And Adjust Permissions)", "Exercises: SSH", "Exercise: Create SSH Key Pair", "SSH: Secure Shell", "SSH: Public Key Authentication", "SSH: Links", "SSH: Port Forwarding", "SSH: Secure Copy (<code class=\"docutils literal notranslate\"><span class=\"pre\">scp</span></code>)", "SSH File System (<code class=\"docutils literal notranslate\"><span class=\"pre\">sshfs</span></code>)", "Error Handling", "Linux Systems Programming: Basics", "System Calls vs. Library Functions", "Blocking I/O: What is That? (\u201cEverything is a file\u201d)", "Blocking I/O (On A File): What is That?", "Blocking I/O: On A Network Socket", "Blocking I/O: On A Timer? WTF?", "Blocking I/O: What Is That?", "File I/O: Basics", "Exercise: Copy A File", "Exercise: Create File With Hole", "Duplicating (Whats Going On?)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">O_CREAT</span></code>: Creating A File", "<code class=\"docutils literal notranslate\"><span class=\"pre\">O_EXCL</span></code>: Creating A File, But Failing If It Already Exists", "<code class=\"docutils literal notranslate\"><span class=\"pre\">O_RDONLY</span></code>: Reading a File", "<code class=\"docutils literal notranslate\"><span class=\"pre\">O_WRONLY</span></code>: Writing A File (Which Must Exist)", "Exercise: Read Temperature From Onewire Sensor", "File I/O", "Miscellaneous", "Linux Systems Programming", "Get Value Of GPIO", "Introductory Live Hacking, Hardware-Wise (<code class=\"docutils literal notranslate\"><span class=\"pre\">sysfs</span></code> GPIO)", "Intro: <code class=\"docutils literal notranslate\"><span class=\"pre\">sysfs</span></code> GPIO", "Interrupts In Userspace", "Basics", "Thread Life Cycle", "Thread Creation, Race Condition", "Synchronization", "Mutex: Solve Load/Modify/Store Conflict", "Communication: Condition Variable", "Condition Variable: Message Queue", "Miscellaneous", "Last Warning", "POSIX Threads", "Trylock/islocked", "Process: Arguments, Exit Status", "Processes", "The Process Tree (And Environment, And <code class=\"docutils literal notranslate\"><span class=\"pre\">procfs</span></code>)", "Scheduling (and Multitasking)", "Scheduling", "Tasks? Processes? Threads?", "Scheduling: Exam Questions", "Realtime", "Realtime API", "Wakeup Latency, CPU Frequency (Gotcha)", "Code: Sysprog: Event Driven Programming", "Screenplay: Sysprog: POSIX IPC", "Sysprog: Events", "Code: Sysprog: POSIX IPC", "Screenplay: Sysprog: POSIX IPC", "Slides: Sysprog: POSIX IPC", "Sysprog: POSIX IPC", "Code: Sysprog: Signals", "Screenplay: Sysprog: Signals", "Slides: Sysprog: Signals", "Sysprog: Signals", "Toolchain: Basics", "CMake: Cross Build", "CMake: Local Build", "Cross Development", "Cross Development", "Exercise: Build Software Package (Cross, Raspberry)", "FH/Moodle Quiz: Toolchain", "Exercises: Toolchain", "Exercise: Build Software Package (Native)", "Exercise: Install And Check Raspberry Toolchain", "Toolchain, And Cross Development", "Case Study: Raspberry Toolchain", "Linaro Toolchain For The Pi (Defunct)", "Building A Cross Toolchain For The Raspberry Pi, Using <code class=\"docutils literal notranslate\"><span class=\"pre\">crosstool-ng</span></code>", "Building A Toolchain <em>On</em> Fedora <em>For</em> Ubuntu 18.04 (WSL)", "Cross Toolchain Setup", "Zooming In: Separate Compilation, and Linking <em>Statically</em>", "Shared Libraries (Shared Objects)", "Object Code Archives/Static Libraries", "Closures", "Comprehensions (List, Dictionary, Set)", "Context Managers: The <code class=\"docutils literal notranslate\"><span class=\"pre\">with</span></code> Statement", "Decorators", "Exception Handling", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">exec()</span></code> Function", "Python: More Language Features", "Iteration, Comprehensions, and Generators", "Implementing A Fibonacci Number Generator", "The Iterator Protocol", "Iteration, Generators, And <code class=\"docutils literal notranslate\"><span class=\"pre\">yield</span></code>", "Iterating Intelligently: Generators, and the Iterator Protocol", "Modules and Packages", "Multithreading (Python)", "Multithreading", "Race Conditions, and Mutexes", "Multithreading: Exam Questions", "Abstract Base Classes (<code class=\"docutils literal notranslate\"><span class=\"pre\">abc</span></code>), And Duck Typing", "Classes And Dictionaries", "Constructor", "Object Oriented Programming", "Inheritance", "Methods", "<code class=\"docutils literal notranslate\"><span class=\"pre\">collections.namedtuple</span></code>", "Operator Overloading", "Properties", "<code class=\"docutils literal notranslate\"><span class=\"pre\">str()</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">repr()</span></code>", "Positional and Keyword Arguments", "Python: The Language Fundamentals", "Python Installation", "Blahblah", "Hello World", "Running Python Programs", "Syntax etc.", "Commandline Arguments (<code class=\"docutils literal notranslate\"><span class=\"pre\">sys.argv</span></code>)", "Variables", "Datatypes", "Compound Datatypes", "Boolean", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code> Statement", "<code class=\"docutils literal notranslate\"><span class=\"pre\">while</span></code> Loops", "Sequential Datatypes", "Indexing and Slicing", "<code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code> Loops", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">range</span></code> Function", "References, (Im)mutability", "Functions: Global and Local Scope (Livehacking Screenplay)", "Functions (Slideshow)", "Functions", "More About Strings", "String Formatting", "Miscellaneous String Methods", "More About Lists", "More About Dictionaries", "More About Sets", "File I/O", "Function Objects", "Commandline Parsing with <code class=\"docutils literal notranslate\"><span class=\"pre\">argparse</span></code>", "Python: Draft Topics", "Matplotlib", "Package Installation (<code class=\"docutils literal notranslate\"><span class=\"pre\">setuptools</span></code>)", "Exercise: Read CSV File, Write into Sqlite3 Database", "Exercise: Read CSV File", "CSV and Databases", "Exercises", "Exercise: Boolean Expressions", "Exercise: Even Numbers (<code class=\"docutils literal notranslate\"><span class=\"pre\">while</span></code>)", "Exercise: Greeting, Depending on Time of Day", "Exercises (External)", "Exercise: Determine Maximum of Two Numbers", "Exercise: Swap Two Variables", "Exercise: Username/Password Check", "Exercise: Digit to English Word", "Exercise: Dictionary: Errors?", "Exercise: Eliminate Empty/Comment-Only Lines", "Exercise: Generator: Fibonacci", "Exercise: Primeness (<code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code>)", "Exercises (Legacy)", "Exercise: Functions: <code class=\"docutils literal notranslate\"><span class=\"pre\">join()</span></code>", "Exercise: Determine Maximum of Two Numbers", "Exercise: Determine Maximum of Two Numbers (Function)", "Exercise: Mixed List (Executable Program)", "Exercise: Mixed List (Interactive Interpreter)", "Exercise: Parsing <code class=\"docutils literal notranslate\"><span class=\"pre\">/etc/passwd</span></code>", "Exercise: Primeness (Function)", "Exercise: Reverting Lines of a File", "Exercise: String (Right-Justify)", "Exercise: Function: <code class=\"docutils literal notranslate\"><span class=\"pre\">uniq()</span></code>", "Exercise: Generator: <code class=\"docutils literal notranslate\"><span class=\"pre\">uniq()</span></code>", "Exercise: Counting Lines, Words, Characters", "Exercise: Primeness (<code class=\"docutils literal notranslate\"><span class=\"pre\">while</span></code>)", "Sensors, And Data Acquisition (Exercise Series)", "Project Setup", "Exercise: Basic \u201cSensor\u201d", "Exercise: Read CSV File (<code class=\"docutils literal notranslate\"><span class=\"pre\">csv.dictreader</span></code>)", "Exercise: Refactoring - Extract CSV Reading Into Function (<code class=\"docutils literal notranslate\"><span class=\"pre\">csv.dictreader</span></code>)", "Exercise: Read CSV File (<code class=\"docutils literal notranslate\"><span class=\"pre\">csv.reader</span></code>)", "Exercise: Refactoring - Extract CSV Reading Into Function (<code class=\"docutils literal notranslate\"><span class=\"pre\">csv.reader</span></code>)", "User Database (Exercise Series)", "Exercise: MQTT: Publish User Records", "Exercise: Away From Raw Dictionaries", "Exercise: Convert User Record To JSON And Back", "Exercise: Refactoring - Extract Both CSV Formats Into Module", "Python: All Material, Interrelated", "Python Programming: From Absolute Beginner to Advanced Productivity", "Python Links", "Machine Learning, Artificial Intelligence", "K-Means", "Linear Regression: Running Code (<em>no Notebook!</em>)", "Weather History Dataset", "Linear Regression: Jupyter Notebook", "Linear Regression", "Machine Learning: Concepts and Terminology", "CSV Files", "DBAPI 2", "Databases", "DBAPI 2: PostgreSQL", "DBAPI 2: <code class=\"docutils literal notranslate\"><span class=\"pre\">sqlite3</span></code>", "Encoding", "Python: Miscellaneous Topics", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">import</span></code> Statement (incomplete)", "MQTT", "Pandas: Adding Rows", "Pandas: Basics (<code class=\"docutils literal notranslate\"><span class=\"pre\">DataFrame</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">Series</span></code>)", "Pandas: Filters", "Pandas", "Pandas: Selecting Rows (And Columns) With <code class=\"docutils literal notranslate\"><span class=\"pre\">iloc[]</span></code>", "Pandas: Indexes", "Pandas: Selecting Rows (And Columns) With <code class=\"docutils literal notranslate\"><span class=\"pre\">loc[]</span></code>", "Pandas: Adding/Modifying Columns", "XML: ElementTree (<code class=\"docutils literal notranslate\"><span class=\"pre\">etree</span></code>)", "Visual Studio Code for Python Programming", "Python: Project/Package Management", "Python Package Index (Livehacking Screenplay)", "Python Package Index (Slideshow)", "Python Package Index", "Packaging, PyPI Upload (Link Collection)", "PyTest", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pytest</span></code> Introduction, By Example", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">unittest</span></code> Module", "Virtual Environments (Livehacking Screenplay)", "Virtual Environments (Slideshow)", "Virtual Environments", "Unit Testing With <code class=\"docutils literal notranslate\"><span class=\"pre\">googletest</span></code>", "Code: Unittest: GTest Basics", "Screenplay: Unittest: GTest Basics", "Unittest: GTest Basics", "Screenplay: Unittest: GTest and CMake", "Unittest: GTest and CMake", "Code: Unittest: GTest Fixtures", "Screenplay: Unittest: GTest Fixtures", "Unittest: GTest Fixtures", "Organisatorisches: Buchung, Kursablauf", "Linux from Scratch, 16.9.2013, M\u00fcnchen", "Shell Scripting/Bourne Again Shell (Bash)", "C: Einf\u00fchrung", "C f\u00fcr Fortgeschrittene", "C++: Einf\u00fchrung und \u00dcberblick", "An Introduction to Modern C++, In Three Days", "C and C++ Programming", "CMake", "Design Patterns For C++ Developers", "Embedded Software Development: Hardware, Realtime, and Memory Management", "Linux Kernel Driver Development", "Linux Basics: Eine Einf\u00fchrung Anhand von Beispielen", "GNU Make: Die Mutter aller Build Tools", "Advanced Python", "Basic Python", "Herdt", "Eine Woche mit dem Raspberry Pi", "Subversion (SVN)", "Linux Systems Programming: Introduction", "Linux Systems Programming: Virtual Memory, IPC, Shared Libraries", "Linux Systems Programming", "Linux Systems Programming: Multithreading", "Linux Systems Programming: Network Programming", "Unittesting and Test Driven Development"], "terms": {"di": [0, 23, 176, 179, 247, 466, 1112, 1114, 1118, 1120], "j\u00f6rg": [0, 23, 180, 214, 222, 226, 241, 244, 247, 257, 260, 275, 296, 302, 314, 317, 318, 324, 330, 336, 340, 348, 349, 351, 353, 418, 492, 1020, 1023, 1061, 1085, 1112, 1113, 1114, 1115, 1118, 1119, 1120], "faschingbau": [0, 12, 23, 37, 50, 59, 60, 63, 144, 161, 168, 169, 177, 195, 198, 199, 201, 202, 203, 204, 214, 221, 226, 227, 234, 237, 242, 244, 247, 250, 254, 257, 260, 263, 275, 282, 292, 296, 302, 307, 314, 317, 318, 324, 330, 336, 348, 349, 351, 354, 357, 362, 418, 449, 466, 471, 484, 491, 492, 525, 541, 597, 643, 672, 673, 674, 675, 676, 677, 694, 852, 853, 860, 862, 867, 881, 897, 910, 916, 941, 978, 1020, 1023, 1024, 1036, 1037, 1039, 1040, 1041, 1043, 1044, 1046, 1052, 1074, 1078, 1101, 1112, 1113, 1114, 1115, 1118, 1119, 1120, 1122, 1131, 1137, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1150, 1170, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194], "offic": [0, 32, 167, 183], "co": [0, 12, 32, 37, 144, 158, 169, 198, 199, 201, 202, 203, 204, 265, 282, 286, 357, 362, 464, 471, 690, 1024, 1046, 1122, 1137, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1150, 1168, 1170, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194], "43": [0, 7, 165, 172, 184, 195, 205, 210, 212, 215, 218, 221, 226, 227, 231, 234, 237, 242, 244, 250, 254, 257, 260, 263, 272, 275, 279, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 349, 351, 352, 441, 454, 466, 625, 695, 745, 773, 907, 916, 929, 931, 970, 1033], "0": [0, 5, 7, 21, 23, 32, 62, 64, 108, 111, 112, 114, 119, 120, 121, 122, 129, 133, 137, 141, 146, 148, 158, 161, 163, 164, 165, 167, 173, 177, 181, 182, 183, 184, 185, 195, 198, 200, 202, 205, 210, 212, 213, 214, 215, 218, 221, 222, 223, 226, 227, 231, 234, 235, 237, 240, 242, 244, 247, 250, 253, 254, 257, 260, 262, 263, 265, 267, 272, 275, 278, 279, 280, 282, 286, 290, 291, 292, 296, 302, 312, 314, 318, 324, 330, 336, 340, 343, 349, 350, 351, 352, 353, 354, 357, 379, 380, 382, 384, 386, 388, 389, 390, 392, 399, 400, 402, 403, 404, 412, 415, 417, 418, 424, 425, 427, 430, 445, 446, 447, 448, 450, 451, 454, 455, 458, 460, 464, 466, 467, 470, 474, 475, 477, 480, 483, 484, 489, 491, 494, 496, 503, 504, 506, 508, 509, 510, 511, 513, 514, 515, 518, 519, 522, 523, 524, 528, 531, 532, 536, 538, 539, 540, 541, 542, 550, 556, 557, 565, 568, 574, 577, 584, 585, 586, 588, 589, 592, 593, 594, 595, 597, 599, 600, 601, 602, 603, 604, 607, 612, 613, 614, 615, 616, 617, 619, 620, 621, 622, 623, 625, 626, 629, 630, 631, 635, 639, 640, 641, 642, 643, 647, 649, 653, 654, 656, 657, 659, 660, 662, 664, 666, 671, 672, 673, 674, 675, 676, 677, 678, 682, 686, 687, 690, 693, 694, 695, 697, 699, 700, 701, 702, 704, 705, 706, 707, 708, 710, 711, 712, 714, 715, 716, 717, 718, 719, 720, 724, 726, 727, 729, 731, 732, 734, 736, 740, 741, 743, 744, 745, 746, 751, 754, 756, 758, 762, 764, 766, 768, 772, 776, 780, 783, 784, 788, 791, 803, 805, 815, 838, 839, 841, 856, 860, 862, 867, 870, 881, 882, 885, 907, 909, 910, 911, 916, 922, 925, 929, 930, 931, 940, 942, 945, 947, 948, 949, 951, 952, 954, 955, 956, 957, 958, 961, 963, 965, 966, 972, 980, 981, 983, 985, 986, 987, 989, 992, 993, 996, 997, 999, 1000, 1002, 1011, 1014, 1015, 1017, 1019, 1021, 1022, 1025, 1027, 1031, 1033, 1035, 1048, 1051, 1052, 1053, 1054, 1058, 1060, 1062, 1065, 1067, 1068, 1069, 1073, 1075, 1077, 1078, 1080, 1083, 1084, 1085, 1090, 1092, 1101, 1111, 1118, 1120, 1126, 1127, 1128, 1135, 1136, 1139, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1151, 1156, 1158, 1163, 1168], "664": [0, 237, 870], "5783814": 0, "gpg": 0, "kei": [0, 9, 32, 42, 98, 102, 103, 109, 124, 157, 159, 161, 173, 181, 190, 195, 200, 202, 203, 205, 210, 212, 214, 217, 218, 219, 221, 226, 227, 229, 231, 232, 234, 235, 237, 242, 244, 245, 247, 250, 254, 257, 259, 260, 264, 268, 271, 272, 275, 277, 278, 282, 292, 295, 296, 298, 299, 301, 302, 314, 318, 324, 329, 331, 336, 340, 351, 354, 357, 362, 390, 438, 638, 640, 643, 682, 731, 778, 852, 853, 860, 917, 921, 933, 934, 935, 937, 942, 1023, 1027, 1036, 1054, 1055, 1071, 1080, 1090, 1091, 1113, 1115, 1123, 1131, 1144, 1145, 1151, 1176, 1182], "prankergass": [0, 221, 242, 897], "33": [0, 7, 159, 172, 184, 195, 200, 205, 210, 212, 215, 218, 221, 226, 227, 231, 234, 237, 242, 244, 247, 250, 254, 257, 263, 272, 275, 279, 282, 286, 292, 296, 302, 314, 318, 324, 330, 336, 340, 351, 352, 353, 466, 487, 856, 897, 999, 1127, 1128], "8020": [0, 221, 237, 242, 280, 466, 852, 853, 891, 897], "graz": [0, 1, 3, 23, 59, 60, 63, 145, 203, 221, 280, 313, 316, 374, 466, 852, 853, 891, 897, 1122], "uid": [0, 242, 247, 250, 318, 336, 357, 362, 776, 852, 853, 860, 870, 942, 957, 1013, 1101], "vat": [0, 206, 1186], "atu63522469": 0, "write": [0, 13, 16, 27, 29, 37, 43, 48, 53, 54, 55, 56, 57, 59, 63, 64, 67, 71, 79, 98, 114, 118, 119, 120, 121, 125, 129, 130, 132, 133, 135, 137, 141, 142, 162, 163, 164, 173, 178, 182, 195, 198, 199, 201, 202, 203, 214, 219, 221, 222, 223, 224, 229, 231, 232, 235, 238, 240, 242, 248, 250, 259, 262, 269, 271, 278, 288, 295, 301, 313, 326, 343, 346, 348, 357, 359, 361, 363, 368, 384, 387, 388, 393, 405, 407, 429, 440, 444, 450, 451, 454, 464, 466, 489, 492, 504, 506, 509, 520, 529, 530, 541, 542, 544, 549, 560, 566, 571, 577, 582, 584, 585, 588, 598, 600, 647, 654, 663, 666, 668, 682, 687, 698, 710, 722, 731, 737, 746, 760, 766, 772, 776, 777, 778, 784, 786, 796, 798, 805, 809, 825, 841, 852, 853, 856, 862, 867, 868, 870, 871, 872, 873, 879, 881, 883, 886, 904, 916, 918, 921, 925, 929, 930, 931, 938, 945, 947, 948, 949, 952, 954, 955, 956, 957, 959, 960, 961, 962, 963, 965, 966, 969, 973, 979, 983, 992, 993, 996, 997, 1001, 1004, 1007, 1025, 1036, 1041, 1042, 1046, 1069, 1070, 1075, 1080, 1081, 1082, 1084, 1087, 1088, 1089, 1090, 1092, 1093, 1096, 1097, 1099, 1101, 1103, 1104, 1105, 1107, 1108, 1112, 1114, 1117, 1121, 1123, 1136, 1147, 1156, 1157, 1158, 1176, 1177, 1189], "review": [0, 163, 186, 197, 291, 381], "http": [0, 3, 4, 8, 13, 20, 23, 32, 37, 39, 44, 59, 60, 62, 63, 86, 107, 122, 124, 136, 146, 148, 158, 166, 167, 168, 169, 173, 177, 179, 181, 189, 190, 191, 192, 198, 199, 202, 203, 211, 216, 222, 224, 225, 231, 237, 238, 240, 247, 250, 254, 262, 267, 269, 278, 281, 287, 288, 289, 291, 295, 301, 305, 306, 309, 313, 315, 317, 321, 323, 327, 329, 335, 339, 356, 357, 362, 377, 525, 539, 560, 602, 662, 735, 739, 744, 761, 765, 781, 796, 798, 802, 825, 826, 924, 926, 929, 965, 1011, 1013, 1068, 1078, 1134, 1136, 1151, 1152], "g": [0, 32, 48, 64, 98, 124, 137, 142, 165, 169, 173, 177, 182, 183, 185, 195, 210, 214, 223, 227, 231, 234, 237, 242, 244, 247, 250, 254, 272, 278, 286, 302, 327, 336, 379, 399, 403, 406, 409, 414, 420, 421, 422, 424, 427, 442, 446, 454, 458, 459, 466, 467, 469, 472, 478, 479, 492, 496, 504, 525, 538, 541, 584, 588, 589, 618, 638, 656, 657, 686, 690, 693, 695, 704, 724, 745, 753, 757, 762, 776, 784, 803, 825, 844, 863, 870, 885, 907, 914, 917, 924, 942, 951, 961, 981, 983, 985, 996, 997, 999, 1000, 1001, 1002, 1013, 1018, 1020, 1022, 1030, 1042, 1044, 1045, 1063, 1068, 1069, 1132, 1136, 1147, 1158, 1163, 1179], "page": [0, 33, 39, 62, 73, 75, 79, 107, 124, 142, 157, 158, 159, 161, 162, 164, 165, 169, 174, 194, 199, 202, 223, 248, 278, 304, 320, 364, 388, 389, 392, 437, 448, 488, 525, 778, 784, 803, 809, 811, 823, 849, 852, 853, 869, 918, 922, 931, 942, 952, 955, 983, 1130], "r": [0, 7, 13, 31, 32, 38, 43, 62, 165, 167, 168, 172, 173, 181, 183, 184, 185, 194, 195, 198, 200, 201, 205, 210, 212, 215, 218, 221, 223, 227, 228, 231, 234, 237, 240, 242, 244, 247, 250, 254, 257, 260, 262, 263, 272, 275, 279, 280, 282, 292, 296, 302, 314, 318, 324, 327, 330, 336, 340, 349, 352, 357, 366, 378, 399, 424, 454, 466, 473, 487, 506, 507, 536, 540, 604, 631, 734, 742, 776, 789, 798, 803, 821, 825, 826, 856, 862, 867, 870, 881, 884, 885, 887, 907, 914, 922, 929, 930, 931, 933, 934, 942, 953, 956, 957, 965, 999, 1000, 1001, 1011, 1013, 1014, 1021, 1042, 1047, 1050, 1056, 1067, 1073, 1078, 1110, 1136, 1158, 1194], "ctb02zug3crheb0": 0, "geboren": [1, 23], "am": [1, 3, 7, 17, 32, 37, 59, 63, 66, 108, 144, 162, 163, 164, 165, 167, 168, 169, 170, 171, 181, 194, 206, 215, 251, 255, 282, 324, 336, 595, 732, 825, 864, 913, 918, 931, 940, 942, 957, 1067, 1170, 1171, 1173, 1186, 1189, 1193], "19": [1, 7, 23, 124, 172, 174, 183, 184, 185, 194, 200, 203, 205, 210, 212, 214, 215, 218, 221, 226, 227, 231, 234, 237, 238, 242, 244, 247, 250, 254, 257, 260, 263, 272, 275, 279, 282, 286, 292, 296, 302, 307, 314, 318, 324, 330, 336, 340, 350, 351, 352, 354, 362, 365, 374, 442, 466, 473, 742, 776, 885, 907, 931, 1002, 1011, 1043, 1049, 1112, 1113, 1114, 1115, 1118, 1119, 1120, 1122, 1127, 1128, 1132, 1140, 1151, 1156, 1158], "6": [1, 7, 32, 62, 64, 110, 122, 163, 165, 173, 177, 179, 182, 183, 184, 185, 195, 200, 202, 207, 210, 212, 213, 215, 218, 221, 222, 223, 225, 228, 230, 231, 234, 235, 237, 242, 244, 247, 250, 254, 257, 261, 263, 272, 275, 279, 282, 286, 292, 296, 302, 310, 314, 318, 324, 330, 336, 340, 349, 350, 352, 353, 357, 381, 382, 404, 441, 447, 458, 503, 504, 543, 544, 545, 546, 558, 577, 584, 586, 589, 592, 593, 596, 598, 601, 602, 603, 604, 622, 623, 624, 625, 631, 662, 663, 699, 745, 758, 776, 881, 904, 907, 911, 916, 922, 929, 930, 931, 945, 953, 966, 999, 1011, 1013, 1016, 1021, 1022, 1025, 1031, 1035, 1054, 1055, 1058, 1060, 1062, 1069, 1078, 1084, 1101, 1108, 1112, 1113, 1114, 1115, 1118, 1119, 1120, 1127, 1128, 1132, 1136, 1151, 1156, 1157, 1158, 1163, 1187], "1966": [1, 23, 203, 237, 247, 257, 260, 1112, 1113, 1114, 1115, 1118, 1119, 1120, 1132], "diplom": [1, 23], "au": [1, 5, 8, 23, 32, 170, 171, 179, 180, 181, 185, 195, 206, 216, 218, 225, 241, 244, 250, 251, 253, 265, 302, 318, 352, 357, 358, 375, 1171, 1173, 1174, 1175, 1180, 1186, 1189], "technisch": [1, 23, 375, 1188], "mathematik": [1, 23], "an": [1, 3, 5, 13, 17, 21, 23, 28, 31, 38, 40, 43, 45, 46, 48, 54, 55, 57, 58, 59, 60, 63, 70, 74, 75, 79, 83, 84, 86, 93, 108, 109, 111, 112, 114, 118, 119, 120, 121, 124, 129, 132, 137, 140, 141, 142, 150, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 192, 194, 195, 198, 200, 201, 202, 205, 213, 214, 218, 219, 221, 222, 223, 224, 226, 229, 231, 234, 235, 238, 239, 240, 242, 245, 247, 248, 250, 254, 260, 262, 263, 267, 269, 271, 278, 281, 284, 286, 287, 288, 289, 291, 295, 296, 306, 309, 313, 317, 324, 326, 335, 340, 343, 344, 368, 374, 376, 380, 382, 386, 389, 390, 403, 412, 420, 424, 427, 430, 431, 442, 445, 446, 447, 448, 450, 453, 460, 464, 466, 470, 473, 479, 482, 483, 484, 487, 488, 492, 493, 494, 503, 504, 506, 507, 508, 509, 525, 527, 531, 536, 538, 540, 541, 544, 545, 546, 558, 560, 584, 585, 587, 589, 592, 593, 594, 598, 600, 601, 602, 603, 604, 617, 622, 635, 638, 641, 642, 647, 653, 656, 657, 664, 669, 673, 675, 676, 677, 678, 682, 683, 686, 690, 694, 703, 709, 722, 724, 732, 734, 741, 742, 744, 745, 746, 752, 762, 763, 776, 777, 778, 779, 784, 789, 791, 794, 796, 803, 825, 833, 838, 851, 852, 853, 857, 858, 862, 870, 879, 884, 885, 888, 891, 910, 912, 922, 929, 931, 933, 934, 939, 942, 947, 948, 949, 950, 952, 956, 957, 958, 959, 963, 965, 966, 972, 978, 980, 981, 984, 985, 986, 987, 993, 997, 999, 1000, 1005, 1009, 1014, 1015, 1018, 1019, 1022, 1028, 1029, 1030, 1034, 1035, 1039, 1040, 1042, 1044, 1045, 1046, 1050, 1051, 1052, 1054, 1058, 1064, 1073, 1074, 1075, 1078, 1080, 1093, 1099, 1100, 1101, 1117, 1123, 1125, 1127, 1128, 1129, 1130, 1135, 1136, 1139, 1144, 1145, 1149, 1151, 1156, 1157, 1159, 1168, 1170, 1171, 1173, 1174, 1175, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1187, 1189, 1190, 1194], "der": [1, 3, 5, 7, 8, 11, 65, 158, 170, 171, 172, 176, 179, 180, 181, 182, 185, 187, 189, 195, 197, 206, 207, 208, 211, 212, 215, 216, 218, 221, 225, 241, 242, 244, 250, 253, 254, 257, 265, 314, 349, 357, 362, 1170, 1172, 1173, 1174, 1175, 1180, 1182, 1183, 1186, 1187, 1188, 1189, 1190, 1192, 1193, 1194], "tu": [1, 23], "iicm": [1, 23], "1993": [1, 23], "universit\u00e4tsassist": [1, 23], "ebendort": [1, 23], "bi": [1, 3, 23, 32, 170, 171, 195, 205, 302, 330, 1171, 1190], "1998": [1, 3, 23, 173, 181, 237, 583], "vorlesungen": 1, "programmieren": [1, 5, 181, 185, 358, 374, 1175, 1180, 1183, 1187, 1189, 1193, 1194], "basi": [1, 3, 5, 7, 24, 79, 186, 194, 215, 224, 238, 250, 284, 352, 427, 1179, 1190, 1191], "c": [1, 3, 4, 6, 9, 12, 21, 23, 38, 42, 43, 64, 66, 73, 74, 75, 79, 86, 88, 107, 110, 132, 142, 147, 157, 158, 161, 162, 163, 164, 165, 168, 175, 178, 180, 182, 190, 191, 195, 200, 201, 207, 210, 212, 217, 218, 221, 222, 231, 234, 235, 237, 241, 242, 244, 247, 250, 254, 257, 262, 263, 272, 275, 282, 288, 292, 296, 302, 305, 313, 314, 318, 321, 324, 330, 336, 340, 343, 352, 356, 358, 359, 364, 370, 371, 374, 376, 377, 378, 379, 380, 382, 386, 388, 390, 391, 392, 395, 398, 400, 402, 403, 404, 406, 410, 414, 415, 418, 419, 420, 421, 422, 426, 428, 430, 431, 432, 436, 437, 439, 440, 442, 443, 444, 446, 447, 448, 450, 451, 452, 454, 455, 456, 458, 459, 460, 461, 467, 470, 471, 472, 473, 476, 477, 478, 483, 484, 486, 487, 492, 496, 502, 504, 507, 513, 525, 528, 531, 532, 533, 534, 535, 537, 538, 540, 541, 543, 549, 583, 585, 587, 588, 589, 590, 594, 595, 596, 600, 601, 603, 605, 608, 613, 618, 620, 621, 625, 627, 631, 633, 635, 637, 638, 639, 640, 643, 645, 646, 647, 649, 650, 652, 653, 654, 655, 657, 660, 661, 662, 663, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 680, 684, 690, 691, 695, 696, 697, 698, 699, 703, 709, 710, 721, 722, 723, 725, 726, 727, 728, 729, 730, 733, 734, 735, 736, 738, 739, 741, 742, 744, 745, 746, 747, 748, 750, 755, 756, 759, 760, 761, 762, 763, 766, 775, 776, 778, 779, 781, 784, 788, 789, 793, 794, 798, 800, 803, 805, 815, 825, 827, 828, 833, 841, 844, 849, 851, 857, 862, 864, 867, 882, 885, 907, 913, 916, 922, 923, 929, 930, 931, 943, 947, 948, 949, 954, 955, 956, 957, 958, 967, 970, 975, 983, 986, 988, 989, 992, 995, 996, 997, 999, 1000, 1001, 1007, 1009, 1011, 1015, 1016, 1017, 1018, 1020, 1021, 1045, 1053, 1054, 1062, 1063, 1067, 1073, 1080, 1134, 1135, 1139, 1157, 1158, 1165, 1168, 1178, 1180, 1181, 1183, 1189, 1190, 1191, 1192, 1193, 1194], "und": [1, 3, 4, 5, 6, 7, 8, 37, 39, 155, 170, 171, 176, 180, 181, 185, 187, 189, 197, 201, 207, 211, 213, 215, 220, 222, 226, 231, 242, 246, 247, 252, 254, 258, 264, 265, 282, 292, 302, 318, 331, 341, 352, 353, 357, 362, 374, 376, 412, 420, 865, 912, 913, 932, 1170, 1171, 1172, 1173, 1174, 1178, 1180, 1182, 1183, 1187, 1188, 1189, 1190, 1192, 1193, 1194], "\u00fcbertragungsprotokol": [1, 175], "forschungst\u00e4tigkeit": 1, "volltextsuch": 1, "hyperwav": [1, 3, 23], "2001": [1, 3, 23, 231, 237, 247, 250, 275], "leitung": 1, "serverprogrammierung": 1, "oo": [1, 43, 73, 74, 75, 79, 107, 124, 175, 198, 211, 213, 222, 241, 249, 252, 278, 282, 288, 290, 291, 295, 361, 370, 371, 466, 488, 530, 582, 583, 590, 653, 654, 657, 659, 660, 682, 746, 778, 817, 827, 1024, 1038, 1176, 1179], "design": [1, 3, 20, 23, 53, 57, 75, 79, 81, 83, 86, 107, 158, 159, 162, 175, 178, 198, 224, 225, 241, 287, 289, 365, 374, 376, 403, 433, 453, 454, 457, 465, 474, 481, 482, 483, 484, 486, 487, 489, 491, 503, 504, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 530, 538, 540, 582, 583, 589, 591, 607, 679, 728, 741, 745, 746, 748, 763, 776, 777, 778, 779, 930, 999, 1118, 1157, 1175, 1178], "analys": [1, 3, 175, 1173], "ration": [1, 3, 38, 168], "rose": [1, 3, 32], "f\u00fcr": [1, 3, 5, 65, 170, 171, 176, 180, 182, 185, 206, 207, 218, 225, 241, 253, 265, 279, 357, 362, 374, 376, 887, 1170, 1171, 1173, 1180, 1186, 1187, 1189, 1192], "java": [1, 9, 205, 206, 217, 229, 238, 330, 643, 656, 741, 746, 753, 1035, 1048, 1054, 1063, 1186, 1194], "releasemanag": [1, 3, 23, 175, 1188], "cv": [1, 3, 23, 32, 158, 232, 1188], "subvers": [1, 3, 376, 907], "systemnah": [1, 3, 5, 23, 157, 175, 989, 992, 996, 1189], "programmierung": [1, 3, 4, 5, 6, 8, 23, 155, 175, 229, 256, 265, 374, 1171, 1172, 1173, 1175, 1180, 1187, 1189, 1192], "unter": [1, 3, 23, 65, 171, 179, 180, 197, 205, 358, 913, 1171, 1172, 1175, 1180, 1183, 1187, 1190, 1192, 1193], "unix": [1, 73, 74, 75, 79, 98, 159, 162, 191, 214, 278, 343, 357, 358, 359, 370, 371, 375, 392, 446, 492, 666, 757, 776, 778, 782, 784, 817, 850, 851, 852, 867, 869, 881, 909, 912, 918, 922, 925, 930, 942, 967, 983, 993, 1049, 1073, 1101, 1171, 1172, 1174, 1178, 1180, 1182, 1183, 1187, 1189, 1190, 1191, 1193], "window": [1, 3, 32, 98, 99, 104, 105, 124, 150, 162, 167, 169, 179, 181, 194, 202, 219, 233, 235, 237, 248, 251, 262, 267, 269, 271, 277, 278, 290, 306, 312, 343, 354, 357, 360, 362, 375, 387, 454, 748, 751, 778, 855, 859, 885, 921, 951, 967, 972, 1047, 1049, 1050, 1073, 1123, 1158], "nt": 1, "salomon": [1, 3, 23], "friesach": [1, 3, 23], "bei": [1, 3, 5, 23, 170, 171, 176, 180, 185, 189, 195, 197, 206, 207, 210, 212, 250, 265, 349, 374, 985, 1170, 1171, 1186, 1188], "2006": [1, 3, 23, 237], "magicdraw": 1, "datenbankdesign": [1, 3], "einer": [1, 3, 170, 171, 176, 181, 189, 195, 197, 206, 207, 212, 219, 352, 374, 913, 985, 1170, 1171, 1175, 1186, 1187, 1192], "objektrelationalen": [1, 3], "datenbankschnittstel": [1, 3], "sp\u00e4ter": [1, 170, 180, 251, 1173], "softwarearchitekt": 1, "leiter": [1, 23], "abteilung": [1, 206, 1186], "forschung": 1, "entwicklung": [1, 3, 4, 358, 1182, 1188], "atron": [1, 3, 23], "unterpremst\u00e4tten": [1, 3, 23], "2010": [1, 3, 23, 158, 174, 237, 1048], "enterpris": 1, "architect": [1, 474, 1150], "softwarearchitektur": [1, 3, 23], "versionsmanag": 1, "ibm": 1, "clearcas": [1, 168, 1188], "massgeblich": 1, "portierung": [1, 3, 4, 175], "spielautomatensoftwar": 1, "von": [1, 3, 4, 5, 6, 7, 8, 65, 144, 170, 171, 179, 180, 189, 197, 201, 202, 204, 206, 207, 210, 213, 215, 216, 218, 227, 244, 251, 256, 263, 272, 279, 314, 330, 336, 341, 357, 358, 362, 374, 376, 850, 912, 913, 1170, 1171, 1172, 1173, 1174, 1175, 1178, 1180, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193], "enea": [1, 3, 162], "os": [1, 3, 162], "nach": [1, 3, 4, 5, 170, 171, 175, 176, 181, 185, 189, 205, 206, 212, 250, 251, 257, 336, 375, 847, 1170, 1186], "linux": [1, 3, 4, 6, 24, 37, 39, 43, 59, 62, 63, 64, 66, 73, 74, 75, 79, 85, 86, 87, 88, 99, 104, 105, 107, 126, 142, 147, 154, 157, 158, 159, 161, 163, 164, 165, 169, 172, 173, 174, 179, 186, 189, 194, 201, 223, 224, 231, 237, 240, 247, 250, 251, 254, 259, 262, 267, 269, 271, 280, 287, 289, 290, 306, 312, 326, 330, 343, 354, 356, 357, 358, 359, 363, 364, 370, 371, 374, 376, 418, 440, 448, 457, 460, 477, 488, 502, 530, 531, 532, 533, 534, 535, 536, 537, 540, 541, 542, 568, 582, 749, 755, 776, 777, 778, 779, 781, 782, 784, 785, 787, 789, 790, 792, 794, 795, 796, 797, 798, 799, 801, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 819, 820, 821, 822, 824, 825, 826, 829, 830, 831, 834, 835, 836, 839, 840, 842, 843, 845, 846, 848, 850, 851, 852, 853, 859, 861, 863, 866, 869, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 885, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 905, 913, 915, 918, 922, 924, 925, 926, 930, 932, 933, 934, 935, 936, 937, 938, 940, 941, 942, 945, 947, 948, 949, 950, 951, 952, 957, 959, 960, 963, 964, 965, 966, 968, 976, 979, 982, 984, 989, 992, 993, 996, 999, 1000, 1001, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1047, 1049, 1111, 1136, 1156, 1159, 1172, 1173, 1174, 1175, 1178, 1180, 1183, 1187], "beteiligt": [1, 23], "seit": [1, 5, 23, 189, 195, 205, 210, 1171, 1180], "april": [1, 3, 23], "selbstst\u00e4ndig": [1, 23], "fh": [1, 23, 98, 107, 110, 111, 112, 124, 141, 142, 145, 167, 214, 354, 356, 357, 362, 363, 365, 530, 541, 562, 582, 590, 605, 665, 679, 778, 855, 859, 874, 880, 899, 905, 921, 1006, 1009, 1165], "joanneum": [1, 145, 167, 1165], "kapfenberg": 1, "2011": [1, 3, 5, 158, 159, 174, 287, 289, 374, 378, 583, 682], "2015": [1, 23, 222, 248, 286, 317, 374, 689, 1123], "lehrveranstaltung": [1, 358], "im": [1, 3, 5, 8, 29, 32, 38, 91, 170, 171, 180, 181, 185, 189, 194, 195, 197, 198, 201, 203, 206, 207, 210, 212, 216, 218, 219, 225, 226, 229, 232, 233, 235, 238, 241, 245, 246, 247, 253, 254, 256, 258, 259, 261, 274, 276, 281, 283, 284, 288, 290, 291, 294, 295, 297, 300, 301, 303, 312, 313, 315, 316, 317, 319, 322, 328, 329, 334, 335, 337, 338, 339, 341, 343, 344, 345, 346, 347, 348, 357, 362, 778, 1024, 1046, 1080, 1081, 1082, 1092, 1095, 1103, 1104, 1106, 1107, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1128, 1136, 1137, 1158, 1171, 1174, 1180, 1182, 1186, 1187, 1189, 1190, 1193, 1194], "lehrgang": 1, "softwar": [1, 5, 13, 23, 24, 41, 69, 74, 75, 79, 86, 98, 105, 124, 135, 141, 161, 169, 172, 173, 178, 189, 195, 201, 205, 214, 231, 237, 238, 247, 248, 250, 275, 287, 289, 290, 291, 304, 320, 354, 375, 376, 442, 474, 482, 483, 492, 494, 660, 746, 778, 779, 809, 856, 869, 921, 922, 929, 930, 945, 997, 1006, 1009, 1078, 1125, 1178, 1179, 1181, 1194], "avl": [1, 23, 159], "2018": [1, 23, 165, 237, 687], "2019": [1, 40, 143, 158, 200, 222, 271, 295, 313, 316, 317, 374, 560, 687, 728, 907, 1122, 1123, 1125], "linuxexpert": [1, 23], "architekt": [1, 23], "build": [1, 4, 17, 28, 40, 42, 44, 50, 73, 74, 75, 79, 85, 88, 98, 105, 109, 124, 146, 152, 158, 162, 167, 168, 174, 178, 189, 192, 202, 223, 240, 243, 267, 269, 271, 278, 287, 289, 292, 299, 304, 305, 320, 321, 326, 360, 363, 364, 375, 376, 379, 420, 433, 448, 460, 472, 473, 474, 476, 478, 488, 502, 508, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 560, 565, 568, 582, 673, 710, 730, 740, 754, 778, 782, 785, 787, 790, 792, 794, 795, 802, 804, 805, 806, 810, 816, 821, 822, 827, 829, 834, 840, 843, 846, 882, 921, 930, 931, 955, 956, 957, 958, 972, 991, 995, 999, 1002, 1006, 1009, 1010, 1014, 1061, 1072, 1078, 1151, 1156, 1162, 1166, 1171, 1176, 1178], "manag": [1, 5, 14, 23, 29, 64, 69, 73, 74, 75, 79, 95, 98, 109, 161, 163, 172, 177, 178, 186, 189, 191, 194, 198, 201, 202, 208, 209, 213, 218, 219, 222, 224, 234, 240, 243, 248, 250, 251, 257, 260, 275, 282, 289, 291, 292, 295, 296, 299, 317, 318, 324, 326, 327, 330, 336, 341, 360, 361, 363, 370, 371, 375, 376, 437, 454, 465, 483, 496, 554, 560, 585, 590, 679, 690, 691, 693, 722, 727, 738, 739, 741, 742, 743, 747, 755, 775, 777, 778, 796, 802, 809, 811, 834, 840, 843, 846, 856, 860, 861, 916, 921, 930, 938, 950, 983, 984, 997, 1013, 1024, 1033, 1052, 1076, 1080, 1121, 1122, 1123, 1124, 1125, 1129, 1137, 1139, 1151, 1153, 1155, 1156, 1160, 1165, 1176, 1178, 1181, 1188], "schittstel": 1, "zum": [1, 3, 5, 170, 171, 180, 185, 189, 195, 205, 218, 225, 242, 302, 375, 1171, 1173, 1174, 1175, 1187, 1190, 1192], "weiser": 1, "alter": [1, 197, 198, 248, 271, 375, 586, 594, 912, 1123], "mann": 1, "2020": [1, 23, 124, 142, 143, 158, 159, 165, 169, 170, 174, 177, 181, 200, 202, 237, 374, 541, 542, 690, 703, 852, 853, 932, 941, 959, 1048, 1122, 1127, 1165, 1187], "embed": [1, 3, 4, 5, 23, 73, 88, 105, 115, 145, 157, 158, 159, 162, 164, 178, 202, 204, 227, 326, 355, 360, 362, 374, 376, 748, 758, 771, 777, 778, 813, 825, 863, 885, 931, 942, 983, 999, 1026, 1067, 1172, 1173, 1174, 1178, 1179, 1182, 1183, 1187, 1191], "comput": [1, 23, 28, 29, 32, 73, 85, 88, 102, 115, 137, 145, 165, 204, 254, 263, 287, 289, 313, 314, 342, 355, 357, 360, 362, 374, 383, 456, 461, 462, 487, 584, 594, 597, 603, 636, 732, 745, 757, 778, 847, 854, 922, 930, 932, 933, 940, 967, 981, 984, 1048, 1136, 1151, 1181], "electron": [1, 167, 375, 930], "engin": [1, 165, 238, 240, 306, 309, 375, 446, 450, 454, 464, 495, 528, 536, 930, 1046, 1194], "kontakt": [2, 23], "curriculum": [2, 5], "vita": [2, 5], "skill": [2, 86, 158, 983, 1046], "projekt": [2, 159, 180, 1183, 1187], "stand": [3, 172, 221, 360, 825, 931, 1015, 1131], "j\u00e4nner": [3, 23], "2014": [3, 159, 180, 201, 237, 271, 286, 295, 317, 927, 1123], "devicedriv": 3, "die": [3, 5, 7, 8, 37, 45, 46, 47, 51, 55, 56, 59, 60, 63, 65, 158, 171, 176, 179, 180, 181, 182, 185, 189, 195, 197, 205, 206, 208, 210, 212, 215, 216, 218, 221, 225, 234, 241, 244, 247, 250, 253, 254, 257, 282, 310, 336, 352, 357, 358, 362, 375, 376, 510, 524, 778, 912, 913, 985, 1123, 1170, 1171, 1172, 1173, 1174, 1175, 1180, 1182, 1186, 1187, 1188, 1189, 1190, 1192, 1193, 1194], "pci": [3, 209, 778, 802, 803, 864, 921, 929, 965, 1181], "hardwar": [3, 5, 60, 66, 70, 73, 74, 75, 79, 81, 137, 141, 147, 151, 161, 162, 165, 175, 178, 237, 238, 250, 287, 290, 291, 312, 316, 343, 358, 359, 360, 375, 376, 392, 403, 406, 442, 460, 464, 534, 535, 536, 537, 541, 757, 778, 805, 825, 856, 861, 862, 921, 922, 923, 924, 927, 930, 946, 948, 949, 962, 965, 997, 1170, 1179, 1181, 1187], "ein": [3, 5, 7, 8, 37, 170, 171, 176, 179, 180, 181, 182, 185, 187, 189, 197, 201, 202, 204, 205, 206, 208, 210, 212, 213, 215, 216, 218, 219, 221, 225, 227, 231, 234, 235, 241, 242, 244, 247, 250, 251, 253, 254, 257, 265, 272, 275, 282, 292, 296, 302, 310, 314, 318, 324, 330, 340, 349, 352, 357, 362, 375, 376, 420, 548, 851, 912, 913, 985, 1053, 1170, 1171, 1172, 1173, 1174, 1175, 1178, 1180, 1183, 1186, 1188, 1189, 1190, 1191, 1192, 1193, 1194], "messger\u00e4teherstel": 3, "de": [3, 5, 7, 8, 32, 37, 158, 170, 172, 176, 179, 180, 185, 189, 195, 197, 205, 206, 215, 216, 225, 241, 250, 253, 257, 357, 374, 451, 744, 761, 765, 847, 849, 913, 926, 1122, 1148, 1170, 1171, 1172, 1173, 1175, 1180, 1182, 1186, 1187, 1189, 1190, 1192, 1193, 1194], "untenstehenden": 3, "zeit": [3, 5, 171, 206, 324, 1171, 1173, 1193], "dato": 3, "ort": 3, "raum": [3, 185], "anbindung": 3, "verschieden": [3, 23, 195, 375, 1172, 1173, 1174, 1180, 1187, 1192], "hardwareinterfac": 3, "i2c": [3, 4, 66, 79, 82, 86, 147, 150, 162, 163, 189, 202, 278, 360, 363, 368, 375, 481, 511, 570, 571, 579, 778, 825, 921, 928, 930, 965, 1180, 1187], "spi": [3, 4, 79, 162, 180, 189, 375, 570, 571, 579, 923, 924, 925, 930, 965, 1180, 1187], "can": [3, 12, 17, 29, 57, 58, 60, 69, 76, 81, 84, 109, 111, 112, 124, 125, 132, 136, 156, 159, 161, 162, 163, 164, 166, 167, 168, 169, 173, 177, 178, 179, 182, 184, 186, 190, 191, 192, 194, 198, 199, 200, 214, 221, 223, 231, 234, 237, 238, 240, 247, 250, 254, 257, 260, 278, 281, 284, 286, 287, 289, 292, 296, 302, 304, 317, 318, 320, 324, 330, 343, 349, 351, 354, 357, 362, 368, 375, 380, 382, 386, 390, 394, 400, 403, 414, 418, 424, 425, 428, 435, 440, 442, 446, 447, 448, 449, 450, 453, 454, 458, 459, 460, 464, 466, 467, 469, 475, 477, 478, 484, 489, 492, 493, 496, 503, 504, 508, 509, 510, 522, 526, 535, 542, 568, 574, 584, 586, 591, 593, 594, 599, 600, 607, 618, 622, 638, 639, 644, 653, 657, 660, 664, 669, 674, 676, 677, 678, 687, 689, 692, 693, 694, 695, 699, 704, 728, 731, 732, 734, 740, 741, 744, 745, 746, 749, 752, 754, 758, 774, 776, 778, 784, 796, 811, 815, 819, 823, 825, 830, 833, 839, 851, 852, 853, 856, 857, 858, 860, 862, 863, 864, 865, 867, 868, 870, 875, 877, 879, 881, 883, 885, 886, 921, 922, 928, 929, 930, 931, 934, 936, 938, 940, 941, 942, 949, 951, 955, 959, 968, 970, 981, 984, 985, 993, 997, 1001, 1011, 1016, 1018, 1020, 1021, 1022, 1023, 1025, 1026, 1027, 1030, 1033, 1034, 1035, 1042, 1043, 1045, 1046, 1051, 1054, 1055, 1058, 1063, 1065, 1071, 1073, 1075, 1078, 1080, 1087, 1097, 1108, 1118, 1119, 1120, 1122, 1128, 1130, 1135, 1136, 1142, 1144, 1149, 1151, 1156, 1176, 1178, 1180, 1187, 1191, 1193], "custom": [3, 27, 29, 32, 39, 98, 147, 151, 155, 158, 162, 165, 167, 168, 174, 178, 191, 199, 201, 203, 231, 237, 240, 247, 250, 251, 278, 280, 287, 289, 314, 343, 344, 345, 346, 348, 356, 357, 375, 464, 469, 488, 502, 530, 533, 536, 538, 540, 560, 582, 584, 590, 655, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 691, 710, 712, 722, 727, 738, 747, 755, 763, 775, 777, 778, 798, 825, 941, 972, 997, 1122, 1164], "firmwar": [3, 126, 128, 142, 150, 162, 163, 165, 172, 181, 922, 929, 965], "kunden": [3, 5, 23, 176, 280, 375, 1170], "dezemb": [3, 23], "2012": [3, 23, 158, 174, 237], "backport": 3, "integr": [3, 16, 23, 38, 43, 60, 122, 134, 142, 159, 167, 169, 177, 189, 194, 214, 304, 313, 320, 359, 364, 365, 366, 454, 480, 483, 487, 699, 778, 798, 807, 864, 885, 922, 924, 930, 931, 1148, 1156, 1159, 1178, 1180, 1187], "touchcontrol": 3, "driver": [3, 5, 79, 86, 147, 150, 162, 165, 167, 175, 178, 179, 278, 358, 359, 374, 376, 460, 778, 779, 781, 782, 784, 785, 786, 787, 788, 789, 790, 792, 794, 795, 796, 797, 799, 800, 801, 804, 805, 806, 808, 809, 810, 812, 814, 816, 818, 819, 820, 822, 824, 825, 826, 829, 831, 834, 836, 840, 843, 846, 856, 861, 864, 921, 930, 931, 951, 965, 1171, 1191, 1193], "systemintegrationsfirma": 3, "stuttgart": 3, "mai": [3, 43, 66, 109, 111, 112, 125, 141, 150, 162, 166, 168, 173, 177, 221, 231, 237, 244, 247, 250, 254, 260, 287, 296, 324, 340, 390, 397, 399, 403, 412, 469, 473, 506, 591, 644, 742, 752, 756, 776, 807, 809, 817, 825, 858, 867, 872, 873, 885, 930, 931, 953, 955, 956, 957, 959, 1014, 1015, 1023, 1065, 1148, 1158], "2013": [3, 23, 158, 374], "python": [3, 4, 6, 7, 10, 13, 21, 23, 24, 28, 29, 40, 60, 62, 66, 73, 75, 79, 86, 92, 93, 134, 145, 146, 157, 158, 159, 175, 177, 178, 181, 183, 191, 206, 207, 211, 214, 215, 216, 218, 221, 223, 230, 231, 237, 246, 247, 250, 254, 257, 278, 280, 289, 343, 344, 345, 346, 347, 348, 352, 353, 356, 358, 359, 364, 365, 366, 370, 371, 372, 374, 376, 388, 540, 681, 699, 718, 730, 736, 753, 778, 779, 885, 907, 921, 923, 928, 929, 970, 1018, 1019, 1020, 1021, 1023, 1025, 1026, 1028, 1029, 1030, 1032, 1033, 1034, 1035, 1038, 1042, 1043, 1049, 1053, 1057, 1058, 1064, 1066, 1068, 1069, 1071, 1074, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1124, 1125, 1126, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1138, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1154, 1155, 1156, 1158, 1159, 1160, 1176, 1180, 1186, 1187, 1194], "programm": [3, 59, 63, 180, 181, 185, 194, 205, 210, 214, 218, 250, 275, 287, 288, 289, 316, 330, 352, 358, 375, 424, 437, 444, 450, 454, 584, 586, 587, 656, 690, 724, 727, 861, 867, 918, 930, 951, 985, 1046, 1047, 1051, 1073, 1130, 1137, 1150, 1173, 1176, 1181, 1189, 1190, 1192, 1194], "zur": [3, 170, 185, 189, 197, 207, 218, 352, 357, 362, 375, 985, 1171, 1173, 1174, 1175, 1187, 1192, 1193, 1194], "IT": [3, 278, 280, 375, 588], "wie": [3, 5, 170, 171, 179, 180, 181, 185, 189, 195, 197, 205, 210, 213, 220, 244, 352, 375, 1170, 1171, 1173, 1174, 1175, 1180, 1183, 1187, 1188, 1190, 1192, 1193], "beispiel": [3, 5, 23, 181, 205, 206, 228, 234, 255, 375, 1173, 1174, 1175, 1186, 1187, 1189, 1190, 1192, 1194], "e": [3, 5, 7, 32, 37, 38, 42, 48, 64, 98, 124, 136, 137, 142, 165, 167, 168, 169, 170, 171, 173, 176, 177, 179, 180, 181, 183, 184, 185, 189, 195, 197, 205, 206, 210, 212, 214, 215, 218, 221, 222, 223, 226, 227, 231, 234, 235, 237, 240, 242, 244, 247, 250, 251, 254, 257, 260, 263, 272, 275, 278, 279, 282, 284, 286, 292, 296, 302, 314, 318, 324, 327, 330, 336, 340, 350, 351, 352, 353, 357, 362, 375, 379, 396, 399, 403, 406, 409, 414, 424, 427, 442, 446, 450, 453, 454, 466, 467, 469, 472, 478, 479, 483, 492, 496, 504, 509, 513, 525, 538, 541, 542, 577, 584, 588, 589, 599, 607, 618, 638, 656, 657, 671, 676, 683, 686, 690, 693, 704, 710, 724, 745, 754, 756, 757, 762, 776, 784, 803, 844, 851, 852, 853, 862, 863, 867, 868, 869, 870, 885, 907, 914, 929, 930, 931, 942, 951, 961, 963, 981, 984, 985, 996, 997, 999, 1001, 1002, 1013, 1018, 1022, 1030, 1042, 1044, 1045, 1063, 1068, 1069, 1092, 1132, 1136, 1141, 1144, 1147, 1150, 1156, 1158, 1170, 1171, 1173, 1175, 1179, 1180, 1186, 1187, 1189, 1190, 1192, 1194], "bill": [3, 282], "email": [3, 32, 42, 144, 163, 169, 173, 178, 202, 218, 282, 368, 938, 1136, 1140, 1141, 1142, 1144, 1145, 1146], "kommunik": [3, 23, 1187, 1190, 1192, 1193, 1194], "extrakt": 3, "attach": [3, 183, 231, 237, 247, 250, 487, 807, 930, 983, 1130], "signaturverifik": 3, "informationssystem": 3, "februar": 3, "juni": 3, "vollautomatisch": 3, "instal": [3, 29, 32, 45, 61, 91, 98, 99, 105, 124, 141, 146, 158, 159, 162, 163, 167, 189, 192, 198, 199, 201, 203, 214, 229, 231, 232, 235, 237, 240, 245, 247, 250, 251, 259, 262, 271, 274, 281, 284, 287, 288, 289, 294, 295, 299, 300, 301, 305, 306, 316, 321, 322, 323, 328, 329, 334, 338, 339, 395, 410, 419, 426, 432, 436, 439, 443, 452, 456, 461, 462, 470, 471, 477, 488, 502, 530, 531, 532, 533, 534, 535, 536, 537, 540, 547, 549, 554, 582, 590, 605, 608, 611, 627, 633, 637, 646, 649, 650, 655, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 684, 691, 722, 738, 747, 755, 763, 775, 777, 778, 798, 805, 821, 825, 826, 864, 921, 924, 929, 931, 996, 998, 1001, 1004, 1006, 1009, 1030, 1046, 1050, 1076, 1121, 1134, 1141, 1151, 1152, 1159, 1164, 1166], "serveranlagen": 3, "herstel": 3, "radar\u00fcberwachungssystemen": 3, "septemb": 3, "unterschleissheim": 3, "m\u00fcnchen": 3, "instandhaltungsarbeiten": 3, "hauseigenen": 3, "system": [3, 5, 14, 23, 37, 45, 74, 79, 81, 98, 102, 103, 109, 111, 112, 124, 137, 158, 159, 162, 163, 168, 169, 173, 175, 177, 178, 179, 180, 186, 189, 191, 192, 202, 214, 219, 222, 229, 231, 234, 235, 239, 240, 245, 247, 248, 250, 257, 260, 266, 267, 268, 275, 277, 282, 287, 292, 295, 296, 298, 318, 324, 330, 337, 354, 357, 358, 359, 360, 361, 362, 368, 370, 371, 374, 376, 410, 419, 426, 430, 432, 436, 439, 443, 450, 451, 452, 456, 457, 461, 462, 464, 469, 472, 474, 487, 488, 495, 508, 530, 541, 582, 617, 660, 684, 722, 755, 756, 757, 775, 776, 777, 778, 781, 784, 796, 798, 817, 823, 825, 855, 856, 857, 858, 859, 860, 861, 863, 864, 865, 868, 869, 871, 872, 873, 875, 876, 877, 878, 879, 882, 885, 911, 912, 916, 921, 925, 930, 931, 932, 937, 943, 947, 948, 949, 950, 952, 955, 957, 960, 961, 963, 964, 965, 966, 976, 979, 982, 984, 985, 987, 993, 996, 997, 999, 1000, 1001, 1022, 1023, 1034, 1050, 1078, 1123, 1158, 1172, 1179, 1181, 1182], "auf": [3, 5, 8, 23, 65, 158, 163, 171, 176, 179, 180, 181, 185, 189, 195, 197, 205, 206, 210, 216, 218, 225, 226, 241, 244, 251, 253, 265, 352, 357, 358, 362, 375, 913, 1170, 1171, 1172, 1173, 1174, 1175, 1180, 1182, 1183, 1186, 1190, 1193, 1194], "gentoo": [3, 158, 161, 174, 460, 1171], "updat": [3, 44, 136, 141, 161, 163, 177, 181, 209, 234, 242, 257, 267, 269, 275, 282, 287, 289, 296, 302, 314, 330, 336, 340, 357, 364, 539, 541, 602, 835, 983, 1013, 1014, 1015, 1016, 1017, 1071, 1073, 1147, 1159, 1165, 1188], "betriebssystem": [3, 1180, 1182, 1187, 1189], "usb": [3, 4, 64, 161, 162, 163, 165, 375, 453, 803, 856, 1180], "touchscreen": 3, "cheat": [3, 33, 66, 202, 214, 457, 710, 885], "detect": [3, 32, 107, 182, 194, 422, 425, 459, 467, 565, 592, 695, 720, 741, 819, 930, 931, 957, 966, 989, 1000, 1001, 1102], "m\u00fcnzeinwurf": 3, "via": [3, 17, 64, 86, 127, 133, 134, 162, 165, 169, 174, 183, 198, 199, 221, 227, 248, 250, 278, 281, 284, 287, 296, 313, 356, 363, 375, 484, 489, 509, 594, 618, 729, 743, 778, 805, 825, 828, 856, 861, 867, 882, 918, 929, 940, 941, 948, 955, 965, 986, 993, 1011, 1077, 1176], "gpio": [3, 4, 59, 60, 63, 66, 73, 74, 75, 79, 85, 124, 125, 126, 128, 133, 134, 135, 159, 278, 287, 317, 347, 360, 362, 366, 778, 802, 827, 829, 834, 840, 843, 846, 921, 926, 930, 962, 966, 1180, 1187], "interrupt": [3, 64, 87, 111, 112, 180, 209, 278, 460, 778, 796, 802, 817, 819, 820, 822, 823, 827, 828, 829, 833, 834, 837, 840, 843, 844, 846, 856, 858, 861, 864, 921, 926, 943, 945, 946, 947, 948, 949, 950, 962, 964, 965, 981, 984, 985, 987, 996, 997, 1180, 1181, 1187], "m\u00e4rz": 3, "firma": [3, 176, 185, 280, 374, 1170, 1180, 1187], "spielo": 3, "intern": [3, 57, 85, 125, 129, 130, 135, 141, 195, 200, 223, 231, 234, 235, 237, 247, 250, 281, 284, 313, 350, 364, 393, 423, 438, 453, 469, 478, 483, 597, 638, 685, 728, 772, 776, 803, 811, 837, 929, 930, 931, 972, 1023, 1027, 1071, 1080, 1136, 1141], "datenkonvertierung": 3, "einem": [3, 5, 23, 170, 180, 181, 185, 189, 195, 197, 205, 206, 210, 212, 218, 244, 250, 257, 272, 357, 358, 362, 375, 1171, 1173, 1175, 1180, 1189, 1193, 1194], "konvertierung": [3, 23, 1173], "asterix": 3, "format": [3, 17, 23, 29, 30, 31, 42, 51, 53, 54, 55, 56, 91, 129, 130, 132, 144, 165, 181, 182, 184, 185, 192, 199, 201, 203, 206, 210, 219, 222, 229, 230, 232, 238, 243, 244, 248, 250, 251, 256, 259, 260, 271, 274, 275, 280, 294, 295, 296, 300, 301, 303, 309, 312, 313, 316, 317, 322, 323, 324, 329, 331, 334, 335, 338, 339, 380, 381, 386, 422, 466, 778, 779, 825, 856, 862, 885, 945, 999, 1038, 1046, 1082, 1092, 1095, 1103, 1104, 1106, 1107, 1116, 1117, 1118, 1119, 1121, 1123, 1128, 1139, 1151, 1186, 1190], "zweck": [3, 195, 1187], "extern": [3, 13, 21, 23, 29, 64, 86, 161, 165, 169, 191, 194, 201, 223, 224, 229, 240, 245, 250, 259, 280, 295, 305, 313, 321, 357, 362, 390, 394, 420, 422, 424, 426, 432, 436, 439, 443, 447, 452, 456, 461, 462, 471, 472, 568, 684, 722, 728, 775, 777, 778, 782, 785, 787, 790, 792, 795, 798, 802, 803, 804, 806, 810, 816, 822, 825, 829, 834, 835, 840, 843, 846, 921, 931, 981, 1047, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1121, 1123, 1163, 1165, 1173, 1180, 1187], "datenquellen": 3, "export": [3, 40, 62, 137, 141, 162, 173, 198, 223, 224, 227, 229, 330, 343, 728, 781, 857, 886, 922, 930, 963, 965, 966, 1011, 1013, 1016, 1114, 1131], "daten": [3, 195, 197, 210, 220, 225, 310, 985, 1193], "soap": [3, 32], "ip": [3, 144, 166, 169, 179, 186, 214, 340, 354, 357, 363, 368, 565, 577, 924, 942, 948, 984, 1151, 1180, 1187, 1191, 1193], "kamera": 3, "einen": [3, 5, 23, 170, 171, 181, 185, 189, 195, 197, 205, 218, 254, 375, 643, 912, 1170, 1171, 1172, 1173, 1175, 1182, 1190, 1192, 1193, 1194], "videomautsystemen": 3, "implement": [3, 16, 23, 24, 28, 42, 50, 53, 54, 55, 59, 63, 64, 70, 83, 85, 86, 98, 111, 112, 114, 120, 122, 124, 140, 147, 162, 164, 167, 182, 190, 198, 200, 218, 223, 224, 231, 237, 241, 244, 245, 247, 252, 254, 269, 275, 284, 287, 288, 289, 290, 291, 296, 312, 316, 327, 344, 345, 350, 357, 368, 391, 393, 425, 435, 437, 438, 454, 464, 469, 476, 479, 480, 482, 483, 484, 486, 487, 488, 491, 492, 494, 503, 504, 508, 509, 510, 525, 529, 531, 532, 533, 534, 535, 537, 538, 539, 543, 544, 545, 546, 548, 550, 555, 558, 559, 583, 585, 589, 593, 601, 602, 603, 604, 609, 638, 644, 653, 655, 656, 657, 664, 672, 673, 674, 675, 676, 677, 678, 679, 685, 690, 691, 692, 694, 704, 719, 720, 721, 722, 728, 729, 731, 740, 744, 746, 748, 754, 769, 772, 773, 776, 777, 778, 784, 791, 794, 811, 839, 856, 858, 862, 864, 922, 929, 931, 942, 945, 951, 967, 972, 993, 1017, 1021, 1022, 1027, 1028, 1029, 1035, 1039, 1063, 1098, 1102, 1111, 1118, 1123, 1132, 1135, 1139, 1176, 1181], "gige": 3, "vision": [3, 280, 375], "clientlibrari": 3, "softwarebasiert": 3, "kamerasimul": 3, "t\u00e4tigkeiten": 3, "hardwareteil": 3, "rs232": [3, 4, 202], "lagesensor": 3, "anpassung": 3, "cryptsetup": 3, "filesystemverschl\u00fcsselung": 3, "anforderungen": [3, 1170], "applik": [3, 179], "august": [3, 23], "logistik": 3, "autom": [3, 201, 214, 245, 259, 301, 375, 922, 933, 940, 1013, 1015, 1023, 1123], "beteiligten": 3, "protokol": [3, 4, 1180, 1187, 1192], "server": [3, 144, 166, 169, 175, 181, 202, 214, 225, 234, 250, 257, 260, 271, 275, 282, 292, 296, 318, 324, 330, 336, 460, 506, 520, 851, 925, 938, 940, 948, 993, 1135, 1151, 1168, 1187], "zu": [3, 6, 8, 170, 171, 176, 179, 180, 185, 189, 195, 206, 207, 210, 212, 216, 225, 226, 241, 242, 251, 253, 257, 265, 272, 357, 362, 375, 847, 1170, 1171, 1172, 1173, 1174, 1175, 1180, 1183, 1186, 1187, 1188, 1189, 1190, 1192, 1193, 1194], "sp": [3, 692], "tcp": [3, 162, 169, 186, 202, 307, 923, 948, 1139, 1180, 1187, 1191, 1193], "autonomen": 3, "fahrzeugen": 3, "kundenapplikationen": 3, "autonom": [3, 204, 922, 1130], "fahrzeug": 3, "mikrocontrol": 3, "seriel": [3, 4, 1180, 1182], "beratend": 3, "versionskontrol": [3, 23, 175, 1188], "architektur": [3, 23, 175, 375], "2008": [3, 173, 237, 1048], "ylog": [3, 23], "gmbh": [3, 23, 466], "dobl": [3, 23], "heizsystem": 3, "parametrisierung": 3, "anlag": [3, 210], "mit": [3, 4, 5, 7, 8, 23, 158, 170, 171, 179, 180, 181, 185, 187, 189, 197, 201, 202, 206, 207, 208, 211, 212, 215, 216, 218, 225, 226, 227, 228, 241, 250, 251, 253, 254, 257, 265, 296, 353, 357, 358, 362, 374, 376, 912, 1078, 1170, 1172, 1173, 1174, 1175, 1180, 1182, 1186, 1188, 1189, 1190, 1192, 1193, 1194], "iar": 3, "arm": [3, 161, 173, 214, 398, 805, 825, 826, 929, 942, 996, 999, 1000, 1011], "workbench": 3, "segger": [3, 162], "embo": [3, 162], "vba": 3, "excel": [3, 79, 163, 201, 227, 1114, 1128], "verteilung": 3, "microsoft": [3, 11, 168, 169, 172, 174, 178, 189, 197, 267, 269, 278, 287, 289, 375, 377, 425, 441, 864, 1114, 1170], "net": [3, 23, 39, 43, 124, 142, 148, 179, 180, 205, 257, 263, 330, 465, 541, 542, 819, 825, 852, 853, 913, 948, 1136], "versionskontrollinfrastruktur": 3, "assoziiert": [3, 181, 1189, 1190], "script": [3, 38, 62, 152, 155, 158, 161, 163, 168, 169, 178, 193, 201, 202, 204, 229, 231, 237, 247, 250, 277, 278, 298, 348, 357, 374, 376, 458, 466, 477, 728, 825, 867, 870, 885, 1013, 1024, 1050, 1051, 1075, 1078, 1158, 1171, 1182], "shell": [3, 4, 32, 98, 100, 102, 105, 124, 178, 182, 201, 202, 204, 242, 250, 268, 277, 298, 318, 330, 342, 343, 356, 357, 358, 359, 362, 374, 376, 378, 460, 466, 488, 502, 530, 531, 532, 533, 534, 535, 536, 537, 540, 582, 755, 776, 777, 778, 825, 848, 852, 853, 854, 855, 858, 859, 860, 862, 863, 866, 867, 869, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 885, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 900, 901, 902, 903, 913, 914, 915, 918, 921, 922, 932, 933, 934, 935, 936, 944, 950, 951, 952, 960, 962, 965, 966, 976, 979, 982, 984, 999, 1001, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1013, 1049, 1050, 1052, 1073, 1075, 1101, 1163, 1171, 1178, 1180, 1182, 1183, 1187, 1188, 1189, 1191], "oststeiermark": 3, "erweiterung": [3, 375], "buildumgebung": 3, "cmake": [3, 4, 5, 44, 66, 73, 74, 75, 79, 88, 98, 107, 124, 159, 168, 173, 178, 189, 192, 224, 240, 267, 269, 287, 289, 360, 374, 376, 377, 468, 470, 472, 473, 476, 477, 478, 479, 480, 488, 502, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 582, 602, 778, 779, 921, 1009, 1161, 1183], "www": [3, 20, 23, 59, 60, 63, 86, 158, 168, 177, 179, 199, 202, 203, 275, 377, 744, 781, 796, 802, 826, 965, 1134, 1136], "org": [3, 4, 23, 62, 148, 154, 158, 161, 165, 169, 173, 179, 181, 192, 202, 205, 222, 231, 237, 238, 247, 250, 254, 275, 288, 315, 361, 377, 781, 796, 798, 802, 825, 826, 965, 1011, 1013, 1047, 1068, 1078, 1117, 1134, 1151, 1152], "confix": [3, 159], "2009": [3, 1123], "schulungen": [3, 6, 23, 158, 159, 176], "dem": [3, 5, 8, 23, 170, 171, 179, 180, 181, 185, 189, 202, 206, 216, 225, 228, 241, 242, 251, 253, 265, 296, 336, 357, 362, 375, 376, 985, 1170, 1171, 1172, 1174, 1175, 1180, 1182, 1189, 1190, 1192], "umkrei": 3, "softwareentwicklung": [3, 4, 175], "nicht": [3, 5, 7, 23, 37, 170, 171, 176, 179, 185, 189, 206, 207, 210, 215, 218, 237, 242, 244, 250, 257, 263, 282, 292, 352, 357, 375, 913, 1171, 1172, 1173, 1174, 1175, 1180, 1182, 1183, 1186, 1187, 1188, 1189, 1192, 1193, 1194], "from": [3, 5, 8, 13, 21, 27, 33, 34, 35, 36, 39, 44, 53, 54, 56, 62, 64, 66, 69, 74, 75, 79, 82, 83, 85, 87, 91, 98, 99, 100, 102, 103, 104, 107, 110, 111, 112, 114, 119, 120, 124, 125, 126, 127, 128, 130, 131, 136, 141, 144, 151, 155, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 175, 177, 178, 179, 181, 182, 184, 185, 190, 194, 195, 198, 199, 201, 202, 203, 204, 206, 212, 213, 214, 219, 221, 222, 223, 224, 226, 228, 229, 231, 235, 237, 238, 244, 245, 247, 248, 251, 252, 254, 257, 259, 262, 266, 267, 269, 271, 272, 274, 277, 280, 284, 287, 288, 289, 290, 291, 294, 296, 298, 299, 300, 301, 306, 309, 312, 314, 316, 317, 322, 323, 324, 326, 327, 328, 329, 334, 335, 338, 339, 342, 343, 344, 345, 346, 347, 348, 350, 354, 356, 357, 359, 360, 361, 362, 364, 365, 378, 379, 385, 387, 388, 392, 395, 398, 401, 402, 403, 406, 410, 417, 419, 420, 425, 426, 432, 433, 436, 439, 440, 442, 443, 444, 446, 448, 452, 453, 454, 456, 460, 461, 462, 464, 465, 467, 468, 472, 475, 476, 477, 478, 480, 482, 483, 484, 489, 493, 503, 507, 509, 525, 526, 527, 528, 530, 533, 536, 538, 539, 540, 541, 542, 560, 568, 571, 577, 582, 585, 586, 587, 588, 589, 591, 592, 593, 594, 595, 597, 599, 600, 602, 603, 613, 617, 618, 635, 647, 654, 657, 659, 665, 668, 675, 679, 682, 683, 684, 686, 690, 695, 699, 704, 710, 716, 721, 722, 734, 736, 740, 741, 742, 743, 746, 748, 754, 756, 760, 768, 773, 774, 775, 776, 777, 778, 779, 780, 781, 784, 794, 796, 800, 805, 807, 813, 817, 825, 826, 827, 828, 833, 835, 837, 845, 850, 851, 852, 853, 856, 857, 860, 861, 862, 864, 867, 868, 869, 875, 877, 882, 884, 885, 886, 887, 888, 890, 891, 904, 909, 917, 918, 921, 922, 924, 925, 926, 927, 930, 931, 934, 938, 942, 945, 946, 947, 948, 949, 952, 955, 957, 958, 960, 962, 965, 968, 973, 978, 979, 984, 985, 987, 996, 997, 1002, 1011, 1013, 1015, 1017, 1022, 1023, 1024, 1027, 1030, 1031, 1032, 1033, 1034, 1035, 1038, 1042, 1045, 1046, 1047, 1050, 1051, 1054, 1057, 1066, 1069, 1070, 1072, 1073, 1076, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1119, 1120, 1121, 1124, 1125, 1126, 1127, 1129, 1131, 1133, 1135, 1136, 1137, 1138, 1139, 1143, 1144, 1145, 1148, 1150, 1151, 1153, 1155, 1156, 1158, 1160, 1163, 1165, 1168, 1179, 1186], "scratch": [3, 42, 194, 929, 1130], "mathia": [3, 1171], "kettner": [3, 158], "novemb": [3, 23], "bodenseo": [3, 1187], "singen": 3, "bodense": [3, 1187], "spielesoftwar": 3, "entwurf": [3, 23], "systemschnittstellen": [3, 1189], "driverentwicklung": [3, 175], "powerpc": 3, "vanilla": [3, 165], "kernel": [3, 4, 5, 43, 62, 66, 79, 111, 112, 144, 147, 151, 152, 157, 158, 159, 161, 162, 164, 172, 173, 174, 175, 178, 180, 195, 202, 234, 247, 250, 257, 260, 275, 278, 282, 292, 296, 318, 324, 330, 336, 343, 363, 374, 376, 418, 440, 453, 778, 779, 780, 781, 782, 784, 785, 786, 787, 788, 790, 792, 794, 795, 796, 797, 804, 805, 806, 808, 810, 811, 812, 813, 814, 815, 816, 818, 820, 821, 822, 823, 824, 829, 831, 834, 836, 837, 838, 839, 840, 843, 845, 846, 850, 856, 860, 862, 863, 864, 869, 913, 918, 921, 925, 927, 928, 930, 931, 942, 945, 948, 949, 951, 954, 965, 967, 968, 981, 983, 984, 987, 992, 996, 997, 999, 1171, 1180, 1191], "abteilungsleitung": 3, "ag": [3, 32, 167, 169, 181, 195, 237, 240, 282, 351, 449, 667, 668, 669, 670, 671, 673, 674, 675, 676, 677, 678, 679, 778, 850, 999, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1148], "realtim": [4, 5, 79, 81, 175, 178, 179, 278, 358, 359, 370, 371, 376, 754, 756, 778, 823, 827, 830, 833, 844, 921, 925, 930, 931, 962, 981, 982, 984, 993, 1190, 1191, 1192], "hardwareintegr": [4, 175], "netzwerkprogrammierung": [4, 1180, 1193], "multithread": [4, 29, 59, 63, 73, 74, 75, 76, 79, 157, 158, 162, 164, 175, 194, 198, 229, 238, 248, 265, 287, 289, 317, 366, 370, 371, 375, 376, 441, 451, 682, 710, 748, 777, 778, 970, 975, 984, 997, 998, 1024, 1033, 1121, 1123, 1176, 1180, 1191], "kerneldriv": 4, "rs485": 4, "In": [4, 6, 7, 23, 42, 44, 50, 60, 64, 98, 104, 105, 107, 111, 112, 124, 141, 142, 150, 161, 162, 163, 164, 166, 168, 171, 173, 175, 177, 178, 186, 190, 195, 200, 207, 210, 214, 215, 223, 231, 237, 240, 244, 247, 248, 250, 251, 254, 262, 278, 287, 289, 296, 305, 321, 327, 342, 352, 357, 374, 398, 412, 465, 467, 470, 471, 477, 482, 487, 488, 489, 502, 503, 504, 506, 508, 509, 525, 528, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 542, 547, 549, 582, 586, 589, 590, 593, 597, 598, 605, 608, 611, 627, 633, 637, 646, 649, 650, 655, 660, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 682, 683, 691, 695, 699, 704, 722, 729, 732, 738, 742, 747, 749, 755, 763, 775, 776, 777, 778, 786, 791, 798, 823, 825, 837, 854, 857, 858, 867, 869, 871, 875, 877, 879, 881, 896, 897, 921, 923, 929, 931, 934, 938, 941, 948, 956, 959, 962, 964, 972, 978, 983, 985, 993, 1000, 1004, 1005, 1006, 1007, 1009, 1020, 1021, 1023, 1027, 1030, 1031, 1035, 1036, 1042, 1043, 1047, 1050, 1064, 1065, 1068, 1069, 1070, 1080, 1081, 1091, 1100, 1106, 1111, 1119, 1123, 1132, 1135, 1139, 1144, 1145, 1147, 1148, 1158, 1159, 1173, 1177, 1180, 1187, 1189], "userspac": [4, 82, 86, 87, 137, 142, 147, 162, 163, 234, 250, 257, 260, 275, 278, 282, 292, 296, 318, 324, 330, 336, 375, 453, 460, 778, 783, 794, 802, 803, 811, 817, 823, 827, 833, 837, 841, 843, 861, 863, 921, 924, 928, 931, 942, 962, 964, 965, 983, 987, 993, 1180, 1181], "host": [4, 109, 161, 168, 173, 330, 354, 368, 805, 826, 923, 929, 1000, 1002, 1011, 1134, 1139, 1151], "devic": [4, 33, 70, 73, 74, 75, 79, 85, 90, 119, 125, 142, 147, 161, 162, 167, 180, 201, 209, 291, 358, 359, 360, 525, 541, 542, 752, 754, 756, 776, 778, 787, 794, 795, 796, 802, 803, 806, 807, 809, 816, 825, 827, 829, 834, 840, 841, 843, 844, 846, 858, 861, 864, 867, 907, 921, 930, 942, 945, 951, 959, 965, 984, 987, 988, 990, 993, 1009, 1034, 1171, 1180, 1181, 1182, 1187], "libusb": [4, 162], "gadgetf": [4, 162], "modbu": [4, 179], "verschiedenen": [4, 23, 189, 206, 1173, 1174, 1186, 1192], "rto": [4, 162], "yocto": [4, 147, 151, 152, 173, 778, 825, 919, 1002, 1171], "programmiersprachen": [4, 8, 206, 216, 225, 241, 253, 1175, 1192], "incl": [4, 23, 159, 1182], "buildsystem": 4, "autoconf": [4, 62, 173], "automak": [4, 168, 173, 1013, 1183], "meson": [4, 168, 173, 991, 995, 1013], "ninja": [4, 32, 173, 467, 1001, 1013], "make": [4, 13, 17, 43, 44, 45, 62, 64, 66, 69, 71, 79, 81, 110, 126, 127, 129, 137, 142, 147, 152, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 177, 178, 182, 183, 186, 190, 191, 194, 198, 199, 200, 204, 213, 214, 221, 223, 224, 235, 238, 250, 254, 267, 269, 291, 296, 299, 304, 313, 320, 357, 360, 376, 409, 421, 425, 433, 440, 442, 444, 454, 460, 464, 467, 468, 469, 473, 475, 476, 478, 480, 482, 483, 484, 487, 503, 504, 509, 510, 527, 540, 542, 554, 560, 565, 571, 589, 600, 602, 604, 607, 619, 654, 656, 669, 682, 690, 695, 699, 736, 741, 742, 746, 756, 763, 772, 773, 786, 793, 794, 798, 800, 803, 805, 825, 826, 842, 854, 864, 868, 870, 891, 904, 923, 924, 929, 930, 931, 952, 955, 957, 978, 981, 983, 985, 987, 992, 996, 999, 1011, 1013, 1014, 1015, 1016, 1020, 1024, 1027, 1030, 1042, 1073, 1080, 1093, 1101, 1128, 1141, 1178, 1179, 1189], "perl": [4, 173, 724, 914, 1050], "leider": [4, 170, 237, 250, 257, 272, 1171, 1173], "objektorientiert": [4, 375, 1175], "ooa": 4, "ood": 4, "unit": [4, 73, 74, 75, 79, 83, 85, 98, 107, 124, 125, 132, 164, 182, 197, 198, 201, 202, 213, 222, 240, 254, 279, 280, 287, 291, 304, 320, 366, 370, 371, 447, 466, 467, 480, 506, 529, 535, 539, 568, 599, 728, 756, 757, 778, 779, 931, 983, 1065, 1073, 1123, 1135, 1157, 1178, 1179], "test": [4, 16, 17, 33, 40, 73, 74, 75, 79, 83, 85, 98, 124, 127, 140, 142, 158, 162, 164, 165, 167, 168, 169, 175, 178, 181, 182, 188, 189, 190, 193, 197, 198, 201, 213, 219, 222, 235, 237, 238, 240, 250, 267, 269, 289, 296, 305, 317, 321, 327, 366, 368, 370, 376, 377, 389, 451, 464, 465, 471, 475, 482, 483, 484, 485, 486, 487, 488, 491, 492, 494, 495, 504, 506, 507, 529, 531, 532, 533, 534, 535, 536, 537, 538, 540, 543, 544, 545, 546, 548, 550, 551, 552, 553, 555, 556, 557, 558, 559, 560, 561, 565, 577, 579, 584, 585, 586, 597, 598, 600, 601, 603, 604, 662, 673, 674, 675, 676, 677, 678, 687, 689, 692, 693, 694, 725, 731, 736, 740, 741, 742, 743, 745, 758, 772, 773, 774, 776, 778, 779, 783, 815, 825, 828, 830, 833, 841, 885, 923, 924, 929, 952, 1007, 1015, 1046, 1055, 1065, 1069, 1072, 1092, 1117, 1123, 1129, 1130, 1135, 1143, 1162, 1164, 1166, 1169, 1179], "driven": [4, 45, 72, 79, 83, 162, 175, 178, 189, 198, 213, 240, 278, 280, 306, 309, 376, 464, 491, 601, 603, 604, 983, 989, 990, 1148, 1156, 1179], "develop": [4, 5, 21, 45, 72, 74, 79, 81, 83, 104, 105, 122, 163, 165, 167, 168, 169, 173, 175, 178, 186, 189, 197, 198, 201, 206, 213, 219, 224, 225, 232, 234, 235, 240, 245, 270, 275, 280, 305, 306, 309, 321, 356, 358, 359, 368, 374, 376, 442, 454, 460, 464, 469, 477, 488, 502, 530, 531, 532, 533, 534, 535, 536, 537, 540, 541, 542, 582, 601, 603, 604, 657, 681, 755, 777, 778, 779, 782, 785, 787, 788, 790, 792, 795, 797, 798, 799, 801, 804, 806, 808, 810, 812, 814, 816, 818, 820, 822, 824, 825, 826, 829, 831, 834, 836, 840, 843, 846, 855, 858, 859, 861, 864, 921, 923, 924, 944, 950, 952, 960, 962, 976, 979, 982, 984, 1000, 1001, 1004, 1005, 1006, 1007, 1008, 1010, 1016, 1048, 1078, 1080, 1123, 1156, 1157, 1178, 1191], "gui": [4, 125, 141, 161, 167, 173, 177, 240, 364, 365, 864, 967, 1189], "gtk": [4, 158], "qt": 4, "fast": [5, 43, 122, 169, 177, 201, 223, 238, 240, 254, 263, 313, 454, 560, 732, 746, 1071, 1152, 1188], "40": [5, 7, 23, 107, 158, 165, 172, 184, 195, 205, 210, 212, 215, 218, 221, 226, 227, 231, 234, 237, 242, 244, 247, 250, 254, 257, 260, 262, 263, 272, 275, 279, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 349, 352, 388, 466, 487, 489, 503, 573, 574, 595, 741, 742, 743, 776, 907, 926, 929, 930, 931, 1011, 1025, 1026, 1035, 1050], "jahren": 5, "wesentlichen": [5, 23, 197, 1172], "programmier": [5, 37, 374, 375, 1174, 1175, 1180, 1182, 1183, 1188, 1189], "bin": [5, 13, 23, 50, 64, 122, 124, 125, 129, 132, 135, 137, 141, 158, 161, 163, 173, 182, 185, 195, 212, 222, 231, 234, 237, 242, 247, 250, 254, 257, 260, 272, 275, 280, 282, 292, 296, 318, 324, 330, 336, 340, 357, 365, 467, 468, 469, 470, 472, 473, 474, 475, 478, 480, 525, 540, 541, 803, 825, 857, 860, 862, 867, 870, 881, 885, 886, 910, 911, 916, 929, 931, 947, 954, 957, 963, 977, 978, 987, 999, 1000, 1001, 1011, 1013, 1016, 1020, 1026, 1050, 1077, 1078, 1101, 1110, 1111, 1126, 1139, 1151, 1156, 1158, 1170], "ich": [5, 23, 65, 170, 171, 179, 180, 181, 185, 195, 205, 213, 244, 296, 357, 375, 1134, 1170, 1171, 1180, 1187, 1188, 1194], "heut": [5, 375, 1175, 1190], "feinen": 5, "situat": [5, 120, 122, 150, 162, 164, 173, 194, 221, 538, 539, 542, 554, 616, 693, 819, 825, 876, 878, 922, 938, 957, 985, 1002, 1011, 1014, 1015, 1063, 1171, 1176], "repertoir": [5, 8, 28, 177, 206, 216, 488], "schulungsmateri": [5, 23], "anbieten": 5, "k\u00f6nnen": [5, 23, 176, 179, 189, 195, 207, 220, 357, 358, 362, 375, 913, 1170, 1172, 1173, 1183, 1193, 1194], "da": [5, 7, 8, 65, 170, 171, 176, 179, 180, 181, 182, 189, 197, 201, 205, 206, 210, 213, 215, 216, 218, 222, 225, 226, 227, 231, 234, 241, 242, 244, 247, 250, 251, 253, 255, 263, 265, 272, 282, 292, 296, 314, 317, 324, 326, 330, 340, 349, 352, 357, 362, 375, 913, 1170, 1171, 1172, 1173, 1174, 1175, 1180, 1182, 1186, 1187, 1188, 1189, 1190, 1193, 1194], "sich": [5, 23, 37, 170, 171, 176, 179, 180, 181, 185, 195, 197, 205, 226, 244, 247, 257, 358, 1170, 1171, 1173, 1174, 1175, 1180, 1183, 1187, 1188, 1189, 1192, 1193, 1194], "jahrelangen": 5, "erfahrung": [5, 251, 1172], "entwickelt": [5, 189, 1180, 1187, 1189], "hat": [5, 8, 23, 37, 165, 170, 171, 179, 180, 181, 182, 185, 189, 195, 197, 205, 206, 210, 212, 216, 227, 247, 302, 314, 350, 357, 375, 1049, 1170, 1173, 1175, 1180, 1187, 1188, 1189, 1192, 1193, 1194], "al": [5, 8, 23, 32, 98, 170, 171, 176, 179, 180, 181, 185, 187, 189, 197, 206, 207, 214, 216, 218, 226, 244, 245, 247, 255, 259, 301, 358, 375, 592, 741, 850, 886, 907, 912, 913, 945, 1123, 1170, 1173, 1175, 1180, 1186, 1187, 1188, 1189, 1192], "einzelunternehm": [5, 23], "werd": [5, 1170], "erster": 5, "lini": 5, "firmen": [5, 23], "gebucht": [5, 11, 171, 185, 197, 375], "um": [5, 23, 32, 170, 171, 179, 181, 185, 189, 195, 205, 206, 244, 257, 272, 336, 375, 1170, 1172, 1173, 1174, 1175, 1180, 1186, 1190], "mitarbeit": [5, 23], "weiterzubilden": 5, "entwickeln": [5, 189], "oder": [5, 23, 158, 179, 185, 189, 195, 206, 207, 212, 226, 235, 244, 251, 885, 913, 1148, 1170, 1173, 1174, 1180, 1183, 1186, 1187, 1188, 1190, 1193, 1194], "damit": [5, 23, 170, 195, 225, 251, 357, 362, 375, 1171, 1189, 1193], "arbeiten": [5, 23, 195, 206, 1186], "softwaretest": 5, "produktingenieur": 5, "program": [5, 8, 29, 30, 42, 59, 63, 73, 74, 75, 77, 79, 85, 86, 91, 98, 102, 111, 112, 114, 115, 120, 124, 125, 129, 132, 135, 137, 141, 142, 155, 157, 158, 159, 161, 162, 163, 164, 167, 169, 172, 173, 175, 177, 180, 182, 183, 185, 186, 190, 197, 198, 199, 201, 202, 203, 208, 213, 214, 219, 222, 223, 229, 231, 232, 235, 238, 241, 245, 248, 251, 252, 253, 259, 264, 268, 277, 280, 281, 284, 287, 289, 297, 298, 299, 301, 305, 321, 323, 329, 331, 342, 343, 344, 345, 346, 347, 348, 354, 356, 357, 358, 359, 360, 361, 362, 363, 368, 370, 371, 374, 376, 381, 383, 384, 387, 389, 390, 392, 393, 394, 395, 398, 400, 403, 405, 410, 423, 432, 436, 437, 439, 441, 443, 444, 451, 453, 456, 458, 459, 460, 461, 465, 466, 467, 471, 472, 476, 477, 480, 482, 488, 492, 502, 503, 504, 508, 509, 510, 525, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 540, 542, 547, 549, 571, 577, 582, 583, 589, 590, 605, 608, 611, 627, 633, 637, 646, 647, 649, 650, 655, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 684, 691, 722, 724, 727, 732, 737, 738, 742, 747, 749, 755, 763, 775, 777, 778, 779, 783, 794, 796, 805, 825, 839, 841, 842, 855, 857, 858, 859, 860, 861, 862, 865, 867, 868, 869, 880, 885, 888, 914, 918, 921, 922, 924, 927, 928, 929, 930, 938, 942, 945, 947, 948, 949, 950, 951, 952, 955, 956, 957, 958, 960, 964, 965, 969, 973, 976, 979, 982, 983, 984, 985, 989, 990, 992, 997, 998, 1000, 1007, 1011, 1013, 1016, 1017, 1018, 1023, 1024, 1026, 1032, 1033, 1034, 1035, 1046, 1049, 1053, 1054, 1057, 1058, 1061, 1065, 1066, 1068, 1075, 1076, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1124, 1125, 1126, 1128, 1129, 1130, 1132, 1133, 1135, 1136, 1137, 1139, 1143, 1150, 1151, 1153, 1155, 1156, 1160, 1163, 1172, 1173, 1174, 1175, 1176, 1178, 1179, 1181, 1182, 1183], "gem\u00e4\u00df": [5, 23, 171], "herkunft": [5, 1194], "mein": [5, 23, 170, 171, 176, 180, 181, 195, 205, 206, 225, 330, 336, 375, 924, 992, 1171, 1186], "muttersprach": [5, 23], "ist": [5, 7, 8, 170, 171, 176, 179, 180, 181, 185, 189, 197, 205, 206, 210, 212, 215, 216, 218, 221, 225, 227, 231, 234, 235, 240, 241, 242, 244, 247, 250, 253, 257, 263, 272, 282, 296, 314, 324, 330, 340, 349, 352, 353, 357, 362, 375, 420, 985, 1141, 1170, 1171, 1172, 1173, 1174, 1175, 1180, 1183, 1186, 1187, 1188, 1189, 1190, 1192, 1193, 1194], "umfasst": [5, 171], "weiterf\u00fchrend": [5, 23], "materi": [5, 8, 12, 13, 14, 17, 23, 27, 66, 98, 107, 155, 158, 159, 162, 176, 177, 194, 197, 198, 199, 201, 203, 204, 206, 208, 209, 213, 216, 219, 222, 224, 225, 228, 229, 232, 235, 238, 240, 241, 253, 256, 259, 262, 266, 267, 269, 271, 274, 281, 284, 290, 291, 295, 301, 305, 306, 309, 312, 313, 316, 317, 321, 323, 329, 335, 339, 357, 365, 375, 467, 469, 470, 471, 472, 473, 475, 476, 478, 480, 482, 483, 484, 485, 486, 487, 489, 491, 494, 503, 504, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 538, 540, 543, 544, 545, 546, 548, 550, 551, 552, 553, 555, 556, 557, 558, 559, 582, 662, 742, 776, 779, 927, 938, 963, 966, 1023, 1024, 1026, 1046, 1047, 1075, 1125, 1137, 1138, 1150, 1161, 1165, 1173, 1175, 1178, 1180, 1181, 1187], "stark": 5, "gefragt": 5, "sind": [5, 7, 23, 170, 171, 180, 181, 185, 189, 197, 206, 207, 212, 215, 218, 234, 251, 330, 357, 362, 375, 912, 913, 985, 1170, 1173, 1174, 1175, 1180, 1182, 1183, 1186, 1187, 1189, 1190, 1193, 1194], "letzter": 5, "betreffend": 5, "neuen": [5, 1175], "standard": [5, 34, 35, 36, 38, 107, 124, 154, 169, 190, 194, 199, 201, 203, 224, 231, 237, 246, 247, 250, 254, 265, 278, 280, 304, 320, 327, 348, 357, 358, 359, 360, 362, 378, 379, 380, 386, 387, 392, 393, 397, 442, 530, 549, 568, 582, 583, 627, 633, 637, 644, 645, 646, 647, 649, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 681, 699, 704, 730, 732, 734, 735, 776, 778, 865, 868, 869, 885, 918, 932, 948, 954, 957, 970, 973, 997, 1027, 1046, 1047, 1063, 1136, 1148, 1152, 1166, 1172, 1173, 1175, 1176, 1177, 1178, 1182], "absolut": [5, 8, 29, 66, 91, 100, 124, 160, 164, 169, 175, 178, 185, 195, 198, 199, 201, 203, 214, 219, 223, 231, 237, 238, 245, 247, 248, 250, 251, 254, 259, 262, 268, 271, 274, 277, 278, 281, 284, 290, 291, 295, 298, 299, 301, 306, 309, 312, 313, 316, 317, 323, 329, 335, 339, 343, 344, 345, 346, 347, 348, 354, 356, 357, 360, 375, 460, 488, 502, 530, 531, 532, 533, 534, 535, 536, 537, 540, 582, 752, 755, 777, 778, 779, 823, 835, 851, 852, 853, 854, 855, 858, 859, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 885, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 905, 921, 941, 944, 950, 952, 960, 962, 976, 979, 982, 984, 1001, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1016, 1024, 1031, 1032, 1033, 1034, 1038, 1046, 1057, 1066, 1076, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1124, 1125, 1129, 1130, 1133, 1136, 1137, 1139, 1143, 1146, 1148, 1150, 1153, 1155, 1160], "beginn": [5, 8, 29, 32, 79, 91, 159, 160, 170, 175, 178, 189, 195, 198, 199, 201, 203, 214, 229, 232, 233, 235, 238, 245, 248, 251, 255, 262, 274, 281, 284, 290, 291, 301, 306, 309, 312, 313, 316, 317, 323, 329, 335, 339, 343, 344, 345, 346, 347, 348, 356, 357, 360, 402, 710, 778, 779, 1024, 1031, 1032, 1033, 1034, 1038, 1046, 1048, 1054, 1057, 1066, 1076, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1124, 1125, 1129, 1130, 1133, 1136, 1137, 1139, 1143, 1150, 1153, 1155, 1160], "advanc": [5, 8, 29, 79, 91, 159, 169, 175, 178, 183, 186, 189, 199, 203, 211, 214, 219, 229, 234, 235, 245, 259, 281, 301, 323, 329, 339, 343, 344, 345, 346, 347, 348, 356, 357, 358, 359, 360, 374, 452, 454, 456, 461, 462, 614, 684, 722, 757, 775, 777, 778, 779, 966, 1023, 1024, 1026, 1031, 1032, 1033, 1034, 1038, 1046, 1048, 1057, 1066, 1076, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1124, 1125, 1128, 1129, 1130, 1133, 1136, 1137, 1139, 1143, 1150, 1153, 1155, 1160, 1163, 1177], "product": [5, 8, 29, 38, 43, 79, 86, 91, 164, 175, 178, 198, 199, 201, 203, 219, 238, 245, 248, 251, 259, 262, 271, 274, 281, 284, 286, 290, 291, 295, 301, 306, 309, 312, 313, 316, 317, 323, 329, 335, 339, 343, 344, 345, 346, 347, 348, 356, 357, 360, 460, 464, 480, 763, 778, 779, 922, 931, 1002, 1016, 1024, 1031, 1032, 1033, 1034, 1038, 1046, 1057, 1066, 1076, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1124, 1125, 1129, 1130, 1133, 1136, 1137, 1139, 1143, 1150, 1153, 1155, 1160], "gro\u00dfe": [5, 37, 195, 1189], "thema": [5, 23, 180, 197, 251, 265, 357, 362, 1170], "einfach": [5, 181, 195, 206, 210, 292, 1174, 1175, 1180, 1186, 1188, 1190, 1192, 1194], "doch": [5, 218, 292, 302, 375, 1192], "m\u00e4chtig": 5, "vermutlich": [5, 195, 1192], "grund": [5, 1173, 1180], "warum": [5, 7, 23, 206, 207, 215, 257, 1180, 1186, 1187, 1192, 1194], "gern": [5, 195, 1170, 1180, 1187], "nachgefragt": 5, "werden": [5, 8, 37, 170, 171, 176, 179, 180, 181, 189, 195, 197, 206, 207, 210, 216, 225, 226, 241, 253, 265, 913, 1170, 1171, 1172, 1173, 1174, 1175, 1180, 1182, 1183, 1186, 1187, 1189, 1190, 1192, 1193, 1194], "deren": [5, 23, 179, 201, 1175, 1188, 1192, 1193], "kernkompetenz": 5, "liegt": [5, 23, 170, 181, 185, 254, 1174, 1190], "sondern": [5, 181, 195, 206, 1171, 1180, 1183, 1186, 1193], "eher": [5, 170, 206, 1172, 1186], "beiwerk": 5, "ihrem": [5, 23, 1170], "eigentlichen": 5, "job": [5, 173, 194, 204, 263, 447, 922, 947, 948, 949, 1018, 1036, 1048, 1052, 1128, 1156], "schreiben": [5, 185, 207, 357, 358, 362, 1173, 1190, 1192], "physik": [5, 185], "z": [5, 38, 110, 181, 182, 185, 195, 205, 237, 238, 250, 253, 275, 302, 330, 340, 387, 397, 408, 409, 470, 603, 666, 736, 851, 912, 997, 1049, 1171, 1180, 1182, 1187], "b": [5, 7, 21, 31, 32, 38, 64, 74, 75, 108, 114, 118, 121, 144, 165, 177, 181, 182, 183, 185, 195, 200, 205, 210, 212, 215, 218, 221, 228, 231, 234, 235, 237, 242, 244, 247, 250, 254, 257, 260, 263, 272, 275, 279, 282, 292, 296, 302, 307, 314, 318, 324, 330, 336, 340, 349, 351, 352, 353, 389, 397, 399, 408, 424, 438, 441, 454, 584, 586, 594, 595, 601, 602, 603, 604, 609, 653, 654, 659, 660, 689, 695, 729, 736, 746, 776, 825, 856, 868, 885, 907, 912, 913, 929, 930, 931, 970, 986, 1015, 1021, 1030, 1033, 1045, 1053, 1054, 1060, 1063, 1065, 1067, 1068, 1073, 1136, 1139, 1151, 1171, 1180, 1182, 1187], "guter": [5, 1171], "ersatz": [5, 206, 1186], "matlab": [5, 183, 185, 238, 375, 1122, 1125], "tester": [5, 159, 1156, 1182], "basic": [5, 10, 28, 29, 31, 73, 74, 75, 78, 79, 84, 98, 102, 104, 107, 111, 112, 124, 128, 129, 130, 131, 134, 137, 141, 142, 158, 159, 162, 164, 169, 172, 177, 178, 183, 186, 189, 198, 211, 224, 229, 240, 248, 250, 253, 254, 278, 280, 287, 288, 289, 297, 305, 315, 319, 321, 327, 356, 357, 358, 359, 360, 362, 364, 368, 374, 376, 426, 432, 436, 439, 443, 452, 454, 456, 458, 459, 461, 462, 469, 471, 472, 479, 486, 488, 489, 502, 530, 531, 532, 533, 534, 535, 536, 537, 540, 547, 549, 560, 576, 577, 582, 608, 616, 621, 633, 637, 645, 646, 649, 650, 654, 655, 656, 667, 674, 675, 676, 677, 678, 679, 684, 687, 688, 690, 693, 695, 722, 739, 755, 763, 773, 775, 777, 778, 782, 785, 787, 792, 795, 802, 806, 816, 825, 827, 829, 834, 840, 843, 845, 846, 848, 852, 853, 859, 861, 866, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 905, 915, 921, 927, 928, 933, 934, 935, 936, 937, 947, 948, 949, 950, 952, 957, 960, 962, 970, 976, 979, 982, 984, 992, 995, 996, 1000, 1001, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1016, 1054, 1082, 1109, 1110, 1121, 1122, 1131, 1137, 1143, 1144, 1146, 1161, 1165, 1177, 1178, 1191], "einf\u00fchrung": [5, 185, 189, 202, 204, 376, 1046, 1172, 1177, 1178, 1180, 1189, 1191], "anhand": [5, 6, 180, 189, 202, 204, 206, 207, 256, 374, 376, 1172, 1178, 1186, 1191], "beispielen": [5, 8, 176, 202, 204, 206, 216, 225, 241, 253, 375, 376, 1178, 1191], "memori": [5, 42, 43, 49, 55, 74, 79, 81, 98, 110, 111, 112, 157, 161, 162, 163, 165, 167, 174, 178, 182, 183, 184, 187, 189, 194, 200, 201, 209, 213, 214, 218, 231, 237, 240, 247, 250, 265, 287, 289, 291, 296, 313, 316, 341, 375, 376, 378, 392, 398, 420, 421, 427, 440, 442, 443, 445, 451, 452, 454, 456, 460, 461, 462, 489, 504, 506, 508, 509, 510, 512, 514, 515, 522, 523, 530, 547, 549, 550, 574, 582, 583, 588, 589, 599, 617, 618, 619, 635, 654, 664, 679, 682, 684, 693, 720, 722, 727, 734, 739, 741, 742, 743, 763, 775, 776, 777, 778, 787, 792, 795, 797, 802, 806, 816, 820, 821, 822, 825, 827, 829, 830, 834, 837, 843, 846, 856, 861, 863, 869, 921, 938, 947, 967, 969, 970, 983, 984, 1016, 1020, 1033, 1034, 1047, 1054, 1135, 1173, 1174, 1177, 1181, 1182, 1191], "weiter": [5, 23, 37, 170, 171, 195, 197, 206, 220, 244, 262, 292, 913, 1170, 1180, 1186, 1187, 1189, 1190, 1194], "standbein": [5, 1180], "mehreren": [5, 195, 211, 1193], "auspr\u00e4gungen": 5, "commandlin": [5, 8, 29, 31, 42, 81, 91, 100, 124, 155, 158, 180, 182, 202, 204, 214, 216, 219, 223, 229, 240, 241, 245, 251, 252, 253, 256, 259, 274, 281, 284, 290, 294, 295, 300, 301, 312, 322, 323, 328, 329, 334, 335, 338, 339, 357, 358, 359, 360, 361, 375, 432, 436, 439, 443, 452, 456, 461, 462, 465, 467, 477, 488, 502, 528, 530, 531, 532, 533, 534, 535, 536, 537, 540, 582, 684, 722, 755, 775, 777, 778, 794, 825, 848, 852, 853, 854, 855, 858, 859, 865, 866, 867, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 886, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 905, 915, 921, 922, 930, 944, 950, 952, 960, 962, 976, 978, 979, 982, 984, 998, 999, 1001, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1017, 1046, 1076, 1079, 1080, 1081, 1082, 1084, 1085, 1086, 1087, 1089, 1090, 1092, 1094, 1095, 1096, 1097, 1098, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1172, 1180, 1182, 1183, 1187, 1188, 1189], "konzept": [5, 23, 375, 1180, 1182, 1189], "zielpublikum": 5, "deckt": 5, "ungef\u00e4hr": [5, 170], "mehr": [5, 11, 23, 170, 179, 181, 205, 211, 231, 340, 375, 1170, 1171, 1173, 1175, 1180, 1187, 1188, 1189, 1194], "kernentwickl": 5, "themen": [5, 23, 176, 187, 189, 1180], "applikationsentwicklung": 5, "direkt": [5, 23, 189, 1173, 1189], "systemschnittstel": 5, "schritt": 5, "geht": [5, 7, 8, 23, 65, 170, 171, 179, 181, 189, 195, 205, 206, 210, 215, 216, 225, 226, 241, 247, 253, 263, 336, 352, 375, 913], "nur": [5, 23, 170, 176, 180, 181, 185, 195, 197, 205, 206, 210, 212, 220, 242, 352, 375, 1172, 1173, 1180, 1183, 1186, 1187, 1188, 1190, 1192, 1193, 1194], "mutig": 5, "pool": [5, 84, 223, 845, 984, 986], "absprach": [5, 1170], "individuel": [5, 23, 197, 1170], "zusammengestellt": 5, "schulungsverlauf": 5, "meisten": [5, 23, 189, 195, 375, 1171, 1192], "recht": [5, 7, 65, 130, 170, 171, 181, 189, 195, 206, 215, 330, 1186, 1187], "dynamisch": [5, 189, 220, 1173, 1175, 1190], "teilnehm": [5, 176, 185, 189, 197, 375, 1180, 1187], "haben": [5, 170, 171, 180, 185, 189, 197, 205, 206, 218, 375, 643, 1171, 1172, 1173, 1174, 1175, 1180, 1186, 1188, 1189, 1190, 1193], "oft": [5, 23, 170, 195, 197, 1174], "bed\u00fcrfniss": [5, 23, 197], "vorab": [5, 176, 189, 225], "bekannt": [5, 23, 195, 1175], "waren": [5, 180, 185, 1171, 1175], "wodurch": [5, 23], "auch": [5, 23, 170, 171, 176, 181, 185, 195, 207, 210, 212, 218, 221, 226, 247, 251, 257, 282, 336, 352, 353, 375, 1170, 1171, 1172, 1173, 1174, 1180, 1183, 1187, 1192, 1194], "mal": [5, 171, 185, 195, 206, 257, 324, 375, 1171, 1175, 1186], "agenda": [5, 23, 27, 186, 291, 295, 299, 301, 305, 313, 317, 321, 323, 324, 327, 329, 335, 339], "abgewichen": 5, "wird": [5, 7, 23, 170, 171, 176, 179, 180, 181, 189, 195, 205, 206, 212, 215, 244, 330, 336, 357, 362, 375, 1170, 1171, 1174, 1175, 1180, 1182, 1183, 1186, 1187, 1188, 1189, 1190, 1192, 1193, 1194], "verh\u00e4ltni": 5, "vortrag": [5, 180, 1170], "\u00fcbungen": [5, 8, 176, 189, 197, 206, 207, 216, 225, 241, 253, 375, 1173, 1180, 1182, 1186, 1189], "ca": [5, 23, 32, 170, 172, 765, 1151], "50": [5, 7, 107, 110, 172, 183, 195, 200, 205, 210, 212, 215, 218, 221, 227, 231, 234, 237, 242, 244, 250, 254, 257, 260, 263, 272, 275, 279, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 349, 352, 353, 358, 359, 449, 451, 467, 538, 573, 574, 907, 929, 930, 931, 1025, 1048, 1068, 1080, 1127, 1128, 1140, 1156], "kleiner": [5, 7, 215, 912], "den": [5, 171, 179, 180, 181, 185, 189, 195, 197, 205, 206, 211, 218, 225, 254, 302, 357, 358, 362, 375, 847, 1171, 1172, 1173, 1174, 1175, 1180, 1183, 1186, 1187, 1193, 1194], "teilnehmern": [5, 375, 1194], "pc": [5, 79, 109, 158, 214, 278, 343, 360, 363, 542, 923, 924, 930, 1171], "erledigt": 5, "speziel": [5, 176, 205, 206, 265, 1183, 1186, 1189, 1193], "fortgeschrittenen": 5, "programmierthemen": 5, "gruppenprojekt": 5, "gegenstand": [5, 1170], "denen": [5, 23, 170, 1180], "zusammenarbeiten": 5, "austauschmedium": 5, "solch": 5, "set": [5, 9, 14, 21, 29, 33, 59, 63, 66, 79, 86, 91, 109, 124, 125, 144, 162, 163, 164, 165, 166, 167, 168, 169, 173, 177, 178, 179, 182, 183, 194, 195, 198, 199, 201, 202, 203, 206, 207, 211, 212, 213, 217, 219, 220, 223, 225, 229, 230, 232, 233, 235, 236, 238, 239, 241, 243, 245, 246, 247, 252, 253, 255, 256, 258, 259, 261, 267, 269, 271, 273, 274, 276, 278, 280, 281, 283, 284, 287, 288, 289, 291, 293, 294, 295, 297, 300, 301, 303, 306, 309, 312, 313, 315, 316, 317, 319, 322, 323, 325, 328, 329, 331, 334, 335, 337, 338, 339, 341, 357, 362, 364, 375, 377, 392, 398, 415, 420, 421, 430, 433, 445, 446, 454, 460, 468, 469, 470, 472, 474, 476, 477, 479, 484, 487, 489, 504, 509, 518, 519, 523, 532, 533, 538, 539, 540, 541, 558, 586, 587, 601, 602, 603, 604, 617, 686, 695, 710, 740, 741, 756, 776, 778, 796, 809, 811, 821, 825, 830, 835, 857, 864, 870, 886, 922, 924, 929, 931, 938, 943, 945, 951, 959, 963, 967, 972, 980, 981, 984, 985, 996, 998, 999, 1000, 1011, 1014, 1020, 1023, 1024, 1027, 1036, 1037, 1046, 1047, 1050, 1054, 1059, 1078, 1100, 1111, 1118, 1119, 1121, 1123, 1125, 1128, 1129, 1130, 1132, 1136, 1150, 1151, 1163, 1165, 1168, 1179, 1186], "gew\u00f6hnlich": [5, 23], "github": [5, 8, 23, 42, 44, 66, 98, 107, 110, 124, 144, 146, 158, 159, 169, 173, 174, 176, 177, 180, 182, 189, 190, 191, 201, 203, 208, 209, 213, 214, 216, 223, 224, 225, 229, 231, 232, 235, 238, 240, 241, 245, 248, 251, 253, 256, 259, 262, 266, 267, 269, 270, 271, 274, 278, 281, 287, 288, 289, 291, 295, 299, 301, 305, 306, 309, 313, 317, 321, 323, 327, 329, 335, 339, 356, 361, 362, 363, 364, 371, 376, 377, 529, 560, 602, 781, 784, 786, 789, 791, 794, 803, 805, 815, 817, 825, 826, 827, 828, 833, 837, 924, 929, 931, 999, 1000, 1001, 1003, 1009, 1013, 1015, 1016, 1017], "endprodukt": 5, "bleibt": [5, 23, 1190], "homepag": [5, 13, 166, 168, 176, 179, 180, 194, 221, 229, 231, 266, 267, 269, 451, 1011, 1156], "erhalten": 5, "hier": [5, 8, 17, 23, 65, 170, 171, 176, 179, 180, 182, 185, 189, 197, 201, 205, 206, 212, 216, 222, 225, 226, 235, 241, 244, 253, 254, 296, 314, 375, 1170, 1173, 1180, 1186, 1187, 1189, 1190, 1192], "mix": [5, 29, 201, 208, 219, 222, 229, 232, 235, 236, 240, 242, 245, 274, 281, 294, 295, 300, 301, 303, 322, 323, 328, 329, 334, 335, 338, 339, 403, 442, 445, 446, 448, 450, 593, 778, 1051, 1054, 1070, 1073, 1082, 1092, 1095, 1096, 1097, 1098, 1102, 1103, 1104, 1105, 1106, 1107, 1121, 1122, 1136, 1141, 1147, 1191], "j\u00fcngeren": 5, "2023": [5, 60, 61, 97, 107, 124, 279, 280, 283, 286, 297, 303, 314, 325, 335, 337, 374, 465, 466, 735], "10": [5, 7, 31, 64, 98, 103, 106, 107, 110, 124, 151, 158, 164, 165, 170, 172, 173, 183, 184, 195, 200, 202, 206, 207, 210, 212, 215, 218, 219, 221, 226, 227, 228, 229, 231, 232, 234, 235, 237, 242, 244, 247, 250, 254, 257, 259, 260, 262, 263, 273, 275, 280, 282, 289, 290, 291, 292, 295, 296, 301, 302, 307, 311, 314, 318, 324, 330, 336, 340, 343, 350, 351, 352, 353, 356, 370, 371, 374, 386, 388, 390, 392, 400, 418, 425, 442, 444, 458, 468, 478, 508, 528, 530, 531, 533, 536, 539, 544, 547, 567, 568, 573, 574, 576, 577, 582, 592, 595, 597, 604, 671, 672, 678, 682, 689, 693, 694, 720, 732, 741, 742, 743, 744, 754, 778, 815, 825, 833, 854, 856, 862, 881, 885, 887, 907, 909, 913, 916, 924, 929, 930, 931, 948, 957, 965, 992, 995, 999, 1000, 1001, 1013, 1014, 1020, 1025, 1026, 1036, 1054, 1055, 1062, 1084, 1085, 1105, 1111, 1122, 1123, 1127, 1128, 1151, 1156, 1168, 1186], "09": [5, 98, 122, 158, 165, 174, 198, 214, 279, 314, 324, 354, 374, 466, 469, 907, 930, 931, 955, 1050, 1127], "11": [5, 7, 40, 64, 107, 124, 158, 159, 174, 183, 184, 189, 190, 194, 195, 200, 201, 202, 206, 207, 210, 212, 215, 218, 221, 224, 226, 227, 228, 231, 236, 237, 238, 242, 244, 247, 250, 254, 257, 260, 263, 266, 267, 272, 276, 279, 282, 286, 292, 296, 302, 310, 313, 314, 325, 326, 330, 336, 340, 349, 350, 351, 352, 353, 360, 363, 370, 371, 374, 376, 378, 392, 458, 460, 474, 486, 539, 567, 576, 577, 583, 585, 586, 588, 592, 594, 595, 601, 603, 613, 618, 620, 625, 638, 639, 640, 643, 656, 680, 684, 687, 690, 691, 696, 697, 698, 699, 709, 721, 722, 723, 724, 725, 726, 727, 729, 732, 733, 736, 738, 741, 742, 744, 745, 747, 754, 755, 756, 759, 761, 763, 775, 776, 778, 779, 850, 863, 907, 916, 970, 975, 999, 1000, 1001, 1049, 1055, 1060, 1078, 1112, 1114, 1118, 1120, 1122, 1125, 1127, 1128, 1139, 1156, 1168, 1175, 1176, 1177, 1186], "introduct": [5, 29, 73, 74, 75, 79, 98, 99, 100, 107, 124, 142, 175, 178, 223, 224, 238, 240, 248, 251, 259, 262, 268, 270, 271, 277, 278, 280, 287, 290, 291, 295, 298, 306, 309, 312, 313, 316, 339, 356, 361, 365, 374, 376, 410, 419, 426, 432, 436, 439, 443, 452, 456, 461, 462, 502, 530, 531, 532, 533, 534, 535, 536, 537, 540, 547, 549, 560, 582, 590, 605, 608, 611, 627, 633, 637, 646, 649, 650, 655, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 682, 684, 691, 703, 710, 722, 738, 747, 755, 763, 775, 777, 778, 779, 827, 848, 852, 853, 854, 855, 858, 866, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 905, 915, 920, 921, 933, 934, 935, 936, 937, 944, 950, 952, 960, 962, 965, 976, 979, 982, 984, 1001, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1046, 1119, 1120, 1121, 1130, 1150, 1155, 1177, 1191], "07": [5, 98, 107, 124, 158, 172, 174, 185, 198, 227, 228, 262, 267, 279, 280, 286, 302, 356, 370, 371, 374, 472, 852, 853, 929, 1050, 1078, 1122, 1127], "18": [5, 7, 64, 165, 172, 173, 177, 183, 184, 200, 205, 210, 212, 215, 218, 221, 222, 226, 227, 231, 234, 235, 237, 243, 244, 250, 254, 257, 260, 263, 272, 276, 278, 279, 282, 286, 292, 296, 302, 307, 314, 318, 324, 336, 340, 350, 352, 353, 356, 374, 592, 657, 721, 729, 741, 778, 789, 798, 825, 862, 868, 870, 904, 907, 921, 931, 955, 957, 991, 1002, 1009, 1010, 1011, 1014, 1042, 1043, 1078, 1085, 1127, 1128], "For": [5, 40, 122, 124, 160, 161, 162, 166, 169, 172, 174, 175, 177, 178, 183, 186, 191, 192, 194, 198, 214, 219, 222, 229, 232, 235, 240, 250, 253, 255, 259, 267, 269, 270, 271, 295, 301, 306, 317, 368, 374, 376, 388, 389, 395, 410, 419, 426, 432, 436, 439, 441, 443, 452, 456, 461, 462, 479, 504, 560, 585, 592, 596, 609, 618, 638, 684, 722, 729, 732, 736, 741, 746, 775, 777, 778, 796, 811, 825, 852, 853, 862, 885, 921, 922, 930, 931, 932, 941, 945, 972, 993, 1000, 1001, 1002, 1009, 1010, 1014, 1047, 1048, 1058, 1065, 1073, 1096, 1101, 1123, 1126, 1128, 1130], "04": [5, 98, 106, 124, 145, 158, 169, 172, 174, 189, 190, 214, 262, 278, 279, 282, 286, 314, 354, 356, 374, 467, 778, 921, 1002, 1009, 1010, 1014, 1127, 1156], "20": [5, 7, 8, 23, 64, 113, 158, 165, 167, 172, 181, 182, 183, 184, 195, 200, 205, 206, 210, 212, 215, 216, 218, 221, 226, 227, 231, 234, 237, 242, 244, 247, 250, 254, 257, 260, 262, 263, 272, 275, 279, 282, 286, 288, 292, 296, 303, 306, 307, 309, 314, 318, 324, 336, 340, 352, 353, 356, 374, 380, 382, 384, 400, 424, 464, 504, 532, 533, 538, 567, 568, 573, 574, 576, 577, 592, 689, 692, 693, 694, 703, 710, 732, 734, 735, 740, 741, 742, 743, 765, 844, 850, 870, 885, 907, 922, 929, 930, 931, 985, 1002, 1011, 1025, 1026, 1050, 1069, 1077, 1078, 1104, 1127, 1128, 1156, 1158, 1165], "clean": [5, 53, 64, 133, 145, 177, 229, 248, 374, 442, 453, 454, 457, 463, 584, 682, 779, 999, 1001, 1011, 1020, 1073, 1122], "code": [5, 21, 23, 28, 29, 33, 40, 42, 53, 55, 64, 66, 71, 74, 81, 86, 104, 105, 109, 114, 117, 124, 141, 145, 147, 155, 159, 161, 162, 163, 164, 165, 168, 169, 176, 177, 180, 182, 185, 186, 187, 189, 190, 191, 194, 197, 198, 199, 201, 203, 208, 213, 214, 218, 222, 223, 224, 229, 231, 232, 234, 237, 240, 245, 247, 248, 250, 251, 259, 269, 271, 274, 278, 280, 281, 284, 287, 289, 292, 294, 295, 296, 300, 301, 302, 305, 306, 309, 312, 313, 317, 321, 322, 323, 324, 326, 327, 328, 329, 334, 338, 339, 342, 343, 352, 357, 362, 374, 377, 384, 386, 390, 394, 400, 414, 420, 425, 441, 442, 446, 448, 450, 456, 457, 459, 460, 461, 462, 463, 467, 469, 470, 471, 473, 478, 479, 480, 482, 483, 484, 486, 487, 488, 489, 491, 492, 494, 502, 503, 504, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 543, 544, 545, 546, 548, 550, 551, 552, 553, 555, 556, 557, 558, 559, 563, 565, 566, 568, 569, 571, 572, 574, 575, 577, 578, 580, 581, 582, 583, 584, 585, 586, 588, 592, 593, 594, 595, 597, 598, 599, 600, 601, 602, 603, 604, 610, 612, 613, 614, 615, 616, 619, 620, 621, 622, 623, 625, 626, 629, 630, 631, 635, 639, 640, 641, 642, 643, 647, 653, 654, 656, 657, 659, 660, 662, 668, 671, 675, 676, 682, 683, 687, 689, 691, 692, 693, 695, 697, 699, 710, 719, 720, 721, 722, 724, 725, 726, 727, 729, 731, 736, 740, 741, 743, 744, 745, 746, 754, 756, 758, 760, 762, 764, 766, 767, 768, 769, 771, 772, 773, 774, 776, 777, 778, 779, 784, 789, 802, 803, 817, 823, 825, 830, 837, 840, 841, 843, 846, 864, 891, 921, 922, 930, 931, 946, 947, 963, 966, 970, 974, 983, 987, 989, 990, 992, 994, 996, 998, 999, 1000, 1001, 1002, 1003, 1004, 1006, 1007, 1009, 1011, 1022, 1023, 1025, 1026, 1027, 1031, 1033, 1042, 1044, 1047, 1048, 1050, 1051, 1057, 1058, 1059, 1065, 1069, 1070, 1071, 1078, 1098, 1102, 1121, 1125, 1137, 1139, 1148, 1150, 1156, 1157, 1159, 1163, 1164, 1165, 1168, 1169, 1176, 1181, 1189, 1190, 1194], "With": [5, 29, 113, 115, 116, 142, 145, 150, 163, 169, 189, 250, 259, 278, 280, 281, 284, 289, 296, 304, 306, 309, 313, 317, 320, 334, 338, 374, 415, 444, 460, 470, 480, 481, 490, 502, 516, 530, 582, 691, 722, 777, 778, 779, 825, 854, 855, 921, 928, 929, 960, 962, 979, 997, 1000, 1011, 1042, 1046, 1121, 1137, 1141, 1143, 1145, 1152, 1176, 1178, 1179, 1181], "03": [5, 98, 106, 124, 158, 159, 167, 172, 174, 181, 189, 224, 245, 247, 250, 279, 280, 283, 286, 292, 305, 324, 353, 356, 360, 374, 376, 458, 465, 466, 467, 528, 560, 577, 583, 585, 586, 588, 592, 593, 595, 597, 600, 681, 887, 1011, 1127, 1165, 1175], "28": [5, 7, 23, 98, 106, 125, 158, 165, 172, 173, 183, 184, 195, 200, 205, 210, 212, 215, 218, 221, 226, 227, 231, 234, 237, 242, 244, 247, 250, 254, 257, 260, 263, 272, 275, 279, 282, 286, 292, 296, 302, 314, 318, 324, 330, 336, 340, 351, 352, 353, 370, 371, 374, 466, 478, 525, 541, 542, 565, 574, 657, 704, 815, 867, 907, 931, 959, 1000, 1001, 1013, 1080, 1127, 1168], "29": [5, 7, 98, 107, 172, 173, 183, 184, 195, 200, 205, 210, 212, 215, 218, 221, 226, 227, 231, 234, 237, 242, 244, 250, 254, 257, 260, 263, 272, 275, 279, 282, 286, 292, 296, 302, 314, 318, 325, 330, 336, 349, 352, 356, 370, 371, 374, 466, 744, 789, 929, 931, 999, 1002, 1011, 1127], "sap": [5, 229, 280, 374, 1143], "13": [5, 6, 7, 64, 107, 145, 155, 165, 167, 174, 181, 183, 184, 195, 200, 203, 207, 210, 212, 215, 218, 221, 226, 228, 231, 234, 235, 237, 242, 244, 247, 250, 254, 257, 260, 263, 272, 275, 279, 280, 283, 286, 292, 296, 302, 307, 314, 318, 324, 330, 336, 340, 352, 353, 374, 458, 465, 470, 473, 584, 699, 741, 789, 867, 907, 930, 955, 965, 985, 1013, 1020, 1022, 1063, 1074, 1127, 1128, 1151, 1186], "15": [5, 7, 62, 64, 107, 122, 124, 158, 161, 169, 172, 181, 183, 184, 192, 195, 198, 200, 206, 207, 210, 212, 214, 215, 218, 221, 226, 227, 231, 234, 237, 242, 244, 245, 247, 250, 254, 257, 260, 263, 272, 275, 279, 282, 286, 292, 297, 302, 306, 307, 309, 314, 318, 324, 330, 340, 350, 352, 353, 354, 356, 363, 370, 371, 374, 466, 532, 533, 550, 551, 552, 553, 555, 556, 659, 719, 742, 764, 766, 768, 776, 854, 868, 922, 956, 965, 1035, 1126, 1127, 1128, 1148, 1151, 1186], "02": [5, 98, 107, 115, 124, 158, 165, 172, 174, 181, 185, 211, 221, 248, 262, 279, 280, 286, 370, 371, 374, 458, 466, 467, 931, 999, 1000, 1001, 1011, 1013, 1127], "17": [5, 7, 64, 97, 107, 124, 167, 173, 177, 181, 183, 184, 195, 200, 202, 205, 210, 212, 215, 218, 221, 226, 227, 231, 236, 238, 239, 243, 244, 245, 247, 250, 254, 257, 263, 266, 267, 273, 275, 279, 282, 286, 292, 297, 302, 306, 307, 309, 314, 318, 324, 330, 340, 349, 352, 353, 374, 592, 640, 681, 690, 699, 720, 732, 742, 761, 776, 789, 825, 856, 907, 931, 947, 953, 983, 987, 1014, 1043, 1085, 1127, 1128, 1136, 1148], "tour": [5, 170, 229, 266, 267, 269, 289, 326, 327, 374, 375, 528, 680, 777, 778, 1122, 1176, 1177], "forc": [5, 31, 35, 161, 163, 167, 190, 250, 374, 375, 449, 464, 492, 588, 860, 938, 967, 1001, 1122, 1176], "2022": [5, 98, 106, 107, 145, 174, 237, 243, 247, 250, 266, 267, 273, 276, 324, 370, 371, 374, 466, 477, 539, 710, 735, 739, 760, 763, 776, 885, 887, 1001, 1011, 1078, 1122], "12": [5, 6, 7, 8, 40, 64, 107, 122, 124, 144, 158, 167, 172, 173, 174, 183, 184, 188, 195, 200, 206, 207, 210, 212, 215, 218, 221, 222, 226, 227, 228, 231, 234, 235, 239, 242, 244, 247, 250, 254, 257, 260, 262, 263, 272, 275, 278, 279, 280, 282, 286, 292, 296, 302, 307, 310, 313, 314, 316, 318, 325, 336, 340, 351, 352, 356, 370, 371, 374, 442, 466, 467, 475, 560, 693, 699, 732, 776, 856, 867, 870, 885, 907, 909, 916, 929, 931, 933, 957, 965, 983, 999, 1011, 1013, 1014, 1020, 1022, 1023, 1026, 1035, 1054, 1065, 1122, 1125, 1127, 1128, 1144, 1145, 1151, 1162, 1186], "01": [5, 64, 97, 98, 106, 107, 115, 124, 158, 159, 167, 172, 174, 181, 185, 203, 214, 221, 228, 237, 243, 250, 262, 279, 280, 282, 286, 325, 354, 356, 370, 371, 374, 453, 466, 467, 480, 567, 568, 757, 854, 881, 931, 985, 987, 1014, 1111, 1122, 1127, 1156], "A": [5, 13, 20, 23, 27, 28, 29, 33, 38, 39, 40, 41, 60, 62, 66, 70, 74, 75, 79, 83, 85, 86, 98, 99, 109, 110, 111, 112, 114, 118, 124, 125, 127, 129, 130, 131, 132, 133, 134, 141, 149, 161, 164, 165, 166, 167, 169, 174, 177, 178, 179, 182, 183, 184, 198, 200, 201, 202, 210, 214, 221, 223, 225, 231, 234, 237, 241, 247, 248, 250, 254, 262, 268, 270, 274, 277, 278, 289, 291, 296, 298, 299, 302, 309, 312, 313, 316, 330, 343, 349, 354, 358, 359, 374, 379, 382, 383, 395, 396, 397, 410, 415, 419, 425, 426, 428, 431, 432, 436, 439, 440, 441, 442, 443, 446, 448, 449, 450, 452, 454, 456, 461, 462, 464, 470, 477, 480, 481, 482, 486, 487, 490, 492, 502, 504, 516, 529, 530, 539, 541, 547, 582, 587, 588, 593, 595, 596, 597, 646, 647, 649, 650, 653, 664, 667, 668, 669, 670, 671, 672, 674, 675, 676, 677, 678, 679, 680, 684, 686, 699, 710, 720, 722, 725, 730, 731, 732, 736, 738, 742, 744, 748, 757, 763, 774, 775, 776, 777, 778, 779, 786, 800, 802, 819, 842, 854, 855, 858, 859, 864, 867, 868, 872, 873, 878, 882, 888, 918, 921, 928, 929, 931, 946, 950, 951, 954, 960, 962, 967, 968, 969, 970, 979, 984, 985, 996, 997, 1000, 1002, 1007, 1009, 1010, 1011, 1014, 1015, 1022, 1023, 1027, 1028, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1053, 1054, 1061, 1063, 1068, 1074, 1078, 1079, 1080, 1085, 1108, 1111, 1114, 1125, 1129, 1131, 1132, 1135, 1139, 1142, 1143, 1149, 1151, 1157, 1158, 1168, 1176, 1177, 1178, 1179, 1181, 1191], "new": [5, 16, 32, 42, 44, 49, 50, 55, 64, 66, 79, 108, 122, 129, 130, 159, 162, 164, 165, 166, 167, 168, 169, 172, 177, 189, 194, 214, 231, 235, 237, 247, 250, 254, 262, 272, 289, 295, 296, 313, 343, 368, 374, 376, 403, 433, 437, 438, 446, 450, 464, 467, 487, 489, 507, 511, 523, 525, 529, 538, 540, 541, 550, 551, 552, 553, 555, 556, 560, 566, 574, 583, 584, 589, 592, 638, 640, 651, 653, 654, 659, 676, 680, 684, 686, 687, 691, 692, 693, 695, 698, 709, 720, 723, 727, 729, 731, 733, 734, 738, 739, 740, 741, 742, 743, 747, 748, 755, 757, 759, 763, 767, 768, 769, 775, 778, 779, 782, 819, 825, 833, 857, 881, 904, 922, 925, 929, 931, 954, 955, 956, 965, 967, 968, 974, 986, 1017, 1036, 1051, 1054, 1063, 1102, 1127, 1128, 1145, 1151, 1156, 1175, 1176, 1177, 1179], "languag": [5, 12, 29, 43, 59, 63, 79, 91, 124, 142, 158, 183, 185, 197, 198, 199, 201, 203, 206, 208, 213, 214, 216, 219, 221, 222, 223, 225, 241, 245, 248, 251, 253, 256, 281, 284, 287, 288, 289, 316, 343, 344, 345, 346, 347, 348, 357, 360, 374, 376, 378, 380, 392, 395, 406, 410, 419, 424, 426, 432, 436, 437, 439, 452, 456, 461, 464, 469, 471, 488, 502, 503, 504, 530, 531, 532, 533, 534, 535, 536, 537, 539, 540, 547, 549, 582, 583, 590, 595, 597, 605, 608, 610, 611, 627, 633, 637, 646, 649, 650, 655, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 684, 686, 691, 698, 699, 709, 723, 728, 730, 733, 738, 742, 745, 746, 747, 755, 762, 763, 775, 777, 778, 779, 857, 914, 922, 923, 999, 1001, 1018, 1027, 1031, 1032, 1033, 1034, 1035, 1038, 1043, 1047, 1051, 1053, 1054, 1057, 1066, 1074, 1076, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1125, 1129, 1133, 1136, 1137, 1139, 1143, 1148, 1150, 1153, 1155, 1160, 1165, 1173, 1176, 1177, 1178, 1179, 1181], "start": [5, 8, 42, 111, 112, 129, 130, 156, 158, 161, 162, 163, 164, 167, 172, 173, 177, 181, 186, 191, 198, 199, 201, 202, 203, 204, 206, 208, 209, 210, 213, 214, 216, 219, 223, 224, 229, 235, 244, 250, 251, 260, 262, 275, 278, 280, 282, 284, 287, 289, 291, 296, 299, 314, 316, 317, 324, 327, 330, 336, 340, 343, 360, 374, 377, 384, 387, 388, 397, 400, 414, 437, 458, 459, 472, 480, 484, 487, 494, 560, 571, 577, 643, 654, 659, 662, 682, 734, 757, 776, 786, 825, 838, 852, 853, 857, 858, 861, 863, 864, 885, 886, 898, 907, 909, 922, 948, 949, 958, 961, 968, 969, 973, 977, 978, 981, 983, 986, 992, 996, 999, 1013, 1018, 1025, 1030, 1031, 1033, 1034, 1042, 1052, 1053, 1059, 1069, 1085, 1092, 1093, 1111, 1130, 1132, 1140, 1141, 1145, 1148, 1156, 1164, 1176, 1179], "schluss": [5, 7, 170, 195, 215], "noch": [5, 7, 170, 171, 181, 185, 189, 195, 205, 206, 210, 212, 215, 218, 221, 231, 244, 250, 251, 254, 275, 282, 375, 1175, 1186, 1193], "talk": [5, 42, 45, 50, 60, 85, 124, 125, 141, 162, 166, 177, 182, 186, 194, 198, 201, 206, 238, 240, 241, 317, 359, 464, 465, 727, 736, 825, 844, 922, 927, 931, 938, 1168], "heurigen": 5, "grazer": [5, 61, 180, 201, 317, 927], "linuxtagen": [5, 180], "pointless": [5, 145, 275, 289, 296, 313, 317, 326, 446, 593], "blink": [5, 62, 145, 289, 292, 313, 317, 343, 346, 922, 963, 966], "asyncio": [5, 60, 145, 194, 198, 248, 289, 313, 317, 710, 1123], "libgpiod": [5, 60, 134, 141, 144, 145, 159, 289, 313, 317, 343, 345, 778], "raspberri": [5, 79, 98, 105, 107, 132, 144, 145, 157, 174, 178, 204, 278, 289, 313, 317, 360, 362, 363, 374, 376, 542, 778, 802, 806, 825, 829, 834, 840, 843, 846, 921, 928, 930, 931, 942, 987, 1000, 1002, 1006, 1009, 1011, 1013, 1024, 1046, 1050, 1137, 1139, 1150, 1171, 1180], "pi": [5, 38, 79, 107, 124, 142, 145, 174, 178, 204, 234, 237, 278, 289, 313, 317, 363, 374, 376, 400, 427, 430, 448, 538, 541, 542, 597, 617, 697, 758, 778, 802, 806, 829, 834, 840, 843, 846, 921, 928, 930, 931, 942, 987, 1000, 1002, 1009, 1010, 1013, 1054], "cours": [5, 8, 13, 40, 105, 142, 144, 145, 158, 159, 160, 161, 162, 164, 177, 190, 191, 201, 209, 213, 219, 224, 229, 240, 251, 268, 270, 278, 287, 289, 290, 304, 305, 313, 316, 317, 320, 321, 357, 375, 376, 378, 427, 428, 444, 471, 482, 488, 494, 539, 776, 800, 825, 837, 852, 853, 914, 923, 952, 959, 1001, 1023, 1024, 1046, 1078, 1110, 1119, 1123, 1136, 1137, 1150, 1176, 1179, 1191], "sollt": [5, 23, 170, 171, 176, 179, 218, 1173, 1192], "interess": [5, 23, 251, 1171, 1182], "anderen": [5, 23, 195, 205, 210, 212, 375, 1170, 1171, 1173, 1175, 1194], "themenkomplex": 5, "bestehen": [5, 1189], "biet": 5, "folgend": [5, 176, 195, 206, 251, 1186], "preisgestaltung": 5, "all": [5, 23, 24, 29, 35, 40, 42, 45, 46, 47, 51, 55, 56, 57, 59, 62, 63, 66, 71, 81, 89, 111, 112, 125, 129, 141, 142, 149, 155, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 176, 177, 178, 182, 183, 184, 189, 191, 194, 195, 197, 198, 200, 205, 210, 214, 220, 222, 223, 231, 234, 237, 238, 242, 247, 248, 250, 267, 269, 272, 275, 278, 280, 287, 289, 296, 313, 317, 342, 344, 345, 352, 368, 380, 384, 394, 398, 399, 402, 403, 404, 415, 423, 424, 430, 440, 442, 444, 446, 447, 450, 453, 454, 457, 459, 464, 466, 467, 468, 469, 470, 473, 474, 478, 479, 482, 483, 487, 489, 492, 494, 495, 503, 504, 509, 510, 531, 533, 541, 542, 560, 588, 589, 592, 594, 599, 617, 618, 635, 640, 653, 654, 668, 676, 678, 693, 695, 697, 710, 720, 724, 729, 730, 732, 742, 743, 746, 749, 751, 754, 769, 778, 784, 786, 793, 796, 798, 803, 811, 815, 817, 821, 823, 825, 833, 839, 842, 851, 852, 853, 857, 858, 860, 861, 863, 865, 867, 868, 869, 870, 885, 886, 897, 904, 907, 909, 911, 912, 913, 914, 916, 922, 923, 924, 925, 929, 930, 931, 941, 942, 946, 948, 951, 957, 959, 968, 975, 981, 984, 985, 986, 997, 1001, 1007, 1011, 1016, 1017, 1021, 1022, 1023, 1034, 1042, 1047, 1048, 1052, 1054, 1067, 1068, 1071, 1072, 1073, 1078, 1084, 1085, 1101, 1102, 1118, 1122, 1123, 1132, 1136, 1145, 1151, 1156, 1158, 1163, 1170, 1171, 1173, 1175, 1179, 1180, 1187, 1188, 1191, 1194], "onlin": [5, 11, 23, 167, 174, 176, 177, 189, 194, 197, 375], "gehalten": [5, 8, 158, 185, 197, 206, 216, 225, 241, 253, 1170, 1175, 1186], "klarerweis": 5, "tagsatz": 5, "anf\u00e4llt": 5, "schulung": [5, 23, 157, 170, 171, 185, 194, 197, 375, 376, 781, 784, 789, 794, 803, 811, 989, 992, 996, 1024, 1026, 1046, 1122, 1137, 1150, 1170, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1181, 1182, 1183, 1191], "980": [5, 234, 237, 250, 257, 260, 682], "reisekosten": [5, 23], "auto": [5, 130, 159, 171, 179, 183, 189, 265, 327, 484, 489, 513, 514, 518, 519, 522, 523, 524, 577, 585, 594, 595, 618, 640, 641, 643, 684, 685, 692, 699, 702, 704, 707, 710, 711, 712, 714, 715, 716, 717, 718, 722, 724, 725, 726, 727, 732, 734, 736, 741, 742, 743, 745, 756, 762, 764, 766, 767, 768, 772, 773, 774, 775, 776, 777, 778, 825, 996, 1176, 1187, 1192], "42": [5, 7, 21, 42, 62, 130, 132, 179, 181, 182, 184, 195, 205, 210, 212, 215, 218, 221, 226, 227, 231, 234, 237, 242, 244, 247, 250, 254, 257, 260, 263, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 349, 352, 353, 399, 425, 427, 428, 430, 433, 441, 446, 448, 454, 468, 478, 483, 487, 504, 506, 535, 536, 540, 541, 542, 543, 544, 545, 546, 558, 565, 577, 584, 592, 593, 597, 599, 625, 628, 631, 638, 662, 666, 686, 687, 695, 697, 725, 732, 745, 746, 756, 758, 762, 764, 766, 768, 772, 773, 774, 788, 870, 907, 916, 924, 970, 978, 992, 999, 1000, 1001, 1021, 1022, 1023, 1030, 1033, 1051, 1053, 1054, 1063, 1064, 1065, 1068, 1087, 1168], "per": [5, 50, 79, 168, 195, 313, 348, 368, 398, 437, 442, 531, 762, 815, 821, 835, 839, 844, 845, 857, 861, 881, 907, 974, 983, 1000, 1169, 1194], "kilomet": [5, 164, 724, 885], "anderweitig": 5, "aufwand": [5, 23], "\u00fcbernachtung": [5, 170], "sampl": [6, 115, 124, 132, 162, 173, 219, 222, 223, 235, 239, 245, 251, 254, 271, 287, 313, 330, 343, 460, 528, 754, 972, 992, 1075], "log": [6, 97, 130, 159, 167, 168, 177, 184, 189, 192, 201, 221, 231, 237, 247, 250, 278, 280, 292, 309, 330, 356, 469, 470, 489, 746, 788, 825, 854, 861, 863, 885, 922, 924, 932, 936, 938, 941, 942, 1122, 1125, 1151, 1165], "record": [6, 29, 40, 53, 142, 157, 158, 166, 168, 169, 195, 206, 207, 213, 223, 228, 235, 251, 271, 286, 306, 309, 348, 360, 459, 460, 778, 924, 1018, 1023, 1038, 1080, 1082, 1101, 1112, 1113, 1114, 1115, 1116, 1118, 1121, 1131, 1186], "grundlagen": [6, 8, 23, 155, 256, 295, 374, 1173, 1175, 1182, 1183, 1186, 1187, 1189, 1190, 1193], "4": [6, 7, 8, 32, 62, 64, 107, 110, 113, 122, 154, 159, 161, 165, 167, 173, 181, 182, 183, 184, 185, 188, 195, 200, 202, 206, 207, 210, 212, 215, 218, 221, 222, 226, 227, 228, 229, 231, 232, 234, 235, 237, 242, 244, 245, 247, 250, 254, 257, 259, 260, 263, 271, 272, 275, 279, 280, 282, 286, 292, 295, 296, 301, 302, 307, 314, 318, 324, 329, 330, 336, 340, 350, 351, 352, 354, 357, 370, 371, 374, 388, 404, 424, 427, 430, 447, 451, 454, 455, 465, 466, 468, 486, 489, 528, 532, 533, 534, 535, 536, 538, 540, 541, 543, 559, 561, 577, 584, 586, 594, 595, 598, 600, 601, 602, 603, 604, 616, 617, 625, 635, 685, 687, 689, 704, 705, 706, 708, 710, 719, 721, 725, 732, 734, 745, 758, 776, 825, 826, 863, 911, 914, 916, 924, 929, 930, 931, 953, 966, 983, 987, 1019, 1020, 1022, 1029, 1031, 1035, 1042, 1043, 1045, 1054, 1055, 1060, 1063, 1064, 1065, 1069, 1070, 1074, 1075, 1077, 1078, 1080, 1084, 1097, 1101, 1112, 1114, 1118, 1120, 1123, 1127, 1128, 1130, 1136, 1140, 1141, 1142, 1144, 1145, 1147, 1151, 1156, 1171, 1186], "2021": [6, 10, 23, 143, 155, 172, 174, 210, 212, 221, 227, 228, 231, 236, 239, 262, 354, 356, 370, 371, 374, 560, 703, 728, 763, 881, 885, 907, 908, 985, 999, 1013, 1049, 1165], "templat": [6, 66, 75, 107, 189, 224, 265, 287, 292, 327, 359, 360, 468, 530, 549, 582, 583, 627, 633, 637, 638, 645, 646, 647, 649, 667, 674, 675, 676, 677, 678, 679, 686, 692, 697, 700, 701, 702, 703, 707, 708, 710, 713, 740, 744, 746, 754, 756, 762, 763, 764, 766, 768, 776, 777, 778, 970, 1175, 1177], "descript": [6, 8, 31, 39, 107, 122, 146, 164, 165, 177, 178, 194, 198, 199, 201, 202, 203, 204, 209, 224, 229, 231, 235, 237, 240, 247, 250, 254, 266, 267, 270, 304, 305, 320, 321, 376, 469, 479, 487, 497, 498, 499, 500, 501, 505, 515, 539, 734, 741, 742, 743, 752, 754, 756, 776, 825, 837, 849, 851, 860, 885, 887, 907, 914, 917, 918, 931, 943, 951, 1001, 1013, 1064, 1078, 1101, 1158, 1179], "sidebar": [6, 17, 66, 159, 837], "metadata": [6, 28, 39, 158, 177, 275, 857, 860, 930, 933, 959, 1021, 1181], "angebot": [6, 176], "hous": [6, 32, 162], "meiner": [6, 23, 251, 375, 1171], "person": [6, 23, 114, 118, 169, 199, 218, 221, 260, 262, 264, 271, 275, 282, 313, 314, 364, 449, 484, 485, 488, 513, 597, 656, 763, 938, 1036, 1037, 1039, 1040, 1041, 1043, 1044, 1118, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1156, 1157], "schwerpunk": 6, "schulungsstil": 6, "preis": 6, "einr\u00fcckung": [7, 207, 215], "wichtig": [7, 215, 265, 357, 362, 1194], "1": [7, 32, 39, 42, 50, 62, 64, 73, 75, 88, 107, 110, 111, 112, 115, 120, 122, 141, 144, 154, 155, 158, 163, 165, 168, 169, 171, 172, 173, 177, 178, 180, 181, 182, 183, 184, 185, 190, 191, 192, 195, 197, 200, 207, 210, 211, 212, 215, 218, 221, 222, 226, 227, 228, 231, 234, 237, 240, 242, 244, 247, 250, 254, 257, 260, 262, 263, 267, 272, 275, 279, 280, 282, 286, 292, 296, 302, 305, 307, 310, 314, 318, 321, 324, 329, 330, 336, 340, 342, 343, 349, 350, 351, 352, 353, 354, 355, 357, 360, 362, 370, 371, 374, 388, 389, 411, 418, 427, 431, 433, 441, 458, 465, 466, 467, 469, 470, 471, 472, 473, 475, 476, 477, 478, 480, 482, 483, 503, 504, 510, 520, 528, 529, 532, 536, 538, 540, 541, 542, 544, 548, 550, 551, 552, 553, 554, 555, 556, 561, 564, 567, 570, 573, 576, 577, 579, 584, 585, 586, 592, 594, 598, 600, 601, 602, 603, 604, 609, 614, 616, 622, 623, 624, 625, 626, 631, 635, 647, 649, 657, 659, 662, 666, 676, 682, 683, 685, 686, 687, 689, 692, 693, 695, 697, 699, 701, 702, 704, 706, 707, 708, 710, 711, 712, 719, 725, 727, 730, 731, 732, 734, 736, 737, 740, 741, 743, 744, 745, 754, 758, 762, 764, 765, 766, 768, 774, 776, 778, 783, 788, 794, 798, 803, 825, 842, 851, 852, 853, 856, 857, 858, 860, 861, 862, 863, 864, 867, 868, 869, 870, 871, 875, 877, 879, 881, 882, 886, 887, 888, 904, 907, 908, 909, 910, 911, 913, 914, 916, 917, 918, 920, 922, 929, 930, 932, 933, 941, 942, 943, 945, 947, 948, 949, 951, 952, 953, 955, 956, 957, 958, 963, 965, 966, 978, 980, 981, 983, 985, 987, 988, 989, 992, 995, 996, 998, 999, 1002, 1011, 1013, 1014, 1015, 1016, 1018, 1019, 1021, 1022, 1023, 1026, 1027, 1029, 1031, 1033, 1035, 1036, 1042, 1043, 1045, 1047, 1048, 1049, 1050, 1052, 1055, 1056, 1057, 1058, 1059, 1062, 1064, 1065, 1070, 1075, 1077, 1078, 1080, 1085, 1088, 1091, 1101, 1105, 1108, 1111, 1112, 1114, 1118, 1119, 1120, 1126, 1127, 1128, 1129, 1135, 1140, 1141, 1142, 1144, 1145, 1146, 1150, 1151, 1156, 1157, 1158, 1163, 1167, 1170, 1176, 1178, 1179, 1183, 1186, 1188, 1193], "i": [7, 12, 13, 14, 17, 21, 27, 28, 29, 30, 31, 32, 38, 39, 40, 41, 42, 43, 49, 53, 54, 55, 57, 59, 60, 62, 63, 64, 66, 67, 69, 70, 79, 81, 83, 85, 86, 88, 90, 91, 92, 98, 99, 100, 101, 105, 107, 108, 109, 110, 111, 112, 114, 115, 119, 120, 122, 124, 125, 129, 132, 133, 135, 136, 137, 141, 142, 147, 149, 150, 155, 156, 158, 159, 161, 162, 165, 166, 167, 168, 169, 172, 173, 177, 178, 179, 182, 183, 184, 185, 186, 189, 190, 191, 192, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 210, 212, 213, 214, 215, 218, 219, 222, 223, 224, 226, 227, 229, 232, 233, 234, 235, 238, 239, 240, 241, 243, 244, 245, 248, 249, 251, 252, 253, 254, 256, 258, 261, 262, 263, 267, 268, 269, 271, 272, 274, 275, 277, 278, 279, 280, 281, 282, 284, 286, 287, 288, 289, 290, 291, 293, 294, 295, 297, 298, 300, 302, 304, 306, 307, 309, 310, 312, 313, 314, 316, 317, 318, 320, 322, 323, 324, 326, 328, 329, 331, 334, 335, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 352, 353, 354, 357, 360, 362, 363, 365, 368, 370, 371, 375, 376, 378, 379, 380, 381, 382, 388, 389, 390, 392, 394, 395, 396, 398, 399, 402, 403, 404, 406, 407, 409, 410, 411, 414, 415, 416, 417, 418, 419, 421, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 479, 480, 482, 484, 486, 487, 488, 489, 492, 495, 496, 503, 504, 506, 507, 508, 509, 510, 523, 525, 526, 528, 530, 531, 532, 533, 534, 535, 536, 539, 540, 541, 542, 543, 544, 547, 549, 554, 558, 560, 565, 568, 571, 574, 577, 582, 583, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 607, 609, 612, 613, 617, 618, 619, 620, 621, 622, 623, 625, 626, 631, 635, 638, 639, 640, 642, 644, 647, 649, 654, 656, 657, 662, 663, 664, 666, 668, 669, 671, 672, 673, 674, 675, 676, 677, 678, 681, 682, 683, 684, 686, 687, 689, 690, 692, 693, 694, 696, 699, 704, 705, 706, 707, 708, 710, 721, 722, 725, 726, 730, 731, 734, 735, 736, 740, 742, 743, 744, 746, 748, 752, 754, 755, 756, 757, 762, 764, 766, 772, 775, 776, 777, 778, 779, 780, 781, 784, 786, 789, 791, 793, 794, 796, 800, 803, 807, 811, 813, 815, 817, 819, 821, 823, 825, 826, 827, 832, 833, 835, 837, 838, 839, 841, 842, 850, 851, 852, 853, 854, 855, 857, 858, 859, 862, 863, 864, 865, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 882, 884, 885, 886, 887, 888, 889, 890, 892, 893, 896, 897, 899, 900, 901, 905, 907, 909, 912, 914, 917, 918, 921, 922, 923, 924, 925, 927, 928, 929, 930, 932, 933, 934, 935, 936, 937, 938, 940, 945, 952, 955, 957, 959, 962, 963, 965, 966, 967, 968, 969, 970, 972, 973, 975, 976, 979, 982, 983, 984, 985, 986, 987, 992, 993, 996, 997, 1000, 1001, 1002, 1003, 1007, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1017, 1019, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1072, 1074, 1075, 1077, 1078, 1080, 1081, 1082, 1083, 1085, 1092, 1095, 1098, 1101, 1102, 1103, 1105, 1106, 1107, 1108, 1110, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1135, 1136, 1137, 1138, 1139, 1141, 1142, 1145, 1146, 1148, 1149, 1150, 1151, 1152, 1156, 1157, 1158, 1159, 1161, 1163, 1165, 1169, 1171, 1173, 1176, 1178, 1179, 1180, 1181, 1189, 1190, 1191, 1193], "41": [7, 167, 172, 183, 184, 195, 205, 210, 212, 215, 218, 221, 223, 226, 227, 231, 234, 237, 242, 244, 250, 254, 257, 260, 263, 272, 275, 279, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 349, 351, 352, 489, 745, 776, 815, 907, 930, 1035, 1078, 1080, 1127, 1158], "print": [7, 64, 158, 181, 182, 184, 185, 195, 198, 200, 201, 205, 210, 212, 213, 214, 215, 218, 221, 222, 226, 227, 228, 231, 234, 235, 237, 242, 244, 247, 250, 253, 254, 257, 260, 263, 272, 275, 279, 280, 282, 292, 296, 302, 307, 313, 314, 318, 324, 329, 330, 336, 340, 349, 350, 351, 352, 353, 383, 387, 389, 458, 469, 613, 640, 663, 710, 724, 732, 734, 862, 863, 869, 885, 887, 888, 929, 977, 987, 1018, 1021, 1022, 1023, 1025, 1026, 1027, 1031, 1033, 1035, 1036, 1039, 1041, 1044, 1049, 1050, 1051, 1052, 1057, 1058, 1061, 1062, 1063, 1064, 1065, 1067, 1068, 1073, 1074, 1088, 1090, 1100, 1101, 1102, 1104, 1105, 1111, 1126, 1131, 1135, 1139, 1148], "ja": [7, 23, 171, 195, 212, 215, 218, 231, 234, 263, 330], "basta": [7, 162, 215, 1054], "2": [7, 29, 32, 42, 50, 62, 64, 73, 105, 107, 115, 122, 125, 155, 158, 163, 165, 171, 172, 173, 179, 181, 182, 183, 184, 185, 196, 200, 206, 207, 210, 211, 215, 218, 221, 222, 226, 227, 228, 231, 236, 237, 242, 244, 247, 248, 250, 254, 257, 260, 262, 263, 272, 275, 279, 280, 282, 286, 292, 296, 302, 305, 307, 310, 314, 318, 321, 324, 330, 336, 340, 343, 349, 350, 351, 352, 353, 354, 357, 358, 359, 360, 366, 374, 387, 388, 400, 406, 407, 427, 431, 458, 464, 465, 466, 467, 470, 471, 472, 476, 477, 478, 479, 480, 482, 504, 528, 529, 532, 538, 540, 541, 544, 548, 550, 551, 552, 553, 555, 556, 560, 575, 577, 584, 585, 586, 592, 594, 595, 598, 600, 601, 602, 603, 604, 609, 614, 618, 622, 623, 624, 625, 626, 631, 635, 639, 640, 641, 642, 647, 657, 662, 682, 685, 686, 687, 689, 692, 695, 697, 699, 700, 702, 704, 707, 708, 710, 720, 721, 724, 725, 730, 731, 732, 734, 736, 737, 740, 741, 742, 743, 744, 745, 754, 756, 758, 765, 776, 778, 784, 825, 852, 853, 860, 863, 864, 867, 868, 869, 881, 904, 907, 910, 911, 916, 918, 920, 922, 926, 929, 930, 942, 945, 947, 948, 949, 951, 952, 955, 956, 957, 958, 959, 961, 963, 965, 966, 978, 980, 983, 985, 987, 998, 999, 1014, 1016, 1018, 1019, 1021, 1022, 1024, 1027, 1029, 1031, 1035, 1039, 1042, 1043, 1045, 1046, 1047, 1048, 1049, 1050, 1052, 1055, 1056, 1057, 1059, 1064, 1065, 1070, 1075, 1077, 1079, 1080, 1081, 1082, 1084, 1088, 1091, 1101, 1105, 1108, 1111, 1112, 1113, 1114, 1115, 1118, 1119, 1120, 1121, 1123, 1126, 1127, 1128, 1133, 1140, 1141, 1142, 1144, 1145, 1146, 1150, 1151, 1156, 1157, 1158, 1162, 1163, 1170, 1178, 1179, 1186, 1189, 1190, 1192, 1193, 1194], "1234": [7, 32, 215, 218, 228, 237, 242, 244, 296, 324, 336, 352, 940, 948, 997, 1054], "3": [7, 32, 62, 64, 107, 110, 111, 112, 113, 115, 129, 144, 158, 167, 172, 173, 177, 179, 181, 182, 183, 184, 185, 192, 194, 195, 200, 206, 207, 210, 211, 212, 215, 218, 221, 222, 226, 228, 230, 231, 236, 237, 240, 242, 244, 247, 250, 254, 257, 259, 261, 262, 263, 265, 272, 275, 279, 280, 282, 286, 292, 296, 302, 307, 309, 310, 315, 318, 324, 330, 336, 340, 350, 351, 352, 353, 357, 358, 359, 362, 374, 388, 400, 401, 402, 415, 424, 425, 446, 447, 455, 458, 460, 465, 466, 467, 470, 475, 486, 503, 504, 528, 529, 533, 536, 538, 539, 540, 541, 543, 544, 545, 546, 550, 551, 552, 553, 555, 556, 558, 560, 577, 584, 586, 592, 593, 594, 596, 597, 598, 600, 601, 602, 603, 604, 609, 612, 613, 614, 615, 616, 617, 618, 619, 621, 622, 623, 624, 625, 626, 631, 647, 657, 662, 664, 685, 686, 687, 689, 697, 699, 700, 704, 705, 706, 707, 708, 710, 725, 730, 732, 734, 736, 741, 742, 744, 745, 758, 761, 776, 783, 789, 825, 863, 868, 882, 885, 907, 909, 911, 916, 918, 924, 926, 929, 930, 931, 933, 942, 943, 945, 947, 948, 949, 952, 956, 957, 958, 966, 967, 968, 972, 978, 980, 983, 986, 987, 988, 991, 993, 996, 997, 999, 1000, 1001, 1019, 1021, 1022, 1024, 1027, 1029, 1031, 1035, 1042, 1045, 1046, 1047, 1048, 1049, 1052, 1053, 1055, 1057, 1059, 1060, 1063, 1065, 1070, 1071, 1072, 1074, 1077, 1078, 1080, 1097, 1101, 1105, 1111, 1112, 1114, 1118, 1120, 1123, 1126, 1127, 1128, 1131, 1134, 1140, 1141, 1142, 1144, 1145, 1147, 1151, 1156, 1157, 1158, 1165, 1170, 1172, 1174, 1176, 1179, 1182, 1186], "decim": [7, 215, 250, 254, 296, 324, 340, 343, 380, 466, 1054, 1068], "5": [7, 32, 62, 64, 113, 114, 120, 130, 132, 137, 154, 158, 165, 167, 173, 183, 184, 185, 190, 193, 196, 200, 206, 207, 210, 212, 213, 215, 218, 219, 221, 222, 225, 227, 228, 229, 231, 232, 234, 235, 237, 242, 244, 245, 247, 250, 254, 257, 259, 260, 262, 263, 267, 271, 272, 275, 279, 282, 286, 292, 295, 296, 301, 302, 307, 310, 314, 318, 324, 329, 330, 336, 340, 343, 349, 351, 352, 357, 362, 370, 371, 374, 380, 382, 387, 404, 406, 415, 442, 447, 451, 460, 465, 469, 472, 483, 486, 489, 504, 512, 528, 531, 533, 538, 539, 541, 542, 543, 544, 545, 546, 558, 559, 564, 577, 584, 585, 586, 592, 596, 597, 600, 601, 603, 604, 625, 635, 662, 682, 686, 689, 690, 692, 693, 699, 701, 702, 704, 719, 720, 732, 734, 741, 742, 743, 745, 758, 768, 776, 798, 803, 826, 854, 856, 907, 911, 916, 922, 929, 930, 931, 947, 949, 957, 966, 983, 999, 1011, 1019, 1021, 1022, 1025, 1027, 1031, 1035, 1042, 1043, 1048, 1053, 1054, 1055, 1059, 1060, 1062, 1068, 1070, 1074, 1075, 1078, 1101, 1105, 1112, 1114, 1118, 1120, 1123, 1127, 1128, 1131, 1136, 1147, 1151, 1156, 1158, 1163, 1167, 1173, 1175, 1180, 1181, 1186, 1187], "hexadecim": [7, 215, 254, 399, 930, 1054, 1067, 1068], "16": [7, 64, 158, 167, 169, 170, 172, 181, 183, 184, 189, 190, 195, 200, 205, 210, 212, 215, 218, 221, 226, 227, 231, 234, 237, 242, 244, 247, 250, 254, 257, 260, 263, 272, 276, 279, 282, 286, 292, 296, 302, 307, 314, 318, 324, 330, 336, 340, 349, 350, 351, 352, 353, 357, 362, 363, 374, 398, 442, 449, 460, 467, 604, 662, 741, 803, 815, 907, 924, 929, 931, 942, 947, 948, 956, 965, 999, 1001, 1013, 1014, 1019, 1022, 1026, 1029, 1054, 1080, 1127, 1128, 1158], "7": [7, 32, 42, 64, 159, 162, 165, 167, 172, 179, 182, 183, 184, 185, 195, 200, 207, 210, 212, 213, 215, 218, 219, 221, 225, 227, 228, 229, 231, 232, 234, 237, 242, 244, 247, 250, 254, 257, 259, 260, 262, 263, 271, 272, 275, 279, 280, 282, 286, 292, 296, 301, 302, 307, 310, 314, 318, 324, 330, 336, 340, 342, 351, 352, 357, 362, 363, 374, 388, 392, 406, 433, 442, 466, 467, 470, 475, 483, 503, 504, 528, 531, 536, 540, 541, 543, 544, 545, 546, 558, 565, 573, 577, 584, 592, 593, 597, 599, 600, 601, 603, 624, 628, 631, 640, 657, 666, 686, 694, 719, 720, 721, 725, 732, 758, 772, 773, 774, 856, 857, 868, 869, 885, 907, 916, 929, 930, 931, 948, 956, 980, 983, 992, 993, 996, 997, 1000, 1001, 1022, 1025, 1031, 1035, 1043, 1048, 1053, 1054, 1055, 1058, 1060, 1062, 1063, 1078, 1090, 1108, 1111, 1123, 1127, 1128, 1131, 1136, 1147, 1156], "0x1234": [7, 215, 1054], "4660": [7, 215, 237, 1054], "8": [7, 32, 64, 110, 158, 164, 165, 169, 173, 181, 182, 183, 184, 185, 189, 194, 195, 198, 200, 207, 210, 212, 213, 215, 218, 219, 221, 222, 227, 228, 229, 231, 232, 234, 235, 237, 241, 242, 244, 247, 250, 254, 257, 259, 260, 263, 271, 272, 275, 278, 279, 282, 286, 292, 296, 299, 301, 302, 307, 310, 313, 314, 318, 324, 330, 336, 340, 349, 350, 351, 352, 357, 374, 398, 442, 454, 460, 466, 470, 472, 475, 503, 535, 570, 577, 584, 589, 592, 597, 601, 603, 604, 693, 741, 758, 776, 798, 821, 825, 856, 862, 870, 907, 909, 916, 922, 923, 924, 925, 929, 930, 999, 1016, 1022, 1025, 1031, 1054, 1055, 1060, 1068, 1073, 1077, 1078, 1084, 1120, 1123, 1127, 1128, 1134, 1151, 1158], "bin\u00e4r": [7, 23, 215, 218], "9": [7, 8, 32, 62, 64, 122, 158, 163, 167, 170, 177, 181, 182, 183, 184, 185, 193, 195, 197, 200, 201, 202, 203, 204, 207, 208, 210, 212, 213, 214, 215, 216, 218, 219, 221, 222, 223, 225, 227, 228, 229, 231, 234, 235, 237, 242, 244, 247, 250, 251, 254, 257, 260, 262, 263, 272, 275, 278, 279, 282, 286, 287, 289, 292, 296, 302, 307, 314, 318, 324, 330, 336, 340, 349, 350, 352, 353, 357, 362, 374, 380, 382, 388, 397, 400, 458, 466, 483, 503, 512, 531, 577, 579, 595, 604, 694, 704, 732, 758, 803, 881, 904, 907, 929, 930, 931, 947, 983, 1019, 1029, 1035, 1048, 1049, 1055, 1060, 1062, 1070, 1074, 1078, 1085, 1090, 1127, 1128, 1136, 1145, 1151, 1156], "0b100110": [7, 215, 244, 1054], "38": [7, 23, 158, 165, 172, 184, 195, 205, 210, 212, 215, 218, 221, 226, 227, 231, 234, 237, 242, 244, 247, 250, 254, 257, 260, 263, 272, 275, 279, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 349, 352, 353, 487, 503, 528, 595, 741, 776, 907, 1002, 1011, 1035, 1127, 1128], "arithmet": [7, 109, 182, 215, 220, 240, 243, 255, 270, 287, 357, 381, 395, 402, 403, 409, 410, 419, 425, 426, 432, 436, 439, 441, 442, 443, 452, 456, 461, 462, 481, 490, 502, 503, 516, 530, 578, 582, 612, 616, 617, 620, 625, 682, 684, 722, 731, 732, 775, 777, 778], "man": [7, 32, 37, 124, 162, 164, 170, 171, 179, 185, 189, 195, 197, 205, 206, 212, 215, 218, 223, 225, 227, 238, 244, 251, 254, 278, 299, 318, 357, 362, 364, 375, 472, 565, 574, 586, 748, 776, 784, 803, 851, 852, 853, 856, 857, 860, 867, 868, 869, 870, 871, 875, 877, 879, 882, 886, 887, 888, 904, 907, 908, 910, 911, 913, 914, 916, 917, 931, 938, 941, 942, 943, 945, 947, 948, 949, 951, 952, 954, 955, 956, 957, 958, 961, 967, 968, 970, 972, 974, 975, 978, 980, 986, 993, 996, 997, 999, 1015, 1016, 1171, 1172, 1173, 1175, 1183, 1186, 1188, 1189, 1190, 1192, 1193, 1194], "behaviour": [7, 215, 223, 811, 957, 1073], "erzwingen": [7, 195, 207, 215], "floor": [7, 38, 207, 215, 218, 222, 234, 235, 237, 242, 244, 250, 254, 324, 352, 1042, 1054], "divis": [7, 36, 38, 207, 215, 218, 234, 237, 242, 244, 250, 352, 380, 401, 503, 504, 518, 1042, 1054, 1108], "modul": [7, 12, 21, 23, 29, 66, 145, 152, 158, 165, 167, 172, 184, 190, 192, 194, 197, 198, 199, 200, 201, 208, 209, 215, 218, 222, 224, 229, 231, 232, 235, 237, 238, 241, 242, 244, 245, 247, 248, 250, 251, 253, 254, 256, 257, 261, 262, 265, 271, 273, 274, 275, 280, 282, 290, 291, 294, 296, 300, 301, 304, 305, 306, 309, 314, 316, 318, 320, 321, 322, 323, 324, 329, 330, 334, 335, 336, 338, 339, 340, 342, 343, 352, 358, 359, 360, 362, 368, 375, 420, 464, 466, 470, 471, 477, 479, 480, 492, 681, 722, 777, 778, 781, 782, 784, 785, 787, 789, 790, 791, 792, 794, 795, 802, 805, 806, 810, 816, 821, 822, 826, 827, 829, 834, 837, 840, 843, 846, 921, 922, 929, 931, 1023, 1024, 1038, 1047, 1048, 1051, 1052, 1063, 1065, 1071, 1074, 1075, 1076, 1079, 1080, 1081, 1082, 1116, 1117, 1118, 1119, 1121, 1122, 1124, 1125, 1129, 1132, 1133, 1135, 1136, 1137, 1138, 1139, 1150, 1151, 1153, 1155, 1156, 1159, 1160, 1166, 1178, 1180, 1181, 1187, 1191, 1194], "restklassen": [7, 215], "rest": [7, 17, 40, 169, 171, 181, 205, 215, 218, 222, 224, 242, 250, 282, 296, 314, 317, 352, 378, 388, 413, 467, 615, 616, 677, 734, 813, 864, 925, 955, 983, 1042, 1045, 1069, 1098, 1102, 1131, 1146, 1178, 1194], "14": [7, 64, 155, 159, 172, 183, 184, 195, 200, 207, 210, 212, 214, 215, 218, 221, 222, 226, 227, 231, 234, 235, 237, 242, 244, 247, 250, 254, 257, 260, 262, 263, 266, 272, 275, 279, 282, 286, 292, 296, 302, 313, 314, 316, 318, 324, 330, 336, 340, 349, 350, 352, 353, 354, 374, 466, 477, 478, 480, 489, 583, 657, 681, 693, 732, 734, 742, 744, 776, 867, 870, 882, 907, 909, 929, 930, 931, 933, 948, 957, 987, 999, 1000, 1001, 1020, 1022, 1036, 1122, 1127, 1128, 1175, 1186], "oper": [7, 29, 33, 34, 35, 38, 74, 79, 81, 98, 109, 137, 141, 161, 162, 164, 168, 180, 181, 183, 186, 189, 194, 198, 199, 200, 201, 203, 207, 212, 215, 220, 221, 222, 223, 224, 229, 231, 235, 236, 239, 242, 244, 245, 249, 252, 255, 258, 260, 263, 265, 275, 282, 287, 288, 289, 290, 291, 292, 295, 296, 312, 316, 317, 319, 324, 330, 335, 336, 343, 357, 362, 380, 388, 398, 404, 419, 424, 425, 426, 430, 432, 433, 436, 439, 441, 443, 445, 448, 452, 454, 456, 461, 462, 484, 485, 504, 524, 530, 542, 547, 549, 577, 582, 583, 584, 589, 590, 594, 597, 601, 602, 603, 604, 605, 608, 609, 611, 617, 625, 626, 627, 633, 637, 638, 641, 646, 649, 650, 662, 667, 674, 675, 676, 677, 678, 679, 682, 684, 690, 692, 693, 695, 699, 704, 706, 707, 708, 710, 713, 717, 720, 722, 724, 725, 726, 727, 732, 734, 741, 742, 745, 752, 756, 758, 767, 768, 769, 775, 776, 777, 778, 787, 792, 795, 796, 802, 806, 816, 825, 827, 829, 834, 840, 841, 843, 846, 852, 853, 856, 885, 891, 916, 917, 921, 929, 930, 931, 942, 947, 948, 949, 950, 951, 952, 963, 966, 970, 972, 992, 996, 1000, 1013, 1016, 1024, 1027, 1034, 1035, 1038, 1055, 1059, 1063, 1068, 1069, 1074, 1088, 1121, 1123, 1132, 1141, 1163, 1168, 1175, 1181], "preced": [7, 35, 38, 215, 237, 242, 250, 255, 258, 380, 386, 401, 402, 410, 415, 419, 424, 426, 430, 432, 434, 436, 439, 443, 452, 456, 461, 462, 613, 617, 684, 722, 775, 777, 778, 885, 934], "implizit": [7, 195, 215, 292, 1173, 1190], "klammerung": [7, 215, 913], "durch": [7, 170, 171, 179, 185, 189, 197, 205, 215, 247, 257, 357, 362, 375, 913, 1170, 1171, 1173], "pr\u00e4zedenz": [7, 195, 207, 215], "6666666666666665": [7, 215], "frage": [7, 171, 181, 185, 212, 215, 218, 224, 244, 375, 1180, 1187, 1194], "6665": [7, 215], "6667": [7, 215], "ieee": [7, 215], "floatingpoint": [7, 215, 401, 402, 525, 825, 1100], "representaion": [7, 215], "true": [7, 35, 38, 50, 58, 64, 111, 112, 114, 118, 119, 120, 121, 163, 165, 167, 172, 181, 182, 183, 184, 194, 195, 200, 205, 210, 212, 213, 215, 218, 221, 222, 226, 227, 231, 234, 235, 237, 242, 244, 247, 248, 250, 254, 257, 260, 263, 272, 275, 279, 282, 286, 292, 296, 302, 307, 314, 318, 324, 330, 336, 340, 343, 349, 352, 386, 402, 403, 415, 427, 430, 470, 528, 592, 600, 625, 653, 664, 666, 687, 710, 711, 712, 713, 715, 716, 717, 718, 743, 752, 754, 756, 758, 776, 813, 815, 845, 858, 885, 898, 966, 972, 977, 978, 981, 983, 984, 992, 993, 996, 1005, 1020, 1026, 1027, 1031, 1033, 1034, 1035, 1036, 1039, 1042, 1055, 1056, 1058, 1059, 1060, 1063, 1069, 1072, 1073, 1136, 1140, 1142, 1147, 1162, 1163, 1165], "zahlen": [7, 205, 206, 215, 1173, 1186], "vergleichen": [7, 195, 215], "21": [7, 98, 100, 103, 106, 107, 124, 169, 172, 183, 184, 195, 200, 203, 205, 210, 212, 215, 218, 221, 226, 227, 231, 234, 237, 242, 244, 250, 254, 257, 260, 263, 272, 275, 279, 282, 286, 292, 296, 302, 307, 314, 318, 324, 330, 336, 340, 352, 356, 374, 466, 776, 815, 867, 907, 930, 931, 942, 1013, 1127, 1128], "ab": [7, 23, 32, 170, 172, 195, 205, 206, 215, 250, 254, 257, 272, 275, 296, 324, 584, 586, 594, 603, 689, 745, 1128, 1180, 1186], "0001": [7, 165, 183, 215], "aber": [7, 23, 37, 171, 179, 181, 185, 195, 205, 206, 210, 213, 215, 244, 247, 250, 302, 375, 913, 1171, 1173, 1175, 1182, 1189, 1193, 1194], "unendlich": [7, 8, 206, 215, 216], "lang": [7, 167, 170, 171, 180, 215, 348, 349, 366, 375, 469, 1172, 1188, 1193], "22": [7, 64, 98, 106, 107, 124, 164, 167, 172, 174, 183, 184, 195, 200, 202, 205, 210, 211, 212, 215, 218, 221, 222, 226, 227, 231, 234, 235, 237, 242, 244, 250, 254, 257, 260, 263, 272, 275, 279, 282, 286, 292, 296, 303, 306, 307, 309, 314, 324, 330, 336, 340, 349, 351, 352, 353, 374, 776, 870, 907, 931, 932, 940, 941, 956, 1000, 1001, 1085, 1122, 1127, 1128, 1187], "1000000": [7, 164, 195, 215, 292, 330, 352, 458, 922, 930], "23": [7, 64, 124, 165, 172, 173, 174, 180, 183, 184, 185, 195, 200, 202, 205, 210, 212, 215, 218, 221, 226, 227, 231, 234, 237, 242, 244, 247, 248, 250, 253, 254, 257, 263, 272, 275, 279, 282, 286, 292, 296, 302, 307, 314, 318, 324, 330, 336, 340, 374, 430, 466, 469, 710, 760, 870, 907, 929, 930, 1011, 1080, 1085, 1127, 1128, 1158, 1165], "32": [7, 172, 173, 179, 181, 184, 195, 200, 205, 210, 212, 215, 218, 221, 224, 226, 227, 231, 234, 237, 242, 244, 247, 250, 254, 257, 260, 263, 272, 275, 279, 282, 286, 292, 296, 302, 314, 318, 324, 330, 336, 340, 352, 380, 382, 398, 403, 442, 483, 489, 512, 528, 541, 821, 850, 856, 881, 907, 923, 925, 1000, 1001, 1011, 1078], "4294967295": [7, 215, 234, 242, 250], "24": [7, 64, 98, 106, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 141, 165, 172, 180, 183, 184, 185, 195, 200, 205, 210, 212, 215, 218, 221, 226, 227, 231, 234, 237, 242, 244, 247, 250, 254, 257, 260, 263, 272, 275, 279, 282, 286, 296, 302, 307, 314, 324, 330, 336, 340, 349, 350, 352, 353, 374, 477, 675, 677, 699, 741, 742, 778, 825, 852, 853, 907, 929, 1016, 1042, 1127, 1128], "64": [7, 164, 167, 172, 195, 200, 205, 210, 212, 215, 218, 221, 223, 224, 227, 231, 234, 237, 242, 244, 247, 250, 254, 257, 260, 263, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 352, 357, 362, 386, 398, 403, 427, 442, 448, 451, 477, 821, 963, 966, 989, 996, 999, 1016, 1080, 1127, 1171], "18446744073709551615": [7, 195, 205, 215, 218, 231, 234, 242, 244, 250, 254, 257, 260, 282, 314, 336, 352], "overflow": [7, 42, 44, 50, 164, 205, 215, 231, 234, 235, 237, 240, 241, 247, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336, 403, 405, 441, 450, 862], "wenn": [7, 23, 170, 171, 176, 181, 189, 195, 197, 205, 206, 212, 215, 251, 257, 292, 912, 1170, 1172, 1173, 1180, 1182, 1183, 1186, 1189, 1194], "verwendet": [7, 23, 185, 189, 195, 215, 257, 336, 1171, 1173, 1183, 1187, 1189, 1194], "wert": [7, 23, 206, 207, 212, 215, 247, 250, 254, 257, 263, 292, 296, 302, 1186, 1194], "w\u00e4re": [7, 179, 205, 215, 251, 1175, 1182], "dort": [7, 65, 171, 179, 181, 189, 205, 206, 215, 375, 1186, 1192, 1194], "25": [7, 64, 98, 172, 173, 183, 184, 185, 195, 200, 205, 210, 212, 215, 218, 221, 226, 227, 231, 234, 237, 242, 244, 247, 248, 250, 253, 254, 257, 260, 262, 263, 272, 275, 279, 282, 286, 292, 296, 302, 309, 314, 318, 324, 330, 336, 340, 343, 352, 353, 374, 576, 577, 699, 736, 760, 805, 907, 931, 999, 1025, 1068, 1112, 1114, 1118, 1120, 1127, 1128, 1140, 1141, 1142, 1144, 1145, 1146, 1147], "18446744073709551616": [7, 195, 205, 215, 218, 231, 234, 242, 244, 254, 257, 275, 282, 292, 296, 302, 314, 318, 324, 330, 352], "26": [7, 115, 165, 167, 172, 173, 174, 183, 184, 195, 205, 210, 212, 215, 218, 221, 226, 227, 231, 234, 237, 242, 244, 247, 250, 254, 257, 260, 263, 267, 272, 275, 279, 282, 286, 296, 302, 307, 314, 318, 324, 330, 336, 340, 352, 356, 374, 576, 577, 704, 720, 885, 907, 931, 963, 965, 966, 999, 1001, 1042, 1127, 1128, 1151, 1187], "1000": [7, 23, 195, 205, 215, 218, 221, 231, 234, 237, 242, 244, 250, 254, 257, 260, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 349, 352, 541, 542, 560, 635, 682, 756, 835, 860, 862, 867, 881, 882, 909, 910, 914, 916, 942, 949, 957, 978, 983, 987, 1013, 1020, 1069, 1101], "10715086071862673209484250490600018105614048117055336074437503883703510511249361224931983788156958581275946729175531468251871452856923140435984577574698574803934567774824230985421074605062371141877954182153046474983581941267398767559165543946077062914571196477686542167660429831652624386837205668069376": [7, 195, 205, 215, 218, 231, 254, 257, 275, 302, 330], "27": [7, 64, 98, 124, 172, 174, 183, 184, 195, 205, 210, 212, 214, 215, 218, 221, 226, 227, 231, 234, 237, 242, 244, 247, 250, 253, 254, 257, 260, 262, 263, 272, 275, 279, 282, 286, 292, 296, 302, 309, 314, 318, 324, 330, 336, 340, 349, 351, 352, 354, 374, 466, 540, 565, 732, 907, 929, 931, 999, 1127, 1140, 1141, 1142, 1144, 1145, 1146, 1147], "10000": [7, 45, 215, 234, 237, 250, 282, 324, 1023, 1039], "19950631168807583848837421626835850838234968318861924548520089498529438830221946631919961684036194597899331129423209124271556491349413781117593785932096323957855730046793794526765246551266059895520550086918193311542508608460618104685509074866089624888090489894838009253941633257850621568309473902556912388065225096643874441046759871626985453222868538161694315775629640762836880760732228535091641476183956381458969463899410840960536267821064621427333394036525565649530603142680234969400335934316651459297773279665775606172582031407994198179607378245683762280037302885487251900834464581454650557929601414833921615734588139257095379769119277800826957735674444123062018757836325502728323789270710373802866393031428133241401624195671690574061419654342324638801248856147305207431992259611796250130992860241708340807605932320161268492288496255841312844061536738951487114256315111089745514203313820202931640957596464756010405845841566072044962867016515061920631004186422275908670900574606417856951911456055068251250406007519842261898059237118054444788072906395242548339221982707404473162376760846613033778706039803413197133493654622700563169937455508241780972810983291314403571877524768509857276937926433221599399876886660808368837838027643282775172273657572744784112294389733810861607423253291974813120197604178281965697475898164531258434135959862784130128185406283476649088690521047580882615823961985770122407044330583075869039319604603404973156583208672105913300903752823415539745394397715257455290510212310947321610753474825740775273986348298498340756937955646638621874569499279016572103701364433135817214311791398222983845847334440270964182851005072927748364550578634501100852987812389473928699540834346158807043959118985815145779177143619698728131459483783202081474982171858011389071228250905826817436220577475921417653715687725614904582904992461028630081535583308130101987675856234343538955409175623400844887526162643568648833519463720377293240094456246923254350400678027273837755376406726898636241037491410966718557050759098100246789880178271925953381282421954028302759408448955014676668389697996886241636313376393903373455801407636741877711055384225739499110186468219696581651485130494222369947714763069155468217682876200362777257723781365331611196811280792669481887201298643660768551639860534602297871557517947385246369446923087894265948217008051120322365496288169035739121368338393591756418733850510970271613915439590991598154654417336311656936031122249937969999226781732358023111862644575299135758175008199839236284615249881088960232244362173771618086357015468484058622329792853875623486556440536962622018963571028812361567512543338303270029097668650568557157505516727518899194129711337690149916181315171544007728650573189557450920330185304847113818315407324053319038462084036421763703911550639789000742853672196280903477974533320468368795868580237952218629120080742819551317948157624448298518461509704888027274721574688131594750409732115080498190455803416826949787141316063210686391511681774304792596709376": [7, 215, 234, 250, 282, 324], "hallo": [7, 195, 205, 210, 213, 215, 218, 226, 234, 237, 244, 247, 250, 254, 257, 263, 275, 279, 282, 302, 314, 318, 324, 330, 352, 400, 592, 776, 856, 904, 932, 945, 948, 954], "39": [7, 159, 172, 181, 183, 184, 195, 200, 205, 210, 212, 214, 215, 218, 221, 226, 227, 231, 234, 237, 242, 244, 247, 250, 254, 257, 260, 263, 272, 275, 279, 282, 286, 292, 296, 302, 307, 310, 314, 318, 324, 330, 336, 340, 349, 350, 351, 352, 353, 354, 503, 657, 704, 870, 999, 1127, 1128], "30": [7, 23, 64, 98, 107, 110, 124, 158, 159, 164, 172, 174, 184, 194, 195, 200, 205, 210, 212, 214, 215, 218, 221, 226, 227, 231, 234, 237, 242, 244, 247, 250, 254, 257, 260, 263, 272, 275, 282, 286, 292, 296, 299, 302, 314, 318, 324, 330, 336, 340, 349, 351, 352, 354, 374, 387, 401, 466, 528, 532, 567, 568, 573, 574, 576, 577, 693, 694, 741, 742, 743, 763, 765, 881, 907, 913, 929, 930, 931, 987, 1013, 1022, 1025, 1026, 1078, 1127, 1131, 1139, 1156, 1165], "eingebettet": [7, 215], "34": [7, 172, 173, 181, 184, 195, 200, 205, 210, 212, 214, 215, 218, 221, 222, 226, 227, 231, 234, 235, 237, 242, 244, 247, 250, 254, 257, 260, 262, 263, 272, 275, 279, 280, 282, 286, 292, 296, 302, 307, 310, 314, 318, 324, 330, 336, 340, 351, 352, 353, 354, 489, 503, 507, 508, 509, 510, 522, 523, 524, 622, 623, 624, 625, 626, 631, 663, 882, 885, 907, 1035, 1054, 1127, 1128], "31": [7, 107, 124, 165, 167, 172, 184, 195, 200, 205, 210, 212, 215, 218, 221, 226, 227, 231, 234, 237, 242, 244, 245, 247, 250, 254, 257, 260, 263, 272, 275, 279, 282, 286, 292, 296, 302, 314, 318, 324, 330, 336, 351, 352, 374, 438, 466, 473, 719, 907, 965, 997, 1014, 1048, 1080, 1127], "eingenbettet": [7, 215], "mississippi": [7, 215, 218, 227, 231, 234, 242, 244, 250, 254, 260, 263, 275, 282, 296, 302, 314, 318, 324, 330, 336, 340, 662], "count": [7, 29, 64, 88, 90, 122, 129, 162, 174, 177, 215, 218, 219, 222, 227, 231, 234, 237, 242, 244, 247, 250, 254, 260, 263, 275, 281, 282, 296, 302, 314, 318, 324, 330, 336, 340, 386, 387, 388, 389, 402, 458, 514, 540, 568, 682, 732, 757, 778, 781, 784, 785, 786, 787, 789, 792, 795, 796, 802, 806, 816, 829, 834, 840, 843, 846, 856, 865, 885, 907, 918, 921, 951, 954, 961, 972, 993, 1069, 1082, 1092, 1095, 1103, 1106, 1121, 1128, 1136, 1176], "ss": [7, 32, 215, 218, 227, 231, 234, 242, 244, 250, 254, 260, 263, 275, 282, 296, 302, 314, 318, 324, 330, 336, 340, 662], "35": [7, 158, 172, 184, 195, 202, 205, 210, 212, 215, 218, 221, 226, 227, 231, 234, 237, 242, 244, 247, 250, 254, 257, 260, 263, 272, 275, 279, 282, 286, 292, 296, 302, 314, 318, 324, 330, 336, 340, 349, 351, 352, 353, 503, 532, 675, 677, 693, 1127], "find": [7, 17, 42, 44, 47, 48, 53, 66, 124, 161, 162, 163, 164, 168, 173, 178, 190, 191, 192, 202, 204, 215, 218, 222, 224, 227, 231, 235, 237, 240, 242, 244, 247, 250, 254, 257, 260, 263, 268, 275, 277, 280, 282, 287, 289, 296, 298, 299, 302, 304, 314, 316, 318, 320, 324, 326, 330, 336, 340, 342, 351, 357, 362, 445, 451, 458, 470, 478, 485, 492, 513, 518, 519, 522, 523, 524, 525, 530, 547, 548, 577, 582, 585, 599, 601, 603, 604, 625, 627, 638, 641, 643, 646, 650, 662, 675, 677, 679, 682, 725, 729, 774, 778, 791, 830, 851, 852, 853, 855, 860, 864, 865, 867, 868, 869, 871, 885, 912, 915, 918, 921, 930, 931, 942, 970, 999, 1002, 1016, 1046, 1050, 1061, 1069, 1129, 1166, 1178, 1180, 1181, 1182, 1187], "36": [7, 114, 120, 158, 163, 167, 172, 184, 195, 205, 210, 212, 215, 218, 221, 226, 227, 231, 234, 237, 242, 244, 247, 250, 254, 257, 263, 272, 275, 279, 282, 286, 292, 296, 302, 314, 318, 324, 330, 336, 340, 349, 352, 357, 362, 470, 483, 489, 507, 531, 534, 535, 536, 540, 541, 542, 692, 741, 742, 743, 758, 776, 907, 929, 1035, 1111], "37": [7, 130, 132, 172, 183, 184, 195, 196, 200, 205, 210, 212, 215, 218, 221, 223, 226, 227, 231, 234, 237, 242, 244, 247, 250, 254, 257, 260, 263, 272, 275, 279, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 351, 352, 353, 507, 762, 764, 766, 768, 1035, 1127, 1140, 1141, 1142, 1144, 1145, 1146, 1147], "capit": [7, 38, 215, 218, 227, 234, 244, 250, 275, 296, 351, 885, 1080], "zeil": [7, 181, 195, 205, 212, 215, 218, 221, 227, 231, 250, 254, 272, 275, 314, 318, 330, 352], "nnoch": [7, 212, 215, 231], "some": [7, 17, 21, 107, 149, 161, 162, 163, 164, 166, 169, 172, 173, 177, 183, 186, 191, 194, 198, 201, 203, 214, 215, 221, 223, 231, 237, 238, 243, 249, 250, 254, 266, 267, 269, 275, 278, 281, 282, 284, 288, 290, 291, 298, 316, 317, 323, 324, 326, 375, 399, 433, 444, 460, 483, 489, 560, 585, 587, 607, 625, 638, 641, 695, 704, 732, 740, 742, 752, 755, 777, 778, 784, 789, 798, 813, 821, 825, 842, 844, 862, 867, 922, 930, 931, 952, 955, 981, 983, 985, 993, 1022, 1024, 1051, 1067, 1073, 1119, 1137, 1156, 1178, 1179], "name": [7, 23, 39, 40, 57, 66, 111, 112, 113, 114, 122, 124, 129, 142, 144, 154, 158, 161, 162, 164, 165, 166, 169, 176, 177, 182, 184, 186, 191, 194, 195, 198, 201, 203, 205, 210, 215, 218, 221, 222, 233, 235, 236, 237, 240, 242, 244, 247, 252, 254, 257, 272, 275, 279, 280, 282, 286, 296, 318, 324, 330, 336, 340, 342, 348, 351, 352, 353, 368, 390, 404, 410, 418, 419, 425, 426, 432, 436, 439, 443, 444, 447, 449, 452, 456, 458, 460, 461, 462, 464, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 487, 489, 504, 508, 509, 510, 515, 518, 522, 523, 524, 539, 541, 544, 549, 554, 586, 596, 598, 600, 664, 677, 683, 684, 694, 695, 704, 722, 724, 728, 734, 742, 775, 776, 777, 778, 781, 789, 793, 803, 807, 819, 821, 845, 851, 852, 853, 856, 864, 865, 867, 870, 871, 885, 891, 907, 913, 918, 925, 929, 930, 931, 933, 934, 941, 942, 945, 947, 951, 959, 992, 996, 999, 1000, 1001, 1011, 1013, 1014, 1016, 1017, 1018, 1021, 1023, 1030, 1035, 1037, 1040, 1044, 1045, 1047, 1048, 1052, 1053, 1061, 1063, 1065, 1067, 1068, 1069, 1074, 1078, 1080, 1085, 1101, 1102, 1112, 1118, 1120, 1128, 1131, 1134, 1135, 1136, 1141, 1142, 1144, 1145, 1146, 1147, 1156, 1163, 1165, 1175, 1179, 1181, 1182], "directori": [7, 17, 44, 62, 98, 100, 101, 103, 110, 124, 137, 141, 158, 161, 162, 163, 164, 173, 177, 188, 193, 196, 202, 214, 215, 221, 222, 223, 224, 231, 234, 235, 237, 247, 250, 262, 267, 268, 269, 277, 278, 290, 291, 295, 298, 299, 304, 312, 316, 320, 330, 341, 342, 343, 357, 362, 368, 370, 371, 424, 458, 460, 465, 468, 472, 474, 476, 478, 479, 481, 484, 486, 488, 502, 503, 525, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 561, 564, 567, 570, 573, 576, 579, 582, 673, 755, 777, 778, 803, 825, 827, 847, 851, 854, 855, 856, 858, 859, 860, 862, 864, 865, 867, 868, 869, 871, 872, 873, 874, 879, 880, 882, 884, 885, 890, 891, 892, 893, 894, 895, 897, 898, 899, 900, 901, 902, 905, 909, 914, 921, 929, 930, 931, 933, 938, 942, 944, 947, 950, 957, 958, 959, 960, 962, 965, 967, 976, 979, 982, 984, 988, 991, 995, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1022, 1030, 1050, 1101, 1110, 1111, 1158, 1162, 1167, 1178, 1182, 1191], "multilin": [7, 205, 215, 230, 233, 237, 242, 250, 254, 314, 325, 357, 425, 1023, 1051], "jetzt": [7, 170, 181, 185, 195, 205, 212, 215, 225, 254, 310, 330], "l": [7, 32, 38, 62, 64, 100, 124, 165, 169, 173, 181, 182, 184, 185, 190, 195, 200, 205, 210, 212, 213, 214, 215, 218, 221, 226, 227, 231, 234, 237, 240, 242, 244, 247, 250, 254, 257, 260, 263, 268, 272, 275, 277, 278, 282, 292, 296, 298, 299, 302, 314, 318, 324, 327, 330, 336, 340, 349, 351, 352, 357, 362, 430, 431, 438, 442, 454, 459, 460, 466, 473, 476, 477, 492, 504, 530, 577, 582, 601, 631, 682, 755, 776, 777, 778, 789, 803, 825, 826, 852, 853, 854, 855, 856, 858, 859, 862, 864, 867, 868, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 889, 892, 893, 896, 897, 899, 900, 901, 903, 904, 905, 909, 914, 918, 921, 922, 924, 929, 930, 931, 932, 933, 940, 942, 947, 948, 950, 952, 953, 955, 956, 957, 960, 962, 965, 968, 976, 979, 982, 983, 984, 993, 997, 999, 1000, 1001, 1002, 1011, 1013, 1014, 1019, 1021, 1042, 1050, 1052, 1055, 1056, 1060, 1062, 1070, 1078, 1105, 1165, 1182], "44": [7, 158, 165, 172, 184, 195, 205, 210, 212, 215, 218, 221, 226, 227, 231, 234, 237, 242, 244, 247, 250, 254, 257, 260, 263, 272, 275, 279, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 349, 352, 763, 931, 1151], "45": [7, 29, 51, 53, 55, 56, 73, 74, 75, 88, 91, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 151, 154, 167, 170, 172, 184, 194, 195, 198, 200, 205, 210, 212, 215, 218, 219, 221, 227, 231, 234, 237, 242, 244, 250, 254, 257, 260, 263, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 343, 344, 345, 346, 347, 348, 351, 352, 357, 362, 395, 410, 419, 426, 432, 436, 439, 443, 452, 456, 461, 462, 471, 488, 502, 530, 531, 532, 533, 534, 535, 536, 537, 540, 547, 549, 582, 590, 605, 608, 611, 622, 623, 624, 625, 626, 627, 631, 633, 637, 646, 649, 650, 655, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 684, 691, 698, 709, 722, 723, 733, 738, 747, 755, 759, 763, 775, 776, 777, 778, 782, 785, 787, 790, 792, 795, 797, 801, 802, 804, 806, 808, 810, 816, 818, 820, 822, 829, 831, 834, 836, 840, 843, 846, 848, 852, 853, 854, 855, 858, 859, 866, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 905, 915, 921, 928, 933, 934, 935, 936, 937, 944, 950, 952, 960, 962, 964, 976, 979, 982, 984, 1001, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1024, 1031, 1032, 1033, 1034, 1038, 1046, 1057, 1066, 1076, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1124, 1125, 1127, 1129, 1133, 1136, 1137, 1139, 1143, 1150, 1153, 1155, 1160, 1161], "46": [7, 172, 195, 200, 205, 210, 212, 215, 218, 221, 227, 231, 234, 237, 242, 244, 247, 250, 254, 257, 260, 263, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 349, 352, 761, 907, 931, 947, 1127, 1128], "47": [7, 165, 167, 172, 195, 200, 205, 210, 212, 215, 218, 221, 227, 231, 234, 237, 242, 244, 250, 254, 257, 260, 263, 272, 275, 279, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 349, 352, 353, 732, 918, 983, 1011, 1068, 1127], "try": [7, 27, 124, 129, 137, 158, 161, 162, 164, 169, 181, 184, 194, 195, 198, 202, 205, 210, 212, 215, 218, 221, 224, 227, 229, 231, 234, 237, 240, 242, 244, 247, 250, 254, 257, 259, 260, 262, 263, 266, 267, 269, 271, 272, 275, 278, 279, 282, 289, 290, 291, 292, 295, 296, 302, 313, 314, 318, 324, 326, 330, 336, 340, 343, 350, 351, 352, 353, 357, 361, 362, 372, 450, 454, 480, 484, 491, 508, 513, 522, 530, 538, 547, 549, 582, 590, 608, 611, 627, 633, 637, 642, 646, 649, 650, 667, 669, 671, 674, 675, 676, 677, 678, 679, 710, 718, 722, 732, 738, 742, 756, 758, 772, 774, 776, 777, 778, 830, 833, 930, 951, 996, 1020, 1027, 1080, 1123, 1129, 1140, 1141, 1145, 1158], "except": [7, 21, 29, 43, 46, 62, 64, 75, 111, 112, 163, 167, 173, 181, 182, 189, 194, 195, 198, 199, 201, 203, 205, 210, 212, 215, 218, 222, 223, 224, 227, 229, 231, 234, 235, 238, 239, 242, 244, 248, 249, 252, 254, 257, 259, 260, 264, 272, 275, 279, 282, 290, 291, 292, 295, 296, 302, 312, 313, 314, 316, 317, 318, 324, 330, 336, 340, 342, 344, 350, 351, 352, 353, 357, 362, 370, 371, 390, 442, 445, 479, 484, 485, 492, 519, 530, 547, 549, 582, 611, 627, 633, 637, 646, 649, 650, 654, 667, 674, 675, 677, 678, 679, 683, 686, 710, 718, 739, 741, 742, 753, 758, 778, 793, 825, 858, 863, 929, 983, 997, 1020, 1024, 1027, 1030, 1033, 1036, 1046, 1048, 1051, 1069, 1071, 1121, 1123, 1140, 1145, 1158, 1168, 1175], "index": [7, 13, 23, 29, 39, 51, 53, 91, 111, 112, 158, 159, 168, 181, 183, 188, 193, 195, 196, 198, 199, 201, 203, 207, 208, 210, 213, 215, 218, 219, 221, 222, 224, 227, 229, 232, 234, 235, 237, 238, 240, 241, 243, 244, 245, 248, 250, 251, 253, 255, 256, 257, 259, 260, 262, 271, 272, 274, 275, 280, 281, 282, 284, 286, 288, 290, 291, 294, 295, 296, 300, 301, 303, 306, 309, 312, 313, 314, 316, 317, 318, 322, 323, 324, 328, 329, 330, 334, 335, 336, 338, 339, 340, 357, 364, 388, 404, 430, 458, 466, 561, 564, 567, 570, 573, 576, 577, 579, 617, 618, 620, 625, 664, 704, 732, 744, 758, 778, 821, 988, 991, 995, 1046, 1047, 1059, 1062, 1069, 1075, 1076, 1077, 1078, 1080, 1082, 1095, 1101, 1106, 1121, 1123, 1124, 1125, 1127, 1128, 1129, 1137, 1139, 1141, 1143, 1144, 1146, 1150, 1160, 1162, 1167], "out": [7, 31, 44, 45, 50, 55, 64, 66, 76, 86, 107, 114, 120, 122, 124, 126, 129, 137, 141, 148, 154, 155, 158, 159, 161, 162, 163, 164, 165, 167, 168, 169, 172, 173, 177, 182, 183, 190, 191, 194, 198, 201, 202, 210, 215, 218, 223, 231, 237, 238, 240, 247, 250, 254, 258, 287, 313, 314, 336, 340, 343, 357, 363, 368, 379, 400, 418, 424, 425, 433, 444, 451, 458, 459, 460, 464, 466, 467, 472, 477, 480, 482, 484, 509, 510, 525, 528, 538, 554, 560, 577, 584, 586, 600, 615, 657, 660, 695, 710, 729, 732, 745, 756, 774, 793, 794, 803, 825, 833, 838, 852, 853, 856, 860, 864, 867, 871, 881, 912, 918, 922, 929, 930, 931, 948, 949, 965, 983, 986, 996, 997, 999, 1011, 1016, 1023, 1027, 1067, 1068, 1075, 1101, 1104, 1131, 1136, 1138, 1144, 1146, 1147, 1151, 1157, 1176], "rang": [7, 29, 42, 64, 91, 109, 124, 125, 169, 182, 183, 184, 189, 198, 201, 203, 206, 207, 210, 213, 215, 218, 219, 222, 229, 230, 232, 233, 235, 236, 237, 240, 241, 243, 245, 246, 249, 250, 255, 256, 258, 259, 261, 263, 265, 273, 274, 275, 281, 283, 284, 291, 292, 294, 295, 297, 300, 301, 303, 312, 314, 316, 317, 318, 322, 323, 324, 327, 328, 329, 331, 334, 335, 337, 338, 339, 341, 349, 403, 430, 446, 448, 494, 528, 531, 532, 536, 560, 576, 577, 613, 615, 618, 621, 722, 772, 775, 777, 778, 789, 922, 929, 978, 984, 987, 1019, 1022, 1024, 1029, 1031, 1033, 1035, 1045, 1046, 1054, 1058, 1075, 1079, 1080, 1081, 1082, 1092, 1094, 1095, 1096, 1098, 1102, 1103, 1104, 1105, 1106, 1107, 1121, 1133, 1136, 1144, 1146, 1175, 1176, 1186], "48": [7, 165, 172, 181, 195, 200, 205, 210, 212, 215, 218, 221, 227, 234, 237, 242, 244, 247, 250, 254, 257, 260, 263, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 349, 352, 353, 929], "append": [7, 181, 182, 183, 184, 185, 195, 200, 202, 205, 210, 212, 213, 214, 215, 218, 221, 226, 227, 228, 231, 234, 235, 237, 242, 244, 247, 250, 254, 257, 260, 263, 272, 275, 279, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 352, 353, 466, 469, 559, 577, 619, 635, 647, 674, 786, 798, 813, 825, 852, 853, 867, 870, 891, 904, 929, 938, 951, 987, 1019, 1025, 1026, 1039, 1055, 1060, 1063, 1065, 1070, 1073, 1074, 1100, 1148, 1151], "one": [7, 21, 27, 32, 40, 44, 45, 50, 59, 63, 64, 67, 81, 85, 86, 107, 111, 112, 122, 124, 125, 128, 129, 133, 137, 141, 142, 144, 150, 152, 156, 161, 162, 163, 164, 165, 166, 168, 169, 172, 173, 177, 182, 183, 184, 186, 191, 194, 195, 198, 200, 202, 205, 210, 212, 213, 214, 215, 218, 221, 223, 224, 231, 234, 237, 242, 244, 245, 247, 248, 250, 253, 254, 257, 260, 262, 272, 275, 278, 281, 282, 284, 286, 288, 292, 296, 301, 302, 304, 313, 318, 320, 324, 330, 336, 340, 342, 343, 348, 349, 354, 357, 363, 375, 380, 387, 398, 403, 405, 413, 418, 420, 421, 425, 428, 430, 435, 438, 446, 447, 448, 450, 454, 458, 460, 466, 467, 469, 470, 472, 474, 478, 479, 482, 483, 484, 489, 491, 492, 494, 495, 503, 508, 510, 528, 531, 533, 534, 538, 539, 541, 560, 571, 577, 588, 589, 597, 598, 600, 601, 602, 603, 604, 615, 616, 624, 635, 638, 642, 657, 664, 681, 682, 685, 686, 687, 690, 699, 710, 729, 731, 732, 740, 742, 743, 744, 745, 746, 752, 754, 756, 763, 776, 786, 793, 800, 803, 813, 819, 825, 833, 841, 845, 850, 851, 852, 858, 867, 869, 870, 885, 904, 918, 922, 924, 925, 926, 929, 930, 931, 932, 934, 938, 941, 942, 948, 949, 951, 952, 955, 958, 959, 961, 967, 968, 969, 970, 972, 975, 978, 981, 983, 984, 985, 992, 996, 999, 1002, 1005, 1011, 1014, 1015, 1017, 1018, 1020, 1022, 1023, 1025, 1031, 1033, 1034, 1036, 1047, 1048, 1051, 1052, 1053, 1055, 1059, 1060, 1062, 1064, 1065, 1069, 1071, 1073, 1074, 1081, 1091, 1094, 1101, 1102, 1127, 1128, 1129, 1130, 1132, 1136, 1137, 1139, 1141, 1147, 1148, 1149, 1152, 1156, 1158, 1163, 1165, 1178, 1181], "49": [7, 172, 181, 195, 200, 205, 210, 212, 215, 218, 221, 227, 231, 234, 237, 242, 244, 250, 254, 257, 260, 263, 272, 275, 279, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 349, 352, 353, 725, 870, 1011, 1025], "extend": [7, 60, 163, 164, 195, 212, 213, 215, 220, 226, 231, 234, 237, 242, 244, 250, 254, 257, 260, 272, 275, 282, 288, 292, 296, 302, 324, 330, 336, 340, 352, 487, 494, 503, 528, 601, 603, 604, 656, 786, 857, 1055, 1060, 1070, 1128, 1140], "slice": [7, 29, 91, 183, 185, 194, 198, 199, 201, 203, 208, 211, 212, 215, 222, 234, 235, 237, 238, 241, 245, 246, 252, 253, 255, 256, 257, 259, 271, 274, 276, 281, 284, 291, 294, 295, 297, 300, 301, 303, 312, 313, 316, 317, 322, 323, 328, 329, 334, 335, 338, 339, 778, 823, 984, 1046, 1059, 1063, 1082, 1095, 1106, 1121, 1137, 1141, 1143, 1145], "inclus": [7, 201, 215, 242, 254, 424, 617, 1084, 1144], "exclus": [7, 189, 215, 237, 254, 291, 406, 617, 752, 951, 984, 1033, 1069, 1073, 1084, 1144], "51": [7, 172, 195, 200, 205, 210, 212, 215, 218, 221, 227, 231, 234, 237, 242, 244, 250, 254, 257, 260, 263, 272, 275, 279, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 349, 352, 639, 640, 641, 642, 907, 909, 1127], "l\u00f6schen": [7, 205, 211, 215, 357], "52": [7, 172, 181, 195, 200, 205, 210, 212, 215, 218, 221, 227, 231, 234, 237, 242, 244, 250, 254, 257, 260, 263, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 352, 353, 931, 1127], "del": [7, 38, 181, 184, 185, 195, 210, 212, 215, 218, 226, 231, 234, 237, 242, 244, 250, 254, 257, 260, 263, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 350, 352, 1030, 1055, 1071], "53": [7, 165, 195, 200, 205, 210, 212, 215, 218, 221, 227, 231, 234, 237, 242, 244, 250, 254, 257, 260, 263, 272, 275, 279, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 349, 352, 364, 508, 509, 735, 805, 907, 929, 999, 1011, 1127, 1128], "iter": [7, 24, 29, 64, 129, 130, 182, 185, 189, 194, 198, 199, 201, 203, 206, 207, 211, 213, 215, 219, 220, 222, 223, 225, 229, 230, 232, 233, 235, 236, 238, 239, 240, 241, 243, 245, 246, 249, 252, 254, 256, 257, 261, 273, 276, 282, 290, 291, 293, 297, 302, 312, 315, 316, 317, 319, 325, 331, 336, 341, 342, 357, 363, 415, 417, 430, 466, 491, 541, 560, 577, 619, 620, 621, 625, 628, 635, 638, 640, 642, 647, 697, 704, 713, 734, 772, 778, 948, 1020, 1024, 1026, 1035, 1048, 1058, 1072, 1073, 1079, 1080, 1081, 1082, 1095, 1106, 1118, 1121, 1123, 1133, 1135, 1145, 1148, 1186], "mittel": [7, 11, 23, 185, 195, 197, 213, 215, 220, 375, 1170, 1173, 1182, 1190], "54": [7, 172, 181, 195, 200, 205, 210, 212, 215, 218, 221, 227, 231, 234, 237, 242, 244, 247, 250, 254, 257, 260, 263, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 349, 351, 352, 364, 639, 640, 641, 642, 742, 815, 907, 929, 1011, 1127], "element": [7, 8, 35, 38, 107, 110, 111, 112, 124, 182, 184, 185, 195, 200, 201, 206, 207, 210, 212, 213, 215, 216, 218, 221, 225, 226, 227, 231, 234, 235, 237, 241, 243, 244, 250, 253, 254, 257, 261, 282, 286, 289, 292, 301, 314, 351, 352, 388, 415, 430, 438, 442, 445, 530, 544, 547, 549, 558, 577, 582, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 628, 632, 635, 639, 642, 664, 682, 685, 687, 704, 718, 732, 734, 778, 786, 993, 1025, 1027, 1044, 1055, 1060, 1061, 1070, 1072, 1105, 1131, 1148, 1156, 1179, 1186], "55": [7, 172, 181, 195, 200, 205, 210, 212, 215, 218, 221, 227, 231, 234, 237, 242, 244, 250, 254, 257, 260, 263, 272, 275, 279, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 349, 351, 352, 353, 364, 441, 466, 672, 673, 674, 675, 677, 776, 999, 1080], "def": [7, 64, 181, 182, 185, 195, 200, 201, 205, 210, 212, 213, 215, 218, 221, 222, 227, 228, 231, 234, 235, 237, 242, 244, 247, 250, 254, 257, 260, 263, 272, 275, 280, 282, 292, 296, 302, 307, 310, 314, 318, 324, 330, 336, 340, 352, 353, 466, 724, 977, 1020, 1021, 1022, 1025, 1026, 1027, 1030, 1031, 1033, 1035, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1051, 1054, 1064, 1065, 1070, 1074, 1105, 1111, 1118, 1119, 1120, 1139, 1145, 1147, 1156, 1157], "is_integ": [7, 215, 272, 336], "elem": [7, 181, 185, 195, 200, 205, 210, 212, 215, 227, 234, 237, 242, 247, 272, 275, 282, 292, 296, 302, 318, 324, 330, 336, 340, 544, 641, 643, 690, 710, 712, 714, 717, 731, 732, 734, 754, 1027, 1070, 1074], "type": [7, 29, 50, 79, 84, 101, 111, 112, 142, 154, 155, 158, 161, 162, 165, 167, 169, 177, 181, 182, 185, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 211, 212, 214, 215, 218, 221, 222, 223, 226, 227, 231, 236, 239, 240, 242, 244, 249, 252, 254, 258, 260, 262, 263, 265, 273, 275, 278, 279, 282, 290, 291, 292, 295, 296, 302, 307, 311, 312, 313, 315, 316, 317, 318, 323, 324, 327, 330, 335, 337, 340, 349, 350, 351, 352, 357, 359, 360, 368, 390, 401, 402, 409, 414, 419, 420, 424, 426, 430, 432, 433, 436, 439, 440, 441, 442, 443, 446, 448, 449, 451, 452, 456, 461, 462, 466, 482, 484, 493, 496, 504, 510, 540, 544, 565, 574, 584, 586, 592, 593, 597, 599, 600, 610, 618, 647, 653, 657, 660, 662, 664, 666, 672, 684, 685, 690, 695, 696, 704, 710, 721, 722, 724, 729, 730, 731, 732, 741, 742, 744, 745, 746, 751, 761, 762, 764, 768, 769, 771, 773, 774, 775, 776, 777, 778, 781, 784, 786, 791, 794, 813, 825, 851, 855, 867, 870, 882, 885, 888, 899, 901, 902, 905, 913, 921, 922, 924, 929, 933, 938, 947, 948, 951, 954, 955, 956, 957, 958, 968, 980, 989, 992, 996, 997, 999, 1016, 1018, 1021, 1024, 1027, 1031, 1036, 1037, 1038, 1045, 1049, 1051, 1053, 1054, 1055, 1059, 1061, 1062, 1063, 1068, 1069, 1071, 1073, 1075, 1088, 1099, 1100, 1118, 1121, 1123, 1128, 1132, 1136, 1141, 1142, 1144, 1151, 1156, 1158, 1176, 1177], "int": [7, 21, 46, 108, 111, 112, 114, 117, 120, 121, 137, 164, 173, 182, 184, 195, 201, 205, 210, 212, 213, 215, 218, 222, 223, 228, 231, 234, 235, 237, 240, 242, 244, 247, 250, 254, 257, 260, 263, 272, 275, 281, 282, 284, 292, 296, 302, 310, 314, 318, 324, 329, 330, 336, 340, 350, 352, 353, 379, 380, 382, 384, 386, 388, 389, 390, 392, 393, 394, 398, 399, 400, 402, 403, 404, 408, 418, 420, 421, 422, 423, 424, 425, 427, 428, 430, 431, 433, 434, 435, 438, 440, 441, 445, 446, 447, 448, 449, 450, 454, 455, 489, 496, 503, 504, 508, 509, 510, 511, 514, 517, 518, 520, 522, 523, 524, 526, 528, 536, 538, 540, 542, 543, 544, 545, 546, 548, 558, 560, 565, 568, 574, 577, 584, 586, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 607, 609, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 628, 629, 630, 631, 635, 638, 639, 640, 641, 642, 643, 647, 649, 653, 654, 657, 659, 660, 662, 663, 664, 666, 671, 672, 673, 674, 675, 676, 677, 678, 682, 683, 685, 686, 689, 695, 696, 697, 699, 700, 701, 702, 704, 705, 706, 707, 708, 710, 711, 712, 714, 715, 716, 717, 718, 719, 720, 724, 725, 726, 727, 729, 730, 731, 732, 734, 736, 743, 744, 745, 746, 749, 751, 754, 756, 758, 762, 764, 766, 768, 776, 781, 784, 789, 791, 796, 803, 805, 807, 809, 813, 817, 819, 821, 830, 835, 842, 862, 882, 925, 929, 943, 945, 947, 948, 949, 951, 954, 955, 956, 957, 958, 961, 963, 966, 968, 970, 972, 974, 980, 983, 986, 987, 989, 992, 993, 996, 997, 999, 1011, 1015, 1017, 1042, 1053, 1054, 1062, 1063, 1065, 1068, 1074, 1075, 1090, 1113, 1115, 1118, 1119, 1163, 1168], "return": [7, 21, 27, 64, 108, 114, 117, 120, 121, 158, 161, 163, 164, 165, 169, 173, 181, 182, 185, 195, 199, 201, 203, 205, 210, 212, 213, 215, 218, 221, 222, 223, 227, 228, 231, 234, 235, 237, 240, 242, 244, 247, 250, 254, 257, 260, 264, 265, 272, 275, 280, 282, 286, 292, 296, 307, 310, 313, 314, 318, 324, 331, 336, 340, 352, 353, 379, 380, 382, 386, 388, 390, 399, 408, 418, 424, 430, 431, 433, 440, 441, 444, 445, 447, 448, 450, 454, 466, 473, 482, 483, 484, 485, 489, 491, 494, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 528, 535, 536, 540, 541, 544, 560, 568, 574, 577, 584, 585, 586, 588, 589, 592, 593, 594, 595, 597, 598, 599, 600, 601, 602, 603, 607, 609, 610, 612, 613, 614, 615, 616, 617, 619, 620, 621, 622, 623, 625, 626, 629, 630, 631, 635, 638, 639, 640, 641, 642, 643, 649, 653, 654, 657, 659, 660, 666, 670, 671, 672, 673, 674, 675, 676, 677, 678, 682, 687, 689, 690, 697, 699, 700, 701, 702, 704, 705, 706, 707, 708, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 724, 725, 726, 727, 728, 729, 732, 734, 739, 740, 742, 743, 744, 745, 746, 752, 754, 756, 762, 764, 766, 767, 768, 769, 772, 773, 774, 776, 781, 788, 796, 803, 807, 815, 817, 839, 841, 845, 862, 882, 929, 943, 945, 947, 948, 949, 951, 952, 954, 955, 956, 957, 958, 963, 966, 967, 968, 978, 980, 983, 989, 992, 993, 996, 997, 999, 1011, 1015, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1025, 1026, 1027, 1035, 1039, 1040, 1042, 1043, 1044, 1065, 1067, 1069, 1070, 1071, 1074, 1080, 1096, 1098, 1102, 1105, 1106, 1113, 1115, 1118, 1142, 1144, 1145, 1147, 1156, 1163, 1168], "els": [7, 21, 43, 50, 64, 111, 112, 119, 125, 141, 162, 164, 165, 168, 177, 182, 185, 195, 198, 201, 205, 213, 215, 218, 221, 222, 223, 227, 231, 234, 235, 238, 239, 240, 242, 246, 247, 252, 254, 257, 261, 263, 272, 274, 275, 280, 282, 292, 296, 302, 314, 324, 331, 336, 341, 342, 353, 364, 386, 392, 403, 408, 419, 425, 426, 432, 436, 439, 443, 444, 452, 456, 461, 462, 466, 474, 475, 489, 513, 520, 523, 577, 600, 624, 625, 635, 642, 656, 676, 684, 689, 722, 743, 745, 752, 756, 775, 777, 778, 807, 817, 841, 852, 853, 858, 877, 879, 882, 888, 909, 930, 943, 946, 951, 977, 978, 980, 983, 985, 1023, 1030, 1042, 1043, 1046, 1057, 1065, 1071, 1145, 1175], "fals": [7, 46, 111, 112, 114, 118, 119, 121, 165, 167, 181, 182, 195, 200, 205, 210, 212, 213, 215, 218, 221, 227, 231, 234, 235, 237, 242, 244, 247, 250, 254, 257, 260, 263, 272, 275, 279, 282, 286, 292, 296, 302, 307, 314, 318, 324, 330, 336, 340, 351, 366, 382, 386, 403, 440, 466, 600, 625, 657, 664, 687, 699, 752, 756, 758, 845, 858, 885, 977, 978, 983, 985, 1005, 1020, 1035, 1039, 1042, 1055, 1056, 1058, 1059, 1063, 1141, 1142, 1145, 1147, 1163], "56": [7, 158, 172, 195, 200, 205, 210, 212, 215, 218, 221, 227, 231, 234, 237, 242, 244, 250, 254, 257, 260, 263, 272, 275, 279, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 349, 351, 352, 364, 403, 507, 595, 776, 904, 929, 931, 1127, 1140, 1141, 1142, 1144, 1145, 1146, 1147], "x": [7, 23, 32, 42, 62, 64, 114, 117, 118, 119, 120, 121, 167, 173, 181, 182, 183, 185, 195, 205, 210, 212, 214, 215, 218, 221, 231, 234, 237, 238, 242, 244, 250, 254, 257, 260, 262, 263, 272, 275, 279, 282, 291, 292, 296, 318, 324, 330, 336, 340, 353, 357, 399, 402, 403, 409, 424, 425, 427, 430, 433, 434, 438, 440, 448, 450, 454, 477, 528, 538, 575, 584, 585, 586, 587, 589, 591, 592, 593, 594, 595, 596, 598, 600, 602, 603, 610, 617, 625, 685, 686, 687, 689, 704, 706, 707, 708, 725, 736, 745, 851, 852, 853, 856, 860, 862, 867, 870, 872, 873, 881, 882, 907, 910, 914, 916, 922, 929, 930, 931, 947, 957, 963, 965, 966, 974, 978, 999, 1000, 1001, 1002, 1007, 1011, 1013, 1014, 1019, 1020, 1048, 1050, 1056, 1064, 1065, 1067, 1068, 1069, 1072, 1073, 1077, 1101, 1128, 1145, 1156, 1157, 1163], "filter": [7, 29, 107, 110, 124, 179, 182, 215, 222, 235, 252, 275, 281, 284, 288, 289, 296, 313, 315, 318, 325, 330, 334, 338, 530, 547, 582, 740, 741, 778, 850, 869, 918, 1121, 1137, 1143, 1146, 1163], "57": [7, 158, 172, 195, 200, 205, 210, 212, 215, 218, 221, 227, 231, 234, 237, 242, 244, 250, 254, 257, 260, 263, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 349, 352, 353, 473, 478, 907, 929, 942, 1000, 1001, 1127], "zero": [7, 32, 38, 158, 164, 180, 182, 183, 185, 195, 205, 213, 215, 218, 231, 237, 242, 244, 247, 250, 254, 257, 272, 296, 330, 336, 357, 379, 388, 406, 731, 741, 745, 784, 796, 811, 856, 885, 900, 907, 931, 951, 972, 978, 981, 984, 987, 992, 993, 1059], "two": [7, 12, 17, 29, 32, 34, 35, 36, 38, 42, 44, 54, 70, 86, 107, 133, 150, 152, 155, 156, 161, 162, 163, 164, 177, 182, 183, 184, 190, 194, 195, 200, 205, 206, 208, 210, 212, 213, 215, 218, 219, 221, 223, 224, 225, 229, 231, 232, 235, 237, 240, 241, 242, 244, 245, 250, 251, 253, 254, 256, 258, 259, 260, 272, 274, 275, 278, 280, 281, 282, 290, 292, 294, 295, 296, 300, 301, 302, 306, 309, 318, 322, 323, 324, 328, 329, 330, 334, 335, 336, 338, 339, 340, 343, 349, 357, 363, 366, 375, 376, 387, 394, 424, 430, 432, 433, 436, 438, 439, 442, 443, 445, 447, 450, 452, 456, 461, 462, 464, 465, 466, 467, 476, 479, 492, 494, 504, 508, 509, 528, 538, 540, 560, 568, 571, 577, 593, 598, 600, 617, 640, 682, 683, 684, 685, 686, 722, 728, 731, 732, 734, 741, 744, 746, 775, 777, 778, 823, 825, 828, 890, 892, 912, 922, 924, 929, 930, 931, 948, 951, 952, 959, 969, 970, 978, 983, 992, 997, 1007, 1017, 1025, 1031, 1034, 1037, 1042, 1045, 1046, 1052, 1055, 1058, 1069, 1071, 1073, 1079, 1082, 1084, 1085, 1086, 1089, 1091, 1092, 1095, 1096, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1118, 1121, 1122, 1128, 1130, 1136, 1144, 1157, 1163, 1176, 1186, 1191], "58": [7, 165, 172, 195, 200, 205, 210, 212, 215, 218, 221, 227, 231, 234, 237, 242, 244, 250, 254, 257, 260, 263, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 352, 357, 362, 364, 466, 931, 1000, 1001, 1011, 1127, 1128], "59": [7, 172, 195, 200, 205, 210, 212, 215, 218, 221, 227, 231, 234, 237, 242, 244, 250, 254, 257, 260, 263, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 349, 352, 364, 1001, 1002, 1011, 1127], "three": [7, 12, 32, 36, 38, 43, 64, 111, 112, 129, 163, 175, 178, 182, 183, 194, 195, 198, 199, 205, 210, 212, 213, 215, 221, 229, 231, 234, 237, 242, 244, 247, 250, 254, 257, 260, 272, 275, 280, 281, 282, 284, 290, 291, 292, 296, 301, 302, 314, 318, 324, 330, 336, 340, 357, 375, 444, 619, 664, 858, 867, 870, 885, 922, 929, 931, 951, 983, 992, 1027, 1037, 1055, 1059, 1069, 1071, 1073, 1085, 1091, 1122, 1123, 1177, 1191], "60": [7, 64, 107, 172, 195, 200, 205, 210, 212, 215, 218, 221, 227, 231, 234, 237, 242, 244, 250, 254, 257, 260, 262, 263, 272, 275, 279, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 351, 352, 508, 509, 510, 522, 523, 524, 531, 867, 929, 930, 931, 1025, 1127, 1128], "61": [7, 64, 172, 183, 195, 200, 205, 210, 212, 215, 218, 221, 227, 234, 237, 242, 244, 250, 254, 257, 263, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 349, 352, 357, 362, 1127, 1128], "62": [7, 172, 195, 200, 205, 210, 212, 215, 218, 221, 227, 231, 234, 237, 242, 244, 250, 254, 257, 260, 263, 272, 275, 279, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 352, 867, 1080, 1127], "63": [7, 172, 195, 200, 205, 210, 212, 215, 218, 221, 227, 234, 237, 242, 244, 250, 254, 257, 260, 263, 272, 275, 279, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 349, 352, 357, 362, 1080, 1127], "k": [7, 29, 164, 183, 185, 195, 198, 210, 212, 215, 218, 222, 223, 234, 237, 242, 244, 247, 250, 257, 260, 272, 275, 281, 282, 292, 302, 312, 314, 316, 318, 324, 330, 336, 340, 358, 359, 378, 506, 639, 682, 744, 762, 778, 885, 932, 967, 1121, 1124, 1130, 1137, 1156], "v": [7, 20, 23, 31, 32, 89, 122, 132, 144, 158, 162, 169, 183, 186, 189, 195, 199, 201, 203, 207, 209, 210, 213, 214, 215, 220, 222, 223, 224, 225, 231, 234, 235, 237, 238, 240, 241, 243, 249, 252, 253, 255, 258, 260, 264, 271, 272, 275, 278, 283, 291, 293, 297, 301, 302, 308, 314, 318, 324, 327, 330, 336, 340, 343, 357, 454, 478, 483, 504, 530, 564, 582, 639, 659, 682, 686, 690, 695, 696, 697, 704, 705, 706, 707, 708, 713, 716, 717, 718, 724, 730, 731, 732, 755, 758, 761, 763, 774, 777, 778, 787, 792, 795, 797, 802, 806, 808, 812, 816, 817, 818, 820, 822, 825, 827, 829, 833, 834, 836, 840, 843, 846, 851, 855, 858, 859, 862, 885, 887, 914, 921, 944, 950, 952, 960, 962, 976, 979, 982, 984, 992, 993, 999, 1042, 1065, 1158, 1159, 1171, 1173, 1190, 1192], "65": [7, 195, 200, 205, 210, 212, 215, 218, 221, 227, 231, 234, 237, 242, 244, 250, 254, 257, 260, 263, 272, 275, 279, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 349, 352, 672, 987, 1127, 1128], "item": [7, 162, 182, 184, 195, 200, 205, 210, 212, 215, 218, 221, 222, 226, 227, 231, 234, 235, 237, 242, 244, 247, 250, 254, 257, 260, 262, 266, 267, 269, 272, 275, 280, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 351, 442, 446, 448, 467, 731, 775, 777, 778, 992, 993, 1027, 1028, 1029, 1035, 1061, 1068, 1071, 1073, 1111, 1156], "66": [7, 165, 172, 195, 200, 205, 210, 212, 215, 218, 221, 227, 234, 237, 242, 244, 250, 254, 257, 260, 263, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 352, 662, 1080, 1127, 1128], "": [7, 8, 14, 20, 23, 31, 35, 37, 38, 40, 43, 44, 45, 48, 55, 59, 60, 62, 63, 64, 66, 67, 79, 90, 105, 109, 110, 122, 124, 129, 137, 141, 142, 148, 158, 159, 161, 163, 164, 165, 166, 167, 168, 169, 172, 173, 174, 179, 182, 183, 184, 186, 188, 189, 191, 192, 194, 195, 198, 200, 201, 205, 206, 210, 212, 213, 214, 215, 216, 218, 221, 223, 224, 227, 228, 231, 234, 235, 237, 238, 240, 241, 242, 244, 247, 248, 250, 254, 257, 260, 263, 266, 267, 269, 272, 275, 278, 279, 280, 281, 282, 284, 287, 288, 289, 290, 291, 292, 296, 299, 302, 304, 306, 309, 312, 313, 314, 316, 318, 320, 324, 326, 327, 329, 330, 336, 340, 342, 343, 351, 352, 354, 357, 360, 361, 375, 377, 390, 392, 398, 403, 424, 425, 428, 437, 442, 444, 446, 447, 448, 449, 450, 454, 465, 466, 467, 469, 470, 472, 474, 475, 478, 479, 482, 483, 484, 486, 487, 488, 489, 492, 493, 504, 506, 507, 509, 510, 514, 525, 527, 538, 539, 540, 541, 544, 550, 552, 553, 561, 564, 567, 568, 570, 573, 576, 579, 586, 588, 589, 592, 593, 596, 597, 599, 600, 609, 619, 629, 630, 640, 647, 649, 654, 656, 659, 660, 662, 666, 669, 673, 683, 684, 686, 688, 690, 693, 694, 695, 696, 699, 703, 704, 710, 719, 722, 724, 727, 731, 732, 734, 736, 740, 741, 742, 744, 746, 754, 756, 757, 758, 762, 764, 766, 767, 768, 769, 774, 776, 777, 778, 784, 793, 796, 798, 803, 809, 811, 821, 830, 833, 845, 850, 851, 852, 853, 856, 857, 860, 862, 863, 867, 868, 869, 871, 875, 877, 879, 881, 882, 883, 885, 887, 888, 904, 907, 908, 910, 911, 913, 914, 916, 917, 918, 922, 925, 929, 930, 931, 932, 933, 940, 941, 942, 943, 945, 946, 947, 948, 949, 951, 952, 954, 955, 956, 957, 958, 959, 961, 963, 965, 966, 968, 969, 970, 974, 975, 978, 980, 983, 984, 985, 987, 988, 989, 991, 993, 995, 996, 997, 1002, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1020, 1021, 1022, 1025, 1026, 1028, 1029, 1030, 1034, 1035, 1042, 1046, 1047, 1048, 1051, 1055, 1056, 1062, 1065, 1068, 1069, 1072, 1073, 1080, 1085, 1092, 1103, 1110, 1111, 1112, 1114, 1122, 1129, 1131, 1132, 1135, 1136, 1139, 1146, 1147, 1148, 1149, 1150, 1151, 1156, 1157, 1162, 1165, 1167, 1168, 1171, 1176, 1178, 1181, 1194], "rot": [7, 215, 226], "gruen": [7, 215], "blau": [7, 215, 226], "67": [7, 172, 183, 195, 205, 210, 212, 215, 218, 221, 227, 234, 237, 242, 244, 250, 254, 257, 260, 263, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 352, 357, 362, 466, 531, 987, 1068, 1080, 1127, 1128], "69": [7, 62, 167, 172, 195, 200, 205, 210, 212, 215, 218, 221, 227, 231, 234, 237, 242, 244, 250, 254, 257, 260, 263, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 352, 1127, 1128, 1147], "schwarz": [7, 215, 226], "70": [7, 62, 164, 172, 195, 200, 202, 205, 210, 212, 215, 218, 221, 227, 234, 237, 242, 244, 250, 254, 257, 260, 263, 272, 275, 279, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 352, 466, 531, 929, 930, 931, 1025, 1127, 1128, 1156], "add": [7, 23, 42, 44, 49, 60, 66, 122, 129, 131, 142, 144, 146, 157, 158, 162, 163, 164, 168, 169, 173, 177, 182, 191, 194, 195, 198, 201, 210, 212, 213, 215, 218, 221, 223, 227, 231, 234, 235, 237, 242, 247, 250, 254, 257, 260, 266, 267, 272, 275, 278, 282, 286, 292, 296, 302, 307, 309, 314, 318, 324, 327, 330, 336, 340, 357, 363, 405, 406, 445, 446, 454, 467, 468, 474, 477, 484, 486, 487, 503, 504, 508, 513, 514, 525, 533, 540, 542, 560, 574, 584, 597, 598, 600, 602, 671, 672, 673, 682, 690, 710, 721, 732, 740, 754, 756, 791, 793, 794, 798, 805, 813, 815, 825, 838, 841, 851, 924, 929, 930, 931, 959, 983, 985, 987, 993, 998, 1011, 1013, 1020, 1021, 1043, 1047, 1055, 1073, 1078, 1145, 1156, 1157, 1163], "71": [7, 172, 195, 200, 205, 210, 212, 215, 218, 221, 227, 234, 237, 242, 244, 250, 254, 257, 260, 263, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 352, 357, 362, 1000, 1001, 1127, 1128], "72": [7, 172, 195, 200, 205, 210, 212, 215, 218, 221, 227, 234, 237, 242, 244, 250, 254, 257, 260, 263, 272, 275, 279, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 349, 352, 357, 362, 592, 916, 1011, 1080, 1127, 1128], "remov": [7, 57, 100, 110, 124, 129, 130, 168, 169, 182, 184, 195, 210, 215, 221, 227, 235, 237, 242, 244, 250, 254, 257, 261, 262, 268, 275, 277, 278, 292, 296, 298, 299, 302, 313, 314, 318, 324, 330, 340, 469, 470, 488, 502, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 547, 548, 549, 554, 558, 577, 582, 612, 618, 635, 668, 690, 743, 754, 755, 756, 773, 776, 777, 778, 786, 803, 813, 821, 844, 851, 852, 853, 854, 855, 858, 859, 872, 873, 875, 877, 878, 879, 880, 882, 883, 889, 890, 891, 892, 894, 895, 897, 899, 905, 921, 932, 942, 944, 950, 952, 955, 960, 962, 965, 976, 979, 982, 984, 1001, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1015, 1025, 1045, 1055, 1070, 1071, 1072, 1105], "73": [7, 172, 183, 195, 205, 210, 212, 215, 218, 221, 227, 234, 237, 242, 244, 250, 254, 257, 263, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 349, 352, 1127], "74": [7, 165, 167, 172, 195, 205, 210, 212, 215, 218, 221, 227, 234, 237, 242, 244, 250, 254, 257, 260, 263, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 352, 907, 916, 1080, 1127, 1128], "75": [7, 172, 195, 205, 210, 212, 215, 218, 221, 223, 227, 231, 234, 237, 242, 244, 250, 254, 257, 260, 263, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 352, 466, 1127, 1128], "sum": [7, 38, 64, 195, 215, 219, 220, 234, 235, 237, 240, 242, 250, 253, 254, 257, 260, 275, 282, 324, 330, 336, 340, 415, 430, 445, 447, 448, 450, 514, 540, 560, 584, 598, 600, 613, 617, 665, 679, 762, 764, 766, 768, 778, 984, 1042, 1058, 1141], "100": [7, 32, 122, 161, 162, 167, 177, 181, 182, 195, 205, 212, 215, 218, 221, 227, 231, 234, 237, 242, 244, 247, 250, 253, 254, 257, 260, 262, 263, 272, 275, 278, 279, 280, 282, 286, 292, 296, 302, 313, 314, 318, 324, 330, 336, 340, 352, 353, 357, 362, 415, 421, 422, 464, 467, 480, 489, 522, 523, 531, 550, 612, 613, 614, 615, 616, 618, 619, 620, 621, 635, 682, 699, 720, 796, 835, 881, 884, 907, 924, 963, 985, 987, 991, 992, 1000, 1001, 1026, 1058, 1062, 1080, 1111, 1156], "5050": [7, 195, 215, 237, 250, 257, 282, 324, 330, 336, 340], "bestimmen": [7, 215], "maximum": [7, 29, 155, 195, 205, 206, 208, 210, 213, 215, 218, 219, 225, 229, 231, 232, 234, 235, 237, 241, 242, 244, 245, 247, 250, 251, 253, 254, 256, 258, 259, 274, 275, 281, 282, 294, 295, 296, 300, 301, 322, 323, 328, 329, 330, 334, 335, 336, 338, 339, 340, 353, 405, 678, 756, 778, 786, 862, 922, 987, 993, 1065, 1082, 1084, 1085, 1086, 1089, 1092, 1095, 1096, 1102, 1103, 1104, 1105, 1106, 1107, 1121, 1122, 1126, 1127, 1128, 1129, 1151, 1186], "zwei": [7, 65, 171, 181, 189, 195, 207, 210, 212, 215, 218, 231, 234, 242, 247, 250, 254, 260, 282, 302, 310, 314, 318, 340, 352, 548, 639, 640, 641, 642, 912, 1173, 1190], "inlin": [7, 142, 183, 189, 201, 215, 231, 260, 263, 265, 287, 314, 318, 324, 425, 447, 450, 571, 586, 600, 639, 676, 728, 746, 762, 764, 766, 767, 768, 769, 776, 1019, 1098], "ohn": [7, 23, 179, 181, 189, 215, 218, 330, 847, 913, 1172, 1192, 1193, 1194], "funktion": [7, 23, 185, 189, 195, 206, 207, 208, 212, 215, 218, 221, 242, 244, 247, 250, 282, 314, 352, 1186], "666": [7, 42, 50, 108, 114, 120, 130, 132, 181, 182, 195, 205, 210, 212, 215, 218, 221, 227, 231, 234, 237, 242, 244, 247, 250, 254, 257, 260, 263, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 348, 349, 350, 352, 353, 388, 468, 487, 542, 543, 544, 545, 546, 550, 551, 552, 553, 555, 556, 558, 565, 577, 584, 588, 597, 599, 622, 623, 624, 625, 626, 628, 631, 639, 642, 662, 666, 695, 697, 704, 706, 707, 708, 712, 732, 736, 739, 741, 746, 749, 762, 764, 766, 772, 773, 774, 783, 784, 1018, 1022, 1064, 1065, 1068, 1168], "var1": [7, 205, 215, 1088], "var2": [7, 205, 215, 1088], "6712": [7, 215, 237], "isn": [7, 161, 177, 215, 281, 284, 365, 379, 430, 617, 621, 660, 683, 710, 730, 929, 1067, 1163], "fehler": [7, 189, 195, 215, 357, 362], "link": [7, 13, 17, 27, 32, 44, 66, 104, 105, 124, 130, 135, 155, 158, 159, 161, 162, 168, 169, 170, 171, 172, 173, 179, 181, 189, 195, 202, 215, 238, 240, 268, 269, 277, 278, 286, 291, 298, 299, 304, 320, 330, 357, 370, 371, 420, 433, 439, 443, 447, 452, 456, 461, 462, 467, 470, 472, 473, 478, 488, 502, 525, 530, 531, 532, 533, 534, 535, 536, 537, 540, 560, 567, 568, 582, 597, 684, 690, 698, 722, 732, 733, 775, 776, 777, 778, 786, 787, 791, 792, 795, 803, 806, 815, 816, 825, 827, 829, 834, 840, 843, 846, 855, 905, 907, 912, 921, 930, 937, 967, 970, 972, 999, 1000, 1001, 1002, 1004, 1005, 1006, 1007, 1009, 1011, 1017, 1122, 1150, 1160, 1163, 1170, 1171, 1178], "\u212c": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 115, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 198, 199, 201, 202, 203, 204, 206, 208, 209, 216, 219, 222, 223, 224, 225, 229, 232, 235, 238, 240, 241, 245, 248, 251, 253, 256, 262, 266, 267, 268, 269, 270, 277, 278, 280, 287, 288, 289, 290, 291, 298, 299, 304, 305, 306, 309, 312, 313, 316, 317, 320, 321, 326, 327, 332, 342, 343, 344, 345, 346, 348, 357, 364, 365, 366, 367, 368, 369, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 433, 434, 435, 437, 438, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 457, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 503, 504, 511, 512, 513, 514, 515, 517, 518, 519, 525, 526, 527, 528, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 560, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 607, 609, 610, 617, 618, 619, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 647, 649, 651, 653, 654, 656, 657, 658, 659, 660, 662, 663, 666, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 681, 682, 683, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 703, 704, 709, 710, 719, 720, 721, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 742, 743, 744, 745, 746, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 762, 764, 766, 767, 768, 769, 776, 780, 781, 783, 784, 786, 788, 789, 791, 793, 794, 796, 802, 803, 805, 807, 809, 811, 813, 815, 817, 819, 821, 823, 827, 828, 830, 832, 833, 835, 838, 839, 841, 842, 844, 845, 847, 849, 850, 851, 856, 857, 860, 861, 862, 863, 864, 865, 867, 868, 869, 870, 881, 882, 883, 884, 885, 886, 887, 888, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 916, 917, 918, 923, 924, 925, 926, 929, 932, 938, 939, 940, 941, 942, 943, 945, 946, 947, 948, 949, 950, 951, 954, 955, 956, 957, 958, 961, 963, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 977, 978, 980, 981, 983, 985, 986, 987, 999, 1000, 1001, 1002, 1007, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1027, 1030, 1031, 1033, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1078, 1079, 1080, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1117, 1118, 1119, 1120, 1131, 1132, 1134, 1135, 1136, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1148, 1152, 1156, 1157, 1158, 1159, 1186], "\u2145": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 115, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 198, 199, 201, 202, 203, 204, 206, 208, 209, 216, 219, 222, 223, 224, 225, 229, 232, 235, 238, 240, 241, 245, 248, 251, 253, 256, 262, 266, 267, 268, 269, 270, 277, 278, 280, 287, 288, 289, 290, 291, 298, 299, 304, 305, 306, 309, 312, 313, 316, 317, 320, 321, 326, 327, 332, 342, 343, 344, 345, 346, 348, 357, 364, 365, 366, 367, 368, 369, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 433, 434, 435, 437, 438, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 457, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 503, 504, 511, 512, 513, 514, 515, 517, 518, 519, 525, 526, 527, 528, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 560, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 607, 609, 610, 617, 618, 619, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 647, 649, 651, 653, 654, 656, 657, 658, 659, 660, 662, 663, 666, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 681, 682, 683, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 703, 704, 709, 710, 719, 720, 721, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 742, 743, 744, 745, 746, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 762, 764, 766, 767, 768, 769, 776, 780, 781, 783, 784, 786, 788, 789, 791, 793, 794, 796, 802, 803, 805, 807, 809, 811, 813, 815, 817, 819, 821, 823, 827, 828, 830, 832, 833, 835, 838, 839, 841, 842, 844, 845, 847, 849, 850, 851, 856, 857, 860, 861, 862, 863, 864, 865, 867, 868, 869, 870, 881, 882, 883, 884, 885, 886, 887, 888, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 916, 917, 918, 923, 924, 925, 926, 929, 932, 938, 939, 940, 941, 942, 943, 945, 946, 947, 948, 949, 950, 951, 954, 955, 956, 957, 958, 961, 963, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 977, 978, 980, 981, 983, 985, 986, 987, 999, 1000, 1001, 1002, 1007, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1027, 1030, 1031, 1033, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1078, 1079, 1080, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1117, 1118, 1119, 1120, 1131, 1132, 1134, 1135, 1136, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1148, 1152, 1156, 1157, 1158, 1159, 1186], "\u212d": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 115, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 198, 199, 201, 202, 203, 204, 206, 208, 209, 216, 219, 222, 223, 224, 225, 229, 232, 235, 238, 240, 241, 245, 248, 251, 253, 256, 262, 266, 267, 268, 269, 270, 277, 278, 280, 287, 288, 289, 290, 291, 298, 299, 304, 305, 306, 309, 312, 313, 316, 317, 320, 321, 326, 327, 332, 342, 343, 344, 345, 346, 348, 357, 364, 365, 366, 367, 368, 369, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 433, 434, 435, 437, 438, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 457, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 503, 504, 511, 512, 513, 514, 515, 517, 518, 519, 525, 526, 527, 528, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 560, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 607, 609, 610, 617, 618, 619, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 647, 649, 651, 653, 654, 656, 657, 658, 659, 660, 662, 663, 666, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 681, 682, 683, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 703, 704, 709, 710, 719, 720, 721, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 742, 743, 744, 745, 746, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 762, 764, 766, 767, 768, 769, 776, 780, 781, 783, 784, 786, 788, 789, 791, 793, 794, 796, 802, 803, 805, 807, 809, 811, 813, 815, 817, 819, 821, 823, 827, 828, 830, 832, 833, 835, 838, 839, 841, 842, 844, 845, 847, 849, 850, 851, 856, 857, 860, 861, 862, 863, 864, 865, 867, 868, 869, 870, 881, 882, 883, 884, 885, 886, 887, 888, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 916, 917, 918, 923, 924, 925, 926, 929, 932, 938, 939, 940, 941, 942, 943, 945, 946, 947, 948, 949, 950, 951, 954, 955, 956, 957, 958, 961, 963, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 977, 978, 980, 981, 983, 985, 986, 987, 999, 1000, 1001, 1002, 1007, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1027, 1030, 1031, 1033, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1078, 1079, 1080, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1117, 1118, 1119, 1120, 1131, 1132, 1134, 1135, 1136, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1148, 1152, 1156, 1157, 1158, 1159, 1186], "\u2102": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 115, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 198, 199, 201, 202, 203, 204, 206, 208, 209, 216, 219, 222, 223, 224, 225, 229, 232, 235, 238, 240, 241, 245, 248, 251, 253, 256, 262, 266, 267, 268, 269, 270, 277, 278, 280, 287, 288, 289, 290, 291, 298, 299, 304, 305, 306, 309, 312, 313, 316, 317, 320, 321, 326, 327, 332, 342, 343, 344, 345, 346, 348, 357, 364, 365, 366, 367, 368, 369, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 433, 434, 435, 437, 438, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 457, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 503, 504, 511, 512, 513, 514, 515, 517, 518, 519, 525, 526, 527, 528, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 560, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 607, 609, 610, 617, 618, 619, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 647, 649, 651, 653, 654, 656, 657, 658, 659, 660, 662, 663, 666, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 681, 682, 683, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 703, 704, 709, 710, 719, 720, 721, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 742, 743, 744, 745, 746, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 762, 764, 766, 767, 768, 769, 776, 780, 781, 783, 784, 786, 788, 789, 791, 793, 794, 796, 802, 803, 805, 807, 809, 811, 813, 815, 817, 819, 821, 823, 827, 828, 830, 832, 833, 835, 838, 839, 841, 842, 844, 845, 847, 849, 850, 851, 856, 857, 860, 861, 862, 863, 864, 865, 867, 868, 869, 870, 881, 882, 883, 884, 885, 886, 887, 888, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 916, 917, 918, 923, 924, 925, 926, 929, 932, 938, 939, 940, 941, 942, 943, 945, 946, 947, 948, 949, 950, 951, 954, 955, 956, 957, 958, 961, 963, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 977, 978, 980, 981, 983, 985, 986, 987, 999, 1000, 1001, 1002, 1007, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1027, 1030, 1031, 1033, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1078, 1079, 1080, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1117, 1118, 1119, 1120, 1131, 1132, 1134, 1135, 1136, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1148, 1152, 1156, 1157, 1158, 1159, 1186], "\u2146": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 115, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 198, 199, 201, 202, 203, 204, 206, 208, 209, 216, 219, 222, 223, 224, 225, 229, 232, 235, 238, 240, 241, 245, 248, 251, 253, 256, 262, 266, 267, 268, 269, 270, 277, 278, 280, 287, 288, 289, 290, 291, 298, 299, 304, 305, 306, 309, 312, 313, 316, 317, 320, 321, 326, 327, 332, 342, 343, 344, 345, 346, 348, 357, 364, 365, 366, 367, 368, 369, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 433, 434, 435, 437, 438, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 457, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 503, 504, 511, 512, 513, 514, 515, 517, 518, 519, 525, 526, 527, 528, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 560, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 607, 609, 610, 617, 618, 619, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 647, 649, 651, 653, 654, 656, 657, 658, 659, 660, 662, 663, 666, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 681, 682, 683, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 703, 704, 709, 710, 719, 720, 721, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 742, 743, 744, 745, 746, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 762, 764, 766, 767, 768, 769, 776, 780, 781, 783, 784, 786, 788, 789, 791, 793, 794, 796, 802, 803, 805, 807, 809, 811, 813, 815, 817, 819, 821, 823, 827, 828, 830, 832, 833, 835, 838, 839, 841, 842, 844, 845, 847, 849, 850, 851, 856, 857, 860, 861, 862, 863, 864, 865, 867, 868, 869, 870, 881, 882, 883, 884, 885, 886, 887, 888, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 916, 917, 918, 923, 924, 925, 926, 929, 932, 938, 939, 940, 941, 942, 943, 945, 946, 947, 948, 949, 950, 951, 954, 955, 956, 957, 958, 961, 963, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 977, 978, 980, 981, 983, 985, 986, 987, 999, 1000, 1001, 1002, 1007, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1027, 1030, 1031, 1033, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1078, 1079, 1080, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1117, 1118, 1119, 1120, 1131, 1132, 1134, 1135, 1136, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1148, 1152, 1156, 1157, 1158, 1159, 1186], "\u03dd": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 115, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 198, 199, 201, 202, 203, 204, 206, 208, 209, 216, 219, 222, 223, 224, 225, 229, 232, 235, 238, 240, 241, 245, 248, 251, 253, 256, 262, 266, 267, 268, 269, 270, 277, 278, 280, 287, 288, 289, 290, 291, 298, 299, 304, 305, 306, 309, 312, 313, 316, 317, 320, 321, 326, 327, 332, 342, 343, 344, 345, 346, 348, 357, 364, 365, 366, 367, 368, 369, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 433, 434, 435, 437, 438, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 457, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 503, 504, 511, 512, 513, 514, 515, 517, 518, 519, 525, 526, 527, 528, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 560, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 607, 609, 610, 617, 618, 619, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 647, 649, 651, 653, 654, 656, 657, 658, 659, 660, 662, 663, 666, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 681, 682, 683, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 703, 704, 709, 710, 719, 720, 721, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 742, 743, 744, 745, 746, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 762, 764, 766, 767, 768, 769, 776, 780, 781, 783, 784, 786, 788, 789, 791, 793, 794, 796, 802, 803, 805, 807, 809, 811, 813, 815, 817, 819, 821, 823, 827, 828, 830, 832, 833, 835, 838, 839, 841, 842, 844, 845, 847, 849, 850, 851, 856, 857, 860, 861, 862, 863, 864, 865, 867, 868, 869, 870, 881, 882, 883, 884, 885, 886, 887, 888, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 916, 917, 918, 923, 924, 925, 926, 929, 932, 938, 939, 940, 941, 942, 943, 945, 946, 947, 948, 949, 950, 951, 954, 955, 956, 957, 958, 961, 963, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 977, 978, 980, 981, 983, 985, 986, 987, 999, 1000, 1001, 1002, 1007, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1027, 1030, 1031, 1033, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1078, 1079, 1080, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1117, 1118, 1119, 1120, 1131, 1132, 1134, 1135, 1136, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1148, 1152, 1156, 1157, 1158, 1159, 1186], "\u2130": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 115, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 198, 199, 201, 202, 203, 204, 206, 208, 209, 216, 219, 222, 223, 224, 225, 229, 232, 235, 238, 240, 241, 245, 248, 251, 253, 256, 262, 266, 267, 268, 269, 270, 277, 278, 280, 287, 288, 289, 290, 291, 298, 299, 304, 305, 306, 309, 312, 313, 316, 317, 320, 321, 326, 327, 332, 342, 343, 344, 345, 346, 348, 357, 364, 365, 366, 367, 368, 369, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 433, 434, 435, 437, 438, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 457, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 503, 504, 511, 512, 513, 514, 515, 517, 518, 519, 525, 526, 527, 528, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 560, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 607, 609, 610, 617, 618, 619, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 647, 649, 651, 653, 654, 656, 657, 658, 659, 660, 662, 663, 666, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 681, 682, 683, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 703, 704, 709, 710, 719, 720, 721, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 742, 743, 744, 745, 746, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 762, 764, 766, 767, 768, 769, 776, 780, 781, 783, 784, 786, 788, 789, 791, 793, 794, 796, 802, 803, 805, 807, 809, 811, 813, 815, 817, 819, 821, 823, 827, 828, 830, 832, 833, 835, 838, 839, 841, 842, 844, 845, 847, 849, 850, 851, 856, 857, 860, 861, 862, 863, 864, 865, 867, 868, 869, 870, 881, 882, 883, 884, 885, 886, 887, 888, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 916, 917, 918, 923, 924, 925, 926, 929, 932, 938, 939, 940, 941, 942, 943, 945, 946, 947, 948, 949, 950, 951, 954, 955, 956, 957, 958, 961, 963, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 977, 978, 980, 981, 983, 985, 986, 987, 999, 1000, 1001, 1002, 1007, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1027, 1030, 1031, 1033, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1078, 1079, 1080, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1117, 1118, 1119, 1120, 1131, 1132, 1134, 1135, 1136, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1148, 1152, 1156, 1157, 1158, 1159, 1186], "\u2147": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 115, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 198, 199, 201, 202, 203, 204, 206, 208, 209, 216, 219, 222, 223, 224, 225, 229, 232, 235, 238, 240, 241, 245, 248, 251, 253, 256, 262, 266, 267, 268, 269, 270, 277, 278, 280, 287, 288, 289, 290, 291, 298, 299, 304, 305, 306, 309, 312, 313, 316, 317, 320, 321, 326, 327, 332, 342, 343, 344, 345, 346, 348, 357, 364, 365, 366, 367, 368, 369, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 433, 434, 435, 437, 438, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 457, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 503, 504, 511, 512, 513, 514, 515, 517, 518, 519, 525, 526, 527, 528, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 560, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 607, 609, 610, 617, 618, 619, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 647, 649, 651, 653, 654, 656, 657, 658, 659, 660, 662, 663, 666, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 681, 682, 683, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 703, 704, 709, 710, 719, 720, 721, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 742, 743, 744, 745, 746, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 762, 764, 766, 767, 768, 769, 776, 780, 781, 783, 784, 786, 788, 789, 791, 793, 794, 796, 802, 803, 805, 807, 809, 811, 813, 815, 817, 819, 821, 823, 827, 828, 830, 832, 833, 835, 838, 839, 841, 842, 844, 845, 847, 849, 850, 851, 856, 857, 860, 861, 862, 863, 864, 865, 867, 868, 869, 870, 881, 882, 883, 884, 885, 886, 887, 888, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 916, 917, 918, 923, 924, 925, 926, 929, 932, 938, 939, 940, 941, 942, 943, 945, 946, 947, 948, 949, 950, 951, 954, 955, 956, 957, 958, 961, 963, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 977, 978, 980, 981, 983, 985, 986, 987, 999, 1000, 1001, 1002, 1007, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1027, 1030, 1031, 1033, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1078, 1079, 1080, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1117, 1118, 1119, 1120, 1131, 1132, 1134, 1135, 1136, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1148, 1152, 1156, 1157, 1158, 1159, 1186], "\u2131": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 115, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 198, 199, 201, 202, 203, 204, 206, 208, 209, 216, 219, 222, 223, 224, 225, 229, 232, 235, 238, 240, 241, 245, 248, 251, 253, 256, 262, 266, 267, 268, 269, 270, 277, 278, 280, 287, 288, 289, 290, 291, 298, 299, 304, 305, 306, 309, 312, 313, 316, 317, 320, 321, 326, 327, 332, 342, 343, 344, 345, 346, 348, 357, 364, 365, 366, 367, 368, 369, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 433, 434, 435, 437, 438, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 457, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 503, 504, 511, 512, 513, 514, 515, 517, 518, 519, 525, 526, 527, 528, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 560, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 607, 609, 610, 617, 618, 619, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 647, 649, 651, 653, 654, 656, 657, 658, 659, 660, 662, 663, 666, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 681, 682, 683, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 703, 704, 709, 710, 719, 720, 721, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 742, 743, 744, 745, 746, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 762, 764, 766, 767, 768, 769, 776, 780, 781, 783, 784, 786, 788, 789, 791, 793, 794, 796, 802, 803, 805, 807, 809, 811, 813, 815, 817, 819, 821, 823, 827, 828, 830, 832, 833, 835, 838, 839, 841, 842, 844, 845, 847, 849, 850, 851, 856, 857, 860, 861, 862, 863, 864, 865, 867, 868, 869, 870, 881, 882, 883, 884, 885, 886, 887, 888, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 916, 917, 918, 923, 924, 925, 926, 929, 932, 938, 939, 940, 941, 942, 943, 945, 946, 947, 948, 949, 950, 951, 954, 955, 956, 957, 958, 961, 963, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 977, 978, 980, 981, 983, 985, 986, 987, 999, 1000, 1001, 1002, 1007, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1027, 1030, 1031, 1033, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1078, 1079, 1080, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1117, 1118, 1119, 1120, 1131, 1132, 1134, 1135, 1136, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1148, 1152, 1156, 1157, 1158, 1159, 1186], "\u02c7": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 115, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 198, 199, 201, 202, 203, 204, 206, 208, 209, 216, 219, 222, 223, 224, 225, 229, 232, 235, 238, 240, 241, 245, 248, 251, 253, 256, 262, 266, 267, 268, 269, 270, 277, 278, 280, 287, 288, 289, 290, 291, 298, 299, 304, 305, 306, 309, 312, 313, 316, 317, 320, 321, 326, 327, 332, 342, 343, 344, 345, 346, 348, 357, 364, 365, 366, 367, 368, 369, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 433, 434, 435, 437, 438, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 457, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 503, 504, 511, 512, 513, 514, 515, 517, 518, 519, 525, 526, 527, 528, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 560, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 607, 609, 610, 617, 618, 619, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 647, 649, 651, 653, 654, 656, 657, 658, 659, 660, 662, 663, 666, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 681, 682, 683, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 703, 704, 709, 710, 719, 720, 721, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 742, 743, 744, 745, 746, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 762, 764, 766, 767, 768, 769, 776, 780, 781, 783, 784, 786, 788, 789, 791, 793, 794, 796, 802, 803, 805, 807, 809, 811, 813, 815, 817, 819, 821, 823, 827, 828, 830, 832, 833, 835, 838, 839, 841, 842, 844, 845, 847, 849, 850, 851, 856, 857, 860, 861, 862, 863, 864, 865, 867, 868, 869, 870, 881, 882, 883, 884, 885, 886, 887, 888, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 916, 917, 918, 923, 924, 925, 926, 929, 932, 938, 939, 940, 941, 942, 943, 945, 946, 947, 948, 949, 950, 951, 954, 955, 956, 957, 958, 961, 963, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 977, 978, 980, 981, 983, 985, 986, 987, 999, 1000, 1001, 1002, 1007, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1027, 1030, 1031, 1033, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1078, 1079, 1080, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1117, 1118, 1119, 1120, 1131, 1132, 1134, 1135, 1136, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1148, 1152, 1156, 1157, 1158, 1159, 1186], "\u210f": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 115, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 198, 199, 201, 202, 203, 204, 206, 208, 209, 216, 219, 222, 223, 224, 225, 229, 232, 235, 238, 240, 241, 245, 248, 251, 253, 256, 262, 266, 267, 268, 269, 270, 277, 278, 280, 287, 288, 289, 290, 291, 298, 299, 304, 305, 306, 309, 312, 313, 316, 317, 320, 321, 326, 327, 332, 342, 343, 344, 345, 346, 348, 357, 364, 365, 366, 367, 368, 369, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 433, 434, 435, 437, 438, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 457, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 503, 504, 511, 512, 513, 514, 515, 517, 518, 519, 525, 526, 527, 528, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 560, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 607, 609, 610, 617, 618, 619, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 647, 649, 651, 653, 654, 656, 657, 658, 659, 660, 662, 663, 666, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 681, 682, 683, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 703, 704, 709, 710, 719, 720, 721, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 742, 743, 744, 745, 746, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 762, 764, 766, 767, 768, 769, 776, 780, 781, 783, 784, 786, 788, 789, 791, 793, 794, 796, 802, 803, 805, 807, 809, 811, 813, 815, 817, 819, 821, 823, 827, 828, 830, 832, 833, 835, 838, 839, 841, 842, 844, 845, 847, 849, 850, 851, 856, 857, 860, 861, 862, 863, 864, 865, 867, 868, 869, 870, 881, 882, 883, 884, 885, 886, 887, 888, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 916, 917, 918, 923, 924, 925, 926, 929, 932, 938, 939, 940, 941, 942, 943, 945, 946, 947, 948, 949, 950, 951, 954, 955, 956, 957, 958, 961, 963, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 977, 978, 980, 981, 983, 985, 986, 987, 999, 1000, 1001, 1002, 1007, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1027, 1030, 1031, 1033, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1078, 1079, 1080, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1117, 1118, 1119, 1120, 1131, 1132, 1134, 1135, 1136, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1148, 1152, 1156, 1157, 1158, 1159, 1186], "\u210b": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 115, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 198, 199, 201, 202, 203, 204, 206, 208, 209, 216, 219, 222, 223, 224, 225, 229, 232, 235, 238, 240, 241, 245, 248, 251, 253, 256, 262, 266, 267, 268, 269, 270, 277, 278, 280, 287, 288, 289, 290, 291, 298, 299, 304, 305, 306, 309, 312, 313, 316, 317, 320, 321, 326, 327, 332, 342, 343, 344, 345, 346, 348, 357, 364, 365, 366, 367, 368, 369, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 433, 434, 435, 437, 438, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 457, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 503, 504, 511, 512, 513, 514, 515, 517, 518, 519, 525, 526, 527, 528, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 560, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 607, 609, 610, 617, 618, 619, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 647, 649, 651, 653, 654, 656, 657, 658, 659, 660, 662, 663, 666, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 681, 682, 683, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 703, 704, 709, 710, 719, 720, 721, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 742, 743, 744, 745, 746, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 762, 764, 766, 767, 768, 769, 776, 780, 781, 783, 784, 786, 788, 789, 791, 793, 794, 796, 802, 803, 805, 807, 809, 811, 813, 815, 817, 819, 821, 823, 827, 828, 830, 832, 833, 835, 838, 839, 841, 842, 844, 845, 847, 849, 850, 851, 856, 857, 860, 861, 862, 863, 864, 865, 867, 868, 869, 870, 881, 882, 883, 884, 885, 886, 887, 888, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 916, 917, 918, 923, 924, 925, 926, 929, 932, 938, 939, 940, 941, 942, 943, 945, 946, 947, 948, 949, 950, 951, 954, 955, 956, 957, 958, 961, 963, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 977, 978, 980, 981, 983, 985, 986, 987, 999, 1000, 1001, 1002, 1007, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1027, 1030, 1031, 1033, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1078, 1079, 1080, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1117, 1118, 1119, 1120, 1131, 1132, 1134, 1135, 1136, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1148, 1152, 1156, 1157, 1158, 1159, 1186], "\u2111": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 115, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 198, 199, 201, 202, 203, 204, 206, 208, 209, 216, 219, 222, 223, 224, 225, 229, 232, 235, 238, 240, 241, 245, 248, 251, 253, 256, 262, 266, 267, 268, 269, 270, 277, 278, 280, 287, 288, 289, 290, 291, 298, 299, 304, 305, 306, 309, 312, 313, 316, 317, 320, 321, 326, 327, 332, 342, 343, 344, 345, 346, 348, 357, 364, 365, 366, 367, 368, 369, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 433, 434, 435, 437, 438, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 457, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 503, 504, 511, 512, 513, 514, 515, 517, 518, 519, 525, 526, 527, 528, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 560, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 607, 609, 610, 617, 618, 619, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 647, 649, 651, 653, 654, 656, 657, 658, 659, 660, 662, 663, 666, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 681, 682, 683, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 703, 704, 709, 710, 719, 720, 721, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 742, 743, 744, 745, 746, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 762, 764, 766, 767, 768, 769, 776, 780, 781, 783, 784, 786, 788, 789, 791, 793, 794, 796, 802, 803, 805, 807, 809, 811, 813, 815, 817, 819, 821, 823, 827, 828, 830, 832, 833, 835, 838, 839, 841, 842, 844, 845, 847, 849, 850, 851, 856, 857, 860, 861, 862, 863, 864, 865, 867, 868, 869, 870, 881, 882, 883, 884, 885, 886, 887, 888, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 916, 917, 918, 923, 924, 925, 926, 929, 932, 938, 939, 940, 941, 942, 943, 945, 946, 947, 948, 949, 950, 951, 954, 955, 956, 957, 958, 961, 963, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 977, 978, 980, 981, 983, 985, 986, 987, 999, 1000, 1001, 1002, 1007, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1027, 1030, 1031, 1033, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1078, 1079, 1080, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1117, 1118, 1119, 1120, 1131, 1132, 1134, 1135, 1136, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1148, 1152, 1156, 1157, 1158, 1159, 1186], "\u2148": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 115, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 198, 199, 201, 202, 203, 204, 206, 208, 209, 216, 219, 222, 223, 224, 225, 229, 232, 235, 238, 240, 241, 245, 248, 251, 253, 256, 262, 266, 267, 268, 269, 270, 277, 278, 280, 287, 288, 289, 290, 291, 298, 299, 304, 305, 306, 309, 312, 313, 316, 317, 320, 321, 326, 327, 332, 342, 343, 344, 345, 346, 348, 357, 364, 365, 366, 367, 368, 369, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 433, 434, 435, 437, 438, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 457, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 503, 504, 511, 512, 513, 514, 515, 517, 518, 519, 525, 526, 527, 528, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 560, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 607, 609, 610, 617, 618, 619, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 647, 649, 651, 653, 654, 656, 657, 658, 659, 660, 662, 663, 666, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 681, 682, 683, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 703, 704, 709, 710, 719, 720, 721, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 742, 743, 744, 745, 746, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 762, 764, 766, 767, 768, 769, 776, 780, 781, 783, 784, 786, 788, 789, 791, 793, 794, 796, 802, 803, 805, 807, 809, 811, 813, 815, 817, 819, 821, 823, 827, 828, 830, 832, 833, 835, 838, 839, 841, 842, 844, 845, 847, 849, 850, 851, 856, 857, 860, 861, 862, 863, 864, 865, 867, 868, 869, 870, 881, 882, 883, 884, 885, 886, 887, 888, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 916, 917, 918, 923, 924, 925, 926, 929, 932, 938, 939, 940, 941, 942, 943, 945, 946, 947, 948, 949, 950, 951, 954, 955, 956, 957, 958, 961, 963, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 977, 978, 980, 981, 983, 985, 986, 987, 999, 1000, 1001, 1002, 1007, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1027, 1030, 1031, 1033, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1078, 1079, 1080, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1117, 1118, 1119, 1120, 1131, 1132, 1134, 1135, 1136, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1148, 1152, 1156, 1157, 1158, 1159, 1186], "\u2110": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 115, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 198, 199, 201, 202, 203, 204, 206, 208, 209, 216, 219, 222, 223, 224, 225, 229, 232, 235, 238, 240, 241, 245, 248, 251, 253, 256, 262, 266, 267, 268, 269, 270, 277, 278, 280, 287, 288, 289, 290, 291, 298, 299, 304, 305, 306, 309, 312, 313, 316, 317, 320, 321, 326, 327, 332, 342, 343, 344, 345, 346, 348, 357, 364, 365, 366, 367, 368, 369, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 433, 434, 435, 437, 438, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 457, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 503, 504, 511, 512, 513, 514, 515, 517, 518, 519, 525, 526, 527, 528, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 560, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 607, 609, 610, 617, 618, 619, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 647, 649, 651, 653, 654, 656, 657, 658, 659, 660, 662, 663, 666, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 681, 682, 683, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 703, 704, 709, 710, 719, 720, 721, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 742, 743, 744, 745, 746, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 762, 764, 766, 767, 768, 769, 776, 780, 781, 783, 784, 786, 788, 789, 791, 793, 794, 796, 802, 803, 805, 807, 809, 811, 813, 815, 817, 819, 821, 823, 827, 828, 830, 832, 833, 835, 838, 839, 841, 842, 844, 845, 847, 849, 850, 851, 856, 857, 860, 861, 862, 863, 864, 865, 867, 868, 869, 870, 881, 882, 883, 884, 885, 886, 887, 888, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 916, 917, 918, 923, 924, 925, 926, 929, 932, 938, 939, 940, 941, 942, 943, 945, 946, 947, 948, 949, 950, 951, 954, 955, 956, 957, 958, 961, 963, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 977, 978, 980, 981, 983, 985, 986, 987, 999, 1000, 1001, 1002, 1007, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1027, 1030, 1031, 1033, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1078, 1079, 1080, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1117, 1118, 1119, 1120, 1131, 1132, 1134, 1135, 1136, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1148, 1152, 1156, 1157, 1158, 1159, 1186], "\u2124": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 115, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 198, 199, 201, 202, 203, 204, 206, 208, 209, 216, 219, 222, 223, 224, 225, 229, 232, 235, 238, 240, 241, 245, 248, 251, 253, 256, 262, 266, 267, 268, 269, 270, 277, 278, 280, 287, 288, 289, 290, 291, 298, 299, 304, 305, 306, 309, 312, 313, 316, 317, 320, 321, 326, 327, 332, 342, 343, 344, 345, 346, 348, 357, 364, 365, 366, 367, 368, 369, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 433, 434, 435, 437, 438, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 457, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 503, 504, 511, 512, 513, 514, 515, 517, 518, 519, 525, 526, 527, 528, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 560, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 607, 609, 610, 617, 618, 619, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 647, 649, 651, 653, 654, 656, 657, 658, 659, 660, 662, 663, 666, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 681, 682, 683, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 703, 704, 709, 710, 719, 720, 721, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 742, 743, 744, 745, 746, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 762, 764, 766, 767, 768, 769, 776, 780, 781, 783, 784, 786, 788, 789, 791, 793, 794, 796, 802, 803, 805, 807, 809, 811, 813, 815, 817, 819, 821, 823, 827, 828, 830, 832, 833, 835, 838, 839, 841, 842, 844, 845, 847, 849, 850, 851, 856, 857, 860, 861, 862, 863, 864, 865, 867, 868, 869, 870, 881, 882, 883, 884, 885, 886, 887, 888, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 916, 917, 918, 923, 924, 925, 926, 929, 932, 938, 939, 940, 941, 942, 943, 945, 946, 947, 948, 949, 950, 951, 954, 955, 956, 957, 958, 961, 963, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 977, 978, 980, 981, 983, 985, 986, 987, 999, 1000, 1001, 1002, 1007, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1027, 1030, 1031, 1033, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1078, 1079, 1080, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1117, 1118, 1119, 1120, 1131, 1132, 1134, 1135, 1136, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1148, 1152, 1156, 1157, 1158, 1159, 1186], "\u2112": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 115, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 198, 199, 201, 202, 203, 204, 206, 208, 209, 216, 219, 222, 223, 224, 225, 229, 232, 235, 238, 240, 241, 245, 248, 251, 253, 256, 262, 266, 267, 268, 269, 270, 277, 278, 280, 287, 288, 289, 290, 291, 298, 299, 304, 305, 306, 309, 312, 313, 316, 317, 320, 321, 326, 327, 332, 342, 343, 344, 345, 346, 348, 357, 364, 365, 366, 367, 368, 369, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 433, 434, 435, 437, 438, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 457, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 503, 504, 511, 512, 513, 514, 515, 517, 518, 519, 525, 526, 527, 528, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 560, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 607, 609, 610, 617, 618, 619, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 647, 649, 651, 653, 654, 656, 657, 658, 659, 660, 662, 663, 666, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 681, 682, 683, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 703, 704, 709, 710, 719, 720, 721, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 742, 743, 744, 745, 746, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 762, 764, 766, 767, 768, 769, 776, 780, 781, 783, 784, 786, 788, 789, 791, 793, 794, 796, 802, 803, 805, 807, 809, 811, 813, 815, 817, 819, 821, 823, 827, 828, 830, 832, 833, 835, 838, 839, 841, 842, 844, 845, 847, 849, 850, 851, 856, 857, 860, 861, 862, 863, 864, 865, 867, 868, 869, 870, 881, 882, 883, 884, 885, 886, 887, 888, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 916, 917, 918, 923, 924, 925, 926, 929, 932, 938, 939, 940, 941, 942, 943, 945, 946, 947, 948, 949, 950, 951, 954, 955, 956, 957, 958, 961, 963, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 977, 978, 980, 981, 983, 985, 986, 987, 999, 1000, 1001, 1002, 1007, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1027, 1030, 1031, 1033, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1078, 1079, 1080, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1117, 1118, 1119, 1120, 1131, 1132, 1134, 1135, 1136, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1148, 1152, 1156, 1157, 1158, 1159, 1186], "\u2133": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 115, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 198, 199, 201, 202, 203, 204, 206, 208, 209, 216, 219, 222, 223, 224, 225, 229, 232, 235, 238, 240, 241, 245, 248, 251, 253, 256, 262, 266, 267, 268, 269, 270, 277, 278, 280, 287, 288, 289, 290, 291, 298, 299, 304, 305, 306, 309, 312, 313, 316, 317, 320, 321, 326, 327, 332, 342, 343, 344, 345, 346, 348, 357, 364, 365, 366, 367, 368, 369, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 433, 434, 435, 437, 438, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 457, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 503, 504, 511, 512, 513, 514, 515, 517, 518, 519, 525, 526, 527, 528, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 560, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 607, 609, 610, 617, 618, 619, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 647, 649, 651, 653, 654, 656, 657, 658, 659, 660, 662, 663, 666, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 681, 682, 683, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 703, 704, 709, 710, 719, 720, 721, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 742, 743, 744, 745, 746, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 762, 764, 766, 767, 768, 769, 776, 780, 781, 783, 784, 786, 788, 789, 791, 793, 794, 796, 802, 803, 805, 807, 809, 811, 813, 815, 817, 819, 821, 823, 827, 828, 830, 832, 833, 835, 838, 839, 841, 842, 844, 845, 847, 849, 850, 851, 856, 857, 860, 861, 862, 863, 864, 865, 867, 868, 869, 870, 881, 882, 883, 884, 885, 886, 887, 888, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 916, 917, 918, 923, 924, 925, 926, 929, 932, 938, 939, 940, 941, 942, 943, 945, 946, 947, 948, 949, 950, 951, 954, 955, 956, 957, 958, 961, 963, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 977, 978, 980, 981, 983, 985, 986, 987, 999, 1000, 1001, 1002, 1007, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1027, 1030, 1031, 1033, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1078, 1079, 1080, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1117, 1118, 1119, 1120, 1131, 1132, 1134, 1135, 1136, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1148, 1152, 1156, 1157, 1158, 1159, 1186], "\u2115": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 115, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 198, 199, 201, 202, 203, 204, 206, 208, 209, 216, 219, 222, 223, 224, 225, 229, 232, 235, 238, 240, 241, 245, 248, 251, 253, 256, 262, 266, 267, 268, 269, 270, 277, 278, 280, 287, 288, 289, 290, 291, 298, 299, 304, 305, 306, 309, 312, 313, 316, 317, 320, 321, 326, 327, 332, 342, 343, 344, 345, 346, 348, 357, 364, 365, 366, 367, 368, 369, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 433, 434, 435, 437, 438, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 457, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 503, 504, 511, 512, 513, 514, 515, 517, 518, 519, 525, 526, 527, 528, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 560, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 607, 609, 610, 617, 618, 619, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 647, 649, 651, 653, 654, 656, 657, 658, 659, 660, 662, 663, 666, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 681, 682, 683, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 703, 704, 709, 710, 719, 720, 721, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 742, 743, 744, 745, 746, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 762, 764, 766, 767, 768, 769, 776, 780, 781, 783, 784, 786, 788, 789, 791, 793, 794, 796, 802, 803, 805, 807, 809, 811, 813, 815, 817, 819, 821, 823, 827, 828, 830, 832, 833, 835, 838, 839, 841, 842, 844, 845, 847, 849, 850, 851, 856, 857, 860, 861, 862, 863, 864, 865, 867, 868, 869, 870, 881, 882, 883, 884, 885, 886, 887, 888, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 916, 917, 918, 923, 924, 925, 926, 929, 932, 938, 939, 940, 941, 942, 943, 945, 946, 947, 948, 949, 950, 951, 954, 955, 956, 957, 958, 961, 963, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 977, 978, 980, 981, 983, 985, 986, 987, 999, 1000, 1001, 1002, 1007, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1027, 1030, 1031, 1033, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1078, 1079, 1080, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1117, 1118, 1119, 1120, 1131, 1132, 1134, 1135, 1136, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1148, 1152, 1156, 1157, 1158, 1159, 1186], "\u2134": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 115, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 198, 199, 201, 202, 203, 204, 206, 208, 209, 216, 219, 222, 223, 224, 225, 229, 232, 235, 238, 240, 241, 245, 248, 251, 253, 256, 262, 266, 267, 268, 269, 270, 277, 278, 280, 287, 288, 289, 290, 291, 298, 299, 304, 305, 306, 309, 312, 313, 316, 317, 320, 321, 326, 327, 332, 342, 343, 344, 345, 346, 348, 357, 364, 365, 366, 367, 368, 369, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 433, 434, 435, 437, 438, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 457, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 503, 504, 511, 512, 513, 514, 515, 517, 518, 519, 525, 526, 527, 528, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 560, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 607, 609, 610, 617, 618, 619, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 647, 649, 651, 653, 654, 656, 657, 658, 659, 660, 662, 663, 666, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 681, 682, 683, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 703, 704, 709, 710, 719, 720, 721, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 742, 743, 744, 745, 746, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 762, 764, 766, 767, 768, 769, 776, 780, 781, 783, 784, 786, 788, 789, 791, 793, 794, 796, 802, 803, 805, 807, 809, 811, 813, 815, 817, 819, 821, 823, 827, 828, 830, 832, 833, 835, 838, 839, 841, 842, 844, 845, 847, 849, 850, 851, 856, 857, 860, 861, 862, 863, 864, 865, 867, 868, 869, 870, 881, 882, 883, 884, 885, 886, 887, 888, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 916, 917, 918, 923, 924, 925, 926, 929, 932, 938, 939, 940, 941, 942, 943, 945, 946, 947, 948, 949, 950, 951, 954, 955, 956, 957, 958, 961, 963, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 977, 978, 980, 981, 983, 985, 986, 987, 999, 1000, 1001, 1002, 1007, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1027, 1030, 1031, 1033, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1078, 1079, 1080, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1117, 1118, 1119, 1120, 1131, 1132, 1134, 1135, 1136, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1148, 1152, 1156, 1157, 1158, 1159, 1186], "\u210c": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 115, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 198, 199, 201, 202, 203, 204, 206, 208, 209, 216, 219, 222, 223, 224, 225, 229, 232, 235, 238, 240, 241, 245, 248, 251, 253, 256, 262, 266, 267, 268, 269, 270, 277, 278, 280, 287, 288, 289, 290, 291, 298, 299, 304, 305, 306, 309, 312, 313, 316, 317, 320, 321, 326, 327, 332, 342, 343, 344, 345, 346, 348, 357, 364, 365, 366, 367, 368, 369, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 433, 434, 435, 437, 438, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 457, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 503, 504, 511, 512, 513, 514, 515, 517, 518, 519, 525, 526, 527, 528, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 560, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 607, 609, 610, 617, 618, 619, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 647, 649, 651, 653, 654, 656, 657, 658, 659, 660, 662, 663, 666, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 681, 682, 683, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 703, 704, 709, 710, 719, 720, 721, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 742, 743, 744, 745, 746, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 762, 764, 766, 767, 768, 769, 776, 780, 781, 783, 784, 786, 788, 789, 791, 793, 794, 796, 802, 803, 805, 807, 809, 811, 813, 815, 817, 819, 821, 823, 827, 828, 830, 832, 833, 835, 838, 839, 841, 842, 844, 845, 847, 849, 850, 851, 856, 857, 860, 861, 862, 863, 864, 865, 867, 868, 869, 870, 881, 882, 883, 884, 885, 886, 887, 888, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 916, 917, 918, 923, 924, 925, 926, 929, 932, 938, 939, 940, 941, 942, 943, 945, 946, 947, 948, 949, 950, 951, 954, 955, 956, 957, 958, 961, 963, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 977, 978, 980, 981, 983, 985, 986, 987, 999, 1000, 1001, 1002, 1007, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1027, 1030, 1031, 1033, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1078, 1079, 1080, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1117, 1118, 1119, 1120, 1131, 1132, 1134, 1135, 1136, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1148, 1152, 1156, 1157, 1158, 1159, 1186], "\u2119": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 115, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 198, 199, 201, 202, 203, 204, 206, 208, 209, 216, 219, 222, 223, 224, 225, 229, 232, 235, 238, 240, 241, 245, 248, 251, 253, 256, 262, 266, 267, 268, 269, 270, 277, 278, 280, 287, 288, 289, 290, 291, 298, 299, 304, 305, 306, 309, 312, 313, 316, 317, 320, 321, 326, 327, 332, 342, 343, 344, 345, 346, 348, 357, 364, 365, 366, 367, 368, 369, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 433, 434, 435, 437, 438, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 457, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 503, 504, 511, 512, 513, 514, 515, 517, 518, 519, 525, 526, 527, 528, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 560, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 607, 609, 610, 617, 618, 619, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 647, 649, 651, 653, 654, 656, 657, 658, 659, 660, 662, 663, 666, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 681, 682, 683, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 703, 704, 709, 710, 719, 720, 721, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 742, 743, 744, 745, 746, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 762, 764, 766, 767, 768, 769, 776, 780, 781, 783, 784, 786, 788, 789, 791, 793, 794, 796, 802, 803, 805, 807, 809, 811, 813, 815, 817, 819, 821, 823, 827, 828, 830, 832, 833, 835, 838, 839, 841, 842, 844, 845, 847, 849, 850, 851, 856, 857, 860, 861, 862, 863, 864, 865, 867, 868, 869, 870, 881, 882, 883, 884, 885, 886, 887, 888, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 916, 917, 918, 923, 924, 925, 926, 929, 932, 938, 939, 940, 941, 942, 943, 945, 946, 947, 948, 949, 950, 951, 954, 955, 956, 957, 958, 961, 963, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 977, 978, 980, 981, 983, 985, 986, 987, 999, 1000, 1001, 1002, 1007, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1027, 1030, 1031, 1033, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1078, 1079, 1080, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1117, 1118, 1119, 1120, 1131, 1132, 1134, 1135, 1136, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1148, 1152, 1156, 1157, 1158, 1159, 1186], "\u210d": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 115, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 198, 199, 201, 202, 203, 204, 206, 208, 209, 216, 219, 222, 223, 224, 225, 229, 232, 235, 238, 240, 241, 245, 248, 251, 253, 256, 262, 266, 267, 268, 269, 270, 277, 278, 280, 287, 288, 289, 290, 291, 298, 299, 304, 305, 306, 309, 312, 313, 316, 317, 320, 321, 326, 327, 332, 342, 343, 344, 345, 346, 348, 357, 364, 365, 366, 367, 368, 369, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 433, 434, 435, 437, 438, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 457, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 503, 504, 511, 512, 513, 514, 515, 517, 518, 519, 525, 526, 527, 528, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 560, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 607, 609, 610, 617, 618, 619, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 647, 649, 651, 653, 654, 656, 657, 658, 659, 660, 662, 663, 666, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 681, 682, 683, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 703, 704, 709, 710, 719, 720, 721, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 742, 743, 744, 745, 746, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 762, 764, 766, 767, 768, 769, 776, 780, 781, 783, 784, 786, 788, 789, 791, 793, 794, 796, 802, 803, 805, 807, 809, 811, 813, 815, 817, 819, 821, 823, 827, 828, 830, 832, 833, 835, 838, 839, 841, 842, 844, 845, 847, 849, 850, 851, 856, 857, 860, 861, 862, 863, 864, 865, 867, 868, 869, 870, 881, 882, 883, 884, 885, 886, 887, 888, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 916, 917, 918, 923, 924, 925, 926, 929, 932, 938, 939, 940, 941, 942, 943, 945, 946, 947, 948, 949, 950, 951, 954, 955, 956, 957, 958, 961, 963, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 977, 978, 980, 981, 983, 985, 986, 987, 999, 1000, 1001, 1002, 1007, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1027, 1030, 1031, 1033, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1078, 1079, 1080, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1117, 1118, 1119, 1120, 1131, 1132, 1134, 1135, 1136, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1148, 1152, 1156, 1157, 1158, 1159, 1186], "\u211a": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 115, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 198, 199, 201, 202, 203, 204, 206, 208, 209, 216, 219, 222, 223, 224, 225, 229, 232, 235, 238, 240, 241, 245, 248, 251, 253, 256, 262, 266, 267, 268, 269, 270, 277, 278, 280, 287, 288, 289, 290, 291, 298, 299, 304, 305, 306, 309, 312, 313, 316, 317, 320, 321, 326, 327, 332, 342, 343, 344, 345, 346, 348, 357, 364, 365, 366, 367, 368, 369, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 433, 434, 435, 437, 438, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 457, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 503, 504, 511, 512, 513, 514, 515, 517, 518, 519, 525, 526, 527, 528, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 560, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 607, 609, 610, 617, 618, 619, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 647, 649, 651, 653, 654, 656, 657, 658, 659, 660, 662, 663, 666, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 681, 682, 683, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 703, 704, 709, 710, 719, 720, 721, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 742, 743, 744, 745, 746, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 762, 764, 766, 767, 768, 769, 776, 780, 781, 783, 784, 786, 788, 789, 791, 793, 794, 796, 802, 803, 805, 807, 809, 811, 813, 815, 817, 819, 821, 823, 827, 828, 830, 832, 833, 835, 838, 839, 841, 842, 844, 845, 847, 849, 850, 851, 856, 857, 860, 861, 862, 863, 864, 865, 867, 868, 869, 870, 881, 882, 883, 884, 885, 886, 887, 888, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 916, 917, 918, 923, 924, 925, 926, 929, 932, 938, 939, 940, 941, 942, 943, 945, 946, 947, 948, 949, 950, 951, 954, 955, 956, 957, 958, 961, 963, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 977, 978, 980, 981, 983, 985, 986, 987, 999, 1000, 1001, 1002, 1007, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1027, 1030, 1031, 1033, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1078, 1079, 1080, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1117, 1118, 1119, 1120, 1131, 1132, 1134, 1135, 1136, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1148, 1152, 1156, 1157, 1158, 1159, 1186], "\u211c": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 115, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 198, 199, 201, 202, 203, 204, 206, 208, 209, 216, 219, 222, 223, 224, 225, 229, 232, 235, 238, 240, 241, 245, 248, 251, 253, 256, 262, 266, 267, 268, 269, 270, 277, 278, 280, 287, 288, 289, 290, 291, 298, 299, 304, 305, 306, 309, 312, 313, 316, 317, 320, 321, 326, 327, 332, 342, 343, 344, 345, 346, 348, 357, 364, 365, 366, 367, 368, 369, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 433, 434, 435, 437, 438, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 457, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 503, 504, 511, 512, 513, 514, 515, 517, 518, 519, 525, 526, 527, 528, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 560, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 607, 609, 610, 617, 618, 619, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 647, 649, 651, 653, 654, 656, 657, 658, 659, 660, 662, 663, 666, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 681, 682, 683, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 703, 704, 709, 710, 719, 720, 721, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 742, 743, 744, 745, 746, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 762, 764, 766, 767, 768, 769, 776, 780, 781, 783, 784, 786, 788, 789, 791, 793, 794, 796, 802, 803, 805, 807, 809, 811, 813, 815, 817, 819, 821, 823, 827, 828, 830, 832, 833, 835, 838, 839, 841, 842, 844, 845, 847, 849, 850, 851, 856, 857, 860, 861, 862, 863, 864, 865, 867, 868, 869, 870, 881, 882, 883, 884, 885, 886, 887, 888, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 916, 917, 918, 923, 924, 925, 926, 929, 932, 938, 939, 940, 941, 942, 943, 945, 946, 947, 948, 949, 950, 951, 954, 955, 956, 957, 958, 961, 963, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 977, 978, 980, 981, 983, 985, 986, 987, 999, 1000, 1001, 1002, 1007, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1027, 1030, 1031, 1033, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1078, 1079, 1080, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1117, 1118, 1119, 1120, 1131, 1132, 1134, 1135, 1136, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1148, 1152, 1156, 1157, 1158, 1159, 1186], "\u211b": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 115, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 198, 199, 201, 202, 203, 204, 206, 208, 209, 216, 219, 222, 223, 224, 225, 229, 232, 235, 238, 240, 241, 245, 248, 251, 253, 256, 262, 266, 267, 268, 269, 270, 277, 278, 280, 287, 288, 289, 290, 291, 298, 299, 304, 305, 306, 309, 312, 313, 316, 317, 320, 321, 326, 327, 332, 342, 343, 344, 345, 346, 348, 357, 364, 365, 366, 367, 368, 369, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 433, 434, 435, 437, 438, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 457, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 503, 504, 511, 512, 513, 514, 515, 517, 518, 519, 525, 526, 527, 528, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 560, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 607, 609, 610, 617, 618, 619, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 647, 649, 651, 653, 654, 656, 657, 658, 659, 660, 662, 663, 666, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 681, 682, 683, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 703, 704, 709, 710, 719, 720, 721, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 742, 743, 744, 745, 746, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 762, 764, 766, 767, 768, 769, 776, 780, 781, 783, 784, 786, 788, 789, 791, 793, 794, 796, 802, 803, 805, 807, 809, 811, 813, 815, 817, 819, 821, 823, 827, 828, 830, 832, 833, 835, 838, 839, 841, 842, 844, 845, 847, 849, 850, 851, 856, 857, 860, 861, 862, 863, 864, 865, 867, 868, 869, 870, 881, 882, 883, 884, 885, 886, 887, 888, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 916, 917, 918, 923, 924, 925, 926, 929, 932, 938, 939, 940, 941, 942, 943, 945, 946, 947, 948, 949, 950, 951, 954, 955, 956, 957, 958, 961, 963, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 977, 978, 980, 981, 983, 985, 986, 987, 999, 1000, 1001, 1002, 1007, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1027, 1030, 1031, 1033, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1078, 1079, 1080, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1117, 1118, 1119, 1120, 1131, 1132, 1134, 1135, 1136, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1148, 1152, 1156, 1157, 1158, 1159, 1186], "\u211d": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 115, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 198, 199, 201, 202, 203, 204, 206, 208, 209, 216, 219, 222, 223, 224, 225, 229, 232, 235, 238, 240, 241, 245, 248, 251, 253, 256, 262, 266, 267, 268, 269, 270, 277, 278, 280, 287, 288, 289, 290, 291, 298, 299, 304, 305, 306, 309, 312, 313, 316, 317, 320, 321, 326, 327, 332, 342, 343, 344, 345, 346, 348, 357, 364, 365, 366, 367, 368, 369, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 433, 434, 435, 437, 438, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 457, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 503, 504, 511, 512, 513, 514, 515, 517, 518, 519, 525, 526, 527, 528, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 560, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 607, 609, 610, 617, 618, 619, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 647, 649, 651, 653, 654, 656, 657, 658, 659, 660, 662, 663, 666, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 681, 682, 683, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 703, 704, 709, 710, 719, 720, 721, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 742, 743, 744, 745, 746, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 762, 764, 766, 767, 768, 769, 776, 780, 781, 783, 784, 786, 788, 789, 791, 793, 794, 796, 802, 803, 805, 807, 809, 811, 813, 815, 817, 819, 821, 823, 827, 828, 830, 832, 833, 835, 838, 839, 841, 842, 844, 845, 847, 849, 850, 851, 856, 857, 860, 861, 862, 863, 864, 865, 867, 868, 869, 870, 881, 882, 883, 884, 885, 886, 887, 888, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 916, 917, 918, 923, 924, 925, 926, 929, 932, 938, 939, 940, 941, 942, 943, 945, 946, 947, 948, 949, 950, 951, 954, 955, 956, 957, 958, 961, 963, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 977, 978, 980, 981, 983, 985, 986, 987, 999, 1000, 1001, 1002, 1007, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1027, 1030, 1031, 1033, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1078, 1079, 1080, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1117, 1118, 1119, 1120, 1131, 1132, 1134, 1135, 1136, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1148, 1152, 1156, 1157, 1158, 1159, 1186], "\u03f5": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 115, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 198, 199, 201, 202, 203, 204, 206, 208, 209, 216, 219, 222, 223, 224, 225, 229, 232, 235, 238, 240, 241, 245, 248, 251, 253, 256, 262, 266, 267, 268, 269, 270, 277, 278, 280, 287, 288, 289, 290, 291, 298, 299, 304, 305, 306, 309, 312, 313, 316, 317, 320, 321, 326, 327, 332, 342, 343, 344, 345, 346, 348, 357, 364, 365, 366, 367, 368, 369, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 433, 434, 435, 437, 438, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 457, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 503, 504, 511, 512, 513, 514, 515, 517, 518, 519, 525, 526, 527, 528, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 560, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 607, 609, 610, 617, 618, 619, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 647, 649, 651, 653, 654, 656, 657, 658, 659, 660, 662, 663, 666, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 681, 682, 683, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 703, 704, 709, 710, 719, 720, 721, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 742, 743, 744, 745, 746, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 762, 764, 766, 767, 768, 769, 776, 780, 781, 783, 784, 786, 788, 789, 791, 793, 794, 796, 802, 803, 805, 807, 809, 811, 813, 815, 817, 819, 821, 823, 827, 828, 830, 832, 833, 835, 838, 839, 841, 842, 844, 845, 847, 849, 850, 851, 856, 857, 860, 861, 862, 863, 864, 865, 867, 868, 869, 870, 881, 882, 883, 884, 885, 886, 887, 888, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 916, 917, 918, 923, 924, 925, 926, 929, 932, 938, 939, 940, 941, 942, 943, 945, 946, 947, 948, 949, 950, 951, 954, 955, 956, 957, 958, 961, 963, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 977, 978, 980, 981, 983, 985, 986, 987, 999, 1000, 1001, 1002, 1007, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1027, 1030, 1031, 1033, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1078, 1079, 1080, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1117, 1118, 1119, 1120, 1131, 1132, 1134, 1135, 1136, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1148, 1152, 1156, 1157, 1158, 1159, 1186], "\u03d5": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 115, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 198, 199, 201, 202, 203, 204, 206, 208, 209, 216, 219, 222, 223, 224, 225, 229, 232, 235, 238, 240, 241, 245, 248, 251, 253, 256, 262, 266, 267, 268, 269, 270, 277, 278, 280, 287, 288, 289, 290, 291, 298, 299, 304, 305, 306, 309, 312, 313, 316, 317, 320, 321, 326, 327, 332, 342, 343, 344, 345, 346, 348, 357, 364, 365, 366, 367, 368, 369, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 433, 434, 435, 437, 438, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 457, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 503, 504, 511, 512, 513, 514, 515, 517, 518, 519, 525, 526, 527, 528, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 560, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 607, 609, 610, 617, 618, 619, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 647, 649, 651, 653, 654, 656, 657, 658, 659, 660, 662, 663, 666, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 681, 682, 683, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 703, 704, 709, 710, 719, 720, 721, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 742, 743, 744, 745, 746, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 762, 764, 766, 767, 768, 769, 776, 780, 781, 783, 784, 786, 788, 789, 791, 793, 794, 796, 802, 803, 805, 807, 809, 811, 813, 815, 817, 819, 821, 823, 827, 828, 830, 832, 833, 835, 838, 839, 841, 842, 844, 845, 847, 849, 850, 851, 856, 857, 860, 861, 862, 863, 864, 865, 867, 868, 869, 870, 881, 882, 883, 884, 885, 886, 887, 888, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 916, 917, 918, 923, 924, 925, 926, 929, 932, 938, 939, 940, 941, 942, 943, 945, 946, 947, 948, 949, 950, 951, 954, 955, 956, 957, 958, 961, 963, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 977, 978, 980, 981, 983, 985, 986, 987, 999, 1000, 1001, 1002, 1007, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1027, 1030, 1031, 1033, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1078, 1079, 1080, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1117, 1118, 1119, 1120, 1131, 1132, 1134, 1135, 1136, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1148, 1152, 1156, 1157, 1158, 1159, 1186], "\u03c5": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 115, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 198, 199, 201, 202, 203, 204, 206, 208, 209, 216, 219, 222, 223, 224, 225, 229, 232, 235, 238, 240, 241, 245, 248, 251, 253, 256, 262, 266, 267, 268, 269, 270, 277, 278, 280, 287, 288, 289, 290, 291, 298, 299, 304, 305, 306, 309, 312, 313, 316, 317, 320, 321, 326, 327, 332, 342, 343, 344, 345, 346, 348, 357, 364, 365, 366, 367, 368, 369, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 433, 434, 435, 437, 438, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 457, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 503, 504, 511, 512, 513, 514, 515, 517, 518, 519, 525, 526, 527, 528, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 560, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 607, 609, 610, 617, 618, 619, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 647, 649, 651, 653, 654, 656, 657, 658, 659, 660, 662, 663, 666, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 681, 682, 683, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 703, 704, 709, 710, 719, 720, 721, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 742, 743, 744, 745, 746, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 762, 764, 766, 767, 768, 769, 776, 780, 781, 783, 784, 786, 788, 789, 791, 793, 794, 796, 802, 803, 805, 807, 809, 811, 813, 815, 817, 819, 821, 823, 827, 828, 830, 832, 833, 835, 838, 839, 841, 842, 844, 845, 847, 849, 850, 851, 856, 857, 860, 861, 862, 863, 864, 865, 867, 868, 869, 870, 881, 882, 883, 884, 885, 886, 887, 888, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 916, 917, 918, 923, 924, 925, 926, 929, 932, 938, 939, 940, 941, 942, 943, 945, 946, 947, 948, 949, 950, 951, 954, 955, 956, 957, 958, 961, 963, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 977, 978, 980, 981, 983, 985, 986, 987, 999, 1000, 1001, 1002, 1007, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1027, 1030, 1031, 1033, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1078, 1079, 1080, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1117, 1118, 1119, 1120, 1131, 1132, 1134, 1135, 1136, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1148, 1152, 1156, 1157, 1158, 1159, 1186], "\u03b5": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 115, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 198, 199, 201, 202, 203, 204, 206, 208, 209, 216, 219, 222, 223, 224, 225, 229, 232, 235, 238, 240, 241, 245, 248, 251, 253, 256, 262, 266, 267, 268, 269, 270, 277, 278, 280, 287, 288, 289, 290, 291, 298, 299, 304, 305, 306, 309, 312, 313, 316, 317, 320, 321, 326, 327, 332, 342, 343, 344, 345, 346, 348, 357, 364, 365, 366, 367, 368, 369, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 433, 434, 435, 437, 438, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 457, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 503, 504, 511, 512, 513, 514, 515, 517, 518, 519, 525, 526, 527, 528, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 560, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 607, 609, 610, 617, 618, 619, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 647, 649, 651, 653, 654, 656, 657, 658, 659, 660, 662, 663, 666, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 681, 682, 683, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 703, 704, 709, 710, 719, 720, 721, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 742, 743, 744, 745, 746, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 762, 764, 766, 767, 768, 769, 776, 780, 781, 783, 784, 786, 788, 789, 791, 793, 794, 796, 802, 803, 805, 807, 809, 811, 813, 815, 817, 819, 821, 823, 827, 828, 830, 832, 833, 835, 838, 839, 841, 842, 844, 845, 847, 849, 850, 851, 856, 857, 860, 861, 862, 863, 864, 865, 867, 868, 869, 870, 881, 882, 883, 884, 885, 886, 887, 888, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 916, 917, 918, 923, 924, 925, 926, 929, 932, 938, 939, 940, 941, 942, 943, 945, 946, 947, 948, 949, 950, 951, 954, 955, 956, 957, 958, 961, 963, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 977, 978, 980, 981, 983, 985, 986, 987, 999, 1000, 1001, 1002, 1007, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1027, 1030, 1031, 1033, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1078, 1079, 1080, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1117, 1118, 1119, 1120, 1131, 1132, 1134, 1135, 1136, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1148, 1152, 1156, 1157, 1158, 1159, 1186], "\u03f0": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 115, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 198, 199, 201, 202, 203, 204, 206, 208, 209, 216, 219, 222, 223, 224, 225, 229, 232, 235, 238, 240, 241, 245, 248, 251, 253, 256, 262, 266, 267, 268, 269, 270, 277, 278, 280, 287, 288, 289, 290, 291, 298, 299, 304, 305, 306, 309, 312, 313, 316, 317, 320, 321, 326, 327, 332, 342, 343, 344, 345, 346, 348, 357, 364, 365, 366, 367, 368, 369, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 433, 434, 435, 437, 438, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 457, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 503, 504, 511, 512, 513, 514, 515, 517, 518, 519, 525, 526, 527, 528, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 560, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 607, 609, 610, 617, 618, 619, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 647, 649, 651, 653, 654, 656, 657, 658, 659, 660, 662, 663, 666, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 681, 682, 683, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 703, 704, 709, 710, 719, 720, 721, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 742, 743, 744, 745, 746, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 762, 764, 766, 767, 768, 769, 776, 780, 781, 783, 784, 786, 788, 789, 791, 793, 794, 796, 802, 803, 805, 807, 809, 811, 813, 815, 817, 819, 821, 823, 827, 828, 830, 832, 833, 835, 838, 839, 841, 842, 844, 845, 847, 849, 850, 851, 856, 857, 860, 861, 862, 863, 864, 865, 867, 868, 869, 870, 881, 882, 883, 884, 885, 886, 887, 888, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 916, 917, 918, 923, 924, 925, 926, 929, 932, 938, 939, 940, 941, 942, 943, 945, 946, 947, 948, 949, 950, 951, 954, 955, 956, 957, 958, 961, 963, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 977, 978, 980, 981, 983, 985, 986, 987, 999, 1000, 1001, 1002, 1007, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1027, 1030, 1031, 1033, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1078, 1079, 1080, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1117, 1118, 1119, 1120, 1131, 1132, 1134, 1135, 1136, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1148, 1152, 1156, 1157, 1158, 1159, 1186], "\u03c6": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 115, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 198, 199, 201, 202, 203, 204, 206, 208, 209, 216, 219, 222, 223, 224, 225, 229, 232, 235, 238, 240, 241, 245, 248, 251, 253, 256, 262, 266, 267, 268, 269, 270, 277, 278, 280, 287, 288, 289, 290, 291, 298, 299, 304, 305, 306, 309, 312, 313, 316, 317, 320, 321, 326, 327, 332, 342, 343, 344, 345, 346, 348, 357, 364, 365, 366, 367, 368, 369, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 433, 434, 435, 437, 438, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 457, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 503, 504, 511, 512, 513, 514, 515, 517, 518, 519, 525, 526, 527, 528, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 560, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 607, 609, 610, 617, 618, 619, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 647, 649, 651, 653, 654, 656, 657, 658, 659, 660, 662, 663, 666, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 681, 682, 683, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 703, 704, 709, 710, 719, 720, 721, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 742, 743, 744, 745, 746, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 762, 764, 766, 767, 768, 769, 776, 780, 781, 783, 784, 786, 788, 789, 791, 793, 794, 796, 802, 803, 805, 807, 809, 811, 813, 815, 817, 819, 821, 823, 827, 828, 830, 832, 833, 835, 838, 839, 841, 842, 844, 845, 847, 849, 850, 851, 856, 857, 860, 861, 862, 863, 864, 865, 867, 868, 869, 870, 881, 882, 883, 884, 885, 886, 887, 888, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 916, 917, 918, 923, 924, 925, 926, 929, 932, 938, 939, 940, 941, 942, 943, 945, 946, 947, 948, 949, 950, 951, 954, 955, 956, 957, 958, 961, 963, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 977, 978, 980, 981, 983, 985, 986, 987, 999, 1000, 1001, 1002, 1007, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1027, 1030, 1031, 1033, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1078, 1079, 1080, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1117, 1118, 1119, 1120, 1131, 1132, 1134, 1135, 1136, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1148, 1152, 1156, 1157, 1158, 1159, 1186], "\u03d6": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 115, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 198, 199, 201, 202, 203, 204, 206, 208, 209, 216, 219, 222, 223, 224, 225, 229, 232, 235, 238, 240, 241, 245, 248, 251, 253, 256, 262, 266, 267, 268, 269, 270, 277, 278, 280, 287, 288, 289, 290, 291, 298, 299, 304, 305, 306, 309, 312, 313, 316, 317, 320, 321, 326, 327, 332, 342, 343, 344, 345, 346, 348, 357, 364, 365, 366, 367, 368, 369, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 433, 434, 435, 437, 438, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 457, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 503, 504, 511, 512, 513, 514, 515, 517, 518, 519, 525, 526, 527, 528, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 560, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 607, 609, 610, 617, 618, 619, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 647, 649, 651, 653, 654, 656, 657, 658, 659, 660, 662, 663, 666, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 681, 682, 683, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 703, 704, 709, 710, 719, 720, 721, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 742, 743, 744, 745, 746, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 762, 764, 766, 767, 768, 769, 776, 780, 781, 783, 784, 786, 788, 789, 791, 793, 794, 796, 802, 803, 805, 807, 809, 811, 813, 815, 817, 819, 821, 823, 827, 828, 830, 832, 833, 835, 838, 839, 841, 842, 844, 845, 847, 849, 850, 851, 856, 857, 860, 861, 862, 863, 864, 865, 867, 868, 869, 870, 881, 882, 883, 884, 885, 886, 887, 888, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 916, 917, 918, 923, 924, 925, 926, 929, 932, 938, 939, 940, 941, 942, 943, 945, 946, 947, 948, 949, 950, 951, 954, 955, 956, 957, 958, 961, 963, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 977, 978, 980, 981, 983, 985, 986, 987, 999, 1000, 1001, 1002, 1007, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1027, 1030, 1031, 1033, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1078, 1079, 1080, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1117, 1118, 1119, 1120, 1131, 1132, 1134, 1135, 1136, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1148, 1152, 1156, 1157, 1158, 1159, 1186], "\u03f1": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 115, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 198, 199, 201, 202, 203, 204, 206, 208, 209, 216, 219, 222, 223, 224, 225, 229, 232, 235, 238, 240, 241, 245, 248, 251, 253, 256, 262, 266, 267, 268, 269, 270, 277, 278, 280, 287, 288, 289, 290, 291, 298, 299, 304, 305, 306, 309, 312, 313, 316, 317, 320, 321, 326, 327, 332, 342, 343, 344, 345, 346, 348, 357, 364, 365, 366, 367, 368, 369, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 433, 434, 435, 437, 438, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 457, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 503, 504, 511, 512, 513, 514, 515, 517, 518, 519, 525, 526, 527, 528, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 560, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 607, 609, 610, 617, 618, 619, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 647, 649, 651, 653, 654, 656, 657, 658, 659, 660, 662, 663, 666, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 681, 682, 683, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 703, 704, 709, 710, 719, 720, 721, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 742, 743, 744, 745, 746, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 762, 764, 766, 767, 768, 769, 776, 780, 781, 783, 784, 786, 788, 789, 791, 793, 794, 796, 802, 803, 805, 807, 809, 811, 813, 815, 817, 819, 821, 823, 827, 828, 830, 832, 833, 835, 838, 839, 841, 842, 844, 845, 847, 849, 850, 851, 856, 857, 860, 861, 862, 863, 864, 865, 867, 868, 869, 870, 881, 882, 883, 884, 885, 886, 887, 888, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 916, 917, 918, 923, 924, 925, 926, 929, 932, 938, 939, 940, 941, 942, 943, 945, 946, 947, 948, 949, 950, 951, 954, 955, 956, 957, 958, 961, 963, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 977, 978, 980, 981, 983, 985, 986, 987, 999, 1000, 1001, 1002, 1007, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1027, 1030, 1031, 1033, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1078, 1079, 1080, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1117, 1118, 1119, 1120, 1131, 1132, 1134, 1135, 1136, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1148, 1152, 1156, 1157, 1158, 1159, 1186], "\u03c2": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 115, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 198, 199, 201, 202, 203, 204, 206, 208, 209, 216, 219, 222, 223, 224, 225, 229, 232, 235, 238, 240, 241, 245, 248, 251, 253, 256, 262, 266, 267, 268, 269, 270, 277, 278, 280, 287, 288, 289, 290, 291, 298, 299, 304, 305, 306, 309, 312, 313, 316, 317, 320, 321, 326, 327, 332, 342, 343, 344, 345, 346, 348, 357, 364, 365, 366, 367, 368, 369, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 433, 434, 435, 437, 438, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 457, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 503, 504, 511, 512, 513, 514, 515, 517, 518, 519, 525, 526, 527, 528, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 560, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 607, 609, 610, 617, 618, 619, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 647, 649, 651, 653, 654, 656, 657, 658, 659, 660, 662, 663, 666, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 681, 682, 683, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 703, 704, 709, 710, 719, 720, 721, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 742, 743, 744, 745, 746, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 762, 764, 766, 767, 768, 769, 776, 780, 781, 783, 784, 786, 788, 789, 791, 793, 794, 796, 802, 803, 805, 807, 809, 811, 813, 815, 817, 819, 821, 823, 827, 828, 830, 832, 833, 835, 838, 839, 841, 842, 844, 845, 847, 849, 850, 851, 856, 857, 860, 861, 862, 863, 864, 865, 867, 868, 869, 870, 881, 882, 883, 884, 885, 886, 887, 888, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 916, 917, 918, 923, 924, 925, 926, 929, 932, 938, 939, 940, 941, 942, 943, 945, 946, 947, 948, 949, 950, 951, 954, 955, 956, 957, 958, 961, 963, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 977, 978, 980, 981, 983, 985, 986, 987, 999, 1000, 1001, 1002, 1007, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1027, 1030, 1031, 1033, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1078, 1079, 1080, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1117, 1118, 1119, 1120, 1131, 1132, 1134, 1135, 1136, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1148, 1152, 1156, 1157, 1158, 1159, 1186], "\u03d1": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 115, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 198, 199, 201, 202, 203, 204, 206, 208, 209, 216, 219, 222, 223, 224, 225, 229, 232, 235, 238, 240, 241, 245, 248, 251, 253, 256, 262, 266, 267, 268, 269, 270, 277, 278, 280, 287, 288, 289, 290, 291, 298, 299, 304, 305, 306, 309, 312, 313, 316, 317, 320, 321, 326, 327, 332, 342, 343, 344, 345, 346, 348, 357, 364, 365, 366, 367, 368, 369, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 433, 434, 435, 437, 438, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 457, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 503, 504, 511, 512, 513, 514, 515, 517, 518, 519, 525, 526, 527, 528, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 560, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 607, 609, 610, 617, 618, 619, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 647, 649, 651, 653, 654, 656, 657, 658, 659, 660, 662, 663, 666, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 681, 682, 683, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 703, 704, 709, 710, 719, 720, 721, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 742, 743, 744, 745, 746, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 762, 764, 766, 767, 768, 769, 776, 780, 781, 783, 784, 786, 788, 789, 791, 793, 794, 796, 802, 803, 805, 807, 809, 811, 813, 815, 817, 819, 821, 823, 827, 828, 830, 832, 833, 835, 838, 839, 841, 842, 844, 845, 847, 849, 850, 851, 856, 857, 860, 861, 862, 863, 864, 865, 867, 868, 869, 870, 881, 882, 883, 884, 885, 886, 887, 888, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 916, 917, 918, 923, 924, 925, 926, 929, 932, 938, 939, 940, 941, 942, 943, 945, 946, 947, 948, 949, 950, 951, 954, 955, 956, 957, 958, 961, 963, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 977, 978, 980, 981, 983, 985, 986, 987, 999, 1000, 1001, 1002, 1007, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1027, 1030, 1031, 1033, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1078, 1079, 1080, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1117, 1118, 1119, 1120, 1131, 1132, 1134, 1135, 1136, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1148, 1152, 1156, 1157, 1158, 1159, 1186], "\u2128": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 64, 74, 75, 98, 107, 115, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 198, 199, 201, 202, 203, 204, 206, 208, 209, 216, 219, 222, 223, 224, 225, 229, 232, 235, 238, 240, 241, 245, 248, 251, 253, 256, 262, 266, 267, 268, 269, 270, 277, 278, 280, 287, 288, 289, 290, 291, 298, 299, 304, 305, 306, 309, 312, 313, 316, 317, 320, 321, 326, 327, 332, 342, 343, 344, 345, 346, 348, 357, 364, 365, 366, 367, 368, 369, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 433, 434, 435, 437, 438, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 457, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 503, 504, 511, 512, 513, 514, 515, 517, 518, 519, 525, 526, 527, 528, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 560, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 607, 609, 610, 617, 618, 619, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 647, 649, 651, 653, 654, 656, 657, 658, 659, 660, 662, 663, 666, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 681, 682, 683, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 703, 704, 709, 710, 719, 720, 721, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 742, 743, 744, 745, 746, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 762, 764, 766, 767, 768, 769, 776, 780, 781, 783, 784, 786, 788, 789, 791, 793, 794, 796, 802, 803, 805, 807, 809, 811, 813, 815, 817, 819, 821, 823, 827, 828, 830, 832, 833, 835, 838, 839, 841, 842, 844, 845, 847, 849, 850, 851, 856, 857, 860, 861, 862, 863, 864, 865, 867, 868, 869, 870, 881, 882, 883, 884, 885, 886, 887, 888, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 916, 917, 918, 923, 924, 925, 926, 929, 932, 938, 939, 940, 941, 942, 943, 945, 946, 947, 948, 949, 950, 951, 954, 955, 956, 957, 958, 961, 963, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 977, 978, 980, 981, 983, 985, 986, 987, 999, 1000, 1001, 1002, 1007, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1027, 1030, 1031, 1033, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1078, 1079, 1080, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1117, 1118, 1119, 1120, 1131, 1132, 1134, 1135, 1136, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1148, 1152, 1156, 1157, 1158, 1159, 1186], "mittwoch": [8, 206, 208, 216], "00": [8, 122, 164, 165, 167, 172, 177, 185, 189, 197, 198, 199, 201, 202, 203, 204, 206, 208, 210, 212, 214, 216, 219, 223, 229, 231, 237, 247, 250, 251, 278, 279, 286, 287, 289, 350, 458, 466, 480, 735, 757, 761, 765, 776, 852, 853, 907, 929, 930, 931, 983, 1002, 1011, 1049, 1156], "tectrain": [8, 11, 185, 197, 206, 208, 216, 219, 222, 223, 224, 225, 229, 241, 253, 375], "html": [8, 17, 18, 23, 39, 40, 159, 168, 181, 189, 206, 216, 219, 222, 226, 229, 232, 235, 238, 254, 285, 352, 662, 781, 796, 802, 885, 907, 993, 997, 1068, 1134], "download": [8, 17, 64, 66, 107, 150, 161, 167, 169, 173, 177, 182, 185, 194, 201, 206, 214, 216, 219, 222, 223, 224, 229, 232, 235, 245, 248, 251, 253, 256, 259, 262, 271, 274, 281, 285, 292, 309, 329, 335, 339, 348, 377, 467, 470, 531, 532, 533, 534, 535, 536, 537, 540, 541, 586, 671, 673, 677, 678, 700, 701, 702, 705, 706, 707, 708, 710, 711, 712, 713, 714, 715, 716, 717, 718, 732, 734, 885, 887, 907, 909, 922, 929, 930, 931, 941, 1007, 1013, 1047, 1080, 1092, 1101, 1111, 1112, 1114, 1125, 1127, 1129, 1151], "repositori": [8, 23, 78, 98, 110, 122, 144, 149, 158, 165, 168, 176, 180, 189, 191, 198, 199, 209, 214, 216, 219, 223, 224, 225, 229, 232, 235, 240, 241, 245, 248, 251, 253, 256, 262, 270, 278, 288, 289, 291, 295, 301, 305, 306, 309, 313, 317, 321, 323, 327, 329, 335, 339, 342, 356, 357, 362, 530, 547, 582, 778, 825, 1165, 1170], "kurssprach": [8, 206, 216, 225, 241, 253], "kurs": [8, 23, 159, 176, 197, 208, 216, 225, 241, 253, 1170, 1171, 1172, 1180, 1187, 1194], "viel": [8, 23, 180, 185, 189, 195, 206, 216, 225, 231, 241, 242, 253, 272, 1173, 1174, 1180, 1188, 1189], "spezifisch": [8, 206, 216, 225, 241, 253, 1171, 1190, 1193], "unterrichtet": [8, 206, 216, 225, 241, 253], "themenreihenfolg": [8, 206, 216, 225, 241, 253], "herdt": [8, 155, 216, 225, 241, 253], "skriptum": [8, 206, 216, 225, 241, 253, 1186], "\u00fcbernommen": [8, 206, 216, 225, 241, 253], "etwa": [8, 23, 170, 171, 180, 185, 195, 197, 206, 216, 218, 225, 241, 253, 375, 1171, 1173, 1180, 1186, 1187, 1189, 1194], "allgemein": [8, 206, 216, 225, 241, 253, 1186], "allgemeinen": [8, 206, 210, 216, 225, 241, 253, 1189], "dadurch": [8, 206, 216, 225, 241, 253, 375, 1173, 1193], "verwirrend": [8, 206, 216, 225, 241, 253, 1186], "weswegen": [8, 206, 216, 225, 241, 253], "vielen": [8, 23, 180, 205, 216, 225, 241, 253, 375, 1180, 1182], "f\u00e4llen": [8, 23, 206, 216, 225, 241, 253], "ausnahmen": [8, 206, 216, 225, 241, 253], "gemacht": [8, 23, 170, 176, 206, 216, 225, 241, 253, 1186, 1194], "kursstruktur": [8, 216], "sieh": [8, 23, 179, 180, 181, 185, 189, 195, 206, 208, 211, 216, 225, 241, 253, 375, 1171, 1172, 1186], "jjj": [8, 135, 159, 203, 208, 216, 238, 286, 291, 366, 780, 781, 782, 786, 794], "hello": [8, 29, 64, 91, 155, 173, 195, 201, 205, 206, 208, 212, 216, 218, 219, 223, 225, 227, 229, 231, 232, 235, 237, 240, 241, 242, 244, 245, 251, 252, 253, 254, 256, 257, 259, 261, 274, 275, 281, 284, 292, 294, 295, 300, 301, 314, 322, 323, 324, 328, 329, 334, 335, 338, 339, 340, 343, 344, 345, 346, 347, 348, 352, 353, 357, 392, 395, 399, 410, 419, 426, 432, 436, 439, 443, 452, 456, 461, 462, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 480, 589, 592, 662, 684, 690, 693, 710, 715, 716, 717, 718, 722, 775, 777, 778, 782, 785, 787, 790, 792, 795, 802, 806, 810, 816, 822, 827, 829, 834, 837, 840, 843, 846, 852, 853, 856, 857, 889, 891, 896, 897, 904, 921, 932, 954, 978, 999, 1000, 1001, 1011, 1013, 1015, 1016, 1017, 1024, 1031, 1032, 1033, 1034, 1038, 1046, 1050, 1051, 1057, 1060, 1062, 1066, 1067, 1076, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1133, 1136, 1137, 1143, 1147, 1150, 1172, 1186], "py": [8, 17, 21, 32, 40, 64, 66, 146, 158, 177, 181, 182, 185, 193, 194, 195, 198, 199, 201, 203, 213, 216, 222, 228, 231, 235, 237, 238, 241, 242, 245, 247, 248, 250, 251, 253, 254, 260, 262, 274, 280, 281, 282, 290, 291, 295, 296, 301, 312, 313, 318, 331, 339, 340, 342, 357, 466, 724, 929, 985, 987, 1020, 1023, 1025, 1026, 1030, 1031, 1033, 1049, 1050, 1052, 1058, 1075, 1077, 1078, 1079, 1080, 1084, 1085, 1087, 1088, 1090, 1092, 1097, 1101, 1103, 1105, 1107, 1108, 1111, 1112, 1113, 1114, 1115, 1117, 1118, 1119, 1120, 1125, 1126, 1131, 1139, 1144, 1145, 1156, 1157], "swap": [8, 29, 164, 200, 206, 216, 218, 225, 237, 240, 241, 253, 258, 259, 268, 277, 278, 298, 299, 340, 432, 436, 439, 443, 452, 456, 461, 462, 560, 684, 722, 775, 777, 778, 811, 855, 866, 867, 921, 1053, 1082, 1084, 1085, 1086, 1087, 1089, 1121, 1186, 1190], "exercis": [8, 29, 79, 94, 98, 103, 105, 107, 124, 125, 137, 140, 141, 142, 159, 181, 189, 194, 201, 202, 206, 208, 213, 216, 219, 225, 229, 232, 235, 236, 238, 241, 245, 248, 251, 253, 256, 258, 259, 268, 270, 277, 281, 283, 284, 298, 299, 303, 317, 321, 328, 342, 343, 344, 345, 346, 348, 356, 359, 362, 370, 371, 388, 395, 410, 419, 426, 432, 436, 439, 443, 452, 456, 461, 462, 481, 489, 529, 550, 551, 552, 553, 555, 556, 557, 562, 582, 649, 650, 664, 684, 722, 750, 777, 778, 779, 786, 848, 852, 853, 855, 859, 866, 876, 878, 880, 905, 915, 921, 937, 960, 962, 971, 979, 998, 1005, 1046, 1047, 1081, 1110, 1121, 1122, 1156, 1176, 1179, 1181, 1186, 1191], "greet": [8, 29, 195, 206, 216, 219, 225, 231, 232, 241, 242, 244, 250, 251, 253, 256, 259, 274, 275, 353, 476, 778, 1000, 1001, 1007, 1017, 1082, 1084, 1086, 1089, 1121, 1186], "depend": [8, 13, 28, 29, 64, 79, 114, 119, 120, 124, 142, 155, 158, 159, 162, 163, 169, 173, 192, 194, 206, 216, 219, 224, 225, 231, 232, 237, 238, 241, 247, 250, 251, 253, 256, 259, 274, 291, 299, 305, 321, 357, 372, 380, 396, 398, 406, 409, 425, 442, 454, 460, 464, 468, 472, 475, 479, 482, 489, 495, 529, 541, 567, 569, 577, 657, 683, 731, 754, 776, 778, 784, 837, 848, 855, 859, 866, 869, 880, 905, 915, 922, 930, 948, 1000, 1011, 1015, 1017, 1024, 1046, 1047, 1049, 1082, 1086, 1095, 1121, 1150, 1151, 1181, 1183, 1186], "time": [8, 29, 36, 38, 43, 53, 64, 74, 77, 86, 90, 99, 111, 112, 122, 124, 125, 129, 137, 142, 152, 161, 162, 163, 164, 166, 167, 169, 182, 183, 186, 194, 198, 200, 201, 202, 206, 212, 214, 216, 219, 221, 223, 224, 225, 231, 232, 234, 237, 238, 241, 242, 250, 251, 253, 256, 257, 259, 260, 274, 275, 278, 281, 282, 284, 287, 288, 290, 291, 292, 296, 299, 309, 312, 313, 316, 318, 323, 324, 329, 330, 336, 343, 364, 375, 392, 400, 414, 420, 423, 446, 448, 453, 454, 457, 458, 459, 460, 464, 469, 480, 482, 483, 486, 492, 541, 571, 584, 591, 593, 634, 635, 689, 696, 710, 724, 732, 734, 745, 752, 756, 776, 778, 796, 798, 802, 803, 805, 817, 823, 825, 827, 840, 843, 846, 850, 856, 857, 858, 864, 865, 869, 885, 916, 921, 922, 929, 930, 931, 941, 951, 957, 958, 959, 963, 966, 967, 969, 972, 975, 981, 983, 984, 985, 986, 987, 992, 1014, 1015, 1021, 1025, 1031, 1034, 1035, 1046, 1047, 1048, 1051, 1058, 1061, 1064, 1065, 1082, 1084, 1086, 1089, 1121, 1127, 1136, 1141, 1151, 1181, 1186, 1192], "dai": [8, 12, 29, 163, 164, 166, 172, 175, 178, 181, 182, 186, 200, 206, 216, 219, 225, 227, 236, 241, 250, 251, 253, 256, 259, 274, 282, 286, 309, 363, 365, 366, 375, 465, 470, 471, 482, 503, 778, 842, 881, 946, 983, 1024, 1046, 1053, 1062, 1082, 1084, 1086, 1089, 1121, 1122, 1129, 1150, 1177, 1178, 1179, 1181, 1186, 1191], "hen": [8, 216], "vehikelkauf": [8, 216], "datentypen": [8, 185, 189, 206, 207, 213, 216, 247, 265, 358, 1173, 1186, 1193], "\u00fcbersicht": [8, 206, 216, 219, 229, 232, 235], "git": [8, 13, 23, 62, 66, 73, 74, 75, 79, 124, 125, 141, 145, 149, 154, 166, 168, 176, 189, 190, 191, 194, 211, 213, 214, 216, 238, 240, 251, 262, 267, 269, 287, 288, 289, 363, 364, 370, 371, 467, 528, 539, 602, 778, 800, 825, 826, 885, 924, 929, 1013, 1014, 1078, 1165, 1170], "scm": [8, 62, 165, 189, 216, 798], "com": [8, 13, 20, 23, 37, 42, 44, 50, 86, 107, 122, 124, 136, 144, 146, 158, 167, 168, 169, 173, 177, 189, 190, 191, 192, 198, 199, 202, 203, 211, 216, 218, 224, 238, 240, 250, 262, 267, 269, 275, 278, 281, 282, 287, 288, 289, 291, 295, 301, 305, 306, 309, 313, 317, 321, 323, 327, 329, 335, 339, 356, 357, 362, 368, 377, 525, 539, 560, 602, 622, 623, 624, 625, 626, 628, 629, 630, 631, 634, 643, 662, 744, 825, 826, 885, 924, 929, 932, 940, 941, 1013, 1078, 1136, 1140, 1141, 1142, 1144, 1145, 1146, 1147], "pep": [8, 158, 206, 216, 288, 290, 291, 312, 313], "The": [8, 13, 17, 29, 30, 40, 49, 53, 57, 59, 60, 63, 64, 66, 79, 85, 91, 100, 107, 108, 109, 110, 111, 112, 119, 124, 126, 127, 128, 129, 130, 132, 134, 135, 141, 142, 145, 155, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 174, 177, 178, 179, 182, 183, 185, 186, 190, 191, 192, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 213, 214, 216, 219, 222, 225, 229, 230, 231, 232, 235, 236, 237, 240, 241, 244, 245, 247, 248, 250, 253, 254, 256, 259, 261, 264, 266, 267, 268, 269, 271, 274, 277, 280, 281, 284, 287, 289, 291, 294, 295, 297, 298, 300, 301, 317, 319, 322, 323, 324, 328, 329, 331, 334, 335, 338, 339, 341, 343, 344, 345, 346, 347, 348, 354, 357, 358, 359, 360, 362, 363, 374, 375, 376, 379, 381, 389, 395, 403, 405, 407, 408, 409, 410, 415, 419, 423, 426, 432, 436, 439, 442, 443, 446, 452, 454, 456, 461, 465, 467, 469, 482, 483, 484, 487, 488, 493, 502, 503, 504, 506, 508, 510, 525, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 542, 544, 547, 549, 582, 583, 585, 589, 590, 592, 601, 602, 603, 604, 605, 608, 611, 619, 627, 633, 637, 646, 649, 650, 655, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 683, 684, 687, 691, 693, 698, 703, 709, 722, 723, 732, 733, 734, 738, 747, 754, 755, 759, 763, 772, 775, 776, 778, 779, 786, 788, 798, 800, 803, 819, 825, 827, 830, 848, 850, 852, 853, 854, 855, 858, 859, 862, 863, 866, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 882, 884, 887, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 900, 901, 903, 915, 921, 925, 929, 930, 931, 944, 946, 950, 952, 955, 956, 957, 958, 960, 962, 965, 969, 970, 972, 973, 976, 979, 982, 983, 984, 993, 996, 997, 1000, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1022, 1024, 1025, 1028, 1029, 1032, 1033, 1034, 1036, 1037, 1038, 1045, 1047, 1049, 1051, 1052, 1059, 1063, 1066, 1070, 1071, 1073, 1074, 1075, 1076, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1129, 1130, 1132, 1133, 1136, 1137, 1139, 1143, 1145, 1150, 1153, 1156, 1158, 1160, 1163, 1173, 1175, 1176, 1177, 1179, 1186], "zen": [8, 165, 206, 216, 244, 255, 288, 699], "corei": [8, 183, 194, 197, 198, 201, 203, 206, 208, 214, 216, 219, 222, 229, 232, 235, 245, 248, 259, 262, 271, 295, 301, 329, 357, 362, 1123, 1141, 1142, 1144, 1145, 1146, 1147, 1149, 1159], "schaefer": [8, 203, 206, 208, 214, 216], "youtub": [8, 20, 169, 183, 194, 197, 199, 201, 203, 206, 208, 216, 223, 290, 291, 312, 316, 330, 343], "channel": [8, 137, 167, 183, 206, 216, 922, 930, 992], "trainer": [8, 12, 23, 24, 59, 60, 63, 169, 188, 189, 194, 206, 216, 267, 269, 287, 469, 471, 539, 586, 734, 930, 1024, 1031, 1046, 1047, 1122, 1137, 1149, 1150, 1156, 1176, 1181], "hacker": [8, 206, 216, 1181], "schier": [8, 206, 216], "anzahl": [8, 206, 216], "sehr": [8, 23, 37, 170, 171, 185, 189, 195, 197, 205, 206, 210, 216, 247, 375, 1171, 1173, 1180, 1183, 1186, 1187, 1189, 1194], "guten": [8, 185, 195, 197, 206, 216, 250, 254, 375, 1175], "tutori": [8, 169, 183, 194, 197, 202, 206, 214, 216, 222, 223, 225, 232, 235, 245, 248, 271, 301, 313, 329, 343, 357, 362, 885, 931, 1075, 1077, 1141, 1142, 1144, 1145, 1146, 1147, 1149, 1159], "stil": [8, 206, 216], "besser": [8, 23, 170, 181, 205, 206, 216, 226, 1186], "ander": [8, 185, 195, 206, 216, 226, 234, 247, 352, 357, 362, 366, 375, 851, 1171, 1172, 1175, 1180, 1183, 1188, 1192, 1193], "auswahl": [8, 206, 216], "einleitung": [9, 217], "datatyp": [9, 29, 91, 155, 194, 198, 201, 206, 207, 208, 211, 213, 217, 219, 220, 225, 229, 230, 232, 233, 235, 236, 238, 239, 240, 241, 243, 245, 246, 251, 252, 253, 255, 256, 258, 261, 271, 273, 276, 283, 291, 293, 297, 303, 313, 315, 317, 319, 325, 331, 337, 341, 343, 344, 345, 346, 347, 348, 357, 362, 396, 403, 588, 617, 685, 778, 992, 1024, 1029, 1031, 1032, 1033, 1034, 1038, 1046, 1057, 1066, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1133, 1136, 1137, 1143, 1150, 1186], "number": [9, 24, 27, 29, 36, 53, 57, 59, 60, 63, 64, 69, 79, 81, 83, 85, 86, 111, 112, 119, 120, 122, 125, 129, 131, 141, 152, 155, 161, 163, 164, 167, 169, 172, 173, 177, 180, 182, 185, 191, 194, 198, 201, 204, 205, 206, 208, 213, 214, 217, 219, 220, 222, 225, 229, 231, 232, 234, 235, 237, 238, 241, 243, 244, 245, 247, 250, 251, 253, 255, 256, 258, 259, 260, 262, 267, 269, 271, 274, 275, 281, 282, 287, 288, 289, 290, 291, 292, 294, 295, 296, 300, 301, 304, 312, 313, 316, 317, 318, 320, 322, 323, 324, 328, 329, 330, 334, 335, 338, 339, 340, 343, 348, 357, 364, 375, 380, 382, 384, 386, 388, 389, 390, 396, 400, 402, 403, 414, 425, 441, 445, 450, 454, 458, 464, 466, 476, 494, 495, 503, 528, 536, 538, 541, 543, 554, 560, 587, 607, 615, 618, 625, 641, 666, 675, 678, 687, 699, 725, 732, 734, 776, 778, 784, 786, 793, 796, 805, 807, 819, 821, 827, 835, 839, 850, 858, 865, 891, 910, 912, 914, 916, 918, 930, 941, 942, 945, 949, 950, 951, 956, 957, 958, 959, 978, 983, 984, 992, 993, 997, 999, 1002, 1022, 1023, 1025, 1027, 1028, 1029, 1039, 1051, 1052, 1053, 1058, 1059, 1069, 1070, 1071, 1073, 1074, 1082, 1085, 1086, 1089, 1092, 1093, 1095, 1096, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1117, 1121, 1122, 1123, 1126, 1131, 1149, 1151, 1156, 1169, 1178, 1181, 1186], "integ": [9, 38, 76, 77, 89, 180, 182, 184, 199, 200, 201, 203, 207, 211, 217, 220, 224, 231, 234, 235, 237, 240, 243, 246, 247, 248, 250, 255, 258, 264, 276, 283, 296, 303, 315, 319, 325, 331, 341, 357, 380, 381, 386, 396, 399, 401, 402, 403, 414, 425, 427, 429, 430, 441, 442, 446, 452, 456, 461, 462, 503, 504, 507, 525, 560, 588, 614, 617, 665, 679, 683, 684, 686, 722, 725, 751, 775, 777, 778, 784, 959, 969, 970, 971, 978, 1018, 1031, 1034, 1062, 1068, 1074, 1100, 1144, 1146, 1173, 1177, 1192], "string": [9, 29, 42, 50, 58, 91, 98, 107, 114, 118, 129, 130, 159, 164, 189, 199, 200, 201, 203, 206, 207, 210, 213, 217, 219, 220, 222, 223, 225, 229, 230, 232, 233, 235, 236, 238, 239, 240, 241, 243, 245, 246, 249, 251, 252, 253, 255, 256, 258, 261, 264, 266, 267, 269, 271, 273, 274, 276, 280, 281, 283, 284, 286, 294, 295, 297, 300, 301, 303, 312, 313, 315, 316, 317, 319, 322, 323, 325, 326, 327, 328, 329, 331, 334, 335, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 353, 357, 362, 368, 381, 384, 388, 395, 404, 410, 419, 425, 426, 432, 436, 439, 443, 448, 452, 456, 461, 462, 466, 474, 485, 489, 491, 506, 508, 509, 510, 513, 515, 518, 519, 520, 522, 523, 524, 525, 541, 542, 543, 548, 559, 560, 568, 574, 577, 583, 585, 588, 589, 592, 607, 609, 626, 629, 630, 631, 635, 638, 639, 640, 641, 642, 643, 646, 650, 661, 663, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 682, 684, 685, 686, 688, 690, 691, 695, 710, 714, 716, 717, 718, 719, 722, 724, 726, 727, 731, 741, 742, 743, 744, 746, 758, 763, 775, 776, 777, 778, 857, 948, 959, 963, 966, 970, 978, 983, 992, 996, 1023, 1024, 1027, 1035, 1044, 1046, 1051, 1059, 1073, 1080, 1081, 1082, 1087, 1092, 1095, 1096, 1097, 1100, 1103, 1106, 1107, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1134, 1135, 1136, 1137, 1139, 1142, 1173, 1186], "compound": [9, 29, 91, 155, 198, 201, 206, 207, 208, 217, 219, 225, 229, 230, 232, 233, 235, 236, 238, 239, 241, 243, 245, 246, 251, 252, 253, 255, 256, 258, 259, 261, 273, 274, 281, 284, 291, 293, 294, 295, 297, 300, 301, 303, 312, 313, 315, 316, 317, 319, 322, 323, 328, 329, 331, 334, 335, 337, 338, 339, 341, 343, 344, 345, 346, 347, 348, 357, 380, 411, 430, 778, 1024, 1031, 1032, 1033, 1034, 1038, 1046, 1079, 1080, 1081, 1082, 1090, 1091, 1092, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1133, 1136, 1137, 1143, 1150, 1186], "list": [9, 27, 29, 37, 64, 91, 100, 124, 146, 155, 158, 159, 162, 169, 173, 184, 189, 191, 194, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 210, 213, 214, 217, 219, 220, 222, 225, 229, 230, 232, 233, 235, 236, 238, 239, 240, 241, 243, 245, 246, 247, 252, 253, 255, 256, 258, 259, 261, 263, 267, 268, 271, 273, 274, 276, 277, 278, 281, 283, 284, 287, 288, 289, 293, 294, 295, 297, 298, 299, 300, 301, 303, 312, 313, 315, 316, 317, 318, 322, 323, 325, 328, 329, 331, 334, 335, 337, 338, 339, 341, 342, 349, 352, 354, 357, 361, 362, 363, 375, 433, 439, 443, 444, 452, 456, 458, 460, 461, 462, 466, 467, 470, 479, 486, 488, 489, 528, 530, 538, 541, 574, 576, 578, 582, 586, 587, 592, 617, 633, 646, 650, 669, 679, 684, 687, 722, 730, 736, 741, 754, 755, 775, 776, 777, 778, 779, 787, 791, 792, 795, 802, 803, 806, 816, 827, 829, 833, 834, 840, 843, 846, 851, 852, 853, 854, 855, 858, 859, 865, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 889, 892, 893, 896, 897, 899, 900, 901, 902, 903, 905, 913, 921, 930, 950, 952, 954, 960, 962, 970, 972, 976, 979, 982, 984, 999, 1001, 1016, 1020, 1023, 1024, 1027, 1028, 1029, 1042, 1044, 1046, 1047, 1053, 1054, 1059, 1060, 1061, 1062, 1065, 1071, 1073, 1074, 1075, 1080, 1082, 1092, 1095, 1096, 1097, 1098, 1102, 1103, 1104, 1105, 1106, 1107, 1113, 1115, 1118, 1120, 1121, 1122, 1123, 1128, 1131, 1141, 1144, 1148, 1158, 1163, 1170, 1173, 1186, 1187], "arrai": [9, 98, 109, 124, 185, 206, 207, 212, 217, 219, 223, 224, 226, 232, 240, 245, 250, 259, 262, 266, 267, 287, 295, 301, 340, 380, 389, 395, 399, 410, 419, 426, 436, 439, 443, 445, 447, 448, 451, 452, 456, 461, 462, 540, 543, 566, 574, 577, 615, 616, 618, 620, 622, 625, 626, 631, 635, 647, 667, 674, 675, 676, 677, 678, 679, 682, 684, 722, 730, 745, 762, 775, 777, 778, 796, 857, 862, 978, 1055, 1059, 1071, 1123, 1126, 1128, 1151, 1186], "javascript": [9, 23, 160, 195, 205, 217, 226, 250, 255, 1018, 1064], "std": [9, 42, 50, 58, 107, 109, 110, 111, 112, 114, 118, 120, 121, 124, 129, 130, 133, 173, 189, 190, 217, 265, 278, 287, 289, 468, 469, 474, 482, 485, 487, 489, 491, 496, 503, 506, 508, 509, 510, 513, 514, 515, 518, 519, 520, 521, 522, 523, 524, 525, 528, 530, 531, 536, 538, 540, 541, 542, 544, 545, 546, 547, 558, 560, 568, 578, 582, 585, 586, 588, 593, 594, 595, 599, 607, 609, 613, 614, 615, 616, 617, 622, 623, 624, 625, 626, 628, 629, 630, 634, 635, 637, 640, 641, 642, 643, 646, 647, 650, 651, 653, 654, 657, 659, 660, 661, 663, 664, 666, 667, 668, 669, 670, 671, 672, 673, 674, 676, 677, 679, 684, 686, 689, 690, 691, 692, 693, 695, 696, 697, 699, 700, 701, 702, 704, 705, 706, 707, 708, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 722, 724, 726, 727, 729, 734, 737, 740, 744, 747, 749, 755, 759, 762, 764, 766, 772, 774, 775, 777, 778, 929, 963, 966, 970, 978, 980, 992, 996, 1128, 1163, 1168, 1176], "vector": [9, 13, 107, 109, 111, 112, 124, 129, 130, 133, 189, 217, 223, 240, 266, 267, 280, 286, 287, 289, 327, 340, 487, 489, 513, 514, 530, 531, 538, 544, 545, 546, 547, 558, 576, 578, 582, 586, 588, 593, 598, 622, 624, 625, 626, 628, 631, 633, 646, 650, 664, 666, 667, 674, 675, 676, 677, 679, 685, 686, 690, 695, 696, 697, 704, 705, 706, 707, 708, 710, 730, 731, 734, 763, 772, 774, 778, 996, 1052, 1130, 1147, 1168], "dictionari": [9, 29, 64, 91, 184, 194, 199, 200, 201, 203, 206, 207, 208, 211, 213, 217, 219, 220, 225, 229, 230, 232, 233, 235, 236, 238, 239, 241, 243, 245, 246, 249, 252, 253, 255, 256, 258, 259, 261, 264, 271, 273, 274, 276, 281, 283, 284, 288, 290, 291, 293, 294, 295, 297, 300, 301, 303, 306, 309, 312, 313, 315, 316, 317, 319, 322, 323, 325, 328, 329, 331, 334, 335, 337, 338, 339, 341, 357, 362, 365, 731, 778, 1024, 1027, 1031, 1032, 1033, 1034, 1037, 1038, 1042, 1046, 1080, 1082, 1090, 1095, 1100, 1101, 1106, 1109, 1110, 1111, 1113, 1115, 1116, 1121, 1123, 1131, 1141, 1148, 1150, 1186], "valu": [9, 58, 60, 85, 109, 124, 125, 129, 130, 136, 141, 142, 162, 164, 166, 177, 179, 181, 182, 183, 195, 199, 201, 203, 205, 210, 212, 217, 218, 219, 221, 222, 223, 224, 226, 227, 229, 231, 232, 234, 235, 237, 238, 240, 242, 244, 245, 247, 250, 254, 257, 259, 260, 271, 272, 275, 278, 280, 282, 292, 295, 296, 301, 302, 314, 318, 324, 327, 329, 331, 336, 340, 343, 351, 357, 379, 384, 386, 388, 389, 399, 402, 403, 404, 412, 414, 415, 423, 425, 427, 428, 433, 444, 448, 450, 452, 456, 461, 462, 466, 469, 474, 476, 479, 484, 487, 489, 503, 504, 506, 509, 513, 515, 518, 520, 521, 523, 534, 535, 536, 538, 541, 548, 560, 577, 586, 587, 588, 591, 597, 600, 638, 640, 642, 643, 684, 686, 687, 693, 695, 704, 710, 713, 716, 717, 718, 722, 731, 742, 756, 772, 775, 777, 778, 781, 784, 803, 805, 807, 809, 825, 835, 857, 870, 921, 930, 951, 959, 961, 962, 964, 965, 966, 969, 972, 978, 981, 992, 993, 996, 997, 1016, 1018, 1020, 1023, 1027, 1031, 1033, 1035, 1042, 1053, 1054, 1055, 1063, 1065, 1068, 1070, 1071, 1075, 1080, 1083, 1088, 1090, 1093, 1100, 1102, 1123, 1126, 1128, 1131, 1134, 1135, 1141, 1142, 1145, 1146, 1147, 1163], "map": [9, 32, 34, 42, 59, 63, 107, 109, 110, 129, 130, 164, 171, 189, 195, 209, 211, 213, 217, 219, 220, 222, 223, 226, 234, 235, 237, 252, 266, 267, 269, 275, 287, 289, 296, 315, 326, 329, 330, 357, 460, 485, 489, 518, 522, 523, 524, 530, 541, 547, 576, 578, 582, 637, 640, 641, 642, 643, 646, 650, 679, 682, 686, 690, 696, 722, 741, 742, 743, 745, 777, 778, 809, 821, 983, 992, 993, 1041, 1045, 1054, 1055, 1074, 1130, 1180, 1190], "mathematisch": [9, 217, 275], "mengen": [9, 206, 207, 217, 1186], "while": [9, 13, 29, 53, 54, 64, 91, 114, 120, 155, 166, 168, 169, 177, 183, 194, 198, 199, 201, 202, 203, 204, 206, 207, 208, 210, 212, 213, 214, 217, 218, 219, 221, 222, 225, 226, 227, 229, 231, 232, 235, 236, 237, 240, 241, 243, 245, 246, 248, 249, 251, 252, 253, 254, 256, 258, 259, 261, 271, 274, 275, 281, 283, 284, 288, 290, 294, 295, 296, 300, 301, 302, 312, 313, 314, 316, 322, 323, 325, 328, 329, 331, 334, 335, 337, 338, 339, 341, 343, 344, 345, 346, 347, 348, 349, 357, 360, 362, 380, 382, 386, 388, 390, 397, 402, 404, 418, 419, 425, 426, 430, 432, 436, 439, 440, 443, 445, 447, 452, 454, 456, 461, 462, 472, 484, 489, 503, 510, 528, 577, 613, 617, 618, 621, 623, 625, 628, 643, 666, 672, 682, 684, 695, 710, 711, 712, 718, 722, 743, 754, 756, 772, 775, 777, 778, 802, 805, 813, 815, 825, 827, 833, 834, 840, 843, 846, 858, 862, 869, 921, 922, 929, 930, 942, 947, 948, 949, 950, 957, 966, 972, 977, 978, 981, 983, 989, 992, 996, 1011, 1016, 1024, 1025, 1026, 1027, 1031, 1034, 1046, 1047, 1051, 1056, 1061, 1073, 1079, 1080, 1081, 1082, 1086, 1092, 1094, 1095, 1096, 1098, 1102, 1103, 1104, 1105, 1106, 1107, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1129, 1130, 1133, 1137, 1150, 1173, 1177, 1179, 1181, 1186], "function": [9, 21, 29, 38, 50, 59, 63, 64, 79, 81, 83, 91, 98, 111, 112, 124, 125, 142, 155, 159, 162, 164, 173, 181, 194, 195, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 210, 213, 214, 217, 219, 220, 222, 223, 225, 229, 230, 232, 233, 235, 236, 237, 238, 240, 241, 243, 245, 246, 247, 248, 251, 252, 253, 255, 256, 257, 261, 264, 265, 272, 274, 276, 278, 280, 281, 283, 284, 287, 289, 290, 291, 292, 294, 295, 297, 300, 301, 302, 308, 315, 317, 318, 325, 331, 337, 341, 342, 352, 353, 359, 360, 362, 375, 379, 380, 386, 389, 393, 394, 395, 400, 405, 409, 410, 418, 419, 420, 421, 423, 425, 430, 432, 433, 436, 437, 438, 439, 441, 443, 444, 445, 447, 452, 454, 456, 458, 461, 462, 465, 473, 479, 487, 492, 504, 525, 529, 530, 541, 544, 545, 546, 547, 549, 558, 571, 577, 582, 586, 589, 592, 594, 595, 596, 597, 603, 608, 611, 613, 627, 633, 637, 646, 649, 650, 657, 660, 663, 664, 665, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 684, 686, 687, 690, 691, 699, 702, 708, 710, 719, 720, 721, 722, 724, 726, 727, 732, 738, 742, 744, 745, 755, 762, 763, 764, 766, 767, 768, 775, 776, 777, 778, 789, 792, 795, 796, 802, 806, 809, 813, 816, 819, 825, 827, 829, 834, 840, 841, 843, 844, 845, 846, 855, 858, 859, 921, 929, 942, 944, 950, 951, 952, 959, 960, 962, 967, 968, 969, 975, 976, 978, 979, 982, 984, 997, 999, 1007, 1017, 1024, 1027, 1028, 1029, 1030, 1038, 1046, 1048, 1051, 1052, 1056, 1058, 1079, 1080, 1081, 1082, 1085, 1088, 1089, 1092, 1093, 1094, 1095, 1100, 1103, 1104, 1106, 1107, 1108, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1128, 1133, 1139, 1152, 1156, 1168, 1176, 1177, 1178, 1186], "xx": [10, 231, 262, 296, 302, 318, 324, 340], "yy": 10, "kur": [11, 23, 180, 182, 185, 197, 375, 1171, 1172, 1173, 1174, 1175, 1180, 1182, 1183, 1189, 1190, 1192], "fand": [11, 197, 375], "team": [11, 122, 125, 142, 169, 174, 177, 178, 189, 197, 198, 199, 214, 223, 248, 290, 375, 864, 870, 877, 879, 1025, 1122, 1170, 1178], "statt": [11, 23, 197, 375, 1187, 1188, 1194], "wurd": [11, 171, 185, 189, 195, 197, 206, 357, 362, 375, 1175, 1186, 1187, 1193], "\u00fcber": [11, 23, 170, 171, 176, 180, 181, 185, 189, 197, 206, 207, 211, 220, 225, 251, 358, 375, 1170, 1180, 1186, 1187, 1192, 1193], "meinen": [11, 23, 197, 225, 241, 253, 375], "partner": [11, 23, 197, 375, 1170], "durat": [12, 27, 167, 177, 437, 471, 541, 752, 756, 757, 1024, 1046, 1122, 1150, 1178, 1179, 1181, 1191], "each": [12, 40, 64, 77, 107, 111, 112, 130, 133, 162, 163, 164, 177, 183, 201, 202, 214, 231, 234, 237, 247, 250, 254, 287, 289, 296, 342, 348, 354, 357, 362, 430, 455, 458, 460, 484, 492, 525, 539, 540, 596, 682, 757, 763, 776, 813, 821, 825, 852, 858, 879, 883, 885, 929, 930, 931, 969, 973, 981, 1015, 1027, 1030, 1035, 1041, 1101, 1122, 1128, 1130, 1131, 1132, 1147, 1151, 1181, 1191], "about": [12, 23, 29, 30, 39, 42, 43, 44, 45, 46, 49, 64, 66, 69, 76, 81, 84, 85, 91, 98, 122, 124, 142, 150, 155, 156, 158, 162, 163, 164, 166, 169, 177, 186, 190, 191, 194, 198, 199, 200, 201, 202, 203, 206, 213, 214, 219, 222, 223, 224, 225, 229, 231, 232, 235, 238, 239, 240, 241, 243, 245, 247, 248, 250, 251, 253, 255, 256, 259, 268, 271, 273, 274, 276, 277, 278, 284, 288, 289, 294, 295, 298, 300, 301, 303, 312, 313, 316, 317, 322, 323, 325, 327, 328, 331, 334, 335, 337, 338, 341, 343, 344, 345, 346, 347, 348, 357, 359, 362, 368, 398, 403, 412, 414, 442, 445, 446, 448, 454, 458, 460, 464, 478, 484, 577, 586, 587, 610, 617, 683, 692, 696, 697, 727, 731, 736, 745, 746, 776, 778, 794, 796, 825, 835, 844, 852, 853, 871, 888, 922, 929, 930, 931, 942, 946, 952, 967, 984, 992, 1018, 1024, 1025, 1027, 1034, 1035, 1042, 1046, 1054, 1065, 1073, 1080, 1081, 1082, 1092, 1095, 1103, 1104, 1106, 1107, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1130, 1136, 1137, 1138, 1139, 1143, 1151, 1156, 1165, 1178, 1179, 1186, 1191], "book": [12, 29, 32, 158, 162, 167, 177, 178, 189, 198, 223, 245, 281, 290, 291, 375, 465, 471, 885, 1024, 1046, 1122, 1137, 1150, 1177, 1179, 1181, 1191], "separ": [12, 38, 79, 104, 105, 124, 162, 189, 191, 201, 221, 234, 240, 250, 254, 257, 260, 275, 278, 281, 282, 284, 292, 296, 304, 318, 320, 324, 330, 336, 387, 425, 446, 466, 469, 476, 488, 492, 502, 530, 531, 532, 533, 534, 535, 536, 537, 540, 560, 577, 582, 607, 728, 756, 776, 778, 793, 794, 827, 861, 865, 870, 916, 918, 921, 931, 967, 983, 999, 1001, 1004, 1005, 1006, 1007, 1009, 1017, 1022, 1079, 1096, 1101, 1122, 1131, 1163, 1173, 1178, 1191], "requir": [12, 13, 27, 37, 39, 42, 62, 90, 109, 122, 124, 154, 158, 162, 163, 164, 167, 169, 173, 182, 190, 192, 194, 198, 202, 210, 221, 224, 235, 238, 240, 242, 247, 248, 262, 278, 287, 289, 290, 313, 368, 379, 412, 442, 444, 467, 476, 479, 487, 507, 509, 529, 538, 541, 560, 609, 622, 638, 675, 686, 692, 693, 699, 702, 707, 708, 732, 739, 768, 769, 922, 930, 931, 942, 947, 983, 985, 992, 1011, 1016, 1024, 1037, 1046, 1047, 1065, 1074, 1075, 1078, 1131, 1137, 1150, 1151, 1156, 1158, 1159, 1165, 1177, 1179, 1181, 1191, 1194], "particip": [12, 167, 169, 191, 194, 278, 309, 525, 924, 1047, 1061, 1081, 1191], "should": [12, 37, 43, 45, 55, 57, 78, 81, 122, 125, 126, 129, 141, 142, 158, 163, 164, 167, 169, 173, 177, 184, 190, 194, 198, 223, 224, 238, 244, 250, 254, 278, 313, 316, 318, 343, 348, 363, 364, 378, 403, 425, 440, 450, 454, 464, 469, 476, 482, 487, 492, 493, 495, 496, 504, 541, 585, 592, 594, 690, 693, 695, 699, 710, 754, 784, 803, 815, 817, 821, 825, 850, 869, 885, 892, 897, 929, 930, 931, 938, 957, 973, 984, 1022, 1031, 1035, 1043, 1054, 1088, 1092, 1101, 1129, 1139, 1151, 1156, 1157, 1191], "fluent": [12, 301, 358, 359, 1123, 1191], "target": [12, 17, 40, 64, 109, 163, 165, 173, 214, 223, 305, 321, 359, 448, 451, 467, 470, 471, 477, 480, 493, 597, 778, 798, 800, 805, 825, 887, 952, 977, 1001, 1002, 1011, 1013, 1020, 1024, 1031, 1033, 1046, 1130, 1137, 1150, 1158, 1181], "audienc": [12, 162, 164, 194, 199, 316, 1024, 1046, 1078, 1137, 1150, 1176, 1181], "english": [12, 29, 107, 155, 182, 201, 208, 219, 229, 232, 241, 245, 251, 253, 256, 258, 259, 274, 281, 286, 294, 295, 300, 301, 313, 322, 323, 328, 329, 334, 335, 338, 339, 355, 356, 357, 362, 471, 778, 1024, 1046, 1082, 1092, 1095, 1096, 1098, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1121, 1122, 1136, 1137, 1150], "german": [12, 14, 471, 1024, 1046, 1122, 1136, 1137, 1139, 1150], "see": [12, 13, 23, 27, 29, 31, 42, 43, 45, 46, 50, 53, 55, 57, 64, 66, 78, 79, 86, 90, 100, 107, 122, 124, 125, 127, 129, 130, 131, 132, 133, 135, 137, 140, 141, 142, 147, 148, 150, 155, 158, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 177, 179, 182, 183, 184, 192, 194, 198, 199, 208, 213, 214, 218, 221, 223, 224, 229, 231, 234, 235, 237, 238, 240, 241, 247, 250, 254, 259, 262, 271, 275, 278, 280, 284, 286, 287, 288, 289, 291, 295, 296, 304, 305, 313, 317, 320, 321, 332, 339, 343, 348, 357, 360, 361, 363, 368, 371, 376, 379, 388, 389, 390, 392, 398, 415, 428, 434, 437, 447, 453, 466, 467, 472, 476, 477, 478, 479, 483, 484, 487, 488, 489, 497, 498, 499, 500, 501, 505, 508, 509, 525, 528, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 548, 549, 558, 559, 560, 568, 574, 577, 582, 584, 585, 586, 587, 592, 594, 595, 600, 601, 603, 618, 622, 635, 649, 653, 654, 656, 657, 669, 673, 675, 676, 678, 682, 685, 690, 692, 693, 694, 695, 697, 704, 710, 724, 725, 727, 730, 731, 732, 734, 736, 740, 741, 742, 743, 744, 745, 754, 756, 762, 764, 766, 767, 768, 769, 773, 776, 779, 781, 784, 786, 788, 789, 791, 793, 794, 796, 798, 800, 803, 805, 811, 813, 815, 817, 819, 821, 825, 828, 832, 833, 839, 841, 851, 852, 853, 857, 860, 863, 864, 881, 885, 886, 888, 889, 891, 894, 896, 912, 922, 929, 930, 931, 952, 955, 957, 958, 959, 963, 966, 968, 970, 973, 980, 992, 996, 999, 1000, 1001, 1002, 1007, 1009, 1012, 1013, 1014, 1015, 1016, 1017, 1020, 1021, 1022, 1023, 1024, 1027, 1035, 1036, 1039, 1040, 1042, 1045, 1047, 1049, 1052, 1060, 1063, 1064, 1065, 1075, 1078, 1081, 1090, 1094, 1097, 1108, 1119, 1120, 1126, 1128, 1131, 1136, 1137, 1139, 1141, 1144, 1145, 1146, 1150, 1153, 1156, 1161, 1163, 1168, 1178, 1179, 1181, 1191], "also": [12, 13, 23, 27, 31, 57, 64, 66, 122, 125, 127, 130, 132, 133, 135, 137, 140, 141, 158, 163, 164, 166, 167, 169, 170, 172, 173, 174, 181, 183, 184, 185, 186, 189, 191, 192, 194, 195, 198, 204, 206, 224, 231, 237, 247, 248, 250, 254, 260, 266, 267, 269, 278, 280, 287, 288, 289, 295, 296, 305, 313, 317, 321, 343, 375, 466, 467, 472, 477, 484, 493, 503, 506, 508, 509, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 548, 549, 559, 584, 585, 586, 587, 592, 594, 600, 618, 635, 638, 653, 654, 656, 682, 690, 693, 694, 695, 697, 710, 721, 724, 727, 730, 731, 732, 734, 736, 740, 742, 745, 746, 754, 756, 762, 767, 768, 769, 776, 815, 825, 830, 851, 863, 869, 870, 885, 889, 891, 894, 896, 916, 922, 932, 941, 942, 955, 959, 963, 970, 980, 1001, 1002, 1009, 1014, 1016, 1018, 1020, 1021, 1022, 1024, 1027, 1035, 1039, 1045, 1047, 1051, 1054, 1064, 1065, 1068, 1078, 1090, 1094, 1097, 1108, 1128, 1129, 1137, 1141, 1144, 1145, 1146, 1150, 1153, 1156, 1178, 1180, 1186, 1187, 1191], "train": [12, 13, 14, 23, 29, 30, 32, 37, 60, 66, 107, 145, 157, 158, 163, 167, 174, 175, 177, 185, 186, 189, 190, 191, 194, 197, 221, 231, 237, 247, 250, 280, 287, 289, 292, 304, 320, 330, 365, 375, 467, 469, 470, 471, 472, 473, 475, 476, 478, 480, 482, 483, 484, 485, 486, 487, 489, 491, 494, 503, 504, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 538, 540, 543, 544, 545, 546, 548, 550, 551, 552, 553, 555, 556, 557, 558, 559, 582, 662, 742, 776, 779, 781, 784, 789, 794, 800, 803, 811, 932, 938, 940, 941, 942, 963, 966, 989, 992, 996, 1023, 1024, 1026, 1046, 1047, 1075, 1078, 1081, 1125, 1126, 1129, 1130, 1137, 1150, 1161, 1165, 1170, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194], "sourc": [13, 23, 28, 30, 39, 62, 66, 69, 74, 87, 111, 112, 124, 142, 161, 162, 163, 164, 167, 168, 169, 173, 177, 179, 180, 182, 183, 190, 203, 208, 213, 231, 237, 245, 247, 250, 254, 259, 267, 269, 271, 274, 275, 278, 299, 306, 420, 421, 424, 459, 468, 469, 470, 472, 473, 474, 475, 477, 478, 479, 488, 539, 542, 543, 657, 690, 693, 699, 704, 710, 740, 793, 823, 826, 837, 869, 885, 886, 918, 959, 999, 1000, 1002, 1003, 1005, 1009, 1011, 1013, 1014, 1015, 1016, 1017, 1054, 1110, 1119, 1158, 1165, 1171, 1181, 1188], "under": [13, 21, 35, 55, 133, 137, 141, 161, 162, 164, 169, 190, 201, 203, 313, 375, 489, 504, 541, 861, 862, 929, 930, 931, 932, 933, 934, 941, 942, 984, 999, 1023, 1030, 1037, 1071, 1156], "why": [13, 24, 28, 45, 50, 66, 67, 70, 115, 124, 142, 158, 162, 163, 168, 174, 194, 198, 199, 201, 203, 214, 223, 243, 281, 284, 290, 291, 312, 326, 357, 360, 361, 364, 378, 390, 396, 403, 406, 424, 435, 440, 441, 446, 450, 453, 460, 465, 503, 526, 585, 600, 618, 631, 657, 660, 676, 682, 683, 699, 730, 746, 749, 763, 774, 793, 805, 821, 825, 856, 862, 865, 922, 975, 978, 996, 1011, 1013, 1021, 1022, 1025, 1071, 1073, 1123, 1128, 1138, 1146], "appli": [13, 77, 84, 159, 164, 203, 221, 280, 286, 313, 324, 407, 442, 448, 466, 597, 697, 732, 763, 798, 825, 865, 868, 885, 929, 930, 955, 1016, 1142], "websit": [13, 23, 163, 177, 1152, 1165], "contain": [13, 17, 29, 35, 38, 62, 107, 108, 109, 111, 112, 122, 124, 158, 159, 165, 168, 173, 177, 182, 184, 189, 190, 192, 194, 195, 198, 201, 203, 221, 223, 224, 231, 237, 247, 248, 250, 254, 261, 262, 265, 266, 267, 280, 287, 296, 313, 330, 342, 343, 352, 359, 360, 366, 368, 405, 424, 438, 458, 460, 466, 468, 469, 473, 487, 503, 525, 528, 530, 539, 540, 541, 547, 548, 549, 582, 583, 585, 593, 602, 619, 622, 635, 646, 650, 664, 673, 678, 679, 685, 690, 730, 742, 745, 763, 772, 773, 774, 776, 778, 781, 786, 794, 796, 798, 819, 821, 825, 845, 852, 853, 856, 865, 867, 890, 891, 892, 897, 904, 929, 930, 931, 938, 959, 967, 968, 983, 993, 999, 1002, 1007, 1011, 1016, 1023, 1025, 1030, 1047, 1069, 1072, 1078, 1080, 1092, 1101, 1105, 1120, 1123, 1125, 1129, 1131, 1134, 1136, 1141, 1151, 1152, 1156, 1162, 1163, 1175, 1176], "give": [13, 27, 40, 53, 59, 63, 111, 112, 129, 155, 159, 161, 162, 164, 169, 172, 183, 186, 190, 191, 198, 203, 214, 222, 254, 259, 271, 287, 289, 317, 376, 390, 391, 406, 422, 425, 433, 458, 464, 466, 469, 484, 536, 538, 554, 571, 607, 622, 668, 676, 699, 728, 825, 851, 858, 876, 878, 930, 931, 950, 951, 963, 966, 985, 987, 992, 993, 999, 1002, 1011, 1020, 1023, 1046, 1063, 1075, 1123, 1127, 1128, 1151, 1156, 1158, 1176, 1179, 1181], "structur": [13, 29, 66, 79, 90, 109, 129, 162, 177, 199, 213, 240, 241, 248, 250, 251, 253, 256, 259, 262, 265, 274, 281, 284, 291, 295, 301, 305, 306, 309, 313, 317, 321, 323, 327, 329, 335, 357, 361, 363, 365, 380, 390, 398, 403, 432, 434, 438, 439, 443, 452, 455, 456, 461, 462, 466, 467, 471, 479, 486, 504, 529, 539, 558, 607, 640, 673, 682, 684, 722, 775, 777, 778, 813, 815, 819, 823, 825, 845, 881, 912, 948, 954, 970, 975, 993, 1063, 1065, 1105, 1111, 1148, 1150, 1157, 1164, 1176], "much": [13, 27, 35, 38, 60, 64, 81, 129, 133, 135, 140, 161, 162, 163, 164, 169, 172, 177, 186, 192, 194, 198, 199, 200, 202, 224, 235, 237, 238, 240, 242, 248, 262, 263, 266, 267, 269, 281, 284, 290, 291, 312, 313, 316, 326, 327, 360, 392, 403, 414, 450, 454, 464, 479, 504, 583, 593, 599, 618, 639, 659, 682, 683, 692, 693, 697, 710, 722, 723, 724, 728, 730, 732, 742, 746, 766, 767, 769, 777, 778, 781, 796, 803, 811, 813, 819, 821, 825, 864, 865, 914, 922, 925, 928, 930, 942, 984, 993, 996, 997, 999, 1001, 1011, 1018, 1021, 1022, 1035, 1036, 1041, 1042, 1045, 1054, 1071, 1123, 1129, 1130, 1156, 1158, 1176], "like": [13, 21, 27, 28, 30, 39, 43, 45, 55, 59, 63, 64, 66, 78, 79, 114, 120, 124, 125, 129, 130, 132, 135, 137, 140, 142, 155, 161, 162, 163, 164, 166, 167, 169, 172, 173, 177, 182, 185, 186, 190, 191, 192, 194, 198, 200, 203, 213, 214, 221, 223, 224, 231, 237, 238, 240, 241, 247, 250, 263, 265, 267, 269, 275, 278, 280, 281, 284, 287, 289, 313, 316, 340, 343, 348, 360, 368, 389, 392, 396, 418, 420, 425, 430, 442, 446, 454, 457, 464, 470, 474, 476, 479, 482, 483, 484, 504, 528, 538, 539, 540, 541, 542, 554, 560, 568, 571, 577, 586, 589, 592, 596, 597, 598, 600, 621, 638, 647, 654, 656, 659, 662, 663, 672, 673, 681, 682, 685, 686, 692, 693, 710, 728, 730, 731, 741, 742, 745, 746, 752, 767, 769, 774, 776, 779, 781, 783, 786, 794, 796, 798, 803, 809, 815, 817, 819, 821, 825, 830, 838, 841, 845, 853, 856, 857, 861, 862, 864, 867, 885, 887, 890, 892, 897, 914, 922, 923, 925, 929, 930, 931, 932, 941, 942, 946, 950, 952, 955, 959, 965, 967, 968, 986, 993, 997, 999, 1001, 1002, 1015, 1018, 1020, 1022, 1025, 1027, 1035, 1040, 1045, 1047, 1049, 1051, 1053, 1055, 1059, 1063, 1065, 1068, 1069, 1072, 1075, 1077, 1080, 1088, 1091, 1101, 1102, 1105, 1111, 1112, 1113, 1114, 1115, 1117, 1122, 1125, 1128, 1130, 1131, 1139, 1141, 1142, 1147, 1156, 1157, 1158, 1163, 1165, 1176, 1181], "topic": [13, 16, 27, 28, 29, 59, 63, 70, 79, 91, 98, 107, 113, 124, 155, 159, 164, 168, 169, 182, 186, 199, 202, 203, 204, 206, 214, 219, 229, 232, 238, 248, 250, 251, 266, 267, 271, 289, 291, 295, 317, 343, 344, 345, 346, 348, 356, 357, 362, 363, 368, 370, 371, 374, 376, 560, 601, 603, 662, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 776, 825, 827, 837, 848, 855, 857, 859, 866, 871, 875, 877, 879, 880, 905, 915, 928, 930, 933, 934, 936, 952, 1002, 1011, 1012, 1016, 1024, 1029, 1046, 1047, 1051, 1078, 1080, 1081, 1082, 1092, 1095, 1103, 1106, 1107, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1126, 1130, 1136, 1150, 1153, 1156, 1160, 1178, 1179, 1186], "other": [13, 27, 29, 33, 39, 40, 51, 53, 59, 63, 64, 79, 81, 83, 111, 112, 122, 141, 144, 150, 162, 163, 164, 165, 166, 169, 173, 177, 186, 190, 194, 198, 199, 201, 202, 203, 214, 222, 231, 237, 238, 247, 250, 254, 275, 296, 303, 304, 313, 316, 320, 340, 343, 360, 364, 368, 388, 394, 403, 412, 430, 433, 444, 460, 464, 467, 469, 475, 476, 479, 480, 481, 487, 568, 583, 585, 586, 592, 594, 595, 598, 599, 600, 610, 638, 660, 683, 692, 693, 724, 728, 740, 742, 744, 746, 757, 758, 763, 776, 778, 796, 815, 817, 851, 858, 861, 862, 878, 883, 885, 887, 907, 924, 929, 930, 931, 934, 938, 941, 950, 951, 957, 958, 970, 975, 978, 984, 993, 997, 999, 1001, 1011, 1018, 1020, 1022, 1031, 1034, 1035, 1036, 1039, 1042, 1045, 1049, 1051, 1052, 1053, 1054, 1060, 1061, 1065, 1067, 1069, 1071, 1072, 1085, 1101, 1128, 1132, 1135, 1137, 1139, 1156, 1168, 1176, 1178, 1179, 1181, 1191], "exampl": [13, 17, 24, 29, 39, 40, 66, 79, 88, 122, 124, 125, 142, 155, 156, 158, 161, 162, 163, 164, 169, 172, 173, 177, 181, 182, 183, 186, 190, 194, 198, 200, 202, 213, 221, 223, 227, 231, 234, 237, 238, 240, 246, 247, 248, 251, 252, 253, 255, 259, 262, 271, 278, 280, 281, 284, 288, 290, 291, 295, 296, 304, 306, 309, 312, 313, 316, 320, 326, 339, 345, 348, 357, 365, 368, 381, 387, 388, 389, 397, 403, 455, 467, 478, 479, 480, 487, 491, 493, 503, 504, 506, 508, 528, 529, 541, 560, 596, 598, 600, 609, 618, 625, 663, 672, 690, 699, 704, 719, 720, 724, 725, 729, 732, 736, 742, 746, 776, 778, 784, 796, 803, 825, 852, 853, 857, 862, 882, 885, 895, 907, 914, 922, 929, 930, 931, 932, 941, 945, 952, 955, 956, 957, 958, 959, 967, 974, 993, 996, 998, 999, 1000, 1001, 1002, 1003, 1009, 1015, 1016, 1017, 1018, 1021, 1022, 1023, 1027, 1034, 1041, 1044, 1046, 1047, 1048, 1050, 1058, 1063, 1072, 1078, 1080, 1096, 1101, 1119, 1120, 1121, 1129, 1130, 1136, 1138, 1144, 1145, 1150, 1155, 1163, 1165, 1178, 1179], "here": [13, 14, 64, 69, 74, 75, 78, 79, 81, 82, 86, 107, 114, 120, 122, 129, 148, 150, 159, 161, 162, 164, 165, 167, 168, 169, 172, 173, 177, 182, 184, 190, 191, 192, 194, 198, 200, 203, 213, 214, 218, 221, 222, 223, 224, 229, 232, 240, 241, 245, 248, 250, 254, 267, 269, 271, 275, 278, 280, 284, 287, 289, 296, 299, 314, 329, 332, 343, 348, 354, 357, 360, 361, 363, 376, 379, 444, 446, 453, 460, 475, 476, 482, 484, 504, 509, 520, 523, 526, 528, 539, 541, 543, 558, 560, 568, 582, 585, 586, 589, 595, 601, 603, 607, 619, 647, 653, 673, 675, 676, 682, 693, 699, 704, 710, 720, 724, 729, 732, 734, 740, 742, 745, 754, 768, 779, 793, 798, 800, 803, 815, 821, 825, 851, 885, 922, 924, 929, 930, 931, 938, 942, 949, 955, 959, 965, 970, 983, 992, 996, 997, 1008, 1011, 1015, 1017, 1020, 1021, 1022, 1023, 1035, 1038, 1042, 1047, 1050, 1051, 1058, 1064, 1074, 1075, 1081, 1102, 1105, 1122, 1128, 1129, 1130, 1131, 1136, 1156, 1158, 1161, 1165, 1179, 1181], "discuss": [13, 42, 50, 124, 194, 198, 199, 201, 203, 238, 248, 284, 288, 289, 312, 327, 357, 361, 364, 365, 368, 370, 371, 375, 477, 565, 568, 571, 574, 577, 580, 750, 756, 805, 838, 885, 992, 996, 1025, 1163, 1165, 1168, 1179], "over": [13, 33, 34, 35, 38, 42, 62, 66, 90, 98, 129, 130, 142, 155, 158, 159, 161, 162, 164, 166, 167, 172, 182, 186, 194, 198, 200, 201, 202, 213, 218, 221, 223, 224, 231, 236, 237, 238, 240, 243, 246, 274, 278, 281, 284, 290, 291, 307, 312, 316, 327, 342, 357, 360, 403, 414, 415, 430, 444, 464, 474, 482, 492, 506, 583, 589, 617, 635, 647, 675, 682, 730, 731, 749, 772, 825, 922, 926, 930, 932, 938, 959, 973, 981, 984, 999, 1011, 1013, 1018, 1021, 1058, 1071, 1075], "lwn": [13, 39, 179, 805, 817, 835, 1171], "attribut": [13, 120, 159, 162, 164, 179, 198, 212, 218, 222, 231, 234, 237, 242, 244, 249, 250, 254, 257, 260, 264, 265, 272, 275, 279, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 350, 352, 361, 368, 442, 458, 460, 472, 487, 754, 776, 857, 863, 884, 888, 955, 967, 968, 985, 986, 993, 997, 1021, 1022, 1035, 1037, 1048, 1074, 1128, 1192], "sharealik": 13, "cc": [13, 23, 32, 144, 180, 188, 189, 190, 267, 467, 489, 538, 540, 541, 561, 564, 567, 568, 570, 571, 573, 574, 576, 577, 579, 602, 740, 741, 746, 803, 991, 992, 995, 996, 1001, 1162, 1163, 1165, 1167, 1168], "BY": [13, 23, 35, 710], "sa": [13, 23, 32, 983], "don": [13, 24, 58, 62, 79, 85, 124, 129, 137, 150, 155, 161, 162, 163, 164, 167, 168, 169, 177, 192, 194, 198, 202, 213, 214, 224, 231, 235, 237, 238, 240, 247, 250, 302, 314, 365, 389, 430, 442, 445, 446, 448, 454, 460, 464, 466, 483, 540, 568, 574, 583, 584, 599, 600, 607, 617, 653, 660, 690, 693, 695, 710, 724, 725, 737, 746, 751, 756, 793, 798, 817, 825, 830, 860, 885, 887, 892, 898, 909, 922, 925, 929, 930, 934, 942, 946, 947, 948, 949, 968, 969, 970, 975, 996, 997, 1002, 1023, 1031, 1033, 1047, 1050, 1054, 1078, 1132, 1138, 1145, 1151, 1162, 1168], "t": [13, 24, 43, 50, 58, 62, 64, 66, 79, 85, 124, 129, 137, 141, 150, 155, 159, 161, 163, 164, 167, 168, 169, 172, 173, 177, 179, 181, 192, 194, 195, 198, 201, 202, 205, 210, 212, 213, 214, 218, 224, 227, 231, 234, 235, 237, 238, 240, 242, 244, 247, 248, 250, 254, 257, 260, 263, 269, 272, 275, 280, 281, 282, 284, 286, 292, 296, 302, 314, 317, 318, 324, 330, 336, 340, 343, 349, 351, 352, 354, 365, 377, 379, 380, 382, 388, 389, 399, 414, 420, 422, 425, 430, 440, 442, 444, 445, 446, 448, 454, 460, 464, 466, 469, 483, 536, 538, 540, 560, 568, 574, 583, 584, 586, 593, 599, 600, 607, 609, 610, 617, 621, 653, 660, 682, 683, 685, 690, 692, 693, 695, 699, 700, 701, 702, 710, 713, 724, 725, 730, 736, 737, 740, 741, 742, 744, 746, 749, 751, 754, 756, 784, 793, 798, 805, 817, 819, 825, 830, 842, 845, 851, 852, 853, 860, 862, 885, 886, 887, 891, 892, 898, 904, 907, 909, 922, 925, 929, 930, 931, 934, 938, 942, 946, 947, 948, 949, 956, 968, 969, 970, 975, 985, 992, 993, 996, 997, 999, 1000, 1002, 1011, 1014, 1017, 1023, 1024, 1031, 1033, 1035, 1047, 1050, 1053, 1054, 1055, 1061, 1067, 1071, 1073, 1074, 1075, 1078, 1080, 1127, 1132, 1136, 1138, 1145, 1151, 1162, 1163, 1168, 1178], "want": [13, 17, 27, 29, 30, 45, 50, 62, 64, 79, 85, 125, 130, 135, 137, 141, 144, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 177, 182, 185, 190, 194, 198, 201, 202, 213, 214, 221, 224, 231, 238, 242, 244, 278, 280, 281, 284, 306, 343, 354, 368, 390, 402, 418, 446, 458, 460, 464, 468, 469, 484, 487, 508, 527, 536, 541, 560, 571, 584, 589, 592, 600, 625, 660, 676, 690, 695, 710, 731, 736, 742, 744, 745, 746, 764, 776, 781, 800, 825, 830, 860, 862, 864, 867, 882, 885, 886, 904, 922, 925, 929, 930, 931, 942, 946, 947, 948, 949, 954, 968, 983, 985, 986, 987, 996, 999, 1001, 1011, 1013, 1015, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1026, 1030, 1037, 1042, 1046, 1053, 1062, 1065, 1075, 1079, 1081, 1117, 1122, 1132, 1136, 1137, 1139, 1141, 1145, 1156, 1158, 1159, 1163, 1176, 1181], "anybodi": [13, 66, 162, 167, 194, 213, 214, 447, 957, 968, 1168], "monei": [13, 163, 166, 169, 237, 864, 1080], "my": [13, 17, 24, 28, 32, 39, 59, 63, 64, 66, 98, 122, 144, 150, 159, 161, 162, 163, 165, 166, 168, 169, 172, 173, 177, 190, 194, 198, 201, 214, 221, 248, 262, 264, 278, 288, 330, 354, 357, 362, 375, 454, 465, 487, 541, 577, 595, 606, 660, 742, 763, 776, 809, 821, 825, 827, 853, 860, 875, 877, 882, 888, 909, 922, 929, 931, 933, 934, 941, 942, 947, 948, 949, 958, 993, 1023, 1026, 1035, 1054, 1077, 1117, 1139, 1144, 1145, 1156, 1176], "without": [13, 119, 161, 162, 163, 164, 172, 173, 198, 242, 306, 327, 390, 414, 421, 447, 450, 454, 459, 464, 475, 487, 492, 504, 571, 577, 583, 589, 653, 660, 682, 683, 684, 710, 722, 728, 730, 731, 736, 742, 748, 749, 756, 775, 777, 778, 796, 809, 825, 864, 865, 907, 931, 933, 942, 968, 987, 992, 993, 997, 1020, 1021, 1024, 1025, 1027, 1034, 1035, 1036, 1038, 1040, 1042, 1049, 1054, 1071, 1156, 1158, 1176, 1181], "modif": [13, 55, 107, 142, 177, 240, 390, 392, 398, 403, 434, 464, 487, 492, 539, 597, 757, 776, 798, 825, 870, 886, 907, 1034, 1054, 1071, 1132, 1168], "back": [13, 29, 32, 64, 67, 122, 163, 164, 167, 173, 198, 200, 202, 227, 235, 240, 251, 253, 271, 286, 306, 309, 440, 455, 506, 531, 560, 580, 600, 614, 619, 657, 690, 704, 739, 746, 758, 778, 793, 798, 807, 825, 827, 856, 888, 922, 929, 942, 983, 993, 999, 1018, 1025, 1038, 1042, 1054, 1082, 1116, 1117, 1118, 1121, 1147], "m": [13, 23, 32, 38, 60, 62, 146, 148, 163, 164, 165, 167, 169, 172, 177, 190, 195, 200, 205, 214, 218, 227, 228, 229, 231, 235, 250, 254, 260, 262, 267, 279, 314, 324, 340, 353, 357, 358, 359, 364, 378, 466, 489, 535, 538, 539, 540, 541, 577, 602, 710, 732, 741, 793, 794, 800, 803, 835, 862, 864, 885, 929, 942, 987, 1040, 1077, 1078, 1085, 1110, 1111, 1128, 1138, 1151, 1156, 1158, 1163], "lawyer": 13, "understand": [13, 124, 161, 162, 164, 168, 169, 172, 173, 177, 186, 194, 198, 223, 250, 281, 284, 287, 289, 290, 291, 306, 309, 312, 316, 359, 368, 396, 444, 453, 460, 492, 528, 669, 690, 699, 720, 731, 825, 864, 870, 922, 1042, 1080, 1123, 1128, 1129, 1146, 1176, 1177, 1178], "permit": [13, 164, 169, 214, 278, 354, 565, 586, 593, 929, 940, 984, 1048, 1148], "exactli": [13, 79, 162, 164, 186, 192, 221, 291, 348, 382, 422, 528, 539, 617, 693, 730, 825, 931, 956, 957, 997, 1015, 1131, 1150], "gnu": [13, 173, 178, 214, 223, 354, 360, 376, 461, 462, 467, 469, 592, 741, 778, 805, 826, 885, 1000, 1001, 1011, 1013, 1015, 1174, 1178], "free": [13, 32, 168, 173, 189, 214, 354, 437, 451, 489, 566, 586, 592, 594, 654, 673, 674, 676, 677, 693, 720, 739, 740, 741, 761, 789, 796, 827, 947, 948, 949, 961, 984, 997, 999, 1129, 1139, 1148, 1173], "document": [13, 24, 40, 42, 66, 79, 87, 124, 129, 159, 162, 164, 166, 173, 174, 180, 183, 190, 202, 214, 220, 221, 229, 231, 236, 237, 238, 240, 247, 250, 254, 267, 269, 271, 280, 287, 289, 292, 313, 315, 333, 343, 348, 357, 364, 365, 440, 441, 444, 451, 467, 468, 469, 470, 472, 475, 476, 477, 478, 479, 480, 492, 539, 558, 599, 603, 617, 618, 662, 673, 675, 685, 690, 697, 699, 704, 720, 721, 727, 729, 732, 734, 741, 742, 743, 745, 752, 753, 754, 756, 758, 772, 776, 796, 798, 821, 825, 826, 833, 837, 851, 857, 864, 871, 875, 877, 879, 909, 910, 911, 913, 914, 916, 917, 925, 929, 930, 931, 965, 972, 980, 1013, 1015, 1016, 1020, 1022, 1023, 1027, 1031, 1033, 1035, 1041, 1058, 1068, 1069, 1119, 1131, 1134, 1141, 1142, 1145, 1147, 1154, 1157, 1164, 1165, 1184, 1185], "ago": [13, 164, 168, 224, 850], "wa": [13, 37, 53, 66, 79, 122, 130, 137, 142, 158, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 177, 179, 181, 182, 183, 185, 189, 190, 195, 197, 198, 201, 205, 211, 212, 218, 221, 224, 227, 228, 238, 240, 242, 244, 251, 254, 263, 275, 282, 288, 291, 296, 314, 326, 330, 357, 362, 375, 378, 425, 450, 470, 574, 582, 583, 592, 593, 638, 667, 674, 675, 676, 677, 678, 679, 686, 690, 693, 748, 776, 778, 800, 807, 815, 821, 860, 882, 912, 914, 922, 931, 958, 978, 997, 1022, 1054, 1128, 1142, 1145, 1151, 1156, 1158, 1161, 1171, 1173, 1174, 1175, 1176, 1188, 1194], "debian": [13, 79, 150, 151, 152, 169, 173, 177, 179, 191, 202, 214, 299, 354, 375, 554, 778, 825, 924, 1001, 1013, 1158, 1163], "resolut": [13, 252, 254, 447, 695, 757, 803, 835, 931], "us": [13, 14, 17, 21, 24, 39, 40, 45, 48, 54, 59, 60, 62, 63, 64, 66, 69, 71, 72, 75, 78, 79, 82, 83, 85, 86, 87, 89, 90, 98, 107, 108, 124, 125, 126, 128, 129, 130, 131, 132, 135, 137, 140, 141, 142, 154, 155, 157, 158, 159, 161, 162, 164, 165, 168, 172, 174, 177, 179, 182, 186, 188, 189, 191, 194, 198, 200, 201, 213, 214, 219, 222, 229, 231, 232, 234, 235, 238, 239, 241, 245, 247, 248, 250, 254, 257, 259, 260, 262, 267, 269, 271, 275, 278, 280, 281, 282, 284, 286, 287, 288, 289, 290, 291, 292, 295, 296, 301, 304, 309, 312, 313, 316, 317, 318, 320, 324, 326, 327, 330, 336, 342, 343, 348, 354, 357, 360, 362, 363, 366, 375, 386, 389, 390, 393, 394, 395, 398, 400, 409, 410, 412, 414, 415, 419, 420, 421, 424, 425, 426, 428, 432, 433, 436, 439, 443, 447, 448, 452, 454, 455, 456, 460, 461, 462, 464, 466, 467, 469, 474, 475, 476, 477, 480, 482, 483, 485, 486, 489, 492, 493, 494, 496, 503, 506, 507, 508, 526, 528, 529, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 554, 558, 559, 560, 561, 564, 567, 570, 573, 576, 579, 584, 586, 587, 591, 592, 595, 597, 599, 600, 601, 603, 604, 612, 613, 614, 615, 616, 618, 619, 620, 621, 622, 623, 626, 629, 630, 631, 635, 638, 639, 640, 641, 642, 643, 647, 653, 656, 657, 659, 660, 663, 664, 666, 667, 669, 671, 672, 673, 674, 675, 676, 677, 679, 681, 682, 684, 685, 686, 687, 689, 691, 693, 697, 699, 704, 710, 712, 719, 720, 722, 724, 725, 727, 729, 732, 737, 741, 742, 743, 744, 746, 748, 752, 754, 757, 762, 763, 772, 775, 776, 777, 778, 783, 784, 786, 788, 791, 793, 794, 796, 798, 800, 803, 805, 809, 811, 813, 817, 819, 821, 825, 826, 828, 830, 838, 839, 841, 844, 845, 851, 852, 853, 856, 860, 861, 864, 865, 867, 869, 871, 877, 882, 885, 887, 890, 891, 892, 894, 904, 910, 912, 916, 921, 922, 925, 926, 928, 932, 933, 934, 941, 942, 945, 951, 952, 955, 956, 957, 959, 963, 965, 966, 968, 970, 971, 972, 974, 975, 978, 980, 981, 984, 985, 988, 991, 992, 993, 995, 996, 997, 999, 1002, 1009, 1010, 1013, 1014, 1015, 1016, 1017, 1021, 1024, 1025, 1027, 1028, 1029, 1030, 1031, 1034, 1035, 1040, 1042, 1044, 1046, 1047, 1048, 1050, 1054, 1056, 1058, 1062, 1063, 1064, 1065, 1068, 1071, 1073, 1075, 1078, 1080, 1083, 1084, 1085, 1088, 1089, 1090, 1094, 1096, 1099, 1100, 1101, 1102, 1106, 1108, 1112, 1113, 1114, 1115, 1117, 1118, 1119, 1120, 1122, 1123, 1125, 1126, 1128, 1129, 1130, 1131, 1132, 1135, 1136, 1139, 1141, 1142, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1156, 1159, 1162, 1163, 1165, 1167, 1168, 1176, 1178, 1179, 1181], "gfdl": 13, "becaus": [13, 17, 38, 62, 67, 81, 122, 156, 161, 162, 164, 173, 177, 186, 194, 198, 200, 214, 224, 231, 237, 247, 250, 382, 403, 442, 451, 454, 457, 464, 466, 475, 484, 487, 504, 538, 541, 584, 585, 592, 595, 635, 657, 676, 732, 740, 743, 794, 805, 823, 825, 864, 904, 922, 929, 930, 931, 940, 951, 952, 955, 958, 972, 978, 993, 996, 997, 1020, 1023, 1049, 1079, 1136, 1151, 1158, 1163, 1176], "too": [13, 27, 53, 56, 64, 81, 137, 162, 164, 169, 178, 191, 194, 210, 221, 223, 240, 250, 254, 257, 266, 267, 269, 280, 282, 290, 291, 296, 312, 314, 326, 327, 399, 444, 454, 464, 478, 484, 583, 597, 704, 706, 710, 722, 723, 724, 730, 736, 742, 766, 776, 777, 778, 823, 825, 830, 857, 922, 931, 932, 938, 955, 968, 985, 1001, 1020, 1021, 1022, 1025, 1071, 1075, 1152, 1176], "restrict": [13, 163, 192, 202, 442, 447, 476, 484, 491, 526, 607, 776, 823, 852, 853, 941, 1136], "articl": [13, 177, 179, 805, 817, 835, 929, 931, 1011], "describ": [13, 66, 108, 124, 126, 128, 159, 161, 162, 163, 164, 167, 169, 172, 173, 188, 214, 250, 254, 262, 288, 296, 299, 354, 487, 496, 542, 561, 564, 567, 570, 573, 576, 579, 732, 746, 825, 835, 858, 885, 931, 936, 988, 991, 995, 1000, 1008, 1014, 1015, 1044, 1128, 1162, 1165, 1167], "pretti": [13, 163, 164, 186, 200, 204, 223, 240, 250, 454, 469, 617, 674, 749, 1018, 1148], "same": [13, 17, 24, 28, 31, 39, 40, 43, 44, 66, 129, 142, 162, 163, 164, 166, 168, 169, 172, 173, 177, 182, 183, 184, 186, 194, 195, 200, 203, 214, 222, 226, 231, 237, 240, 247, 248, 250, 253, 254, 272, 281, 284, 290, 291, 296, 312, 313, 314, 324, 340, 344, 345, 354, 361, 386, 390, 401, 402, 403, 420, 421, 425, 430, 433, 442, 444, 448, 450, 454, 455, 458, 459, 469, 487, 491, 494, 495, 506, 525, 526, 534, 538, 558, 560, 567, 569, 583, 586, 592, 595, 598, 617, 620, 626, 635, 638, 639, 640, 664, 675, 683, 688, 695, 697, 699, 702, 704, 728, 729, 732, 744, 745, 746, 752, 793, 794, 798, 803, 805, 807, 815, 817, 823, 825, 841, 857, 863, 869, 885, 886, 888, 912, 922, 929, 930, 931, 932, 941, 942, 948, 954, 968, 969, 970, 983, 987, 993, 997, 999, 1015, 1021, 1022, 1025, 1030, 1031, 1034, 1036, 1040, 1042, 1058, 1060, 1063, 1068, 1070, 1071, 1072, 1105, 1113, 1115, 1129, 1131, 1132, 1135, 1136, 1139, 1141, 1144, 1145, 1146, 1156, 1158, 1163], "issu": [13, 162, 165, 172, 173, 224, 289, 290, 291, 312, 327, 330, 377, 390, 448, 961, 987, 996, 1013, 1031], "how": [13, 23, 24, 37, 42, 45, 50, 66, 71, 72, 76, 78, 79, 82, 83, 85, 86, 87, 88, 89, 92, 105, 122, 124, 129, 136, 137, 148, 150, 158, 159, 162, 165, 167, 168, 169, 173, 174, 177, 182, 184, 186, 190, 191, 197, 198, 199, 200, 201, 202, 203, 214, 219, 221, 222, 223, 229, 231, 232, 234, 235, 237, 238, 240, 243, 245, 248, 259, 262, 266, 267, 271, 278, 281, 284, 286, 287, 288, 289, 290, 291, 295, 301, 304, 306, 312, 313, 316, 317, 320, 343, 359, 360, 364, 375, 390, 396, 421, 428, 430, 431, 442, 444, 446, 448, 453, 457, 464, 466, 468, 475, 489, 495, 525, 528, 536, 539, 560, 577, 584, 592, 593, 596, 607, 617, 656, 660, 666, 676, 682, 704, 741, 744, 745, 746, 756, 760, 772, 773, 779, 786, 788, 789, 803, 815, 825, 830, 841, 852, 853, 858, 865, 885, 904, 912, 918, 922, 929, 930, 931, 939, 947, 948, 949, 952, 955, 958, 959, 965, 978, 981, 984, 985, 987, 992, 996, 997, 1009, 1011, 1013, 1015, 1028, 1029, 1046, 1047, 1050, 1064, 1067, 1081, 1119, 1120, 1123, 1128, 1129, 1142, 1144, 1145, 1148, 1156, 1159, 1165, 1168, 1178, 1179, 1181], "do": [13, 27, 32, 40, 43, 45, 50, 58, 59, 60, 63, 64, 79, 84, 86, 90, 92, 98, 124, 125, 132, 137, 141, 142, 145, 161, 162, 163, 164, 165, 166, 167, 168, 169, 173, 177, 178, 179, 181, 182, 183, 186, 190, 191, 194, 198, 199, 202, 212, 213, 214, 222, 224, 231, 234, 238, 240, 242, 244, 245, 248, 250, 253, 254, 260, 262, 264, 267, 269, 278, 281, 284, 313, 314, 343, 345, 352, 354, 357, 359, 393, 412, 414, 415, 417, 418, 419, 424, 425, 426, 432, 433, 436, 439, 442, 443, 450, 452, 456, 461, 462, 464, 466, 468, 484, 489, 492, 495, 503, 504, 525, 527, 539, 560, 568, 574, 577, 583, 585, 597, 601, 603, 604, 607, 644, 657, 660, 674, 675, 676, 684, 690, 695, 699, 721, 722, 728, 732, 734, 740, 741, 742, 744, 745, 746, 774, 775, 777, 778, 798, 802, 813, 817, 821, 823, 825, 850, 854, 855, 858, 862, 865, 869, 870, 879, 881, 886, 890, 892, 921, 922, 925, 929, 930, 931, 933, 934, 940, 942, 946, 947, 948, 949, 950, 951, 957, 968, 969, 971, 975, 981, 983, 984, 987, 989, 992, 997, 1015, 1016, 1018, 1020, 1022, 1023, 1024, 1027, 1036, 1046, 1047, 1048, 1051, 1054, 1058, 1064, 1065, 1078, 1080, 1099, 1123, 1129, 1130, 1137, 1138, 1145, 1148, 1156, 1163, 1165, 1181], "choos": [13, 27, 161, 162, 173, 186, 194, 577, 825, 922, 929, 931, 1014, 1047, 1054, 1067, 1129, 1136, 1158], "altogeth": [13, 172, 221, 290, 291, 312, 693, 833, 1025], "have": [13, 27, 28, 30, 37, 43, 50, 66, 70, 81, 83, 85, 103, 111, 112, 124, 125, 129, 133, 137, 140, 142, 144, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 177, 182, 183, 184, 186, 190, 191, 192, 194, 198, 201, 202, 213, 214, 219, 221, 222, 223, 224, 231, 234, 235, 237, 238, 245, 250, 254, 257, 267, 269, 271, 278, 280, 281, 284, 287, 288, 290, 291, 295, 296, 316, 317, 343, 348, 357, 360, 362, 389, 390, 394, 403, 422, 424, 444, 446, 449, 450, 454, 458, 460, 465, 467, 470, 474, 475, 479, 482, 483, 484, 488, 491, 492, 504, 525, 528, 538, 541, 550, 577, 583, 587, 591, 593, 595, 600, 601, 603, 604, 635, 641, 657, 664, 669, 675, 676, 677, 681, 682, 686, 694, 697, 699, 710, 719, 724, 728, 729, 731, 734, 737, 741, 742, 745, 746, 773, 789, 793, 794, 796, 798, 803, 805, 817, 825, 828, 833, 841, 850, 858, 862, 864, 867, 868, 870, 877, 892, 912, 922, 929, 930, 931, 932, 934, 938, 940, 942, 946, 947, 949, 954, 959, 961, 967, 975, 992, 996, 997, 1000, 1001, 1009, 1013, 1014, 1017, 1018, 1020, 1023, 1031, 1035, 1036, 1040, 1050, 1053, 1054, 1058, 1065, 1072, 1083, 1087, 1097, 1102, 1118, 1123, 1128, 1130, 1131, 1132, 1136, 1139, 1141, 1145, 1148, 1151, 1156, 1158, 1163, 1165, 1178, 1179], "idea": [13, 14, 136, 161, 162, 222, 235, 244, 254, 287, 289, 290, 291, 306, 309, 316, 448, 672, 694, 732, 740, 760, 825, 922, 957, 967, 987, 1011, 1022, 1046, 1054, 1181], "choosealicens": 13, "appear": [13, 122, 162, 163, 164, 165, 166, 167, 168, 169, 172, 182, 186, 190, 192, 194, 195, 214, 223, 250, 290, 291, 312, 379, 422, 425, 469, 470, 487, 558, 599, 742, 763, 821, 825, 833, 849, 929, 930, 931, 942, 1000, 1022, 1094, 1095, 1105, 1114, 1140, 1145], "help": [13, 29, 126, 161, 162, 164, 165, 173, 177, 195, 214, 218, 223, 231, 237, 242, 244, 247, 250, 254, 257, 260, 262, 275, 282, 287, 291, 296, 314, 318, 324, 330, 336, 340, 348, 352, 357, 375, 425, 446, 448, 450, 451, 460, 469, 586, 589, 595, 682, 695, 730, 740, 742, 796, 864, 924, 929, 1014, 1046, 1049, 1075, 1078, 1148, 1156, 1163, 1178], "happen": [13, 27, 111, 112, 122, 125, 141, 161, 162, 164, 177, 194, 198, 202, 221, 240, 304, 320, 362, 430, 442, 446, 450, 464, 469, 589, 606, 678, 710, 724, 727, 749, 788, 821, 825, 842, 857, 858, 862, 931, 955, 957, 967, 972, 996, 1034, 1035, 1074, 1088, 1091, 1105, 1122, 1128, 1156, 1165, 1178], "clone": [13, 62, 78, 110, 124, 144, 154, 164, 165, 168, 189, 191, 194, 211, 223, 224, 240, 267, 269, 299, 306, 309, 357, 362, 525, 528, 602, 798, 825, 826, 929, 1013, 1014], "jfasch": [13, 40, 43, 62, 107, 122, 124, 142, 144, 158, 159, 165, 166, 167, 172, 173, 177, 181, 190, 191, 192, 195, 198, 211, 221, 231, 234, 237, 238, 240, 242, 247, 250, 257, 260, 262, 267, 269, 275, 278, 280, 281, 282, 287, 288, 289, 291, 292, 295, 296, 301, 305, 306, 309, 313, 317, 318, 321, 323, 324, 327, 329, 330, 335, 336, 339, 356, 357, 362, 365, 467, 469, 470, 472, 473, 475, 476, 478, 480, 489, 525, 539, 540, 541, 542, 560, 602, 662, 740, 741, 742, 776, 798, 800, 825, 851, 852, 853, 856, 857, 860, 862, 867, 870, 881, 886, 887, 888, 904, 907, 909, 910, 914, 916, 918, 929, 932, 940, 941, 942, 947, 953, 955, 956, 957, 978, 983, 999, 1000, 1001, 1002, 1011, 1013, 1014, 1015, 1016, 1017, 1020, 1022, 1023, 1026, 1050, 1069, 1075, 1078, 1101, 1144, 1145, 1156, 1158], "home": [13, 32, 40, 42, 43, 50, 62, 66, 101, 122, 144, 158, 159, 163, 165, 166, 167, 169, 173, 177, 190, 191, 192, 195, 214, 221, 231, 234, 235, 237, 242, 247, 250, 257, 260, 262, 267, 269, 275, 278, 280, 282, 292, 296, 318, 324, 330, 336, 365, 460, 467, 469, 470, 472, 473, 475, 476, 478, 480, 489, 539, 540, 541, 542, 602, 662, 695, 740, 741, 742, 776, 778, 800, 825, 851, 852, 853, 855, 860, 862, 864, 865, 867, 870, 875, 877, 879, 881, 882, 885, 886, 888, 889, 890, 891, 892, 896, 899, 902, 905, 907, 909, 910, 916, 921, 932, 933, 938, 940, 941, 978, 980, 996, 999, 1000, 1001, 1011, 1013, 1014, 1015, 1016, 1017, 1020, 1023, 1026, 1075, 1101, 1110, 1144, 1145, 1156, 1158], "built": [13, 28, 124, 131, 161, 162, 164, 165, 168, 173, 190, 195, 197, 198, 206, 207, 219, 222, 231, 237, 242, 245, 247, 248, 250, 254, 262, 271, 275, 278, 280, 295, 304, 313, 317, 320, 324, 330, 340, 392, 396, 420, 441, 467, 475, 478, 479, 503, 525, 638, 695, 751, 756, 794, 798, 800, 825, 929, 931, 942, 1000, 1001, 1002, 1007, 1015, 1020, 1023, 1027, 1043, 1058, 1074, 1123, 1129, 1130, 1147, 1156, 1158, 1159, 1174, 1178, 1186], "wonder": [13, 793, 811, 838, 1025], "gener": [13, 23, 24, 29, 39, 66, 69, 70, 79, 81, 82, 110, 111, 112, 155, 159, 162, 166, 169, 174, 181, 184, 194, 198, 199, 201, 202, 203, 204, 213, 221, 229, 230, 231, 235, 236, 238, 239, 240, 241, 243, 245, 246, 247, 251, 252, 253, 254, 259, 260, 274, 276, 280, 289, 294, 296, 300, 301, 303, 315, 317, 322, 323, 325, 327, 328, 329, 331, 334, 335, 336, 338, 339, 340, 360, 363, 380, 390, 392, 398, 403, 414, 424, 442, 448, 451, 453, 454, 457, 467, 468, 469, 473, 528, 530, 536, 539, 547, 582, 589, 593, 609, 617, 618, 621, 672, 690, 693, 720, 734, 740, 746, 754, 805, 807, 809, 828, 858, 869, 885, 922, 924, 929, 942, 967, 996, 997, 999, 1002, 1013, 1014, 1020, 1021, 1022, 1024, 1042, 1048, 1050, 1051, 1052, 1058, 1062, 1079, 1080, 1081, 1082, 1095, 1121, 1123, 1130, 1132, 1133, 1135, 1136, 1145, 1151, 1156, 1179, 1180, 1187], "content": [13, 27, 39, 49, 50, 57, 64, 122, 194, 201, 202, 203, 214, 222, 240, 242, 250, 272, 278, 318, 349, 424, 427, 429, 542, 585, 635, 643, 731, 827, 830, 851, 852, 853, 867, 870, 872, 873, 907, 910, 918, 930, 934, 957, 999, 1054, 1073, 1079, 1092, 1122, 1142, 1158, 1191], "which": [13, 14, 17, 28, 57, 60, 69, 79, 81, 84, 90, 111, 112, 114, 115, 119, 120, 125, 141, 147, 154, 155, 158, 159, 161, 162, 163, 164, 165, 167, 168, 169, 173, 177, 182, 184, 190, 191, 192, 194, 198, 200, 202, 214, 221, 223, 231, 235, 237, 238, 250, 253, 254, 262, 263, 280, 281, 284, 286, 291, 296, 309, 313, 326, 375, 393, 398, 399, 405, 409, 430, 442, 454, 464, 465, 466, 467, 469, 472, 474, 475, 482, 484, 495, 525, 526, 527, 528, 531, 533, 534, 535, 536, 537, 539, 554, 565, 571, 584, 591, 593, 597, 599, 607, 654, 664, 668, 669, 675, 676, 678, 687, 693, 694, 732, 736, 737, 745, 746, 758, 766, 774, 776, 778, 794, 803, 825, 827, 845, 851, 858, 862, 864, 867, 868, 869, 870, 876, 878, 881, 885, 898, 909, 912, 921, 922, 925, 929, 930, 931, 942, 951, 952, 955, 957, 959, 960, 962, 967, 972, 979, 981, 983, 984, 992, 997, 1000, 1005, 1013, 1017, 1020, 1022, 1024, 1034, 1035, 1039, 1047, 1051, 1054, 1063, 1094, 1113, 1115, 1118, 1120, 1136, 1138, 1139, 1141, 1144, 1158, 1163, 1176], "differ": [13, 35, 38, 59, 63, 70, 77, 82, 86, 89, 149, 161, 162, 167, 169, 173, 183, 190, 194, 198, 210, 234, 235, 278, 280, 286, 287, 289, 296, 314, 326, 343, 378, 390, 398, 403, 404, 420, 421, 424, 442, 448, 450, 454, 464, 466, 483, 484, 528, 539, 541, 560, 567, 568, 577, 586, 587, 591, 597, 599, 600, 609, 613, 618, 657, 660, 664, 686, 699, 702, 729, 744, 757, 762, 776, 798, 803, 817, 823, 825, 845, 850, 856, 860, 861, 863, 882, 907, 922, 925, 929, 931, 938, 949, 957, 959, 972, 981, 983, 984, 1004, 1009, 1014, 1016, 1017, 1022, 1035, 1042, 1050, 1063, 1067, 1072, 1073, 1074, 1132, 1141, 1158, 1159, 1179, 1181], "so": [13, 17, 23, 32, 37, 39, 49, 55, 60, 67, 122, 125, 130, 142, 149, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 177, 181, 182, 183, 184, 185, 186, 190, 191, 192, 194, 195, 206, 207, 212, 220, 222, 223, 224, 233, 234, 235, 264, 278, 286, 288, 292, 304, 316, 320, 330, 336, 343, 352, 357, 360, 375, 389, 393, 394, 402, 404, 420, 430, 431, 433, 442, 446, 448, 450, 451, 455, 465, 467, 470, 472, 477, 478, 482, 504, 506, 525, 541, 554, 593, 600, 604, 617, 640, 647, 656, 663, 672, 721, 731, 736, 739, 740, 742, 757, 784, 786, 789, 794, 798, 800, 803, 825, 838, 850, 864, 865, 867, 869, 875, 877, 879, 885, 889, 896, 922, 928, 929, 930, 931, 934, 936, 938, 946, 949, 952, 957, 959, 967, 985, 987, 996, 999, 1000, 1001, 1002, 1013, 1015, 1016, 1025, 1026, 1030, 1042, 1047, 1049, 1054, 1071, 1073, 1075, 1077, 1087, 1091, 1097, 1101, 1128, 1131, 1139, 1146, 1149, 1156, 1158, 1162, 1163, 1165, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1178, 1180, 1186, 1189, 1194], "ye": [13, 32, 50, 62, 114, 117, 164, 165, 168, 173, 214, 354, 640, 749, 852, 853, 870, 872, 873, 931, 942, 999, 1067, 1100], "realli": [13, 21, 43, 50, 53, 55, 56, 66, 142, 163, 164, 165, 167, 169, 183, 194, 198, 201, 483, 699, 736, 746, 758, 778, 817, 930, 931, 942, 965, 1123, 1130, 1136], "great": [13, 79, 167, 169, 224, 244, 254, 464, 583, 598, 754, 825, 930, 1176, 1181], "static": [13, 23, 66, 98, 104, 105, 111, 112, 124, 162, 164, 166, 168, 169, 179, 189, 223, 224, 231, 237, 240, 247, 250, 254, 278, 287, 289, 296, 357, 363, 426, 432, 436, 439, 441, 443, 450, 452, 454, 456, 461, 462, 467, 472, 473, 477, 479, 488, 502, 510, 522, 523, 524, 525, 526, 530, 531, 532, 533, 534, 535, 536, 537, 540, 547, 549, 568, 577, 582, 586, 589, 600, 605, 608, 611, 627, 631, 633, 637, 646, 649, 650, 667, 674, 675, 676, 677, 678, 679, 684, 693, 722, 724, 726, 727, 731, 742, 745, 751, 756, 762, 763, 764, 766, 767, 768, 769, 775, 776, 777, 778, 784, 803, 821, 825, 827, 921, 967, 970, 972, 974, 983, 989, 996, 1000, 1001, 1002, 1004, 1005, 1006, 1007, 1009, 1134, 1168, 1171, 1173, 1174, 1175], "It": [13, 21, 39, 43, 45, 55, 59, 60, 63, 79, 130, 137, 141, 150, 161, 162, 163, 164, 167, 168, 169, 172, 173, 182, 184, 186, 190, 191, 195, 200, 201, 214, 223, 224, 231, 237, 240, 247, 250, 254, 262, 267, 269, 278, 281, 284, 287, 313, 326, 370, 371, 387, 398, 402, 420, 425, 448, 450, 464, 482, 487, 492, 495, 504, 506, 528, 531, 532, 539, 540, 586, 666, 678, 695, 696, 732, 742, 763, 778, 789, 825, 852, 853, 864, 867, 882, 921, 922, 930, 931, 952, 957, 959, 960, 962, 975, 979, 984, 1000, 1001, 1011, 1016, 1021, 1023, 1034, 1042, 1046, 1047, 1080, 1096, 1101, 1105, 1108, 1114, 1129, 1135, 1147, 1156, 1157, 1176, 1178, 1179, 1181], "let": [13, 17, 42, 59, 63, 64, 125, 129, 162, 163, 164, 167, 168, 169, 172, 177, 184, 185, 186, 191, 192, 224, 238, 242, 244, 250, 254, 281, 284, 286, 288, 291, 306, 309, 317, 446, 454, 464, 466, 468, 475, 478, 482, 484, 486, 491, 504, 510, 527, 538, 539, 541, 544, 560, 574, 584, 585, 597, 601, 603, 604, 654, 660, 666, 672, 682, 699, 727, 731, 736, 740, 794, 798, 817, 825, 833, 860, 869, 882, 887, 922, 929, 930, 942, 955, 957, 958, 972, 981, 983, 999, 1001, 1011, 1014, 1015, 1021, 1023, 1027, 1064, 1071, 1073, 1080, 1088, 1110, 1118, 1123, 1130, 1131, 1136, 1139, 1156, 1176], "me": [13, 23, 32, 37, 59, 60, 63, 124, 156, 161, 162, 163, 164, 167, 168, 169, 172, 173, 177, 190, 191, 192, 194, 198, 221, 223, 224, 248, 299, 317, 357, 446, 448, 449, 464, 467, 571, 595, 660, 695, 736, 742, 798, 860, 887, 922, 930, 931, 942, 946, 999, 1002, 1011, 1027, 1030, 1071, 1123, 1127, 1157], "focu": [13, 165, 169, 172, 186, 194, 198, 281, 284, 453, 457, 489, 681, 710, 922, 930, 932, 1047, 1130, 1150, 1179], "myself": [13, 158, 159, 169, 190, 198, 213, 229, 798, 860, 882, 887, 904], "ey": [13, 32, 37, 247, 250, 260, 282, 324, 330, 336, 340, 1058], "toward": [13, 194, 363, 446, 506, 635], "consist": [13, 27, 194, 209, 250, 316, 348, 365, 379, 382, 420, 422, 460, 531, 539, 584, 885, 959, 993, 1047, 1048, 1051, 1092, 1101, 1125, 1146], "won": [13, 141, 172, 173, 250, 280, 343, 377, 444, 469, 538, 540, 586, 736, 742, 793, 805, 930, 942, 949, 1002, 1024, 1073], "break": [13, 36, 38, 155, 185, 194, 195, 200, 207, 213, 214, 222, 234, 237, 243, 244, 247, 250, 253, 254, 257, 260, 275, 282, 296, 324, 330, 336, 340, 349, 414, 418, 419, 426, 432, 436, 439, 443, 446, 450, 452, 454, 456, 461, 462, 464, 625, 656, 666, 668, 675, 684, 710, 718, 722, 743, 756, 763, 775, 777, 778, 815, 947, 948, 957, 983, 989, 996, 1027, 1035, 1073, 1136], "move": [13, 54, 64, 100, 114, 118, 124, 137, 146, 150, 159, 163, 173, 191, 199, 202, 213, 224, 240, 265, 268, 277, 278, 289, 298, 299, 333, 342, 357, 360, 464, 465, 478, 522, 531, 560, 585, 586, 593, 594, 595, 596, 598, 644, 690, 710, 722, 732, 734, 738, 741, 743, 744, 747, 754, 755, 756, 774, 775, 777, 778, 794, 827, 849, 852, 853, 854, 855, 888, 889, 890, 891, 894, 895, 896, 897, 899, 905, 921, 922, 946, 947, 984, 1017, 1054, 1152, 1175, 1176, 1177, 1184, 1185], "around": [13, 24, 37, 59, 60, 63, 99, 124, 129, 132, 162, 163, 164, 169, 173, 183, 194, 198, 222, 248, 259, 266, 267, 269, 289, 317, 326, 327, 403, 478, 492, 494, 503, 528, 584, 680, 683, 685, 735, 737, 777, 778, 825, 830, 957, 972, 993, 996, 1017, 1023, 1039, 1043, 1045, 1067, 1119, 1123, 1125, 1129, 1130, 1141, 1142, 1145], "last": [13, 59, 63, 122, 124, 158, 162, 163, 164, 179, 184, 194, 195, 201, 213, 214, 221, 229, 231, 234, 237, 238, 247, 250, 260, 275, 280, 282, 296, 318, 348, 354, 361, 363, 430, 448, 612, 614, 615, 616, 617, 621, 624, 713, 716, 717, 718, 776, 778, 825, 885, 888, 891, 907, 916, 918, 921, 949, 954, 962, 971, 976, 978, 983, 998, 1009, 1020, 1021, 1022, 1023, 1027, 1031, 1035, 1036, 1042, 1043, 1048, 1056, 1064, 1065, 1069, 1071, 1074, 1075, 1085, 1112, 1118, 1120, 1131, 1136, 1144, 1145, 1157, 1164, 1194], "least": [13, 24, 37, 59, 63, 66, 82, 164, 172, 186, 190, 192, 194, 201, 202, 221, 223, 224, 238, 240, 250, 254, 280, 284, 286, 296, 298, 378, 396, 402, 403, 416, 442, 445, 446, 454, 470, 482, 554, 639, 682, 732, 734, 741, 746, 749, 758, 788, 821, 823, 857, 922, 924, 932, 970, 993, 997, 1018, 1027, 1031, 1047, 1048, 1058, 1081, 1129, 1164], "ha": [13, 21, 24, 27, 28, 43, 45, 53, 56, 64, 79, 111, 112, 113, 114, 115, 116, 118, 122, 125, 132, 135, 137, 141, 149, 159, 161, 162, 163, 164, 165, 166, 167, 169, 172, 173, 177, 182, 184, 186, 190, 191, 194, 198, 200, 201, 202, 212, 214, 218, 219, 221, 222, 224, 231, 234, 237, 240, 242, 244, 245, 247, 250, 254, 257, 260, 263, 271, 272, 275, 278, 279, 280, 281, 282, 284, 286, 287, 289, 292, 295, 296, 302, 304, 313, 314, 317, 318, 320, 324, 327, 330, 333, 336, 340, 343, 350, 352, 354, 363, 377, 386, 389, 399, 402, 403, 412, 415, 423, 424, 431, 437, 438, 441, 445, 447, 448, 454, 460, 464, 466, 469, 475, 477, 478, 479, 480, 482, 483, 484, 487, 492, 493, 496, 504, 509, 523, 525, 535, 558, 568, 583, 585, 586, 587, 588, 591, 592, 593, 596, 597, 600, 607, 617, 638, 639, 656, 657, 660, 669, 670, 675, 676, 678, 687, 689, 692, 695, 704, 705, 706, 710, 719, 720, 721, 724, 732, 740, 742, 745, 746, 748, 754, 758, 776, 778, 779, 789, 794, 819, 821, 823, 825, 835, 838, 839, 841, 845, 852, 856, 857, 858, 860, 862, 863, 864, 870, 881, 883, 888, 914, 922, 928, 929, 930, 931, 940, 942, 945, 951, 957, 967, 969, 970, 972, 980, 981, 983, 984, 985, 986, 993, 997, 999, 1013, 1015, 1016, 1018, 1020, 1021, 1022, 1025, 1027, 1030, 1035, 1036, 1037, 1043, 1045, 1047, 1050, 1053, 1054, 1058, 1063, 1064, 1068, 1085, 1105, 1120, 1122, 1123, 1129, 1130, 1131, 1132, 1136, 1144, 1145, 1147, 1149, 1156, 1158, 1163, 1165, 1176, 1178, 1179, 1181, 1184, 1185], "extens": [13, 14, 23, 28, 32, 37, 40, 157, 172, 194, 221, 223, 231, 237, 247, 250, 330, 343, 424, 464, 492, 583, 721, 776, 779, 850, 862, 999, 1030, 1047, 1050, 1151, 1156], "interfac": [13, 53, 56, 60, 73, 74, 75, 79, 81, 83, 86, 107, 114, 119, 120, 125, 126, 127, 128, 129, 130, 132, 134, 135, 137, 141, 142, 158, 159, 162, 179, 181, 182, 189, 198, 224, 238, 240, 252, 270, 271, 278, 287, 305, 317, 321, 346, 347, 357, 358, 359, 363, 366, 375, 376, 464, 470, 471, 476, 481, 482, 483, 484, 487, 488, 494, 502, 506, 508, 509, 530, 534, 536, 560, 582, 607, 655, 657, 679, 721, 728, 729, 745, 746, 762, 763, 777, 778, 921, 922, 927, 929, 931, 965, 999, 1021, 1135, 1175, 1180, 1181, 1187, 1190, 1193], "lot": [13, 66, 70, 93, 98, 159, 161, 162, 164, 169, 173, 191, 194, 198, 214, 291, 360, 396, 445, 450, 454, 460, 474, 577, 654, 778, 809, 819, 825, 854, 855, 864, 885, 921, 930, 947, 999, 1014, 1042, 1047, 1069, 1125, 1177], "littl": [13, 27, 44, 164, 166, 169, 172, 173, 182, 194, 222, 231, 237, 238, 240, 247, 250, 272, 278, 289, 375, 425, 453, 454, 465, 594, 597, 600, 656, 662, 742, 745, 781, 922, 924, 930, 978, 1000, 1070, 1139], "maintain": [13, 28, 30, 54, 71, 81, 159, 161, 162, 169, 191, 200, 221, 223, 231, 235, 237, 247, 250, 259, 357, 371, 450, 464, 632, 682, 693, 803, 825, 833, 835, 837, 968, 999, 1000, 1001, 1003, 1009, 1014, 1015, 1016, 1017, 1065, 1128, 1178], "packag": [13, 21, 23, 29, 32, 62, 98, 105, 124, 145, 151, 152, 158, 163, 177, 192, 194, 195, 198, 199, 201, 208, 213, 219, 221, 222, 223, 229, 231, 235, 237, 238, 241, 245, 247, 248, 250, 251, 253, 256, 259, 262, 280, 290, 291, 295, 299, 304, 309, 313, 316, 317, 320, 323, 330, 335, 339, 357, 358, 359, 360, 364, 375, 376, 467, 469, 472, 473, 778, 798, 921, 929, 930, 1001, 1006, 1009, 1024, 1047, 1054, 1076, 1077, 1079, 1080, 1081, 1082, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1129, 1133, 1137, 1138, 1139, 1144, 1145, 1155, 1156, 1157, 1159, 1160, 1165, 1178], "virtual": [13, 29, 70, 81, 107, 108, 113, 114, 115, 116, 119, 120, 133, 137, 142, 158, 164, 167, 169, 189, 194, 198, 209, 213, 229, 245, 248, 251, 262, 267, 269, 271, 278, 287, 288, 289, 290, 291, 295, 306, 309, 312, 313, 316, 317, 323, 327, 335, 339, 364, 375, 376, 479, 483, 485, 488, 489, 494, 496, 502, 506, 511, 513, 514, 515, 518, 519, 520, 521, 522, 523, 530, 540, 580, 582, 607, 654, 655, 656, 679, 721, 729, 740, 742, 746, 777, 778, 784, 856, 861, 864, 923, 929, 931, 940, 949, 965, 983, 993, 1047, 1050, 1076, 1077, 1078, 1121, 1123, 1124, 1125, 1129, 1137, 1139, 1150, 1153, 1156, 1175, 1182, 1191], "environ": [13, 21, 29, 66, 76, 79, 98, 105, 124, 150, 158, 162, 173, 177, 198, 204, 213, 214, 219, 229, 232, 235, 245, 248, 251, 262, 268, 271, 277, 290, 291, 295, 298, 299, 306, 309, 312, 313, 316, 317, 323, 330, 335, 339, 358, 359, 370, 371, 489, 509, 523, 538, 539, 540, 541, 602, 740, 741, 763, 778, 855, 859, 863, 864, 885, 886, 905, 921, 922, 962, 979, 984, 1000, 1009, 1010, 1011, 1016, 1018, 1030, 1050, 1052, 1076, 1077, 1078, 1121, 1123, 1124, 1125, 1129, 1130, 1137, 1139, 1144, 1145, 1150, 1151, 1153, 1156, 1157, 1163, 1167, 1169], "repo": [13, 122, 144, 173, 177, 189, 192, 203, 330, 343, 348, 357, 361, 362, 550, 551, 552, 553, 555, 556, 557, 798, 825, 827, 1013, 1165], "creat": [13, 17, 21, 24, 39, 42, 44, 54, 59, 62, 63, 64, 78, 100, 102, 103, 110, 114, 118, 124, 128, 129, 145, 148, 155, 158, 162, 163, 164, 166, 169, 172, 173, 177, 179, 181, 182, 183, 198, 199, 200, 201, 202, 203, 214, 219, 227, 232, 237, 238, 240, 245, 247, 250, 254, 259, 262, 267, 268, 269, 277, 278, 286, 289, 290, 291, 295, 296, 298, 299, 301, 306, 309, 313, 316, 317, 357, 362, 381, 458, 460, 466, 467, 480, 482, 484, 487, 488, 489, 502, 503, 504, 508, 510, 511, 525, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 582, 584, 587, 598, 638, 640, 656, 671, 674, 676, 685, 687, 710, 724, 727, 736, 742, 743, 755, 756, 763, 773, 774, 776, 777, 778, 781, 784, 788, 789, 794, 796, 798, 800, 803, 809, 821, 825, 854, 855, 856, 857, 858, 859, 865, 867, 868, 872, 873, 874, 876, 878, 880, 883, 889, 890, 892, 894, 895, 896, 897, 899, 905, 921, 929, 930, 931, 933, 934, 935, 937, 938, 940, 942, 944, 950, 951, 952, 959, 960, 961, 962, 967, 968, 969, 975, 976, 979, 982, 983, 984, 991, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1014, 1015, 1020, 1021, 1023, 1025, 1027, 1031, 1035, 1036, 1037, 1039, 1053, 1054, 1063, 1064, 1065, 1074, 1077, 1078, 1079, 1091, 1099, 1100, 1113, 1114, 1115, 1117, 1118, 1119, 1120, 1123, 1125, 1126, 1127, 1129, 1132, 1135, 1139, 1148, 1156, 1158, 1159, 1178], "popul": [13, 164, 168, 254, 287, 781], "yourself": [13, 162, 169, 173, 184, 240, 409, 585, 602, 607, 830, 887, 970, 993, 1046, 1181], "root": [13, 38, 64, 81, 124, 144, 161, 167, 169, 172, 173, 184, 189, 190, 191, 198, 202, 212, 234, 240, 250, 254, 257, 260, 275, 278, 282, 292, 296, 318, 324, 330, 336, 342, 343, 348, 377, 444, 453, 457, 460, 469, 477, 483, 541, 603, 659, 776, 789, 825, 826, 827, 856, 860, 862, 881, 885, 897, 898, 904, 907, 909, 910, 911, 913, 914, 916, 922, 929, 930, 931, 933, 934, 938, 947, 952, 957, 965, 985, 999, 1002, 1011, 1013, 1022, 1101, 1110, 1111, 1148, 1156], "activ": [13, 167, 177, 179, 202, 262, 682, 805, 807, 811, 819, 860, 862, 917, 1077, 1156, 1158], "txt": [13, 33, 42, 44, 122, 124, 129, 142, 157, 164, 180, 181, 185, 188, 189, 190, 191, 192, 221, 223, 228, 231, 240, 241, 250, 262, 272, 306, 309, 340, 348, 349, 389, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 480, 525, 538, 539, 540, 541, 542, 561, 564, 567, 568, 570, 573, 576, 579, 673, 776, 796, 851, 852, 853, 865, 869, 879, 889, 890, 891, 892, 896, 897, 904, 925, 929, 930, 931, 965, 988, 991, 995, 1000, 1001, 1011, 1022, 1069, 1092, 1110, 1158, 1159, 1162, 1165, 1167], "fedorish": [13, 798, 942, 1139], "your": [13, 43, 66, 103, 110, 124, 141, 161, 162, 164, 165, 166, 167, 168, 169, 172, 173, 177, 178, 191, 194, 197, 198, 202, 214, 222, 223, 240, 248, 254, 267, 269, 271, 278, 281, 284, 326, 343, 354, 363, 365, 409, 444, 452, 454, 456, 461, 462, 464, 473, 483, 487, 508, 525, 528, 539, 541, 542, 599, 673, 674, 676, 677, 684, 690, 698, 722, 763, 775, 777, 778, 800, 817, 825, 830, 851, 852, 853, 855, 862, 864, 865, 874, 875, 876, 877, 878, 879, 880, 886, 889, 890, 891, 892, 894, 903, 921, 922, 929, 931, 933, 934, 938, 942, 957, 959, 1011, 1014, 1025, 1036, 1042, 1047, 1051, 1092, 1106, 1110, 1111, 1123, 1128, 1139, 1149, 1151, 1156, 1157, 1158, 1165, 1181], "mileag": [13, 267, 269, 1139, 1156], "might": [13, 27, 59, 62, 63, 122, 130, 135, 141, 161, 162, 163, 165, 167, 169, 172, 173, 177, 190, 192, 194, 202, 223, 231, 237, 242, 247, 250, 281, 284, 287, 313, 343, 368, 440, 454, 464, 469, 478, 479, 484, 487, 508, 541, 591, 600, 719, 729, 742, 743, 744, 776, 800, 811, 815, 821, 825, 867, 922, 929, 930, 931, 942, 947, 956, 978, 985, 996, 1011, 1014, 1022, 1031, 1034, 1047, 1125, 1139, 1156, 1159, 1163], "vari": [13, 231, 237, 247, 250, 254, 267, 269, 290, 291, 312, 316, 380, 454, 638, 757, 825, 931, 1016, 1135, 1139, 1156, 1176], "dnf": [13, 62, 132, 158, 165, 173, 177, 191, 330, 377, 470, 477, 554, 798, 826, 924, 942, 1001, 1013, 1139, 1163, 1165], "pandoc": 13, "graphviz": [13, 473, 1001], "dia": [13, 234, 292, 907, 1080], "gtest": [13, 44, 66, 124, 189, 190, 191, 192, 377, 482, 483, 484, 486, 487, 489, 491, 504, 506, 507, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 548, 550, 551, 552, 553, 555, 556, 557, 558, 559, 577, 584, 585, 586, 597, 598, 600, 601, 602, 603, 604, 662, 687, 689, 692, 693, 694, 725, 731, 736, 740, 741, 742, 743, 745, 758, 772, 773, 774, 776, 778, 1161], "devel": [13, 132, 158, 173, 191, 470, 472, 477, 798, 1163, 1165], "markdown": [13, 23, 352, 1078], "handl": [13, 21, 29, 46, 75, 129, 156, 162, 182, 194, 198, 199, 201, 203, 209, 222, 224, 229, 231, 235, 238, 239, 247, 252, 259, 271, 278, 288, 295, 296, 306, 309, 317, 322, 328, 334, 338, 357, 362, 364, 370, 371, 378, 418, 425, 430, 446, 450, 470, 530, 560, 582, 597, 607, 640, 644, 666, 675, 676, 677, 710, 712, 739, 742, 754, 755, 777, 778, 784, 788, 807, 819, 855, 858, 859, 921, 929, 944, 946, 947, 948, 949, 950, 951, 952, 954, 957, 959, 960, 962, 970, 976, 979, 982, 984, 987, 993, 996, 1024, 1042, 1047, 1048, 1063, 1073, 1121, 1123, 1175, 1181, 1190], "jupyt": [13, 177, 182, 183, 185, 194, 195, 197, 205, 245, 247, 248, 250, 251, 280, 281, 284, 285, 291, 295, 301, 306, 309, 313, 317, 323, 330, 357, 362, 907, 1047, 1125, 1126, 1130, 1186], "notebook": [13, 32, 177, 181, 182, 183, 185, 194, 197, 205, 238, 245, 248, 250, 251, 253, 256, 259, 262, 271, 274, 280, 281, 284, 285, 291, 295, 301, 306, 309, 313, 317, 323, 324, 329, 335, 339, 342, 362, 1047, 1125, 1130, 1186], "those": [13, 24, 79, 122, 133, 142, 155, 162, 163, 169, 172, 177, 192, 194, 198, 203, 221, 223, 224, 231, 235, 240, 241, 242, 244, 250, 254, 286, 287, 288, 289, 291, 306, 342, 354, 357, 363, 368, 389, 444, 454, 464, 466, 468, 469, 470, 483, 484, 487, 488, 554, 597, 619, 660, 663, 670, 685, 720, 736, 744, 746, 776, 791, 794, 825, 852, 853, 869, 870, 922, 929, 930, 931, 996, 1015, 1016, 1017, 1018, 1022, 1023, 1024, 1030, 1035, 1046, 1087, 1097, 1118, 1128, 1136, 1137, 1142, 1144, 1156, 1178, 1179, 1181], "funki": [13, 17, 164], "graph": [13, 29, 79, 88, 142, 232, 245, 259, 262, 295, 301, 357, 364, 459, 473, 479, 1001, 1015, 1016, 1123, 1129], "histor": [13, 24, 79, 164, 186, 390, 403, 448, 681, 784, 863, 942, 997, 1114, 1168], "baggag": [13, 390, 403, 681, 997, 1114], "convert": [13, 17, 29, 42, 155, 183, 213, 221, 227, 231, 234, 237, 240, 244, 247, 250, 251, 254, 271, 296, 306, 309, 324, 342, 403, 425, 450, 460, 468, 473, 483, 538, 653, 660, 694, 695, 778, 779, 959, 999, 1038, 1080, 1082, 1087, 1094, 1097, 1116, 1117, 1118, 1121, 1136], "draw": [13, 159, 202, 313, 365, 400, 536, 734, 782, 786, 794, 815, 838], "svg": [13, 159], "ani": [13, 39, 45, 49, 119, 142, 146, 155, 158, 161, 162, 163, 164, 167, 169, 173, 177, 182, 186, 197, 200, 202, 214, 221, 223, 231, 237, 247, 250, 254, 265, 266, 267, 275, 291, 296, 313, 326, 343, 364, 365, 398, 442, 450, 464, 487, 492, 534, 535, 536, 537, 541, 542, 554, 571, 589, 592, 618, 656, 664, 669, 682, 685, 687, 704, 710, 728, 729, 732, 741, 742, 743, 745, 746, 754, 776, 783, 784, 796, 798, 817, 825, 835, 842, 852, 853, 862, 865, 872, 873, 876, 877, 878, 885, 897, 907, 922, 929, 930, 931, 934, 957, 968, 972, 992, 1018, 1020, 1021, 1022, 1023, 1027, 1034, 1035, 1042, 1045, 1054, 1059, 1061, 1072, 1073, 1078, 1102, 1104, 1119, 1130, 1145, 1146, 1150, 1151, 1163, 1176, 1181], "That": [13, 85, 99, 100, 122, 124, 125, 129, 133, 161, 162, 163, 164, 167, 172, 173, 177, 186, 194, 198, 201, 240, 264, 268, 270, 284, 287, 289, 368, 432, 433, 436, 439, 443, 452, 456, 461, 462, 470, 483, 484, 494, 506, 508, 510, 526, 528, 541, 588, 592, 674, 684, 722, 748, 754, 755, 775, 777, 778, 852, 853, 855, 856, 858, 859, 861, 862, 871, 874, 875, 876, 877, 878, 879, 880, 885, 921, 922, 930, 933, 934, 935, 936, 937, 940, 958, 962, 976, 982, 984, 1009, 1010, 1021, 1047, 1054, 1113, 1115, 1120, 1149, 1156, 1166, 1176], "sloppili": [13, 955], "track": [13, 122, 165, 169, 177, 201, 221, 231, 237, 247, 250, 741, 798, 825, 826, 830, 862, 1034], "opentrain": [13, 22, 28, 146, 159, 199, 206, 224, 365, 376, 1156, 1186], "recip": [13, 39, 154, 158, 162, 163, 358, 359, 444, 609], "sphinx": [14, 17, 23, 39, 66, 158, 159, 174, 363, 779, 1156], "togeth": [14, 24, 43, 50, 105, 107, 111, 112, 129, 133, 152, 169, 172, 173, 177, 182, 192, 194, 198, 202, 214, 223, 240, 267, 269, 286, 287, 289, 304, 313, 316, 320, 365, 375, 421, 454, 455, 531, 541, 560, 582, 600, 601, 603, 604, 754, 756, 789, 802, 825, 852, 853, 911, 912, 930, 931, 961, 975, 999, 1005, 1009, 1011, 1014, 1018, 1096, 1129, 1149, 1151, 1159, 1161, 1163, 1176, 1178], "form": [14, 29, 164, 169, 182, 186, 210, 231, 237, 238, 247, 250, 287, 289, 376, 441, 457, 496, 504, 506, 545, 546, 558, 656, 779, 825, 830, 833, 857, 907, 931, 1058, 1077, 1080, 1113, 1115, 1118, 1119, 1125, 1131, 1151, 1156, 1176], "short": [14, 32, 35, 43, 107, 142, 162, 169, 177, 190, 194, 198, 201, 202, 203, 213, 214, 231, 235, 236, 237, 242, 245, 247, 248, 252, 270, 286, 287, 288, 289, 290, 291, 380, 396, 398, 403, 407, 408, 433, 442, 488, 502, 530, 542, 582, 587, 591, 778, 821, 827, 830, 864, 885, 910, 929, 931, 942, 949, 959, 981, 986, 1019, 1033, 1056, 1059, 1075, 1147, 1156, 1158, 1176], "video": [14, 22, 156, 165, 167, 169, 180, 194, 197, 198, 201, 206, 219, 222, 223, 245, 289, 292, 295, 465, 732, 922, 930, 1123, 1130, 1139], "explain": [14, 64, 66, 98, 129, 156, 161, 167, 173, 186, 194, 198, 200, 224, 235, 240, 242, 244, 245, 253, 254, 291, 342, 372, 375, 444, 454, 574, 865, 885, 888, 922, 931, 987, 1070, 1123, 1156, 1181], "case": [14, 24, 43, 98, 105, 107, 110, 122, 127, 130, 142, 161, 162, 163, 166, 169, 172, 173, 177, 183, 186, 198, 200, 202, 204, 224, 237, 238, 244, 250, 254, 257, 266, 267, 269, 270, 278, 281, 284, 296, 313, 316, 326, 365, 387, 394, 413, 415, 446, 448, 466, 469, 472, 481, 488, 492, 495, 530, 538, 539, 541, 547, 549, 568, 582, 589, 599, 638, 644, 664, 676, 682, 699, 710, 722, 729, 732, 740, 754, 764, 766, 776, 777, 778, 798, 825, 838, 841, 853, 857, 860, 867, 881, 897, 914, 921, 922, 931, 941, 942, 948, 959, 978, 983, 997, 1004, 1006, 1009, 1011, 1013, 1015, 1022, 1023, 1053, 1054, 1065, 1069, 1092, 1131, 1147, 1156, 1164, 1179], "netide": 14, "f\u00f6rderantrag": 14, "miscellan": [14, 29, 91, 145, 206, 219, 222, 229, 232, 233, 235, 241, 243, 245, 246, 251, 252, 253, 256, 259, 261, 269, 274, 276, 280, 281, 284, 294, 295, 297, 300, 303, 317, 322, 325, 327, 328, 329, 331, 334, 335, 338, 339, 341, 343, 344, 345, 346, 347, 348, 357, 365, 376, 488, 502, 530, 531, 532, 533, 534, 535, 536, 537, 540, 547, 549, 663, 664, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 691, 722, 738, 747, 755, 763, 775, 777, 778, 779, 921, 951, 952, 957, 960, 962, 976, 979, 1024, 1046, 1076, 1080, 1081, 1082, 1092, 1095, 1103, 1104, 1106, 1107, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1125, 1129, 1130, 1136, 1139, 1143, 1150, 1153, 1160, 1175, 1176, 1177, 1186], "s5": [16, 23, 158, 993, 997, 1190], "slide": [16, 23, 24, 27, 37, 158, 159, 162, 180, 187, 189, 194, 198, 202, 203, 204, 213, 214, 223, 224, 240, 266, 267, 278, 368, 371, 376, 577, 837, 994, 998, 1095, 1136, 1172, 1173, 1174, 1182, 1183, 1189, 1190, 1192, 1193, 1194], "work": [16, 24, 27, 40, 42, 43, 44, 57, 62, 72, 79, 81, 99, 100, 105, 107, 110, 125, 127, 141, 142, 144, 147, 148, 158, 161, 162, 163, 165, 167, 168, 169, 172, 173, 177, 186, 190, 191, 192, 201, 202, 204, 214, 219, 221, 223, 231, 232, 235, 237, 238, 240, 245, 247, 250, 254, 259, 268, 271, 277, 278, 280, 281, 284, 291, 292, 295, 296, 298, 299, 301, 329, 330, 343, 357, 362, 363, 365, 370, 371, 376, 377, 421, 422, 442, 444, 454, 464, 466, 467, 469, 470, 472, 473, 475, 476, 478, 480, 483, 484, 487, 488, 489, 502, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 577, 582, 602, 631, 638, 671, 673, 675, 683, 685, 687, 730, 736, 740, 741, 742, 746, 748, 755, 774, 777, 778, 779, 788, 793, 803, 805, 809, 823, 825, 830, 833, 847, 851, 852, 853, 854, 855, 858, 859, 860, 862, 864, 869, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 885, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 905, 907, 909, 918, 921, 922, 930, 934, 938, 942, 944, 949, 950, 952, 955, 958, 960, 962, 967, 976, 979, 981, 982, 984, 997, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1014, 1016, 1022, 1045, 1048, 1049, 1050, 1069, 1075, 1077, 1078, 1100, 1110, 1111, 1123, 1130, 1139, 1141, 1142, 1144, 1145, 1147, 1156, 1165, 1176, 1181, 1182, 1188], "progress": [16, 158, 376, 779, 887, 1165], "web": [16, 23, 73, 75, 79, 145, 159, 169, 198, 201, 222, 225, 271, 295, 317, 778, 1123, 1130, 1136, 1139], "note": [16, 32, 36, 40, 44, 61, 64, 122, 124, 137, 141, 145, 147, 161, 162, 164, 169, 182, 183, 194, 213, 221, 223, 234, 235, 237, 262, 291, 296, 313, 316, 317, 348, 349, 466, 470, 472, 476, 506, 554, 577, 586, 587, 593, 598, 657, 699, 719, 720, 721, 732, 734, 740, 741, 742, 744, 784, 825, 842, 852, 853, 912, 930, 948, 959, 1011, 1064, 1067, 1069, 1073, 1128, 1139, 1141, 1144, 1163], "screencast": [16, 23, 145, 1123], "written": [16, 42, 43, 79, 107, 125, 132, 161, 162, 167, 177, 200, 250, 359, 421, 424, 440, 448, 450, 454, 467, 504, 594, 660, 673, 693, 779, 864, 951, 958, 993, 1000, 1001, 1009, 1041, 1048, 1078, 1178], "draft": [16, 29, 194, 777, 778, 921, 1075, 1121, 1122, 1137], "convers": [17, 201, 213, 220, 223, 224, 231, 236, 237, 240, 243, 246, 247, 252, 255, 258, 276, 287, 289, 293, 297, 303, 315, 319, 323, 325, 331, 337, 357, 381, 396, 410, 419, 426, 432, 436, 439, 443, 450, 452, 456, 461, 462, 466, 503, 565, 653, 657, 681, 683, 684, 686, 722, 775, 777, 778, 828, 1073, 1090, 1094, 1097, 1108], "old": [17, 29, 130, 159, 162, 164, 167, 192, 202, 234, 235, 250, 282, 292, 296, 321, 376, 399, 438, 459, 464, 487, 560, 613, 620, 625, 640, 672, 678, 681, 686, 687, 728, 746, 757, 782, 788, 798, 817, 922, 930, 986, 1062, 1068, 1080, 1101, 1147, 1177], "latex": [17, 23, 24, 560], "beamer": [17, 23, 24], "To": [17, 29, 45, 46, 47, 51, 55, 56, 62, 79, 103, 113, 115, 116, 122, 130, 145, 161, 162, 164, 166, 177, 186, 190, 194, 209, 221, 231, 237, 247, 250, 251, 254, 258, 266, 267, 269, 271, 291, 306, 309, 313, 390, 393, 448, 460, 484, 529, 542, 638, 652, 663, 679, 681, 722, 738, 773, 777, 778, 798, 802, 813, 825, 854, 860, 921, 922, 929, 930, 935, 937, 950, 959, 1015, 1024, 1038, 1082, 1088, 1111, 1116, 1117, 1118, 1121, 1129, 1136], "put": [17, 58, 70, 81, 133, 137, 155, 161, 162, 163, 190, 198, 313, 316, 466, 470, 474, 475, 538, 582, 668, 692, 728, 754, 794, 802, 815, 817, 842, 922, 930, 959, 984, 999, 1014, 1017, 1022, 1080, 1161], "more": [17, 21, 27, 29, 43, 45, 59, 60, 63, 66, 70, 79, 83, 91, 98, 102, 107, 114, 120, 124, 125, 128, 129, 132, 142, 155, 159, 162, 163, 166, 167, 169, 172, 173, 175, 177, 183, 184, 186, 191, 194, 198, 199, 200, 201, 202, 203, 204, 206, 208, 213, 214, 219, 221, 222, 223, 224, 225, 229, 232, 235, 236, 238, 239, 240, 241, 243, 244, 245, 248, 251, 252, 253, 255, 256, 258, 262, 266, 267, 268, 269, 273, 276, 277, 287, 288, 289, 296, 298, 299, 303, 305, 313, 317, 321, 325, 326, 327, 331, 337, 341, 343, 344, 345, 346, 347, 348, 360, 362, 368, 375, 376, 387, 392, 396, 399, 403, 413, 414, 415, 424, 426, 432, 433, 436, 439, 443, 444, 449, 450, 452, 454, 456, 458, 459, 460, 461, 462, 466, 469, 471, 472, 475, 488, 495, 502, 504, 508, 509, 520, 525, 530, 538, 540, 560, 577, 582, 586, 590, 639, 653, 654, 655, 667, 668, 669, 670, 671, 672, 674, 675, 676, 677, 678, 679, 681, 684, 691, 692, 703, 710, 719, 722, 723, 731, 732, 734, 736, 738, 739, 741, 742, 745, 747, 755, 756, 775, 776, 777, 778, 781, 784, 796, 798, 803, 809, 811, 813, 817, 819, 821, 825, 851, 856, 861, 885, 888, 918, 922, 924, 928, 929, 930, 931, 942, 948, 951, 954, 957, 968, 970, 981, 985, 987, 993, 997, 999, 1000, 1001, 1009, 1011, 1015, 1016, 1017, 1023, 1025, 1027, 1031, 1032, 1033, 1034, 1038, 1041, 1042, 1046, 1047, 1049, 1053, 1054, 1065, 1076, 1079, 1080, 1081, 1082, 1092, 1094, 1095, 1101, 1103, 1104, 1106, 1107, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1124, 1125, 1128, 1129, 1130, 1132, 1133, 1136, 1137, 1139, 1142, 1146, 1150, 1151, 1153, 1155, 1157, 1158, 1160, 1165, 1169, 1176, 1178, 1179, 1186], "precis": [17, 194, 198, 254, 271, 295, 317, 324, 340, 380, 398, 662, 757, 825, 1068, 1123], "restructuredtext": [17, 23, 32, 33, 34, 35, 36, 38, 779], "turn": [17, 76, 111, 112, 162, 164, 167, 172, 173, 194, 198, 214, 223, 240, 286, 357, 454, 469, 470, 506, 531, 532, 689, 704, 881, 922, 929, 930, 931, 999, 1001, 1005, 1015, 1023, 1028, 1029, 1039, 1041, 1149], "rst2s5": 17, "tool": [17, 32, 62, 69, 124, 169, 173, 178, 194, 202, 204, 214, 224, 250, 268, 277, 292, 297, 298, 315, 330, 357, 360, 362, 375, 376, 377, 422, 457, 459, 460, 464, 656, 710, 728, 778, 849, 855, 856, 869, 921, 931, 942, 945, 1000, 1001, 1009, 1013, 1047, 1048, 1051, 1078, 1142, 1150, 1174, 1176, 1178, 1180, 1187], "thi": [17, 24, 28, 29, 30, 31, 39, 40, 43, 44, 45, 50, 53, 54, 57, 59, 60, 62, 63, 64, 66, 70, 78, 79, 85, 86, 90, 91, 98, 105, 107, 110, 111, 112, 114, 120, 122, 124, 133, 142, 145, 152, 156, 159, 161, 162, 163, 165, 166, 167, 168, 177, 179, 181, 182, 184, 186, 188, 189, 190, 191, 194, 198, 199, 200, 201, 202, 203, 204, 214, 221, 223, 224, 231, 234, 235, 237, 240, 242, 244, 245, 247, 250, 253, 254, 260, 263, 267, 269, 271, 278, 286, 287, 289, 291, 296, 306, 309, 313, 314, 316, 324, 327, 333, 343, 348, 357, 360, 363, 375, 376, 378, 382, 389, 390, 403, 412, 413, 437, 441, 442, 444, 445, 446, 448, 453, 454, 464, 468, 469, 474, 475, 476, 480, 486, 494, 495, 506, 508, 510, 528, 530, 539, 540, 543, 544, 545, 546, 547, 548, 549, 550, 554, 555, 558, 559, 560, 561, 564, 567, 568, 570, 571, 573, 574, 576, 577, 579, 582, 584, 585, 586, 588, 589, 592, 594, 595, 597, 600, 605, 608, 611, 613, 615, 616, 619, 627, 631, 633, 637, 639, 644, 646, 647, 649, 650, 654, 657, 660, 664, 666, 667, 668, 669, 670, 671, 672, 674, 675, 676, 677, 678, 679, 682, 691, 692, 693, 704, 710, 712, 713, 716, 717, 718, 719, 720, 721, 722, 727, 730, 732, 734, 735, 738, 740, 742, 744, 745, 746, 747, 754, 755, 756, 757, 762, 763, 775, 776, 777, 778, 779, 784, 789, 794, 798, 800, 807, 821, 825, 830, 837, 845, 852, 853, 856, 857, 864, 867, 869, 870, 879, 881, 882, 885, 890, 892, 922, 927, 928, 929, 930, 931, 934, 941, 942, 948, 955, 956, 957, 958, 959, 963, 966, 975, 978, 987, 988, 991, 992, 995, 997, 1000, 1001, 1003, 1009, 1011, 1012, 1013, 1014, 1015, 1017, 1018, 1019, 1020, 1021, 1024, 1027, 1029, 1031, 1033, 1035, 1042, 1045, 1046, 1047, 1049, 1051, 1058, 1061, 1063, 1064, 1065, 1068, 1069, 1071, 1073, 1074, 1075, 1079, 1095, 1110, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1136, 1137, 1138, 1139, 1140, 1141, 1145, 1148, 1150, 1151, 1156, 1158, 1161, 1162, 1163, 1165, 1167, 1168, 1176, 1178, 1179, 1181, 1184, 1185, 1191], "sens": [17, 79, 164, 166, 183, 186, 191, 194, 213, 479, 487, 504, 589, 600, 607, 654, 682, 695, 786, 825, 864, 931, 955, 978, 985, 992, 1042, 1072, 1128, 1179], "entir": [17, 24, 30, 81, 111, 112, 155, 159, 162, 163, 164, 167, 173, 177, 186, 191, 198, 201, 219, 222, 223, 231, 245, 248, 251, 254, 266, 267, 269, 271, 281, 288, 291, 295, 301, 306, 309, 313, 317, 323, 329, 335, 394, 423, 427, 434, 437, 442, 450, 458, 466, 484, 690, 721, 741, 825, 852, 853, 858, 882, 887, 896, 904, 922, 929, 931, 934, 940, 957, 968, 1001, 1030, 1034, 1048, 1053, 1054, 1071, 1073, 1092, 1123, 1156, 1159, 1162, 1179], "site": [17, 23, 27, 39, 62, 66, 145, 158, 159, 162, 174, 177, 189, 190, 191, 195, 221, 231, 237, 247, 250, 313, 330, 599, 745, 864, 1127, 1144, 1145, 1151, 1158, 1165], "massag": [17, 32, 152, 173, 191, 267, 269, 779, 929, 1001], "itself": [17, 27, 129, 132, 142, 162, 164, 190, 194, 200, 231, 237, 247, 250, 296, 324, 346, 392, 424, 460, 469, 475, 503, 504, 526, 541, 587, 594, 653, 730, 745, 754, 757, 800, 803, 825, 845, 851, 852, 853, 867, 885, 914, 984, 997, 1011, 1039, 1042, 1047, 1068, 1108, 1149, 1165], "upon": [17, 27, 70, 98, 164, 165, 194, 198, 202, 209, 248, 280, 287, 306, 309, 326, 446, 464, 492, 544, 560, 599, 617, 740, 757, 798, 931, 997, 1085, 1149, 1156, 1176], "you": [17, 21, 43, 58, 59, 63, 110, 122, 124, 125, 129, 130, 132, 135, 137, 141, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 177, 178, 182, 183, 184, 186, 190, 191, 194, 198, 200, 201, 202, 214, 219, 221, 222, 223, 224, 231, 234, 237, 238, 240, 244, 245, 247, 248, 250, 254, 262, 271, 278, 281, 284, 287, 289, 291, 295, 317, 326, 343, 348, 354, 357, 360, 362, 365, 388, 389, 402, 418, 444, 448, 464, 506, 525, 526, 527, 528, 532, 535, 538, 539, 541, 574, 585, 586, 592, 597, 600, 601, 603, 604, 618, 639, 647, 654, 660, 668, 669, 673, 690, 696, 724, 734, 745, 773, 774, 776, 798, 800, 817, 825, 830, 851, 852, 853, 856, 857, 860, 864, 865, 871, 875, 877, 879, 885, 886, 887, 889, 890, 891, 892, 896, 897, 922, 925, 929, 930, 931, 932, 933, 934, 936, 938, 941, 942, 946, 948, 952, 957, 959, 967, 968, 969, 970, 971, 975, 999, 1000, 1001, 1002, 1004, 1007, 1011, 1014, 1015, 1018, 1023, 1024, 1033, 1035, 1046, 1047, 1051, 1054, 1067, 1073, 1080, 1089, 1091, 1106, 1110, 1111, 1120, 1123, 1129, 1136, 1139, 1145, 1156, 1157, 1158, 1165, 1168, 1176, 1181], "view": [17, 64, 167, 168, 172, 183, 185, 198, 200, 266, 267, 271, 278, 326, 327, 375, 392, 394, 457, 684, 722, 731, 733, 777, 778, 852, 853, 862, 869, 922, 931, 933, 1054, 1122, 1176, 1179, 1181], "state": [17, 45, 119, 124, 129, 158, 169, 174, 194, 202, 224, 231, 234, 237, 247, 248, 250, 397, 414, 446, 464, 531, 532, 536, 537, 584, 690, 724, 754, 783, 821, 842, 856, 914, 924, 968, 972, 983, 984, 1021, 1027], "rather": [17, 66, 86, 137, 141, 142, 162, 164, 165, 166, 167, 168, 169, 172, 173, 177, 186, 190, 194, 198, 214, 223, 241, 242, 316, 343, 368, 380, 422, 454, 455, 464, 482, 533, 534, 535, 536, 537, 542, 577, 584, 586, 600, 607, 618, 638, 663, 669, 683, 704, 754, 756, 798, 825, 830, 862, 864, 910, 922, 929, 930, 931, 933, 940, 945, 968, 969, 996, 1000, 1015, 1040, 1047, 1050, 1058, 1098, 1099, 1102, 1113, 1115, 1130, 1137, 1158, 1163, 1176, 1178], "huge": [17, 168, 173, 183, 495, 731, 803, 821, 1046, 1048, 1152], "tabl": [17, 39, 64, 66, 142, 155, 159, 161, 194, 200, 201, 218, 226, 231, 237, 238, 240, 241, 244, 245, 247, 250, 257, 262, 296, 376, 380, 395, 409, 410, 414, 415, 419, 426, 432, 436, 439, 443, 452, 456, 461, 462, 662, 684, 722, 731, 775, 777, 778, 864, 1071, 1080, 1112, 1114, 1135, 1136], "isnot": 17, "big": [17, 105, 142, 159, 162, 163, 169, 194, 198, 218, 224, 238, 245, 248, 291, 317, 357, 403, 448, 460, 539, 589, 619, 682, 746, 945, 1123, 1135, 1191], "fat": [17, 142, 159, 161, 165, 169, 238, 676, 746, 856, 1135], "sai": [17, 24, 66, 67, 107, 133, 142, 150, 161, 162, 163, 164, 166, 167, 168, 169, 172, 173, 177, 182, 183, 194, 198, 235, 240, 262, 281, 284, 288, 290, 291, 312, 313, 343, 357, 448, 454, 460, 470, 480, 484, 493, 504, 510, 525, 527, 539, 568, 577, 586, 596, 644, 657, 669, 678, 682, 710, 714, 716, 717, 718, 720, 725, 732, 735, 736, 741, 784, 798, 825, 864, 867, 869, 904, 922, 929, 931, 942, 946, 957, 959, 969, 981, 992, 996, 1002, 1011, 1014, 1015, 1021, 1025, 1047, 1063, 1075, 1080, 1110, 1131, 1165, 1179], "file": [17, 27, 29, 34, 35, 36, 38, 40, 44, 47, 50, 53, 54, 55, 56, 69, 79, 81, 86, 91, 92, 98, 99, 100, 101, 102, 103, 104, 105, 107, 109, 110, 111, 112, 122, 124, 125, 129, 130, 137, 141, 146, 149, 154, 155, 158, 159, 161, 162, 163, 164, 167, 168, 173, 177, 181, 184, 186, 188, 189, 190, 191, 193, 194, 196, 198, 199, 201, 202, 203, 204, 209, 211, 212, 213, 214, 219, 222, 223, 224, 227, 228, 229, 232, 233, 235, 236, 237, 238, 240, 241, 244, 245, 247, 248, 251, 252, 253, 254, 256, 258, 261, 262, 266, 267, 268, 271, 275, 277, 280, 281, 283, 284, 290, 291, 293, 297, 298, 302, 304, 305, 312, 313, 316, 317, 319, 320, 321, 325, 328, 331, 337, 340, 342, 343, 344, 345, 346, 347, 354, 357, 358, 359, 360, 361, 362, 368, 370, 371, 375, 386, 389, 390, 420, 421, 423, 424, 425, 426, 432, 436, 439, 443, 447, 452, 456, 458, 460, 461, 462, 465, 467, 469, 471, 472, 473, 478, 479, 482, 488, 502, 525, 526, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 561, 564, 567, 569, 570, 573, 576, 579, 582, 587, 589, 601, 602, 603, 604, 610, 662, 666, 673, 676, 684, 699, 722, 728, 732, 742, 755, 775, 776, 777, 778, 781, 786, 787, 791, 792, 794, 795, 802, 803, 806, 816, 821, 827, 829, 832, 834, 840, 841, 843, 846, 849, 850, 851, 854, 855, 857, 858, 859, 861, 862, 864, 865, 867, 868, 869, 870, 871, 872, 873, 875, 876, 877, 878, 881, 883, 884, 885, 889, 893, 894, 895, 896, 897, 899, 902, 905, 910, 913, 918, 921, 922, 925, 929, 930, 931, 932, 934, 935, 937, 938, 944, 945, 948, 949, 950, 959, 962, 963, 966, 967, 973, 976, 979, 982, 984, 988, 990, 991, 992, 995, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1015, 1016, 1017, 1022, 1023, 1024, 1027, 1030, 1035, 1038, 1041, 1046, 1050, 1052, 1054, 1065, 1071, 1074, 1075, 1081, 1082, 1092, 1095, 1106, 1107, 1110, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1128, 1136, 1137, 1144, 1145, 1148, 1151, 1156, 1157, 1158, 1159, 1162, 1164, 1167, 1173, 1178, 1180, 1181, 1182, 1189, 1190, 1191, 1193], "rst": [17, 23, 32, 34, 35, 36, 38, 124, 146, 158, 181, 188, 193, 196, 202, 250, 260, 324, 365, 561, 564, 567, 570, 573, 576, 579, 988, 991, 995, 1162, 1167], "render": [17, 40, 167, 330], "dure": [17, 27, 45, 46, 105, 107, 152, 161, 162, 163, 164, 168, 169, 173, 177, 182, 194, 198, 250, 360, 423, 427, 428, 442, 454, 459, 503, 510, 536, 539, 620, 638, 695, 734, 821, 825, 830, 857, 863, 929, 931, 940, 1001, 1015, 1016, 1035, 1048, 1050, 1065, 1149, 1156], "regular": [17, 162, 186, 197, 211, 227, 234, 235, 242, 261, 262, 264, 266, 267, 276, 295, 296, 325, 331, 382, 448, 466, 597, 599, 731, 776, 813, 825, 870, 904, 907, 909, 918, 931, 942, 992, 993, 1035, 1065, 1067, 1123], "process": [17, 28, 62, 64, 66, 74, 79, 81, 98, 100, 111, 112, 124, 167, 172, 179, 186, 192, 194, 201, 202, 204, 238, 268, 277, 290, 291, 298, 312, 359, 360, 367, 372, 425, 431, 460, 469, 488, 502, 530, 531, 532, 533, 534, 535, 536, 537, 540, 582, 749, 755, 776, 777, 778, 787, 792, 795, 797, 802, 806, 808, 811, 812, 815, 816, 817, 818, 820, 822, 825, 829, 830, 831, 834, 836, 839, 840, 842, 843, 845, 846, 852, 853, 854, 855, 856, 859, 860, 861, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 884, 886, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 905, 921, 930, 933, 934, 935, 936, 937, 940, 944, 945, 946, 950, 951, 952, 954, 955, 957, 959, 960, 962, 967, 968, 969, 976, 981, 982, 984, 985, 986, 993, 996, 997, 999, 1001, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1016, 1017, 1026, 1034, 1047, 1048, 1052, 1102, 1168, 1181, 1190, 1191], "mean": [17, 29, 74, 75, 111, 112, 124, 129, 162, 164, 167, 169, 183, 185, 186, 198, 218, 221, 222, 235, 237, 250, 254, 281, 296, 304, 312, 316, 320, 342, 343, 380, 401, 402, 403, 425, 444, 449, 454, 508, 586, 594, 597, 598, 664, 710, 732, 736, 744, 745, 778, 784, 800, 860, 867, 870, 872, 873, 881, 922, 929, 930, 931, 958, 965, 981, 985, 987, 1015, 1018, 1027, 1042, 1050, 1053, 1067, 1068, 1073, 1101, 1121, 1124, 1128, 1130, 1131, 1137, 1142, 1163, 1178, 1181], "specif": [17, 64, 122, 165, 231, 237, 238, 247, 250, 296, 302, 313, 343, 377, 425, 442, 454, 484, 531, 534, 536, 539, 685, 728, 742, 776, 784, 798, 821, 825, 851, 861, 922, 929, 931, 945, 951, 967, 968, 993, 999, 1011, 1022, 1030, 1031, 1132, 1148, 1156, 1191, 1192], "markup": [17, 39], "class": [17, 21, 29, 42, 44, 55, 58, 64, 70, 71, 74, 75, 86, 93, 98, 107, 108, 109, 111, 112, 114, 117, 118, 119, 120, 121, 124, 125, 129, 130, 132, 133, 135, 137, 141, 142, 169, 180, 181, 182, 184, 189, 198, 199, 200, 201, 203, 205, 206, 218, 222, 224, 231, 234, 235, 237, 238, 242, 246, 248, 249, 252, 254, 257, 260, 262, 264, 266, 267, 269, 274, 275, 279, 281, 282, 284, 288, 289, 290, 291, 293, 294, 295, 296, 300, 302, 312, 313, 314, 316, 317, 318, 322, 324, 326, 327, 328, 329, 330, 334, 335, 336, 338, 339, 341, 343, 345, 351, 352, 359, 360, 361, 368, 394, 440, 464, 466, 474, 482, 483, 484, 485, 486, 488, 489, 491, 492, 496, 502, 503, 504, 506, 507, 509, 510, 511, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 540, 541, 547, 549, 554, 560, 568, 571, 574, 580, 582, 583, 584, 585, 587, 588, 589, 590, 591, 592, 595, 596, 598, 600, 605, 607, 608, 611, 617, 626, 627, 633, 637, 643, 646, 649, 650, 655, 656, 657, 659, 660, 664, 665, 667, 668, 669, 670, 671, 672, 674, 675, 676, 677, 678, 679, 686, 687, 688, 689, 690, 691, 692, 695, 699, 704, 706, 707, 708, 710, 712, 713, 716, 717, 718, 719, 720, 721, 722, 724, 725, 727, 729, 736, 738, 741, 742, 745, 746, 747, 754, 755, 756, 762, 763, 764, 766, 768, 772, 773, 774, 775, 777, 778, 780, 922, 929, 930, 931, 963, 965, 966, 1020, 1022, 1024, 1030, 1031, 1032, 1033, 1034, 1037, 1038, 1043, 1044, 1045, 1046, 1048, 1051, 1053, 1054, 1062, 1082, 1109, 1110, 1111, 1116, 1118, 1121, 1136, 1150, 1156, 1157, 1168, 1176, 1186], "handout": [17, 124], "warn": [17, 32, 40, 142, 158, 173, 214, 224, 275, 287, 354, 365, 390, 414, 445, 446, 448, 469, 483, 538, 540, 584, 588, 639, 683, 695, 778, 794, 800, 803, 862, 921, 951, 962, 976, 998, 1022, 1073, 1151], "produc": [17, 109, 182, 184, 223, 237, 336, 442, 454, 459, 710, 716, 718, 754, 756, 942, 972, 973, 991, 999, 1002, 1015, 1028, 1029, 1062, 1065, 1067, 1131], "error": [17, 21, 27, 29, 46, 66, 89, 98, 125, 129, 130, 141, 158, 161, 162, 163, 164, 167, 168, 177, 181, 184, 192, 195, 198, 201, 208, 219, 223, 229, 231, 234, 238, 239, 240, 244, 247, 250, 254, 257, 259, 262, 271, 272, 275, 278, 281, 284, 295, 296, 309, 314, 342, 357, 362, 364, 368, 387, 390, 392, 399, 403, 417, 418, 424, 430, 431, 433, 446, 447, 448, 451, 468, 469, 470, 472, 473, 474, 475, 478, 485, 489, 508, 509, 510, 522, 530, 541, 560, 577, 582, 584, 586, 587, 591, 592, 593, 594, 595, 597, 599, 607, 610, 615, 657, 659, 660, 669, 676, 683, 686, 690, 692, 693, 694, 695, 699, 719, 720, 721, 729, 732, 734, 736, 741, 742, 744, 755, 756, 758, 776, 777, 778, 781, 788, 803, 813, 817, 821, 825, 841, 855, 858, 859, 865, 868, 921, 922, 930, 932, 944, 946, 947, 948, 949, 950, 951, 959, 960, 962, 970, 976, 978, 979, 982, 983, 984, 992, 996, 997, 1001, 1002, 1011, 1016, 1022, 1052, 1053, 1064, 1065, 1069, 1073, 1075, 1082, 1095, 1121, 1123, 1130, 1151, 1156, 1158, 1163, 1176], "output": [17, 23, 33, 40, 51, 53, 55, 56, 62, 64, 86, 87, 108, 115, 135, 141, 142, 158, 164, 166, 167, 168, 181, 184, 190, 202, 203, 214, 223, 231, 237, 240, 241, 247, 250, 278, 342, 357, 362, 380, 381, 386, 387, 388, 389, 393, 425, 459, 460, 466, 467, 468, 508, 510, 525, 540, 543, 544, 545, 546, 558, 560, 568, 571, 597, 647, 665, 666, 679, 727, 732, 740, 778, 783, 838, 849, 856, 865, 868, 869, 870, 881, 885, 907, 911, 912, 917, 918, 922, 932, 943, 951, 954, 957, 965, 968, 969, 973, 993, 996, 997, 999, 1029, 1068, 1073, 1074, 1084, 1085, 1087, 1088, 1089, 1090, 1092, 1097, 1103, 1105, 1107, 1112, 1113, 1114, 1115, 1126, 1129, 1130, 1135, 1139, 1148, 1151, 1164, 1171, 1187], "must": [17, 39, 43, 44, 111, 112, 124, 130, 165, 169, 184, 190, 194, 195, 197, 198, 201, 205, 206, 219, 221, 223, 231, 237, 238, 245, 247, 248, 250, 271, 296, 313, 380, 397, 400, 414, 422, 440, 442, 457, 464, 466, 470, 476, 487, 492, 493, 506, 509, 510, 523, 524, 538, 541, 544, 545, 546, 558, 568, 594, 595, 597, 599, 609, 610, 644, 657, 664, 671, 678, 686, 687, 689, 690, 710, 734, 736, 748, 752, 778, 803, 809, 817, 823, 830, 852, 853, 869, 879, 887, 921, 932, 938, 941, 951, 952, 955, 960, 962, 970, 979, 981, 983, 993, 999, 1002, 1017, 1022, 1023, 1040, 1045, 1051, 1064, 1065, 1067, 1068, 1070, 1073, 1102, 1123, 1157, 1168], "role": [17, 39, 66, 165, 169, 460, 541, 922], "somewher": [17, 183, 202, 214, 221, 254, 266, 267, 342, 354, 425, 442, 444, 464, 489, 510, 577, 710, 968, 1025, 1050, 1136], "top": [17, 28, 32, 34, 35, 38, 39, 50, 161, 162, 164, 165, 177, 183, 185, 186, 202, 204, 231, 237, 240, 247, 250, 467, 828, 837, 922, 942, 981, 983, 1022, 1030, 1052, 1098, 1102, 1176, 1180, 1182, 1187], "insid": [17, 35, 39, 42, 50, 124, 129, 142, 161, 162, 190, 192, 214, 231, 237, 247, 250, 267, 287, 289, 304, 313, 320, 342, 357, 386, 390, 400, 418, 421, 423, 424, 442, 447, 466, 528, 539, 544, 592, 598, 600, 756, 776, 786, 796, 864, 894, 904, 929, 931, 954, 968, 987, 1013, 1018, 1021, 1030, 1067, 1073, 1141, 1144, 1148, 1159, 1178, 1181], "ideal": [17, 173, 189, 231, 237, 247, 250, 267, 269, 453, 469, 480, 487, 535, 656, 710, 784, 803, 821, 825, 918, 938, 1002, 1042, 1044], "slideshow": [17, 23, 241, 253, 280, 290, 301, 309, 312, 316, 322, 323, 328, 329, 334, 335, 338, 339, 782, 785, 787, 790, 792, 795, 797, 804, 806, 808, 810, 812, 814, 816, 818, 820, 822, 824, 829, 831, 834, 836, 840, 843, 846, 1066, 1153, 1160], "manual": [17, 62, 64, 125, 135, 137, 141, 159, 169, 177, 200, 201, 231, 232, 237, 240, 247, 250, 280, 282, 388, 389, 392, 399, 437, 442, 466, 583, 625, 675, 682, 693, 719, 731, 732, 763, 764, 766, 767, 777, 778, 780, 781, 784, 825, 852, 853, 922, 929, 930, 952, 955, 968, 970, 972, 1013, 1015, 1020, 1028, 1029, 1033, 1037, 1078], "theme": [17, 66, 349, 1054, 1073], "url": [17, 159, 166, 168, 177, 189, 539, 1021, 1078], "_static": 17, "ui": [17, 32, 60, 169, 403, 662], "default": [17, 23, 58, 62, 98, 111, 112, 119, 122, 124, 132, 133, 162, 163, 168, 169, 173, 179, 190, 199, 201, 203, 210, 212, 223, 231, 234, 237, 240, 243, 246, 247, 250, 254, 257, 260, 265, 268, 275, 277, 278, 282, 286, 287, 289, 292, 296, 298, 299, 318, 324, 327, 330, 336, 350, 357, 403, 414, 446, 454, 460, 466, 467, 469, 472, 476, 479, 485, 488, 502, 504, 513, 514, 530, 540, 582, 584, 585, 590, 591, 594, 595, 619, 638, 639, 655, 660, 662, 664, 667, 668, 669, 670, 672, 674, 675, 676, 677, 678, 679, 682, 683, 690, 691, 720, 722, 738, 747, 752, 754, 755, 756, 762, 763, 768, 775, 777, 778, 821, 849, 852, 853, 855, 867, 880, 885, 904, 916, 917, 921, 922, 924, 929, 930, 932, 938, 941, 955, 959, 965, 968, 970, 972, 984, 996, 998, 1000, 1002, 1013, 1042, 1044, 1050, 1069, 1071, 1073, 1078, 1114, 1131, 1141, 1144, 1146, 1151, 1156, 1158, 1176], "given": [17, 39, 59, 63, 70, 82, 103, 107, 108, 111, 112, 114, 117, 118, 147, 162, 164, 167, 169, 173, 183, 231, 237, 247, 250, 254, 278, 286, 287, 289, 296, 324, 340, 343, 390, 405, 448, 507, 536, 539, 541, 560, 584, 653, 664, 689, 776, 786, 796, 807, 825, 862, 867, 876, 878, 885, 907, 929, 1009, 1021, 1108, 1117, 1123, 1125, 1131, 1142, 1145, 1179, 1191], "path": [17, 21, 98, 100, 124, 130, 150, 151, 158, 167, 190, 194, 202, 205, 222, 233, 234, 235, 239, 242, 246, 247, 250, 268, 277, 278, 298, 299, 302, 304, 305, 320, 321, 324, 331, 336, 341, 342, 343, 348, 350, 357, 362, 424, 460, 466, 468, 471, 472, 474, 488, 502, 530, 531, 532, 533, 534, 535, 536, 537, 540, 541, 542, 582, 607, 739, 755, 777, 778, 789, 803, 815, 825, 851, 852, 853, 854, 855, 858, 859, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 885, 886, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 905, 921, 941, 944, 950, 951, 952, 960, 961, 962, 976, 978, 979, 980, 982, 984, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1013, 1020, 1030, 1047, 1050, 1111, 1151, 1156, 1158, 1166, 1178], "commit": [17, 46, 78, 122, 144, 165, 168, 176, 177, 219, 223, 224, 235, 238, 248, 365, 798, 1123, 1132, 1135, 1156, 1188], "place": [17, 55, 124, 137, 150, 159, 163, 164, 166, 167, 168, 169, 177, 182, 191, 195, 218, 234, 240, 250, 286, 287, 380, 396, 418, 425, 442, 465, 474, 478, 482, 506, 508, 522, 541, 554, 599, 613, 615, 616, 627, 638, 646, 649, 650, 660, 679, 745, 748, 756, 773, 776, 778, 803, 825, 854, 875, 876, 877, 878, 929, 930, 938, 984, 1014, 1016, 1025, 1055, 1064, 1068, 1070, 1088, 1145, 1158], "_download": 17, "7a046b2e956b892f20b3485964f7b2cf": 17, "rel": [17, 79, 100, 124, 162, 169, 198, 214, 235, 268, 277, 278, 298, 299, 375, 488, 502, 530, 531, 532, 533, 534, 535, 536, 537, 540, 582, 699, 704, 755, 777, 778, 825, 852, 853, 854, 855, 858, 859, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 905, 921, 929, 941, 944, 950, 952, 960, 962, 976, 979, 982, 984, 1001, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1016, 1127, 1128, 1135, 1148], "up": [17, 21, 27, 32, 34, 35, 38, 43, 45, 53, 79, 122, 133, 137, 141, 152, 159, 161, 162, 163, 165, 167, 169, 172, 177, 181, 182, 213, 219, 224, 229, 231, 235, 237, 247, 250, 262, 267, 269, 278, 287, 313, 326, 342, 360, 364, 370, 371, 438, 445, 454, 455, 460, 464, 468, 469, 489, 538, 539, 540, 541, 554, 577, 601, 602, 603, 604, 607, 654, 659, 724, 727, 740, 741, 754, 776, 784, 788, 793, 794, 796, 807, 809, 817, 821, 825, 826, 864, 885, 886, 904, 917, 922, 924, 929, 930, 931, 938, 948, 981, 987, 992, 997, 999, 1002, 1011, 1020, 1023, 1034, 1038, 1044, 1067, 1080, 1084, 1101, 1106, 1118, 1123, 1128, 1131, 1139, 1151, 1157, 1163, 1168, 1179], "uri": 17, "well": [17, 42, 66, 162, 164, 167, 168, 169, 173, 186, 190, 198, 221, 223, 250, 286, 288, 296, 304, 313, 320, 343, 403, 425, 454, 464, 492, 532, 538, 541, 542, 565, 585, 589, 600, 614, 682, 689, 696, 719, 732, 742, 746, 850, 869, 885, 918, 925, 930, 931, 942, 955, 957, 975, 999, 1001, 1014, 1022, 1023, 1026, 1030, 1033, 1037, 1040, 1043, 1054, 1058, 1068, 1126, 1128, 1136, 1152, 1178], "blah": [19, 23, 39, 63, 66, 144, 162, 165, 184, 195, 202, 205, 210, 218, 221, 227, 231, 237, 238, 240, 242, 247, 250, 257, 260, 272, 279, 282, 292, 296, 314, 324, 330, 349, 350, 357, 365, 368, 448, 695, 758, 776, 781, 789, 948, 949, 992, 993, 1018, 1053, 1059, 1078, 1139], "watch": [20, 32, 163, 164, 165, 183, 190, 194, 198, 199, 203, 289, 291, 295, 465, 732, 922, 930, 966, 1026, 1047, 1149], "w5g8k7a2gbg": 20, "bore": [20, 223, 245, 259, 275, 301, 885, 993, 997, 1054, 1123], "good": [20, 27, 29, 43, 98, 124, 159, 161, 162, 163, 164, 169, 177, 186, 194, 198, 201, 219, 222, 223, 231, 235, 240, 241, 242, 244, 245, 248, 254, 269, 271, 281, 284, 287, 289, 295, 296, 317, 326, 376, 399, 403, 444, 448, 450, 458, 459, 464, 487, 488, 502, 530, 531, 532, 533, 534, 535, 536, 537, 540, 547, 549, 565, 582, 586, 590, 591, 605, 608, 611, 627, 633, 637, 640, 646, 649, 650, 655, 659, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 691, 693, 722, 733, 738, 744, 747, 753, 755, 757, 763, 766, 775, 777, 778, 782, 784, 817, 825, 830, 850, 864, 868, 918, 922, 930, 931, 955, 957, 974, 983, 986, 987, 993, 996, 1022, 1035, 1053, 1054, 1065, 1068, 1070, 1073, 1085, 1095, 1122, 1123, 1130, 1149, 1178], "j2hzby8e4yq": 20, "pov": 20, "classmethod": [21, 275], "staticmethod": [21, 275], "member": [21, 35, 38, 43, 57, 64, 111, 112, 124, 177, 183, 184, 185, 195, 200, 222, 240, 252, 265, 280, 287, 296, 327, 361, 433, 442, 449, 486, 528, 530, 533, 536, 560, 574, 582, 584, 585, 587, 588, 589, 590, 596, 600, 601, 603, 605, 638, 639, 643, 664, 667, 670, 671, 672, 674, 675, 676, 677, 678, 679, 682, 690, 694, 695, 704, 710, 720, 736, 742, 763, 774, 776, 778, 786, 791, 793, 813, 821, 825, 838, 844, 851, 852, 853, 868, 869, 870, 871, 872, 873, 879, 914, 918, 929, 957, 1011, 1072, 1148, 1168], "final": [21, 38, 42, 62, 79, 107, 158, 184, 194, 198, 201, 221, 223, 231, 237, 238, 247, 252, 265, 271, 295, 317, 327, 466, 539, 541, 606, 607, 656, 682, 693, 722, 763, 777, 778, 788, 819, 825, 852, 853, 918, 930, 931, 999, 1016, 1020, 1033, 1085, 1101, 1123, 1176], "exec": [21, 29, 169, 194, 203, 234, 248, 249, 257, 264, 276, 280, 282, 290, 291, 292, 296, 303, 312, 316, 323, 325, 778, 913, 918, 951, 954, 975, 999, 1024, 1121, 1189], "dict": [21, 181, 194, 195, 199, 210, 212, 213, 218, 221, 235, 236, 237, 238, 241, 243, 246, 247, 248, 252, 258, 272, 275, 282, 292, 296, 302, 307, 314, 318, 324, 329, 331, 337, 340, 349, 352, 357, 682, 1020, 1023, 1035, 1036, 1045, 1071], "There": [21, 45, 55, 57, 66, 69, 82, 98, 133, 159, 161, 163, 164, 165, 166, 169, 173, 174, 190, 191, 195, 197, 198, 201, 205, 206, 219, 224, 240, 243, 244, 245, 248, 254, 281, 284, 287, 288, 289, 290, 291, 312, 313, 327, 343, 378, 388, 394, 403, 418, 421, 442, 444, 451, 454, 465, 466, 470, 479, 484, 509, 510, 560, 568, 585, 590, 635, 660, 678, 679, 691, 693, 699, 722, 727, 738, 742, 746, 747, 755, 775, 777, 778, 798, 825, 830, 856, 885, 922, 929, 930, 975, 985, 996, 997, 1048, 1054, 1065, 1123, 1132, 1157, 1163], "half": [21, 36, 162, 163, 164, 224, 450, 469, 823, 864, 930, 983, 1020], "heart": [21, 32, 38, 152, 469, 864, 1129], "split": [21, 159, 182, 185, 218, 222, 227, 228, 231, 234, 235, 237, 242, 246, 252, 260, 263, 275, 280, 282, 296, 302, 318, 325, 330, 336, 340, 348, 357, 442, 466, 488, 560, 1020, 1129], "pimp": 21, "elabor": [21, 173, 238, 248, 444, 467, 930], "namespac": [21, 194, 231, 237, 244, 247, 250, 254, 265, 275, 489, 491, 506, 542, 543, 544, 545, 546, 548, 558, 559, 577, 599, 607, 612, 613, 614, 615, 616, 622, 623, 625, 626, 629, 630, 631, 635, 649, 666, 672, 673, 682, 697, 719, 729, 732, 754, 756, 757, 929, 963, 966, 978, 980, 1030], "__init__": [21, 64, 158, 181, 182, 193, 195, 198, 200, 218, 221, 222, 234, 235, 237, 244, 247, 250, 254, 260, 263, 272, 275, 282, 292, 296, 314, 318, 336, 340, 466, 1020, 1021, 1022, 1030, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1156], "__all__": [21, 250, 254], "etc": [21, 23, 29, 64, 91, 101, 124, 151, 155, 159, 163, 167, 176, 179, 180, 184, 191, 198, 201, 205, 206, 208, 211, 212, 219, 220, 222, 223, 225, 229, 232, 234, 235, 237, 241, 242, 245, 251, 252, 253, 254, 256, 257, 259, 261, 264, 274, 275, 278, 281, 282, 284, 292, 294, 295, 297, 300, 301, 317, 318, 322, 323, 324, 328, 329, 330, 334, 335, 336, 338, 339, 343, 344, 345, 346, 347, 348, 357, 362, 365, 375, 398, 403, 459, 469, 477, 491, 574, 662, 724, 730, 757, 776, 778, 784, 798, 825, 837, 847, 855, 857, 860, 862, 865, 867, 868, 869, 870, 881, 885, 888, 899, 902, 904, 905, 907, 909, 910, 911, 912, 913, 914, 916, 918, 921, 931, 932, 933, 941, 942, 945, 946, 947, 952, 958, 967, 978, 992, 993, 997, 999, 1020, 1022, 1024, 1031, 1032, 1033, 1034, 1038, 1046, 1057, 1066, 1069, 1073, 1076, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1133, 1136, 1137, 1143, 1148, 1150, 1171, 1172, 1180, 1182, 1186, 1187, 1190, 1192], "user": [21, 23, 29, 31, 47, 53, 60, 64, 66, 85, 102, 103, 111, 112, 124, 130, 146, 148, 158, 159, 161, 162, 163, 164, 166, 167, 169, 177, 184, 190, 193, 194, 195, 198, 202, 209, 218, 221, 223, 225, 234, 240, 242, 247, 248, 250, 251, 253, 254, 257, 260, 262, 271, 272, 275, 278, 281, 282, 284, 292, 296, 299, 306, 307, 309, 313, 318, 324, 326, 330, 336, 342, 354, 357, 366, 422, 453, 464, 466, 467, 469, 474, 482, 492, 509, 510, 530, 544, 560, 582, 585, 586, 592, 599, 643, 647, 666, 668, 669, 670, 671, 678, 679, 695, 699, 731, 742, 755, 777, 778, 784, 786, 796, 798, 823, 825, 838, 839, 852, 853, 855, 859, 863, 864, 865, 869, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 885, 909, 913, 916, 921, 922, 923, 932, 938, 945, 950, 951, 952, 955, 957, 960, 962, 967, 976, 979, 980, 982, 984, 985, 996, 999, 1013, 1015, 1016, 1017, 1020, 1037, 1038, 1075, 1082, 1084, 1085, 1089, 1101, 1102, 1108, 1113, 1115, 1118, 1120, 1121, 1134, 1139, 1142, 1146, 1149, 1158, 1165, 1176], "import": [21, 29, 64, 66, 150, 158, 164, 169, 172, 182, 183, 184, 185, 194, 195, 198, 200, 201, 206, 210, 212, 213, 214, 222, 226, 227, 228, 233, 234, 235, 237, 242, 244, 247, 250, 254, 257, 260, 263, 266, 267, 272, 275, 279, 280, 281, 282, 284, 286, 292, 296, 302, 307, 310, 314, 318, 324, 329, 330, 336, 340, 350, 352, 380, 396, 466, 469, 470, 607, 624, 690, 728, 742, 745, 763, 778, 807, 825, 867, 885, 922, 925, 929, 938, 950, 977, 987, 998, 1019, 1020, 1021, 1023, 1031, 1033, 1035, 1041, 1042, 1045, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1063, 1067, 1075, 1076, 1077, 1078, 1111, 1118, 1119, 1120, 1121, 1123, 1124, 1125, 1126, 1128, 1129, 1131, 1134, 1135, 1137, 1139, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1148, 1150, 1151, 1153, 1156, 1157, 1160, 1163, 1181, 1186], "pythonpath": [21, 40, 62, 194, 280, 1030, 1078], "goto": [21, 419, 426, 432, 436, 439, 443, 452, 456, 461, 462, 684, 722, 775, 777, 778, 996], "orgi": [21, 474, 686], "perspect": [21, 38, 169, 191], "alwai": [21, 43, 66, 81, 122, 158, 159, 164, 174, 191, 198, 221, 243, 254, 280, 281, 284, 326, 349, 357, 362, 380, 398, 424, 425, 437, 449, 450, 454, 455, 457, 458, 474, 475, 494, 504, 534, 583, 589, 599, 618, 621, 677, 682, 686, 697, 721, 730, 734, 737, 741, 746, 784, 803, 821, 825, 830, 851, 885, 886, 929, 930, 931, 945, 951, 957, 985, 996, 1001, 1011, 1016, 1022, 1050, 1054, 1068, 1123, 1128, 1129, 1130, 1156, 1157, 1176], "valgrind": [21, 98, 189, 223, 375, 452, 456, 457, 459, 461, 462, 489, 554, 564, 566, 574, 577, 592, 727, 740, 741, 778, 1173, 1174], "supervis": [21, 1130], "hack": [21, 53, 59, 63, 98, 142, 156, 159, 177, 185, 189, 194, 198, 199, 223, 224, 238, 240, 248, 259, 266, 267, 268, 269, 277, 289, 290, 298, 299, 306, 309, 313, 326, 327, 357, 361, 365, 366, 368, 375, 376, 424, 467, 488, 489, 502, 528, 530, 531, 532, 533, 534, 535, 536, 537, 540, 547, 549, 560, 602, 617, 618, 638, 680, 691, 722, 723, 724, 728, 740, 755, 763, 776, 777, 778, 779, 855, 880, 881, 921, 962, 1009, 1047, 1143, 1149, 1156, 1175, 1176, 1190], "someth": [21, 43, 55, 60, 67, 73, 74, 75, 79, 84, 85, 88, 129, 137, 155, 161, 162, 164, 165, 167, 169, 173, 177, 183, 190, 194, 202, 210, 212, 213, 214, 224, 234, 238, 245, 260, 263, 287, 289, 306, 309, 326, 352, 415, 416, 430, 484, 506, 539, 541, 577, 588, 592, 597, 600, 607, 631, 675, 676, 677, 687, 690, 704, 734, 742, 744, 745, 772, 773, 774, 778, 786, 798, 802, 813, 821, 825, 827, 830, 845, 897, 921, 922, 925, 929, 930, 931, 946, 947, 955, 957, 958, 970, 981, 983, 984, 996, 1011, 1018, 1020, 1021, 1023, 1027, 1044, 1051, 1053, 1058, 1068, 1074, 1105, 1130, 1181], "malloc": [21, 189, 437, 438, 451, 566, 811, 945, 997, 999, 1173], "seomth": 21, "cleanup": [21, 162, 181, 368, 583, 659, 695, 739, 997, 1020, 1157], "obviou": [21, 57, 119, 169, 177, 183, 244, 254, 281, 284, 354, 425, 444, 466, 541, 583, 690, 699, 740, 746, 763, 951, 993, 1018, 1054, 1065, 1179], "lead": [21, 111, 112, 114, 118, 129, 162, 164, 168, 169, 186, 223, 250, 254, 278, 296, 316, 384, 392, 402, 474, 664, 676, 825, 851, 864, 930, 983, 992, 993, 1011, 1038, 1064, 1075, 1085, 1136, 1150], "sever": [21, 88, 124, 162, 222, 223, 422, 491, 496, 670, 681, 823, 881, 922, 1022, 1048, 1059], "duplic": [21, 42, 49, 98, 125, 129, 141, 182, 195, 240, 248, 258, 280, 342, 384, 386, 447, 448, 491, 550, 558, 571, 592, 599, 610, 688, 745, 778, 832, 868, 921, 957, 960, 962, 979, 1105, 1156, 1158], "when": [21, 28, 30, 43, 60, 64, 66, 76, 81, 111, 112, 132, 137, 142, 149, 150, 159, 161, 162, 163, 164, 167, 169, 177, 179, 191, 194, 200, 223, 224, 231, 235, 237, 238, 240, 247, 248, 250, 253, 254, 267, 269, 278, 286, 287, 289, 296, 304, 320, 327, 343, 348, 357, 368, 375, 382, 390, 392, 398, 403, 414, 421, 425, 440, 445, 446, 447, 448, 449, 454, 464, 466, 469, 472, 476, 479, 480, 483, 484, 488, 508, 510, 541, 542, 586, 588, 589, 592, 600, 622, 638, 653, 654, 657, 659, 664, 666, 671, 675, 677, 682, 685, 687, 689, 690, 693, 710, 724, 729, 732, 737, 741, 742, 745, 749, 752, 754, 756, 776, 793, 796, 803, 807, 819, 821, 823, 825, 839, 858, 860, 864, 867, 869, 881, 885, 907, 918, 930, 931, 938, 942, 946, 947, 951, 954, 955, 973, 975, 981, 984, 985, 987, 992, 996, 997, 999, 1001, 1016, 1020, 1021, 1022, 1027, 1031, 1034, 1040, 1042, 1047, 1050, 1053, 1054, 1056, 1058, 1063, 1064, 1065, 1075, 1114, 1131, 1136, 1141, 1151, 1156, 1158, 1165, 1176, 1178, 1179], "void": [21, 42, 44, 55, 58, 108, 119, 121, 129, 133, 135, 137, 141, 164, 165, 173, 205, 223, 235, 357, 379, 380, 382, 386, 388, 390, 394, 400, 404, 418, 420, 421, 422, 423, 425, 428, 430, 431, 434, 437, 438, 440, 441, 447, 448, 451, 467, 474, 483, 484, 485, 489, 491, 495, 504, 513, 514, 518, 519, 522, 523, 524, 526, 538, 540, 541, 542, 565, 577, 584, 586, 587, 588, 589, 592, 593, 594, 595, 596, 597, 599, 600, 607, 613, 617, 626, 639, 653, 656, 657, 660, 662, 663, 672, 674, 682, 683, 688, 692, 695, 696, 710, 712, 713, 715, 716, 717, 718, 720, 721, 724, 725, 726, 727, 728, 729, 731, 732, 734, 739, 740, 741, 742, 744, 746, 749, 751, 754, 756, 758, 776, 786, 789, 796, 803, 805, 807, 809, 811, 819, 821, 830, 835, 839, 845, 862, 882, 943, 947, 948, 949, 951, 961, 968, 970, 972, 974, 978, 983, 989, 992, 993, 996, 997, 999, 1011, 1015, 1017, 1168], "f": [21, 31, 38, 43, 64, 110, 124, 136, 148, 163, 164, 165, 173, 185, 195, 200, 201, 206, 207, 210, 212, 218, 219, 221, 222, 228, 230, 231, 234, 235, 237, 241, 243, 244, 247, 250, 254, 257, 259, 261, 263, 271, 272, 275, 279, 282, 287, 292, 296, 301, 303, 310, 314, 318, 325, 330, 336, 340, 349, 351, 353, 368, 394, 399, 409, 411, 420, 423, 428, 447, 448, 450, 454, 458, 466, 483, 589, 593, 609, 683, 689, 695, 696, 725, 746, 749, 784, 789, 851, 862, 869, 885, 904, 911, 913, 914, 929, 930, 931, 932, 954, 985, 987, 992, 1007, 1011, 1014, 1018, 1020, 1021, 1022, 1023, 1035, 1037, 1039, 1040, 1043, 1044, 1045, 1064, 1065, 1073, 1080, 1085, 1118, 1120, 1123, 1131, 1156, 1186], "alloc": [21, 132, 164, 165, 182, 184, 223, 231, 234, 237, 247, 250, 272, 392, 421, 437, 442, 445, 448, 451, 489, 573, 575, 589, 591, 592, 599, 618, 623, 630, 635, 646, 650, 654, 679, 690, 693, 727, 732, 741, 742, 746, 776, 778, 781, 784, 786, 811, 813, 827, 830, 862, 868, 947, 948, 949, 969, 1029, 1080], "variabl": [21, 29, 88, 90, 91, 98, 105, 111, 112, 158, 163, 164, 173, 177, 181, 183, 184, 190, 194, 195, 198, 199, 200, 201, 203, 206, 207, 208, 213, 214, 219, 220, 222, 223, 225, 229, 232, 233, 235, 236, 237, 240, 241, 243, 245, 251, 252, 253, 254, 256, 258, 259, 261, 265, 268, 273, 274, 275, 277, 278, 281, 284, 287, 291, 293, 294, 295, 297, 298, 299, 300, 301, 307, 312, 313, 314, 316, 317, 319, 322, 323, 325, 328, 329, 331, 334, 335, 337, 338, 339, 341, 343, 344, 345, 346, 347, 348, 357, 359, 360, 379, 381, 382, 390, 395, 403, 410, 414, 415, 418, 419, 420, 424, 426, 427, 430, 432, 436, 437, 439, 440, 442, 443, 444, 450, 451, 452, 454, 456, 461, 462, 468, 470, 474, 476, 495, 503, 509, 518, 523, 528, 569, 574, 589, 597, 598, 605, 617, 657, 664, 679, 684, 690, 693, 695, 722, 724, 736, 755, 774, 775, 776, 777, 778, 794, 813, 825, 855, 856, 859, 862, 886, 905, 921, 962, 967, 970, 974, 975, 976, 981, 999, 1009, 1010, 1011, 1016, 1018, 1020, 1023, 1024, 1030, 1031, 1032, 1033, 1034, 1038, 1046, 1050, 1052, 1057, 1061, 1063, 1065, 1066, 1069, 1074, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1130, 1133, 1136, 1137, 1143, 1145, 1150, 1151, 1177, 1179, 1186, 1192], "filenam": [21, 42, 50, 55, 58, 161, 181, 185, 210, 228, 231, 234, 235, 237, 242, 247, 250, 260, 275, 278, 291, 292, 296, 324, 330, 340, 349, 466, 525, 528, 542, 776, 825, 851, 852, 914, 952, 955, 956, 957, 958, 959, 963, 966, 992, 1020, 1030, 1075, 1080, 1092, 1101, 1103, 1107, 1113, 1115], "getenv": [21, 523, 980], "fopen": 21, "read": [21, 29, 43, 47, 53, 55, 56, 57, 74, 75, 84, 86, 124, 161, 162, 163, 164, 165, 167, 169, 172, 173, 177, 190, 194, 198, 199, 201, 203, 209, 219, 222, 229, 232, 235, 237, 238, 240, 242, 248, 250, 251, 256, 257, 259, 262, 269, 270, 271, 274, 278, 280, 282, 288, 292, 294, 295, 296, 299, 300, 301, 318, 322, 323, 324, 326, 327, 329, 330, 334, 335, 336, 338, 339, 342, 343, 344, 345, 346, 347, 357, 361, 363, 368, 387, 388, 395, 403, 410, 419, 426, 432, 436, 439, 440, 442, 443, 444, 446, 448, 451, 452, 456, 460, 461, 462, 465, 481, 488, 509, 525, 530, 541, 542, 565, 571, 582, 585, 586, 588, 591, 594, 597, 643, 647, 666, 669, 681, 684, 691, 699, 722, 736, 744, 772, 775, 776, 777, 778, 784, 798, 809, 825, 827, 851, 852, 853, 856, 862, 867, 868, 869, 870, 872, 873, 876, 885, 886, 918, 921, 925, 929, 930, 931, 938, 943, 945, 946, 948, 949, 952, 955, 958, 960, 961, 962, 963, 965, 966, 973, 975, 979, 983, 989, 992, 993, 996, 997, 1016, 1022, 1023, 1038, 1041, 1043, 1051, 1059, 1081, 1082, 1092, 1101, 1111, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1129, 1131, 1139, 1146, 1189], "onli": [21, 29, 42, 43, 60, 90, 109, 111, 112, 124, 125, 129, 132, 142, 152, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 172, 173, 177, 182, 183, 190, 194, 198, 200, 201, 219, 221, 224, 231, 234, 237, 240, 241, 242, 244, 247, 248, 250, 251, 253, 254, 259, 261, 262, 263, 274, 275, 278, 280, 281, 287, 291, 294, 296, 300, 301, 304, 313, 320, 322, 328, 329, 334, 335, 338, 339, 348, 351, 365, 372, 382, 388, 390, 391, 392, 394, 399, 400, 402, 407, 414, 415, 418, 420, 422, 423, 424, 425, 441, 442, 446, 447, 448, 449, 450, 459, 464, 466, 467, 469, 470, 473, 475, 478, 479, 483, 484, 485, 487, 495, 503, 504, 506, 508, 509, 510, 522, 523, 538, 539, 542, 545, 546, 560, 571, 584, 585, 586, 587, 589, 591, 593, 594, 597, 599, 600, 606, 620, 622, 638, 639, 643, 653, 654, 656, 660, 664, 668, 669, 676, 678, 682, 689, 693, 695, 699, 704, 710, 720, 724, 727, 731, 732, 736, 737, 741, 742, 748, 750, 752, 754, 756, 762, 766, 768, 769, 778, 781, 783, 786, 789, 794, 805, 811, 821, 825, 830, 833, 838, 842, 850, 851, 852, 853, 860, 863, 867, 869, 870, 875, 881, 885, 886, 907, 914, 922, 923, 924, 929, 930, 931, 932, 942, 947, 948, 951, 953, 954, 955, 959, 961, 965, 967, 970, 975, 978, 981, 983, 984, 985, 986, 992, 993, 996, 997, 999, 1000, 1011, 1015, 1016, 1020, 1021, 1022, 1025, 1031, 1035, 1037, 1040, 1042, 1043, 1048, 1049, 1050, 1051, 1053, 1054, 1055, 1056, 1058, 1059, 1063, 1068, 1069, 1073, 1075, 1078, 1082, 1087, 1095, 1097, 1098, 1101, 1102, 1106, 1108, 1121, 1123, 1128, 1129, 1130, 1132, 1135, 1144, 1148, 1149, 1156, 1162, 1163, 1165, 1168, 1176, 1178, 1181, 1193], "bullshit": [21, 66, 206, 218, 254, 469, 732, 1186], "everyon": [21, 66, 162, 167, 177, 198, 464, 669, 720, 872, 873, 883, 985], "get": [21, 55, 64, 98, 111, 112, 150, 151, 158, 159, 162, 164, 165, 172, 173, 181, 194, 195, 198, 200, 205, 212, 213, 214, 221, 223, 224, 231, 234, 237, 238, 240, 243, 244, 247, 250, 257, 263, 267, 269, 272, 275, 278, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 352, 357, 360, 362, 377, 403, 448, 457, 480, 484, 489, 504, 513, 518, 595, 602, 674, 682, 692, 710, 716, 736, 737, 740, 741, 742, 743, 745, 758, 768, 776, 778, 786, 791, 798, 825, 827, 841, 844, 858, 860, 864, 865, 885, 921, 931, 938, 941, 947, 948, 949, 962, 964, 969, 986, 993, 997, 1014, 1020, 1033, 1036, 1042, 1046, 1054, 1071, 1141, 1148, 1158, 1163, 1168, 1181], "point": [21, 34, 36, 38, 40, 62, 90, 98, 107, 110, 113, 114, 117, 122, 124, 142, 161, 162, 163, 164, 166, 167, 168, 169, 172, 173, 177, 182, 183, 184, 185, 189, 194, 198, 199, 200, 201, 203, 221, 223, 224, 231, 234, 237, 240, 247, 250, 255, 258, 280, 289, 296, 313, 314, 316, 340, 343, 363, 364, 365, 368, 379, 380, 381, 386, 392, 394, 396, 398, 402, 424, 427, 430, 433, 434, 437, 438, 448, 450, 479, 484, 487, 494, 495, 503, 526, 528, 540, 560, 561, 562, 585, 587, 589, 591, 592, 593, 595, 596, 598, 601, 605, 616, 617, 625, 640, 641, 654, 659, 660, 679, 682, 685, 687, 689, 693, 699, 710, 732, 736, 741, 745, 757, 776, 778, 821, 825, 854, 862, 864, 868, 869, 885, 922, 923, 931, 941, 945, 948, 951, 984, 997, 1000, 1013, 1017, 1018, 1019, 1021, 1025, 1033, 1059, 1063, 1065, 1068, 1130, 1132, 1134, 1136, 1156, 1158, 1165, 1168, 1173, 1177], "unobvi": [21, 825], "best": [21, 30, 39, 48, 57, 129, 162, 163, 164, 173, 186, 243, 390, 422, 444, 451, 454, 455, 464, 543, 587, 592, 656, 721, 734, 754, 813, 815, 817, 821, 823, 862, 885, 907, 923, 930, 931, 967, 981, 985, 1013, 1027, 1033, 1070, 1075, 1077, 1134, 1144], "resourc": [21, 81, 98, 111, 112, 162, 164, 167, 179, 189, 224, 240, 281, 284, 289, 326, 327, 360, 368, 496, 560, 574, 585, 589, 590, 654, 679, 690, 691, 693, 722, 727, 738, 739, 741, 742, 747, 754, 755, 775, 777, 778, 809, 811, 819, 858, 862, 863, 930, 947, 948, 949, 967, 981, 984, 1020, 1073], "leaki": 21, "erron": [21, 451, 1085], "worst": [21, 162, 422, 931, 983, 996, 1176, 1179], "extract": [21, 29, 55, 98, 151, 155, 222, 248, 251, 256, 259, 271, 274, 294, 295, 300, 301, 322, 323, 329, 334, 335, 338, 339, 406, 425, 529, 530, 560, 571, 582, 776, 778, 825, 838, 851, 1013, 1038, 1060, 1082, 1116, 1117, 1118, 1119, 1121, 1129], "common": [21, 24, 154, 162, 219, 235, 236, 248, 254, 259, 330, 425, 434, 465, 540, 618, 745, 762, 766, 776, 850, 922, 923, 931, 955, 992, 1022, 1027, 1028, 1029, 1045, 1054, 1055, 1059, 1065, 1069, 1072, 1123, 1131, 1132, 1156, 1179], "hm": [21, 32, 64, 202, 212, 231, 234, 237, 244, 349, 815, 841, 842, 949, 1042, 1127, 1158, 1163, 1165], "end": [21, 23, 32, 37, 42, 107, 156, 161, 164, 165, 167, 169, 172, 194, 195, 200, 201, 206, 210, 214, 234, 235, 237, 238, 240, 250, 254, 257, 260, 274, 275, 296, 302, 309, 314, 330, 336, 340, 348, 349, 386, 389, 393, 414, 430, 442, 446, 447, 448, 450, 453, 454, 457, 487, 509, 510, 518, 519, 522, 523, 524, 574, 577, 589, 613, 615, 617, 618, 619, 621, 622, 624, 625, 626, 628, 629, 631, 635, 638, 642, 643, 649, 666, 682, 710, 713, 717, 724, 730, 731, 732, 734, 739, 740, 753, 754, 817, 823, 825, 841, 868, 869, 870, 885, 913, 917, 918, 929, 931, 947, 948, 949, 951, 957, 973, 992, 1025, 1045, 1049, 1051, 1058, 1061, 1065, 1069, 1073, 1144, 1146, 1148, 1151, 1186, 1189], "sketch": [21, 129, 142, 159, 165, 194, 201, 202, 214, 223, 224, 291, 313, 361, 365, 427, 428, 438, 450, 682, 782, 794, 992], "clearest": 21, "ach": 21, "bad": [21, 43, 130, 158, 161, 164, 171, 186, 194, 219, 225, 241, 242, 244, 253, 254, 269, 290, 291, 312, 326, 403, 446, 450, 464, 606, 672, 722, 733, 740, 758, 777, 778, 793, 805, 830, 833, 942, 943, 968, 970, 974, 975, 996, 1015, 1020, 1022, 1035, 1036, 1047, 1054, 1065, 1095, 1123, 1176], "earliest": 21, "noth": [21, 43, 64, 129, 152, 161, 162, 164, 167, 172, 177, 191, 202, 221, 234, 260, 313, 378, 417, 424, 448, 466, 473, 577, 656, 690, 697, 710, 724, 727, 793, 803, 821, 823, 857, 907, 922, 930, 931, 946, 948, 970, 992, 997, 1023, 1030, 1042, 1063, 1065, 1071, 1156, 1163, 1165], "jump": [21, 45, 105, 161, 414, 418, 577, 724, 727, 734, 864, 917, 996, 1131], "outest": 21, "level": [21, 79, 162, 163, 173, 231, 237, 247, 250, 271, 304, 320, 368, 392, 418, 424, 464, 467, 469, 470, 476, 484, 492, 703, 704, 776, 807, 809, 821, 828, 837, 861, 922, 929, 938, 942, 1001, 1009, 1022, 1030, 1042, 1063, 1073, 1098, 1102, 1132, 1135, 1145, 1151, 1178], "cleanup_stage1": 21, "screenplai": [22, 61, 155, 164, 185, 189, 241, 253, 262, 280, 288, 290, 301, 309, 312, 313, 316, 317, 322, 323, 328, 329, 334, 335, 338, 339, 357, 465, 481, 489, 560, 563, 566, 569, 572, 575, 578, 581, 617, 618, 638, 782, 785, 790, 795, 799, 801, 837, 840, 843, 846, 990, 994, 998, 1066, 1153, 1160, 1164, 1166, 1169], "dies": [23, 170, 171, 176, 179, 180, 181, 189, 195, 205, 206, 210, 218, 225, 242, 244, 250, 251, 254, 357, 362, 375, 1171, 1173, 1174, 1175, 1180, 1186, 1187, 1189, 1193, 1194], "einreichungsunterlagen": 23, "diesem": [23, 171, 205, 1173, 1190], "formular": 23, "projekten": [23, 1187, 1188], "mehrer": [23, 1180], "projektpartn": 23, "muss": [23, 185, 195, 205, 210, 251, 357, 362, 1171, 1173, 1180, 1187], "federf\u00fchrend": 23, "auftreten": 23, "projektleitung": 23, "projektabwicklung": 23, "seiten": 23, "f\u00f6rdergeb": 23, "erfolgtausschlie\u00dflich": 23, "federf\u00fchrenden": 23, "antragstel": 23, "s\u00e4mtlich": 23, "weiterenprojektpartn": 23, "innen": 23, "zus\u00e4tzlich": [23, 170], "anzugeben": 23, "aufteilung": 23, "f\u00f6rdersumm": 23, "erfolgen": [23, 176, 206], "soll": [23, 171, 197, 226, 265, 1170], "punkt": [23, 171, 181, 197, 207, 251], "erfolgreichemf\u00f6rderantrag": 23, "anschluss": 23, "f\u00f6rdervertrag": 23, "erstellt": 23, "derzuerkannten": 23, "\u00fcberweisungen": 23, "f\u00f6rderraten": 23, "anteil": 23, "dieprojektpartn": 23, "fall": [23, 171, 180, 194, 197, 205, 210, 254, 265, 406, 414, 532, 704, 710, 807, 965, 966, 983, 1125, 1145], "allenprojektpartn": 23, "unterschreiben": 23, "verbindlich": 23, "vereinbart": 23, "privatperson": 23, "organis": [23, 223], "uni": 23, "contemporari": 23, "open": [23, 34, 35, 38, 39, 42, 48, 49, 54, 64, 69, 114, 119, 120, 124, 142, 161, 162, 165, 169, 177, 179, 183, 185, 199, 201, 203, 212, 221, 222, 224, 228, 231, 234, 235, 237, 242, 245, 250, 257, 260, 262, 275, 278, 280, 282, 287, 289, 292, 296, 318, 324, 330, 336, 349, 364, 403, 464, 466, 472, 791, 819, 827, 852, 853, 861, 862, 864, 867, 869, 910, 929, 938, 946, 947, 952, 955, 957, 958, 961, 963, 966, 967, 989, 992, 996, 999, 1016, 1022, 1023, 1092, 1118, 1120, 1131, 1156, 1171, 1188, 1189], "wer": [23, 170], "unser": [23, 198, 206, 1171], "motiv": [23, 28, 98, 864, 883, 981, 1028, 1029], "300": [23, 181, 183, 195, 231, 234, 237, 242, 244, 250, 254, 257, 275, 296, 302, 318, 324, 330, 336, 340, 349, 380, 382, 384, 400, 424, 612, 613, 614, 615, 616, 618, 619, 620, 621, 635, 798], "zeichen": [23, 244], "lebe": 23, "einerseit": [23, 176], "kleineren": 23, "gr\u00f6\u00dferen": [23, 1188], "andererseit": [23, 176], "haupts\u00e4chlich": [23, 206, 1186], "unternehmen": 23, "halt": [23, 111, 112, 205, 234, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336, 858, 916, 931], "bringen": [23, 1171], "schulungsunterlagen": [23, 1170], "wartbarkeit": 23, "nichtverf\u00fcgbarkeit": 23, "problem": [23, 45, 57, 81, 108, 119, 124, 129, 150, 162, 169, 178, 181, 183, 185, 186, 192, 194, 195, 198, 199, 201, 203, 214, 218, 223, 240, 242, 248, 262, 267, 269, 280, 284, 287, 288, 290, 291, 299, 304, 305, 313, 316, 320, 321, 326, 327, 343, 364, 375, 403, 414, 424, 425, 428, 442, 448, 450, 466, 471, 495, 510, 554, 560, 595, 609, 622, 654, 657, 681, 754, 760, 771, 777, 778, 825, 864, 924, 985, 1009, 1011, 1015, 1020, 1025, 1027, 1030, 1031, 1042, 1054, 1068, 1118, 1123, 1125, 1129, 1148, 1156, 1157, 1171, 1178, 1179], "darstellt": 23, "wen": 23, "nutzen": [23, 1189], "400": [23, 159, 164, 181, 195, 205, 234, 237, 279, 296, 314, 330, 340, 466, 635, 1080, 1083], "stellen": [23, 176], "kursverlauf": 23, "vorhandenem": 23, "zusammen": [23, 1170], "bereiten": [23, 205], "kursergebniss": 23, "editoren": 23, "kreieren": 23, "warten": 23, "kursmateri": 23, "endbenutz": 23, "konsumieren": 23, "usecas": [23, 942, 1045], "gel\u00f6st": [23, 195], "500": [23, 205, 212, 231, 234, 237, 279, 324, 330, 340, 635, 922, 949, 1080, 1083], "hierarchisch": 23, "gruppierung": 23, "einzelthemen": 23, "zuwenig": 23, "bauen": [23, 1173, 1183, 1192], "aufeinand": [23, 912], "explizit": [23, 179, 189, 195, 205, 265, 292, 1173, 1174, 1190], "abh\u00e4ngigkeitsbeziehungen": [23, 1183], "fehlen": 23, "extrem": [23, 162, 221, 242, 250, 257, 260, 282, 357, 362, 425, 464, 617, 686, 734, 825, 852, 853, 1135, 1171, 1183], "verringert": 23, "zusammenarbeit": [23, 1170], "trainern": 23, "fehlend": [23, 181], "aggregierbarkeit": 23, "bzw": [23, 170, 179, 185, 189, 211, 375, 1180, 1187, 1189], "referenzierbarkeit": 23, "fremdunterlagen": 23, "analog": [23, 195, 992, 1141], "librari": [23, 64, 72, 75, 79, 86, 98, 104, 105, 107, 109, 111, 112, 124, 142, 162, 164, 173, 181, 183, 185, 190, 191, 192, 199, 201, 203, 222, 224, 231, 237, 247, 250, 254, 266, 267, 278, 280, 304, 305, 320, 321, 327, 358, 359, 360, 375, 376, 379, 380, 389, 397, 420, 437, 447, 454, 460, 470, 471, 475, 476, 478, 479, 488, 502, 525, 528, 530, 531, 532, 533, 534, 535, 536, 537, 540, 542, 549, 568, 582, 583, 627, 633, 637, 645, 646, 647, 649, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 681, 699, 704, 730, 755, 776, 777, 778, 803, 855, 858, 859, 921, 942, 943, 944, 949, 950, 952, 959, 960, 962, 967, 970, 976, 979, 982, 984, 996, 999, 1000, 1001, 1002, 1004, 1005, 1006, 1007, 1009, 1011, 1046, 1048, 1063, 1065, 1068, 1135, 1152, 1165, 1173, 1175, 1177, 1178, 1189, 1191], "anfangen": 23, "geben": [23, 1174, 1175], "trainingsunterlagen": 23, "ging": [23, 170, 375], "funktioniert": [23, 195, 244], "projektergebni": 23, "basiert": [23, 265, 1171, 1174, 1183, 1190], "popul\u00e4ren": 23, "dokumentationstool": 23, "gestaltet": [23, 189, 1170, 1180], "eigentlich": [23, 181, 195, 1171, 1174], "kern": 23, "begleitet": [23, 197], "meinem": [23, 171, 180, 206, 913, 1186], "eigenen": [23, 1180, 1187], "quasi": [23, 185, 189], "spin": [23, 754, 828, 862], "off": [23, 125, 132, 161, 163, 164, 167, 172, 183, 194, 214, 257, 403, 406, 445, 453, 454, 469, 475, 476, 531, 532, 537, 577, 657, 710, 745, 819, 830, 856, 881, 909, 922, 929, 931, 957, 966, 975, 985, 992, 1051, 1069, 1103, 1128, 1181], "anwendbar": [23, 1193], "klarer": 23, "bezug": [23, 251], "f\u00f6rdervoraussetzung": 23, "bitt": [23, 170, 189, 195, 205, 206, 340, 1170, 1186], "gehen": 23, "folgenden": [23, 189, 375, 913], "ausschlie\u00dflich": 23, "jene": 23, "aspekt": [23, 1172, 1180, 1187, 1190], "klaren": 23, "mehrwert": 23, "technologi": [23, 234, 983, 999, 1080], "infrastruktur": [23, 1171, 1180, 1187], "sozial": 23, "gesellschaft": 23, "umwelt": 23, "wirtschaftlich": [23, 197], "wissenschaftlich": 23, "kooperationen": 23, "regionalpolitik": 23, "framework": [23, 79, 179, 189, 198, 224, 240, 480, 539, 929, 931, 1149, 1156, 1157, 1192, 1194], "jeglich": [23, 1180], "art": [23, 32, 45, 1011, 1179], "konsistenzgecheckt": 23, "crossreferenc": 23, "webseiten": 23, "hinweg": [23, 206, 1186], "erm\u00f6glicht": [23, 197, 375], "gesellschaftlich": 23, "\u00f6ffentlich": [23, 176, 1170], "verf\u00fcgbarkeit": 23, "erleichterung": 23, "machen": [23, 170, 181, 185, 195, 244, 352, 375, 1171, 1174, 1175, 1180, 1194], "commun": [23, 64, 73, 74, 75, 79, 82, 84, 88, 122, 147, 150, 162, 177, 186, 194, 209, 278, 313, 354, 363, 364, 440, 484, 755, 756, 777, 778, 784, 825, 837, 858, 921, 922, 929, 930, 931, 946, 951, 962, 967, 976, 983, 986, 992, 997, 1031, 1119, 1122, 1139, 1176, 1179, 1181, 1190, 1191], "trainerinnen": 23, "kann": [23, 37, 170, 171, 179, 185, 189, 195, 205, 218, 225, 265, 318, 357, 362, 375, 1170, 1171, 1173, 1175, 1180, 1187, 1188, 1189, 1192, 1194], "sch\u00f6pfen": 23, "trainerinnenn": 23, "gegeneinand": 23, "genau": [23, 179, 181, 195, 352, 913, 1173, 1190, 1192, 1193], "die_der": 23, "adressat_in": 23, "je": [23, 32, 171, 205], "konkret": 23, "eingrenzen": 23, "desto": 23, "dieser": [23, 37, 170, 189, 205, 257, 352, 375, 1170, 1171, 1172, 1180, 1182, 1183, 1189, 1190], "adressat_innen": 23, "ber\u00fccksichtigen": 23, "wahrscheinlich": [23, 185, 1180, 1187], "deshalb": 23, "nachhaltig": 23, "wirkung": 23, "weil": [23, 181, 195, 197, 218, 257, 314, 375, 1171, 1173, 1175], "speziellen": 23, "konzepten": 23, "unterschiedlich": [23, 206, 251, 1186], "zielgruppen": 23, "beziehung": [23, 189], "zueinand": 23, "stehen": [23, 195, 1192], "anbieter_innen": 23, "nachfrager_innen": 23, "drei": [23, 170, 181, 189, 195, 205, 210, 212, 231, 234, 242, 244, 247, 250, 257, 260, 275, 282, 292, 296, 302, 314, 318, 336, 340, 352], "angeben": 23, "m\u00f6glichst": 23, "erheblich": 23, "ihrer": [23, 242, 357, 362, 1180, 1187], "jeweiligen": [23, 1170], "sein": [23, 171, 179, 180, 197, 205, 206, 218, 244, 282, 1171, 1173, 1186, 1187, 1189, 1192, 1193, 1194], "dann": [23, 171, 181, 189, 195, 206, 244, 250, 251, 257, 292, 375, 1171, 1183, 1186, 1194], "einzelnen": 23, "aussieht": [23, 1172], "erst": [23, 189, 205, 218, 244, 251, 257, 275, 314, 330, 352, 1171, 1173], "bestandteil": [23, 1192], "n": [23, 35, 38, 40, 50, 64, 112, 121, 164, 173, 181, 182, 183, 189, 195, 205, 210, 212, 213, 221, 223, 226, 227, 228, 231, 234, 235, 237, 240, 242, 244, 247, 250, 254, 257, 260, 272, 275, 282, 286, 292, 296, 314, 318, 324, 330, 336, 340, 348, 349, 350, 352, 357, 379, 380, 382, 386, 388, 390, 392, 394, 399, 402, 412, 414, 420, 421, 425, 430, 438, 442, 447, 466, 467, 474, 541, 574, 593, 599, 617, 663, 664, 667, 668, 670, 671, 674, 675, 676, 677, 678, 679, 687, 689, 704, 778, 803, 839, 858, 862, 872, 882, 885, 898, 914, 916, 917, 931, 943, 945, 946, 947, 948, 949, 955, 956, 958, 983, 989, 993, 996, 999, 1005, 1011, 1015, 1017, 1042, 1043, 1045, 1060, 1062, 1067, 1068, 1073, 1074, 1118, 1120, 1156, 1168], "l\u00f6sen": 23, "wollen": [23, 37, 210, 375, 1175, 1180, 1183, 1187, 1189], "hilfestellung": 23, "abgrenzung": 23, "organisationen": 23, "privatpersonen": 23, "bestimmt": 23, "branch": [23, 50, 54, 62, 122, 154, 165, 168, 177, 281, 284, 418, 459, 460, 768, 798, 825, 827, 837, 929, 931, 1058, 1188, 1194], "gruppen": 23, "staatlich": 23, "verwaltung": 23, "privat": [23, 57, 103, 108, 114, 119, 120, 124, 142, 164, 176, 177, 189, 191, 198, 199, 202, 222, 235, 240, 252, 271, 287, 289, 309, 356, 357, 362, 474, 478, 483, 485, 489, 491, 496, 506, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 528, 568, 574, 583, 587, 589, 591, 592, 594, 595, 596, 598, 600, 610, 625, 626, 643, 653, 655, 656, 668, 679, 682, 685, 686, 688, 689, 692, 693, 704, 706, 707, 708, 710, 712, 713, 716, 717, 718, 719, 725, 726, 727, 740, 741, 742, 745, 746, 754, 756, 762, 764, 766, 768, 778, 819, 854, 855, 860, 874, 880, 921, 938, 1043, 1151, 1168, 1190], "verein": 23, "npo": 23, "wissenschaft": 23, "universit\u00e4t": 23, "fachhochschulen": 23, "richtungen": 23, "regionen": 23, "stadt": [23, 227], "land": [23, 472, 763], "bezirk": 23, "gemeinden": 23, "interessensgruppen": 23, "selbstvermarkter_innen": 23, "landwirtschaft": 23, "handwerk": 23, "u": [23, 32, 34, 35, 36, 38, 42, 53, 59, 63, 124, 144, 164, 167, 172, 182, 192, 195, 198, 200, 206, 223, 234, 238, 242, 244, 247, 250, 272, 279, 296, 316, 402, 433, 458, 742, 794, 800, 835, 862, 870, 881, 882, 884, 885, 909, 922, 929, 931, 950, 987, 996, 999, 1009, 1017, 1054, 1056, 1080, 1131, 1135, 1139, 1151, 1156, 1163, 1179, 1186], "altersgrupp": 23, "genderspezifisch": 23, "frauen": 23, "region": [23, 162, 781, 809], "grupp": [23, 210, 366, 913], "sch\u00fcler_innen": 23, "lehrer_innen": 23, "thematisch": 23, "deutsch": [23, 226, 355, 356, 1170], "fl\u00fcchtling": 23, "posit": [23, 29, 64, 122, 169, 195, 198, 199, 201, 203, 205, 210, 218, 222, 231, 238, 242, 247, 248, 250, 257, 260, 271, 274, 281, 284, 286, 288, 290, 291, 294, 296, 300, 302, 306, 309, 312, 313, 316, 317, 318, 324, 330, 343, 388, 425, 438, 577, 618, 625, 634, 635, 758, 778, 885, 922, 930, 946, 947, 951, 992, 1020, 1021, 1024, 1065, 1066, 1068, 1069, 1070, 1121, 1136, 1144, 1158, 1163], "zielgruppentyp": 23, "350": [23, 234, 237, 282, 296, 324, 330, 336, 340, 1080], "bereitet": 23, "vor": [23, 170, 171, 185, 195, 207, 242, 340, 1183, 1192], "lt": [23, 32, 35, 36, 164, 169, 181, 184, 189, 190, 195, 200, 205, 210, 212, 218, 221, 226, 231, 234, 237, 242, 244, 247, 250, 254, 257, 260, 263, 272, 275, 279, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 351, 352, 353, 530, 547, 549, 582, 627, 633, 637, 646, 649, 650, 679, 778], "zielvorgaben": 23, "basierend": [23, 181, 1170, 1175], "existierendem": 23, "f\u00fchrt": [23, 171, 1190], "jederzeit": [23, 176, 185, 375], "\u00fcberblick": [23, 185, 189, 251, 265, 375, 376, 1170, 1178, 1180, 1186, 1187, 1190, 1192], "behaltend": 23, "behandelten": 23, "fragen": [23, 197, 213, 357, 362, 375, 1170, 1180, 1187], "antworten": [23, 197], "info": [23, 172, 279, 280, 330, 454, 458, 459, 460, 466, 467, 469, 592, 741, 800, 930, 970, 1000, 1001, 1156], "bed\u00fcrfni": [23, 170], "schulungsagenden": 23, "erstellen": [23, 375, 1175, 1180], "zeitaufw\u00e4ndig": 23, "fehlertr\u00e4chtig": 23, "vom": [23, 65, 170, 179, 180, 181, 195, 205, 206, 225, 250, 254, 1180, 1186, 1187, 1194], "erwartet": [23, 171, 195], "w\u00e4hrend": [23, 1170], "einzugehen": [23, 197, 1193], "geplanten": [23, 1170], "verlassen": [23, 847], "birgt": 23, "chao": [23, 883, 1054], "teilnehmerinnen": 23, "\u00fcbersichtlich": 23, "nachbearbeitung": 23, "hinterlassen": [23, 170], "absch\u00e4tzung": 23, "zielgruppengr\u00f6\u00df": 23, "affinem": 23, "background": [23, 173, 266, 267, 269, 326, 327, 680, 684, 710, 722, 749, 775, 777, 778, 800, 863, 930, 968, 977, 983, 1031], "inklus": [23, 182, 195, 205, 218, 330, 1170, 1175, 1180], "betroffen": 23, "eu": [23, 32], "20000": [23, 161, 237], "erkennung": 23, "abstand": 23, "erfordert": [23, 1180], "vgl": [23, 195, 1190, 1193], "frosch": 23, "wassergla": 23, "selbst": [23, 37, 185, 195, 205, 847, 1170, 1171, 1180, 1183, 1189, 1194], "umstellung": 23, "zus\u00e4tzlichen": 23, "bedeutet": [23, 326], "besten": [23, 185, 251, 1173], "einsatz": [23, 1171], "erw\u00e4gung": 23, "ziehen": 23, "angegebenen": 23, "erheblichen": [23, 1173], "bed\u00fcrfnissen": 23, "kenntni": 23, "erlangt": 23, "mitgli": 23, "editor": [23, 30, 64, 177, 194, 343, 910, 1047, 1051, 1130, 1149], "verfasst": 23, "identisch": 23, "obig": 23, "behebt": 23, "inkonsistenzen": 23, "baut": [23, 1171, 1189], "neue": [23, 195, 205, 237, 265, 314, 330, 352, 375, 1190], "verliert": [23, 1194], "aufbaubeziehungen": 23, "verlangt": [23, 1170], "grundlag": 23, "folienmateri": 23, "meist": [23, 1189], "powerpoint": [23, 30], "propriet\u00e4r": 23, "formaten": 23, "praktisch": [23, 181, 1170], "unm\u00f6glich": 23, "macht": [23, 179, 181, 185, 189, 195, 201, 205, 247, 251, 352, 1173, 1180, 1187, 1194], "artefakttypen": 23, "livehack": [23, 24, 61, 124, 155, 181, 187, 189, 198, 199, 206, 225, 238, 240, 241, 253, 262, 267, 269, 270, 278, 281, 288, 290, 295, 301, 306, 309, 312, 313, 316, 317, 322, 323, 328, 329, 334, 335, 338, 339, 357, 375, 465, 481, 488, 560, 776, 778, 790, 827, 1066, 1153, 1160, 1186], "st\u00fcckwerk": 23, "trainerin": 23, "oben": [23, 130, 170, 195, 206, 212, 1186], "zielt": 23, "darauf": [23, 170, 181, 1170, 1173], "transpar": [23, 29, 37, 809, 811, 861, 1136], "wiederzuverwenden": 23, "sodass": [23, 37, 189, 1189, 1194], "aufgebrochen": 23, "schwer": [23, 185, 195, 375, 1180, 1187, 1192], "abzusch\u00e4tzen": 23, "abzielt": 23, "weg": [23, 170, 171, 181, 185, 197, 210, 225, 265, 375, 1171, 1173, 1174, 1175, 1187], "dorthin": 23, "m\u00fcssen": [23, 195, 357, 362, 1180, 1187], "unterst\u00fctzt": [23, 1194], "kursf\u00fchrung": [23, 375], "fragt": [23, 171], "unklarheiten": 23, "weist": [23, 170], "etwaig": 23, "verwandt": [23, 1173], "hin": [23, 375], "plausibl": [23, 164], "realistisch": 23, "bzgl": 23, "kursdauer": 23, "strukturierten": [23, 206], "langweiligen": 23, "tatsachen": 23, "entsprechend": 23, "hunderttausend": 23, "allerd": [23, 195, 197, 1174, 1175, 1189, 1194], "keinen": [23, 170, 314, 1173], "einfluss": 23, "wahl": [23, 1194], "gespr\u00e4ch": 23, "betroffenen": 23, "assoziieren": 23, "metadaten": 23, "setzt": [23, 179, 1171, 1180], "vorau": 23, "beziehungen": 23, "passt": [23, 205, 206, 1186], "ganz": [23, 170, 171, 180, 181, 185, 195, 197, 211, 212, 226, 243, 244, 340, 375, 1174, 1175, 1189], "gut": [23, 170, 171, 195, 206, 375, 693, 1170, 1186], "y": [23, 112, 144, 173, 182, 183, 185, 212, 221, 227, 228, 234, 235, 237, 238, 250, 260, 263, 272, 275, 282, 292, 296, 302, 318, 324, 336, 340, 403, 409, 427, 430, 433, 434, 438, 450, 454, 466, 528, 538, 584, 585, 586, 587, 589, 591, 592, 593, 594, 595, 596, 598, 600, 602, 603, 610, 617, 625, 664, 685, 686, 687, 689, 704, 706, 707, 708, 725, 736, 745, 793, 794, 825, 826, 858, 872, 885, 887, 898, 904, 929, 930, 931, 1005, 1013, 1019, 1077, 1080, 1128], "algorithmen": [23, 265, 1175], "automatisch": [23, 1190, 1194], "berechnen": 23, "semiautomatisch": 23, "kursnavig": 23, "nachbereitung": 23, "plaintext": 23, "artefakt": [23, 1175], "text": [23, 27, 39, 40, 61, 158, 172, 183, 194, 197, 202, 203, 210, 222, 223, 228, 235, 242, 244, 262, 265, 268, 275, 277, 296, 298, 340, 399, 473, 778, 855, 917, 921, 948, 999, 1047, 1054, 1060, 1069, 1078, 1101, 1135, 1142, 1147, 1149, 1183], "restrukturierung": 23, "o": [23, 29, 32, 38, 64, 79, 86, 91, 98, 99, 101, 108, 111, 112, 124, 137, 141, 144, 155, 162, 164, 165, 172, 173, 181, 185, 189, 199, 201, 202, 203, 205, 210, 212, 213, 219, 222, 223, 227, 229, 232, 233, 234, 235, 238, 239, 240, 241, 246, 247, 251, 252, 253, 254, 256, 258, 261, 263, 265, 268, 272, 274, 277, 278, 279, 281, 282, 284, 287, 288, 291, 293, 294, 295, 297, 298, 300, 302, 312, 314, 316, 317, 322, 323, 324, 328, 329, 331, 334, 335, 337, 338, 341, 342, 343, 344, 345, 346, 347, 348, 357, 362, 364, 375, 377, 379, 395, 410, 419, 425, 426, 430, 432, 436, 439, 442, 443, 452, 454, 456, 458, 459, 461, 462, 466, 467, 473, 478, 492, 519, 530, 541, 582, 600, 684, 722, 748, 754, 755, 756, 775, 776, 777, 778, 793, 794, 802, 803, 825, 832, 851, 852, 853, 854, 855, 856, 858, 859, 861, 862, 870, 882, 885, 889, 890, 892, 893, 896, 897, 899, 905, 913, 914, 918, 921, 922, 929, 930, 942, 952, 955, 956, 957, 958, 959, 962, 967, 968, 976, 979, 982, 983, 984, 993, 999, 1000, 1001, 1005, 1007, 1011, 1015, 1016, 1017, 1020, 1022, 1024, 1025, 1026, 1030, 1046, 1049, 1052, 1054, 1060, 1068, 1075, 1080, 1081, 1082, 1092, 1095, 1103, 1106, 1107, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1128, 1136, 1137, 1151, 1156, 1163, 1173, 1180, 1193], "konsistent": 23, "referenzierung": 23, "fremdmateri": 23, "speisekart": 23, "unterst\u00fctzung": 23, "themenauswahl": [23, 1170], "korrekt": [23, 1173], "vorbereitet": [23, 375], "ma\u00dfnahmen": 23, "sicherstellung": 23, "geplant": 23, "beispielsweis": [23, 176, 1193], "rahmen": 23, "webplattform": 23, "entsteht": 23, "erh\u00f6hung": 23, "sichtbarkeit": [23, 1173, 1190], "aktuel": 23, "inhalt": [23, 195, 197, 227, 358, 847, 1170, 1194], "wartung": 23, "performanceverbesserungen": 23, "plane": [23, 183, 185, 1125], "kein": [23, 180, 181, 185, 195, 205, 212, 227, 263, 282, 340, 352, 375, 1188], "impactmein": 23, "sicherzustellen": 23, "erkl\u00e4rung": [23, 219], "erkl\u00e4ren": [23, 1173], "gew\u00fcnscht": [23, 195], "erreicht": [23, 170, 171, 1187], "hatt": [23, 170, 171, 185, 195, 197], "button": [23, 60, 124, 161, 169, 248, 922], "gew\u00e4hlt": [23, 170, 171], "dzugeh\u00f6rig": 23, "textfeld": 23, "l\u00e4sst": [23, 1189], "bearbeiten": 23, "daher": [23, 1194], "konvertiert": 23, "unten": [23, 130, 171, 185, 195, 1171], "beschriebenen": 23, "kan\u00e4len": 23, "promot": [23, 166], "angab": 23, "quellen": 23, "literatur": [23, 223, 597], "lightweight": [23, 152, 177, 194, 198, 214, 248, 250, 262, 685, 743, 746, 1123, 1135, 1176], "daringfirebal": 23, "project": [23, 24, 29, 30, 38, 42, 53, 59, 60, 63, 66, 69, 107, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 141, 144, 152, 158, 159, 162, 163, 165, 167, 168, 169, 174, 181, 183, 185, 191, 194, 198, 201, 208, 213, 222, 241, 245, 248, 251, 278, 281, 288, 295, 327, 361, 362, 368, 370, 375, 376, 446, 453, 457, 465, 467, 468, 469, 472, 473, 475, 477, 480, 481, 482, 488, 528, 529, 538, 541, 601, 603, 604, 748, 778, 825, 864, 920, 922, 924, 929, 930, 941, 959, 999, 1000, 1001, 1014, 1015, 1023, 1026, 1076, 1082, 1109, 1111, 1121, 1122, 1124, 1125, 1129, 1137, 1139, 1153, 1155, 1159, 1160, 1165], "docutil": [23, 32, 34, 35, 36, 38], "sourceforg": 23, "io": [23, 32, 55, 64, 92, 137, 141, 162, 166, 168, 183, 185, 199, 201, 202, 203, 204, 211, 213, 214, 222, 223, 236, 252, 268, 275, 277, 283, 298, 299, 313, 319, 325, 345, 357, 360, 362, 364, 379, 583, 776, 778, 802, 821, 822, 837, 855, 858, 866, 921, 930, 931, 984, 992, 1013, 1020, 1073, 1172, 1180, 1182, 1187, 1189, 1193], "generatoren": [23, 185, 252, 375], "staticgen": 23, "learn": [23, 29, 66, 69, 71, 76, 78, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 145, 162, 164, 182, 183, 185, 194, 198, 202, 223, 232, 312, 316, 343, 358, 360, 464, 728, 778, 867, 922, 930, 984, 1046, 1047, 1121, 1125, 1129, 1137, 1158], "moodl": [23, 107, 110, 111, 112, 124, 169, 361, 363, 364, 665, 679, 778, 855, 859, 874, 880, 899, 905, 921, 1006, 1009], "schoologi": 23, "eduongo": 23, "produkt": 23, "dienstleistungen": 23, "recherch": [23, 185], "hinblick": [23, 1182], "ihnen": [23, 171, 912, 1170, 1180, 1187], "nennen": 23, "beschreiben": 23, "st\u00e4rken": [23, 1173], "schw\u00e4chen": [23, 1175], "konkurrierenden": 23, "relevant": [23, 185, 375, 1193], "anbiet": 23, "ziel": [23, 1171, 1187], "allumfassend": 23, "eh": [23, 32, 195, 205, 210, 218, 244, 250, 254, 257, 302, 324], "vielmehr": 23, "bietet": [23, 176, 179, 1189], "beim": [23, 170, 171, 181, 185, 195, 1173], "verfassen": 23, "kernthema": 23, "zwischen": [23, 179, 195, 205, 212, 218, 375, 1173, 1174, 1175, 1187, 1194], "benutz": [23, 1190], "vorgaben": 23, "existiert": [23, 195, 207], "wald": 23, "dass": [23, 170, 171, 179, 181, 185, 189, 195, 206, 210, 212, 226, 357, 362, 375, 1170, 1173, 1174, 1175, 1180, 1186, 1187, 1190, 1194], "beisteuert": 23, "eben": [23, 176, 179, 205], "\u00fcbergreifend": 23, "definiert": [23, 181, 195, 1170, 1173], "ansatz": 23, "mir": [23, 170, 171, 185, 195, 206, 210, 242, 357, 362, 375, 1173, 1186], "verfolgt": [23, 1187], "essentiel": 23, "gesundheit": 23, "unterlagen": [23, 158, 225, 241, 253, 375], "licht": 23, "lesen": [23, 179, 180, 181, 195, 207, 357, 362], "einig": [23, 171, 182, 197, 375, 1173, 1180], "plugin": [23, 164, 492, 729, 1013], "helfen": 23, "lieblo": 23, "halbherzig": 23, "On": [23, 98, 102, 107, 110, 111, 112, 124, 144, 162, 164, 177, 198, 214, 224, 240, 256, 258, 266, 267, 269, 272, 278, 284, 287, 326, 357, 442, 448, 457, 460, 492, 530, 538, 627, 646, 650, 679, 682, 722, 730, 749, 777, 778, 803, 826, 830, 855, 858, 859, 921, 923, 929, 931, 938, 942, 943, 946, 950, 957, 960, 962, 979, 987, 997, 1002, 1009, 1010, 1014, 1052, 1139, 1143, 1158, 1176], "zentral": [23, 158], "ergebni": [23, 247], "niemand": 23, "doc": [23, 37, 39, 66, 125, 137, 141, 166, 168, 181, 182, 184, 214, 222, 229, 231, 237, 246, 247, 250, 254, 257, 272, 315, 342, 354, 357, 362, 365, 366, 377, 577, 781, 796, 802, 805, 885, 907, 965, 1068, 1134], "show": [23, 24, 27, 29, 43, 58, 64, 119, 124, 133, 137, 142, 161, 162, 164, 165, 169, 190, 198, 201, 202, 214, 223, 231, 237, 240, 247, 248, 250, 278, 290, 291, 304, 312, 320, 326, 327, 342, 343, 361, 363, 364, 365, 368, 427, 467, 469, 478, 509, 525, 531, 577, 666, 763, 788, 807, 809, 841, 852, 853, 885, 907, 910, 912, 914, 922, 924, 929, 930, 931, 950, 981, 983, 987, 992, 996, 1009, 1011, 1019, 1058, 1075, 1077, 1128, 1129, 1151, 1158, 1165, 1178], "revealj": 23, "option": [23, 31, 79, 156, 162, 163, 164, 168, 172, 177, 181, 186, 202, 214, 238, 250, 254, 262, 265, 266, 267, 275, 280, 284, 296, 304, 305, 313, 316, 320, 321, 326, 330, 357, 377, 386, 387, 403, 414, 415, 454, 467, 470, 471, 479, 480, 486, 513, 541, 763, 778, 794, 845, 849, 852, 853, 861, 913, 931, 932, 934, 942, 955, 959, 993, 1001, 1057, 1075, 1078, 1151, 1158, 1165, 1173, 1178, 1191], "webslid": 23, "tv": [23, 32, 169], "sicht": [23, 180, 251, 1173], "entscheidend": 23, "usp": 23, "vorteilhaft": 23, "unterscheidet": [23, 1173], "600": [23, 231, 237, 635], "kernfeatur": 23, "inbeziehungsetzen": 23, "dessen": [23, 180, 195, 292, 375, 1171, 1175, 1188], "versagen": 23, "implementierung": 23, "solcher": [23, 179, 195], "featur": [23, 29, 42, 46, 55, 56, 60, 79, 81, 122, 124, 142, 167, 169, 179, 190, 195, 198, 199, 201, 203, 208, 213, 222, 231, 237, 240, 247, 248, 250, 251, 253, 254, 293, 326, 359, 375, 376, 452, 456, 461, 462, 464, 465, 467, 656, 681, 684, 691, 698, 709, 723, 733, 734, 738, 742, 747, 755, 774, 775, 777, 778, 817, 825, 922, 930, 931, 951, 983, 993, 1000, 1001, 1017, 1031, 1032, 1033, 1034, 1038, 1041, 1048, 1060, 1061, 1076, 1079, 1080, 1081, 1082, 1095, 1106, 1109, 1110, 1111, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1125, 1126, 1129, 1133, 1137, 1139, 1141, 1150, 1153, 1155, 1156, 1160, 1171, 1173, 1174, 1176, 1180, 1187], "indem": [23, 205, 358, 1180], "foku": [23, 375], "schulbetrieb": 23, "legen": [23, 912], "ferner": 23, "schwere": 23, "abh\u00e4ngigkeiten": [23, 1183], "fett": [23, 195, 212], "datenbanken": [23, 218, 375], "webserv": [23, 930], "hintergrund": [23, 205], "redaktionel": 23, "arbeit": [23, 185, 1171], "offlin": 23, "laptop": [23, 163, 165, 172, 941], "zug": 23, "erledigen": [23, 1171], "einschr\u00e4nkung": 23, "geserv": 23, "erarbeitet": [23, 1170], "sinn": [23, 189, 1173], "prinzip": [23, 1190, 1192, 1194], "kostenlo": 23, "genutzt": [23, 179], "weiterentwickelt": [23, 1175, 1180], "f\u00f6rderbedingungen": 23, "projektseit": 23, "ver\u00f6ffentlichen": 23, "nachvollziehbar": 23, "strukturieren": 23, "f\u00f6rderzusag": 23, "hinwei": 23, "verpflichtend": 23, "gesondert": 23, "erw\u00e4hnen": 23, "projektzwischenbericht": 23, "projektzusammenfassung": 23, "projektendbericht": 23, "entwicklerdokument": 23, "anwenderdokument": 23, "dienstleistungsbeschreibung": 23, "abh\u00e4ngig": 23, "dokument": [23, 180, 195, 206, 227, 242, 254, 314, 352, 1188], "externkommunik": 23, "erreichung": 23, "nachhaltigkeit": 23, "projektergebnistyp": 23, "haupteigenschaften": 23, "funktionalit\u00e4t": [23, 195], "sourcecod": [23, 179], "bestehend": 23, "unabh\u00e4ngigem": 23, "unitgetestetem": 23, "core": [23, 59, 63, 161, 162, 164, 165, 194, 197, 201, 206, 219, 234, 245, 248, 250, 257, 260, 275, 279, 282, 292, 296, 318, 324, 330, 336, 380, 392, 437, 481, 482, 489, 494, 508, 509, 540, 592, 597, 690, 720, 740, 796, 800, 825, 862, 900, 916, 981, 984, 985, 996, 997, 1013, 1080, 1123, 1128, 1141, 1142, 1144, 1145, 1156, 1191], "reih": [23, 176, 189, 197], "direct": [23, 37, 39, 64, 124, 141, 159, 162, 223, 281, 284, 343, 414, 425, 460, 473, 600, 746, 784, 861, 918, 945, 947, 963, 965, 966, 1001, 1015, 1042, 1128, 1136, 1145, 1178, 1181], "generierten": 23, "kursagenda": 23, "graphen": 23, "lizenz": 23, "gpl": [23, 592, 741, 781], "pypi": [23, 145, 158, 194, 198, 213, 229, 245, 271, 1150, 1151, 1156], "installierbar": 23, "paket": [23, 179, 1171], "generiert": [23, 195], "readthedoc": [23, 32, 39], "gehostet": 23, "verf\u00fcgbar": [23, 985, 1183], "obigen": 23, "bisherigen": [23, 1175], "aktuellen": [23, 205], "bereich": [23, 185, 375], "umfeld": 23, "projektantrag": 23, "bisher": [23, 158, 1170], "softwarebasi": 23, "grundlegend": [23, 207, 1175, 1180, 1187, 1189, 1192], "semiprofessionel": 23, "visualisierung": 23, "plan": [23, 42, 62, 161, 185, 194, 229, 238, 248, 313, 356, 357, 361, 365, 371, 464, 580, 690, 748, 825, 1156, 1163], "kurz": [23, 170, 171, 195, 197, 206, 211, 226, 251, 1172, 1186, 1189], "lebensl\u00e4uf": 23, "projektbeteiligten": 23, "sowi": [23, 1183], "ver\u00f6ffentlichungen": 23, "b\u00fccher": 23, "fachartikel": 23, "patent": 23, "vortr\u00e4g": 23, "gebiet": [23, 171, 1192], "projektinhalt": 23, "verdeutlichen": [23, 1171], "teamleitung": 23, "softwareprojekt": 23, "stefan": [23, 180], "walkner": 23, "1983": [23, 583], "hallein": 23, "master": [23, 62, 144, 165, 168, 177, 358, 359, 821, 825, 914, 926], "scienc": [23, 28, 79, 169, 183, 194, 198, 203, 232, 301, 315, 337, 359, 583, 636, 1048, 1127, 1128, 1129, 1130], "salzburg": 23, "consult": [23, 59, 60, 63, 159, 162, 175, 213, 231, 237, 247, 250, 254, 363, 489], "isamberth": 23, "adnet": 23, "2000": [23, 218, 221, 237, 242, 254, 275, 466, 492, 985], "2002": [23, 237, 592, 741], "divers": [23, 186, 1172], "2005": [23, 583], "2007": 23, "entwicklungsleit": 23, "nextsens": 23, "2016": [23, 197, 198, 219, 222, 237, 245, 271, 278, 286, 295, 317, 1123], "programmiererfahrung": [23, 1180, 1187, 1194], "bash": [23, 100, 124, 159, 169, 178, 202, 212, 214, 234, 242, 250, 257, 260, 268, 275, 277, 278, 282, 289, 292, 296, 298, 318, 324, 330, 336, 357, 358, 359, 362, 364, 376, 488, 502, 530, 531, 532, 533, 534, 535, 536, 537, 540, 582, 732, 735, 755, 776, 777, 778, 848, 852, 853, 854, 855, 857, 858, 859, 860, 862, 863, 866, 867, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 885, 886, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 910, 915, 916, 921, 944, 947, 950, 952, 954, 957, 960, 962, 963, 976, 978, 979, 982, 984, 999, 1001, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1013, 1020, 1101, 1171, 1182], "davon": [23, 170, 181, 1173, 1192], "teamleit": 23, "m\u00f6chten": [23, 1194], "ggf": 23, "kennenlernen": 23, "knackig": [23, 158], "darstellung": 23, "handelnden": 23, "personen": 23, "sendung": 23, "minuten": [23, 913], "millionen": 23, "ihren": [23, 195, 207], "antrag": 23, "nochmal": 23, "vorgelesen": 23, "bekommen": [23, 189, 375, 1170, 1183], "un": [23, 189, 197, 375, 803, 909, 1042, 1171], "hintergrundmusik": 23, "windger\u00e4usch": 23, "gerad": [23, 171, 205, 206, 375, 1173, 1186], "f\u00f6rdern": 23, "sollen": 23, "animiert": 23, "produktvideo": 23, "interessieren": 23, "sicher": [23, 181, 185], "mindesten": [23, 181], "vier": [23, 181, 195, 205, 210, 212, 227, 231, 234, 242, 244, 247, 254, 260, 272, 275, 279, 282, 292, 302, 314, 318, 330, 340, 352, 1180, 1193], "monat": 23, "einreichschluss": 23, "uneingeschr\u00e4nkt": 23, "aufrufbar": 23, "youtu": [23, 735, 739], "hobyb1zukdi": 23, "projektrisiken": 23, "sehen": [23, 171], "wenig": [23, 180, 195, 265, 375, 1171], "pflegen": 23, "frontalen": 23, "vortragsstil": 23, "starker": 23, "paradigmenwechsel": 23, "wechsel": 23, "jahrelang": 23, "gewohnten": 23, "verfahrensweisen": 23, "abrupt": 23, "gro\u00dfer": 23, "monolithisch": 23, "zerhacken": 23, "welchen": 23, "bewerten": 23, "messen": 23, "zielerreichung": 23, "kriterium": 23, "arbeitserleichterung": 23, "minimal": [23, 195], "erfolg": [23, 1173], "mindestkriterien": 23, "positiven": 23, "projekterfolg": 23, "jedenfal": 23, "abgedeckt": 23, "ausgezeichnet": 23, "kriterien": [23, 176, 189, 913], "angestrebten": 23, "ausgezeichneten": 23, "anerkennen": 23, "gesteigerten": 23, "effekt": [23, 195, 206, 1186, 1194], "bekundet": 23, "medien": [23, 1193], "berichtet": 23, "migrat": [23, 189], "zehn": [23, 205], "migrieren": 23, "verwenden": [23, 176, 189, 195, 201, 205, 210, 1193], "untereinand": 23, "zutun": 23, "zusammenzuarbeiten": 23, "kooperationspartner_innen": 23, "dienstleister_innen": 23, "mitwirkend": 23, "zielgruppenvertreter_innen": 23, "werbeagentur": 23, "schaar": 23, "logo": 23, "webdesign": 23, "wof\u00fcr": 23, "arbeitsstunden": 23, "geld": 23, "allem": [23, 170, 185, 195, 375, 1192], "eingesetzt": [23, 1171, 1188], "basisarbeit": 23, "workflow": [23, 122, 189, 223, 238, 798, 993, 1188], "datenstrukturen": [23, 207, 225, 246, 1175], "zeitgem\u00e4\u00df": 23, "interakt": [23, 1073], "know": [23, 42, 59, 63, 66, 70, 81, 85, 142, 159, 161, 162, 163, 164, 167, 168, 169, 177, 182, 183, 186, 190, 191, 194, 198, 202, 213, 214, 221, 224, 281, 284, 288, 313, 359, 390, 392, 398, 403, 420, 430, 442, 444, 446, 448, 452, 453, 454, 456, 460, 461, 462, 464, 473, 479, 483, 484, 496, 533, 541, 568, 584, 586, 592, 594, 598, 617, 654, 657, 660, 681, 682, 684, 693, 695, 697, 720, 722, 731, 740, 742, 746, 756, 775, 777, 778, 780, 796, 803, 825, 864, 885, 922, 925, 929, 931, 942, 947, 949, 958, 968, 996, 1017, 1025, 1030, 1031, 1042, 1047, 1050, 1053, 1054, 1073, 1080, 1118, 1122, 1156, 1181], "welchem": [23, 181], "umfang": 23, "sachressourcen": 23, "ben\u00f6tigt": [23, 206, 207, 1186], "zugekauft": 23, "backendprogrammierung": 23, "programmiersprach": [23, 1172, 1175, 1187, 1189], "200": [23, 158, 159, 181, 183, 195, 212, 214, 221, 228, 231, 234, 237, 242, 244, 250, 254, 257, 260, 272, 275, 279, 286, 296, 302, 314, 318, 324, 330, 336, 340, 349, 354, 612, 613, 614, 615, 616, 618, 619, 620, 621, 635, 689, 803, 983, 1097], "stunden": 23, "webprogrammierung": 23, "css": [23, 159, 160], "150": [23, 181, 195, 205, 212, 221, 231, 234, 237, 242, 244, 250, 254, 257, 260, 263, 272, 275, 292, 296, 302, 314, 318, 324, 330, 336, 340, 682], "kreativarbeit": 23, "erreichen": [23, 1187, 1190], "pers\u00f6nlich": [23, 375], "freund": 23, "ebenfal": [23, 1188], "t\u00e4tig": 23, "mich": [23, 170, 185, 205, 213, 375, 1170], "ermutigt": 23, "\u00fcberhaupt": [23, 1180, 1187, 1194], "starten": [23, 1192], "repr\u00e4sent": 23, "post": [23, 67, 94, 158, 162, 164, 166, 167, 168, 169, 172, 223, 238, 287, 390, 404, 488, 584, 922, 991, 993, 996, 1122], "facebookseit": 23, "relevanten": 23, "foren": 23, "linkedin": 23, "typisch": [23, 206, 1173], "projektbeginn": 23, "abschluss": [23, 171, 357], "oktob": 23, "projektdau": 23, "\u00fcberschreiten": 23, "mitarbeiter_innen": 23, "stundenanzahl": 23, "jeweilig": 23, "stundens\u00e4tz": 23, "senior": 23, "junior": 23, "programmierer_in": 23, "designer_in": 23, "contentmanager_in": 23, "projektmanager_in": 23, "assistenz": 23, "administr": [23, 169, 862, 929, 938, 945, 984], "sachbearbeiter_in": 23, "social": [23, 45, 484, 491, 495, 508, 509, 510, 513, 519, 522, 523, 524], "media": [23, 79, 179, 825, 930], "spzialist_in": 23, "firmeneigent\u00fcmer_innen": 23, "gesellschafter_innen": 23, "vereinsfunktion\u00e4r_innen": 23, "betr\u00e4gt": 23, "f\u00f6rderbar": 23, "stundensatz": 23, "brutto": 23, "nachweislich": 23, "angestellt": 23, "projektmitarbeiter_innen": 23, "errechnet": 23, "vollzeitvertrag": 23, "jahresstundenteil": 23, "1720": [23, 237], "teilzeitbesch\u00e4ftigten": 23, "aliquot": 23, "reduziert": [23, 185], "dienstgeberanteil": 23, "faktor": 23, "ber\u00fccksichtigt": 23, "kalkul": 23, "jahresbruttogehalt": 23, "hohe": 23, "risiko": 23, "h\u00f6herer": 23, "eigenmittelanteil": 23, "bedingung": 23, "festgelegt": 23, "erh\u00f6hen": 23, "gemeinkosten": 23, "gef\u00f6rdert": 23, "antr\u00e4gen": 23, "diplomarbeiten": 23, "betrag": 23, "8000": [23, 237], "frontendprogrammierung": 23, "4500": [23, 237], "sachkosten": 23, "projektbedingt": 23, "betriebskosten": 23, "unmittelbar": 23, "projektt\u00e4tigkeit": 23, "entstehen": [23, 349], "leistungen": 23, "reisen": 23, "gliedern": 23, "rechnung": [23, 171, 279], "enthalten": 23, "umsatzsteu": 23, "darf": [23, 357], "kostenabrechnung": 23, "f\u00f6rdernehmer_in": 23, "vorsteuerabzugsberechtigt": 23, "13500": [23, 237], "beantragt": 23, "differenz": [23, 257], "aufgliedern": 23, "eigenmittel": 23, "f\u00f6rderungseinrichtungen": 23, "fremdmittel": 23, "kredit": 23, "leas": 23, "pro": [23, 198, 762, 913, 1016], "bono": 23, "beitrag": 23, "restfinanzierung": 23, "gesamtbetrag": 23, "ber\u00fccksichtigten": 23, "einzelkosten": 23, "achtung": 23, "gesamtprojektkosten": 23, "h\u00f6her": 23, "auszuf\u00fcllen": 23, "leer": [23, 212, 218, 226, 282], "bleiben": [23, 171, 195, 205, 1180, 1187, 1190], "reich": [23, 195], "nein": [23, 206, 212, 218, 263, 272, 330, 1186], "neben": [23, 185], "antr\u00e4g": 23, "oderstipendium": 23, "laufenden": 23, "call": [23, 32, 42, 50, 64, 67, 111, 112, 114, 118, 119, 130, 141, 158, 161, 162, 163, 164, 165, 167, 172, 179, 182, 184, 192, 198, 200, 221, 229, 231, 237, 242, 245, 247, 252, 254, 259, 260, 263, 278, 280, 282, 295, 296, 304, 313, 318, 320, 357, 362, 364, 375, 379, 386, 390, 391, 394, 405, 421, 423, 427, 433, 434, 437, 447, 450, 451, 459, 467, 470, 482, 489, 493, 508, 509, 510, 526, 530, 535, 538, 539, 541, 542, 554, 568, 582, 586, 589, 592, 594, 598, 607, 653, 654, 657, 659, 660, 664, 666, 671, 678, 686, 687, 695, 699, 710, 713, 716, 717, 718, 719, 729, 732, 740, 745, 746, 754, 755, 756, 758, 762, 777, 778, 779, 793, 803, 805, 807, 811, 813, 815, 817, 819, 821, 823, 825, 830, 833, 839, 844, 845, 851, 855, 858, 859, 860, 861, 863, 865, 868, 869, 882, 885, 921, 925, 933, 943, 944, 947, 948, 949, 950, 952, 954, 960, 961, 962, 967, 968, 975, 976, 978, 979, 982, 983, 984, 993, 996, 997, 999, 1001, 1018, 1020, 1021, 1022, 1027, 1033, 1035, 1036, 1037, 1039, 1040, 1042, 1043, 1044, 1064, 1065, 1069, 1071, 1074, 1075, 1080, 1098, 1102, 1123, 1128, 1136, 1139, 1144, 1145, 1157, 1158, 1159, 1178, 1182, 1190, 1191, 1193], "weiteren": 23, "stipendium": 23, "imlaufenden": 23, "habe": [23, 170, 171, 180, 185, 201, 330, 375], "zuge": 23, "projektantragsstellung": 23, "rundschreiben": 23, "expert": [23, 28, 166, 167, 172, 541, 864, 885, 931, 1127], "group": [23, 29, 102, 103, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 141, 142, 155, 177, 182, 194, 199, 201, 210, 213, 214, 221, 227, 234, 242, 251, 254, 260, 263, 275, 289, 296, 299, 302, 324, 330, 336, 357, 370, 371, 375, 386, 411, 454, 455, 530, 560, 778, 825, 852, 853, 855, 858, 859, 860, 871, 872, 873, 874, 875, 876, 877, 878, 880, 881, 907, 911, 912, 913, 914, 918, 921, 929, 941, 942, 950, 951, 952, 957, 960, 962, 976, 979, 984, 997, 1020, 1101, 1156], "wirtschaftkamm": 23, "nehmen": [23, 171, 1172], "larg": [24, 30, 38, 79, 164, 167, 169, 194, 213, 214, 223, 234, 240, 281, 284, 433, 442, 444, 448, 454, 455, 494, 719, 728, 776, 819, 825, 999, 1023, 1025, 1027, 1047, 1054, 1080, 1101, 1137, 1141, 1145, 1163], "amount": [24, 107, 111, 112, 162, 163, 164, 167, 173, 194, 201, 229, 279, 280, 454, 466, 597, 719, 720, 856, 858, 942, 959, 1047], "pdf": [24, 37, 187, 189, 194, 198, 201, 202, 204, 254, 268, 277, 278, 298, 299, 321, 356, 357, 360, 362, 365, 376, 885, 907, 908, 931, 963, 1001, 1095, 1172, 1173, 1174, 1182, 1183, 1189, 1190, 1192, 1193, 1194], "Not": [24, 43, 47, 53, 81, 110, 113, 115, 116, 164, 165, 166, 169, 172, 194, 197, 198, 238, 240, 241, 242, 255, 264, 291, 295, 394, 403, 425, 437, 440, 442, 448, 464, 467, 530, 547, 549, 582, 589, 591, 593, 598, 599, 667, 679, 699, 710, 714, 716, 717, 718, 736, 743, 746, 752, 757, 776, 778, 788, 796, 803, 807, 809, 923, 961, 981, 983, 985, 987, 997, 1020, 1022, 1027, 1028, 1029, 1030, 1040, 1042, 1054, 1063, 1068, 1123, 1127, 1132, 1146, 1148, 1164, 1176], "satisfi": [24, 32, 198, 483, 599, 687, 699, 732], "colleagu": [24, 28, 173, 214, 444, 656, 1025, 1042, 1054], "aren": [24, 159, 244, 254, 695, 886, 975, 985], "either": [24, 39, 42, 43, 162, 164, 172, 173, 278, 281, 284, 442, 509, 682, 690, 693, 754, 852, 853, 882, 885, 917, 931, 1022, 1089, 1139, 1176], "nobodi": [24, 43, 162, 164, 183, 194, 234, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336, 445, 447, 584, 625, 697, 780, 852, 853, 862, 877, 879, 885, 886, 938, 946, 1075, 1129, 1159, 1165], "doe": [24, 38, 45, 48, 49, 62, 70, 79, 84, 85, 111, 112, 114, 118, 122, 124, 142, 158, 161, 162, 163, 166, 167, 168, 169, 172, 173, 177, 182, 190, 194, 198, 200, 212, 221, 224, 237, 254, 257, 263, 281, 282, 284, 287, 289, 291, 313, 326, 330, 357, 368, 384, 390, 398, 402, 403, 404, 405, 412, 421, 422, 431, 434, 437, 438, 440, 442, 444, 446, 448, 453, 454, 455, 458, 459, 460, 464, 466, 467, 468, 472, 478, 479, 482, 484, 487, 492, 496, 504, 506, 508, 534, 535, 536, 537, 538, 541, 542, 565, 574, 577, 584, 585, 586, 589, 592, 594, 595, 597, 600, 623, 630, 638, 644, 653, 656, 657, 663, 664, 671, 682, 687, 688, 690, 697, 699, 719, 721, 729, 730, 732, 736, 740, 741, 742, 745, 746, 748, 752, 753, 758, 774, 776, 788, 789, 793, 794, 796, 803, 817, 825, 830, 841, 851, 860, 864, 865, 867, 870, 918, 922, 929, 930, 931, 942, 947, 948, 950, 954, 957, 968, 972, 975, 981, 983, 984, 993, 997, 999, 1000, 1001, 1002, 1007, 1011, 1015, 1016, 1018, 1020, 1021, 1022, 1023, 1025, 1027, 1036, 1040, 1042, 1043, 1047, 1050, 1053, 1071, 1072, 1073, 1092, 1100, 1102, 1129, 1131, 1132, 1134, 1141, 1142, 1145, 1146, 1147, 1149, 1151, 1156, 1176, 1178], "even": [24, 29, 59, 60, 63, 79, 122, 150, 162, 163, 164, 169, 173, 183, 184, 194, 198, 201, 202, 206, 208, 213, 219, 221, 222, 224, 225, 234, 238, 241, 242, 245, 248, 251, 253, 254, 256, 259, 260, 271, 281, 284, 295, 296, 314, 317, 324, 330, 336, 421, 430, 444, 450, 454, 482, 487, 583, 591, 594, 640, 687, 729, 732, 739, 748, 776, 778, 817, 825, 862, 881, 922, 930, 947, 948, 981, 983, 984, 1000, 1019, 1031, 1042, 1068, 1071, 1082, 1085, 1086, 1121, 1123, 1144, 1151, 1158, 1178, 1186], "tech": [24, 45, 161], "although": [24, 29, 79, 137, 141, 162, 164, 168, 173, 184, 194, 200, 224, 244, 254, 375, 538, 682, 683, 724, 746, 864, 867, 938, 1018, 1023, 1080, 1129], "gain": [24, 169, 281, 284, 454, 825, 864], "incred": 24, "momentum": 24, "expect": [24, 38, 50, 161, 164, 210, 231, 237, 238, 247, 250, 257, 282, 296, 314, 316, 318, 431, 469, 484, 527, 592, 657, 710, 719, 732, 798, 809, 922, 930, 931, 970, 987, 996, 1042, 1052, 1065, 1095, 1105, 1128, 1162, 1163, 1166], "context": [24, 29, 59, 63, 111, 112, 162, 183, 186, 198, 201, 203, 205, 212, 243, 247, 248, 250, 254, 257, 263, 271, 275, 280, 290, 291, 292, 295, 302, 306, 309, 312, 313, 316, 317, 324, 375, 441, 503, 504, 518, 586, 592, 720, 741, 776, 778, 787, 792, 795, 797, 802, 805, 806, 807, 808, 811, 812, 816, 817, 818, 820, 821, 822, 829, 830, 831, 833, 834, 835, 836, 839, 840, 843, 845, 846, 858, 862, 921, 922, 945, 985, 996, 997, 1024, 1033, 1121, 1132], "defin": [24, 53, 125, 129, 132, 133, 137, 140, 142, 155, 165, 182, 184, 199, 201, 203, 205, 210, 218, 221, 222, 224, 231, 235, 237, 240, 244, 247, 250, 254, 262, 264, 275, 286, 296, 313, 314, 326, 330, 336, 352, 363, 384, 389, 394, 399, 400, 403, 420, 421, 422, 423, 424, 425, 438, 446, 447, 448, 450, 454, 467, 468, 473, 474, 475, 492, 496, 504, 525, 526, 538, 560, 568, 585, 586, 587, 589, 591, 592, 594, 595, 598, 599, 600, 607, 610, 631, 635, 656, 663, 682, 683, 692, 693, 694, 695, 696, 699, 719, 724, 728, 737, 740, 745, 746, 769, 784, 786, 798, 862, 882, 922, 923, 931, 942, 949, 967, 989, 999, 1001, 1015, 1017, 1021, 1023, 1025, 1037, 1042, 1054, 1064, 1119, 1132, 1136, 1168, 1176, 1178, 1181], "solv": [24, 45, 81, 90, 124, 159, 162, 163, 192, 194, 198, 199, 201, 203, 214, 219, 232, 240, 245, 248, 259, 262, 284, 288, 295, 299, 301, 304, 316, 320, 343, 424, 466, 475, 681, 755, 760, 763, 777, 778, 825, 864, 921, 962, 976, 1009, 1011, 1013, 1042, 1118, 1123, 1129, 1178, 1179], "provid": [24, 27, 37, 58, 66, 69, 162, 164, 165, 166, 168, 169, 172, 173, 177, 190, 231, 237, 238, 247, 250, 254, 288, 304, 320, 440, 469, 474, 475, 484, 495, 503, 656, 719, 746, 825, 861, 864, 904, 930, 931, 938, 952, 984, 993, 1025, 1034, 1052, 1065, 1128, 1150, 1158, 1178], "depth": [24, 194, 198, 219, 231, 237, 247, 248, 250, 444, 744, 1027, 1123, 1127, 1128], "repres": [24, 162, 164, 186, 231, 237, 247, 250, 254, 275, 286, 343, 453, 487, 504, 506, 593, 776, 796, 821, 858, 861, 929, 931, 959, 1054, 1080, 1118, 1122, 1141, 1148, 1181], "own": [24, 28, 40, 43, 66, 111, 112, 162, 163, 165, 166, 172, 177, 190, 194, 240, 264, 269, 278, 288, 313, 326, 327, 444, 450, 465, 479, 487, 504, 509, 573, 574, 583, 673, 674, 676, 677, 691, 695, 698, 710, 720, 722, 734, 742, 757, 776, 777, 778, 825, 858, 860, 861, 870, 872, 873, 881, 882, 904, 914, 929, 930, 942, 949, 967, 972, 983, 984, 996, 1015, 1022, 1039, 1044, 1045, 1047, 1130, 1163, 1178, 1179, 1181], "yield": [24, 29, 181, 182, 195, 198, 199, 201, 210, 222, 229, 235, 239, 241, 243, 244, 250, 254, 259, 261, 271, 274, 275, 282, 290, 291, 292, 295, 296, 301, 303, 314, 317, 318, 324, 330, 334, 335, 336, 339, 340, 425, 494, 503, 710, 713, 716, 717, 718, 778, 1020, 1024, 1026, 1027, 1029, 1048, 1058, 1079, 1080, 1081, 1082, 1095, 1106, 1121, 1133], "multipl": [24, 35, 36, 59, 63, 77, 107, 111, 112, 162, 163, 165, 179, 194, 198, 201, 221, 222, 223, 235, 237, 254, 289, 313, 380, 382, 386, 387, 390, 399, 401, 404, 413, 420, 424, 442, 447, 460, 465, 472, 504, 518, 531, 586, 599, 657, 664, 677, 704, 710, 732, 734, 741, 749, 752, 756, 757, 776, 778, 794, 796, 802, 806, 807, 815, 816, 817, 825, 827, 829, 830, 833, 834, 840, 843, 846, 858, 861, 862, 865, 867, 872, 873, 918, 921, 930, 951, 967, 972, 992, 1005, 1042, 1053, 1054, 1067, 1068, 1073, 1123, 1148], "artifact": [24, 168, 172, 186, 191, 304, 320, 460, 786, 999, 1000, 1001, 1011, 1165, 1178], "complet": [24, 42, 60, 64, 79, 124, 125, 141, 158, 161, 162, 183, 194, 202, 210, 219, 232, 235, 238, 245, 259, 260, 262, 289, 295, 301, 306, 313, 326, 342, 343, 424, 441, 454, 467, 479, 531, 540, 585, 586, 660, 729, 744, 776, 819, 825, 852, 853, 863, 925, 931, 946, 983, 1020, 1024, 1046, 1047, 1123, 1128, 1129, 1131, 1137, 1139, 1150, 1151, 1168, 1176], "prepar": [27, 122, 124, 140, 158, 161, 194, 251, 357, 375, 488, 529, 560, 622, 659, 992, 1016, 1119, 1128, 1157], "base": [27, 29, 30, 42, 45, 53, 79, 81, 98, 108, 121, 124, 137, 142, 154, 162, 164, 165, 177, 184, 189, 194, 195, 198, 201, 202, 205, 209, 212, 214, 224, 238, 240, 243, 247, 248, 252, 257, 259, 265, 272, 275, 280, 282, 286, 287, 288, 289, 290, 291, 296, 301, 312, 313, 314, 316, 317, 318, 324, 327, 330, 335, 336, 340, 353, 357, 361, 368, 390, 398, 425, 442, 460, 465, 466, 484, 488, 493, 494, 496, 503, 528, 540, 544, 560, 571, 613, 615, 616, 617, 618, 620, 621, 625, 657, 659, 660, 662, 704, 721, 722, 729, 734, 741, 745, 757, 762, 764, 766, 768, 772, 775, 777, 778, 798, 805, 809, 821, 825, 827, 876, 878, 918, 922, 981, 993, 997, 999, 1000, 1013, 1014, 1016, 1024, 1031, 1033, 1038, 1039, 1079, 1085, 1101, 1121, 1130, 1131, 1145, 1175, 1176, 1179], "exist": [27, 38, 46, 47, 53, 55, 56, 110, 111, 112, 155, 158, 168, 173, 202, 214, 221, 287, 291, 342, 354, 357, 360, 442, 464, 466, 482, 487, 507, 510, 530, 541, 547, 549, 582, 592, 640, 675, 677, 686, 740, 776, 778, 825, 852, 853, 858, 860, 867, 876, 878, 887, 891, 892, 904, 921, 929, 931, 942, 947, 951, 957, 960, 962, 979, 986, 993, 1011, 1015, 1016, 1021, 1022, 1031, 1036, 1071, 1073, 1091, 1132, 1140, 1141, 1151, 1156, 1158], "navig": [27, 1148], "through": [27, 34, 38, 62, 74, 79, 105, 159, 161, 162, 164, 169, 173, 177, 190, 194, 198, 200, 203, 214, 222, 223, 224, 229, 235, 288, 290, 291, 306, 309, 312, 317, 364, 368, 375, 394, 414, 433, 453, 457, 470, 479, 510, 532, 535, 601, 603, 604, 653, 654, 657, 660, 682, 697, 699, 724, 732, 736, 742, 746, 796, 823, 856, 864, 912, 922, 930, 931, 940, 993, 996, 997, 1022, 1027, 1030, 1045, 1047, 1050, 1085, 1130, 1145, 1176, 1177, 1181], "deviat": [27, 169, 182, 190, 199, 223, 254, 375, 825], "after": [27, 43, 158, 159, 162, 163, 164, 169, 172, 182, 191, 194, 201, 214, 221, 231, 237, 247, 250, 253, 254, 260, 275, 280, 287, 289, 296, 324, 340, 343, 382, 390, 391, 424, 444, 451, 470, 472, 508, 509, 532, 539, 591, 594, 607, 642, 690, 692, 693, 695, 704, 710, 757, 776, 803, 807, 813, 865, 868, 885, 886, 918, 929, 969, 987, 992, 993, 996, 999, 1018, 1020, 1022, 1047, 1048, 1052, 1088, 1101, 1119, 1127, 1136, 1148, 1157, 1158, 1163], "writeup": [27, 173, 1011], "what": [27, 28, 43, 44, 46, 47, 48, 51, 55, 56, 57, 58, 59, 63, 66, 70, 79, 84, 87, 88, 98, 99, 100, 105, 108, 121, 124, 129, 130, 137, 142, 159, 161, 162, 163, 164, 165, 166, 167, 168, 173, 177, 181, 182, 183, 184, 185, 186, 188, 190, 194, 195, 198, 199, 200, 201, 202, 203, 204, 213, 221, 223, 224, 238, 239, 240, 249, 254, 262, 268, 278, 281, 284, 288, 290, 291, 304, 309, 312, 320, 324, 326, 327, 342, 343, 349, 357, 360, 362, 364, 365, 368, 379, 387, 392, 402, 403, 405, 418, 427, 430, 437, 440, 442, 444, 445, 448, 449, 450, 454, 458, 460, 465, 466, 469, 474, 476, 483, 485, 487, 508, 509, 519, 525, 527, 536, 539, 560, 561, 564, 567, 570, 573, 576, 577, 579, 589, 592, 594, 595, 596, 597, 598, 600, 607, 610, 617, 653, 660, 669, 687, 690, 693, 699, 704, 710, 720, 731, 732, 740, 741, 742, 746, 749, 753, 755, 756, 762, 774, 776, 777, 778, 786, 789, 793, 796, 798, 803, 821, 828, 833, 838, 851, 852, 853, 855, 856, 858, 859, 861, 862, 864, 865, 867, 869, 870, 871, 874, 875, 876, 877, 878, 879, 880, 885, 900, 901, 903, 921, 922, 929, 930, 931, 933, 934, 935, 936, 937, 948, 949, 955, 956, 957, 958, 960, 962, 967, 968, 969, 970, 971, 976, 979, 982, 984, 985, 987, 988, 991, 992, 993, 995, 997, 1000, 1009, 1010, 1014, 1016, 1017, 1018, 1020, 1022, 1024, 1025, 1028, 1029, 1033, 1034, 1042, 1046, 1047, 1065, 1071, 1075, 1080, 1083, 1091, 1118, 1122, 1130, 1132, 1139, 1148, 1156, 1158, 1162, 1163, 1165, 1167, 1178, 1181], "collect": [27, 29, 158, 161, 163, 206, 213, 222, 228, 229, 246, 248, 249, 250, 262, 271, 273, 280, 288, 290, 291, 295, 306, 309, 312, 313, 316, 317, 329, 335, 339, 340, 342, 453, 460, 571, 617, 732, 741, 753, 778, 825, 856, 928, 1009, 1020, 1024, 1030, 1038, 1072, 1078, 1082, 1111, 1116, 1118, 1121, 1122, 1137, 1150, 1151, 1156, 1158, 1186], "question": [27, 29, 32, 35, 36, 38, 103, 115, 124, 136, 164, 169, 177, 182, 194, 198, 200, 222, 223, 224, 234, 235, 237, 238, 240, 260, 357, 364, 371, 399, 428, 434, 446, 465, 468, 472, 476, 529, 593, 653, 660, 748, 752, 778, 803, 817, 833, 852, 853, 855, 874, 880, 904, 921, 929, 931, 942, 946, 962, 981, 982, 1015, 1023, 1024, 1027, 1032, 1121, 1123], "ask": [27, 162, 167, 169, 177, 194, 197, 198, 263, 295, 357, 364, 464, 483, 484, 506, 525, 577, 589, 600, 721, 743, 881, 936, 938, 1042, 1123], "answer": [27, 45, 114, 119, 120, 166, 169, 182, 194, 198, 200, 201, 224, 235, 242, 314, 324, 364, 468, 472, 529, 653, 660, 662, 732, 737, 756, 789, 833, 852, 853, 858, 870, 872, 873, 876, 878, 929, 931, 938, 942, 981, 984, 1015, 1022, 1023, 1027, 1034, 1051, 1054, 1123], "cover": [27, 79, 82, 125, 155, 169, 186, 194, 198, 202, 204, 222, 223, 235, 248, 287, 289, 317, 464, 483, 769, 929, 931, 1013, 1022, 1024, 1047, 1095, 1118, 1123, 1127, 1128, 1150, 1156, 1179, 1181], "been": [27, 59, 60, 63, 122, 161, 162, 163, 164, 166, 167, 168, 173, 177, 182, 183, 194, 202, 231, 237, 247, 250, 281, 284, 286, 296, 313, 354, 363, 423, 437, 438, 467, 478, 487, 504, 560, 719, 779, 821, 839, 845, 850, 860, 864, 868, 888, 922, 929, 931, 942, 951, 961, 972, 997, 1000, 1001, 1018, 1025, 1063, 1158, 1176, 1178, 1179], "further": [27, 159, 161, 168, 172, 188, 237, 269, 284, 313, 326, 327, 365, 430, 441, 479, 541, 561, 564, 567, 570, 573, 576, 579, 691, 722, 768, 777, 778, 796, 819, 825, 907, 932, 968, 988, 991, 995, 1030, 1162, 1167, 1181], "inform": [27, 28, 29, 107, 161, 164, 165, 167, 172, 181, 182, 183, 185, 190, 210, 231, 237, 247, 250, 275, 290, 291, 312, 316, 317, 441, 451, 458, 459, 469, 478, 746, 776, 784, 796, 860, 885, 918, 922, 929, 931, 933, 965, 1021, 1049, 1123, 1131, 1136, 1151, 1158], "internet": [27, 66, 79, 161, 163, 166, 167, 169, 190, 202, 210, 238, 251, 290, 291, 306, 312, 316, 354, 466, 922, 923, 925, 983, 1023, 1179, 1193], "subtract": [27, 114, 119, 120, 231, 254, 286, 401, 504, 518, 732, 884, 984, 1034, 1042, 1054], "known": [27, 158, 163, 174, 214, 231, 237, 247, 250, 267, 269, 287, 304, 320, 354, 400, 402, 414, 421, 448, 454, 619, 796, 885, 1014, 1130, 1178, 1179], "calcul": [27, 83, 86, 164, 198, 222, 231, 254, 400, 402, 410, 419, 426, 432, 436, 439, 443, 452, 456, 461, 462, 503, 533, 538, 540, 684, 689, 722, 749, 775, 777, 778, 967, 984, 1025, 1027, 1098, 1130, 1135, 1156], "minimum": [27, 64, 254, 704, 763, 825, 1020, 1126, 1127, 1128, 1129], "come": [27, 43, 79, 111, 112, 122, 130, 137, 141, 158, 159, 161, 162, 163, 164, 167, 168, 169, 172, 173, 184, 190, 191, 194, 214, 240, 267, 269, 280, 287, 288, 313, 326, 348, 354, 378, 380, 381, 397, 424, 460, 467, 504, 538, 620, 657, 660, 665, 679, 731, 734, 736, 746, 756, 778, 793, 825, 856, 858, 862, 868, 881, 885, 922, 929, 930, 931, 957, 983, 1011, 1022, 1023, 1027, 1045, 1046, 1047, 1048, 1054, 1065, 1073, 1075, 1080, 1085, 1103, 1114, 1131, 1134, 1139, 1152, 1179], "she": [27, 221, 657, 690, 860, 862, 1067, 1075], "who": [27, 29, 45, 129, 159, 162, 166, 169, 173, 192, 194, 240, 250, 275, 306, 375, 450, 454, 464, 469, 492, 509, 541, 662, 732, 742, 798, 825, 833, 852, 853, 860, 864, 870, 881, 922, 930, 931, 946, 957, 999, 1016, 1018, 1024, 1046, 1122, 1137, 1149, 1156, 1176, 1179, 1181], "repetit": [27, 275, 885, 1176], "prone": [27, 399, 587, 597, 617, 690, 734, 813, 1001, 1069, 1163, 1176], "possibl": [27, 59, 62, 63, 107, 121, 122, 124, 142, 144, 149, 152, 161, 162, 169, 172, 177, 184, 194, 198, 214, 224, 231, 237, 240, 242, 247, 248, 250, 267, 269, 278, 287, 290, 291, 296, 313, 317, 327, 389, 400, 403, 420, 433, 440, 446, 450, 454, 455, 458, 464, 470, 479, 482, 484, 487, 492, 496, 504, 506, 541, 574, 584, 586, 587, 592, 599, 600, 618, 635, 676, 682, 683, 690, 704, 708, 721, 732, 740, 741, 742, 746, 803, 830, 860, 869, 894, 923, 924, 929, 930, 940, 943, 972, 1020, 1021, 1022, 1030, 1035, 1043, 1045, 1054, 1063, 1068, 1070, 1071, 1073, 1122, 1123, 1132, 1144], "abl": [27, 28, 30, 43, 161, 162, 164, 165, 167, 169, 177, 194, 214, 221, 303, 444, 450, 476, 483, 487, 541, 689, 699, 852, 853, 870, 876, 878, 879, 922, 930, 931, 957, 993, 1024, 1135, 1181], "fix": [27, 46, 64, 66, 77, 108, 141, 158, 162, 175, 177, 198, 219, 224, 234, 235, 240, 259, 262, 289, 290, 291, 312, 357, 382, 405, 448, 464, 466, 472, 509, 542, 554, 565, 577, 583, 602, 618, 668, 675, 696, 778, 793, 798, 802, 805, 806, 826, 827, 833, 834, 840, 843, 846, 869, 921, 925, 945, 955, 986, 996, 1016, 1018, 1021, 1048, 1080, 1123], "inconsist": [27, 584, 1146], "easi": [27, 69, 129, 150, 162, 164, 165, 166, 167, 168, 169, 173, 182, 183, 186, 198, 244, 254, 327, 403, 418, 444, 460, 682, 699, 741, 762, 805, 807, 811, 823, 830, 864, 929, 930, 931, 958, 975, 993, 1002, 1016, 1042, 1046, 1054, 1063, 1065, 1129, 1156, 1157, 1181], "plain": [27, 132, 164, 224, 368, 560, 596, 599, 678, 731, 746, 828, 930, 1021, 1034], "happi": [27, 66, 167, 194, 448, 592, 1128], "clear": [27, 43, 162, 164, 169, 181, 214, 224, 253, 314, 358, 359, 425, 450, 454, 469, 479, 485, 491, 598, 653, 686, 704, 741, 825, 833, 861, 864, 885, 945, 1019, 1034, 1054, 1056, 1127, 1128, 1158], "front": [27, 79, 159, 169, 194, 250, 296, 454, 635, 754, 1179], "later": [27, 81, 125, 141, 161, 162, 165, 172, 183, 194, 316, 380, 384, 390, 392, 394, 450, 454, 460, 467, 586, 587, 589, 601, 603, 604, 638, 693, 724, 727, 784, 786, 788, 793, 809, 811, 821, 828, 867, 929, 951, 967, 968, 970, 981, 985, 1035, 1043, 1053, 1056, 1058, 1136, 1142], "menu": [27, 158, 202, 825, 1171], "mine": [28, 161, 162, 165, 173, 190, 194, 198, 375, 574, 825], "hi": [28, 45, 177, 182, 194, 198, 201, 219, 245, 248, 447, 536, 1035, 1123], "data": [28, 29, 49, 71, 74, 79, 90, 109, 111, 112, 134, 142, 162, 163, 164, 165, 169, 172, 181, 183, 185, 194, 198, 199, 203, 211, 213, 218, 228, 231, 232, 237, 238, 240, 247, 250, 254, 260, 275, 279, 280, 281, 282, 284, 287, 289, 290, 291, 296, 301, 304, 306, 309, 315, 318, 320, 324, 330, 337, 340, 359, 360, 375, 389, 403, 410, 419, 426, 432, 433, 436, 438, 439, 443, 448, 452, 453, 455, 456, 461, 462, 465, 472, 488, 502, 530, 531, 532, 533, 534, 535, 536, 537, 540, 541, 547, 549, 558, 582, 583, 585, 589, 592, 605, 608, 610, 611, 622, 627, 633, 637, 646, 649, 650, 655, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 684, 688, 691, 722, 734, 738, 746, 747, 755, 756, 763, 775, 776, 777, 778, 780, 783, 784, 815, 819, 823, 830, 838, 856, 862, 867, 869, 877, 923, 925, 929, 930, 931, 932, 942, 946, 948, 956, 961, 967, 970, 973, 975, 987, 1011, 1020, 1022, 1027, 1031, 1034, 1047, 1048, 1059, 1061, 1062, 1063, 1071, 1082, 1110, 1111, 1121, 1125, 1126, 1127, 1129, 1131, 1132, 1136, 1137, 1141, 1142, 1145, 1147, 1148, 1151, 1156, 1177, 1178, 1192], "convinc": [28, 403], "him": [28, 194, 198, 201, 219, 222, 245, 271, 295, 317, 731, 972, 1123], "wai": [28, 43, 50, 59, 63, 64, 66, 81, 82, 152, 158, 159, 161, 164, 169, 173, 174, 177, 183, 186, 190, 195, 197, 198, 200, 201, 202, 205, 206, 214, 219, 222, 234, 235, 240, 243, 244, 245, 247, 248, 252, 254, 262, 266, 267, 280, 281, 284, 288, 290, 291, 312, 313, 345, 349, 399, 403, 407, 408, 418, 424, 440, 441, 442, 450, 466, 467, 474, 484, 486, 487, 491, 507, 509, 528, 538, 542, 554, 560, 568, 584, 585, 592, 597, 600, 638, 640, 666, 672, 683, 699, 720, 730, 742, 746, 760, 781, 794, 803, 817, 819, 825, 852, 853, 861, 867, 869, 872, 873, 922, 930, 931, 942, 949, 957, 983, 986, 996, 997, 1001, 1007, 1011, 1022, 1034, 1039, 1045, 1048, 1049, 1052, 1063, 1067, 1068, 1070, 1073, 1075, 1080, 1108, 1123, 1141, 1149, 1156, 1163, 1181], "go": [28, 40, 42, 59, 62, 63, 64, 66, 81, 98, 135, 141, 159, 162, 165, 166, 168, 169, 191, 194, 201, 205, 214, 223, 224, 240, 281, 284, 286, 316, 360, 464, 466, 484, 525, 686, 724, 736, 742, 754, 778, 786, 789, 793, 825, 827, 856, 868, 885, 887, 921, 922, 929, 930, 957, 960, 962, 967, 975, 979, 999, 1002, 1016, 1047, 1081], "relev": [28, 164, 237, 262, 390, 479, 541, 746, 825, 838, 929, 930, 1022, 1122, 1138, 1151], "part": [28, 43, 81, 93, 107, 124, 155, 162, 163, 164, 165, 167, 169, 172, 183, 186, 194, 201, 202, 203, 224, 250, 262, 281, 284, 296, 359, 366, 380, 403, 437, 464, 487, 492, 506, 527, 541, 584, 682, 754, 776, 796, 803, 825, 845, 852, 853, 885, 920, 922, 929, 930, 931, 932, 947, 999, 1046, 1047, 1060, 1065, 1067, 1113, 1115, 1129, 1130, 1141, 1142, 1144, 1145, 1146, 1147, 1166], "natur": [28, 38, 76, 162, 164, 169, 194, 248, 254, 296, 375, 380, 398, 442, 483, 484, 636, 638, 682, 742, 930, 1058], "straighforward": 28, "approach": [28, 35, 38, 161, 162, 201, 305, 321, 382, 466, 470, 471, 479, 740, 768, 778, 864, 930, 983, 985, 1140], "would": [28, 57, 105, 108, 114, 117, 118, 142, 161, 163, 164, 166, 167, 173, 182, 184, 191, 194, 198, 200, 213, 224, 237, 250, 254, 289, 291, 327, 414, 433, 440, 442, 453, 454, 468, 469, 472, 479, 482, 540, 554, 558, 592, 596, 598, 600, 647, 654, 663, 687, 693, 732, 742, 754, 774, 776, 825, 828, 852, 853, 876, 878, 881, 907, 930, 931, 941, 942, 958, 967, 975, 996, 1015, 1016, 1020, 1022, 1023, 1043, 1054, 1058, 1062, 1065, 1071, 1075, 1080, 1101, 1128, 1131, 1141, 1148], "copi": [28, 36, 42, 50, 71, 98, 100, 102, 103, 114, 118, 124, 128, 132, 137, 141, 152, 154, 158, 162, 163, 164, 165, 168, 173, 177, 183, 189, 192, 202, 209, 212, 224, 234, 240, 246, 250, 254, 257, 260, 266, 267, 268, 269, 272, 277, 278, 282, 286, 287, 289, 296, 298, 299, 302, 314, 327, 336, 360, 390, 392, 404, 410, 419, 424, 426, 428, 432, 433, 436, 439, 443, 452, 456, 461, 462, 477, 509, 510, 523, 524, 525, 530, 547, 559, 560, 562, 571, 576, 578, 580, 582, 583, 584, 590, 600, 601, 603, 604, 613, 617, 627, 635, 644, 646, 649, 650, 662, 664, 670, 673, 676, 679, 684, 685, 686, 690, 691, 692, 710, 722, 724, 734, 738, 742, 743, 747, 755, 774, 775, 776, 777, 778, 800, 805, 825, 826, 841, 851, 852, 853, 854, 855, 856, 865, 885, 891, 892, 894, 895, 896, 897, 899, 905, 921, 932, 935, 937, 942, 954, 959, 960, 961, 962, 969, 970, 975, 979, 992, 1009, 1010, 1011, 1013, 1015, 1016, 1020, 1021, 1055, 1070, 1073, 1136, 1140, 1145, 1158, 1163, 1165, 1176, 1188], "dumb": [28, 45, 182, 213, 342, 796, 970, 972], "reason": [28, 62, 142, 149, 164, 177, 183, 194, 223, 242, 354, 437, 444, 446, 448, 454, 457, 470, 482, 601, 603, 604, 638, 682, 725, 744, 793, 809, 821, 825, 876, 878, 975, 983, 984, 997, 1011, 1016, 1054, 1063, 1065, 1128], "ar": [28, 32, 43, 45, 47, 53, 55, 56, 57, 58, 59, 62, 63, 64, 66, 69, 79, 81, 82, 90, 107, 109, 110, 111, 112, 114, 119, 120, 122, 129, 137, 142, 146, 149, 155, 156, 159, 161, 164, 165, 166, 168, 169, 172, 173, 177, 178, 179, 182, 183, 184, 186, 190, 192, 194, 198, 199, 200, 201, 202, 203, 214, 221, 222, 223, 224, 231, 234, 235, 237, 238, 240, 241, 243, 245, 246, 247, 248, 250, 254, 258, 262, 267, 269, 271, 278, 280, 281, 284, 286, 287, 288, 289, 291, 296, 299, 304, 308, 313, 314, 317, 318, 320, 327, 342, 343, 344, 348, 354, 357, 359, 360, 362, 363, 379, 381, 382, 384, 387, 389, 390, 392, 394, 397, 398, 401, 402, 403, 409, 412, 415, 420, 421, 424, 428, 430, 431, 433, 434, 435, 440, 441, 442, 444, 445, 448, 451, 454, 457, 464, 465, 467, 469, 472, 473, 478, 479, 482, 483, 484, 494, 504, 506, 509, 528, 531, 538, 539, 540, 541, 542, 545, 549, 554, 558, 568, 574, 577, 584, 585, 586, 587, 589, 592, 593, 596, 597, 598, 600, 607, 610, 617, 618, 619, 622, 632, 638, 639, 644, 647, 654, 656, 657, 659, 660, 664, 670, 671, 672, 673, 677, 683, 685, 686, 687, 690, 693, 694, 695, 699, 704, 721, 724, 725, 730, 731, 732, 734, 736, 740, 741, 742, 743, 745, 746, 748, 751, 753, 757, 758, 776, 778, 780, 781, 784, 794, 796, 798, 803, 809, 811, 813, 817, 819, 821, 823, 825, 830, 844, 851, 852, 853, 856, 858, 860, 861, 863, 864, 865, 867, 868, 870, 871, 876, 878, 885, 886, 888, 898, 903, 907, 909, 912, 922, 923, 929, 930, 931, 932, 938, 940, 942, 945, 947, 948, 951, 952, 959, 965, 967, 968, 970, 972, 973, 975, 978, 984, 985, 986, 987, 992, 996, 997, 999, 1000, 1001, 1002, 1005, 1007, 1011, 1013, 1014, 1016, 1017, 1018, 1020, 1022, 1023, 1025, 1027, 1031, 1034, 1035, 1036, 1037, 1041, 1043, 1046, 1047, 1050, 1051, 1052, 1053, 1054, 1056, 1059, 1063, 1071, 1073, 1074, 1075, 1077, 1085, 1090, 1118, 1122, 1123, 1128, 1129, 1130, 1131, 1132, 1135, 1136, 1137, 1139, 1141, 1142, 1145, 1147, 1148, 1150, 1156, 1158, 1159, 1162, 1163, 1166, 1178, 1179, 1181], "need": [28, 43, 45, 46, 47, 51, 55, 56, 62, 64, 105, 125, 127, 129, 132, 142, 162, 163, 164, 167, 169, 173, 177, 178, 183, 194, 201, 202, 204, 214, 224, 238, 240, 262, 306, 345, 357, 387, 389, 392, 412, 420, 421, 440, 446, 447, 453, 457, 459, 460, 464, 467, 469, 472, 474, 477, 479, 483, 484, 506, 536, 538, 539, 540, 541, 571, 577, 583, 584, 599, 619, 639, 653, 660, 664, 693, 699, 728, 742, 745, 751, 756, 758, 764, 778, 784, 798, 800, 813, 817, 821, 825, 864, 868, 881, 886, 922, 923, 924, 925, 929, 930, 931, 938, 942, 948, 949, 952, 955, 966, 970, 981, 1002, 1011, 1015, 1016, 1017, 1021, 1026, 1039, 1047, 1048, 1050, 1053, 1062, 1067, 1078, 1079, 1128, 1129, 1136, 1150, 1158, 1179], "mechan": [28, 32, 90, 149, 162, 163, 186, 194, 198, 209, 224, 278, 482, 660, 972, 993, 1031, 1123, 1151, 1176, 1181, 1191], "where": [28, 53, 90, 110, 122, 124, 142, 147, 148, 158, 161, 162, 163, 164, 165, 167, 169, 172, 177, 182, 183, 190, 191, 194, 195, 198, 221, 222, 223, 224, 231, 234, 237, 238, 240, 247, 250, 254, 262, 271, 278, 296, 304, 313, 317, 320, 357, 362, 363, 398, 402, 412, 420, 421, 423, 424, 425, 438, 442, 453, 455, 465, 475, 488, 495, 526, 528, 539, 554, 560, 577, 596, 657, 660, 664, 682, 740, 741, 745, 763, 819, 823, 825, 837, 867, 868, 882, 885, 888, 909, 914, 922, 929, 930, 931, 938, 943, 949, 951, 954, 957, 958, 974, 984, 985, 992, 996, 997, 1000, 1011, 1015, 1016, 1023, 1025, 1027, 1030, 1052, 1054, 1064, 1105, 1123, 1130, 1135, 1156, 1178, 1181], "could": [28, 50, 57, 111, 112, 124, 129, 137, 141, 158, 159, 162, 163, 167, 169, 173, 183, 192, 194, 200, 214, 223, 224, 234, 244, 250, 278, 288, 290, 291, 309, 312, 324, 375, 403, 447, 468, 470, 483, 484, 508, 541, 592, 600, 664, 676, 682, 695, 696, 704, 719, 729, 744, 779, 796, 825, 838, 864, 882, 930, 931, 938, 949, 955, 992, 1054, 1105, 1119, 1135, 1145, 1151, 1163, 1176], "exchang": [28, 79, 191, 234, 324, 329, 331, 464, 492, 508, 538, 692, 693, 796, 869, 987, 1080, 1088], "meta": [28, 39, 154, 169, 825, 837, 885], "retriev": [28, 173, 710, 825, 1027, 1075], "check": [28, 29, 38, 89, 98, 105, 119, 122, 129, 147, 161, 162, 164, 165, 166, 167, 168, 173, 177, 182, 194, 198, 202, 206, 231, 237, 240, 247, 250, 254, 278, 291, 342, 365, 368, 390, 405, 414, 416, 417, 422, 430, 437, 441, 449, 451, 467, 531, 532, 554, 565, 577, 584, 592, 599, 600, 617, 638, 676, 692, 693, 704, 741, 776, 778, 798, 800, 805, 825, 841, 842, 844, 921, 922, 929, 930, 952, 957, 963, 966, 970, 1000, 1001, 1006, 1009, 1011, 1018, 1047, 1052, 1065, 1075, 1078, 1082, 1084, 1086, 1102, 1108, 1121, 1151, 1156, 1165, 1176, 1186], "everyth": [28, 42, 43, 99, 124, 137, 155, 162, 168, 169, 186, 194, 198, 202, 213, 221, 239, 240, 268, 277, 278, 281, 284, 298, 299, 313, 316, 368, 375, 392, 412, 415, 440, 454, 460, 464, 525, 583, 584, 586, 593, 597, 602, 607, 657, 699, 728, 732, 748, 755, 776, 777, 778, 794, 803, 823, 827, 830, 855, 858, 859, 861, 862, 886, 907, 921, 922, 923, 929, 930, 931, 948, 950, 951, 962, 975, 976, 982, 984, 987, 997, 1019, 1025, 1030, 1034, 1130, 1145, 1189, 1190, 1191, 1193], "clearli": [28, 43, 127, 177, 194, 442, 689, 710, 737, 825, 844, 958, 1023, 1054, 1075, 1178], "intersphinx": [28, 159], "spinx": 28, "possibli": [29, 78, 86, 131, 162, 194, 466, 600, 676, 690, 699, 704, 719, 731, 741, 753, 754, 870, 907, 930, 978, 1013, 1139], "arrang": [29, 85, 111, 112, 166, 309, 541, 746, 858, 918], "subgroup": [29, 35, 38, 560], "refer": [29, 67, 91, 98, 111, 112, 124, 130, 142, 161, 167, 168, 182, 184, 189, 198, 201, 203, 206, 207, 218, 219, 221, 223, 224, 229, 232, 233, 235, 236, 238, 239, 240, 245, 246, 247, 250, 254, 256, 258, 259, 261, 265, 273, 274, 276, 281, 283, 284, 288, 289, 291, 294, 295, 297, 300, 301, 303, 304, 312, 313, 315, 316, 317, 320, 322, 327, 328, 329, 331, 334, 335, 337, 338, 339, 341, 343, 344, 345, 346, 347, 348, 357, 421, 427, 434, 473, 530, 538, 547, 549, 560, 582, 583, 584, 585, 600, 601, 603, 604, 605, 608, 611, 627, 633, 637, 646, 649, 650, 651, 659, 664, 667, 670, 671, 674, 675, 676, 677, 678, 679, 690, 710, 722, 723, 731, 734, 738, 742, 747, 755, 775, 776, 777, 778, 784, 785, 787, 789, 792, 795, 802, 806, 816, 825, 829, 834, 837, 840, 843, 846, 868, 898, 907, 921, 922, 929, 930, 954, 993, 999, 1015, 1018, 1023, 1024, 1046, 1073, 1074, 1080, 1081, 1082, 1092, 1095, 1103, 1104, 1106, 1107, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1136, 1137, 1156, 1158, 1176, 1177, 1178, 1186], "veri": [29, 35, 37, 38, 60, 161, 162, 164, 183, 194, 198, 201, 203, 214, 219, 222, 245, 248, 271, 295, 317, 368, 375, 396, 403, 413, 414, 434, 450, 451, 453, 459, 466, 469, 484, 571, 582, 595, 610, 628, 656, 685, 686, 724, 727, 730, 741, 744, 763, 825, 830, 835, 863, 864, 923, 928, 930, 931, 948, 949, 965, 970, 985, 999, 1027, 1035, 1051, 1054, 1058, 1059, 1065, 1069, 1073, 1078, 1123, 1130, 1131, 1152, 1161, 1168, 1176], "unawar": [29, 177, 194, 201], "simpli": [29, 62, 129, 156, 162, 165, 167, 169, 173, 177, 186, 250, 251, 290, 291, 312, 313, 403, 445, 487, 525, 592, 601, 603, 604, 653, 663, 674, 710, 731, 732, 737, 742, 756, 803, 857, 870, 929, 951, 955, 999, 1015, 1023], "interest": [29, 122, 163, 164, 177, 183, 194, 202, 357, 469, 484, 1022, 1024, 1142], "catalog": [29, 1179], "chapter": [29, 42, 142, 214, 223, 231, 237, 247, 250, 251, 339, 560, 885], "subchapt": 29, "cluster_python": [29, 91, 219, 343, 344, 345, 346, 347, 348, 357, 778, 1024, 1031, 1032, 1033, 1034, 1038, 1046, 1057, 1066, 1076, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1124, 1125, 1129, 1130, 1133, 1136, 1137, 1139, 1143, 1150, 1153, 1155, 1160], "cluster_python_swdev": [29, 778, 1076, 1121, 1124, 1125, 1129, 1137, 1139, 1150, 1153, 1155, 1160], "cluster_python_swdev_pytest": [29, 778, 1121, 1150, 1155], "pytest": [29, 238, 248, 251, 259, 262, 271, 280, 288, 290, 295, 306, 309, 312, 313, 316, 317, 335, 365, 466, 778, 1111, 1119, 1120, 1121, 1150], "cluster_python_exercis": [29, 219, 357, 778, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121], "cluster_python_exercises_userdb": [29, 778, 1082, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121], "databas": [29, 42, 43, 55, 79, 159, 181, 182, 201, 223, 229, 234, 235, 238, 240, 241, 244, 248, 262, 290, 291, 312, 348, 484, 485, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 778, 881, 912, 933, 1041, 1080, 1082, 1101, 1112, 1113, 1114, 1115, 1117, 1118, 1119, 1120, 1121, 1137, 1141, 1152, 1168], "seri": [29, 101, 163, 234, 238, 279, 280, 281, 282, 284, 286, 288, 313, 318, 324, 444, 465, 494, 778, 934, 1048, 1080, 1082, 1110, 1111, 1112, 1113, 1114, 1115, 1117, 1118, 1119, 1120, 1121, 1122, 1128, 1137, 1142, 1143, 1144, 1146, 1147, 1191], "cluster_python_exercises_sensor": [29, 778, 1082, 1109, 1110, 1111, 1121], "sensor": [29, 70, 73, 74, 75, 79, 82, 85, 98, 107, 110, 113, 114, 115, 116, 119, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 136, 140, 141, 142, 189, 198, 202, 238, 259, 270, 278, 287, 290, 291, 306, 309, 312, 316, 327, 330, 357, 361, 363, 481, 486, 488, 496, 502, 503, 506, 507, 511, 517, 520, 526, 530, 531, 532, 533, 534, 535, 536, 547, 550, 551, 552, 553, 554, 555, 556, 557, 582, 590, 655, 692, 741, 742, 743, 767, 769, 778, 825, 921, 928, 960, 962, 979, 1035, 1082, 1110, 1121, 1187], "And": [29, 98, 100, 103, 104, 105, 107, 124, 134, 162, 163, 164, 166, 169, 192, 198, 201, 221, 224, 229, 231, 240, 242, 251, 259, 266, 267, 268, 270, 271, 273, 274, 276, 277, 280, 284, 294, 295, 297, 298, 300, 305, 314, 319, 321, 322, 325, 328, 329, 331, 334, 335, 338, 339, 341, 465, 471, 477, 481, 488, 490, 502, 516, 530, 531, 532, 533, 534, 535, 536, 537, 540, 543, 547, 559, 560, 582, 590, 612, 620, 625, 635, 638, 646, 650, 656, 679, 691, 722, 723, 724, 733, 738, 745, 747, 755, 766, 775, 776, 777, 778, 848, 854, 855, 858, 859, 863, 867, 875, 877, 879, 880, 889, 890, 891, 892, 893, 894, 895, 896, 897, 899, 905, 915, 921, 928, 935, 937, 944, 950, 952, 957, 960, 962, 966, 976, 979, 982, 984, 987, 999, 1001, 1003, 1004, 1005, 1006, 1007, 1010, 1022, 1024, 1029, 1032, 1033, 1034, 1038, 1039, 1063, 1079, 1080, 1081, 1082, 1095, 1106, 1116, 1117, 1118, 1121, 1133, 1137, 1143, 1150, 1176], "acquisit": [29, 129, 162, 189, 290, 291, 306, 309, 312, 313, 316, 574, 778, 1078, 1082, 1110, 1111, 1121], "cluster_python_exercises_herdt": [29, 778, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1121], "cluster_python_exercises_legaci": [29, 219, 357, 778, 1082, 1090, 1091, 1092, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1121], "legaci": [29, 219, 357, 487, 778, 1082, 1090, 1091, 1092, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1121, 1171], "cluster_python_exercises_csv": [29, 778, 1079, 1080, 1081, 1082, 1121], "csv": [29, 44, 51, 53, 54, 55, 56, 79, 107, 129, 131, 134, 198, 201, 210, 213, 219, 223, 224, 227, 229, 231, 232, 235, 236, 238, 242, 245, 248, 250, 256, 257, 260, 275, 279, 280, 282, 285, 286, 290, 291, 297, 302, 306, 309, 312, 314, 318, 324, 330, 336, 340, 465, 778, 867, 870, 885, 907, 1035, 1038, 1041, 1075, 1082, 1116, 1117, 1118, 1119, 1121, 1123, 1126, 1127, 1128, 1129, 1137], "cluster_python_advanc": [29, 778, 1024, 1031, 1032, 1033, 1034, 1038, 1076, 1079, 1080, 1081, 1082, 1095, 1106, 1109, 1110, 1111, 1116, 1117, 1118, 1119, 1120, 1121, 1124, 1125, 1129, 1133, 1137, 1139, 1150, 1153, 1155, 1160], "cluster_python_advanced_oo": [29, 778, 1024, 1031, 1032, 1033, 1034, 1038, 1082, 1109, 1110, 1111, 1116, 1118, 1121, 1150], "object": [29, 64, 71, 74, 75, 79, 91, 98, 104, 105, 107, 108, 109, 111, 112, 113, 114, 115, 116, 118, 122, 124, 125, 129, 130, 133, 142, 155, 177, 179, 182, 184, 189, 194, 201, 210, 212, 213, 218, 221, 222, 224, 227, 229, 231, 234, 235, 238, 239, 240, 241, 242, 246, 247, 252, 253, 255, 257, 260, 264, 272, 276, 278, 279, 281, 282, 284, 286, 289, 292, 296, 302, 308, 314, 318, 324, 327, 329, 330, 336, 340, 344, 346, 347, 350, 352, 357, 358, 359, 360, 394, 420, 447, 465, 467, 472, 473, 477, 478, 479, 484, 486, 488, 493, 502, 504, 510, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 547, 549, 554, 560, 574, 582, 583, 585, 587, 590, 591, 593, 595, 596, 601, 603, 604, 605, 607, 608, 611, 627, 633, 637, 638, 639, 646, 649, 650, 653, 654, 656, 659, 660, 664, 665, 667, 668, 669, 670, 672, 673, 674, 675, 676, 677, 678, 679, 682, 690, 691, 693, 694, 704, 710, 722, 724, 726, 727, 731, 732, 737, 738, 740, 742, 743, 746, 747, 753, 755, 756, 762, 763, 768, 772, 773, 775, 776, 777, 778, 868, 921, 999, 1000, 1001, 1004, 1005, 1006, 1007, 1009, 1015, 1018, 1020, 1021, 1023, 1024, 1027, 1031, 1032, 1033, 1034, 1035, 1037, 1039, 1041, 1042, 1043, 1044, 1046, 1047, 1048, 1054, 1063, 1065, 1071, 1072, 1082, 1109, 1110, 1111, 1116, 1118, 1121, 1128, 1142, 1144, 1146, 1147, 1148, 1150, 1156, 1176, 1177, 1179, 1181], "orient": [29, 71, 74, 75, 79, 98, 124, 142, 182, 201, 213, 222, 224, 229, 235, 238, 241, 252, 253, 262, 264, 276, 281, 284, 287, 289, 327, 329, 344, 346, 347, 357, 358, 359, 392, 465, 488, 502, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 547, 549, 582, 583, 590, 605, 608, 611, 627, 633, 637, 646, 649, 650, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 691, 722, 738, 746, 747, 755, 763, 775, 777, 778, 1024, 1031, 1032, 1033, 1034, 1048, 1082, 1109, 1110, 1111, 1116, 1118, 1121, 1150, 1156, 1177, 1179], "cluster_python_advanced_multithread": [29, 778, 1024, 1031, 1032, 1033, 1034, 1121], "cluster_python_misc": [29, 91, 219, 343, 344, 345, 346, 347, 348, 357, 778, 1024, 1046, 1076, 1080, 1081, 1082, 1092, 1095, 1103, 1106, 1107, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1124, 1125, 1129, 1130, 1136, 1137, 1139, 1143, 1150, 1153, 1160], "cluster_python_misc_ai": [29, 778, 1121, 1124, 1125, 1129, 1130, 1137], "machin": [29, 103, 111, 112, 124, 154, 164, 169, 183, 198, 214, 221, 222, 231, 232, 235, 237, 247, 250, 304, 312, 316, 320, 330, 356, 360, 380, 396, 398, 406, 414, 442, 446, 460, 541, 542, 778, 825, 852, 853, 858, 861, 864, 914, 921, 935, 936, 937, 938, 940, 941, 942, 984, 999, 1002, 1009, 1023, 1121, 1125, 1129, 1137, 1178], "artifici": [29, 198, 223, 281, 312, 316, 442, 676, 778, 942, 1015, 1121, 1125, 1129, 1130, 1137], "intellig": [29, 162, 198, 238, 274, 281, 284, 294, 300, 312, 316, 334, 335, 363, 778, 796, 1020, 1024, 1121, 1125, 1129, 1130, 1137], "cluster_python_misc_panda": [29, 778, 1121, 1137, 1143], "panda": [29, 183, 194, 213, 219, 232, 245, 259, 262, 280, 283, 295, 312, 314, 316, 319, 323, 325, 336, 375, 466, 778, 1047, 1121, 1123, 1126, 1129, 1137], "cluster_python_bas": [29, 91, 219, 343, 344, 345, 346, 347, 348, 357, 778, 1024, 1031, 1032, 1033, 1034, 1038, 1046, 1057, 1066, 1076, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1133, 1136, 1137, 1143, 1150], "fundament": [29, 59, 63, 74, 91, 185, 194, 197, 199, 201, 203, 206, 208, 213, 216, 219, 222, 225, 235, 241, 245, 253, 256, 343, 344, 345, 346, 347, 348, 357, 375, 376, 464, 494, 778, 803, 1024, 1031, 1032, 1033, 1034, 1038, 1057, 1066, 1071, 1076, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1133, 1136, 1137, 1143, 1150, 1151], "cluster_python_db": [29, 778, 1079, 1081, 1082, 1121, 1133], "cluster_python_draft": [29, 778, 1076, 1121], "python_python_5550_xml_etre": [29, 778, 1121], "xml": [29, 129, 158, 159, 309, 330, 778, 1121, 1137], "elementtre": [29, 262, 778, 1121, 1137], "etre": [29, 262, 778, 1121, 1137], "python_advanced_modul": [29, 778, 1024, 1076, 1079, 1080, 1081, 1082, 1116, 1117, 1118, 1119, 1120, 1121, 1124, 1125, 1129, 1133, 1137, 1139, 1150, 1153, 1155, 1160], "gt": [29, 32, 35, 36, 53, 55, 56, 73, 74, 75, 88, 91, 125, 126, 127, 128, 130, 132, 133, 134, 135, 141, 151, 181, 184, 195, 200, 205, 212, 218, 219, 221, 226, 231, 234, 237, 242, 244, 247, 250, 254, 257, 260, 263, 272, 275, 279, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 343, 344, 345, 346, 347, 348, 351, 352, 357, 395, 410, 419, 426, 432, 436, 439, 443, 452, 456, 461, 462, 471, 488, 502, 530, 531, 532, 533, 534, 535, 536, 537, 540, 547, 549, 582, 590, 605, 608, 611, 627, 633, 637, 646, 649, 650, 655, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 684, 691, 698, 722, 723, 733, 738, 747, 755, 763, 775, 777, 778, 782, 785, 787, 790, 792, 795, 797, 801, 802, 804, 806, 808, 810, 816, 818, 820, 822, 829, 831, 834, 836, 840, 843, 846, 848, 852, 853, 854, 855, 858, 859, 866, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 905, 915, 921, 928, 933, 934, 935, 936, 937, 944, 950, 952, 960, 962, 964, 976, 979, 982, 984, 1001, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1024, 1031, 1032, 1033, 1034, 1038, 1046, 1057, 1066, 1076, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1124, 1125, 1129, 1133, 1136, 1137, 1139, 1143, 1150, 1153, 1155, 1160, 1161], "python_basics_python_0450_dictionari": [29, 91, 778, 1024, 1046, 1082, 1095, 1106, 1121], "python_basics_python_0220_for": [29, 91, 219, 343, 344, 345, 346, 347, 348, 357, 778, 1024, 1046, 1079, 1080, 1081, 1082, 1092, 1095, 1096, 1098, 1102, 1103, 1104, 1105, 1106, 1107, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1133, 1137], "loop": [29, 32, 34, 38, 42, 59, 63, 90, 91, 98, 111, 112, 124, 129, 133, 142, 150, 155, 162, 177, 186, 198, 201, 203, 206, 207, 208, 211, 219, 221, 222, 223, 225, 229, 232, 235, 240, 241, 243, 245, 246, 251, 253, 255, 256, 258, 259, 261, 271, 274, 281, 284, 291, 294, 295, 300, 301, 309, 313, 317, 322, 323, 325, 327, 328, 329, 334, 335, 338, 339, 341, 343, 344, 345, 346, 347, 348, 349, 357, 362, 380, 383, 386, 395, 398, 410, 417, 418, 419, 426, 432, 436, 439, 440, 443, 444, 452, 456, 461, 462, 529, 530, 571, 582, 613, 618, 675, 682, 684, 710, 722, 745, 756, 775, 777, 778, 813, 823, 828, 842, 856, 858, 862, 869, 925, 947, 948, 949, 957, 983, 987, 993, 996, 997, 1024, 1025, 1028, 1029, 1034, 1046, 1079, 1080, 1081, 1082, 1084, 1086, 1092, 1094, 1095, 1096, 1098, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1133, 1137, 1139, 1175, 1176, 1177, 1186], "python_swdev_unittest": [29, 778, 1121, 1150], "unittest": [29, 66, 124, 158, 159, 175, 178, 189, 191, 194, 197, 198, 208, 211, 222, 224, 229, 271, 280, 291, 347, 357, 365, 366, 375, 376, 776, 778, 1065, 1121, 1123, 1150, 1161], "python_advanced_oo_inherit": [29, 778, 1024, 1031, 1032, 1033, 1034, 1038, 1121, 1150], "inherit": [29, 66, 70, 74, 107, 142, 179, 189, 198, 222, 235, 252, 254, 287, 288, 289, 290, 291, 295, 312, 313, 316, 317, 327, 335, 366, 488, 502, 530, 538, 540, 580, 582, 583, 607, 656, 659, 679, 721, 763, 777, 778, 817, 857, 860, 863, 884, 886, 993, 1022, 1024, 1032, 1033, 1034, 1035, 1038, 1040, 1043, 1121, 1150, 1192], "python_swdev_pip": [29, 778, 1076, 1121, 1124, 1125, 1129, 1137, 1139, 1150, 1153, 1160], "python_misc_import": [29, 778, 1076, 1121, 1124, 1125, 1129, 1137, 1139, 1150, 1153, 1160], "statement": [29, 54, 91, 111, 112, 114, 118, 182, 194, 198, 199, 200, 201, 206, 208, 213, 219, 222, 223, 225, 229, 232, 235, 241, 245, 251, 253, 256, 259, 265, 271, 274, 281, 284, 288, 290, 291, 294, 295, 300, 301, 306, 309, 312, 313, 316, 317, 322, 323, 328, 329, 334, 335, 338, 339, 343, 344, 345, 346, 347, 348, 357, 362, 379, 382, 386, 399, 412, 414, 415, 418, 419, 424, 426, 432, 436, 439, 443, 446, 452, 456, 461, 462, 638, 664, 683, 684, 722, 775, 777, 778, 786, 858, 898, 984, 1005, 1019, 1022, 1024, 1025, 1030, 1034, 1036, 1046, 1053, 1056, 1058, 1065, 1076, 1079, 1080, 1081, 1082, 1084, 1085, 1086, 1087, 1089, 1092, 1095, 1096, 1097, 1098, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1124, 1125, 1129, 1133, 1137, 1139, 1150, 1153, 1156, 1160, 1186], "incomplet": [29, 114, 117, 192, 231, 237, 247, 250, 254, 475, 582, 657, 763, 778, 928, 1076, 1121, 1124, 1125, 1129, 1137, 1139, 1150, 1153, 1160, 1161], "python_swdev_venv": [29, 778, 1076, 1121, 1124, 1125, 1129, 1137, 1139, 1150, 1160], "python_swdev_pytest_intro": [29, 778, 1121, 1150, 1155], "By": [29, 51, 53, 162, 164, 169, 173, 177, 189, 195, 231, 237, 238, 240, 247, 248, 250, 251, 255, 259, 262, 266, 267, 269, 271, 280, 288, 290, 291, 295, 306, 309, 312, 313, 316, 326, 327, 339, 365, 397, 424, 447, 450, 667, 668, 670, 671, 674, 676, 678, 679, 722, 723, 775, 777, 778, 794, 867, 916, 929, 965, 984, 1000, 1011, 1035, 1042, 1119, 1120, 1121, 1130, 1150, 1155], "python_exercises_userdb_csvdictreader_funct": [29, 778, 1082, 1113, 1116, 1117, 1118, 1119, 1120, 1121], "refactor": [29, 43, 55, 137, 159, 248, 251, 256, 259, 271, 274, 290, 294, 295, 300, 301, 322, 323, 329, 334, 335, 338, 339, 425, 465, 482, 729, 778, 786, 792, 802, 806, 816, 827, 829, 834, 840, 843, 846, 921, 1038, 1082, 1116, 1117, 1118, 1119, 1121], "Into": [29, 98, 240, 245, 248, 251, 256, 259, 271, 274, 280, 294, 295, 300, 301, 322, 323, 329, 334, 335, 338, 339, 395, 410, 419, 425, 426, 432, 436, 439, 443, 452, 456, 460, 461, 462, 529, 530, 582, 667, 668, 669, 670, 671, 672, 674, 675, 676, 677, 678, 679, 684, 722, 775, 777, 778, 1013, 1038, 1082, 1116, 1117, 1118, 1119, 1121], "dictread": [29, 213, 234, 235, 248, 251, 256, 259, 271, 274, 294, 295, 300, 301, 318, 322, 323, 329, 334, 335, 338, 339, 778, 1038, 1080, 1082, 1116, 1117, 1118, 1119, 1120, 1121], "python_exercises_userdb_csvdictread": [29, 778, 1082, 1112, 1113, 1116, 1117, 1118, 1119, 1120, 1121], "python_basics_python_0270_funct": [29, 91, 219, 778, 1024, 1046, 1066, 1079, 1080, 1081, 1082, 1092, 1095, 1096, 1098, 1102, 1103, 1104, 1105, 1106, 1107, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1133], "python_exercises_userdb_user_class_person": [29, 778, 1082, 1116, 1118, 1121], "awai": [29, 64, 78, 85, 161, 162, 163, 167, 186, 202, 223, 229, 237, 271, 274, 294, 295, 300, 306, 309, 322, 328, 329, 334, 338, 346, 478, 741, 778, 864, 885, 996, 1020, 1038, 1082, 1116, 1121], "raw": [29, 64, 137, 207, 210, 213, 218, 230, 233, 242, 246, 252, 266, 267, 271, 273, 274, 278, 280, 294, 295, 300, 303, 306, 309, 313, 322, 328, 329, 334, 338, 342, 352, 378, 466, 467, 473, 496, 503, 541, 621, 742, 778, 861, 1038, 1054, 1059, 1075, 1082, 1116, 1121], "python_exercises_userdb_userdb_modul": [29, 778, 1082, 1116, 1117, 1118, 1119, 1120, 1121], "both": [29, 54, 64, 86, 124, 125, 127, 133, 137, 141, 152, 162, 164, 169, 182, 194, 200, 221, 237, 240, 248, 251, 254, 256, 259, 271, 274, 286, 294, 295, 300, 301, 322, 323, 329, 334, 335, 338, 339, 458, 464, 466, 467, 492, 538, 540, 560, 592, 600, 673, 729, 740, 778, 796, 819, 825, 864, 965, 969, 973, 986, 1009, 1015, 1022, 1035, 1038, 1042, 1049, 1056, 1063, 1067, 1072, 1082, 1085, 1088, 1094, 1116, 1117, 1118, 1119, 1121, 1129, 1156, 1163, 1176], "python_exercises_userdb_user_json": [29, 778, 1082, 1116, 1117, 1118, 1119, 1121], "json": [29, 79, 86, 93, 124, 129, 132, 159, 195, 201, 211, 225, 229, 230, 238, 239, 247, 250, 251, 255, 258, 264, 273, 306, 308, 309, 311, 313, 316, 330, 377, 778, 1038, 1082, 1116, 1117, 1118, 1121, 1139, 1152], "python_advanced_oo_namedtupl": [29, 778, 1024, 1038, 1082, 1116, 1118, 1121], "namedtupl": [29, 198, 206, 213, 228, 229, 231, 237, 247, 250, 271, 288, 290, 291, 295, 306, 309, 312, 313, 316, 317, 329, 335, 339, 340, 778, 1024, 1038, 1082, 1116, 1118, 1121, 1141, 1186], "python_exercises_userdb_mqtt_publish_csv": [29, 778, 1082, 1116, 1117, 1121], "mqtt": [29, 122, 128, 129, 131, 134, 211, 213, 227, 229, 238, 251, 252, 256, 290, 291, 306, 309, 312, 363, 366, 368, 778, 1038, 1078, 1082, 1116, 1119, 1121, 1137], "publish": [29, 122, 132, 166, 168, 177, 238, 250, 251, 271, 313, 354, 363, 365, 778, 1038, 1082, 1116, 1119, 1121, 1123, 1154], "python_exercises_userdb_csvread": [29, 778, 1082, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121], "reader": [29, 159, 234, 248, 251, 256, 259, 271, 274, 294, 295, 300, 301, 322, 323, 329, 330, 334, 335, 338, 339, 447, 466, 489, 778, 869, 1035, 1038, 1065, 1082, 1112, 1113, 1116, 1117, 1118, 1119, 1120, 1121], "python_misc_csv": [29, 778, 1080, 1081, 1082, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1137], "python_basics_python_0139_commandline_argv": [29, 91, 219, 357, 778, 1046, 1076, 1079, 1080, 1081, 1082, 1084, 1085, 1086, 1087, 1089, 1090, 1092, 1095, 1096, 1097, 1098, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121], "argument": [29, 57, 64, 91, 98, 124, 155, 161, 164, 167, 181, 182, 195, 198, 210, 219, 222, 229, 231, 235, 237, 238, 240, 241, 243, 245, 247, 248, 251, 252, 253, 254, 256, 259, 274, 275, 278, 281, 284, 288, 290, 291, 294, 295, 296, 300, 301, 309, 312, 313, 316, 317, 318, 322, 323, 328, 329, 334, 335, 338, 339, 357, 379, 380, 425, 432, 436, 439, 443, 452, 456, 461, 462, 466, 528, 560, 584, 594, 595, 684, 699, 719, 722, 732, 744, 775, 776, 777, 778, 783, 784, 885, 907, 921, 955, 957, 959, 962, 979, 1017, 1020, 1024, 1046, 1048, 1049, 1066, 1074, 1076, 1079, 1080, 1081, 1082, 1084, 1085, 1086, 1087, 1089, 1090, 1092, 1094, 1095, 1096, 1097, 1098, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1134, 1156, 1158], "sy": [29, 32, 91, 125, 137, 141, 163, 180, 182, 184, 185, 210, 212, 213, 219, 222, 228, 231, 235, 237, 242, 245, 247, 250, 251, 253, 254, 256, 257, 259, 272, 274, 275, 280, 281, 284, 290, 294, 295, 296, 300, 301, 312, 316, 318, 322, 323, 328, 329, 330, 334, 335, 338, 339, 340, 342, 343, 350, 357, 453, 466, 525, 541, 542, 778, 780, 784, 805, 882, 911, 922, 929, 930, 931, 947, 948, 949, 951, 955, 956, 957, 958, 959, 961, 963, 965, 966, 980, 987, 989, 992, 996, 1013, 1023, 1030, 1045, 1046, 1065, 1073, 1075, 1076, 1079, 1080, 1081, 1082, 1084, 1085, 1086, 1087, 1089, 1090, 1092, 1094, 1095, 1096, 1097, 1098, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1148, 1156, 1171], "argv": [29, 42, 50, 91, 164, 181, 182, 185, 195, 213, 219, 222, 223, 228, 231, 235, 237, 240, 241, 245, 247, 250, 251, 253, 256, 259, 274, 280, 281, 284, 290, 294, 295, 300, 301, 312, 316, 322, 323, 328, 329, 330, 334, 335, 338, 339, 342, 350, 357, 431, 466, 467, 489, 528, 778, 929, 955, 956, 957, 958, 959, 963, 966, 980, 987, 996, 1017, 1023, 1030, 1046, 1075, 1076, 1079, 1080, 1081, 1082, 1084, 1085, 1086, 1087, 1089, 1090, 1092, 1094, 1095, 1096, 1097, 1098, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1163, 1168], "python_exercises_userdb_csvreader_funct": [29, 778, 1082, 1115, 1116, 1121], "python_exercises_sensors_sensor_const": [29, 778, 1082, 1109, 1110, 1111, 1121], "python_exercises_sensors_project_setup": [29, 778, 1082, 1109, 1110, 1111, 1121], "setup": [29, 107, 124, 137, 146, 150, 159, 177, 189, 193, 194, 232, 234, 250, 257, 260, 262, 267, 269, 275, 278, 282, 292, 296, 318, 324, 330, 336, 354, 357, 362, 363, 448, 481, 495, 506, 508, 522, 536, 539, 541, 542, 675, 677, 778, 793, 819, 916, 921, 929, 931, 946, 948, 959, 996, 1000, 1004, 1006, 1009, 1010, 1020, 1027, 1035, 1078, 1082, 1109, 1121, 1157, 1167, 1169], "python_advanced_oo_method": [29, 778, 1024, 1038, 1082, 1109, 1110, 1111, 1121], "method": [29, 42, 43, 54, 55, 57, 64, 66, 70, 71, 74, 91, 98, 107, 108, 111, 112, 121, 129, 135, 137, 141, 142, 167, 198, 199, 200, 201, 203, 206, 219, 220, 222, 224, 229, 232, 233, 235, 240, 241, 243, 245, 246, 249, 251, 252, 253, 254, 256, 259, 261, 271, 274, 276, 280, 281, 284, 286, 288, 289, 290, 291, 294, 295, 297, 300, 301, 303, 306, 309, 312, 313, 315, 316, 317, 319, 322, 323, 325, 327, 328, 329, 331, 334, 335, 337, 338, 339, 341, 343, 344, 345, 346, 347, 348, 357, 361, 362, 438, 464, 484, 486, 488, 492, 502, 509, 510, 528, 530, 535, 540, 541, 542, 547, 549, 554, 560, 573, 575, 582, 583, 584, 587, 596, 608, 610, 611, 627, 633, 637, 643, 646, 649, 650, 653, 654, 655, 656, 659, 664, 665, 667, 670, 671, 674, 675, 676, 677, 678, 679, 682, 691, 704, 721, 722, 725, 729, 738, 746, 747, 755, 756, 762, 763, 769, 772, 773, 775, 776, 777, 778, 786, 788, 793, 794, 803, 805, 815, 827, 838, 970, 1020, 1021, 1024, 1027, 1031, 1035, 1036, 1037, 1038, 1039, 1043, 1046, 1051, 1060, 1063, 1080, 1081, 1082, 1092, 1095, 1103, 1104, 1106, 1107, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1128, 1132, 1136, 1137, 1142, 1145, 1147, 1179, 1186, 1193], "python_exercises_herdt_username_password": [29, 778, 1082, 1084, 1086, 1089, 1121], "usernam": [29, 177, 206, 214, 235, 354, 778, 852, 860, 869, 932, 942, 1069, 1082, 1084, 1086, 1101, 1121, 1186], "password": [29, 169, 172, 177, 202, 206, 214, 235, 354, 357, 362, 778, 860, 882, 922, 932, 933, 938, 1082, 1084, 1086, 1101, 1121, 1134, 1186], "python_exercises_herdt_greet": [29, 778, 1082, 1084, 1085, 1086, 1089, 1121], "python_basics_python_0170_if": [29, 91, 219, 343, 344, 345, 346, 347, 348, 357, 778, 1024, 1046, 1057, 1079, 1080, 1081, 1082, 1084, 1085, 1086, 1087, 1089, 1092, 1095, 1096, 1097, 1098, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1133, 1137], "python_exercises_herdt_boolean": [29, 778, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1121], "boolean": [29, 58, 85, 91, 182, 183, 199, 201, 203, 206, 207, 208, 219, 225, 229, 232, 233, 235, 236, 237, 241, 243, 245, 246, 251, 252, 253, 255, 256, 258, 259, 274, 281, 284, 294, 295, 300, 301, 322, 323, 325, 328, 329, 331, 334, 335, 338, 339, 340, 343, 344, 345, 346, 347, 348, 357, 362, 386, 409, 425, 778, 972, 1024, 1046, 1054, 1057, 1058, 1069, 1079, 1080, 1081, 1082, 1084, 1085, 1086, 1087, 1088, 1089, 1092, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1133, 1135, 1137, 1186], "express": [29, 59, 63, 181, 197, 198, 200, 201, 211, 221, 230, 235, 236, 238, 242, 261, 262, 264, 265, 266, 267, 270, 271, 276, 295, 296, 301, 314, 325, 331, 380, 382, 386, 390, 399, 400, 402, 403, 404, 407, 409, 412, 414, 415, 417, 419, 425, 426, 432, 436, 439, 443, 452, 456, 461, 462, 466, 481, 490, 502, 503, 506, 510, 516, 517, 530, 538, 582, 584, 662, 684, 695, 699, 704, 722, 775, 777, 778, 885, 918, 999, 1019, 1029, 1035, 1056, 1058, 1065, 1067, 1082, 1084, 1085, 1086, 1087, 1088, 1089, 1119, 1120, 1121, 1123, 1144, 1175, 1176, 1177], "python_basics_python_0160_boolean": [29, 91, 219, 343, 344, 345, 346, 347, 348, 357, 778, 1024, 1046, 1057, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1092, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1133, 1137], "python_exercises_herdt_max_numb": [29, 778, 1082, 1084, 1085, 1086, 1087, 1089, 1121], "determin": [29, 103, 124, 155, 161, 185, 190, 192, 200, 201, 206, 208, 213, 219, 225, 229, 231, 232, 235, 241, 245, 251, 253, 256, 258, 259, 274, 281, 294, 295, 300, 301, 322, 323, 328, 329, 334, 335, 338, 339, 660, 694, 695, 732, 778, 833, 855, 874, 875, 876, 877, 878, 879, 880, 917, 921, 930, 948, 985, 986, 1016, 1082, 1084, 1085, 1086, 1089, 1092, 1095, 1096, 1102, 1103, 1104, 1105, 1106, 1107, 1121, 1151, 1186], "python_exercises_herdt_while_even_numb": [29, 778, 1082, 1084, 1086, 1121], "python_basics_python_0193_whil": [29, 91, 219, 343, 344, 345, 346, 347, 348, 357, 778, 1024, 1046, 1079, 1080, 1081, 1082, 1084, 1086, 1092, 1095, 1096, 1098, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1133, 1137], "python_exercises_herdt_swap": [29, 778, 1082, 1084, 1085, 1086, 1087, 1088, 1089, 1121], "python_basics_python_0120_helloworld": [29, 91, 219, 343, 344, 345, 346, 347, 348, 357, 778, 1024, 1031, 1032, 1033, 1034, 1038, 1046, 1057, 1066, 1076, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1133, 1136, 1137, 1143, 1150], "world": [29, 79, 91, 131, 155, 158, 159, 162, 167, 173, 192, 201, 205, 206, 208, 212, 219, 223, 225, 227, 229, 231, 232, 235, 237, 240, 241, 242, 244, 245, 251, 252, 253, 254, 256, 257, 259, 262, 274, 275, 281, 284, 294, 295, 300, 301, 314, 322, 323, 324, 328, 329, 334, 335, 338, 339, 340, 343, 344, 345, 346, 347, 348, 352, 357, 390, 395, 399, 410, 419, 426, 432, 436, 439, 443, 452, 456, 461, 462, 467, 472, 480, 503, 508, 510, 681, 684, 722, 748, 756, 775, 777, 778, 782, 785, 787, 790, 792, 795, 802, 806, 810, 816, 822, 827, 829, 834, 837, 840, 843, 846, 863, 876, 888, 921, 959, 970, 985, 986, 999, 1011, 1013, 1015, 1016, 1017, 1024, 1031, 1032, 1033, 1034, 1038, 1046, 1050, 1051, 1057, 1060, 1062, 1066, 1067, 1076, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1128, 1133, 1136, 1137, 1143, 1150, 1172, 1176, 1186], "python_basics_python_0150_datatypes_overview": [29, 91, 219, 343, 344, 345, 346, 347, 348, 357, 778, 1024, 1031, 1032, 1033, 1034, 1038, 1046, 1057, 1066, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1133, 1136, 1137, 1143, 1150], "python_basics_python_0140_vari": [29, 91, 219, 343, 344, 345, 346, 347, 348, 357, 778, 1024, 1031, 1032, 1033, 1034, 1038, 1046, 1057, 1066, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1133, 1136, 1137, 1143, 1150], "python_exercises_legacy_mixed_list_interact": [29, 219, 778, 1082, 1092, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1121], "interact": [29, 64, 86, 135, 137, 141, 158, 169, 201, 202, 208, 219, 229, 231, 232, 235, 237, 245, 247, 250, 255, 274, 275, 281, 294, 295, 300, 301, 303, 322, 323, 328, 329, 334, 335, 338, 339, 778, 885, 933, 938, 941, 951, 1013, 1048, 1082, 1091, 1092, 1095, 1096, 1097, 1098, 1099, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1121, 1128, 1136], "interpret": [29, 64, 158, 164, 182, 183, 194, 198, 201, 208, 219, 222, 229, 231, 232, 235, 237, 245, 247, 250, 254, 270, 271, 274, 280, 281, 294, 295, 296, 300, 301, 303, 312, 313, 317, 322, 323, 328, 329, 334, 335, 338, 339, 357, 442, 477, 481, 488, 492, 502, 516, 530, 582, 778, 825, 909, 931, 952, 999, 1000, 1047, 1048, 1049, 1050, 1080, 1082, 1091, 1092, 1095, 1096, 1097, 1098, 1099, 1102, 1103, 1104, 1105, 1106, 1107, 1121, 1123, 1136, 1158, 1179], "python_basics_python_0150_datatypes_overview_compound": [29, 91, 219, 343, 344, 345, 346, 347, 348, 357, 778, 1024, 1031, 1032, 1033, 1034, 1038, 1046, 1079, 1080, 1081, 1082, 1090, 1091, 1092, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1133, 1136, 1137, 1143, 1150], "python_exercises_legacy_python_0350_exercis": [29, 219, 778, 1082, 1092, 1095, 1103, 1104, 1106, 1107, 1121], "right": [29, 34, 35, 36, 38, 42, 64, 81, 85, 129, 155, 161, 162, 164, 167, 182, 202, 213, 214, 219, 224, 229, 242, 244, 250, 254, 262, 275, 288, 296, 339, 343, 349, 381, 401, 402, 403, 409, 420, 450, 480, 531, 539, 586, 601, 603, 604, 682, 694, 710, 736, 741, 746, 758, 778, 786, 805, 809, 825, 844, 867, 868, 870, 885, 940, 970, 1020, 1042, 1053, 1059, 1082, 1092, 1095, 1103, 1106, 1107, 1121], "justifi": [29, 182, 194, 219, 229, 250, 296, 381, 748, 778, 1047, 1082, 1092, 1095, 1103, 1106, 1107, 1121], "python_exercises_legacy_join_funct": [29, 219, 778, 1082, 1092, 1095, 1096, 1103, 1104, 1106, 1107, 1121], "join": [29, 35, 64, 173, 201, 219, 221, 222, 227, 229, 231, 234, 235, 237, 242, 246, 252, 260, 275, 282, 292, 296, 302, 318, 325, 330, 336, 341, 342, 351, 466, 559, 682, 743, 749, 754, 756, 778, 968, 973, 996, 1082, 1092, 1095, 1103, 1104, 1106, 1107, 1121, 1156], "python_basics_python_0320_strings_method": [29, 91, 219, 343, 344, 345, 346, 347, 348, 357, 778, 1024, 1046, 1080, 1081, 1082, 1092, 1095, 1103, 1104, 1106, 1107, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1136, 1137], "python_basics_python_0300_str": [29, 91, 219, 343, 344, 345, 346, 347, 348, 357, 778, 1024, 1046, 1080, 1081, 1082, 1092, 1095, 1103, 1104, 1106, 1107, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1136, 1137], "python_basics_python_0310_strings_format": [29, 91, 219, 778, 1046, 1082, 1092, 1095, 1103, 1104, 1106, 1107, 1121], "python_exercises_legacy_passwd": [29, 778, 1082, 1095, 1106, 1121], "pars": [29, 181, 218, 219, 229, 230, 232, 235, 241, 245, 250, 251, 253, 259, 262, 290, 295, 312, 316, 343, 348, 361, 778, 1076, 1082, 1095, 1106, 1121, 1123, 1148], "passwd": [29, 101, 102, 124, 202, 212, 221, 234, 235, 237, 241, 242, 245, 250, 251, 253, 257, 259, 260, 268, 275, 277, 278, 282, 292, 296, 298, 299, 318, 324, 330, 336, 776, 778, 855, 857, 860, 862, 865, 867, 869, 880, 899, 902, 904, 905, 907, 910, 912, 916, 918, 921, 922, 932, 933, 941, 942, 946, 947, 952, 958, 978, 992, 1020, 1022, 1069, 1073, 1082, 1095, 1106, 1121, 1151], "python_exercises_legacy_distil": [29, 219, 778, 1082, 1092, 1095, 1106, 1121], "elimin": [29, 58, 155, 219, 241, 248, 250, 251, 253, 259, 274, 281, 294, 300, 301, 322, 328, 329, 334, 335, 338, 339, 509, 554, 682, 745, 763, 764, 778, 918, 1025, 1082, 1095, 1106, 1121], "empti": [29, 38, 42, 48, 50, 162, 165, 172, 180, 200, 202, 219, 231, 234, 241, 242, 248, 250, 251, 253, 254, 257, 259, 260, 263, 274, 275, 280, 281, 282, 292, 294, 296, 300, 301, 318, 322, 324, 328, 329, 330, 334, 335, 336, 338, 339, 352, 386, 438, 577, 586, 587, 591, 601, 603, 619, 620, 638, 656, 676, 682, 731, 741, 742, 754, 776, 778, 788, 825, 852, 853, 865, 869, 879, 916, 925, 938, 972, 992, 1030, 1071, 1082, 1095, 1096, 1100, 1106, 1121], "comment": [29, 34, 35, 36, 38, 44, 155, 164, 199, 219, 220, 222, 235, 241, 243, 247, 248, 251, 253, 258, 259, 274, 281, 283, 294, 300, 301, 322, 328, 329, 334, 335, 338, 339, 357, 380, 425, 444, 472, 509, 510, 538, 778, 930, 1068, 1082, 1095, 1106, 1121, 1136], "line": [29, 34, 35, 36, 38, 64, 122, 130, 158, 159, 162, 164, 167, 177, 181, 184, 185, 198, 202, 212, 214, 218, 219, 221, 222, 227, 228, 231, 232, 234, 235, 237, 238, 240, 241, 242, 245, 247, 248, 250, 251, 253, 254, 257, 259, 260, 262, 263, 274, 275, 280, 281, 282, 284, 288, 292, 294, 295, 296, 300, 301, 302, 314, 318, 322, 324, 328, 329, 330, 334, 335, 336, 338, 339, 340, 348, 357, 380, 386, 387, 395, 399, 402, 404, 410, 419, 421, 426, 432, 436, 439, 443, 448, 452, 455, 456, 458, 461, 462, 466, 469, 472, 479, 509, 510, 660, 663, 666, 684, 722, 775, 777, 778, 794, 798, 805, 807, 825, 852, 853, 856, 865, 867, 869, 891, 912, 914, 916, 917, 918, 922, 926, 929, 930, 931, 973, 983, 1014, 1020, 1021, 1022, 1025, 1026, 1027, 1035, 1036, 1042, 1043, 1050, 1064, 1065, 1067, 1069, 1071, 1073, 1074, 1075, 1080, 1082, 1095, 1101, 1106, 1120, 1121, 1123, 1126, 1131, 1136, 1144, 1145, 1157], "python_basics_python_0500_fil": [29, 91, 219, 343, 344, 345, 346, 347, 348, 357, 778, 1024, 1046, 1080, 1081, 1082, 1092, 1095, 1103, 1106, 1107, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1137], "python_basics_python_0210_indexing_sl": [29, 91, 778, 1046, 1082, 1095, 1106, 1121, 1137, 1143], "python_exercises_legacy_revert": [29, 219, 778, 1082, 1092, 1095, 1103, 1106, 1121], "revert": [29, 141, 162, 219, 778, 803, 821, 983, 1042, 1082, 1092, 1095, 1106, 1121], "python_exercises_legacy_wc": [29, 219, 778, 1082, 1092, 1095, 1103, 1106, 1107, 1121], "word": [29, 43, 66, 155, 162, 182, 190, 194, 198, 201, 208, 213, 219, 223, 229, 232, 240, 241, 245, 248, 250, 251, 253, 256, 258, 259, 266, 267, 269, 274, 281, 288, 294, 295, 296, 300, 301, 313, 322, 323, 326, 327, 328, 329, 334, 335, 338, 339, 357, 362, 387, 440, 482, 487, 560, 660, 738, 747, 755, 777, 778, 865, 867, 914, 986, 1082, 1092, 1095, 1096, 1098, 1102, 1103, 1104, 1105, 1106, 1108, 1121], "charact": [29, 164, 180, 205, 210, 214, 219, 223, 227, 234, 240, 250, 257, 260, 278, 281, 296, 302, 318, 380, 381, 387, 395, 398, 404, 405, 410, 419, 426, 432, 436, 439, 442, 443, 447, 449, 452, 456, 461, 462, 647, 684, 722, 775, 776, 777, 778, 787, 792, 795, 802, 806, 816, 819, 827, 829, 834, 840, 841, 843, 846, 865, 867, 885, 907, 921, 929, 984, 1034, 1053, 1067, 1068, 1069, 1073, 1075, 1082, 1085, 1092, 1095, 1103, 1106, 1121, 1136, 1163], "python_exercises_legacy_max_numbers_funct": [29, 219, 778, 1082, 1092, 1095, 1096, 1098, 1102, 1103, 1104, 1105, 1106, 1107, 1121], "python_exercises_legacy_for_prim": [29, 219, 778, 1082, 1092, 1095, 1096, 1098, 1102, 1103, 1104, 1105, 1106, 1107, 1121], "prime": [29, 38, 181, 182, 201, 205, 206, 208, 213, 219, 225, 229, 241, 245, 248, 253, 259, 274, 281, 294, 295, 300, 301, 322, 323, 328, 329, 334, 335, 338, 339, 341, 442, 778, 1082, 1092, 1095, 1096, 1098, 1103, 1104, 1105, 1106, 1107, 1121, 1186], "python_exercises_legacy_max_numb": [29, 219, 778, 1082, 1092, 1095, 1096, 1097, 1098, 1102, 1103, 1104, 1105, 1106, 1107, 1121], "python_exercises_legacy_while_prim": [29, 219, 778, 1082, 1092, 1095, 1096, 1098, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1121], "python_basics_python_0225_rang": [29, 91, 219, 778, 1024, 1046, 1079, 1080, 1081, 1082, 1092, 1095, 1096, 1098, 1102, 1103, 1104, 1105, 1106, 1107, 1121, 1133], "python_exercises_legacy_uniq_gener": [29, 778, 1082, 1095, 1106, 1121], "uniq": [29, 181, 182, 199, 201, 213, 219, 229, 232, 235, 241, 245, 251, 253, 256, 274, 281, 294, 295, 300, 301, 317, 322, 323, 328, 329, 334, 335, 338, 339, 558, 778, 918, 1082, 1092, 1095, 1096, 1103, 1104, 1107, 1121], "python_exercises_legacy_uniq_funct": [29, 219, 778, 1082, 1092, 1095, 1096, 1103, 1104, 1105, 1106, 1107, 1121], "python_advanced_python_1010_generators_yield": [29, 778, 1024, 1079, 1080, 1081, 1082, 1095, 1106, 1121, 1133], "python_exercises_legacy_function_prim": [29, 219, 778, 1082, 1092, 1095, 1096, 1102, 1103, 1104, 1105, 1106, 1107, 1121], "python_exercises_legacy_cmdline_digit": [29, 219, 357, 778, 1082, 1090, 1092, 1095, 1096, 1098, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1121], "digit": [29, 155, 181, 182, 201, 208, 213, 219, 229, 232, 241, 245, 250, 251, 253, 254, 256, 258, 259, 274, 281, 294, 295, 296, 300, 301, 313, 322, 323, 324, 328, 329, 334, 335, 338, 339, 340, 342, 362, 388, 397, 778, 1082, 1092, 1095, 1096, 1098, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1121], "python_exercises_legacy_dict_keyerror": [29, 778, 1082, 1091, 1095, 1121], "python_exercises_legacy_python_1011_generators_yield": [29, 778, 1082, 1095, 1121], "fibonacci": [29, 182, 185, 201, 222, 235, 274, 288, 290, 291, 295, 301, 312, 313, 316, 689, 711, 778, 1027, 1028, 1029, 1082, 1095, 1121], "python_exercises_legacy_mixed_list_execut": [29, 219, 778, 1082, 1092, 1095, 1096, 1097, 1098, 1099, 1102, 1103, 1104, 1105, 1106, 1107, 1121], "execut": [29, 44, 64, 109, 111, 112, 124, 155, 158, 162, 164, 172, 173, 177, 182, 189, 194, 201, 208, 214, 219, 229, 231, 232, 235, 237, 245, 247, 250, 274, 281, 294, 295, 300, 301, 304, 305, 320, 321, 322, 323, 328, 329, 334, 335, 338, 339, 342, 343, 350, 357, 379, 380, 414, 416, 420, 442, 447, 451, 460, 468, 471, 472, 484, 503, 506, 513, 520, 525, 539, 568, 592, 607, 710, 776, 778, 823, 825, 851, 852, 853, 860, 862, 867, 872, 873, 881, 885, 932, 941, 970, 983, 997, 999, 1000, 1001, 1002, 1005, 1009, 1011, 1015, 1017, 1023, 1027, 1031, 1034, 1047, 1057, 1058, 1061, 1080, 1082, 1092, 1095, 1096, 1097, 1098, 1102, 1103, 1104, 1105, 1106, 1107, 1121, 1132, 1135, 1164, 1166, 1178, 1189, 1190], "python_exercises_csv_csv_db": [29, 778, 1079, 1081, 1082, 1121], "sqlite3": [29, 86, 198, 229, 235, 241, 248, 778, 1081, 1082, 1121, 1132, 1133, 1137], "python_db_sqlite3": [29, 778, 1079, 1081, 1082, 1121, 1133], "dbapi": [29, 198, 229, 241, 778, 1079, 1081, 1082, 1121, 1133], "python_exercises_csv_csv_modul": [29, 778, 1080, 1081, 1082, 1121], "python_advanced_decor": [29, 778, 1024, 1121], "decor": [29, 59, 60, 63, 182, 194, 197, 198, 213, 222, 238, 248, 262, 317, 481, 488, 502, 516, 530, 582, 778, 1020, 1024, 1035, 1042, 1043, 1045, 1066, 1121, 1123, 1156, 1179], "python_advanced_closur": [29, 778, 1024, 1121], "closur": [29, 59, 63, 64, 181, 194, 198, 206, 207, 222, 235, 238, 248, 281, 284, 313, 317, 726, 778, 1021, 1024, 1064, 1066, 1121, 1186], "python_advanced_stararg": [29, 778, 1024, 1121], "keyword": [29, 39, 64, 146, 157, 195, 198, 199, 200, 201, 203, 222, 224, 238, 243, 248, 250, 271, 274, 275, 281, 284, 288, 290, 291, 294, 296, 300, 306, 309, 312, 313, 316, 317, 357, 424, 454, 597, 598, 600, 618, 669, 729, 778, 974, 1020, 1021, 1022, 1024, 1048, 1064, 1066, 1078, 1121, 1134, 1173, 1175], "python_advanced_except": [29, 778, 1024, 1121], "python_advanced_context_mgr": [29, 778, 1024, 1121], "python_advanced_iteration_gener": [29, 778, 1024, 1121], "comprehens": [29, 64, 69, 182, 183, 195, 198, 201, 207, 221, 222, 223, 230, 235, 236, 238, 239, 240, 243, 246, 252, 255, 271, 274, 276, 283, 288, 294, 295, 300, 301, 312, 313, 315, 316, 317, 322, 323, 325, 328, 329, 331, 334, 335, 337, 338, 339, 727, 778, 796, 813, 821, 1024, 1029, 1121, 1142], "python_advanced_oo_classes_and_dict": [29, 778, 1024, 1031, 1032, 1033, 1034, 1038, 1082, 1109, 1110, 1111, 1116, 1118, 1121, 1150], "python_advanced_comprehens": [29, 778, 1024, 1121], "python_advanced_exec": [29, 778, 1024, 1121], "python_basics_python_0200_sequential_typ": [29, 91, 219, 343, 344, 345, 346, 347, 348, 357, 778, 1024, 1046, 1079, 1080, 1081, 1082, 1092, 1095, 1096, 1098, 1102, 1103, 1104, 1105, 1106, 1107, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1133, 1136, 1137, 1143], "sequenti": [29, 64, 91, 107, 109, 198, 199, 201, 203, 206, 207, 208, 211, 219, 224, 229, 232, 235, 240, 241, 243, 245, 253, 255, 256, 259, 263, 271, 274, 281, 284, 287, 289, 291, 292, 294, 295, 300, 301, 312, 313, 316, 317, 322, 323, 325, 327, 328, 329, 334, 335, 338, 339, 341, 343, 344, 345, 346, 347, 348, 357, 362, 455, 530, 543, 547, 582, 617, 627, 635, 646, 650, 679, 778, 929, 931, 961, 1024, 1029, 1046, 1079, 1080, 1081, 1082, 1092, 1095, 1096, 1098, 1102, 1103, 1104, 1105, 1106, 1107, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1133, 1136, 1137, 1143, 1186], "python_advanced_oo_str_repr": [29, 778, 1024, 1038, 1121], "str": [29, 181, 184, 195, 205, 210, 212, 213, 218, 221, 223, 231, 234, 237, 242, 244, 247, 250, 254, 257, 260, 263, 271, 272, 274, 275, 279, 280, 281, 282, 284, 286, 288, 290, 291, 292, 294, 295, 296, 300, 302, 306, 307, 309, 310, 312, 313, 314, 316, 317, 318, 322, 324, 328, 329, 330, 334, 335, 336, 338, 340, 342, 348, 351, 352, 353, 357, 430, 448, 466, 515, 520, 601, 602, 603, 604, 719, 731, 778, 1022, 1024, 1036, 1038, 1039, 1042, 1051, 1053, 1054, 1065, 1069, 1073, 1080, 1088, 1090, 1121, 1136, 1142, 1147, 1148], "repr": [29, 212, 231, 237, 247, 250, 254, 257, 260, 271, 274, 275, 281, 284, 288, 290, 291, 294, 295, 296, 300, 306, 307, 309, 312, 313, 316, 317, 322, 328, 334, 335, 338, 778, 1022, 1024, 1038, 1039, 1121], "python_advanced_oo_abc": [29, 778, 1024, 1038, 1121], "abstract": [29, 79, 85, 198, 238, 270, 287, 288, 289, 290, 291, 312, 313, 316, 317, 335, 361, 425, 464, 466, 481, 488, 492, 494, 496, 502, 504, 516, 530, 540, 582, 617, 656, 657, 734, 766, 778, 858, 862, 931, 946, 1024, 1038, 1121, 1179, 1181], "abc": [29, 32, 181, 195, 198, 200, 205, 210, 212, 218, 221, 223, 227, 231, 234, 237, 238, 242, 244, 247, 250, 254, 257, 260, 263, 271, 272, 275, 282, 288, 290, 291, 292, 296, 302, 306, 309, 312, 313, 314, 316, 317, 318, 324, 330, 335, 336, 340, 344, 352, 466, 540, 609, 630, 647, 649, 766, 778, 1024, 1038, 1054, 1121, 1145], "duck": [29, 32, 197, 198, 252, 271, 288, 290, 291, 295, 312, 313, 316, 317, 327, 335, 481, 540, 682, 684, 722, 730, 731, 736, 742, 763, 768, 775, 777, 778, 1024, 1031, 1038, 1121, 1123, 1128, 1176], "python_advanced_oo_constructor": [29, 778, 1024, 1031, 1032, 1033, 1034, 1038, 1121, 1150], "constructor": [29, 43, 53, 56, 71, 98, 111, 112, 119, 124, 129, 132, 135, 137, 141, 142, 189, 195, 201, 221, 222, 224, 235, 240, 248, 252, 271, 274, 276, 281, 284, 287, 288, 289, 290, 291, 292, 294, 295, 300, 306, 309, 312, 313, 316, 317, 322, 327, 328, 329, 334, 335, 338, 339, 359, 360, 361, 434, 488, 502, 528, 530, 533, 536, 540, 541, 560, 569, 575, 582, 583, 584, 590, 607, 638, 654, 655, 664, 667, 668, 669, 670, 672, 673, 674, 675, 676, 677, 678, 679, 682, 690, 691, 692, 694, 720, 722, 738, 741, 742, 743, 747, 752, 753, 754, 755, 756, 763, 775, 777, 778, 784, 786, 817, 970, 1024, 1031, 1032, 1033, 1034, 1036, 1038, 1039, 1040, 1054, 1121, 1150, 1156, 1168, 1176], "python_advanced_oo_properti": [29, 778, 1024, 1038, 1121], "properti": [29, 40, 182, 198, 222, 235, 252, 254, 271, 275, 288, 290, 291, 295, 305, 306, 309, 312, 313, 316, 317, 321, 329, 335, 339, 361, 470, 471, 472, 477, 480, 778, 1024, 1038, 1121, 1162, 1165], "python_advanced_oo_operator_overload": [29, 778, 1024, 1038, 1121], "overload": [29, 98, 142, 181, 189, 198, 224, 252, 287, 288, 289, 290, 291, 312, 316, 317, 319, 326, 335, 450, 530, 538, 547, 549, 582, 584, 605, 608, 609, 611, 617, 627, 633, 637, 638, 646, 649, 650, 664, 665, 667, 668, 670, 671, 672, 674, 675, 676, 677, 678, 679, 690, 691, 695, 722, 738, 747, 755, 775, 777, 778, 784, 1024, 1038, 1121, 1142, 1175], "python_advanced_multithreading_exam_quest": [29, 778, 1024, 1032, 1034, 1121], "exam": [29, 97, 98, 107, 223, 239, 268, 277, 298, 359, 371, 778, 855, 921, 962, 982, 1024, 1032, 1121], "python_advanced_multithreading_mutex": [29, 778, 1024, 1032, 1033, 1034, 1121], "race": [29, 73, 74, 75, 79, 88, 162, 180, 240, 266, 267, 269, 278, 289, 290, 291, 312, 313, 316, 326, 365, 366, 372, 441, 451, 560, 732, 748, 755, 777, 778, 802, 806, 827, 829, 834, 838, 840, 843, 846, 921, 951, 961, 962, 967, 975, 976, 982, 1024, 1032, 1034, 1121, 1181, 1191, 1192], "condit": [29, 73, 74, 75, 79, 88, 90, 141, 162, 173, 180, 221, 240, 260, 266, 267, 269, 278, 289, 290, 291, 312, 313, 316, 326, 365, 366, 372, 380, 382, 386, 409, 410, 412, 413, 415, 417, 419, 426, 432, 436, 439, 441, 443, 451, 452, 456, 461, 462, 469, 474, 475, 476, 560, 577, 666, 684, 722, 732, 742, 748, 755, 756, 775, 777, 778, 802, 806, 827, 829, 834, 838, 840, 842, 843, 846, 921, 951, 957, 961, 962, 967, 975, 976, 978, 982, 1024, 1032, 1034, 1057, 1058, 1073, 1121, 1127, 1142, 1181, 1191, 1192], "mutex": [29, 73, 74, 75, 77, 79, 88, 90, 180, 209, 240, 265, 266, 267, 269, 278, 289, 290, 291, 312, 313, 316, 326, 365, 366, 372, 560, 749, 751, 753, 754, 755, 777, 778, 802, 806, 823, 827, 828, 829, 834, 840, 843, 844, 846, 921, 962, 967, 972, 975, 976, 1024, 1032, 1034, 1121, 1176, 1181, 1192], "python_advanced_multithreading_bas": [29, 778, 1024, 1031, 1032, 1033, 1034, 1121], "python_misc_vscod": [29, 778, 1121, 1137], "visual": [29, 79, 105, 189, 194, 198, 199, 201, 203, 214, 223, 224, 229, 232, 245, 251, 259, 262, 274, 278, 281, 284, 288, 294, 295, 300, 301, 322, 323, 328, 329, 334, 338, 339, 357, 362, 377, 778, 864, 930, 1001, 1047, 1080, 1121, 1137], "studio": [29, 105, 189, 194, 198, 199, 201, 203, 214, 223, 224, 229, 232, 245, 251, 259, 274, 278, 281, 284, 288, 294, 295, 300, 301, 322, 323, 328, 329, 334, 338, 339, 357, 362, 377, 778, 864, 1047, 1121, 1137], "python_misc_mqtt": [29, 778, 1121, 1137, 1139], "python_misc_encod": [29, 91, 219, 343, 344, 345, 346, 347, 348, 357, 778, 1024, 1046, 1080, 1081, 1082, 1092, 1095, 1103, 1106, 1107, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1136, 1137], "encod": [29, 43, 91, 181, 198, 199, 201, 203, 219, 222, 229, 231, 234, 237, 238, 241, 247, 248, 250, 256, 258, 261, 275, 279, 280, 282, 295, 296, 303, 313, 314, 316, 317, 319, 324, 330, 336, 342, 343, 344, 345, 346, 347, 348, 362, 466, 778, 1024, 1046, 1054, 1059, 1073, 1080, 1081, 1082, 1092, 1095, 1103, 1106, 1107, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1131, 1137, 1139], "python_misc_ai_machine_learning_intro": [29, 778, 1121, 1124, 1125, 1129, 1130, 1137], "concept": [29, 79, 98, 99, 100, 124, 162, 172, 186, 194, 198, 200, 202, 204, 214, 265, 268, 277, 278, 281, 298, 312, 316, 359, 360, 375, 378, 425, 448, 488, 502, 530, 531, 532, 533, 534, 535, 536, 537, 540, 582, 624, 681, 722, 732, 755, 777, 778, 848, 852, 853, 854, 855, 858, 864, 866, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 905, 915, 921, 933, 934, 935, 936, 937, 944, 950, 952, 960, 962, 966, 976, 979, 982, 984, 1001, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1053, 1061, 1071, 1121, 1124, 1125, 1129, 1136, 1137, 1139, 1191], "terminologi": [29, 99, 100, 124, 168, 186, 198, 233, 268, 277, 278, 281, 298, 312, 316, 415, 488, 502, 530, 531, 532, 533, 534, 535, 536, 537, 540, 582, 597, 755, 777, 778, 848, 852, 853, 854, 855, 858, 866, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 905, 914, 915, 921, 933, 934, 935, 936, 937, 944, 950, 952, 960, 962, 976, 979, 982, 983, 984, 998, 1001, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1121, 1124, 1125, 1129, 1137, 1194], "python_misc_ai_linear_regress": [29, 778, 1121, 1124, 1125, 1129, 1137], "linear": [29, 183, 185, 195, 198, 200, 218, 226, 281, 312, 316, 433, 455, 607, 732, 778, 861, 930, 996, 1058, 1121, 1124, 1125, 1130, 1137], "regress": [29, 198, 250, 281, 312, 316, 778, 1121, 1124, 1125, 1130, 1137], "python_misc_ai_k_mean": [29, 778, 1121, 1124, 1125, 1137], "python_misc_pandas_bas": [29, 778, 1121, 1137, 1143], "datafram": [29, 280, 281, 282, 284, 288, 291, 313, 318, 334, 338, 466, 778, 1121, 1126, 1129, 1137, 1140, 1142, 1143, 1144, 1146, 1147], "python_misc_pandas_loc": [29, 778, 1121, 1137, 1143], "select": [29, 64, 161, 162, 164, 168, 221, 226, 234, 251, 281, 284, 313, 334, 338, 403, 425, 778, 825, 869, 926, 931, 965, 966, 985, 988, 990, 993, 1013, 1080, 1121, 1126, 1135, 1137, 1143, 1145, 1156, 1164, 1191, 1193], "row": [29, 163, 185, 201, 221, 234, 238, 240, 242, 254, 279, 280, 281, 284, 288, 301, 313, 314, 318, 324, 334, 336, 338, 413, 455, 778, 865, 970, 1022, 1041, 1061, 1080, 1112, 1114, 1121, 1128, 1131, 1135, 1137, 1141, 1142, 1143, 1147], "column": [29, 64, 114, 118, 121, 155, 164, 167, 182, 185, 231, 250, 279, 280, 281, 282, 284, 288, 313, 314, 318, 324, 334, 336, 338, 455, 466, 778, 865, 870, 881, 1080, 1092, 1104, 1121, 1128, 1131, 1137, 1143], "loc": [29, 182, 275, 279, 280, 281, 282, 284, 286, 288, 313, 334, 338, 441, 778, 970, 1033, 1121, 1137, 1140, 1141, 1142, 1143, 1144], "python_misc_pandas_iloc": [29, 778, 1121, 1137, 1143], "iloc": [29, 281, 282, 284, 286, 288, 313, 318, 334, 338, 466, 778, 1121, 1137, 1141, 1143, 1146], "python_misc_pandas_index": [29, 778, 1121, 1137, 1143], "python_misc_pandas_filt": [29, 778, 1121, 1137, 1143], "python_misc_pandas_add_row": [29, 778, 1121, 1137, 1143], "ad": [29, 32, 33, 39, 86, 125, 129, 142, 168, 172, 173, 174, 177, 182, 202, 214, 224, 280, 281, 284, 288, 313, 334, 338, 354, 405, 424, 446, 473, 483, 487, 492, 601, 603, 604, 639, 693, 729, 768, 769, 778, 794, 929, 931, 981, 985, 986, 1021, 1039, 1054, 1073, 1121, 1137, 1143, 1144, 1148, 1157], "python_misc_pandas_mod_col": [29, 778, 1121, 1137, 1143], "modifi": [29, 42, 76, 89, 111, 112, 125, 129, 140, 142, 164, 169, 177, 180, 182, 202, 221, 278, 280, 281, 284, 288, 289, 290, 291, 312, 313, 334, 338, 368, 383, 385, 391, 428, 440, 447, 464, 466, 468, 477, 487, 489, 492, 508, 509, 529, 538, 541, 542, 544, 545, 546, 558, 571, 574, 584, 591, 594, 595, 597, 600, 612, 664, 668, 670, 673, 676, 690, 704, 727, 732, 744, 755, 757, 772, 773, 776, 777, 778, 798, 813, 833, 852, 853, 865, 870, 921, 934, 938, 943, 962, 970, 976, 1014, 1015, 1021, 1023, 1034, 1055, 1098, 1102, 1120, 1121, 1137, 1143, 1145, 1188, 1192], "python_basics_python_0130_syntax_etc": [29, 91, 219, 343, 344, 345, 346, 347, 348, 357, 778, 1024, 1031, 1032, 1033, 1034, 1038, 1046, 1057, 1066, 1076, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1133, 1136, 1137, 1143, 1150], "syntax": [29, 69, 91, 155, 185, 194, 201, 202, 204, 206, 207, 208, 213, 219, 220, 225, 229, 232, 235, 241, 245, 247, 251, 252, 253, 256, 259, 261, 272, 274, 281, 283, 284, 294, 295, 297, 300, 301, 322, 323, 325, 326, 328, 329, 334, 335, 337, 338, 339, 343, 344, 345, 346, 347, 348, 357, 504, 583, 584, 687, 704, 731, 744, 778, 913, 1019, 1021, 1022, 1023, 1024, 1031, 1032, 1033, 1034, 1038, 1046, 1048, 1057, 1065, 1066, 1068, 1076, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1133, 1136, 1137, 1143, 1150, 1176, 1186], "python_basics_python_0460_set": [29, 91, 778, 1046, 1121], "python_basics_python_0125_run": [29, 91, 219, 357, 778, 1046, 1076, 1079, 1080, 1081, 1082, 1084, 1085, 1086, 1087, 1089, 1090, 1092, 1095, 1096, 1097, 1098, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121], "run": [29, 42, 59, 63, 64, 91, 98, 109, 111, 112, 137, 152, 155, 158, 161, 162, 163, 164, 165, 168, 169, 172, 173, 181, 193, 194, 201, 202, 214, 219, 223, 224, 229, 234, 242, 250, 251, 254, 257, 260, 262, 267, 274, 275, 278, 281, 282, 284, 292, 294, 295, 296, 300, 301, 305, 314, 318, 321, 322, 323, 324, 328, 329, 330, 334, 335, 336, 338, 339, 342, 357, 360, 382, 400, 442, 445, 453, 454, 458, 459, 471, 472, 484, 489, 508, 509, 510, 538, 540, 541, 542, 564, 591, 604, 613, 625, 682, 740, 741, 776, 778, 798, 813, 823, 825, 826, 835, 858, 860, 862, 863, 864, 865, 881, 882, 885, 886, 916, 929, 930, 931, 932, 940, 942, 950, 952, 968, 981, 983, 984, 985, 987, 992, 997, 999, 1002, 1007, 1009, 1011, 1015, 1020, 1031, 1034, 1046, 1047, 1049, 1076, 1079, 1080, 1081, 1082, 1084, 1085, 1086, 1087, 1089, 1090, 1092, 1095, 1096, 1097, 1098, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1125, 1139, 1151, 1157, 1162, 1163, 1168, 1181], "python_basics_instal": [29, 91, 778, 1046, 1121], "python_basics_python_0110_blahblah": [29, 91, 219, 343, 344, 345, 346, 347, 348, 357, 778, 1024, 1031, 1032, 1033, 1034, 1038, 1046, 1057, 1066, 1076, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1133, 1136, 1137, 1143, 1150], "blahblah": [29, 91, 201, 206, 208, 219, 225, 229, 232, 235, 241, 245, 251, 252, 253, 255, 256, 258, 259, 261, 274, 281, 284, 294, 295, 300, 301, 322, 323, 325, 328, 329, 330, 334, 335, 338, 339, 343, 344, 345, 346, 347, 348, 357, 778, 1024, 1031, 1032, 1033, 1034, 1038, 1046, 1057, 1066, 1076, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1133, 1136, 1137, 1143, 1150, 1186], "python_basics_python_0250_refs_flat_deep_copi": [29, 91, 219, 343, 344, 345, 346, 347, 348, 357, 778, 1024, 1046, 1080, 1081, 1082, 1092, 1095, 1103, 1104, 1106, 1107, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1136, 1137], "mutabl": [29, 91, 194, 198, 199, 201, 203, 206, 207, 213, 219, 220, 229, 232, 233, 235, 236, 237, 238, 243, 245, 246, 249, 252, 256, 258, 259, 261, 264, 274, 276, 281, 283, 284, 288, 290, 291, 293, 294, 295, 297, 300, 301, 303, 312, 313, 315, 316, 317, 319, 322, 325, 328, 329, 334, 335, 337, 338, 339, 341, 343, 344, 345, 346, 347, 348, 357, 732, 778, 1024, 1046, 1055, 1059, 1080, 1081, 1082, 1092, 1095, 1103, 1104, 1106, 1107, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1136, 1137, 1186], "python_basics_python_0400_list": [29, 91, 778, 1046, 1121], "python_basics_python_1000_function_object": [29, 91, 778, 1046, 1121], "python_db_dbapi2": [29, 778, 1079, 1081, 1082, 1121, 1133], "python_db_postgr": [29, 778, 1121, 1133], "postgresql": [29, 778, 1121, 1132, 1133], "python_drafts_matplotlib": [29, 778, 1076, 1121], "matplotlib": [29, 194, 213, 232, 233, 245, 259, 260, 262, 264, 295, 314, 319, 323, 325, 336, 366, 778, 1019, 1076, 1121, 1123, 1129], "python_drafts_setuptool": [29, 778, 1076, 1121], "setuptool": [29, 62, 158, 271, 306, 316, 778, 1076, 1121, 1158], "python_drafts_argpars": [29, 778, 1076, 1121], "argpars": [29, 238, 259, 290, 312, 316, 343, 778, 1076, 1121], "As": [30, 46, 69, 81, 124, 159, 162, 164, 169, 173, 179, 191, 194, 198, 229, 242, 304, 320, 360, 377, 415, 446, 449, 525, 527, 541, 592, 597, 599, 600, 677, 760, 798, 825, 851, 860, 929, 930, 938, 940, 957, 985, 993, 1015, 1021, 1042, 1047, 1051, 1108, 1112, 1125, 1166, 1178], "follow": [30, 39, 43, 79, 107, 108, 110, 114, 117, 118, 119, 120, 121, 127, 130, 152, 161, 162, 164, 165, 166, 167, 169, 177, 182, 186, 190, 191, 194, 198, 202, 203, 214, 231, 237, 247, 248, 250, 254, 263, 267, 269, 286, 287, 289, 295, 296, 354, 376, 378, 381, 398, 399, 412, 415, 442, 444, 446, 448, 453, 454, 457, 465, 467, 472, 482, 483, 486, 487, 503, 504, 506, 507, 508, 509, 510, 528, 531, 532, 535, 536, 538, 539, 540, 541, 542, 554, 560, 586, 601, 602, 603, 604, 657, 664, 666, 671, 673, 674, 677, 678, 681, 699, 732, 772, 773, 776, 786, 788, 794, 825, 851, 852, 853, 858, 860, 862, 864, 876, 878, 879, 885, 889, 897, 898, 922, 929, 930, 931, 952, 955, 956, 957, 958, 967, 984, 993, 997, 999, 1005, 1007, 1009, 1011, 1013, 1014, 1015, 1018, 1022, 1023, 1027, 1034, 1053, 1067, 1075, 1080, 1083, 1088, 1092, 1094, 1098, 1101, 1102, 1105, 1111, 1112, 1113, 1114, 1115, 1117, 1118, 1119, 1120, 1145, 1149, 1158, 1179], "version": [30, 62, 115, 161, 165, 167, 168, 169, 172, 175, 177, 190, 191, 192, 194, 201, 210, 212, 221, 222, 231, 235, 237, 241, 247, 250, 257, 262, 265, 274, 280, 286, 287, 288, 289, 296, 329, 350, 365, 425, 464, 465, 467, 468, 470, 477, 480, 577, 674, 676, 677, 724, 728, 740, 763, 773, 798, 800, 817, 825, 826, 841, 885, 929, 930, 1000, 1001, 1011, 1013, 1014, 1016, 1047, 1048, 1054, 1078, 1151, 1158, 1159, 1165, 1171], "control": [30, 45, 59, 60, 63, 64, 87, 125, 127, 133, 134, 141, 142, 161, 168, 175, 177, 180, 191, 194, 199, 201, 202, 203, 204, 213, 214, 229, 232, 245, 250, 256, 270, 327, 358, 359, 360, 362, 365, 403, 417, 418, 464, 467, 481, 488, 531, 532, 535, 541, 583, 778, 798, 823, 825, 830, 885, 921, 923, 924, 928, 929, 931, 947, 996, 1001, 1020, 1023, 1031, 1043, 1056, 1058, 1142, 1157, 1159, 1177, 1187, 1193], "done": [30, 42, 46, 47, 50, 53, 55, 56, 57, 64, 76, 85, 88, 92, 103, 111, 112, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 141, 142, 149, 154, 158, 159, 161, 163, 164, 166, 167, 168, 169, 172, 177, 182, 183, 186, 190, 194, 201, 223, 238, 242, 248, 250, 266, 267, 269, 281, 284, 291, 296, 314, 343, 349, 360, 366, 381, 382, 430, 437, 438, 440, 442, 453, 464, 466, 467, 468, 472, 506, 525, 539, 542, 584, 596, 597, 625, 639, 647, 652, 676, 677, 679, 682, 689, 710, 713, 717, 718, 728, 734, 742, 746, 754, 756, 778, 784, 794, 796, 815, 817, 825, 827, 852, 853, 857, 858, 860, 861, 869, 881, 904, 922, 923, 925, 930, 931, 947, 948, 949, 959, 973, 981, 987, 996, 1000, 1001, 1009, 1013, 1015, 1022, 1025, 1026, 1027, 1045, 1054, 1065, 1073, 1074, 1075, 1078, 1081, 1102, 1135, 1156, 1181], "No": [30, 43, 64, 81, 114, 117, 152, 158, 162, 164, 168, 169, 177, 204, 221, 237, 238, 254, 280, 368, 388, 390, 404, 420, 424, 431, 442, 447, 459, 464, 468, 469, 472, 474, 477, 478, 479, 480, 492, 538, 577, 587, 588, 600, 607, 617, 632, 635, 653, 671, 681, 683, 686, 690, 693, 697, 741, 742, 749, 756, 803, 805, 807, 809, 823, 825, 830, 842, 861, 867, 869, 872, 873, 888, 896, 904, 907, 923, 925, 931, 945, 952, 957, 958, 967, 968, 970, 972, 981, 985, 993, 996, 1002, 1016, 1018, 1035, 1042, 1048, 1051, 1054, 1055, 1063, 1067, 1071, 1073, 1130, 1131, 1135, 1136, 1145, 1148, 1156, 1158, 1164], "proprietari": 30, "accept": [30, 32, 61, 141, 164, 190, 286, 464, 466, 732, 742, 744, 793, 925, 951, 1021, 1045, 1191, 1193], "proven": [30, 453, 457, 601, 603, 604, 693], "difficult": [30, 69, 221, 409, 427, 577, 811, 823, 985], "ffmpeg": 31, "video4linux2": 31, "640x480": [31, 1019], "dev": [31, 64, 101, 132, 162, 163, 173, 179, 180, 190, 191, 234, 240, 250, 257, 260, 275, 278, 282, 287, 289, 292, 296, 318, 324, 330, 363, 453, 472, 536, 778, 780, 781, 783, 789, 796, 805, 819, 821, 825, 838, 855, 856, 865, 867, 868, 885, 899, 902, 905, 907, 921, 924, 929, 930, 931, 954, 961, 981, 984, 987, 989, 992, 993, 1013, 1163, 1165, 1181], "video0": 31, "500k": 31, "matroska": 31, "mk": [31, 32], "disabl": [31, 162, 165, 167, 173, 231, 237, 247, 250, 425, 817, 823, 828, 830, 985, 1151, 1171], "audio": [31, 145, 150, 164, 169, 778, 1180], "appar": [31, 57, 62, 64, 66, 67, 164, 166, 167, 169, 173, 223, 234, 286, 469, 483, 654, 699, 710, 742, 793, 929, 987, 1136], "next": [31, 39, 42, 64, 99, 124, 158, 163, 164, 169, 177, 182, 184, 195, 200, 202, 210, 214, 221, 227, 231, 234, 235, 237, 240, 242, 244, 247, 250, 254, 260, 266, 267, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 342, 349, 363, 397, 415, 417, 438, 466, 504, 508, 522, 532, 541, 577, 614, 690, 703, 710, 712, 734, 815, 825, 844, 869, 885, 917, 929, 931, 951, 961, 981, 1000, 1026, 1027, 1030, 1058, 1061, 1128, 1164], "mention": [31, 142, 162, 163, 190, 194, 198, 224, 248, 290, 291, 312, 313, 317, 527, 541, 725, 837, 930, 1018, 1123, 1139], "frame": [31, 156, 167, 179, 201, 231, 237, 247, 250, 280, 286, 318, 437, 450, 454, 504, 695, 923, 924, 1141], "size": [31, 101, 110, 129, 161, 163, 164, 181, 183, 189, 231, 232, 237, 240, 245, 247, 250, 254, 259, 262, 278, 295, 296, 301, 357, 388, 405, 410, 419, 426, 430, 432, 436, 437, 439, 442, 443, 445, 450, 451, 452, 454, 456, 461, 462, 484, 485, 491, 530, 542, 543, 547, 548, 549, 550, 551, 555, 556, 559, 565, 577, 582, 584, 588, 592, 597, 601, 603, 604, 617, 618, 619, 620, 625, 630, 631, 635, 639, 641, 642, 647, 649, 676, 678, 684, 687, 688, 693, 704, 705, 706, 708, 722, 732, 741, 745, 746, 754, 762, 775, 776, 777, 778, 784, 796, 811, 821, 841, 850, 855, 856, 862, 869, 899, 902, 905, 907, 913, 917, 921, 925, 930, 951, 953, 992, 993, 999, 1016, 1019, 1123, 1136], "input": [31, 40, 60, 69, 87, 132, 182, 183, 184, 185, 195, 198, 201, 203, 225, 231, 237, 240, 247, 250, 253, 254, 275, 278, 357, 362, 386, 387, 393, 417, 425, 448, 453, 465, 543, 544, 545, 546, 558, 597, 647, 666, 689, 776, 796, 851, 869, 900, 918, 922, 932, 948, 951, 963, 965, 966, 973, 1029, 1044, 1073, 1085, 1089, 1090, 1102, 1105, 1108, 1114, 1117, 1125, 1126, 1129, 1130, 1187], "rate": [31, 172, 194, 254, 313, 446, 844, 983], "hz": [31, 835], "bitrat": [31, 924], "If": [31, 43, 45, 47, 53, 55, 56, 57, 90, 122, 124, 142, 161, 162, 163, 164, 167, 168, 169, 177, 178, 186, 194, 231, 237, 244, 247, 250, 254, 262, 267, 269, 278, 284, 296, 313, 357, 362, 403, 412, 442, 454, 474, 476, 482, 532, 538, 539, 554, 584, 589, 653, 660, 676, 677, 690, 695, 741, 745, 746, 754, 756, 778, 798, 803, 817, 825, 830, 842, 851, 860, 864, 867, 885, 886, 894, 897, 921, 922, 929, 930, 931, 932, 938, 952, 960, 962, 970, 975, 979, 992, 1014, 1015, 1027, 1035, 1037, 1047, 1054, 1062, 1064, 1075, 1100, 1128, 1131, 1145, 1157, 1176], "instead": [31, 58, 64, 129, 136, 142, 155, 161, 162, 163, 164, 182, 183, 191, 223, 240, 242, 250, 280, 296, 342, 363, 368, 405, 454, 482, 525, 528, 542, 604, 620, 676, 678, 695, 699, 741, 742, 756, 763, 793, 794, 803, 856, 885, 907, 930, 972, 992, 999, 1001, 1011, 1017, 1048, 1094, 1106, 1118, 1142, 1163], "stdout": [31, 142, 181, 214, 218, 222, 231, 237, 247, 250, 260, 268, 275, 277, 278, 298, 299, 313, 342, 350, 352, 357, 361, 363, 653, 778, 849, 851, 855, 866, 867, 910, 913, 916, 921, 951, 996, 1023, 1073, 1075, 1080, 1085, 1089, 1092, 1107, 1139, 1148, 1182], "hold": [31, 129, 161, 163, 182, 198, 200, 201, 221, 248, 380, 392, 412, 484, 614, 669, 676, 727, 732, 746, 754, 758, 763, 789, 823, 827, 828, 922, 929, 985, 1023, 1036, 1058, 1106, 1128], "mplayer": [31, 292, 330], "stdin": [31, 42, 214, 222, 231, 237, 240, 247, 250, 350, 357, 389, 395, 410, 419, 426, 432, 436, 439, 443, 452, 456, 461, 462, 684, 722, 775, 777, 778, 851, 867, 868, 900, 951, 1071, 1073, 1074, 1085, 1136, 1148, 1182], "unicod": [32, 34, 35, 36, 38, 222, 231, 235, 237, 247, 250, 272, 296, 330, 392, 1053, 1059, 1073, 1136], "sphinxemojicod": 32, "pip": [32, 62, 146, 158, 194, 198, 219, 248, 262, 951, 1047, 1077, 1078, 1110, 1123, 1139, 1150, 1151, 1152, 1156, 1158, 1159], "conf": [32, 66, 163, 165, 167, 330, 477, 825, 931, 1023], "grimac": 32, "astonish": 32, "rolling_ey": 32, "face_with_raised_eyebrow": 32, "flush": [32, 275, 541, 784, 796], "innoc": [32, 168, 447, 748, 864, 998, 1042], "kiss": 32, "kissing_heart": 32, "middle_fing": 32, "metal": [32, 79, 81, 88, 90, 162, 375, 922, 930, 931], "muscl": 32, "nerd": [32, 885], "ok_hand": 32, "penguin": 32, "pig": [32, 442], "point_up": 32, "sleep": [32, 64, 114, 120, 162, 237, 266, 267, 290, 291, 312, 343, 415, 424, 754, 778, 802, 805, 807, 817, 827, 830, 834, 840, 842, 843, 846, 921, 922, 930, 959, 963, 966, 981, 983, 984, 987, 992, 1031], "sunglass": 32, "think": [32, 42, 43, 70, 162, 163, 177, 200, 224, 326, 425, 446, 447, 450, 536, 540, 587, 607, 682, 690, 692, 741, 852, 853, 856, 946, 992, 1054], "thumbsdown": 32, "thumbsup": 32, "wink": 32, "1_tone1": 32, "1_tone2": 32, "1_tone3": 32, "1_tone4": 32, "1_tone5": 32, "1st_place_med": 32, "2nd_place_med": 32, "3rd_place_med": 32, "8ball": 32, "abacu": 32, "abcd": [32, 212, 218, 234, 254, 296], "ac": [32, 172, 210], "accordion": 32, "adhesive_bandag": 32, "admission_ticket": 32, "adult": [32, 1043], "adult_dark_skin_ton": 32, "adult_light_skin_ton": 32, "adult_medium_dark_skin_ton": 32, "adult_medium_light_skin_ton": 32, "adult_medium_skin_ton": 32, "adult_tone1": 32, "adult_tone2": 32, "adult_tone3": 32, "adult_tone4": 32, "adult_tone5": 32, "ae": [32, 172], "aerial_tramwai": 32, "af": [32, 172], "afghanistan": 32, "ai": [32, 198, 1130, 1137], "airplan": [32, 922], "airplane_arriv": 32, "airplane_departur": 32, "airplane_smal": 32, "aland_island": 32, "alarm_clock": 32, "albania": 32, "alemb": 32, "algeria": 32, "alien": 32, "ambul": 32, "american_samoa": 32, "amphora": 32, "anatomical_heart": 32, "anchor": 32, "andorra": 32, "angel": [32, 286], "angel_tone1": 32, "angel_tone2": 32, "angel_tone3": 32, "angel_tone4": 32, "angel_tone5": 32, "anger": 32, "anger_right": 32, "angola": 32, "angri": 32, "anguilla": 32, "anguish": 32, "ant": 32, "antarctica": 32, "antigua_barbuda": 32, "ao": 32, "appl": [32, 999, 1065], "aq": 32, "aquariu": 32, "archeri": 32, "argentina": 32, "ari": [32, 35, 38], "armenia": 32, "arrow_backward": 32, "arrow_double_down": 32, "arrow_double_up": 32, "arrow_down": 32, "arrow_down_smal": 32, "arrow_forward": 32, "arrow_heading_down": 32, "arrow_heading_up": 32, "arrow_left": 32, "arrow_lower_left": 32, "arrow_lower_right": 32, "arrow_right": 32, "arrow_right_hook": 32, "arrow_up": 32, "arrow_up_down": 32, "arrow_up_smal": 32, "arrow_upper_left": 32, "arrow_upper_right": 32, "arrows_clockwis": 32, "arrows_counterclockwis": 32, "articulated_lorri": 32, "artificial_satellit": 32, "artist": 32, "artist_dark_skin_ton": 32, "artist_light_skin_ton": 32, "artist_medium_dark_skin_ton": 32, "artist_medium_light_skin_ton": 32, "artist_medium_skin_ton": 32, "artist_tone1": 32, "artist_tone2": 32, "artist_tone3": 32, "artist_tone4": 32, "artist_tone5": 32, "aruba": 32, "ascens": 32, "astronaut": 32, "astronaut_dark_skin_ton": 32, "astronaut_light_skin_ton": 32, "astronaut_medium_dark_skin_ton": 32, "astronaut_medium_light_skin_ton": 32, "astronaut_medium_skin_ton": 32, "astronaut_tone1": 32, "astronaut_tone2": 32, "astronaut_tone3": 32, "astronaut_tone4": 32, "astronaut_tone5": 32, "athletic_sho": 32, "atm": 32, "atom": [32, 66, 77, 89, 185, 240, 265, 266, 267, 269, 278, 289, 326, 327, 560, 692, 741, 754, 755, 777, 778, 787, 792, 795, 797, 802, 805, 806, 808, 811, 812, 816, 817, 818, 820, 822, 827, 830, 831, 834, 835, 836, 840, 843, 845, 846, 921, 961, 971, 972, 1034, 1176], "atom_symbol": 32, "australia": 32, "austria": [32, 162, 375], "auto_rickshaw": 32, "avocado": 32, "aw": 32, "ax": [32, 183, 1019], "az": 32, "azerbaijan": 32, "ba": [32, 172], "babi": 32, "baby_bottl": 32, "baby_chick": 32, "baby_symbol": 32, "baby_tone1": 32, "baby_tone2": 32, "baby_tone3": 32, "baby_tone4": 32, "baby_tone5": 32, "back_of_hand": 32, "back_of_hand_tone1": 32, "back_of_hand_tone2": 32, "back_of_hand_tone3": 32, "back_of_hand_tone4": 32, "back_of_hand_tone5": 32, "bacon": 32, "badger": 32, "badminton": 32, "bagel": 32, "baggage_claim": 32, "baguette_bread": 32, "bahama": 32, "bahrain": 32, "balance_scal": 32, "bald": 32, "ballet_sho": 32, "balloon": 32, "ballot_box": 32, "ballot_box_with_ballot": 32, "ballot_box_with_check": 32, "bamboo": 32, "banana": 32, "bangbang": 32, "bangladesh": 32, "banjo": 32, "bank": [32, 466], "bar_chart": 32, "barbado": 32, "barber": 32, "basebal": 32, "basket": 32, "basketbal": 32, "basketball_man": 32, "basketball_play": 32, "basketball_player_tone1": 32, "basketball_player_tone2": 32, "basketball_player_tone3": 32, "basketball_player_tone4": 32, "basketball_player_tone5": 32, "basketball_woman": 32, "bat": [32, 1158], "bath": 32, "bath_tone1": 32, "bath_tone2": 32, "bath_tone3": 32, "bath_tone4": 32, "bath_tone5": 32, "bathtub": 32, "batteri": [32, 90, 194, 357, 922, 1046, 1047, 1048, 1074, 1152], "bb": [32, 154, 165, 929], "bd": [32, 172], "beach": 32, "beach_umbrella": 32, "beach_with_umbrella": 32, "bear": [32, 970, 1146], "bearded_person": 32, "bearded_person_dark_skin_ton": 32, "bearded_person_light_skin_ton": 32, "bearded_person_medium_dark_skin_ton": 32, "bearded_person_medium_light_skin_ton": 32, "bearded_person_medium_skin_ton": 32, "bearded_person_tone1": 32, "bearded_person_tone2": 32, "bearded_person_tone3": 32, "bearded_person_tone4": 32, "bearded_person_tone5": 32, "beaver": 32, "bed": 32, "bee": 32, "beer": [32, 444], "beetl": 32, "belaru": 32, "belgium": 32, "beliz": 32, "bell": [32, 1042, 1045], "bell_pepp": 32, "bellhop": 32, "bellhop_bel": 32, "benin": 32, "bento": 32, "bermuda": 32, "beverage_box": 32, "bf": [32, 172], "bg": [32, 466], "bh": 32, "bhutan": 32, "bicyclist": 32, "bicyclist_tone1": 32, "bicyclist_tone2": 32, "bicyclist_tone3": 32, "bicyclist_tone4": 32, "bicyclist_tone5": 32, "bike": 32, "biking_man": 32, "biking_woman": 32, "bikini": 32, "billed_cap": 32, "biohazard": 32, "biohazard_sign": 32, "bird": 32, "birthdai": [32, 203, 672], "bison": [32, 173, 805, 929, 1013], "bj": 32, "bl": 32, "black_cat": 32, "black_circl": 32, "black_flag": 32, "black_heart": 32, "black_jok": 32, "black_large_squar": 32, "black_medium_small_squar": 32, "black_medium_squar": 32, "black_nib": 32, "black_small_squar": 32, "black_square_button": 32, "blond": 32, "haired_man": 32, "haired_man_dark_skin_ton": 32, "haired_man_light_skin_ton": 32, "haired_man_medium_dark_skin_ton": 32, "haired_man_medium_light_skin_ton": 32, "haired_man_medium_skin_ton": 32, "haired_man_tone1": 32, "haired_man_tone2": 32, "haired_man_tone3": 32, "haired_man_tone4": 32, "haired_man_tone5": 32, "haired_woman": 32, "haired_woman_dark_skin_ton": 32, "haired_woman_light_skin_ton": 32, "haired_woman_medium_dark_skin_ton": 32, "haired_woman_medium_light_skin_ton": 32, "haired_woman_medium_skin_ton": 32, "haired_woman_tone1": 32, "haired_woman_tone2": 32, "haired_woman_tone3": 32, "haired_woman_tone4": 32, "haired_woman_tone5": 32, "blond_haired_person": 32, "blond_haired_person_tone1": 32, "blond_haired_person_tone2": 32, "blond_haired_person_tone3": 32, "blond_haired_person_tone4": 32, "blond_haired_person_tone5": 32, "blonde_man": 32, "blonde_woman": 32, "blossom": 32, "blowfish": 32, "blue_book": 32, "blue_car": 32, "blue_circl": 32, "blue_heart": 32, "blue_squar": 32, "blueberri": 32, "blush": 32, "bm": 32, "bn": 32, "bo": [32, 1036], "boar": 32, "boat": 32, "bolivia": 32, "bomb": 32, "bone": 32, "bookmark": [32, 1135], "bookmark_tab": 32, "boom": [32, 710, 727], "boomerang": 32, "boot": [32, 152, 163, 165, 169, 181, 282, 460, 757, 798, 803, 821, 825, 835, 863, 929, 930, 931, 1171], "bosnia_herzegovina": 32, "botswana": 32, "bottle_with_popping_cork": 32, "bouquet": 32, "bouvet_island": 32, "bow": 32, "bow_and_arrow": 32, "bow_tone1": 32, "bow_tone2": 32, "bow_tone3": 32, "bow_tone4": 32, "bow_tone5": 32, "bowing_man": 32, "bowing_woman": 32, "bowl_with_spoon": 32, "bowl": 32, "boxing_glov": 32, "boi": 32, "boy_tone1": 32, "boy_tone2": 32, "boy_tone3": 32, "boy_tone4": 32, "boy_tone5": 32, "bq": 32, "br": [32, 260, 318], "brain": [32, 59, 63], "brazil": 32, "bread": 32, "breast_feed": 32, "breast_feeding_dark_skin_ton": 32, "breast_feeding_light_skin_ton": 32, "breast_feeding_medium_dark_skin_ton": 32, "breast_feeding_medium_light_skin_ton": 32, "breast_feeding_medium_skin_ton": 32, "breast_feeding_tone1": 32, "breast_feeding_tone2": 32, "breast_feeding_tone3": 32, "breast_feeding_tone4": 32, "breast_feeding_tone5": 32, "brick": [32, 161, 174], "bride_with_veil": 32, "bride_with_veil_tone1": 32, "bride_with_veil_tone2": 32, "bride_with_veil_tone3": 32, "bride_with_veil_tone4": 32, "bride_with_veil_tone5": 32, "bridge_at_night": 32, "briefcas": 32, "brief": [32, 458, 885], "british_indian_ocean_territori": 32, "british_virgin_island": 32, "broccoli": 32, "broken_heart": 32, "broom": 32, "brown_circl": 32, "brown_heart": 32, "brown_squar": 32, "brunei": 32, "bt": 32, "bubble_tea": 32, "bucket": [32, 796], "bug": [32, 46, 55, 56, 108, 163, 164, 165, 205, 224, 240, 251, 366, 422, 424, 425, 440, 445, 447, 451, 464, 469, 474, 565, 567, 569, 577, 583, 584, 587, 592, 654, 657, 710, 720, 739, 756, 778, 815, 943, 974, 983, 984, 1016, 1036, 1037, 1051, 1054], "building_construct": 32, "bulb": 32, "bulgaria": 32, "bullettrain_front": 32, "bullettrain_sid": 32, "burkina_faso": 32, "burrito": 32, "burundi": 32, "bu": [32, 82, 125, 209, 234, 250, 257, 259, 260, 275, 278, 282, 292, 296, 318, 324, 330, 336, 482, 496, 511, 525, 541, 542, 778, 796, 821, 885, 921, 923, 928, 929, 930, 959, 965, 1021, 1122, 1180, 1187, 1191, 1193], "business_suit_levit": 32, "busstop": 32, "bust_in_silhouett": 32, "busts_in_silhouett": 32, "butter": 32, "butterfli": 32, "bv": 32, "bw": 32, "bz": 32, "cactu": 32, "cake": 32, "calendar": 32, "calendar_spir": 32, "call_m": 32, "call_me_hand": 32, "call_me_hand_tone1": 32, "call_me_hand_tone2": 32, "call_me_hand_tone3": 32, "call_me_hand_tone4": 32, "call_me_hand_tone5": 32, "call_me_tone1": 32, "call_me_tone2": 32, "call_me_tone3": 32, "call_me_tone4": 32, "call_me_tone5": 32, "cambodia": 32, "camel": 32, "camera": [32, 33, 142, 167, 169, 930], "camera_flash": 32, "camera_with_flash": 32, "cameroon": 32, "camp": 32, "canada": 32, "canary_island": 32, "cancer": 32, "candl": 32, "candi": 32, "canned_food": 32, "cano": 32, "cape_verd": 32, "capital_abcd": 32, "capricorn": 32, "car": [32, 280, 466, 922], "card_box": 32, "card_file_box": 32, "card_index": 32, "card_index_divid": 32, "caribbean_netherland": 32, "carousel_hors": 32, "carpentry_saw": 32, "carrot": 32, "cartwheel": 32, "cartwheel_tone1": 32, "cartwheel_tone2": 32, "cartwheel_tone3": 32, "cartwheel_tone4": 32, "cartwheel_tone5": 32, "cat2": 32, "cat": [32, 164, 168, 202, 214, 268, 277, 278, 280, 298, 299, 342, 343, 442, 466, 541, 778, 783, 788, 805, 825, 841, 852, 853, 855, 856, 865, 867, 869, 897, 904, 912, 913, 915, 916, 918, 921, 922, 929, 930, 931, 932, 956, 958, 959, 963, 987, 993, 996, 1182], "cayman_island": 32, "cd": [32, 62, 148, 165, 166, 168, 169, 172, 173, 177, 190, 191, 224, 234, 254, 262, 267, 269, 343, 357, 362, 467, 539, 542, 602, 798, 800, 825, 826, 849, 851, 852, 853, 856, 862, 870, 875, 877, 885, 909, 922, 929, 930, 938, 951, 1000, 1001, 1013, 1014, 1078], "central_african_republ": 32, "ceuta_melilla": 32, "cf": [32, 324, 851, 968], "cg": 32, "ch": 32, "chad": 32, "chain": [32, 155, 161, 172, 182, 244, 261, 444, 830, 978], "chair": [32, 194], "champagn": 32, "champagne_glass": 32, "chart": [32, 208, 223, 232, 245, 259, 262, 295, 301, 1123, 1130], "chart_with_downwards_trend": 32, "chart_with_upwards_trend": 32, "checkered_flag": 32, "chees": 32, "cheese_wedg": 32, "cherri": 32, "cherry_blossom": 32, "chess_pawn": 32, "chestnut": 32, "chicken": 32, "child": [32, 100, 179, 268, 277, 278, 298, 299, 776, 778, 855, 857, 859, 860, 871, 874, 875, 876, 877, 878, 879, 880, 889, 890, 891, 894, 896, 897, 921, 933, 934, 935, 936, 937, 962, 968, 975, 980, 997, 1009, 1010, 1040, 1148], "child_dark_skin_ton": 32, "child_light_skin_ton": 32, "child_medium_dark_skin_ton": 32, "child_medium_light_skin_ton": 32, "child_medium_skin_ton": 32, "child_tone1": 32, "child_tone2": 32, "child_tone3": 32, "child_tone4": 32, "child_tone5": 32, "children_cross": 32, "chile": 32, "china": 32, "chipmunk": 32, "chocolate_bar": 32, "chopstick": 32, "christmas_island": 32, "christmas_tre": 32, "church": 32, "ci": [32, 1156], "cinema": 32, "circus_t": 32, "city_dusk": 32, "city_sunris": 32, "city_sunset": 32, "cityscap": 32, "ck": 32, "cl": [32, 250, 275, 1039, 1040], "clamp": 32, "clap": 32, "clap_tone1": 32, "clap_tone2": 32, "clap_tone3": 32, "clap_tone4": 32, "clap_tone5": 32, "clapper": 32, "classical_build": 32, "clinking_glass": 32, "clipboard": 32, "clipperton_island": 32, "clock1030": 32, "clock10": 32, "clock1130": 32, "clock11": 32, "clock1230": 32, "clock12": 32, "clock130": 32, "clock1": 32, "clock230": 32, "clock2": 32, "clock330": 32, "clock3": 32, "clock430": 32, "clock4": 32, "clock530": 32, "clock5": 32, "clock630": 32, "clock6": 32, "clock730": 32, "clock7": 32, "clock830": 32, "clock8": 32, "clock930": 32, "clock9": 32, "clock": [32, 136, 237, 238, 453, 929], "closed_book": 32, "closed_lock_with_kei": 32, "closed_umbrella": 32, "cloud": [32, 102, 169, 214, 238, 356, 357, 360, 685, 687, 938, 1127, 1128, 1151], "cloud_lightn": 32, "cloud_rain": 32, "cloud_snow": 32, "cloud_tornado": 32, "cloud_with_lightn": 32, "cloud_with_lightning_and_rain": 32, "cloud_with_rain": 32, "cloud_with_snow": 32, "cloud_with_tornado": 32, "clown": 32, "clown_fac": 32, "club": [32, 38], "cm": 32, "cn": [32, 172], "coat": 32, "cockroach": 32, "cocktail": 32, "coconut": [32, 286], "cocos_island": 32, "coffe": [32, 165, 657, 929], "coffin": 32, "coin": 32, "cold_fac": 32, "cold_sweat": 32, "colombia": 32, "comet": 32, "comoro": 32, "compass": 32, "compress": [32, 122, 163, 177, 268, 277, 278, 298, 778, 849, 855, 921, 1009, 1010, 1011, 1014], "computer_mous": 32, "confetti_bal": 32, "confound": 32, "confus": [32, 162, 166, 194, 223, 399, 407, 453, 600, 610, 686, 697, 1065, 1149], "congo": 32, "congo_brazzavil": 32, "congo_kinshasa": 32, "congratul": 32, "construct": [32, 194, 200, 281, 284, 402, 415, 425, 454, 464, 568, 619, 638, 639, 695, 743, 1037, 1044, 1061, 1072], "construction_sit": 32, "construction_work": 32, "construction_worker_man": 32, "construction_worker_tone1": 32, "construction_worker_tone2": 32, "construction_worker_tone3": 32, "construction_worker_tone4": 32, "construction_worker_tone5": 32, "construction_worker_woman": 32, "control_knob": 32, "convenience_stor": 32, "cook": [32, 278], "cook_dark_skin_ton": 32, "cook_island": 32, "cook_light_skin_ton": 32, "cook_medium_dark_skin_ton": 32, "cook_medium_light_skin_ton": 32, "cook_medium_skin_ton": 32, "cook_tone1": 32, "cook_tone2": 32, "cook_tone3": 32, "cook_tone4": 32, "cook_tone5": 32, "cooki": [32, 807, 821], "cool": [32, 60, 66, 148, 163, 164, 167, 169, 177, 182, 183, 194, 195, 198, 213, 278, 291, 375, 460, 466, 494, 503, 640, 682, 683, 699, 702, 721, 731, 734, 756, 825, 881, 931, 1016, 1020, 1023, 1040, 1059, 1073, 1123, 1130, 1135, 1176], "cop": 32, "cop_tone1": 32, "cop_tone2": 32, "cop_tone3": 32, "cop_tone4": 32, "cop_tone5": 32, "copyright": [32, 36, 173, 214, 231, 237, 247, 250, 275, 350, 354, 592, 741, 1049], "corn": 32, "costa_rica": 32, "cote_divoir": 32, "couch": 32, "couch_and_lamp": 32, "coupl": [32, 43, 142, 161, 162, 163, 164, 169, 182, 194, 198, 378, 415, 449, 454, 730, 918, 953, 972], "couple_mm": 32, "couple_with_heart": 32, "couple_with_heart_dark_skin_ton": 32, "couple_with_heart_light_skin_ton": 32, "couple_with_heart_man_man": 32, "couple_with_heart_man_man_dark_skin_ton": 32, "couple_with_heart_man_man_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_man_man_dark_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_man_man_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_man_man_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_man_man_light_skin_ton": 32, "couple_with_heart_man_man_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_man_man_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_man_man_light_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_man_man_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_man_man_medium_dark_skin_ton": 32, "couple_with_heart_man_man_medium_dark_skin_tone_dark_skin_ton": 32, "couple_with_heart_man_man_medium_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_man_man_medium_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_man_man_medium_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_man_man_medium_light_skin_ton": 32, "couple_with_heart_man_man_medium_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_man_man_medium_light_skin_tone_light_skin_ton": 32, "couple_with_heart_man_man_medium_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_man_man_medium_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_man_man_medium_skin_ton": 32, "couple_with_heart_man_man_medium_skin_tone_dark_skin_ton": 32, "couple_with_heart_man_man_medium_skin_tone_light_skin_ton": 32, "couple_with_heart_man_man_medium_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_man_man_medium_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_man_man_tone1": 32, "couple_with_heart_man_man_tone1_tone2": 32, "couple_with_heart_man_man_tone1_tone3": 32, "couple_with_heart_man_man_tone1_tone4": 32, "couple_with_heart_man_man_tone1_tone5": 32, "couple_with_heart_man_man_tone2": 32, "couple_with_heart_man_man_tone2_tone1": 32, "couple_with_heart_man_man_tone2_tone3": 32, "couple_with_heart_man_man_tone2_tone4": 32, "couple_with_heart_man_man_tone2_tone5": 32, "couple_with_heart_man_man_tone3": 32, "couple_with_heart_man_man_tone3_tone1": 32, "couple_with_heart_man_man_tone3_tone2": 32, "couple_with_heart_man_man_tone3_tone4": 32, "couple_with_heart_man_man_tone3_tone5": 32, "couple_with_heart_man_man_tone4": 32, "couple_with_heart_man_man_tone4_tone1": 32, "couple_with_heart_man_man_tone4_tone2": 32, "couple_with_heart_man_man_tone4_tone3": 32, "couple_with_heart_man_man_tone4_tone5": 32, "couple_with_heart_man_man_tone5": 32, "couple_with_heart_man_man_tone5_tone1": 32, "couple_with_heart_man_man_tone5_tone2": 32, "couple_with_heart_man_man_tone5_tone3": 32, "couple_with_heart_man_man_tone5_tone4": 32, "couple_with_heart_medium_dark_skin_ton": 32, "couple_with_heart_medium_light_skin_ton": 32, "couple_with_heart_medium_skin_ton": 32, "couple_with_heart_mm": 32, "couple_with_heart_person_person_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_person_person_dark_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_person_person_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_person_person_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_person_person_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_person_person_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_person_person_light_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_person_person_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_person_person_medium_dark_skin_tone_dark_skin_ton": 32, "couple_with_heart_person_person_medium_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_person_person_medium_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_person_person_medium_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_person_person_medium_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_person_person_medium_light_skin_tone_light_skin_ton": 32, "couple_with_heart_person_person_medium_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_person_person_medium_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_person_person_medium_skin_tone_dark_skin_ton": 32, "couple_with_heart_person_person_medium_skin_tone_light_skin_ton": 32, "couple_with_heart_person_person_medium_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_person_person_medium_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_person_person_tone1_tone2": 32, "couple_with_heart_person_person_tone1_tone3": 32, "couple_with_heart_person_person_tone1_tone4": 32, "couple_with_heart_person_person_tone1_tone5": 32, "couple_with_heart_person_person_tone2_tone1": 32, "couple_with_heart_person_person_tone2_tone3": 32, "couple_with_heart_person_person_tone2_tone4": 32, "couple_with_heart_person_person_tone2_tone5": 32, "couple_with_heart_person_person_tone3_tone1": 32, "couple_with_heart_person_person_tone3_tone2": 32, "couple_with_heart_person_person_tone3_tone4": 32, "couple_with_heart_person_person_tone3_tone5": 32, "couple_with_heart_person_person_tone4_tone1": 32, "couple_with_heart_person_person_tone4_tone2": 32, "couple_with_heart_person_person_tone4_tone3": 32, "couple_with_heart_person_person_tone4_tone5": 32, "couple_with_heart_person_person_tone5_tone1": 32, "couple_with_heart_person_person_tone5_tone2": 32, "couple_with_heart_person_person_tone5_tone3": 32, "couple_with_heart_person_person_tone5_tone4": 32, "couple_with_heart_tone1": 32, "couple_with_heart_tone2": 32, "couple_with_heart_tone3": 32, "couple_with_heart_tone4": 32, "couple_with_heart_tone5": 32, "couple_with_heart_woman_man": 32, "couple_with_heart_woman_man_dark_skin_ton": 32, "couple_with_heart_woman_man_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_man_dark_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_man_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_man_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_man_light_skin_ton": 32, "couple_with_heart_woman_man_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_man_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_man_light_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_man_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_man_medium_dark_skin_ton": 32, "couple_with_heart_woman_man_medium_dark_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_man_medium_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_man_medium_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_man_medium_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_man_medium_light_skin_ton": 32, "couple_with_heart_woman_man_medium_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_man_medium_light_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_man_medium_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_man_medium_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_man_medium_skin_ton": 32, "couple_with_heart_woman_man_medium_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_man_medium_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_man_medium_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_man_medium_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_man_tone1": 32, "couple_with_heart_woman_man_tone1_tone2": 32, "couple_with_heart_woman_man_tone1_tone3": 32, "couple_with_heart_woman_man_tone1_tone4": 32, "couple_with_heart_woman_man_tone1_tone5": 32, "couple_with_heart_woman_man_tone2": 32, "couple_with_heart_woman_man_tone2_tone1": 32, "couple_with_heart_woman_man_tone2_tone3": 32, "couple_with_heart_woman_man_tone2_tone4": 32, "couple_with_heart_woman_man_tone2_tone5": 32, "couple_with_heart_woman_man_tone3": 32, "couple_with_heart_woman_man_tone3_tone1": 32, "couple_with_heart_woman_man_tone3_tone2": 32, "couple_with_heart_woman_man_tone3_tone4": 32, "couple_with_heart_woman_man_tone3_tone5": 32, "couple_with_heart_woman_man_tone4": 32, "couple_with_heart_woman_man_tone4_tone1": 32, "couple_with_heart_woman_man_tone4_tone2": 32, "couple_with_heart_woman_man_tone4_tone3": 32, "couple_with_heart_woman_man_tone4_tone5": 32, "couple_with_heart_woman_man_tone5": 32, "couple_with_heart_woman_man_tone5_tone1": 32, "couple_with_heart_woman_man_tone5_tone2": 32, "couple_with_heart_woman_man_tone5_tone3": 32, "couple_with_heart_woman_man_tone5_tone4": 32, "couple_with_heart_woman_woman": 32, "couple_with_heart_woman_woman_dark_skin_ton": 32, "couple_with_heart_woman_woman_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_woman_dark_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_woman_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_woman_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_woman_light_skin_ton": 32, "couple_with_heart_woman_woman_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_woman_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_woman_light_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_woman_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_woman_medium_dark_skin_ton": 32, "couple_with_heart_woman_woman_medium_dark_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_woman_medium_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_woman_medium_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_woman_medium_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_woman_medium_light_skin_ton": 32, "couple_with_heart_woman_woman_medium_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_woman_medium_light_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_woman_medium_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_woman_medium_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_woman_medium_skin_ton": 32, "couple_with_heart_woman_woman_medium_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_woman_medium_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_woman_medium_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_woman_medium_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_woman_tone1": 32, "couple_with_heart_woman_woman_tone1_tone2": 32, "couple_with_heart_woman_woman_tone1_tone3": 32, "couple_with_heart_woman_woman_tone1_tone4": 32, "couple_with_heart_woman_woman_tone1_tone5": 32, "couple_with_heart_woman_woman_tone2": 32, "couple_with_heart_woman_woman_tone2_tone1": 32, "couple_with_heart_woman_woman_tone2_tone3": 32, "couple_with_heart_woman_woman_tone2_tone4": 32, "couple_with_heart_woman_woman_tone2_tone5": 32, "couple_with_heart_woman_woman_tone3": 32, "couple_with_heart_woman_woman_tone3_tone1": 32, "couple_with_heart_woman_woman_tone3_tone2": 32, "couple_with_heart_woman_woman_tone3_tone4": 32, "couple_with_heart_woman_woman_tone3_tone5": 32, "couple_with_heart_woman_woman_tone4": 32, "couple_with_heart_woman_woman_tone4_tone1": 32, "couple_with_heart_woman_woman_tone4_tone2": 32, "couple_with_heart_woman_woman_tone4_tone3": 32, "couple_with_heart_woman_woman_tone4_tone5": 32, "couple_with_heart_woman_woman_tone5": 32, "couple_with_heart_woman_woman_tone5_tone1": 32, "couple_with_heart_woman_woman_tone5_tone2": 32, "couple_with_heart_woman_woman_tone5_tone3": 32, "couple_with_heart_woman_woman_tone5_tone4": 32, "couple_with_heart_ww": 32, "couple_ww": 32, "couplekiss": 32, "couplekiss_man_man": 32, "couplekiss_man_woman": 32, "couplekiss_mm": 32, "couplekiss_woman_woman": 32, "couplekiss_ww": 32, "cow2": 32, "cow": 32, "cowboi": 32, "cowboy_hat_fac": 32, "cp": [32, 100, 124, 163, 165, 168, 202, 204, 268, 277, 278, 298, 299, 357, 362, 778, 825, 852, 853, 854, 855, 856, 885, 889, 890, 892, 893, 896, 897, 899, 905, 921, 929, 941, 952, 1013, 1182], "cr": [32, 1073], "crab": 32, "crayon": 32, "credit_card": 32, "crescent_moon": 32, "cricket": 32, "cricket_bat_bal": 32, "cricket_gam": 32, "croatia": 32, "crocodil": 32, "croissant": 32, "cross": [32, 38, 66, 104, 105, 107, 132, 161, 174, 198, 292, 304, 305, 320, 321, 358, 359, 360, 488, 502, 530, 531, 532, 533, 534, 535, 536, 537, 540, 541, 542, 582, 755, 777, 778, 855, 858, 859, 921, 944, 950, 952, 959, 960, 962, 976, 979, 982, 984, 1001, 1005, 1006, 1007, 1008, 1010, 1013, 1178], "crossed_fing": 32, "crossed_flag": 32, "crossed_sword": 32, "crown": 32, "cruise_ship": 32, "cry": [32, 162], "crying_cat_fac": 32, "crystal_bal": 32, "cu": 32, "cuba": 32, "cucumb": 32, "cup_with_straw": 32, "cupcak": 32, "cupid": 32, "curacao": 32, "curling_ston": 32, "curly_hair": 32, "curly_loop": 32, "currency_exchang": 32, "curri": [32, 223], "custard": 32, "cut_of_meat": 32, "cw": 32, "cx": 32, "cy": 32, "cyclon": 32, "cypru": 32, "cz": 32, "czech_republ": 32, "dagger": [32, 38], "dagger_knif": 32, "dancer": 32, "dancer_tone1": 32, "dancer_tone2": 32, "dancer_tone3": 32, "dancer_tone4": 32, "dancer_tone5": 32, "dancing_men": 32, "dancing_women": 32, "dango": 32, "dark_sunglass": 32, "dart": 32, "dash": [32, 34, 35, 38, 626], "date": [32, 122, 159, 165, 173, 177, 194, 200, 230, 262, 278, 280, 323, 370, 371, 466, 826, 1018, 1112, 1114, 1118, 1120, 1127, 1132], "deaf_man": 32, "deaf_man_dark_skin_ton": 32, "deaf_man_light_skin_ton": 32, "deaf_man_medium_dark_skin_ton": 32, "deaf_man_medium_light_skin_ton": 32, "deaf_man_medium_skin_ton": 32, "deaf_man_tone1": 32, "deaf_man_tone2": 32, "deaf_man_tone3": 32, "deaf_man_tone4": 32, "deaf_man_tone5": 32, "deaf_person": 32, "deaf_person_dark_skin_ton": 32, "deaf_person_light_skin_ton": 32, "deaf_person_medium_dark_skin_ton": 32, "deaf_person_medium_light_skin_ton": 32, "deaf_person_medium_skin_ton": 32, "deaf_person_tone1": 32, "deaf_person_tone2": 32, "deaf_person_tone3": 32, "deaf_person_tone4": 32, "deaf_person_tone5": 32, "deaf_woman": 32, "deaf_woman_dark_skin_ton": 32, "deaf_woman_light_skin_ton": 32, "deaf_woman_medium_dark_skin_ton": 32, "deaf_woman_medium_light_skin_ton": 32, "deaf_woman_medium_skin_ton": 32, "deaf_woman_tone1": 32, "deaf_woman_tone2": 32, "deaf_woman_tone3": 32, "deaf_woman_tone4": 32, "deaf_woman_tone5": 32, "deciduous_tre": 32, "deer": 32, "denmark": 32, "department_stor": 32, "derelict_hous": 32, "derelict_house_build": 32, "desert": 32, "desert_island": 32, "desktop": [32, 150, 162, 167, 223, 292, 907, 984, 1180, 1187], "desktop_comput": 32, "detective_tone1": 32, "detective_tone2": 32, "detective_tone3": 32, "detective_tone4": 32, "detective_tone5": 32, "dg": 32, "diamond_shape_with_a_dot_insid": 32, "diamond": [32, 34, 38, 222, 235], "diego_garcia": 32, "digit_eight": 32, "digit_f": 32, "digit_four": 32, "digit_nin": 32, "digit_on": 32, "digit_seven": 32, "digit_six": 32, "digit_thre": 32, "digit_two": 32, "digit_zero": 32, "disappoint": 32, "disappointed_reliev": 32, "disguised_fac": 32, "divid": [32, 35, 36, 38, 254, 1130], "diving_mask": 32, "diya_lamp": 32, "dizzi": 32, "dizzy_fac": 32, "dj": 32, "djibouti": 32, "dk": 32, "dm": 32, "dna": 32, "do_not_litt": 32, "dodo": 32, "dog2": 32, "dog": [32, 442], "dollar": [32, 36], "doll": 32, "dolphin": 32, "dominica": 32, "dominican_republ": 32, "door": [32, 240, 560, 815, 1033], "double_vertical_bar": 32, "doughnut": 32, "dove": 32, "dove_of_peac": 32, "dragon": [32, 98, 224, 240, 287, 289, 327, 560, 584, 585, 590, 679, 691, 693, 722, 727, 738, 742, 747, 755, 775, 777, 778, 996], "dragon_fac": 32, "dress": [32, 159], "dromedary_camel": 32, "drool": 32, "drooling_fac": 32, "drop_of_blood": 32, "droplet": 32, "drum": 32, "drum_with_drumstick": 32, "dumpl": 32, "dvd": 32, "dz": 32, "mail": [32, 159, 234, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336, 916, 1136, 1170], "ea": [32, 172], "eagl": [32, 234, 1080], "ear": 32, "ear_of_ric": 32, "ear_tone1": 32, "ear_tone2": 32, "ear_tone3": 32, "ear_tone4": 32, "ear_tone5": 32, "ear_with_hearing_aid": 32, "ear_with_hearing_aid_dark_skin_ton": 32, "ear_with_hearing_aid_light_skin_ton": 32, "ear_with_hearing_aid_medium_dark_skin_ton": 32, "ear_with_hearing_aid_medium_light_skin_ton": 32, "ear_with_hearing_aid_medium_skin_ton": 32, "ear_with_hearing_aid_tone1": 32, "ear_with_hearing_aid_tone2": 32, "ear_with_hearing_aid_tone3": 32, "ear_with_hearing_aid_tone4": 32, "ear_with_hearing_aid_tone5": 32, "earth_africa": 32, "earth_america": 32, "earth_asia": 32, "ec": [32, 98, 172, 214, 354, 357, 362, 365, 374, 778, 854, 855, 885, 921], "ecuador": 32, "ee": [32, 172], "eg": [32, 35, 129], "egg": [32, 62, 1067], "eggplant": 32, "egypt": 32, "eight": [32, 133, 164, 182, 195, 205, 213, 242, 244, 330, 357, 931, 1136], "eight_pointed_black_star": 32, "eight_spoked_asterisk": 32, "eject": 32, "eject_symbol": 32, "el_salvador": 32, "electric_plug": 32, "eleph": 32, "elev": 32, "elf": [32, 170, 173, 205, 221, 231, 472, 568, 968, 999, 1000, 1016, 1050, 1190], "elf_dark_skin_ton": 32, "elf_light_skin_ton": 32, "elf_medium_dark_skin_ton": 32, "elf_medium_light_skin_ton": 32, "elf_medium_skin_ton": 32, "elf_tone1": 32, "elf_tone2": 32, "elf_tone3": 32, "elf_tone4": 32, "elf_tone5": 32, "england": 32, "envelop": [32, 825], "envelope_with_arrow": 32, "equatorial_guinea": 32, "er": [32, 171, 180, 195, 197, 205, 242, 1171, 1172, 1173], "eritrea": 32, "estonia": 32, "et": [32, 98, 592, 741, 945, 1000, 1001, 1042], "ethiopia": 32, "euro": [32, 508, 509, 510, 522, 523, 524], "european_castl": 32, "european_post_offic": 32, "european_union": 32, "evergreen_tre": 32, "exclam": [32, 36], "expecting_woman": 32, "expecting_woman_tone1": 32, "expecting_woman_tone2": 32, "expecting_woman_tone3": 32, "expecting_woman_tone4": 32, "expecting_woman_tone5": 32, "exploding_head": 32, "expressionless": 32, "eye_in_speech_bubbl": 32, "eye_speech_bubbl": 32, "eyeglass": 32, "face_exh": 32, "face_in_cloud": 32, "face_palm": 32, "face_palm_tone1": 32, "face_palm_tone2": 32, "face_palm_tone3": 32, "face_palm_tone4": 32, "face_palm_tone5": 32, "face_vomit": 32, "face_with_cowboy_hat": 32, "face_with_hand_over_mouth": 32, "face_with_head_bandag": 32, "face_with_monocl": 32, "face_with_rolling_ey": 32, "face_with_spiral_ey": 32, "face_with_symbols_over_mouth": 32, "face_with_thermomet": 32, "facepalm": 32, "facepalm_tone1": 32, "facepalm_tone2": 32, "facepalm_tone3": 32, "facepalm_tone4": 32, "facepalm_tone5": 32, "factori": [32, 107, 222, 235, 270, 289, 366, 481, 488, 502, 516, 530, 582, 778, 951, 1179], "factory_work": 32, "factory_worker_dark_skin_ton": 32, "factory_worker_light_skin_ton": 32, "factory_worker_medium_dark_skin_ton": 32, "factory_worker_medium_light_skin_ton": 32, "factory_worker_medium_skin_ton": 32, "factory_worker_tone1": 32, "factory_worker_tone2": 32, "factory_worker_tone3": 32, "factory_worker_tone4": 32, "factory_worker_tone5": 32, "fairi": 32, "fairy_dark_skin_ton": 32, "fairy_light_skin_ton": 32, "fairy_medium_dark_skin_ton": 32, "fairy_medium_light_skin_ton": 32, "fairy_medium_skin_ton": 32, "fairy_tone1": 32, "fairy_tone2": 32, "fairy_tone3": 32, "fairy_tone4": 32, "fairy_tone5": 32, "falafel": 32, "falkland_island": 32, "fallen_leaf": 32, "famili": [32, 186, 925, 931], "family_man_boi": 32, "family_man_boy_boi": 32, "family_man_girl": 32, "family_man_girl_boi": 32, "family_man_girl_girl": 32, "family_man_man_boi": 32, "family_man_man_boy_boi": 32, "family_man_man_girl": 32, "family_man_man_girl_boi": 32, "family_man_man_girl_girl": 32, "family_man_woman_boi": 32, "family_man_woman_boy_boi": 32, "family_man_woman_girl": 32, "family_man_woman_girl_boi": 32, "family_man_woman_girl_girl": 32, "family_mmb": 32, "family_mmbb": 32, "family_mmg": 32, "family_mmgb": 32, "family_mmgg": 32, "family_mwbb": 32, "family_mwg": 32, "family_mwgb": 32, "family_mwgg": 32, "family_woman_boi": 32, "family_woman_boy_boi": 32, "family_woman_girl": 32, "family_woman_girl_boi": 32, "family_woman_girl_girl": 32, "family_woman_woman_boi": 32, "family_woman_woman_boy_boi": 32, "family_woman_woman_girl": 32, "family_woman_woman_girl_boi": 32, "family_woman_woman_girl_girl": 32, "family_wwb": 32, "family_wwbb": 32, "family_wwg": 32, "family_wwgb": 32, "family_wwgg": 32, "farmer": 32, "farmer_dark_skin_ton": 32, "farmer_light_skin_ton": 32, "farmer_medium_dark_skin_ton": 32, "farmer_medium_light_skin_ton": 32, "farmer_medium_skin_ton": 32, "farmer_tone1": 32, "farmer_tone2": 32, "farmer_tone3": 32, "farmer_tone4": 32, "farmer_tone5": 32, "faroe_island": 32, "fast_forward": 32, "fax": 32, "fear": [32, 280, 959], "feather": 32, "feet": 32, "female_detect": 32, "female_sign": 32, "fencer": 32, "fenc": 32, "ferris_wheel": 32, "ferri": 32, "fi": [32, 955, 963, 978], "field_hockei": 32, "fiji": 32, "file_cabinet": 32, "file_fold": 32, "film_fram": 32, "film_projector": 32, "film_strip": 32, "fingers_cross": 32, "fingers_crossed_tone1": 32, "fingers_crossed_tone2": 32, "fingers_crossed_tone3": 32, "fingers_crossed_tone4": 32, "fingers_crossed_tone5": 32, "finland": 32, "fire": [32, 43, 64, 444], "fire_engin": 32, "fire_extinguish": 32, "firecrack": 32, "firefight": 32, "firefighter_dark_skin_ton": 32, "firefighter_light_skin_ton": 32, "firefighter_medium_dark_skin_ton": 32, "firefighter_medium_light_skin_ton": 32, "firefighter_medium_skin_ton": 32, "firefighter_tone1": 32, "firefighter_tone2": 32, "firefighter_tone3": 32, "firefighter_tone4": 32, "firefighter_tone5": 32, "firework": 32, "first_plac": 32, "first_place_med": 32, "first_quarter_moon": 32, "first_quarter_moon_with_fac": 32, "fish": [32, 34, 1158], "fish_cak": 32, "fishing_pole_and_fish": 32, "fist": 32, "fist_left": 32, "fist_oncom": 32, "fist_rais": 32, "fist_right": 32, "fist_tone1": 32, "fist_tone2": 32, "fist_tone3": 32, "fist_tone4": 32, "fist_tone5": 32, "five": [32, 36, 64, 114, 119, 120, 162, 182, 195, 205, 213, 234, 244, 250, 260, 275, 296, 314, 318, 326, 330, 336, 340, 357, 375, 1080, 1122], "fj": 32, "fk": 32, "flag_ac": 32, "flag_ad": 32, "flag_a": 32, "flag_af": 32, "flag_ag": 32, "flag_ai": 32, "flag_al": 32, "flag_am": 32, "flag_ao": 32, "flag_aq": 32, "flag_ar": 32, "flag_at": 32, "flag_au": 32, "flag_aw": 32, "flag_ax": 32, "flag_az": 32, "flag_ba": 32, "flag_bb": 32, "flag_bd": 32, "flag_b": 32, "flag_bf": 32, "flag_bg": 32, "flag_bh": 32, "flag_bi": 32, "flag_bj": 32, "flag_bl": 32, "flag_black": 32, "flag_bm": 32, "flag_bn": 32, "flag_bo": 32, "flag_bq": 32, "flag_br": 32, "flag_bt": 32, "flag_bv": 32, "flag_bw": 32, "flag_bz": 32, "flag_ca": 32, "flag_cc": 32, "flag_cd": 32, "flag_cf": 32, "flag_cg": 32, "flag_ch": 32, "flag_ci": 32, "flag_ck": 32, "flag_cl": 32, "flag_cm": 32, "flag_cn": 32, "flag_co": 32, "flag_cp": 32, "flag_cr": 32, "flag_cu": 32, "flag_cv": 32, "flag_cw": 32, "flag_cx": 32, "flag_cz": 32, "flag_d": 32, "flag_dg": 32, "flag_dj": 32, "flag_dk": 32, "flag_dm": 32, "flag_do": 32, "flag_dz": 32, "flag_ea": 32, "flag_ec": 32, "flag_e": 32, "flag_eg": 32, "flag_eh": 32, "flag_er": 32, "flag_": 32, "flag_et": 32, "flag_eu": 32, "flag_fi": 32, "flag_fj": 32, "flag_fk": 32, "flag_fm": 32, "flag_fo": 32, "flag_fr": 32, "flag_ga": 32, "flag_gb": 32, "flag_gd": 32, "flag_g": 32, "flag_gf": 32, "flag_gg": 32, "flag_gh": 32, "flag_gi": 32, "flag_gl": 32, "flag_gm": 32, "flag_gn": 32, "flag_gp": 32, "flag_gq": 32, "flag_gr": 32, "flag_gt": 32, "flag_gu": 32, "flag_gw": 32, "flag_hk": 32, "flag_hm": 32, "flag_hn": 32, "flag_hr": 32, "flag_ht": 32, "flag_hu": 32, "flag_ic": 32, "flag_id": 32, "flag_i": 32, "flag_il": 32, "flag_im": 32, "flag_in": 32, "flag_io": 32, "flag_iq": 32, "flag_ir": 32, "flag_it": 32, "flag_j": 32, "flag_jm": 32, "flag_jo": 32, "flag_jp": 32, "flag_k": 32, "flag_kg": 32, "flag_kh": 32, "flag_ki": 32, "flag_km": 32, "flag_kn": 32, "flag_kp": 32, "flag_kr": 32, "flag_kw": 32, "flag_kz": 32, "flag_la": 32, "flag_lb": 32, "flag_lc": 32, "flag_li": 32, "flag_lk": 32, "flag_lr": 32, "flag_l": 32, "flag_lt": 32, "flag_lu": 32, "flag_lv": 32, "flag_ma": 32, "flag_mc": 32, "flag_md": 32, "flag_m": 32, "flag_mf": 32, "flag_mg": 32, "flag_mh": 32, "flag_mk": 32, "flag_ml": 32, "flag_mm": 32, "flag_mn": 32, "flag_mo": 32, "flag_mp": 32, "flag_mq": 32, "flag_mr": 32, "flag_mt": 32, "flag_mu": 32, "flag_mv": 32, "flag_mw": 32, "flag_mx": 32, "flag_mi": 32, "flag_mz": 32, "flag_na": 32, "flag_nc": 32, "flag_n": 32, "flag_nf": 32, "flag_ng": 32, "flag_ni": 32, "flag_nl": 32, "flag_no": 32, "flag_np": 32, "flag_nr": 32, "flag_nu": 32, "flag_nz": 32, "flag_om": 32, "flag_pa": 32, "flag_p": 32, "flag_pf": 32, "flag_pg": 32, "flag_ph": 32, "flag_pk": 32, "flag_pl": 32, "flag_pm": 32, "flag_pn": 32, "flag_pr": 32, "flag_pt": 32, "flag_pw": 32, "flag_pi": 32, "flag_qa": 32, "flag_r": 32, "flag_ro": 32, "flag_ru": 32, "flag_rw": 32, "flag_sa": 32, "flag_sb": 32, "flag_sc": 32, "flag_sd": 32, "flag_s": 32, "flag_sg": 32, "flag_sh": 32, "flag_si": 32, "flag_sj": 32, "flag_sk": 32, "flag_sl": 32, "flag_sm": 32, "flag_sn": 32, "flag_so": 32, "flag_sr": 32, "flag_ss": 32, "flag_st": 32, "flag_sv": 32, "flag_sx": 32, "flag_sz": 32, "flag_ta": 32, "flag_tc": 32, "flag_td": 32, "flag_tf": 32, "flag_tg": 32, "flag_th": 32, "flag_tj": 32, "flag_tk": 32, "flag_tl": 32, "flag_tm": 32, "flag_tn": 32, "flag_to": 32, "flag_tr": 32, "flag_tt": 32, "flag_tv": 32, "flag_tw": 32, "flag_tz": 32, "flag_ua": 32, "flag_ug": 32, "flag_um": 32, "flag_u": 32, "flag_ui": 32, "flag_uz": 32, "flag_va": 32, "flag_vc": 32, "flag_v": 32, "flag_vg": 32, "flag_vi": 32, "flag_vn": 32, "flag_vu": 32, "flag_wf": 32, "flag_whit": 32, "flag_w": 32, "flag_xk": 32, "flag_y": 32, "flag_yt": 32, "flag_za": 32, "flag_zm": 32, "flag_zw": 32, "flag": [32, 48, 162, 164, 179, 190, 201, 231, 237, 240, 244, 247, 250, 275, 278, 289, 291, 305, 321, 350, 469, 470, 471, 476, 479, 665, 679, 756, 778, 784, 793, 807, 830, 833, 835, 923, 925, 954, 955, 956, 958, 972, 993, 997, 1058], "flame": [32, 165], "flamingo": 32, "flan": 32, "flashlight": 32, "flatbread": 32, "fleur": 32, "li": [32, 158, 254, 618], "fleur_de_li": 32, "flight_arriv": 32, "flight_departur": 32, "floppy_disk": 32, "flower_playing_card": 32, "fly": [32, 851, 922], "flying_disc": 32, "flying_sauc": 32, "fm": 32, "fo": 32, "fog": 32, "foggi": 32, "fondu": 32, "foot": [32, 70, 418, 887], "foot_dark_skin_ton": 32, "foot_light_skin_ton": 32, "foot_medium_dark_skin_ton": 32, "foot_medium_light_skin_ton": 32, "foot_medium_skin_ton": 32, "foot_tone1": 32, "foot_tone2": 32, "foot_tone3": 32, "foot_tone4": 32, "foot_tone5": 32, "footbal": 32, "footprint": [32, 194, 1047], "fork_and_knif": 32, "fork_and_knife_with_pl": 32, "fork_knife_pl": 32, "fortune_cooki": 32, "fountain": 32, "fountain_pen": 32, "four": [32, 35, 66, 161, 166, 182, 194, 195, 198, 205, 212, 213, 221, 237, 242, 244, 254, 257, 260, 271, 275, 278, 292, 295, 296, 302, 317, 318, 324, 330, 336, 340, 357, 825, 891, 1061, 1069, 1122, 1123, 1131, 1156, 1179], "four_leaf_clov": 32, "fox": [32, 442], "fox_fac": 32, "fr": [32, 173], "frame_photo": 32, "frame_with_pictur": 32, "framed_pictur": 32, "franc": 32, "french_bread": 32, "french_guiana": 32, "french_polynesia": 32, "french_southern_territori": 32, "fried_egg": 32, "fried_shrimp": 32, "fri": 32, "frog": 32, "frowning2": 32, "frown": [32, 35, 70, 1176], "frowning_fac": 32, "frowning_man": 32, "frowning_woman": 32, "fuelpump": 32, "full_moon": 32, "full_moon_with_fac": 32, "funeral_urn": 32, "ga": [32, 330], "gabon": 32, "gambia": 32, "game_di": 32, "garlic": 32, "gay_pride_flag": 32, "gb": [32, 953], "gd": 32, "ge": [32, 35], "gear": 32, "gem": 32, "gemini": 32, "geni": 32, "georgia": 32, "germani": [32, 162, 163, 375], "gf": 32, "gg": [32, 35, 38], "gh": [32, 158, 1145], "ghana": 32, "ghost": 32, "gi": [32, 158, 245], "gibraltar": 32, "gift": [32, 198, 229], "gift_heart": 32, "giraff": 32, "girl": 32, "girl_tone1": 32, "girl_tone2": 32, "girl_tone3": 32, "girl_tone4": 32, "girl_tone5": 32, "gl": [32, 35], "glass_of_milk": 32, "globe_with_meridian": 32, "glove": 32, "gm": 32, "gn": 32, "goal": [32, 42, 69, 162, 281, 284, 342, 466, 476, 745, 764, 852, 853, 1015, 1024], "goal_net": 32, "goat": 32, "goggl": 32, "golf": 32, "golfer": 32, "golfing_man": 32, "golfing_woman": 32, "gorilla": 32, "gp": 32, "gq": 32, "gr": [32, 302, 318, 1136], "grandma": 32, "grandma_tone1": 32, "grandma_tone2": 32, "grandma_tone3": 32, "grandma_tone4": 32, "grandma_tone5": 32, "grape": 32, "great_britain": 32, "greec": 32, "green_appl": 32, "green_book": 32, "green_circl": 32, "green_heart": 32, "green_salad": 32, "green_squar": 32, "greenland": 32, "grenada": 32, "grey_exclam": 32, "grey_quest": 32, "grin": 32, "gu": 32, "guadeloup": 32, "guam": 32, "guard": [32, 224, 240, 474, 753, 754, 756], "guard_tone1": 32, "guard_tone2": 32, "guard_tone3": 32, "guard_tone4": 32, "guard_tone5": 32, "guardsman": 32, "guardsman_tone1": 32, "guardsman_tone2": 32, "guardsman_tone3": 32, "guardsman_tone4": 32, "guardsman_tone5": 32, "guardswoman": 32, "guatemala": 32, "guernsei": 32, "guide_dog": 32, "guinea": 32, "guinea_bissau": 32, "guitar": 32, "gun": 32, "guyana": 32, "gw": 32, "gy": 32, "haircut": 32, "haircut_man": 32, "haircut_tone1": 32, "haircut_tone2": 32, "haircut_tone3": 32, "haircut_tone4": 32, "haircut_tone5": 32, "haircut_woman": 32, "haiti": 32, "hamburg": 32, "hammer": [32, 162, 238, 278, 805, 815], "hammer_and_pick": 32, "hammer_and_wrench": 32, "hammer_pick": 32, "hamster": 32, "hand": [32, 158, 170, 177, 182, 189, 198, 213, 224, 240, 259, 286, 365, 392, 403, 422, 424, 487, 506, 574, 585, 601, 603, 604, 730, 869, 885, 930, 931, 947, 975, 1009, 1027, 1042, 1049, 1176, 1182, 1194], "hand_splai": 32, "hand_splayed_tone1": 32, "hand_splayed_tone2": 32, "hand_splayed_tone3": 32, "hand_splayed_tone4": 32, "hand_splayed_tone5": 32, "hand_with_index_and_middle_finger_cross": 32, "hand_with_index_and_middle_fingers_crossed_tone1": 32, "hand_with_index_and_middle_fingers_crossed_tone2": 32, "hand_with_index_and_middle_fingers_crossed_tone3": 32, "hand_with_index_and_middle_fingers_crossed_tone4": 32, "hand_with_index_and_middle_fingers_crossed_tone5": 32, "handbag": 32, "handbal": 32, "handball_tone1": 32, "handball_tone2": 32, "handball_tone3": 32, "handball_tone4": 32, "handball_tone5": 32, "handshak": [32, 754], "handshake_tone1": 32, "handshake_tone2": 32, "handshake_tone3": 32, "handshake_tone4": 32, "handshake_tone5": 32, "hankei": 32, "hash": [32, 194, 200, 201, 212, 218, 231, 237, 238, 241, 245, 247, 250, 254, 275, 282, 296, 336, 357, 477, 825, 1071, 1151], "hatched_chick": 32, "hatching_chick": 32, "head_bandag": 32, "headphon": 32, "headston": 32, "health_work": 32, "health_worker_dark_skin_ton": 32, "health_worker_light_skin_ton": 32, "health_worker_medium_dark_skin_ton": 32, "health_worker_medium_light_skin_ton": 32, "health_worker_medium_skin_ton": 32, "health_worker_tone1": 32, "health_worker_tone2": 32, "health_worker_tone3": 32, "health_worker_tone4": 32, "health_worker_tone5": 32, "hear_no_evil": 32, "heart_decor": 32, "heart_exclam": 32, "heart_ey": 32, "heart_eyes_cat": 32, "heart_on_fir": 32, "heartbeat": 32, "heartpuls": 32, "heavy_check_mark": 32, "heavy_division_sign": 32, "heavy_dollar_sign": 32, "heavy_heart_exclam": 32, "heavy_heart_exclamation_mark_orna": 32, "heavy_minus_sign": 32, "heavy_multiplication_x": 32, "heavy_plus_sign": 32, "hedgehog": 32, "helicopt": 32, "helmet_with_cross": 32, "helmet_with_white_cross": 32, "herb": 32, "hibiscu": 32, "high_bright": 32, "high_heel": 32, "hiking_boot": 32, "hindu_templ": 32, "hippopotamu": 32, "hk": 32, "hn": 32, "hocho": 32, "hockei": 32, "hole": [32, 240, 778, 921, 951, 960, 961, 962, 979, 992], "hondura": 32, "honey_pot": 32, "hong_kong": 32, "hook": [32, 34, 38, 213, 231, 237, 247, 250, 280, 313, 458, 493, 749, 784], "hors": 32, "horse_rac": 32, "horse_racing_tone1": 32, "horse_racing_tone2": 32, "horse_racing_tone3": 32, "horse_racing_tone4": 32, "horse_racing_tone5": 32, "hospit": 32, "hot_dog": 32, "hot_fac": 32, "hot_pepp": 32, "hotdog": 32, "hotel": [32, 167, 375], "hotspr": 32, "hourglass": 32, "hourglass_flowing_sand": 32, "house_abandon": 32, "house_build": 32, "house_with_garden": 32, "hr": 32, "ht": 32, "hu": [32, 348, 349, 366], "hug": 32, "hugging_fac": 32, "hungari": 32, "hush": 32, "hut": 32, "ic": [32, 403, 484, 513, 1175], "ice_cream": 32, "ice_cub": 32, "ice_hockei": 32, "ice_sk": 32, "icecream": 32, "iceland": 32, "id": [32, 42, 46, 108, 111, 112, 113, 114, 115, 116, 164, 167, 177, 181, 184, 194, 195, 205, 212, 218, 231, 234, 237, 244, 247, 248, 250, 257, 260, 264, 272, 275, 282, 288, 292, 296, 302, 307, 314, 319, 324, 330, 336, 340, 352, 473, 508, 509, 510, 522, 523, 524, 541, 789, 821, 823, 845, 852, 853, 858, 860, 869, 870, 871, 881, 888, 909, 911, 912, 923, 929, 931, 938, 957, 967, 1009, 1036, 1047, 1063, 1101, 1112, 1113, 1114, 1115, 1118, 1119, 1120, 1129, 1131, 1149, 1192], "ideograph_advantag": 32, "ie": 32, "il": [32, 172], "imp": 32, "inbox_trai": 32, "incoming_envelop": 32, "india": [32, 222, 271, 295, 317, 1123], "indonesia": 32, "infin": [32, 129, 201, 250, 323, 337, 1028, 1029], "information_desk_person": 32, "information_desk_person_tone1": 32, "information_desk_person_tone2": 32, "information_desk_person_tone3": 32, "information_desk_person_tone4": 32, "information_desk_person_tone5": 32, "\u2139": 32, "information_sourc": 32, "interrobang": 32, "iphon": 32, "iq": 32, "ir": [32, 885], "iran": 32, "iraq": 32, "ireland": 32, "island": 32, "isle_of_man": 32, "israel": [32, 222, 271, 1123], "itali": 32, "izakaya_lantern": 32, "jack_o_lantern": 32, "jamaica": 32, "japan": 32, "japanese_castl": 32, "japanese_goblin": 32, "japanese_ogr": 32, "jean": 32, "jersei": 32, "jigsaw": 32, "jm": 32, "jo": [32, 205, 218, 231, 234, 244, 247, 250, 254, 257, 296, 302, 330], "jordan": 32, "joi": 32, "joy_cat": 32, "joystick": 32, "jp": 32, "judg": 32, "judge_dark_skin_ton": 32, "judge_light_skin_ton": 32, "judge_medium_dark_skin_ton": 32, "judge_medium_light_skin_ton": 32, "judge_medium_skin_ton": 32, "judge_tone1": 32, "judge_tone2": 32, "judge_tone3": 32, "judge_tone4": 32, "judge_tone5": 32, "juggler": 32, "juggler_tone1": 32, "juggler_tone2": 32, "juggler_tone3": 32, "juggler_tone4": 32, "juggler_tone5": 32, "juggl": 32, "juggling_tone1": 32, "juggling_tone2": 32, "juggling_tone3": 32, "juggling_tone4": 32, "juggling_tone5": 32, "kaaba": 32, "kangaroo": 32, "karate_uniform": 32, "kayak": 32, "kazakhstan": 32, "ke": 32, "kenya": 32, "key2": 32, "keyboard": [32, 357, 867, 917], "keycap_ten": 32, "kg": 32, "kh": 32, "ki": [32, 203], "kick_scoot": 32, "kimono": 32, "kiribati": 32, "kiss_dark_skin_ton": 32, "kiss_light_skin_ton": 32, "kiss_man_man_dark_skin_ton": 32, "kiss_man_man_dark_skin_tone_light_skin_ton": 32, "kiss_man_man_dark_skin_tone_medium_dark_skin_ton": 32, "kiss_man_man_dark_skin_tone_medium_light_skin_ton": 32, "kiss_man_man_dark_skin_tone_medium_skin_ton": 32, "kiss_man_man_light_skin_ton": 32, "kiss_man_man_light_skin_tone_dark_skin_ton": 32, "kiss_man_man_light_skin_tone_medium_dark_skin_ton": 32, "kiss_man_man_light_skin_tone_medium_light_skin_ton": 32, "kiss_man_man_light_skin_tone_medium_skin_ton": 32, "kiss_man_man_medium_dark_skin_ton": 32, "kiss_man_man_medium_dark_skin_tone_dark_skin_ton": 32, "kiss_man_man_medium_dark_skin_tone_light_skin_ton": 32, "kiss_man_man_medium_dark_skin_tone_medium_light_skin_ton": 32, "kiss_man_man_medium_dark_skin_tone_medium_skin_ton": 32, "kiss_man_man_medium_light_skin_ton": 32, "kiss_man_man_medium_light_skin_tone_dark_skin_ton": 32, "kiss_man_man_medium_light_skin_tone_light_skin_ton": 32, "kiss_man_man_medium_light_skin_tone_medium_dark_skin_ton": 32, "kiss_man_man_medium_light_skin_tone_medium_skin_ton": 32, "kiss_man_man_medium_skin_ton": 32, "kiss_man_man_medium_skin_tone_dark_skin_ton": 32, "kiss_man_man_medium_skin_tone_light_skin_ton": 32, "kiss_man_man_medium_skin_tone_medium_dark_skin_ton": 32, "kiss_man_man_medium_skin_tone_medium_light_skin_ton": 32, "kiss_man_man_tone1": 32, "kiss_man_man_tone1_tone2": 32, "kiss_man_man_tone1_tone3": 32, "kiss_man_man_tone1_tone4": 32, "kiss_man_man_tone1_tone5": 32, "kiss_man_man_tone2": 32, "kiss_man_man_tone2_tone1": 32, "kiss_man_man_tone2_tone3": 32, "kiss_man_man_tone2_tone4": 32, "kiss_man_man_tone2_tone5": 32, "kiss_man_man_tone3": 32, "kiss_man_man_tone3_tone1": 32, "kiss_man_man_tone3_tone2": 32, "kiss_man_man_tone3_tone4": 32, "kiss_man_man_tone3_tone5": 32, "kiss_man_man_tone4": 32, "kiss_man_man_tone4_tone1": 32, "kiss_man_man_tone4_tone2": 32, "kiss_man_man_tone4_tone3": 32, "kiss_man_man_tone4_tone5": 32, "kiss_man_man_tone5": 32, "kiss_man_man_tone5_tone1": 32, "kiss_man_man_tone5_tone2": 32, "kiss_man_man_tone5_tone3": 32, "kiss_man_man_tone5_tone4": 32, "kiss_medium_dark_skin_ton": 32, "kiss_medium_light_skin_ton": 32, "kiss_medium_skin_ton": 32, "kiss_mm": 32, "kiss_person_person_dark_skin_tone_light_skin_ton": 32, "kiss_person_person_dark_skin_tone_medium_dark_skin_ton": 32, "kiss_person_person_dark_skin_tone_medium_light_skin_ton": 32, "kiss_person_person_dark_skin_tone_medium_skin_ton": 32, "kiss_person_person_light_skin_tone_dark_skin_ton": 32, "kiss_person_person_light_skin_tone_medium_dark_skin_ton": 32, "kiss_person_person_light_skin_tone_medium_light_skin_ton": 32, "kiss_person_person_light_skin_tone_medium_skin_ton": 32, "kiss_person_person_medium_dark_skin_tone_dark_skin_ton": 32, "kiss_person_person_medium_dark_skin_tone_light_skin_ton": 32, "kiss_person_person_medium_dark_skin_tone_medium_light_skin_ton": 32, "kiss_person_person_medium_dark_skin_tone_medium_skin_ton": 32, "kiss_person_person_medium_light_skin_tone_dark_skin_ton": 32, "kiss_person_person_medium_light_skin_tone_light_skin_ton": 32, "kiss_person_person_medium_light_skin_tone_medium_dark_skin_ton": 32, "kiss_person_person_medium_light_skin_tone_medium_skin_ton": 32, "kiss_person_person_medium_skin_tone_dark_skin_ton": 32, "kiss_person_person_medium_skin_tone_light_skin_ton": 32, "kiss_person_person_medium_skin_tone_medium_dark_skin_ton": 32, "kiss_person_person_medium_skin_tone_medium_light_skin_ton": 32, "kiss_person_person_tone1_tone2": 32, "kiss_person_person_tone1_tone3": 32, "kiss_person_person_tone1_tone4": 32, "kiss_person_person_tone1_tone5": 32, "kiss_person_person_tone2_tone1": 32, "kiss_person_person_tone2_tone3": 32, "kiss_person_person_tone2_tone4": 32, "kiss_person_person_tone2_tone5": 32, "kiss_person_person_tone3_tone1": 32, "kiss_person_person_tone3_tone2": 32, "kiss_person_person_tone3_tone4": 32, "kiss_person_person_tone3_tone5": 32, "kiss_person_person_tone4_tone1": 32, "kiss_person_person_tone4_tone2": 32, "kiss_person_person_tone4_tone3": 32, "kiss_person_person_tone4_tone5": 32, "kiss_person_person_tone5_tone1": 32, "kiss_person_person_tone5_tone2": 32, "kiss_person_person_tone5_tone3": 32, "kiss_person_person_tone5_tone4": 32, "kiss_tone1": 32, "kiss_tone2": 32, "kiss_tone3": 32, "kiss_tone4": 32, "kiss_tone5": 32, "kiss_woman_man": 32, "kiss_woman_man_dark_skin_ton": 32, "kiss_woman_man_dark_skin_tone_light_skin_ton": 32, "kiss_woman_man_dark_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_man_dark_skin_tone_medium_light_skin_ton": 32, "kiss_woman_man_dark_skin_tone_medium_skin_ton": 32, "kiss_woman_man_light_skin_ton": 32, "kiss_woman_man_light_skin_tone_dark_skin_ton": 32, "kiss_woman_man_light_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_man_light_skin_tone_medium_light_skin_ton": 32, "kiss_woman_man_light_skin_tone_medium_skin_ton": 32, "kiss_woman_man_medium_dark_skin_ton": 32, "kiss_woman_man_medium_dark_skin_tone_dark_skin_ton": 32, "kiss_woman_man_medium_dark_skin_tone_light_skin_ton": 32, "kiss_woman_man_medium_dark_skin_tone_medium_light_skin_ton": 32, "kiss_woman_man_medium_dark_skin_tone_medium_skin_ton": 32, "kiss_woman_man_medium_light_skin_ton": 32, "kiss_woman_man_medium_light_skin_tone_dark_skin_ton": 32, "kiss_woman_man_medium_light_skin_tone_light_skin_ton": 32, "kiss_woman_man_medium_light_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_man_medium_light_skin_tone_medium_skin_ton": 32, "kiss_woman_man_medium_skin_ton": 32, "kiss_woman_man_medium_skin_tone_dark_skin_ton": 32, "kiss_woman_man_medium_skin_tone_light_skin_ton": 32, "kiss_woman_man_medium_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_man_medium_skin_tone_medium_light_skin_ton": 32, "kiss_woman_man_tone1": 32, "kiss_woman_man_tone1_tone2": 32, "kiss_woman_man_tone1_tone3": 32, "kiss_woman_man_tone1_tone4": 32, "kiss_woman_man_tone1_tone5": 32, "kiss_woman_man_tone2": 32, "kiss_woman_man_tone2_tone1": 32, "kiss_woman_man_tone2_tone3": 32, "kiss_woman_man_tone2_tone4": 32, "kiss_woman_man_tone2_tone5": 32, "kiss_woman_man_tone3": 32, "kiss_woman_man_tone3_tone1": 32, "kiss_woman_man_tone3_tone2": 32, "kiss_woman_man_tone3_tone4": 32, "kiss_woman_man_tone3_tone5": 32, "kiss_woman_man_tone4": 32, "kiss_woman_man_tone4_tone1": 32, "kiss_woman_man_tone4_tone2": 32, "kiss_woman_man_tone4_tone3": 32, "kiss_woman_man_tone4_tone5": 32, "kiss_woman_man_tone5": 32, "kiss_woman_man_tone5_tone1": 32, "kiss_woman_man_tone5_tone2": 32, "kiss_woman_man_tone5_tone3": 32, "kiss_woman_man_tone5_tone4": 32, "kiss_woman_woman_dark_skin_ton": 32, "kiss_woman_woman_dark_skin_tone_light_skin_ton": 32, "kiss_woman_woman_dark_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_woman_dark_skin_tone_medium_light_skin_ton": 32, "kiss_woman_woman_dark_skin_tone_medium_skin_ton": 32, "kiss_woman_woman_light_skin_ton": 32, "kiss_woman_woman_light_skin_tone_dark_skin_ton": 32, "kiss_woman_woman_light_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_woman_light_skin_tone_medium_light_skin_ton": 32, "kiss_woman_woman_light_skin_tone_medium_skin_ton": 32, "kiss_woman_woman_medium_dark_skin_ton": 32, "kiss_woman_woman_medium_dark_skin_tone_dark_skin_ton": 32, "kiss_woman_woman_medium_dark_skin_tone_light_skin_ton": 32, "kiss_woman_woman_medium_dark_skin_tone_medium_light_skin_ton": 32, "kiss_woman_woman_medium_dark_skin_tone_medium_skin_ton": 32, "kiss_woman_woman_medium_light_skin_ton": 32, "kiss_woman_woman_medium_light_skin_tone_dark_skin_ton": 32, "kiss_woman_woman_medium_light_skin_tone_light_skin_ton": 32, "kiss_woman_woman_medium_light_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_woman_medium_light_skin_tone_medium_skin_ton": 32, "kiss_woman_woman_medium_skin_ton": 32, "kiss_woman_woman_medium_skin_tone_dark_skin_ton": 32, "kiss_woman_woman_medium_skin_tone_light_skin_ton": 32, "kiss_woman_woman_medium_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_woman_medium_skin_tone_medium_light_skin_ton": 32, "kiss_woman_woman_tone1": 32, "kiss_woman_woman_tone1_tone2": 32, "kiss_woman_woman_tone1_tone3": 32, "kiss_woman_woman_tone1_tone4": 32, "kiss_woman_woman_tone1_tone5": 32, "kiss_woman_woman_tone2": 32, "kiss_woman_woman_tone2_tone1": 32, "kiss_woman_woman_tone2_tone3": 32, "kiss_woman_woman_tone2_tone4": 32, "kiss_woman_woman_tone2_tone5": 32, "kiss_woman_woman_tone3": 32, "kiss_woman_woman_tone3_tone1": 32, "kiss_woman_woman_tone3_tone2": 32, "kiss_woman_woman_tone3_tone4": 32, "kiss_woman_woman_tone3_tone5": 32, "kiss_woman_woman_tone4": 32, "kiss_woman_woman_tone4_tone1": 32, "kiss_woman_woman_tone4_tone2": 32, "kiss_woman_woman_tone4_tone3": 32, "kiss_woman_woman_tone4_tone5": 32, "kiss_woman_woman_tone5": 32, "kiss_woman_woman_tone5_tone1": 32, "kiss_woman_woman_tone5_tone2": 32, "kiss_woman_woman_tone5_tone3": 32, "kiss_woman_woman_tone5_tone4": 32, "kiss_ww": 32, "kissing_cat": 32, "kissing_closed_ey": 32, "kissing_smiling_ey": 32, "kite": 32, "kiwi": 32, "kiwi_fruit": 32, "kiwifruit": 32, "km": [32, 183, 185], "kn": 32, "knife": [32, 784, 951, 1176], "knot": 32, "koala": 32, "koko": 32, "korea": 32, "kosovo": 32, "kp": 32, "kr": 32, "kuwait": 32, "kw": [32, 231, 237, 247, 250], "ky": 32, "kyrgyzstan": 32, "kz": 32, "la": 32, "lab_coat": 32, "label": [32, 39, 40, 58, 183, 185, 232, 245, 259, 262, 295, 301, 414, 419, 426, 432, 436, 439, 443, 446, 452, 456, 461, 462, 683, 684, 722, 775, 777, 778, 805, 1123, 1130, 1142, 1145], "lacross": 32, "ladder": 32, "lady_beetl": 32, "lao": 32, "large_blue_circl": 32, "large_blue_diamond": 32, "large_orange_diamond": 32, "last_quarter_moon": 32, "last_quarter_moon_with_fac": 32, "latin_cross": 32, "latvia": 32, "laugh": 32, "lb": 32, "lc": [32, 199], "leafy_green": 32, "leav": [32, 49, 66, 119, 159, 162, 163, 169, 172, 202, 231, 254, 291, 368, 586, 588, 597, 598, 613, 615, 616, 773, 776, 788, 793, 803, 825, 930, 955, 975, 1063, 1136], "lebanon": 32, "ledger": 32, "left_facing_fist": 32, "left_facing_fist_tone1": 32, "left_facing_fist_tone2": 32, "left_facing_fist_tone3": 32, "left_facing_fist_tone4": 32, "left_facing_fist_tone5": 32, "left_fist": 32, "left_fist_tone1": 32, "left_fist_tone2": 32, "left_fist_tone3": 32, "left_fist_tone4": 32, "left_fist_tone5": 32, "left_luggag": 32, "left_right_arrow": 32, "left_speech_bubbl": 32, "leftwards_arrow_with_hook": 32, "leg": [32, 35], "leg_dark_skin_ton": 32, "leg_light_skin_ton": 32, "leg_medium_dark_skin_ton": 32, "leg_medium_light_skin_ton": 32, "leg_medium_skin_ton": 32, "leg_tone1": 32, "leg_tone2": 32, "leg_tone3": 32, "leg_tone4": 32, "leg_tone5": 32, "lemon": 32, "leo": [32, 348, 349, 366], "leopard": 32, "lesotho": 32, "level_slid": 32, "levit": 32, "levitate_tone1": 32, "levitate_tone2": 32, "levitate_tone3": 32, "levitate_tone4": 32, "levitate_tone5": 32, "liar": 32, "liberia": 32, "libra": 32, "libya": 32, "liechtenstein": 32, "lifter": 32, "lifter_tone1": 32, "lifter_tone2": 32, "lifter_tone3": 32, "lifter_tone4": 32, "lifter_tone5": 32, "light_rail": 32, "linked_paperclip": 32, "lion": 32, "lion_fac": 32, "lip": 32, "lipstick": 32, "lithuania": 32, "lizard": 32, "lk": 32, "llama": 32, "lobster": 32, "lock": [32, 162, 164, 194, 198, 231, 237, 240, 247, 250, 266, 267, 269, 278, 299, 312, 313, 326, 330, 366, 440, 480, 560, 743, 749, 752, 754, 755, 773, 777, 778, 815, 823, 828, 833, 862, 938, 970, 975, 977, 985, 992, 1033, 1123, 1176, 1188, 1191], "lock_with_ink_pen": 32, "lollipop": 32, "long_drum": 32, "loud_sound": 32, "loudspeak": 32, "love_hotel": 32, "love_lett": 32, "love_you_gestur": 32, "love_you_gesture_dark_skin_ton": 32, "love_you_gesture_light_skin_ton": 32, "love_you_gesture_medium_dark_skin_ton": 32, "love_you_gesture_medium_light_skin_ton": 32, "love_you_gesture_medium_skin_ton": 32, "love_you_gesture_tone1": 32, "love_you_gesture_tone2": 32, "love_you_gesture_tone3": 32, "love_you_gesture_tone4": 32, "love_you_gesture_tone5": 32, "low_bright": 32, "lower_left_ballpoint_pen": 32, "lower_left_crayon": 32, "lower_left_fountain_pen": 32, "lower_left_paintbrush": 32, "lr": 32, "lu": 32, "luggag": 32, "lung": 32, "luxembourg": 32, "lv": 32, "ly": 32, "lying_fac": 32, "ma": 32, "macau": 32, "macedonia": 32, "madagascar": 32, "mag": 32, "mag_right": 32, "mage": 32, "mage_dark_skin_ton": 32, "mage_light_skin_ton": 32, "mage_medium_dark_skin_ton": 32, "mage_medium_light_skin_ton": 32, "mage_medium_skin_ton": 32, "mage_tone1": 32, "mage_tone2": 32, "mage_tone3": 32, "mage_tone4": 32, "mage_tone5": 32, "magic_wand": 32, "magnet": 32, "mahjong": 32, "mailbox": 32, "mailbox_clos": 32, "mailbox_with_mail": 32, "mailbox_with_no_mail": 32, "malawi": 32, "malaysia": 32, "maldiv": 32, "male_danc": 32, "male_dancer_tone1": 32, "male_dancer_tone2": 32, "male_dancer_tone3": 32, "male_dancer_tone4": 32, "male_dancer_tone5": 32, "male_detect": 32, "male_sign": 32, "mali": 32, "malta": 32, "mammoth": 32, "man_artist": 32, "man_artist_dark_skin_ton": 32, "man_artist_light_skin_ton": 32, "man_artist_medium_dark_skin_ton": 32, "man_artist_medium_light_skin_ton": 32, "man_artist_medium_skin_ton": 32, "man_artist_tone1": 32, "man_artist_tone2": 32, "man_artist_tone3": 32, "man_artist_tone4": 32, "man_artist_tone5": 32, "man_astronaut": 32, "man_astronaut_dark_skin_ton": 32, "man_astronaut_light_skin_ton": 32, "man_astronaut_medium_dark_skin_ton": 32, "man_astronaut_medium_light_skin_ton": 32, "man_astronaut_medium_skin_ton": 32, "man_astronaut_tone1": 32, "man_astronaut_tone2": 32, "man_astronaut_tone3": 32, "man_astronaut_tone4": 32, "man_astronaut_tone5": 32, "man_bald": 32, "man_bald_dark_skin_ton": 32, "man_bald_light_skin_ton": 32, "man_bald_medium_dark_skin_ton": 32, "man_bald_medium_light_skin_ton": 32, "man_bald_medium_skin_ton": 32, "man_bald_tone1": 32, "man_bald_tone2": 32, "man_bald_tone3": 32, "man_bald_tone4": 32, "man_bald_tone5": 32, "man_beard": 32, "man_bik": 32, "man_biking_dark_skin_ton": 32, "man_biking_light_skin_ton": 32, "man_biking_medium_dark_skin_ton": 32, "man_biking_medium_light_skin_ton": 32, "man_biking_medium_skin_ton": 32, "man_biking_tone1": 32, "man_biking_tone2": 32, "man_biking_tone3": 32, "man_biking_tone4": 32, "man_biking_tone5": 32, "man_bouncing_bal": 32, "man_bouncing_ball_dark_skin_ton": 32, "man_bouncing_ball_light_skin_ton": 32, "man_bouncing_ball_medium_dark_skin_ton": 32, "man_bouncing_ball_medium_light_skin_ton": 32, "man_bouncing_ball_medium_skin_ton": 32, "man_bouncing_ball_tone1": 32, "man_bouncing_ball_tone2": 32, "man_bouncing_ball_tone3": 32, "man_bouncing_ball_tone4": 32, "man_bouncing_ball_tone5": 32, "man_bow": 32, "man_bowing_dark_skin_ton": 32, "man_bowing_light_skin_ton": 32, "man_bowing_medium_dark_skin_ton": 32, "man_bowing_medium_light_skin_ton": 32, "man_bowing_medium_skin_ton": 32, "man_bowing_tone1": 32, "man_bowing_tone2": 32, "man_bowing_tone3": 32, "man_bowing_tone4": 32, "man_bowing_tone5": 32, "man_cartwheel": 32, "man_cartwheeling_dark_skin_ton": 32, "man_cartwheeling_light_skin_ton": 32, "man_cartwheeling_medium_dark_skin_ton": 32, "man_cartwheeling_medium_light_skin_ton": 32, "man_cartwheeling_medium_skin_ton": 32, "man_cartwheeling_tone1": 32, "man_cartwheeling_tone2": 32, "man_cartwheeling_tone3": 32, "man_cartwheeling_tone4": 32, "man_cartwheeling_tone5": 32, "man_climb": 32, "man_climbing_dark_skin_ton": 32, "man_climbing_light_skin_ton": 32, "man_climbing_medium_dark_skin_ton": 32, "man_climbing_medium_light_skin_ton": 32, "man_climbing_medium_skin_ton": 32, "man_climbing_tone1": 32, "man_climbing_tone2": 32, "man_climbing_tone3": 32, "man_climbing_tone4": 32, "man_climbing_tone5": 32, "man_construction_work": 32, "man_construction_worker_dark_skin_ton": 32, "man_construction_worker_light_skin_ton": 32, "man_construction_worker_medium_dark_skin_ton": 32, "man_construction_worker_medium_light_skin_ton": 32, "man_construction_worker_medium_skin_ton": 32, "man_construction_worker_tone1": 32, "man_construction_worker_tone2": 32, "man_construction_worker_tone3": 32, "man_construction_worker_tone4": 32, "man_construction_worker_tone5": 32, "man_cook": 32, "man_cook_dark_skin_ton": 32, "man_cook_light_skin_ton": 32, "man_cook_medium_dark_skin_ton": 32, "man_cook_medium_light_skin_ton": 32, "man_cook_medium_skin_ton": 32, "man_cook_tone1": 32, "man_cook_tone2": 32, "man_cook_tone3": 32, "man_cook_tone4": 32, "man_cook_tone5": 32, "man_curly_hair": 32, "man_curly_haired_dark_skin_ton": 32, "man_curly_haired_light_skin_ton": 32, "man_curly_haired_medium_dark_skin_ton": 32, "man_curly_haired_medium_light_skin_ton": 32, "man_curly_haired_medium_skin_ton": 32, "man_curly_haired_tone1": 32, "man_curly_haired_tone2": 32, "man_curly_haired_tone3": 32, "man_curly_haired_tone4": 32, "man_curly_haired_tone5": 32, "man_danc": 32, "man_dancing_tone1": 32, "man_dancing_tone2": 32, "man_dancing_tone3": 32, "man_dancing_tone4": 32, "man_dancing_tone5": 32, "man_dark_skin_tone_beard": 32, "man_detect": 32, "man_detective_dark_skin_ton": 32, "man_detective_light_skin_ton": 32, "man_detective_medium_dark_skin_ton": 32, "man_detective_medium_light_skin_ton": 32, "man_detective_medium_skin_ton": 32, "man_detective_tone1": 32, "man_detective_tone2": 32, "man_detective_tone3": 32, "man_detective_tone4": 32, "man_detective_tone5": 32, "man_elf": 32, "man_elf_dark_skin_ton": 32, "man_elf_light_skin_ton": 32, "man_elf_medium_dark_skin_ton": 32, "man_elf_medium_light_skin_ton": 32, "man_elf_medium_skin_ton": 32, "man_elf_tone1": 32, "man_elf_tone2": 32, "man_elf_tone3": 32, "man_elf_tone4": 32, "man_elf_tone5": 32, "man_facepalm": 32, "man_facepalming_dark_skin_ton": 32, "man_facepalming_light_skin_ton": 32, "man_facepalming_medium_dark_skin_ton": 32, "man_facepalming_medium_light_skin_ton": 32, "man_facepalming_medium_skin_ton": 32, "man_facepalming_tone1": 32, "man_facepalming_tone2": 32, "man_facepalming_tone3": 32, "man_facepalming_tone4": 32, "man_facepalming_tone5": 32, "man_factory_work": 32, "man_factory_worker_dark_skin_ton": 32, "man_factory_worker_light_skin_ton": 32, "man_factory_worker_medium_dark_skin_ton": 32, "man_factory_worker_medium_light_skin_ton": 32, "man_factory_worker_medium_skin_ton": 32, "man_factory_worker_tone1": 32, "man_factory_worker_tone2": 32, "man_factory_worker_tone3": 32, "man_factory_worker_tone4": 32, "man_factory_worker_tone5": 32, "man_fairi": 32, "man_fairy_dark_skin_ton": 32, "man_fairy_light_skin_ton": 32, "man_fairy_medium_dark_skin_ton": 32, "man_fairy_medium_light_skin_ton": 32, "man_fairy_medium_skin_ton": 32, "man_fairy_tone1": 32, "man_fairy_tone2": 32, "man_fairy_tone3": 32, "man_fairy_tone4": 32, "man_fairy_tone5": 32, "man_farm": 32, "man_farmer_dark_skin_ton": 32, "man_farmer_light_skin_ton": 32, "man_farmer_medium_dark_skin_ton": 32, "man_farmer_medium_light_skin_ton": 32, "man_farmer_medium_skin_ton": 32, "man_farmer_tone1": 32, "man_farmer_tone2": 32, "man_farmer_tone3": 32, "man_farmer_tone4": 32, "man_farmer_tone5": 32, "man_feeding_babi": 32, "man_feeding_baby_dark_skin_ton": 32, "man_feeding_baby_light_skin_ton": 32, "man_feeding_baby_medium_dark_skin_ton": 32, "man_feeding_baby_medium_light_skin_ton": 32, "man_feeding_baby_medium_skin_ton": 32, "man_feeding_baby_tone1": 32, "man_feeding_baby_tone2": 32, "man_feeding_baby_tone3": 32, "man_feeding_baby_tone4": 32, "man_feeding_baby_tone5": 32, "man_firefight": 32, "man_firefighter_dark_skin_ton": 32, "man_firefighter_light_skin_ton": 32, "man_firefighter_medium_dark_skin_ton": 32, "man_firefighter_medium_light_skin_ton": 32, "man_firefighter_medium_skin_ton": 32, "man_firefighter_tone1": 32, "man_firefighter_tone2": 32, "man_firefighter_tone3": 32, "man_firefighter_tone4": 32, "man_firefighter_tone5": 32, "man_frown": 32, "man_frowning_dark_skin_ton": 32, "man_frowning_light_skin_ton": 32, "man_frowning_medium_dark_skin_ton": 32, "man_frowning_medium_light_skin_ton": 32, "man_frowning_medium_skin_ton": 32, "man_frowning_tone1": 32, "man_frowning_tone2": 32, "man_frowning_tone3": 32, "man_frowning_tone4": 32, "man_frowning_tone5": 32, "man_geni": 32, "man_gesturing_no": 32, "man_gesturing_no_dark_skin_ton": 32, "man_gesturing_no_light_skin_ton": 32, "man_gesturing_no_medium_dark_skin_ton": 32, "man_gesturing_no_medium_light_skin_ton": 32, "man_gesturing_no_medium_skin_ton": 32, "man_gesturing_no_tone1": 32, "man_gesturing_no_tone2": 32, "man_gesturing_no_tone3": 32, "man_gesturing_no_tone4": 32, "man_gesturing_no_tone5": 32, "man_gesturing_ok": 32, "man_gesturing_ok_dark_skin_ton": 32, "man_gesturing_ok_light_skin_ton": 32, "man_gesturing_ok_medium_dark_skin_ton": 32, "man_gesturing_ok_medium_light_skin_ton": 32, "man_gesturing_ok_medium_skin_ton": 32, "man_gesturing_ok_tone1": 32, "man_gesturing_ok_tone2": 32, "man_gesturing_ok_tone3": 32, "man_gesturing_ok_tone4": 32, "man_gesturing_ok_tone5": 32, "man_getting_face_massag": 32, "man_getting_face_massage_dark_skin_ton": 32, "man_getting_face_massage_light_skin_ton": 32, "man_getting_face_massage_medium_dark_skin_ton": 32, "man_getting_face_massage_medium_light_skin_ton": 32, "man_getting_face_massage_medium_skin_ton": 32, "man_getting_face_massage_tone1": 32, "man_getting_face_massage_tone2": 32, "man_getting_face_massage_tone3": 32, "man_getting_face_massage_tone4": 32, "man_getting_face_massage_tone5": 32, "man_getting_haircut": 32, "man_getting_haircut_dark_skin_ton": 32, "man_getting_haircut_light_skin_ton": 32, "man_getting_haircut_medium_dark_skin_ton": 32, "man_getting_haircut_medium_light_skin_ton": 32, "man_getting_haircut_medium_skin_ton": 32, "man_getting_haircut_tone1": 32, "man_getting_haircut_tone2": 32, "man_getting_haircut_tone3": 32, "man_getting_haircut_tone4": 32, "man_getting_haircut_tone5": 32, "man_golf": 32, "man_golfing_dark_skin_ton": 32, "man_golfing_light_skin_ton": 32, "man_golfing_medium_dark_skin_ton": 32, "man_golfing_medium_light_skin_ton": 32, "man_golfing_medium_skin_ton": 32, "man_golfing_tone1": 32, "man_golfing_tone2": 32, "man_golfing_tone3": 32, "man_golfing_tone4": 32, "man_golfing_tone5": 32, "man_guard": 32, "man_guard_dark_skin_ton": 32, "man_guard_light_skin_ton": 32, "man_guard_medium_dark_skin_ton": 32, "man_guard_medium_light_skin_ton": 32, "man_guard_medium_skin_ton": 32, "man_guard_tone1": 32, "man_guard_tone2": 32, "man_guard_tone3": 32, "man_guard_tone4": 32, "man_guard_tone5": 32, "man_health_work": 32, "man_health_worker_dark_skin_ton": 32, "man_health_worker_light_skin_ton": 32, "man_health_worker_medium_dark_skin_ton": 32, "man_health_worker_medium_light_skin_ton": 32, "man_health_worker_medium_skin_ton": 32, "man_health_worker_tone1": 32, "man_health_worker_tone2": 32, "man_health_worker_tone3": 32, "man_health_worker_tone4": 32, "man_health_worker_tone5": 32, "man_in_business_suit_levit": 32, "man_in_business_suit_levitating_dark_skin_ton": 32, "man_in_business_suit_levitating_light_skin_ton": 32, "man_in_business_suit_levitating_medium_dark_skin_ton": 32, "man_in_business_suit_levitating_medium_light_skin_ton": 32, "man_in_business_suit_levitating_medium_skin_ton": 32, "man_in_business_suit_levitating_tone1": 32, "man_in_business_suit_levitating_tone2": 32, "man_in_business_suit_levitating_tone3": 32, "man_in_business_suit_levitating_tone4": 32, "man_in_business_suit_levitating_tone5": 32, "man_in_lotus_posit": 32, "man_in_lotus_position_dark_skin_ton": 32, "man_in_lotus_position_light_skin_ton": 32, "man_in_lotus_position_medium_dark_skin_ton": 32, "man_in_lotus_position_medium_light_skin_ton": 32, "man_in_lotus_position_medium_skin_ton": 32, "man_in_lotus_position_tone1": 32, "man_in_lotus_position_tone2": 32, "man_in_lotus_position_tone3": 32, "man_in_lotus_position_tone4": 32, "man_in_lotus_position_tone5": 32, "man_in_manual_wheelchair": 32, "man_in_manual_wheelchair_dark_skin_ton": 32, "man_in_manual_wheelchair_light_skin_ton": 32, "man_in_manual_wheelchair_medium_dark_skin_ton": 32, "man_in_manual_wheelchair_medium_light_skin_ton": 32, "man_in_manual_wheelchair_medium_skin_ton": 32, "man_in_manual_wheelchair_tone1": 32, "man_in_manual_wheelchair_tone2": 32, "man_in_manual_wheelchair_tone3": 32, "man_in_manual_wheelchair_tone4": 32, "man_in_manual_wheelchair_tone5": 32, "man_in_motorized_wheelchair": 32, "man_in_motorized_wheelchair_dark_skin_ton": 32, "man_in_motorized_wheelchair_light_skin_ton": 32, "man_in_motorized_wheelchair_medium_dark_skin_ton": 32, "man_in_motorized_wheelchair_medium_light_skin_ton": 32, "man_in_motorized_wheelchair_medium_skin_ton": 32, "man_in_motorized_wheelchair_tone1": 32, "man_in_motorized_wheelchair_tone2": 32, "man_in_motorized_wheelchair_tone3": 32, "man_in_motorized_wheelchair_tone4": 32, "man_in_motorized_wheelchair_tone5": 32, "man_in_steamy_room": 32, "man_in_steamy_room_dark_skin_ton": 32, "man_in_steamy_room_light_skin_ton": 32, "man_in_steamy_room_medium_dark_skin_ton": 32, "man_in_steamy_room_medium_light_skin_ton": 32, "man_in_steamy_room_medium_skin_ton": 32, "man_in_steamy_room_tone1": 32, "man_in_steamy_room_tone2": 32, "man_in_steamy_room_tone3": 32, "man_in_steamy_room_tone4": 32, "man_in_steamy_room_tone5": 32, "man_in_tuxedo": 32, "man_in_tuxedo_dark_skin_ton": 32, "man_in_tuxedo_light_skin_ton": 32, "man_in_tuxedo_medium_dark_skin_ton": 32, "man_in_tuxedo_medium_light_skin_ton": 32, "man_in_tuxedo_medium_skin_ton": 32, "man_in_tuxedo_tone1": 32, "man_in_tuxedo_tone2": 32, "man_in_tuxedo_tone3": 32, "man_in_tuxedo_tone4": 32, "man_in_tuxedo_tone5": 32, "man_judg": 32, "man_judge_dark_skin_ton": 32, "man_judge_light_skin_ton": 32, "man_judge_medium_dark_skin_ton": 32, "man_judge_medium_light_skin_ton": 32, "man_judge_medium_skin_ton": 32, "man_judge_tone1": 32, "man_judge_tone2": 32, "man_judge_tone3": 32, "man_judge_tone4": 32, "man_judge_tone5": 32, "man_juggl": 32, "man_juggling_dark_skin_ton": 32, "man_juggling_light_skin_ton": 32, "man_juggling_medium_dark_skin_ton": 32, "man_juggling_medium_light_skin_ton": 32, "man_juggling_medium_skin_ton": 32, "man_juggling_tone1": 32, "man_juggling_tone2": 32, "man_juggling_tone3": 32, "man_juggling_tone4": 32, "man_juggling_tone5": 32, "man_kneel": 32, "man_kneeling_dark_skin_ton": 32, "man_kneeling_light_skin_ton": 32, "man_kneeling_medium_dark_skin_ton": 32, "man_kneeling_medium_light_skin_ton": 32, "man_kneeling_medium_skin_ton": 32, "man_kneeling_tone1": 32, "man_kneeling_tone2": 32, "man_kneeling_tone3": 32, "man_kneeling_tone4": 32, "man_kneeling_tone5": 32, "man_lifting_weight": 32, "man_lifting_weights_dark_skin_ton": 32, "man_lifting_weights_light_skin_ton": 32, "man_lifting_weights_medium_dark_skin_ton": 32, "man_lifting_weights_medium_light_skin_ton": 32, "man_lifting_weights_medium_skin_ton": 32, "man_lifting_weights_tone1": 32, "man_lifting_weights_tone2": 32, "man_lifting_weights_tone3": 32, "man_lifting_weights_tone4": 32, "man_lifting_weights_tone5": 32, "man_light_skin_tone_beard": 32, "man_mag": 32, "man_mage_dark_skin_ton": 32, "man_mage_light_skin_ton": 32, "man_mage_medium_dark_skin_ton": 32, "man_mage_medium_light_skin_ton": 32, "man_mage_medium_skin_ton": 32, "man_mage_tone1": 32, "man_mage_tone2": 32, "man_mage_tone3": 32, "man_mage_tone4": 32, "man_mage_tone5": 32, "man_mechan": 32, "man_mechanic_dark_skin_ton": 32, "man_mechanic_light_skin_ton": 32, "man_mechanic_medium_dark_skin_ton": 32, "man_mechanic_medium_light_skin_ton": 32, "man_mechanic_medium_skin_ton": 32, "man_mechanic_tone1": 32, "man_mechanic_tone2": 32, "man_mechanic_tone3": 32, "man_mechanic_tone4": 32, "man_mechanic_tone5": 32, "man_medium_dark_skin_tone_beard": 32, "man_medium_light_skin_tone_beard": 32, "man_medium_skin_tone_beard": 32, "man_mountain_bik": 32, "man_mountain_biking_dark_skin_ton": 32, "man_mountain_biking_light_skin_ton": 32, "man_mountain_biking_medium_dark_skin_ton": 32, "man_mountain_biking_medium_light_skin_ton": 32, "man_mountain_biking_medium_skin_ton": 32, "man_mountain_biking_tone1": 32, "man_mountain_biking_tone2": 32, "man_mountain_biking_tone3": 32, "man_mountain_biking_tone4": 32, "man_mountain_biking_tone5": 32, "man_office_work": 32, "man_office_worker_dark_skin_ton": 32, "man_office_worker_light_skin_ton": 32, "man_office_worker_medium_dark_skin_ton": 32, "man_office_worker_medium_light_skin_ton": 32, "man_office_worker_medium_skin_ton": 32, "man_office_worker_tone1": 32, "man_office_worker_tone2": 32, "man_office_worker_tone3": 32, "man_office_worker_tone4": 32, "man_office_worker_tone5": 32, "man_pilot": 32, "man_pilot_dark_skin_ton": 32, "man_pilot_light_skin_ton": 32, "man_pilot_medium_dark_skin_ton": 32, "man_pilot_medium_light_skin_ton": 32, "man_pilot_medium_skin_ton": 32, "man_pilot_tone1": 32, "man_pilot_tone2": 32, "man_pilot_tone3": 32, "man_pilot_tone4": 32, "man_pilot_tone5": 32, "man_playing_handbal": 32, "man_playing_handball_dark_skin_ton": 32, "man_playing_handball_light_skin_ton": 32, "man_playing_handball_medium_dark_skin_ton": 32, "man_playing_handball_medium_light_skin_ton": 32, "man_playing_handball_medium_skin_ton": 32, "man_playing_handball_tone1": 32, "man_playing_handball_tone2": 32, "man_playing_handball_tone3": 32, "man_playing_handball_tone4": 32, "man_playing_handball_tone5": 32, "man_playing_water_polo": 32, "man_playing_water_polo_dark_skin_ton": 32, "man_playing_water_polo_light_skin_ton": 32, "man_playing_water_polo_medium_dark_skin_ton": 32, "man_playing_water_polo_medium_light_skin_ton": 32, "man_playing_water_polo_medium_skin_ton": 32, "man_playing_water_polo_tone1": 32, "man_playing_water_polo_tone2": 32, "man_playing_water_polo_tone3": 32, "man_playing_water_polo_tone4": 32, "man_playing_water_polo_tone5": 32, "man_police_offic": 32, "man_police_officer_dark_skin_ton": 32, "man_police_officer_light_skin_ton": 32, "man_police_officer_medium_dark_skin_ton": 32, "man_police_officer_medium_light_skin_ton": 32, "man_police_officer_medium_skin_ton": 32, "man_police_officer_tone1": 32, "man_police_officer_tone2": 32, "man_police_officer_tone3": 32, "man_police_officer_tone4": 32, "man_police_officer_tone5": 32, "man_pout": 32, "man_pouting_dark_skin_ton": 32, "man_pouting_light_skin_ton": 32, "man_pouting_medium_dark_skin_ton": 32, "man_pouting_medium_light_skin_ton": 32, "man_pouting_medium_skin_ton": 32, "man_pouting_tone1": 32, "man_pouting_tone2": 32, "man_pouting_tone3": 32, "man_pouting_tone4": 32, "man_pouting_tone5": 32, "man_raising_hand": 32, "man_raising_hand_dark_skin_ton": 32, "man_raising_hand_light_skin_ton": 32, "man_raising_hand_medium_dark_skin_ton": 32, "man_raising_hand_medium_light_skin_ton": 32, "man_raising_hand_medium_skin_ton": 32, "man_raising_hand_tone1": 32, "man_raising_hand_tone2": 32, "man_raising_hand_tone3": 32, "man_raising_hand_tone4": 32, "man_raising_hand_tone5": 32, "man_red_hair": 32, "man_red_haired_dark_skin_ton": 32, "man_red_haired_light_skin_ton": 32, "man_red_haired_medium_dark_skin_ton": 32, "man_red_haired_medium_light_skin_ton": 32, "man_red_haired_medium_skin_ton": 32, "man_red_haired_tone1": 32, "man_red_haired_tone2": 32, "man_red_haired_tone3": 32, "man_red_haired_tone4": 32, "man_red_haired_tone5": 32, "man_rowing_boat": 32, "man_rowing_boat_dark_skin_ton": 32, "man_rowing_boat_light_skin_ton": 32, "man_rowing_boat_medium_dark_skin_ton": 32, "man_rowing_boat_medium_light_skin_ton": 32, "man_rowing_boat_medium_skin_ton": 32, "man_rowing_boat_tone1": 32, "man_rowing_boat_tone2": 32, "man_rowing_boat_tone3": 32, "man_rowing_boat_tone4": 32, "man_rowing_boat_tone5": 32, "man_run": 32, "man_running_dark_skin_ton": 32, "man_running_light_skin_ton": 32, "man_running_medium_dark_skin_ton": 32, "man_running_medium_light_skin_ton": 32, "man_running_medium_skin_ton": 32, "man_running_tone1": 32, "man_running_tone2": 32, "man_running_tone3": 32, "man_running_tone4": 32, "man_running_tone5": 32, "man_scientist": 32, "man_scientist_dark_skin_ton": 32, "man_scientist_light_skin_ton": 32, "man_scientist_medium_dark_skin_ton": 32, "man_scientist_medium_light_skin_ton": 32, "man_scientist_medium_skin_ton": 32, "man_scientist_tone1": 32, "man_scientist_tone2": 32, "man_scientist_tone3": 32, "man_scientist_tone4": 32, "man_scientist_tone5": 32, "man_shrug": 32, "man_shrugging_dark_skin_ton": 32, "man_shrugging_light_skin_ton": 32, "man_shrugging_medium_dark_skin_ton": 32, "man_shrugging_medium_light_skin_ton": 32, "man_shrugging_medium_skin_ton": 32, "man_shrugging_tone1": 32, "man_shrugging_tone2": 32, "man_shrugging_tone3": 32, "man_shrugging_tone4": 32, "man_shrugging_tone5": 32, "man_sing": 32, "man_singer_dark_skin_ton": 32, "man_singer_light_skin_ton": 32, "man_singer_medium_dark_skin_ton": 32, "man_singer_medium_light_skin_ton": 32, "man_singer_medium_skin_ton": 32, "man_singer_tone1": 32, "man_singer_tone2": 32, "man_singer_tone3": 32, "man_singer_tone4": 32, "man_singer_tone5": 32, "man_stand": 32, "man_standing_dark_skin_ton": 32, "man_standing_light_skin_ton": 32, "man_standing_medium_dark_skin_ton": 32, "man_standing_medium_light_skin_ton": 32, "man_standing_medium_skin_ton": 32, "man_standing_tone1": 32, "man_standing_tone2": 32, "man_standing_tone3": 32, "man_standing_tone4": 32, "man_standing_tone5": 32, "man_stud": 32, "man_student_dark_skin_ton": 32, "man_student_light_skin_ton": 32, "man_student_medium_dark_skin_ton": 32, "man_student_medium_light_skin_ton": 32, "man_student_medium_skin_ton": 32, "man_student_tone1": 32, "man_student_tone2": 32, "man_student_tone3": 32, "man_student_tone4": 32, "man_student_tone5": 32, "man_superhero": 32, "man_superhero_dark_skin_ton": 32, "man_superhero_light_skin_ton": 32, "man_superhero_medium_dark_skin_ton": 32, "man_superhero_medium_light_skin_ton": 32, "man_superhero_medium_skin_ton": 32, "man_superhero_tone1": 32, "man_superhero_tone2": 32, "man_superhero_tone3": 32, "man_superhero_tone4": 32, "man_superhero_tone5": 32, "man_supervillain": 32, "man_supervillain_dark_skin_ton": 32, "man_supervillain_light_skin_ton": 32, "man_supervillain_medium_dark_skin_ton": 32, "man_supervillain_medium_light_skin_ton": 32, "man_supervillain_medium_skin_ton": 32, "man_supervillain_tone1": 32, "man_supervillain_tone2": 32, "man_supervillain_tone3": 32, "man_supervillain_tone4": 32, "man_supervillain_tone5": 32, "man_surf": 32, "man_surfing_dark_skin_ton": 32, "man_surfing_light_skin_ton": 32, "man_surfing_medium_dark_skin_ton": 32, "man_surfing_medium_light_skin_ton": 32, "man_surfing_medium_skin_ton": 32, "man_surfing_tone1": 32, "man_surfing_tone2": 32, "man_surfing_tone3": 32, "man_surfing_tone4": 32, "man_surfing_tone5": 32, "man_swim": 32, "man_swimming_dark_skin_ton": 32, "man_swimming_light_skin_ton": 32, "man_swimming_medium_dark_skin_ton": 32, "man_swimming_medium_light_skin_ton": 32, "man_swimming_medium_skin_ton": 32, "man_swimming_tone1": 32, "man_swimming_tone2": 32, "man_swimming_tone3": 32, "man_swimming_tone4": 32, "man_swimming_tone5": 32, "man_teach": 32, "man_teacher_dark_skin_ton": 32, "man_teacher_light_skin_ton": 32, "man_teacher_medium_dark_skin_ton": 32, "man_teacher_medium_light_skin_ton": 32, "man_teacher_medium_skin_ton": 32, "man_teacher_tone1": 32, "man_teacher_tone2": 32, "man_teacher_tone3": 32, "man_teacher_tone4": 32, "man_teacher_tone5": 32, "man_technologist": 32, "man_technologist_dark_skin_ton": 32, "man_technologist_light_skin_ton": 32, "man_technologist_medium_dark_skin_ton": 32, "man_technologist_medium_light_skin_ton": 32, "man_technologist_medium_skin_ton": 32, "man_technologist_tone1": 32, "man_technologist_tone2": 32, "man_technologist_tone3": 32, "man_technologist_tone4": 32, "man_technologist_tone5": 32, "man_tipping_hand": 32, "man_tipping_hand_dark_skin_ton": 32, "man_tipping_hand_light_skin_ton": 32, "man_tipping_hand_medium_dark_skin_ton": 32, "man_tipping_hand_medium_light_skin_ton": 32, "man_tipping_hand_medium_skin_ton": 32, "man_tipping_hand_tone1": 32, "man_tipping_hand_tone2": 32, "man_tipping_hand_tone3": 32, "man_tipping_hand_tone4": 32, "man_tipping_hand_tone5": 32, "man_tone1": 32, "man_tone1_beard": 32, "man_tone2": 32, "man_tone2_beard": 32, "man_tone3": 32, "man_tone3_beard": 32, "man_tone4": 32, "man_tone4_beard": 32, "man_tone5": 32, "man_tone5_beard": 32, "man_vampir": 32, "man_vampire_dark_skin_ton": 32, "man_vampire_light_skin_ton": 32, "man_vampire_medium_dark_skin_ton": 32, "man_vampire_medium_light_skin_ton": 32, "man_vampire_medium_skin_ton": 32, "man_vampire_tone1": 32, "man_vampire_tone2": 32, "man_vampire_tone3": 32, "man_vampire_tone4": 32, "man_vampire_tone5": 32, "man_walk": 32, "man_walking_dark_skin_ton": 32, "man_walking_light_skin_ton": 32, "man_walking_medium_dark_skin_ton": 32, "man_walking_medium_light_skin_ton": 32, "man_walking_medium_skin_ton": 32, "man_walking_tone1": 32, "man_walking_tone2": 32, "man_walking_tone3": 32, "man_walking_tone4": 32, "man_walking_tone5": 32, "man_wearing_turban": 32, "man_wearing_turban_dark_skin_ton": 32, "man_wearing_turban_light_skin_ton": 32, "man_wearing_turban_medium_dark_skin_ton": 32, "man_wearing_turban_medium_light_skin_ton": 32, "man_wearing_turban_medium_skin_ton": 32, "man_wearing_turban_tone1": 32, "man_wearing_turban_tone2": 32, "man_wearing_turban_tone3": 32, "man_wearing_turban_tone4": 32, "man_wearing_turban_tone5": 32, "man_white_hair": 32, "man_white_haired_dark_skin_ton": 32, "man_white_haired_light_skin_ton": 32, "man_white_haired_medium_dark_skin_ton": 32, "man_white_haired_medium_light_skin_ton": 32, "man_white_haired_medium_skin_ton": 32, "man_white_haired_tone1": 32, "man_white_haired_tone2": 32, "man_white_haired_tone3": 32, "man_white_haired_tone4": 32, "man_white_haired_tone5": 32, "man_with_chinese_cap": 32, "man_with_chinese_cap_tone1": 32, "man_with_chinese_cap_tone2": 32, "man_with_chinese_cap_tone3": 32, "man_with_chinese_cap_tone4": 32, "man_with_chinese_cap_tone5": 32, "man_with_gua_pi_mao": 32, "man_with_gua_pi_mao_tone1": 32, "man_with_gua_pi_mao_tone2": 32, "man_with_gua_pi_mao_tone3": 32, "man_with_gua_pi_mao_tone4": 32, "man_with_gua_pi_mao_tone5": 32, "man_with_probing_can": 32, "man_with_probing_cane_dark_skin_ton": 32, "man_with_probing_cane_light_skin_ton": 32, "man_with_probing_cane_medium_dark_skin_ton": 32, "man_with_probing_cane_medium_light_skin_ton": 32, "man_with_probing_cane_medium_skin_ton": 32, "man_with_probing_cane_tone1": 32, "man_with_probing_cane_tone2": 32, "man_with_probing_cane_tone3": 32, "man_with_probing_cane_tone4": 32, "man_with_probing_cane_tone5": 32, "man_with_turban": 32, "man_with_turban_tone1": 32, "man_with_turban_tone2": 32, "man_with_turban_tone3": 32, "man_with_turban_tone4": 32, "man_with_turban_tone5": 32, "man_with_veil": 32, "man_with_veil_dark_skin_ton": 32, "man_with_veil_light_skin_ton": 32, "man_with_veil_medium_dark_skin_ton": 32, "man_with_veil_medium_light_skin_ton": 32, "man_with_veil_medium_skin_ton": 32, "man_with_veil_tone1": 32, "man_with_veil_tone2": 32, "man_with_veil_tone3": 32, "man_with_veil_tone4": 32, "man_with_veil_tone5": 32, "man_zombi": 32, "mango": 32, "mans_sho": 32, "mantelpiece_clock": 32, "mantlepiece_clock": 32, "manual_wheelchair": 32, "maple_leaf": 32, "marshall_island": 32, "martial_arts_uniform": 32, "martiniqu": 32, "mask": [32, 183, 254, 406, 821, 872, 873, 884, 967, 996, 998], "massage_man": 32, "massage_tone1": 32, "massage_tone2": 32, "massage_tone3": 32, "massage_tone4": 32, "massage_tone5": 32, "massage_woman": 32, "mate": [32, 248, 877], "mauritania": 32, "mauritiu": 32, "mayott": 32, "mc": [32, 165, 280, 466], "md": [32, 146, 377, 826], "meat_on_bon": 32, "mechanic_dark_skin_ton": 32, "mechanic_light_skin_ton": 32, "mechanic_medium_dark_skin_ton": 32, "mechanic_medium_light_skin_ton": 32, "mechanic_medium_skin_ton": 32, "mechanic_tone1": 32, "mechanic_tone2": 32, "mechanic_tone3": 32, "mechanic_tone4": 32, "mechanic_tone5": 32, "mechanical_arm": 32, "mechanical_leg": 32, "medal": 32, "medal_militari": 32, "medal_sport": 32, "medical_symbol": 32, "mega": [32, 1020], "melon": 32, "memo": 32, "men_holding_hands_dark_skin_ton": 32, "men_holding_hands_dark_skin_tone_light_skin_ton": 32, "men_holding_hands_dark_skin_tone_medium_dark_skin_ton": 32, "men_holding_hands_dark_skin_tone_medium_light_skin_ton": 32, "men_holding_hands_dark_skin_tone_medium_skin_ton": 32, "men_holding_hands_light_skin_ton": 32, "men_holding_hands_light_skin_tone_dark_skin_ton": 32, "men_holding_hands_light_skin_tone_medium_dark_skin_ton": 32, "men_holding_hands_light_skin_tone_medium_light_skin_ton": 32, "men_holding_hands_light_skin_tone_medium_skin_ton": 32, "men_holding_hands_medium_dark_skin_ton": 32, "men_holding_hands_medium_dark_skin_tone_dark_skin_ton": 32, "men_holding_hands_medium_dark_skin_tone_light_skin_ton": 32, "men_holding_hands_medium_dark_skin_tone_medium_light_skin_ton": 32, "men_holding_hands_medium_dark_skin_tone_medium_skin_ton": 32, "men_holding_hands_medium_light_skin_ton": 32, "men_holding_hands_medium_light_skin_tone_dark_skin_ton": 32, "men_holding_hands_medium_light_skin_tone_light_skin_ton": 32, "men_holding_hands_medium_light_skin_tone_medium_dark_skin_ton": 32, "men_holding_hands_medium_light_skin_tone_medium_skin_ton": 32, "men_holding_hands_medium_skin_ton": 32, "men_holding_hands_medium_skin_tone_dark_skin_ton": 32, "men_holding_hands_medium_skin_tone_light_skin_ton": 32, "men_holding_hands_medium_skin_tone_medium_dark_skin_ton": 32, "men_holding_hands_medium_skin_tone_medium_light_skin_ton": 32, "men_holding_hands_tone1": 32, "men_holding_hands_tone1_tone2": 32, "men_holding_hands_tone1_tone3": 32, "men_holding_hands_tone1_tone4": 32, "men_holding_hands_tone1_tone5": 32, "men_holding_hands_tone2": 32, "men_holding_hands_tone2_tone1": 32, "men_holding_hands_tone2_tone3": 32, "men_holding_hands_tone2_tone4": 32, "men_holding_hands_tone2_tone5": 32, "men_holding_hands_tone3": 32, "men_holding_hands_tone3_tone1": 32, "men_holding_hands_tone3_tone2": 32, "men_holding_hands_tone3_tone4": 32, "men_holding_hands_tone3_tone5": 32, "men_holding_hands_tone4": 32, "men_holding_hands_tone4_tone1": 32, "men_holding_hands_tone4_tone2": 32, "men_holding_hands_tone4_tone3": 32, "men_holding_hands_tone4_tone5": 32, "men_holding_hands_tone5": 32, "men_holding_hands_tone5_tone1": 32, "men_holding_hands_tone5_tone2": 32, "men_holding_hands_tone5_tone3": 32, "men_holding_hands_tone5_tone4": 32, "men_with_bunny_ears_parti": 32, "men_wrestl": 32, "mending_heart": 32, "menorah": 32, "men": [32, 404, 460, 583], "mermaid": 32, "mermaid_dark_skin_ton": 32, "mermaid_light_skin_ton": 32, "mermaid_medium_dark_skin_ton": 32, "mermaid_medium_light_skin_ton": 32, "mermaid_medium_skin_ton": 32, "mermaid_tone1": 32, "mermaid_tone2": 32, "mermaid_tone3": 32, "mermaid_tone4": 32, "mermaid_tone5": 32, "merman": 32, "merman_dark_skin_ton": 32, "merman_light_skin_ton": 32, "merman_medium_dark_skin_ton": 32, "merman_medium_light_skin_ton": 32, "merman_medium_skin_ton": 32, "merman_tone1": 32, "merman_tone2": 32, "merman_tone3": 32, "merman_tone4": 32, "merman_tone5": 32, "merperson": 32, "merperson_dark_skin_ton": 32, "merperson_light_skin_ton": 32, "merperson_medium_dark_skin_ton": 32, "merperson_medium_light_skin_ton": 32, "merperson_medium_skin_ton": 32, "merperson_tone1": 32, "merperson_tone2": 32, "merperson_tone3": 32, "merperson_tone4": 32, "merperson_tone5": 32, "metal_tone1": 32, "metal_tone2": 32, "metal_tone3": 32, "metal_tone4": 32, "metal_tone5": 32, "metro": 32, "mexico": 32, "mf": [32, 234, 1080], "mg": 32, "mh": 32, "microb": 32, "micronesia": 32, "microphone2": 32, "microphon": [32, 167, 169], "microscop": 32, "middle_finger_tone1": 32, "middle_finger_tone2": 32, "middle_finger_tone3": 32, "middle_finger_tone4": 32, "middle_finger_tone5": 32, "military_helmet": 32, "military_med": 32, "milk": 32, "milk_glass": 32, "milky_wai": 32, "minibu": 32, "minidisc": 32, "mirror": 32, "ml": 32, "mm": [32, 465], "mn": 32, "mo": [32, 574], "mobile_phon": 32, "mobile_phone_off": 32, "moldova": 32, "monaco": 32, "money_mouth": 32, "money_mouth_fac": 32, "money_with_w": 32, "moneybag": 32, "mongolia": 32, "monkei": 32, "monkey_fac": 32, "monorail": 32, "montenegro": 32, "montserrat": 32, "moon": 32, "moon_cak": 32, "morocco": 32, "mortar_board": 32, "mosqu": 32, "mosquito": 32, "mother_christma": 32, "mother_christmas_tone1": 32, "mother_christmas_tone2": 32, "mother_christmas_tone3": 32, "mother_christmas_tone4": 32, "mother_christmas_tone5": 32, "motor_boat": 32, "motor_scoot": 32, "motorbik": 32, "motorboat": 32, "motorcycl": 32, "motorized_wheelchair": 32, "motorwai": 32, "mount_fuji": 32, "mountain": 32, "mountain_bicyclist": 32, "mountain_bicyclist_tone1": 32, "mountain_bicyclist_tone2": 32, "mountain_bicyclist_tone3": 32, "mountain_bicyclist_tone4": 32, "mountain_bicyclist_tone5": 32, "mountain_biking_man": 32, "mountain_biking_woman": 32, "mountain_cablewai": 32, "mountain_railwai": 32, "mountain_snow": 32, "mouse2": 32, "mous": [32, 162, 167, 340, 885, 1061, 1069], "mouse_three_button": 32, "mouse_trap": 32, "movie_camera": 32, "moyai": 32, "mozambiqu": 32, "mp": [32, 38], "mq": [32, 991, 992], "mr": [32, 124, 231, 242, 250, 254, 1085], "mrs_clau": 32, "mrs_claus_tone1": 32, "mrs_claus_tone2": 32, "mrs_claus_tone3": 32, "mrs_claus_tone4": 32, "mrs_claus_tone5": 32, "mt": [32, 366, 995, 996], "mu": [32, 254], "muscle_tone1": 32, "muscle_tone2": 32, "muscle_tone3": 32, "muscle_tone4": 32, "muscle_tone5": 32, "mushroom": 32, "musical_keyboard": 32, "musical_not": 32, "musical_scor": 32, "mute": 32, "mv": [32, 100, 124, 202, 204, 268, 277, 278, 298, 299, 357, 362, 778, 798, 855, 892, 905, 921, 1182], "mw": 32, "mx": 32, "mx_clau": 32, "mx_claus_dark_skin_ton": 32, "mx_claus_light_skin_ton": 32, "mx_claus_medium_dark_skin_ton": 32, "mx_claus_medium_light_skin_ton": 32, "mx_claus_medium_skin_ton": 32, "mx_claus_tone1": 32, "mx_claus_tone2": 32, "mx_claus_tone3": 32, "mx_claus_tone4": 32, "mx_claus_tone5": 32, "myanmar": 32, "mz": 32, "na": [32, 231, 234, 237, 250, 257, 275, 330], "nail_car": 32, "nail_care_tone1": 32, "nail_care_tone2": 32, "nail_care_tone3": 32, "nail_care_tone4": 32, "nail_care_tone5": 32, "name_badg": 32, "namibia": 32, "national_park": 32, "nauru": 32, "nauseated_fac": 32, "nazar_amulet": 32, "nc": [32, 202, 204, 277, 298, 299, 386, 948], "ne": [32, 584, 602, 604, 963], "neckti": 32, "negative_squared_cross_mark": 32, "nepal": 32, "nerd_fac": 32, "nesting_dol": 32, "netherland": [32, 163, 1048], "neutral_fac": 32, "new_caledonia": 32, "new_moon": 32, "new_moon_with_fac": 32, "new_zealand": 32, "newspaper2": 32, "newspap": [32, 43], "newspaper_rol": 32, "next_track": 32, "next_track_button": 32, "nf": [32, 234, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336, 942], "ng": [32, 163, 174, 278, 778, 921, 1000, 1002, 1009, 1010, 1011], "ni": 32, "nicaragua": 32, "niger": 32, "nigeria": 32, "night_with_star": 32, "nine": [32, 182, 195, 205, 213, 231, 242, 330, 357], "ninja_dark_skin_ton": 32, "ninja_light_skin_ton": 32, "ninja_medium_dark_skin_ton": 32, "ninja_medium_light_skin_ton": 32, "ninja_medium_skin_ton": 32, "ninja_tone1": 32, "ninja_tone2": 32, "ninja_tone3": 32, "ninja_tone4": 32, "ninja_tone5": 32, "niue": 32, "nl": [32, 386], "no_bel": 32, "no_bicycl": 32, "no_entri": 32, "no_entry_sign": 32, "no_good": 32, "no_good_man": 32, "no_good_tone1": 32, "no_good_tone2": 32, "no_good_tone3": 32, "no_good_tone4": 32, "no_good_tone5": 32, "no_good_woman": 32, "no_mobile_phon": 32, "no_mouth": 32, "no_pedestrian": 32, "no_smok": 32, "non": [32, 79, 124, 125, 140, 142, 144, 158, 164, 165, 172, 189, 202, 224, 242, 250, 254, 259, 278, 287, 289, 296, 318, 420, 442, 460, 476, 479, 530, 573, 575, 582, 584, 587, 595, 599, 600, 639, 654, 689, 695, 736, 740, 741, 756, 763, 777, 778, 811, 817, 830, 841, 862, 865, 867, 907, 932, 933, 941, 959, 974, 978, 985, 993, 1018, 1022, 1034, 1035, 1058, 1071, 1091, 1108, 1144, 1145, 1150, 1164, 1179], "potable_wat": 32, "norfolk_island": 32, "north_korea": 32, "northern_mariana_island": 32, "norwai": 32, "nose": 32, "nose_tone1": 32, "nose_tone2": 32, "nose_tone3": 32, "nose_tone4": 32, "nose_tone5": 32, "notebook_with_decorative_cov": 32, "notepad_spir": 32, "np": [32, 185, 212, 280, 314, 466, 1126, 1145], "nr": [32, 210, 254, 784], "nu": 32, "nut_and_bolt": 32, "nz": 32, "o2": [32, 454], "ocean": 32, "octagonal_sign": 32, "octopu": 32, "oden": 32, "office_work": 32, "office_worker_dark_skin_ton": 32, "office_worker_light_skin_ton": 32, "office_worker_medium_dark_skin_ton": 32, "office_worker_medium_light_skin_ton": 32, "office_worker_medium_skin_ton": 32, "office_worker_tone1": 32, "office_worker_tone2": 32, "office_worker_tone3": 32, "office_worker_tone4": 32, "office_worker_tone5": 32, "oil": 32, "oil_drum": 32, "ok": [32, 53, 66, 130, 161, 163, 164, 168, 177, 194, 210, 240, 280, 353, 394, 430, 448, 450, 480, 489, 539, 540, 541, 586, 594, 597, 602, 607, 617, 669, 676, 687, 695, 710, 729, 732, 741, 742, 758, 839, 930, 957, 975, 1002, 1013, 1031, 1034, 1047, 1163], "ok_hand_tone1": 32, "ok_hand_tone2": 32, "ok_hand_tone3": 32, "ok_hand_tone4": 32, "ok_hand_tone5": 32, "ok_man": 32, "ok_woman": 32, "ok_woman_tone1": 32, "ok_woman_tone2": 32, "ok_woman_tone3": 32, "ok_woman_tone4": 32, "ok_woman_tone5": 32, "old_kei": 32, "older_adult": 32, "older_adult_dark_skin_ton": 32, "older_adult_light_skin_ton": 32, "older_adult_medium_dark_skin_ton": 32, "older_adult_medium_light_skin_ton": 32, "older_adult_medium_skin_ton": 32, "older_adult_tone1": 32, "older_adult_tone2": 32, "older_adult_tone3": 32, "older_adult_tone4": 32, "older_adult_tone5": 32, "older_man": 32, "older_man_tone1": 32, "older_man_tone2": 32, "older_man_tone3": 32, "older_man_tone4": 32, "older_man_tone5": 32, "older_woman": 32, "older_woman_tone1": 32, "older_woman_tone2": 32, "older_woman_tone3": 32, "older_woman_tone4": 32, "older_woman_tone5": 32, "oliv": [32, 226], "om": [32, 720], "om_symbol": 32, "oman": 32, "oncoming_automobil": 32, "oncoming_bu": 32, "oncoming_police_car": 32, "oncoming_taxi": 32, "one_piece_swimsuit": 32, "onion": 32, "open_file_fold": 32, "open_hand": 32, "open_hands_tone1": 32, "open_hands_tone2": 32, "open_hands_tone3": 32, "open_hands_tone4": 32, "open_hands_tone5": 32, "open_mouth": 32, "open_umbrella": 32, "ophiuchu": 32, "orange_book": 32, "orange_circl": 32, "orange_heart": 32, "orange_squar": 32, "orangutan": 32, "orthodox_cross": 32, "otter": 32, "outbox_trai": 32, "owl": 32, "ox": 32, "oyster": 32, "pa": [32, 231, 237, 247, 250, 430, 614, 616, 617], "paella": 32, "page_facing_up": 32, "page_with_curl": 32, "pager": [32, 917], "paintbrush": 32, "pakistan": 32, "palau": 32, "palestinian_territori": 32, "palm_tre": 32, "palms_up_togeth": 32, "palms_up_together_dark_skin_ton": 32, "palms_up_together_light_skin_ton": 32, "palms_up_together_medium_dark_skin_ton": 32, "palms_up_together_medium_light_skin_ton": 32, "palms_up_together_medium_skin_ton": 32, "palms_up_together_tone1": 32, "palms_up_together_tone2": 32, "palms_up_together_tone3": 32, "palms_up_together_tone4": 32, "palms_up_together_tone5": 32, "panama": 32, "pancak": 32, "panda_fac": 32, "paperclip": 32, "papua_new_guinea": 32, "parachut": 32, "paraguai": 32, "parasol_on_ground": 32, "park": 32, "parrot": 32, "part_alternation_mark": 32, "partly_sunni": 32, "partying_fac": 32, "passenger_ship": 32, "passport_control": 32, "pause_button": 32, "paw_print": 32, "pe": 32, "peac": 32, "peace_symbol": 32, "peach": 32, "peacock": 32, "peanut": 32, "pear": 32, "pen": 32, "pen_ballpoint": 32, "pen_fountain": 32, "pencil2": 32, "pencil": 32, "pensiv": 32, "people_holding_hand": 32, "people_holding_hands_dark_skin_ton": 32, "people_holding_hands_dark_skin_tone_light_skin_ton": 32, "people_holding_hands_dark_skin_tone_medium_dark_skin_ton": 32, "people_holding_hands_dark_skin_tone_medium_light_skin_ton": 32, "people_holding_hands_dark_skin_tone_medium_skin_ton": 32, "people_holding_hands_light_skin_ton": 32, "people_holding_hands_light_skin_tone_dark_skin_ton": 32, "people_holding_hands_light_skin_tone_medium_dark_skin_ton": 32, "people_holding_hands_light_skin_tone_medium_light_skin_ton": 32, "people_holding_hands_light_skin_tone_medium_skin_ton": 32, "people_holding_hands_medium_dark_skin_ton": 32, "people_holding_hands_medium_dark_skin_tone_dark_skin_ton": 32, "people_holding_hands_medium_dark_skin_tone_light_skin_ton": 32, "people_holding_hands_medium_dark_skin_tone_medium_light_skin_ton": 32, "people_holding_hands_medium_dark_skin_tone_medium_skin_ton": 32, "people_holding_hands_medium_light_skin_ton": 32, "people_holding_hands_medium_light_skin_tone_dark_skin_ton": 32, "people_holding_hands_medium_light_skin_tone_light_skin_ton": 32, "people_holding_hands_medium_light_skin_tone_medium_dark_skin_ton": 32, "people_holding_hands_medium_light_skin_tone_medium_skin_ton": 32, "people_holding_hands_medium_skin_ton": 32, "people_holding_hands_medium_skin_tone_dark_skin_ton": 32, "people_holding_hands_medium_skin_tone_light_skin_ton": 32, "people_holding_hands_medium_skin_tone_medium_dark_skin_ton": 32, "people_holding_hands_medium_skin_tone_medium_light_skin_ton": 32, "people_holding_hands_tone1": 32, "people_holding_hands_tone1_tone2": 32, "people_holding_hands_tone1_tone3": 32, "people_holding_hands_tone1_tone4": 32, "people_holding_hands_tone1_tone5": 32, "people_holding_hands_tone2": 32, "people_holding_hands_tone2_tone1": 32, "people_holding_hands_tone2_tone3": 32, "people_holding_hands_tone2_tone4": 32, "people_holding_hands_tone2_tone5": 32, "people_holding_hands_tone3": 32, "people_holding_hands_tone3_tone1": 32, "people_holding_hands_tone3_tone2": 32, "people_holding_hands_tone3_tone4": 32, "people_holding_hands_tone3_tone5": 32, "people_holding_hands_tone4": 32, "people_holding_hands_tone4_tone1": 32, "people_holding_hands_tone4_tone2": 32, "people_holding_hands_tone4_tone3": 32, "people_holding_hands_tone4_tone5": 32, "people_holding_hands_tone5": 32, "people_holding_hands_tone5_tone1": 32, "people_holding_hands_tone5_tone2": 32, "people_holding_hands_tone5_tone3": 32, "people_holding_hands_tone5_tone4": 32, "people_hug": 32, "people_with_bunny_ears_parti": 32, "people_wrestl": 32, "performing_art": 32, "persever": 32, "person_bald": 32, "person_bik": 32, "person_biking_tone1": 32, "person_biking_tone2": 32, "person_biking_tone3": 32, "person_biking_tone4": 32, "person_biking_tone5": 32, "person_bouncing_bal": 32, "person_bouncing_ball_tone1": 32, "person_bouncing_ball_tone2": 32, "person_bouncing_ball_tone3": 32, "person_bouncing_ball_tone4": 32, "person_bouncing_ball_tone5": 32, "person_bow": 32, "person_bowing_tone1": 32, "person_bowing_tone2": 32, "person_bowing_tone3": 32, "person_bowing_tone4": 32, "person_bowing_tone5": 32, "person_climb": 32, "person_climbing_dark_skin_ton": 32, "person_climbing_light_skin_ton": 32, "person_climbing_medium_dark_skin_ton": 32, "person_climbing_medium_light_skin_ton": 32, "person_climbing_medium_skin_ton": 32, "person_climbing_tone1": 32, "person_climbing_tone2": 32, "person_climbing_tone3": 32, "person_climbing_tone4": 32, "person_climbing_tone5": 32, "person_curly_hair": 32, "person_dark_skin_tone_bald": 32, "person_dark_skin_tone_curly_hair": 32, "person_dark_skin_tone_red_hair": 32, "person_dark_skin_tone_white_hair": 32, "person_doing_cartwheel": 32, "person_doing_cartwheel_tone1": 32, "person_doing_cartwheel_tone2": 32, "person_doing_cartwheel_tone3": 32, "person_doing_cartwheel_tone4": 32, "person_doing_cartwheel_tone5": 32, "person_facepalm": 32, "person_facepalming_tone1": 32, "person_facepalming_tone2": 32, "person_facepalming_tone3": 32, "person_facepalming_tone4": 32, "person_facepalming_tone5": 32, "person_feeding_babi": 32, "person_feeding_baby_dark_skin_ton": 32, "person_feeding_baby_light_skin_ton": 32, "person_feeding_baby_medium_dark_skin_ton": 32, "person_feeding_baby_medium_light_skin_ton": 32, "person_feeding_baby_medium_skin_ton": 32, "person_feeding_baby_tone1": 32, "person_feeding_baby_tone2": 32, "person_feeding_baby_tone3": 32, "person_feeding_baby_tone4": 32, "person_feeding_baby_tone5": 32, "person_fenc": 32, "person_frown": 32, "person_frowning_tone1": 32, "person_frowning_tone2": 32, "person_frowning_tone3": 32, "person_frowning_tone4": 32, "person_frowning_tone5": 32, "person_gesturing_no": 32, "person_gesturing_no_tone1": 32, "person_gesturing_no_tone2": 32, "person_gesturing_no_tone3": 32, "person_gesturing_no_tone4": 32, "person_gesturing_no_tone5": 32, "person_gesturing_ok": 32, "person_gesturing_ok_tone1": 32, "person_gesturing_ok_tone2": 32, "person_gesturing_ok_tone3": 32, "person_gesturing_ok_tone4": 32, "person_gesturing_ok_tone5": 32, "person_getting_haircut": 32, "person_getting_haircut_tone1": 32, "person_getting_haircut_tone2": 32, "person_getting_haircut_tone3": 32, "person_getting_haircut_tone4": 32, "person_getting_haircut_tone5": 32, "person_getting_massag": 32, "person_getting_massage_tone1": 32, "person_getting_massage_tone2": 32, "person_getting_massage_tone3": 32, "person_getting_massage_tone4": 32, "person_getting_massage_tone5": 32, "person_golf": 32, "person_golfing_dark_skin_ton": 32, "person_golfing_light_skin_ton": 32, "person_golfing_medium_dark_skin_ton": 32, "person_golfing_medium_light_skin_ton": 32, "person_golfing_medium_skin_ton": 32, "person_golfing_tone1": 32, "person_golfing_tone2": 32, "person_golfing_tone3": 32, "person_golfing_tone4": 32, "person_golfing_tone5": 32, "person_in_bed_dark_skin_ton": 32, "person_in_bed_light_skin_ton": 32, "person_in_bed_medium_dark_skin_ton": 32, "person_in_bed_medium_light_skin_ton": 32, "person_in_bed_medium_skin_ton": 32, "person_in_bed_tone1": 32, "person_in_bed_tone2": 32, "person_in_bed_tone3": 32, "person_in_bed_tone4": 32, "person_in_bed_tone5": 32, "person_in_lotus_posit": 32, "person_in_lotus_position_dark_skin_ton": 32, "person_in_lotus_position_light_skin_ton": 32, "person_in_lotus_position_medium_dark_skin_ton": 32, "person_in_lotus_position_medium_light_skin_ton": 32, "person_in_lotus_position_medium_skin_ton": 32, "person_in_lotus_position_tone1": 32, "person_in_lotus_position_tone2": 32, "person_in_lotus_position_tone3": 32, "person_in_lotus_position_tone4": 32, "person_in_lotus_position_tone5": 32, "person_in_manual_wheelchair": 32, "person_in_manual_wheelchair_dark_skin_ton": 32, "person_in_manual_wheelchair_light_skin_ton": 32, "person_in_manual_wheelchair_medium_dark_skin_ton": 32, "person_in_manual_wheelchair_medium_light_skin_ton": 32, "person_in_manual_wheelchair_medium_skin_ton": 32, "person_in_manual_wheelchair_tone1": 32, "person_in_manual_wheelchair_tone2": 32, "person_in_manual_wheelchair_tone3": 32, "person_in_manual_wheelchair_tone4": 32, "person_in_manual_wheelchair_tone5": 32, "person_in_motorized_wheelchair": 32, "person_in_motorized_wheelchair_dark_skin_ton": 32, "person_in_motorized_wheelchair_light_skin_ton": 32, "person_in_motorized_wheelchair_medium_dark_skin_ton": 32, "person_in_motorized_wheelchair_medium_light_skin_ton": 32, "person_in_motorized_wheelchair_medium_skin_ton": 32, "person_in_motorized_wheelchair_tone1": 32, "person_in_motorized_wheelchair_tone2": 32, "person_in_motorized_wheelchair_tone3": 32, "person_in_motorized_wheelchair_tone4": 32, "person_in_motorized_wheelchair_tone5": 32, "person_in_steamy_room": 32, "person_in_steamy_room_dark_skin_ton": 32, "person_in_steamy_room_light_skin_ton": 32, "person_in_steamy_room_medium_dark_skin_ton": 32, "person_in_steamy_room_medium_light_skin_ton": 32, "person_in_steamy_room_medium_skin_ton": 32, "person_in_steamy_room_tone1": 32, "person_in_steamy_room_tone2": 32, "person_in_steamy_room_tone3": 32, "person_in_steamy_room_tone4": 32, "person_in_steamy_room_tone5": 32, "person_in_tuxedo": 32, "person_in_tuxedo_tone1": 32, "person_in_tuxedo_tone2": 32, "person_in_tuxedo_tone3": 32, "person_in_tuxedo_tone4": 32, "person_in_tuxedo_tone5": 32, "person_juggl": 32, "person_juggling_tone1": 32, "person_juggling_tone2": 32, "person_juggling_tone3": 32, "person_juggling_tone4": 32, "person_juggling_tone5": 32, "person_kneel": 32, "person_kneeling_dark_skin_ton": 32, "person_kneeling_light_skin_ton": 32, "person_kneeling_medium_dark_skin_ton": 32, "person_kneeling_medium_light_skin_ton": 32, "person_kneeling_medium_skin_ton": 32, "person_kneeling_tone1": 32, "person_kneeling_tone2": 32, "person_kneeling_tone3": 32, "person_kneeling_tone4": 32, "person_kneeling_tone5": 32, "person_lifting_weight": 32, "person_lifting_weights_tone1": 32, "person_lifting_weights_tone2": 32, "person_lifting_weights_tone3": 32, "person_lifting_weights_tone4": 32, "person_lifting_weights_tone5": 32, "person_light_skin_tone_bald": 32, "person_light_skin_tone_curly_hair": 32, "person_light_skin_tone_red_hair": 32, "person_light_skin_tone_white_hair": 32, "person_medium_dark_skin_tone_bald": 32, "person_medium_dark_skin_tone_curly_hair": 32, "person_medium_dark_skin_tone_red_hair": 32, "person_medium_dark_skin_tone_white_hair": 32, "person_medium_light_skin_tone_bald": 32, "person_medium_light_skin_tone_curly_hair": 32, "person_medium_light_skin_tone_red_hair": 32, "person_medium_light_skin_tone_white_hair": 32, "person_medium_skin_tone_bald": 32, "person_medium_skin_tone_curly_hair": 32, "person_medium_skin_tone_red_hair": 32, "person_medium_skin_tone_white_hair": 32, "person_mountain_bik": 32, "person_mountain_biking_tone1": 32, "person_mountain_biking_tone2": 32, "person_mountain_biking_tone3": 32, "person_mountain_biking_tone4": 32, "person_mountain_biking_tone5": 32, "person_playing_handbal": 32, "person_playing_handball_tone1": 32, "person_playing_handball_tone2": 32, "person_playing_handball_tone3": 32, "person_playing_handball_tone4": 32, "person_playing_handball_tone5": 32, "person_playing_water_polo": 32, "person_playing_water_polo_tone1": 32, "person_playing_water_polo_tone2": 32, "person_playing_water_polo_tone3": 32, "person_playing_water_polo_tone4": 32, "person_playing_water_polo_tone5": 32, "person_pout": 32, "person_pouting_tone1": 32, "person_pouting_tone2": 32, "person_pouting_tone3": 32, "person_pouting_tone4": 32, "person_pouting_tone5": 32, "person_raising_hand": 32, "person_raising_hand_tone1": 32, "person_raising_hand_tone2": 32, "person_raising_hand_tone3": 32, "person_raising_hand_tone4": 32, "person_raising_hand_tone5": 32, "person_red_hair": 32, "person_rowing_boat": 32, "person_rowing_boat_tone1": 32, "person_rowing_boat_tone2": 32, "person_rowing_boat_tone3": 32, "person_rowing_boat_tone4": 32, "person_rowing_boat_tone5": 32, "person_run": 32, "person_running_tone1": 32, "person_running_tone2": 32, "person_running_tone3": 32, "person_running_tone4": 32, "person_running_tone5": 32, "person_shrug": 32, "person_shrugging_tone1": 32, "person_shrugging_tone2": 32, "person_shrugging_tone3": 32, "person_shrugging_tone4": 32, "person_shrugging_tone5": 32, "person_stand": 32, "person_standing_dark_skin_ton": 32, "person_standing_light_skin_ton": 32, "person_standing_medium_dark_skin_ton": 32, "person_standing_medium_light_skin_ton": 32, "person_standing_medium_skin_ton": 32, "person_standing_tone1": 32, "person_standing_tone2": 32, "person_standing_tone3": 32, "person_standing_tone4": 32, "person_standing_tone5": 32, "person_surf": 32, "person_surfing_tone1": 32, "person_surfing_tone2": 32, "person_surfing_tone3": 32, "person_surfing_tone4": 32, "person_surfing_tone5": 32, "person_swim": 32, "person_swimming_tone1": 32, "person_swimming_tone2": 32, "person_swimming_tone3": 32, "person_swimming_tone4": 32, "person_swimming_tone5": 32, "person_tipping_hand": 32, "person_tipping_hand_tone1": 32, "person_tipping_hand_tone2": 32, "person_tipping_hand_tone3": 32, "person_tipping_hand_tone4": 32, "person_tipping_hand_tone5": 32, "person_tone1_bald": 32, "person_tone1_curly_hair": 32, "person_tone1_red_hair": 32, "person_tone1_white_hair": 32, "person_tone2_bald": 32, "person_tone2_curly_hair": 32, "person_tone2_red_hair": 32, "person_tone2_white_hair": 32, "person_tone3_bald": 32, "person_tone3_curly_hair": 32, "person_tone3_red_hair": 32, "person_tone3_white_hair": 32, "person_tone4_bald": 32, "person_tone4_curly_hair": 32, "person_tone4_red_hair": 32, "person_tone4_white_hair": 32, "person_tone5_bald": 32, "person_tone5_curly_hair": 32, "person_tone5_red_hair": 32, "person_tone5_white_hair": 32, "person_walk": 32, "person_walking_tone1": 32, "person_walking_tone2": 32, "person_walking_tone3": 32, "person_walking_tone4": 32, "person_walking_tone5": 32, "person_wearing_turban": 32, "person_wearing_turban_tone1": 32, "person_wearing_turban_tone2": 32, "person_wearing_turban_tone3": 32, "person_wearing_turban_tone4": 32, "person_wearing_turban_tone5": 32, "person_white_hair": 32, "person_with_bal": 32, "person_with_ball_tone1": 32, "person_with_ball_tone2": 32, "person_with_ball_tone3": 32, "person_with_ball_tone4": 32, "person_with_ball_tone5": 32, "person_with_blond_hair": 32, "person_with_blond_hair_tone1": 32, "person_with_blond_hair_tone2": 32, "person_with_blond_hair_tone3": 32, "person_with_blond_hair_tone4": 32, "person_with_blond_hair_tone5": 32, "person_with_pouting_fac": 32, "person_with_pouting_face_tone1": 32, "person_with_pouting_face_tone2": 32, "person_with_pouting_face_tone3": 32, "person_with_pouting_face_tone4": 32, "person_with_pouting_face_tone5": 32, "person_with_probing_can": 32, "person_with_probing_cane_dark_skin_ton": 32, "person_with_probing_cane_light_skin_ton": 32, "person_with_probing_cane_medium_dark_skin_ton": 32, "person_with_probing_cane_medium_light_skin_ton": 32, "person_with_probing_cane_medium_skin_ton": 32, "person_with_probing_cane_tone1": 32, "person_with_probing_cane_tone2": 32, "person_with_probing_cane_tone3": 32, "person_with_probing_cane_tone4": 32, "person_with_probing_cane_tone5": 32, "person_with_veil": 32, "person_with_veil_tone1": 32, "person_with_veil_tone2": 32, "person_with_veil_tone3": 32, "person_with_veil_tone4": 32, "person_with_veil_tone5": 32, "peru": 32, "petri_dish": 32, "pf": [32, 165, 758], "pg": [32, 458], "ph": 32, "philippin": 32, "phone": 32, "pick": [32, 79, 155, 165, 172, 223, 468, 541, 981, 1011, 1016], "pickup_truck": 32, "pie": 32, "pig2": 32, "pig_nos": 32, "pill": 32, "pilot": 32, "pilot_dark_skin_ton": 32, "pilot_light_skin_ton": 32, "pilot_medium_dark_skin_ton": 32, "pilot_medium_light_skin_ton": 32, "pilot_medium_skin_ton": 32, "pilot_tone1": 32, "pilot_tone2": 32, "pilot_tone3": 32, "pilot_tone4": 32, "pilot_tone5": 32, "pinched_fing": 32, "pinched_fingers_dark_skin_ton": 32, "pinched_fingers_light_skin_ton": 32, "pinched_fingers_medium_dark_skin_ton": 32, "pinched_fingers_medium_light_skin_ton": 32, "pinched_fingers_medium_skin_ton": 32, "pinched_fingers_tone1": 32, "pinched_fingers_tone2": 32, "pinched_fingers_tone3": 32, "pinched_fingers_tone4": 32, "pinched_fingers_tone5": 32, "pinching_hand": 32, "pinching_hand_dark_skin_ton": 32, "pinching_hand_light_skin_ton": 32, "pinching_hand_medium_dark_skin_ton": 32, "pinching_hand_medium_light_skin_ton": 32, "pinching_hand_medium_skin_ton": 32, "pinching_hand_tone1": 32, "pinching_hand_tone2": 32, "pinching_hand_tone3": 32, "pinching_hand_tone4": 32, "pinching_hand_tone5": 32, "pineappl": [32, 286], "ping_pong": 32, "pirate_flag": 32, "pisc": 32, "pitcairn_island": 32, "pizza": 32, "pi\u00f1ata": 32, "pk": 32, "pl": 32, "placard": 32, "place_of_worship": 32, "plate_with_cutleri": 32, "play_or_pause_button": 32, "play_paus": 32, "pleading_fac": 32, "plunger": 32, "pm": [32, 38, 330], "pn": 32, "point_down": 32, "point_down_tone1": 32, "point_down_tone2": 32, "point_down_tone3": 32, "point_down_tone4": 32, "point_down_tone5": 32, "point_left": 32, "point_left_tone1": 32, "point_left_tone2": 32, "point_left_tone3": 32, "point_left_tone4": 32, "point_left_tone5": 32, "point_right": 32, "point_right_tone1": 32, "point_right_tone2": 32, "point_right_tone3": 32, "point_right_tone4": 32, "point_right_tone5": 32, "point_up_2": 32, "point_up_2_tone1": 32, "point_up_2_tone2": 32, "point_up_2_tone3": 32, "point_up_2_tone4": 32, "point_up_2_tone5": 32, "point_up_tone1": 32, "point_up_tone2": 32, "point_up_tone3": 32, "point_up_tone4": 32, "point_up_tone5": 32, "poland": 32, "polar_bear": 32, "police_car": 32, "police_offic": 32, "police_officer_tone1": 32, "police_officer_tone2": 32, "police_officer_tone3": 32, "police_officer_tone4": 32, "police_officer_tone5": 32, "policeman": 32, "policewoman": 32, "poo": 32, "poodl": 32, "poop": 32, "popcorn": 32, "portug": 32, "post_offic": 32, "postal_horn": 32, "postbox": 32, "potato": 32, "potted_pl": 32, "pouch": 32, "poultry_leg": 32, "pound": [32, 36], "pound_symbol": 32, "pouting_cat": 32, "pouting_man": 32, "pouting_woman": 32, "pr": [32, 35, 250, 265], "prai": 32, "pray_tone1": 32, "pray_tone2": 32, "pray_tone3": 32, "pray_tone4": 32, "pray_tone5": 32, "prayer_bead": 32, "pregnant_woman": 32, "pregnant_woman_tone1": 32, "pregnant_woman_tone2": 32, "pregnant_woman_tone3": 32, "pregnant_woman_tone4": 32, "pregnant_woman_tone5": 32, "pretzel": 32, "previous_track": 32, "previous_track_button": 32, "princ": 32, "prince_tone1": 32, "prince_tone2": 32, "prince_tone3": 32, "prince_tone4": 32, "prince_tone5": 32, "princess": 32, "princess_tone1": 32, "princess_tone2": 32, "princess_tone3": 32, "princess_tone4": 32, "princess_tone5": 32, "printer": 32, "probing_can": 32, "projector": 32, "p": [32, 38, 64, 114, 117, 124, 142, 158, 162, 163, 167, 168, 174, 190, 202, 204, 205, 221, 234, 250, 254, 280, 282, 340, 390, 424, 430, 433, 434, 437, 438, 442, 513, 538, 539, 541, 542, 584, 586, 589, 594, 595, 596, 597, 598, 600, 602, 603, 617, 625, 685, 688, 689, 692, 694, 697, 706, 707, 708, 710, 712, 713, 716, 717, 718, 724, 726, 727, 736, 740, 745, 756, 773, 776, 789, 825, 844, 852, 853, 862, 885, 887, 904, 907, 914, 924, 932, 941, 948, 959, 968, 983, 996, 1011, 1018, 1020, 1080, 1158, 1182], "pt": [32, 744, 856, 983], "pud": 32, "puerto_rico": 32, "punch": 32, "punch_tone1": 32, "punch_tone2": 32, "punch_tone3": 32, "punch_tone4": 32, "punch_tone5": 32, "purple_circl": 32, "purple_heart": 32, "purple_squar": 32, "purs": 32, "pushpin": 32, "put_litter_in_its_plac": 32, "pw": 32, "qa": 32, "qatar": 32, "rabbit2": 32, "rabbit": 32, "raccoon": 32, "race_car": 32, "racehors": 32, "racing_car": 32, "racing_motorcycl": 32, "radio": 32, "radio_button": 32, "radioact": 32, "radioactive_sign": 32, "rage": 32, "railroad_track": 32, "railway_car": 32, "railway_track": 32, "rainbow": 32, "rainbow_flag": 32, "raised_back_of_hand": 32, "raised_back_of_hand_tone1": 32, "raised_back_of_hand_tone2": 32, "raised_back_of_hand_tone3": 32, "raised_back_of_hand_tone4": 32, "raised_back_of_hand_tone5": 32, "raised_hand": 32, "raised_hand_tone1": 32, "raised_hand_tone2": 32, "raised_hand_tone3": 32, "raised_hand_tone4": 32, "raised_hand_tone5": 32, "raised_hand_with_fingers_splai": 32, "raised_hand_with_fingers_splayed_tone1": 32, "raised_hand_with_fingers_splayed_tone2": 32, "raised_hand_with_fingers_splayed_tone3": 32, "raised_hand_with_fingers_splayed_tone4": 32, "raised_hand_with_fingers_splayed_tone5": 32, "raised_hand_with_part_between_middle_and_ring_fing": 32, "raised_hand_with_part_between_middle_and_ring_fingers_tone1": 32, "raised_hand_with_part_between_middle_and_ring_fingers_tone2": 32, "raised_hand_with_part_between_middle_and_ring_fingers_tone3": 32, "raised_hand_with_part_between_middle_and_ring_fingers_tone4": 32, "raised_hand_with_part_between_middle_and_ring_fingers_tone5": 32, "raised_hands_tone1": 32, "raised_hands_tone2": 32, "raised_hands_tone3": 32, "raised_hands_tone4": 32, "raised_hands_tone5": 32, "raising_hand": 32, "raising_hand_man": 32, "raising_hand_tone1": 32, "raising_hand_tone2": 32, "raising_hand_tone3": 32, "raising_hand_tone4": 32, "raising_hand_tone5": 32, "raising_hand_woman": 32, "ram": [32, 164, 165, 169, 287, 825, 861, 863, 947], "ramen": 32, "rat": 32, "razor": 32, "re": [32, 38, 64, 122, 129, 131, 164, 169, 201, 210, 213, 214, 224, 227, 234, 235, 237, 242, 244, 250, 254, 260, 262, 263, 272, 275, 279, 295, 296, 302, 324, 330, 336, 357, 362, 420, 466, 467, 476, 484, 509, 539, 586, 592, 710, 732, 794, 830, 839, 844, 886, 975, 996, 1011, 1015, 1020, 1025, 1044, 1067, 1118, 1123, 1145], "receipt": 32, "record_button": 32, "recycl": 32, "red_car": 32, "red_circl": 32, "red_envelop": 32, "red_hair": 32, "red_squar": 32, "regional_indicator_a": 32, "regional_indicator_b": 32, "regional_indicator_c": 32, "regional_indicator_d": 32, "regional_indicator_": 32, "regional_indicator_f": 32, "regional_indicator_g": 32, "regional_indicator_h": 32, "regional_indicator_i": 32, "regional_indicator_j": 32, "regional_indicator_k": 32, "regional_indicator_l": 32, "regional_indicator_m": 32, "regional_indicator_n": 32, "regional_indicator_o": 32, "regional_indicator_p": 32, "regional_indicator_q": 32, "regional_indicator_r": 32, "regional_indicator_t": 32, "regional_indicator_u": 32, "regional_indicator_v": 32, "regional_indicator_w": 32, "regional_indicator_x": 32, "regional_indicator_z": 32, "regist": [32, 36, 38, 162, 172, 180, 205, 209, 237, 250, 296, 343, 406, 440, 491, 519, 540, 542, 549, 781, 788, 796, 803, 809, 821, 912, 929, 945, 949, 1050, 1139], "relax": 32, "reliev": [32, 57], "reminder_ribbon": 32, "repeat": [32, 43, 101, 124, 142, 152, 168, 223, 278, 364, 454, 466, 602, 778, 825, 855, 885, 889, 893, 896, 899, 904, 905, 921, 934, 961, 1058], "repeat_on": 32, "rescue_worker_helmet": 32, "restroom": 32, "reunion": 32, "reversed_hand_with_middle_finger_extend": 32, "reversed_hand_with_middle_finger_extended_tone1": 32, "reversed_hand_with_middle_finger_extended_tone2": 32, "reversed_hand_with_middle_finger_extended_tone3": 32, "reversed_hand_with_middle_finger_extended_tone4": 32, "reversed_hand_with_middle_finger_extended_tone5": 32, "revolving_heart": 32, "rewind": [32, 349, 732], "rhino": 32, "rhinocero": 32, "ribbon": 32, "rice": 32, "rice_bal": 32, "rice_crack": 32, "rice_scen": 32, "right_anger_bubbl": 32, "right_facing_fist": 32, "right_facing_fist_tone1": 32, "right_facing_fist_tone2": 32, "right_facing_fist_tone3": 32, "right_facing_fist_tone4": 32, "right_facing_fist_tone5": 32, "right_fist": 32, "right_fist_tone1": 32, "right_fist_tone2": 32, "right_fist_tone3": 32, "right_fist_tone4": 32, "right_fist_tone5": 32, "ring": [32, 35, 38, 885], "ringed_planet": 32, "ro": 32, "robot": [32, 250], "robot_fac": 32, "rock": [32, 291, 464, 1015, 1017, 1152], "rocket": [32, 169], "rofl": 32, "roll_ey": 32, "roll_of_pap": 32, "rolled_up_newspap": 32, "roller_coast": 32, "roller_sk": 32, "rolling_on_the_floor_laugh": 32, "romania": 32, "rooster": 32, "rosett": 32, "rotating_light": 32, "round_pushpin": 32, "rowboat": 32, "rowboat_tone1": 32, "rowboat_tone2": 32, "rowboat_tone3": 32, "rowboat_tone4": 32, "rowboat_tone5": 32, "rowing_man": 32, "rowing_woman": 32, "ru": 32, "rugby_footbal": 32, "runner": [32, 44, 1163, 1194], "runner_tone1": 32, "runner_tone2": 32, "runner_tone3": 32, "runner_tone4": 32, "runner_tone5": 32, "running_man": 32, "running_shirt_with_sash": 32, "running_woman": 32, "russia": [32, 1136], "rw": [32, 62, 64, 163, 164, 173, 181, 250, 260, 473, 776, 781, 789, 856, 867, 870, 881, 884, 904, 907, 922, 929, 930, 931, 933, 942, 953, 956, 957, 965, 993, 999, 1000, 1001, 1011, 1013, 1014, 1050, 1078], "rwanda": 32, "safety_pin": 32, "safety_vest": 32, "sagittariu": 32, "sailboat": 32, "saint_martin": 32, "sake": 32, "salad": 32, "salt": [32, 881], "samoa": 32, "san_marino": 32, "sandal": 32, "sandwich": 32, "santa": 32, "santa_tone1": 32, "santa_tone2": 32, "santa_tone3": 32, "santa_tone4": 32, "santa_tone5": 32, "sao_tome_princip": 32, "sari": 32, "satellit": 32, "satellite_orbit": 32, "saudi": 32, "saudi_arabia": 32, "saudiarabia": 32, "sauropod": 32, "saxophon": 32, "sb": [32, 279], "sc": [32, 35], "scale": [32, 79, 194, 240, 254, 454, 929, 1002, 1015], "scarf": 32, "school": [32, 254, 525, 560, 1145, 1177], "school_satchel": 32, "scientist": [32, 194, 1047, 1128, 1129, 1130, 1137], "scientist_dark_skin_ton": 32, "scientist_light_skin_ton": 32, "scientist_medium_dark_skin_ton": 32, "scientist_medium_light_skin_ton": 32, "scientist_medium_skin_ton": 32, "scientist_tone1": 32, "scientist_tone2": 32, "scientist_tone3": 32, "scientist_tone4": 32, "scientist_tone5": 32, "scissor": 32, "scooter": 32, "scorpion": 32, "scorpiu": 32, "scotland": 32, "scream": [32, 223, 885], "scream_cat": 32, "screwdriv": 32, "scroll": [32, 168, 525], "sd": [32, 234, 250, 254, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336, 825], "se": [32, 589], "seal": 32, "seat": 32, "second_plac": 32, "second_place_med": 32, "secret": [32, 669, 690, 938, 1022, 1134], "see_no_evil": 32, "seedl": 32, "selfi": 32, "selfie_tone1": 32, "selfie_tone2": 32, "selfie_tone3": 32, "selfie_tone4": 32, "selfie_tone5": 32, "seneg": 32, "serbia": 32, "service_dog": 32, "seven": [32, 36, 85, 182, 195, 205, 213, 242, 330, 336, 357, 1090, 1101], "sewing_needl": 32, "seychel": 32, "sg": 32, "sh": [32, 62, 169, 173, 262, 798, 852, 853, 870, 931, 953, 963, 1110], "shaking_hand": 32, "shaking_hands_tone1": 32, "shaking_hands_tone2": 32, "shaking_hands_tone3": 32, "shaking_hands_tone4": 32, "shaking_hands_tone5": 32, "shallow_pan_of_food": 32, "shamrock": 32, "shark": 32, "shaved_ic": 32, "sheep": 32, "shelled_peanut": 32, "shield": [32, 162], "shinto_shrin": 32, "ship": [32, 167], "shirt": [32, 43, 159], "shit": [32, 221], "shop": [32, 286], "shopping_bag": 32, "shopping_cart": 32, "shopping_trollei": 32, "shower": 32, "shrimp": 32, "shrug": 32, "shrug_tone1": 32, "shrug_tone2": 32, "shrug_tone3": 32, "shrug_tone4": 32, "shrug_tone5": 32, "shushing_fac": 32, "si": 32, "sick": [32, 488], "sierra_leon": 32, "sign_of_the_horn": 32, "sign_of_the_horns_tone1": 32, "sign_of_the_horns_tone2": 32, "sign_of_the_horns_tone3": 32, "sign_of_the_horns_tone4": 32, "sign_of_the_horns_tone5": 32, "signal_strength": 32, "singapor": 32, "singer": 32, "singer_dark_skin_ton": 32, "singer_light_skin_ton": 32, "singer_medium_dark_skin_ton": 32, "singer_medium_light_skin_ton": 32, "singer_medium_skin_ton": 32, "singer_tone1": 32, "singer_tone2": 32, "singer_tone3": 32, "singer_tone4": 32, "singer_tone5": 32, "sint_maarten": 32, "six": [32, 182, 195, 205, 213, 231, 330, 336, 357, 1058], "six_pointed_star": 32, "sj": 32, "sk": 32, "skateboard": 32, "skeleton": [32, 165, 177, 467, 854], "ski": 32, "skier": 32, "skull": 32, "skull_and_crossbon": 32, "skull_crossbon": 32, "skunk": 32, "sl": [32, 349, 983], "sled": 32, "sleeping_accommod": 32, "sleeping_b": 32, "sleepi": 32, "sleuth_or_spi": 32, "sleuth_or_spy_tone1": 32, "sleuth_or_spy_tone2": 32, "sleuth_or_spy_tone3": 32, "sleuth_or_spy_tone4": 32, "sleuth_or_spy_tone5": 32, "slight_frown": 32, "slight_smil": 32, "slightly_frowning_fac": 32, "slightly_smiling_fac": 32, "slot_machin": 32, "sloth": 32, "slovakia": 32, "slovenia": [32, 229], "sm": 32, "small_airplan": 32, "small_blue_diamond": 32, "small_orange_diamond": 32, "small_red_triangl": 32, "small_red_triangle_down": 32, "smile": [32, 35], "smile_cat": 32, "smilei": [32, 64], "smiley_cat": 32, "smiling_face_with_3_heart": 32, "smiling_face_with_tear": 32, "smiling_imp": 32, "smirk": 32, "smirk_cat": 32, "smoke": 32, "sn": 32, "snail": 32, "snake": 32, "sneez": 32, "sneezing_fac": 32, "snow_capped_mountain": 32, "snowboard": 32, "snowboarder_dark_skin_ton": 32, "snowboarder_light_skin_ton": 32, "snowboarder_medium_dark_skin_ton": 32, "snowboarder_medium_light_skin_ton": 32, "snowboarder_medium_skin_ton": 32, "snowboarder_tone1": 32, "snowboarder_tone2": 32, "snowboarder_tone3": 32, "snowboarder_tone4": 32, "snowboarder_tone5": 32, "snowflak": 32, "snowman2": 32, "snowman": 32, "snowman_with_snow": 32, "sob": 32, "soccer": 32, "sock": 32, "softbal": 32, "solomon_island": 32, "somalia": 32, "soon": [32, 163, 164, 169, 589, 676, 825, 931, 983, 997, 1139], "sound": [32, 59, 63, 161, 165, 168, 169, 238, 746, 867, 922, 930, 931, 1157], "south_africa": 32, "south_georgia_south_sandwich_island": 32, "south_sudan": 32, "space_invad": 32, "spade": [32, 38], "spaghetti": [32, 129, 454, 465], "spain": 32, "sparkl": 32, "sparkler": 32, "sparkling_heart": 32, "speak_no_evil": 32, "speaker": [32, 763], "speaking_head": 32, "speaking_head_in_silhouett": 32, "speech_balloon": 32, "speech_left": 32, "speedboat": 32, "spider": 32, "spider_web": 32, "spiral_calendar": 32, "spiral_calendar_pad": 32, "spiral_note_pad": 32, "spiral_notepad": 32, "spong": 32, "spoon": 32, "sports_med": 32, "spy": 32, "spy_tone1": 32, "spy_tone2": 32, "spy_tone3": 32, "spy_tone4": 32, "spy_tone5": 32, "squeeze_bottl": 32, "squid": 32, "sr": [32, 234, 1080], "sri_lanka": 32, "st": [32, 228, 466, 993, 995, 996], "st_barthelemi": 32, "st_helena": 32, "st_kitts_nevi": 32, "st_lucia": 32, "st_pierre_miquelon": 32, "st_vincent_grenadin": 32, "stadium": 32, "star2": 32, "star": [32, 38, 626, 931, 1013], "star_and_cresc": 32, "star_of_david": 32, "star_struck": 32, "station": 32, "statue_of_liberti": 32, "steam_locomot": 32, "stethoscop": 32, "stew": 32, "stop_button": 32, "stop_sign": 32, "stopwatch": 32, "straight_rul": 32, "strawberri": 32, "stuck_out_tongu": 32, "stuck_out_tongue_closed_ey": 32, "stuck_out_tongue_winking_ey": 32, "student": [32, 102, 107, 124, 142, 169, 262, 342, 343, 348, 349, 357, 1023, 1158], "student_dark_skin_ton": 32, "student_light_skin_ton": 32, "student_medium_dark_skin_ton": 32, "student_medium_light_skin_ton": 32, "student_medium_skin_ton": 32, "student_tone1": 32, "student_tone2": 32, "student_tone3": 32, "student_tone4": 32, "student_tone5": 32, "studio_microphon": 32, "stuffed_flatbread": 32, "stuffed_pita": 32, "sudan": 32, "sun_behind_large_cloud": 32, "sun_behind_rain_cloud": 32, "sun_behind_small_cloud": 32, "sun_with_fac": 32, "sunflow": 32, "sunni": [32, 110, 281, 284, 530, 541, 547, 549, 582, 778, 978, 1022], "sunris": 32, "sunrise_over_mountain": 32, "superhero": 32, "superhero_dark_skin_ton": 32, "superhero_light_skin_ton": 32, "superhero_medium_dark_skin_ton": 32, "superhero_medium_light_skin_ton": 32, "superhero_medium_skin_ton": 32, "superhero_tone1": 32, "superhero_tone2": 32, "superhero_tone3": 32, "superhero_tone4": 32, "superhero_tone5": 32, "supervillain": 32, "supervillain_dark_skin_ton": 32, "supervillain_light_skin_ton": 32, "supervillain_medium_dark_skin_ton": 32, "supervillain_medium_light_skin_ton": 32, "supervillain_medium_skin_ton": 32, "supervillain_tone1": 32, "supervillain_tone2": 32, "supervillain_tone3": 32, "supervillain_tone4": 32, "supervillain_tone5": 32, "surfer": 32, "surfer_tone1": 32, "surfer_tone2": 32, "surfer_tone3": 32, "surfer_tone4": 32, "surfer_tone5": 32, "surfing_man": 32, "surfing_woman": 32, "surinam": 32, "sushi": 32, "suspension_railwai": 32, "sv": [32, 508, 509], "swan": 32, "swaziland": 32, "sweat": 32, "sweat_drop": 32, "sweat_smil": 32, "sweden": 32, "sweet_potato": 32, "swimmer": 32, "swimmer_tone1": 32, "swimmer_tone2": 32, "swimmer_tone3": 32, "swimmer_tone4": 32, "swimmer_tone5": 32, "swimming_man": 32, "swimming_woman": 32, "switzerland": 32, "sx": 32, "symbol": [32, 33, 38, 124, 173, 202, 223, 231, 237, 240, 247, 250, 268, 277, 278, 298, 299, 395, 410, 419, 426, 432, 436, 439, 443, 446, 447, 452, 456, 461, 462, 684, 722, 728, 775, 776, 777, 778, 781, 800, 803, 825, 855, 870, 885, 905, 907, 921, 930, 1030], "synagogu": 32, "syria": 32, "syring": 32, "sz": [32, 164, 167], "t_rex": 32, "ta": 32, "table_tenni": 32, "taco": 32, "tada": 32, "taiwan": 32, "tajikistan": 32, "takeout_box": 32, "tamal": 32, "tanabata_tre": 32, "tangerin": 32, "tanzania": 32, "tauru": 32, "taxi": 32, "tc": 32, "td": [32, 226], "tea": 32, "teacher": [32, 107, 167, 470, 472, 852, 853, 1011], "teacher_dark_skin_ton": 32, "teacher_light_skin_ton": 32, "teacher_medium_dark_skin_ton": 32, "teacher_medium_light_skin_ton": 32, "teacher_medium_skin_ton": 32, "teacher_tone1": 32, "teacher_tone2": 32, "teacher_tone3": 32, "teacher_tone4": 32, "teacher_tone5": 32, "teapot": 32, "technologist": 32, "technologist_dark_skin_ton": 32, "technologist_light_skin_ton": 32, "technologist_medium_dark_skin_ton": 32, "technologist_medium_light_skin_ton": 32, "technologist_medium_skin_ton": 32, "technologist_tone1": 32, "technologist_tone2": 32, "technologist_tone3": 32, "technologist_tone4": 32, "technologist_tone5": 32, "teddy_bear": 32, "telephon": 32, "telephone_receiv": 32, "telescop": 32, "ten": [32, 164, 185, 205, 244, 250, 336, 916], "tenni": 32, "tent": 32, "test_tub": 32, "tf": [32, 257, 851, 1020], "tg": 32, "th": [32, 198, 226, 388, 430, 539, 617, 1060, 1069], "thailand": 32, "thermomet": [32, 70, 83, 85, 86, 189, 198, 250, 270, 361, 363, 364, 366, 481, 488, 491, 493, 502, 503, 516, 530, 570, 571, 579, 582, 657, 660, 778, 931], "thermometer_fac": 32, "thinking_fac": 32, "third_plac": 32, "third_place_med": 32, "thong_sand": 32, "thought_balloon": 32, "thread": [32, 59, 63, 66, 84, 90, 92, 167, 179, 180, 189, 194, 198, 209, 231, 237, 238, 240, 247, 250, 265, 266, 267, 269, 278, 287, 289, 313, 326, 327, 367, 370, 371, 372, 460, 489, 506, 520, 583, 724, 732, 741, 743, 750, 752, 755, 756, 777, 778, 807, 817, 823, 837, 845, 921, 943, 962, 970, 972, 973, 975, 977, 981, 982, 984, 995, 996, 997, 1033, 1034, 1123, 1165, 1175, 1176, 1177, 1179, 1191, 1192, 1193], "three_button_mous": 32, "thumbdown": 32, "thumbdown_tone1": 32, "thumbdown_tone2": 32, "thumbdown_tone3": 32, "thumbdown_tone4": 32, "thumbdown_tone5": 32, "thumbsdown_tone1": 32, "thumbsdown_tone2": 32, "thumbsdown_tone3": 32, "thumbsdown_tone4": 32, "thumbsdown_tone5": 32, "thumbsup_tone1": 32, "thumbsup_tone2": 32, "thumbsup_tone3": 32, "thumbsup_tone4": 32, "thumbsup_tone5": 32, "thumbup": 32, "thumbup_tone1": 32, "thumbup_tone2": 32, "thumbup_tone3": 32, "thumbup_tone4": 32, "thumbup_tone5": 32, "thunder_cloud_and_rain": 32, "thunder_cloud_rain": 32, "ticket": 32, "tiger2": 32, "tiger": 32, "timer": [32, 59, 63, 66, 124, 136, 186, 287, 445, 757, 778, 802, 827, 834, 840, 843, 844, 846, 858, 861, 921, 930, 946, 950, 962, 981, 987, 989, 997, 1190, 1193], "timer_clock": 32, "timor_lest": 32, "tipping_hand_man": 32, "tipping_hand_woman": 32, "tired_fac": 32, "tj": 32, "tk": 32, "tl": [32, 167], "tm": 32, "tn": [32, 202], "togo": 32, "toilet": [32, 240, 560, 815, 1033], "tokelau": 32, "tokyo_tow": 32, "tomato": 32, "tone1": 32, "tone2": 32, "tone3": 32, "tone4": 32, "tone5": 32, "tonga": 32, "tongu": [32, 1176], "toolbox": [32, 183], "tooth": 32, "toothbrush": 32, "tophat": 32, "tornado": 32, "tr": [32, 226], "track_next": 32, "track_previ": 32, "trackbal": 32, "tractor": 32, "traffic_light": 32, "train2": 32, "tram": 32, "transgender_flag": 32, "transgender_symbol": 32, "triangular_flag_on_post": 32, "triangular_rul": 32, "trident": 32, "trinidad_tobago": 32, "tristan_da_cunha": 32, "triumph": 32, "trolleybu": 32, "trophi": 32, "tropical_drink": 32, "tropical_fish": 32, "truck": 32, "trumpet": 32, "tt": 32, "tulip": 32, "tumbler_glass": 32, "tunisia": 32, "turkei": 32, "turkmenistan": 32, "turks_caicos_island": 32, "turtl": 32, "tuvalu": 32, "tuxedo_tone1": 32, "tuxedo_tone2": 32, "tuxedo_tone3": 32, "tuxedo_tone4": 32, "tuxedo_tone5": 32, "tw": 32, "twisted_rightwards_arrow": 32, "two_heart": 32, "two_men_holding_hand": 32, "two_women_holding_hand": 32, "tz": 32, "u5272": 32, "u5408": 32, "u55b6": 32, "u6307": 32, "u6708": 32, "u6709": 32, "u6e80": 32, "u7121": 32, "u7533": 32, "u7981": 32, "u7a7a": 32, "ua": [32, 229, 238, 313], "ug": 32, "uganda": 32, "ukrain": 32, "umbrella2": 32, "umbrella": 32, "umbrella_on_ground": 32, "unamus": 32, "underag": 32, "unicorn": 32, "unicorn_fac": 32, "united_arab_emir": 32, "united_n": 32, "united_st": 32, "unlock": [32, 752, 754, 756, 817, 823, 970, 1188], "upside_down": 32, "upside_down_fac": 32, "urn": 32, "uruguai": 32, "us_virgin_island": 32, "uz": 32, "uzbekistan": 32, "v_tone1": 32, "v_tone2": 32, "v_tone3": 32, "v_tone4": 32, "v_tone5": 32, "va": [32, 281, 284], "vampir": 32, "vampire_dark_skin_ton": 32, "vampire_light_skin_ton": 32, "vampire_medium_dark_skin_ton": 32, "vampire_medium_light_skin_ton": 32, "vampire_medium_skin_ton": 32, "vampire_tone1": 32, "vampire_tone2": 32, "vampire_tone3": 32, "vampire_tone4": 32, "vampire_tone5": 32, "vanuatu": 32, "vatican_c": 32, "vc": [32, 144, 168], "ve": [32, 162, 164, 867, 1157], "venezuela": 32, "vertical_traffic_light": 32, "vg": 32, "vh": 32, "vi": [32, 758], "vibration_mod": 32, "video_camera": 32, "video_gam": 32, "vietnam": 32, "violin": 32, "virgo": 32, "vn": 32, "volcano": 32, "volleybal": 32, "vu": 32, "vulcan": 32, "vulcan_salut": 32, "vulcan_tone1": 32, "vulcan_tone2": 32, "vulcan_tone3": 32, "vulcan_tone4": 32, "vulcan_tone5": 32, "waffl": 32, "wale": 32, "walk": [32, 161, 181, 194, 290, 291, 312, 339, 341, 364, 375, 682, 699, 869, 931, 1035], "walking_man": 32, "walking_tone1": 32, "walking_tone2": 32, "walking_tone3": 32, "walking_tone4": 32, "walking_tone5": 32, "walking_woman": 32, "wallis_futuna": 32, "waning_crescent_moon": 32, "waning_gibbous_moon": 32, "wastebasket": 32, "water_buffalo": 32, "water_polo": 32, "water_polo_tone1": 32, "water_polo_tone2": 32, "water_polo_tone3": 32, "water_polo_tone4": 32, "water_polo_tone5": 32, "watermelon": [32, 286], "wave": [32, 34, 38, 278, 295], "wave_tone1": 32, "wave_tone2": 32, "wave_tone3": 32, "wave_tone4": 32, "wave_tone5": 32, "waving_black_flag": 32, "waving_white_flag": 32, "wavy_dash": 32, "waxing_crescent_moon": 32, "waxing_gibbous_moon": 32, "wc": [32, 222, 223, 240, 260, 395, 410, 419, 426, 432, 436, 439, 443, 452, 456, 461, 462, 466, 684, 722, 775, 777, 778, 865, 868, 918, 932, 1107], "weari": 32, "wed": [32, 221], "weight_lift": 32, "weight_lifter_tone1": 32, "weight_lifter_tone2": 32, "weight_lifter_tone3": 32, "weight_lifter_tone4": 32, "weight_lifter_tone5": 32, "weight_lifting_man": 32, "weight_lifting_woman": 32, "western_sahara": 32, "wf": 32, "whale2": 32, "whale": 32, "wheel_of_dharma": 32, "wheelchair": 32, "whiski": 32, "white_check_mark": 32, "white_circl": 32, "white_flag": 32, "white_flow": 32, "white_frowning_fac": 32, "white_hair": 32, "white_heart": 32, "white_large_squar": 32, "white_medium_small_squar": 32, "white_medium_squar": 32, "white_small_squar": 32, "white_square_button": 32, "white_sun_behind_cloud": 32, "white_sun_behind_cloud_with_rain": 32, "white_sun_cloud": 32, "white_sun_rain_cloud": 32, "white_sun_small_cloud": 32, "white_sun_with_small_cloud": 32, "wilted_flow": 32, "wilted_ros": 32, "wind_blowing_fac": 32, "wind_chim": 32, "wind_fac": 32, "wine_glass": 32, "wolf": 32, "woman": 32, "woman_and_man_holding_hands_dark_skin_ton": 32, "woman_and_man_holding_hands_dark_skin_tone_light_skin_ton": 32, "woman_and_man_holding_hands_dark_skin_tone_medium_dark_skin_ton": 32, "woman_and_man_holding_hands_dark_skin_tone_medium_light_skin_ton": 32, "woman_and_man_holding_hands_dark_skin_tone_medium_skin_ton": 32, "woman_and_man_holding_hands_light_skin_ton": 32, "woman_and_man_holding_hands_light_skin_tone_dark_skin_ton": 32, "woman_and_man_holding_hands_light_skin_tone_medium_dark_skin_ton": 32, "woman_and_man_holding_hands_light_skin_tone_medium_light_skin_ton": 32, "woman_and_man_holding_hands_light_skin_tone_medium_skin_ton": 32, "woman_and_man_holding_hands_medium_dark_skin_ton": 32, "woman_and_man_holding_hands_medium_dark_skin_tone_dark_skin_ton": 32, "woman_and_man_holding_hands_medium_dark_skin_tone_light_skin_ton": 32, "woman_and_man_holding_hands_medium_dark_skin_tone_medium_light_skin_ton": 32, "woman_and_man_holding_hands_medium_dark_skin_tone_medium_skin_ton": 32, "woman_and_man_holding_hands_medium_light_skin_ton": 32, "woman_and_man_holding_hands_medium_light_skin_tone_dark_skin_ton": 32, "woman_and_man_holding_hands_medium_light_skin_tone_light_skin_ton": 32, "woman_and_man_holding_hands_medium_light_skin_tone_medium_dark_skin_ton": 32, "woman_and_man_holding_hands_medium_light_skin_tone_medium_skin_ton": 32, "woman_and_man_holding_hands_medium_skin_ton": 32, "woman_and_man_holding_hands_medium_skin_tone_dark_skin_ton": 32, "woman_and_man_holding_hands_medium_skin_tone_light_skin_ton": 32, "woman_and_man_holding_hands_medium_skin_tone_medium_dark_skin_ton": 32, "woman_and_man_holding_hands_medium_skin_tone_medium_light_skin_ton": 32, "woman_and_man_holding_hands_tone1": 32, "woman_and_man_holding_hands_tone1_tone2": 32, "woman_and_man_holding_hands_tone1_tone3": 32, "woman_and_man_holding_hands_tone1_tone4": 32, "woman_and_man_holding_hands_tone1_tone5": 32, "woman_and_man_holding_hands_tone2": 32, "woman_and_man_holding_hands_tone2_tone1": 32, "woman_and_man_holding_hands_tone2_tone3": 32, "woman_and_man_holding_hands_tone2_tone4": 32, "woman_and_man_holding_hands_tone2_tone5": 32, "woman_and_man_holding_hands_tone3": 32, "woman_and_man_holding_hands_tone3_tone1": 32, "woman_and_man_holding_hands_tone3_tone2": 32, "woman_and_man_holding_hands_tone3_tone4": 32, "woman_and_man_holding_hands_tone3_tone5": 32, "woman_and_man_holding_hands_tone4": 32, "woman_and_man_holding_hands_tone4_tone1": 32, "woman_and_man_holding_hands_tone4_tone2": 32, "woman_and_man_holding_hands_tone4_tone3": 32, "woman_and_man_holding_hands_tone4_tone5": 32, "woman_and_man_holding_hands_tone5": 32, "woman_and_man_holding_hands_tone5_tone1": 32, "woman_and_man_holding_hands_tone5_tone2": 32, "woman_and_man_holding_hands_tone5_tone3": 32, "woman_and_man_holding_hands_tone5_tone4": 32, "woman_artist": 32, "woman_artist_dark_skin_ton": 32, "woman_artist_light_skin_ton": 32, "woman_artist_medium_dark_skin_ton": 32, "woman_artist_medium_light_skin_ton": 32, "woman_artist_medium_skin_ton": 32, "woman_artist_tone1": 32, "woman_artist_tone2": 32, "woman_artist_tone3": 32, "woman_artist_tone4": 32, "woman_artist_tone5": 32, "woman_astronaut": 32, "woman_astronaut_dark_skin_ton": 32, "woman_astronaut_light_skin_ton": 32, "woman_astronaut_medium_dark_skin_ton": 32, "woman_astronaut_medium_light_skin_ton": 32, "woman_astronaut_medium_skin_ton": 32, "woman_astronaut_tone1": 32, "woman_astronaut_tone2": 32, "woman_astronaut_tone3": 32, "woman_astronaut_tone4": 32, "woman_astronaut_tone5": 32, "woman_bald": 32, "woman_bald_dark_skin_ton": 32, "woman_bald_light_skin_ton": 32, "woman_bald_medium_dark_skin_ton": 32, "woman_bald_medium_light_skin_ton": 32, "woman_bald_medium_skin_ton": 32, "woman_bald_tone1": 32, "woman_bald_tone2": 32, "woman_bald_tone3": 32, "woman_bald_tone4": 32, "woman_bald_tone5": 32, "woman_beard": 32, "woman_bik": 32, "woman_biking_dark_skin_ton": 32, "woman_biking_light_skin_ton": 32, "woman_biking_medium_dark_skin_ton": 32, "woman_biking_medium_light_skin_ton": 32, "woman_biking_medium_skin_ton": 32, "woman_biking_tone1": 32, "woman_biking_tone2": 32, "woman_biking_tone3": 32, "woman_biking_tone4": 32, "woman_biking_tone5": 32, "woman_bouncing_bal": 32, "woman_bouncing_ball_dark_skin_ton": 32, "woman_bouncing_ball_light_skin_ton": 32, "woman_bouncing_ball_medium_dark_skin_ton": 32, "woman_bouncing_ball_medium_light_skin_ton": 32, "woman_bouncing_ball_medium_skin_ton": 32, "woman_bouncing_ball_tone1": 32, "woman_bouncing_ball_tone2": 32, "woman_bouncing_ball_tone3": 32, "woman_bouncing_ball_tone4": 32, "woman_bouncing_ball_tone5": 32, "woman_bow": 32, "woman_bowing_dark_skin_ton": 32, "woman_bowing_light_skin_ton": 32, "woman_bowing_medium_dark_skin_ton": 32, "woman_bowing_medium_light_skin_ton": 32, "woman_bowing_medium_skin_ton": 32, "woman_bowing_tone1": 32, "woman_bowing_tone2": 32, "woman_bowing_tone3": 32, "woman_bowing_tone4": 32, "woman_bowing_tone5": 32, "woman_cartwheel": 32, "woman_cartwheeling_dark_skin_ton": 32, "woman_cartwheeling_light_skin_ton": 32, "woman_cartwheeling_medium_dark_skin_ton": 32, "woman_cartwheeling_medium_light_skin_ton": 32, "woman_cartwheeling_medium_skin_ton": 32, "woman_cartwheeling_tone1": 32, "woman_cartwheeling_tone2": 32, "woman_cartwheeling_tone3": 32, "woman_cartwheeling_tone4": 32, "woman_cartwheeling_tone5": 32, "woman_climb": 32, "woman_climbing_dark_skin_ton": 32, "woman_climbing_light_skin_ton": 32, "woman_climbing_medium_dark_skin_ton": 32, "woman_climbing_medium_light_skin_ton": 32, "woman_climbing_medium_skin_ton": 32, "woman_climbing_tone1": 32, "woman_climbing_tone2": 32, "woman_climbing_tone3": 32, "woman_climbing_tone4": 32, "woman_climbing_tone5": 32, "woman_construction_work": 32, "woman_construction_worker_dark_skin_ton": 32, "woman_construction_worker_light_skin_ton": 32, "woman_construction_worker_medium_dark_skin_ton": 32, "woman_construction_worker_medium_light_skin_ton": 32, "woman_construction_worker_medium_skin_ton": 32, "woman_construction_worker_tone1": 32, "woman_construction_worker_tone2": 32, "woman_construction_worker_tone3": 32, "woman_construction_worker_tone4": 32, "woman_construction_worker_tone5": 32, "woman_cook": 32, "woman_cook_dark_skin_ton": 32, "woman_cook_light_skin_ton": 32, "woman_cook_medium_dark_skin_ton": 32, "woman_cook_medium_light_skin_ton": 32, "woman_cook_medium_skin_ton": 32, "woman_cook_tone1": 32, "woman_cook_tone2": 32, "woman_cook_tone3": 32, "woman_cook_tone4": 32, "woman_cook_tone5": 32, "woman_curly_hair": 32, "woman_curly_haired_dark_skin_ton": 32, "woman_curly_haired_light_skin_ton": 32, "woman_curly_haired_medium_dark_skin_ton": 32, "woman_curly_haired_medium_light_skin_ton": 32, "woman_curly_haired_medium_skin_ton": 32, "woman_curly_haired_tone1": 32, "woman_curly_haired_tone2": 32, "woman_curly_haired_tone3": 32, "woman_curly_haired_tone4": 32, "woman_curly_haired_tone5": 32, "woman_dark_skin_tone_beard": 32, "woman_detect": 32, "woman_detective_dark_skin_ton": 32, "woman_detective_light_skin_ton": 32, "woman_detective_medium_dark_skin_ton": 32, "woman_detective_medium_light_skin_ton": 32, "woman_detective_medium_skin_ton": 32, "woman_detective_tone1": 32, "woman_detective_tone2": 32, "woman_detective_tone3": 32, "woman_detective_tone4": 32, "woman_detective_tone5": 32, "woman_elf": 32, "woman_elf_dark_skin_ton": 32, "woman_elf_light_skin_ton": 32, "woman_elf_medium_dark_skin_ton": 32, "woman_elf_medium_light_skin_ton": 32, "woman_elf_medium_skin_ton": 32, "woman_elf_tone1": 32, "woman_elf_tone2": 32, "woman_elf_tone3": 32, "woman_elf_tone4": 32, "woman_elf_tone5": 32, "woman_facepalm": 32, "woman_facepalming_dark_skin_ton": 32, "woman_facepalming_light_skin_ton": 32, "woman_facepalming_medium_dark_skin_ton": 32, "woman_facepalming_medium_light_skin_ton": 32, "woman_facepalming_medium_skin_ton": 32, "woman_facepalming_tone1": 32, "woman_facepalming_tone2": 32, "woman_facepalming_tone3": 32, "woman_facepalming_tone4": 32, "woman_facepalming_tone5": 32, "woman_factory_work": 32, "woman_factory_worker_dark_skin_ton": 32, "woman_factory_worker_light_skin_ton": 32, "woman_factory_worker_medium_dark_skin_ton": 32, "woman_factory_worker_medium_light_skin_ton": 32, "woman_factory_worker_medium_skin_ton": 32, "woman_factory_worker_tone1": 32, "woman_factory_worker_tone2": 32, "woman_factory_worker_tone3": 32, "woman_factory_worker_tone4": 32, "woman_factory_worker_tone5": 32, "woman_fairi": 32, "woman_fairy_dark_skin_ton": 32, "woman_fairy_light_skin_ton": 32, "woman_fairy_medium_dark_skin_ton": 32, "woman_fairy_medium_light_skin_ton": 32, "woman_fairy_medium_skin_ton": 32, "woman_fairy_tone1": 32, "woman_fairy_tone2": 32, "woman_fairy_tone3": 32, "woman_fairy_tone4": 32, "woman_fairy_tone5": 32, "woman_farm": 32, "woman_farmer_dark_skin_ton": 32, "woman_farmer_light_skin_ton": 32, "woman_farmer_medium_dark_skin_ton": 32, "woman_farmer_medium_light_skin_ton": 32, "woman_farmer_medium_skin_ton": 32, "woman_farmer_tone1": 32, "woman_farmer_tone2": 32, "woman_farmer_tone3": 32, "woman_farmer_tone4": 32, "woman_farmer_tone5": 32, "woman_feeding_babi": 32, "woman_feeding_baby_dark_skin_ton": 32, "woman_feeding_baby_light_skin_ton": 32, "woman_feeding_baby_medium_dark_skin_ton": 32, "woman_feeding_baby_medium_light_skin_ton": 32, "woman_feeding_baby_medium_skin_ton": 32, "woman_feeding_baby_tone1": 32, "woman_feeding_baby_tone2": 32, "woman_feeding_baby_tone3": 32, "woman_feeding_baby_tone4": 32, "woman_feeding_baby_tone5": 32, "woman_firefight": 32, "woman_firefighter_dark_skin_ton": 32, "woman_firefighter_light_skin_ton": 32, "woman_firefighter_medium_dark_skin_ton": 32, "woman_firefighter_medium_light_skin_ton": 32, "woman_firefighter_medium_skin_ton": 32, "woman_firefighter_tone1": 32, "woman_firefighter_tone2": 32, "woman_firefighter_tone3": 32, "woman_firefighter_tone4": 32, "woman_firefighter_tone5": 32, "woman_frown": 32, "woman_frowning_dark_skin_ton": 32, "woman_frowning_light_skin_ton": 32, "woman_frowning_medium_dark_skin_ton": 32, "woman_frowning_medium_light_skin_ton": 32, "woman_frowning_medium_skin_ton": 32, "woman_frowning_tone1": 32, "woman_frowning_tone2": 32, "woman_frowning_tone3": 32, "woman_frowning_tone4": 32, "woman_frowning_tone5": 32, "woman_geni": 32, "woman_gesturing_no": 32, "woman_gesturing_no_dark_skin_ton": 32, "woman_gesturing_no_light_skin_ton": 32, "woman_gesturing_no_medium_dark_skin_ton": 32, "woman_gesturing_no_medium_light_skin_ton": 32, "woman_gesturing_no_medium_skin_ton": 32, "woman_gesturing_no_tone1": 32, "woman_gesturing_no_tone2": 32, "woman_gesturing_no_tone3": 32, "woman_gesturing_no_tone4": 32, "woman_gesturing_no_tone5": 32, "woman_gesturing_ok": 32, "woman_gesturing_ok_dark_skin_ton": 32, "woman_gesturing_ok_light_skin_ton": 32, "woman_gesturing_ok_medium_dark_skin_ton": 32, "woman_gesturing_ok_medium_light_skin_ton": 32, "woman_gesturing_ok_medium_skin_ton": 32, "woman_gesturing_ok_tone1": 32, "woman_gesturing_ok_tone2": 32, "woman_gesturing_ok_tone3": 32, "woman_gesturing_ok_tone4": 32, "woman_gesturing_ok_tone5": 32, "woman_getting_face_massag": 32, "woman_getting_face_massage_dark_skin_ton": 32, "woman_getting_face_massage_light_skin_ton": 32, "woman_getting_face_massage_medium_dark_skin_ton": 32, "woman_getting_face_massage_medium_light_skin_ton": 32, "woman_getting_face_massage_medium_skin_ton": 32, "woman_getting_face_massage_tone1": 32, "woman_getting_face_massage_tone2": 32, "woman_getting_face_massage_tone3": 32, "woman_getting_face_massage_tone4": 32, "woman_getting_face_massage_tone5": 32, "woman_getting_haircut": 32, "woman_getting_haircut_dark_skin_ton": 32, "woman_getting_haircut_light_skin_ton": 32, "woman_getting_haircut_medium_dark_skin_ton": 32, "woman_getting_haircut_medium_light_skin_ton": 32, "woman_getting_haircut_medium_skin_ton": 32, "woman_getting_haircut_tone1": 32, "woman_getting_haircut_tone2": 32, "woman_getting_haircut_tone3": 32, "woman_getting_haircut_tone4": 32, "woman_getting_haircut_tone5": 32, "woman_golf": 32, "woman_golfing_dark_skin_ton": 32, "woman_golfing_light_skin_ton": 32, "woman_golfing_medium_dark_skin_ton": 32, "woman_golfing_medium_light_skin_ton": 32, "woman_golfing_medium_skin_ton": 32, "woman_golfing_tone1": 32, "woman_golfing_tone2": 32, "woman_golfing_tone3": 32, "woman_golfing_tone4": 32, "woman_golfing_tone5": 32, "woman_guard": 32, "woman_guard_dark_skin_ton": 32, "woman_guard_light_skin_ton": 32, "woman_guard_medium_dark_skin_ton": 32, "woman_guard_medium_light_skin_ton": 32, "woman_guard_medium_skin_ton": 32, "woman_guard_tone1": 32, "woman_guard_tone2": 32, "woman_guard_tone3": 32, "woman_guard_tone4": 32, "woman_guard_tone5": 32, "woman_health_work": 32, "woman_health_worker_dark_skin_ton": 32, "woman_health_worker_light_skin_ton": 32, "woman_health_worker_medium_dark_skin_ton": 32, "woman_health_worker_medium_light_skin_ton": 32, "woman_health_worker_medium_skin_ton": 32, "woman_health_worker_tone1": 32, "woman_health_worker_tone2": 32, "woman_health_worker_tone3": 32, "woman_health_worker_tone4": 32, "woman_health_worker_tone5": 32, "woman_in_lotus_posit": 32, "woman_in_lotus_position_dark_skin_ton": 32, "woman_in_lotus_position_light_skin_ton": 32, "woman_in_lotus_position_medium_dark_skin_ton": 32, "woman_in_lotus_position_medium_light_skin_ton": 32, "woman_in_lotus_position_medium_skin_ton": 32, "woman_in_lotus_position_tone1": 32, "woman_in_lotus_position_tone2": 32, "woman_in_lotus_position_tone3": 32, "woman_in_lotus_position_tone4": 32, "woman_in_lotus_position_tone5": 32, "woman_in_manual_wheelchair": 32, "woman_in_manual_wheelchair_dark_skin_ton": 32, "woman_in_manual_wheelchair_light_skin_ton": 32, "woman_in_manual_wheelchair_medium_dark_skin_ton": 32, "woman_in_manual_wheelchair_medium_light_skin_ton": 32, "woman_in_manual_wheelchair_medium_skin_ton": 32, "woman_in_manual_wheelchair_tone1": 32, "woman_in_manual_wheelchair_tone2": 32, "woman_in_manual_wheelchair_tone3": 32, "woman_in_manual_wheelchair_tone4": 32, "woman_in_manual_wheelchair_tone5": 32, "woman_in_motorized_wheelchair": 32, "woman_in_motorized_wheelchair_dark_skin_ton": 32, "woman_in_motorized_wheelchair_light_skin_ton": 32, "woman_in_motorized_wheelchair_medium_dark_skin_ton": 32, "woman_in_motorized_wheelchair_medium_light_skin_ton": 32, "woman_in_motorized_wheelchair_medium_skin_ton": 32, "woman_in_motorized_wheelchair_tone1": 32, "woman_in_motorized_wheelchair_tone2": 32, "woman_in_motorized_wheelchair_tone3": 32, "woman_in_motorized_wheelchair_tone4": 32, "woman_in_motorized_wheelchair_tone5": 32, "woman_in_steamy_room": 32, "woman_in_steamy_room_dark_skin_ton": 32, "woman_in_steamy_room_light_skin_ton": 32, "woman_in_steamy_room_medium_dark_skin_ton": 32, "woman_in_steamy_room_medium_light_skin_ton": 32, "woman_in_steamy_room_medium_skin_ton": 32, "woman_in_steamy_room_tone1": 32, "woman_in_steamy_room_tone2": 32, "woman_in_steamy_room_tone3": 32, "woman_in_steamy_room_tone4": 32, "woman_in_steamy_room_tone5": 32, "woman_in_tuxedo": 32, "woman_in_tuxedo_dark_skin_ton": 32, "woman_in_tuxedo_light_skin_ton": 32, "woman_in_tuxedo_medium_dark_skin_ton": 32, "woman_in_tuxedo_medium_light_skin_ton": 32, "woman_in_tuxedo_medium_skin_ton": 32, "woman_in_tuxedo_tone1": 32, "woman_in_tuxedo_tone2": 32, "woman_in_tuxedo_tone3": 32, "woman_in_tuxedo_tone4": 32, "woman_in_tuxedo_tone5": 32, "woman_judg": 32, "woman_judge_dark_skin_ton": 32, "woman_judge_light_skin_ton": 32, "woman_judge_medium_dark_skin_ton": 32, "woman_judge_medium_light_skin_ton": 32, "woman_judge_medium_skin_ton": 32, "woman_judge_tone1": 32, "woman_judge_tone2": 32, "woman_judge_tone3": 32, "woman_judge_tone4": 32, "woman_judge_tone5": 32, "woman_juggl": 32, "woman_juggling_dark_skin_ton": 32, "woman_juggling_light_skin_ton": 32, "woman_juggling_medium_dark_skin_ton": 32, "woman_juggling_medium_light_skin_ton": 32, "woman_juggling_medium_skin_ton": 32, "woman_juggling_tone1": 32, "woman_juggling_tone2": 32, "woman_juggling_tone3": 32, "woman_juggling_tone4": 32, "woman_juggling_tone5": 32, "woman_kneel": 32, "woman_kneeling_dark_skin_ton": 32, "woman_kneeling_light_skin_ton": 32, "woman_kneeling_medium_dark_skin_ton": 32, "woman_kneeling_medium_light_skin_ton": 32, "woman_kneeling_medium_skin_ton": 32, "woman_kneeling_tone1": 32, "woman_kneeling_tone2": 32, "woman_kneeling_tone3": 32, "woman_kneeling_tone4": 32, "woman_kneeling_tone5": 32, "woman_lifting_weight": 32, "woman_lifting_weights_dark_skin_ton": 32, "woman_lifting_weights_light_skin_ton": 32, "woman_lifting_weights_medium_dark_skin_ton": 32, "woman_lifting_weights_medium_light_skin_ton": 32, "woman_lifting_weights_medium_skin_ton": 32, "woman_lifting_weights_tone1": 32, "woman_lifting_weights_tone2": 32, "woman_lifting_weights_tone3": 32, "woman_lifting_weights_tone4": 32, "woman_lifting_weights_tone5": 32, "woman_light_skin_tone_beard": 32, "woman_mag": 32, "woman_mage_dark_skin_ton": 32, "woman_mage_light_skin_ton": 32, "woman_mage_medium_dark_skin_ton": 32, "woman_mage_medium_light_skin_ton": 32, "woman_mage_medium_skin_ton": 32, "woman_mage_tone1": 32, "woman_mage_tone2": 32, "woman_mage_tone3": 32, "woman_mage_tone4": 32, "woman_mage_tone5": 32, "woman_mechan": 32, "woman_mechanic_dark_skin_ton": 32, "woman_mechanic_light_skin_ton": 32, "woman_mechanic_medium_dark_skin_ton": 32, "woman_mechanic_medium_light_skin_ton": 32, "woman_mechanic_medium_skin_ton": 32, "woman_mechanic_tone1": 32, "woman_mechanic_tone2": 32, "woman_mechanic_tone3": 32, "woman_mechanic_tone4": 32, "woman_mechanic_tone5": 32, "woman_medium_dark_skin_tone_beard": 32, "woman_medium_light_skin_tone_beard": 32, "woman_medium_skin_tone_beard": 32, "woman_mountain_bik": 32, "woman_mountain_biking_dark_skin_ton": 32, "woman_mountain_biking_light_skin_ton": 32, "woman_mountain_biking_medium_dark_skin_ton": 32, "woman_mountain_biking_medium_light_skin_ton": 32, "woman_mountain_biking_medium_skin_ton": 32, "woman_mountain_biking_tone1": 32, "woman_mountain_biking_tone2": 32, "woman_mountain_biking_tone3": 32, "woman_mountain_biking_tone4": 32, "woman_mountain_biking_tone5": 32, "woman_office_work": 32, "woman_office_worker_dark_skin_ton": 32, "woman_office_worker_light_skin_ton": 32, "woman_office_worker_medium_dark_skin_ton": 32, "woman_office_worker_medium_light_skin_ton": 32, "woman_office_worker_medium_skin_ton": 32, "woman_office_worker_tone1": 32, "woman_office_worker_tone2": 32, "woman_office_worker_tone3": 32, "woman_office_worker_tone4": 32, "woman_office_worker_tone5": 32, "woman_pilot": 32, "woman_pilot_dark_skin_ton": 32, "woman_pilot_light_skin_ton": 32, "woman_pilot_medium_dark_skin_ton": 32, "woman_pilot_medium_light_skin_ton": 32, "woman_pilot_medium_skin_ton": 32, "woman_pilot_tone1": 32, "woman_pilot_tone2": 32, "woman_pilot_tone3": 32, "woman_pilot_tone4": 32, "woman_pilot_tone5": 32, "woman_playing_handbal": 32, "woman_playing_handball_dark_skin_ton": 32, "woman_playing_handball_light_skin_ton": 32, "woman_playing_handball_medium_dark_skin_ton": 32, "woman_playing_handball_medium_light_skin_ton": 32, "woman_playing_handball_medium_skin_ton": 32, "woman_playing_handball_tone1": 32, "woman_playing_handball_tone2": 32, "woman_playing_handball_tone3": 32, "woman_playing_handball_tone4": 32, "woman_playing_handball_tone5": 32, "woman_playing_water_polo": 32, "woman_playing_water_polo_dark_skin_ton": 32, "woman_playing_water_polo_light_skin_ton": 32, "woman_playing_water_polo_medium_dark_skin_ton": 32, "woman_playing_water_polo_medium_light_skin_ton": 32, "woman_playing_water_polo_medium_skin_ton": 32, "woman_playing_water_polo_tone1": 32, "woman_playing_water_polo_tone2": 32, "woman_playing_water_polo_tone3": 32, "woman_playing_water_polo_tone4": 32, "woman_playing_water_polo_tone5": 32, "woman_police_offic": 32, "woman_police_officer_dark_skin_ton": 32, "woman_police_officer_light_skin_ton": 32, "woman_police_officer_medium_dark_skin_ton": 32, "woman_police_officer_medium_light_skin_ton": 32, "woman_police_officer_medium_skin_ton": 32, "woman_police_officer_tone1": 32, "woman_police_officer_tone2": 32, "woman_police_officer_tone3": 32, "woman_police_officer_tone4": 32, "woman_police_officer_tone5": 32, "woman_pout": 32, "woman_pouting_dark_skin_ton": 32, "woman_pouting_light_skin_ton": 32, "woman_pouting_medium_dark_skin_ton": 32, "woman_pouting_medium_light_skin_ton": 32, "woman_pouting_medium_skin_ton": 32, "woman_pouting_tone1": 32, "woman_pouting_tone2": 32, "woman_pouting_tone3": 32, "woman_pouting_tone4": 32, "woman_pouting_tone5": 32, "woman_raising_hand": 32, "woman_raising_hand_dark_skin_ton": 32, "woman_raising_hand_light_skin_ton": 32, "woman_raising_hand_medium_dark_skin_ton": 32, "woman_raising_hand_medium_light_skin_ton": 32, "woman_raising_hand_medium_skin_ton": 32, "woman_raising_hand_tone1": 32, "woman_raising_hand_tone2": 32, "woman_raising_hand_tone3": 32, "woman_raising_hand_tone4": 32, "woman_raising_hand_tone5": 32, "woman_red_hair": 32, "woman_red_haired_dark_skin_ton": 32, "woman_red_haired_light_skin_ton": 32, "woman_red_haired_medium_dark_skin_ton": 32, "woman_red_haired_medium_light_skin_ton": 32, "woman_red_haired_medium_skin_ton": 32, "woman_red_haired_tone1": 32, "woman_red_haired_tone2": 32, "woman_red_haired_tone3": 32, "woman_red_haired_tone4": 32, "woman_red_haired_tone5": 32, "woman_rowing_boat": 32, "woman_rowing_boat_dark_skin_ton": 32, "woman_rowing_boat_light_skin_ton": 32, "woman_rowing_boat_medium_dark_skin_ton": 32, "woman_rowing_boat_medium_light_skin_ton": 32, "woman_rowing_boat_medium_skin_ton": 32, "woman_rowing_boat_tone1": 32, "woman_rowing_boat_tone2": 32, "woman_rowing_boat_tone3": 32, "woman_rowing_boat_tone4": 32, "woman_rowing_boat_tone5": 32, "woman_run": 32, "woman_running_dark_skin_ton": 32, "woman_running_light_skin_ton": 32, "woman_running_medium_dark_skin_ton": 32, "woman_running_medium_light_skin_ton": 32, "woman_running_medium_skin_ton": 32, "woman_running_tone1": 32, "woman_running_tone2": 32, "woman_running_tone3": 32, "woman_running_tone4": 32, "woman_running_tone5": 32, "woman_scientist": 32, "woman_scientist_dark_skin_ton": 32, "woman_scientist_light_skin_ton": 32, "woman_scientist_medium_dark_skin_ton": 32, "woman_scientist_medium_light_skin_ton": 32, "woman_scientist_medium_skin_ton": 32, "woman_scientist_tone1": 32, "woman_scientist_tone2": 32, "woman_scientist_tone3": 32, "woman_scientist_tone4": 32, "woman_scientist_tone5": 32, "woman_shrug": 32, "woman_shrugging_dark_skin_ton": 32, "woman_shrugging_light_skin_ton": 32, "woman_shrugging_medium_dark_skin_ton": 32, "woman_shrugging_medium_light_skin_ton": 32, "woman_shrugging_medium_skin_ton": 32, "woman_shrugging_tone1": 32, "woman_shrugging_tone2": 32, "woman_shrugging_tone3": 32, "woman_shrugging_tone4": 32, "woman_shrugging_tone5": 32, "woman_sing": 32, "woman_singer_dark_skin_ton": 32, "woman_singer_light_skin_ton": 32, "woman_singer_medium_dark_skin_ton": 32, "woman_singer_medium_light_skin_ton": 32, "woman_singer_medium_skin_ton": 32, "woman_singer_tone1": 32, "woman_singer_tone2": 32, "woman_singer_tone3": 32, "woman_singer_tone4": 32, "woman_singer_tone5": 32, "woman_stand": 32, "woman_standing_dark_skin_ton": 32, "woman_standing_light_skin_ton": 32, "woman_standing_medium_dark_skin_ton": 32, "woman_standing_medium_light_skin_ton": 32, "woman_standing_medium_skin_ton": 32, "woman_standing_tone1": 32, "woman_standing_tone2": 32, "woman_standing_tone3": 32, "woman_standing_tone4": 32, "woman_standing_tone5": 32, "woman_stud": 32, "woman_student_dark_skin_ton": 32, "woman_student_light_skin_ton": 32, "woman_student_medium_dark_skin_ton": 32, "woman_student_medium_light_skin_ton": 32, "woman_student_medium_skin_ton": 32, "woman_student_tone1": 32, "woman_student_tone2": 32, "woman_student_tone3": 32, "woman_student_tone4": 32, "woman_student_tone5": 32, "woman_superhero": 32, "woman_superhero_dark_skin_ton": 32, "woman_superhero_light_skin_ton": 32, "woman_superhero_medium_dark_skin_ton": 32, "woman_superhero_medium_light_skin_ton": 32, "woman_superhero_medium_skin_ton": 32, "woman_superhero_tone1": 32, "woman_superhero_tone2": 32, "woman_superhero_tone3": 32, "woman_superhero_tone4": 32, "woman_superhero_tone5": 32, "woman_supervillain": 32, "woman_supervillain_dark_skin_ton": 32, "woman_supervillain_light_skin_ton": 32, "woman_supervillain_medium_dark_skin_ton": 32, "woman_supervillain_medium_light_skin_ton": 32, "woman_supervillain_medium_skin_ton": 32, "woman_supervillain_tone1": 32, "woman_supervillain_tone2": 32, "woman_supervillain_tone3": 32, "woman_supervillain_tone4": 32, "woman_supervillain_tone5": 32, "woman_surf": 32, "woman_surfing_dark_skin_ton": 32, "woman_surfing_light_skin_ton": 32, "woman_surfing_medium_dark_skin_ton": 32, "woman_surfing_medium_light_skin_ton": 32, "woman_surfing_medium_skin_ton": 32, "woman_surfing_tone1": 32, "woman_surfing_tone2": 32, "woman_surfing_tone3": 32, "woman_surfing_tone4": 32, "woman_surfing_tone5": 32, "woman_swim": 32, "woman_swimming_dark_skin_ton": 32, "woman_swimming_light_skin_ton": 32, "woman_swimming_medium_dark_skin_ton": 32, "woman_swimming_medium_light_skin_ton": 32, "woman_swimming_medium_skin_ton": 32, "woman_swimming_tone1": 32, "woman_swimming_tone2": 32, "woman_swimming_tone3": 32, "woman_swimming_tone4": 32, "woman_swimming_tone5": 32, "woman_teach": 32, "woman_teacher_dark_skin_ton": 32, "woman_teacher_light_skin_ton": 32, "woman_teacher_medium_dark_skin_ton": 32, "woman_teacher_medium_light_skin_ton": 32, "woman_teacher_medium_skin_ton": 32, "woman_teacher_tone1": 32, "woman_teacher_tone2": 32, "woman_teacher_tone3": 32, "woman_teacher_tone4": 32, "woman_teacher_tone5": 32, "woman_technologist": 32, "woman_technologist_dark_skin_ton": 32, "woman_technologist_light_skin_ton": 32, "woman_technologist_medium_dark_skin_ton": 32, "woman_technologist_medium_light_skin_ton": 32, "woman_technologist_medium_skin_ton": 32, "woman_technologist_tone1": 32, "woman_technologist_tone2": 32, "woman_technologist_tone3": 32, "woman_technologist_tone4": 32, "woman_technologist_tone5": 32, "woman_tipping_hand": 32, "woman_tipping_hand_dark_skin_ton": 32, "woman_tipping_hand_light_skin_ton": 32, "woman_tipping_hand_medium_dark_skin_ton": 32, "woman_tipping_hand_medium_light_skin_ton": 32, "woman_tipping_hand_medium_skin_ton": 32, "woman_tipping_hand_tone1": 32, "woman_tipping_hand_tone2": 32, "woman_tipping_hand_tone3": 32, "woman_tipping_hand_tone4": 32, "woman_tipping_hand_tone5": 32, "woman_tone1": 32, "woman_tone1_beard": 32, "woman_tone2": 32, "woman_tone2_beard": 32, "woman_tone3": 32, "woman_tone3_beard": 32, "woman_tone4": 32, "woman_tone4_beard": 32, "woman_tone5": 32, "woman_tone5_beard": 32, "woman_vampir": 32, "woman_vampire_dark_skin_ton": 32, "woman_vampire_light_skin_ton": 32, "woman_vampire_medium_dark_skin_ton": 32, "woman_vampire_medium_light_skin_ton": 32, "woman_vampire_medium_skin_ton": 32, "woman_vampire_tone1": 32, "woman_vampire_tone2": 32, "woman_vampire_tone3": 32, "woman_vampire_tone4": 32, "woman_vampire_tone5": 32, "woman_walk": 32, "woman_walking_dark_skin_ton": 32, "woman_walking_light_skin_ton": 32, "woman_walking_medium_dark_skin_ton": 32, "woman_walking_medium_light_skin_ton": 32, "woman_walking_medium_skin_ton": 32, "woman_walking_tone1": 32, "woman_walking_tone2": 32, "woman_walking_tone3": 32, "woman_walking_tone4": 32, "woman_walking_tone5": 32, "woman_wearing_turban": 32, "woman_wearing_turban_dark_skin_ton": 32, "woman_wearing_turban_light_skin_ton": 32, "woman_wearing_turban_medium_dark_skin_ton": 32, "woman_wearing_turban_medium_light_skin_ton": 32, "woman_wearing_turban_medium_skin_ton": 32, "woman_wearing_turban_tone1": 32, "woman_wearing_turban_tone2": 32, "woman_wearing_turban_tone3": 32, "woman_wearing_turban_tone4": 32, "woman_wearing_turban_tone5": 32, "woman_white_hair": 32, "woman_white_haired_dark_skin_ton": 32, "woman_white_haired_light_skin_ton": 32, "woman_white_haired_medium_dark_skin_ton": 32, "woman_white_haired_medium_light_skin_ton": 32, "woman_white_haired_medium_skin_ton": 32, "woman_white_haired_tone1": 32, "woman_white_haired_tone2": 32, "woman_white_haired_tone3": 32, "woman_white_haired_tone4": 32, "woman_white_haired_tone5": 32, "woman_with_headscarf": 32, "woman_with_headscarf_dark_skin_ton": 32, "woman_with_headscarf_light_skin_ton": 32, "woman_with_headscarf_medium_dark_skin_ton": 32, "woman_with_headscarf_medium_light_skin_ton": 32, "woman_with_headscarf_medium_skin_ton": 32, "woman_with_headscarf_tone1": 32, "woman_with_headscarf_tone2": 32, "woman_with_headscarf_tone3": 32, "woman_with_headscarf_tone4": 32, "woman_with_headscarf_tone5": 32, "woman_with_probing_can": 32, "woman_with_probing_cane_dark_skin_ton": 32, "woman_with_probing_cane_light_skin_ton": 32, "woman_with_probing_cane_medium_dark_skin_ton": 32, "woman_with_probing_cane_medium_light_skin_ton": 32, "woman_with_probing_cane_medium_skin_ton": 32, "woman_with_probing_cane_tone1": 32, "woman_with_probing_cane_tone2": 32, "woman_with_probing_cane_tone3": 32, "woman_with_probing_cane_tone4": 32, "woman_with_probing_cane_tone5": 32, "woman_with_turban": 32, "woman_with_veil": 32, "woman_with_veil_dark_skin_ton": 32, "woman_with_veil_light_skin_ton": 32, "woman_with_veil_medium_dark_skin_ton": 32, "woman_with_veil_medium_light_skin_ton": 32, "woman_with_veil_medium_skin_ton": 32, "woman_with_veil_tone1": 32, "woman_with_veil_tone2": 32, "woman_with_veil_tone3": 32, "woman_with_veil_tone4": 32, "woman_with_veil_tone5": 32, "woman_zombi": 32, "womans_cloth": 32, "womans_flat_sho": 32, "womans_hat": 32, "women_holding_hands_dark_skin_ton": 32, "women_holding_hands_dark_skin_tone_light_skin_ton": 32, "women_holding_hands_dark_skin_tone_medium_dark_skin_ton": 32, "women_holding_hands_dark_skin_tone_medium_light_skin_ton": 32, "women_holding_hands_dark_skin_tone_medium_skin_ton": 32, "women_holding_hands_light_skin_ton": 32, "women_holding_hands_light_skin_tone_dark_skin_ton": 32, "women_holding_hands_light_skin_tone_medium_dark_skin_ton": 32, "women_holding_hands_light_skin_tone_medium_light_skin_ton": 32, "women_holding_hands_light_skin_tone_medium_skin_ton": 32, "women_holding_hands_medium_dark_skin_ton": 32, "women_holding_hands_medium_dark_skin_tone_dark_skin_ton": 32, "women_holding_hands_medium_dark_skin_tone_light_skin_ton": 32, "women_holding_hands_medium_dark_skin_tone_medium_light_skin_ton": 32, "women_holding_hands_medium_dark_skin_tone_medium_skin_ton": 32, "women_holding_hands_medium_light_skin_ton": 32, "women_holding_hands_medium_light_skin_tone_dark_skin_ton": 32, "women_holding_hands_medium_light_skin_tone_light_skin_ton": 32, "women_holding_hands_medium_light_skin_tone_medium_dark_skin_ton": 32, "women_holding_hands_medium_light_skin_tone_medium_skin_ton": 32, "women_holding_hands_medium_skin_ton": 32, "women_holding_hands_medium_skin_tone_dark_skin_ton": 32, "women_holding_hands_medium_skin_tone_light_skin_ton": 32, "women_holding_hands_medium_skin_tone_medium_dark_skin_ton": 32, "women_holding_hands_medium_skin_tone_medium_light_skin_ton": 32, "women_holding_hands_tone1": 32, "women_holding_hands_tone1_tone2": 32, "women_holding_hands_tone1_tone3": 32, "women_holding_hands_tone1_tone4": 32, "women_holding_hands_tone1_tone5": 32, "women_holding_hands_tone2": 32, "women_holding_hands_tone2_tone1": 32, "women_holding_hands_tone2_tone3": 32, "women_holding_hands_tone2_tone4": 32, "women_holding_hands_tone2_tone5": 32, "women_holding_hands_tone3": 32, "women_holding_hands_tone3_tone1": 32, "women_holding_hands_tone3_tone2": 32, "women_holding_hands_tone3_tone4": 32, "women_holding_hands_tone3_tone5": 32, "women_holding_hands_tone4": 32, "women_holding_hands_tone4_tone1": 32, "women_holding_hands_tone4_tone2": 32, "women_holding_hands_tone4_tone3": 32, "women_holding_hands_tone4_tone5": 32, "women_holding_hands_tone5": 32, "women_holding_hands_tone5_tone1": 32, "women_holding_hands_tone5_tone2": 32, "women_holding_hands_tone5_tone3": 32, "women_holding_hands_tone5_tone4": 32, "women_with_bunny_ears_parti": 32, "women_wrestl": 32, "women": 32, "wood": 32, "woozy_fac": 32, "world_map": 32, "worm": [32, 477], "worri": [32, 445], "worship_symbol": 32, "wrench": 32, "wrestler": 32, "wrestlers_tone1": 32, "wrestlers_tone2": 32, "wrestlers_tone3": 32, "wrestlers_tone4": 32, "wrestlers_tone5": 32, "wrestl": 32, "wrestling_tone1": 32, "wrestling_tone2": 32, "wrestling_tone3": 32, "wrestling_tone4": 32, "wrestling_tone5": 32, "writing_hand": 32, "writing_hand_tone1": 32, "writing_hand_tone2": 32, "writing_hand_tone3": 32, "writing_hand_tone4": 32, "writing_hand_tone5": 32, "w": [32, 40, 198, 202, 205, 227, 231, 237, 247, 250, 257, 278, 292, 358, 359, 378, 466, 601, 662, 870, 884, 930, 931, 965, 1020, 1060, 1073, 1118, 1120, 1148, 1151, 1156], "xk": 32, "yarn": 32, "yawning_fac": 32, "yellow_circl": 32, "yellow_heart": 32, "yellow_squar": 32, "yemen": 32, "yen": [32, 36], "yin_yang": 32, "yo_yo": 32, "yt": 32, "yum": [32, 330], "za": [32, 302, 330, 397], "zambia": 32, "zany_fac": 32, "zap": 32, "zebra": 32, "zimbabw": 32, "zipper_mouth": 32, "zipper_mouth_fac": 32, "zm": 32, "zombi": 32, "zw": 32, "zzz": [32, 336], "sheet": [33, 66, 163, 202, 214, 361, 363, 364, 710, 885, 929, 930], "layout": [33, 158, 179, 252, 442, 455, 1156], "emoji": 33, "sphinxemoji": 33, "mmlalia": 33, "mathml": 33, "alias": [33, 330, 398, 886], "entiti": [33, 162, 406, 420, 447, 464, 484, 492, 599, 794, 983, 1136], "isoamsa": 33, "mathemat": [33, 254, 1072], "arrow": [33, 35, 36, 38, 74, 75, 885, 1015], "isoamsr": 33, "relat": [33, 70, 150, 183, 194, 198, 219, 223, 278, 291, 410, 419, 426, 430, 432, 436, 439, 443, 452, 456, 461, 462, 469, 584, 684, 722, 739, 763, 775, 776, 777, 778, 793, 802, 850, 928, 983, 993, 1123, 1156, 1157], "isonum": 33, "binari": [33, 42, 50, 54, 55, 58, 77, 88, 89, 158, 162, 168, 222, 223, 231, 235, 237, 238, 240, 245, 247, 250, 260, 365, 409, 442, 454, 622, 699, 762, 803, 817, 825, 870, 999, 1002, 1015, 1027, 1054, 1059, 1136], "sphinxish": 33, "send": [33, 102, 124, 142, 144, 159, 162, 173, 198, 199, 201, 202, 203, 204, 237, 238, 257, 259, 260, 278, 299, 357, 362, 506, 849, 865, 881, 924, 925, 929, 938, 948, 996, 998, 1119, 1136], "v4l": [33, 142], "ssh": [33, 98, 102, 103, 124, 142, 144, 159, 169, 173, 202, 234, 250, 257, 260, 268, 275, 277, 282, 292, 296, 298, 318, 324, 330, 336, 343, 356, 357, 363, 364, 370, 371, 375, 541, 542, 778, 851, 852, 853, 860, 907, 916, 921, 922, 933, 934, 959, 1009, 1010, 1011, 1180, 1182, 1187], "taken": [34, 35, 36, 38, 40, 74, 75, 128, 161, 165, 166, 173, 222, 444, 476, 541, 550, 597, 752, 828, 850, 860, 885, 999, 1050, 1136], "definit": [34, 35, 36, 38, 108, 114, 117, 118, 119, 132, 142, 158, 162, 164, 165, 167, 169, 182, 191, 194, 195, 200, 214, 221, 223, 287, 289, 305, 321, 357, 378, 379, 380, 410, 419, 422, 425, 426, 432, 436, 439, 443, 449, 450, 451, 452, 454, 455, 456, 461, 462, 469, 471, 475, 483, 484, 506, 528, 568, 586, 587, 588, 593, 594, 600, 601, 603, 612, 615, 616, 638, 664, 673, 684, 694, 710, 722, 724, 737, 741, 745, 775, 777, 778, 803, 825, 886, 930, 931, 999, 1018, 1025, 1031, 1036, 1047, 1051, 1064, 1065, 1068, 1132, 1146, 1163, 1173, 1176], "includ": [34, 35, 36, 38, 44, 108, 114, 120, 121, 154, 164, 169, 173, 177, 179, 190, 194, 201, 213, 214, 223, 224, 231, 235, 237, 238, 240, 247, 250, 254, 275, 289, 296, 305, 317, 321, 354, 365, 379, 380, 382, 386, 388, 390, 421, 422, 437, 442, 445, 447, 451, 458, 467, 468, 470, 471, 472, 474, 479, 482, 483, 484, 485, 486, 487, 489, 491, 503, 504, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 525, 528, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 548, 550, 551, 552, 553, 555, 556, 557, 558, 559, 568, 574, 577, 584, 585, 586, 588, 592, 593, 594, 595, 597, 598, 599, 600, 601, 602, 603, 604, 609, 612, 613, 614, 615, 616, 617, 619, 620, 621, 622, 623, 625, 626, 629, 630, 631, 635, 639, 640, 641, 642, 643, 649, 653, 654, 657, 659, 660, 662, 666, 671, 672, 673, 674, 675, 676, 677, 678, 681, 682, 683, 685, 687, 689, 692, 693, 694, 695, 697, 699, 700, 701, 702, 705, 706, 707, 708, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 724, 725, 726, 727, 729, 731, 732, 734, 736, 740, 741, 742, 743, 744, 745, 746, 749, 751, 754, 756, 757, 758, 762, 764, 766, 768, 772, 773, 774, 776, 778, 784, 789, 794, 796, 803, 805, 807, 809, 811, 813, 817, 819, 821, 830, 835, 839, 842, 845, 862, 882, 885, 891, 918, 923, 925, 929, 945, 947, 948, 949, 951, 954, 955, 956, 957, 958, 961, 963, 966, 974, 978, 980, 983, 989, 992, 996, 999, 1002, 1011, 1014, 1015, 1017, 1019, 1047, 1048, 1073, 1074, 1146, 1152, 1158, 1163, 1165, 1168, 1178], "substitut": [34, 35, 36, 38, 107, 114, 119, 120, 142, 214, 250, 296, 354, 448, 464, 468, 699, 942, 1135], "angzarr": 34, "0237c": 34, "angl": [34, 36, 38, 1179], "WITH": [34, 35, 38, 948], "downward": [34, 35, 36, 38, 476], "zigzag": 34, "cirmid": 34, "02aef": 34, "vertic": [34, 35, 36, 38, 399], "circl": [34, 35, 38, 224, 560, 865], "abov": [34, 35, 38, 79, 124, 129, 162, 164, 165, 166, 167, 169, 173, 177, 181, 200, 203, 214, 223, 231, 237, 247, 250, 254, 313, 368, 415, 438, 448, 458, 484, 504, 506, 528, 531, 532, 541, 542, 567, 577, 594, 595, 599, 600, 619, 663, 725, 786, 819, 825, 835, 852, 853, 869, 897, 929, 930, 931, 955, 959, 985, 992, 1015, 1023, 1054, 1068, 1139, 1145, 1156, 1163], "cudarrl": 34, "02938": 34, "side": [34, 182, 204, 278, 287, 394, 403, 444, 506, 538, 577, 601, 603, 604, 754, 805, 809, 864, 885, 933, 1023, 1056, 1102, 1128, 1130, 1139], "arc": 34, "clockwis": [34, 38], "cudarrr": 34, "02935": 34, "rightward": [34, 35, 36, 38], "THEN": 34, "curv": [34, 35], "cularr": 34, "021b6": [34, 38], "anticlockwis": [34, 38], "semicircl": [34, 38], "cularrp": 34, "0293d": 34, "plu": [34, 35, 36, 38, 66, 163, 169, 231, 237, 247, 250, 263, 415, 542, 568, 600, 602, 604, 825, 951], "curarr": 34, "021b7": [34, 38], "curarrm": 34, "0293c": 34, "minu": [34, 35, 36, 38, 242, 602, 745], "darr": [34, 36], "021a1": 34, "head": [34, 38, 40, 62, 122, 163, 165, 168, 202, 204, 214, 268, 277, 286, 298, 299, 754, 778, 855, 911, 912, 915, 918, 921, 946, 947, 1014, 1080], "021d3": [34, 38], "doubl": [34, 35, 36, 38, 114, 119, 120, 130, 133, 224, 240, 244, 250, 365, 380, 398, 399, 400, 403, 422, 442, 451, 483, 489, 494, 496, 503, 512, 514, 515, 520, 521, 522, 523, 524, 525, 528, 536, 538, 540, 541, 542, 553, 584, 586, 592, 594, 595, 599, 603, 635, 662, 686, 689, 692, 695, 699, 704, 705, 706, 707, 720, 739, 740, 742, 745, 754, 762, 764, 766, 767, 768, 769, 825, 885, 929, 1023, 1043, 1067, 1144], "darr2": 34, "021ca": [34, 38], "pair": [34, 38, 102, 103, 129, 130, 177, 219, 229, 232, 235, 240, 244, 245, 250, 257, 259, 271, 272, 295, 301, 329, 336, 485, 489, 492, 542, 560, 638, 639, 640, 643, 685, 731, 732, 736, 778, 789, 794, 921, 933, 934, 935, 937, 1017, 1027, 1071, 1123, 1134, 1151], "ddarr": 34, "ddotrahd": 34, "02911": 34, "dot": [34, 35, 36, 38, 166, 458, 473, 478, 907, 1001], "stem": [34, 794], "dfisht": 34, "0297f": 34, "down": [34, 35, 38, 161, 162, 165, 190, 267, 305, 321, 363, 384, 425, 470, 471, 482, 489, 531, 538, 539, 540, 541, 560, 602, 635, 660, 682, 699, 724, 741, 763, 778, 793, 794, 825, 871, 917, 924, 931, 999, 1002, 1163, 1168], "tail": [34, 38, 163, 202, 204, 214, 268, 277, 298, 299, 754, 778, 813, 855, 912, 915, 918, 921, 1148], "dhar": 34, "02965": 34, "harpoon": [34, 38], "barb": [34, 38], "left": [34, 35, 36, 38, 64, 85, 111, 112, 129, 161, 162, 164, 182, 213, 224, 250, 296, 401, 402, 409, 415, 487, 531, 538, 584, 587, 591, 599, 600, 657, 664, 690, 867, 868, 885, 929, 938, 957, 999, 1027, 1031, 1042, 1043, 1054, 1068, 1122, 1128, 1146], "besid": [34, 35, 38, 177], "dharl": 34, "021c3": [34, 38], "leftward": [34, 35, 36, 38], "dharr": 34, "021c2": [34, 38], "dlarr": 34, "02199": [34, 38], "south": [34, 38], "west": [34, 38, 171], "drarr": 34, "02198": [34, 38], "east": [34, 38], "duarr": 34, "021f5": [34, 38], "OF": [34, 35, 38, 165, 732], "upward": [34, 36, 38], "duhar": 34, "0296f": [34, 38], "dzigrarr": 34, "027ff": 34, "long": [34, 35, 38, 53, 137, 161, 162, 163, 164, 165, 169, 172, 190, 194, 202, 214, 231, 235, 237, 240, 247, 250, 258, 286, 357, 375, 386, 396, 398, 399, 403, 407, 408, 435, 442, 444, 453, 457, 459, 460, 479, 484, 541, 586, 587, 592, 597, 662, 732, 741, 751, 762, 764, 766, 768, 776, 784, 796, 805, 807, 823, 825, 830, 835, 839, 864, 885, 907, 931, 942, 948, 951, 981, 989, 1018, 1025, 1065, 1075, 1123, 1130, 1141, 1148, 1176], "squiggl": 34, "erarr": 34, "02971": 34, "equal": [34, 35, 36, 38, 164, 186, 198, 214, 221, 224, 250, 254, 286, 287, 296, 308, 324, 380, 386, 402, 409, 414, 425, 450, 453, 530, 536, 543, 547, 582, 627, 646, 650, 677, 679, 745, 778, 860, 864, 918, 942, 981, 985, 986, 1054, 1108, 1163], "sign": [34, 35, 36, 38, 165, 172, 177, 240, 396, 398, 406, 450, 464, 488, 662, 725, 798, 1054, 1068, 1128, 1173, 1174], "harr": 34, "021d4": [34, 38], "02194": [34, 38], "harrcir": 34, "02948": 34, "small": [34, 38, 43, 107, 161, 163, 164, 194, 214, 218, 274, 313, 323, 378, 450, 454, 487, 539, 584, 696, 741, 922, 923, 929, 961, 993, 1046, 1069, 1135, 1163], "harrw": 34, "021ad": [34, 38], "hoarr": 34, "021ff": 34, "imof": 34, "022b7": 34, "imag": [34, 35, 38, 156, 158, 161, 162, 163, 164, 172, 185, 247, 250, 254, 272, 336, 357, 363, 460, 466, 473, 592, 803, 825, 922, 1125, 1130], "laarr": 34, "021da": [34, 38], "tripl": [34, 35, 38, 59, 63], "larr": [34, 36], "0219e": [34, 38], "larr2": 34, "021c7": [34, 38], "larrbf": 34, "0291f": 34, "bar": [34, 35, 36, 38, 168, 189, 209, 232, 245, 250, 259, 262, 292, 295, 296, 301, 314, 318, 324, 330, 336, 340, 366, 466, 531, 746, 1021, 1063, 1123], "TO": [34, 35, 38, 1078], "black": [34, 38, 167, 218, 226, 238, 241, 638, 1011], "larrf": 34, "0291d": 34, "larrhk": 34, "021a9": [34, 38], "larrlp": 34, "021ab": [34, 38], "larrpl": 34, "02939": 34, "larrsim": 34, "02973": 34, "tild": [34, 35, 38], "larrtl": 34, "021a2": [34, 38], "latail": 34, "0291b": 34, "02919": 34, "lbarr": 34, "0290e": 34, "0290c": 34, "ldca": 34, "02936": 34, "ldrdhar": 34, "02967": 34, "ldrushar": 34, "0294b": 34, "ldsh": 34, "021b2": 34, "tip": [34, 38, 219, 229, 232, 235, 259, 271, 295, 301, 1123], "lfisht": 34, "0297c": 34, "lhar": 34, "02962": 34, "lhard": 34, "021bd": [34, 38], "lharu": 34, "021bc": [34, 38], "lharul": 34, "0296a": 34, "llarr": 34, "llhard": 34, "0296b": 34, "below": [34, 35, 38, 132, 140, 158, 162, 163, 164, 167, 169, 173, 182, 194, 203, 221, 254, 267, 313, 389, 391, 458, 465, 476, 509, 523, 531, 532, 538, 541, 676, 678, 692, 704, 724, 725, 741, 745, 754, 756, 773, 774, 776, 798, 819, 860, 864, 868, 885, 922, 931, 952, 996, 999, 1163], "loarr": 34, "021fd": 34, "lrarr": 34, "021c6": [34, 38], "lrarr2": 34, "lrhar": 34, "021cb": [34, 38], "lrhar2": 34, "lrhard": 34, "0296d": 34, "lsh": [34, 38], "021b0": [34, 38], "lurdshar": 34, "0294a": 34, "luruhar": 34, "02966": 34, "02905": 34, "021a6": [34, 38], "midcir": 34, "02af0": 34, "mumap": 34, "022b8": [34, 38], "multimap": [34, 38, 287, 560, 637, 646, 650, 679, 778], "nearhk": 34, "02924": 34, "north": [34, 38], "nearr": 34, "021d7": 34, "02197": [34, 38], "nesear": 34, "02928": [34, 38], "AND": [34, 35, 38, 386, 402, 425, 588, 913, 1042], "nharr": 34, "021ce": [34, 38], "stroke": [34, 38], "021ae": [34, 38], "nlarr": 34, "021cd": [34, 38], "0219a": [34, 38], "nrarr": 34, "021cf": [34, 38], "0219b": [34, 38], "nrarrc": 34, "02933": 34, "00338": [34, 38], "directli": [34, 40, 129, 158, 177, 263, 288, 343, 482, 599, 668, 796, 809, 821, 828, 839, 931, 941, 945, 999, 1022, 1042, 1050, 1113, 1115, 1142], "slash": [34, 38, 909, 993], "nrarrw": 34, "0219d": [34, 38], "nvharr": 34, "02904": 34, "nvlarr": 34, "02902": 34, "nvrarr": 34, "02903": 34, "nwarhk": 34, "02923": 34, "nwarr": 34, "021d6": 34, "02196": [34, 38], "nwnear": 34, "02927": 34, "olarr": 34, "021ba": [34, 38], "orarr": 34, "021bb": [34, 38], "origof": 34, "022b6": 34, "origin": [34, 35, 38, 62, 64, 122, 144, 159, 165, 167, 172, 177, 183, 195, 227, 231, 237, 240, 242, 247, 250, 275, 286, 291, 295, 296, 298, 299, 301, 305, 313, 317, 321, 323, 327, 329, 335, 339, 424, 440, 484, 487, 538, 585, 593, 594, 595, 623, 674, 675, 677, 678, 736, 740, 743, 745, 756, 798, 825, 826, 849, 852, 853, 868, 882, 1020, 1125, 1136, 1158], "raarr": 34, "021db": [34, 38], "rarr": [34, 36], "021a0": [34, 38], "rarr2": 34, "021c9": [34, 38], "rarrap": 34, "02975": 34, "almost": [34, 35, 38, 59, 63, 164, 177, 186, 223, 403, 451, 453, 474, 589, 654, 682, 730, 746, 993], "rarrbf": 34, "02920": 34, "rarrc": 34, "rarrf": 34, "0291e": 34, "rarrhk": 34, "021aa": [34, 38], "rarrlp": 34, "021ac": [34, 38], "rarrpl": 34, "02945": 34, "rarrsim": 34, "02974": 34, "rarrtl": 34, "02916": 34, "021a3": [34, 38], "rarrw": 34, "ratail": 34, "0291c": 34, "0291a": 34, "rbarr": 34, "02910": [34, 38], "0290f": [34, 38], "0290d": [34, 38], "rdca": 34, "02937": 34, "rdldhar": 34, "02969": 34, "rdsh": 34, "021b3": 34, "rfisht": 34, "0297d": 34, "rhar": 34, "02964": 34, "rhard": 34, "021c1": [34, 38], "rharu": 34, "021c0": [34, 38], "rharul": 34, "0296c": 34, "rlarr": 34, "021c4": [34, 38], "rlarr2": 34, "rlhar": 34, "021cc": [34, 38], "rlhar2": 34, "roarr": 34, "021fe": 34, "rrarr": 34, "rsh": [34, 38, 600, 932], "021b1": [34, 38], "ruluhar": 34, "02968": 34, "searhk": 34, "02925": [34, 38], "searr": 34, "021d8": 34, "seswar": 34, "02929": [34, 38], "simrarr": 34, "02972": 34, "slarr": 34, "02190": [34, 36, 38], "srarr": 34, "02192": [34, 36, 38], "swarhk": 34, "02926": [34, 38], "swarr": 34, "021d9": 34, "swnwar": 34, "0292a": 34, "uarr": [34, 36], "0219f": 34, "021d1": [34, 38], "uarr2": 34, "021c8": [34, 38], "uarrocir": 34, "02949": 34, "udarr": 34, "021c5": [34, 38], "udhar": 34, "0296e": [34, 38], "ufisht": 34, "0297e": 34, "uhar": 34, "02963": 34, "uharl": 34, "021bf": [34, 38], "uharr": 34, "021be": [34, 38], "uuarr": 34, "varr": 34, "021d5": [34, 38], "02195": [34, 38], "xharr": 34, "027fa": [34, 38], "027f7": [34, 38], "xlarr": 34, "027f8": [34, 38], "027f5": [34, 38], "xmap": 34, "027fc": [34, 38], "xrarr": 34, "027f9": [34, 38], "027f6": [34, 38], "zigrarr": 34, "021dd": 34, "ap": [35, 955], "02a70": 35, "approxim": [35, 38, 164, 260], "OR": [35, 38, 237, 386, 402, 425, 442, 913, 1042], "0224a": [35, 38], "apid": 35, "0224b": 35, "asymp": 35, "02248": [35, 38], "barv": 35, "02ae7": 35, "tack": [35, 38], "overbar": 35, "bcong": 35, "0224c": [35, 38], "bepsi": 35, "003f6": [35, 38], "greek": [35, 38], "revers": [35, 36, 38, 207, 234, 240, 257, 275, 282, 287, 296, 302, 324, 330, 340, 383, 560, 567, 568, 627, 631, 646, 650, 679, 724, 778, 780, 819, 858, 922, 983, 1070, 1103], "lunat": [35, 38], "epsilon": [35, 38], "bowti": 35, "022c8": 35, "bsim": 35, "0223d": [35, 38], "bsime": 35, "022cd": [35, 38], "bsolhsub": 35, "0005c": [35, 36], "02282": [35, 38], "solidu": [35, 36], "subset": [35, 38, 250, 1002, 1015, 1072], "bump": 35, "0224e": [35, 38], "geometr": [35, 38, 254], "equival": [35, 38, 79, 93, 107, 110, 250, 411, 415, 430, 435, 596, 673, 849, 851, 886, 918, 951, 1031, 1053, 1063, 1073], "02aae": 35, "bumpi": 35, "0224f": [35, 38], "between": [35, 38, 70, 90, 104, 137, 162, 163, 164, 166, 172, 173, 183, 198, 210, 223, 231, 234, 237, 242, 244, 247, 250, 254, 257, 272, 275, 282, 296, 301, 314, 324, 327, 330, 336, 343, 353, 387, 390, 403, 425, 430, 437, 450, 455, 464, 475, 496, 506, 528, 536, 600, 617, 676, 732, 742, 746, 757, 779, 780, 784, 830, 856, 857, 862, 922, 929, 959, 969, 983, 984, 985, 986, 993, 997, 1031, 1042, 1052, 1054, 1065, 1129, 1181], "cire": 35, "02257": [35, 38], "colon": [35, 36, 38, 1101], "02237": [35, 38], "proport": [35, 38, 163], "02a74": 35, "02254": [35, 38], "congdot": 35, "02a6d": 35, "congruent": [35, 38], "csub": 35, "02acf": 35, "close": [35, 54, 114, 119, 120, 142, 167, 173, 182, 194, 212, 221, 222, 235, 242, 266, 267, 269, 292, 296, 324, 326, 327, 430, 464, 469, 542, 560, 710, 738, 747, 755, 777, 778, 868, 929, 947, 948, 949, 951, 952, 954, 955, 956, 957, 958, 961, 963, 966, 992, 996, 1020, 1132, 1189], "csube": 35, "02ad1": 35, "csup": 35, "02ad0": 35, "superset": [35, 38, 1072, 1175], "csupe": 35, "02ad2": 35, "cuepr": 35, "022de": [35, 38], "cuesc": 35, "022df": [35, 38], "succe": [35, 38, 803, 904, 933, 1022], "cupr": 35, "0227c": [35, 38], "dashv": 35, "02ae4": [35, 38], "turnstil": [35, 38], "022a3": [35, 38], "easter": [35, 214], "02a6e": 35, "asterisk": [35, 36, 38], "ecir": 35, "02256": [35, 38], "IN": [35, 38, 166], "ecolon": 35, "02255": [35, 38], "eddot": 35, "02a77": [35, 38], "edot": 35, "02251": [35, 38], "efdot": 35, "02252": [35, 38], "THE": [35, 38, 948], "02a9a": 35, "greater": [35, 36, 38, 107, 124, 289, 402, 530, 536, 544, 547, 582, 724, 778, 811, 1054], "than": [35, 36, 38, 43, 66, 69, 107, 122, 124, 132, 141, 142, 158, 162, 163, 167, 169, 172, 173, 177, 194, 198, 201, 205, 214, 221, 224, 231, 237, 242, 244, 247, 250, 254, 281, 284, 289, 313, 316, 343, 402, 403, 422, 424, 453, 454, 455, 466, 467, 469, 475, 482, 530, 538, 544, 547, 582, 586, 598, 601, 603, 604, 669, 682, 693, 719, 732, 756, 778, 781, 796, 811, 817, 821, 825, 885, 910, 914, 922, 930, 940, 941, 948, 951, 968, 996, 1000, 1015, 1016, 1031, 1036, 1053, 1054, 1098, 1102, 1132, 1139, 1142, 1158, 1176], "02a96": [35, 38], "slant": [35, 38], "egsdot": 35, "02a98": 35, "el": [35, 210, 221, 257], "02a99": 35, "less": [35, 36, 38, 59, 63, 79, 158, 162, 163, 164, 169, 173, 223, 237, 254, 268, 277, 278, 284, 298, 299, 380, 402, 403, 407, 450, 453, 484, 536, 640, 660, 686, 732, 734, 756, 778, 796, 798, 825, 855, 869, 885, 912, 915, 916, 918, 921, 951, 1036, 1054, 1073, 1151, 1152, 1165, 1176, 1182], "02a95": [35, 38], "elsdot": 35, "02a97": 35, "equest": 35, "0225f": [35, 38], "equivdd": 35, "02a78": 35, "erdot": 35, "02253": [35, 38], "esdot": 35, "02250": [35, 38], "limit": [35, 38, 64, 162, 163, 179, 201, 231, 237, 247, 250, 296, 403, 445, 638, 682, 825, 862, 967, 986, 1028, 1029, 1054, 1127, 1149], "esim": 35, "02a73": 35, "02242": [35, 38], "fork": [35, 43, 141, 164, 179, 183, 778, 784, 785, 787, 792, 795, 802, 806, 816, 829, 834, 840, 843, 846, 921, 954, 967, 975, 993, 1189], "022d4": [35, 38], "pitchfork": [35, 38], "forkv": 35, "02ad9": 35, "02322": 35, "gap": 35, "02a86": [35, 38], "02267": [35, 38], "gel": 35, "02a8c": [35, 38], "022db": [35, 38], "02a7e": [35, 38], "gescc": 35, "02aa9": 35, "gesdot": 35, "02a80": 35, "gesdoto": 35, "02a82": 35, "gesdotol": 35, "02a84": 35, "gesl": 35, "0fe00": [35, 38], "02a94": 35, "022d9": [35, 38], "02277": [35, 38], "gla": 35, "02aa5": 35, "gle": 35, "02a92": 35, "glj": 35, "02aa4": 35, "overlap": [35, 250, 254, 296, 776, 809, 1034], "gsdot": 35, "022d7": [35, 38], "gsim": 35, "02273": [35, 38], "gsime": 35, "02a8e": 35, "similar": [35, 59, 63, 130, 162, 164, 194, 198, 202, 204, 235, 248, 262, 405, 412, 483, 510, 539, 540, 571, 583, 592, 710, 745, 746, 773, 774, 796, 811, 825, 869, 1015, 1017, 1123], "gsiml": 35, "02a90": 35, "0226b": [35, 38], "gtcc": 35, "02aa7": 35, "gtcir": 35, "02a7a": 35, "gtdot": 35, "gtquest": 35, "02a7c": 35, "mark": [35, 36, 38, 221, 262, 358, 359, 399, 421, 721, 729, 841, 1031, 1033, 1151], "gtrarr": 35, "02978": 35, "homtht": 35, "0223b": 35, "homothet": 35, "lap": 35, "02a85": [35, 38], "lat": 35, "02aab": 35, "larger": [35, 69, 79, 194, 201, 224, 241, 254, 304, 320, 451, 454, 466, 504, 584, 601, 603, 796, 845, 867, 929, 931, 996, 1016, 1029, 1178], "late": [35, 162, 164, 287, 289, 745, 746, 931, 987, 1031, 1048, 1065, 1179], "02aad": 35, "ldot": 35, "022d6": [35, 38], "le": [35, 504], "02266": [35, 38], "02a8b": [35, 38], "022da": [35, 38], "02a7d": [35, 38], "lescc": 35, "02aa8": 35, "lesdot": 35, "02a7f": 35, "lesdoto": 35, "02a81": 35, "lesdotor": 35, "02a83": 35, "lesg": 35, "02a93": 35, "lg": [35, 302, 318, 1136], "02276": [35, 38], "lge": 35, "02a91": 35, "ll": [35, 38, 59, 60, 63, 124, 161, 162, 163, 165, 167, 169, 172, 177, 178, 190, 192, 202, 204, 218, 247, 250, 278, 281, 284, 525, 539, 601, 603, 604, 825, 851, 922, 931, 942, 957, 1004, 1007, 1013, 1046, 1139], "022d8": 35, "lsim": 35, "02272": [35, 38], "lsime": 35, "02a8d": 35, "lsimg": 35, "02a8f": 35, "0226a": [35, 38], "ltcc": 35, "02aa6": 35, "ltcir": 35, "02a79": 35, "ltdot": 35, "ltlarr": 35, "02976": 35, "ltquest": 35, "02a7b": 35, "ltrie": 35, "022b4": [35, 38], "normal": [35, 38, 89, 150, 162, 164, 169, 177, 180, 185, 194, 254, 442, 469, 474, 479, 598, 600, 841, 857, 862, 983, 997, 1050, 1129, 1142, 1156, 1168], "mcomma": 35, "02a29": 35, "comma": [35, 36, 200, 213, 234, 314, 1131], "mddot": 35, "0223a": 35, "mid": 35, "02223": [35, 38], "mlcp": 35, "02adb": 35, "transvers": 35, "intersect": [35, 38, 218, 242, 314, 1072], "model": [35, 122, 265, 280, 286, 289, 441, 1054, 1126, 1129, 1148], "022a7": 35, "mstpo": 35, "0223e": 35, "invert": [35, 36, 64, 194, 965], "lazi": [35, 231, 237, 247, 250, 394, 741], "02abb": 35, "0227a": [35, 38], "prap": 35, "02ab7": [35, 38], "prcue": 35, "pre": [35, 164, 194, 223, 404, 586, 588, 592, 638, 639, 640, 690, 731, 732, 885, 1047, 1062, 1135], "02ab3": 35, "02aaf": [35, 38], "singl": [35, 36, 38, 44, 59, 63, 64, 85, 107, 111, 112, 114, 119, 120, 124, 129, 132, 142, 144, 162, 164, 182, 221, 222, 231, 235, 237, 243, 244, 247, 250, 254, 278, 380, 386, 398, 399, 411, 457, 460, 464, 466, 469, 495, 508, 593, 647, 721, 732, 740, 742, 753, 784, 794, 796, 858, 860, 861, 862, 885, 890, 891, 892, 894, 910, 922, 930, 934, 970, 981, 983, 984, 993, 996, 1000, 1002, 1005, 1011, 1015, 1016, 1017, 1030, 1067, 1068, 1075, 1090, 1096, 1129, 1136, 1144, 1147, 1151, 1156, 1157, 1164], "prsim": 35, "0227e": [35, 38], "prurel": 35, "022b0": 35, "ratio": [35, 254], "02236": 35, "rtrie": 35, "022b5": [35, 38], "AS": [35, 38, 948], "rtriltri": 35, "029ce": 35, "triangl": [35, 38, 560], "samalg": 35, "02210": [35, 38], "coproduct": [35, 38], "02abc": 35, "0227b": [35, 38], "scap": 35, "02ab8": [35, 38], "sccue": 35, "0227d": [35, 38], "sce": 35, "02ab4": 35, "02ab0": [35, 38], "scsim": 35, "0227f": [35, 38], "sdote": 35, "02a66": 35, "sfrown": 35, "simg": 35, "02a9e": 35, "02aa0": 35, "siml": 35, "02a9d": 35, "02a9f": 35, "smid": 35, "02323": 35, "smt": 35, "02aaa": 35, "smaller": [35, 240, 254, 380, 442, 451, 466, 1017], "smte": 35, "02aac": 35, "spar": [35, 280, 466], "02225": [35, 38], "parallel": [35, 38, 59, 63, 73, 74, 75, 79, 92, 168, 191, 194, 198, 200, 235, 290, 291, 312, 474, 754, 778, 815, 817, 825, 828, 861, 869, 970, 981, 984, 1031, 1033, 1034, 1118, 1123, 1180, 1181, 1188, 1192], "sqsub": 35, "0228f": [35, 38], "squar": [35, 36, 38, 64, 182, 195, 205, 221, 227, 234, 237, 242, 244, 250, 254, 263, 275, 289, 296, 314, 318, 324, 330, 336, 492, 603, 1025, 1074, 1077, 1144], "sqsube": 35, "02291": [35, 38], "sqsup": 35, "02290": [35, 38], "sqsupe": 35, "02292": [35, 38], "ssmile": 35, "sub": [35, 238, 250, 296, 487, 504, 584, 763, 1021, 1060, 1069, 1075, 1165], "022d0": [35, 38], "sube": 35, "02ac5": [35, 38], "subedot": 35, "02ac3": 35, "submult": 35, "02ac1": 35, "subplu": 35, "02abf": 35, "subrarr": 35, "02979": 35, "subsim": 35, "02ac7": 35, "subsub": 35, "02ad5": 35, "subsup": 35, "02ad3": 35, "sup": [35, 955], "022d1": [35, 38], "supdsub": 35, "02ad8": 35, "supe": 35, "02ac6": [35, 38], "supedot": 35, "02ac4": 35, "suphsol": 35, "02283": [35, 38], "0002f": [35, 36], "suphsub": 35, "02ad7": 35, "suplarr": 35, "0297b": 35, "supmult": 35, "02ac2": 35, "supplu": 35, "02ac0": 35, "supsim": 35, "02ac8": 35, "supsub": 35, "02ad4": 35, "supsup": 35, "02ad6": 35, "thkap": 35, "thksim": 35, "0223c": [35, 38], "topfork": 35, "02ada": 35, "tee": [35, 869], "trie": 35, "0225c": [35, 38], "delta": [35, 38, 122, 177, 227], "twixt": 35, "0226c": [35, 38], "vbar": 35, "02aeb": 35, "02ae8": 35, "underbar": 35, "vbarv": 35, "02ae9": 35, "vdash": 35, "022ab": 35, "022a9": 35, "022a8": [35, 38], "022a2": [35, 38], "vdashl": 35, "02ae6": 35, "veebar": 35, "022bb": 35, "xor": [35, 1042], "vltri": 35, "022b2": [35, 38], "vprop": 35, "0221d": [35, 38], "vrtri": 35, "022b3": [35, 38], "vvdash": 35, "022aa": 35, "\u00bd": 36, "\u00bc": 36, "\u215b": 36, "\u00be": 36, "\u215c": 36, "\u215d": 36, "\u215e": 36, "_": [36, 39, 64, 182, 183, 218, 231, 234, 235, 237, 244, 247, 250, 257, 260, 272, 296, 318, 340, 349, 397, 466, 596, 719, 815, 885, 987, 1013, 1031, 1033], "\u00b5": 36, "\u03c9": 36, "\u00aa": 36, "\u00ba": 36, "\u00b9": 36, "\u00b2": 36, "\u00b3": 36, "amp": [36, 234], "00026": 36, "ampersand": [36, 695], "apo": 36, "00027": 36, "apostroph": 36, "ast": [36, 504], "0002a": 36, "brvbar": 36, "000a6": 36, "broken": [36, 440, 441, 710, 817, 830, 1035, 1101, 1131], "bsol": 36, "cent": 36, "000a2": 36, "0003a": 36, "0002c": 36, "commat": 36, "00040": 36, "commerci": [36, 169, 803, 864], "AT": 36, "000a9": 36, "curren": 36, "000a4": 36, "currenc": [36, 280, 466], "02193": [36, 38], "deg": 36, "000b0": 36, "degre": [36, 483, 494, 525, 636, 931, 1048], "000f7": [36, 38], "00024": 36, "0003d": 36, "excl": 36, "00021": 36, "frac12": 36, "000bd": 36, "vulgar": 36, "fraction": [36, 254, 343], "ONE": [36, 683], "frac14": 36, "000bc": 36, "quarter": 36, "frac18": 36, "0215b": 36, "eighth": 36, "frac34": 36, "000be": 36, "frac38": 36, "0215c": 36, "frac58": 36, "0215d": 36, "frac78": 36, "0215e": 36, "0003e": 36, "horbar": 36, "02015": 36, "horizont": [36, 399], "hyphen": 36, "02010": 36, "iexcl": 36, "000a1": 36, "iquest": 36, "000bf": 36, "laquo": 36, "000ab": 36, "quotat": [36, 38], "lcub": 36, "0007b": [36, 38], "curli": [36, 38], "bracket": [36, 38, 1051], "ldquo": 36, "0201c": [36, 38], "lowbar": 36, "0005f": 36, "low": [36, 119, 125, 158, 205, 234, 254, 271, 392, 424, 460, 464, 469, 492, 515, 528, 531, 532, 536, 740, 742, 807, 821, 861, 929, 985, 1001, 1080, 1178], "lpar": 36, "00028": 36, "parenthesi": 36, "lsqb": 36, "0005b": [36, 38], "lsquo": 36, "02018": [36, 38], "0003c": 36, "micro": [36, 231, 237, 247, 250], "000b5": 36, "middot": 36, "000b7": [36, 38], "middl": [36, 38, 39, 64, 172, 183, 238, 254, 306, 309, 339, 444, 464, 531, 560, 803, 922, 932, 938, 999, 1033], "nbsp": 36, "000a0": [36, 38], "NO": [36, 38, 142, 173, 214, 354, 663, 931, 996], "space": [36, 38, 64, 79, 100, 111, 112, 124, 158, 162, 163, 164, 169, 182, 185, 209, 223, 250, 268, 275, 277, 278, 296, 298, 299, 348, 359, 360, 368, 387, 406, 408, 427, 488, 493, 502, 506, 530, 531, 532, 533, 534, 535, 536, 537, 540, 582, 591, 600, 635, 755, 777, 778, 786, 823, 838, 852, 853, 854, 855, 859, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 899, 900, 901, 902, 903, 905, 921, 930, 933, 934, 935, 936, 937, 944, 948, 949, 950, 951, 952, 960, 962, 967, 975, 976, 978, 979, 982, 984, 992, 999, 1001, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1016, 1031, 1034, 1068], "000ac": 36, "NOT": [36, 38, 192, 386, 425, 470, 509, 510, 523, 524, 796, 913, 1142], "num": [36, 167, 181, 182, 195, 205, 221, 235, 237, 242, 244, 250, 254, 272, 275, 314, 318, 336, 340, 430, 615, 617, 699, 700, 701, 702, 711, 731, 762, 764, 766, 768, 913, 918, 1026, 1131], "00023": 36, "ohm": 36, "02126": 36, "ordf": 36, "000aa": 36, "feminin": 36, "ordin": [36, 250, 257, 260, 296, 302, 318, 324, 330, 1136], "indic": [36, 213, 231, 237, 242, 247, 250, 286, 638, 786], "ordm": 36, "000ba": 36, "masculin": 36, "para": 36, "000b6": 36, "pilcrow": 36, "percnt": 36, "00025": 36, "percent": [36, 254], "period": [36, 85, 133, 137, 179, 202, 458, 591, 757, 835, 922, 930, 949, 959, 981, 983, 996, 1151], "0002e": 36, "full": [36, 134, 142, 180, 225, 229, 275, 403, 418, 446, 451, 554, 565, 600, 704, 741, 754, 778, 864, 869, 930, 972, 978, 1023, 1042, 1075, 1131, 1139], "stop": [36, 156, 167, 223, 250, 287, 289, 291, 296, 314, 324, 342, 469, 509, 523, 819, 922, 997, 1022, 1145, 1163], "0002b": 36, "plusmn": 36, "000b1": [36, 38], "000a3": 36, "quest": 36, "0003f": 36, "quot": [36, 182, 230, 233, 237, 244, 250, 258, 399, 850, 913, 914, 932, 1067], "00022": 36, "raquo": 36, "000bb": 36, "rcub": 36, "0007d": [36, 38], "rdquo": 36, "0201d": [36, 38], "reg": 36, "000ae": [36, 38], "rpar": 36, "00029": 36, "rsqb": 36, "0005d": [36, 38], "rsquo": 36, "02019": [36, 38], "sect": 36, "000a7": 36, "section": [36, 38, 89, 162, 166, 167, 168, 177, 186, 199, 223, 281, 284, 287, 375, 568, 586, 668, 753, 815, 817, 885, 928, 929, 945, 999, 1000, 1001, 1003, 1009, 1015, 1016, 1017, 1156], "semi": [36, 282, 316, 496, 740, 967, 1018], "0003b": 36, "semicolon": [36, 469, 1131], "shy": 36, "000ad": 36, "soft": [36, 159, 364, 823], "sol": 36, "sung": 36, "0266a": 36, "sup1": 36, "000b9": 36, "superscript": 36, "sup2": 36, "000b2": 36, "sup3": 36, "000b3": 36, "000d7": 36, "trade": 36, "02122": 36, "02191": [36, 38], "verbar": 36, "0007c": [36, 38], "000a5": 36, "lorem": 37, "ipsum": 37, "h\u00f6dlmoser": 37, "anywai": [37, 43, 53, 62, 161, 163, 164, 173, 192, 194, 214, 223, 224, 250, 406, 454, 460, 464, 470, 586, 592, 601, 603, 604, 682, 690, 693, 697, 731, 732, 742, 817, 825, 864, 885, 975, 1031, 1142, 1156], "hmm": [37, 159, 168, 181, 192, 571, 704, 996], "annoi": [37, 43, 343, 466, 682, 1156], "thing": [37, 40, 42, 43, 49, 101, 137, 155, 161, 162, 164, 165, 166, 167, 168, 169, 173, 182, 186, 190, 193, 194, 198, 202, 214, 231, 237, 238, 240, 247, 250, 260, 313, 323, 346, 404, 420, 424, 448, 454, 457, 464, 488, 492, 560, 567, 568, 584, 586, 593, 598, 600, 622, 682, 704, 721, 745, 754, 776, 784, 789, 821, 825, 850, 864, 869, 918, 922, 923, 950, 955, 978, 983, 999, 1011, 1015, 1016, 1022, 1036, 1050, 1073, 1163, 1181], "thin": [37, 38], "border": 37, "anfrag": [37, 1172, 1173, 1174, 1175, 1180, 1182, 1183, 1187, 1188, 1189, 1190, 1192, 1193, 1194], "dauer": [37, 1172, 1173, 1174, 1175, 1180, 1182, 1183, 1187, 1188, 1189, 1190, 1192, 1193, 1194], "tage": [37, 187, 189, 197, 374, 1172, 1173, 1174, 1175, 1180, 1182, 1183, 1187, 1189, 1190, 1192, 1193, 1194], "sysprog": [37, 158, 159, 278, 376, 778, 832, 837, 921, 962, 963, 966, 1189, 1190, 1192, 1193], "catcher": 37, "somehow": [37, 42, 130, 137, 141, 146, 163, 316, 598, 833, 1151, 1152], "einf\u00fchrungskur": [37, 1172, 1189, 1190, 1192, 1193], "richtet": [37, 1174, 1189], "kennen": [37, 358, 1189], "lernen": [37, 1189], "zusammenh\u00e4ng": [37, 1189], "grundpfeil": [37, 1189], "erkl\u00e4rt": [37, 182, 185, 189, 1173, 1189, 1193, 1194], "bild": [37, 185, 1189], "orientieren": [37, 1189], "zurechtfinden": [37, 358, 1189], "somedai": 37, "better": [37, 57, 62, 66, 114, 115, 141, 156, 158, 159, 163, 167, 173, 174, 184, 194, 195, 197, 198, 200, 201, 202, 205, 206, 219, 223, 229, 231, 232, 234, 235, 240, 241, 242, 244, 245, 248, 251, 254, 259, 263, 271, 278, 291, 295, 301, 339, 383, 395, 403, 410, 419, 424, 425, 426, 432, 436, 439, 443, 444, 452, 454, 456, 461, 462, 465, 469, 474, 475, 480, 482, 560, 587, 595, 609, 622, 639, 662, 674, 677, 682, 684, 722, 734, 745, 775, 777, 778, 825, 904, 930, 931, 951, 967, 970, 996, 997, 1025, 1036, 1054, 1068, 1080, 1119, 1120, 1123, 1128, 1130, 1135, 1141, 1156, 1165], "yet": [37, 79, 152, 162, 169, 172, 182, 184, 251, 252, 262, 275, 313, 421, 454, 482, 491, 504, 506, 541, 542, 554, 560, 653, 756, 825, 842, 852, 853, 930, 938, 942, 996, 1023, 1053, 1080, 1147, 1156, 1165], "redefin": 37, "wrap": [37, 64, 221, 259, 313, 503, 742, 748, 825, 1148], "look": [37, 42, 43, 45, 59, 63, 66, 83, 90, 103, 124, 129, 137, 142, 155, 156, 161, 162, 163, 164, 165, 167, 169, 172, 177, 182, 190, 194, 198, 201, 213, 219, 223, 248, 278, 281, 284, 287, 288, 306, 309, 313, 327, 342, 375, 438, 446, 454, 460, 464, 466, 469, 470, 477, 525, 540, 541, 554, 571, 597, 609, 621, 673, 686, 710, 742, 748, 749, 779, 784, 794, 821, 825, 852, 853, 857, 861, 864, 875, 877, 882, 889, 897, 912, 923, 929, 930, 938, 955, 965, 992, 993, 1016, 1020, 1030, 1047, 1050, 1088, 1092, 1101, 1123, 1130, 1131, 1142, 1158, 1176, 1179], "mdbootstrap": 37, "jqueri": 37, "icon": 37, "longrightarrow": 38, "rightarrow": 38, "doubleleftrightarrow": 38, "02220": 38, "applyfunct": 38, "02061": 38, "applic": [38, 64, 79, 95, 137, 147, 162, 167, 179, 192, 214, 309, 313, 316, 354, 375, 450, 453, 460, 541, 618, 621, 689, 730, 863, 923, 930, 942, 967, 1130], "approx": [38, 1111, 1156], "approxeq": 38, "assign": [38, 98, 182, 183, 184, 189, 195, 205, 212, 220, 231, 234, 237, 240, 242, 246, 247, 252, 254, 258, 282, 286, 287, 289, 314, 319, 330, 337, 341, 357, 363, 364, 386, 403, 409, 410, 419, 426, 432, 433, 436, 439, 443, 448, 450, 452, 456, 461, 462, 496, 503, 509, 510, 518, 523, 524, 586, 587, 590, 597, 653, 662, 669, 679, 683, 684, 686, 690, 697, 720, 722, 727, 736, 742, 774, 775, 777, 778, 929, 931, 970, 981, 984, 986, 1063, 1074, 1145, 1147], "backcong": 38, "backepsilon": 38, "backprim": 38, "02035": 38, "backsim": 38, "backsimeq": 38, "backslash": [38, 399, 909, 1067], "02216": 38, "barwedg": 38, "02305": 38, "02235": 38, "bernoulli": 38, "0212c": 38, "bigcap": 38, "022c2": 38, "bigcirc": 38, "025ef": 38, "bigcup": 38, "022c3": 38, "union": [38, 218, 226, 242, 314, 442, 759, 763, 766, 767, 768, 769, 777, 778, 1072, 1177], "bigodot": 38, "02a00": 38, "bigoplu": 38, "02a01": 38, "bigotim": 38, "02a02": 38, "bigsqcup": 38, "02a06": 38, "bigstar": 38, "02605": 38, "bigtriangledown": 38, "025bd": 38, "white": [38, 286, 388], "bigtriangleup": 38, "025b3": 38, "biguplu": 38, "02a04": 38, "bigve": 38, "022c1": 38, "logic": [38, 125, 164, 346, 394, 410, 419, 424, 426, 432, 436, 439, 443, 448, 452, 456, 461, 462, 489, 506, 684, 722, 775, 777, 778, 1142], "bigwedg": 38, "022c0": 38, "bkarow": 38, "blacklozeng": 38, "029eb": 38, "lozeng": 38, "blacksquar": 38, "025aa": 38, "blacktriangl": 38, "025b4": 38, "blacktriangledown": 38, "025be": 38, "blacktriangleleft": 38, "025c2": 38, "blacktriangleright": 38, "025b8": 38, "bot": [38, 1156], "022a5": 38, "boxminu": 38, "0229f": 38, "boxplu": 38, "0229e": 38, "boxtim": 38, "022a0": 38, "breve": 38, "002d8": 38, "bullet": [38, 164, 1130], "02022": 38, "bumpeq": 38, "capitaldifferentiald": 38, "02145": 38, "struck": 38, "ital": 38, "d": [38, 86, 98, 108, 121, 124, 162, 163, 164, 165, 181, 184, 192, 195, 200, 205, 210, 212, 218, 221, 224, 227, 228, 232, 234, 235, 237, 242, 244, 247, 250, 254, 257, 260, 272, 275, 278, 282, 291, 292, 295, 296, 302, 310, 314, 318, 324, 330, 336, 340, 349, 351, 352, 357, 380, 387, 388, 390, 394, 421, 425, 454, 464, 466, 480, 487, 492, 586, 592, 599, 653, 654, 659, 660, 662, 666, 692, 729, 741, 742, 754, 756, 798, 819, 833, 849, 852, 853, 862, 864, 868, 869, 882, 885, 886, 907, 911, 913, 918, 924, 929, 930, 931, 943, 948, 996, 999, 1021, 1023, 1049, 1055, 1060, 1062, 1063, 1067, 1068, 1071, 1091], "caylei": 38, "0212d": 38, "letter": [38, 66, 397, 1053], "cedilla": 38, "000b8": 38, "centerdot": 38, "checkmark": 38, "02713": 38, "circeq": 38, "circlearrowleft": 38, "circlearrowright": 38, "circledast": 38, "0229b": 38, "circledcirc": 38, "0229a": 38, "circleddash": 38, "0229d": 38, "circledot": 38, "02299": 38, "circledr": 38, "024c8": 38, "latin": [38, 241, 302, 318], "circleminu": 38, "02296": 38, "circleplu": 38, "02295": 38, "circletim": 38, "02297": 38, "clockwisecontourintegr": 38, "02232": 38, "contour": 38, "closecurlydoublequot": 38, "closecurlyquot": 38, "clubsuit": 38, "02663": 38, "suit": [38, 44, 98, 129, 158, 198, 267, 271, 365, 442, 451, 482, 483, 484, 486, 487, 489, 491, 504, 506, 507, 525, 538, 539, 540, 541, 542, 601, 602, 603, 604, 693, 694, 731, 740, 741, 772, 773, 774, 776, 1157, 1164, 1179, 1194], "coloneq": 38, "complement": [38, 107, 403], "02201": 38, "complex": [38, 70, 162, 173, 177, 194, 200, 220, 237, 242, 244, 250, 254, 258, 260, 275, 282, 296, 324, 357, 378, 421, 433, 448, 757, 929, 930, 954, 970, 993, 1054, 1063, 1169, 1179], "02102": 38, "02261": 38, "ident": [38, 246, 296, 308, 577, 1042, 1044, 1063], "contourintegr": 38, "0222e": 38, "counterclockwisecontourintegr": 38, "02233": 38, "cupcap": 38, "0224d": 38, "curlyeqprec": 38, "curlyeqsucc": 38, "curlyve": 38, "022ce": 38, "curlywedg": 38, "022cf": 38, "curvearrowleft": 38, "curvearrowright": 38, "dbkarow": 38, "ddagger": 38, "02021": 38, "ddotseq": 38, "02207": 38, "nabla": 38, "diacriticalacut": 38, "000b4": 38, "acut": 38, "accent": 38, "diacriticaldot": 38, "002d9": 38, "diacriticaldoubleacut": 38, "002dd": 38, "diacriticalgrav": 38, "00060": 38, "grave": 38, "diacriticaltild": 38, "002dc": 38, "022c4": 38, "diamondsuit": 38, "02666": 38, "differentiald": 38, "02146": 38, "digamma": 38, "003dd": 38, "div": [38, 454, 504], "divideontim": 38, "022c7": 38, "doteq": 38, "doteqdot": 38, "dotequ": 38, "dotminu": 38, "02238": 38, "dotplu": 38, "02214": 38, "dotsquar": 38, "022a1": 38, "doublebarwedg": 38, "02306": 38, "doublecontourintegr": 38, "0222f": 38, "surfac": [38, 194, 861, 929, 930, 1128, 1130], "doubledot": 38, "000a8": 38, "diaeresi": 38, "doubledownarrow": 38, "doubleleftarrow": 38, "021d0": 38, "doubleleftte": 38, "doublelongleftarrow": 38, "doublelongleftrightarrow": 38, "doublelongrightarrow": 38, "doublerightarrow": 38, "021d2": 38, "doublerightte": 38, "doubleuparrow": 38, "doubleupdownarrow": 38, "doubleverticalbar": 38, "downarrow": 38, "downarrowuparrow": 38, "downdownarrow": 38, "downharpoonleft": 38, "downharpoonright": 38, "downleftvector": 38, "downrightvector": 38, "downte": 38, "022a4": 38, "downteearrow": 38, "021a7": 38, "drbkarow": 38, "02208": 38, "emptyset": 38, "02205": 38, "eqcirc": 38, "eqcolon": 38, "eqsim": 38, "eqslantgtr": 38, "eqslantless": 38, "equaltild": 38, "equilibrium": 38, "02203": 38, "THERE": [38, 588], "02130": 38, "exponential": 38, "02147": 38, "fallingdotseq": 38, "foral": [38, 1074], "02200": 38, "FOR": [38, 173, 195, 202], "fouriertrf": 38, "02131": 38, "geq": 38, "02265": 38, "geqq": 38, "geqslant": 38, "ggg": 38, "gnapprox": 38, "02a8a": 38, "gneq": 38, "02a88": 38, "gneqq": 38, "02269": 38, "BUT": 38, "greaterequ": 38, "greaterequalless": 38, "greaterfullequ": 38, "greaterless": 38, "greaterslantequ": 38, "greatertild": 38, "gtrapprox": 38, "gtrdot": 38, "gtreqless": 38, "gtreqqless": 38, "gtrless": 38, "gtrsim": 38, "gvertneqq": 38, "hacek": 38, "002c7": 38, "caron": 38, "hbar": 38, "0210f": 38, "planck": 38, "constant": [38, 223, 231, 237, 240, 241, 242, 247, 250, 254, 292, 313, 386, 394, 395, 400, 410, 414, 419, 426, 432, 436, 439, 443, 452, 456, 461, 462, 527, 634, 684, 695, 722, 732, 734, 775, 777, 778], "heartsuit": 38, "02665": 38, "hilbertspac": 38, "0210b": 38, "h": [38, 42, 44, 98, 114, 120, 124, 133, 137, 138, 139, 140, 142, 164, 169, 185, 188, 190, 195, 201, 205, 210, 223, 224, 231, 234, 235, 242, 244, 254, 267, 278, 289, 324, 327, 336, 340, 379, 380, 382, 386, 388, 390, 398, 421, 422, 424, 430, 437, 445, 447, 451, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 482, 483, 484, 485, 486, 487, 489, 491, 494, 503, 504, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 525, 527, 528, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 548, 550, 551, 552, 553, 555, 556, 557, 558, 559, 561, 567, 568, 570, 571, 574, 577, 579, 584, 585, 586, 587, 592, 593, 594, 595, 597, 598, 599, 600, 601, 602, 603, 604, 662, 671, 672, 673, 674, 675, 676, 677, 678, 687, 689, 692, 693, 694, 710, 711, 714, 725, 728, 731, 732, 736, 740, 741, 742, 743, 745, 754, 756, 758, 762, 764, 766, 767, 768, 769, 772, 773, 774, 776, 784, 789, 793, 794, 796, 803, 805, 807, 809, 811, 813, 817, 819, 821, 830, 835, 838, 839, 842, 844, 845, 851, 862, 869, 882, 885, 907, 913, 923, 925, 929, 945, 947, 948, 949, 951, 952, 954, 955, 956, 957, 958, 961, 963, 966, 980, 983, 987, 989, 991, 992, 996, 997, 999, 1000, 1001, 1002, 1007, 1011, 1014, 1015, 1017, 1060, 1075, 1151, 1158, 1163, 1165, 1168], "hksearow": 38, "hkswarow": 38, "hookleftarrow": 38, "hookrightarrow": 38, "hslash": 38, "humpdownhump": 38, "humpequ": 38, "iiiint": 38, "02a0c": 38, "quadrupl": 38, "iiint": 38, "0222d": 38, "02111": 38, "imaginaryi": 38, "02148": 38, "imaglin": 38, "02110": 38, "imagpart": 38, "impli": [38, 746, 1151], "02124": 38, "0222b": 38, "interc": 38, "022ba": 38, "intercal": 38, "intprod": 38, "02a3c": 38, "interior": 38, "invisiblecomma": 38, "02063": 38, "invis": [38, 510], "invisibletim": 38, "02062": 38, "langl": 38, "02329": 38, "laplacetrf": 38, "02112": 38, "lbrace": 38, "lbrack": 38, "leftanglebracket": 38, "leftarrow": 38, "leftarrowbar": 38, "021e4": 38, "leftarrowrightarrow": 38, "leftarrowtail": 38, "leftceil": 38, "02308": 38, "ceil": [38, 222, 235, 254, 324], "leftdoublebracket": 38, "0301a": 38, "leftdownvector": 38, "leftfloor": 38, "0230a": 38, "leftharpoondown": 38, "leftharpoonup": 38, "leftleftarrow": 38, "leftrightarrow": 38, "leftrightharpoon": 38, "leftrightsquigarrow": 38, "leftte": 38, "leftteearrow": 38, "021a4": 38, "leftthreetim": 38, "022cb": 38, "semidirect": 38, "lefttriangl": 38, "lefttriangleequ": 38, "leftupvector": 38, "leftvector": 38, "leq": 38, "02264": 38, "leqq": 38, "leqslant": 38, "lessapprox": 38, "lessdot": 38, "lesseqgtr": 38, "lesseqqgtr": 38, "lessequalgreat": 38, "lessfullequ": 38, "lessgreat": 38, "lessgtr": 38, "lesssim": 38, "lessslantequ": 38, "lesstild": 38, "llcorner": 38, "0231e": 38, "bottom": [38, 209, 313, 525, 538, 823, 885, 904, 922, 1022], "corner": [38, 223, 286, 375, 387, 467, 479, 538, 754], "lleftarrow": 38, "lmoustach": 38, "023b0": 38, "upper": [38, 195, 218, 242, 244, 250, 260, 275, 282, 296, 318, 330, 342, 351, 380, 384, 400, 424, 984, 1084], "lower": [38, 164, 218, 231, 237, 242, 247, 250, 254, 260, 275, 296, 342, 351, 380, 384, 400, 424, 484, 628, 985, 993, 1042, 1147], "lnapprox": 38, "02a89": 38, "lneq": 38, "02a87": 38, "lneqq": 38, "02268": 38, "longleftarrow": 38, "longleftrightarrow": 38, "longmapsto": 38, "looparrowleft": 38, "looparrowright": 38, "lowerleftarrow": 38, "lowerrightarrow": 38, "025ca": 38, "lrcorner": 38, "0231f": 38, "lvertneqq": 38, "maltes": 38, "02720": 38, "mapsto": 38, "measuredangl": 38, "02221": 38, "measur": [38, 98, 129, 132, 142, 164, 254, 287, 291, 313, 323, 450, 457, 503, 507, 529, 530, 531, 532, 533, 534, 535, 536, 540, 541, 582, 660, 762, 778, 784, 851, 860, 951, 992, 1016, 1128, 1130], "mellintrf": 38, "02133": 38, "minusplu": 38, "02213": 38, "napprox": 38, "02249": 38, "0266e": 38, "music": [38, 164, 292], "02115": 38, "nearrow": 38, "negativemediumspac": 38, "0200b": 38, "width": [38, 231, 237, 240, 241, 247, 250, 272, 280, 296, 380, 403, 492, 577, 601, 922, 993, 1068, 1131, 1180, 1187], "negativethickspac": 38, "negativethinspac": 38, "negativeverythinspac": 38, "nestedgreatergreat": 38, "nestedlessless": 38, "nexist": 38, "02204": 38, "ngeq": 38, "02271": 38, "neither": [38, 182, 482, 509, 523, 693, 870, 872, 873, 955, 1064], "nor": [38, 182, 238, 509, 523, 593, 693, 870, 872, 873, 922, 942, 955, 1064], "ngeqq": 38, "ngeqslant": 38, "ngtr": 38, "0226f": 38, "nleftarrow": 38, "nleftrightarrow": 38, "nleq": 38, "02270": 38, "nleqq": 38, "nleqslant": 38, "nless": 38, "0226e": 38, "nonbreakingspac": 38, "notcongru": 38, "02262": 38, "notdoubleverticalbar": 38, "02226": 38, "notel": 38, "02209": 38, "notequ": 38, "02260": 38, "notequaltild": 38, "notexist": 38, "notgreat": 38, "notgreaterequ": 38, "notgreaterfullequ": 38, "notgreatergreat": 38, "notgreaterless": 38, "02279": 38, "notgreaterslantequ": 38, "notgreatertild": 38, "02275": 38, "nothumpdownhump": 38, "notlefttriangl": 38, "022ea": 38, "notlefttriangleequ": 38, "022ec": 38, "notless": 38, "notlessequ": 38, "notlessgreat": 38, "02278": 38, "notlessless": 38, "notlessslantequ": 38, "notlesstild": 38, "02274": 38, "notpreced": 38, "02280": 38, "notprecedesequ": 38, "notprecedesslantequ": 38, "022e0": 38, "notreverseel": 38, "0220c": 38, "notrighttriangl": 38, "022eb": 38, "notrighttriangleequ": 38, "022ed": 38, "notsquaresubsetequ": 38, "022e2": 38, "notsquaresupersetequ": 38, "022e3": 38, "notsubset": 38, "020d2": 38, "notsubsetequ": 38, "02288": 38, "notsucce": 38, "02281": 38, "notsucceedsequ": 38, "notsucceedsslantequ": 38, "022e1": 38, "notsuperset": 38, "notsupersetequ": 38, "02289": 38, "nottild": 38, "02241": 38, "nottildeequ": 38, "02244": 38, "asymptot": 38, "nottildefullequ": 38, "02247": 38, "actual": [38, 42, 43, 48, 60, 62, 164, 167, 172, 177, 194, 221, 231, 237, 240, 247, 250, 254, 281, 284, 286, 316, 360, 484, 494, 653, 660, 682, 740, 784, 922, 930, 954, 997, 1020, 1036, 1045, 1078, 1126, 1128, 1130, 1149, 1163], "nottildetild": 38, "notverticalbar": 38, "02224": 38, "nparallel": 38, "nprec": 38, "npreceq": 38, "nrightarrow": 38, "nshortmid": 38, "nshortparallel": 38, "nsimeq": 38, "nsubset": 38, "nsubseteq": 38, "nsubseteqq": 38, "nsucc": 38, "nsucceq": 38, "nsupset": 38, "nsupseteq": 38, "nsupseteqq": 38, "ntriangleleft": 38, "ntrianglelefteq": 38, "ntriangleright": 38, "ntrianglerighteq": 38, "nwarrow": 38, "oint": 38, "opencurlydoublequot": 38, "opencurlyquot": 38, "orderof": 38, "02134": 38, "partiald": 38, "02202": 38, "partial": [38, 114, 118, 288, 317, 803, 1127], "differenti": [38, 70, 676, 744, 825, 870, 929, 1054, 1122, 1136], "plusminu": 38, "poincareplan": 38, "0210c": 38, "prec": 38, "precapprox": 38, "preccurlyeq": 38, "precedesequ": 38, "precedesslantequ": 38, "precedestild": 38, "preceq": 38, "precnapprox": 38, "02ab9": 38, "precneqq": 38, "02ab5": 38, "precnsim": 38, "022e8": 38, "precsim": 38, "02119": 38, "propto": 38, "quaternion": 38, "0210d": 38, "questeq": 38, "rangl": 38, "0232a": 38, "0211a": 38, "q": [38, 124, 202, 254, 424, 430, 584, 602, 603, 617, 745, 862, 885, 917, 992, 1151], "rbrace": 38, "rbrack": 38, "0211c": 38, "realin": 38, "0211b": 38, "realpart": 38, "real": [38, 74, 125, 131, 135, 137, 140, 141, 142, 153, 169, 172, 177, 180, 182, 198, 219, 232, 237, 238, 245, 247, 250, 254, 259, 262, 272, 280, 286, 295, 301, 313, 336, 343, 404, 453, 460, 474, 480, 486, 503, 525, 533, 534, 535, 536, 537, 541, 583, 584, 589, 704, 719, 737, 740, 786, 825, 862, 863, 885, 922, 930, 942, 983, 1069, 1123, 1126, 1128, 1157, 1176, 1179], "0211d": 38, "reverseel": 38, "0220b": 38, "reverseequilibrium": 38, "reverseupequilibrium": 38, "rightanglebracket": 38, "rightarrowbar": 38, "021e5": 38, "rightarrowleftarrow": 38, "rightarrowtail": 38, "rightceil": 38, "02309": 38, "rightdoublebracket": 38, "0301b": 38, "rightdownvector": 38, "rightfloor": 38, "0230b": 38, "rightharpoondown": 38, "rightharpoonup": 38, "rightleftarrow": 38, "rightleftharpoon": 38, "rightrightarrow": 38, "rightsquigarrow": 38, "rightte": 38, "rightteearrow": 38, "rightthreetim": 38, "022cc": 38, "righttriangl": 38, "righttriangleequ": 38, "rightupvector": 38, "rightvector": 38, "risingdotseq": 38, "rmoustach": 38, "023b1": 38, "rrightarrow": 38, "searrow": 38, "setminu": 38, "shortdownarrow": 38, "shortleftarrow": 38, "shortmid": 38, "shortparallel": 38, "shortrightarrow": 38, "shortuparrow": 38, "simeq": 38, "02243": 38, "smallcircl": 38, "02218": 38, "smallsetminu": 38, "spadesuit": 38, "02660": 38, "sqrt": [38, 222, 235, 324, 584, 586, 594, 595, 603, 689, 704, 705, 706, 707, 708, 745], "0221a": 38, "sqsubset": 38, "sqsubseteq": 38, "sqsupset": 38, "sqsupseteq": 38, "025a1": 38, "squareintersect": 38, "02293": 38, "cap": [38, 234, 1080], "squaresubset": 38, "squaresubsetequ": 38, "squaresuperset": 38, "squaresupersetequ": 38, "squareunion": 38, "02294": 38, "cup": [38, 292, 330], "022c6": 38, "straightepsilon": 38, "003f5": 38, "straightphi": 38, "003d5": 38, "phi": 38, "subseteq": 38, "02286": 38, "subseteqq": 38, "subsetequ": 38, "subsetneq": 38, "0228a": 38, "subsetneqq": 38, "02acb": 38, "succ": 38, "succapprox": 38, "succcurlyeq": 38, "succeedsequ": 38, "succeedsslantequ": 38, "succeedstild": 38, "succeq": 38, "succnapprox": 38, "02aba": 38, "succneqq": 38, "02ab6": 38, "succnsim": 38, "022e9": 38, "succsim": 38, "suchthat": 38, "02211": 38, "summat": 38, "supersetequ": 38, "02287": 38, "supset": 38, "supseteq": 38, "supseteqq": 38, "supsetneq": 38, "0228b": 38, "supsetneqq": 38, "02acc": 38, "swarrow": 38, "therefor": [38, 152, 162], "02234": 38, "thickapprox": 38, "thicksim": 38, "thinspac": 38, "02009": 38, "tildeequ": 38, "tildefullequ": 38, "02245": 38, "tildetild": 38, "toea": 38, "tosa": 38, "025b5": 38, "triangledown": 38, "025bf": 38, "triangleleft": 38, "025c3": 38, "trianglelefteq": 38, "triangleq": 38, "triangleright": 38, "025b9": 38, "trianglerighteq": 38, "tripledot": 38, "020db": 38, "combin": [38, 86, 109, 111, 112, 165, 183, 214, 270, 409, 420, 425, 442, 450, 481, 490, 502, 516, 530, 582, 617, 656, 734, 778, 807, 865, 867, 869, 885, 907, 918, 955, 956, 958, 1005, 1058, 1073, 1089, 1142, 1176], "twoheadleftarrow": 38, "twoheadrightarrow": 38, "ulcorn": 38, "0231c": 38, "unionplu": 38, "0228e": 38, "multiset": 38, "uparrow": 38, "uparrowdownarrow": 38, "updownarrow": 38, "upequilibrium": 38, "upharpoonleft": 38, "upharpoonright": 38, "upperleftarrow": 38, "upperrightarrow": 38, "upsilon": 38, "003c5": 38, "upte": 38, "upteearrow": 38, "021a5": 38, "upuparrow": 38, "urcorn": 38, "0231d": 38, "varepsilon": 38, "003b5": 38, "varkappa": 38, "003f0": 38, "kappa": 38, "varnoth": 38, "varphi": 38, "003c6": 38, "varpi": 38, "003d6": 38, "varpropto": 38, "varrho": 38, "003f1": 38, "rho": 38, "varsigma": 38, "003c2": 38, "sigma": [38, 254], "varsubsetneq": 38, "variant": [38, 114, 118, 206, 222, 235, 265, 266, 267, 326, 380, 396, 513, 577, 730, 734, 736, 759, 763, 766, 777, 778, 803, 1183, 1186], "varsubsetneqq": 38, "varsupsetneq": 38, "varsupsetneqq": 38, "vartheta": 38, "003d1": 38, "theta": 38, "vartriangleleft": 38, "vartriangleright": 38, "vee": 38, "02228": 38, "vert": 38, "02016": 38, "verticalbar": 38, "verticaltild": 38, "02240": 38, "wreath": 38, "verythinspac": 38, "0200a": 38, "hair": 38, "wedg": 38, "02227": 38, "wp": 38, "02118": 38, "wr": 38, "zeetrf": 38, "02128": 38, "restructured text": 39, "cheat sheet": 39, "restructur": 39, "guid": [39, 146, 167, 177, 198, 223, 377, 457, 535, 687, 796, 811, 864], "author": [39, 165, 172, 250, 600, 798, 929, 1078, 1132], "overridden": [39, 403, 654, 721, 1156], "titl": [39, 40, 158, 168, 232, 245, 250, 259, 262, 295, 296, 301, 1039, 1123, 1128], "favorit": [39, 194, 198, 201, 219, 223, 245, 248, 343, 825, 931, 983, 1047, 1123], "__": [39, 179, 181, 189, 296, 735, 739, 1043], "ref": [39, 124, 177, 266, 267, 682, 697, 741, 773], "uniqu": [39, 177, 224, 266, 267, 269, 541, 560, 742, 754, 773, 775, 777, 778, 931, 945, 959, 1018, 1071, 1075, 1145], "across": [39, 43, 162, 169, 179, 231, 237, 247, 250, 280, 289, 313, 375, 403, 423, 447, 482, 487, 506, 569, 745, 756, 776, 852, 853, 864, 882, 929, 931, 951, 959, 993, 1054, 1065, 1132], "tree": [39, 42, 101, 103, 124, 152, 154, 163, 165, 168, 173, 177, 190, 191, 198, 222, 235, 238, 241, 245, 278, 306, 309, 433, 455, 460, 472, 504, 539, 541, 638, 641, 778, 800, 803, 817, 827, 850, 852, 853, 855, 869, 885, 886, 893, 897, 899, 905, 914, 921, 930, 935, 937, 942, 962, 970, 979, 1002, 1007, 1027, 1039, 1130, 1148, 1156, 1158], "_dummi": 39, "dummi": [39, 168, 363, 364, 805, 844, 1163], "One": [39, 43, 59, 63, 64, 77, 81, 83, 98, 107, 115, 162, 164, 173, 190, 201, 222, 240, 261, 262, 287, 343, 357, 368, 384, 424, 437, 446, 449, 458, 460, 465, 471, 476, 482, 541, 560, 568, 583, 602, 607, 617, 622, 687, 721, 746, 756, 825, 830, 856, 858, 861, 869, 885, 929, 930, 931, 955, 967, 972, 983, 984, 992, 997, 1002, 1034, 1058, 1131, 1132, 1136, 1141, 1178, 1192], "a_footnot": 39, "footer": 39, "block": [39, 99, 111, 112, 161, 162, 163, 164, 202, 204, 222, 229, 231, 235, 237, 247, 250, 259, 262, 271, 292, 295, 313, 342, 357, 362, 366, 380, 382, 400, 419, 425, 426, 432, 436, 439, 443, 451, 452, 454, 456, 461, 462, 489, 589, 592, 684, 710, 722, 741, 752, 753, 754, 755, 756, 775, 776, 777, 778, 811, 827, 837, 841, 855, 856, 858, 859, 861, 862, 907, 921, 930, 954, 961, 962, 967, 972, 976, 977, 982, 984, 992, 993, 996, 998, 1020, 1022, 1048, 1051, 1058, 1061, 1123], "rubric": 39, "nbsphinx": 40, "capabl": [40, 79, 162, 163, 169, 751, 825, 851, 914, 922, 930, 983, 1149, 1179], "nice": [40, 159, 162, 179, 202, 224, 289, 459, 460, 480, 528, 595, 682, 844, 851, 924, 930, 981, 1044, 1080, 1128, 1130, 1139, 1145, 1159], "few": [40, 125, 162, 163, 164, 165, 168, 169, 194, 198, 231, 378, 448, 699, 825, 863, 1022, 1026, 1157, 1181], "keep": [40, 43, 111, 112, 163, 164, 177, 186, 198, 201, 205, 221, 254, 327, 343, 368, 392, 448, 454, 455, 664, 704, 817, 825, 830, 849, 864, 867, 923, 975, 1011, 1014, 1034, 1051, 1128, 1129, 1176], "mind": [40, 130, 162, 163, 381, 748, 1051], "though": [40, 43, 45, 53, 69, 119, 120, 161, 162, 167, 169, 172, 173, 177, 178, 183, 190, 194, 198, 200, 201, 219, 222, 224, 235, 237, 238, 240, 245, 248, 262, 271, 280, 281, 284, 295, 316, 317, 343, 384, 394, 403, 415, 420, 482, 483, 484, 487, 496, 504, 506, 539, 540, 541, 560, 584, 586, 587, 591, 594, 597, 600, 601, 603, 604, 617, 618, 653, 660, 682, 690, 692, 699, 704, 710, 727, 731, 736, 741, 742, 745, 752, 764, 766, 779, 780, 784, 803, 817, 856, 863, 864, 867, 870, 904, 918, 922, 929, 930, 931, 941, 949, 951, 978, 983, 985, 987, 993, 1002, 1020, 1022, 1023, 1026, 1031, 1033, 1040, 1042, 1050, 1054, 1067, 1092, 1123, 1130, 1131, 1144, 1151, 1152, 1156, 1158, 1176, 1179], "toplevel": [40, 44, 110, 124, 142, 190, 223, 272, 468, 470, 474, 475, 476, 478, 525, 798, 826, 851, 1020, 1165], "begin": [40, 42, 43, 122, 126, 127, 128, 132, 134, 135, 141, 142, 144, 161, 162, 172, 200, 221, 222, 234, 237, 250, 254, 266, 267, 271, 288, 296, 317, 374, 380, 388, 400, 403, 424, 430, 447, 448, 450, 480, 487, 577, 587, 600, 613, 615, 617, 618, 619, 621, 622, 624, 625, 626, 628, 629, 630, 631, 635, 638, 649, 682, 697, 710, 713, 717, 724, 730, 731, 734, 748, 778, 851, 885, 909, 917, 943, 951, 1027, 1051, 1073, 1123, 1157], "deeper": [40, 163, 194, 281, 284, 469, 978], "trail": [40, 166, 250, 292, 296, 314, 348, 349], "underscor": [40, 397, 1023, 1030, 1043, 1053], "ipynb": [40, 181, 201, 211, 213, 250, 260, 281, 285, 291, 295, 301, 306, 309, 313, 317, 323, 324, 329, 335, 339, 1125, 1129], "labels_": [40, 183, 185], "result": [40, 79, 125, 130, 141, 155, 164, 173, 179, 181, 201, 205, 221, 231, 237, 240, 247, 250, 254, 263, 272, 292, 296, 387, 403, 438, 445, 447, 448, 454, 484, 509, 513, 600, 628, 689, 695, 704, 732, 796, 941, 987, 1015, 1027, 1042, 1056, 1062, 1074, 1131], "cluster": [40, 185, 1125, 1130], "membership": [40, 183, 200, 201, 243, 496, 1055, 1072], "sequenc": [40, 107, 110, 114, 118, 155, 182, 183, 185, 195, 201, 222, 224, 233, 235, 236, 237, 240, 243, 247, 250, 254, 272, 287, 289, 296, 302, 341, 379, 433, 484, 530, 545, 546, 547, 582, 627, 646, 650, 666, 679, 687, 734, 778, 984, 1027, 1028, 1029, 1045, 1054, 1055, 1060, 1062, 1065, 1069, 1070, 1093, 1105, 1136, 1179], "bring": [40, 45, 122, 130, 142, 155, 162, 164, 172, 173, 194, 198, 201, 204, 240, 278, 281, 284, 287, 289, 313, 316, 365, 370, 371, 375, 560, 599, 638, 662, 673, 681, 821, 825, 837, 929, 930, 931, 1000, 1047, 1095, 1118, 1136, 1176, 1179], "bigplan": [40, 185, 1125], "686": [40, 183, 237, 1013], "unknown": [40, 280, 466, 763, 781, 930, 1036], "cmd": [40, 168, 819, 844, 1158], "color": [40, 167, 185, 907, 1125, 1151], "tmp": [40, 144, 158, 163, 165, 168, 205, 218, 221, 237, 242, 250, 254, 257, 260, 262, 267, 269, 272, 275, 282, 292, 296, 302, 318, 324, 330, 336, 340, 389, 431, 454, 467, 472, 473, 480, 541, 542, 662, 739, 758, 803, 825, 847, 851, 856, 865, 869, 870, 883, 884, 885, 887, 889, 890, 892, 894, 897, 904, 907, 908, 913, 934, 941, 952, 953, 955, 956, 958, 983, 989, 1022, 1073, 1079, 1135, 1157, 1158], "craft": [41, 53, 248, 290, 291, 464, 509, 746, 779], "tar": [42, 62, 110, 124, 149, 158, 173, 202, 204, 268, 277, 278, 298, 299, 460, 778, 825, 847, 848, 850, 855, 921, 1007, 1009, 1010, 1011, 1013, 1014, 1020, 1078, 1158, 1182], "xz": [42, 62, 165, 173, 278, 453, 1007, 1011, 1013, 1014], "push": [42, 78, 144, 166, 168, 177, 180, 223, 238, 248, 305, 321, 363, 425, 470, 471, 482, 506, 616, 619, 754, 778, 825, 967, 985, 1098, 1102, 1156], "cmakelist": [42, 44, 122, 124, 129, 142, 188, 189, 190, 191, 192, 223, 240, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 480, 525, 538, 539, 540, 541, 542, 561, 564, 567, 568, 570, 573, 576, 579, 673, 988, 991, 995, 1000, 1001, 1162, 1165, 1167], "src": [42, 162, 163, 165, 223, 237, 267, 269, 275, 363, 392, 404, 454, 478, 479, 489, 525, 528, 538, 539, 540, 541, 543, 602, 619, 740, 741, 851, 869, 913, 1073, 1078, 1156], "load": [42, 43, 53, 56, 64, 76, 89, 161, 172, 173, 180, 181, 185, 201, 209, 210, 226, 227, 231, 237, 247, 250, 254, 257, 263, 272, 289, 290, 291, 307, 310, 312, 313, 330, 440, 460, 472, 755, 777, 778, 781, 782, 784, 785, 787, 790, 792, 793, 795, 800, 802, 805, 806, 810, 816, 819, 821, 822, 825, 827, 829, 834, 837, 840, 843, 846, 861, 921, 930, 931, 962, 970, 976, 999, 1016, 1123, 1141, 1181, 1190, 1192], "store": [42, 57, 64, 76, 89, 107, 129, 133, 161, 163, 180, 182, 190, 191, 221, 224, 231, 289, 290, 291, 312, 313, 388, 440, 484, 666, 710, 724, 727, 734, 755, 762, 764, 768, 777, 778, 791, 825, 864, 877, 921, 938, 962, 970, 976, 1000, 1018, 1022, 1023, 1027, 1071, 1101, 1135, 1151, 1192], "search": [42, 51, 53, 107, 155, 157, 158, 162, 183, 186, 192, 194, 200, 201, 210, 221, 222, 224, 227, 231, 234, 235, 237, 240, 241, 242, 245, 247, 250, 263, 272, 275, 279, 282, 287, 292, 296, 302, 304, 320, 324, 330, 336, 424, 451, 454, 466, 530, 541, 543, 547, 582, 627, 632, 646, 650, 667, 679, 778, 803, 867, 885, 917, 978, 1000, 1013, 1030, 1059, 1129, 1156, 1178], "payload": [42, 786, 813, 923, 925], "primari": [42, 162, 173, 194, 280, 281, 284, 458, 823, 852, 853, 860, 862, 1101], "insert": [42, 64, 110, 122, 156, 161, 177, 181, 198, 200, 205, 235, 237, 240, 242, 244, 250, 254, 257, 275, 296, 302, 314, 330, 340, 357, 421, 438, 442, 458, 485, 491, 513, 519, 530, 547, 548, 549, 560, 577, 582, 618, 619, 632, 642, 643, 667, 675, 676, 677, 679, 686, 693, 695, 710, 731, 774, 776, 778, 803, 809, 819, 821, 825, 885, 929, 942, 973, 983, 1055, 1070, 1071, 1079, 1135, 1156], "const": [42, 58, 71, 98, 108, 110, 111, 112, 113, 114, 115, 116, 118, 120, 121, 124, 129, 142, 189, 224, 240, 287, 289, 326, 392, 400, 404, 422, 424, 430, 438, 450, 452, 454, 456, 461, 462, 467, 483, 484, 485, 486, 487, 489, 491, 506, 507, 513, 514, 515, 518, 519, 520, 522, 523, 524, 530, 534, 538, 540, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 558, 559, 560, 568, 573, 575, 577, 582, 584, 585, 586, 587, 589, 591, 592, 598, 599, 600, 601, 602, 603, 604, 605, 607, 608, 610, 611, 617, 621, 623, 624, 625, 626, 627, 633, 637, 639, 642, 643, 646, 649, 650, 653, 656, 657, 660, 662, 663, 664, 667, 668, 671, 672, 674, 675, 676, 677, 678, 679, 686, 688, 689, 690, 691, 692, 693, 694, 695, 704, 705, 706, 707, 708, 710, 712, 713, 716, 717, 718, 719, 720, 722, 724, 725, 726, 727, 729, 730, 732, 734, 738, 740, 741, 742, 743, 744, 747, 755, 756, 758, 764, 768, 772, 773, 774, 775, 776, 777, 778, 781, 784, 789, 805, 807, 811, 819, 821, 835, 839, 845, 943, 951, 955, 956, 957, 958, 961, 963, 966, 968, 970, 972, 980, 986, 989, 992, 993, 997, 1017, 1035, 1111, 1134, 1168, 1174, 1175], "care": [42, 46, 48, 81, 142, 161, 162, 164, 167, 169, 194, 202, 234, 348, 380, 403, 412, 414, 430, 454, 455, 478, 509, 510, 585, 599, 617, 660, 731, 732, 736, 745, 768, 769, 772, 779, 803, 815, 817, 825, 830, 851, 852, 853, 930, 938, 942, 954, 967, 975, 1001, 1023, 1047, 1051, 1063, 1070, 1073, 1074, 1080, 1103, 1127, 1135, 1148, 1158], "dump": [42, 162, 181, 210, 226, 227, 237, 250, 254, 257, 263, 272, 307, 310, 313, 489, 508, 509, 592, 597, 720, 740, 863, 996, 997], "db": [42, 50, 172, 198, 223, 224, 225, 229, 235, 248, 263, 470, 484, 485, 491, 513, 519, 674, 675, 676, 677, 678, 746, 1079], "pull": [42, 44, 50, 64, 78, 124, 125, 141, 166, 177, 214, 223, 224, 238, 342, 365, 466, 470, 482, 599, 682, 798, 825, 1027, 1030, 1147], "paramet": [42, 58, 64, 111, 112, 113, 114, 115, 116, 119, 129, 137, 161, 164, 169, 179, 182, 189, 190, 194, 199, 200, 201, 203, 205, 213, 214, 218, 221, 222, 223, 224, 231, 235, 237, 240, 241, 243, 246, 247, 250, 257, 260, 281, 282, 284, 286, 331, 343, 348, 357, 379, 388, 390, 394, 405, 409, 424, 425, 430, 432, 433, 436, 439, 443, 444, 450, 452, 456, 461, 462, 465, 467, 472, 528, 538, 544, 560, 574, 584, 586, 589, 593, 596, 597, 600, 604, 609, 610, 664, 670, 684, 687, 694, 710, 722, 724, 729, 742, 754, 763, 775, 777, 778, 783, 784, 791, 805, 828, 833, 838, 841, 844, 845, 865, 867, 930, 945, 968, 978, 993, 1001, 1014, 1018, 1023, 1037, 1040, 1045, 1052, 1068, 1075, 1080, 1090, 1096, 1098, 1102, 1108, 1117, 1128, 1131, 1134, 1141, 1144, 1145, 1147, 1172, 1173], "entri": [42, 130, 159, 163, 164, 168, 226, 237, 379, 479, 495, 638, 640, 660, 813, 851, 864, 868, 869, 870, 907, 913, 945, 951, 965, 1016, 1023, 1071, 1134, 1165], "o_creat": [42, 778, 921, 951, 952, 956, 960, 962, 979, 992], "o_trunc": [42, 48, 951], "o_wronli": [42, 778, 921, 951, 952, 954, 955, 956, 960, 961, 962, 963, 966, 979, 992], "0666": [42, 884, 955, 956, 992], "assert": [42, 46, 198, 222, 235, 247, 250, 264, 280, 313, 315, 466, 489, 631, 672, 675, 677, 683, 756, 949, 961, 963, 966, 992, 996, 997, 1035, 1111, 1118, 1119, 1120, 1156, 1162, 1163, 1165, 1173], "ing": [42, 957], "mode": [42, 102, 124, 165, 177, 179, 214, 222, 231, 234, 235, 237, 247, 250, 254, 257, 275, 278, 282, 296, 299, 313, 330, 454, 530, 582, 755, 777, 778, 784, 817, 823, 851, 852, 853, 855, 858, 859, 862, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 885, 921, 924, 931, 945, 950, 951, 952, 960, 962, 976, 979, 982, 984, 992, 993, 1048, 1050, 1151], "binaryus": 42, "hton": [42, 948], "arpa": [42, 948], "inet": [42, 179, 948], "again": [42, 100, 124, 161, 162, 164, 167, 169, 173, 177, 178, 190, 194, 198, 200, 201, 202, 214, 223, 248, 253, 262, 268, 271, 277, 278, 295, 298, 301, 317, 357, 358, 359, 362, 363, 368, 375, 376, 425, 466, 488, 492, 502, 530, 531, 532, 533, 534, 535, 536, 537, 539, 540, 541, 542, 577, 582, 584, 586, 599, 600, 604, 614, 693, 704, 746, 754, 755, 773, 776, 777, 778, 845, 848, 852, 853, 854, 855, 858, 859, 866, 869, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 915, 921, 931, 938, 941, 944, 946, 948, 949, 950, 952, 957, 960, 962, 963, 972, 976, 978, 979, 982, 984, 993, 1001, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1020, 1040, 1045, 1063, 1068, 1073, 1123, 1141, 1144, 1176], "od": [42, 250], "hardwir": [42, 64, 327, 786, 947, 1040], "enter": [42, 111, 112, 133, 195, 202, 231, 236, 237, 247, 250, 259, 260, 262, 263, 280, 313, 314, 342, 357, 362, 382, 577, 600, 659, 693, 699, 710, 742, 803, 825, 841, 858, 881, 983, 984, 1058, 1110], "joerg": [42, 50, 144, 181, 195, 196, 198, 199, 201, 203, 210, 214, 218, 221, 227, 234, 237, 240, 242, 244, 247, 250, 254, 257, 260, 263, 272, 275, 282, 289, 291, 292, 296, 302, 307, 314, 318, 324, 330, 336, 351, 354, 449, 476, 484, 491, 525, 541, 543, 559, 597, 631, 643, 662, 672, 673, 674, 675, 677, 694, 852, 853, 860, 862, 867, 881, 897, 910, 916, 941, 978, 1036, 1037, 1039, 1040, 1041, 1043, 1044, 1052, 1074, 1078, 1101, 1118, 1131, 1140, 1141, 1142, 1144, 1145, 1146, 1147], "huber": [42, 244, 250, 1131], "caro": [42, 234, 244, 247, 254, 257, 260, 263, 272, 275, 282, 296, 314, 324, 340, 484, 491, 543, 559, 631, 643, 675, 677, 1039, 1041, 1061, 1112, 1114, 1118, 1120, 1140, 1141, 1142, 1144, 1145, 1146, 1147], "johanna": [42, 234, 244, 247, 254, 257, 275, 282, 296, 314, 324, 340, 484, 543, 559, 631, 643, 1061, 1112, 1114, 1118, 1120, 1140, 1141, 1142, 1144, 1145, 1146, 1147], "bodi": [42, 50, 55, 111, 112, 168, 379, 380, 382, 386, 415, 425, 454, 544, 577, 586, 587, 591, 594, 664, 682, 683, 686, 745, 1027, 1157], "compil": [42, 43, 66, 104, 105, 109, 111, 112, 114, 117, 124, 163, 164, 173, 182, 189, 190, 191, 210, 224, 227, 240, 247, 263, 272, 275, 278, 279, 287, 296, 302, 304, 320, 324, 327, 330, 336, 365, 377, 390, 399, 400, 409, 412, 414, 421, 422, 431, 433, 440, 443, 446, 447, 448, 449, 450, 452, 453, 454, 456, 457, 458, 459, 461, 462, 466, 470, 473, 475, 478, 479, 482, 488, 502, 504, 509, 510, 523, 524, 530, 531, 532, 533, 534, 535, 536, 537, 539, 540, 541, 568, 574, 577, 582, 584, 587, 589, 593, 595, 599, 610, 638, 657, 664, 669, 671, 682, 683, 684, 685, 687, 689, 690, 692, 693, 695, 697, 699, 704, 707, 710, 719, 720, 722, 728, 731, 732, 734, 736, 740, 741, 775, 777, 778, 793, 794, 809, 921, 929, 1000, 1001, 1004, 1005, 1006, 1007, 1009, 1023, 1048, 1053, 1065, 1067, 1163, 1165, 1173, 1174, 1176, 1177, 1178, 1189], "still": [42, 54, 62, 150, 156, 161, 162, 163, 164, 172, 173, 182, 183, 184, 224, 234, 240, 278, 280, 348, 368, 377, 428, 440, 466, 469, 475, 528, 550, 571, 574, 592, 593, 614, 620, 653, 668, 693, 710, 727, 731, 736, 740, 741, 743, 744, 745, 788, 793, 825, 828, 868, 882, 904, 929, 930, 931, 981, 983, 985, 996, 1018, 1026, 1029, 1035, 1048, 1051, 1054, 1078, 1114, 1137, 1145, 1165, 1173], "funni": [42, 44, 50, 101, 124, 194, 278, 487, 778, 855, 893, 899, 905, 921, 1000], "temp": [42, 44, 250, 366, 740, 741, 742], "got": [42, 45, 162, 172, 224, 296, 318, 330, 424, 696, 951, 1024], "overwritten": [42, 47, 53, 55, 56, 619, 778, 952, 1030], "suspect": [42, 164, 166], "inmem": 42, "loos": [42, 43, 198, 214, 378, 403, 450, 815], "foolishli": 42, "main": [42, 50, 64, 108, 114, 120, 121, 133, 155, 164, 167, 168, 173, 201, 223, 235, 247, 248, 250, 267, 278, 286, 289, 291, 304, 306, 309, 313, 320, 357, 377, 379, 380, 382, 386, 388, 390, 391, 405, 420, 421, 422, 424, 428, 440, 447, 451, 454, 455, 458, 460, 466, 467, 469, 473, 489, 503, 508, 509, 510, 525, 526, 528, 536, 538, 540, 541, 560, 568, 571, 574, 588, 592, 593, 595, 597, 599, 600, 602, 612, 613, 614, 615, 616, 619, 620, 621, 622, 623, 625, 626, 629, 630, 631, 635, 639, 640, 641, 642, 643, 649, 653, 654, 657, 659, 660, 666, 671, 672, 673, 674, 675, 676, 677, 678, 682, 687, 697, 700, 701, 702, 705, 706, 707, 708, 710, 711, 712, 714, 715, 716, 717, 718, 719, 720, 724, 726, 727, 729, 732, 734, 740, 741, 743, 744, 745, 746, 749, 754, 756, 776, 786, 793, 794, 796, 825, 862, 864, 882, 929, 931, 932, 945, 947, 948, 949, 955, 956, 957, 958, 963, 966, 967, 969, 973, 978, 980, 983, 984, 989, 992, 993, 996, 999, 1007, 1011, 1017, 1031, 1034, 1049, 1113, 1115, 1163, 1168, 1181], "chang": [42, 45, 46, 47, 51, 55, 56, 78, 81, 124, 126, 133, 140, 141, 161, 164, 166, 167, 168, 169, 172, 173, 177, 185, 198, 214, 223, 254, 262, 364, 403, 440, 442, 446, 449, 450, 454, 464, 467, 482, 527, 533, 538, 539, 541, 542, 593, 618, 675, 729, 754, 760, 776, 778, 798, 803, 851, 860, 862, 864, 882, 891, 894, 909, 922, 924, 929, 930, 941, 945, 966, 996, 999, 1014, 1030, 1054, 1063, 1102, 1113, 1115, 1118, 1141, 1145, 1159, 1176], "errorhandl": 42, "just": [42, 46, 64, 70, 85, 109, 131, 132, 137, 152, 161, 162, 163, 164, 165, 166, 168, 169, 173, 177, 184, 186, 190, 194, 201, 224, 235, 238, 263, 304, 313, 320, 345, 386, 405, 430, 433, 442, 460, 464, 469, 479, 484, 525, 528, 538, 540, 541, 542, 565, 584, 585, 586, 592, 595, 596, 597, 600, 619, 647, 654, 660, 664, 668, 682, 689, 693, 695, 696, 710, 725, 728, 742, 744, 746, 762, 776, 783, 788, 796, 798, 805, 809, 815, 817, 825, 841, 864, 885, 888, 889, 918, 922, 930, 931, 946, 948, 949, 955, 956, 958, 967, 968, 978, 985, 993, 1011, 1018, 1021, 1022, 1025, 1027, 1045, 1046, 1052, 1053, 1054, 1061, 1065, 1073, 1074, 1128, 1129, 1136, 1141, 1142, 1146, 1147, 1152, 1156, 1168, 1178], "silent": [42, 66, 244, 254, 686, 929], "truncat": [42, 250, 296, 380, 401, 503, 867, 951, 1073], "faschingb": 42, "echo": [42, 163, 214, 250, 278, 343, 541, 666, 798, 807, 825, 852, 853, 856, 857, 865, 869, 879, 888, 891, 895, 904, 922, 924, 929, 930, 931, 932, 952, 954, 963, 965, 966, 978, 981, 987, 996, 1158], "success": [42, 191, 231, 237, 247, 250, 441, 470, 699, 752, 803, 807, 897, 1089], "failur": [42, 43, 231, 237, 247, 250, 262, 267, 296, 342, 450, 460, 466, 480, 538, 542, 1156, 1157, 1164, 1165, 1168], "renam": [42, 50, 57, 64, 67, 100, 122, 124, 155, 221, 268, 277, 278, 298, 299, 577, 729, 778, 793, 794, 855, 892, 905, 921, 1017, 1135], "most": [43, 44, 57, 59, 63, 66, 88, 120, 122, 158, 161, 162, 164, 165, 168, 173, 184, 186, 192, 194, 198, 200, 222, 231, 234, 237, 238, 247, 248, 250, 254, 260, 280, 282, 296, 316, 317, 318, 342, 378, 386, 415, 418, 425, 440, 442, 448, 453, 454, 458, 459, 469, 483, 496, 539, 599, 600, 638, 690, 734, 739, 742, 748, 763, 803, 811, 825, 830, 850, 852, 853, 856, 863, 887, 918, 922, 929, 931, 943, 951, 957, 970, 985, 993, 996, 997, 999, 1020, 1021, 1022, 1027, 1034, 1035, 1036, 1042, 1043, 1051, 1053, 1054, 1055, 1058, 1061, 1064, 1065, 1069, 1071, 1074, 1075, 1080, 1122, 1123, 1132, 1136, 1140, 1144, 1145, 1150, 1152, 1156, 1157, 1163, 1178, 1179, 1181], "somebodi": [43, 169, 177, 190, 224, 392, 449, 470, 568, 592, 644, 704, 710, 721, 752, 815, 833, 987], "concis": [43, 161, 194, 198, 248, 317, 358, 359, 469, 825, 1123], "longer": [43, 177, 987, 1048, 1176], "necessari": [43, 62, 141, 155, 163, 169, 173, 182, 191, 205, 221, 224, 281, 284, 316, 317, 382, 392, 424, 464, 466, 470, 482, 528, 587, 591, 659, 685, 686, 720, 730, 742, 754, 821, 825, 860, 929, 931, 932, 947, 985, 996, 1016, 1043, 1050, 1054, 1078, 1135, 1156], "gosh": [43, 158, 403, 448, 450, 644, 727, 975, 1020, 1021, 1027, 1054], "hungarian": [43, 444], "notat": [43, 189, 229, 245, 250, 255, 296, 444, 757, 930, 1036], "userdb": [43, 47, 48, 51, 53, 54, 56, 57, 224, 226, 240, 248, 295, 306, 309, 667, 675, 676, 677, 679, 778, 1112, 1113, 1114, 1115, 1120], "bolt": [43, 224], "onto": [43, 59, 63, 122, 130, 133, 172, 183, 224, 240, 313, 506, 588, 665, 679, 742, 778, 825, 910, 922, 930, 949, 981, 1004, 1011], "unclear": [43, 531, 997], "semant": [43, 49, 82, 162, 186, 266, 267, 269, 287, 326, 435, 449, 450, 504, 585, 638, 644, 683, 690, 722, 738, 741, 742, 743, 744, 747, 755, 775, 777, 778, 784, 789, 817, 996, 997, 1054, 1132, 1176], "backingstor": [43, 53, 56, 778], "mangl": [43, 221, 222, 235, 252, 1048], "prefix": [43, 62, 158, 173, 231, 235, 237, 247, 250, 296, 350, 596, 626, 682, 825, 1011, 1013, 1020, 1042, 1043, 1068, 1075, 1158], "m_": 43, "enough": [43, 165, 169, 186, 194, 244, 254, 287, 296, 368, 392, 483, 659, 929, 942, 970, 1000, 1022, 1039, 1047, 1068, 1136, 1141, 1148, 1150, 1157, 1178], "take": [43, 48, 87, 103, 111, 112, 125, 130, 132, 155, 156, 161, 162, 163, 166, 167, 168, 169, 172, 177, 179, 182, 183, 185, 190, 194, 195, 200, 201, 202, 222, 235, 240, 242, 250, 254, 260, 284, 323, 342, 343, 348, 357, 387, 424, 427, 444, 446, 453, 455, 459, 460, 464, 465, 467, 482, 483, 506, 507, 509, 510, 528, 538, 541, 554, 560, 574, 586, 593, 597, 600, 602, 640, 664, 682, 687, 694, 695, 704, 732, 734, 740, 744, 754, 768, 769, 788, 815, 825, 851, 852, 853, 929, 959, 987, 1011, 1017, 1021, 1025, 1047, 1063, 1064, 1080, 1087, 1090, 1092, 1096, 1097, 1098, 1101, 1102, 1103, 1105, 1107, 1117, 1122, 1130, 1131, 1136, 1141, 1151, 1158], "dogmat": [43, 240, 375, 1136], "switch": [43, 45, 54, 58, 59, 63, 111, 112, 119, 122, 124, 125, 126, 127, 128, 132, 133, 134, 137, 163, 167, 169, 181, 182, 223, 231, 237, 247, 248, 250, 327, 343, 344, 346, 363, 366, 369, 399, 413, 417, 419, 426, 432, 436, 439, 441, 443, 452, 456, 459, 461, 462, 466, 469, 482, 496, 530, 531, 532, 582, 643, 683, 684, 722, 764, 766, 775, 777, 778, 805, 823, 830, 839, 842, 844, 858, 862, 922, 925, 983, 1016, 1173, 1177], "bool": [43, 50, 53, 55, 56, 119, 135, 141, 205, 212, 234, 237, 240, 242, 244, 247, 250, 257, 260, 275, 279, 280, 282, 286, 296, 324, 330, 474, 476, 543, 544, 548, 550, 555, 584, 586, 600, 601, 602, 603, 604, 622, 625, 631, 640, 687, 699, 700, 701, 702, 710, 713, 717, 724, 754, 756, 758, 778, 838, 845, 983, 989, 996, 1054, 1080, 1142, 1147], "wear": [43, 159, 163], "incorrect": [43, 231, 237, 247, 250, 254, 403, 422, 1148], "metaphor": 43, "But": [43, 162, 163, 164, 167, 178, 214, 223, 313, 386, 392, 421, 424, 430, 433, 446, 448, 454, 464, 583, 584, 592, 597, 598, 599, 617, 635, 653, 654, 692, 695, 731, 740, 744, 746, 763, 777, 778, 807, 809, 825, 835, 852, 853, 907, 921, 929, 930, 931, 938, 952, 960, 962, 967, 975, 979, 1002, 1016, 1018, 1039, 1042, 1048, 1128, 1131, 1142], "support": [43, 79, 130, 163, 165, 169, 173, 182, 186, 198, 210, 212, 231, 234, 237, 242, 244, 247, 250, 254, 257, 272, 275, 282, 314, 324, 330, 336, 353, 422, 446, 460, 466, 583, 584, 586, 690, 742, 746, 762, 772, 776, 781, 817, 907, 929, 930, 931, 941, 993, 999, 1027, 1035, 1042, 1048, 1065, 1078, 1128, 1130, 1145, 1163], "copy_process": 43, "law": [43, 214, 354, 397, 442, 1022, 1147], "tdd": [43, 124, 193, 198, 208, 248, 290, 306, 309, 313, 327, 376, 1156], "until": [43, 55, 98, 99, 100, 103, 106, 111, 112, 124, 129, 137, 141, 150, 152, 162, 164, 166, 168, 213, 222, 234, 253, 271, 291, 317, 414, 420, 445, 448, 542, 602, 666, 710, 716, 754, 756, 793, 813, 823, 833, 835, 841, 858, 862, 869, 885, 897, 904, 946, 947, 948, 949, 972, 986, 993, 997, 1026, 1027, 1048, 1056, 1058, 1123], "fail": [43, 44, 158, 162, 164, 172, 173, 177, 189, 194, 224, 250, 267, 299, 342, 368, 467, 470, 480, 484, 489, 491, 538, 669, 690, 692, 699, 704, 758, 776, 778, 803, 825, 904, 921, 931, 952, 957, 960, 962, 977, 978, 979, 996, 1016, 1020, 1022, 1031, 1073, 1089, 1145, 1157, 1158, 1162, 1164, 1166], "suffici": [43, 126, 177, 182, 194, 343, 591, 619, 660, 664, 675, 683, 763, 798, 907, 997, 1045, 1047, 1075, 1157], "pass": [43, 44, 48, 55, 57, 58, 64, 111, 112, 113, 115, 116, 119, 182, 190, 194, 199, 200, 201, 203, 210, 221, 223, 227, 231, 237, 240, 242, 244, 247, 250, 254, 257, 260, 262, 263, 267, 272, 275, 280, 281, 284, 292, 296, 314, 336, 340, 342, 368, 388, 390, 392, 403, 424, 428, 431, 433, 450, 480, 482, 487, 489, 528, 538, 539, 540, 541, 543, 544, 584, 594, 595, 601, 602, 603, 604, 613, 664, 670, 694, 724, 732, 737, 741, 744, 772, 773, 774, 791, 828, 869, 929, 955, 958, 969, 978, 1001, 1018, 1020, 1021, 1022, 1023, 1035, 1036, 1037, 1039, 1045, 1063, 1065, 1073, 1075, 1111, 1140, 1156, 1163], "current": [43, 100, 110, 124, 129, 148, 150, 163, 164, 165, 167, 169, 172, 173, 177, 202, 224, 231, 237, 247, 250, 268, 275, 277, 278, 296, 298, 299, 349, 368, 371, 376, 425, 458, 466, 482, 484, 488, 502, 530, 531, 532, 533, 534, 535, 536, 537, 539, 540, 582, 672, 676, 741, 742, 755, 763, 777, 778, 794, 825, 833, 847, 851, 852, 853, 854, 855, 858, 859, 860, 862, 868, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 885, 886, 889, 890, 891, 892, 893, 894, 895, 896, 897, 899, 900, 901, 902, 903, 905, 907, 909, 921, 930, 944, 950, 951, 952, 960, 962, 967, 969, 976, 979, 982, 983, 984, 1001, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1016, 1021, 1026, 1047, 1050, 1058, 1061, 1182], "initi": [43, 45, 64, 111, 112, 114, 118, 122, 124, 135, 144, 161, 162, 165, 169, 177, 179, 189, 194, 198, 203, 209, 218, 222, 223, 233, 234, 235, 250, 254, 257, 260, 265, 275, 282, 287, 289, 292, 296, 309, 318, 324, 330, 336, 380, 382, 389, 433, 438, 448, 452, 456, 458, 461, 462, 484, 486, 504, 509, 510, 523, 524, 528, 530, 531, 532, 533, 534, 535, 538, 560, 574, 577, 582, 586, 587, 588, 590, 595, 597, 599, 601, 603, 618, 619, 620, 625, 638, 643, 664, 669, 671, 672, 673, 678, 679, 693, 704, 722, 730, 741, 742, 744, 756, 775, 777, 778, 783, 786, 788, 789, 796, 803, 811, 821, 825, 852, 853, 861, 886, 916, 930, 931, 946, 949, 967, 970, 983, 992, 993, 999, 1034, 1037, 1067, 1128, 1132, 1176, 1181], "mess": [43, 162, 248, 267, 269, 324, 326, 327, 684, 722, 777, 778, 1054, 1067, 1157], "roughli": [43, 66, 164, 169, 313, 453, 850, 983, 992], "took": [43, 161, 168, 198, 1088], "our": [43, 53, 59, 63, 71, 78, 105, 124, 135, 137, 141, 142, 144, 163, 164, 166, 168, 173, 177, 184, 198, 213, 214, 223, 224, 238, 240, 278, 289, 291, 327, 357, 450, 453, 464, 475, 483, 487, 492, 504, 508, 525, 536, 541, 675, 678, 798, 805, 825, 929, 930, 955, 958, 983, 993, 997, 999, 1011, 1014, 1017, 1023, 1120, 1128, 1131], "craftsmanship": [43, 45], "anoth": [43, 64, 79, 122, 161, 162, 163, 164, 168, 169, 172, 173, 177, 184, 186, 191, 194, 200, 201, 224, 231, 237, 240, 247, 252, 254, 260, 275, 278, 281, 284, 287, 313, 394, 412, 413, 427, 435, 447, 454, 465, 482, 483, 486, 491, 506, 509, 510, 523, 524, 528, 533, 542, 594, 597, 598, 600, 682, 687, 710, 734, 742, 746, 756, 763, 768, 769, 813, 825, 851, 852, 853, 858, 867, 869, 881, 918, 929, 931, 941, 942, 956, 970, 972, 984, 992, 997, 1014, 1017, 1018, 1021, 1022, 1039, 1046, 1054, 1070, 1074, 1079, 1131, 1139, 1145, 1148, 1156, 1179], "isol": [43, 54, 192, 194, 198, 248, 262, 929, 983, 984, 1034, 1123, 1135, 1151, 1167, 1169], "wrong": [43, 79, 114, 119, 120, 162, 164, 287, 403, 425, 444, 660, 746, 798, 955, 970, 984, 1018, 1022, 1034, 1053, 1117, 1128], "oracl": [43, 1132], "conduct": [43, 1156], "serious": 43, "safeti": [43, 142, 240, 446, 449, 452, 456, 461, 462, 465, 560, 683, 753, 778, 784, 922, 996, 997, 1020], "architectur": [43, 109, 159, 169, 221, 374, 398, 425, 442, 465, 746, 786, 922, 949, 999, 1000, 1009, 1011, 1179], "treat": [43, 82, 254, 390, 420, 867], "them": [43, 64, 67, 111, 112, 155, 159, 161, 162, 164, 167, 168, 169, 172, 173, 177, 182, 183, 184, 191, 194, 198, 199, 201, 203, 219, 221, 224, 235, 259, 262, 271, 291, 301, 313, 420, 442, 473, 484, 488, 504, 540, 601, 603, 604, 657, 664, 666, 669, 682, 732, 746, 825, 851, 857, 858, 864, 867, 892, 904, 931, 938, 983, 984, 993, 996, 999, 1000, 1011, 1016, 1021, 1022, 1023, 1024, 1045, 1047, 1069, 1101, 1104, 1123, 1129, 1136, 1147, 1163], "carefulli": [43, 164, 177, 450, 509, 699, 1129], "independ": [43, 64, 242, 254, 392, 425, 597, 909, 923, 931, 1001], "self": [43, 59, 60, 63, 64, 162, 163, 173, 181, 182, 189, 195, 198, 200, 218, 221, 222, 234, 235, 237, 244, 247, 252, 254, 260, 263, 275, 282, 292, 296, 302, 314, 318, 340, 458, 466, 584, 586, 690, 692, 693, 727, 740, 746, 752, 786, 817, 821, 980, 1016, 1020, 1021, 1022, 1031, 1035, 1036, 1039, 1040, 1041, 1042, 1043, 1044, 1054, 1144, 1145, 1157, 1162, 1163, 1165, 1176], "valid": [43, 161, 164, 172, 250, 253, 296, 368, 423, 430, 446, 450, 609, 617, 641, 676, 690, 727, 730, 756, 838, 1053, 1054, 1068, 1069, 1085, 1090, 1144, 1145, 1151], "first": [43, 53, 62, 64, 88, 129, 152, 159, 161, 164, 165, 167, 168, 169, 173, 177, 182, 192, 194, 201, 221, 234, 235, 242, 244, 248, 250, 254, 278, 280, 291, 296, 313, 342, 348, 354, 378, 386, 409, 424, 425, 430, 438, 454, 455, 466, 467, 468, 469, 470, 472, 473, 474, 475, 477, 478, 480, 530, 571, 577, 582, 584, 590, 592, 596, 615, 616, 617, 621, 640, 643, 675, 677, 682, 704, 711, 712, 731, 732, 734, 772, 773, 774, 778, 792, 795, 802, 806, 816, 825, 827, 829, 834, 840, 843, 846, 863, 864, 865, 870, 881, 885, 891, 907, 909, 912, 916, 918, 921, 922, 929, 930, 948, 952, 972, 980, 983, 986, 992, 1000, 1001, 1015, 1016, 1017, 1018, 1022, 1023, 1027, 1034, 1036, 1040, 1048, 1049, 1050, 1051, 1053, 1054, 1063, 1064, 1067, 1073, 1074, 1080, 1103, 1112, 1118, 1120, 1129, 1131, 1139, 1157, 1163, 1176, 1181], "debug": [43, 162, 163, 191, 221, 231, 237, 247, 250, 301, 305, 321, 357, 362, 375, 425, 451, 454, 458, 459, 460, 468, 470, 471, 487, 565, 710, 727, 778, 783, 805, 807, 867, 885, 951, 975, 996, 1073, 1151, 1174, 1177, 1182, 1191], "fact": [43, 53, 162, 163, 194, 313, 422, 430, 454, 464, 825, 870, 955, 993, 1132], "hard": [43, 71, 79, 86, 124, 129, 137, 141, 152, 162, 164, 167, 168, 173, 178, 183, 190, 194, 201, 223, 238, 244, 254, 268, 277, 278, 298, 299, 313, 403, 422, 451, 464, 492, 568, 776, 778, 825, 855, 861, 864, 905, 907, 921, 924, 930, 1011, 1020, 1022, 1042, 1059, 1073, 1125, 1146, 1176, 1192], "principl": [43, 53, 54, 84, 107, 114, 119, 120, 142, 158, 164, 173, 288, 289, 290, 291, 465, 488, 489, 778, 825, 929, 931, 942, 1002, 1131], "mayb": [43, 45, 57, 58, 62, 64, 79, 124, 129, 152, 155, 162, 163, 164, 167, 168, 177, 190, 194, 221, 237, 238, 288, 289, 290, 291, 306, 360, 363, 365, 366, 467, 486, 487, 488, 520, 573, 574, 644, 692, 774, 930, 1014, 1036, 1165], "overview": [43, 99, 124, 158, 169, 186, 202, 204, 219, 223, 235, 268, 269, 277, 281, 284, 287, 289, 298, 299, 315, 371, 375, 488, 502, 530, 531, 532, 533, 534, 535, 536, 537, 540, 582, 602, 698, 709, 722, 733, 755, 777, 778, 848, 852, 853, 854, 855, 858, 859, 866, 868, 869, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 885, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 905, 915, 921, 933, 934, 935, 936, 937, 944, 945, 948, 950, 952, 960, 962, 976, 979, 982, 984, 1001, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1014, 1046, 1123, 1176, 1177, 1179, 1181], "respons": [43, 53, 56, 90, 114, 119, 120, 137, 142, 147, 161, 172, 177, 225, 464, 506, 520, 528, 586, 594, 742, 778, 821, 833, 930, 931, 954, 983, 984, 1050, 1130, 1181], "googl": [44, 157, 162, 169, 171, 183, 186, 189, 190, 194, 195, 198, 219, 224, 377, 539, 740, 741, 914, 1048, 1123, 1163, 1165, 1194], "cloner": 44, "init": [44, 144, 161, 163, 179, 183, 260, 267, 269, 330, 388, 415, 513, 514, 536, 539, 567, 584, 602, 620, 780, 788, 793, 813, 815, 827, 861, 913, 997], "cpp": [44, 50, 98, 122, 124, 125, 126, 127, 128, 129, 132, 133, 142, 173, 188, 198, 223, 224, 240, 267, 278, 287, 289, 377, 468, 469, 470, 475, 482, 483, 484, 486, 487, 489, 491, 503, 504, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 522, 523, 524, 529, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 548, 550, 551, 552, 553, 555, 556, 557, 558, 559, 560, 584, 585, 586, 587, 588, 592, 593, 595, 597, 598, 599, 600, 601, 602, 603, 604, 612, 613, 614, 615, 616, 619, 620, 621, 622, 623, 625, 626, 629, 630, 631, 635, 639, 640, 641, 642, 643, 649, 653, 654, 657, 659, 660, 662, 666, 671, 672, 673, 674, 675, 676, 677, 678, 682, 687, 689, 692, 693, 694, 697, 699, 704, 710, 719, 720, 721, 724, 725, 726, 727, 728, 729, 731, 732, 734, 736, 740, 741, 742, 743, 744, 745, 754, 756, 758, 762, 764, 766, 768, 772, 773, 774, 776, 929, 959, 963, 966, 978, 980, 983, 999], "assert_eq": [44, 482, 484, 487, 491, 504, 531, 532, 538, 541, 542, 543, 544, 545, 546, 548, 550, 551, 552, 555, 556, 557, 558, 559, 577, 584, 585, 586, 597, 598, 600, 601, 602, 603, 604, 662, 687, 689, 692, 693, 694, 725, 736, 740, 741, 742, 743, 745, 758, 772, 773, 774, 776, 1163, 1168], "test_f": [44, 506, 541, 542, 776, 1168], "simplefixtur": 44, "public": [44, 55, 102, 103, 108, 114, 117, 118, 119, 120, 121, 124, 129, 133, 137, 159, 172, 177, 214, 222, 235, 263, 268, 277, 278, 286, 292, 298, 299, 354, 357, 362, 438, 474, 475, 476, 478, 483, 485, 489, 491, 494, 495, 496, 506, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 528, 541, 542, 554, 568, 574, 583, 584, 585, 587, 588, 589, 591, 592, 593, 594, 595, 596, 598, 599, 600, 607, 610, 625, 626, 643, 653, 654, 656, 657, 659, 660, 668, 669, 674, 676, 677, 682, 685, 686, 687, 688, 689, 692, 693, 695, 704, 706, 707, 708, 710, 712, 713, 716, 717, 718, 719, 720, 721, 725, 726, 727, 729, 740, 741, 742, 745, 746, 754, 756, 762, 764, 766, 768, 776, 778, 789, 793, 854, 855, 860, 874, 880, 921, 933, 934, 935, 936, 937, 942, 1043, 1048, 1168], "myfirstsuit": 44, "test_find": 44, "wtf": [44, 53, 124, 200, 231, 236, 237, 240, 242, 260, 299, 577, 592, 778, 921, 946, 950, 962, 996, 998, 1021], "tallk": 44, "morph": [44, 64, 189, 198, 223, 224, 289, 562, 574, 577, 580, 586, 682, 734, 827, 1025], "fixtur": [44, 189, 198, 290, 291, 306, 312, 313, 316, 317, 327, 365, 495, 506, 542, 778, 1161, 1194], "trivial": [44, 162, 173, 304, 320, 404, 420, 577, 594, 690, 695, 746, 830, 838, 931, 947, 983, 1178], "tempfil": [44, 1020], "crap": [44, 163, 238, 280, 336, 341, 450, 466, 469, 644, 683, 763, 931, 996], "null": [44, 64, 119, 163, 164, 165, 180, 205, 221, 234, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 379, 392, 399, 427, 438, 448, 453, 466, 541, 597, 696, 783, 789, 796, 821, 856, 865, 867, 868, 885, 900, 907, 949, 954, 961, 968, 970, 972, 974, 980, 983, 984, 989, 992, 996], "deriv": [44, 108, 121, 125, 141, 184, 238, 250, 317, 344, 368, 542, 560, 586, 656, 657, 659, 660, 721, 729, 762, 1022, 1035, 1168], "seminar": [45, 145], "psycho": 45, "rule": [45, 163, 169, 194, 244, 250, 254, 287, 326, 365, 380, 399, 401, 402, 403, 418, 424, 442, 453, 454, 455, 457, 465, 467, 492, 504, 509, 610, 656, 690, 693, 697, 699, 719, 745, 746, 864, 885, 946, 1022, 1045, 1053, 1054, 1064, 1073, 1136, 1183], "dont": [45, 254, 464, 798], "scenario": [45, 164, 177, 186, 194, 198, 387, 508, 660, 754, 984, 985, 992], "robert": [45, 492], "martin": [45, 464, 465, 492], "someon": [45, 126, 194, 235, 250, 257, 260, 291, 364, 599, 754, 817, 882, 888, 909, 931, 955, 999, 1047], "mistak": [45, 162, 168, 169, 219, 235, 259, 929, 1123, 1136], "kill": [45, 163, 164, 240, 885, 939, 968, 987, 996, 997, 1026, 1182], "peopl": [45, 64, 159, 162, 164, 166, 167, 169, 177, 182, 194, 223, 257, 375, 464, 492, 510, 699, 825, 864, 1031, 1047, 1075, 1130, 1132], "polit": [45, 732], "thei": [45, 55, 66, 79, 122, 150, 161, 162, 163, 164, 165, 166, 167, 168, 169, 173, 182, 184, 186, 190, 202, 224, 231, 235, 237, 240, 247, 250, 254, 296, 304, 320, 368, 394, 400, 420, 448, 451, 454, 460, 464, 465, 469, 478, 483, 484, 504, 509, 510, 538, 540, 560, 577, 587, 592, 618, 622, 654, 682, 683, 686, 693, 694, 741, 742, 748, 784, 798, 817, 825, 850, 860, 864, 886, 922, 929, 930, 931, 942, 967, 996, 997, 1002, 1017, 1027, 1035, 1042, 1045, 1095, 1118, 1125, 1128, 1129, 1136, 1139, 1142, 1156, 1162, 1178, 1181], "regul": 45, "ethic": 45, "everi": [45, 53, 59, 63, 64, 79, 90, 111, 112, 130, 155, 162, 168, 198, 221, 250, 291, 389, 446, 460, 464, 487, 492, 508, 527, 528, 597, 607, 659, 681, 683, 688, 776, 796, 809, 825, 850, 858, 860, 862, 863, 879, 886, 888, 930, 945, 980, 983, 996, 997, 1016, 1018, 1027, 1063, 1081, 1092, 1103, 1129, 1163, 1178], "particular": [45, 122, 161, 173, 194, 433, 458, 484, 508, 560, 776, 871, 1046, 1047], "electr": 45, "seem": [45, 150, 161, 163, 164, 183, 288, 483, 929, 931, 996, 1178], "adher": [45, 867], "immedi": [45, 64, 162, 163, 168, 169, 240, 281, 284, 287, 289, 343, 425, 635, 749, 754, 807, 817, 821, 922, 972, 981, 984, 986, 1067, 1163], "survei": [45, 183], "had": [45, 122, 161, 163, 164, 168, 169, 173, 177, 182, 194, 198, 227, 229, 248, 394, 433, 504, 571, 583, 668, 682, 819, 852, 853, 864, 889, 929, 942, 1013, 1047, 1054, 1073, 1142, 1146], "life": [45, 135, 141, 158, 169, 174, 177, 180, 182, 190, 589, 719, 740, 755, 777, 778, 825, 864, 921, 962, 976, 982, 1048, 1069, 1126], "accomplish": [45, 57, 79, 202, 288, 290, 291, 450, 465, 929], "befor": [45, 125, 129, 137, 141, 158, 162, 163, 165, 166, 167, 169, 172, 177, 182, 198, 201, 205, 223, 250, 266, 267, 269, 290, 291, 296, 312, 313, 314, 317, 324, 326, 382, 390, 391, 400, 420, 469, 541, 571, 577, 616, 642, 657, 683, 695, 710, 722, 727, 728, 738, 742, 743, 748, 749, 754, 756, 757, 776, 777, 778, 789, 803, 813, 819, 825, 851, 887, 922, 931, 970, 985, 987, 999, 1022, 1027, 1045, 1088, 1113, 1115, 1119, 1128, 1141, 1145, 1148, 1157, 1158, 1164], "formal": [45, 172, 186, 223, 224, 313, 316, 531, 1157], "googletest": [45, 66, 98, 189, 191, 192, 224, 267, 269, 304, 320, 480, 489, 525, 538, 540, 541, 602, 740, 741, 742, 776, 778, 779, 1163, 1165, 1178], "messag": [45, 129, 157, 159, 167, 168, 177, 180, 186, 192, 200, 201, 227, 231, 234, 237, 247, 250, 257, 260, 275, 282, 290, 291, 292, 296, 318, 324, 330, 336, 345, 357, 362, 465, 468, 470, 489, 594, 610, 669, 699, 704, 724, 726, 727, 736, 746, 754, 778, 800, 825, 858, 862, 867, 921, 943, 962, 972, 976, 1051, 1065, 1075, 1117, 1158, 1162, 1164, 1190, 1191, 1192], "saniti": [45, 456, 461, 462, 465, 469, 473, 599, 684, 722, 775, 777, 778], "perform": [45, 114, 118, 162, 168, 177, 179, 201, 220, 221, 250, 291, 318, 363, 404, 407, 430, 437, 442, 450, 453, 454, 457, 460, 461, 462, 468, 577, 617, 635, 638, 660, 681, 695, 737, 763, 778, 809, 987, 1004, 1014, 1015, 1073, 1156, 1174, 1177], "delici": [45, 53], "fearlessli": [45, 53], "backlog": [45, 46, 47, 51, 55, 56, 778], "Or": [45, 46, 47, 51, 55, 56, 113, 115, 116, 125, 141, 162, 269, 326, 449, 465, 568, 696, 722, 733, 777, 778, 916, 942, 952, 978, 1053, 1067, 1144, 1148], "Will": [45, 46, 47, 51, 55, 56, 162, 195, 254, 343, 778, 786, 999, 1065, 1151, 1165, 1171, 1190], "high": [46, 53, 119, 125, 183, 223, 237, 254, 464, 492, 515, 528, 532, 536, 740, 742, 757, 807, 819, 823, 835, 844], "speed": [46, 53, 152, 157, 162, 231, 235, 237, 247, 250, 254, 318, 455, 745, 819, 825, 985, 987, 1127, 1128], "hype": [46, 763], "we": [46, 47, 50, 51, 55, 56, 59, 62, 63, 69, 125, 129, 133, 137, 140, 141, 142, 144, 152, 161, 162, 164, 165, 166, 167, 168, 169, 173, 177, 178, 181, 182, 183, 184, 185, 186, 190, 191, 194, 198, 199, 200, 201, 202, 204, 213, 214, 221, 222, 223, 224, 228, 231, 234, 235, 237, 238, 240, 267, 269, 271, 278, 281, 284, 286, 288, 290, 291, 309, 313, 316, 317, 343, 360, 363, 364, 368, 379, 394, 405, 412, 420, 433, 442, 444, 448, 450, 453, 458, 465, 467, 475, 476, 482, 483, 484, 487, 489, 491, 494, 503, 504, 508, 509, 525, 526, 527, 528, 536, 539, 540, 541, 571, 577, 586, 598, 622, 653, 657, 674, 675, 676, 677, 678, 682, 693, 704, 710, 736, 737, 742, 745, 756, 760, 778, 786, 789, 793, 794, 798, 800, 803, 821, 825, 827, 833, 841, 852, 853, 867, 868, 882, 888, 889, 904, 922, 929, 930, 931, 938, 942, 947, 948, 949, 955, 956, 957, 958, 970, 983, 992, 1009, 1013, 1014, 1015, 1023, 1042, 1047, 1073, 1075, 1079, 1081, 1110, 1117, 1118, 1119, 1123, 1128, 1129, 1130, 1131, 1138, 1139, 1145, 1148, 1164, 1165, 1181], "did": [46, 163, 164, 166, 168, 169, 172, 173, 181, 190, 194, 201, 286, 444, 448, 464, 489, 527, 675, 744, 746, 773, 798, 803, 825, 864, 922, 933, 942, 1023, 1176], "consequ": [46, 161, 162, 281, 284, 424, 445, 448, 449, 492, 955, 1042, 1142, 1176], "unsign": [46, 114, 120, 137, 235, 240, 396, 398, 406, 435, 438, 442, 450, 496, 511, 526, 540, 541, 542, 592, 662, 663, 672, 720, 754, 756, 762, 764, 766, 768, 776, 781, 784, 789, 796, 805, 807, 809, 815, 821, 830, 835, 839, 951, 992, 993, 1173, 1174], "introduc": [46, 58, 79, 98, 223, 240, 248, 289, 304, 320, 446, 454, 466, 482, 487, 509, 527, 528, 529, 530, 560, 582, 668, 778, 844, 996, 1025, 1051, 1065, 1130, 1178], "throw": [46, 129, 166, 169, 240, 484, 508, 509, 513, 519, 520, 522, 523, 524, 542, 560, 638, 676, 718, 739, 742, 753, 756, 1168], "notfounderror": 46, "cbda1e98040d084c31ff6e83f04d78dbebf5c1c2": 46, "cluster_clean_cod": [46, 47, 51, 53, 55, 56, 778], "cluster_clean_code_bug": [46, 47, 53, 55, 56, 778], "clean_code_bugs_find_error": [46, 47, 53, 778], "twice": [47, 53, 55, 56, 57, 162, 386, 425, 447, 467, 690, 693, 752, 778, 845, 885, 922, 938, 970, 1015], "crash": [47, 53, 64, 111, 112, 160, 162, 163, 164, 167, 219, 221, 231, 237, 247, 250, 375, 415, 422, 508, 592, 619, 664, 740, 778, 983, 997, 1123], "found": [47, 53, 109, 110, 130, 149, 158, 161, 173, 182, 194, 227, 231, 234, 237, 240, 242, 244, 247, 250, 260, 275, 282, 296, 304, 314, 318, 320, 324, 330, 336, 340, 343, 357, 451, 460, 470, 472, 480, 518, 522, 523, 524, 530, 541, 543, 547, 548, 549, 577, 582, 622, 625, 628, 638, 642, 643, 667, 675, 677, 679, 687, 773, 778, 796, 857, 860, 867, 914, 931, 999, 1002, 1011, 1016, 1022, 1030, 1039, 1069, 1101, 1127, 1130, 1166, 1178], "clean_code_bugs_overwrite_existing_fil": [47, 53, 55, 56, 778], "clean_code_bugs_overwrite_store_content_on_read": [47, 53, 55, 56, 778], "explicitli": [48, 163, 164, 168, 194, 234, 244, 254, 287, 402, 403, 421, 459, 465, 509, 586, 589, 597, 638, 687, 690, 693, 746, 758, 856, 984, 993, 1021, 1031, 1050, 1136, 1144], "solut": [48, 66, 124, 167, 169, 177, 178, 186, 188, 194, 213, 223, 224, 229, 232, 235, 240, 245, 251, 267, 270, 281, 290, 291, 295, 301, 326, 327, 339, 424, 425, 428, 447, 450, 468, 481, 508, 530, 560, 582, 588, 589, 609, 646, 648, 650, 657, 671, 679, 694, 699, 704, 730, 746, 771, 777, 778, 886, 887, 904, 967, 972, 985, 986, 1002, 1027, 1063, 1094, 1106, 1136, 1179], "force_overwrit": 48, "descriptor": [48, 162, 186, 218, 250, 254, 275, 296, 314, 364, 589, 784, 805, 841, 861, 867, 868, 925, 947, 948, 949, 993], "mani": [49, 53, 56, 59, 60, 63, 90, 114, 120, 142, 162, 164, 168, 169, 186, 191, 194, 210, 221, 242, 252, 257, 278, 282, 286, 287, 289, 295, 314, 343, 364, 368, 392, 404, 406, 415, 430, 444, 446, 451, 466, 467, 479, 480, 483, 486, 491, 494, 533, 560, 607, 617, 636, 638, 657, 669, 681, 682, 690, 710, 731, 736, 744, 752, 778, 784, 786, 803, 811, 817, 821, 825, 851, 861, 862, 864, 865, 918, 930, 948, 949, 968, 978, 981, 996, 997, 999, 1009, 1018, 1020, 1022, 1027, 1036, 1046, 1051, 1054, 1057, 1061, 1069, 1073, 1075, 1079, 1128, 1130, 1131, 1132, 1136, 1145, 1163, 1176, 1179], "overwrit": [49, 110, 508, 509, 522, 530, 547, 549, 582, 592, 638, 640, 669, 778, 825, 887, 892, 904, 956, 1071], "present": [49, 62, 142, 159, 165, 169, 173, 177, 182, 195, 250, 296, 304, 313, 320, 476, 588, 821, 825, 860, 931, 942, 961, 1022, 1105, 1145, 1178], "continu": [50, 53, 60, 64, 90, 100, 107, 111, 112, 122, 125, 142, 155, 163, 172, 173, 185, 194, 195, 198, 207, 212, 213, 214, 243, 248, 254, 260, 270, 354, 418, 419, 425, 426, 432, 436, 439, 443, 448, 452, 456, 461, 462, 464, 466, 469, 470, 487, 601, 603, 604, 664, 684, 692, 722, 773, 774, 775, 776, 777, 778, 922, 924, 928, 934, 957, 958, 996, 997, 1002, 1013, 1020, 1027, 1031, 1064, 1067, 1085, 1130, 1145, 1163], "expected_cont": 50, "fill": [50, 164, 165, 177, 199, 250, 251, 296, 406, 682, 686, 731, 741, 796, 821, 825, 891, 948, 1025], "strategi": [50, 234, 440, 930, 1080, 1156], "hurri": [50, 425], "read_fil": 50, "compar": [50, 124, 222, 224, 235, 250, 291, 296, 403, 445, 459, 460, 469, 538, 584, 741, 933, 968, 1065, 1070, 1094, 1098, 1128], "binaryfil": 50, "doesn": [50, 164, 167, 275, 324, 420, 422, 425, 440, 454, 736, 784, 845, 852, 853, 887, 891, 904, 1000, 1011, 1067], "belong": [50, 191, 194, 392, 412, 438, 465, 560, 584, 598, 600, 870, 878, 957, 1038, 1052], "test_write_csv": 50, "test_read_csv": [50, 1120], "ah": [50, 59, 63, 168, 184, 221, 223, 237, 639, 999, 1075, 1139], "altern": [51, 53, 55, 56, 64, 66, 69, 79, 84, 141, 161, 162, 169, 195, 214, 240, 301, 330, 399, 476, 584, 593, 607, 618, 621, 690, 739, 745, 766, 778, 825, 864, 885, 925, 929, 931, 943, 951, 957, 968, 974, 992, 999, 1047, 1067, 1070, 1144, 1148, 1151, 1158, 1168, 1171, 1187, 1188, 1190, 1193], "cluster_clean_code_featur": [51, 53, 55, 56, 778], "clean_code_features_other_index": [51, 53, 778], "clean_code_features_csv": [51, 53, 55, 56, 778], "establish": [53, 72, 202, 214, 278, 290, 291, 312, 316, 354, 464, 825, 983, 1179], "were": [53, 122, 141, 155, 162, 164, 168, 177, 194, 198, 375, 424, 480, 583, 592, 593, 619, 686, 725, 852, 853, 931, 958, 1013, 1021, 1045, 1054, 1073, 1078, 1136, 1142, 1176], "occas": [53, 90, 163, 741], "ourselv": [53, 194, 922], "gather": [53, 169, 201, 290, 291, 312, 313, 316, 342, 458, 460, 1107], "wreak": [53, 111, 112, 440, 664], "havoc": [53, 111, 112, 440, 664], "shoehorn": 53, "violat": [53, 114, 119, 120, 142, 162, 464, 492, 720, 742, 839, 983, 997], "nearli": [53, 194, 200, 442, 975], "solid": [53, 113, 114, 115, 116, 142, 158, 174, 287, 289, 465, 492, 1174, 1175, 1189, 1190, 1192, 1193], "chanc": [53, 162, 164, 199, 444, 464, 780, 825, 950, 1181], "cluster_clean_code_refactor": [53, 55, 56, 778], "clean_code_refactoring_backingstore_interfac": [53, 56, 778], "clean_code_refactoring_backingstore_monolith": [53, 55, 56, 778], "clean_code_refactoring_store_enum_switch": [53, 55, 56, 778], "clean_code_refactoring_pass_store_in_ctor": [53, 56, 778], "now": [54, 62, 122, 161, 162, 163, 164, 165, 166, 168, 169, 177, 181, 190, 200, 210, 227, 234, 240, 244, 254, 262, 282, 286, 307, 343, 344, 357, 420, 433, 448, 453, 478, 484, 491, 504, 509, 531, 532, 539, 598, 622, 625, 631, 635, 643, 686, 737, 742, 757, 758, 783, 803, 825, 833, 835, 841, 857, 860, 922, 929, 930, 931, 957, 958, 966, 1011, 1013, 1018, 1021, 1036, 1039, 1063, 1118, 1128, 1130, 1148, 1157, 1176], "violatin": 54, "respect": [54, 59, 63, 66, 119, 155, 163, 177, 224, 286, 288, 349, 396, 444, 464, 509, 527, 586, 593, 656, 690, 741, 742, 856, 864, 929, 983, 997, 1042], "mainli": [55, 162, 198, 287, 296, 638, 776, 965, 1025], "bugfix": 55, "ongo": [55, 122, 985], "scene": [55, 999, 1042], "pleas": [55, 124, 163, 164, 167, 169, 173, 190, 194, 198, 199, 201, 202, 203, 204, 214, 240, 267, 269, 278, 299, 348, 390, 424, 454, 542, 599, 601, 602, 603, 604, 864, 922, 930, 931, 946, 975, 993, 1001, 1002, 1047, 1149], "wait": [55, 73, 74, 75, 79, 84, 88, 137, 141, 151, 162, 163, 164, 165, 166, 168, 209, 313, 343, 654, 682, 749, 757, 778, 802, 817, 823, 827, 830, 833, 835, 858, 861, 869, 921, 922, 948, 950, 954, 966, 978, 981, 984, 991, 993, 996, 1071, 1139, 1163, 1181, 1189], "unnecessarili": [55, 70, 993], "conflict": [55, 76, 78, 122, 125, 141, 289, 290, 291, 312, 390, 441, 593, 683, 755, 777, 778, 781, 784, 794, 921, 930, 962, 970, 976, 996, 1030, 1159], "rip": [55, 165, 466, 525, 983, 1138], "detail": [55, 85, 159, 164, 167, 172, 176, 177, 189, 195, 209, 220, 221, 223, 224, 231, 237, 247, 251, 252, 254, 258, 280, 291, 330, 337, 341, 357, 464, 469, 492, 529, 539, 541, 589, 741, 803, 885, 929, 931, 985, 1017, 1125, 1165, 1174], "instanc": [55, 57, 108, 111, 112, 132, 169, 210, 218, 222, 231, 234, 235, 242, 244, 249, 252, 254, 257, 272, 275, 282, 296, 314, 324, 330, 336, 353, 368, 482, 487, 495, 506, 508, 509, 510, 522, 523, 524, 527, 540, 653, 664, 671, 676, 724, 727, 786, 791, 794, 992, 993, 1020, 1022, 1036, 1037, 1039, 1042, 1065], "its": [55, 57, 59, 63, 66, 85, 88, 109, 111, 112, 119, 137, 156, 161, 162, 163, 164, 166, 167, 168, 169, 172, 173, 179, 184, 186, 190, 191, 192, 194, 214, 221, 222, 224, 231, 235, 237, 247, 250, 254, 263, 278, 280, 281, 284, 287, 289, 296, 313, 348, 359, 390, 412, 423, 425, 440, 442, 444, 451, 453, 475, 483, 487, 506, 509, 510, 525, 526, 527, 528, 533, 538, 541, 583, 584, 585, 587, 589, 594, 624, 664, 682, 694, 704, 730, 749, 776, 789, 798, 803, 825, 830, 852, 853, 856, 858, 862, 867, 872, 873, 885, 886, 907, 909, 930, 933, 934, 941, 951, 952, 957, 972, 978, 981, 983, 984, 985, 993, 1015, 1020, 1022, 1025, 1030, 1035, 1039, 1045, 1053, 1063, 1065, 1070, 1074, 1080, 1128, 1130, 1149, 1156, 1158, 1176, 1178, 1179, 1181], "replac": [55, 64, 98, 129, 167, 212, 223, 231, 234, 235, 237, 238, 240, 247, 250, 282, 296, 313, 342, 384, 399, 440, 466, 529, 530, 582, 615, 616, 675, 682, 710, 727, 741, 756, 763, 776, 778, 828, 931, 971, 983, 997, 1021], "symptom": [57, 172], "mismatch": [57, 566], "onc": [57, 114, 119, 120, 125, 161, 163, 164, 167, 168, 169, 172, 177, 182, 183, 342, 360, 382, 407, 416, 424, 454, 467, 483, 484, 485, 489, 494, 506, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 539, 541, 599, 617, 618, 672, 713, 724, 734, 752, 762, 764, 766, 767, 768, 769, 776, 786, 789, 821, 922, 931, 973, 996, 997, 1016, 1022, 1023, 1024, 1058, 1079, 1088, 1101, 1132, 1135, 1158], "sync": [57, 142, 163, 234, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336, 440, 444, 825, 916], "imho": [57, 721], "forbidden": [58, 442], "accord": [58, 64, 124, 137, 161, 164, 250, 673, 869, 885, 918, 922, 930, 931], "uncl": [58, 375], "bob": [58, 250, 375, 464], "enum": [58, 223, 224, 327, 399, 414, 452, 456, 461, 462, 466, 469, 684, 722, 764, 766, 775, 777, 778, 784, 786, 794, 983, 1176], "born": [59, 60, 63, 863, 1048], "bound": [59, 60, 63, 64, 240, 244, 275, 287, 302, 441, 451, 456, 461, 462, 566, 594, 596, 598, 616, 695, 778, 863, 867, 923, 984, 987, 1040, 1061, 1084, 1144], "employe": [59, 60, 63, 189, 221, 1039], "year": [59, 60, 63, 161, 162, 163, 164, 168, 173, 194, 234, 240, 282, 286, 464, 583, 667, 668, 670, 671, 674, 675, 676, 677, 678, 679, 681, 728, 778, 1080], "emploi": [59, 60, 63, 163, 173, 198, 425, 825], "configur": [59, 62, 63, 64, 69, 74, 79, 83, 85, 86, 87, 105, 122, 124, 129, 135, 137, 141, 142, 147, 148, 161, 163, 164, 167, 169, 192, 202, 268, 277, 278, 287, 298, 299, 305, 306, 309, 313, 321, 357, 363, 467, 471, 472, 474, 475, 487, 489, 494, 531, 532, 533, 541, 778, 798, 805, 825, 839, 855, 856, 857, 860, 869, 905, 918, 921, 922, 930, 942, 949, 963, 965, 993, 1000, 1001, 1013, 1023, 1093, 1131, 1135, 1144, 1151, 1179], "pattern": [59, 63, 83, 107, 142, 158, 159, 175, 178, 197, 198, 224, 227, 250, 289, 330, 365, 374, 376, 464, 481, 482, 483, 484, 486, 487, 489, 491, 492, 493, 503, 504, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 530, 582, 745, 746, 763, 778, 779, 885, 914, 981, 1028, 1029, 1163, 1183], "led": [59, 63, 73, 74, 75, 79, 92, 126, 127, 128, 133, 134, 142, 180, 202, 278, 343, 366, 531, 778, 784, 922, 930], "hei": [59, 63, 162, 202, 254, 599, 600, 860, 946, 1068, 1136], "reinvent": [59, 63, 222, 271, 1123], "wheel": [59, 63, 125, 146, 158, 827, 862, 957, 1151], "admit": [59, 63, 169], "notori": [59, 63], "fun": [59, 63, 131, 162, 167, 220, 222, 258, 287, 375, 488, 725, 825, 864, 922, 929, 930, 1027, 1039, 1051, 1067, 1122, 1123, 1150, 1157, 1176], "live": [59, 63, 71, 98, 99, 124, 129, 159, 163, 167, 185, 189, 194, 198, 203, 214, 222, 223, 224, 225, 238, 240, 248, 259, 266, 267, 268, 269, 271, 277, 279, 280, 287, 288, 289, 290, 291, 295, 298, 299, 313, 317, 326, 327, 357, 361, 365, 366, 368, 375, 376, 377, 437, 454, 466, 467, 472, 488, 493, 502, 504, 506, 528, 530, 531, 532, 533, 534, 535, 536, 537, 540, 547, 549, 560, 617, 618, 638, 680, 691, 722, 723, 724, 741, 755, 776, 777, 778, 779, 789, 825, 855, 858, 859, 864, 880, 881, 921, 962, 1030, 1047, 1080, 1123, 1149, 1157, 1175, 1176, 1190], "session": [59, 63, 158, 167, 169, 187, 194, 198, 202, 206, 231, 237, 247, 250, 262, 266, 267, 269, 280, 288, 363, 827, 856, 857, 939, 950, 1111, 1123, 1149, 1156, 1186], "simpl": [59, 63, 73, 75, 76, 79, 87, 122, 149, 158, 162, 166, 167, 169, 172, 173, 177, 182, 186, 189, 190, 194, 198, 201, 224, 240, 242, 244, 250, 254, 306, 309, 378, 379, 386, 425, 427, 441, 444, 451, 466, 467, 468, 469, 470, 474, 475, 477, 487, 585, 592, 593, 631, 659, 667, 668, 670, 671, 674, 675, 676, 677, 678, 679, 699, 732, 742, 751, 778, 784, 798, 805, 817, 825, 827, 835, 861, 914, 922, 923, 929, 930, 959, 965, 967, 970, 985, 993, 996, 1000, 1001, 1002, 1007, 1023, 1027, 1047, 1048, 1056, 1075, 1123, 1129, 1131, 1147, 1162, 1163], "thu": [59, 63, 162, 163, 164, 200, 409, 484, 798, 803, 845, 852, 955, 1135, 1181], "techniqu": [59, 63, 70, 71, 72, 444, 454, 540, 664, 925], "usag": [59, 63, 66, 81, 107, 114, 120, 125, 142, 164, 169, 214, 224, 235, 248, 262, 287, 289, 290, 312, 327, 343, 363, 375, 425, 450, 451, 458, 469, 473, 479, 488, 489, 502, 528, 529, 530, 582, 592, 599, 600, 618, 653, 655, 656, 659, 660, 679, 681, 693, 704, 710, 724, 731, 763, 777, 778, 827, 862, 885, 914, 917, 932, 963, 966, 981, 1017, 1022, 1025, 1075, 1117, 1119, 1151, 1158, 1165, 1176], "At": [59, 63, 137, 162, 163, 166, 169, 173, 177, 194, 198, 224, 234, 238, 240, 274, 389, 418, 422, 454, 482, 740, 817, 1018, 1035, 1123], "flow": [59, 63, 163, 194, 199, 201, 202, 203, 204, 208, 213, 214, 229, 232, 245, 256, 358, 359, 360, 362, 398, 418, 426, 432, 436, 439, 443, 452, 454, 456, 461, 462, 684, 722, 731, 775, 777, 778, 996, 1031, 1056, 1058, 1065, 1142, 1177], "event": [59, 63, 64, 87, 132, 136, 165, 186, 222, 231, 235, 237, 247, 250, 278, 290, 291, 460, 710, 754, 761, 765, 778, 793, 794, 802, 827, 828, 840, 841, 842, 843, 846, 858, 862, 921, 925, 950, 962, 965, 981, 984, 985, 989, 993, 1034, 1139, 1148, 1181, 1190, 1192, 1193], "save": [59, 63, 64, 86, 158, 161, 162, 174, 182, 185, 231, 237, 247, 250, 281, 284, 287, 406, 408, 682, 713, 716, 717, 718, 869, 887, 941, 950, 987, 1016, 1020, 1026, 1036, 1069, 1128, 1158, 1176], "schedul": [59, 63, 64, 66, 100, 111, 112, 124, 136, 162, 179, 202, 204, 268, 277, 278, 298, 370, 371, 482, 488, 502, 530, 531, 532, 533, 534, 535, 536, 537, 540, 582, 755, 777, 778, 807, 817, 823, 830, 845, 852, 853, 854, 855, 859, 861, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 899, 900, 901, 902, 903, 905, 921, 933, 934, 935, 936, 937, 944, 950, 952, 960, 962, 967, 976, 978, 979, 983, 987, 1001, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1135, 1171, 1181, 1182, 1192], "overhead": [59, 63, 454, 460, 571, 580, 745, 746], "usual": [59, 63, 85, 109, 124, 162, 163, 169, 172, 177, 182, 192, 194, 254, 288, 304, 320, 380, 420, 421, 447, 460, 464, 470, 472, 477, 482, 496, 504, 510, 539, 584, 600, 641, 695, 730, 731, 745, 754, 757, 776, 784, 796, 798, 803, 813, 819, 821, 825, 839, 841, 845, 861, 863, 867, 886, 922, 923, 930, 951, 965, 983, 984, 999, 1000, 1001, 1002, 1011, 1020, 1021, 1022, 1023, 1027, 1030, 1033, 1034, 1040, 1042, 1044, 1045, 1047, 1050, 1056, 1061, 1122, 1129, 1130, 1136, 1158, 1159, 1165, 1178], "exhibit": [59, 63, 240, 676, 931, 952, 957], "glitch": [59, 63, 164, 169, 930, 931], "caus": [59, 63, 162, 165, 177, 231, 237, 247, 250, 254, 931, 978, 983, 1145], "hiccup": [59, 63, 169, 280, 1001], "twist": [59, 63, 809], "amazingli": [59, 63, 869], "stori": [60, 162, 163, 164, 168, 169, 173, 190, 191, 223, 286, 435, 568, 586, 600, 763, 800, 803, 826, 864, 925, 942], "pointlessli": 60, "light": [60, 85, 172, 864, 1046, 1156], "textual": [60, 192, 194, 539], "focus": [60, 169], "beauti": [60, 183, 197, 198, 201, 219, 221, 222, 229, 240, 244, 245, 248, 254, 271, 295, 357, 430, 560, 618, 967, 1024, 1073, 1080, 1123], "love": [60, 288, 1118], "creativ": [60, 161, 239], "edit": [60, 165, 167, 168, 177, 209, 214, 250, 278, 378, 538, 798, 825, 930, 1078, 1149, 1189], "debounc": 60, "toolkit": [60, 1046], "termin": [60, 129, 161, 163, 167, 181, 192, 214, 260, 262, 278, 281, 284, 287, 289, 291, 379, 382, 386, 389, 392, 399, 411, 417, 440, 460, 466, 478, 482, 508, 509, 541, 560, 589, 710, 716, 743, 749, 841, 860, 863, 867, 868, 869, 885, 907, 917, 918, 951, 969, 973, 978, 983, 995, 996, 997, 1052, 1054, 1058, 1073, 1085, 1102, 1130, 1136, 1139, 1187], "async": [60, 64, 162, 194, 198, 231, 237, 247, 248, 250, 313, 317, 710, 975, 998, 1123, 1191], "perfectli": [60, 184, 240], "simul": [60, 136, 194, 363, 364, 541], "cannot": [60, 64, 111, 112, 119, 120, 158, 162, 163, 164, 169, 173, 184, 185, 191, 192, 194, 201, 221, 254, 281, 284, 318, 343, 420, 421, 424, 425, 444, 446, 448, 451, 454, 472, 475, 487, 510, 538, 577, 586, 589, 591, 594, 595, 618, 653, 654, 656, 657, 659, 660, 664, 683, 686, 689, 695, 721, 731, 732, 736, 742, 744, 754, 756, 763, 821, 825, 830, 845, 862, 867, 870, 881, 896, 904, 940, 984, 993, 1015, 1016, 1017, 1021, 1023, 1035, 1040, 1047, 1055, 1056, 1062, 1063, 1073, 1142, 1144, 1145, 1156, 1181], "cute": [60, 1129], "submiss": 61, "submit": [61, 110, 819], "linuxtag": [61, 201, 317, 927], "pure": [62, 70, 132, 169, 357, 420, 493, 656, 682, 721, 746, 864, 1054, 1176], "local": [62, 162, 163, 165, 168, 177, 190, 194, 195, 202, 203, 207, 223, 224, 238, 240, 241, 247, 250, 253, 254, 275, 278, 290, 292, 301, 304, 312, 313, 316, 317, 320, 322, 323, 328, 329, 330, 334, 335, 336, 338, 339, 343, 357, 390, 394, 418, 420, 437, 475, 479, 488, 502, 504, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 582, 589, 607, 690, 693, 695, 724, 778, 798, 825, 830, 852, 853, 857, 907, 921, 929, 931, 932, 933, 934, 940, 942, 948, 959, 967, 1009, 1011, 1018, 1021, 1066, 1151, 1178, 1179, 1192], "easili": [62, 142, 156, 163, 169, 343, 399, 418, 451, 464, 483, 656, 732, 807, 823, 951, 981, 987, 1017, 1030, 1062, 1176], "guess": [62, 244, 254, 280, 444, 449, 699, 938, 993], "autotool": [62, 173], "portabl": [62, 186, 392, 454, 749, 967, 974, 993, 997, 1054, 1132], "archiv": [62, 104, 105, 124, 173, 174, 202, 204, 268, 277, 278, 298, 460, 473, 479, 488, 502, 530, 531, 532, 533, 534, 535, 536, 537, 540, 582, 778, 855, 885, 921, 1001, 1004, 1006, 1007, 1009, 1010, 1011, 1016, 1020, 1151], "m4": 62, "macro": [62, 240, 305, 321, 384, 395, 398, 410, 419, 426, 432, 436, 439, 443, 446, 452, 456, 461, 462, 470, 471, 475, 476, 479, 684, 722, 728, 775, 777, 778, 794, 813, 827, 867, 945, 951, 957, 967, 1001, 1073, 1163, 1168, 1173, 1177], "stock": [62, 234, 235, 1079, 1080], "sudo": [62, 102, 124, 132, 158, 165, 167, 169, 177, 191, 202, 240, 268, 277, 278, 287, 289, 298, 299, 330, 470, 477, 554, 778, 855, 880, 882, 921, 922, 931, 985, 1013, 1158], "pwd": [62, 110, 122, 190, 267, 269, 330, 357, 362, 473, 539, 541, 602, 800, 803, 852, 853, 862, 907, 909, 922, 1000, 1001, 1014, 1016, 1156], "pub": [62, 165, 202, 798, 938, 1117], "lib": [62, 124, 158, 167, 173, 201, 221, 224, 234, 250, 257, 260, 275, 282, 289, 292, 296, 318, 324, 330, 336, 472, 538, 803, 815, 821, 825, 916, 931, 996, 1000, 1002, 1011, 1013, 1151, 1158], "remot": [62, 103, 105, 165, 167, 169, 177, 214, 223, 270, 343, 481, 502, 516, 530, 582, 778, 798, 825, 826, 830, 851, 854, 921, 930, 932, 935, 936, 937, 940, 948, 1011, 1023, 1179, 1180, 1187], "v0": 62, "v1": [62, 280, 489, 504, 686], "v2": [62, 64, 169, 189, 280, 489, 504, 686], "autotooleri": 62, "autogen": 62, "step": [62, 64, 161, 162, 168, 169, 173, 177, 198, 237, 240, 241, 267, 269, 282, 286, 291, 314, 380, 382, 384, 400, 424, 466, 469, 486, 529, 539, 577, 602, 607, 740, 825, 852, 853, 999, 1007, 1144, 1145, 1157], "noconfigur": 62, "suppress": [62, 168, 214, 458, 483, 592, 741, 904, 1151], "absorb": [62, 155, 200, 463, 465, 693, 1080], "Be": [62, 98, 113, 115, 116, 240, 287, 289, 327, 343, 397, 430, 539, 560, 585, 590, 652, 679, 691, 693, 722, 724, 727, 738, 747, 755, 775, 777, 778, 851, 996, 1011], "awar": [62, 343, 441, 474, 985], "enabl": [62, 161, 167, 194, 202, 223, 231, 237, 247, 250, 278, 288, 403, 454, 480, 487, 509, 565, 823, 825, 830, 877, 922, 926, 930, 942, 985, 1009, 1013, 1023, 1181], "mkdir": [62, 101, 124, 148, 163, 168, 172, 190, 191, 267, 269, 278, 357, 362, 539, 541, 542, 602, 776, 778, 825, 852, 853, 854, 855, 889, 890, 891, 892, 893, 896, 897, 899, 905, 921, 938, 942, 992, 1011, 1013, 1014, 1020], "dist": [62, 146, 745, 1078], "406332": 62, "apr": [62, 64, 221, 231, 260, 350, 1000, 1001, 1014], "transfer": [62, 162, 224, 227, 304, 320, 343, 460, 542, 592, 693, 796, 825, 838, 839, 851, 852, 853, 912, 932, 938, 941, 1139, 1176, 1178], "scp": [62, 98, 102, 124, 148, 173, 202, 268, 277, 278, 298, 299, 541, 542, 778, 798, 852, 853, 921, 932, 933, 934, 935, 937, 942, 959, 1009, 1010, 1011], "192": [62, 195, 202, 234, 237, 242, 244, 247, 250, 254, 257, 260, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 363, 798, 860, 942, 1193], "168": [62, 195, 202, 205, 212, 221, 234, 237, 242, 244, 247, 250, 254, 257, 260, 263, 272, 275, 292, 296, 302, 314, 318, 324, 330, 336, 340, 363, 798, 860, 942, 1011, 1193], "82": [62, 172, 181, 195, 205, 210, 212, 218, 221, 227, 234, 237, 242, 244, 250, 254, 257, 260, 263, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 352, 1080, 1127, 1128], "prerequisit": [62, 105, 240, 798, 929, 1050], "apt": [62, 132, 173, 177, 191, 240, 287, 289, 554, 805, 924, 929, 931, 942, 1001, 1013, 1158, 1163], "python3": [62, 64, 87, 146, 158, 173, 182, 195, 201, 221, 231, 237, 247, 250, 254, 330, 977, 987, 1013, 1023, 1050, 1144, 1145, 1151, 1158], "along": [62, 163, 169, 222, 235, 375, 424, 494, 776, 870, 978, 999, 1030], "omit": [62, 64, 168, 177, 182, 231, 237, 247, 250, 251, 254, 324, 340, 361, 405, 442, 454, 466, 486, 660, 682, 729, 803, 819, 868, 929, 930, 931, 938, 954, 955, 959, 970, 1020, 1023, 1075, 1156], "bind": [62, 142, 163, 265, 287, 289, 317, 327, 402, 409, 640, 682, 695, 722, 746, 747, 749, 755, 777, 778, 925, 999, 1031, 1035, 1054, 1065, 1142, 1176, 1191, 1193], "cxx": [62, 159, 467, 482, 483, 484, 485, 486, 487, 489, 491, 494, 503, 504, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 538, 540, 543, 544, 545, 546, 548, 550, 551, 552, 553, 555, 556, 557, 558, 559, 776, 1000, 1001], "xf": [62, 173, 851, 1013], "ld_library_path": [62, 472, 1016], "gpiod": [62, 64, 805], "py3": [62, 146, 158, 1078], "aarch64": [62, 173, 1011], "multi": [64, 1129, 1136], "chmod": [64, 169, 357, 852, 853, 870, 875, 877, 879, 882, 934, 938], "snippet": [64, 114, 117, 182, 201, 323, 342, 647, 930, 1023], "subdirectori": [64, 142, 168, 177, 189, 191, 214, 305, 321, 467, 471, 472, 525, 539, 778, 800, 851, 852, 853, 865, 875, 877, 894, 909, 913, 930, 931, 1011, 1111, 1163], "stuff": [64, 71, 79, 101, 124, 133, 161, 164, 168, 177, 182, 194, 198, 201, 214, 223, 224, 245, 259, 278, 280, 301, 343, 361, 460, 466, 568, 615, 776, 778, 784, 793, 825, 855, 885, 893, 899, 905, 921, 929, 959, 1020, 1022, 1078, 1118, 1123, 1125, 1156], "strace": [64, 98, 162, 164, 375, 783, 788, 841, 948, 954, 967, 983, 992, 1189], "pid": [64, 162, 164, 165, 459, 844, 857, 861, 863, 967, 983, 986, 992, 996, 997], "4677": 64, "11hello": 64, "clock_gettime64": 64, "clock_monoton": [64, 757, 949, 983], "tv_sec": [64, 983], "164646": 64, "tv_nsec": [64, 983], "833862215": 64, "_newselect": 64, "tv_usec": 64, "500000": [64, 924, 930, 1128], "unfinish": [64, 164], "4679": 64, "resum": [64, 712, 713, 716, 717, 718, 821, 983], "timeout": [64, 752, 754, 756, 948, 1151], "mi": [64, 242], "845864201": 64, "4678": [64, 237], "fd": [64, 172, 234, 278, 542, 784, 929, 943, 947, 948, 949, 951, 955, 956, 957, 958, 961, 963, 966, 989, 992, 996, 1080], "fourth": 64, "involv": [64, 79, 162, 165, 169, 172, 224, 278, 290, 291, 312, 363, 440, 448, 454, 460, 525, 592, 594, 683, 796, 825, 922, 1000, 1009, 1011], "occasion": [64, 150, 177, 194, 223, 240, 450, 464, 474, 676, 825, 869, 1047, 1061, 1137], "due": [64, 169, 194, 482, 746, 1151], "weird": [64, 278, 323, 331, 450, 720, 758, 784, 809, 978, 996], "gil": [64, 194, 198, 290, 291, 312, 313, 316, 1123], "jitter": [64, 985, 987], "heavi": [64, 186, 194, 492, 931, 1047, 1181], "usr": [64, 162, 163, 167, 173, 182, 185, 190, 192, 214, 221, 222, 231, 234, 237, 247, 250, 254, 257, 260, 275, 280, 282, 292, 296, 318, 324, 330, 336, 354, 357, 467, 469, 470, 472, 473, 477, 699, 732, 742, 776, 798, 825, 851, 857, 869, 881, 913, 916, 929, 931, 977, 987, 996, 999, 1000, 1001, 1002, 1011, 1014, 1016, 1023, 1026, 1050, 1111, 1126, 1139, 1151, 1158, 1165], "env": [64, 158, 163, 185, 280, 977, 987, 1050, 1077, 1111, 1126, 1139], "hello_left": 64, "hello_right": 64, "rjust": [64, 182, 250, 296], "hello_middl": 64, "center": [64, 185, 227, 242, 244, 250, 254, 275, 282, 296, 314, 318, 324, 330, 336, 351, 458, 538], "t1": [64, 181, 244, 254, 275, 279, 296, 318, 330, 968], "t2": [64, 181, 237, 244, 254, 275, 318, 330, 968], "t3": 64, "await": [64, 313], "epoll_wait": 64, "201": [64, 165, 195, 212, 221, 234, 237, 242, 244, 247, 250, 254, 257, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340], "multiplex": [64, 930, 949, 983, 1193], "create_task": 64, "sysf": [64, 124, 125, 126, 128, 134, 135, 159, 209, 278, 344, 345, 541, 778, 781, 782, 827, 921, 922, 929, 931, 962, 963, 966, 1180, 1187], "unmaintain": [64, 268, 277, 278, 321, 376, 1001, 1065, 1173], "immun": [64, 599, 757], "hotplug": [64, 929], "reset": [64, 161, 489, 491, 741, 742, 743, 776, 1145, 1192], "pullup": 64, "pulldown": 64, "rpi": [64, 144, 173, 343, 825, 826, 929], "hope": [64, 162, 164, 167, 169, 173], "major": [64, 167, 180, 231, 237, 247, 250, 287, 289, 464, 468, 599, 784, 791, 856, 984, 1048, 1054, 1069], "releas": [64, 165, 191, 305, 321, 330, 425, 471, 742, 753, 754, 756, 778, 784, 798, 922, 929, 972, 977, 1013, 1016, 1048, 1157, 1188], "ton": [64, 740, 864, 926, 951, 983, 987, 1176], "bartosz": 64, "golaszewski": 64, "gpiochip0": [64, 805, 965], "ioctl": [64, 278, 446, 791, 793, 819, 827, 828, 833, 839, 925, 929], "crw": [64, 789, 856, 907, 929, 930, 931], "254": [64, 183, 234, 237, 242, 244, 247, 254, 257, 275, 282, 292, 296, 302, 318, 330, 336, 340], "request": [64, 94, 99, 125, 141, 163, 164, 167, 224, 226, 251, 257, 313, 330, 465, 484, 506, 520, 689, 690, 693, 694, 783, 827, 951, 966, 1156], "request_lin": 64, "consum": [64, 142, 164, 167, 184, 234, 313, 458, 475, 504, 754, 756, 850, 858, 865, 972, 973, 984, 989, 991, 993, 996, 1023, 1045, 1054, 1080, 1135, 1181], "mytest": 64, "config": [64, 98, 129, 130, 151, 152, 158, 163, 165, 167, 173, 181, 275, 292, 296, 361, 368, 377, 541, 742, 778, 798, 826, 907, 929, 930, 931, 938, 1013, 1023, 1151], "lineset": 64, "set_valu": [64, 756], "all_io": 64, "transform": [64, 67, 182, 197, 198, 201, 203, 213, 218, 219, 221, 222, 229, 240, 242, 245, 248, 271, 278, 280, 289, 295, 313, 326, 342, 454, 545, 546, 558, 560, 613, 667, 668, 669, 670, 671, 672, 674, 675, 676, 677, 678, 679, 710, 734, 778, 1009, 1029, 1073, 1106, 1123], "ntime": [64, 1033], "task": [64, 78, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 141, 177, 219, 232, 245, 259, 262, 265, 295, 301, 361, 364, 366, 367, 370, 371, 372, 375, 778, 852, 853, 870, 912, 921, 929, 932, 947, 962, 968, 981, 982, 984, 985, 1123, 1156], "interv": [64, 90, 129, 201, 231, 237, 238, 247, 250, 254, 275, 313, 361, 526, 528, 541, 542, 682, 756, 757, 949, 959, 983, 987], "none": [64, 137, 146, 158, 161, 162, 167, 172, 181, 183, 195, 205, 212, 213, 222, 227, 228, 231, 234, 237, 243, 244, 247, 250, 254, 257, 263, 272, 275, 279, 280, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 352, 444, 445, 466, 469, 589, 675, 677, 948, 965, 993, 1020, 1023, 1045, 1071, 1078, 1148, 1163], "itertool": [64, 259, 261, 313, 1027], "cram": [64, 155, 192, 793, 983, 1020, 1136], "goe": [64, 66, 86, 122, 132, 165, 167, 182, 287, 454, 489, 554, 657, 677, 686, 736, 789, 825, 867, 868, 954, 981, 987, 997, 1000, 1007, 1050, 1053, 1073], "stuff_raw": 64, "mod": [64, 250, 275, 295, 803], "sidewai": [64, 198, 201, 256, 370, 371, 1028, 1029], "numpi": [64, 194, 198, 213, 232, 238, 245, 280, 286, 314, 316, 319, 340, 466, 1047, 1122, 1126, 1129, 1137, 1141, 1151, 1158], "transpos": [64, 885], "col": 64, "tolist": 64, "outsid": [64, 250, 493, 506, 586, 594, 599, 741, 742, 815, 886, 968, 984, 1023], "instanti": [64, 133, 221, 361, 484, 495, 509, 510, 523, 524, 525, 528, 610, 639, 657, 678, 704, 710, 732, 745, 746, 1035, 1036, 1126], "coro": [64, 710, 712, 713, 715, 716, 717, 718], "stuff_raw2": 64, "05": [64, 98, 124, 165, 172, 177, 221, 256, 279, 286, 297, 306, 309, 356, 374, 473, 1127], "runtimeerror": [64, 185, 221, 275, 342, 1020, 1022], "reus": [64, 122, 177, 183, 1015, 1065], "alreadi": [64, 81, 124, 133, 162, 163, 165, 173, 184, 186, 194, 198, 254, 281, 284, 437, 448, 454, 486, 506, 508, 519, 522, 541, 558, 638, 778, 784, 798, 805, 813, 823, 825, 828, 845, 921, 929, 930, 931, 938, 951, 952, 954, 959, 960, 962, 979, 1014, 1020, 1047, 1073, 1151, 1156, 1158, 1165], "bare": [64, 79, 81, 88, 90, 109, 144, 162, 375, 922, 930], "create_coro": 64, "ctor": [64, 189, 198, 247, 296, 329, 538, 560, 568, 585, 588, 589, 592, 602, 604, 639, 662, 686, 687, 689, 693, 694, 719, 727, 742, 758, 844], "nest": [64, 158, 222, 235, 244, 254, 261, 265, 282, 292, 388, 417, 418, 444, 704, 756, 772, 830, 1020, 1063], "_blink": 64, "coro_cr": 64, "creator": [64, 156, 173], "create_factory_for_blink": 64, "blinkfunc": 64, "blink_func": 64, "stuff_decorator_stage1": 64, "stage1": 64, "stararg": [64, 1021, 1024, 1045], "func": [64, 221, 231, 237, 247, 250, 281, 295, 544, 613, 682, 697, 704, 745, 1021, 1025], "becom": [64, 69, 79, 90, 93, 119, 120, 132, 137, 141, 162, 164, 190, 202, 281, 284, 304, 306, 309, 320, 403, 433, 435, 442, 445, 466, 482, 486, 525, 686, 741, 742, 743, 825, 862, 881, 914, 930, 931, 938, 981, 984, 985, 1020, 1026, 1056, 1157, 1163, 1178, 1179], "obsolet": [64, 194, 1047], "prog": [64, 235, 342], "demo": [64, 98, 99, 122, 124, 132, 142, 162, 185, 189, 194, 197, 199, 202, 203, 206, 214, 221, 229, 232, 235, 238, 240, 245, 251, 268, 271, 274, 277, 278, 298, 299, 357, 375, 467, 468, 472, 473, 477, 480, 528, 536, 666, 743, 778, 855, 858, 859, 880, 881, 921, 950, 992, 1001, 1047, 1129, 1162, 1182, 1186], "opposit": [64, 166, 418, 931, 984, 1136], "futur": [64, 124, 140, 169, 234, 254, 266, 267, 269, 278, 326, 348, 370, 371, 442, 506, 676, 710, 752, 754, 755, 777, 778, 835, 1176], "steig": [65, 170], "normalweg": 65, "w\u00e4r": 65, "umst\u00e4nden": [65, 1171, 1175, 1190], "renat": 65, "beschreibung": [65, 206, 208, 216, 219, 222, 223, 225, 241, 253, 913], "bergfex": 65, "reden": 65, "sie": [65, 170, 176, 181, 185, 242, 247, 314, 352, 358, 375, 847, 912, 1170, 1172, 1173, 1174, 1180, 1190, 1192, 1193, 1194], "tagen": [65, 1180], "wir": [65, 180, 185, 189, 195, 197, 205, 206, 211, 225, 244, 250, 257, 310, 375, 643, 1171, 1186, 1187], "w\u00fcrden": 65, "denk": [65, 170, 226, 1190], "beiden": [65, 181, 195, 242, 250, 257], "h\u00fctten": [65, 171], "schlafen": 65, "hochk\u00f6nig": 66, "cite": [66, 169, 183, 194, 316], "complain": [66, 164, 173, 177, 191, 404, 577, 592, 593, 800, 828, 938], "subrepo": 66, "whole": [66, 241, 253, 254, 256, 259, 262, 271, 274, 313, 342, 466, 695, 704, 746, 800, 803, 825, 870, 952, 1021, 1092, 1179], "subtitl": 66, "fight": [66, 864], "against": [66, 164, 173, 214, 222, 234, 235, 424, 466, 470, 474, 525, 541, 757, 798, 800, 805, 809, 817, 860, 957, 1002, 1007, 1017, 1031, 1089, 1156, 1181], "fake": [66, 929], "simplest": [66, 200, 262, 467, 484, 617, 624, 731, 752, 830, 860, 914, 978, 1011, 1049, 1054, 1156, 1164], "unprofession": [66, 166], "populist": 66, "gtest_discover_test": 66, "robust": 66, "sentenc": 66, "implicitli": [66, 218, 223, 234, 431, 481, 589, 597, 687, 695, 788, 955, 1020, 1052, 1136], "gtest_add_test": 66, "scan": [66, 231, 254, 257, 324, 929, 931], "primit": [66, 162, 206, 207, 287, 1029, 1176, 1186], "sort": [66, 86, 107, 109, 149, 162, 189, 195, 203, 207, 222, 224, 234, 235, 240, 242, 244, 245, 250, 258, 272, 275, 282, 287, 296, 302, 324, 330, 340, 454, 455, 458, 459, 469, 560, 618, 636, 646, 650, 679, 720, 724, 732, 745, 754, 756, 778, 865, 869, 907, 918, 931, 1022, 1070, 1071, 1125, 1151], "port": [66, 132, 158, 159, 164, 169, 174, 234, 268, 277, 298, 299, 313, 343, 375, 778, 858, 864, 912, 921, 932, 937, 941, 959, 1080, 1135, 1139, 1151, 1180, 1187], "trap": [66, 163, 224, 437, 442, 460, 588, 1175, 1177], "hehe": [66, 194, 201], "html_sidebar": 66, "rtd": [66, 159], "linkcheck": 66, "admonit": 66, "matrix": [66, 183, 185, 286, 364, 366, 455], "thoma": [66, 156], "cokela": 66, "ablog": 66, "couldn": [66, 169, 173, 198, 201, 340, 1061], "figur": [66, 124, 148, 154, 159, 167, 168, 183, 238, 1019], "piec": [66, 79, 155, 163, 444, 560, 612, 930, 961], "especi": [66, 87, 93, 122, 132, 163, 167, 186, 194, 278, 357, 375, 377, 403, 414, 444, 464, 686, 800, 931], "feed": [66, 85, 159, 1128], "blog_baseurl": 66, "nicer": [66, 985], "pour": [66, 482, 851], "tag": [66, 165, 167, 170, 171, 195, 211, 213, 255, 469, 477, 798, 1013, 1016, 1188], "resolv": [67, 78, 122, 173, 177, 231, 234, 237, 240, 247, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336, 421, 447, 596, 942, 999, 1002, 1127, 1128], "buildenviron": 67, "resolve_refer": 67, "builder": [67, 234, 1080], "get_and_resolve_doctre": 67, "apply_post_transform": 67, "addnod": 67, "docstr": [67, 158, 218, 221, 231, 237, 243, 255, 258, 261, 283, 315, 337, 357, 1051], "emit": [67, 85, 509, 510, 867], "doctre": 67, "increasingli": 69, "whose": [69, 173, 231, 237, 247, 250, 286, 296, 370, 371, 504, 574, 677, 678, 922, 1023, 1156, 1163], "mainten": [69, 399, 425, 444, 1016], "easier": [69, 81, 86, 93, 183, 224, 466, 492, 597, 681, 825, 1176], "never": [69, 111, 112, 162, 163, 164, 169, 182, 244, 250, 254, 296, 314, 403, 424, 440, 451, 454, 464, 482, 504, 583, 664, 742, 763, 764, 766, 768, 864, 922, 945, 970, 1000], "simpler": [69, 173, 224, 288, 291, 382, 441, 475, 621, 821, 825, 930, 942], "wors": [69, 150, 165, 250, 450, 466, 704, 947, 1159], "makefil": [69, 98, 224, 267, 269, 467, 478, 794, 798, 826, 827, 1004, 1007, 1009, 1016, 1017], "everytbodi": 70, "runtim": [70, 162, 173, 195, 199, 223, 247, 250, 330, 379, 400, 448, 458, 459, 472, 477, 508, 509, 522, 536, 571, 580, 620, 638, 639, 682, 724, 731, 745, 746, 968, 999, 1035, 1053, 1065, 1129, 1130], "dispatch": [70, 313, 330, 571, 580, 656, 659, 660, 762, 763, 764, 766, 777, 778], "hell": [70, 214, 248, 450, 483, 696, 727, 749, 815, 850, 975, 1136], "destructor": [70, 71, 98, 107, 132, 142, 224, 240, 261, 287, 289, 327, 359, 360, 488, 502, 530, 540, 554, 560, 569, 575, 582, 583, 584, 585, 590, 592, 607, 655, 656, 667, 668, 669, 670, 671, 672, 674, 675, 676, 677, 678, 679, 691, 695, 722, 738, 747, 753, 755, 758, 763, 775, 777, 778, 786, 817, 830, 842, 1168], "opportun": [70, 169, 172, 182, 194, 213, 454, 673, 1036, 1179], "shoot": [70, 887], "oneself": [70, 1181], "encapsul": [71, 74, 222, 235, 240, 287, 289, 313, 343, 464, 484, 488, 502, 528, 530, 531, 532, 533, 534, 535, 536, 537, 540, 547, 549, 560, 582, 583, 605, 608, 611, 627, 633, 637, 646, 649, 650, 655, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 682, 691, 722, 738, 747, 755, 763, 775, 777, 778, 794, 827, 993, 1048, 1177], "hide": [71, 223, 235, 291, 1048], "fanci": [71, 1068, 1129, 1149], "whatnot": [71, 238, 754, 825, 922, 930, 948, 978], "boost": [72, 240, 477, 480, 560, 710, 986, 1194], "feel": [72, 162, 164, 173, 194, 577, 674, 676, 677, 682, 967, 985, 1047], "cluster_ecpropos": [73, 74, 75, 88, 778], "cluster_ecproposal_ec1": [73, 74, 75, 88, 778], "cluster_ecproposal_ec1_linux": [73, 74, 75, 778], "cluster_ecproposal_ec1_cxx": [73, 74, 75, 88, 778], "cluster_ecproposal_ec1_mt": [73, 74, 75, 88, 778], "cluster_ecproposal_ec2": [73, 75, 778], "cluster_ecproposal_ec2_python": [73, 75, 778], "ecproposal_ec1_git": [73, 74, 75, 778], "ecproposal_ec1_linux_exercise_sensor": [73, 74, 75, 778], "ex": [73, 74, 75, 79, 88, 150, 222, 235, 554, 571, 732, 778, 870, 885, 1158], "temperatur": [73, 74, 75, 79, 83, 92, 95, 98, 114, 119, 120, 124, 125, 126, 127, 132, 133, 134, 142, 198, 231, 278, 313, 326, 327, 363, 366, 381, 383, 385, 483, 489, 494, 515, 529, 530, 531, 532, 533, 534, 535, 536, 540, 541, 542, 553, 571, 582, 660, 692, 762, 764, 766, 768, 778, 825, 921, 928, 960, 962, 979, 1035, 1111, 1126, 1127, 1128, 1129], "ecproposal_ec1_linux_dev_mgmt": [73, 74, 75, 778], "ecproposal_ec1_cxx_ifac": [73, 74, 75, 778], "ecproposal_ec1_cxx_build": [73, 74, 75, 88, 778], "ecproposal_ec1_linux_exercise_avg_sensor": [73, 74, 75, 778], "averag": [73, 74, 75, 79, 85, 86, 198, 234, 238, 254, 289, 313, 487, 503, 533, 540, 778, 987, 1080], "ecproposal_ec1_cxx_unittest": [73, 74, 75, 778], "ecproposal_ec1_linux_bas": [73, 74, 75, 778], "ecproposal_ec1_linux_gpio": [73, 74, 75, 778], "ecproposal_ec1_linux_exercise_avg_sensor_parallel": [73, 74, 75, 778], "ecproposal_ec1_mt_exercise_mt_race_fix": [73, 74, 75, 88, 778], "avoid": [73, 74, 75, 79, 88, 162, 169, 177, 254, 390, 425, 503, 538, 540, 550, 584, 588, 639, 778, 823, 914, 930, 1177], "ecproposal_ec1_mt_wait": [73, 74, 75, 88, 778], "ecproposal_ec1_linux_exercise_led_displai": [73, 74, 75, 778], "displai": [73, 74, 75, 79, 113, 115, 116, 125, 134, 142, 167, 231, 237, 247, 250, 275, 278, 280, 282, 287, 292, 296, 318, 324, 330, 336, 366, 458, 531, 778, 860, 907, 916, 929, 983, 1158], "ecproposal_ec1_cxx_oo_bas": [73, 74, 75, 778], "ecproposal_ec1_mt_exercise_mt_rac": [73, 74, 75, 88, 778], "ecproposal_ec1_mt_lock": [73, 74, 75, 88, 778], "semaphor": [73, 74, 75, 77, 79, 88, 90, 157, 186, 187, 209, 231, 237, 247, 250, 375, 754, 778, 817, 972, 1181, 1191], "ecproposal_ec2_python_exercise_sensor": [73, 75, 778], "ecproposal_ec2_python_bas": [73, 75, 778], "ecproposal_ec2_python_exercise_avg_displai": [73, 75, 778], "ecproposal_ec2_python_web_sensor": [73, 75, 778], "ecproposal_ec2_python_flask": [73, 75, 778], "qualiti": [74, 169, 223, 286, 930, 1150], "assur": 74, "characterist": 74, "polymorph": [75, 107, 124, 125, 140, 221, 222, 235, 287, 289, 291, 306, 309, 466, 488, 502, 530, 582, 655, 656, 659, 660, 679, 740, 745, 762, 763, 764, 777, 778, 1176, 1179], "concurr": [75, 194, 198, 248, 317, 732, 815, 1031, 1123], "increment": [76, 180, 223, 237, 240, 263, 286, 382, 386, 390, 410, 419, 426, 430, 432, 436, 439, 443, 452, 456, 461, 462, 560, 577, 684, 722, 775, 777, 778, 857, 969, 970, 971, 992, 993, 1031], "lossi": 76, "access": [77, 79, 89, 111, 112, 114, 120, 129, 159, 163, 164, 165, 167, 169, 182, 192, 202, 209, 221, 231, 234, 237, 240, 247, 250, 257, 260, 275, 278, 282, 292, 296, 306, 318, 323, 324, 330, 336, 343, 357, 360, 362, 394, 433, 454, 455, 493, 509, 534, 535, 536, 537, 560, 583, 595, 597, 600, 601, 603, 604, 618, 643, 657, 664, 667, 670, 671, 674, 675, 676, 677, 678, 679, 693, 710, 725, 729, 741, 778, 783, 793, 796, 802, 813, 821, 825, 827, 843, 858, 861, 870, 872, 873, 896, 921, 931, 940, 941, 947, 951, 955, 957, 961, 965, 969, 983, 984, 992, 997, 1018, 1023, 1030, 1031, 1034, 1053, 1060, 1062, 1075, 1091, 1127, 1144, 1158, 1181], "flavor": [77, 88, 162, 467, 731, 736], "stash": 78, "suffic": [78, 169, 392, 442], "purpos": [78, 79, 81, 129, 140, 155, 163, 167, 173, 194, 213, 231, 237, 247, 250, 262, 275, 360, 388, 466, 478, 585, 617, 657, 746, 825, 858, 867, 930, 952, 957, 978, 999, 1017, 1047, 1128, 1157, 1180, 1187], "unifi": [79, 137, 201, 610], "intention": [79, 223, 296, 697], "power": [79, 90, 161, 163, 178, 183, 223, 240, 358, 359, 360, 378, 390, 391, 433, 442, 825, 835, 842, 856, 922, 926, 929, 930, 931, 950, 965, 983, 987, 1024, 1042, 1046, 1048, 1054, 1059, 1071, 1146], "being": [79, 82, 125, 150, 162, 165, 166, 172, 186, 194, 200, 221, 250, 254, 313, 327, 357, 403, 430, 447, 483, 486, 571, 595, 638, 740, 742, 746, 748, 754, 776, 807, 821, 825, 860, 942, 957, 983, 1030, 1037, 1047, 1050, 1127, 1165, 1168, 1181], "address": [79, 100, 107, 111, 112, 124, 125, 162, 164, 165, 166, 169, 202, 209, 214, 221, 223, 224, 240, 242, 268, 277, 278, 289, 298, 299, 340, 354, 359, 360, 368, 421, 423, 432, 436, 439, 442, 443, 451, 452, 456, 461, 462, 482, 488, 493, 496, 502, 504, 506, 511, 530, 531, 532, 533, 534, 535, 536, 537, 540, 541, 582, 592, 597, 684, 694, 695, 722, 736, 755, 775, 777, 778, 805, 809, 821, 823, 852, 853, 854, 855, 858, 859, 861, 865, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 899, 900, 901, 902, 903, 905, 921, 923, 925, 930, 931, 933, 934, 935, 936, 937, 942, 944, 948, 950, 952, 959, 960, 962, 967, 975, 976, 978, 979, 982, 984, 992, 999, 1001, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1016, 1031, 1034, 1127, 1128, 1147, 1156], "crucial": [79, 162, 186, 457, 619], "mmu": [79, 162, 796, 839, 862, 983], "sophist": [79, 231, 483, 504, 541, 678], "permiss": [79, 98, 101, 102, 103, 124, 197, 198, 202, 204, 214, 221, 237, 257, 268, 277, 292, 295, 298, 313, 343, 352, 357, 358, 359, 360, 362, 530, 582, 668, 755, 776, 777, 778, 784, 825, 852, 853, 855, 858, 859, 862, 868, 871, 875, 876, 877, 878, 879, 881, 882, 883, 887, 899, 902, 904, 905, 907, 921, 922, 932, 935, 937, 938, 941, 942, 947, 950, 951, 952, 955, 957, 958, 960, 962, 976, 979, 982, 984, 985, 997, 1022, 1123, 1151, 1158, 1182, 1191], "nativ": [79, 98, 105, 124, 161, 167, 169, 195, 231, 267, 269, 287, 364, 778, 825, 921, 1000, 1004, 1006, 1009, 1132, 1135, 1141], "varieti": [79, 460, 861, 999, 1179], "storag": [79, 167, 172, 467, 695, 825, 861, 922, 930, 947, 967, 1192], "underli": [79, 222, 229, 245, 254, 295, 357, 362, 732, 931, 1123, 1128, 1132], "platform": [79, 169, 222, 231, 235, 237, 247, 250, 254, 262, 280, 330, 350, 359, 377, 805, 825, 930, 931, 965, 983, 1111, 1156, 1158], "offer": [79, 162, 172, 213, 288, 418, 595, 599], "popular": [79, 173, 186, 190, 413, 690, 850, 931, 983, 999, 1015, 1041, 1125, 1131, 1139, 1152, 1179], "often": [79, 90, 161, 162, 163, 164, 194, 244, 254, 281, 284, 304, 320, 399, 409, 430, 469, 484, 496, 610, 732, 825, 885, 961, 1027, 1047, 1061, 1178, 1179], "appropri": [79, 126, 137, 149, 155, 162, 172, 177, 182, 214, 254, 399, 413, 425, 540, 746, 821, 929, 941, 992, 1129, 1135, 1179], "prototyp": [79, 343, 390, 482, 544, 577, 693, 825, 922, 930, 943, 1020, 1135], "higher": [79, 162, 173, 231, 237, 247, 250, 776, 823, 922, 984, 986, 993, 1001, 1009, 1135, 1178], "fulli": [79, 166, 169, 173, 198, 446, 541, 993], "distribut": [79, 167, 172, 177, 189, 194, 214, 224, 242, 254, 354, 482, 528, 536, 749, 796, 825, 863, 864, 985, 1047], "en": [79, 167, 179, 189, 250, 278, 662], "vogu": 79, "serial": [79, 161, 162, 172, 202, 237, 238, 250, 858, 860, 1180, 1187], "groundwork": 79, "lai": 79, "instruct": [79, 161, 165, 169, 192, 223, 278, 287, 289, 454, 525, 741, 756, 971, 983, 1014, 1111], "consolid": [79, 194], "makeri": 79, "everybodi": [79, 167, 288, 446, 492, 586, 625, 668, 856, 1050, 1054, 1156, 1176], "clarifi": 79, "earli": [79, 161, 194, 198, 203, 288, 830, 842, 857, 985, 1018, 1035, 1073, 1178], "matter": [79, 161, 166, 167, 169, 177, 194, 200, 202, 384, 428, 460, 467, 474, 484, 584, 585, 597, 600, 686, 725, 732, 742, 744, 800, 825, 827, 870, 881, 923, 929, 931, 942, 1022, 1047, 1148, 1158, 1168, 1179], "rewrit": [79, 81, 162, 466], "translat": [79, 92, 93, 182, 195, 213, 250, 254, 257, 260, 296, 731, 1090], "flask": [79, 94, 159, 198, 201, 1021], "network": [79, 111, 112, 148, 157, 158, 159, 162, 169, 179, 180, 202, 204, 209, 234, 250, 257, 260, 271, 275, 277, 278, 282, 292, 296, 298, 313, 318, 324, 330, 336, 359, 375, 376, 460, 493, 778, 779, 802, 842, 858, 860, 861, 863, 921, 924, 925, 930, 931, 932, 942, 946, 947, 950, 951, 962, 981, 1187, 1191], "oppos": [81, 124, 161, 201, 235, 242, 252, 287, 425, 469, 474, 571, 909, 923, 930, 938, 972, 985, 992, 997, 1016, 1042, 1053, 1054, 1136, 1144], "ahead": [81, 177, 464, 1037], "optimz": 81, "donald": [81, 453], "knuth": [81, 453], "prematur": [81, 453, 457], "optim": [81, 163, 275, 287, 318, 440, 456, 457, 461, 462, 469, 763, 778, 809, 1135, 1175, 1177], "evil": [81, 240, 394, 444, 453, 457, 469, 597], "knowledg": [82, 86, 281, 284, 287, 541, 675, 677, 825, 923, 931, 1024, 1046, 1150], "onewir": [82, 86, 98, 107, 124, 125, 126, 134, 142, 278, 289, 326, 357, 360, 529, 530, 582, 778, 921, 928, 929, 960, 962, 979], "protocol": [82, 154, 167, 200, 201, 211, 233, 236, 238, 239, 243, 246, 249, 252, 261, 274, 276, 281, 284, 290, 291, 293, 294, 297, 300, 312, 313, 315, 316, 317, 319, 323, 325, 331, 334, 335, 363, 366, 398, 406, 493, 506, 783, 912, 923, 925, 929, 931, 932, 940, 941, 961, 1020, 1024, 1028, 1035], "aspect": [82, 129, 194, 198, 224, 248, 287, 289, 317, 489, 856, 929, 931, 1123, 1150, 1156, 1181], "regard": [82, 169, 194, 343, 885, 1047, 1054, 1152, 1156], "filesystem": [82, 86, 107, 124, 161, 164, 173, 202, 204, 214, 265, 330, 357, 362, 541, 777, 778, 825, 851, 930, 942, 958, 965, 983, 1002, 1156, 1182, 1187, 1189, 1193], "hwmon": [82, 86, 125, 363, 366], "composit": [83, 107, 128, 131, 142, 198, 224, 270, 288, 289, 306, 481, 488, 502, 516, 530, 582, 778, 1027, 1179], "mock": [83, 124, 125, 140, 141, 142, 288, 290, 291, 312, 316, 327, 344, 346, 530, 531, 532, 533, 535, 571, 582, 778, 1163], "pin": [85, 141, 278, 343, 922, 926, 929, 930], "linearli": [85, 254, 624, 861], "cold": [85, 213], "hot": [85, 164, 455, 458, 807], "queri": [85, 1055], "said": [85, 111, 112, 164, 177, 194, 281, 284, 291, 504, 617, 664, 748, 754, 786, 922, 930, 931, 942, 969, 984, 1027, 1047, 1067, 1136, 1149], "ds18s20": [86, 363, 1156], "datasheet": [86, 147, 821, 922, 931], "lm73": [86, 278, 363, 366, 778, 921, 928, 931], "ti": [86, 161, 464, 542, 586, 743], "hoc": [86, 224, 424], "report": [86, 125, 128, 134, 142, 161, 164, 165, 177, 179, 181, 368, 450, 460, 583, 778, 943, 978, 1163, 1165], "experi": [86, 150, 169, 194, 464, 469, 568, 930, 931, 1157], "subsystem": [87, 98, 99, 104, 105, 124, 180, 202, 209, 214, 251, 267, 269, 271, 277, 278, 287, 289, 290, 306, 312, 778, 803, 821, 835, 855, 859, 861, 921, 922, 929, 930, 931, 965, 981, 1022, 1156, 1180, 1181, 1187], "deprec": [87, 141, 291, 651, 951, 965, 1176], "foremost": 88, "osen": [88, 90, 172, 748, 776, 983], "recurs": [88, 89, 198, 222, 231, 237, 247, 250, 752, 817, 830, 869, 870, 885, 897, 907, 914, 934, 941, 978, 1059, 1063, 1176], "mother": [89, 109, 178, 240, 560, 1040, 1176], "protect": [89, 142, 162, 164, 214, 222, 234, 287, 289, 405, 424, 522, 523, 583, 586, 597, 653, 655, 656, 679, 754, 778, 809, 817, 823, 862, 904, 930, 971, 972, 983, 1031, 1034, 1043, 1168, 1181], "critic": [89, 162, 172, 460, 753, 815, 817, 1151], "kind": [89, 119, 162, 164, 172, 177, 182, 194, 198, 231, 237, 238, 247, 248, 250, 262, 278, 290, 291, 312, 316, 489, 541, 589, 636, 686, 695, 740, 754, 856, 922, 929, 930, 1031, 1123, 1149, 1150, 1181], "poll": [90, 168, 179, 817, 819, 842, 965, 970, 972, 989, 993, 1180, 1187, 1191, 1193], "second": [90, 161, 164, 165, 169, 181, 194, 200, 221, 227, 231, 235, 237, 242, 247, 250, 254, 280, 282, 343, 378, 388, 442, 458, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 518, 522, 523, 524, 528, 531, 541, 577, 592, 640, 642, 643, 682, 711, 712, 731, 742, 743, 756, 757, 772, 773, 774, 835, 862, 867, 870, 930, 949, 952, 959, 983, 992, 996, 1000, 1001, 1015, 1016, 1017, 1067, 1075, 1151, 1163, 1176], "readi": [90, 161, 922, 1156], "rare": [90, 167, 184, 198, 467, 477, 539, 541, 592, 690, 741, 907, 929, 946, 1058, 1062, 1075, 1157], "btw": [90, 166, 172, 194, 200, 214, 221, 241, 244, 357, 441, 794, 860, 1112, 1114], "increas": [90, 164, 454, 922, 985, 987, 1015, 1179], "tight": [90, 186, 398, 756, 828, 1148], "bui": [90, 162, 483], "bigger": [90, 162, 194, 454, 1129], "avail": [90, 132, 137, 142, 161, 162, 164, 165, 167, 173, 177, 186, 190, 194, 214, 223, 231, 237, 247, 250, 304, 312, 313, 316, 320, 376, 468, 470, 475, 479, 484, 509, 510, 710, 746, 752, 756, 798, 825, 830, 857, 881, 922, 926, 929, 930, 981, 984, 985, 1002, 1013, 1018, 1023, 1030, 1054, 1072, 1073, 1122, 1131, 1148, 1151, 1158, 1159, 1178, 1181], "intro": [94, 124, 141, 142, 159, 189, 213, 223, 232, 245, 246, 259, 262, 281, 284, 289, 295, 301, 313, 582, 682, 690, 710, 734, 778, 921, 945, 962, 964, 966, 1123, 1177, 1179, 1191], "rout": [94, 198, 1021], "jinja2": 94, "ss2022": [97, 778, 854, 855, 921], "ws2022": 97, "lab": [97, 107, 124, 357], "vo": [98, 107, 124, 363], "ku": [98, 106, 107, 124], "g1": [98, 778, 854, 855, 921], "g2": [98, 357, 778, 854, 855, 921], "08": [98, 100, 106, 124, 165, 172, 173, 174, 228, 231, 256, 260, 286, 324, 374, 478, 922, 929, 931, 953, 1014, 1127], "cont": [98, 124, 232, 295], "command": [98, 100, 122, 124, 158, 161, 166, 172, 202, 214, 219, 229, 231, 237, 238, 245, 247, 250, 259, 262, 268, 270, 277, 278, 295, 298, 299, 343, 357, 362, 375, 425, 446, 457, 469, 479, 480, 481, 488, 502, 506, 516, 530, 539, 582, 592, 741, 755, 777, 778, 825, 851, 852, 853, 854, 855, 858, 859, 860, 862, 863, 864, 865, 867, 869, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 887, 888, 889, 890, 892, 893, 894, 896, 897, 899, 900, 901, 903, 905, 913, 918, 921, 930, 931, 932, 933, 934, 941, 945, 950, 952, 960, 962, 976, 978, 979, 982, 983, 984, 985, 999, 1000, 1007, 1011, 1015, 1075, 1123, 1151, 1158, 1165, 1179], "wsl": [98, 99, 104, 105, 124, 251, 271, 277, 290, 306, 312, 778, 855, 859, 921, 1002, 1009, 1010, 1014], "homework": [98, 103, 106, 124, 164], "sshf": [98, 102, 124, 268, 277, 278, 298, 299, 364, 778, 921, 932, 937, 1002, 1011], "toolchain": [98, 104, 105, 107, 109, 124, 132, 157, 174, 189, 191, 278, 375, 466, 467, 473, 488, 502, 530, 531, 532, 533, 534, 535, 536, 537, 540, 541, 542, 582, 755, 777, 778, 826, 855, 858, 859, 921, 944, 950, 952, 959, 960, 962, 976, 979, 982, 984, 1001, 1002, 1003, 1004, 1007, 1015, 1016, 1017, 1048, 1171, 1173, 1174, 1175, 1183, 1189, 1191], "bashrc": [98, 105, 124, 161, 173, 234, 268, 277, 278, 292, 298, 299, 330, 778, 855, 857, 905, 907, 921, 941, 1011, 1013], "studi": [98, 105, 223, 266, 267, 269, 270, 278, 326, 481, 488, 682, 722, 777, 778, 921, 1004, 1006, 1009], "ds18b20": [98, 124, 126, 142, 278, 326, 357, 778, 921, 928, 959], "slave": [98, 124, 126, 142, 278, 326, 778, 921, 926, 928, 959], "redirect": [98, 101, 124, 163, 166, 202, 204, 214, 231, 237, 247, 250, 268, 277, 278, 298, 342, 357, 362, 778, 852, 853, 854, 855, 869, 889, 890, 892, 893, 896, 897, 899, 905, 918, 921, 951, 1073, 1172, 1182, 1189], "pipe": [98, 162, 167, 169, 182, 202, 204, 214, 268, 277, 278, 280, 298, 342, 357, 362, 776, 778, 855, 862, 867, 907, 912, 921, 951, 995, 996, 997, 1011, 1073, 1172, 1182, 1189], "06": [98, 107, 124, 172, 203, 247, 266, 279, 286, 303, 306, 309, 356, 374, 466, 477, 560, 776, 1050, 1127], "past": [98, 162, 166, 167, 224, 240, 430, 615, 617, 621, 624, 628, 693, 798, 800, 864, 1118, 1122, 1173], "2p": [98, 105], "3p": [98, 105], "5p": [98, 105], "pointer": [98, 109, 119, 124, 133, 142, 165, 189, 265, 326, 349, 358, 359, 360, 375, 388, 390, 392, 433, 434, 436, 437, 439, 441, 442, 443, 452, 456, 461, 462, 496, 541, 554, 571, 576, 578, 583, 584, 586, 594, 601, 603, 612, 616, 620, 624, 625, 628, 634, 638, 651, 684, 691, 692, 693, 720, 722, 727, 729, 731, 736, 741, 743, 746, 747, 755, 758, 762, 763, 766, 768, 773, 774, 775, 777, 778, 784, 791, 796, 807, 813, 842, 845, 943, 969, 997, 1073, 1173, 1174, 1175, 1176, 1177, 1179], "exit": [98, 124, 158, 162, 164, 192, 213, 231, 237, 240, 247, 250, 272, 278, 313, 350, 375, 379, 431, 473, 480, 489, 592, 659, 739, 741, 778, 788, 793, 827, 921, 931, 947, 948, 949, 951, 952, 957, 959, 962, 963, 979, 989, 996, 997, 1016, 1022, 1030, 1031, 1049, 1052, 1065, 1075, 1085, 1102, 1151, 1158], "statu": [98, 124, 125, 134, 142, 158, 163, 165, 177, 231, 237, 240, 247, 250, 262, 272, 278, 375, 379, 431, 469, 473, 480, 659, 776, 778, 827, 841, 921, 952, 957, 959, 962, 979, 983, 996, 1016, 1052, 1078, 1137], "yai": [98, 158, 234, 242, 244, 257, 263, 282, 292, 324, 336, 340, 625, 676, 682, 978], "ol": [98, 124, 240, 287, 289, 296, 366, 488, 502, 530, 531, 532, 533, 534, 535, 536, 537, 540, 547, 549, 582, 586, 590, 605, 608, 611, 627, 633, 637, 646, 649, 650, 655, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 691, 722, 734, 738, 744, 747, 755, 763, 766, 775, 777, 778, 918, 993, 1068, 1073, 1095], "randomsensor": [98, 142, 489, 494, 503, 515, 529, 530, 536, 540, 550, 551, 552, 553, 555, 556, 582, 740, 741, 742, 743, 778, 1035], "rectangl": [98, 155, 492, 560, 589, 605, 679, 778], "mystr": [98, 188, 240], "point3d": [98, 605, 679, 778], "cuboid": [98, 605, 679, 778], "hierarchi": [100, 107, 111, 112, 114, 120, 129, 198, 199, 201, 203, 221, 222, 235, 238, 250, 268, 277, 278, 298, 299, 309, 368, 455, 482, 483, 484, 487, 488, 502, 503, 507, 509, 530, 540, 582, 778, 855, 858, 859, 860, 871, 874, 875, 876, 877, 878, 879, 880, 885, 891, 897, 904, 921, 933, 934, 935, 936, 937, 962, 980, 1009, 1010], "parent": [100, 110, 111, 112, 164, 177, 179, 268, 277, 278, 298, 299, 776, 778, 805, 855, 857, 858, 859, 860, 861, 870, 871, 874, 875, 876, 877, 878, 879, 880, 888, 889, 890, 891, 892, 894, 896, 897, 898, 909, 921, 933, 934, 935, 936, 937, 962, 968, 1009, 1010], "login": [100, 124, 142, 167, 169, 202, 214, 268, 330, 356, 357, 778, 852, 853, 855, 856, 857, 859, 861, 862, 863, 871, 874, 875, 876, 877, 878, 879, 880, 886, 921, 922, 930, 933, 934, 935, 936, 937, 938, 940, 942, 959, 1009, 1010, 1101, 1171, 1180, 1187], "bourn": [100, 124, 178, 202, 204, 268, 277, 278, 298, 357, 358, 359, 362, 375, 376, 488, 502, 530, 531, 532, 533, 534, 535, 536, 537, 540, 582, 755, 776, 777, 778, 848, 852, 853, 854, 855, 858, 859, 866, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 915, 921, 944, 950, 952, 960, 962, 963, 976, 979, 982, 984, 1001, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010], "verifi": [101, 103, 124, 137, 141, 150, 172, 178, 190, 202, 214, 278, 368, 577, 595, 778, 855, 860, 889, 892, 893, 896, 899, 905, 921, 934, 935, 937, 1089, 1126, 1129, 1151], "joke": [101, 162], "mostli": [101, 114, 119, 120, 248, 375, 380, 386, 398, 414, 444, 453, 598, 639, 741, 746, 793, 861, 864, 885, 951, 978, 981, 1002, 1178], "secur": [102, 124, 165, 167, 169, 214, 234, 240, 268, 277, 298, 330, 356, 778, 852, 853, 858, 860, 863, 881, 885, 921, 922, 932, 933, 934, 935, 936, 940, 951, 959, 1009, 1010, 1016, 1018, 1050, 1080], "account": [102, 111, 112, 124, 167, 169, 189, 194, 198, 199, 234, 240, 250, 257, 260, 275, 279, 280, 282, 292, 296, 318, 324, 330, 336, 357, 362, 387, 460, 466, 664, 682, 798, 929, 942, 1047, 1127], "authent": [102, 124, 202, 214, 223, 268, 277, 278, 298, 299, 354, 357, 778, 852, 853, 921, 932, 933, 934, 935, 936, 937, 942, 1089], "ownership": [102, 124, 189, 224, 278, 299, 313, 530, 550, 554, 560, 582, 695, 737, 740, 741, 755, 777, 778, 852, 853, 855, 858, 859, 862, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 921, 950, 951, 952, 960, 962, 976, 979, 982, 984, 1176, 1179], "setuid": [102, 124, 202, 268, 277, 278, 298, 299, 778, 855, 860, 880, 921], "quick": [103, 124, 194, 201, 219, 223, 229, 238, 245, 259, 271, 301, 509, 746, 912, 922, 1123, 1149], "credenti": [103, 124, 169, 262, 778, 853, 854, 855, 860, 874, 875, 876, 877, 878, 879, 880, 921, 938, 967, 1020], "share": [103, 104, 107, 111, 112, 124, 144, 157, 162, 164, 169, 173, 177, 186, 187, 189, 190, 192, 195, 214, 224, 231, 234, 237, 247, 250, 254, 257, 260, 265, 266, 267, 269, 275, 278, 282, 292, 296, 305, 318, 321, 324, 326, 330, 336, 354, 375, 376, 420, 447, 448, 454, 460, 467, 471, 478, 479, 483, 495, 540, 560, 568, 682, 743, 745, 746, 754, 756, 775, 777, 778, 803, 807, 823, 830, 854, 855, 858, 864, 874, 877, 878, 880, 916, 921, 930, 954, 967, 969, 975, 981, 987, 999, 1002, 1009, 1011, 1031, 1034, 1165, 1180, 1181, 1189, 1191], "adjust": [103, 152, 156, 778, 825, 921, 930, 935, 937, 993, 1000], "ubuntu": [104, 132, 163, 169, 173, 177, 189, 190, 191, 192, 202, 267, 269, 278, 375, 778, 864, 921, 924, 942, 1001, 1002, 1009, 1010, 1014, 1158, 1163], "zoom": [104, 105, 124, 169, 178, 194, 278, 292, 375, 467, 488, 502, 530, 531, 532, 533, 534, 535, 536, 537, 540, 582, 778, 907, 921, 1001, 1004, 1005, 1006, 1007, 1009, 1170], "recap": [105, 124, 198, 202, 211, 240, 287, 288, 315, 357, 578, 1029], "endeavor": 105, "hoop": [105, 864, 996], "doze": [105, 168, 223, 224, 237, 357, 364, 442, 776, 864, 909, 1067, 1073, 1158], "pictur": [105, 159, 162, 183, 194, 198, 291, 292, 454, 460, 539, 837, 885, 887, 907, 922, 941, 945, 1191], "fit": [105, 173, 178, 183, 185, 398, 403, 483, 607, 682, 704, 784, 825, 922, 1126, 1128, 1137], "theori": [107, 198, 427, 454, 1128], "Of": [107, 124, 142, 164, 167, 197, 198, 248, 266, 267, 269, 271, 278, 287, 289, 327, 488, 502, 530, 540, 582, 615, 655, 656, 666, 679, 763, 775, 777, 778, 854, 869, 916, 921, 959, 962, 964, 1029, 1123, 1136, 1179], "ece20": [107, 110, 525, 541, 602, 852, 853, 860], "uml": [107, 142, 270, 288, 290, 291, 488, 502, 530, 540, 582, 778], "foundat": [107, 245, 275, 488, 502, 530, 582, 778, 825, 1187], "adapt": [107, 142, 165, 198, 270, 288, 481, 488, 490, 491, 502, 506, 516, 520, 530, 582, 746, 778, 930, 931, 1179], "syllabu": [107, 365], "vote": 107, "beurteilungsschema": 107, "grade": [107, 110, 124, 142, 361, 371, 1156], "total": [107, 110, 113, 122, 164, 173, 177, 181, 234, 250, 260, 267, 453, 458, 466, 480, 489, 504, 538, 539, 540, 541, 592, 602, 741, 907, 909, 922, 929, 930, 931, 942, 965, 993, 1000, 1001, 1002, 1011, 1014, 1078, 1080, 1163], "compos": [107, 128, 129, 144, 178, 240, 313, 392, 484, 663, 825, 1013, 1016, 1025, 1039, 1085, 1136], "practic": [107, 235, 244, 254, 427, 464, 617, 656, 693, 728, 735, 929, 955, 997, 1131, 1176, 1179], "theoret": [107, 359, 378, 749], "semest": [107, 110, 361, 363], "addition": [107, 161, 164, 403, 487, 504], "deliv": [107, 162, 925, 996, 997], "variou": [107, 164, 240, 266, 267, 740, 754, 756, 825, 857, 1181], "weight": [107, 185, 194, 449, 819, 931, 1047], "decid": [107, 163, 164, 169, 194, 248, 453, 483, 544, 558, 622, 821, 825, 845, 929, 1030, 1047], "excerpt": [107, 198, 201, 359, 360, 1080, 1137], "w1": [107, 114, 120, 124, 125, 139, 278, 327, 525, 541, 542, 959], "soup": [107, 159, 467, 469, 470, 472, 473, 475, 476, 478, 480, 482, 483, 484, 485, 486, 487, 489, 491, 494, 503, 504, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 538, 540, 543, 544, 545, 546, 548, 550, 551, 552, 553, 555, 556, 557, 558, 559, 662, 742, 776, 963, 966, 1023, 1026, 1075, 1156, 1165], "armv8": [107, 173, 278, 542, 1000, 1013, 1014], "rpi4": [107, 173, 278, 542, 1000, 1013, 1014], "gnueabihf": [107, 173, 278, 542, 825, 1000, 1011, 1013, 1014], "shape": [107, 155, 183, 185, 224, 286, 287, 318, 530, 560, 582, 602, 682, 778, 825, 951, 1128, 1131, 1141], "algorithm": [107, 163, 172, 183, 231, 237, 245, 247, 250, 258, 260, 266, 267, 287, 296, 454, 530, 547, 571, 578, 582, 609, 620, 622, 623, 625, 626, 629, 630, 646, 649, 650, 679, 724, 732, 734, 745, 749, 778, 1102, 1125, 1129], "find_if": [107, 109, 224, 240, 287, 326, 624, 627, 646, 650, 667, 676, 679, 745, 778], "customiz": [107, 287, 627, 646, 650, 679, 778], "binary_search": [107, 109, 224, 240, 287, 627, 646, 650, 679, 778], "associ": [107, 173, 191, 199, 201, 203, 219, 224, 278, 281, 284, 287, 289, 327, 401, 402, 410, 415, 419, 426, 432, 436, 439, 443, 452, 456, 461, 462, 530, 531, 547, 549, 582, 617, 646, 650, 679, 682, 684, 710, 722, 775, 777, 778, 784, 791, 849, 923, 951, 1023, 1053, 1054, 1055, 1071, 1073, 1130, 1179], "hour": [107, 167, 169, 194, 198, 231, 253, 271, 282, 295, 317, 363, 1085, 1123, 1130], "sent": [107, 162, 163, 202, 307, 460, 506, 865, 973, 993, 997, 1139], "015": 107, "voluntari": 107, "odd": [107, 124, 254, 289, 442, 530, 544, 547, 582, 778, 930, 1025, 1027], "char": [108, 164, 180, 223, 240, 250, 296, 380, 387, 392, 393, 396, 398, 399, 400, 403, 404, 417, 422, 425, 430, 431, 438, 442, 448, 449, 451, 467, 485, 489, 519, 523, 528, 542, 543, 574, 589, 592, 593, 597, 607, 647, 662, 663, 677, 693, 695, 720, 727, 744, 758, 776, 781, 784, 789, 805, 807, 819, 845, 929, 943, 947, 948, 951, 955, 956, 957, 958, 961, 963, 966, 980, 983, 989, 992, 993, 996, 1017, 1062, 1068, 1134, 1163, 1168], "cout": [108, 114, 117, 120, 121, 129, 173, 468, 474, 489, 503, 508, 509, 510, 522, 523, 524, 525, 528, 536, 540, 541, 568, 586, 588, 593, 595, 599, 612, 613, 614, 615, 616, 619, 620, 621, 622, 623, 624, 625, 626, 628, 629, 630, 631, 635, 639, 640, 641, 642, 643, 649, 653, 654, 657, 659, 660, 663, 666, 673, 676, 682, 687, 697, 699, 700, 701, 702, 705, 706, 707, 708, 710, 711, 712, 714, 715, 716, 717, 718, 719, 724, 726, 727, 729, 730, 732, 734, 743, 744, 745, 746, 754, 756, 757, 762, 764, 766, 768, 868, 929, 963, 966, 978, 980, 992, 996, 1163], "endl": [108, 114, 117, 120, 173, 468, 489, 503, 508, 509, 510, 522, 523, 524, 525, 528, 536, 540, 541, 568, 586, 588, 593, 595, 599, 600, 607, 612, 613, 614, 615, 616, 619, 620, 621, 622, 623, 624, 625, 626, 628, 629, 630, 631, 635, 639, 640, 641, 642, 643, 649, 653, 654, 657, 659, 660, 663, 666, 673, 676, 682, 697, 699, 700, 701, 702, 705, 706, 707, 708, 710, 711, 712, 714, 715, 716, 717, 718, 719, 724, 726, 727, 729, 730, 732, 734, 743, 744, 745, 746, 754, 756, 757, 762, 764, 766, 768, 929, 963, 966, 978, 980, 992, 996, 1163], "constitut": 108, "_id": [108, 114, 120], "objectcontain": 108, "add_object": 108, "_contain": [108, 732], "push_back": [108, 513, 514, 577, 618, 619, 620, 625, 628, 631, 635, 639, 686, 687, 690, 695, 754, 996, 1168], "fragment": [108, 455, 1027, 1163], "iostream": [108, 114, 120, 121, 231, 237, 247, 250, 489, 503, 508, 509, 510, 518, 522, 523, 524, 525, 528, 536, 540, 568, 586, 588, 593, 595, 599, 600, 612, 613, 614, 615, 616, 619, 620, 621, 622, 623, 625, 626, 629, 630, 631, 635, 639, 640, 641, 642, 643, 649, 653, 654, 657, 659, 660, 666, 672, 673, 674, 675, 676, 677, 682, 687, 697, 700, 701, 702, 705, 706, 707, 708, 710, 711, 712, 714, 715, 716, 717, 718, 719, 724, 726, 727, 729, 732, 734, 743, 744, 745, 746, 754, 756, 762, 764, 766, 768, 776, 929, 963, 966, 970, 978, 980, 992, 996, 997, 1163], "my_vector": 108, "sysroot": [109, 173, 1000, 1014], "intel": [109, 147, 151, 165, 778, 999], "header": [109, 158, 190, 224, 240, 265, 295, 304, 305, 320, 321, 424, 425, 426, 432, 436, 439, 443, 447, 452, 456, 461, 462, 466, 471, 472, 473, 478, 479, 489, 610, 684, 699, 704, 722, 728, 775, 777, 778, 869, 926, 931, 1000, 1002, 1011, 1080, 1113, 1117, 1118, 1120, 1128, 1131, 1178], "match": [109, 161, 168, 197, 210, 227, 234, 235, 237, 242, 250, 260, 262, 263, 272, 275, 295, 296, 302, 313, 324, 330, 336, 422, 466, 541, 695, 699, 719, 732, 736, 860, 869, 942, 1002, 1022, 1068, 1123, 1163], "linker": [109, 111, 112, 157, 189, 304, 320, 421, 447, 454, 458, 459, 470, 477, 599, 610, 825, 999, 1002, 1005, 1009, 1016, 1173, 1174, 1175, 1178, 1183, 1189], "uniquifi": [110, 289, 530, 547, 582, 778], "lookup": [110, 130, 182, 199, 212, 231, 237, 242, 247, 250, 264, 296, 449, 504, 530, 547, 549, 582, 697, 778, 1035, 1064, 1071, 1101, 1136, 1145, 1193], "leak": [110, 164, 437, 451, 489, 509, 510, 530, 547, 549, 550, 566, 574, 577, 582, 583, 589, 654, 728, 739, 741, 778, 1023], "sure": [110, 161, 162, 163, 164, 165, 167, 168, 169, 172, 173, 202, 214, 221, 238, 240, 280, 354, 448, 483, 484, 487, 506, 509, 510, 539, 565, 662, 736, 773, 825, 930, 931, 952, 956, 1011, 1023, 1179], "gz": [110, 158, 825, 826, 849, 850, 851, 1078, 1158], "whatev": [110, 130, 137, 141, 161, 162, 164, 169, 185, 200, 260, 343, 460, 506, 585, 685, 710, 776, 890, 892, 942, 947, 983, 985, 1053, 1120, 1128, 1135, 1136, 1158], "quiz": [111, 112, 124, 665, 679, 778, 855, 859, 874, 880, 899, 905, 921, 1006, 1009], "servic": [111, 112, 158, 167, 168, 169, 202, 234, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336, 460, 466, 749, 817, 823, 828, 858, 861, 912, 931, 940, 942, 949, 985, 1052], "owner": [111, 112, 163, 202, 357, 362, 742, 784, 825, 858, 872, 873, 881, 907, 942, 970], "dimension": [111, 112, 183, 704, 858, 1128, 1129], "identifi": [111, 112, 163, 172, 231, 237, 247, 250, 296, 403, 425, 446, 448, 458, 673, 783, 823, 858, 929, 931, 1069, 1130], "pthread": [111, 112, 162, 173, 179, 231, 237, 247, 250, 748, 754, 858, 967, 972, 975, 983, 997, 1002], "timeslic": [111, 112, 162, 858, 981, 986], "suspend": [111, 112, 162, 163, 336, 710, 712, 752, 821, 856, 858, 869, 972, 997], "favor": [111, 112, 858, 984, 1176], "fair": [111, 112, 162, 823, 858, 984, 986], "ensur": [111, 112, 250, 484, 532, 858], "evenli": [111, 112, 242, 858], "cpu": [111, 112, 131, 161, 162, 165, 169, 172, 195, 205, 209, 289, 336, 368, 372, 440, 441, 453, 455, 460, 618, 749, 756, 778, 796, 809, 823, 830, 835, 845, 856, 858, 861, 865, 921, 929, 930, 931, 945, 962, 970, 972, 982, 983, 984, 985, 986, 1033, 1050, 1181], "infinit": [111, 112, 162, 182, 201, 231, 235, 237, 240, 242, 247, 250, 258, 291, 295, 415, 433, 440, 858, 862, 981, 984, 1027, 1028, 1029, 1058, 1093], "illus": [111, 112, 858, 862, 981, 984, 1181], "action": [111, 112, 172, 201, 257, 467, 473, 585, 664, 884, 885, 946, 951, 983, 996, 998, 1130, 1151], "undefin": [111, 112, 223, 396, 403, 430, 473, 591, 599, 623, 630, 635, 659, 664, 695, 724, 996], "behavior": [111, 112, 129, 162, 164, 167, 199, 221, 223, 250, 403, 623, 630, 635, 664, 695, 712, 858, 952, 956, 997, 1000, 1020, 1025, 1042], "declar": [111, 112, 222, 223, 235, 240, 379, 395, 410, 419, 424, 426, 432, 433, 436, 439, 440, 443, 446, 447, 448, 452, 454, 456, 461, 462, 467, 587, 597, 657, 664, 673, 674, 684, 695, 704, 720, 722, 742, 775, 777, 778, 931, 951, 955, 957, 958, 984, 1165], "promis": [111, 112, 164, 266, 267, 269, 278, 326, 390, 448, 506, 574, 586, 595, 664, 710, 712, 713, 716, 717, 754, 755, 777, 778, 996, 1048, 1176], "caller": [111, 112, 164, 240, 390, 392, 428, 434, 458, 460, 597, 664, 676, 693, 742, 744, 749, 752, 817, 828, 968, 972, 1023, 1102], "uniniti": [111, 112, 451, 577, 584, 586, 587, 588, 591, 664, 780], "guarante": [111, 112, 162, 200, 231, 250, 442, 487, 664, 789, 796, 930, 931, 984, 985, 993, 1020], "contigu": [111, 112, 455, 618, 635, 664, 811, 961, 1144], "vec": [111, 112, 584, 586, 593, 600, 601, 602, 603, 604, 664], "hysteresi": [113, 115, 116, 125, 135, 140, 141, 142, 327, 366, 532], "_x": [114, 117, 528, 586, 587, 589, 591, 593, 594, 595, 596, 598, 600, 610, 625, 689, 704, 706, 707, 708], "firstnam": [114, 118, 124, 142, 195, 221, 234, 242, 244, 247, 250, 254, 257, 260, 262, 263, 272, 275, 282, 296, 302, 307, 314, 330, 343, 348, 484, 485, 513, 519, 528, 529, 542, 597, 643, 669, 673, 675, 677, 694, 852, 853, 889, 890, 892, 894, 897, 1023, 1036, 1037, 1039, 1040, 1041, 1043, 1044, 1052, 1112, 1113, 1114, 1115, 1118, 1119, 1120, 1131, 1140, 1141, 1142, 1144, 1145, 1146, 1147], "lastnam": [114, 118, 124, 142, 195, 224, 234, 240, 242, 244, 247, 250, 254, 257, 260, 262, 263, 275, 282, 296, 302, 307, 314, 330, 343, 348, 484, 485, 513, 519, 528, 529, 542, 597, 643, 667, 669, 673, 676, 679, 694, 778, 852, 853, 889, 890, 892, 894, 897, 1023, 1036, 1037, 1039, 1040, 1041, 1043, 1044, 1052, 1112, 1113, 1114, 1115, 1118, 1119, 1120, 1131, 1140, 1141, 1142, 1144, 1145, 1146, 1147], "chosen": [114, 118, 173, 469, 922, 929, 931, 957, 961, 981, 985, 1129, 1142], "shorter": [114, 118, 182, 1030, 1041, 1073, 1122], "temporari": [114, 118, 163, 172, 189, 231, 237, 240, 247, 250, 290, 291, 312, 316, 469, 541, 542, 690, 694, 695, 710, 724, 732, 776, 869, 999, 1025, 1106], "consid": [114, 119, 120, 162, 164, 194, 198, 222, 231, 237, 247, 248, 250, 254, 278, 296, 317, 418, 445, 446, 454, 506, 660, 885, 929, 984, 1039, 1047, 1123, 1150, 1151, 1178], "imagin": [114, 120, 162, 164, 444, 449, 450, 482, 495, 825, 864, 881, 922, 931, 970, 997], "w1sensor": [114, 120, 142, 526, 527, 528, 529, 541], "pragma": [114, 119, 120, 442, 483, 485, 489, 494, 506, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 541, 599, 616, 619, 713, 762, 764, 766, 767, 768, 769, 776], "get_temperatur": [114, 119, 120, 198, 250, 313, 483, 486, 487, 489, 494, 496, 506, 507, 512, 514, 515, 517, 520, 521, 525, 528, 533, 534, 535, 536, 540, 541, 542, 553, 571, 692, 740, 741, 742, 743, 762, 764, 766, 767, 768, 769, 1035, 1111], "unus": [114, 120, 448, 483, 538, 540, 584, 588, 599, 638, 639, 692, 803, 862, 978, 992], "cstdint": [114, 120, 683, 711, 712], "uint64_t": [114, 120, 398, 435, 541, 711, 712, 746, 949, 992], "w1_address": [114, 120], "_w1_address": [114, 120], "overrid": [114, 120, 121, 142, 158, 222, 235, 250, 265, 327, 483, 489, 491, 496, 511, 513, 514, 515, 517, 518, 520, 542, 656, 657, 721, 722, 762, 777, 778, 1020, 1035, 1168], "physic": [114, 120, 164, 167, 202, 209, 290, 291, 312, 316, 455, 660, 809, 861, 930, 949, 953, 983, 984], "samp": [114, 120], "unistd": [114, 120, 164, 445, 542, 574, 882, 929, 945, 947, 948, 949, 951, 954, 955, 956, 957, 958, 961, 963, 966, 980, 983, 989, 992, 996], "0xdeadbe": [114, 120], "correct": [114, 119, 120, 161, 169, 173, 201, 221, 223, 234, 357, 403, 440, 444, 445, 452, 455, 456, 461, 462, 464, 492, 560, 592, 657, 659, 660, 692, 737, 740, 748, 778, 868, 872, 873, 897, 929, 930, 931, 984, 1026, 1034, 1128, 1151], "liskov": [114, 119, 120, 464], "segreg": [114, 119, 120, 142, 464], "invers": [114, 119, 120, 142, 254, 372, 464, 482, 489, 789, 984, 985, 1192], "question2": 115, "set_stat": [119, 135, 141, 327], "nullptr": [119, 522, 523, 541, 552, 556, 682, 692, 693, 740, 741, 742, 754, 756, 758, 773, 774, 966, 1176], "_sensor": [119, 489, 496, 514, 515, 517, 520, 521, 742], "_switch": [119, 496], "_displai": 119, "_low": 119, "_high": 119, "current_temperatur": 119, "neg": [119, 120, 205, 250, 254, 324, 340, 403, 445, 450, 662, 803, 916, 1163], "obvious": [120, 164, 165, 167, 173, 185, 380, 444, 448, 475, 504, 568, 594, 600, 638, 653, 654, 682, 693, 727, 731, 736, 763, 776, 823, 825, 838, 861, 862, 868, 882, 930, 931, 941, 957, 958, 985, 997, 999, 1015, 1036, 1039, 1178], "remain": [120, 162, 163, 173, 182, 195, 242, 250, 296, 545, 546, 558, 587, 635, 641, 672, 678, 683, 745, 753, 807, 938, 986, 997, 999, 1098, 1101, 1102, 1105, 1113, 1115, 1131, 1165], "carri": [122, 164, 169, 184, 446, 478, 487, 504, 776, 929, 986, 999, 1022], "norm": [122, 240, 1136], "meantim": [122, 489, 946], "fresh": [122, 163], "made": [122, 129, 141, 155, 156, 161, 162, 163, 165, 168, 169, 173, 177, 214, 229, 254, 278, 313, 357, 389, 427, 428, 430, 433, 464, 484, 488, 504, 510, 710, 809, 825, 856, 857, 862, 922, 929, 955, 961, 966, 984, 1002, 1027, 1034, 1044, 1080, 1128], "arbitrari": [122, 162, 183, 250, 254, 384, 400, 418, 454, 469, 607, 634, 635, 687, 745, 757, 784, 926, 951, 955, 983, 1023, 1059, 1073, 1101], "sinc": [122, 144, 173, 179, 224, 230, 261, 353, 454, 457, 586, 594, 595, 625, 638, 681, 682, 710, 731, 736, 742, 757, 776, 825, 929, 942, 949, 955, 958, 970, 985, 992, 1053, 1177], "whichev": 122, "enumer": [122, 177, 183, 185, 195, 201, 206, 207, 211, 213, 219, 220, 222, 243, 247, 252, 258, 272, 276, 293, 296, 315, 325, 337, 399, 446, 466, 683, 786, 821, 931, 1186], "pack": [122, 173, 177, 223, 539, 560, 851, 885, 923, 925], "unpack": [122, 177, 181, 201, 207, 211, 213, 218, 222, 226, 231, 234, 239, 243, 244, 250, 255, 257, 261, 262, 273, 278, 280, 283, 292, 296, 314, 317, 319, 325, 327, 337, 340, 342, 357, 722, 777, 778, 825, 851, 923, 925, 929, 1000, 1007, 1013, 1014, 1053, 1071, 1176], "kib": [122, 177], "222": [122, 195, 234, 237, 242, 244, 250, 254, 257, 260, 272, 275, 292, 296, 302, 318, 324, 330, 336, 340, 473], "addit": [122, 164, 182, 194, 221, 250, 253, 342, 401, 448, 469, 503, 504, 518, 540, 586, 598, 604, 675, 825, 862, 938, 1042, 1054, 1070, 1072, 1151], "checkout": [122, 144, 154, 165, 177, 191, 798, 825, 826, 1188], "previou": [122, 166, 182, 313, 525, 577, 593, 675, 885, 917, 957, 1024, 1026, 1046, 1048, 1092, 1150], "9bfda12": 122, "mosquitto": [122, 234, 238, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 1117, 1139], "client": [122, 132, 144, 167, 169, 180, 225, 229, 257, 271, 464, 492, 493, 506, 745, 746, 925, 938, 940, 948, 993, 1135, 1151], "smoothli": 122, "forward": [122, 177, 240, 266, 267, 268, 277, 298, 299, 326, 395, 410, 419, 425, 426, 432, 436, 439, 443, 452, 456, 461, 462, 647, 684, 691, 722, 732, 775, 777, 778, 825, 885, 909, 917, 921, 922, 932, 937, 1176], "diverg": [122, 983], "00aea42": 122, "delet": [122, 189, 201, 231, 250, 265, 275, 296, 327, 352, 451, 482, 485, 524, 541, 550, 554, 566, 574, 589, 592, 651, 654, 659, 682, 692, 693, 694, 722, 727, 739, 740, 741, 742, 758, 768, 777, 778, 803, 833, 862, 1132, 1158, 1175, 1176], "footnot": [122, 165, 167, 168, 169, 172, 173, 178, 185, 191, 194, 197, 281, 284, 483, 510, 554, 601, 603, 604, 617, 647, 666, 794, 796, 857, 864, 879, 929, 930, 931, 952, 955, 1015, 1047, 1050, 1080, 1114, 1129, 1176, 1179], "term": [122, 129, 162, 164, 186, 214, 254, 287, 289, 354, 454, 597, 600, 664, 742, 745, 858, 931, 950, 984, 996, 1128, 1163], "ss2023": 123, "ws2023": [123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 141, 778], "bouncem": [124, 142, 541, 542, 852, 853], "procf": [124, 202, 204, 278, 778, 863, 921, 962, 979, 1180, 1187], "umask": [124, 268, 277, 278, 298, 299, 357, 362, 778, 855, 880, 904, 921, 955, 967], "diff": [124, 218, 237, 330, 584, 586, 1042, 1182], "raspi": [124, 158, 292, 357, 363, 778, 802, 825, 826, 827, 829, 834, 840, 843, 846, 921, 923, 924, 925, 926, 929, 930, 931, 1013, 1014], "spirit": [124, 418], "readm": [124, 146, 181, 287, 289, 929, 930], "modular": [124, 194, 199, 201, 229, 248, 280, 359, 360, 390, 467, 999, 1026], "plc": 124, "sallok": 124, "constantsensor_nopoli": [124, 142, 530, 536, 582, 778], "randomsensor_nopoli": [124, 142, 530, 582, 778], "ece21": [124, 141, 142], "labexam": 124, "hysteresis_nopoli": [124, 125, 142, 530, 531, 582, 778], "upload": [124, 168, 885, 1078, 1150], "j": [124, 159, 167, 173, 210, 225, 227, 237, 242, 244, 247, 250, 254, 257, 260, 272, 275, 282, 296, 302, 314, 318, 330, 404, 407, 424, 448, 455, 504, 597, 686, 697, 745, 835, 851, 1007, 1011, 1027, 1136, 1142], "bz2": [124, 163, 460, 825, 847, 850, 1020], "influenc": [124, 1000, 1176], "felber": 124, "vscode": [124, 192, 363, 377, 907], "folder": [124, 168], "comprehend": [124, 248, 403, 409, 996], "workspacefold": 124, "suppli": [124, 164, 202, 542, 544, 588, 784, 825, 841, 860, 922, 926, 929, 931, 946, 955, 1084], "cpprefer": [124, 622, 623, 624, 625, 626, 628, 629, 630, 631, 634, 643, 662], "averagingsensor_nopoli": [124, 142, 530, 582, 778], "toolcas": [124, 137, 142, 287, 289, 699], "mocksensor_nopoli": [124, 142, 530, 531, 532, 533, 582, 778], "specifi": [124, 162, 179, 250, 262, 296, 398, 466, 475, 528, 531, 536, 539, 588, 668, 682, 697, 721, 732, 825, 885, 942, 955, 959, 985, 997, 1050, 1065, 1073, 1077, 1094, 1113, 1115, 1144, 1146, 1151], "hint": [124, 137, 177, 250, 262, 291, 381, 484, 544, 554, 558, 669, 852, 853, 865, 934, 983], "target_link_librari": [124, 190, 470, 472, 473, 474, 475, 479, 525, 561, 564, 570, 576, 579, 995, 1000, 1001, 1162, 1165, 1167], "inter": [124, 162, 180, 186, 984, 1180, 1187, 1190, 1192], "likewis": [124, 237, 571, 602, 851, 870, 941, 957, 1007, 1128, 1165], "ledstripedisplay_nopoli": [124, 142, 530, 582, 778], "somewhat": [125, 182, 223, 454, 487], "02131d959eaa": [125, 525, 541, 542, 959], "heat": [125, 270, 481, 488, 532, 541, 778, 931, 1127, 1128], "hwmon2": [125, 336, 929], "temp1_input": [125, 929, 931], "boilingpot": [125, 127], "knob": [125, 1051], "steer": 125, "desir": [125, 167, 231, 237, 247, 250, 399, 403, 414, 536, 586, 588, 594, 676, 823, 956, 958, 1130], "hardcod": [125, 163, 361, 560, 784, 788, 1089], "ledstripedisplai": [125, 135, 137, 140, 141], "unreason": 125, "cluster_fh2021": [125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 778], "fh2021_switch_interfac": [125, 126, 127, 128, 133, 134, 135, 141, 778], "fh2021_boiling_pot": [125, 126, 127, 128, 134, 141, 778], "fh2021_sensor_interfac": [125, 126, 127, 128, 134, 141, 778], "fh2021_sysfs_gpio_switch": [125, 126, 128, 134, 141, 778], "breadboard": [126, 128, 931, 1180, 1187], "acrobat": [126, 128], "boilingpot_suit": 127, "status_report": 127, "percentage_displai": 127, "fh2021_display_infrastructur": [127, 133, 134, 778], "infrastructur": [127, 128, 134, 142, 162, 459, 778, 781, 993], "fh2021_pwm_displai": [127, 133, 134, 137, 778], "pwm": [127, 128, 133, 134, 142, 278, 287, 778, 825, 921, 922, 928, 965, 1180, 1187], "fh2021_boiling_pot_displai": [127, 134, 778], "stripe": [128, 133, 137, 531], "style": [129, 158, 162, 167, 231, 237, 240, 247, 250, 289, 450, 465, 466, 560, 585, 586, 591, 625, 659, 662, 673, 682, 687, 718, 734, 759, 763, 767, 768, 769, 777, 778, 793, 842, 965, 1051, 1092, 1117, 1128], "reusabl": 129, "compon": [129, 222, 235, 327, 457, 909, 984], "dedic": [129, 162, 163, 194, 199, 248, 278, 281, 284, 450, 466, 793, 863, 864, 929, 930, 931, 965, 967, 1001, 1019, 1030, 1063, 1179], "constrain": [129, 763, 863], "decoupl": [129, 238, 482, 983], "sink": [129, 131, 134, 290, 291, 306, 309, 312, 316, 778], "datalogg": [129, 291, 313], "target_include_directori": [129, 475, 476, 478, 479], "announc": [129, 364, 475, 476, 653, 929, 930], "anyon": [129, 162, 574, 796], "node": [129, 155, 167, 172, 182, 438, 458, 475, 638, 781, 784, 788, 794, 803, 1015, 1139, 1156], "startlog": 129, "uint16_t": [129, 398], "special": [129, 155, 162, 209, 242, 244, 250, 254, 278, 379, 431, 492, 503, 506, 509, 510, 554, 577, 582, 695, 697, 751, 774, 851, 862, 867, 923, 945, 951, 973, 997, 1016, 1021, 1040, 1042, 1050, 1059, 1061, 1065, 1125, 1130, 1161, 1181, 1182], "unif": [129, 583], "leftov": 129, "gettim": 129, "defer": [129, 162, 464, 823, 845], "timestamp": [129, 227, 237, 257, 286, 290, 291, 312, 314, 316, 318, 324, 466, 746, 786, 887, 907, 941, 992], "sinkfil": 129, "sinkmock": 129, "usabl": [129, 250, 296, 408, 487, 538, 693, 932], "sensorconfig": [129, 142, 317], "sensorvalu": [129, 130, 132, 503, 517], "runtime_error": [129, 508, 509, 520, 522, 523, 524, 542, 756], "logger_suit": 129, "loggerbasictest": 129, "sensor_values_suit": 129, "sensor_config_suit": 129, "duplicate_sensor": 129, "outlook": [129, 142, 864], "prebuilt": [129, 929], "order": [129, 149, 155, 161, 167, 168, 172, 173, 182, 194, 195, 198, 200, 231, 237, 242, 252, 254, 257, 287, 304, 320, 383, 409, 420, 442, 454, 469, 484, 503, 558, 560, 567, 569, 632, 678, 776, 780, 796, 809, 825, 914, 922, 929, 931, 947, 986, 1011, 1027, 1047, 1095, 1105, 1178], "acquisitionloop": [129, 313, 317], "n_iter": 129, "doit": [129, 234, 489], "write_measur": [129, 313], "mockingsink": 129, "receiv": [129, 163, 182, 237, 240, 278, 307, 390, 506, 597, 695, 784, 796, 817, 825, 885, 922, 925, 931, 938, 946, 951, 973, 981, 996, 997, 1020, 1023, 1073, 1104, 1119, 1136], "yaml": 129, "ini": [129, 146, 167, 181, 365, 368, 1156], "fh2021_datalogg": [129, 130, 131, 132, 134, 778], "predecessor": [130, 132, 248, 256, 262, 306, 309], "sinklogg": [130, 132], "csvsink": [130, 313], "logfil": [130, 163, 201, 867, 918], "linksoben": 130, "rechtsunten": 130, "addmeasur": 130, "rememb": [130, 167, 168, 183, 190, 200, 221, 409, 442, 492, 618, 619, 653, 656, 693, 694, 742, 821, 825, 867, 882, 885, 904, 929, 938, 940, 1021, 1087, 1097], "csvname": [130, 235, 280, 466], "valuenam": 130, "_config": 130, "sensor_valu": 130, "getmeasur": 130, "rotat": [130, 163, 922, 947], "backup": [130, 168, 202, 467, 854, 856, 938, 1141], "fh2021_datalogger_csv_sink": [130, 134, 778], "boil": [131, 132, 135, 141, 778, 825], "pot": [131, 132, 135, 141, 778], "struct": [132, 165, 189, 223, 224, 240, 341, 425, 430, 436, 437, 438, 439, 442, 443, 446, 448, 450, 452, 456, 461, 462, 484, 489, 506, 541, 542, 586, 587, 592, 594, 596, 597, 617, 667, 668, 669, 670, 671, 672, 674, 675, 676, 677, 678, 679, 682, 684, 685, 686, 687, 694, 710, 713, 715, 716, 717, 718, 722, 727, 745, 746, 756, 758, 766, 767, 769, 775, 776, 777, 778, 784, 786, 789, 791, 793, 794, 796, 809, 813, 815, 817, 819, 821, 827, 828, 833, 835, 838, 842, 844, 845, 923, 925, 929, 948, 949, 961, 972, 983, 986, 992, 993, 996, 997, 1177], "sensor_config": 132, "getallmeasur": 132, "localhost": [132, 1134, 1139], "1883": [132, 1139], "transport": [132, 186, 238, 240, 539, 756, 1119, 1139], "sensor1": [132, 272, 489, 762, 764, 766, 768, 769], "sensor2": [132, 489, 762, 764, 766, 768, 769], "api": [132, 162, 169, 186, 209, 223, 250, 368, 372, 778, 781, 788, 796, 803, 807, 819, 921, 962, 974, 982, 985, 993, 1078, 1134, 1152, 1180, 1181], "burden": [132, 466, 599, 1025, 1157], "handmad": 132, "fedora": [132, 158, 167, 173, 174, 177, 191, 278, 330, 554, 778, 782, 785, 787, 790, 792, 795, 802, 804, 805, 806, 810, 816, 822, 826, 829, 834, 840, 843, 846, 881, 885, 921, 924, 1001, 1002, 1009, 1010, 1011, 1014, 1139, 1163], "mosquitto_new": 132, "mosquitto_connect": 132, "mosquitto_destroi": 132, "prohibit": [132, 594], "wide": [132, 169, 173, 380, 381, 857, 938, 993, 999], "iot": [132, 134, 142, 238, 278, 778], "broadcast": [132, 754, 923, 930, 972, 997, 1193], "flexibl": [132, 270, 475, 481, 495, 502, 516, 530, 582, 628, 778, 968, 983, 999, 1000, 1001, 1016, 1017, 1068, 1171], "fh2021_datalogger_mqtt_sink": [132, 134, 778], "percentag": [133, 137, 458], "show_percentag": [133, 137], "wire": [133, 922, 932, 1011], "connect": [133, 147, 162, 169, 182, 202, 214, 235, 278, 307, 354, 362, 363, 438, 756, 856, 918, 922, 923, 930, 931, 940, 945, 951, 965, 1132, 1134, 1139, 1151, 1179, 1191, 1193], "shown": [133, 167, 200, 348, 907, 993, 1136], "src_demo": [133, 137], "fh2021_boiling_pot_full_integr": [134, 778], "fh2021_boiling_pot_basic_integr": [134, 778], "logger": [134, 142, 291, 309, 313, 316, 746, 778], "fh2021_datalogger_integr": [134, 778], "fh2021_sensor_w1": [134, 778], "fh2021_mqtt_tkinter": [134, 136, 778], "subscrib": [134, 159, 238, 250, 778], "fh2021_libgpiod_switch": [134, 135, 778], "mockswitch": [135, 140, 141], "libgpiodswitch": 135, "tkinter": 136, "stackoverflow": [136, 357, 362, 440], "2400262": 136, "random": [136, 142, 180, 182, 198, 210, 222, 234, 235, 238, 242, 244, 247, 250, 255, 257, 260, 282, 291, 324, 330, 336, 340, 352, 357, 400, 487, 489, 494, 503, 529, 540, 550, 551, 552, 553, 555, 556, 557, 587, 740, 856, 931, 942, 961, 989, 1023, 1035, 1058, 1130, 1139], "pca9685": [137, 142, 278, 778, 921, 922, 928], "pwmchip0": [137, 922, 930], "pwm0": [137, 922, 930], "danc": [137, 168, 541, 845, 1015], "phase": [137, 210, 508, 522, 993, 1027], "cumbersom": [137, 164, 166, 201, 595, 618, 686, 730, 781, 967, 993, 1163], "percentagedisplai": 137, "round": [137, 162, 229, 234, 244, 254, 270, 275, 324, 326, 340, 481, 488, 489, 491, 493, 502, 503, 516, 530, 582, 778, 986, 1192], "hood": [137, 164, 999], "relationship": [137, 327, 357, 496, 529, 571, 653, 746, 968, 1001, 1015, 1031, 1035, 1129], "pwmdisplai": 137, "pwm_control": 137, "bit": [137, 141, 156, 161, 162, 164, 167, 169, 172, 173, 194, 195, 198, 205, 224, 235, 237, 238, 244, 268, 271, 277, 278, 281, 284, 298, 299, 317, 352, 357, 362, 368, 380, 386, 392, 398, 403, 410, 419, 426, 427, 432, 436, 439, 442, 443, 452, 456, 461, 462, 525, 539, 600, 684, 719, 722, 732, 742, 775, 776, 777, 778, 821, 825, 844, 855, 856, 880, 882, 884, 921, 922, 923, 925, 930, 932, 955, 983, 1000, 1009, 1019, 1059, 1123, 1136, 1171, 1176], "pwm5": 137, "visibl": [137, 141, 177, 203, 223, 289, 343, 390, 392, 394, 418, 420, 451, 452, 456, 461, 462, 526, 675, 778, 796, 929, 931, 993, 1064, 1092, 1132], "10000000": [137, 164, 237, 406, 969, 1025, 1033], "set_percentag": 137, "duti": [137, 922, 930], "duty_cycl": [137, 922, 930], "unbuff": 137, "automat": [137, 141, 150, 164, 166, 168, 169, 177, 212, 214, 218, 224, 231, 237, 247, 250, 254, 287, 289, 394, 403, 430, 447, 450, 454, 466, 495, 496, 585, 588, 653, 657, 695, 724, 763, 777, 778, 781, 796, 825, 929, 931, 958, 1020, 1073, 1080, 1085], "serv": [140, 166, 168, 415, 1129, 1157, 1191], "ground": [140, 930, 931], "mocksensor": [140, 142], "upstream": [141, 165, 168, 173, 177, 803], "sysfsgpioswitch": 141, "wherea": 141, "gpio20": 141, "voltag": [141, 922, 929], "constructur": 141, "proid": 141, "lifecycl": 141, "avg": [142, 250, 330, 447, 486, 503, 514, 533, 540, 762, 764, 766, 768], "lifetim": [142, 163, 221, 223, 240, 252, 395, 410, 419, 426, 432, 436, 437, 439, 443, 452, 456, 461, 462, 496, 589, 672, 684, 695, 722, 775, 777, 778, 1018], "averagingsensor": [142, 486, 514], "scheme": [142, 250, 296, 313, 316, 598, 1018, 1022], "constantsensor": [142, 486, 489, 494, 506, 507, 515, 527, 534, 540, 550, 551, 552, 553, 555, 556, 692, 740, 741, 742, 743, 1035, 1111], "meet": [142, 167, 169, 194, 442, 869, 1011, 1024], "liskow": [142, 492], "gcc": [142, 163, 164, 190, 210, 212, 231, 237, 247, 250, 350, 377, 379, 403, 420, 424, 442, 445, 446, 448, 458, 459, 467, 469, 568, 616, 619, 751, 825, 826, 862, 882, 947, 948, 949, 955, 956, 957, 958, 967, 970, 1000, 1011, 1013, 1014, 1015, 1016, 1017, 1049, 1165, 1171], "cycl": [142, 224, 259, 464, 466, 710, 741, 755, 777, 778, 921, 922, 930, 962, 976, 982], "todai": [142, 163, 214, 222, 238, 271, 288, 304, 317, 320, 366, 392, 1123, 1178, 1181], "minut": [142, 162, 168, 169, 194, 198, 201, 238, 931, 1123, 1139], "suppos": [142, 177, 198, 254, 342, 506, 803, 825, 842, 864, 922, 970, 1117, 1156], "deploi": [142, 174, 202, 357, 362, 482, 815, 852, 853, 930, 931, 936, 938, 942], "leddisplai": 142, "pwmcontrol": 142, "minor": [142, 169, 173, 231, 237, 247, 250, 280, 784, 791, 856], "tweak": [142, 1156], "standup": 142, "followup": [142, 245, 306, 309, 527, 1112], "bonu": 142, "donat": [142, 923], "relai": 142, "board": [142, 161, 163, 825, 929], "cooker": 142, "gapher": 142, "tape": 142, "coordin": [142, 538, 584, 586, 593, 594, 704, 947], "notic": [142, 161, 162, 164, 177, 231, 237, 247, 250, 450, 469, 470, 527, 774, 865, 969, 971, 1031, 1145], "wikipedia": [142, 179, 240, 454, 597, 931, 942, 986, 1018, 1136], "dir": [144, 195, 214, 222, 235, 244, 247, 254, 272, 275, 295, 296, 314, 336, 340, 342, 350, 431, 466, 467, 473, 478, 870, 1000, 1001, 1013, 1036, 1151, 1158], "wo": [144, 170, 180, 181, 189, 195, 197, 375, 1173, 1174, 1192], "jf": [144, 155, 169, 206, 207, 265, 282, 357, 362, 376, 506, 520, 800, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1181, 1186], "aon": 144, "biz": 144, "svn": [144, 158, 224, 375, 376], "recommend": [144, 173, 194, 202, 214, 247, 454, 607, 638, 825, 885, 930, 1078, 1132, 1140], "lokalen": 144, "fetch": [144, 163, 177, 825, 968, 996], "myremot": 144, "orig": [144, 165, 212], "stia": 144, "improv": [145, 454, 457, 469, 725, 740, 776, 1018], "stack": [145, 183, 184, 185, 192, 206, 207, 225, 231, 234, 237, 247, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336, 448, 454, 504, 588, 619, 739, 858, 862, 930, 955, 967, 1186], "hang": [145, 205, 584, 828, 851], "seo": [145, 837], "blog": [145, 158, 162, 165, 172, 177, 744], "i2": [145, 147, 152, 257, 292, 778], "kontron": [145, 154, 778], "smarc": [145, 154, 778], "proper": [146, 162, 190, 440, 800, 825, 957, 1042], "manifest": [146, 1011, 1159], "cfg": [146, 154, 330], "author_email": 146, "classifi": [146, 1078, 1125], "tox": 146, "travi": 146, "yml": 146, "upgrad": [146, 150, 151, 181, 778, 1151, 1158], "zip": [146, 154, 158, 222, 242, 248, 262, 275, 325, 330, 885, 891, 907], "zipfil": [146, 222], "99": [146, 172, 181, 195, 205, 212, 218, 221, 227, 234, 237, 242, 244, 247, 250, 254, 257, 260, 263, 272, 275, 279, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 352, 357, 362, 458, 986, 1062, 1097, 1127], "999": [146, 234, 237, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330], "whl": [146, 158, 1078, 1151], "uninstal": [146, 472, 1151, 1156], "pypa": 146, "sampleproject": 146, "devicetre": [147, 930], "signal": [147, 158, 159, 187, 289, 375, 458, 756, 778, 796, 817, 862, 921, 922, 930, 962, 967, 975, 983, 984, 989, 993, 1182, 1189, 1190, 1193], "audio_mck": 147, "i2s0_ck": 147, "i2s0_lrck": 147, "i2s0_sdout": 147, "alsa": [147, 165, 330], "tlv320dac3203irg": 147, "tlv320dac3203": 147, "drive": [147, 280, 444, 532, 930, 951, 1130], "suggest": [147, 161, 162, 164, 166, 168, 169, 177, 186, 194, 201, 202, 203, 204, 267, 269, 287, 289, 418, 1047, 1075, 1156], "tlv320aic32x4": 147, "compat": [147, 167, 183, 286, 593, 683, 699, 776, 781, 800, 1002, 1048, 1071, 1136, 1151, 1152], "tlv320aic31xxsw": 147, "tlv320aic31xx": 147, "wget": [148, 167, 169, 173, 292, 1011, 1013], "cdimag": 148, "amd64": [148, 214, 354, 398], "iso": [148, 222, 240, 241, 257, 260, 280, 302, 314, 318, 378, 466, 583, 599, 849], "netinst": 148, "img": [148, 183, 185, 453, 825, 929], "qcow2": 148, "virtualdebian": 148, "30g": [148, 169], "kvm": [148, 165], "hda": 148, "cdrom": 148, "2048": [148, 172, 237], "nic": 148, "sic": [148, 173], "box": [148, 152, 194, 922, 929, 1047], "deliveri": [149, 153, 162, 995, 998], "outcom": [150, 198, 203, 289, 825, 884, 885, 1007, 1079], "dirti": [150, 151, 164, 178, 424, 489, 778], "forget": [150, 155, 162, 163, 164, 238, 389, 392, 437, 466, 1132, 1138, 1157, 1176], "graphic": [150, 459, 860, 861, 930], "plug": [150, 163, 165, 488], "monitor": [150, 165, 179], "4k": [150, 164, 983, 992], "dual": [150, 152], "gnome": [150, 162, 167, 234, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336, 460, 825, 860, 916, 984], "applianc": [150, 164, 460], "x11": [150, 330], "wayland": [150, 167], "benchmark": 150, "glxgear": 150, "su": [150, 1013], "pect": 150, "cluster_project_xxx": [151, 778], "project_xxx_dirty_upgrad": [151, 778], "project_xxx_yocto_kernel": [151, 778], "bsp": [151, 778], "project_xxx_debian_config": [151, 778], "project_xxx_debian_kernel_packag": [151, 778], "finish": [151, 194, 213, 749, 778, 835, 1034], "project_xxx_audio_chip": [151, 778], "chip": [151, 180, 234, 778, 922, 926, 929, 947, 949, 983, 1080], "bringup": [151, 152, 778], "project_xxx_hardware_bringup": [151, 778], "project_xxx_wait_hardwar": [151, 778], "shot": [152, 169, 418, 682, 756, 776], "dac": 152, "massacr": [152, 181, 240, 357, 418, 424, 450, 474, 682, 1030], "distro": [152, 472, 1054, 1165], "bootload": [152, 161, 172, 460, 861, 929, 931], "oldconfig": [152, 163, 798, 805, 825, 826], "qemu": [152, 234, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336], "grub": [152, 172, 330], "stabl": [152, 169, 173, 464, 803, 825, 864, 983, 1015, 1017, 1078, 1152], "yoctoproject": 154, "v5": [154, 165], "bsp_smarc": 154, "sxal4_smarc": 154, "sxal_r1": 154, "0_combin": 154, "sxal4_5": 154, "sxal4": 154, "inc": [154, 165, 286, 441, 478, 479, 751, 970, 1033], "filesextrapaths_prepend": 154, "thisdir": 154, "linux_vers": 154, "linux_version_extens": 154, "linux_kernel_typ": 154, "kbranch": 154, "kmeta": 154, "lic_files_chksum": 154, "md5": 154, "bbea815ee2795b2f4230826c0c6b8814": 154, "srcrev_machine_pn": 154, "3604bc07c035939266d78d65084c6cd54ffc6d56": 154, "srcrev_meta_pn": 154, "8d42b14fe517ef036dc4e7b290f16d142f4f1d39": 154, "src_uri": 154, "bareclon": 154, "cach": [154, 158, 163, 289, 292, 330, 440, 454, 459, 460, 618, 635, 763, 907, 984, 1151, 1158, 1174], "destsuffix": 154, "scc": 154, "pv": 154, "srcpv": 154, "include_patch": 154, "patch": [154, 173, 174, 985, 1013, 1171], "compatible_machin": 154, "therebi": [155, 194, 690, 916, 996, 1042, 1080], "simplifi": 155, "fine": [155, 164, 169, 198, 469, 470, 585, 697, 699, 805, 835, 942, 946, 1014, 1031, 1043, 1052, 1058, 1073, 1136], "grain": [155, 169, 466, 469, 835, 1043, 1058], "surround": [155, 683, 724, 736], "cut": [155, 183, 201, 214, 254, 268, 277, 298, 299, 403, 438, 778, 815, 855, 869, 915, 918, 921, 931], "linewis": 155, "wherev": [155, 382], "obs studio": 156, "video edit": 156, "screen record": 156, "These": [156, 164, 166, 167, 231, 237, 247, 250, 469, 482, 798, 825, 929, 1001], "offici": [156, 198, 199, 202, 203, 204, 209, 582, 1013, 1161], "jonathan": [156, 358, 359, 763, 1171], "himself": [156, 931], "paus": [156, 164, 983, 996], "meanwhil": 156, "freez": [156, 1151, 1159], "photo": 156, "length": [156, 218, 221, 231, 237, 247, 250, 279, 286, 296, 318, 324, 336, 466, 538, 589, 601, 662, 796, 809, 821, 923, 925, 951, 961, 993, 1128, 1136, 1140, 1147], "grab": [156, 922, 930], "neil": 157, "patel": 157, "insight": [157, 161, 469, 1011, 1150], "consol": [157, 214, 860, 863, 918, 1102, 1182], "crawlabl": 157, "dn": [157, 166, 169, 234, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336, 1193], "domain": [157, 158, 168, 169, 174, 450, 464, 476, 984, 1122, 1125, 1191, 1193], "ipc": [157, 158, 159, 162, 374, 376, 776, 778, 921, 962, 990, 1191], "queue": [157, 158, 163, 172, 173, 180, 186, 206, 207, 209, 238, 266, 267, 269, 278, 290, 291, 312, 313, 316, 326, 506, 755, 777, 778, 819, 827, 845, 858, 862, 921, 962, 972, 976, 1186, 1190, 1191, 1192], "pydbu": 158, "openh": [158, 159, 180, 221], "traceback": [158, 184, 231, 237, 247, 250, 260, 280, 282, 296, 318, 1020, 1021, 1022, 1027, 1035, 1036, 1042, 1043, 1064, 1065, 1069, 1071, 1074, 1075, 1136, 1144, 1145, 1157], "recent": [158, 161, 164, 169, 184, 192, 231, 237, 247, 250, 260, 280, 282, 296, 318, 378, 825, 904, 1020, 1021, 1022, 1027, 1035, 1036, 1042, 1043, 1064, 1065, 1069, 1071, 1074, 1075, 1136, 1144, 1145, 1157], "oh_test": 158, "easysuit": 158, "oh_dbus_easysuit": 158, "easysuite_error": 158, "error_suit": 158, "dbusheatingerror": 158, "modulenotfounderror": [158, 275, 280, 1022], "research": [158, 161, 162, 275, 1129], "pygobject": 158, "714": [158, 237], "kb": [158, 164, 1158], "venv": [158, 195, 221, 231, 237, 247, 248, 250, 262, 292, 330, 364, 365, 907, 1077, 1110, 1123, 1138, 1150, 1156, 1158, 1159], "standalon": [158, 442, 695, 996, 1163], "ss_9wmug": 158, "__env_pip__": 158, "ignor": [158, 179, 191, 250, 296, 368, 404, 424, 454, 476, 484, 616, 619, 682, 697, 710, 732, 783, 867, 930, 955, 997, 1020, 1151], "9lrqmi4l": 158, "overlai": [158, 825, 929, 930], "locat": [158, 159, 163, 168, 173, 194, 231, 237, 247, 250, 254, 304, 320, 357, 375, 427, 440, 448, 454, 482, 504, 597, 617, 693, 741, 800, 825, 929, 930, 931, 951, 969, 993, 1000, 1020, 1127, 1144, 1178], "pycairo": 158, "cwd": [158, 330, 539, 776, 851, 862, 888, 907, 909, 913, 1001], "821": [158, 237], "py2": 158, "344": [158, 237, 250, 282, 296, 314, 324, 330, 336], "517": [158, 237, 282, 330], "tmpabab356k_in_process": 158, "build_wheel": 158, "tmpt1yod7mc": 158, "o4u45fjc": 158, "pycairo_33865a19ad6b4a719885f07926efe16d": 158, "bdist_wheel": [158, 1078], "build_pi": 158, "x86_64": [158, 165, 167, 214, 221, 330, 354, 377, 403, 541, 602, 798, 803, 1002, 1011], "cairo": 158, "pyi": 158, "build_ext": 158, "pkg": 158, "perhap": [158, 254, 794, 1131], "pkg_config_path": 158, "gobject": 158, "introspect": [158, 983], "cp39": 158, "linux_x86_64": 158, "lib64": [158, 190, 195, 221, 231, 237, 247, 250, 254, 330, 460, 470, 472, 477, 999, 1002, 1016, 1023, 1144, 1145, 1151, 1165], "_vendor": 158, "pep517": 158, "in_process": 158, "_in_process": 158, "tmpf2wjv23h": 158, "4rtfumdz": 158, "pygobject_beef4432e2454eb0b7facc57fadf42b8": 158, "pygtkcompat": 158, "generictreemodel": 158, "_signalhelp": 158, "_propertyhelp": 158, "_ossighelp": 158, "_option": 158, "_gtktemplat": 158, "_error": [158, 513], "_constant": 158, "keysym": 158, "pango": 158, "gio": 158, "gdkpixbuf": 158, "gdk": 158, "glib": 158, "gimarshallingtest": 158, "tmp56g_ixbz": 158, "bvay4iv4": 158, "pygobject_6777f13e15934fb2b13139399b143557": 158, "todo": [158, 203, 238, 266, 267, 370, 371, 540, 682, 763, 779], "summari": [158, 199, 489, 592, 741, 1156], "c1": [158, 172, 487, 601, 686], "misc": [158, 159, 181, 182, 341, 560, 794, 838, 1175], "w3school": 158, "howto": [158, 159, 796], "howto_css_image_transpar": 158, "asp": 158, "titelseit": 158, "mitt": 158, "howto_js_read_mor": 158, "subdir": [158, 340, 776, 1020], "gegen": [158, 1171], "clutter": [158, 191], "404": [158, 168, 237, 244, 282, 296, 314, 330, 340], "prio": [158, 200, 985, 986, 992], "beagleboard": [158, 163, 174], "repair": [158, 174, 234], "nand": [158, 174], "40w": [158, 174], "suck": [158, 159, 174], "disk": [158, 161, 162, 165, 169, 174, 453, 861, 862, 882, 911, 946, 947, 1016, 1073, 1171], "contact": [158, 1178], "ssl": [158, 169, 330, 1151], "certif": [158, 169, 172, 219, 1151], "070": [158, 682], "fortgeschritten": [158, 376, 1173], "700": [158, 237, 635, 743, 938], "lf": [158, 221, 520, 1073], "descr": [158, 242, 318, 336], "050": [158, 682, 995, 996], "080": [158, 662, 682], "020": [158, 237, 278, 662, 682, 991, 992, 995, 996], "060": [158, 159, 198, 365, 682], "_hidden": 158, "010": [158, 324, 682, 884, 988, 989, 991, 992, 995, 996], "190": [158, 195, 212, 221, 234, 237, 242, 244, 247, 250, 254, 257, 260, 263, 272, 275, 282, 292, 296, 302, 314, 318, 330, 336, 340], "propos": [158, 450, 528], "030": [158, 682, 692, 742, 991, 992, 995, 996], "040": [158, 324, 682, 991, 992, 995, 996], "central": [159, 191, 224, 313, 316, 378, 422, 482, 776, 1016, 1061, 1073, 1179], "rstjinja": 159, "105": [159, 181, 195, 205, 210, 212, 218, 231, 234, 237, 242, 244, 250, 254, 257, 260, 263, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 352, 357, 362, 987], "110": [159, 166, 181, 195, 205, 212, 218, 227, 231, 234, 237, 242, 244, 250, 254, 257, 260, 272, 275, 279, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 352, 522, 523, 682, 884, 991, 992], "cxx_class_templ": [159, 582, 778], "cxx_dynamic_memori": [159, 582, 778], "cxx_global_initi": [159, 582, 778], "cxx_inheritance_virtu": [159, 582, 778], "cxx_ownership_raii": [159, 582, 778], "cxx_stl_container_intro": [159, 582, 778], "cxx_templates_vs_interfac": [159, 582, 778], "maj": [159, 782], "min": [159, 275, 760, 782, 1128], "cdev": [159, 781, 782, 784, 788, 789, 794], "fop": [159, 782, 789], "devtmpf": [159, 781, 782, 827], "dynam": [159, 189, 197, 198, 231, 237, 247, 248, 250, 293, 375, 439, 443, 452, 456, 461, 462, 472, 503, 540, 571, 580, 582, 589, 654, 656, 659, 660, 679, 684, 693, 722, 746, 762, 763, 764, 775, 777, 778, 782, 787, 792, 795, 797, 802, 806, 816, 820, 822, 827, 829, 834, 840, 843, 846, 851, 862, 921, 970, 972, 981, 999, 1000, 1039, 1053, 1074, 1123, 1177, 1181], "sysprog_ev": 159, "sysprog_ipc": 159, "sysprog_sign": 159, "unittest_gtest_bas": [159, 778, 1161], "unittest_gtest_fixtur": [159, 778, 1161], "brows": [159, 161, 177, 864, 930], "blender": 159, "corda": 159, "figclass": 159, "homebrain": [159, 280, 292, 907, 908], "literalinclud": 159, "within": [159, 164, 240, 250, 296, 375, 531, 532, 536, 541, 586, 657, 720, 789, 922, 1034, 1051, 1063, 1147], "045": [159, 278, 324], "tex": 159, "055": 159, "056": 159, "910": [159, 237, 907], "glt": 159, "virtmem": 159, "fart": 159, "ungern": 159, "lost": [159, 169, 234, 240, 451, 560, 682, 741, 938, 972, 975, 992, 1034, 1156, 1157, 1163], "he": [159, 163, 177, 185, 194, 198, 201, 214, 219, 222, 224, 245, 248, 271, 290, 291, 295, 312, 317, 695, 697, 732, 735, 940, 973, 986, 997, 1039, 1067, 1123, 1149], "friend": [161, 162, 209, 230, 266, 267, 269, 278, 289, 326, 327, 460, 523, 600, 755, 756, 777, 778, 796, 817, 922, 1165], "alia": [161, 166, 214, 240, 436, 439, 443, 452, 456, 461, 462, 470, 684, 722, 775, 777, 778, 885, 886, 1013], "rm": [161, 163, 167, 168, 202, 204, 357, 362, 932, 942, 1158], "rf": [161, 163, 885, 895, 1158], "variat": [161, 744, 830, 867], "thereof": [161, 278, 286, 487, 604, 1039], "happili": [161, 162, 240, 450, 599], "stage3": 161, "decad": [161, 169, 186, 825, 929, 931, 942, 1021, 1179], "busybox": [161, 162], "initramf": [161, 850], "resid": [161, 164], "flash": [161, 164, 169, 460, 863, 922, 983], "eras": [161, 519, 577, 638, 743, 772, 882], "hit": [161, 163, 164, 183, 186, 224, 776, 885, 914, 917, 1151], "sole": 161, "liter": [161, 184, 200, 205, 212, 222, 230, 231, 235, 242, 247, 250, 254, 257, 266, 267, 275, 282, 296, 314, 318, 324, 326, 330, 336, 349, 353, 357, 384, 392, 399, 448, 503, 518, 538, 682, 695, 825, 997, 1054, 1067, 1071], "told": [161, 164, 470, 509, 922], "reboot": [161, 163, 180, 825, 886, 929, 930, 931], "fatal": [161, 189, 468, 478, 825, 1164], "saw": [161, 164, 194, 223, 368, 405, 586, 955, 957], "115200": 161, "8n1": 161, "remaind": [161, 162, 165, 167, 190, 194, 278, 803, 825, 922, 930, 1001], "recov": [161, 181], "fauxpa": 161, "explan": [161, 164, 190, 194, 201, 224, 255, 315, 357, 458, 479, 560, 760, 825, 856, 922, 930, 957, 987, 992, 1126, 1129, 1158], "annot": [161, 222, 271, 311, 459, 583, 1123], "beagl": 161, "omap": 161, "rom": 161, "stage": [161, 177, 223, 1130], "processor": [161, 162, 221, 222, 235, 398, 442, 635, 746, 825, 830, 967, 984, 999], "sram": 161, "dram": 161, "latter": [161, 164, 983, 1023, 1063, 1130], "abil": [161, 682], "press": [161, 805, 842, 885, 922], "wrote": [161, 164, 365, 1176], "ones": [161, 177, 184, 186, 250, 288, 296, 386, 454, 930, 931, 1056, 1140], "revis": [161, 165, 168, 265, 583, 681, 1176], "slightli": [161, 173, 194, 223, 240, 241, 560, 1051], "season": 161, "c4": [161, 172], "valuabl": [161, 458, 852, 853, 1015, 1017, 1023], "c3": [161, 165, 172], "angstrom": 161, "mlo": 161, "ift": 161, "fdisk": [161, 1171], "obvoiusli": 161, "fat32": [161, 825], "fat16": 161, "partit": [161, 162, 163, 250, 296, 825], "mount": [161, 163, 278, 363, 781, 825, 856, 965, 992, 993, 1002, 1011, 1013], "sector": [161, 234, 1080], "intend": [161, 167, 168, 169, 179, 214, 231, 237, 247, 250, 469, 798, 930, 957, 958, 1078], "slot": [161, 961, 1042], "partli": [161, 163, 446], "meaning": [161, 169, 807], "scr": 161, "omap3": 161, "mmc1": 161, "arch": [161, 165, 805, 825, 826, 929], "mach": [161, 223, 228, 244], "omap2": 161, "omap3beagl": 161, "Near": 161, "offset": [161, 776, 796, 954, 1016], "128k": 161, "0x80000": 161, "byte": [161, 164, 177, 179, 181, 231, 237, 247, 250, 257, 260, 275, 296, 302, 318, 324, 330, 336, 342, 357, 380, 388, 398, 399, 430, 433, 442, 445, 451, 455, 489, 584, 589, 592, 597, 604, 617, 741, 776, 839, 856, 862, 885, 916, 923, 929, 946, 947, 948, 951, 953, 955, 956, 957, 958, 981, 984, 989, 992, 996, 1048, 1054, 1059, 1073, 1136], "reli": [161, 194, 731, 835, 1054], "ecc": [161, 165], "nandecc": 161, "hw": 161, "80000": 161, "0x0": [161, 929], "0x60000": 161, "unlik": [161, 214, 265, 746, 753, 922, 1062, 1141, 1181], "intermedi": [161, 182, 487, 999, 1048], "nevertheless": [161, 162, 169, 281, 284, 825], "0x20000": 161, "fatload": 161, "80200000": 161, "20392": 161, "131072": [161, 783], "40000": 161, "0x40000": 161, "60000": 161, "incarn": [161, 169, 424, 730], "choic": [161, 162, 163, 186, 222, 235, 254, 454, 464, 474, 539, 587, 656, 741, 929, 983, 1011, 1139], "finger": [161, 172, 454, 864, 922], "sw": [161, 537], "0x1e0000": 161, "1e0000": 161, "0x240000": 161, "275928": 161, "1966080": 161, "prompt": [161, 169, 172, 182, 214, 225, 253, 262, 857, 885, 887, 938, 1048, 1049, 1085, 1089, 1102, 1108, 1158], "280000": 161, "400000": [161, 930, 1128], "month": [162, 224, 234, 282, 286, 399], "met": [162, 446, 931], "microcontrol": [162, 415, 922, 930, 983], "clue": 162, "minim": [162, 164, 173, 182, 448, 454, 607, 907, 1011, 1022], "vxwork": 162, "ce": [162, 172, 1013], "quit": [162, 164, 167, 289, 425, 440, 442, 660, 675, 826, 885, 886, 917, 922, 930, 973, 996, 1011], "blob": [162, 278, 289, 377, 560, 825], "presenc": [162, 164, 476, 1181], "probabl": [162, 168, 194, 254, 284, 349, 475, 480, 585, 690, 825, 837, 885, 931, 983, 1059, 1073, 1136, 1139], "sooner": [162, 177, 450, 828], "chose": [162, 173, 240, 676, 909, 942, 1011], "opinion": [162, 173, 194, 248, 776, 864, 1031], "unless": [162, 244, 250, 254, 296, 654, 687, 851, 907, 968, 1054, 1073, 1144], "hire": 162, "cheap": [162, 164, 467, 597, 690, 695, 731, 732, 830, 1176], "misl": 162, "posix": [162, 164, 187, 748, 755, 757, 777, 778, 862, 921, 951, 962, 968, 972, 974, 982, 990, 1073, 1190, 1191], "tell": [162, 163, 164, 167, 168, 169, 177, 191, 238, 447, 618, 851, 931, 999], "pitfal": [162, 246, 266, 267, 269, 326, 327, 357, 618, 697, 722, 723, 724, 742, 777, 778, 922, 1176], "seen": [162, 164, 169, 182, 195, 223, 390, 409, 447, 482, 492, 796, 821, 850, 970, 1130, 1134, 1168], "didn": [162, 163, 164, 173, 194, 198, 214, 224, 248, 317, 825, 904, 956, 1073, 1075, 1123, 1127], "rtoss": 162, "commonli": [162, 231, 254, 281, 284, 496, 757, 776, 811, 845, 887, 951, 999, 1148], "tear": [162, 267, 489, 538, 539, 540, 541, 602, 741, 794, 999, 1163], "notif": [162, 167, 186, 754, 926, 997], "dread": 162, "segment": [162, 164, 422, 531, 597, 720, 740, 983, 993], "fault": [162, 164, 370, 371, 422, 597, 740, 983], "arriv": [162, 817, 842, 981, 996], "handler": [162, 231, 237, 247, 250, 289, 296, 309, 458, 805, 807, 835, 967, 983, 995, 998], "pai": [162, 286, 453, 476, 856], "attent": [162, 218, 234, 242, 388, 409, 411, 440, 459, 469, 619, 624, 693, 724, 727, 817, 985, 1020, 1146, 1168], "safe": [162, 231, 237, 238, 247, 250, 260, 450, 690, 732, 734, 742, 756, 938, 943, 967, 970, 975, 998], "pthread_": 162, "trick": [162, 219, 229, 232, 235, 259, 271, 295, 301, 425, 1123], "asynchron": [162, 231, 237, 247, 250, 317, 343, 946, 963, 966, 996, 997], "sigwait": [162, 996], "sigwaitinfo": 162, "sigtimedwait": 162, "caught": [162, 231, 237, 247, 250, 457, 607], "synchron": [162, 234, 240, 250, 257, 260, 275, 282, 290, 291, 292, 296, 312, 313, 316, 318, 324, 330, 336, 749, 755, 777, 778, 916, 921, 946, 962, 968, 969, 976, 982, 983, 993, 995, 998, 1181], "signalfd": [162, 951, 989, 1190, 1191], "Its": [162, 164, 167, 538, 914, 984], "emb": 162, "among": [162, 186, 194, 231, 237, 247, 250, 447, 741, 870, 929, 951, 957, 981, 997, 1047, 1131, 1132, 1156, 1179], "epol": [162, 965, 989, 993, 1191, 1193], "err": [162, 201, 221, 286, 327, 541, 638, 682, 684, 722, 730, 742, 775, 777, 778, 789, 819, 821, 856, 923, 925, 929, 1042, 1145], "naiv": [162, 182, 237, 240, 304, 320, 442, 475, 484, 576, 578, 592, 659, 740, 774, 833, 967, 987, 998, 1028, 1029, 1130, 1135, 1168, 1178], "intra": 162, "oss": 162, "synchronis": [162, 967, 1192], "pthread_mutex_init": [162, 754, 970], "critical_sect": 162, "closest": [162, 690], "pendant": [162, 577, 784], "expir": [162, 835, 949, 981, 983, 997], "sometim": [162, 177, 254, 414, 430, 454, 591, 681, 856, 863, 956, 968, 1013, 1019, 1050, 1156], "setitim": 162, "timer_cr": [162, 983], "drawback": [162, 424, 441, 446, 451, 495, 618, 938], "unfortun": [162, 163, 186, 223, 509, 922, 1141], "straightforward": [162, 241, 704, 742, 793, 1025, 1042, 1060, 1128], "nanosleep": [162, 756, 983], "timerfd_cr": [162, 949, 951, 1190, 1191], "conjunct": 162, "emul": [162, 267, 269, 287, 442, 451, 457], "stupid": [162, 164, 221, 237, 240, 242, 399, 424, 430, 448, 454, 464, 690, 745, 842, 904, 946, 1027, 1073], "screw": [162, 644], "otherwis": [162, 163, 248, 250, 254, 291, 296, 324, 340, 348, 403, 414, 440, 450, 600, 638, 695, 724, 731, 746, 752, 796, 809, 817, 825, 833, 852, 853, 938, 967, 972, 978, 993, 1022, 1051, 1054, 1071, 1073, 1092, 1103, 1145, 1168], "millisecond": [162, 231, 237, 247, 250, 743, 757, 833, 930], "etern": 162, "nowadai": [162, 164, 166, 167, 223, 290, 291, 312, 380, 398, 800, 835, 860, 863, 951, 997, 1136], "moder": [162, 169, 229], "tri": [162, 163, 164, 173, 177, 183, 194, 242, 340, 368, 539, 669, 752, 776, 922, 931, 984, 1176], "achiev": [162, 221, 254, 660, 981, 1034], "albeit": [162, 504, 730, 978, 1059, 1176], "lose": [162, 213, 224, 244, 247, 250, 260, 324, 330, 336, 1058], "wealth": 162, "socket": [162, 180, 201, 271, 776, 778, 858, 861, 921, 946, 950, 951, 962, 993, 997, 1151, 1190, 1191, 1193], "uart": [162, 446, 858], "previous": [162, 231, 237, 247, 250, 254, 997, 1176], "regardless": [162, 425, 930], "surpris": [162, 164, 278, 448, 653, 1018, 1042], "alon": [162, 163, 164, 177, 287, 289, 454, 458, 699, 1063, 1130, 1181], "advantag": [162, 446, 597], "regularli": [162, 451], "buffer": [162, 250, 275, 290, 291, 296, 312, 316, 386, 515, 520, 695, 841, 869, 943, 946, 947, 948, 949, 957, 996, 1073], "ttys0": 162, "stream": [162, 167, 169, 209, 235, 250, 275, 583, 600, 869, 923, 981, 1027, 1148, 1193], "eventfd": [162, 951, 989, 1190, 1191], "complic": [162, 163, 172, 201, 244, 254, 396, 415, 454, 479, 610, 693, 699, 719, 784, 821, 923, 931, 996, 999, 1027, 1139, 1178, 1181], "unregist": [162, 491], "callback": [162, 198, 231, 237, 247, 250, 366, 710, 835, 844, 1139], "comfort": [162, 214, 360, 734, 929, 1148], "excit": 162, "hundr": [162, 164, 169, 272, 275, 951], "panel": 162, "deal": [162, 238, 448, 594, 825, 931, 1052, 1125, 1136, 1176, 1181], "touch": [162, 168, 194, 231, 237, 247, 250, 466, 870, 879, 884, 929, 952, 958, 1181], "stai": [162, 186, 198, 229, 996], "harder": [162, 746, 932], "buggi": [162, 592, 720, 732, 983], "examin": [162, 164, 450, 600, 741, 768, 885, 978], "debugg": [162, 231, 237, 247, 248, 250, 487, 1174, 1189], "gdb": [162, 214, 375, 1174], "spidev": 162, "bluntli": 162, "whether": [162, 182, 250, 254, 275, 286, 296, 389, 453, 544, 589, 622, 776, 821, 930, 1102, 1108, 1151], "deadlin": 162, "howev": [162, 172, 191, 254, 483, 798, 800, 922, 965, 967], "sched_setschedul": [162, 179, 986], "pthread_attr_setschedparam": [162, 986], "runnabl": [162, 823, 984, 985, 986], "prioriti": [162, 179, 250, 817, 823, 825, 827, 862, 984, 985, 993, 1192], "anymor": [162, 168, 173, 186, 223, 240, 466, 470, 599, 693, 695, 704, 728, 741, 742, 746, 860, 929, 972, 983, 985, 1016, 1054, 1056, 1145], "potenti": [162, 467, 597, 704, 752, 942, 1022, 1034, 1079], "harm": [162, 418, 446, 742, 744, 1022], "polici": [162, 167, 179, 330, 466, 482, 656, 660, 803, 984, 985, 1192], "sched_fifo": [162, 985, 986, 1171], "sched_rr": [162, 164, 986, 1171], "robin": [162, 229, 986, 1192], "manner": [162, 424, 825, 929], "troubl": 162, "trigger": [162, 368, 807, 811, 929, 1042, 1132], "certain": [162, 194, 201, 445, 450, 508, 531, 532, 710, 732, 821, 856, 869, 972, 999, 1047], "circumst": [162, 984], "deadlock": [162, 560, 752, 753, 817, 830, 970, 984, 985], "inspect": [162, 164, 231, 237, 247, 250, 268, 277, 288, 298, 313, 778, 855, 921, 942], "deploy": [162, 194, 198, 219, 305, 321, 471, 477, 778, 800, 1123], "uclibc": 162, "investig": 162, "spend": [162, 169, 183, 194, 198, 219, 222, 245, 271, 295, 317, 453, 1123], "browser": [163, 169, 181, 192, 225], "significantli": [163, 996], "decreas": [163, 164, 442, 885, 987], "week": [163, 178, 444], "forth": [163, 455, 856, 929, 942, 1054], "spare": 163, "volum": 163, "undertak": 163, "indirectli": [163, 741], "pocket": 163, "purchas": [163, 254], "corsair": 163, "120": [163, 181, 195, 205, 212, 227, 231, 234, 237, 242, 244, 247, 250, 254, 257, 260, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 601, 682, 991, 992], "overhaul": 163, "reserv": [163, 169, 186, 198, 234, 250, 275, 296, 397, 619, 789, 821, 881, 986, 1080], "livecd": 163, "ssd": [163, 453, 947], "vanish": 163, "gone": [163, 184, 234, 710, 742, 805, 828, 886, 975], "nowher": [163, 302, 552], "depart": 163, "unusu": 163, "cope": 163, "bet": 163, "themselv": [163, 424, 464, 504], "aggress": 163, "harddisk": 163, "treatment": [163, 254, 885, 1016], "proud": 163, "120g": 163, "fresher": 163, "plenti": [163, 165, 458], "4g": [163, 164], "shouldn": [163, 682, 825, 1071], "hibern": 163, "fstab": [163, 330], "room": [163, 169, 198, 313, 484, 635, 819, 931, 1136, 1179], "swapon": 163, "sda1": 163, "swapoff": 163, "overal": 163, "mitig": [163, 819], "perfect": [163, 169, 177, 223, 271, 326, 378, 635, 691, 722, 745, 777, 778, 1025, 1078, 1123, 1154, 1176], "portag": [163, 825, 914], "openoffic": 163, "tmpdir": [163, 288, 317, 466, 541, 776, 1020, 1118, 1120, 1156], "500m": 163, "2g": 163, "6g": 163, "throwawai": 163, "1tb": 163, "sdc1": [163, 856], "mnt": [163, 856, 864, 993], "emerg": 163, "umount": 163, "runnung": 163, "offend": [163, 165, 167, 177, 509, 983], "candid": [163, 182, 223, 454, 699, 719, 732, 1022, 1094], "destin": [163, 405, 472, 577, 618, 693, 941, 948], "app": [163, 167, 983, 1135], "admin": [163, 169, 357, 936, 940], "cron": [163, 868, 1052], "rc": [163, 330, 922], "grep": [163, 167, 173, 202, 204, 214, 268, 277, 298, 299, 778, 844, 849, 855, 860, 862, 867, 869, 881, 912, 915, 918, 921, 929, 931, 932, 968, 978, 983, 1139, 1180, 1182, 1187], "tune": [163, 164, 173, 454, 852, 853, 875, 877, 879, 886, 934, 1051], "exce": [163, 198, 786, 983, 993], "20m": [163, 922, 981], "compresscmd": 163, "bzip2": [163, 173, 202, 204, 850, 851, 1013], "compressopt": 163, "compressext": 163, "missingok": 163, "sharedscript": 163, "postrot": 163, "reload": [163, 202], "endscript": 163, "adjac": [163, 364, 741, 796], "sda": [163, 929, 931], "cfq": 163, "noop": [163, 924], "believ": [163, 169, 922, 931, 959], "r5": 163, "menuconfig": [163, 173, 825, 929, 1013], "xorg": [163, 167], "emerge_log_dir": 163, "unionf": 163, "fuse": [163, 165, 330, 932, 942], "persist": [163, 179, 394, 398, 406, 476, 886, 930], "held": [164, 306, 309, 375, 763, 783, 817, 830], "compani": [164, 167, 168, 169, 204, 214, 254, 280, 291, 306, 464, 482, 483, 864, 1078, 1125], "z\u00fcrich": [164, 374], "hardcor": 164, "attitud": [164, 169, 288], "began": 164, "dive": [164, 281, 284, 1137], "inevit": [164, 375, 734], "came": [164, 231, 235, 237, 247, 250, 882, 888, 929, 1054, 1106, 1176], "mb": [164, 863], "heap": [164, 437, 489, 589, 592, 644, 724, 741, 786, 811], "128": [164, 167, 181, 195, 205, 212, 218, 221, 227, 231, 234, 237, 240, 242, 244, 247, 250, 254, 257, 260, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 453, 597, 929, 957, 1014, 1136], "dead": [164, 173, 454], "attempt": [164, 169, 192, 250, 376, 690, 692, 763, 1151], "reject": [164, 177], "proof": [164, 186, 442, 453, 457, 487, 571], "evid": 164, "fortun": [164, 169, 454, 466, 695, 1128], "overnight": [164, 229], "night": [164, 198], "instinct": 164, "defens": [164, 396, 397], "grow": [164, 618, 862, 1015], "growth": [164, 234, 1080], "handi": [164, 1187], "tricki": 164, "alloca": 164, "essenti": [164, 191, 240, 287, 289, 672], "stdio": [164, 223, 235, 379, 380, 382, 386, 388, 390, 421, 447, 467, 593, 599, 862, 882, 929, 947, 948, 949, 951, 952, 955, 956, 957, 958, 970, 983, 989, 992, 996, 997, 999, 1002, 1011, 1015, 1017, 1073], "stdlib": [164, 437, 451, 929, 947, 948, 949, 980, 989, 996], "size_t": [164, 437, 450, 485, 565, 574, 577, 620, 625, 631, 635, 641, 662, 676, 688, 693, 704, 705, 706, 707, 708, 772, 773, 774, 776, 784, 811, 943, 951, 961, 993, 996], "stack_growth": 164, "argc": [164, 431, 489, 528, 929, 955, 956, 957, 958, 963, 966, 980, 996, 1017, 1163, 1168], "mem": [164, 180, 574, 789], "fprintf": [164, 412, 425, 943, 983, 1017], "stderr": [164, 213, 222, 231, 237, 247, 250, 260, 268, 277, 278, 298, 299, 350, 357, 412, 425, 469, 778, 855, 866, 867, 921, 943, 951, 983, 1017, 1052, 1065, 1073, 1182], "atoi": [164, 959], "printf": [164, 173, 223, 235, 379, 380, 382, 388, 390, 394, 420, 421, 424, 425, 447, 467, 593, 599, 862, 882, 945, 949, 989, 996, 997, 999, 1011, 1015, 1017, 1062, 1068], "getpid": [164, 996], "memset": [164, 948, 983, 992, 996], "24299": 164, "vsz": 164, "rss": 164, "3944": [164, 237], "986": [164, 234, 237, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336, 916], "188": [164, 195, 212, 221, 234, 237, 242, 244, 247, 250, 254, 257, 272, 275, 282, 292, 296, 302, 314, 318, 330, 336, 340], "320": [164, 237, 247, 250, 275, 282, 296, 302, 314, 330, 336, 340], "exact": [164, 214, 254, 354, 418, 729, 746, 798, 800, 1151], "glibc": [164, 805, 1011, 1013, 1014, 1171], "presum": 164, "assum": [164, 250, 254, 296, 448, 595, 756, 803, 885, 929, 931, 942, 1014, 1083, 1158], "writabl": [164, 448, 870, 885, 957], "eater": [164, 987], "1k": 164, "furthermor": 164, "188k": 164, "anyth": [164, 168, 169, 194, 221, 237, 241, 264, 286, 287, 364, 464, 475, 479, 496, 531, 606, 675, 695, 772, 773, 774, 922, 934, 942, 946, 952, 981, 1015, 1020, 1021, 1022, 1065, 1073, 1128, 1145, 1149], "proce": [164, 172, 251, 284, 363, 541], "million": [164, 200, 482, 660, 825, 1025], "24908": 164, "4800": [164, 237], "1200": [164, 237, 635], "1044": [164, 237], "1376": [164, 237], "grown": [164, 167], "reflect": [164, 825, 984, 1014, 1015, 1042], "greedi": 164, "24960": 164, "8mb": 164, "barrier": [164, 440, 741, 756, 809], "ulimit": [164, 862], "8192": [164, 237, 425, 862], "8000000": 164, "25018": 164, "11632": [164, 237], "2908": [164, 237], "7876": [164, 237], "8236": [164, 237], "demand": [164, 167, 184, 284, 448, 825, 876, 878, 1027, 1062], "magic": [164, 166, 330, 431, 466, 710, 784, 825, 1027, 1156], "bother": [164, 942, 946], "pthread_attr_setstacks": 164, "2mb": 164, "rlimit_stack": 164, "pthread_creat": [164, 968, 983], "nthread": 164, "act": [164, 221, 549, 619, 931, 942, 945, 997, 1033], "shut": [164, 793, 825], "sit": [164, 240, 363, 494, 869, 929, 930, 940, 942, 946, 996, 1139], "stack_limit": 164, "thread_func": 164, "arg": [164, 181, 195, 221, 222, 231, 235, 237, 247, 248, 250, 254, 260, 275, 296, 314, 467, 784, 968, 1020, 1024, 1045, 1052, 1075, 1165, 1171], "pthread_attr_t": [164, 968, 986], "attr": [164, 179, 968, 970, 972, 986, 992, 993], "pthread_attr_init": 164, "ld": [164, 330, 473, 477, 568, 586, 659, 803, 825, 852, 853, 870, 883, 907, 989, 999, 1000, 1011, 1016], "strerror": [164, 237, 943, 952, 983, 996], "p_attr": 164, "pthread_t": [164, 968, 983, 986], "rv": [164, 210, 272, 330, 336], "31524": 164, "825840": 164, "206460": 164, "819936": 164, "1404": [164, 237], "800mb": 164, "writeabl": [164, 881, 904], "worth": [164, 825, 931, 1051, 1122, 1176, 1191], "eaten": 164, "field": [164, 167, 169, 181, 186, 192, 228, 235, 242, 250, 260, 263, 280, 282, 286, 296, 330, 349, 368, 381, 764, 766, 860, 865, 884, 918, 1069, 1080, 1101, 1130, 1131], "alleg": 164, "wast": [164, 172, 173, 450, 737, 754, 1136], "moment": [164, 198, 450, 482, 484, 678, 727], "771": [164, 237, 324], "766604": 164, "aha": [164, 184, 195, 342, 788, 805, 930, 1136, 1163], "hasn": [164, 167, 168, 177, 819, 842, 1053], "effect": [164, 168, 189, 358, 359, 394, 444, 454, 506, 653, 780, 809, 881, 886, 929, 941, 942, 984, 998, 1023, 1035, 1056, 1102, 1130, 1150, 1158], "4096": [164, 181, 237, 776, 852, 853, 922, 929, 930, 931, 942, 965, 992], "1026": [164, 237], "invalid": [164, 205, 212, 242, 247, 248, 250, 254, 257, 275, 282, 289, 296, 314, 318, 324, 330, 336, 353, 368, 451, 509, 520, 523, 577, 592, 675, 676, 677, 690, 693, 699, 740, 742, 756, 783, 972, 1075], "insist": [164, 194, 599, 1165], "pthread_stack_min": 164, "16384": [164, 169, 237, 929, 930, 931], "1125": 164, "7840": [164, 237], "1960": [164, 237], "1936": [164, 237], "risk": [164, 482, 922, 940, 985, 1050], "512": [164, 237, 282, 314, 330, 455, 862], "513": [164, 237, 282, 330, 741], "2212": [164, 237], "4210920": 164, "1052730": 164, "4205016": 164, "4576": [164, 237], "misunderstand": [164, 750], "overcommit": 164, "kept": [164, 169, 194, 200, 425, 440, 862, 923, 999, 1027], "plai": [164, 172, 214, 442, 460, 825, 922, 1040, 1043, 1130], "stutter": 164, "4353": 164, "red": [164, 165, 210, 212, 218, 226, 238, 241, 254, 286, 350, 638, 922, 1049, 1139], "chili": 164, "pepper": 164, "overli": [164, 868, 1026], "adob": 164, "riddanc": 164, "8462": [164, 237], "3284640": 164, "821160": 164, "3278736": 164, "3064580": 164, "lie": [164, 732], "constraint": [164, 172, 699, 702, 704, 931], "800": [164, 205, 237, 635, 1083], "4000000": 164, "11338": [164, 237], "900": [164, 237, 635], "12156": [164, 237], "shrink": [164, 618], "inadvert": 164, "3mb": 164, "nois": 164, "henc": [164, 169, 541, 595, 639, 947, 951, 999], "14386": [164, 237], "child_stack": 164, "0x7f5813f22ff0": 164, "clone_vm": 164, "clone_f": 164, "clone_fil": 164, "clone_sigha": 164, "14413": 164, "mmap": [164, 991, 993, 1190], "8392704": 164, "prot_read": [164, 992], "prot_writ": [164, 992], "map_priv": [164, 992], "map_anonym": 164, "map_stack": 164, "0x7fd14f9af000": 164, "mprotect": 164, "0x7fd14f1ae000": 164, "prot_non": 164, "placehold": [164, 510, 542, 697, 746, 931], "proc": [164, 234, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336, 788, 805, 807, 809, 825, 826, 951, 968, 992, 996, 1189], "7fd14f1af000": 164, "7fd14f9af000": 164, "00000000": 164, "7fd14f9b0000": 164, "topmost": [164, 1156], "pseudo": [164, 182], "redund": [164, 425, 454], "smap": 164, "7fd14f1ae000": 164, "pss": 164, "shared_clean": 164, "shared_dirti": 164, "private_clean": 164, "private_dirti": 164, "referenc": [164, 182, 205, 313, 316, 481, 599, 741, 742, 743, 959, 1165], "anonym": [164, 484, 798, 992], "anonhugepag": 164, "kernelpages": 164, "mmupages": 164, "miss": [164, 183, 190, 192, 194, 210, 237, 242, 247, 254, 313, 316, 357, 414, 459, 460, 468, 470, 478, 540, 571, 592, 683, 719, 800, 803, 949, 983, 1001, 1024], "shallow": [164, 234, 246, 336, 685], "extent": [164, 194, 201, 214, 354, 445, 450, 825, 999, 1047], "8k": [164, 869], "swamp": 164, "panic": [164, 177, 833, 885], "meaningless": 164, "global": [164, 165, 183, 189, 194, 198, 203, 207, 210, 223, 231, 234, 237, 240, 241, 247, 250, 253, 264, 267, 275, 287, 290, 292, 296, 301, 305, 312, 316, 317, 321, 322, 323, 328, 329, 334, 335, 336, 338, 339, 352, 357, 403, 420, 426, 432, 436, 439, 443, 447, 450, 452, 456, 457, 461, 462, 470, 471, 476, 489, 495, 504, 538, 539, 540, 541, 582, 589, 602, 684, 722, 725, 740, 741, 751, 775, 777, 778, 794, 931, 967, 970, 974, 975, 977, 999, 1020, 1023, 1031, 1033, 1066, 1080, 1123, 1151, 1159, 1163], "dig": [164, 166], "thorough": [164, 173, 1046, 1130, 1149, 1191], "counter": [164, 247, 382, 388, 389, 398, 454, 459, 460, 584, 693, 992], "delai": [164, 231, 237, 247, 250, 930], "substanti": 164, "overcom": [164, 313, 357, 444], "beforehand": 164, "mlock": [164, 1190], "mlockal": [164, 1190], "contradictori": 164, "lengthi": 164, "felt": 164, "lucki": [164, 592], "agre": [164, 194, 198, 363, 492, 984, 1129], "glad": 164, "outdat": [165, 173, 825, 1151], "halfwai": 165, "procedur": [165, 173, 390, 734, 922, 1080], "thunderbolt": 165, "hdmi": 165, "unplug": 165, "oop": [165, 1175], "feb": [165, 210, 212, 214, 354, 399, 907, 965, 1011], "derefer": [165, 597], "0000000000000080": 165, "supervisor": 165, "error_cod": 165, "0x0000": 165, "pgd": 165, "p4d": 165, "0000": [165, 250, 296, 931], "smp": [165, 214, 221, 354], "pti": 165, "281": [165, 234, 237, 242, 244, 247, 250, 254, 257, 275, 282, 296, 302, 314, 324, 330, 336], "comm": 165, "kworker": 165, "taint": 165, "fc31": 165, "asustek": 165, "zenbook": 165, "ux391ua": 165, "bio": 165, "204": [165, 195, 221, 234, 237, 242, 244, 247, 250, 254, 257, 260, 272, 275, 282, 296, 302, 314, 318, 324, 330, 336, 340, 489], "workqueu": [165, 778, 802, 827, 840, 843, 921], "ucsi_connector_chang": 165, "typec_ucsi": 165, "0010": 165, "ucsi_displayport_remove_partn": 165, "0xa": 165, "0x20": [165, 815], "c7": [165, 172, 1151], "83": [165, 172, 181, 195, 205, 210, 212, 218, 221, 227, 231, 234, 237, 242, 244, 247, 250, 254, 257, 260, 263, 272, 275, 279, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 352, 776, 826, 1127, 1128], "5b": [165, 172], "e9": [165, 172], "6d": [165, 172, 381, 382], "f3": [165, 172], "3d": [165, 172, 183], "fb": [165, 172], "2e": [165, 172, 686], "0f": [165, 172], "1f": [165, 172], "84": [165, 172, 181, 195, 205, 210, 212, 218, 221, 227, 231, 234, 237, 242, 244, 247, 250, 254, 257, 260, 263, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 352, 357, 362, 1127, 1128], "90": [165, 172, 181, 205, 210, 212, 218, 221, 227, 234, 237, 242, 244, 250, 254, 257, 260, 263, 272, 275, 279, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 352, 466, 1127, 1128, 1156], "85": [165, 172, 181, 195, 205, 210, 212, 218, 221, 227, 234, 237, 242, 244, 250, 254, 257, 260, 263, 272, 275, 279, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 352, 1000, 1001, 1127, 1128, 1163], "ff": [165, 172, 375, 765, 931], "8b": 165, "78": [165, 172, 195, 205, 210, 212, 218, 221, 227, 234, 237, 242, 244, 250, 254, 257, 263, 272, 275, 279, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 352, 538, 1127, 1128], "c6": 165, "rsp": [165, 234, 1080], "0018": 165, "ffff9daa002d3df8": 165, "eflag": 165, "00010202": 165, "rax": 165, "0000000000000008": 165, "rbx": 165, "ffff901f4ce35710": 165, "rcx": 165, "0000000000003c7d": 165, "rdx": 165, "0000000000003c7c": 165, "rsi": [165, 885], "0000000000000001": 165, "rdi": 165, "rbp": 165, "0000000000000000": [165, 1017], "r08": 165, "ffffffffbc7dbe60": 165, "r09": 165, "ffff9daa002d3cf0": 165, "r10": 165, "ffff901f54951a18": 165, "r11": 165, "ffff901f56a68a78": 165, "r12": 165, "r13": 165, "r14": 165, "ffff901f4ce35860": 165, "r15": 165, "ffff901f4ce355d8": 165, "ffff901f56a00000": 165, "knlg": 165, "cr0": 165, "0000000080050033": 165, "cr2": 165, "cr3": 165, "000000028fbbc003": 165, "cr4": 165, "00000000003606f0": 165, "trace": [165, 184, 231, 237, 247, 250, 469, 815], "ucsi_unregister_altmod": 165, "0x77": 165, "0x90": [165, 815], "ucsi_unregister_partn": 165, "0x13": 165, "0x30": [165, 406], "0x247": 165, "0x340": 165, "process_one_work": 165, "0x1b5": 165, "0x360": 165, "worker_thread": 165, "0x50": 165, "0x3c0": 165, "kthread": 165, "0xf9": 165, "0x130": 165, "kthread_park": 165, "ret_from_fork": 165, "0x35": 165, "0x40": [165, 930], "cdc_ether": 165, "usbnet": 165, "r8152": 165, "mii": 165, "rc_cec": 165, "typec_displayport": 165, "uinput": 165, "rfcomm": 165, "ccm": 165, "xt_checksum": 165, "xt_masquerad": 165, "nf_nat_tftp": 165, "nf_conntrack_tftp": 165, "tun": [165, 170, 185, 189, 205, 212, 251, 1173, 1174, 1175], "bridg": 165, "stp": 165, "llc": 165, "nf_conntrack_netbios_n": 165, "nf_conntrack_broadcast": 165, "xt_ct": 165, "ip6t_reject": 165, "nf_reject_ipv6": 165, "ip6t_rpfilt": 165, "ipt_reject": 165, "nf_reject_ipv4": 165, "xt_conntrack": 165, "ebtable_nat": 165, "ebtable_brout": 165, "ip6table_nat": 165, "ip6table_mangl": 165, "ip6table_raw": 165, "ip6table_secur": 165, "iptable_nat": 165, "nf_nat": 165, "iptable_mangl": 165, "iptable_raw": 165, "iptable_secur": 165, "nf_conntrack": 165, "nf_defrag_ipv6": 165, "nf_defrag_ipv4": 165, "libcrc32c": 165, "ip_set": 165, "nfnetlink": 165, "ebtable_filt": 165, "ebtabl": 165, "ip6table_filt": 165, "ip6_tabl": 165, "iptable_filt": 165, "cmac": 165, "bnep": 165, "sunrpc": 165, "vfat": [165, 825, 856], "snd_hda_codec_hdmi": 165, "snd_soc_skl": 165, "snd_soc_sst_ipc": 165, "snd_soc_sst_dsp": 165, "snd_hda_ext_cor": 165, "x86_pkg_temp_therm": 165, "intel_powerclamp": 165, "snd_soc_acpi_intel_match": 165, "coretemp": 165, "snd_soc_acpi": 165, "kvm_intel": 165, "snd_soc_cor": 165, "snd_hda_codec_realtek": 165, "snd_hda_codec_gener": 165, "snd_compress": 165, "ledtrig_audio": 165, "ac97_bu": 165, "snd_pcm_dmaengin": 165, "iwlmvm": 165, "snd_hda_intel": 165, "snd_intel_dspcfg": 165, "irqbypass": 165, "snd_hda_codec": 165, "uvcvideo": 165, "mac80211": 165, "btusb": 165, "itco_wdt": 165, "btrtl": 165, "crct10dif_pclmul": 165, "videobuf2_vmalloc": 165, "itco_vendor_support": 165, "videobuf2_memop": 165, "mei_hdcp": 165, "btbcm": 165, "btintel": 165, "crc32_pclmul": 165, "intel_rapl_msr": 165, "snd_hda_cor": 165, "videobuf2_v4l2": 165, "libarc4": 165, "ghash_clmulni_intel": 165, "videobuf2_common": 165, "snd_hwdep": 165, "intel_cst": 165, "bluetooth": [165, 330, 1180, 1193], "snd_seq": 165, "asus_nb_wmi": 165, "iwlwifi": 165, "videodev": 165, "snd_seq_devic": 165, "intel_uncor": 165, "asus_wmi": 165, "snd_pcm": 165, "intel_rapl_perf": 165, "cdc_acm": 165, "sparse_keymap": 165, "wmi_bmof": 165, "ecdh_gener": 165, "cfg80211": 165, "intel_wmi_thunderbolt": 165, "pcspkr": 165, "snd_timer": 165, "snd": 165, "i2c_i801": 165, "soundcor": 165, "joydev": 165, "idma64": 165, "intel_xhci_usb_role_switch": 165, "mei_m": 165, "ucsi_acpi": 165, "processor_thermal_devic": 165, "intel_rapl_common": 165, "mei": [165, 237], "intel_soc_dts_iosf": 165, "intel_pch_therm": 165, "typec": 165, "int3403_therm": 165, "int340x_thermal_zon": 165, "int3400_therm": 165, "acpi_thermal_rel": 165, "acpi_pad": 165, "binfmt_misc": 165, "ip_tabl": 165, "rfkill": 165, "i915": 165, "i2c_algo_bit": 165, "drm_kms_helper": 165, "hid_multitouch": 165, "drm": 165, "nvme": 165, "crc32c_intel": 165, "nvme_cor": 165, "serio_raw": 165, "wmi": 165, "i2c_hid": 165, "76d248e576fee192": 165, "deferenc": 165, "dp": 165, "ness": [165, 201, 286], "ucsi": 165, "displayport": 165, "linu": [165, 817, 825], "typec_altmod": 165, "alt": [165, 195, 885, 913, 1173, 1180, 1187], "ucsi_dp": 165, "typec_altmode_get_drvdata": 165, "271": [165, 234, 237, 242, 244, 250, 275, 282, 296, 302, 324, 330, 336, 340], "bugzilla": 165, "1785972": 165, "john": [165, 454], "stebbin": 165, "roundtrip": 165, "wiki": [165, 179, 290, 291, 312, 316, 798, 825], "explod": [165, 340, 800, 1062], "jwboyer": [165, 798], "f31": 165, "quiet": [165, 198, 1151], "4382f76bc8ef9fce5e7e96d4cdb0c073564ad249": 165, "josh": 165, "boyer": 165, "fedoraproject": [165, 798], "mon": 165, "rpmdevtool": [165, 798], "koji": 165, "rpmdev": 165, "setuptre": 165, "spec": [165, 250, 798, 821], "srpm": 165, "unam": [165, 798, 803, 821, 825, 826], "correspond": [165, 177, 250, 379, 422, 930, 1007, 1015, 1054, 1090, 1125, 1151], "kenrel": 165, "ivh": [165, 167], "crypto": [165, 330], "ccp": 165, "sha": 165, "drop": [165, 177, 313, 485, 504, 513, 734, 741, 743, 844, 992, 997], "zips": 165, "ko": [165, 794, 803, 825], "endif": [165, 422, 424, 425, 467, 469, 474, 475, 568, 577, 586, 592, 594, 595, 635, 693, 694, 740, 756, 999, 1015, 1017, 1165], "buildid": [165, 798, 1000], "primary_target": 165, "825": [165, 237], "asoc": 165, "patch601": 165, "patch999": 165, "roedel": [165, 539, 542, 1001, 1014, 1110, 1158], "patienc": [165, 194, 1047], "oldpackag": 165, "uefi": [165, 172], "market": [166, 169, 234, 278, 286, 1080], "intent": [166, 168, 172, 173, 487, 742, 746, 798, 955, 957, 958], "remark": 166, "organ": [166, 191, 420, 455, 466, 494, 635, 861, 947, 1014], "numer": [166, 183, 199, 201, 203, 237, 247, 250, 254, 286, 296, 336, 469, 641, 942], "enforc": [166, 224, 442, 464, 599, 784, 931], "cname": [166, 168], "propag": [166, 396, 454, 470, 475, 478, 479, 660, 710, 932], "1100": [166, 231, 237, 254, 635], "3600": [166, 237], "185": [166, 195, 212, 234, 237, 242, 244, 250, 254, 257, 260, 263, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340], "199": [166, 195, 212, 234, 237, 242, 244, 247, 250, 254, 257, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 825, 1080], "109": [166, 181, 195, 205, 210, 212, 218, 231, 234, 237, 242, 244, 250, 254, 257, 260, 272, 275, 279, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 352, 357, 362], "153": [166, 181, 195, 205, 212, 221, 234, 237, 242, 244, 250, 254, 257, 260, 263, 272, 275, 292, 296, 302, 314, 318, 324, 330, 336, 340, 364], "111": [166, 181, 183, 195, 205, 212, 218, 234, 237, 242, 244, 247, 250, 254, 257, 260, 272, 275, 279, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 352], "108": [166, 181, 195, 205, 212, 218, 221, 227, 234, 237, 242, 244, 247, 250, 254, 257, 260, 272, 275, 279, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 352], "strip": [166, 185, 194, 228, 230, 231, 234, 242, 246, 247, 252, 254, 260, 263, 275, 282, 292, 296, 302, 318, 324, 330, 336, 340, 357, 366, 763, 999, 1000, 1002, 1011, 1030, 1103, 1148], "breviti": 166, "fqdn": 166, "qualifi": [166, 448, 594, 595, 732], "surf": 166, "consequenti": [166, 169, 172, 200, 856, 929, 1019, 1040, 1165], "microsoft team": 167, "chrome": 167, "google chrom": 167, "confer": [167, 169, 198, 222, 245, 271, 317, 763], "virtual classroom": 167, "classroom": [167, 169], "remote train": 167, "dr": [167, 1014], "chromium": [167, 202, 330], "frequent": [167, 169, 177, 194, 254, 910, 930, 1047, 1068], "face": [167, 169, 194, 244, 254, 748], "travel": [167, 885], "corona": [167, 169, 194], "viru": [167, 169], "conferenc": 167, "dramat": 167, "march": 167, "spent": [167, 453, 757, 1021, 1129], "weston": 167, "invest": [167, 169, 173, 254], "smooth": 167, "layer": [167, 267, 269, 287, 784, 856, 930, 942, 952, 961], "cornercas": 167, "hover": 167, "sharer": 167, "gdm": [167, 234, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336, 860, 916], "daemon": [167, 214, 234, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336, 460, 860, 863, 910, 911, 914, 916, 932, 940, 945, 947, 977, 1033], "uncom": [167, 509, 510, 704, 929], "waylanden": 167, "defaultsess": 167, "deb": [167, 299], "5153": 167, "thank": [167, 248, 275, 696, 732, 807, 967, 1128], "marjan": 167, "javorka": 167, "fashion": 167, "efl": [167, 844, 932, 983], "61762": 167, "1670": [167, 237], "80": [167, 172, 181, 195, 205, 210, 212, 218, 221, 227, 231, 234, 237, 242, 244, 250, 254, 257, 260, 263, 272, 275, 279, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 352, 458, 531, 907, 983, 1013, 1025, 1080, 1127, 1128, 1156], "947213": 167, "61764": 167, "98775": 167, "zygot": 167, "sandbox": [167, 194, 198, 248, 262, 280, 1123, 1158, 1159], "61800": 167, "239615": 167, "gpu": 167, "sharedarraybuff": 167, "sparerendererforsiteperprocess": 167, "prefer": [167, 244, 254, 398, 454, 496, 600, 687, 695, 699, 817, 869, 1075], "kaaaaaaaaacaaabaaqaaaaaaaaaaagaaaaaaaaaaaaaiaaaaaaaaaagaaaaaaaaa": 167, "token": [167, 224, 240, 384, 424, 860, 973, 1078, 1173], "4327801531638606376": 167, "61825": 167, "420846": 167, "autoplai": 167, "gestur": 167, "12993561460135093079": 167, "asar": 167, "agent": [167, 938, 1130], "mozilla": [167, 292, 907], "applewebkit": 167, "537": [167, 237, 324, 330], "khtml": 167, "gecko": 167, "microsoftteam": 167, "preview": [167, 252, 305, 321, 471, 778], "3497": 167, "safari": 167, "webview": 167, "preload": 167, "preload_notif": 167, "fff": 167, "eyjjci5jb21wyw55ijoirwxly3ryb24ilcjjci5kdw1wcyi6iiisimnylmvuywjszwqiomzhbhnllcjjci5wcm9kdwn0ijoirwxly3ryb24ilcjjci5zzxnzaw9uijoiiiwiy3iudxjsijoiiiwiy3iudmvyc2lvbii6iny0ljiumtiifq": 167, "raster": 167, "v8_context_snapshot_data": 167, "v8_natives_data": 167, "101": [167, 181, 195, 205, 212, 218, 227, 234, 237, 242, 244, 247, 250, 254, 257, 263, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 352, 357, 362, 1058, 1127, 1128], "msteam": 167, "notificationsmanag": 167, "61973": 167, "790018": 167, "432557619363765409": 167, "mainwindow": 167, "62033": 167, "1259666": 167, "5585537623314398260": 167, "pluginhost": 167, "wish": [167, 169, 177, 198, 458, 467, 606, 673, 754, 1046, 1141, 1142, 1158], "insan": [167, 306, 856], "killal": [167, 987, 997], "63500": 167, "298385": 167, "63502": 167, "blood": 167, "pressur": [167, 231], "rise": [167, 532, 807, 965, 966, 983], "wipe": 167, "logout": 167, "pop": [167, 180, 242, 244, 257, 272, 282, 292, 302, 314, 330, 336, 340, 425, 616, 619, 754, 1045, 1070], "morn": [167, 203, 213, 231, 240, 242, 248, 317, 1085], "webassembli": 167, "blow": 167, "water": [167, 286], "tab": [167, 168, 181, 250, 278, 296, 348, 399, 825, 885, 1067, 1092, 1182], "firefox": [167, 330, 460, 968, 997, 1135], "dom": [167, 226], "gave": [167, 169, 182, 194, 927, 1128], "3987": 167, "132": [167, 181, 183, 195, 205, 212, 221, 234, 237, 242, 244, 247, 250, 254, 257, 260, 272, 275, 292, 296, 302, 314, 318, 324, 330, 336, 340], "plagu": 167, "invent": [167, 392, 424, 484, 506, 507, 1178, 1179], "game": [167, 234, 250, 257, 260, 275, 282, 292, 296, 313, 318, 324, 330, 336, 881, 945, 1061], "pornwatch": 167, "teamview": 167, "webpag": 168, "properli": [168, 678, 756, 825, 1011], "retrospect": 168, "jekyl": 168, "bend": [168, 536], "companion": [168, 286], "pollut": [168, 425, 448, 454, 487, 683, 1001], "distinguish": [168, 593, 746, 857, 1011], "handwritten": [168, 266, 267, 269, 326, 327, 592, 692, 722, 723, 724, 740, 777, 778], "remind": 168, "pile": [168, 177, 494, 997], "incomprehens": [168, 248, 656, 763, 1176], "blame": [168, 931], "technic": [168, 169, 191, 327, 479, 483, 583, 638, 682, 1027, 1136, 1168], "nojekyl": 168, "eof": [168, 218, 221, 240, 241, 257, 349, 386, 387, 388, 389, 402, 666, 827, 841, 947, 948, 951, 957, 989, 996, 1049], "doctyp": 168, "constel": 168, "machineri": [168, 290, 291, 312, 316], "eventu": [168, 177, 457, 965, 1014], "click": [168, 169], "cri": [168, 745], "haven": [168, 169, 194, 560, 922, 929], "subdomain": 168, "afterthough": 168, "preserv": [168, 179, 200, 257, 442, 852, 853, 887, 941, 1148], "_build": 168, "restor": [168, 177, 184, 231, 237, 247, 250, 798, 997, 1020], "shini": 168, "nervous": 168, "marketinges": [168, 278], "familiar": [168, 194, 250, 359, 360, 749, 930, 1047], "big blue button": 169, "strongli": [169, 231, 237, 247, 250, 281, 284, 327, 540, 638, 684, 722, 775, 777, 778, 1176], "shame": 169, "pursu": 169, "collabor": [169, 179, 186, 191, 198, 271], "moreov": 169, "teach": [169, 194, 375], "trust": [169, 172, 234, 290, 291, 312, 330, 690, 938, 940, 1080, 1151, 1168], "benefit": [169, 281, 284, 287, 289, 448, 1118], "beat": [169, 244, 254, 763, 1122], "talent": [169, 375], "whiteboard": [169, 992], "chat": 169, "breakout": [169, 929], "stabil": [169, 489, 931, 1152], "thousand": [169, 275, 324, 856], "curiou": [169, 1123], "curious": 169, "licens": [169, 275, 476, 781, 1049, 1078], "lgpl": 169, "blindsid": 169, "govern": [169, 811, 951], "html5": 169, "exception": [169, 931], "modern": [169, 173, 175, 178, 186, 189, 194, 201, 223, 245, 470, 744, 763, 778, 785, 787, 792, 795, 802, 806, 816, 827, 829, 834, 840, 843, 846, 921, 999, 1018, 1048, 1123, 1149, 1177, 1179], "heavili": [169, 191, 194, 278, 280, 375, 540, 735, 825, 922, 931, 1047], "webrtc": 169, "pain": [169, 825, 1002, 1011], "death": [169, 221, 997], "firewal": [169, 202, 940], "busi": [169, 313, 464, 474, 599, 830, 842, 854, 889, 891, 896, 897], "indefinit": [169, 672], "vm": [169, 360], "encrypt": [169, 860, 881, 932, 940, 941, 942, 1101, 1139], "bbb": [169, 181, 242, 260, 330], "provis": 169, "gcp": 169, "expertis": [169, 541], "n1": [169, 195, 254], "accordingli": [169, 202, 528, 538, 541, 571, 929, 931, 1016, 1051, 1054, 1148], "500gb": 169, "10gb": 169, "spars": [169, 244, 254, 602, 604, 821], "mandatori": [169, 931, 1048], "issuanc": 169, "udp": [169, 923, 925, 1191, 1193], "32768": 169, "clickabl": 169, "7443": 169, "755": [169, 237, 357, 870, 1050], "xenial": 169, "220": [169, 195, 210, 221, 231, 234, 237, 242, 244, 250, 254, 257, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340], "hostnam": [169, 330, 1151], "certbot": 169, "greenlight": 169, "letsencrypt": 169, "docker": [169, 173, 330], "bundl": [169, 192, 1135, 1151], "rake": 169, "succesfulli": 169, "screenshot": [169, 192, 357], "tryout": [169, 931], "kid": [169, 214, 232, 343], "layman": 169, "knew": [169, 198, 697, 1016], "reproduc": [169, 172, 288, 451, 931], "thought": [169, 425, 737, 825, 1136], "fred": [169, 923, 1023], "dixon": 169, "leader": 169, "aka": [169, 214, 237, 240, 242, 262, 560, 744], "canva": 169, "bradlei": 169, "schreffler": 169, "upfront": 169, "far": [169, 194, 202, 223, 229, 237, 240, 280, 394, 409, 430, 431, 433, 444, 448, 453, 478, 607, 617, 682, 745, 803, 867, 931, 1025, 1047, 1128, 1176], "exhaust": [169, 981, 984, 1027], "heard": 169, "tast": [169, 384, 600, 656, 682, 725, 745], "era": 169, "budget": [169, 218], "advertis": [169, 735], "viabl": 169, "shout": [169, 724, 727], "loud": [169, 403, 618, 686, 724, 730, 731], "gmunden": [170, 375], "traunse": 170, "hike": [170, 171, 198], "bergsteigen": [170, 171], "climb": [170, 171, 198, 229], "klettern": [170, 171], "outdoor": [170, 171], "donnerstag": 170, "geistigen": 170, "ersch\u00f6pfung": 170, "k\u00f6rperlich": 170, "erfahren": [170, 171, 375, 1174], "dazu": [170, 179, 180, 185, 189, 206, 357, 362, 375, 1172, 1186, 1194], "ausgesucht": [170, 171], "zwar": [170, 1171, 1175, 1187], "lo": [170, 171, 212, 250, 286, 536, 805, 1035], "gmundner": [170, 198], "h\u00fctte": [170, 171, 198], "n\u00e4chsten": 170, "naturfreundesteig": 170, "zusammenfassung": [170, 176], "wunsch": 170, "vollend": 170, "erf\u00fcllt": 170, "unversichert": 170, "unmarkiert": 170, "leicht": [170, 206, 1171, 1186, 1192, 1193], "panik": 170, "geraten": 170, "h\u00e4nde": [170, 171], "braucht": [170, 171], "fingern\u00e4gel": 170, "z\u00e4hne": 170, "mitunt": [170, 171, 1183], "verkoffert": 170, "augen": [170, 257], "offenhalten": 170, "jeder": [170, 1170, 1173, 1174, 1193], "spur": 170, "folgen": [170, 206, 207, 1173, 1186], "fr\u00fcher": [170, 251], "umdrehen": 170, "sackgass": 170, "erweist": 170, "vielleicht": [170, 195, 206, 257, 1175, 1186], "weggehen": 170, "stirnlamp": 170, "mitnehmen": 170, "war": [170, 180, 185, 187, 195, 206, 210, 375, 464, 1171, 1173, 1175, 1186, 1192, 1193], "sch\u00f6nsten": 170, "jemal": 170, "zuletzt": 170, "traumhaften": 170, "gegend": 170, "immer": [170, 171, 185, 189, 195, 197, 210, 282, 1171, 1175, 1182, 1192], "griffweit": 170, "erscheint": 170, "paar": [170, 180, 195, 197, 205, 212, 244, 357, 362, 1171, 1194], "eindr\u00fcck": 170, "m\u00fcder": 170, "abklatsch": 170, "erinnerungen": 170, "hirn": 170, "eingebrannt": 170, "einstieg": [170, 206, 1186], "traunsteinstra\u00df": 170, "hundert": [170, 181, 254], "meter": 170, "s\u00fcdlich": 170, "hoisn": [170, 198], "wirt": [170, 198], "markiert": [170, 171], "wanderweg": [170, 171], "wegweisern": [170, 171], "bergauf": [170, 171], "kupp": 170, "klamm": 170, "einsteigt": 170, "bergab": 170, "touristisch": 170, "erschlossen": 170, "trifft": 170, "familien": 170, "kindern": [170, 1187], "rechter": 170, "felsstock": 170, "adlerhorst": 170, "sieht": [170, 181, 185, 195], "rau": [170, 244], "touristenzon": 170, "rauf": 170, "schart": 170, "durchschnaufen": 170, "einstellen": 170, "gen\u00fcsslich": 170, "h\u00f6henmet": 170, "verspeisen": 170, "steinmanderl": 170, "verfehlen": 170, "erkennbar": [170, 181, 1189], "kamm": 170, "r\u00fcber": 170, "traunsteinfelsen": 170, "erstreckt": [170, 171], "sch\u00f6nste": 170, "teil": [170, 180, 189, 197, 1171, 1173], "meditativ": 170, "wundersch\u00f6n": [170, 171], "steil": 170, "voll": 170, "zecken": 170, "schon": [170, 171, 180, 195, 197, 205, 235, 375, 1173, 1175, 1180, 1187, 1189, 1192], "bl\u00fcht": 170, "rinnen": 170, "leichtest": [170, 181], "dahin": [170, 1171], "wieder": [170, 195, 197, 205, 210, 212, 226, 1173, 1187], "vertun": 170, "manderl": 170, "aufstellen": 170, "nachwelt": 170, "nemesi": 170, "bergverr\u00fcckten": 170, "gleich": [170, 181, 195, 205, 206, 210, 212, 244, 292, 324, 330, 352, 1171, 1186, 1193], "schl\u00fcsselstel": 170, "quert": 170, "latschen": 170, "\u00f6fter": [170, 171], "festhalten": 170, "gel\u00e4nd": 170, "einsam": 170, "bohrhaken": 170, "verrotteten": 170, "schuhband": 170, "festh\u00e4lt": 170, "runterfallen": 170, "glaub": [170, 179, 180], "stell": [170, 195, 226], "umgehen": [170, 1180], "querung": 170, "hierher": 170, "st\u00fcck": 170, "reinzum\u00fcnden": 170, "scheint": [170, 179], "gibt": [170, 171, 176, 179, 181, 182, 185, 195, 206, 207, 218, 244, 352, 1170, 1171, 1172, 1173, 1175, 1180, 1186, 1192], "foto": [170, 887], "mittendrin": 170, "besch\u00e4ftigt": 170, "hose": 170, "kacken": 170, "gesagt": [170, 185, 195, 205, 375, 1171], "manderln": 170, "aufnahmen": 170, "zunehmenden": 170, "sonnenuntergang": 170, "unvergesslich": 170, "nacht": [170, 171], "geworden": 170, "halten": [170, 171], "zumindest": [170, 195, 1173], "hinauf": 170, "stund": [170, 912, 1194], "gekostet": 170, "exklus": [170, 195, 205], "schneck": 170, "j\u00e4gerbrot": 170, "schein": 170, "ausstieg": 170, "hernlersteig": 170, "m\u00fcndet": 170, "gmundnerh\u00fctt": 170, "gem\u00fctlich": [170, 171], "nett": [170, 171, 185, 296, 375, 1180, 1187], "wirtsleut": 170, "h\u00fcttenruh": 170, "ansitzen": 170, "schweinsbraten": 170, "reinkommt": 170, "k\u00fcche": 170, "geputzt": 170, "backerbsen": 170, "morgen": [170, 250, 254], "hochnebel": 170, "blick": [170, 171, 1172], "flugzeug": 170, "gipfel": [170, 171], "dolin": 170, "nebel": 170, "dabei": [170, 181, 185, 221, 375, 1170], "verziehen": 170, "r\u00fcckweg": 170, "hoisnwirt": 170, "miesweg": 170, "karibik": 170, "steiner alpen": 171, "kamni\u0161ke alp": 171, "kamni\u0161ko savinjskih alp": 171, "alten": [171, 1175], "tradit": [171, 234, 237, 450, 465, 601, 603, 604, 606, 626, 867, 931, 1070, 1101, 1190], "bleiburg": [171, 229], "k\u00e4rnten": [171, 375], "umliegenden": 171, "bergen": 171, "interessantesten": 171, "2558m": [171, 229], "steiner": 171, "alpen": 171, "davor": [171, 213], "gekannt": 171, "nun": [171, 189, 195, 218, 225, 250, 643], "gesehen": [171, 195, 201, 235], "steht": [171, 195, 205, 206, 1183, 1186], "fest": 171, "n\u00e4chste": [171, 189], "jahr": [171, 195], "\u00fcberschreitung": 171, "soweit": [171, 1180, 1187], "h\u00f6chst": 171, "interessant": [171, 1172], "steinhaufen": 171, "unge\u00fcbt": 171, "verloren": [171, 210, 213], "h\u00f6henangst": 171, "schauen": [171, 206, 1186], "helm": 171, "schaden": 171, "schottersurf": 171, "kommen": [171, 176, 244, 357, 362, 375, 913], "ihr": [171, 176, 180, 185, 195, 847, 1170, 1172, 1174, 1175, 1180, 1187, 1193], "artikel": [171, 179], "rein": [171, 181, 206, 1186, 1187], "ins": [171, 180, 375, 751, 1171, 1187], "eisenkappel": 171, "seebergsattel": 171, "openstreetmap": 171, "klein": [171, 180, 181, 185, 1171, 1173, 1174], "dorf": 171, "uhren": 171, "stehengeblieben": 171, "scheinen": 171, "parkplatz": 171, "geparkt": 171, "wissend": 171, "hinten": 171, "tal": 171, "beginnt": [171, 205, 1194], "ahnen": 171, "stetig": 171, "verzagen": 171, "eingang": [171, 1171], "kar": 171, "pl\u00f6tzlich": 171, "freundlich": 171, "vorhanden": [171, 1180, 1187], "fr\u00fchst\u00fcck": 171, "lager": [171, 286], "respektvol": 171, "erklimmenden": 171, "zieht": 171, "haltend": 171, "wand": 171, "wiederum": [171, 195], "gilt": [171, 185, 226, 375], "mittlerweil": [171, 1171, 1188], "akzeptiert": 171, "deswegen": [171, 205, 210, 1173], "schliesslich": [171, 1171], "stehend": 171, "denn": [171, 195, 205, 1192, 1194], "hinaufkomm": 171, "passiert": [171, 195, 212], "anf\u00e4ngern": 171, "geschehen": [171, 330], "jung": [171, 375], "izola": 171, "slowenien": 171, "stellten": 171, "ankam": 171, "ob": [171, 179, 205, 1175, 1194], "beantwortet": 171, "adoptivs\u00f6hn": 171, "gewonnen": 171, "nachbarberg": 171, "ko\u010dna": 171, "sichtlich": 171, "spa\u00df": [171, 251, 1189], "abstieg": 171, "erweitert": 171, "rund": 171, "fertig": [171, 205, 222, 250, 330, 703, 710], "empfehl": [171, 1171], "runterzugehen": 171, "raufgekommen": 171, "ostseitigen": 171, "westseitig": 171, "sch\u00f6ner": [171, 195], "langen": 171, "grat": 171, "felst\u00fcrm": 171, "daf\u00fcr": [171, 189, 195, 205, 206, 1171], "anstrengend": 171, "200m": 171, "pulverhangerl": 171, "zur\u00fcck": [171, 195, 207, 1180, 1187], "wohlverdient": 171, "la\u0161ko": 171, "geschmack": 171, "schroff": 171, "selektiv": 171, "jedermann": 171, "kett": 171, "2000m": 171, "umschlossen": 171, "gletschergeformten": 171, "karen": 171, "steilen": 171, "w\u00e4nden": 171, "ost": 171, "richtung": [171, 1182], "schlafm\u00f6glichkeiten": 171, "biwak": 171, "einladung": 171, "\u00fcberquerung": 171, "dringend": 171, "f\u00e4llig": [171, 375], "fu\u00dfnoten": [171, 1170], "belieben": 171, "gummi": 171, "reifen": 171, "fahren": 171, "mehrplatzlag": 171, "reserviert": 171, "h\u00fcttenschl\u00e4fer": 171, "ohrenst\u00f6psel": 171, "f\u00e4lle": 171, "eingetreten": 171, "fassen": [171, 250], "typ": [171, 207, 218, 228, 913, 1135], "geschnarcht": 171, "geschrien": 171, "modules sign": 172, "secure boot": 172, "shim": 172, "dell xps 13": 172, "unresolv": [172, 800, 803, 999], "upset": [172, 735], "tendenc": 172, "vendor": [172, 173, 480, 482, 541, 821, 825, 929, 959], "efi": [172, 330], "implementor": [172, 266, 267, 269, 326, 327, 684, 722, 731, 777, 778, 784, 1156, 1176], "shine": 172, "stuck": 172, "cryptographi": 172, "third": [172, 209, 221, 250, 296, 470, 598, 600, 711, 712, 803, 805, 870, 912, 955], "parti": [172, 177, 488, 600, 796, 803, 951, 992, 1139], "signatur": [172, 218, 250, 254, 275, 296, 586, 682, 729, 745, 746, 993], "openssl": [172, 881], "req": 172, "x509": 172, "newkei": 172, "rsa": [172, 938], "keyout": 172, "xps13": 172, "priv": [172, 819], "outform": 172, "36500": [172, 541], "subj": 172, "passphras": [172, 202, 938], "expiri": 172, "0x2": 172, "97": [172, 181, 195, 205, 210, 212, 218, 221, 234, 237, 242, 244, 247, 250, 254, 257, 263, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 352, 357, 362, 458, 1127], "e5": 172, "ef": 172, "88": [172, 181, 195, 205, 210, 212, 218, 221, 223, 227, 234, 237, 242, 244, 247, 250, 254, 257, 260, 263, 272, 275, 279, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 352, 357, 362, 460, 1067, 1127, 1128, 1163], "3a": 172, "b3": 172, "9c": 172, "1b": 172, "a4": 172, "d7": 172, "sha256withrsaencrypt": 172, "issuer": [172, 484], "sep": [172, 173, 201, 221, 234, 237, 242, 250, 254, 257, 275, 296, 314, 330, 341, 466, 663, 907, 929, 931, 942, 999], "gmt": 172, "aug": [172, 237, 922, 930], "2121": 172, "subject": [172, 467, 786, 823, 1156], "rsaencrypt": 172, "modulu": [172, 231, 237, 247, 250], "b5": 172, "2d": [172, 224, 600, 1068], "5c": 172, "6f": [172, 330, 987], "b0": 172, "95": [172, 181, 195, 205, 210, 212, 218, 221, 227, 231, 234, 237, 242, 244, 247, 250, 254, 257, 260, 263, 272, 275, 279, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 352, 1127, 1128], "f6": 172, "9e": 172, "9d": 172, "0d": 172, "bc": [172, 805, 929], "f5": 172, "6e": 172, "fe": [172, 466], "94": [172, 181, 205, 210, 212, 218, 221, 227, 234, 237, 242, 244, 250, 254, 257, 260, 263, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 352, 509, 510, 1127], "2b": [172, 931], "e6": 172, "b2": 172, "a0": [172, 930], "f8": 172, "7d": 172, "1c": 172, "2c": 172, "9f": 172, "4d": [172, 1068], "86": [172, 181, 195, 205, 210, 212, 218, 221, 227, 234, 237, 242, 244, 250, 254, 257, 260, 263, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 352, 1127, 1128], "e3": [172, 503], "dd": [172, 856, 885, 1171], "7b": 172, "3f": 172, "aa": 172, "b8": 172, "a5": [172, 930], "d5": 172, "0b": 172, "81": [172, 181, 183, 195, 205, 210, 212, 218, 221, 223, 227, 234, 237, 242, 244, 250, 254, 257, 260, 263, 272, 275, 279, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 352, 1001, 1025, 1127, 1128], "d1": [172, 244, 307, 330, 657], "e8": 172, "dc": [172, 484], "c5": 172, "d2": [172, 244, 307, 336, 657], "c2": [172, 487, 601, 686], "0a": [172, 386], "a1": [172, 234, 279, 1080], "e1": [172, 222, 235, 503, 683], "89": [172, 181, 195, 205, 210, 212, 218, 221, 227, 231, 234, 237, 242, 244, 247, 250, 254, 257, 260, 263, 272, 275, 279, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 352, 458, 929, 930, 931, 1001, 1127, 1128], "4c": 172, "4a": 172, "77": [172, 195, 203, 205, 210, 212, 214, 218, 221, 227, 231, 234, 237, 242, 244, 250, 254, 257, 260, 263, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 352, 354, 357, 362, 1127, 1128], "a9": 172, "68": [172, 195, 200, 205, 210, 212, 218, 221, 227, 231, 234, 237, 242, 244, 250, 254, 257, 260, 263, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 349, 352, 907, 1127, 1128], "b6": 172, "a8": 172, "9b": 172, "d8": 172, "7f": [172, 931], "e2": [172, 222, 235, 503, 683], "a3": 172, "79": [172, 195, 205, 210, 212, 218, 221, 227, 231, 234, 237, 242, 244, 250, 254, 257, 260, 263, 272, 275, 279, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 352, 357, 362, 1127, 1128], "f4": 172, "96": [172, 181, 195, 205, 210, 212, 218, 221, 231, 234, 237, 242, 244, 250, 254, 257, 260, 263, 272, 275, 279, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 352, 458, 1000, 1001, 1127, 1128], "4f": [172, 1068], "1d": 172, "7e": 172, "4e": 172, "0e": 172, "d9": 172, "8c": 172, "d3": [172, 657], "c8": 172, "f7": 172, "8e": 172, "d6": 172, "3b": 172, "1e": 172, "4b": [172, 931, 987], "5e": [172, 1054], "5f": [172, 758], "7c": 172, "expon": [172, 1054], "65537": 172, "0x10001": 172, "x509v3": 172, "98": [172, 181, 195, 205, 212, 218, 221, 227, 234, 237, 242, 244, 247, 250, 254, 257, 260, 263, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 352, 357, 362, 583, 620, 1001], "0c": [172, 931], "keyid": 172, "c0": 172, "8f": 172, "b1": 172, "b7": 172, "9a": 172, "fa": 172, "7a": 172, "df": [172, 198, 314, 318, 324, 336, 466], "a6": 172, "c9": 172, "76": [172, 195, 205, 210, 212, 218, 221, 223, 227, 234, 237, 242, 244, 250, 254, 257, 260, 263, 272, 275, 279, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 352, 357, 362, 477, 478, 742, 776, 1080, 1127, 1128], "f0": 172, "b4": 172, "f9": 172, "eb": 172, "f1": 172, "6c": [172, 931], "2f": [172, 382, 1068], "5a": 172, "e0": 172, "d0": 172, "93": [172, 181, 195, 205, 210, 212, 218, 221, 227, 231, 234, 237, 242, 244, 250, 254, 257, 263, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 352, 1127], "8d": 172, "2a": 172, "fc": [172, 483, 484], "1a": 172, "b9": 172, "cb": [172, 647], "miidbtccae2gawibagiuarax5e9vn4g6eclb5bocbruks9cwdqyjkozihvcnaqel": 172, "bqawetepma0ga1ueawwgamzhc2nomcaxdtixmdkwnzeyntc1nloydzixmjewode0": 172, "mti1nzu2wjarmq8wdqydvqqddazqzmfzy2gwggeima0gcsqgsib3dqebaquaa4ib": 172, "dwawggekaoibaqc1lvzqb2aw15x2nlvnnmth6qxdnq1xvokb9vbu6zx": 172, "wl72mzqr": 172, "5rkvwabpeph9hcwdnwcm9mjnhupdexi": 172, "hmszvaowukuzi2kflrpvc": 172, "79gwnr4": 172, "jc": 172, "xdlzwnekcnuhsogjwxxttbydsghpd8q": 172, "valspcvotvjdokib4eyxnavjbdjdldd": 172, "rb8ueftirkn5abigzdoortik9jy1v2ocui5zqu8dkg4vph4mtkp": 172, "nb3kgq7zt5ym": 172, "b8ce2f": 172, "ettmprmfi94x": 172, "7i5tuqrbsylistict": 172, "rf1kw6": 172, "zuzvmwyow9cyzwc5rar": 172, "ys0exg3v": 172, "hyjl7vaxa23rb": 172, "xyiuztxqunxragmbaagjuzbrmb0ga1uddgqwbbqk": 172, "p1jr3huijl4otbwyvngmdz1idzafbgnvhsmegdawgbqkp1jr3huijl4otbwyvngm": 172, "dz1idzapbgnvhrmbaf8ebtadaqh": 172, "ma0gcsqgsib3dqebcwuaa4ibaqa5yke5gyfa": 172, "h49rsbdpobkbr5rv0hz693pljj02mn9hprusmgbygdujyx6odqbzcfah8ko0": 172, "xra": 172, "kdtflvc7uuvwtp": 172, "envqn8vx6twkd0r7maeyze8q6w2y1p1xcbrbwhmhemi": 172, "tjjadwenms9xosesipxkduey9oa6ep6indatkyt2lrw5tyagfocnxyiniybsvdtw": 172, "yqfvxbjphkw": 172, "dintokuzmazeiq3j0hi8o789xdyxlf2snsdshq5huaz67c5brli": 172, "ahemjzbycfiiq65b5x": 172, "y7aq": 172, "eg70tffm4fd8iys4tyxajdhcarqvfpdxazkhx": 172, "rk": 172, "b3lljngstu2g": 172, "mokutil": 172, "mokmanag": 172, "bloodi": [172, 996, 1136], "fan": [172, 194, 198, 224, 248, 317, 1123], "highest": [172, 231, 237, 247, 250, 296, 409, 454, 930, 986], "melt": 172, "7390": [172, 237], "cross develop": 173, "raspberry pi": [173, 922, 923, 924, 925, 926, 929, 930, 931], "crosstool-ng": 173, "c++": [173, 175, 1175, 1176, 1177, 1179], "sadli": [173, 224, 448, 794, 929, 963, 966, 1000, 1022], "linaro": [173, 778, 921, 1009, 1010], "libstdc": [173, 1011, 1013], "unsatisfi": 173, "libpthread": [173, 1002], "feedback": [173, 189, 192, 201, 202, 203], "thankfulli": 173, "gperf": [173, 1013], "flex": [173, 805, 929, 1013], "texinfo": [173, 1013], "help2man": [173, 1013], "libtool": [173, 1013], "ncurs": [173, 798], "unzip": [173, 826, 1013], "rsync": [173, 1013], "diffutil": 173, "libncurses5": [173, 1013], "gawk": [173, 1013], "util": [173, 180, 201, 330, 481, 487, 506, 520, 635, 690, 693, 695, 776, 1013, 1020, 1151], "ct": [173, 1013], "zlib": [173, 1013], "extra": [173, 195, 205, 231, 415, 476, 568, 739, 825], "prior": [173, 851, 867, 892, 929, 999, 1015, 1069], "bootstrap": [173, 1013, 1158], "latest": [173, 781, 796, 802, 1151], "yann": 173, "morin": 173, "warranti": [173, 214, 354], "merchant": 173, "rpi3": 173, "armv7": 173, "rpi2": 173, "23179": 173, "libc": [173, 999, 1016], "glibc_2": [173, 999], "ldd": [173, 470, 472, 1016], "0xb6e06000": 173, "invok": [173, 203, 222, 235, 343, 348, 484, 586, 598, 657, 687, 978, 1000, 1037, 1049, 1050, 1075], "rpt2": 173, "rpi1": 173, "deb10u1": 173, "quirk": [173, 922], "werror": [173, 390, 403, 446, 469, 484, 491, 776, 793, 794, 1165], "behind": [173, 213, 403, 454, 484, 506, 616, 825, 940, 999, 1042, 1140], "glibcxx_3": 173, "libgcc_": 173, "downgrad": 173, "cmake_find_root_path": [173, 1000], "cmake_sysroot": [173, 1000], "viewpoint": 173, "bye": [173, 710, 714, 716, 717, 718, 1136], "relocat": 173, "fragil": 173, "sdk": 173, "buildroot": 173, "encount": [173, 202, 250, 254, 930, 931, 957], "ct_prefix": 173, "categori": [174, 186, 466, 1125], "crosstool": [174, 278, 778, 921, 1000, 1002, 1009, 1010, 1011], "1399": 174, "dell": 174, "xp": [174, 464], "grintovec": [174, 229], "plan\u0161arsko": 174, "jezero": 174, "\u010de\u0161ka": [174, 229], "ko\u010da": [174, 229], "traunstein": [174, 198, 375], "zierlersteig": [174, 198], "bigbluebutton": [174, 178, 1170], "consumpt": 174, "buildmanag": 175, "embeddedentwicklung": 175, "anpassungen": 175, "paketen": 175, "rootfilesystem": [175, 1002], "dient": 176, "vermarktung": 176, "referenz": [176, 265], "kursteilnehm": [176, 375], "beendigung": 176, "entstandenen": 176, "zur\u00fcckgreifen": 176, "finden": [176, 180, 189, 1170], "sofern": 176, "kund": [176, 189], "w\u00fcnscht": 176, "abstufungen": 176, "\u00f6ffentlichkeit": [176, 1187], "besprochen": 176, "hierbei": 176, "anwendung": [176, 1192], "g\u00e4nzlich": 176, "abgesehen": 176, "ausdr\u00fccklich": 176, "zustimmt": 176, "namen": [176, 195, 205, 254, 314, 913, 1194], "individuen": 176, "prinzipiel": 176, "erw\u00e4hnt": [176, 189], "erlaubni": 176, "sollten": [176, 244, 282], "vorgehen": [176, 262, 1187, 1194], "anbietet": 176, "nie": [176, 185, 197, 375, 1175], "zug\u00e4nglich": 176, "onlinekursen": 176, "m\u00f6glichkeit": [176, 179, 197, 1173, 1192, 1193], "\u00fcbungsmateri": 176, "zustimmen": 176, "einzeln": [176, 189], "keinesfal": 176, "ver\u00f6ffentlicht": 176, "verschiedenst": 176, "m\u00f6glichkeiten": [176, 189, 1189, 1192], "entstanden": [176, 189, 197], "nichtsdestotrotz": [176, 1173], "verf\u00fcgung": [176, 195, 1175, 1192], "accompani": [177, 198, 287, 289, 1126, 1181], "privaci": [177, 194, 198, 199], "guidelin": [177, 194, 313, 931], "certainli": [177, 957], "redhat": [177, 299, 330, 460], "gitk": [177, 885], "traine": [177, 204], "respositori": [177, 189], "user1": 177, "user2": 177, "user3": 177, "untrack": 177, "beast": 177, "similarli": 177, "unstag": 177, "accident": [177, 597, 729, 809, 852, 853, 892, 956, 1064], "7434a5b": 177, "100755": 177, "cowork": 177, "employ": [177, 464], "favourit": 177, "869": [177, 237, 324], "124": [177, 181, 195, 202, 205, 212, 218, 221, 231, 234, 237, 242, 244, 247, 250, 254, 257, 260, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 1080], "a4b9666": 177, "bf5bb75": 177, "went": [177, 198], "retri": [177, 943, 1042, 1151], "noon": [177, 317, 985, 1073], "lack": [177, 444, 469, 541, 675, 677, 931, 1011], "unavoid": 177, "her": [177, 181, 206, 250, 253, 677, 860, 881, 1089, 1131, 1186], "confid": 177, "merg": [177, 223, 827, 985, 1071, 1188], "gentl": [178, 1177], "tinker": 178, "solder": 178, "sysv": [179, 1000], "grace": [179, 291, 749], "sigterm": [179, 996, 997], "sigkil": 179, "beeinflussen": 179, "shutdown": [179, 234, 250, 257, 260, 275, 282, 292, 296, 318, 324, 327, 330, 336, 365, 803, 916, 993, 1031], "herausgefunden": [179, 185, 375], "nachfolgend": [179, 1171], "manpag": 179, "verhindern": 179, "genehm": 179, "systemd": [179, 234, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336, 825, 863, 916, 931, 996, 1171], "inhibit": [179, 326, 682, 720], "children": [179, 458], "vererbt": 179, "attributen": 179, "setprior": 179, "execv": [179, 954, 999], "sched_reset_on_fork": 179, "ORed": 179, "privileg": [179, 234, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336, 881, 916], "playback": 179, "prevent": [179, 182, 231, 237, 240, 247, 250, 278, 440, 446, 450, 862, 951, 956, 985, 996, 1022, 1034, 1064], "evad": 179, "rlimit_rttim": 179, "getr": 179, "anstel": 179, "prozessen": 179, "teilen": 179, "prozess": [179, 358, 1180, 1182, 1189, 1190, 1193], "startenden": 179, "gestarteten": 179, "weitergegeben": 179, "ausser": [179, 206, 352, 1186], "unterbunden": 179, "pthread_attr_setinheritsch": 179, "pthread_inherit_sch": 179, "pthread_explicit_sch": 179, "newli": [179, 446], "sowa": [179, 185, 375, 1171], "\u00e4hnlich": [179, 210], "filter_driv": 179, "offenbar": [179, 195, 375, 1173], "miser": [179, 635], "netzwerkdrivern": 179, "hoher": 179, "interruptlast": 179, "verbessern": 179, "n\u00f6tig": [179, 1182], "diesbez\u00fcglich": 179, "\u00fcberlegt": 179, "schaltet": 179, "netzwerkdriv": 179, "30107": 179, "linuxfound": 179, "workgroup": 179, "napi": [179, 209, 819], "implementationen": 179, "libmodbu": 179, "freemodbu": 179, "konfiguriert": [179, 180], "jumbo": 179, "jumbo_fram": 179, "mtu": [179, 924], "1500": [179, 237], "eth0": 179, "9000": [179, 237], "ifconfig": [179, 819], "abgelegt": 179, "konfigur": [179, 181], "ifac": [179, 509, 523, 746], "vorsicht": [179, 205, 913], "routern": 179, "fragmentieren": 179, "tracerout": 179, "netzwerkverbindung": 179, "g\u00fcte": 179, "wissen": [179, 375, 1173, 1180], "sar": 179, "sysstat": 179, "schmerzvol": 179, "netter": 179, "ausprogrammiert": 180, "konflikt": [180, 1188], "parallelen": [180, 1192], "demonstr": [180, 182, 202, 274, 536, 585, 1125, 1129, 1168], "mutter": [180, 375, 376, 1192], "aller": [180, 189, 375, 376, 1171, 1192], "danach": [180, 1170], "hilf": [180, 205, 357, 362, 1182], "gefixt": 180, "kommunk": 180, "variablen": [180, 181, 206, 207, 210, 213, 218, 246, 264, 265, 349, 352, 358, 1172, 1182, 1183, 1186], "frontal": 180, "vorgef\u00fchrt": 180, "diskuss": [180, 189, 211, 375], "dank": [180, 185, 375, 1171], "beispielcod": 180, "h\u00e4ndisch": [180, 1174], "zweier": [180, 206, 1186], "bewundern": 180, "k\u00f6nnt": 180, "euch": 180, "erinnern": [180, 375], "blinken": 180, "liess": 180, "irgendwo": [180, 254], "hatten": [180, 185, 375], "edg": [180, 224, 807, 965, 966], "kleinen": 180, "empf": 180, "unbedingt": [180, 195, 1171], "beispielprogramm": 180, "horcht": 180, "gesprochen": 180, "ausf\u00fchrlich": [180, 265], "schamlos": 180, "eigenwerbung": 180, "\u00fcberbleibsel": 180, "ehemaligen": 180, "socketcan": [180, 923, 924], "absorbiert": 180, "worden": [180, 189, 1171], "enth\u00e4lt": [180, 195], "schnuckelig": 180, "aufzeichnen": 180, "replai": [180, 924], "folien": [180, 189, 197, 1170], "freitag": [180, 1171], "kerneldrivertag": 180, "sorri": [180, 186, 864], "emanuel": 180, "beispieldriv": 180, "han": 180, "findet": 180, "angeboten": [180, 1170], "promin": [180, 739, 821], "implementiert": [180, 195, 226, 1180, 1194], "gute": [180, 197, 1180, 1187], "anfang": [180, 181, 189, 340], "mcp2515": [180, 825], "angesprochen": [180, 197], "fortgeschrittener": [180, 197], "einpflegt": 180, "agiert": 180, "mcp251x": 180, "at91": 180, "soc": [180, 929, 930, 931, 965], "deinem": 180, "stecker": 180, "verbaut": 180, "at91_can": 180, "lacht": 180, "zeilenweisen": 181, "nutzdaten": [181, 234], "extrahieren": [181, 208], "wollend": [181, 1187], "spalt": 181, "offensichtlich": [181, 1174], "separiert": 181, "felder": 181, "antwort": [181, 282, 324], "stdtype": 181, "gscheitesten": 181, "aufeinanderfolgend": 181, "whitespac": [181, 242, 250, 296, 388, 1069, 1092, 1148], "nimmt": [181, 206, 218, 242, 244, 250, 282, 1173, 1186], "tupl": [181, 194, 199, 201, 203, 207, 211, 213, 219, 220, 222, 226, 229, 232, 233, 235, 236, 238, 239, 243, 245, 246, 247, 252, 255, 258, 259, 261, 271, 273, 276, 279, 280, 283, 293, 295, 297, 301, 302, 314, 317, 319, 325, 327, 329, 331, 337, 340, 342, 357, 513, 722, 777, 778, 1027, 1045, 1046, 1053, 1054, 1059, 1068, 1071, 1100, 1123, 1176], "weiss": [181, 185, 195, 314, 1189, 1194], "rauskommen": 181, "aaa": [181, 242, 254, 260, 296, 330], "tbbb": 181, "tccc": 181, "feld0": 181, "feld1": 181, "feld2": 181, "ccc": [181, 260], "optional": [181, 1173], "splittet": 181, "bearbeitet": [181, 1193], "manuel": [181, 205, 210], "ddd": 181, "eee": 181, "maxsplit": [181, 250, 296, 466], "restfield": 181, "len": [181, 182, 183, 185, 195, 205, 210, 212, 213, 218, 221, 222, 226, 227, 231, 234, 237, 242, 244, 247, 250, 254, 257, 260, 272, 275, 282, 292, 296, 303, 314, 318, 324, 330, 336, 340, 349, 352, 466, 821, 925, 1026, 1039, 1052, 1054, 1060, 1062, 1069, 1071, 1073, 1074, 1118, 1136, 1140, 1144, 1147], "10101010": 181, "switchnumb": 181, "rsplit": [181, 250, 296, 466, 1069], "l1": [181, 184, 195, 212, 218, 221, 231, 234, 237, 242, 244, 250, 254, 257, 260, 263, 272, 275, 279, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 504], "l2": [181, 184, 195, 212, 218, 221, 226, 231, 234, 237, 244, 250, 254, 257, 260, 263, 272, 275, 279, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340], "\u00e4nderung": [181, 195, 1194], "87": [181, 195, 205, 210, 212, 218, 221, 227, 234, 237, 242, 244, 250, 254, 257, 260, 263, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 352, 357, 362, 1080, 1127, 1128], "zeigen": [181, 912], "dasselb": 181, "objekt": [181, 195, 205, 296], "140070310441600": 181, "ver\u00e4ndert": 181, "91": [181, 195, 205, 210, 212, 218, 221, 227, 231, 234, 237, 242, 244, 247, 250, 254, 257, 263, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 352, 357, 362, 1127, 1128], "140070371015728": 181, "92": [181, 182, 205, 210, 212, 214, 218, 221, 227, 234, 237, 242, 244, 247, 250, 254, 257, 260, 263, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 352, 357, 362, 909, 1127, 1128], "attributeerror": [181, 195, 231, 237, 242, 244, 247, 250, 254, 257, 260, 263, 272, 275, 279, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 1022, 1035, 1036, 1043], "gottseidank": 181, "alternativ": 181, "aufruf": [181, 195, 201, 205, 250, 353], "paaren": 181, "keyerror": [181, 184, 195, 205, 212, 221, 231, 234, 237, 242, 244, 247, 250, 257, 260, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 352, 1022, 1071, 1145], "nix": [181, 182, 195, 213, 221, 242, 244, 247, 272, 292, 324, 330, 352, 542], "umstaendlich": 181, "102": [181, 195, 205, 210, 212, 218, 227, 231, 234, 237, 242, 244, 247, 250, 254, 257, 260, 263, 272, 275, 279, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 352, 357, 362], "103": [181, 195, 205, 212, 218, 227, 234, 237, 242, 244, 247, 250, 254, 257, 260, 263, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 352], "104": [181, 183, 195, 205, 210, 212, 218, 231, 234, 237, 242, 244, 247, 250, 254, 257, 260, 263, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 352, 1080], "106": [181, 195, 205, 210, 212, 218, 221, 227, 231, 234, 237, 242, 244, 247, 250, 254, 257, 260, 272, 275, 279, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 352, 907], "setdefault": [181, 222, 242, 257, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 1071], "107": [181, 195, 205, 210, 212, 214, 218, 221, 234, 237, 242, 244, 250, 254, 257, 260, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 352, 354, 453], "meinvoelligsinnlosertyp": 181, "sinnlose_addit": 181, "sinnlobj": 181, "112": [181, 195, 202, 205, 210, 212, 218, 227, 231, 234, 237, 242, 244, 250, 254, 257, 260, 272, 275, 279, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 352, 907], "113": [181, 195, 205, 210, 212, 218, 221, 231, 234, 237, 242, 244, 250, 254, 257, 260, 263, 272, 275, 279, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 489], "__main__": [181, 185, 195, 200, 218, 221, 231, 234, 235, 237, 242, 244, 247, 250, 254, 257, 260, 263, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 352, 357, 1023, 1026, 1030, 1036, 1044, 1151, 1157], "0x7f64a8934890": 181, "114": [181, 183, 195, 205, 212, 218, 227, 231, 234, 237, 242, 244, 250, 254, 257, 260, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340], "115": [181, 195, 205, 210, 212, 218, 231, 234, 237, 242, 244, 250, 254, 257, 260, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340], "116": [181, 195, 205, 212, 218, 227, 231, 234, 237, 242, 244, 247, 250, 254, 257, 260, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340], "nochwenigersinnvol": 181, "der_absolute_unsinn": 181, "super": [181, 197, 198, 205, 219, 221, 222, 237, 245, 248, 252, 271, 275, 286, 295, 317, 336, 503, 1020, 1022, 1039, 1123, 1130], "unsinn": 181, "uebertreibs_jetzt_bitt": 181, "117": [181, 195, 205, 212, 218, 231, 234, 237, 242, 244, 247, 250, 254, 257, 260, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340], "118": [181, 195, 205, 212, 227, 231, 234, 237, 242, 244, 247, 250, 254, 257, 260, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 907, 1080], "0x7f64a894a790": 181, "119": [181, 195, 205, 212, 214, 221, 234, 237, 242, 244, 250, 254, 257, 260, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 354], "121": [181, 183, 195, 205, 212, 218, 221, 227, 234, 237, 242, 244, 250, 254, 257, 260, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340], "1335": 181, "122": [181, 183, 195, 205, 210, 212, 218, 221, 231, 234, 237, 242, 244, 247, 250, 254, 257, 260, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 1001], "819508": 181, "123": [181, 195, 205, 212, 213, 218, 221, 227, 231, 234, 237, 242, 244, 247, 250, 254, 257, 260, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 399, 924, 1080, 1087, 1157], "uptim": 181, "timedelta": [181, 200, 227, 229, 282], "358": [181, 237, 282, 296, 314, 324, 330, 340, 460], "125": [181, 205, 210, 212, 218, 221, 231, 234, 237, 242, 244, 250, 254, 257, 260, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340], "irgendwann_einmal_gewesen": 181, "834972": 181, "126": [181, 195, 205, 210, 212, 218, 221, 234, 237, 242, 244, 247, 250, 254, 257, 260, 272, 275, 292, 296, 302, 314, 318, 324, 330, 336, 340], "datetime_from_batteri": 181, "840837": 181, "127": [181, 195, 205, 210, 212, 218, 221, 227, 234, 237, 242, 244, 250, 254, 257, 260, 272, 275, 292, 296, 302, 314, 318, 324, 330, 336, 340, 940, 948], "846889": 181, "woher": [181, 244], "ausschauen": 181, "sinnlo": [181, 244], "sinnlos": [181, 218, 296], "repraesent": 181, "129": [181, 195, 205, 212, 214, 221, 231, 234, 237, 242, 244, 247, 250, 254, 257, 260, 263, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 354], "130": [181, 195, 205, 212, 227, 234, 237, 242, 244, 247, 250, 254, 257, 260, 272, 275, 282, 286, 292, 296, 302, 314, 318, 324, 330, 336, 340, 682, 798, 1067], "completedprocess": [181, 250, 260], "returncod": [181, 250, 260], "erfolgreich": 181, "beendet": [181, 1192], "schau": 181, "du": [181, 195, 250, 257, 263, 948, 953], "verwendest": 181, "anzuzeigen": [181, 336], "cell": [181, 194, 341, 922, 1020, 1021, 1022, 1027, 1035, 1036, 1042, 1043, 1047, 1064, 1065, 1069, 1128, 1144, 1145], "gesendet": 181, "ausf\u00fchrt": 181, "krieg": 181, "131": [181, 195, 205, 212, 221, 227, 234, 237, 242, 244, 250, 254, 257, 260, 272, 275, 292, 296, 302, 314, 318, 324, 330, 336, 340, 732], "capture_output": [181, 260], "ndrwxrwxr": [181, 260], "mar": [181, 250, 399, 852, 853, 856, 870, 882, 904, 907, 909, 933, 947, 957, 999, 1002, 1011], "2607": 181, "33768": 181, "ndrwxr": 181, "xr": [181, 477, 852, 853, 870, 872, 873, 881, 882, 907, 922, 929, 930, 931, 999, 1011, 1013, 1014, 1050], "switchzeug": 181, "keiner": [181, 195, 314, 1175], "seinen": [181, 195], "formuliert": [181, 189], "logisch": [181, 205], "irgendwa": [181, 227, 242, 244], "konverti": 181, "musst": 181, "dich": 181, "festlegen": 181, "133": [181, 195, 205, 212, 234, 237, 242, 244, 250, 254, 257, 260, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340], "stdout_as_utf8": 181, "utf": [181, 222, 231, 234, 235, 237, 241, 247, 250, 260, 282, 296, 302, 314, 318, 324, 330, 336, 1054, 1073, 1120], "134": [181, 195, 205, 212, 221, 234, 237, 242, 244, 247, 250, 254, 257, 260, 263, 272, 275, 292, 296, 302, 314, 318, 324, 330, 336, 340, 741], "135": [181, 195, 205, 212, 221, 234, 237, 242, 244, 250, 254, 257, 260, 263, 272, 275, 292, 296, 302, 314, 318, 324, 330, 336, 340], "drwxrwxr": [181, 260, 907, 965, 1000, 1001, 1002, 1011, 1013], "drwxr": [181, 852, 853, 870, 907, 922, 929, 930, 931, 1011, 1013], "136": [181, 183, 195, 205, 212, 221, 234, 237, 242, 244, 247, 250, 254, 257, 260, 272, 275, 292, 296, 302, 314, 318, 324, 330, 336, 340, 478], "fuer": [181, 242, 247, 254], "listdir": [181, 288, 292, 324, 330, 341, 364, 466], "ipynb_checkpoint": [181, 260, 324], "gitignor": [181, 467, 1001], "137": [181, 192, 195, 205, 212, 234, 237, 242, 244, 247, 250, 254, 257, 260, 263, 272, 275, 292, 296, 302, 314, 318, 324, 330, 336, 340], "rekurs": 181, "iterieren": [181, 185, 195, 210, 218], "dirpath": 181, "dirnam": [181, 234, 237, 288, 466, 541, 776, 1156], "checkpoint": [181, 231, 237, 247, 250], "itg": 181, "scope": [181, 189, 195, 206, 207, 210, 241, 253, 266, 267, 269, 278, 290, 301, 312, 316, 317, 322, 323, 326, 328, 329, 334, 335, 338, 339, 357, 394, 400, 504, 554, 574, 587, 589, 598, 683, 724, 736, 739, 754, 755, 777, 778, 1021, 1066, 1176, 1186, 1190], "getter": [181, 595, 643], "setter": [181, 221, 1043], "fibo": [181, 182, 201, 221, 235, 710, 712, 1026], "listcomprehens": 181, "generatorexpress": [181, 182], "switchdb": 181, "schema": [181, 262, 584, 1079], "michi": 181, "pyexec": 181, "ifadminstatu": 181, "ifdescr": 181, "iflastchang": 181, "snmpenginetim": 181, "ifoperstatu": 181, "fein": [181, 205], "helferlein": 181, "hochtrabend": 181, "nennt": 181, "funktional": 181, "138": [181, 195, 205, 212, 221, 234, 237, 242, 244, 250, 254, 257, 260, 272, 275, 292, 296, 302, 314, 318, 324, 330, 336, 340, 1080], "139": [181, 195, 205, 212, 221, 234, 237, 242, 244, 250, 254, 257, 260, 272, 275, 292, 296, 302, 314, 318, 324, 330, 336, 340], "140": [181, 195, 205, 212, 221, 234, 237, 242, 244, 247, 250, 254, 257, 260, 263, 272, 275, 279, 292, 296, 302, 314, 318, 324, 330, 336, 340, 682], "l_quadrat": 181, "141": [181, 195, 205, 212, 234, 237, 242, 244, 250, 254, 257, 260, 263, 272, 275, 292, 296, 302, 314, 318, 324, 330, 336, 340, 399, 907], "kompliziert": [181, 195, 247, 250, 272, 1171, 1190], "anm": 181, "versionen": [181, 251], "aufgebaut": 181, "rausnehmen": 181, "konfigurationsfil": 181, "configpars": 181, "142": [181, 195, 205, 212, 221, 234, 237, 242, 244, 250, 254, 257, 260, 272, 275, 279, 292, 296, 302, 314, 318, 324, 330, 336, 340, 942, 987], "143": [181, 195, 205, 212, 221, 234, 237, 242, 244, 247, 250, 254, 257, 260, 263, 272, 275, 292, 296, 302, 314, 318, 324, 330, 336, 340], "liste_als_str": 181, "144": [181, 195, 205, 212, 221, 228, 234, 237, 242, 244, 247, 250, 254, 257, 260, 263, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 478], "145": [181, 195, 205, 212, 221, 234, 237, 242, 244, 247, 250, 254, 257, 260, 263, 272, 275, 292, 296, 302, 314, 318, 324, 330, 336, 340, 1141], "herbert": 181, "146": [181, 195, 205, 212, 221, 234, 237, 242, 244, 250, 254, 257, 260, 263, 272, 275, 292, 296, 302, 314, 318, 324, 330, 336, 340], "heraussen": 181, "147": [181, 195, 205, 212, 221, 234, 237, 242, 244, 247, 250, 254, 257, 260, 272, 275, 292, 296, 302, 314, 318, 324, 330, 336, 340, 860], "148": [181, 195, 205, 212, 221, 234, 237, 242, 244, 250, 254, 257, 260, 263, 272, 275, 292, 296, 302, 314, 318, 324, 330, 336, 340, 601], "149": [181, 195, 205, 212, 234, 237, 242, 244, 247, 250, 254, 257, 260, 263, 272, 275, 292, 296, 302, 314, 318, 324, 330, 336, 340], "151": [181, 195, 205, 212, 221, 234, 237, 242, 244, 250, 254, 257, 260, 263, 272, 275, 292, 296, 302, 314, 318, 324, 330, 336, 340, 364], "152": [181, 195, 205, 212, 221, 234, 237, 242, 244, 250, 254, 257, 260, 272, 275, 292, 296, 302, 314, 318, 324, 330, 336, 340, 364, 1145], "mein_dict": 181, "gerhard": 181, "175": [181, 195, 212, 221, 234, 237, 242, 244, 247, 250, 254, 257, 260, 272, 275, 296, 302, 314, 318, 324, 330, 336, 340], "154": [181, 195, 205, 212, 221, 234, 237, 242, 244, 250, 254, 257, 260, 272, 275, 292, 296, 302, 314, 318, 324, 330, 336, 340, 907], "dict_as_json_str": 181, "155": [181, 195, 205, 212, 221, 234, 237, 242, 244, 247, 250, 254, 257, 260, 263, 272, 275, 292, 296, 302, 314, 318, 324, 330, 336, 340, 364], "gelesenes_dict_von_json": 181, "nahm": 182, "woch": [182, 202, 375, 376, 1171], "anspruch": 182, "platz": 182, "gesammelten": 182, "notizen": 182, "schnell": [182, 185, 205, 226, 251, 1174], "sachen": [182, 208], "is_prim": [182, 205, 208, 213, 1102], "divisor": [182, 213, 340, 776, 1094], "unmodifi": [182, 195, 231, 242, 487, 538, 584, 598, 929, 931, 1022, 1035, 1105], "randomnumb": 182, "howmani": 182, "randrang": [182, 210, 234, 242, 244, 247, 250, 254, 257, 260, 282, 324, 330, 336, 340, 352, 1023, 1058], "prev": [182, 815], "cur": [182, 302, 404], "fibonum": 182, "tend": [182, 281, 284, 291, 454, 798, 864, 1014], "input_list_str": 182, "input_list": [182, 257, 1105], "__n": [182, 776], "__lt__": [182, 244, 247, 250, 254, 272, 275, 296, 314, 336], "rh": [182, 231, 235, 250, 340, 392, 434, 450, 504, 518, 584, 598, 600, 724], "__le__": [182, 244, 247, 250, 254, 272, 275, 296, 314, 336, 1042], "__eq__": [182, 244, 247, 250, 254, 272, 275, 296, 314, 336, 1042], "__iadd__": 182, "iadd": 182, "__add__": [182, 247, 250, 254, 272, 296, 314, 336, 1042], "new_numb": [182, 237], "__radd__": [182, 247, 254, 272, 336, 1042], "radd": 182, "lh": [182, 231, 235, 340, 392, 434, 450, 504, 518, 574, 584, 598, 600, 724, 856], "makesnosens": 182, "__number": 182, "input_numb": 182, "numnber": 182, "list_of_squar": 182, "compehens": 182, "effort": [182, 254, 288, 447, 448, 465, 930], "local_assign": 182, "read_global_vari": 182, "enclos": [182, 250, 417], "local_shadows_glob": 182, "explicit_global_assign": 182, "creation": [182, 291, 313, 748, 750, 755, 777, 778, 884, 921, 951, 962, 967, 976, 982, 993, 1002, 1064, 1073, 1074, 1158], "captur": [182, 265, 266, 267, 269, 289, 326, 327, 342, 357, 722, 723, 726, 777, 778, 922, 1018, 1176], "create_funct": 182, "inner_funct": 182, "whic": 182, "f_one": 182, "f_two": 182, "launch": [182, 198], "discov": [182, 194, 201], "area": [182, 191, 224, 254, 821, 930, 1187, 1193], "scikit": [183, 185, 232, 1158], "manipul": [183, 469, 618, 741, 776, 823, 929, 942, 951, 986, 998, 1061, 1079], "appreci": [183, 234, 864, 1080], "spectral": [183, 1125], "mat": 183, "scipi": [183, 185, 213, 232, 1158], "loadmat": [183, 185], "sklearn": [183, 185, 1126, 1128, 1158], "pixel": 183, "rgb": [183, 185, 366], "dimens": [183, 185, 1128, 1179], "xkcd": 183, "schafer": [183, 194, 197, 198, 201, 219, 222, 229, 232, 235, 245, 248, 259, 262, 271, 295, 301, 329, 357, 362, 1123, 1141, 1142, 1144, 1145, 1146, 1147, 1149, 1159], "keith": [183, 194, 198, 219, 232, 245, 259, 262, 295, 301, 1123], "galli": [183, 194, 198, 219, 232, 245, 259, 262, 295, 301, 1123], "sci": 183, "kit": [183, 366], "spyder": [183, 194, 1047], "pycharm": [183, 194, 288, 1047], "retain": [183, 423, 1065], "invoc": [183, 504], "comparison": [183, 200, 223, 237, 240, 250, 258, 296, 399, 403, 409, 560, 724, 1056, 1098], "misfeatur": 183, "png": [183, 185, 330, 473, 1001, 1125], "imgfil": 183, "veggi": [183, 185, 1125], "pillow": [183, 185], "welcom": 183, "cooper": [183, 749], "477x686": 183, "imgarrai": [183, 185], "ndim": [183, 1128], "477": [183, 237, 282, 330, 340], "dtype": [183, 185, 279, 282, 286, 318, 324, 336, 1128, 1141, 1142, 1144, 1145, 1146, 1147], "uint8": 183, "255": [183, 218, 234, 237, 242, 244, 247, 250, 254, 257, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 978], "172": [183, 195, 212, 234, 237, 242, 244, 247, 250, 254, 257, 260, 263, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 449], "nrow": [183, 185], "ncol": [183, 185], "reshap": [183, 185, 219, 232, 245, 259, 262, 295, 301, 1123, 1126, 1128], "irrelev": [183, 200, 205, 238, 399, 441, 464, 870, 1054, 1136], "colorspac": 183, "mpl_toolkit": 183, "mplot3d": 183, "axes3d": 183, "pyplot": [183, 212, 231, 260, 263, 314, 318, 324, 336, 1019, 1077, 1128], "plt": [183, 212, 231, 260, 263, 314, 318, 324, 336, 1019, 1077, 1128], "fig": 183, "add_subplot": 183, "set_xlabel": 183, "set_ylabel": 183, "set_zlabel": 183, "ndindex": 183, "scatter": [183, 796], "rgb_linear": 183, "n_cluster": [183, 185], "copy_x": 183, "max_it": 183, "n_init": 183, "n_job": 183, "precompute_dist": 183, "random_st": [183, 1126, 1128], "tol": 183, "verbos": [183, 190, 469, 742, 851, 885, 887, 1058, 1151], "cluster_cent": 183, "int32": [183, 450], "327222": 183, "cluster_centers_": [183, 185], "20529747": 183, "50360681": 183, "3796182": 183, "94408609": 183, "75471018": 183, "53133237": 183, "226": [183, 195, 214, 234, 237, 242, 244, 247, 250, 254, 257, 260, 275, 282, 292, 296, 302, 314, 318, 330, 336, 340, 354], "64913628": 183, "76939951": 183, "92569235": 183, "71464963": 183, "47333306": 183, "60640492": 183, "8888303": 183, "92275244": 183, "84313209": 183, "157": [183, 195, 205, 212, 234, 237, 242, 244, 250, 254, 257, 260, 272, 275, 292, 296, 302, 314, 318, 324, 330, 336, 340], "30685398": 183, "43988931": 183, "03959132": 183, "225": [183, 195, 234, 237, 242, 244, 250, 254, 257, 260, 275, 282, 296, 302, 318, 324, 330, 336, 340, 473, 1080], "55934051": 183, "182": [183, 195, 212, 234, 237, 242, 244, 247, 250, 254, 257, 263, 272, 275, 292, 296, 302, 314, 318, 324, 330, 336, 340], "98255893": 183, "3232048": 183, "241": [183, 234, 237, 242, 244, 247, 250, 257, 260, 275, 292, 296, 302, 318, 330, 336, 340, 1080], "37322907": 183, "159": [183, 195, 205, 212, 234, 237, 242, 244, 247, 250, 254, 257, 260, 272, 275, 292, 296, 302, 314, 318, 324, 330, 336, 340], "54158234": 183, "51775529": 183, "idx": [183, 185, 250, 336], "cube": 183, "concaten": [183, 185, 222, 234, 235, 242, 250, 296, 324, 351, 399, 465, 910, 1059, 1067], "axi": [183, 185, 286, 1144, 1145], "reduced_img": [183, 185], "fromarrai": [183, 185], "float": [184, 195, 199, 201, 203, 205, 212, 213, 218, 221, 231, 234, 235, 237, 240, 242, 244, 247, 250, 255, 258, 272, 275, 280, 292, 296, 302, 313, 315, 318, 324, 330, 336, 340, 352, 353, 380, 381, 382, 386, 396, 398, 399, 403, 433, 442, 447, 466, 494, 503, 609, 610, 699, 758, 929, 987, 997, 1035, 1053, 1068, 1075, 1080, 1173, 1177], "franziska": [184, 185], "baseexcept": [184, 221, 250, 254, 275, 1022], "callabl": [184, 198, 234, 247, 257, 260, 275, 282, 292, 296, 303, 330, 682, 724, 746, 754, 1036, 1037, 1074], "forev": [184, 424, 425], "rescu": [184, 242, 597, 618, 740, 742, 825, 1020], "pooh": [184, 610], "hex": [184, 195, 205, 212, 227, 237, 247, 260, 272, 275, 282, 292, 302, 318, 324, 330, 340, 352, 368, 541, 931, 1068], "0x7f03d41165f0": 184, "nonexist": 184, "react": [184, 199, 201, 203, 304, 320, 446, 607, 929, 946, 1022, 1178], "ensu": 184, "catch": [184, 224, 240, 263, 289, 342, 368, 484, 491, 513, 530, 547, 549, 582, 608, 611, 627, 633, 637, 642, 646, 649, 650, 667, 674, 675, 676, 677, 678, 679, 710, 718, 756, 758, 776, 778, 997], "jessa": [184, 205, 212, 234, 263, 314], "verdammt": [184, 357], "ipython": [184, 221, 231, 237, 247, 250, 275, 292, 330, 907], "bd3a1af9b474": 184, "issubclass": [184, 221, 237, 250, 275], "rais": [184, 185, 199, 201, 203, 221, 222, 231, 235, 237, 238, 242, 244, 247, 248, 250, 254, 262, 263, 296, 313, 342, 368, 1020, 1027, 1033, 1043, 1069, 1071, 1144, 1145], "bummer": [184, 237, 756, 1067], "peter": [184, 207, 244, 254, 348, 349, 1060], "paul": [184, 348, 349, 1060], "mari": [184, 1060], "pet": 184, "bloh": [184, 221], "blech": [184, 292, 695, 1139], "range_iter": [184, 195, 210, 227, 234, 242, 244, 247, 250, 260, 272, 275, 282, 292, 340], "0x7f03d402e570": 184, "stopiter": [184, 195, 210, 221, 227, 231, 234, 237, 242, 244, 247, 250, 254, 260, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 710, 718, 1022, 1027], "beantwortung": [185, 375], "herrschaft": [185, 375], "gestellt": [185, 195, 375, 1175], "schulungsr\u00e4umen": [185, 375], "platzhirsch": [185, 375], "schlagen": [185, 375], "spass": [185, 375, 1180, 1182, 1187], "unglaublich": [185, 375], "lustig": [185, 206, 375, 1171, 1182], "vermittelt": [185, 375, 1192], "gelernt": [185, 375, 1180], "anwend": [185, 375], "beachten": [185, 206, 375, 1186], "zudem": [185, 375], "kursleit": [185, 375], "sympathisch": [185, 375], "kompet": [185, 375], "w\u00fcrde": [185, 195, 375], "weiterempfehlen": [185, 375], "wiederholen": [185, 375], "christoph": [185, 227, 375], "jemand": [185, 375], "lassen": [185, 195, 206, 375, 1174, 1180, 1186, 1190, 1194], "bevor": [185, 1180, 1187, 1194], "anf\u00e4ngerthemen": 185, "vorbei": [185, 244, 250, 1183], "herumzureiten": 185, "gehackt": [185, 225], "zeug": [185, 314, 1189], "chef": 185, "vorgespr\u00e4ch": 185, "\u00fcbungsbeispiel": [185, 195], "mitgegeben": 185, "ausgehend": [185, 206, 375], "spektralbild": 185, "sagt": [185, 242], "verwend": [185, 218, 375], "clusteringalgorithmu": 185, "kategorisieren": 185, "abgebildeten": 185, "st\u00fccke": [185, 189], "erkennen": [185, 1175], "hab": 185, "erlaubt": [185, 195, 1171], "kursvorbereitung": 185, "appet": 185, "reduzieren": 185, "farbredukt": 185, "farben": 185, "bilddaten": 185, "interoperiert": 185, "nahtlo": [185, 1180, 1187], "zufal": [185, 211, 1174], "alpha": [185, 250, 296, 1078], "ausgangsbild": 185, "abzuschneiden": 185, "restoren": 185, "algorithmu": [185, 205, 250, 254, 257], "reduc": [185, 410, 419, 426, 432, 436, 439, 443, 452, 456, 461, 462, 482, 684, 722, 775, 777, 778, 931, 1125], "acht": [185, 205, 206, 250, 282, 302, 330, 1186], "\u00fcberschaubar": 185, "ausdrucksst\u00e4rk": 185, "bemerkbar": 185, "wegschneiden": 185, "pil": 185, "kmean": 185, "nrgba": 185, "disregard": [185, 403], "arbitrarili": [185, 784, 957, 961, 1020], "linear_rgb": 185, "rgba": 185, "ergeben": 185, "testprogramm": 185, "imndata": 185, "teilzeitmitarbeiterin": 185, "studiert": 185, "folgendem": [185, 227, 1194], "bekackten": 185, "inputformat": 185, "parsen": [185, 210], "zwischendurch": 185, "gruppenarbeit": 185, "h2o": 185, "dat": 185, "mass": [185, 291], "0000000e": 185, "2662399e": 185, "5994910e": 185, "4391972e": 185, "0048070e": 185, "0078250e": 185, "hessian": 185, "hartre": 185, "bohr": 185, "kamu": 185, "05054e": 185, "61610e": 185, "00000e": 185, "20781e": 185, "08051e": 185, "83024e": 185, "06829e": 185, "42629e": 185, "65256e": 185, "52600e": 185, "69570e": 185, "91733e": 185, "04388e": 185, "34292e": 185, "04780e": 185, "63758e": 185, "19019e": 185, "41217e": 185, "11622e": 185, "21912e": 185, "11752e": 185, "04198e": 185, "36702e": 185, "14839e": 185, "71613e": 185, "96373e": 185, "40456e": 185, "21369e": 185, "24236e": 185, "60956e": 185, "84350e": 185, "29686e": 185, "92365e": 185, "einigen": [185, 206, 375], "runden": [185, 195], "nachdenken": 185, "einigerma\u00dfen": 185, "zufrieden": 185, "load_dat": 185, "matrix_lin": 185, "readlin": [185, 212, 214, 221, 222, 234, 235, 241, 250, 257, 282, 292, 318, 324, 330, 336, 349, 885, 1073], "vergeigt": 185, "matrix_el": 185, "unnecessari": [185, 394, 424], "triangular": 185, "max": [185, 195, 213, 218, 231, 237, 240, 242, 244, 247, 252, 257, 275, 329, 330, 340, 408, 424, 560, 609, 862, 923, 1128], "row_no": 185, "__name__": [185, 221, 222, 235, 244, 250, 254, 275, 292, 296, 350, 357, 1021, 1023, 1026, 1030], "bildverarbeitung": 185, "ahnung": [185, 227], "beeeeeep": 186, "broad": [186, 483, 1130, 1176, 1177], "histori": [186, 222, 240, 266, 267, 269, 271, 317, 326, 327, 403, 680, 684, 686, 722, 775, 777, 778, 784, 827, 856, 862, 913, 1123, 1129, 1135, 1178, 1182, 1189], "responsibl": [186, 984, 1156], "sane": [186, 330, 368, 862, 1131, 1156], "interfer": [186, 454, 467, 930], "paradigm": [186, 861, 869, 922, 930, 1191], "breakag": [186, 805], "nontrivi": [186, 194, 198, 359, 1047, 1150], "inappropri": [186, 381, 386, 487, 783], "conclus": [186, 194, 201, 823], "awkward": 186, "encourag": [186, 784], "hear": 186, "predat": [186, 788, 914, 993], "doubt": [186, 231, 237, 247, 250, 254, 741, 1054], "schulungsbeschreibung": [187, 1170], "drehbuch": 187, "workshop": 187, "infolgedessen": 187, "virtuel": [187, 251, 1180, 1190, 1191], "konzipiert": [187, 197, 375], "add_subdirectori": [188, 474, 478, 991, 1165], "group1": 188, "group2": 188, "montag": [189, 197, 198, 219, 223, 1171], "vorbereitung": [189, 375, 1173], "mitbringen": 189, "teilzunehmen": 189, "stattfinden": [189, 265], "folgt": 189, "hierzu": 189, "privatheitsrichtlinien": 189, "bauanleitung": 189, "ausprobieren": 189, "willkommen": 189, "schulungsbeschreibungen": 189, "raii": [189, 291, 582, 778], "stl": [189, 366, 430, 543, 544, 545, 546, 548, 550, 551, 552, 553, 555, 556, 557, 558, 559, 582, 583, 621, 625, 647, 649, 650, 664, 679, 690, 778, 1175, 1176, 1177], "scott": [189, 689, 744], "meyer": [189, 492, 744], "primer": [189, 1163], "sonstig": 189, "argh": [189, 425, 676, 704, 1022, 1151, 1163], "kursanforderung": 189, "erg\u00e4nzend": 189, "lasst": 189, "testgetrieben": 189, "testcas": [189, 1157], "aufgab": [189, 195, 225, 1183], "hacken": 189, "diskutieren": 189, "niederschrift": 189, "geschehenen": 189, "geh\u00f6renden": 189, "privaten": 189, "verl\u00e4uft": 189, "ansehen": 189, "clonen": 189, "wann": [189, 197], "zugeh\u00f6rigen": 189, "entspricht": 189, "unbetr\u00e4chtlich": 189, "gcc5": 189, "laufen": [189, 1171], "darau": [189, 197], "installationsanleitung": 189, "benutzung": [189, 357, 362], "zuerst": [189, 1194], "aggreg": [189, 455, 466, 584, 837, 1141, 1163], "klassen": [189, 195, 201, 358, 1175], "konstruktoren": [189, 213, 265, 358, 1175], "methoden": [189, 195, 207, 352, 1175], "referenzen": [189, 195, 206, 207, 265, 1175, 1186], "klass": [189, 218, 314], "\u00e4quival": 189, "\u00fcbergab": 189, "langsam": [189, 195, 244], "ausbauen": 189, "dynmem": 189, "demonstrieren": 189, "alloziert": [189, 195, 212], "konstruktor": 189, "destruktor": 189, "vermeiden": [189, 195, 1192], "dtor": [189, 482, 568, 654, 659, 690, 693, 727], "ausflug": [189, 205, 246], "capac": [189, 635], "\u00fcbung": [189, 206, 207, 1186], "handgestrickt": 189, "fallen": [189, 1174, 1175], "lustvol": 189, "erleiden": 189, "teufel": [189, 1174], "smart": [189, 265, 287, 326, 358, 359, 360, 375, 464, 541, 651, 691, 692, 722, 742, 747, 755, 763, 775, 777, 778, 1176, 1179], "shared_ptr": [189, 224, 240, 266, 267, 269, 287, 289, 326, 327, 496, 560, 651, 682, 691, 722, 737, 743, 744, 747, 755, 775, 777, 778, 1176], "unique_ptr": [189, 224, 240, 266, 267, 269, 287, 289, 326, 327, 482, 489, 496, 522, 523, 560, 651, 690, 691, 722, 737, 740, 747, 755, 774, 775, 776, 777, 778, 1176], "demonstriert": 189, "vorgriff": 189, "sortieren": [189, 1175], "employeerecord": 189, "parametrisierbarem": 189, "koordinatentyp": 189, "102ff": 189, "arten": [189, 1173], "containern": 189, "pointerarithmetik": 189, "wiederholung": [189, 206, 213, 249, 1186], "iteratoren": [189, 252], "laufzeitverhalten": [189, 207], "verbesserungen": 189, "gegen\u00fcb": [189, 1173], "6ff": 189, "lambda": [189, 221, 222, 235, 237, 240, 252, 265, 272, 289, 292, 297, 314, 318, 330, 466, 560, 625, 697, 722, 727, 732, 734, 746, 749, 754, 777, 778, 1018, 1175, 1176, 1177], "gegen\u00fcberstellung": 189, "sort_algorithm_reverse_lambda": 189, "vererbung": [189, 1175], "fallstudi": 189, "livegehackt": 189, "angebunden": 189, "komplex": [189, 242, 244, 250, 257, 282, 1192], "aufbauen": 189, "vergleichbaren": 189, "anbinden": 189, "wurden": [189, 197], "eigen": [189, 208, 1175, 1180, 1187, 1192, 1193], "kapitel": [189, 357, 362, 1173], "behandelt": [189, 1170], "vorbeigehen": 189, "dcmake_cxx_flag": 190, "dcmake_install_prefix": [190, 472], "libgtest": [190, 191, 287, 289, 1163, 1165], "claim": [190, 392, 601, 603, 604, 860, 953], "simlp": 190, "concret": [190, 198, 224, 287, 482, 489, 494, 509, 571, 657, 659, 754, 762, 1035, 1130], "find_packag": [190, 192, 1165], "add_execut": [190, 467, 473, 479, 525, 561, 564, 567, 570, 573, 576, 579, 673, 988, 995, 1000, 1001, 1162, 1165, 1167], "add_test": [190, 480, 564, 1162, 1165], "emphasi": 190, "ultim": [190, 221, 241, 592, 757, 930], "luke": [190, 250, 1165], "thetoplevel": 190, "findgtest": [190, 192, 1165], "gtest_root": 190, "dgtest_root": 190, "paranoidli": 190, "bitrot": [191, 1165], "var": [191, 195, 234, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336, 518, 825, 857, 887, 907, 912, 913, 916, 1013], "libgmock": [191, 287, 289], "gmock": [191, 1163], "dcmake_build_typ": [191, 469], "loudli": [191, 592, 828, 938], "flathub": 192, "appstream": [192, 330], "visualstudio": [192, 251, 377], "flatpakref": 192, "stone": 192, "snap": 192, "hate": [192, 586], "findpackagehandlestandardarg": 192, "gtest_librari": 192, "gtest_include_dir": 192, "gtest_main_librari": 192, "378": [192, 234, 237, 244, 282, 324, 330, 340, 1080], "_fphsa_failure_messag": 192, "197": [192, 195, 212, 221, 234, 237, 242, 244, 247, 250, 254, 257, 263, 275, 292, 296, 302, 314, 318, 324, 330, 336, 340], "find_package_handle_standard_arg": 192, "occur": [192, 254, 384, 399, 404, 405, 451, 475, 558, 752, 823, 885, 914, 984, 1068, 1069, 1073, 1181], "gessmann": 192, "cpoint_demo": 192, "cmakefil": [192, 467, 473, 478, 1000, 1001], "cmakeoutput": 192, "sigh": [192, 224, 541, 744, 1114], "jail": 192, "dict_extensions_suit": 193, "thing_suit": 193, "xsv": 193, "dict_extens": 193, "wednesdai": [194, 202, 284], "thursdai": [194, 198], "publicli": [194, 574], "freedom": [194, 454, 660], "spontan": 194, "cost": 194, "agil": [194, 208, 464, 1150], "methodologi": 194, "formul": [194, 290, 466, 699, 757, 948, 1179], "diadact": [194, 1047], "anaconda": [194, 288, 330, 1047], "dictat": [194, 304, 320, 403, 442, 993, 1047, 1048, 1132, 1149, 1151, 1178], "volumin": [194, 1047], "nodepad": [194, 1047], "configurabilti": [194, 1149], "eclips": [194, 1047, 1139], "pydev": [194, 1047], "seemingli": [194, 198, 999, 1047, 1123], "strang": [194, 929, 1047], "emac": [194, 214, 292, 885, 907, 999, 1047, 1149], "immutabilii": 194, "crisi": 194, "slept": 194, "lunch": 194, "squeez": 194, "Such": [194, 273, 999, 1156], "takeawai": 194, "nonverb": 194, "antenna": 194, "Being": [194, 868, 909, 931, 1063], "stubborn": 194, "greybeard": 194, "distutil": 194, "azur": 194, "devop": [194, 1046], "heavyweight": [194, 363, 746], "reach": [194, 242, 666, 741, 764, 766, 784, 789, 856, 957, 1068], "afternoon": [194, 317], "simplic": [194, 504, 856, 923, 946, 1020], "paral": 194, "imposs": [194, 254, 450, 486, 710, 721, 823, 975], "expand": [194, 250, 296, 424, 425, 928, 957, 999, 1001], "entertain": [194, 198, 219, 222, 245, 271, 295, 317, 1123], "david": [194, 197, 198, 206, 219, 222, 245, 271, 286, 290, 291, 295, 312, 316, 317, 358, 359, 690, 739], "beazlei": [194, 197, 198, 206, 219, 222, 245, 271, 290, 291, 295, 312, 316, 317, 358, 359], "freelanc": 194, "raymond": [194, 197, 198, 201, 205, 206, 219, 222, 229, 245, 248, 271, 295, 317], "hetting": [194, 197, 198, 201, 205, 206, 219, 222, 229, 245, 248, 271, 295, 317], "bias": 194, "humor": [194, 929, 1068], "emphas": [194, 201, 223, 577, 780, 788, 805, 1151], "dissect": [194, 198, 286, 727, 1027, 1123], "multiprocess": [194, 198, 248, 290, 291, 317, 1123, 1180, 1187, 1191], "truli": [194, 198, 1123], "chri": [194, 198, 219, 1123], "wilcox": [194, 198, 219, 1123], "frontier": [194, 198, 271, 295, 317, 1123], "whop": [194, 198, 271, 295, 317, 1014, 1123, 1130], "covid": 194, "apart": [194, 254, 291, 417, 683, 923, 1025], "ipykernel_launch": [195, 247, 250, 330], "57bd7d77": 195, "6e54": 195, "4dcd": 195, "b7a8": 195, "452f82f88569": 195, "welt": [195, 205, 218, 352, 375, 1171, 1192], "doku": [195, 205, 272], "aeh": 195, "__doc__": [195, 218, 221, 231, 234, 237, 242, 244, 247, 250, 254, 257, 260, 263, 272, 275, 282, 296, 314, 318, 324, 330, 336, 350, 352, 1023, 1051, 1074], "interaktiven": 195, "modu": 195, "formatierung": [195, 205, 265], "\u00fcbernimmt": 195, "nachdem": [195, 205], "welch": [195, 235], "hamma": 195, "bieten": [195, 1190], "sech": [195, 205, 218, 250, 257, 282, 296], "zurueck": [195, 254, 292], "objektidentit\u00e4t": [195, 213], "0x7fe9d8578dc0": 195, "referenzieren": 195, "wechselt": 195, "zeigt": [195, 205, 1187], "identit\u00e4t": 195, "0x7fe9c4454d90": 195, "listen": [195, 201, 206, 207, 211, 246, 265, 318, 357, 809, 924, 940, 1139, 1186, 1191, 1193], "ausdrucksstark": 195, "trotzdem": [195, 1180, 1187], "lesbar": [195, 244], "beid": [195, 210, 226, 330, 1194], "modifizieren": 195, "modifik": 195, "sichtbar": [195, 375], "gerechnet": 195, "valueerror": [195, 205, 221, 227, 234, 242, 244, 247, 250, 254, 257, 260, 263, 275, 282, 296, 314, 318, 324, 330, 336, 340, 1022, 1069], "typeerror": [195, 231, 234, 237, 242, 244, 247, 250, 254, 257, 260, 272, 275, 282, 292, 296, 314, 318, 324, 330, 336, 351, 1021, 1022, 1035, 1042, 1065, 1074, 1144, 1145], "gel\u00f6scht": 195, "retten": 195, "uff": 195, "140641996429568": 195, "\u00e4ndern": [195, 207, 1194], "erzeugt": [195, 205], "operanden": 195, "unver\u00e4ndert": 195, "new_l": [195, 250, 1055], "140641996429632": 195, "hurra": [195, 212, 275], "killerfeatur": 195, "abcabc": [195, 234], "sequentiel": [195, 205, 244, 249, 1175], "suche": 195, "Suche": [195, 207, 218, 226, 244], "umst\u00e4ndlich": [195, 205], "andrea": [195, 196, 254, 703, 710], "pfeifer": 195, "gefundener_us": 195, "glauben": 195, "klammern": 195, "begrenz": 195, "interpretiert": 195, "overriden": 195, "ausdruck": 195, "evaluierungsreihenfolg": 195, "9223372036854775808": 195, "einstellig": 195, "schreibt": [195, 913, 1194], "datenmengen": 195, "abzulegen": 195, "sucht": 195, "solchen": [195, 205], "vorstellungsvermoegen": 195, "milliarden": 195, "sebastian": 195, "hugo": [195, 237], "machma": 195, "behandeln": 195, "nichtvorhandensein": 195, "ausnahm": 195, "regel": 195, "mim": 195, "victor": 195, "festzustellen": 195, "evaluiert": 195, "aufgerufen": 195, "operand": [195, 212, 231, 234, 260, 401, 402, 403, 409, 600, 601, 603, 604, 699, 732, 1042, 1056], "bereit": [195, 206, 1170, 1175, 1186], "gesamtergebni": 195, "jaja": [195, 250], "rechten": 195, "sparen": 195, "potschert": [195, 207, 210, 213, 237, 244, 257, 324, 336], "berechnung": [195, 244], "summ": [195, 218, 244, 250, 254, 257, 282, 307, 330, 336, 340], "einzig": [195, 510, 524, 1189, 1192], "iteriert": [195, 205], "bildet": [195, 250], "primitiveren": 195, "intelligenteren": 195, "0x7fe9c43c3c90": 195, "letzt": [195, 210, 255], "schleif": [195, 206, 207, 211, 1186], "jede": [195, 357, 362, 1170, 1193, 1194], "selb": [195, 205], "k\u00fcrzer": 195, "vergleicht": 195, "objektidentit\u00e4ten": 195, "objektinhalt": 195, "modifiziert": 195, "kopieren": [195, 357, 362, 1175], "vermeintlich": 195, "modifiktionen": 195, "sch\u00fctzen": 195, "l3": [195, 212, 244, 250, 260, 272, 282, 292, 302, 324, 504], "kopi": [195, 244], "klar": [195, 205, 1171], "geschachtelt": [195, 206, 207, 1186], "gleicher": 195, "referenziert": [195, 205], "erachtet": 195, "ersparst": 195, "kopien": 195, "ran": [195, 267, 317, 472, 489, 538, 539, 540, 541, 602, 741, 1016, 1163], "parametern": [195, 218], "beliebigen": [195, 913], "definieren": 195, "vergleichbar": 195, "unterst\u00fctzen": 195, "ihn": [195, 254], "\u00e4pfel": 195, "birnen": 195, "verglichen": 195, "hingegen": [195, 205, 1189], "php": [195, 225, 241, 744], "falschem": 195, "uebergeben": 195, "vergleich": [195, 218, 226, 255, 265], "aepfeln": 195, "140641996137808": 195, "add_to_list": 195, "__defaults__": [195, 244, 254, 275, 296, 1065], "meine_list": [195, 205], "defaultwert": 195, "benutzt": [195, 1180], "allerhand": 195, "seiteneffekten": 195, "aufpassen": 195, "ewig": 195, "existierend": 195, "unf\u00e4ll": 195, "wechselwirkungen": 195, "eventuellen": 195, "globalen": [195, 205], "156": [195, 205, 212, 234, 237, 242, 244, 247, 250, 254, 257, 260, 272, 275, 292, 296, 302, 314, 318, 324, 330, 336, 340], "erzwingt": 195, "158": [195, 205, 212, 221, 234, 237, 242, 244, 247, 250, 254, 257, 260, 263, 272, 275, 279, 292, 296, 302, 314, 318, 324, 330, 336, 340], "160": [195, 205, 212, 221, 234, 237, 242, 244, 250, 254, 257, 272, 275, 286, 292, 296, 302, 314, 318, 324, 330, 336, 340, 471, 778], "gesucht": 195, "genauer": 195, "n\u00e4chst\u00e4u\u00dferen": 195, "162": [195, 205, 212, 234, 237, 242, 244, 247, 250, 254, 257, 260, 272, 275, 292, 296, 302, 314, 318, 324, 330, 336, 340], "nirgend": 195, "163": [195, 205, 212, 228, 234, 237, 242, 244, 250, 254, 257, 260, 272, 275, 292, 296, 302, 314, 318, 324, 330, 336, 340], "gibtsnetglob": 195, "gibtsnet": 195, "164": [195, 205, 212, 221, 234, 237, 242, 244, 250, 254, 257, 260, 272, 275, 292, 296, 302, 314, 318, 324, 330, 336, 340], "nameerror": [195, 210, 244, 250, 275, 296, 302, 330, 336, 1022, 1064], "aufgabenstellung": 195, "kandidat": 195, "ersten": [195, 197, 210, 302, 349, 1172, 1192, 1194], "unsportlich": 195, "zweiten": [195, 197, 302], "unnachhaltig": 195, "dritten": [195, 302], "gelegenheit": 195, "gab": [195, 197], "erz\u00e4hlen": [195, 1173], "165": [195, 205, 212, 234, 237, 242, 244, 247, 250, 254, 257, 260, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 1080], "seq": [195, 213, 275, 330, 340, 815, 987, 1025], "fromkei": [195, 241, 246, 258, 330], "166": [195, 205, 212, 234, 237, 242, 244, 250, 254, 257, 272, 275, 292, 296, 302, 314, 318, 324, 330, 336, 340], "167": [195, 205, 212, 234, 237, 242, 244, 247, 250, 254, 257, 260, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340], "xxx": [195, 212, 234, 242, 244, 250, 260, 282, 314, 318, 324, 330, 336, 351, 353, 433, 509], "kksvjhbsk": 195, "sgkysdudsvvc": 195, "dict_kei": [195, 263, 292, 1071], "diesmal": 195, "169": [195, 205, 212, 221, 234, 237, 242, 244, 247, 250, 254, 257, 263, 272, 275, 292, 296, 302, 314, 318, 324, 330, 336, 340], "170": [195, 212, 221, 228, 234, 237, 242, 244, 247, 250, 254, 257, 260, 272, 275, 292, 296, 302, 314, 318, 324, 330, 336, 340], "irgendein": [195, 227], "171": [195, 212, 214, 221, 234, 237, 242, 244, 250, 254, 257, 260, 263, 272, 275, 292, 296, 302, 314, 318, 324, 330, 336, 340, 354], "sonst": [195, 205, 242, 244, 257], "kategori": 195, "number_str": 195, "173": [195, 212, 234, 237, 242, 244, 247, 250, 254, 257, 260, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 916], "ihm": [195, 197, 206], "174": [195, 212, 234, 237, 242, 244, 247, 250, 254, 257, 263, 272, 275, 292, 296, 302, 314, 318, 324, 330, 336, 340, 907], "176": [195, 212, 234, 237, 242, 244, 247, 250, 254, 257, 260, 272, 275, 296, 302, 314, 318, 324, 330, 336, 340], "177": [195, 212, 234, 237, 242, 244, 250, 254, 257, 260, 272, 275, 292, 296, 302, 314, 318, 324, 330, 336, 340], "178": [195, 212, 221, 234, 237, 242, 244, 250, 254, 257, 263, 272, 275, 292, 296, 302, 314, 318, 324, 330, 336, 340], "179": [195, 202, 212, 234, 237, 242, 244, 247, 250, 254, 257, 260, 263, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340], "180": [195, 212, 234, 237, 242, 244, 247, 250, 254, 257, 260, 263, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 466, 809], "181": [195, 212, 234, 237, 242, 244, 250, 254, 257, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 466, 1145], "heisst": [195, 207, 211, 212, 1174, 1180], "sequenz": 195, "kopiert": 195, "unterschi": [195, 212, 218, 242], "sobald": [195, 197], "183": [195, 212, 221, 234, 237, 242, 244, 250, 254, 257, 260, 263, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340], "\u00fcbergeben": 195, "184": [195, 212, 234, 237, 242, 244, 247, 250, 254, 257, 263, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340], "it1": 195, "it2": 195, "multipli": [195, 222, 235, 254, 296, 689], "n2": [195, 254], "combined_iter": 195, "186": [195, 212, 221, 234, 237, 242, 244, 247, 250, 254, 257, 260, 263, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340], "schlecht": 195, "simplen": 195, "transformationen": 195, "generieren": 195, "quadratzahlen": [195, 244], "187": [195, 234, 237, 242, 244, 250, 254, 257, 260, 263, 272, 275, 282, 292, 296, 302, 314, 318, 330, 336, 340], "quadrat": 195, "naeherung": 195, "performant": 195, "gen_squar": 195, "189": [195, 212, 234, 237, 242, 244, 247, 250, 254, 257, 263, 272, 275, 292, 296, 302, 314, 318, 330, 336, 340], "syntaktisch": [195, 218], "191": [195, 212, 221, 234, 237, 242, 244, 250, 254, 257, 260, 263, 272, 275, 292, 296, 302, 314, 318, 330, 336, 340], "genexpr": [195, 221, 314, 324, 330], "0x7fe9c43f2900": 195, "193": [195, 212, 221, 234, 237, 242, 244, 250, 254, 257, 260, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340], "194": [195, 212, 221, 234, 237, 242, 244, 247, 250, 254, 257, 263, 272, 275, 282, 296, 302, 314, 318, 324, 330, 336, 340], "195": [195, 212, 234, 237, 242, 244, 247, 250, 254, 257, 263, 275, 296, 302, 314, 318, 324, 330, 336, 340], "indent": [195, 210, 228, 235, 241, 250, 251, 412, 1045, 1048, 1058, 1148], "196": [195, 212, 221, 234, 237, 242, 244, 247, 250, 254, 257, 263, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340], "userlist": 195, "nochwa": [195, 244, 282, 340], "dropdown": 195, "dropdownlist": 195, "fehleranf\u00e4llig": 195, "198": [195, 212, 221, 234, 237, 242, 244, 247, 250, 254, 257, 263, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340], "202": [195, 212, 221, 231, 234, 237, 242, 244, 247, 250, 254, 257, 260, 272, 275, 282, 296, 302, 314, 318, 330, 336, 340, 466, 489], "203": [195, 212, 221, 223, 234, 237, 242, 244, 247, 250, 254, 257, 272, 275, 296, 302, 314, 318, 324, 330, 336, 340], "205": [195, 221, 234, 237, 242, 244, 247, 250, 254, 257, 260, 272, 275, 292, 296, 302, 314, 318, 324, 330, 336, 340], "206": [195, 234, 237, 242, 244, 250, 254, 257, 260, 272, 275, 296, 302, 314, 318, 324, 330, 336, 340], "207": [195, 221, 234, 237, 242, 244, 250, 254, 257, 260, 275, 296, 302, 318, 324, 330, 336, 340], "208": [195, 234, 237, 242, 244, 250, 254, 257, 260, 275, 296, 302, 314, 318, 324, 330, 336, 340], "209": [195, 221, 234, 237, 242, 244, 250, 254, 257, 260, 272, 275, 296, 302, 314, 318, 324, 330, 336, 340], "user_a": 195, "user_b": 195, "n\u00e4herung": 195, "nackten": [195, 1173], "210": [195, 221, 234, 237, 242, 244, 250, 254, 257, 275, 282, 296, 302, 314, 318, 324, 330, 336, 340], "hantiert": [195, 1174], "anderem": [195, 1180, 1187], "211": [195, 221, 234, 237, 242, 244, 250, 254, 257, 260, 272, 275, 292, 296, 302, 318, 324, 330, 336, 340], "reviewten": 195, "funktionsaufruf": [195, 257], "sonder": 195, "stackoverflowprogrammierung": 195, "entgegenwirken": 195, "ausholen": 195, "212": [195, 221, 234, 237, 242, 244, 247, 250, 254, 257, 260, 272, 275, 296, 302, 314, 324, 330, 336, 340], "veloc": [195, 221, 353, 1065], "length_m": [195, 221, 353, 1065], "time_": [195, 221, 353, 1065], "213": [195, 234, 237, 242, 244, 247, 250, 254, 257, 260, 272, 275, 296, 302, 324, 330, 336, 340], "spiel": 195, "214": [195, 234, 237, 242, 244, 250, 254, 257, 260, 272, 275, 296, 302, 314, 324, 330, 336, 340], "liegen": 195, "positionel": 195, "215": [195, 234, 237, 242, 244, 250, 254, 257, 260, 272, 275, 282, 296, 302, 324, 330, 336, 340], "param": [195, 205, 218, 235, 263, 296, 695, 744, 745, 930, 986], "216": [195, 221, 234, 237, 242, 244, 250, 254, 257, 272, 275, 282, 296, 302, 314, 318, 324, 330, 336, 340], "217": [195, 234, 237, 242, 244, 247, 250, 254, 257, 260, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340], "218": [195, 234, 237, 242, 244, 247, 250, 254, 257, 260, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340], "219": [195, 221, 234, 237, 242, 244, 250, 254, 257, 260, 272, 275, 292, 296, 302, 314, 324, 330, 336, 340], "entpacken": 195, "positionellen": 195, "221": [195, 221, 234, 237, 242, 244, 250, 254, 257, 260, 272, 275, 282, 292, 296, 302, 314, 318, 330, 336, 340], "kwarg": [195, 221, 248, 250, 254, 275, 296, 1020, 1024, 1045], "explizi": 195, "rauskletzeln": 195, "223": [195, 234, 237, 242, 244, 247, 250, 254, 257, 260, 275, 282, 296, 302, 314, 318, 324, 330, 336, 340, 1136], "celebrate_another_birthdai": 195, "224": [195, 234, 237, 242, 244, 247, 250, 254, 257, 260, 275, 282, 296, 302, 318, 324, 330, 336, 340], "227": [195, 234, 237, 242, 244, 250, 254, 257, 260, 275, 282, 292, 296, 302, 314, 324, 330, 336, 340], "228": [195, 234, 237, 242, 244, 247, 250, 254, 257, 260, 275, 282, 296, 302, 314, 324, 330, 336, 340], "zeiterfassung": 196, "__pycache__": [196, 222, 235], "supp": 196, "cpython": [196, 221, 231, 237, 247, 250], "pyc": 196, "dienstag": 197, "anleitung": 197, "offen": [197, 375, 1170], "vorwissen": [197, 1175], "konkreten": [197, 375], "aufgabenstellungen": 197, "dienstgeb": 197, "mitgebracht": 197, "quickstart": [197, 1181], "vorgetragen": 197, "wenngleich": [197, 375, 1180, 1190, 1192, 1193], "un\u00fcblichen": 197, "reihenfolg": [197, 1171], "verbrachten": 197, "firmenprojekt": 197, "entspringenden": 197, "festgehalten": 197, "empfehlungen": 197, "weitergehen": 197, "k\u00f6nnte": [197, 1194], "idiomat": [197, 198, 201, 219, 222, 229, 245, 248, 271, 295, 1123], "lieblingsphras": 197, "bringt": [197, 1173, 1192], "forgiv": [197, 198, 295, 1123], "eafp": [197, 198, 295, 1123], "begriff": [197, 211], "viertelstund": 197, "regex": [197, 210, 235, 237, 262, 263, 272, 295, 302, 330, 1067, 1123], "unumg\u00e4nglich": [197, 1188], "textuel": 197, "analysieren": 197, "hero": [197, 198, 219, 222, 245, 271, 295, 317, 1123], "unterhaltsamen": 197, "keynot": [197, 198, 219, 222, 245, 248, 271, 295, 317, 1123], "konferenz": 197, "pydata": [197, 198, 219, 222, 245, 271, 295, 317, 1123], "chicago": [197, 198, 219, 222, 245, 271, 295, 317, 1123], "witzig": 197, "kommt": [197, 212, 222, 225, 251, 1183, 1192, 1194], "selten": 197, "l\u00e4nge": 197, "ganzen": [197, 206, 1186], "abend": 197, "totalschaden": 197, "\u00fcbertragen": 197, "jedem": 197, "angemeldet": 197, "experienc": [198, 287, 289, 316, 375, 1051, 1181], "machinelearn": 198, "fuzzi": [198, 237], "improvis": 198, "shall": 198, "jango": 198, "rush": 198, "strong": [198, 248, 402, 1130, 1132], "claus": [198, 201, 231, 237, 247, 252, 274, 704, 1025, 1058, 1061], "whet": [198, 281], "appetit": [198, 281], "__dict__": [198, 218, 221, 222, 234, 235, 244, 247, 250, 254, 263, 275, 292, 296, 314, 336, 1036, 1042], "con": [198, 762, 910, 1016], "fiction": 198, "get_temperature_celsiu": 198, "competitor": 198, "eana": 198, "get_temperature_fahrenheit": 198, "eanaadapt": 198, "unserthermomet": 198, "revisit": [198, 240, 248, 271, 289, 313, 617], "shift": [198, 239, 442, 454, 586, 635, 930, 1042], "visitor": [198, 758, 767, 769], "gang": [198, 1179], "idiom": [198, 583, 720], "classic": [198, 441, 492, 583, 763, 777, 778, 817, 1179], "travers": [198, 455, 728, 740, 1022, 1027, 1063], "convolut": 198, "__call__": [198, 244, 254, 275, 296, 302, 1021], "__str__": [198, 221, 222, 235, 244, 247, 250, 254, 272, 275, 296, 313, 314, 336, 368, 1022], "__repr__": [198, 244, 247, 250, 254, 272, 275, 296, 314, 336], "poor": [198, 240, 395, 410, 419, 426, 432, 436, 439, 443, 452, 456, 461, 462, 684, 722, 775, 777, 778, 815, 922, 952, 997], "deleg": [198, 327, 592, 722, 777, 778, 1176], "deck": [198, 223, 560], "sensordata": 198, "sensordata_test": 198, "historydata": 198, "slowli": [198, 577, 682, 807, 922], "csvreport": 198, "csv2sqlite3": 198, "frontend": [198, 593, 999, 1017, 1152], "flaskerl": 198, "reiter": [198, 219, 238, 240, 245, 248, 365, 594, 1123], "phrase": [198, 201, 219, 242, 244, 245, 248, 250, 275, 852, 853, 1040, 1123], "impress": [198, 440], "brought": [198, 454, 1031], "cloth": 198, "extraordinari": 198, "mondai": [199, 201, 203, 204, 229, 278, 284, 287, 289], "preliminari": [199, 201, 202, 203, 204], "homogen": [199, 375], "versu": [199, 201, 203], "immut": [199, 201, 203, 205, 206, 213, 220, 222, 233, 234, 235, 237, 243, 249, 252, 258, 264, 273, 281, 283, 284, 297, 314, 318, 325, 331, 352, 424, 1046, 1053, 1054, 1055, 1059, 1186], "datastructur": [199, 223, 241, 1059], "exercise4": 199, "uh2ebfw8oym": [199, 203], "f26namfjggw": 199, "5qqq3yzbkp8": 199, "ugharkscop9uthgcoaec": 199, "pairwis": [200, 234, 599], "vale": 200, "bewar": [200, 403, 929, 997, 1128, 1130], "cheaper": [200, 454, 601, 603, 604, 682], "memorywis": 200, "johann": 200, "syntact": [200, 221, 411, 554, 594, 682, 734], "sugar": [200, 682, 734], "allow": [200, 201, 221, 250, 397, 464, 669, 742, 776, 807, 830, 1085, 1156, 1176], "retval": [200, 450, 640, 968], "dlc": 200, "msg1": 200, "readabl": [200, 244, 254, 288, 390, 421, 425, 445, 446, 447, 454, 464, 466, 525, 639, 660, 675, 683, 686, 721, 732, 734, 740, 745, 746, 860, 870, 876, 881, 885, 907, 932, 999, 1025, 1044, 1065, 1073, 1075, 1094], "0x7f41f5ff26a0": 200, "msglist": 200, "0x7f41f5ff4160": 200, "0x7f41f5ff41c0": 200, "291130": 200, "now_timestamp": 200, "1603884859": 200, "3412576": 200, "fromtimestamp": 200, "341258": 200, "372": [200, 237, 244, 282, 330, 340], "45259": 200, "microsecond": [200, 445, 862], "programmverweis": 201, "xy": [201, 244, 247, 282, 602, 1063], "zab": 201, "eventcodefil": 201, "definedlisaev": 201, "event_id": 201, "bla": [201, 324, 330], "blubb": 201, "verbessert": 201, "stringformatierung": 201, "ctype": 201, "headerfil": [201, 913], "lst": [201, 237, 867, 1171], "callbackfunc": 201, "datetim": [201, 222, 228, 229, 230, 235, 283, 286, 323, 324, 1080], "observ": [201, 270, 288, 342, 481, 488, 502, 505, 516, 530, 582, 778, 1028, 1029, 1135, 1179], "longish": 201, "resurrect": [201, 467, 885], "outputsequ": 201, "resist": 201, "uncondition": [201, 828, 1022], "suitabl": [201, 250, 296, 798, 922, 971, 1035, 1044], "analysi": [201, 454, 763, 1125, 1128, 1141], "cp1252": [201, 1117, 1118, 1120], "csvlog": 201, "csv_reader": 201, "recv": [201, 202, 925], "tuesdai": [202, 284, 299], "246": [202, 234, 237, 242, 244, 247, 250, 257, 275, 292, 296, 302, 324, 330, 336, 340, 1136], "corpor": [202, 275], "commandin": [202, 204], "comress": [202, 204], "gzip": [202, 204, 268, 277, 298, 299, 778, 825, 848, 850, 851, 855, 921, 1009, 1010, 1182], "diagnos": [202, 204, 358, 359, 1180, 1187], "netstat": [202, 204, 277, 298, 299, 1139, 1180, 1187], "netcat": [202, 204, 277, 298, 299], "subshel": [202, 204, 214], "telnetd": 202, "insecur": [202, 938], "proto": 202, "foreign": [202, 278, 425], "34490": 202, "56062": 202, "sshd": [202, 234, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336, 857, 861, 863, 916, 932, 942], "systemctl": [202, 1013, 1139], "freedesktop": 202, "systemd1": 202, "quickli": [202, 289, 304, 316, 317, 320, 360, 424, 484, 930, 1178], "unprivileg": 202, "putti": [202, 214, 354], "puttygen": 202, "id_rsa": [202, 938], "authorized_kei": [202, 938], "trivia": 202, "hoorai": [202, 247, 260, 282, 336, 1058], "idiot": 202, "blinker": 202, "briana": 202, "mac": [202, 219, 235, 885, 1049, 1123, 1159], "wakeup": [203, 240, 317, 336, 368, 372, 754, 778, 821, 921, 930, 949, 962, 972, 982, 984], "patrick": 203, "1996": [203, 237], "wagna": 203, "gernot": 203, "1982": [203, 237], "birthplac": 203, "txt2json": 203, "equip": [204, 278, 365, 922, 1180, 1187], "wobei": 205, "deppert": [205, 218, 352], "sidestep": 205, "builtin_function_or_method": [205, 275, 302, 324], "sozusagen": 205, "genauso": [205, 1170], "aufrufen": [205, 913], "zaehler": 205, "initialwert": 205, "zaehlen": 205, "naechsten": 205, "schleifendurchlauf": 205, "locker": [205, 823], "mein_integ": 205, "1024": [205, 237, 856, 862, 885, 947], "sch\u00fctzt": 205, "passen": [205, 272], "gehandhabt": 205, "1267650600228229401496703205376": [205, 231, 234, 242, 254, 260, 282], "hoch": 205, "rechnen": [205, 357, 362], "tut": [205, 314, 352, 1173], "ausschliesslich": [205, 1182], "ganzzahldivis": 205, "ganzzahligen": 205, "resultat": 205, "gleichen": [205, 1180, 1193], "vorrang": 205, "ghi": [205, 244, 330, 336], "viert": 205, "nwelt": 205, "nwie": 205, "linefe": [205, 214, 235, 242, 386, 387, 1067, 1073, 1103, 1148], "bedeutung": [205, 1175, 1182], "unangetastet": 205, "glump": 205, "nebenlaeufigkeitsdemo": 205, "ebenlaeufigkeitsdemo": 205, "l\u00f6sung": [205, 218, 227, 375, 924], "formatierungsm\u00f6glichkeit": 205, "pfx_var1": 205, "pfx_var2": 205, "ausgab": [205, 1173], "notwendig": [205, 1172, 1188, 1189], "abzubrechen": 205, "ignorieren": [205, 206, 212, 1186], "gefunden": [205, 275, 913], "value1": [205, 1083], "501": [205, 237, 330, 1083], "value2": [205, 1083], "799": [205, 234, 237, 1080, 1083], "value3": [205, 1083], "sprachen": [205, 206, 1173, 1186], "indiz": 205, "erscheinen": 205, "komisch": 205, "bequem": 205, "mapping_t": 205, "f\u00fcnf": [205, 1180], "sieben": [205, 218, 244, 640], "neun": [205, 330, 340], "explicit": [205, 224, 231, 235, 244, 252, 254, 400, 409, 437, 450, 454, 467, 509, 510, 523, 524, 560, 586, 588, 589, 613, 639, 682, 683, 692, 699, 704, 712, 719, 724, 739, 742, 796, 951, 965, 997, 1017, 1018, 1048, 1051, 1054, 1131, 1144], "implicit": [205, 231, 244, 254, 390, 396, 400, 565, 681, 683, 699, 885, 954, 1040, 1054], "primzahlen": 205, "checken": 205, "primzahl": [205, 206, 1186], "checkenden": 205, "zahl": [205, 212, 218, 243, 244, 247, 257, 352], "probier": 205, "gach": [205, 244], "teiler": 205, "teiler_kandidaten": 205, "prim": 205, "gleichema\u00dfen": 205, "vollst\u00e4ndigkeit": 205, "halber": 205, "startend": [205, 244], "schrittweit": 205, "0x7f24f2ac0e50": 205, "ablegen": 205, "0x7f24f2ac0e70": 205, "arschlangsam": 205, "num_comparison": 205, "datenstruktur": [205, 226], "suchen": [205, 226, 912, 1175, 1182], "einf\u00fcgen": [205, 1180], "optimiert": [205, 218], "perfekt": 205, "einitreten": 205, "himmi": 205, "list_reverseiter": [205, 234, 257, 282], "0x7f24ec31d190": 205, "bricht": 205, "beinhart": 205, "liefert": [205, 1182], "lieber": 205, "zweit": [205, 218, 244, 275, 314, 330, 352, 1180], "po": [205, 244, 250, 254, 275, 280, 292, 296, 318, 324, 340, 466, 542, 635, 662], "wirklichkeit": 205, "ordin\u00e4r": 205, "alternativen": 205, "fruit": 205, "gemma": 205, "divisor_candid": [205, 340], "161": [205, 212, 234, 237, 242, 244, 247, 250, 254, 257, 260, 272, 275, 292, 296, 302, 314, 318, 324, 330, 336, 340], "wegen": 205, "dogma": 205, "zugewiesen": 205, "meine_vari": 205, "eine_vari": [205, 282, 292, 324], "angelegt": 205, "streng": 205, "obigem": 205, "dazusagen": 205, "noch_eine_globale_vari": 205, "increment_diese_vari": 205, "offiziel": [206, 208, 216, 219, 222, 223, 225, 241, 253], "leitfaden": 206, "kommentar": [206, 207, 218, 282, 352, 1186], "platziert": [206, 226], "hackereien": 206, "gleicherma\u00dfen": 206, "sogenannten": 206, "semantik": [206, 207, 1186], "sprach": [206, 207, 1173, 1174, 1175, 1186, 1187, 1194], "standarddatentypen": [206, 207, 1186], "literal": [206, 207, 265, 1186], "python2": [206, 244, 1186], "endg\u00fcltig": [206, 1186], "rausl\u00f6schen": [206, 1186], "konstanten": [206, 207, 1186], "typen": [206, 212, 1182, 1186, 1192], "operatoren": [206, 207, 913, 1175, 1186], "angeschnitten": [206, 1186], "vertiefung": [206, 222, 1186], "nocheinm": [206, 375, 1186], "ausdr\u00fcck": [206, 207, 265, 1186], "operatorrangfolgen": [206, 207, 1186], "grundlegenden": [206, 358, 1182, 1186], "sprachelementen": [206, 1186], "rede": [206, 1186], "syntaxdiagramm": [206, 1186], "gespritzt": [206, 1186], "gesamt": [206, 1186], "sperrig": [206, 1186], "n\u00fctzt": [206, 1186], "menschlich": [206, 1186], "abzubilden": [206, 1186], "tabel": [206, 1186], "anweisungen": [206, 207, 1186], "gro\u00dfen": [206, 1186], "fisch": [206, 1186], "instruktiv": [206, 1186], "bedingungen": [206, 207, 1172, 1186], "verzweigungen": [206, 207, 1186], "bedingt": [206, 207, 1173, 1186], "anweisung": [206, 207, 1186], "formulierungen": [206, 1186], "mehrfach": [206, 207, 1186], "fallauswahl": [206, 207, 1186], "benutzereingaben": [206, 1186], "\u00fcberpr\u00fcfen": [206, 1186], "schleifenkonstrukt": [206, 1186], "weitgehend": [206, 1186], "unserem": [206, 1186], "vehikel": [206, 1186], "hilfreich": [206, 1182, 1186], "klarstellung": [206, 1186], "fu\u00dfgesteuert": [206, 207, 1186], "z\u00e4hlergesteuert": [206, 207, 1186], "auslassen": [206, 1186], "kopfgesteuert": [206, 207, 1186], "gewinnt": [206, 1186], "konsol": [206, 1186], "anzeigen": [206, 1182, 1186], "voraussetzung": [206, 1186], "ausblick": [206, 1186], "schnell\u00fcbersicht": [206, 207, 1186], "sprunganweisungen": [206, 207, 1186], "endlosschleifen": [206, 207, 1186], "naja": [206, 1186], "reinschauen": [206, 1186], "mager": [206, 1186], "ausgelassen": [206, 1186], "eindimensional": [206, 207, 1186], "gefolgt": [206, 244, 1186], "zeichenketten": [206, 207, 1186], "tupel": [206, 207, 210, 1186], "besonder": [206, 207, 1186], "stapel": [206, 207, 1186], "schlangen": [206, 207, 1186], "tempo": [206, 1186], "schauma": [206, 212, 1186], "fallt": [206, 1186], "gscheit": [206, 213, 324, 1186], "gemeinsam": [206, 1170, 1172, 1186, 1189], "dr\u00fcber": [206, 1186], "vielzahl": [206, 1186, 1190, 1193], "l\u00f6sungsm\u00f6glichkeiten": [206, 1186], "eingegangen": [206, 1170, 1186, 1190], "pythonischst": [206, 1186], "bestritten": [206, 1186], "unterprogramm": [206, 207, 1186], "parameter\u00fcbergab": [206, 207, 1186], "r\u00fcckgabewert": [206, 207, 1186], "inner": [206, 207, 227, 336, 466, 1021, 1186], "standardbibliotheken": [206, 207, 1186], "funktionalit\u00e4ten": [206, 207, 1186], "berechnet": [206, 242, 250, 1186], "satz": 206, "gepr\u00e4gt": 206, "konferenzen": 206, "definitiv": 206, "sehenswert": 206, "anf\u00e4nger": [206, 1189], "hochinteress": 206, "sprachelement": 207, "elementar": 207, "beliebig": [207, 242, 1187], "gro\u00df": [207, 1192], "vergleichsoperatoren": 207, "strichrechnung": 207, "modulo": [207, 218, 231, 237, 242, 250, 352, 401, 1042, 1054], "un\u00e4rer": 207, "negat": [207, 231, 254, 914, 1042, 1054, 1072], "konvertierungen": [207, 1173], "pr\u00e4zendenzregeln": 207, "vertauschen": [207, 218, 352], "kontrollstrukturen": [207, 243, 1173], "verzweigung": 207, "schleifen": [207, 265, 1172], "versuch": [207, 219, 330, 336], "hybrid": [207, 656], "supergscheit": 207, "prozeduren": 207, "funktionen": [207, 211, 265, 358, 1172, 1173, 1175, 1183], "funktionspoint": 207, "funktionsobjekt": 207, "primzahlenbeispiel": 207, "laufzeitfehl": 207, "lokal": [207, 218, 264, 265, 1193], "zuweisen": 207, "fehlerfal": 207, "anschliessend": 208, "interaktiv": 208, "uebungen": 208, "idealerweis": [208, 282], "ueblichen": 208, "negoti": 209, "deiniti": [209, 803, 1181], "unload": [209, 805, 819, 821, 1181], "synchronizt": 209, "spinlock": [209, 778, 802, 817, 823, 827, 829, 833, 834, 840, 843, 844, 846, 921, 985, 1181], "rcu": 209, "halv": 209, "softirq": 209, "tasklet": [209, 823], "irss": 209, "kmalloc": [209, 778, 787, 792, 795, 796, 797, 802, 806, 815, 816, 820, 822, 829, 834, 837, 840, 843, 846, 921], "dma": [209, 778, 802, 820, 822, 864, 921, 946, 947, 948, 1181], "coher": [209, 796], "20201125": [210, 212], "unbekannten": 210, "lookup_t": [210, 213, 352], "12345": [210, 242, 254, 282, 330, 1157], "noch_eine_list": 210, "gesamte_list": 210, "vorl\u00e4ufig": 210, "letz": 210, "indented_text": 210, "nebenbei": [210, 212, 352], "eine_zum_sterben_verurteilte_vari": 210, "ein_set": 210, "sequenzen": 210, "grottenlangsam": 210, "subscript": [210, 244, 314, 336, 430, 617, 638, 642, 1144], "multiple_return_valu": 210, "xyz": [210, 212, 218, 237, 244, 275], "mein_formatierter_str": 210, "my_rang": [210, 250, 296, 302, 324], "retlist": 210, "zeichenkett": 210, "funktionieren": [210, 1175, 1193], "my_list": [210, 221, 263], "airms_eth": 210, "simplizistisch": 210, "bl\u00f6d": 210, "i_oder_v": 210, "iv": 210, "rms_eth": 210, "vorcompilieren": 210, "acirms_eth": 210, "my_regex": 210, "zeilennumm": 210, "dazuhaben": 210, "meine_zu_sendenden_daten": 210, "345": [210, 231, 237, 250, 282, 314, 324, 330, 336, 340], "234": [210, 234, 237, 242, 244, 247, 250, 254, 257, 260, 275, 292, 296, 302, 314, 318, 324, 330, 336, 340, 352], "meine_zu_sendenden_daten_in_string_form": 210, "ueblicherweis": 210, "ueber": 210, "verschickt": 210, "empfangen": [210, 225], "geschrieben": [210, 1193], "empfaeng": 210, "empfangenen": 210, "natuerlich": 210, "zurueckkonvertieren": 210, "meine_empfangenen_daten_python_form": 210, "gegangen": [210, 263], "wurscht": [210, 250, 324, 913], "returnwerten": 211, "containerdatentypen": 211, "untypisiert": 211, "zeilen": [212, 254, 1182], "neiner": 212, "nund": [212, 231], "nb": 212, "stoppt": 212, "newlin": [212, 214, 227, 250, 275, 292, 348, 379, 386, 399, 1051, 1067], "ndrin": 212, "drin": [212, 213, 218, 254, 282, 292, 330, 352, 357], "zuviel": [212, 1175], "mischt": 212, "unsupport": [212, 234, 260, 1042], "140546731085392": 212, "0x7fd395fb0e50": 212, "0x7fd3900395b0": 212, "new_t": [212, 1055], "0x7fd390052800": 212, "667": [212, 234, 237, 257, 263, 577], "2923750584022716461": 212, "529344067295497451": 212, "unhash": [212, 272, 282, 296, 324, 336], "fuenf": [212, 234, 244, 272, 282, 296, 314, 330, 340, 352], "verschluckt": 212, "6000000": 212, "elementen": [212, 226], "nonetyp": [212, 222, 236, 237, 292, 302, 314, 330, 336], "_io": [212, 231, 234, 237, 247, 250, 282, 296, 330, 349, 827], "textiowrapp": [212, 231, 234, 237, 247, 250, 282, 296, 330, 349, 1020], "oi": 212, "456": [212, 213, 237, 244, 282, 330, 399], "hansi": [212, 250, 254, 257], "linspac": [212, 318], "11111111": 212, "22222222": 212, "33333333": 212, "44444444": 212, "55555556": 212, "66666667": 212, "77777778": 212, "88888889": 212, "sin": 212, "8961922": 212, "79522006": 212, "19056796": 212, "96431712": 212, "66510151": 212, "37415123": 212, "99709789": 212, "51060568": 212, "54402111": 212, "plot": [212, 231, 260, 263, 314, 318, 324, 336, 1019, 1077, 1129, 1130], "line2d": [212, 260, 263, 314, 318, 324, 336], "0x7fd35cd3ef40": 212, "splev": 212, "splrep": 212, "spline": 212, "represent": [212, 231, 250, 728, 835, 929, 930], "spl": 212, "evalu": [212, 231, 236, 242, 252, 382, 402, 407, 409, 417, 424, 425, 503, 504, 517, 518, 689, 699, 868, 885, 1022, 1056, 1058, 1065, 1163], "x2": [212, 254], "y2": 212, "0x7fd341a486d0": 212, "speicher": [213, 1173, 1180, 1187], "sch\u00fctze": 213, "gemischten": 213, "operationen": [213, 1192], "interpol": [213, 254, 1128], "lag": 213, "gib": [213, 292], "depp": [213, 242], "ret_l": 213, "uniq_l": 213, "read_excel": [213, 1128], "invit": [214, 656], "effici": [214, 259, 313, 414, 453, 455, 457, 618, 622, 632, 635, 737, 869, 916, 918, 1027, 1130, 1141, 1144, 1181], "expans": [214, 913, 914, 1172], "ecdsa": [214, 354], "fingerprint": [214, 354, 933, 984], "sha256": [214, 354, 933], "in22o4vcd400x0bb4flcb5": [214, 354], "vqnrvkvoirgfqq6mapo": [214, 354], "perman": [214, 354], "individu": [214, 354, 406, 464], "sat": [214, 354], "straight": [214, 704, 1145], "startung": 214, "standpoint": 214, "suboptim": [214, 263], "pwned": 214, "hidden": [214, 495, 690, 798, 999], "clumsi": [214, 240, 241, 281, 284, 480, 484, 584, 592, 600, 613, 640, 682, 745, 1019, 1020, 1036, 1037, 1144, 1176], "clumsier": 214, "dumpbin": 214, "hmoe": 214, "frcoll": 214, "bunch": [214, 746, 852, 1011, 1035], "oom": [214, 234, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336, 1026], "killer": [214, 234, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336, 1060], "amoc": 214, "snapshot": [214, 724, 757, 863, 1011], "tinkernut": 214, "raspberi": 214, "awesom": [214, 1156], "tunnel": [214, 280, 932, 940, 951], "centric": [214, 1181], "virtualbox": [214, 864], "cygwin": [214, 267, 269, 287, 864], "assort": 214, "nano": 214, "univers": [214, 289, 541, 951, 1048, 1181], "scripe": 214, "voellig": 218, "wohl": [218, 302, 1173, 1194], "selbsterklaerend": 218, "printet": 218, "builtin": [218, 224, 231, 237, 238, 247, 250, 254, 275, 296, 313, 314, 324, 330, 340, 885, 1023], "accur": [218, 250, 254, 275, 296, 459], "__weakref__": [218, 234, 244, 247, 250, 254, 263, 275, 296, 314], "weak": [218, 250, 254, 275, 296, 314, 743, 1130], "_abc": [218, 231, 237, 247, 250], "_1": [218, 745, 746], "a123": 218, "vernichten": 218, "laufzeit": 218, "140032702361168": 218, "refcount": [218, 741, 743, 1020, 1176], "dezim": 218, "oktal": 218, "0o755": [218, 254, 352], "493": [218, 237, 254, 330], "0b11": [218, 254, 257], "sql": [218, 229, 241, 1132, 1135], "0b11111111": 218, "ordnung": 218, "uhrzeit": 218, "vormittag": 218, "6666666666666666": [218, 254], "nda": [218, 272], "python_dir": 218, "jan": [218, 247, 250, 348, 349, 366, 399, 763, 789, 881, 907, 965, 999, 1013, 1022, 1050], "lowercas": [218, 250, 296, 885, 932, 1068, 1085, 1090], "140032636418048": 218, "ein_iterierbares_d": 218, "extraw\u00fcrschtl": 218, "sex": [218, 231, 253, 254, 1085], "diver": 218, "translation_t": [218, 254, 257, 260, 330], "bag": [218, 266, 267, 269, 467, 477, 775, 777, 778, 993, 1055], "green": [218, 254, 506, 541, 542, 602, 922], "blue": [218, 226, 234, 254, 1080], "mengenoperationen": 218, "set1": 218, "set2": 218, "symm_diff": 218, "lisa": 218, "eugeni": [218, 221], "okan": 218, "mcguir": 218, "sinner": 218, "vornam": [218, 226, 227], "nachnam": [218, 226, 227], "persnr": 218, "personalnumm": 218, "5000": [218, 231, 237, 1039], "4000": [218, 237], "3000": [218, 231, 237, 257, 296], "15000": [218, 237], "uppercas": [218, 250, 296, 885, 1068, 1085], "verfuegbar": 218, "restlichen": 218, "gehaelt": 218, "konstant": [218, 226, 249], "unexpect": [218, 444], "pcap": [219, 239], "certifi": 219, "math": [219, 222, 232, 234, 235, 237, 245, 254, 259, 262, 295, 301, 324, 584, 586, 1048, 1123], "statist": [219, 232, 245, 254, 259, 262, 295, 301, 458, 987, 1107, 1123, 1128, 1156], "undo": [219, 885, 1123], "brad": [219, 1123], "traversi": [219, 1123], "evaluierung": 220, "eval": [220, 248, 249, 258, 276, 290, 291, 296, 303, 312, 315, 316, 1044], "openfil": 221, "hanld": 221, "soemth": [221, 839], "zf": [221, 330], "namelist": 221, "zipdemo": 221, "extracted_nam": 221, "isinst": [221, 222, 235, 237, 250, 263, 275, 1042, 1145], "superclass": [221, 222, 235, 250], "subclass": [221, 222, 235, 250, 254, 1022, 1039], "class1": 221, "class2": 221, "salari": 221, "selina": 221, "orgl": 221, "8010": [221, 237, 466], "birth": [221, 247, 260, 584, 776, 1112, 1113, 1114, 1115, 1118, 1119, 1120], "1622102062": 221, "4778333": 221, "019427776336669922": 221, "009679079055786133": 221, "daniel": [221, 224, 348, 349, 366], "ortner": 221, "num_employe": 221, "__first": 221, "__last": 221, "__address": 221, "_person__first": 221, "_person__last": 221, "_person__address": 221, "_first": 221, "_last": 221, "_address": 221, "do_debug": 221, "val": [221, 250, 745, 930], "ueberhaupt": 221, "l_float": 221, "0x7fd9881b04a0": 221, "functool": [221, 288], "wrapper": [221, 250, 260, 265, 302, 324, 487, 685, 710, 945, 993, 1021, 1042, 1125], "komplexen": 221, "testfil": 221, "nzeil": [221, 250, 318], "seek": [221, 296, 330, 349], "nth_fibo": 221, "accomod": 221, "0x7fd9801cec10": 221, "0x7fd9801b8d60": 221, "0x7fd9801b4900": 221, "0x7fd98014cd40": 221, "gen": [221, 296], "sequenceno": 221, "kv_pair": 221, "permissionerror": [221, 237, 257, 275, 292, 1022], "deni": [221, 237, 257, 292, 330, 509, 523, 868, 904, 932, 940, 952, 957, 958, 1022, 1151], "eacc": 221, "filenotfounderror": [221, 237, 275, 1022], "64bit": 221, "utc": 221, "python_implement": [221, 222, 235], "python_version_tupl": [221, 222, 235], "python39": 221, "dynload": [221, 330], "isfil": [221, 342, 466], "isdir": [221, 466], "my_path": 221, "hopefulli": 221, "the_except": 221, "__class__": [221, 244, 247, 250, 254, 263, 272, 275, 296, 314, 336], "__bases__": [221, 222, 235, 252], "distrust": 221, "guido": [221, 1147], "incompet": 221, "precondit": [221, 854], "abdefg": 221, "beg": [221, 425, 1023], "bdefg": 221, "stringifi": 221, "0x7ffa9c2ac3a0": 221, "formatstr": 221, "ding": [221, 251, 992], "formatierter_str": 221, "oserror": [222, 250, 275, 1022], "errno": [222, 235, 237, 257, 292, 450, 803, 952, 967, 996, 997, 1014, 1022, 1151], "assertionerror": [222, 247, 263, 275, 314, 1022, 1035, 1156, 1157], "jjjj": [222, 370, 371, 463], "line_count": 222, "aud": 222, "qualifii": [222, 235], "trunc": [222, 235], "hypot": [222, 235], "seed": [222, 235, 254, 536], "ascii": [222, 235, 250, 257, 260, 275, 296, 302, 318, 324, 330, 386, 389, 392, 398, 1053, 1054, 1067, 1073, 1131], "codepoint": [222, 235], "escap": [222, 235, 242, 250, 272, 379, 1131], "ord": [222, 235, 254, 275, 1062], "chr": [222, 235, 275], "isxxx": [222, 235], "rfind": [222, 235, 250, 296, 302, 336, 1069], "grammar": [222, 235], "instrospect": [222, 235], "hasattr": [222, 235, 250, 263, 275, 1036, 1042], "__module__": [222, 234, 235, 244, 247, 250, 254, 263, 275, 296, 314], "bytearrai": [222, 235, 250, 275], "histogram": [222, 223, 240, 395, 410, 419, 426, 432, 436, 439, 443, 452, 456, 461, 462, 570, 571, 579, 684, 722, 775, 777, 778], "defaultdict": [222, 248, 249, 273], "make_histogram": [222, 571, 580], "fileobj": 222, "stringio": [222, 250], "8859": [222, 240, 241, 257, 260, 280, 302, 314, 318, 466], "pycon": [222, 248, 271, 295, 317, 1123], "2017": [222, 248, 271, 317, 592, 690, 741, 1123], "metaprogram": [222, 249, 271, 699, 1035, 1123, 1177], "contract": [222, 224, 271, 1123], "evolut": [222, 271, 317, 885, 1123], "unauthor": [222, 271, 317, 1123], "biographi": [222, 271, 317, 1123], "lesson": [222, 271, 317, 354, 360, 465, 728, 1015, 1123], "evolv": [222, 271, 317, 725, 1123], "assembli": [222, 271, 295, 317, 999, 1001, 1123, 1178], "revolv": [222, 248, 317, 1123, 1129], "mro": [222, 248, 252, 317, 1123], "cpa": 223, "fahr": [223, 380, 382], "tomorrow": [223, 238, 364, 365], "correctli": [223, 313, 343, 442, 929, 952, 1075, 1131], "consecut": [223, 405, 734, 918], "becam": [223, 309], "44ff": 223, "gig": 223, "upcom": 223, "msi": 223, "wswitch": [223, 446, 683, 794], "wall": [223, 237, 238, 403, 453, 469, 757, 793, 794, 1165], "77ff": 223, "skip": [223, 250, 349, 467, 469, 800, 930, 1000, 1001, 1022, 1158], "89ff": 223, "alongsid": [223, 819], "num_us": 223, "199ff": 223, "204ff": 223, "208ff": 223, "220ff": 223, "222ff": 223, "db_get_user_at_index": 223, "298ff": 223, "strcpy": [223, 240, 392, 438, 574, 589, 592, 693, 727, 925, 983], "strlen": [223, 392, 417, 445, 589, 592, 693, 727, 963, 966, 996], "bahavior": 223, "dest": [223, 392], "strtol": 223, "stringif": [223, 1173], "db_error_str": 223, "sexi": [223, 975], "caleb": 223, "discret": [224, 254, 313, 452, 456, 461, 462, 684, 722, 775, 777, 778], "bleed": 224, "rect": [224, 433, 560], "sphere": [224, 560], "preprocessor": [224, 240, 399, 426, 432, 436, 439, 443, 448, 452, 456, 461, 462, 681, 684, 722, 775, 777, 778, 999, 1163, 1177], "julia": 224, "yesterdai": [224, 240, 248, 288], "distanc": [224, 586, 594, 595, 615, 732, 745], "has_lastnam": 224, "botton": 224, "mingw": [224, 267, 269, 287, 364, 377, 864], "resembl": 224, "tortur": 224, "functor": [224, 266, 267, 269, 326, 327, 626, 722, 723, 777, 778], "rudimentarili": [224, 1052, 1126], "gotten": [224, 758], "recourc": 224, "outright": [224, 280, 440, 1027, 1058], "geniu": [224, 280, 617, 1027, 1058], "livehackingli": 224, "zuordnung": [225, 241, 253], "bissl": 225, "commandlineargument": [225, 1172], "stoff": 225, "summenbeispiel": 225, "showcas": 225, "datenbank": 225, "formulieren": 225, "verbindung": [225, 1170, 1180, 1187, 1193], "schicken": [225, 1170], "schickman": 225, "muessen": 225, "verwandlen": 225, "fractal": [225, 241], "schatzi": 226, "zeitkomplexit\u00e4t": 226, "foreach": 226, "assozi": [226, 1175], "color_transl": 226, "gelb": 226, "yellow": 226, "hashtabl": [226, 1145], "englisch": [226, 1170], "sack": 226, "my_color": 226, "her_color": 226, "pink": 226, "gr\u00fcn": 226, "beig": 226, "vereiningungsmeng": 226, "schnittmeng": 226, "symmetrisch": 226, "differenzmeng": 226, "sei": 226, "gewesen": 226, "waer": [226, 302], "1037190666": [226, 242, 244, 250, 254, 257, 260, 263, 484, 491, 508, 509, 510, 522, 523, 524, 643, 1036], "6666010185": 226, "schwarzbauer": 226, "json_string_fuer_den_brows": 226, "response_dict": 226, "svnr": [226, 234, 237, 244, 250, 254, 257, 260, 262, 263, 302, 485, 491, 513, 519, 1036, 1140], "pprint": [226, 228, 235, 237, 272, 1023, 1131], "formatieren": 226, "endlich": 226, "transfer_string_in_php_am_serv": 226, "u00f6rg": 226, "transfer_string_in_js_am_brows": 226, "response_dict_am_brows": 226, "verwandeln": [226, 1189], "schlussendlich": 226, "geeignet": [226, 1171], "platzieren": 226, "meine_t": 226, "sozialversicherungsnumm": 226, "simmer": 227, "mein_str": 227, "sq": [227, 234, 237, 244, 254, 275, 296, 314, 318, 330], "docu": 227, "nmehrzeilig": 227, "nvon": 227, "mehrzeilig": 227, "deppertem": 227, "irrelevant": 227, "quargel": [227, 228], "190666": 227, "inkorrekt": 227, "geburtsdatum": 227, "endswith": [227, 242, 244, 250, 260, 275, 279, 282, 296, 302, 318, 324, 330, 336, 340, 1069], "sss": 227, "isalpha": [227, 231, 242, 244, 250, 254, 275, 296, 302, 324, 340, 1069], "isidentifi": [227, 231, 244, 250, 260, 275, 296, 302, 1069], "islow": [227, 250, 260, 275, 296, 330, 336, 1069], "arg1": 227, "arg2": 227, "arg3": 227, "abcblah": 227, "blahabcbcabcc": 227, "lah": 227, "rstrip": [227, 231, 235, 242, 246, 247, 250, 260, 275, 292, 296, 302, 318, 336, 340, 348, 357], "lstrip": [227, 242, 246, 250, 275, 296, 302, 336, 340, 357], "wieviel": [227, 1180, 1187], "995237": 227, "datestr": 227, "dt": [227, 324, 825, 929], "strptime": [227, 228, 229, 235, 324], "uuid": 227, "msg_aussi": 227, "sea": [227, 242, 275, 353, 703], "oida": [227, 244, 247, 296, 469], "msgid": 227, "uuid4": 227, "345654325678": 227, "json_aussi": 227, "6563515ef0824d42b459389cefd09127": 227, "json_eini": 227, "sender": [227, 997], "msg_eini": 227, "sauberestextfil": 228, "12345678": 228, "2270": [228, 237], "20333": 228, "360": [228, 237, 314, 324, 330, 336, 340], "91011121": 228, "30333": 228, "36756788": 228, "1112": [228, 237], "1244": [228, 237], "31333": 228, "45011121": 228, "44444": 228, "340": [228, 237, 244, 250, 282, 296, 324, 330, 336, 340], "sauber": 228, "read_sauberes_text_fil": 228, "item1": [228, 324], "item13": 228, "werk": 228, "lort": 228, "charg": [228, 488, 495, 508, 509, 510, 522, 523, 524], "sonderbestandsnumm": 228, "materialkurztext": 228, "lagerplatz": 228, "verfueg_bestand": 228, "bme": 228, "we_datum": 228, "verf\u00fcg": 228, "bestand": 228, "datum": [228, 1130], "api2": 229, "opc": [229, 238, 313], "rrdtool": 229, "rrd": 229, "subprocess": [229, 245, 250, 259, 261, 271, 295, 342, 357, 362, 1123], "commmon": [231, 425], "140576769461632": 231, "simplicit": 231, "inputfil": [231, 466], "450": [231, 237, 244, 279, 282, 330, 340], "paragraph": [231, 479], "highli": [231, 375, 541], "pathnam": [231, 237, 247, 250, 784, 951, 955, 1067], "displayhook": [231, 237, 247, 250, 350], "excepthook": [231, 237, 247, 250, 350], "uncaught": [231, 237, 247, 250, 560], "systemexit": [231, 237, 247, 250, 272, 275, 350, 1022], "behav": [231, 237, 240, 247, 250, 539, 560, 686, 741, 742, 773, 841, 867, 987], "last_typ": [231, 237, 247, 250, 350], "last_valu": [231, 237, 247, 250, 350, 710, 713, 716, 717, 718], "last_traceback": [231, 237, 247, 250, 350], "builtin_module_nam": [231, 237, 247, 250, 350], "pertain": [231, 237, 247, 250], "exec_prefix": [231, 237, 247, 250, 350], "float_info": [231, 237, 247, 250, 350], "float_repr_styl": [231, 237, 247, 250, 350], "hash_info": [231, 237, 247, 250, 350], "hexvers": [231, 237, 247, 250, 350], "int_info": [231, 237, 247, 250, 350], "maxsiz": [231, 237, 247, 250, 350], "largest": [231, 237, 247, 250, 442], "maxunicod": [231, 237, 247, 250, 350], "thread_info": [231, 237, 247, 250, 350], "version_info": [231, 237, 247, 250, 350], "__stdin__": [231, 237, 247, 250, 350], "__stdout__": [231, 237, 247, 250, 350], "__stderr__": [231, 237, 247, 250, 350], "__displayhook__": [231, 237, 247, 250, 350], "__excepthook__": [231, 237, 247, 250, 350], "screen": [231, 237, 247, 250, 861, 867, 885], "exc_info": [231, 237, 247, 250, 350], "getdlopenflag": [231, 237, 247, 250, 350], "dlopen": [231, 237, 247, 250, 1190], "getprofil": [231, 237, 247, 250, 350], "profil": [231, 237, 247, 250, 330, 375, 453, 459, 462, 778, 825, 857, 1174, 1177], "getrefcount": [231, 237, 247, 250, 257, 350], "getrecursionlimit": [231, 237, 247, 250, 350], "getsizeof": [231, 237, 247, 250, 272, 275, 318, 340, 350], "gettrac": [231, 237, 247, 250, 350], "setdlopenflag": [231, 237, 247, 250, 350], "setprofil": [231, 237, 247, 250, 350], "setrecursionlimit": [231, 237, 247, 250, 350], "settrac": [231, 237, 247, 250, 350], "__breakpointhook__": [231, 237, 247, 250, 350], "breakpointhook": [231, 237, 247, 250, 350], "breakpoint": [231, 237, 247, 250, 275], "exctyp": [231, 237, 247, 250], "__unraisablehook__": [231, 237, 247, 250, 350], "unraisablehook": [231, 237, 247, 250, 350], "unrais": [231, 237, 247, 250], "exc_typ": [231, 237, 247, 250, 1020], "exc_valu": [231, 237, 247, 250, 1020], "exc_traceback": [231, 237, 247, 250, 1020], "err_msg": [231, 237, 247, 250], "addaudithook": [231, 237, 247, 250, 350], "audit": [231, 237, 247, 250, 330, 350], "call_trac": [231, 237, 247, 250, 350], "afterward": [231, 237, 247, 250, 404, 454, 591, 741, 742, 743, 756, 821, 993, 1157], "older": [231, 237, 247, 250, 850, 993], "get_asyncgen_hook": [231, 237, 247, 250, 350], "firstit": [231, 237, 247, 250], "get_coroutine_origin_tracking_depth": [231, 237, 247, 250, 350], "coroutin": [231, 237, 247, 250, 326, 712, 713, 715, 716, 717, 718, 722, 777, 778, 1123], "getallocatedblock": [231, 237, 247, 250, 350], "getdefaultencod": [231, 237, 247, 250, 296, 350], "getfilesystemencodeerror": [231, 237, 247, 250, 350], "getfilesystemencod": [231, 237, 247, 250, 350], "getswitchinterv": [231, 237, 247, 250, 350], "setswitchinterv": [231, 237, 247, 250, 350], "is_fin": [231, 237, 247, 250, 350], "set_asyncgen_hook": [231, 237, 247, 250, 350], "set_coroutine_origin_tracking_depth": [231, 237, 247, 250, 350], "cr_origin": [231, 237, 247, 250], "rtld_global": [231, 237, 247, 250], "rtld_xxx": [231, 237, 247, 250], "rtld_lazi": [231, 237, 247, 250], "frequenc": [231, 237, 247, 250, 254, 290, 291, 312, 316, 343, 368, 372, 778, 921, 922, 930, 962, 982, 984], "uninterrupt": [231, 237, 247, 250, 817], "workload": [231, 237, 247, 250], "typic": [231, 237, 247, 250, 278, 288, 304, 316, 320, 425, 465, 469, 486, 510, 539, 666, 796, 845, 870, 1000, 1045, 1055, 1176, 1178], "005": [231, 237, 247, 250], "abiflag": [231, 237, 247, 250, 350], "api_vers": [231, 237, 247, 250, 350], "1013": [231, 237, 247, 250], "ipyk": 231, "base_exec_prefix": [231, 237, 247, 250, 350], "base_prefix": [231, 237, 247, 250, 350], "_ast": [231, 237, 247, 250], "_codec": [231, 237, 247, 250], "_collect": [231, 237, 247, 250], "_f": [231, 237, 247, 250], "byteord": [231, 237, 247, 250, 272, 350, 923], "foundati": [231, 237, 247, 250], "emati": [231, 237, 247, 250], "ipykernel": [231, 237, 247, 250, 275], "zmqshelldisplayhook": [231, 237, 247, 250], "dont_write_bytecod": [231, 237, 247, 250, 350], "opt": [231, 237, 247, 250, 330, 431], "ation": [231, 237, 247, 250], "7976931348623157e": [231, 237, 247, 250], "308": [231, 237, 244, 247, 250, 292, 302, 314, 324, 330, 336], "max_": [231, 237, 247, 250], "epsilo": [231, 237, 247, 250], "2305843009213693": [231, 237, 247, 250], "iphash2": [231, 237, 247, 250], "50922736": 231, "cache_tag": [231, 237, 247, 250], "xv": [231, 237, 247, 250], "bits_per_digit": [231, 237, 247, 250], "sizeof_digit": [231, 237, 247, 250], "syntaxerror": [231, 247, 254, 275, 1022], "eol": [231, 254], "9223372036854775807": [231, 237, 247, 250, 776], "1114111": [231, 237, 247, 250], "meta_path": [231, 237, 247, 250, 350], "_frozen_importlib": [231, 237, 247, 250, 275], "builtinimport": [231, 237, 247, 250, 275], "_fro": [231, 237, 247, 250], "homepa": 231, "path_hook": [231, 237, 247, 250, 350], "zipimport": [231, 237, 247, 250], "filefind": [231, 237, 247, 250], "path_importer_cach": [231, 237, 247, 250, 350], "jfa": [231, 237, 247, 250], "platlibdir": [231, 237, 247, 250, 350], "ps1": [231, 237, 247, 250, 350, 1158], "ps2": [231, 237, 247, 250, 350], "ps3": [231, 237, 247, 250, 350], "pycache_prefix": [231, 237, 247, 250, 350], "outstream": [231, 237, 247, 250], "versio": [231, 237, 247, 250], "202103": 231, "releaselev": [231, 237, 247, 250], "warnopt": [231, 237, 247, 250, 350], "isdigit": [231, 242, 250, 254, 275, 282, 296, 302, 330, 340, 1069], "pp": [231, 282, 430, 617], "list_of_str": 231, "tensorflow": 232, "kesselfal": 232, "rettenbachklamm": 232, "hochtor": 232, "hochschwab": 232, "_a": [234, 250, 275], "_123": 234, "140575811317328": 234, "140575811316208": 234, "0xffffffff": [234, 235, 340, 403], "4294967296": [234, 242], "0x48": [234, 929], "330": [234, 237, 250, 275, 282, 296, 314, 324, 330, 336], "332": [234, 237, 250, 282, 296, 314, 330, 336], "333": [234, 237, 250, 282, 296, 324, 330, 336, 353], "334": [234, 237, 250, 282, 324, 330, 336], "dstr": 234, "777": [234, 237, 324], "aliv": [234, 423, 975, 1018], "bcd": 234, "dusan": 234, "alex": [234, 248, 1040], "mist": [234, 282], "span": [234, 260, 263, 265, 272, 296, 330, 380, 399, 423, 800], "141592653589793": [234, 237], "roll": [234, 253, 274, 290, 291, 1058, 1173], "dice": [234, 253, 274, 290, 291, 1058], "win": [234, 250, 260, 324, 336, 916, 983, 1058], "rnd": [234, 257], "convention": 234, "wise": [234, 278, 448, 592, 664, 695, 763, 776, 778, 793, 803, 823, 921, 962, 1022], "resultset": [234, 237, 1135], "sbin": [234, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336, 857, 861, 863, 910, 916, 947, 957], "nologin": [234, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336, 910, 916, 947, 957], "adm": [234, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336, 911, 914, 916], "lp": [234, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336, 916], "spool": [234, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336, 916], "lpd": [234, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336, 916], "ftp": [234, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336, 912, 1013], "65534": [234, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336], "apach": [234, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336], "httpd": [234, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336], "coredump": [234, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336, 916, 996], "997": [234, 237, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336], "dumper": [234, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336, 916], "998": [234, 237, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336], "996": [234, 237, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336], "timesync": [234, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336, 916], "995": [234, 237, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336], "tss": [234, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336], "tpm": [234, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336], "dbu": [234, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336, 863], "polkitd": [234, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336, 863], "994": [234, 237, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336], "avahi": [234, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336, 863], "mdn": [234, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336], "unbound": [234, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336, 1054], "992": [234, 237, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336], "dnsmasq": [234, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336, 863], "991": [234, 237, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336], "dhcp": [234, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336], "nm": [234, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336, 460, 593, 825, 1011, 1017], "openconnect": [234, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336], "993": [234, 237, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336], "989": [234, 237, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336], "networkmanag": [234, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336, 460, 863], "usbmuxd": [234, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336], "gluster": [234, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336], "988": [234, 237, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336], "glusterf": [234, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336], "rtkit": [234, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336], "realtimekit": [234, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336], "pipewir": [234, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336], "987": [234, 237, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336], "geoclu": [234, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336], "990": [234, 237, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336], "chroni": [234, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336], "984": [234, 237, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336, 916], "saslauth": [234, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336], "saslauthd": [234, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336], "radvd": [234, 250, 257, 260], "rpc": [234, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336], "rpcbind": [234, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336], "openvpn": [234, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336], "982": [234, 237, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336, 916], "981": [234, 237, 250, 257, 260, 336], "spawn": [234, 250, 257, 260, 275, 282, 292, 296, 313, 318, 324, 330, 336], "colord": [234, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336], "985": [234, 237, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336, 916], "rpcuser": [234, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336], "abrt": [234, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336, 863, 916], "flatpak": [234, 250, 257, 260, 275, 282, 292, 296, 299, 318, 324, 330, 336, 916], "979": [234, 237, 250, 257, 260], "helper": [234, 250, 254, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336, 398, 592, 656, 704, 745, 819, 916, 1148, 1151], "983": [234, 237, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336, 916], "978": [234, 237, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 916], "vboxadd": [234, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336, 916], "tcpdump": [234, 250, 257, 260, 275, 282, 292, 296, 318, 324, 330, 336, 916], "974": [234, 237, 250, 257, 260], "broker": [234, 238, 250, 257, 260, 275, 282, 292, 296, 313, 318, 324, 330, 863, 1117], "mappingproxi": [234, 250, 263], "229": [234, 237, 242, 244, 250, 254, 257, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340], "230": [234, 237, 242, 244, 247, 250, 254, 257, 260, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340], "231": [234, 237, 242, 244, 247, 250, 254, 257, 275, 282, 296, 302, 318, 324, 330, 336, 340, 508, 509, 510, 522, 523, 524], "232": [234, 237, 242, 244, 247, 250, 254, 257, 260, 275, 296, 302, 318, 324, 330, 336, 340], "233": [234, 237, 242, 244, 250, 254, 257, 260, 275, 282, 292, 296, 302, 318, 324, 330, 336, 340], "inputlist": [234, 1025], "ret": [234, 237, 242, 466, 704, 989, 1025, 1070], "235": [234, 237, 242, 244, 247, 250, 254, 257, 260, 275, 282, 292, 296, 302, 314, 318, 330, 336, 340], "236": [234, 237, 242, 244, 247, 250, 254, 257, 260, 275, 296, 302, 314, 318, 324, 330, 336, 340, 451], "237": [234, 237, 242, 244, 250, 254, 257, 260, 275, 292, 296, 302, 318, 324, 330, 336, 340], "238": [234, 237, 242, 244, 247, 250, 254, 257, 260, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340], "239": [234, 237, 242, 244, 250, 254, 257, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340], "240": [234, 237, 242, 244, 247, 250, 254, 257, 260, 275, 292, 296, 302, 318, 324, 330, 336, 340], "242": [234, 237, 242, 244, 247, 250, 257, 260, 275, 292, 296, 302, 314, 318, 324, 330, 336, 340], "243": [234, 237, 242, 244, 250, 257, 260, 275, 292, 296, 302, 314, 324, 330, 336, 340], "244": [234, 237, 242, 244, 247, 250, 257, 260, 275, 296, 302, 314, 324, 330, 336, 340], "245": [234, 237, 242, 244, 257, 275, 292, 296, 302, 314, 324, 330, 336, 340], "247": [234, 237, 242, 244, 250, 254, 257, 275, 292, 296, 302, 318, 324, 330, 336, 340], "248": [234, 237, 242, 244, 247, 254, 257, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340], "249": [234, 237, 242, 244, 250, 254, 257, 260, 275, 282, 296, 302, 314, 318, 324, 330, 336, 340], "250": [234, 237, 242, 244, 250, 254, 257, 260, 275, 282, 286, 292, 296, 302, 324, 330, 336, 340, 914], "251": [234, 237, 242, 244, 247, 250, 254, 257, 275, 282, 292, 296, 302, 314, 318, 330, 336, 340], "252": [234, 237, 242, 244, 247, 254, 257, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 1136], "253": [234, 237, 242, 244, 247, 250, 257, 260, 275, 282, 296, 302, 318, 330, 336, 340], "256": [234, 237, 242, 244, 250, 257, 260, 275, 282, 292, 296, 302, 318, 324, 330, 336, 340, 389, 597, 1125, 1136], "257": [234, 237, 242, 244, 247, 250, 254, 257, 260, 275, 282, 292, 296, 302, 324, 330, 336, 340], "258": [234, 237, 242, 244, 247, 250, 254, 257, 275, 282, 292, 296, 302, 330, 336, 340], "0x7fda5444e6a0": 234, "259": [234, 237, 242, 244, 247, 250, 257, 275, 282, 292, 296, 302, 324, 330, 336, 340], "260": [234, 237, 242, 244, 247, 250, 257, 275, 282, 292, 296, 302, 314, 324, 330, 336, 340], "261": [234, 237, 242, 244, 250, 254, 260, 275, 282, 292, 296, 302, 330, 336, 340], "262": [234, 237, 242, 244, 250, 260, 275, 282, 292, 296, 302, 314, 324, 330, 336, 340], "263": [234, 237, 242, 244, 250, 254, 257, 260, 275, 282, 292, 296, 302, 314, 330, 336, 340], "264": [234, 237, 242, 244, 247, 250, 257, 260, 275, 282, 296, 302, 314, 324, 330, 336, 340], "265": [234, 237, 242, 244, 250, 257, 275, 282, 296, 302, 314, 324, 330, 336, 340], "266": [234, 237, 242, 244, 247, 250, 254, 260, 275, 296, 302, 330, 336, 340], "267": [234, 237, 242, 244, 247, 250, 257, 260, 275, 282, 296, 302, 314, 330, 336, 340], "268": [234, 237, 242, 244, 250, 257, 260, 275, 282, 296, 302, 324, 330, 336, 340], "269": [234, 237, 242, 244, 247, 250, 254, 257, 275, 282, 292, 296, 302, 330, 336, 340, 1001], "270": [234, 237, 242, 244, 250, 254, 257, 275, 282, 292, 296, 302, 314, 324, 330, 336, 340], "other_map": 234, "272": [234, 237, 242, 244, 247, 250, 254, 257, 275, 282, 292, 296, 302, 314, 330, 336, 340], "273": [234, 237, 242, 244, 250, 254, 275, 282, 296, 302, 324, 330, 336, 340, 532, 550, 551, 552, 553, 555, 556, 764, 766, 768, 1035], "274": [234, 237, 242, 244, 247, 250, 254, 257, 275, 282, 292, 296, 302, 324, 330, 336, 340], "140575811316304": 234, "275": [234, 237, 242, 244, 250, 254, 257, 275, 282, 292, 296, 302, 314, 330, 336, 340], "276": [234, 237, 242, 244, 247, 257, 275, 282, 292, 296, 302, 314, 330, 336, 340], "277": [234, 237, 242, 244, 247, 250, 254, 257, 275, 292, 296, 302, 324, 330, 336], "278": [234, 237, 242, 244, 250, 257, 275, 282, 296, 302, 314, 324, 330, 336], "279": [234, 237, 242, 244, 247, 250, 254, 257, 275, 282, 296, 302, 314, 330, 336], "280": [234, 237, 242, 244, 247, 250, 254, 275, 282, 296, 302, 314, 330, 336, 1000, 1001], "140575692459008": 234, "282": [234, 237, 242, 244, 247, 250, 254, 257, 275, 282, 296, 302, 314, 330, 336], "283": [234, 237, 242, 244, 247, 250, 254, 257, 275, 296, 302, 330, 336], "284": [234, 237, 242, 244, 250, 254, 257, 275, 279, 302, 314, 324, 330, 336], "elementwis": 234, "285": [234, 237, 242, 244, 247, 250, 275, 282, 296, 302, 314, 330, 336], "286": [234, 237, 242, 244, 247, 250, 254, 275, 296, 302, 314, 330, 336], "287": [234, 237, 242, 244, 247, 250, 254, 257, 275, 282, 302, 314, 324, 330, 336], "140575692438848": 234, "288": [234, 237, 242, 244, 250, 254, 257, 275, 282, 296, 302, 314, 324, 330, 336], "140575692448960": 234, "289": [234, 237, 242, 244, 250, 275, 282, 296, 302, 314, 324, 330, 336], "290": [234, 237, 242, 244, 250, 275, 282, 296, 302, 330, 336], "292": [234, 237, 242, 250, 254, 275, 282, 292, 296, 330, 336], "293": [234, 237, 242, 244, 250, 275, 282, 292, 296, 302, 330, 336], "295": [234, 237, 242, 244, 250, 254, 275, 282, 292, 296, 330, 336], "296": [234, 237, 242, 244, 250, 275, 282, 292, 296, 302, 330, 336], "298": [234, 237, 242, 250, 254, 275, 282, 292, 296, 302, 324, 330, 336], "deep": [234, 246, 314, 699, 704, 987], "301": [234, 237, 242, 247, 250, 254, 275, 282, 292, 296, 302, 314, 330, 336], "302": [234, 237, 242, 244, 250, 254, 275, 282, 296, 302, 314, 330, 336, 1080], "deepcopi": [234, 244, 257, 282, 302, 314, 1063], "303": [234, 237, 242, 244, 247, 250, 282, 296, 302, 314, 324, 330, 336, 1001], "304": [234, 237, 242, 244, 247, 250, 254, 314, 330, 336], "305": [234, 237, 247, 250, 275, 292, 296, 302, 314, 330, 336], "314": [234, 237, 244, 247, 250, 275, 282, 292, 296, 302, 324, 330, 336], "315": [234, 237, 250, 275, 296, 302, 324, 330, 336], "rdr": [234, 235, 318, 466, 489, 1131], "delimit": [234, 235, 250, 279, 280, 296, 318, 324, 336, 613, 911, 1051, 1131], "fund_nam": [234, 235, 1080], "fund_isin": [234, 235, 1080], "fund_tick": [234, 235, 1080], "as_of_d": [234, 235, 1080], "fund_in_univers": [234, 235, 1080], "fund_of_fund": [234, 235, 1080], "fund_holdings_count": [234, 235, 1080], "fund_holding_funds_count": [234, 235, 1080], "american": [234, 240, 665, 679, 778, 1080, 1136], "fund": [234, 1080], "balanc": [234, 238, 433, 1080], "us0240711020": [234, 1080], "abalx": [234, 1080], "20210103": [234, 1080], "084": [234, 1080], "dodg": [234, 1080], "cox": [234, 1080], "us2562011047": [234, 1080], "dodbx": [234, 1080], "410": [234, 237, 282, 296, 330, 340, 1080], "us2562191062": [234, 1080], "dodgx": [234, 1080], "franklin": [234, 1080], "incom": [234, 250, 313, 1080, 1139], "us3534963000": [234, 1080], "fkinx": [234, 1080], "america": [234, 1080], "us3998741066": [234, 1080], "agthx": [234, 1080], "price": [234, 254, 459, 482, 1080], "us7414791092": [234, 1080], "prgfx": [234, 1080], "fidel": [234, 1080], "puritan": [234, 1080], "us3163451079": [234, 1080], "fpurx": [234, 1080], "contrafund": [234, 1080], "us3160711095": [234, 1080], "fcntx": [234, 1080], "363": [234, 237, 282, 296, 314, 324, 330, 336, 340, 1080], "us77954m1053": [234, 1080], "prwcx": [234, 1080], "westburi": [234, 1080], "us6804141090": [234, 1080], "owlsx": [234, 1080], "us1401931035": [234, 1080], "caibx": [234, 1080], "582": [234, 237, 330, 1080], "harbor": [234, 1080], "institut": [234, 235, 495, 510, 1080], "us4115115044": [234, 1080], "hacax": [234, 1080], "us77954q1067": [234, 1080], "trbcx": [234, 1080], "dreyfu": [234, 1080], "treasuri": [234, 1080], "cash": [234, 1080], "inst": [234, 1080], "us2619411083": [234, 1080], "dirxx": [234, 1080], "blackrock": [234, 1080], "us09251t5092": [234, 1080], "malox": [234, 1080], "us3163453059": [234, 1080], "flpsx": [234, 1080], "liquid": [234, 1080], "us09248u5517": [234, 1080], "tttxx": [234, 1080], "dfa": [234, 1080], "portfolio": [234, 254, 1080], "us2332038841": [234, 1080], "dfgbx": [234, 1080], "feder": [234, 1080], "herm": [234, 1080], "us60934n6821": [234, 1080], "utixx": [234, 1080], "oakmark": [234, 1080], "investor": [234, 254, 1080], "us4138382027": [234, 1080], "oakix": [234, 1080], "asset": [234, 1080], "us00767h4939": [234, 1080], "787": [234, 237, 1080], "fpa": [234, 1080], "crescent": [234, 1080], "us30254t7596": [234, 1080], "fpacx": [234, 1080], "us3534968058": [234, 1080], "fcisx": [234, 1080], "us5529836943": [234, 1080], "meiix": [234, 1080], "goldman": [234, 1080], "sach": [234, 1080, 1194], "instrument": [234, 457, 459, 929, 1080], "us38142b5003": [234, 1080], "ftixx": [234, 1080], "schwab": [234, 1080], "us8085098551": [234, 1080], "swppx": [234, 1080], "508": [234, 237, 282, 314, 330, 1080], "templeton": [234, 1080], "bond": [234, 1080], "advisor": [234, 1080], "us8802084009": [234, 1080], "tgbax": [234, 1080], "us32008f6060": [234, 1080], "sgiix": [234, 1080], "ishar": [234, 1080], "etf": [234, 1080], "us4642872000": [234, 1080], "ivv": [234, 1080], "507": [234, 237, 314, 1080], "vanguard": [234, 1080], "admir": [234, 1080], "us9229087104": [234, 1080], "vfiax": [234, 1080], "510": [234, 237, 314, 324, 330, 1080], "us9229087286": [234, 1080], "vtsax": [234, 1080], "370": [234, 237, 282, 296, 324, 330, 336, 340, 1080], "spdr": [234, 1080], "midcap": [234, 1080], "us78467y1073": [234, 1080], "mdy": [234, 1080], "dow": [234, 1080], "jone": [234, 358, 359, 1080], "industri": [234, 825, 1080], "us78467x1090": [234, 1080], "health": [234, 1080], "us81369y2090": [234, 1080], "xlv": [234, 1080], "discretionari": [234, 1080], "us81369y4070": [234, 1080], "xly": [234, 1080], "energi": [234, 1080], "us81369y5069": [234, 1080], "xle": [234, 1080], "financi": [234, 1080], "us81369y6059": [234, 1080], "xlf": [234, 1080], "us81369y8030": [234, 1080], "xlk": [234, 1080], "invesco": [234, 1080], "qqq": [234, 1080], "us46090e1038": [234, 1080], "us2562061034": [234, 1080], "dodfx": [234, 1080], "msci": [234, 1080], "eaf": [234, 1080], "us4642874659": [234, 1080], "efa": [234, 1080], "897": [234, 237, 1080], "jpmorgan": [234, 1080], "sec": [234, 480, 983, 1080, 1151], "mny": [234, 1080], "mkt": [234, 1080], "us4812a28358": [234, 1080], "jtsxx": [234, 1080], "eql": [234, 1080], "wght": [234, 1080], "us46137v3574": [234, 1080], "us4812a03757": [234, 1080], "cjtxx": [234, 1080], "us00143w8753": [234, 1080], "odvyx": [234, 1080], "dividend": [234, 1080], "us78464a7634": [234, 1080], "sdy": [234, 1080], "equiti": [234, 1080], "us2332033719": [234, 1080], "dfiex": [234, 1080], "888": [234, 237, 1080], "edgewood": [234, 1080], "us0075w07594": [234, 1080], "egfix": [234, 1080], "prudenti": [234, 1080], "us00767h7585": [234, 1080], "r6": [234, 1080], "us55273h3536": [234, 1080], "meikx": [234, 1080], "327": [234, 237, 250, 275, 282, 292, 324, 330, 336, 340], "328": [234, 237, 244, 250, 282, 330, 336, 340], "geschieht": [235, 375, 912], "wunder": 235, "groesser": 235, "jave": 235, "shorthand": [235, 390, 904, 1036], "lin": 235, "lout": 235, "faster": [235, 254, 313, 442, 454, 987, 993], "outputlist": 235, "getus": [235, 1101], "userdatabas": [235, 1101], "userid": [235, 247], "groupid": 235, "loginshel": [235, 336], "userrecord": 235, "dens": [235, 244, 254], "pratic": 235, "_fix_float_numb": 235, "fieldnam": [235, 1131], "_fix_bool": 235, "elif": [235, 242, 318, 388, 425, 466, 1042, 1057, 1058], "_fix_dat": 235, "read_stock": [235, 1080], "csvfile": [235, 1035], "converted_record": 235, "dbname": [235, 1134], "stmt": 235, "predefin": [235, 957, 992, 997, 1169], "circuit": [236, 242, 252, 930, 1056, 1180, 1187], "windows_path": [237, 242], "festplatt": [237, 1190], "eue": [237, 314, 330, 352], "lehrer": 237, "50923504": 237, "202107": 237, "140106795875920": 237, "140106669190640": 237, "669": [237, 254], "140106669191024": 237, "0j": 237, "copied_l": [237, 244], "140106669249856": 237, "copied_t": 237, "tuple_containing_one_el": 237, "tran": 237, "satan": [237, 247], "queen": [237, 257, 1112, 1114, 1118, 1120, 1131], "10000000000": [237, 292, 352], "prod": 237, "resultset_to_local_db": 237, "my_local_db": 237, "basenam": 237, "normalized_path": 237, "normpath": [237, 244, 1030], "291": [237, 242, 250, 275, 292, 302, 314, 324, 330, 336, 458], "294": [237, 242, 250, 275, 292, 296, 302, 330, 336], "297": [237, 242, 244, 250, 254, 296, 324, 330, 336], "299": [237, 242, 247, 250, 254, 275, 282, 292, 296, 302, 324, 330, 336], "306": [237, 247, 254, 275, 292, 296, 302, 314, 324, 330, 336], "307": [237, 244, 250, 275, 292, 296, 302, 314, 324, 330, 336], "309": [237, 244, 247, 250, 282, 292, 296, 302, 314, 318, 330, 336, 340], "310": [237, 244, 247, 250, 296, 302, 314, 330, 336, 403], "311": [237, 244, 275, 296, 302, 324, 330, 336], "312": [237, 244, 250, 275, 282, 292, 302, 324, 330, 336], "313": [237, 244, 250, 282, 296, 302, 324, 330, 336], "316": [237, 244, 247, 250, 275, 296, 314, 324, 330, 336], "317": [237, 244, 247, 275, 282, 292, 296, 314, 324, 330, 336], "318": [237, 247, 250, 282, 296, 324, 330, 336], "319": [237, 244, 247, 250, 275, 292, 296, 314, 324, 330, 336], "321": [237, 247, 250, 282, 292, 296, 302, 314, 330, 336, 340], "322": [237, 247, 250, 282, 302, 314, 324, 330, 336], "323": [237, 244, 247, 250, 275, 296, 302, 314, 324, 330, 336], "324": [237, 247, 250, 275, 292, 296, 302, 314, 324, 330, 336, 541], "325": [237, 244, 250, 282, 292, 302, 324, 330, 336], "326": [237, 244, 250, 275, 292, 302, 314, 324, 330, 336], "329": [237, 250, 275, 282, 314, 330, 336, 340], "331": [237, 244, 250, 275, 296, 330, 336, 340], "335": [237, 244, 250, 282, 296, 324, 330, 336], "336": [237, 244, 250, 296, 324, 330, 336, 473], "337": [237, 250, 282, 296, 324, 330, 336, 340], "338": [237, 244, 282, 296, 324, 330, 336], "339": [237, 244, 250, 296, 324, 330, 336, 340], "341": [237, 244, 250, 282, 296, 314, 324, 330, 336, 340], "342": [237, 244, 250, 282, 302, 324, 330, 336], "343": [237, 250, 282, 296, 314, 330, 336, 340], "346": [237, 250, 296, 314, 324, 330, 336, 639, 640, 641, 642], "347": [237, 282, 296, 314, 324, 330, 336], "348": [237, 250, 314, 324, 330, 336], "349": [237, 250, 296, 314, 324, 330, 336, 453], "351": [237, 244, 250, 296, 324, 330, 336], "352": [237, 244, 250, 282, 296, 324, 330, 336], "353": [237, 244, 250, 282, 296, 324, 330, 336], "354": [237, 250, 296, 324, 330, 336, 487], "355": [237, 282, 296, 324, 330, 336, 340], "356": [237, 257, 296, 314, 330, 336, 340], "357": [237, 282, 296, 314, 324, 330, 336, 340], "359": [237, 296, 324, 330], "361": [237, 296, 314, 324, 330, 340], "362": [237, 282, 296, 314, 324, 330], "364": [237, 296, 330, 336, 340], "365": [237, 314, 330, 336], "366": [237, 282, 296, 330, 336, 340], "367": [237, 296, 314, 324, 330, 336, 340], "368": [237, 296, 324, 330, 336, 340], "369": [237, 282, 296, 324, 330], "371": [237, 282, 324, 330, 336, 340], "373": [237, 244, 282, 314, 324, 330, 340], "374": [237, 244, 296, 314, 330, 340], "375": [237, 244, 254, 282, 296, 314, 324, 330, 340, 453], "376": [237, 282, 296, 314, 324, 330, 340], "377": [237, 244, 282, 296, 314, 324, 330], "379": [237, 282, 296, 314, 324, 330], "380": [237, 282, 296, 314, 330], "381": [237, 244, 282, 296, 330], "382": [237, 282, 296, 314, 330], "383": [237, 244, 282, 286, 314, 324, 330], "384": [237, 282, 296, 314, 324, 330, 340], "385": [237, 282, 296, 314, 330, 340], "386": [237, 282, 296, 314, 330, 340], "387": [237, 330, 340], "388": [237, 282, 296, 314, 330, 340], "389": [237, 314, 330, 340], "390": [237, 296, 314, 330, 340], "391": [237, 282, 314, 330], "392": [237, 282, 330, 340], "393": [237, 244, 282, 296, 314, 330, 340], "394": [237, 244, 282, 296, 314, 330, 340], "395": [237, 244, 282, 296, 314, 324, 330, 340], "396": [237, 244, 282, 330, 340, 870], "397": [237, 244, 296, 314, 330, 340], "398": [237, 244, 296, 330, 340], "399": [237, 244, 296, 314, 330, 340], "401": [237, 244, 282, 296, 330, 340], "402": [237, 282, 314, 330, 340], "403": [237, 244, 296, 314, 330, 340], "405": [237, 296, 330, 340], "406": [237, 244, 282, 296, 314, 330], "407": [237, 282, 296, 314, 330, 340], "408": [237, 244, 282, 296, 314, 330, 340], "409": [237, 244, 282, 296, 314, 324, 330, 340], "411": [237, 244, 282, 296, 324, 330], "412": [237, 296, 330], "413": [237, 244, 282, 296, 330], "414": [237, 244, 282, 296, 314, 330], "415": [237, 296, 314, 330], "416": [237, 244, 282, 314, 330], "417": [237, 244, 282, 296, 330], "418": [237, 244, 282, 314, 330, 340], "419": [237, 244, 282, 296, 314, 330], "420": [237, 244, 282, 296, 314, 330], "421": [237, 244, 282, 296, 314, 330], "422": [237, 244, 324, 330, 340], "423": [237, 282, 296, 314, 330, 340, 776], "424": [237, 244, 282, 296, 330, 340], "425": [237, 282, 330], "426": [237, 314], "427": [237, 244, 282, 314, 330, 340], "428": [237, 244, 282, 314, 330, 340], "429": [237, 282, 314, 330, 340], "430": [237, 244, 282, 314, 330, 340], "431": [237, 282, 314, 324, 330, 340, 776], "432": [237, 244, 282, 314, 340], "433": [237, 282, 314, 324, 340], "434": [237, 282, 330, 340], "435": [237, 340], "436": [237, 282, 314, 330, 340], "437": [237, 244, 282, 314, 324, 330, 340], "438": [237, 244, 314, 330, 340], "439": [237, 282, 330, 340], "440": [237, 244, 282, 330, 340], "441": [237, 244, 282, 330, 340], "442": [237, 244, 282, 324, 340], "443": [237, 244, 314, 330, 340], "444": [237, 244, 314, 330, 340], "445": [237, 244, 314, 324, 330, 340], "446": [237, 282, 340], "447": [237, 244, 282, 314, 324, 330, 340], "448": [237, 282, 330, 340], "449": [237, 244, 330], "451": [237, 244, 314, 330], "452": [237, 244, 282, 330, 340], "453": [237, 244, 314, 330, 340], "454": [237, 244, 282, 330, 340], "455": [237, 244, 330, 340], "457": 237, "458": [237, 282, 330, 340], "459": [237, 324], "460": [237, 282], "461": [237, 282, 340], "462": [237, 282, 340], "463": [237, 330], "464": [237, 282, 330, 340], "465": [237, 282, 286, 324, 330, 340], "466": [237, 282, 340], "467": [237, 282, 324, 330, 340], "468": [237, 282, 330, 340], "469": [237, 282, 330, 340, 742], "470": [237, 282, 330], "471": [237, 282, 324, 330, 340], "472": [237, 282, 330, 340], "473": [237, 330], "474": [237, 282, 330, 340], "475": [237, 282, 330, 340], "476": [237, 282, 324, 330, 340], "478": [237, 340], "479": [237, 282, 330, 340], "480": [237, 282, 330, 340], "481": [237, 282, 330], "482": [237, 282, 324, 340], "483": [237, 282, 324, 330, 340], "484": [237, 340], "485": [237, 340], "486": [237, 282, 330, 340], "487": [237, 282, 330, 340], "488": [237, 282, 330, 340], "489": 237, "490": [237, 330, 907], "491": [237, 330], "492": [237, 330], "494": [237, 282, 330], "495": 237, "496": 237, "497": [237, 282, 330], "498": [237, 282, 330], "499": [237, 330], "502": [237, 282, 330], "503": [237, 330], "504": [237, 282], "505": [237, 250, 282, 330], "506": [237, 282, 330], "509": [237, 314], "511": [237, 314, 324, 330], "514": [237, 330], "515": [237, 282, 330, 741], "516": [237, 282], "518": [237, 282, 330], "519": [237, 330], "520": [237, 282], "521": [237, 282, 761, 765], "522": 237, "523": 237, "524": [237, 282], "525": [237, 282, 330], "526": 237, "527": [237, 330], "528": 237, "529": [237, 324, 330], "530": 237, "531": [237, 282, 330], "532": [237, 776], "533": [237, 330], "534": [237, 330], "535": [237, 330], "536": [237, 907], "538": [237, 330], "539": [237, 330], "540": [237, 324], "541": [237, 330], "542": [237, 330], "543": 237, "544": [237, 324, 330], "545": [237, 324, 330], "546": [237, 330], "547": [237, 330], "548": [237, 286, 330], "549": [237, 330], "550": [237, 330], "551": 237, "552": [237, 324, 330], "553": [237, 324, 330], "554": [237, 909], "555": 237, "556": [237, 324], "557": [237, 330], "558": [237, 330], "559": [237, 330], "560": 237, "561": [237, 330], "562": [237, 330], "563": [237, 330], "564": [237, 330], "565": [237, 330], "566": 237, "567": [237, 330], "568": 237, "569": [237, 330], "570": 237, "571": 237, "572": 237, "573": 237, "574": [237, 330], "575": [237, 330], "576": 237, "577": [237, 330], "578": [237, 330], "579": [237, 330], "580": [237, 330], "581": [237, 330], "583": [237, 324], "584": 237, "585": [237, 330], "586": 237, "587": 237, "588": [237, 318, 330], "589": [237, 330], "590": [237, 330], "591": [237, 324], "592": 237, "593": [237, 330], "594": [237, 324], "595": [237, 330], "596": [237, 1013], "597": 237, "598": 237, "599": 237, "601": 237, "602": 237, "603": 237, "604": 237, "605": 237, "606": 237, "607": [237, 324], "608": 237, "609": [237, 324], "610": [237, 907], "611": 237, "612": [237, 870], "613": 237, "614": 237, "615": [237, 324], "616": 237, "617": 237, "618": 237, "619": 237, "620": 237, "621": 237, "622": 237, "623": 237, "624": 237, "625": [237, 254], "626": 237, "627": 237, "628": 237, "629": 237, "630": 237, "631": 237, "632": 237, "633": 237, "634": 237, "635": 237, "636": 237, "637": 237, "638": 237, "639": 237, "640": [237, 592], "641": 237, "642": 237, "643": 237, "644": [237, 1050], "645": 237, "646": 237, "647": 237, "648": 237, "649": 237, "650": [237, 324], "651": 237, "652": 237, "653": 237, "654": 237, "655": [237, 324], "656": 237, "657": [237, 324], "658": 237, "659": 237, "660": 237, "661": 237, "662": 237, "663": 237, "665": [237, 324], "668": [237, 324, 1054], "670": 237, "671": [237, 324], "672": 237, "673": 237, "674": 237, "675": 237, "676": 237, "677": 237, "678": 237, "679": 237, "680": [237, 324], "681": [237, 324], "682": [237, 907], "683": 237, "684": 237, "685": 237, "687": 237, "688": 237, "689": 237, "690": 237, "691": 237, "692": 237, "693": 237, "694": 237, "695": [237, 324], "696": 237, "697": [237, 324], "698": [237, 907, 947], "699": 237, "701": [237, 324], "702": 237, "703": [237, 290, 291, 312], "704": 237, "705": 237, "706": [237, 324], "707": 237, "708": [237, 250], "709": 237, "710": [237, 592], "711": 237, "712": 237, "713": 237, "715": [237, 666], "716": [237, 324], "717": 237, "718": 237, "719": 237, "720": 237, "721": 237, "722": 237, "723": 237, "724": 237, "725": 237, "726": 237, "727": [237, 324], "728": 237, "729": 237, "730": [237, 279], "731": 237, "732": 237, "733": 237, "734": 237, "735": 237, "736": 237, "737": 237, "738": 237, "739": 237, "740": 237, "741": 237, "742": 237, "743": 237, "744": 237, "745": 237, "746": [237, 324, 1001], "747": 237, "748": 237, "749": 237, "750": 237, "751": 237, "752": 237, "753": 237, "754": 237, "756": 237, "757": 237, "758": 237, "759": 237, "760": 237, "761": 237, "762": 237, "763": 237, "764": 237, "765": 237, "766": 237, "767": 237, "768": [237, 324], "769": 237, "770": [237, 324], "772": 237, "773": 237, "774": [237, 324], "775": 237, "776": 237, "778": 237, "779": 237, "780": 237, "781": [237, 324], "782": [237, 286], "783": 237, "784": 237, "785": 237, "786": 237, "788": [237, 324], "789": [237, 244], "790": 237, "791": [237, 741], "792": 237, "793": 237, "794": 237, "795": 237, "796": 237, "797": 237, "798": 237, "801": [237, 279], "802": 237, "803": 237, "804": [237, 324], "805": 237, "806": 237, "807": 237, "808": 237, "809": [237, 318], "810": 237, "811": [237, 324], "812": [237, 324], "813": [237, 324], "814": 237, "815": [237, 254], "816": [237, 260, 324], "817": 237, "818": 237, "819": 237, "820": 237, "822": 237, "823": 237, "824": 237, "826": 237, "827": [237, 324], "828": [237, 286, 324], "829": 237, "830": 237, "831": 237, "832": 237, "833": 237, "834": 237, "835": 237, "836": 237, "837": 237, "838": 237, "839": [237, 324], "840": 237, "841": 237, "842": 237, "843": 237, "844": [237, 324], "845": 237, "846": 237, "847": 237, "848": 237, "849": 237, "850": 237, "851": 237, "852": 237, "853": 237, "854": 237, "855": 237, "856": 237, "857": 237, "858": 237, "859": 237, "860": 237, "861": 237, "862": [237, 324], "863": 237, "864": 237, "865": 237, "866": 237, "867": 237, "868": 237, "870": 237, "871": 237, "872": 237, "873": 237, "874": [237, 489], "875": 237, "876": 237, "877": [237, 324], "878": 237, "879": [237, 453], "880": 237, "881": [237, 324], "882": 237, "883": [237, 324], "884": 237, "885": 237, "886": 237, "887": [237, 324], "889": 237, "890": 237, "891": [237, 324], "892": 237, "893": 237, "894": 237, "895": 237, "896": 237, "898": [237, 324], "899": 237, "901": 237, "902": [237, 907], "903": 237, "904": 237, "905": 237, "906": 237, "907": 237, "908": 237, "909": [237, 324], "911": 237, "912": 237, "913": 237, "914": 237, "915": 237, "916": 237, "917": [237, 286], "918": [237, 324], "919": 237, "920": 237, "921": [237, 324], "922": [237, 324], "923": 237, "924": 237, "925": 237, "926": [237, 324], "927": 237, "928": 237, "929": [237, 324], "930": 237, "931": 237, "932": 237, "933": [237, 324], "934": 237, "935": [237, 324], "936": 237, "937": 237, "938": 237, "939": [237, 324], "940": [237, 324], "941": [237, 324], "942": 237, "943": 237, "944": 237, "945": 237, "946": [237, 324], "947": 237, "948": 237, "949": [237, 324], "950": 237, "951": [237, 318], "952": 237, "953": 237, "954": 237, "955": 237, "956": 237, "957": 237, "958": 237, "959": 237, "960": 237, "961": 237, "962": 237, "963": 237, "964": [237, 324], "965": 237, "966": 237, "967": [237, 324], "968": 237, "969": 237, "970": 237, "971": [237, 324], "972": 237, "973": 237, "975": 237, "976": [237, 275, 282, 292, 296, 318, 324, 330], "977": [237, 275, 282, 292, 296, 318, 324, 330, 916], "timeaxi": 237, "myrang": 237, "1002": [237, 639, 640, 641, 642, 870], "1004": 237, "1006": 237, "1008": 237, "1010": 237, "1012": 237, "1014": 237, "1016": 237, "1018": 237, "1020": [237, 852, 853, 860], "1022": 237, "1028": 237, "1030": 237, "1032": 237, "1034": 237, "1036": 237, "1038": 237, "1040": 237, "1042": [237, 987], "1046": 237, "1048": 237, "1050": 237, "1052": 237, "1054": 237, "1056": 237, "1058": 237, "1060": 237, "1062": 237, "1064": 237, "1066": 237, "1068": [237, 286], "1070": [237, 286], "1072": [237, 286], "1074": 237, "1076": 237, "1078": 237, "1080": 237, "1082": 237, "1084": 237, "1086": 237, "1088": 237, "1090": 237, "1092": 237, "1094": 237, "1096": 237, "1098": 237, "1102": 237, "1104": 237, "1106": 237, "1108": 237, "1110": 237, "1114": 237, "1116": 237, "1118": 237, "1120": 237, "1122": 237, "1124": 237, "1126": 237, "1128": 237, "1130": 237, "1132": 237, "1134": 237, "1136": 237, "1138": 237, "1140": 237, "1142": 237, "1144": 237, "1146": 237, "1148": 237, "1150": [237, 1144, 1145], "1152": [237, 1144, 1145], "1154": 237, "1156": 237, "1158": 237, "1160": 237, "1162": 237, "1164": 237, "1166": 237, "1168": 237, "1170": 237, "1172": 237, "1174": 237, "1176": 237, "1178": 237, "1180": 237, "1182": 237, "1184": 237, "1186": 237, "1188": 237, "1190": 237, "1192": 237, "1194": 237, "1196": 237, "1198": 237, "1202": 237, "1204": 237, "1206": 237, "1208": 237, "1210": 237, "1212": 237, "1214": 237, "1216": 237, "1218": 237, "1220": 237, "1222": 237, "1224": 237, "1226": 237, "1228": 237, "1230": 237, "1232": 237, "1236": 237, "1238": 237, "1240": 237, "1242": 237, "1246": 237, "1248": 237, "1250": 237, "1252": 237, "1254": [237, 508, 509, 510, 522, 523, 524], "1256": 237, "1258": 237, "1260": [237, 473], "1262": 237, "1264": 237, "1266": 237, "1268": 237, "1270": 237, "1272": 237, "1274": 237, "1276": 237, "1278": 237, "1280": 237, "1282": 237, "1284": 237, "1286": 237, "1288": 237, "1290": 237, "1292": 237, "1294": 237, "1296": 237, "1298": 237, "1300": 237, "1302": 237, "1304": 237, "1306": 237, "1308": 237, "1310": 237, "1312": 237, "1314": 237, "1316": 237, "1318": 237, "1320": 237, "1322": 237, "1324": 237, "1326": 237, "1328": 237, "1330": 237, "1332": 237, "1334": 237, "1336": 237, "1338": 237, "1340": 237, "1342": [237, 1145], "1344": 237, "1346": 237, "1348": 237, "1350": 237, "1352": [237, 957], "1354": 237, "1356": 237, "1358": 237, "1360": 237, "1362": 237, "1364": 237, "1366": 237, "1368": 237, "1370": 237, "1372": 237, "1374": 237, "1378": 237, "1380": 237, "1382": 237, "1384": 237, "1386": 237, "1388": 237, "1390": 237, "1392": [237, 489, 1145], "1394": 237, "1396": 237, "1398": 237, "1400": 237, "1402": 237, "1406": 237, "1408": 237, "1410": 237, "1412": 237, "1414": 237, "1416": [237, 1068], "1418": 237, "1420": 237, "1422": 237, "1424": 237, "1426": 237, "1428": 237, "1430": 237, "1432": 237, "1434": 237, "1436": 237, "1438": 237, "1440": 237, "1442": 237, "1444": 237, "1446": 237, "1448": 237, "1450": 237, "1452": 237, "1454": 237, "1456": 237, "1458": 237, "1460": 237, "1462": 237, "1464": 237, "1466": 237, "1468": 237, "1470": 237, "1472": 237, "1474": 237, "1476": 237, "1478": 237, "1480": 237, "1482": 237, "1484": 237, "1486": 237, "1488": 237, "1490": 237, "1492": 237, "1494": 237, "1496": 237, "1498": 237, "1502": 237, "1504": 237, "1506": 237, "1508": 237, "1510": 237, "1512": 237, "1514": 237, "1516": 237, "1518": 237, "1520": 237, "1522": 237, "1524": 237, "1526": 237, "1528": 237, "1530": 237, "1532": 237, "1534": 237, "1536": [237, 999], "1538": 237, "1540": 237, "1542": 237, "1544": 237, "1546": 237, "1548": 237, "1550": 237, "1552": 237, "1554": 237, "1556": 237, "1558": [237, 868], "1560": 237, "1562": 237, "1564": 237, "1566": 237, "1568": 237, "1570": 237, "1572": 237, "1574": 237, "1576": 237, "1578": 237, "1580": 237, "1582": 237, "1584": 237, "1586": 237, "1588": 237, "1590": 237, "1592": 237, "1594": 237, "1596": 237, "1598": 237, "1600": 237, "1602": 237, "1604": [237, 993], "1606": 237, "1608": 237, "1610": 237, "1612": 237, "1614": 237, "1616": 237, "1618": 237, "1620": 237, "1622": 237, "1624": 237, "1626": 237, "1628": 237, "1630": 237, "1632": 237, "1634": [237, 508, 509], "1636": 237, "1638": 237, "1640": 237, "1642": 237, "1644": 237, "1646": [237, 1144], "1648": 237, "1650": 237, "1652": 237, "1654": 237, "1656": 237, "1658": 237, "1660": 237, "1662": 237, "1664": 237, "1666": 237, "1668": 237, "1672": 237, "1674": 237, "1676": 237, "1678": 237, "1680": 237, "1682": 237, "1684": 237, "1686": 237, "1688": [237, 1000, 1001], "1690": 237, "1692": 237, "1694": 237, "1696": 237, "1698": 237, "1700": 237, "1702": 237, "1704": 237, "1706": [237, 1011], "1708": 237, "1710": 237, "1712": 237, "1714": [237, 1144], "1716": [237, 1144], "1718": 237, "1722": 237, "1724": 237, "1726": 237, "1728": 237, "1730": 237, "1732": 237, "1734": 237, "1736": 237, "1738": 237, "1740": 237, "1742": 237, "1744": 237, "1746": 237, "1748": 237, "1750": 237, "1752": 237, "1754": 237, "1756": 237, "1758": 237, "1760": 237, "1762": 237, "1764": [237, 296], "1766": 237, "1768": 237, "1770": 237, "1772": 237, "1774": 237, "1776": 237, "1778": 237, "1780": 237, "1782": 237, "1784": 237, "1786": 237, "1788": 237, "1790": 237, "1792": 237, "1794": 237, "1796": 237, "1798": 237, "1800": [237, 999], "1802": 237, "1804": 237, "1806": 237, "1808": 237, "1810": 237, "1812": 237, "1814": 237, "1816": 237, "1818": 237, "1820": 237, "1822": 237, "1824": 237, "1826": 237, "1828": 237, "1830": 237, "1832": 237, "1834": 237, "1836": 237, "1838": 237, "1840": 237, "1842": 237, "1844": 237, "1846": 237, "1848": 237, "1850": 237, "1852": 237, "1854": 237, "1856": 237, "1858": 237, "1860": 237, "1862": 237, "1864": 237, "1866": 237, "1868": 237, "1870": 237, "1872": 237, "1874": 237, "1876": 237, "1878": 237, "1880": 237, "1882": 237, "1884": 237, "1886": 237, "1888": 237, "1890": 237, "1892": 237, "1894": 237, "1896": 237, "1898": 237, "1900": [237, 247, 1112, 1114, 1118, 1120], "1902": 237, "1904": 237, "1906": 237, "1908": 237, "1910": 237, "1912": 237, "1914": 237, "1916": 237, "1918": 237, "1920": 237, "1922": 237, "1924": 237, "1926": 237, "1928": 237, "1930": 237, "1932": 237, "1934": 237, "1938": 237, "1940": 237, "1942": 237, "1944": 237, "1946": 237, "1948": 237, "1950": 237, "1952": 237, "1954": [237, 1078], "1956": [237, 1048], "1958": 237, "1962": 237, "1964": 237, "1968": [237, 418], "1970": [237, 757], "1972": 237, "1974": 237, "1976": 237, "1978": [237, 378], "1980": [237, 583, 999], "1984": 237, "1986": [237, 1112, 1114, 1118, 1120], "1988": [237, 378, 492], "1990": [237, 583], "1992": 237, "1994": 237, "2004": 237, "2024": [237, 374], "2026": 237, "2028": 237, "2030": 237, "2032": 237, "2034": 237, "2036": 237, "2038": 237, "2040": 237, "2042": 237, "2044": 237, "2046": 237, "2050": 237, "2052": 237, "2054": 237, "2056": 237, "2058": 237, "2060": 237, "2062": 237, "2064": 237, "2066": 237, "2068": 237, "2070": 237, "2072": 237, "2074": 237, "2076": 237, "2078": 237, "2080": 237, "2082": 237, "2084": 237, "2086": 237, "2088": 237, "2090": 237, "2092": 237, "2094": 237, "2096": 237, "2098": 237, "2100": 237, "2102": 237, "2104": 237, "2106": 237, "2108": 237, "2110": 237, "2112": 237, "2114": 237, "2116": 237, "2118": 237, "2120": 237, "2122": 237, "2124": 237, "2126": 237, "2128": 237, "2130": 237, "2132": 237, "2134": 237, "2136": 237, "2138": 237, "2140": 237, "2142": 237, "2144": 237, "2146": 237, "2148": 237, "2150": 237, "2152": 237, "2154": 237, "2156": 237, "2158": 237, "2160": 237, "2162": 237, "2164": 237, "2166": 237, "2168": 237, "2170": 237, "2172": 237, "2174": 237, "2176": 237, "2178": 237, "2180": 237, "2182": 237, "2184": 237, "2186": 237, "2188": 237, "2190": 237, "2192": 237, "2194": 237, "2196": [237, 776], "2198": 237, "2200": 237, "2202": 237, "2204": 237, "2206": 237, "2208": 237, "2210": 237, "2214": 237, "2216": 237, "2218": 237, "2220": 237, "2222": 237, "2224": 237, "2226": 237, "2228": 237, "2230": 237, "2232": 237, "2234": 237, "2236": 237, "2238": 237, "2240": 237, "2242": 237, "2244": 237, "2246": 237, "2248": 237, "2250": 237, "2252": 237, "2254": 237, "2256": 237, "2258": 237, "2260": 237, "2262": 237, "2264": 237, "2266": 237, "2268": 237, "2272": 237, "2274": 237, "2276": 237, "2278": 237, "2280": 237, "2282": 237, "2284": 237, "2286": 237, "2288": 237, "2290": 237, "2292": 237, "2294": 237, "2296": 237, "2298": 237, "2300": 237, "2302": 237, "2304": 237, "2306": 237, "2308": 237, "2310": 237, "2312": 237, "2314": 237, "2316": 237, "2318": 237, "2320": 237, "2322": 237, "2324": 237, "2326": 237, "2328": 237, "2330": 237, "2332": [237, 907], "2334": 237, "2336": 237, "2338": 237, "2340": 237, "2342": 237, "2344": 237, "2346": 237, "2348": 237, "2350": 237, "2352": 237, "2354": 237, "2356": 237, "2358": 237, "2360": 237, "2362": 237, "2364": 237, "2366": 237, "2368": 237, "2370": 237, "2372": 237, "2374": 237, "2376": 237, "2378": 237, "2380": 237, "2382": 237, "2384": 237, "2386": 237, "2388": 237, "2390": 237, "2392": 237, "2394": 237, "2396": 237, "2398": 237, "2400": 237, "2402": 237, "2404": 237, "2406": 237, "2408": 237, "2410": 237, "2412": 237, "2414": 237, "2416": 237, "2418": 237, "2420": 237, "2422": 237, "2424": 237, "2426": 237, "2428": 237, "2430": 237, "2432": 237, "2434": 237, "2436": 237, "2438": 237, "2440": [237, 318, 324, 330], "2442": 237, "2444": 237, "2446": 237, "2448": 237, "2450": 237, "2452": 237, "2454": 237, "2456": 237, "2458": 237, "2460": [237, 732], "2462": 237, "2464": 237, "2466": 237, "2468": 237, "2470": 237, "2472": 237, "2474": 237, "2476": 237, "2478": 237, "2480": 237, "2482": 237, "2484": 237, "2486": 237, "2488": 237, "2490": 237, "2492": 237, "2494": 237, "2496": 237, "2498": 237, "2500": 237, "2502": 237, "2504": 237, "2506": 237, "2508": 237, "2510": 237, "2512": 237, "2514": 237, "2516": 237, "2518": 237, "2520": 237, "2522": 237, "2524": 237, "2526": 237, "2528": 237, "2530": 237, "2532": 237, "2534": 237, "2536": 237, "2538": 237, "2540": 237, "2542": 237, "2544": 237, "2546": 237, "2548": 237, "2550": 237, "2552": 237, "2554": 237, "2556": 237, "2558": 237, "2560": 237, "2562": 237, "2564": 237, "2566": 237, "2568": 237, "2570": 237, "2572": 237, "2574": 237, "2576": 237, "2578": 237, "2580": 237, "2582": 237, "2584": 237, "2586": 237, "2588": 237, "2590": 237, "2592": 237, "2594": 237, "2596": 237, "2598": 237, "2600": 237, "2602": 237, "2604": 237, "2606": 237, "2608": 237, "2610": 237, "2612": 237, "2614": 237, "2616": 237, "2618": 237, "2620": 237, "2622": 237, "2624": 237, "2626": 237, "2628": 237, "2630": 237, "2632": 237, "2634": 237, "2636": 237, "2638": 237, "2640": [237, 296], "2642": 237, "2644": 237, "2646": 237, "2648": 237, "2650": 237, "2652": 237, "2654": 237, "2656": 237, "2658": 237, "2660": 237, "2662": 237, "2664": 237, "2666": 237, "2668": 237, "2670": 237, "2672": 237, "2674": 237, "2676": 237, "2678": 237, "2680": 237, "2682": 237, "2684": 237, "2686": 237, "2688": 237, "2690": 237, "2692": 237, "2694": 237, "2696": 237, "2698": 237, "2700": 237, "2702": 237, "2704": 237, "2706": [237, 242], "2708": 237, "2710": 237, "2712": 237, "2714": 237, "2716": 237, "2718": 237, "2720": 237, "2722": 237, "2724": 237, "2726": 237, "2728": 237, "2730": [237, 292], "2732": 237, "2734": 237, "2736": 237, "2738": 237, "2740": 237, "2742": 237, "2744": 237, "2746": [237, 907, 933, 957], "2748": [237, 257, 275, 282, 314, 318, 324, 330], "2750": 237, "2752": 237, "2754": 237, "2756": 237, "2758": 237, "2760": 237, "2762": 237, "2764": 237, "2766": 237, "2768": 237, "2770": 237, "2772": 237, "2774": 237, "2776": 237, "2778": 237, "2780": 237, "2782": 237, "2784": 237, "2786": 237, "2788": 237, "2790": 237, "2792": 237, "2794": 237, "2796": 237, "2798": 237, "2800": [237, 280, 466], "2802": [237, 466], "2804": 237, "2806": 237, "2808": 237, "2810": 237, "2812": 237, "2814": 237, "2816": 237, "2818": 237, "2820": 237, "2822": 237, "2824": 237, "2826": 237, "2828": [237, 460], "2830": 237, "2832": 237, "2834": 237, "2836": 237, "2838": 237, "2840": 237, "2842": 237, "2844": 237, "2846": 237, "2848": 237, "2850": 237, "2852": 237, "2854": 237, "2856": 237, "2858": 237, "2860": 237, "2862": 237, "2864": 237, "2866": 237, "2868": 237, "2870": 237, "2872": 237, "2874": 237, "2876": 237, "2878": 237, "2880": 237, "2882": 237, "2884": 237, "2886": 237, "2888": 237, "2890": 237, "2892": 237, "2894": 237, "2896": 237, "2898": 237, "2900": 237, "2902": 237, "2904": 237, "2906": 237, "2910": 237, "2912": 237, "2914": 237, "2916": 237, "2918": 237, "2920": 237, "2922": 237, "2924": 237, "2926": 237, "2928": 237, "2930": 237, "2932": 237, "2934": 237, "2936": 237, "2938": 237, "2940": 237, "2942": 237, "2944": 237, "2946": 237, "2948": 237, "2950": 237, "2952": 237, "2954": 237, "2956": 237, "2958": 237, "2960": 237, "2962": 237, "2964": 237, "2966": 237, "2968": 237, "2970": 237, "2972": 237, "2974": 237, "2976": 237, "2978": 237, "2980": 237, "2982": 237, "2984": 237, "2986": 237, "2988": 237, "2990": 237, "2992": 237, "2994": 237, "2996": 237, "2998": 237, "3002": 237, "3004": 237, "3006": 237, "3008": 237, "3010": 237, "3012": 237, "3014": 237, "3016": 237, "3018": 237, "3020": 237, "3022": 237, "3024": 237, "3026": 237, "3028": 237, "3030": 237, "3032": 237, "3034": 237, "3036": 237, "3038": 237, "3040": 237, "3042": 237, "3044": 237, "3046": 237, "3048": 237, "3050": 237, "3052": 237, "3054": 237, "3056": 237, "3058": 237, "3060": 237, "3062": 237, "3064": 237, "3066": 237, "3068": 237, "3070": 237, "3072": 237, "3074": 237, "3076": 237, "3078": 237, "3080": 237, "3082": 237, "3084": 237, "3086": 237, "3088": 237, "3090": 237, "3092": 237, "3094": 237, "3096": 237, "3098": 237, "3100": 237, "3102": 237, "3104": 237, "3106": 237, "3108": 237, "3110": [237, 286], "3112": 237, "3114": 237, "3116": 237, "3118": 237, "3120": 237, "3122": 237, "3124": 237, "3126": 237, "3128": 237, "3130": 237, "3132": 237, "3134": 237, "3136": 237, "3138": 237, "3140": 237, "3142": 237, "3144": 237, "3146": 237, "3148": 237, "3150": 237, "3152": 237, "3154": 237, "3156": 237, "3158": 237, "3160": 237, "3162": 237, "3164": 237, "3166": 237, "3168": 237, "3170": 237, "3172": 237, "3174": 237, "3176": 237, "3178": 237, "3180": 237, "3182": 237, "3184": 237, "3186": 237, "3188": 237, "3190": 237, "3192": 237, "3194": 237, "3196": 237, "3198": 237, "3200": 237, "3202": 237, "3204": 237, "3206": 237, "3208": 237, "3210": 237, "3212": 237, "3214": 237, "3216": 237, "3218": 237, "3220": 237, "3222": 237, "3224": 237, "3226": 237, "3228": 237, "3230": 237, "3232": 237, "3234": 237, "3236": 237, "3238": 237, "3240": 237, "3242": 237, "3244": 237, "3246": 237, "3248": 237, "3250": 237, "3252": 237, "3254": 237, "3256": 237, "3258": 237, "3260": 237, "3262": 237, "3264": 237, "3266": 237, "3268": 237, "3270": 237, "3272": 237, "3274": 237, "3276": 237, "3278": 237, "3280": 237, "3282": 237, "3284": 237, "3286": 237, "3288": 237, "3290": 237, "3292": 237, "3294": 237, "3296": 237, "3298": 237, "3300": 237, "3302": 237, "3304": 237, "3306": 237, "3308": 237, "3310": 237, "3312": 237, "3314": 237, "3316": 237, "3318": 237, "3320": 237, "3322": 237, "3324": 237, "3326": 237, "3328": 237, "3330": 237, "3332": 237, "3334": 237, "3336": 237, "3338": 237, "3340": 237, "3342": 237, "3344": 237, "3346": 237, "3348": 237, "3350": 237, "3352": 237, "3354": 237, "3356": 237, "3358": 237, "3360": 237, "3362": 237, "3364": 237, "3366": 237, "3368": 237, "3370": 237, "3372": 237, "3374": 237, "3376": 237, "3378": 237, "3380": 237, "3382": 237, "3384": 237, "3386": 237, "3388": 237, "3390": 237, "3392": 237, "3394": 237, "3396": 237, "3398": 237, "3400": 237, "3402": 237, "3404": 237, "3406": 237, "3408": 237, "3410": 237, "3412": 237, "3414": 237, "3416": 237, "3418": 237, "3420": 237, "3422": 237, "3424": 237, "3426": 237, "3428": 237, "3430": 237, "3432": 237, "3434": 237, "3436": 237, "3438": 237, "3440": 237, "3442": 237, "3444": 237, "3446": 237, "3448": 237, "3450": 237, "3452": 237, "3454": 237, "3456": 237, "3458": 237, "3460": 237, "3462": 237, "3464": 237, "3466": 237, "3468": 237, "3470": 237, "3472": 237, "3474": 237, "3476": 237, "3478": 237, "3480": 237, "3482": 237, "3484": 237, "3486": 237, "3488": 237, "3490": 237, "3492": 237, "3494": 237, "3496": 237, "3498": 237, "3500": 237, "3502": 237, "3504": 237, "3506": 237, "3508": 237, "3510": 237, "3512": 237, "3514": 237, "3516": 237, "3518": 237, "3520": 237, "3522": 237, "3524": 237, "3526": 237, "3528": 237, "3530": 237, "3532": 237, "3534": 237, "3536": 237, "3538": 237, "3540": 237, "3542": 237, "3544": 237, "3546": 237, "3548": 237, "3550": 237, "3552": 237, "3554": 237, "3556": 237, "3558": 237, "3560": 237, "3562": 237, "3564": 237, "3566": 237, "3568": 237, "3570": 237, "3572": 237, "3574": 237, "3576": 237, "3578": 237, "3580": 237, "3582": 237, "3584": 237, "3586": 237, "3588": 237, "3590": 237, "3592": 237, "3594": 237, "3596": 237, "3598": 237, "3602": 237, "3604": 237, "3606": 237, "3608": 237, "3610": 237, "3612": 237, "3614": 237, "3616": 237, "3618": 237, "3620": 237, "3622": 237, "3624": 237, "3626": 237, "3628": 237, "3630": 237, "3632": 237, "3634": 237, "3636": 237, "3638": 237, "3640": 237, "3642": 237, "3644": 237, "3646": 237, "3648": 237, "3650": 237, "3652": 237, "3654": 237, "3656": 237, "3658": 237, "3660": 237, "3662": 237, "3664": 237, "3666": 237, "3668": 237, "3670": 237, "3672": 237, "3674": 237, "3676": 237, "3678": 237, "3680": 237, "3682": 237, "3684": 237, "3686": 237, "3688": 237, "3690": 237, "3692": 237, "3694": 237, "3696": 237, "3698": 237, "3700": 237, "3702": 237, "3704": 237, "3706": 237, "3708": 237, "3710": 237, "3712": 237, "3714": 237, "3716": 237, "3718": 237, "3720": 237, "3722": [237, 954], "3724": 237, "3726": 237, "3728": 237, "3730": 237, "3732": 237, "3734": 237, "3736": 237, "3738": 237, "3740": 237, "3742": 237, "3744": 237, "3746": 237, "3748": 237, "3750": 237, "3752": 237, "3754": 237, "3756": 237, "3758": 237, "3760": 237, "3762": 237, "3764": 237, "3766": 237, "3768": 237, "3770": [237, 286], "3772": 237, "3774": 237, "3776": 237, "3778": 237, "3780": 237, "3782": 237, "3784": 237, "3786": 237, "3788": 237, "3790": [237, 1145], "3792": [237, 1145], "3794": [237, 1145], "3796": [237, 1145], "3798": [237, 1145], "3800": [237, 1145], "3802": [237, 1145], "3804": 237, "3806": 237, "3808": 237, "3810": 237, "3812": 237, "3814": 237, "3816": 237, "3818": 237, "3820": 237, "3822": 237, "3824": 237, "3826": 237, "3828": 237, "3830": 237, "3832": 237, "3834": 237, "3836": 237, "3838": 237, "3840": 237, "3842": 237, "3844": 237, "3846": 237, "3848": 237, "3850": 237, "3852": 237, "3854": 237, "3856": 237, "3858": 237, "3860": 237, "3862": 237, "3864": 237, "3866": 237, "3868": 237, "3870": 237, "3872": 237, "3874": 237, "3876": 237, "3878": 237, "3880": 237, "3882": 237, "3884": 237, "3886": 237, "3888": 237, "3890": 237, "3892": 237, "3894": 237, "3896": 237, "3898": 237, "3900": 237, "3902": 237, "3904": 237, "3906": 237, "3908": 237, "3910": 237, "3912": 237, "3914": 237, "3916": 237, "3918": 237, "3920": 237, "3922": 237, "3924": 237, "3926": 237, "3928": 237, "3930": 237, "3932": 237, "3934": 237, "3936": 237, "3938": 237, "3940": 237, "3942": 237, "3946": 237, "3948": 237, "3950": 237, "3952": 237, "3954": 237, "3956": 237, "3958": 237, "3960": 237, "3962": 237, "3964": 237, "3966": 237, "3968": 237, "3970": 237, "3972": 237, "3974": 237, "3976": 237, "3978": 237, "3980": 237, "3982": 237, "3984": 237, "3986": 237, "3988": 237, "3990": 237, "3992": 237, "3994": 237, "3996": 237, "3998": 237, "4002": 237, "4004": 237, "4006": 237, "4008": 237, "4010": 237, "4012": 237, "4014": 237, "4016": 237, "4018": 237, "4020": 237, "4022": 237, "4024": 237, "4026": 237, "4028": 237, "4030": 237, "4032": 237, "4034": 237, "4036": 237, "4038": 237, "4040": 237, "4042": 237, "4044": 237, "4046": 237, "4048": 237, "4050": 237, "4052": 237, "4054": 237, "4056": 237, "4058": 237, "4060": 237, "4062": 237, "4064": 237, "4066": 237, "4068": 237, "4070": 237, "4072": 237, "4074": 237, "4076": 237, "4078": 237, "4080": 237, "4082": 237, "4084": 237, "4086": 237, "4088": 237, "4090": 237, "4092": 237, "4094": 237, "4098": 237, "4100": 237, "4102": 237, "4104": 237, "4106": 237, "4108": 237, "4110": 237, "4112": 237, "4114": 237, "4116": 237, "4118": 237, "4120": 237, "4122": 237, "4124": 237, "4126": 237, "4128": 237, "4130": 237, "4132": 237, "4134": 237, "4136": 237, "4138": 237, "4140": 237, "4142": 237, "4144": 237, "4146": 237, "4148": 237, "4150": 237, "4152": 237, "4154": 237, "4156": 237, "4158": 237, "4160": 237, "4162": 237, "4164": 237, "4166": 237, "4168": 237, "4170": 237, "4172": 237, "4174": 237, "4176": 237, "4178": 237, "4180": 237, "4182": 237, "4184": 237, "4186": 237, "4188": 237, "4190": 237, "4192": 237, "4194": 237, "4196": 237, "4198": 237, "4200": 237, "4202": 237, "4204": 237, "4206": 237, "4208": 237, "4210": 237, "4212": 237, "4214": 237, "4216": 237, "4218": 237, "4220": 237, "4222": 237, "4224": 237, "4226": 237, "4228": 237, "4230": 237, "4232": 237, "4234": [237, 1145], "4236": [237, 1145], "4238": [237, 1145], "4240": 237, "4242": 237, "4244": 237, "4246": 237, "4248": 237, "4250": 237, "4252": 237, "4254": 237, "4256": 237, "4258": 237, "4260": 237, "4262": 237, "4264": 237, "4266": 237, "4268": 237, "4270": 237, "4272": 237, "4274": 237, "4276": 237, "4278": 237, "4280": 237, "4282": 237, "4284": 237, "4286": 237, "4288": 237, "4290": 237, "4292": 237, "4294": 237, "4296": 237, "4298": 237, "4300": 237, "4302": 237, "4304": 237, "4306": 237, "4308": 237, "4310": 237, "4312": 237, "4314": 237, "4316": 237, "4318": 237, "4320": 237, "4322": 237, "4324": 237, "4326": 237, "4328": 237, "4330": 237, "4332": 237, "4334": 237, "4336": 237, "4338": 237, "4340": 237, "4342": 237, "4344": 237, "4346": 237, "4348": 237, "4350": 237, "4352": 237, "4354": 237, "4356": 237, "4358": 237, "4360": 237, "4362": 237, "4364": 237, "4366": 237, "4368": 237, "4370": 237, "4372": 237, "4374": 237, "4376": 237, "4378": 237, "4380": 237, "4382": 237, "4384": 237, "4386": 237, "4388": 237, "4390": 237, "4392": 237, "4394": 237, "4396": 237, "4398": 237, "4400": 237, "4402": 237, "4404": 237, "4406": 237, "4408": 237, "4410": 237, "4412": 237, "4414": 237, "4416": 237, "4418": 237, "4420": 237, "4422": 237, "4424": 237, "4426": 237, "4428": 237, "4430": 237, "4432": 237, "4434": 237, "4436": 237, "4438": 237, "4440": 237, "4442": 237, "4444": 237, "4446": 237, "4448": 237, "4450": 237, "4452": 237, "4454": 237, "4456": 237, "4458": 237, "4460": 237, "4462": 237, "4464": 237, "4466": 237, "4468": 237, "4470": 237, "4472": 237, "4474": 237, "4476": 237, "4478": 237, "4480": 237, "4482": 237, "4484": 237, "4486": 237, "4488": 237, "4490": 237, "4492": 237, "4494": 237, "4496": 237, "4498": 237, "4502": 237, "4504": 237, "4506": 237, "4508": 237, "4510": 237, "4512": 237, "4514": 237, "4516": 237, "4518": 237, "4520": 237, "4522": 237, "4524": 237, "4526": 237, "4528": 237, "4530": 237, "4532": 237, "4534": 237, "4536": 237, "4538": 237, "4540": 237, "4542": 237, "4544": 237, "4546": 237, "4548": 237, "4550": 237, "4552": 237, "4554": 237, "4556": 237, "4558": 237, "4560": 237, "4562": 237, "4564": 237, "4566": 237, "4568": 237, "4570": 237, "4572": 237, "4574": 237, "4578": 237, "4580": 237, "4582": 237, "4584": 237, "4586": 237, "4588": 237, "4590": 237, "4592": 237, "4594": 237, "4596": 237, "4598": 237, "4600": 237, "4602": 237, "4604": 237, "4606": 237, "4608": 237, "4610": 237, "4612": 237, "4614": 237, "4616": 237, "4618": 237, "4620": 237, "4622": 237, "4624": 237, "4626": 237, "4628": [237, 250], "4630": [237, 460], "4632": 237, "4634": 237, "4636": 237, "4638": 237, "4640": 237, "4642": 237, "4644": 237, "4646": 237, "4648": 237, "4650": 237, "4652": 237, "4654": 237, "4656": 237, "4658": 237, "4662": 237, "4664": 237, "4666": 237, "4668": 237, "4670": 237, "4672": 237, "4674": 237, "4676": 237, "4680": 237, "4682": 237, "4684": 237, "4686": 237, "4688": 237, "4690": 237, "4692": 237, "4694": 237, "4696": 237, "4698": 237, "4700": 237, "4702": 237, "4704": 237, "4706": 237, "4708": 237, "4710": 237, "4712": 237, "4714": 237, "4716": 237, "4718": 237, "4720": 237, "4722": 237, "4724": 237, "4726": 237, "4728": 237, "4730": 237, "4732": 237, "4734": 237, "4736": 237, "4738": 237, "4740": 237, "4742": 237, "4744": 237, "4746": 237, "4748": 237, "4750": 237, "4752": 237, "4754": 237, "4756": 237, "4758": 237, "4760": 237, "4762": 237, "4764": 237, "4766": 237, "4768": 237, "4770": 237, "4772": 237, "4774": 237, "4776": 237, "4778": 237, "4780": 237, "4782": 237, "4784": 237, "4786": 237, "4788": 237, "4790": 237, "4792": 237, "4794": 237, "4796": 237, "4798": 237, "4802": 237, "4804": 237, "4806": 237, "4808": 237, "4810": 237, "4812": 237, "4814": 237, "4816": 237, "4818": 237, "4820": 237, "4822": 237, "4824": 237, "4826": 237, "4828": 237, "4830": 237, "4832": 237, "4834": 237, "4836": 237, "4838": 237, "4840": 237, "4842": 237, "4844": 237, "4846": 237, "4848": 237, "4850": 237, "4852": 237, "4854": 237, "4856": 237, "4858": 237, "4860": 237, "4862": 237, "4864": 237, "4866": [237, 247], "4868": 237, "4870": 237, "4872": 237, "4874": 237, "4876": 237, "4878": 237, "4880": 237, "4882": [237, 870], "4884": 237, "4886": 237, "4888": 237, "4890": 237, "4892": 237, "4894": 237, "4896": 237, "4898": 237, "4900": 237, "4902": 237, "4904": 237, "4906": 237, "4908": 237, "4910": 237, "4912": 237, "4914": 237, "4916": 237, "4918": 237, "4920": 237, "4922": 237, "4924": 237, "4926": [237, 250], "4928": 237, "4930": 237, "4932": 237, "4934": 237, "4936": 237, "4938": 237, "4940": 237, "4942": 237, "4944": 237, "4946": 237, "4948": 237, "4950": [237, 254], "4952": 237, "4954": 237, "4956": 237, "4958": 237, "4960": 237, "4962": 237, "4964": 237, "4966": 237, "4968": 237, "4970": 237, "4972": 237, "4974": 237, "4976": 237, "4978": 237, "4980": 237, "4982": 237, "4984": 237, "4986": 237, "4988": 237, "4990": 237, "4992": 237, "4994": 237, "4996": 237, "4998": 237, "5002": 237, "5004": 237, "5006": 237, "5008": 237, "5010": 237, "5012": 237, "5014": 237, "5016": 237, "5018": 237, "5020": 237, "5022": 237, "5024": 237, "5026": 237, "5028": 237, "5030": 237, "5032": 237, "5034": 237, "5036": 237, "5038": 237, "5040": 237, "5042": 237, "5044": 237, "5046": 237, "5048": 237, "5052": 237, "5054": 237, "5056": 237, "5058": 237, "5060": 237, "5062": 237, "5064": 237, "5066": 237, "5068": 237, "5070": 237, "5072": 237, "5074": 237, "5076": 237, "5078": 237, "5080": [237, 907], "5082": 237, "5084": 237, "5086": 237, "5088": 237, "5090": 237, "5092": 237, "5094": 237, "5096": 237, "5098": 237, "5100": 237, "5102": 237, "5104": 237, "5106": 237, "5108": 237, "5110": 237, "5112": 237, "5114": 237, "5116": 237, "5118": 237, "5120": 237, "5122": 237, "5124": 237, "5126": 237, "5128": 237, "5130": 237, "5132": 237, "5134": 237, "5136": 237, "5138": 237, "5140": 237, "5142": 237, "5144": 237, "5146": 237, "5148": 237, "5150": 237, "5152": 237, "5154": 237, "5156": 237, "5158": 237, "5160": 237, "5162": 237, "5164": 237, "5166": 237, "5168": 237, "5170": 237, "5172": 237, "5174": 237, "5176": 237, "5178": 237, "5180": 237, "5182": 237, "5184": 237, "5186": 237, "5188": 237, "5190": 237, "5192": 237, "5194": 237, "5196": 237, "5198": 237, "5200": 237, "5202": 237, "5204": 237, "5206": 237, "5208": 237, "5210": 237, "5212": 237, "5214": 237, "5216": 237, "5218": 237, "5220": 237, "5222": 237, "5224": 237, "5226": 237, "5228": 237, "5230": 237, "5232": 237, "5234": 237, "5236": 237, "5238": 237, "5240": 237, "5242": 237, "5244": 237, "5246": 237, "5248": 237, "5250": 237, "5252": 237, "5254": 237, "5256": 237, "5258": 237, "5260": 237, "5262": 237, "5264": 237, "5266": 237, "5268": 237, "5270": 237, "5272": 237, "5274": 237, "5276": 237, "5278": 237, "5280": 237, "5282": 237, "5284": 237, "5286": 237, "5288": 237, "5290": 237, "5292": 237, "5294": 237, "5296": 237, "5298": 237, "5300": 237, "5302": 237, "5304": 237, "5306": 237, "5308": 237, "5310": 237, "5312": 237, "5314": 237, "5316": 237, "5318": 237, "5320": 237, "5322": 237, "5324": 237, "5326": 237, "5328": 237, "5330": 237, "5332": 237, "5334": 237, "5336": 237, "5338": 237, "5340": 237, "5342": 237, "5344": 237, "5346": 237, "5348": 237, "5350": 237, "5352": 237, "5354": 237, "5356": 237, "5358": 237, "5360": 237, "5362": [237, 280, 466], "5364": 237, "5366": 237, "5368": 237, "5370": 237, "5372": 237, "5374": 237, "5376": 237, "5378": 237, "5380": 237, "5382": 237, "5384": 237, "5386": 237, "5388": 237, "5390": 237, "5392": 237, "5394": 237, "5396": 237, "5398": 237, "5400": 237, "5402": 237, "5404": 237, "5406": 237, "5408": 237, "5410": [237, 460], "5412": 237, "5414": 237, "5416": 237, "5418": 237, "5420": 237, "5422": 237, "5424": 237, "5426": 237, "5428": 237, "5430": 237, "5432": 237, "5434": 237, "5436": 237, "5438": 237, "5440": 237, "5442": 237, "5444": 237, "5446": 237, "5448": 237, "5450": 237, "5452": 237, "5454": 237, "5456": 237, "5458": 237, "5460": 237, "5462": 237, "5464": 237, "5466": 237, "5468": 237, "5470": 237, "5472": 237, "5474": 237, "5476": 237, "5478": 237, "5480": 237, "5482": 237, "5484": 237, "5486": 237, "5488": 237, "5490": 237, "5492": 237, "5494": 237, "5496": 237, "5498": 237, "5500": 237, "5502": 237, "5504": 237, "5506": 237, "5508": 237, "5510": 237, "5512": 237, "5514": 237, "5516": 237, "5518": 237, "5520": 237, "5522": 237, "5524": 237, "5526": 237, "5528": 237, "5530": 237, "5532": 237, "5534": 237, "5536": 237, "5538": 237, "5540": 237, "5542": 237, "5544": 237, "5546": 237, "5548": 237, "5550": 237, "5552": 237, "5554": 237, "5556": 237, "5558": 237, "5560": 237, "5562": 237, "5564": 237, "5566": 237, "5568": 237, "5570": 237, "5572": 237, "5574": 237, "5576": 237, "5578": 237, "5580": 237, "5582": 237, "5584": 237, "5586": 237, "5588": 237, "5590": 237, "5592": 237, "5594": 237, "5596": 237, "5598": 237, "5600": 237, "5602": 237, "5604": 237, "5606": 237, "5608": 237, "5610": 237, "5612": 237, "5614": 237, "5616": 237, "5618": 237, "5620": 237, "5622": 237, "5624": 237, "5626": 237, "5628": 237, "5630": 237, "5632": 237, "5634": 237, "5636": 237, "5638": 237, "5640": 237, "5642": 237, "5644": 237, "5646": 237, "5648": 237, "5650": 237, "5652": 237, "5654": 237, "5656": 237, "5658": 237, "5660": 237, "5662": 237, "5664": 237, "5666": 237, "5668": 237, "5670": 237, "5672": 237, "5674": 237, "5676": 237, "5678": [237, 940], "5680": 237, "5682": 237, "5684": 237, "5686": 237, "5688": 237, "5690": 237, "5692": 237, "5694": 237, "5696": 237, "5698": 237, "5700": 237, "5702": 237, "5704": 237, "5706": 237, "5708": 237, "5710": 237, "5712": 237, "5714": 237, "5716": 237, "5718": 237, "5720": 237, "5722": 237, "5724": 237, "5726": 237, "5728": 237, "5730": 237, "5732": 237, "5734": 237, "5736": 237, "5738": 237, "5740": 237, "5742": 237, "5744": 237, "5746": 237, "5748": 237, "5750": 237, "5752": 237, "5754": 237, "5756": 237, "5758": 237, "5760": 237, "5762": 237, "5764": 237, "5766": 237, "5768": 237, "5770": 237, "5772": 237, "5774": 237, "5776": 237, "5778": 237, "5780": 237, "5782": 237, "5784": 237, "5786": 237, "5788": 237, "5790": 237, "5792": 237, "5794": 237, "5796": 237, "5798": 237, "5800": 237, "5802": 237, "5804": 237, "5806": 237, "5808": 237, "5810": 237, "5812": 237, "5814": 237, "5816": 237, "5818": 237, "5820": 237, "5822": 237, "5824": 237, "5826": 237, "5828": 237, "5830": 237, "5832": [237, 247], "5834": 237, "5836": 237, "5838": 237, "5840": 237, "5842": 237, "5844": 237, "5846": 237, "5848": 237, "5850": 237, "5852": 237, "5854": 237, "5856": 237, "5858": 237, "5860": 237, "5862": 237, "5864": 237, "5866": 237, "5868": 237, "5870": 237, "5872": 237, "5874": 237, "5876": 237, "5878": 237, "5880": 237, "5882": 237, "5884": 237, "5886": 237, "5888": 237, "5890": 237, "5892": 237, "5894": 237, "5896": 237, "5898": 237, "5900": 237, "5902": 237, "5904": 237, "5906": 237, "5908": 237, "5910": 237, "5912": 237, "5914": 237, "5916": 237, "5918": 237, "5920": 237, "5922": 237, "5924": 237, "5926": 237, "5928": 237, "5930": 237, "5932": 237, "5934": 237, "5936": 237, "5938": 237, "5940": 237, "5942": 237, "5944": 237, "5946": 237, "5948": 237, "5950": 237, "5952": 237, "5954": 237, "5956": 237, "5958": 237, "5960": 237, "5962": 237, "5964": 237, "5966": 237, "5968": 237, "5970": 237, "5972": 237, "5974": 237, "5976": 237, "5978": 237, "5980": 237, "5982": 237, "5984": 237, "5986": 237, "5988": 237, "5990": 237, "5992": 237, "5994": 237, "5996": 237, "5998": 237, "6000": [237, 1039], "6002": 237, "6004": 237, "6006": 237, "6008": 237, "6010": 237, "6012": 237, "6014": 237, "6016": 237, "6018": 237, "6020": 237, "6022": 237, "6024": 237, "6026": 237, "6028": 237, "6030": 237, "6032": 237, "6034": 237, "6036": 237, "6038": 237, "6040": 237, "6042": 237, "6044": 237, "6046": 237, "6048": 237, "6050": 237, "6052": 237, "6054": 237, "6056": 237, "6058": 237, "6060": 237, "6062": 237, "6064": 237, "6066": 237, "6068": 237, "6070": 237, "6072": 237, "6074": 237, "6076": 237, "6078": 237, "6080": 237, "6082": 237, "6084": 237, "6086": 237, "6088": 237, "6090": 237, "6092": 237, "6094": 237, "6096": 237, "6098": 237, "6100": 237, "6102": 237, "6104": 237, "6106": 237, "6108": 237, "6110": 237, "6112": 237, "6114": 237, "6116": 237, "6118": 237, "6120": 237, "6122": 237, "6124": 237, "6126": 237, "6128": 237, "6130": 237, "6132": 237, "6134": 237, "6136": 237, "6138": 237, "6140": 237, "6142": 237, "6144": 237, "6146": 237, "6148": 237, "6150": 237, "6152": 237, "6154": 237, "6156": 237, "6158": 237, "6160": 237, "6162": 237, "6164": 237, "6166": 237, "6168": 237, "6170": 237, "6172": 237, "6174": 237, "6176": 237, "6178": 237, "6180": 237, "6182": 237, "6184": 237, "6186": 237, "6188": 237, "6190": 237, "6192": 237, "6194": 237, "6196": 237, "6198": 237, "6200": 237, "6202": 237, "6204": 237, "6206": 237, "6208": 237, "6210": 237, "6212": 237, "6214": 237, "6216": 237, "6218": 237, "6220": 237, "6222": 237, "6224": 237, "6226": 237, "6228": 237, "6230": 237, "6232": 237, "6234": 237, "6236": 237, "6238": 237, "6240": 237, "6242": 237, "6244": 237, "6246": 237, "6248": 237, "6250": 237, "6252": 237, "6254": 237, "6256": 237, "6258": 237, "6260": 237, "6262": 237, "6264": 237, "6266": 237, "6268": 237, "6270": 237, "6272": 237, "6274": 237, "6276": 237, "6278": 237, "6280": 237, "6282": 237, "6284": 237, "6286": 237, "6288": 237, "6290": 237, "6292": 237, "6294": 237, "6296": 237, "6298": 237, "6300": 237, "6302": 237, "6304": 237, "6306": 237, "6308": 237, "6310": 237, "6312": 237, "6314": 237, "6316": 237, "6318": 237, "6320": 237, "6322": 237, "6324": 237, "6326": 237, "6328": 237, "6330": 237, "6332": 237, "6334": 237, "6336": 237, "6338": 237, "6340": 237, "6342": 237, "6344": 237, "6346": 237, "6348": 237, "6350": 237, "6352": 237, "6354": 237, "6356": 237, "6358": 237, "6360": 237, "6362": 237, "6364": 237, "6366": 237, "6368": 237, "6370": 237, "6372": 237, "6374": 237, "6376": 237, "6378": 237, "6380": 237, "6382": 237, "6384": 237, "6386": 237, "6388": 237, "6390": 237, "6392": 237, "6394": 237, "6396": 237, "6398": 237, "6400": 237, "6402": 237, "6404": 237, "6406": 237, "6408": 237, "6410": 237, "6412": 237, "6414": 237, "6416": 237, "6418": 237, "6420": 237, "6422": 237, "6424": 237, "6426": 237, "6428": 237, "6430": 237, "6432": 237, "6434": 237, "6436": 237, "6438": 237, "6440": 237, "6442": 237, "6444": 237, "6446": 237, "6448": 237, "6450": 237, "6452": 237, "6454": 237, "6456": 237, "6458": 237, "6460": 237, "6462": 237, "6464": 237, "6466": 237, "6468": 237, "6470": 237, "6472": 237, "6474": 237, "6476": 237, "6478": 237, "6480": 237, "6482": 237, "6484": 237, "6486": 237, "6488": 237, "6490": 237, "6492": 237, "6494": 237, "6496": 237, "6498": 237, "6500": 237, "6502": 237, "6504": 237, "6506": 237, "6508": 237, "6510": 237, "6512": 237, "6514": 237, "6516": 237, "6518": 237, "6520": 237, "6522": 237, "6524": 237, "6526": 237, "6528": 237, "6530": 237, "6532": 237, "6534": 237, "6536": 237, "6538": 237, "6540": 237, "6542": 237, "6544": 237, "6546": 237, "6548": 237, "6550": 237, "6552": 237, "6554": 237, "6556": 237, "6558": 237, "6560": 237, "6562": 237, "6564": 237, "6566": 237, "6568": 237, "6570": 237, "6572": 237, "6574": 237, "6576": 237, "6578": 237, "6580": 237, "6582": 237, "6584": 237, "6586": 237, "6588": 237, "6590": 237, "6592": 237, "6594": 237, "6596": 237, "6598": 237, "6600": 237, "6602": 237, "6604": 237, "6606": 237, "6608": 237, "6610": 237, "6612": 237, "6614": 237, "6616": 237, "6618": 237, "6620": 237, "6622": 237, "6624": 237, "6626": 237, "6628": 237, "6630": 237, "6632": 237, "6634": 237, "6636": 237, "6638": 237, "6640": 237, "6642": 237, "6644": 237, "6646": 237, "6648": 237, "6650": 237, "6652": 237, "6654": 237, "6656": 237, "6658": 237, "6660": 237, "6662": 237, "6664": 237, "6666": 237, "6668": 237, "6670": 237, "6672": 237, "6674": 237, "6676": 237, "6678": 237, "6680": 237, "6682": 237, "6684": 237, "6686": 237, "6688": 237, "6690": 237, "6692": 237, "6694": 237, "6696": 237, "6698": 237, "6700": 237, "6702": 237, "6704": 237, "6706": 237, "6708": 237, "6710": 237, "6714": 237, "6716": [237, 260], "6718": 237, "6720": 237, "6722": 237, "6724": 237, "6726": 237, "6728": 237, "6730": 237, "6732": 237, "6734": 237, "6736": 237, "6738": 237, "6740": 237, "6742": 237, "6744": 237, "6746": 237, "6748": 237, "6750": 237, "6752": 237, "6754": 237, "6756": 237, "6758": 237, "6760": 237, "6762": 237, "6764": 237, "6766": 237, "6768": 237, "6770": 237, "6772": 237, "6774": 237, "6776": 237, "6778": 237, "6780": 237, "6782": 237, "6784": 237, "6786": 237, "6788": 237, "6790": 237, "6792": 237, "6794": 237, "6796": 237, "6798": 237, "6800": 237, "6802": 237, "6804": 237, "6806": 237, "6808": 237, "6810": 237, "6812": 237, "6814": 237, "6816": 237, "6818": 237, "6820": 237, "6822": 237, "6824": 237, "6826": 237, "6828": 237, "6830": 237, "6832": 237, "6834": 237, "6836": 237, "6838": 237, "6840": 237, "6842": 237, "6844": 237, "6846": 237, "6848": 237, "6850": 237, "6852": 237, "6854": 237, "6856": 237, "6858": [237, 286], "6860": 237, "6862": 237, "6864": 237, "6866": 237, "6868": 237, "6870": 237, "6872": 237, "6874": 237, "6876": 237, "6878": 237, "6880": 237, "6882": 237, "6884": 237, "6886": 237, "6888": 237, "6890": 237, "6892": 237, "6894": 237, "6896": 237, "6898": 237, "6900": 237, "6902": 237, "6904": 237, "6906": 237, "6908": 237, "6910": 237, "6912": 237, "6914": 237, "6916": 237, "6918": 237, "6920": 237, "6922": 237, "6924": 237, "6926": 237, "6928": 237, "6930": 237, "6932": 237, "6934": 237, "6936": 237, "6938": 237, "6940": 237, "6942": 237, "6944": 237, "6946": 237, "6948": 237, "6950": 237, "6952": 237, "6954": 237, "6956": 237, "6958": 237, "6960": 237, "6962": 237, "6964": 237, "6966": 237, "6968": 237, "6970": 237, "6972": 237, "6974": 237, "6976": 237, "6978": 237, "6980": 237, "6982": 237, "6984": 237, "6986": 237, "6988": 237, "6990": 237, "6992": 237, "6994": 237, "6996": 237, "6998": 237, "7000": 237, "7002": 237, "7004": 237, "7006": 237, "7008": 237, "7010": 237, "7012": 237, "7014": 237, "7016": 237, "7018": 237, "7020": 237, "7022": 237, "7024": 237, "7026": 237, "7028": 237, "7030": 237, "7032": 237, "7034": 237, "7036": 237, "7038": 237, "7040": 237, "7042": 237, "7044": 237, "7046": 237, "7048": 237, "7050": 237, "7052": 237, "7054": 237, "7056": 237, "7058": 237, "7060": 237, "7062": 237, "7064": 237, "7066": 237, "7068": 237, "7070": 237, "7072": 237, "7074": 237, "7076": 237, "7078": 237, "7080": [237, 1145], "7082": 237, "7084": 237, "7086": 237, "7088": [237, 1145], "7090": 237, "7092": 237, "7094": 237, "7096": 237, "7098": 237, "7100": 237, "7102": 237, "7104": 237, "7106": 237, "7108": 237, "7110": 237, "7112": 237, "7114": 237, "7116": 237, "7118": 237, "7120": 237, "7122": 237, "7124": 237, "7126": 237, "7128": 237, "7130": 237, "7132": 237, "7134": 237, "7136": 237, "7138": 237, "7140": 237, "7142": 237, "7144": 237, "7146": 237, "7148": 237, "7150": 237, "7152": 237, "7154": 237, "7156": 237, "7158": 237, "7160": 237, "7162": 237, "7164": 237, "7166": 237, "7168": 237, "7170": 237, "7172": 237, "7174": 237, "7176": 237, "7178": 237, "7180": 237, "7182": 237, "7184": 237, "7186": 237, "7188": 237, "7190": 237, "7192": 237, "7194": 237, "7196": 237, "7198": 237, "7200": 237, "7202": 237, "7204": 237, "7206": 237, "7208": 237, "7210": 237, "7212": 237, "7214": 237, "7216": 237, "7218": 237, "7220": 237, "7222": 237, "7224": 237, "7226": 237, "7228": 237, "7230": 237, "7232": 237, "7234": 237, "7236": 237, "7238": 237, "7240": 237, "7242": 237, "7244": 237, "7246": 237, "7248": 237, "7250": 237, "7252": 237, "7254": 237, "7256": 237, "7258": 237, "7260": 237, "7262": 237, "7264": 237, "7266": 237, "7268": 237, "7270": 237, "7272": 237, "7274": 237, "7276": 237, "7278": 237, "7280": 237, "7282": 237, "7284": 237, "7286": 237, "7288": 237, "7290": 237, "7292": 237, "7294": 237, "7296": 237, "7298": 237, "7300": 237, "7302": 237, "7304": 237, "7306": 237, "7308": 237, "7310": 237, "7312": 237, "7314": 237, "7316": 237, "7318": 237, "7320": 237, "7322": 237, "7324": 237, "7326": 237, "7328": 237, "7330": 237, "7332": 237, "7334": 237, "7336": 237, "7338": 237, "7340": 237, "7342": 237, "7344": 237, "7346": 237, "7348": 237, "7350": 237, "7352": 237, "7354": 237, "7356": 237, "7358": 237, "7360": 237, "7362": 237, "7364": 237, "7366": 237, "7368": 237, "7370": 237, "7372": 237, "7374": 237, "7376": 237, "7378": 237, "7380": 237, "7382": 237, "7384": 237, "7386": 237, "7388": 237, "7392": 237, "7394": 237, "7396": 237, "7398": 237, "7400": 237, "7402": 237, "7404": 237, "7406": 237, "7408": 237, "7410": 237, "7412": 237, "7414": 237, "7416": 237, "7418": 237, "7420": 237, "7422": 237, "7424": 237, "7426": 237, "7428": 237, "7430": 237, "7432": 237, "7434": 237, "7436": 237, "7438": 237, "7440": 237, "7442": 237, "7444": 237, "7446": 237, "7448": 237, "7450": 237, "7452": 237, "7454": 237, "7456": 237, "7458": 237, "7460": 237, "7462": 237, "7464": 237, "7466": 237, "7468": 237, "7470": 237, "7472": 237, "7474": 237, "7476": 237, "7478": 237, "7480": 237, "7482": 237, "7484": 237, "7486": 237, "7488": 237, "7490": 237, "7492": 237, "7494": 237, "7496": 237, "7498": 237, "7500": 237, "7502": 237, "7504": 237, "7506": 237, "7508": 237, "7510": 237, "7512": 237, "7514": 237, "7516": 237, "7518": 237, "7520": 237, "7522": 237, "7524": 237, "7526": 237, "7528": 237, "7530": 237, "7532": 237, "7534": 237, "7536": 237, "7538": 237, "7540": 237, "7542": 237, "7544": 237, "7546": 237, "7548": 237, "7550": 237, "7552": 237, "7554": 237, "7556": 237, "7558": 237, "7560": 237, "7562": 237, "7564": 237, "7566": 237, "7568": 237, "7570": 237, "7572": 237, "7574": 237, "7576": 237, "7578": 237, "7580": 237, "7582": 237, "7584": 237, "7586": 237, "7588": 237, "7590": 237, "7592": 237, "7594": 237, "7596": 237, "7598": 237, "7600": 237, "7602": 237, "7604": 237, "7606": 237, "7608": 237, "7610": 237, "7612": 237, "7614": 237, "7616": 237, "7618": 237, "7620": 237, "7622": 237, "7624": 237, "7626": 237, "7628": 237, "7630": 237, "7632": 237, "7634": 237, "7636": 237, "7638": 237, "7640": 237, "7642": 237, "7644": 237, "7646": 237, "7648": 237, "7650": 237, "7652": 237, "7654": 237, "7656": 237, "7658": 237, "7660": 237, "7662": 237, "7664": 237, "7666": 237, "7668": 237, "7670": 237, "7672": 237, "7674": 237, "7676": 237, "7678": 237, "7680": 237, "7682": 237, "7684": 237, "7686": 237, "7688": 237, "7690": 237, "7692": 237, "7694": 237, "7696": 237, "7698": 237, "7700": 237, "7702": 237, "7704": 237, "7706": 237, "7708": 237, "7710": 237, "7712": 237, "7714": 237, "7716": 237, "7718": 237, "7720": 237, "7722": 237, "7724": 237, "7726": 237, "7728": 237, "7730": 237, "7732": 237, "7734": 237, "7736": 237, "7738": 237, "7740": 237, "7742": 237, "7744": 237, "7746": 237, "7748": 237, "7750": 237, "7752": 237, "7754": 237, "7756": 237, "7758": 237, "7760": 237, "7762": 237, "7764": 237, "7766": 237, "7768": 237, "7770": 237, "7772": 237, "7774": 237, "7776": 237, "7778": 237, "7780": 237, "7782": 237, "7784": 237, "7786": 237, "7788": 237, "7790": 237, "7792": 237, "7794": 237, "7796": 237, "7798": 237, "7800": 237, "7802": 237, "7804": 237, "7806": 237, "7808": 237, "7810": 237, "7812": 237, "7814": 237, "7816": 237, "7818": 237, "7820": 237, "7822": 237, "7824": 237, "7826": 237, "7828": 237, "7830": 237, "7832": 237, "7834": 237, "7836": 237, "7838": 237, "7842": 237, "7844": 237, "7846": 237, "7848": 237, "7850": 237, "7852": 237, "7854": 237, "7856": 237, "7858": 237, "7860": 237, "7862": 237, "7864": 237, "7866": 237, "7868": 237, "7870": 237, "7872": 237, "7874": 237, "7878": 237, "7880": 237, "7882": 237, "7884": 237, "7886": 237, "7888": 237, "7890": 237, "7892": 237, "7894": 237, "7896": 237, "7898": 237, "7900": 237, "7902": 237, "7904": 237, "7906": 237, "7908": 237, "7910": 237, "7912": 237, "7914": 237, "7916": 237, "7918": 237, "7920": 237, "7922": 237, "7924": 237, "7926": 237, "7928": 237, "7930": 237, "7932": 237, "7934": 237, "7936": 237, "7938": 237, "7940": 237, "7942": 237, "7944": 237, "7946": 237, "7948": 237, "7950": 237, "7952": 237, "7954": 237, "7956": 237, "7958": 237, "7960": 237, "7962": 237, "7964": 237, "7966": 237, "7968": 237, "7970": 237, "7972": 237, "7974": 237, "7976": 237, "7978": 237, "7980": 237, "7982": 237, "7984": 237, "7986": 237, "7988": 237, "7990": 237, "7992": 237, "7994": 237, "7996": 237, "7998": 237, "8002": 237, "8004": 237, "8006": 237, "8008": 237, "8012": 237, "8014": 237, "8016": 237, "8018": 237, "8022": 237, "8024": 237, "8026": 237, "8028": 237, "8030": 237, "8032": 237, "8034": 237, "8036": 237, "8038": 237, "8040": 237, "8042": 237, "8044": 237, "8046": 237, "8048": 237, "8050": 237, "8052": 237, "8054": 237, "8056": 237, "8058": 237, "8060": 237, "8062": 237, "8064": 237, "8066": 237, "8068": 237, "8070": 237, "8072": 237, "8074": 237, "8076": 237, "8078": 237, "8080": 237, "8082": 237, "8084": 237, "8086": 237, "8088": 237, "8090": 237, "8092": 237, "8094": 237, "8096": 237, "8098": 237, "8100": 237, "8102": [237, 1000, 1001], "8104": 237, "8106": 237, "8108": 237, "8110": 237, "8112": 237, "8114": 237, "8116": 237, "8118": 237, "8120": 237, "8122": 237, "8124": 237, "8126": 237, "8128": 237, "8130": 237, "8132": 237, "8134": 237, "8136": 237, "8138": 237, "8140": 237, "8142": 237, "8144": 237, "8146": 237, "8148": 237, "8150": 237, "8152": 237, "8154": 237, "8156": 237, "8158": 237, "8160": 237, "8162": 237, "8164": 237, "8166": 237, "8168": 237, "8170": 237, "8172": 237, "8174": 237, "8176": 237, "8178": 237, "8180": 237, "8182": 237, "8184": 237, "8186": 237, "8188": 237, "8190": 237, "8194": 237, "8196": 237, "8198": 237, "8200": 237, "8202": 237, "8204": 237, "8206": 237, "8208": 237, "8210": 237, "8212": 237, "8214": 237, "8216": 237, "8218": 237, "8220": 237, "8222": 237, "8224": 237, "8226": 237, "8228": 237, "8230": 237, "8232": 237, "8234": 237, "8238": 237, "8240": 237, "8242": 237, "8244": 237, "8246": 237, "8248": 237, "8250": 237, "8252": 237, "8254": 237, "8256": 237, "8258": 237, "8260": [237, 825], "8262": 237, "8264": 237, "8266": 237, "8268": 237, "8270": 237, "8272": 237, "8274": 237, "8276": 237, "8278": 237, "8280": 237, "8282": 237, "8284": 237, "8286": 237, "8288": 237, "8290": 237, "8292": 237, "8294": 237, "8296": 237, "8298": 237, "8300": 237, "8302": 237, "8304": 237, "8306": 237, "8308": 237, "8310": 237, "8312": 237, "8314": 237, "8316": 237, "8318": 237, "8320": 237, "8322": 237, "8324": 237, "8326": 237, "8328": 237, "8330": 237, "8332": 237, "8334": 237, "8336": 237, "8338": 237, "8340": 237, "8342": 237, "8344": 237, "8346": 237, "8348": 237, "8350": 237, "8352": 237, "8354": 237, "8356": 237, "8358": 237, "8360": 237, "8362": 237, "8364": 237, "8366": 237, "8368": 237, "8370": 237, "8372": 237, "8374": 237, "8376": 237, "8378": 237, "8380": 237, "8382": 237, "8384": 237, "8386": 237, "8388": 237, "8390": 237, "8392": 237, "8394": 237, "8396": 237, "8398": 237, "8400": 237, "8402": 237, "8404": 237, "8406": 237, "8408": 237, "8410": 237, "8412": 237, "8414": 237, "8416": 237, "8418": 237, "8420": 237, "8422": 237, "8424": 237, "8426": 237, "8428": 237, "8430": 237, "8432": 237, "8434": 237, "8436": 237, "8438": 237, "8440": 237, "8442": 237, "8444": 237, "8446": 237, "8448": 237, "8450": 237, "8452": 237, "8454": 237, "8456": 237, "8458": 237, "8460": 237, "8464": 237, "8466": 237, "8468": 237, "8470": 237, "8472": 237, "8474": 237, "8476": 237, "8478": 237, "8480": 237, "8482": 237, "8484": 237, "8486": 237, "8488": 237, "8490": 237, "8492": 237, "8494": 237, "8496": 237, "8498": 237, "8500": 237, "8502": 237, "8504": 237, "8506": 237, "8508": 237, "8510": 237, "8512": 237, "8514": 237, "8516": 237, "8518": 237, "8520": 237, "8522": 237, "8524": 237, "8526": 237, "8528": 237, "8530": 237, "8532": 237, "8534": 237, "8536": 237, "8538": 237, "8540": 237, "8542": 237, "8544": 237, "8546": 237, "8548": 237, "8550": 237, "8552": 237, "8554": 237, "8556": 237, "8558": 237, "8560": 237, "8562": 237, "8564": 237, "8566": 237, "8568": 237, "8570": 237, "8572": 237, "8574": 237, "8576": 237, "8578": 237, "8580": 237, "8582": 237, "8584": 237, "8586": 237, "8588": 237, "8590": 237, "8592": 237, "8594": 237, "8596": 237, "8598": 237, "8600": 237, "8602": 237, "8604": 237, "8606": 237, "8608": 237, "8610": 237, "8612": 237, "8614": 237, "8616": 237, "8618": 237, "8620": 237, "8622": 237, "8624": 237, "8626": 237, "8628": 237, "8630": 237, "8632": 237, "8634": 237, "8636": 237, "8638": 237, "8640": 237, "8642": 237, "8644": 237, "8646": 237, "8648": 237, "8650": 237, "8652": 237, "8654": 237, "8656": 237, "8658": 237, "8660": 237, "8662": 237, "8664": 237, "8666": 237, "8668": 237, "8670": 237, "8672": 237, "8674": 237, "8676": 237, "8678": 237, "8680": 237, "8682": 237, "8684": 237, "8686": 237, "8688": 237, "8690": 237, "8692": 237, "8694": 237, "8696": 237, "8698": 237, "8700": 237, "8702": 237, "8704": 237, "8706": 237, "8708": 237, "8710": 237, "8712": 237, "8714": 237, "8716": 237, "8718": 237, "8720": 237, "8722": 237, "8724": 237, "8726": 237, "8728": 237, "8730": 237, "8732": 237, "8734": 237, "8736": 237, "8738": 237, "8740": 237, "8742": 237, "8744": 237, "8746": 237, "8748": 237, "8750": 237, "8752": 237, "8754": 237, "8756": 237, "8758": 237, "8760": 237, "8762": 237, "8764": 237, "8766": 237, "8768": 237, "8770": 237, "8772": 237, "8774": 237, "8776": 237, "8778": 237, "8780": 237, "8782": 237, "8784": 237, "8786": 237, "8788": 237, "8790": 237, "8792": 237, "8794": 237, "8796": 237, "8798": 237, "8800": 237, "8802": 237, "8804": 237, "8806": 237, "8808": 237, "8810": 237, "8812": 237, "8814": 237, "8816": 237, "8818": 237, "8820": 237, "8822": 237, "8824": 237, "8826": 237, "8828": 237, "8830": 237, "8832": 237, "8834": 237, "8836": 237, "8838": 237, "8840": 237, "8842": 237, "8844": 237, "8846": 237, "8848": 237, "8850": 237, "8852": 237, "8854": 237, "8856": 237, "8858": 237, "8860": 237, "8862": 237, "8864": 237, "8866": 237, "8868": 237, "8870": 237, "8872": 237, "8874": 237, "8876": 237, "8878": 237, "8880": 237, "8882": 237, "8884": 237, "8886": 237, "8888": 237, "8890": 237, "8892": 237, "8894": 237, "8896": 237, "8898": 237, "8900": 237, "8902": 237, "8904": 237, "8906": 237, "8908": 237, "8910": 237, "8912": 237, "8914": 237, "8916": 237, "8918": 237, "8920": 237, "8922": 237, "8924": 237, "8926": 237, "8928": 237, "8930": 237, "8932": 237, "8934": 237, "8936": 237, "8938": 237, "8940": 237, "8942": 237, "8944": 237, "8946": 237, "8948": 237, "8950": 237, "8952": 237, "8954": 237, "8956": 237, "8958": 237, "8960": 237, "8962": 237, "8964": 237, "8966": 237, "8968": 237, "8970": 237, "8972": 237, "8974": 237, "8976": 237, "8978": 237, "8980": 237, "8982": 237, "8984": 237, "8986": 237, "8988": 237, "8990": 237, "8992": 237, "8994": 237, "8996": 237, "8998": 237, "9002": 237, "9004": 237, "9006": 237, "9008": 237, "9010": 237, "9012": 237, "9014": 237, "9016": 237, "9018": 237, "9020": 237, "9022": 237, "9024": 237, "9026": 237, "9028": 237, "9030": 237, "9032": 237, "9034": 237, "9036": 237, "9038": 237, "9040": 237, "9042": 237, "9044": 237, "9046": 237, "9048": 237, "9050": 237, "9052": 237, "9054": 237, "9056": 237, "9058": 237, "9060": 237, "9062": 237, "9064": 237, "9066": 237, "9068": 237, "9070": 237, "9072": 237, "9074": 237, "9076": 237, "9078": 237, "9080": 237, "9082": 237, "9084": 237, "9086": 237, "9088": 237, "9090": 237, "9092": 237, "9094": 237, "9096": 237, "9098": 237, "9100": 237, "9102": 237, "9104": 237, "9106": 237, "9108": 237, "9110": 237, "9112": 237, "9114": 237, "9116": 237, "9118": 237, "9120": 237, "9122": 237, "9124": 237, "9126": 237, "9128": 237, "9130": 237, "9132": 237, "9134": 237, "9136": 237, "9138": 237, "9140": 237, "9142": 237, "9144": 237, "9146": 237, "9148": 237, "9150": 237, "9152": 237, "9154": 237, "9156": 237, "9158": 237, "9160": 237, "9162": 237, "9164": 237, "9166": 237, "9168": 237, "9170": 237, "9172": 237, "9174": 237, "9176": 237, "9178": 237, "9180": 237, "9182": 237, "9184": 237, "9186": 237, "9188": 237, "9190": 237, "9192": 237, "9194": 237, "9196": 237, "9198": 237, "9200": 237, "9202": 237, "9204": 237, "9206": 237, "9208": 237, "9210": 237, "9212": 237, "9214": 237, "9216": 237, "9218": 237, "9220": 237, "9222": 237, "9224": 237, "9226": 237, "9228": 237, "9230": 237, "9232": 237, "9234": 237, "9236": 237, "9238": 237, "9240": 237, "9242": 237, "9244": 237, "9246": 237, "9248": 237, "9250": 237, "9252": 237, "9254": 237, "9256": 237, "9258": 237, "9260": 237, "9262": 237, "9264": 237, "9266": 237, "9268": 237, "9270": 237, "9272": 237, "9274": 237, "9276": 237, "9278": 237, "9280": 237, "9282": 237, "9284": 237, "9286": 237, "9288": 237, "9290": 237, "9292": 237, "9294": 237, "9296": 237, "9298": 237, "9300": 237, "9302": 237, "9304": 237, "9306": 237, "9308": 237, "9310": 237, "9312": 237, "9314": 237, "9316": 237, "9318": 237, "9320": 237, "9322": 237, "9324": 237, "9326": 237, "9328": 237, "9330": 237, "9332": 237, "9334": 237, "9336": 237, "9338": 237, "9340": 237, "9342": 237, "9344": 237, "9346": 237, "9348": 237, "9350": 237, "9352": 237, "9354": 237, "9356": 237, "9358": 237, "9360": 237, "9362": 237, "9364": 237, "9366": 237, "9368": 237, "9370": 237, "9372": 237, "9374": 237, "9376": 237, "9378": 237, "9380": 237, "9382": 237, "9384": 237, "9386": 237, "9388": 237, "9390": 237, "9392": 237, "9394": [237, 885], "9396": 237, "9398": 237, "9400": 237, "9402": 237, "9404": 237, "9406": 237, "9408": 237, "9410": 237, "9412": 237, "9414": 237, "9416": 237, "9418": 237, "9420": 237, "9422": 237, "9424": 237, "9426": 237, "9428": 237, "9430": 237, "9432": 237, "9434": 237, "9436": 237, "9438": 237, "9440": 237, "9442": 237, "9444": 237, "9446": 237, "9448": 237, "9450": 237, "9452": 237, "9454": 237, "9456": 237, "9458": 237, "9460": 237, "9462": 237, "9464": 237, "9466": 237, "9468": 237, "9470": 237, "9472": 237, "9474": 237, "9476": 237, "9478": 237, "9480": 237, "9482": 237, "9484": 237, "9486": 237, "9488": 237, "9490": 237, "9492": 237, "9494": 237, "9496": 237, "9498": 237, "9500": 237, "9502": 237, "9504": 237, "9506": 237, "9508": 237, "9510": 237, "9512": 237, "9514": 237, "9516": 237, "9518": 237, "9520": 237, "9522": 237, "9524": 237, "9526": 237, "9528": 237, "9530": 237, "9532": 237, "9534": 237, "9536": 237, "9538": 237, "9540": 237, "9542": 237, "9544": 237, "9546": 237, "9548": 237, "9550": 237, "9552": 237, "9554": 237, "9556": 237, "9558": 237, "9560": 237, "9562": 237, "9564": 237, "9566": 237, "9568": 237, "9570": 237, "9572": 237, "9574": 237, "9576": 237, "9578": 237, "9580": 237, "9582": 237, "9584": 237, "9586": 237, "9588": 237, "9590": 237, "9592": 237, "9594": 237, "9596": 237, "9598": 237, "9600": 237, "9602": 237, "9604": 237, "9606": 237, "9608": 237, "9610": 237, "9612": 237, "9614": 237, "9616": 237, "9618": 237, "9620": [237, 1023], "9622": 237, "9624": 237, "9626": 237, "9628": 237, "9630": 237, "9632": 237, "9634": 237, "9636": 237, "9638": 237, "9640": 237, "9642": 237, "9644": 237, "9646": 237, "9648": 237, "9650": 237, "9652": 237, "9654": 237, "9656": 237, "9658": 237, "9660": 237, "9662": 237, "9664": 237, "9666": 237, "9668": 237, "9670": 237, "9672": 237, "9674": 237, "9676": 237, "9678": 237, "9680": 237, "9682": 237, "9684": 237, "9686": 237, "9688": 237, "9690": 237, "9692": 237, "9694": 237, "9696": 237, "9698": 237, "9700": 237, "9702": 237, "9704": 237, "9706": 237, "9708": 237, "9710": 237, "9712": 237, "9714": 237, "9716": 237, "9718": 237, "9720": 237, "9722": 237, "9724": 237, "9726": 237, "9728": 237, "9730": 237, "9732": 237, "9734": 237, "9736": 237, "9738": 237, "9740": 237, "9742": 237, "9744": 237, "9746": 237, "9748": 237, "9750": 237, "9752": 237, "9754": 237, "9756": 237, "9758": 237, "9760": 237, "9762": 237, "9764": 237, "9766": 237, "9768": [237, 247], "9770": 237, "9772": 237, "9774": 237, "9776": 237, "9778": 237, "9780": 237, "9782": 237, "9784": 237, "9786": 237, "9788": 237, "9790": 237, "9792": 237, "9794": 237, "9796": 237, "9798": 237, "9800": 237, "9802": 237, "9804": 237, "9806": 237, "9808": 237, "9810": 237, "9812": 237, "9814": 237, "9816": 237, "9818": 237, "9820": 237, "9822": 237, "9824": 237, "9826": 237, "9828": 237, "9830": 237, "9832": 237, "9834": 237, "9836": 237, "9838": 237, "9840": 237, "9842": 237, "9844": 237, "9846": 237, "9848": 237, "9850": 237, "9852": 237, "9854": 237, "9856": 237, "9858": 237, "9860": 237, "9862": 237, "9864": 237, "9866": 237, "9868": 237, "9870": 237, "9872": 237, "9874": 237, "9876": 237, "9878": 237, "9880": 237, "9882": 237, "9884": 237, "9886": 237, "9888": 237, "9890": 237, "9892": 237, "9894": 237, "9896": 237, "9898": 237, "9900": 237, "9902": 237, "9904": 237, "9906": 237, "9908": 237, "9910": 237, "9912": 237, "9914": 237, "9916": 237, "9918": 237, "9920": 237, "9922": 237, "9924": 237, "9926": 237, "9928": 237, "9930": 237, "9932": 237, "9934": 237, "9936": 237, "9938": 237, "9940": 237, "9942": 237, "9944": 237, "9946": 237, "9948": 237, "9950": 237, "9952": 237, "9954": 237, "9956": 237, "9958": 237, "9960": 237, "9962": 237, "9964": 237, "9966": 237, "9968": 237, "9970": 237, "9972": 237, "9974": 237, "9976": 237, "9978": 237, "9980": 237, "9982": 237, "9984": 237, "9986": 237, "9988": 237, "9990": 237, "9992": 237, "9994": 237, "9996": 237, "9998": 237, "10002": 237, "10004": 237, "10006": 237, "10008": 237, "10010": 237, "10012": 237, "10014": 237, "10016": 237, "10018": 237, "10020": 237, "10022": 237, "10024": 237, "10026": 237, "10028": 237, "10030": 237, "10032": 237, "10034": 237, "10036": 237, "10038": 237, "10040": 237, "10042": 237, "10044": 237, "10046": 237, "10048": 237, "10050": 237, "10052": 237, "10054": 237, "10056": 237, "10058": 237, "10060": 237, "10062": 237, "10064": 237, "10066": 237, "10068": 237, "10070": 237, "10072": 237, "10074": 237, "10076": 237, "10078": 237, "10080": 237, "10082": 237, "10084": 237, "10086": 237, "10088": 237, "10090": 237, "10092": 237, "10094": 237, "10096": 237, "10098": 237, "10100": 237, "10102": 237, "10104": 237, "10106": 237, "10108": 237, "10110": 237, "10112": 237, "10114": 237, "10116": 237, "10118": 237, "10120": 237, "10122": 237, "10124": 237, "10126": 237, "10128": 237, "10130": 237, "10132": 237, "10134": 237, "10136": 237, "10138": 237, "10140": 237, "10142": 237, "10144": 237, "10146": 237, "10148": 237, "10150": 237, "10152": 237, "10154": 237, "10156": 237, "10158": 237, "10160": 237, "10162": 237, "10164": 237, "10166": 237, "10168": 237, "10170": 237, "10172": 237, "10174": 237, "10176": 237, "10178": 237, "10180": 237, "10182": 237, "10184": 237, "10186": 237, "10188": 237, "10190": 237, "10192": 237, "10194": 237, "10196": 237, "10198": 237, "10200": 237, "10202": 237, "10204": 237, "10206": 237, "10208": 237, "10210": 237, "10212": 237, "10214": 237, "10216": 237, "10218": 237, "10220": 237, "10222": 237, "10224": 237, "10226": [237, 286], "10228": 237, "10230": 237, "10232": 237, "10234": 237, "10236": 237, "10238": 237, "10240": 237, "10242": 237, "10244": 237, "10246": 237, "10248": 237, "10250": 237, "10252": 237, "10254": 237, "10256": 237, "10258": 237, "10260": 237, "10262": 237, "10264": 237, "10266": 237, "10268": 237, "10270": 237, "10272": 237, "10274": 237, "10276": 237, "10278": 237, "10280": 237, "10282": 237, "10284": 237, "10286": 237, "10288": 237, "10290": 237, "10292": 237, "10294": 237, "10296": 237, "10298": 237, "10300": 237, "10302": 237, "10304": 237, "10306": 237, "10308": 237, "10310": 237, "10312": 237, "10314": 237, "10316": 237, "10318": 237, "10320": 237, "10322": 237, "10324": 237, "10326": 237, "10328": 237, "10330": 237, "10332": 237, "10334": 237, "10336": 237, "10338": 237, "10340": 237, "10342": 237, "10344": 237, "10346": 237, "10348": 237, "10350": 237, "10352": 237, "10354": 237, "10356": 237, "10358": 237, "10360": 237, "10362": 237, "10364": 237, "10366": 237, "10368": 237, "10370": 237, "10372": 237, "10374": 237, "10376": 237, "10378": 237, "10380": 237, "10382": 237, "10384": 237, "10386": 237, "10388": 237, "10390": 237, "10392": 237, "10394": 237, "10396": 237, "10398": 237, "10400": 237, "10402": 237, "10404": 237, "10406": 237, "10408": 237, "10410": 237, "10412": 237, "10414": 237, "10416": 237, "10418": 237, "10420": 237, "10422": 237, "10424": 237, "10426": 237, "10428": 237, "10430": 237, "10432": 237, "10434": 237, "10436": 237, "10438": 237, "10440": 237, "10442": 237, "10444": 237, "10446": 237, "10448": 237, "10450": 237, "10452": 237, "10454": 237, "10456": 237, "10458": 237, "10460": 237, "10462": 237, "10464": 237, "10466": 237, "10468": 237, "10470": 237, "10472": 237, "10474": 237, "10476": 237, "10478": 237, "10480": 237, "10482": 237, "10484": 237, "10486": 237, "10488": 237, "10490": 237, "10492": 237, "10494": 237, "10496": 237, "10498": 237, "10500": 237, "10502": 237, "10504": 237, "10506": 237, "10508": 237, "10510": 237, "10512": 237, "10514": 237, "10516": 237, "10518": 237, "10520": 237, "10522": 237, "10524": 237, "10526": 237, "10528": 237, "10530": 237, "10532": 237, "10534": 237, "10536": 237, "10538": 237, "10540": 237, "10542": 237, "10544": 237, "10546": 237, "10548": 237, "10550": 237, "10552": [237, 1011], "10554": 237, "10556": 237, "10558": 237, "10560": 237, "10562": 237, "10564": 237, "10566": 237, "10568": 237, "10570": 237, "10572": 237, "10574": 237, "10576": 237, "10578": 237, "10580": 237, "10582": 237, "10584": 237, "10586": 237, "10588": 237, "10590": 237, "10592": 237, "10594": 237, "10596": 237, "10598": 237, "10600": 237, "10602": 237, "10604": 237, "10606": 237, "10608": 237, "10610": 237, "10612": 237, "10614": 237, "10616": 237, "10618": 237, "10620": 237, "10622": 237, "10624": 237, "10626": 237, "10628": 237, "10630": 237, "10632": 237, "10634": 237, "10636": 237, "10638": 237, "10640": 237, "10642": 237, "10644": 237, "10646": 237, "10648": 237, "10650": 237, "10652": 237, "10654": 237, "10656": 237, "10658": 237, "10660": 237, "10662": 237, "10664": 237, "10666": 237, "10668": 237, "10670": 237, "10672": 237, "10674": 237, "10676": 237, "10678": 237, "10680": 237, "10682": 237, "10684": 237, "10686": 237, "10688": 237, "10690": 237, "10692": 237, "10694": 237, "10696": 237, "10698": 237, "10700": 237, "10702": 237, "10704": 237, "10706": 237, "10708": 237, "10710": 237, "10712": 237, "10714": 237, "10716": 237, "10718": 237, "10720": 237, "10722": 237, "10724": 237, "10726": 237, "10728": 237, "10730": 237, "10732": 237, "10734": 237, "10736": 237, "10738": 237, "10740": 237, "10742": 237, "10744": 237, "10746": 237, "10748": 237, "10750": 237, "10752": 237, "10754": 237, "10756": 237, "10758": 237, "10760": 237, "10762": 237, "10764": 237, "10766": 237, "10768": 237, "10770": 237, "10772": 237, "10774": 237, "10776": 237, "10778": 237, "10780": 237, "10782": 237, "10784": 237, "10786": 237, "10788": 237, "10790": 237, "10792": 237, "10794": 237, "10796": 237, "10798": 237, "10800": 237, "10802": 237, "10804": 237, "10806": 237, "10808": 237, "10810": 237, "10812": 237, "10814": 237, "10816": 237, "10818": 237, "10820": 237, "10822": 237, "10824": 237, "10826": 237, "10828": 237, "10830": 237, "10832": 237, "10834": 237, "10836": 237, "10838": 237, "10840": 237, "10842": 237, "10844": 237, "10846": 237, "10848": 237, "10850": 237, "10852": 237, "10854": 237, "10856": 237, "10858": 237, "10860": 237, "10862": 237, "10864": 237, "10866": 237, "10868": 237, "10870": 237, "10872": 237, "10874": 237, "10876": 237, "10878": 237, "10880": 237, "10882": 237, "10884": 237, "10886": 237, "10888": 237, "10890": 237, "10892": 237, "10894": 237, "10896": 237, "10898": 237, "10900": 237, "10902": 237, "10904": 237, "10906": 237, "10908": 237, "10910": 237, "10912": 237, "10914": 237, "10916": 237, "10918": 237, "10920": 237, "10922": 237, "10924": 237, "10926": 237, "10928": 237, "10930": 237, "10932": 237, "10934": 237, "10936": 237, "10938": 237, "10940": 237, "10942": 237, "10944": 237, "10946": 237, "10948": 237, "10950": 237, "10952": 237, "10954": 237, "10956": 237, "10958": 237, "10960": 237, "10962": 237, "10964": 237, "10966": 237, "10968": 237, "10970": 237, "10972": 237, "10974": 237, "10976": 237, "10978": 237, "10980": 237, "10982": 237, "10984": 237, "10986": 237, "10988": 237, "10990": 237, "10992": 237, "10994": 237, "10996": 237, "10998": 237, "11000": 237, "11002": 237, "11004": 237, "11006": 237, "11008": 237, "11010": 237, "11012": 237, "11014": 237, "11016": 237, "11018": 237, "11020": 237, "11022": 237, "11024": 237, "11026": 237, "11028": 237, "11030": 237, "11032": 237, "11034": 237, "11036": 237, "11038": 237, "11040": 237, "11042": 237, "11044": 237, "11046": 237, "11048": 237, "11050": 237, "11052": 237, "11054": 237, "11056": 237, "11058": 237, "11060": 237, "11062": 237, "11064": 237, "11066": 237, "11068": 237, "11070": 237, "11072": 237, "11074": 237, "11076": 237, "11078": 237, "11080": 237, "11082": 237, "11084": 237, "11086": 237, "11088": 237, "11090": 237, "11092": 237, "11094": 237, "11096": 237, "11098": 237, "11100": 237, "11102": 237, "11104": 237, "11106": 237, "11108": 237, "11110": 237, "11112": 237, "11114": 237, "11116": 237, "11118": 237, "11120": 237, "11122": 237, "11124": 237, "11126": 237, "11128": 237, "11130": 237, "11132": 237, "11134": 237, "11136": 237, "11138": 237, "11140": 237, "11142": 237, "11144": 237, "11146": 237, "11148": 237, "11150": 237, "11152": 237, "11154": 237, "11156": 237, "11158": 237, "11160": 237, "11162": 237, "11164": 237, "11166": 237, "11168": 237, "11170": 237, "11172": 237, "11174": 237, "11176": 237, "11178": 237, "11180": 237, "11182": 237, "11184": 237, "11186": 237, "11188": 237, "11190": 237, "11192": 237, "11194": 237, "11196": 237, "11198": 237, "11200": 237, "11202": 237, "11204": 237, "11206": 237, "11208": 237, "11210": 237, "11212": 237, "11214": 237, "11216": 237, "11218": 237, "11220": 237, "11222": 237, "11224": 237, "11226": 237, "11228": 237, "11230": 237, "11232": 237, "11234": 237, "11236": 237, "11238": 237, "11240": 237, "11242": 237, "11244": 237, "11246": 237, "11248": 237, "11250": 237, "11252": 237, "11254": 237, "11256": 237, "11258": 237, "11260": 237, "11262": 237, "11264": 237, "11266": 237, "11268": 237, "11270": 237, "11272": 237, "11274": 237, "11276": 237, "11278": 237, "11280": 237, "11282": 237, "11284": 237, "11286": 237, "11288": 237, "11290": 237, "11292": 237, "11294": 237, "11296": 237, "11298": 237, "11300": 237, "11302": 237, "11304": 237, "11306": 237, "11308": 237, "11310": 237, "11312": 237, "11314": 237, "11316": 237, "11318": 237, "11320": 237, "11322": 237, "11324": 237, "11326": 237, "11328": 237, "11330": 237, "11332": 237, "11334": 237, "11336": 237, "11340": 237, "11342": 237, "11344": 237, "11346": 237, "11348": [237, 286], "11350": 237, "11352": 237, "11354": 237, "11356": 237, "11358": 237, "11360": 237, "11362": 237, "11364": 237, "11366": 237, "11368": 237, "11370": 237, "11372": 237, "11374": 237, "11376": 237, "11378": 237, "11380": 237, "11382": 237, "11384": 237, "11386": 237, "11388": 237, "11390": 237, "11392": 237, "11394": 237, "11396": 237, "11398": 237, "11400": 237, "11402": 237, "11404": 237, "11406": 237, "11408": 237, "11410": 237, "11412": 237, "11414": 237, "11416": 237, "11418": 237, "11420": 237, "11422": 237, "11424": 237, "11426": 237, "11428": 237, "11430": 237, "11432": 237, "11434": 237, "11436": 237, "11438": 237, "11440": 237, "11442": 237, "11444": 237, "11446": 237, "11448": 237, "11450": 237, "11452": 237, "11454": 237, "11456": 237, "11458": 237, "11460": 237, "11462": 237, "11464": 237, "11466": 237, "11468": 237, "11470": 237, "11472": 237, "11474": 237, "11476": 237, "11478": 237, "11480": 237, "11482": 237, "11484": 237, "11486": 237, "11488": 237, "11490": 237, "11492": 237, "11494": 237, "11496": 237, "11498": 237, "11500": 237, "11502": 237, "11504": 237, "11506": 237, "11508": 237, "11510": 237, "11512": 237, "11514": 237, "11516": 237, "11518": 237, "11520": 237, "11522": 237, "11524": 237, "11526": 237, "11528": 237, "11530": 237, "11532": 237, "11534": 237, "11536": 237, "11538": 237, "11540": 237, "11542": 237, "11544": 237, "11546": 237, "11548": 237, "11550": 237, "11552": 237, "11554": 237, "11556": 237, "11558": 237, "11560": 237, "11562": 237, "11564": 237, "11566": 237, "11568": 237, "11570": 237, "11572": 237, "11574": 237, "11576": 237, "11578": 237, "11580": 237, "11582": 237, "11584": 237, "11586": 237, "11588": 237, "11590": 237, "11592": 237, "11594": 237, "11596": 237, "11598": 237, "11600": 237, "11602": 237, "11604": 237, "11606": 237, "11608": 237, "11610": 237, "11612": 237, "11614": 237, "11616": 237, "11618": 237, "11620": 237, "11622": 237, "11624": 237, "11626": 237, "11628": 237, "11630": 237, "11634": 237, "11636": 237, "11638": 237, "11640": 237, "11642": 237, "11644": 237, "11646": 237, "11648": 237, "11650": 237, "11652": 237, "11654": 237, "11656": 237, "11658": 237, "11660": 237, "11662": 237, "11664": 237, "11666": 237, "11668": 237, "11670": 237, "11672": 237, "11674": 237, "11676": 237, "11678": 237, "11680": 237, "11682": 237, "11684": 237, "11686": 237, "11688": 237, "11690": 237, "11692": 237, "11694": 237, "11696": 237, "11698": 237, "11700": 237, "11702": 237, "11704": 237, "11706": 237, "11708": 237, "11710": 237, "11712": 237, "11714": 237, "11716": 237, "11718": 237, "11720": 237, "11722": 237, "11724": 237, "11726": 237, "11728": 237, "11730": 237, "11732": 237, "11734": 237, "11736": 237, "11738": 237, "11740": 237, "11742": 237, "11744": 237, "11746": 237, "11748": 237, "11750": 237, "11752": 237, "11754": 237, "11756": 237, "11758": 237, "11760": 237, "11762": 237, "11764": 237, "11766": 237, "11768": 237, "11770": 237, "11772": 237, "11774": 237, "11776": 237, "11778": 237, "11780": 237, "11782": 237, "11784": 237, "11786": 237, "11788": 237, "11790": 237, "11792": 237, "11794": 237, "11796": 237, "11798": 237, "11800": 237, "11802": 237, "11804": 237, "11806": 237, "11808": 237, "11810": 237, "11812": 237, "11814": 237, "11816": 237, "11818": 237, "11820": 237, "11822": 237, "11824": 237, "11826": 237, "11828": 237, "11830": 237, "11832": 237, "11834": 237, "11836": 237, "11838": 237, "11840": 237, "11842": 237, "11844": 237, "11846": 237, "11848": 237, "11850": 237, "11852": 237, "11854": 237, "11856": 237, "11858": 237, "11860": 237, "11862": 237, "11864": 237, "11866": 237, "11868": 237, "11870": 237, "11872": 237, "11874": 237, "11876": 237, "11878": 237, "11880": 237, "11882": 237, "11884": 237, "11886": 237, "11888": 237, "11890": 237, "11892": 237, "11894": 237, "11896": 237, "11898": 237, "11900": 237, "11902": 237, "11904": 237, "11906": 237, "11908": 237, "11910": 237, "11912": 237, "11914": 237, "11916": 237, "11918": 237, "11920": 237, "11922": 237, "11924": 237, "11926": 237, "11928": 237, "11930": 237, "11932": 237, "11934": 237, "11936": 237, "11938": 237, "11940": 237, "11942": 237, "11944": 237, "11946": 237, "11948": 237, "11950": 237, "11952": 237, "11954": 237, "11956": 237, "11958": 237, "11960": 237, "11962": 237, "11964": 237, "11966": 237, "11968": 237, "11970": 237, "11972": 237, "11974": 237, "11976": 237, "11978": 237, "11980": 237, "11982": 237, "11984": 237, "11986": 237, "11988": 237, "11990": 237, "11992": 237, "11994": 237, "11996": 237, "11998": 237, "12000": 237, "12002": 237, "12004": 237, "12006": 237, "12008": 237, "12010": 237, "12012": 237, "12014": 237, "12016": 237, "12018": 237, "12020": 237, "12022": 237, "12024": 237, "12026": 237, "12028": 237, "12030": 237, "12032": 237, "12034": 237, "12036": 237, "12038": 237, "12040": 237, "12042": 237, "12044": 237, "12046": 237, "12048": 237, "12050": 237, "12052": 237, "12054": 237, "12056": 237, "12058": 237, "12060": 237, "12062": 237, "12064": 237, "12066": 237, "12068": 237, "12070": 237, "12072": 237, "12074": 237, "12076": 237, "12078": 237, "12080": 237, "12082": 237, "12084": 237, "12086": 237, "12088": 237, "12090": 237, "12092": 237, "12094": 237, "12096": 237, "12098": 237, "12100": 237, "12102": 237, "12104": 237, "12106": 237, "12108": 237, "12110": 237, "12112": 237, "12114": 237, "12116": 237, "12118": 237, "12120": 237, "12122": 237, "12124": 237, "12126": 237, "12128": 237, "12130": 237, "12132": 237, "12134": 237, "12136": 237, "12138": 237, "12140": 237, "12142": 237, "12144": 237, "12146": 237, "12148": 237, "12150": 237, "12152": 237, "12154": 237, "12158": 237, "12160": 237, "12162": 237, "12164": 237, "12166": 237, "12168": 237, "12170": 237, "12172": 237, "12174": 237, "12176": 237, "12178": 237, "12180": 237, "12182": 237, "12184": 237, "12186": 237, "12188": 237, "12190": 237, "12192": 237, "12194": 237, "12196": 237, "12198": 237, "12200": 237, "12202": 237, "12204": 237, "12206": 237, "12208": 237, "12210": 237, "12212": 237, "12214": 237, "12216": 237, "12218": 237, "12220": 237, "12222": 237, "12224": 237, "12226": 237, "12228": 237, "12230": 237, "12232": 237, "12234": 237, "12236": 237, "12238": 237, "12240": 237, "12242": 237, "12244": 237, "12246": 237, "12248": 237, "12250": 237, "12252": 237, "12254": 237, "12256": 237, "12258": 237, "12260": 237, "12262": 237, "12264": 237, "12266": 237, "12268": 237, "12270": 237, "12272": 237, "12274": 237, "12276": 237, "12278": 237, "12280": 237, "12282": 237, "12284": 237, "12286": 237, "12288": 237, "12290": 237, "12292": 237, "12294": 237, "12296": 237, "12298": 237, "12300": 237, "12302": 237, "12304": 237, "12306": 237, "12308": 237, "12310": 237, "12312": 237, "12314": 237, "12316": 237, "12318": 237, "12320": 237, "12322": 237, "12324": 237, "12326": 237, "12328": 237, "12330": 237, "12332": 237, "12334": 237, "12336": 237, "12338": 237, "12340": 237, "12342": 237, "12344": 237, "12346": 237, "12348": 237, "12350": 237, "12352": 237, "12354": 237, "12356": 237, "12358": 237, "12360": 237, "12362": 237, "12364": 237, "12366": 237, "12368": 237, "12370": 237, "12372": 237, "12374": 237, "12376": 237, "12378": 237, "12380": 237, "12382": 237, "12384": 237, "12386": 237, "12388": 237, "12390": 237, "12392": 237, "12394": 237, "12396": 237, "12398": 237, "12400": 237, "12402": 237, "12404": 237, "12406": 237, "12408": 237, "12410": 237, "12412": 237, "12414": 237, "12416": 237, "12418": 237, "12420": 237, "12422": 237, "12424": 237, "12426": 237, "12428": 237, "12430": 237, "12432": 237, "12434": 237, "12436": 237, "12438": 237, "12440": 237, "12442": 237, "12444": 237, "12446": 237, "12448": 237, "12450": 237, "12452": 237, "12454": 237, "12456": 237, "12458": 237, "12460": 237, "12462": 237, "12464": 237, "12466": 237, "12468": 237, "12470": 237, "12472": 237, "12474": 237, "12476": 237, "12478": 237, "12480": 237, "12482": 237, "12484": 237, "12486": 237, "12488": 237, "12490": 237, "12492": 237, "12494": 237, "12496": 237, "12498": 237, "12500": 237, "12502": 237, "12504": 237, "12506": 237, "12508": 237, "12510": 237, "12512": 237, "12514": 237, "12516": 237, "12518": 237, "12520": 237, "12522": 237, "12524": 237, "12526": 237, "12528": 237, "12530": 237, "12532": 237, "12534": 237, "12536": 237, "12538": 237, "12540": 237, "12542": 237, "12544": 237, "12546": 237, "12548": 237, "12550": 237, "12552": 237, "12554": 237, "12556": 237, "12558": 237, "12560": 237, "12562": 237, "12564": 237, "12566": 237, "12568": 237, "12570": 237, "12572": 237, "12574": 237, "12576": 237, "12578": 237, "12580": 237, "12582": 237, "12584": 237, "12586": 237, "12588": 237, "12590": 237, "12592": 237, "12594": 237, "12596": 237, "12598": 237, "12600": 237, "12602": 237, "12604": 237, "12606": 237, "12608": 237, "12610": 237, "12612": 237, "12614": 237, "12616": 237, "12618": 237, "12620": 237, "12622": 237, "12624": 237, "12626": 237, "12628": 237, "12630": 237, "12632": 237, "12634": 237, "12636": 237, "12638": 237, "12640": 237, "12642": 237, "12644": 237, "12646": 237, "12648": 237, "12650": 237, "12652": 237, "12654": 237, "12656": 237, "12658": 237, "12660": 237, "12662": 237, "12664": 237, "12666": 237, "12668": 237, "12670": 237, "12672": 237, "12674": 237, "12676": 237, "12678": 237, "12680": 237, "12682": 237, "12684": 237, "12686": 237, "12688": 237, "12690": 237, "12692": 237, "12694": 237, "12696": 237, "12698": 237, "12700": 237, "12702": 237, "12704": 237, "12706": 237, "12708": 237, "12710": 237, "12712": 237, "12714": 237, "12716": 237, "12718": 237, "12720": 237, "12722": 237, "12724": 237, "12726": 237, "12728": 237, "12730": 237, "12732": 237, "12734": 237, "12736": 237, "12738": 237, "12740": 237, "12742": 237, "12744": 237, "12746": 237, "12748": 237, "12750": 237, "12752": 237, "12754": 237, "12756": 237, "12758": 237, "12760": 237, "12762": 237, "12764": 237, "12766": 237, "12768": 237, "12770": 237, "12772": 237, "12774": 237, "12776": 237, "12778": 237, "12780": 237, "12782": 237, "12784": 237, "12786": 237, "12788": 237, "12790": 237, "12792": 237, "12794": 237, "12796": 237, "12798": 237, "12800": 237, "12802": 237, "12804": 237, "12806": 237, "12808": 237, "12810": 237, "12812": 237, "12814": 237, "12816": 237, "12818": 237, "12820": 237, "12822": 237, "12824": 237, "12826": 237, "12828": 237, "12830": 237, "12832": 237, "12834": 237, "12836": 237, "12838": 237, "12840": 237, "12842": 237, "12844": 237, "12846": 237, "12848": 237, "12850": 237, "12852": 237, "12854": 237, "12856": 237, "12858": 237, "12860": 237, "12862": 237, "12864": 237, "12866": 237, "12868": 237, "12870": 237, "12872": 237, "12874": 237, "12876": 237, "12878": 237, "12880": 237, "12882": 237, "12884": 237, "12886": 237, "12888": 237, "12890": 237, "12892": 237, "12894": 237, "12896": 237, "12898": 237, "12900": 237, "12902": 237, "12904": 237, "12906": 237, "12908": 237, "12910": 237, "12912": 237, "12914": 237, "12916": 237, "12918": 237, "12920": 237, "12922": 237, "12924": 237, "12926": 237, "12928": 237, "12930": 237, "12932": 237, "12934": 237, "12936": 237, "12938": 237, "12940": 237, "12942": 237, "12944": 237, "12946": 237, "12948": 237, "12950": 237, "12952": 237, "12954": 237, "12956": 237, "12958": 237, "12960": 237, "12962": 237, "12964": 237, "12966": 237, "12968": 237, "12970": 237, "12972": 237, "12974": 237, "12976": 237, "12978": 237, "12980": 237, "12982": 237, "12984": 237, "12986": 237, "12988": 237, "12990": 237, "12992": 237, "12994": 237, "12996": 237, "12998": 237, "13000": 237, "13002": 237, "13004": 237, "13006": 237, "13008": 237, "13010": 237, "13012": 237, "13014": 237, "13016": 237, "13018": 237, "13020": 237, "13022": 237, "13024": 237, "13026": 237, "13028": 237, "13030": 237, "13032": 237, "13034": 237, "13036": 237, "13038": 237, "13040": 237, "13042": 237, "13044": 237, "13046": 237, "13048": 237, "13050": 237, "13052": 237, "13054": 237, "13056": 237, "13058": 237, "13060": 237, "13062": 237, "13064": 237, "13066": 237, "13068": 237, "13070": 237, "13072": 237, "13074": 237, "13076": 237, "13078": 237, "13080": 237, "13082": 237, "13084": 237, "13086": 237, "13088": 237, "13090": 237, "13092": 237, "13094": 237, "13096": 237, "13098": 237, "13100": 237, "13102": 237, "13104": 237, "13106": 237, "13108": 237, "13110": 237, "13112": 237, "13114": 237, "13116": 237, "13118": 237, "13120": 237, "13122": 237, "13124": 237, "13126": 237, "13128": 237, "13130": 237, "13132": 237, "13134": 237, "13136": 237, "13138": 237, "13140": 237, "13142": 237, "13144": 237, "13146": 237, "13148": 237, "13150": 237, "13152": 237, "13154": 237, "13156": 237, "13158": 237, "13160": 237, "13162": 237, "13164": 237, "13166": 237, "13168": 237, "13170": 237, "13172": 237, "13174": 237, "13176": 237, "13178": 237, "13180": 237, "13182": 237, "13184": 237, "13186": 237, "13188": 237, "13190": 237, "13192": 237, "13194": 237, "13196": 237, "13198": 237, "13200": 237, "13202": 237, "13204": 237, "13206": 237, "13208": 237, "13210": 237, "13212": 237, "13214": 237, "13216": 237, "13218": 237, "13220": 237, "13222": 237, "13224": 237, "13226": 237, "13228": 237, "13230": 237, "13232": 237, "13234": 237, "13236": 237, "13238": 237, "13240": 237, "13242": 237, "13244": 237, "13246": 237, "13248": 237, "13250": 237, "13252": 237, "13254": 237, "13256": 237, "13258": 237, "13260": 237, "13262": 237, "13264": 237, "13266": 237, "13268": 237, "13270": 237, "13272": 237, "13274": 237, "13276": 237, "13278": 237, "13280": 237, "13282": 237, "13284": 237, "13286": 237, "13288": 237, "13290": 237, "13292": 237, "13294": 237, "13296": 237, "13298": 237, "13300": 237, "13302": 237, "13304": 237, "13306": 237, "13308": 237, "13310": 237, "13312": 237, "13314": 237, "13316": 237, "13318": 237, "13320": 237, "13322": 237, "13324": 237, "13326": 237, "13328": 237, "13330": 237, "13332": 237, "13334": 237, "13336": 237, "13338": 237, "13340": 237, "13342": 237, "13344": 237, "13346": 237, "13348": 237, "13350": 237, "13352": 237, "13354": 237, "13356": 237, "13358": 237, "13360": 237, "13362": 237, "13364": 237, "13366": 237, "13368": 237, "13370": 237, "13372": 237, "13374": 237, "13376": 237, "13378": 237, "13380": 237, "13382": 237, "13384": 237, "13386": 237, "13388": 237, "13390": 237, "13392": 237, "13394": 237, "13396": 237, "13398": 237, "13400": 237, "13402": 237, "13404": 237, "13406": 237, "13408": 237, "13410": 237, "13412": 237, "13414": 237, "13416": 237, "13418": 237, "13420": 237, "13422": 237, "13424": 237, "13426": 237, "13428": 237, "13430": 237, "13432": 237, "13434": 237, "13436": 237, "13438": 237, "13440": 237, "13442": 237, "13444": 237, "13446": 237, "13448": 237, "13450": 237, "13452": 237, "13454": 237, "13456": 237, "13458": 237, "13460": 237, "13462": 237, "13464": 237, "13466": 237, "13468": 237, "13470": 237, "13472": 237, "13474": 237, "13476": 237, "13478": 237, "13480": 237, "13482": 237, "13484": 237, "13486": 237, "13488": 237, "13490": 237, "13492": 237, "13494": 237, "13496": 237, "13498": 237, "13502": 237, "13504": 237, "13506": 237, "13508": 237, "13510": 237, "13512": 237, "13514": 237, "13516": 237, "13518": 237, "13520": 237, "13522": 237, "13524": 237, "13526": 237, "13528": 237, "13530": 237, "13532": 237, "13534": 237, "13536": 237, "13538": 237, "13540": 237, "13542": 237, "13544": 237, "13546": 237, "13548": 237, "13550": 237, "13552": 237, "13554": 237, "13556": 237, "13558": 237, "13560": 237, "13562": 237, "13564": 237, "13566": 237, "13568": 237, "13570": 237, "13572": 237, "13574": 237, "13576": 237, "13578": 237, "13580": 237, "13582": 237, "13584": 237, "13586": 237, "13588": 237, "13590": 237, "13592": 237, "13594": 237, "13596": 237, "13598": 237, "13600": 237, "13602": 237, "13604": 237, "13606": 237, "13608": 237, "13610": 237, "13612": 237, "13614": 237, "13616": 237, "13618": 237, "13620": 237, "13622": 237, "13624": 237, "13626": 237, "13628": 237, "13630": 237, "13632": 237, "13634": 237, "13636": 237, "13638": 237, "13640": 237, "13642": 237, "13644": 237, "13646": 237, "13648": 237, "13650": 237, "13652": 237, "13654": 237, "13656": 237, "13658": 237, "13660": 237, "13662": 237, "13664": 237, "13666": 237, "13668": 237, "13670": 237, "13672": 237, "13674": 237, "13676": 237, "13678": 237, "13680": 237, "13682": 237, "13684": 237, "13686": 237, "13688": 237, "13690": 237, "13692": 237, "13694": 237, "13696": 237, "13698": 237, "13700": 237, "13702": 237, "13704": 237, "13706": 237, "13708": 237, "13710": 237, "13712": 237, "13714": 237, "13716": 237, "13718": 237, "13720": 237, "13722": 237, "13724": 237, "13726": 237, "13728": 237, "13730": 237, "13732": 237, "13734": 237, "13736": 237, "13738": 237, "13740": 237, "13742": 237, "13744": 237, "13746": 237, "13748": 237, "13750": 237, "13752": 237, "13754": 237, "13756": 237, "13758": 237, "13760": 237, "13762": 237, "13764": 237, "13766": 237, "13768": 237, "13770": 237, "13772": 237, "13774": 237, "13776": 237, "13778": 237, "13780": 237, "13782": 237, "13784": 237, "13786": 237, "13788": 237, "13790": 237, "13792": 237, "13794": 237, "13796": 237, "13798": 237, "13800": 237, "13802": 237, "13804": 237, "13806": 237, "13808": 237, "13810": 237, "13812": 237, "13814": 237, "13816": 237, "13818": 237, "13820": 237, "13822": 237, "13824": 237, "13826": 237, "13828": 237, "13830": 237, "13832": 237, "13834": 237, "13836": 237, "13838": 237, "13840": 237, "13842": 237, "13844": 237, "13846": 237, "13848": 237, "13850": 237, "13852": 237, "13854": 237, "13856": 237, "13858": 237, "13860": 237, "13862": 237, "13864": 237, "13866": 237, "13868": 237, "13870": 237, "13872": 237, "13874": 237, "13876": 237, "13878": 237, "13880": 237, "13882": 237, "13884": 237, "13886": 237, "13888": 237, "13890": 237, "13892": 237, "13894": 237, "13896": 237, "13898": 237, "13900": 237, "13902": 237, "13904": 237, "13906": 237, "13908": 237, "13910": 237, "13912": 237, "13914": 237, "13916": 237, "13918": 237, "13920": 237, "13922": 237, "13924": 237, "13926": 237, "13928": 237, "13930": 237, "13932": 237, "13934": 237, "13936": 237, "13938": 237, "13940": 237, "13942": 237, "13944": 237, "13946": 237, "13948": 237, "13950": 237, "13952": 237, "13954": 237, "13956": 237, "13958": 237, "13960": [237, 968], "13962": 237, "13964": 237, "13966": 237, "13968": 237, "13970": 237, "13972": 237, "13974": 237, "13976": 237, "13978": 237, "13980": 237, "13982": 237, "13984": 237, "13986": 237, "13988": 237, "13990": 237, "13992": 237, "13994": 237, "13996": 237, "13998": 237, "14000": 237, "14002": 237, "14004": 237, "14006": 237, "14008": 237, "14010": 237, "14012": 237, "14014": 237, "14016": 237, "14018": 237, "14020": 237, "14022": 237, "14024": 237, "14026": 237, "14028": 237, "14030": 237, "14032": 237, "14034": 237, "14036": 237, "14038": 237, "14040": 237, "14042": 237, "14044": 237, "14046": 237, "14048": 237, "14050": 237, "14052": 237, "14054": 237, "14056": 237, "14058": 237, "14060": 237, "14062": 237, "14064": 237, "14066": 237, "14068": 237, "14070": 237, "14072": 237, "14074": 237, "14076": 237, "14078": 237, "14080": 237, "14082": 237, "14084": 237, "14086": 237, "14088": 237, "14090": 237, "14092": 237, "14094": 237, "14096": 237, "14098": 237, "14100": 237, "14102": 237, "14104": 237, "14106": 237, "14108": 237, "14110": 237, "14112": 237, "14114": 237, "14116": 237, "14118": 237, "14120": 237, "14122": 237, "14124": 237, "14126": 237, "14128": 237, "14130": 237, "14132": 237, "14134": 237, "14136": 237, "14138": 237, "14140": 237, "14142": 237, "14144": 237, "14146": 237, "14148": 237, "14150": 237, "14152": 237, "14154": 237, "14156": 237, "14158": 237, "14160": 237, "14162": 237, "14164": 237, "14166": 237, "14168": 237, "14170": 237, "14172": 237, "14174": 237, "14176": 237, "14178": 237, "14180": 237, "14182": 237, "14184": 237, "14186": 237, "14188": 237, "14190": 237, "14192": 237, "14194": 237, "14196": 237, "14198": 237, "14200": 237, "14202": 237, "14204": 237, "14206": 237, "14208": 237, "14210": 237, "14212": 237, "14214": 237, "14216": 237, "14218": 237, "14220": 237, "14222": 237, "14224": 237, "14226": 237, "14228": 237, "14230": 237, "14232": 237, "14234": 237, "14236": 237, "14238": 237, "14240": 237, "14242": 237, "14244": 237, "14246": 237, "14248": 237, "14250": 237, "14252": 237, "14254": 237, "14256": 237, "14258": 237, "14260": 237, "14262": 237, "14264": 237, "14266": 237, "14268": 237, "14270": 237, "14272": 237, "14274": 237, "14276": 237, "14278": 237, "14280": 237, "14282": 237, "14284": 237, "14286": 237, "14288": 237, "14290": 237, "14292": 237, "14294": 237, "14296": 237, "14298": 237, "14300": 237, "14302": 237, "14304": 237, "14306": 237, "14308": 237, "14310": 237, "14312": 237, "14314": 237, "14316": 237, "14318": 237, "14320": 237, "14322": 237, "14324": 237, "14326": 237, "14328": 237, "14330": 237, "14332": 237, "14334": 237, "14336": 237, "14338": 237, "14340": 237, "14342": 237, "14344": 237, "14346": 237, "14348": 237, "14350": 237, "14352": 237, "14354": 237, "14356": 237, "14358": 237, "14360": 237, "14362": 237, "14364": 237, "14366": 237, "14368": 237, "14370": 237, "14372": 237, "14374": 237, "14376": 237, "14378": 237, "14380": 237, "14382": 237, "14384": 237, "14388": 237, "14390": 237, "14392": 237, "14394": 237, "14396": 237, "14398": 237, "14400": 237, "14402": 237, "14404": 237, "14406": 237, "14408": 237, "14410": 237, "14412": 237, "14414": 237, "14416": 237, "14418": 237, "14420": 237, "14422": 237, "14424": 237, "14426": 237, "14428": 237, "14430": 237, "14432": 237, "14434": 237, "14436": 237, "14438": 237, "14440": 237, "14442": 237, "14444": 237, "14446": 237, "14448": 237, "14450": 237, "14452": 237, "14454": 237, "14456": 237, "14458": 237, "14460": 237, "14462": 237, "14464": 237, "14466": 237, "14468": 237, "14470": 237, "14472": 237, "14474": 237, "14476": 237, "14478": 237, "14480": 237, "14482": 237, "14484": 237, "14486": 237, "14488": 237, "14490": 237, "14492": 237, "14494": 237, "14496": 237, "14498": 237, "14500": 237, "14502": 237, "14504": 237, "14506": 237, "14508": 237, "14510": 237, "14512": 237, "14514": 237, "14516": 237, "14518": 237, "14520": 237, "14522": 237, "14524": 237, "14526": 237, "14528": 237, "14530": 237, "14532": 237, "14534": 237, "14536": 237, "14538": 237, "14540": 237, "14542": 237, "14544": 237, "14546": 237, "14548": 237, "14550": 237, "14552": 237, "14554": 237, "14556": 237, "14558": 237, "14560": 237, "14562": 237, "14564": 237, "14566": 237, "14568": 237, "14570": 237, "14572": 237, "14574": 237, "14576": 237, "14578": 237, "14580": 237, "14582": 237, "14584": 237, "14586": 237, "14588": 237, "14590": 237, "14592": 237, "14594": 237, "14596": 237, "14598": 237, "14600": 237, "14602": 237, "14604": 237, "14606": 237, "14608": 237, "14610": 237, "14612": 237, "14614": 237, "14616": 237, "14618": 237, "14620": 237, "14622": 237, "14624": 237, "14626": 237, "14628": 237, "14630": 237, "14632": 237, "14634": 237, "14636": 237, "14638": 237, "14640": 237, "14642": 237, "14644": 237, "14646": 237, "14648": 237, "14650": 237, "14652": 237, "14654": 237, "14656": 237, "14658": 237, "14660": 237, "14662": 237, "14664": 237, "14666": 237, "14668": 237, "14670": 237, "14672": 237, "14674": 237, "14676": 237, "14678": 237, "14680": 237, "14682": 237, "14684": 237, "14686": 237, "14688": 237, "14690": 237, "14692": 237, "14694": 237, "14696": 237, "14698": 237, "14700": 237, "14702": 237, "14704": 237, "14706": 237, "14708": 237, "14710": 237, "14712": 237, "14714": 237, "14716": 237, "14718": 237, "14720": 237, "14722": 237, "14724": 237, "14726": 237, "14728": 237, "14730": 237, "14732": 237, "14734": 237, "14736": 237, "14738": 237, "14740": 237, "14742": 237, "14744": 237, "14746": 237, "14748": 237, "14750": 237, "14752": 237, "14754": 237, "14756": 237, "14758": 237, "14760": 237, "14762": 237, "14764": 237, "14766": 237, "14768": 237, "14770": 237, "14772": 237, "14774": 237, "14776": 237, "14778": 237, "14780": 237, "14782": 237, "14784": 237, "14786": 237, "14788": 237, "14790": 237, "14792": 237, "14794": 237, "14796": 237, "14798": 237, "14800": 237, "14802": 237, "14804": 237, "14806": 237, "14808": 237, "14810": 237, "14812": 237, "14814": 237, "14816": 237, "14818": 237, "14820": 237, "14822": 237, "14824": 237, "14826": 237, "14828": 237, "14830": 237, "14832": 237, "14834": 237, "14836": 237, "14838": 237, "14840": 237, "14842": 237, "14844": 237, "14846": 237, "14848": 237, "14850": 237, "14852": 237, "14854": 237, "14856": 237, "14858": 237, "14860": 237, "14862": 237, "14864": 237, "14866": 237, "14868": 237, "14870": 237, "14872": 237, "14874": 237, "14876": 237, "14878": 237, "14880": 237, "14882": [237, 583], "14884": 237, "14886": 237, "14888": 237, "14890": 237, "14892": 237, "14894": 237, "14896": 237, "14898": 237, "14900": 237, "14902": 237, "14904": 237, "14906": 237, "14908": 237, "14910": 237, "14912": 237, "14914": 237, "14916": 237, "14918": 237, "14920": 237, "14922": 237, "14924": 237, "14926": 237, "14928": 237, "14930": 237, "14932": 237, "14934": 237, "14936": 237, "14938": 237, "14940": 237, "14942": 237, "14944": 237, "14946": 237, "14948": 237, "14950": 237, "14952": 237, "14954": 237, "14956": 237, "14958": 237, "14960": 237, "14962": 237, "14964": 237, "14966": 237, "14968": 237, "14970": 237, "14972": 237, "14974": 237, "14976": 237, "14978": 237, "14980": 237, "14982": 237, "14984": 237, "14986": 237, "14988": 237, "14990": [237, 286], "14992": 237, "14994": 237, "14996": 237, "14998": 237, "15002": 237, "15004": 237, "15006": 237, "15008": 237, "15010": 237, "15012": 237, "15014": 237, "15016": 237, "15018": 237, "15020": 237, "15022": 237, "15024": 237, "15026": 237, "15028": 237, "15030": 237, "15032": 237, "15034": 237, "15036": 237, "15038": 237, "15040": 237, "15042": 237, "15044": 237, "15046": 237, "15048": 237, "15050": 237, "15052": 237, "15054": 237, "15056": 237, "15058": 237, "15060": 237, "15062": 237, "15064": 237, "15066": 237, "15068": 237, "15070": 237, "15072": 237, "15074": 237, "15076": 237, "15078": 237, "15080": 237, "15082": 237, "15084": 237, "15086": 237, "15088": 237, "15090": 237, "15092": 237, "15094": 237, "15096": 237, "15098": 237, "15100": 237, "15102": 237, "15104": 237, "15106": 237, "15108": 237, "15110": 237, "15112": 237, "15114": 237, "15116": 237, "15118": 237, "15120": 237, "15122": 237, "15124": 237, "15126": 237, "15128": 237, "15130": 237, "15132": 237, "15134": 237, "15136": 237, "15138": 237, "15140": 237, "15142": 237, "15144": 237, "15146": 237, "15148": 237, "15150": 237, "15152": 237, "15154": 237, "15156": 237, "15158": 237, "15160": 237, "15162": 237, "15164": 237, "15166": 237, "15168": 237, "15170": 237, "15172": 237, "15174": 237, "15176": 237, "15178": 237, "15180": 237, "15182": 237, "15184": 237, "15186": 237, "15188": 237, "15190": 237, "15192": 237, "15194": 237, "15196": 237, "15198": 237, "15200": 237, "15202": 237, "15204": 237, "15206": 237, "15208": 237, "15210": 237, "15212": 237, "15214": 237, "15216": 237, "15218": 237, "15220": 237, "15222": 237, "15224": 237, "15226": 237, "15228": 237, "15230": 237, "15232": 237, "15234": 237, "15236": 237, "15238": 237, "15240": 237, "15242": 237, "15244": [237, 1013], "15246": 237, "15248": 237, "15250": 237, "15252": 237, "15254": 237, "15256": 237, "15258": 237, "15260": 237, "15262": 237, "15264": 237, "15266": 237, "15268": 237, "15270": 237, "15272": 237, "15274": 237, "15276": 237, "15278": 237, "15280": 237, "15282": 237, "15284": 237, "15286": 237, "15288": 237, "15290": 237, "15292": 237, "15294": 237, "15296": 237, "15298": 237, "15300": 237, "15302": 237, "15304": 237, "15306": 237, "15308": 237, "15310": 237, "15312": 237, "15314": 237, "15316": 237, "15318": 237, "15320": 237, "15322": 237, "15324": 237, "15326": 237, "15328": 237, "15330": 237, "15332": 237, "15334": 237, "15336": 237, "15338": 237, "15340": 237, "15342": 237, "15344": 237, "15346": 237, "15348": 237, "15350": 237, "15352": 237, "15354": 237, "15356": 237, "15358": 237, "15360": 237, "15362": 237, "15364": 237, "15366": 237, "15368": 237, "15370": 237, "15372": 237, "15374": 237, "15376": 237, "15378": 237, "15380": 237, "15382": 237, "15384": 237, "15386": 237, "15388": 237, "15390": 237, "15392": 237, "15394": 237, "15396": 237, "15398": 237, "15400": 237, "15402": 237, "15404": 237, "15406": 237, "15408": 237, "15410": 237, "15412": 237, "15414": 237, "15416": 237, "15418": 237, "15420": 237, "15422": 237, "15424": 237, "15426": 237, "15428": 237, "15430": 237, "15432": 237, "15434": 237, "15436": 237, "15438": 237, "15440": 237, "15442": 237, "15444": 237, "15446": 237, "15448": 237, "15450": 237, "15452": 237, "15454": 237, "15456": 237, "15458": 237, "15460": 237, "15462": 237, "15464": 237, "15466": 237, "15468": 237, "15470": 237, "15472": 237, "15474": 237, "15476": 237, "15478": 237, "15480": 237, "15482": 237, "15484": 237, "15486": 237, "15488": 237, "15490": 237, "15492": 237, "15494": 237, "15496": 237, "15498": 237, "15500": 237, "15502": 237, "15504": 237, "15506": 237, "15508": 237, "15510": 237, "15512": 237, "15514": 237, "15516": 237, "15518": 237, "15520": 237, "15522": 237, "15524": 237, "15526": 237, "15528": 237, "15530": 237, "15532": 237, "15534": 237, "15536": 237, "15538": 237, "15540": 237, "15542": 237, "15544": 237, "15546": 237, "15548": 237, "15550": 237, "15552": 237, "15554": 237, "15556": 237, "15558": 237, "15560": 237, "15562": 237, "15564": 237, "15566": 237, "15568": 237, "15570": 237, "15572": 237, "15574": 237, "15576": 237, "15578": 237, "15580": 237, "15582": 237, "15584": 237, "15586": 237, "15588": 237, "15590": 237, "15592": 237, "15594": 237, "15596": 237, "15598": 237, "15600": 237, "15602": 237, "15604": 237, "15606": 237, "15608": 237, "15610": 237, "15612": 237, "15614": 237, "15616": 237, "15618": 237, "15620": 237, "15622": 237, "15624": 237, "15626": 237, "15628": 237, "15630": 237, "15632": 237, "15634": 237, "15636": 237, "15638": 237, "15640": 237, "15642": 237, "15644": 237, "15646": 237, "15648": 237, "15650": 237, "15652": 237, "15654": 237, "15656": 237, "15658": 237, "15660": 237, "15662": 237, "15664": 237, "15666": 237, "15668": 237, "15670": 237, "15672": 237, "15674": 237, "15676": 237, "15678": 237, "15680": 237, "15682": 237, "15684": 237, "15686": 237, "15688": 237, "15690": 237, "15692": 237, "15694": 237, "15696": 237, "15698": 237, "15700": 237, "15702": 237, "15704": 237, "15706": 237, "15708": 237, "15710": 237, "15712": 237, "15714": 237, "15716": 237, "15718": 237, "15720": 237, "15722": 237, "15724": 237, "15726": 237, "15728": 237, "15730": 237, "15732": 237, "15734": 237, "15736": 237, "15738": 237, "15740": 237, "15742": 237, "15744": 237, "15746": 237, "15748": 237, "15750": 237, "15752": 237, "15754": 237, "15756": 237, "15758": 237, "15760": 237, "15762": 237, "15764": 237, "15766": 237, "15768": 237, "15770": 237, "15772": 237, "15774": 237, "15776": 237, "15778": 237, "15780": 237, "15782": 237, "15784": 237, "15786": 237, "15788": 237, "15790": 237, "15792": 237, "15794": 237, "15796": 237, "15798": 237, "15800": 237, "15802": 237, "15804": 237, "15806": 237, "15808": 237, "15810": 237, "15812": 237, "15814": 237, "15816": 237, "15818": 237, "15820": 237, "15822": 237, "15824": 237, "15826": 237, "15828": 237, "15830": 237, "15832": 237, "15834": 237, "15836": 237, "15838": 237, "15840": 237, "15842": 237, "15844": 237, "15846": 237, "15848": 237, "15850": 237, "15852": 237, "15854": 237, "15856": 237, "15858": 237, "15860": 237, "15862": 237, "15864": 237, "15866": 237, "15868": 237, "15870": 237, "15872": 237, "15874": 237, "15876": 237, "15878": 237, "15880": 237, "15882": 237, "15884": 237, "15886": 237, "15888": 237, "15890": 237, "15892": 237, "15894": 237, "15896": 237, "15898": 237, "15900": 237, "15902": 237, "15904": 237, "15906": 237, "15908": 237, "15910": 237, "15912": 237, "15914": 237, "15916": 237, "15918": 237, "15920": 237, "15922": 237, "15924": 237, "15926": 237, "15928": 237, "15930": 237, "15932": 237, "15934": 237, "15936": 237, "15938": 237, "15940": 237, "15942": 237, "15944": 237, "15946": 237, "15948": 237, "15950": 237, "15952": 237, "15954": 237, "15956": 237, "15958": 237, "15960": 237, "15962": 237, "15964": 237, "15966": 237, "15968": 237, "15970": 237, "15972": 237, "15974": 237, "15976": 237, "15978": 237, "15980": 237, "15982": 237, "15984": 237, "15986": 237, "15988": 237, "15990": 237, "15992": 237, "15994": 237, "15996": 237, "15998": 237, "16000": 237, "16002": 237, "16004": 237, "16006": 237, "16008": 237, "16010": 237, "16012": 237, "16014": 237, "16016": 237, "16018": 237, "16020": 237, "16022": 237, "16024": 237, "16026": 237, "16028": 237, "16030": 237, "16032": 237, "16034": 237, "16036": 237, "16038": 237, "16040": 237, "16042": 237, "16044": 237, "16046": 237, "16048": 237, "16050": 237, "16052": 237, "16054": 237, "16056": 237, "16058": 237, "16060": 237, "16062": 237, "16064": 237, "16066": 237, "16068": 237, "16070": 237, "16072": 237, "16074": 237, "16076": 237, "16078": 237, "16080": 237, "16082": 237, "16084": 237, "16086": 237, "16088": 237, "16090": 237, "16092": 237, "16094": 237, "16096": 237, "16098": 237, "16100": 237, "16102": 237, "16104": 237, "16106": 237, "16108": 237, "16110": 237, "16112": 237, "16114": 237, "16116": 237, "16118": 237, "16120": 237, "16122": 237, "16124": 237, "16126": 237, "16128": 237, "16130": 237, "16132": 237, "16134": 237, "16136": 237, "16138": 237, "16140": 237, "16142": 237, "16144": 237, "16146": 237, "16148": 237, "16150": 237, "16152": 237, "16154": 237, "16156": 237, "16158": 237, "16160": 237, "16162": 237, "16164": 237, "16166": 237, "16168": 237, "16170": 237, "16172": 237, "16174": 237, "16176": 237, "16178": 237, "16180": 237, "16182": 237, "16184": 237, "16186": 237, "16188": 237, "16190": 237, "16192": 237, "16194": 237, "16196": 237, "16198": 237, "16200": 237, "16202": 237, "16204": 237, "16206": 237, "16208": 237, "16210": 237, "16212": 237, "16214": 237, "16216": 237, "16218": 237, "16220": 237, "16222": 237, "16224": 237, "16226": 237, "16228": 237, "16230": 237, "16232": 237, "16234": 237, "16236": 237, "16238": 237, "16240": 237, "16242": 237, "16244": 237, "16246": 237, "16248": 237, "16250": 237, "16252": 237, "16254": 237, "16256": 237, "16258": 237, "16260": 237, "16262": 237, "16264": 237, "16266": 237, "16268": 237, "16270": 237, "16272": 237, "16274": 237, "16276": 237, "16278": 237, "16280": 237, "16282": 237, "16284": 237, "16286": 237, "16288": 237, "16290": 237, "16292": 237, "16294": 237, "16296": 237, "16298": 237, "16300": 237, "16302": 237, "16304": 237, "16306": 237, "16308": 237, "16310": 237, "16312": 237, "16314": 237, "16316": 237, "16318": 237, "16320": 237, "16322": 237, "16324": 237, "16326": 237, "16328": 237, "16330": 237, "16332": 237, "16334": 237, "16336": 237, "16338": 237, "16340": 237, "16342": 237, "16344": 237, "16346": 237, "16348": 237, "16350": 237, "16352": 237, "16354": 237, "16356": 237, "16358": 237, "16360": 237, "16362": 237, "16364": 237, "16366": 237, "16368": 237, "16370": 237, "16372": 237, "16374": 237, "16376": 237, "16378": 237, "16380": 237, "16382": 237, "16386": 237, "16388": 237, "16390": 237, "16392": 237, "16394": 237, "16396": 237, "16398": 237, "16400": 237, "16402": 237, "16404": 237, "16406": 237, "16408": 237, "16410": 237, "16412": 237, "16414": 237, "16416": 237, "16418": 237, "16420": 237, "16422": 237, "16424": 237, "16426": 237, "16428": 237, "16430": 237, "16432": 237, "16434": 237, "16436": 237, "16438": 237, "16440": 237, "16442": 237, "16444": 237, "16446": 237, "16448": 237, "16450": 237, "16452": 237, "16454": 237, "16456": 237, "16458": 237, "16460": 237, "16462": 237, "16464": 237, "16466": 237, "16468": 237, "16470": 237, "16472": 237, "16474": 237, "16476": 237, "16478": 237, "16480": 237, "16482": 237, "16484": 237, "16486": 237, "16488": 237, "16490": 237, "16492": 237, "16494": 237, "16496": 237, "16498": 237, "16500": 237, "16502": 237, "16504": 237, "16506": 237, "16508": 237, "16510": 237, "16512": 237, "16514": 237, "16516": 237, "16518": 237, "16520": 237, "16522": 237, "16524": 237, "16526": 237, "16528": 237, "16530": 237, "16532": 237, "16534": 237, "16536": 237, "16538": 237, "16540": 237, "16542": 237, "16544": 237, "16546": 237, "16548": 237, "16550": 237, "16552": 237, "16554": 237, "16556": 237, "16558": 237, "16560": 237, "16562": 237, "16564": 237, "16566": 237, "16568": 237, "16570": 237, "16572": 237, "16574": 237, "16576": 237, "16578": 237, "16580": 237, "16582": 237, "16584": 237, "16586": 237, "16588": 237, "16590": 237, "16592": 237, "16594": 237, "16596": 237, "16598": 237, "16600": 237, "16602": 237, "16604": 237, "16606": 237, "16608": 237, "16610": 237, "16612": 237, "16614": 237, "16616": 237, "16618": 237, "16620": 237, "16622": 237, "16624": 237, "16626": 237, "16628": 237, "16630": 237, "16632": 237, "16634": 237, "16636": 237, "16638": 237, "16640": 237, "16642": 237, "16644": 237, "16646": 237, "16648": 237, "16650": 237, "16652": 237, "16654": 237, "16656": 237, "16658": 237, "16660": 237, "16662": 237, "16664": 237, "16666": 237, "16668": 237, "16670": 237, "16672": 237, "16674": 237, "16676": 237, "16678": 237, "16680": 237, "16682": 237, "16684": 237, "16686": 237, "16688": 237, "16690": 237, "16692": 237, "16694": 237, "16696": 237, "16698": 237, "16700": 237, "16702": 237, "16704": 237, "16706": 237, "16708": 237, "16710": 237, "16712": 237, "16714": 237, "16716": 237, "16718": 237, "16720": 237, "16722": 237, "16724": 237, "16726": 237, "16728": 237, "16730": 237, "16732": 237, "16734": 237, "16736": 237, "16738": 237, "16740": 237, "16742": 237, "16744": 237, "16746": 237, "16748": 237, "16750": 237, "16752": 237, "16754": 237, "16756": 237, "16758": 237, "16760": 237, "16762": 237, "16764": 237, "16766": 237, "16768": 237, "16770": 237, "16772": 237, "16774": 237, "16776": 237, "16778": 237, "16780": 237, "16782": 237, "16784": 237, "16786": 237, "16788": 237, "16790": 237, "16792": 237, "16794": 237, "16796": 237, "16798": 237, "16800": 237, "16802": 237, "16804": 237, "16806": 237, "16808": 237, "16810": 237, "16812": 237, "16814": 237, "16816": 237, "16818": 237, "16820": 237, "16822": 237, "16824": 237, "16826": 237, "16828": 237, "16830": 237, "16832": 237, "16834": 237, "16836": 237, "16838": 237, "16840": 237, "16842": 237, "16844": 237, "16846": 237, "16848": 237, "16850": 237, "16852": 237, "16854": 237, "16856": 237, "16858": 237, "16860": 237, "16862": 237, "16864": 237, "16866": 237, "16868": 237, "16870": 237, "16872": 237, "16874": 237, "16876": 237, "16878": 237, "16880": 237, "16882": 237, "16884": 237, "16886": 237, "16888": 237, "16890": 237, "16892": 237, "16894": 237, "16896": 237, "16898": 237, "16900": 237, "16902": 237, "16904": 237, "16906": 237, "16908": 237, "16910": 237, "16912": 237, "16914": 237, "16916": 237, "16918": 237, "16920": 237, "16922": 237, "16924": 237, "16926": 237, "16928": 237, "16930": 237, "16932": 237, "16934": 237, "16936": 237, "16938": 237, "16940": 237, "16942": 237, "16944": 237, "16946": 237, "16948": 237, "16950": 237, "16952": 237, "16954": 237, "16956": 237, "16958": 237, "16960": 237, "16962": 237, "16964": 237, "16966": 237, "16968": 237, "16970": 237, "16972": 237, "16974": 237, "16976": 237, "16978": 237, "16980": 237, "16982": 237, "16984": 237, "16986": 237, "16988": 237, "16990": 237, "16992": 237, "16994": 237, "16996": 237, "16998": 237, "17000": 237, "17002": 237, "17004": 237, "17006": 237, "17008": 237, "17010": 237, "17012": 237, "17014": 237, "17016": 237, "17018": 237, "17020": 237, "17022": 237, "17024": 237, "17026": 237, "17028": 237, "17030": 237, "17032": 237, "17034": 237, "17036": 237, "17038": 237, "17040": 237, "17042": 237, "17044": 237, "17046": 237, "17048": 237, "17050": 237, "17052": 237, "17054": 237, "17056": 237, "17058": 237, "17060": 237, "17062": 237, "17064": 237, "17066": 237, "17068": 237, "17070": 237, "17072": 237, "17074": 237, "17076": 237, "17078": 237, "17080": 237, "17082": 237, "17084": 237, "17086": 237, "17088": 237, "17090": 237, "17092": 237, "17094": 237, "17096": 237, "17098": 237, "17100": 237, "17102": 237, "17104": 237, "17106": 237, "17108": 237, "17110": 237, "17112": 237, "17114": 237, "17116": 237, "17118": 237, "17120": 237, "17122": 237, "17124": 237, "17126": [237, 286], "17128": 237, "17130": 237, "17132": 237, "17134": 237, "17136": 237, "17138": 237, "17140": 237, "17142": 237, "17144": 237, "17146": 237, "17148": 237, "17150": 237, "17152": 237, "17154": 237, "17156": 237, "17158": 237, "17160": 237, "17162": 237, "17164": 237, "17166": 237, "17168": 237, "17170": 237, "17172": 237, "17174": 237, "17176": 237, "17178": 237, "17180": 237, "17182": 237, "17184": 237, "17186": 237, "17188": 237, "17190": 237, "17192": 237, "17194": 237, "17196": 237, "17198": 237, "17200": 237, "17202": 237, "17204": 237, "17206": 237, "17208": 237, "17210": 237, "17212": 237, "17214": 237, "17216": 237, "17218": 237, "17220": 237, "17222": 237, "17224": 237, "17226": 237, "17228": 237, "17230": 237, "17232": 237, "17234": 237, "17236": 237, "17238": 237, "17240": 237, "17242": 237, "17244": 237, "17246": 237, "17248": 237, "17250": 237, "17252": 237, "17254": 237, "17256": 237, "17258": 237, "17260": 237, "17262": 237, "17264": 237, "17266": 237, "17268": 237, "17270": 237, "17272": 237, "17274": 237, "17276": 237, "17278": 237, "17280": 237, "17282": 237, "17284": 237, "17286": 237, "17288": 237, "17290": 237, "17292": 237, "17294": 237, "17296": 237, "17298": 237, "17300": 237, "17302": 237, "17304": 237, "17306": 237, "17308": 237, "17310": 237, "17312": 237, "17314": 237, "17316": 237, "17318": 237, "17320": 237, "17322": 237, "17324": 237, "17326": 237, "17328": 237, "17330": 237, "17332": 237, "17334": 237, "17336": 237, "17338": 237, "17340": 237, "17342": 237, "17344": 237, "17346": 237, "17348": 237, "17350": 237, "17352": 237, "17354": 237, "17356": 237, "17358": 237, "17360": 237, "17362": 237, "17364": 237, "17366": 237, "17368": 237, "17370": 237, "17372": 237, "17374": 237, "17376": 237, "17378": 237, "17380": 237, "17382": 237, "17384": 237, "17386": 237, "17388": 237, "17390": 237, "17392": 237, "17394": 237, "17396": 237, "17398": 237, "17400": 237, "17402": 237, "17404": 237, "17406": 237, "17408": 237, "17410": 237, "17412": 237, "17414": 237, "17416": 237, "17418": 237, "17420": 237, "17422": 237, "17424": 237, "17426": 237, "17428": 237, "17430": 237, "17432": 237, "17434": 237, "17436": 237, "17438": 237, "17440": 237, "17442": 237, "17444": 237, "17446": 237, "17448": 237, "17450": 237, "17452": 237, "17454": 237, "17456": 237, "17458": 237, "17460": 237, "17462": 237, "17464": 237, "17466": 237, "17468": 237, "17470": 237, "17472": 237, "17474": 237, "17476": 237, "17478": 237, "17480": 237, "17482": 237, "17484": 237, "17486": 237, "17488": 237, "17490": 237, "17492": 237, "17494": 237, "17496": 237, "17498": 237, "17500": 237, "17502": 237, "17504": 237, "17506": 237, "17508": 237, "17510": 237, "17512": 237, "17514": 237, "17516": 237, "17518": 237, "17520": 237, "17522": 237, "17524": 237, "17526": 237, "17528": 237, "17530": 237, "17532": 237, "17534": 237, "17536": 237, "17538": 237, "17540": 237, "17542": 237, "17544": 237, "17546": 237, "17548": 237, "17550": 237, "17552": 237, "17554": 237, "17556": 237, "17558": 237, "17560": 237, "17562": 237, "17564": 237, "17566": 237, "17568": 237, "17570": 237, "17572": 237, "17574": 237, "17576": 237, "17578": 237, "17580": 237, "17582": 237, "17584": 237, "17586": 237, "17588": 237, "17590": 237, "17592": 237, "17594": 237, "17596": 237, "17598": 237, "17600": 237, "17602": 237, "17604": 237, "17606": 237, "17608": 237, "17610": 237, "17612": 237, "17614": 237, "17616": 237, "17618": 237, "17620": 237, "17622": 237, "17624": 237, "17626": 237, "17628": 237, "17630": 237, "17632": 237, "17634": 237, "17636": 237, "17638": 237, "17640": 237, "17642": 237, "17644": 237, "17646": 237, "17648": 237, "17650": 237, "17652": 237, "17654": 237, "17656": 237, "17658": 237, "17660": 237, "17662": 237, "17664": 237, "17666": 237, "17668": 237, "17670": 237, "17672": 237, "17674": 237, "17676": 237, "17678": 237, "17680": 237, "17682": 237, "17684": 237, "17686": 237, "17688": 237, "17690": 237, "17692": 237, "17694": 237, "17696": 237, "17698": 237, "17700": 237, "17702": 237, "17704": 237, "17706": 237, "17708": 237, "17710": 237, "17712": 237, "17714": 237, "17716": 237, "17718": 237, "17720": 237, "17722": 237, "17724": 237, "17726": 237, "17728": 237, "17730": 237, "17732": 237, "17734": 237, "17736": 237, "17738": 237, "17740": 237, "17742": 237, "17744": 237, "17746": 237, "17748": 237, "17750": 237, "17752": 237, "17754": 237, "17756": 237, "17758": 237, "17760": 237, "17762": 237, "17764": 237, "17766": 237, "17768": 237, "17770": 237, "17772": 237, "17774": 237, "17776": 237, "17778": 237, "17780": 237, "17782": 237, "17784": 237, "17786": 237, "17788": 237, "17790": 237, "17792": 237, "17794": 237, "17796": 237, "17798": 237, "17800": 237, "17802": 237, "17804": 237, "17806": 237, "17808": 237, "17810": 237, "17812": 237, "17814": 237, "17816": 237, "17818": 237, "17820": 237, "17822": 237, "17824": 237, "17826": 237, "17828": 237, "17830": 237, "17832": 237, "17834": 237, "17836": 237, "17838": 237, "17840": 237, "17842": 237, "17844": 237, "17846": 237, "17848": 237, "17850": 237, "17852": 237, "17854": 237, "17856": 237, "17858": 237, "17860": 237, "17862": 237, "17864": 237, "17866": 237, "17868": 237, "17870": 237, "17872": 237, "17874": 237, "17876": 237, "17878": 237, "17880": 237, "17882": 237, "17884": 237, "17886": 237, "17888": 237, "17890": 237, "17892": 237, "17894": 237, "17896": 237, "17898": 237, "17900": 237, "17902": 237, "17904": 237, "17906": 237, "17908": 237, "17910": 237, "17912": 237, "17914": 237, "17916": 237, "17918": 237, "17920": 237, "17922": 237, "17924": 237, "17926": 237, "17928": 237, "17930": 237, "17932": 237, "17934": 237, "17936": 237, "17938": 237, "17940": 237, "17942": 237, "17944": 237, "17946": 237, "17948": 237, "17950": 237, "17952": 237, "17954": 237, "17956": 237, "17958": 237, "17960": 237, "17962": 237, "17964": 237, "17966": 237, "17968": 237, "17970": 237, "17972": 237, "17974": 237, "17976": 237, "17978": 237, "17980": 237, "17982": 237, "17984": 237, "17986": 237, "17988": 237, "17990": 237, "17992": 237, "17994": 237, "17996": 237, "17998": 237, "18000": [237, 931], "18002": 237, "18004": 237, "18006": 237, "18008": 237, "18010": 237, "18012": 237, "18014": 237, "18016": 237, "18018": 237, "18020": 237, "18022": 237, "18024": 237, "18026": 237, "18028": 237, "18030": 237, "18032": 237, "18034": 237, "18036": 237, "18038": 237, "18040": 237, "18042": 237, "18044": 237, "18046": 237, "18048": 237, "18050": 237, "18052": 237, "18054": 237, "18056": 237, "18058": 237, "18060": 237, "18062": 237, "18064": 237, "18066": 237, "18068": 237, "18070": 237, "18072": 237, "18074": 237, "18076": 237, "18078": 237, "18080": 237, "18082": 237, "18084": 237, "18086": 237, "18088": 237, "18090": 237, "18092": 237, "18094": 237, "18096": 237, "18098": 237, "18100": 237, "18102": 237, "18104": 237, "18106": 237, "18108": 237, "18110": 237, "18112": 237, "18114": 237, "18116": 237, "18118": 237, "18120": 237, "18122": 237, "18124": 237, "18126": 237, "18128": 237, "18130": 237, "18132": 237, "18134": 237, "18136": 237, "18138": 237, "18140": 237, "18142": 237, "18144": 237, "18146": 237, "18148": 237, "18150": 237, "18152": 237, "18154": 237, "18156": 237, "18158": 237, "18160": 237, "18162": 237, "18164": 237, "18166": 237, "18168": 237, "18170": 237, "18172": 237, "18174": 237, "18176": 237, "18178": 237, "18180": 237, "18182": 237, "18184": 237, "18186": 237, "18188": 237, "18190": 237, "18192": 237, "18194": 237, "18196": 237, "18198": 237, "18200": 237, "18202": 237, "18204": 237, "18206": 237, "18208": 237, "18210": 237, "18212": 237, "18214": 237, "18216": 237, "18218": 237, "18220": 237, "18222": 237, "18224": 237, "18226": 237, "18228": 237, "18230": 237, "18232": 237, "18234": 237, "18236": 237, "18238": 237, "18240": 237, "18242": 237, "18244": 237, "18246": 237, "18248": 237, "18250": 237, "18252": 237, "18254": 237, "18256": 237, "18258": 237, "18260": 237, "18262": 237, "18264": 237, "18266": 237, "18268": 237, "18270": 237, "18272": 237, "18274": 237, "18276": 237, "18278": 237, "18280": 237, "18282": 237, "18284": 237, "18286": 237, "18288": 237, "18290": 237, "18292": 237, "18294": 237, "18296": 237, "18298": 237, "18300": 237, "18302": 237, "18304": 237, "18306": 237, "18308": 237, "18310": 237, "18312": 237, "18314": 237, "18316": 237, "18318": 237, "18320": 237, "18322": 237, "18324": 237, "18326": 237, "18328": 237, "18330": 237, "18332": 237, "18334": 237, "18336": 237, "18338": 237, "18340": 237, "18342": 237, "18344": 237, "18346": 237, "18348": 237, "18350": 237, "18352": 237, "18354": 237, "18356": 237, "18358": 237, "18360": 237, "18362": 237, "18364": 237, "18366": 237, "18368": 237, "18370": 237, "18372": 237, "18374": 237, "18376": 237, "18378": 237, "18380": 237, "18382": 237, "18384": [237, 999], "18386": 237, "18388": 237, "18390": 237, "18392": 237, "18394": 237, "18396": 237, "18398": 237, "18400": 237, "18402": 237, "18404": 237, "18406": 237, "18408": 237, "18410": 237, "18412": 237, "18414": 237, "18416": 237, "18418": 237, "18420": 237, "18422": 237, "18424": 237, "18426": 237, "18428": 237, "18430": 237, "18432": 237, "18434": 237, "18436": 237, "18438": 237, "18440": 237, "18442": 237, "18444": 237, "18446": 237, "18448": 237, "18450": 237, "18452": 237, "18454": 237, "18456": 237, "18458": 237, "18460": 237, "18462": 237, "18464": 237, "18466": 237, "18468": 237, "18470": 237, "18472": 237, "18474": 237, "18476": 237, "18478": 237, "18480": 237, "18482": 237, "18484": 237, "18486": 237, "18488": 237, "18490": 237, "18492": 237, "18494": 237, "18496": 237, "18498": 237, "18500": 237, "18502": 237, "18504": 237, "18506": 237, "18508": 237, "18510": 237, "18512": 237, "18514": 237, "18516": 237, "18518": 237, "18520": 237, "18522": 237, "18524": 237, "18526": 237, "18528": 237, "18530": 237, "18532": 237, "18534": 237, "18536": 237, "18538": 237, "18540": 237, "18542": 237, "18544": 237, "18546": 237, "18548": 237, "18550": 237, "18552": 237, "18554": 237, "18556": 237, "18558": 237, "18560": 237, "18562": 237, "18564": 237, "18566": 237, "18568": 237, "18570": 237, "18572": 237, "18574": 237, "18576": 237, "18578": 237, "18580": 237, "18582": 237, "18584": 237, "18586": 237, "18588": 237, "18590": 237, "18592": 237, "18594": 237, "18596": 237, "18598": 237, "18600": 237, "18602": 237, "18604": 237, "18606": 237, "18608": 237, "18610": 237, "18612": 237, "18614": 237, "18616": 237, "18618": 237, "18620": 237, "18622": 237, "18624": 237, "18626": 237, "18628": 237, "18630": 237, "18632": 237, "18634": 237, "18636": 237, "18638": 237, "18640": 237, "18642": 237, "18644": 237, "18646": 237, "18648": 237, "18650": 237, "18652": 237, "18654": 237, "18656": 237, "18658": 237, "18660": 237, "18662": 237, "18664": 237, "18666": 237, "18668": 237, "18670": 237, "18672": 237, "18674": 237, "18676": 237, "18678": 237, "18680": 237, "18682": 237, "18684": 237, "18686": 237, "18688": 237, "18690": 237, "18692": 237, "18694": 237, "18696": 237, "18698": 237, "18700": 237, "18702": 237, "18704": 237, "18706": 237, "18708": 237, "18710": 237, "18712": 237, "18714": 237, "18716": 237, "18718": 237, "18720": 237, "18722": 237, "18724": 237, "18726": 237, "18728": 237, "18730": 237, "18732": 237, "18734": 237, "18736": 237, "18738": 237, "18740": 237, "18742": 237, "18744": 237, "18746": 237, "18748": 237, "18750": 237, "18752": 237, "18754": 237, "18756": 237, "18758": 237, "18760": 237, "18762": 237, "18764": 237, "18766": 237, "18768": 237, "18770": 237, "18772": 237, "18774": 237, "18776": 237, "18778": 237, "18780": 237, "18782": 237, "18784": 237, "18786": 237, "18788": 237, "18790": 237, "18792": 237, "18794": 237, "18796": 237, "18798": 237, "18800": 237, "18802": 237, "18804": 237, "18806": 237, "18808": 237, "18810": 237, "18812": 237, "18814": 237, "18816": 237, "18818": 237, "18820": 237, "18822": 237, "18824": 237, "18826": 237, "18828": 237, "18830": 237, "18832": 237, "18834": 237, "18836": 237, "18838": 237, "18840": 237, "18842": 237, "18844": 237, "18846": 237, "18848": 237, "18850": 237, "18852": 237, "18854": 237, "18856": 237, "18858": 237, "18860": 237, "18862": 237, "18864": 237, "18866": 237, "18868": 237, "18870": 237, "18872": 237, "18874": 237, "18876": 237, "18878": 237, "18880": 237, "18882": 237, "18884": 237, "18886": 237, "18888": 237, "18890": 237, "18892": 237, "18894": 237, "18896": 237, "18898": 237, "18900": 237, "18902": 237, "18904": 237, "18906": 237, "18908": 237, "18910": 237, "18912": 237, "18914": 237, "18916": 237, "18918": 237, "18920": 237, "18922": 237, "18924": 237, "18926": 237, "18928": 237, "18930": 237, "18932": 237, "18934": 237, "18936": 237, "18938": 237, "18940": 237, "18942": 237, "18944": 237, "18946": 237, "18948": 237, "18950": 237, "18952": 237, "18954": 237, "18956": 237, "18958": 237, "18960": 237, "18962": 237, "18964": 237, "18966": 237, "18968": 237, "18970": 237, "18972": 237, "18974": 237, "18976": 237, "18978": 237, "18980": 237, "18982": 237, "18984": 237, "18986": 237, "18988": 237, "18990": 237, "18992": 237, "18994": 237, "18996": 237, "18998": 237, "19000": 237, "19002": 237, "19004": 237, "19006": 237, "19008": 237, "19010": 237, "19012": 237, "19014": 237, "19016": 237, "19018": 237, "19020": 237, "19022": 237, "19024": 237, "19026": 237, "19028": 237, "19030": 237, "19032": 237, "19034": 237, "19036": 237, "19038": 237, "19040": 237, "19042": 237, "19044": 237, "19046": 237, "19048": 237, "19050": 237, "19052": 237, "19054": 237, "19056": 237, "19058": 237, "19060": 237, "19062": 237, "19064": 237, "19066": 237, "19068": 237, "19070": 237, "19072": 237, "19074": 237, "19076": 237, "19078": 237, "19080": 237, "19082": 237, "19084": 237, "19086": 237, "19088": 237, "19090": 237, "19092": 237, "19094": 237, "19096": 237, "19098": 237, "19100": 237, "19102": 237, "19104": 237, "19106": 237, "19108": 237, "19110": 237, "19112": 237, "19114": 237, "19116": 237, "19118": 237, "19120": 237, "19122": 237, "19124": 237, "19126": 237, "19128": 237, "19130": 237, "19132": 237, "19134": 237, "19136": 237, "19138": 237, "19140": 237, "19142": 237, "19144": 237, "19146": 237, "19148": 237, "19150": 237, "19152": 237, "19154": 237, "19156": 237, "19158": 237, "19160": 237, "19162": 237, "19164": 237, "19166": 237, "19168": 237, "19170": 237, "19172": 237, "19174": 237, "19176": 237, "19178": 237, "19180": 237, "19182": 237, "19184": 237, "19186": 237, "19188": 237, "19190": 237, "19192": 237, "19194": 237, "19196": 237, "19198": 237, "19200": 237, "19202": 237, "19204": 237, "19206": 237, "19208": 237, "19210": 237, "19212": 237, "19214": 237, "19216": 237, "19218": 237, "19220": 237, "19222": 237, "19224": 237, "19226": 237, "19228": 237, "19230": 237, "19232": 237, "19234": 237, "19236": 237, "19238": 237, "19240": 237, "19242": 237, "19244": 237, "19246": 237, "19248": 237, "19250": 237, "19252": 237, "19254": 237, "19256": 237, "19258": 237, "19260": 237, "19262": 237, "19264": 237, "19266": 237, "19268": 237, "19270": 237, "19272": 237, "19274": 237, "19276": 237, "19278": 237, "19280": 237, "19282": 237, "19284": 237, "19286": 237, "19288": 237, "19290": 237, "19292": 237, "19294": 237, "19296": 237, "19298": 237, "19300": 237, "19302": 237, "19304": 237, "19306": 237, "19308": 237, "19310": 237, "19312": 237, "19314": 237, "19316": 237, "19318": 237, "19320": 237, "19322": 237, "19324": 237, "19326": 237, "19328": 237, "19330": 237, "19332": 237, "19334": 237, "19336": 237, "19338": 237, "19340": 237, "19342": 237, "19344": 237, "19346": 237, "19348": 237, "19350": 237, "19352": 237, "19354": 237, "19356": 237, "19358": 237, "19360": 237, "19362": 237, "19364": 237, "19366": 237, "19368": 237, "19370": 237, "19372": 237, "19374": 237, "19376": 237, "19378": 237, "19380": 237, "19382": 237, "19384": 237, "19386": 237, "19388": 237, "19390": 237, "19392": 237, "19394": 237, "19396": 237, "19398": 237, "19400": 237, "19402": 237, "19404": 237, "19406": 237, "19408": 237, "19410": 237, "19412": 237, "19414": 237, "19416": 237, "19418": 237, "19420": 237, "19422": 237, "19424": 237, "19426": 237, "19428": 237, "19430": 237, "19432": 237, "19434": 237, "19436": 237, "19438": 237, "19440": 237, "19442": 237, "19444": 237, "19446": 237, "19448": 237, "19450": 237, "19452": 237, "19454": 237, "19456": 237, "19458": 237, "19460": 237, "19462": 237, "19464": 237, "19466": 237, "19468": 237, "19470": 237, "19472": 237, "19474": 237, "19476": 237, "19478": 237, "19480": 237, "19482": 237, "19484": 237, "19486": 237, "19488": 237, "19490": 237, "19492": 237, "19494": 237, "19496": 237, "19498": 237, "19500": 237, "19502": 237, "19504": 237, "19506": 237, "19508": 237, "19510": 237, "19512": 237, "19514": 237, "19516": 237, "19518": 237, "19520": 237, "19522": 237, "19524": 237, "19526": 237, "19528": 237, "19530": 237, "19532": 237, "19534": 237, "19536": 237, "19538": 237, "19540": 237, "19542": 237, "19544": 237, "19546": 237, "19548": 237, "19550": 237, "19552": 237, "19554": 237, "19556": 237, "19558": 237, "19560": 237, "19562": 237, "19564": 237, "19566": 237, "19568": 237, "19570": 237, "19572": 237, "19574": 237, "19576": 237, "19578": 237, "19580": 237, "19582": 237, "19584": 237, "19586": 237, "19588": 237, "19590": 237, "19592": 237, "19594": 237, "19596": 237, "19598": 237, "19600": 237, "19602": 237, "19604": 237, "19606": 237, "19608": 237, "19610": 237, "19612": 237, "19614": 237, "19616": 237, "19618": 237, "19620": 237, "19622": 237, "19624": 237, "19626": 237, "19628": 237, "19630": 237, "19632": 237, "19634": 237, "19636": 237, "19638": 237, "19640": 237, "19642": 237, "19644": 237, "19646": 237, "19648": 237, "19650": 237, "19652": 237, "19654": 237, "19656": 237, "19658": 237, "19660": 237, "19662": 237, "19664": 237, "19666": 237, "19668": 237, "19670": 237, "19672": 237, "19674": 237, "19676": 237, "19678": 237, "19680": 237, "19682": 237, "19684": 237, "19686": 237, "19688": 237, "19690": 237, "19692": 237, "19694": 237, "19696": 237, "19698": 237, "19700": 237, "19702": 237, "19704": 237, "19706": 237, "19708": 237, "19710": 237, "19712": 237, "19714": 237, "19716": 237, "19718": 237, "19720": 237, "19722": 237, "19724": 237, "19726": 237, "19728": 237, "19730": 237, "19732": 237, "19734": 237, "19736": 237, "19738": 237, "19740": 237, "19742": 237, "19744": 237, "19746": 237, "19748": 237, "19750": 237, "19752": 237, "19754": 237, "19756": 237, "19758": 237, "19760": 237, "19762": 237, "19764": 237, "19766": 237, "19768": 237, "19770": 237, "19772": 237, "19774": 237, "19776": 237, "19778": 237, "19780": 237, "19782": 237, "19784": 237, "19786": 237, "19788": 237, "19790": 237, "19792": 237, "19794": 237, "19796": 237, "19798": 237, "19800": 237, "19802": 237, "19804": 237, "19806": 237, "19808": 237, "19810": 237, "19812": 237, "19814": 237, "19816": 237, "19818": 237, "19820": 237, "19822": 237, "19824": 237, "19826": 237, "19828": 237, "19830": 237, "19832": 237, "19834": 237, "19836": 237, "19838": 237, "19840": 237, "19842": 237, "19844": 237, "19846": 237, "19848": 237, "19850": 237, "19852": 237, "19854": 237, "19856": 237, "19858": 237, "19860": 237, "19862": 237, "19864": 237, "19866": 237, "19868": 237, "19870": 237, "19872": 237, "19874": 237, "19876": 237, "19878": 237, "19880": 237, "19882": 237, "19884": 237, "19886": 237, "19888": 237, "19890": 237, "19892": 237, "19894": 237, "19896": 237, "19898": 237, "19900": 237, "19902": 237, "19904": 237, "19906": 237, "19908": 237, "19910": 237, "19912": 237, "19914": 237, "19916": 237, "19918": 237, "19920": 237, "19922": 237, "19924": 237, "19926": 237, "19928": 237, "19930": 237, "19932": 237, "19934": 237, "19936": 237, "19938": 237, "19940": 237, "19942": 237, "19944": 237, "19946": 237, "19948": 237, "19950": 237, "19952": 237, "19954": 237, "19956": 237, "19958": 237, "19960": 237, "19962": 237, "19964": 237, "19966": 237, "19968": 237, "19970": 237, "19972": 237, "19974": 237, "19976": 237, "19978": 237, "19980": 237, "19982": 237, "19984": 237, "19986": 237, "19988": 237, "19990": 237, "19992": 237, "19994": 237, "19996": 237, "19998": 237, "l_to_send": 237, "json_to_send": 237, "json_receiv": 237, "l_receiv": 237, "sine": [237, 278, 295], "140106668681968": 237, "wallclock_axi": 237, "1638538131": 237, "1975703": 237, "2978473": 237, "3981225": 237, "498449": 237, "5987027": 237, "698947": 237, "7996597": 237, "899947": 237, "1638538132": 237, "0001943": 237, "1010473": 237, "0b10110": 237, "0x16": [237, 815], "0b1011": [237, 272], "bit_3": 237, "0b00001": 237, "0b1": [237, 254, 324], "0b1000": [237, 254], "0b11110": 237, "bitwis": [237, 409, 442, 951, 955, 1042], "num1": [237, 254], "0b110101101": 237, "num2": [237, 254], "0b101110100": 237, "0b100100100": 237, "0b111111101": 237, "0b1010": 237, "0b10100": [237, 254], "1fuzzi2fuzzi3fuzzi4": 237, "0b11011001": 237, "abcdef": [237, 244, 250, 254], "cde": 237, "lexic": [237, 469, 776], "indexerror": [237, 254, 257, 275, 314, 336, 340, 357, 1022, 1075, 1144], "auer": 237, "aue": 237, "zerodivisionerror": [237, 250, 275, 1022], "lst1": 237, "lst2": 237, "toc": 238, "treeset": 238, "searchabl": [238, 241], "diesel": 238, "vibrat": 238, "lighter": 238, "sensorrandom": 238, "sensorsin": 238, "sensorconst": 238, "wild": [238, 240, 245, 280], "yesterai": 238, "deseri": [238, 250], "decod": [238, 250, 257, 260, 296, 302, 313, 316, 318, 324, 330, 1073, 1119], "swallow": [238, 856, 1022], "walkthrough": [238, 240, 245, 1191], "1h": 238, "exchangeformat": 238, "test_mqtt_format": 238, "parser": [238, 250, 304, 320, 368, 696, 1075, 1178], "mosquitto_sub": [238, 1139], "writer": [238, 784, 869], "deserializeerror": 238, "dangl": [238, 412, 583, 597], "fahrenheit": [240, 380, 382, 395, 410, 419, 426, 432, 436, 439, 443, 452, 456, 461, 462, 483, 684, 722, 775, 777, 778], "nonconst": [240, 595], "getchar": [240, 386, 388, 393, 402], "dry": 240, "verif": [240, 1128], "umlaut": [240, 241, 342, 1054, 1136], "\u00f6": [240, 260, 1136], "canari": 240, "asid": [240, 420, 421, 433, 695, 984], "brainfuck": 240, "nok": [240, 732, 978], "singli": [240, 439, 443, 452, 456, 461, 462, 684, 722, 775, 777, 778], "typedef": [240, 436, 439, 443, 452, 456, 461, 462, 682, 684, 722, 730, 746, 775, 777, 778, 845, 993], "commonplac": [240, 1181], "boundari": [240, 250, 296, 442, 756, 923], "neighborhood": 240, "signed": [240, 396, 445], "unsigned": 240, "excurs": [240, 486, 1122], "pointerarith": 240, "lower_bound": [240, 287, 326, 622, 627, 646, 650, 679, 778], "for_each": [240, 287, 627, 646, 650, 679, 730, 778], "diagram": [240, 486, 504, 506, 838, 922, 929, 931], "search_by_lastnam": [240, 675, 676, 677], "const_iter": [240, 577, 621, 624, 625, 626, 628, 643, 682, 697, 730, 731], "calloper": [240, 560], "exc": [240, 560], "ostream": [240, 560, 586, 746, 776, 1163], "paint": [240, 665, 679, 778], "reverse_copi": [240, 287, 560, 627, 646, 650, 679, 778], "cin": [240, 629, 647, 649, 665, 679, 778], "accumul": [240, 560], "raci": [240, 560], "wsl2": [240, 267, 269, 287, 289, 364], "libsqlite3": [240, 470], "libboost": 240, "libgtk": 240, "prosaic": 240, "roman": 240, "mad": [240, 444], "wxwidget": 240, "lieb": [241, 302, 318], "gr\u00fc\u00dfe": [241, 302, 318], "utf8": 241, "distil": [241, 301, 331, 339, 343, 1020, 1092], "4j": 242, "unlimitxdeadbeef": [242, 244, 250, 296, 302, 352, 541], "3735928559": [242, 244, 250, 254, 296, 302, 352], "0b10010011": 242, "ippi": 242, "0b0101": 242, "0101": 242, "teifl": [242, 330], "fun1": 242, "fun2": 242, "nsecond": [242, 1067], "rline": 242, "carriag": [242, 399, 1067], "linet": 242, "neuer": 242, "ordner": 242, "euer": 242, "syntaxwarn": [242, 275, 1022], "ipykernel_258993": 242, "837361033": 242, "regex_str": [242, 260], "calim": 242, "yaaai": 242, "needl": [242, 340, 1061, 1069], "haystack": [242, 340, 1061, 1069], "finit": [242, 291, 414, 914], "haystack_s": 242, "0x7fe78c576ee0": 242, "list_iter": [242, 260, 314, 324, 330, 340], "0x7fe78c577910": 242, "unicode_code_point": 242, "l_new": 242, "ijk": 242, "mengenlehr": 242, "s1": [242, 250, 254, 257, 260, 275, 282, 292, 302, 314, 324, 330, 340, 486, 503, 533, 592, 686, 692, 740, 762, 764, 766, 768, 1072], "s2": [242, 250, 254, 257, 260, 275, 282, 292, 302, 314, 324, 330, 340, 486, 503, 533, 592, 686, 692, 740, 762, 764, 766, 1072], "gunnar": 242, "liam": 242, "maximumum": 242, "variable2": 242, "maximum2": 242, "mrmr": 242, "einser": 242, "square_numb": [242, 1070], "squares_gener": 242, "other_d": [242, 275], "nove": 242, "isspac": [242, 244, 247, 250, 275, 296, 324, 330, 1069], "buchhaltung": [242, 885, 907, 908], "startswith": [242, 250, 279, 280, 282, 296, 336, 466, 1069, 1142], "buch": [242, 1173], "oooo": 242, "isupp": [242, 250, 260, 296, 330, 336, 340, 1069], "zz": 242, "traurig": 242, "substr": [242, 244, 250, 260, 275, 282, 296, 314, 318, 324, 330, 336, 340, 1163], "gid": [242, 250, 318, 336, 776, 852, 853, 860, 862, 870, 942, 957, 1101], "count_byt": 242, "nbyte": 242, "miscellanea": [243, 945], "brace": [243, 250, 296, 386, 409, 412, 424, 484, 577, 586, 618, 620, 625, 638, 639, 682, 722, 731, 775, 777, 778, 1051, 1054], "hour_of_dai": 243, "ein_str": 244, "ein_anderer_str": 244, "fghjgfgh": 244, "dfghgfgh": 244, "do_someth": [244, 263, 352, 415, 417, 425, 440, 454, 739, 1051], "komplett": [244, 330], "returnwert": [244, 1173], "sinnloser": 244, "weis": [244, 1194], "vorgenommen": 244, "obacht": 244, "140672599989840": 244, "140672464974720": 244, "hoechst": [244, 282], "rechnern": 244, "100000": [244, 260, 695, 930, 1128], "": [244, 260], "exponenti": [244, 1054, 1068], "__annotations__": [244, 254, 275, 296, 310, 1023], "__closure__": [244, 254, 275, 296], "__code__": [244, 254, 275, 296], "__delattr__": [244, 247, 250, 254, 272, 275, 296, 314, 336], "__dir__": [244, 247, 254, 272, 275, 296, 314, 336], "__format__": [244, 247, 250, 254, 272, 275, 296, 314, 336], "__ge__": [244, 247, 250, 254, 272, 275, 296, 314, 336, 1042], "__get__": [244, 254, 275, 296], "__getattribute__": [244, 247, 250, 254, 272, 275, 296, 314, 336], "__globals__": [244, 254, 275, 296], "__gt__": [244, 247, 250, 254, 272, 275, 296, 314, 336], "__hash__": [244, 247, 250, 254, 272, 275, 296, 314, 324, 336], "__init_subclass__": [244, 247, 254, 272, 275, 296, 314, 336], "__kwdefaults__": [244, 254, 275, 296], "__ne__": [244, 247, 250, 254, 272, 275, 296, 314, 336, 1042], "__new__": [244, 247, 250, 254, 272, 275, 296, 314, 336], "__qualname__": [244, 254, 275, 296], "__reduce__": [244, 247, 250, 254, 272, 275, 296, 314, 336], "__reduce_ex__": [244, 247, 254, 272, 275, 296, 314, 336], "__setattr__": [244, 247, 250, 254, 272, 275, 296, 314, 336], "__sizeof__": [244, 247, 250, 254, 272, 275, 296, 314, 336], "__subclasshook__": [244, 247, 254, 272, 275, 296, 314, 336], "karteikart": 244, "my_formatted_person": 244, "123425041997": 244, "caros_str": 244, "joergs_str": 244, "0x7ff0dc48b490": 244, "next_po": 244, "tim": [244, 254, 348, 349], "ugli": [244, 254, 268, 277, 278, 291, 298, 299, 381, 386, 560, 778, 850, 855, 880, 881, 921, 1020, 1021], "flat": [244, 254, 433, 459, 460, 992, 993], "puriti": [244, 254], "silenc": [244, 254, 425, 868], "ambigu": [244, 254, 412, 447, 448, 449, 596, 696, 885], "refus": [244, 254, 263, 476, 798, 851, 922, 938, 997], "temptat": [244, 254], "dutch": [244, 254], "honk": [244, 254], "wahr": 244, "falsch": [244, 257, 1180], "kriegt": 244, "nachkommastellen": 244, "moeglichkeit": 244, "f_str": 244, "punkt_po": 244, "nachkomma_str": 244, "praezedenz": 244, "wandel": 244, "vorn": 244, "anhaengen": 244, "wuenschen": 244, "wuerd": 244, "appendleft": 244, "extendleft": 244, "relem": 244, "popleft": 244, "sorted_l": 244, "sorted_t": 244, "sorted_": 244, "subtext": 244, "ssissippi": 244, "140672464726576": 244, "copied_text": 244, "140672464784832": 244, "140672464784064": 244, "140672599989872": 244, "140672464751872": 244, "140672464768512": 244, "140672464594880": 244, "jkl": 244, "suesser": [244, 250, 257, 260, 263, 279], "sechser_gewuerfelt": 244, "n_tri": [244, 247, 282, 324, 330, 336, 340, 1058], "versag": [244, 282], "eva": [244, 296, 340, 1061], "xrang": [244, 1062], "0x7ff0dc48bed0": 244, "hann": 244, "gruess": 244, "gott": [244, 275, 375], "fill_in_us": 244, "scho": 244, "my_db": 244, "uniq_dict": 244, "konfigurierbaren": 244, "startwert": 244, "ausgibt": 244, "sqnum": 244, "0x7ff014b01820": 244, "xslx": 244, "yz": 244, "lret": 244, "ochwa": 244, "unbalanc": 245, "geospati": 245, "gdal": 245, "sweigart": [245, 259, 301, 1123], "datenypen": 246, "libarari": 246, "chainmap": 246, "dequ": [246, 754], "suchalgorithmen": 246, "51139385": 247, "77397a312b47": 247, "50924272": [247, 250], "20210728": [247, 250, 1049], "eine_komplizierte_funkt": 247, "endeffekt": 247, "zusammenzuzaehlen": 247, "tarnt": 247, "vergeblich": 247, "komplexitaet": 247, "zahl_als_str": 247, "bledsinn": 247, "try_no": 247, "blahblahblah": 247, "cxyxyyyyxi": 247, "table_str": 247, "table_dict": 247, "139769175732912": 247, "139769175738624": 247, "satan_str": 247, "satan_int": 247, "result_of_print": 247, "result_of_evald_print": 247, "code_str": [247, 257], "compiled_cod": 247, "woswasi": [247, 254], "0x7f1e91eb42f0": 247, "philipp": [247, 254, 257, 275, 282, 296, 314, 324, 484, 559, 631, 643, 675, 677, 1112, 1114, 1118, 1120, 1140, 1141, 1142, 1144, 1145, 1146, 1147], "lastnma": 247, "0x7f1e8c0fe2e0": 247, "__abs__": [247, 254, 272, 336], "__and__": [247, 254, 314, 336, 1042], "__bool__": [247, 254, 272, 336], "__ceil__": [247, 254, 272, 336], "__divmod__": [247, 254, 272, 336], "__float__": [247, 254, 272, 296, 336], "__floor__": [247, 254, 272, 336], "__floordiv__": [247, 254, 272, 336, 1042], "__getnewargs__": [247, 250, 254, 272, 296, 336], "__index__": [247, 254, 336], "__int__": [247, 254, 272, 296, 313, 336], "__invert__": [247, 254, 336], "__lshift__": [247, 254, 336, 1042], "__mod__": [247, 250, 254, 272, 296, 336, 1042], "__mul__": [247, 250, 254, 272, 296, 336, 1042], "__neg__": [247, 254, 272, 336], "__or__": [247, 254, 314, 336, 1042], "__pos__": [247, 254, 272, 336], "__pow__": [247, 254, 272, 336, 1042], "__rand__": [247, 254, 314, 336], "__rdivmod__": [247, 254, 272, 336], "__rfloordiv__": [247, 254, 272, 336], "__rlshift__": [247, 254, 336], "__rmod__": [247, 250, 254, 272, 296, 336], "__rmul__": [247, 250, 254, 272, 296, 336], "__ror__": [247, 254, 314, 336], "__round__": [247, 254, 272, 336], "__rpow__": [247, 254, 272, 336], "__rrshift__": [247, 254, 336, 1042], "__rshift__": [247, 254, 336, 1042], "__rsub__": [247, 254, 272, 314, 318, 336, 1042], "__rtruediv__": [247, 254, 272, 336], "__rxor__": [247, 254, 314, 336], "__sub__": [247, 254, 272, 314, 318, 336, 1042], "__truediv__": [247, 254, 272, 336, 1042], "__trunc__": [247, 254, 272, 336], "__xor__": [247, 254, 314, 336, 1042], "as_integer_ratio": [247, 254, 272, 336], "bit_length": [247, 254, 336], "conjug": [247, 254, 272, 336], "denomin": [247, 254, 336], "from_byt": [247, 254, 336], "to_byt": [247, 254, 336], "0x7f1e8c0b3130": 247, "int_list": 247, "0x7f1e8c0fe340": 247, "0x7f1e8c0fe760": 247, "u1": 247, "u2": 247, "type_of_us": 247, "scrambl": 247, "hansj\u00f6rg": [247, 466], "gr\u00f6jsnah": 247, "class_str": 247, "1997": [247, 257, 1048, 1112, 1114, 1118, 1120], "0x7f1e8c1c2e50": 247, "joleckmi": 247, "cmdline": 248, "excess": [248, 415], "provocantli": 248, "pybai": [248, 317, 1123], "suchzeit": 249, "everywher": [249, 264, 445, 460, 476, 686, 837, 975, 1061], "d_as_str": 250, "received_d": 250, "1939": 250, "145415": 250, "bytes_or_buff": [250, 296], "expos": [250, 296, 574, 660, 856, 922, 930, 931, 965], "strict": [250, 270, 296, 314, 481, 495, 502, 516, 530, 582, 778, 1072, 1152], "__contains__": [250, 296, 314], "format_spec": [250, 275, 296], "getattr": [250, 254, 275, 296, 1036], "__getitem__": [250, 296, 1144, 1145], "__iter__": [250, 296, 314, 1027], "__len__": [250, 296, 314], "casefold": [250, 296], "caseless": [250, 296], "fillchar": [250, 296], "pad": [250, 296, 1068], "occurr": [250, 296, 389], "codec": [250, 257, 260, 296, 302, 318, 324, 330, 1136], "unicodeencodeerror": [250, 257, 260, 275, 296, 302, 318, 1022, 1136], "xmlcharrefreplac": [250, 296], "register_error": [250, 296], "suffix": [250, 296], "expandtab": [250, 275, 296, 324], "tabsiz": [250, 296], "lowest": [250, 296, 409, 415, 985, 986, 1073], "format_map": [250, 296], "isalnum": [250, 296, 336, 1069], "alphabet": [250, 296, 389, 444, 466, 869, 1136], "isascii": [250, 296], "007f": [250, 296], "isdecim": [250, 296], "iskeyword": [250, 260, 296], "isnumer": [250, 296], "isprint": [250, 296, 389, 417], "printabl": [250, 296, 389, 1022], "istitl": [250, 296], "uncas": [250, 296], "pq": [250, 296], "ljust": [250, 296], "removeprefix": [250, 296], "removesuffix": [250, 296], "rindex": [250, 296, 1069], "rpartit": [250, 296], "discard": [250, 296, 314, 448, 594, 595, 732, 867, 868], "splitlin": [250, 296], "keepend": [250, 296], "swapcas": [250, 296], "titlecas": [250, 296], "lookuperror": [250, 275, 296, 1022], "untouch": [250, 296, 825], "zfill": [250, 296], "maketran": [250, 296], "numerischen": 250, "ecma": 250, "3rd": [250, 784], "interchang": [250, 664, 746, 1136], "marshal": 250, "pickl": [250, 254], "simplejson": 250, "foo": [250, 282, 292, 296, 314, 318, 324, 330, 336, 340, 554, 695, 728, 746, 758, 1022, 1063], "baz": 250, "u1234": 250, "sort_kei": 250, "getvalu": 250, "compact": [250, 415], "mydict": 250, "obj": [250, 275, 318, 330, 522, 793, 794, 803, 1036, 1044, 1144, 1145], "x08ar": 250, "as_complex": 250, "dct": 250, "__complex__": 250, "object_hook": 250, "2j": 250, "parse_float": 250, "encode_complex": 250, "serializ": 250, "1j": 250, "jsonencod": 250, "iterencod": 250, "scanner": 250, "jsondecodeerror": 250, "jsondecod": 250, "msg": [250, 263, 324, 336, 400, 485, 489, 989, 991, 992, 996, 1018, 1021, 1022], "unformat": 250, "lineno": [250, 257, 324], "colno": 250, "delattr": [250, 254, 275], "setattr": [250, 254, 275, 1036], "__setstate__": [250, 254], "with_traceback": [250, 254], "tb": [250, 254, 330], "__traceback__": [250, 254], "__cause__": [250, 254], "__context__": [250, 254], "__suppress_context__": [250, 254], "parse_int": 250, "parse_const": 250, "object_pairs_hook": 250, "nan": [250, 282, 1128, 1140], "num_str": 250, "_w": 250, "0x7f99fff1bb70": 250, "raw_decod": 250, "extran": 250, "skipkei": 250, "ensure_ascii": 250, "check_circular": 250, "allow_nan": 250, "recogn": [250, 610, 931, 1179], "sensibl": 250, "circular": 250, "recursionerror": [250, 275, 1022], "compliant": [250, 1035], "item_separ": 250, "key_separ": 250, "_one_shot": 250, "chunk": [250, 357, 445, 819, 957, 1125, 1136], "bigobject": 250, "mysocket": 250, "fp": 250, "inf": 250, "complianc": 250, "ippolito": 250, "redivi": 250, "140299267714496": 250, "140299267930496": 250, "schweissparameter_aussi": 250, "strom_ma": 250, "200004": 250, "spannung_v": 250, "aufs_kabel": 250, "maschine_112": 250, "kabel": [250, 254], "vom_kabel": 250, "schweissparameter_eini": 250, "strom_a": 250, "hal": 250, "2c445fb3": 250, "6ca4": 250, "b9d9": 250, "7cfbbff55326": 250, "doesnt_exist": 250, "_a666": 250, "140299402960464": 250, "0b10000000000000000000000000000000000000000000000000000000000000000": [250, 254, 275, 292, 330, 336, 340], "140299327492352": 250, "func_fals": 250, "func_tru": 250, "sex_opt": 250, "140298898107648": 250, "t_mit_einem_el": 250, "supi": 250, "squares_map": 250, "squares_set": 250, "numtri": 250, "even_numb": [250, 314], "mississppi": 250, "xxxx": 250, "nbin": [250, 257, 282, 296, 318], "ndaemon": [250, 257, 282, 296, 318], "nadm": [250, 257, 282, 296, 318, 330, 336], "nlp": [250, 257, 282, 296, 318, 330, 336], "nsync": [250, 257, 282, 296, 318, 330, 336], "nshutdown": [250, 257, 282, 296, 318, 330, 336], "nhalt": [250, 257, 282, 296, 318, 330, 336], "nmail": [250, 257, 282, 296, 318, 330, 336], "noper": [250, 257, 282, 296, 318, 330, 336], "ngame": [250, 257, 282, 296, 318, 330, 336], "nftp": [250, 257, 282, 296, 318, 330, 336], "nnobodi": [250, 257, 282, 296, 318, 330, 336], "napach": [250, 257, 282, 296, 318, 330, 336], "nsystemd": [250, 257, 282, 296, 318, 330, 336], "ntss": [250, 257, 282, 296, 318, 330, 336], "ndbu": [250, 257, 282, 296, 318, 330, 336], "npolkitd": [250, 257, 282, 296, 318, 330, 336], "navahi": [250, 257, 282, 296, 318, 330, 336], "nunbound": [250, 257, 282, 296, 318, 330, 336], "ndnsmasq": [250, 257, 282, 296, 318, 330, 336], "nnm": [250, 257, 282, 296, 318, 330, 336], "nusbmuxd": [250, 257, 282, 296, 318, 330, 336], "ngluster": [250, 257, 282, 296, 318, 330, 336], "nrtkit": [250, 257, 282, 296, 318, 330, 336], "npipewir": [250, 257, 282, 296, 318, 330, 336], "ngeoclu": [250, 257, 282, 296, 318, 330, 336], "nchroni": [250, 257, 282, 296, 318, 330, 336], "nsaslauth": [250, 257, 282, 296, 318, 330, 336], "nradvd": [250, 257], "nrpc": [250, 257, 282, 296, 318, 330, 336], "nqemu": [250, 257, 282, 296, 318, 330, 336], "nopenvpn": [250, 257, 282, 296, 318, 330, 336], "ncolord": [250, 257, 282, 296, 318, 330, 336, 947], "nrpcuser": [250, 257, 282, 296, 318, 330, 336], "nabrt": [250, 257, 282, 296, 318, 330, 336], "nflatpak": [250, 257, 282, 296, 318, 330, 336], "ngdm": [250, 257, 282, 296, 318, 330, 336], "ngnome": [250, 257, 282, 296, 318, 330, 336], "nvboxadd": [250, 257, 282, 296, 318, 330, 336], "nsshd": [250, 257, 282, 296, 318, 330, 336], "ntcpdump": [250, 257, 282, 296, 318, 330, 336], "njfasch": [250, 257, 282, 296, 318, 330, 336], "nmosquitto": [250, 257, 282, 296, 318, 330], "nsomeon": [250, 257], "1001": [250, 257, 260, 639, 640, 641, 642, 870, 882, 913, 942], "move_to_end": 250, "thermometera": 250, "thermometerb": 250, "get_average_temperatur": 250, "th_list": 250, "ipykernel_9164": 250, "859664274": 250, "2942790015": 250, "0x7fac83797be0": 250, "basisklass": 250, "level2_1": 250, "l21": 250, "level2_2": 250, "level3": 250, "jedi": 250, "blueey": 250, "droid": 250, "r2d2": 250, "derivednoctor": 250, "dnoctor": 250, "derivedctorcallingsup": 250, "derivedctorcallingbasector": 250, "__firstnam": 250, "__lastnam": 250, "_user__firstnam": 250, "_user__lastnam": 250, "lightsab": 250, "padawan": 250, "arithmeticerror": [250, 275, 1022], "waaah": 250, "abgebrannt": 250, "puh": 250, "intakt": 250, "is_even": [250, 254, 324, 330, 699, 700, 701, 702], "0x7fac81f52df0": 250, "0x7fac81cb5700": 250, "progamm": 250, "tumpfback": 250, "och": 250, "umpfback": 250, "rt": [250, 778, 802, 806, 816, 827, 829, 834, 837, 840, 843, 846, 921], "wholefil": 250, "notepad": 251, "betreiben": [251, 1180, 1187, 1188], "unterschiedlichen": 251, "sinnvol": 251, "umgebungen": 251, "unausweichlich": 251, "installationsverzeichni": 251, "verzeichniss": [251, 1182], "ausf\u00fchren": 251, "hernimmt": 251, "wei\u00df": 251, "rennt": 251, "ordereddict": 252, "__mro__": 252, "udemi": 252, "successor": [253, 409], "repeatedli": [253, 639, 1135], "kantenlaeng": 254, "ipykernel_101004": 254, "2437887948": 254, "0x10": [254, 257, 340, 473], "0b1111111111111111111111111111111111111111111111111111111111111111": [254, 275, 292, 296, 324, 330, 336, 340], "1267650600228229401496703205381": 254, "735611673": 254, "ndigit": [254, 275, 324, 340, 388], "0b101": 254, "0b100": [254, 257], "register_statu": 254, "0b1001000": 254, "0b00001000": 254, "strom": [254, 324], "liegt_strom_an": 254, "0b00111110": 254, "ever": [254, 314, 464, 473, 504, 864, 930, 1053, 1176], "deadbeef": [254, 541, 924], "gross": 254, "doktor": 254, "jawui": 254, "akademik": 254, "ndef": [254, 324], "tdef": [254, 275], "geh": 254, "hochkomplex": [254, 330], "verendet": 254, "euler": 254, "sche": 254, "dokumentiern": 254, "koennt": 254, "varianc": 254, "fmean": 254, "geometric_mean": 254, "harmonic_mean": 254, "harmon": 254, "median": 254, "median_low": 254, "median_high": 254, "median_group": 254, "50th": 254, "percentil": 254, "multimod": 254, "quantil": 254, "centr": 254, "nearest": [254, 507, 1130], "doctest": 254, "ellipsi": [254, 275], "8333333333": 254, "8333": 254, "spread": 254, "pvarianc": 254, "pstdev": 254, "stdev": [254, 985, 987], "38961843444": 254, "recalcul": 254, "statisticserror": 254, "normaldist": 254, "x1": 254, "unchang": [254, 683, 1016], "jointli": 254, "rescal": 254, "cdf": 254, "cumul": [254, 458], "inv_cdf": 254, "coeffici": 254, "ovl": 254, "agreement": 254, "densiti": 254, "8035050657330205": 254, "dx": 254, "quartil": 254, "decil": 254, "zscore": 254, "score": 254, "from_sampl": 254, "readonli": 254, "dataset": [254, 1126, 1128, 1141, 1143, 1145, 1147], "subcontrari": 254, "reciproc": 254, "quantiti": [254, 286, 1130], "earn": 254, "5625": 254, "midpoint": 254, "estim": 254, "nomin": 254, "taught": [254, 1046, 1181], "aabbbbbbbbcc": 254, "aabbbbccddddeeffffgg": 254, "986893273527251": 254, "0th": 254, "100th": 254, "xbar": 254, "0810874155219827": 254, "3720238095238095": 254, "01875": 254, "gesamter_gruss": 254, "excelsheet": 254, "hinters": 254, "gabali": 254, "helen": 254, "fischer": 254, "sssklndkfgv": 254, "fosvh": 254, "worl": [254, 257, 1060], "lowr": 254, "dlrow": [254, 1060], "olleh": [254, 1060], "even_numbers_fun": 254, "even_numbers_gen": 254, "evennum": 254, "even_filt": 254, "tausend": 254, "1234250497": [254, 257, 260, 263, 484, 491, 643], "1234250597": 254, "users_json_str": 254, "liest": 254, "kontrah": 254, "verwandelt": 254, "gelesenes_ding_wieder_als_dict": 254, "schatz": 254, "erich": 254, "koxi": 254, "hatkeinenwert": 254, "fn": [254, 449, 466, 776, 1147], "ul": [254, 403], "ln": [254, 449], "1st": [255, 1165], "einschub": 255, "filterketten": 255, "datensatz": 255, "letzten": 255, "recapitul": 256, "naeherungsverfahren": 257, "addieren": 257, "140606563548752": 257, "wirklich": [257, 1171], "0o10": 257, "teilbar": 257, "00001": 257, "abd": [257, 609], "i1": [257, 292], "140606428182128": 257, "140606428182896": 257, "2345010101": 257, "elizabeth": [257, 1112, 1114, 1118, 1120, 1131], "1901": 257, "evi": 257, "maxim": [257, 464, 931], "wuerfeln": [257, 341], "freuen": 257, "sechser": 257, "faellt": 257, "jammern": 257, "versuch_numm": 257, "versuchen": 257, "jammert": 257, "hlo": [257, 1060], "output_list": [257, 1105], "nullt": 257, "34567654567": 257, "gsd": 257, "another_t": 257, "symmetisch": 257, "netzwerkkommunik": 257, "request_to_send": 257, "request_str_to_send": 257, "1651046407": 257, "3633313": 257, "cabl": [257, 856], "request_str_from_c": 257, "request_from_c": 257, "1651046335": 257, "8477345": 257, "139909434561408": 257, "139909544402512": 257, "139909544402544": 257, "139909543772528": 257, "139909433666288": 257, "roo": [257, 296, 916], "xf6": [257, 260, 302, 1054, 1136], "joerg_latin": 257, "xf6rg": [257, 260, 302, 314, 318, 1136], "j\u0456rg": [257, 260, 302, 318, 1136], "cyclic": 259, "140616191009600": 260, "140616191012720": 260, "140116274372176": 260, "0x7f6f5cc2de50": 260, "0x7f6f5cc2df30": 260, "18446744073709551617": 260, "multi_dict": 260, "ipykernel_189565": 260, "1743780635": 260, "140115753096128": 260, "ntri": 260, "bytes_joerg": 260, "bytes_joerg_iso_latin_1": 260, "bytes_joerg_utf_32": 260, "xff": [260, 302, 318], "xfe": [260, 302, 318], "x00": [260, 302, 318, 929], "x00j": [260, 302], "x00r": [260, 302], "x00g": [260, 302], "bytes_joerg_utf_16": 260, "xfej": 260, "bytes_joerg_utf_8": 260, "xc3": [260, 296, 302, 318, 1054, 1136], "xb6rg": [260, 296, 302, 318, 1136], "iso_latin_1": 260, "russian": 260, "bytes_received_by_russian": 260, "2435": 260, "010d": 260, "0000000666": 260, "ssi": 260, "garbag": [260, 459, 466, 482, 741, 753, 931, 958, 1020], "ipykernel_4000": 260, "3227798639": 260, "ahja": 260, "24000": 260, "24500": 260, "25000": 260, "25500": 260, "26000": 260, "26500": 260, "__del__": 260, "whe": 260, "13397": 260, "116985": 260, "120725": 260, "118110": 260, "0x7fe3a392aa30": 260, "test_person_bas": 262, "pluggi": [262, 280, 1111, 1156], "rootdir": [262, 280, 825, 1111, 1156], "test_persondb_bas": 262, "test_pytest_demo": 262, "xfail": [262, 1156], "test_persondb": 262, "test_duplicate_svnr": 262, "test_update_sunnycas": 262, "test_update_notexist": 262, "test_update_exact_dupl": 262, "former": [262, 1063], "persondb": 262, "sqlite": [262, 470, 1079, 1132], "ics_demand": 262, "maco": [262, 357, 362], "woe": 262, "homebrew": 262, "brew": 262, "flaviocop": 262, "str_mit_666": 263, "140240419976192": 263, "140240419593568": 263, "aclass": 263, "almostempti": 263, "beenther": 263, "kuckucksei": 263, "chirp": 263, "some_bullshit": 263, "bad_thing_happen": 263, "do_some_bullshit": 263, "boah": [263, 324], "python_cod": 263, "a_global_vari": 263, "globale_vari": 263, "140240513015376": 263, "140240513014256": 263, "140240419270768": 263, "140240419271792": 263, "storesanintegerandmodifiesit": 263, "the_int": 263, "my_int": 263, "saiami": 263, "storesalistandmodifiesit": 263, "the_list": 263, "append_someth": 263, "salami": 263, "compute_squar": 263, "satanicerror": 263, "jess": 263, "invalidsvnr": 263, "rex_lin": 263, "json_str": [263, 1119], "python_l": 263, "0x7f8c0551f490": 263, "behandlung": 265, "kurzer": 265, "reicht": [265, 1171], "unwichtig": 265, "weggelassen": 265, "\u00fc": [265, 1136], "jeden": 265, "teilnehmer\u00fcbung": 265, "kernsprach": 265, "rvalu": [265, 287, 327, 585, 690, 722, 732, 738, 741, 742, 743, 744, 747, 755, 775, 777, 778, 1175, 1176, 1177], "constexpr": [265, 266, 267, 287, 289, 327, 722, 732, 756, 776, 777, 778, 1176], "uniform": [265, 266, 267, 269, 326, 464, 484, 586, 618, 638, 639, 682, 722, 731, 775, 777, 778, 1035, 1176], "initialisierung": [265, 1192], "infer": 265, "speichermodel": 265, "atomar": [265, 1174, 1192], "standardbibliothek": 265, "regu\u00e4r": 265, "trait": 265, "zufallszahlen": 265, "zeitbibliothek": 265, "sprachsyntax": 265, "deduct": [265, 697, 699], "erweiterungen": 265, "ge\u00e4ndert": 265, "definitionen": 265, "bibliothek": 265, "zusatzvari": 265, "constinit": 265, "modularisierung": [265, 358, 1173], "versionierung": 265, "routinen": 265, "synchronisierung": 265, "werkzeug": [265, 1173, 1180, 1182, 1187, 1190], "kalend": [265, 1170], "zeitzonen": 265, "zus\u00e4tz": 265, "chrono": [265, 266, 267, 269, 278, 326, 489, 682, 743, 754, 755, 759, 777, 778], "initializer_list": [266, 267, 269, 326, 327, 485, 486, 513, 514, 682, 684, 722, 777, 778], "handwrit": [266, 267, 269, 326, 722, 738, 777, 778], "weak_ptr": [266, 267, 269, 326, 327, 738, 775, 777, 778], "boilerpl": [266, 267, 269, 305, 321, 326, 327, 471, 722, 723, 724, 742, 777, 778, 1001, 1172], "condition_vari": [266, 267, 269, 278, 326, 755, 777, 778, 1176], "emplace_back": [266, 267, 618], "cref": [266, 267], "interoper": [267, 269, 287, 289], "wazoo": [267, 269, 287, 289], "anviron": [267, 269], "submodul": [267, 269, 539, 602], "chdir": [267, 269, 330], "gtest_main": [267, 489, 538, 540, 541, 561, 564, 576, 602, 740, 741, 1162, 1167], "dummy_suit": 267, "sticki": [268, 277, 278, 298, 299, 357, 362, 778, 855, 880, 921], "insod": 269, "lvalu": [269, 326, 327, 690, 691, 694, 722, 732, 738, 742, 747, 755, 775, 777, 778], "afterword": [269, 326, 327, 691, 722, 777, 778], "ain": [269, 464, 1050], "singleton": [270, 330, 481, 482, 488, 502, 516, 530, 582, 778, 1179], "inflex": [270, 384, 481, 495, 502, 508, 509, 516, 530, 582, 778], "proxi": [270, 288, 290, 291, 312, 316, 363, 481, 488, 490, 491, 502, 516, 530, 582, 778, 1151, 1179], "serverthread": [270, 506, 520], "my_si": [272, 1030], "function_returns_two_valu": 272, "140134238766608": 272, "sizeof": [272, 388, 398, 409, 430, 437, 438, 442, 445, 565, 577, 589, 617, 683, 745, 925, 943, 947, 948, 949, 955, 956, 957, 958, 983, 989, 992, 996, 1062], "__getformat__": 272, "__setformat__": 272, "fromhex": 272, "0b0010": 272, "0b1001": 272, "key_list": 272, "key_tupl": 272, "evil_list": 272, "evil_list_2": 272, "neinem": 272, "nviel": 272, "doze_path": [272, 275], "compiled_regex": 272, "l_json": 272, "l_json_sent": 272, "received_data": 272, "0x7f73869f06c0": 272, "create_avg_item": 272, "ninetynin": 272, "koppel": 274, "netzwerk": [274, 358, 1180, 1190, 1193], "condens": [274, 329, 465], "nprint": 275, "noption": 275, "nfile": 275, "nsep": 275, "nend": 275, "nflush": 275, "forcibli": 275, "didact": [275, 375, 378, 601, 603, 604, 1179], "fullnam": [275, 282, 1039, 1043], "nerst": 275, "nzweit": [275, 330, 352], "andere_list": 275, "neue_list": 275, "140323934455312": 275, "140323934455344": 275, "140323934455376": 275, "140323852147712": 275, "140323933649904": 275, "140323833601584": 275, "frozenset": [275, 292, 313], "__builtins__": [275, 296, 330, 1023], "gr\u00fc\u00df": 275, "nocheinprogramm": 275, "ocheinprogramm": 275, "dfghgfdfghj": 275, "jhghgh": 275, "matchstr": 275, "compiled_match": 275, "tprint": 275, "num_ss": 275, "isi": [275, 543, 559, 1140], "strippeditem": 275, "yet_another_d": 275, "s3": [275, 282, 503], "s4": 275, "isdisjoint": [275, 282, 314, 1072], "nnoteworthi": 275, "nil": 275, "__package__": [275, 350, 1023], "__loader__": [275, 350, 1023], "__spec__": [275, 350, 1023], "modulespec": 275, "loader": [275, 454, 472, 477, 999, 1016, 1190], "__build_class__": 275, "__import__": 275, "dont_inherit": 275, "_feature_vers": 275, "divmod": 275, "raw_input": 275, "ipkernel": 275, "ipythonkernel": 275, "0x7f9fb16abcd0": 275, "class_or_tupl": 275, "aiter": 275, "async_iter": 275, "anext": 275, "oct": [275, 907, 929, 931], "pow": [275, 594, 595, 745], "exp": [275, 518], "notimpl": [275, 314, 318, 336, 1042], "memoryview": 275, "__debug__": 275, "stopasynciter": [275, 1022], "generatorexit": [275, 1022], "keyboardinterrupt": [275, 291, 1022], "importerror": [275, 1022], "environmenterror": [275, 1151], "ioerror": [275, 1157], "eoferror": [275, 1022], "notimplementederror": [275, 1022], "unboundlocalerror": [275, 1022], "indentationerror": [275, 1022], "taberror": [275, 1022], "unicodeerror": [275, 1022], "unicodedecodeerror": [275, 318, 324, 330, 1022], "unicodetranslateerror": [275, 1022], "floatingpointerror": [275, 1022], "overflowerror": [275, 1022], "systemerror": [275, 1022], "referenceerror": [275, 1022], "memoryerror": [275, 1022], "buffererror": [275, 1022], "userwarn": [275, 1022], "encodingwarn": [275, 1022], "deprecationwarn": [275, 1022], "pendingdeprecationwarn": [275, 1022], "runtimewarn": [275, 1022], "futurewarn": [275, 1022, 1140], "importwarn": [275, 1022], "unicodewarn": [275, 1022], "byteswarn": [275, 1022], "resourcewarn": [275, 1022], "connectionerror": [275, 1022], "blockingioerror": [275, 1022], "brokenpipeerror": [275, 1022], "childprocesserror": [275, 1022], "connectionabortederror": [275, 1022], "connectionrefusederror": [275, 1022], "connectionreseterror": [275, 1022], "fileexistserror": [275, 1022], "isadirectoryerror": [275, 1022], "notadirectoryerror": [275, 1022], "interruptederror": [275, 1022], "processlookuperror": [275, 1022], "timeouterror": [275, 1022], "closefd": 275, "beopen": 275, "1995": [275, 492, 1112, 1114, 1118, 1120], "nation": [275, 929], "1991": [275, 1048], "sticht": 275, "centrum": 275, "amsterdam": [275, 1048], "credit": [275, 796, 1049], "cwi": 275, "cnri": 275, "zope": 275, "cast": [275, 409, 565, 653, 660, 784], "execfil": 275, "_pydev_imp": 275, "_pydev_execfil": 275, "glob": [275, 441, 913, 970, 1018, 1033, 1163], "runfil": 275, "_pydev_bundl": 275, "pydev_umd": 275, "wdir": 275, "__ipython__": 275, "exclud": [275, 460, 587], "transient": 275, "display_id": 275, "get_ipython": 275, "interactiveshel": 275, "zmqshell": 275, "zmqinteractiveshel": 275, "0x7f9fb1516200": 275, "config_fil": 275, "srcdir": 275, "dstdir": 275, "dst": [275, 404, 454, 543, 584, 603, 612, 613, 619, 1073], "untrust": 278, "lan": 278, "programmat": [278, 510, 922, 930, 978, 998, 1148], "stty": 278, "termio": 278, "ioctl_tti": 278, "setseri": 278, "tty": [278, 856, 911, 983, 989, 1013], "tty_io": 278, "bidirection": 278, "nake": 278, "tiocgseri": 278, "tiocsseri": 278, "async_low_lat": 278, "cfmakeraw": 278, "ttyusb0": [278, 856], "low_lat": 278, "serial_struct": 278, "bidir": 278, "advantec": 278, "nonetheless": [278, 281, 284, 313, 699, 1163], "mycat": 278, "mimick": [278, 740], "make_realtim": 278, "interfaceri": 278, "cif": [278, 330], "samba": [278, 330], "automationadmin": 278, "gsc": 278, "pd": [279, 280, 282, 286, 314, 466, 1126, 1128, 1140, 1141, 1142, 1144, 1145, 1146, 1147], "read_csv": [279, 280, 286, 314, 318, 324, 336, 466, 1126, 1128], "txn": 279, "iso8859": 279, "time_book": [279, 280, 466], "time_valuta": [279, 280, 466], "at66666666666666": 279, "bezahlung": [279, 280, 282, 466], "kart": [279, 280, 282, 466], "eur": [279, 280, 466], "95111243": [279, 466], "abbuchung": [279, 466], "onlinebank": [279, 466], "gutschrift": 279, "000000144919": 279, "339099446722187": 279, "000": [279, 314, 318, 324, 466, 884, 922], "card_pay": 279, "filt": 279, "9325008697": 279, "339099446790254": 279, "og": [279, 454], "237811001182": 279, "auszahlung": 279, "200075787001": 279, "tzb": 279, "anl": 279, "347159strom": 279, "200004871820": 279, "200004876265": 279, "200004848862": 279, "200004871863": 279, "dauerauftrag": 279, "qsnng6xau": 279, "00121672661": 279, "120016487112": [279, 466], "bx": 279, "000009219": 279, "entgelt": 279, "nichtdurchf\u00fchrung": 279, "032300005522384": 279, "saldo": 279, "messtechnik": 279, "602674240071": 279, "0004325259000023": 279, "oeamtc": 279, "mitgliedschaft": 279, "re_liv": 279, "billa": [279, 282, 466], "rew": 279, "dankt": [279, 280, 282, 466], "pipe_stag": 280, "max_colwidth": 280, "max_column": 280, "max_row": 280, "039": 280, "consolut": 280, "insuffici": [280, 696], "categor": [280, 465, 1130], "fuction": 280, "filt_uncat": 280, "uncat_row": 280, "unspecif": [280, 368, 803], "useless": [280, 690, 748, 869, 916, 972, 1044], "food": [280, 286], "luxuri": 280, "categorize_card_pay": 280, "jet": 280, "uncertainti": 280, "categorize_v1": 280, "categorize_v2": 280, "secondari": 280, "test_categori": [280, 466], "test_bas": [280, 1111], "000009258": 280, "k002": [280, 466], "impos": [281, 284], "hurt": [281, 284, 403], "strength": [281, 284, 430, 1046], "overengin": [281, 284, 403, 464, 465, 1171, 1179], "140480285361680": 282, "0xffffffffffffffff": [282, 302, 318], "0x10000000000000000": [282, 302, 318], "140479638276224": 282, "140480203220736": 282, "140480210406176": 282, "7940943354778932823": 282, "0x7fc4189e7c90": 282, "28800": 282, "237988": 282, "produce_dai": 282, "374557": 282, "l_mal_2": 282, "140480285361712": 282, "140479638477760": 282, "140479638427520": 282, "l4": 282, "l5": 282, "140480202528192": 282, "140479638428736": 282, "140480203212992": 282, "l6": 282, "140479598069936": 282, "is_old": 282, "ipykernel_370861": 282, "4290492544": 282, "abc123": [282, 336], "0x7fc4189e5030": 282, "yyi": [282, 324, 336], "lichtenberg": [282, 484, 643, 675, 677, 1112, 1114, 1118, 1120, 1140, 1141, 1142, 1144, 1145, 1146, 1147], "persons2": [282, 1140, 1141], "set_index": [282, 1145], "sort_valu": 282, "inplac": [282, 286, 938, 1141], "flt": [282, 1142], "isin": [282, 1142], "reset_index": 282, "dropna": 282, "value_count": [282, 286], "int64": [282, 286, 1147], "conversiosn": 283, "9am": 284, "woven": [284, 288], "pipelin": [284, 375, 850, 865, 868, 869, 918, 932, 1011], "accountid": 286, "accountdescript": 286, "accountparentid": 286, "storeid": 286, "storedescript": 286, "locationid": 286, "locationdescript": 286, "productid": 286, "productdescript": 286, "sales_managerid": 286, "dateyear": 286, "datequart": 286, "datemonth": 286, "datedai": 286, "categoryvers": 286, "categorycategori": 286, "categorytyp": 286, "valueunit": 286, "original_sales_pric": 286, "sale": 286, "st43": 286, "franchescini": 286, "ct14": 286, "salem": 286, "pd23": 286, "ipa": 286, "sm1": 286, "20144": 286, "201412": 286, "1779": 286, "763910": 286, "usd": 286, "st35": 286, "pd2": 286, "pepsi": 286, "sm4": 286, "201410": 286, "957113": 286, "st98": 286, "walter": 286, "pd24": 286, "amber": 286, "20142": 286, "201406": 286, "449395": 286, "st188": 286, "arrowhead": 286, "ct1": 286, "pd19": 286, "sm8": 286, "20164": 286, "201611": 286, "078689": 286, "st107": 286, "spire": 286, "ct5": 286, "san": 286, "jose": 286, "pd15": 286, "juic": 286, "sm5": 286, "20154": 286, "201512": 286, "303679": 286, "quantity_sold": 286, "sold": 286, "st4": 286, "gstore": 286, "ct13": 286, "portland": 286, "pd26": 286, "wine": 286, "000000": [286, 1128], "1069": 286, "st49": 286, "bai": 286, "depot": 286, "ct4": 286, "sacramento": 286, "pd27": 286, "20151": 286, "201501": 286, "592904": 286, "discount": 286, "st36": 286, "pricelow": 286, "arena": [286, 761, 763], "ct10": 286, "reno": 286, "pd22": 286, "sm3": 286, "20162": 286, "201605": 286, "4351": 286, "045830": 286, "1071": 286, "st7": 286, "street": [286, 891], "pd16": 286, "7905": 286, "590606": 286, "pd12": 286, "lemonad": 286, "20153": 286, "201507": 286, "1073": 286, "modified_model": 286, "sales_managerdescript": 286, "janet": 286, "buri": 286, "nanci": 286, "miller": 286, "setp": 286, "nan_field": 286, "bitfield": 286, "bitfi": 286, "nan_column": 286, "gabriel": [286, 728], "walton": 286, "carl": 286, "jjjjj": 286, "ref_t": 286, "datetime64": 286, "damn": 286, "ref_2015_12_04": 286, "flt_before_2015_12_04": 286, "rows_before_2015_12_04": 286, "st119": 286, "ct2": 286, "francisco": 286, "pd11": 286, "orang": [286, 1065], "pulp": 286, "sm7": 286, "kiran": 286, "raj": 286, "201503": 286, "226847": 286, "13627": 286, "793342": 286, "3427": 286, "896898": 286, "15569": 286, "353983": 286, "float64": [286, 318, 324, 336, 1128], "1957": 286, "740301": 286, "572676": 286, "686587": 286, "289381": 286, "flt_product_pd2": 286, "flt_2015": 286, "flt_only_sold": 286, "flt_combin": 286, "st139": 286, "farlo": 286, "ct15": 286, "eugen": 286, "sm11": 286, "jame": 286, "frank": 286, "201511": 286, "st178": 286, "rai": 286, "ct8": 286, "beverli": 286, "hill": 286, "201508": 286, "facet": [287, 289, 638], "rich": [287, 289, 1141, 1150], "toolset": [287, 289, 656], "conceptu": [287, 289, 455, 796, 803, 941], "undergon": [287, 289], "revolut": [287, 289], "odr": [287, 728], "explor": [287, 930], "rodata": [287, 1016], "unspecifi": [287, 409, 496, 568, 996, 997], "bookkeep": [288, 465], "fewer": 288, "closer": 288, "augment": [288, 825, 1137], "test_blah": 288, "monkeypatch": [288, 290, 291, 306, 312, 313, 316], "contextlib": 288, "chatgpt": 289, "ludwig": 289, "registri": [289, 549], "memleak": 289, "jason": [290, 291, 312], "brownle": [290, 291, 312], "contriv": [290, 291, 312, 487, 1023, 1058], "subthread": [290, 291], "introductori": [290, 291, 312, 317, 778, 921, 962, 1129, 1130, 1176], "mindset": [290, 291, 312, 316, 825], "develp": 290, "10am": 291, "reopen": 291, "drei_millionen_int": 292, "3_000_000": 292, "odd_numb": [292, 1027], "odd_numbers_func": 292, "ret_num": 292, "0x7f32ccc4c610": 292, "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000": [292, 340, 352], "139855258515840": 292, "139856078033344": 292, "139856078226432": 292, "139856160540176": 292, "i3": 292, "i4": 292, "nope": [292, 978], "0101010101010": 292, "bash_logout": [292, 907], "bash_profil": [292, 907], "thunderbird": [292, 330, 887, 907], "gnupg": [292, 330, 907], "hst": 292, "gitconfig": [292, 907], "pki": [292, 330, 907], "daham": 292, "20230403": 292, "222915": 292, "bash_histori": [292, 907], "python_histori": [292, 907], "lesshst": [292, 907], "139855258795072": 292, "139855260513728": 292, "139856085569920": 292, "doppelt": 292, "gemoppelt": 292, "trag": 292, "exakt": 292, "paarweis": 292, "read_lines_of_fil": 292, "0x7f32c7d8d390": 292, "nohead": [295, 1117, 1118, 1120], "userdb_csv": [295, 1118, 1119, 1120], "interleav": 295, "dosometh": 296, "0x7fe7fbf80df0": 296, "140634424624656": 296, "140634424623536": 296, "0o644": 296, "0b01110101": 296, "setting_blah": 296, "setting_foo": 296, "config_context": 296, "140634341074320": 296, "140634424624688": 296, "140634341076688": 296, "140634341077776": 296, "140634343012864": 296, "140634341099856": 296, "ipykernel_61373": 296, "1125713270": 296, "1234567876543234567654321234565432123456": 296, "140634281233520": 296, "140634341798400": 296, "140634341995008": 296, "140634341576640": 296, "140634341773312": 296, "140634281802304": 296, "global_vari": 296, "bar2": 296, "bar3": 296, "bar4": 296, "bar5": 296, "bar6": 296, "0x7fe7f869b7d0": 296, "0x7fe7f869b920": 296, "0x7fe7f869bbc0": 296, "punctuat": 296, "abcabcabcabcabc": [296, 324], "rex": [296, 330], "cba": [296, 647], "another_d": 296, "rb": [296, 336], "30000": 296, "coreutil": 299, "autopoint": 299, "rpm": [299, 330, 477], "fcntl": [299, 929, 947, 951, 955, 956, 957, 958, 963, 966, 989, 992, 996], "luciano": [301, 358, 359, 1123], "ramalho": [301, 358, 359, 1123], "140640823526928": 302, "0x7fe97e53c610": 302, "140640823526960": 302, "140640741310912": 302, "140640741034048": 302, "140640741341184": 302, "wasjetzt": 302, "140640722624768": 302, "140640722715136": 302, "l1_copi": [302, 330], "my_funky_gener": 302, "meine_dumme_sequenz": 302, "0x7fe9785083a0": 302, "0x7fe98c21bce0": 302, "greeter": [302, 468, 469, 470, 474, 475, 1015], "0x7fe9796976d0": 302, "140640740502720": 302, "140640722823952": 302, "140640741119552": 302, "l_copi": 302, "140640741312256": 302, "140640722734080": 302, "140640722760768": 302, "140640722739712": 302, "140640741402496": 302, "owher": 302, "0000042": [302, 1068], "bled": 302, "xfc": [302, 318, 1054, 1136], "xdfe": [302, 318, 1136], "gr\u045c\u043fe": [302, 318, 1136], "\u795d\u597d": [302, 318], "big5": [302, 318, 1136], "xaf": [302, 318], "xac": [302, 318], "xa6n": [302, 318], "unterschrift": 302, "illeg": [302, 446, 1136], "multibyt": [302, 392, 1136], "xe7": [302, 318, 1136], "xa5": [302, 318, 1136], "x9d": [302, 318, 1136], "xe5": [302, 318, 1136], "xbd": [302, 318, 1136], "incorpor": [304, 320, 1178], "tradition": [304, 320, 732, 924, 1045, 1178], "lexer": [304, 320, 1178], "aris": [304, 320, 495, 1178], "compili": [304, 320, 1178], "rant": [305, 321, 471, 778, 1146], "blacklist": [305, 321, 330, 470, 471, 476, 479, 778], "acquaint": [306, 309], "data_to_send": 307, "data_receiv": 307, "user_receiv": [307, 1119], "140048588115008": 307, "140048588341376": 307, "d_str": [310, 662], "uebertragen": 310, "d_str_receiv": 310, "d_receiv": 310, "ala": [313, 316, 509, 600, 881, 947, 987, 1151], "frozendict": [313, 314], "filesensor": 313, "sergei": 313, "test_acquisition_loop": 313, "test_mock_csv_sink": 313, "mymockedth": 313, "nonloc": [313, 1064], "millcelsiu": 313, "acquisition_loop_util": 313, "ont": 313, "necessarili": [313, 430, 460, 617, 776, 811, 825, 862, 942, 1040, 1158, 1165], "10m": [313, 987], "acquir": [313, 366, 756, 830, 972, 977, 986], "slower": [313, 454, 862], "packet": [313, 506, 819, 925, 948, 981], "transmit": 313, "datatim": 313, "read_measur": 313, "fourier": 313, "fft": 313, "011": [313, 324], "ifft": 313, "print_": 314, "0x7f0b165fdf00": 314, "dos_path": [314, 330, 352], "vernuenftigen": 314, "__class_getitem__": 314, "__iand__": 314, "__ior__": 314, "__isub__": 314, "__ixor__": 314, "difference_upd": 314, "intersection_upd": 314, "issubset": 314, "issuperset": 314, "symmetric_differ": 314, "symmetric_difference_upd": 314, "hallohallohallohallohallo": 314, "139685905188368": 314, "139685905188400": 314, "0x7f0b14487be0": 314, "fasschingbau": 314, "139685602274352": 314, "139685561461616": 314, "139685561690240": 314, "139685561316032": 314, "139685595970464": 314, "139685561151488": 314, "30000000": 314, "my_iter": 314, "my_print": [314, 1045], "my_arg": [314, 1020], "even_squar": [314, 324, 336], "squares_fun": 314, "squares_gen": 314, "0x7f0aefb94f20": 314, "0x7f0aefb955b0": 314, "squares_list": 314, "foobar": 314, "expr_str": 314, "expr": [314, 415, 425, 885], "skiprow": 314, "hz2": 314, "hz3_5": 314, "000566": 314, "000729": 314, "132363": 314, "229977": 314, "260597": 314, "444942": 314, "385433": 314, "638212": 314, "502710": 314, "796519": 314, "936250": 314, "972326": 314, "974442": 314, "999992": 314, "995683": 314, "973719": 314, "999245": 314, "895850": 314, "985202": 314, "768778": 314, "arang": 314, "001": [314, 324, 406], "002": 314, "003": 314, "004": 314, "0x7f0ad44b8f70": 314, "0x7f0ad23371f0": 314, "aaarghhh": 315, "expresss": 315, "realist": [316, 941], "postpon": [316, 845], "coverag": [317, 1029], "hackin": 317, "mocksink": 317, "139680347735568": 318, "0x10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000": 318, "0xabc": 318, "convert_to_int": 318, "konvertieren": 318, "drei_int": 318, "fooabc": 318, "userlin": 318, "tjr": 318, "\u00f6rg": 318, "0xc3": [318, 324, 330], "enc_": 318, "enc_s_recvd": 318, "ipykernel_81650": 318, "1521975281": 318, "lg_joerg": 318, "concat": [318, 466, 1140], "linksunten": 318, "rechtsoben": 318, "meinsinussensor": 318, "sinvalu": 318, "ndarrai": [318, 1129, 1145], "0x7f67142f53c0": 318, "timeit": 323, "0x64": 324, "0b1100100": 324, "0b100101100": 324, "0b0": 324, "type_of_i": 324, "schade": 324, "worldhello": 324, "140572055569936": 324, "500001": 324, "499999999999999999999999": 324, "4999": 324, "my_round": 324, "diff_to_next": 324, "5001": 324, "500000001": 324, "str_i": 324, "int_i": 324, "float_i": 324, "nocheinelist": 324, "140571746172800": 324, "140571753417312": 324, "my_": 324, "2282548071841868421": 324, "oioi": 324, "ueberbleibsel": 324, "my_sum": 324, "doom": 324, "0x7f48e8543060": 324, "doedel": 324, "sdhcbdhcb": 324, "kjsdskbh": 324, "akjsdhvksb": 324, "item2": [324, 773, 774], "line_r": 324, "tyyi": 324, "mp_left": 324, "mp_top": 324, "mp_right": 324, "mp_righ": 324, "brenner": 324, "kupfer": 324, "koax": 324, "oberflaech": 324, "gasdues": 324, "fsc": 324, "zellentemp": 324, "raumtemp": 324, "vdc": 324, "077": 324, "090": [324, 682], "76220": 324, "77849": 324, "086": 324, "81216": 324, "99354": 324, "92051": 324, "035": [324, 995, 996], "82874": 324, "075": 324, "006": 324, "78855": 324, "098": 324, "036": 324, "007": 324, "76466": 324, "091": 324, "64736": 324, "65062": 324, "transform_t": 324, "transformed_timestamp": 324, "646126e": 324, "646130e": 324, "mpleft_1": 324, "mpleft_2": 324, "0x7f48ab74abf0": 324, "0x7f48a96648b0": 324, "noch_eine_vari": 324, "even_pr": 324, "0x7f48a9505b40": 324, "0x7f48a95250e0": 324, "squaredict": 324, "squaresset": 324, "bloat": [326, 327, 442, 762, 771, 777, 778, 1042], "ugh": 326, "urgh": 326, "nodiscard": 326, "fallthrough": [326, 996], "noexcept": [326, 485, 519, 690, 693, 695, 710, 712, 713, 715, 716, 717, 718, 732, 742, 756], "string_view": 326, "hierachi": 327, "conveni": [327, 389, 473, 851, 931, 996, 1016, 1128], "powercontrol": 327, "temperaturecontrol": 327, "get_target_temperatur": 327, "copyabl": [327, 585], "_run": 327, "kochtopftemperaturecontrol": 327, "get_current_temperatur": 327, "debt": [327, 508, 509, 510, 522, 523, 524], "erasur": [327, 762, 771, 777, 778], "align": [327, 375, 443, 452, 456, 461, 462, 684, 722, 761, 775, 777, 778, 923, 925, 992, 1068, 1174, 1177], "98f8b9be": 330, "ad8f": 330, "4023": 330, "81a2": 330, "d1dc67d0282c": 330, "python310": 330, "139783143835152": 330, "0x7f21cca24610": 330, "0b10000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000": 330, "1_000_000": 330, "3267": 330, "139782834179584": 330, "139783143835184": 330, "meng": 330, "m1": 330, "m2": 330, "leeres_set": 330, "d_revers": 330, "yaai": 330, "my_deppertes_rang": 330, "mdr": 330, "objeckt": 330, "139782799029888": 330, "139782798781696": 330, "139782798895952": 330, "139782798895792": 330, "139782798980096": 330, "schuld": 330, "300000": [330, 930, 1128], "compiled_pattern": 330, "__builtin__": 330, "139782799135312": 330, "0x7f21b81bbe60": 330, "getcwd": 330, "extlinux": 330, "favicon": 330, "grub2": 330, "opensc": 330, "packagekit": 330, "upow": 330, "authselect": 330, "bash_complet": 330, "binfmt": 330, "brltty": 330, "ceph": [330, 851], "chkconfig": 330, "cupshelp": 330, "dconf": 330, "debuginfod": 330, "depmod": [330, 803, 821], "dracut": 330, "egl": 330, "firewalld": [330, 863], "flexiblasrc": 330, "font": 330, "fwupd": [330, 863], "gcrypt": 330, "gdbinit": 330, "glvnd": 330, "groff": 330, "gss": 330, "gssproxi": 330, "hp": 330, "iproute2": 330, "iscsi": 330, "jvm": 330, "kdump": 330, "krb5": 330, "libblockdev": 330, "libibverb": 330, "libnl": 330, "libpap": 330, "libreport": 330, "libssh": 330, "libvirt": 330, "logrot": 330, "lvm": 330, "mcelog": 330, "mdevctl": 330, "modprob": [330, 803, 825, 826, 924, 929, 930, 931], "motd": 330, "cnf": 330, "ndctl": 330, "nftabl": 330, "openldap": 330, "ostre": 330, "pam": 330, "pkcs11": 330, "pkgconfig": 330, "plymouth": 330, "polkit": 330, "popt": 330, "ppp": 330, "puls": [330, 922, 1180, 1187], "rwtab": 330, "sasl2": 330, "selinux": 330, "sgml": 330, "skel": 330, "speech": 330, "sssd": 330, "statetab": 330, "sudoer": [330, 868], "swid": 330, "sysconfig": 330, "sysctl": 330, "terminfo": 330, "thermald": 330, "tmpfile": 330, "tpm2": 330, "udev": 330, "udisks2": 330, "vmware": [330, 864], "vpnc": 330, "vulkan": 330, "wireplumb": 330, "wpa_supplic": 330, "xdg": 330, "dir_color": 330, "lightbgcolor": 330, "grep_color": 330, "adjtim": 330, "bindresvport": 330, "brlapi": 330, "dleyna": 330, "fprintd": 330, "jwhoi": 330, "libaudit": 330, "libus": 330, "mailcap": 330, "man_db": 330, "mime": 330, "mke2f": 330, "nanorc": 330, "netconfig": 330, "papers": 330, "passwdqc": 330, "pinforc": 330, "sestatu": 330, "tcsd": 330, "usb_modeswitch": 330, "vconsol": 330, "wgetrc": 330, "xattr": 330, "crypttab": 330, "localtim": 330, "mtab": 330, "subuid": 330, "subgid": 330, "timid": 330, "vdpau_wrapp": 330, "asound": 330, "idmapd": 330, "mtool": 330, "rsyncd": 330, "anthi": 330, "trolltech": 330, "rygel": 330, "virc": 330, "swtpm": 330, "localca": 330, "swtpm_setup": 330, "uresourc": 330, "ethertyp": 330, "inputrc": 330, "printcap": 330, "csh": [330, 1158], "nfsmount": 330, "nsswitch": 330, "gshadow": 330, "shadow": [330, 860, 881, 957, 1064, 1101], "rhashrc": 330, "imagemagick": 330, "cshrc": 330, "gimp": 330, "updatedb": 330, "dl": 330, "containerd": [330, 1013], "lftp": 330, "rc0": 330, "rc1": 330, "rc2": 330, "rc3": 330, "rc4": 330, "rc5": 330, "rc6": 330, "cpe": 330, "inittab": 330, "makedumpfil": 330, "sensors3": 330, "posixpath": [330, 340], "kadjckk": 330, "xxddjh": 330, "blahblahblahblah": 330, "schuetzen": 331, "pathlib": [331, 339, 341, 1156], "regexen": 331, "afterthought": [335, 1054], "__getstate__": 336, "bit_count": 336, "maximum_numb": 336, "140526007219432": 336, "0x42": 336, "0x7fceb0516c20": 336, "cnt": [336, 1025], "140525696085312": 336, "create_print_funct": [336, 724, 726, 727], "140526007219464": 336, "140525697462832": 336, "140525697462736": 336, "140525697463408": 336, "140525697463280": 336, "match_express": 336, "compiled_express": 336, "joined_l": 336, "hwmon4": 336, "hwmon5": 336, "hwmon7": 336, "hwmon8": 336, "0x7fce70506000": 336, "commmandlin": 342, "omg": [342, 424, 784, 1157], "checker": [343, 348, 357], "horribl": 343, "gpio25": [343, 926], "embarass": 343, "winscp": 343, "cluster_ece19": [343, 344, 345, 346, 347, 348, 357, 778], "ece19": [343, 344, 345, 346, 348, 356, 357, 363, 364, 368, 778], "ece19_file_read": [343, 344, 345, 346, 347, 348, 357, 778], "ece19_blinklicht": [343, 344, 345, 346, 347, 357, 778], "ece19_blinklicht_oo": [344, 345, 346, 347, 357, 778], "ece19_blinklicht_abc": [346, 347, 357, 778], "ece19_blinklicht_unittest": [346, 347, 357, 778], "blinklicht": [347, 357, 362, 778], "1910420003": [348, 349], "corinna": [348, 349], "baumgartn": [348, 349, 366], "1910420002": [348, 349], "anzhelika": [348, 349, 357], "chernykh": [348, 349, 357, 366], "1910420005": [348, 349], "simon": [348, 349], "1910420006": [348, 349], "matthia": [348, 349, 366], "kappel": [348, 349, 366], "1810420009": [348, 349], "kolter": [348, 349], "1920420033": [348, 349], "kornberg": [348, 349, 366, 369], "1910420007": [348, 349], "lui": [348, 349, 366], "kraker": [348, 349, 366, 369], "1810420010": [348, 349], "leonid": [348, 349], "kudriaschov": [348, 349], "1910420008": [348, 349], "michael": [348, 349, 358, 359], "1910420010": [348, 349], "sonja": [348, 349, 366], "luka": [348, 349, 366, 369], "1910420013": [348, 349], "behnaz": [348, 349], "mehrabadi": [348, 349, 366], "1910420014": [348, 349], "moser": [348, 349, 366], "1910420015": [348, 349], "moritz": [348, 349], "nagelschmi": [348, 349, 366], "1910420018": [348, 349], "bianca": [348, 349], "reimer": [348, 349], "1910420020": [348, 349], "schmid": [348, 349, 366], "1910420021": [348, 349], "sch\u00fcttler": [348, 349], "1910420022": [348, 349], "schweiger": [348, 349, 366], "1910420024": [348, 349], "sinabel": [348, 349], "1910420025": [348, 349], "slovik": [348, 349, 366], "1910420026": [348, 349], "s\u00f6l": [348, 349, 366], "1910420027": [348, 349], "stangl": [348, 349, 366], "1910420028": [348, 349], "felix": [348, 349, 366], "themessl": [348, 349, 366], "1920420035": [348, 349], "astrid": [348, 349], "vogel": [348, 349, 366], "1810420029": [348, 349], "florian": [348, 349, 366], "zwittnigg": [348, 349], "matricul": [348, 1023], "studentdb": 348, "greatli": [348, 450, 1176], "matnr": 348, "rid": [348, 448, 489, 827, 844], "zuweisung": 349, "n1910420002": 349, "n1910420005": 349, "n1910420006": 349, "n1810420009": 349, "n1920420033": 349, "n1910420007": 349, "n1810420010": 349, "n1910420008": 349, "n1910420010": 349, "n1910420013": 349, "n1910420014": 349, "n1910420015": 349, "n1910420018": 349, "n1910420020": 349, "n1910420021": 349, "n1910420022": 349, "n1910420024": 349, "n1910420025": 349, "n1910420026": 349, "n1910420027": 349, "n1910420028": 349, "n1920420035": 349, "n1810420029": 349, "n666": 349, "5g": 349, "n19": 349, "10420013": 349, "n181": 349, "0420029": 349, "20210324": 350, "orig_si": 350, "__interactivehook__": 350, "_base_execut": 350, "_clear_type_cach": 350, "_current_fram": 350, "_debugmallocstat": 350, "_framework": 350, "_getfram": 350, "_git": 350, "_home": 350, "_xoption": 350, "flo": 351, "ted": 351, "rainer": 351, "rg": 351, "some_numb": [352, 1051], "auszuspucken": 352, "eine_neue_vari": 352, "klassisch": 352, "140705292246608": 352, "register_cont": 352, "0b11010001110101000": 352, "107432": 352, "erzwungen": 352, "0x1249ad2594c37ceb0b2784c4ce0bf38ace408e211a7caab24308a82e8f10000000000000000000000000": 352, "groesst": 352, "darstellbar": 352, "ein_string_der_aussieht_wie_ein_integ": 352, "ein_integ": 352, "ver\u00e4ndernd": 352, "say_hello": [353, 1040], "333333333333336": 353, "disclos": [354, 938], "formalit\u00e4ten": 356, "summer": [356, 357, 363], "daili": [356, 868], "organiz": 357, "shortcut": [357, 434, 885, 917, 1054, 1182], "baustein": [357, 362], "navigieren": [357, 362], "sitzen": [357, 362], "nat\u00fcrlich": [357, 362, 375, 1170], "verstehen": [357, 362, 375, 1183], "pr\u00fcfung": [357, 362], "trocken": [357, 362], "pfade": [357, 362, 1171, 1182], "symbolisch": [357, 362, 912], "verschieben": [357, 362], "textfil": [357, 362], "113ff": [357, 362], "ansatzweis": [357, 362], "durchgegangen": [357, 362], "133ff": [357, 362], "durchgemacht": [357, 362], "wirkungsweis": [357, 362], "verstanden": [357, 362, 1173], "verkn\u00fcpfen": [357, 362], "aufw\u00e4rmen": 357, "fremden": 357, "fragerund": 357, "tire": [357, 362], "transact": [357, 362], "wertebereich": 357, "vpn": [357, 932], "gitlab": 357, "sidenot": 357, "swoop": [357, 483], "hashbang": 357, "student1": 357, "student2": 357, "student3": 357, "undescript": 357, "contribut": [357, 999], "crlf": 357, "bang": [357, 477], "trial": [357, 1002, 1011, 1130], "systemkonzept": [358, 375, 1189], "adressr\u00e4um": [358, 375, 1180], "ger\u00e4t": 358, "destruktoren": [358, 1175], "containertempl": 358, "ausz\u00fcg": 358, "labor\u00fcbungen": 358, "absolventinnen": 358, "absolventen": 358, "entwicklungsplatform": 358, "zielplattform": [358, 1175], "dortigen": 358, "betriebssystemkonzept": [358, 1180, 1187], "verinnerlichen": 358, "eckpfeil": [358, 1175], "ansteuern": 358, "merkmal": 358, "nichttrivial": 358, "kerrisk": [358, 359], "handbook": [358, 359], "corbet": [358, 359, 1171], "allessandro": [358, 359], "rubini": [358, 359], "greg": [358, 359], "kroah": [358, 359], "hartman": [358, 359], "richard": [358, 359, 999], "steven": [358, 359, 454], "stephen": [358, 359], "rago": [358, 359], "brian": [358, 359, 378, 1173], "cookbook": [358, 359, 1163], "lutz": [358, 359], "integriert": 358, "\u00fcbungsanteil": 358, "informatik": 358, "einzelpr\u00fcfung": 358, "schriftlich": 358, "vorlesung": 358, "graduat": 359, "copver": 359, "warm": 360, "briefli": [361, 922], "filethermomet": 361, "ue": 363, "arduino": [363, 365, 922, 930, 1139], "homedirectori": [363, 913], "vbox": 363, "subnet": 363, "mgmt": 364, "64ff": 364, "readdir": [364, 776], "ow": [364, 508, 509, 510, 522, 523, 524], "readlink": 364, "tracker": [365, 366], "thermometers_docu": 365, "toctre": 365, "execconfig": 365, "wacom": [365, 427, 428], "schuettler": 366, "zwittnig": 366, "simu": 366, "kudriaschow": 366, "hysteres": 366, "impl": 366, "marku": 366, "stepper": 366, "motor": [366, 778, 921, 928], "wasserfal": 366, "influxdb": 366, "grafana": 366, "nachmittag": 366, "multitask": [367, 372, 755, 777, 778, 921, 962, 976, 982, 984, 985, 987, 1187], "latenc": [368, 372, 756, 778, 823, 921, 962, 982, 984], "gotcha": [368, 372, 657, 778, 921, 942, 962, 982, 984, 992], "type_from_ini": 368, "ece19error": 368, "configfil": [368, 1023], "prettier": [368, 599], "support_address": 368, "invalidtypeerror": 368, "newcom": [370, 371], "individualtrain": 374, "baden": 374, "w\u00fcrttemberg": 374, "beginnend": 374, "kursnotizen": 374, "qualivis": 374, "logbuch": 375, "kursteilnehmern": 375, "zustandegekommen": 375, "zukommen": 375, "potentiellen": 375, "zuk\u00fcnftigen": 375, "eindruck": [375, 1170], "zukommt": 375, "publizieren": 375, "einverst\u00e4ndni": 375, "richtlinien": 375, "thalheim": 375, "aachen": 375, "herzogenrath": 375, "mixtur": [375, 618], "gr\u00e4felf": 375, "wel": 375, "regensburg": 375, "pr\u00e4sent": 375, "inhous": [375, 1125, 1170], "linuxcampu": 375, "sch\u00f6nen": 375, "aktiv": 375, "mitgestaltet": 375, "kursabschluss": 375, "dran": 375, "provok": 375, "kam": 375, "anmeldung": 375, "zustand": 375, "freiheiten": 375, "gestanden": 375, "zusatzaufgab": 375, "gef\u00fchrt": [375, 1170], "einschr\u00e4nkungen": [375, 1188], "eintagesworkshop": 375, "leuten": 375, "kenn": 375, "einhergehend": 375, "l\u00f6sungen": [375, 1170, 1171], "darauffolgend": 375, "vertiefen": 375, "ausgew\u00e4hlten": 375, "bereichen": 375, "dbapi2": [375, 1135], "objektorientierung": 375, "r\u00e4umen": 375, "zweit\u00e4gig": 375, "gemisch": 375, "kursen": 375, "ziemlich": 375, "eingemacht": 375, "bestellt": 375, "neugier": 375, "leichtfertig": 375, "tief": 375, "hinabgestiegen": 375, "feiner": 375, "internen": 375, "forschungsprojekt": 375, "gebracht": 375, "diesen": [375, 1190], "zusammenschnitt": 375, "workshopcharakt": [375, 1194], "angegraut": 375, "bewusst": [375, 1192], "verwendung": 375, "wunderbar": 375, "automatisieren": 375, "zurerst": 375, "shellbenutzung": 375, "betriebssystemen": [375, 1182, 1187, 1189], "angeordnet": 375, "ge\u00fcbt": 375, "herk\u00f6mmlichen": [375, 1175], "auffrischung": 375, "eingerostet": 375, "neuigkeiten": 375, "querbeet": 375, "aufbauend": 375, "zuvor": 375, "grundkur": 375, "wichtigsten": 375, "neuerungen": [375, 1175], "tobak": 375, "lieblingsschulungen": 375, "basiswissen": 375, "hoeri": 375, "bastelwoch": 375, "betrachtung": 375, "realtimef\u00e4higkeit": 375, "xenomai": [375, 1171], "fad": 375, "auszugsweis": 375, "richtig": [375, 1190], "n\u00e4chten": 375, "schulungstagen": 375, "kurzweil": 375, "beschert": 375, "einf\u00fchrungscharakt": 375, "kernelprogrammierung": 375, "auftrag": 375, "hardwarenah": [375, 1180, 1187], "ausgew\u00e4ht": 375, "kernelstruktur": 375, "crosscompil": 375, "newer": [376, 779, 942, 1015, 1179], "msys2": 377, "5595": 377, "17619": 377, "pacman": 377, "mingw64": 377, "w64": 377, "x64": 377, "medium": [377, 467, 744, 997, 1193], "swlh": 377, "2b2e66352456": 377, "kernighan": [378, 1173, 1174], "denni": [378, 418, 617, 1173], "ritchi": [378, 418, 617, 1173, 1174], "ansi": 378, "iec": [378, 583], "9899": 378, "c11": 378, "pdp": [378, 392], "ken": 378, "thompson": 378, "tabul": [379, 387], "celsiu": [380, 381, 483, 494, 525, 929, 931], "brutal": [380, 399, 403, 424, 682, 699, 985], "ordinari": [380, 600, 654, 704, 809, 817, 888, 965, 1045, 1052], "everytim": [382, 400, 929], "ascend": [383, 1145], "unread": [384, 402, 459, 745, 1000, 1001, 1021, 1065], "putchar": 386, "caution": [386, 592, 851, 925], "obscur": [386, 394, 539, 660, 842, 951, 993], "alright": [386, 412], "inequ": [386, 600], "word1": [387, 559], "word2": [387, 559], "word3": [387, 559], "word4": 387, "word5": 387, "unixen": [387, 776, 993, 1158, 1171], "nonsens": [388, 406, 425, 585, 589, 592, 682, 741, 888, 983, 1020, 1129, 1168], "illustr": [388, 1023], "countchar": 388, "nwhite": 388, "nother": 388, "stat": [388, 776, 947, 955, 956, 957, 958, 983, 989, 992, 996, 1156], "nonprint": [389, 417], "decis": [389, 464, 544, 591, 607, 741, 922, 985, 1025, 1130, 1179], "xxxxxxxxxxxxxxxxxxxxxxxxx": 389, "xxxxxxxxxxxxxxxxxx": 389, "subroutin": [390, 458], "outer": [390, 417], "wimplicit": [390, 793], "hygien": 390, "dear": 390, "assembl": [392, 999], "contradict": [392, 687], "640k": 392, "a_str": 392, "strncpy": 392, "maxlen": [392, 393], "strcat": 392, "strncat": 392, "strcmp": [392, 693, 694], "strncmp": 392, "another_str": 392, "nonsensi": 393, "read_lin": 393, "longest": 393, "confin": [394, 1023], "cluster_c": [395, 410, 419, 426, 432, 436, 439, 443, 452, 456, 461, 462, 488, 502, 530, 531, 532, 533, 534, 535, 536, 537, 540, 547, 549, 582, 590, 605, 608, 611, 627, 633, 637, 646, 649, 650, 655, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 684, 691, 722, 738, 747, 755, 763, 775, 777, 778], "cluster_c_introduct": [395, 410, 419, 426, 432, 436, 439, 443, 452, 456, 461, 462, 488, 502, 530, 531, 532, 533, 534, 535, 536, 537, 540, 547, 549, 582, 590, 605, 608, 611, 627, 633, 637, 646, 649, 650, 655, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 684, 691, 722, 738, 747, 755, 763, 775, 777, 778], "c_introduction_exercise_string_read_lin": [395, 410, 419, 426, 432, 436, 439, 443, 452, 456, 461, 462, 684, 722, 775, 777, 778], "c_introduction_character_arrai": [395, 410, 419, 426, 432, 436, 439, 443, 452, 456, 461, 462, 684, 722, 775, 777, 778], "c_introduction_instal": [395, 410, 419, 426, 432, 436, 439, 443, 452, 456, 461, 462, 488, 502, 530, 531, 532, 533, 534, 535, 536, 537, 540, 547, 549, 582, 590, 605, 608, 611, 627, 633, 637, 646, 649, 650, 655, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 684, 691, 722, 738, 747, 755, 763, 775, 777, 778], "c_introduction_exercise_power_declar": [395, 410, 419, 426, 432, 436, 439, 443, 452, 456, 461, 462, 684, 722, 775, 777, 778], "c_introduction_funct": [395, 410, 419, 426, 432, 436, 439, 443, 452, 456, 461, 462, 684, 722, 775, 777, 778], "c_introduction_arrai": [395, 410, 419, 426, 432, 436, 439, 443, 452, 456, 461, 462, 684, 722, 775, 777, 778], "c_introduction_exercise_wc": [395, 410, 419, 426, 432, 436, 439, 443, 452, 456, 461, 462, 684, 722, 775, 777, 778], "c_introduction_character_io": [395, 410, 419, 426, 432, 436, 439, 443, 452, 456, 461, 462, 684, 722, 775, 777, 778], "c_introduction_exercise_fahrenheit_cpp": [395, 410, 419, 426, 432, 436, 439, 443, 452, 456, 461, 462, 684, 722, 775, 777, 778], "c_introduction_cpp_symbolic_const": [395, 410, 419, 426, 432, 436, 439, 443, 452, 456, 461, 462, 684, 722, 775, 777, 778], "c_introduction_exercise_fahrenheit_for": [395, 410, 419, 426, 432, 436, 439, 443, 452, 456, 461, 462, 684, 722, 775, 777, 778], "c_introduction_exercise_histogram": [395, 410, 419, 426, 432, 436, 439, 443, 452, 456, 461, 462, 684, 722, 775, 777, 778], "c_introduction_external_variables_and_scop": [395, 410, 419, 426, 432, 436, 439, 443, 452, 456, 461, 462, 684, 722, 775, 777, 778], "c_introduction_for_loop": [395, 410, 419, 426, 432, 436, 439, 443, 452, 456, 461, 462, 684, 722, 775, 777, 778], "c_introduction_exercise_fahrenheit_float": [395, 410, 419, 426, 432, 436, 439, 443, 452, 456, 461, 462, 684, 722, 775, 777, 778], "c_introduction_variables_and_arithmetic_express": [395, 410, 419, 426, 432, 436, 439, 443, 452, 456, 461, 462, 684, 722, 775, 777, 778], "c_introduction_hello_world": [395, 410, 419, 426, 432, 436, 439, 443, 452, 456, 461, 462, 684, 722, 775, 777, 778], "c_introduction_introduct": [395, 410, 419, 426, 432, 436, 439, 443, 452, 456, 461, 462, 684, 722, 775, 777, 778], "z0": 397, "abbrevi": [398, 699, 702, 704, 708, 762, 764, 766, 767, 768], "char_bit": 398, "x86": [398, 477, 999, 1016], "stdint": [398, 929, 949, 992], "int8_t": 398, "uint8_t": [398, 496, 511, 683, 929], "int16_t": 398, "int32_t": 398, "uint32_t": 398, "int64_t": 398, "052": 399, "0x2a": 399, "0b010010": 399, "42l": 399, "456f": 399, "456l": 399, "x61": 399, "alert": [399, 442, 448, 742, 1054, 1062, 1071, 1073], "backspac": [399, 885, 1067], "formfe": 399, "ooo": 399, "octal": [399, 1054, 1067, 1068], "xhh": 399, "some_funct": 400, "some_vari": 400, "1415926535897932": 400, "some_nonsensical_numb": 400, "legal": [402, 446, 592, 690, 955, 997], "truth": [402, 952, 978], "eleg": [402, 745], "blank": 402, "num_lf": 402, "narrow": [403, 1130], "4294967295u": 403, "wsign": [403, 445], "wconvers": 403, "4294967296u": 403, "unscrupul": 403, "0x100000000": 403, "weaker": 403, "stronger": [403, 1035, 1142], "1l": 403, "1u": 403, "losslessli": 403, "1ul": 403, "wtype": [403, 445], "wextra": [403, 445], "pedant": 403, "anti": [403, 830, 967], "sloppi": 403, "advic": [403, 1054], "immens": [403, 997], "hazard": 403, "messi": [403, 474], "subtl": [404, 424, 447, 539, 1048], "copy_and_omit": 404, "0x4b": 406, "01001011": 406, "0x0c": 406, "00001100": 406, "0x08": 406, "00001000": 406, "0x4f": 406, "01001111": 406, "0x47": 406, "01000111": 406, "0x03": 406, "00000011": 406, "0x80": 406, "00110000": 406, "0x4c": [406, 815], "01001100": 406, "0xb3": 406, "10110011": 406, "arr": [407, 686], "unari": [409, 1054], "strongest": [409, 1054], "intuit": [409, 457], "danger": [409, 427, 585, 825, 975, 996, 1063, 1176], "decrement": [410, 419, 426, 430, 432, 436, 439, 443, 452, 456, 461, 462, 635, 684, 722, 741, 775, 777, 778, 784], "cluster_c_types_operators_express": [410, 419, 426, 432, 436, 439, 443, 452, 456, 461, 462, 684, 722, 775, 777, 778], "c_types_operators_expressions_conditional_express": [410, 419, 426, 432, 436, 439, 443, 452, 456, 461, 462, 684, 722, 775, 777, 778], "c_types_operators_expressions_assignment_operators_and_express": [410, 419, 426, 432, 436, 439, 443, 452, 456, 461, 462, 684, 722, 775, 777, 778], "c_types_operators_expressions_bit_oper": [410, 419, 426, 432, 436, 439, 443, 452, 456, 461, 462, 684, 722, 775, 777, 778], "c_types_operators_expressions_exercise_string_reduc": [410, 419, 426, 432, 436, 439, 443, 452, 456, 461, 462, 684, 722, 775, 777, 778], "c_types_operators_expressions_type_convers": [410, 419, 426, 432, 436, 439, 443, 452, 456, 461, 462, 684, 722, 775, 777, 778], "c_types_operators_expressions_relational_logical_oper": [410, 419, 426, 432, 436, 439, 443, 452, 456, 461, 462, 684, 722, 775, 777, 778], "c_types_operators_expressions_arithmetic_oper": [410, 419, 426, 432, 436, 439, 443, 452, 456, 461, 462, 684, 722, 775, 777, 778], "c_types_operators_expressions_variable_nam": [410, 419, 426, 432, 436, 439, 443, 452, 456, 461, 462, 684, 722, 775, 777, 778], "c_types_operators_expressions_introduct": [410, 419, 426, 432, 436, 439, 443, 452, 456, 461, 462, 684, 722, 775, 777, 778], "c_types_operators_expressions_precedence_and_order_of_evalu": [410, 419, 426, 432, 436, 439, 443, 452, 456, 461, 462, 684, 722, 775, 777, 778], "c_types_operators_expressions_declar": [410, 419, 426, 432, 436, 439, 443, 452, 456, 461, 462, 684, 722, 775, 777, 778], "c_types_operators_expressions_const": [410, 419, 426, 432, 436, 439, 443, 452, 456, 461, 462, 684, 722, 775, 777, 778], "c_types_operators_expressions_increment_decrement_oper": [410, 419, 426, 432, 436, 439, 443, 452, 456, 461, 462, 684, 722, 775, 777, 778], "c_types_operators_expressions_datatypes_s": [410, 419, 426, 432, 436, 439, 443, 452, 456, 461, 462, 684, 722, 775, 777, 778], "doabl": 415, "cond": [415, 972], "precedenceof": 415, "innermost": [417, 654, 659], "concern": [417, 418, 466, 784, 861, 931, 1022, 1178], "edsger": 418, "dijkstra": 418, "plea": 418, "manifold": 418, "judici": [418, 454, 1178], "do_complicated_stuff": 418, "cleanup_mess": 418, "cluster_c_program_flow": [419, 426, 432, 436, 439, 443, 452, 456, 461, 462, 684, 722, 775, 777, 778], "c_program_flow_loops_do_whil": [419, 426, 432, 436, 439, 443, 452, 456, 461, 462, 684, 722, 775, 777, 778], "c_program_flow_loops_while_and_for": [419, 426, 432, 436, 439, 443, 452, 456, 461, 462, 684, 722, 775, 777, 778], "c_program_flow_else_if": [419, 426, 432, 436, 439, 443, 452, 456, 461, 462, 684, 722, 775, 777, 778], "c_program_flow_if_els": [419, 426, 432, 436, 439, 443, 452, 456, 461, 462, 684, 722, 775, 777, 778], "c_program_flow_break_and_continu": [419, 426, 432, 436, 439, 443, 452, 456, 461, 462, 684, 722, 775, 777, 778], "c_program_flow_switch": [419, 426, 432, 436, 439, 443, 452, 456, 461, 462, 684, 722, 775, 777, 778], "c_program_flow_statements_and_block": [419, 426, 432, 436, 439, 443, 452, 456, 461, 462, 684, 722, 775, 777, 778], "c_program_flow_goto_and_label": [419, 426, 432, 436, 439, 443, 452, 456, 461, 462, 684, 722, 775, 777, 778], "vice": 420, "versa": 420, "g_lobal": [421, 422, 424], "print_g": [421, 422], "linkag": 422, "percept": [422, 861], "disciplin": [422, 444, 454, 464, 1129], "convent": [422, 466, 841, 885, 907, 945, 1022, 1037], "ifndef": [422, 424, 425, 467, 474, 568, 586, 592, 594, 595, 693, 694, 740, 999, 1015, 1017], "g_h": 422, "programx": 423, "cautious": 424, "c99": [424, 1174], "slow": [424, 455, 459, 635, 931, 942], "have_c_h": 424, "clash": [424, 447], "include_onc": 424, "newbi": [424, 686], "hurdl": 424, "ifdef": [425, 482, 635], "defined": 425, "unequ": 425, "tempt": 425, "horror": 425, "do_much": 425, "do_thi": [425, 746], "do_that": [425, 746], "do_less": 425, "__pragma": 425, "4127": 425, "warn_if": 425, "statem": 425, "function_help": 425, "function_quit": 425, "function_": 425, "inject_viru": 425, "doomed_process": 425, "win32": [425, 1192], "foreign_mem": 425, "virtualallocex": 425, "mem_commit": 425, "page_execut": 425, "page_readwrit": 425, "infect": 425, "__file__": [425, 1023, 1156], "__line__": 425, "smell": [425, 479], "pest": 425, "cluster_c_functions_and_program_structur": [426, 432, 436, 439, 443, 452, 456, 461, 462, 684, 722, 775, 777, 778], "c_functions_and_program_structure_header_fil": [426, 432, 436, 439, 443, 452, 456, 461, 462, 684, 722, 775, 777, 778], "c_functions_and_program_structure_external_vari": [426, 432, 436, 439, 443, 452, 456, 461, 462, 684, 722, 775, 777, 778], "c_functions_and_program_structure_c_preprocessor": [426, 432, 436, 439, 443, 452, 456, 461, 462, 684, 722, 775, 777, 778], "c_functions_and_program_structure_static_vari": [426, 432, 436, 439, 443, 452, 456, 461, 462, 684, 722, 775, 777, 778], "c_functions_and_program_structure_bas": [426, 432, 436, 439, 443, 452, 456, 461, 462, 684, 722, 775, 777, 778], "c_functions_and_program_structure_c_preprocessor_advanc": [426, 432, 436, 439, 443, 452, 456, 461, 462, 684, 722, 775, 777, 778], "dereferenc": [427, 695, 730, 734], "35129": 427, "calle": [428, 458, 460, 597, 1018], "tablet": 428, "excang": 429, "pa1": 430, "pa2": 430, "cluster_c_pointers_and_arrai": [432, 436, 439, 443, 452, 456, 461, 462, 684, 722, 775, 777, 778], "c_pointers_and_arrays_pointers_and_function_argu": [432, 436, 439, 443, 452, 456, 461, 462, 684, 722, 775, 777, 778], "c_pointers_and_arrays_pointers_and_address": [432, 436, 439, 443, 452, 456, 461, 462, 684, 722, 775, 777, 778], "c_pointers_and_arrays_pointers_and_arrai": [432, 436, 439, 443, 452, 456, 461, 462, 684, 722, 775, 777, 778], "c_pointers_and_arrays_exercise_swap": [432, 436, 439, 443, 452, 456, 461, 462, 684, 722, 775, 777, 778], "c_pointers_and_arrays_command_line_argu": [432, 436, 439, 443, 452, 456, 461, 462, 684, 722, 775, 777, 778], "scalar": [433, 448, 1071], "fantasi": [433, 922, 924], "p1": [433, 538, 584, 586, 592, 598, 600, 602, 603, 687], "p2": [433, 538, 584, 586, 592, 598, 600, 603, 687], "laid": 433, "makepoint": 434, "addpoint": [434, 450], "addtopoint": 434, "pid_t": [435, 968, 986, 997], "cluster_c_structur": [436, 439, 443, 452, 456, 461, 462, 684, 722, 775, 777, 778], "c_structures_typedef": [436, 439, 443, 452, 456, 461, 462, 684, 722, 775, 777, 778], "c_structures_structures_and_funct": [436, 439, 443, 452, 456, 461, 462, 684, 722, 775, 777, 778], "c_structures_bas": [436, 439, 443, 452, 456, 461, 462, 684, 722, 775, 777, 778], "dealloc": [437, 575, 727, 786, 813, 819], "ptr": [437, 560, 692, 740, 741, 742, 743], "do_something_with": [437, 685, 731], "list_init": 438, "list_destroi": 438, "list_insert": 438, "list_remov": 438, "list_count": 438, "list_print": 438, "keylen": 438, "cluster_c_memori": [439, 443, 452, 456, 461, 462, 684, 722, 775, 777, 778], "c_memory_malloc": [439, 443, 452, 456, 461, 462, 684, 722, 775, 777, 778], "c_memory_exercise_linked_list": [439, 443, 452, 456, 461, 462, 684, 722, 775, 777, 778], "corollari": [440, 442, 748, 1031], "reorder": [440, 756, 809], "use_count": [440, 441, 741, 743, 773], "use_resourc": [440, 441], "do_something_with_shared_resourc": [440, 441], "conceiv": [440, 1048], "completion_flag": 440, "out_word": 440, "in_word": 440, "unforese": 440, "volatil": [441, 443, 452, 456, 461, 462, 684, 722, 750, 775, 777, 778, 835, 997, 1174, 1177], "instr": [441, 459, 970, 1033], "pthread_mutex_t": [441, 754, 817, 970, 972], "use_count_mutex": 441, "pthread_mutex_initi": [441, 970], "pthread_mutex_lock": [441, 754, 970, 972], "pthread_mutex_unlock": [441, 754, 970, 972], "expens": [441, 448, 584, 597, 600, 690, 695, 731, 732, 741, 830, 967, 1176], "fetch_and_add": [441, 970], "__sync_fetch_and_add": [441, 751, 970, 971], "sheer": [441, 587], "neglig": 442, "penalti": 442, "memcpi": 442, "freeli": 442, "rearrang": [442, 634], "anim": 442, "textit": 442, "bogu": [442, 454, 595, 693, 694, 720, 931, 997], "__pad0": 442, "__pad1": 442, "misalign": 442, "intrins": [443, 452, 456, 461, 462, 684, 722, 775, 777, 778], "cluster_c_advanced_language_featur": [443, 452, 456, 461, 462, 684, 722, 775, 777, 778], "c_advanced_language_features_volatil": [443, 452, 456, 461, 462, 684, 722, 775, 777, 778], "c_advanced_language_features_align": [443, 452, 456, 461, 462, 684, 722, 775, 777, 778], "c_advanced_language_features_atom": [443, 452, 456, 461, 462, 684, 722, 775, 777, 778], "matur": 444, "odditi": 444, "rectifi": 444, "fortran": 444, "lazy": [444, 725], "meant": [444, 996], "shortcom": [444, 509, 670, 675, 678], "holidai": 444, "handcraft": [444, 492, 1058], "clariti": [445, 449, 954], "baud": 446, "idl": 446, "writing_request": 446, "reading_respons": 446, "wait_retri": 446, "protocol_engin": [446, 450], "deduc": [446, 682, 685, 710], "obligatori": 446, "anyhow": 446, "forgot": 446, "unambigu": [446, 682], "protocol_error": 446, "eat": [446, 454], "unintend": 448, "wwrite": 448, "max_bucket": 448, "pj": 448, "pointe": 448, "ppi": 448, "height": [449, 492, 601], "beman": 449, "daw": 449, "obfusc": 450, "ssize_t": [450, 542, 784, 943, 947, 948, 949, 951, 955, 956, 957, 958, 961, 963, 966, 989, 992, 993, 996], "send_fram": 450, "eng": 450, "send_sum": 450, "v_int32": 450, "spectacular": 450, "adequ": 450, "unix_error": 450, "app_error": 450, "unix_error_cr": 450, "unix_error_ok": 450, "uerr": 450, "app_error_cr": 450, "app_os_error": 450, "impact": [450, 454], "enhanc": [450, 858], "beyond": [451, 951], "consider": [451, 885], "slowdown": 451, "0x400552": 451, "0x51bb072": 451, "0x4c28c6d": 451, "vg_replace_malloc": [451, 592], "0x400545": 451, "loss": [451, 933], "rec": [451, 1113, 1115], "uncov": 451, "readabilti": [452, 456, 461, 462, 684, 722, 775, 777, 778], "explict": [452, 456, 461, 462, 778], "cluster_c_program_san": [452, 456, 461, 462, 684, 722, 775, 777, 778], "c_program_sanity_valgrind": [452, 456, 461, 462, 778], "c_program_sanity_explicit_type_safeti": [452, 456, 461, 462, 778], "c_program_sanity_discrete_valu": [452, 456, 461, 462, 684, 722, 775, 777, 778], "c_program_sanity_integral_typ": [452, 456, 461, 462, 684, 722, 775, 777, 778], "c_program_sanity_stat": [452, 456, 461, 462, 778], "c_program_sanity_introduct": [452, 456, 461, 462, 684, 722, 775, 777, 778], "c_program_sanity_struct_initi": [452, 456, 461, 462, 778], "c_program_sanity_const": [452, 456, 461, 462, 778], "hotspot": [453, 457], "checksum": [453, 933, 981], "externel": 453, "sha1sum": [453, 981, 984, 987], "8g": 453, "0m38": 453, "0m3": 453, "0m0": 453, "perceiv": 453, "daze": 453, "mp3": 453, "018": 453, "mult": 454, "rumour": 454, "uncondit": 454, "finlin": 454, "o3": [454, 469, 776, 1165], "heurist": 454, "o1": 454, "magnitud": [454, 455], "overus": [454, 496, 1036, 1176], "spill": 454, "fira": 454, "rtfm": [454, 1069, 1163], "compromis": [454, 464, 492], "transit": [454, 479], "fmove": 454, "outweigh": 454, "thrash": [454, 984, 1174], "understood": [454, 464, 541, 746, 825, 1178], "misnom": [454, 1073], "o0": [454, 469], "unagress": 454, "chew": [454, 756], "agress": 454, "muchnik": 454, "levin": 454, "nearbi": 455, "bounc": [455, 844], "4x3": 455, "rectangular": 455, "cluster_c_perform": [456, 461, 462, 778], "c_performance_computebound": [456, 461, 462, 778], "c_performance_introduct": [456, 461, 462, 778], "c_performance_memori": [456, 461, 462, 778], "bust": 457, "haul": 457, "cheater": 457, "fallibl": 457, "supplement": 457, "gprof": [457, 459, 460, 461, 462, 778, 1174], "callgrind": [457, 460, 461, 462, 778, 1174], "oprofil": [457, 461, 462, 778, 1174], "gmon": 458, "spot": 458, "38000000": 458, "find_dupl": [458, 460], "criterion": [458, 625], "37000000": 458, "luck": [458, 929, 1020, 1022], "gprof2dot": 458, "tjpeg": 458, "predict": [459, 460, 1126, 1128, 1129], "sluggishli": 459, "16761": 459, "callgrind_annot": 459, "atstart": 459, "callgrind_control": 459, "nmi": 460, "ophelp": 460, "operf": 460, "oprofile_data": 460, "opreport": 460, "opannot": 460, "oparch": 460, "opgprof": 460, "Their": 460, "2085": 460, "2505": 460, "maskabl": 460, "callgraph": 460, "pxe": 460, "vmlinux": [460, 800], "debuginfo": 460, "userland": [460, 784], "routin": [460, 466, 571, 776, 817, 823, 828, 949, 985, 1017, 1117, 1119], "analyz": 460, "jcf": [460, 825, 851], "jxf": [460, 825, 851], "gdf": 460, "op2calltre": 460, "oprof": 460, "applet": 460, "viewabl": [460, 473], "kcachegrind": 460, "cluster_c_profil": [461, 462, 778], "c_profiling_introduct": [461, 462, 778], "c_profiling_callgrind": [461, 462, 778], "c_profiling_gprof": [461, 462, 778], "c_profiling_oprofil": [461, 462, 778], "worker": [464, 690], "consensu": [464, 487], "consent": [464, 1043], "male": [464, 1085], "prcess": 464, "obei": [464, 466], "antipattern": [464, 492], "gonna": 464, "indecis": [464, 1179], "road": 464, "manufactur": [464, 931], "pcb": [464, 929], "bom": 464, "requiremenet": 464, "yyyi": 465, "testabl": [465, 1157], "yagni": 465, "fraunhof": 465, "make_categori": 466, "outputfil": 466, "to_datetim": 466, "make_float": 466, "orpheum": 466, "goingout": 466, "hervi": 466, "sport": 466, "card": [466, 825, 854, 889, 891, 896, 897], "to_csv": 466, "read_from_csv": 466, "write_to_csv": 466, "clean_data": 466, "csvname_or_list_thereof": 466, "workaround": [466, 683, 686, 798, 1156], "read_from_dir": 466, "re_yyyy_mm": 466, "inputdir": 466, "libreoffic": 466, "monolith": [466, 999], "factor": [466, 793, 794, 825], "test_data_clean": 466, "test_make_float": 466, "1999": 466, "test_date_convers": 466, "at666666666666666666": 466, "000009173": 466, "bawaatwwxxx": 466, "at211420020010848041": 466, "ausgleich": 466, "firmenkonto": 466, "test_input": 466, "read_from_csv_singl": 466, "read_from_csv_multipl": 466, "deliber": 466, "test_read_csv_singl": 466, "000009284": 466, "2371": 466, "000009283": 466, "at613400000005077508": 466, "world4you": 466, "writelin": [466, 1073, 1118, 1120], "test_read_csv_multipl": 466, "lines_2023_02": 466, "lines_2023_01": 466, "000009229": 466, "4111": 466, "bp": 466, "tankstel": 466, "000009228": 466, "at081400086210003454": 466, "\u00f6sterreichisch": 466, "gesundheitskass": 466, "_write_csv": 466, "read_from_csv_dir": 466, "test_read_csv_dir": 466, "testutil": 466, "write_csv": 466, "test_category_csv": 466, "000009168": 466, "000009169": 466, "2801": 466, "strassenbahn": 466, "eas": [466, 1135], "finer": 466, "refact": 466, "str_categori": 466, "cardunknown": 466, "flughafen": 466, "wien": 466, "test_more_of_it": 466, "000009153": 466, "parken": 466, "fl": 466, "inputread": 466, "recursivecsvinputread": 466, "singlecsvinputread": 466, "compositeinputread": 466, "input_abc": 466, "abstractmethod": [466, 1035], "multiplecsvinputread": 466, "test_input_abc": 466, "cmake_minimum_requir": [467, 1001, 1165], "identif": [467, 929, 1000, 1001], "abi": [467, 477, 803, 805, 945, 1000, 1001], "hello_nam": [467, 473], "hello_name_h": 467, "democonfig": [468, 470, 474, 475, 476], "libhello": [468, 469, 470, 472, 475, 478], "configure_fil": 468, "demo_version_major": 468, "demo_version_minor": 468, "cmake_current_binary_dir": 468, "demo_major": 468, "demo_minor": 468, "include_directori": [468, 479], "overkil": 468, "cmake_cxx_standard": [469, 1165], "dndebug": 469, "cmake_": 469, "_compiler_id": 469, "IF": [469, 474, 475, 476], "g3": 469, "strequal": 469, "cmake_c_compiler_id": 469, "cmake_c_flag": [469, 1165], "cmake_cxx_compiler_id": 469, "cmake_cxx_flag": [469, 1165], "howdi": [469, 593, 724, 726, 727, 865, 869, 955, 956, 958, 1040], "bullshithowdi": 469, "fatal_error": 469, "send_error": 469, "attract": [469, 686], "findsqlite3": 470, "sqlite3_include_dir": 470, "sqlite3_librari": 470, "typo": [470, 1036, 1037], "sqlite3_vers": 470, "sqlite3_found": 470, "olden": 470, "0x00007f76ae011000": 470, "libz": 470, "0x00007f76adef7000": 470, "cluster_cmak": [471, 778], "cmake_structur": [471, 778], "cmake_instal": [471, 778, 1000, 1001], "cmake_shared_libraries_preview": [471, 778], "cmake_librari": [471, 778], "cmake_targets_properti": [471, 778], "cmake_optional_code_approach_1": [471, 778], "cmake_optional_code_approach_2": [471, 778], "cmake_test": [471, 778], "cmake_external_depend": [471, 778], "cmake_optional_code_problem": [471, 778], "cmake_configure_fil": [471, 778], "cmake_cxx_and_r": [471, 778], "cmake_bas": [471, 778], "cmake_install_prefix": 472, "set_properti": [472, 477], "dbuild_shared_lib": [472, 477], "ON": [472, 475, 476, 477, 531, 532, 537, 983], "readelf": [472, 999, 1011, 1016], "0x0000000000000001": [472, 1016], "0x000000000000001d": 472, "0x00007f773aefe000": 472, "ldconfig": [472, 1171], "sonam": [472, 477], "add_librari": [473, 475, 477, 479, 525, 570, 579, 1000, 1001], "0x29": 473, "collect2": [473, 659, 1016], "acycl": [473, 1001, 1015], "dag": 473, "jul": [473, 477], "tpng": [473, 1001], "descend": [474, 475, 476, 478, 525, 886, 993], "use_blacklist": [474, 475], "macro_use_blacklist": [474, 476], "demo_use_blacklist": [474, 475], "namegreet": 474, "_blacklist": 474, "implic": [474, 809, 881, 942], "sayhello": 474, "is_forbidden": 474, "_name": [474, 515, 518, 522, 523, 524], "goodby": [474, 997], "use_backlist": 474, "condition": 474, "duse_blacklist": [475, 476], "target_compile_opt": [475, 479], "manyfold": 476, "target_compile_definit": [476, 479], "lightli": 476, "symlink": [477, 776, 929, 1158, 1182], "build_shared_lib": 477, "qf": 477, "libboost_regex": 477, "lrwxrwxrwx": [477, 907, 929, 930, 931, 965, 999], "rwxr": [477, 870, 872, 873, 882, 999, 1011, 1050], "289264": 477, "temporarili": [477, 986, 999], "project_vers": 477, "makefile2": 478, "compile_definit": 479, "dname": 479, "compile_opt": 479, "widest": 479, "asymmetr": 479, "enable_test": 480, "toplavel": 480, "set_tests_properti": [480, 1162, 1165], "pass_regular_express": 480, "ctest": 480, "cdash": 480, "kitwar": 480, "socialdb": [481, 484, 488, 513, 519], "i2csensor_vendor1": [482, 511], "0x37": 482, "suddenli": [482, 825, 865, 1131], "vener": [482, 503, 585, 600, 728], "damag": [482, 1145], "slip": 482, "cascad": 482, "i2csensor": [482, 496, 511], "create_i2c_sensor": 482, "i2csensorfactori": 482, "speak": [482, 912, 930, 1027, 1052], "vendor1": [482, 511], "abstract_factory_suit": 482, "instantiate_vendor1": 482, "i2csensorfactory_vendor1": 482, "i2c_factory_vendor1": 482, "i2c_sensor": 482, "assert_tru": [482, 537, 538, 543, 548, 550, 555, 584, 586, 601, 602, 603, 604, 687, 741, 742, 758, 776, 1163], "dynamic_cast": [482, 509, 523], "a_sensor": [482, 692], "vendor2": [482, 511], "instantiate_vendor2": 482, "i2csensorfactory_vendor2": [482, 511], "i2c_factory_vendor2": 482, "i2csensor_vendor2": [482, 511], "pu": 482, "tinto": 482, "fahrenheitsensor": [483, 512], "get_temperature_f": [483, 512], "formula": 483, "adapter_suit": 483, "constantfahrenheitsensor": 483, "assert_float_eq": [483, 486, 487, 489, 506, 507, 533, 534, 535, 536, 538, 541, 542, 553, 584, 586, 603, 689, 692, 758], "fahrenheitsensor_adapt": [483, 512], "adapter__is_a__sensor": 483, "adapter__knows__an_a_sensor": 483, "variablefahrenheitsensor": 483, "initial_valu": 483, "_valu": [483, 518], "change_temperatur": [483, 533, 541, 542], "adapter__definitely_knows__a_sensor__hel": 483, "multitud": 484, "socialdbcommand": [484, 513], "command_suit": 484, "2345110695": [484, 643], "socialdbinsertcommand": [484, 513], "3456060486": [484, 643], "insert_by_bas": 484, "socialdbfindcommand": [484, 513], "socialdbdropcommand": [484, 513], "notfound": [484, 485, 513, 675, 676, 677], "assert_throw": [484, 491, 776], "notinsert": [484, 485, 513], "bulkinsert": 484, "bulk_insert": 484, "socialdbbulkinsertcommand": [484, 513], "bic": 484, "std_initializer_list": 484, "bulk_insert__std_initializer_list": 484, "_msg": 485, "c_str": [485, 520, 542, 688, 693, 694, 996], "_db": 485, "hypthet": 486, "composite_suit": 486, "cs1": 486, "cs2": 486, "recompil": [487, 1016], "decorator_suit": 487, "average_with_base_sensor": 487, "decoratedsensor": [487, 515], "propon": 487, "diagnost": [487, 616, 619], "decorated_sensor_const_added_function": 487, "decorated_sensor_random_added_function": 487, "decorated_sensor_const__is_a__sensor": 487, "decorated_sensor_random__is_a__sensor": 487, "assert_g": [487, 536, 553], "assert_l": [487, 536, 553], "average_with_decorated_sensor": 487, "mtqueue": [488, 506], "devis": 488, "notifi": [488, 754, 946, 993, 1139], "cluster_cxx03": [488, 502, 530, 531, 532, 533, 534, 535, 536, 537, 540, 547, 549, 582, 590, 605, 608, 611, 627, 633, 637, 645, 646, 647, 649, 650, 652, 655, 661, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 691, 722, 738, 747, 755, 763, 775, 777, 778], "cluster_cxx03_data_encapsul": [488, 502, 530, 531, 532, 533, 534, 535, 536, 537, 540, 547, 549, 582, 590, 605, 608, 611, 627, 633, 637, 646, 649, 650, 655, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 691, 722, 738, 747, 755, 763, 775, 777, 778], "cluster_cxx03_inheritance_oo": [488, 502, 530, 540, 582, 655, 679, 763, 777, 778], "cluster_cxx_design_pattern": [488, 502, 530, 582, 778], "cluster_linux": [488, 502, 530, 531, 532, 533, 534, 535, 536, 537, 540, 582, 755, 777, 778, 782, 785, 787, 790, 792, 795, 797, 799, 801, 802, 804, 806, 808, 810, 812, 814, 816, 818, 820, 822, 824, 826, 829, 831, 834, 836, 840, 843, 846, 848, 852, 853, 854, 855, 858, 859, 866, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 905, 915, 921, 927, 928, 933, 934, 935, 936, 937, 944, 950, 952, 960, 962, 964, 976, 979, 982, 984, 1001, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010], "cluster_linux_bas": [488, 502, 530, 531, 532, 533, 534, 535, 536, 537, 540, 582, 755, 777, 778, 848, 852, 853, 854, 855, 858, 859, 866, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 905, 915, 921, 933, 934, 935, 936, 937, 944, 950, 952, 960, 962, 976, 979, 982, 984, 1001, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010], "cluster_linux_basics_shel": [488, 502, 530, 531, 532, 533, 534, 535, 536, 537, 540, 582, 755, 777, 778, 848, 852, 853, 854, 855, 858, 859, 866, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 905, 915, 921, 944, 950, 952, 960, 962, 976, 979, 982, 984, 1001, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010], "cluster_linux_basics_intro": [488, 502, 530, 531, 532, 533, 534, 535, 536, 537, 540, 582, 755, 777, 778, 848, 852, 853, 854, 855, 858, 859, 866, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 905, 915, 921, 933, 934, 935, 936, 937, 944, 950, 952, 960, 962, 976, 979, 982, 984, 1001, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010], "cluster_linux_toolchain": [488, 502, 530, 531, 532, 533, 534, 535, 536, 537, 540, 582, 755, 777, 778, 855, 858, 859, 921, 944, 950, 952, 960, 962, 976, 979, 982, 984, 1001, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010], "cluster_cxx": [488, 502, 530, 531, 532, 533, 534, 535, 536, 537, 540, 547, 549, 582, 778], "cluster_cxx_exercis": [488, 502, 530, 531, 532, 533, 534, 535, 536, 537, 540, 547, 549, 582, 778], "cluster_cxx_exercises_design_pattern": [488, 502, 530, 582, 778], "cxx03_introduct": [488, 502, 530, 531, 532, 533, 534, 535, 536, 537, 540, 547, 549, 582, 590, 605, 608, 611, 627, 633, 637, 646, 649, 650, 655, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 691, 722, 738, 747, 755, 763, 775, 777, 778], "cxx03_data_encapsulation_ctor_dtor": [488, 502, 530, 540, 582, 590, 655, 667, 668, 669, 670, 671, 672, 674, 675, 676, 677, 678, 679, 691, 722, 738, 747, 755, 763, 775, 777, 778], "cxx03_data_encapsulation_ctor_default": [488, 502, 530, 540, 582, 590, 655, 667, 668, 669, 670, 671, 672, 674, 675, 676, 677, 678, 679, 691, 722, 738, 747, 755, 763, 775, 777, 778], "cxx03_data_encapsulation_ctor_custom": [488, 502, 530, 533, 536, 540, 582, 590, 655, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 691, 722, 738, 747, 755, 763, 775, 777, 778], "cxx03_data_encapsulation_classes_object": [488, 502, 530, 531, 532, 533, 534, 535, 536, 537, 540, 547, 549, 582, 590, 605, 608, 611, 627, 633, 637, 646, 649, 650, 655, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 691, 722, 738, 747, 755, 763, 775, 777, 778], "cxx03_data_encapsulation_c": [488, 502, 530, 531, 532, 533, 534, 535, 536, 537, 540, 547, 549, 582, 590, 605, 608, 611, 627, 633, 637, 646, 649, 650, 655, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 691, 722, 738, 747, 755, 763, 775, 777, 778], "cxx03_inheritance_oo_destructor": [488, 502, 530, 540, 582, 655, 679, 763, 777, 778], "cxx03_inheritance_oo_bas": [488, 502, 530, 540, 582, 655, 679, 763, 777, 778], "cxx03_inheritance_oo_interfac": [488, 502, 530, 540, 582, 655, 679, 763, 777, 778], "cxx03_inheritance_oo_polymorph": [488, 502, 530, 540, 582, 655, 679, 763, 777, 778], "cxx03_inheritance_oo_virtual_destructor": [488, 502, 530, 540, 582, 655, 679, 763, 777, 778], "cxx03_inheritance_oo_virtual_method": [488, 502, 530, 540, 582, 655, 679, 763, 777, 778], "cxx_design_patterns_heating_screenplai": [488, 778], "cxx_design_patterns_sensor_hierarchi": [488, 502, 530, 582, 778], "cxx_design_patterns_uml": [488, 502, 530, 582, 778], "cxx_design_patterns_adapt": [488, 502, 530, 582, 778], "cxx_design_patterns_observ": [488, 502, 530, 582, 778], "cxx_design_patterns_interpret": [488, 502, 530, 582, 778], "cxx_design_patterns_abstract_factori": [488, 502, 530, 582, 778], "cxx_design_patterns_singleton": [488, 502, 530, 582, 778], "cxx_design_patterns_decor": [488, 502, 530, 582, 778], "cxx_design_patterns_composit": [488, 502, 530, 582, 778], "cxx_design_patterns_proxi": [488, 502, 530, 582, 778], "cxx_exercises_design_patterns_proxy_round": [488, 502, 530, 582, 778], "cxx_design_patterns_command": [488, 502, 530, 582, 778], "cxx_design_patterns_oo_principl": [488, 778], "linux_basics_shell_cwd": [488, 502, 530, 531, 532, 533, 534, 535, 536, 537, 540, 582, 755, 777, 778, 852, 853, 854, 855, 858, 859, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 889, 890, 891, 892, 893, 894, 895, 896, 897, 899, 900, 901, 902, 903, 905, 921, 944, 950, 952, 960, 962, 976, 979, 982, 984, 1001, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010], "linux_basics_shell_path": [488, 502, 530, 531, 532, 533, 534, 535, 536, 537, 540, 582, 755, 777, 778, 852, 853, 854, 855, 858, 859, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 905, 921, 944, 950, 952, 960, 962, 976, 979, 982, 984, 1001, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010], "linux_basics_shell_commandlin": [488, 502, 530, 531, 532, 533, 534, 535, 536, 537, 540, 582, 755, 777, 778, 848, 852, 853, 854, 855, 858, 859, 866, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 905, 915, 921, 944, 950, 952, 960, 962, 976, 979, 982, 984, 1001, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010], "linux_basics_intro_process": [488, 502, 530, 531, 532, 533, 534, 535, 536, 537, 540, 582, 755, 777, 778, 852, 853, 854, 855, 858, 859, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 889, 890, 891, 892, 893, 894, 895, 896, 897, 899, 900, 901, 902, 903, 905, 921, 933, 934, 935, 936, 937, 944, 950, 952, 960, 962, 976, 979, 982, 984, 1001, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010], "linux_basics_shell_file_dir_create_rm": [488, 502, 530, 531, 532, 533, 534, 535, 536, 537, 540, 582, 755, 777, 778, 852, 853, 854, 855, 858, 859, 880, 889, 890, 891, 892, 893, 894, 895, 896, 897, 899, 905, 921, 944, 950, 952, 960, 962, 976, 979, 982, 984, 1001, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010], "linux_basics_intro_overview": [488, 502, 530, 531, 532, 533, 534, 535, 536, 537, 540, 582, 755, 777, 778, 848, 852, 853, 854, 855, 858, 859, 866, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 905, 915, 921, 933, 934, 935, 936, 937, 944, 950, 952, 960, 962, 976, 979, 982, 984, 1001, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010], "linux_toolchain_cmake_loc": [488, 502, 530, 531, 532, 533, 534, 535, 536, 537, 540, 582, 778, 921, 1001, 1009], "linux_toolchain_static_librari": [488, 502, 530, 531, 532, 533, 534, 535, 536, 537, 540, 582, 778, 921, 1001, 1004, 1006, 1007, 1009], "linux_toolchain_separate_compil": [488, 502, 530, 531, 532, 533, 534, 535, 536, 537, 540, 582, 778, 921, 1001, 1004, 1005, 1006, 1007, 1009], "linux_toolchain_bas": [488, 502, 530, 531, 532, 533, 534, 535, 536, 537, 540, 582, 755, 777, 778, 855, 858, 859, 921, 944, 950, 952, 960, 962, 976, 979, 982, 984, 1001, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010], "cxx_exercises_sensor_interfac": [488, 502, 530, 540, 582, 778], "sensorread": 489, "chrono_liter": [489, 682, 754, 756, 757], "demologg": 489, "cerr": [489, 528, 607, 676, 746, 756, 929, 963, 966], "demovaluestor": 489, "_store": 489, "namedsensor": 489, "_logger": 489, "_value_stor": 489, "sensora": 489, "sensorb": 489, "sensorc": 489, "200000": [489, 930, 1128], "this_thread": [489, 682, 743, 754, 756], "sleep_for": [489, 682, 743, 754, 756], "12597": 489, "valuestor": 489, "2895": 489, "158243": 489, "cassert": [489, 631, 672, 675, 677, 683, 756], "boss": 489, "v3": 489, "abort": [489, 508, 509, 592, 720, 943], "mocklogg": 489, "lines_log": 489, "mockvaluestor": 489, "sensorreader_suit": 489, "141320": 489, "memcheck": [489, 592, 741], "detector": [489, 592, 741], "myobserv": 491, "socialdb_observ": [491, 519], "newcitizenobserv": [491, 519], "new_citizen": 491, "_new_citizen_svnr": 491, "new_citizen_ad": [491, 519], "observer_suit": 491, "register_on": 491, "register_new_citizen_notif": [491, 519], "register_mani": 491, "observer1": 491, "observer2": 491, "register_dupl": 491, "observeralreadyregist": [491, 519], "unregister_new_citizen_notif": [491, 519], "unregister_not_regist": 491, "observernotregist": [491, 519], "addict": [492, 864, 885, 1149, 1157], "bertrand": 492, "barbara": 492, "polish": 492, "be_sick": 495, "insur": [495, 508, 509, 510, 522, 523, 524], "teardown": [495, 542, 1020, 1157, 1167, 1169], "purest": 496, "lightest": 496, "pidcontrol": 496, "cluster_cxx_exercises_design_patterns_solut": [502, 530, 582, 778], "cxx_exercises_design_patterns_interpreter_and_adapt": [502, 530, 582, 778], "cxx_exercises_design_patterns_interpreter_bas": [502, 530, 582, 778], "cxx_exercises_design_patterns_composit": [502, 530, 582, 778], "cxx_exercises_design_patterns_observ": [502, 530, 582, 778], "cxx_exercises_design_patterns_adapt": [502, 530, 582, 778], "cxx_exercises_design_patterns_singleton_flexible_strict": [502, 530, 582, 778], "cxx_exercises_design_patterns_singleton_inflex": [502, 530, 582, 778], "cxx_exercises_design_patterns_singleton_flex": [502, 530, 582, 778], "cxx_exercises_design_patterns_proxy_remot": [502, 530, 582, 778], "cxx_exercises_design_patterns_command": [502, 530, 582, 778], "cxx_exercises_design_patterns_abstract_factori": [502, 530, 582, 778], "cxx_exercises_design_patterns_decor": [502, 530, 582, 778], "cxx_exercises_design_patterns_solutions_composit": [502, 530, 582, 778], "cxx_exercises_design_patterns_solutions_observ": [502, 530, 582, 778], "cxx_exercises_design_patterns_solutions_interpreter_bas": [502, 530, 582, 778], "cxx_exercises_design_patterns_solutions_decor": [502, 530, 582, 778], "cxx_exercises_design_patterns_solutions_singleton_flexible_strict": [502, 530, 582, 778], "cxx_exercises_design_patterns_solutions_proxy_round": [502, 530, 582, 778], "cxx_exercises_design_patterns_solutions_abstract_factori": [502, 530, 582, 778], "cxx_exercises_design_patterns_solutions_command": [502, 530, 582, 778], "cxx_exercises_design_patterns_solutions_interpreter_and_adapt": [502, 530, 582, 778], "cxx_exercises_design_patterns_solutions_adapt": [502, 530, 582, 778], "cxx_exercises_design_patterns_solutions_singleton_flex": [502, 530, 582, 778], "cxx_exercises_design_patterns_solutions_singleton_inflex": [502, 530, 582, 778], "cxx_exercises_design_patterns_solutions_proxy_remot": [502, 530, 582, 778], "cla": 503, "roundingsensor": [503, 507, 521], "r1": [503, 604, 695], "r2": [503, 604, 695], "r3": 503, "sensorvalueexpress": [503, 517], "e1_e2": 503, "e1_e2_e3": 503, "num_measur": 503, "v_avg": 503, "v_ass": 503, "combinatin": 504, "interpreter_suit": 504, "e_lh": 504, "e_rh": 504, "e_add": 504, "e_sub": 504, "mul": 504, "e_mul": 504, "e_div": 504, "arithemet": 504, "arith": [504, 576, 577, 613, 614, 615, 616, 621], "combined_arith": 504, "l7": 504, "a_7_plus_3": 504, "s_3_minus_1": 504, "variable_not_set": 504, "analogi": [504, 528, 931, 993, 1033], "assignment_valu": 504, "variable_assign": 504, "ass": 504, "variable_used_as_express": 504, "ass_v1": 504, "ass_v2": 504, "reachabl": [506, 741, 929, 931], "remoteadapt": [506, 520], "response_promis": 506, "_adapt": 506, "_queue": [506, 754], "_thread": 506, "fulfil": [506, 541], "proxy_remote_suit": 506, "_c": 506, "remotesensoradapt": [506, 520], "remotesensor": [506, 520], "remote_sensor__is_a__sensor": 506, "somth": 506, "simplist": 506, "fullfil": 507, "proxy_round_suit": 507, "round_down": 507, "round_up": 507, "rouding_sensor__is_a__sensor": 507, "advis": [508, 1119], "hypothet": [508, 540, 541, 591, 922], "fee": 508, "socialinsur": [508, 509, 510, 524], "oegk": [508, 509], "startup": [508, 509, 510, 522, 857, 993, 999, 1031], "set_inst": [508, 509, 522], "make_uniqu": [508, 522, 774], "socinsur": [509, 523], "inisur": 509, "reimplement": [509, 678], "compiabl": [509, 523], "iface_inst": [509, 523], "svs_instanc": [509, 523], "oegk_inst": [509, 523], "another_inst": [509, 510, 523, 524], "1485": [509, 510], "unset": [509, 972], "sozialversicherung": [510, 524], "unrealist": 510, "adapte": 512, "_adapte": 512, "_svnr": 513, "_firstnam": [513, 643, 1043], "_lastnam": [513, 643, 1043], "_result": 513, "_command": 513, "get_if": [513, 768], "decoratedconstantsensor": 515, "sstream": [515, 520, 602, 604], "iomanip": 515, "ostringstream": [515, 520, 601, 602, 603, 604], "decoratedrandomsensor": 515, "_variabl": 518, "_lh": 518, "_rh": 518, "_context": 518, "_var": 518, "_exp": 518, "stdexcept": [518, 520, 522, 523, 524, 542, 776], "_new_citizen_observ": 519, "num_eras": 519, "_server": 520, "cstdio": 520, "num_item": 520, "sscanf": 520, "cmath": [521, 586, 594, 595, 603, 689, 705, 706, 707, 708, 745], "_instanc": [522, 523, 524], "_databas": [522, 523, 524], "0l": [522, 523], "cstdlib": [523, 542], "ssocinsur": 523, "toi": [525, 682, 997], "millidegre": 525, "parameteriz": [526, 1125], "loop_and_measur": 526, "niter": 526, "counterpart": 527, "stod": 528, "uniform_real_distribut": [528, 536, 740], "default_random_engin": [528, 536, 740], "random_devic": [528, 536, 740], "_distribut": [528, 740], "_engin": [528, 740, 1145], "_y": [528, 586, 587, 589, 591, 593, 594, 595, 596, 598, 600, 610, 625, 689, 704, 706, 707, 708], "spit": [528, 1131], "cluster_linux_basics_permiss": [530, 582, 755, 777, 778, 855, 858, 859, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 921, 950, 952, 960, 962, 976, 979, 982, 984], "cluster_linux_sysprog": [530, 582, 755, 777, 778, 855, 858, 859, 921, 944, 950, 952, 960, 962, 964, 976, 979, 982, 984], "cluster_linux_sysprog_fileio": [530, 582, 755, 777, 778, 855, 858, 859, 921, 950, 952, 960, 962, 976, 979, 982, 984], "cluster_linux_sysprog_bas": [530, 582, 755, 777, 778, 855, 858, 859, 921, 944, 950, 952, 960, 962, 976, 979, 982, 984], "cluster_cxx_exercises_stl": [530, 547, 549, 582, 778], "cluster_cxx_exercises_stl_sensor_repositori": [530, 547, 549, 582, 778], "cluster_cxx_exercises_fh_sensor_first_tri": [530, 582, 778], "cluster_cxx03_functions_and_method": [530, 547, 549, 582, 605, 608, 611, 627, 633, 637, 646, 649, 650, 664, 665, 667, 668, 670, 671, 672, 674, 675, 676, 677, 678, 679, 691, 722, 738, 747, 755, 775, 777, 778], "cluster_cxx03_templ": [530, 547, 549, 582, 611, 627, 633, 637, 646, 649, 650, 667, 674, 675, 676, 677, 678, 679, 778], "cluster_cxx03_stl": [530, 547, 549, 582, 627, 633, 637, 645, 646, 647, 649, 650, 667, 674, 675, 676, 677, 678, 679, 778], "cluster_cxx03_stl_algorithm": [530, 547, 582, 627, 646, 649, 650, 679, 778], "cluster_cxx03_stl_associative_contain": [530, 547, 549, 582, 637, 646, 650, 679, 778], "cluster_cxx03_except": [530, 547, 549, 582, 608, 611, 627, 633, 637, 646, 649, 650, 667, 674, 675, 676, 677, 678, 679, 778], "linux_basics_shell_l": [530, 582, 755, 777, 778, 852, 853, 854, 855, 858, 859, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 889, 892, 893, 896, 897, 899, 900, 901, 902, 903, 905, 921, 950, 952, 960, 962, 976, 979, 982, 984], "linux_basics_permissions_bas": [530, 582, 755, 777, 778, 855, 858, 859, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 921, 950, 952, 960, 962, 976, 979, 982, 984], "linux_sysprog_fileio_exercise_w1_sensor": [530, 582, 778, 921, 960, 962, 979], "linux_sysprog_fileio_bas": [530, 582, 755, 777, 778, 855, 858, 859, 921, 950, 952, 960, 962, 976, 979, 982, 984], "linux_sysprog_basics_errorhandl": [530, 582, 755, 777, 778, 855, 858, 859, 921, 944, 950, 952, 960, 962, 976, 979, 982, 984], "linux_sysprog_basics_groupnod": [530, 582, 755, 777, 778, 855, 858, 859, 921, 944, 950, 952, 960, 962, 976, 979, 982, 984], "linux_sysprog_basics_syscal": [530, 582, 755, 777, 778, 855, 858, 859, 921, 944, 950, 952, 960, 962, 976, 979, 982, 984], "cxx_exercises_switch_mock_nopoli": [530, 531, 532, 537, 582, 778], "cxx_exercises_sensor_w1": [530, 582, 778], "cxx_exercises_sensor_avg_nopoli": [530, 533, 582, 778], "cxx_exercises_sensor_mock_nopoli": [530, 531, 532, 533, 535, 582, 778], "cxx03_data_encapsulation_initializer_list": [530, 533, 536, 582, 590, 679, 778], "cxx_exercises_display_led_stripe_nopoli": [530, 531, 582, 778], "cxx_exercises_hysteresis_nopoli": [530, 532, 582, 778], "cxx_exercises_sensor_const_nopoli": [530, 534, 536, 582, 778], "cxx_exercises_oo_shap": [530, 582, 778], "cxx03_functions_and_methods_method": [530, 547, 549, 582, 605, 608, 611, 627, 633, 637, 646, 649, 650, 667, 668, 670, 671, 672, 674, 675, 676, 677, 678, 679, 691, 722, 738, 747, 755, 775, 777, 778], "cxx03_functions_and_methods_stat": [530, 547, 549, 582, 605, 608, 611, 627, 633, 637, 646, 649, 650, 667, 674, 675, 676, 677, 678, 679, 778], "cxx03_functions_and_methods_const": [530, 547, 549, 582, 605, 608, 611, 627, 633, 637, 646, 649, 650, 667, 670, 671, 674, 675, 676, 677, 678, 679, 691, 722, 738, 747, 755, 775, 777, 778], "cxx03_functions_and_methods_oper": [530, 547, 549, 582, 605, 608, 611, 627, 633, 637, 646, 649, 650, 667, 674, 675, 676, 677, 678, 679, 778], "cxx_exercises_sensor_w1_factori": [530, 582, 778], "cxx_exercises_sensor_random_nopoli": [530, 536, 582, 778], "cxx_exercises_stl_filter_greater_10": [530, 547, 582, 778], "cxx_exercises_stl_vector": [530, 547, 582, 778], "cxx03_stl_vector_copy_etc": [530, 547, 582, 646, 650, 679, 778], "cxx_exercises_stl_algo": [530, 547, 582, 778], "cxx03_stl_algorithm_find": [530, 547, 582, 627, 646, 650, 679, 778], "cxx03_stl_algorithm_copi": [530, 547, 582, 627, 646, 650, 679, 778], "cxx_exercises_stl_filter_odd": [530, 547, 582, 778], "cxx_exercises_stl_uniq": [530, 547, 582, 778], "cxx_exercises_stl_filter_gener": [530, 547, 582, 778], "cxx_exercises_stl_map": [530, 547, 549, 582, 778], "cxx03_stl_associative_containers_map": [530, 547, 549, 582, 637, 646, 650, 679, 778], "cxx_exercises_stl_sensor_repository_memory_leak": [530, 547, 549, 582, 778], "cxx_exercises_stl_sensor_repository_lookup_not_found": [530, 547, 549, 582, 778], "cxx_exercises_stl_sensor_repository_insert_no_overwrit": [530, 547, 549, 582, 778], "cxx_exercises_stl_sensor_repository_remove_sunni": [530, 547, 549, 582, 778], "cxx_exercises_stl_sensor_repository_lookup_sunni": [530, 547, 549, 582, 778], "cxx_exercises_stl_sensor_repository_insert_sunni": [530, 547, 549, 582, 778], "cxx_exercises_stl_sensor_repository_remove_not_found": [530, 547, 549, 582, 778], "cxx_exercises_stl_sensor_repository_size_const": [530, 547, 549, 582, 778], "cxx_exercises_fh_sensor_first_try_exercise_fh_sensor_oo_random_sensor": [530, 582, 778], "cxx_exercises_fh_sensor_first_try_exercise_fh_sensor_oo": [530, 582, 778], "cxx_exercises_fh_sensor_first_try_exercise_fh_sensor_oo_loop_funct": [530, 582, 778], "cxx_exercises_fh_sensor_first_try_exercise_fh_sensor_oo_no_polymorph": [530, 582, 778], "cxx03_functions_and_methods_overload": [530, 547, 549, 582, 605, 608, 611, 627, 633, 637, 646, 649, 650, 664, 665, 667, 668, 670, 671, 672, 674, 675, 676, 677, 678, 679, 691, 722, 738, 747, 755, 775, 777, 778], "cxx03_functions_and_methods_thi": [530, 547, 549, 582, 605, 608, 611, 627, 633, 637, 646, 649, 650, 667, 670, 671, 674, 675, 676, 677, 678, 679, 691, 722, 738, 747, 755, 775, 777, 778], "cxx03_functions_and_methods_refer": [530, 547, 549, 582, 605, 608, 611, 627, 633, 637, 646, 649, 650, 667, 670, 671, 674, 675, 676, 677, 678, 679, 691, 722, 738, 747, 755, 775, 777, 778], "cxx03_templates_function_templ": [530, 547, 549, 582, 611, 627, 633, 637, 646, 649, 650, 667, 674, 675, 676, 677, 678, 679, 778], "cxx03_exceptions_try_catch": [530, 547, 549, 582, 608, 611, 627, 633, 637, 646, 649, 650, 667, 674, 675, 676, 677, 678, 679, 778], "cxx03_templates_class_templ": [530, 547, 549, 582, 611, 627, 633, 637, 646, 649, 650, 667, 674, 675, 676, 677, 678, 679, 778], "cxx03_stl_basic": [530, 547, 549, 582, 627, 633, 637, 646, 649, 650, 667, 674, 675, 676, 677, 678, 679, 778], "cxx03_stl_associative_containers_bas": [530, 547, 549, 582, 637, 646, 650, 679, 778], "cxx03_exceptions_bas": [530, 547, 549, 582, 608, 611, 627, 633, 637, 646, 649, 650, 667, 674, 675, 676, 677, 678, 679, 778], "mockswitch_nopoli": [531, 532, 537], "display_led_stripe_nopoly_suite__somewhere_in_the_middl": 531, "nopoli": [531, 532, 533, 534, 535, 536, 537], "display_led_stripe_nopoly_suit": 531, "somewhere_in_the_middl": 531, "sw0": 531, "sw1": 531, "sw2": 531, "sw3": 531, "sw4": 531, "sw5": 531, "sw6": 531, "sw7": 531, "display_led_stripe_nopoly_suite__below_rang": 531, "below_rang": 531, "display_led_stripe_nopoly_suite__above_rang": 531, "above_rang": 531, "display_led_stripe_nopoly_suite__mov": 531, "movement": [531, 922], "set_temperatur": [531, 532, 533, 535], "display_led_stripe_nopoly_suite__vari": 531, "variation_2_switch": 531, "variation_interval_not_from_0": 531, "thermostat": 532, "threshold": 532, "nop_when_within_rang": 532, "hysteresis_suit": 532, "hyst": 532, "falls_below_rang": 532, "rises_above_rang": 532, "rises_above_range_when_on": 532, "sensor_avg_nopoly_suit": 533, "sensor_const_nopoly_suit": 534, "subsequ": 535, "sensor_mock_nopoly_suit": 535, "sensor_random_suit": [536, 540, 541], "uniformli": 536, "rd": 536, "obtain": [536, 753, 1073], "rng": 536, "tailor": 536, "switch_mock_suit": 537, "initial_st": [537, 1168], "set_on_off": 537, "initial_failur": 538, "failit": 538, "point_suit": [538, 602], "ctor_and_gett": 538, "ctor_and_getters_const": 538, "default_ctor": [538, 601, 602, 603, 604, 758], "equal_method": 538, "p3": 538, "p4": [538, 885], "assert_fals": [538, 543, 548, 550, 555, 584, 601, 602, 603, 604, 776], "equal_method_const": 538, "operator_equ": 538, "operator_equals_const": 538, "move_method": 538, "operator_plus_equ": 538, "add_method": 538, "new_p": 538, "add_method_const": 538, "operator_plu": [538, 601, 602, 603], "operator_plus_const": 538, "radiu": 538, "circle_suit": 538, "ctor_and_getters_using_operator_equ": 538, "14159": 538, "53981634": 538, "area_const": 538, "square_suit": 538, "bottom_left": [538, 604], "side_length": 538, "shape_suit": 538, "circle_is_a_shap": 538, "square_is_a_shap": 538, "area_is_shape_functionality__circl": 538, "area_is_shape_functionality__squar": 538, "human": [539, 541, 746, 885, 907, 999, 1044, 1130], "ineffici": [539, 662, 842, 961], "epath": 539, "bag_copy_suit": [539, 772], "find_by_int_ok": [539, 772, 773, 774], "find_by_int_nok": [539, 772, 773, 774], "remove_by_int_ok": [539, 772, 773, 774], "bag_unique_suit": [539, 774], "bag_shared_suit": [539, 773], "insert_const_ref": [539, 773], "insert_mov": [539, 773], "unrel": [540, 571, 580, 746, 763, 764, 768, 777, 778, 983, 993, 1022, 1039, 1137], "tyo": 540, "sensor_const_suit": [540, 541], "is_a_sensor": [540, 541], "5731": 540, "aptli": 541, "23062": 541, "w1sensorfactori": 541, "find_by_address": 541, "sensor_w1_factory_suit": 541, "fstream": [541, 776], "tmpdir_fixtur": 541, "device_dir": 541, "create_directori": 541, "ofstream": [541, 776], "42459": 541, "temp_milli": [541, 542], "w1_fs_root": 541, "sensor_factori": 541, "0x02131d959eaa": 541, "assert_n": [541, 577, 600, 601, 736, 758, 773, 774], "horizon": 541, "0x012345678901": 541, "w1_sensor_suit": [541, 542], "test_read_sensor": [541, 542], "36700": 541, "basedir": 541, "0x2131d959eaa": 541, "dcmake_toolchain_fil": [542, 1000, 1014], "20687": 542, "write_temperatur": 542, "thaht": 542, "filename_pattern": 542, "xxxxxx": 542, "mkstemp": 542, "unlink": [542, 991, 993], "to_str": [542, 662], "off_t": [542, 951, 961, 966, 992], "lseek": [542, 961, 966, 992], "seek_set": [542, 951, 966, 992], "nwritten": [542, 955, 956, 957, 958, 963, 966, 992, 996], "algo": [543, 576, 577, 612, 613], "copy_into_vector": 543, "stl_exercises_suit": [543, 544, 545, 546, 548, 550, 551, 552, 553, 555, 556, 557, 558, 559], "required_cont": 543, "find_in_vector": 543, "my_vec": [543, 559], "wladimir": 543, "sort_in_plac": 543, "required_output": [543, 544, 545, 546, 558], "orig_input": [543, 544, 545, 546, 558], "alement": 544, "is_odd": 544, "filter_greater_10": 545, "filter_odd": 546, "map_insert": 548, "my_map": [548, 638, 639, 640, 641, 642], "map_insert_simpl": 548, "insert_check_dupl": 548, "map_insert_check_dupl": 548, "insert_remove_by_kei": 548, "map_insert_remove_by_kei": 548, "map_remove_by_kei": 548, "map_find": 548, "sensorrepositori": [549, 550, 551, 552, 553, 554, 555, 556, 557], "decript": 549, "sensor_repository_insert_dupl": 550, "add_sensor": [550, 551, 552, 553, 555, 556], "ofen": [550, 551, 552, 553, 555, 556], "weltraum": [550, 551, 552, 553, 555, 556], "mond": [550, 555], "sucess": 550, "sensor_repository_insert": 551, "sensor_repository_lookup_neg": 552, "get_sensor": [552, 553, 556], "sensor_repository_lookup_posit": 553, "complaint": 554, "ish": 554, "sensor_repository_remove_nonexist": 555, "remove_sensor": [555, 556], "sensor_repository_remov": 556, "sensor_repository_size_const": 557, "vector_append": 559, "vector_join": 559, "joined_cont": 559, "userdb_map": 560, "userdb_vector": 560, "dan": 560, "sak": 560, "cppcon": [560, 687, 689, 690, 703, 710, 728, 739, 760, 763], "transcrib": 560, "mallocfre": 565, "arrayofinteg": 565, "memoryleak": 565, "arrayboundswrit": 565, "newdelet": 565, "singleinteg": 565, "deletemismatch": 565, "thing1": [567, 568], "thing2": [567, 568], "global_str": 568, "__have_thing_h__": 568, "_content": 568, "denstruct": 568, "destruct": [568, 589, 659, 690, 740, 867], "essenc": [568, 1163], "collaps": 571, "thoroughli": [571, 929], "_mem": [574, 720], "determinist": [574, 739, 753, 1020, 1071], "maybeown": 574, "pointerarithmet": 577, "bugp": 577, "105ff": 577, "num_el": 577, "another_arrai": 577, "yet_another_arrai": 577, "108ff": 577, "basics_cxx03": 577, "basics_cxx11": 577, "cbegin": [577, 630, 649, 686, 697], "my_copi": 577, "naivecopi": 577, "cend": [577, 630, 649, 686], "algocopi": 577, "backinsert": 577, "back_insert_iter": [577, 618], "nah": [577, 1165], "insertfind": 577, "make_pair": [577, 640, 643, 731], "erasebyposit": 577, "erasebykei": 577, "domin": 583, "bjarn": [583, 763], "stroustrup": [583, 763], "1985": 583, "2003": [583, 1176], "point_c_suit": [584, 586], "struct_initi": 584, "point_init_default": 584, "c_default_constructor_init": 584, "point_create_default": 584, "c_default_constructor_cr": 584, "point_creat": [584, 586], "c_constructor": [584, 586], "eq": [584, 600, 602, 604], "point_equ": 584, "point_not_equ": 584, "eq_n": 584, "point_mov": [584, 586, 594, 596], "point_add": 584, "point_sub": 584, "add_sub": 584, "point_dist": 584, "point_ab": [584, 586], "hyp": [584, 586, 594], "unwant": [584, 635, 731, 803, 1022, 1043, 1067], "cpp_copy_suit": 585, "generated_copy_ctor": 585, "copy1": [585, 741], "copy2": [585, 741], "copy3": 585, "manual_copy_suit": 585, "copy_ctor": [585, 740], "assignment_oper": 585, "earlier": 586, "point_h": [586, 594, 595], "point_cpp_suit": 586, "constructor_coordin": 586, "inaccessibil": 586, "move_op_pluseq": 586, "whenev": [587, 594, 604, 690], "sth": 588, "dirty_stack": 588, "use_uniniti": 588, "onward": [588, 592, 599], "nw": 589, "memberwis": 589, "_c_str": [589, 592, 693], "cxx03_data_encapsulation_copy_bas": [590, 679, 778], "cxx03_data_encapsulation_object_copi": [590, 679, 691, 722, 738, 747, 755, 775, 777, 778], "string_h": [592, 693], "cstring": [592, 693, 694, 727], "tcach": [592, 720], "221601": 592, "julian": [592, 741], "seward": [592, 741], "libvex": [592, 741], "rerun": [592, 741], "realloc": [592, 635], "0x484465b": 592, "1103": 592, "0x401210": 592, "0x401194": 592, "0x4dc8c80": 592, "0x401188": 592, "0x484222f": 592, "0x4011c5": 592, "0x40116f": 592, "freed": [592, 784, 954, 1020], "destroi": [592, 654, 676, 695, 712, 727, 742, 753, 815], "221807": 592, "twostr": 592, "twotwostr": 592, "s21": 592, "s22": 592, "segfault": [592, 839, 997], "paraamet": 593, "__pretty_function__": 593, "0000000000401176": 593, "_z1fi": 593, "00000000004011a0": 593, "_z1fpc": 593, "demangl": 593, "anywher": [594, 1018], "fab": [594, 595], "distance_origin": [594, 595, 745], "hid": 594, "standardes": 594, "d_orig": 595, "fpermiss": [595, 732], "arrog": 595, "goodi": [595, 923], "pascal": 597, "uninitil": 597, "pass_by_copi": 597, "references_suit": 597, "voila": [597, 929, 987, 1000, 1001, 1011, 1042], "tediou": [597, 948, 1001, 1075], "pass_by_point": 597, "pass_by_refer": 597, "pass_by_const_point": 597, "const_point": 597, "pass_by_const_refer": 597, "const_refer": 597, "pass_by_copy_expens": 597, "copy_expens": 597, "pass_by_const_reference_cheap": 597, "const_reference_cheap": 597, "addend": [598, 725, 745], "straightforwardli": [598, 1080], "add_point": 598, "static_suit": 598, "global_funct": 598, "static_method": 598, "bss": 599, "definition1": 599, "definition2": 599, "forbid": 599, "trickeri": 599, "points_equ": 600, "oddli": 600, "operators_suit": 600, "equals_glob": 600, "difficulti": 600, "equals_object": 600, "vector_addition_glob": 600, "vector_addition_object": 600, "point_plus_equ": 600, "combo": [601, 603], "cuboid_suit": 601, "front_bottom_left": 601, "point_whl_ctor": 601, "operator_eq_n": [601, 602, 603, 604], "operator_pluseq": [601, 602, 603], "operator_minuseq": [601, 603], "operator_minu": [601, 603], "operator_ostream": [601, 602, 603, 604], "buf": [601, 602, 603, 604, 943, 951, 961], "entirei": [601, 603, 604], "starting_point": 602, "implementation_in_cpp_fil": 602, "rectangle_suit": [602, 604], "pluseq": 602, "operator_unary_minu": [602, 603], "minus_p": [602, 603], "point3d_suit": 603, "coordinates_ctor": 603, "071067812": 603, "69041576": 603, "top_right": 604, "top_left": 604, "bottom_right": 604, "rational": [604, 638], "operator_plus_equal_vec": 604, "plus_vec": 604, "cxx03_functions_and_methods_exercise_class_point": [605, 679, 778], "cxx03_functions_and_methods_exercise_class_cuboid": [605, 679, 778], "cxx03_functions_and_methods_exercise_class_point3d": [605, 679, 778], "cxx03_functions_and_methods_exercise_class_rectangl": [605, 679, 778], "cxx03_functions_and_methods_static_member_vari": [605, 679, 778], "dothat": [606, 607], "dothi": [606, 607], "dothos": [606, 607], "dammit": [606, 607, 686], "thisexcept": 607, "thatexcept": 607, "thrown": [607, 996], "myexcept": 607, "error_detect": 607, "granular": [607, 796, 983], "typenam": [609, 610, 692, 699, 700, 701, 702, 704, 706, 707, 708, 713, 734, 740, 744, 754, 756], "a_begin": [613, 615], "a_end": [613, 615], "src_begin": [613, 617], "src_end": [613, 617], "dst_begin": [613, 617], "decai": 614, "zeroth": 614, "warrai": 616, "unflex": 618, "shrink_to_fit": 618, "prealloc": [618, 619], "wnonnul": 619, "gool": [620, 687], "cplusplu": [622, 623, 624, 625, 626, 628, 629, 630, 631, 634, 643], "int_arrai": [622, 624, 628, 631], "binarili": 622, "is_el": 622, "original_begin": 623, "original_end": 623, "copy_run": 623, "original_run": 623, "int_array_c": 624, "match_666": 625, "match_42": 625, "x_equals_666": 625, "x_equals_4": 625, "x_equal": 625, "_criterion": 625, "yesno": [625, 852, 853], "output_stern": 626, "output_bindestrich": 626, "output_with_prefix": 626, "_prefix": 626, "cxx03_stl_algorithm_find_if": [627, 646, 650, 679, 778], "cxx03_stl_algorithm_sort": [627, 646, 650, 679, 778], "cxx03_stl_algorithm_binary_search": [627, 646, 650, 679, 778], "cxx03_stl_algorithm_lower_bound": [627, 646, 650, 679, 778], "cxx03_stl_algorithm_revers": [627, 646, 649, 650, 679, 778], "cxx03_stl_algorithm_for_each": [627, 646, 650, 679, 778], "cxx03_stl_algorithm_reverse_copi": [627, 646, 649, 650, 679, 778], "reversed_": [630, 649], "less_revers": 631, "greater_than": 631, "cluster_cxx03_stl_sequential_contain": [633, 646, 650, 679, 778], "cxx03_stl_sequential_containers_vector": [633, 646, 650, 679, 778], "cxx03_stl_sequential_containers_bas": [633, 646, 650, 679, 778], "cxx03_stl_sequential_containers_list": [633, 646, 650, 679, 778], "liek": 635, "logarithm": 635, "mein_int_arrai": 635, "insert_po": 635, "new_elems_as_vector": 635, "elems_to_insert": 635, "cxx03_stl_associative_containers_multimap": [637, 646, 650, 679, 778], "realiz": [638, 1071], "parameter": [638, 744, 749, 1007, 1021], "keytyp": [638, 682], "valuetyp": [638, 682], "some_map": 638, "key_typ": [638, 639], "mapped_typ": [638, 639], "value_typ": [638, 639], "emplac": 638, "collis": 638, "zweiundvierzig": 638, "out_of_rang": [638, 642], "mymap": [639, 640, 641, 642], "sechshundersechsundsechzig": 639, "kv": 639, "pre11": [639, 640], "einundfuenfzig": [639, 640, 641, 642], "vierundfuenfzig": [639, 640, 641, 642], "dreihundertsechsundvierzig": [639, 640, 641, 642], "tausendein": [639, 640, 641, 642], "tausendzwei": [639, 640, 641, 642], "retval_7": 640, "retval_2": 640, "n_remov": 641, "found_value_1001": 642, "found_value_666": 642, "found_valu": 642, "joerg_svnr": 643, "caro_svnr": 643, "johanna_svnr": 643, "philipp_svnr": 643, "datenzwilling_von_joerg": 643, "faschingzwil": 643, "meine_map": 643, "datenzwil": 643, "equal_rang": 643, "found_rang": 643, "svnr_notexist": 643, "1234567": 643, "memory_resourc": 644, "cluster_cxx03_stl_alloc": [645, 646, 650, 679, 778], "cxx03_stl_allocator_bas": [645, 646, 650, 679, 778], "cluster_cxx03_stl_exercis": [646, 647, 649, 650, 679, 778], "cluster_cxx03_stl_exercises_reverse_str": [646, 647, 649, 650, 679, 778], "cxx03_stl_exercises_reverse_string_exercis": [646, 647, 649, 650, 679, 778], "cxx03_stl_exercises_reverse_string_solut": [646, 649, 650, 679, 778], "auto_ptr": [651, 690, 1176], "cluster_cxx03_dynamic_memori": [652, 679, 778], "cxx03_dynamic_memory_todo": [652, 679, 778], "inher": [653, 654, 657, 659, 660, 985, 1073], "novirtu": [653, 654, 660], "mantra": [654, 850], "spoiler": [654, 1031], "cxx03_inheritance_oo_private_protect": [655, 679, 778], "derived1": 657, "derived2": 657, "countless": 657, "derived3": 657, "unimpl": [657, 1035], "polymorp": [659, 762], "strictli": [659, 929, 930, 1031], "indirect": [660, 746, 862, 1016], "cluster_cxx03_standard_library_miscellanea": [661, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 778], "cxx03_standard_library_miscellanea_str": [661, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 778], "string_suit": 662, "another_hello": 662, "greeting1": 662, "greeting2": 662, "convert_to_signed_integ": 662, "stol": 662, "stoll": 662, "numstr": 662, "stoi": [662, 963, 966], "convert_to_unsigned_integ": 662, "stoull": 662, "stoui": 662, "stoul": 662, "convert_from_someth": 662, "basic_str": [662, 744, 776], "i_str": 662, "ui_str": 662, "666000": 662, "sprintf": [662, 963, 966, 996, 997], "print_char": 663, "cluster_cxx03_exercises_misc": [663, 664, 665, 666, 679, 778], "cxx03_exercises_misc_american_flag": [663, 665, 679, 778], "cxx03_exercises_misc_fh_moodle_quiz": [664, 665, 679, 778], "cxx03_exercises_misc_sum_integers_from_stdin": [665, 666, 679, 778], "ctrl": [666, 997, 1049], "cluster_cxx03_exercises_userdb": [667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 778], "cxx03_exercises_userdb_user_default_ctor": [667, 674, 675, 676, 677, 678, 679, 778], "cxx03_exercises_userdb_user_const": [667, 670, 671, 674, 675, 676, 677, 678, 679, 778], "cxx03_exercises_userdb_user_const_memb": [667, 668, 669, 670, 671, 672, 674, 675, 676, 677, 678, 679, 778], "cxx03_exercises_userdb_user_ctor": [667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 778], "cxx03_exercises_userdb_user_access_method": [667, 668, 670, 671, 674, 675, 676, 677, 678, 679, 778], "cxx03_exercises_userdb_user_simple_method": [667, 668, 670, 671, 672, 674, 675, 676, 677, 678, 679, 778], "cxx03_exercises_userdb_userdb_insert": [667, 674, 675, 676, 677, 679, 778], "cxx03_exercises_userdb_userdb_vector_bas": [667, 674, 675, 676, 677, 678, 679, 778], "cxx03_exercises_userdb_userdb_search_notfound_except": [667, 676, 679, 778], "cxx03_exercises_userdb_userdb_search_find_if": [667, 675, 676, 679, 778], "cxx03_exercises_userdb_userdb_search": [667, 675, 676, 677, 679, 778], "architecton": 669, "celebr": 672, "trittsich": [672, 673], "age_by_n_year": 672, "user_init": 673, "userdb_insert": 674, "doesnotexist": [675, 677], "isvalid": [675, 676, 677], "unnatur": 676, "_user": [676, 827], "thereaft": 676, "wrinkl": 676, "usernotfound": 676, "unreach": [676, 940], "userdb_search_by_lastnam": 677, "undetect": 677, "userdb_init": 678, "cluster_cxx11": [680, 684, 691, 698, 709, 722, 723, 733, 738, 747, 755, 759, 763, 775, 777, 778], "cluster_cxx11_introduct": [680, 684, 722, 775, 777, 778], "cxx11_introduction_overview_livehack": [680, 777, 778], "cxx11_introduction_histori": [680, 684, 722, 775, 777, 778], "ugliest": 681, "todo_list": 682, "tdl": 682, "desc": 682, "key_value_pair": 682, "up_1_to_10": 682, "down_1000_to_980": 682, "todo_item": 682, "make_shar": [682, 743, 773], "todolist": 682, "nocopi": 682, "add_item": 682, "_list": 682, "evangelist": 682, "wchar_t": 683, "cluster_cxx11_new_language_featur": [684, 691, 698, 709, 722, 723, 733, 738, 747, 755, 775, 777, 778], "cluster_cxx11_new_language_features_brace_initi": [684, 722, 775, 777, 778], "cxx11_new_language_features_auto": [684, 722, 775, 777, 778], "cxx11_new_language_features_strongly_typed_enum": [684, 722, 775, 777, 778], "cxx11_new_language_features_brace_initialization_intro": [684, 722, 775, 777, 778], "cxx11_new_language_features_brace_initialization_mess": [684, 722, 777, 778], "cxx11_new_language_features_brace_initialization_implementor_view": [684, 722, 777, 778], "pointcloud": [685, 687], "_point": 685, "data_": [686, 688], "memoriz": 686, "brace_initialization_suit": 687, "explicit_ctor_cal": 687, "initlist_ctor_cal": 687, "explicit_ctor": 687, "initlist_ctor": 687, "disabigu": 687, "nightmar": [687, 690, 1016], "size_": 688, "constexpr_suit": 689, "basic_const_is_constexpr": 689, "constexpr_function_request": 689, "constexpr_function_not_request": 689, "constexpr_recursive_funct": 689, "6765": 689, "constexpr_ctor": 689, "schurr": 689, "olsen": [690, 739], "nicolai": [690, 732, 735], "josutti": [690, 732, 735], "smartptr": [691, 722, 740, 741, 777, 778], "cluster_cxx11_new_language_features_move_pf": [691, 722, 738, 747, 755, 775, 777, 778], "cluster_cxx11_smart_point": [691, 722, 738, 747, 755, 775, 777, 778], "cxx11_perfect_forward": [691, 722, 777, 778], "cxx11_new_language_features_move_pf_overview": [691, 722, 738, 747, 755, 775, 777, 778], "cxx11_new_language_features_miscellan": [691, 722, 738, 747, 755, 775, 777, 778], "cxx11_new_language_features_move_pf_afterword": [691, 722, 777, 778], "cxx11_new_language_features_move_pf_livehack_using_string_mov": [691, 722, 777, 778], "cxx11_smart_pointers_unique_ptr": [691, 722, 738, 747, 755, 775, 777, 778], "cxx11_new_language_features_move_pf_livehack_string_mov": [691, 722, 777, 778], "cxx11_smart_pointers_introduct": [691, 722, 738, 747, 755, 775, 777, 778], "_p": [692, 740], "handwritten_suit": [692, 740], "explicit_mov": [692, 740], "assert_double_eq": [692, 740, 741], "create_constant_sensor": [692, 742], "prove": [692, 864], "return_by_copi": 692, "another_sensor": 692, "assigne": 692, "dubiou": 692, "bugfre": 693, "string_move_suit": 693, "make_a_string_from": 693, "ret_": 693, "move_return": 693, "move_assign": 693, "assig": 693, "person_h": 694, "person_suit": 694, "contructor": 694, "outliv": [695, 1018], "rvr": 695, "ado": [697, 968, 1132], "mytyp": 697, "spellabl": 697, "0x7ffcd604846c": 697, "0x7ffcd6048468": 697, "iref": 697, "0x7ffffefe2b54": 697, "0x7ffffefe2b50": 697, "0x7ffc59ebd7bc": 697, "ciref": 697, "0x7ffc23e46284": 697, "0x7ffe4a148064": 697, "0x7ffc528e013c": 697, "cluster_cxx11_new_language_features_concept": [698, 722, 777, 778], "cxx11_new_language_features_concepts_link": [698, 722, 777, 778], "cxx11_new_language_features_concepts_intro": [698, 722, 777, 778], "cxx11_new_language_features_concepts_writing_concept": [698, 722, 777, 778], "conceptless": 699, "4ul": [699, 700], "4l": [699, 700], "satisfact": 699, "is_integral_v": 699, "_tp": [699, 732, 742], "hendrik": 703, "niemey": 703, "hypotenus": [704, 705, 706, 707, 708], "sumsq": [704, 705, 706, 707, 708], "point2d": [704, 706, 707, 708], "dozen": 704, "ruin": 704, "5l": 704, "same_a": 704, "commone_reference_with": 704, "common_reference_with": [704, 708], "has_siz": [707, 708], "index_returns_doubl": 708, "cluster_cxx11_new_language_features_coroutin": [709, 722, 777, 778], "cxx11_new_language_features_coroutines_intro": [709, 722, 777, 778], "stackless": 710, "asio": 710, "co_return": [710, 714, 715, 716, 717, 718], "hello_inst": [710, 714, 715, 716, 717, 718], "promise_typ": [710, 712, 713, 715, 716, 717, 718], "get_return_object": [710, 712, 713, 715, 716, 717, 718], "suspend_alwai": [710, 712, 713, 715, 716, 717, 718], "initial_suspend": [710, 712, 713, 715, 716, 717, 718], "final_suspend": [710, 712, 713, 715, 716, 717, 718], "return_void": [710, 713, 715, 716, 717, 718], "unhandled_except": [710, 712, 713, 715, 716, 717, 718], "suspend_nev": [710, 712, 713, 717], "coroutine_handl": [710, 712, 713, 716, 717, 718], "from_promis": [710, 712, 713, 716, 717, 718], "_coro": [710, 712], "yield_valu": [710, 712, 713, 716, 717, 718], "sentinel": [710, 713, 717, 718, 732], "_promis": [710, 713, 716, 717, 718], "glue": 710, "deciph": 710, "diagrammat": 710, "wei": 710, "co_yield": [711, 712, 713, 714, 716, 717, 718], "_elem": 712, "ed": [713, 716, 717, 718, 914, 951], "lackingdefaultconstructor": 719, "ldc": 719, "hasdefaultconstructor": 719, "hmpf": 719, "hdc": 719, "ownsmemori": 720, "om_copi": 720, "incontin": 721, "leaf": [721, 904], "method1": 721, "method2": 721, "cluster_cxx11_new_language_features_rang": [722, 733, 777, 778], "cluster_cxx11_new_language_features_lambda": [722, 723, 777, 778], "cxx11_new_language_features_delet": [722, 777, 778], "cxx11_new_language_features_livehack_smartptr_mov": [722, 777, 778], "cxx11_smart_pointers_introduction_livehack": [722, 738, 777, 778], "cxx11_new_language_features_delegating_ctor": [722, 777, 778], "cxx11_new_language_features_range_based_for": [722, 775, 777, 778], "cxx11_new_language_features_constexpr": [722, 777, 778], "cxx11_new_language_features_modul": [722, 777, 778], "cxx11_new_language_features_structured_bind": [722, 777, 778], "cxx11_new_language_features_overrid": [722, 777, 778], "cxx11_new_language_features_default": [722, 777, 778], "cxx11_new_language_features_range_based_for_map": [722, 777, 778], "cxx11_new_language_features_fin": [722, 777, 778], "cxx11_new_language_features_ranges_intro": [722, 733, 777, 778], "cxx11_new_language_features_ranges_good_bad": [722, 733, 777, 778], "cxx11_new_language_features_ranges_link": [722, 733, 777, 778], "cxx11_new_language_features_lambda_lambda_is_functor": [722, 723, 777, 778], "cxx11_new_language_features_lambda_lambda_captur": [722, 723, 777, 778], "cxx11_new_language_features_lambda_lambda": [722, 723, 777, 778], "cxx11_new_language_features_lambda_lambda_is_functor_pitfal": [722, 723, 777, 778], "elsewher": [724, 825, 1025], "lamda": 724, "print_messag": [724, 726, 727], "constantli": [725, 842, 984], "mere": 725, "catur": 725, "akin": 725, "lambda_capture_suit": 725, "explicit_by_copi": 725, "lambda_capure_suit": 725, "explicit_by_refer": 725, "dubio": 725, "explicit_mix": 725, "initialized_captur": 725, "all_by_refer": 725, "all_by_copi": 725, "all_by_copy_except": 725, "this_captur": 725, "_i": [725, 745], "add_to_yourself_and_guarantee_programmers_job_secur": 725, "print_message_func": [726, 727], "_messag": [726, 727], "piti": 727, "mpp": 728, "precompil": [728, 825, 999], "speedup": 728, "rei": 728, "bori": 728, "kolpackov": 728, "abandon": 728, "inde": 730, "range_based_for_suit": 731, "map_pre_11": 731, "map_bas": 731, "map_basic_const_auto_refer": 731, "ific": [731, 736], "map_unpack_copi": 731, "map_unpack_refer": 731, "map_unpack_const_refer": 731, "min_el": 732, "forward_rang": [732, 734], "drop_view": 732, "filter_view": 732, "ref_view": 732, "ranges_util": 732, "view_interfac": 732, "_deriv": 732, "sized_sentinel_for": 732, "decltyp": 732, "__cust": 732, "declval": 732, "__cust_access": 732, "__begin": 732, "_s_size": 732, "_m_deriv": 732, "forward_iter": 732, "coll": 732, "2nd": [732, 1165], "__cxx11": [732, 744, 776], "_vp": 732, "__simple_view": 732, "random_access_rang": [732, 734], "sized_rang": 732, "pretend": 732, "comitte": [732, 735], "lazili": 734, "first_two_drop": 734, "first_two_dropped_next_two_taken": 734, "oldstyl": 734, "inspir": 734, "refin": 734, "input_rang": 734, "bidirectional_rang": 734, "backward": [734, 800, 885, 917, 922, 1048, 1152], "contiguous_rang": 734, "tristan": 735, "brindl": 735, "cppnorth": 735, "l0bhzp6hmdm": 735, "nico": 735, "accu": 735, "rust": [735, 999], "parrai": 736, "decompos": 736, "structured_binding_suit": 736, "struct_copi": 736, "struct_refer": 736, "struct_const_refer": 736, "tuple_copi": 736, "make_tupl": 736, "affect": 736, "tuple_refer": 736, "tuple_const_refer": 736, "array_copi": 736, "array_refer": 736, "array_const_refer": 736, "suspici": 736, "designwis": 737, "uptr": 737, "cxx11_smart_pointers_shared_ptr": [738, 747, 755, 775, 777, 778], "cxx11_smart_pointers_closing_word": [738, 747, 755, 777, 778], "cxx11_smart_pointers_weak_ptr": [738, 775, 777, 778], "myclass": [739, 741], "unwind": 739, "yoky6hzlkx": 739, "steal": [740, 985], "cxx11_unique_ptr_sensors_h": 740, "_temp": 740, "basic_const": 740, "raw_": 740, "raw_s_ref": 740, "copy_ctor_bad": 740, "assignment_operator_bad": 740, "gtest_filt": [740, 741, 1163], "reveal": [740, 1018], "vtabl": 740, "autoptr": 740, "copy_ctor_good_autoptr_styl": 740, "unexpectedli": 740, "assignment_operator_good_autoptr_styl": 740, "destiat": 740, "excus": 741, "shared_ptr_suit": 741, "rs1": [741, 742], "rs2": [741, 742], "rand1": [741, 742, 743], "rand2": [741, 742, 743], "cann": 741, "basic_make_shar": 741, "set_refer": 741, "_ref": 741, "cyclic_refer": 741, "303549": 741, "unique_ptr_suit": 742, "threw": 742, "ownership_error": 742, "cxx11": [742, 776], "unique_ptr_suite_ownership_error_test": 742, "testbodi": 742, "_dp": 742, "default_delet": 742, "verbose_ctor": 742, "make_unique_auto": 742, "tranfer": 742, "create_random_sensor": 742, "implicit_ownership_transf": 742, "holdsasensor": 742, "taking_ownership_in_own_cod": 742, "sompil": 742, "raw1": 742, "tie": 743, "unti": 743, "weak_ptr_suit": 743, "borrowed_sensor": 743, "another_refer": 743, "sensor_ref": 743, "measurement_thread": 743, "rvref": 744, "lo_funct": 744, "adventur": 744, "grimm": 744, "jaud": 744, "factset": 744, "570f242261f8": 744, "suffer": [745, 930], "origin_dist": 745, "criteria": [745, 869, 1152], "predic": 745, "void_funct": 745, "bind_suit": 745, "plain_void_funct": 745, "one_parameter_funct": 745, "plain_one_parameter_funct": 745, "minus_hardcod": 745, "_1_minus_2": 745, "minus_swap_paramet": 745, "second_minus_first": 745, "_2": [745, 746], "minus_hardcode_first_paramet": 745, "_42_minus_param": 745, "funcfunc": 745, "tradeoff": [745, 830], "oneimplement": 746, "anotherimplement": 746, "do_much_work": 746, "c_using_on": 746, "c_using_anoth": 746, "explanatori": 746, "trampolin": 746, "rtti": 746, "pod": 746, "metaphys": 746, "ostreamlogg": 746, "databaselogg": 746, "logfunc_t": 746, "funcptrlogg": 746, "somebusinessclasswithneedforlog": 746, "successfulli": [746, 845, 860, 1151, 1158], "do_stupid_log": 746, "ostream_logg": 746, "database_logg": 746, "funcptr_logg": 746, "busy_logging_to_ostream": 746, "busy_logging_to_databas": 746, "busy_logging_to_funcptr": 746, "foo_func": 746, "explos": 746, "cluster_cxx11_functions_funct": [747, 755, 777, 778], "cxx11_functions_functions_bind": [747, 755, 777, 778], "cxx11_functions_functions_funct": [747, 755, 777, 778], "msdn": 748, "devil": 748, "singlethread": 748, "god": 748, "paralleliz": 749, "cancel": [749, 975], "interlockedincr": 751, "mutual": [752, 1033], "try_lock": 752, "try_lock_for": 752, "unavail": 752, "try_lock_until": 752, "time_point": [752, 757], "do_something_errorpron": 753, "do_more_of_it": 753, "wake": [754, 807, 817, 948, 972, 981, 987], "waiter": [754, 817, 842, 972], "stop_wait": 754, "wait_for": [754, 756], "wait_until": [754, 756], "notify_on": 754, "notify_al": 754, "thunder": 754, "herd": 754, "condvar": 754, "threadsafequeu": 754, "maxelem": 754, "_maxelem": 754, "dur": [754, 756], "scoped_lock": [754, 756], "_lock": [754, 756], "pop_front": 754, "2m": [754, 756, 922], "1m": [754, 850, 922], "consumer1": 754, "consumer2": 754, "pthread_cond_init": [754, 972], "_not_empti": 754, "_not_ful": 754, "pthread_cond_wait": [754, 972], "pthread_cond_sign": [754, 972], "pthread_cond_t": [754, 972], "unique_lock": 754, "cluster_cxx11_multithread": [755, 777, 778], "cluster_linux_sysprog_posix_thread": [755, 777, 778, 921, 962, 976, 982], "cluster_linux_sysprog_blocking_io": [755, 777, 778, 855, 858, 859, 921, 950, 962, 976, 982, 984], "cluster_linux_sysprog_schedul": [755, 777, 778, 921, 962, 976, 982, 984], "cxx11_multithreading_chrono": [755, 777, 778], "cxx11_multithreading_introduct": [755, 777, 778], "cxx11_multithreading_thread": [755, 777, 778], "linux_sysprog_posix_threads_lifecycl": [755, 777, 778, 921, 962, 976, 982], "cxx11_multithreading_mutex": [755, 777, 778], "cxx11_multithreading_race_condit": [755, 777, 778], "linux_sysprog_posix_threads_mutex": [755, 777, 778, 921, 962, 976, 982], "cxx11_multithreading_condition_vari": [755, 777, 778], "cxx11_multithreading_promise_futur": [755, 777, 778], "linux_sysprog_posix_threads_condition_vari": [755, 777, 778, 921, 962, 976], "linux_sysprog_posix_threads_exercise_pthcreate_racecondit": [755, 777, 778, 921, 962, 976, 982], "cxx11_multithreading_atom": [755, 777, 778], "cxx11_multithreading_scoped_lock": [755, 777, 778], "linux_sysprog_posix_threads_exercise_mutex": [755, 777, 778, 921, 962, 976], "linux_sysprog_posix_threads_bas": [755, 777, 778, 921, 962, 976, 982], "linux_sysprog_scheduling_bas": [755, 777, 778, 921, 962, 976, 982, 984], "linux_sysprog_blocking_io_blocking_io": [755, 777, 778, 855, 858, 859, 921, 950, 962, 976, 982, 984], "get_futur": 756, "set_except": 756, "exception_ptr": 756, "shared_futur": 756, "uncoordin": 756, "ten_million_years_": 756, "answer_poll_interval_m": 756, "answer_valid": 756, "chew_answ": 756, "timespec": [756, 972, 983, 993], "reaction": [756, 940, 1022], "answer_computation_tim": 756, "answer_poll_interv": 756, "ten_million_year": 756, "lockguard": 756, "_answer_valid": 756, "_answer": 756, "_data": [756, 1013], "binary_semaphor": 756, "__cplusplu": 756, "202001l": 756, "_notifi": 756, "answer_promis": 756, "answer_futur": 756, "make_exception_ptr": 756, "epoch": [757, 992], "time_t": 757, "notion": 757, "system_clock": 757, "monoton": [757, 833, 835], "ntp": 757, "steady_clock": 757, "timepoint": 757, "steadili": 757, "high_resolution_clock": 757, "brand": 757, "spent_milli": 757, "duration_cast": 757, "variant_suit": 758, "holds_altern": 758, "converting_ctor": 758, "bad_access": 758, "visit": [758, 763, 767, 777, 778], "int_seen": 758, "float_seen": 758, "charp": 758, "string_charp": 758, "no_default_ctor": 758, "cluster_cxx11_miscellan": [759, 763, 777, 778], "cxx11_miscellaneous_vari": [759, 763, 777, 778], "timur": 760, "doumler": 760, "aligned_alloc": 761, "alignof": 761, "pmr": 761, "heis": [761, 765], "_temperatur": [762, 764, 766, 768], "klau": 763, "iglberg": 763, "steve": 763, "bush": 763, "bielak": 763, "gopel": 763, "cluster_cxx11_embedded_problem": [763, 777, 778], "cxx11_embedded_problems_related_no_virtu": [763, 777, 778], "cxx11_embedded_problems_classic_virtu": [763, 777, 778], "cxx11_embedded_problems_unrel": [763, 777, 778], "cxx11_embedded_problems_variant_automatic_visit": [763, 777, 778], "cxx11_embedded_problems_variant_manual_visit": [763, 777, 778], "cxx11_embedded_problems_variant_manual_if": [763, 777, 778], "static_cast": [764, 776], "derivedtyp": 764, "sensorptr": 766, "get_temperature_visitor": [767, 769], "crtp": 771, "bagcopi": 772, "find_by_int": [772, 773, 774], "remove_by_int": [772, 773, 774], "nremov": [772, 773, 774], "bagshar": 773, "weakref": 773, "sharedref": 773, "baguniqu": 774, "constbag": 774, "cluster_cxx11_exercis": [775, 777, 778], "cxx11_exercises_bag_uniqu": [775, 777, 778], "cxx11_exercises_bag_copi": [775, 777, 778], "cxx11_exercises_bag_shar": [775, 777, 778], "withing": 776, "filesystem_suit": 776, "cd_to_tmpdir_fixtur": 776, "path_compose_compar": 776, "path_compose_compare_2": 776, "is_absolut": 776, "is_rel": 776, "path_abs_rel": 776, "abspath": 776, "relpath": 776, "parent_path": 776, "remove_filenam": 776, "replace_filenam": 776, "replace_extens": 776, "path_component_access": 776, "filename_part": 776, "dir_part": 776, "path_iter": 776, "current_directori": 776, "cwd_chdir": 776, "current_path": 776, "create_directory_error": 776, "filesystem_error": 776, "char_trait": 776, "char_typ": 776, "_chart": 776, "_trait": 776, "_alloc": 776, "_s_copi": 776, "size_typ": 776, "_m_replac": 776, "tcc": 776, "2171": 776, "canonicalizeforstdlibvers": 776, "__builtin_memcpi": 776, "9223372036854775810": 776, "9223372036854775813": 776, "__s1": 776, "__s2": 776, "create_directory_singl": 776, "is_regular_fil": 776, "create_directory_multipl": 776, "is_directori": 776, "is_block_fil": 776, "is_character_fil": 776, "is_empti": 776, "is_fifo": 776, "is_oth": 776, "is_socket": 776, "is_symlink": 776, "greatest": 776, "2691": [776, 881], "nov": [776, 815, 881, 907, 929, 1013, 1049, 1078], "inod": [776, 784, 791], "919153": 776, "0644": [776, 870, 884], "system_u": 776, "object_r": 776, "passwd_file_t": 776, "s0": 776, "111282886": 776, "0100": 776, "737858445": 776, "743858359": 776, "file_s": 776, "hard_link_count": 776, "last_write_tim": 776, "ext4": [776, 825], "btrf": 776, "ntf": 776, "directory_iter": 776, "subdir1": [340, 776], "subdir2": [340, 776], "file1": [340, 776, 794, 910], "file2": [340, 776, 794, 910], "dirit": 776, "recursive_directory_iter": 776, "cxx11_filesystem": [777, 778], "cluster_linux_toolchain_raspi": [778, 921, 1004, 1006, 1009, 1010], "cluster_linux_toolchain_cross": [778, 921, 1003, 1004, 1006, 1008, 1009, 1010], "cluster_linux_toolchain_exercis": [778, 921, 1004, 1005, 1006, 1007, 1008, 1009], "cluster_linux_ssh": [778, 921, 933, 934, 935, 936, 937, 1009, 1010], "cluster_linux_ssh_exercis": [778, 921, 933, 934, 935, 936, 937], "cluster_linux_basics_archiving_compress": [778, 848, 855, 921, 1009, 1010], "cluster_linux_basics_shell_exercis": [778, 852, 853, 854, 855, 889, 890, 891, 892, 893, 894, 895, 896, 897, 899, 900, 901, 902, 903, 905, 921], "cluster_linux_basics_shell_exercises_cp_mv_mkdir_rm": [778, 852, 853, 854, 855, 889, 890, 891, 892, 893, 894, 895, 896, 897, 899, 905, 921], "cluster_linux_basics_shell_exercises_l": [778, 855, 899, 900, 901, 902, 903, 905, 921], "cluster_linux_basics_exercis": [778, 852, 853, 854, 855, 921], "cluster_linux_basics_io_redir_pip": [778, 855, 866, 921], "cluster_linux_basics_text_tool": [778, 855, 915, 921], "cluster_linux_basics_permissions_exercis": [778, 855, 871, 874, 875, 876, 877, 878, 879, 880, 921], "cluster_linux_sysprog_process": [778, 921, 962], "cluster_linux_sysprog_intro_hw": [778, 921, 962, 964], "cluster_linux_hardwar": [778, 921, 927, 928], "cluster_linux_hardware_can": [778, 921, 927, 928], "cluster_linux_kernel": [778, 782, 785, 787, 790, 792, 795, 797, 799, 801, 802, 804, 806, 808, 810, 812, 814, 816, 818, 820, 822, 824, 826, 829, 831, 834, 836, 840, 843, 846, 921], "cluster_unittest": [778, 1161], "linux_toolchain_shared_librari": [778, 921, 1009], "linux_basics_intro_environ": [778, 855, 859, 905, 921, 962, 1009, 1010], "linux_toolchain_cmake_cross": [778, 921, 1009], "linux_toolchain_raspi_detail": [778, 921, 1009, 1010], "linux_toolchain_cross_bas": [778, 921, 1003, 1004, 1006, 1008, 1009, 1010], "linux_ssh_bas": [778, 921, 933, 934, 935, 936, 937, 1009, 1010], "linux_ssh_scp": [778, 921, 933, 934, 935, 937, 1009, 1010], "linux_basics_archiving_compression_tar": [778, 848, 855, 921, 1009, 1010], "linux_toolchain_raspi_docker_fedora_wsl": [778, 921, 1009, 1010], "linux_toolchain_raspi_linaro_pi": [778, 921, 1009, 1010], "defunct": [778, 921, 1009, 1010], "linux_toolchain_raspi_toolchain_setup": [778, 921, 1004, 1006, 1009, 1010], "linux_toolchain_exercises_native_build": [778, 921, 1006, 1007, 1009], "linux_toolchain_exercises_raspberry_toolchain": [778, 921, 1006, 1008, 1009], "linux_toolchain_exercises_fh_moodle_quiz": [778, 921, 1005, 1006, 1009], "linux_toolchain_exercises_cross_build": [778, 921, 1004, 1006, 1009], "linux_basics_intro_login": [778, 855, 859, 871, 874, 875, 876, 877, 878, 879, 880, 921, 933, 934, 935, 936, 937, 1009, 1010], "linux_ssh_key_pair": [778, 921, 933, 934, 935, 936, 937], "linux_ssh_portforward": [778, 921, 937], "linux_ssh_link": [778, 921, 937], "linux_ssh_sshf": [778, 921, 937], "linux_ssh_exercises_pubkei": [778, 921, 933, 934, 935, 936, 937], "linux_ssh_exercises_copy_fil": [778, 921, 933, 934, 935, 937], "linux_ssh_exercises_copy_tre": [778, 921, 934, 935, 937], "linux_basics_archiving_compression_gzip": [778, 848, 855, 921, 1009, 1010], "linux_basics_archiving_compression_overview": [778, 848, 855, 921, 1009, 1010], "linux_basics_archiving_compression_exercis": [778, 848, 855, 921], "linux_basics_intro_process_tre": [778, 855, 859, 871, 874, 875, 876, 877, 878, 879, 880, 921, 933, 934, 935, 936, 937, 962, 1009, 1010], "linux_basics_intro_wsl": [778, 855, 859, 921], "linux_basics_intro_fh_moodle_quiz": [778, 855, 858, 859, 921], "linux_basics_intro_demo_everything_is_a_fil": [778, 855, 858, 859, 921], "linux_sysprog_blocking_io_blocking_io_fil": [778, 855, 858, 859, 921, 950, 962], "linux_basics_shell_cp": [778, 852, 853, 854, 855, 889, 890, 892, 893, 896, 897, 899, 905, 921], "linux_basics_shell_mv": [778, 855, 905, 921], "linux_basics_shell_link": [778, 855, 905, 921], "linux_basics_shell_configfil": [778, 855, 905, 921], "linux_basics_shell_fh_moodle_quiz": [778, 855, 898, 905, 921], "linux_basics_shell_exercises_cp_mv_mkdir_rm_mkdir_p_rm_r": [778, 852, 853, 854, 855, 889, 890, 891, 892, 893, 894, 896, 897, 899, 905, 921], "linux_basics_shell_exercises_cp_mv_mkdir_rm_echo_create_fil": [778, 852, 853, 854, 855, 889, 890, 891, 892, 893, 896, 897, 899, 905, 921], "linux_basics_shell_exercises_cp_mv_mkdir_rm_rm_tre": [778, 855, 893, 896, 899, 905, 921], "linux_basics_shell_exercises_cp_mv_mkdir_rm_copy_tre": [778, 855, 889, 893, 896, 899, 905, 921], "linux_basics_shell_exercises_cp_mv_mkdir_rm_verify_hierarchi": [778, 855, 889, 893, 896, 897, 899, 905, 921], "linux_basics_shell_exercises_cp_mv_mkdir_rm_rm_rf": [778, 855, 893, 895, 899, 905, 921], "linux_basics_shell_exercises_cp_mv_mkdir_rm_echo_move_fil": [778, 855, 889, 892, 893, 896, 897, 899, 905, 921], "linux_basics_shell_exercises_cp_mv_mkdir_rm_echo_copy_fil": [778, 855, 889, 890, 893, 896, 897, 899, 905, 921], "linux_basics_shell_exercises_ls_etc_passwd_s": [778, 855, 899, 901, 902, 905, 921], "linux_basics_shell_exercises_ls_home_permiss": [778, 855, 899, 902, 903, 905, 921], "linux_basics_shell_exercises_ls_dev_typ": [778, 855, 899, 900, 902, 905, 921], "linux_basics_exercises_fh_ss2022_exam_01_g1": [778, 852, 854, 855, 921], "linux_basics_exercises_fh_ss2022_exam_01_g2": [778, 853, 854, 855, 921], "linux_basics_io_redir_pipes_io_redir_swap_stdout_stderr": [778, 855, 866, 921], "linux_basics_io_redir_pipes_io_redir": [778, 855, 866, 921], "linux_basics_io_redir_pipes_pip": [778, 855, 866, 921], "linux_basics_io_redir_pipes_exercis": [778, 855, 866, 921], "linux_basics_text_tools_overview": [778, 855, 915, 921], "linux_basics_text_tools_cut": [778, 855, 915, 921], "linux_basics_text_tools_head_tail": [778, 855, 915, 921], "linux_basics_text_tools_cat": [778, 855, 915, 921], "linux_basics_text_tools_exercis": [778, 855, 915, 921], "linux_basics_text_tools_grep": [778, 855, 915, 921], "linux_basics_text_tools_less": [778, 855, 915, 921], "linux_basics_text_tools_find": [778, 855, 915, 921], "linux_basics_permissions_sticki": [778, 855, 880, 921], "linux_basics_permissions_setuid_livedemo": [778, 855, 880, 921], "linux_basics_permissions_setuid": [778, 855, 880, 921], "linux_basics_permissions_umask": [778, 855, 880, 921], "linux_basics_permissions_fh_moodle_quiz": [778, 855, 872, 880, 921], "linux_basics_permissions_fh_moodle_quiz_nocheat": [778, 855, 873, 880, 921], "linux_basics_permissions_exercises_shared_fil": [778, 855, 874, 879, 880, 921], "linux_basics_permissions_exercises_credenti": [778, 855, 871, 874, 875, 876, 877, 878, 879, 880, 921], "linux_basics_permissions_exercises_private_directory_quest": [778, 855, 874, 876, 880, 921], "linux_basics_permissions_exercises_private_directori": [778, 855, 874, 875, 876, 880, 921], "linux_basics_permissions_exercises_public_directory_quest": [778, 855, 874, 878, 880, 921], "linux_basics_permissions_exercises_public_directori": [778, 855, 874, 877, 878, 880, 921], "linux_sysprog_ipc": [778, 921, 962], "linux_sysprog_sign": [778, 921, 962], "linux_sysprog_ev": [778, 921, 962], "linux_sysprog_blocking_io_blocking_io_tim": [778, 921, 950, 962], "linux_sysprog_blocking_io_blocking_io_network": [778, 921, 950, 962], "linux_sysprog_fileio_basics_exercise_copi": [778, 921, 952, 960, 962, 979], "linux_sysprog_fileio_example_o_creat": [778, 921, 960, 962, 979], "linux_sysprog_fileio_example_o_wronli": [778, 921, 960, 962, 979], "linux_sysprog_fileio_example_o_rdonli": [778, 921, 960, 962, 979], "o_rdonli": [778, 783, 921, 947, 951, 952, 955, 958, 959, 960, 962, 963, 966, 979, 989, 992, 996], "linux_sysprog_fileio_example_o_excl": [778, 921, 960, 962, 979], "o_excl": [778, 921, 951, 952, 960, 962, 979, 992], "linux_sysprog_fileio_dupl": [778, 921, 960, 962, 979], "linux_sysprog_fileio_misc": [778, 921, 960, 962, 979], "linux_sysprog_fileio_fileio_group": [778, 921, 960, 962, 979], "linux_sysprog_fileio_basics_exercise_hol": [778, 921, 960, 962, 979], "linux_sysprog_posix_threads_last_warn": [778, 921, 962, 976], "linux_sysprog_posix_threads_miscellan": [778, 921, 962, 976], "linux_sysprog_posix_threads_exercise_condition_vari": [778, 921, 962, 976], "linux_sysprog_posix_threads_mutex_trylock": [778, 921, 962, 976], "trylock": [778, 921, 962, 970, 976], "islock": [778, 921, 962, 970, 976], "linux_sysprog_scheduling_realtim": [778, 921, 962, 982, 984], "linux_sysprog_scheduling_wakeup_lat": [778, 921, 962, 982, 984], "linux_sysprog_scheduling_exam_quest": [778, 921, 962, 982, 984], "linux_sysprog_scheduling_processes_and_thread": [778, 921, 962, 982, 984], "linux_sysprog_scheduling_realtime_api": [778, 921, 962, 982], "linux_sysprog_process_commandlin": [778, 921, 962], "linux_sysprog_process_tre": [778, 921, 962], "linux_sysprog_intro_hw_sysfs_gpio": [778, 921, 962, 964], "linux_sysprog_intro_hw_get": [778, 921, 962, 964], "linux_sysprog_intro_hw_watch": [778, 921, 962, 964], "linux_hardware_pwm": [778, 921, 928], "linux_hardware_w1": [778, 921, 928], "linux_hardware_brushless_motor": [778, 921, 928], "brushless": [778, 921, 928], "linux_hardware_i2c": [778, 921, 928], "linux_hardware_can_interfac": [778, 921, 927, 928], "linux_hardware_can_hardwar": [778, 921, 927, 928], "linux_hardware_can_program": [778, 921, 927, 928], "linux_hardware_can_intro": [778, 921, 927, 928], "linux_kernel_modules_hello_world": [778, 782, 785, 787, 790, 792, 795, 802, 804, 806, 810, 816, 822, 829, 834, 840, 843, 846, 921], "linux_kernel_fedora_module_build": [778, 782, 785, 787, 790, 792, 795, 801, 802, 804, 806, 810, 816, 822, 829, 834, 840, 843, 846, 921], "linux_kernel_fedora_kernel_build": [778, 782, 785, 787, 790, 792, 795, 799, 801, 802, 804, 806, 810, 816, 822, 829, 834, 840, 843, 846, 921], "linux_kernel_kmalloc": [778, 787, 792, 795, 797, 802, 806, 816, 820, 822, 829, 834, 840, 843, 846, 921], "linux_kernel_process_vs_atom": [778, 787, 792, 795, 797, 802, 806, 808, 812, 816, 818, 820, 822, 824, 829, 831, 834, 836, 840, 843, 846, 921], "linux_kernel_cdev_first_function": [778, 787, 792, 795, 802, 806, 816, 829, 834, 840, 843, 846, 921], "linux_kernel_cdev_file_oper": [778, 785, 787, 792, 795, 802, 806, 816, 829, 834, 840, 843, 846, 921], "linux_kernel_list": [778, 787, 792, 795, 802, 806, 814, 816, 829, 834, 840, 843, 846, 921], "doubli": [778, 787, 791, 792, 795, 802, 806, 815, 816, 827, 829, 834, 840, 843, 846, 921], "linux_kernel_stub_sysprog_dup": [778, 785, 787, 792, 795, 802, 806, 816, 829, 834, 840, 843, 846, 921], "dup": [778, 784, 785, 787, 792, 795, 802, 806, 816, 829, 834, 840, 843, 846, 868, 921, 954, 993], "stub": [778, 785, 787, 792, 795, 802, 806, 816, 829, 834, 840, 843, 846, 921, 1012], "linux_kernel_cdev_auto": [778, 782, 785, 787, 792, 795, 802, 806, 816, 829, 834, 840, 843, 846, 921], "linux_kernel_usermem": [778, 802, 840, 843, 921], "linux_kernel_workqueu": [778, 802, 840, 843, 846, 921], "linux_kernel_timer_cod": [778, 802, 834, 840, 843, 846, 921], "linux_kernel_tim": [778, 802, 834, 836, 840, 843, 846, 921], "linux_kernel_spinlock_cod": [778, 802, 829, 834, 840, 843, 846, 921], "linux_kernel_spinlock": [778, 802, 829, 831, 834, 840, 843, 846, 921], "linux_kernel_interrupt_cod": [778, 802, 806, 829, 834, 840, 843, 846, 921], "linux_kernel_mutex": [778, 802, 806, 816, 818, 829, 834, 840, 843, 846, 921], "linux_kernel_mutex_cod": [778, 802, 806, 816, 829, 834, 840, 843, 846, 921], "linux_kernel_multiple_devic": [778, 792, 802, 806, 816, 829, 834, 840, 843, 846, 921], "linux_kernel_cdev_refactor": [778, 792, 795, 802, 806, 816, 829, 834, 840, 843, 846, 921], "linux_kernel_dma": [778, 797, 802, 820, 822, 921], "linux_kernel_waitqueu": [778, 802, 843, 921], "linux_kernel_pci": [778, 802, 822, 921], "linux_kernel_interrupt": [778, 802, 806, 808, 820, 822, 829, 834, 840, 843, 846, 921], "linux_kernel_iomemori": [778, 802, 810, 822, 921], "linux_kernel_raspi_kernel_build": [778, 802, 806, 826, 829, 834, 840, 843, 846, 921], "linux_kernel_netdev": [778, 802, 820, 921], "linux_kernel_cdev_manu": [778, 782, 785, 787, 790, 792, 795, 802, 806, 816, 829, 834, 840, 843, 846, 921], "unittest_gtest_cmak": [778, 1161], "interconnect": 779, "device_cr": [780, 781, 784], "cdev_init": [780, 788, 789], "cdev_add": [780, 788, 789], "unhappi": 780, "device_destroi": 780, "my_class": 780, "my_driv": [780, 783, 793, 794, 805, 815, 821, 827, 833, 844], "mknod": [780, 788, 789], "character devic": [781, 784, 789, 1181], "relatim": 781, "register_chrdev_region": [781, 788, 789], "alloc_chrdev_region": [781, 789], "htmldoc": 781, "chrdev": 781, "dev_t": [781, 789], "baseminor": 781, "highlight": 781, "bug_on": 781, "module_licens": [781, 803], "openat": [783, 947], "at_fdcwd": [783, 947], "0x7f3d11330000": 783, "einval": [783, 788, 803, 841], "enotti": 783, "file_oper": [784, 788, 789, 827], "citizenship": 784, "__user": [784, 839], "loff_t": 784, "unlocked_ioctl": 784, "my_op": 784, "this_modul": 784, "my_open": 784, "my_read": 784, "my_writ": 784, "my_ioctl": [784, 815], "mode_t": [784, 951, 955, 993], "filp": [784, 827, 841], "vf": 784, "swiss": [784, 951, 1176], "armi": [784, 951, 1176], "my_ioctl_request": [784, 786], "my_request_such": 784, "my_request_such_and_such": 784, "laden": [784, 1190], "endod": 784, "_iow": 784, "_ior": 784, "_ioc": 784, "_ioc_non": 784, "_ioc_read": 784, "_ioc_typecheck": 784, "_ioc_writ": 784, "_iowr": 784, "my_ev": [786, 793, 794, 833, 838], "my_event_typ": 786, "my_event_ioctl": 786, "jiffi": [786, 827, 833], "my_event_list": [786, 793, 794, 815], "list_head": [786, 813, 815, 838], "num_ev": 786, "my_event_list_init": 786, "my_event_list_destroi": 786, "my_event_list_add": [786, 815, 828, 833, 844], "my_ioctl_add_ev": 786, "printk": [786, 803, 805, 844], "unregister_chrdev_region": [788, 789], "caveat": [788, 827, 930], "register_chrdev": 788, "unregister_chrdev": 788, "kern_err": 788, "cdev_del": [788, 789], "my_driver_henkel": 788, "kmem": 789, "opaqu": 789, "majmin": 789, "mkdev": 789, "drivernam": 789, "my_fop": 789, "my_cdev": 789, "devicefil": 789, "ndevic": 791, "module_param": 791, "my_devic": [791, 793, 794, 805, 821, 833], "private_data": [791, 821, 827], "kbuild": [793, 794], "torn": [793, 1168], "ccflag": [793, 794], "container_of": [794, 845], "file3": 794, "distinct": [794, 861, 945, 1072], "my_device_init": 794, "my_device_destroi": [794, 833], "everyt": 796, "vmalloc": 796, "ioremap": [796, 809], "iommu": 796, "pysic": 796, "dma_addr_t": 796, "alloc_pag": 796, "gfp_mask": 796, "get_free_pag": 796, "__get_free_pag": 796, "2order": 796, "__get_dma_pag": 796, "zone": 796, "__free_pag": 796, "free_pag": 796, "addr": [340, 796, 809, 821, 925, 930, 948, 992, 1156], "dma_handl": 796, "cpu_addr": [796, 821], "dma_alloc_coher": 796, "gfp": [796, 811, 837], "dma_free_coher": 796, "pci_dev": [796, 821], "gfp_kernel": [796, 811, 828], "gfp_atom": [796, 811], "dma_bidirect": 796, "dma_to_devic": 796, "dma_from_devic": 796, "dma_map_singl": 796, "dma_mapping_error": 796, "fuck": [340, 796], "dma_unmap_singl": 796, "dma_map_pag": 796, "dma_unmap_pag": 796, "dma_address": 796, "sglist": 796, "sg_run": 796, "dma_map_sg": 796, "for_each_sg": 796, "hw_address": 796, "sg_dma_address": 796, "hw_len": 796, "sg_dma_len": 796, "dma_unmap_sg": 796, "nent": 796, "unmap": [796, 821], "recreat": [796, 897, 1015], "dma_sync_single_for_cpu": 796, "dma_sync_sg_for_cpu": 796, "mel": [796, 811], "gorman": [796, 811], "incredibli": 796, "transcript": [798, 825, 1122], "building_a_custom_kernel": 798, "fc33": [798, 803], "extravers": [798, 826], "cleanli": 798, "uncommit": 798, "j6": 798, "fedpkg": 798, "pesign": 798, "grubbi": 798, "33rd": 798, "f33": 798, "builddep": 798, "libexec": [798, 1011], "symver": [800, 803], "modpost": [800, 803], "module_src": 800, "kernel_build": 800, "install_mod_path": [800, 825], "modules_instal": [800, 825, 929], "fedora_kernel_build": 802, "fedora_module_build": 802, "modules_hello_world": 802, "cdev_manu": 802, "process_vs_atom": 802, "stub_sysprog_dup": 802, "cdev_auto": 802, "cdev_file_oper": 802, "cdev_first_function": 802, "cdev_refactor": 802, "multiple_devic": 802, "mutex_cod": 802, "raspi_kernel_build": 802, "interrupt_cod": 802, "spinlock_cod": 802, "timer_cod": 802, "iomemori": 802, "usermem": 802, "waitqueu": [802, 1181], "netdev": 802, "ldd3": [802, 813], "reilli": [802, 914], "probe": [803, 929, 930, 931], "hello_init": 803, "kern_debug": 803, "hello_exit": 803, "module_init": 803, "module_exit": 803, "exot": 803, "currect": [803, 898], "lsmod": [803, 929, 930, 931], "insmod": 803, "rmmod": [803, 833], "dep": 803, "softdep": 803, "rebuilt": 803, "cross_compil": [805, 825, 826], "libssl": [805, 929], "gpio_request": 805, "gpio_fre": 805, "gpio_direction_input": 805, "gpio_direction_output": 805, "gpio_to_irq": 805, "my_device_activate_gpio": 805, "_destroi": 805, "3f200000": 805, "pinctrl": 805, "bcm2835": [805, 926], "request_irq": [805, 807, 821], "free_irq": [805, 807, 821], "priorit": [807, 823, 923, 981, 993], "preempt_rt": [807, 817, 1171], "mainlin": [807, 825, 985, 1171], "irqreturn_t": [807, 821], "irq_handl": [807, 821], "irq": [807, 821, 823, 827, 983], "opqu": 807, "irq_non": 807, "irq_wake_thread": 807, "irq_handler_t": 807, "irqf_shar": [807, 821], "irqf_trigger_ris": 807, "irqf_trigger_fal": 807, "irqf_trigger_high": 807, "irqf_trigger_low": 807, "iomem": 809, "ioport": 809, "request_mem_region": 809, "0x20200000": 809, "release_mem_region": 809, "asm": [809, 1014], "iounmap": 809, "ioread8": 809, "ioread16": 809, "ioread32": 809, "iowrite8": 809, "u8": 809, "iowrite16": 809, "u16": 809, "iowrite32": 809, "u32": 809, "kmalloc kfre": 811, "dynamic memori": 811, "slab": 811, "gfp_t": [811, 828, 844], "kzalloc": 811, "kfree": 811, "scarc": 811, "discourag": 811, "stolen": [813, 922], "some_list": 813, "init_list_head": 813, "some_data": 813, "list_add": 813, "list_add_tail": 813, "new_payload": 813, "existing_payload": 813, "prepend": [813, 825, 857, 1060], "list_for_each": 813, "list_entri": 813, "cursor": [813, 885, 1132], "run_payload": 813, "list_empti": 813, "list_first_entri": 813, "list_del": [813, 815], "a_payload": 813, "inject": [815, 828, 833, 1135], "opfer": 815, "corrupt": 815, "ffff91285ae68f00": 815, "ffff9128406cec00": 815, "list_debug": 815, "0x70": [815, 930], "0xb0": 815, "0xdd": 815, "ksys_ioctl": 815, "0x82": 815, "0xc0": 815, "__x64_sys_ioctl": 815, "do_syscall_64": 815, "0x4d": 815, "entry_syscall_64_after_hwfram": 815, "0x44": 815, "0xa9": 815, "unprotect": [815, 827, 1043], "nevent": [815, 838], "my_device_list": 815, "preemptibl": [817, 985], "preemption": [817, 823, 830, 930, 981, 984, 985], "holder": [817, 1041], "mutex_init": 817, "mutex_destroi": 817, "mutex_lock": 817, "mutex_lock_interrupt": 817, "eintr": [817, 943, 996, 997], "mutex_lock_interruptible_nest": 817, "mutex_trylock": 817, "eagain": [817, 827, 841], "mutex_unlock": 817, "torvald": [817, 825], "trickl": 817, "rtmutex": 817, "rt_mutex": 817, "net_devic": 819, "alloc_netdev": 819, "sizeof_priv": 819, "netdev_priv": 819, "funcion": 819, "ethernet": 819, "etherdevic": 819, "alloc_etherdev": 819, "free_netdev": 819, "register_netdev": 819, "unregister_netdev": 819, "devinc": 819, "hard_start_xmit": 819, "sk_buff": 819, "skb": 819, "transmiss": [819, 948, 1119], "tx_timeout": 819, "quota": [819, 851], "stead": 819, "do_ioctl": 819, "ifreq": [819, 925], "ifr": [819, 925], "netif_start_queu": 819, "netif_stop_queu": 819, "netif_wake_queu": 819, "udevd": 821, "pci_device_id": 821, "my_id": 821, "pci_devic": 821, "0xdead": 821, "0xbeef": 821, "0xbeee": 821, "module_device_t": 821, "my_prob": 821, "my_remov": 821, "my_suspend": 821, "pm_message_t": 821, "my_resum": 821, "my_shutdown": 821, "pci_driv": 821, "id_tabl": 821, "my_init": 821, "pci_register_driv": 821, "my_exit": [821, 1030], "pci_unregister_driv": 821, "subsystem_vendor": 821, "subsystem_devic": 821, "u64": [821, 835], "dma_mask": 821, "device_count_resourc": 821, "pci_enable_devic": 821, "pdev": 821, "wizardri": 821, "pci_request_region": 821, "pci_set_mast": 821, "pci_clear_mast": 821, "pci_set_dma_mask": 821, "pci_set_drvdata": 821, "ioread": 821, "iowrit": 821, "pci_resource_len": 821, "bar_no": 821, "__iomem": 821, "pci_iomap": 821, "pci_iounmap": 821, "pci_alloc_consist": 821, "os_devic": 821, "_o": 821, "dma_addr": 821, "pci_free_consist": 821, "_size": 821, "_cpu_addr": 821, "t_os_dma_addr__get_n": 821, "_dma_addr": 821, "_os_devic": 821, "dma_bit_mask": 821, "pci_set_consistent_dma_mask": 821, "config_debug_atomic_sleep": [823, 828], "cross compil": 825, "educ": 825, "raspberrypi": [825, 826, 929, 1001, 1008], "borrow": 825, "pi2": 825, "1gb": 825, "canon": [825, 942], "workstat": 825, "hf": 825, "armv6j": 825, "hardfloat": 825, "gnueabi": 825, "objcopi": 825, "raspberry_pi": 825, "local_overlai": 825, "ebuild": 825, "binutil": [825, 826], "repo_nam": 825, "9999": 825, "sourcedir": 825, "builddir": 825, "buildparam": 825, "kconfig": 825, "zconf": 825, "raspbian": 825, "bootdir": 825, "bootf": 825, "rootf": 825, "kernel7": 825, "Then": [825, 940, 1139], "assimil": 825, "bcmrpi_defconfig": 825, "bcm2709_defconfig": 825, "config_localvers": 825, "config_ikconfig": 825, "eveytim": 825, "config_can_mcp251x": 825, "config_sensors_lm73": 825, "zimag": [825, 826, 929], "dtb": [825, 826, 929], "j3": 825, "mkknlimg": 825, "te": 825, "superus": 825, "jtf": 825, "bcm2709": 825, "smi": 825, "ft5406": 825, "can1": [825, 924], "v7": [825, 826], "ipv4": [825, 1193], "xfrm4_mode_beet": 825, "inet_lro": 825, "esp4": 825, "xfrm4_mode_transport": 825, "udp_tunnel": 825, "sdb": 825, "57344": 825, "sdb1": 825, "4162560": 825, "sdb2": 825, "enjoi": 825, "ec2aa3d2": 825, "eee7": 825, "454e": 825, "d145df5ddcba": 825, "agnost": 825, "urg": 825, "rasperri": [826, 929, 931, 1180, 1187], "patchlevel": 826, "sublevel": 826, "_morph": [827, 837], "my_driver_hello": 827, "my_driver_cdev_manu": 827, "my_driver_cdev_dynamic_major": 827, "my_driver_cdev_file_oper": 827, "my_driver_cdev_first_function": 827, "my_driver_cdev_refactor": 827, "my_driver_multiple_devic": 827, "my_driver_mutex": 827, "my_driver_interrupt": 827, "my_driver_spinlock_atom": 827, "my_driver_time_tim": 827, "my_driver_workqueu": 827, "my_driver_usermem": 827, "copy_": 827, "my_driver_waitqueu": 827, "nonblock": [827, 841, 993, 1193], "spinlock_t": [828, 830], "isr": [828, 985, 1181], "spin_unlock": [828, 830], "reenabl": 828, "uniprocessor": 830, "multiprocessor": 830, "spin_lock_init": 830, "spin_lock": 830, "spin_trylock": 830, "irqflag": 830, "spin_lock_irqsav": 830, "spin_unlock_irqrestor": 830, "pend": [833, 862, 985, 998], "my_inject_deferred_ev": 833, "my_device_add_deferred_ev": 833, "del_timer_sync": [833, 835], "paranoia": 833, "symmetri": 833, "my_device_add_ev": 833, "my_inject_ev": 833, "tick": 835, "config_hz": 835, "friendli": [835, 1073, 1142, 1146], "hrtimer": 835, "jiffies_to_msec": 835, "jiffies_to_usec": 835, "jiffies_to_nsec": 835, "msecs_to_jiffi": 835, "usecs_to_jiffi": 835, "timespec64_to_jiffi": 835, "timespec64": 835, "jiffies_to_timespec64": 835, "timer_list": 835, "my_tim": 835, "timerfunc": 835, "timer_setup": 835, "add_tim": 835, "del_tim": 835, "0520": 837, "0521": 837, "0525": 837, "0532": 837, "0710": 837, "preempt": [837, 981, 985], "caption": 837, "backlink": 837, "my_event_nod": 838, "my_get_one_ev": [838, 841], "my_device_get_one_ev": 838, "my_event_get_one_ev": 838, "efault": [838, 839], "uaccess": 839, "copy_to_us": 839, "copy_from_us": 839, "enosi": 841, "timerfd": [841, 949, 989], "f_flag": 841, "wait_queue_head_t": 842, "wq": [842, 844, 845], "init_waitqueue_head": 842, "sched": 842, "wait_ev": 842, "wait_event_interrupt": 842, "wait_event_timeout": 842, "timeout_jiffi": 842, "wait_event_interruptible_timeout": 842, "wake_up": 842, "wake_up_interrupt": 842, "task_interrupt": 842, "create_workqueu": [844, 845], "destroy_workqueu": [844, 845], "eo": 844, "rtprio": 844, "work_struct": [844, 845], "init_work": [844, 845], "chrt": [844, 985], "workqueue_struct": 845, "work_func_t": 845, "queue_work": 845, "packen": 847, "gunzip": 849, "zgrep": 849, "zcat": 849, "zless": 849, "intact": [849, 1098, 1102], "viro": 850, "cpio": 850, "cleaner": 850, "archivformat": 850, "lzma": 850, "430mb": 850, "95mb": 850, "74mb": 850, "5m": [850, 922], "64mb": 850, "togeht": 851, "gfs2": 851, "zcf": 851, "decompress": [851, 1011], "zxf": 851, "ztf": 851, "dirt": 851, "livingroom": 851, "grumbl": 851, "reat": 851, "tract": 851, "ell": [851, 885], "vv": 851, "supplementari": [852, 853, 860, 862], "1021": [852, 853, 860], "somefil": [852, 853, 891], "chgrp": [852, 853, 870, 877, 879], "fellow": [852, 853], "picki": [852, 853, 1035], "ttyusb1": 856, "stick": [856, 860], "2006854": 856, "sdc": 856, "2006823": 856, "deserv": [856, 914, 975, 1001], "trash": [856, 885], "burn": [856, 931], "1mib": 856, "1mibf": 856, "0m": [856, 907, 983], "mkf": 856, "entropi": 856, "my_vari": 857, "1034184": 857, "1035812": 857, "ancestor": [857, 863, 941], "decriptor": [858, 957], "getti": 860, "kerbero": [860, 862], "gnome3": 860, "agetti": 860, "cleartext": [860, 881], "brute": [860, 938, 1001], "crack": 860, "attack": [860, 938, 1016, 1135, 1179], "hierarch": 861, "peripher": [861, 1180, 1187], "grand": 861, "ten_integ": 862, "unfair": [862, 985], "dialout": [862, 957], "seg": 862, "kbyte": 862, "62715": 862, "819200": 862, "pstree": 863, "modemmanag": 863, "journ": 863, "abrtd": 863, "auditd": 863, "bluetoothd": 863, "cupsd": 863, "lau": 863, "tini": [863, 999], "enemi": 864, "guidanc": 864, "dicdat": 864, "acknowledg": [864, 922], "seamless": [864, 1148], "exampk": 864, "altruism": 864, "mkfifo": [865, 869], "stdin_fileno": [867, 951, 961, 997, 1073], "stdout_fileno": [867, 947, 948, 951, 957, 983, 992, 996, 997, 1073], "stderr_fileno": [867, 951, 1073], "religi": 867, "fed": 867, "filefor": 867, "weekli": 868, "compet": [869, 930], "award": [869, 916], "plumber": 869, "sniff": 869, "fifo": [869, 951, 1192], "rendezv": 869, "unnam": 869, "chown": [870, 882, 1013], "useradd": [870, 1013], "groupadd": 870, "usermod": 870, "groupmod": 870, "teammember42": 870, "manfromthestreet": 870, "jun": [870, 1001], "triplet": 870, "1003": 870, "110100100": 870, "110000000": 870, "0600": 870, "111101101": 870, "0755": 870, "bitmask": [870, 881, 997], "1317": 881, "mdmckqvpfaqquqypvzjjkihsbkkcniogknxtiobvbfw8u7zuf3": 881, "0g2rqr9cnydnqq5unt": 881, "wpu8jyzeuxktapl0": 881, "burnout": 881, "retyp": 881, "rwsr": [881, 882], "32712": 881, "rwxrwxrwx": 881, "4755": [881, 882], "uid_t": 882, "getuid": 882, "geteuid": 882, "rwxrwxr": [882, 947, 999, 1000, 1001], "24456": 882, "drwxrwxrwt": 883, "0022": 884, "strain": 885, "injuri": 885, "diseas": 885, "outout": 885, "20k": 885, "olevel": 885, "debugopt": 885, "expr1": 885, "expr2": 885, "daystart": 885, "regextyp": 885, "synopsi": 885, "findu": 885, "til": 885, "findutil": 885, "pression": 885, "print0": 885, "keystrok": 885, "noob": [885, 1046], "pos1": 885, "misconfigur": 885, "esc": 885, "freak": 885, "cvsserver": 885, "gitview": 885, "oesterreich": 885, "clearanc": 885, "e7d76d19": 885, "dd3d": 885, "4d52": 885, "2c16dc73f9d1_vstv_921302213705_2021___vstvf": 885, "boardingpass_1d9xf3dvd1uzt00tsswu68duh": 885, "gif": [885, 1136], "einkommensteuerbescheid1": 885, "boardingpass_b6uy9xqgeojspx1hxshogcbbq": 885, "einkommensteuervorauszahlungsbescheid1": 885, "immobilienbewertung": 885, "etw": 885, "confirm": 885, "ova": 885, "umsatzsteuerbescheid1": [885, 907, 908], "h0020211105124337": 885, "vk9vst311192021_0022021": 885, "img_": 887, "jpg": 887, "bilder": 887, "121751": 888, "op": [888, 1074], "garbage1": [889, 890, 892, 896, 897], "garbage2": [889, 890, 892, 896, 897], "diretori": 891, "sweetheart": [891, 897, 904, 978], "citi": 891, "mqueue": [900, 992], "leavel": 904, "hintingx": 907, "1048576": 907, "drwx": [907, 909], "36817": 907, "umsatzsteuerbescheid": 908, "finanzamt": 908, "abgab": 908, "neighbor": [909, 1130], "enat": 910, "dereferenzieren": 912, "50k": [912, 913], "rekursiv": 913, "eintr\u00e4g": 913, "unterhalb": 913, "gefiltert": 913, "un\u00fcblich": 913, "gebr\u00e4uchlich": 913, "geh\u00f6ren": 913, "mmin": 913, "h\u00f6chsten": 913, "gefundenem": 913, "eintrag": 913, "heissen": 913, "beginnen": 913, "versteht": 913, "vergessen": 913, "j\u00fcnger": 913, "verkn\u00fcpft": 913, "metacharact": [913, 932], "gr\u00f6\u00dfer": 913, "lobal": 914, "egular": 914, "xpression": 914, "rint": 914, "sed": [914, 1180, 1187], "tream": 914, "itor": 914, "verb": 914, "insensit": [914, 1147], "entor": 914, "perlr": 914, "perlretut": 914, "perlrequick": 914, "jeffrei": 914, "friedl": 914, "philosopi": 918, "toether": 918, "hc": 918, "325324": 918, "xarg": 918, "bitbak": 920, "behan": 920, "webster": 920, "drone": 922, "electronic speed control": 922, "vehicl": 922, "rack": 922, "recognit": [922, 1130], "flight": 922, "fritz": [922, 930], "brigh": 922, "heinrich": 922, "polar": 922, "uevent": [922, 929, 930, 931, 965], "cheapest": 922, "quicrun": 922, "16bl30": 922, "brake": 922, "11v": 922, "conclud": [922, 930], "lipo": 922, "madli": 922, "transmitt": 922, "throttl": 922, "neutral": [922, 1132], "chop": 922, "kindli": [922, 1136], "mechatron": 922, "50hz": 922, "nanosecond": [922, 930, 949], "20000000": [922, 1033], "oscil": 922, "10bl60": 922, "000n": 922, "1500000": [922, 987], "2000000": 922, "1550000": 922, "1600000": 922, "acceler": 922, "1650000": 922, "1700000": 922, "1750000": 922, "1800000": 922, "1850000": 922, "1900000": 922, "1950000": 922, "logist": [922, 1130], "hobbi": 922, "can bu": [923, 924, 925, 926], "sinowatz": [923, 1023], "volkswagen": 923, "traffic": 923, "octet": 923, "arbitr": 923, "can_fram": [923, 925], "canid_t": [923, 925], "can_id": [923, 925], "eff": [923, 925], "rtr": [923, 925], "__u8": [923, 925], "can_dlc": [923, 925], "__attribute__": [923, 925], "can0": [924, 925], "noarp": 924, "qdisc": 924, "qlen": 924, "relic": 924, "cansend": 924, "candump": 924, "canplay": 924, "cangen": 924, "snif": 924, "loopback": 924, "pf_can": 925, "sockaddr_can": 925, "sock_raw": 925, "can_raw": 925, "ifr_nam": 925, "siocgifindex": 925, "can_famili": 925, "af_can": 925, "can_ifindex": 925, "ifr_ifindex": 925, "sockaddr": [925, 948], "can_socket": 925, "packt": 925, "frame_layout": 925, "ib3x8": 925, "frame_s": 925, "calcsiz": 925, "recvfrom": 925, "sendto": 925, "lnxpp": 926, "can2udp": 926, "openwrt": 926, "asymmetrisch": 926, "mosi": 926, "miso": 926, "sclk": 926, "broadcom": 926, "ce0": 926, "3v": [926, 929], "5v": [926, 929], "transceiv": 926, "inter intergrated circuit": 929, "lm-sensor": 929, "handwork": [929, 931], "texa": 929, "maker": 929, "dtparam": [929, 930, 931], "i2c_arm": [929, 930, 931], "gpio2": 929, "gpio3": 929, "i2c_bcm2835": [929, 930, 931], "fe804000": [929, 931, 965], "i2c_dev": [929, 930], "sot": 929, "7v": 929, "rail": 929, "capacitor": 929, "idc": 929, "gnd": [929, 931], "vdd": 929, "smbdat": 929, "smbclk": 929, "unconnect": 929, "0x49": 929, "0x4a": 929, "jumper": 929, "3v3": [929, 931], "scl": [929, 931], "probl": 929, "i2c_slav": 929, "0x0703": 929, "o_rdwr": [929, 951, 958, 992], "msb_lsb": 929, "msb": 929, "lsb": [929, 1000], "65535": 929, "dev_fd": 929, "perror": [929, 943, 947, 948, 949, 955, 956, 957, 958, 963, 966, 983, 989, 992, 996], "libncurs": 929, "bcm2711_defconfig": 929, "v7l": 929, "semiconductor": 929, "j4": 929, "kernel7l": 929, "new_devic": [929, 931], "0048": 929, "modalia": 929, "preinstal": 929, "hwmon0": 929, "thermal": 929, "thermal_zone0": 929, "hwmon1": [929, 931], "temp1_max": 929, "temp1_max_alarm": 929, "temp1_min": 929, "temp1_min_alarm": 929, "update_interv": 929, "milli": [929, 931], "22000": 929, "randomli": [929, 931], "nomenclatur": 929, "pulse width modul": 930, "resistor": 930, "bright": 930, "potentiomet": 930, "ssop": 930, "0b1000000": 930, "buse": [930, 931], "i2cdetect": [930, 931], "charactr": 930, "pca": 930, "simultan": [930, 996], "peculiar": 930, "pca9685a": 930, "nxp": 930, "dtoverlai": [930, 931], "pwm_pca9685": 930, "regmap_i2c": 930, "3f804000": 930, "0040": [930, 965], "npwm": 930, "unexport": [930, 965], "butt": [930, 1011], "intercept": [930, 1022], "dim": 930, "fade": 930, "800000": [930, 1128], "600000": [930, 1128], "50000": 930, "apolog": 930, "kenel": 930, "devlop": 930, "pleasur": 930, "cornerston": 931, "unstabl": 931, "parasit": 931, "bitbang": 931, "gpiopin": 931, "profession": 931, "addon": 931, "pinout": 931, "01144fe43baa": 931, "w1_bus_master8": 931, "w1_bus_master1": 931, "amaz": 931, "400000000000": 931, "800000000000": 931, "behalf": [931, 945, 999], "ad0": 931, "ad1": 931, "ad2": 931, "vcc": 931, "0x18": 931, "0b0011000": 931, "shortli": [931, 1022], "execstart": 931, "36864": 931, "w1_bus_master2": 931, "w1_bus_master3": 931, "w1_bus_master4": 931, "w1_bus_master5": 931, "w1_bus_master6": 931, "w1_bus_master7": 931, "busno": 931, "abtract": 931, "prepackag": 931, "afford": 931, "alarm": [931, 995, 998], "conv_tim": 931, "w1_slave_driv": 931, "eeprom": 931, "ext_pow": 931, "w1_slave": 931, "22750": 931, "crc": 931, "rpi_volt": 931, "isa": 931, "in0": 931, "cpu_therm": 931, "temp1": 931, "w1_slave_temp": 931, "reliabl": 931, "radiou": 931, "disappear": 931, "0c4000000000": 931, "0x28": 931, "dalla": [931, 959], "02131d9920aa": 931, "5d": 931, "011432f138f9": 931, "misbehavior": 931, "instabl": 931, "pump": 931, "nuclear": 931, "plant": 931, "ssh-keygen": [932, 938], "password authent": [932, 938], "key based authent": [932, 938], "remote login": [932, 938], "unencrypt": 932, "rlogin": 932, "telnet": 932, "nsa": 932, "primarili": [932, 1025, 1144], "sftp": 932, "portno": 932, "unabl": 932, "propaget": 932, "sha256sum": 933, "72c18232434d0551af75f964ea66ae5d9271faba895f40a929fb17f19d7ab44c": 933, "mitm": 938, "uncomfort": 938, "keygen": 938, "safeguard": 938, "unrespons": 939, "port forward": 940, "portforward": 940, "secure copi": [940, 941], "hmmm": 940, "whateer": 940, "mydocu": 941, "recus": 941, "mobil": 941, "bandwidth": 941, "mediat": 941, "descriptiotn": 941, "file system": 942, "network file system": 942, "smb": 942, "crawl": 942, "debianish": 942, "mountpoint": 942, "grant": 942, "idmap": 942, "errnum": 943, "strerror_r": 943, "buflen": 943, "cleanest": 943, "_r": 943, "reentrant": 943, "syscal": 945, "getaddrinfo": 945, "ri": 947, "nbytes_read": [947, 948, 949], "24608": 947, "1024root": 947, "nager": 947, "698nager": 947, "gatewai": 948, "peer": [948, 951], "netinet": 948, "af_inet": 948, "sock_stream": 948, "sockaddr_in": 948, "sin_famili": 948, "sin_port": 948, "inet_aton": 948, "sin_addr": 948, "ipproto_ip": 948, "sa_famili": 948, "inet_addr": 948, "10hallo": 948, "16thi": 948, "ong": 948, "14ong": 948, "timerfd_settim": 949, "itimerspec": [949, 983], "nasti": [950, 983], "ingenu": 951, "smae": 951, "o_append": 951, "o_cloexec": 951, "sigpip": [951, 997], "whenc": 951, "seek_cur": 951, "seek_end": 951, "occupi": [951, 953, 954], "status": 952, "srcfile": 952, "dstfile": 952, "1073741825": 953, "0k": 953, "texttt": 954, "dup2": 954, "oldfd": 954, "newfd": 954, "o_": 954, "bytes_to_writ": [955, 956, 958], "wxr": 955, "o_tmpfil": 955, "speci": 955, "pli": 955, "nread": [957, 963, 966, 989, 992, 996], "thats": [957, 958], "litter": 958, "misspel": 958, "24625": 959, "24562": 959, "pread": 961, "pwrite": 961, "readv": 961, "writev": 961, "uio": 961, "iovec": 961, "iov": 961, "iovcnt": 961, "preadv": 961, "pwritev": 961, "ftruncat": [961, 992, 993], "filedescriptor": 961, "gpio26": [963, 965, 966], "subtre": 965, "fe200000": 965, "gpiochip488": 965, "gpiochip504": 965, "active_low": 965, "fd_set": [966, 989], "exc_fd": 966, "fd_zero": [966, 989], "nreadi": 966, "fd_isset": [966, 989], "eek": 966, "intens": 967, "ppid": 967, "tid": 967, "tsd": 967, "spezif": 967, "_reentrant": 967, "lpthread": [967, 983, 1002], "start_routin": 968, "pthread_exit": 968, "pthread_cancel": 968, "pthread_attr_setdetachst": 968, "detachst": 968, "pthread_create_detach": 968, "pthread_detach": 968, "pthread_self": 968, "pthread_equ": 968, "30650": 968, "13961": 968, "correl": 968, "gettid": 968, "pthread_mutexattr_t": [970, 986], "pthread_mutex_destroi": 970, "pthread_mutex_trylock": 970, "global_mutex": 970, "pthread_mutexattr_settyp": 970, "pthread_mutex_norm": 970, "pthread_mutex_errorcheck": 970, "pthread_mutex_recurs": 970, "pthread_mutex_default": 970, "pthread_cond_destroi": 972, "pthread_cond_broadcast": 972, "parlanc": 972, "set_autoreset_ev": 972, "ev": 972, "is_set": 972, "wait_autoreset_ev": 972, "acquiriert": 972, "autoreset": 972, "spuriou": 972, "woken": 972, "pthread_condattr_t": 972, "pthread_cond_initi": 972, "pthread_cond_timedwait": 972, "abstim": 972, "use_glob": 974, "pthread_once_t": 974, "global_onc": 974, "pthread_once_init": 974, "init_glob": 974, "pthread_onc": 974, "once_control": 974, "init_routin": 974, "pthread_key_cr": 974, "__thread": 974, "pthread_atfork": 975, "legales": 975, "lock_rac": 977, "succeed": [977, 1163], "foreground": [978, 1031], "huh": 978, "paradox": 978, "setenv": 980, "putenv": 980, "unsetenv": 980, "clearenv": 980, "customvar": 980, "timesl": 981, "starv": 981, "throughput": 981, "sha1": [981, 984, 1000], "voluntarili": [981, 984], "lrt": 983, "app_statu": 983, "tick_count": 983, "update_statu": 983, "sigact": [983, 996, 997], "sa_handl": [983, 996, 997], "sigrtmin": 983, "sigev": [983, 993], "sev": 983, "sigev_notifi": 983, "sigev_sign": 983, "sigev_signo": 983, "timer_t": 983, "tspec": 983, "nsec": 983, "timer_settim": 983, "show_statu": 983, "freerto": [983, 986], "syncron": 983, "update_status_func": 983, "initial_t": 983, "interval_t": 983, "show_status_func": 983, "update_task": 983, "show_task": 983, "231765": 983, "225819": 983, "5635": 983, "lwp": 983, "231766": 983, "231767": 983, "tracer": 983, "restart_syscal": 983, "clock_nanosleep": 983, "clock_realtim": 983, "500000000": 983, "033": 983, "7m": 983, "flash_func": 983, "is_revers": 983, "flash_task": 983, "flasher": 983, "indepen": 983, "toggl": 983, "fore": [983, 1033], "particularli": 984, "suscept": 984, "renic": 985, "din": 985, "44300": 985, "echtzeitbetrieb": 985, "betrieb": 985, "rechensystem": 985, "verarbeitung": 985, "anfallend": 985, "st\u00e4ndig": 985, "derart": 985, "betriebsbereit": 985, "da\u00df": 985, "verarbeitungsergebniss": 985, "innerhalb": [985, 1193], "vorgegebenen": 985, "zeitspann": 985, "000014": 985, "013914m": 985, "91410827636698u": 985, "000002": [985, 987], "002382m": 985, "3820173632900326u": 985, "intrus": 985, "controversi": 985, "sched_oth": 986, "relinquish": 986, "sched_param": 986, "sched_getschedul": 986, "sched_prior": 986, "pthread_setschedparam": 986, "pthread_getschedparam": 986, "predefini": 986, "pthread_attr_setschedpolici": 986, "spoken": 986, "pthread_mutexattr_setprotocol": 986, "pthread_prio_inherit": 986, "pthread_prio_protect": 986, "risen": 986, "pthread_mutexattr_setprioceil": 986, "000105": 987, "105247m": 987, "24749755859354u": 987, "000015": 987, "014643m": 987, "64260525619006u": 987, "105u": 987, "000067": 987, "067263m": 987, "2626495361326u": 987, "000003": 987, "002883m": 987, "8827592917392217u": 987, "ondemand": 987, "governor": 987, "cpufreq": 987, "scaling_governor": 987, "cpuinfo_cur_freq": 987, "067036m": 987, "03615188598611u": 987, "000001": 987, "001257m": 987, "2571678380193383u": 987, "000065": 987, "065188m": 987, "188407897949u": 987, "002376m": 987, "3758434034066656u": 987, "001042": 987, "042438m": 987, "4375534057617u": 987, "000017": 987, "017123m": 987, "123423079175748u": 987, "000143": 987, "142646m": 987, "6458358764593u": 987, "000005": 987, "004995m": 987, "994855006705264u": 987, "_syse": 989, "exit_failur": 989, "consume_fd": 989, "random_fd": 989, "tty_fd": 989, "nfd": 989, "ttys4": 989, "in_fd": 989, "eof_detect": 989, "shm": [991, 992, 993], "099": 991, "sem": [991, 992, 993], "shared memori": 992, "message queu": 992, "mman": 992, "fstat": 992, "st_size": 992, "map_fail": 992, "shm_open": [992, 993], "tmpf": [992, 993], "resiz": 992, "4095": 992, "weigh": 992, "map_shar": 992, "counter_loc": 992, "sem_t": [992, 993], "sem_open": 992, "sem_fail": 992, "sem_wait": 992, "sem_post": 992, "mq_attr": [992, 993], "mq_maxmsg": [992, 993], "mq_msgsize": [992, 993], "mqd_t": [992, 993], "mq_open": 992, "mq_send": 992, "mq_receiv": 992, "shm_unlink": 993, "overtak": 993, "mq_overview": 993, "oflag": 993, "mq_flag": 993, "mqde": 993, "msg_ptr": 993, "msg_len": 993, "msg_prio": 993, "sevp": 993, "disturb": [993, 996], "elegantli": 993, "qsize": 993, "signo": 993, "notify_pid": 993, "goiven": 993, "sem_overview": 993, "sem_trywait": 993, "sem_timedwait": 993, "abs_timeout": 993, "shm_close": 993, "shm_overview": 993, "051": [995, 996], "segv": [996, 997], "mortem": [996, 1122], "core_pattern": 996, "termination_handl": 996, "sigint": [996, 997], "sig_atomic_t": [996, 997], "term_act": 996, "alarm_handl": 996, "alarm_act": 996, "sigset_t": [996, 998], "termination_sign": 996, "sigemptyset": [996, 997], "sigaddset": [996, 997], "sigquit": 996, "sigprocmask": [996, 997], "sig_block": 996, "impolit": 996, "sig": [996, 997], "consume_pip": 996, "pipenam": 996, "puzzl": 996, "pthread_sigmask": [996, 997], "sigtstp": 997, "sigalrm": [997, 998], "sigchld": 997, "abnorm": 997, "sigabrt": 997, "sigsegv": 997, "sigbu": 997, "sigil": 997, "sigfp": 997, "unblock": 997, "oldset": 997, "sigpend": 997, "sigfillset": 997, "signum": 997, "sigdelset": 997, "sigismemb": 997, "sigsetop": 997, "recept": 997, "sa_mask": 997, "sa_flag": 997, "oldact": 997, "sig_ign": 997, "sig_dfl": 997, "sighandler_t": 997, "_exit": 997, "barebon": 998, "louder": 998, "stallman": 999, "risc": 999, "llvm": 999, "24360": 999, "hello_h": [999, 1015, 1017], "24416": 999, "linkabl": [999, 1135, 1190], "0000000000401040": 999, "_start": 999, "0000000000401000": 999, "_init": 999, "00000000004011b8": 999, "_fini": 999, "crt": 999, "crt1": 999, "crti": 999, "crtn": 999, "0000000000404000": 999, "_global_offset_table_": 999, "reloc": 999, "1762320": 999, "0000000000401126": 999, "1224008": 999, "greetdemo": 1000, "cmake_system_nam": 1000, "toolchain_base_dir": [1000, 1014], "cmake_c_compil": 1000, "cmake_cxx_compil": 1000, "find_xxx": 1000, "cmake_find_root_path_mode_program": 1000, "cmake_find_root_path_mode_librari": 1000, "cmake_find_root_path_mode_includ": 1000, "toolchian": 1000, "cmake_toolchain_fil": 1000, "libgreet": [1000, 1001, 1007, 1016, 1017], "13921": [1000, 1001], "cmakecach": [1000, 1001], "26192": [1000, 1001], "27920": [1000, 1001], "8503": [1000, 1001], "eabi5": 1000, "armhf": 1000, "5db807d9b005b19e1e0c957755fa7ca7b771edcb": 1000, "debug_info": 1000, "armv7l": 1002, "challeng": 1002, "metadistribut": 1002, "miniumum": 1002, "realiti": 1002, "rasberri": 1004, "clickabout": 1009, "workabl": 1011, "tarbal": 1011, "lastest": 1011, "x86_64_arm": 1011, "precompos": 1011, "uncompress": 1011, "73812": 1011, "1107168": 1011, "1481768": 1011, "1968456": 1011, "1091864": 1011, "1030432": 1011, "1221816": 1011, "lynxbe": 1013, "y3p9kn7mjei": 1013, "cli": 1013, "dockerhub": 1013, "hub": 1013, "sh_18_04": 1013, "78683068": 1013, "1292296": 1013, "70mb": 1014, "73018472": 1014, "auxvec": 1014, "bitsperlong": 1014, "bpf_perf_ev": 1014, "rapidli": 1015, "phoni": [1015, 1016, 1017], "origaniz": 1016, "relink": 1016, "0x2e20": 1016, "vdso": 1016, "0x00007fffe9fa7000": 1016, "0x00007f75ca289000": 1016, "0x00007f75ca46d000": 1016, "r_x86_64_32": 1016, "fpic": 1016, "whom": 1017, "hello_flex": 1017, "hello_flexible_h": 1017, "cq": 1017, "lisp": 1018, "create_f": 1018, "create_print": 1018, "print_blah": 1018, "print_someth": 1018, "sytax": 1019, "shutil": 1020, "tarfil": 1020, "temporarydirectori": 1020, "tmpd": 1020, "tarnam": 1020, "expandvar": 1020, "contrain": 1020, "__enter__": 1020, "__exit__": 1020, "openforread": 1020, "myprint": 1020, "orig_print": 1020, "exc_val": 1020, "exc_tb": 1020, "myarg": 1020, "total_ord": 1021, "a_vari": 1022, "fallback": [1022, 1042], "baseexceptiongroup": 1022, "exceptiongroup": 1022, "subtyp": 1022, "maybe_fail": 1022, "lone": 1022, "mysubsystemerror": 1022, "reallybaderror": 1022, "someothererror": 1022, "definitelybad": 1022, "evenwors": 1022, "collapsingtheworld": 1022, "errorcod": 1022, "__cached__": 1023, "_frozen_importlib_extern": 1023, "sourcefileload": 1023, "0x7f498d2e0350": 1023, "blindli": 1023, "ansibl": 1023, "matno": 1023, "conffil": 1023, "confcod": 1023, "confdict": 1023, "8001": 1023, "object ori": [1024, 1179], "keyword argu": 1024, "starstararg": [1024, 1045], "for loop": 1024, "iterator protocol": 1024, "operator overload": 1024, "drawn": 1025, "inputrang": 1025, "disgust": 1025, "gentli": 1025, "smarter": 1025, "nolimit": 1026, "fibo_numb": 1026, "jerki": 1026, "max_numb": 1026, "satisfactori": 1026, "python_1010_generators_yield": 1026, "glossari": 1027, "breadth": 1027, "subnamespac": 1030, "mysupermodul": 1030, "mysuperfunct": 1030, "subpackage1": 1030, "module1": 1030, "module2": 1030, "subpackage2": 1030, "disambigu": 1030, "increment_background": [1031, 1033], "background_integ": 1031, "foreground_integ": 1031, "runn": 1031, "backgroundincrement": 1031, "uncool": 1031, "14784035": 1033, "quack": 1035, "mockup": 1035, "37629462948539": 1035, "915216578832805": 1035, "96505568715561": 1035, "99142046248613": 1035, "46156808400883": 1035, "__next__": 1035, "brokensensor": 1035, "gettemperatur": 1035, "refect": 1036, "emp": 1039, "add_employe": 1039, "mgr": 1039, "isold": [1039, 1040, 1140], "haubentauch": [1039, 1040, 1043, 1140], "parentcl": 1039, "funnili": 1039, "make_child": 1040, "parent1": 1040, "parent2": 1040, "vvv": 1040, "father": 1040, "vvvvvv": 1040, "tabular": 1041, "someclass": 1041, "persons_from_csv": 1041, "person_dict": 1041, "operators object oriented program": 1042, "behaivor": 1042, "number2": 1042, "int2": 1042, "whistl": [1042, 1045], "symmetr": [1042, 1072], "commut": 1042, "summar": 1042, "attrnam": 1043, "meier": 1043, "expicitli": 1044, "0x7f1e1176c800": 1044, "marker": 1048, "eighti": 1048, "monti": 1048, "incompat": [1048, 1054, 1062, 1073], "benevol": 1048, "bdfl": [1048, 1132], "overse": 1048, "januari": 1048, "dropbox": 1048, "awk": 1050, "sensit": 1053, "throughout": 1053, "0o01234": 1054, "14159265359": [1054, 1068], "3e12": 1054, "\u00e4\u00f6\u00fc": 1054, "xa4": 1054, "xb6": 1054, "xbc": 1054, "xe4": 1054, "compel": 1054, "codebas": 1054, "ancient": 1054, "sequencish": 1058, "sixtim": 1058, "seen_sixey": 1058, "blahblahblahblahblah": 1059, "aah": 1060, "a_list": 1060, "a_tupl": [340, 1060], "hlow": 1060, "hlowrd": 1060, "straw": [340, 1061, 1069], "heritag": 1062, "140353652782312": 1063, "140353652782344": 1063, "140353652782568": 1063, "140353371247360": 1063, "140353370980896": 1063, "parameterizab": 1065, "program_exit": 1065, "exitstatu": 1065, "spam": [1067, 1130], "dec": 1067, "x58": 1067, "07d": 1068, "0x": 1068, "5x": 1068, "0x2f": 1068, "4x": 1068, "0x002f": 1068, "5o": 1068, "0o31": 1068, "04d": 1068, "0042": 1068, "05d": 1068, "00042": 1068, "thistl": 1069, "thorn": 1069, "annoy": 1069, "sqn": 1070, "defval": 1071, "iterkei": 1071, "keyiter": 1071, "0x7ff2e8753418": 1071, "unord": 1072, "tunabl": 1073, "shoudn": 1073, "0x7fca2c785b70": 1074, "tof": 1074, "outputfilenam": 1075, "argumentpars": 1075, "add_argu": 1075, "parse_arg": 1075, "ou": 1075, "ylabel": [1077, 1128], "xmin": 1077, "xmax": 1077, "ymin": 1077, "ymax": 1077, "twine": 1078, "lotsa": [1078, 1151], "long_descript": 1078, "long_description_content_typ": 1078, "beta": 1078, "osi": 1078, "approv": 1078, "package_dir": 1078, "python_requir": 1078, "install_requir": 1078, "paho": [1078, 1139], "pyproject": 1078, "toml": 1078, "backend": 1078, "build_meta": 1078, "yadda": 1078, "sdist": 1078, "python_course_2022_11_07": 1078, "12549": 1078, "BE": 1078, "mydb": 1079, "hardli": 1080, "femal": 1085, "miracl": [1088, 1105], "previouslin": 1092, "ifi": 1105, "uniqifi": 1106, "sensor_const": 1111, "test_sensor_const": 1111, "ii": [1112, 1114, 1118, 1120, 1131], "user_record": [1113, 1115], "read_csv_head": [1113, 1120], "read_csv_nohead": [1115, 1119, 1120], "csvfilenam": 1117, "test_noheader_person": 1118, "read_noheader_person": 1118, "test_must_not_use_global_variables_as_return_object": 1118, "filename1": 1118, "noheader1": 1118, "filename2": 1118, "noheader2": 1118, "users1": 1118, "users2": 1118, "test_header_person": 1118, "read_header_person": 1118, "test_user_json_person": 1118, "userdb_json": [1118, 1119], "test_person_to_json": 1118, "joerg_sent": 1118, "to_json_person": 1118, "joerg_receiv": 1118, "from_json_person": 1118, "envis": [1119, 1177], "to_json": 1119, "test_user_json": 1119, "test_user_to_json": 1119, "user_s": 1119, "json_user_s": 1119, "from_json": 1119, "test_nohead": 1120, "test_head": 1120, "lectur": [1122, 1191], "unsupervis": [1125, 1130], "conveyor": 1125, "belt": 1125, "linear_regress": [1126, 1129], "model_select": [1126, 1128], "train_test_split": [1126, 1128], "linear_model": [1126, 1128], "linearregress": [1126, 1128], "history_data": [1126, 1127, 1128, 1129], "inputfeatur": [1126, 1128], "outputfeatur": [1126, 1128], "input_train": [1126, 1128], "input_test": [1126, 1128], "output_train": [1126, 1128], "output_test": [1126, 1128], "test_siz": [1126, 1128], "output_predict": [1126, 1128], "visualcross": 1127, "york": [1127, 1128], "wind": [1127, 1128], "chill": [1127, 1128], "precipit": [1127, 1128], "snow": [1127, 1128], "gust": [1127, 1128], "humid": [1127, 1128], "rain": 1127, "cloudi": 1127, "995833": 1128, "688889": 1128, "287500": 1128, "327273": 1128, "012222": 1128, "690278": 1128, "470769": 1128, "369444": 1128, "513421": 1128, "946106": 1128, "574023": 1128, "313256": 1128, "994536": 1128, "070695": 1128, "025980": 1128, "302423": 1128, "214825": 1128, "665492": 1128, "900000": 1128, "700000": 1128, "090000": 1128, "050000": 1128, "377500": 1128, "750000": 1128, "950000": 1128, "650000": 1128, "330000": 1128, "325000": 1128, "850000": 1128, "425000": 1128, "825000": 1128, "715000": 1128, "470000": 1128, "970000": 1128, "multidimension": 1128, "xlabel": 1128, "coef_": 1128, "80189231": 1128, "intercept_": 1128, "95355086": 1128, "609608": 1128, "571879": 1128, "736988": 1128, "170933": 1128, "798254": 1128, "189739": 1128, "180394": 1128, "449230": 1128, "661530": 1128, "057745": 1128, "850176": 1128, "284120": 1128, "685067": 1128, "weather": [1129, 1130], "splice": [1129, 1130], "paper": 1129, "aspir": [1129, 1156], "dilig": 1130, "bite": 1130, "forecast": 1130, "agi": 1130, "asi": 1130, "forest": 1130, "predictor": 1130, "accuraci": 1130, "classif": 1130, "unlabel": 1130, "reinforc": 1130, "reward": 1130, "bay": 1130, "sepp": 1131, "tupleunpack": 1131, "spell": 1131, "redundantli": 1131, "quotechar": 1131, "spreadsheet": 1131, "odbc": 1132, "mysql": 1132, "informix": 1132, "berkeleydb": 1132, "mongodb": 1132, "rollback": 1132, "initd": 1134, "psycopg": 1134, "libpq": 1134, "conninfo": 1134, "psycopg2": 1134, "schwammerldb": 1134, "android": 1135, "schwammerln": 1135, "giftig": 1135, "geniessbar": 1135, "dbm": 1135, "steinpilz": 1135, "roehren": 1135, "speisetaeubl": 1135, "lamellen": 1135, "speitaeubl": 1135, "eierschwammerl": 1135, "teufelsroehrl": 1135, "overcod": 1136, "512119": 1136, "european": 1136, "steroid": 1136, "htmlhelp": 1136, "charset": 1136, "latin1": 1136, "chines": 1136, "enc": 1136, "0xfc": 1136, "0xdf": 1136, "0xf6": 1136, "\u00df": 1136, "cyril": 1136, "received_enc": 1136, "lg_enc": 1136, "bye_enc": 1136, "artificial intellig": 1137, "postgr": 1137, "mssql": 1137, "data sci": 1137, "ecosystem": 1137, "antp": 1139, "53767": 1139, "tcp6": 1139, "mosquitto_pub": 1139, "easiest": 1139, "message_receiv": 1139, "userdata": 1139, "on_messag": 1139, "loop_forev": 1139, "mosqitto_pub": 1139, "styrian": 1139, "esp": 1139, "666608091972": 1140, "ignore_index": 1140, "new_person": 1140, "saskia": 1140, "456710042003": 1140, "irrevers": 1141, "1153": [1144, 1145], "_locationindex": [1144, 1145], "maybe_cal": [1144, 1145], "apply_if_cal": [1144, 1145], "_getitem_axi": [1144, 1145], "_ilocindex": 1144, "1711": 1144, "1713": 1144, "_validate_integ": 1144, "_ix": 1144, "1647": 1144, "1645": 1144, "len_axi": 1144, "_get_axi": 1144, "rangeindex": 1145, "3791": 1145, "get_loc": 1145, "casted_kei": 1145, "pyx": 1145, "_lib": 1145, "indexengin": 1145, "hashtable_class_help": 1145, "pxi": 1145, "pyobjecthasht": 1145, "get_item": 1145, "1393": 1145, "_locindex": 1145, "1391": 1145, "thru": 1145, "_validate_kei": 1145, "_get_label": 1145, "1343": 1145, "1341": 1145, "axisint": 1145, "5567": 1145, "ndframe": 1145, "drop_level": 1145, "new_index": 1145, "4235": 1145, "4239": 1145, "bool_": 1145, "3793": 1145, "3795": 1145, "3797": 1145, "invalidindexerror": 1145, "3799": 1145, "listlik": 1145, "_check_indexing_error": 1145, "3801": 1145, "3803": 1145, "sort_index": 1145, "multiindex": 1145, "contrari": 1146, "lower_email": 1147, "rentner": 1147, "is_palindrom": 1147, "facto": [1148, 1172], "subel": 1148, "attrib": 1148, "getroot": 1148, "package manag": 1150, "project manag": [1150, 1178], "unit test": 1150, "virtual environ": 1150, "affin": 1150, "witch": 1151, "gnore": 1151, "ackup": 1151, "bort": 1151, "cert": 1151, "pem": 1151, "pythonhost": 1151, "e17846ef3601dcb6f118ea447439650e0c35cb4fe60274fbe24214156df2": 1151, "cp38": 1151, "manylinux2010_x86_64": 1151, "ext": 1151, "argcomplet": 1151, "asn1crypto": 1151, "ensurepip": [1152, 1158], "test_project": 1156, "test_soup": 1156, "test_task": 1156, "stringent": 1156, "discoveri": 1156, "syndrom": [1156, 1157, 1163], "test_person_point": 1156, "deselect": 1156, "test_": 1156, "test_simpl": 1156, "test_trivi": 1156, "test_trivial_but_fail": 1156, "___________________________": 1156, "____________________________": 1156, "test_stat": 1156, "implementation_point": 1156, "implementor1": 1156, "implementor2": 1156, "documentation_point": 1156, "integration_point": 1156, "implementation_perc": 1156, "documentation_perc": 1156, "integration_perc": 1156, "total_perc": 1156, "total_point": 1156, "gathered_point": 1156, "test_another_task_aspect": 1156, "test_ini_file_pars": 1156, "my_test_fil": 1156, "mytestcas": 1157, "runtest": 1157, "assertequ": 1157, "texttestrunn": 1157, "__db": 1157, "create_databas": 1157, "fill_test_data": 1157, "remove_databas": 1157, "testfeature1": 1157, "testfeature2": 1157, "testsuit": 1157, "addtest": 1157, "testload": 1157, "loadtestsfromtestcas": 1157, "testsometh": 1157, "failif": 1157, "failunless": 1157, "failunlessequ": 1157, "failifequ": 1157, "failunlessalmostequ": 1157, "failunlessrais": 1157, "env_dir": 1158, "my_venv": 1158, "easy_instal": 1158, "pip3": 1158, "powershel": 1158, "joblib": 1158, "threadpoolctl": 1158, "deactiv": 1158, "my_recreated_venv": 1158, "persuad": 1158, "will_fail": [1162, 1165], "initgoogletest": [1163, 1168], "run_all_test": [1163, 1168], "lgtest": [1163, 1165], "onesuit": 1163, "test1": 1163, "test2": 1163, "anothersuit": 1163, "postive_pattern": 1163, "negative_pattern": 1163, "gtest_list_test": 1163, "faildemo": 1163, "failisfat": 1163, "assertdemo": 1163, "assertisfat": 1163, "expect_": 1163, "expectdemo": 1163, "expectisnonfat": 1163, "expect_tru": 1163, "expect_eq": 1163, "0x58": 1163, "0x55": 1163, "assert_": 1164, "repoqueri": 1165, "dpkg": 1165, "listfil": 1165, "joergfaschingbau": 1165, "cmake_compiler_is_gnucc": 1165, "ggdb": 1165, "googlebenchmark": 1165, "predef": [1167, 1168], "predefinedtestenviron": 1168, "paranoidtest": 1168, "untechn": 1168, "thefixtur": 1168, "testthatmodifiesst": 1168, "complexfixtur": 1168, "first_n": 1168, "sometest": 1168, "egal": 1170, "welcher": 1170, "schulungstyp": 1170, "problemlo": 1170, "verifiziert": 1170, "formlos": 1170, "anliegen": 1170, "umgehend": 1170, "setzen": 1170, "besprechen": 1170, "gestaltung": 1170, "schl\u00fcssigkeit": 1170, "chronologisch": 1170, "gehaltenen": 1170, "querzulesen": 1170, "roter": 1170, "faden": 1170, "ablaufen": 1170, "\u00e4nderungen": 1170, "kursgeschehen": 1170, "passieren": 1170, "detailliert": 1170, "kosten": 1170, "terminen": 1170, "inhouseschulungen": 1170, "buchenden": 1170, "terminisiert": 1170, "zustandekommt": 1170, "zeitlich": 1170, "\u00f6rtlich": 1170, "flexibel": [1170, 1171], "zul\u00e4sst": 1170, "besond": 1170, "onlineschulungen": 1170, "erwiesen": 1170, "dedizierten": 1170, "implementieren": [1170, 1175], "instruktionen": [1170, 1174], "datenschutzrichtlinien": 1170, "genug": 1170, "durchweg": 1170, "wahlweis": 1170, "offenen": 1170, "anmelden": 1170, "inhouseschulung": 1170, "exklusiv": 1170, "\u00fcblicherweis": 1170, "firmenstandort": 1170, "basteln": [1170, 1187], "schwierig": 1170, "z\u00fcgig": 1171, "uhr": 1171, "punktlandung": 1171, "mbr": 1171, "bootet": 1171, "nachs\u00e4tz": 1171, "wahllos": 1171, "reinen": [1171, 1187], "gebastelt": 1171, "leichtfertigerweis": 1171, "richtigerweis": 1171, "multilib": 1171, "ausgestattet": [1171, 1180, 1187, 1194], "l\u00e4uft": 1171, "seltsamerweis": 1171, "dar\u00fcber": 1171, "zeitersparnisgr\u00fcnden": 1171, "hinweggeholfen": 1171, "vorcompilierten": 1171, "statisch": [1171, 1189], "gelinkten": 1171, "christof": 1171, "sourcen": 1171, "crosszucompilieren": 1171, "gescheitert": 1171, "ungl\u00fccklichen": 1171, "umstand": 1171, "schulungsrechn": 1171, "neu": 1171, "aufzusetzen": 1171, "kompil": 1171, "verschwunden": 1171, "buildscript": 1171, "konnt": 1171, "kreativen": 1171, "wiederhergestellt": 1171, "v\u00f6llig": 1171, "sinnfrei": 1171, "distributionen": 1171, "compilieren": [1171, 1173], "architekturen": 1171, "versucht": [1171, 1172, 1174], "richtigen": 1171, "leben": [1171, 1187], "anzuwenden": 1171, "leut": 1171, "anzusehen": 1171, "wort": [1171, 1173], "gefallen": 1171, "hart": 1171, "garantien": 1171, "durchau": 1171, "gerechtfertigt": 1171, "gesch\u00fctz": 1171, "auffahren": 1171, "enthaltenen": 1171, "n\u00fctzen": 1171, "stichwort": [1171, 1180, 1187], "mittelweg": 1171, "diffundieren": 1171, "aufruft": 1171, "startet": 1171, "ausgekl\u00fcgelt": 1171, "funktionsweis": 1171, "jeher": 1171, "kennt": [1171, 1193], "gewaltig": 1171, "geschichtsbelastet": 1171, "tr\u00e4gt": 1171, "intelligent": [1171, 1180, 1187], "trotz": 1171, "behauptungen": 1171, "gar": 1171, "lieblingsseit": 1171, "linuxthemen": 1171, "zentrisch": 1171, "bourne shel": [1172, 1182], "\u00fcbel": 1172, "sprechen": [1172, 1180, 1187], "vollst\u00e4ndig": 1172, "shellprogrammierung": 1172, "ruf": 1172, "schmutzigen": 1172, "stattdessen": 1172, "hauch": 1172, "pervers": 1172, "\u00e4sthetik": 1172, "verpassen": 1172, "geschicht": 1172, "kram": 1172, "environmentvariablen": 1172, "kontrollkonstrukt": [1172, 1173], "hauptteil": 1172, "stringmanipul": 1172, "obskur": 1172, "konstrukt": [1172, 1182], "auskommt": 1172, "umgang": [1172, 1182], "vorausgesetzt": [1172, 1174, 1175, 1183, 1189, 1190, 1192, 1193], "bibel": 1173, "hinzuf\u00fcgen": 1173, "erfind": 1173, "tickt": 1173, "wozu": 1173, "grenzen": 1173, "vorlag": 1173, "didaktik": 1173, "erg\u00e4nzt": 1173, "kontext": 1173, "heutigen": 1173, "dienen": 1173, "sprachkern": 1173, "unterrichten": 1173, "standardlibrari": 1173, "zugunsten": 1173, "bequemeren": 1173, "verzichten": 1173, "sprachdesign": 1173, "geachtet": 1173, "isoliert": 1173, "abseit": [1173, 1175, 1193], "mitbringt": 1173, "h\u00e4lt": 1173, "eignet": 1173, "hervorragend": [1173, 1180, 1188, 1193], "systemprogrammierung": 1173, "weglassen": 1173, "programmiert": [1173, 1175], "dementsprechend": [1173, 1193], "sinngem\u00e4ss": 1173, "aufgeteilt": 1173, "manipulieren": [1173, 1182], "maschineninstruktionen": 1173, "ausgef\u00fchrt": [1173, 1174], "geschwindigkeitsvorteil": 1173, "interpretierten": 1173, "nachteil": 1173, "verst\u00e4ndni": [1173, 1182, 1192], "speicherverwaltung": [1173, 1175, 1190], "integral": 1173, "zusammengesetzt": 1173, "speicherlayout": 1173, "wenigst": 1173, "worin": 1173, "programmstrukturierung": 1173, "deklar": 1173, "beliebtest": 1173, "unmeng": 1173, "flexibilit\u00e4t": [1173, 1190], "einbringen": 1173, "unbeliebtest": 1173, "fehlerm\u00f6glichkeiten": 1173, "verkettet": 1173, "fehlerszenarien": [1173, 1193], "absturz": 1173, "dahinsiechen": 1173, "debugginghilfen": 1173, "typumwandlungen": 1173, "hauptkritikpunkt": 1173, "sorglos": 1173, "integertypen": 1173, "breit": [1173, 1180], "regelwerk": 1173, "historisch": 1173, "aufarbeitung": 1173, "historischem": 1173, "ballast": 1173, "compileroptionen": 1173, "pr\u00e4prozessor": [1173, 1174], "leid": 1173, "grundz\u00fcgen": 1173, "gezeigt": [1173, 1182, 1187], "compilierung": 1173, "heutzutag": 1173, "wegzudenken": [1173, 1180], "damal": [1173, 1175], "programmen": [1173, 1174, 1189], "separat": 1173, "verbinden": 1173, "spielt": 1173, "archivieren": 1173, "linken": 1173, "programmgesundheit": 1173, "bedeutungen": 1173, "optimierungsm\u00f6glichkeiten": 1173, "memoryfehlern": 1173, "verwalten": 1173, "formatiert": 1173, "_und_": 1173, "komfort": 1173, "m\u00e4chtige": [1173, 1190], "jedoch": [1173, 1180, 1187, 1193], "weit": 1173, "fehlerimmunit\u00e4t": 1173, "allein": 1173, "verdienen": 1173, "erw\u00e4hnung": 1173, "stringbearbeitung": 1173, "heutig": 1173, "eigenwillig": 1173, "f\u00fclle": 1173, "erleichtern": 1173, "lauern": [1173, 1192], "gefahren": [1173, 1192, 1193], "sprachumfang": 1174, "angeht": 1174, "compiliert": 1174, "maschinencod": 1174, "pointern": 1174, "sofort": 1174, "beipflichten": 1174, "einmal": [1174, 1189, 1190, 1194], "beinharten": 1174, "typenkonvertierungen": 1174, "aufgesessen": 1174, "beleuchtet": [1174, 1192], "beschrittenen": 1174, "dunklen": 1174, "ecken": 1174, "widmet": 1174, "intensiv": 1174, "fehlersuch": 1174, "erkl\u00e4rungen": 1174, "sprachdefinit": 1174, "greifbar": 1174, "verdacht": 1174, "manch": 1174, "typkonversionen": 1174, "l\u00fccken": 1174, "typensystem": [1174, 1175], "techniken": [1174, 1180], "typensicherheit": 1174, "dunkl": 1174, "unn\u00f6tig": 1174, "programmhygien": 1174, "wege": 1174, "sauberen": 1174, "weisen": 1174, "optimierungstechniken": 1174, "anwenden": 1174, "optimierung": 1174, "erschweren": 1174, "lesbarkeit": 1174, "memoryzugriff": 1174, "ur": 1174, "beziehungsweis": 1174, "hardwareunterst\u00fctzung": 1174, "Ins": 1174, "kenntniss": [1174, 1175, 1183, 1189, 1190, 1192, 1193], "urspr\u00fcnglich": 1175, "erfunden": 1175, "leichter": 1175, "handhabbar": 1175, "erm\u00f6glichen": [1175, 1190], "ressourcenverwaltung": 1175, "kontrolliert": 1175, "mainstream": 1175, "einzug": 1175, "hie\u00df": 1175, "treffend": 1175, "seitdem": 1175, "vereinzelt": 1175, "soviel": 1175, "dampflokomot": 1175, "stellt": [1175, 1193], "vielfalt": 1175, "sprachkonstrukt": 1175, "genial": 1175, "gewagt": 1175, "behaupten": 1175, "anbelangt": 1175, "sprachmittel": 1175, "wichtigst": 1175, "n\u00e4mlich": 1175, "reichlich": [1175, 1180, 1187], "umstieg": 1175, "erw\u00e4gen": 1175, "embeddedbetriebssystem": 1175, "einsetzen": 1175, "vielerort": 1175, "m\u00f6glich": [1175, 1180], "datenkapselung": 1175, "objekten": 1175, "fallstrick": 1175, "korrektheit": 1175, "100ste": 1175, "strukturiert": 1175, "fehlerbehandlung": 1175, "generisch": 1175, "mechanismen": [1175, 1190, 1192, 1194], "mehrfachvererbung": 1175, "teilweis": 1175, "kapiteln": 1175, "unterschied": 1175, "erl\u00e4utert": [1175, 1180], "c++ 11": 1176, "enjoy": 1176, "overrrid": 1176, "coolest": 1176, "optinion": 1176, "oneshot": 1176, "communict": 1176, "unlearn": 1176, "inventor": 1177, "weren": 1178, "intricaci": 1178, "interdepend": 1178, "rudimentari": 1178, "graviti": 1179, "vocabulari": 1179, "confront": 1179, "reusab": 1179, "nicknam": 1179, "zentrum": [1180, 1187], "vollwertig": 1180, "selben": 1180, "betriessystemkonzept": 1180, "jahrzehnten": 1180, "bew\u00e4hrt": 1180, "automot": 1180, "sektor": 1180, "vertreten": 1180, "altbew\u00e4hrten": 1180, "konsequ": [1180, 1190], "ausbaut": 1180, "hardwareschnittstellen": 1180, "echtzeitf\u00e4higkeit": 1180, "dahint": 1180, "rundet": 1180, "hardwarebastelworkshop": 1180, "embeddedprogrammier": [1180, 1187], "l\u00e4nger": [1180, 1187], "normalen": [1180, 1187], "dateisystem": [1180, 1187], "versagt": [1180, 1187], "teuer": [1180, 1187], "erkauft": [1180, 1187], "elektronik": [1180, 1187], "testen": [1180, 1187, 1194], "hostsoftwar": [1180, 1187], "architekten": [1180, 1187], "plattformzusammensetzung": [1180, 1187], "entscheiden": [1180, 1187, 1194], "rechtfertigen": [1180, 1187], "logik": [1180, 1187], "steck": [1180, 1187], "beantworten": [1180, 1187, 1194], "eingeladen": [1180, 1187], "l\u00f6tmateri": [1180, 1187], "mitzubringen": [1180, 1187], "bastelei": 1180, "erfolgt": 1180, "vorhandenen": [1180, 1187, 1194], "minicomputern": 1180, "prototypen": 1180, "desktopbetriebssystem": [1180, 1187], "verh\u00e4ltniss": [1180, 1187], "512mb": [1180, 1187], "m\u00fchsam": [1180, 1187], "produktivsystem": [1180, 1187], "ohnehin": [1180, 1187], "unangebracht": [1180, 1187], "anf\u00e4ng": [1180, 1187], "filesystemen": [1180, 1187], "durchzuf\u00fchren": 1180, "filedeskriptoren": [1180, 1182], "getrennt": 1180, "abl\u00e4uf": 1180, "adressraum": 1180, "sorgfalt": 1180, "bloss": 1180, "gef\u00e4chert": 1180, "gewissen": 1180, "szenarien": 1180, "steuerungen": 1180, "gef\u00e4hrlich": 1180, "umfangreich": 1180, "hauptthema": 1180, "dennoch": 1180, "n\u00fctzlich": 1180, "haub": 1180, "schalten": [1180, 1187], "ausg\u00e4ngen": [1180, 1187], "abfragen": [1180, 1187], "eing\u00e4ngen": [1180, 1187], "sowohl": [1180, 1187], "dumm": [1180, 1187], "ereignisgesteuert": [1180, 1187], "mikrocontrollern": [1180, 1187], "aufgaben": [1180, 1187], "temperaturmessung": [1180, 1187], "expandierung": [1180, 1187], "ausgelagert": [1180, 1187, 1190], "dediziert": [1180, 1187], "angesteuert": [1180, 1187], "gegeben": [1180, 1187, 1189, 1190], "driverframework": 1180, "netzwerkstack": [1180, 1187], "einpasst": [1180, 1187], "schnittstellen": [1180, 1190], "implementationssprachen": 1180, "hardwareerfahrung": [1180, 1187], "linux kernel": 1181, "kernel driv": [1181, 1191], "wait queu": 1181, "block devic": 1181, "interrupt handl": 1181, "dose": 1181, "curios": 1181, "userpac": 1181, "massiv": 1181, "vital": 1181, "einblick": 1182, "gingen": 1182, "vieler": 1182, "demosess": 1182, "vertrackt": 1182, "entmystifiziert": 1182, "gef\u00fcrchteten": 1182, "erlernt": 1182, "inbetriebsetz": 1182, "hardwareingenieur": 1182, "angehend": 1182, "administratoren": 1182, "editieren": 1182, "bl\u00e4ttern": 1182, "textdateien": 1182, "schnittstel": 1182, "kombinationen": 1182, "kombin": 1182, "abschweifen": 1182, "programmierkenntniss": 1182, "zwingend": [1182, 1189], "make gnu": 1183, "gnu mak": 1183, "build manag": 1183, "seiner": [1183, 1190, 1194], "m\u00e4chtigen": 1183, "daran": 1183, "wendet": 1183, "interessiert": 1183, "gr\u00f6\u00dfere": 1183, "gebaut": 1183, "komplizierten": 1183, "griff": 1183, "regeln": 1183, "selbstdefiniert": 1183, "gewiss": [1183, 1188, 1190], "fertigkeit": 1183, "hemmenhofen": 1187, "gleichnamigen": 1187, "gerufen": 1187, "produktivem": 1187, "n\u00e4herzubringen": 1187, "spielekonsumenten": 1187, "kinder": 1187, "enden": 1187, "erstem": 1187, "breiteren": 1187, "drauf": 1187, "vorhandensein": 1187, "basisinfrastruktur": 1187, "vielem": 1187, "hervorragenden": 1187, "gestandenen": 1187, "obwohl": [1187, 1190], "sprachunabh\u00e4ngig": 1187, "brauchen": 1187, "computerspielen": 1187, "spielerischen": 1187, "f\u00fchren": 1187, "w\u00e4hlt": 1187, "lm": 1187, "netzwerkprotokol": [1187, 1193], "behaupt": 1188, "allen": 1188, "gro\u00dfkopferten": 1188, "kommerziellen": 1188, "systemen": 1188, "perforc": 1188, "etabliert": 1188, "erh\u00e4ltlich": 1188, "nachfolg": 1188, "abgel\u00f6st": 1188, "prim\u00e4r": 1188, "publikum": 1188, "sekund\u00e4r": 1188, "versionieren": 1188, "arbeitsweis": 1188, "bereinigung": 1188, "strategien": 1188, "programmierern": 1188, "vertrautheit": 1188, "vorteil": [1188, 1189], "umsteig": 1189, "\u00e4rgerni": 1189, "schl\u00e4gt": 1189, "ausgekl\u00fcgeltst": 1189, "systemcal": [1189, 1190, 1193], "sogenannt": 1189, "inspizieren": 1189, "grundprinzip": [1189, 1193], "sammlung": [1189, 1190], "ausf\u00fchrbar": 1189, "bedient": 1189, "handhabung": 1189, "gew\u00f6hnungsbed\u00fcrftig": 1189, "filedescriptoren": 1189, "lowlevel": 1189, "tiefen": 1190, "steigen": 1190, "alltagsprogrammier": 1190, "normalerweis": 1190, "verborgen": 1190, "hochperformant": 1190, "anwendungen": 1190, "modernen": [1190, 1192], "bertriebssystemen": 1190, "sogenanntem": 1190, "virtuellen": 1190, "speicherbereich": 1190, "instanzen": 1190, "desselben": 1190, "hauptspeich": 1190, "speicherzugriff": 1190, "schutzmechanismen": 1190, "miteinand": 1190, "kommunizieren": [1190, 1193], "semaphoren": 1190, "steinalt": 1190, "\u00fcberlebt": 1190, "keinesweg": 1190, "fehlerfrei": 1190, "benutzen": 1190, "verpasst": 1190, "beruht": 1190, "ladbar": 1190, "ressourcenschonung": 1190, "wasserdichten": 1190, "upgradepfad": 1190, "grundkenntni": [1190, 1192, 1193], "memory manag": 1191, "tcp-ip": 1191, "unverst\u00e4ndlich": 1192, "ungeachtet": 1192, "effizient": 1192, "propagiert": 1192, "soliden": 1192, "unbedacht": 1192, "handeln": 1192, "lebenszyklu": 1192, "gestartet": 1192, "versuchung": 1192, "gewalt": 1192, "terminieren": 1192, "konsequenzen": 1192, "joinabl": 1192, "detach": 1192, "eigenschaften": 1192, "racecondit": 1192, "vermeidung": 1192, "\u00fcberal": 1192, "vermutet": 1192, "integeroperationen": 1192, "kommunikationsmechanismen": 1192, "werkzeugkasten": 1192, "kommunikationskan\u00e4l": 1192, "niemal": 1192, "reihen": 1192, "traditionellen": 1192, "aufgenommen": 1192, "codebasi": 1192, "verzweigt": 1192, "ansehnlich": 1192, "realtimef\u00e4higkeiten": 1192, "priorit\u00e4ten": 1192, "f\u00fcgt": 1193, "benutzend": 1193, "programmierparadigma": 1193, "dar": 1193, "beschr\u00e4nkt": 1193, "streamverbindungen": 1193, "verbindungsaufnahm": 1193, "datagramm": 1193, "verbindungslos": 1193, "adressfamilien": 1193, "auffassung": 1193, "adress": 1193, "endpoint": 1193, "nummern": 1193, "adressen": 1193, "verbindungen": 1193, "hilfsfunktionen": 1193, "adresskonvertierung": 1193, "ipv6": 1193, "\u00e4quivalent": 1193, "ungleich": 1193, "ressourcenschonend": 1193, "pfadnamen": 1193, "bedienbar": 1193, "mittlerweis": 1193, "eingepasst": 1193, "angenehm": 1193, "umzugehen": 1193, "widmen": 1193, "verbundenen": 1193, "auszusetzen": 1193, "reagiert": 1193, "gelesen": 1193, "eventgetrieben": 1193, "knopfdruck": 1194, "abnimmt": 1194, "zahlreichen": 1194, "abgeklopft": 1194, "angst": 1194, "kaputtmachen": 1194, "konstruktiv": 1194, "einfachheit": 1194, "klarzumachen": 1194, "umzusetzen": 1194, "anstatt": 1194, "auszustatten": 1194, "gedanken": 1194, "erkannt": 1194, "entscheidung": 1194, "verbockt": 1194, "softwareentwickl": 1194, "jedwed": 1194, "stabilen": 1194, "abliefern": 1194, "entscheidungstr\u00e4g": 1194, "vorgesetzt": 1194, "schl\u00fcssige": 1194, "kan\u00e4l": 1194, "etablieren": 1194, "unittestframework": 1194, "tragen": 1194, "schwerf\u00e4llig": 1194, "halben": 1194, "\u00fcbrige": 1194, "zurechtzufinden": 1194, "vortragend": 1194, "aufgrund": 1194, "aufwarten": 1194, "beibringen": 1194, "\u00fcppigen": 1194, "verbergen": 1194, "pr\u00e4ferierten": 1194, "vortragenden": 1194, "mod_col": [], "add_row": [], "raaba": 375, "varibl": 340, "140419744527592": [], "0x7fb604fdf4e8": [], "140419028348656": [], "0b11111111111111111111111111111111": 340, "0b100000000000000000000000000000000": 340, "140419393726112": [], "140419393727456": [], "142334567876545678765456787654": 340, "139657891149032": [], "0x7f04a2fdf4e8": [], "139657609780880": [], "139657573602176": [], "139657573606832": [], "max_tri": 340, "139881445455080": [], "0x7f38afddf4e8": [], "139881164431568": [], "139880876465040": [], "139880876468544": [], "139818180670696": 340, "0x7f29f4fdf4e8": 340, "139817897762928": 340, "139817896921728": 340, "139817466913504": 340, "ipaddress": 340, "ip_address": 340, "ipv4address": 340, "is_loopback": 340, "gueltig": 340, "139818180670728": 340, "139817467481600": 340, "modifyit": 340, "sjdgosi": 340, "gfosvbsisvbsok": 340, "csv_file": 340, "datatyo": 341, "einlesen": 341, "mein_dir": 340, "mein_csv_fil": 340, "null_eins_zwei": 340, "0x7f296befbc40": 340, "shuffl": 340, "kvpair": 340}, "objects": {}, "objtypes": {}, "objnames": {}, "titleterms": {"kontakt": 0, "navig": [0, 885], "googl": 0, "map": [0, 7, 142, 210, 215, 218, 221, 224, 240, 250, 314, 352, 548, 549, 577, 638, 639, 730, 731, 796, 942], "streetview": 0, "curriculum": [1, 74, 75], "vita": 1, "\u00fcber": [2, 195, 205, 210, 218, 226], "mich": [2, 212], "projekt": [3, 23], "au": 3, "selbstst\u00e4ndig": 3, "t\u00e4tigkeit": 3, "nichtselbstst\u00e4ndig": 3, "skill": [4, 159], "angebot": 5, "In": [5, 32, 45, 66, 122, 167, 169, 170, 172, 202, 205, 266, 267, 269, 288, 290, 313, 326, 375, 466, 468, 474, 475, 536, 541, 543, 584, 588, 599, 600, 601, 602, 603, 604, 629, 686, 690, 694, 724, 725, 731, 744, 803, 852, 853, 860, 916, 966, 999, 1001, 1015, 1022, 1063, 1176], "hous": 5, "schulungen": [5, 1170], "zu": [5, 23, 188, 205], "meiner": 5, "person": [5, 263, 495, 694], "schwerpunk": 5, "c": [5, 7, 68, 69, 70, 71, 72, 98, 108, 109, 111, 112, 124, 159, 173, 188, 189, 205, 215, 223, 224, 240, 265, 266, 267, 269, 270, 278, 287, 289, 326, 327, 332, 360, 366, 375, 384, 424, 425, 462, 469, 474, 481, 488, 530, 536, 547, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 584, 586, 592, 593, 597, 598, 599, 611, 617, 619, 656, 664, 679, 681, 682, 683, 686, 687, 719, 720, 724, 731, 732, 740, 749, 754, 758, 777, 925, 945, 963, 966, 1068, 1173, 1174, 1175, 1176, 1177, 1179], "python": [5, 8, 11, 59, 61, 63, 64, 91, 96, 136, 155, 182, 185, 194, 195, 197, 198, 199, 201, 203, 205, 208, 210, 213, 219, 220, 222, 225, 227, 229, 232, 233, 234, 235, 236, 238, 239, 241, 244, 245, 248, 251, 253, 256, 258, 259, 260, 261, 262, 264, 266, 267, 269, 271, 272, 273, 274, 275, 276, 281, 283, 284, 288, 290, 291, 292, 293, 294, 295, 296, 297, 300, 301, 302, 303, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 357, 360, 362, 375, 682, 710, 724, 731, 925, 927, 1024, 1027, 1031, 1046, 1047, 1048, 1050, 1052, 1054, 1062, 1073, 1076, 1121, 1122, 1123, 1136, 1137, 1139, 1149, 1150, 1151, 1152, 1153, 1184, 1185], "linux": [5, 80, 81, 82, 98, 111, 112, 124, 162, 167, 175, 177, 178, 180, 187, 202, 204, 209, 214, 268, 277, 278, 298, 299, 360, 362, 375, 377, 802, 854, 855, 858, 864, 921, 923, 927, 928, 929, 931, 944, 962, 985, 1171, 1181, 1182, 1189, 1190, 1191, 1192, 1193], "schulungsstil": 5, "preis": 5, "cours": [6, 11, 12, 59, 61, 63, 64, 79, 155, 157, 178, 214, 223, 267, 269, 277, 306, 309, 359, 465, 1122, 1178, 1181], "materi": [6, 24, 28, 30, 185, 187, 202, 223, 356, 371, 372, 376, 465, 1121, 1122, 1143], "einleitung": [7, 215], "datatyp": [7, 205, 210, 212, 215, 218, 227, 231, 234, 237, 242, 244, 250, 254, 257, 259, 260, 272, 274, 275, 281, 282, 284, 292, 294, 295, 296, 300, 301, 302, 312, 314, 316, 318, 322, 323, 324, 328, 329, 330, 334, 335, 336, 338, 339, 340, 352, 380, 430, 433, 1025, 1054, 1055, 1059], "number": [7, 215, 218, 221, 242, 254, 257, 352, 710, 781, 788, 789, 952, 1026, 1042, 1045, 1054, 1062, 1063, 1084, 1087, 1097, 1098, 1140, 1144, 1145, 1168], "integ": [7, 195, 205, 210, 215, 218, 242, 244, 254, 257, 263, 275, 282, 302, 314, 318, 324, 330, 340, 352, 398, 445, 450, 666, 1033, 1054, 1063], "string": [7, 181, 182, 188, 195, 205, 212, 215, 218, 221, 226, 227, 231, 234, 237, 242, 244, 247, 250, 254, 257, 259, 260, 263, 272, 275, 279, 282, 296, 302, 314, 318, 324, 330, 336, 340, 349, 351, 352, 379, 392, 393, 399, 405, 469, 647, 648, 649, 662, 693, 694, 1054, 1067, 1068, 1069, 1104, 1147], "compound": [7, 205, 215, 227, 231, 234, 237, 242, 244, 250, 254, 257, 260, 272, 292, 296, 302, 314, 318, 330, 336, 340, 433, 1055], "list": [7, 11, 23, 181, 182, 195, 205, 212, 215, 218, 221, 226, 227, 231, 234, 237, 242, 244, 250, 254, 257, 260, 272, 275, 282, 292, 296, 302, 314, 324, 330, 336, 340, 438, 469, 536, 560, 577, 591, 634, 682, 695, 732, 786, 813, 814, 815, 837, 907, 1019, 1022, 1025, 1026, 1035, 1055, 1063, 1070, 1099, 1100, 1151], "arrai": [7, 183, 205, 215, 379, 388, 392, 430, 432, 442, 455, 565, 617, 619, 627, 671, 686, 697, 736], "javascript": [7, 215, 254], "std": [7, 108, 142, 215, 224, 240, 266, 267, 269, 326, 327, 484, 543, 548, 549, 559, 577, 600, 601, 602, 603, 604, 612, 618, 619, 620, 621, 631, 638, 639, 649, 662, 675, 678, 682, 685, 687, 694, 730, 731, 732, 736, 738, 741, 742, 743, 745, 746, 751, 752, 753, 754, 756, 757, 758, 761, 763, 767, 768, 769, 773, 776], "vector": [7, 108, 215, 543, 559, 577, 584, 600, 618, 619, 620, 621, 635, 678, 687, 732, 761, 978], "java": [7, 215], "dictionari": [7, 181, 195, 205, 210, 212, 215, 218, 226, 227, 231, 234, 237, 242, 244, 247, 250, 254, 257, 260, 263, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 352, 1019, 1023, 1036, 1055, 1071, 1091, 1118], "kei": [7, 172, 215, 263, 330, 352, 641, 642, 885, 936, 938], "valu": [7, 64, 200, 215, 286, 287, 330, 352, 390, 446, 603, 963, 985, 1056], "set": [7, 38, 64, 200, 205, 210, 215, 218, 226, 227, 231, 234, 237, 242, 244, 250, 254, 257, 260, 272, 275, 282, 292, 296, 302, 314, 318, 324, 330, 336, 340, 881, 882, 997, 1019, 1055, 1072, 1110, 1135, 1145], "mathematisch": [7, 215], "mengen": [7, 205, 215], "while": [7, 182, 195, 205, 215, 234, 242, 244, 247, 250, 257, 260, 282, 324, 330, 336, 340, 415, 416, 823, 828, 829, 1058, 1084, 1108], "function": [7, 43, 169, 182, 200, 205, 215, 218, 221, 224, 227, 231, 234, 242, 244, 250, 254, 259, 260, 263, 266, 267, 269, 271, 275, 282, 288, 296, 306, 307, 309, 312, 313, 314, 316, 322, 323, 324, 326, 327, 328, 329, 330, 334, 335, 336, 338, 339, 340, 357, 390, 392, 397, 424, 426, 428, 429, 434, 466, 467, 526, 560, 584, 593, 598, 600, 605, 609, 625, 682, 689, 692, 693, 694, 695, 704, 734, 746, 747, 786, 787, 849, 943, 945, 983, 1018, 1020, 1021, 1023, 1025, 1026, 1045, 1062, 1064, 1065, 1066, 1074, 1096, 1098, 1102, 1105, 1113, 1115, 1147], "basic": [8, 64, 71, 91, 126, 161, 173, 182, 194, 199, 201, 202, 203, 204, 208, 209, 213, 214, 223, 232, 235, 238, 245, 251, 256, 259, 262, 268, 274, 277, 281, 284, 291, 294, 295, 296, 298, 299, 300, 301, 302, 303, 306, 309, 312, 313, 314, 316, 317, 318, 322, 323, 324, 325, 328, 329, 330, 331, 334, 335, 338, 339, 340, 341, 352, 375, 420, 424, 427, 433, 460, 467, 483, 484, 538, 541, 606, 611, 614, 617, 618, 620, 624, 627, 638, 644, 653, 689, 697, 731, 736, 740, 741, 742, 743, 776, 788, 789, 790, 851, 854, 855, 858, 868, 907, 918, 923, 932, 944, 951, 959, 967, 999, 1021, 1022, 1075, 1077, 1111, 1130, 1141, 1142, 1162, 1163, 1164, 1182, 1185], "2021": [8, 11, 123, 206, 208, 211, 213, 214, 216, 219, 222, 223, 224, 225, 229, 232, 234, 235, 237, 238, 240, 349, 350, 357, 360, 361, 362, 363, 364, 365, 366, 375], "xx": 8, "yy": 8, "train": [8, 24, 25, 26, 27, 28, 155, 159, 169, 178, 183, 198, 199, 201, 202, 203, 204, 206, 208, 209, 213, 216, 219, 222, 223, 224, 225, 229, 232, 241, 245, 248, 251, 253, 256, 259, 262, 271, 274, 281, 284, 376, 1122, 1128], "inform": [8, 39, 147, 157, 169, 194, 197, 198, 199, 201, 202, 203, 204, 206, 208, 209, 213, 216, 219, 222, 223, 224, 225, 229, 232, 241, 245, 248, 251, 253, 256, 259, 262, 271, 274, 281, 284, 348, 357, 460, 744, 1052, 1122], "\u00fcberblick": [8, 206, 216, 225, 241, 253, 1175], "log": [8, 106, 146, 163, 198, 199, 202, 203, 211, 213, 214, 216, 219, 223, 225, 229, 232, 241, 253, 262, 357, 370, 371, 852, 853, 860], "tag": [8, 189, 208, 212, 216, 219, 225, 241, 253, 254], "1": [8, 19, 23, 37, 74, 79, 98, 108, 114, 117, 118, 121, 124, 164, 167, 179, 187, 189, 194, 198, 199, 201, 202, 203, 205, 206, 208, 213, 214, 216, 219, 223, 224, 225, 229, 232, 235, 238, 241, 245, 253, 278, 281, 284, 287, 288, 289, 290, 291, 295, 299, 301, 306, 312, 313, 316, 317, 327, 339, 356, 358, 359, 366, 373, 375, 378, 379, 380, 382, 386, 390, 399, 401, 402, 403, 404, 408, 409, 412, 415, 421, 422, 423, 424, 425, 428, 430, 434, 438, 440, 442, 445, 446, 447, 448, 450, 451, 453, 454, 460, 474, 484, 487, 489, 525, 587, 589, 596, 607, 610, 617, 619, 700, 705, 746, 751, 757, 772, 773, 784, 789, 796, 807, 817, 885, 924, 925, 931, 940, 954, 967, 968, 970, 972, 974, 975, 986, 993, 997, 1000, 1001, 1017, 1025, 1030, 1051, 1053, 1054, 1060, 1063, 1068, 1069, 1071, 1072, 1073, 1074, 1136, 1147, 1148, 1171], "2": [8, 19, 23, 37, 75, 79, 98, 108, 113, 114, 117, 121, 124, 164, 167, 189, 194, 195, 198, 199, 201, 202, 203, 205, 208, 212, 213, 214, 216, 219, 223, 224, 225, 229, 232, 234, 235, 238, 241, 245, 253, 278, 281, 284, 287, 288, 289, 290, 291, 295, 299, 306, 312, 313, 316, 317, 323, 327, 339, 371, 373, 375, 378, 379, 380, 382, 386, 390, 399, 401, 402, 403, 404, 408, 409, 412, 415, 421, 422, 424, 425, 428, 430, 434, 438, 440, 442, 445, 446, 447, 448, 450, 451, 453, 454, 460, 475, 484, 487, 489, 525, 574, 587, 589, 596, 607, 610, 617, 619, 701, 706, 746, 751, 757, 772, 773, 789, 796, 817, 885, 924, 925, 931, 940, 954, 967, 968, 970, 972, 974, 975, 986, 993, 997, 1000, 1001, 1013, 1017, 1025, 1030, 1051, 1053, 1054, 1060, 1062, 1063, 1069, 1071, 1072, 1073, 1074, 1132, 1134, 1135, 1136, 1147, 1148], "live": [8, 42, 44, 45, 181, 184, 206, 216, 219, 229, 278, 582, 622, 623, 625, 626, 629, 630, 631, 643, 682, 693, 726, 727, 754, 756, 856, 882, 946, 964], "hack": [8, 42, 44, 45, 181, 184, 206, 216, 219, 229, 278, 281, 285, 288, 291, 317, 582, 622, 623, 625, 626, 629, 630, 631, 643, 682, 693, 726, 727, 754, 756, 883, 964], "jupyt": [8, 9, 40, 206, 207, 211, 212, 213, 216, 217, 219, 220, 229, 230, 232, 233, 235, 236, 239, 241, 243, 246, 249, 252, 255, 258, 260, 261, 264, 273, 276, 279, 283, 292, 293, 297, 303, 308, 311, 314, 315, 318, 319, 325, 341, 352, 1128, 1129], "notebook": [8, 9, 40, 201, 206, 207, 211, 212, 213, 216, 217, 219, 220, 222, 229, 230, 232, 233, 235, 236, 237, 239, 241, 243, 246, 249, 252, 255, 258, 260, 261, 264, 273, 276, 279, 283, 292, 293, 297, 303, 308, 311, 314, 315, 318, 319, 325, 341, 352, 357, 1126, 1128, 1129], "link": [8, 23, 39, 146, 165, 183, 194, 197, 199, 201, 203, 206, 208, 213, 214, 216, 225, 229, 232, 235, 241, 248, 259, 262, 295, 301, 362, 364, 438, 440, 689, 703, 710, 728, 735, 739, 802, 813, 814, 864, 885, 906, 924, 931, 939, 1015, 1016, 1047, 1077, 1078, 1123, 1139, 1141, 1142, 1144, 1145, 1146, 1147, 1154, 1159], "programmierung": [9, 11, 181, 206, 207, 216, 217, 225, 241, 243, 253, 255, 375], "grundlagen": [9, 11, 194, 205, 206, 207, 216, 217, 219, 220, 225, 229, 233, 236, 239, 241, 243, 253, 255, 258, 261, 264, 273, 276, 297, 375], "detail": [10, 79, 214, 218, 250, 257, 289, 336, 340, 352, 374, 450, 528, 618, 1053], "content": [11, 24, 37, 157, 159, 161, 162, 163, 164, 165, 166, 167, 168, 177, 186, 190, 191, 221, 359, 463, 565, 568, 574, 577, 583, 665, 742, 854, 874, 887, 893, 899, 902, 919, 927, 928, 935, 944, 960, 962, 964, 979, 989, 992, 1006, 1026, 1081, 1082, 1086, 1095, 1109, 1116, 1163, 1165, 1168, 1176, 1179, 1181], "anhand": [11, 205, 225, 241, 253, 375, 1182], "von": [11, 23, 176, 181, 185, 188, 195, 205, 212, 225, 226, 241, 253, 340, 352, 375, 1182], "12": [11, 23, 45, 125, 126, 129, 137, 142, 185, 204, 205, 209, 216, 224, 237, 238, 240, 271, 322, 323, 324, 327, 328, 329, 330, 331, 357, 362, 366, 368, 375], "und": [11, 23, 175, 179, 195, 205, 206, 210, 212, 216, 218, 221, 225, 241, 244, 250, 253, 257, 263, 330, 340, 358, 375, 400, 409, 1175, 1186], "13": [11, 23, 41, 45, 172, 194, 205, 206, 216, 269, 278, 281, 282, 284, 375], "4": [11, 23, 108, 164, 189, 198, 201, 205, 213, 214, 216, 219, 223, 224, 241, 253, 278, 366, 375, 380, 438, 442, 448, 484, 487, 589, 707, 1025], "templat": [12, 142, 223, 240, 289, 547, 560, 561, 562, 563, 579, 580, 581, 609, 610, 611, 617, 650, 696, 699, 704, 706, 734, 767], "descript": [12, 59, 60, 63, 395, 410, 419, 426, 432, 436, 439, 443, 452, 456, 461, 462, 495, 582, 590, 605, 608, 611, 647, 652, 661, 663, 666, 668, 669, 670, 671, 672, 673, 674, 675, 677, 678, 680, 722, 723, 747, 755, 759, 771, 775, 777, 919, 927, 928, 982], "sidebar": [12, 37], "metadata": [12, 266, 267, 269, 907], "about": [13, 108, 159, 178, 237, 242, 254, 272, 275, 281, 285, 302, 309, 324, 329, 330, 336, 339, 340, 477, 687, 724, 914, 1015, 1067, 1070, 1071, 1072], "thi": [13, 32, 37, 125, 129, 130, 132, 135, 137, 141, 146, 164, 169, 170, 172, 173, 183, 192, 596, 610, 725, 844, 923, 946, 999, 1016, 1023, 1025], "site": [13, 28, 32, 146, 166, 168, 192], "licens": 13, "gplv3": 13, "github": [13, 122, 142, 166, 168, 198, 199, 211, 219, 357, 525, 539, 1123], "sphinx": [13, 40, 67, 168], "instal": [13, 62, 132, 165, 169, 173, 177, 190, 191, 194, 219, 223, 224, 304, 320, 357, 362, 377, 472, 800, 942, 997, 1008, 1013, 1014, 1047, 1077, 1078, 1110, 1123, 1139, 1156, 1158, 1163, 1165, 1178], "instruct": [13, 441, 751, 970, 1000, 1017], "pip": [13, 295], "venv": [13, 295], "work": [13, 17, 66, 98, 122, 124, 145, 150, 164, 198, 229, 267, 269, 286, 287, 288, 289, 364, 458, 459, 460, 539, 610, 776, 844, 845, 881, 884, 888, 1013], "progress": [13, 17, 145], "more": [13, 164, 182, 195, 234, 237, 242, 250, 254, 257, 259, 271, 272, 274, 275, 278, 280, 281, 284, 290, 291, 294, 295, 300, 301, 302, 309, 312, 316, 322, 323, 324, 328, 329, 330, 334, 335, 336, 338, 339, 340, 357, 380, 386, 409, 425, 427, 441, 451, 467, 477, 479, 589, 599, 602, 609, 622, 628, 682, 724, 725, 729, 746, 763, 833, 862, 863, 864, 868, 869, 914, 941, 983, 1020, 1022, 1024, 1067, 1070, 1071, 1072, 1122, 1131, 1156, 1168], "opentrain": [14, 23], "draft": [15, 771, 919, 1076], "topic": [15, 21, 74, 75, 99, 100, 102, 103, 104, 105, 142, 158, 194, 198, 201, 222, 223, 224, 235, 240, 259, 262, 278, 281, 284, 287, 288, 312, 316, 326, 327, 347, 361, 365, 366, 375, 395, 410, 419, 426, 432, 436, 439, 443, 452, 456, 461, 462, 488, 531, 532, 533, 534, 535, 536, 537, 540, 582, 590, 605, 608, 611, 627, 633, 637, 645, 650, 652, 655, 661, 679, 680, 684, 691, 698, 709, 722, 723, 733, 738, 747, 755, 759, 771, 775, 777, 778, 779, 802, 922, 937, 955, 957, 976, 982, 1003, 1009, 1010, 1025, 1030, 1038, 1076, 1125, 1129, 1133, 1137, 1139, 1143, 1155, 1161], "miscellan": [16, 144, 155, 159, 178, 182, 202, 231, 242, 244, 250, 260, 266, 267, 271, 275, 278, 287, 290, 291, 296, 301, 302, 312, 313, 316, 323, 324, 326, 330, 340, 560, 582, 661, 665, 696, 759, 961, 972, 974, 1069, 1137], "s5": [17, 18, 159], "integr": [17, 126, 128, 131, 686, 702], "web": [17, 94, 95, 160], "slide": [17, 18, 30, 45, 182, 360, 372, 993, 997], "implement": [17, 125, 129, 130, 132, 133, 135, 137, 141, 142, 250, 313, 326, 343, 349, 489, 496, 506, 511, 521, 522, 523, 524, 528, 536, 541, 542, 586, 587, 592, 598, 600, 658, 682, 693, 783, 786, 805, 841, 1020, 1026, 1042, 1101], "note": [17, 37, 62, 136, 144, 177, 343, 482, 870], "todo": [17, 159, 188, 191, 202, 208, 344, 345, 346, 363, 465, 560, 561, 564, 567, 570, 573, 576, 579, 782, 786, 794, 826, 988, 991, 995, 1138, 1162, 1167], "test": [18, 37, 42, 43, 44, 45, 50, 72, 125, 129, 130, 132, 133, 135, 137, 141, 173, 194, 224, 248, 259, 262, 271, 280, 281, 284, 285, 286, 290, 291, 304, 306, 309, 312, 313, 316, 320, 339, 365, 371, 375, 466, 480, 489, 509, 525, 539, 541, 542, 602, 786, 805, 838, 930, 959, 1011, 1014, 1078, 1111, 1118, 1119, 1120, 1128, 1156, 1157, 1161, 1163, 1165, 1168, 1178, 1194], "level": [19, 454], "head": [19, 37, 813, 916, 1131], "imag": [19, 183, 202, 1013], "screencast": [20, 156], "written": [21, 124, 585, 588], "new": [21, 133, 142, 158, 224, 240, 266, 267, 269, 326, 327, 375, 528, 565, 681, 682, 722, 758, 777, 805, 838, 1140], "write": [21, 42, 50, 58, 161, 528, 565, 592, 704, 719, 742, 783, 951, 958, 1043, 1073, 1079, 1148], "netide": [22, 23], "f\u00f6rderantrag": [22, 23], "daten": [23, 218, 226], "antragsteller_in": 23, "allgemein": 23, "projektnam": 23, "untertitel": 23, "3": [23, 98, 108, 114, 124, 142, 164, 189, 198, 199, 201, 202, 203, 204, 205, 208, 213, 214, 219, 223, 224, 225, 227, 229, 234, 235, 238, 241, 245, 253, 260, 278, 281, 284, 287, 289, 290, 291, 295, 299, 301, 312, 313, 314, 316, 317, 323, 327, 339, 375, 380, 430, 434, 438, 442, 448, 450, 451, 453, 454, 484, 487, 489, 525, 589, 702, 773, 954, 970, 974, 975, 1025, 1054, 1062, 1068, 1073], "allgemeinverst\u00e4ndlich": 23, "kurzbeschreibung": 23, "de": [23, 271, 375, 851], "anschlussf\u00f6rderung": 23, "die": [23, 53, 170, 188, 226, 1183], "besonder": [23, 205], "bedeutung": 23, "ihr": 23, "f\u00fcr": [23, 189, 195, 205, 375, 1174], "da": [23, 185, 195, 212, 221, 254], "internet": 23, "internetnutzung": 23, "IN": 23, "\u00f6sterreich": 23, "zielgrupp": 23, "projektziel": 23, "5": [23, 164, 182, 189, 194, 195, 197, 205, 223, 224, 226, 278, 366, 375, 438, 448, 484, 487, 708, 852, 853], "l\u00f6sung": [23, 195], "beschreibung": 23, "der": [23, 205, 210, 226, 358, 375, 1171], "probleml\u00f6sung": 23, "wesentlich": 23, "element": [23, 205, 242, 260, 262, 543, 545, 546, 550, 638, 640, 641, 1059], "ein": [23, 195, 226, 1182, 1187], "nachhaltigen": 23, "impact": 23, "nach": [23, 262], "projektend": 23, "6": [23, 142, 205, 206, 226, 227, 260, 375, 438, 448, 484, 487, 1068, 1186], "umfeldanalys": 23, "wa": [23, 194, 210, 671], "ist": [23, 195], "stand": 23, "technik": 23, "method": [23, 218, 221, 231, 242, 244, 247, 250, 260, 275, 287, 296, 302, 314, 318, 324, 330, 336, 340, 349, 351, 359, 538, 574, 586, 593, 594, 595, 598, 600, 602, 605, 657, 660, 668, 672, 740, 741, 742, 743, 744, 767, 784, 819, 821, 835, 1040, 1042, 1068, 1069, 1070, 1157], "wissen": 23, "welch": 23, "ander": [23, 181, 358], "l\u00f6sungen": 23, "vorhaben": 23, "den": [23, 170, 210, 226], "genannten": 23, "problemen": 23, "gibt": [23, 205], "e": [23, 457, 741], "schon": 23, "7": [23, 198, 205, 206, 226, 375, 438, 448, 1186], "alleinstellungsmerkm": 23, "8": [23, 205, 206, 225, 226, 375, 438, 448, 931, 1136, 1186], "projektergebniss": 23, "erforderlich": 23, "lizenzen": 23, "dritter": 23, "9": [23, 198, 199, 205, 206, 226, 375, 438, 448, 1025, 1171, 1186], "erfolgreich": 23, "projektabschluss": 23, "sonstigen": 23, "aktivit\u00e4ten": 23, "im": [23, 205, 231, 244, 257, 260, 275, 282, 296, 302, 314, 318, 336, 340, 375, 1063], "projektbereich": 23, "angaben": 23, "zur": [23, 176, 195, 205], "fachlichen": 23, "eignung": 23, "mitarbeiterinnen": 23, "projektkernteam": 23, "erfahrung": 23, "vorgesehenen": 23, "projektleiterin": 23, "zum": [23, 181, 226], "maxim": 23, "min\u00fctigen": 23, "video": [23, 24, 31, 213, 271, 301, 317, 690], "risiken": 23, "erfolgskriterien": 23, "am": [23, 195, 254, 375], "angestrebt": 23, "jahr": 23, "10": [23, 45, 100, 101, 142, 148, 179, 182, 187, 198, 201, 205, 240, 241, 268, 269, 270, 271, 272, 286, 309, 310, 312, 313, 315, 357, 361, 362, 363, 367, 375, 438, 545, 852, 853], "umsetzung": 23, "einj\u00e4hrig": 23, "wichtig": 23, "partner_innen": 23, "arbeitsschwerpunkt": 23, "ressourcen": 23, "nutzer_innen": 23, "kommunikationskan\u00e4l": 23, "11": [23, 45, 125, 129, 137, 141, 142, 180, 185, 203, 204, 205, 234, 235, 240, 265, 269, 271, 274, 275, 309, 316, 317, 318, 319, 320, 321, 322, 323, 324, 364, 365, 375, 438, 560, 683, 686, 719, 720, 731, 740, 777], "projekttermin": 23, "termin": [23, 856, 968, 1031], "projektstart": 23, "kosten": 23, "finanzierung": 23, "projektkosten": 23, "personalkosten": 23, "sonstig": 23, "gesamtkosten": 23, "wir": [23, 210, 226], "beantragen": 23, "folgend": 23, "f\u00f6rderung": 23, "restlichen": 23, "werden": [23, 205], "finanziert": 23, "durch": [23, 195], "sonderprei": 23, "14": [23, 45, 125, 126, 129, 137, 142, 185, 194, 205, 206, 209, 223, 265, 375], "erg\u00e4nzend": 23, "transparenz": 23, "mehrfachantr\u00e4g": 23, "nutzung": 23, "whataventur": 23, "plattform": 23, "eingereicht": 23, "teil": 23, "einer": [23, 185, 194, 205, 375], "schulischen": 23, "verpflichtung": 23, "z": 23, "b": 23, "htl": 23, "diplomarbeit": 23, "wie": [23, 212, 218], "haben": [23, 195], "sie": [23, 195], "erfahren": 23, "mehrfachnennungen": 23, "m\u00f6glich": 23, "16": [23, 224, 248, 262, 274, 275, 375, 1025, 1171], "datenschutz": 23, "screenplai": [24, 64, 342, 466, 562, 565, 568, 571, 574, 577, 580, 612, 613, 614, 615, 616, 619, 620, 621, 639, 640, 641, 642, 780, 783, 788, 793, 798, 800, 838, 841, 844, 989, 992, 996, 1064, 1151, 1158, 1163, 1165, 1168], "The": [24, 39, 43, 45, 62, 101, 122, 125, 160, 173, 205, 221, 224, 227, 234, 251, 260, 263, 278, 286, 288, 290, 296, 299, 306, 309, 312, 313, 316, 318, 326, 327, 330, 340, 378, 386, 387, 424, 425, 440, 447, 448, 457, 458, 462, 463, 472, 540, 541, 593, 617, 638, 639, 661, 681, 682, 690, 695, 697, 699, 724, 742, 745, 756, 777, 821, 851, 860, 861, 868, 885, 888, 899, 902, 905, 907, 916, 918, 922, 938, 940, 942, 943, 945, 951, 959, 963, 978, 980, 987, 999, 1001, 1002, 1011, 1012, 1020, 1021, 1023, 1027, 1031, 1039, 1042, 1046, 1048, 1050, 1057, 1062, 1068, 1110, 1131, 1138, 1147, 1157, 1178], "problem": [24, 422, 444, 467, 468, 476, 482, 483, 484, 487, 493, 540, 541, 683, 695, 699, 719, 720, 729, 745, 758, 763, 781, 815, 862, 881, 940, 942, 946, 1001, 1016, 1017, 1021, 1035, 1130, 1152, 1159], "And": [24, 42, 62, 64, 122, 127, 128, 142, 173, 269, 272, 275, 278, 281, 286, 287, 288, 289, 290, 291, 296, 299, 301, 304, 306, 309, 312, 313, 316, 317, 318, 320, 324, 326, 327, 330, 340, 398, 442, 466, 467, 469, 472, 473, 478, 479, 480, 486, 489, 495, 503, 504, 509, 517, 523, 538, 585, 586, 592, 597, 613, 617, 618, 619, 621, 639, 654, 655, 659, 662, 687, 693, 695, 697, 710, 727, 730, 731, 732, 734, 735, 740, 752, 754, 756, 758, 763, 773, 789, 847, 851, 852, 853, 857, 860, 866, 868, 904, 916, 918, 923, 927, 933, 934, 945, 958, 980, 1008, 1009, 1011, 1013, 1014, 1015, 1016, 1018, 1023, 1027, 1028, 1031, 1035, 1036, 1037, 1042, 1043, 1044, 1045, 1109, 1110, 1111, 1119, 1131, 1136, 1141, 1142, 1144, 1145, 1146, 1156, 1178], "me": [24, 166, 326, 957], "open": [24, 150, 175, 291, 492, 783, 784, 948, 951, 954, 956, 993, 1020, 1073], "sourc": [24, 40, 165, 175, 191, 467, 485, 781, 784, 786, 789, 791, 794, 798, 803, 805, 815, 817, 825, 828, 833, 952, 1001, 1078, 1136], "walk": [24, 278, 340, 357], "through": [24, 278, 357], "us": [25, 26, 27, 28, 29, 30, 31, 32, 38, 42, 163, 167, 169, 173, 183, 184, 190, 192, 202, 221, 223, 224, 237, 240, 383, 385, 388, 403, 418, 440, 450, 458, 459, 468, 470, 484, 487, 504, 525, 625, 649, 670, 678, 690, 694, 695, 731, 745, 756, 767, 768, 769, 917, 929, 930, 931, 967, 983, 1000, 1001, 1011, 1012, 1018, 1020, 1023, 1026, 1036, 1045, 1151, 1157, 1158], "case": [25, 26, 27, 28, 29, 30, 223, 414, 418, 489, 551, 553, 556, 730, 731, 952, 956, 957, 958, 1010, 1018, 1045, 1157, 1163], "custom": [25, 150, 153, 166, 347, 586, 587, 601, 607, 631, 685, 1145, 1147, 1163], "subtract": [25, 584], "known": [25, 161], "calcul": [26, 221, 407, 486, 1043], "minimum": [26, 803], "durat": 26, "trainer": [27, 177], "editor": [27, 214], "end": [27, 696], "user": [27, 42, 46, 224, 226, 375, 588, 667, 672, 673, 674, 675, 676, 677, 789, 857, 858, 860, 861, 862, 870, 871, 882, 942, 1022, 1112, 1114, 1116, 1117, 1119, 1151], "audienc": [27, 1178], "from": [28, 29, 31, 38, 40, 42, 43, 45, 57, 101, 122, 142, 148, 154, 173, 183, 191, 192, 200, 240, 250, 278, 281, 286, 295, 313, 375, 393, 415, 421, 463, 466, 609, 612, 653, 662, 666, 692, 693, 732, 793, 798, 839, 844, 929, 941, 959, 983, 992, 999, 1041, 1078, 1118, 1122, 1123, 1128, 1130, 1171], "other": [28, 38, 52, 221, 290, 302, 359, 690, 803, 825, 870, 1030], "menu": 29, "choos": 29, "show": 30, "plain": [30, 625, 653, 654, 682], "text": [30, 299, 424, 912, 915, 918, 1073, 1148], "file": [30, 31, 42, 48, 183, 185, 221, 231, 234, 250, 257, 259, 260, 274, 278, 282, 292, 294, 295, 296, 299, 300, 301, 318, 322, 323, 324, 329, 330, 334, 335, 336, 338, 339, 348, 349, 364, 422, 466, 468, 474, 489, 568, 599, 783, 784, 785, 793, 825, 852, 853, 856, 874, 879, 880, 886, 887, 890, 891, 892, 900, 904, 907, 908, 912, 915, 917, 933, 941, 942, 946, 947, 951, 952, 953, 954, 955, 956, 957, 958, 960, 961, 965, 989, 993, 999, 1000, 1014, 1020, 1049, 1073, 1078, 1079, 1080, 1101, 1103, 1112, 1114, 1131, 1163], "send": [31, 993, 997], "A": [31, 45, 64, 122, 137, 142, 162, 173, 240, 266, 267, 269, 281, 285, 286, 287, 288, 290, 295, 326, 327, 329, 375, 381, 390, 420, 447, 465, 466, 469, 483, 503, 517, 525, 528, 538, 543, 558, 584, 599, 600, 609, 618, 648, 659, 660, 673, 682, 687, 695, 697, 724, 727, 740, 743, 745, 852, 853, 856, 870, 881, 904, 908, 941, 943, 947, 948, 949, 952, 955, 956, 957, 958, 965, 978, 983, 986, 999, 1012, 1013, 1016, 1017, 1018, 1021, 1026, 1045, 1048, 1110, 1136, 1141, 1144, 1147, 1148, 1156], "v4l": 31, "camera": 31, "devic": [31, 64, 82, 98, 124, 780, 781, 782, 783, 784, 785, 788, 789, 790, 791, 792, 793, 815, 819, 820, 821, 856, 929, 931, 989], "output": [31, 50, 121, 130, 183, 195, 348, 480, 663, 867, 1025, 1128, 1163], "over": [31, 234, 242, 244, 776, 931, 1061, 1062], "ssh": [31, 214, 278, 299, 354, 362, 932, 935, 936, 937, 938, 939, 940, 941, 942], "captur": [31, 724, 725, 727], "To": [31, 37, 39, 42, 44, 53, 121, 159, 257, 286, 326, 488, 489, 504, 525, 651, 662, 682, 686, 695, 697, 699, 710, 724, 732, 740, 742, 744, 745, 756, 796, 837, 839, 852, 853, 933, 934, 941, 1001, 1011, 1013, 1018, 1020, 1021, 1041, 1042, 1119, 1140, 1141, 1147], "plai": [31, 64, 710], "remot": [31, 98, 122, 124, 144, 493, 506, 520, 852, 853, 933, 934, 938, 941, 942], "system": [31, 164, 237, 278, 299, 336, 364, 375, 396, 460, 657, 748, 874, 880, 942, 944, 945, 946, 951, 962, 980, 983, 986, 1052, 1151, 1171, 1189, 1190, 1191, 1192, 1193], "emoji": 32, "code": [32, 41, 43, 45, 108, 192, 193, 195, 196, 219, 235, 288, 290, 291, 304, 320, 375, 444, 454, 464, 465, 466, 468, 474, 475, 476, 481, 485, 561, 564, 567, 570, 573, 576, 579, 609, 694, 742, 763, 786, 787, 791, 792, 793, 794, 795, 805, 806, 815, 816, 827, 828, 829, 833, 834, 957, 988, 991, 995, 1015, 1016, 1017, 1118, 1119, 1120, 1123, 1126, 1129, 1136, 1149, 1158, 1162, 1167, 1178], "sphinxemoji": 32, "setup": [32, 64, 79, 110, 165, 169, 191, 198, 199, 201, 202, 203, 224, 274, 280, 281, 284, 287, 289, 291, 294, 295, 299, 300, 301, 322, 323, 328, 329, 334, 338, 339, 480, 538, 540, 922, 930, 938, 949, 1013, 1014, 1047, 1110, 1111, 1158, 1168], "most": [32, 38, 64, 697, 1151], "here": [32, 163, 489, 941], "all": [32, 38, 53, 64, 218, 221, 240, 286, 316, 327, 375, 656, 682, 690, 725, 745, 844, 862, 999, 1015, 1033, 1121], "recip": 33, "isoamsa": 34, "txt": [34, 35, 36, 38], "ad": [34, 35, 36, 166, 1015, 1140, 1147], "mathemat": [34, 35, 36], "symbol": [34, 35, 36, 384, 399, 460, 906, 999], "arrow": 34, "isoamsr": 35, "relat": [35, 178, 281, 284, 402, 764], "isonum": 36, "binari": [36, 504, 1073], "oper": [36, 182, 195, 205, 218, 234, 237, 240, 247, 250, 254, 257, 271, 286, 306, 318, 352, 386, 401, 402, 403, 406, 407, 409, 410, 415, 427, 538, 560, 585, 586, 592, 600, 640, 740, 748, 754, 783, 784, 785, 867, 946, 983, 1042, 1052, 1054, 1056, 1072, 1142], "layout": [37, 250, 433], "page": [37, 95, 166, 168, 796, 885, 917, 945], "admonit": 37, "i": [37, 45, 118, 163, 164, 181, 221, 231, 237, 242, 247, 250, 257, 259, 260, 292, 296, 299, 301, 330, 336, 349, 361, 386, 412, 459, 465, 483, 538, 557, 584, 591, 653, 659, 660, 695, 697, 720, 724, 729, 732, 741, 745, 749, 753, 763, 798, 809, 830, 845, 856, 860, 861, 866, 867, 868, 881, 891, 904, 931, 941, 942, 943, 946, 947, 948, 949, 950, 951, 954, 956, 958, 960, 961, 978, 981, 999, 1016, 1018, 1023, 1073, 1130, 1144, 1168], "an": [37, 166, 237, 290, 305, 312, 316, 321, 353, 357, 375, 471, 476, 586, 695, 710, 786, 904, 930, 941, 946, 983, 1016, 1027, 1036, 1063, 1065, 1158, 1176], "tip": 37, "hint": [37, 506, 536], "import": [37, 173, 181, 221, 231, 240, 357, 591, 997, 1022, 1030, 1138], "attent": [37, 1065], "caution": [37, 660], "error": [37, 43, 173, 237, 290, 291, 312, 313, 316, 425, 450, 484, 606, 616, 617, 701, 704, 867, 931, 943, 952, 956, 957, 958, 1035, 1091], "danger": [37, 392, 753, 882], "blech": 37, "titl": 37, "blah": 37, "kursdaten": [37, 1172, 1173, 1174, 1175, 1180, 1182, 1183, 1187, 1188, 1189, 1190, 1192, 1193, 1194], "local": [37, 39, 98, 122, 124, 144, 182, 205, 423, 455, 472, 493, 938, 941, 974, 1001, 1064, 1158], "bleh": 37, "do": [37, 42, 159, 221, 263, 326, 416, 453, 472, 483, 682, 815, 837, 852, 853, 868, 999], "mmlalia": 38, "mathml": 38, "alias": 38, "entiti": [38, 968], "restructuredtext": 39, "cheat": [39, 357], "sheet": [39, 357], "further": [39, 147, 186, 222, 223, 245, 348, 357, 454, 690, 744, 1052], "document": [39, 168, 218, 234, 314, 352, 622, 623, 624, 625, 626, 628, 629, 630, 631, 634, 635, 638, 643, 789, 805, 807, 811, 813, 835, 839, 842, 852, 853, 856, 860, 867, 868, 869, 870, 885, 886, 887, 888, 904, 907, 908, 941, 943, 945, 947, 948, 949, 951, 954, 955, 956, 957, 958, 961, 999, 1000, 1051, 1075, 1085, 1148, 1156, 1163], "extern": [39, 304, 320, 343, 421, 470, 599, 800, 801, 930, 1016, 1086, 1178], "section": 39, "refer": [39, 159, 162, 205, 231, 234, 237, 244, 257, 260, 266, 267, 269, 272, 275, 279, 282, 287, 290, 296, 302, 314, 326, 330, 336, 340, 390, 428, 455, 597, 691, 694, 695, 697, 724, 725, 727, 736, 741, 743, 744, 773, 774, 832, 1063], "That": [39, 263, 266, 267, 269, 286, 313, 429, 487, 584, 591, 682, 685, 695, 724, 742, 743, 825, 860, 931, 941, 946, 947, 950, 1018, 1045, 1165], "we": [39, 42, 45, 53, 326, 464, 466, 815, 844, 1011, 1163], "anoth": [39, 250, 464, 983, 1015], "contain": [39, 142, 240, 260, 286, 289, 327, 560, 576, 577, 578, 617, 618, 632, 633, 636, 637, 638, 682, 686, 734, 813, 1013], "abov": 39, "footnot": 39, "sphinxish": 40, "run": [40, 148, 167, 480, 539, 602, 833, 922, 947, 948, 949, 1013, 1014, 1050, 1126, 1129, 1156], "seminar": 41, "clean": [41, 43, 45, 228, 288, 290, 291, 375, 465, 466], "2022": [41, 99, 100, 101, 102, 103, 104, 105, 240, 241, 242, 245, 248, 251, 253, 256, 259, 262, 265, 268, 269, 270, 271, 272, 274, 275, 367, 368, 369, 375], "04": [41, 105, 167, 240, 251, 253, 256, 289, 290, 291, 292, 293, 327, 357, 375, 1013], "agenda": [41, 198, 199, 201, 202, 203, 204, 209, 213, 214, 251, 256, 268, 277, 281, 284, 290, 294, 298, 300, 304, 306, 312, 316, 320, 322, 326, 328, 334, 338, 370, 371, 1178], "timelin": 41, "befor": [42, 64, 150, 183, 306, 309, 740, 1163], "formal": [42, 386], "unit": [42, 43, 45, 72, 194, 224, 262, 271, 281, 284, 339, 365, 525, 541, 602, 1111, 1161], "initi": [42, 231, 266, 267, 269, 326, 327, 388, 400, 449, 536, 567, 568, 569, 584, 591, 602, 639, 662, 682, 684, 685, 686, 687, 731, 753, 758, 819, 830, 842, 972, 974], "structur": [42, 43, 142, 155, 159, 182, 245, 266, 267, 269, 271, 293, 304, 315, 319, 320, 326, 418, 426, 433, 436, 442, 478, 525, 560, 731, 736, 756, 793, 821, 1017, 1030, 1156, 1163, 1178], "snippet": [42, 44, 50], "userdb": [42, 46, 49, 50, 55, 58, 223, 560, 674, 678], "bin": 42, "binaryfil": 42, "cpp": [42, 474, 525, 528, 700, 701, 702, 705, 706, 707, 708, 711, 712, 714, 715, 716, 717, 718], "extend": [42, 218, 602, 1039], "read": [42, 49, 50, 58, 221, 228, 348, 349, 359, 393, 454, 466, 489, 690, 732, 783, 841, 947, 951, 957, 959, 1073, 1079, 1080, 1112, 1113, 1114, 1115, 1128, 1148], "iter": [42, 184, 195, 200, 205, 210, 212, 218, 221, 226, 227, 231, 234, 237, 242, 244, 247, 250, 259, 260, 271, 272, 274, 275, 281, 284, 288, 292, 294, 295, 296, 300, 301, 313, 314, 318, 322, 323, 324, 328, 329, 330, 334, 335, 338, 339, 340, 349, 617, 618, 641, 682, 710, 717, 730, 731, 732, 776, 813, 1025, 1027, 1028, 1029, 1041, 1061, 1062, 1071], "bug": [42, 47, 53, 403, 568, 732], "faschingbau": [42, 166], "As": [42, 487, 504, 695, 734, 931, 965, 999, 1036, 1165], "last": [42, 403, 424, 425, 454, 607, 610, 746, 975, 997, 1163], "name": [42, 43, 130, 231, 234, 250, 397, 435, 593, 682, 825, 869, 887, 993, 1064, 1075], "wrap": [42, 194, 450, 682, 1021], "up": [42, 164, 194, 228, 271, 289, 290, 312, 362, 450, 682, 1036], "what": [42, 45, 49, 53, 169, 172, 237, 247, 412, 453, 464, 588, 657, 676, 682, 694, 695, 724, 745, 794, 815, 825, 841, 845, 860, 868, 886, 925, 938, 941, 942, 946, 947, 950, 954, 986, 999, 1011, 1015, 1023, 1027, 1031, 1074, 1144, 1147], "have": [42, 45, 464, 815, 1011, 1016], "messag": [43, 162, 163, 463, 469, 973, 992, 993, 1139, 1163], "book": [43, 45, 209, 259, 301, 378, 463, 1123], "survei": [43, 464], "comment": [43, 218, 242, 257, 282, 352, 1051, 1092], "format": [43, 50, 221, 227, 242, 302, 330, 1068, 1120], "object": [43, 117, 195, 200, 237, 244, 250, 254, 262, 263, 271, 274, 275, 287, 288, 290, 291, 294, 295, 300, 306, 307, 309, 312, 313, 316, 317, 322, 328, 334, 335, 338, 339, 345, 464, 482, 487, 567, 568, 569, 584, 586, 589, 592, 594, 598, 600, 655, 657, 671, 686, 689, 692, 695, 741, 993, 1016, 1017, 1022, 1030, 1036, 1038, 1040, 1074, 1141, 1145], "data": [43, 129, 130, 131, 132, 182, 184, 210, 219, 245, 259, 262, 271, 295, 312, 313, 314, 316, 336, 338, 398, 442, 445, 466, 590, 594, 617, 736, 860, 974, 1041, 1109, 1123, 1128, 1130], "handl": [43, 237, 240, 250, 262, 281, 284, 289, 290, 291, 312, 313, 316, 368, 476, 484, 606, 943, 1022, 1075], "boundari": [43, 1136], "class": [43, 195, 221, 240, 244, 247, 250, 263, 271, 287, 292, 306, 309, 340, 469, 487, 494, 495, 512, 513, 525, 528, 542, 561, 562, 563, 586, 593, 594, 599, 601, 602, 603, 604, 610, 625, 653, 654, 673, 682, 683, 685, 693, 694, 726, 740, 781, 1021, 1035, 1036, 1039, 1040, 1041, 1042], "switch": [44, 135, 140, 141, 142, 414, 446, 537], "googletest": [44, 190, 539, 1161], "git": [44, 78, 122, 142, 144, 165, 173, 177, 219, 223, 224, 278, 357, 362, 375, 798, 1123], "submodul": 44, "establish": [44, 45, 1014], "demo": [44, 133, 280, 281, 288, 470, 489, 726, 741, 856, 882, 946, 981, 985], "straightforward": [44, 195], "main": [44, 122, 431, 522, 523, 524, 762, 764, 766, 768, 1015], "convers": [44, 218, 234, 242, 244, 250, 254, 257, 275, 286, 292, 296, 302, 314, 318, 324, 330, 336, 352, 403, 430, 654, 662, 1054, 1068], "fix": [44, 165, 173, 266, 267, 269, 286, 349, 592, 710, 756, 815, 816, 828, 829], "shortcom": 44, "softwar": [45, 142, 191, 288, 464, 465, 931, 1004, 1007, 1180], "craft": [45, 288, 465], "09": [45, 142, 167, 222, 232, 240, 306, 307, 308, 309, 310, 311, 375], "00": 45, "15": [45, 205, 211, 248, 281, 284, 294, 295, 296, 334, 335, 336, 337, 357, 364, 369, 375, 852, 853], "introductori": [45, 278, 710, 964], "word": [45, 257, 424, 425, 454, 457, 607, 610, 737, 746, 885, 1090, 1107], "engin": [45, 259, 931], "disciplin": 45, "coffe": 45, "break": [45, 205, 242, 417, 1058, 1061], "project": [45, 110, 122, 134, 142, 166, 182, 223, 224, 238, 262, 267, 269, 271, 287, 289, 290, 291, 304, 306, 309, 312, 313, 316, 317, 320, 335, 339, 363, 364, 365, 369, 371, 464, 466, 525, 530, 539, 540, 602, 1110, 1150, 1156, 1178, 1181], "enter": [45, 64, 234, 617, 660, 695, 721, 730, 744, 828, 917, 985, 1015, 1023, 1035, 1036, 1131, 1136, 1141], "framework": 45, "lunch": 45, "cornerston": 45, "45": 45, "keep": [45, 167, 887], "small": 45, "23": [45, 203, 229, 245, 251, 269, 277, 287, 298, 299, 375], "59": 45, "extrem": 45, "program": [45, 50, 64, 94, 121, 133, 178, 194, 200, 221, 224, 240, 250, 262, 263, 271, 274, 278, 288, 290, 291, 294, 295, 296, 300, 306, 309, 312, 313, 316, 317, 322, 328, 330, 334, 335, 338, 339, 364, 375, 379, 380, 382, 418, 419, 420, 426, 452, 457, 462, 464, 469, 489, 522, 523, 524, 528, 584, 745, 762, 764, 766, 768, 786, 838, 870, 881, 882, 923, 925, 944, 959, 962, 963, 966, 978, 988, 996, 999, 1031, 1038, 1047, 1048, 1050, 1052, 1099, 1111, 1122, 1149, 1177, 1189, 1190, 1191, 1192, 1193], "session": 45, "find": [46, 147, 165, 183, 484, 543, 624, 642, 772, 913, 1165], "crash": [46, 165], "If": [46, 49, 588, 682, 697, 841, 955, 956, 1022, 1147], "Not": [46, 64, 66, 121, 125, 129, 130, 132, 135, 137, 141, 173, 254, 263, 550, 552, 555, 624, 660, 676, 682, 704, 719, 720, 732, 741, 815, 841, 881, 952, 955, 956, 957, 958, 978, 999, 1016, 1026, 1141, 1163], "found": [46, 552, 555, 624, 676, 1165], "state": [46, 163, 223, 710, 828, 830], "exist": [48, 66, 133, 159, 550, 952, 955, 956, 958, 1039, 1147], "ar": [48, 162, 163, 242, 244, 257, 307, 450, 466, 588, 594, 682, 710, 983, 993, 1021, 1030, 1042, 1146, 1165], "overwritten": 48, "done": [49, 122, 125, 129, 138, 139, 140, 327, 488, 651, 745], "twice": 49, "altern": [50, 691], "csv": [50, 130, 142, 234, 251, 259, 262, 271, 274, 294, 295, 296, 300, 301, 316, 322, 323, 329, 334, 335, 338, 339, 466, 1079, 1080, 1081, 1112, 1113, 1114, 1115, 1120, 1131], "frontend": 50, "featur": [51, 53, 64, 274, 290, 291, 292, 294, 295, 300, 312, 316, 327, 443, 466, 722, 1024, 1039, 1058, 1128, 1130], "search": [52, 622, 624, 625, 628, 638, 642, 662, 675, 676, 677, 914, 1016, 1069, 1151], "By": [52, 190, 254, 286, 390, 597, 641, 672, 675, 677, 699, 710, 721, 724, 725, 727, 732, 736, 744, 772, 773, 774, 1022, 1055, 1144, 1145, 1146, 1156], "index": [52, 205, 223, 242, 254, 302, 455, 708, 925, 1060, 1145, 1151, 1152, 1153], "backlog": 53, "need": [53, 349, 489, 704, 706, 983, 1131], "chang": [53, 122, 870, 881, 888], "Or": [53, 121, 466, 474, 475, 489, 693, 732, 945, 1036, 1141], "Will": 53, "refactor": [53, 56, 466, 542, 793, 794, 795, 833, 1113, 1115, 1120], "after": [53, 198, 229, 416, 844, 860, 1039], "backingstor": [54, 55, 57], "ha": [54, 55, 120, 707], "too": [54, 55, 460, 475, 682, 726, 749], "mani": [54, 55, 250, 454, 476, 732, 762, 764, 766, 768, 907, 987], "respons": [54, 55, 226, 492], "interfac": [54, 70, 87, 133, 138, 140, 202, 250, 289, 327, 344, 475, 479, 489, 492, 496, 504, 515, 522, 523, 538, 540, 570, 571, 572, 579, 580, 581, 656, 784, 856, 924, 925, 928, 930, 1035, 1132], "load": [57, 183, 441, 477, 803, 804, 929, 971, 1033], "constructor": [57, 200, 250, 266, 267, 269, 275, 326, 538, 568, 574, 585, 586, 587, 588, 589, 591, 592, 601, 602, 603, 604, 671, 686, 687, 688, 693, 695, 719, 739, 740, 1037], "bool": 58, "realli": [58, 682, 744], "glt": [59, 60], "2023": [59, 108, 109, 110, 111, 112, 125, 126, 129, 137, 141, 142, 269, 277, 278, 281, 282, 284, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 327, 328, 329, 330, 331, 332, 336, 375], "submiss": [59, 60, 63, 110], "pointless": [59, 60, 61, 63, 64, 1042], "blink": [59, 60, 61, 63, 64, 357], "With": [59, 61, 63, 64, 98, 119, 124, 192, 223, 270, 286, 288, 290, 312, 316, 375, 459, 467, 488, 503, 517, 539, 610, 692, 745, 758, 851, 852, 853, 914, 917, 922, 927, 953, 1016, 1064, 1144, 1146, 1157, 1158, 1161], "asyncio": [59, 61, 63, 64], "libgpiod": [59, 61, 62, 63, 64, 135], "raspberri": [59, 61, 63, 64, 173, 202, 343, 375, 805, 826, 922, 926, 929, 1004, 1008, 1010, 1012, 1187], "pi": [59, 61, 62, 63, 64, 173, 202, 375, 805, 825, 826, 922, 929, 1011, 1012, 1187], "biographi": [59, 60, 63], "abstract": [59, 60, 63, 271, 306, 309, 482, 497, 511, 861, 947, 948, 949, 1035], "2024": [60, 113, 114, 115, 116, 142, 334, 335, 336, 337, 338, 339, 340, 341, 375], "evolut": [60, 107], "fedora": [62, 165, 172, 798, 799, 800, 801, 1013], "prepar": [62, 115, 165, 183, 198, 199, 201, 202, 203, 204, 214, 223, 238, 267, 269, 277, 525, 602, 825], "tarbal": [62, 173], "On": [62, 64, 122, 223, 257, 259, 281, 285, 286, 290, 312, 316, 377, 539, 541, 586, 617, 618, 622, 628, 731, 756, 868, 947, 948, 949, 954, 959, 963, 986, 1013, 1078], "build": [62, 69, 163, 165, 173, 190, 191, 224, 242, 467, 469, 477, 525, 539, 601, 602, 603, 604, 793, 798, 799, 800, 801, 803, 825, 826, 929, 947, 948, 949, 959, 1000, 1001, 1004, 1007, 1011, 1012, 1013, 1015, 1016, 1017, 1071, 1165, 1183], "present": 64, "start": [64, 240, 266, 267, 269, 375, 489, 692, 704, 1016, 1139, 1163], "point": [64, 254, 257, 538, 584, 586, 594, 600, 602, 603, 604, 610, 692, 704, 756, 852, 853, 1011, 1054], "greet": [64, 313, 1085], "multipl": [64, 122, 200, 425, 466, 467, 791, 792, 793, 887, 941, 999, 1020, 1022, 1059, 1141, 1144, 1157], "background": [64, 167, 169, 583, 681], "thread": [64, 162, 164, 173, 290, 291, 366, 560, 682, 748, 749, 754, 967, 968, 969, 974, 976, 983, 986, 1031], "charact": [64, 379, 386, 389, 392, 399, 780, 781, 782, 783, 784, 785, 788, 789, 790, 1107], "base": [64, 173, 242, 250, 266, 267, 269, 271, 306, 309, 326, 487, 653, 654, 682, 695, 710, 730, 731, 1017, 1022, 1035], "gpio": [64, 87, 141, 142, 180, 202, 343, 344, 345, 346, 357, 805, 806, 929, 931, 963, 964, 965], "entir": [64, 286, 798, 800, 885, 941], "matrix": 64, "off": [64, 223], "bring": [64, 144, 362, 656], "togeth": [64, 472, 656, 887], "modular": [64, 240, 420], "bit": [64, 295, 329, 406, 870, 881, 883, 1048, 1050], "row": [64, 286, 1140, 1144, 1145, 1146], "coroutin": [64, 269, 709, 710], "enough": [64, 584, 660], "sequenc": [64, 231, 234, 242, 274, 281, 284, 294, 295, 300, 301, 322, 323, 328, 329, 334, 335, 338, 339, 340, 399, 558, 622, 628, 1026, 1059, 1067], "loop": [64, 182, 184, 195, 205, 210, 242, 244, 254, 257, 260, 266, 267, 269, 288, 290, 312, 316, 324, 326, 340, 382, 415, 416, 454, 526, 730, 966, 1027, 1058, 1061], "forev": 64, "strip": [64, 227, 244, 250, 349], "down": [64, 475], "factori": [64, 482, 497, 511, 541], "turn": [64, 1026], "Into": [64, 122, 284, 306, 309, 312, 393, 489, 526, 543, 619, 673, 682, 726, 1113, 1115, 1120], "anti": [64, 754, 756], "clumsi": [64, 756], "decor": [64, 221, 271, 281, 284, 288, 290, 291, 306, 312, 313, 316, 487, 501, 515, 1021], "wrapper": [64, 132], "final": [64, 250, 266, 267, 269, 326, 721, 860, 864, 1022], "playground": 64, "cycl": [64, 125, 129, 130, 132, 135, 137, 141, 968], "fast": [64, 200], "forward": [64, 269, 391, 455, 744, 940], "ani": [64, 286, 483, 538, 978], "cancel": 64, "goodby": 64, "hochk\u00f6nig": 65, "k\u00f6nigsjodl": 65, "klettersteig": 65, "tour": [65, 271, 682], "werfen": 65, "ostpreussenh\u00fctt": 65, "matrashau": 65, "blog": [66, 159], "articl": [66, 169, 170, 172, 173], "yet": [66, 250], "revisit": [66, 382, 450, 693], "post": [66, 174, 183, 992], "pending_xref": 67, "cmake": [69, 190, 191, 223, 278, 304, 305, 320, 321, 375, 467, 469, 471, 475, 525, 539, 959, 1000, 1001, 1014, 1165, 1166, 1178], "oo": [71, 109, 142, 195, 221, 224, 240, 247, 250, 259, 262, 266, 267, 269, 271, 281, 284, 287, 289, 306, 309, 313, 317, 326, 327, 329, 366, 492, 529, 538, 560, 1031], "graph": [73, 74, 75, 458, 460, 665, 778, 826, 1081, 1082, 1086, 1095, 1109, 1116], "embed": [74, 75, 79, 97, 98, 108, 109, 113, 123, 124, 143, 180, 189, 278, 287, 289, 327, 332, 356, 358, 359, 371, 373, 375, 763, 1180], "comput": [74, 75, 79, 97, 108, 109, 113, 123, 143, 354, 356, 358, 359, 371, 373, 453, 454, 538, 852, 853, 861], "current": [74, 75, 487, 758, 776, 888], "depend": [74, 75, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 191, 304, 306, 320, 343, 344, 345, 346, 348, 470, 471, 473, 474, 478, 488, 492, 502, 525, 530, 547, 549, 560, 568, 627, 633, 637, 645, 647, 650, 655, 663, 664, 666, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 684, 691, 698, 709, 733, 738, 763, 802, 803, 852, 853, 854, 858, 872, 873, 874, 893, 898, 899, 902, 935, 937, 944, 950, 952, 960, 962, 964, 976, 979, 1001, 1003, 1005, 1006, 1009, 1010, 1016, 1031, 1033, 1079, 1080, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1117, 1118, 1119, 1120, 1125, 1129, 1133, 1136, 1139, 1143, 1155, 1161, 1178], "ex": [76, 77, 83, 84, 85, 86, 92, 93], "race": [76, 77, 89, 750, 815, 816, 823, 969, 970, 1033], "condit": [76, 77, 89, 408, 416, 425, 750, 754, 815, 816, 823, 969, 970, 972, 973, 1033], "avoid": [77, 89], "goal": [77, 83, 84, 85, 86, 88, 89, 90, 92, 147, 149, 150, 152, 183, 287, 289, 1176, 1179], "outcom": [77, 83, 84, 85, 86, 201, 309, 359], "introduct": [78, 81, 182, 266, 267, 269, 281, 284, 288, 289, 299, 304, 305, 320, 321, 326, 327, 360, 375, 378, 395, 453, 457, 471, 488, 496, 583, 680, 686, 730, 739, 748, 805, 825, 859, 1022, 1156, 1176, 1178, 1189], "2019": [79, 182, 185, 375], "overview": [79, 142, 178, 278, 290, 291, 314, 326, 372, 376, 692, 699, 710, 734, 740, 754, 756, 762, 764, 766, 767, 768, 769, 776, 796, 850, 861, 887, 918, 929, 930, 931, 932, 967, 999, 1021, 1125, 1129], "knowledg": [79, 1178], "transfer": [79, 742], "unix": [81, 111, 112, 186, 362, 378, 440, 450, 486, 1050], "hardwar": [82, 85, 86, 142, 150, 153, 278, 440, 926, 928, 929, 931, 964, 1180], "manag": [82, 164, 212, 242, 262, 271, 281, 284, 287, 288, 290, 306, 309, 312, 313, 316, 339, 340, 364, 365, 369, 464, 592, 652, 740, 835, 836, 1001, 1020, 1039, 1150, 1180], "averag": [83, 84, 92, 486, 514, 762, 764, 766, 768], "sensor": [83, 84, 86, 92, 93, 95, 120, 138, 139, 289, 313, 326, 482, 483, 487, 489, 494, 512, 514, 515, 521, 525, 527, 528, 529, 540, 541, 542, 549, 740, 762, 764, 766, 768, 929, 931, 959, 1109, 1111], "parallel": 84, "led": [85, 137, 357], "temperatur": [85, 86, 93, 137, 525, 528, 929, 931, 959], "displai": [85, 92, 119, 127, 128, 133, 137], "sysf": [87, 141, 142, 202, 343, 357, 930, 964, 965], "gpiod": 87, "multithread": [88, 180, 240, 266, 267, 269, 278, 312, 313, 316, 326, 365, 372, 754, 755, 996, 1031, 1032, 1034, 1192], "semaphor": [89, 162, 756, 992, 993], "mutex": [89, 162, 441, 752, 756, 815, 816, 817, 818, 830, 831, 970, 971, 986, 1033], "commun": [90, 259, 506, 754, 972, 993], "wait": [90, 153, 754, 756, 841, 842, 843, 972, 992], "someth": [90, 195, 584, 682, 756, 841, 842, 843, 1061], "simpl": [94, 200, 480, 584, 594, 609, 660, 672, 828, 830, 856, 870, 999, 1016, 1021, 1041, 1071, 1148, 1156], "2020": [97, 167, 187, 189, 194, 195, 197, 198, 199, 201, 203, 204, 209, 375], "ss2022": [98, 106, 852, 853], "block": [98, 124, 411, 607, 946, 947, 948, 949, 950, 997], "cross": [98, 109, 124, 173, 278, 805, 825, 1000, 1002, 1003, 1004, 1009, 1011, 1012, 1014, 1171], "develop": [98, 109, 124, 125, 129, 130, 132, 135, 137, 141, 142, 194, 209, 223, 226, 248, 259, 262, 278, 281, 283, 284, 287, 288, 289, 290, 291, 312, 313, 316, 332, 360, 375, 802, 1002, 1003, 1009, 1179, 1180, 1181, 1194], "03": [99, 100, 101, 102, 103, 104, 142, 211, 214, 219, 238, 240, 248, 251, 268, 281, 282, 284, 287, 288, 304, 357, 375, 682, 683], "08": [99, 142, 229, 232, 240, 253, 375], "homework": [99, 100, 101, 102, 105], "until": 101, "21": [101, 102, 251, 350, 357, 375], "exercis": [101, 110, 155, 177, 182, 183, 195, 198, 199, 203, 211, 212, 214, 223, 224, 234, 240, 257, 262, 266, 267, 269, 271, 274, 278, 282, 287, 289, 290, 294, 295, 300, 301, 302, 306, 309, 312, 313, 316, 322, 323, 329, 334, 335, 338, 339, 347, 349, 357, 363, 381, 383, 385, 387, 389, 391, 393, 405, 429, 438, 482, 483, 484, 486, 487, 488, 490, 491, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 558, 559, 560, 590, 601, 602, 603, 604, 605, 646, 647, 648, 655, 663, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 744, 772, 773, 774, 775, 847, 854, 865, 871, 874, 875, 877, 879, 889, 890, 891, 892, 893, 894, 895, 896, 897, 899, 900, 901, 902, 903, 912, 933, 934, 935, 936, 952, 953, 959, 993, 997, 1004, 1006, 1007, 1008, 1009, 1038, 1079, 1080, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120], "creat": [101, 122, 144, 156, 161, 165, 168, 190, 191, 539, 682, 749, 845, 851, 852, 853, 870, 875, 877, 879, 887, 891, 893, 904, 936, 953, 955, 956, 958, 992, 993, 1011, 1013, 1018, 1110, 1128, 1130], "copi": [101, 195, 244, 279, 326, 405, 543, 577, 585, 592, 597, 612, 618, 619, 623, 630, 682, 693, 695, 720, 725, 727, 731, 736, 740, 741, 772, 839, 887, 889, 890, 893, 933, 934, 941, 952, 1063, 1141], "move": [101, 266, 267, 269, 287, 326, 327, 538, 584, 600, 691, 692, 693, 694, 695, 740, 742, 773, 805, 885, 892, 893, 908], "remov": [101, 260, 475, 555, 556, 638, 641, 772, 893, 896, 904, 993], "l": [101, 902, 907], "command": [101, 484, 499, 513, 803, 870, 881, 885, 902, 907, 922, 1013], "22": [103, 201, 208, 213, 300, 301, 302, 316, 317, 318, 319, 375], "24": [103, 134, 142, 208, 240, 270, 290, 291, 292, 293, 312, 313, 315, 316, 317, 318, 319, 375], "ku": 103, "28": [104, 182, 199, 240, 288, 363, 375], "01": [105, 110, 113, 142, 232, 238, 240, 241, 242, 271, 277, 322, 323, 324, 334, 335, 336, 337, 338, 339, 340, 341, 357, 367, 368, 375, 852, 853], "ws2022": [107, 108, 109], "plan": [107, 142, 251, 360], "fh": [108, 109, 122, 143, 525, 526, 527, 528, 529, 601, 602, 603, 604, 664, 858, 872, 873, 898, 1005], "joanneum": [108, 109, 143], "question": [108, 109, 114, 116, 117, 118, 150, 221, 372, 466, 480, 525, 664, 858, 872, 873, 876, 878, 898, 984, 1005, 1034], "inherit": [108, 181, 221, 250, 271, 306, 309, 496, 570, 571, 572, 653, 654, 655, 658, 682, 954, 1031, 1039], "memori": [108, 164, 186, 212, 340, 430, 433, 437, 439, 441, 448, 455, 554, 564, 565, 566, 592, 651, 652, 796, 809, 810, 811, 812, 838, 839, 840, 858, 862, 992, 993, 1180, 1190], "leak": [108, 554, 565, 592, 742], "ye": [109, 1136], "No": [109, 163, 202, 504, 682, 699, 745, 1022, 1147, 1163], "lab": 110, "exam": [110, 111, 112, 113, 114, 115, 124, 142, 222, 235, 237, 357, 372, 538, 852, 853, 854, 984, 1034], "17": [110, 142, 234, 235, 237, 241, 242, 248, 265, 272, 278, 294, 295, 296, 334, 335, 336, 337, 375, 599], "ss2023": [111, 112, 124], "06": [111, 112, 222, 223, 240, 269, 300, 301, 302, 327, 357, 375], "30": [111, 112, 180, 189, 199, 204, 251, 375], "handout": 111, "concept": [111, 112, 269, 299, 326, 698, 699, 702, 703, 704, 707, 708, 734, 859, 1130], "toolchain": [111, 112, 173, 224, 304, 320, 825, 999, 1000, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1178], "solv": [112, 971, 1130, 1152, 1159], "26": [113, 240, 270, 277, 290, 291, 292, 293, 312, 313, 315, 357, 375], "ws2023": [114, 115, 134, 142], "02": [114, 142, 240, 245, 259, 278, 369, 375, 864], "sampl": [114, 142, 237, 745, 827, 882, 1080, 1101, 1122, 1156, 1181], "why": [114, 118, 164, 165, 173, 242, 464, 492, 584, 587, 591, 592, 739, 745, 770, 798, 844, 869, 923, 930, 938, 942, 967, 1020, 1065], "const": [117, 448, 557, 574, 594, 595, 597, 669, 670, 682, 697, 731, 736], "paramet": [118, 195, 242, 244, 288, 330, 353, 392, 428, 431, 434, 448, 466, 470, 695, 699, 734, 745, 825, 955, 1000, 1065, 1135], "pass": [118, 357, 597], "which": [118, 492, 958, 999], "One": [118, 221, 260, 286, 349, 406, 425, 464, 466, 599, 732, 745, 838, 923, 941, 974, 999, 1015], "better": [118, 162, 381, 466, 835, 1045, 1136], "question2": 118, "solid": [119, 120, 163, 464], "hysteresi": 119, "id": [120, 263, 291, 318, 862, 882, 942, 968, 980, 1171], "Be": [121, 224, 483, 487, 488, 592, 597, 651, 743, 748], "virtual": [121, 186, 259, 280, 570, 571, 572, 657, 659, 660, 762, 763, 764, 766, 767, 768, 769, 770, 796, 858, 862, 924, 992, 1110, 1158, 1159, 1160, 1190], "version": [121, 173, 466, 469, 472, 682, 710, 955], "our": [122, 190, 931], "ece21": 122, "fork": [122, 142, 832], "pull": [122, 142, 489], "request": [122, 142, 466, 784, 786, 805, 807, 965], "upstream": [122, 142, 144], "sync": [122, 796], "onli": [122, 260, 286, 430, 697, 745, 798, 1092], "onc": [122, 357], "updat": [122, 142, 167], "It": [122, 165, 194, 286, 361, 430, 656, 881, 942, 955, 956, 999], "Its": [122, 1036], "fetch": 122, "your": [122, 186, 279, 280, 445, 704, 871], "clone": [122, 173, 177, 190, 539], "merg": 122, "push": [122, 475], "finish": [124, 149, 158, 224, 844], "boil": [125, 126, 127, 128, 134, 142], "pot": [125, 126, 127, 128, 134, 142], "begin": [125, 332, 378, 732], "standup": [125, 126, 127, 128, 129, 133, 137, 141], "record": [125, 126, 127, 128, 129, 133, 137, 141, 205, 1117, 1119], "20": [125, 129, 137, 141, 142, 251, 265, 269, 287, 289, 300, 301, 302, 326, 328, 329, 330, 331, 349, 357, 375, 1013], "requir": [125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 137, 141, 228, 259, 306, 309, 359, 470, 482, 503, 506, 525, 526, 527, 531, 532, 533, 534, 535, 536, 537, 704, 952, 959, 1079, 1080, 1101, 1110, 1112, 1113, 1114, 1115, 1117, 1118, 1119, 1120], "futur": [125, 129, 130, 132, 135, 137, 141, 366, 756], "part": [125, 129, 130, 132, 135, 137, 141, 251, 1165], "Of": [125, 129, 130, 132, 135, 137, 141, 286, 295, 306, 309, 329, 467, 538, 584, 616, 617, 657, 695, 727, 732, 742, 744, 754, 772, 773, 774, 852, 853, 860, 952, 963, 987, 1001, 1022, 1025, 1045, 1141, 1147], "statu": [127, 932, 968, 978], "report": 127, "full": [128, 226], "iot": 128, "logger": [129, 130, 131, 132, 489], "sink": [130, 132, 142, 313], "column": [130, 286, 1141, 1142, 1144, 1145, 1146, 1147], "configur": [130, 166, 168, 173, 468, 886, 924, 929, 931, 966], "mqtt": [132, 136, 142, 250, 313, 316, 1117, 1139], "mosquitto": 132, "infrastructur": 133, "percentagedisplai": 133, "composit": [133, 486, 496, 500, 514, 776], "breadboard": 133, "acrobat": 133, "group": [134, 223, 224, 238, 271, 278, 290, 291, 306, 309, 312, 313, 316, 317, 335, 363, 395, 410, 419, 426, 432, 436, 439, 443, 452, 456, 461, 462, 582, 590, 605, 608, 611, 652, 661, 680, 722, 723, 747, 755, 759, 771, 775, 777, 862, 870, 879, 919, 927, 928, 982], "task": [134, 142, 363, 983], "datalogg": [134, 142], "peripher": [134, 142], "client": [134, 226, 520, 1139], "subscrib": [136, 1139], "via": [137, 142, 170, 171, 354, 931], "pwm": [137, 930], "control": [137, 259, 274, 281, 284, 294, 295, 300, 301, 322, 323, 328, 329, 334, 335, 338, 339, 489, 710, 922, 930], "onewir": [139, 525, 541, 542, 931, 959], "05": [142, 219, 222, 253, 259, 262, 265, 268, 294, 295, 296, 298, 299, 349, 350, 357, 375], "vo": 142, "recap": [142, 210, 223, 224, 238, 271, 291, 306, 309, 313, 314, 577, 739, 999, 1025], "polymorph": [142, 224, 327, 531, 532, 533, 534, 535, 536, 537, 540, 657, 746, 765], "collabor": 142, "necessarili": 142, "first": [142, 195, 224, 379, 529, 745, 786, 787, 821, 1158], "round": [142, 507, 521], "organiz": 142, "design": [142, 270, 288, 290, 291, 306, 309, 327, 375, 392, 449, 464, 488, 492, 502, 655, 1179], "At": 142, "larg": 142, "07": [142, 224, 240, 271, 304, 305, 357, 361, 375], "renam": [142, 908], "relev": 142, "graz": [143, 185, 187, 194, 232, 375], "branch": [144, 412], "track": [144, 1015], "submit": [144, 844, 845], "appli": [144, 165, 1147], "patch": [144, 165], "packag": [146, 149, 167, 173, 190, 271, 288, 306, 312, 350, 825, 1004, 1007, 1030, 1078, 1150, 1151, 1152, 1153, 1154, 1158], "pypi": [146, 219, 259, 1078, 1123, 1152, 1154], "audio": [147, 151], "chip": [147, 930], "bringup": [147, 150, 931], "get": [148, 161, 191, 242, 327, 756, 813, 838, 963], "debian": [148, 149], "kernel": [148, 149, 150, 154, 163, 165, 209, 375, 460, 789, 798, 799, 800, 801, 802, 803, 817, 819, 825, 826, 858, 861, 926, 929, 1181], "config": [148, 825], "within": 148, "qemu": 148, "extract": [148, 154, 221, 526, 1113, 1115, 1120, 1128], "boot": [148, 161, 172, 375, 861], "etc": [149, 210, 218, 221, 250, 260, 263, 296, 901, 929, 957, 1051, 1101], "yocto": [150, 154, 920], "everyth": [150, 178, 237, 472, 856, 867, 946], "like": [150, 326, 584, 978], "i2": 151, "kontron": 151, "smarc": 151, "modul": [151, 195, 219, 221, 259, 260, 272, 288, 295, 312, 313, 350, 357, 460, 475, 539, 728, 793, 798, 800, 801, 803, 804, 819, 825, 930, 1030, 1120, 1123, 1131, 1157, 1165], "dirti": 152, "upgrad": 152, "path": [152, 173, 221, 231, 237, 244, 330, 339, 340, 478, 776, 857, 909, 1011, 1016, 1110, 1165], "step": [152, 484, 487, 489, 525, 617, 710, 772, 773, 1000, 1001, 1015, 1035, 1060], "intel": 154, "bsp": 154, "improv": 155, "beginn": [155, 219, 231, 254, 259, 271, 295, 1122, 1123], "split": [155, 181, 244, 250, 324, 349, 1069, 1128], "openshot": 156, "seo": [157, 158], "sitemap": 157, "meta": [157, 158], "stack": [158, 164, 205, 226, 437, 695], "hang": 158, "dbu": [158, 489], "stuff": [158, 327, 357, 450, 861, 895], "extens": 159, "rest": [159, 221, 316, 327, 951], "style": [159, 413, 464, 584, 686, 740, 758, 1068], "convert": [159, 182, 286, 1041, 1119], "rst": 159, "exampl": [159, 244, 250, 254, 353, 386, 390, 425, 427, 447, 450, 486, 525, 610, 635, 686, 687, 705, 706, 707, 708, 734, 743, 849, 867, 869, 870, 918, 942, 946, 951, 954, 972, 997, 1020, 1035, 1055, 1065, 1068, 1069, 1070, 1071, 1092, 1134, 1142, 1147, 1156, 1157], "add": [159, 280, 476, 480, 538, 786, 833, 844, 996, 1039, 1140], "miss": [159, 271, 686, 955], "past": [159, 425], "learn": [160, 281, 359, 1124, 1130], "beagleboard": 161, "how": [161, 164, 172, 194, 224, 242, 394, 433, 458, 459, 460, 594, 732, 742, 868, 881, 884, 1027, 1130], "repair": 161, "nand": 161, "also": [161, 431, 856, 861, 862, 867, 868, 947, 948, 949, 951, 978, 981, 985, 987, 1066, 1130], "40w": 161, "x": [161, 224, 574], "loader": 161, "u": [161, 942], "bootabl": 161, "mmc": 161, "sd": [161, 202], "card": [161, 202, 280, 853], "port": [162, 940], "There": [162, 242, 464, 592, 748, 841, 931, 941, 946, 957, 958], "": [162, 177, 202, 406, 430, 464, 584, 676, 682, 685, 745, 789, 794, 813, 825, 841, 870, 886, 938, 986, 999, 1027, 1031, 1074], "alwai": [162, 242, 262, 720, 956], "wai": [162, 221, 242, 250, 454, 987, 1031, 1050], "process": [162, 164, 183, 278, 299, 823, 824, 857, 858, 862, 863, 978, 979, 980, 983, 987], "signal": [162, 186, 440, 754, 972, 995, 996, 997, 998], "aren": 162, "t": [162, 219, 732, 1123], "queue": [162, 205, 754, 842, 973, 992, 993], "timer": [162, 833, 835, 836, 949, 983], "poll": [162, 754, 756], "event": [162, 786, 805, 815, 833, 834, 838, 966, 972, 988, 990], "dispatch": [162, 767, 768, 769], "interrupt": [162, 805, 806, 807, 808, 821, 830, 966, 983], "realtim": [162, 164, 368, 372, 375, 817, 985, 986, 1171, 1180], "save": [163, 742], "disk": [163, 202, 856], "life": [163, 743, 968], "gentoo": [163, 825], "rant": [163, 183, 469, 1001], "swap": [163, 257, 429, 745, 868, 1088], "tmpf": 163, "instanc": [163, 221, 247, 250], "syslog": 163, "var": 163, "mountpoint": 163, "logrot": 163, "o": [163, 221, 231, 237, 244, 245, 250, 257, 259, 260, 292, 296, 299, 301, 330, 336, 339, 340, 349, 386, 809, 866, 867, 868, 891, 904, 946, 947, 948, 949, 950, 951, 960, 961, 981, 1073], "schedul": [163, 299, 367, 368, 372, 858, 862, 968, 981, 982, 984, 985, 986], "ram": 163, "thing": [163, 224, 245, 266, 267, 269], "left": [163, 406, 597], "p": 164, "suck": [164, 805], "count": [164, 741, 832, 868, 1107], "consumpt": 164, "conclus": [164, 830, 922, 930], "pthread": 164, "experi": 164, "100": 164, "default": [164, 195, 242, 244, 266, 267, 269, 326, 353, 538, 586, 588, 589, 601, 602, 603, 604, 671, 719, 740, 758, 884, 997, 1065, 1145], "eat": 164, "limit": [164, 1026], "than": [164, 545, 1042], "my": [164, 167, 263, 379, 380, 466, 793, 864, 881], "could": [164, 743], "take": [164, 431, 742, 1045], "doe": [164, 610, 868, 881, 884, 952, 955, 956], "differ": [164, 195, 430, 615, 617, 887, 941], "rpm": [165, 167, 192, 798], "prerequisit": [165, 173, 191, 290, 312, 316, 359, 800, 1078], "rpmbuild": 165, "directori": [165, 190, 191, 340, 364, 466, 467, 539, 776, 852, 853, 870, 875, 876, 877, 878, 887, 888, 889, 896, 903, 904, 907, 908, 913, 941, 952, 1000, 1001, 1020, 1156], "download": [165, 211, 213, 357, 362, 376, 542, 1011, 1014, 1170], "For": [165, 167, 173, 251, 254, 278, 281, 283, 284, 287, 289, 332, 375, 387, 512, 586, 597, 682, 710, 731, 756, 860, 946, 1011, 1012, 1013, 1023, 1041, 1110, 1179], "domain": [166, 186, 284, 757], "subdomain": 166, "www": 166, "apex": 166, "microsoft": 167, "team": 167, "screen": [167, 917], "share": [167, 472, 477, 737, 741, 744, 773, 852, 853, 879, 992, 993, 1015, 1016, 1190], "x11": 167, "reviv": 167, "meh": 167, "annoy": 167, "re": [167, 1022], "regist": [167, 454], "itself": 167, "autostart": 167, "browser": [167, 226], "recommend": [167, 198, 359, 1157, 1178], "deploi": 168, "gener": [168, 172, 182, 191, 195, 200, 227, 234, 237, 242, 244, 250, 269, 271, 275, 281, 284, 288, 290, 291, 295, 302, 304, 312, 313, 314, 316, 320, 324, 330, 415, 544, 585, 588, 592, 710, 711, 713, 714, 719, 778, 931, 938, 965, 1000, 1001, 1025, 1026, 1027, 1028, 1029, 1054, 1093, 1106, 1178], "public": [168, 221, 479, 586, 852, 853, 877, 878, 938], "repo": [168, 190], "jfasch": [168, 882], "home": [168, 857, 887, 903, 942], "time": [168, 177, 181, 286, 470, 757, 833, 834, 862, 974, 1085], "deploy": [168, 304, 320, 472, 825, 1178], "bigbluebutton": 169, "onlin": [169, 178, 1170], "tl": 169, "dr": 169, "host": [169, 214, 825, 1013], "check": [169, 480, 504, 870, 931, 972, 1008, 1069, 1089], "els": [169, 237, 244, 250, 260, 290, 312, 316, 330, 340, 388, 412, 413, 414, 591, 606, 908, 925, 938, 1022, 1058, 1061], "traunstein": 170, "zierlersteig": 170, "kaltenbachwildni": 170, "anstieg": 170, "auf": [170, 211], "zierlerberg": 170, "rinn": 170, "abstieg": 170, "grintovec": 171, "plan\u0161arsko": 171, "jezero": 171, "\u010de\u0161ka": 171, "ko\u010da": 171, "anreis": 171, "hinauf": 171, "runter": 171, "zusammenfassung": 171, "brick": 172, "1399": 172, "dell": 172, "xp": 172, "happen": 172, "virtualbox": 172, "secur": [172, 202, 278, 299, 354, 937, 941], "enrol": 172, "machin": [172, 202, 223, 281, 354, 933, 934, 959, 1124, 1130], "owner": [172, 870], "mok": 172, "pair": [172, 682, 936, 938], "stage": 172, "reboot": 172, "diagnost": [172, 929], "crosstool": [173, 1012, 1013], "ng": [173, 1012, 1013], "prebuilt": [173, 1147], "repositori": [173, 177, 371, 539, 549], "releas": [173, 469, 807, 817, 1033], "glibc": 173, "gcc": [173, 441, 454, 999], "simplest": [173, 710, 715, 753, 1019, 1042, 1157, 1163], "stdio": 173, "h": [173, 713, 917], "iostream": 173, "distribut": [173, 1078], "afterword": [173, 690], "schulung": [175, 195], "entwicklung": 175, "beratung": 175, "richtlinien": 176, "ver\u00f6ffentlichung": 176, "kursmateri": 176, "window": [177, 214, 231, 287, 289, 377, 864], "workflow": [177, 224], "conflict": [177, 971, 1033], "individu": 178, "languag": [178, 194, 224, 240, 266, 267, 269, 274, 294, 295, 300, 326, 327, 375, 443, 462, 722, 978, 1024, 1046, 1048], "qualivis": [179, 375], "z\u00fcrich": [179, 375], "2013": [179, 375, 1171], "fragen": [179, 212], "antworten": 179, "kursnotizen": 180, "2015": [180, 375], "userspac": [180, 784, 786, 838, 839, 840, 929, 930, 966], "can": [180, 201, 224, 259, 431, 483, 487, 538, 597, 682, 742, 923, 924, 925, 927], "bu": [180, 201, 489, 924, 927, 931], "driver": [180, 209, 280, 375, 802, 803, 821, 929, 1181], "beispiel": [180, 195, 254, 913], "heizungssteuerung": 180, "k\u00f6nnen": [181, 205, 218], "viel": 181, "mutabl": [181, 184, 195, 205, 212, 218, 231, 234, 242, 244, 247, 250, 257, 260, 263, 275, 282, 292, 296, 302, 314, 318, 324, 336, 340, 1063, 1065], "immut": [181, 184, 195, 212, 218, 231, 242, 247, 250, 257, 263, 272, 279, 282, 296, 324, 330, 595, 1063], "kann": [181, 226], "man": [181, 226, 885], "nicht": [181, 195, 205], "oft": 181, "genug": 181, "wiederholen": 181, "hart": 181, "indizieren": 181, "weich": 181, "nettfragen": 181, "shortcut": [181, 1041, 1071], "objektorientiert": 181, "date": [181, 227, 286, 362], "delta": 181, "datetim": [181, 200, 221, 227, 282], "bissl": 181, "potschert": [181, 205], "schreiben": [181, 205], "scho": 181, "formen": 181, "represent": [181, 1044], "__str__": [181, 1039, 1044], "subprocess": [181, 260], "enumer": [181, 205, 210, 212, 218, 221, 242, 250, 257, 275, 292, 314, 324, 336], "zip": [181, 221, 324], "comprehens": [181, 205, 227, 234, 237, 242, 244, 250, 254, 275, 281, 282, 284, 314, 324, 330, 336, 1019, 1025, 1070], "exec": [181, 247, 263, 271, 275, 302, 324, 1023], "eval": [181, 182, 218, 247, 257, 275, 302, 314], "umgebend": 181, "context": [181, 242, 281, 284, 288, 823, 824, 844, 1020, 1023], "eigen": 181, "json": [181, 203, 210, 226, 227, 237, 254, 257, 263, 271, 272, 307, 310, 1119], "individualtrain": [182, 197, 375], "tage": [182, 375], "beginnend": [182, 375], "inhalt": [182, 185, 996, 1173], "51": 182, "58": 182, "94": [182, 195], "121": 182, "famou": [182, 457], "overload": [182, 240, 250, 271, 306, 318, 560, 586, 593, 600, 740, 1042, 1044], "getter": [182, 538, 594], "setter": 182, "listcomprehens": 182, "express": [182, 195, 210, 227, 234, 260, 263, 275, 324, 330, 408, 410, 486, 504, 518, 689, 914, 1025, 1083, 1142], "global": [182, 195, 205, 263, 313, 394, 400, 421, 423, 437, 474, 567, 568, 569, 598, 599, 600, 943, 1018, 1064], "scope": [182, 205, 313, 753, 756, 1018, 1064], "variabl": [182, 205, 218, 221, 231, 234, 242, 250, 257, 260, 272, 292, 296, 318, 324, 330, 336, 340, 352, 380, 394, 397, 400, 421, 423, 429, 448, 504, 568, 595, 599, 725, 754, 857, 943, 972, 973, 980, 1053, 1064, 1088], "closur": [182, 205, 271, 288, 290, 291, 306, 312, 316, 724, 1018, 1020], "between": [182, 603, 1128], "walkthrough": 183, "reduc": [183, 405], "eight": 183, "color": 183, "pil": 183, "numpi": [183, 185, 212, 219, 259, 262, 281, 284, 295, 301, 313, 318, 334, 375, 1123, 1128], "cluster": 183, "excurs": [183, 259, 724], "matplotlib": [183, 212, 231, 263, 301, 318, 324, 1077, 1128], "now": [183, 195], "come": [183, 219, 472, 666, 999, 1123], "let": 183, "kmean": 183, "result": [183, 458, 1135], "properti": [183, 221, 250, 478, 479, 1043], "center": 183, "restor": 183, "alpha": 183, "back": [183, 635, 1119], "rgba": 183, "random": [184, 221, 254, 259, 515, 528, 536, 1143], "type": [184, 210, 234, 237, 247, 250, 257, 266, 267, 269, 271, 272, 286, 288, 306, 309, 310, 314, 326, 336, 353, 396, 398, 399, 403, 410, 435, 445, 450, 469, 479, 588, 617, 638, 639, 682, 683, 686, 697, 699, 736, 758, 763, 765, 766, 796, 805, 900, 907, 970, 1020, 1022, 1035, 1042, 1065, 1130], "except": [184, 221, 237, 240, 247, 250, 262, 263, 271, 281, 284, 288, 289, 306, 309, 322, 328, 334, 338, 368, 560, 607, 608, 676, 725, 732, 756, 1022], "demonstr": 184, "dict": [184, 234, 242, 244, 250, 257, 330, 336, 1041], "access": [184, 223, 388, 441, 442, 586, 594, 602, 668, 758, 762, 764, 766, 767, 768, 769, 776, 809, 838, 839, 840, 1036, 1043, 1070, 1071], "indic": [184, 212], "slice": [184, 195, 210, 221, 244, 250, 254, 275, 296, 302, 862, 1060, 1144, 1146], "protocol": [184, 195, 210, 231, 234, 237, 242, 244, 247, 250, 260, 275, 288, 292, 296, 314, 318, 324, 330, 710, 922, 986, 1027, 1029], "standardthemen": 185, "hauptthema": 185, "numerik": 185, "lesen": [185, 205], "mat": 185, "l\u00f6sen": 185, "uni": 185, "\u00fcbung": [185, 188, 205], "propos": 186, "posix": [186, 754, 967, 976, 989, 991, 992, 993, 994], "ipc": [186, 187, 375, 989, 991, 992, 993, 994, 1190], "socket": [186, 925, 948], "applic": [186, 983], "compani": 186, "thought": 186, "handgestrickt": 188, "um": 188, "fallen": 188, "lustvol": 188, "erleiden": 188, "programmier": 189, "baden": [189, 375], "w\u00fcrttemberg": [189, 375], "kursinform": 189, "kursaufbau": 189, "kursverlauf": [189, 197], "hand": 190, "privat": [190, 221, 250, 479, 586, 658, 720, 852, 853, 875, 876], "makefil": [191, 539, 793, 803, 1000, 1001, 1015], "argh": 192, "visual": [192, 219, 235, 458, 473, 1123, 1149, 1158], "studio": [192, 219, 235, 1123, 1149, 1158], "flatpak": 192, "issu": [192, 1018], "m": 192, "bei": [194, 205, 375], "firma": [194, 375], "environ": [194, 259, 267, 269, 278, 280, 287, 288, 289, 364, 857, 980, 1047, 1110, 1158, 1159, 1160, 1168], "driven": [194, 223, 248, 259, 262, 290, 291, 312, 313, 316, 375, 988, 1194], "dai": [194, 198, 199, 201, 202, 203, 213, 214, 223, 224, 229, 232, 234, 235, 238, 245, 278, 281, 284, 287, 288, 289, 290, 291, 295, 299, 301, 306, 312, 313, 316, 317, 323, 327, 339, 731, 1085, 1176], "advanc": [194, 198, 201, 210, 213, 222, 238, 248, 251, 262, 271, 274, 284, 290, 291, 292, 293, 294, 295, 300, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 326, 327, 334, 335, 336, 337, 375, 443, 1122, 1123, 1184], "18": [195, 197, 223, 242, 262, 274, 275, 289, 305, 328, 329, 330, 331, 357, 375, 1013], "19": [195, 197, 201, 235, 251, 356, 357, 371, 373, 375], "sy": [195, 221, 856, 1052], "multilin": [195, 227, 231, 324, 352, 1067], "docstr": [195, 242, 254, 257, 260, 282, 314, 336, 352], "datentypen": [195, 205, 212, 225, 241, 253], "ausflug": [195, 244], "variablen": [195, 205, 212, 225, 241, 244, 253, 263], "deren": 195, "unterbau": 195, "zuweisung": 195, "mit": [195, 205, 210, 223, 375, 913, 1171, 1187], "hilf": 195, "tupl": [195, 200, 205, 210, 212, 218, 221, 231, 234, 237, 242, 244, 250, 254, 257, 260, 266, 267, 269, 272, 275, 282, 292, 296, 318, 324, 326, 330, 336, 351, 352, 682, 731, 736, 1055, 1063, 1131], "unpack": [195, 200, 205, 210, 212, 221, 237, 242, 254, 260, 266, 267, 269, 272, 282, 318, 324, 326, 336, 351, 352, 682, 731, 736, 1011, 1131], "unendlich": 195, "breit": 195, "divis": [195, 205], "floor": [195, 205], "konvertierung": 195, "konstruktoren": [195, 212], "welchen": 195, "typ": [195, 205], "typen": 195, "besser": 195, "laufzeitverhalten": [195, 205], "geeigneter": 195, "datenstrukturen": [195, 205, 206, 226, 244, 1186], "boolean": [195, 205, 231, 234, 242, 244, 250, 254, 257, 324, 330, 402, 486, 1056, 1083, 1142], "short": [195, 234, 250, 402, 496, 805], "circuit": [195, 234, 250, 402], "evalu": [195, 234, 250], "warum": [195, 205], "sind": [195, 205], "mehr": [195, 210], "rang": [195, 200, 205, 212, 221, 227, 231, 234, 242, 244, 247, 254, 257, 260, 266, 267, 269, 272, 282, 296, 302, 313, 326, 330, 336, 340, 616, 617, 682, 710, 730, 731, 732, 733, 734, 735, 1025, 1062, 1077], "foli": 195, "161": 195, "shallow": [195, 244, 1063], "deep": [195, 244, 1063], "dem": [195, 1187], "deepcopi": 195, "funktionen": [195, 205, 206, 210, 1186], "gotcha": [195, 803, 833, 987], "90": 195, "ff": 195, "lokal": [195, 205, 263], "92": 195, "uniq": [195, 1105, 1106], "punkt": [195, 205], "zusammengefasst": 195, "hier": 195, "sch\u00f6nere": 195, "al": [195, 205, 254], "comprens": 195, "125": 195, "lesbarkeit": 195, "perform": [195, 218, 456, 732], "review": [195, 224], "pprint": 195, "praktisch": 195, "debug": [195, 469, 823, 1021], "datentransform": 195, "127ff": 195, "complet": [195, 560, 885], "collect": [195, 244, 247, 272, 999, 1041, 1141, 1154], "namedtupl": [195, 1041], "parameter\u00fcbergab": [195, 205], "variabel": 195, "lang": 195, "argumentlisten": 195, "erst": 195, "klass": 195, "weiterf\u00fchrend": [197, 219], "workspac": [198, 199, 201, 203], "core": [198, 235, 278, 1000], "special": [198, 317, 909], "tutori": [198, 201, 213, 219, 229, 259, 262, 295, 1123], "parti": [198, 229], "v": [200, 205, 212, 218, 221, 242, 247, 250, 254, 257, 263, 279, 282, 292, 296, 307, 351, 352, 390, 399, 411, 414, 418, 420, 469, 472, 579, 580, 581, 595, 741, 749, 765, 803, 823, 824, 830, 831, 945, 981, 1051, 1054, 1062, 1073, 1151], "return": [200, 263, 330, 434, 692, 693, 695, 710], "orient": [200, 250, 263, 271, 274, 275, 288, 290, 291, 294, 295, 300, 306, 309, 312, 313, 316, 317, 322, 328, 334, 335, 338, 339, 345, 464, 584, 655, 1038], "addit": [201, 584, 600, 662, 1039], "brought": 201, "thoma": 201, "cloud": [202, 327, 354], "particip": 202, "desk": 202, "interlud": [202, 805], "bloodi": 202, "wild": [202, 251, 306, 309, 312], "watchdog": 202, "support": [202, 214, 685, 821], "25": [203, 213, 222, 229, 240, 245, 256, 298, 299, 306, 307, 308, 311, 375], "grundlegend": [205, 206, 1186], "sprachelement": [205, 206, 1186], "syntax": [205, 212, 218, 250, 260, 282, 296, 324, 336, 352, 725, 734, 1051], "semantik": 205, "einr\u00fcckung": 205, "ihren": 205, "\u00e4ndern": 205, "kommentar": 205, "sprach": 205, "standarddatentypen": 205, "elementar": [205, 206, 1186], "beliebig": 205, "gro\u00df": 205, "vergleichsoperatoren": 205, "pr\u00e4zedenz": 205, "vor": 205, "strichrechnung": 205, "modulo": 205, "un\u00e4rer": 205, "negat": [205, 1142], "erzwingen": 205, "auch": 205, "zeichenketten": 205, "raw": [205, 212, 227, 231, 244, 250, 272, 302, 1036, 1067, 1118], "f": [205, 227, 242, 260, 302, 324, 1068], "konvertierungen": 205, "pr\u00e4zendenzregeln": 205, "literal": 205, "primit": [205, 748, 1025], "konstanten": 205, "operatoren": 205, "ausdr\u00fcck": 205, "operatorrangfolgen": 205, "\u00fcbungen": [205, 1170], "zwei": 205, "vertauschen": 205, "kontrollstrukturen": [205, 206, 225, 241, 242, 253, 1186], "anweisungen": 205, "folgen": 205, "bedingungen": 205, "verzweigungen": 205, "bedingt": 205, "anweisung": 205, "verzweigung": [205, 206, 1186], "geschachtelt": 205, "mehrfach": 205, "fallauswahl": 205, "schleifen": [205, 206, 1186], "z\u00e4hlergesteuert": 205, "kopfgesteuert": 205, "schleif": [205, 210], "fu\u00dfgesteuert": 205, "jf": 205, "continu": [205, 240, 242, 281, 289, 291, 313, 323, 417, 1058, 1061], "sequenti": [205, 210, 242, 254, 324, 340, 624, 625, 632, 633, 1025, 1059], "schnell\u00fcbersicht": 205, "sprunganweisungen": 205, "endlosschleifen": 205, "ben\u00f6tigt": 205, "Suche": 205, "eindimensional": 205, "tupel": 205, "listen": [205, 210, 244, 352], "sort": [205, 257, 543, 622, 627, 628, 631, 1145], "revers": [205, 629, 630, 647, 648, 649, 1042], "stapel": 205, "schlangen": 205, "versuch": 205, "zur\u00fcck": 205, "hybrid": 205, "supergscheit": 205, "methoden": [205, 206, 1186], "prozeduren": [205, 206, 1186], "funktionspoint": 205, "so": [205, 218, 221, 231, 263, 287, 464, 584, 682, 695, 697, 724, 1144], "heisst": [205, 210], "funktionsobjekt": 205, "primzahlenbeispiel": 205, "funktion": 205, "laufzeitfehl": 205, "existiert": 205, "zuweisen": 205, "fehlerfal": 205, "peter": 205, "unterprogramm": 205, "wert": 205, "referenzen": 205, "r\u00fcckgabewert": 205, "oder": [205, 358, 1171], "inner": [205, 1018], "standardbibliotheken": 205, "built": [205, 288, 588, 686, 803, 1022], "funktionalit\u00e4ten": 205, "struktur": 206, "herdt": [206, 1186], "kapitel": [206, 1186], "ganz": [210, 242], "kurz": 210, "mehreren": 210, "returnwerten": 210, "bzw": [210, 358], "containerdatentypen": 210, "untypisiert": 210, "l\u00f6schen": 210, "begriff": 210, "zufal": 210, "regular": [210, 223, 224, 260, 263, 275, 324, 330, 914], "hallo": 212, "speicher": 212, "sch\u00fctze": 212, "ich": 212, "davor": 212, "aber": 212, "gemischten": 212, "wiederholung": [212, 247], "objektidentit\u00e4t": 212, "statement": [212, 221, 411, 425, 1018, 1020, 1033, 1051, 1057, 1135, 1138], "operationen": 212, "verloren": 212, "interpol": 212, "mittel": [212, 218], "scipi": 212, "shell": [214, 278, 299, 354, 375, 857, 868, 870, 886, 898, 899, 905, 937, 954, 963, 978, 1172], "script": [214, 299, 375, 932, 963, 1030, 1049, 1172], "29": [214, 288, 322, 323, 324, 338, 339, 340, 341, 357, 365, 375], "assign": [218, 244, 250, 257, 318, 336, 340, 352, 407, 504, 585, 591, 592, 692, 693, 695, 740, 1018, 1053, 1060, 1064, 1140], "fun": [218, 257, 271, 1053], "arithmet": [218, 223, 242, 254, 352, 380, 401, 430, 504, 518, 577, 600, 613, 614, 618, 621, 1042, 1054], "complex": [218, 257, 352, 1168], "nur": 218, "sum": [218, 666], "weiter": 218, "dynamisch": 218, "evaluierung": 218, "scienc": [219, 245, 259, 262, 295, 312, 313, 314, 316, 336, 338, 1123], "don": [219, 732, 1123], "batteri": [219, 352, 1069, 1123], "confer": [219, 295, 1123], "talk": [219, 295, 923, 929, 930, 1123], "zipfil": 221, "member": [221, 250, 586, 591, 592, 594, 599, 668, 669, 686, 758], "attribut": [221, 247, 263, 326, 862, 965, 1036, 1043, 1148], "protect": [221, 658, 732, 815], "posit": [221, 584, 1016, 1045, 1075], "keyword": [221, 242, 266, 267, 269, 326, 353, 447, 448, 1018, 1045, 1065], "argument": [221, 242, 250, 271, 306, 353, 431, 952, 978, 1021, 1045, 1052, 1065, 1075], "mix": [221, 234, 302, 725, 1099, 1100], "yield": [221, 237, 242, 260, 288, 302, 1025, 1028], "filter": [221, 250, 279, 280, 286, 314, 324, 544, 545, 546, 732, 1142], "nonetyp": [221, 234], "none": [221, 242], "recurs": [221, 433, 592, 689, 776, 887], "fibonacci": [221, 710, 712, 1026, 1093], "sever": 221, "same": [221, 568, 593, 599, 724, 1064, 1157], "oserror": 221, "errno": [221, 943], "platform": [221, 929], "assert": [221, 263, 314], "assertionerror": 221, "27": [222, 240, 256, 306, 307, 308, 311, 320, 321, 375], "predefin": [222, 425, 1168], "stream": [222, 796, 867, 1073], "pcap": [222, 235, 237], "syllabu": [222, 235], "programmieren": [223, 375], "tool": [223, 296, 299, 314, 359, 850, 915, 918, 929, 1183], "massacr": 223, "kick": 223, "encapsul": [223, 450, 590, 756], "flow": [223, 253, 259, 274, 281, 284, 294, 295, 300, 301, 322, 323, 328, 329, 334, 335, 338, 339, 419], "pointer": [223, 224, 240, 266, 267, 269, 287, 289, 327, 427, 428, 430, 432, 448, 560, 577, 592, 596, 597, 613, 614, 615, 617, 618, 621, 641, 682, 697, 737, 738, 739, 740, 742], "standard": [223, 235, 240, 244, 259, 287, 289, 295, 398, 445, 469, 547, 607, 617, 650, 661, 663, 690, 867, 951, 1073, 1123, 1165], "librari": [223, 235, 240, 259, 287, 289, 295, 392, 467, 472, 473, 477, 547, 607, 617, 650, 661, 690, 945, 1016, 1017, 1123, 1190], "stl": [223, 560, 576, 577, 578, 609, 617, 618, 646], "kid": 224, "recapitul": 224, "some": [224, 242, 247, 286, 289, 299, 725, 756], "jump": [224, 430], "complic": [224, 509, 1015], "toolbox": 224, "databas": [224, 316, 667, 803, 1079, 1081, 1116, 1132, 1133, 1135], "gtest": [224, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169], "smart": [224, 240, 266, 267, 269, 289, 327, 560, 737, 738, 739, 740], "datenbank": 226, "showcas": 226, "kommt": 226, "db": 226, "aufgab": 226, "formulieren": 226, "damit": 226, "dies": 226, "http": [226, 314], "verbindung": 226, "schicken": 226, "jetzt": 226, "schickman": 226, "weg": 226, "vom": [226, 375], "server": [226, 1139], "php": 226, "j": 226, "empfangen": 226, "nun": 226, "muessen": 226, "verwandlen": 226, "liter": [227, 352, 504, 756, 757], "quot": [227, 231, 257, 1131], "friend": [227, 752], "sinc": [227, 260, 266, 267, 269, 599, 1068], "pars": [227, 1052, 1075, 1101], "sap": [228, 281, 283, 284, 285, 286, 333, 375], "export": 228, "solut": [228, 422, 444, 467, 476, 482, 483, 484, 487, 488, 493, 502, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 592, 619, 649, 686, 688, 695, 719, 720, 729, 763, 862, 881, 940, 942, 946, 1015, 1017, 1033, 1159], "terminologi": [231, 299, 859, 997, 1130], "31": [232, 240, 248, 338, 339, 340, 341, 375], "numer": [232, 334], "ai": 232, "mountain": 232, "io": [234, 250, 278, 282, 318, 324, 339, 453, 809, 810, 865, 965], "common": [234, 454, 466, 632, 1026, 1035], "wtf": [234, 949, 997], "creativ": [237, 851, 1039], "shift": [237, 406, 600], "hmmm": 238, "undefin": [240, 1064], "behavior": [240, 734], "again": [240, 288, 299, 594, 681, 905, 1042, 1172], "repeat": [240, 897], "quickli": 240, "algorithm": [240, 257, 281, 289, 326, 327, 430, 543, 560, 577, 612, 613, 617, 618, 627, 631, 1128, 1130], "functor": [240, 560, 625, 724, 726, 727, 745], "unifi": 240, "model": [240, 1128, 1130], "uml": [240, 496], "todai": [240, 1018], "associ": [240, 409, 496, 636, 637], "dynam": [240, 271, 290, 291, 292, 312, 316, 437, 564, 565, 566, 618, 651, 652, 765, 781, 811, 812, 1016, 1036, 1045], "alloc": [240, 326, 454, 574, 619, 644, 645, 652, 761, 763, 796, 819, 961, 1025], "week": 240, "zahl": 242, "miscellanea": 242, "brace": [242, 266, 267, 269, 326, 327, 684, 685, 686, 687, 1142], "singl": [242, 467, 492, 941, 999, 1163], "hour_of_dai": 242, "membership": [242, 1059], "best": 242, "intro": [244, 278, 357, 576, 577, 578, 965, 1019], "doc": [244, 314], "ident": [244, 307], "datenypen": 244, "libarari": 244, "chainmap": 244, "dequ": 244, "suchalgorithmen": 244, "pitfal": [244, 287, 290, 353, 588, 657, 682, 710, 727], "fromkei": [244, 257], "join": [244, 250, 324, 339, 340, 1069, 1096], "lstrip": [244, 349], "rstrip": [244, 349], "sequentiel": 247, "konstant": 247, "suchzeit": 247, "metaprogram": 247, "everywher": [247, 263, 592, 1023], "defaultdict": [247, 272], "hello": [250, 260, 379, 714, 803, 804, 1049], "world": [250, 379, 386, 803, 804, 1049], "blahblah": [250, 254, 257, 260, 324, 617, 1048], "commandlin": [250, 278, 316, 343, 348, 431, 459, 466, 885, 940, 963, 997, 1052, 1075], "lifetim": [250, 394, 423, 727, 741, 749, 1132], "preview": [250, 477], "explicit": [250, 388, 584, 596, 687, 725, 727, 740, 753, 1033], "max": 250, "iteratoren": 250, "generatoren": 250, "ordereddict": 250, "duck": [250, 266, 267, 269, 306, 309, 326, 697, 766, 1035], "resolut": 250, "order": [250, 568, 1022, 1042], "mro": 250, "super": 250, "__bases__": 250, "__mro__": 250, "self": [250, 592, 1037], "call": [250, 424, 428, 454, 458, 460, 560, 828, 945, 951, 980, 986, 1045], "mangl": [250, 593], "udemi": 250, "claus": [250, 290, 312, 316, 1022], "lambda": [250, 266, 267, 269, 296, 326, 327, 682, 723, 724, 725, 726, 745], "oppos": 250, "discuss": [253, 290, 291, 363, 388, 390, 754, 828, 833, 841], "chart": 253, "interact": [254, 302, 1049, 1100], "1st": 254, "explan": [254, 314], "preced": [254, 257, 409, 1054], "float": [254, 257, 314, 1054], "einschub": 254, "vergleich": 254, "filterketten": 254, "zen": 254, "datensatz": 254, "notat": 254, "letzt": 254, "letzten": 254, "infinit": [257, 1026], "long": [257, 682], "comparison": [257, 584, 631, 776, 850, 1042, 1054], "digit": [257, 357, 1090], "english": [257, 359, 1090], "determin": [257, 871, 1087, 1097, 1098], "maximum": [257, 1087, 1097, 1098], "two": [257, 429, 522, 523, 584, 603, 687, 993, 1087, 1088, 1097, 1098], "out": [257, 290, 291, 489, 587, 616, 617, 987, 1001, 1018, 1060], "duplic": [257, 467, 609, 954], "encod": [257, 259, 260, 271, 281, 301, 302, 318, 357, 1136], "nest": [260, 420, 433], "itertool": 260, "chain": [260, 828], "destructor": [260, 568, 574, 589, 654, 659, 739], "prient": 262, "next": [262, 453, 718, 1163], "standesregist": 262, "sqlite3": [262, 470, 1079, 1135], "xml": [262, 1148], "tree": [262, 798, 825, 863, 889, 896, 934, 941, 980], "projektabschlusstag": 262, "anyth": 263, "defin": [263, 476, 588, 725, 1022], "own": [263, 466, 694, 704, 862], "lookup": [263, 552, 553], "vorbesprechung": 265, "legend": 265, "neuerungen": 265, "seit": 265, "2011": [265, 266, 267, 269, 375], "ausblick": 265, "thank": [266, 267, 269], "you": [266, 267, 269, 697], "readablil": [266, 267, 269], "writabl": [266, 267, 269, 952], "err": [266, 267, 269, 326, 641, 697, 731, 736], "bind": [266, 267, 269, 326, 731, 736, 744, 745, 1135], "auto": [266, 267, 269, 326, 682, 697, 730, 731, 972, 1157], "without": [266, 267, 269, 326, 598, 619, 693, 697, 961], "simpli": [266, 267, 269, 327, 942], "deserv": [266, 267, 269], "ag": [266, 267, 269, 672], "overrid": [266, 267, 269, 326, 729], "delet": [266, 267, 269, 326, 565, 634, 720, 885], "strongli": [266, 267, 269, 326, 683], "enum": [266, 267, 269, 326, 446, 683, 793], "deleg": [266, 267, 269, 326, 688], "nullptr": [266, 267, 269, 326, 696], "rvalu": [266, 267, 269, 326, 691, 694, 695], "skeleton": [267, 269, 287, 289, 602, 852, 853], "perfect": [269, 404, 446, 744], "view": [269, 685, 732, 734, 735, 789, 851], "architectur": [270, 375, 464, 682, 721, 825], "pattern": [270, 288, 290, 291, 375, 488, 502, 1026, 1179], "mondai": 270, "tuesdai": 270, "wednesdai": 270, "forc": [271, 403], "front": [271, 290, 312, 1036], "seri": [271, 274, 294, 295, 300, 301, 322, 323, 329, 334, 335, 338, 339, 560, 1109, 1116, 1141], "piec": 271, "go": [271, 954, 1131], "kickoff": [271, 290, 291, 306, 309, 313, 316], "livehack": [271, 280, 466, 489, 691, 788, 1064, 1151, 1158], "Such": [272, 662], "noob": 274, "wsl": [278, 287, 289, 864, 1013], "quick": 278, "permiss": [278, 299, 870, 872, 873, 874, 880, 884, 903, 934], "uart": [278, 856], "susi": 278, "untold": [278, 281, 287, 288, 291, 327], "whet": [279, 280], "appetit": [279, 280], "panda": [279, 281, 282, 284, 286, 288, 301, 313, 318, 324, 334, 338, 1128, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147], "regex": 279, "pipelin": 280, "categori": 280, "payment": 280, "select": [280, 286, 288, 922, 929, 989, 1141, 1142, 1144, 1146, 1163], "uncategor": 280, "dataset": [281, 285, 286, 1127, 1129], "origin": [281, 284, 609, 726, 727, 835, 1131], "automat": [281, 284, 304, 320, 400, 423, 719, 767, 1178], "cleanup": [281, 284, 833, 844], "conversiosn": 282, "outlook": [284, 326], "specif": [284, 974, 1111], "usecas": 286, "drop": [286, 484, 732], "nan": 286, "datafram": [286, 1128, 1141, 1145], "isna": 286, "to_datetim": 286, "dated": 286, "workabl": 286, "usag": [286, 291, 326, 433, 437, 460, 476, 480, 525, 540, 586, 623, 624, 630, 657, 685, 689, 697, 741, 742, 743, 784, 828, 868, 907, 924, 931, 955, 999, 1077], "modifi": [286, 441, 448, 525, 971, 1033, 1063, 1147], "increas": 286, "price": 286, "particular": 286, "store": [286, 441, 489, 971, 1033], "readabl": [286, 444, 756, 957], "combin": [286, 407, 503, 504, 517], "prefer": [287, 289], "ubuntu": [287, 289, 1013], "under": [287, 289, 887, 947, 1020], "unsupport": 287, "heavi": [287, 289, 861], "weight": [287, 289], "resourc": [287, 359, 592, 652, 740, 753, 821], "r": [287, 904, 941], "littl": [287, 415, 466, 1048], "concurr": 287, "far": [287, 749, 1130], "fact": [288, 807, 869, 1036, 1039], "fixtur": [288, 541, 776, 1156, 1157, 1167, 1168, 1169], "omin": [288, 1021], "warm": 289, "resolv": 289, "cont": 289, "d": [289, 489], "insid": [290, 291, 594, 599, 694, 695], "construct": [290, 312, 316, 1041, 1058], "emphasi": [290, 312, 316], "recoveri": [290, 291, 312, 313, 316], "broader": 290, "sens": 290, "morn": [291, 295, 299, 301, 313, 323, 327, 339], "pytest": [291, 339, 1155, 1156], "awaken": [295, 323, 339], "bash": [299, 375, 905, 1172], "bourn": [299, 905, 1172], "inspect": [299, 912, 915], "wakeup": [299, 301, 327, 985, 987], "redirect": [299, 865, 866, 867, 868, 891, 904, 954], "pipe": [299, 734, 851, 865, 866, 868, 869, 916, 918], "archiv": [299, 847, 848, 850, 851, 1013, 1014, 1017], "compress": [299, 847, 848, 850, 851], "network": [299, 506, 819, 820, 923, 948, 1193], "least": [299, 1163], "day2": 301, "interpret": [302, 458, 490, 503, 504, 517, 518, 1100], "len": 302, "abl": 302, "callabl": [302, 745], "summer": [306, 309, 360], "sandbox": [306, 309], "equal": [307, 538, 584, 600, 601, 602, 603, 604, 624, 1042], "spoiler": 309, "annot": 310, "multiprocess": 312, "idea": 312, "veri": [313, 729, 761, 1148], "leftov": 313, "yesterdai": 313, "ifi": 313, "toolcas": [313, 326, 700, 701, 702], "arg": [313, 1021], "kwarg": [313, 1021], "includ": [313, 424, 478, 1069], "receiv": [313, 993], "udp": 313, "datagram": [313, 923], "compositesink": 313, "timestamp": [313, 833], "org": [314, 357], "aaarghhh": 314, "expresss": 314, "constexpr": [326, 689], "constinit": 326, "constev": 326, "want": [326, 657, 682, 693, 697, 720, 793, 798, 956, 1039], "erasur": [326, 763, 765], "classic": [327, 746, 762], "semant": [327, 691, 692, 693, 694, 695, 993], "kochtopf": 327, "roundup": 327, "still": [327, 487, 682, 1020, 1025], "weird": 330, "exchang": [330, 923], "schuetzen": 330, "pathlib": [330, 340], "regexen": 330, "distil": 330, "py": 330, "infin": [336, 1026], "checker": 342, "blinklicht": [343, 344, 345, 346], "electron": [343, 922], "aspect": 343, "circuitri": 343, "header": [343, 422, 468, 474, 599, 929, 1112], "pinout": [343, 929], "unittest": [346, 1157, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1194], "ece19": 347, "g2": [349, 853], "big": [349, 375, 813], "swoop": 349, "size": [349, 398, 557, 707, 901], "chunk": 349, "line": [349, 393, 425, 587, 868, 885, 1051, 1092, 1103, 1107], "str": [349, 1044], "byte": 351, "btw": 352, "wertebereich": 352, "sidenot": [353, 1065], "pure": [353, 657, 659, 1065], "beauti": [353, 460, 856, 931, 1065], "login": [354, 860, 932], "formalit\u00e4ten": 355, "ec": [356, 371, 373, 852, 853], "daili": 357, "fail": [357, 956, 1156, 1163, 1165], "reiter": 357, "argpars": [357, 1052, 1075], "deutsch": [358, 375], "lehrinhalt": 358, "lernergebniss": 358, "lv": 358, "empfohlen": [358, 1172, 1174, 1175, 1180, 1182, 1183, 1187, 1188, 1189, 1190, 1192, 1193, 1194], "verpflichtend": 358, "fachliteratur": 358, "lernressourcen": 358, "instrument": 358, "art": 358, "vermittlung": 358, "voraussetzungen": 358, "begleitbedingungen": 358, "pr\u00fcfungsmethod": 358, "beurteilungskriterien": 358, "mode": [359, 469, 870, 922, 955, 1049, 1073], "deliveri": [359, 996, 997], "co": 359, "requisit": 359, "assess": 359, "criteria": [359, 981], "whose": 361, "fault": 361, "newcom": 362, "jjjj": 365, "sidewai": [366, 599, 745, 756, 1021, 1026], "bisher": 375, "gehalten": 375, "entwickl": 375, "fortgeschritten": [375, 1174], "wiener": 375, "neustadt": 375, "einf\u00fchrung": [375, 1173, 1175, 1182], "ober\u00f6sterreich": 375, "pictur": [375, 813], "obersteiermark": 375, "korn": 375, "salzburg": 375, "ausgew\u00e4hlt": 375, "themen": 375, "2018": 375, "raum": 375, "n\u00fcrnberg": 375, "oberb\u00fcren": 375, "schweiz": 375, "2017": 375, "m\u00fcnchen": [375, 1171], "lowlevel": 375, "refresh": 375, "programmiererstandpunkt": 375, "2016": 375, "wien": 375, "workshop": 375, "bodenseo": 375, "hemmenhofen": 375, "bodense": 375, "systemnah": 375, "2014": 375, "mathia": 375, "kettner": 375, "siemen": 375, "braunschweig": 375, "intermedi": [375, 515, 1018, 1035], "scratch": [375, 1171], "lpd": 375, "hannov": 375, "unter": 375, "k\u00f6ln": 375, "projektverwaltung": 375, "subvers": [375, 1188], "lka": 375, "niedersachsen": 375, "konfigur": 375, "gnu": [375, 458, 999, 1183], "make": [375, 472, 539, 681, 720, 809, 852, 853, 1000, 1001, 1183], "2012": 375, "hamburg": 375, "fehlerdiagnos": 375, "polizei": 375, "stia": 375, "admont": 375, "bi": 375, "2010": 375, "softwareentwicklung": 375, "darmstadt": 375, "ulm": 375, "bundeswehr": 375, "wildflecken": 375, "cool": [378, 1068], "gui": 378, "Their": [378, 398], "hobbi": 378, "histori": [378, 583, 681, 789, 993, 1018, 1048, 1127], "second": [380, 382], "fahrenheit": [381, 383, 385, 512], "tabl": [381, 383, 385, 538, 1042], "simplif": 382, "constant": [384, 399, 424, 454, 515], "preprocessor": [384, 424, 425], "macro": [385, 424, 425, 474, 784, 805], "outsid": 386, "cat": [386, 910], "poor": [386, 387], "wc": 387, "definit": [388, 390, 392, 400, 418, 420, 421, 424, 476, 599, 682, 762, 764, 766, 768, 784, 985, 1062], "memset": 388, "histogram": 389, "nonsens": 390, "signatur": 390, "declar": [390, 391, 420, 421, 422, 599], "mistak": 392, "stdin": [393, 918, 932], "variant": [398, 487, 493, 682, 758, 767, 768, 769, 993], "qualifi": 398, "width": [398, 430, 604, 617, 930, 1060], "escap": [399, 1067], "logic": 402, "implicit": [403, 742], "sign": 403, "truncat": [403, 961], "propag": 403, "unsign": 403, "compil": [403, 420, 425, 441, 442, 467, 468, 469, 585, 588, 592, 721, 742, 805, 825, 999, 1002, 1011, 1015], "warn": [403, 409, 425, 975, 997], "cast": 403, "increment": [404, 617, 710, 1033], "decrement": [404, 617], "confus": [404, 1054, 1142], "manipul": [406, 742, 961, 997], "bitwis": [406, 1142], "AND": 406, "OR": 406, "xor": 406, "right": [406, 1104], "invert": [406, 1141], "complement": 406, "summari": [409, 584, 745, 825, 851, 1016, 1036, 1144, 1146], "true": [412, 487, 597, 1145], "fals": 412, "truth": 412, "option": [412, 459, 474, 475, 476, 851, 885, 887, 907, 914, 929, 941, 1131], "matter": 413, "distinct": 414, "purpos": [415, 965], "closer": 415, "comma": 415, "infam": 415, "idiom": 415, "bodi": 416, "goto": 418, "label": [418, 1146], "monolith": [420, 467, 489, 542], "separ": [420, 421, 467, 489, 754, 909, 1015], "static": [423, 447, 538, 598, 599, 765, 1015, 1016, 1017, 1040], "visibl": [423, 447], "replac": [424, 527, 770], "inlin": [424, 454, 587, 599], "guard": 424, "rule": [425, 464, 585, 588, 599, 687, 695, 732, 863], "span": 425, "stringif": [425, 1044], "token": 425, "address": [427, 796, 839, 862, 929, 983, 1142], "arbitrari": [430, 617, 1021, 1045], "see": [431, 856, 861, 862, 867, 868, 947, 948, 949, 951, 978, 981, 985, 987, 1066, 1130], "struct": [340, 433, 434, 449, 584, 673, 736], "typedef": 435, "alia": 435, "singli": 438, "volatil": [440, 886], "lie": 440, "valid": 440, "handler": [440, 996, 997], "intrins": 441, "atom": [441, 751, 756, 823, 824, 828, 829, 844, 970], "builtin": 441, "align": 442, "unalign": 442, "pad": 442, "saniti": [444, 452, 466], "readabilti": 444, "shoot": 444, "offens": 444, "unobvi": 444, "ambigu": [444, 450, 687], "smell": 444, "know": 445, "size_t": 445, "discret": 446, "tradit": [446, 464, 1045], "approach": [446, 474, 475, 476], "wishlist": 446, "close": [446, 492, 737, 993], "somewhat": 447, "contriv": 447, "hoorai": 447, "correct": [448, 595, 729], "non": [448, 531, 532, 533, 534, 535, 536, 537, 574, 594, 758, 764, 1163], "good": [449, 474, 475, 584, 599, 617, 686, 695, 704, 705, 732, 734], "old": [449, 599, 617, 682, 695, 704, 705, 734], "c99": 449, "explict": 450, "safeti": [450, 466], "scheme": 450, "artifici": [450, 1124], "valgrind": [451, 565], "action": [451, 997], "optim": [453, 454, 455], "bound": [453, 454, 565, 981], "unnecessari": 454, "peephol": 454, "subexpress": 454, "elimin": [454, 742, 1092], "strength": 454, "reduct": 454, "fold": 454, "invari": 454, "unrol": 454, "tail": [454, 916], "cpu": [454, 862, 981, 987], "cach": [455, 476, 732], "multidimension": 455, "thrash": 455, "profil": [457, 458, 460, 461], "donald": 457, "knuth": 457, "toni": 457, "hoar": 457, "larri": 457, "wall": 457, "practic": 457, "brian": 457, "w": 457, "kernighan": 457, "rob": 457, "pike": 457, "gprof": 458, "flat": 458, "callgrind": 459, "analysi": 459, "per": [459, 793, 833, 1168], "kcachegrind": 459, "oprofil": 460, "much": [460, 475, 726, 1020], "wide": 460, "offlin": 460, "graphic": 460, "accomplish": 464, "disclaim": [464, 864], "principl": [464, 492], "yagni": 464, "uncl": 465, "bob": 465, "typic": [466, 863, 967, 983], "bookkeep": 466, "effort": 466, "spaghetti": 466, "concaten": [466, 1140], "input": [466, 867, 1025, 1128], "yyyi": 466, "mm": 466, "where": [466, 472, 861, 999], "testabl": 466, "explicitli": [466, 725, 742], "categor": 466, "net": 466, "place": [466, 543, 588, 629, 852, 853, 1063], "overengin": [466, 599], "boilerpl": [467, 726, 821], "execut": [467, 473, 870, 1016, 1022, 1030, 1050, 1099, 1163, 1165], "consist": [467, 796], "paus": 469, "diagram": 469, "cmake_build_typ": 469, "k": [469, 1125], "printf": [469, 586], "popular": [469, 857], "find_packag": 470, "prefix": [472, 1021], "target": [472, 473, 475, 478, 479, 541, 959, 1000, 1178], "runpath": 472, "abi": 472, "blacklist": [474, 475], "flag": [474, 663, 811, 951, 1068], "libhello": 474, "bad": [474, 475, 732, 763, 794], "target_compile_definit": 475, "backlist": 475, "availablil": 475, "use_blacklist": 476, "normal": 477, "subdirectori": 478, "reorgan": 478, "i2c": [482, 929, 931], "subhierarchi": 482, "instanti": [482, 489, 638, 699, 758, 791], "adapt": [483, 489, 498, 503, 505, 512, 517, 745], "must": [483, 958], "adapte": 483, "asensor": 483, "real": [483, 591, 682, 743, 882], "measur": [483, 526, 757, 985, 987], "motiv": [484, 487, 503, 504, 600, 683, 686, 688, 697, 699, 724, 730, 845, 1027, 1037, 1043], "insert": [484, 550, 551, 634, 635, 638, 639, 640, 674, 744, 772, 773, 813], "bulk": 484, "6a": 484, "initializer_list": [484, 685, 687], "socialdb": 485, "filesystem": [486, 776, 993], "thermomet": [486, 506, 507, 520, 521, 540], "aggreg": [487, 496, 686], "conret": 487, "realiz": 487, "situat": [487, 942], "constantsensor": 487, "decoratedconstantsensor": 487, "randomsensor": [487, 528], "decoratedrandomsensor": 487, "verifi": [487, 897, 931, 933, 1128], "hold": [487, 1041], "studi": [489, 730, 731, 1010], "heat": 489, "dbuslogg": 489, "dbusvaluestor": 489, "either": 489, "stop": [489, 740], "help": [489, 885, 917, 1151, 1158], "observ": [491, 519, 1027], "liskov": 492, "substitut": [492, 597], "segreg": 492, "invers": [492, 986], "proxi": [493, 503, 506, 507, 517, 520, 521], "foundat": 494, "hierarchi": [494, 607, 863, 1022], "hypothet": [494, 1042], "singleton": [495, 508, 509, 510, 522, 523, 524], "connector": 496, "uniniti": [504, 597], "flexibl": [508, 509, 522, 523], "strict": [509, 523], "inflex": [510, 524], "i2csensorfactori": 511, "concret": [511, 522, 523], "i2csensorfactory_vendor1": 511, "stub": [520, 832], "socialinsur": [522, 523], "oegk": [522, 523], "sv": [522, 523], "introduc": [525, 586, 732], "relationship": [525, 659, 660, 1128], "firstnam": 525, "lastnam": [525, 675, 677], "w1sensor": [525, 542], "answer": [525, 724], "try": [529, 607, 740, 1022], "ledstripedisplay_nopoli": 531, "cover": [531, 532, 533, 534, 535, 536, 537, 540], "hysteresis_nopoli": 532, "averagingsensor_nopoli": 533, "constantsensor_nopoli": 534, "mocksensor_nopoli": 535, "randomsensor_nopoli": 536, "mock": 537, "shape": [538, 885], "procedur": 538, "circl": 538, "area": [538, 604], "squar": 538, "massag": 539, "sub": 539, "notfound": 541, "find_is_const": 541, "isol": [541, 1132, 1168], "realiti": 541, "pc": 541, "greater": 545, "odd": 546, "overwrit": 550, "sunni": [551, 553, 556, 952, 956, 957, 958], "uniquifi": 558, "transcript": 560, "malloc": 565, "free": 565, "mismatch": [565, 942], "across": [568, 762, 764, 766, 768], "ownership": [573, 574, 575, 742, 870], "raii": [573, 574, 575, 753], "dealloc": 574, "naiv": [577, 598, 649, 841, 996, 1026, 1141], "ol": [584, 731], "look": [584, 947, 948, 949], "distanc": [584, 603], "length": 584, "manual": [585, 588, 592, 745, 768, 769, 885, 945, 963, 966, 1027], "specifi": [586, 952], "otherwis": 586, "lifecycl": 589, "dragon": [592, 748], "memberwis": 592, "straighforward": 592, "correctli": 592, "underli": [593, 683], "mechan": 593, "just": 593, "pollut": 595, "hidden": [596, 907], "cannot": 597, "easili": 597, "odr": 599, "litt": 599, "defnit": 599, "ostream": [600, 601, 602, 603, 604], "cout": 600, "cuboid": 601, "upon": [601, 603, 604], "point3d": [601, 603], "surfac": 601, "volum": [601, 1013], "unari": [602, 603], "rectangl": [603, 604], "coordin": [603, 604], "absolut": [603, 776, 909, 1122], "height": 604, "catch": [607, 1022], "throw": [607, 758], "spirit": [617, 741, 742, 743], "pre": [619, 686], "destin": [619, 952], "back_insert_iter": 619, "binary_search": 622, "intellig": [622, 628, 1029, 1124], "find_if": [625, 675], "customiz": 625, "for_each": 626, "lower_bound": 628, "reverse_copi": [630, 649], "characterist": [632, 635], "modif": [635, 1015], "fill": [638, 1135], "definin": 639, "subscript": 640, "eras": 641, "multimap": 643, "deriv": [653, 654], "larger": [657, 1017, 1025], "substr": [662, 1069], "paint": 663, "american": 663, "onto": 663, "moodl": [664, 858, 872, 873, 898, 1005], "quiz": [664, 858, 872, 873, 898, 1005], "cin": 666, "n": 672, "year": 672, "transform": [673, 745, 773, 1025], "wrong": [676, 756, 952], "great": [681, 983], "around": [682, 710], "school": 682, "item": [682, 744, 772, 773, 774, 1020, 1026], "inevit": 682, "union": [682, 758], "consider": [682, 983], "uniform": 684, "implementor": 685, "direct": [685, 796], "inconsist": 686, "heap": 686, "refus": 686, "narrow": 686, "mess": [687, 1136], "realist": [687, 1023, 1156], "int": [687, 978], "nicolai": 687, "josutti": 687, "complain": 687, "said": 690, "guidelin": 690, "well": 690, "smartptr": 692, "lvalu": [695, 744], "wish": [695, 1035], "theori": 695, "Ones": 695, "sai": [697, 887], "decai": 697, "chosen": 699, "rescu": [699, 724, 746, 1001, 1021, 1042, 1147], "syntact": [699, 1021], "variat": [699, 731, 736, 825], "conceptless": [700, 701], "fulfil": 704, "has_siz": 704, "index_returns_doubl": 704, "func": 705, "ret": 708, "doubl": 708, "foreword": 710, "prototyp": 710, "examp": 710, "explain": 710, "drive": [710, 922], "anatomi": [710, 803], "resum": 710, "suspens": 710, "caller": 710, "co_yield": 710, "mimick": 710, "fibo": 711, "suspend": [716, 717, 718], "decis": [721, 981], "cleanli": 721, "care": 724, "handwritten": [726, 727], "proggi": 726, "morph": 726, "possibl": 727, "temporari": [727, 1020, 1156], "made": 727, "hard": [729, 906], "aris": 729, "gool": 731, "prevent": [731, 742], "accident": [731, 773], "dangl": 732, "easi": [732, 749], "constraint": 732, "dogmat": 732, "sigh": 732, "storag": [734, 974], "abbrevi": 734, "avail": [734, 784], "compat": 736, "unique_ptr": [738, 741, 742], "shared_ptr": [738, 741, 773], "handwrit": 740, "ctor": 740, "auto_ptr": 740, "mayb": 740, "uniqu": [741, 774], "But": [741, 764, 956], "juggl": 741, "make_shar": 741, "cyclic": 741, "chanc": 742, "leakag": 742, "keystrok": 742, "make_uniqu": 742, "acknowledg": 742, "prove": 742, "weak_ptr": [743, 773], "borrow": 743, "invalid": 743, "univers": 744, "dual": 744, "bag": [744, 772, 773, 774], "null": 745, "pointlessli": 745, "hardcod": [745, 789], "placehold": 745, "upsid": 746, "technic": 746, "downsid": 746, "joinabl": 749, "detach": [749, 968], "cornercas": 749, "recursive_mutex": 752, "timed_mutex": 752, "recursive_timed_mutex": 752, "lock": [753, 756, 817, 830], "unlock": [753, 830], "consid": 753, "acquisit": [753, 1109], "lock_guard": 753, "condition_vari": 754, "safe": [754, 997], "predic": [754, 972], "concern": 754, "promis": 756, "chrono": [756, 757], "utterli": 756, "becom": [756, 1017], "readi": 756, "minim": 756, "pro": 756, "clock": 757, "sleep": [757, 823, 828, 829], "bad_variant_access": 758, "accessor": 758, "get_if": 758, "fundament": [758, 1046], "crtp": [760, 763, 765], "incomplet": [761, 1138], "bloat": 763, "string_view": 763, "unrel": 766, "visit": 769, "rel": [776, 909, 1030], "compon": 776, "creation": [776, 857, 968, 969], "create_directori": 776, "entri": 776, "classif": 776, "is_xxx": 776, "directory_entri": 776, "modern": [780, 781, 782, 1176], "slideshow": [781, 784, 786, 789, 791, 794, 796, 803, 805, 807, 809, 811, 813, 815, 817, 819, 821, 823, 828, 830, 833, 835, 839, 842, 845, 993, 997, 1065, 1152, 1159], "hook": 783, "necessari": 783, "ioctl": [783, 784, 786, 805, 838, 951], "vtabl": 784, "kernelspac": 784, "_io": [784, 805], "major": [788, 789], "minor": [788, 789], "space": [789, 839, 858, 861, 862, 983], "hair": 793, "pretti": 793, "wswitch": 793, "dma": [796, 797, 821], "physic": 796, "scatterlist": 796, "when": 798, "explod": 798, "loadabl": 803, "init": [803, 821, 863, 1171], "exit": [803, 932, 968, 978], "unload": 803, "raspi": [805, 806, 942], "legaci": [805, 1095], "api": [805, 835, 967, 986], "my_activate_gpio": 805, "servic": [807, 863, 1139], "routin": [807, 821], "reserv": 809, "kmalloc": [811, 812, 828], "doubli": [813, 814], "node": [813, 954], "empti": [813, 904, 1036, 1092], "consequ": 815, "rt": [817, 818], "mutual": [817, 830], "exclus": [817, 830], "registr": 819, "layer": 819, "util": [819, 924], "pci": [821, 822], "foremost": 821, "probe": 821, "bar": 821, "rasperri": 825, "crossdev": 825, "artifact": [825, 1125], "bootload": 825, "jjj": 826, "mainten": 827, "spinlock": [828, 830, 831], "spin_lock": 828, "irq": 828, "spin_lock_irqsav": 828, "spin_unlock_irqrestor": 828, "ah": [828, 1136], "bulletproof": 830, "dup": 832, "defer": [833, 844], "jiffi": 835, "wheel": [835, 1078], "get_one_ev": 838, "copy_to_us": 838, "noth": 841, "o_nonblock": 841, "wake": 842, "workqueu": [844, 845, 846], "did": 844, "destroi": [845, 1158], "gzip": 849, "tar": 851, "etiquett": 851, "Being": 851, "g1": 852, "lot": [852, 853], "precondit": [852, 853], "credenti": [852, 871], "backup": [852, 853, 887], "busi": 853, "ok": [856, 978], "serial": 856, "pseudo": 856, "partit": 856, "proc": 856, "authent": [860, 938], "prompt": 860, "verif": [860, 1111], "success": 860, "imperson": 860, "uid": [862, 881, 882], "parent": [863, 980], "child": 863, "subsystem": 864, "0": [864, 978, 1132, 1171], "stdout": [868, 918, 932, 954], "stderr": 868, "trick": [868, 1067], "teacher": 870, "constel": 870, "root": [870, 882], "octal": 870, "tune": [870, 985, 1131], "setuid": [881, 882], "passwd": [881, 901, 957, 1101], "sudo": 881, "password": [881, 1089], "chmod": [881, 1050], "toi": 881, "effect": [882, 997, 1036], "ugli": 883, "sticki": 883, "umask": 884, "edit": 885, "tabul": 885, "filenam": 885, "bashrc": [886, 887], "cp": 887, "similar": 887, "its": [887, 1131], "pwd": 888, "cd": 888, "mkdir": [894, 904], "funni": 895, "dev": 900, "touch": 904, "rm": 904, "rmdir": 904, "mv": 908, "somewher": 908, "cut": [911, 1060], "durchsuchen": 913, "optionen": 913, "verkn\u00fcpfungen": 913, "grep": 914, "less": [917, 1018, 1042], "brushless": 922, "motor": 922, "speed": 922, "esc": 922, "fwd": 922, "rev": 922, "calibr": 922, "packet": 923, "vcan": 924, "frame": [925, 1140], "mcp2515": 926, "schemat": 926, "solder": 926, "spi": 926, "lm73": 929, "slave": [929, 931], "master": [929, 931], "enabl": [929, 931], "bcm2835": 929, "datasheet": 929, "connect": [929, 948, 1135], "i2cdetect": 929, "detect": 929, "hwmon": [929, 931], "monitor": [929, 931], "pca9685": 930, "puls": 930, "wire": [930, 931], "ds18b20": 931, "alter": 931, "w1": 931, "attach": 931, "pin": [931, 965], "ds2482": 931, "800": 931, "channel": 931, "announc": 931, "hotplug": 931, "lm": 931, "caveat": [931, 1132], "topologi": 931, "symptom": 931, "adjust": [934, 1011], "wear": 938, "admin": 938, "hat": 938, "scp": 941, "sshf": 942, "mount": 942, "logdata": 942, "unmount": 942, "fusermount": 942, "umount": 942, "helper": [943, 1142], "simplic": [947, 948, 949], "watch": 947, "strace": 947, "supervis": 947, "descriptor": [951, 954, 961], "filedescriptor": 951, "offset": [951, 961], "lseek": 951, "hole": 953, "o_creat": 955, "bogu": 955, "o_excl": 956, "alreadi": 956, "o_rdonli": 957, "even": [957, 958, 1084], "o_wronli": 958, "writeabl": 958, "implicitli": 958, "scatter": 961, "gather": 961, "retriev": 963, "wise": 964, "legal": 967, "pthread_join": 968, "synchron": [970, 996], "win32": 972, "reset": 972, "trylock": 977, "islock": 977, "argc": 978, "char": 978, "argv": [978, 1052], "procf": 980, "pid": 980, "ppid": 980, "getpid": 980, "getppid": 980, "multitask": 981, "fair": [981, 985], "runnabl": [981, 987], "bare": 983, "metal": 983, "hm": 983, "awai": [983, 1118], "stabil": 983, "latenc": [985, 987], "nice": 985, "inexact": 985, "immedi": 985, "preempt_rt": 985, "polici": 986, "prioriti": 986, "runn": 986, "frequenc": 987, "scale": 987, "mysteri": 987, "remain": 987, "sysprog": [988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998], "mmap": 992, "segment": 992, "produc": [992, 1026], "consum": 992, "mq_open": 993, "mq_send": 993, "mq_receiv": 993, "mq_close": 993, "mq_unlink": 993, "notif": 993, "mq_notifi": 993, "mqueue": 993, "sem_open": 993, "sem_wait": 993, "sem_post": 993, "sem_clos": 993, "sem_unlink": 993, "barebon": 996, "alarm": 996, "louder": 996, "innoc": 996, "sigalrm": 996, "programmat": 997, "mask": 997, "pend": 997, "sigset_t": 997, "async": 997, "seem": 999, "nm": 999, "agnost": 1000, "goodi": 1001, "nativ": [1002, 1007], "sysroot": [1002, 1011], "linaro": 1011, "defunct": 1011, "patienc": 1011, "against": [1011, 1016, 1042], "docker": 1013, "autoconf": 1013, "71": 1013, "zoom": 1015, "rememb": 1015, "reloc": 1016, "independ": 1016, "pic": 1016, "runtim": 1016, "versu": 1016, "def": 1018, "reach": 1018, "theoret": 1018, "nonloc": 1018, "hood": 1020, "monkeypatch": 1020, "print": [1020, 1045], "contextlib": 1020, "contextmanag": 1020, "involv": 1020, "prefixprint": 1020, "mind": 1021, "sugar": 1021, "functool": [1021, 1042], "rais": 1022, "regardless": 1022, "coverag": 1025, "form": 1030, "daemon": 1031, "mother": 1033, "acquir": 1033, "abc": 1035, "late": 1035, "abtract": 1035, "interrelationship": 1038, "salari": 1039, "introspect": 1039, "isinst": 1039, "issubclass": 1039, "classmethod": 1040, "staticmethod": 1040, "_make": 1041, "_asdict": 1041, "dunder": 1042, "compar": 1042, "incompat": 1042, "lotsa": 1042, "magic": 1042, "__gt__": 1042, "term": 1042, "__lt__": 1042, "total_ord": 1042, "them": 1042, "readonli": 1043, "repr": 1044, "__repr__": 1044, "suppli": 1045, "ultim": 1045, "guido": 1048, "van": 1048, "rossum": 1048, "hash": 1050, "bang": 1050, "she": 1050, "doze": 1050, "registri": 1050, "indent": 1051, "cosmet": 1052, "rudimentari": 1052, "python2": 1054, "unicod": 1054, "esoter": 1058, "delimit": 1067, "interv": 1075, "axi": 1077, "setuptool": 1078, "manifest": 1078, "publish": [1078, 1117, 1139], "usernam": 1089, "prime": [340, 1094, 1102, 1108], "strategi": 1101, "revert": 1103, "justifi": 1104, "activ": 1110, "dictread": [1112, 1113, 1131], "cp1252": [1112, 1114], "reader": [1114, 1115, 1131], "nohead": 1114, "both": 1120, "interrel": 1121, "product": 1122, "david": 1123, "beazlei": 1123, "raymond": 1123, "hetting": 1123, "mean": 1125, "linear": [1126, 1128, 1129], "regress": [1126, 1128, 1129], "weather": 1127, "ndarrai": 1128, "plot": 1128, "splice": 1128, "mankind": 1130, "god": 1130, "insan": 1131, "scsv": 1131, "dbapi": [1132, 1134, 1135], "transact": 1132, "postgresql": 1134, "postgr": 1134, "cursor": 1135, "queri": 1135, "ascii": 1136, "iso": 1136, "latin": 1136, "8859": 1136, "lieb": 1136, "gr\u00fc\u00dfe": 1136, "j\u00f6rg": 1136, "\u795d\u597d": 1136, "utf": 1136, "decod": 1136, "broker": 1139, "payload": 1139, "append": 1140, "deprec": 1140, "bitmap": 1142, "neat": 1142, "iloc": [1144, 1145], "Then": 1144, "inplac": 1145, "loc": [1145, 1146], "hiccup": 1146, "inclus": 1146, "lowercas": 1147, "email": 1147, "normalized_email": 1147, "ing": 1147, "elementtre": 1148, "etre": 1148, "sax": 1148, "dom": 1148, "invoc": 1151, "subcommand": 1151, "upload": 1154, "pythonpath": 1156, "mark": 1156, "expect": [1156, 1165], "recogn": 1157, "meat": 1157, "freez": 1158, "recreat": 1158, "fatal": 1163, "failur": 1163, "assert_": 1163, "suit": 1163, "teardown": 1168, "organisatorisch": 1170, "buchung": 1170, "kursablauf": 1170, "kursgestaltung": 1170, "unterlagen": 1170, "grub": 1171, "97": 1171, "bauen": 1171, "prozess": 1171, "verschieden": 1171, "zielpublikum": [1172, 1174, 1175, 1180, 1182, 1187, 1188, 1194], "kursinhalt": [1172, 1174, 1175, 1180, 1182, 1183, 1187, 1188, 1189, 1190, 1192, 1193, 1194], "vorkenntniss": [1172, 1174, 1175, 1180, 1182, 1183, 1187, 1188, 1189, 1190, 1192, 1193, 1194], "three": 1176, "prior": 1178, "beispielen": 1182, "mutter": 1183, "aller": 1183, "woch": 1187, "svn": 1188, "chapter": [], "cell": 340, "wuerfeln": 340, "misc": 340, "crap": 340, "datatyo": 340, "einlesen": 340, "listdir": [339, 340], "sep": 340}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "nbsphinx": 4, "sphinx": 60}, "alltitles": {"Kontakt": [[0, "kontakt"]], "Navigation": [[0, "navigation"]], "Google Maps": [[0, "google-maps"]], "Google Streetview": [[0, "google-streetview"]], "Curriculum Vitae": [[1, "curriculum-vitae"]], "\u00dcber Mich": [[2, "uber-mich"]], "Projekte": [[3, "projekte"]], "Projekte aus selbstst\u00e4ndiger T\u00e4tigkeit": [[3, "projekte-aus-selbststandiger-tatigkeit"]], "Projekte aus nichtselbstst\u00e4ndiger T\u00e4tigkeit": [[3, "projekte-aus-nichtselbststandiger-tatigkeit"]], "Skills": [[4, "skills"], [159, "skills"]], "Angebot: In-House Schulungen": [[5, "angebot-in-house-schulungen"]], "Zu meiner Person": [[5, "zu-meiner-person"]], "Schwerpunke": [[5, "schwerpunke"]], "C/C++": [[5, "c-c"]], "Python": [[5, "python"], [96, "python"], [357, "python"], [362, "python"]], "Linux": [[5, "linux"], [80, "linux"], [177, "linux"], [921, "linux"]], "Schulungsstil": [[5, "schulungsstil"]], "Preise": [[5, "preise"]], "Course Material": [[6, "course-material"], [465, "course-material"], [1122, "course-material"]], "Einleitung": [[7, "Einleitung"], [215, "Einleitung"]], "Datatypes": [[7, "Datatypes"], [212, "Datatypes"], [215, "Datatypes"], [218, "Datatypes"], [231, "Datatypes"], [234, "Datatypes"], [242, "Datatypes"], [244, "Datatypes"], [250, "Datatypes"], [254, "Datatypes"], [257, "Datatypes"], [260, "Datatypes"], [274, "datatypes"], [281, "datatypes"], [284, "datatypes"], [292, "Datatypes"], [294, "datatypes"], [295, "datatypes"], [296, "Datatypes"], [300, "datatypes"], [301, "datatypes"], [318, "Datatypes"], [322, "datatypes"], [323, "datatypes"], [328, "datatypes"], [329, "datatypes"], [330, "Datatypes"], [334, "datatypes"], [335, "datatypes"], [352, "Datatypes"], [1054, "datatypes"], [338, "datatypes"], [339, "datatypes"], [340, "Datatypes"]], "Numbers": [[7, "Numbers"], [215, "Numbers"], [218, "Numbers"], [242, "Numbers"], [352, "Numbers"], [1054, "numbers"]], "Integer Numbers": [[7, "Integer-Numbers"], [215, "Integer-Numbers"], [1054, "integer-numbers"]], "Strings": [[7, "Strings"], [212, "Strings"], [215, "Strings"], [218, "Strings"], [227, "Strings"], [231, "Strings"], [231, "id3"], [234, "Strings"], [242, "Strings"], [254, "Strings"], [272, "Strings"], [275, "Strings"], [275, "id1"], [275, "id3"], [282, "Strings"], [318, "Strings"], [352, "Strings"]], "Compound Datatypes": [[7, "Compound-Datatypes"], [215, "Compound-Datatypes"], [227, "Compound-Datatypes"], [231, "Compound-Datatypes"], [234, "Compound-Datatypes"], [237, "Compound-Datatypes"], [242, "Compound-Datatypes"], [244, "Compound-Datatypes"], [250, "Compound-Datatypes"], [254, "Compound-Datatypes"], [257, "Compound-Datatypes"], [260, "Compound-Datatypes"], [272, "Compound-Datatypes"], [296, "Compound-Datatypes"], [302, "Compound-Datatypes"], [314, "Compound-Datatypes"], [318, "Compound-Datatypes"], [330, "Compound-Datatypes"], [336, "Compound-Datatypes"], [1055, "compound-datatypes"], [340, "Compound-Datatypes"]], "Lists (Array in JavaScript, std::vector<> in C++, Array in Java)": [[7, "Lists-(Array-in-JavaScript,-std::vector<>-in-C++,-Array-in-Java)"], [215, "Lists-(Array-in-JavaScript,-std::vector<>-in-C++,-Array-in-Java)"]], "Dictionary (Key/Value Map in Javascript)": [[7, "Dictionary-(Key/Value-Map-in-Javascript)"], [215, "Dictionary-(Key/Value-Map-in-Javascript)"]], "Set: mathematische Mengen": [[7, "Set:-mathematische-Mengen"], [215, "Set:-mathematische-Mengen"]], "while": [[7, "while"], [215, "while"], [234, "while"], [250, "while"], [282, "while"], [336, "while"]], "Functions": [[7, "Functions"], [43, "functions"], [215, "Functions"], [218, "Functions"], [231, "Functions"], [242, "Functions"], [244, "Functions"], [250, "Functions"], [254, "Functions"], [259, "functions"], [275, "Functions"], [282, "Functions"], [296, "Functions"], [312, "functions"], [316, "functions"], [322, "functions"], [323, "functions"], [324, "Functions"], [328, "functions"], [329, "functions"], [330, "Functions"], [334, "functions"], [335, "functions"], [336, "Functions"], [390, "functions"], [390, "id1"], [1066, "functions"], [338, "functions"], [339, "functions"], [340, "Functions"]], "Python Basics (2021-xx-xx - 2021-yy-yy)": [[8, "python-basics-2021-xx-xx-2021-yy-yy"]], "Training Information": [[8, null], [198, null], [199, null], [201, null], [202, null], [203, null], [204, null], [206, null], [208, null], [209, null], [213, null], [216, null], [219, null], [222, null], [223, null], [224, null], [225, null], [229, null], [232, null], [241, null], [245, null], [248, null], [251, null], [253, null], [256, null], [259, null], [262, null], [271, null], [274, null], [281, null], [284, null]], "\u00dcberblick": [[8, "uberblick"], [206, "uberblick"], [216, "uberblick"], [225, "uberblick"], [241, "uberblick"], [253, "uberblick"]], "Log": [[8, "log"], [146, "log"], [198, "log"], [199, "log"], [202, "log"], [203, "log"], [211, "log"], [213, "log"], [214, "log"], [216, "log"], [219, "log"], [223, "log"], [225, "log"], [229, "log"], [232, "log"], [241, "log"], [253, "log"], [262, "log"]], "Tag 1": [[8, "tag-1"], [189, "tag-1"], [208, "tag-1"], [216, "tag-1"], [219, "tag-1"], [225, "tag-1"], [241, "tag-1"], [253, "tag-1"]], "Tag 2": [[8, "tag-2"], [189, "tag-2"], [208, "tag-2"], [216, "tag-2"], [219, "tag-2"], [225, "tag-2"], [241, "tag-2"], [253, "tag-2"]], "Live-Hacking (Jupyter Notebook)": [[8, "live-hacking-jupyter-notebook"], [206, "live-hacking-jupyter-notebook"], [216, "live-hacking-jupyter-notebook"], [219, "live-hacking-jupyter-notebook"], [229, "live-hacking-jupyter-notebook"]], "Links": [[8, "links"], [39, "links"], [146, "links"], [183, "Links"], [194, "links"], [199, "links"], [201, "links"], [203, "links"], [206, "links"], [213, "links"], [214, "links"], [216, "links"], [225, "links"], [229, "links"], [232, "links"], [235, "links"], [241, "links"], [248, "links"], [259, "links"], [262, "links"], [295, "links"], [301, "links"], [362, "links"], [440, "links"], [689, "links"], [710, "links"], [728, "links"], [739, "links"], [864, "links"], [885, "links"], [924, null], [931, "links"], [1047, null], [1077, null], [1078, "links"], [1139, "links"], [1141, "links"], [1142, "links"], [1144, "links"], [1145, "links"], [1146, "links"], [1147, "links"], [1159, "links"], [802, "links"]], "Programmierung Grundlagen (Jupyter Notebook)": [[9, "programmierung-grundlagen-jupyter-notebook"], [207, "programmierung-grundlagen-jupyter-notebook"], [217, "programmierung-grundlagen-jupyter-notebook"], [243, "programmierung-grundlagen-jupyter-notebook"], [255, "programmierung-grundlagen-jupyter-notebook"]], "Details": [[10, "details"], [79, "details"], [374, "details"]], "Course List": [[11, "course-list"]], "Contents": [[11, null], [24, null], [157, null], [159, null], [161, null], [162, null], [163, null], [164, null], [165, null], [166, null], [167, null], [168, null], [177, null], [186, null], [190, "contents"], [191, null], [463, "contents"], [565, null], [568, null], [574, null], [577, null], [665, "id1"], [854, "id1"], [874, "id1"], [893, "id1"], [899, "id1"], [902, "id1"], [919, "id1"], [927, "id1"], [928, "id1"], [935, "id1"], [944, "id1"], [960, "id1"], [962, "id1"], [964, "id1"], [979, "id1"], [989, null], [992, null], [1006, "id1"], [1026, null], [1081, "id1"], [1082, "id1"], [1086, "id1"], [1095, "id1"], [1109, "id1"], [1116, "id1"], [1163, null], [1165, null], [1168, null], [1176, "id2"], [1179, "contents"]], "Programmierung Grundlagen, anhand von Python (12. und 13.4.2021)": [[11, "programmierung-grundlagen-anhand-von-python-12-und-13-4-2021"], [375, "programmierung-grundlagen-anhand-von-python-12-und-13-4-2021"]], "Templates for Course Descriptions": [[12, "templates-for-course-descriptions"]], "Sidebar: Course Metadata": [[12, "sidebar-course-metadata"]], "About This Site": [[13, "about-this-site"]], "License: GPLv3": [[13, "license-gplv3"]], "Github": [[13, "github"], [357, "github"]], "Sphinx": [[13, "sphinx"], [67, "sphinx"]], "Installation Instructions": [[13, "installation-instructions"]], "pip and venv": [[13, null]], "Work in Progress": [[13, "work-in-progress"], [145, "work-in-progress"]], "More": [[13, "more"], [763, "more"]], "OpenTraining": [[14, "opentraining"]], "Draft Topics": [[15, "draft-topics"]], "Miscellaneous": [[16, "miscellaneous"], [144, "miscellaneous"], [155, "miscellaneous"], [182, "miscellaneous"], [202, "miscellaneous"], [266, "miscellaneous"], [267, "miscellaneous"], [287, "miscellaneous"], [301, "miscellaneous"], [312, "miscellaneous"], [313, "miscellaneous"], [316, "miscellaneous"], [323, "miscellaneous"], [326, "miscellaneous"], [560, "miscellaneous"], [560, "id1"], [696, "miscellaneous"], [961, "miscellaneous"], [974, "miscellaneous"], [759, "miscellaneous"]], "S5 Integration": [[17, "s5-integration"]], "Work in Progress: S5 Web Slides": [[17, "work-in-progress-s5-web-slides"]], "Implementation Notes": [[17, "implementation-notes"], [343, "implementation-notes"]], "Todo": [[17, "id1"], [159, null], [159, null], [159, null], [159, null], [159, null], [159, null], [159, null], [159, null], [159, null], [159, null], [159, null], [159, null], [159, null], [159, null], [159, null], [159, null], [159, null], [159, null], [159, null], [188, "id1"], [191, "id2"], [191, "id3"], [465, "todo"], [561, "id1"], [564, "id1"], [567, "id1"], [570, "id1"], [573, "id1"], [576, "id1"], [579, "id1"], [782, "id1"], [786, "id1"], [794, "id2"], [988, "id1"], [991, "id1"], [995, "id1"], [1162, "id1"], [1167, "id1"]], "S5 Slide Tests": [[18, "s5-slide-tests"]], "Level 1 Heading": [[19, "level-1-heading"]], "Level 2 Heading": [[19, "level-2-heading"]], "Level 2 Heading, Image": [[19, "level-2-heading-image"]], "Screencasts": [[20, "screencasts"]], "Topics to be Written": [[21, "topics-to-be-written"]], "New Topics to Write": [[21, "new-topics-to-write"]], "Netidee F\u00f6rderantrag": [[22, "netidee-forderantrag"]], "Netidee F\u00f6rderantrag: OpenTraining": [[23, "netidee-forderantrag-opentraining"]], "1. DATEN ANTRAGSTELLER_IN": [[23, "daten-antragsteller-in"]], "2. ALLGEMEINES": [[23, "allgemeines"]], "2.1 Projektname": [[23, "projektname"]], "2.2 Projekt-Untertitel": [[23, "projekt-untertitel"]], "2.3 Allgemeinverst\u00e4ndliche KURZbeschreibung des Projektes": [[23, "allgemeinverstandliche-kurzbeschreibung-des-projektes"]], "2.4 Anschlussf\u00f6rderung": [[23, "anschlussforderung"]], "3. DIE BESONDERE BEDEUTUNG IHRES PROJEKTES F\u00dcR DAS INTERNET (DIE INTERNETNUTZUNG) IN \u00d6STERREICH?": [[23, "die-besondere-bedeutung-ihres-projektes-fur-das-internet-die-internetnutzung-in-osterreich"]], "4. ZIELGRUPPE UND PROJEKTZIEL": [[23, "zielgruppe-und-projektziel"]], "5. L\u00d6SUNG": [[23, "losung"]], "5.1 Beschreibung der Probleml\u00f6sung": [[23, "beschreibung-der-problemlosung"]], "5.2 Wesentliche Elemente eines nachhaltigen Impact NACH netidee Projektende": [[23, "wesentliche-elemente-eines-nachhaltigen-impact-nach-netidee-projektende"]], "6. UMFELDANALYSE": [[23, "umfeldanalyse"]], "6.1 Was ist der Stand der Technik / Methode / des Wissens?": [[23, "was-ist-der-stand-der-technik-methode-des-wissens"]], "6.2 Welche andere L\u00f6sungen/Vorhaben zu den genannten Problemen gibt es schon?": [[23, "welche-andere-losungen-vorhaben-zu-den-genannten-problemen-gibt-es-schon"]], "7. ALLEINSTELLUNGSMERKMAL": [[23, "alleinstellungsmerkmal"]], "8. PROJEKTERGEBNISSE": [[23, "projektergebnisse"]], "8.1 Liste der Projektergebnisse": [[23, "liste-der-projektergebnisse"]], "8.2 Erforderliche Lizenzen Dritter": [[23, "erforderliche-lizenzen-dritter"]], "9. ERFOLGREICHER PROJEKTABSCHLUSS": [[23, "erfolgreicher-projektabschluss"]], "9.1 Ihre sonstigen Aktivit\u00e4ten im Projektbereich": [[23, "ihre-sonstigen-aktivitaten-im-projektbereich"]], "9.2 Angaben zur fachlichen Eignung der MitarbeiterInnen im Projektkernteam": [[23, "angaben-zur-fachlichen-eignung-der-mitarbeiterinnen-im-projektkernteam"]], "9.3 Erfahrung des/der vorgesehenen ProjektleiterIn": [[23, "erfahrung-des-der-vorgesehenen-projektleiterin"]], "9.4 Link zum maximal 2-min\u00fctigen Video des Projektkernteams": [[23, "link-zum-maximal-2-minutigen-video-des-projektkernteams"]], "9.5 Risiken": [[23, "risiken"]], "9.6 Erfolgskriterien am netidee-Projektende": [[23, "erfolgskriterien-am-netidee-projektende"]], "9.7 Angestrebter Impact 3 Jahre nach netidee-Projektende": [[23, "angestrebter-impact-3-jahre-nach-netidee-projektende"]], "10. UMSETZUNG (EINJ\u00c4HRIGES NETIDEE PROJEKT)": [[23, "umsetzung-einjahriges-netidee-projekt"]], "10.1 Wichtige Partner_innen": [[23, "wichtige-partner-innen"]], "10.2 Arbeitsschwerpunkte": [[23, "arbeitsschwerpunkte"]], "10.3 Wesentliche Ressourcen": [[23, "wesentliche-ressourcen"]], "10.4 Nutzer_innen-Kommunikationskan\u00e4le": [[23, "nutzer-innen-kommunikationskanale"]], "11. PROJEKTTERMINE": [[23, "projekttermine"]], "11.1 Termine Projektstart - Projektende": [[23, "termine-projektstart-projektende"]], "Projektstart": [[23, "projektstart"]], "12. KOSTEN UND FINANZIERUNG": [[23, "kosten-und-finanzierung"]], "12.1 Projektkosten": [[23, "projektkosten"]], "Personalkosten": [[23, "personalkosten"]], "Sonstige Kosten": [[23, "sonstige-kosten"]], "Gesamtkosten in \u20ac": [[23, "gesamtkosten-in"]], "12.2 Wir beantragen folgende netidee-F\u00f6rderung": [[23, "wir-beantragen-folgende-netidee-forderung"]], "13.3 Die restlichen Kosten werden finanziert durch": [[23, "die-restlichen-kosten-werden-finanziert-durch"]], "13. SONDERPREIS": [[23, "sonderpreis"]], "14. ERG\u00c4NZENDE ANGABEN": [[23, "erganzende-angaben"]], "14.1 Transparenz Mehrfachantr\u00e4ge": [[23, "transparenz-mehrfachantrage"]], "14.2 Nutzung der WhatAVenture-Plattform": [[23, "nutzung-der-whataventure-plattform"]], "14.3 Das eingereichte Projekt ist Teil einer schulischen Verpflichtung (z.B. HTL Diplomarbeit)": [[23, "das-eingereichte-projekt-ist-teil-einer-schulischen-verpflichtung-z-b-htl-diplomarbeit"]], "14.4 Wie haben Sie von der netidee erfahren? (Mehrfachnennungen m\u00f6glich)": [[23, "wie-haben-sie-von-der-netidee-erfahren-mehrfachnennungen-moglich"]], "16. DATENSCHUTZ": [[23, "datenschutz"]], "Video Screenplay": [[24, "video-screenplay"]], "The Problem And Me": [[24, "the-problem-and-me"]], "Open Source Training Material": [[24, "open-source-training-material"]], "Walk-Through": [[24, "walk-through"]], "Use Case: Custom Training, Subtract Known": [[25, "use-case-custom-training-subtract-known"]], "Use Case: Calculate Minimum Training Duration": [[26, "use-case-calculate-minimum-training-duration"]], "Use Cases": [[27, "use-cases"]], "Trainer": [[27, "trainer"]], "Editor": [[27, "editor"]], "End User (Training Audience)": [[27, "end-user-training-audience"]], "Use Case: Use Training Material From Other Sites": [[28, "use-case-use-training-material-from-other-sites"]], "Use Case: Menu to Choose From": [[29, "use-case-menu-to-choose-from"]], "Use Case: Slide Show Material as Plain-Text Files": [[30, "use-case-slide-show-material-as-plain-text-files"]], "Sending A V4L Camera Device Output Over SSH": [[31, "sending-a-v4l-camera-device-output-over-ssh"]], "Capture Video To File": [[31, "capture-video-to-file"]], "Play Video From Remote System, Using SSH": [[31, "play-video-from-remote-system-using-ssh"]], "Emoji Codes (sphinxemoji)": [[32, "emoji-codes-sphinxemoji"]], "Setup": [[32, "setup"], [274, "setup"], [281, "setup"], [284, "setup"], [294, "setup"], [295, "setup"], [299, "setup"], [300, "setup"], [301, "setup"], [322, "setup"], [323, "setup"], [328, "setup"], [329, "setup"], [334, "setup"], [922, "setup"], [1047, "setup"], [1158, "setup"], [338, "setup"], [339, "setup"]], "Most Used Here In This Site": [[32, "most-used-here-in-this-site"]], "All Codes": [[32, "all-codes"]], "Recipes": [[33, "recipes"]], "isoamsa.txt: Added Mathematical Symbols: Arrows": [[34, "isoamsa-txt-added-mathematical-symbols-arrows"]], "isoamsr.txt: Added Mathematical Symbols: Relations": [[35, "isoamsr-txt-added-mathematical-symbols-relations"]], "isonum.txt: Added Mathematical Symbols: Binary Operators": [[36, "isonum-txt-added-mathematical-symbols-binary-operators"]], "Layout Test Page": [[37, "layout-test-page"]], "Admonitions": [[37, "admonitions"]], "Admonition": [[37, "admonition"]], "This is an .. admonition::": [[37, null]], "Tip": [[37, "tip"]], "Note": [[37, "note"]], "Hint": [[37, "hint"]], "Important": [[37, "important"]], "Attention": [[37, "attention"]], "Caution": [[37, "caution"]], "Error": [[37, "error"]], "Danger": [[37, "danger"]], "Sidebar": [[37, "sidebar"]], "Blech Sidebar Title Blah": [[37, null]], "Sidebar \u201cKursdaten\u201d": [[37, "sidebar-kursdaten"]], "Kursdaten": [[37, null], [1172, null], [1173, null], [1174, null], [1175, null], [1180, null], [1182, null], [1183, null], [1187, null], [1188, null], [1189, null], [1190, null], [1192, null], [1193, null], [1194, null]], "Local Content": [[37, "local-content"]], "Local Heading 1": [[37, "local-heading-1"], [37, "id3"]], "Local Heading 1.1": [[37, "local-heading-1-1"], [37, "id4"]], "Local Heading 1.2": [[37, "local-heading-1-2"], [37, "id5"]], "Local Heading 2": [[37, "local-heading-2"], [37, "id6"]], "Sidebar with Local Content": [[37, "sidebar-with-local-content"]], "Bleh Content Blah": [[37, null]], "To Do": [[37, "to-do"]], "mmlalias.txt: MathML aliases for entities from other sets": [[38, "mmlalias-txt-mathml-aliases-for-entities-from-other-sets"]], "Most used": [[38, "id1"]], "All": [[38, "id2"]], "reStructuredText Cheat Sheet": [[39, "restructuredtext-cheat-sheet"]], "Further Information": [[39, "further-information"], [147, "further-information"], [222, "further-information"], [223, "further-information"], [245, "further-information"], [348, "further-information"], [357, "further-information"], [744, "further-information"]], "Local Documents": [[39, "local-documents"]], "External Links": [[39, "external-links"]], "Section References": [[39, "section-references"]], "Section That We Refer To": [[39, "section-that-we-refer-to"]], "Another Section Contains a Link To The Referred Section Above": [[39, "another-section-contains-a-link-to-the-referred-section-above"]], "Footnotes": [[39, "footnotes"]], "Sphinxish": [[40, "sphinxish"]], "Jupyter Notebooks": [[40, "jupyter-notebooks"]], "Running Sphinx From Source": [[40, "running-sphinx-from-source"]], "Seminar on \u201cClean Code\u201d (2022-04-13)": [[41, "seminar-on-clean-code-2022-04-13"]], "Seminar Agenda and Timeline": [[41, "seminar-agenda-and-timeline"]], "Live Hacking Before (Formal) Unit Testing": [[42, "live-hacking-before-formal-unit-testing"]], "Initial Structure": [[42, "initial-structure"]], "Snippets": [[42, null], [42, null], [42, null], [42, null], [42, null], [42, null], [44, null], [44, null], [50, null], [50, null]], "User": [[42, "user"]], "UserDB": [[42, "userdb"]], "bin/userdb-write-binaryfile.cpp": [[42, "bin-userdb-write-binaryfile-cpp"]], "Extend UserDB To Write": [[42, "extend-userdb-to-write"]], "Extend UserDB To Read From File, And Iterate": [[42, "extend-userdb-to-read-from-file-and-iterate"]], "Bug: Use \u201cFaschingbauer\u201d As Last Name": [[42, "bug-use-faschingbauer-as-last-name"]], "Wrap Up: What Do We Have?": [[42, "wrap-up-what-do-we-have"]], "Clean Code: Messages From The Book": [[43, "clean-code-messages-from-the-book"]], "Survey": [[43, null], [464, null]], "Names": [[43, "names"]], "Comments": [[43, "comments"]], "Formatting": [[43, "formatting"], [330, "Formatting"]], "Objects and Data Structures": [[43, "objects-and-data-structures"]], "Error Handling": [[43, "error-handling"], [943, "error-handling"]], "Boundaries": [[43, "boundaries"]], "Unit Tests": [[43, "unit-tests"], [541, "unit-tests"]], "Classes": [[43, "classes"], [221, "Classes"], [306, "classes"]], "Live Hacking: Switch To googletest": [[44, "live-hacking-switch-to-googletest"]], "Git Submodule": [[44, "git-submodule"]], "Establish Tests: Demo": [[44, "establish-tests-demo"]], "Straightforward main() Conversion": [[44, "straightforward-main-conversion"]], "Fix Shortcomings": [[44, "fix-shortcomings"]], "Is Software A Craft? Software Is A Craft!": [[45, "is-software-a-craft-software-is-a-craft"]], "09:00-09:15 Introductory Words": [[45, "introductory-words"]], "09:15-10:00 Software Engineering: A Discipline? (What Have We Established?)": [[45, "software-engineering-a-discipline-what-have-we-established"]], "10:00-10:15 Coffee Break": [[45, "coffee-break"]], "10:15-11:00 Establishing \u201cThe Project\u201d (Live Hacking, Slides)": [[45, "establishing-the-project-live-hacking-slides"]], "11:00-12:00 Enter Unit Testing Frameworks": [[45, "enter-unit-testing-frameworks"]], "12:00-13:00 Lunch Break": [[45, "lunch-break"]], "13:00-14:00 Cornerstones From The \u201cClean Code\u201d Book": [[45, "cornerstones-from-the-clean-code-book"]], "14:00-14:45 Keeping Code Clean In The Small": [[45, "keeping-code-clean-in-the-small"]], "14:45-15:00 Coffee Break": [[45, "id1"]], "15:00-23:59 \u201cExtreme Programming\u201d Session": [[45, "extreme-programming-session"]], "UserDB::find() Crashes If User Not Found": [[46, "userdb-find-crashes-if-user-not-found"]], "State": [[46, "state"]], "Bugs": [[47, "bugs"], [53, "bugs"]], "Existing Files Are Overwritten": [[48, "existing-files-are-overwritten"]], "UserDB::read(): What If Done Twice?": [[49, "userdb-read-what-if-done-twice"]], "UserDB: Alternative Output Format - CSV": [[50, "userdb-alternative-output-format-csv"]], "Write CSV: Test": [[50, "write-csv-test"]], "Write CSV: Frontend Program": [[50, "write-csv-frontend-program"], [50, "id1"]], "Read CSV: Test": [[50, "read-csv-test"]], "Features": [[51, "features"]], "Search By Other Indexes": [[52, "search-by-other-indexes"]], "Backlog: What Needs To Change, Or We Will All Die": [[53, "backlog-what-needs-to-change-or-we-will-all-die"]], "Refactoring After Featuritis": [[53, "refactoring-after-featuritis"]], "BackingStore Has Too Many Responsibilities \u27f6 Interface": [[54, "backingstore-has-too-many-responsibilities-longrightarrow-interface"]], "UserDB Has Too Many Responsibilities \u27f6 BackingStore": [[55, "userdb-has-too-many-responsibilities-longrightarrow-backingstore"]], "BackingStore": [[55, "backingstore"]], "Refactoring": [[56, "refactoring"], [542, "refactoring"], [833, "refactoring"]], "Load From BackingStore in Constructor": [[57, "load-from-backingstore-in-constructor"]], "UserDB::{read,write}(): bool, Really?": [[58, "userdb-read-write-bool-really"]], "GLT 2023 Submission: Pointless Blinking With Python, asyncio, and libgpiod (and a Raspberry Pi of Course)": [[59, "glt-2023-submission-pointless-blinking-with-python-asyncio-and-libgpiod-and-a-raspberry-pi-of-course"]], "Biography": [[59, "biography"], [60, "biography"], [63, "biography"]], "Abstract": [[59, "abstract"], [60, "abstract"], [63, "abstract"]], "Description": [[59, "description"], [60, "description"], [63, "description"], [495, "description"], [647, "description"], [663, "description"], [666, "description"], [668, "description"], [669, "description"], [670, "description"], [671, "description"], [672, "description"], [673, "description"], [674, "description"], [675, "description"], [677, "description"], [678, "description"]], "GLT 2024 Submission: Pointless Blinking: Evolution": [[60, "glt-2024-submission-pointless-blinking-evolution"]], "Pointless Blinking With Python, asyncio, and libgpiod (and a Raspberry Pi of Course)": [[61, "pointless-blinking-with-python-asyncio-and-libgpiod-and-a-raspberry-pi-of-course"]], "Installation Notes": [[62, "installation-notes"]], "libgpiod": [[62, "libgpiod"]], "Fedora: Prepare Tarballs": [[62, "fedora-prepare-tarballs"]], "On The Pi: Build And Install": [[62, "on-the-pi-build-and-install"]], "Submission: Pointless Blinking With Python, asyncio, and libgpiod (and a Raspberry Pi of Course)": [[63, "submission-pointless-blinking-with-python-asyncio-and-libgpiod-and-a-raspberry-pi-of-course"]], "Screenplay: Pointless Blinking With Python, asyncio, and libgpiod (and a Raspberry Pi of Course)": [[64, "screenplay-pointless-blinking-with-python-asyncio-and-libgpiod-and-a-raspberry-pi-of-course"]], "Setup Before Presentation": [[64, "setup-before-presentation"]], "Starting Point": [[64, "starting-point"], [692, "starting-point"]], "Greeting": [[64, "greeting"]], "Multiple Background Threads": [[64, "multiple-background-threads"]], "Enter asyncio": [[64, "enter-asyncio"]], "Character Device Based GPIO": [[64, "character-device-based-gpio"]], "GPIO Device": [[64, "gpio-device"]], "Most Basic Feature: Setting GPIO Values": [[64, "most-basic-feature-setting-gpio-values"]], "Entire Matrix On/Off": [[64, "entire-matrix-on-off"]], "Bringing All Together": [[64, "bringing-all-together"]], "Modularize": [[64, "modularize"]], "Play A Bit: Blink Entire Rows": [[64, "play-a-bit-blink-entire-rows"]], "Coroutines?": [[64, "coroutines"]], "Not Enough: sequence()": [[64, "not-enough-sequence"]], "Looping: forever()": [[64, "looping-forever"]], "A Stripped-Down Program (\u27f6 Factory)": [[64, "a-stripped-down-program-longrightarrow-factory"]], "Turn blink() Into A Factory": [[64, "turn-blink-into-a-factory"]], "Anti-Clumsy Decorator: blink() Wrapper": [[64, "anti-clumsy-decorator-blink-wrapper"]], "@program, Finally": [[64, "program-finally"]], "Playground: cycle()": [[64, "playground-cycle"]], "Fast Forward: any(), And Cancellation": [[64, "fast-forward-any-and-cancellation"]], "Playground: on()": [[64, "playground-on"]], "Goodbye": [[64, "goodbye"]], "Hochk\u00f6nig": [[65, "hochkonig"]], "K\u00f6nigsjodler (Klettersteig)": [[65, "konigsjodler-klettersteig"]], "Tour: Werfen - Ostpreussenh\u00fctte - Matrashaus - Werfen": [[65, "tour-werfen-ostpreussenhutte-matrashaus-werfen"]], "Blog": [[66, "blog"], [159, "blog"]], "Articles": [[66, "articles"]], "In the Works": [[66, "in-the-works"]], "Not Yet in the Works": [[66, "not-yet-in-the-works"]], "Revisit Existing Posts": [[66, "revisit-existing-posts"]], "pending_xref": [[67, "pending-xref"]], "C++": [[68, "c"], [111, "c"], [112, "c"], [159, "c"], [679, "c"]], "C++: Building with CMake": [[69, "c-building-with-cmake"]], "C++: Interfaces": [[70, "c-interfaces"]], "C++: OO Basics": [[71, "c-oo-basics"]], "C++: Unit Testing": [[72, "c-unit-testing"]], "Graph": [[73, "graph"], [665, "graph"], [826, "graph"], [1081, "graph"], [1082, "graph"], [1086, "graph"], [1095, "graph"], [1109, "graph"], [1116, "graph"]], "Embedded Computing 1": [[74, "embedded-computing-1"], [79, "embedded-computing-1"]], "Current Curriculum": [[74, "current-curriculum"], [75, "current-curriculum"]], "Topics": [[74, "topics"], [75, "topics"], [99, "topics"], [100, "topics"], [102, "topics"], [103, "topics"], [104, "topics"], [105, "topics"], [158, "topics"], [194, "topics"], [194, "id2"], [222, "topics"], [259, "topics"], [262, null], [361, "topics"], [365, "topics"], [462, "topics"], [590, "topics"], [627, "topics"], [633, "topics"], [637, "topics"], [645, "topics"], [650, "topics"], [655, "topics"], [679, "topics"], [680, "topics"], [684, "topics"], [691, "topics"], [698, "topics"], [709, "topics"], [722, "topics"], [723, "topics"], [733, "topics"], [738, "topics"], [771, "topics"], [775, "topics"], [777, "topics"], [779, "topics"], [937, "topics"], [955, null], [957, null], [957, null], [1003, "topics"], [1009, "topics"], [1010, "topics"], [1030, null], [1038, "topics"], [1133, "topics"], [1155, "topics"], [395, "topics"], [410, "topics"], [419, "topics"], [426, "topics"], [432, "topics"], [436, "topics"], [439, "topics"], [443, "topics"], [452, "topics"], [456, "topics"], [461, "topics"], [582, "topics"], [605, "topics"], [608, "topics"], [611, "topics"], [652, "topics"], [661, "topics"], [747, "topics"], [755, "topics"], [759, "topics"], [976, "topics"], [982, "topics"], [1143, "topics"], [1161, "topics"]], "Dependency Graph": [[74, "dependency-graph"], [75, "dependency-graph"]], "Embedded Computing 2": [[75, "embedded-computing-2"], [79, "embedded-computing-2"]], "EX: Race Conditions": [[76, "ex-race-conditions"]], "EX: Avoiding Race Condition": [[77, "ex-avoiding-race-condition"]], "Goals": [[77, "goals"], [83, "goals"], [84, "goals"], [85, "goals"], [86, "goals"], [88, "goals"], [89, "goals"], [90, "goals"], [92, "goals"]], "Outcome": [[77, "outcome"], [83, "outcome"], [84, "outcome"], [85, "outcome"], [86, "outcome"], [201, "outcome"]], "Git Introduction": [[78, "git-introduction"]], "Embedded Computing 2019": [[79, "embedded-computing-2019"]], "Overview": [[79, "overview"], [692, "overview"], [740, "overview"], [754, "overview"], [756, "overview"], [762, "overview"], [764, "overview"], [766, "overview"], [767, "overview"], [768, "overview"], [769, "overview"], [776, "overview"], [850, "overview"], [861, "overview"], [918, "overview"], [929, "overview"], [930, "overview"], [931, "overview"], [931, "id1"], [932, "overview"], [967, "overview"]], "Knowledge Transferred": [[79, "knowledge-transferred"]], "Course Setup": [[79, "course-setup"]], "Introduction to Linux and Unix": [[81, "introduction-to-linux-and-unix"]], "Linux Hardware Device Management": [[82, "linux-hardware-device-management"]], "EX: Averaging Sensor": [[83, "ex-averaging-sensor"]], "EX: Averaging Sensor (parallel)": [[84, "ex-averaging-sensor-parallel"]], "EX: LED Temperature Display": [[85, "ex-led-temperature-display"]], "Hardware": [[85, "hardware"], [86, "hardware"]], "EX: Temperature Sensors": [[86, "ex-temperature-sensors"], [93, "ex-temperature-sensors"]], "GPIO": [[87, "gpio"]], "sysfs Interface": [[87, "sysfs-interface"]], "gpiod Interface": [[87, "gpiod-interface"]], "Multithreading": [[88, "multithreading"], [180, "multithreading"], [240, "multithreading"], [266, "multithreading"], [267, "multithreading"], [269, "multithreading"], [312, "multithreading"], [313, "multithreading"], [316, "multithreading"], [326, "multithreading"], [365, "multithreading"], [372, "multithreading"], [996, "multithreading"], [1032, "multithreading"], [755, "multithreading"]], "Avoiding Race Conditions: Semaphore/Mutex": [[89, "avoiding-race-conditions-semaphore-mutex"]], "Communication: Waiting for Something": [[90, "communication-waiting-for-something"]], "Python Basics": [[91, "python-basics"]], "EX: Averaging Sensor, Display": [[92, "ex-averaging-sensor-display"]], "Simple Web Programming": [[94, "simple-web-programming"]], "Sensors Web Pages": [[95, "sensors-web-pages"]], "Embedded Computing 2020": [[97, "embedded-computing-2020"]], "SS2022": [[98, "ss2022"]], "Block 1: Linux, and Working With Remote/Embedded Devices": [[98, "block-1-linux-and-working-with-remote-embedded-devices"], [124, "block-1-linux-and-working-with-remote-embedded-devices"]], "Block 2: C on Linux: Local and Cross Development": [[98, "block-2-c-on-linux-local-and-cross-development"], [124, "block-2-c-on-linux-local-and-cross-development"]], "Block 3: C++": [[98, "block-3-c"], [124, "block-3-c"]], "2022-03-08": [[99, "id1"]], "Homework": [[99, "homework"], [100, "homework"], [102, "homework"], [105, "homework"]], "2022-03-10": [[100, "id1"]], "2022-03-10 (Homework until 2022-03-21)": [[101, "homework-until-2022-03-21"]], "From Exercises: Create/Copy/Move/Remove": [[101, "from-trainings-material-soup-linux-basics-shell-exercises-cp-mv-mkdir-rm-group"]], "From  Exercises: The ls Command": [[101, "from-trainings-material-soup-linux-basics-shell-exercises-ls-group"]], "2022-03-21": [[102, "id1"]], "2022-03-22, 2022-03-24 (KU)": [[103, "ku"]], "2022-03-28": [[104, "id1"]], "2022-04-01": [[105, "id1"]], "SS2022: Logs": [[106, "ss2022-logs"]], "WS2022": [[107, "ws2022"]], "Plan: Evolution": [[107, "plan-evolution"]], "FH Joanneum (Embedded Computing): WS2022/2023 (Questions About Code)": [[108, "fh-joanneum-embedded-computing-ws2022-2023-questions-about-code"]], "Question 1: C++ Inheritance": [[108, "question-1-c-inheritance"]], "Question 2: C++ Inheritance": [[108, "question-2-c-inheritance"]], "Question 3: Memory Leak": [[108, "question-3-memory-leak"]], "Question 4: std::vector": [[108, "question-4-std-vector"]], "FH Joanneum (Embedded Computing): WS2022/2023 (Yes/No Questions)": [[109, "fh-joanneum-embedded-computing-ws2022-2023-yes-no-questions"]], "Cross Development": [[109, "cross-development"], [278, "cross-development"], [1002, "cross-development"], [1003, "cross-development"]], "C++, OO": [[109, "c-oo"]], "Lab Exam 2023-01-17": [[110, "lab-exam-2023-01-17"]], "Project Setup": [[110, "project-setup"], [540, "project-setup"], [1110, "project-setup"]], "Exercises": [[110, "exercises"], [177, "exercises"], [182, "exercises"], [214, "exercises"], [224, "exercises"], [224, "id1"], [224, "id3"], [282, "Exercises"], [287, "exercises"], [306, "exercises"], [306, "id1"], [309, "exercises"], [313, "exercises"], [493, "exercises"], [495, "exercises"], [502, "exercises"], [530, "exercises"], [547, "exercises"], [549, "exercises"], [590, "exercises"], [655, "exercises"], [679, "exercises"], [775, "exercises"], [1009, "exercises"], [1038, "exercises"], [1082, "exercises"], [605, "exercises"]], "Exam Submission": [[110, "exam-submission"]], "SS2023: Exam 2023-06-30 (Handout)": [[111, "ss2023-exam-2023-06-30-handout"]], "UNIX/Linux Concepts": [[111, "unix-linux-concepts"], [112, "unix-linux-concepts"]], "Toolchain": [[111, "toolchain"], [112, "toolchain"]], "SS2023: Exam 2023-06-30 (Solved)": [[112, "ss2023-exam-2023-06-30-solved"]], "WS2023/2024: Exam 2024-02-02 (Sample)": [[114, "ws2023-2024-exam-2024-02-02-sample"]], "Question 1": [[114, "question-1"], [117, "question-1"]], "Question 1.1": [[114, "question-1-1"]], "Question 1.2": [[114, "question-1-2"]], "Question 2": [[114, "question-2"], [117, "question-2"]], "Question 2.1": [[114, "question-2-1"]], "Question 2.2 (Why?)": [[114, "question-2-2-why"]], "Question 3": [[114, "question-3"]], "Exam Preparation WS2023/2024": [[115, "exam-preparation-ws2023-2024"]], "Questions 2024": [[116, "questions-2024"]], "const Objects": [[117, "const-objects"]], "Parameter Passing": [[118, "parameter-passing"]], "Question 1: Which One Is Better?": [[118, "question-1-which-one-is-better"]], "Question2: Why?": [[118, "question2-why"]], "SOLID: Hysteresis With Display": [[119, "solid-hysteresis-with-display"]], "SOLID: Sensor Has ID": [[120, "solid-sensor-has-id"]], "To Be Or Not To Be Virtual": [[121, "to-be-or-not-to-be-virtual"]], "Program Output, Version 1": [[121, "program-output-version-1"]], "Program Output, Version 2": [[121, "program-output-version-2"]], "Working with Git In Our FH-ECE21 Project": [[122, "working-with-git-in-our-fh-ece21-project"]], "Forks And Pull Requests": [[122, "forks-and-pull-requests"]], "Multiple Pull Requests: Pulling Upstream Changes (\u201cSyncing\u201d A Fork)": [[122, "multiple-pull-requests-pulling-upstream-changes-syncing-a-fork"]], "Creating A Remote for Upstream (Done Only Once)": [[122, "creating-a-remote-for-upstream-done-only-once"]], "Updating The Fork (\u201cSyncing\u201d It From Its Upstream)": [[122, "updating-the-fork-syncing-it-from-its-upstream"]], "Fetch upstream Into Your Clone": [[122, "fetch-upstream-into-your-clone"]], "Merge upstream/main Into Local main": [[122, "merge-upstream-main-into-local-main"]], "Push Into Fork On Github": [[122, "push-into-fork-on-github"]], "Embedded Computing 2021": [[123, "embedded-computing-2021"]], "SS2023": [[124, "ss2023"]], "Finish: Written Exam": [[124, "finish-written-exam"]], "(DONE) Boiling Pot (The Beginning)": [[125, "done-boiling-pot-the-beginning"]], "Standup Records": [[125, "standup-records"], [126, "standup-records"], [127, "standup-records"], [128, "standup-records"], [129, "standup-records"], [133, "standup-records"], [137, "standup-records"], [141, "standup-records"]], "2023-11-20": [[125, "id1"], [129, "id1"], [137, "id1"], [141, "id1"]], "2023-12-14": [[125, "id2"], [126, "id1"], [129, "id2"], [137, "id2"]], "Requirements": [[125, "requirements"], [126, "requirements"], [127, "requirements"], [128, "requirements"], [129, "requirements"], [130, "requirements"], [131, "requirements"], [132, "requirements"], [133, "requirements"], [135, "requirements"], [137, "requirements"], [141, "requirements"], [482, "requirements"], [506, "requirements"], [537, "requirements"]], "Implementation": [[125, "implementation"], [129, "implementation"], [130, "implementation"], [132, "implementation"], [135, "implementation"], [137, "implementation"], [141, "implementation"], [541, "implementation"]], "Testing": [[125, "testing"], [129, "testing"], [130, "testing"], [132, "testing"], [135, "testing"], [137, "testing"], [141, "testing"], [280, "testing"]], "Future (Not Part Of This Development Cycle)": [[125, "future-not-part-of-this-development-cycle"], [129, "future-not-part-of-this-development-cycle"], [130, "future-not-part-of-this-development-cycle"], [132, "future-not-part-of-this-development-cycle"], [135, "future-not-part-of-this-development-cycle"], [137, "future-not-part-of-this-development-cycle"], [141, "future-not-part-of-this-development-cycle"]], "Dependencies": [[125, "dependencies"], [126, "dependencies"], [127, "dependencies"], [128, "dependencies"], [129, "dependencies"], [130, "dependencies"], [131, "dependencies"], [132, "dependencies"], [133, "dependencies"], [134, "dependencies"], [135, "dependencies"], [136, "dependencies"], [137, "dependencies"], [141, "dependencies"], [343, "dependencies"], [344, "dependencies"], [345, "dependencies"], [346, "dependencies"], [348, "dependencies"], [471, "dependencies"], [488, "dependencies"], [502, "dependencies"], [530, "dependencies"], [547, "dependencies"], [549, "dependencies"], [560, "dependencies"], [627, "dependencies"], [633, "dependencies"], [637, "dependencies"], [645, "dependencies"], [647, "dependencies"], [650, "dependencies"], [655, "dependencies"], [663, "dependencies"], [664, "dependencies"], [666, "dependencies"], [668, "dependencies"], [669, "dependencies"], [670, "dependencies"], [671, "dependencies"], [672, "dependencies"], [673, "dependencies"], [674, "dependencies"], [675, "dependencies"], [676, "dependencies"], [677, "dependencies"], [678, "dependencies"], [684, "dependencies"], [691, "dependencies"], [698, "dependencies"], [709, "dependencies"], [733, "dependencies"], [738, "dependencies"], [763, "dependencies"], [852, "dependencies"], [853, "dependencies"], [854, "dependencies"], [858, "dependencies"], [872, "dependencies"], [873, "dependencies"], [874, "dependencies"], [893, "dependencies"], [898, "dependencies"], [899, "dependencies"], [902, "dependencies"], [935, "dependencies"], [937, "dependencies"], [944, "dependencies"], [950, "dependencies"], [952, "dependencies"], [960, "dependencies"], [962, "dependencies"], [964, "dependencies"], [979, "dependencies"], [1003, "dependencies"], [1005, "dependencies"], [1006, "dependencies"], [1009, "dependencies"], [1010, "dependencies"], [1031, "dependencies"], [1033, "dependencies"], [1079, "dependencies"], [1080, "dependencies"], [1083, "dependencies"], [1084, "dependencies"], [1085, "dependencies"], [1087, "dependencies"], [1088, "dependencies"], [1089, "dependencies"], [1090, "dependencies"], [1091, "dependencies"], [1092, "dependencies"], [1096, "dependencies"], [1097, "dependencies"], [1098, "dependencies"], [1099, "dependencies"], [1100, "dependencies"], [1102, "dependencies"], [1103, "dependencies"], [1104, "dependencies"], [1105, "dependencies"], [1106, "dependencies"], [1107, "dependencies"], [1108, "dependencies"], [1110, "dependencies"], [1111, "dependencies"], [1112, "dependencies"], [1113, "dependencies"], [1114, "dependencies"], [1115, "dependencies"], [1117, "dependencies"], [1118, "dependencies"], [1119, "dependencies"], [1120, "dependencies"], [1133, "dependencies"], [1136, "dependencies"], [1139, "dependencies"], [1155, "dependencies"], [976, "dependencies"], [1143, "dependencies"], [1161, "dependencies"]], "Boiling Pot: Basic Integration": [[126, "boiling-pot-basic-integration"]], "Boiling Pot: Display, And Status Reporting": [[127, "boiling-pot-display-and-status-reporting"]], "Boiling Pot: Full Integration (Display And IoT)": [[128, "boiling-pot-full-integration-display-and-iot"]], "(DONE) Data Logger": [[129, "done-data-logger"]], "Data Logger: CSV Sink": [[130, "data-logger-csv-sink"]], "Column name configuration": [[130, "column-name-configuration"]], "output()": [[130, "output"]], "Data Logger: Integration": [[131, "data-logger-integration"]], "Data Logger: MQTT Sink": [[132, "data-logger-mqtt-sink"]], "MQTT Implementation: mosquitto": [[132, "mqtt-implementation-mosquitto"]], "Installation": [[132, "installation"], [377, "installation"], [942, "installation"], [1077, "installation"], [1139, "installation"], [1163, "installation"]], "Wrapper": [[132, "wrapper"]], "Display Interface/Infrastructure": [[133, "display-interface-infrastructure"]], "New Interface PercentageDisplay": [[133, "new-interface-percentagedisplay"]], "Existing Implementations": [[133, "existing-implementations"]], "Composite Display": [[133, "composite-display"]], "Testing: Breadboard Acrobatics, Demo Program": [[133, "testing-breadboard-acrobatics-demo-program"]], "WS2023/24: Group Project - Tasks": [[134, "ws2023-24-group-project-tasks"]], "Tasks": [[134, "tasks"], [142, "tasks"], [983, "tasks"]], "Datalogger": [[134, "datalogger"], [142, "datalogger"]], "Boiling Pot": [[134, "boiling-pot"], [142, "boiling-pot"]], "Peripherals": [[134, "peripherals"], [142, "peripherals"]], "Client": [[134, "client"], [1139, "client"]], "libgpiod Switch": [[135, "libgpiod-switch"]], "Python MQTT Subscriber": [[136, "python-mqtt-subscriber"]], "Notes": [[136, "notes"], [482, "notes"]], "Temperature Display: LED Via A PWM Controller": [[137, "temperature-display-led-via-a-pwm-controller"]], "(DONE) Sensor Interface": [[138, "done-sensor-interface"]], "(DONE) Onewire Sensor": [[139, "done-onewire-sensor"]], "(DONE) Switch Interface": [[140, "done-switch-interface"]], "SysFS GPIO Switch": [[141, "sysfs-gpio-switch"], [142, "sysfs-gpio-switch"]], "WS2023/24": [[142, "ws2023-24"]], "2023-10-05 (6 VO)": [[142, "vo"]], "OO: Recap": [[142, "oo-recap"]], "Plan \ud83d\udcaa": [[142, "plan-muscle"]], "OO: Polymorphism": [[142, "oo-polymorphism"]], "Git Collaboration (via Github, but not necessarily): Forks And Pull Request": [[142, "git-collaboration-via-github-but-not-necessarily-forks-and-pull-request"]], "Tasks, First Round": [[142, "tasks-first-round"]], "2023-11-03 (6 VO)": [[142, "id1"]], "Organizational": [[142, "organizational"]], "OO: Design?": [[142, "oo-design"]], "Project": [[142, "project"], [142, "id3"], [142, "id5"], [142, "id7"], [142, "id9"], [142, "id11"], [142, "id13"], [142, "id15"], [142, "id17"], [182, "project"]], "Hardware Overview": [[142, "hardware-overview"]], "2023-11-09 (3 VO)": [[142, "id2"]], "2023-11-10 (3 VO)": [[142, "id4"]], "2023-11-17 (3 VO)": [[142, "id6"]], "OO, And Software Development At Large": [[142, "oo-and-software-development-at-large"]], "Updating A Fork From Upstream": [[142, "updating-a-fork-from-upstream"]], "2023-11-20 (6 VO)": [[142, "id8"]], "Container Templates (std::map)": [[142, "container-templates-std-map"]], "New Tasks: MQTT And CSV Sink Implementations": [[142, "new-tasks-mqtt-and-csv-sink-implementations"]], "Datalogger Pull Request": [[142, "datalogger-pull-request"]], "Boiling Pot, Switches": [[142, "boiling-pot-switches"]], "2023-12-07 (6 VO)": [[142, "id10"]], "Structure": [[142, "structure"], [159, "structure"], [525, "structure"]], "Renames": [[142, "renames"]], "2023-12-14 (6 VO)": [[142, "id12"]], "2024-01-08 (6 VO)": [[142, "id14"]], "2024-01-11 (6 VO)": [[142, "id16"]], "2024-02-02 (Exam)": [[142, "exam"]], "Relevant Topics": [[142, "relevant-topics"]], "A Sample Exam": [[142, "a-sample-exam"]], "Embedded Computing (FH Joanneum Graz)": [[143, "embedded-computing-fh-joanneum-graz"]], "Git Notes": [[144, "git-notes"]], "Bring Local Branch Upstream": [[144, "bring-local-branch-upstream"]], "Create Remote Tracking Branch": [[144, "create-remote-tracking-branch"]], "Create, Submit, Apply Patches": [[144, "create-submit-apply-patches"]], "Packaging this Site on PyPI": [[146, "packaging-this-site-on-pypi"]], "Audio Chip Bringup": [[147, "audio-chip-bringup"]], "Goal": [[147, "goal"], [149, "goal"], [150, "goal"], [152, "goal"], [287, "goal"], [289, "goal"], [1176, "goal"], [1179, "goal"]], "Findings": [[147, "findings"]], "Get Debian 10 Kernel Config": [[148, "get-debian-10-kernel-config"]], "Run Debian within Qemu": [[148, "run-debian-within-qemu"]], "Extract Kernel Config from /boot": [[148, "extract-kernel-config-from-boot"]], "Finish: Debian Kernel Package etc.": [[149, "finish-debian-kernel-package-etc"]], "Yocto Kernel Bringup on Customer Hardware": [[150, "yocto-kernel-bringup-on-customer-hardware"]], "Open Questions: Everything Works Like Before?": [[150, "open-questions-everything-works-like-before"]], "I2S Audio for a Kontron SMARC Module": [[151, "i2s-audio-for-a-kontron-smarc-module"]], "Dirty Upgrade Path": [[152, "dirty-upgrade-path"]], "Steps": [[152, "steps"]], "Wait for Customer Hardware": [[153, "wait-for-customer-hardware"]], "Extract Kernel from Intel Yocto BSP": [[154, "extract-kernel-from-intel-yocto-bsp"]], "Python Training Improvements": [[155, "python-training-improvements"]], "Beginner Course": [[155, "beginner-course"]], "Exercise Structure": [[155, "exercise-structure"]], "Split Exercises": [[155, "split-exercises"]], "Creating Screencasts": [[156, "creating-screencasts"]], "OpenShot": [[156, "openshot"]], "SEO": [[157, "seo"]], "Sitemap": [[157, "sitemap"]], "Meta Information": [[157, "meta-information"]], "Courses": [[157, "courses"]], "Stacks (Hanging)": [[158, "stacks-hanging"]], "DBus (New Topic)": [[158, "dbus-new-topic"]], "Finish Meta/SEO and Stuff": [[158, "finish-meta-seo-and-stuff"]], "Miscellaneous To Do": [[159, "miscellaneous-to-do"]], "Extensions": [[159, "extensions"]], "reST Todos": [[159, "rest-todos"]], "Styling": [[159, "styling"]], "Convert to RST/S5": [[159, "convert-to-rst-s5"]], "Examples": [[159, "examples"], [486, "examples"], [686, "examples"], [734, "examples"], [849, "examples"], [951, null]], "Convert Existing Content": [[159, "convert-existing-content"]], "Add Missing": [[159, "add-missing"]], "References, Past Trainings": [[159, "references-past-trainings"]], "About": [[159, "about"]], "Learning The Web": [[160, "learning-the-web"]], "Beagleboard: How to Repair NAND (also known as 40W)": [[161, "beagleboard-how-to-repair-nand-also-known-as-40w"]], "Basics": [[161, "basics"], [232, "basics"], [259, "basics"], [274, "basics"], [294, "basics"], [295, "basics"], [295, "id1"], [300, "basics"], [301, "basics"], [301, "id1"], [322, "basics"], [328, "basics"], [334, "basics"], [335, "basics"], [352, "Basics"], [420, "basics"], [606, "basics"], [618, "basics"], [638, "basics"], [736, "basics"], [851, "basics"], [967, "basics"], [1075, "basics"], [338, "basics"], [339, "basics"]], "Getting X-Loader and U-Boot": [[161, "getting-x-loader-and-u-boot"]], "Creating a Bootable MMC/SD card": [[161, "creating-a-bootable-mmc-sd-card"]], "Repairing the NAND": [[161, "repairing-the-nand"]], "Writing X-Loader to NAND": [[161, "writing-x-loader-to-nand"]], "Writing U-Boot to NAND": [[161, "writing-u-boot-to-nand"]], "Porting to Linux (There\u2019s Always A Better Way)": [[162, "porting-to-linux-there-s-always-a-better-way"]], "Processes are Threads": [[162, "processes-are-threads"]], "Signals Aren\u2019t Messages": [[162, "signals-aren-t-messages"]], "References": [[162, null], [162, null], [162, null], [234, "References"], [237, "References"], [597, "references"]], "Message Queues aren\u2019t Message Queues": [[162, "message-queues-aren-t-message-queues"]], "Semaphores and Mutexes": [[162, "semaphores-and-mutexes"]], "Timers": [[162, "timers"]], "Polling": [[162, "polling"]], "Event Dispatching": [[162, "event-dispatching"]], "Interrupts": [[162, "interrupts"], [808, "interrupts"]], "Realtime": [[162, "realtime"], [985, "realtime"], [1171, "realtime"]], "Saving Solid State Disk Life (Gentoo)": [[163, "saving-solid-state-disk-life-gentoo"]], "Rant": [[163, "rant"], [183, "Rant"], [1001, null]], "No Swap": [[163, "no-swap"]], "tmpfs instances here and there": [[163, "tmpfs-instances-here-and-there"]], "Syslog, /var/log/messages": [[163, "syslog-var-log-messages"]], "Mountpoint for messages": [[163, "mountpoint-for-messages"]], "Logrotate": [[163, "logrotate"]], "Kernel I/O Scheduler": [[163, "kernel-i-o-scheduler"]], "Use RAM for the Kernel Build": [[163, "use-ram-for-the-kernel-build"]], "Things that are left": [[163, "things-that-are-left"]], "\u201cWhy ps Sucks\u201d or \u201cCounting Memory Consumption\u201d": [[164, "why-ps-sucks-or-counting-memory-consumption"]], "Process Stack Management": [[164, "process-stack-management"]], "Conclusion": [[164, "conclusion"], [164, "id1"], [922, "conclusion"], [930, "conclusion"]], "Thread (pthread) Stack Management": [[164, "thread-pthread-stack-management"]], "Experiment #1: 100 default threads, eating no stack": [[164, "experiment-1-100-default-threads-eating-no-stack"]], "Experiment #2: 100 default threads, eating up stack": [[164, "experiment-2-100-default-threads-eating-up-stack"]], "Experiment #3: 100 threads with limited stack": [[164, "experiment-3-100-threads-with-limited-stack"]], "Experiment #4: more threads than my system could take (eat no stack)": [[164, "experiment-4-more-threads-than-my-system-could-take-eat-no-stack"]], "Experiment #5: more threads than my system could take (eat stack)": [[164, "experiment-5-more-threads-than-my-system-could-take-eat-stack"]], "How does this work?": [[164, "how-does-this-work"]], "Realtime is different": [[164, "realtime-is-different"]], "Patching and Building the Fedora Kernel": [[165, "patching-and-building-the-fedora-kernel"]], "Why?": [[165, "why"], [938, "why"], [1020, "why"]], "Find Kernel Source (Git), Fix It, and Create Patch": [[165, "find-kernel-source-git-fix-it-and-create-patch"]], "Link": [[165, null], [165, null]], "Prepare the RPM Build": [[165, "prepare-the-rpm-build"]], "Install Prerequisites": [[165, "install-prerequisites"]], "Setup rpmbuild Directory": [[165, "setup-rpmbuild-directory"]], "Download and Install Source RPM For Crashing Kernel": [[165, "download-and-install-source-rpm-for-crashing-kernel"]], "Apply the Patch": [[165, "apply-the-patch"]], "Build the Kernel RPMs": [[165, "build-the-kernel-rpms"]], "Install Kernel": [[165, "install-kernel"]], "Adding a Custom Domain to a Github Pages Project Site": [[166, "adding-a-custom-domain-to-a-github-pages-project-site"]], "Configure a Subdomain, www.faschingbauer.me": [[166, "configure-a-subdomain-www-faschingbauer-me"]], "Configure an Apex Domain, faschingbauer.me": [[166, "configure-an-apex-domain-faschingbauer-me"]], "Using Microsoft Teams on Linux": [[167, "using-microsoft-teams-on-linux"]], "Screen Sharing: X11 Revival": [[167, "screen-sharing-x11-revival"]], "RPM Package (Meh!)": [[167, "rpm-package-meh"]], "Updated on 2020-04-09": [[167, null]], "Annoyance #1: Keeps Running in Background": [[167, "annoyance-1-keeps-running-in-background"]], "Annoyance #2: (Re)Registers Itself For Autostart": [[167, "annoyance-2-re-registers-itself-for-autostart"]], "Run In Browser (My Recommendation)": [[167, "run-in-browser-my-recommendation"]], "Deploying Sphinx Generated Documentation to Github Pages": [[168, "deploying-sphinx-generated-documentation-to-github-pages"]], "Create \u201cSite Publication Repo\u201d": [[168, "create-site-publication-repo"]], "Configure Github Pages for jfasch-home-pages": [[168, "configure-github-pages-for-jfasch-home-pages"]], "Time for Deployment": [[168, "time-for-deployment"]], "Using BigBlueButton for Online Training": [[169, "using-bigbluebutton-for-online-training"]], "In this Article": [[169, null], [170, null], [172, null]], "TL;DR": [[169, "tl-dr"]], "Background Information": [[169, "background-information"]], "Hosting Setup": [[169, "hosting-setup"]], "BigBlueButton Installation": [[169, "bigbluebutton-installation"]], "Functionality Check": [[169, "functionality-check"]], "What Else?": [[169, "what-else"], [925, "what-else"], [938, "what-else"]], "Traunstein via Zierlersteig": [[170, "traunstein-via-zierlersteig"]], "Kaltenbachwildnis": [[170, "kaltenbachwildnis"]], "Anstieg auf den Zierlerberg": [[170, "anstieg-auf-den-zierlerberg"]], "Die Rinne": [[170, "die-rinne"]], "Abstieg": [[170, "abstieg"]], "Grintovec (via Plan\u0161arsko Jezero, \u010ce\u0161ka Ko\u010da)": [[171, "grintovec-via-plansarsko-jezero-ceska-koca"]], "Anreise": [[171, "anreise"]], "\u010ce\u0161ka Ko\u010da": [[171, "ceska-koca"]], "Hinauf": [[171, "hinauf"]], "Runter": [[171, "runter"]], "Zusammenfassung": [[171, "zusammenfassung"]], "How to Brick a \u20ac1399 Dell XPS 13": [[172, "how-to-brick-a-1399-dell-xps-13"]], "What Happened?": [[172, "what-happened"]], "VirtualBox, Fedora, and Secure Boot": [[172, "virtualbox-fedora-and-secure-boot"]], "Enrolling Machine Owner Key (MOK)": [[172, "enrolling-machine-owner-key-mok"]], "Generate Key Pair": [[172, "generate-key-pair"]], "Stage Key for Enrollment": [[172, "stage-key-for-enrollment"]], "Reboot, Brick": [[172, "reboot-brick"]], "Diagnostics": [[172, "diagnostics"]], "Building A Cross Toolchain For The Raspberry Pi, Using crosstool-ng": [[173, "building-a-cross-toolchain-for-the-raspberry-pi-using-crosstool-ng"], [1012, "building-a-cross-toolchain-for-the-raspberry-pi-using-crosstool-ng"]], "Why This Article? Why Not Use A Prebuilt Toolchain?": [[173, "why-this-article-why-not-use-a-prebuilt-toolchain"]], "Installing crosstool-ng": [[173, "installing-crosstool-ng"]], "Prerequisites": [[173, "prerequisites"], [1078, "prerequisites"]], "Installing From Cloned Git Repository": [[173, "installing-from-cloned-git-repository"]], "Installing From Release Tarball": [[173, "installing-from-release-tarball"]], "PATH, And Basic Test": [[173, "path-and-basic-test"]], "Configure Toolchain Build": [[173, "configure-toolchain-build"]], "Base Configuration For The Raspberry": [[173, "base-configuration-for-the-raspberry"]], "Important: glibc Version": [[173, "important-glibc-version"]], "The Error": [[173, "the-error"], [173, "id4"]], "The Fix": [[173, "the-fix"], [173, "id5"]], "Important: GCC Version": [[173, "important-gcc-version"]], "Toolchain Build/Install": [[173, "toolchain-build-install"]], "Test": [[173, "test"], [805, "test"]], "Simplest: C, <stdio.h>": [[173, "simplest-c-stdio-h"]], "C++, <iostream>": [[173, "c-iostream"]], "C++, <thread>": [[173, "c-thread"]], "Packaging/Distributing The Toolchain": [[173, "packaging-distributing-the-toolchain"]], "Afterword": [[173, "afterword"]], "Posts": [[174, "posts"]], "Linux und Open Source": [[175, "linux-und-open-source"]], "Schulung": [[175, "schulung"]], "Entwicklung": [[175, "entwicklung"]], "Beratung": [[175, "beratung"]], "Richtlinien zur Ver\u00f6ffentlichung von Kursmaterial": [[176, "richtlinien-zur-veroffentlichung-von-kursmaterial"]], "Installing Git": [[177, "installing-git"]], "Windows": [[177, "windows"]], "Workflow": [[177, "workflow"]], "Cloning the Repository": [[177, "cloning-the-repository"]], "Exercise Time": [[177, "exercise-time"]], "Conflicts": [[177, "conflicts"]], "Trainer\u2019s Notes": [[177, "trainer-s-notes"]], "Courses: Overview": [[178, "courses-overview"]], "Online Trainings": [[178, null]], "Individual Trainings": [[178, null]], "Everything About Linux": [[178, "everything-about-linux"]], "Programming Languages": [[178, "programming-languages"]], "Miscellaneous but Related": [[178, "miscellaneous-but-related"]], "Qualivision, Z\u00fcrich, 1.10.2013": [[179, "qualivision-zurich-1-10-2013"]], "Fragen und Antworten": [[179, "fragen-und-antworten"]], "Kursnotizen: Linux Embedded 2015-11-30": [[180, "kursnotizen-linux-embedded-2015-11-30"]], "GPIOs in Userspace": [[180, "gpios-in-userspace"]], "CAN Bus": [[180, "can-bus"], [201, "can-bus"]], "Driver Beispiele": [[180, "driver-beispiele"]], "Heizungssteuerung": [[180, "heizungssteuerung"]], "Live Hacking": [[181, "Live-Hacking"], [622, "live-hacking"], [623, "live-hacking"], [625, "live-hacking"], [626, "live-hacking"], [629, "live-hacking"], [630, "live-hacking"], [631, "live-hacking"], [643, "live-hacking"]], "Strings k\u00f6nnen viel: split()": [[181, "Strings-k\u00f6nnen-viel:-split()"]], "Mutability, Immutability: kann man nicht oft genug wiederholen": [[181, "Mutability,-Immutability:-kann-man-nicht-oft-genug-wiederholen"]], "Dictionaries": [[181, "Dictionaries"], [210, "Dictionaries"], [282, "Dictionaries"], [296, "Dictionaries"], [352, "Dictionaries"], [1071, "dictionaries"]], "\u201cHartes\u201d Indizieren \u2026": [[181, "%22Hartes%22-Indizieren-..."]], "\u201cWeiches\u201d Nettfragen \u2026": [[181, "%22Weiches%22-Nettfragen-..."]], "Shortcuts": [[181, "Shortcuts"]], "Objektorientierte Programmierung": [[181, "Objektorientierte-Programmierung"]], "Inheritance": [[181, "Inheritance"], [221, "Inheritance"], [1039, "inheritance"]], "Date and Time and Time Deltas - datetime": [[181, "Date-and-Time-and-Time-Deltas---datetime"]], "Bissl potschert zum Schreiben is scho \u2026 (andere Formen von import)": [[181, "Bissl-potschert-zum-Schreiben-is-scho-...-(andere-Formen-von-import)"]], "String Representations: __str__()": [[181, "String-Representations:-__str__()"]], "subprocess": [[181, "subprocess"], [260, "subprocess"]], "enumerate(), zip()": [[181, "enumerate(),-zip()"]], "List Comprehension": [[181, "List-Comprehension"], [205, "List-Comprehension"], [244, "List-Comprehension"], [314, "List-Comprehension"], [324, "List-Comprehension"], [330, "List-Comprehension"], [1025, "list-comprehension"], [1070, "list-comprehension"]], "exec(), eval()": [[181, "exec(),-eval()"]], "Umgebender Context": [[181, "Umgebender-Context"]], "Eigener Context": [[181, "Eigener-Context"]], "json": [[181, "json"], [257, "json"]], "Python Individualtraining (5 Tage, beginnend 28.10.2019)": [[182, "python-individualtraining-5-tage-beginnend-28-10-2019"], [375, "python-individualtraining-5-tage-beginnend-28-10-2019"]], "Inhalt": [[182, null], [185, null], [996, null], [1173, "inhalt"]], "Slide 51, \u201cExercises: Basics\u201d": [[182, "slide-51-exercises-basics"]], "Slide 58, \u201cExercises: While Loop\u201d": [[182, "slide-58-exercises-while-loop"]], "Slide 94, \u201cExercises: Lists, Loops, Functions\u201d": [[182, "slide-94-exercises-lists-loops-functions"]], "Slide 121, \u201cExercises: Strings\u201d": [[182, "slide-121-exercises-strings"]], "Famous Generator Introduction": [[182, "famous-generator-introduction"]], "eval(): Convert a String into a Python Data Structure": [[182, "eval-convert-a-string-into-a-python-data-structure"]], "Operator Overloading": [[182, "operator-overloading"], [240, "operator-overloading"], [250, "Operator-Overloading"], [271, "operator-overloading"], [306, "operator-overloading"], [560, "operator-overloading"], [586, "operator-overloading"], [600, "operator-overloading"], [1042, "operator-overloading"]], "Getters and Setters": [[182, "getters-and-setters"]], "More on Listcomprehensions and Generator Expressions": [[182, "more-on-listcomprehensions-and-generator-expressions"]], "More on Local and Global Scope and Global Variables": [[182, "more-on-local-and-global-scope-and-global-variables"]], "Closures: Between Local and Global": [[182, "closures-between-local-and-global"]], "Goals of this Training": [[183, "Goals-of-this-Training"]], "Exercise": [[183, "Exercise"], [224, "exercise"], [266, "exercise"], [266, "id1"], [267, "exercise"], [269, "exercise"], [278, "exercise"], [287, "exercise"], [309, "exercise"], [357, "exercise"], [363, "exercise"], [482, "exercise"], [483, "exercise"], [484, "exercise"], [486, "exercise"], [487, "exercise"], [490, "exercise"], [491, "exercise"], [676, "exercise"]], "Walkthrough: Reduce Image to Eight Colors": [[183, "Walkthrough:-Reduce-Image-to-Eight-Colors"]], "Load Image from File: PIL": [[183, "Load-Image-from-File:-PIL"]], "Image as NumPy Array": [[183, "Image-as-NumPy-Array"]], "Preparation before Clustering": [[183, "Preparation-before-Clustering"]], "Excursion: matplotlib": [[183, "Excursion:-matplotlib"]], "Now Comes the Clustering": [[183, "Now-Comes-the-Clustering"]], "Let KMeans find eight clusters \u2026": [[183, "Let-KMeans-find-eight-clusters-..."]], "Use the result: output-properties": [[183, "Use-the-result:-output-properties"]], "Clusters be their Centers": [[183, "Clusters-be-their-Centers"]], "Post Processing: Restore Alpha, Back into RGBA": [[183, "Post-Processing:-Restore-Alpha,-Back-into-RGBA"]], "Random Live Hacking": [[184, "Random-Live-Hacking"]], "Data Types": [[184, "Data-Types"], [314, "Data-Types"]], "Mutable, Immutable": [[184, "Mutable,-Immutable"]], "Exception, demonstrated using dict access": [[184, "Exception,-demonstrated-using-dict-access"]], "Indices and Slicing": [[184, "Indices-and-Slicing"]], "for loops": [[184, "for-loops"]], "Iterator protocol": [[184, "Iterator-protocol"], [247, "Iterator-protocol"]], "Python (12.11.2019 - 14.11.2019 in Graz)": [[185, "python-12-11-2019-14-11-2019-in-graz"]], "Material": [[185, null], [187, null], [356, null]], "Standardthemen": [[185, "standardthemen"]], "Das Hauptthema: Numerik, NumPy": [[185, "das-hauptthema-numerik-numpy"]], "Lesen von .mat Files": [[185, "lesen-von-mat-files"]], "L\u00f6sen einer Uni-\u00dcbung": [[185, "losen-einer-uni-ubung"]], "Proposal": [[186, "proposal"]], "Signals": [[186, "signals"]], "Posix IPC (and Virtual Memory)": [[186, "posix-ipc-and-virtual-memory"]], "Unix Domain Sockets": [[186, "unix-domain-sockets"]], "Application in your Company": [[186, "application-in-your-company"]], "Further Thoughts": [[186, "further-thoughts"]], "IPC in Linux (10.1.2020 in Graz)": [[187, "ipc-in-linux-10-1-2020-in-graz"]], "\u00dcbung: handgestrickter String, um die Fallen von C++ lustvoll zu erleiden": [[188, "ubung-handgestrickter-string-um-die-fallen-von-c-lustvoll-zu-erleiden"]], "C++ f\u00fcr Embedded C Programmierer (30.3.2020 - 3.4.2020 Baden W\u00fcrttemberg)": [[189, "c-fur-embedded-c-programmierer-30-3-2020-3-4-2020-baden-wurttemberg"]], "Kursinformation": [[189, null]], "Kursaufbau": [[189, "kursaufbau"]], "Kursverlauf": [[189, "kursverlauf"], [197, "kursverlauf"]], "Tag 3": [[189, "tag-3"], [208, "tag-3"], [219, "tag-3"], [241, "tag-3"], [253, "tag-3"]], "Tag 4": [[189, "tag-4"], [219, "tag-4"], [241, "tag-4"], [253, "tag-4"]], "Tag 5": [[189, "tag-5"]], "Installing googletest By Hand": [[190, "installing-googletest-by-hand"]], "Clone googletest Repo": [[190, "clone-googletest-repo"]], "Create Build Directory": [[190, "create-build-directory"], [191, "create-build-directory"], [539, "create-build-directory"]], "CMake, Build and Install": [[190, "cmake-build-and-install"]], "Build Packages to Use Our Private googletest Install": [[190, "build-packages-to-use-our-private-googletest-install"]], "Software Setup, Build": [[191, "software-setup-build"]], "Getting the Source": [[191, "getting-the-source"]], "Install Prerequisites and Dependencies": [[191, "install-prerequisites-and-dependencies"]], "Generate Makefile Build from CMake Sources": [[191, "generate-makefile-build-from-cmake-sources"]], "Argh: Using This Site With Visual Studio Code": [[192, "argh-using-this-site-with-visual-studio-code"]], "Flatpak": [[192, "flatpak"]], "Issues": [[192, "issues"]], "RPM From M$": [[192, "rpm-from-m"]], "Code": [[193, "code"], [196, "code"]], "Python Grundlagen (13.5.2020 - 14.5.2020 bei einer Firma in Graz)": [[194, "python-grundlagen-13-5-2020-14-5-2020-bei-einer-firma-in-graz"]], "Information": [[194, null], [197, null]], "Environment": [[194, "environment"], [857, "environment"]], "Unit Testing and Test Driven Development": [[194, "unit-testing-and-test-driven-development"]], "Python Installation": [[194, "python-installation"], [1047, "python-installation"]], "Programming Environment": [[194, "programming-environment"], [278, "programming-environment"], [1047, "programming-environment"]], "Day 1: Language Basics": [[194, "day-1-language-basics"]], "Day 2: Advanced Topics": [[194, "day-2-advanced-topics"]], "Wrap-Up": [[194, "wrap-up"]], "How Was It?": [[194, "how-was-it"]], "Python Schulung 18. und 19.5.2020": [[195, "Python-Schulung-18.-und-19.5.2020"]], "Das sys Modul": [[195, "Das-sys-Modul"]], "Multiline Strings und Docstrings": [[195, "Multiline-Strings-und-Docstrings"]], "Datentypen (Ausflug)": [[195, "Datentypen-(Ausflug)"]], "Variablen und deren Unterbau": [[195, "Variablen-und-deren-Unterbau"]], "Ausflug \u201cPythonic\u201d: Zuweisung mit Hilfe von \u201cTuple Unpacking\u201d": [[195, "Ausflug-%22Pythonic%22:-Zuweisung-mit-Hilfe-von-%22Tuple-Unpacking%22"]], "Mutability am Beispiel list": [[195, "Mutability-am-Beispiel-list"]], "Integers haben unendliche Breite": [[195, "Integers-haben-unendliche-Breite"]], "Division und Floor Division": [[195, "Division-und-Floor-Division"]], "Konvertierung durch Konstruktoren": [[195, "Konvertierung-durch-Konstruktoren"]], "Welchen Typ haben Typen?": [[195, "Welchen-Typ-haben-Typen?"]], "list und Mutability": [[195, "list-und-Mutability"]], "Tuple und Immutability": [[195, "Tuple-und-Immutability"]], "Besseres Laufzeitverhalten durch Geeignetere Datenstrukturen": [[195, "Besseres-Laufzeitverhalten-durch-Geeignetere-Datenstrukturen"]], "Boolean: Short Circuit Evaluation": [[195, "Boolean:-Short-Circuit-Evaluation"]], "while Loops, und warum sie nicht Pythonic sind": [[195, "while-Loops,-und-warum-sie-nicht-Pythonic-sind"]], "Mehr \u00fcber range(): Iterator Protocol (Folie 161)": [[195, "Mehr-\u00fcber-range():-Iterator-Protocol-(Folie-161)"]], "Mutability, Shallow und Deep Copy": [[195, "Mutability,-Shallow-und-Deep-Copy"]], "Shallow Copy mit dem Slice-Operator": [[195, "Shallow-Copy-mit-dem-Slice-Operator"]], "Deep Copy (copy.deepcopy())": [[195, "Deep-Copy-(copy.deepcopy())"]], "Funktionen": [[195, "Funktionen"]], "Funktionen sind \u201cFirst Class Objects\u201d": [[195, "Funktionen-sind-%22First-Class-Objects%22"]], "Gotcha: Mutable Default Parameters (Folie 90 ff.)": [[195, "Gotcha:-Mutable-Default-Parameters-(Folie-90-ff.)"]], "Globale und lokale Variablen (Folie 92)": [[195, "Globale-und-lokale-Variablen-(Folie-92)"]], "Exercise: uniq() (Folie 94, Punkt 2)": [[195, "Exercise:-uniq()-(Folie-94,-Punkt-2)"]], "Zusammengefasst: hier eine \u201csch\u00f6nere\u201d L\u00f6sung": [[195, "Zusammengefasst:-hier-eine-%22sch\u00f6nere%22-L\u00f6sung"]], "Funktionen als Parameter": [[195, "Funktionen-als-Parameter"]], "List Comprensions (Folie 125)": [[195, "List-Comprensions-(Folie-125)"]], "Generator Expressions: Lesbarkeit und Performance": [[195, "Generator-Expressions:-Lesbarkeit-und-Performance"]], "Code Review": [[195, "Code-Review"]], "pprint() ist praktisch f\u00fcr Debug-Output": [[195, "pprint()-ist-praktisch-f\u00fcr-Debug-Output"]], "Straightforward Datentransformation": [[195, "Straightforward-Datentransformation"]], "Ausflug: More on Dictionaries (Folie 127ff.)": [[195, "Ausflug:-More-on-Dictionaries-(Folie-127ff.)"]], "Now for something completely different: collections.namedtuple": [[195, "Now-for-something-completely-different:-collections.namedtuple"]], "Mehr zur Parameter\u00fcbergabe: variabel lange Argumentlisten": [[195, "Mehr-zur-Parameter\u00fcbergabe:-variabel-lange-Argumentlisten"]], "OO: eine erste Klasse": [[195, "OO:-eine-erste-Klasse"]], "Python Individualtraining (18.5.2020 - 19.5.2020)": [[197, "python-individualtraining-18-5-2020-19-5-2020"], [375, "python-individualtraining-18-5-2020-19-5-2020"]], "Weiterf\u00fchrende Links": [[197, "weiterfuhrende-links"]], "Python Advanced (7.9.2020 - 10.9.2020)": [[198, "python-advanced-7-9-2020-10-9-2020"], [375, "python-advanced-7-9-2020-10-9-2020"]], "Preparation": [[198, "preparation"], [199, "preparation"], [201, "preparation"], [202, "preparation"], [203, "preparation"], [204, "preparation"], [602, "preparation"]], "Workspace Setup": [[198, "workspace-setup"], [199, "workspace-setup"], [201, "workspace-setup"], [203, "workspace-setup"]], "Github for Exercises": [[198, "github-for-exercises"], [199, "github-for-exercises"]], "Agenda": [[198, "agenda"], [199, "agenda"], [201, "agenda"], [202, "agenda"], [203, "agenda"], [204, "agenda"], [209, "agenda"], [213, "agenda"], [214, "agenda"], [251, "agenda"], [256, "agenda"], [268, "agenda"], [277, "agenda"], [298, "agenda"], [306, "agenda"], [1178, "agenda"]], "Advanced Core Python Topics": [[198, "advanced-core-python-topics"]], "Special Topics": [[198, "special-topics"]], "Day 1": [[198, "day-1"], [199, "day-1"], [201, "day-1"], [202, "day-1"], [203, "day-1"], [213, "day-1"], [214, "day-1"], [223, "day-1"], [224, "day-1"], [229, "day-1"], [232, "day-1"], [235, "day-1"], [238, "day-1"], [245, "day-1"], [287, "day-1"], [288, "day-1"], [289, "day-1"], [295, "day-1"], [299, "day-1"], [301, "day-1"], [306, "day-1"], [313, "day-1"], [339, "day-1"]], "Day 2": [[198, "day-2"], [199, "day-2"], [201, "day-2"], [202, "day-2"], [203, "day-2"], [213, "day-2"], [214, "day-2"], [223, "day-2"], [224, "day-2"], [229, "day-2"], [232, "day-2"], [234, "Day-2"], [235, "day-2"], [238, "day-2"], [245, "day-2"], [278, "day-2"], [287, "day-2"], [289, "day-2"], [295, "day-2"], [299, "day-2"], [306, "day-2"], [313, "day-2"], [339, "day-2"]], "Day 3": [[198, "day-3"], [199, "day-3"], [201, "day-3"], [202, "day-3"], [203, "day-3"], [213, "day-3"], [214, "day-3"], [223, "day-3"], [224, "day-3"], [229, "day-3"], [234, "Day-3"], [235, "day-3"], [238, "day-3"], [245, "day-3"], [278, "day-3"], [281, "day-3"], [287, "day-3"], [289, "day-3"], [295, "day-3"], [299, "day-3"], [301, "day-3"], [313, "day-3"], [339, "day-3"]], "Day 4": [[198, "day-4"], [201, "day-4"], [213, "day-4"], [214, "day-4"], [223, "day-4"], [224, "day-4"], [278, "day-4"]], "Recommended Tutorials": [[198, "recommended-tutorials"]], "After Work Party": [[198, "after-work-party"], [229, "after-work-party"]], "Python Basics (28.9.2020 - 30.9.2020)": [[199, "python-basics-28-9-2020-30-9-2020"], [375, "python-basics-28-9-2020-30-9-2020"]], "Iterables": [[200, "Iterables"]], "set constructor": [[200, "set-constructor"]], "Fast vs. Simple": [[200, "Fast-vs.-Simple"]], "for, Iterables, range and Generators": [[200, "for,-Iterables,-range-and-Generators"]], "Tuples, Tuple Unpacking, Returning Multiple Values from Functions": [[200, "Tuples,-Tuple-Unpacking,-Returning-Multiple-Values-from-Functions"]], "Object Oriented Programming": [[200, "Object-Oriented-Programming"], [250, "Object-Oriented-Programming"], [263, "Object-Oriented-Programming"], [274, "object-oriented-programming"], [288, "object-oriented-programming"], [290, "object-oriented-programming"], [291, "object-oriented-programming"], [294, "object-oriented-programming"], [295, "object-oriented-programming"], [300, "object-oriented-programming"], [306, "object-oriented-programming"], [309, "object-oriented-programming"], [312, "object-oriented-programming"], [313, "object-oriented-programming"], [316, "object-oriented-programming"], [322, "object-oriented-programming"], [328, "object-oriented-programming"], [334, "object-oriented-programming"], [335, "object-oriented-programming"], [464, "object-oriented-programming"], [1038, "object-oriented-programming"], [338, "object-oriented-programming"], [339, "object-oriented-programming"]], "datetime": [[200, "datetime"], [227, "datetime"], [282, "datetime"]], "Python Basic and Advanced (19.10.2020 - 22.10.2020)": [[201, "python-basic-and-advanced-19-10-2020-22-10-2020"]], "Additional Topics, brought in by Thomas": [[201, "additional-topics-brought-in-by-thomas"]], "Notebook": [[201, "notebook"], [222, "notebook"], [237, "Notebook"], [357, "notebook"]], "Tutorials": [[201, "tutorials"], [229, "tutorials"]], "Linux on Raspberry Pi": [[202, "linux-on-raspberry-pi"]], "Cloud Machine": [[202, "cloud-machine"]], "Raspberry on Participant\u2019s Desks": [[202, "raspberry-on-participant-s-desks"]], "Basic security": [[202, "basic-security"]], "Interlude: SD Card Setup (No Bloody Disk Imager)": [[202, "interlude-sd-card-setup-no-bloody-disk-imager"]], "GPIO, using sysfs interface": [[202, "gpio-using-sysfs-interface"]], "In the Wild: Watchdog": [[202, "in-the-wild-watchdog"]], "TODO": [[202, "todo"], [344, "todo"], [345, "todo"], [346, "todo"], [1138, "todo"]], "Support Material": [[202, "support-material"]], "Python Basics (23.11.2020 - 25.11.2020)": [[203, "python-basics-23-11-2020-25-11-2020"], [375, "python-basics-23-11-2020-25-11-2020"]], "Exercise: JSON": [[203, "exercise-json"]], "Linux Basics (30.11.2020 - 3.12.2020)": [[204, "linux-basics-30-11-2020-3-12-2020"], [375, "linux-basics-30-11-2020-3-12-2020"]], "6 Grundlegende Sprachelemente": [[205, "6-Grundlegende-Sprachelemente"]], "6.1 Syntax und Semantik": [[205, "6.1-Syntax-und-Semantik"]], "Zur Syntax mit der Einr\u00fcckung \u2026": [[205, "Zur-Syntax-mit-der-Einr\u00fcckung-..."]], "In Python k\u00f6nnen Variablen ihren Typ \u00e4ndern": [[205, "In-Python-k\u00f6nnen-Variablen-ihren-Typ-\u00e4ndern"]], "Kommentare": [[205, "Kommentare"]], "6.2 Grundlegende Elemente einer Sprache": [[205, "6.2-Grundlegende-Elemente-einer-Sprache"]], "6.3 Standarddatentypen (elementare Datentypen)": [[205, "6.3-Standarddatentypen-(elementare-Datentypen)"]], "Integers sind beliebig gro\u00df": [[205, "Integers-sind-beliebig-gro\u00df"]], "Vergleichsoperatoren": [[205, "Vergleichsoperatoren"]], "Operator Pr\u00e4zedenz: Punkt vor Strichrechnung": [[205, "Operator-Pr\u00e4zedenz:-Punkt-vor-Strichrechnung"]], "Floor Division": [[205, "Floor-Division"]], "Modulo Operator: %": [[205, "Modulo-Operator:-%"]], "(Un\u00e4rer) Negations Operator": [[205, "(Un\u00e4rer)-Negations-Operator"]], "Operator Pr\u00e4zedenz erzwingen": [[205, "Operator-Pr\u00e4zedenz-erzwingen"]], "Strings gibts auch (Zeichenketten)": [[205, "Strings-gibts-auch-(Zeichenketten)"]], "Raw Strings": [[205, "Raw-Strings"], [227, "Raw-Strings"], [244, "Raw-Strings"], [250, "Raw-Strings"], [272, "Raw-Strings"], [302, "Raw-Strings"], [1067, "raw-strings"]], "f-Strings": [[205, "f-Strings"], [324, "f-Strings"]], "Konvertierungen": [[205, "Konvertierungen"]], "Boolean": [[205, "Boolean"], [231, "Boolean"], [234, "Boolean"], [242, "Boolean"], [244, "Boolean"], [254, "Boolean"], [257, "Boolean"], [330, "Boolean"], [1056, "boolean"]], "Pr\u00e4zendenzregeln: and vor or": [[205, "Pr\u00e4zendenzregeln:-and-vor-or"]], "6.4 Literale f\u00fcr primitive Datentypen": [[205, "6.4-Literale-f\u00fcr-primitive-Datentypen"]], "6.5 Variablen und Konstanten": [[205, "6.5-Variablen-und-Konstanten"]], "6.6 Operatoren": [[205, "6.6-Operatoren"]], "6.7 Ausdr\u00fccke und Operatorrangfolgen": [[205, "6.7-Ausdr\u00fccke-und-Operatorrangfolgen"]], "6.8 \u00dcbungen": [[205, "6.8-\u00dcbungen"]], "Zwei Variablen vertauschen": [[205, "Zwei-Variablen-vertauschen"]], "Zwei Variablen vertauschen mit Tuple Unpacking": [[205, "Zwei-Variablen-vertauschen-mit-Tuple-Unpacking"]], "\u00dcbung 1, 5.": [[205, "\u00dcbung-1,-5."]], "7 Kontrollstrukturen": [[205, "7-Kontrollstrukturen"]], "7.1 Anweisungen und Folgen": [[205, "7.1-Anweisungen-und-Folgen"]], "7.2 Bedingungen und Kontrollstrukturen": [[205, "7.2-Bedingungen-und-Kontrollstrukturen"]], "7.3 Grundlagen zu Verzweigungen": [[205, "7.3-Grundlagen-zu-Verzweigungen"]], "7.4 Bedingte Anweisung": [[205, "7.4-Bedingte-Anweisung"]], "7.5 Verzweigung": [[205, "7.5-Verzweigung"]], "7.6 Geschachtelte Verzweigung": [[205, "7.6-Geschachtelte-Verzweigung"]], "7.7 Mehrfache Verzweigung (Fallauswahl)": [[205, "7.7-Mehrfache-Verzweigung-(Fallauswahl)"]], "7.8 Schleifen": [[205, "7.8-Schleifen"]], "7.9 Z\u00e4hlergesteuerte Schleifen (Iteration)": [[205, "7.9-Z\u00e4hlergesteuerte-Schleifen-(Iteration)"]], "7.10 Kopfgesteuerte bedingte Schleife": [[205, "7.10-Kopfgesteuerte-bedingte-Schleife"]], "7.11 Fu\u00dfgesteuerte bedingte Schleife": [[205, "7.11-Fu\u00dfgesteuerte-bedingte-Schleife"]], "(jf) break und continue": [[205, "(jf)-break-und-continue"]], "(jf) Sequential Datatypes": [[205, "(jf)-Sequential-Datatypes"]], "(jf) for Loops": [[205, "(jf)-for-Loops"]], "Iteration mit Dictionaries": [[205, "Iteration-mit-Dictionaries"]], "(jf) The range() Function": [[205, "(jf)-The-range()-Function"]], "7.12 Schnell\u00fcbersicht": [[205, "7.12-Schnell\u00fcbersicht"]], "7.13 Sprunganweisungen": [[205, "7.13-Sprunganweisungen"]], "7.14 Endlosschleifen": [[205, "7.14-Endlosschleifen"]], "7.15 \u00dcbungen": [[205, "7.15-\u00dcbungen"]], "8 Elementare Datenstrukturen": [[205, "8-Elementare-Datenstrukturen"]], "8.1 Warum werden Datenstrukturen ben\u00f6tigt?": [[205, "8.1-Warum-werden-Datenstrukturen-ben\u00f6tigt?"]], "(jf) Compound Datatypes": [[205, "(jf)-Compound-Datatypes"]], "(jf) References, (Im)mutability": [[205, "(jf)-References,-(Im)mutability"]], "(jf) Laufzeitverhalten bei der Suche (der in Operator)": [[205, "(jf)-Laufzeitverhalten-bei-der-Suche-(der-in-Operator)"]], "Liste": [[205, "Liste"]], "Set": [[205, "Set"], [226, "Set"], [227, "Set"], [231, "Set"], [231, "id1"], [234, "Set"], [237, "Set"], [237, "id1"], [244, "Set"], [257, "Set"], [260, "Set"], [272, "Set"], [275, "Set"], [275, "id5"], [282, "Set"], [292, "Set"], [296, "Set"], [314, "Set"], [318, "Set"], [330, "Set"], [340, "Set"]], "8.2 Arrays": [[205, "8.2-Arrays"]], "8.3 Eindimensionale Arrays": [[205, "8.3-Eindimensionale-Arrays"]], "8.4 Records": [[205, "8.4-Records"]], "8.5 Zeichenketten": [[205, "8.5-Zeichenketten"]], "8.6 Tupel und Listen": [[205, "8.6-Tupel-und-Listen"]], "sorted, reversed": [[205, "sorted,-reversed"]], "8.7 Dictionaries": [[205, "8.7-Dictionaries"]], "(jf) Records in Python": [[205, "(jf)-Records-in-Python"]], "8.8 Mengen": [[205, "8.8-Mengen"]], "8.9 Besondere Datenstrukturen anhand von Stapel (Stack) und Schlangen (Queue)": [[205, "8.9-Besondere-Datenstrukturen-anhand-von-Stapel-(Stack)-und-Schlangen-(Queue)"]], "8.10 \u00dcbungen": [[205, "8.10-\u00dcbungen"]], "\u00dcbung 1": [[205, "\u00dcbung-1"]], "Versuch 1: in und index()": [[205, "Versuch-1:-in-und-index()"]], "Versuch 2: Zur\u00fcck zu while \u2026": [[205, "Versuch-2:-Zur\u00fcck-zu-while-..."]], "Versuch 3: hybrid potschert mit for": [[205, "Versuch-3:-hybrid-potschert-mit-for"]], "Versuch 4: supergscheit mit for und enumerate()": [[205, "Versuch-4:-supergscheit-mit-for-und-enumerate()"]], "9 Methoden, Prozeduren und Funktionen": [[205, "9-Methoden,-Prozeduren-und-Funktionen"]], "Funktionspointer (so heissts in C): Funktionsobjekte (Python)": [[205, "Funktionspointer-(so-heissts-in-C):-Funktionsobjekte-(Python)"]], "(jf) Primzahlenbeispiel mit Funktion": [[205, "(jf)-Primzahlenbeispiel-mit-Funktion"]], "(jf) Local vs. Global Scope": [[205, "(jf)-Local-vs.-Global-Scope"]], "Laufzeitfehler: Variable existiert nicht": [[205, "Laufzeitfehler:-Variable-existiert-nicht"]], "Lokale Variable": [[205, "Lokale-Variable"]], "Globale Variable (lesen)": [[205, "Globale-Variable-(lesen)"]], "Globale Variable (schreiben/zuweisen)": [[205, "Globale-Variable-(schreiben/zuweisen)"]], "Fehlerfall von Peter": [[205, "Fehlerfall-von-Peter"]], "9.1 Unterprogramme": [[205, "9.1-Unterprogramme"]], "9.2 Parameter\u00fcbergabe": [[205, "9.2-Parameter\u00fcbergabe"]], "9.3 Parameter\u00fcbergabe als Wert": [[205, "9.3-Parameter\u00fcbergabe-als-Wert"]], "9.4 Parameter\u00fcbergabe \u00fcber Referenzen": [[205, "9.4-Parameter\u00fcbergabe-\u00fcber-Referenzen"]], "9.5 R\u00fcckgabewerte von Funktionen oder Methoden": [[205, "9.5-R\u00fcckgabewerte-von-Funktionen-oder-Methoden"]], "9.6 Innere Funktionen - Closures": [[205, "9.6-Innere-Funktionen---Closures"]], "9.7 Standardbibliotheken und Built-in-Funktionalit\u00e4ten": [[205, "9.7-Standardbibliotheken-und-Built-in-Funktionalit\u00e4ten"]], "9.8 \u00dcbungen": [[205, "9.8-\u00dcbungen"]], "Programmierung Grundlagen (13. und 14.1.2021)": [[206, "programmierung-grundlagen-13-und-14-1-2021"]], "Struktur": [[206, "struktur"]], "Herdt Kapitel 6: Grundlegende Sprachelemente": [[206, "herdt-kapitel-6-grundlegende-sprachelemente"], [1186, "herdt-kapitel-6-grundlegende-sprachelemente"]], "Herdt Kapitel 7: Kontrollstrukturen": [[206, "herdt-kapitel-7-kontrollstrukturen"], [1186, "herdt-kapitel-7-kontrollstrukturen"]], "Verzweigung": [[206, "verzweigung"], [1186, "verzweigung"]], "Schleifen": [[206, "schleifen"], [1186, "schleifen"]], "Herdt Kapitel 8: Elementare Datenstrukturen": [[206, "herdt-kapitel-8-elementare-datenstrukturen"], [1186, "herdt-kapitel-8-elementare-datenstrukturen"]], "Herdt Kapitel 9: Methoden, Prozeduren und Funktionen": [[206, "herdt-kapitel-9-methoden-prozeduren-und-funktionen"], [1186, "herdt-kapitel-9-methoden-prozeduren-und-funktionen"]], "Python Basics (22.2.2021 - 24.2.2021)": [[208, "python-basics-22-2-2021-24-2-2021"], [375, "python-basics-22-2-2021-24-2-2021"]], "Links (ToDo)": [[208, "links-todo"]], "Linux Kernel Driver Development Basics (14.12.2020)": [[209, "linux-kernel-driver-development-basics-14-12-2020"]], "Books": [[209, "books"], [259, "books"], [301, "books"], [1123, "books"]], "Python Advanced": [[210, "Python-Advanced"]], "Data Types Recap": [[210, "Data-Types-Recap"]], "Sequential Datatypes": [[210, "Sequential-Datatypes"], [242, "Sequential-Datatypes"], [254, "Sequential-Datatypes"], [324, "Sequential-Datatypes"], [1059, "sequential-datatypes"], [1059, "id1"]], "Slicing etc.": [[210, "Slicing-etc."]], "Mapping Types (Dictionary, und mehr)": [[210, "Mapping-Types-(Dictionary,-und-mehr)"]], "Sets": [[210, "Sets"], [210, "id1"], [218, "Sets"], [336, "Sets"], [1072, "sets"]], "for Schleife, ganz kurz": [[210, "for-Schleife,-ganz-kurz"]], "Tuple": [[210, "Tuple"], [234, "Tuple"], [237, "Tuple"], [244, "Tuple"], [257, "Tuple"], [260, "Tuple"], [272, "Tuple"], [330, "Tuple"], [336, "Tuple"]], "Funktionen mit mehreren Returnwerten (bzw. Tuple Unpacking)": [[210, "Funktionen-mit-mehreren-Returnwerten-(bzw.-Tuple-Unpacking)"]], "Iteration \u00fcber Containerdatentypen": [[210, "Iteration-\u00fcber-Containerdatentypen"]], "Listen": [[210, "Listen"], [244, "Listen"], [352, "Listen"]], "Was heisst \u201cUntypisiert\u201d?": [[210, "Was-heisst-%22Untypisiert%22?"]], "Wir l\u00f6schen den Integer": [[210, "Wir-l\u00f6schen-den-Integer"]], "Iterator Protocol, for Loops": [[210, "Iterator-Protocol,-for-Loops"]], "Iterable: Der Begriff": [[210, "Iterable:-Der-Begriff"]], "Zufall": [[210, "Zufall"]], "Regular Expressions": [[210, "Regular-Expressions"], [263, "Regular-Expressions"], [275, "Regular-Expressions"], [324, "Regular-Expressions"], [330, "Regular-Expressions"], [914, "regular-expressions"]], "enumerate()": [[210, "enumerate()"], [218, "enumerate()"], [221, "enumerate()"], [257, "enumerate()"], [275, "enumerate()"], [292, "enumerate()"], [314, "enumerate()"], [336, "enumerate()"]], "JSON": [[210, "JSON"], [227, "JSON"], [237, "JSON"], [263, "JSON"], [272, "JSON"], [307, "JSON"], [310, "JSON"]], "2021-03-15": [[211, "id1"]], "Exercises (auf Github)": [[211, "exercises-auf-github"]], "Jupyter Notebook": [[211, "jupyter-notebook"], [213, "jupyter-notebook"], [230, "jupyter-notebook"], [232, "jupyter-notebook"], [235, "jupyter-notebook"], [241, "jupyter-notebook"], [246, "jupyter-notebook"], [249, "jupyter-notebook"], [252, "jupyter-notebook"], [352, "Jupyter-Notebook"], [1129, "jupyter-notebook"]], "Download": [[211, null], [213, null]], "Hallo Jupyter Notebook": [[212, "Hallo-Jupyter-Notebook"]], "Syntax": [[212, "Syntax"], [282, "Syntax"], [324, "Syntax"], [336, "Syntax"], [352, "Syntax"], [352, "id1"]], "Raw strings": [[212, "Raw-strings"]], "Variablen": [[212, "Variablen"], [244, "Variablen"]], "Tuple Unpacking": [[212, "Tuple-Unpacking"], [254, "Tuple-Unpacking"], [272, "Tuple-Unpacking"], [282, "Tuple-Unpacking"], [318, "Tuple-Unpacking"], [324, "Tuple-Unpacking"], [336, "Tuple-Unpacking"], [351, "Tuple-Unpacking"], [352, "Tuple-Unpacking"], [352, "id2"]], "Speicher, Memory Management": [[212, "Speicher,-Memory-Management"]], "Mutable vs. Immutable": [[212, "Mutable-vs.-Immutable"], [263, "Mutable-vs.-Immutable"]], "Wie sch\u00fctze ich mich davor?": [[212, "Wie-sch\u00fctze-ich-mich-davor?"]], "Aber!!!!": [[212, "Aber!!!!"]], "Dictionary": [[212, "Dictionary"], [218, "Dictionary"], [226, "Dictionary"], [227, "Dictionary"], [231, "Dictionary"], [231, "id2"], [234, "Dictionary"], [237, "Dictionary"], [237, "id2"], [244, "Dictionary"], [257, "Dictionary"], [260, "Dictionary"], [272, "Dictionary"], [275, "Dictionary"], [275, "id4"], [282, "Dictionary"], [292, "Dictionary"], [296, "Dictionary"], [302, "Dictionary"], [314, "Dictionary"], [318, "Dictionary"], [330, "Dictionary"], [336, "Dictionary"], [340, "Dictionary"]], "Exercise: Liste von gemischten Datentypen": [[212, "Exercise:-Liste-von-gemischten-Datentypen"]], "Konstruktoren": [[212, "Konstruktoren"]], "Tag 2: Wiederholung, Fragen": [[212, "Tag-2:-Wiederholung,-Fragen"]], "for und range()": [[212, "for-und-range()"]], "Objektidentit\u00e4t": [[212, "Objektidentit\u00e4t"]], "Das with Statement": [[212, "Das-with-Statement"], [221, "Das-with-Statement"]], "Tuple Unpacking, Dictionary Iteration": [[212, "Tuple-Unpacking,-Dictionary-Iteration"]], "String Operationen": [[212, "String-Operationen"]], "enumerate(), und verlorene Indices": [[212, "enumerate(),-und-verlorene-Indices"]], "NumPy, matplotlib": [[212, "NumPy,-matplotlib"]], "Interpolation mittels scipy": [[212, "Interpolation-mittels-scipy"]], "Python Basic and Advanced (22.3.2021 - 25.3.2021)": [[213, "python-basic-and-advanced-22-3-2021-25-3-2021"]], "(Tutorial) Videos": [[213, "tutorial-videos"]], "Linux Basics, Shell Scripting (2021-03-29)": [[214, "linux-basics-shell-scripting-2021-03-29"]], "Course Details": [[214, null]], "Course Preparation": [[214, "course-preparation"], [267, "course-preparation"], [269, "course-preparation"], [277, "course-preparation"]], "SSH": [[214, "ssh"], [362, "ssh"]], "Linux and/or Shell on Windows Host": [[214, "linux-and-or-shell-on-windows-host"]], "Editor Support for Shell Scripting": [[214, "editor-support-for-shell-scripting"]], "Programmierung Grundlagen (12. und 13.4.2021)": [[216, "programmierung-grundlagen-12-und-13-4-2021"]], "Syntax etc.": [[218, "Syntax-etc."], [250, "Syntax-etc."], [296, "Syntax-etc."], [1051, "syntax-etc"]], "Comments vs. Documentation": [[218, "Comments-vs.-Documentation"], [1051, "comments-vs-documentation"]], "Variables": [[218, "Variables"], [231, "Variables"], [234, "Variables"], [250, "Variables"], [260, "Variables"], [292, "Variables"], [296, "Variables"], [318, "Variables"], [324, "Variables"], [330, "Variables"], [336, "Variables"], [352, "Variables"], [1053, "variables"], [340, "Variables"]], "Assignment Fun": [[218, "Assignment-Fun"], [257, "Assignment-Fun"], [1053, "assignment-fun"]], "Assignment Details": [[218, "Assignment-Details"], [250, "Assignment-Details"], [257, "Assignment-Details"], [336, "Assignment-Details"], [352, "Assignment-Details"], [1053, "assignment-details"], [340, "Assignment-Details"]], "Operators": [[218, "Operators"], [254, "Operators"]], "Integer Arithmetic": [[218, "Integer-Arithmetic"]], "String Methods": [[218, "String-Methods"], [336, "String-Methods"], [351, "String-Methods"]], "Datatype Conversions": [[218, "Datatype-Conversions"], [242, "Datatype-Conversions"], [244, "Datatype-Conversions"], [250, "Datatype-Conversions"], [254, "Datatype-Conversions"], [257, "Datatype-Conversions"], [275, "Datatype-Conversions"], [292, "Datatype-Conversions"], [296, "Datatype-Conversions"], [302, "Datatype-Conversions"], [314, "Datatype-Conversions"], [318, "Datatype-Conversions"], [324, "Datatype-Conversions"], [336, "Datatype-Conversions"], [352, "Datatype-Conversions"], [1054, "datatype-conversions"]], "Strings k\u00f6nnen alles!": [[218, "Strings-k\u00f6nnen-alles!"]], "Complex Datatypes": [[218, "Complex-Datatypes"], [352, "Complex-Datatypes"]], "List (mutable)": [[218, "List-(mutable)"], [231, "List-(mutable)"], [324, "List-(mutable)"]], "extend()? Iterable?": [[218, "extend()?-Iterable?"]], "Tuple (wie Liste, nur immutable)": [[218, "Tuple-(wie-Liste,-nur-immutable)"]], "in Operator": [[218, "in-Operator"], [257, "in-Operator"]], "Iteration \u00fcber Daten: mittels for": [[218, "Iteration-\u00fcber-Daten:-mittels-for"]], "enumerate(), sum(), map(), und so weiter": [[218, "enumerate(),-sum(),-map(),-und-so-weiter"]], "sum()": [[218, "sum()"]], "map()": [[218, "map()"], [221, "map()"]], "list() function": [[218, "list()-function"]], "Performance: in Operator, und list und set": [[218, "Performance:-in-Operator,-und-list-und-set"]], "Dynamische Evaluierung: eval()": [[218, "Dynamische-Evaluierung:-eval()"]], "Python Grundlagen (2021-05-03 - 2021-05-05)": [[219, "python-grundlagen-2021-05-03-2021-05-05"], [375, "python-grundlagen-2021-05-03-2021-05-05"]], "Weiterf\u00fchrende Information": [[219, "weiterfuhrende-information"]], "Visual Studio Code": [[219, "visual-studio-code"], [235, "visual-studio-code"], [1123, "visual-studio-code"]], "Python Beginner Tutorials": [[219, "python-beginner-tutorials"], [259, "python-beginner-tutorials"], [1123, "python-beginner-tutorials"]], "NumPy and Data Science Tutorials": [[219, "numpy-and-data-science-tutorials"], [259, "numpy-and-data-science-tutorials"], [262, "numpy-and-data-science-tutorials"], [295, "numpy-and-data-science-tutorials"], [1123, "numpy-and-data-science-tutorials"]], "PyPI (Installing Modules that don\u2019t come as Batteries)": [[219, "pypi-installing-modules-that-don-t-come-as-batteries"], [1123, "pypi-installing-modules-that-don-t-come-as-batteries"]], "Git, and Github": [[219, "git-and-github"], [1123, "git-and-github"]], "Conference Talks": [[219, "conference-talks"], [295, "conference-talks"], [1123, "conference-talks"]], "Python Grundlagen (Jupyter Notebook)": [[220, "python-grundlagen-jupyter-notebook"], [233, "python-grundlagen-jupyter-notebook"], [236, "python-grundlagen-jupyter-notebook"], [239, "python-grundlagen-jupyter-notebook"], [258, "python-grundlagen-jupyter-notebook"], [261, "python-grundlagen-jupyter-notebook"], [264, "python-grundlagen-jupyter-notebook"], [273, "python-grundlagen-jupyter-notebook"], [276, "python-grundlagen-jupyter-notebook"], [297, "python-grundlagen-jupyter-notebook"]], "import zipfile": [[221, "import-zipfile"]], "Read Contents \u2026": [[221, "Read-Contents-..."]], "Extract One Member": [[221, "Extract-One-Member"]], "All in One, Using with": [[221, "All-in-One,-Using-with"]], "Functionality: Methods": [[221, "Functionality:-Methods"]], "Class Attributes vs. Instance Attributes (not Variables)": [[221, "Class-Attributes-vs.-Instance-Attributes-(not-Variables)"]], "Instance Attributes": [[221, "Instance-Attributes"]], "Class Attributes": [[221, "Class-Attributes"]], "Public, Protected, Private": [[221, "Public,-Protected,-Private"]], "Properties": [[221, "Properties"], [250, "Properties"], [479, "properties"], [1043, "properties"]], "Functions, Positional and Keyword Arguments": [[221, "Functions,-Positional-and-Keyword-Arguments"]], "Positional Arguments": [[221, "Positional-Arguments"]], "Keyword Arguments": [[221, "Keyword-Arguments"], [242, "Keyword-Arguments"], [353, "Keyword-Arguments"], [1065, "keyword-arguments"]], "Mixing Positional and Keyword Arguments": [[221, "Mixing-Positional-and-Keyword-Arguments"]], "The range() Function": [[221, "The-range()-Function"], [227, "The-range()-Function"], [234, "The-range()-Function"]], "Functional Programming, Iteration, yield, map(), filter(), \u2026": [[221, "Functional-Programming,-Iteration,-yield,-map(),-filter(),-..."]], "Iterable": [[221, "Iterable"], [237, "Iterable"]], "list(), and iterable?": [[221, "list(),-and-iterable?"]], "Tuple Unpacking and the Rest": [[221, "Tuple-Unpacking-and-the-Rest"]], "Decorators, etc.": [[221, "Decorators,-etc."]], "NoneType and None": [[221, "NoneType-and-None"]], "File I/O": [[221, "File-I/O"], [250, "File-I/O"], [257, "File-I/O"], [260, "File-I/O"], [292, "File-I/O"], [296, "File-I/O"], [330, "File-I/O"], [336, "File-I/O"], [349, "File-I/O"], [960, "file-i-o"], [1073, "file-i-o"]], "Iteration, yield, Recursion": [[221, "Iteration,-yield,-Recursion"]], "Recursion": [[221, "Recursion"]], "Iteratively Calculating Fibonacci Numbers -> yield": [[221, "Iteratively-Calculating-Fibonacci-Numbers-->-yield"]], "map(), filter(), zip(), enumerate() \u2026": [[221, "map(),-filter(),-zip(),-enumerate()-..."]], "map(), and several other ways to do the same": [[221, "map(),-and-several-other-ways-to-do-the-same"]], "zip()": [[221, "zip()"]], "filter(), and several other methods to do the same": [[221, "filter(),-and-several-other-methods-to-do-the-same"]], "OSError, errno": [[221, "OSError,-errno"]], "The platform Module, sys.path": [[221, "The-platform-Module,-sys.path"]], "os.path": [[221, "os.path"], [237, "os.path"], [244, "os.path"]], "Exceptions und so (assert())": [[221, "Exceptions-und-so-(assert())"]], "AssertionError": [[221, "AssertionError"]], "Random Questions": [[221, "Random-Questions"]], "Slicing": [[221, "Slicing"], [244, "Slicing"], [250, "Slicing"], [275, "Slicing"], [296, "Slicing"], [1144, "slicing"]], "OO": [[221, "OO"], [289, "oo"], [366, "oo"], [560, "oo"]], "String Formatting": [[221, "String-Formatting"], [227, "String-Formatting"], [1068, "string-formatting"]], "import datetime": [[221, "import-datetime"]], "Python Advanced (2021-05-25 - 2021-05-27)": [[222, "python-advanced-2021-05-25-2021-05-27"]], "Predefined streams": [[222, "predefined-streams"]], "PCAP Exam Syllabus": [[222, "pcap-exam-syllabus"], [235, "pcap-exam-syllabus"]], "2021-06-09": [[222, "id1"]], "Programmieren mit C (2021-06-14 - 2021-06-18)": [[223, "programmieren-mit-c-2021-06-14-2021-06-18"], [375, "programmieren-mit-c-2021-06-14-2021-06-18"]], "Preparation: Tools": [[223, "preparation-tools"]], "State machine": [[223, "state-machine"]], "Regular Course Topics": [[223, "regular-course-topics"]], "Development Tools (Git & CMake) Installation Massacre": [[223, "development-tools-git-cmake-installation-massacre"]], "Regular Course Material": [[223, "regular-course-material"], [223, "id1"]], "Group Project Kick-Off :-)": [[223, "group-project-kick-off"]], "Exercise: Encapsulate Index Access to userdb": [[223, "exercise-encapsulate-index-access-to-userdb"]], "Group Project (Use Case Driven Course Flow :-) )": [[223, "group-project-use-case-driven-course-flow"]], "Day 5": [[223, "day-5"], [224, "day-5"], [278, "day-5"]], "Pointer Recap": [[223, "pointer-recap"]], "On With Group Project": [[223, "on-with-group-project"]], "C++ Basics": [[223, "c-basics"]], "Pointers, Pointer Arithmetic, and the Standard Template Library (STL)": [[223, "pointers-pointer-arithmetic-and-the-standard-template-library-stl"]], "The C++ Programming Language (2021-07-12 - 2021-07-16)": [[224, "the-c-programming-language-2021-07-12-2021-07-16"]], "Setup for the new kids": [[224, "setup-for-the-new-kids"]], "Recapitulate some C": [[224, "recapitulate-some-c"]], "Group project review": [[224, "group-project-review"]], "Jump into C++": [[224, "jump-into-c"]], "Regular Topics": [[224, "regular-topics"], [224, "id2"], [224, "id4"]], "Toolchain: C/C++ Build (How Complicated Can Things Be?)": [[224, "toolchain-c-c-build-how-complicated-can-things-be"]], "Exercises: Using the C++ Toolbox": [[224, "exercises-using-the-c-toolbox"]], "Finish First \u201cUser Database\u201d Functionality": [[224, "finish-first-user-database-functionality"]], "Unit Testing": [[224, "unit-testing"], [281, "unit-testing"], [284, "unit-testing"], [365, "unit-testing"]], "GTest Installation": [[224, "gtest-installation"]], "Git Workflows": [[224, "git-workflows"]], "Day X": [[224, "day-x"]], "Smart Pointers, Recap": [[224, "smart-pointers-recap"]], "std::map": [[224, "std-map"], [638, "std-map"]], "OO, and Polymorphism": [[224, "oo-and-polymorphism"]], "Programmierung Grundlagen, anhand von Python (2. und 3.8.2021)": [[225, "programmierung-grundlagen-anhand-von-python-2-und-3-8-2021"], [375, "programmierung-grundlagen-anhand-von-python-2-und-3-8-2021"]], "Variablen und Datentypen": [[225, "variablen-und-datentypen"], [241, "variablen-und-datentypen"], [253, "variablen-und-datentypen"]], "Kontrollstrukturen": [[225, "kontrollstrukturen"], [241, "kontrollstrukturen"], [242, "Kontrollstrukturen"], [253, "kontrollstrukturen"]], "Datenstrukturen": [[226, "Datenstrukturen"]], "List": [[226, "List"], [227, "List"], [234, "List"], [237, "List"], [257, "List"], [260, "List"], [272, "List"], [275, "List"], [302, "List"], [314, "List"], [330, "List"], [1151, "list"], [340, "List"]], "Iteration": [[226, "Iteration"], [226, "id1"], [227, "Iteration"], [227, "id1"], [237, "Iteration"], [260, "Iteration"], [272, "Iteration"], [314, "Iteration"], [340, "Iteration"], [340, "id1"]], "User Datenbank: Showcase Full Stack Development": [[226, "User-Datenbank:-Showcase-Full-Stack-Development"]], "5: Response kommt von der DB": [[226, "5:-Response-kommt-von-der-DB"]], "6: Aufgabe: Formulieren eines JSON Strings, damit man diese Daten \u00fcber die HTTP Verbindung zum Client/Browser schicken kann.": [[226, "6:-Aufgabe:-Formulieren-eines-JSON-Strings,-damit-man-diese-Daten-\u00fcber-die-HTTP-Verbindung-zum-Client/Browser-schicken-kann."]], "7. Jetzt schickman weg: vom Server (PHP) zum Browser (JS)": [[226, "7.-Jetzt-schickman-weg:-vom-Server-(PHP)-zum-Browser-(JS)"]], "8. in JS JSON string empfangen": [[226, "8.-in-JS-JSON-string-empfangen"]], "9. Nun muessen wir den JSON-String in JS verwandlen": [[226, "9.-Nun-muessen-wir-den-JSON-String-in-JS-verwandlen"]], "Iterable?": [[227, "Iterable?"]], "List Comprehension, Generator Expression": [[227, "List-Comprehension,-Generator-Expression"]], "Literals": [[227, "Literals"], [504, "literals"]], "Quoting?": [[227, "Quoting?"], [231, "Quoting?"]], "Multiline Strings": [[227, "Multiline-Strings"], [231, "Multiline-Strings"], [324, "Multiline-Strings"], [1067, "multiline-strings"]], "Functionality": [[227, "Functionality"], [849, "functionality"]], "strip() and friends": [[227, "strip()-and-friends"]], "f-Strings (since Python 3.6)": [[227, "f-Strings-(since-Python-3.6)"]], "Parsing date formats": [[227, "Parsing-date-formats"]], "Read a Cleaned-Up SAP Export": [[228, "read-a-cleaned-up-sap-export"]], "Requirement": [[228, "requirement"], [503, "requirement"], [525, "requirement"], [526, "requirement"], [527, "requirement"], [531, "requirement"], [532, "requirement"], [533, "requirement"], [534, "requirement"], [535, "requirement"], [536, "requirement"], [952, "requirement"], [959, "requirement"], [1079, "requirement"], [1080, "requirement"], [1101, "requirement"], [1112, "requirement"], [1113, "requirement"], [1114, "requirement"], [1115, "requirement"], [1117, "requirement"], [1118, "requirement"], [1119, "requirement"], [1120, "requirement"]], "Solution": [[228, "solution"], [482, "solution"], [484, "solution"], [487, "solution"], [1159, "solution"]], "Python Grundlagen (2021-08-23 - 2021-08-25)": [[229, "python-grundlagen-2021-08-23-2021-08-25"]], "Initial Terminology": [[231, "Initial-Terminology"]], "Sequence": [[231, "Sequence"]], "Tuple (immutable)": [[231, "Tuple-(immutable)"], [324, "Tuple-(immutable)"]], "References, (Im)mutability": [[231, "References,-(Im)mutability"], [244, "References,-(Im)mutability"], [257, "References,-(Im)mutability"], [260, "References,-(Im)mutability"], [275, "References,-(Im)mutability"], [282, "References,-(Im)mutability"], [296, "References,-(Im)mutability"], [302, "References,-(Im)mutability"], [302, "id1"], [314, "References,-(Im)mutability"], [336, "References,-(Im)mutability"], [1063, "references-im-mutability"]], "Iteration, for, and range()": [[231, "Iteration,-for,-and-range()"]], "Iterator Protocol (not so important for beginners)": [[231, "Iterator-Protocol-(not-so-important-for-beginners)"]], "Iteration, and Compound Datatypes": [[231, "Iteration,-and-Compound-Datatypes"]], "List and Tuple": [[231, "List-and-Tuple"]], "matplotlib": [[231, "matplotlib"], [263, "matplotlib"]], "File I/O, and Strings": [[231, "File-I/O,-and-Strings"]], "Raw strings: Windows path names": [[231, "Raw-strings:-Windows-path-names"]], "Miscellaneous String Methods": [[231, "Miscellaneous-String-Methods"], [242, "Miscellaneous-String-Methods"], [244, "Miscellaneous-String-Methods"], [250, "Miscellaneous-String-Methods"], [260, "Miscellaneous-String-Methods"], [275, "Miscellaneous-String-Methods"], [296, "Miscellaneous-String-Methods"], [302, "Miscellaneous-String-Methods"], [324, "Miscellaneous-String-Methods"], [330, "Miscellaneous-String-Methods"], [1069, "miscellaneous-string-methods"], [340, "Miscellaneous-String-Methods"]], "Python Basics (2021-08-31 - 2021-09-01)": [[232, "python-basics-2021-08-31-2021-09-01"], [375, "python-basics-2021-08-31-2021-09-01"]], "Numerics, and AI": [[232, "numerics-and-ai"]], "Mountains near Graz": [[232, "mountains-near-graz"]], "2021-11-17": [[234, "2021-11-17"]], "Enter Tuples": [[234, "Enter-Tuples"]], "Datatype Conversions, Type Names": [[234, "Datatype-Conversions,-Type-Names"]], "NoneType": [[234, "NoneType"]], "Short Circuit Evaluation of Boolean Expression": [[234, "Short-Circuit-Evaluation-of-Boolean-Expression"]], "Exercise: Mixed List": [[234, "Exercise:-Mixed-List"]], "Python Documentation": [[234, "Python-Documentation"]], "for": [[234, "for"], [296, "for"], [352, "for"], [340, "for"]], "Iteration over Compound Datatypes": [[234, "Iteration-over-Compound-Datatypes"], [244, "Iteration-over-Compound-Datatypes"]], "File IO": [[234, "File-IO"], [250, "File-IO"], [278, "file-io"], [282, "File-IO"], [318, "File-IO"], [324, "File-IO"]], "Generators, Iterator Protocol, for": [[234, "Generators,-Iterator-Protocol,-for"]], "Common Sequence Operation": [[234, "Common-Sequence-Operation"]], "Comprehensions": [[234, "Comprehensions"], [237, "Comprehensions"], [250, "Comprehensions"], [282, "Comprehensions"], [314, "Comprehensions"]], "List, Iterable? WTF?": [[234, "List,-Iterable?-WTF?"]], "Dict and iterable": [[234, "Dict-and-iterable"]], "More on Lists": [[234, "More-on-Lists"], [242, "More-on-Lists"], [257, "More-on-Lists"]], "More on Dictionaries": [[234, "More-on-Dictionaries"], [242, "More-on-Dictionaries"]], "References, Mutability": [[234, "References,-Mutability"]], "CSV": [[234, "CSV"], [251, "csv"], [259, "csv"], [296, "CSV"]], "Python Basics (2021-11-17 - 2021-11-19)": [[235, "python-basics-2021-11-17-2021-11-19"], [375, "python-basics-2021-11-17-2021-11-19"]], "Python (Core Topics)": [[235, "python-core-topics"]], "Python Standard Library": [[235, "python-standard-library"]], "More About Strings": [[237, "More-About-Strings"], [254, "More-About-Strings"], [302, "More-About-Strings"], [324, "More-About-Strings"], [330, "More-About-Strings"], [336, "More-About-Strings"], [1067, "more-about-strings"]], "List, Tuple": [[237, "List,-Tuple"], [292, "List,-Tuple"], [296, "List,-Tuple"]], "Tuple Unpacking: What Else": [[237, "Tuple-Unpacking:-What-Else"]], "Iterator Protocol": [[237, "Iterator-Protocol"], [244, "Iterator-Protocol"], [275, "Iterator-Protocol"], [292, "Iterator-Protocol"], [296, "Iterator-Protocol"], [324, "Iterator-Protocol"]], "yield": [[237, "yield"], [260, "yield"]], "Everything is an Object of a Type": [[237, "Everything-is-an-Object-of-a-Type"]], "Generators, used more creatively": [[237, "Generators,-used-more-creatively"]], "Exception Handling and Exception Types": [[237, "Exception-Handling-and-Exception-Types"]], "2021-12-17": [[237, "2021-12-17"]], "Shift Operators": [[237, "Shift-Operators"]], "PCAP Sample Exam": [[237, "PCAP-Sample-Exam"]], "System Errors": [[237, "System-Errors"]], "Python Advanced (2021-12-01 - 2021-12-03)": [[238, "python-advanced-2021-12-01-2021-12-03"], [375, "python-advanced-2021-12-01-2021-12-03"]], "Basics Recap": [[238, "basics-recap"], [291, "basics-recap"]], "Group Project Preparation": [[238, "group-project-preparation"]], "Hmmm?": [[238, "hmmm"]], "C/C++ Programming (2021-12-06 - 2021-12-10, 2022-01-24 - 2022-02-04)": [[240, "c-c-programming-2021-12-06-2021-12-10-2022-01-24-2022-02-04"], [375, "c-c-programming-2021-12-06-2021-12-10-2022-01-24-2022-02-04"]], "2021-12-06": [[240, "id1"]], "2021-12-07": [[240, "id2"]], "2021-12-08": [[240, "id3"]], "2021-12-09": [[240, "id4"]], "2022-01-24": [[240, "id5"]], "Undefined Behavior": [[240, "undefined-behavior"]], "Modularization": [[240, "modularization"], [420, "modularization"]], "2022-01-25": [[240, "id6"]], "C++ and OO (Classes)": [[240, "c-and-oo-classes"]], "Modularization (again)": [[240, "modularization-again"]], "2022-01-26": [[240, "id7"]], "Modularization: Repeating Important Topics (Quickly)": [[240, "modularization-repeating-important-topics-quickly"]], "Classes (continued)": [[240, "classes-continued"]], "2022-01-27": [[240, "id8"]], "2022-01-28": [[240, "id9"]], "Standard Template Library: Container Templates": [[240, "standard-template-library-container-templates"]], "2022-01-31": [[240, "id10"]], "2022-02-01": [[240, "id11"]], "Algorithms": [[240, "algorithms"], [627, "algorithms"]], "Functors": [[240, "functors"]], "Unified Modeling Language (UML)": [[240, "unified-modeling-language-uml"]], "Exercise (Using All From Today)": [[240, "exercise-using-all-from-today"]], "2022-02-02": [[240, "id12"]], "Associative Container: std::map": [[240, "associative-container-std-map"]], "Exceptions, and Exception Handling": [[240, "exceptions-and-exception-handling"]], "2022-02-03": [[240, "id13"]], "2022-02-04": [[240, "id14"]], "C++11: A New Language": [[240, "c-11-a-new-language"]], "Dynamic Allocation, Smart Pointers": [[240, "dynamic-allocation-smart-pointers"]], "2022-02-07: Start of Exercise Week": [[240, "start-of-exercise-week"]], "Programmierung Grundlagen, anhand von Python (2022-01-17 - 2022-01-10)": [[241, "programmierung-grundlagen-anhand-von-python-2022-01-17-2022-01-10"], [375, "programmierung-grundlagen-anhand-von-python-2022-01-17-2022-01-10"]], "2022-01-17": [[242, "2022-01-17"]], "Variables and Datatypes": [[242, "Variables-and-Datatypes"]], "Comments vs Docstrings": [[242, "Comments-vs-Docstrings"]], "Integer (Ganze Zahl)": [[242, "Integer-(Ganze-Zahl)"]], "Integer Numbers: Arithmetic": [[242, "Integer-Numbers:-Arithmetic"], [254, "Integer-Numbers:-Arithmetic"], [1054, "integer-numbers-arithmetic"]], "Some Methods": [[242, "Some-Methods"]], "String Formatting: f-Strings": [[242, "String-Formatting:-f-Strings"]], "More about Strings": [[242, "More-about-Strings"]], "if": [[242, "if"], [282, "if"]], "2022-01-18": [[242, "2022-01-18"]], "Miscellanea": [[242, "Miscellanea"]], "Braces: Single Element Tuples?": [[242, "Braces:-Single-Element-Tuples?"]], "Ranges -> range() (hour_of_day)": [[242, "Ranges-->-range()-(hour_of_day)"]], "while Loops": [[242, "while-Loops"], [244, "while-Loops"], [257, "while-Loops"], [324, "while-Loops"], [1058, "while-loops"], [1058, "id1"], [340, "while-Loops"]], "break and continue": [[242, "break-and-continue"], [417, "break-and-continue"], [417, "id1"], [1058, "break-and-continue"]], "yield, Generator, Iteration Protocol": [[242, "yield,-Generator,-Iteration-Protocol"]], "Sequence Membership": [[242, "Sequence-Membership"], [1059, "sequence-membership"]], "list (mutable)": [[242, "list-(mutable)"]], "tuple (immutable)": [[242, "tuple-(immutable)"]], "dict (mutable)": [[242, "dict-(mutable)"]], "set (mutable)": [[242, "set-(mutable)"]], "Why Index Based Iteration is not Always the Best Way to Iterate": [[242, "Why-Index-Based-Iteration-is-not-Always-the-Best-Way-to-Iterate"]], "How to get Indexes if There are None? (enumerate(), and Tuple Unpacking)": [[242, "How-to-get-Indexes-if-There-are-None?-(enumerate(),-and-Tuple-Unpacking)"]], "Default Parameters": [[242, "Default-Parameters"], [244, "Default-Parameters"], [353, "Default-Parameters"], [1065, "default-parameters"]], "List Comprehensions": [[242, "List-Comprehensions"], [254, "List-Comprehensions"]], "Iteration over Dictionaries": [[242, "Iteration-over-Dictionaries"]], "Building Dictionaries": [[242, "Building-Dictionaries"], [1071, "building-dictionaries"]], "More on Sets": [[242, "More-on-Sets"]], "with: Context Managers": [[242, "with:-Context-Managers"]], "Strings Intro": [[244, "Strings-Intro"]], "Doc Strings": [[244, "Doc-Strings"]], "Object Identity": [[244, "Object-Identity"]], "Integers": [[244, "Integers"], [254, "Integers"], [257, "Integers"], [275, "Integers"], [282, "Integers"], [302, "Integers"], [318, "Integers"], [324, "Integers"], [330, "Integers"], [340, "Integers"]], "Variablen? Datenypen?": [[244, "Variablen?-Datenypen?"]], "Objects, Classes": [[244, "Objects,-Classes"]], "Python Standard Libarary Examples": [[244, "Python-Standard-Libarary-Examples"]], "collections": [[244, "collections"]], "ChainMap": [[244, "ChainMap"]], "deque": [[244, "deque"]], "Suchalgorithmen und Datenstrukturen (Ausflug)": [[244, "Suchalgorithmen-und-Datenstrukturen-(Ausflug)"]], "Slice Assignment": [[244, "Slice-Assignment"], [1060, "slice-assignment"]], "Lists are mutable": [[244, "Lists-are-mutable"]], "Shallow copy and deep copy": [[244, "Shallow-copy-and-deep-copy"]], "else": [[244, "else"], [250, "else"], [340, "else"]], "for Loops, range()": [[244, "for-Loops,-range()"]], "Default Parameters: Pitfalls": [[244, "Default-Parameters:-Pitfalls"]], "dict.fromkeys()": [[244, "dict.fromkeys()"], [257, "dict.fromkeys()"]], "Generators": [[244, "Generators"], [250, "Generators"], [290, "generators"], [291, "generators"], [295, "generators"], [312, "generators"], [316, "generators"]], "join, split": [[244, "join,-split"]], "strip, lstrip, rstrip": [[244, "strip,-lstrip,-rstrip"]], "Python Basics (2022-02-23 - 2022-02-25)": [[245, "python-basics-2022-02-23-2022-02-25"], [375, "python-basics-2022-02-23-2022-02-25"]], "Data Structures": [[245, "data-structures"]], "OS Things": [[245, "os-things"]], "Data Science": [[245, "data-science"], [313, "data-science"], [314, "Data-Science"], [336, "Data-Science"]], "Wiederholung": [[247, "Wiederholung"]], "Mutable/Immutable": [[247, "Mutable/Immutable"]], "Attribute": [[247, "Attribute"]], "Sequentielle vs. Konstante Suchzeit": [[247, "Sequentielle-vs.-Konstante-Suchzeit"]], "Exceptions": [[247, "Exceptions"], [263, "Exceptions"], [288, "exceptions"], [322, "exceptions"], [328, "exceptions"], [334, "exceptions"], [560, "exceptions"], [607, "exceptions"], [608, "exceptions"], [338, "exceptions"]], "for vs. while, range()": [[247, "for-vs.-while,-range()"]], "String Methods (some)": [[247, "String-Methods-(some)"]], "eval()": [[247, "eval()"], [257, "eval()"], [314, "eval()"]], "exec()": [[247, "exec()"], [263, "exec()"], [324, "exec()"]], "Dictionary Iteration": [[247, "Dictionary-Iteration"], [340, "Dictionary-Iteration"]], "Classes, Attributes, OO": [[247, "Classes,-Attributes,-OO"]], "Types and Instances": [[247, "Types-and-Instances"]], "Metaprogramming? Types? What is a Type?": [[247, "Metaprogramming?-Types?-What-is-a-Type?"]], "OO Everywhere": [[247, "OO-Everywhere"]], "Dictionary Operations": [[247, "Dictionary-Operations"]], "collections.defaultdict": [[247, "collections.defaultdict"], [272, "collections.defaultdict"]], "Python Advanced (2022-03-15 - 2022-03-17, 2022-03-31)": [[248, "python-advanced-2022-03-15-2022-03-17-2022-03-31"]], "2022-03-15": [[248, "id1"]], "2022-03-16": [[248, "id2"]], "Test Driven Development": [[248, "test-driven-development"], [290, "test-driven-development"], [312, "test-driven-development"], [313, "test-driven-development"]], "2022-03-17": [[248, "id3"]], "2022-03-31": [[248, "id4"]], "Hello World": [[250, "Hello-World"], [379, "hello-world"], [1049, "hello-world"]], "Blahblah": [[250, "Blahblah"], [617, "blahblah"], [1048, "blahblah"]], "Object Oriented?": [[250, "Object-Oriented?"]], "MQTT": [[250, "MQTT"], [316, "mqtt"], [1139, "mqtt"]], "Commandline Arguments": [[250, "Commandline-Arguments"], [431, "commandline-arguments"], [431, "id1"]], "Object Lifetime": [[250, "Object-Lifetime"]], "Boolean, Short Circuit Evaluation": [[250, "Boolean,-Short-Circuit-Evaluation"]], "More String Methods": [[250, "More-String-Methods"], [250, "id1"]], "Dictionary Preview": [[250, "Dictionary-Preview"]], "list: Mutable": [[250, "list:-Mutable"]], "list(): explicit constructor": [[250, "list():-explicit-constructor"]], "tuple: Immutable": [[250, "tuple:-Immutable"]], "dict: Mutable": [[250, "dict:-Mutable"]], "set: Mutable": [[250, "set:-Mutable"]], "List comprehension": [[250, "List-comprehension"]], "DIctionary Comprehension": [[250, "DIctionary-Comprehension"]], "Set Comprehension": [[250, "Set-Comprehension"], [314, "Set-Comprehension"], [324, "Set-Comprehension"], [1019, "set-comprehension"]], "max": [[250, "max"]], "for, enumerate()": [[250, "for,-enumerate()"]], "Iteratoren, Generatoren": [[250, "Iteratoren,-Generatoren"]], "Generatoren": [[250, "Generatoren"]], "split und join": [[250, "split-und-join"]], "strip()": [[250, "strip()"]], "dict vs. OrderedDict": [[250, "dict-vs.-OrderedDict"]], "Duck Typing": [[250, "Duck-Typing"], [1035, "duck-typing"]], "Interfaces": [[250, "Interfaces"], [656, "interfaces"]], "Implementation Inheritance": [[250, "Implementation-Inheritance"]], "Method Resolution Order (MRO), and super()": [[250, "Method-Resolution-Order-(MRO),-and-super()"]], "__bases__": [[250, "__bases__"]], "__mro__": [[250, "__mro__"]], "Object Layout (self)": [[250, "Object-Layout-(self)"]], "More from OO": [[250, "More-from-OO"]], "Calling Base Class Constructor (Many Ways)": [[250, "Calling-Base-Class-Constructor-(Many-Ways)"]], "Name Mangling (\u201cprivate\u201d Members)": [[250, "Name-Mangling-(%22private%22-Members)"]], "Yet Another Example From Udemy": [[250, "Yet-Another-Example-From-Udemy"]], "Exception Handling": [[250, "Exception-Handling"], [281, "exception-handling"], [284, "exception-handling"], [289, "exception-handling"], [368, "exception-handling"], [1022, "exception-handling"]], "Order of except Clauses": [[250, "Order-of-except-Clauses"]], "finally": [[250, "finally"]], "lambda": [[250, "lambda"]], "map(), filter()": [[250, "map(),-filter()"], [314, "map(),-filter()"]], "Generators, Iteration Protocol": [[250, "Generators,-Iteration-Protocol"]], "Class Variables (as Opposed to Instance Variables)": [[250, "Class-Variables-(as-Opposed-to-Instance-Variables)"]], "Python (2022-03-23, 2022-03-30, 2022-04-19 - 2022-03-21)": [[251, "python-2022-03-23-2022-03-30-2022-04-19-2022-03-21"], [375, "python-2022-03-23-2022-03-30-2022-04-19-2022-03-21"]], "2022-03-23: Basics": [[251, "basics"]], "2022-03-30: Basics": [[251, "id1"]], "2022-04-19, 2022-04-20, 2022-04-21: Advanced": [[251, "advanced"]], "Plan For The Wild Part": [[251, "plan-for-the-wild-part"]], "Programmierung Grundlagen, anhand von Python (2022-04-05 - 2022-04-08)": [[253, "programmierung-grundlagen-anhand-von-python-2022-04-05-2022-04-08"], [375, "programmierung-grundlagen-anhand-von-python-2022-04-05-2022-04-08"]], "Discussion: Flow Charts?": [[253, "discussion-flow-charts"]], "BlahBlah": [[254, "BlahBlah"], [257, "BlahBlah"], [260, "BlahBlah"], [324, "BlahBlah"]], "Interactive": [[254, "Interactive"]], "For Beginners": [[254, "For-Beginners"]], "Not For Beginners?": [[254, "Not-For-Beginners?"]], "Strings, 1st Explanation": [[254, "Strings,-1st-Explanation"]], "Operator Precedence": [[254, "Operator-Precedence"], [257, "Operator-Precedence"], [1054, "operator-precedence"]], "Floating Point Numbers": [[254, "Floating-Point-Numbers"], [1054, "floating-point-numbers"]], "Docstrings": [[254, "Docstrings"], [260, "Docstrings"], [352, "Docstrings"]], "Einschub: String-Vergleich vs. Integer-Vergleich": [[254, "Einschub:-String-Vergleich-vs.-Integer-Vergleich"]], "Random Numbers": [[254, "Random-Numbers"]], "Indexing and Slicing": [[254, "Indexing-and-Slicing"], [302, "Indexing-and-Slicing"], [1060, "indexing-and-slicing"]], "for Loops": [[254, "for-Loops"], [324, "for-Loops"], [382, "for-loops"], [1061, "for-loops"]], "range()": [[254, "range()"], [282, "range()"], [330, "range()"], [336, "range()"], [340, "range()"]], "Filterketten": [[254, "Filterketten"]], "Zen": [[254, "Zen"]], "Compound Datatypes By Example: List, Tuple": [[254, "Compound-Datatypes-By-Example:-List,-Tuple"], [1055, "compound-datatypes-by-example-list-tuple"]], "Compound Datatypes By Example: Dictionary": [[254, "Compound-Datatypes-By-Example:-Dictionary"], [1055, "compound-datatypes-by-example-dictionary"]], "Datensatz als Dictionary?": [[254, "Datensatz-als-Dictionary?"]], "JSON (Javascript Object Notation)": [[254, "JSON-(Javascript-Object-Notation)"]], "Compound Datatypes By Example: Set": [[254, "Compound-Datatypes-By-Example:-Set"], [1055, "compound-datatypes-by-example-set"]], "Das Letzte Beispiel am Letzten Tag": [[254, "Das-Letzte-Beispiel-am-Letzten-Tag"]], "Python Basics (2022-04-25 - 2022-04-27)": [[256, "python-basics-2022-04-25-2022-04-27"], [375, "python-basics-2022-04-25-2022-04-27"]], "Strings und Quotes": [[257, "Strings-und-Quotes"]], "Comments vs. Docstrings": [[257, "Comments-vs.-Docstrings"]], "Variables and Types": [[257, "Variables-and-Types"]], "Swap": [[257, "Swap"]], "Integers are Infinitely long": [[257, "Integers-are-Infinitely-long"]], "Floating Point Comparison": [[257, "Floating-Point-Comparison"]], "Mutability/Immutability": [[257, "Mutability/Immutability"]], "Exercise: Digit To English Word": [[257, "Exercise:-Digit-To-English-Word"]], "Exercise: Determine Maximum of Two Numbers": [[257, "Exercise:-Determine-Maximum-of-Two-Numbers"], [1087, "exercise-determine-maximum-of-two-numbers"], [1097, "exercise-determine-maximum-of-two-numbers"]], "Ranges": [[257, "Ranges"], [733, "ranges"]], "Exercise: Sort out Duplicates": [[257, "Exercise:-Sort-out-Duplicates"]], "Algorithmic Complexity": [[257, "Algorithmic-Complexity"]], "More On Dictionaries": [[257, "More-On-Dictionaries"]], "More On Sets": [[257, "More-On-Sets"]], "eval(), json": [[257, "eval(),-json"]], "Encoding": [[257, "Encoding"], [281, "encoding"], [302, "Encoding"], [318, "Encoding"], [318, "id1"], [357, "encoding"], [1136, "encoding"]], "Python (2022-05-02 - 2022-05-05)": [[259, "python-2022-05-02-2022-05-05"], [375, "python-2022-05-02-2022-05-05"]], "Control Flow and Iteration": [[259, "control-flow-and-iteration"]], "Encoding, Strings, and File I/O": [[259, "encoding-strings-and-file-i-o"]], "Excursion: CAN Communication, OO, Modules": [[259, "excursion-can-communication-oo-modules"]], "Modules": [[259, "modules"], [272, "Modules"], [313, "modules"], [357, "modules"], [728, "modules"], [1030, "modules"]], "CSV, Functions": [[259, "csv-functions"]], "PyPI, Virtual Environments": [[259, "pypi-virtual-environments"]], "Requirements Engineering, Test Driven Development": [[259, "requirements-engineering-test-driven-development"]], "More On DataTypes": [[259, "more-on-datatypes"]], "Random Topics": [[259, "random-topics"]], "Standard Library": [[259, "standard-library"]], "Hello Jupyter Notebook": [[260, "Hello-Jupyter-Notebook"]], "Syntax etc": [[260, "Syntax-etc"]], "Mutability": [[260, "Mutability"], [292, "Mutability"]], "Removing Elements": [[260, "Removing-Elements"], [638, "removing-elements"]], "Nested Lists?": [[260, "Nested-Lists?"]], "while loops, and else": [[260, "while-loops,-and-else"]], "for loops (and else)": [[260, "for-loops-(and-else)"]], "The range() Function, Iterator Protocol": [[260, "The-range()-Function,-Iterator-Protocol"]], "Encoding, and String": [[260, "Encoding,-and-String"]], "Regular Expression": [[260, "Regular-Expression"]], "f-Strings (since Python 3.6 !!)": [[260, "f-Strings-(since-Python-3.6-!!)"]], "Tuples Containing Only One Element": [[260, "Tuples-Containing-Only-One-Element"]], "Iterables, Lists, and the itertools Modules": [[260, "Iterables,-Lists,-and-the-itertools-Modules"]], "itertools.chain()": [[260, "itertools.chain()"]], "Destructor?": [[260, "Destructor?"]], "Tuple Unpacking on Dictionaries": [[260, "Tuple-Unpacking-on-Dictionaries"]], "Python Advanced (2022-05-16 - 2022-05-18)": [[262, "python-advanced-2022-05-16-2022-05-18"], [375, "python-advanced-2022-05-16-2022-05-18"]], "Project Management": [[262, "project-management"], [313, "project-management"], [364, "project-management"], [365, "project-management"], [369, "project-management"]], "Unit Testing, Test Driven Development": [[262, "unit-testing-test-driven-development"]], "Object Priented Programming": [[262, "object-priented-programming"]], "OO: next exercise (CSV as always \ud83d\ude44)": [[262, "oo-next-exercise-csv-as-always-rolling-eyes"]], "Exercise: Exception Handling": [[262, "exercise-exception-handling"]], "Standesregister nach SQLite3": [[262, "standesregister-nach-sqlite3"]], "XML/Element Tree": [[262, "xml-element-tree"]], "Projektabschlusstag": [[262, "projektabschlusstag"]], "Basic Python": [[262, "basic-python"], [1185, "basic-python"]], "Assert": [[263, "Assert"]], "The id() function": [[263, "The-id()-function"]], "class Person": [[263, "class-Person"]], "Functions That Do Not Return Anything": [[263, "Functions-That-Do-Not-Return-Anything"]], "Classes, Attributes, und so (Dictionaries Everywhere!)": [[263, "Classes,-Attributes,-und-so-(Dictionaries-Everywhere!)"]], "Globale, lokale, und Class Variablen": [[263, "Globale,-lokale,-und-Class-Variablen"]], "Defining my Own Exceptions": [[263, "Defining-my-Own-Exceptions"]], "Dictionary Lookup, keys() etc.": [[263, "Dictionary-Lookup,-keys()-etc."]], "Integers, Strings, und so": [[263, "Integers,-Strings,-und-so"]], "Vorbesprechung 2022-05-11": [[265, "vorbesprechung-2022-05-11"]], "Legende": [[265, "legende"]], "Neuerungen in C++ seit 2011": [[265, "neuerungen-in-c-seit-2011"]], "Neuerungen in C++ 14": [[265, "neuerungen-in-c-14"]], "Neuerungen in C++ 17": [[265, "neuerungen-in-c-17"]], "Neuerungen in C++ 20 (Ausblick)": [[265, "neuerungen-in-c-20-ausblick"]], "C++: A New Language Starting In 2011": [[266, "c-a-new-language-starting-in-2011"], [267, "c-a-new-language-starting-in-2011"]], "Metadata": [[266, "metadata"], [267, "metadata"], [269, "metadata"], [907, "metadata"]], "Introduction": [[266, "introduction"], [267, "introduction"], [269, "introduction"], [288, "introduction"], [289, "introduction"], [378, "introduction"], [457, "introduction"], [488, "introduction"], [583, "introduction"], [680, "introduction"], [739, "introduction"], [825, "introduction"], [1022, "introduction"], [395, "introduction"]], "Pythonicity (Thank You: Readablility and Writability)": [[266, "pythonicity-thank-you-readablility-and-writability"], [267, "pythonicity-thank-you-readablility-and-writability"], [269, "pythonicity-thank-you-readablility-and-writability"]], "Range Based for Loops": [[266, "range-based-for-loops"], [267, "range-based-for-loops"], [269, "range-based-for-loops"], [326, "range-based-for-loops"]], "Tuple Unpacking (err, Structured Binding)": [[266, "tuple-unpacking-err-structured-binding"], [267, "tuple-unpacking-err-structured-binding"], [269, "tuple-unpacking-err-structured-binding"], [326, "tuple-unpacking-err-structured-binding"]], "Duck Typing (err, auto) Without A Duck": [[266, "duck-typing-err-auto-without-a-duck"], [267, "duck-typing-err-auto-without-a-duck"], [269, "duck-typing-err-auto-without-a-duck"], [326, "duck-typing-err-auto-without-a-duck"]], "Things That Simply Deserved Fixing Since Ages": [[266, "things-that-simply-deserved-fixing-since-ages"], [267, "things-that-simply-deserved-fixing-since-ages"], [269, "things-that-simply-deserved-fixing-since-ages"]], "Brace Initialization": [[266, "brace-initialization"], [267, "brace-initialization"], [269, "brace-initialization"], [326, "brace-initialization"], [327, "brace-initialization"]], "New OO keywords: override, final, default, delete": [[266, "new-oo-keywords-override-final-default-delete"], [267, "new-oo-keywords-override-final-default-delete"], [269, "new-oo-keywords-override-final-default-delete"], [326, "new-oo-keywords-override-final-default-delete"]], "Strongly Typed enum": [[266, "strongly-typed-enum"], [267, "strongly-typed-enum"], [269, "strongly-typed-enum"], [326, "strongly-typed-enum"], [683, "strongly-typed-enum"]], "Delegating Constructor": [[266, "delegating-constructor"], [267, "delegating-constructor"], [269, "delegating-constructor"], [326, "delegating-constructor"], [688, "delegating-constructor"]], "nullptr": [[266, "nullptr"], [267, "nullptr"], [269, "nullptr"], [326, "nullptr"], [696, "nullptr"]], "Smart Pointers": [[266, "smart-pointers"], [267, "smart-pointers"], [269, "smart-pointers"], [289, "smart-pointers"], [327, "smart-pointers"], [560, "smart-pointers"]], "Moving, \u201cRValue References\u201d": [[266, "moving-rvalue-references"], [267, "moving-rvalue-references"]], "Functions (std::bind<>, std::function<>, Lambdas)": [[266, "functions-std-bind-std-function-lambdas"], [267, "functions-std-bind-std-function-lambdas"], [269, "functions-std-bind-std-function-lambdas"]], "Work Environment": [[267, "work-environment"], [269, "work-environment"], [287, "work-environment"], [288, "work-environment"], [289, "work-environment"], [364, "work-environment"]], "Skeleton Project": [[267, "skeleton-project"], [269, "skeleton-project"], [602, "skeleton-project"]], "Linux Basics (2022-10-03 - 2022-10-05)": [[268, "linux-basics-2022-10-03-2022-10-05"], [375, "linux-basics-2022-10-03-2022-10-05"]], "C++: A New Language Starting In 2011 (2022-10-11 - 2022-10-13)": [[269, "c-a-new-language-starting-in-2011-2022-10-11-2022-10-13"], [375, "c-a-new-language-starting-in-2011-2022-10-11-2022-10-13"]], "Moving, \u201cRValue References\u201d, And Perfect Forwarding": [[269, "moving-rvalue-references-and-perfect-forwarding"]], "News in C++20 (2023-06-13)": [[269, "news-in-c-20-2023-06-13"]], "Coroutines and C++23 Generators": [[269, "coroutines-and-c-23-generators"]], "Ranges And Views": [[269, "ranges-and-views"]], "Concepts": [[269, "concepts"], [326, "concepts"], [698, "concepts"]], "Design- and Architectural Patterns With C++ (2022-10-24 - 2022-10-26)": [[270, "design-and-architectural-patterns-with-c-2022-10-24-2022-10-26"], [375, "design-and-architectural-patterns-with-c-2022-10-24-2022-10-26"]], "Monday": [[270, "monday"]], "Tuesday": [[270, "tuesday"]], "Wednesday": [[270, "wednesday"]], "Python: Tour-De-Force (2022-11-07 - 2022-11-10, 2022-12-01)": [[271, "python-tour-de-force-2022-11-07-2022-11-10-2022-12-01"]], "Up Front: Project Management": [[271, "up-front-project-management"], [290, "up-front-project-management"], [312, "up-front-project-management"]], "Object Oriented Programming: Classes": [[271, "object-oriented-programming-classes"]], "Exercise Series: CSV": [[271, "exercise-series-csv"]], "Missing Pieces: Encoding, Unit Testing": [[271, "missing-pieces-encoding-unit-testing"]], "Exercise Series: CSV, JSON": [[271, "exercise-series-csv-json"]], "Iteration, Generators": [[271, "iteration-generators"]], "Going Dynamic: type(), exec()": [[271, "going-dynamic-type-exec"]], "More OO: Inheritance, Abstract Base Classes": [[271, "more-oo-inheritance-abstract-base-classes"]], "Group Project Kickoff": [[271, "group-project-kickoff"], [291, "group-project-kickoff"], [313, "group-project-kickoff"], [316, "group-project-kickoff"]], "Data Structures Recap": [[271, "data-structures-recap"]], "Miscellaneous Livehacking": [[271, "miscellaneous-livehacking"]], "Function Arguments, Closures, Decorators": [[271, "function-arguments-closures-decorators"], [306, "function-arguments-closures-decorators"]], "Exceptions, with": [[271, "exceptions-with"], [306, "exceptions-with"], [309, "exceptions-with"]], "Package Management": [[271, "package-management"]], "Videos": [[271, "videos"], [317, "videos"]], "Beginner": [[271, "beginner"], [295, "beginner"]], "Advanced": [[271, "advanced"], [295, "advanced"]], "Fun": [[271, "fun"]], "Python (2022-10-17)": [[272, "Python-(2022-10-17)"]], "Tuple Unpacking, Lists Iteration, And Such": [[272, "Tuple-Unpacking,-Lists-Iteration,-And-Such"]], "Variables, Types": [[272, "Variables,-Types"]], "Immutable? References?": [[272, "Immutable?-References?"]], "And range()?": [[272, "And-range()?"]], "More About Dictionaries": [[272, "More-About-Dictionaries"], [272, "id1"], [275, "More-About-Dictionaries"], [302, "More-About-Dictionaries"], [324, "More-About-Dictionaries"], [330, "More-About-Dictionaries"], [336, "More-About-Dictionaries"], [1071, "more-about-dictionaries"], [340, "More-About-Dictionaries"]], "More About Lists": [[272, "More-About-Lists"], [275, "More-About-Lists"], [302, "More-About-Lists"], [324, "More-About-Lists"], [330, "More-About-Lists"], [336, "More-About-Lists"], [1070, "more-about-lists"], [340, "More-About-Lists"]], "Python (2022-11-16 - 2022-11-18)": [[274, "python-2022-11-16-2022-11-18"], [275, "Python-(2022-11-16---2022-11-18)"], [375, "python-2022-11-16-2022-11-18"]], "Control Flow, Sequences, Iteration": [[274, "control-flow-sequences-iteration"], [281, "control-flow-sequences-iteration"], [284, "control-flow-sequences-iteration"], [294, "control-flow-sequences-iteration"], [295, "control-flow-sequences-iteration"], [300, "control-flow-sequences-iteration"], [301, "control-flow-sequences-iteration"], [301, "id2"], [322, "control-flow-sequences-iteration"], [323, "control-flow-sequences-iteration"], [328, "control-flow-sequences-iteration"], [329, "control-flow-sequences-iteration"], [334, "control-flow-sequences-iteration"], [335, "control-flow-sequences-iteration"], [338, "control-flow-sequences-iteration"], [339, "control-flow-sequences-iteration"]], "More Datatypes": [[274, "more-datatypes"], [281, "more-datatypes"], [284, "more-datatypes"], [294, "more-datatypes"], [295, "more-datatypes"], [295, "id2"], [300, "more-datatypes"], [301, "more-datatypes"], [322, "more-datatypes"], [323, "more-datatypes"], [328, "more-datatypes"], [334, "more-datatypes"], [335, "more-datatypes"], [380, "more-datatypes"], [338, "more-datatypes"]], "Exercise Series: CSV Files": [[274, "exercise-series-csv-files"], [294, "exercise-series-csv-files"], [295, "exercise-series-csv-files"], [300, "exercise-series-csv-files"], [301, "exercise-series-csv-files"], [322, "exercise-series-csv-files"], [323, "exercise-series-csv-files"], [329, "exercise-series-csv-files"], [334, "exercise-series-csv-files"], [335, "exercise-series-csv-files"], [338, "exercise-series-csv-files"], [339, "exercise-series-csv-files"]], "Advanced Language Features": [[274, "advanced-language-features"], [294, "advanced-language-features"], [295, "advanced-language-features"], [300, "advanced-language-features"], [443, "advanced-language-features"]], "Noob Exercises": [[274, "noob-exercises"]], "Object Oriented": [[275, "Object-Oriented"]], "Lists and Tuples": [[275, "Lists-and-Tuples"]], "for, and Iteration, and Generators": [[275, "for,-and-Iteration,-and-Generators"]], "Lists, Dictionaries, Generators, Constructors": [[275, "Lists,-Dictionaries,-Generators,-Constructors"]], "And Lists? Mutable!": [[275, "And-Lists?-Mutable!"]], "Tuples?": [[275, "Tuples?"]], "set": [[275, "set"]], "More About Sets": [[275, "More-About-Sets"], [302, "More-About-Sets"], [330, "More-About-Sets"], [336, "More-About-Sets"], [1072, "more-about-sets"], [340, "More-About-Sets"]], "Comprehensions (List, Dictionary, Set)": [[275, "Comprehensions-(List,-Dictionary,-Set)"], [324, "Comprehensions-(List,-Dictionary,-Set)"], [336, "Comprehensions-(List,-Dictionary,-Set)"], [1019, "comprehensions-list-dictionary-set"]], "Generator Expressions": [[275, "Generator-Expressions"]], "eval and exec": [[275, "eval-and-exec"]], "Linux Basics (2023-01-23 - 2023-01-26)": [[277, "linux-basics-2023-01-23-2023-01-26"], [375, "linux-basics-2023-01-23-2023-01-26"]], "Embedded Linux Systems Programming (2023-02-13 - 2023-02-17)": [[278, "embedded-linux-systems-programming-2023-02-13-2023-02-17"], [375, "embedded-linux-systems-programming-2023-02-13-2023-02-17"]], "WSL For Core Linux Topics": [[278, "wsl-for-core-linux-topics"]], "Cross Development For Hardware Topics": [[278, "cross-development-for-hardware-topics"]], "Day 1: Overview": [[278, "day-1-overview"]], "Introductory Live Hacking": [[278, "introductory-live-hacking"]], "The Shell": [[278, "the-shell"]], "Processes Quick Walk-Through": [[278, "processes-quick-walk-through"]], "Permissions": [[278, "permissions"]], "Development: CMake Quick Intro, And Git Quick Intro": [[278, "development-cmake-quick-intro-and-git-quick-intro"]], "UART": [[278, "uart"]], "SUSI": [[278, "susi"]], "Secure Shell (SSH)": [[278, "secure-shell-ssh"]], "Miscellaneous Hardware": [[278, "miscellaneous-hardware"]], "Group Exercise": [[278, "group-exercise"]], "Untold": [[278, "untold"], [288, "untold"], [291, "untold"]], "More From The Commandline": [[278, "more-from-the-commandline"]], "Multithreading (And C++)": [[278, "multithreading-and-c"]], "Whetting Your Appetite (Jupyter Notebook)": [[279, "Whetting-Your-Appetite-(Jupyter-Notebook)"]], "Filter in Pandas": [[279, "Filter-in-Pandas"]], "Copy vs Reference": [[279, "Copy-vs-Reference"]], "Immutable": [[279, "Immutable"]], "String": [[279, "String"]], "Regex": [[279, "Regex"]], "Whetting Your Appetite (Livehacking Demo)": [[280, "whetting-your-appetite-livehacking-demo"]], "Pipeline Driver": [[280, "pipeline-driver"]], "Virtual Environment Setup": [[280, "virtual-environment-setup"]], "Filter: Add Category: card-payment": [[280, "filter-add-category-card-payment"]], "Filter: Select Uncategorized": [[280, "filter-select-uncategorized"]], "More Categories": [[280, "more-categories"]], "Python For SAP Developers (2023-03-13 - 2023-03-15)": [[281, "python-for-sap-developers-2023-03-13-2023-03-15"], [375, "python-for-sap-developers-2023-03-13-2023-03-15"]], "Day 1 (Basics)": [[281, "day-1-basics"]], "Demo": [[281, "demo"]], "Day 2 (Basics, Continued)": [[281, "day-2-basics-continued"]], "Pandas": [[281, "pandas"], [282, "Pandas"], [284, "pandas"], [288, "pandas"], [313, "pandas"], [1143, "pandas"]], "Hacking About On A SAP Test Dataset": [[281, "hacking-about-on-a-sap-test-dataset"], [285, "hacking-about-on-a-sap-test-dataset"]], "Untold (From Original Agenda)": [[281, "untold-from-original-agenda"]], "OO Introduction": [[281, "oo-introduction"], [284, "oo-introduction"]], "Context Managers (Automatic Cleanup)": [[281, "context-managers-automatic-cleanup"], [284, "context-managers-automatic-cleanup"]], "Iteration, Generators, Comprehensions": [[281, "iteration-generators-comprehensions"], [284, "iteration-generators-comprehensions"]], "Decorators, and Related Topics": [[281, "decorators-and-related-topics"], [284, "decorators-and-related-topics"]], "Machine Learning: Pandas, NumPy, And Algorithms": [[281, "machine-learning-pandas-numpy-and-algorithms"]], "2023-03-13": [[282, "2023-03-13"]], "Comment vs Docstring": [[282, "Comment-vs-Docstring"]], "Mutable? Immutable?": [[282, "Mutable?-Immutable?"]], "Lists": [[282, "Lists"], [282, "id2"], [296, "Lists"], [336, "Lists"]], "Tuples": [[282, "Tuples"]], "DataType Conversiosn": [[282, "DataType-Conversiosn"]], "String, File IO Exercise": [[282, "String,-File-IO-Exercise"]], "Python For SAP Developers (Jupyter Notebook)": [[283, "python-for-sap-developers-jupyter-notebook"]], "Original Agenda: Python For SAP Developers (2023-03-13 - 2023-03-15)": [[284, "original-agenda-python-for-sap-developers-2023-03-13-2023-03-15"]], "Day 1: Basics": [[284, "day-1-basics"], [317, "day-1-basics"]], "Day 2: Outlook Into Advanced Python": [[284, "day-2-outlook-into-advanced-python"]], "Day 3: Domain Specifics": [[284, "day-3-domain-specifics"]], "NumPy": [[284, "numpy"], [313, "numpy"]], "Some Usecases On A Test Dataset From SAP": [[286, "Some-Usecases-On-A-Test-Dataset-From-SAP"]], "Dropping Columns That Contain Only NaN Values": [[286, "Dropping-Columns-That-Contain-Only-NaN-Values"]], "DataFrame.isna()": [[286, "DataFrame.isna()"]], "DataFrame.all() (and any())": [[286, "DataFrame.all()-(and-any())"]], "Column Selection": [[286, "Column-Selection"]], "Dropping Columns": [[286, "Dropping-Columns"]], "Fixing Date Values/Columns, And Operating With Date And Time": [[286, "Fixing-Date-Values/Columns,-And-Operating-With-Date-And-Time"]], "pandas.to_datetime()": [[286, "pandas.to_datetime()"]], "Converting The Entire DateDATE Column To A Workable Type (And Working With It)": [[286, "Converting-The-Entire-DateDATE-Column-To-A-Workable-Type-(And-Working-With-It)"]], "Conversion": [[286, "Conversion"]], "Usage: A Filter": [[286, "Usage:-A-Filter"]], "Modify Rows: Increase All Prices Of One Particular Store By 10%": [[286, "Modify-Rows:-Increase-All-Prices-Of-One-Particular-Store-By-10%"]], "Filter Readability: Combining Filters": [[286, "Filter-Readability:-Combining-Filters"]], "C++ For Embedded Developers (2023-03-20 - 2023-03-23)": [[287, "c-for-embedded-developers-2023-03-20-2023-03-23"]], "Preferred: Ubuntu under Windows (WSL)": [[287, "preferred-ubuntu-under-windows-wsl"], [289, "preferred-ubuntu-under-windows-wsl"]], "Unsupported Environments": [[287, "unsupported-environments"]], "Skeleton Project Setup": [[287, "skeleton-project-setup"], [289, "skeleton-project-setup"]], "Classes, Objects, Methods": [[287, "classes-objects-methods"]], "Heavy Weight OO \ud83d\udcaa": [[287, "heavy-weight-oo-muscle"], [289, "heavy-weight-oo-muscle"]], "Resource Management Pitfalls": [[287, "resource-management-pitfalls"]], "R-Value References/Moving, And Managed Pointers": [[287, "r-value-references-moving-and-managed-pointers"]], "A Little Concurrency": [[287, "a-little-concurrency"]], "Untold So Far": [[287, "untold-so-far"]], "C++ Standard Library": [[287, "c-standard-library"]], "Miscellaneous Topics": [[287, "miscellaneous-topics"]], "Clean Code Development With Python (2023-03-28 - 2023-03-29)": [[288, "clean-code-development-with-python-2023-03-28-2023-03-29"]], "Clean Code?": [[288, "clean-code"], [290, "clean-code"], [291, "clean-code"]], "Demo Hacking": [[288, "demo-hacking"]], "Python Development: Select Topics": [[288, "python-development-select-topics"]], "Built-In Types: Facts": [[288, "built-in-types-facts"]], "for Loops, And The Iterator Protocol": [[288, "for-loops-and-the-iterator-protocol"]], "Day 2: Clean Code? (Software Development: A Craft)": [[288, "day-2-clean-code-software-development-a-craft"]], "Closures, And Function Parameters": [[288, "closures-and-function-parameters"]], "Generators (Again), yield Fixtures, And yield Context Managers": [[288, "generators-again-yield-fixtures-and-yield-context-managers"]], "Decorators (The Ominous @)": [[288, "decorators-the-ominous"]], "Modules And Packages": [[288, "modules-and-packages"], [312, "modules-and-packages"]], "Design Patterns": [[288, "design-patterns"]], "C++ For Embedded Developers (2023-04-18 - 2023-04-20)": [[289, "c-for-embedded-developers-2023-04-18-2023-04-20"], [375, "c-for-embedded-developers-2023-04-18-2023-04-20"]], "Some Details": [[289, "some-details"]], "Standard Template Library": [[289, "standard-template-library"], [650, "standard-template-library"]], "Warm-Up": [[289, "warm-up"]], "Sensor Exercise, Resolved": [[289, "sensor-exercise-resolved"]], "OO, Cont\u2019d": [[289, "oo-cont-d"]], "Smart Pointers (Continued)": [[289, "smart-pointers-continued"]], "Exercises: Containers And Algorithms": [[289, "exercises-containers-and-algorithms"]], "Exercises: OO And Interfaces": [[289, "exercises-oo-and-interfaces"]], "Agenda: Python Advanced (2023-04-24 - 2023-04-26)": [[290, "agenda-python-advanced-2023-04-24-2023-04-26"]], "Day 1: Python Inside Out": [[290, "day-1-python-inside-out"], [291, "day-1-python-inside-out"]], "Exercise Prerequisites": [[290, "exercise-prerequisites"], [312, "exercise-prerequisites"]], "References And Other Pitfalls": [[290, "references-and-other-pitfalls"]], "Looping Constructs (With An Emphasis On The else Clause)": [[290, "looping-constructs-with-an-emphasis-on-the-else-clause"], [312, "looping-constructs-with-an-emphasis-on-the-else-clause"], [316, "looping-constructs-with-an-emphasis-on-the-else-clause"]], "Closures, Decorators And More": [[290, "closures-decorators-and-more"], [291, "closures-decorators-and-more"], [312, "closures-decorators-and-more"], [316, "closures-decorators-and-more"]], "Dynamic Features": [[290, "dynamic-features"], [291, "dynamic-features"], [292, "Dynamic-Features"], [312, "dynamic-features"], [316, "dynamic-features"]], "Error Handling And Recovery": [[290, "error-handling-and-recovery"], [291, "error-handling-and-recovery"], [312, "error-handling-and-recovery"], [313, "error-handling-and-recovery"], [316, "error-handling-and-recovery"]], "Miscellaneous Threading": [[290, "miscellaneous-threading"], [291, "miscellaneous-threading"]], "Day 2: Clean Code (In A Broader Sense), Group Project Kickoff": [[290, "day-2-clean-code-in-a-broader-sense-group-project-kickoff"]], "Group Project: Discussion": [[290, "group-project-discussion"]], "Design Patterns Overview": [[290, "design-patterns-overview"], [291, "design-patterns-overview"]], "Day 3: Group Project": [[290, "day-3-group-project"], [291, "day-3-group-project"]], "Python Advanced (2023-04-24 - 2023-04-26)": [[291, "python-advanced-2023-04-24-2023-04-26"], [375, "python-advanced-2023-04-24-2023-04-26"]], "Day 2: Object Oriented Programming, And Miscellaneous Discussion": [[291, "day-2-object-oriented-programming-and-miscellaneous-discussion"]], "Morning Opening": [[291, "morning-opening"]], "Object Oriented Programming (Continued)": [[291, "object-oriented-programming-continued"]], "Project Setup (IDE Usage?)": [[291, "project-setup-ide-usage"]], "Continue Hacking": [[291, "continue-hacking"]], "Test Driven Development, pytest": [[291, "test-driven-development-pytest"]], "Jupyter Notebook: Python Advanced (2023-04-24 - 2023-04-26)": [[292, "Jupyter-Notebook:-Python-Advanced-(2023-04-24---2023-04-26)"]], "is vs. ==": [[292, "is-vs.-=="]], "Compound DataTypes": [[292, "Compound-DataTypes"]], "class": [[292, "class"]], "Jupyter Notebook (Structure): Python Advanced (2023-04-24 - 2023-04-26)": [[293, "jupyter-notebook-structure-python-advanced-2023-04-24-2023-04-26"]], "Agenda: Python Basics (2023-05-15 - 2023-05-17)": [[294, "agenda-python-basics-2023-05-15-2023-05-17"]], "Python Basics (2023-05-15 - 2023-05-17)": [[295, "python-basics-2023-05-15-2023-05-17"], [296, "Python-Basics-(2023-05-15---2023-05-17)"], [375, "python-basics-2023-05-15-2023-05-17"]], "Morning Awakening": [[295, "morning-awakening"], [339, "morning-awakening"]], "A Bit Of venv, A Bit Of pip": [[295, "a-bit-of-venv-a-bit-of-pip"]], "Modules from Standard Library": [[295, "modules-from-standard-library"], [1123, "modules-from-standard-library"]], "Immutable vs. Mutable": [[296, "Immutable-vs.-Mutable"]], "The range Function": [[296, "The-range-Function"], [1062, "the-range-function"]], "Lambda, And Functional Programming Tools": [[296, "Lambda,-And-Functional-Programming-Tools"]], "Agenda: Linux Basics (2023-05-23 - 2023-05-25)": [[298, "agenda-linux-basics-2023-05-23-2023-05-25"]], "Linux Basics (2023-05-23 - 2023-05-25)": [[299, "linux-basics-2023-05-23-2023-05-25"], [375, "linux-basics-2023-05-23-2023-05-25"]], "Introduction: Concepts and Terminology": [[299, "introduction-concepts-and-terminology"], [859, "introduction-concepts-and-terminology"]], "The Shell (Bash - \u201cBourne Again Shell\u201d)": [[299, "the-shell-bash-bourne-again-shell"], [299, "id1"], [905, "the-shell-bash-bourne-again-shell"]], "Tools: Inspecting Text Files": [[299, "tools-inspecting-text-files"], [915, "tools-inspecting-text-files"]], "File System Permissions": [[299, "file-system-permissions"], [299, "id2"], [880, "file-system-permissions"]], "Morning Wakeup": [[299, "morning-wakeup"], [301, "morning-wakeup"], [327, "morning-wakeup"]], "I/O Redirection And Pipes": [[299, "i-o-redirection-and-pipes"], [866, "i-o-redirection-and-pipes"]], "Archiving and Compression": [[299, "archiving-and-compression"], [848, "archiving-and-compression"], [850, "archiving-and-compression"]], "Networking": [[299, "networking"]], "Processes And Scheduling": [[299, "processes-and-scheduling"]], "SSH: Secure Shell": [[299, "ssh-secure-shell"], [937, "ssh-secure-shell"]], "Shell Scripting (at least some of it)": [[299, "shell-scripting-at-least-some-of-it"]], "Agenda: Python Basics (2023-06-20 - 2023-06-22)": [[300, "agenda-python-basics-2023-06-20-2023-06-22"]], "Python Basics (2023-06-20 - 2023-06-22)": [[301, "python-basics-2023-06-20-2023-06-22"], [302, "Python-Basics-(2023-06-20---2023-06-22)"], [375, "python-basics-2023-06-20-2023-06-22"]], "Day2": [[301, "day2"]], "File I/O, And Encoding": [[301, "file-i-o-and-encoding"]], "Python Videos": [[301, "python-videos"]], "NumPy, Pandas, Matplotlib": [[301, "numpy-pandas-matplotlib"]], "DataTypes": [[302, "DataTypes"], [324, "DataTypes"]], "(Im)mutable?": [[302, "(Im)mutable?"]], "Exercise: Mixed List, Interactive Interpreter": [[302, "Exercise:-Mixed-List,-Interactive-Interpreter"]], "len(), range(), for": [[302, "len(),-range(),-for"]], "Generators, yield": [[302, "Generators,-yield"]], "Other -ables: Callable": [[302, "Other--ables:-Callable"]], "exec() (and eval())": [[302, "exec()-(and-eval())"]], "Formatting (f-Strings)": [[302, "Formatting-(f-Strings)"]], "Python Basics (Jupyter Notebook)": [[303, "python-basics-jupyter-notebook"], [325, "python-basics-jupyter-notebook"]], "Agenda: CMake (2023-07-03)": [[304, "agenda-cmake-2023-07-03"]], "Toolchain Introduction": [[304, "toolchain-introduction"], [320, "toolchain-introduction"], [1178, "toolchain-introduction"]], "Project Structure, Dependencies": [[304, "project-structure-dependencies"], [320, "project-structure-dependencies"], [1178, "project-structure-dependencies"]], "External Dependencies": [[304, "external-dependencies"], [320, "external-dependencies"], [470, "external-dependencies"], [1178, "external-dependencies"]], "Code Generators": [[304, "code-generators"], [320, "code-generators"], [1178, "code-generators"]], "Automatic Testing": [[304, "automatic-testing"], [320, "automatic-testing"], [1178, "automatic-testing"]], "Installation And Deployment": [[304, "installation-and-deployment"], [320, "installation-and-deployment"], [1178, "installation-and-deployment"]], "CMake: An Introduction (2023-07-18)": [[305, "cmake-an-introduction-2023-07-18"], [375, "cmake-an-introduction-2023-07-18"]], "Python Advanced (2023-09-25 - 2023-09-27)": [[306, "python-advanced-2023-09-25-2023-09-27"], [307, "Python-Advanced-(2023-09-25---2023-09-27)"], [375, "python-advanced-2023-09-25-2023-09-27"]], "Recap Of Python Basics Course (Before Summer)": [[306, "recap-of-python-basics-course-before-summer"], [309, "recap-of-python-basics-course-before-summer"]], "Project Management: Requirements, Sandboxing, Testing": [[306, "project-management-requirements-sandboxing-testing"], [309, "project-management-requirements-sandboxing-testing"]], "Into The Wild: Group Project Kickoff": [[306, "into-the-wild-group-project-kickoff"], [309, "into-the-wild-group-project-kickoff"]], "OO Design: Duck Typing, Inheritance, And Abstract Base Classes": [[306, "oo-design-duck-typing-inheritance-and-abstract-base-classes"], [309, "oo-design-duck-typing-inheritance-and-abstract-base-classes"]], "Package And Dependency Management": [[306, "package-and-dependency-management"]], "Equality vs. Identity": [[307, "Equality-vs.-Identity"]], "Functions Are Objects": [[307, "Functions-Are-Objects"]], "Python Advanced, Jupyter Notebook (2023-09-25 - 2023-09-27)": [[308, "python-advanced-jupyter-notebook-2023-09-25-2023-09-27"], [311, "python-advanced-jupyter-notebook-2023-09-25-2023-09-27"]], "Python Advanced (2023-10-09 - 2023-10-11)": [[309, "python-advanced-2023-10-09-2023-10-11"], [375, "python-advanced-2023-10-09-2023-10-11"]], "Classes: Basics": [[309, "classes-basics"]], "Classes: More": [[309, "classes-more"]], "Spoiler: Group Project Outcome": [[309, "spoiler-group-project-outcome"]], "More About Functions": [[309, "more-about-functions"]], "Python Advanced (2023-10-09 - 2023-10-09)": [[310, "Python-Advanced-(2023-10-09---2023-10-09)"]], "Type Annotations": [[310, "Type-Annotations"]], "Agenda: Python Advanced (2023-10-24 - 2023-10-26)": [[312, "agenda-python-advanced-2023-10-24-2023-10-26"]], "Day 1: Basic Python": [[312, "day-1-basic-python"], [316, "day-1-basic-python"]], "Datatypes, Datatypes": [[312, "datatypes-datatypes"], [316, "datatypes-datatypes"]], "Day 2: Advanced Python Features": [[312, "day-2-advanced-python-features"]], "Multiprocessing": [[312, "multiprocessing"]], "Day 3: Into The Wild": [[312, "day-3-into-the-wild"]], "Data Science Topics": [[312, "data-science-topics"], [316, "data-science-topics"]], "Group Project: An Idea": [[312, "group-project-an-idea"]], "Python Advanced (2023-10-24 - 2023-10-26)": [[313, "python-advanced-2023-10-24-2023-10-26"], [375, "python-advanced-2023-10-24-2023-10-26"]], "Python Basics Recap": [[313, "python-basics-recap"], [314, "Python-Basics-Recap"]], "The Very Basics": [[313, "the-very-basics"]], "range(), And Iteration In General": [[313, "range-and-iteration-in-general"]], "Leftovers From Yesterday": [[313, "leftovers-from-yesterday"]], "Object Oriented Programming, Continued": [[313, "object-oriented-programming-continued"], [313, "id1"]], "Group Project, OO-ified": [[313, "group-project-oo-ified"]], "Decorator Toolcase: *args, **kwargs": [[313, "decorator-toolcase-args-kwargs"]], "Morning Greeting": [[313, "morning-greeting"]], "Decorator Toolcase, Continued (Including Function Scoping and global)": [[313, "decorator-toolcase-continued-including-function-scoping-and-global"]], "Sensor Implementation That Receives UDP Datagrams": [[313, "sensor-implementation-that-receives-udp-datagrams"]], "CompositeSink": [[313, "compositesink"]], "MQTT Sink Implementation": [[313, "mqtt-sink-implementation"]], "Timestamps?": [[313, "timestamps"]], "Jupyter Notebook: Python Advanced": [[314, "Jupyter-Notebook:-Python-Advanced"]], "Jupyter Notebook Explanation": [[314, "Jupyter-Notebook-Explanation"]], "Integers and Floats": [[314, "Integers-and-Floats"]], "Strings: String Methods, Docstrings, \u2026": [[314, "Strings:-String-Methods,-Docstrings,-..."]], "Python Documentation Overview: https://docs.python.org/3/": [[314, "Python-Documentation-Overview:-https://docs.python.org/3/"]], "assert": [[314, "assert"]], "Iteration, Generators, Iterator Protocol": [[314, "Iteration,-Generators,-Iterator-Protocol"]], "AAARGHHH": [[314, "AAARGHHH"]], "Generator Expresssions": [[314, "Generator-Expresssions"]], "Dictionary Comprehension": [[314, "Dictionary-Comprehension"], [324, "Dictionary-Comprehension"], [1019, "dictionary-comprehension"]], "Functional Tools": [[314, "Functional-Tools"]], "filter()": [[314, "filter()"], [324, "filter()"]], "Jupyter Notebook (Structure): Python Advanced (2023-10-24 - 2023-10-26)": [[315, "jupyter-notebook-structure-python-advanced-2023-10-24-2023-10-26"]], "Agenda: Python Advanced (2023-11-22 - 2023-11-24)": [[316, "agenda-python-advanced-2023-11-22-2023-11-24"]], "Exercise Prerequisites: The Commandline": [[316, "exercise-prerequisites-the-commandline"]], "Day 2: Group Project Kickoff, Advanced Topics": [[316, "day-2-group-project-kickoff-advanced-topics"]], "Project Management, Test Driven Development": [[316, "project-management-test-driven-development"]], "Day 3: More Advanced Topics (All The Rest, And More)": [[316, "day-3-more-advanced-topics-all-the-rest-and-more"]], "CSV And Databases": [[316, "csv-and-databases"]], "Python Advanced (2023-11-22 - 2023-22-24)": [[317, "python-advanced-2023-11-22-2023-22-24"]], "Day 2: Group Project, And Object Oriented Programming": [[317, "day-2-group-project-and-object-oriented-programming"]], "Day 3: OO, Hacking, Python Specials": [[317, "day-3-oo-hacking-python-specials"]], "Jupyter Notebook: Python Advanced (2023-11-22 - 2023-11-24)": [[318, "Jupyter-Notebook:-Python-Advanced-(2023-11-22---2023-11-24)"]], "Assignment, And IDs": [[318, "Assignment,-And-IDs"]], "(Im)Mutability": [[318, "(Im)Mutability"]], "Operator Overloading (Basics)": [[318, "Operator-Overloading-(Basics)"]], "And Iterables? The Iterator Protocol!": [[318, "And-Iterables?-The-Iterator-Protocol!"]], "Methods": [[318, "Methods"], [594, "methods"], [741, "methods"], [742, "methods"], [743, "methods"], [1040, "methods"]], "numpy, pandas, matplotlib": [[318, "numpy,-pandas,-matplotlib"]], "Jupyter Notebook (Structure): Python Advanced (2023-11-22 - 2023-11-24)": [[319, "jupyter-notebook-structure-python-advanced-2023-11-22-2023-11-24"]], "Agenda: CMake (2023-11-27)": [[320, "agenda-cmake-2023-11-27"]], "CMake: An Introduction (2023-11-27)": [[321, "cmake-an-introduction-2023-11-27"], [375, "cmake-an-introduction-2023-11-27"]], "Agenda: Python Basics (2023-11-29 - 2023-12-01)": [[322, "agenda-python-basics-2023-11-29-2023-12-01"]], "Python Basics (2023-11-29 - 2023-12-01)": [[323, "python-basics-2023-11-29-2023-12-01"], [324, "Python-Basics-(2023-11-29---2023-12-01)"], [375, "python-basics-2023-11-29-2023-12-01"]], "Day 2, Morning Awakening": [[323, "day-2-morning-awakening"]], "Control Flow, Sequences, Iteration (Continued)": [[323, "control-flow-sequences-iteration-continued"]], "Day 3, Morning Awakening": [[323, "day-3-morning-awakening"]], "Dictionary (mutable)": [[324, "Dictionary-(mutable)"]], "Set (mutable)": [[324, "Set-(mutable)"]], "Boolean (immutable)": [[324, "Boolean-(immutable)"]], "split() and join()": [[324, "split()-and-join()"]], "Pythonicity (enumerate())": [[324, "Pythonicity-(enumerate())"]], "pandas, matplotlib": [[324, "pandas,-matplotlib"]], "Generator Expression": [[324, "Generator-Expression"]], "zip(), And Dictionaries": [[324, "zip(),-And-Dictionaries"]], "Agenda: C++: Advanced Topics": [[326, "agenda-c-advanced-topics"]], "Introduction: A New Language To Me": [[326, "introduction-a-new-language-to-me"]], "constexpr, constinit, consteval": [[326, "constexpr-constinit-consteval"]], "Functions: std::function<>, Lambdas": [[326, "functions-std-function-lambdas"], [327, "functions-std-function-lambdas"]], "Moving, RValue References: Do We Want To Copy Sensors?": [[326, "moving-rvalue-references-do-we-want-to-copy-sensors"]], "Moving: Usage": [[326, "moving-usage"]], "Moving: Implementation": [[326, "moving-implementation"]], "Type Erasure": [[326, "type-erasure"]], "Allocators": [[326, "allocators"], [645, "allocators"], [763, "allocators"]], "C++ Pythonic Toolcase": [[326, "c-pythonic-toolcase"]], "Outlook In >=20": [[326, "outlook-in-20"]], "Attributes And The Like": [[326, "attributes-and-the-like"]], "<algorithm> Overview": [[326, "algorithm-overview"]], "Miscellaneous Miscellaneous": [[326, "miscellaneous-miscellaneous"]], "C++: Advanced Topics (2023-12-04 - 2023-12-06)": [[327, "c-advanced-topics-2023-12-04-2023-12-06"], [375, "c-advanced-topics-2023-12-04-2023-12-06"]], "Day 1: Introduction: C++, A New Language": [[327, "day-1-introduction-c-a-new-language"]], "Pythonicity": [[327, "pythonicity"]], "New OO Features": [[327, "new-oo-features"]], "Day 2: Simply Getting Stuff Done": [[327, "day-2-simply-getting-stuff-done"]], "Classic Polymorphism: Interfaces": [[327, "classic-polymorphism-interfaces"]], "Move Semantics": [[327, "move-semantics"]], "Day 3: All The Rest": [[327, "day-3-all-the-rest"]], "Interfaces, And OO Design: Kochtopf And The Cloud": [[327, "interfaces-and-oo-design-kochtopf-and-the-cloud"]], "Moving, Roundup": [[327, "moving-roundup"]], "Containers And Algorithms": [[327, "containers-and-algorithms"]], "And Embedded?": [[327, "and-embedded"]], "Still Untold": [[327, "still-untold"]], "Agenda: Python Basics (2023-12-18 - 2023-12-20)": [[328, "agenda-python-basics-2023-12-18-2023-12-20"]], "Python Basics (2023-12-18 - 2023-12-20)": [[329, "python-basics-2023-12-18-2023-12-20"], [330, "Python-Basics-(2023-12-18---2023-12-20)"], [331, "python-basics-2023-12-18-2023-12-20"], [375, "python-basics-2023-12-18-2023-12-20"]], "More About Datatypes": [[329, "more-about-datatypes"], [330, "More-About-Datatypes"], [339, "more-about-datatypes"]], "A Bit Of OO": [[329, "a-bit-of-oo"]], "Datatype Conversion": [[330, "Datatype-Conversion"]], "Weirdness (Comprehensions)": [[330, "Weirdness-(Comprehensions)"]], "Dictionary Comprehension (Exchange key and Value of dict)": [[330, "Dictionary-Comprehension-(Exchange-key-and-Value-of-dict)"]], "Functional Programming": [[330, "Functional-Programming"]], "set(), list(), dict()": [[330, "set(),-list(),-dict()"]], "while (and else)": [[330, "while-(and-else)"]], "range(), And Generators, The Iterator Protocol": [[330, "range(),-And-Generators,-The-Iterator-Protocol"]], "Return Value? Parameters?": [[330, "Return-Value?-Parameters?"]], "References, Immutability": [[330, "References,-Immutability"]], "Und Schuetzen?": [[330, "Und-Schuetzen?"]], "Comprehensions (Generator Expressions)": [[330, "Comprehensions-(Generator-Expressions)"]], "pathlib, os.path": [[330, "pathlib,-os.path"]], "Regexen": [[330, "Regexen"]], "distill.py": [[330, "distill.py"]], "C++ For Embedded Developers (Beginning of 2023)": [[332, "c-for-embedded-developers-beginning-of-2023"]], "Python/SAP": [[333, "python-sap"]], "Agenda: Python Advanced (2024-01-15 - 2024-01-17)": [[334, "agenda-python-advanced-2024-01-15-2024-01-17"]], "Numerics: Pandas, NumPy": [[334, "numerics-pandas-numpy"]], "Python Advanced (2024-01-15 - 2024-01-17)": [[335, "python-advanced-2024-01-15-2024-01-17"], [337, "python-advanced-2024-01-15-2024-01-17"], [375, "python-advanced-2024-01-15-2024-01-17"]], "Group Project": [[335, "group-project"], [363, "group-project"]], "Python Advanced (2023-01-15 - 2024-01-17)": [[336, "Python-Advanced-(2023-01-15---2024-01-17)"]], "DocStrings": [[336, "DocStrings"]], "Type System": [[336, "Type-System"], [396, "type-system"]], "Infinity?": [[336, "Infinity?"]], "dict, and enumerate()": [[336, "dict,-and-enumerate()"]], "Screenplay Checker": [[342, "screenplay-checker"]], "GPIO: Blinklicht": [[343, "gpio-blinklicht"]], "Commandline": [[343, "commandline"], [348, "commandline"], [885, "commandline"]], "sysfs GPIO": [[343, "sysfs-gpio"]], "Electronic Aspect": [[343, "electronic-aspect"]], "External Circuitry": [[343, "external-circuitry"]], "Raspberry Header Pinout": [[343, "raspberry-header-pinout"]], "GPIO: Blinklicht Interface": [[344, "gpio-blinklicht-interface"]], "GPIO: Object Oriented Blinklicht": [[345, "gpio-object-oriented-blinklicht"]], "GPIO: Blinklicht Unittests": [[346, "gpio-blinklicht-unittests"]], "ECE19: Exercises and Custom Topics": [[347, "ece19-exercises-and-custom-topics"]], "Reading a File": [[348, "reading-a-file"], [947, "reading-a-file"]], "Output": [[348, "output"]], "2021-05-20 (G2)": [[349, "2021-05-20-(G2)"]], "Reading File in One Big Swoop": [[349, "Reading-File-in-One-Big-Swoop"]], "Reading File in Fixed Sized Chunks": [[349, "Reading-File-in-Fixed-Sized-Chunks"]], "Reading File Line by Line": [[349, "Reading-File-Line-by-Line"]], "Iterating a File": [[349, "Iterating-a-File"]], "String Methods (Needed to Implement the Exercise)": [[349, "String-Methods-(Needed-to-Implement-the-Exercise)"]], "str.strip(), str.rstrip(), str.lstrip()": [[349, "str.strip(),-str.rstrip(),-str.lstrip()"]], "str.split()": [[349, "str.split()"]], "2021-05-21": [[350, "2021-05-21"], [357, "id11"]], "Modules and Packages": [[350, "Modules-and-Packages"], [1030, "modules-and-packages"]], "Strings vs. Bytes": [[351, "Strings-vs.-Bytes"]], "Batteries": [[352, "Batteries"]], "Key Value Map": [[352, "Key-Value-Map"]], "Comments vs Documentation": [[352, "Comments-vs-Documentation"]], "Multiline String (btw.)": [[352, "Multiline-String-(btw.)"]], "Integer Numbers (Literals)": [[352, "Integer-Numbers-(Literals)"]], "Arithmetic Operators": [[352, "Arithmetic-Operators"], [401, "arithmetic-operators"], [1042, "arithmetic-operators"]], "Wertebereich von Integers": [[352, "Wertebereich-von-Integers"]], "An Example": [[353, "An-Example"], [1065, "an-example"]], "Sidenote: Pure Beauty": [[353, "Sidenote:-Pure-Beauty"], [1065, "sidenote-pure-beauty"]], "Parameters and Types": [[353, "Parameters-and-Types"], [1065, "parameters-and-types"]], "Pitfalls": [[353, "Pitfalls"]], "Cloud Computer, SSH Login": [[354, "cloud-computer-ssh-login"]], "Machine, Logins": [[354, "machine-logins"]], "Login via Secure Shell (SSH)": [[354, "login-via-secure-shell-ssh"]], "Formalit\u00e4ten": [[355, "formalitaten"]], "Embedded Computing 1 (ECE 19)": [[356, "embedded-computing-1-ece-19"]], "Daily Log": [[357, "daily-log"]], "2021-03-04": [[357, "id1"]], "2021-03-05": [[357, "id2"]], "Cheat Sheets": [[357, null]], "2021-03-18": [[357, "id3"]], "2021-03-26": [[357, "id4"]], "2021-04-15": [[357, "id5"]], "2021-04-21": [[357, "id6"]], "Git Intro": [[357, "git-intro"]], "Download and Installation": [[357, null], [362, null]], "2021-04-29": [[357, "id7"]], "2021-05-10": [[357, "id8"]], "Org Stuff": [[357, "org-stuff"]], "Python: Functions": [[357, "python-functions"]], "2021-05-12": [[357, "id9"]], "Python: Walk-Through Passing and Failing an Exam": [[357, "python-walk-through-passing-and-failing-an-exam"]], "2021-05-{19,20}": [[357, "id10"]], "Reiterating on Exercise": [[357, "reiterating-on-exercise"]], "import argparse": [[357, "import-argparse"]], "Exercise digit (Once More)": [[357, "exercise-digit-once-more"]], "2021-06-01": [[357, "id12"]], "sysfs GPIO: Blinking an LED": [[357, "sysfs-gpio-blinking-an-led"]], "2021-06-07": [[357, "id13"]], "Embedded Computing 1 (Deutsch)": [[358, "embedded-computing-1-deutsch"]], "Lehrinhalte": [[358, "lehrinhalte"]], "Lernergebnisse der LV": [[358, "lernergebnisse-der-lv"]], "Empfohlene oder verpflichtende Fachliteratur und andere Lernressourcen bzw. \u2013instrumente": [[358, "empfohlene-oder-verpflichtende-fachliteratur-und-andere-lernressourcen-bzw-instrumente"]], "Art der Vermittlung": [[358, "art-der-vermittlung"]], "Voraussetzungen und Begleitbedingungen": [[358, "voraussetzungen-und-begleitbedingungen"]], "Pr\u00fcfungsmethode und Beurteilungskriterien": [[358, "prufungsmethode-und-beurteilungskriterien"]], "Embedded Computing 1 (English)": [[359, "embedded-computing-1-english"]], "Course Content": [[359, "course-content"]], "Learning Outcome": [[359, "learning-outcome"]], "Recommended or Required Reading and Other Learning Resources / Tools": [[359, "recommended-or-required-reading-and-other-learning-resources-tools"]], "Mode of delivery": [[359, "mode-of-delivery"]], "Prerequisites and Co-Requisites": [[359, "prerequisites-and-co-requisites"]], "Assessment Methods and Criteria": [[359, "assessment-methods-and-criteria"]], "Plan for Summer 2021": [[360, "plan-for-summer-2021"]], "Linux Introduction": [[360, "linux-introduction"]], "Slides": [[360, null], [360, null], [360, null]], "C/C++ Development": [[360, "c-c-development"]], "Python Development": [[360, "python-development"]], "2021-10-07": [[361, "id1"]], "Whose Fault It Is": [[361, "whose-fault-it-is"]], "2021-10-12 (Bringing Newcomers Up-to-Date)": [[362, "bringing-newcomers-up-to-date"]], "Linux/UNIX": [[362, "linux-unix"]], "Git": [[362, "git"]], "2021-10-28": [[363, "id1"]], "Discussion of Tasks": [[363, "discussion-of-tasks"]], "TODOs": [[363, "todos"]], "2021-11-15": [[364, "id1"]], "Systems Programming: Files, Directories, Links \u2026": [[364, "systems-programming-files-directories-links"]], "2021-11-29": [[365, "id1"]], "jjjj": [[365, "jjjj"]], "2021-12-1{4,5}": [[366, "id1"]], "Future Topics": [[366, "future-topics"]], "Threading": [[366, "threading"]], "C++ Sideways": [[366, "c-sideways"]], "2022-01-10": [[367, "id1"]], "Scheduling": [[367, "scheduling"], [981, "scheduling"], [982, "scheduling"]], "2022-01-12": [[368, "id1"]], "Scheduling and Realtime": [[368, "scheduling-and-realtime"], [372, "scheduling-and-realtime"]], "2022-02-15": [[369, "id1"]], "Agenda/Log": [[370, "agenda-log"], [371, "agenda-log"]], "Embedded Computing 2 (ECE 19)": [[371, "embedded-computing-2-ece-19"]], "Project Repository": [[371, "project-repository"]], "Test Material": [[371, "test-material"]], "Exam Material Overview": [[372, "exam-material-overview"]], "Questions": [[372, "questions"], [372, "id1"], [664, "questions"], [858, "questions"], [872, "questions"], [873, "questions"], [898, "questions"], [1005, "questions"]], "Slide Material": [[372, "slide-material"], [372, "id2"]], "Embedded Computing 1+2, ECE 19": [[373, "embedded-computing-1-2-ece-19"]], "Training Material: Overview and Download": [[376, "training-material-overview-and-download"]], "On Windows": [[377, "on-windows"]], "On Linux": [[377, "on-linux"]], "The Book (1)": [[378, "the-book-1"]], "The Book (2)": [[378, "the-book-2"]], "The Beginning": [[378, "the-beginning"]], "Cool Guys and Their Hobby": [[378, "cool-guys-and-their-hobby"]], "History of UNIX": [[378, "history-of-unix"]], "My First Program (1)": [[379, "my-first-program-1"]], "My First Program (2)": [[379, "my-first-program-2"]], "Character Arrays - Strings": [[379, "character-arrays-strings"]], "Variables and Arithmetic": [[380, "variables-and-arithmetic"]], "My Second Program (1)": [[380, "my-second-program-1"]], "My Second Program (2)": [[380, "my-second-program-2"]], "My Second Program (3)": [[380, "my-second-program-3"]], "My Second Program (4)": [[380, "my-second-program-4"]], "Exercise: A Better Fahrenheit Table": [[381, "exercise-a-better-fahrenheit-table"]], "for: Loop Simplification (1)": [[382, "for-loop-simplification-1"]], "for: Loop Simplification (2)": [[382, "for-loop-simplification-2"]], "Second Program, revisited": [[382, "second-program-revisited"]], "Exercise: Fahrenheit Table Using for": [[383, "exercise-fahrenheit-table-using-for"]], "Symbolic Constants": [[384, "symbolic-constants"]], "C Preprocessor: Symbolic Constants": [[384, "c-preprocessor-symbolic-constants"]], "Exercise: Fahrenheit Table Using Macros": [[385, "exercise-fahrenheit-table-using-macros"]], "Character I/O": [[386, "character-i-o"]], "The Outside World": [[386, "the-outside-world"]], "cat for the Poor (1)": [[386, "cat-for-the-poor-1"]], "cat for the Poor (2)": [[386, "cat-for-the-poor-2"]], "More Examples \u2026": [[386, "more-examples"]], "More Examples - if": [[386, "more-examples-if"]], "if, Formally": [[386, "if-formally"]], "Operators, Formally": [[386, "operators-formally"]], "Exercise: wc For The Poor": [[387, "exercise-wc-for-the-poor"]], "Arrays": [[388, "arrays"]], "Array Definition, Explicit Initialization": [[388, "array-definition-explicit-initialization"]], "Array Access": [[388, "array-access"]], "Discussion: Initialization": [[388, "discussion-initialization"]], "Discussion: if, else": [[388, "discussion-if-else"]], "Array Initializer": [[388, "array-initializer"]], "Discussion: Initializer": [[388, "discussion-initializer"]], "Initialization using memset()": [[388, "initialization-using-memset"]], "Discussion: memset()": [[388, "discussion-memset"]], "Exercise: Character Histogram": [[389, "exercise-character-histogram"]], "A Nonsensical Example": [[390, "a-nonsensical-example"]], "Function Signature": [[390, "function-signature"]], "Discussion": [[390, "discussion"]], "Definition vs. Declaration (1)": [[390, "definition-vs-declaration-1"]], "Definition vs. Declaration (2)": [[390, "definition-vs-declaration-2"]], "By Value / By Reference": [[390, "by-value-by-reference"]], "Exercise: Forward Declaration": [[391, "exercise-forward-declaration"]], "Character Arrays": [[392, "character-arrays"]], "Strings: Mistake by Design?": [[392, "strings-mistake-by-design"]], "Strings: Definition": [[392, "strings-definition"]], "Strings: Library Functions": [[392, "strings-library-functions"]], "Strings as Parameters": [[392, "strings-as-parameters"]], "Strings: Dangers": [[392, "strings-dangers"]], "Exercise: Read Line Into String from stdin": [[393, "exercise-read-line-into-string-from-stdin"]], "Lifetime of Variables": [[394, "lifetime-of-variables"]], "Lifetime": [[394, "lifetime"]], "Global Variables": [[394, "global-variables"], [568, "global-variables"]], "Global Variables: How?": [[394, "global-variables-how"]], "Variable Names": [[397, "variable-names"]], "Variable- and Function Names": [[397, "variable-and-function-names"]], "Data Types, Sizes": [[398, "data-types-sizes"]], "Standard Data Types And Their Sizes": [[398, "standard-data-types-and-their-sizes"]], "Integer Variants (\u201cQualifiers\u201d)": [[398, "integer-variants-qualifiers"]], "Widths": [[398, "widths"]], "Constants": [[399, "constants"]], "Constants and Types": [[399, "constants-and-types"]], "Character Constants: Escape Sequences": [[399, "character-constants-escape-sequences"]], "String Constants": [[399, "string-constants"]], "Character vs. String Constants": [[399, "character-vs-string-constants"]], "Symbolic Constants (1)": [[399, "symbolic-constants-1"]], "Symbolic Constants (2)": [[399, "symbolic-constants-2"]], "Variable Definitions": [[400, "variable-definitions"]], "Definitions und Initialization": [[400, "definitions-und-initialization"]], "Initialization of Automatic Variables": [[400, "initialization-of-automatic-variables"]], "Initialization of Global Variables": [[400, "initialization-of-global-variables"]], "Arithmetic Operators (1)": [[401, "arithmetic-operators-1"]], "Arithmetic Operators (2)": [[401, "arithmetic-operators-2"]], "Relational and Logical Operators": [[402, "relational-and-logical-operators"]], "Relational Operators (1)": [[402, "relational-operators-1"]], "Relational Operators (2)": [[402, "relational-operators-2"]], "Logical (Boolean) Operators": [[402, "logical-boolean-operators"]], "Boolean Operators: Short-Circuit": [[402, "boolean-operators-short-circuit"]], "Type Conversions": [[403, "type-conversions"]], "Implicit Type Conversions": [[403, "implicit-type-conversions"]], "Sign Bugs": [[403, "sign-bugs"]], "Truncation": [[403, "truncation"]], "Sign Propagation": [[403, "sign-propagation"]], "Conversion Using Operators": [[403, "conversion-using-operators"]], "Conversion and unsigned (1)": [[403, "conversion-and-unsigned-1"]], "Conversion and unsigned (2)": [[403, "conversion-and-unsigned-2"]], "Compiler Warnings": [[403, "compiler-warnings"]], "Last Warning": [[403, "last-warning"], [975, "last-warning"]], "Forced Conversion - Cast": [[403, "forced-conversion-cast"]], "Increment, Decrement": [[404, "increment-decrement"]], "Confusion: ++, --": [[404, "confusion"]], "Confused to perfection (1)": [[404, "confused-to-perfection-1"]], "Confused to perfection (2)": [[404, "confused-to-perfection-2"]], "Exercise: Copy and Reduce String": [[405, "exercise-copy-and-reduce-string"]], "Bit-Operators": [[406, "bit-operators"]], "Bit Manipulation": [[406, "bit-manipulation"]], "Bitwise AND and OR": [[406, "bitwise-and-and-or"]], "Bitwise XOR": [[406, "bitwise-xor"]], "Shift Left": [[406, "shift-left"]], "Shift Right": [[406, "shift-right"]], "Inverting (\u201cOne\u2019s-Complement\u201d)": [[406, "inverting-one-s-complement"]], "Assignment with Calculation": [[407, "assignment-with-calculation"]], "Combined Operators": [[407, "combined-operators"]], "?: - Conditional Expression": [[408, "conditional-expression"]], "?: - Conditional Expression (1)": [[408, "conditional-expression-1"]], "?: - Conditional Expression (2)": [[408, "conditional-expression-2"]], "Precedence, Associativity": [[409, "precedence-associativity"]], "Summary: Operators": [[409, "summary-operators"]], "Operators: Precedence und Associativity (1)": [[409, "operators-precedence-und-associativity-1"]], "Operators: Precedence und Associativity (2)": [[409, "operators-precedence-und-associativity-2"]], "More Warnings": [[409, "more-warnings"]], "Statements and Blocks": [[411, "statements-and-blocks"]], "Statement vs. Block": [[411, "statement-vs-block"]], "if - else": [[412, "if-else"]], "Branches": [[412, "branches"]], "True or False? What is Truth?": [[412, "true-or-false-what-is-truth"]], "else is optional (1)": [[412, "else-is-optional-1"]], "else is optional (2)": [[412, "else-is-optional-2"]], "else - if": [[413, "else-if"]], "Style Matters": [[413, "style-matters"]], "switch": [[414, "switch"], [414, "id1"]], "Case Distinctions": [[414, "case-distinctions"]], "if - else if vs. switch": [[414, "if-else-if-vs-switch"]], "Loops: while and for": [[415, "loops-while-and-for"]], "while: general purpose loop": [[415, "while-general-purpose-loop"]], "From while to for (1)": [[415, "from-while-to-for-1"]], "From while to for (2)": [[415, "from-while-to-for-2"]], "for, a Little Closer": [[415, "for-a-little-closer"]], "Comma Operator": [[415, "comma-operator"]], "for: Infamous Idioms": [[415, "for-infamous-idioms"]], "Loops: do - while": [[416, "loops-do-while"]], "do - while: Condition After Body": [[416, "do-while-condition-after-body"]], "goto and Labels": [[418, "goto-and-labels"]], "Structured Programming vs. goto": [[418, "structured-programming-vs-goto"]], "goto: Definition": [[418, "goto-definition"]], "goto: Use Cases": [[418, "goto-use-cases"]], "Nesting": [[420, "nesting"]], "Declaration vs. Definition": [[420, "declaration-vs-definition"]], "A Monolithic Program": [[420, "a-monolithic-program"]], "Separate Compilation": [[420, "separate-compilation"]], "Extern/Global Variables": [[421, "extern-global-variables"]], "Variables: Declaration and Definition": [[421, "variables-declaration-and-definition"]], "Variables: Separating Declaration from Definition (1)": [[421, "variables-separating-declaration-from-definition-1"]], "Variables: Separating Declaration from Definition (2)": [[421, "variables-separating-declaration-from-definition-2"]], "Header Files": [[422, "header-files"]], "Declarations: Problems (1)": [[422, "declarations-problems-1"]], "Declarations: Problems (2)": [[422, "declarations-problems-2"]], "Declarations: Solutions": [[422, "declarations-solutions"]], "Static Variables": [[423, "static-variables"]], "Lifetime and Visibility (1)": [[423, "lifetime-and-visibility-1"]], "Automatic Variables": [[423, "automatic-variables"]], "Local static Variable": [[423, "local-static-variable"]], "Global static Variable": [[423, "global-static-variable"]], "Global Variable": [[423, "global-variable"], [1064, "global-variable"]], "C Preprocessor: Basics": [[424, "c-preprocessor-basics"]], "#include": [[424, "include"]], "Macros: Text Replacement": [[424, "macros-text-replacement"]], "Macros: Constant Definition": [[424, "macros-constant-definition"]], "Macros: Inline Replacement as Function Call (1)": [[424, "macros-inline-replacement-as-function-call-1"]], "Macros: Inline Replacement as Function Call (2)": [[424, "macros-inline-replacement-as-function-call-2"]], "Include Guards (1)": [[424, "include-guards-1"]], "Include Guards (2)": [[424, "include-guards-2"]], "The C Preprocessor: Last Words": [[424, "the-c-preprocessor-last-words"], [425, "the-c-preprocessor-last-words"]], "C Preprocessor: More": [[425, "c-preprocessor-more"]], "Conditional Compilation: Rules": [[425, "conditional-compilation-rules"]], "Conditional Compilation: Examples": [[425, "conditional-compilation-examples"]], "Conditional Compilation: Last Words": [[425, "conditional-compilation-last-words"]], "Macros: Spanning Multiple Lines": [[425, "macros-spanning-multiple-lines"]], "Macros: Multiple Statements as One Statement (1)": [[425, "macros-multiple-statements-as-one-statement-1"]], "Macros: Multiple Statements as One Statement (2)": [[425, "macros-multiple-statements-as-one-statement-2"]], "Stringification (1)": [[425, "stringification-1"]], "Stringification (2)": [[425, "stringification-2"]], "Token Pasting (1)": [[425, "token-pasting-1"]], "Token Pasting (2)": [[425, "token-pasting-2"]], "Warnings and Errors": [[425, "warnings-and-errors"]], "Predefined Macros (1)": [[425, "predefined-macros-1"]], "Pointers and Addresses": [[427, "pointers-and-addresses"]], "Pointers: Basics": [[427, "pointers-basics"]], "Pointer: Operators": [[427, "pointer-operators"]], "More Examples": [[427, "more-examples"]], "Pointers as Function Parameters": [[428, "pointers-as-function-parameters"]], "Call by Reference (1)": [[428, "call-by-reference-1"]], "Call by Reference (2)": [[428, "call-by-reference-2"]], "Exercise: Function That Swaps Two Variables": [[429, "exercise-function-that-swaps-two-variables"]], "Pointers and Arrays": [[430, "pointers-and-arrays"], [432, "pointers-and-arrays"]], "It\u2019s Only Memory": [[430, "it-s-only-memory"]], "Conversion Array \u27f6 Pointer": [[430, "conversion-array-longrightarrow-pointer"]], "Pointer Arithmetic (1)": [[430, "pointer-arithmetic-1"]], "Pointer Arithmetic (2)": [[430, "pointer-arithmetic-2"]], "Pointer Arithmetic (3)": [[430, "pointer-arithmetic-3"]], "Pointer Arithmetic: Difference": [[430, "pointer-arithmetic-difference"]], "Pointer Arithmetic: Array Algorithms": [[430, "pointer-arithmetic-array-algorithms"]], "Pointer Arithmetic: Jump Width? (1)": [[430, "pointer-arithmetic-jump-width-1"]], "Pointer Arithmetic: Jump Width? (2)": [[430, "pointer-arithmetic-jump-width-2"]], "Pointer Arithmetic: Arbitrary Datatypes": [[430, "pointer-arithmetic-arbitrary-datatypes"]], "See also": [[431, null], [856, null], [861, null], [861, null], [862, null], [862, null], [862, null], [867, null], [868, null], [951, null], [978, null], [981, null], [985, null], [987, null], [1066, null]], "main() Can Take Parameters": [[431, "main-can-take-parameters"]], "struct: Basics": [[433, "struct-basics"]], "struct: Compound Datatypes": [[433, "struct-compound-datatypes"]], "struct: How?": [[433, "struct-how"]], "Usage": [[433, "usage"], [623, "usage"], [630, "usage"]], "Nested Structures": [[433, "nested-structures"]], "Memory Layout": [[433, "memory-layout"]], "Recursive Structures?": [[433, "recursive-structures"]], "struct: Functions": [[434, "struct-functions"]], "Parameters and Return (1)": [[434, "parameters-and-return-1"]], "Parameters and Return (2)": [[434, "parameters-and-return-2"]], "Parameters and Return (3)": [[434, "parameters-and-return-3"]], "typedef: Type Alias": [[435, "typedef-type-alias"]], "Alias for Type Names": [[435, "alias-for-type-names"]], "Dynamic Memory": [[437, "dynamic-memory"], [437, "id1"]], "Stack and Global Memory": [[437, "stack-and-global-memory"]], "Dynamic Memory - Usage": [[437, "dynamic-memory-usage"]], "Singly Linked List": [[438, "singly-linked-list"]], "Exercises (1)": [[438, "exercises-1"]], "Exercises (2)": [[438, "exercises-2"]], "Exercises (3)": [[438, "exercises-3"]], "Exercises (4)": [[438, "exercises-4"]], "Exercises (5)": [[438, "exercises-5"]], "Exercises (6)": [[438, "exercises-6"]], "Exercises (7)": [[438, "exercises-7"]], "Exercises (8)": [[438, "exercises-8"]], "Exercises (9)": [[438, "exercises-9"]], "Exercises (10)": [[438, "exercises-10"]], "Exercises (11)": [[438, "exercises-11"]], "Volatile": [[440, "volatile"]], "volatile: The Lie (1)": [[440, "volatile-the-lie-1"]], "volatile: The Lie (2)": [[440, "volatile-the-lie-2"]], "volatile: Valid Use: Hardware": [[440, "volatile-valid-use-hardware"]], "volatile: Valid Use: Unix Signal Handlers": [[440, "volatile-valid-use-unix-signal-handlers"]], "Compiler Intrinsics": [[441, "compiler-intrinsics"]], "Atomic Memory Access": [[441, "atomic-memory-access"]], "Atomic Memory Access: Load/Modify/Store": [[441, "atomic-memory-access-load-modify-store"]], "Load/Modify/Store: Mutex": [[441, "load-modify-store-mutex"]], "Atomic Instructions": [[441, "atomic-instructions"], [970, "atomic-instructions"]], "More GCC \u201cBuiltins\u201d": [[441, "more-gcc-builtins"]], "Alignment": [[442, "alignment"]], "Data Alignment": [[442, "data-alignment"]], "Data Alignment, Compilers": [[442, "data-alignment-compilers"]], "Unaligned Data Access (1)": [[442, "unaligned-data-access-1"]], "Unaligned Data Access (2)": [[442, "unaligned-data-access-2"]], "Padding (1)": [[442, "padding-1"]], "Padding (2)": [[442, "padding-2"]], "Padding (3)": [[442, "padding-3"]], "Padding (4)": [[442, "padding-4"]], "Structure Alignment (1)": [[442, "structure-alignment-1"]], "Structure Alignment (2)": [[442, "structure-alignment-2"]], "And Arrays? (1)": [[442, "and-arrays-1"]], "And Arrays? (2)": [[442, "and-arrays-2"]], "And Arrays? (3)": [[442, "and-arrays-3"]], "Sanity and Readabilty": [[444, "sanity-and-readabilty"]], "Shooting Offense: Unobvious Solution": [[444, "shooting-offense-unobvious-solution"]], "Shooting Offense: Unobvious Problem": [[444, "shooting-offense-unobvious-problem"]], "Shooting Offenses": [[444, "shooting-offenses"]], "Ambiguity": [[444, "ambiguity"]], "Readability": [[444, "readability"]], "Code Smells": [[444, "code-smells"]], "Know Your Integers": [[445, "know-your-integers"]], "Standard Data Types: size_t (1)": [[445, "standard-data-types-size-t-1"]], "Standard Data Types: size_t (2)": [[445, "standard-data-types-size-t-2"]], "Discrete Values - enum": [[446, "discrete-values-enum"], [446, "id1"]], "Discrete Values": [[446, "discrete-values"]], "Discrete Values - Traditional Approach (1)": [[446, "discrete-values-traditional-approach-1"]], "Discrete Values - Traditional Approach (2)": [[446, "discrete-values-traditional-approach-2"]], "Discrete Values - Wishlist": [[446, "discrete-values-wishlist"]], "Discrete Values - enum and switch": [[446, "discrete-values-enum-and-switch"], [446, "id2"]], "Discrete Values - Close to Perfection": [[446, "discrete-values-close-to-perfection"]], "Visibility - static": [[447, "visibility-static"]], "Visibility": [[447, "visibility"]], "A Somewhat Contrived Example (1)": [[447, "a-somewhat-contrived-example-1"]], "A Somewhat Contrived Example (2)": [[447, "a-somewhat-contrived-example-2"]], "The static Keyword (Hooray!)": [[447, "the-static-keyword-hooray"]], "Correctness - const": [[448, "correctness-const"]], "Non-Modifiable Memory (1)": [[448, "non-modifiable-memory-1"]], "Non-Modifiable Memory (2)": [[448, "non-modifiable-memory-2"]], "The const Keyword (1)": [[448, "the-const-keyword-1"]], "The const Keyword (2)": [[448, "the-const-keyword-2"]], "const Variables": [[448, "const-variables"]], "const Parameters (1)": [[448, "const-parameters-1"]], "const Parameters (2)": [[448, "const-parameters-2"]], "Pointers, Pointers, Pointers \u2026 (1)": [[448, "pointers-pointers-pointers-1"]], "Pointers, Pointers, Pointers \u2026 (2)": [[448, "pointers-pointers-pointers-2"]], "Pointers, Pointers, Pointers \u2026 (3)": [[448, "pointers-pointers-pointers-3"]], "Pointers, Pointers, Pointers \u2026 (4)": [[448, "pointers-pointers-pointers-4"]], "Pointers, Pointers, Pointers \u2026 (5)": [[448, "pointers-pointers-pointers-5"]], "Pointers, Pointers, Pointers \u2026 (6)": [[448, "pointers-pointers-pointers-6"]], "Pointers, Pointers, Pointers \u2026 (7)": [[448, "pointers-pointers-pointers-7"]], "Pointers, Pointers, Pointers \u2026 (8)": [[448, "pointers-pointers-pointers-8"]], "Pointers, Pointers, Pointers \u2026 (9)": [[448, "pointers-pointers-pointers-9"]], "Struct Initialization": [[449, "struct-initialization"]], "Good Old Struct Initialization": [[449, "good-old-struct-initialization"]], "C99 Designated Initializer": [[449, "c99-designated-initializer"]], "Explict Type Safety": [[450, "explict-type-safety"]], "Integer Types Are Ambiguous": [[450, "integer-types-are-ambiguous"]], "Example: Ambiguous Error Schemes (1)": [[450, "example-ambiguous-error-schemes-1"]], "Example: Ambiguous Error Schemes (2)": [[450, "example-ambiguous-error-schemes-2"]], "Example: Ambiguous Error Schemes (3)": [[450, "example-ambiguous-error-schemes-3"]], "Artificial Integer Type Safety": [[450, "artificial-integer-type-safety"]], "Error Schemes, Revisited": [[450, "error-schemes-revisited"]], "Error Schemes: Encapsulating Unix Details": [[450, "error-schemes-encapsulating-unix-details"]], "Error Schemes: Using Encapsulated Stuff": [[450, "error-schemes-using-encapsulated-stuff"]], "Wrap-Up: Artificial Type Safety": [[450, "wrap-up-artificial-type-safety"]], "valgrind": [[451, "valgrind"]], "Valgrind": [[451, "id1"]], "Valgrind in Action (1)": [[451, "valgrind-in-action-1"]], "Valgrind in Action (2)": [[451, "valgrind-in-action-2"]], "Valgrind in Action (3)": [[451, "valgrind-in-action-3"]], "Valgrind: more \u2026": [[451, "valgrind-more"]], "Optimization": [[453, "optimization"]], "Optimization - Introduction": [[453, "optimization-introduction"]], "Compute Bound or IO Bound? (1)": [[453, "compute-bound-or-io-bound-1"]], "Compute Bound or IO Bound? (2)": [[453, "compute-bound-or-io-bound-2"]], "Compute Bound or IO Bound? (3)": [[453, "compute-bound-or-io-bound-3"]], "What to do Next?": [[453, "what-to-do-next"]], "Optimizations: Compute Bound Code": [[454, "optimizations-compute-bound-code"]], "Many Ways of Optimization": [[454, "many-ways-of-optimization"]], "Unnecessary Optimizations": [[454, "unnecessary-optimizations"]], "Inlining (1)": [[454, "inlining-1"]], "Inlining (2)": [[454, "inlining-2"]], "Inlining (3)": [[454, "inlining-3"]], "Register Allocation (1)": [[454, "register-allocation-1"]], "Register Allocation (2)": [[454, "register-allocation-2"]], "Peephole Optimization": [[454, "peephole-optimization"]], "Peephole Optimization: Common Subexpression Elimination": [[454, "peephole-optimization-common-subexpression-elimination"]], "Peephole Optimization: Strength Reduction": [[454, "peephole-optimization-strength-reduction"]], "Peephole Optimization: Constant Folding": [[454, "peephole-optimization-constant-folding"]], "Loop Invariants": [[454, "loop-invariants"]], "Loop Unrolling": [[454, "loop-unrolling"]], "Tail Call Optimization": [[454, "tail-call-optimization"]], "CPU Optimization, Last Words": [[454, "cpu-optimization-last-words"]], "GCC: Optimization \u201cLevels\u201d": [[454, "gcc-optimization-levels"]], "Further Reading": [[454, "further-reading"]], "Optimizations: Memory Optimizations": [[455, "optimizations-memory-optimizations"]], "Memory: Caches": [[455, "memory-caches"]], "Locality of reference": [[455, "locality-of-reference"]], "Multidimensional Arrays": [[455, "multidimensional-arrays"]], "Multidimensional Arrays: Cache Thrashing": [[455, "multidimensional-arrays-cache-thrashing"]], "Multidimensional Arrays: Forward Indexing": [[455, "multidimensional-arrays-forward-indexing"]], "Profiling - Famous Words": [[457, "profiling-famous-words"]], "Donald E. Knuth": [[457, null]], "Tony Hoare": [[457, null]], "Larry Wall": [[457, null]], "The Practice of Programming, Brian W. Kernighan and\n             Rob Pike": [[457, null]], "Profiling - Introduction": [[457, "profiling-introduction"]], "GNU Profiler - gprof": [[458, "gnu-profiler-gprof"]], "gprof - How it Works": [[458, "gprof-how-it-works"]], "Using gprof": [[458, "using-gprof"]], "gprof: Flat Profile": [[458, "gprof-flat-profile"]], "gprof: Call Graph": [[458, "gprof-call-graph"]], "gprof: Interpreting The Results": [[458, "gprof-interpreting-the-results"]], "gprof: Visualization": [[458, "gprof-visualization"]], "callgrind": [[459, "callgrind"]], "callgrind - How it Works": [[459, "callgrind-how-it-works"]], "callgrind - How it is Used": [[459, "callgrind-how-it-is-used"]], "callgrind - Analysis Per Commandline": [[459, "callgrind-analysis-per-commandline"]], "callgrind - Analysis With kcachegrind": [[459, "callgrind-analysis-with-kcachegrind"]], "callgrind - Useful Options": [[459, "callgrind-useful-options"]], "oprofile": [[460, "oprofile"]], "oprofile - How it Works": [[460, "oprofile-how-it-works"]], "oprofile - Basic Usage (1)": [[460, "oprofile-basic-usage-1"]], "oprofile - Basic Usage (2)": [[460, "oprofile-basic-usage-2"]], "oprofile - Too Much Information": [[460, "oprofile-too-much-information"]], "oprofile - Call Graph": [[460, "oprofile-call-graph"]], "oprofile - Kernel Symbols (1)": [[460, "oprofile-kernel-symbols-1"]], "oprofile - Kernel Symbols (2)": [[460, "oprofile-kernel-symbols-2"]], "oprofile - Kernel Modules": [[460, "oprofile-kernel-modules"]], "oprofile - System-Wide Profiling": [[460, "oprofile-system-wide-profiling"]], "oprofile - Offline Profiling": [[460, "oprofile-offline-profiling"]], "oprofile - Graphical Beauty": [[460, "oprofile-graphical-beauty"]], "The C Programming Language": [[462, "the-c-programming-language"]], "Group Description": [[462, "group-description"], [590, "group-description"], [680, "group-description"], [722, "group-description"], [723, "group-description"], [771, "group-description"], [775, "group-description"], [777, "group-description"], [919, "group-description"], [927, "group-description"], [928, "group-description"], [395, "group-description"], [410, "group-description"], [419, "group-description"], [426, "group-description"], [432, "group-description"], [436, "group-description"], [439, "group-description"], [443, "group-description"], [452, "group-description"], [456, "group-description"], [461, "group-description"], [582, "group-description"], [605, "group-description"], [608, "group-description"], [611, "group-description"], [652, "group-description"], [661, "group-description"], [747, "group-description"], [755, "group-description"], [759, "group-description"], [982, "group-description"]], "Messages From The Book": [[463, "messages-from-the-book"]], "What\u2019s There? What Have We Accomplished?": [[464, "what-s-there-what-have-we-accomplished"]], "Rules? Why Rules?": [[464, "rules-why-rules"]], "Coding Style": [[464, "coding-style"]], "Disclaimer": [[464, null]], "Design Principles: SOLID": [[464, "design-principles-solid"]], "Another One: YAGNI": [[464, "another-one-yagni"]], "Architecture": [[464, "architecture"]], "Project Management: Traditional": [[464, "project-management-traditional"]], "Project Management: Software": [[464, "project-management-software"]], "So What?": [[464, "so-what"]], "Is Software A Craft? Software Is A Craft! \u27f6 Clean Code": [[465, "is-software-a-craft-software-is-a-craft-longrightarrow-clean-code"]], "Uncle Bob": [[465, "uncle-bob"]], "A Typical Project (Livehacking Screenplay: My Own Bookkeeping Effort)": [[466, "a-typical-project-livehacking-screenplay-my-own-bookkeeping-effort"]], "Spaghetti Version": [[466, "spaghetti-version"]], "A Little Better: Functions (And Commandline Parameters)": [[466, "a-little-better-functions-and-commandline-parameters"]], "Feature Request: Concatenate Input Data From Multiple CSV Files": [[466, "feature-request-concatenate-input-data-from-multiple-csv-files"]], "Feature Request: Concatenate Input Data From YYYY-MM.csv Files": [[466, "feature-request-concatenate-input-data-from-yyyy-mm-csv-files"]], "Where Are We? Questions!": [[466, "where-are-we-questions"]], "Testability: Input Cleaning": [[466, "testability-input-cleaning"]], "Testability: Reading Input (One Or Multiple Files, Explicitly)": [[466, "testability-reading-input-one-or-multiple-files-explicitly"]], "Test Sanity: Common Code": [[466, "test-sanity-common-code"]], "Testability: Reading Input From Directory": [[466, "testability-reading-input-from-directory"]], "Testability: Categorization": [[466, "testability-categorization"]], "Safety Net In Place \u27f6 Refactoring Categorization": [[466, "safety-net-in-place-longrightarrow-refactoring-categorization"]], "Refactoring Input Reading (\u27f6 Overengineering)": [[466, "refactoring-input-reading-longrightarrow-overengineering"]], "Basics: Boilerplate, And Executables": [[467, "basics-boilerplate-and-executables"]], "Single Monolithic Executable": [[467, "single-monolithic-executable"]], "Building With CMake": [[467, "building-with-cmake"]], "Building With CMake: Separate Source And Build Directories": [[467, "building-with-cmake-separate-source-and-build-directories"]], "Executables Consisting Of Multiple Sources": [[467, "executables-consisting-of-multiple-sources"]], "Problem: Duplicate Compilation": [[467, "problem-duplicate-compilation"]], "Problem: More Functionality": [[467, "problem-more-functionality"]], "Solution: Libraries": [[467, "solution-libraries"], [1017, "solution-libraries"]], "\u201cConfigured\u201d Header Files": [[468, "configured-header-files"]], "Problem": [[468, "problem"], [476, "problem"], [482, "problem"], [483, "problem"], [484, "problem"], [487, "problem"], [493, "problem"], [541, "problem"], [815, "problem"], [946, "problem"]], "Configured Files": [[468, "configured-files"]], "Use In Compiled Code": [[468, "use-in-compiled-code"]], "C++, Debug/Release, CMake \u201cProgramming\u201d, Rants": [[469, "c-debug-release-cmake-programming-rants"]], "Pause": [[469, "pause"]], "Class Diagram": [[469, "class-diagram"]], "C++ Standard Version": [[469, "c-standard-version"]], "Debug Vs. Release Builds: CMAKE_BUILD_TYPE": [[469, "debug-vs-release-builds-cmake-build-type"]], "Compiler Type": [[469, "compiler-type"]], "Strings And Lists": [[469, "strings-and-lists"]], "MESSAGE() (A.k.a printf() Debugging)": [[469, "message-a-k-a-printf-debugging"]], "MESSAGE(): Popular \u201cModes\u201d": [[469, "message-popular-modes"]], "FIND_PACKAGE()": [[470, "find-package"]], "FIND_PACKAGE(... REQUIRED)": [[470, "find-package-required"]], "SQLite3 Parameters": [[470, "sqlite3-parameters"]], "Using SQLite3 Parameters": [[470, "using-sqlite3-parameters"]], "Demo Time": [[470, "demo-time"]], "CMake: An Introduction": [[471, "cmake-an-introduction"]], "Installation (\u201cDeployment\u201d)": [[472, "installation-deployment"]], "\u201cPrefix\u201d: Where Everything Comes Together": [[472, "prefix-where-everything-comes-together"]], "Installing Targets": [[472, "installing-targets"]], "Doing The Installation (make install)": [[472, "doing-the-installation-make-install"]], "And Shared Libraries?": [[472, "and-shared-libraries"]], "Shared Libraries: Installed Vs. Local (RUNPATH)": [[472, "shared-libraries-installed-vs-local-runpath"]], "Shared Libraries: ABI Versions": [[472, "shared-libraries-abi-versions"]], "Libraries, And Dependencies": [[473, "libraries-and-dependencies"]], "Libraries And Executables": [[473, "libraries-and-executables"]], "Targets And Dependencies": [[473, "targets-and-dependencies"]], "Visualizing Dependencies": [[473, "visualizing-dependencies"]], "Optional Code, Approach 1: Optional blacklist, C Macro  (Global Flags)": [[474, "optional-code-approach-1-optional-blacklist-c-macro-global-flags"]], "Optional blacklist, C Macro": [[474, "optional-blacklist-c-macro"]], "Optional Dependency In libhello": [[474, "optional-dependency-in-libhello"]], "Optional Dependency In libhello Header File": [[474, "optional-dependency-in-libhello-header-file"]], "Optional Dependency In libhello CPP File": [[474, "optional-dependency-in-libhello-cpp-file"]], "Good Or Bad?": [[474, "good-or-bad"], [475, "good-or-bad"]], "Optional Code, Approach 2: Pushing Optionality Down In Module Interface": [[475, "optional-code-approach-2-pushing-optionality-down-in-module-interface"]], "Remove Too Much CMake Optionality": [[475, "remove-too-much-cmake-optionality"]], "TARGET_COMPILE_DEFINITIONS() (backlist Availablility)": [[475, "target-compile-definitions-backlist-availablility"]], "Push Optionality Down In blacklist (\u27f6 INTERFACE Targets)": [[475, "push-optionality-down-in-blacklist-longrightarrow-interface-targets"]], "Optional Code: Problem Definition, OPTION()": [[476, "optional-code-problem-definition-option"]], "Solution: Add An Option": [[476, "solution-add-an-option"]], "Define Option USE_BLACKLIST; Option Usage, Cache": [[476, "define-option-use-blacklist-option-usage-cache"]], "Option Handling: Many Approaches": [[476, "option-handling-many-approaches"]], "Shared Libraries (Preview)": [[477, "shared-libraries-preview"]], "\u201cNormal\u201d Libraries": [[477, "normal-libraries"]], "Building Shared Libraries": [[477, "building-shared-libraries"]], "More About Loading": [[477, "more-about-loading"]], "Structure - Subdirectories, Dependencies, and Include Paths": [[478, "structure-subdirectories-dependencies-and-include-paths"]], "Reorganization": [[478, "reorganization"]], "Dependencies, And Target Properties": [[478, "dependencies-and-target-properties"]], "Targets, Properties, And More": [[479, "targets-properties-and-more"]], "Target Types": [[479, "target-types"]], "Properties: PRIVATE, PUBLIC, INTERFACE?": [[479, "properties-private-public-interface"]], "Running Tests": [[480, "running-tests"], [1156, "running-tests"]], "Setup And Usage": [[480, "setup-and-usage"]], "Add Simple Test": [[480, "add-simple-test"]], "Checking Test Output": [[480, "checking-test-output"]], "Questionability": [[480, "questionability"]], "C++ Code": [[481, "c-code"]], "Abstract Factory": [[482, "abstract-factory"]], "I2C Sensor Subhierarchy": [[482, "i2c-sensor-subhierarchy"]], "Problem: I2C Sensor Instantiation": [[482, "problem-i2c-sensor-instantiation"]], "Solution: Factory Objects": [[482, "solution-factory-objects"]], "Adapter": [[483, "adapter"]], "Solution: Adaptation": [[483, "solution-adaptation"]], "Basic Adaptation": [[483, "basic-adaptation"]], "Adapter Must Be-A Sensor": [[483, "adapter-must-be-a-sensor"]], "Adaptee Can Be-Any ASensor": [[483, "adaptee-can-be-any-asensor"]], "Adapter Is Doing Real Measurements": [[483, "adapter-is-doing-real-measurements"]], "Command": [[484, "command"]], "Motivation": [[484, "motivation"], [487, "motivation"], [503, "motivation"], [504, "motivation"], [600, "motivation"], [697, "motivation"], [699, "motivation"], [724, "motivation"], [730, "motivation"], [1037, "motivation"], [1043, "motivation"]], "Step 1: Basic insert()": [[484, "step-1-basic-insert"]], "Step 2: Basic find()": [[484, "step-2-basic-find"]], "Step 3: drop()": [[484, "step-3-drop"]], "Step 4: Handle find() Errors": [[484, "step-4-handle-find-errors"]], "Step 5: Handle insert() Errors": [[484, "step-5-handle-insert-errors"]], "Step 6: Bulk Insert?": [[484, "step-6-bulk-insert"]], "Step 6a: Bulk Insert Using std::initializer_list?": [[484, "step-6a-bulk-insert-using-std-initializer-list"]], "SocialDB Source Code": [[485, "socialdb-source-code"]], "Composite": [[486, "composite"]], "Unix Filesystem": [[486, "unix-filesystem"]], "Boolean Expressions": [[486, "boolean-expressions"]], "Thermometers, And Average Calculation": [[486, "thermometers-and-average-calculation"]], "Decorator": [[487, "decorator"]], "Variant 1: Aggregate Base Class Objects": [[487, "variant-1-aggregate-base-class-objects"]], "Variant 2: Aggregate Conrete Class Objects": [[487, "variant-2-aggregate-conrete-class-objects"]], "Step 1: Realize Current Situation": [[487, "step-1-realize-current-situation"]], "Step 2: Decorate ConstantSensor \u27f6 DecoratedConstantSensor": [[487, "step-2-decorate-constantsensor-longrightarrow-decoratedconstantsensor"]], "Step 3: Decorate RandomSensor \u27f6 DecoratedRandomSensor": [[487, "step-3-decorate-randomsensor-longrightarrow-decoratedrandomsensor"]], "Step 4: Verify That DecoratedConstantSensor Can Be Used As Sensor": [[487, "step-4-verify-that-decoratedconstantsensor-can-be-used-as-sensor"]], "Step 5: Verify That DecoratedRandomSensor Can Be Used As Sensor": [[487, "step-5-verify-that-decoratedrandomsensor-can-be-used-as-sensor"]], "Step 6: Verify That Current Situation Still Holds True": [[487, "step-6-verify-that-current-situation-still-holds-true"]], "Design Patterns With C++": [[488, "design-patterns-with-c"]], "Topics/Exercises": [[488, "topics-exercises"]], "Solutions": [[488, "solutions"], [502, "solutions"], [516, "solutions"]], "To Be Done": [[488, "to-be-done"]], "Case Study/Livehacking: Heating Control (Reading Sensors)": [[489, "case-study-livehacking-heating-control-reading-sensors"]], "Step 1: Monolithic": [[489, "step-1-monolithic"]], "Step 2: And D-Bus? \u27f6 Interfaces": [[489, "step-2-and-d-bus-longrightarrow-interfaces"]], "Step 3: Start D-Bus Implementation": [[489, "step-3-start-d-bus-implementation"]], "Pull Demo Logger/Store Out Into Separate Files": [[489, "pull-demo-logger-store-out-into-separate-files"]], "Adapter: DBusLogger": [[489, "adapter-dbuslogger"]], "Adapter: DBusValueStore": [[489, "adapter-dbusvaluestore"]], "Demo Program To Instantiate Either Demo Or DBus": [[489, "demo-program-to-instantiate-either-demo-or-dbus"]], "Stop Here, Need Help": [[489, "stop-here-need-help"]], "Tests": [[489, "tests"], [509, "tests"]], "Interpreter": [[490, "interpreter"]], "Observer": [[491, "observer"]], "OO Design Principles": [[492, "oo-design-principles"]], "Principles: Why? Which?": [[492, "principles-why-which"]], "Single Responsibility": [[492, "single-responsibility"]], "Open/Closed": [[492, "open-closed"]], "Liskov Substitution": [[492, "liskov-substitution"]], "Interface Segregation": [[492, "interface-segregation"]], "Dependency Inversion": [[492, "dependency-inversion"]], "Proxy": [[493, "proxy"]], "Solution: Proxy": [[493, "solution-proxy"]], "Local Variant": [[493, "local-variant"]], "Remote Variant": [[493, "remote-variant"]], "Exercise Foundation: Sensor Hierarchy": [[494, "exercise-foundation-sensor-hierarchy"]], "Hypothetical": [[494, "hypothetical"]], "Class Hierarchy": [[494, "class-hierarchy"]], "Singleton": [[495, "singleton"]], "And class Person?": [[495, "and-class-person"]], "UML Short Introduction": [[496, "uml-short-introduction"]], "Interface": [[496, "interface"]], "Interface Implementation, Inheritance": [[496, "interface-implementation-inheritance"]], "Connectors: Association, Aggregation, Composition": [[496, "connectors-association-aggregation-composition"]], "Association": [[496, "association"]], "Aggregation": [[496, "aggregation"]], "Composition": [[496, "composition"]], "Exercise: Abstract Factory": [[497, "exercise-abstract-factory"]], "Exercise: Adapter": [[498, "exercise-adapter"], [505, "exercise-adapter"]], "Exercise: Command": [[499, "exercise-command"]], "Exercise: Composite": [[500, "exercise-composite"]], "Exercise: Decorator": [[501, "exercise-decorator"]], "Exercises: Design Patterns": [[502, "exercises-design-patterns"]], "Exercise: Interpreter Combined With Adapter (And A Proxy)": [[503, "exercise-interpreter-combined-with-adapter-and-a-proxy"]], "Exercise: Arithmetic Expression Interpreter": [[504, "exercise-arithmetic-expression-interpreter"]], "Expression Interface": [[504, "expression-interface"]], "Arithmetic (Binary) Expressions": [[504, "arithmetic-binary-expressions"]], "Check: Combined Arithmetic Expressions": [[504, "check-combined-arithmetic-expressions"]], "And Variables?": [[504, "and-variables"]], "No Uninitialized Variables!!": [[504, "no-uninitialized-variables"]], "Assigning To Variables": [[504, "assigning-to-variables"]], "Using Variables As Expressions": [[504, "using-variables-as-expressions"]], "Exercise: Proxy (Remote Thermometer)": [[506, "exercise-proxy-remote-thermometer"]], "Network Communication": [[506, "network-communication"]], "Implementation Hints": [[506, "implementation-hints"]], "Exercise: Proxy (Rounding Thermometer)": [[507, "exercise-proxy-rounding-thermometer"]], "Exercise: Singleton (Flexible)": [[508, "exercise-singleton-flexible"]], "Exercise: Singleton (Flexible And Strict)": [[509, "exercise-singleton-flexible-and-strict"]], "Complications": [[509, "complications"]], "Exercise: Singleton (Inflexible)": [[510, "exercise-singleton-inflexible"]], "Solution: Abstract Factory": [[511, "solution-abstract-factory"]], "I2CSensorFactory Abstract Factory": [[511, "i2csensorfactory-abstract-factory"]], "Concrete Factory Implementations": [[511, "concrete-factory-implementations"]], "I2CSensorFactory_Vendor1": [[511, "i2csensorfactory-vendor1"], [511, "id1"]], "Solution: Adapter": [[512, "solution-adapter"]], "Adapter Class For Fahrenheit Sensors": [[512, "adapter-class-for-fahrenheit-sensors"]], "Solution: Command": [[513, "solution-command"]], "Command Classes": [[513, "command-classes"]], "Solution: Composite": [[514, "solution-composite"]], "Averaging (Composite) Sensor": [[514, "averaging-composite-sensor"]], "Solution: Decorator": [[515, "solution-decorator"]], "Decorated Sensor (Intermediate Interface)": [[515, "decorated-sensor-intermediate-interface"]], "Decorated Constant Sensor": [[515, "decorated-constant-sensor"]], "Decorated Random Sensor": [[515, "decorated-random-sensor"]], "Solution: Interpreter Combined With Adapter (And A Proxy)": [[517, "solution-interpreter-combined-with-adapter-and-a-proxy"]], "Solution: Arithmetic Expression Interpreter": [[518, "solution-arithmetic-expression-interpreter"]], "Solution: Observer": [[519, "solution-observer"]], "Solution: Proxy (Remote Thermometer)": [[520, "solution-proxy-remote-thermometer"]], "Client (Proxy) Thermometer": [[520, "client-proxy-thermometer"]], "Remote Stub": [[520, "remote-stub"]], "Solution: Proxy (Rounding Thermometer)": [[521, "solution-proxy-rounding-thermometer"]], "Rounding Sensor (Proxy) Implementation": [[521, "rounding-sensor-proxy-implementation"]], "Solution: Singleton (Flexible)": [[522, "solution-singleton-flexible"]], "Main Program": [[522, "main-program"], [523, "main-program"], [524, "main-program"], [762, "main-program"], [764, "main-program"], [766, "main-program"], [768, "main-program"]], "SocialInsurance Interface": [[522, "socialinsurance-interface"], [523, "socialinsurance-interface"]], "Two Concrete Implementations": [[522, "two-concrete-implementations"], [523, "two-concrete-implementations"]], "OEGK": [[522, "oegk"], [523, "oegk"]], "SVS": [[522, "svs"], [523, "svs"]], "Solution: Singleton (Flexible And Strict)": [[523, "solution-singleton-flexible-and-strict"]], "Solution: Singleton (Inflexible)": [[524, "solution-singleton-inflexible"]], "Singleton Implementation": [[524, "singleton-implementation"]], "Exercise (FH): Introducing a Sensor Class": [[525, "exercise-fh-introducing-a-sensor-class"]], "Github Project": [[525, "github-project"]], "CMake Build": [[525, "cmake-build"], [959, "cmake-build"]], "Dependencies/Usage Relationships": [[525, "dependencies-usage-relationships"]], "Onewire Sensor Usage: Example/Unit-Test": [[525, "onewire-sensor-usage-example-unit-test"]], "Step 1: Preparation": [[525, "step-1-preparation"]], "Step 2: Modify onewire-temperature-<firstname>-<lastname>.cpp To Use class W1Sensor": [[525, "step-2-modify-onewire-temperature-firstname-lastname-cpp-to-use-class-w1sensor"]], "Step 3: Answer A Question": [[525, "step-3-answer-a-question"]], "Exercise (FH): Extract Measurement Loop Into Function": [[526, "exercise-fh-extract-measurement-loop-into-function"]], "Exercise (FH): Replace Sensor": [[527, "exercise-fh-replace-sensor"]], "Exercise (FH): Write A Sensor Class: RandomSensor": [[528, "exercise-fh-write-a-sensor-class-randomsensor"]], "New Sensor Class: RandomSensor": [[528, "new-sensor-class-randomsensor"]], "Implementation Details": [[528, "implementation-details"]], "New Program: random-temperature.cpp": [[528, "new-program-random-temperature-cpp"]], "FH Sensor OO (First Try)": [[529, "fh-sensor-oo-first-try"]], "C++ Exercises": [[530, "c-exercises"]], "Exercise Projects": [[530, "exercise-projects"]], "Exercise: LEDStripeDisplay_nopoly (Non-Polymorphic)": [[531, "exercise-ledstripedisplay-nopoly-non-polymorphic"]], "Topics Covered": [[531, "topics-covered"], [532, "topics-covered"], [533, "topics-covered"], [534, "topics-covered"], [535, "topics-covered"], [536, "topics-covered"], [537, "topics-covered"], [540, "topics-covered"]], "Exercise: Hysteresis_nopoly (Non-Polymorphic)": [[532, "exercise-hysteresis-nopoly-non-polymorphic"]], "Exercise: AveragingSensor_nopoly (Non-Polymorphic)": [[533, "exercise-averagingsensor-nopoly-non-polymorphic"]], "Exercise: ConstantSensor_nopoly (Non-Polymorphic)": [[534, "exercise-constantsensor-nopoly-non-polymorphic"]], "Exercise: MockSensor_nopoly (Non-Polymorphic)": [[535, "exercise-mocksensor-nopoly-non-polymorphic"]], "Exercise: RandomSensor_nopoly (Non-Polymorphic)": [[536, "exercise-randomsensor-nopoly-non-polymorphic"]], "Implementation Hint: Randomicity In C++": [[536, "implementation-hint-randomicity-in-c"]], "Implementation Hint: Initializer Lists": [[536, "implementation-hint-initializer-lists"]], "Exercise: Mocking Switch (Non-Polymorphic)": [[537, "exercise-mocking-switch-non-polymorphic"]], "OO Basics, Interfaces (Shapes)": [[538, "oo-basics-interfaces-shapes"]], "Exercise Table": [[538, "exercise-table"]], "Setup, Exam Procedure": [[538, "setup-exam-procedure"]], "Point": [[538, "point"]], "Point: Constructor and Getter Methods": [[538, "point-constructor-and-getter-methods"]], "Point: Default Constructor": [[538, "point-default-constructor"]], "Point: Static Method: equal()": [[538, "point-static-method-equal"]], "Point: operator==()": [[538, "point-operator"]], "Point: Method: move()": [[538, "point-method-move"]], "Point: operator+=()": [[538, "point-suite-operator-plus-equals"]], "Point: Static Method: add()": [[538, "point-static-method-add"]], "Point: operator+()": [[538, "point-suite-operator-plus"]], "Circle": [[538, "circle"]], "Circle: Constructor": [[538, "circle-constructor"]], "Circle: operator==()": [[538, "circle-operator"]], "Circle: Method: area()": [[538, "circle-method-area"]], "Square": [[538, "square"]], "Square: Constructor": [[538, "square-constructor"]], "Square: operator==()": [[538, "square-operator"]], "Square: Method: area()": [[538, "square-method-area"]], "Interface: Shape": [[538, "interface-shape"]], "Interface: Circle And Square Is-A Shape": [[538, "interface-circle-and-square-is-a-shape"]], "Interface: Can Compute Area Of Any Shape": [[538, "interface-can-compute-area-of-any-shape"]], "Working On Exercise Projects": [[539, "working-on-exercise-projects"]], "Clone Github Repository": [[539, "clone-github-repository"]], "Massage googletest Sub-Module": [[539, "massage-googletest-sub-module"]], "Build Directory: Create Makefiles With cmake": [[539, "build-directory-create-makefiles-with-cmake"]], "Build Directory: Build With make": [[539, "build-directory-build-with-make"]], "Build Directory: Run Tests": [[539, "build-directory-run-tests"]], "Exercise: Sensor Interface": [[540, "exercise-sensor-interface"]], "Problem: Polymorphic Thermometer Usage": [[540, "problem-polymorphic-thermometer-usage"]], "The Exercise": [[540, "the-exercise"]], "Exercise: OneWire Sensor Factory": [[541, "exercise-onewire-sensor-factory"]], "Fixture": [[541, "fixture"], [776, "fixture"]], "basic": [[541, "basic"]], "notfound": [[541, "notfound"]], "find_is_const": [[541, "find-is-const"]], "Testing In Isolation": [[541, "testing-in-isolation"]], "Testing In Reality": [[541, "testing-in-reality"]], "On The PC": [[541, "on-the-pc"]], "On The Target": [[541, "on-the-target"]], "Exercise: OneWire Sensor Class": [[542, "exercise-onewire-sensor-class"]], "Download Monolithic Sensor Implementation": [[542, "download-monolithic-sensor-implementation"]], "Test Monolithic Implementation": [[542, "test-monolithic-implementation"]], "class W1Sensor": [[542, "class-w1sensor"]], "Exercise: Algorithms": [[543, "exercise-algorithms"]], "Copy Into std::vector": [[543, "copy-into-std-vector"]], "Find Element In std::vector": [[543, "find-element-in-std-vector"]], "Sort In-Place": [[543, "sort-in-place"]], "Sort Into A Copy": [[543, "sort-into-a-copy"]], "Exercise: Generic Filter": [[544, "exercise-generic-filter"]], "Exercise: Filter Elements Greater Than 10": [[545, "exercise-filter-elements-greater-than-10"]], "Exercise: Filter Odd Elements": [[546, "exercise-filter-odd-elements"]], "C++ Exercises: Standard Template Library": [[547, "c-exercises-standard-template-library"]], "Exercise: std::map<>": [[548, "exercise-std-map"]], "Exercises: Sensor Repository (std::map)": [[549, "exercises-sensor-repository-std-map"]], "Insert - Not Overwriting Existing Elements": [[550, "insert-not-overwriting-existing-elements"]], "Insert - Sunny Case": [[551, "insert-sunny-case"]], "Lookup - Not Found": [[552, "lookup-not-found"]], "Lookup - Sunny Case": [[553, "lookup-sunny-case"]], "Memory Leaks?": [[554, "memory-leaks"]], "Remove - Not Found": [[555, "remove-not-found"]], "Remove - Sunny Case": [[556, "remove-sunny-case"]], ".size() Is const": [[557, "size-is-const"]], "Exercise: Uniquify A Sequence": [[558, "exercise-uniquify-a-sequence"]], "Exercise: std::vector<>": [[559, "exercise-std-vector"]], "C++: TODO List": [[560, "c-todo-list"]], "Structural": [[560, "structural"]], "STL, Containers and Algorithms": [[560, "stl-containers-and-algorithms"]], "Templates/Overloading": [[560, "templates-overloading"]], "Functors: Overloading the Function Call Operator": [[560, "functors-overloading-the-function-call-operator"]], "Threads": [[560, "threads"]], "C++ >= 11": [[560, "c-11"]], "UserDB Exercise": [[560, "userdb-exercise"]], "Complete Transcription of C++11": [[560, "complete-transcription-of-c-11"]], "Exercise series": [[560, "exercise-series"]], "Code: C++: Class Templates": [[561, "code-c-class-templates"]], "Screenplay: C++: Class Templates": [[562, "screenplay-c-class-templates"]], "C++: Class Templates": [[563, "c-class-templates"]], "Code: C++: Dynamic Memory": [[564, "code-c-dynamic-memory"]], "Screenplay: C++: Dynamic Memory": [[565, "screenplay-c-dynamic-memory"]], "C: malloc()/free()": [[565, "c-malloc-free"]], "valgrind: Memory Leak": [[565, "valgrind-memory-leak"]], "valgrind: Array Bounds Write": [[565, "valgrind-array-bounds-write"]], "C++: new, delete": [[565, "c-new-delete"]], "C++: new, delete on Arrays": [[565, "c-new-delete-on-arrays"]], "valgrind: delete Mismatch": [[565, "valgrind-delete-mismatch"]], "C++: Dynamic Memory": [[566, "c-dynamic-memory"]], "Code: C++: Global Objects Initialization": [[567, "code-c-global-objects-initialization"]], "Screenplay: C++: Global Objects Initialization": [[568, "screenplay-c-global-objects-initialization"]], "Constructor and Destructor Order in Same File": [[568, "constructor-and-destructor-order-in-same-file"]], "Constructor and Destructor Order Across Files": [[568, "constructor-and-destructor-order-across-files"]], "Constructor and Destructor Order Across Files: Dependencies, Bugs": [[568, "constructor-and-destructor-order-across-files-dependencies-bugs"]], "C++: Global Objects Initialization": [[569, "c-global-objects-initialization"]], "Code: C++: Inheritance, Interfaces, virtual": [[570, "code-c-inheritance-interfaces-virtual"]], "Screenplay: C++: Inheritance, Interfaces, virtual": [[571, "screenplay-c-inheritance-interfaces-virtual"]], "C++: Inheritance, Interfaces, virtual": [[572, "c-inheritance-interfaces-virtual"]], "Code: C++: Ownership/RAII": [[573, "code-c-ownership-raii"]], "Screenplay: C++: Ownership/RAII": [[574, "screenplay-c-ownership-raii"]], "Allocate in Constructor": [[574, "allocate-in-constructor"]], "Deallocate in Destructor - Ownership": [[574, "deallocate-in-destructor-ownership"]], "Ownership: 2 x non-const": [[574, "ownership-2-x-non-const"]], "Ownership: const Method": [[574, "ownership-const-method"]], "Ownership: 2 x const": [[574, "ownership-2-x-const"]], "C++: Ownership/RAII": [[575, "c-ownership-raii"]], "Code: C++: STL Containers (Intro)": [[576, "code-c-stl-containers-intro"]], "Screenplay: C++: STL Containers (Intro)": [[577, "screenplay-c-stl-containers-intro"]], "Pointer Arithmetics Recap": [[577, "pointer-arithmetics-recap"]], "Container: std::vector": [[577, "container-std-vector"]], "Algorithm: std::vector and Naive Copy": [[577, "algorithm-std-vector-and-naive-copy"]], "Algorithm: std::vector and std::copy<>": [[577, "algorithm-std-vector-and-std-copy"]], "Container: std::list": [[577, "container-std-list"]], "Container: std::map": [[577, "container-std-map"]], "C++: STL Containers (Intro)": [[578, "c-stl-containers-intro"]], "Code: C++: Templates vs. Interfaces": [[579, "code-c-templates-vs-interfaces"]], "Screenplay: C++: Templates vs. Interfaces": [[580, "screenplay-c-templates-vs-interfaces"]], "C++: Templates vs. Interfaces": [[581, "c-templates-vs-interfaces"]], "Background": [[583, "background"]], "History": [[583, "history"], [1018, "history"]], "Content": [[583, "content"]], "Object Oriented Programming In Good Ol\u2019 C": [[584, "object-oriented-programming-in-good-ol-c"]], "C Is Simple, So Why C++?": [[584, "c-is-simple-so-why-c"]], "struct point: Something That Looks Like A Point": [[584, "struct-point-something-that-looks-like-a-point"]], "Good Style: Explicit Initialization Functions": [[584, "good-style-explicit-initialization-functions"]], "Comparison Functions: (In)Equality": [[584, "comparison-functions-in-equality"]], "Moving Points": [[584, "moving-points"]], "Vector Addition and Subtraction": [[584, "vector-addition-and-subtraction"]], "Distance Of Two Points": [[584, "distance-of-two-points"]], "Length Of A Point\u2019s Position Vector": [[584, "length-of-a-point-s-position-vector"]], "Summary: Is C Good Enough?": [[584, "summary-is-c-good-enough"]], "Copy Constructor, Assignment Operator": [[585, "copy-constructor-assignment-operator"]], "Compiler Generated Copy Constructor": [[585, "compiler-generated-copy-constructor"]], "Rule": [[585, null], [588, null], [687, "rule"]], "Manually Written Copy Constructor And Assignment Operator": [[585, "manually-written-copy-constructor-and-assignment-operator"]], "Classes and Objects": [[586, "classes-and-objects"]], "Introducing C++: class point": [[586, "introducing-c-class-point"]], "Access Specifiers: public And private": [[586, "access-specifiers-public-and-private"]], "Default Constructor": [[586, "default-constructor"], [588, "default-constructor"], [601, "default-constructor"], [602, "default-constructor"], [603, "default-constructor"], [604, "default-constructor"]], "Custom Constructor: Usage": [[586, "custom-constructor-usage"]], "Custom Constructor: Implementation": [[586, "custom-constructor-implementation"]], "Access Methods For Otherwise Private Members": [[586, "access-methods-for-otherwise-private-members"]], "Methods: Operations On An Object": [[586, "methods-operations-on-an-object"]], "And printf()?!": [[586, "and-printf"]], "Custom Constructor": [[587, "custom-constructor"], [601, "custom-constructor"]], "Constructors: why? (1)": [[587, "constructors-why-1"]], "Constructors: why? (2)": [[587, "constructors-why-2"]], "Constructors: Implementation - Inline": [[587, "constructors-implementation-inline"]], "Constructors: Implementation - Out-of-Line": [[587, "constructors-implementation-out-of-line"]], "Compiler Generated Default Constructor": [[588, "compiler-generated-default-constructor"]], "Compiler Generated Default Constructor: Pitfall: Built-In Types": [[588, "compiler-generated-default-constructor-pitfall-built-in-types"]], "Manually Written Default Constructor": [[588, "manually-written-default-constructor"]], "What If User-Defined Constructors Are In Place?": [[588, "what-if-user-defined-constructors-are-in-place"]], "More Constructors, Destructors": [[589, "more-constructors-destructors"]], "Default Constructor (1)": [[589, "default-constructor-1"]], "Default Constructor (2)": [[589, "default-constructor-2"]], "Object Lifecycle - Destructor": [[589, "object-lifecycle-destructor"]], "Destructors (1)": [[589, "destructors-1"]], "Destructors (2)": [[589, "destructors-2"]], "Destructors (3)": [[589, "destructors-3"]], "Destructors (4)": [[589, "destructors-4"]], "Data Encapsulation": [[590, "data-encapsulation"]], "Constructors: Member Initialization": [[591, "constructors-member-initialization"]], "Member Initialization? Assignment?": [[591, "member-initialization-assignment"]], "Real Initialization: Initializer List": [[591, "real-initialization-initializer-list"]], "Why Is That Important?": [[591, "why-is-that-important"]], "Why Else Is That Important?": [[591, "why-else-is-that-important"]], "Object Copy (And Resource Management): There Be Dragons": [[592, "object-copy-and-resource-management-there-be-dragons"]], "Copy in C": [[592, "copy-in-c"]], "Copy Constructor": [[592, "copy-constructor"]], "Pointer Members, And Compiler Generated Copy": [[592, "pointer-members-and-compiler-generated-copy"]], "Why? Dragons Everywhere!": [[592, "why-dragons-everywhere"]], "Solution: Write Copy Constructor Manually": [[592, "solution-write-copy-constructor-manually"]], "Copy Constructor: Recursive/Memberwise": [[592, "copy-constructor-recursive-memberwise"]], "Assignment Operator": [[592, "assignment-operator"]], "Assignment Operator and Pointer Members: Memory Leak": [[592, "assignment-operator-and-pointer-members-memory-leak"]], "Assignment Operator and Pointer Members: Memory Leak, Straighforward Fix": [[592, "assignment-operator-and-pointer-members-memory-leak-straighforward-fix"]], "Assignment Operator and Pointer Members: Self-Assignment": [[592, "assignment-operator-and-pointer-members-self-assignment"]], "Assignment Operator: Self Assignment, Correctly Implemented": [[592, "assignment-operator-self-assignment-correctly-implemented"]], "Overloading": [[593, "overloading"]], "Functions in C": [[593, "functions-in-c"]], "Functions in C++ \u2014 Overloading": [[593, "functions-in-c-overloading"]], "Underlying Mechanism: Name Mangling": [[593, "underlying-mechanism-name-mangling"]], "Overloading Class Methods: Just The Same": [[593, "overloading-class-methods-just-the-same"]], "Objects - Data and Methods": [[594, "objects-data-and-methods"]], "class point Again": [[594, "class-point-again"]], "Simple Methods: Access Methods (\u201cGetters\u201d)": [[594, "simple-methods-access-methods-getters"]], "How Are Members Accessed Inside Methods?": [[594, "how-are-members-accessed-inside-methods"]], "const Methods": [[594, "const-methods"], [595, "const-methods"]], "Non const Methods": [[594, "non-const-methods"]], "const": [[595, "const"]], "const: Immutable Variable": [[595, "const-immutable-variable"]], "const Correctness vs. Pollution": [[595, "const-correctness-vs-pollution"]], "this": [[596, "this"]], "Hidden Pointer: this (1)": [[596, "hidden-pointer-this-1"]], "Hidden Pointer: this (2)": [[596, "hidden-pointer-this-2"]], "Explicit this Pointer": [[596, "explicit-this-pointer"]], "Pass By Copy/Reference": [[597, "pass-by-copy-reference"]], "Pointers Can Be Left Uninitialized": [[597, "pointers-can-be-left-uninitialized"]], "References Cannot (Easily) Be Left Uninitialized": [[597, "references-cannot-easily-be-left-uninitialized"]], "Copy? Reference? C? Pointers!": [[597, "copy-reference-c-pointers"]], "C++: True References": [[597, "c-true-references"]], "And const? Pointers?": [[597, "and-const-pointers"]], "const References": [[597, "const-references"]], "const Reference: Substitute For \u201cPass by Copy\u201d": [[597, "const-reference-substitute-for-pass-by-copy"]], "static Methods": [[598, "static-methods"]], "Methods without Object": [[598, "methods-without-object"]], "Naive Implementation: Global Function": [[598, "naive-implementation-global-function"]], "C++: static Method": [[598, "c-static-method"]], "static Member Variables": [[599, "static-member-variables"]], "Good Old C: extern Global Variables": [[599, "good-old-c-extern-global-variables"]], "ODR: One Definition Rule": [[599, "odr-one-definition-rule"]], "(A Litte) More Overengineered: Declaration In Header File": [[599, "a-litte-more-overengineered-declaration-in-header-file"]], "Same Inside A Class: static Member Variable": [[599, "same-inside-a-class-static-member-variable"]], "Sideway: Definition In A Header File?": [[599, "sideway-definition-in-a-header-file"]], "static inline Member Defnition (Since C++17)": [[599, "static-inline-member-defnition-since-c-17"]], "Implementing (In)Equality": [[600, "implementing-in-equality"]], "Implementing (In)Equality: Global Function": [[600, "implementing-in-equality-global-function"]], "Implementing (In)Equality: Object Method": [[600, "implementing-in-equality-object-method"]], "Implementing Arithmetic: + (Vector Addition)": [[600, "implementing-arithmetic-vector-addition"]], "Implementing Arithmetic: + (Vector Addition): Global Function": [[600, "implementing-arithmetic-vector-addition-global-function"]], "Implementing Arithmetic: + (Vector Addition): Object Method": [[600, "implementing-arithmetic-vector-addition-object-method"]], "Implementing Arithmetic: += (Moving A Point)": [[600, "implementing-arithmetic-moving-a-point"]], "Implementing ostream Shift: std::cout << ...": [[600, "implementing-ostream-shift-std-cout"]], "Exercise (FH): class cuboid": [[601, "exercise-fh-class-cuboid"]], "Building class cuboid Upon class point3d": [[601, "building-class-cuboid-upon-class-point3d"]], "(In-)Equality": [[601, "in-equality"], [602, "in-equality"], [603, "in-equality"], [604, "in-equality"]], "+=": [[601, "id2"], [602, "id1"], [603, "id2"], [604, "id2"]], "-=": [[601, "id4"], [603, "id4"]], "+": [[601, "id6"], [602, "id2"], [603, "id6"], [604, "id3"]], "-": [[601, "id8"], [603, "id8"]], "<< (std::ostream)": [[601, "std-ostream"], [602, "std-ostream"], [603, "std-ostream"], [604, "std-ostream"]], "Surface": [[601, "surface"]], "Volume": [[601, "volume"]], "Exercise (FH): class point": [[602, "exercise-fh-class-point"]], "Initial Build": [[602, "initial-build"]], "Initial Test Run": [[602, "initial-test-run"]], "Extending class point: More Unit Tests": [[602, "extending-class-point-more-unit-tests"]], "Access Methods": [[602, "access-methods"]], "Unary -": [[602, "unary"], [603, "unary"]], "Exercise (FH): class point3d": [[603, "exercise-fh-class-point3d"]], "Building class rectangle Upon class point": [[603, "building-class-rectangle-upon-class-point"], [604, "building-class-rectangle-upon-class-point"]], "Coordinates": [[603, "coordinates"], [604, "coordinates"]], "Absolute Value": [[603, "absolute-value"]], "Distance Between Two Points": [[603, "distance-between-two-points"]], "Exercise (FH): class rectangle": [[604, "exercise-fh-class-rectangle"]], "Width, Height, Area": [[604, "width-height-area"]], "Error Handling: if - else if - else": [[606, "error-handling-if-else-if-else"]], "try - catch": [[607, "try-catch"]], "try - Block": [[607, "try-block"]], "catch - Block": [[607, "catch-block"]], "Standard Library: Exception-Hierarchy": [[607, "standard-library-exception-hierarchy"]], "Custom Exceptions (1)": [[607, "custom-exceptions-1"]], "Custom Exceptions (2)": [[607, "custom-exceptions-2"]], "Throwing Exceptions - throw": [[607, "throwing-exceptions-throw"]], "Last Words": [[607, "last-words"], [610, "last-words"]], "Function Templates": [[609, "function-templates"]], "Origin: Duplicated Code": [[609, "origin-duplicated-code"]], "A simple Function-Template": [[609, "a-simple-function-template"]], "More Templates from the STL": [[609, "more-templates-from-the-stl"]], "Class Templates": [[610, "class-templates"]], "Does This Work With Classes?": [[610, "does-this-work-with-classes"]], "Example: point as a Class Template (1)": [[610, "example-point-as-a-class-template-1"]], "Example: point as a Class Template (2)": [[610, "example-point-as-a-class-template-2"]], "Screenplay: std::copy<>() From <algorithm>": [[612, "screenplay-std-copy-from-algorithm"]], "Screenplay: Pointer Arithmetic, And Algorithms": [[613, "screenplay-pointer-arithmetic-and-algorithms"]], "Screenplay: Pointer Arithmetic Basics": [[614, "screenplay-pointer-arithmetic-basics"]], "Screenplay: Pointer Difference": [[615, "screenplay-pointer-difference"]], "Screenplay: Out Of Range Errors": [[616, "screenplay-out-of-range-errors"]], "Standard Template Library: Basics": [[617, "standard-template-library-basics"]], "Containers, Iterators, Algorithms": [[617, "containers-iterators-algorithms"]], "Pointer Increment and Decrement": [[617, "pointer-increment-and-decrement"]], "Out Of Range Errors (The Spirit Of C)": [[617, "out-of-range-errors-the-spirit-of-c"]], "Pointer Difference": [[617, "pointer-difference"]], "Step Width? (1)": [[617, "step-width-1"]], "Step Width? (2)": [[617, "step-width-2"]], "And Arbitrary Data Types?": [[617, "and-arbitrary-data-types"]], "Enter Algorithms (On Good Old C Arrays)": [[617, "enter-algorithms-on-good-old-c-arrays"]], "STL Algorithms": [[617, "stl-algorithms"]], "STL Containers": [[617, "stl-containers"]], "std::vector (And std::copy())": [[618, "std-vector-and-std-copy"]], "Dynamicity Details": [[618, "dynamicity-details"]], "STL Iterators: Pointer Arithmetic On A std::vector<>": [[618, "stl-iterators-pointer-arithmetic-on-a-std-vector"]], "Algorithms And Containers : std::copy": [[618, "algorithms-and-containers-std-copy"]], "Screenplay: std::vector And std::copy()": [[619, "screenplay-std-vector-and-std-copy"]], "std::vector<> Into C Array": [[619, "std-vector-into-c-array"]], "Copying Into std::vector (Without Allocation)": [[619, "copying-into-std-vector-without-allocation"]], "Solution 1: Pre-allocate Destination": [[619, "solution-1-pre-allocate-destination"]], "Solution 2: std::back_insert_iterator": [[619, "solution-2-std-back-insert-iterator"]], "Screenplay: std::vector Basics": [[620, "screenplay-std-vector-basics"]], "Screenplay: std::vector, And Pointer Arithmetics": [[621, "screenplay-std-vector-and-pointer-arithmetics"]], "Documentation": [[622, null], [623, null], [624, null], [625, null], [626, null], [628, null], [629, null], [630, null], [631, null], [634, null], [635, null], [638, null], [643, null], [789, null], [789, null], [805, null], [807, "documentation"], [807, null], [811, "documentation"], [813, null], [813, null], [813, null], [839, "documentation"], [842, "documentation"], [852, null], [853, null], [856, null], [860, null], [860, null], [867, null], [868, null], [869, null], [869, null], [869, null], [870, null], [885, null], [885, null], [885, null], [886, null], [887, null], [888, null], [904, null], [904, null], [904, null], [907, null], [908, null], [941, null], [943, null], [945, null], [947, null], [948, null], [949, null], [951, null], [951, null], [951, null], [951, null], [951, null], [951, null], [954, null], [955, null], [956, null], [957, null], [957, null], [958, null], [961, null], [961, null], [961, null], [961, null], [999, null], [999, null], [1000, null], [1075, null], [1085, null], [1163, "documentation"]], "binary_search<>: On Sorted Sequence": [[622, "binary-search-on-sorted-sequence"]], "More Intelligent Search": [[622, "more-intelligent-search"], [628, "more-intelligent-search"]], "copy<>": [[623, "copy"]], "find<>: Sequential Search, by Equality": [[624, "find-sequential-search-by-equality"]], "Basic Usage": [[624, "basic-usage"], [743, "basic-usage"], [907, "basic-usage"], [1077, "basic-usage"]], "Not Found?": [[624, "not-found"]], "find_if<>: Sequential Search, Customizable": [[625, "find-if-sequential-search-customizable"]], "if, Using a Plain Function": [[625, "if-using-a-plain-function"]], "if, Using a Functor Class": [[625, "if-using-a-functor-class"]], "for_each<>": [[626, "for-each"]], "Basic Algorithms": [[627, "basic-algorithms"]], "Sorted Arrays": [[627, "sorted-arrays"]], "lower_bound<>: On Sorted Sequence": [[628, "lower-bound-on-sorted-sequence"]], "reverse<>: Reversing In-Place": [[629, "reverse-reversing-in-place"]], "reverse_copy<>: Copying and Reversing": [[630, "reverse-copy-copying-and-reversing"]], "sort<>": [[631, "sort"]], "Algorithm: std::sort": [[631, "algorithm-std-sort"]], "Algorithm: std::sort, custom comparison": [[631, "algorithm-std-sort-custom-comparison"]], "Sequential Containers": [[632, "sequential-containers"], [633, "sequential-containers"]], "Common Characteristics": [[632, "common-characteristics"]], "list<>": [[634, "list"]], "Insertion and Deletion": [[634, "insertion-and-deletion"]], "vector<>": [[635, "vector"]], "Characteristics": [[635, "characteristics"]], "Modification at the Back": [[635, "modification-at-the-back"]], "Insertion": [[635, "insertion"]], "Example": [[635, "example"], [1092, "example"]], "Associative Containers": [[636, "associative-containers"], [637, "associative-containers"]], "Type Instantiation": [[638, "type-instantiation"]], "Filling The Container": [[638, "filling-the-container"]], "Inserting Elements": [[638, "inserting-elements"]], "Searching": [[638, "searching"], [662, "searching"]], "Screenplay: std::map Initialization And Inserting": [[639, "screenplay-std-map-initialization-and-inserting"]], "Definining The Type": [[639, "definining-the-type"]], "Initialization": [[639, "initialization"], [662, "initialization"]], "Screenplay: Inserting Elements": [[640, "screenplay-inserting-elements"]], "Subscript Operator": [[640, "subscript-operator"]], "insert()": [[640, "insert"]], "Screenplay: Removing (Erasing) Elements": [[641, "screenplay-removing-erasing-elements"]], "By Pointer (Err, Iterator)": [[641, "by-pointer-err-iterator"]], "By Key": [[641, "by-key"]], "Screenplay: Searching": [[642, "screenplay-searching"]], "find(key)": [[642, "find-key"]], "[key]": [[642, "key"]], "at(key)": [[642, "at-key"]], "multimap<>": [[643, "multimap"]], "Allocator Basics": [[644, "allocator-basics"]], "STL: Exercises": [[646, "stl-exercises"]], "Exercise: Reverse a String": [[647, "exercise-reverse-a-string"]], "Exercise: Reverse A String": [[648, "exercise-reverse-a-string"]], "Solution: Reverse a String": [[649, "solution-reverse-a-string"]], "Naive": [[649, "naive"]], "Using std::reverse<>": [[649, "using-std-reverse"]], "Using std::reverse_copy<>": [[649, "using-std-reverse-copy"]], "Dynamic Memory (To Be Done)": [[651, "dynamic-memory-to-be-done"]], "Inheritance Basics": [[653, "inheritance-basics"]], "Plain (Base) Class": [[653, "plain-base-class"], [654, "plain-base-class"]], "Inheriting (Deriving) From Base": [[653, "inheriting-deriving-from-base"]], "Derived is-a Base?": [[653, "derived-is-a-base"]], "Destructors And Inheritance": [[654, "destructors-and-inheritance"]], "Derived Class, And Destructor": [[654, "derived-class-and-destructor"]], "And Base Class Conversion?": [[654, "and-base-class-conversion"]], "Inheritance And Object Oriented Design": [[655, "inheritance-and-object-oriented-design"]], "C++ \u201cInterfaces\u201d": [[656, "c-interfaces"]], "Bringing It All Together": [[656, "bringing-it-all-together"]], "Polymorphic Usage Of Objects": [[657, "polymorphic-usage-of-objects"]], "What Larger Systems Want": [[657, "what-larger-systems-want"]], "Pitfall \u27f6 Pure Virtual Methods": [[657, "pitfall-longrightarrow-pure-virtual-methods"]], "Pure Virtual Method": [[657, "pure-virtual-method"]], "Inheritance: private, protected (Implementation Inheritance)": [[658, "inheritance-private-protected-implementation-inheritance"]], "Virtual Destructors": [[659, "virtual-destructors"]], "Is-A Relationships And Destructors": [[659, "is-a-relationships-and-destructors"]], "Pure Virtual Destructor?": [[659, "pure-virtual-destructor"]], "Virtual Methods": [[660, "virtual-methods"]], "Simple Is-A Relationship Is Not Enough": [[660, "simple-is-a-relationship-is-not-enough"]], "Enter virtual": [[660, "enter-virtual"]], "Caution: virtual": [[660, "caution-virtual"]], "std::string": [[662, "std-string"]], "Addition, And Such": [[662, "addition-and-such"]], "Conversion From String": [[662, "conversion-from-string"]], "Conversion To String": [[662, "conversion-to-string"]], "Substrings": [[662, "substrings"]], "Exercise: Paint the American Flag Onto Standard Output": [[663, "exercise-paint-the-american-flag-onto-standard-output"]], "FH/Moodle Quiz: C++": [[664, "fh-moodle-quiz-c"]], "Exercises: Miscellaneous": [[665, "exercises-miscellaneous"]], "Exercise: Sum of Integers Coming From cin": [[666, "exercise-sum-of-integers-coming-from-cin"]], "Exercises: User Database": [[667, "exercises-user-database"]], "Exercise: Access Methods for Members": [[668, "exercise-access-methods-for-members"]], "Exercise: const Members": [[669, "exercise-const-members"]], "Exercise: Use const": [[670, "exercise-use-const"]], "Exercise: Default Constructor (was: Arrays of Objects)": [[671, "exercise-default-constructor-was-arrays-of-objects"]], "Exercise: Simple Method (Users Age By n Years)": [[672, "exercise-simple-method-users-age-by-n-years"]], "Exercise: Transform struct User Into A Class": [[673, "exercise-transform-struct-user-into-a-class"]], "Exercise: Insert a User into UserDB": [[674, "exercise-insert-a-user-into-userdb"]], "Exercise: Search a User By Lastname (std::find_if)": [[675, "exercise-search-a-user-by-lastname-std-find-if"]], "Exercise: Search, \u201cUser Not Found\u201d Exception": [[676, "exercise-search-user-not-found-exception"]], "What\u2019s Wrong?": [[676, "what-s-wrong"]], "Exercise: Search a User By Lastname": [[677, "exercise-search-a-user-by-lastname"]], "Exercise: Use std::vector in UserDB": [[678, "exercise-use-std-vector-in-userdb"]], "History, Background": [[681, "history-background"]], "Make C++ Great Again": [[681, "make-c-great-again"]], "The \u201cNew\u201d C++": [[681, "the-new-c"]], "A Live-Hacked Tour Around The New C++": [[682, "a-live-hacked-tour-around-the-new-c"]], "C++03 To-Do List Version": [[682, "c-03-to-do-list-version"]], "Real Container Initialization": [[682, "real-container-initialization"]], "Long iterator Type Names \u27f6 auto": [[682, "long-iterator-type-names-longrightarrow-auto"]], "More auto: Unpacking std::pair": [[682, "more-auto-unpacking-std-pair"]], "Pitfall: Plain auto Creates Copy \u27f6 const auto&": [[682, "pitfall-plain-auto-creates-copy-longrightarrow-const-auto"]], "Iterators Are So Old-School: Range Based For": [[682, "iterators-are-so-old-school-range-based-for"]], "Still Too Old-School: Want Python\u2019s Tuple Unpacking": [[682, "still-too-old-school-want-python-s-tuple-unpacking"]], "What If To-Do List Items Can Really Do Something? \u27f6 Functions": [[682, "what-if-to-do-list-items-can-really-do-something-longrightarrow-functions"]], "Function Pointers Are Old-School \u27f6 std::function": [[682, "function-pointers-are-old-school-longrightarrow-std-function"]], "Definitely Not Old-School: Lambda": [[682, "definitely-not-old-school-lambda"]], "Inevitable: Threads": [[682, "inevitable-threads"]], "Unions? std::variant!": [[682, "unions-std-variant"]], "Wrapping All That Into A Class": [[682, "wrapping-all-that-into-a-class"]], "Architectural Considerations: No Implementation Inheritance Wanted": [[682, "architectural-considerations-no-implementation-inheritance-wanted"]], "Wrapping Up: Initializer": [[682, "wrapping-up-initializer"]], "C++03 enum Types: Motivation": [[683, "c-03-enum-types-motivation"]], "C++03 enum Types: Problems": [[683, "c-03-enum-types-problems"]], "C++11 enum class": [[683, "c-11-enum-class"]], "C++11 enum class: Underlying Type": [[683, "c-11-enum-class-underlying-type"]], "Brace Initialization (Uniform Initialization)": [[684, "brace-initialization-uniform-initialization"]], "std::initializer_list: Brace Initialization, Implementor\u2019s View": [[685, "std-initializer-list-brace-initialization-implementor-s-view"]], "std::initializer_list": [[685, "std-initializer-list"]], "Direct Usage": [[685, "direct-usage"]], "Custom Class That Supports Brace Initialization": [[685, "custom-class-that-supports-brace-initialization"]], "Brace Initialization: Introduction": [[686, "brace-initialization-introduction"]], "Motivation: Inconsistent Initialization Styles": [[686, "motivation-inconsistent-initialization-styles"]], "Motivation: Integral Types Initialization": [[686, "motivation-integral-types-initialization"]], "Motivation: Aggregate Initialization": [[686, "motivation-aggregate-initialization"]], "Motivation: Object Initialization/Constructor": [[686, "motivation-object-initialization-constructor"]], "Motivation: Container Initialization (Missing Pre C++11)": [[686, "motivation-container-initialization-missing-pre-c-11"]], "Motivation: Member Array Initialization": [[686, "motivation-member-array-initialization"]], "Motivation: Heap Array Initialization": [[686, "motivation-heap-array-initialization"]], "Solution: Brace Initialization In C++11": [[686, "solution-brace-initialization-in-c-11"]], "Good: Refuses To Narrow Built-In Types": [[686, "good-refuses-to-narrow-built-in-types"]], "Brace Initialization: A Mess": [[687, "brace-initialization-a-mess"]], "Explicit Constructor And Brace Initialization": [[687, "explicit-constructor-and-brace-initialization"]], "Ambiguity: Explicit And std::initializer_list Constructor": [[687, "ambiguity-explicit-and-std-initializer-list-constructor"]], "Realistic Example: std::vector: Two int (Explicit)": [[687, "realistic-example-std-vector-two-int-explicit"]], "Realistic Example: std::vector: Two int (std::initializer_list)": [[687, "realistic-example-std-vector-two-int-std-initializer-list"]], "Nicolai Josuttis, Complaining About C++": [[687, "nicolai-josuttis-complaining-about-c"]], "Delegating Constructor: Motivation": [[688, "delegating-constructor-motivation"]], "Delegating Constructor: Solution": [[688, "delegating-constructor-solution"]], "constexpr": [[689, "constexpr"]], "Basic Usage: Expressions": [[689, "basic-usage-expressions"]], "constexpr Functions": [[689, "constexpr-functions"]], "Recursive constexpr": [[689, "recursive-constexpr"]], "constexpr Objects": [[689, "constexpr-objects"]], "Afterword, Further Reading": [[690, "afterword-further-reading"]], "Uses In The Standard Library": [[690, "uses-in-the-standard-library"]], "Other Uses": [[690, "other-uses"]], "All Said \u27f6 Guidelines": [[690, "all-said-longrightarrow-guidelines"]], "Further Reading (Well, Videos \ud83d\ude09)": [[690, "further-reading-well-videos-wink"]], "Move Semantics, Rvalue References": [[691, "move-semantics-rvalue-references"]], "Alternative Livehacking": [[691, "alternative-livehacking"]], "SmartPtr With Move Semantics": [[692, "smartptr-with-move-semantics"]], "Return SmartPtr Object From Function": [[692, "return-smartptr-object-from-function"]], "Assign SmartPtr Object \u27f6 Moved": [[692, "assign-smartptr-object-longrightarrow-moved"]], "Implementing Move Semantics (class String, Live Hacked)": [[693, "implementing-move-semantics-class-string-live-hacked"]], "Copy Semantics, Revisited": [[693, "copy-semantics-revisited"]], "class String, Without Copy": [[693, "class-string-without-copy"]], "Return From Function: Copy (Or Move) Wanted": [[693, "return-from-function-copy-or-move-wanted"]], "Move Constructor? Move?": [[693, "move-constructor-move"]], "Implementing Move Constructor": [[693, "implementing-move-constructor"]], "And Move Assignment?": [[693, "and-move-assignment"]], "Implementing Move Assignment": [[693, "implementing-move-assignment"]], "Using Move Semantics In Own Code": [[694, "using-move-semantics-in-own-code"]], "Using String: class Person": [[694, "using-string-class-person"]], "What?": [[694, "what"], [868, "what"]], "Using Rvalue References Inside Function: std::move": [[694, "using-rvalue-references-inside-function-std-move"]], "Lvalues, Rvalues, And Moving": [[695, "lvalues-rvalues-and-moving"]], "Return Object Problem: Reference To Stack-Based Object": [[695, "return-object-problem-reference-to-stack-based-object"]], "Return Object Problem: Solution: Copy": [[695, "return-object-problem-solution-copy"]], "Move Semantics: Wish List": [[695, "move-semantics-wish-list"]], "Theory: Lvalues": [[695, "theory-lvalues"]], "Theory: Rvalues": [[695, "theory-rvalues"]], "Lvalue References (The Good Old Ones)": [[695, "lvalue-references-the-good-old-ones"]], "Rvalue References: So What Is That?": [[695, "rvalue-references-so-what-is-that"]], "Rvalue References As Function Parameters": [[695, "rvalue-references-as-function-parameters"]], "Use Of Rvalue References Parameter Inside A Function: Is An Lvalue": [[695, "use-of-rvalue-references-parameter-inside-a-function-is-an-lvalue"]], "Enter Move Constructor And Move Assignment": [[695, "enter-move-constructor-and-move-assignment"]], "Rules": [[695, null]], "Templates end with \u201c>>\u201d": [[696, "templates-end-with"]], "Duck Typing (Err, auto) Without A Duck": [[697, "duck-typing-err-auto-without-a-duck"]], "Most Basic Usage": [[697, "most-basic-usage"]], "auto Is Only The Basic Type": [[697, "auto-is-only-the-basic-type"]], "If You Want Reference, Say So!": [[697, "if-you-want-reference-say-so"]], "If You Want Const-Reference, Say So!": [[697, "if-you-want-const-reference-say-so"]], "If You Want Pointer, Say So!": [[697, "if-you-want-pointer-say-so"]], "And Arrays? Decay To Pointers!": [[697, "and-arrays-decay-to-pointers"]], "Concepts: Overview": [[699, "concepts-overview"]], "No Problem: Template Instantiation Chosen By Parameter Type": [[699, "no-problem-template-instantiation-chosen-by-parameter-type"]], "Problem: Template Instantiation Chosen By Parameter Type": [[699, "problem-template-instantiation-chosen-by-parameter-type"]], "Concepts To The Rescue": [[699, "concepts-to-the-rescue"]], "Syntactic Variations": [[699, "syntactic-variations"]], "toolcase-1-conceptless.cpp": [[700, "toolcase-1-conceptless-cpp"]], "toolcase-2-conceptless-error.cpp": [[701, "toolcase-2-conceptless-error-cpp"]], "toolcase-3-concept-integral.cpp": [[702, "toolcase-3-concept-integral-cpp"]], "Concepts: Links": [[703, "concepts-links"]], "Writing Your Own Concepts": [[704, "writing-your-own-concepts"]], "Starting Point: Good Old Function": [[704, "starting-point-good-old-function"]], "Need Template": [[704, "need-template"]], "Error: Requirement Not Fulfilled": [[704, "error-requirement-not-fulfilled"]], "Concept: has_size": [[704, "concept-has-size"]], "Concept: index_returns_double": [[704, "concept-index-returns-double"]], "example-1-good-old-func.cpp": [[705, "example-1-good-old-func-cpp"]], "example-2-need-template.cpp": [[706, "example-2-need-template-cpp"]], "example-4-concept-has-size.cpp": [[707, "example-4-concept-has-size-cpp"]], "example-5-concept-index-ret-double.cpp": [[708, "example-5-concept-index-ret-double-cpp"]], "Coroutines": [[709, "coroutines"]], "Coroutines: An Overview": [[710, "coroutines-an-overview"]], "Foreword": [[710, "foreword"]], "Prototypical Introductory Exampe: Fibonacci Numbers": [[710, "prototypical-introductory-exampe-fibonacci-numbers"]], "Step By Step: Simplest": [[710, "step-by-step-simplest"]], "Simplest: Incremental Fixing And Explaining": [[710, "simplest-incremental-fixing-and-explaining"]], "Driving Coroutines: Coroutine Anatomy": [[710, "driving-coroutines-coroutine-anatomy"]], "Driving Coroutines: Resuming": [[710, "driving-coroutines-resuming"]], "Suspension: Returning Control To Caller (co_yield)": [[710, "suspension-returning-control-to-caller-co-yield"]], "Playing Around: Iteration, Mimicking Python Iterator Protocol": [[710, "playing-around-iteration-mimicking-python-iterator-protocol"]], "Playing Around: Iteration, Range-Based-For": [[710, "playing-around-iteration-range-based-for"]], "Playing Around: Generic Generator": [[710, "playing-around-generic-generator"]], "Playing Around: Fibonacci Numbers, Generator Version": [[710, "playing-around-fibonacci-numbers-generator-version"]], "Pitfalls: Coroutines Are Stateful!": [[710, "pitfalls-coroutines-are-stateful"]], "fibo-generator.cpp": [[711, "fibo-generator-cpp"]], "fibonacci.cpp": [[712, "fibonacci-cpp"]], "generator.h": [[713, "generator-h"]], "generator-hello.cpp": [[714, "generator-hello-cpp"]], "simplest.cpp": [[715, "simplest-cpp"]], "suspend.cpp": [[716, "suspend-cpp"]], "suspend-iter.cpp": [[717, "suspend-iter-cpp"]], "suspend-next.cpp": [[718, "suspend-next-cpp"]], "= default": [[719, "default"]], "Problem: Default Constructor Not Automatically Generated": [[719, "problem-default-constructor-not-automatically-generated"]], "C++ < 11 Solution: Write Default Constructor \ud83d\ude20 \ud83d\udc4e": [[719, "c-11-solution-write-default-constructor-angry-thumbsdown"]], "C++ >= 11 Solution: = default": [[719, "c-11-solution-default"]], "= delete": [[720, "delete"]], "Problem: Copy Is Not Always Wanted": [[720, "problem-copy-is-not-always-wanted"]], "C++ < 11 Solution: Make Copy private": [[720, "c-11-solution-make-copy-private"]], "C++ >= 11 Solution: = delete Copy": [[720, "c-11-solution-delete-copy"]], "final": [[721, "final"]], "Architectural Decisions": [[721, "architectural-decisions"]], "Enter final: Architectural Cleanliness By Compiler": [[721, "enter-final-architectural-cleanliness-by-compiler"]], "New Language Features": [[722, "new-language-features"]], "Lambda": [[723, "lambda"], [724, "lambda"]], "Lambda To The Rescue": [[724, "lambda-to-the-rescue"]], "Excursion: Python Closures": [[724, "excursion-python-closures"]], "Same In C++: Capturing": [[724, "same-in-c-capturing"]], "So What Is That? (Answer: A Functor)": [[724, "so-what-is-that-answer-a-functor"]], "Capturing By Reference \u27f6 Careful!": [[724, "capturing-by-reference-longrightarrow-careful"]], "More About Capturing": [[724, "more-about-capturing"]], "Lambda: More Capturing": [[725, "lambda-more-capturing"]], "More Capture Syntax": [[725, "more-capture-syntax"]], "Capturing Explicitly, By Copy": [[725, "capturing-explicitly-by-copy"]], "Capturing Explicitly, By Reference": [[725, "capturing-explicitly-by-reference"]], "Mixed Explicit Capture": [[725, "mixed-explicit-capture"]], "Define Variables In Capture": [[725, "define-variables-in-capture"]], "Capturing All By Reference": [[725, "capturing-all-by-reference"]], "Capturing All By Copy": [[725, "capturing-all-by-copy"]], "Capturing All By Copy, Except Some By Reference": [[725, "capturing-all-by-copy-except-some-by-reference"]], "Capturing this": [[725, "capturing-this"]], "Live Hacking: Handwritten Functors (Too Much Boilerplate)": [[726, "live-hacking-handwritten-functors-too-much-boilerplate"]], "Original Lambda Demo Proggy": [[726, "original-lambda-demo-proggy"]], "Morph Lambda Into Handwritten Functor Class": [[726, "morph-lambda-into-handwritten-functor-class"]], "Live Hacking: Handwritten Functors, And Capturing By Reference (Pitfalls)": [[727, "live-hacking-handwritten-functors-and-capturing-by-reference-pitfalls"]], "Original, Handwritten Functor (By Copy)": [[727, "original-handwritten-functor-by-copy"]], "Possible Pitfall: Capturing A Reference": [[727, "possible-pitfall-capturing-a-reference"]], "Lifetime Of Temporary, Made Explicit": [[727, "lifetime-of-temporary-made-explicit"]], "Lifetime Of Temporary, Made Explicit \u27f6 \ud83d\ude91": [[727, "lifetime-of-temporary-made-explicit-longrightarrow-ambulance"]], "override": [[729, "override"]], "Correct Overriding \u2026": [[729, "correct-overriding"]], "\u2026 Is Very Hard": [[729, "is-very-hard"]], "More Problems Arise": [[729, "more-problems-arise"]], "Solution: override": [[729, "solution-override"]], "Range Based for Loops: Introduction": [[730, "range-based-for-loops-introduction"]], "Enter Range Based for Loops": [[730, "enter-range-based-for-loops"]], "Range Based for Loops, And auto": [[730, "range-based-for-loops-and-auto"]], "Case Study: std::map Iteration": [[730, "case-study-std-map-iteration"]], "Case Study: Range Based for On std::map": [[731, "case-study-range-based-for-on-std-map"]], "Gool Ol\u2019 Days: Iteration In C++ < 11": [[731, "gool-ol-days-iteration-in-c-11"]], "Basic C++11 Iteration: Range Based For, auto, And Initialization": [[731, "basic-c-11-iteration-range-based-for-auto-and-initialization"]], "Variation: Preventing Accidental Copy Using const auto&": [[731, "variation-preventing-accidental-copy-using-const-auto"]], "Pythonicity: Tuple Unpacking, err Structured Binding": [[731, "pythonicity-tuple-unpacking-err-structured-binding"]], "Structured Binding - Preventing Accidental Copy": [[731, "structured-binding-preventing-accidental-copy"]], "Ranges And Views: Good Or Bad?": [[732, "ranges-and-views-good-or-bad"]], "Dangling Iterator Protection": [[732, "dangling-iterator-protection"]], "Performance: views::drop Is Easy": [[732, "performance-views-drop-is-easy"]], "Performance: views::filter Is Not Easy": [[732, "performance-views-filter-is-not-easy"]], "Constraints: How To Read?": [[732, "constraints-how-to-read"]], "And drop()? std::vector Is Easy": [[732, "and-drop-std-vector-is-easy"]], "And drop()? std::list Is Not Easy": [[732, "and-drop-std-list-is-not-easy"]], "One Of Many Bugs, Introduced By .begin() Caching": [[732, "one-of-many-bugs-introduced-by-begin-caching"]], "Exceptions From Rules \u27f6 Dogmatic Don\u2019ts (Sigh, C++)": [[732, "exceptions-from-rules-longrightarrow-dogmatic-don-ts-sigh-c"]], "Ranges: Overview": [[734, "ranges-overview"]], "Ranges?": [[734, "ranges"]], "Containers And Views (Storage Behavior)": [[734, "containers-and-views-storage-behavior"]], "Pipe Syntax": [[734, "pipe-syntax"]], "Views As Parameters: Good Old Template": [[734, "views-as-parameters-good-old-template"]], "Views As Parameters: Abbreviated Function Template": [[734, "views-as-parameters-abbreviated-function-template"]], "Views As Parameters: Concepts": [[734, "views-as-parameters-concepts"]], "Available <ranges> Concepts": [[734, "available-ranges-concepts"]], "Ranges And Views: Links": [[735, "ranges-and-views-links"]], "Tuple Unpacking (Err, Structured Binding)": [[736, "tuple-unpacking-err-structured-binding"]], "Variations, Compatible Data Types": [[736, "variations-compatible-data-types"]], "struct: By Copy": [[736, "struct-by-copy"]], "struct: Reference": [[736, "struct-reference"]], "struct: By const Reference": [[736, "struct-by-const-reference"]], "std::tuple: By Copy": [[736, "std-tuple-by-copy"]], "std::tuple: By Reference": [[736, "std-tuple-by-reference"]], "std::tuple: By const Reference": [[736, "std-tuple-by-const-reference"]], "Arrays: By Copy": [[736, "arrays-by-copy"]], "Arrays: By Reference": [[736, "arrays-by-reference"]], "Arrays: By const Reference": [[736, "arrays-by-const-reference"]], "Smart Pointers: Closing Words": [[737, "smart-pointers-closing-words"]], "Shared Pointers: Closing Words": [[737, "shared-pointers-closing-words"]], "Smart Pointers (std::unique_ptr, std::shared_ptr)": [[738, "smart-pointers-std-unique-ptr-std-shared-ptr"]], "Why Smart Pointers?": [[739, "why-smart-pointers"]], "Recap: Constructors and Destructors": [[739, "recap-constructors-and-destructors"]], "(Trying To) Handwrite A Smart Pointer Class in C++ Before C++11": [[740, "trying-to-handwrite-a-smart-pointer-class-in-c-before-c-11"]], "Sensors To Manage": [[740, "sensors-to-manage"]], "Basic Resource Management, Operator Overloading": [[740, "basic-resource-management-operator-overloading"]], "Copy Constructor And Assignment Operator (And Default Ctor)": [[740, "copy-constructor-and-assignment-operator-and-default-ctor"]], "auto_ptr Style": [[740, "auto-ptr-style"]], "Explicit move() Method Maybe?": [[740, "explicit-move-method-maybe"]], "Stop!!!": [[740, "stop"]], "std::shared_ptr": [[741, "std-shared-ptr"]], "Spirit: Not Unique, But Shared (i.e. Reference Counted)": [[741, "spirit-not-unique-but-shared-i-e-reference-counted"]], "std::shared_ptr: Copy": [[741, "std-shared-ptr-copy"]], "std::shared_ptr vs. std::unique_ptr": [[741, "std-shared-ptr-vs-std-unique-ptr"]], "std::shared_ptr: Object Lifetime": [[741, "std-shared-ptr-object-lifetime"]], "std::shared_ptr: Juggling": [[741, "std-shared-ptr-juggling"]], "Demo: Basic Usage": [[741, "demo-basic-usage"]], "Demo: std::make_shared": [[741, "demo-std-make-shared"]], "Demo: Cyclic References": [[741, "demo-cyclic-references"]], "std::unique_ptr": [[742, "std-unique-ptr"]], "The Spirit Of std::unique_ptr": [[742, "the-spirit-of-std-unique-ptr"]], "Basic Usage: Prevent Leaks": [[742, "basic-usage-prevent-leaks"]], "Eliminate Chance Of Leakage \u27f6 Ownership": [[742, "eliminate-chance-of-leakage-longrightarrow-ownership"]], "Saving Keystrokes: std::make_unique<>()": [[742, "saving-keystrokes-std-make-unique"]], "Explicitly Acknowledging Ownership Transfer: std::move()": [[742, "explicitly-acknowledging-ownership-transfer-std-move"]], "Compiler Can Prove: Implicit Ownership Transfer": [[742, "compiler-can-prove-implicit-ownership-transfer"]], "How To Write Code That Can Take Ownership?": [[742, "how-to-write-code-that-can-take-ownership"]], "Manipulating Pointer Content": [[742, "manipulating-pointer-content"]], "std::weak_ptr": [[743, "std-weak-ptr"]], "Spirit: Borrowed Reference That Could Be Invalid": [[743, "spirit-borrowed-reference-that-could-be-invalid"]], "A Real-Life Example": [[743, "a-real-life-example"]], "Perfect Forwarding": [[744, "perfect-forwarding"]], "Universal References? Forwarding References? REALLY?": [[744, "universal-references-forwarding-references-really"]], "Universal Reference? Binds To Lvalues?": [[744, "universal-reference-binds-to-lvalues"]], "Enter Forwarding": [[744, "enter-forwarding"]], "Exercise: Dual insert() Method In Exercise: Bag Of Items, By Shared Reference": [[744, "exercise-dual-insert-method-in-trainings-material-soup-cxx11-exercises-bag-shared"]], "std::bind": [[745, "std-bind"]], "Why? What\u2019s The Problem?": [[745, "why-what-s-the-problem"]], "Sample Program: All Done Manually": [[745, "sample-program-all-done-manually"]], "Sideway: std::transform": [[745, "sideway-std-transform"]], "Sample Program: Using std::transform": [[745, "sample-program-using-std-transform"]], "std::bind: Null Adaptation, Pointlessly": [[745, "std-bind-null-adaptation-pointlessly"]], "std::bind: Adapting One Parameter To No Parameter": [[745, "std-bind-adapting-one-parameter-to-no-parameter"]], "std::bind: Hardcoding Parameters": [[745, "std-bind-hardcoding-parameters"]], "std::bind: Swapping Parameters \u27f6 std::placeholders": [[745, "std-bind-swapping-parameters-longrightarrow-std-placeholders"]], "std::bind: Hardcoding Only First Parameter \u27f6 std::placeholders": [[745, "std-bind-hardcoding-only-first-parameter-longrightarrow-std-placeholders"]], "std::bind: Functor (Is-A Callable)": [[745, "std-bind-functor-is-a-callable"]], "std::bind: Lambda (Is-A Callable)": [[745, "std-bind-lambda-is-a-callable"]], "Sample Program: Using std::transform With std::bind": [[745, "sample-program-using-std-transform-with-std-bind"]], "Summary": [[745, "summary"], [825, "summary"], [825, "id1"], [1144, "summary"], [1146, "summary"]], "std::function": [[746, "std-function"]], "Classic Polymorphism": [[746, "classic-polymorphism"]], "Classic Polymorphism: Upsides": [[746, "classic-polymorphism-upsides"]], "Classic Polymorphism: Technical Downsides": [[746, "classic-polymorphism-technical-downsides"]], "Classic Polymorphism: More Downsides": [[746, "classic-polymorphism-more-downsides"]], "std::function to the Rescue (1)": [[746, "std-function-to-the-rescue-1"]], "std::function to the Rescue (2)": [[746, "std-function-to-the-rescue-2"]], "std::function: Last Words": [[746, "std-function-last-words"]], "Threads Introduction": [[748, "threads-introduction"]], "Operating System Primitives": [[748, "operating-system-primitives"]], "There Be Dragons": [[748, "there-be-dragons"]], "Threads in C++": [[749, "threads-in-c"]], "Creating Threads is Far Too Easy": [[749, "creating-threads-is-far-too-easy"]], "Joinable vs. Detached": [[749, "joinable-vs-detached"]], "Cornercases in Thread Lifetime": [[749, "cornercases-in-thread-lifetime"]], "Race Conditions": [[750, "race-conditions"], [823, "race-conditions"]], "std::atomic": [[751, "std-atomic"]], "Atomic Instructions (1)": [[751, "atomic-instructions-1"]], "Atomic Instructions (2)": [[751, "atomic-instructions-2"]], "std::mutex And Friends": [[752, "std-mutex-and-friends"]], "std::mutex": [[752, "std-mutex"]], "std::recursive_mutex": [[752, "std-recursive-mutex"]], "std::timed_mutex": [[752, "std-timed-mutex"]], "std::recursive_timed_mutex": [[752, "std-recursive-timed-mutex"]], "Scoped Locking": [[753, "scoped-locking"]], "Explicit Unlocking Considered Dangerous": [[753, "explicit-unlocking-considered-dangerous"]], "RAII - Resource Acquisition Is Initialization": [[753, "raii-resource-acquisition-is-initialization"]], "Simplest: std::lock_guard": [[753, "simplest-std-lock-guard"]], "std::condition_variable (Live Hacking Multithreaded Queue)": [[754, "std-condition-variable-live-hacking-multithreaded-queue"]], "Overview: Operations": [[754, "overview-operations"]], "Communication, Polling: Thread-Safe Queue": [[754, "communication-polling-thread-safe-queue"]], "Anti-Polling: Thread-Safe Queue, And POSIX Condition Variables": [[754, "anti-polling-thread-safe-queue-and-posix-condition-variables"]], "Discussion: Signalling And Waiting, Predicates: Separation Of Concerns": [[754, "discussion-signalling-and-waiting-predicates-separation-of-concerns"]], "Thread-Safe Queue, And C++ Condition Variables": [[754, "thread-safe-queue-and-c-condition-variables"]], "std::promise and std::future (And Some std::chrono) (Some Live Hacking)": [[756, "std-promise-and-std-future-and-some-std-chrono-some-live-hacking"]], "Overview: std::promise": [[756, "overview-std-promise"]], "Overview: std::future": [[756, "overview-std-future"]], "Utterly Wrong: Waiting For Something To Become Ready": [[756, "utterly-wrong-waiting-for-something-to-become-ready"]], "Sideways: std::chrono, And Literals": [[756, "sideways-std-chrono-and-literals"]], "Minimal Fix: Use std::mutex": [[756, "minimal-fix-use-std-mutex"]], "Anti-Clumsiness: Scoped Locking": [[756, "anti-clumsiness-scoped-locking"]], "Pro-Readability: Encapsulate": [[756, "pro-readability-encapsulate"]], "Atomics On Structures?": [[756, "atomics-on-structures"]], "Anti-Polling: Semaphore": [[756, "anti-polling-semaphore"]], "Getting To The Point: std::promise And std::future": [[756, "getting-to-the-point-std-promise-and-std-future"]], "And Exceptions?": [[756, "and-exceptions"]], "std::chrono": [[757, "std-chrono"], [757, "id1"]], "Clock Domains": [[757, "clock-domains"]], "Measuring Time (1)": [[757, "measuring-time-1"]], "Measuring Time (2)": [[757, "measuring-time-2"]], "Sleeping, and Literals": [[757, "sleeping-and-literals"]], "New-Style Union: std::variant": [[758, "new-style-union-std-variant"]], "Problems With C Unions, And C++ Types": [[758, "problems-with-c-unions-and-c-types"]], "Instantiation, Default Initialization, Member Access": [[758, "instantiation-default-initialization-member-access"]], "Non-Default Initialization": [[758, "non-default-initialization"]], "Accessing Non-Current Member: std::bad_variant_access": [[758, "accessing-non-current-member-std-bad-variant-access"]], "Non-Throwing Accessor: std::get_if<>": [[758, "non-throwing-accessor-std-get-if"]], "And Non-Fundamental Types?": [[758, "and-non-fundamental-types"]], "CRTP": [[760, "crtp"], [765, "crtp"]], "std::vector<>: Allocators (Very Incomplete)": [[761, "std-vector-allocators-very-incomplete"]], "Classic Virtual": [[762, "classic-virtual"]], "Sensor Definitions": [[762, "sensor-definitions"], [764, "sensor-definitions"], [766, "sensor-definitions"], [768, "sensor-definitions"]], "Virtual Access": [[762, "virtual-access"], [764, "virtual-access"], [766, "virtual-access"], [767, "virtual-access"], [768, "virtual-access"], [769, "virtual-access"]], "Average Across Many": [[762, "average-across-many"], [764, "average-across-many"], [766, "average-across-many"], [768, "average-across-many"]], "Embedded Problems? Code Bloat? Type Erasure? Solutions?": [[763, "embedded-problems-code-bloat-type-erasure-solutions"]], "virtual Is Bad. Is virtual Bad? (Type Erasure)": [[763, "virtual-is-bad-is-virtual-bad-type-erasure"]], "And CRTP?": [[763, "and-crtp"]], "std::string_view": [[763, "std-string-view"]], "Non-Virtual, But Related": [[764, "non-virtual-but-related"]], "Type Erasure (Static vs. Dynamic Polymorphism), CRTP": [[765, "type-erasure-static-vs-dynamic-polymorphism-crtp"]], "Unrelated (Duck-Typed)": [[766, "unrelated-duck-typed"]], "std::variant (Automatic Virtual Dispatch Using Template Method)": [[767, "std-variant-automatic-virtual-dispatch-using-template-method"]], "std::variant (Manual Virtual Dispatch, Using if)": [[768, "std-variant-manual-virtual-dispatch-using-if"]], "std::variant (Manual Virtual Dispatch, Using std::visit)": [[769, "std-variant-manual-virtual-dispatch-using-std-visit"]], "Why Replace virtual?": [[770, "why-replace-virtual"]], "Drafts": [[771, "drafts"], [919, "drafts"]], "Exercise: Bag Of Items, By Copy": [[772, "exercise-bag-of-items-by-copy"]], "Step 1: Insert, Find": [[772, "step-1-insert-find"]], "Step 2: Remove": [[772, "step-2-remove"]], "Exercise: Bag Of Items, By Shared Reference": [[773, "exercise-bag-of-items-by-shared-reference"]], "Step 1: Transform into std::shared_ptr": [[773, "step-1-transform-into-std-shared-ptr"]], "Step 2: Accidental Move-Insert?": [[773, "step-2-accidental-move-insert"]], "Step 3: Move-Insert, And std::weak_ptr": [[773, "step-3-move-insert-and-std-weak-ptr"]], "Exercise: Bag Of Items, By Unique Reference": [[774, "exercise-bag-of-items-by-unique-reference"]], "std::filesystem": [[776, "std-filesystem"]], "Paths: Composition, Comparison": [[776, "paths-composition-comparison"]], "Absolute and Relative Paths": [[776, "absolute-and-relative-paths"], [909, "absolute-and-relative-paths"]], "Path Component Access": [[776, "path-component-access"]], "Iterating Over Path Components": [[776, "iterating-over-path-components"]], "Current Working Directory": [[776, "current-working-directory"], [888, "current-working-directory"]], "Directory Creation: std::filesystem::create_directory()": [[776, "directory-creation-std-filesystem-create-directory"]], "Directory Creation: std::filesystem::create_directories()": [[776, "directory-creation-std-filesystem-create-directories"]], "Directory Entry Classification: std::filesystem::is_xxx()": [[776, "directory-entry-classification-std-filesystem-is-xxx"]], "Directory Entries: Basics": [[776, "directory-entries-basics"]], "Directory Entries: std::filesystem::directory_entry": [[776, "directory-entries-std-filesystem-directory-entry"]], "Iterating Over Directory Entries": [[776, "iterating-over-directory-entries"]], "Recursive Directory Iteration": [[776, "recursive-directory-iteration"]], "The New C++ (11-\u2026)": [[777, "the-new-c-11"]], "Generated Topic Graph": [[778, "generated-topic-graph"]], "Modern Character Devices (Screenplay)": [[780, "modern-character-devices-screenplay"]], "Modern Character Devices (Slideshow)": [[781, "modern-character-devices-slideshow"]], "Source": [[781, null], [784, null], [786, null], [789, null], [791, null], [794, null], [803, null], [805, null], [815, null], [817, null], [828, null], [833, null]], "Character Devices: Problems": [[781, "character-devices-problems"]], "Dynamic Device Numbers": [[781, "dynamic-device-numbers"]], "Device Classes": [[781, "device-classes"]], "Devices": [[781, "devices"]], "Modern Character Devices": [[782, "modern-character-devices"]], "File Operations on Character Devices (Screenplay)": [[783, "file-operations-on-character-devices-screenplay"]], "Hooks Necessary": [[783, "hooks-necessary"]], "Implement open(), read(), write()": [[783, "implement-open-read-write"]], "ioctl()": [[783, "ioctl"]], "File Operations on Character Devices (Slideshow)": [[784, "file-operations-on-character-devices-slideshow"]], "File Operations: Interface Definition (\u201cvtable\u201d) (1)": [[784, "file-operations-interface-definition-vtable-1"]], "Available Methods": [[784, "available-methods"]], "open(): Userspace": [[784, "open-userspace"]], "open(): Kernelspace": [[784, "open-kernelspace"]], "ioctl(): Userspace": [[784, "ioctl-userspace"]], "ioctl(): Kernelspace": [[784, "ioctl-kernelspace"]], "ioctl(): Requests": [[784, "ioctl-requests"]], "_IO*() Macros": [[784, "io-macros"]], "_IO*() Macros: Usage": [[784, "io-macros-usage"]], "File Operations on Character Devices": [[785, "file-operations-on-character-devices"]], "Coding: First Functionality (Slideshow)": [[786, "coding-first-functionality-slideshow"]], "Implement Event List": [[786, "implement-event-list"]], "Implement ioctl Request to Add an Event": [[786, "implement-ioctl-request-to-add-an-event"]], "Implement a Userspace Test Program": [[786, "implement-a-userspace-test-program"]], "Coding: First Functionality": [[787, "coding-first-functionality"]], "Character Device Basics (Livehacking Screenplay)": [[788, "character-device-basics-livehacking-screenplay"]], "Major and Minor Numbers": [[788, "major-and-minor-numbers"]], "Character Device": [[788, "character-device"]], "Character Device Basics (Slideshow)": [[789, "character-device-basics-slideshow"]], "Major and Minor Numbers: User\u2019s View": [[789, "major-and-minor-numbers-user-s-view"]], "Major and Minor Numbers: Kernel Space": [[789, "major-and-minor-numbers-kernel-space"]], "History: Hardcoded Device Numbers (1)": [[789, "history-hardcoded-device-numbers-1"]], "History: Hardcoded Device Numbers (2)": [[789, "history-hardcoded-device-numbers-2"]], "Character Device (1)": [[789, "character-device-1"]], "Character Device (2)": [[789, "character-device-2"]], "And User Space?": [[789, "and-user-space"]], "Character Device Basics": [[790, "character-device-basics"]], "Coding: Multiple Devices (Slideshow)": [[791, "coding-multiple-devices-slideshow"]], "Instantiate Multiple Devices": [[791, "instantiate-multiple-devices"]], "Coding: Multiple Devices": [[792, "coding-multiple-devices"]], "Coding: Refactoring (Screenplay)": [[793, "coding-refactoring-screenplay"]], "Build Module From Multiple Files": [[793, "build-module-from-multiple-files"]], "Per-Device Structure": [[793, "per-device-structure"]], "Want My Hair Pretty": [[793, "want-my-hair-pretty"]], "Makefile: -Wswitch-enum": [[793, "makefile-wswitch-enum"]], "Coding: Refactoring (Slideshow)": [[794, "coding-refactoring-slideshow"]], "What\u2019s Bad?": [[794, "what-s-bad"]], "Coding: Refactoring": [[795, "coding-refactoring"]], "DMA (Slideshow)": [[796, "dma-slideshow"]], "Address Types": [[796, "address-types"]], "Physical Memory Allocation": [[796, "physical-memory-allocation"]], "DMA Mappings: Overview": [[796, "dma-mappings-overview"]], "Consistent DMA Mappings": [[796, "consistent-dma-mappings"]], "Streaming Mappings: Direction": [[796, "streaming-mappings-direction"]], "Streaming Mappings: To Virtual Address": [[796, "streaming-mappings-to-virtual-address"]], "Streaming Mappings: To Page": [[796, "streaming-mappings-to-page"]], "Streaming Mappings: Scatterlists (1)": [[796, "streaming-mappings-scatterlists-1"]], "Streaming Mappings: Scatterlists (2)": [[796, "streaming-mappings-scatterlists-2"]], "Streaming Mappings: Syncing": [[796, "streaming-mappings-syncing"]], "DMA": [[797, "dma"]], "Building a Fedora Kernel (Screenplay)": [[798, "building-a-fedora-kernel-screenplay"]], "Why Build the Entire Kernel When I Only Want to Build a Module": [[798, "why-build-the-entire-kernel-when-i-only-want-to-build-a-module"]], "Building from \u201cExploded Git Tree\u201d": [[798, "building-from-exploded-git-tree"]], "Building from the RPM Source": [[798, "building-from-the-rpm-source"]], "Fedora: Building the Kernel": [[799, "fedora-building-the-kernel"]], "Fedora: Building External Kernel Modules (Screenplay)": [[800, "fedora-building-external-kernel-modules-screenplay"]], "Prerequisite: Build Entire Kernel": [[800, "prerequisite-build-entire-kernel"]], "Build Modules": [[800, "build-modules"]], "Install Modules": [[800, "install-modules"]], "Fedora: Building External Kernel Modules": [[801, "fedora-building-external-kernel-modules"]], "Module Loading, Hello World (Slideshow)": [[803, "module-loading-hello-world-slideshow"]], "Kernel Driver Anatomy": [[803, "kernel-driver-anatomy"]], "Built-In vs. Loadable Module": [[803, "built-in-vs-loadable-module"]], "Minimum Module Source": [[803, "minimum-module-source"]], "Gotchas: init() and exit()": [[803, "gotchas-init-and-exit"]], "Module Build": [[803, "module-build"]], "Minimum Makefile, Building": [[803, "minimum-makefile-building"]], "Modules: Load/Unload Commands": [[803, "modules-load-unload-commands"]], "Modules: Dependency (and other) Databases": [[803, "modules-dependency-and-other-databases"]], "Module Loading, Hello World": [[804, "module-loading-hello-world"]], "Coding: Raspi GPIO Interrupts (Slideshow)": [[805, "coding-raspi-gpio-interrupts-slideshow"]], "Move to Raspberry Pi, Cross Compiling": [[805, "move-to-raspberry-pi-cross-compiling"]], "Cross Compilation": [[805, "cross-compilation"]], "Cross Compilation Sucks": [[805, "cross-compilation-sucks"]], "Short (Legacy) GPIO API Introduction": [[805, "short-legacy-gpio-api-introduction"]], "Implement New Event Type: Interrupt": [[805, "implement-new-event-type-interrupt"]], "New ioctl: MY_ACTIVATE_GPIO": [[805, "new-ioctl-my-activate-gpio"]], "Interlude: _IO*() Macros": [[805, "interlude-io-macros"]], "Request GPIO": [[805, "request-gpio"]], "Request Interrupt": [[805, "request-interrupt"]], "Coding: Raspi GPIO Interrupts": [[806, "coding-raspi-gpio-interrupts"]], "Interrupts (Slideshow)": [[807, "interrupts-slideshow"]], "Interrupt Facts": [[807, "interrupt-facts"]], "Interrupt Service Routine": [[807, "interrupt-service-routine"]], "Requesting (and Releasing) Interrupts (1)": [[807, "requesting-and-releasing-interrupts-1"]], "IO Memory (Slideshow)": [[809, "io-memory-slideshow"]], "I/O Memory": [[809, "i-o-memory"]], "I/O Memory: Reservation": [[809, "i-o-memory-reservation"]], "Making I/O Memory Accessible": [[809, "making-i-o-memory-accessible"]], "Accessing I/O Memory": [[809, "accessing-i-o-memory"]], "IO Memory": [[810, "io-memory"]], "Dynamic Memory: kmalloc() (Slideshow)": [[811, "dynamic-memory-kmalloc-slideshow"]], "Dynamic Memory: kmalloc()": [[811, "dynamic-memory-kmalloc"], [812, "dynamic-memory-kmalloc"]], "Dynamic Memory: Flags": [[811, "dynamic-memory-flags"]], "Doubly Linked Lists (Slideshow)": [[813, "doubly-linked-lists-slideshow"]], "Big Picture": [[813, "big-picture"]], "List Head": [[813, "list-head"]], "Insert a Node": [[813, "insert-a-node"]], "Iteration, and Getting a Node\u2019s Container": [[813, "iteration-and-getting-a-node-s-container"]], "Emptying a List": [[813, "emptying-a-list"]], "Doubly Linked Lists": [[814, "doubly-linked-lists"]], "Coding: Fix Race Condition (Mutex) (Slideshow)": [[815, "coding-fix-race-condition-mutex-slideshow"]], "What Do We Have?": [[815, "what-do-we-have"]], "Consequences of Not Protecting": [[815, "consequences-of-not-protecting"]], "Protect Event List": [[815, "protect-event-list"]], "Protect Device List": [[815, "protect-device-list"]], "Coding: Fix Race Condition (Mutex)": [[816, "coding-fix-race-condition-mutex"]], "Mutex (and RT Mutex) (Slideshow)": [[817, "mutex-and-rt-mutex-slideshow"]], "Locking in the Kernel": [[817, "locking-in-the-kernel"]], "Mutual Exclusion: Mutex": [[817, "mutual-exclusion-mutex"]], "Mutex: Locking (1)": [[817, "mutex-locking-1"]], "Mutex: Locking (2)": [[817, "mutex-locking-2"]], "Mutex: Releasing": [[817, "mutex-releasing"]], "Realtime Mutex": [[817, "realtime-mutex"]], "Mutex (and RT Mutex)": [[818, "mutex-and-rt-mutex"]], "Network Devices (Slideshow)": [[819, "network-devices-slideshow"]], "Module Initialization: Device Allocation": [[819, "module-initialization-device-allocation"]], "Module Initialization: Device Registration": [[819, "module-initialization-device-registration"]], "Device Methods": [[819, "device-methods"]], "Kernel Networking Layer Utilities": [[819, "kernel-networking-layer-utilities"]], "Network Devices": [[820, "network-devices"]], "PCI (Slideshow)": [[821, "pci-slideshow"]], "First and Foremost": [[821, "first-and-foremost"]], "PCI Driver Methods": [[821, "pci-driver-methods"]], "PCI Driver Structure, and the init() Method": [[821, "pci-driver-structure-and-the-init-method"]], "PCI Device Structure, and the probe() Method": [[821, "pci-device-structure-and-the-probe-method"]], "The probe() Method: Boilerplate": [[821, "the-probe-method-boilerplate"]], "The probe() Method: Interrupt": [[821, "the-probe-method-interrupt"]], "The probe() Method: PCI Resources (BARs)": [[821, "the-probe-method-pci-resources-bars"]], "DMA Support Routines": [[821, "dma-support-routines"]], "PCI": [[822, "pci"]], "Process vs.Atomic Context (Slideshow)": [[823, "process-vs-atomic-context-slideshow"]], "Process Context": [[823, "process-context"]], "Atomic Context": [[823, "atomic-context"]], "Atomic vs. Process Context": [[823, "atomic-vs-process-context"]], "\u201cSleep While Atomic\u201d Debugging": [[823, "sleep-while-atomic-debugging"]], "Process vs.Atomic Context": [[824, "process-vs-atomic-context"]], "Rasperry Pi: Kernel Build": [[825, "rasperry-pi-kernel-build"]], "Cross Toolchain on Host": [[825, "cross-toolchain-on-host"]], "Architecture Name - What\u2019s That?": [[825, "architecture-name-what-s-that"]], "Building a Toolchain with Gentoo\u2019s crossdev": [[825, "building-a-toolchain-with-gentoo-s-crossdev"]], "Other Toolchains": [[825, "other-toolchains"]], "Kernel Source": [[825, "kernel-source"]], "Kernel Compilation": [[825, "kernel-compilation"]], "Parameters for the Build": [[825, "parameters-for-the-build"]], "Preparing the Kernel .config File": [[825, "preparing-the-kernel-config-file"]], "Building the Kernel Artifacts": [[825, "building-the-kernel-artifacts"]], "Packaging": [[825, "packaging"], [1078, "packaging"]], "Bootloader Artifacts": [[825, "bootloader-artifacts"]], "Module Tree": [[825, "module-tree"]], "Deployment": [[825, "deployment"]], "Variation": [[825, "variation"]], "Raspberry Pi: Building the Kernel": [[826, "raspberry-pi-building-the-kernel"]], "Todo jjj": [[826, "todo-jjj"]], "Sample Code Maintenance": [[827, "sample-code-maintenance"]], "Coding: Fix Sleep While Atomic (Slideshow)": [[828, "coding-fix-sleep-while-atomic-slideshow"]], "Simple Spinlock Usage: spin_lock()": [[828, "simple-spinlock-usage-spin-lock"]], "Discuss Call Chain, IRQ State": [[828, "discuss-call-chain-irq-state"]], "Enter spin_lock_irqsave(), spin_unlock_irqrestore()": [[828, "enter-spin-lock-irqsave-spin-unlock-irqrestore"]], "Ah, kmalloc()": [[828, "ah-kmalloc"]], "Coding: Fix Sleep While Atomic": [[829, "coding-fix-sleep-while-atomic"]], "Spinlock (vs. Mutex) (Slideshow)": [[830, "spinlock-vs-mutex-slideshow"]], "Mutual Exclusion: Spinlock": [[830, "mutual-exclusion-spinlock"]], "Spinlock Initialization": [[830, "spinlock-initialization"]], "Simple Lock/Unlock": [[830, "simple-lock-unlock"]], "Simple is not Bulletproof: Interrupt State": [[830, "simple-is-not-bulletproof-interrupt-state"]], "Mutual Exclusion: Conclusion": [[830, "mutual-exclusion-conclusion"]], "Spinlock (vs. Mutex)": [[831, "spinlock-vs-mutex"]], "dup(), fork(), and Reference Counting (Stub)": [[832, "dup-fork-and-reference-counting-stub"]], "Coding: Timed Event (Slideshow)": [[833, "coding-timed-event-slideshow"]], "Per-Event Timestamp": [[833, "per-event-timestamp"]], "Discussion: Deferred Events": [[833, "discussion-deferred-events"]], "Add Timer": [[833, "add-timer"]], "Gotcha: Cleanup Running Timer": [[833, "gotcha-cleanup-running-timer"]], "More Gotchas": [[833, "more-gotchas"]], "Coding: Timed Event": [[834, "coding-timed-event"]], "Timer Management (Slideshow)": [[835, "timer-management-slideshow"]], "Original Timer API": [[835, "original-timer-api"]], "jiffies": [[835, "jiffies"]], "\u201cTimer Wheel\u201d Methods": [[835, "timer-wheel-methods"]], "Better Documentation": [[835, "better-documentation"]], "Timer Management": [[836, "timer-management"]], "To Do List": [[837, "to-do-list"]], "Accessing Userspace Memory (Screenplay)": [[838, "accessing-userspace-memory-screenplay"]], "New ioctl: GET_ONE_EVENT": [[838, "new-ioctl-get-one-event"]], "Getting One Event": [[838, "getting-one-event"]], "copy_to_user()": [[838, "copy-to-user"]], "Userspace Test Program": [[838, "userspace-test-program"]], "Accessing Userspace Memory (Slideshow)": [[839, "accessing-userspace-memory-slideshow"]], "Address Spaces": [[839, "address-spaces"]], "Copying To and From Userspace": [[839, "copying-to-and-from-userspace"]], "Accessing Userspace Memory": [[840, "accessing-userspace-memory"]], "Waiting for Something (Screenplay)": [[841, "waiting-for-something-screenplay"]], "read() Not Implemented": [[841, "read-not-implemented"]], "Implementing read() Naively": [[841, "implementing-read-naively"]], "Discussion: What If Nothing\u2019s There?": [[841, "discussion-what-if-nothing-s-there"]], "Implementing O_NONBLOCK": [[841, "implementing-o-nonblock"]], "Waiting for Something (Slideshow)": [[842, "waiting-for-something-slideshow"]], "Waiting for Something": [[842, "waiting-for-something"], [843, "waiting-for-something"]], "Wait Queues: Initializing": [[842, "wait-queues-initializing"]], "Wait Queue: Waiting": [[842, "wait-queue-waiting"]], "Wait Queue: Waking": [[842, "wait-queue-waking"]], "Workqueue (Screenplay)": [[844, "workqueue-screenplay"]], "Add Workqueue": [[844, "add-workqueue"]], "Submit/Defer Work From Atomic Context": [[844, "submit-defer-work-from-atomic-context"]], "Cleanup (Why We Did This, After All)": [[844, "cleanup-why-we-did-this-after-all"]], "Finish": [[844, "finish"]], "Workqueue (Slideshow)": [[845, "workqueue-slideshow"]], "Workqueue: Motivation": [[845, "workqueue-motivation"]], "Creating/Destroying a Workqueue": [[845, "creating-destroying-a-workqueue"]], "What is Work?": [[845, "what-is-work"]], "Submitting Work": [[845, "submitting-work"]], "Workqueue": [[846, "workqueue"]], "Exercises: Archiving And Compression": [[847, "exercises-archiving-and-compression"]], "gzip": [[849, "gzip"]], "Compression Tools: Comparison": [[850, "compression-tools-comparison"]], "tar": [[851, "tar"]], "Creating And Viewing Archives": [[851, "creating-and-viewing-archives"]], "(De)Compression": [[851, "de-compression"]], "Etiquette": [[851, "etiquette"]], "Option Summary": [[851, "option-summary"]], "Being Creative With The Pipe": [[851, "being-creative-with-the-pipe"]], "Exam (ECE/SS2022/G1): Do A Lot With Files And Directories": [[852, "exam-ece-ss2022-g1-do-a-lot-with-files-and-directories"]], "Precondition: Logged-In To Remote/Exam Computer": [[852, "precondition-logged-in-to-remote-exam-computer"], [853, "precondition-logged-in-to-remote-exam-computer"]], "Create Exam Skeleton (5 Points)": [[852, "create-exam-skeleton-5-points"], [853, "create-exam-skeleton-5-points"]], "Create Credentials Files (10 Points)": [[852, "create-credentials-files-10-points"]], "Public Place (10 Points)": [[852, "public-place-10-points"], [853, "public-place-10-points"]], "Private Place (10 Points)": [[852, "private-place-10-points"], [853, "private-place-10-points"]], "Shared File in Public Place (10 Points)": [[852, "shared-file-in-public-place-10-points"], [853, "shared-file-in-public-place-10-points"]], "Make A Backup Of ~/exam-01 (15 Points)": [[852, "make-a-backup-of-exam-01-15-points"], [853, "make-a-backup-of-exam-01-15-points"]], "Exam (ECE/SS2022/G2): Do A Lot With Files And Directories": [[853, "exam-ece-ss2022-g2-do-a-lot-with-files-and-directories"]], "Create Business Cards (10 Points)": [[853, "create-business-cards-10-points"]], "Exercises/Exams: Linux Basics": [[854, "exercises-exams-linux-basics"]], "Linux Basics": [[855, "linux-basics"]], "Everything Is A File (Live Demo)": [[856, "everything-is-a-file-live-demo"]], "Simple is beautiful": [[856, "simple-is-beautiful"]], "Ok: a File is a File": [[856, "ok-a-file-is-a-file"]], "Is a Serial Interface (UART) a File?": [[856, "is-a-serial-interface-uart-a-file"]], "Pseudo Terminals": [[856, "pseudo-terminals"]], "Disks and Partitions": [[856, "disks-and-partitions"]], "/proc and /sys": [[856, "proc-and-sys"]], "Pseudo Devices": [[856, "pseudo-devices"]], "Environment (Variables)": [[857, "environment-variables"]], "Shell: Environment Variables, And Process Creation": [[857, "shell-environment-variables-and-process-creation"]], "Popular Environment Variables: HOME, SHELL, USER": [[857, "popular-environment-variables-home-shell-user"]], "Popular Environment Variables: PATH": [[857, "popular-environment-variables-path"]], "FH/Moodle Quiz: Linux Basics": [[858, "fh-moodle-quiz-linux-basics"]], "User Space, Kernel Space": [[858, "user-space-kernel-space"]], "Processes, Scheduling, and Virtual Memory": [[858, "processes-scheduling-and-virtual-memory"]], "Login? What Is That?": [[860, "login-what-is-that"]], "Authentication: Prompting The User For Login Data": [[860, "authentication-prompting-the-user-for-login-data"]], "Authentication: Verification Of Login Data": [[860, "authentication-verification-of-login-data"]], "And After Successful Authentication?": [[860, "and-after-successful-authentication"]], "Impersonation": [[860, "impersonation"]], "Logged In, Finally": [[860, "logged-in-finally"]], "User Space, Kernel Space?": [[861, "user-space-kernel-space"]], "User Space: Abstractions": [[861, "user-space-abstractions"]], "Kernel: Where The Heavy Stuff Is": [[861, "kernel-where-the-heavy-stuff-is"]], "Booting a Computer": [[861, "booting-a-computer"]], "Processes, Scheduling, Address Spaces": [[862, "processes-scheduling-address-spaces"]], "Problem: Owning the CPU?": [[862, "problem-owning-the-cpu"]], "Solution: Scheduling (Time Slices)": [[862, "solution-scheduling-time-slices"]], "Problem: Owning all Memory?": [[862, "problem-owning-all-memory"]], "Solution: Virtual Memory": [[862, "solution-virtual-memory"]], "Process Attributes: User ID (UID)": [[862, "process-attributes-user-id-uid"]], "Process Attributes: Groups": [[862, "process-attributes-groups"]], "Processes: More Attributes": [[862, "processes-more-attributes"]], "Process Hierarchy (Parent, Child Process)": [[863, "process-hierarchy-parent-child-process"]], "More Process Rules": [[863, "more-process-rules"]], "Typical Process Tree": [[863, "typical-process-tree"]], "Services, init": [[863, "services-init"]], "Windows Subsystem for Linux (WSL)": [[864, "windows-subsystem-for-linux-wsl"]], "Disclaimer!": [[864, null]], "More Links": [[864, "more-links"]], "My $0.02": [[864, "my-0-02"]], "WSL, Finally": [[864, "wsl-finally"]], "Exercises: IO-Redirection, Pipes": [[865, "exercises-io-redirection-pipes"]], "I/O Redirection": [[867, "i-o-redirection"]], "Standard I/O Streams": [[867, "standard-i-o-streams"]], "I/O Redirection Operators": [[867, "i-o-redirection-operators"]], "Example: Standard Output Redirection": [[867, "example-standard-output-redirection"]], "Example: Standard Input Redirection": [[867, "example-standard-input-redirection"]], "Example: Standard Error Redirection": [[867, "example-standard-error-redirection"]], "Example: Everything Redirection": [[867, "example-everything-redirection"]], "I/O Redirection: Swap stdout And stderr": [[868, "i-o-redirection-swap-stdout-and-stderr"]], "Basic Pipe Usage": [[868, "basic-pipe-usage"]], "Basic Pipe Usage: What The Shell Does": [[868, "basic-pipe-usage-what-the-shell-does"]], "And How Do I Count Lines On stderr?": [[868, "and-how-do-i-count-lines-on-stderr"]], "More Tricks": [[868, "more-tricks"]], "Pipes": [[869, "pipes"]], "Why Pipes?": [[869, "why-pipes"]], "Pipe Facts": [[869, "pipe-facts"]], "Pipe Examples": [[869, "pipe-examples"]], "More Pipe Examples": [[869, "more-pipe-examples"]], "Named Pipes": [[869, "named-pipes"]], "Permissions: Mode, User and Group Ownership": [[870, "permissions-mode-user-and-group-ownership"]], "Owner and Permissions": [[870, "owner-and-permissions"]], "A Simple Example": [[870, "a-simple-example"]], "Teacher\u2019s note: create that constellation (as root)": [[870, null]], "Permission Check: User": [[870, "permission-check-user"]], "Permission Check: Group": [[870, "permission-check-group"]], "Permission Check: Others": [[870, "permission-check-others"]], "Programs: Execute Permissions": [[870, "programs-execute-permissions"]], "Directory Permissions": [[870, "directory-permissions"]], "Permission Bits, octal": [[870, "permission-bits-octal"]], "Shell Commands: Tuning Permissions": [[870, "shell-commands-tuning-permissions"]], "Shell Commands: Changing User/Group Ownership": [[870, "shell-commands-changing-user-group-ownership"]], "Exercise: Determine Your User Credentials": [[871, "exercise-determine-your-user-credentials"]], "FH/Moodle Quiz: Permissions": [[872, "fh-moodle-quiz-permissions"], [873, "fh-moodle-quiz-permissions"]], "Exercises: File System Permissions": [[874, "exercises-file-system-permissions"]], "Exercise: Create Private Directory": [[875, "exercise-create-private-directory"]], "Question: Private Directory": [[876, "question-private-directory"]], "Exercise: Create Public Directory": [[877, "exercise-create-public-directory"]], "Question: Public Directory": [[878, "question-public-directory"]], "Exercise: Create Group-Shared File": [[879, "exercise-create-group-shared-file"]], "SetUID Programs: passwd, sudo, \u2026": [[881, "setuid-programs-passwd-sudo"]], "Problem: Change My Password": [[881, "problem-change-my-password"]], "Solution: Set-UID Bit": [[881, "solution-set-uid-bit"]], "Set-UID: How Does It Work?": [[881, "set-uid-how-does-it-work"]], "Command: chmod": [[881, "command-chmod"]], "Set-UID Is Not A Toy!": [[881, "set-uid-is-not-a-toy"]], "SetUID: Live Demo": [[882, "setuid-live-demo"]], "Real and Effective User ID": [[882, "real-and-effective-user-id"]], "Sample Program": [[882, "sample-program"]], "Set-UID jfasch?": [[882, "set-uid-jfasch"]], "Set-UID root? Danger!": [[882, "set-uid-root-danger"]], "Ugly Hack: Sticky Bit": [[883, "ugly-hack-sticky-bit"]], "Sticky Bit": [[883, "sticky-bit"]], "Default Permissions: umask": [[884, "default-permissions-umask"]], "Default Permissions - umask": [[884, "id1"]], "umask: How Does it Work?": [[884, "umask-how-does-it-work"]], "Shape (1)": [[885, "shape-1"]], "Shape (2)": [[885, "shape-2"]], "Options": [[885, "options"], [914, "options"]], "Help and Manual": [[885, "help-and-manual"]], "Man Pages: Navigation": [[885, "man-pages-navigation"]], "Commandline Editing: Moving, Deleting": [[885, "commandline-editing-moving-deleting"]], "Commandline Editing: Entire Words": [[885, "commandline-editing-entire-words"]], "Commandline Editing: Entire Lines": [[885, "commandline-editing-entire-lines"]], "The Tabulator Key: Command Completion": [[885, "the-tabulator-key-command-completion"]], "The Tabulator Key: Filename Completion": [[885, "the-tabulator-key-filename-completion"]], "Shell Configuration File: ~/.bashrc": [[886, "shell-configuration-file-bashrc"]], "What\u2019s Volatile?": [[886, "what-s-volatile"]], "Copying: cp": [[887, "copying-cp"]], "Option Overview": [[887, "option-overview"]], "Creating backup copy of, say, .bashrc in the home directory": [[887, "creating-backup-copy-of-say-bashrc-in-the-home-directory"]], "Similar: copy a file into a different directory, under a different name": [[887, "similar-copy-a-file-into-a-different-directory-under-a-different-name"]], "Similar: copy a file into a different directory, keeping its name": [[887, "similar-copy-a-file-into-a-different-directory-keeping-its-name"]], "Copy multiple files into a directory": [[887, "copy-multiple-files-into-a-directory"]], "Copying a directory, together with its contents \u27f6 recursive copy": [[887, "copying-a-directory-together-with-its-contents-longrightarrow-recursive-copy"]], "Current Working Directory: pwd": [[888, "current-working-directory-pwd"]], "Changing The Current Working Directory: cd": [[888, "changing-the-current-working-directory-cd"]], "Exercise: Copy Directory Tree": [[889, "exercise-copy-directory-tree"]], "Exercise: Copy Files": [[890, "exercise-copy-files"]], "Exercise: Create Files (I/O Redirection)": [[891, "exercise-create-files-i-o-redirection"]], "Exercise: Move Files": [[892, "exercise-move-files"]], "Exercises: Create/Copy/Move/Remove": [[893, "exercises-create-copy-move-remove"]], "Exercise: mkdir": [[894, "exercise-mkdir"]], "Exercise: Funny Stuff": [[895, "exercise-funny-stuff"]], "Exercise: Remove Directory Tree": [[896, "exercise-remove-directory-tree"]], "Exercise: Verify, Repeat": [[897, "exercise-verify-repeat"]], "FH/Moodle Quiz: Shell": [[898, "fh-moodle-quiz-shell"]], "The Shell - Exercises": [[899, "the-shell-exercises"]], "Exercise: File Types in /dev": [[900, "exercise-file-types-in-dev"]], "Exercise: Size of /etc/passwd": [[901, "exercise-size-of-etc-passwd"]], "Exercises: The ls Command": [[902, "exercises-the-ls-command"]], "Exercise: Permissions of Home Directory": [[903, "exercise-permissions-of-home-directory"]], "Creating And Removing Files and Directories": [[904, "creating-and-removing-files-and-directories"]], "Creating a Directory: mkdir": [[904, "creating-a-directory-mkdir"]], "Creating a File: I/O redirection": [[904, "creating-a-file-i-o-redirection"]], "Creating an Empty File: touch": [[904, "creating-an-empty-file-touch"]], "Removing A File: rm": [[904, "removing-a-file-rm"]], "Removing A Directory: rmdir, rm -r": [[904, "removing-a-directory-rmdir-rm-r"]], "Symbolic Links, Hard Links": [[906, "symbolic-links-hard-links"]], "Directory Listings: The ls Command": [[907, "directory-listings-the-ls-command"]], "Many Options": [[907, "many-options"]], "Hidden Files": [[907, "hidden-files"]], "File Types": [[907, "file-types"]], "Moving and Renaming: mv": [[908, "moving-and-renaming-mv"]], "Renaming A File (or Directory)": [[908, "renaming-a-file-or-directory"]], "Moving a File to Somewhere Else": [[908, "moving-a-file-to-somewhere-else"]], "Moving a Directory to Somewhere Else": [[908, "moving-a-directory-to-somewhere-else"]], "Path Separator": [[909, "path-separator"]], "Relative Paths": [[909, "relative-paths"]], "Absolute Paths": [[909, "absolute-paths"]], "Special Paths": [[909, "special-paths"]], "cat": [[910, "cat"], [910, "id1"]], "cut": [[911, "cut"], [911, "id1"]], "Exercises: Inspecting Text Files": [[912, "exercises-inspecting-text-files"]], "find": [[913, "find"]], "Directories durchsuchen mit find": [[913, "directories-durchsuchen-mit-find"]], "find: Optionen": [[913, "find-optionen"]], "find: Beispiele": [[913, "find-beispiele"]], "find: Verkn\u00fcpfungen": [[913, "find-verknupfungen"]], "find: Verkn\u00fcpfungen: Beispiele": [[913, "find-verknupfungen-beispiele"]], "grep": [[914, "grep"]], "Searching With grep": [[914, "searching-with-grep"]], "More About Regular Expressions": [[914, "more-about-regular-expressions"]], "head And tail": [[916, "head-and-tail"]], "head": [[916, "head"]], "tail": [[916, "tail"]], "head And tail In The Pipe": [[916, "head-and-tail-in-the-pipe"]], "less": [[917, "less"]], "Paging Files Using less": [[917, "paging-files-using-less"]], "Help Screen (Enter With h)": [[917, "help-screen-enter-with-h"]], "stdin, stdout, And The Pipe": [[918, "stdin-stdout-and-the-pipe"]], "stdin, stdout: Examples": [[918, "stdin-stdout-examples"]], "Pipe: Examples": [[918, "pipe-examples"]], "Basics Text Tools": [[918, "basics-text-tools"]], "Yocto": [[920, "yocto"]], "Controlling a Brushless Motor With Raspberry Pi": [[922, "controlling-a-brushless-motor-with-raspberry-pi"]], "Topic": [[922, null]], "Electronic Speed Controller (ESC)": [[922, "electronic-speed-controller-esc"]], "Select Running Mode: \u201cFwd/Rev\u201d": [[922, "select-running-mode-fwd-rev"]], "The \u201cCommand Protocol\u201d, and Calibration": [[922, "the-command-protocol-and-calibration"]], "Driving the Motor": [[922, "driving-the-motor"]], "CAN/Linux Basics": [[923, "can-linux-basics"]], "Why This Talk?": [[923, "why-this-talk"]], "Network Programming: Datagram Exchange": [[923, "network-programming-datagram-exchange"]], "And CAN?": [[923, "and-can"]], "One CAN Network Packet \u2026": [[923, "one-can-network-packet"]], "CAN Interfaces": [[924, "can-interfaces"]], "CAN-Interface: Configuration": [[924, "can-interface-configuration"]], "CAN Utils": [[924, "can-utils"]], "CAN Utils: Usage (1)": [[924, "can-utils-usage-1"]], "CAN Utils: Usage (2)": [[924, "can-utils-usage-2"]], "vcan: Virtual CAN-Bus": [[924, "vcan-virtual-can-bus"]], "Programming": [[925, "programming"]], "CAN Programming": [[925, "can-programming"]], "CAN in C - Socket, Interface Index": [[925, "can-in-c-socket-interface-index"]], "CAN in Python - Socket, Interface Index": [[925, "can-in-python-socket-interface-index"]], "CAN in C - Frames (1)": [[925, "can-in-c-frames-1"]], "CAN in C - Frames (2)": [[925, "can-in-c-frames-2"]], "CAN in Python - Frames": [[925, "can-in-python-frames"]], "Hardware, Kernel": [[926, "hardware-kernel"]], "MCP2515: Schematic": [[926, "mcp2515-schematic"]], "MCP2515: Soldering": [[926, "mcp2515-soldering"]], "MCP2515: SPI": [[926, "mcp2515-spi"]], "MCP2515: Raspberry": [[926, "mcp2515-raspberry"]], "CAN Bus With Linux And Python": [[927, "can-bus-with-linux-and-python"]], "Linux Hardware Interfaces": [[928, "linux-hardware-interfaces"]], "Linux and I2C (using LM73 Temperature Sensor as Slave)": [[929, "linux-and-i2c-using-lm73-temperature-sensor-as-slave"]], "Configuring I2C Master": [[929, "configuring-i2c-master"]], "Enable I2C, Load BCM2835 Platform Driver": [[929, "enable-i2c-load-bcm2835-platform-driver"]], "Raspberry Pi GPIO header pinout": [[929, null]], "Enable Userspace I2C": [[929, "enable-userspace-i2c"]], "Slave Device: LM73": [[929, "slave-device-lm73"]], "Datasheet etc.": [[929, null]], "Optional: Address Selection": [[929, "optional-address-selection"]], "Connecting LM73 to Raspberry Pi": [[929, "connecting-lm73-to-raspberry-pi"]], "i2c-tools/i2cdetect: Diagnostics, Detecting Devices": [[929, "i2c-tools-i2cdetect-diagnostics-detecting-devices"]], "Using the Device: Talking I2C from Userspace": [[929, "using-the-device-talking-i2c-from-userspace"]], "Using the Device: hwmon - Hardware Monitoring": [[929, "using-the-device-hwmon-hardware-monitoring"]], "Building the Kernel, Enabling LM73": [[929, "building-the-kernel-enabling-lm73"]], "Loading the Driver": [[929, "loading-the-driver"]], "Hardware Monitoring (hwmon) Devices": [[929, "hardware-monitoring-hwmon-devices"]], "PWM Userspace Interface (using PCA9685)": [[930, "pwm-userspace-interface-using-pca9685"]], "Pulse Width Modulation (PWM)": [[930, "pulse-width-modulation-pwm"]], "Why An External PWM Controller?": [[930, "why-an-external-pwm-controller"]], "Wiring, Setup, and Testing": [[930, "wiring-setup-and-testing"]], "Talk to Chip Using the sysfs Interface": [[930, "talk-to-chip-using-the-sysfs-interface"]], "Linux and OneWire (using DS18B20 Temperature Sensor as Slave)": [[931, "linux-and-onewire-using-ds18b20-temperature-sensor-as-slave"]], "Master Device, Alterative 1: w1-gpio - OneWire Master in Software": [[931, "master-device-alterative-1-w1-gpio-onewire-master-in-software"]], "Wiring: Attach OneWire Device to GPIO Pin": [[931, "wiring-attach-onewire-device-to-gpio-pin"]], "Master Device, Alterative 2: DS2482 - I2C OneWire Master in Hardware": [[931, "master-device-alterative-2-ds2482-i2c-onewire-master-in-hardware"]], "DS2482-800: 8-Channel 1-Wire Master": [[931, null]], "Wiring: Attach DS2482-800 via I2C": [[931, "wiring-attach-ds2482-800-via-i2c"]], "Configure Software": [[931, "configure-software"]], "Enable I2C, and Check": [[931, "enable-i2c-and-check"]], "Verify That Our Device Is There": [[931, "verify-that-our-device-is-there"]], "Announce (\u201cHotplug\u201d) DS2482 to Linux": [[931, "announce-hotplug-ds2482-to-linux"]], "Wiring: Attach OneWire Device to DS2482-800": [[931, "wiring-attach-onewire-device-to-ds2482-800"]], "Over-Engineering? Beauty?": [[931, "over-engineering-beauty"]], "Hardware Bringup": [[931, "hardware-bringup"]], "Device Usage": [[931, "device-usage"]], "Slave Device: DS18B20 Temperature Sensor": [[931, "slave-device-ds18b20-temperature-sensor"]], "Using the Device": [[931, "using-the-device"]], "As a Generic OneWire Device": [[931, "as-a-generic-onewire-device"]], "As a Hardware Monitoring (hwmon) Device": [[931, "as-a-hardware-monitoring-hwmon-device"]], "lm-sensors": [[931, "lm-sensors"]], "OneWire Caveats": [[931, "onewire-caveats"]], "Bus Topology": [[931, "bus-topology"]], "Error Symptoms": [[931, "error-symptoms"]], "SSH: Basics": [[932, "ssh-basics"]], "Login": [[932, "login"]], "Exit Status, stdin, stdout: Scripting": [[932, "exit-status-stdin-stdout-scripting"]], "Exercise: Copy a File To Remote Machine, And Verify": [[933, "exercise-copy-a-file-to-remote-machine-and-verify"]], "Exercise: Copy a Tree To Remote Machine (And Adjust Permissions)": [[934, "exercise-copy-a-tree-to-remote-machine-and-adjust-permissions"]], "Exercises: SSH": [[935, "exercises-ssh"]], "Exercise: Create SSH Key Pair": [[936, "exercise-create-ssh-key-pair"]], "SSH: Public Key Authentication": [[938, "ssh-public-key-authentication"]], "Local Setup, Key Generation": [[938, "local-setup-key-generation"]], "Key Pair?": [[938, "key-pair"]], "Remote Setup (Wearing The Remote Admin\u2019s Hat)": [[938, "remote-setup-wearing-the-remote-admin-s-hat"]], "SSH: Links": [[939, "ssh-links"]], "SSH: Port Forwarding": [[940, "ssh-port-forwarding"]], "Port Forwarding - The Problem (1)": [[940, "port-forwarding-the-problem-1"]], "Port Forwarding - The Problem (2)": [[940, "port-forwarding-the-problem-2"]], "Port Forwarding - The Solution (1)": [[940, "port-forwarding-the-solution-1"]], "Port Forwarding - The Solution (2)": [[940, "port-forwarding-the-solution-2"]], "Port Forwarding - The Commandline": [[940, "port-forwarding-the-commandline"]], "SSH: Secure Copy (scp)": [[941, "ssh-secure-copy-scp"]], "What Is That?": [[941, "what-is-that"]], "Copy Single File From Local To Remote": [[941, "copy-single-file-from-local-to-remote"]], "Copy Single File from Remote To Local": [[941, "copy-single-file-from-remote-to-local"]], "Copy An Entire Directory Tree (-r)": [[941, "copy-an-entire-directory-tree-r"]], "Copy Multiple File From Here To There": [[941, "copy-multiple-file-from-here-to-there"]], "Copy From One Remote To A Different Remote": [[941, "copy-from-one-remote-to-a-different-remote"]], "More Options": [[941, "more-options"]], "SSH File System (sshfs)": [[942, "ssh-file-system-sshfs"]], "What Is It?": [[942, "what-is-it"]], "Why Is It?": [[942, "why-is-it"]], "Example Situation: The Raspi": [[942, "example-situation-the-raspi"]], "Mounting Remote  $HOME/logdata": [[942, "mounting-remote-home-logdata"]], "Unmounting: fusermount -u, or Simply umount": [[942, "unmounting-fusermount-u-or-simply-umount"]], "User ID Mismatch: Problem": [[942, "user-id-mismatch-problem"]], "User ID Mismatch: Solution (User Mapping)": [[942, "user-id-mismatch-solution-user-mapping"]], "The errno Variable": [[943, "the-errno-variable"]], "errno Is A Global Variable": [[943, "errno-is-a-global-variable"]], "Helper Functions": [[943, "helper-functions"]], "Linux Systems Programming: Basics": [[944, "linux-systems-programming-basics"]], "System Calls vs. Library Functions": [[945, "system-calls-vs-library-functions"]], "System Calls": [[945, "system-calls"]], "System Calls And The C-Library": [[945, "system-calls-and-the-c-library"]], "Library Function Or System Call?": [[945, "library-function-or-system-call"]], "Manual Pages": [[945, "manual-pages"]], "Blocking I/O: What is That? (\u201cEverything is a file\u201d)": [[946, "blocking-i-o-what-is-that-everything-is-a-file"]], "Examples/Live Demos": [[946, null]], "Solution: This Is What An Operating System Is There For": [[946, "solution-this-is-what-an-operating-system-is-there-for"]], "Blocking I/O (On A File): What is That?": [[947, "blocking-i-o-on-a-file-what-is-that"]], "See Also": [[947, null], [948, null], [949, null], [1130, "see-also"]], "Abstractions": [[947, "abstractions"], [948, "abstractions"], [949, "abstractions"]], "Simplicity": [[947, "simplicity"], [948, "simplicity"], [949, "simplicity"]], "Build, Run, Look": [[947, "build-run-look"], [948, "build-run-look"], [949, "build-run-look"]], "Watch: Run Under strace Supervision": [[947, "watch-run-under-strace-supervision"]], "Blocking I/O: On A Network Socket": [[948, "blocking-i-o-on-a-network-socket"]], "Opening a Network Connection": [[948, "opening-a-network-connection"]], "Blocking I/O: On A Timer? WTF?": [[949, "blocking-i-o-on-a-timer-wtf"]], "Setup A Timer": [[949, "setup-a-timer"]], "Blocking I/O: What Is That?": [[950, "blocking-i-o-what-is-that"]], "File I/O: Basics": [[951, "file-i-o-basics"]], "File Descriptors": [[951, "file-descriptors"]], "Standard Filedescriptors": [[951, "standard-filedescriptors"]], "File I/O: System Calls": [[951, "file-i-o-system-calls"]], "open()": [[951, "open"]], "open() Flags": [[951, "open-flags"]], "read()": [[951, "read"]], "write()": [[951, "write"]], "File Offset: lseek()": [[951, "file-offset-lseek"]], "The Rest: ioctl()": [[951, "the-rest-ioctl"]], "Exercise: Copy A File": [[952, "exercise-copy-a-file"]], "Sunny Case: Source File Exists, Destination Does Not Exist": [[952, "sunny-case-source-file-exists-destination-does-not-exist"]], "Error: Wrong Number Of Arguments Specified": [[952, "error-wrong-number-of-arguments-specified"]], "Error: Source File Does Not Exist": [[952, "error-source-file-does-not-exist"]], "Error: Destination File Exists": [[952, "error-destination-file-exists"]], "Error: Destination Directory Not Writable": [[952, "error-destination-directory-not-writable"]], "Exercise: Create File With Hole": [[953, "exercise-create-file-with-hole"]], "Duplicating (Whats Going On?)": [[954, "duplicating-whats-going-on"]], "File Descriptors, Open File, I-Node": [[954, "file-descriptors-open-file-i-node"]], "File Descriptors and Inheritance": [[954, "file-descriptors-and-inheritance"]], "Duplicating File Descriptors": [[954, "duplicating-file-descriptors"]], "Example: Shell Stdout-Redirection (1)": [[954, "example-shell-stdout-redirection-1"]], "Example: Shell Stdout-Redirection (2)": [[954, "example-shell-stdout-redirection-2"]], "Example: Shell Stdout-Redirection (3)": [[954, "example-shell-stdout-redirection-3"]], "O_CREAT: Creating A File": [[955, "o-creat-creating-a-file"]], "Creating A File If It Does Not Exist (Bogus Version)": [[955, "creating-a-file-if-it-does-not-exist-bogus-version"]], "Bogus O_CREAT Usage: Mode Parameter Missing": [[955, "bogus-o-creat-usage-mode-parameter-missing"]], "Creating A File If It Does Not Exist": [[955, "creating-a-file-if-it-does-not-exist"]], "O_EXCL: Creating A File, But Failing If It Already Exists": [[956, "o-excl-creating-a-file-but-failing-if-it-already-exists"]], "Is \u201cCreate or Open\u201d Always Wanted?": [[956, "is-create-or-open-always-wanted"]], "Sunny Case: File Does Not Exist": [[956, "sunny-case-file-does-not-exist"]], "Error: File Exists": [[956, "error-file-exists"]], "O_RDONLY: Reading a File": [[957, "o-rdonly-reading-a-file"]], "Me and /etc/passwd": [[957, "me-and-etc-passwd"]], "Code: Reading A File": [[957, "code-reading-a-file"]], "Sunny Case: Reading /etc/passwd": [[957, "sunny-case-reading-etc-passwd"]], "Error: File Not Readable": [[957, "error-file-not-readable"]], "Error: File Not Even There": [[957, "error-file-not-even-there"]], "O_WRONLY: Writing A File (Which Must Exist)": [[958, "o-wronly-writing-a-file-which-must-exist"]], "Writing (And Not Creating) A File": [[958, "writing-and-not-creating-a-file"]], "Error: File Not Writeable": [[958, "error-file-not-writeable"]], "Error: File Not Even There \u27f6 Not Implicitly Created": [[958, "error-file-not-even-there-longrightarrow-not-implicitly-created"]], "Sunny Case: File Exists, And Is Writeable": [[958, "sunny-case-file-exists-and-is-writeable"]], "Exercise: Read Temperature From Onewire Sensor": [[959, "exercise-read-temperature-from-onewire-sensor"]], "Onewire Basics": [[959, "onewire-basics"]], "Program": [[959, "program"], [1111, "program"]], "Test On The Target Machine": [[959, "test-on-the-target-machine"]], "I/O without Offset Manipulation": [[961, "i-o-without-offset-manipulation"]], "Scatter/Gather I/O": [[961, "scatter-gather-i-o"]], "Scatter/Gather I/O, without Offset Manipulation": [[961, "scatter-gather-i-o-without-offset-manipulation"]], "Truncating Files": [[961, "truncating-files"]], "File Descriptors - Allocation": [[961, "file-descriptors-allocation"]], "Linux Systems Programming": [[962, "linux-systems-programming"], [1191, "linux-systems-programming"]], "Get Value Of GPIO": [[963, "get-value-of-gpio"]], "Retrieving Value Manually, On The Commandline": [[963, "retrieving-value-manually-on-the-commandline"]], "Shell Script": [[963, "shell-script"]], "C Program": [[963, "c-program"]], "Introductory Live Hacking, Hardware-Wise (sysfs GPIO)": [[964, "introductory-live-hacking-hardware-wise-sysfs-gpio"]], "Intro: sysfs GPIO": [[965, "intro-sysfs-gpio"]], "sysfs?": [[965, "sysfs"]], "General Purpose IO (GPIO)": [[965, "general-purpose-io-gpio"]], "Requesting A GPIO Pin": [[965, "requesting-a-gpio-pin"]], "GPIO Attributes As Files": [[965, "gpio-attributes-as-files"]], "Interrupts In Userspace": [[966, "interrupts-in-userspace"]], "Manual Configuration": [[966, "manual-configuration"]], "C Program: Configuration, Event Loop": [[966, "c-program-configuration-event-loop"]], "Why Threads?": [[967, "why-threads"]], "Typical Uses": [[967, "typical-uses"]], "Legal (1)": [[967, "legal-1"]], "Legal (2)": [[967, "legal-2"]], "POSIX Thread API": [[967, "posix-thread-api"]], "Thread Life Cycle": [[968, "thread-life-cycle"], [968, "id1"]], "Thread Creation": [[968, "thread-creation"]], "Thread Termination (1)": [[968, "thread-termination-1"]], "Thread Termination (2)": [[968, "thread-termination-2"]], "Exit Status, pthread_join()": [[968, "exit-status-pthread-join"]], "Detached Threads": [[968, "detached-threads"]], "Thread ID": [[968, "thread-id"]], "Scheduled Entities (1)": [[968, "scheduled-entities-1"]], "Scheduled Entities (2)": [[968, "scheduled-entities-2"]], "Thread Creation, Race Condition": [[969, "thread-creation-race-condition"]], "Synchronization": [[970, "synchronization"]], "Race Conditions (1)": [[970, "race-conditions-1"]], "Race Conditions (2)": [[970, "race-conditions-2"]], "Mutex (1)": [[970, "mutex-1"]], "Mutex (2)": [[970, "mutex-2"]], "Mutex (3)": [[970, "mutex-3"]], "Mutex Types": [[970, "mutex-types"]], "Mutex: Solve Load/Modify/Store Conflict": [[971, "mutex-solve-load-modify-store-conflict"]], "Communication: Condition Variable": [[972, "communication-condition-variable"]], "Condition Variable (1)": [[972, "condition-variable-1"]], "Condition Variable (2)": [[972, "condition-variable-2"]], "Condition Variable: wait()": [[972, "condition-variable-wait"]], "Condition Variable: signal()": [[972, "condition-variable-signal"]], "Example: WIN32 Auto Reset Event (1)": [[972, "example-win32-auto-reset-event-1"]], "Example: WIN32 Auto Reset Event (2)": [[972, "example-win32-auto-reset-event-2"]], "Condition Variable: Checking the Predicate": [[972, "condition-variable-checking-the-predicate"]], "Condition Variable: Initialization": [[972, "condition-variable-initialization"]], "Condition Variable: Miscellaneous": [[972, "condition-variable-miscellaneous"]], "Condition Variable: Message Queue": [[973, "condition-variable-message-queue"]], "One-Time Initialization (1)": [[974, "one-time-initialization-1"]], "One-Time Initialization (2)": [[974, "one-time-initialization-2"]], "One-Time Initialization (3)": [[974, "one-time-initialization-3"]], "Thread Specific Data, Thread Local Storage": [[974, "thread-specific-data-thread-local-storage"]], "Last Warning (1)": [[975, "last-warning-1"]], "Last Warning (2)": [[975, "last-warning-2"]], "Last Warning (3)": [[975, "last-warning-3"]], "Trylock/islocked": [[977, "trylock-islocked"]], "Process: Arguments, Exit Status": [[978, "process-arguments-exit-status"]], "The Shell: A Program Like Any Program": [[978, "the-shell-a-program-like-any-program"]], "The Shell: A Programming Language": [[978, "the-shell-a-programming-language"]], "Exit Status": [[978, "exit-status"]], "Exit Status: 0 is \u201cOK\u201d": [[978, "exit-status-0-is-ok"]], "Exit Status: != 0 is \u201cNot OK\u201d": [[978, "exit-status-0-is-not-ok"]], "Argument Vector (int argc, char** argv)": [[978, "argument-vector-int-argc-char-argv"]], "Processes": [[979, "processes"]], "The Process Tree (And Environment, And procfs)": [[980, "the-process-tree-and-environment-and-procfs"]], "Process ID (PID) And Parent Process ID (PPID)": [[980, "process-id-pid-and-parent-process-id-ppid"]], "System Calls: getpid(), getppid()": [[980, "system-calls-getpid-getppid"]], "Environment Variables": [[980, "environment-variables"]], "Scheduling (and Multitasking)": [[981, "scheduling-and-multitasking"]], "Fairness Criteria": [[981, "fairness-criteria"]], "CPU bound vs. I/O bound": [[981, "cpu-bound-vs-i-o-bound"]], "Demo: I/O vs CPU bound": [[981, "demo-i-o-vs-cpu-bound"]], "Scheduling Decision, Runnability": [[981, "scheduling-decision-runnability"]], "Tasks? Processes? Threads?": [[983, "tasks-processes-threads"]], "A Typical Bare Metal Application": [[983, "a-typical-bare-metal-application"]], "Hm. Need Another Timer Interrupt!": [[983, "hm-need-another-timer-interrupt"]], "Away From Interrupts: Use An Operating System": [[983, "away-from-interrupts-use-an-operating-system"]], "Tasks?": [[983, "id1"]], "Threads Are Great: More Functionality": [[983, "threads-are-great-more-functionality"]], "Are Threads Great?": [[983, "are-threads-great"]], "Stability Considerations": [[983, "stability-considerations"]], "Processes, Address Spaces": [[983, "processes-address-spaces"]], "Stabilizing": [[983, "stabilizing"]], "Scheduling: Exam Questions": [[984, "scheduling-exam-questions"]], "Wakeup Latency, and Fair Scheduling": [[985, "wakeup-latency-and-fair-scheduling"]], "Nice Value: Inexact Tuning": [[985, "nice-value-inexact-tuning"]], "Enter Realtime: Definition": [[985, "enter-realtime-definition"]], "Realtime on Linux": [[985, "realtime-on-linux"]], "Demo: Measuring Wakeup Latency": [[985, "demo-measuring-wakeup-latency"]], "Immediately?": [[985, "immediately"]], "Immediately! \u27f6 PREEMPT_RT": [[985, "immediately-longrightarrow-preempt-rt"]], "Realtime API": [[986, "realtime-api"]], "Scheduling Policies": [[986, "scheduling-policies"]], "Scheduling Priorities": [[986, "scheduling-priorities"]], "What\u2019s Runnning On A System?": [[986, "what-s-runnning-on-a-system"]], "Scheduling: System Calls": [[986, "scheduling-system-calls"]], "Scheduling: Threads (1)": [[986, "scheduling-threads-1"]], "Scheduling: Threads (2)": [[986, "scheduling-threads-2"]], "Priority Inversion": [[986, "priority-inversion"]], "Priority Inversion: Mutex Protocols (1)": [[986, "priority-inversion-mutex-protocols-1"]], "Wakeup Latency, CPU Frequency (Gotcha)": [[987, "wakeup-latency-cpu-frequency-gotcha"]], "Measuring Wakeup Latency": [[987, "measuring-wakeup-latency"]], "Many Runnable Processes (Gotcha: CPU Frequency Scaling)": [[987, "many-runnable-processes-gotcha-cpu-frequency-scaling"]], "CPU Frequency Scaling Out Of The Way": [[987, "cpu-frequency-scaling-out-of-the-way"]], "Mysteries Remaining": [[987, "mysteries-remaining"]], "Code: Sysprog: Event Driven Programming": [[988, "code-sysprog-event-driven-programming"]], "Screenplay: Sysprog: POSIX IPC": [[989, "screenplay-sysprog-posix-ipc"], [992, "screenplay-sysprog-posix-ipc"]], "select on Device Files": [[989, "select-on-device-files"]], "Sysprog: Events": [[990, "sysprog-events"]], "Code: Sysprog: POSIX IPC": [[991, "code-sysprog-posix-ipc"]], "Virtual Memory, mmap()": [[992, "virtual-memory-mmap"]], "POSIX Shared Memory": [[992, "posix-shared-memory"]], "Create Shared Memory Segment": [[992, "create-shared-memory-segment"]], "Produce into Shared Memory": [[992, "produce-into-shared-memory"]], "Consume from Shared Memory": [[992, "consume-from-shared-memory"]], "POSIX Semaphores": [[992, "posix-semaphores"]], "Create Semaphore": [[992, "create-semaphore"]], "Wait": [[992, "wait"]], "Post": [[992, "post"]], "POSIX Message Queues": [[992, "posix-message-queues"]], "Create": [[992, "create"]], "Produce": [[992, "produce"]], "Consume": [[992, "consume"]], "Slides: Sysprog: POSIX IPC": [[993, "slides-sysprog-posix-ipc"]], "Slideshow": [[993, null], [997, null]], "History: Two IPC Variants": [[993, "history-two-ipc-variants"]], "Object Names": [[993, "object-names"]], "File Semantics": [[993, "file-semantics"]], "Message Queues": [[993, "message-queues"]], "Open/Create: mq_open()": [[993, "open-create-mq-open"]], "Sending/Receiving: mq_send(), mq_receive()": [[993, "sending-receiving-mq-send-mq-receive"]], "Closing/Removing: mq_close(), mq_unlink()": [[993, "closing-removing-mq-close-mq-unlink"]], "Notification: mq_notify()": [[993, "notification-mq-notify"]], "Message Queues are Files": [[993, "message-queues-are-files"]], "Message Queue Filesystem: mqueue": [[993, "message-queue-filesystem-mqueue"]], "Semaphores": [[993, "semaphores"]], "Open/Create: sem_open()": [[993, "open-create-sem-open"]], "Communication: sem_wait(), sem_post()": [[993, "communication-sem-wait-sem-post"]], "Closing/Removing: sem_close(), ``sem_unlink()": [[993, "closing-removing-sem-close-sem-unlink"]], "Semaphores are Files": [[993, "semaphores-are-files"]], "Shared Memory (1)": [[993, "shared-memory-1"]], "Shared Memory (2)": [[993, "shared-memory-2"]], "Exercise: POSIX Message Queues": [[993, "exercise-posix-message-queues"]], "Sysprog: POSIX IPC": [[994, "sysprog-posix-ipc"]], "Code: Sysprog: Signals": [[995, "code-sysprog-signals"]], "Screenplay: Sysprog: Signals": [[996, "screenplay-sysprog-signals"]], "Barebones Naive Program": [[996, "barebones-naive-program"]], "Signal Handler": [[996, "signal-handler"]], "Alarm": [[996, "alarm"]], "Alarm (Louder)": [[996, "alarm-louder"]], "Synchronous Delivery": [[996, "synchronous-delivery"]], "Innocent Multithreaded Program": [[996, "innocent-multithreaded-program"]], "Add SIGALRM": [[996, "add-sigalrm"]], "Slides: Sysprog: Signals": [[997, "slides-sysprog-signals"]], "Example Signals": [[997, "example-signals"]], "Terminology": [[997, "terminology"]], "Default Actions": [[997, "default-actions"]], "Important Signals": [[997, "important-signals"]], "Sending, Commandline": [[997, "sending-commandline"]], "Sending Signals, Programmatically": [[997, "sending-signals-programmatically"]], "Warning!": [[997, "warning"]], "Blocking Signals: Signal Mask": [[997, "blocking-signals-signal-mask"]], "Signal Mask Manipulation": [[997, "signal-mask-manipulation"]], "Pending Signals": [[997, "pending-signals"]], "Signal Set: sigset_t": [[997, "signal-set-sigset-t"]], "Signal Handlers": [[997, "signal-handlers"]], "Installing a Signal Handler (1)": [[997, "installing-a-signal-handler-1"]], "Installing a Signal Handler (2)": [[997, "installing-a-signal-handler-2"]], "Effects of Signal Delivery": [[997, "effects-of-signal-delivery"]], "Last Warning!": [[997, "last-warning"]], "WTF Async Signal Safe?": [[997, "wtf-async-signal-safe"]], "Exercise: Signals": [[997, "exercise-signals"]], "Sysprog: Signals": [[998, "sysprog-signals"]], "Toolchain: Basics": [[999, "toolchain-basics"]], "GCC - GNU Compiler Collection": [[999, "gcc-gnu-compiler-collection"]], "All-In-One Usage: Single File": [[999, "all-in-one-usage-single-file"]], "All-In-One Usage: Multiple Files": [[999, "all-in-one-usage-multiple-files"]], "This Is Not As Simple As It Seems!": [[999, "this-is-not-as-simple-as-it-seems"]], "What\u2019s In A Program? \u27f6 Symbols (nm)": [[999, "what-s-in-a-program-longrightarrow-symbols-nm"]], "Overview: Where Do Which Symbols Come From (\u27f6 The Toolchain)": [[999, "overview-where-do-which-symbols-come-from-longrightarrow-the-toolchain"]], "Recap: Toolchain": [[999, "recap-toolchain"]], "CMake: Cross Build": [[1000, "cmake-cross-build"]], "Cross Build: Parameters": [[1000, "cross-build-parameters"]], "Core Build Instructions: Target Agnostic": [[1000, "core-build-instructions-target-agnostic"]], "Toolchain Files": [[1000, "toolchain-files"]], "Step 1: Generate Makefile in Build Directory": [[1000, "step-1-generate-makefile-in-build-directory"]], "Step 2: Build Using make": [[1000, "step-2-build-using-make"], [1001, "step-2-build-using-make"]], "CMake: Local Build": [[1001, "cmake-local-build"]], "make: Problems": [[1001, "make-problems"]], "CMake To The Rescue": [[1001, "cmake-to-the-rescue"]], "Out-Of-Source Build": [[1001, "out-of-source-build"]], "Step 1: Generate Makefile In Build Directory": [[1001, "step-1-generate-makefile-in-build-directory"]], "Goodie: Dependency Management": [[1001, "goodie-dependency-management"]], "Native Compilation": [[1002, "native-compilation"]], "Cross?": [[1002, "cross"]], "The sysroot": [[1002, "the-sysroot"]], "Exercise: Build Software Package (Cross, Raspberry)": [[1004, "exercise-build-software-package-cross-raspberry"]], "FH/Moodle Quiz: Toolchain": [[1005, "fh-moodle-quiz-toolchain"]], "Exercises: Toolchain": [[1006, "exercises-toolchain"]], "Exercise: Build Software Package (Native)": [[1007, "exercise-build-software-package-native"]], "Exercise: Install And Check Raspberry Toolchain": [[1008, "exercise-install-and-check-raspberry-toolchain"]], "Toolchain, And Cross Development": [[1009, "toolchain-and-cross-development"]], "Case Study: Raspberry Toolchain": [[1010, "case-study-raspberry-toolchain"]], "Linaro Toolchain For The Pi (Defunct)": [[1011, "linaro-toolchain-for-the-pi-defunct"]], "Download And Unpack Linaro Toolchain": [[1011, "download-and-unpack-linaro-toolchain"]], "Create a sysroot": [[1011, "create-a-sysroot"]], "Patience!": [[1011, null]], "Test Cross Build": [[1011, "test-cross-build"]], "What We Have": [[1011, "what-we-have"]], "Use Cross Compiler To Build Against sysroot": [[1011, "use-cross-compiler-to-build-against-sysroot"]], "Adjust $PATH To Point To Toolchain": [[1011, "adjust-path-to-point-to-toolchain"]], "Building A Toolchain On Fedora For Ubuntu 18.04 (WSL)": [[1013, "building-a-toolchain-on-fedora-for-ubuntu-18-04-wsl"]], "Install And Run Docker": [[1013, "install-and-run-docker"]], "Create Ubuntu Images (18.04 and 20.04)": [[1013, "create-ubuntu-images-18-04-and-20-04"]], "Create Docker Volume": [[1013, "create-docker-volume"]], "Container Work": [[1013, "container-work"]], "Command To Run Container On Volumes": [[1013, "command-to-run-container-on-volumes"]], "Setup container": [[1013, "setup-container"]], "Install autoconf 2.71": [[1013, "install-autoconf-2-71"]], "Install crosstool-ng": [[1013, "install-crosstool-ng"]], "Build Toolchain": [[1013, "build-toolchain"]], "crosstool-ng Toolchain Build": [[1013, "crosstool-ng-toolchain-build"]], "Create Toolchain Archive": [[1013, "create-toolchain-archive"]], "Install Toolchain On Host": [[1013, "install-toolchain-on-host"]], "Cross Toolchain Setup": [[1014, "cross-toolchain-setup"]], "Download And Install Toolchain Archive": [[1014, "download-and-install-toolchain-archive"]], "Establish CMake Toolchain File": [[1014, "establish-cmake-toolchain-file"]], "Test Run": [[1014, "test-run"]], "Zooming In: Separate Compilation, and Linking Statically": [[1015, "zooming-in-separate-compilation-and-linking-statically"]], "Remember: All-In-One Build \u2026": [[1015, "remember-all-in-one-build"]], "Adding Another main(): What About Shared Code?": [[1015, "adding-another-main-what-about-shared-code"]], "Solution: Separate Compilation And Linking Steps": [[1015, "solution-separate-compilation-and-linking-steps"]], "Complication: Modification Tracking": [[1015, "complication-modification-tracking"]], "Enter Makefiles": [[1015, "enter-makefiles"]], "Shared Libraries (Shared Objects)": [[1016, "shared-libraries-shared-objects"]], "Problems With Static Libraries": [[1016, "problems-with-static-libraries"]], "And Dynamic Libraries?": [[1016, "and-dynamic-libraries"]], "Relocations": [[1016, "relocations"]], "Building A Shared Library: Position Independent Code (PIC)": [[1016, "building-a-shared-library-position-independent-code-pic"]], "Linking Executables Against Shared Libraries": [[1016, "linking-executables-against-shared-libraries"]], "And Build Dependencies?": [[1016, "and-build-dependencies"]], "And Runtime Dependencies?": [[1016, "and-runtime-dependencies"]], "And Starting An Executable Having External Dependencies?": [[1016, "and-starting-an-executable-having-external-dependencies"]], "This Is Not Simple: Library Search Path": [[1016, "this-is-not-simple-library-search-path"]], "Summary: Static Versus Dynamic Libraries": [[1016, "summary-static-versus-dynamic-libraries"]], "Object Code Archives/Static Libraries": [[1017, "object-code-archives-static-libraries"]], "Code Bases Become Larger (1)": [[1017, "code-bases-become-larger-1"]], "Code Bases Become Larger (2)": [[1017, "code-bases-become-larger-2"]], "Problem: Structure": [[1017, "problem-structure"]], "Build Instructions: Building A Library": [[1017, "build-instructions-building-a-library"]], "Closures": [[1018, "closures"]], "Today": [[1018, "today"]], "def is a Statement": [[1018, "def-is-a-statement"]], "Functions That Create Functions": [[1018, "functions-that-create-functions"]], "Inner Function Reaches Out To Global Scope": [[1018, "inner-function-reaches-out-to-global-scope"]], "And Intermediate Scope? \u27f6 Closure": [[1018, "and-intermediate-scope-longrightarrow-closure"]], "A Less Theoretical \u201cUse Case\u201d": [[1018, "a-less-theoretical-use-case"]], "Scope Issues: Assignment to Global Scope (global Keyword)": [[1018, "scope-issues-assignment-to-global-scope-global-keyword"]], "Scope Issues: Assignment to Intermediate Scope (nonlocal Keyword)": [[1018, "scope-issues-assignment-to-intermediate-scope-nonlocal-keyword"]], "Intro": [[1019, "intro"]], "Simplest: List Comprehension": [[1019, "simplest-list-comprehension"]], "Context Managers: The with Statement": [[1020, "context-managers-the-with-statement"]], "Example: Open File": [[1020, "example-open-file"]], "Example: Temporary Directory": [[1020, "example-temporary-directory"]], "Example: Multiple with Items": [[1020, "example-multiple-with-items"]], "Under The Hood: Context Manager": [[1020, "under-the-hood-context-manager"]], "Example: Monkeypatching The print Function": [[1020, "example-monkeypatching-the-print-function"]], "Still Much Typing \u27f6 @contextlib.contextmanager": [[1020, "still-much-typing-longrightarrow-contextlib-contextmanager"]], "More Involved: Using Closures To Implement PrefixPrint": [[1020, "more-involved-using-closures-to-implement-prefixprint"]], "Decorators": [[1021, "decorators"]], "The Ominous \u201c@\u201d": [[1021, "the-ominous"]], "Decorators Overview": [[1021, "decorators-overview"]], "A Simple Minded Function": [[1021, "a-simple-minded-function"]], "Decorator Basics": [[1021, "decorator-basics"]], "Decorators are Syntactic Sugar": [[1021, "decorators-are-syntactic-sugar"]], "Problem: Arbitrary Function Arguments": [[1021, "problem-arbitrary-function-arguments"]], "*args, **kwargs To The Rescue": [[1021, "args-kwargs-to-the-rescue"]], "Sideways: functools.wraps": [[1021, "sideways-functools-wraps"]], "Class Decorator: debug() with prefix": [[1021, "class-decorator-debug-with-prefix"]], "Basic Exception Handling: try, except": [[1022, "basic-exception-handling-try-except"]], "Catching Exceptions By Type": [[1022, "catching-exceptions-by-type"]], "Exception Objects": [[1022, "exception-objects"]], "Catching Multiple Exception Types: Exception List": [[1022, "catching-multiple-exception-types-exception-list"]], "Catching Multiple Exception Types: Multiple except Clauses": [[1022, "catching-multiple-exception-types-multiple-except-clauses"]], "Catching Multiple Exception Types: By Base Type": [[1022, "catching-multiple-exception-types-by-base-type"]], "Important: Order Of except Clauses": [[1022, "important-order-of-except-clauses"]], "Built-In Exception Hierarchy": [[1022, "built-in-exception-hierarchy"]], "Raising Exceptions": [[1022, "raising-exceptions"]], "Re-Raising Exceptions": [[1022, "re-raising-exceptions"]], "User-Defined Exceptions": [[1022, "user-defined-exceptions"]], "User-Defined Exceptions: More": [[1022, "user-defined-exceptions-more"]], "else: Executed If No Exception": [[1022, "else-executed-if-no-exception"]], "finally: Executed Regardless Of Exception": [[1022, "finally-executed-regardless-of-exception"]], "The exec() Function": [[1023, "the-exec-function"]], "Dictionaries Everywhere: Context": [[1023, "dictionaries-everywhere-context"]], "Enter exec()": [[1023, "enter-exec"]], "exec(), and Context": [[1023, "exec-and-context"]], "And What Is This Used For, Realistically?": [[1023, "and-what-is-this-used-for-realistically"]], "Python: More Language Features": [[1024, "python-more-language-features"]], "Iteration, Comprehensions, and Generators": [[1025, "iteration-comprehensions-and-generators"]], "Coverage Of This Topic": [[1025, "coverage-of-this-topic"]], "for Recap: Sequential Datatypes": [[1025, "for-recap-sequential-datatypes"]], "Primitive Transformation [1,2,3,4] \u27f6 [1,4,9,16]": [[1025, "primitive-transformation-1-2-3-4-longrightarrow-1-4-9-16"]], "Larger Input List (Still Allocated)": [[1025, "larger-input-list-still-allocated"]], "Input List \u27f6 range": [[1025, "input-list-longrightarrow-range"]], "Output List \u27f6 yield": [[1025, "output-list-longrightarrow-yield"]], "Generator Function \u27f6 Generator Expression": [[1025, "generator-function-longrightarrow-generator-expression"]], "Implementing A Fibonacci Number Generator": [[1026, "implementing-a-fibonacci-number-generator"]], "Fibonacci Numbers: Naive List": [[1026, "fibonacci-numbers-naive-list"]], "Fibonacci Numbers: Naive List, Limited": [[1026, "fibonacci-numbers-naive-list-limited"]], "Sideway: Infinity by Not Using Functions": [[1026, "sideway-infinity-by-not-using-functions"]], "Fibonacci Numbers: Function Producing Infinite Sequence": [[1026, "fibonacci-numbers-function-producing-infinite-sequence"]], "Common Pattern: Turn List into Generated Items": [[1026, "common-pattern-turn-list-into-generated-items"]], "The Iterator Protocol": [[1027, "the-iterator-protocol"], [1027, "id1"]], "Iteration in Python": [[1027, "iteration-in-python"]], "What\u2019s an Iterator?": [[1027, "what-s-an-iterator"]], "What\u2019s an Iterable?": [[1027, "what-s-an-iterable"]], "The Iterator Protocol: Manual Iteration": [[1027, "the-iterator-protocol-manual-iteration"]], "The Iterator Protocol, And The for Loop": [[1027, "the-iterator-protocol-and-the-for-loop"]], "Generators: Motivation": [[1027, "generators-motivation"]], "Generators: How?": [[1027, "generators-how"]], "Observations": [[1027, "observations"]], "Iteration, Generators, And yield": [[1028, "iteration-generators-and-yield"]], "Iterating Intelligently: Generators, and the Iterator Protocol": [[1029, "iterating-intelligently-generators-and-the-iterator-protocol"]], "Modules are Objects": [[1030, "modules-are-objects"]], "Other Forms (1)": [[1030, "other-forms-1"]], "Other Forms (2)": [[1030, "other-forms-2"]], "Packages": [[1030, "packages"]], "Executing Modules as Scripts": [[1030, "executing-modules-as-scripts"]], "Package Structure": [[1030, "package-structure"]], "Relative Imports (1)": [[1030, "relative-imports-1"]], "Relative Imports (2)": [[1030, "relative-imports-2"]], "Multithreading (Python)": [[1031, "multithreading-python"]], "What\u2019s a Thread?": [[1031, "what-s-a-thread"]], "Threads: The Pythonic Way": [[1031, "threads-the-pythonic-way"]], "Threads: The OO Way - Inheritance": [[1031, "threads-the-oo-way-inheritance"]], "And Program Termination?": [[1031, "and-program-termination"]], "Daemon Threads": [[1031, "daemon-threads"]], "Race Conditions, and Mutexes": [[1033, "race-conditions-and-mutexes"]], "Mother of All Race conditions: Integer Increment": [[1033, "mother-of-all-race-conditions-integer-increment"]], "Load Modify Store Conflict": [[1033, "load-modify-store-conflict"]], "Solution: Mutex (Explicit Acquire/Release)": [[1033, "solution-mutex-explicit-acquire-release"]], "Solution: Mutex (with Statement)": [[1033, "solution-mutex-with-statement"]], "Multithreading: Exam Questions": [[1034, "multithreading-exam-questions"]], "Abstract Base Classes (abc), And Duck Typing": [[1035, "abstract-base-classes-abc-and-duck-typing"]], "Duck Typing: Examples": [[1035, "duck-typing-examples"]], "Duck Typing Problem: Late Errors": [[1035, "duck-typing-problem-late-errors"]], "Intermediate Step: Common Base Class (\u201cInterface\u201d)": [[1035, "intermediate-step-common-base-class-interface"]], "Enter Abstract Base Classes: Wish List": [[1035, "enter-abstract-base-classes-wish-list"]], "Abtract Base Class": [[1035, "abtract-base-class"]], "Classes And Dictionaries": [[1036, "classes-and-dictionaries"]], "Facts Up-Front": [[1036, "facts-up-front"]], "Using Raw Dictionaries As Objects": [[1036, "using-raw-dictionaries-as-objects"]], "Enter Classes: An Empty Class, And Its Effects": [[1036, "enter-classes-an-empty-class-and-its-effects"]], "Attributes": [[1036, "attributes"], [1148, "attributes"]], "Summary: Classes Or Raw Dictionaries": [[1036, "summary-classes-or-raw-dictionaries"]], "Dynamic Attribute Access": [[1036, "dynamic-attribute-access"]], "Constructor": [[1037, "constructor"]], "And self?": [[1037, "and-self"]], "Interrelationships": [[1038, "interrelationships"]], "Extending Existing Classes": [[1039, "extending-existing-classes"]], "Additional Feature: Salary": [[1039, "additional-feature-salary"]], "Want Manager": [[1039, "want-manager"]], "Introspecting Inheritance: isinstance(), issubclass()": [[1039, "introspecting-inheritance-isinstance-issubclass"]], "isinstance()": [[1039, "isinstance"]], "issubclass()": [[1039, "issubclass"]], "Add __str__(), Creatively, After The Fact": [[1039, "add-str-creatively-after-the-fact"]], "Object Methods": [[1040, "object-methods"]], "Class Methods (@classmethod)": [[1040, "class-methods-classmethod"]], "Static Methods (@staticmethod)": [[1040, "static-methods-staticmethod"]], "collections.namedtuple": [[1041, "collections-namedtuple"]], "Shortcut For Simple Data-Holding Classes": [[1041, "shortcut-for-simple-data-holding-classes"]], "Constructing From Iterable: _make()": [[1041, "constructing-from-iterable-make"]], "Convert To dict: _asdict()": [[1041, "convert-to-dict-asdict"]], "Operators Are \u201cDunder\u201d Methods": [[1042, "operators-are-dunder-methods"]], "Hypothetical And Pointless class Number": [[1042, "hypothetical-and-pointless-class-number"]], "Simplest: Equality Comparison (==)": [[1042, "simplest-equality-comparison"]], "Comparing Against Incompatible Types? (Lotsa Magic!)": [[1042, "comparing-against-incompatible-types-lotsa-magic"]], "Ordering: Less-Than (<) Operator": [[1042, "ordering-less-than-operator"]], "Ordering Magic, Again: __gt__ in terms of __lt__": [[1042, "ordering-magic-again-gt-in-terms-of-lt"]], "Table: Comparison Operators": [[1042, "table-comparison-operators"]], "@functools.total_ordering To The Rescue": [[1042, "functools-total-ordering-to-the-rescue"]], "Arithmetic Operators, Reverse Operations": [[1042, "arithmetic-operators-reverse-operations"]], "Table: Operators And The Methods To Implement Them": [[1042, "table-operators-and-the-methods-to-implement-them"]], "Readonly Attributes": [[1043, "readonly-attributes"]], "And Write Access?": [[1043, "and-write-access"]], "Calculated Attributes": [[1043, "calculated-attributes"]], "str() And repr()": [[1044, "str-and-repr"]], "Stringification And Representation": [[1044, "stringification-and-representation"]], "Overloading str() And repr(): __str__(), __repr__()": [[1044, "overloading-str-and-repr-str-repr"]], "Positional and Keyword Arguments": [[1045, "positional-and-keyword-arguments"]], "Traditional Function Call": [[1045, "traditional-function-call"]], "Supplying Function Arguments Dynamically": [[1045, "supplying-function-arguments-dynamically"]], "Functions That Takes Arbitrary Number Of Positional Arguments": [[1045, "functions-that-takes-arbitrary-number-of-positional-arguments"]], "Functions That Take Arbitrary Keyword Arguments": [[1045, "functions-that-take-arbitrary-keyword-arguments"]], "And Arbitrary Positional And Keyword Arguments?": [[1045, "and-arbitrary-positional-and-keyword-arguments"]], "Ultimate Dynamicity: Arbitrary Positional And Keyword Arguments": [[1045, "ultimate-dynamicity-arbitrary-positional-and-keyword-arguments"]], "Use Case: A Better print()": [[1045, "use-case-a-better-print"]], "The Python Programming Language": [[1048, "the-python-programming-language"]], "A Little Bit of History": [[1048, "a-little-bit-of-history"]], "Guido Van Rossum": [[1048, "guido-van-rossum"]], "Hello World: Interactive Mode": [[1049, "hello-world-interactive-mode"]], "Hello World: Script Files": [[1049, "hello-world-script-files"]], "Running Python Programs": [[1050, "running-python-programs"]], "The UNIX Way: Executable Bit, chmod": [[1050, "the-unix-way-executable-bit-chmod"]], "The UNIX Way: Hash-Bang (She-Bang)": [[1050, "the-unix-way-hash-bang-she-bang"]], "The UNIX Way: Running": [[1050, "the-unix-way-running"]], "The Doze Way: Registry": [[1050, "the-doze-way-registry"]], "Syntax: Indentation (1)": [[1051, "syntax-indentation-1"]], "Syntax: Indentation (2)": [[1051, "syntax-indentation-2"]], "Syntax: Statements and Lines": [[1051, "syntax-statements-and-lines"]], "Commandline Arguments (sys.argv)": [[1052, "commandline-arguments-sys-argv"]], "Operating Systems and Programs": [[1052, "operating-systems-and-programs"]], "Commandline Arguments in Python": [[1052, "commandline-arguments-in-python"]], "Cosmetics: Rudimentary Argument Parsing": [[1052, "cosmetics-rudimentary-argument-parsing"]], "Further information: argparse": [[1052, null]], "Variables (1)": [[1053, "variables-1"]], "Variables (2)": [[1053, "variables-2"]], "Integer Numbers: Comparison": [[1054, "integer-numbers-comparison"]], "Numbers: Python2 vs. Python 3 (1)": [[1054, "numbers-python2-vs-python-3-1"]], "Numbers: Python2 vs. Python 3 (2)": [[1054, "numbers-python2-vs-python-3-2"]], "Strings: Python 2": [[1054, "strings-python-2"]], "Strings: Python 2 \u2014 Confusion": [[1054, "strings-python-2-confusion"]], "Strings: Python 2 - unicode (1)": [[1054, "strings-python-2-unicode-1"]], "Strings: Python 2 \u2014 unicode (2)": [[1054, "strings-python-2-unicode-2"]], "Strings: Python 3": [[1054, "strings-python-3"]], "Python 3, Generally": [[1054, "python-3-generally"]], "Boolean Values": [[1056, "boolean-values"]], "Boolean Operators": [[1056, "boolean-operators"]], "The if Statement": [[1057, "the-if-statement"], [1057, "id1"]], "Looping Constructs": [[1058, "looping-constructs"]], "Esoteric Feature: while/else": [[1058, "esoteric-feature-while-else"]], "Sequence Elements": [[1059, "sequence-elements"]], "Sequence Multiplication": [[1059, "sequence-multiplication"]], "Indexing (1)": [[1060, "indexing-1"]], "Indexing (2)": [[1060, "indexing-2"]], "Slicing: Cutting Out": [[1060, "slicing-cutting-out"]], "Slicing: Step Width": [[1060, "slicing-step-width"]], "Iteration over \u2026 Something": [[1061, "iteration-over-something"]], "break, continue, else": [[1061, "break-continue-else"]], "Iteration over Numbers: range()": [[1062, "iteration-over-numbers-range"]], "range(): Definition": [[1062, "range-definition"]], "range(): Python 2 vs. Python 3": [[1062, "range-python-2-vs-python-3"]], "Immutability: Numbers": [[1063, "immutability-numbers"]], "Modifying An Integer In-Place? (Immutability)": [[1063, "modifying-an-integer-in-place-immutability"]], "Immutability: Tuples": [[1063, "immutability-tuples"]], "Mutability: Lists (1)": [[1063, "mutability-lists-1"]], "Mutability: Lists (2)": [[1063, "mutability-lists-2"]], "Shallow Copy": [[1063, "shallow-copy"]], "Deep Copy": [[1063, "deep-copy"]], "Functions: Global and Local Scope (Livehacking Screenplay)": [[1064, "functions-global-and-local-scope-livehacking-screenplay"]], "Undefined Variable": [[1064, "undefined-variable"]], "Local Variable": [[1064, "local-variable"]], "Local and Global Variable With Same Name": [[1064, "local-and-global-variable-with-same-name"]], "Assignment to Global Variable: global": [[1064, "assignment-to-global-variable-global"]], "Functions (Slideshow)": [[1065, "functions-slideshow"]], "Why Functions?": [[1065, "why-functions"]], "Mutable Default Parameters: Attention!": [[1065, "mutable-default-parameters-attention"]], "String Delimiters": [[1067, "string-delimiters"]], "Escape Sequences": [[1067, "escape-sequences"]], "More String Tricks": [[1067, "more-string-tricks"]], "C-Style Formatting (1)": [[1068, "c-style-formatting-1"]], "C-Style Formatting: Conversions": [[1068, "c-style-formatting-conversions"]], "C-Style Formatting: Flags": [[1068, "c-style-formatting-flags"]], "C-Style Formatting: Examples": [[1068, "c-style-formatting-examples"]], "The format Method": [[1068, "the-format-method"]], "Cool Since 3.6: f-Strings": [[1068, "cool-since-3-6-f-strings"]], "Batteries Included: Checks": [[1069, "batteries-included-checks"]], "Batteries Included: Search": [[1069, "batteries-included-search"]], "Substring Search: Examples": [[1069, "substring-search-examples"]], "Split and Join (1)": [[1069, "split-and-join-1"]], "Split and Join (2)": [[1069, "split-and-join-2"]], "List Access": [[1070, "list-access"]], "List Methods: Examples": [[1070, "list-methods-examples"]], "Dictionary Access": [[1071, "dictionary-access"]], "Examples: Simple Access": [[1071, "examples-simple-access"]], "Examples: Shortcuts": [[1071, "examples-shortcuts"]], "Dictionary Iteration (1)": [[1071, "dictionary-iteration-1"]], "Dictionary Iteration (2)": [[1071, "dictionary-iteration-2"]], "Operations on Sets (1)": [[1072, "operations-on-sets-1"]], "Operations on Sets (2)": [[1072, "operations-on-sets-2"]], "Python 2 vs. Python 3": [[1073, "python-2-vs-python-3"]], "Opening Files": [[1073, "opening-files"]], "Reading Files": [[1073, "reading-files"]], "Reading Files: Pythonic": [[1073, "reading-files-pythonic"]], "Writing Files (1)": [[1073, "writing-files-1"]], "Writing Files (2)": [[1073, "writing-files-2"]], "File Modes": [[1073, "file-modes"]], "Text vs. Binary Mode": [[1073, "text-vs-binary-mode"]], "Standard Streams": [[1073, "standard-streams"]], "Function Objects": [[1074, "function-objects"]], "What\u2019s a Function?": [[1074, "what-s-a-function"]], "Function Objects?": [[1074, "id1"]], "Function Objects! (1)": [[1074, "function-objects-1"]], "Function Objects! (2)": [[1074, "function-objects-2"]], "Commandline Parsing with argparse": [[1075, "commandline-parsing-with-argparse"]], "Handling Positional Arguments": [[1075, "handling-positional-arguments"]], "Handling Named Arguments: --interval \u2026": [[1075, "handling-named-arguments-interval"]], "Python: Draft Topics": [[1076, "python-draft-topics"]], "Matplotlib": [[1077, "matplotlib"]], "Axis Ranges": [[1077, "axis-ranges"]], "Package Installation (setuptools)": [[1078, "package-installation-setuptools"]], "Files": [[1078, "files"]], "Test \u201cInstallation\u201d": [[1078, "test-installation"]], "Source Distribution": [[1078, "source-distribution"]], "Manifest": [[1078, "manifest"]], "Installing From Wheel File": [[1078, "installing-from-wheel-file"]], "Publishing On PyPI": [[1078, "publishing-on-pypi"]], "Exercise: Read CSV File, Write into Sqlite3 Database": [[1079, "exercise-read-csv-file-write-into-sqlite3-database"]], "Exercise: Read CSV File": [[1080, "exercise-read-csv-file"]], "Sample CSV File": [[1080, "sample-csv-file"]], "CSV and Databases": [[1081, "csv-and-databases"]], "Exercise: Boolean Expressions": [[1083, "exercise-boolean-expressions"]], "Exercise: Even Numbers (while)": [[1084, "exercise-even-numbers-while"]], "Exercise: Greeting, Depending on Time of Day": [[1085, "exercise-greeting-depending-on-time-of-day"]], "Exercises (External)": [[1086, "exercises-external"]], "Exercise: Swap Two Variables": [[1088, "exercise-swap-two-variables"]], "Exercise: Username/Password Check": [[1089, "exercise-username-password-check"]], "Exercise: Digit to English Word": [[1090, "exercise-digit-to-english-word"]], "Exercise: Dictionary: Errors?": [[1091, "exercise-dictionary-errors"]], "Exercise: Eliminate Empty/Comment-Only Lines": [[1092, "exercise-eliminate-empty-comment-only-lines"]], "Exercise: Generator: Fibonacci": [[1093, "exercise-generator-fibonacci"]], "Exercise: Primeness (for)": [[1094, "exercise-primeness-for"]], "Exercises (Legacy)": [[1095, "exercises-legacy"]], "Exercise: Functions: join()": [[1096, "exercise-functions-join"]], "Exercise: Determine Maximum of Two Numbers (Function)": [[1098, "exercise-determine-maximum-of-two-numbers-function"]], "Exercise: Mixed List (Executable Program)": [[1099, "exercise-mixed-list-executable-program"]], "Exercise: Mixed List (Interactive Interpreter)": [[1100, "exercise-mixed-list-interactive-interpreter"]], "Exercise: Parsing /etc/passwd": [[1101, "exercise-parsing-etc-passwd"]], "Sample /etc/passwd file": [[1101, null]], "Implementation Strategy": [[1101, "implementation-strategy"]], "Exercise: Primeness (Function)": [[1102, "exercise-primeness-function"]], "Exercise: Reverting Lines of a File": [[1103, "exercise-reverting-lines-of-a-file"]], "Exercise: String (Right-Justify)": [[1104, "exercise-string-right-justify"]], "Exercise: Function: uniq()": [[1105, "exercise-function-uniq"]], "Exercise: Generator: uniq()": [[1106, "exercise-generator-uniq"]], "Exercise: Counting Lines, Words, Characters": [[1107, "exercise-counting-lines-words-characters"]], "Exercise: Primeness (while)": [[1108, "exercise-primeness-while"]], "Sensors, And Data Acquisition (Exercise Series)": [[1109, "sensors-and-data-acquisition-exercise-series"]], "Setting Paths": [[1110, "setting-paths"]], "Create (And Activate) A Virtual Environment For The Project": [[1110, "create-and-activate-a-virtual-environment-for-the-project"]], "Install Requirements": [[1110, "install-requirements"]], "Exercise: Basic \u201cSensor\u201d": [[1111, "exercise-basic-sensor"]], "Specification, And Setup": [[1111, "specification-and-setup"]], "Verification": [[1111, "verification"]], "Unit Test": [[1111, "unit-test"]], "Exercise: Read CSV File (csv.dictreader)": [[1112, "exercise-read-csv-file-csv-dictreader"]], "Users-header-cp1252.csv": [[1112, "id1"]], "Exercise: Refactoring - Extract CSV Reading Into Function (csv.dictreader)": [[1113, "exercise-refactoring-extract-csv-reading-into-function-csv-dictreader"]], "Exercise: Read CSV File (csv.reader)": [[1114, "exercise-read-csv-file-csv-reader"]], "Users-noheader-cp1252.csv": [[1114, "id2"]], "Exercise: Refactoring - Extract CSV Reading Into Function (csv.reader)": [[1115, "exercise-refactoring-extract-csv-reading-into-function-csv-reader"]], "User Database (Exercise Series)": [[1116, "user-database-exercise-series"]], "Exercise: MQTT: Publish User Records": [[1117, "exercise-mqtt-publish-user-records"]], "Exercise: Away From Raw Dictionaries": [[1118, "exercise-away-from-raw-dictionaries"]], "Test Code": [[1118, "test-code"], [1119, "test-code"], [1120, "test-code"]], "Exercise: Convert User Record To JSON And Back": [[1119, "exercise-convert-user-record-to-json-and-back"]], "Exercise: Refactoring - Extract Both CSV Formats Into Module": [[1120, "exercise-refactoring-extract-both-csv-formats-into-module"]], "Python: All Material, Interrelated": [[1121, "python-all-material-interrelated"]], "Python Programming: From Absolute Beginner to Advanced Productivity": [[1122, "python-programming-from-absolute-beginner-to-advanced-productivity"]], "Sample Trainings": [[1122, "sample-trainings"]], "More Information": [[1122, "more-information"]], "Python Links": [[1123, "python-links"]], "Advanced Python": [[1123, "advanced-python"], [1184, "advanced-python"]], "David Beazley": [[1123, "david-beazley"]], "Raymond Hettinger": [[1123, "raymond-hettinger"]], "Machine Learning, Artificial Intelligence": [[1124, "machine-learning-artificial-intelligence"]], "K-Means": [[1125, "k-means"]], "Topic Overview": [[1125, "topic-overview"], [1129, "topic-overview"]], "Artifacts": [[1125, "artifacts"]], "Topic Dependencies": [[1125, "topic-dependencies"], [1129, "topic-dependencies"]], "Linear Regression: Running Code (no Notebook!)": [[1126, "linear-regression-running-code-no-notebook"]], "Weather History Dataset": [[1127, "weather-history-dataset"]], "Linear Regression: Jupyter Notebook": [[1128, "Linear-Regression:-Jupyter-Notebook"]], "pandas.DataFrame": [[1128, "pandas.DataFrame"]], "Reading Data": [[1128, "Reading-Data"]], "Relationship Between pandas.DataFrame and numpy.ndarray": [[1128, "Relationship-Between-pandas.DataFrame-and-numpy.ndarray"]], "Extracting Input and Output Features from a pandas.DataFrame": [[1128, "Extracting-Input-and-Output-Features-from-a-pandas.DataFrame"]], "Plotting with matplotlib": [[1128, "Plotting-with-matplotlib"]], "Data Splicing: Split into Training and Test Data": [[1128, "Data-Splicing:-Split-into-Training-and-Test-Data"]], "Creating the Model: Algorithm + Training Data": [[1128, "Creating-the-Model:-Algorithm-+-Training-Data"]], "Verify the Model": [[1128, "Verify-the-Model"]], "Linear Regression": [[1129, "linear-regression"]], "Running Code": [[1129, "running-code"]], "Dataset": [[1129, "dataset"]], "Machine Learning: Concepts and Terminology": [[1130, "machine-learning-concepts-and-terminology"]], "How Far Is Mankind from Creating God": [[1130, "how-far-is-mankind-from-creating-god"]], "Basic Terminology: Algorithm and Model": [[1130, "basic-terminology-algorithm-and-model"]], "Basic Terminology: Features and Data": [[1130, "basic-terminology-features-and-data"]], "Types of Machine Learning": [[1130, "types-of-machine-learning"]], "Problems Solved": [[1130, "problems-solved"], [1152, "problems-solved"], [1159, "problems-solved"]], "CSV Files": [[1131, "csv-files"]], "CSV in its Origins": [[1131, "csv-in-its-origins"]], "The csv Module: csv.reader": [[1131, "the-csv-module-csv-reader"]], "And Tuple Unpacking?": [[1131, "and-tuple-unpacking"]], "Going Insane: CSV? SCSV?": [[1131, "going-insane-csv-scsv"]], "More Tuning Needed: Quoting": [[1131, "more-tuning-needed-quoting"]], "Tuning Options": [[1131, "tuning-options"]], "And Headings?": [[1131, "and-headings"]], "Enter csv.DictReader": [[1131, "enter-csv-dictreader"]], "DBAPI 2": [[1132, "dbapi-2"]], "Database Interfaces": [[1132, "database-interfaces"]], "DBAPI 2.0": [[1132, "dbapi-2-0"]], "Caveat: Transaction Lifetime": [[1132, "caveat-transaction-lifetime"]], "Caveat: Isolation": [[1132, "caveat-isolation"]], "Databases": [[1133, "databases"]], "DBAPI 2: PostgreSQL": [[1134, "dbapi-2-postgresql"]], "DBAPI 2 Example: Postgres": [[1134, "dbapi-2-example-postgres"]], "DBAPI 2: sqlite3": [[1135, "dbapi-2-sqlite3"]], "SQLite3": [[1135, "sqlite3"]], "SQLite3 Connection": [[1135, "sqlite3-connection"]], "SQLite3: Cursors and Statements": [[1135, "sqlite3-cursors-and-statements"]], "SQLite3: Filling the Database": [[1135, "sqlite3-filling-the-database"]], "SQLite3: Queries - Result Set": [[1135, "sqlite3-queries-result-set"]], "SQLite3: Bind Parameters": [[1135, "sqlite3-bind-parameters"]], "ASCII": [[1136, "ascii"]], "ISO Latin 1 (ISO-8859-1)": [[1136, "iso-latin-1-iso-8859-1"]], "And Python?": [[1136, "and-python"]], "Liebe Gr\u00fc\u00dfe, J\u00f6rg": [[1136, "liebe-grusze-jorg"]], "A Better Encoding for Liebe Gr\u00fc\u00dfe, J\u00f6rg: ISO-8859-1": [[1136, "a-better-encoding-for-liebe-grusze-jorg-iso-8859-1"]], "Encoding Mess": [[1136, "encoding-mess"]], "And \u795d\u597d, J\u00f6rg? (1)": [[1136, "and-jorg-1"]], "And \u795d\u597d, J\u00f6rg? (2)": [[1136, "and-jorg-2"]], "Enter UTF-8": [[1136, "enter-utf-8"]], "Boundary Code": [[1136, "boundary-code"]], "Ah Yes: decode()": [[1136, "ah-yes-decode"]], "And Source Encoding?": [[1136, "and-source-encoding"]], "Python: Miscellaneous Topics": [[1137, "python-miscellaneous-topics"]], "The import Statement (incomplete)": [[1138, "the-import-statement-incomplete"]], "Server/Broker": [[1139, "server-broker"]], "Starting the Service": [[1139, "starting-the-service"]], "Publishing a Message in Python": [[1139, "publishing-a-message-in-python"]], "Subscribing a Topic in Python": [[1139, "subscribing-a-topic-in-python"]], "Message Payload?": [[1139, "message-payload"]], "Pandas: Adding Rows": [[1140, "pandas-adding-rows"]], "Add Rows: Assign To New Row Number": [[1140, "add-rows-assign-to-new-row-number"]], "Add Rows: append() (Deprecated)": [[1140, "add-rows-append-deprecated"]], "Add Rows: Concatenating Frames": [[1140, "add-rows-concatenating-frames"]], "Pandas: Basics (DataFrame And Series)": [[1141, "pandas-basics-dataframe-and-series"]], "Naive: Objects, And Collections Of Objects": [[1141, "naive-objects-and-collections-of-objects"]], "Inverted: Objects, And Collections Of Objects (\u27f6 DataFrame)": [[1141, "inverted-objects-and-collections-of-objects-longrightarrow-dataframe"]], "Enter pandas, DataFrame, Series": [[1141, "enter-pandas-dataframe-series"]], "Selecting A Column \u27f6 Series": [[1141, "selecting-a-column-longrightarrow-series"]], "Selecting Multiple Columns": [[1141, "selecting-multiple-columns"]], "To Copy Or Not To Copy": [[1141, "to-copy-or-not-to-copy"]], "Pandas: Filters": [[1142, "pandas-filters"]], "Basic Filter Example": [[1142, "basic-filter-example"]], "Filter? Bitmap!": [[1142, "filter-bitmap"]], "Confusion: Filter/Column Addressing": [[1142, "confusion-filter-column-addressing"]], "Column Selection And Filters": [[1142, "column-selection-and-filters"]], "Boolean Expressions: Bitwise Operators! Braces!": [[1142, "boolean-expressions-bitwise-operators-braces"]], "Negation: ~": [[1142, "negation"]], "Neat Helpers": [[1142, "neat-helpers"]], "Pandas: Selecting Rows (And Columns) With iloc[]": [[1144, "pandas-selecting-rows-and-columns-with-iloc"]], "Row By Number: iloc[]": [[1144, "row-by-number-iloc"]], "So What Is A Row, Then?": [[1144, "so-what-is-a-row-then"]], "Selecting Multiple Rows": [[1144, "selecting-multiple-rows"]], "Selecting Rows And Columns": [[1144, "selecting-rows-and-columns"]], "Pandas: Indexes": [[1145, "pandas-indexes"]], "Default Index: Row Number": [[1145, "default-index-row-number"]], "Setting Custom Index": [[1145, "setting-custom-index"]], "Setting Custom Index, inplace=True": [[1145, "setting-custom-index-inplace-true"]], "Custom Index, And loc[]": [[1145, "custom-index-and-loc"]], "Custom Index, And iloc[]": [[1145, "custom-index-and-iloc"]], "Sorting DataFrame Object By Index Column": [[1145, "sorting-dataframe-object-by-index-column"]], "Pandas: Selecting Rows (And Columns) With loc[]": [[1146, "pandas-selecting-rows-and-columns-with-loc"]], "Rows (And Columns) By Label": [[1146, "rows-and-columns-by-label"]], "Hiccup: Slices Are Inclusive": [[1146, "hiccup-slices-are-inclusive"]], "Column Selection By Label": [[1146, "column-selection-by-label"]], "Columns By Slicing: Inclusive": [[1146, "columns-by-slicing-inclusive"]], "Pandas: Adding/Modifying Columns": [[1147, "pandas-adding-modifying-columns"]], "Example 1: Lowercasing A Column Of Strings": [[1147, "example-1-lowercasing-a-column-of-strings"]], "Example 1: Modifying The email Column": [[1147, "example-1-modifying-the-email-column"]], "Example 2: Adding A normalized_email Column": [[1147, "example-2-adding-a-normalized-email-column"]], "What If No Prebuilt Functionality Exists? apply() To The Rescue!": [[1147, "what-if-no-prebuilt-functionality-exists-apply-to-the-rescue"]], "apply() -ing Custom Functions": [[1147, "apply-ing-custom-functions"]], "XML: ElementTree (etree)": [[1148, "xml-elementtree-etree"]], "SAX and DOM": [[1148, "sax-and-dom"]], "ElementTree": [[1148, "elementtree"]], "A Very Simple Document": [[1148, "a-very-simple-document"]], "Text (1)": [[1148, "text-1"]], "Text (2)": [[1148, "text-2"]], "Writing XML Documents": [[1148, "writing-xml-documents"]], "Reading XML Documents": [[1148, "reading-xml-documents"]], "Visual Studio Code for Python Programming": [[1149, "visual-studio-code-for-python-programming"]], "Python: Project/Package Management": [[1150, "python-project-package-management"]], "Python Package Index (Livehacking Screenplay)": [[1151, "python-package-index-livehacking-screenplay"]], "Invocation": [[1151, "invocation"]], "Help": [[1151, "help"]], "Most Used Subcommands": [[1151, "most-used-subcommands"]], "Subcommand Help": [[1151, "subcommand-help"]], "System vs. User": [[1151, "system-vs-user"]], "Search": [[1151, "search"]], "Python Package Index (Slideshow)": [[1152, "python-package-index-slideshow"]], "Python Package Index (PyPI)": [[1152, "python-package-index-pypi"]], "Python Package Index": [[1153, "python-package-index"]], "Packaging, PyPI Upload (Link Collection)": [[1154, "packaging-pypi-upload-link-collection"]], "PyTest": [[1155, "pytest"]], "pytest Introduction, By Example": [[1156, "pytest-introduction-by-example"]], "Sample Project Structure": [[1156, "sample-project-structure"]], "pytest: Installation, Documentation": [[1156, "pytest-installation-documentation"]], "And PYTHONPATH?": [[1156, "and-pythonpath"]], "A Simple Test": [[1156, "a-simple-test"]], "Failing Tests": [[1156, "failing-tests"]], "A More Realistic Example": [[1156, "a-more-realistic-example"]], "Fixtures": [[1156, "fixtures"]], "Temporary Test Directory": [[1156, "temporary-test-directory"]], "Marking Tests as Expected to Fail": [[1156, "marking-tests-as-expected-to-fail"]], "The unittest Module": [[1157, "the-unittest-module"]], "Simplest Example": [[1157, "simplest-example"]], "Using a Fixture": [[1157, "using-a-fixture"]], "Multiple Test Cases With Same Fixture": [[1157, "multiple-test-cases-with-same-fixture"]], "Auto Recognizing Test Methods": [[1157, "auto-recognizing-test-methods"]], "The Meat of a Test": [[1157, "the-meat-of-a-test"]], "Recommendations": [[1157, "recommendations"]], "Virtual Environments (Livehacking Screenplay)": [[1158, "virtual-environments-livehacking-screenplay"]], "First: Help": [[1158, "first-help"]], "Local Package Installation": [[1158, "local-package-installation"]], "Freezing an Environment": [[1158, "freezing-an-environment"]], "Destroying an Environment": [[1158, "destroying-an-environment"]], "Recreating an Environment": [[1158, "recreating-an-environment"]], "Using Virtual Environments With Visual Studio Code": [[1158, "using-virtual-environments-with-visual-studio-code"]], "Virtual Environments (Slideshow)": [[1159, "virtual-environments-slideshow"]], "Virtual Environments (Links)": [[1159, "virtual-environments-links"]], "Virtual Environments": [[1160, "virtual-environments"]], "Code: Unittest: GTest Basics": [[1162, "code-unittest-gtest-basics"]], "Screenplay: Unittest: GTest Basics": [[1163, "screenplay-unittest-gtest-basics"]], "Before We Start": [[1163, "before-we-start"]], "Simplest Test: No Test": [[1163, "simplest-test-no-test"]], "Next Simplest: Single File": [[1163, "next-simplest-single-file"]], "Executing Tests Selectively": [[1163, "executing-tests-selectively"]], "Fatal Failure": [[1163, "fatal-failure"]], "FAIL()": [[1163, "fail"]], "ASSERT_*()": [[1163, "assert"]], "Non-Fatal Failure": [[1163, "non-fatal-failure"]], "Custom Message Output": [[1163, "custom-message-output"]], "Last Not Least: Structure": [[1163, "last-not-least-structure"]], "Test Cases and Suites": [[1163, "test-cases-and-suites"]], "Unittest: GTest Basics": [[1164, "unittest-gtest-basics"]], "Screenplay: Unittest: GTest and CMake": [[1165, "screenplay-unittest-gtest-and-cmake"]], "Installed: to be found in Standard Paths": [[1165, "installed-to-be-found-in-standard-paths"]], "CMake: \u201cFind Modules\u201d": [[1165, "cmake-find-modules"]], "Executing Tests As Part of Build": [[1165, "executing-tests-as-part-of-build"]], "Tests That Are Expected to Fail": [[1165, "tests-that-are-expected-to-fail"]], "Unittest: GTest and CMake": [[1166, "unittest-gtest-and-cmake"]], "Code: Unittest: GTest Fixtures": [[1167, "code-unittest-gtest-fixtures"]], "Screenplay: Unittest: GTest Fixtures": [[1168, "screenplay-unittest-gtest-fixtures"]], "Predefined Environment for a Number of Tests": [[1168, "predefined-environment-for-a-number-of-tests"]], "Environment is Isolated Per Test": [[1168, "environment-is-isolated-per-test"]], "More Complex Environment: SetUp(), TearDown()": [[1168, "more-complex-environment-setup-teardown"]], "Unittest: GTest Fixtures": [[1169, "unittest-gtest-fixtures"]], "Organisatorisches: Buchung, Kursablauf": [[1170, "organisatorisches-buchung-kursablauf"]], "Online Schulungen": [[1170, null]], "Buchung": [[1170, "buchung"]], "Kursgestaltung": [[1170, "kursgestaltung"]], "\u00dcbungen": [[1170, "ubungen"]], "Unterlagen & Download": [[1170, "unterlagen-download"]], "Linux from Scratch, 16.9.2013, M\u00fcnchen": [[1171, "linux-from-scratch-16-9-2013-munchen"]], "GRUB 0.97": [[1171, "grub-0-97"]], "Cross Systeme Bauen": [[1171, "cross-systeme-bauen"]], "Init, oder der Prozess mit der ID 1": [[1171, "init-oder-der-prozess-mit-der-id-1"]], "Verschiedenes": [[1171, "verschiedenes"]], "Shell Scripting/Bourne Again Shell (Bash)": [[1172, "shell-scripting-bourne-again-shell-bash"]], "Zielpublikum": [[1172, "zielpublikum"], [1174, "zielpublikum"], [1175, "zielpublikum"], [1180, "zielpublikum"], [1182, "zielpublikum"], [1187, "zielpublikum"], [1188, "zielpublikum"], [1194, "zielpublikum"]], "Kursinhalt": [[1172, "kursinhalt"], [1174, "kursinhalt"], [1175, "kursinhalt"], [1180, "kursinhalt"], [1182, "kursinhalt"], [1183, "kursinhalt"], [1187, "kursinhalt"], [1188, "kursinhalt"], [1189, "kursinhalt"], [1190, "kursinhalt"], [1192, "kursinhalt"], [1193, "kursinhalt"], [1194, "kursinhalt"]], "Empfohlene Vorkenntnisse": [[1172, "empfohlene-vorkenntnisse"], [1174, "empfohlene-vorkenntnisse"], [1175, "empfohlene-vorkenntnisse"], [1180, "empfohlene-vorkenntnisse"], [1182, "empfohlene-vorkenntnisse"], [1183, "empfohlene-vorkenntnisse"], [1187, "empfohlene-vorkenntnisse"], [1188, "empfohlene-vorkenntnisse"], [1189, "empfohlene-vorkenntnisse"], [1190, "empfohlene-vorkenntnisse"], [1192, "empfohlene-vorkenntnisse"], [1193, "empfohlene-vorkenntnisse"], [1194, "empfohlene-vorkenntnisse"]], "C: Einf\u00fchrung": [[1173, "c-einfuhrung"]], "C f\u00fcr Fortgeschrittene": [[1174, "c-fur-fortgeschrittene"]], "C++: Einf\u00fchrung und \u00dcberblick": [[1175, "c-einfuhrung-und-uberblick"]], "An Introduction to Modern C++, In Three Days": [[1176, "an-introduction-to-modern-c-in-three-days"]], "C and C++ Programming": [[1177, "c-and-c-programming"]], "CMake": [[1178, "cmake"]], "The Course": [[1178, null]], "Target Audience": [[1178, "target-audience"]], "Recommended Prior Knowledge": [[1178, "recommended-prior-knowledge"]], "Design Patterns For C++ Developers": [[1179, "design-patterns-for-c-developers"]], "Embedded Software Development: Hardware, Realtime, and Memory Management": [[1180, "embedded-software-development-hardware-realtime-and-memory-management"]], "Linux Kernel Driver Development": [[1181, "linux-kernel-driver-development"], [802, "linux-kernel-driver-development"]], "Course Contents": [[1181, "course-contents"]], "Sample Project": [[1181, "sample-project"]], "Linux Basics: Eine Einf\u00fchrung Anhand von Beispielen": [[1182, "linux-basics-eine-einfuhrung-anhand-von-beispielen"]], "GNU Make: Die Mutter aller Build Tools": [[1183, "gnu-make-die-mutter-aller-build-tools"]], "Herdt": [[1186, "herdt"]], "Eine Woche mit dem Raspberry Pi": [[1187, "eine-woche-mit-dem-raspberry-pi"]], "Subversion (SVN)": [[1188, "subversion-svn"]], "Linux Systems Programming: Introduction": [[1189, "linux-systems-programming-introduction"]], "Linux Systems Programming: Virtual Memory, IPC, Shared Libraries": [[1190, "linux-systems-programming-virtual-memory-ipc-shared-libraries"]], "Linux Systems Programming: Multithreading": [[1192, "linux-systems-programming-multithreading"]], "Linux Systems Programming: Network Programming": [[1193, "linux-systems-programming-network-programming"]], "Unittesting and Test Driven Development": [[1194, "unittesting-and-test-driven-development"]], "Exam: Embedded Computing 2 (2024-01-26)": [[113, "exam-embedded-computing-2-2024-01-26"]], "Jupyter Notebook: Python Basics (2024-01-29 - 2024-01-31)": [[341, "jupyter-notebook-python-basics-2024-01-29-2024-01-31"]], "Types, Operators, Expressions": [[410, "types-operators-expressions"]], "Program Flow": [[419, "program-flow"]], "Functions and Program Structure": [[426, "functions-and-program-structure"]], "Structures": [[436, "structures"]], "Memory": [[439, "memory"]], "Program Sanity": [[452, "program-sanity"]], "Performance": [[456, "performance"]], "Profiling": [[461, "profiling"]], "C++: Miscellaneous Live-Hacking": [[582, "c-miscellaneous-live-hacking"]], "Functions and Methods": [[605, "functions-and-methods"]], "C++ Template Basics": [[611, "c-template-basics"]], "Dynamic Memory Allocation, Resource Management": [[652, "dynamic-memory-allocation-resource-management"]], "The Standard Library: Miscellaneous Topics": [[661, "the-standard-library-miscellaneous-topics"]], "Functions, Functions": [[747, "functions-functions"]], "Topics and Dependencies": [[802, "topics-and-dependencies"]], "POSIX Threads": [[976, "posix-threads"]], "Python: The Language Fundamentals": [[1046, "python-the-language-fundamentals"]], "Random Material": [[1143, "random-material"]], "Unit Testing With googletest": [[1161, "unit-testing-with-googletest"]], "Agenda: Python Basics (2024-01-29 - 2024-01-31)": [[338, "agenda-python-basics-2024-01-29-2024-01-31"]], "Pandas (Data Science Basics)": [[338, "pandas-data-science-basics"]], "Python Basics (2024-01-29 - 2024-01-31)": [[375, "python-basics-2024-01-29-2024-01-31"], [339, "python-basics-2024-01-29-2024-01-31"], [340, "Python-Basics-(2024-01-29---2024-01-31)"]], "Bisher Gehaltene": [[375, "bisher-gehaltene"]], "Python Advanced (2023-11-22 - 2023-11-24)": [[375, "python-advanced-2023-11-22-2023-11-24"]], "Clean Code Development With Python (2023-03-28 - 2023-03-30)": [[375, "clean-code-development-with-python-2023-03-28-2023-03-30"]], "C++ For Embedded Developers (2023-03-20 - 2023-03-22)": [[375, "c-for-embedded-developers-2023-03-20-2023-03-22"]], "Python (2022-11-07 - 2022-11-10, 2022-12-01)": [[375, "python-2022-11-07-2022-11-10-2022-12-01"]], "C++: A New Language Starting In 2011 (2022-07-26 - 2022-07-27)": [[375, "c-a-new-language-starting-in-2011-2022-07-26-2022-07-27"]], "C++: A New Language Starting In 2011 (2022-06-14 - 2022-06-15)": [[375, "c-a-new-language-starting-in-2011-2022-06-14-2022-06-15"]], "Python Advanced (2022-03-15 - 2022-03-17)": [[375, "python-advanced-2022-03-15-2022-03-17"]], "Python Basics (2021-08-23 - 2021-08-25)": [[375, "python-basics-2021-08-23-2021-08-25"]], "Programmieren mit C++ (2021-07-12 - 2021-07-16)": [[375, "programmieren-mit-c-2021-07-12-2021-07-16"]], "Linux Basics, Shell Scripting (2019-03-29 - 1.4.2021)": [[375, "linux-basics-shell-scripting-2019-03-29-1-4-2021"]], "Python (22.3.2021 - 25.3.2021)": [[375, "python-22-3-2021-25-3-2021"]], "Python Advanced (15.3.2021 - 17.3.2021)": [[375, "python-advanced-15-3-2021-17-3-2021"]], "Linux Kernel Driver Development Basics (8.3.2021 - 12.3.2020)": [[375, "linux-kernel-driver-development-basics-8-3-2021-12-3-2020"]], "Programmierung Grundlagen, anhand von Python (13. und 14.1.2021)": [[375, "programmierung-grundlagen-anhand-von-python-13-und-14-1-2021"]], "Linux und Raspberry Pi (3.11.2020, 4.11.2020, 17.11.2020)": [[375, "linux-und-raspberry-pi-3-11-2020-4-11-2020-17-11-2020"]], "Python Basics (19.10.2020 - 22.10.2020)": [[375, "python-basics-19-10-2020-22-10-2020"]], "Python Advanced (13.5.2020 - 14.5.2020 bei einer Firma in Graz)": [[375, "python-advanced-13-5-2020-14-5-2020-bei-einer-firma-in-graz"]], "C++ f\u00fcr Embedded-Entwickler (30.3.2020 - 4.4.2020, bei einer Firma in Baden-W\u00fcrttemberg)": [[375, "c-fur-embedded-entwickler-30-3-2020-4-4-2020-bei-einer-firma-in-baden-wurttemberg"]], "IPC in Linux (10.1.2020, bei einer Firma in Graz)": [[375, "ipc-in-linux-10-1-2020-bei-einer-firma-in-graz"]], "Python/NumPy (12.11.2019 - 13.11.2019 in Graz)": [[375, "python-numpy-12-11-2019-13-11-2019-in-graz"]], "Python Advanced (9.10.2019 - 10.10.2019 bei einer Firma in Graz)": [[375, "python-advanced-9-10-2019-10-10-2019-bei-einer-firma-in-graz"]], "C f\u00fcr Fortgeschrittene (30.9.2019 - 4.10.2019 in Wiener Neustadt)": [[375, "c-fur-fortgeschrittene-30-9-2019-4-10-2019-in-wiener-neustadt"]], "Einf\u00fchrung in Raspberry Pi (8.7.2019 - 10.7.2019 in Graz)": [[375, "einfuhrung-in-raspberry-pi-8-7-2019-10-7-2019-in-graz"]], "Python Basics (24.6.2019 - 27.6.2019, bei einer Firma in Ober\u00f6sterreich)": [[375, "python-basics-24-6-2019-27-6-2019-bei-einer-firma-in-oberosterreich"]], "Linux Basics (13.6.2019 - 19.6.2019, bei einer Firma in Ober\u00f6sterreich)": [[375, "linux-basics-13-6-2019-19-6-2019-bei-einer-firma-in-oberosterreich"]], "Python Basics (3.6.2019 - 6.6.2019, bei einer Firma in Ober\u00f6sterreich)": [[375, "python-basics-3-6-2019-6-6-2019-bei-einer-firma-in-oberosterreich"]], "Linux Big Picture (27.5.2019 - 29.5.2019, bei einer Firma in Baden-W\u00fcrttemberg)": [[375, "linux-big-picture-27-5-2019-29-5-2019-bei-einer-firma-in-baden-wurttemberg"]], "Python Basics (23.5.2019 - 24.5.2019, bei einer Firma in der Obersteiermark)": [[375, "python-basics-23-5-2019-24-5-2019-bei-einer-firma-in-der-obersteiermark"]], "Korn Shell Scripting (20.5.2019 - 22.5.2019 bei einer Firma in Salzburg)": [[375, "korn-shell-scripting-20-5-2019-22-5-2019-bei-einer-firma-in-salzburg"]], "Linux Basics (13.5.2019 - 15.5.2019, bei einer Firma in Ober\u00f6sterreich)": [[375, "linux-basics-13-5-2019-15-5-2019-bei-einer-firma-in-oberosterreich"]], "C: Ausgew\u00e4hlte Themen (17.12.2018 - 19.12.2018 in Graz)": [[375, "c-ausgewahlte-themen-17-12-2018-19-12-2018-in-graz"]], "Python Basics (1.10.2018 - 4.10.2018, bei einer Firma in Ober\u00f6sterreich)": [[375, "python-basics-1-10-2018-4-10-2018-bei-einer-firma-in-oberosterreich"]], "Linux Basics, Shell Scripting (16.7.2018 - 20.7.2018, bei einer Firma in Ober\u00f6sterreich)": [[375, "linux-basics-shell-scripting-16-7-2018-20-7-2018-bei-einer-firma-in-oberosterreich"]], "Advanced C on Linux (9.7.2018 - 11.7.2018, Raum N\u00fcrnberg)": [[375, "advanced-c-on-linux-9-7-2018-11-7-2018-raum-nurnberg"]], "Linux f\u00fcr Fortgeschrittene (12.3.2018 - 16.3.2018, Oberb\u00fcren/Schweiz)": [[375, "linux-fur-fortgeschrittene-12-3-2018-16-3-2018-oberburen-schweiz"]], "Linux und Python (11.9.2017 - 13.9.2017, bei einer Firma im Raum M\u00fcnchen)": [[375, "linux-und-python-11-9-2017-13-9-2017-bei-einer-firma-im-raum-munchen"]], "Linux Lowlevel Programming (28.8.2017 - 30.8.2017, Raum N\u00fcrnberg)": [[375, "linux-lowlevel-programming-28-8-2017-30-8-2017-raum-nurnberg"]], "C Refresher (23.8.2017 - 24.8.2017, Raum N\u00fcrnberg)": [[375, "c-refresher-23-8-2017-24-8-2017-raum-nurnberg"]], "C++11: Ausgew\u00e4hlte Themen (6.6.2017 - 8.6.2017 bei einer Firma in Graz)": [[375, "c-11-ausgewahlte-themen-6-6-2017-8-6-2017-bei-einer-firma-in-graz"]], "Linux vom Programmiererstandpunkt (30.12.2016 in Wien)": [[375, "linux-vom-programmiererstandpunkt-30-12-2016-in-wien"]], "Embedded Linux anhand des Raspberry Pi (17.10.2016 - 21.10.2016 bei einer Firma in Baden-W\u00fcrttemberg)": [[375, "embedded-linux-anhand-des-raspberry-pi-17-10-2016-21-10-2016-bei-einer-firma-in-baden-wurttemberg"]], "Linux vom Programmiererstandpunkt (20.9.2016 in Wien)": [[375, "linux-vom-programmiererstandpunkt-20-9-2016-in-wien"]], "C for Advanced Users (5.7.2016 - 6.7.2016, Raum N\u00fcrnberg)": [[375, "c-for-advanced-users-5-7-2016-6-7-2016-raum-nurnberg"]], "Einf\u00fchrung in C++ (22.2.2016 - 26.2.2016 bei einer Firma in Graz)": [[375, "einfuhrung-in-c-22-2-2016-26-2-2016-bei-einer-firma-in-graz"]], "Advanced Python Workshop (20.2.2017 - 23.2.2017, bei einer Firma in Ober\u00f6sterreich)": [[375, "advanced-python-workshop-20-2-2017-23-2-2017-bei-einer-firma-in-oberosterreich"]], "Embedded Linux (30.11.2015 - 4.12.2015, Bodenseo, Hemmenhofen am Bodensee)": [[375, "embedded-linux-30-11-2015-4-12-2015-bodenseo-hemmenhofen-am-bodensee"]], "Linux Kernel, Realtime (17.11.2015 - 19.11.2015 bei einer Firma in Graz)": [[375, "linux-kernel-realtime-17-11-2015-19-11-2015-bei-einer-firma-in-graz"]], "Linux Basics (3.11.2015 - 5.11.2015 bei einer Firma in Graz)": [[375, "linux-basics-3-11-2015-5-11-2015-bei-einer-firma-in-graz"]], "Einf\u00fchrung in Python (5.10.2015 - 6.10.2015 in Wien)": [[375, "einfuhrung-in-python-5-10-2015-6-10-2015-in-wien"]], "Linux Basics, Systemnahe Programmierung (27.7.2015 - 31.7.2015, bei einer Firma in Ober\u00f6sterreich)": [[375, "linux-basics-systemnahe-programmierung-27-7-2015-31-7-2015-bei-einer-firma-in-oberosterreich"]], "Design Patterns and Test Driven Development (1.7.2015 - 3.7.2015, Raum N\u00fcrnberg)": [[375, "design-patterns-and-test-driven-development-1-7-2015-3-7-2015-raum-nurnberg"]], "C for Advanced Users (9.12.2014 - 11.12.2014, Raum N\u00fcrnberg)": [[375, "c-for-advanced-users-9-12-2014-11-12-2014-raum-nurnberg"]], "Python (1.6.2015 - 3.6.2015, Mathias Kettner in M\u00fcnchen)": [[375, "python-1-6-2015-3-6-2015-mathias-kettner-in-munchen"]], "Linux Basics, Kernel, Git (9.3.2015 - 13.3.2015, Siemens Braunschweig)": [[375, "linux-basics-kernel-git-9-3-2015-13-3-2015-siemens-braunschweig"]], "Embedded Linux (28.1.2015 - 30.1.2015, bei einer Firma im Raum M\u00fcnchen)": [[375, "embedded-linux-28-1-2015-30-1-2015-bei-einer-firma-im-raum-munchen"]], "C for Intermediate Users (9.12.2014 - 11.12.2014, Raum N\u00fcrnberg)": [[375, "c-for-intermediate-users-9-12-2014-11-12-2014-raum-nurnberg"]], "Linux from Scratch (1.12.2014 - 5.12.2014 LPD Hannover)": [[375, "linux-from-scratch-1-12-2014-5-12-2014-lpd-hannover"]], "Einf\u00fchrung in C++ (7.10.2014 - 10.10.2014 in Wien)": [[375, "einfuhrung-in-c-7-10-2014-10-10-2014-in-wien"]], "Systemnahe Programmierung unter Linux (14.4.2014 - 17.4.2014 in K\u00f6ln)": [[375, "systemnahe-programmierung-unter-linux-14-4-2014-17-4-2014-in-koln"]], "Einf\u00fchrung in C++ (3.3.2014 - 14.3.2014 in Wien)": [[375, "einfuhrung-in-c-3-3-2014-14-3-2014-in-wien"]], "Projektverwaltung mit Subversion und CMake (24.2.2014 - 27.2.2014 in Wien)": [[375, "projektverwaltung-mit-subversion-und-cmake-24-2-2014-27-2-2014-in-wien"]], "Einf\u00fchrung in Python (23.6.2014 - 26.6.2014, LKA Niedersachsen)": [[375, "einfuhrung-in-python-23-6-2014-26-6-2014-lka-niedersachsen"]], "Linux: Boot-Konfiguration und Systemnahe Programmierung (27.5.2014 - 30.5.2014 in Graz)": [[375, "linux-boot-konfiguration-und-systemnahe-programmierung-27-5-2014-30-5-2014-in-graz"]], "Einf\u00fchrung in C (11.11.2013 - 22.11.2013 in Wien)": [[375, "einfuhrung-in-c-11-11-2013-22-11-2013-in-wien"]], "Linux Basics (28.10.2013 - 31.10.2013 in Wien)": [[375, "linux-basics-28-10-2013-31-10-2013-in-wien"]], "Linux Basics, Embedded Linux (14.10.2013 - 15.10.2013 bei einer Firma im Raum M\u00fcnchen)": [[375, "linux-basics-embedded-linux-14-10-2013-15-10-2013-bei-einer-firma-im-raum-munchen"]], "Shell/Bash Scripting (7.10.2013 - 9.10.2013, bei einer Firma in Ober\u00f6sterreich)": [[375, "shell-bash-scripting-7-10-2013-9-10-2013-bei-einer-firma-in-oberosterreich"]], "Alles Linux (1.10.2013 - 4.10.2013, QualiVision in Z\u00fcrich)": [[375, "alles-linux-1-10-2013-4-10-2013-qualivision-in-zurich"]], "Linux from Scratch (16.9.2013 - 20.9.2013, Mathias Kettner in M\u00fcnchen)": [[375, "linux-from-scratch-16-9-2013-20-9-2013-mathias-kettner-in-munchen"]], "Linux Basics (2.7.2013 - 4.7.2013, bei einer Firma in Ober\u00f6sterreich)": [[375, "linux-basics-2-7-2013-4-7-2013-bei-einer-firma-in-oberosterreich"]], "Linux - Einf\u00fchrung und Programmierung (27.5.2013 - 29.5.2013, bei einer Firma im Raum M\u00fcnchen)": [[375, "linux-einfuhrung-und-programmierung-27-5-2013-29-5-2013-bei-einer-firma-im-raum-munchen"]], "GNU Make (23.4.2013 in Graz)": [[375, "gnu-make-23-4-2013-in-graz"]], "Linux Basics & Embedded (14.1.2013 - 18.1.2013, bei einer Firma in Ober\u00f6sterreich)": [[375, "linux-basics-embedded-14-1-2013-18-1-2013-bei-einer-firma-in-oberosterreich"]], "Linux Systemnah, Embedded, C++ (26.11.2012 - 28.11.2012, bei einer Firma in Hamburg)": [[375, "linux-systemnah-embedded-c-26-11-2012-28-11-2012-bei-einer-firma-in-hamburg"]], "Fehlerdiagnose unter Linux (19.11.2012 - 21.11.2012, Polizei Niedersachsen in Hannover)": [[375, "fehlerdiagnose-unter-linux-19-11-2012-21-11-2012-polizei-niedersachsen-in-hannover"]], "Systemnahe Programmierung unter Linux (29.10.2012 - 30.10.2012, bei einer Firma im Raum M\u00fcnchen)": [[375, "systemnahe-programmierung-unter-linux-29-10-2012-30-10-2012-bei-einer-firma-im-raum-munchen"]], "Einf\u00fchrung in Python (15.10.2012 - 17.10.2012, Mathias Kettner in M\u00fcnchen)": [[375, "einfuhrung-in-python-15-10-2012-17-10-2012-mathias-kettner-in-munchen"]], "Einf\u00fchrung in Python (25.9.2012 - 27.9.2012, STIA in Admont)": [[375, "einfuhrung-in-python-25-9-2012-27-9-2012-stia-in-admont"]], "Linux Systemnah (13.2.2012 bis 15.2.2012, bei einer Firma in Z\u00fcrich)": [[375, "linux-systemnah-13-2-2012-bis-15-2-2012-bei-einer-firma-in-zurich"]], "Einf\u00fchrung in Python (24.1.2012 - 26.1.2012, Mathias Kettner in M\u00fcnchen)": [[375, "einfuhrung-in-python-24-1-2012-26-1-2012-mathias-kettner-in-munchen"]], "Linux Systemnah (19.9.2011 - 22.9.2011, bei einer Firma in Ober\u00f6sterreich)": [[375, "linux-systemnah-19-9-2011-22-9-2011-bei-einer-firma-in-oberosterreich"]], "Linux Basics (13.9.2011 - 15.9.2011, bei einer Firma in Ober\u00f6sterreich)": [[375, "linux-basics-13-9-2011-15-9-2011-bei-einer-firma-in-oberosterreich"]], "Linux Systemnah (4.7.2011 - 7.7.2011, Bodenseo, Hemmenhofen am Bodensee)": [[375, "linux-systemnah-4-7-2011-7-7-2011-bodenseo-hemmenhofen-am-bodensee"]], "Linux Systemnah (14.2.2011 - 18.2.2011, Bodenseo, Hemmenhofen am Bodensee)": [[375, "linux-systemnah-14-2-2011-18-2-2011-bodenseo-hemmenhofen-am-bodensee"]], "Linux from Scratch (12.12.2010 - 17.12.2010, Mathias Kettner in M\u00fcnchen)": [[375, "linux-from-scratch-12-12-2010-17-12-2010-mathias-kettner-in-munchen"]], "Softwareentwicklung unter Linux (6.12.2010 - 10.12.2010, bei einer Firma in Darmstadt)": [[375, "softwareentwicklung-unter-linux-6-12-2010-10-12-2010-bei-einer-firma-in-darmstadt"]], "Softwareentwicklung unter Linux (24.11.2010 - 26.11.2010, bei einer Firma im Raum Ulm)": [[375, "softwareentwicklung-unter-linux-24-11-2010-26-11-2010-bei-einer-firma-im-raum-ulm"]], "Linux Kernel (25.10.2010 - 26.10.2010, Deutsche Bundeswehr in Wildflecken)": [[375, "linux-kernel-25-10-2010-26-10-2010-deutsche-bundeswehr-in-wildflecken"]], "Softwareentwicklung unter Linux (20.10.2010 - 24.10.2010, Mathias Kettner)": [[375, "softwareentwicklung-unter-linux-20-10-2010-24-10-2010-mathias-kettner"]], "More Datatypes, File IO": [[339, "more-datatypes-file-io"]], "os.listdir(), os.path.join()": [[339, "os-listdir-os-path-join"]], "Unit Testing (pytest), Project Management": [[339, "unit-testing-pytest-project-management"]], "Classes? Struct? Cell?": [[340, "Classes?-Struct?-Cell?"]], "Wuerfeln": [[340, "Wuerfeln"]], "Primeness, while": [[340, "Primeness,-while"]], "The range function": [[340, "The-range-function"]], "Sequences": [[340, "Sequences"]], "Misc Crap": [[340, "Misc-Crap"]], "Sequential Datatyoes": [[340, "Sequential-Datatyoes"]], "References, (Im)mutability, And Memory Management": [[340, "References,-(Im)mutability,-And-Memory-Management"]], "os, Und Einlesen Von Directories": [[340, "os,-Und-Einlesen-Von-Directories"]], "os.listdir(), os.path.join(), os.sep": [[340, "os.listdir(),-os.path.join(),-os.sep"]], "os.walk()": [[340, "os.walk()"]], "pathlib": [[340, "pathlib"]]}, "indexentries": {}})