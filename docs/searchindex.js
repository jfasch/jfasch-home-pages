Search.setIndex({"docnames": ["about/myself/contact", "about/myself/cv-de", "about/myself/index", "about/myself/projects-de", "about/myself/skills-de", "about/site/courses/angebot-2023-10-12", "about/site/courses/index", "about/site/courses/samples/detail/2021-04-12/Notebook", "about/site/courses/samples/detail/2021-04-12/index", "about/site/courses/samples/detail/2021-04-12/notebook-wrapper", "about/site/courses/samples/detail/index", "about/site/courses/samples/index", "about/site/courses/templates", "about/site/index", "about/site/opentraining/index", "about/site/opentraining/misc/draft-topics/index", "about/site/opentraining/misc/index", "about/site/opentraining/misc/s5/index", "about/site/opentraining/misc/s5/tests/index", "about/site/opentraining/misc/s5/tests/test-slides", "about/site/opentraining/misc/screencast", "about/site/opentraining/misc/topics-to-write", "about/site/opentraining/netidee/index", "about/site/opentraining/netidee/netidee-antrag", "about/site/opentraining/netidee/netidee-video-2min", "about/site/opentraining/usecases/agenda-subtract-known", "about/site/opentraining/usecases/duration", "about/site/opentraining/usecases/index", "about/site/opentraining/usecases/linking", "about/site/opentraining/usecases/menu", "about/site/opentraining/usecases/slides", "about/site/recipes/camera-ssh", "about/site/recipes/emoji", "about/site/recipes/index", "about/site/recipes/isoamsa", "about/site/recipes/isoamsr", "about/site/recipes/isonum", "about/site/recipes/layout-test", "about/site/recipes/mathml", "about/site/recipes/rst-cheatsheet", "about/site/recipes/sphinxish", "about/site/work-in-progress/2022-04-13/index", "about/site/work-in-progress/2022-04-13/seminar/block-before-googletest", "about/site/work-in-progress/2022-04-13/seminar/clean-code-craftsmanship", "about/site/work-in-progress/2022-04-13/seminar/enter-googletest", "about/site/work-in-progress/2022-04-13/seminar/index", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/find-error", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/group", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/overwrite-existing-files", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/overwrite-store-content-on-read", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/csv", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/group", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/other-indexes", "about/site/work-in-progress/2022-04-13/seminar/tasks/group", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/backingstore-interface", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/backingstore-monolithic", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/group", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/pass-store-in-ctor", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/store-enum-switch", "about/site/work-in-progress/blink/glt", "about/site/work-in-progress/blink/index", "about/site/work-in-progress/blink/installation", "about/site/work-in-progress/blink/pycon-2023", "about/site/work-in-progress/blink/screenplay", "about/site/work-in-progress/blog-queue/hochkoenig/index", "about/site/work-in-progress/blog-queue/index", "about/site/work-in-progress/blog-queue/sphinx", "about/site/work-in-progress/fh-joanneum/2019/cxx", "about/site/work-in-progress/fh-joanneum/2019/cxx_build", "about/site/work-in-progress/fh-joanneum/2019/cxx_iface", "about/site/work-in-progress/fh-joanneum/2019/cxx_oo_basics", "about/site/work-in-progress/fh-joanneum/2019/cxx_unittest", "about/site/work-in-progress/fh-joanneum/2019/ec", "about/site/work-in-progress/fh-joanneum/2019/embedded-computing-1", "about/site/work-in-progress/fh-joanneum/2019/embedded-computing-2", "about/site/work-in-progress/fh-joanneum/2019/exercise_mt_race", "about/site/work-in-progress/fh-joanneum/2019/exercise_mt_race_fixed", "about/site/work-in-progress/fh-joanneum/2019/git", "about/site/work-in-progress/fh-joanneum/2019/index", "about/site/work-in-progress/fh-joanneum/2019/linux", "about/site/work-in-progress/fh-joanneum/2019/linux_basics", "about/site/work-in-progress/fh-joanneum/2019/linux_dev_mgmt", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_avg_sensor", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_avg_sensor_parallel", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_led_display", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_sensors", "about/site/work-in-progress/fh-joanneum/2019/linux_gpio", "about/site/work-in-progress/fh-joanneum/2019/mt", "about/site/work-in-progress/fh-joanneum/2019/mt_lock", "about/site/work-in-progress/fh-joanneum/2019/mt_wait", "about/site/work-in-progress/fh-joanneum/2019/py_basics", "about/site/work-in-progress/fh-joanneum/2019/py_exercise_avg_display", "about/site/work-in-progress/fh-joanneum/2019/py_exercise_sensors", "about/site/work-in-progress/fh-joanneum/2019/py_web", "about/site/work-in-progress/fh-joanneum/2019/py_web_sensors", "about/site/work-in-progress/fh-joanneum/2019/python", "about/site/work-in-progress/fh-joanneum/2020/index", "about/site/work-in-progress/fh-joanneum/2020/ss2022", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-08", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-10", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-10-homework", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-21", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-22,24", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-28", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-04-01", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/index", "about/site/work-in-progress/fh-joanneum/2020/ws2022", "about/site/work-in-progress/fh-joanneum/2020/ws2022-questions-code-general", "about/site/work-in-progress/fh-joanneum/2020/ws2022-questions-yesno", "about/site/work-in-progress/fh-joanneum/2020/ws2022/lab-exam-2023-01-17", "about/site/work-in-progress/fh-joanneum/2021/exam-2023-06-30", "about/site/work-in-progress/fh-joanneum/2021/exam-2023-06-30-solved", "about/site/work-in-progress/fh-joanneum/2021/git/git", "about/site/work-in-progress/fh-joanneum/2021/index", "about/site/work-in-progress/fh-joanneum/2021/ss2023", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot-basic-integration", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot-display", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot-full-integration", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger-csv-sink", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger-integration", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger-mqtt-sink", "about/site/work-in-progress/fh-joanneum/2021/tasks/display-infrastructure", "about/site/work-in-progress/fh-joanneum/2021/tasks/group", "about/site/work-in-progress/fh-joanneum/2021/tasks/libgpiod-switch", "about/site/work-in-progress/fh-joanneum/2021/tasks/pwm-display", "about/site/work-in-progress/fh-joanneum/2021/tasks/sensor-interface", "about/site/work-in-progress/fh-joanneum/2021/tasks/sensor-w1", "about/site/work-in-progress/fh-joanneum/2021/tasks/switch-interface", "about/site/work-in-progress/fh-joanneum/2021/tasks/sysfs-gpio-switch", "about/site/work-in-progress/fh-joanneum/2021/ws2023-2024", "about/site/work-in-progress/fh-joanneum/index", "about/site/work-in-progress/git", "about/site/work-in-progress/index", "about/site/work-in-progress/packaging/index", "about/site/work-in-progress/project-xxx/audio-chip", "about/site/work-in-progress/project-xxx/debian-config", "about/site/work-in-progress/project-xxx/debian-kernel-package", "about/site/work-in-progress/project-xxx/hardware-bringup", "about/site/work-in-progress/project-xxx/index", "about/site/work-in-progress/project-xxx/kernel-upgrade-dirty", "about/site/work-in-progress/project-xxx/wait-hardware", "about/site/work-in-progress/project-xxx/yocto-kernel", "about/site/work-in-progress/python-training", "about/site/work-in-progress/screencast", "about/site/work-in-progress/seo", "about/site/work-in-progress/stacks", "about/site/work-in-progress/todo-misc", "about/site/work-in-progress/web", "blog/2010/07/beagleboard-how-to-repair-nand-also-known-as-40w", "blog/2011/01/porting-to-linux-there-s-always-a-better-way", "blog/2011/01/saving-solid-state-disk-life--gentoo", "blog/2012/04/Why-ps-sucks", "blog/2020/02/fedora-kernel-build", "blog/2020/03/custom-domain-gh-pages", "blog/2020/03/ms-teams-on-linux", "blog/2020/03/sphinx-gh-pages", "blog/2020/04/bbb", "blog/2020/09/traunstein", "blog/2021/08/grintovec", "blog/2021/09/xps13-shim-mok-brick/index", "blog/2022/09/cross-raspi", "blog/index", "index", "trainings/codex", "trainings/exercises", "trainings/index", "trainings/log/detail/2013-10-01/index", "trainings/log/detail/2015-11-30/index", "trainings/log/detail/2019-10-28/LiveHacking", "trainings/log/detail/2019-10-28/index", "trainings/log/detail/2019-11-12/code/BigPlan", "trainings/log/detail/2019-11-12/code/LiveHacking", "trainings/log/detail/2019-11-12/index", "trainings/log/detail/2020-01-10/Proposal", "trainings/log/detail/2020-01-10/index", "trainings/log/detail/2020-03-30/code/exercise-string/index", "trainings/log/detail/2020-03-30/index", "trainings/log/detail/2020-03-30/install-googletest", "trainings/log/detail/2020-03-30/setup", "trainings/log/detail/2020-03-30/vs-code", "trainings/log/detail/2020-05-12/code/index", "trainings/log/detail/2020-05-12/index", "trainings/log/detail/2020-05-18/Livehacking", "trainings/log/detail/2020-05-18/code/index", "trainings/log/detail/2020-05-18/index", "trainings/log/detail/2020-09-07/index", "trainings/log/detail/2020-09-28/index", "trainings/log/detail/2020-10-19/Notebook", "trainings/log/detail/2020-10-19/index", "trainings/log/detail/2020-11-03/index", "trainings/log/detail/2020-11-23/index", "trainings/log/detail/2020-11-30/index", "trainings/log/detail/2021-01-13/Notebook", "trainings/log/detail/2021-01-13/index", "trainings/log/detail/2021-01-13/notebook-wrapper", "trainings/log/detail/2021-02-22/index", "trainings/log/detail/2021-03-08/index", "trainings/log/detail/2021-03-15/Notebook", "trainings/log/detail/2021-03-15/index", "trainings/log/detail/2021-03-22/Notebook", "trainings/log/detail/2021-03-22/index", "trainings/log/detail/2021-03-29/index", "trainings/log/detail/2021-04-12/Notebook", "trainings/log/detail/2021-04-12/index", "trainings/log/detail/2021-04-12/notebook-wrapper", "trainings/log/detail/2021-05-03/Notebook", "trainings/log/detail/2021-05-03/index", "trainings/log/detail/2021-05-03/notebook-wrapper", "trainings/log/detail/2021-05-25/Notebook", "trainings/log/detail/2021-05-25/index", "trainings/log/detail/2021-06-14/index", "trainings/log/detail/2021-07-12/index", "trainings/log/detail/2021-08-02/index", "trainings/log/detail/2021-08-02/notebook", "trainings/log/detail/2021-08-23/Notebook", "trainings/log/detail/2021-08-23/exercises/sap-cleaned", "trainings/log/detail/2021-08-23/index", "trainings/log/detail/2021-08-23/notebook-wrapper", "trainings/log/detail/2021-08-31/Notebook", "trainings/log/detail/2021-08-31/index", "trainings/log/detail/2021-08-31/notebook-wrapper", "trainings/log/detail/2021-11-17/Notebook", "trainings/log/detail/2021-11-17/index", "trainings/log/detail/2021-11-17/notebook-wrapper", "trainings/log/detail/2021-12-01/2021-12-01", "trainings/log/detail/2021-12-01/index", "trainings/log/detail/2021-12-01/notebook-wrapper", "trainings/log/detail/2021-12-06/index", "trainings/log/detail/2022-01-17/index", "trainings/log/detail/2022-01-17/notebook", "trainings/log/detail/2022-01-17/notebook-wrapper", "trainings/log/detail/2022-02-23/Notebook", "trainings/log/detail/2022-02-23/index", "trainings/log/detail/2022-02-23/notebook-wrapper", "trainings/log/detail/2022-03-15/Notebook", "trainings/log/detail/2022-03-15/index", "trainings/log/detail/2022-03-15/notebook-wrapper", "trainings/log/detail/2022-03-23/Notebook", "trainings/log/detail/2022-03-23/index", "trainings/log/detail/2022-03-23/notebook-wrapper", "trainings/log/detail/2022-04-05/index", "trainings/log/detail/2022-04-05/notebook", "trainings/log/detail/2022-04-05/notebook-wrapper", "trainings/log/detail/2022-04-25/index", "trainings/log/detail/2022-04-25/notebook", "trainings/log/detail/2022-04-25/notebook-wrapper", "trainings/log/detail/2022-05-02/index", "trainings/log/detail/2022-05-02/notebook", "trainings/log/detail/2022-05-02/notebook-wrapper", "trainings/log/detail/2022-05-16/index", "trainings/log/detail/2022-05-16/notebook", "trainings/log/detail/2022-05-16/notebook-wrapper", "trainings/log/detail/2022-06-14/2022-05-11", "trainings/log/detail/2022-06-14/index", "trainings/log/detail/2022-07-26/index", "trainings/log/detail/2022-10-03/index", "trainings/log/detail/2022-10-11/index", "trainings/log/detail/2022-10-24/index", "trainings/log/detail/2022-11-07/index", "trainings/log/detail/2022-11-07/notebook", "trainings/log/detail/2022-11-07/notebook-wrapper", "trainings/log/detail/2022-11-16/index", "trainings/log/detail/2022-11-16/notebook", "trainings/log/detail/2022-11-16/notebook-wrapper", "trainings/log/detail/2023-01-23/index", "trainings/log/detail/2023-02-13/index", "trainings/log/detail/2023-03-13-Python-SAP/Demo/demo-notebook", "trainings/log/detail/2023-03-13-Python-SAP/demo", "trainings/log/detail/2023-03-13-Python-SAP/index", "trainings/log/detail/2023-03-13-Python-SAP/notebook", "trainings/log/detail/2023-03-13-Python-SAP/notebook-wrapper", "trainings/log/detail/2023-03-13-Python-SAP/original-agenda", "trainings/log/detail/2023-03-13-Python-SAP/sap-dataset/index", "trainings/log/detail/2023-03-13-Python-SAP/sap-dataset/sap-dataset", "trainings/log/detail/2023-03-20--C++-embedded/index", "trainings/log/detail/2023-03-28--Python-Clean-Code/index", "trainings/log/detail/2023-04-18--C++-embedded/index", "trainings/log/detail/2023-04-24--Python-Advanced/agenda", "trainings/log/detail/2023-04-24--Python-Advanced/index", "trainings/log/detail/2023-04-24--Python-Advanced/notebook", "trainings/log/detail/2023-04-24--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-05-15--Python-Basics/agenda", "trainings/log/detail/2023-05-15--Python-Basics/index", "trainings/log/detail/2023-05-15--Python-Basics/notebook", "trainings/log/detail/2023-05-15--Python-Basics/notebook-wrapper", "trainings/log/detail/2023-05-23--Linux-Basics/agenda", "trainings/log/detail/2023-05-23--Linux-Basics/index", "trainings/log/detail/2023-06-20--Python-Basics/agenda", "trainings/log/detail/2023-06-20--Python-Basics/index", "trainings/log/detail/2023-06-20--Python-Basics/notebook", "trainings/log/detail/2023-06-20--Python-Basics/notebook-wrapper", "trainings/log/detail/2023-07-03--CMake/agenda", "trainings/log/detail/2023-07-03--CMake/index", "trainings/log/detail/2023-09-25--Python-Advanced/index", "trainings/log/detail/2023-09-25--Python-Advanced/notebook", "trainings/log/detail/2023-09-25--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-10-09--Python-Advanced/index", "trainings/log/detail/2023-10-09--Python-Advanced/notebook", "trainings/log/detail/2023-10-09--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-10-24--Python-Advanced/agenda", "trainings/log/detail/2023-10-24--Python-Advanced/index", "trainings/log/detail/2023-10-24--Python-Advanced/notebook", "trainings/log/detail/2023-10-24--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-11-22--Python-Advanced/agenda", "trainings/log/detail/2023-11-22--Python-Advanced/index", "trainings/log/detail/2023-11-22--Python-Advanced/notebook", "trainings/log/detail/2023-11-22--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-11-27--CMake/agenda", "trainings/log/detail/2023-11-27--CMake/index", "trainings/log/detail/2023-11-29--Python-Basics/agenda", "trainings/log/detail/2023-11-29--Python-Basics/index", "trainings/log/detail/2023-11-29--Python-Basics/notebook", "trainings/log/detail/2023-11-29--Python-Basics/notebook-wrapper", "trainings/log/detail/2023-12-04--C++-Advanced/agenda", "trainings/log/detail/2023-12-04--C++-Advanced/index", "trainings/log/detail/2023-XX-XX-C++-embedded/index", "trainings/log/detail/2023-XX-XX-Python-SAP/index", "trainings/log/detail/2024-XX-XX--Python-Basics/agenda", "trainings/log/detail/FH-ECE-19/EC1/2021-05-12/screenplay-checker", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-abc", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-oo", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-unittest", "trainings/log/detail/FH-ECE-19/EC1/Exercises/fh-group", "trainings/log/detail/FH-ECE-19/EC1/Exercises/file-read", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/2021-05-20-G2", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/2021-05-21", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Checker-Explanations", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Datatypes", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Functions", "trainings/log/detail/FH-ECE-19/EC1/cloud-computer", "trainings/log/detail/FH-ECE-19/EC1/formales", "trainings/log/detail/FH-ECE-19/EC1/index", "trainings/log/detail/FH-ECE-19/EC1/log", "trainings/log/detail/FH-ECE-19/EC1/lv-de", "trainings/log/detail/FH-ECE-19/EC1/lv-en", "trainings/log/detail/FH-ECE-19/EC1/plan", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-07", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-12", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-28", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-11-15", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-11-29", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-12-14", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-01-10", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-01-12", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-02-15", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/index", "trainings/log/detail/FH-ECE-19/EC2/index", "trainings/log/detail/FH-ECE-19/EC2/test-material", "trainings/log/detail/FH-ECE-19/index", "trainings/log/detail/index", "trainings/log/index", "trainings/material/index", "trainings/material/soup/c/010-introduction/000-installation/topic", "trainings/material/soup/c/010-introduction/010-introduction/topic", "trainings/material/soup/c/010-introduction/020-getting-started/topic", "trainings/material/soup/c/010-introduction/030-variables-and-arithmetic-expressions/topic", "trainings/material/soup/c/010-introduction/040-exercise-fahrenheit-float/topic", "trainings/material/soup/c/010-introduction/050-the-for-statement/topic", "trainings/material/soup/c/010-introduction/060-exercise-fahrenheit-for/topic", "trainings/material/soup/c/010-introduction/070-symbolic-constants/topic", "trainings/material/soup/c/010-introduction/080-exercise-fahrenheit-cpp/topic", "trainings/material/soup/c/010-introduction/090-character-input-and-output/topic", "trainings/material/soup/c/010-introduction/100-exercise-wc/topic", "trainings/material/soup/c/010-introduction/110-arrays/topic", "trainings/material/soup/c/010-introduction/120-exercise-histogram/topic", "trainings/material/soup/c/010-introduction/130-functions/topic", "trainings/material/soup/c/010-introduction/140-exercise-power-declaration/topic", "trainings/material/soup/c/010-introduction/150-character-arrays/topic", "trainings/material/soup/c/010-introduction/160-exercise-string-read-line/topic", "trainings/material/soup/c/010-introduction/170-external-variables-and-scope/topic", "trainings/material/soup/c/010-introduction/group", "trainings/material/soup/c/020-types-operators-expressions/010-introduction/topic", "trainings/material/soup/c/020-types-operators-expressions/020-variable-names/topic", "trainings/material/soup/c/020-types-operators-expressions/030-data-types-and-sizes/topic", "trainings/material/soup/c/020-types-operators-expressions/040-constants/topic", "trainings/material/soup/c/020-types-operators-expressions/050-declarations/topic", "trainings/material/soup/c/020-types-operators-expressions/060-arithmetic-operators/topic", "trainings/material/soup/c/020-types-operators-expressions/070-relational-and-logical-operators/topic", "trainings/material/soup/c/020-types-operators-expressions/080-type-conversions/topic", "trainings/material/soup/c/020-types-operators-expressions/090-increment-and-decrement-operators/topic", "trainings/material/soup/c/020-types-operators-expressions/100-exercise-string-reduce/topic", "trainings/material/soup/c/020-types-operators-expressions/110-bitwise-operators/topic", "trainings/material/soup/c/020-types-operators-expressions/120-assignment-operators-and-expressions/topic", "trainings/material/soup/c/020-types-operators-expressions/130-conditional-expressions/topic", "trainings/material/soup/c/020-types-operators-expressions/140-precedence-and-order-of-evaluation/topic", "trainings/material/soup/c/020-types-operators-expressions/group", "trainings/material/soup/c/030-program-flow/010-statements-and-blocks/topic", "trainings/material/soup/c/030-program-flow/020-if-else/topic", "trainings/material/soup/c/030-program-flow/030-else-if/topic", "trainings/material/soup/c/030-program-flow/040-switch/topic", "trainings/material/soup/c/030-program-flow/050-loops-while-and-for/topic", "trainings/material/soup/c/030-program-flow/060-loops-do-while/topic", "trainings/material/soup/c/030-program-flow/070-break-and-continue/topic", "trainings/material/soup/c/030-program-flow/080-goto-and-labels/topic", "trainings/material/soup/c/030-program-flow/group", "trainings/material/soup/c/040-functions-and-program-structure/010-basics-of-functions/topic", "trainings/material/soup/c/040-functions-and-program-structure/020-external-variables/topic", "trainings/material/soup/c/040-functions-and-program-structure/030-header-files/topic", "trainings/material/soup/c/040-functions-and-program-structure/040-static-variables/topic", "trainings/material/soup/c/040-functions-and-program-structure/050-c-preprocessor/topic", "trainings/material/soup/c/040-functions-and-program-structure/060-c-preprocessor-advanced/topic", "trainings/material/soup/c/040-functions-and-program-structure/group", "trainings/material/soup/c/050-pointers-and-arrays/010-pointers-and-addresses/topic", "trainings/material/soup/c/050-pointers-and-arrays/020-pointers-and-function-arguments/topic", "trainings/material/soup/c/050-pointers-and-arrays/030-exercise-swap/topic", "trainings/material/soup/c/050-pointers-and-arrays/040-pointers-and-arrays/topic", "trainings/material/soup/c/050-pointers-and-arrays/050-command-line-arguments/topic", "trainings/material/soup/c/050-pointers-and-arrays/group", "trainings/material/soup/c/060-structures/010-basics-of-structures/topic", "trainings/material/soup/c/060-structures/020-structures-and-functions/topic", "trainings/material/soup/c/060-structures/030-typedef/topic", "trainings/material/soup/c/060-structures/group", "trainings/material/soup/c/070-memory/010-malloc/topic", "trainings/material/soup/c/070-memory/020-exercise-linked-list/topic", "trainings/material/soup/c/070-memory/group", "trainings/material/soup/c/080-advanced-language-features/010-volatile/topic", "trainings/material/soup/c/080-advanced-language-features/020-atomic/topic", "trainings/material/soup/c/080-advanced-language-features/030-alignment/topic", "trainings/material/soup/c/080-advanced-language-features/group", "trainings/material/soup/c/090-program-sanity/010-introduction/topic", "trainings/material/soup/c/090-program-sanity/020-integral-types/topic", "trainings/material/soup/c/090-program-sanity/030-discrete-values/topic", "trainings/material/soup/c/090-program-sanity/040-static/topic", "trainings/material/soup/c/090-program-sanity/050-const/topic", "trainings/material/soup/c/090-program-sanity/060-struct-initialization/topic", "trainings/material/soup/c/090-program-sanity/070-explicit-type-safety/topic", "trainings/material/soup/c/090-program-sanity/080-valgrind/topic", "trainings/material/soup/c/090-program-sanity/group", "trainings/material/soup/c/100-performance/010-introduction/topic", "trainings/material/soup/c/100-performance/020-computebound/topic", "trainings/material/soup/c/100-performance/030-memory/topic", "trainings/material/soup/c/100-performance/group", "trainings/material/soup/c/110-profiling/010-introduction/topic", "trainings/material/soup/c/110-profiling/020-gprof/topic", "trainings/material/soup/c/110-profiling/030-callgrind/topic", "trainings/material/soup/c/110-profiling/040-oprofile/topic", "trainings/material/soup/c/110-profiling/group", "trainings/material/soup/c/group", "trainings/material/soup/clean-code/book-messages", "trainings/material/soup/clean-code/craft-sw", "trainings/material/soup/clean-code/group", "trainings/material/soup/clean-code/intro-python/livehacking", "trainings/material/soup/cmake/basics", "trainings/material/soup/cmake/configure_file", "trainings/material/soup/cmake/cxx-and-rants", "trainings/material/soup/cmake/external-dependencies", "trainings/material/soup/cmake/group", "trainings/material/soup/cmake/installation", "trainings/material/soup/cmake/libraries", "trainings/material/soup/cmake/optional-code-approach-1", "trainings/material/soup/cmake/optional-code-approach-2", "trainings/material/soup/cmake/optional-code-problem", "trainings/material/soup/cmake/shared-libraries", "trainings/material/soup/cmake/structure", "trainings/material/soup/cmake/targets-properties", "trainings/material/soup/cmake/testing", "trainings/material/soup/cxx-code/index", "trainings/material/soup/cxx-design-patterns/abstract-factory/abstract-factory", "trainings/material/soup/cxx-design-patterns/adapter/adapter", "trainings/material/soup/cxx-design-patterns/command/command", "trainings/material/soup/cxx-design-patterns/command/socialdb", "trainings/material/soup/cxx-design-patterns/composite/composite", "trainings/material/soup/cxx-design-patterns/decorator/decorator", "trainings/material/soup/cxx-design-patterns/group", "trainings/material/soup/cxx-design-patterns/heating-screenplay/heating-screenplay", "trainings/material/soup/cxx-design-patterns/interpreter/interpreter", "trainings/material/soup/cxx-design-patterns/observer/observer", "trainings/material/soup/cxx-design-patterns/oo-principles", "trainings/material/soup/cxx-design-patterns/proxy/proxy", "trainings/material/soup/cxx-design-patterns/sensor-hierarchy", "trainings/material/soup/cxx-design-patterns/singleton/singleton", "trainings/material/soup/cxx-design-patterns/uml/uml", "trainings/material/soup/cxx-exercises/design-patterns/abstract-factory", "trainings/material/soup/cxx-exercises/design-patterns/adapter", "trainings/material/soup/cxx-exercises/design-patterns/command", "trainings/material/soup/cxx-exercises/design-patterns/composite", "trainings/material/soup/cxx-exercises/design-patterns/decorator", "trainings/material/soup/cxx-exercises/design-patterns/group", "trainings/material/soup/cxx-exercises/design-patterns/interpreter-and-adapter", "trainings/material/soup/cxx-exercises/design-patterns/interpreter-basic", "trainings/material/soup/cxx-exercises/design-patterns/observer", "trainings/material/soup/cxx-exercises/design-patterns/proxy-remote", "trainings/material/soup/cxx-exercises/design-patterns/proxy-round", "trainings/material/soup/cxx-exercises/design-patterns/singleton-flexible", "trainings/material/soup/cxx-exercises/design-patterns/singleton-flexible-strict", "trainings/material/soup/cxx-exercises/design-patterns/singleton-inflexible", "trainings/material/soup/cxx-exercises/design-patterns/solutions/abstract-factory", "trainings/material/soup/cxx-exercises/design-patterns/solutions/adapter", "trainings/material/soup/cxx-exercises/design-patterns/solutions/command", "trainings/material/soup/cxx-exercises/design-patterns/solutions/composite", "trainings/material/soup/cxx-exercises/design-patterns/solutions/decorator", "trainings/material/soup/cxx-exercises/design-patterns/solutions/group", "trainings/material/soup/cxx-exercises/design-patterns/solutions/interpreter-and-adapter", "trainings/material/soup/cxx-exercises/design-patterns/solutions/interpreter-basic", "trainings/material/soup/cxx-exercises/design-patterns/solutions/observer", "trainings/material/soup/cxx-exercises/design-patterns/solutions/proxy-remote", "trainings/material/soup/cxx-exercises/design-patterns/solutions/proxy-round", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-flexible", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-flexible-strict", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-inflexible", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-loop-function", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-no-polymorphism", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-random-sensor", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/group", "trainings/material/soup/cxx-exercises/group", "trainings/material/soup/cxx-exercises/nopoly-display-led-stripe/display-led-stripe-nopoly", "trainings/material/soup/cxx-exercises/nopoly-hysteresis/hysteresis-nopoly", "trainings/material/soup/cxx-exercises/nopoly-sensor-avg/sensor-avg-nopoly", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-const-nopoly", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-mock-nopoly", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-random-nopoly", "trainings/material/soup/cxx-exercises/nopoly-switch-mock/switch-mock-nopoly", "trainings/material/soup/cxx-exercises/oo-shapes/shapes", "trainings/material/soup/cxx-exercises/project-setup", "trainings/material/soup/cxx-exercises/sensor-interface/sensor-interface", "trainings/material/soup/cxx-exercises/sensor-w1-factory/sensor-w1-factory", "trainings/material/soup/cxx-exercises/sensor-w1/sensor-w1", "trainings/material/soup/cxx-exercises/stl/algo", "trainings/material/soup/cxx-exercises/stl/filter-generic", "trainings/material/soup/cxx-exercises/stl/filter-greater-10", "trainings/material/soup/cxx-exercises/stl/filter-odd", "trainings/material/soup/cxx-exercises/stl/group", "trainings/material/soup/cxx-exercises/stl/map", "trainings/material/soup/cxx-exercises/stl/sensor-repository/group", "trainings/material/soup/cxx-exercises/stl/sensor-repository/insert-no-overwrite", "trainings/material/soup/cxx-exercises/stl/sensor-repository/insert-sunny", "trainings/material/soup/cxx-exercises/stl/sensor-repository/lookup-not-found", "trainings/material/soup/cxx-exercises/stl/sensor-repository/lookup-sunny", "trainings/material/soup/cxx-exercises/stl/sensor-repository/no-memleak", "trainings/material/soup/cxx-exercises/stl/sensor-repository/remove-not-found", "trainings/material/soup/cxx-exercises/stl/sensor-repository/remove-sunny", "trainings/material/soup/cxx-exercises/stl/sensor-repository/size-const", "trainings/material/soup/cxx-exercises/stl/uniq", "trainings/material/soup/cxx-exercises/stl/vector", "trainings/material/soup/cxx-todo/index", "trainings/material/soup/cxx/cxx_class_templates/code/index", "trainings/material/soup/cxx/cxx_class_templates/screenplay", "trainings/material/soup/cxx/cxx_class_templates/topic", "trainings/material/soup/cxx/cxx_dynamic_memory/code/index", "trainings/material/soup/cxx/cxx_dynamic_memory/screenplay", "trainings/material/soup/cxx/cxx_dynamic_memory/topic", "trainings/material/soup/cxx/cxx_global_initialization/code/index", "trainings/material/soup/cxx/cxx_global_initialization/screenplay", "trainings/material/soup/cxx/cxx_global_initialization/topic", "trainings/material/soup/cxx/cxx_inheritance_virtual/code/index", "trainings/material/soup/cxx/cxx_inheritance_virtual/screenplay", "trainings/material/soup/cxx/cxx_inheritance_virtual/topic", "trainings/material/soup/cxx/cxx_ownership_raii/code/index", "trainings/material/soup/cxx/cxx_ownership_raii/screenplay", "trainings/material/soup/cxx/cxx_ownership_raii/topic", "trainings/material/soup/cxx/cxx_stl_container_intro/code/index", "trainings/material/soup/cxx/cxx_stl_container_intro/screenplay", "trainings/material/soup/cxx/cxx_stl_container_intro/topic", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/code/index", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/screenplay", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/topic", "trainings/material/soup/cxx/group", "trainings/material/soup/cxx03/001-introduction/topic", "trainings/material/soup/cxx03/020-data-encapsulation/c", "trainings/material/soup/cxx03/020-data-encapsulation/copy-basics", "trainings/material/soup/cxx03/020-data-encapsulation/cpp-introduction", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-custom", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-default", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-dtor", "trainings/material/soup/cxx03/020-data-encapsulation/group", "trainings/material/soup/cxx03/020-data-encapsulation/initializer-list", "trainings/material/soup/cxx03/020-data-encapsulation/object-copy", "trainings/material/soup/cxx03/030-functions-and-methods/010-overloading/topic", "trainings/material/soup/cxx03/030-functions-and-methods/020-methods/topic", "trainings/material/soup/cxx03/030-functions-and-methods/030-const/topic", "trainings/material/soup/cxx03/030-functions-and-methods/040-this/topic", "trainings/material/soup/cxx03/030-functions-and-methods/050-references/topic", "trainings/material/soup/cxx03/030-functions-and-methods/060-static/topic", "trainings/material/soup/cxx03/030-functions-and-methods/065-static-member-variables/topic", "trainings/material/soup/cxx03/030-functions-and-methods/070-operators/topic", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-cuboid", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-point", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-point3d", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-rectangle", "trainings/material/soup/cxx03/030-functions-and-methods/group", "trainings/material/soup/cxx03/040-exceptions/010-basics/topic", "trainings/material/soup/cxx03/040-exceptions/020-try-catch/topic", "trainings/material/soup/cxx03/040-exceptions/group", "trainings/material/soup/cxx03/050-templates/010-function-templates/topic", "trainings/material/soup/cxx03/050-templates/020-class-templates/topic", "trainings/material/soup/cxx03/050-templates/group", "trainings/material/soup/cxx03/060-stl/010-basics/algo-copy", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-algo", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-basics", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-difference", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-out-of-range", "trainings/material/soup/cxx03/060-stl/010-basics/topic", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/topic", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-and-copy", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-basic", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-pointer-arith", "trainings/material/soup/cxx03/060-stl/020-algorithm/binary_search", "trainings/material/soup/cxx03/060-stl/020-algorithm/copy", "trainings/material/soup/cxx03/060-stl/020-algorithm/find", "trainings/material/soup/cxx03/060-stl/020-algorithm/find_if", "trainings/material/soup/cxx03/060-stl/020-algorithm/for_each", "trainings/material/soup/cxx03/060-stl/020-algorithm/group", "trainings/material/soup/cxx03/060-stl/020-algorithm/lower_bound", "trainings/material/soup/cxx03/060-stl/020-algorithm/reverse", "trainings/material/soup/cxx03/060-stl/020-algorithm/reverse_copy", "trainings/material/soup/cxx03/060-stl/020-algorithm/sort", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/basics", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/group", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/list", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/vector", "trainings/material/soup/cxx03/060-stl/050-associative-containers/basics", "trainings/material/soup/cxx03/060-stl/050-associative-containers/group", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-init-fill", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-insert", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-remove", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-search", "trainings/material/soup/cxx03/060-stl/050-associative-containers/multimap", "trainings/material/soup/cxx03/060-stl/allocators/allocator_basics", "trainings/material/soup/cxx03/060-stl/allocators/group", "trainings/material/soup/cxx03/060-stl/exercises/group", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/exercise", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/group", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/solution", "trainings/material/soup/cxx03/060-stl/group", "trainings/material/soup/cxx03/070-dynamic-memory/000-todo/topic", "trainings/material/soup/cxx03/070-dynamic-memory/group", "trainings/material/soup/cxx03/100-inheritance-oo-design/basics", "trainings/material/soup/cxx03/100-inheritance-oo-design/destructor", "trainings/material/soup/cxx03/100-inheritance-oo-design/group", "trainings/material/soup/cxx03/100-inheritance-oo-design/interface", "trainings/material/soup/cxx03/100-inheritance-oo-design/polymorphism", "trainings/material/soup/cxx03/100-inheritance-oo-design/private-protected", "trainings/material/soup/cxx03/100-inheritance-oo-design/virtual-destructor", "trainings/material/soup/cxx03/100-inheritance-oo-design/virtual-method", "trainings/material/soup/cxx03/900-standard-library-miscellanea/group", "trainings/material/soup/cxx03/900-standard-library-miscellanea/string/topic", "trainings/material/soup/cxx03/exercises-misc/american-flag/exercise", "trainings/material/soup/cxx03/exercises-misc/fh-questions", "trainings/material/soup/cxx03/exercises-misc/group", "trainings/material/soup/cxx03/exercises-misc/sum-integers-from-stdin/exercise", "trainings/material/soup/cxx03/exercises-userdb/group", "trainings/material/soup/cxx03/exercises-userdb/user-access-methods/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-const-members/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-const/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-default-ctor/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-simple-method/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-to-cxx-ctor/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-insert/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-search-find_if/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-search-notfound-exception/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-search/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-vector/exercise", "trainings/material/soup/cxx03/group", "trainings/material/soup/cxx11/010-introduction/group", "trainings/material/soup/cxx11/010-introduction/history", "trainings/material/soup/cxx11/010-introduction/overview-livehacking", "trainings/material/soup/cxx11/020-new-language-features/010-strongly-typed-enums/topic", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/group", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/implementor-view", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/intro", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/mess", "trainings/material/soup/cxx11/020-new-language-features/050-delegating-ctor/topic", "trainings/material/soup/cxx11/020-new-language-features/055-constexpr/topic", "trainings/material/soup/cxx11/020-new-language-features/060-move/afterword", "trainings/material/soup/cxx11/020-new-language-features/060-move/group", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-smartptr-move", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-string-move", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-using-string-move", "trainings/material/soup/cxx11/020-new-language-features/060-move/overview", "trainings/material/soup/cxx11/020-new-language-features/070-miscellaneous/topic", "trainings/material/soup/cxx11/020-new-language-features/auto", "trainings/material/soup/cxx11/020-new-language-features/concepts/group", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-1-conceptless", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-2-conceptless-error", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-3-concept-integral", "trainings/material/soup/cxx11/020-new-language-features/concepts/links", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-1-good-old-func", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-2-need-template", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-4-concept-has-size", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-5-concept-index-ret-double", "trainings/material/soup/cxx11/020-new-language-features/coroutines/group", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/fibo-generator", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/fibonacci", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/generator-h", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/generator-hello", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/simplest", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend-iter", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend-next", "trainings/material/soup/cxx11/020-new-language-features/default", "trainings/material/soup/cxx11/020-new-language-features/delete", "trainings/material/soup/cxx11/020-new-language-features/final", "trainings/material/soup/cxx11/020-new-language-features/group", "trainings/material/soup/cxx11/020-new-language-features/lambda/group", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-capture", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-is-functor", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-is-functor-pitfall", "trainings/material/soup/cxx11/020-new-language-features/modules", "trainings/material/soup/cxx11/020-new-language-features/override", "trainings/material/soup/cxx11/020-new-language-features/range-based-for", "trainings/material/soup/cxx11/020-new-language-features/range-based-for-map", "trainings/material/soup/cxx11/020-new-language-features/ranges/good-bad", "trainings/material/soup/cxx11/020-new-language-features/ranges/group", "trainings/material/soup/cxx11/020-new-language-features/ranges/intro", "trainings/material/soup/cxx11/020-new-language-features/ranges/links", "trainings/material/soup/cxx11/020-new-language-features/structured-binding", "trainings/material/soup/cxx11/030-smart-pointers/040-closing-words/topic", "trainings/material/soup/cxx11/030-smart-pointers/group", "trainings/material/soup/cxx11/030-smart-pointers/introduction", "trainings/material/soup/cxx11/030-smart-pointers/introduction-livehack", "trainings/material/soup/cxx11/030-smart-pointers/sharedptr", "trainings/material/soup/cxx11/030-smart-pointers/uniqueptr", "trainings/material/soup/cxx11/030-smart-pointers/weakptr", "trainings/material/soup/cxx11/035-perfect-forwarding/topic", "trainings/material/soup/cxx11/040-bind-function/010-bind/topic", "trainings/material/soup/cxx11/040-bind-function/020-function/topic", "trainings/material/soup/cxx11/040-bind-function/group", "trainings/material/soup/cxx11/050-multithreading/010-introduction/topic", "trainings/material/soup/cxx11/050-multithreading/020-thread/topic", "trainings/material/soup/cxx11/050-multithreading/030-race-conditions/topic", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/atomics", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/mutex", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/scoped-locking", "trainings/material/soup/cxx11/050-multithreading/condition-variable", "trainings/material/soup/cxx11/050-multithreading/group", "trainings/material/soup/cxx11/050-multithreading/promise-future", "trainings/material/soup/cxx11/100-miscellaneous/010-chrono/topic", "trainings/material/soup/cxx11/100-miscellaneous/any-variant-optional/variant", "trainings/material/soup/cxx11/100-miscellaneous/group", "trainings/material/soup/cxx11/drafts/embedded-problems/allocator", "trainings/material/soup/cxx11/drafts/embedded-problems/classic-virtual", "trainings/material/soup/cxx11/drafts/embedded-problems/group", "trainings/material/soup/cxx11/drafts/embedded-problems/related-no-virtual", "trainings/material/soup/cxx11/drafts/embedded-problems/type-erasure", "trainings/material/soup/cxx11/drafts/embedded-problems/unrelated", "trainings/material/soup/cxx11/drafts/embedded-problems/variant-automatic-visit", "trainings/material/soup/cxx11/drafts/embedded-problems/variant-manual-if", "trainings/material/soup/cxx11/drafts/embedded-problems/variant-manual-visit", "trainings/material/soup/cxx11/drafts/embedded-problems/why-replace-virtual", "trainings/material/soup/cxx11/drafts/group", "trainings/material/soup/cxx11/exercises/bag-copy", "trainings/material/soup/cxx11/exercises/bag-shared", "trainings/material/soup/cxx11/exercises/bag-unique", "trainings/material/soup/cxx11/exercises/group", "trainings/material/soup/cxx11/filesystem/topic", "trainings/material/soup/cxx11/group", "trainings/material/soup/graph", "trainings/material/soup/index", "trainings/material/soup/kernel/cdev-auto/screenplay", "trainings/material/soup/kernel/cdev-auto/slides", "trainings/material/soup/kernel/cdev-auto/topic", "trainings/material/soup/kernel/cdev-file-operations/screenplay", "trainings/material/soup/kernel/cdev-file-operations/slides", "trainings/material/soup/kernel/cdev-file-operations/topic", "trainings/material/soup/kernel/cdev-first-functionality/slides", "trainings/material/soup/kernel/cdev-first-functionality/topic", "trainings/material/soup/kernel/cdev-manual/screenplay", "trainings/material/soup/kernel/cdev-manual/slides", "trainings/material/soup/kernel/cdev-manual/topic", "trainings/material/soup/kernel/cdev-multiple-devices/slides", "trainings/material/soup/kernel/cdev-multiple-devices/topic", "trainings/material/soup/kernel/cdev-refactoring/screenplay", "trainings/material/soup/kernel/cdev-refactoring/slides", "trainings/material/soup/kernel/cdev-refactoring/topic", "trainings/material/soup/kernel/dma/slides", "trainings/material/soup/kernel/dma/topic", "trainings/material/soup/kernel/fedora-kernel-build/screenplay", "trainings/material/soup/kernel/fedora-kernel-build/topic", "trainings/material/soup/kernel/fedora-module-build/screenplay", "trainings/material/soup/kernel/fedora-module-build/topic", "trainings/material/soup/kernel/group", "trainings/material/soup/kernel/hello-world/slides", "trainings/material/soup/kernel/hello-world/topic", "trainings/material/soup/kernel/interrupt-coding/slides", "trainings/material/soup/kernel/interrupt-coding/topic", "trainings/material/soup/kernel/interrupt/slides", "trainings/material/soup/kernel/interrupt/topic", "trainings/material/soup/kernel/iomemory/slides", "trainings/material/soup/kernel/iomemory/topic", "trainings/material/soup/kernel/kmalloc/slides", "trainings/material/soup/kernel/kmalloc/topic", "trainings/material/soup/kernel/list/slides", "trainings/material/soup/kernel/list/topic", "trainings/material/soup/kernel/mutex-coding/slides", "trainings/material/soup/kernel/mutex-coding/topic", "trainings/material/soup/kernel/mutex/slides", "trainings/material/soup/kernel/mutex/topic", "trainings/material/soup/kernel/netdev/slides", "trainings/material/soup/kernel/netdev/topic", "trainings/material/soup/kernel/pci/slides", "trainings/material/soup/kernel/pci/topic", "trainings/material/soup/kernel/process-vs-atomic/slides", "trainings/material/soup/kernel/process-vs-atomic/topic", "trainings/material/soup/kernel/raspi-kernel-build/story", "trainings/material/soup/kernel/raspi-kernel-build/topic", "trainings/material/soup/kernel/sample-project", "trainings/material/soup/kernel/spinlock-coding/slides", "trainings/material/soup/kernel/spinlock-coding/topic", "trainings/material/soup/kernel/spinlock/slides", "trainings/material/soup/kernel/spinlock/topic", "trainings/material/soup/kernel/stub-sysprog-dup/topic", "trainings/material/soup/kernel/time_timer-coding/slides", "trainings/material/soup/kernel/time_timer-coding/topic", "trainings/material/soup/kernel/time_timer/slides", "trainings/material/soup/kernel/time_timer/topic", "trainings/material/soup/kernel/todo", "trainings/material/soup/kernel/usermem/screenplay", "trainings/material/soup/kernel/usermem/slides", "trainings/material/soup/kernel/usermem/topic", "trainings/material/soup/kernel/waitqueue/screenplay", "trainings/material/soup/kernel/waitqueue/slides", "trainings/material/soup/kernel/waitqueue/topic", "trainings/material/soup/kernel/workqueue/screenplay", "trainings/material/soup/kernel/workqueue/slides", "trainings/material/soup/kernel/workqueue/topic", "trainings/material/soup/linux/basics/archiving-compression/exercises", "trainings/material/soup/linux/basics/archiving-compression/group", "trainings/material/soup/linux/basics/archiving-compression/gzip", "trainings/material/soup/linux/basics/archiving-compression/overview", "trainings/material/soup/linux/basics/archiving-compression/tar", "trainings/material/soup/linux/basics/exercises/FH-SS2022-EXAM-01-G1", "trainings/material/soup/linux/basics/exercises/FH-SS2022-EXAM-01-G2", "trainings/material/soup/linux/basics/exercises/group", "trainings/material/soup/linux/basics/group", "trainings/material/soup/linux/basics/intro/demo-everything-is-a-file", "trainings/material/soup/linux/basics/intro/environment", "trainings/material/soup/linux/basics/intro/exercises/fh-questions", "trainings/material/soup/linux/basics/intro/group", "trainings/material/soup/linux/basics/intro/login", "trainings/material/soup/linux/basics/intro/overview", "trainings/material/soup/linux/basics/intro/process", "trainings/material/soup/linux/basics/intro/process-tree", "trainings/material/soup/linux/basics/intro/wsl", "trainings/material/soup/linux/basics/io-redirection-pipes/exercises", "trainings/material/soup/linux/basics/io-redirection-pipes/group", "trainings/material/soup/linux/basics/io-redirection-pipes/io-redirection", "trainings/material/soup/linux/basics/io-redirection-pipes/io-redirection-swap-stdout-stderr", "trainings/material/soup/linux/basics/io-redirection-pipes/pipes", "trainings/material/soup/linux/basics/permissions/basics", "trainings/material/soup/linux/basics/permissions/exercises/credentials", "trainings/material/soup/linux/basics/permissions/exercises/fh-questions", "trainings/material/soup/linux/basics/permissions/exercises/fh-questions-nocheat", "trainings/material/soup/linux/basics/permissions/exercises/group", "trainings/material/soup/linux/basics/permissions/exercises/private-directory", "trainings/material/soup/linux/basics/permissions/exercises/private-directory-question", "trainings/material/soup/linux/basics/permissions/exercises/public-directory", "trainings/material/soup/linux/basics/permissions/exercises/public-directory-question", "trainings/material/soup/linux/basics/permissions/exercises/shared-file", "trainings/material/soup/linux/basics/permissions/group", "trainings/material/soup/linux/basics/permissions/setuid", "trainings/material/soup/linux/basics/permissions/setuid-livedemo", "trainings/material/soup/linux/basics/permissions/sticky", "trainings/material/soup/linux/basics/permissions/umask", "trainings/material/soup/linux/basics/shell/commandline", "trainings/material/soup/linux/basics/shell/configfiles", "trainings/material/soup/linux/basics/shell/cp", "trainings/material/soup/linux/basics/shell/cwd", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/copy-tree", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-copy-files", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-create-files", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-move-files", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/group", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/mkdir-p-rm-r", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/rm-rf", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/rm-tree", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/verify-hierarchy", "trainings/material/soup/linux/basics/shell/exercises/fh-questions", "trainings/material/soup/linux/basics/shell/exercises/group", "trainings/material/soup/linux/basics/shell/exercises/ls/dev-types", "trainings/material/soup/linux/basics/shell/exercises/ls/etc-passwd-size", "trainings/material/soup/linux/basics/shell/exercises/ls/group", "trainings/material/soup/linux/basics/shell/exercises/ls/home-permissions", "trainings/material/soup/linux/basics/shell/file_dir_create_rm", "trainings/material/soup/linux/basics/shell/group", "trainings/material/soup/linux/basics/shell/links", "trainings/material/soup/linux/basics/shell/ls", "trainings/material/soup/linux/basics/shell/mv", "trainings/material/soup/linux/basics/shell/paths", "trainings/material/soup/linux/basics/text-tools/cat", "trainings/material/soup/linux/basics/text-tools/cut", "trainings/material/soup/linux/basics/text-tools/exercises", "trainings/material/soup/linux/basics/text-tools/find", "trainings/material/soup/linux/basics/text-tools/grep", "trainings/material/soup/linux/basics/text-tools/group", "trainings/material/soup/linux/basics/text-tools/head-tail", "trainings/material/soup/linux/basics/text-tools/less", "trainings/material/soup/linux/basics/text-tools/overview", "trainings/material/soup/linux/drafts/group", "trainings/material/soup/linux/drafts/yocto", "trainings/material/soup/linux/group", "trainings/material/soup/linux/hardware/brushless-motor/topic", "trainings/material/soup/linux/hardware/can/10-intro", "trainings/material/soup/linux/hardware/can/20-interfaces", "trainings/material/soup/linux/hardware/can/30-programming", "trainings/material/soup/linux/hardware/can/40-harware", "trainings/material/soup/linux/hardware/can/group", "trainings/material/soup/linux/hardware/group", "trainings/material/soup/linux/hardware/i2c/topic", "trainings/material/soup/linux/hardware/pwm/topic", "trainings/material/soup/linux/hardware/w1/topic", "trainings/material/soup/linux/ssh/basics", "trainings/material/soup/linux/ssh/exercises/copy-file", "trainings/material/soup/linux/ssh/exercises/copy-tree", "trainings/material/soup/linux/ssh/exercises/group", "trainings/material/soup/linux/ssh/exercises/pubkey", "trainings/material/soup/linux/ssh/group", "trainings/material/soup/linux/ssh/key-pair", "trainings/material/soup/linux/ssh/links", "trainings/material/soup/linux/ssh/portforwarding", "trainings/material/soup/linux/ssh/scp", "trainings/material/soup/linux/ssh/sshfs", "trainings/material/soup/linux/sysprog/basics/errorhandling", "trainings/material/soup/linux/sysprog/basics/group", "trainings/material/soup/linux/sysprog/basics/syscalls", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-file", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-network", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-timer", "trainings/material/soup/linux/sysprog/blocking-io/group", "trainings/material/soup/linux/sysprog/file-io/basics", "trainings/material/soup/linux/sysprog/file-io/basics-exercise-copy", "trainings/material/soup/linux/sysprog/file-io/basics-exercise-hole", "trainings/material/soup/linux/sysprog/file-io/duplicate", "trainings/material/soup/linux/sysprog/file-io/example-O_CREAT", "trainings/material/soup/linux/sysprog/file-io/example-O_EXCL", "trainings/material/soup/linux/sysprog/file-io/example-O_RDONLY", "trainings/material/soup/linux/sysprog/file-io/example-O_WRONLY", "trainings/material/soup/linux/sysprog/file-io/exercise-sensor-read", "trainings/material/soup/linux/sysprog/file-io/group", "trainings/material/soup/linux/sysprog/file-io/misc", "trainings/material/soup/linux/sysprog/group", "trainings/material/soup/linux/sysprog/intro-hw/get", "trainings/material/soup/linux/sysprog/intro-hw/group", "trainings/material/soup/linux/sysprog/intro-hw/sysfs-gpio", "trainings/material/soup/linux/sysprog/intro-hw/watch", "trainings/material/soup/linux/sysprog/posix-threads/010-introduction/topic", "trainings/material/soup/linux/sysprog/posix-threads/020-lifecycle/topic", "trainings/material/soup/linux/sysprog/posix-threads/030-exercise-pthcreate-race-condition/topic", "trainings/material/soup/linux/sysprog/posix-threads/040-mutex/topic", "trainings/material/soup/linux/sysprog/posix-threads/050-exercise-mutex/topic", "trainings/material/soup/linux/sysprog/posix-threads/060-condition-variable/topic", "trainings/material/soup/linux/sysprog/posix-threads/070-exercise-condition-variable/topic", "trainings/material/soup/linux/sysprog/posix-threads/080-miscellaneous/topic", "trainings/material/soup/linux/sysprog/posix-threads/090-last-warning/topic", "trainings/material/soup/linux/sysprog/posix-threads/group", "trainings/material/soup/linux/sysprog/posix-threads/locked-trylock", "trainings/material/soup/linux/sysprog/process/commandline", "trainings/material/soup/linux/sysprog/process/group", "trainings/material/soup/linux/sysprog/process/tree", "trainings/material/soup/linux/sysprog/scheduling/basics", "trainings/material/soup/linux/sysprog/scheduling/group", "trainings/material/soup/linux/sysprog/scheduling/processes-and-threads", "trainings/material/soup/linux/sysprog/scheduling/questions", "trainings/material/soup/linux/sysprog/scheduling/realtime", "trainings/material/soup/linux/sysprog/scheduling/realtime-api", "trainings/material/soup/linux/sysprog/scheduling/wakup-latency", "trainings/material/soup/linux/sysprog/sysprog_events/code/index", "trainings/material/soup/linux/sysprog/sysprog_events/screenplay", "trainings/material/soup/linux/sysprog/sysprog_events/topic", "trainings/material/soup/linux/sysprog/sysprog_ipc/code/index", "trainings/material/soup/linux/sysprog/sysprog_ipc/screenplay", "trainings/material/soup/linux/sysprog/sysprog_ipc/slides", "trainings/material/soup/linux/sysprog/sysprog_ipc/topic", "trainings/material/soup/linux/sysprog/sysprog_signals/code/index", "trainings/material/soup/linux/sysprog/sysprog_signals/screenplay", "trainings/material/soup/linux/sysprog/sysprog_signals/slides", "trainings/material/soup/linux/sysprog/sysprog_signals/topic", "trainings/material/soup/linux/toolchain/basics/topic", "trainings/material/soup/linux/toolchain/cmake/cross", "trainings/material/soup/linux/toolchain/cmake/local", "trainings/material/soup/linux/toolchain/cross/basics", "trainings/material/soup/linux/toolchain/cross/group", "trainings/material/soup/linux/toolchain/exercises/cross-build", "trainings/material/soup/linux/toolchain/exercises/fh-2022-questions", "trainings/material/soup/linux/toolchain/exercises/group", "trainings/material/soup/linux/toolchain/exercises/native-build", "trainings/material/soup/linux/toolchain/exercises/raspberry-toolchain", "trainings/material/soup/linux/toolchain/group", "trainings/material/soup/linux/toolchain/raspberry-pi/group", "trainings/material/soup/linux/toolchain/raspberry-pi/linaro", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-build-details", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-build-docker-fedora", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-setup", "trainings/material/soup/linux/toolchain/separate-compilation/topic", "trainings/material/soup/linux/toolchain/shared-libraries/topic", "trainings/material/soup/linux/toolchain/static-library/topic", "trainings/material/soup/python/advanced/closures/topic", "trainings/material/soup/python/advanced/comprehensions/topic", "trainings/material/soup/python/advanced/context-mgr/topic", "trainings/material/soup/python/advanced/decorators/topic", "trainings/material/soup/python/advanced/exceptions/topic", "trainings/material/soup/python/advanced/exec/topic", "trainings/material/soup/python/advanced/group", "trainings/material/soup/python/advanced/iteration-generation/iteration-generation/topic", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/fibonacci-generator", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/iterator-protocol", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/topic", "trainings/material/soup/python/advanced/iteration-generation/topic", "trainings/material/soup/python/advanced/modules", "trainings/material/soup/python/advanced/multithreading/basics", "trainings/material/soup/python/advanced/multithreading/group", "trainings/material/soup/python/advanced/multithreading/mutex", "trainings/material/soup/python/advanced/multithreading/questions", "trainings/material/soup/python/advanced/oo/abc/topic", "trainings/material/soup/python/advanced/oo/classes-and-dicts/topic", "trainings/material/soup/python/advanced/oo/constructor/topic", "trainings/material/soup/python/advanced/oo/group", "trainings/material/soup/python/advanced/oo/inheritance/topic", "trainings/material/soup/python/advanced/oo/methods/topic", "trainings/material/soup/python/advanced/oo/namedtuple/topic", "trainings/material/soup/python/advanced/oo/operator-overloading/topic", "trainings/material/soup/python/advanced/oo/properties/topic", "trainings/material/soup/python/advanced/oo/str-repr/topic", "trainings/material/soup/python/advanced/starargs/topic", "trainings/material/soup/python/basics/group", "trainings/material/soup/python/basics/installation", "trainings/material/soup/python/basics/python_0110_blahblah/topic", "trainings/material/soup/python/basics/python_0120_helloworld/topic", "trainings/material/soup/python/basics/python_0125_running/topic", "trainings/material/soup/python/basics/python_0130_syntax_etc/topic", "trainings/material/soup/python/basics/python_0139_commandline_argv/topic", "trainings/material/soup/python/basics/python_0140_variables/topic", "trainings/material/soup/python/basics/python_0150_datatypes_overview/topic", "trainings/material/soup/python/basics/python_0150_datatypes_overview_compound/topic", "trainings/material/soup/python/basics/python_0160_boolean/topic", "trainings/material/soup/python/basics/python_0170_if/topic", "trainings/material/soup/python/basics/python_0193_while/topic", "trainings/material/soup/python/basics/python_0200_sequential_types/topic", "trainings/material/soup/python/basics/python_0210_indexing_slicing/topic", "trainings/material/soup/python/basics/python_0220_for/topic", "trainings/material/soup/python/basics/python_0225_range/topic", "trainings/material/soup/python/basics/python_0250_refs_flat_deep_copy/topic", "trainings/material/soup/python/basics/python_0270_functions/screenplay-scoping", "trainings/material/soup/python/basics/python_0270_functions/slideshow", "trainings/material/soup/python/basics/python_0270_functions/topic", "trainings/material/soup/python/basics/python_0300_strings/topic", "trainings/material/soup/python/basics/python_0310_strings_formatting/topic", "trainings/material/soup/python/basics/python_0320_strings_methods/topic", "trainings/material/soup/python/basics/python_0400_lists/topic", "trainings/material/soup/python/basics/python_0450_dictionaries/topic", "trainings/material/soup/python/basics/python_0460_sets/topic", "trainings/material/soup/python/basics/python_0500_files/topic", "trainings/material/soup/python/basics/python_1000_function_objects/topic", "trainings/material/soup/python/drafts/argparse/topic", "trainings/material/soup/python/drafts/group", "trainings/material/soup/python/drafts/matplotlib/topic", "trainings/material/soup/python/drafts/setuptools/topic", "trainings/material/soup/python/exercises/csv/csv-db", "trainings/material/soup/python/exercises/csv/csv-module", "trainings/material/soup/python/exercises/csv/group", "trainings/material/soup/python/exercises/group", "trainings/material/soup/python/exercises/herdt/boolean", "trainings/material/soup/python/exercises/herdt/exercise_while_even_numbers", "trainings/material/soup/python/exercises/herdt/greet", "trainings/material/soup/python/exercises/herdt/group", "trainings/material/soup/python/exercises/herdt/max_numbers", "trainings/material/soup/python/exercises/herdt/swap", "trainings/material/soup/python/exercises/herdt/username_password", "trainings/material/soup/python/exercises/legacy/cmdline_digit", "trainings/material/soup/python/exercises/legacy/dict_keyerror", "trainings/material/soup/python/exercises/legacy/distill", "trainings/material/soup/python/exercises/legacy/fibonacci-generator", "trainings/material/soup/python/exercises/legacy/for_primeness", "trainings/material/soup/python/exercises/legacy/group", "trainings/material/soup/python/exercises/legacy/join_function", "trainings/material/soup/python/exercises/legacy/max_numbers", "trainings/material/soup/python/exercises/legacy/max_numbers_function", "trainings/material/soup/python/exercises/legacy/mixed_list_executable", "trainings/material/soup/python/exercises/legacy/mixed_list_interactive", "trainings/material/soup/python/exercises/legacy/passwd", "trainings/material/soup/python/exercises/legacy/primeness_function", "trainings/material/soup/python/exercises/legacy/revert", "trainings/material/soup/python/exercises/legacy/string-rightjustify", "trainings/material/soup/python/exercises/legacy/uniq_function", "trainings/material/soup/python/exercises/legacy/uniq_generator", "trainings/material/soup/python/exercises/legacy/wc", "trainings/material/soup/python/exercises/legacy/while_primeness", "trainings/material/soup/python/exercises/sensors/group", "trainings/material/soup/python/exercises/sensors/project-setup", "trainings/material/soup/python/exercises/sensors/sensor-const", "trainings/material/soup/python/exercises/userdb/csvdictreader", "trainings/material/soup/python/exercises/userdb/csvdictreader-function", "trainings/material/soup/python/exercises/userdb/csvreader", "trainings/material/soup/python/exercises/userdb/csvreader-function", "trainings/material/soup/python/exercises/userdb/group", "trainings/material/soup/python/exercises/userdb/mqtt-publish-csv", "trainings/material/soup/python/exercises/userdb/user-class-person", "trainings/material/soup/python/exercises/userdb/user_json", "trainings/material/soup/python/exercises/userdb/userdb_csv", "trainings/material/soup/python/graph", "trainings/material/soup/python/group", "trainings/material/soup/python/link-collection", "trainings/material/soup/python/misc/ai/group", "trainings/material/soup/python/misc/ai/k-means", "trainings/material/soup/python/misc/ai/linear-regression/code", "trainings/material/soup/python/misc/ai/linear-regression/history_data", "trainings/material/soup/python/misc/ai/linear-regression/linear_regression", "trainings/material/soup/python/misc/ai/linear-regression/topic", "trainings/material/soup/python/misc/ai/machine-learning-intro", "trainings/material/soup/python/misc/csv/topic", "trainings/material/soup/python/misc/db/dbapi2", "trainings/material/soup/python/misc/db/group", "trainings/material/soup/python/misc/db/postgres", "trainings/material/soup/python/misc/db/sqlite3", "trainings/material/soup/python/misc/encoding/topic", "trainings/material/soup/python/misc/group", "trainings/material/soup/python/misc/import", "trainings/material/soup/python/misc/mqtt/topic", "trainings/material/soup/python/misc/pandas/add_row", "trainings/material/soup/python/misc/pandas/basics", "trainings/material/soup/python/misc/pandas/filters", "trainings/material/soup/python/misc/pandas/group", "trainings/material/soup/python/misc/pandas/iloc", "trainings/material/soup/python/misc/pandas/indexes", "trainings/material/soup/python/misc/pandas/loc", "trainings/material/soup/python/misc/pandas/mod_col", "trainings/material/soup/python/misc/python_5550_xml_etree/topic", "trainings/material/soup/python/misc/vscode", "trainings/material/soup/python/swdev/group", "trainings/material/soup/python/swdev/pip/screenplay", "trainings/material/soup/python/swdev/pip/slides", "trainings/material/soup/python/swdev/pip/topic", "trainings/material/soup/python/swdev/pypi", "trainings/material/soup/python/swdev/pytest/group", "trainings/material/soup/python/swdev/pytest/intro", "trainings/material/soup/python/swdev/unittest", "trainings/material/soup/python/swdev/venv/screenplay", "trainings/material/soup/python/swdev/venv/slides", "trainings/material/soup/python/swdev/venv/topic", "trainings/material/soup/unittest/group", "trainings/material/soup/unittest/unittest_gtest_basics/code/index", "trainings/material/soup/unittest/unittest_gtest_basics/screenplay", "trainings/material/soup/unittest/unittest_gtest_basics/topic", "trainings/material/soup/unittest/unittest_gtest_cmake/screenplay", "trainings/material/soup/unittest/unittest_gtest_cmake/topic", "trainings/material/soup/unittest/unittest_gtest_fixture/code/index", "trainings/material/soup/unittest/unittest_gtest_fixture/screenplay", "trainings/material/soup/unittest/unittest_gtest_fixture/topic", "trainings/org", "trainings/repertoire/_hidden/kettner-lfs-2013-09-16", "trainings/repertoire/bash", "trainings/repertoire/c-like/c", "trainings/repertoire/c-like/c-advanced", "trainings/repertoire/c-like/cxx", "trainings/repertoire/c-like/cxx11", "trainings/repertoire/c-like/index", "trainings/repertoire/cmake", "trainings/repertoire/design-patterns/design-patterns", "trainings/repertoire/embedded", "trainings/repertoire/kernel-programming-basics", "trainings/repertoire/linux-basics", "trainings/repertoire/make", "trainings/repertoire/python/advanced", "trainings/repertoire/python/basics", "trainings/repertoire/python/herdt", "trainings/repertoire/raspi-hands-on", "trainings/repertoire/svn", "trainings/repertoire/sysprog/basics", "trainings/repertoire/sysprog/fortgeschrittenes", "trainings/repertoire/sysprog/index", "trainings/repertoire/sysprog/multithreading", "trainings/repertoire/sysprog/network", "trainings/repertoire/unittests"], "filenames": ["about/myself/contact.rst", "about/myself/cv-de.rst", "about/myself/index.rst", "about/myself/projects-de.rst", "about/myself/skills-de.rst", "about/site/courses/angebot-2023-10-12.rst", "about/site/courses/index.rst", "about/site/courses/samples/detail/2021-04-12/Notebook.ipynb", "about/site/courses/samples/detail/2021-04-12/index.rst", "about/site/courses/samples/detail/2021-04-12/notebook-wrapper.rst", "about/site/courses/samples/detail/index.rst", "about/site/courses/samples/index.rst", "about/site/courses/templates.rst", "about/site/index.rst", "about/site/opentraining/index.rst", "about/site/opentraining/misc/draft-topics/index.rst", "about/site/opentraining/misc/index.rst", "about/site/opentraining/misc/s5/index.rst", "about/site/opentraining/misc/s5/tests/index.rst", "about/site/opentraining/misc/s5/tests/test-slides.rst", "about/site/opentraining/misc/screencast.rst", "about/site/opentraining/misc/topics-to-write.rst", "about/site/opentraining/netidee/index.rst", "about/site/opentraining/netidee/netidee-antrag.rst", "about/site/opentraining/netidee/netidee-video-2min.rst", "about/site/opentraining/usecases/agenda-subtract-known.rst", "about/site/opentraining/usecases/duration.rst", "about/site/opentraining/usecases/index.rst", "about/site/opentraining/usecases/linking.rst", "about/site/opentraining/usecases/menu.rst", "about/site/opentraining/usecases/slides.rst", "about/site/recipes/camera-ssh.rst", "about/site/recipes/emoji.rst", "about/site/recipes/index.rst", "about/site/recipes/isoamsa.rst", "about/site/recipes/isoamsr.rst", "about/site/recipes/isonum.rst", "about/site/recipes/layout-test.rst", "about/site/recipes/mathml.rst", "about/site/recipes/rst-cheatsheet.rst", "about/site/recipes/sphinxish.rst", "about/site/work-in-progress/2022-04-13/index.rst", "about/site/work-in-progress/2022-04-13/seminar/block-before-googletest.rst", "about/site/work-in-progress/2022-04-13/seminar/clean-code-craftsmanship.rst", "about/site/work-in-progress/2022-04-13/seminar/enter-googletest.rst", "about/site/work-in-progress/2022-04-13/seminar/index.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/find-error.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/group.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/overwrite-existing-files.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/overwrite-store-content-on-read.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/csv.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/group.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/other-indexes.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/group.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/backingstore-interface.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/backingstore-monolithic.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/group.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/pass-store-in-ctor.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/store-enum-switch.rst", "about/site/work-in-progress/blink/glt.rst", "about/site/work-in-progress/blink/index.rst", "about/site/work-in-progress/blink/installation.rst", "about/site/work-in-progress/blink/pycon-2023.rst", "about/site/work-in-progress/blink/screenplay.rst", "about/site/work-in-progress/blog-queue/hochkoenig/index.rst", "about/site/work-in-progress/blog-queue/index.rst", "about/site/work-in-progress/blog-queue/sphinx.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx_build.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx_iface.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx_oo_basics.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx_unittest.rst", "about/site/work-in-progress/fh-joanneum/2019/ec.rst", "about/site/work-in-progress/fh-joanneum/2019/embedded-computing-1.rst", "about/site/work-in-progress/fh-joanneum/2019/embedded-computing-2.rst", "about/site/work-in-progress/fh-joanneum/2019/exercise_mt_race.rst", "about/site/work-in-progress/fh-joanneum/2019/exercise_mt_race_fixed.rst", "about/site/work-in-progress/fh-joanneum/2019/git.rst", "about/site/work-in-progress/fh-joanneum/2019/index.rst", "about/site/work-in-progress/fh-joanneum/2019/linux.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_basics.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_dev_mgmt.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_avg_sensor.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_avg_sensor_parallel.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_led_display.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_sensors.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_gpio.rst", "about/site/work-in-progress/fh-joanneum/2019/mt.rst", "about/site/work-in-progress/fh-joanneum/2019/mt_lock.rst", "about/site/work-in-progress/fh-joanneum/2019/mt_wait.rst", "about/site/work-in-progress/fh-joanneum/2019/py_basics.rst", "about/site/work-in-progress/fh-joanneum/2019/py_exercise_avg_display.rst", "about/site/work-in-progress/fh-joanneum/2019/py_exercise_sensors.rst", "about/site/work-in-progress/fh-joanneum/2019/py_web.rst", "about/site/work-in-progress/fh-joanneum/2019/py_web_sensors.rst", "about/site/work-in-progress/fh-joanneum/2019/python.rst", "about/site/work-in-progress/fh-joanneum/2020/index.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-08.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-10.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-10-homework.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-21.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-22,24.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-28.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-04-01.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/index.rst", "about/site/work-in-progress/fh-joanneum/2020/ws2022.rst", "about/site/work-in-progress/fh-joanneum/2020/ws2022-questions-code-general.rst", "about/site/work-in-progress/fh-joanneum/2020/ws2022-questions-yesno.rst", "about/site/work-in-progress/fh-joanneum/2020/ws2022/lab-exam-2023-01-17.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2023-06-30.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2023-06-30-solved.rst", "about/site/work-in-progress/fh-joanneum/2021/git/git.rst", "about/site/work-in-progress/fh-joanneum/2021/index.rst", "about/site/work-in-progress/fh-joanneum/2021/ss2023.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot-basic-integration.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot-display.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot-full-integration.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger-csv-sink.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger-integration.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger-mqtt-sink.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/display-infrastructure.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/group.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/libgpiod-switch.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/pwm-display.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/sensor-interface.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/sensor-w1.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/switch-interface.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/sysfs-gpio-switch.rst", "about/site/work-in-progress/fh-joanneum/2021/ws2023-2024.rst", "about/site/work-in-progress/fh-joanneum/index.rst", "about/site/work-in-progress/git.rst", "about/site/work-in-progress/index.rst", "about/site/work-in-progress/packaging/index.rst", "about/site/work-in-progress/project-xxx/audio-chip.rst", "about/site/work-in-progress/project-xxx/debian-config.rst", "about/site/work-in-progress/project-xxx/debian-kernel-package.rst", "about/site/work-in-progress/project-xxx/hardware-bringup.rst", "about/site/work-in-progress/project-xxx/index.rst", "about/site/work-in-progress/project-xxx/kernel-upgrade-dirty.rst", "about/site/work-in-progress/project-xxx/wait-hardware.rst", "about/site/work-in-progress/project-xxx/yocto-kernel.rst", "about/site/work-in-progress/python-training.rst", "about/site/work-in-progress/screencast.rst", "about/site/work-in-progress/seo.rst", "about/site/work-in-progress/stacks.rst", "about/site/work-in-progress/todo-misc.rst", "about/site/work-in-progress/web.rst", "blog/2010/07/beagleboard-how-to-repair-nand-also-known-as-40w.rst", "blog/2011/01/porting-to-linux-there-s-always-a-better-way.rst", "blog/2011/01/saving-solid-state-disk-life--gentoo.rst", "blog/2012/04/Why-ps-sucks.rst", "blog/2020/02/fedora-kernel-build.rst", "blog/2020/03/custom-domain-gh-pages.rst", "blog/2020/03/ms-teams-on-linux.rst", "blog/2020/03/sphinx-gh-pages.rst", "blog/2020/04/bbb.rst", "blog/2020/09/traunstein.rst", "blog/2021/08/grintovec.rst", "blog/2021/09/xps13-shim-mok-brick/index.rst", "blog/2022/09/cross-raspi.rst", "blog/index.rst", "index.rst", "trainings/codex.rst", "trainings/exercises.rst", "trainings/index.rst", "trainings/log/detail/2013-10-01/index.rst", "trainings/log/detail/2015-11-30/index.rst", "trainings/log/detail/2019-10-28/LiveHacking.ipynb", "trainings/log/detail/2019-10-28/index.rst", "trainings/log/detail/2019-11-12/code/BigPlan.ipynb", "trainings/log/detail/2019-11-12/code/LiveHacking.ipynb", "trainings/log/detail/2019-11-12/index.rst", "trainings/log/detail/2020-01-10/Proposal.rst", "trainings/log/detail/2020-01-10/index.rst", "trainings/log/detail/2020-03-30/code/exercise-string/index.rst", "trainings/log/detail/2020-03-30/index.rst", "trainings/log/detail/2020-03-30/install-googletest.rst", "trainings/log/detail/2020-03-30/setup.rst", "trainings/log/detail/2020-03-30/vs-code.rst", "trainings/log/detail/2020-05-12/code/index.rst", "trainings/log/detail/2020-05-12/index.rst", "trainings/log/detail/2020-05-18/Livehacking.ipynb", "trainings/log/detail/2020-05-18/code/index.rst", "trainings/log/detail/2020-05-18/index.rst", "trainings/log/detail/2020-09-07/index.rst", "trainings/log/detail/2020-09-28/index.rst", "trainings/log/detail/2020-10-19/Notebook.ipynb", "trainings/log/detail/2020-10-19/index.rst", "trainings/log/detail/2020-11-03/index.rst", "trainings/log/detail/2020-11-23/index.rst", "trainings/log/detail/2020-11-30/index.rst", "trainings/log/detail/2021-01-13/Notebook.ipynb", "trainings/log/detail/2021-01-13/index.rst", "trainings/log/detail/2021-01-13/notebook-wrapper.rst", "trainings/log/detail/2021-02-22/index.rst", "trainings/log/detail/2021-03-08/index.rst", "trainings/log/detail/2021-03-15/Notebook.ipynb", "trainings/log/detail/2021-03-15/index.rst", "trainings/log/detail/2021-03-22/Notebook.ipynb", "trainings/log/detail/2021-03-22/index.rst", "trainings/log/detail/2021-03-29/index.rst", "trainings/log/detail/2021-04-12/Notebook.ipynb", "trainings/log/detail/2021-04-12/index.rst", "trainings/log/detail/2021-04-12/notebook-wrapper.rst", "trainings/log/detail/2021-05-03/Notebook.ipynb", "trainings/log/detail/2021-05-03/index.rst", "trainings/log/detail/2021-05-03/notebook-wrapper.rst", "trainings/log/detail/2021-05-25/Notebook.ipynb", "trainings/log/detail/2021-05-25/index.rst", "trainings/log/detail/2021-06-14/index.rst", "trainings/log/detail/2021-07-12/index.rst", "trainings/log/detail/2021-08-02/index.rst", "trainings/log/detail/2021-08-02/notebook.ipynb", "trainings/log/detail/2021-08-23/Notebook.ipynb", "trainings/log/detail/2021-08-23/exercises/sap-cleaned.rst", "trainings/log/detail/2021-08-23/index.rst", "trainings/log/detail/2021-08-23/notebook-wrapper.rst", "trainings/log/detail/2021-08-31/Notebook.ipynb", "trainings/log/detail/2021-08-31/index.rst", "trainings/log/detail/2021-08-31/notebook-wrapper.rst", "trainings/log/detail/2021-11-17/Notebook.ipynb", "trainings/log/detail/2021-11-17/index.rst", "trainings/log/detail/2021-11-17/notebook-wrapper.rst", "trainings/log/detail/2021-12-01/2021-12-01.ipynb", "trainings/log/detail/2021-12-01/index.rst", "trainings/log/detail/2021-12-01/notebook-wrapper.rst", "trainings/log/detail/2021-12-06/index.rst", "trainings/log/detail/2022-01-17/index.rst", "trainings/log/detail/2022-01-17/notebook.ipynb", "trainings/log/detail/2022-01-17/notebook-wrapper.rst", "trainings/log/detail/2022-02-23/Notebook.ipynb", "trainings/log/detail/2022-02-23/index.rst", "trainings/log/detail/2022-02-23/notebook-wrapper.rst", "trainings/log/detail/2022-03-15/Notebook.ipynb", "trainings/log/detail/2022-03-15/index.rst", "trainings/log/detail/2022-03-15/notebook-wrapper.rst", "trainings/log/detail/2022-03-23/Notebook.ipynb", "trainings/log/detail/2022-03-23/index.rst", "trainings/log/detail/2022-03-23/notebook-wrapper.rst", "trainings/log/detail/2022-04-05/index.rst", "trainings/log/detail/2022-04-05/notebook.ipynb", "trainings/log/detail/2022-04-05/notebook-wrapper.rst", "trainings/log/detail/2022-04-25/index.rst", "trainings/log/detail/2022-04-25/notebook.ipynb", "trainings/log/detail/2022-04-25/notebook-wrapper.rst", "trainings/log/detail/2022-05-02/index.rst", "trainings/log/detail/2022-05-02/notebook.ipynb", "trainings/log/detail/2022-05-02/notebook-wrapper.rst", "trainings/log/detail/2022-05-16/index.rst", "trainings/log/detail/2022-05-16/notebook.ipynb", "trainings/log/detail/2022-05-16/notebook-wrapper.rst", "trainings/log/detail/2022-06-14/2022-05-11.rst", "trainings/log/detail/2022-06-14/index.rst", "trainings/log/detail/2022-07-26/index.rst", "trainings/log/detail/2022-10-03/index.rst", "trainings/log/detail/2022-10-11/index.rst", "trainings/log/detail/2022-10-24/index.rst", "trainings/log/detail/2022-11-07/index.rst", "trainings/log/detail/2022-11-07/notebook.ipynb", "trainings/log/detail/2022-11-07/notebook-wrapper.rst", "trainings/log/detail/2022-11-16/index.rst", "trainings/log/detail/2022-11-16/notebook.ipynb", "trainings/log/detail/2022-11-16/notebook-wrapper.rst", "trainings/log/detail/2023-01-23/index.rst", "trainings/log/detail/2023-02-13/index.rst", "trainings/log/detail/2023-03-13-Python-SAP/Demo/demo-notebook.ipynb", "trainings/log/detail/2023-03-13-Python-SAP/demo.rst", "trainings/log/detail/2023-03-13-Python-SAP/index.rst", "trainings/log/detail/2023-03-13-Python-SAP/notebook.ipynb", "trainings/log/detail/2023-03-13-Python-SAP/notebook-wrapper.rst", "trainings/log/detail/2023-03-13-Python-SAP/original-agenda.rst", "trainings/log/detail/2023-03-13-Python-SAP/sap-dataset/index.rst", "trainings/log/detail/2023-03-13-Python-SAP/sap-dataset/sap-dataset.ipynb", "trainings/log/detail/2023-03-20--C++-embedded/index.rst", "trainings/log/detail/2023-03-28--Python-Clean-Code/index.rst", "trainings/log/detail/2023-04-18--C++-embedded/index.rst", "trainings/log/detail/2023-04-24--Python-Advanced/agenda.rst", "trainings/log/detail/2023-04-24--Python-Advanced/index.rst", "trainings/log/detail/2023-04-24--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-04-24--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-05-15--Python-Basics/agenda.rst", "trainings/log/detail/2023-05-15--Python-Basics/index.rst", "trainings/log/detail/2023-05-15--Python-Basics/notebook.ipynb", "trainings/log/detail/2023-05-15--Python-Basics/notebook-wrapper.rst", "trainings/log/detail/2023-05-23--Linux-Basics/agenda.rst", "trainings/log/detail/2023-05-23--Linux-Basics/index.rst", "trainings/log/detail/2023-06-20--Python-Basics/agenda.rst", "trainings/log/detail/2023-06-20--Python-Basics/index.rst", "trainings/log/detail/2023-06-20--Python-Basics/notebook.ipynb", "trainings/log/detail/2023-06-20--Python-Basics/notebook-wrapper.rst", "trainings/log/detail/2023-07-03--CMake/agenda.rst", "trainings/log/detail/2023-07-03--CMake/index.rst", "trainings/log/detail/2023-09-25--Python-Advanced/index.rst", "trainings/log/detail/2023-09-25--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-09-25--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-10-09--Python-Advanced/index.rst", "trainings/log/detail/2023-10-09--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-10-09--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-10-24--Python-Advanced/agenda.rst", "trainings/log/detail/2023-10-24--Python-Advanced/index.rst", "trainings/log/detail/2023-10-24--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-10-24--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-11-22--Python-Advanced/agenda.rst", "trainings/log/detail/2023-11-22--Python-Advanced/index.rst", "trainings/log/detail/2023-11-22--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-11-22--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-11-27--CMake/agenda.rst", "trainings/log/detail/2023-11-27--CMake/index.rst", "trainings/log/detail/2023-11-29--Python-Basics/agenda.rst", "trainings/log/detail/2023-11-29--Python-Basics/index.rst", "trainings/log/detail/2023-11-29--Python-Basics/notebook.ipynb", "trainings/log/detail/2023-11-29--Python-Basics/notebook-wrapper.rst", "trainings/log/detail/2023-12-04--C++-Advanced/agenda.rst", "trainings/log/detail/2023-12-04--C++-Advanced/index.rst", "trainings/log/detail/2023-XX-XX-C++-embedded/index.rst", "trainings/log/detail/2023-XX-XX-Python-SAP/index.rst", "trainings/log/detail/2024-XX-XX--Python-Basics/agenda.rst", "trainings/log/detail/FH-ECE-19/EC1/2021-05-12/screenplay-checker.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-abc.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-oo.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-unittest.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/fh-group.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/file-read.rst", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/2021-05-20-G2.ipynb", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/2021-05-21.ipynb", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Checker-Explanations.ipynb", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Datatypes.ipynb", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Functions.ipynb", "trainings/log/detail/FH-ECE-19/EC1/cloud-computer.rst", "trainings/log/detail/FH-ECE-19/EC1/formales.rst", "trainings/log/detail/FH-ECE-19/EC1/index.rst", "trainings/log/detail/FH-ECE-19/EC1/log.rst", "trainings/log/detail/FH-ECE-19/EC1/lv-de.rst", "trainings/log/detail/FH-ECE-19/EC1/lv-en.rst", "trainings/log/detail/FH-ECE-19/EC1/plan.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-07.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-12.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-28.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-11-15.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-11-29.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-12-14.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-01-10.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-01-12.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-02-15.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/index.rst", "trainings/log/detail/FH-ECE-19/EC2/index.rst", "trainings/log/detail/FH-ECE-19/EC2/test-material.rst", "trainings/log/detail/FH-ECE-19/index.rst", "trainings/log/detail/index.rst", "trainings/log/index.rst", "trainings/material/index.rst", "trainings/material/soup/c/010-introduction/000-installation/topic.rst", "trainings/material/soup/c/010-introduction/010-introduction/topic.rst", "trainings/material/soup/c/010-introduction/020-getting-started/topic.rst", "trainings/material/soup/c/010-introduction/030-variables-and-arithmetic-expressions/topic.rst", "trainings/material/soup/c/010-introduction/040-exercise-fahrenheit-float/topic.rst", "trainings/material/soup/c/010-introduction/050-the-for-statement/topic.rst", "trainings/material/soup/c/010-introduction/060-exercise-fahrenheit-for/topic.rst", "trainings/material/soup/c/010-introduction/070-symbolic-constants/topic.rst", "trainings/material/soup/c/010-introduction/080-exercise-fahrenheit-cpp/topic.rst", "trainings/material/soup/c/010-introduction/090-character-input-and-output/topic.rst", "trainings/material/soup/c/010-introduction/100-exercise-wc/topic.rst", "trainings/material/soup/c/010-introduction/110-arrays/topic.rst", "trainings/material/soup/c/010-introduction/120-exercise-histogram/topic.rst", "trainings/material/soup/c/010-introduction/130-functions/topic.rst", "trainings/material/soup/c/010-introduction/140-exercise-power-declaration/topic.rst", "trainings/material/soup/c/010-introduction/150-character-arrays/topic.rst", "trainings/material/soup/c/010-introduction/160-exercise-string-read-line/topic.rst", "trainings/material/soup/c/010-introduction/170-external-variables-and-scope/topic.rst", "trainings/material/soup/c/010-introduction/group.rst", "trainings/material/soup/c/020-types-operators-expressions/010-introduction/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/020-variable-names/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/030-data-types-and-sizes/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/040-constants/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/050-declarations/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/060-arithmetic-operators/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/070-relational-and-logical-operators/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/080-type-conversions/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/090-increment-and-decrement-operators/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/100-exercise-string-reduce/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/110-bitwise-operators/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/120-assignment-operators-and-expressions/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/130-conditional-expressions/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/140-precedence-and-order-of-evaluation/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/group.rst", "trainings/material/soup/c/030-program-flow/010-statements-and-blocks/topic.rst", "trainings/material/soup/c/030-program-flow/020-if-else/topic.rst", "trainings/material/soup/c/030-program-flow/030-else-if/topic.rst", "trainings/material/soup/c/030-program-flow/040-switch/topic.rst", "trainings/material/soup/c/030-program-flow/050-loops-while-and-for/topic.rst", "trainings/material/soup/c/030-program-flow/060-loops-do-while/topic.rst", "trainings/material/soup/c/030-program-flow/070-break-and-continue/topic.rst", "trainings/material/soup/c/030-program-flow/080-goto-and-labels/topic.rst", "trainings/material/soup/c/030-program-flow/group.rst", "trainings/material/soup/c/040-functions-and-program-structure/010-basics-of-functions/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/020-external-variables/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/030-header-files/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/040-static-variables/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/050-c-preprocessor/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/060-c-preprocessor-advanced/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/group.rst", "trainings/material/soup/c/050-pointers-and-arrays/010-pointers-and-addresses/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/020-pointers-and-function-arguments/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/030-exercise-swap/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/040-pointers-and-arrays/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/050-command-line-arguments/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/group.rst", "trainings/material/soup/c/060-structures/010-basics-of-structures/topic.rst", "trainings/material/soup/c/060-structures/020-structures-and-functions/topic.rst", "trainings/material/soup/c/060-structures/030-typedef/topic.rst", "trainings/material/soup/c/060-structures/group.rst", "trainings/material/soup/c/070-memory/010-malloc/topic.rst", "trainings/material/soup/c/070-memory/020-exercise-linked-list/topic.rst", "trainings/material/soup/c/070-memory/group.rst", "trainings/material/soup/c/080-advanced-language-features/010-volatile/topic.rst", "trainings/material/soup/c/080-advanced-language-features/020-atomic/topic.rst", "trainings/material/soup/c/080-advanced-language-features/030-alignment/topic.rst", "trainings/material/soup/c/080-advanced-language-features/group.rst", "trainings/material/soup/c/090-program-sanity/010-introduction/topic.rst", "trainings/material/soup/c/090-program-sanity/020-integral-types/topic.rst", "trainings/material/soup/c/090-program-sanity/030-discrete-values/topic.rst", "trainings/material/soup/c/090-program-sanity/040-static/topic.rst", "trainings/material/soup/c/090-program-sanity/050-const/topic.rst", "trainings/material/soup/c/090-program-sanity/060-struct-initialization/topic.rst", "trainings/material/soup/c/090-program-sanity/070-explicit-type-safety/topic.rst", "trainings/material/soup/c/090-program-sanity/080-valgrind/topic.rst", "trainings/material/soup/c/090-program-sanity/group.rst", "trainings/material/soup/c/100-performance/010-introduction/topic.rst", "trainings/material/soup/c/100-performance/020-computebound/topic.rst", "trainings/material/soup/c/100-performance/030-memory/topic.rst", "trainings/material/soup/c/100-performance/group.rst", "trainings/material/soup/c/110-profiling/010-introduction/topic.rst", "trainings/material/soup/c/110-profiling/020-gprof/topic.rst", "trainings/material/soup/c/110-profiling/030-callgrind/topic.rst", "trainings/material/soup/c/110-profiling/040-oprofile/topic.rst", "trainings/material/soup/c/110-profiling/group.rst", "trainings/material/soup/c/group.rst", "trainings/material/soup/clean-code/book-messages.rst", "trainings/material/soup/clean-code/craft-sw.rst", "trainings/material/soup/clean-code/group.rst", "trainings/material/soup/clean-code/intro-python/livehacking.rst", "trainings/material/soup/cmake/basics.rst", "trainings/material/soup/cmake/configure_file.rst", "trainings/material/soup/cmake/cxx-and-rants.rst", "trainings/material/soup/cmake/external-dependencies.rst", "trainings/material/soup/cmake/group.rst", "trainings/material/soup/cmake/installation.rst", "trainings/material/soup/cmake/libraries.rst", "trainings/material/soup/cmake/optional-code-approach-1.rst", "trainings/material/soup/cmake/optional-code-approach-2.rst", "trainings/material/soup/cmake/optional-code-problem.rst", "trainings/material/soup/cmake/shared-libraries.rst", "trainings/material/soup/cmake/structure.rst", "trainings/material/soup/cmake/targets-properties.rst", "trainings/material/soup/cmake/testing.rst", "trainings/material/soup/cxx-code/index.rst", "trainings/material/soup/cxx-design-patterns/abstract-factory/abstract-factory.rst", "trainings/material/soup/cxx-design-patterns/adapter/adapter.rst", "trainings/material/soup/cxx-design-patterns/command/command.rst", "trainings/material/soup/cxx-design-patterns/command/socialdb.rst", "trainings/material/soup/cxx-design-patterns/composite/composite.rst", "trainings/material/soup/cxx-design-patterns/decorator/decorator.rst", "trainings/material/soup/cxx-design-patterns/group.rst", "trainings/material/soup/cxx-design-patterns/heating-screenplay/heating-screenplay.rst", "trainings/material/soup/cxx-design-patterns/interpreter/interpreter.rst", "trainings/material/soup/cxx-design-patterns/observer/observer.rst", "trainings/material/soup/cxx-design-patterns/oo-principles.rst", "trainings/material/soup/cxx-design-patterns/proxy/proxy.rst", "trainings/material/soup/cxx-design-patterns/sensor-hierarchy.rst", "trainings/material/soup/cxx-design-patterns/singleton/singleton.rst", "trainings/material/soup/cxx-design-patterns/uml/uml.rst", "trainings/material/soup/cxx-exercises/design-patterns/abstract-factory.rst", "trainings/material/soup/cxx-exercises/design-patterns/adapter.rst", "trainings/material/soup/cxx-exercises/design-patterns/command.rst", "trainings/material/soup/cxx-exercises/design-patterns/composite.rst", "trainings/material/soup/cxx-exercises/design-patterns/decorator.rst", "trainings/material/soup/cxx-exercises/design-patterns/group.rst", "trainings/material/soup/cxx-exercises/design-patterns/interpreter-and-adapter.rst", "trainings/material/soup/cxx-exercises/design-patterns/interpreter-basic.rst", "trainings/material/soup/cxx-exercises/design-patterns/observer.rst", "trainings/material/soup/cxx-exercises/design-patterns/proxy-remote.rst", "trainings/material/soup/cxx-exercises/design-patterns/proxy-round.rst", "trainings/material/soup/cxx-exercises/design-patterns/singleton-flexible.rst", "trainings/material/soup/cxx-exercises/design-patterns/singleton-flexible-strict.rst", "trainings/material/soup/cxx-exercises/design-patterns/singleton-inflexible.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/abstract-factory.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/adapter.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/command.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/composite.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/decorator.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/group.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/interpreter-and-adapter.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/interpreter-basic.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/observer.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/proxy-remote.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/proxy-round.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-flexible.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-flexible-strict.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-inflexible.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-loop-function.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-no-polymorphism.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-random-sensor.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/group.rst", "trainings/material/soup/cxx-exercises/group.rst", "trainings/material/soup/cxx-exercises/nopoly-display-led-stripe/display-led-stripe-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-hysteresis/hysteresis-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-sensor-avg/sensor-avg-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-const-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-mock-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-random-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-switch-mock/switch-mock-nopoly.rst", "trainings/material/soup/cxx-exercises/oo-shapes/shapes.rst", "trainings/material/soup/cxx-exercises/project-setup.rst", "trainings/material/soup/cxx-exercises/sensor-interface/sensor-interface.rst", "trainings/material/soup/cxx-exercises/sensor-w1-factory/sensor-w1-factory.rst", "trainings/material/soup/cxx-exercises/sensor-w1/sensor-w1.rst", "trainings/material/soup/cxx-exercises/stl/algo.rst", "trainings/material/soup/cxx-exercises/stl/filter-generic.rst", "trainings/material/soup/cxx-exercises/stl/filter-greater-10.rst", "trainings/material/soup/cxx-exercises/stl/filter-odd.rst", "trainings/material/soup/cxx-exercises/stl/group.rst", "trainings/material/soup/cxx-exercises/stl/map.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/group.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/insert-no-overwrite.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/insert-sunny.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/lookup-not-found.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/lookup-sunny.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/no-memleak.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/remove-not-found.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/remove-sunny.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/size-const.rst", "trainings/material/soup/cxx-exercises/stl/uniq.rst", "trainings/material/soup/cxx-exercises/stl/vector.rst", "trainings/material/soup/cxx-todo/index.rst", "trainings/material/soup/cxx/cxx_class_templates/code/index.rst", "trainings/material/soup/cxx/cxx_class_templates/screenplay.rst", "trainings/material/soup/cxx/cxx_class_templates/topic.rst", "trainings/material/soup/cxx/cxx_dynamic_memory/code/index.rst", "trainings/material/soup/cxx/cxx_dynamic_memory/screenplay.rst", "trainings/material/soup/cxx/cxx_dynamic_memory/topic.rst", "trainings/material/soup/cxx/cxx_global_initialization/code/index.rst", "trainings/material/soup/cxx/cxx_global_initialization/screenplay.rst", "trainings/material/soup/cxx/cxx_global_initialization/topic.rst", "trainings/material/soup/cxx/cxx_inheritance_virtual/code/index.rst", "trainings/material/soup/cxx/cxx_inheritance_virtual/screenplay.rst", "trainings/material/soup/cxx/cxx_inheritance_virtual/topic.rst", "trainings/material/soup/cxx/cxx_ownership_raii/code/index.rst", "trainings/material/soup/cxx/cxx_ownership_raii/screenplay.rst", "trainings/material/soup/cxx/cxx_ownership_raii/topic.rst", "trainings/material/soup/cxx/cxx_stl_container_intro/code/index.rst", "trainings/material/soup/cxx/cxx_stl_container_intro/screenplay.rst", "trainings/material/soup/cxx/cxx_stl_container_intro/topic.rst", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/code/index.rst", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/screenplay.rst", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/topic.rst", "trainings/material/soup/cxx/group.rst", "trainings/material/soup/cxx03/001-introduction/topic.rst", "trainings/material/soup/cxx03/020-data-encapsulation/c.rst", "trainings/material/soup/cxx03/020-data-encapsulation/copy-basics.rst", "trainings/material/soup/cxx03/020-data-encapsulation/cpp-introduction.rst", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-custom.rst", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-default.rst", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-dtor.rst", "trainings/material/soup/cxx03/020-data-encapsulation/group.rst", "trainings/material/soup/cxx03/020-data-encapsulation/initializer-list.rst", "trainings/material/soup/cxx03/020-data-encapsulation/object-copy.rst", "trainings/material/soup/cxx03/030-functions-and-methods/010-overloading/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/020-methods/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/030-const/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/040-this/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/050-references/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/060-static/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/065-static-member-variables/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/070-operators/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-cuboid.rst", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-point.rst", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-point3d.rst", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-rectangle.rst", "trainings/material/soup/cxx03/030-functions-and-methods/group.rst", "trainings/material/soup/cxx03/040-exceptions/010-basics/topic.rst", "trainings/material/soup/cxx03/040-exceptions/020-try-catch/topic.rst", "trainings/material/soup/cxx03/040-exceptions/group.rst", "trainings/material/soup/cxx03/050-templates/010-function-templates/topic.rst", "trainings/material/soup/cxx03/050-templates/020-class-templates/topic.rst", "trainings/material/soup/cxx03/050-templates/group.rst", "trainings/material/soup/cxx03/060-stl/010-basics/algo-copy.rst", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-algo.rst", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-basics.rst", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-difference.rst", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-out-of-range.rst", "trainings/material/soup/cxx03/060-stl/010-basics/topic.rst", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/topic.rst", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-and-copy.rst", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-basic.rst", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-pointer-arith.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/binary_search.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/copy.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/find.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/find_if.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/for_each.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/group.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/lower_bound.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/reverse.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/reverse_copy.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/sort.rst", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/basics.rst", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/group.rst", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/list.rst", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/vector.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/basics.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/group.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-init-fill.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-insert.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-remove.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-search.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/multimap.rst", "trainings/material/soup/cxx03/060-stl/allocators/allocator_basics.rst", "trainings/material/soup/cxx03/060-stl/allocators/group.rst", "trainings/material/soup/cxx03/060-stl/exercises/group.rst", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/exercise.rst", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/group.rst", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/solution.rst", "trainings/material/soup/cxx03/060-stl/group.rst", "trainings/material/soup/cxx03/070-dynamic-memory/000-todo/topic.rst", "trainings/material/soup/cxx03/070-dynamic-memory/group.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/basics.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/destructor.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/group.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/interface.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/polymorphism.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/private-protected.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/virtual-destructor.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/virtual-method.rst", "trainings/material/soup/cxx03/900-standard-library-miscellanea/group.rst", "trainings/material/soup/cxx03/900-standard-library-miscellanea/string/topic.rst", "trainings/material/soup/cxx03/exercises-misc/american-flag/exercise.rst", "trainings/material/soup/cxx03/exercises-misc/fh-questions.rst", "trainings/material/soup/cxx03/exercises-misc/group.rst", "trainings/material/soup/cxx03/exercises-misc/sum-integers-from-stdin/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/group.rst", "trainings/material/soup/cxx03/exercises-userdb/user-access-methods/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-const-members/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-const/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-default-ctor/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-simple-method/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-to-cxx-ctor/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-insert/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-search-find_if/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-search-notfound-exception/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-search/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-vector/exercise.rst", "trainings/material/soup/cxx03/group.rst", "trainings/material/soup/cxx11/010-introduction/group.rst", "trainings/material/soup/cxx11/010-introduction/history.rst", "trainings/material/soup/cxx11/010-introduction/overview-livehacking.rst", "trainings/material/soup/cxx11/020-new-language-features/010-strongly-typed-enums/topic.rst", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/group.rst", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/implementor-view.rst", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/intro.rst", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/mess.rst", "trainings/material/soup/cxx11/020-new-language-features/050-delegating-ctor/topic.rst", "trainings/material/soup/cxx11/020-new-language-features/055-constexpr/topic.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/afterword.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/group.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-smartptr-move.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-string-move.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-using-string-move.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/overview.rst", "trainings/material/soup/cxx11/020-new-language-features/070-miscellaneous/topic.rst", "trainings/material/soup/cxx11/020-new-language-features/auto.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/group.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-1-conceptless.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-2-conceptless-error.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-3-concept-integral.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/links.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-1-good-old-func.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-2-need-template.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-4-concept-has-size.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-5-concept-index-ret-double.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/group.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/fibo-generator.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/fibonacci.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/generator-h.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/generator-hello.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/simplest.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend-iter.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend-next.rst", "trainings/material/soup/cxx11/020-new-language-features/default.rst", "trainings/material/soup/cxx11/020-new-language-features/delete.rst", "trainings/material/soup/cxx11/020-new-language-features/final.rst", "trainings/material/soup/cxx11/020-new-language-features/group.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/group.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-capture.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-is-functor.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-is-functor-pitfall.rst", "trainings/material/soup/cxx11/020-new-language-features/modules.rst", "trainings/material/soup/cxx11/020-new-language-features/override.rst", "trainings/material/soup/cxx11/020-new-language-features/range-based-for.rst", "trainings/material/soup/cxx11/020-new-language-features/range-based-for-map.rst", "trainings/material/soup/cxx11/020-new-language-features/ranges/good-bad.rst", "trainings/material/soup/cxx11/020-new-language-features/ranges/group.rst", "trainings/material/soup/cxx11/020-new-language-features/ranges/intro.rst", "trainings/material/soup/cxx11/020-new-language-features/ranges/links.rst", "trainings/material/soup/cxx11/020-new-language-features/structured-binding.rst", "trainings/material/soup/cxx11/030-smart-pointers/040-closing-words/topic.rst", "trainings/material/soup/cxx11/030-smart-pointers/group.rst", "trainings/material/soup/cxx11/030-smart-pointers/introduction.rst", "trainings/material/soup/cxx11/030-smart-pointers/introduction-livehack.rst", "trainings/material/soup/cxx11/030-smart-pointers/sharedptr.rst", "trainings/material/soup/cxx11/030-smart-pointers/uniqueptr.rst", "trainings/material/soup/cxx11/030-smart-pointers/weakptr.rst", "trainings/material/soup/cxx11/035-perfect-forwarding/topic.rst", "trainings/material/soup/cxx11/040-bind-function/010-bind/topic.rst", "trainings/material/soup/cxx11/040-bind-function/020-function/topic.rst", "trainings/material/soup/cxx11/040-bind-function/group.rst", "trainings/material/soup/cxx11/050-multithreading/010-introduction/topic.rst", "trainings/material/soup/cxx11/050-multithreading/020-thread/topic.rst", "trainings/material/soup/cxx11/050-multithreading/030-race-conditions/topic.rst", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/atomics.rst", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/mutex.rst", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/scoped-locking.rst", "trainings/material/soup/cxx11/050-multithreading/condition-variable.rst", "trainings/material/soup/cxx11/050-multithreading/group.rst", "trainings/material/soup/cxx11/050-multithreading/promise-future.rst", "trainings/material/soup/cxx11/100-miscellaneous/010-chrono/topic.rst", "trainings/material/soup/cxx11/100-miscellaneous/any-variant-optional/variant.rst", "trainings/material/soup/cxx11/100-miscellaneous/group.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/allocator.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/classic-virtual.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/group.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/related-no-virtual.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/type-erasure.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/unrelated.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/variant-automatic-visit.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/variant-manual-if.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/variant-manual-visit.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/why-replace-virtual.rst", "trainings/material/soup/cxx11/drafts/group.rst", "trainings/material/soup/cxx11/exercises/bag-copy.rst", "trainings/material/soup/cxx11/exercises/bag-shared.rst", "trainings/material/soup/cxx11/exercises/bag-unique.rst", "trainings/material/soup/cxx11/exercises/group.rst", "trainings/material/soup/cxx11/filesystem/topic.rst", "trainings/material/soup/cxx11/group.rst", "trainings/material/soup/graph.rst", "trainings/material/soup/index.rst", "trainings/material/soup/kernel/cdev-auto/screenplay.rst", "trainings/material/soup/kernel/cdev-auto/slides.rst", "trainings/material/soup/kernel/cdev-auto/topic.rst", "trainings/material/soup/kernel/cdev-file-operations/screenplay.rst", "trainings/material/soup/kernel/cdev-file-operations/slides.rst", "trainings/material/soup/kernel/cdev-file-operations/topic.rst", "trainings/material/soup/kernel/cdev-first-functionality/slides.rst", "trainings/material/soup/kernel/cdev-first-functionality/topic.rst", "trainings/material/soup/kernel/cdev-manual/screenplay.rst", "trainings/material/soup/kernel/cdev-manual/slides.rst", "trainings/material/soup/kernel/cdev-manual/topic.rst", "trainings/material/soup/kernel/cdev-multiple-devices/slides.rst", "trainings/material/soup/kernel/cdev-multiple-devices/topic.rst", "trainings/material/soup/kernel/cdev-refactoring/screenplay.rst", "trainings/material/soup/kernel/cdev-refactoring/slides.rst", "trainings/material/soup/kernel/cdev-refactoring/topic.rst", "trainings/material/soup/kernel/dma/slides.rst", "trainings/material/soup/kernel/dma/topic.rst", "trainings/material/soup/kernel/fedora-kernel-build/screenplay.rst", "trainings/material/soup/kernel/fedora-kernel-build/topic.rst", "trainings/material/soup/kernel/fedora-module-build/screenplay.rst", "trainings/material/soup/kernel/fedora-module-build/topic.rst", "trainings/material/soup/kernel/group.rst", "trainings/material/soup/kernel/hello-world/slides.rst", "trainings/material/soup/kernel/hello-world/topic.rst", "trainings/material/soup/kernel/interrupt-coding/slides.rst", "trainings/material/soup/kernel/interrupt-coding/topic.rst", "trainings/material/soup/kernel/interrupt/slides.rst", "trainings/material/soup/kernel/interrupt/topic.rst", "trainings/material/soup/kernel/iomemory/slides.rst", "trainings/material/soup/kernel/iomemory/topic.rst", "trainings/material/soup/kernel/kmalloc/slides.rst", "trainings/material/soup/kernel/kmalloc/topic.rst", "trainings/material/soup/kernel/list/slides.rst", "trainings/material/soup/kernel/list/topic.rst", "trainings/material/soup/kernel/mutex-coding/slides.rst", "trainings/material/soup/kernel/mutex-coding/topic.rst", "trainings/material/soup/kernel/mutex/slides.rst", "trainings/material/soup/kernel/mutex/topic.rst", "trainings/material/soup/kernel/netdev/slides.rst", "trainings/material/soup/kernel/netdev/topic.rst", "trainings/material/soup/kernel/pci/slides.rst", "trainings/material/soup/kernel/pci/topic.rst", "trainings/material/soup/kernel/process-vs-atomic/slides.rst", "trainings/material/soup/kernel/process-vs-atomic/topic.rst", "trainings/material/soup/kernel/raspi-kernel-build/story.rst", "trainings/material/soup/kernel/raspi-kernel-build/topic.rst", "trainings/material/soup/kernel/sample-project.rst", "trainings/material/soup/kernel/spinlock-coding/slides.rst", "trainings/material/soup/kernel/spinlock-coding/topic.rst", "trainings/material/soup/kernel/spinlock/slides.rst", "trainings/material/soup/kernel/spinlock/topic.rst", "trainings/material/soup/kernel/stub-sysprog-dup/topic.rst", "trainings/material/soup/kernel/time_timer-coding/slides.rst", "trainings/material/soup/kernel/time_timer-coding/topic.rst", "trainings/material/soup/kernel/time_timer/slides.rst", "trainings/material/soup/kernel/time_timer/topic.rst", "trainings/material/soup/kernel/todo.rst", "trainings/material/soup/kernel/usermem/screenplay.rst", "trainings/material/soup/kernel/usermem/slides.rst", "trainings/material/soup/kernel/usermem/topic.rst", "trainings/material/soup/kernel/waitqueue/screenplay.rst", "trainings/material/soup/kernel/waitqueue/slides.rst", "trainings/material/soup/kernel/waitqueue/topic.rst", "trainings/material/soup/kernel/workqueue/screenplay.rst", "trainings/material/soup/kernel/workqueue/slides.rst", "trainings/material/soup/kernel/workqueue/topic.rst", "trainings/material/soup/linux/basics/archiving-compression/exercises.rst", "trainings/material/soup/linux/basics/archiving-compression/group.rst", "trainings/material/soup/linux/basics/archiving-compression/gzip.rst", "trainings/material/soup/linux/basics/archiving-compression/overview.rst", "trainings/material/soup/linux/basics/archiving-compression/tar.rst", "trainings/material/soup/linux/basics/exercises/FH-SS2022-EXAM-01-G1.rst", "trainings/material/soup/linux/basics/exercises/FH-SS2022-EXAM-01-G2.rst", "trainings/material/soup/linux/basics/exercises/group.rst", "trainings/material/soup/linux/basics/group.rst", "trainings/material/soup/linux/basics/intro/demo-everything-is-a-file.rst", "trainings/material/soup/linux/basics/intro/environment.rst", "trainings/material/soup/linux/basics/intro/exercises/fh-questions.rst", "trainings/material/soup/linux/basics/intro/group.rst", "trainings/material/soup/linux/basics/intro/login.rst", "trainings/material/soup/linux/basics/intro/overview.rst", "trainings/material/soup/linux/basics/intro/process.rst", "trainings/material/soup/linux/basics/intro/process-tree.rst", "trainings/material/soup/linux/basics/intro/wsl.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/exercises.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/group.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/io-redirection.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/io-redirection-swap-stdout-stderr.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/pipes.rst", "trainings/material/soup/linux/basics/permissions/basics.rst", "trainings/material/soup/linux/basics/permissions/exercises/credentials.rst", "trainings/material/soup/linux/basics/permissions/exercises/fh-questions.rst", "trainings/material/soup/linux/basics/permissions/exercises/fh-questions-nocheat.rst", "trainings/material/soup/linux/basics/permissions/exercises/group.rst", "trainings/material/soup/linux/basics/permissions/exercises/private-directory.rst", "trainings/material/soup/linux/basics/permissions/exercises/private-directory-question.rst", "trainings/material/soup/linux/basics/permissions/exercises/public-directory.rst", "trainings/material/soup/linux/basics/permissions/exercises/public-directory-question.rst", "trainings/material/soup/linux/basics/permissions/exercises/shared-file.rst", "trainings/material/soup/linux/basics/permissions/group.rst", "trainings/material/soup/linux/basics/permissions/setuid.rst", "trainings/material/soup/linux/basics/permissions/setuid-livedemo.rst", "trainings/material/soup/linux/basics/permissions/sticky.rst", "trainings/material/soup/linux/basics/permissions/umask.rst", "trainings/material/soup/linux/basics/shell/commandline.rst", "trainings/material/soup/linux/basics/shell/configfiles.rst", "trainings/material/soup/linux/basics/shell/cp.rst", "trainings/material/soup/linux/basics/shell/cwd.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/copy-tree.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-copy-files.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-create-files.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-move-files.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/group.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/mkdir-p-rm-r.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/rm-rf.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/rm-tree.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/verify-hierarchy.rst", "trainings/material/soup/linux/basics/shell/exercises/fh-questions.rst", "trainings/material/soup/linux/basics/shell/exercises/group.rst", "trainings/material/soup/linux/basics/shell/exercises/ls/dev-types.rst", "trainings/material/soup/linux/basics/shell/exercises/ls/etc-passwd-size.rst", "trainings/material/soup/linux/basics/shell/exercises/ls/group.rst", "trainings/material/soup/linux/basics/shell/exercises/ls/home-permissions.rst", "trainings/material/soup/linux/basics/shell/file_dir_create_rm.rst", "trainings/material/soup/linux/basics/shell/group.rst", "trainings/material/soup/linux/basics/shell/links.rst", "trainings/material/soup/linux/basics/shell/ls.rst", "trainings/material/soup/linux/basics/shell/mv.rst", "trainings/material/soup/linux/basics/shell/paths.rst", "trainings/material/soup/linux/basics/text-tools/cat.rst", "trainings/material/soup/linux/basics/text-tools/cut.rst", "trainings/material/soup/linux/basics/text-tools/exercises.rst", "trainings/material/soup/linux/basics/text-tools/find.rst", "trainings/material/soup/linux/basics/text-tools/grep.rst", "trainings/material/soup/linux/basics/text-tools/group.rst", "trainings/material/soup/linux/basics/text-tools/head-tail.rst", "trainings/material/soup/linux/basics/text-tools/less.rst", "trainings/material/soup/linux/basics/text-tools/overview.rst", "trainings/material/soup/linux/drafts/group.rst", "trainings/material/soup/linux/drafts/yocto.rst", "trainings/material/soup/linux/group.rst", "trainings/material/soup/linux/hardware/brushless-motor/topic.rst", "trainings/material/soup/linux/hardware/can/10-intro.rst", "trainings/material/soup/linux/hardware/can/20-interfaces.rst", "trainings/material/soup/linux/hardware/can/30-programming.rst", "trainings/material/soup/linux/hardware/can/40-harware.rst", "trainings/material/soup/linux/hardware/can/group.rst", "trainings/material/soup/linux/hardware/group.rst", "trainings/material/soup/linux/hardware/i2c/topic.rst", "trainings/material/soup/linux/hardware/pwm/topic.rst", "trainings/material/soup/linux/hardware/w1/topic.rst", "trainings/material/soup/linux/ssh/basics.rst", "trainings/material/soup/linux/ssh/exercises/copy-file.rst", "trainings/material/soup/linux/ssh/exercises/copy-tree.rst", "trainings/material/soup/linux/ssh/exercises/group.rst", "trainings/material/soup/linux/ssh/exercises/pubkey.rst", "trainings/material/soup/linux/ssh/group.rst", "trainings/material/soup/linux/ssh/key-pair.rst", "trainings/material/soup/linux/ssh/links.rst", "trainings/material/soup/linux/ssh/portforwarding.rst", "trainings/material/soup/linux/ssh/scp.rst", "trainings/material/soup/linux/ssh/sshfs.rst", "trainings/material/soup/linux/sysprog/basics/errorhandling.rst", "trainings/material/soup/linux/sysprog/basics/group.rst", "trainings/material/soup/linux/sysprog/basics/syscalls.rst", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io.rst", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-file.rst", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-network.rst", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-timer.rst", "trainings/material/soup/linux/sysprog/blocking-io/group.rst", "trainings/material/soup/linux/sysprog/file-io/basics.rst", "trainings/material/soup/linux/sysprog/file-io/basics-exercise-copy.rst", "trainings/material/soup/linux/sysprog/file-io/basics-exercise-hole.rst", "trainings/material/soup/linux/sysprog/file-io/duplicate.rst", "trainings/material/soup/linux/sysprog/file-io/example-O_CREAT.rst", "trainings/material/soup/linux/sysprog/file-io/example-O_EXCL.rst", "trainings/material/soup/linux/sysprog/file-io/example-O_RDONLY.rst", "trainings/material/soup/linux/sysprog/file-io/example-O_WRONLY.rst", "trainings/material/soup/linux/sysprog/file-io/exercise-sensor-read.rst", "trainings/material/soup/linux/sysprog/file-io/group.rst", "trainings/material/soup/linux/sysprog/file-io/misc.rst", "trainings/material/soup/linux/sysprog/group.rst", "trainings/material/soup/linux/sysprog/intro-hw/get.rst", "trainings/material/soup/linux/sysprog/intro-hw/group.rst", "trainings/material/soup/linux/sysprog/intro-hw/sysfs-gpio.rst", "trainings/material/soup/linux/sysprog/intro-hw/watch.rst", "trainings/material/soup/linux/sysprog/posix-threads/010-introduction/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/020-lifecycle/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/030-exercise-pthcreate-race-condition/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/040-mutex/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/050-exercise-mutex/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/060-condition-variable/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/070-exercise-condition-variable/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/080-miscellaneous/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/090-last-warning/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/group.rst", "trainings/material/soup/linux/sysprog/posix-threads/locked-trylock.rst", "trainings/material/soup/linux/sysprog/process/commandline.rst", "trainings/material/soup/linux/sysprog/process/group.rst", "trainings/material/soup/linux/sysprog/process/tree.rst", "trainings/material/soup/linux/sysprog/scheduling/basics.rst", "trainings/material/soup/linux/sysprog/scheduling/group.rst", "trainings/material/soup/linux/sysprog/scheduling/processes-and-threads.rst", "trainings/material/soup/linux/sysprog/scheduling/questions.rst", "trainings/material/soup/linux/sysprog/scheduling/realtime.rst", "trainings/material/soup/linux/sysprog/scheduling/realtime-api.rst", "trainings/material/soup/linux/sysprog/scheduling/wakup-latency.rst", "trainings/material/soup/linux/sysprog/sysprog_events/code/index.rst", "trainings/material/soup/linux/sysprog/sysprog_events/screenplay.rst", "trainings/material/soup/linux/sysprog/sysprog_events/topic.rst", "trainings/material/soup/linux/sysprog/sysprog_ipc/code/index.rst", "trainings/material/soup/linux/sysprog/sysprog_ipc/screenplay.rst", "trainings/material/soup/linux/sysprog/sysprog_ipc/slides.rst", "trainings/material/soup/linux/sysprog/sysprog_ipc/topic.rst", "trainings/material/soup/linux/sysprog/sysprog_signals/code/index.rst", "trainings/material/soup/linux/sysprog/sysprog_signals/screenplay.rst", "trainings/material/soup/linux/sysprog/sysprog_signals/slides.rst", "trainings/material/soup/linux/sysprog/sysprog_signals/topic.rst", "trainings/material/soup/linux/toolchain/basics/topic.rst", "trainings/material/soup/linux/toolchain/cmake/cross.rst", "trainings/material/soup/linux/toolchain/cmake/local.rst", "trainings/material/soup/linux/toolchain/cross/basics.rst", "trainings/material/soup/linux/toolchain/cross/group.rst", "trainings/material/soup/linux/toolchain/exercises/cross-build.rst", "trainings/material/soup/linux/toolchain/exercises/fh-2022-questions.rst", "trainings/material/soup/linux/toolchain/exercises/group.rst", "trainings/material/soup/linux/toolchain/exercises/native-build.rst", "trainings/material/soup/linux/toolchain/exercises/raspberry-toolchain.rst", "trainings/material/soup/linux/toolchain/group.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/group.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/linaro.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-build-details.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-build-docker-fedora.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-setup.rst", "trainings/material/soup/linux/toolchain/separate-compilation/topic.rst", "trainings/material/soup/linux/toolchain/shared-libraries/topic.rst", "trainings/material/soup/linux/toolchain/static-library/topic.rst", "trainings/material/soup/python/advanced/closures/topic.rst", "trainings/material/soup/python/advanced/comprehensions/topic.rst", "trainings/material/soup/python/advanced/context-mgr/topic.rst", "trainings/material/soup/python/advanced/decorators/topic.rst", "trainings/material/soup/python/advanced/exceptions/topic.rst", "trainings/material/soup/python/advanced/exec/topic.rst", "trainings/material/soup/python/advanced/group.rst", "trainings/material/soup/python/advanced/iteration-generation/iteration-generation/topic.rst", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/fibonacci-generator.rst", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/iterator-protocol.rst", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/topic.rst", "trainings/material/soup/python/advanced/iteration-generation/topic.rst", "trainings/material/soup/python/advanced/modules.rst", "trainings/material/soup/python/advanced/multithreading/basics.rst", "trainings/material/soup/python/advanced/multithreading/group.rst", "trainings/material/soup/python/advanced/multithreading/mutex.rst", "trainings/material/soup/python/advanced/multithreading/questions.rst", "trainings/material/soup/python/advanced/oo/abc/topic.rst", "trainings/material/soup/python/advanced/oo/classes-and-dicts/topic.rst", "trainings/material/soup/python/advanced/oo/constructor/topic.rst", "trainings/material/soup/python/advanced/oo/group.rst", "trainings/material/soup/python/advanced/oo/inheritance/topic.rst", "trainings/material/soup/python/advanced/oo/methods/topic.rst", "trainings/material/soup/python/advanced/oo/namedtuple/topic.rst", "trainings/material/soup/python/advanced/oo/operator-overloading/topic.rst", "trainings/material/soup/python/advanced/oo/properties/topic.rst", "trainings/material/soup/python/advanced/oo/str-repr/topic.rst", "trainings/material/soup/python/advanced/starargs/topic.rst", "trainings/material/soup/python/basics/group.rst", "trainings/material/soup/python/basics/installation.rst", "trainings/material/soup/python/basics/python_0110_blahblah/topic.rst", "trainings/material/soup/python/basics/python_0120_helloworld/topic.rst", "trainings/material/soup/python/basics/python_0125_running/topic.rst", "trainings/material/soup/python/basics/python_0130_syntax_etc/topic.rst", "trainings/material/soup/python/basics/python_0139_commandline_argv/topic.rst", "trainings/material/soup/python/basics/python_0140_variables/topic.rst", "trainings/material/soup/python/basics/python_0150_datatypes_overview/topic.rst", "trainings/material/soup/python/basics/python_0150_datatypes_overview_compound/topic.rst", "trainings/material/soup/python/basics/python_0160_boolean/topic.rst", "trainings/material/soup/python/basics/python_0170_if/topic.rst", "trainings/material/soup/python/basics/python_0193_while/topic.rst", "trainings/material/soup/python/basics/python_0200_sequential_types/topic.rst", "trainings/material/soup/python/basics/python_0210_indexing_slicing/topic.rst", "trainings/material/soup/python/basics/python_0220_for/topic.rst", "trainings/material/soup/python/basics/python_0225_range/topic.rst", "trainings/material/soup/python/basics/python_0250_refs_flat_deep_copy/topic.rst", "trainings/material/soup/python/basics/python_0270_functions/screenplay-scoping.rst", "trainings/material/soup/python/basics/python_0270_functions/slideshow.rst", "trainings/material/soup/python/basics/python_0270_functions/topic.rst", "trainings/material/soup/python/basics/python_0300_strings/topic.rst", "trainings/material/soup/python/basics/python_0310_strings_formatting/topic.rst", "trainings/material/soup/python/basics/python_0320_strings_methods/topic.rst", "trainings/material/soup/python/basics/python_0400_lists/topic.rst", "trainings/material/soup/python/basics/python_0450_dictionaries/topic.rst", "trainings/material/soup/python/basics/python_0460_sets/topic.rst", "trainings/material/soup/python/basics/python_0500_files/topic.rst", "trainings/material/soup/python/basics/python_1000_function_objects/topic.rst", "trainings/material/soup/python/drafts/argparse/topic.rst", "trainings/material/soup/python/drafts/group.rst", "trainings/material/soup/python/drafts/matplotlib/topic.rst", "trainings/material/soup/python/drafts/setuptools/topic.rst", "trainings/material/soup/python/exercises/csv/csv-db.rst", "trainings/material/soup/python/exercises/csv/csv-module.rst", "trainings/material/soup/python/exercises/csv/group.rst", "trainings/material/soup/python/exercises/group.rst", "trainings/material/soup/python/exercises/herdt/boolean.rst", "trainings/material/soup/python/exercises/herdt/exercise_while_even_numbers.rst", "trainings/material/soup/python/exercises/herdt/greet.rst", "trainings/material/soup/python/exercises/herdt/group.rst", "trainings/material/soup/python/exercises/herdt/max_numbers.rst", "trainings/material/soup/python/exercises/herdt/swap.rst", "trainings/material/soup/python/exercises/herdt/username_password.rst", "trainings/material/soup/python/exercises/legacy/cmdline_digit.rst", "trainings/material/soup/python/exercises/legacy/dict_keyerror.rst", "trainings/material/soup/python/exercises/legacy/distill.rst", "trainings/material/soup/python/exercises/legacy/fibonacci-generator.rst", "trainings/material/soup/python/exercises/legacy/for_primeness.rst", "trainings/material/soup/python/exercises/legacy/group.rst", "trainings/material/soup/python/exercises/legacy/join_function.rst", "trainings/material/soup/python/exercises/legacy/max_numbers.rst", "trainings/material/soup/python/exercises/legacy/max_numbers_function.rst", "trainings/material/soup/python/exercises/legacy/mixed_list_executable.rst", "trainings/material/soup/python/exercises/legacy/mixed_list_interactive.rst", "trainings/material/soup/python/exercises/legacy/passwd.rst", "trainings/material/soup/python/exercises/legacy/primeness_function.rst", "trainings/material/soup/python/exercises/legacy/revert.rst", "trainings/material/soup/python/exercises/legacy/string-rightjustify.rst", "trainings/material/soup/python/exercises/legacy/uniq_function.rst", "trainings/material/soup/python/exercises/legacy/uniq_generator.rst", "trainings/material/soup/python/exercises/legacy/wc.rst", "trainings/material/soup/python/exercises/legacy/while_primeness.rst", "trainings/material/soup/python/exercises/sensors/group.rst", "trainings/material/soup/python/exercises/sensors/project-setup.rst", "trainings/material/soup/python/exercises/sensors/sensor-const.rst", "trainings/material/soup/python/exercises/userdb/csvdictreader.rst", "trainings/material/soup/python/exercises/userdb/csvdictreader-function.rst", "trainings/material/soup/python/exercises/userdb/csvreader.rst", "trainings/material/soup/python/exercises/userdb/csvreader-function.rst", "trainings/material/soup/python/exercises/userdb/group.rst", "trainings/material/soup/python/exercises/userdb/mqtt-publish-csv.rst", "trainings/material/soup/python/exercises/userdb/user-class-person.rst", "trainings/material/soup/python/exercises/userdb/user_json.rst", "trainings/material/soup/python/exercises/userdb/userdb_csv.rst", "trainings/material/soup/python/graph.rst", "trainings/material/soup/python/group.rst", "trainings/material/soup/python/link-collection.rst", "trainings/material/soup/python/misc/ai/group.rst", "trainings/material/soup/python/misc/ai/k-means.rst", "trainings/material/soup/python/misc/ai/linear-regression/code.rst", "trainings/material/soup/python/misc/ai/linear-regression/history_data.rst", "trainings/material/soup/python/misc/ai/linear-regression/linear_regression.ipynb", "trainings/material/soup/python/misc/ai/linear-regression/topic.rst", "trainings/material/soup/python/misc/ai/machine-learning-intro.rst", "trainings/material/soup/python/misc/csv/topic.rst", "trainings/material/soup/python/misc/db/dbapi2.rst", "trainings/material/soup/python/misc/db/group.rst", "trainings/material/soup/python/misc/db/postgres.rst", "trainings/material/soup/python/misc/db/sqlite3.rst", "trainings/material/soup/python/misc/encoding/topic.rst", "trainings/material/soup/python/misc/group.rst", "trainings/material/soup/python/misc/import.rst", "trainings/material/soup/python/misc/mqtt/topic.rst", "trainings/material/soup/python/misc/pandas/add_row.rst", "trainings/material/soup/python/misc/pandas/basics.rst", "trainings/material/soup/python/misc/pandas/filters.rst", "trainings/material/soup/python/misc/pandas/group.rst", "trainings/material/soup/python/misc/pandas/iloc.rst", "trainings/material/soup/python/misc/pandas/indexes.rst", "trainings/material/soup/python/misc/pandas/loc.rst", "trainings/material/soup/python/misc/pandas/mod_col.rst", "trainings/material/soup/python/misc/python_5550_xml_etree/topic.rst", "trainings/material/soup/python/misc/vscode.rst", "trainings/material/soup/python/swdev/group.rst", "trainings/material/soup/python/swdev/pip/screenplay.rst", "trainings/material/soup/python/swdev/pip/slides.rst", "trainings/material/soup/python/swdev/pip/topic.rst", "trainings/material/soup/python/swdev/pypi.rst", "trainings/material/soup/python/swdev/pytest/group.rst", "trainings/material/soup/python/swdev/pytest/intro.rst", "trainings/material/soup/python/swdev/unittest.rst", "trainings/material/soup/python/swdev/venv/screenplay.rst", "trainings/material/soup/python/swdev/venv/slides.rst", "trainings/material/soup/python/swdev/venv/topic.rst", "trainings/material/soup/unittest/group.rst", "trainings/material/soup/unittest/unittest_gtest_basics/code/index.rst", "trainings/material/soup/unittest/unittest_gtest_basics/screenplay.rst", "trainings/material/soup/unittest/unittest_gtest_basics/topic.rst", "trainings/material/soup/unittest/unittest_gtest_cmake/screenplay.rst", "trainings/material/soup/unittest/unittest_gtest_cmake/topic.rst", "trainings/material/soup/unittest/unittest_gtest_fixture/code/index.rst", "trainings/material/soup/unittest/unittest_gtest_fixture/screenplay.rst", "trainings/material/soup/unittest/unittest_gtest_fixture/topic.rst", "trainings/org.rst", "trainings/repertoire/_hidden/kettner-lfs-2013-09-16.rst", "trainings/repertoire/bash.rst", "trainings/repertoire/c-like/c.rst", "trainings/repertoire/c-like/c-advanced.rst", "trainings/repertoire/c-like/cxx.rst", "trainings/repertoire/c-like/cxx11.rst", "trainings/repertoire/c-like/index.rst", "trainings/repertoire/cmake.rst", "trainings/repertoire/design-patterns/design-patterns.rst", "trainings/repertoire/embedded.rst", "trainings/repertoire/kernel-programming-basics.rst", "trainings/repertoire/linux-basics.rst", "trainings/repertoire/make.rst", "trainings/repertoire/python/advanced.rst", "trainings/repertoire/python/basics.rst", "trainings/repertoire/python/herdt.rst", "trainings/repertoire/raspi-hands-on.rst", "trainings/repertoire/svn.rst", "trainings/repertoire/sysprog/basics.rst", "trainings/repertoire/sysprog/fortgeschrittenes.rst", "trainings/repertoire/sysprog/index.rst", "trainings/repertoire/sysprog/multithreading.rst", "trainings/repertoire/sysprog/network.rst", "trainings/repertoire/unittests.rst"], "titles": ["Kontakt", "Curriculum Vitae", "\u00dcber Mich", "Projekte", "Skills", "Angebot: In-House Schulungen", "Course Material", "Einleitung", "Python Basics (2021-xx-xx - 2021-yy-yy)", "Programmierung Grundlagen (Jupyter Notebook)", "Details", "Course List", "Templates for Course Descriptions", "About This Site", "OpenTraining", "Draft Topics", "Miscellaneous", "S5 Integration", "S5 Slide Tests", "Level 1 Heading", "Screencasts", "Topics to be Written", "Netidee F\u00f6rderantrag", "Netidee F\u00f6rderantrag: OpenTraining", "Video Screenplay", "Use Case: Custom Training, Subtract Known", "Use Case: Calculate Minimum Training Duration", "Use Cases", "Use Case: Use Training Material From Other Sites", "Use Case: Menu to Choose From", "Use Case: Slide Show Material as Plain-Text Files", "Sending A V4L Camera Device Output Over SSH", "Emoji Codes (<code class=\"docutils literal notranslate\"><span class=\"pre\">sphinxemoji</span></code>)", "Recipes", "<code class=\"docutils literal notranslate\"><span class=\"pre\">isoamsa.txt</span></code>: Added Mathematical Symbols: Arrows", "<code class=\"docutils literal notranslate\"><span class=\"pre\">isoamsr.txt</span></code>: Added Mathematical Symbols: Relations", "<code class=\"docutils literal notranslate\"><span class=\"pre\">isonum.txt</span></code>: Added Mathematical Symbols: Binary Operators", "Layout Test Page", "<code class=\"docutils literal notranslate\"><span class=\"pre\">mmlalias.txt</span></code>: MathML aliases for entities from other sets", "reStructuredText Cheat Sheet", "Sphinxish", "Seminar on \u201cClean Code\u201d (2022-04-13)", "Live Hacking Before (Formal) Unit Testing", "Clean Code: Messages From The Book", "Live Hacking: Switch To <code class=\"docutils literal notranslate\"><span class=\"pre\">googletest</span></code>", "Is Software A Craft? Software Is A Craft!", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB::find()</span></code> Crashes If User Not Found", "Bugs", "Existing Files Are Overwritten", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB::read()</span></code>: What If Done Twice?", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB</span></code>: Alternative Output Format - CSV", "Features", "Search By Other Indexes", "Backlog: What Needs To Change, Or We Will All Die", "<code class=\"docutils literal notranslate\"><span class=\"pre\">BackingStore</span></code> Has Too Many Responsibilities \u27f6 Interface", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB</span></code> Has Too Many Responsibilities \u27f6 <code class=\"docutils literal notranslate\"><span class=\"pre\">BackingStore</span></code>", "Refactoring", "Load From BackingStore in Constructor", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB::{read,write}()</span></code>: <code class=\"docutils literal notranslate\"><span class=\"pre\">bool</span></code>, Really?", "Submission: Pointless Blinking With Python, <code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> (and a Raspberry Pi of Course)", "Pointless Blinking With Python, <code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> (and a Raspberry Pi of Course)", "Installation Notes", "Submission: Pointless Blinking With Python, <code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> (and a Raspberry Pi of Course)", "Screenplay: Pointless Blinking With Python, <code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> (and a Raspberry Pi of Course)", "Hochk\u00f6nig", "Blog", "Sphinx", "C++", "C++: Building with CMake", "C++: Interfaces", "C++: OO Basics", "C++: Unit Testing", "Graph", "Embedded Computing 1", "Embedded Computing 2", "EX: Race Conditions", "EX: Avoiding Race Condition", "Git Introduction", "Embedded Computing 2019", "Linux", "Introduction to Linux and Unix", "Linux Hardware Device Management", "EX: Averaging Sensor", "EX: Averaging Sensor (parallel)", "EX: LED Temperature Display", "EX: Temperature Sensors", "GPIO", "Multithreading", "Avoiding Race Conditions: Semaphore/Mutex", "Communication: Waiting for Something", "Python Basics", "EX: Averaging Sensor, Display", "EX: Temperature Sensors", "Simple Web Programming", "Sensors Web Pages", "Python", "Embedded Computing 2020", "SS2022", "2022-03-08", "2022-03-10", "2022-03-10 (Homework until 2022-03-21)", "2022-03-21", "2022-03-22, 2022-03-24 (KU)", "2022-03-28", "2022-04-01", "SS2022: Logs", "WS2022", "FH Joanneum (Embedded Computing): WS2022/2023 (Questions About Code)", "FH Joanneum (Embedded Computing): WS2022/2023 (Yes/No Questions)", "Lab Exam 2023-01-17", "SS2023: Exam 2023-06-30 (Handout)", "SS2023: Exam 2023-06-30 (Solved)", "Working with Git In Our <code class=\"docutils literal notranslate\"><span class=\"pre\">FH-ECE21</span></code> Project", "Embedded Computing 2021", "SS2023", "(DONE) Boiling Pot (The Beginning)", "Boiling Pot: Basic Integration", "Boiling Pot: Display, And Status Reporting", "Boiling Pot: Full Integration (Display And IoT)", "(DONE) Data Logger", "Data Logger: CSV Sink", "Data Logger: Integration", "Data Logger: MQTT Sink", "Display Interface/Infrastructure", "WS2023/24: Group Project - Tasks", "<code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> Switch", "Temperature Display: LED Via A PWM Controller", "(DONE) Sensor Interface", "(DONE) Onewire Sensor", "(DONE) Switch Interface", "SysFS GPIO Switch", "WS2023/24", "Embedded Computing (FH Joanneum Graz)", "Git Notes", "Work in Progress", "Packaging this Site on PyPI", "Audio Chip Bringup", "Get Debian 10 Kernel Config", "Finish: Debian Kernel Package etc.", "Yocto Kernel Bringup on Customer Hardware", "I2S Audio for a Kontron SMARC Module", "Dirty Upgrade Path", "Wait for Customer Hardware", "Extract Kernel from Intel Yocto BSP", "Python Training Improvements", "Creating Screencasts", "SEO", "Stacks (Hanging)", "Miscellaneous To Do", "Learning The Web", "Beagleboard: How to Repair NAND (also known as 40W)", "Porting to Linux (There\u2019s Always A Better Way)", "Saving Solid State Disk Life (Gentoo)", "\u201cWhy <code class=\"docutils literal notranslate\"><span class=\"pre\">ps</span></code> Sucks\u201d or \u201cCounting Memory Consumption\u201d", "Patching and Building the Fedora Kernel", "Adding a Custom Domain to a Github Pages Project Site", "Using Microsoft Teams on Linux", "Deploying Sphinx Generated Documentation to Github Pages", "Using BigBlueButton for Online Training", "Traunstein via Zierlersteig", "Grintovec (via Plan\u0161arsko Jezero, \u010ce\u0161ka Ko\u010da)", "How to Brick a \u20ac1399 Dell XPS 13", "Building A Cross Toolchain For The Raspberry Pi, Using <code class=\"docutils literal notranslate\"><span class=\"pre\">crosstool-ng</span></code>", "Posts", "Linux und Open Source", "Richtlinien zur Ver\u00f6ffentlichung von Kursmaterial", "Exercises", "Courses: Overview", "Qualivision, Z\u00fcrich, 1.10.2013", "Kursnotizen: Linux Embedded 2015-11-30", "Live Hacking", "Python Individualtraining (5 Tage, beginnend 28.10.2019)", "Goals of this Training", "Random Live Hacking", "Python (12.11.2019 - 14.11.2019 in Graz)", "Proposal", "IPC in Linux (10.1.2020 in Graz)", "\u00dcbung: handgestrickter String, um die Fallen von C++ lustvoll zu erleiden", "C++ f\u00fcr Embedded C Programmierer (30.3.2020 - 3.4.2020 Baden W\u00fcrttemberg)", "Installing <code class=\"docutils literal notranslate\"><span class=\"pre\">googletest</span></code> By Hand", "Software Setup, Build", "Argh: Using This Site With Visual Studio Code", "Code", "Python Grundlagen (13.5.2020 - 14.5.2020 bei einer Firma in Graz)", "Python Schulung 18. und 19.5.2020", "Code", "Python Individualtraining (18.5.2020 - 19.5.2020)", "Python Advanced (7.9.2020 - 10.9.2020)", "Python Basics (28.9.2020 - 30.9.2020)", "Iterables", "Python Basic and Advanced (19.10.2020 - 22.10.2020)", "Linux on Raspberry Pi", "Python Basics (23.11.2020 - 25.11.2020)", "Linux Basics (30.11.2020 - 3.12.2020)", "6 Grundlegende Sprachelemente", "Programmierung Grundlagen (13. und 14.1.2021)", "Programmierung Grundlagen (Jupyter Notebook)", "Python Basics (22.2.2021 - 24.2.2021)", "Linux Kernel Driver Development Basics (14.12.2020)", "Python Advanced", "2021-03-15", "Hallo Jupyter Notebook", "Python Basic and Advanced (22.3.2021 - 25.3.2021)", "Linux Basics, Shell Scripting (2021-03-29)", "Einleitung", "Programmierung Grundlagen (12. und 13.4.2021)", "Programmierung Grundlagen (Jupyter Notebook)", "Syntax etc.", "Python Grundlagen (2021-05-03 - 2021-05-05)", "Python Grundlagen (Jupyter Notebook)", "Das <code class=\"docutils literal notranslate\"><span class=\"pre\">with</span></code> Statement", "Python Advanced (2021-05-25 - 2021-05-27)", "Programmieren mit C (2021-06-14 - 2021-06-18)", "The C++ Programming Language (2021-07-12 - 2021-07-16)", "Programmierung Grundlagen, anhand von Python (2. und 3.8.2021)", "Datenstrukturen", "Compound Datatypes", "Read a Cleaned-Up SAP Export", "Python Grundlagen (2021-08-23 - 2021-08-25)", "Jupyter Notebook", "Initial Terminology", "Python Basics (2021-08-31 - 2021-09-01)", "Python Grundlagen (Jupyter Notebook)", "2021-11-17", "Python Basics (2021-11-17 - 2021-11-19)", "Python Grundlagen (Jupyter Notebook)", "Notebook", "Python Advanced (2021-12-01 - 2021-12-03)", "Python Grundlagen (Jupyter Notebook)", "C/C++ Programming (2021-12-06 - 2021-12-10, 2022-01-24 - 2022-02-04)", "Programmierung Grundlagen, anhand von Python (2022-01-17 - 2022-01-10)", "2022-01-17", "Programmierung Grundlagen (Jupyter Notebook)", "Datatypes", "Python Basics (2022-02-23 - 2022-02-25)", "Jupyter Notebook", "Wiederholung", "Python Advanced (2022-03-15 - 2022-03-17, 2022-03-31)", "Jupyter Notebook", "Hello World", "Python (2022-03-23, 2022-03-30, 2022-04-19 - 2022-03-21)", "Jupyter Notebook", "Programmierung Grundlagen, anhand von Python (2022-04-05 - 2022-04-08)", "BlahBlah", "Programmierung Grundlagen (Jupyter Notebook)", "Python Basics (2022-04-25 - 2022-04-27)", "BlahBlah", "Python Grundlagen (Jupyter Notebook)", "Python (2022-05-02 - 2022-05-05)", "Hello Jupyter Notebook", "Python Grundlagen (Jupyter Notebook)", "Python Advanced (2022-05-16 - 2022-05-18)", "Assert", "Python Grundlagen (Jupyter Notebook)", "Vorbesprechung 2022-05-11", "C++: A New Language Starting In 2011", "C++: A New Language Starting In 2011", "Linux Basics (2022-10-03 - 2022-10-05)", "C++: A New Language Starting In 2011 (2022-10-11 - 2022-10-13)", "Design- and Architectural Patterns With C++ (2022-10-24 - 2022-10-26)", "Python: Tour-De-Force (2022-11-07 - 2022-11-10, 2022-12-01)", "Python (2022-10-17)", "Python Grundlagen (Jupyter Notebook)", "Python (2022-11-16 - 2022-11-18)", "Python (2022-11-16 - 2022-11-18)", "Python Grundlagen (Jupyter Notebook)", "Linux Basics (2023-01-23 - 2023-01-26)", "Embedded Linux Systems Programming (2023-02-13 - 2023-02-17)", "Whetting Your Appetite (Jupyter Notebook)", "Whetting Your Appetite (Livehacking Demo)", "Python For SAP Developers (2023-03-13 - 2023-03-15)", "2023-03-13", "Python For SAP Developers (Jupyter Notebook)", "Original Agenda: Python For SAP Developers (2023-03-13 - 2023-03-15)", "Hacking About On A SAP Test Dataset", "Some Usecases On A Test Dataset From SAP", "C++ For Embedded Developers (2023-03-20 - 2023-03-23)", "Clean Code Development With Python (2023-03-28 - 2023-03-29)", "C++ For Embedded Developers (2023-04-18 - 2023-04-20)", "Agenda: Python Advanced (2023-04-24 - 2023-04-26)", "Python Advanced (2023-04-24 - 2023-04-26)", "Jupyter Notebook: Python Advanced (2023-04-24 - 2023-04-26)", "Jupyter Notebook (Structure): Python Advanced (2023-04-24 - 2023-04-26)", "Agenda: Python Basics (2023-05-15 - 2023-05-17)", "Python Basics (2023-05-15 - 2023-05-17)", "Python Basics (2023-05-15 - 2023-05-17)", "Python Grundlagen (Jupyter Notebook)", "Agenda: Linux Basics (2023-05-23 - 2023-05-25)", "Linux Basics (2023-05-23 - 2023-05-25)", "Agenda: Python Basics (2023-06-20 - 2023-06-22)", "Python Basics (2023-06-20 - 2023-06-22)", "Python Basics (2023-06-20 - 2023-06-22)", "Python Basics (Jupyter Notebook)", "Agenda: CMake (2023-07-03)", "CMake: An Introduction (2023-07-18)", "Python Advanced (2023-09-25 - 2023-09-27)", "Python Advanced (2023-09-25 - 2023-09-27)", "Python Advanced, Jupyter Notebook (2023-09-25 - 2023-09-27)", "Python Advanced (2023-10-09 - 2023-10-11)", "Python Advanced (2023-10-09 - 2023-10-09)", "Python Advanced, Jupyter Notebook (2023-09-25 - 2023-09-27)", "Agenda: Python Advanced (2023-10-24 - 2023-10-26)", "Python Advanced (2023-10-24 - 2023-10-26)", "Jupyter Notebook: Python Advanced", "Jupyter Notebook (Structure): Python Advanced (2023-10-24 - 2023-10-26)", "Agenda: Python Advanced (2023-11-22 - 2023-11-24)", "Python Advanced (2023-11-22 - 2023-22-24)", "Jupyter Notebook: Python Advanced (2023-11-22 - 2023-11-24)", "Jupyter Notebook (Structure): Python Advanced (2023-11-22 - 2023-11-24)", "Agenda: CMake (2023-11-27)", "CMake: An Introduction (2023-11-27)", "Agenda: Python Basics (2023-11-29 - 2023-12-01)", "Python Basics (2023-11-29 - 2023-12-01)", "Python Basics (2023-11-29 - 2023-12-01)", "Python Basics (Jupyter Notebook)", "Agenda: C++: Advanced Topics", "C++: Advanced Topics (2023-12-04 - 2023-12-06)", "C++ For Embedded Developers (Beginning of 2023)", "Python/SAP", "Agenda: Python Basics (Beginning Of 2024)", "Screenplay Checker", "GPIO: Blinklicht", "GPIO: Blinklicht Interface", "GPIO: Object Oriented Blinklicht", "GPIO: Blinklicht Unittests", "ECE19: Exercises and Custom Topics", "Reading a File", "2021-05-20 (G2)", "2021-05-21", "Tuple Unpacking", "Basics", "An Example", "Cloud Computer, SSH Login", "Formalit\u00e4ten", "Embedded Computing 1 (ECE 19)", "Daily Log", "Embedded Computing 1 (Deutsch)", "Embedded Computing 1 (English)", "Plan for Summer 2021", "2021-10-07", "2021-10-12 (Bringing Newcomers Up-to-Date)", "2021-10-28", "2021-11-15", "2021-11-29", "2021-12-1{4,5}", "2022-01-10", "2022-01-12", "2022-02-15", "Agenda/Log", "Embedded Computing 2 (ECE 19)", "Exam Material Overview", "Embedded Computing 1+2, ECE 19", "Details", "Bisher Gehaltene", "Training Material: Overview and Download", "Installation", "Introduction", "Hello World", "Variables and Arithmetic", "Exercise: A Better Fahrenheit Table", "<code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code> Loops", "Exercise: Fahrenheit Table Using <code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code>", "Symbolic Constants", "Exercise: Fahrenheit Table Using Macros", "Character I/O", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">wc</span></code> For The Poor", "Arrays", "Exercise: Character Histogram", "Functions", "Exercise: Forward Declaration", "Character Arrays", "Exercise: Read Line Into String from <code class=\"docutils literal notranslate\"><span class=\"pre\">stdin</span></code>", "Lifetime of Variables", "Introduction", "Type System", "Variable Names", "Data Types, Sizes", "Constants", "Variable Definitions", "Arithmetic Operators", "Relational and Logical Operators", "Type Conversions", "Increment, Decrement", "Exercise: Copy and Reduce String", "Bit-Operators", "Assignment with Calculation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">?:</span></code> - Conditional Expression", "Precedence, Associativity", "Types, Operators, Expressions", "Statements and Blocks", "<code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code> - <code class=\"docutils literal notranslate\"><span class=\"pre\">else</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">else</span></code> - <code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">switch</span></code>", "Loops: <code class=\"docutils literal notranslate\"><span class=\"pre\">while</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code>", "Loops: <code class=\"docutils literal notranslate\"><span class=\"pre\">do</span> <span class=\"pre\">-</span> <span class=\"pre\">while</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">break</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">continue</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">goto</span></code> and Labels", "Program Flow", "Basics", "Extern/Global Variables", "Header Files", "Static Variables", "C Preprocessor: Basics", "C Preprocessor: More", "Functions and Program Structure", "Pointers and Addresses", "Pointers as Function Parameters", "Exercise: Function That Swaps Two Variables", "Pointers and Arrays", "Commandline Arguments", "Pointers and Arrays", "<code class=\"docutils literal notranslate\"><span class=\"pre\">struct</span></code>: Basics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">struct</span></code>: Functions", "<code class=\"docutils literal notranslate\"><span class=\"pre\">typedef</span></code>: Type Alias", "Structures", "Dynamic Memory", "Singly Linked List", "Memory", "Volatile", "Compiler Intrinsics", "Alignment", "Advanced Language Features", "Sanity and Readabilty", "Know Your Integers", "Discrete Values - <code class=\"docutils literal notranslate\"><span class=\"pre\">enum</span></code>", "Visibility - <code class=\"docutils literal notranslate\"><span class=\"pre\">static</span></code>", "Correctness - <code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code>", "Struct Initialization", "Explict Type Safety", "<code class=\"docutils literal notranslate\"><span class=\"pre\">valgrind</span></code>", "Program Sanity", "Optimization", "Optimizations: Compute Bound Code", "Optimizations: Memory Optimizations", "Performance", "Introduction", "GNU Profiler - <code class=\"docutils literal notranslate\"><span class=\"pre\">gprof</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">callgrind</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">oprofile</span></code>", "Profiling", "The C Programming Language", "Messages From The Book", "What\u2019s There? What Have We Accomplished?", "Is Software A Craft? Software Is A Craft! \u27f6 <em>Clean Code</em>", "A Typical Project (Livehacking Screenplay: My Own Bookkeeping Effort)", "Basics: Boilerplate, And Executables", "\u201cConfigured\u201d Header Files", "C++, Debug/Release, CMake \u201cProgramming\u201d, Rants", "External Dependencies", "CMake: An Introduction", "Installation (\u201cDeployment\u201d)", "Libraries, And <em>Dependencies</em>", "Optional Code, Approach 1: Optional <code class=\"docutils literal notranslate\"><span class=\"pre\">blacklist</span></code>, C Macro  (Global Flags)", "Optional Code, Approach 2: Pushing Optionality Down In Module <em>Interface</em>", "Optional Code: Problem Definition, <code class=\"docutils literal notranslate\"><span class=\"pre\">OPTION()</span></code>", "Shared Libraries (Preview)", "Structure - Subdirectories, Dependencies, and Include Paths", "Targets, Properties, And More", "Running Tests", "C++ Code", "Abstract Factory", "Adapter", "Command", "SocialDB Source Code", "Composite", "Decorator", "Design Patterns With C++", "Case Study/Livehacking: Heating Control (Reading Sensors)", "Interpreter", "Observer", "OO Design Principles", "Proxy", "Exercise Foundation: <code class=\"docutils literal notranslate\"><span class=\"pre\">Sensor</span></code> Hierarchy", "Singleton", "UML Short Introduction", "Exercise: Abstract Factory", "Exercise: Adapter", "Exercise: Command", "Exercise: Composite", "Exercise: Decorator", "Exercises: Design Patterns", "Exercise: Interpreter Combined With Adapter (And A Proxy)", "Exercise: Arithmetic Expression Interpreter", "Exercise: Adapter", "Exercise: Proxy (Remote Thermometer)", "Exercise: Proxy (Rounding Thermometer)", "Exercise: Singleton (Flexible)", "Exercise: Singleton (Flexible <em>And</em> Strict)", "Exercise: Singleton (Inflexible)", "Solution: Abstract Factory", "Solution: Adapter", "Solution: Command", "Solution: Composite", "Solution: Decorator", "Solutions", "Solution: Interpreter Combined With Adapter (And A Proxy)", "Solution: Arithmetic Expression Interpreter", "Solution: Observer", "Solution: Proxy (Remote Thermometer)", "Solution: Proxy (Rounding Thermometer)", "Solution: Singleton (Flexible)", "Solution: Singleton (Flexible <em>And</em> Strict)", "Solution: Singleton (Inflexible)", "Exercise (FH): Introducing a Sensor Class", "Exercise (FH): Extract Measurement Loop Into Function", "Exercise (FH): Replace Sensor", "Exercise (FH): Write A Sensor Class: <code class=\"docutils literal notranslate\"><span class=\"pre\">RandomSensor</span></code>", "FH Sensor OO (First Try)", "C++ Exercises", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">LEDStripeDisplay_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">Hysteresis_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">AveragingSensor_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">ConstantSensor_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">MockSensor_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">RandomSensor_nopoly</span></code> (Non-Polymorphic)", "Exercise: Mocking Switch (Non-Polymorphic)", "OO Basics, Interfaces (Shapes)", "Working On Exercise Projects", "Exercise: Sensor Interface", "Exercise: OneWire Sensor Factory", "Exercise: OneWire Sensor Class", "Exercise: Algorithms", "Exercise: Generic Filter", "Exercise: Filter Elements Greater Than 10", "Exercise: Filter Odd Elements", "C++ Exercises: Standard Template Library", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::map&lt;&gt;</span></code>", "Exercises: Sensor Repository (<code class=\"docutils literal notranslate\"><span class=\"pre\">std::map</span></code>)", "Insert - Not Overwriting Existing Elements", "Insert - Sunny Case", "Lookup - Not Found", "Lookup - Sunny Case", "Memory Leaks?", "Remove - Not Found", "Remove - Sunny Case", "<code class=\"docutils literal notranslate\"><span class=\"pre\">.size()</span></code> Is <code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code>", "Exercise: Uniquify A Sequence", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector&lt;&gt;</span></code>", "C++: TODO List", "Code: C++: Class Templates", "Screenplay: C++: Class Templates", "C++: Class Templates", "Code: C++: Dynamic Memory", "Screenplay: C++: Dynamic Memory", "C++: Dynamic Memory", "Code: C++: Global Objects Initialization", "Screenplay: C++: Global Objects Initialization", "C++: Global Objects Initialization", "Code: C++: Inheritance, Interfaces, <code class=\"docutils literal notranslate\"><span class=\"pre\">virtual</span></code>", "Screenplay: C++: Inheritance, Interfaces, <code class=\"docutils literal notranslate\"><span class=\"pre\">virtual</span></code>", "C++: Inheritance, Interfaces, <code class=\"docutils literal notranslate\"><span class=\"pre\">virtual</span></code>", "Code: C++: Ownership/RAII", "Screenplay: C++: Ownership/RAII", "C++: Ownership/RAII", "Code: C++: STL Containers (Intro)", "Screenplay: C++: STL Containers (Intro)", "C++: STL Containers (Intro)", "Code: C++: Templates vs. Interfaces", "Screenplay: C++: Templates vs. Interfaces", "C++: Templates vs. Interfaces", "C++: Miscellaneous Live-Hacking", "Introduction", "Object Oriented Programming In Good Ol\u2019 C", "Copy Constructor, Assignment Operator", "Classes and Objects", "Custom Constructor", "Default Constructor", "More Constructors, Destructors", "Data Encapsulation", "Constructors: Member Initialization", "Object Copy (And Resource Management): There Be Dragons", "Overloading", "Methods", "<code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">this</span></code>", "References", "<code class=\"docutils literal notranslate\"><span class=\"pre\">static</span></code> Methods", "<code class=\"docutils literal notranslate\"><span class=\"pre\">static</span></code> Member Variables", "Operator Overloading", "Exercise (FH): <code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">cuboid</span></code>", "Exercise (FH): <code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">point</span></code>", "Exercise (FH): <code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">point3d</span></code>", "Exercise (FH): <code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">rectangle</span></code>", "Functions and Methods", "Basics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">try</span></code> - <code class=\"docutils literal notranslate\"><span class=\"pre\">catch</span></code>", "Exceptions", "Function Templates", "Class Templates", "C++ Template Basics", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::copy&lt;&gt;()</span></code> From <code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;algorithm&gt;</span></code>", "Screenplay: Pointer Arithmetic, And Algorithms", "Screenplay: Pointer Arithmetic Basics", "Screenplay: Pointer Difference", "Screenplay: Out Of Range Errors", "Standard Template Library: Basics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector</span></code> (And <code class=\"docutils literal notranslate\"><span class=\"pre\">std::copy()</span></code>)", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">std::copy()</span></code>", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector</span></code> Basics", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector</span></code>, And Pointer Arithmetics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">binary_search&lt;&gt;</span></code>: On Sorted Sequence", "<code class=\"docutils literal notranslate\"><span class=\"pre\">copy&lt;&gt;</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find&lt;&gt;</span></code>: Sequential Search, by Equality", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find_if&lt;&gt;</span></code>: Sequential Search, Customizable", "<code class=\"docutils literal notranslate\"><span class=\"pre\">for_each&lt;&gt;</span></code>", "Algorithms", "<code class=\"docutils literal notranslate\"><span class=\"pre\">lower_bound&lt;&gt;</span></code>: On Sorted Sequence", "<code class=\"docutils literal notranslate\"><span class=\"pre\">reverse&lt;&gt;</span></code>: Reversing In-Place", "<code class=\"docutils literal notranslate\"><span class=\"pre\">reverse_copy&lt;&gt;</span></code>: Copying <em>and</em> Reversing", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sort&lt;&gt;</span></code>", "Sequential Containers", "Sequential Containers", "<code class=\"docutils literal notranslate\"><span class=\"pre\">list&lt;&gt;</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">vector&lt;&gt;</span></code>", "Associative Containers", "Associative Containers", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::map</span></code>", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::map</span></code> Initialization And Inserting", "Screenplay: Inserting Elements", "Screenplay: Removing (Erasing) Elements", "Screenplay: Searching", "<code class=\"docutils literal notranslate\"><span class=\"pre\">multimap&lt;&gt;</span></code>", "Allocator Basics", "Allocators", "STL: Exercises", "Exercise: Reverse a String", "Exercise: Reverse A String", "Solution: Reverse a String", "Standard Template Library", "Dynamic Memory (To Be Done)", "Dynamic Memory Allocation, Resource Management", "Inheritance Basics", "Destructors And Inheritance", "Inheritance And Object Oriented Design", "C++ \u201cInterfaces\u201d", "<em>Polymorphic</em> Usage Of Objects", "Inheritance: <code class=\"docutils literal notranslate\"><span class=\"pre\">private</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">protected</span></code> (Implementation Inheritance)", "Virtual Destructors", "Virtual Methods", "The Standard Library: Miscellaneous Topics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::string</span></code>", "Exercise: Paint the American Flag Onto Standard Output", "FH/Moodle Quiz: C++", "Exercises: Miscellaneous", "Exercise: Sum of Integers Coming From <code class=\"docutils literal notranslate\"><span class=\"pre\">cin</span></code>", "Exercises: User Database", "Exercise: Access Methods for Members", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code> Members", "Exercise: Use <code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code>", "Exercise: Default Constructor (was: Arrays of Objects)", "Exercise: Simple Method (Users Age By <code class=\"docutils literal notranslate\"><span class=\"pre\">n</span></code> Years)", "Exercise: Transform <code class=\"docutils literal notranslate\"><span class=\"pre\">struct</span> <span class=\"pre\">User</span></code> Into A Class", "Exercise: Insert a User into UserDB", "Exercise: Search a User By Lastname (<code class=\"docutils literal notranslate\"><span class=\"pre\">std::find_if</span></code>)", "Exercise: Search, \u201cUser Not Found\u201d Exception", "Exercise: Search a User By Lastname", "Exercise: Use std::vector in UserDB", "C++", "Introduction", "History, Background", "A Live-Hacked Tour Around The New C++", "Strongly Typed <code class=\"docutils literal notranslate\"><span class=\"pre\">enum</span></code>", "Brace Initialization (Uniform Initialization)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::initializer_list</span></code>: Brace Initialization, Implementor\u2019s View", "Brace Initialization: Introduction", "Brace Initialization: A Mess", "Delegating Constructor", "<code class=\"docutils literal notranslate\"><span class=\"pre\">constexpr</span></code>", "Afterword, Further Reading", "Move Semantics, Rvalue References", "<code class=\"docutils literal notranslate\"><span class=\"pre\">SmartPtr</span></code> With Move Semantics", "Implementing Move Semantics (<code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">String</span></code>, Live Hacked)", "Using Move Semantics In Own Code", "Lvalues, Rvalues, And Moving", "Miscellaneous", "Duck Typing (Err, <code class=\"docutils literal notranslate\"><span class=\"pre\">auto</span></code>) Without A Duck", "Concepts", "Concepts: Overview", "<code class=\"docutils literal notranslate\"><span class=\"pre\">toolcase-1-conceptless.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">toolcase-2-conceptless-error.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">toolcase-3-concept-integral.cpp</span></code>", "Concepts: Links", "Writing Your Own Concepts", "<code class=\"docutils literal notranslate\"><span class=\"pre\">example-1-good-old-func.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">example-2-need-template.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">example-4-concept-has-size.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">example-5-concept-index-ret-double.cpp</span></code>", "Coroutines", "Coroutines: An Overview", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fibo-generator.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fibonacci.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">generator.h</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">generator-hello.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">simplest.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">suspend.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">suspend-iter.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">suspend-next.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">=</span> <span class=\"pre\">default</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">=</span> <span class=\"pre\">delete</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">final</span></code>", "New Language Features", "Lambda", "Lambda", "Lambda: More Capturing", "Live Hacking: Handwritten Functors (Too Much Boilerplate)", "Live Hacking: Handwritten Functors, And Capturing By Reference (Pitfalls)", "Modules", "<code class=\"docutils literal notranslate\"><span class=\"pre\">override</span></code>", "Range Based <code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code> Loops: Introduction", "Case Study: Range Based <code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code> On <code class=\"docutils literal notranslate\"><span class=\"pre\">std::map</span></code>", "Ranges And Views: Good Or Bad?", "Ranges", "Ranges: Overview", "Ranges And Views: Links", "Tuple Unpacking (Err, Structured Binding)", "Smart Pointers: Closing Words", "Smart Pointers (<code class=\"docutils literal notranslate\"><span class=\"pre\">std::unique_ptr</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">std::shared_ptr</span></code>)", "Introduction", "(Trying To) Handwrite A Smart Pointer Class in C++ Before C++11", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::shared_ptr</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::unique_ptr</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::weak_ptr</span></code>", "Perfect Forwarding", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::bind</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::function</span></code>", "Functions, Functions", "Threads Introduction", "Threads in C++", "Race Conditions", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::atomic</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::mutex</span></code> And Friends", "Scoped Locking", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::condition_variable</span></code> (Live Hacking Multithreaded Queue)", "Multithreading", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::promise</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">std::future</span></code> (And Some <code class=\"docutils literal notranslate\"><span class=\"pre\">std::chrono</span></code>) (Some Live Hacking)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::chrono</span></code>", "New-Style Union: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::variant</span></code>", "Miscellaneous", "std::vector&lt;&gt;: Allocators (<em>Very</em> Incomplete)", "Classic Virtual", "Embedded Problems? Code Bloat? Type Erasure? Solutions?", "Non-Virtual, But Related", "Type Erasure (Static vs. Dynamic Polymorphism), CRTP", "Unrelated (Duck-Typed)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::variant</span></code> (Automatic Virtual Dispatch Using Template Method)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::variant</span></code> (Manual Virtual Dispatch, Using <code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code>)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::variant</span></code> (Manual Virtual Dispatch, Using <code class=\"docutils literal notranslate\"><span class=\"pre\">std::visit</span></code>)", "Why Replace <code class=\"docutils literal notranslate\"><span class=\"pre\">virtual</span></code>?", "Drafts", "Exercise: Bag Of Items, By Copy", "Exercise: Bag Of Items, By Shared Reference", "Exercise: Bag Of Items, By Unique Reference", "Exercises", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::filesystem</span></code>", "The New C++ (11-\u2026)", "Generated Topic Graph", "Topics", "Modern Character Devices (Screenplay)", "Modern Character Devices (Slideshow)", "Modern Character Devices", "File Operations on Character Devices (Screenplay)", "File Operations on Character Devices (Slideshow)", "File Operations on Character Devices", "Coding: First Functionality (Slideshow)", "Coding: First Functionality", "Character Device Basics (Livehacking Screenplay)", "Character Device Basics (Slideshow)", "Character Device Basics", "Coding: Multiple Devices (Slideshow)", "Coding: Multiple Devices", "Coding: Refactoring (Screenplay)", "Coding: Refactoring (Slideshow)", "Coding: Refactoring", "DMA (Slideshow)", "DMA", "Building a Fedora Kernel (Screenplay)", "Fedora: Building the Kernel", "Fedora: Building External Kernel Modules (Screenplay)", "Fedora: Building External Kernel Modules", "Linux Kernel Driver Development", "Module Loading, Hello World (Slideshow)", "Module Loading, Hello World", "Coding: Raspi GPIO Interrupts (Slideshow)", "Coding: Raspi GPIO Interrupts", "Interrupts (Slideshow)", "Interrupts", "IO Memory (Slideshow)", "IO Memory", "Dynamic Memory: <code class=\"docutils literal notranslate\"><span class=\"pre\">kmalloc()</span></code> (Slideshow)", "Dynamic Memory: <code class=\"docutils literal notranslate\"><span class=\"pre\">kmalloc()</span></code>", "Doubly Linked Lists (Slideshow)", "Doubly Linked Lists", "Coding: Fix Race Condition (Mutex) (Slideshow)", "Coding: Fix Race Condition (Mutex)", "Mutex (and RT Mutex) (Slideshow)", "Mutex (and RT Mutex)", "Network Devices (Slideshow)", "Network Devices", "PCI (Slideshow)", "PCI", "Process vs.Atomic Context (Slideshow)", "Process vs.Atomic Context", "Rasperry Pi: Kernel Build", "Raspberry Pi: Building the Kernel", "Sample Code Maintenance", "Coding: Fix <em>Sleep While Atomic</em> (Slideshow)", "Coding: Fix <em>Sleep While Atomic</em>", "Spinlock (vs. Mutex) (Slideshow)", "Spinlock (vs. Mutex)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">dup()</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">fork()</span></code>, and Reference Counting (Stub)", "Coding: Timed Event (Slideshow)", "Coding: Timed Event", "Timer Management (Slideshow)", "Timer Management", "To Do List", "Accessing Userspace Memory (Screenplay)", "Accessing Userspace Memory (Slideshow)", "Accessing Userspace Memory", "Waiting for Something (Screenplay)", "Waiting for Something (Slideshow)", "Waiting for Something", "Workqueue (Screenplay)", "Workqueue (Slideshow)", "Workqueue", "Exercises: Archiving And Compression", "Archiving and Compression", "<code class=\"docutils literal notranslate\"><span class=\"pre\">gzip</span></code>", "Archiving and Compression", "<code class=\"docutils literal notranslate\"><span class=\"pre\">tar</span></code>", "Exam (ECE/SS2022/G1): Do A Lot With Files And Directories", "Exam (ECE/SS2022/G2): Do A Lot With Files And Directories", "Exercises/Exams: Linux Basics", "Linux Basics", "Everything Is A File (Live Demo)", "Environment (Variables)", "FH/Moodle Quiz: Linux Basics", "Introduction: Concepts and Terminology", "Login? What Is That?", "Overview", "Processes, Scheduling, Address Spaces", "Process Hierarchy (Parent, Child Process)", "Windows Subsystem for Linux (WSL)", "Exercises: IO-Redirection, Pipes", "I/O Redirection And Pipes", "I/O Redirection", "I/O Redirection: Swap <code class=\"docutils literal notranslate\"><span class=\"pre\">stdout</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">stderr</span></code>", "Pipes", "Permissions: Mode, User and Group Ownership", "Exercise: Determine Your User Credentials", "FH/Moodle Quiz: Permissions", "FH/Moodle Quiz: Permissions", "Exercises: File System Permissions", "Exercise: Create Private Directory", "Question: Private Directory", "Exercise: Create Public Directory", "Question: Public Directory", "Exercise: Create Group-Shared File", "File System Permissions", "SetUID Programs: <code class=\"docutils literal notranslate\"><span class=\"pre\">passwd</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">sudo</span></code>, \u2026", "SetUID: Live Demo", "Ugly Hack: Sticky Bit", "Default Permissions: <code class=\"docutils literal notranslate\"><span class=\"pre\">umask</span></code>", "Commandline", "Shell Configuration File: <code class=\"docutils literal notranslate\"><span class=\"pre\">~/.bashrc</span></code>", "Copying: <code class=\"docutils literal notranslate\"><span class=\"pre\">cp</span></code>", "Current Working Directory", "Exercise: Copy Directory Tree", "Exercise: Copy Files", "Exercise: Create Files (I/O Redirection)", "Exercise: Move Files", "Exercises: Create/Copy/Move/Remove", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">mkdir</span></code>", "Exercise: Funny Stuff", "Exercise: Remove Directory Tree", "Exercise: Verify, Repeat", "FH/Moodle Quiz: Shell", "The Shell - Exercises", "Exercise: File Types in <code class=\"docutils literal notranslate\"><span class=\"pre\">/dev</span></code>", "Exercise: Size of <code class=\"docutils literal notranslate\"><span class=\"pre\">/etc/passwd</span></code>", "Exercises: The <code class=\"docutils literal notranslate\"><span class=\"pre\">ls</span></code> Command", "Exercise: Permissions of Home Directory", "Creating And Removing Files and Directories", "The Shell (Bash - \u201cBourne Again Shell\u201d)", "Symbolic Links, Hard Links", "Directory Listings: The <code class=\"docutils literal notranslate\"><span class=\"pre\">ls</span></code> Command", "Moving and Renaming: <code class=\"docutils literal notranslate\"><span class=\"pre\">mv</span></code>", "Absolute and Relative Paths", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cat</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cut</span></code>", "Exercises: Inspecting Text Files", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">grep</span></code>", "Tools: Inspecting Text Files", "<code class=\"docutils literal notranslate\"><span class=\"pre\">head</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">tail</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">less</span></code>", "Overview", "Drafts", "Yocto", "Linux", "Controlling a Brushless Motor With Raspberry Pi", "CAN/Linux Basics", "CAN Interfaces", "Programming", "Hardware, Kernel", "CAN Bus With Linux And Python", "Linux Hardware Interfaces", "Linux and I2C (using LM73 Temperature Sensor as Slave)", "PWM Userspace Interface (using PCA9685)", "Linux and OneWire (using DS18B20 Temperature Sensor as Slave)", "SSH: Basics", "Exercise: Copy a File To Remote Machine, And Verify", "Exercise: Copy a Tree To Remote Machine (And Adjust Permissions)", "Exercises: SSH", "Exercise: Create SSH Key Pair", "SSH: Secure Shell", "SSH: Public Key Authentication", "SSH: Links", "SSH: Port Forwarding", "SSH: Secure Copy (<code class=\"docutils literal notranslate\"><span class=\"pre\">scp</span></code>)", "SSH File System (<code class=\"docutils literal notranslate\"><span class=\"pre\">sshfs</span></code>)", "Error Handling", "Linux Systems Programming: Basics", "System Calls vs. Library Functions", "Blocking I/O: What is That? (\u201cEverything is a file\u201d)", "Blocking I/O (On A File): What is That?", "Blocking I/O: On A Network Socket", "Blocking I/O: On A Timer? WTF?", "Blocking I/O: What Is That?", "File I/O: Basics", "Exercise: Copy A File", "Exercise: Create File With Hole", "Duplicating (Whats Going On?)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">O_CREAT</span></code>: Creating A File", "<code class=\"docutils literal notranslate\"><span class=\"pre\">O_EXCL</span></code>: Creating A File, But Failing If It Already Exists", "<code class=\"docutils literal notranslate\"><span class=\"pre\">O_RDONLY</span></code>: Reading a File", "<code class=\"docutils literal notranslate\"><span class=\"pre\">O_WRONLY</span></code>: Writing A File (Which Must Exist)", "Exercise: Read Temperature From Onewire Sensor", "File I/O", "Miscellaneous", "Linux Systems Programming", "Get Value Of GPIO", "Introductory Live Hacking, Hardware-Wise (<code class=\"docutils literal notranslate\"><span class=\"pre\">sysfs</span></code> GPIO)", "Intro: <code class=\"docutils literal notranslate\"><span class=\"pre\">sysfs</span></code> GPIO", "Interrupts In Userspace", "Basics", "Thread Life Cycle", "Thread Creation, Race Condition", "Synchronization", "Mutex: Solve Load/Modify/Store Conflict", "Communication: Condition Variable", "Condition Variable: Message Queue", "Miscellaneous", "Last Warning", "POSIX Threads", "Trylock/islocked", "Process: Arguments, Exit Status", "Processes", "The Process Tree (And Environment, And <code class=\"docutils literal notranslate\"><span class=\"pre\">procfs</span></code>)", "Scheduling (and Multitasking)", "Scheduling", "Tasks? Processes? Threads?", "Scheduling: Exam Questions", "Realtime", "Realtime API", "Wakeup Latency, CPU Frequency (Gotcha)", "Code: Sysprog: Event Driven Programming", "Screenplay: Sysprog: POSIX IPC", "Sysprog: Events", "Code: Sysprog: POSIX IPC", "Screenplay: Sysprog: POSIX IPC", "Slides: Sysprog: POSIX IPC", "Sysprog: POSIX IPC", "Code: Sysprog: Signals", "Screenplay: Sysprog: Signals", "Slides: Sysprog: Signals", "Sysprog: Signals", "Toolchain: Basics", "CMake: Cross Build", "CMake: Local Build", "Cross Development", "Cross Development", "Exercise: Build Software Package (Cross, Raspberry)", "FH/Moodle Quiz: Toolchain", "Exercises: Toolchain", "Exercise: Build Software Package (Native)", "Exercise: Install And Check Raspberry Toolchain", "Toolchain, And Cross Development", "Case Study: Raspberry Toolchain", "Linaro Toolchain For The Pi (Defunct)", "Building A Cross Toolchain For The Raspberry Pi, Using <code class=\"docutils literal notranslate\"><span class=\"pre\">crosstool-ng</span></code>", "Building A Toolchain <em>On</em> Fedora <em>For</em> Ubuntu 18.04 (WSL)", "Cross Toolchain Setup", "Zooming In: Separate Compilation, and Linking <em>Statically</em>", "Shared Libraries (Shared Objects)", "Object Code Archives/Static Libraries", "Closures", "Comprehensions (List, Dictionary, Set)", "Context Managers: The <code class=\"docutils literal notranslate\"><span class=\"pre\">with</span></code> Statement", "Decorators", "Exception Handling", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">exec()</span></code> Function", "Python: More Language Features", "Iteration, Comprehensions, and Generators", "Implementing A Fibonacci Number Generator", "The Iterator Protocol", "Iteration, Generators, And <code class=\"docutils literal notranslate\"><span class=\"pre\">yield</span></code>", "Iterating Intelligently: Generators, and the Iterator Protocol", "Modules and Packages", "Multithreading (Python)", "Multithreading", "Race Conditions, and Mutexes", "Multithreading: Exam Questions", "Abstract Base Classes (<code class=\"docutils literal notranslate\"><span class=\"pre\">abc</span></code>), And Duck Typing", "Classes And Dictionaries", "Constructor", "Object Oriented Programming", "Inheritance", "Methods", "<code class=\"docutils literal notranslate\"><span class=\"pre\">collections.namedtuple</span></code>", "Operator Overloading", "Properties", "<code class=\"docutils literal notranslate\"><span class=\"pre\">str()</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">repr()</span></code>", "Positional and Keyword Arguments", "Python: The Language Fundamentals", "Python Installation", "Blahblah", "Hello World", "Running Python Programs", "Syntax etc.", "Commandline Arguments (<code class=\"docutils literal notranslate\"><span class=\"pre\">sys.argv</span></code>)", "Variables", "Datatypes", "Compound Datatypes", "Boolean", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code> Statement", "<code class=\"docutils literal notranslate\"><span class=\"pre\">while</span></code> Loops", "Sequential Datatypes", "Indexing and Slicing", "<code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code> Loops", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">range</span></code> Function", "References, (Im)mutability", "Functions: Global and Local Scope (Livehacking Screenplay)", "Functions (Slideshow)", "Functions", "More About Strings", "String Formatting", "Miscellaneous String Methods", "More About Lists", "More About Dictionaries", "More About Sets", "File I/O", "Function Objects", "Commandline Parsing with <code class=\"docutils literal notranslate\"><span class=\"pre\">argparse</span></code>", "Python: Draft Topics", "Matplotlib", "Package Installation (<code class=\"docutils literal notranslate\"><span class=\"pre\">setuptools</span></code>)", "Exercise: Read CSV File, Write into Sqlite3 Database", "Exercise: Read CSV File", "CSV and Databases", "Exercises", "Exercise: Boolean Expressions", "Exercise: Even Numbers (<code class=\"docutils literal notranslate\"><span class=\"pre\">while</span></code>)", "Exercise: Greeting, Depending on Time of Day", "Exercises (External)", "Exercise: Determine Maximum of Two Numbers", "Exercise: Swap Two Variables", "Exercise: Username/Password Check", "Exercise: Digit to English Word", "Exercise: Dictionary: Errors?", "Exercise: Eliminate Empty/Comment-Only Lines", "Exercise: Generator: Fibonacci", "Exercise: Primeness (<code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code>)", "Exercises (Legacy)", "Exercise: Functions: <code class=\"docutils literal notranslate\"><span class=\"pre\">join()</span></code>", "Exercise: Determine Maximum of Two Numbers", "Exercise: Determine Maximum of Two Numbers (Function)", "Exercise: Mixed List (Executable Program)", "Exercise: Mixed List (Interactive Interpreter)", "Exercise: Parsing <code class=\"docutils literal notranslate\"><span class=\"pre\">/etc/passwd</span></code>", "Exercise: Primeness (Function)", "Exercise: Reverting Lines of a File", "Exercise: String (Right-Justify)", "Exercise: Function: <code class=\"docutils literal notranslate\"><span class=\"pre\">uniq()</span></code>", "Exercise: Generator: <code class=\"docutils literal notranslate\"><span class=\"pre\">uniq()</span></code>", "Exercise: Counting Lines, Words, Characters", "Exercise: Primeness (<code class=\"docutils literal notranslate\"><span class=\"pre\">while</span></code>)", "Sensors, And Data Acquisition (Exercise Series)", "Project Setup", "Exercise: Basic \u201cSensor\u201d", "Exercise: Read CSV File (<code class=\"docutils literal notranslate\"><span class=\"pre\">csv.dictreader</span></code>)", "Exercise: Refactoring - Extract CSV Reading Into Function (<code class=\"docutils literal notranslate\"><span class=\"pre\">csv.dictreader</span></code>)", "Exercise: Read CSV File (<code class=\"docutils literal notranslate\"><span class=\"pre\">csv.reader</span></code>)", "Exercise: Refactoring - Extract CSV Reading Into Function (<code class=\"docutils literal notranslate\"><span class=\"pre\">csv.reader</span></code>)", "User Database (Exercise Series)", "Exercise: MQTT: Publish User Records", "Exercise: Away From Raw Dictionaries", "Exercise: Convert User Record To JSON And Back", "Exercise: Refactoring - Extract Both CSV Formats Into Module", "Python: All Material, Interrelated", "Python Programming: From Absolute Beginner to Advanced Productivity", "Python Links", "Machine Learning, Artificial Intelligence", "K-Means", "Linear Regression: Running Code (<em>no Notebook!</em>)", "Weather History Dataset", "Linear Regression: Jupyter Notebook", "Linear Regression", "Machine Learning: Concepts and Terminology", "CSV Files", "DBAPI 2", "Databases", "DBAPI 2: PostgreSQL", "DBAPI 2: <code class=\"docutils literal notranslate\"><span class=\"pre\">sqlite3</span></code>", "Encoding", "Python: Miscellaneous Topics", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">import</span></code> Statement (incomplete)", "MQTT", "Pandas: Adding Rows", "Pandas: Basics (<code class=\"docutils literal notranslate\"><span class=\"pre\">DataFrame</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">Series</span></code>)", "Pandas: Filters", "Pandas", "Pandas: Selecting Rows (And Columns) With <code class=\"docutils literal notranslate\"><span class=\"pre\">iloc[]</span></code>", "Pandas: Indexes", "Pandas: Selecting Rows (And Columns) With <code class=\"docutils literal notranslate\"><span class=\"pre\">loc[]</span></code>", "Pandas: Adding/Modifying Columns", "XML: ElementTree (<code class=\"docutils literal notranslate\"><span class=\"pre\">etree</span></code>)", "Visual Studio Code for Python Programming", "Python: Project/Package Management", "Python Package Index (Livehacking Screenplay)", "Python Package Index (Slideshow)", "Python Package Index", "Packaging, PyPI Upload (Link Collection)", "PyTest", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pytest</span></code> Introduction, By Example", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">unittest</span></code> Module", "Virtual Environments (Livehacking Screenplay)", "Virtual Environments (Slideshow)", "Virtual Environments", "Unit Testing With <code class=\"docutils literal notranslate\"><span class=\"pre\">googletest</span></code>", "Code: Unittest: GTest Basics", "Screenplay: Unittest: GTest Basics", "Unittest: GTest Basics", "Screenplay: Unittest: GTest and CMake", "Unittest: GTest and CMake", "Code: Unittest: GTest Fixtures", "Screenplay: Unittest: GTest Fixtures", "Unittest: GTest Fixtures", "Organisatorisches: Buchung, Kursablauf", "Linux from Scratch, 16.9.2013, M\u00fcnchen", "Shell Scripting/Bourne Again Shell (Bash)", "C: Einf\u00fchrung", "C f\u00fcr Fortgeschrittene", "C++: Einf\u00fchrung und \u00dcberblick", "An Introduction to Modern C++, In Three Days", "C and C++ Programming", "CMake", "Design Patterns For Embedded C++ Developers", "Embedded Software Development: Hardware, Realtime, and Memory Management", "Linux Kernel Driver Development", "Linux Basics: Eine Einf\u00fchrung Anhand von Beispielen", "GNU Make: Die Mutter aller Build Tools", "Advanced Python", "Basic Python", "Herdt", "Eine Woche mit dem Raspberry Pi", "Subversion (SVN)", "Linux Systems Programming: Introduction", "Linux Systems Programming: Virtual Memory, IPC, Shared Libraries", "Linux Systems Programming", "Linux Systems Programming: Multithreading", "Linux Systems Programming: Network Programming", "Unittesting and Test Driven Development"], "terms": {"di": [0, 23, 165, 168, 236, 444, 1089, 1091, 1095, 1097], "j\u00f6rg": [0, 23, 169, 203, 211, 215, 230, 233, 236, 246, 249, 264, 285, 291, 303, 306, 307, 313, 326, 327, 329, 331, 396, 470, 997, 1000, 1038, 1062, 1089, 1090, 1091, 1092, 1095, 1096, 1097], "faschingbau": [0, 12, 23, 37, 50, 59, 62, 133, 150, 157, 158, 166, 184, 187, 188, 190, 191, 192, 193, 203, 210, 215, 216, 223, 226, 231, 233, 236, 239, 243, 246, 249, 252, 264, 271, 281, 285, 291, 296, 303, 306, 307, 313, 326, 327, 329, 332, 335, 340, 396, 427, 444, 449, 462, 469, 470, 503, 519, 575, 621, 650, 651, 652, 653, 654, 655, 672, 829, 830, 837, 839, 844, 858, 874, 887, 893, 918, 955, 997, 1000, 1001, 1013, 1014, 1016, 1017, 1018, 1020, 1021, 1023, 1029, 1051, 1055, 1078, 1089, 1090, 1091, 1092, 1095, 1096, 1097, 1099, 1108, 1114, 1117, 1118, 1119, 1121, 1122, 1123, 1124, 1127, 1147, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171], "offic": [0, 32, 156, 172], "co": [0, 12, 32, 37, 133, 147, 158, 187, 188, 190, 191, 192, 193, 254, 271, 275, 335, 340, 442, 449, 668, 1001, 1023, 1099, 1114, 1117, 1118, 1119, 1121, 1122, 1123, 1124, 1127, 1145, 1147, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171], "43": [0, 7, 154, 161, 173, 184, 194, 199, 201, 204, 207, 210, 215, 216, 220, 223, 226, 231, 233, 239, 243, 246, 249, 252, 261, 264, 268, 271, 281, 285, 291, 303, 307, 313, 327, 329, 330, 419, 432, 444, 603, 673, 723, 750, 884, 893, 906, 908, 947, 1010], "0": [0, 5, 7, 21, 23, 32, 61, 63, 107, 110, 111, 112, 119, 123, 126, 130, 135, 137, 147, 150, 152, 153, 154, 156, 162, 166, 170, 171, 172, 173, 174, 184, 187, 189, 191, 194, 199, 201, 202, 203, 204, 207, 210, 211, 212, 215, 216, 220, 223, 224, 226, 229, 231, 233, 236, 239, 242, 243, 246, 249, 251, 252, 254, 256, 261, 264, 267, 268, 269, 271, 275, 279, 280, 281, 285, 291, 301, 303, 307, 313, 321, 327, 328, 329, 330, 331, 332, 335, 357, 358, 360, 362, 364, 366, 367, 368, 370, 377, 378, 380, 381, 382, 390, 393, 395, 396, 402, 403, 405, 408, 423, 424, 425, 426, 428, 429, 432, 433, 436, 438, 442, 444, 445, 448, 452, 453, 455, 458, 461, 462, 467, 469, 472, 474, 481, 482, 484, 486, 487, 488, 489, 491, 492, 493, 496, 497, 500, 501, 502, 506, 509, 510, 514, 516, 517, 518, 519, 520, 528, 534, 535, 543, 546, 552, 555, 562, 563, 564, 566, 567, 570, 571, 572, 573, 575, 577, 578, 579, 580, 581, 582, 585, 590, 591, 592, 593, 594, 595, 597, 598, 599, 600, 601, 603, 604, 607, 608, 609, 613, 617, 618, 619, 620, 621, 625, 627, 631, 632, 634, 635, 637, 638, 640, 642, 644, 649, 650, 651, 652, 653, 654, 655, 656, 660, 664, 665, 668, 671, 672, 673, 675, 677, 678, 679, 680, 682, 683, 684, 685, 686, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 702, 704, 705, 707, 709, 710, 712, 714, 718, 719, 721, 722, 723, 724, 729, 732, 734, 736, 739, 741, 743, 745, 749, 753, 757, 760, 761, 765, 768, 780, 782, 792, 815, 816, 818, 833, 837, 839, 844, 847, 858, 859, 862, 884, 886, 887, 888, 893, 899, 902, 906, 907, 908, 917, 919, 922, 924, 925, 926, 928, 929, 931, 932, 933, 934, 935, 938, 940, 942, 943, 949, 957, 958, 960, 962, 963, 964, 966, 969, 970, 973, 974, 976, 977, 979, 988, 991, 992, 994, 996, 998, 999, 1002, 1004, 1008, 1010, 1012, 1025, 1028, 1029, 1030, 1031, 1035, 1037, 1039, 1042, 1044, 1045, 1046, 1050, 1052, 1054, 1055, 1057, 1060, 1061, 1062, 1067, 1069, 1078, 1088, 1095, 1097, 1103, 1104, 1105, 1112, 1113, 1116, 1117, 1118, 1119, 1121, 1122, 1123, 1124, 1128, 1133, 1135, 1140, 1145], "664": [0, 226, 847], "5783814": 0, "gpg": 0, "kei": [0, 9, 32, 42, 97, 101, 102, 108, 114, 146, 148, 150, 162, 170, 179, 184, 189, 191, 192, 194, 199, 201, 203, 206, 207, 208, 210, 215, 216, 218, 220, 221, 223, 224, 226, 231, 233, 234, 236, 239, 243, 246, 248, 249, 253, 257, 260, 261, 264, 266, 267, 271, 281, 284, 285, 287, 288, 290, 291, 303, 307, 313, 329, 332, 335, 340, 368, 416, 616, 618, 621, 660, 709, 755, 829, 830, 837, 894, 898, 910, 911, 912, 914, 919, 1000, 1004, 1013, 1031, 1032, 1048, 1057, 1067, 1068, 1090, 1092, 1100, 1108, 1121, 1122, 1128, 1153, 1159], "prankergass": [0, 210, 231, 874], "33": [0, 7, 148, 161, 173, 184, 189, 194, 199, 201, 204, 207, 210, 215, 216, 220, 223, 226, 231, 233, 236, 239, 243, 246, 252, 261, 264, 268, 271, 275, 281, 285, 291, 303, 307, 313, 329, 330, 331, 444, 465, 833, 874, 976, 1104, 1105], "8020": [0, 210, 226, 231, 269, 444, 829, 830, 868, 874], "graz": [0, 1, 3, 23, 59, 62, 134, 192, 210, 269, 302, 305, 319, 352, 444, 829, 830, 868, 874, 1099], "uid": [0, 231, 236, 239, 307, 335, 340, 753, 829, 830, 837, 847, 919, 934, 990, 1078], "vat": [0, 195, 1163], "atu63522469": 0, "write": [0, 13, 16, 27, 29, 37, 43, 48, 53, 54, 55, 56, 57, 59, 62, 63, 66, 70, 78, 97, 115, 119, 120, 122, 123, 125, 126, 130, 131, 151, 152, 153, 162, 167, 171, 184, 187, 188, 190, 191, 192, 203, 208, 210, 211, 212, 213, 218, 220, 221, 224, 227, 229, 231, 237, 239, 248, 251, 258, 260, 267, 277, 284, 290, 302, 315, 321, 324, 326, 335, 337, 339, 341, 346, 362, 365, 366, 371, 383, 385, 407, 418, 422, 428, 429, 432, 442, 444, 467, 470, 482, 484, 487, 498, 507, 508, 519, 520, 522, 527, 538, 544, 549, 555, 560, 562, 563, 566, 576, 578, 625, 632, 641, 644, 646, 660, 665, 676, 688, 700, 709, 715, 724, 743, 749, 753, 754, 755, 761, 763, 773, 775, 782, 786, 802, 818, 829, 830, 833, 839, 844, 845, 847, 848, 849, 850, 856, 858, 860, 863, 881, 893, 895, 898, 902, 906, 907, 908, 915, 922, 924, 925, 926, 929, 931, 932, 933, 934, 936, 937, 938, 939, 940, 942, 943, 946, 950, 956, 960, 969, 970, 973, 974, 978, 981, 984, 1002, 1013, 1018, 1019, 1023, 1046, 1047, 1052, 1057, 1058, 1059, 1061, 1064, 1065, 1066, 1067, 1069, 1070, 1073, 1074, 1076, 1078, 1080, 1081, 1082, 1084, 1085, 1089, 1091, 1094, 1098, 1100, 1113, 1124, 1133, 1134, 1135, 1153, 1154, 1166], "review": [0, 152, 175, 186, 280, 359], "http": [0, 3, 4, 8, 13, 20, 23, 32, 37, 39, 44, 59, 61, 62, 85, 106, 112, 114, 135, 137, 147, 155, 156, 157, 158, 162, 166, 168, 170, 178, 179, 180, 181, 187, 188, 191, 192, 200, 205, 211, 213, 214, 220, 226, 227, 229, 236, 239, 243, 251, 256, 258, 267, 270, 276, 277, 278, 280, 284, 290, 294, 295, 298, 302, 304, 306, 310, 312, 316, 334, 335, 340, 355, 503, 517, 538, 580, 640, 713, 717, 722, 738, 742, 758, 773, 775, 779, 802, 803, 901, 903, 906, 942, 988, 990, 1045, 1055, 1111, 1113, 1128, 1129], "g": [0, 32, 48, 63, 97, 114, 126, 131, 154, 158, 162, 166, 171, 172, 174, 184, 199, 203, 212, 216, 220, 223, 226, 231, 233, 236, 239, 243, 261, 267, 275, 291, 316, 357, 377, 381, 384, 387, 392, 398, 399, 400, 402, 405, 420, 424, 432, 436, 437, 444, 445, 447, 450, 456, 457, 470, 474, 482, 503, 516, 519, 562, 566, 567, 596, 616, 634, 635, 664, 668, 671, 673, 682, 702, 723, 731, 735, 739, 753, 761, 780, 802, 821, 840, 847, 862, 884, 891, 894, 901, 919, 928, 938, 958, 960, 962, 973, 974, 976, 977, 978, 979, 990, 995, 997, 999, 1007, 1019, 1021, 1022, 1040, 1041, 1045, 1046, 1109, 1113, 1124, 1135, 1140, 1156], "page": [0, 33, 39, 61, 72, 74, 78, 106, 114, 131, 146, 147, 148, 150, 151, 153, 154, 158, 163, 183, 188, 191, 212, 237, 267, 293, 309, 342, 366, 367, 370, 415, 426, 466, 503, 755, 761, 780, 786, 788, 800, 826, 829, 830, 846, 895, 899, 908, 919, 929, 932, 960, 1107], "r": [0, 7, 13, 31, 32, 38, 43, 61, 154, 156, 157, 161, 162, 170, 172, 173, 174, 183, 184, 187, 189, 190, 194, 199, 201, 204, 207, 210, 212, 216, 217, 220, 223, 226, 229, 231, 233, 236, 239, 243, 246, 249, 251, 252, 261, 264, 268, 269, 271, 281, 285, 291, 303, 307, 313, 316, 327, 330, 335, 344, 356, 377, 402, 432, 444, 451, 465, 484, 485, 514, 518, 582, 609, 712, 720, 753, 766, 775, 780, 798, 802, 803, 833, 839, 844, 847, 858, 861, 862, 864, 884, 891, 899, 906, 907, 908, 910, 911, 919, 930, 933, 934, 942, 976, 977, 978, 988, 990, 991, 998, 1019, 1024, 1027, 1033, 1044, 1050, 1055, 1087, 1113, 1135, 1171], "ctb02zug3crheb0": 0, "geboren": [1, 23], "am": [1, 3, 7, 17, 32, 37, 59, 62, 65, 107, 133, 151, 152, 153, 154, 156, 157, 158, 159, 160, 170, 183, 195, 204, 240, 244, 271, 313, 573, 710, 802, 841, 890, 895, 908, 917, 919, 934, 1044, 1147, 1148, 1150, 1163, 1166, 1170], "19": [1, 7, 23, 114, 161, 163, 172, 173, 174, 183, 189, 192, 194, 199, 201, 203, 204, 207, 210, 215, 216, 220, 223, 226, 227, 231, 233, 236, 239, 243, 246, 249, 252, 261, 264, 268, 271, 275, 281, 285, 291, 296, 303, 307, 313, 328, 329, 330, 332, 340, 343, 352, 420, 444, 451, 720, 753, 862, 884, 908, 979, 988, 1020, 1026, 1089, 1090, 1091, 1092, 1095, 1096, 1097, 1099, 1104, 1105, 1109, 1117, 1128, 1133, 1135], "6": [1, 7, 32, 61, 63, 109, 112, 152, 154, 162, 166, 168, 171, 172, 173, 174, 184, 189, 191, 196, 199, 201, 202, 204, 207, 210, 211, 212, 214, 217, 219, 220, 223, 224, 226, 231, 233, 236, 239, 243, 246, 250, 252, 261, 264, 268, 271, 275, 281, 285, 291, 299, 303, 307, 313, 327, 328, 330, 331, 335, 359, 360, 382, 419, 425, 436, 481, 482, 521, 522, 523, 524, 536, 555, 562, 564, 567, 570, 571, 574, 576, 579, 580, 581, 582, 600, 601, 602, 603, 609, 640, 641, 677, 723, 736, 753, 858, 881, 884, 888, 893, 899, 906, 907, 908, 922, 930, 943, 976, 988, 990, 993, 999, 1002, 1008, 1031, 1032, 1035, 1037, 1039, 1055, 1061, 1078, 1085, 1089, 1090, 1091, 1092, 1095, 1096, 1097, 1104, 1105, 1109, 1113, 1128, 1133, 1134, 1135, 1140, 1164], "1966": [1, 23, 192, 226, 236, 246, 249, 1089, 1090, 1091, 1092, 1095, 1096, 1097, 1109], "diplom": [1, 23], "au": [1, 5, 8, 23, 32, 159, 160, 168, 169, 170, 174, 184, 195, 205, 207, 214, 230, 233, 239, 240, 242, 254, 291, 307, 330, 335, 336, 353, 1148, 1150, 1151, 1152, 1157, 1163, 1166], "technisch": [1, 23, 353, 1165], "mathematik": [1, 23], "an": [1, 3, 5, 13, 17, 21, 23, 28, 31, 38, 40, 43, 45, 46, 48, 54, 55, 57, 58, 59, 62, 69, 73, 74, 78, 82, 83, 85, 92, 107, 108, 110, 111, 114, 117, 119, 122, 125, 126, 129, 130, 131, 139, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 181, 183, 184, 187, 189, 190, 191, 194, 202, 203, 207, 208, 210, 211, 212, 213, 215, 218, 220, 223, 224, 227, 228, 229, 231, 234, 236, 237, 239, 243, 249, 251, 252, 256, 258, 260, 267, 270, 273, 275, 276, 277, 278, 280, 284, 285, 295, 298, 302, 306, 313, 315, 321, 322, 346, 352, 354, 358, 360, 364, 367, 368, 381, 390, 398, 402, 405, 408, 409, 420, 423, 424, 425, 426, 428, 431, 438, 442, 444, 448, 451, 457, 460, 461, 462, 465, 466, 470, 471, 472, 481, 482, 484, 485, 486, 487, 503, 505, 509, 514, 516, 518, 519, 522, 523, 524, 536, 538, 562, 563, 565, 567, 570, 571, 572, 576, 578, 579, 580, 581, 582, 595, 600, 613, 616, 619, 620, 625, 631, 634, 635, 642, 647, 651, 653, 654, 655, 656, 660, 661, 664, 668, 672, 681, 687, 700, 702, 710, 712, 719, 720, 722, 723, 724, 730, 739, 740, 753, 754, 755, 756, 761, 766, 768, 771, 773, 780, 802, 810, 815, 828, 829, 830, 834, 835, 839, 847, 856, 861, 862, 865, 868, 887, 889, 899, 906, 908, 910, 911, 916, 919, 924, 925, 926, 927, 929, 933, 934, 935, 936, 940, 942, 943, 949, 955, 957, 958, 961, 962, 963, 964, 970, 974, 976, 977, 982, 986, 991, 992, 995, 996, 999, 1005, 1006, 1007, 1011, 1016, 1017, 1019, 1021, 1022, 1023, 1027, 1028, 1029, 1031, 1035, 1041, 1050, 1051, 1052, 1055, 1057, 1070, 1076, 1077, 1078, 1094, 1100, 1102, 1104, 1105, 1106, 1107, 1112, 1113, 1116, 1121, 1122, 1126, 1128, 1133, 1134, 1136, 1145, 1147, 1148, 1150, 1151, 1152, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1164, 1166, 1167, 1171], "der": [1, 3, 5, 7, 8, 11, 64, 147, 159, 160, 161, 165, 168, 169, 170, 171, 174, 176, 178, 184, 186, 195, 196, 197, 200, 201, 204, 205, 207, 210, 214, 230, 231, 233, 239, 242, 243, 246, 254, 303, 327, 335, 340, 1147, 1149, 1150, 1151, 1152, 1157, 1159, 1160, 1163, 1164, 1165, 1166, 1167, 1169, 1170, 1171], "tu": [1, 23], "iicm": [1, 23], "1993": [1, 23], "universit\u00e4tsassist": [1, 23], "ebendort": [1, 23], "bi": [1, 3, 23, 32, 159, 160, 184, 194, 291, 1148, 1167], "1998": [1, 3, 23, 162, 170, 226, 561], "vorlesungen": 1, "programmieren": [1, 5, 170, 174, 336, 352, 1152, 1157, 1160, 1164, 1166, 1170, 1171], "basi": [1, 3, 5, 7, 24, 78, 175, 183, 204, 213, 227, 239, 273, 330, 405, 1156, 1167, 1168], "c": [1, 3, 4, 6, 9, 12, 21, 23, 38, 42, 43, 63, 65, 72, 73, 74, 78, 85, 87, 106, 109, 122, 131, 136, 146, 147, 150, 151, 152, 153, 154, 157, 164, 167, 169, 171, 179, 180, 184, 189, 190, 196, 199, 201, 206, 207, 210, 211, 220, 223, 224, 226, 230, 231, 233, 236, 239, 243, 246, 251, 252, 261, 264, 271, 277, 281, 285, 291, 294, 302, 303, 307, 310, 313, 321, 330, 334, 336, 337, 342, 348, 349, 352, 354, 355, 356, 357, 358, 360, 364, 366, 368, 369, 370, 373, 376, 378, 380, 381, 382, 384, 388, 392, 393, 396, 397, 398, 399, 400, 404, 406, 408, 409, 410, 414, 415, 417, 418, 420, 421, 422, 424, 425, 426, 428, 429, 430, 432, 433, 434, 436, 437, 438, 439, 445, 448, 449, 450, 451, 454, 455, 456, 461, 462, 464, 465, 470, 474, 480, 482, 485, 491, 503, 506, 509, 510, 511, 512, 513, 515, 516, 518, 519, 521, 527, 561, 563, 565, 566, 567, 568, 572, 573, 574, 578, 579, 581, 583, 586, 591, 596, 598, 599, 603, 605, 609, 611, 613, 615, 616, 617, 618, 621, 623, 624, 625, 627, 628, 630, 631, 632, 633, 635, 638, 639, 640, 641, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 662, 668, 669, 673, 674, 675, 676, 677, 681, 687, 688, 699, 700, 701, 703, 704, 705, 706, 707, 708, 711, 712, 713, 714, 716, 717, 719, 720, 722, 723, 724, 725, 726, 728, 733, 734, 737, 738, 739, 740, 743, 752, 753, 755, 756, 758, 761, 765, 766, 770, 771, 775, 777, 780, 782, 792, 802, 804, 805, 810, 818, 821, 826, 828, 834, 839, 841, 844, 859, 862, 884, 890, 893, 899, 900, 906, 907, 908, 920, 924, 925, 926, 931, 932, 933, 934, 935, 944, 947, 952, 960, 963, 965, 966, 969, 972, 973, 974, 976, 977, 978, 984, 986, 988, 992, 993, 994, 995, 997, 998, 1022, 1030, 1031, 1039, 1040, 1044, 1050, 1057, 1111, 1112, 1116, 1134, 1135, 1142, 1145, 1155, 1157, 1158, 1160, 1166, 1167, 1168, 1169, 1170, 1171], "und": [1, 3, 4, 5, 6, 7, 8, 37, 39, 144, 159, 160, 165, 169, 170, 174, 176, 178, 186, 190, 196, 200, 202, 204, 209, 211, 215, 220, 231, 235, 236, 241, 243, 247, 253, 254, 271, 281, 291, 307, 330, 331, 335, 340, 352, 354, 390, 398, 842, 889, 890, 909, 1147, 1148, 1149, 1150, 1151, 1155, 1157, 1159, 1160, 1164, 1165, 1166, 1167, 1169, 1170, 1171], "\u00fcbertragungsprotokol": [1, 164], "forschungst\u00e4tigkeit": 1, "volltextsuch": 1, "hyperwav": [1, 3, 23], "2001": [1, 3, 23, 220, 226, 236, 239, 264], "leitung": 1, "serverprogrammierung": 1, "oo": [1, 43, 72, 73, 74, 78, 106, 114, 164, 187, 200, 202, 211, 230, 238, 241, 267, 271, 277, 279, 280, 284, 339, 348, 349, 444, 466, 508, 560, 561, 568, 631, 632, 635, 637, 638, 660, 724, 755, 794, 804, 1001, 1015, 1153, 1156], "design": [1, 3, 20, 23, 53, 57, 74, 78, 80, 82, 85, 106, 147, 148, 151, 164, 167, 187, 213, 214, 230, 276, 278, 343, 352, 354, 381, 411, 431, 432, 435, 443, 452, 459, 460, 461, 462, 464, 465, 467, 469, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 508, 516, 518, 560, 561, 567, 569, 585, 657, 706, 719, 723, 724, 726, 740, 753, 754, 755, 756, 907, 976, 1095, 1134, 1152, 1155], "analys": [1, 3, 164, 1150], "ration": [1, 3, 38, 157], "rose": [1, 3, 32], "f\u00fcr": [1, 3, 5, 64, 159, 160, 165, 169, 171, 174, 195, 196, 207, 214, 230, 242, 254, 268, 335, 340, 352, 354, 864, 1147, 1148, 1150, 1157, 1163, 1164, 1166, 1169], "java": [1, 9, 194, 195, 206, 218, 227, 621, 634, 719, 724, 731, 1012, 1025, 1031, 1040, 1163, 1171], "releasemanag": [1, 3, 23, 164, 1165], "cv": [1, 3, 23, 32, 147, 221, 1165], "subvers": [1, 3, 167, 354, 884], "systemnah": [1, 3, 5, 23, 146, 164, 966, 969, 973, 1166], "programmierung": [1, 3, 4, 5, 6, 8, 23, 144, 164, 218, 245, 254, 352, 1148, 1149, 1150, 1152, 1157, 1164, 1166, 1169], "unter": [1, 3, 23, 64, 160, 168, 169, 186, 194, 336, 890, 1148, 1149, 1152, 1157, 1160, 1164, 1167, 1169, 1170], "unix": [1, 72, 73, 74, 78, 97, 148, 151, 180, 203, 267, 321, 335, 336, 337, 348, 349, 353, 370, 424, 470, 644, 735, 753, 755, 759, 761, 794, 827, 828, 829, 844, 846, 858, 886, 889, 895, 899, 902, 907, 919, 944, 960, 970, 1026, 1050, 1078, 1148, 1149, 1151, 1155, 1157, 1159, 1160, 1164, 1166, 1167, 1168, 1170], "window": [1, 3, 32, 97, 98, 103, 104, 114, 139, 151, 156, 158, 168, 170, 183, 191, 208, 222, 224, 226, 237, 240, 251, 256, 258, 260, 266, 267, 279, 295, 301, 321, 332, 335, 338, 340, 353, 365, 432, 726, 729, 755, 832, 836, 862, 898, 928, 944, 949, 1024, 1026, 1027, 1050, 1100, 1135], "nt": 1, "salomon": [1, 3, 23], "friesach": [1, 3, 23], "bei": [1, 3, 5, 23, 159, 160, 165, 169, 174, 178, 184, 186, 195, 196, 199, 201, 239, 254, 327, 352, 962, 1147, 1148, 1163, 1165], "2006": [1, 3, 23, 226], "magicdraw": 1, "datenbankdesign": [1, 3], "einer": [1, 3, 159, 160, 165, 170, 178, 184, 186, 195, 196, 201, 208, 330, 352, 890, 962, 1147, 1148, 1152, 1163, 1164, 1169], "objektrelationalen": [1, 3], "datenbankschnittstel": [1, 3], "sp\u00e4ter": [1, 159, 169, 240, 1150], "softwarearchitekt": 1, "leiter": [1, 23], "abteilung": [1, 195, 1163], "forschung": 1, "entwicklung": [1, 3, 4, 336, 1159, 1165], "atron": [1, 3, 23], "unterpremst\u00e4tten": [1, 3, 23], "2010": [1, 3, 23, 147, 163, 226, 1025], "enterpris": 1, "architect": [1, 452, 1127], "softwarearchitektur": [1, 3, 23], "versionsmanag": 1, "ibm": 1, "clearcas": [1, 157, 1165], "massgeblich": 1, "portierung": [1, 3, 4, 164], "spielautomatensoftwar": 1, "von": [1, 3, 4, 5, 6, 7, 8, 64, 133, 159, 160, 168, 169, 178, 186, 190, 191, 193, 195, 196, 199, 202, 204, 205, 207, 216, 233, 240, 245, 252, 261, 268, 303, 335, 336, 340, 352, 354, 827, 889, 890, 1147, 1148, 1149, 1150, 1151, 1152, 1155, 1157, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170], "enea": [1, 3, 151], "os": [1, 3, 151], "nach": [1, 3, 4, 5, 159, 160, 164, 165, 170, 174, 178, 194, 195, 201, 239, 240, 246, 353, 824, 1147, 1163], "linux": [1, 3, 4, 6, 24, 37, 39, 43, 59, 61, 62, 63, 65, 72, 73, 74, 78, 84, 85, 86, 87, 98, 103, 104, 106, 116, 131, 136, 143, 146, 147, 148, 150, 152, 153, 154, 158, 161, 162, 163, 168, 175, 178, 183, 190, 212, 213, 220, 226, 229, 236, 239, 240, 243, 248, 251, 256, 258, 260, 269, 276, 278, 279, 295, 301, 315, 321, 332, 334, 335, 336, 337, 341, 342, 348, 349, 352, 354, 396, 418, 426, 435, 438, 455, 466, 480, 508, 509, 510, 511, 512, 513, 514, 515, 518, 519, 520, 546, 560, 727, 733, 753, 754, 755, 756, 758, 759, 761, 762, 764, 766, 767, 769, 771, 772, 773, 774, 775, 776, 778, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 801, 802, 803, 806, 807, 808, 811, 812, 813, 816, 817, 819, 820, 822, 823, 825, 827, 828, 829, 830, 836, 838, 840, 843, 846, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 862, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 882, 890, 892, 895, 899, 901, 902, 903, 907, 909, 910, 911, 912, 913, 914, 915, 917, 918, 919, 922, 924, 925, 926, 927, 928, 929, 934, 936, 937, 940, 941, 942, 943, 945, 953, 956, 959, 961, 966, 969, 970, 973, 976, 977, 978, 980, 981, 982, 983, 984, 985, 986, 987, 988, 990, 991, 992, 993, 994, 1024, 1026, 1088, 1113, 1133, 1136, 1149, 1150, 1151, 1152, 1155, 1157, 1160, 1164], "beteiligt": [1, 23], "seit": [1, 5, 23, 178, 184, 194, 199, 1148, 1157], "april": [1, 3, 23], "selbstst\u00e4ndig": [1, 23], "fh": [1, 23, 97, 106, 109, 110, 111, 114, 130, 131, 134, 156, 203, 332, 334, 335, 340, 341, 343, 508, 519, 540, 560, 568, 583, 643, 657, 755, 832, 836, 851, 857, 876, 882, 898, 983, 986, 1142], "joanneum": [1, 134, 156, 1142], "kapfenberg": 1, "2011": [1, 3, 5, 147, 148, 163, 276, 278, 352, 356, 561, 660], "2015": [1, 23, 211, 237, 275, 306, 352, 667, 1100], "lehrveranstaltung": [1, 336], "im": [1, 3, 5, 8, 29, 32, 38, 90, 159, 160, 169, 170, 174, 178, 183, 184, 186, 187, 190, 192, 195, 196, 199, 201, 205, 207, 208, 214, 215, 218, 221, 222, 224, 227, 230, 234, 235, 236, 242, 243, 245, 247, 248, 250, 263, 265, 270, 272, 273, 277, 279, 280, 283, 284, 286, 289, 290, 292, 301, 302, 304, 305, 306, 308, 311, 319, 321, 322, 323, 324, 325, 326, 335, 340, 755, 1001, 1023, 1057, 1058, 1059, 1069, 1072, 1080, 1081, 1083, 1084, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1105, 1113, 1114, 1135, 1148, 1151, 1157, 1159, 1163, 1164, 1166, 1167, 1170, 1171], "lehrgang": 1, "softwar": [1, 5, 13, 23, 24, 41, 68, 73, 74, 78, 85, 97, 104, 114, 125, 130, 150, 158, 161, 162, 167, 178, 184, 190, 194, 203, 220, 226, 227, 236, 237, 239, 264, 276, 278, 279, 280, 293, 309, 332, 353, 354, 420, 452, 460, 461, 470, 472, 638, 724, 755, 756, 786, 833, 846, 898, 899, 906, 907, 922, 974, 983, 986, 1055, 1102, 1155, 1156, 1158, 1171], "avl": [1, 23, 148], "2018": [1, 23, 154, 226, 665], "2019": [1, 40, 132, 147, 189, 211, 260, 284, 302, 305, 306, 319, 352, 538, 665, 706, 884, 1099, 1100, 1102], "linuxexpert": [1, 23], "architekt": [1, 23], "build": [1, 4, 17, 28, 40, 42, 44, 50, 72, 73, 74, 78, 84, 87, 97, 104, 108, 114, 135, 141, 147, 151, 156, 157, 163, 167, 178, 181, 191, 212, 229, 232, 256, 258, 260, 267, 276, 278, 281, 288, 293, 294, 309, 310, 315, 338, 341, 342, 353, 354, 357, 398, 411, 426, 438, 450, 451, 452, 454, 456, 466, 480, 486, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 518, 519, 520, 538, 543, 546, 560, 651, 688, 708, 718, 732, 755, 759, 762, 764, 767, 769, 771, 772, 779, 781, 782, 783, 787, 793, 798, 799, 804, 806, 811, 817, 820, 823, 859, 898, 907, 908, 932, 933, 934, 935, 949, 968, 972, 976, 979, 983, 986, 987, 991, 1038, 1049, 1055, 1128, 1133, 1139, 1143, 1148, 1153, 1155], "manag": [1, 5, 14, 23, 29, 63, 68, 72, 73, 74, 78, 94, 97, 108, 150, 152, 161, 166, 167, 175, 178, 180, 183, 187, 190, 191, 197, 198, 202, 207, 208, 211, 213, 223, 229, 232, 237, 239, 240, 246, 249, 264, 271, 278, 280, 281, 284, 285, 288, 306, 307, 313, 315, 316, 338, 339, 341, 348, 349, 353, 354, 415, 432, 443, 461, 474, 532, 538, 563, 568, 657, 668, 669, 671, 700, 705, 716, 717, 719, 720, 721, 725, 733, 752, 754, 755, 773, 779, 786, 788, 811, 817, 820, 823, 833, 837, 838, 893, 898, 907, 915, 927, 960, 961, 974, 990, 1001, 1010, 1029, 1053, 1057, 1098, 1099, 1100, 1101, 1102, 1106, 1114, 1116, 1128, 1130, 1132, 1133, 1137, 1142, 1153, 1155, 1158, 1165], "schittstel": 1, "zum": [1, 3, 5, 159, 160, 169, 174, 178, 184, 194, 207, 214, 231, 291, 353, 1148, 1150, 1151, 1152, 1164, 1167, 1169], "weiser": 1, "alter": [1, 186, 187, 237, 260, 353, 564, 572, 889, 1100], "mann": 1, "2020": [1, 23, 114, 131, 132, 147, 148, 154, 158, 159, 163, 166, 170, 189, 191, 226, 352, 519, 520, 668, 681, 829, 830, 909, 918, 936, 1025, 1099, 1104, 1142, 1164], "embed": [1, 3, 4, 5, 23, 72, 87, 104, 134, 146, 147, 148, 151, 153, 164, 167, 191, 193, 216, 259, 315, 333, 338, 340, 352, 354, 726, 736, 748, 754, 755, 790, 802, 840, 862, 908, 919, 960, 976, 1003, 1044, 1149, 1150, 1151, 1155, 1159, 1160, 1164, 1168], "comput": [1, 23, 28, 29, 32, 72, 84, 87, 101, 126, 134, 154, 193, 243, 252, 276, 278, 302, 303, 320, 333, 335, 338, 340, 352, 361, 434, 439, 440, 465, 562, 572, 575, 581, 614, 710, 723, 735, 755, 824, 831, 899, 907, 909, 910, 917, 944, 958, 961, 1025, 1113, 1128, 1158], "electron": [1, 156, 353, 907], "engin": [1, 154, 227, 229, 295, 298, 353, 424, 428, 432, 442, 473, 506, 514, 907, 1023, 1171], "kontakt": [2, 23], "curriculum": [2, 5], "vita": [2, 5], "skill": [2, 85, 147, 960, 1023], "projekt": [2, 148, 169, 1160, 1164], "stand": [3, 161, 210, 338, 802, 908, 992, 1108], "j\u00e4nner": [3, 23], "2014": [3, 148, 169, 190, 226, 260, 275, 284, 306, 904, 1100], "devicedriv": 3, "die": [3, 5, 7, 8, 37, 45, 46, 47, 51, 55, 56, 59, 62, 64, 147, 160, 165, 168, 169, 170, 171, 174, 178, 184, 186, 194, 195, 197, 199, 201, 204, 205, 207, 210, 214, 223, 230, 233, 236, 239, 242, 243, 246, 271, 299, 330, 335, 336, 340, 353, 354, 488, 502, 755, 889, 890, 962, 1100, 1147, 1148, 1149, 1150, 1151, 1152, 1157, 1159, 1163, 1164, 1165, 1166, 1167, 1169, 1170, 1171], "pci": [3, 198, 755, 779, 780, 841, 898, 906, 942, 1158], "hardwar": [3, 5, 65, 69, 72, 73, 74, 78, 80, 126, 130, 136, 140, 150, 151, 154, 164, 167, 226, 227, 239, 276, 279, 280, 301, 305, 321, 336, 337, 338, 353, 354, 370, 381, 384, 420, 438, 442, 512, 513, 514, 515, 519, 735, 755, 782, 802, 833, 838, 839, 898, 899, 900, 901, 904, 907, 923, 925, 926, 939, 942, 974, 1147, 1156, 1158, 1164], "ein": [3, 5, 7, 8, 37, 159, 160, 165, 168, 169, 170, 171, 174, 176, 178, 186, 190, 191, 193, 194, 195, 197, 199, 201, 202, 204, 205, 207, 208, 210, 214, 216, 220, 223, 224, 230, 231, 233, 236, 239, 240, 242, 243, 246, 254, 261, 264, 271, 281, 285, 291, 299, 303, 307, 313, 327, 330, 335, 340, 353, 354, 398, 526, 828, 889, 890, 962, 1030, 1147, 1148, 1149, 1150, 1151, 1152, 1155, 1157, 1160, 1163, 1165, 1166, 1167, 1168, 1169, 1170, 1171], "messger\u00e4teherstel": 3, "de": [3, 5, 7, 8, 32, 37, 147, 159, 161, 165, 168, 169, 174, 178, 184, 186, 194, 195, 204, 205, 214, 230, 239, 242, 246, 335, 352, 429, 722, 738, 742, 824, 826, 890, 903, 1099, 1125, 1147, 1148, 1149, 1150, 1152, 1157, 1159, 1163, 1164, 1166, 1167, 1169, 1170, 1171], "untenstehenden": 3, "zeit": [3, 5, 160, 195, 313, 1148, 1150, 1170], "dato": 3, "ort": 3, "raum": [3, 174], "anbindung": 3, "verschieden": [3, 23, 184, 353, 1149, 1150, 1151, 1157, 1164, 1169], "hardwareinterfac": 3, "i2c": [3, 4, 65, 78, 81, 85, 136, 139, 151, 152, 178, 191, 267, 338, 341, 346, 353, 459, 489, 548, 549, 557, 755, 802, 898, 905, 907, 942, 1157, 1164], "spi": [3, 4, 78, 151, 169, 178, 353, 548, 549, 557, 900, 901, 902, 907, 942, 1157, 1164], "can": [3, 12, 17, 29, 57, 58, 68, 75, 80, 83, 108, 110, 111, 114, 115, 122, 145, 148, 150, 151, 152, 153, 155, 156, 157, 158, 162, 166, 167, 168, 171, 173, 175, 179, 180, 181, 183, 187, 188, 189, 203, 210, 212, 220, 223, 226, 227, 229, 236, 239, 243, 246, 249, 267, 270, 273, 275, 276, 278, 281, 285, 291, 293, 306, 307, 309, 313, 321, 327, 329, 332, 335, 340, 346, 353, 358, 360, 364, 368, 372, 378, 381, 392, 396, 402, 403, 406, 413, 418, 420, 424, 425, 426, 427, 428, 431, 432, 436, 437, 438, 442, 444, 445, 447, 453, 455, 456, 462, 467, 470, 471, 474, 481, 482, 486, 487, 488, 500, 504, 513, 520, 546, 552, 562, 564, 569, 571, 572, 577, 578, 585, 596, 600, 616, 617, 622, 631, 635, 638, 642, 647, 652, 654, 655, 656, 665, 667, 670, 671, 672, 673, 677, 682, 706, 709, 710, 712, 718, 719, 722, 723, 724, 727, 730, 732, 736, 751, 753, 755, 761, 773, 788, 792, 796, 800, 802, 807, 810, 816, 828, 829, 830, 833, 834, 835, 837, 839, 840, 841, 842, 844, 845, 847, 852, 854, 856, 858, 860, 862, 863, 898, 899, 905, 906, 907, 908, 911, 913, 915, 917, 918, 919, 926, 928, 932, 936, 945, 947, 958, 961, 962, 970, 974, 978, 988, 993, 995, 997, 998, 999, 1000, 1002, 1003, 1004, 1007, 1010, 1011, 1012, 1019, 1020, 1022, 1023, 1028, 1031, 1032, 1035, 1040, 1042, 1048, 1050, 1052, 1055, 1057, 1064, 1074, 1085, 1095, 1096, 1097, 1099, 1105, 1107, 1112, 1113, 1119, 1121, 1126, 1128, 1133, 1153, 1155, 1157, 1164, 1168, 1170], "custom": [3, 27, 29, 32, 39, 97, 136, 140, 144, 147, 151, 154, 156, 157, 163, 167, 180, 188, 190, 192, 220, 226, 229, 236, 239, 240, 267, 269, 276, 278, 303, 321, 322, 323, 324, 326, 334, 335, 353, 442, 447, 466, 480, 508, 511, 514, 516, 518, 538, 560, 562, 568, 633, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 669, 688, 690, 700, 705, 716, 725, 733, 740, 752, 754, 755, 775, 802, 918, 949, 974, 1099, 1141], "firmwar": [3, 116, 118, 131, 139, 151, 152, 154, 161, 170, 899, 906, 942], "kunden": [3, 5, 23, 165, 269, 353, 1147], "dezemb": [3, 23], "2012": [3, 23, 147, 163, 226], "backport": 3, "integr": [3, 16, 23, 38, 43, 112, 124, 131, 148, 156, 158, 166, 178, 183, 203, 293, 302, 309, 337, 342, 343, 344, 432, 458, 461, 465, 677, 775, 784, 841, 862, 899, 901, 907, 908, 1125, 1133, 1136, 1155, 1157, 1164], "touchcontrol": 3, "driver": [3, 5, 78, 85, 136, 139, 151, 154, 156, 164, 167, 168, 267, 336, 337, 352, 354, 438, 755, 756, 758, 759, 761, 762, 763, 764, 765, 766, 767, 769, 771, 772, 773, 774, 776, 777, 778, 781, 782, 783, 785, 786, 787, 789, 791, 793, 795, 796, 797, 799, 801, 802, 803, 806, 808, 811, 813, 817, 820, 823, 833, 838, 841, 898, 907, 908, 928, 942, 1148, 1168, 1170], "systemintegrationsfirma": 3, "stuttgart": 3, "mai": [3, 43, 65, 108, 110, 111, 115, 130, 139, 151, 155, 157, 162, 166, 210, 220, 226, 233, 236, 239, 243, 249, 276, 285, 313, 368, 375, 377, 381, 390, 447, 451, 484, 569, 622, 720, 730, 734, 753, 784, 786, 794, 802, 835, 844, 849, 850, 862, 907, 908, 930, 932, 933, 934, 936, 991, 992, 1000, 1042, 1125, 1135], "2013": [3, 23, 147, 352], "python": [3, 4, 6, 7, 10, 13, 21, 23, 24, 28, 29, 40, 61, 65, 72, 74, 78, 85, 91, 92, 134, 135, 146, 147, 148, 164, 166, 167, 170, 172, 180, 195, 196, 200, 203, 204, 205, 207, 210, 212, 219, 220, 226, 235, 236, 239, 243, 246, 267, 269, 278, 321, 322, 323, 324, 325, 326, 330, 331, 334, 336, 337, 342, 343, 344, 348, 349, 350, 352, 354, 366, 518, 659, 677, 696, 708, 714, 731, 755, 756, 862, 884, 898, 900, 905, 906, 947, 995, 996, 997, 998, 1000, 1002, 1003, 1005, 1006, 1007, 1009, 1010, 1011, 1012, 1015, 1019, 1020, 1026, 1030, 1034, 1035, 1041, 1043, 1045, 1046, 1048, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1101, 1102, 1103, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1115, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1131, 1132, 1133, 1135, 1136, 1137, 1153, 1157, 1163, 1164, 1171], "programm": [3, 59, 62, 169, 170, 174, 183, 194, 199, 203, 207, 239, 264, 276, 277, 278, 305, 330, 336, 353, 402, 415, 422, 428, 432, 562, 564, 565, 634, 668, 702, 705, 838, 844, 895, 907, 928, 962, 1023, 1024, 1028, 1050, 1107, 1114, 1127, 1150, 1153, 1158, 1166, 1167, 1169, 1171], "zur": [3, 159, 174, 178, 186, 196, 207, 330, 335, 340, 353, 962, 1148, 1150, 1151, 1152, 1164, 1169, 1170, 1171], "IT": [3, 267, 269, 353, 566], "wie": [3, 5, 159, 160, 168, 169, 170, 174, 178, 184, 186, 194, 199, 202, 209, 233, 330, 353, 1147, 1148, 1150, 1151, 1152, 1157, 1160, 1164, 1165, 1167, 1169, 1170], "beispiel": [3, 5, 23, 170, 194, 195, 217, 223, 244, 353, 1150, 1151, 1152, 1163, 1164, 1166, 1167, 1169, 1171], "e": [3, 5, 7, 32, 37, 38, 42, 48, 63, 97, 114, 126, 131, 154, 156, 157, 158, 159, 160, 162, 165, 166, 168, 169, 170, 172, 173, 174, 178, 184, 186, 194, 195, 199, 201, 203, 204, 207, 210, 211, 212, 215, 216, 220, 223, 224, 226, 229, 231, 233, 236, 239, 240, 243, 246, 249, 252, 261, 264, 267, 268, 271, 273, 275, 281, 285, 291, 303, 307, 313, 316, 328, 329, 330, 331, 335, 340, 353, 357, 374, 377, 381, 384, 387, 392, 402, 405, 420, 424, 428, 431, 432, 444, 445, 447, 450, 456, 457, 461, 470, 474, 482, 487, 491, 503, 516, 519, 520, 555, 562, 566, 567, 577, 585, 596, 616, 634, 635, 649, 654, 661, 664, 668, 671, 682, 688, 702, 723, 732, 734, 735, 739, 753, 761, 780, 821, 828, 829, 830, 839, 840, 844, 845, 846, 847, 862, 884, 891, 906, 907, 908, 919, 928, 938, 940, 958, 961, 962, 973, 974, 976, 978, 979, 990, 995, 999, 1007, 1019, 1021, 1022, 1040, 1045, 1046, 1069, 1109, 1113, 1118, 1121, 1124, 1127, 1133, 1135, 1147, 1148, 1150, 1152, 1156, 1157, 1163, 1164, 1166, 1167, 1169, 1171], "bill": [3, 271], "email": [3, 32, 42, 133, 152, 158, 162, 167, 191, 207, 271, 346, 915, 1113, 1117, 1118, 1119, 1121, 1122, 1123], "kommunik": [3, 23, 1164, 1167, 1169, 1170, 1171], "extrakt": 3, "attach": [3, 172, 220, 226, 236, 239, 465, 784, 907, 960, 1107], "signaturverifik": 3, "informationssystem": 3, "februar": 3, "juni": 3, "vollautomatisch": 3, "instal": [3, 29, 32, 45, 60, 90, 97, 98, 104, 114, 130, 135, 147, 148, 151, 152, 156, 178, 181, 187, 188, 190, 192, 203, 218, 220, 221, 224, 226, 229, 234, 236, 239, 240, 248, 251, 260, 263, 270, 273, 276, 277, 278, 283, 284, 288, 289, 290, 294, 295, 305, 310, 311, 312, 319, 373, 388, 397, 404, 410, 414, 417, 421, 430, 434, 439, 440, 448, 449, 455, 466, 480, 508, 509, 510, 511, 512, 513, 514, 515, 518, 525, 527, 532, 560, 568, 583, 586, 589, 605, 611, 615, 624, 627, 628, 633, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 662, 669, 700, 716, 725, 733, 740, 752, 754, 755, 775, 782, 798, 802, 803, 841, 898, 901, 906, 908, 973, 975, 978, 981, 983, 986, 1007, 1023, 1027, 1053, 1098, 1111, 1118, 1128, 1129, 1136, 1141, 1143], "serveranlagen": 3, "herstel": 3, "radar\u00fcberwachungssystemen": 3, "septemb": 3, "unterschleissheim": 3, "m\u00fcnchen": 3, "instandhaltungsarbeiten": 3, "hauseigenen": 3, "system": [3, 5, 14, 23, 37, 45, 73, 78, 80, 97, 101, 102, 108, 110, 111, 114, 126, 147, 148, 151, 152, 157, 158, 162, 164, 166, 167, 168, 169, 175, 178, 180, 181, 191, 203, 208, 211, 218, 220, 223, 224, 228, 229, 234, 236, 237, 239, 246, 249, 255, 256, 257, 264, 266, 271, 276, 281, 284, 285, 287, 307, 313, 332, 335, 336, 337, 338, 339, 340, 346, 348, 349, 352, 354, 388, 397, 404, 408, 410, 414, 417, 421, 428, 429, 430, 434, 435, 439, 440, 442, 447, 450, 452, 465, 466, 473, 486, 508, 519, 560, 595, 638, 662, 700, 733, 734, 735, 752, 753, 754, 755, 758, 761, 773, 775, 794, 800, 802, 832, 833, 834, 835, 836, 837, 838, 840, 841, 842, 845, 846, 848, 849, 850, 852, 853, 854, 855, 856, 859, 862, 888, 889, 893, 898, 902, 907, 908, 909, 914, 920, 924, 925, 926, 927, 929, 932, 934, 937, 938, 940, 941, 942, 943, 953, 956, 959, 961, 962, 964, 970, 973, 974, 976, 977, 978, 999, 1000, 1011, 1027, 1055, 1100, 1135, 1149, 1156, 1158, 1159], "auf": [3, 5, 8, 23, 64, 147, 152, 160, 165, 168, 169, 170, 174, 178, 184, 186, 194, 195, 199, 205, 207, 214, 215, 230, 233, 240, 242, 254, 330, 335, 336, 340, 353, 890, 1147, 1148, 1149, 1150, 1151, 1152, 1157, 1159, 1160, 1163, 1167, 1170, 1171], "gentoo": [3, 147, 150, 163, 438, 1148], "updat": [3, 44, 130, 150, 152, 166, 170, 198, 223, 231, 246, 256, 258, 264, 271, 276, 278, 285, 291, 303, 335, 342, 517, 519, 580, 812, 960, 990, 991, 992, 993, 994, 1048, 1050, 1124, 1136, 1142, 1165], "betriebssystem": [3, 1157, 1159, 1164, 1166], "usb": [3, 4, 63, 150, 151, 152, 154, 353, 431, 780, 833, 1157], "touchscreen": 3, "cheat": [3, 33, 65, 191, 203, 435, 688, 862], "detect": [3, 32, 106, 171, 183, 400, 403, 437, 445, 543, 570, 673, 698, 719, 796, 907, 908, 934, 943, 966, 977, 978, 1079], "m\u00fcnzeinwurf": 3, "via": [3, 17, 63, 85, 117, 123, 124, 151, 154, 158, 163, 172, 187, 188, 210, 216, 237, 239, 267, 270, 273, 276, 285, 302, 334, 341, 353, 462, 467, 487, 572, 596, 707, 721, 755, 782, 802, 805, 833, 838, 844, 859, 895, 906, 917, 918, 925, 932, 942, 963, 970, 988, 1054, 1153], "gpio": [3, 4, 59, 62, 65, 72, 73, 74, 78, 84, 114, 115, 116, 118, 123, 124, 125, 148, 267, 276, 306, 325, 338, 340, 344, 755, 779, 804, 806, 811, 817, 820, 823, 898, 903, 907, 939, 943, 1157, 1164], "interrupt": [3, 63, 86, 110, 111, 169, 198, 267, 438, 755, 773, 779, 794, 796, 797, 799, 800, 804, 805, 806, 810, 811, 814, 817, 820, 821, 823, 833, 835, 838, 841, 898, 903, 920, 922, 923, 924, 925, 926, 927, 939, 941, 942, 958, 961, 962, 964, 973, 974, 1157, 1158, 1164], "m\u00e4rz": 3, "firma": [3, 165, 174, 269, 352, 1147, 1157, 1164], "spielo": 3, "intern": [3, 57, 84, 115, 119, 120, 125, 130, 184, 189, 212, 220, 223, 224, 226, 236, 239, 270, 273, 302, 328, 342, 371, 401, 416, 431, 447, 456, 461, 575, 616, 663, 706, 749, 753, 780, 788, 814, 906, 907, 908, 949, 1000, 1004, 1048, 1057, 1113, 1118], "datenkonvertierung": 3, "einem": [3, 5, 23, 159, 169, 170, 174, 178, 184, 186, 194, 195, 199, 201, 207, 233, 239, 246, 261, 335, 336, 340, 353, 1148, 1150, 1152, 1157, 1166, 1170, 1171], "konvertierung": [3, 23, 1150], "asterix": 3, "format": [3, 17, 23, 29, 30, 31, 42, 51, 53, 54, 55, 56, 90, 119, 120, 122, 133, 154, 170, 171, 173, 174, 181, 188, 190, 192, 195, 199, 208, 211, 218, 219, 221, 227, 232, 233, 237, 239, 240, 245, 248, 249, 260, 263, 264, 269, 283, 284, 285, 289, 290, 292, 298, 301, 302, 305, 306, 311, 312, 313, 319, 358, 359, 364, 400, 444, 755, 756, 802, 833, 839, 862, 922, 976, 1015, 1023, 1059, 1069, 1072, 1080, 1081, 1083, 1084, 1093, 1094, 1095, 1096, 1098, 1100, 1105, 1116, 1128, 1163, 1167], "zweck": [3, 184, 1164], "extern": [3, 13, 21, 23, 29, 63, 85, 150, 154, 158, 180, 183, 190, 212, 213, 218, 229, 234, 239, 248, 269, 284, 294, 302, 310, 335, 340, 368, 372, 398, 400, 402, 404, 410, 414, 417, 421, 425, 430, 434, 439, 440, 449, 450, 546, 662, 700, 706, 752, 754, 755, 759, 762, 764, 767, 769, 772, 775, 779, 780, 781, 783, 787, 793, 799, 802, 806, 811, 812, 817, 820, 823, 898, 908, 958, 1024, 1059, 1060, 1061, 1062, 1064, 1065, 1066, 1098, 1100, 1140, 1142, 1150, 1157, 1164], "datenquellen": 3, "export": [3, 40, 61, 126, 130, 151, 162, 187, 212, 213, 216, 218, 321, 706, 758, 834, 863, 899, 907, 940, 942, 943, 988, 990, 993, 1091, 1108], "daten": [3, 184, 186, 199, 209, 214, 299, 962, 1170], "soap": [3, 32], "ip": [3, 133, 155, 158, 168, 175, 203, 332, 335, 341, 346, 543, 555, 901, 919, 925, 961, 1128, 1157, 1164, 1168, 1170], "kamera": 3, "einen": [3, 5, 23, 159, 160, 170, 174, 178, 184, 186, 194, 207, 243, 353, 621, 889, 1147, 1148, 1149, 1150, 1152, 1159, 1167, 1169, 1170, 1171], "videomautsystemen": 3, "implement": [3, 16, 23, 24, 28, 42, 50, 53, 54, 55, 59, 62, 63, 69, 82, 84, 85, 97, 110, 111, 112, 114, 129, 136, 151, 153, 156, 171, 179, 187, 189, 207, 212, 213, 220, 226, 230, 233, 234, 236, 241, 243, 258, 264, 273, 276, 277, 278, 279, 280, 285, 301, 305, 316, 322, 323, 328, 335, 346, 369, 371, 403, 413, 415, 416, 432, 442, 447, 454, 457, 458, 460, 461, 462, 464, 465, 466, 469, 470, 472, 481, 482, 486, 487, 488, 503, 507, 509, 510, 511, 512, 513, 515, 516, 517, 521, 522, 523, 524, 526, 528, 533, 536, 537, 561, 563, 567, 571, 579, 580, 581, 582, 587, 616, 622, 631, 633, 634, 635, 642, 650, 651, 652, 653, 654, 655, 656, 657, 663, 668, 669, 670, 672, 682, 697, 698, 699, 700, 706, 707, 709, 718, 722, 724, 726, 732, 746, 749, 750, 753, 754, 755, 761, 768, 771, 788, 816, 833, 835, 839, 841, 899, 906, 908, 919, 922, 928, 944, 949, 970, 994, 998, 999, 1004, 1005, 1006, 1012, 1016, 1040, 1075, 1079, 1088, 1095, 1100, 1109, 1112, 1116, 1153, 1158], "gige": 3, "vision": [3, 269, 353], "clientlibrari": 3, "softwarebasiert": 3, "kamerasimul": 3, "t\u00e4tigkeiten": 3, "hardwareteil": 3, "rs232": [3, 4, 191], "lagesensor": 3, "anpassung": 3, "cryptsetup": 3, "filesystemverschl\u00fcsselung": 3, "anforderungen": [3, 1147], "applik": [3, 168], "august": [3, 23], "logistik": 3, "autom": [3, 190, 203, 234, 248, 290, 353, 899, 910, 917, 990, 992, 1000, 1100], "beteiligten": 3, "protokol": [3, 4, 1157, 1164, 1169], "server": [3, 133, 155, 158, 164, 170, 191, 203, 214, 223, 239, 246, 249, 260, 264, 271, 281, 285, 307, 313, 438, 484, 498, 828, 902, 915, 917, 925, 970, 1112, 1128, 1145, 1164], "zu": [3, 6, 8, 159, 160, 165, 168, 169, 174, 178, 184, 195, 196, 199, 201, 205, 214, 215, 230, 231, 240, 242, 246, 254, 261, 335, 340, 353, 824, 1147, 1148, 1149, 1150, 1151, 1152, 1157, 1160, 1163, 1164, 1165, 1166, 1167, 1169, 1170, 1171], "sp": [3, 670], "tcp": [3, 151, 158, 175, 191, 296, 900, 925, 1116, 1157, 1164, 1168, 1170], "autonomen": 3, "fahrzeugen": 3, "kundenapplikationen": 3, "autonom": [3, 193, 899, 1107], "fahrzeug": 3, "mikrocontrol": 3, "seriel": [3, 4, 1157, 1159], "beratend": 3, "versionskontrol": [3, 23, 164, 1165], "architektur": [3, 23, 164, 353], "2008": [3, 162, 226, 1025], "ylog": [3, 23], "gmbh": [3, 23, 444], "dobl": [3, 23], "heizsystem": 3, "parametrisierung": 3, "anlag": [3, 199], "mit": [3, 4, 5, 7, 8, 23, 147, 159, 160, 168, 169, 170, 174, 176, 178, 186, 190, 191, 195, 196, 197, 200, 201, 204, 205, 207, 214, 215, 216, 217, 230, 239, 240, 242, 243, 246, 254, 285, 331, 335, 336, 340, 352, 354, 889, 1055, 1147, 1149, 1150, 1151, 1152, 1157, 1159, 1163, 1165, 1166, 1167, 1169, 1170, 1171], "iar": 3, "arm": [3, 150, 162, 203, 376, 782, 802, 803, 906, 919, 973, 976, 977, 988], "workbench": 3, "segger": [3, 151], "embo": [3, 151], "vba": 3, "excel": [3, 78, 152, 190, 216, 1091, 1105], "verteilung": 3, "microsoft": [3, 11, 157, 158, 161, 163, 167, 178, 186, 256, 258, 267, 276, 278, 353, 355, 403, 419, 841, 1091, 1147], "net": [3, 23, 39, 43, 114, 131, 137, 168, 169, 194, 246, 252, 443, 519, 520, 796, 802, 829, 830, 890, 925, 1113], "versionskontrollinfrastruktur": 3, "assoziiert": [3, 170, 1166, 1167], "script": [3, 38, 61, 141, 144, 147, 150, 152, 157, 158, 167, 182, 190, 191, 193, 218, 220, 226, 236, 239, 266, 267, 287, 326, 335, 352, 354, 436, 444, 455, 706, 802, 844, 847, 862, 990, 1001, 1027, 1028, 1052, 1055, 1135, 1148, 1159], "shell": [3, 4, 32, 97, 99, 101, 104, 114, 167, 171, 190, 191, 193, 231, 239, 257, 266, 287, 307, 320, 321, 334, 335, 336, 337, 340, 352, 354, 356, 438, 444, 466, 480, 508, 509, 510, 511, 512, 513, 514, 515, 518, 560, 733, 753, 754, 755, 802, 825, 829, 830, 831, 832, 835, 836, 837, 839, 840, 843, 844, 846, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 862, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 877, 878, 879, 880, 890, 891, 892, 895, 898, 899, 909, 910, 911, 912, 913, 921, 927, 928, 929, 937, 939, 942, 943, 953, 956, 959, 961, 976, 978, 980, 981, 982, 983, 984, 985, 986, 987, 990, 1026, 1027, 1029, 1050, 1052, 1078, 1140, 1148, 1155, 1157, 1159, 1160, 1164, 1165, 1166, 1168], "oststeiermark": 3, "erweiterung": [3, 353], "buildumgebung": 3, "cmake": [3, 4, 5, 44, 65, 72, 73, 74, 78, 87, 97, 106, 114, 148, 157, 162, 167, 178, 181, 213, 229, 256, 258, 276, 278, 338, 352, 354, 355, 446, 448, 450, 451, 454, 455, 456, 457, 458, 466, 480, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 518, 519, 520, 560, 580, 755, 756, 898, 986, 1138, 1160], "www": [3, 20, 23, 59, 62, 85, 147, 157, 166, 168, 188, 191, 192, 264, 355, 722, 758, 773, 779, 803, 942, 1111, 1113], "org": [3, 4, 23, 61, 137, 143, 147, 150, 154, 158, 162, 168, 170, 181, 191, 194, 211, 220, 226, 227, 236, 239, 243, 264, 277, 304, 339, 355, 758, 773, 775, 779, 802, 803, 942, 988, 990, 1024, 1045, 1055, 1094, 1111, 1128, 1129], "confix": [3, 148], "2009": [3, 1100], "schulungen": [3, 6, 23, 147, 148, 165], "dem": [3, 5, 8, 23, 159, 160, 168, 169, 170, 174, 178, 191, 195, 205, 214, 217, 230, 231, 240, 242, 254, 285, 335, 340, 353, 354, 962, 1147, 1148, 1149, 1151, 1152, 1157, 1159, 1166, 1167, 1169], "umkrei": 3, "softwareentwicklung": [3, 4, 164], "nicht": [3, 5, 7, 23, 37, 159, 160, 165, 168, 174, 178, 195, 196, 199, 204, 207, 226, 231, 233, 239, 246, 252, 271, 281, 330, 335, 353, 890, 1148, 1149, 1150, 1151, 1152, 1157, 1159, 1160, 1163, 1164, 1165, 1166, 1169, 1170, 1171], "from": [3, 5, 8, 13, 21, 27, 33, 34, 35, 36, 39, 44, 53, 54, 56, 61, 63, 65, 68, 73, 74, 78, 81, 82, 84, 86, 90, 97, 98, 99, 101, 102, 103, 106, 109, 110, 111, 114, 115, 116, 117, 118, 120, 121, 130, 133, 140, 144, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 164, 166, 167, 168, 170, 171, 173, 174, 179, 183, 184, 187, 188, 190, 191, 192, 193, 195, 201, 202, 203, 208, 210, 211, 212, 213, 215, 217, 218, 220, 224, 226, 227, 233, 234, 236, 237, 240, 241, 243, 246, 248, 251, 255, 256, 258, 260, 261, 263, 266, 269, 273, 276, 277, 278, 279, 280, 283, 285, 287, 288, 289, 290, 295, 298, 301, 303, 305, 306, 311, 312, 313, 315, 316, 319, 320, 321, 322, 323, 324, 325, 326, 328, 332, 334, 335, 337, 338, 339, 340, 342, 343, 356, 357, 363, 365, 366, 370, 373, 376, 379, 380, 381, 384, 388, 395, 397, 398, 403, 404, 410, 411, 414, 417, 418, 420, 421, 422, 424, 426, 430, 431, 432, 434, 438, 439, 440, 442, 443, 445, 446, 450, 453, 454, 455, 456, 458, 460, 461, 462, 467, 471, 481, 485, 487, 503, 504, 505, 506, 508, 511, 514, 516, 517, 518, 519, 520, 538, 546, 549, 555, 560, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 575, 577, 578, 580, 581, 591, 595, 596, 613, 625, 632, 635, 637, 643, 646, 653, 657, 660, 661, 662, 664, 668, 673, 677, 682, 688, 694, 699, 700, 712, 714, 718, 719, 720, 721, 724, 726, 732, 734, 745, 750, 751, 752, 753, 754, 755, 756, 757, 758, 761, 771, 773, 777, 782, 784, 790, 794, 802, 803, 804, 805, 810, 812, 814, 822, 827, 828, 829, 830, 833, 834, 837, 838, 839, 841, 844, 845, 846, 852, 854, 859, 861, 862, 863, 864, 865, 867, 868, 881, 886, 894, 895, 898, 899, 901, 902, 903, 904, 907, 908, 911, 915, 919, 922, 923, 924, 925, 926, 929, 932, 934, 935, 937, 939, 942, 945, 950, 955, 956, 961, 962, 964, 973, 974, 979, 988, 990, 992, 994, 999, 1000, 1001, 1004, 1007, 1008, 1009, 1010, 1011, 1012, 1015, 1019, 1022, 1023, 1024, 1027, 1028, 1031, 1034, 1043, 1046, 1047, 1049, 1050, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1101, 1102, 1103, 1104, 1106, 1108, 1110, 1112, 1113, 1114, 1115, 1116, 1120, 1121, 1122, 1125, 1127, 1128, 1130, 1132, 1133, 1135, 1137, 1140, 1142, 1145, 1156, 1163], "scratch": [3, 42, 183, 906, 1107], "mathia": [3, 1148], "kettner": [3, 147], "novemb": [3, 23], "bodenseo": [3, 1164], "singen": 3, "bodense": [3, 1164], "spielesoftwar": 3, "entwurf": [3, 23], "systemschnittstellen": [3, 1166], "driverentwicklung": [3, 164], "powerpc": 3, "vanilla": [3, 154], "kernel": [3, 4, 5, 43, 61, 65, 78, 110, 111, 133, 136, 140, 141, 146, 147, 148, 150, 151, 153, 161, 162, 163, 164, 167, 169, 184, 191, 223, 236, 239, 246, 249, 264, 267, 271, 281, 285, 307, 313, 321, 341, 352, 354, 396, 418, 431, 755, 756, 757, 758, 759, 761, 762, 763, 764, 765, 767, 769, 771, 772, 773, 774, 781, 782, 783, 785, 787, 788, 789, 790, 791, 792, 793, 795, 797, 798, 799, 800, 801, 806, 808, 811, 813, 814, 815, 816, 817, 820, 822, 823, 827, 833, 837, 839, 840, 841, 846, 890, 895, 898, 902, 904, 905, 907, 908, 919, 922, 925, 926, 928, 931, 942, 944, 945, 958, 960, 961, 964, 969, 973, 974, 976, 1148, 1157, 1168], "abteilungsleitung": 3, "ag": [3, 32, 156, 158, 170, 184, 226, 229, 271, 329, 427, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 755, 827, 976, 1117, 1118, 1119, 1121, 1122, 1123, 1124, 1125], "realtim": [4, 5, 78, 80, 164, 167, 168, 267, 336, 337, 348, 349, 354, 732, 734, 755, 800, 804, 807, 810, 821, 898, 902, 907, 908, 939, 958, 959, 961, 970, 1167, 1168, 1169], "hardwareintegr": [4, 164], "netzwerkprogrammierung": [4, 1157, 1170], "multithread": [4, 29, 59, 62, 72, 73, 74, 75, 78, 146, 147, 151, 153, 164, 183, 187, 218, 227, 237, 254, 276, 278, 306, 344, 348, 349, 353, 354, 419, 429, 660, 688, 726, 754, 755, 947, 952, 961, 974, 975, 1001, 1010, 1098, 1100, 1153, 1157, 1168], "kerneldriv": 4, "rs485": 4, "In": [4, 6, 7, 23, 42, 44, 50, 63, 97, 103, 104, 106, 110, 111, 114, 130, 131, 139, 150, 151, 152, 153, 155, 157, 160, 162, 164, 166, 175, 179, 184, 189, 196, 199, 203, 204, 212, 220, 226, 229, 233, 236, 237, 239, 240, 243, 251, 267, 276, 278, 285, 294, 310, 316, 320, 330, 335, 352, 376, 390, 443, 445, 448, 449, 455, 460, 465, 466, 467, 480, 481, 482, 484, 486, 487, 503, 506, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 520, 525, 527, 560, 564, 567, 568, 571, 575, 576, 583, 586, 589, 605, 611, 615, 624, 627, 628, 633, 638, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 660, 661, 669, 673, 677, 682, 700, 707, 710, 716, 720, 725, 727, 733, 740, 752, 753, 754, 755, 763, 768, 775, 800, 802, 814, 831, 834, 835, 844, 846, 848, 852, 854, 856, 858, 873, 874, 898, 900, 906, 908, 911, 915, 918, 925, 933, 936, 939, 941, 949, 955, 960, 962, 970, 977, 981, 982, 983, 984, 986, 1000, 1007, 1008, 1024, 1027, 1045, 1047, 1057, 1058, 1068, 1077, 1083, 1088, 1096, 1100, 1109, 1112, 1116, 1124, 1125, 1135, 1136, 1150, 1154, 1157, 1164, 1166], "userspac": [4, 81, 85, 86, 126, 131, 136, 151, 152, 223, 239, 246, 249, 264, 267, 271, 281, 285, 307, 313, 353, 431, 438, 755, 760, 771, 779, 780, 788, 794, 800, 804, 810, 814, 818, 820, 838, 840, 898, 901, 905, 908, 919, 939, 941, 942, 960, 964, 970, 1157, 1158], "host": [4, 108, 150, 157, 162, 332, 346, 782, 803, 900, 906, 977, 979, 988, 1111, 1116, 1128], "devic": [4, 33, 69, 72, 73, 74, 78, 84, 89, 115, 131, 136, 150, 151, 156, 169, 190, 198, 280, 336, 337, 338, 503, 519, 520, 730, 732, 734, 753, 755, 764, 771, 772, 773, 779, 780, 783, 784, 786, 793, 802, 804, 806, 811, 817, 818, 820, 821, 823, 835, 838, 841, 844, 884, 898, 907, 919, 922, 928, 936, 942, 961, 964, 965, 967, 970, 986, 1011, 1148, 1157, 1158, 1159, 1164], "libusb": [4, 151], "gadgetf": [4, 151], "modbu": [4, 168], "verschiedenen": [4, 23, 178, 195, 1150, 1151, 1163, 1169], "rto": [4, 151], "yocto": [4, 136, 140, 141, 162, 755, 802, 896, 979, 1148], "programmiersprachen": [4, 8, 195, 205, 214, 230, 242, 1152, 1169], "incl": [4, 23, 148, 1159], "buildsystem": 4, "autoconf": [4, 61, 162], "automak": [4, 157, 162, 990, 1160], "meson": [4, 157, 162, 968, 972, 990], "ninja": [4, 32, 162, 445, 978, 990], "make": [4, 13, 17, 43, 44, 45, 61, 63, 65, 68, 70, 78, 80, 109, 116, 117, 119, 126, 136, 141, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 166, 167, 171, 172, 175, 179, 180, 183, 187, 188, 189, 193, 202, 203, 210, 212, 213, 224, 227, 239, 243, 256, 258, 280, 285, 288, 293, 302, 309, 335, 338, 354, 387, 399, 403, 411, 418, 420, 422, 432, 438, 442, 445, 446, 447, 451, 453, 454, 456, 458, 460, 461, 462, 465, 481, 482, 487, 488, 505, 518, 520, 532, 538, 543, 549, 567, 578, 580, 582, 585, 597, 632, 634, 647, 660, 668, 673, 677, 714, 719, 720, 724, 734, 749, 750, 763, 770, 771, 775, 777, 780, 782, 802, 803, 819, 831, 841, 845, 847, 868, 881, 900, 901, 906, 907, 908, 929, 932, 934, 955, 958, 960, 962, 964, 969, 973, 976, 988, 990, 991, 992, 993, 997, 1001, 1004, 1007, 1019, 1050, 1057, 1070, 1078, 1105, 1118, 1155, 1156, 1166], "perl": [4, 162, 702, 891, 1027], "leider": [4, 159, 226, 239, 246, 261, 1148, 1150], "objektorientiert": [4, 353, 1152], "ooa": 4, "ood": 4, "unit": [4, 72, 73, 74, 78, 82, 84, 97, 106, 114, 115, 122, 153, 171, 186, 187, 190, 191, 202, 211, 229, 243, 268, 269, 276, 280, 293, 309, 344, 348, 349, 425, 444, 445, 458, 484, 507, 513, 517, 546, 577, 706, 734, 735, 755, 756, 908, 960, 1042, 1050, 1100, 1112, 1134, 1155, 1156], "test": [4, 16, 17, 33, 40, 72, 73, 74, 78, 82, 84, 97, 114, 117, 129, 131, 147, 151, 153, 154, 156, 157, 158, 164, 167, 170, 171, 177, 178, 179, 182, 186, 187, 190, 202, 208, 211, 224, 226, 227, 229, 239, 256, 258, 278, 285, 294, 306, 310, 316, 344, 346, 348, 354, 355, 367, 429, 442, 443, 449, 453, 460, 461, 462, 463, 464, 465, 466, 469, 470, 472, 473, 482, 484, 485, 507, 509, 510, 511, 512, 513, 514, 515, 516, 518, 521, 522, 523, 524, 526, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 543, 555, 557, 562, 563, 564, 575, 576, 578, 579, 581, 582, 640, 651, 652, 653, 654, 655, 656, 665, 667, 670, 671, 672, 703, 709, 714, 718, 719, 720, 721, 723, 736, 749, 750, 751, 753, 755, 756, 760, 792, 802, 805, 807, 810, 818, 862, 900, 901, 906, 929, 984, 992, 1023, 1032, 1042, 1046, 1049, 1069, 1094, 1100, 1106, 1107, 1112, 1120, 1139, 1141, 1143, 1146, 1156], "driven": [4, 45, 71, 78, 82, 151, 164, 167, 178, 187, 202, 229, 267, 269, 295, 298, 354, 442, 469, 579, 581, 582, 960, 966, 967, 1125, 1133, 1156], "develop": [4, 5, 21, 45, 71, 73, 78, 80, 82, 103, 104, 112, 152, 154, 156, 157, 158, 162, 164, 167, 175, 178, 186, 187, 190, 195, 202, 208, 213, 214, 221, 223, 224, 229, 234, 259, 264, 269, 294, 295, 298, 310, 334, 336, 337, 346, 352, 354, 420, 432, 438, 442, 447, 455, 466, 480, 508, 509, 510, 511, 512, 513, 514, 515, 518, 519, 520, 560, 579, 581, 582, 635, 659, 733, 754, 755, 756, 759, 762, 764, 765, 767, 769, 772, 774, 775, 776, 778, 781, 783, 785, 787, 789, 791, 793, 795, 797, 799, 801, 802, 803, 806, 808, 811, 813, 817, 820, 823, 832, 835, 836, 838, 841, 898, 900, 901, 921, 927, 929, 937, 939, 953, 956, 959, 961, 977, 978, 981, 982, 983, 984, 985, 987, 993, 1025, 1055, 1057, 1100, 1133, 1134, 1155, 1168], "gui": [4, 115, 130, 150, 156, 162, 166, 229, 342, 343, 841, 944, 1166], "gtk": [4, 147], "qt": 4, "fast": [5, 43, 112, 158, 166, 190, 212, 227, 229, 243, 252, 302, 432, 538, 710, 724, 1048, 1129, 1165], "40": [5, 7, 23, 106, 147, 154, 161, 173, 184, 194, 199, 201, 204, 207, 210, 215, 216, 220, 223, 226, 231, 233, 236, 239, 243, 246, 249, 251, 252, 261, 264, 268, 271, 281, 285, 291, 303, 307, 313, 327, 330, 366, 444, 465, 467, 481, 551, 552, 573, 719, 720, 721, 753, 884, 903, 906, 907, 908, 988, 1002, 1003, 1027], "jahren": 5, "wesentlichen": [5, 23, 186, 1149], "programmier": [5, 37, 352, 353, 1151, 1152, 1157, 1159, 1160, 1165, 1166], "bin": [5, 13, 23, 50, 63, 112, 114, 115, 119, 122, 125, 126, 130, 147, 150, 152, 162, 171, 174, 184, 201, 211, 220, 223, 226, 231, 236, 239, 243, 246, 249, 261, 264, 269, 271, 281, 285, 307, 313, 335, 343, 445, 446, 447, 448, 450, 451, 452, 453, 456, 458, 503, 518, 519, 780, 802, 834, 837, 839, 844, 847, 858, 862, 863, 887, 888, 893, 906, 908, 924, 931, 934, 940, 954, 955, 964, 976, 977, 978, 988, 990, 993, 997, 1003, 1027, 1054, 1055, 1078, 1087, 1088, 1103, 1116, 1128, 1133, 1135, 1147], "ich": [5, 23, 64, 159, 160, 168, 169, 170, 174, 184, 194, 202, 233, 285, 335, 353, 1111, 1147, 1148, 1157, 1164, 1165, 1171], "heut": [5, 353, 1152, 1167], "feinen": 5, "situat": [5, 112, 139, 151, 153, 162, 183, 210, 516, 517, 520, 532, 594, 671, 796, 802, 853, 855, 899, 915, 934, 962, 979, 988, 991, 992, 1040, 1148, 1153], "repertoir": [5, 8, 28, 166, 195, 205, 466], "schulungsmateri": [5, 23], "anbieten": 5, "k\u00f6nnen": [5, 23, 165, 168, 178, 184, 196, 209, 335, 336, 340, 353, 890, 1147, 1149, 1150, 1160, 1170, 1171], "da": [5, 7, 8, 64, 159, 160, 165, 168, 169, 170, 171, 178, 186, 190, 194, 195, 199, 202, 204, 205, 207, 211, 214, 215, 216, 220, 223, 230, 231, 233, 236, 239, 240, 242, 244, 252, 254, 261, 271, 281, 285, 303, 306, 313, 315, 327, 330, 335, 340, 353, 890, 1147, 1148, 1149, 1150, 1151, 1152, 1157, 1159, 1163, 1164, 1165, 1166, 1167, 1170, 1171], "sich": [5, 23, 37, 159, 160, 165, 168, 169, 170, 174, 184, 186, 194, 215, 233, 236, 246, 336, 1147, 1148, 1150, 1151, 1152, 1157, 1160, 1164, 1165, 1166, 1169, 1170, 1171], "jahrelangen": 5, "erfahrung": [5, 240, 1149], "entwickelt": [5, 178, 1157, 1164, 1166], "hat": [5, 8, 23, 37, 154, 159, 160, 168, 169, 170, 171, 174, 178, 184, 186, 194, 195, 199, 201, 205, 216, 236, 291, 303, 328, 335, 353, 1026, 1147, 1150, 1152, 1157, 1164, 1165, 1166, 1169, 1170, 1171], "al": [5, 8, 23, 32, 97, 159, 160, 165, 168, 169, 170, 174, 176, 178, 186, 195, 196, 203, 205, 207, 215, 233, 234, 236, 244, 248, 290, 336, 353, 570, 719, 827, 863, 884, 889, 890, 922, 1100, 1147, 1150, 1152, 1157, 1163, 1164, 1165, 1166, 1169], "einzelunternehm": [5, 23], "werd": [5, 1147], "erster": 5, "lini": 5, "firmen": [5, 23], "gebucht": [5, 11, 160, 174, 186, 353], "um": [5, 23, 32, 159, 160, 168, 170, 174, 178, 184, 194, 195, 233, 246, 261, 353, 1147, 1149, 1150, 1151, 1152, 1157, 1163, 1167], "mitarbeit": [5, 23], "weiterzubilden": 5, "entwickeln": [5, 178], "oder": [5, 23, 147, 168, 174, 178, 184, 195, 196, 201, 215, 224, 233, 240, 862, 890, 1125, 1147, 1150, 1151, 1157, 1160, 1163, 1164, 1165, 1167, 1170, 1171], "damit": [5, 23, 159, 184, 214, 240, 335, 340, 353, 1148, 1166, 1170], "arbeiten": [5, 23, 184, 195, 1163], "softwaretest": 5, "produktingenieur": 5, "program": [5, 8, 29, 30, 42, 59, 62, 72, 73, 74, 76, 78, 84, 85, 90, 97, 101, 110, 111, 114, 115, 119, 122, 125, 126, 130, 131, 144, 146, 147, 148, 150, 151, 152, 153, 156, 158, 161, 162, 164, 166, 169, 171, 172, 174, 175, 179, 186, 187, 188, 190, 191, 192, 197, 202, 203, 208, 211, 212, 218, 220, 221, 224, 227, 230, 234, 237, 240, 241, 242, 248, 253, 257, 266, 269, 270, 273, 276, 278, 286, 287, 288, 290, 294, 310, 312, 320, 321, 322, 323, 324, 325, 326, 332, 334, 335, 336, 337, 338, 339, 340, 341, 346, 348, 349, 352, 354, 359, 361, 362, 365, 367, 368, 370, 371, 372, 373, 376, 378, 381, 383, 388, 401, 410, 414, 415, 417, 419, 421, 422, 429, 431, 434, 436, 437, 438, 439, 443, 444, 445, 449, 450, 454, 455, 458, 460, 466, 470, 480, 481, 482, 486, 487, 488, 503, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 518, 520, 525, 527, 549, 555, 560, 561, 567, 568, 583, 586, 589, 605, 611, 615, 624, 625, 627, 628, 633, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 662, 669, 700, 702, 705, 710, 715, 716, 720, 725, 727, 733, 740, 752, 754, 755, 756, 760, 771, 773, 782, 802, 816, 818, 819, 832, 834, 835, 836, 837, 838, 839, 842, 844, 845, 846, 857, 862, 865, 891, 895, 898, 899, 901, 904, 905, 906, 907, 915, 919, 922, 924, 925, 926, 927, 928, 929, 932, 933, 934, 935, 937, 941, 942, 946, 950, 953, 956, 959, 960, 961, 962, 966, 967, 969, 974, 975, 977, 984, 988, 990, 993, 994, 995, 1000, 1001, 1003, 1009, 1010, 1011, 1012, 1023, 1026, 1030, 1031, 1034, 1035, 1038, 1042, 1043, 1045, 1052, 1053, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1071, 1072, 1073, 1074, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1101, 1102, 1103, 1105, 1106, 1107, 1109, 1110, 1112, 1113, 1114, 1116, 1120, 1127, 1128, 1130, 1132, 1133, 1137, 1140, 1149, 1150, 1151, 1152, 1153, 1155, 1156, 1158, 1159, 1160], "gem\u00e4\u00df": [5, 23, 160], "herkunft": [5, 1171], "mein": [5, 23, 159, 160, 165, 169, 170, 184, 194, 195, 214, 353, 901, 969, 1148, 1163], "muttersprach": [5, 23], "ist": [5, 7, 8, 159, 160, 165, 168, 169, 170, 174, 178, 186, 194, 195, 199, 201, 204, 205, 207, 210, 214, 216, 220, 223, 224, 229, 230, 231, 233, 236, 239, 242, 246, 252, 261, 271, 285, 303, 313, 327, 330, 331, 335, 340, 353, 398, 962, 1118, 1147, 1148, 1149, 1150, 1151, 1152, 1157, 1160, 1163, 1164, 1165, 1166, 1167, 1169, 1170, 1171], "umfasst": [5, 160], "weiterf\u00fchrend": [5, 23], "materi": [5, 8, 12, 13, 14, 17, 23, 27, 65, 97, 106, 144, 147, 148, 151, 165, 166, 183, 186, 187, 188, 190, 192, 193, 195, 197, 198, 202, 205, 208, 211, 213, 214, 217, 218, 221, 224, 227, 229, 230, 242, 245, 248, 251, 255, 256, 258, 260, 263, 270, 273, 279, 280, 284, 290, 294, 295, 298, 301, 302, 305, 306, 310, 312, 335, 343, 353, 445, 447, 448, 449, 450, 451, 453, 454, 456, 458, 460, 461, 462, 463, 464, 465, 467, 469, 472, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 516, 518, 521, 522, 523, 524, 526, 528, 529, 530, 531, 533, 534, 535, 536, 537, 560, 640, 720, 753, 756, 904, 915, 940, 943, 1000, 1001, 1003, 1023, 1024, 1052, 1102, 1114, 1115, 1127, 1138, 1142, 1150, 1152, 1155, 1157, 1158, 1164], "stark": 5, "gefragt": 5, "sind": [5, 7, 23, 159, 160, 169, 170, 174, 178, 186, 195, 196, 201, 204, 207, 223, 240, 335, 340, 353, 889, 890, 962, 1147, 1150, 1151, 1152, 1157, 1159, 1160, 1163, 1164, 1166, 1167, 1170, 1171], "letzter": 5, "betreffend": 5, "neuen": [5, 1152], "standard": [5, 34, 35, 36, 38, 106, 114, 143, 158, 179, 183, 188, 190, 192, 213, 220, 226, 235, 236, 239, 243, 254, 267, 269, 293, 309, 316, 326, 335, 336, 337, 338, 340, 356, 357, 358, 364, 365, 370, 371, 375, 420, 508, 527, 546, 560, 561, 605, 611, 615, 622, 623, 624, 625, 627, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 677, 682, 708, 710, 712, 713, 753, 755, 842, 845, 846, 862, 895, 909, 925, 931, 934, 947, 950, 974, 1004, 1023, 1024, 1040, 1113, 1125, 1129, 1143, 1149, 1150, 1152, 1153, 1154, 1155, 1159], "absolut": [5, 8, 29, 65, 90, 99, 114, 149, 153, 158, 164, 167, 174, 184, 187, 188, 190, 192, 203, 208, 212, 220, 226, 227, 234, 236, 237, 239, 240, 243, 248, 251, 257, 260, 263, 266, 267, 270, 273, 279, 280, 284, 287, 288, 290, 295, 298, 301, 302, 305, 306, 312, 321, 322, 323, 324, 325, 326, 332, 334, 335, 338, 353, 438, 466, 480, 508, 509, 510, 511, 512, 513, 514, 515, 518, 560, 730, 733, 754, 755, 756, 800, 812, 828, 829, 830, 831, 832, 835, 836, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 862, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 882, 898, 918, 921, 927, 929, 937, 939, 953, 956, 959, 961, 978, 980, 981, 982, 983, 984, 985, 986, 987, 993, 1001, 1008, 1009, 1010, 1011, 1015, 1023, 1034, 1043, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1101, 1102, 1106, 1107, 1110, 1113, 1114, 1116, 1120, 1123, 1125, 1127, 1130, 1132, 1137], "beginn": [5, 8, 29, 32, 78, 90, 148, 149, 159, 164, 167, 178, 184, 187, 188, 190, 192, 203, 218, 221, 222, 224, 227, 234, 237, 240, 244, 251, 263, 270, 273, 279, 280, 290, 295, 298, 301, 302, 305, 306, 312, 321, 322, 323, 324, 325, 326, 334, 335, 338, 380, 688, 755, 756, 1001, 1008, 1009, 1010, 1011, 1015, 1023, 1025, 1031, 1034, 1043, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1101, 1102, 1106, 1107, 1110, 1113, 1114, 1116, 1120, 1127, 1130, 1132, 1137], "advanc": [5, 8, 29, 78, 90, 148, 158, 164, 167, 172, 175, 178, 188, 192, 200, 203, 208, 218, 223, 224, 234, 248, 270, 290, 312, 321, 322, 323, 324, 325, 326, 334, 335, 336, 337, 338, 352, 430, 432, 434, 439, 440, 592, 662, 700, 735, 752, 754, 755, 756, 943, 1000, 1001, 1003, 1008, 1009, 1010, 1011, 1015, 1023, 1025, 1034, 1043, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1101, 1102, 1105, 1106, 1107, 1110, 1113, 1114, 1116, 1120, 1127, 1130, 1132, 1137, 1140, 1154], "product": [5, 8, 29, 38, 43, 78, 85, 90, 153, 164, 167, 187, 188, 190, 192, 208, 227, 234, 237, 240, 248, 251, 260, 263, 270, 273, 275, 279, 280, 284, 290, 295, 298, 301, 302, 305, 306, 312, 321, 322, 323, 324, 325, 326, 334, 335, 338, 438, 442, 458, 755, 756, 899, 908, 979, 993, 1001, 1008, 1009, 1010, 1011, 1015, 1023, 1034, 1043, 1053, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1101, 1102, 1106, 1107, 1110, 1113, 1114, 1116, 1120, 1127, 1130, 1132, 1137], "gro\u00dfe": [5, 37, 184, 1166], "thema": [5, 23, 169, 186, 240, 254, 335, 340, 1147], "einfach": [5, 170, 184, 195, 199, 281, 1151, 1152, 1157, 1163, 1165, 1167, 1169, 1171], "doch": [5, 207, 281, 291, 353, 1169], "m\u00e4chtig": 5, "vermutlich": [5, 184, 1169], "grund": [5, 1150, 1157], "warum": [5, 7, 23, 195, 196, 204, 246, 1157, 1163, 1164, 1169, 1171], "gern": [5, 184, 1147, 1157, 1164], "nachgefragt": 5, "werden": [5, 8, 37, 159, 160, 165, 168, 169, 170, 178, 184, 186, 195, 196, 199, 205, 214, 215, 230, 242, 254, 890, 1147, 1148, 1149, 1150, 1151, 1152, 1157, 1159, 1160, 1163, 1164, 1166, 1167, 1169, 1170, 1171], "deren": [5, 23, 168, 190, 1152, 1165, 1169, 1170], "kernkompetenz": 5, "liegt": [5, 23, 159, 170, 174, 243, 1151, 1167], "sondern": [5, 170, 184, 195, 1148, 1157, 1160, 1163, 1170], "eher": [5, 159, 195, 1149, 1163], "beiwerk": 5, "ihrem": [5, 23, 1147], "eigentlichen": 5, "job": [5, 162, 183, 193, 252, 425, 899, 924, 925, 926, 995, 1013, 1025, 1029, 1105, 1133], "schreiben": [5, 174, 196, 335, 336, 340, 1150, 1167, 1169], "physik": [5, 174], "z": [5, 38, 109, 170, 171, 174, 184, 194, 226, 227, 239, 242, 264, 291, 365, 375, 386, 387, 448, 581, 644, 714, 828, 889, 974, 1026, 1148, 1157, 1159, 1164], "b": [5, 7, 21, 31, 32, 38, 63, 73, 74, 107, 133, 154, 166, 170, 171, 172, 174, 184, 189, 194, 199, 201, 204, 207, 210, 217, 220, 223, 224, 226, 231, 233, 236, 239, 243, 246, 249, 252, 261, 264, 268, 271, 281, 285, 291, 296, 303, 307, 313, 327, 329, 330, 331, 367, 375, 377, 386, 402, 416, 419, 432, 562, 564, 572, 573, 579, 580, 581, 582, 587, 631, 632, 637, 638, 667, 673, 707, 714, 724, 753, 802, 833, 845, 862, 884, 889, 890, 906, 907, 908, 947, 963, 992, 998, 1007, 1010, 1022, 1030, 1031, 1037, 1040, 1042, 1044, 1045, 1050, 1113, 1116, 1128, 1148, 1157, 1159, 1164], "guter": [5, 1148], "ersatz": [5, 195, 1163], "matlab": [5, 172, 174, 227, 353, 1099, 1102], "tester": [5, 148, 1133, 1159], "basic": [5, 10, 28, 29, 31, 72, 73, 74, 77, 78, 83, 97, 101, 103, 106, 110, 111, 114, 118, 119, 120, 121, 124, 126, 130, 131, 147, 148, 151, 153, 158, 161, 166, 167, 172, 175, 178, 187, 200, 213, 218, 229, 237, 239, 242, 243, 267, 269, 276, 277, 278, 286, 294, 304, 308, 310, 316, 334, 335, 336, 337, 338, 340, 342, 346, 352, 354, 404, 410, 414, 417, 421, 430, 432, 434, 436, 437, 439, 440, 447, 449, 450, 457, 464, 466, 467, 480, 508, 509, 510, 511, 512, 513, 514, 515, 518, 525, 527, 538, 554, 555, 560, 586, 594, 599, 611, 615, 623, 624, 627, 628, 632, 633, 634, 645, 652, 653, 654, 655, 656, 657, 662, 665, 666, 668, 671, 673, 700, 717, 733, 740, 750, 752, 754, 755, 759, 762, 764, 769, 772, 779, 783, 793, 802, 804, 806, 811, 817, 820, 822, 823, 825, 829, 830, 836, 838, 843, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 882, 892, 898, 904, 905, 910, 911, 912, 913, 914, 924, 925, 926, 927, 929, 934, 937, 939, 947, 953, 956, 959, 961, 969, 972, 973, 977, 978, 980, 981, 982, 983, 984, 985, 986, 987, 988, 993, 1031, 1059, 1086, 1087, 1098, 1099, 1108, 1114, 1120, 1121, 1123, 1138, 1142, 1154, 1155, 1168], "einf\u00fchrung": [5, 174, 178, 191, 193, 354, 1023, 1149, 1154, 1155, 1157, 1166, 1168], "anhand": [5, 6, 169, 178, 191, 193, 195, 196, 245, 352, 354, 1149, 1155, 1163, 1168], "beispielen": [5, 8, 165, 191, 193, 195, 205, 214, 230, 242, 353, 354, 1155, 1168], "memori": [5, 42, 43, 49, 55, 73, 78, 80, 97, 109, 110, 111, 146, 150, 151, 152, 154, 156, 163, 167, 171, 172, 173, 176, 178, 183, 189, 190, 198, 202, 203, 207, 220, 226, 229, 236, 239, 254, 276, 278, 280, 285, 302, 305, 353, 354, 356, 370, 376, 398, 399, 405, 418, 420, 421, 423, 429, 430, 432, 434, 438, 439, 440, 467, 482, 484, 486, 487, 488, 490, 492, 493, 500, 501, 508, 525, 527, 528, 552, 560, 561, 566, 567, 577, 595, 596, 597, 613, 632, 642, 657, 660, 662, 671, 698, 700, 705, 712, 717, 719, 720, 721, 752, 753, 754, 755, 764, 769, 772, 774, 779, 783, 793, 797, 798, 799, 802, 804, 806, 807, 811, 814, 820, 823, 833, 838, 840, 846, 898, 915, 924, 944, 946, 947, 960, 961, 993, 997, 1010, 1011, 1024, 1031, 1112, 1150, 1151, 1154, 1158, 1159, 1168], "weiter": [5, 23, 37, 159, 160, 184, 186, 195, 209, 233, 251, 281, 890, 1147, 1157, 1163, 1164, 1166, 1167, 1171], "standbein": [5, 1157], "mehreren": [5, 184, 200, 1170], "auspr\u00e4gungen": 5, "commandlin": [5, 8, 29, 31, 42, 80, 90, 99, 114, 144, 147, 169, 171, 191, 193, 203, 205, 208, 212, 218, 229, 230, 234, 240, 241, 242, 245, 248, 263, 270, 273, 279, 283, 284, 289, 290, 301, 311, 312, 319, 335, 336, 337, 338, 339, 353, 410, 414, 417, 421, 430, 434, 439, 440, 443, 445, 455, 466, 480, 506, 508, 509, 510, 511, 512, 513, 514, 515, 518, 560, 662, 700, 733, 752, 754, 755, 771, 802, 825, 829, 830, 831, 832, 835, 836, 842, 843, 844, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 863, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 882, 892, 898, 899, 907, 921, 927, 929, 937, 939, 953, 955, 956, 959, 961, 975, 976, 978, 980, 981, 982, 983, 984, 985, 986, 987, 994, 1023, 1053, 1056, 1057, 1058, 1059, 1061, 1062, 1063, 1064, 1066, 1067, 1069, 1071, 1072, 1073, 1074, 1075, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1149, 1157, 1159, 1160, 1164, 1165, 1166], "konzept": [5, 23, 353, 1157, 1159, 1166], "zielpublikum": 5, "deckt": 5, "ungef\u00e4hr": [5, 159], "mehr": [5, 11, 23, 159, 168, 170, 194, 200, 220, 353, 1147, 1148, 1150, 1152, 1157, 1164, 1165, 1166, 1171], "kernentwickl": 5, "themen": [5, 23, 165, 176, 178, 1157], "applikationsentwicklung": 5, "direkt": [5, 23, 178, 1150, 1166], "systemschnittstel": 5, "schritt": 5, "geht": [5, 7, 8, 23, 64, 159, 160, 168, 170, 178, 184, 194, 195, 199, 204, 205, 214, 215, 230, 236, 242, 252, 330, 353, 890], "nur": [5, 23, 159, 165, 169, 170, 174, 184, 186, 194, 195, 199, 201, 209, 231, 330, 353, 1149, 1150, 1157, 1160, 1163, 1164, 1165, 1167, 1169, 1170, 1171], "mutig": 5, "pool": [5, 83, 212, 822, 961, 963], "absprach": [5, 1147], "individuel": [5, 23, 186, 1147], "zusammengestellt": 5, "schulungsverlauf": 5, "meisten": [5, 23, 178, 184, 353, 1148, 1169], "recht": [5, 7, 64, 120, 159, 160, 170, 178, 184, 195, 204, 1163, 1164], "dynamisch": [5, 178, 209, 1150, 1152, 1167], "teilnehm": [5, 165, 174, 178, 186, 353, 1157, 1164], "haben": [5, 159, 160, 169, 174, 178, 186, 194, 195, 207, 353, 621, 1148, 1149, 1150, 1151, 1152, 1157, 1163, 1165, 1166, 1167, 1170], "oft": [5, 23, 159, 184, 186, 1151], "bed\u00fcrfniss": [5, 23, 186], "vorab": [5, 165, 178, 214], "bekannt": [5, 23, 184, 1152], "waren": [5, 169, 174, 1148, 1152], "wodurch": [5, 23], "auch": [5, 23, 159, 160, 165, 170, 174, 184, 196, 199, 201, 207, 210, 215, 236, 240, 246, 271, 330, 331, 353, 1147, 1148, 1149, 1150, 1151, 1157, 1160, 1164, 1169, 1171], "mal": [5, 160, 174, 184, 195, 246, 313, 353, 1148, 1152, 1163], "agenda": [5, 23, 27, 175, 280, 284, 288, 290, 294, 302, 306, 310, 312, 313, 316, 352], "abgewichen": 5, "wird": [5, 7, 23, 159, 160, 165, 168, 169, 170, 178, 184, 194, 195, 201, 204, 233, 335, 340, 353, 1147, 1148, 1151, 1152, 1157, 1159, 1160, 1163, 1164, 1165, 1166, 1167, 1169, 1170, 1171], "verh\u00e4ltni": 5, "vortrag": [5, 169, 1147], "\u00fcbungen": [5, 8, 165, 178, 186, 195, 196, 205, 214, 230, 242, 353, 1150, 1157, 1159, 1163, 1166], "ca": [5, 23, 32, 159, 161, 742, 1128], "50": [5, 7, 106, 109, 161, 172, 184, 189, 194, 199, 201, 204, 207, 210, 216, 220, 223, 226, 231, 233, 239, 243, 246, 249, 252, 261, 264, 268, 271, 281, 285, 291, 303, 307, 313, 327, 330, 331, 336, 337, 427, 429, 445, 516, 551, 552, 884, 906, 907, 908, 1002, 1025, 1045, 1057, 1104, 1105, 1117, 1133], "kleiner": [5, 7, 204, 889], "den": [5, 160, 168, 169, 170, 174, 178, 184, 186, 194, 195, 200, 207, 214, 243, 291, 335, 336, 340, 353, 824, 1148, 1149, 1150, 1151, 1152, 1157, 1160, 1163, 1164, 1170, 1171], "teilnehmern": [5, 353, 1171], "pc": [5, 78, 108, 147, 203, 267, 321, 338, 341, 520, 900, 901, 907, 1148], "erledigt": 5, "speziel": [5, 165, 194, 195, 254, 1160, 1163, 1166, 1170], "fortgeschrittenen": 5, "programmierthemen": 5, "gruppenprojekt": 5, "gegenstand": [5, 1147], "denen": [5, 23, 159, 1157], "zusammenarbeiten": 5, "austauschmedium": 5, "solch": 5, "set": [5, 9, 14, 21, 29, 33, 59, 62, 65, 78, 85, 90, 108, 114, 115, 133, 151, 152, 153, 154, 155, 156, 157, 158, 162, 166, 167, 168, 171, 172, 183, 184, 187, 188, 190, 191, 192, 195, 196, 200, 201, 202, 206, 208, 209, 212, 214, 218, 219, 221, 222, 224, 225, 227, 228, 230, 232, 234, 235, 236, 241, 242, 244, 245, 247, 248, 250, 256, 258, 260, 262, 263, 265, 267, 269, 270, 272, 273, 276, 277, 278, 280, 282, 283, 284, 286, 289, 290, 292, 295, 298, 301, 302, 304, 305, 306, 308, 311, 312, 314, 319, 335, 340, 342, 353, 355, 370, 376, 393, 398, 399, 408, 411, 423, 424, 432, 438, 446, 447, 448, 450, 452, 454, 455, 457, 462, 465, 467, 482, 487, 496, 497, 501, 510, 511, 516, 517, 518, 519, 536, 564, 565, 579, 580, 581, 582, 595, 664, 673, 688, 718, 719, 734, 753, 755, 773, 786, 788, 798, 802, 807, 812, 834, 841, 847, 863, 899, 901, 906, 908, 915, 920, 922, 928, 936, 940, 944, 949, 957, 958, 961, 962, 973, 975, 976, 977, 988, 991, 997, 1000, 1001, 1004, 1013, 1014, 1020, 1023, 1024, 1027, 1031, 1036, 1055, 1077, 1088, 1095, 1096, 1098, 1100, 1102, 1105, 1106, 1107, 1109, 1113, 1127, 1128, 1140, 1142, 1145, 1156, 1163], "gew\u00f6hnlich": [5, 23], "github": [5, 8, 23, 42, 44, 65, 97, 106, 109, 114, 133, 135, 147, 148, 158, 162, 163, 165, 166, 169, 171, 178, 179, 180, 190, 192, 197, 198, 202, 203, 205, 212, 213, 214, 218, 220, 221, 224, 227, 229, 230, 234, 237, 240, 242, 245, 248, 251, 255, 256, 258, 259, 260, 263, 267, 270, 276, 277, 278, 280, 284, 288, 290, 294, 295, 298, 302, 306, 310, 312, 316, 334, 339, 340, 341, 342, 349, 354, 355, 507, 538, 580, 758, 761, 763, 766, 768, 771, 780, 782, 792, 794, 802, 803, 804, 805, 810, 814, 901, 906, 908, 976, 977, 978, 980, 986, 990, 992, 993, 994], "endprodukt": 5, "bleibt": [5, 23, 1167], "homepag": [5, 13, 155, 157, 165, 168, 169, 183, 210, 218, 220, 255, 256, 258, 429, 988, 1133], "erhalten": 5, "hier": [5, 8, 17, 23, 64, 159, 160, 165, 168, 169, 171, 174, 178, 186, 190, 194, 195, 201, 205, 211, 214, 215, 224, 230, 233, 242, 243, 285, 303, 353, 1147, 1150, 1157, 1163, 1164, 1166, 1167, 1169], "mix": [5, 29, 190, 197, 208, 211, 218, 221, 224, 225, 229, 231, 234, 263, 270, 283, 284, 289, 290, 292, 311, 312, 319, 381, 420, 423, 424, 426, 428, 571, 755, 1028, 1031, 1047, 1050, 1059, 1069, 1072, 1073, 1074, 1075, 1079, 1080, 1081, 1082, 1083, 1084, 1098, 1099, 1113, 1118, 1124, 1168], "j\u00fcngeren": 5, "2023": [5, 60, 96, 106, 114, 268, 269, 272, 275, 286, 292, 303, 314, 352, 443, 444, 713], "10": [5, 7, 31, 63, 97, 102, 105, 106, 109, 114, 140, 147, 153, 154, 159, 161, 162, 172, 173, 184, 189, 191, 195, 196, 199, 201, 204, 207, 208, 210, 215, 216, 217, 218, 220, 221, 223, 224, 226, 231, 233, 236, 239, 243, 246, 248, 249, 251, 252, 262, 264, 269, 271, 278, 279, 280, 281, 284, 285, 290, 291, 296, 300, 303, 307, 313, 321, 328, 329, 330, 331, 334, 348, 349, 352, 364, 366, 368, 370, 378, 396, 403, 420, 422, 436, 446, 456, 486, 506, 508, 509, 511, 514, 517, 522, 525, 545, 546, 551, 552, 554, 555, 560, 570, 573, 575, 582, 649, 650, 656, 660, 667, 671, 672, 698, 710, 719, 720, 721, 722, 732, 755, 792, 802, 810, 831, 833, 839, 858, 862, 864, 884, 886, 890, 893, 901, 906, 907, 908, 925, 934, 942, 969, 972, 976, 977, 978, 990, 991, 1000, 1002, 1003, 1031, 1032, 1039, 1061, 1062, 1082, 1088, 1099, 1100, 1104, 1105, 1121, 1122, 1128, 1133, 1145, 1163], "09": [5, 97, 112, 147, 154, 163, 187, 203, 268, 303, 313, 332, 352, 444, 447, 884, 907, 908, 932, 1027, 1104], "11": [5, 7, 40, 63, 106, 114, 147, 148, 163, 172, 173, 178, 179, 183, 184, 189, 190, 191, 195, 196, 199, 201, 204, 207, 210, 213, 215, 216, 217, 220, 225, 226, 227, 231, 233, 236, 239, 243, 246, 249, 252, 255, 256, 261, 265, 268, 271, 275, 281, 285, 291, 299, 302, 303, 314, 315, 319, 327, 328, 329, 330, 331, 338, 341, 348, 349, 352, 354, 356, 370, 436, 438, 452, 464, 517, 545, 554, 555, 561, 563, 564, 566, 570, 572, 573, 579, 581, 591, 596, 598, 603, 616, 617, 618, 621, 634, 658, 662, 665, 668, 669, 674, 675, 676, 677, 687, 699, 700, 701, 702, 703, 704, 705, 707, 710, 711, 714, 716, 719, 720, 722, 723, 725, 732, 733, 734, 737, 738, 740, 752, 753, 755, 756, 827, 840, 884, 893, 947, 952, 976, 977, 978, 1026, 1032, 1037, 1055, 1089, 1091, 1095, 1097, 1099, 1102, 1104, 1105, 1116, 1133, 1145, 1152, 1153, 1154, 1163], "introduct": [5, 29, 72, 73, 74, 78, 97, 98, 99, 106, 114, 131, 164, 167, 212, 213, 227, 229, 237, 240, 248, 251, 257, 259, 260, 266, 267, 269, 276, 279, 280, 284, 287, 295, 298, 301, 302, 305, 334, 339, 343, 352, 354, 388, 397, 404, 410, 414, 417, 421, 430, 434, 439, 440, 480, 508, 509, 510, 511, 512, 513, 514, 515, 518, 525, 527, 538, 560, 568, 583, 586, 589, 605, 611, 615, 624, 627, 628, 633, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 660, 662, 669, 681, 688, 700, 716, 725, 733, 740, 752, 754, 755, 756, 804, 825, 829, 830, 831, 832, 835, 843, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 882, 892, 897, 898, 910, 911, 912, 913, 914, 921, 927, 929, 937, 939, 942, 953, 956, 959, 961, 978, 980, 981, 982, 983, 984, 985, 986, 987, 1023, 1096, 1097, 1098, 1107, 1127, 1132, 1154, 1168], "07": [5, 97, 106, 114, 147, 161, 163, 174, 187, 216, 217, 251, 256, 268, 269, 275, 291, 334, 348, 349, 352, 450, 829, 830, 906, 1027, 1055, 1099, 1104], "18": [5, 7, 63, 154, 161, 162, 166, 172, 173, 189, 194, 199, 201, 204, 207, 210, 211, 215, 216, 220, 223, 224, 226, 232, 233, 239, 243, 246, 249, 252, 261, 265, 267, 268, 271, 275, 281, 285, 291, 296, 303, 307, 313, 328, 330, 331, 334, 352, 570, 635, 699, 707, 719, 755, 766, 775, 802, 839, 845, 847, 881, 884, 898, 908, 932, 934, 968, 979, 986, 987, 988, 991, 1020, 1055, 1062, 1104, 1105], "For": [5, 40, 112, 114, 149, 150, 151, 155, 158, 161, 163, 164, 166, 167, 172, 175, 180, 181, 183, 187, 203, 208, 211, 218, 221, 224, 229, 239, 242, 244, 248, 256, 258, 259, 260, 284, 290, 295, 306, 346, 352, 354, 366, 367, 373, 388, 397, 404, 410, 414, 417, 419, 421, 430, 434, 439, 440, 457, 482, 538, 563, 570, 574, 587, 596, 616, 662, 700, 707, 710, 714, 719, 724, 752, 754, 755, 773, 788, 802, 829, 830, 839, 862, 898, 899, 907, 908, 909, 918, 922, 949, 970, 977, 978, 979, 986, 987, 991, 1024, 1025, 1035, 1042, 1050, 1073, 1078, 1100, 1103, 1105, 1107], "04": [5, 97, 105, 114, 134, 147, 158, 161, 163, 178, 179, 203, 251, 267, 268, 271, 275, 303, 332, 334, 352, 445, 755, 898, 979, 986, 987, 991, 999, 1104, 1133], "20": [5, 7, 8, 23, 63, 147, 154, 156, 161, 170, 171, 172, 173, 184, 189, 194, 195, 199, 201, 204, 205, 207, 210, 215, 216, 220, 223, 226, 231, 233, 236, 239, 243, 246, 249, 251, 252, 261, 264, 268, 271, 275, 277, 281, 285, 292, 295, 296, 298, 303, 307, 313, 330, 331, 334, 352, 358, 360, 362, 378, 402, 442, 482, 510, 511, 516, 545, 546, 551, 552, 554, 555, 570, 667, 670, 671, 672, 681, 688, 710, 712, 713, 718, 719, 720, 721, 742, 821, 827, 847, 862, 884, 899, 906, 907, 908, 962, 979, 988, 1002, 1003, 1027, 1046, 1054, 1055, 1081, 1104, 1105, 1133, 1135, 1142], "clean": [5, 53, 63, 123, 134, 166, 218, 237, 352, 420, 431, 432, 435, 441, 562, 660, 756, 976, 978, 988, 997, 1050, 1099], "code": [5, 21, 23, 28, 29, 33, 40, 42, 53, 55, 63, 65, 70, 73, 80, 85, 103, 104, 108, 114, 130, 134, 136, 144, 148, 150, 151, 152, 153, 154, 157, 158, 165, 166, 169, 171, 174, 175, 176, 178, 179, 180, 183, 186, 187, 188, 190, 192, 197, 202, 203, 207, 211, 212, 213, 218, 220, 221, 223, 226, 229, 234, 236, 237, 239, 240, 248, 258, 260, 263, 267, 269, 270, 273, 276, 278, 281, 283, 284, 285, 289, 290, 291, 294, 295, 298, 301, 302, 306, 310, 311, 312, 313, 315, 316, 319, 320, 321, 330, 335, 340, 352, 355, 362, 364, 368, 372, 378, 392, 398, 403, 419, 420, 424, 426, 428, 434, 435, 437, 438, 439, 440, 441, 445, 447, 448, 449, 451, 456, 457, 458, 460, 461, 462, 464, 465, 466, 467, 469, 470, 472, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 508, 509, 510, 511, 512, 513, 514, 515, 516, 518, 519, 521, 522, 523, 524, 526, 528, 529, 530, 531, 533, 534, 535, 536, 537, 541, 543, 544, 546, 547, 549, 550, 552, 553, 555, 556, 558, 559, 560, 561, 562, 563, 564, 566, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 588, 590, 591, 592, 593, 594, 597, 598, 599, 600, 601, 603, 604, 607, 608, 609, 613, 617, 618, 619, 620, 621, 625, 631, 632, 634, 635, 637, 638, 640, 646, 649, 653, 654, 660, 661, 665, 667, 669, 670, 671, 673, 675, 677, 688, 697, 698, 699, 700, 702, 703, 704, 705, 707, 709, 714, 718, 719, 721, 722, 723, 724, 732, 734, 736, 739, 741, 743, 744, 745, 746, 748, 749, 750, 751, 753, 754, 755, 756, 761, 766, 779, 780, 794, 800, 802, 807, 814, 817, 818, 820, 823, 841, 868, 898, 899, 907, 908, 923, 924, 940, 943, 947, 951, 960, 964, 966, 967, 969, 971, 973, 975, 976, 977, 978, 979, 980, 981, 983, 984, 986, 988, 999, 1000, 1002, 1003, 1004, 1008, 1010, 1019, 1021, 1024, 1025, 1027, 1028, 1034, 1035, 1036, 1042, 1046, 1047, 1048, 1055, 1075, 1079, 1098, 1102, 1114, 1116, 1125, 1127, 1133, 1134, 1136, 1140, 1141, 1142, 1145, 1146, 1153, 1158, 1166, 1167, 1171], "With": [5, 29, 131, 134, 139, 152, 158, 178, 239, 248, 267, 269, 270, 273, 278, 285, 293, 295, 298, 302, 306, 309, 319, 352, 393, 422, 438, 448, 458, 459, 468, 480, 494, 508, 560, 669, 700, 754, 755, 756, 802, 831, 832, 898, 905, 906, 937, 939, 956, 974, 977, 988, 1019, 1023, 1098, 1114, 1118, 1120, 1122, 1129, 1153, 1155, 1156, 1158], "03": [5, 97, 105, 114, 147, 148, 156, 161, 163, 170, 178, 213, 234, 236, 239, 268, 269, 272, 275, 281, 294, 313, 331, 334, 338, 352, 354, 436, 443, 444, 445, 506, 538, 555, 561, 563, 564, 566, 570, 571, 573, 575, 578, 659, 864, 988, 999, 1104, 1142, 1152], "28": [5, 7, 23, 97, 105, 115, 147, 154, 161, 162, 172, 173, 184, 189, 194, 199, 201, 204, 207, 210, 215, 216, 220, 223, 226, 231, 233, 236, 239, 243, 246, 249, 252, 261, 264, 268, 271, 275, 281, 285, 291, 303, 307, 313, 329, 330, 331, 348, 349, 352, 444, 456, 503, 519, 520, 543, 552, 635, 682, 792, 844, 884, 908, 936, 977, 978, 990, 1057, 1104, 1145], "29": [5, 7, 97, 106, 161, 162, 172, 173, 184, 189, 194, 199, 201, 204, 207, 210, 215, 216, 220, 223, 226, 231, 233, 239, 243, 246, 249, 252, 261, 264, 268, 271, 275, 281, 285, 291, 303, 307, 314, 327, 330, 334, 348, 349, 352, 444, 722, 766, 906, 908, 976, 979, 988, 1104], "sap": [5, 218, 269, 352, 1120], "13": [5, 6, 7, 63, 106, 134, 144, 154, 156, 163, 170, 172, 173, 184, 189, 192, 196, 199, 201, 204, 207, 210, 215, 217, 220, 223, 224, 226, 231, 233, 236, 239, 243, 246, 249, 252, 261, 264, 268, 269, 272, 275, 281, 285, 291, 296, 303, 307, 313, 330, 331, 352, 436, 443, 448, 451, 562, 677, 719, 766, 844, 884, 907, 932, 942, 962, 990, 997, 999, 1040, 1051, 1104, 1105, 1128, 1163], "15": [5, 7, 61, 63, 106, 112, 114, 147, 150, 158, 161, 170, 172, 173, 181, 184, 187, 189, 195, 196, 199, 201, 203, 204, 207, 210, 215, 216, 220, 223, 226, 231, 233, 234, 236, 239, 243, 246, 249, 252, 261, 264, 268, 271, 275, 281, 286, 291, 295, 296, 298, 303, 307, 313, 328, 330, 331, 332, 334, 341, 348, 349, 352, 444, 510, 511, 528, 529, 530, 531, 533, 534, 637, 697, 720, 741, 743, 745, 753, 831, 845, 899, 933, 942, 1012, 1103, 1104, 1105, 1125, 1128, 1163], "02": [5, 97, 106, 114, 147, 154, 161, 163, 170, 174, 200, 210, 237, 251, 268, 269, 275, 348, 349, 352, 436, 444, 445, 908, 976, 977, 978, 988, 990, 1104], "17": [5, 7, 63, 96, 106, 114, 156, 162, 166, 170, 172, 173, 184, 189, 191, 194, 199, 201, 204, 207, 210, 215, 216, 220, 225, 227, 228, 232, 233, 234, 236, 239, 243, 246, 252, 255, 256, 262, 264, 268, 271, 275, 281, 286, 291, 295, 296, 298, 303, 307, 313, 327, 330, 331, 352, 570, 618, 659, 668, 677, 698, 710, 720, 738, 753, 766, 802, 833, 884, 908, 924, 930, 960, 964, 991, 1020, 1062, 1104, 1105, 1113, 1125], "tour": [5, 159, 218, 255, 256, 258, 278, 315, 316, 352, 353, 506, 658, 754, 755, 1099, 1153, 1154], "forc": [5, 31, 35, 150, 152, 156, 179, 239, 352, 353, 427, 442, 470, 566, 837, 915, 944, 978, 1099, 1153], "2022": [5, 97, 105, 106, 134, 163, 226, 232, 236, 239, 255, 256, 262, 265, 313, 348, 349, 352, 444, 455, 517, 688, 713, 717, 753, 862, 864, 978, 988, 1055, 1099], "12": [5, 6, 7, 8, 40, 63, 106, 112, 114, 133, 147, 156, 161, 162, 163, 172, 173, 177, 184, 189, 195, 196, 199, 201, 204, 207, 210, 211, 215, 216, 217, 220, 223, 224, 228, 231, 233, 236, 239, 243, 246, 249, 251, 252, 261, 264, 267, 268, 269, 271, 275, 281, 285, 291, 296, 299, 302, 303, 305, 307, 314, 319, 329, 330, 334, 348, 349, 352, 420, 444, 445, 453, 538, 671, 677, 710, 753, 833, 844, 847, 862, 884, 886, 893, 906, 908, 910, 934, 942, 960, 976, 988, 990, 991, 997, 1003, 1031, 1042, 1099, 1102, 1104, 1105, 1128, 1139, 1163], "01": [5, 63, 96, 97, 105, 106, 114, 147, 148, 156, 161, 163, 170, 174, 192, 203, 210, 217, 226, 232, 239, 251, 268, 269, 271, 275, 314, 332, 334, 348, 349, 352, 431, 444, 445, 458, 545, 546, 735, 831, 858, 908, 962, 964, 991, 1088, 1099, 1104, 1133], "A": [5, 13, 20, 23, 27, 28, 29, 33, 38, 39, 40, 41, 61, 65, 69, 73, 74, 78, 82, 84, 85, 97, 98, 108, 109, 110, 111, 114, 115, 117, 119, 120, 121, 122, 123, 124, 130, 138, 150, 153, 154, 155, 156, 158, 163, 166, 167, 168, 171, 172, 173, 187, 189, 190, 191, 199, 203, 210, 212, 214, 220, 223, 226, 230, 236, 237, 239, 243, 251, 257, 259, 263, 266, 267, 278, 280, 285, 287, 288, 291, 298, 301, 302, 305, 321, 327, 332, 336, 337, 352, 357, 360, 361, 373, 374, 375, 388, 393, 397, 403, 404, 406, 409, 410, 414, 417, 418, 419, 420, 421, 424, 426, 427, 428, 430, 432, 434, 439, 440, 442, 448, 455, 458, 459, 460, 464, 465, 468, 470, 480, 482, 494, 507, 508, 517, 519, 525, 560, 565, 566, 571, 573, 574, 575, 624, 625, 627, 628, 631, 642, 645, 646, 647, 648, 649, 650, 652, 653, 654, 655, 656, 657, 658, 662, 664, 677, 688, 698, 700, 703, 708, 709, 710, 714, 716, 720, 722, 726, 735, 740, 751, 752, 753, 754, 755, 756, 763, 777, 779, 796, 819, 831, 832, 835, 836, 841, 844, 845, 849, 850, 855, 859, 865, 895, 898, 905, 906, 908, 923, 927, 928, 931, 937, 939, 944, 945, 946, 947, 956, 961, 962, 973, 974, 977, 979, 984, 986, 987, 988, 991, 992, 999, 1000, 1004, 1005, 1006, 1007, 1008, 1010, 1011, 1012, 1013, 1030, 1031, 1038, 1040, 1045, 1051, 1055, 1056, 1057, 1062, 1085, 1088, 1091, 1102, 1106, 1108, 1109, 1112, 1116, 1119, 1120, 1126, 1128, 1134, 1135, 1145, 1153, 1154, 1155, 1156, 1158, 1168], "new": [5, 16, 32, 42, 44, 49, 50, 55, 63, 65, 78, 107, 112, 119, 120, 148, 151, 153, 154, 155, 156, 157, 158, 161, 166, 178, 183, 203, 220, 224, 226, 236, 239, 243, 251, 261, 278, 284, 285, 302, 321, 346, 352, 354, 381, 411, 415, 416, 424, 428, 442, 445, 465, 467, 485, 489, 501, 503, 507, 516, 518, 519, 528, 529, 530, 531, 533, 534, 538, 544, 552, 561, 562, 567, 570, 616, 618, 629, 631, 632, 637, 654, 658, 662, 664, 665, 669, 670, 671, 673, 676, 687, 698, 701, 705, 707, 709, 711, 712, 716, 717, 718, 719, 720, 721, 725, 726, 733, 735, 737, 740, 744, 745, 746, 752, 755, 756, 759, 796, 802, 810, 834, 858, 881, 899, 902, 906, 908, 931, 932, 933, 942, 944, 945, 951, 963, 994, 1013, 1028, 1031, 1040, 1079, 1104, 1105, 1122, 1128, 1133, 1152, 1153, 1154, 1156], "languag": [5, 12, 29, 43, 59, 62, 78, 90, 114, 131, 147, 172, 174, 186, 187, 188, 190, 192, 195, 197, 202, 203, 205, 208, 210, 211, 212, 214, 230, 234, 237, 240, 242, 245, 270, 273, 276, 277, 278, 305, 321, 322, 323, 324, 325, 326, 335, 338, 352, 354, 356, 358, 370, 373, 384, 388, 397, 402, 404, 410, 414, 415, 417, 430, 434, 439, 442, 447, 449, 466, 480, 481, 482, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 525, 527, 560, 561, 568, 573, 575, 583, 586, 588, 589, 605, 611, 615, 624, 627, 628, 633, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 662, 664, 669, 676, 677, 687, 701, 706, 708, 711, 716, 720, 723, 724, 725, 733, 739, 740, 752, 754, 755, 756, 834, 891, 899, 900, 976, 978, 995, 1004, 1008, 1009, 1010, 1011, 1012, 1015, 1020, 1024, 1028, 1030, 1031, 1034, 1043, 1051, 1053, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1101, 1102, 1106, 1110, 1113, 1114, 1116, 1120, 1125, 1127, 1130, 1132, 1137, 1142, 1150, 1153, 1154, 1155, 1156, 1158], "start": [5, 8, 42, 110, 111, 119, 120, 145, 147, 150, 151, 152, 153, 156, 161, 162, 166, 170, 175, 180, 187, 188, 190, 191, 192, 193, 195, 197, 198, 199, 202, 203, 205, 208, 212, 213, 218, 224, 233, 239, 240, 249, 251, 264, 267, 269, 271, 273, 276, 278, 280, 285, 288, 303, 305, 306, 313, 316, 321, 338, 352, 355, 362, 365, 366, 375, 378, 392, 415, 436, 437, 450, 458, 462, 465, 472, 538, 549, 555, 621, 632, 637, 640, 660, 712, 735, 753, 763, 802, 815, 829, 830, 834, 835, 838, 840, 841, 862, 863, 875, 884, 886, 899, 925, 926, 935, 938, 945, 946, 950, 954, 955, 958, 960, 963, 969, 973, 976, 990, 995, 1002, 1007, 1008, 1010, 1011, 1019, 1029, 1030, 1036, 1046, 1062, 1069, 1070, 1088, 1107, 1109, 1117, 1118, 1122, 1125, 1133, 1141, 1153, 1156], "schluss": [5, 7, 159, 184, 204], "noch": [5, 7, 159, 160, 170, 174, 178, 184, 194, 195, 199, 201, 204, 207, 210, 220, 233, 239, 240, 243, 264, 271, 353, 1152, 1163, 1170], "talk": [5, 42, 45, 50, 84, 114, 115, 130, 151, 155, 166, 171, 175, 183, 187, 190, 195, 227, 229, 230, 306, 337, 442, 443, 705, 714, 802, 821, 899, 904, 908, 915, 1145], "heurigen": 5, "grazer": [5, 60, 169, 190, 306, 904], "linuxtagen": [5, 169], "pointless": [5, 134, 264, 278, 285, 302, 306, 315, 424, 571], "blink": [5, 61, 134, 278, 281, 302, 306, 321, 324, 899, 940, 943], "asyncio": [5, 134, 183, 187, 237, 278, 302, 306, 688, 1100], "libgpiod": [5, 124, 130, 133, 134, 148, 278, 302, 306, 321, 323, 755], "raspberri": [5, 78, 97, 104, 106, 122, 133, 134, 146, 163, 167, 193, 267, 278, 302, 306, 338, 340, 341, 352, 354, 520, 755, 779, 783, 802, 806, 811, 817, 820, 823, 898, 905, 907, 908, 919, 964, 977, 979, 983, 986, 988, 990, 1001, 1023, 1027, 1114, 1116, 1127, 1148, 1157], "pi": [5, 38, 78, 106, 114, 131, 134, 163, 167, 193, 223, 226, 267, 278, 302, 306, 341, 352, 354, 378, 405, 408, 426, 516, 519, 520, 575, 595, 675, 736, 755, 779, 783, 806, 811, 817, 820, 823, 898, 905, 907, 908, 919, 964, 977, 979, 986, 987, 990, 1031], "cours": [5, 8, 13, 40, 104, 131, 133, 134, 147, 148, 149, 150, 151, 153, 166, 179, 180, 190, 198, 202, 208, 213, 218, 229, 240, 257, 259, 267, 276, 278, 279, 293, 294, 302, 305, 306, 309, 310, 335, 353, 354, 356, 405, 406, 422, 449, 460, 466, 472, 517, 753, 777, 802, 814, 829, 830, 891, 900, 929, 936, 978, 1000, 1001, 1023, 1055, 1087, 1096, 1100, 1113, 1114, 1127, 1153, 1156, 1168], "sollt": [5, 23, 159, 160, 165, 168, 207, 1150, 1169], "interess": [5, 23, 240, 1148, 1159], "anderen": [5, 23, 184, 194, 199, 201, 353, 1147, 1148, 1150, 1152, 1171], "themenkomplex": 5, "bestehen": [5, 1166], "biet": 5, "folgend": [5, 165, 184, 195, 240, 1163], "preisgestaltung": 5, "all": [5, 23, 24, 29, 35, 40, 42, 45, 46, 47, 51, 55, 56, 57, 59, 61, 62, 65, 70, 80, 88, 110, 111, 115, 119, 130, 131, 138, 144, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 165, 166, 167, 171, 172, 173, 178, 180, 183, 184, 186, 187, 189, 194, 199, 203, 209, 211, 212, 220, 223, 226, 227, 231, 236, 237, 239, 256, 258, 261, 264, 267, 269, 276, 278, 285, 302, 306, 320, 322, 323, 330, 346, 358, 362, 372, 376, 377, 380, 381, 382, 393, 401, 402, 408, 418, 420, 422, 424, 425, 428, 431, 432, 435, 437, 442, 444, 445, 446, 447, 448, 451, 452, 456, 457, 460, 461, 465, 467, 470, 472, 473, 481, 482, 487, 488, 509, 511, 519, 520, 538, 566, 567, 570, 572, 577, 595, 596, 613, 618, 631, 632, 646, 654, 656, 671, 673, 675, 688, 698, 702, 707, 708, 710, 720, 721, 724, 727, 729, 732, 746, 755, 761, 763, 770, 773, 775, 780, 788, 792, 794, 798, 800, 802, 810, 816, 819, 828, 829, 830, 834, 835, 837, 838, 840, 842, 844, 845, 846, 847, 862, 863, 874, 881, 884, 886, 888, 889, 890, 891, 893, 899, 900, 901, 902, 906, 907, 908, 918, 919, 923, 925, 928, 934, 936, 945, 952, 958, 961, 962, 963, 974, 978, 984, 988, 993, 994, 998, 999, 1000, 1011, 1019, 1024, 1025, 1029, 1031, 1044, 1045, 1048, 1049, 1050, 1055, 1061, 1062, 1078, 1079, 1095, 1099, 1100, 1109, 1113, 1122, 1128, 1133, 1135, 1140, 1147, 1148, 1150, 1152, 1156, 1157, 1164, 1165, 1168, 1171], "onlin": [5, 11, 23, 156, 163, 165, 166, 178, 183, 186, 353], "gehalten": [5, 8, 147, 174, 186, 195, 205, 214, 230, 242, 1147, 1152, 1163], "klarerweis": 5, "tagsatz": 5, "anf\u00e4llt": 5, "schulung": [5, 23, 146, 159, 160, 174, 183, 186, 353, 354, 758, 761, 766, 771, 780, 788, 966, 969, 973, 1001, 1003, 1023, 1099, 1114, 1127, 1147, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1158, 1159, 1160, 1168], "980": [5, 223, 226, 239, 246, 249, 660], "reisekosten": [5, 23], "auto": [5, 120, 148, 160, 168, 172, 178, 254, 316, 462, 467, 491, 492, 496, 497, 500, 501, 502, 555, 563, 572, 573, 596, 618, 619, 621, 662, 663, 670, 677, 680, 682, 685, 688, 689, 690, 692, 693, 694, 695, 696, 700, 702, 703, 704, 705, 710, 712, 714, 719, 720, 721, 723, 734, 739, 741, 743, 744, 745, 749, 750, 751, 752, 753, 754, 755, 802, 973, 1153, 1164, 1169], "42": [5, 7, 21, 42, 61, 120, 122, 168, 170, 171, 173, 184, 194, 199, 201, 204, 207, 210, 215, 216, 220, 223, 226, 231, 233, 236, 239, 243, 246, 249, 252, 261, 264, 271, 281, 285, 291, 303, 307, 313, 327, 330, 331, 377, 403, 405, 406, 408, 411, 419, 424, 426, 432, 446, 456, 461, 465, 482, 484, 513, 514, 518, 519, 520, 521, 522, 523, 524, 536, 543, 555, 562, 570, 571, 575, 577, 603, 606, 609, 616, 640, 644, 664, 665, 673, 675, 703, 710, 723, 724, 734, 736, 739, 741, 743, 745, 749, 750, 751, 765, 847, 884, 893, 901, 947, 955, 969, 976, 977, 978, 998, 999, 1000, 1007, 1010, 1028, 1030, 1031, 1040, 1041, 1042, 1045, 1064, 1145], "per": [5, 50, 78, 157, 184, 302, 326, 346, 376, 415, 420, 509, 739, 792, 798, 812, 816, 821, 822, 834, 838, 858, 884, 951, 960, 977, 1146, 1171], "kilomet": [5, 153, 702, 862], "anderweitig": 5, "aufwand": [5, 23], "\u00fcbernachtung": [5, 159], "sampl": [6, 114, 122, 151, 162, 208, 211, 212, 224, 228, 234, 240, 243, 260, 276, 302, 321, 438, 506, 732, 949, 969, 1052], "log": [6, 96, 120, 148, 156, 157, 166, 173, 178, 181, 190, 210, 220, 226, 236, 239, 267, 269, 281, 298, 334, 447, 448, 467, 724, 765, 802, 831, 838, 840, 862, 899, 901, 909, 913, 915, 918, 919, 1099, 1102, 1128, 1142], "record": [6, 29, 40, 53, 131, 146, 147, 155, 157, 158, 184, 195, 196, 202, 212, 217, 224, 240, 260, 275, 295, 298, 326, 338, 437, 438, 755, 901, 995, 1000, 1015, 1057, 1059, 1078, 1089, 1090, 1091, 1092, 1093, 1095, 1098, 1108, 1163], "grundlagen": [6, 8, 23, 144, 245, 284, 352, 1150, 1152, 1159, 1160, 1163, 1164, 1166, 1167, 1170], "4": [6, 7, 8, 32, 61, 63, 106, 109, 112, 143, 148, 150, 154, 156, 162, 170, 171, 172, 173, 174, 177, 184, 189, 191, 195, 196, 199, 201, 204, 207, 210, 211, 215, 216, 217, 218, 220, 221, 223, 224, 226, 231, 233, 234, 236, 239, 243, 246, 248, 249, 252, 260, 261, 264, 268, 269, 271, 275, 281, 284, 285, 290, 291, 296, 303, 307, 313, 328, 329, 330, 332, 335, 348, 349, 352, 366, 382, 402, 405, 408, 425, 429, 432, 433, 443, 444, 446, 464, 467, 506, 510, 511, 512, 513, 514, 516, 518, 519, 521, 537, 539, 555, 562, 564, 572, 573, 576, 578, 579, 580, 581, 582, 594, 595, 603, 613, 663, 665, 667, 682, 683, 684, 686, 688, 697, 699, 703, 710, 712, 723, 736, 753, 802, 803, 840, 888, 891, 893, 901, 906, 907, 908, 930, 943, 960, 964, 996, 998, 999, 1006, 1008, 1012, 1019, 1022, 1031, 1032, 1037, 1040, 1041, 1042, 1046, 1047, 1051, 1052, 1054, 1055, 1057, 1061, 1074, 1078, 1089, 1091, 1095, 1097, 1100, 1104, 1105, 1107, 1113, 1117, 1118, 1119, 1121, 1122, 1124, 1128, 1133, 1148, 1163], "2021": [6, 10, 23, 132, 144, 161, 163, 199, 201, 210, 216, 217, 220, 225, 228, 251, 332, 334, 348, 349, 352, 538, 681, 706, 740, 858, 862, 884, 885, 962, 976, 990, 1026], "templat": [6, 65, 74, 106, 178, 213, 254, 276, 281, 316, 337, 338, 446, 508, 527, 560, 561, 605, 611, 615, 616, 623, 624, 625, 627, 645, 652, 653, 654, 655, 656, 657, 664, 670, 675, 678, 679, 680, 681, 685, 686, 688, 691, 718, 722, 724, 732, 734, 739, 740, 741, 743, 745, 753, 754, 755, 947, 1152, 1154], "descript": [6, 8, 31, 39, 106, 112, 135, 153, 154, 166, 167, 183, 187, 188, 190, 191, 192, 193, 198, 213, 218, 220, 224, 226, 229, 236, 239, 243, 255, 256, 259, 293, 294, 309, 310, 354, 447, 457, 465, 475, 476, 477, 478, 479, 483, 493, 517, 712, 719, 720, 721, 730, 732, 734, 753, 802, 814, 826, 828, 837, 862, 864, 884, 891, 894, 895, 908, 920, 928, 978, 990, 1041, 1055, 1078, 1135, 1156], "sidebar": [6, 17, 65, 148, 814], "metadata": [6, 28, 39, 147, 166, 264, 834, 837, 907, 910, 936, 998, 1158], "angebot": [6, 165], "hous": [6, 32, 151], "meiner": [6, 23, 240, 353, 1148], "person": [6, 23, 158, 188, 207, 210, 249, 251, 253, 260, 264, 271, 302, 303, 342, 427, 462, 463, 466, 491, 575, 634, 740, 915, 1013, 1014, 1016, 1017, 1018, 1020, 1021, 1095, 1117, 1118, 1119, 1121, 1122, 1123, 1124, 1133, 1134], "schwerpunk": 6, "schulungsstil": 6, "preis": 6, "einr\u00fcckung": [7, 196, 204], "wichtig": [7, 204, 254, 335, 340, 1171], "1": [7, 32, 39, 42, 50, 61, 63, 72, 74, 87, 106, 109, 110, 111, 112, 130, 133, 143, 144, 147, 152, 154, 157, 158, 160, 161, 162, 166, 167, 169, 170, 171, 172, 173, 174, 179, 180, 181, 184, 186, 189, 196, 199, 200, 201, 204, 207, 210, 211, 215, 216, 217, 220, 223, 226, 229, 231, 233, 236, 239, 243, 246, 249, 251, 252, 256, 261, 264, 268, 269, 271, 275, 281, 285, 291, 294, 296, 299, 303, 307, 310, 313, 320, 321, 327, 328, 329, 330, 331, 332, 333, 335, 338, 340, 348, 349, 352, 366, 367, 389, 396, 405, 409, 411, 419, 436, 443, 444, 445, 447, 448, 449, 450, 451, 453, 454, 455, 456, 458, 460, 461, 481, 482, 488, 498, 506, 507, 510, 514, 516, 518, 519, 520, 522, 526, 528, 529, 530, 531, 532, 533, 534, 539, 542, 545, 548, 551, 554, 555, 557, 562, 563, 564, 570, 572, 576, 578, 579, 580, 581, 582, 587, 592, 594, 600, 601, 602, 603, 604, 609, 613, 625, 627, 635, 637, 640, 644, 654, 660, 661, 663, 664, 665, 667, 670, 671, 673, 675, 677, 679, 680, 682, 684, 685, 686, 688, 689, 690, 697, 703, 705, 708, 709, 710, 712, 714, 715, 718, 719, 721, 722, 723, 732, 736, 739, 741, 742, 743, 745, 751, 753, 755, 760, 765, 771, 775, 780, 802, 819, 828, 829, 830, 833, 834, 835, 837, 838, 839, 840, 841, 844, 845, 846, 847, 848, 852, 854, 856, 858, 859, 863, 864, 865, 881, 884, 885, 886, 887, 888, 890, 891, 893, 894, 895, 897, 899, 906, 907, 909, 910, 918, 919, 920, 922, 924, 925, 926, 928, 929, 930, 932, 933, 934, 935, 940, 942, 943, 955, 957, 958, 960, 962, 964, 965, 966, 969, 972, 973, 975, 976, 979, 988, 990, 991, 992, 993, 995, 996, 998, 999, 1000, 1003, 1004, 1006, 1008, 1010, 1012, 1013, 1019, 1020, 1022, 1024, 1025, 1026, 1027, 1029, 1032, 1033, 1034, 1035, 1036, 1039, 1041, 1042, 1047, 1052, 1054, 1055, 1057, 1062, 1065, 1068, 1078, 1082, 1085, 1088, 1089, 1091, 1095, 1096, 1097, 1103, 1104, 1105, 1106, 1112, 1117, 1118, 1119, 1121, 1122, 1123, 1127, 1128, 1133, 1134, 1135, 1140, 1144, 1147, 1153, 1155, 1156, 1160, 1163, 1165, 1170], "i": [7, 12, 13, 14, 17, 21, 27, 28, 29, 30, 31, 32, 38, 39, 40, 41, 42, 43, 49, 53, 54, 55, 57, 59, 61, 62, 63, 65, 66, 68, 69, 78, 80, 82, 84, 85, 87, 89, 90, 91, 97, 98, 99, 100, 104, 106, 107, 108, 109, 110, 111, 112, 114, 115, 119, 122, 123, 125, 126, 130, 131, 136, 138, 139, 144, 145, 147, 148, 150, 151, 154, 155, 156, 157, 158, 161, 162, 166, 167, 168, 171, 172, 173, 174, 175, 178, 179, 180, 181, 183, 184, 187, 188, 189, 190, 191, 192, 193, 194, 199, 201, 202, 203, 204, 207, 208, 211, 212, 213, 215, 216, 218, 221, 222, 223, 224, 227, 228, 229, 230, 232, 233, 234, 237, 238, 240, 241, 242, 243, 245, 247, 250, 251, 252, 256, 257, 258, 260, 261, 263, 264, 266, 267, 268, 269, 270, 271, 273, 275, 276, 277, 278, 279, 280, 282, 283, 284, 286, 287, 289, 291, 293, 295, 296, 298, 299, 301, 302, 303, 305, 306, 307, 309, 311, 312, 313, 315, 319, 320, 321, 322, 323, 324, 325, 326, 330, 331, 332, 335, 338, 340, 341, 343, 346, 348, 349, 353, 354, 356, 357, 358, 359, 360, 366, 367, 368, 370, 372, 373, 374, 376, 377, 380, 381, 382, 384, 385, 387, 388, 389, 392, 393, 394, 395, 396, 397, 399, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 457, 458, 460, 462, 464, 465, 466, 467, 470, 473, 474, 481, 482, 484, 485, 486, 487, 488, 501, 503, 504, 506, 508, 509, 510, 511, 512, 513, 514, 517, 518, 519, 520, 521, 522, 525, 527, 532, 536, 538, 543, 546, 549, 552, 555, 560, 561, 563, 564, 565, 566, 567, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 587, 590, 591, 595, 596, 597, 598, 599, 600, 601, 603, 604, 609, 613, 616, 617, 618, 620, 622, 625, 627, 632, 634, 635, 640, 641, 642, 644, 646, 647, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 662, 664, 665, 667, 668, 670, 671, 672, 674, 677, 682, 683, 684, 685, 686, 688, 699, 700, 703, 704, 708, 709, 712, 713, 714, 718, 720, 721, 722, 724, 726, 730, 732, 733, 734, 735, 739, 740, 741, 743, 749, 752, 753, 754, 755, 756, 757, 758, 761, 763, 766, 768, 770, 771, 773, 777, 780, 784, 788, 790, 792, 794, 796, 798, 800, 802, 803, 804, 809, 810, 812, 814, 815, 816, 818, 819, 827, 828, 829, 830, 831, 832, 834, 835, 836, 839, 840, 841, 842, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 859, 861, 862, 863, 864, 865, 866, 867, 869, 870, 873, 874, 876, 877, 878, 882, 884, 886, 889, 891, 894, 895, 898, 899, 900, 901, 902, 904, 905, 906, 907, 909, 910, 911, 912, 913, 914, 915, 917, 922, 929, 932, 934, 936, 939, 940, 942, 943, 944, 945, 946, 947, 949, 950, 952, 953, 956, 959, 960, 961, 962, 963, 964, 969, 970, 973, 974, 977, 978, 979, 980, 984, 986, 987, 988, 989, 990, 991, 992, 994, 996, 997, 998, 999, 1001, 1002, 1003, 1004, 1007, 1008, 1010, 1011, 1012, 1013, 1014, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1054, 1055, 1057, 1058, 1059, 1060, 1062, 1069, 1072, 1075, 1078, 1079, 1080, 1082, 1083, 1084, 1085, 1087, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1108, 1109, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1133, 1134, 1135, 1136, 1138, 1140, 1142, 1146, 1148, 1150, 1153, 1155, 1156, 1157, 1158, 1166, 1167, 1168, 1170], "41": [7, 156, 161, 172, 173, 184, 194, 199, 201, 204, 207, 210, 212, 215, 216, 220, 223, 226, 231, 233, 239, 243, 246, 249, 252, 261, 264, 268, 271, 281, 285, 291, 303, 307, 313, 327, 329, 330, 467, 723, 753, 792, 884, 907, 1012, 1055, 1057, 1104, 1135], "print": [7, 63, 147, 170, 171, 173, 174, 184, 187, 189, 190, 194, 199, 201, 202, 203, 204, 207, 210, 211, 215, 216, 217, 220, 223, 224, 226, 231, 233, 236, 239, 242, 243, 246, 249, 252, 261, 264, 268, 269, 271, 281, 285, 291, 296, 302, 303, 307, 313, 327, 328, 329, 330, 331, 361, 365, 367, 436, 447, 591, 618, 641, 688, 702, 710, 712, 839, 840, 846, 862, 864, 865, 906, 954, 964, 995, 998, 999, 1000, 1002, 1003, 1004, 1008, 1010, 1012, 1013, 1016, 1018, 1021, 1026, 1027, 1028, 1029, 1034, 1035, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1050, 1051, 1065, 1067, 1077, 1078, 1079, 1081, 1082, 1088, 1103, 1108, 1112, 1116, 1125], "ja": [7, 23, 160, 184, 201, 204, 207, 220, 223, 252], "basta": [7, 151, 204, 1031], "2": [7, 29, 32, 42, 50, 61, 63, 72, 104, 106, 112, 115, 144, 147, 152, 154, 160, 161, 162, 168, 170, 171, 172, 173, 174, 185, 189, 195, 196, 199, 200, 204, 207, 210, 211, 215, 216, 217, 220, 225, 226, 231, 233, 236, 237, 239, 243, 246, 249, 251, 252, 261, 264, 268, 269, 271, 275, 281, 285, 291, 294, 296, 299, 303, 307, 310, 313, 321, 327, 328, 329, 330, 331, 332, 335, 336, 337, 338, 344, 352, 365, 366, 378, 384, 385, 405, 409, 436, 442, 443, 444, 445, 448, 449, 450, 454, 455, 456, 457, 458, 460, 482, 506, 507, 510, 516, 518, 519, 522, 526, 528, 529, 530, 531, 533, 534, 538, 553, 555, 562, 563, 564, 570, 572, 573, 576, 578, 579, 580, 581, 582, 587, 592, 596, 600, 601, 602, 603, 604, 609, 613, 617, 618, 619, 620, 625, 635, 640, 660, 663, 664, 665, 667, 670, 673, 675, 677, 678, 680, 682, 685, 686, 688, 698, 699, 702, 703, 708, 709, 710, 712, 714, 715, 718, 719, 720, 721, 722, 723, 732, 734, 736, 742, 753, 755, 761, 802, 829, 830, 837, 840, 841, 844, 845, 846, 858, 881, 884, 887, 888, 893, 895, 897, 899, 903, 906, 907, 919, 922, 924, 925, 926, 928, 929, 932, 933, 934, 935, 936, 938, 940, 942, 943, 955, 957, 960, 962, 964, 975, 976, 991, 993, 995, 996, 998, 999, 1001, 1004, 1006, 1008, 1012, 1016, 1019, 1020, 1022, 1023, 1024, 1025, 1026, 1027, 1029, 1032, 1033, 1034, 1036, 1041, 1042, 1047, 1052, 1054, 1056, 1057, 1058, 1059, 1061, 1065, 1068, 1078, 1082, 1085, 1088, 1089, 1090, 1091, 1092, 1095, 1096, 1097, 1098, 1100, 1103, 1104, 1105, 1110, 1117, 1118, 1119, 1121, 1122, 1123, 1127, 1128, 1133, 1134, 1135, 1139, 1140, 1147, 1155, 1156, 1163, 1166, 1167, 1169, 1170, 1171], "1234": [7, 32, 204, 207, 217, 226, 231, 233, 285, 313, 330, 917, 925, 974, 1031], "3": [7, 32, 61, 63, 106, 109, 110, 111, 119, 133, 147, 156, 161, 162, 166, 168, 170, 171, 172, 173, 174, 181, 183, 184, 189, 195, 196, 199, 200, 201, 204, 207, 210, 211, 215, 217, 219, 220, 225, 226, 229, 231, 233, 236, 239, 243, 246, 248, 250, 251, 252, 254, 261, 264, 268, 269, 271, 275, 281, 285, 291, 296, 298, 299, 304, 307, 313, 328, 329, 330, 331, 335, 336, 337, 340, 352, 366, 378, 379, 380, 393, 402, 403, 424, 425, 433, 436, 438, 443, 444, 445, 448, 453, 464, 481, 482, 506, 507, 511, 514, 516, 517, 518, 519, 521, 522, 523, 524, 528, 529, 530, 531, 533, 534, 536, 538, 555, 562, 564, 570, 571, 572, 574, 575, 576, 578, 579, 580, 581, 582, 587, 590, 591, 592, 593, 594, 595, 596, 597, 599, 600, 601, 602, 603, 604, 609, 625, 635, 640, 642, 663, 664, 665, 667, 675, 677, 678, 682, 683, 684, 685, 686, 688, 703, 708, 710, 712, 714, 719, 720, 722, 723, 736, 738, 753, 760, 766, 802, 840, 845, 859, 862, 884, 886, 888, 893, 895, 901, 903, 906, 907, 908, 910, 919, 920, 922, 924, 925, 926, 929, 933, 934, 935, 943, 944, 945, 949, 955, 957, 960, 963, 964, 965, 968, 970, 973, 974, 976, 977, 978, 996, 998, 999, 1001, 1004, 1006, 1008, 1012, 1019, 1022, 1023, 1024, 1025, 1026, 1029, 1030, 1032, 1034, 1036, 1037, 1040, 1041, 1042, 1047, 1048, 1049, 1051, 1054, 1055, 1057, 1074, 1078, 1082, 1088, 1089, 1091, 1095, 1097, 1100, 1103, 1104, 1105, 1108, 1111, 1117, 1118, 1119, 1121, 1122, 1124, 1128, 1133, 1134, 1135, 1142, 1147, 1149, 1151, 1153, 1156, 1159, 1163], "decim": [7, 204, 239, 243, 285, 313, 321, 358, 444, 1031, 1045], "5": [7, 32, 61, 63, 120, 122, 126, 143, 147, 154, 156, 162, 172, 173, 174, 179, 182, 185, 189, 195, 196, 199, 201, 202, 204, 207, 208, 210, 211, 214, 216, 217, 218, 220, 221, 223, 224, 226, 231, 233, 234, 236, 239, 243, 246, 248, 249, 251, 252, 256, 260, 261, 264, 268, 271, 275, 281, 284, 285, 290, 291, 296, 299, 303, 307, 313, 321, 327, 329, 330, 335, 340, 348, 349, 352, 358, 360, 365, 382, 384, 393, 420, 425, 429, 438, 443, 447, 450, 461, 464, 467, 482, 490, 506, 509, 511, 516, 517, 519, 520, 521, 522, 523, 524, 536, 537, 542, 555, 562, 563, 564, 570, 574, 575, 578, 579, 581, 582, 603, 613, 640, 660, 664, 667, 668, 670, 671, 677, 679, 680, 682, 697, 698, 710, 712, 719, 720, 721, 723, 736, 745, 753, 775, 780, 803, 831, 833, 884, 888, 893, 899, 906, 907, 908, 924, 926, 934, 943, 960, 976, 988, 996, 998, 999, 1002, 1008, 1012, 1019, 1025, 1030, 1031, 1032, 1036, 1037, 1039, 1042, 1045, 1047, 1051, 1052, 1055, 1078, 1082, 1089, 1091, 1095, 1097, 1100, 1104, 1105, 1108, 1113, 1124, 1128, 1133, 1135, 1140, 1144, 1150, 1152, 1157, 1158, 1163, 1164], "hexadecim": [7, 204, 243, 377, 907, 1031, 1044, 1045], "16": [7, 63, 147, 156, 158, 159, 161, 170, 172, 173, 178, 179, 184, 189, 194, 199, 201, 204, 207, 210, 215, 216, 220, 223, 226, 231, 233, 236, 239, 243, 246, 249, 252, 261, 265, 268, 271, 275, 281, 285, 291, 296, 303, 307, 313, 327, 328, 329, 330, 331, 335, 340, 341, 352, 376, 420, 427, 438, 445, 582, 640, 719, 780, 792, 884, 901, 906, 908, 919, 924, 925, 933, 942, 976, 978, 990, 991, 996, 1003, 1006, 1031, 1057, 1104, 1105, 1135], "7": [7, 32, 42, 63, 148, 151, 154, 156, 161, 168, 171, 172, 173, 174, 184, 189, 196, 199, 201, 202, 204, 207, 208, 210, 214, 216, 217, 218, 220, 221, 223, 226, 231, 233, 236, 239, 243, 246, 248, 249, 251, 252, 260, 261, 264, 268, 269, 271, 275, 281, 285, 290, 291, 296, 299, 303, 307, 313, 320, 329, 330, 335, 340, 341, 352, 366, 370, 384, 411, 420, 444, 445, 448, 453, 461, 481, 482, 506, 509, 514, 518, 519, 521, 522, 523, 524, 536, 543, 551, 555, 562, 570, 571, 575, 577, 578, 579, 581, 602, 606, 609, 618, 635, 644, 664, 672, 697, 698, 699, 703, 710, 736, 749, 750, 751, 833, 834, 845, 846, 862, 884, 893, 906, 907, 908, 925, 933, 957, 960, 969, 970, 973, 974, 977, 978, 999, 1002, 1008, 1012, 1025, 1030, 1031, 1032, 1035, 1037, 1039, 1040, 1055, 1067, 1085, 1088, 1100, 1104, 1105, 1108, 1113, 1124, 1133], "0x1234": [7, 204, 1031], "4660": [7, 204, 226, 1031], "8": [7, 32, 63, 109, 147, 153, 154, 158, 162, 170, 171, 172, 173, 174, 178, 183, 184, 187, 189, 196, 199, 201, 202, 204, 207, 208, 210, 211, 216, 217, 218, 220, 221, 223, 224, 226, 230, 231, 233, 236, 239, 243, 246, 248, 249, 252, 260, 261, 264, 267, 268, 271, 275, 281, 285, 288, 290, 291, 296, 299, 302, 303, 307, 313, 327, 328, 329, 330, 335, 352, 376, 420, 432, 438, 444, 448, 450, 453, 481, 513, 548, 555, 562, 567, 570, 575, 579, 581, 582, 671, 719, 736, 753, 775, 798, 802, 833, 839, 847, 884, 886, 893, 899, 900, 901, 902, 906, 907, 976, 993, 999, 1002, 1008, 1031, 1032, 1037, 1045, 1050, 1054, 1055, 1061, 1097, 1100, 1104, 1105, 1111, 1128, 1135], "bin\u00e4r": [7, 23, 204, 207], "9": [7, 8, 32, 61, 63, 112, 147, 152, 156, 159, 166, 170, 171, 172, 173, 174, 182, 184, 186, 189, 190, 191, 192, 193, 196, 197, 199, 201, 202, 203, 204, 205, 207, 208, 210, 211, 212, 214, 216, 217, 218, 220, 223, 224, 226, 231, 233, 236, 239, 240, 243, 246, 249, 251, 252, 261, 264, 267, 268, 271, 275, 276, 278, 281, 285, 291, 296, 303, 307, 313, 327, 328, 330, 331, 335, 340, 352, 358, 360, 366, 375, 378, 436, 444, 461, 481, 490, 509, 555, 557, 573, 582, 672, 682, 710, 736, 780, 858, 881, 884, 906, 907, 908, 924, 960, 996, 1006, 1025, 1026, 1032, 1037, 1039, 1047, 1051, 1055, 1062, 1067, 1104, 1105, 1113, 1128, 1133], "0b100110": [7, 204, 233, 1031], "38": [7, 23, 147, 154, 161, 173, 184, 194, 199, 201, 204, 207, 210, 215, 216, 220, 223, 226, 231, 233, 236, 239, 243, 246, 249, 252, 261, 264, 268, 271, 281, 285, 291, 303, 307, 313, 327, 330, 331, 465, 481, 506, 573, 719, 753, 884, 979, 988, 1104, 1105], "arithmet": [7, 108, 171, 204, 209, 229, 232, 244, 259, 276, 335, 359, 373, 380, 381, 387, 388, 397, 403, 404, 410, 414, 417, 419, 420, 421, 430, 434, 439, 440, 459, 468, 480, 481, 494, 508, 556, 560, 590, 594, 595, 598, 603, 660, 662, 700, 709, 710, 752, 754, 755], "man": [7, 32, 37, 114, 151, 153, 159, 160, 168, 174, 178, 184, 186, 194, 195, 201, 204, 207, 212, 214, 216, 227, 233, 240, 243, 267, 288, 307, 335, 340, 342, 353, 450, 543, 552, 564, 726, 753, 761, 780, 828, 829, 830, 833, 834, 837, 844, 845, 846, 847, 848, 852, 854, 856, 859, 863, 864, 865, 881, 884, 885, 887, 888, 890, 891, 893, 894, 908, 915, 918, 919, 920, 922, 924, 925, 926, 928, 929, 931, 932, 933, 934, 935, 938, 944, 945, 947, 949, 951, 952, 955, 957, 963, 970, 973, 974, 976, 992, 993, 1148, 1149, 1150, 1152, 1160, 1163, 1165, 1166, 1167, 1169, 1170, 1171], "behaviour": [7, 204, 212, 788, 934, 1050], "erzwingen": [7, 184, 196, 204], "floor": [7, 38, 196, 204, 207, 211, 223, 224, 226, 231, 233, 239, 243, 313, 330, 1019, 1031], "divis": [7, 36, 38, 196, 204, 207, 223, 226, 231, 233, 239, 330, 358, 379, 481, 482, 496, 1019, 1031, 1085], "modul": [7, 12, 21, 23, 29, 65, 134, 141, 147, 154, 156, 161, 173, 179, 181, 183, 186, 187, 188, 189, 190, 197, 198, 204, 207, 211, 213, 218, 220, 221, 224, 226, 227, 230, 231, 233, 234, 236, 237, 239, 240, 242, 243, 245, 246, 250, 251, 254, 260, 262, 263, 264, 269, 271, 279, 280, 283, 285, 289, 290, 293, 294, 295, 298, 303, 305, 307, 309, 310, 311, 312, 313, 319, 320, 321, 330, 336, 337, 338, 340, 346, 353, 398, 442, 444, 448, 449, 455, 457, 458, 470, 659, 700, 754, 755, 758, 759, 761, 762, 764, 766, 767, 768, 769, 771, 772, 779, 782, 783, 787, 793, 798, 799, 803, 804, 806, 811, 814, 817, 820, 823, 898, 899, 906, 908, 997, 998, 999, 1000, 1001, 1004, 1012, 1013, 1015, 1019, 1020, 1024, 1025, 1028, 1029, 1040, 1041, 1042, 1046, 1048, 1051, 1052, 1053, 1056, 1057, 1058, 1059, 1093, 1094, 1095, 1096, 1098, 1099, 1101, 1102, 1106, 1109, 1110, 1112, 1113, 1114, 1115, 1116, 1121, 1122, 1127, 1128, 1130, 1132, 1133, 1136, 1137, 1143, 1155, 1157, 1158, 1164, 1168, 1171], "restklassen": [7, 204], "rest": [7, 17, 40, 158, 160, 170, 194, 204, 207, 211, 213, 231, 239, 271, 285, 303, 306, 330, 356, 366, 391, 445, 593, 594, 655, 712, 790, 841, 902, 932, 960, 1019, 1022, 1046, 1075, 1079, 1108, 1123, 1155, 1171], "14": [7, 63, 144, 148, 161, 172, 173, 184, 189, 196, 199, 201, 203, 204, 207, 210, 211, 215, 216, 220, 223, 224, 226, 231, 233, 236, 239, 243, 246, 249, 251, 252, 255, 261, 264, 268, 271, 275, 281, 285, 291, 302, 303, 305, 307, 313, 319, 327, 328, 330, 331, 332, 352, 444, 455, 456, 458, 467, 561, 635, 659, 671, 710, 712, 720, 722, 753, 844, 847, 859, 884, 886, 906, 907, 908, 910, 925, 934, 964, 976, 977, 978, 997, 1099, 1104, 1105, 1152, 1163], "oper": [7, 29, 33, 34, 35, 38, 73, 78, 80, 97, 108, 126, 130, 150, 151, 153, 157, 169, 170, 172, 175, 178, 183, 187, 188, 189, 190, 192, 196, 201, 204, 209, 210, 211, 212, 213, 218, 220, 224, 225, 228, 231, 233, 234, 238, 241, 244, 247, 249, 252, 254, 264, 271, 276, 277, 278, 279, 280, 281, 284, 285, 301, 305, 306, 308, 313, 321, 335, 340, 358, 366, 376, 382, 397, 402, 403, 404, 408, 410, 411, 414, 417, 419, 421, 423, 426, 430, 432, 434, 439, 440, 462, 463, 482, 502, 508, 520, 525, 527, 555, 560, 561, 562, 567, 568, 572, 575, 579, 580, 581, 582, 583, 586, 587, 589, 595, 603, 604, 605, 611, 615, 616, 619, 624, 627, 628, 640, 645, 652, 653, 654, 655, 656, 657, 660, 662, 668, 670, 671, 673, 677, 682, 684, 685, 686, 688, 691, 695, 698, 700, 702, 703, 704, 705, 710, 712, 719, 720, 723, 730, 734, 736, 744, 745, 746, 752, 753, 754, 755, 764, 769, 772, 773, 779, 783, 793, 802, 804, 806, 811, 817, 818, 820, 823, 829, 830, 833, 862, 868, 893, 894, 898, 906, 907, 908, 919, 924, 925, 926, 927, 928, 929, 940, 943, 947, 949, 969, 973, 977, 990, 993, 1001, 1004, 1011, 1012, 1015, 1032, 1036, 1040, 1045, 1046, 1051, 1065, 1098, 1100, 1109, 1118, 1140, 1145, 1152, 1158], "preced": [7, 35, 38, 204, 226, 231, 239, 244, 247, 358, 364, 379, 380, 388, 393, 397, 402, 404, 408, 410, 412, 414, 417, 421, 430, 434, 439, 440, 591, 595, 662, 700, 752, 754, 755, 862, 911], "implizit": [7, 184, 204, 281, 1150, 1167], "klammerung": [7, 204, 890], "durch": [7, 159, 160, 168, 174, 178, 186, 194, 204, 236, 246, 335, 340, 353, 890, 1147, 1148, 1150], "pr\u00e4zedenz": [7, 184, 196, 204], "6666666666666665": [7, 204], "frage": [7, 160, 170, 174, 201, 204, 207, 213, 233, 353, 1157, 1164, 1171], "6665": [7, 204], "6667": [7, 204], "ieee": [7, 204], "floatingpoint": [7, 204, 379, 380, 503, 802, 1077], "representaion": [7, 204], "true": [7, 35, 38, 50, 58, 63, 110, 111, 152, 154, 156, 161, 170, 171, 172, 173, 183, 184, 189, 194, 199, 201, 202, 204, 207, 210, 211, 215, 216, 220, 223, 224, 226, 231, 233, 236, 237, 239, 243, 246, 249, 252, 261, 264, 268, 271, 275, 281, 285, 291, 296, 303, 307, 313, 321, 327, 330, 364, 380, 381, 393, 405, 408, 448, 506, 570, 578, 603, 631, 642, 644, 665, 688, 689, 690, 691, 693, 694, 695, 696, 721, 730, 732, 734, 736, 753, 790, 792, 822, 835, 862, 875, 943, 949, 954, 955, 958, 960, 961, 969, 970, 973, 982, 997, 1003, 1004, 1008, 1010, 1011, 1012, 1013, 1016, 1019, 1032, 1033, 1035, 1036, 1037, 1040, 1046, 1049, 1050, 1113, 1117, 1119, 1124, 1139, 1140, 1142], "zahlen": [7, 194, 195, 204, 1150, 1163], "vergleichen": [7, 184, 204], "21": [7, 97, 99, 102, 105, 106, 114, 158, 161, 172, 173, 184, 189, 192, 194, 199, 201, 204, 207, 210, 215, 216, 220, 223, 226, 231, 233, 239, 243, 246, 249, 252, 261, 264, 268, 271, 275, 281, 285, 291, 296, 303, 307, 313, 330, 334, 352, 444, 753, 792, 844, 884, 907, 908, 919, 990, 1104, 1105], "ab": [7, 23, 32, 159, 161, 184, 194, 195, 204, 239, 243, 246, 261, 264, 285, 313, 562, 564, 572, 581, 667, 723, 1105, 1157, 1163], "0001": [7, 154, 172, 204], "aber": [7, 23, 37, 160, 168, 170, 174, 184, 194, 195, 199, 202, 204, 233, 236, 239, 291, 353, 890, 1148, 1150, 1152, 1159, 1166, 1170, 1171], "unendlich": [7, 8, 195, 204, 205], "lang": [7, 156, 159, 160, 169, 204, 326, 327, 344, 353, 447, 1149, 1165, 1170], "22": [7, 63, 97, 105, 106, 114, 153, 156, 161, 163, 172, 173, 184, 189, 191, 194, 199, 200, 201, 204, 207, 210, 211, 215, 216, 220, 223, 224, 226, 231, 233, 239, 243, 246, 249, 252, 261, 264, 268, 271, 275, 281, 285, 292, 295, 296, 298, 303, 313, 327, 329, 330, 331, 352, 753, 847, 884, 908, 909, 917, 918, 933, 977, 978, 1062, 1099, 1104, 1105, 1164], "1000000": [7, 153, 184, 204, 281, 330, 436, 899, 907], "23": [7, 63, 114, 154, 161, 162, 163, 169, 172, 173, 174, 184, 189, 191, 194, 199, 201, 204, 207, 210, 215, 216, 220, 223, 226, 231, 233, 236, 237, 239, 242, 243, 246, 252, 261, 264, 268, 271, 275, 281, 285, 291, 296, 303, 307, 313, 352, 408, 444, 447, 688, 847, 884, 906, 907, 988, 1057, 1062, 1104, 1105, 1135, 1142], "32": [7, 161, 162, 168, 170, 173, 184, 189, 194, 199, 201, 204, 207, 210, 213, 215, 216, 220, 223, 226, 231, 233, 236, 239, 243, 246, 249, 252, 261, 264, 268, 271, 275, 281, 285, 291, 303, 307, 313, 330, 358, 360, 376, 381, 420, 461, 467, 490, 506, 519, 798, 827, 833, 858, 884, 900, 902, 977, 978, 988, 1055], "4294967295": [7, 204, 223, 231, 239], "24": [7, 63, 97, 105, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 130, 154, 161, 169, 172, 173, 174, 184, 189, 194, 199, 201, 204, 207, 210, 215, 216, 220, 223, 226, 231, 233, 236, 239, 243, 246, 249, 252, 261, 264, 268, 271, 275, 285, 291, 296, 303, 313, 327, 328, 330, 331, 352, 455, 653, 655, 677, 719, 720, 755, 802, 829, 830, 884, 906, 993, 1104, 1105], "64": [7, 153, 156, 161, 184, 189, 194, 199, 201, 204, 207, 210, 212, 213, 216, 220, 223, 226, 231, 233, 236, 239, 243, 246, 249, 252, 261, 264, 271, 281, 285, 291, 303, 307, 313, 330, 335, 340, 364, 376, 381, 405, 420, 426, 429, 455, 798, 940, 943, 966, 973, 976, 993, 1057, 1104, 1148], "18446744073709551615": [7, 184, 194, 204, 207, 220, 223, 231, 233, 239, 243, 246, 249, 271, 303, 330], "overflow": [7, 42, 44, 50, 153, 194, 204, 220, 223, 224, 226, 229, 230, 236, 239, 246, 249, 264, 271, 281, 285, 307, 313, 381, 383, 419, 428, 839], "wenn": [7, 23, 159, 160, 165, 170, 178, 184, 186, 194, 195, 201, 204, 240, 246, 281, 889, 1147, 1149, 1150, 1157, 1159, 1160, 1163, 1166, 1171], "verwendet": [7, 23, 174, 178, 184, 204, 246, 1148, 1150, 1160, 1164, 1166, 1171], "wert": [7, 23, 195, 196, 201, 204, 236, 239, 243, 246, 252, 281, 285, 291, 1163, 1171], "w\u00e4re": [7, 168, 194, 204, 240, 1152, 1159], "dort": [7, 64, 160, 168, 170, 178, 194, 195, 204, 353, 1163, 1169, 1171], "25": [7, 63, 97, 161, 162, 172, 173, 174, 184, 189, 194, 199, 201, 204, 207, 210, 215, 216, 220, 223, 226, 231, 233, 236, 237, 239, 242, 243, 246, 249, 251, 252, 261, 264, 268, 271, 275, 281, 285, 291, 298, 303, 307, 313, 321, 330, 331, 352, 554, 555, 677, 714, 782, 884, 908, 976, 1002, 1045, 1089, 1091, 1095, 1097, 1104, 1105, 1117, 1118, 1119, 1121, 1122, 1123, 1124], "18446744073709551616": [7, 184, 194, 204, 207, 220, 223, 231, 233, 243, 246, 264, 271, 281, 285, 291, 303, 307, 313, 330], "26": [7, 154, 156, 161, 162, 163, 172, 173, 184, 194, 199, 201, 204, 207, 210, 215, 216, 220, 223, 226, 231, 233, 236, 239, 243, 246, 249, 252, 256, 261, 264, 268, 271, 275, 285, 291, 296, 303, 307, 313, 330, 334, 352, 554, 555, 682, 698, 862, 884, 908, 940, 942, 943, 976, 978, 1104, 1105, 1128, 1164], "1000": [7, 23, 184, 194, 204, 207, 210, 220, 223, 226, 231, 233, 239, 243, 246, 249, 264, 271, 281, 285, 291, 303, 307, 313, 327, 330, 519, 520, 538, 613, 660, 734, 812, 837, 839, 844, 858, 859, 886, 887, 891, 893, 919, 926, 934, 955, 960, 964, 990, 997, 1046, 1078], "10715086071862673209484250490600018105614048117055336074437503883703510511249361224931983788156958581275946729175531468251871452856923140435984577574698574803934567774824230985421074605062371141877954182153046474983581941267398767559165543946077062914571196477686542167660429831652624386837205668069376": [7, 184, 194, 204, 207, 220, 243, 246, 264, 291], "27": [7, 63, 97, 114, 161, 163, 172, 173, 184, 194, 199, 201, 203, 204, 207, 210, 215, 216, 220, 223, 226, 231, 233, 236, 239, 242, 243, 246, 249, 251, 252, 261, 264, 268, 271, 275, 281, 285, 291, 298, 303, 307, 313, 327, 329, 330, 332, 352, 444, 518, 543, 710, 884, 906, 908, 976, 1104, 1117, 1118, 1119, 1121, 1122, 1123, 1124], "10000": [7, 45, 204, 223, 226, 239, 271, 313, 1000, 1016], "19950631168807583848837421626835850838234968318861924548520089498529438830221946631919961684036194597899331129423209124271556491349413781117593785932096323957855730046793794526765246551266059895520550086918193311542508608460618104685509074866089624888090489894838009253941633257850621568309473902556912388065225096643874441046759871626985453222868538161694315775629640762836880760732228535091641476183956381458969463899410840960536267821064621427333394036525565649530603142680234969400335934316651459297773279665775606172582031407994198179607378245683762280037302885487251900834464581454650557929601414833921615734588139257095379769119277800826957735674444123062018757836325502728323789270710373802866393031428133241401624195671690574061419654342324638801248856147305207431992259611796250130992860241708340807605932320161268492288496255841312844061536738951487114256315111089745514203313820202931640957596464756010405845841566072044962867016515061920631004186422275908670900574606417856951911456055068251250406007519842261898059237118054444788072906395242548339221982707404473162376760846613033778706039803413197133493654622700563169937455508241780972810983291314403571877524768509857276937926433221599399876886660808368837838027643282775172273657572744784112294389733810861607423253291974813120197604178281965697475898164531258434135959862784130128185406283476649088690521047580882615823961985770122407044330583075869039319604603404973156583208672105913300903752823415539745394397715257455290510212310947321610753474825740775273986348298498340756937955646638621874569499279016572103701364433135817214311791398222983845847334440270964182851005072927748364550578634501100852987812389473928699540834346158807043959118985815145779177143619698728131459483783202081474982171858011389071228250905826817436220577475921417653715687725614904582904992461028630081535583308130101987675856234343538955409175623400844887526162643568648833519463720377293240094456246923254350400678027273837755376406726898636241037491410966718557050759098100246789880178271925953381282421954028302759408448955014676668389697996886241636313376393903373455801407636741877711055384225739499110186468219696581651485130494222369947714763069155468217682876200362777257723781365331611196811280792669481887201298643660768551639860534602297871557517947385246369446923087894265948217008051120322365496288169035739121368338393591756418733850510970271613915439590991598154654417336311656936031122249937969999226781732358023111862644575299135758175008199839236284615249881088960232244362173771618086357015468484058622329792853875623486556440536962622018963571028812361567512543338303270029097668650568557157505516727518899194129711337690149916181315171544007728650573189557450920330185304847113818315407324053319038462084036421763703911550639789000742853672196280903477974533320468368795868580237952218629120080742819551317948157624448298518461509704888027274721574688131594750409732115080498190455803416826949787141316063210686391511681774304792596709376": [7, 204, 223, 239, 271, 313], "hallo": [7, 184, 194, 199, 202, 204, 207, 215, 223, 226, 233, 236, 239, 243, 246, 252, 264, 268, 271, 291, 303, 307, 313, 330, 378, 570, 753, 833, 881, 909, 922, 925, 931], "39": [7, 148, 161, 170, 172, 173, 184, 189, 194, 199, 201, 203, 204, 207, 210, 215, 216, 220, 223, 226, 231, 233, 236, 239, 243, 246, 249, 252, 261, 264, 268, 271, 275, 281, 285, 291, 296, 299, 303, 307, 313, 327, 328, 329, 330, 331, 332, 481, 635, 682, 847, 976, 1012, 1104, 1105], "30": [7, 23, 63, 97, 106, 109, 114, 147, 148, 153, 161, 163, 173, 183, 184, 189, 194, 199, 201, 203, 204, 207, 210, 215, 216, 220, 223, 226, 231, 233, 236, 239, 243, 246, 249, 252, 261, 264, 271, 275, 281, 285, 288, 291, 303, 307, 313, 327, 329, 330, 332, 352, 365, 379, 444, 506, 510, 545, 546, 551, 552, 554, 555, 671, 672, 719, 720, 721, 742, 858, 884, 890, 906, 907, 908, 964, 990, 1002, 1003, 1055, 1104, 1108, 1116, 1133, 1142], "eingebettet": [7, 204], "34": [7, 161, 162, 170, 173, 184, 189, 194, 199, 201, 203, 204, 207, 210, 211, 215, 216, 220, 223, 224, 226, 231, 233, 236, 239, 243, 246, 249, 251, 252, 261, 264, 268, 269, 271, 275, 281, 285, 291, 296, 299, 303, 307, 313, 329, 330, 331, 332, 467, 481, 485, 486, 487, 488, 500, 501, 502, 600, 601, 602, 603, 604, 609, 641, 859, 862, 884, 1012, 1031, 1104, 1105], "31": [7, 106, 114, 154, 156, 161, 173, 184, 189, 194, 199, 201, 204, 207, 210, 215, 216, 220, 223, 226, 231, 233, 234, 236, 239, 243, 246, 249, 252, 261, 264, 268, 271, 275, 281, 285, 291, 303, 307, 313, 329, 330, 352, 416, 444, 451, 697, 884, 942, 974, 991, 1025, 1057, 1104], "eingenbettet": [7, 204], "mississippi": [7, 204, 207, 216, 220, 223, 231, 233, 239, 243, 249, 252, 264, 271, 285, 291, 303, 307, 313, 640], "count": [7, 29, 63, 87, 89, 112, 119, 151, 163, 166, 204, 207, 208, 211, 216, 220, 223, 226, 231, 233, 236, 239, 243, 249, 252, 264, 270, 271, 285, 291, 303, 307, 313, 364, 365, 366, 367, 380, 436, 492, 518, 546, 660, 710, 735, 755, 758, 761, 762, 763, 764, 766, 769, 772, 773, 779, 783, 793, 806, 811, 817, 820, 823, 833, 842, 862, 884, 895, 898, 928, 931, 938, 949, 970, 1046, 1059, 1069, 1072, 1080, 1083, 1098, 1105, 1113, 1153], "ss": [7, 32, 204, 207, 216, 220, 223, 231, 233, 239, 243, 249, 252, 264, 271, 285, 291, 303, 307, 313, 640], "35": [7, 147, 161, 173, 184, 191, 194, 199, 201, 204, 207, 210, 215, 216, 220, 223, 226, 231, 233, 236, 239, 243, 246, 249, 252, 261, 264, 268, 271, 275, 281, 285, 291, 303, 307, 313, 327, 329, 330, 331, 481, 510, 653, 655, 671, 1104], "find": [7, 17, 42, 44, 47, 48, 53, 65, 114, 150, 151, 152, 153, 157, 162, 167, 179, 180, 181, 191, 193, 204, 207, 211, 213, 216, 220, 224, 226, 229, 231, 233, 236, 239, 243, 246, 249, 252, 257, 264, 266, 269, 271, 276, 278, 285, 287, 288, 291, 293, 303, 305, 307, 309, 313, 315, 320, 329, 335, 340, 423, 429, 436, 448, 456, 463, 470, 491, 496, 497, 500, 501, 502, 503, 508, 525, 526, 555, 560, 563, 577, 579, 581, 582, 603, 605, 616, 619, 621, 624, 628, 640, 653, 655, 657, 660, 703, 707, 751, 755, 768, 807, 828, 829, 830, 832, 837, 841, 842, 844, 845, 846, 848, 862, 889, 892, 895, 898, 907, 908, 919, 947, 976, 979, 993, 1023, 1027, 1038, 1046, 1106, 1143, 1155, 1157, 1158, 1159, 1164], "36": [7, 147, 152, 156, 161, 173, 184, 194, 199, 201, 204, 207, 210, 215, 216, 220, 223, 226, 231, 233, 236, 239, 243, 246, 252, 261, 264, 268, 271, 275, 281, 285, 291, 303, 307, 313, 327, 330, 335, 340, 448, 461, 467, 485, 509, 512, 513, 514, 518, 519, 520, 670, 719, 720, 721, 736, 753, 884, 906, 1012, 1088], "37": [7, 120, 122, 161, 172, 173, 184, 185, 189, 194, 199, 201, 204, 207, 210, 212, 215, 216, 220, 223, 226, 231, 233, 236, 239, 243, 246, 249, 252, 261, 264, 268, 271, 281, 285, 291, 303, 307, 313, 329, 330, 331, 485, 739, 741, 743, 745, 1104, 1117, 1118, 1119, 1121, 1122, 1123, 1124], "capit": [7, 38, 204, 207, 216, 223, 233, 239, 264, 285, 329, 862, 1057], "zeil": [7, 170, 184, 194, 201, 204, 207, 210, 216, 220, 239, 243, 261, 264, 303, 307, 330], "nnoch": [7, 201, 204, 220], "some": [7, 17, 21, 106, 138, 150, 151, 152, 153, 155, 158, 161, 162, 166, 172, 175, 180, 183, 187, 190, 192, 203, 204, 210, 212, 220, 226, 227, 232, 238, 239, 243, 255, 256, 258, 264, 267, 270, 271, 273, 277, 279, 280, 287, 305, 306, 312, 313, 315, 353, 377, 411, 422, 438, 461, 467, 538, 563, 565, 585, 603, 616, 619, 673, 682, 710, 718, 720, 730, 733, 754, 755, 761, 766, 775, 790, 798, 802, 819, 821, 839, 844, 899, 907, 908, 929, 932, 958, 960, 962, 970, 999, 1001, 1028, 1044, 1050, 1096, 1114, 1133, 1155, 1156], "name": [7, 23, 39, 40, 57, 65, 110, 111, 112, 114, 119, 131, 133, 143, 147, 150, 151, 153, 154, 155, 158, 165, 166, 171, 173, 175, 180, 183, 184, 187, 190, 192, 194, 199, 204, 207, 210, 211, 222, 224, 225, 226, 229, 231, 233, 236, 241, 243, 246, 261, 264, 268, 269, 271, 275, 285, 307, 313, 320, 326, 329, 330, 331, 346, 368, 382, 388, 396, 397, 403, 404, 410, 414, 417, 421, 422, 425, 427, 430, 434, 436, 438, 439, 440, 442, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 465, 467, 482, 486, 487, 488, 493, 496, 500, 501, 502, 517, 519, 522, 527, 532, 564, 574, 576, 578, 642, 655, 661, 662, 672, 673, 682, 700, 702, 706, 712, 720, 752, 753, 754, 755, 758, 766, 770, 780, 784, 796, 798, 822, 828, 829, 830, 833, 841, 842, 844, 847, 848, 862, 868, 884, 890, 895, 902, 906, 907, 908, 910, 911, 918, 919, 922, 924, 928, 936, 969, 973, 976, 977, 978, 988, 990, 991, 993, 994, 995, 998, 1000, 1007, 1012, 1014, 1017, 1021, 1022, 1024, 1025, 1029, 1030, 1038, 1040, 1042, 1044, 1045, 1046, 1051, 1055, 1057, 1062, 1078, 1079, 1089, 1095, 1097, 1105, 1108, 1111, 1112, 1113, 1118, 1119, 1121, 1122, 1123, 1124, 1133, 1140, 1142, 1152, 1156, 1158, 1159], "directori": [7, 17, 44, 61, 97, 99, 100, 102, 109, 114, 126, 130, 147, 150, 151, 152, 153, 162, 166, 177, 182, 185, 191, 203, 204, 210, 211, 212, 213, 220, 223, 224, 226, 236, 239, 251, 256, 257, 258, 266, 267, 279, 280, 284, 287, 288, 293, 301, 305, 309, 320, 321, 335, 340, 346, 348, 349, 402, 436, 438, 443, 446, 450, 452, 454, 456, 457, 459, 462, 464, 466, 480, 481, 503, 506, 508, 509, 510, 511, 512, 513, 514, 515, 516, 518, 519, 520, 539, 542, 545, 548, 551, 554, 557, 560, 651, 733, 754, 755, 780, 802, 804, 824, 828, 831, 832, 833, 835, 836, 837, 839, 841, 842, 844, 845, 846, 848, 849, 850, 851, 856, 857, 859, 861, 862, 867, 868, 869, 870, 871, 872, 874, 875, 876, 877, 878, 879, 882, 886, 891, 898, 906, 907, 908, 910, 915, 919, 921, 924, 927, 934, 935, 936, 937, 939, 942, 944, 953, 956, 959, 961, 965, 968, 972, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 990, 991, 992, 993, 999, 1007, 1027, 1078, 1087, 1088, 1135, 1139, 1144, 1155, 1159, 1168], "multilin": [7, 194, 204, 219, 222, 226, 231, 239, 243, 303, 314, 335, 403, 1000, 1028], "jetzt": [7, 159, 170, 174, 184, 194, 201, 204, 214, 243, 299], "l": [7, 32, 38, 61, 63, 99, 114, 154, 158, 162, 170, 171, 173, 174, 179, 184, 189, 194, 199, 201, 202, 203, 204, 207, 210, 215, 216, 220, 223, 226, 229, 231, 233, 236, 239, 243, 246, 249, 252, 257, 261, 264, 266, 267, 271, 281, 285, 287, 288, 291, 303, 307, 313, 316, 327, 329, 330, 335, 340, 408, 409, 416, 420, 432, 437, 438, 444, 451, 454, 455, 470, 482, 508, 555, 560, 579, 609, 660, 733, 753, 754, 755, 766, 780, 802, 803, 829, 830, 831, 832, 833, 835, 836, 839, 841, 844, 845, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 866, 869, 870, 873, 874, 876, 877, 878, 880, 881, 882, 886, 891, 895, 898, 899, 901, 906, 907, 908, 909, 910, 917, 919, 924, 925, 927, 929, 930, 932, 933, 934, 937, 939, 942, 945, 953, 956, 959, 960, 961, 970, 974, 976, 977, 978, 979, 988, 990, 991, 996, 998, 1019, 1027, 1029, 1032, 1033, 1037, 1039, 1047, 1055, 1082, 1142, 1159], "44": [7, 147, 154, 161, 173, 184, 194, 199, 201, 204, 207, 210, 215, 216, 220, 223, 226, 231, 233, 236, 239, 243, 246, 249, 252, 261, 264, 268, 271, 281, 285, 291, 303, 307, 313, 327, 330, 908, 1128], "45": [7, 29, 51, 53, 55, 56, 72, 73, 74, 87, 90, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 130, 140, 143, 156, 159, 161, 173, 183, 184, 187, 189, 194, 199, 201, 204, 207, 208, 210, 216, 220, 223, 226, 231, 233, 239, 243, 246, 249, 252, 261, 264, 271, 281, 285, 291, 303, 307, 313, 321, 322, 323, 324, 325, 326, 329, 330, 335, 340, 373, 388, 397, 404, 410, 414, 417, 421, 430, 434, 439, 440, 449, 466, 480, 508, 509, 510, 511, 512, 513, 514, 515, 518, 525, 527, 560, 568, 583, 586, 589, 600, 601, 602, 603, 604, 605, 609, 611, 615, 624, 627, 628, 633, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 662, 669, 676, 687, 700, 701, 711, 716, 725, 733, 737, 740, 752, 753, 754, 755, 759, 762, 764, 767, 769, 772, 774, 778, 779, 781, 783, 785, 787, 793, 795, 797, 799, 806, 808, 811, 813, 817, 820, 823, 825, 829, 830, 831, 832, 835, 836, 843, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 882, 892, 898, 905, 910, 911, 912, 913, 914, 921, 927, 929, 937, 939, 941, 953, 956, 959, 961, 978, 980, 981, 982, 983, 984, 985, 986, 987, 1001, 1008, 1009, 1010, 1011, 1015, 1023, 1034, 1043, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1104, 1106, 1110, 1113, 1114, 1116, 1120, 1127, 1130, 1132, 1137, 1138], "46": [7, 161, 184, 189, 194, 199, 201, 204, 207, 210, 216, 220, 223, 226, 231, 233, 236, 239, 243, 246, 249, 252, 261, 264, 271, 281, 285, 291, 303, 307, 313, 327, 330, 738, 884, 908, 924, 1104, 1105], "47": [7, 154, 156, 161, 184, 189, 194, 199, 201, 204, 207, 210, 216, 220, 223, 226, 231, 233, 239, 243, 246, 249, 252, 261, 264, 268, 271, 281, 285, 291, 303, 307, 313, 327, 330, 331, 710, 895, 960, 988, 1045, 1104], "try": [7, 27, 114, 119, 126, 147, 150, 151, 153, 158, 170, 173, 183, 184, 187, 191, 194, 199, 201, 204, 207, 210, 213, 216, 218, 220, 223, 226, 229, 231, 233, 236, 239, 243, 246, 248, 249, 251, 252, 255, 256, 258, 260, 261, 264, 267, 268, 271, 278, 279, 280, 281, 284, 285, 291, 302, 303, 307, 313, 315, 321, 328, 329, 330, 331, 335, 339, 340, 350, 428, 432, 458, 462, 469, 486, 491, 500, 508, 516, 525, 527, 560, 568, 586, 589, 605, 611, 615, 620, 624, 627, 628, 645, 647, 649, 652, 653, 654, 655, 656, 657, 688, 696, 700, 710, 716, 720, 734, 736, 749, 751, 753, 754, 755, 807, 810, 907, 928, 973, 997, 1004, 1057, 1100, 1106, 1117, 1118, 1122, 1135], "except": [7, 21, 29, 43, 46, 61, 63, 74, 110, 111, 152, 156, 162, 170, 171, 178, 183, 184, 187, 188, 190, 192, 194, 199, 201, 204, 207, 211, 212, 213, 216, 218, 220, 223, 224, 227, 228, 231, 233, 237, 238, 241, 243, 246, 248, 249, 253, 261, 264, 268, 271, 279, 280, 281, 284, 285, 291, 301, 302, 303, 305, 306, 307, 313, 320, 322, 328, 329, 330, 331, 335, 340, 348, 349, 368, 420, 423, 457, 462, 463, 470, 497, 508, 525, 527, 560, 589, 605, 611, 615, 624, 627, 628, 632, 645, 652, 653, 655, 656, 657, 661, 664, 688, 696, 717, 719, 720, 731, 736, 755, 770, 802, 835, 840, 906, 960, 974, 997, 1001, 1004, 1007, 1010, 1013, 1023, 1025, 1028, 1046, 1048, 1098, 1100, 1117, 1122, 1135, 1145, 1152], "index": [7, 13, 23, 29, 39, 51, 53, 90, 110, 111, 147, 148, 157, 170, 172, 177, 182, 184, 185, 187, 188, 190, 192, 196, 197, 199, 202, 204, 207, 208, 210, 211, 213, 216, 218, 221, 223, 224, 226, 227, 229, 230, 232, 233, 234, 237, 239, 240, 242, 244, 245, 246, 248, 249, 251, 260, 261, 263, 264, 269, 270, 271, 273, 275, 277, 279, 280, 283, 284, 285, 289, 290, 292, 295, 298, 301, 302, 303, 305, 306, 307, 311, 312, 313, 319, 335, 342, 366, 382, 408, 436, 444, 539, 542, 545, 548, 551, 554, 555, 557, 595, 596, 598, 603, 642, 682, 710, 722, 736, 755, 798, 965, 968, 972, 1023, 1024, 1036, 1039, 1046, 1052, 1053, 1054, 1055, 1057, 1059, 1072, 1078, 1083, 1098, 1100, 1101, 1102, 1104, 1105, 1106, 1114, 1116, 1118, 1120, 1121, 1123, 1127, 1137, 1139, 1144], "out": [7, 31, 44, 45, 50, 55, 63, 65, 75, 85, 106, 112, 114, 119, 126, 130, 137, 143, 144, 147, 148, 150, 151, 152, 153, 154, 156, 157, 158, 161, 162, 166, 171, 172, 179, 180, 183, 187, 190, 191, 199, 204, 207, 212, 220, 226, 227, 229, 236, 239, 243, 247, 276, 302, 303, 321, 335, 341, 346, 357, 378, 396, 402, 403, 411, 422, 429, 436, 437, 438, 442, 444, 445, 450, 455, 458, 460, 462, 487, 488, 503, 506, 516, 532, 538, 555, 562, 564, 578, 593, 635, 638, 673, 688, 707, 710, 723, 734, 751, 770, 771, 780, 802, 810, 815, 829, 830, 833, 837, 841, 844, 848, 858, 889, 895, 899, 906, 907, 908, 925, 926, 942, 960, 963, 973, 974, 976, 988, 993, 1000, 1004, 1044, 1045, 1052, 1078, 1081, 1108, 1113, 1115, 1121, 1123, 1124, 1128, 1134, 1153], "rang": [7, 29, 42, 63, 90, 108, 114, 115, 158, 171, 172, 173, 178, 187, 190, 192, 195, 196, 199, 202, 204, 207, 208, 211, 218, 219, 221, 222, 224, 225, 226, 229, 230, 232, 234, 235, 238, 239, 244, 245, 247, 248, 250, 252, 254, 262, 263, 264, 270, 272, 273, 280, 281, 283, 284, 286, 289, 290, 292, 301, 303, 305, 306, 307, 311, 312, 313, 316, 319, 327, 381, 408, 424, 426, 472, 506, 509, 510, 514, 538, 554, 555, 591, 593, 596, 599, 700, 749, 752, 754, 755, 766, 899, 906, 955, 961, 964, 996, 999, 1001, 1006, 1008, 1010, 1012, 1022, 1023, 1031, 1035, 1052, 1056, 1057, 1058, 1059, 1069, 1071, 1072, 1073, 1075, 1079, 1080, 1081, 1082, 1083, 1084, 1098, 1110, 1113, 1121, 1123, 1152, 1153, 1163], "48": [7, 154, 161, 170, 184, 189, 194, 199, 201, 204, 207, 210, 216, 223, 226, 231, 233, 236, 239, 243, 246, 249, 252, 261, 264, 271, 281, 285, 291, 303, 307, 313, 327, 330, 331, 906], "append": [7, 170, 171, 172, 173, 174, 184, 189, 191, 194, 199, 201, 202, 203, 204, 207, 210, 215, 216, 217, 220, 223, 224, 226, 231, 233, 236, 239, 243, 246, 249, 252, 261, 264, 268, 271, 281, 285, 291, 303, 307, 313, 330, 331, 444, 447, 537, 555, 597, 613, 625, 652, 763, 775, 790, 802, 829, 830, 844, 847, 868, 881, 906, 915, 928, 964, 996, 1002, 1003, 1016, 1032, 1037, 1040, 1042, 1047, 1050, 1051, 1077, 1125, 1128], "one": [7, 21, 27, 32, 40, 44, 45, 50, 59, 62, 63, 66, 80, 84, 85, 106, 110, 111, 112, 114, 115, 118, 119, 123, 126, 130, 131, 133, 139, 141, 145, 150, 151, 152, 153, 154, 155, 157, 158, 161, 162, 166, 171, 172, 173, 175, 180, 183, 184, 187, 189, 191, 194, 199, 201, 202, 203, 204, 207, 210, 212, 213, 220, 223, 226, 231, 233, 234, 236, 237, 239, 242, 243, 246, 249, 251, 261, 264, 267, 270, 271, 273, 275, 277, 281, 285, 290, 291, 293, 302, 307, 309, 313, 320, 321, 326, 327, 332, 335, 341, 353, 358, 365, 376, 381, 383, 391, 396, 398, 399, 403, 406, 408, 413, 416, 424, 425, 426, 428, 432, 436, 438, 444, 445, 447, 448, 450, 452, 456, 457, 460, 461, 462, 467, 469, 470, 472, 473, 481, 486, 488, 506, 509, 511, 512, 516, 517, 519, 538, 549, 555, 566, 567, 575, 576, 578, 579, 580, 581, 582, 593, 594, 602, 613, 616, 620, 635, 642, 659, 660, 663, 664, 665, 668, 677, 688, 707, 709, 710, 718, 720, 721, 722, 723, 724, 730, 732, 734, 740, 753, 763, 770, 777, 780, 790, 796, 802, 810, 818, 822, 827, 828, 829, 835, 844, 846, 847, 862, 881, 895, 899, 901, 902, 903, 906, 907, 908, 909, 911, 915, 918, 919, 925, 926, 928, 929, 932, 935, 936, 938, 944, 945, 946, 947, 949, 952, 955, 958, 960, 961, 962, 969, 973, 976, 979, 982, 988, 991, 992, 994, 995, 997, 999, 1000, 1002, 1008, 1010, 1011, 1013, 1024, 1025, 1028, 1029, 1030, 1032, 1036, 1037, 1039, 1041, 1042, 1046, 1048, 1050, 1051, 1058, 1068, 1071, 1078, 1079, 1104, 1105, 1106, 1107, 1109, 1113, 1114, 1116, 1118, 1124, 1125, 1126, 1129, 1133, 1135, 1140, 1142, 1155, 1158], "49": [7, 161, 170, 184, 189, 194, 199, 201, 204, 207, 210, 216, 220, 223, 226, 231, 233, 239, 243, 246, 249, 252, 261, 264, 268, 271, 281, 285, 291, 303, 307, 313, 327, 330, 331, 703, 847, 988, 1002], "extend": [7, 152, 153, 184, 201, 202, 204, 209, 215, 220, 223, 226, 231, 233, 239, 243, 246, 249, 261, 264, 271, 277, 281, 285, 291, 313, 330, 465, 472, 481, 506, 579, 581, 582, 634, 763, 834, 1032, 1037, 1047, 1105, 1117], "slice": [7, 29, 90, 172, 174, 183, 187, 188, 190, 192, 197, 200, 201, 204, 211, 223, 224, 226, 227, 230, 234, 235, 241, 242, 244, 245, 246, 248, 260, 263, 265, 270, 273, 280, 283, 284, 286, 289, 290, 292, 301, 302, 305, 306, 311, 312, 319, 755, 800, 961, 1023, 1036, 1040, 1059, 1072, 1083, 1098, 1114, 1118, 1120, 1122], "inclus": [7, 190, 204, 231, 243, 402, 595, 1061, 1121], "exclus": [7, 178, 204, 226, 243, 280, 384, 595, 730, 928, 961, 1010, 1046, 1050, 1061, 1121], "51": [7, 161, 184, 189, 194, 199, 201, 204, 207, 210, 216, 220, 223, 226, 231, 233, 239, 243, 246, 249, 252, 261, 264, 268, 271, 281, 285, 291, 303, 307, 313, 327, 330, 617, 618, 619, 620, 884, 886, 1104], "l\u00f6schen": [7, 194, 200, 204, 335], "52": [7, 161, 170, 184, 189, 194, 199, 201, 204, 207, 210, 216, 220, 223, 226, 231, 233, 239, 243, 246, 249, 252, 261, 264, 271, 281, 285, 291, 303, 307, 313, 330, 331, 908, 1104], "del": [7, 38, 170, 173, 174, 184, 199, 201, 204, 207, 215, 220, 223, 226, 231, 233, 239, 243, 246, 249, 252, 261, 264, 271, 281, 285, 291, 303, 307, 313, 328, 330, 1007, 1032, 1048], "53": [7, 154, 184, 189, 194, 199, 201, 204, 207, 210, 216, 220, 223, 226, 231, 233, 239, 243, 246, 249, 252, 261, 264, 268, 271, 281, 285, 291, 303, 307, 313, 327, 330, 342, 486, 487, 713, 782, 884, 906, 976, 988, 1104, 1105], "iter": [7, 24, 29, 63, 119, 120, 171, 174, 178, 183, 187, 188, 190, 192, 195, 196, 200, 202, 204, 208, 209, 211, 212, 214, 218, 219, 221, 222, 224, 225, 227, 228, 229, 230, 232, 234, 235, 238, 241, 243, 245, 246, 250, 262, 265, 271, 279, 280, 282, 286, 291, 301, 304, 305, 306, 308, 314, 320, 335, 341, 393, 395, 408, 444, 469, 519, 538, 555, 597, 598, 599, 603, 606, 613, 616, 618, 620, 625, 675, 682, 691, 712, 749, 755, 925, 997, 1001, 1003, 1012, 1025, 1035, 1049, 1050, 1056, 1057, 1058, 1059, 1072, 1083, 1095, 1098, 1100, 1110, 1112, 1125, 1163], "mittel": [7, 11, 23, 174, 184, 186, 202, 204, 209, 353, 1147, 1150, 1159, 1167], "54": [7, 161, 170, 184, 189, 194, 199, 201, 204, 207, 210, 216, 220, 223, 226, 231, 233, 236, 239, 243, 246, 249, 252, 261, 264, 271, 281, 285, 291, 303, 307, 313, 327, 329, 330, 342, 617, 618, 619, 620, 720, 792, 884, 906, 988, 1104], "element": [7, 8, 35, 38, 106, 109, 110, 111, 114, 171, 173, 174, 184, 189, 190, 195, 196, 199, 201, 202, 204, 205, 207, 210, 214, 215, 216, 220, 223, 224, 226, 230, 232, 233, 239, 242, 243, 246, 250, 271, 275, 278, 281, 290, 303, 329, 330, 366, 393, 408, 416, 420, 423, 508, 522, 525, 527, 536, 555, 560, 592, 593, 594, 595, 596, 597, 598, 599, 600, 602, 606, 610, 613, 617, 620, 642, 660, 663, 665, 682, 696, 710, 712, 755, 763, 970, 1002, 1004, 1021, 1032, 1037, 1038, 1047, 1049, 1082, 1108, 1125, 1133, 1156, 1163], "55": [7, 161, 170, 184, 189, 194, 199, 201, 204, 207, 210, 216, 220, 223, 226, 231, 233, 239, 243, 246, 249, 252, 261, 264, 268, 271, 281, 285, 291, 303, 307, 313, 327, 329, 330, 331, 342, 419, 444, 650, 651, 652, 653, 655, 753, 976, 1057], "def": [7, 63, 170, 171, 174, 184, 189, 190, 194, 199, 201, 202, 204, 207, 210, 211, 216, 217, 220, 223, 224, 226, 231, 233, 236, 239, 243, 246, 249, 252, 261, 264, 269, 271, 281, 285, 291, 296, 299, 303, 307, 313, 330, 331, 444, 702, 954, 997, 998, 999, 1002, 1003, 1004, 1007, 1008, 1010, 1012, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1028, 1031, 1041, 1042, 1047, 1051, 1082, 1088, 1095, 1096, 1097, 1116, 1121, 1122, 1124, 1133, 1134], "is_integ": [7, 204, 261], "elem": [7, 170, 174, 184, 189, 194, 199, 201, 204, 216, 223, 226, 231, 236, 261, 264, 271, 281, 285, 291, 307, 313, 522, 619, 621, 668, 688, 690, 692, 695, 709, 710, 712, 732, 1004, 1047, 1051], "type": [7, 29, 50, 78, 83, 100, 110, 111, 131, 143, 144, 147, 150, 151, 154, 156, 158, 166, 170, 171, 174, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 200, 201, 203, 204, 207, 210, 211, 212, 215, 216, 220, 225, 228, 229, 231, 233, 238, 241, 243, 247, 249, 251, 252, 254, 262, 264, 267, 268, 271, 279, 280, 281, 284, 285, 291, 296, 300, 301, 302, 304, 305, 306, 307, 312, 313, 316, 327, 328, 329, 330, 335, 337, 338, 346, 368, 379, 380, 387, 392, 397, 398, 402, 404, 408, 410, 411, 414, 417, 418, 419, 420, 421, 424, 426, 427, 429, 430, 434, 439, 440, 444, 460, 462, 471, 474, 482, 488, 518, 522, 543, 552, 562, 564, 570, 571, 575, 577, 578, 588, 596, 625, 631, 635, 638, 640, 642, 644, 650, 662, 663, 668, 673, 674, 682, 688, 699, 700, 702, 707, 708, 709, 710, 719, 720, 722, 723, 724, 729, 738, 739, 741, 745, 746, 748, 750, 751, 752, 753, 754, 755, 758, 761, 763, 768, 771, 790, 802, 828, 832, 844, 847, 859, 862, 865, 876, 878, 879, 882, 890, 898, 899, 901, 906, 910, 915, 924, 925, 928, 931, 932, 933, 934, 935, 945, 957, 966, 969, 973, 974, 976, 993, 995, 998, 1001, 1004, 1008, 1013, 1014, 1015, 1022, 1026, 1028, 1030, 1031, 1032, 1036, 1038, 1039, 1040, 1045, 1046, 1048, 1050, 1052, 1065, 1076, 1077, 1095, 1098, 1100, 1105, 1109, 1113, 1118, 1119, 1121, 1128, 1133, 1135, 1153, 1154], "int": [7, 21, 46, 107, 110, 111, 126, 153, 162, 171, 173, 184, 190, 194, 199, 201, 202, 204, 207, 211, 212, 217, 220, 223, 224, 226, 229, 231, 233, 236, 239, 243, 246, 249, 252, 261, 264, 270, 271, 273, 281, 285, 291, 299, 303, 307, 313, 328, 330, 331, 357, 358, 360, 362, 364, 366, 367, 368, 370, 371, 372, 376, 377, 378, 380, 381, 382, 386, 396, 398, 399, 400, 401, 402, 403, 405, 406, 408, 409, 411, 412, 413, 416, 418, 419, 423, 424, 425, 426, 427, 428, 432, 433, 467, 474, 481, 482, 486, 487, 488, 489, 492, 495, 496, 498, 500, 501, 502, 504, 506, 514, 516, 518, 520, 521, 522, 523, 524, 526, 536, 538, 543, 546, 552, 555, 562, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 585, 587, 588, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 607, 608, 609, 613, 616, 617, 618, 619, 620, 621, 625, 627, 631, 632, 635, 637, 638, 640, 641, 642, 644, 649, 650, 651, 652, 653, 654, 655, 656, 660, 661, 663, 664, 667, 673, 674, 675, 677, 678, 679, 680, 682, 683, 684, 685, 686, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 702, 703, 704, 705, 707, 708, 709, 710, 712, 714, 721, 722, 723, 724, 727, 729, 732, 734, 736, 739, 741, 743, 745, 753, 758, 761, 766, 768, 773, 780, 782, 784, 786, 790, 794, 796, 798, 807, 812, 819, 839, 859, 902, 906, 920, 922, 924, 925, 926, 928, 931, 932, 933, 934, 935, 938, 940, 943, 945, 947, 949, 951, 957, 960, 963, 964, 966, 969, 970, 973, 974, 976, 988, 992, 994, 1019, 1030, 1031, 1039, 1040, 1042, 1045, 1051, 1052, 1067, 1090, 1092, 1095, 1096, 1122, 1140, 1145], "return": [7, 21, 27, 63, 107, 147, 150, 152, 153, 154, 158, 162, 170, 171, 174, 184, 188, 190, 192, 194, 199, 201, 202, 204, 207, 210, 211, 212, 216, 217, 220, 223, 224, 226, 229, 231, 233, 236, 239, 243, 246, 249, 253, 254, 261, 264, 269, 271, 275, 281, 285, 296, 299, 302, 303, 307, 313, 330, 331, 357, 358, 360, 364, 366, 368, 377, 386, 396, 402, 408, 409, 411, 418, 419, 422, 423, 425, 426, 428, 432, 444, 451, 460, 461, 462, 463, 467, 469, 472, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 506, 513, 514, 518, 519, 522, 538, 546, 552, 555, 562, 563, 564, 566, 567, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 585, 587, 588, 590, 591, 592, 593, 594, 595, 597, 598, 599, 600, 601, 603, 604, 607, 608, 609, 613, 616, 617, 618, 619, 620, 621, 627, 631, 632, 635, 637, 638, 644, 648, 649, 650, 651, 652, 653, 654, 655, 656, 660, 665, 667, 668, 675, 677, 678, 679, 680, 682, 683, 684, 685, 686, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 702, 703, 704, 705, 706, 707, 710, 712, 717, 718, 720, 721, 722, 723, 724, 730, 732, 734, 739, 741, 743, 744, 745, 746, 749, 750, 751, 753, 758, 765, 773, 780, 784, 792, 794, 816, 818, 822, 839, 859, 906, 920, 922, 924, 925, 926, 928, 929, 931, 932, 933, 934, 935, 940, 943, 944, 945, 955, 957, 960, 966, 969, 970, 973, 974, 976, 988, 992, 993, 994, 995, 997, 998, 999, 1000, 1002, 1003, 1004, 1012, 1016, 1017, 1019, 1020, 1021, 1042, 1044, 1046, 1047, 1048, 1051, 1057, 1073, 1075, 1079, 1082, 1083, 1090, 1092, 1095, 1119, 1121, 1122, 1124, 1133, 1140, 1145], "els": [7, 21, 43, 50, 63, 110, 111, 115, 130, 151, 153, 154, 157, 166, 171, 174, 184, 187, 190, 194, 202, 204, 207, 210, 211, 212, 216, 220, 223, 224, 227, 228, 229, 231, 235, 236, 241, 243, 246, 250, 252, 261, 263, 264, 269, 271, 281, 285, 291, 303, 313, 320, 331, 342, 364, 370, 381, 386, 397, 403, 404, 410, 414, 417, 421, 422, 430, 434, 439, 440, 444, 452, 453, 467, 491, 498, 501, 555, 578, 602, 603, 613, 620, 634, 654, 662, 667, 700, 721, 723, 730, 734, 752, 754, 755, 784, 794, 818, 829, 830, 835, 854, 856, 859, 865, 886, 907, 920, 923, 928, 954, 955, 957, 960, 962, 1000, 1007, 1019, 1020, 1023, 1034, 1042, 1048, 1122, 1152], "fals": [7, 46, 110, 111, 154, 156, 170, 171, 184, 189, 194, 199, 201, 202, 204, 207, 210, 216, 220, 223, 224, 226, 231, 233, 236, 239, 243, 246, 249, 252, 261, 264, 268, 271, 275, 281, 285, 291, 296, 303, 307, 313, 329, 344, 360, 364, 381, 418, 444, 578, 603, 635, 642, 665, 677, 730, 734, 736, 822, 835, 862, 954, 955, 960, 962, 982, 997, 1012, 1016, 1019, 1032, 1033, 1035, 1036, 1040, 1118, 1119, 1122, 1124, 1140], "56": [7, 147, 161, 184, 189, 194, 199, 201, 204, 207, 210, 216, 220, 223, 226, 231, 233, 239, 243, 246, 249, 252, 261, 264, 268, 271, 281, 285, 291, 303, 307, 313, 327, 329, 330, 342, 381, 485, 573, 753, 881, 906, 908, 1104, 1117, 1118, 1119, 1121, 1122, 1123, 1124], "x": [7, 23, 32, 42, 61, 63, 156, 162, 170, 171, 172, 174, 184, 194, 199, 201, 203, 204, 207, 210, 220, 223, 226, 227, 231, 233, 239, 243, 246, 249, 251, 252, 261, 264, 268, 271, 280, 281, 285, 307, 313, 331, 335, 377, 380, 381, 387, 402, 403, 405, 408, 411, 412, 416, 418, 426, 428, 432, 455, 506, 516, 553, 562, 563, 564, 565, 567, 569, 570, 571, 572, 573, 574, 576, 578, 580, 581, 588, 595, 603, 663, 664, 665, 667, 682, 684, 685, 686, 703, 714, 723, 828, 829, 830, 833, 837, 839, 844, 847, 849, 850, 858, 859, 884, 887, 891, 893, 899, 906, 907, 908, 924, 934, 940, 942, 943, 951, 955, 976, 977, 978, 979, 984, 988, 990, 991, 996, 997, 1025, 1027, 1033, 1041, 1042, 1044, 1045, 1046, 1049, 1050, 1054, 1078, 1105, 1122, 1133, 1134, 1140], "filter": [7, 29, 106, 109, 114, 168, 171, 204, 211, 224, 241, 264, 270, 273, 277, 278, 285, 302, 304, 307, 314, 319, 508, 525, 560, 718, 719, 755, 827, 846, 895, 1098, 1114, 1120, 1123, 1140], "57": [7, 147, 161, 184, 189, 194, 199, 201, 204, 207, 210, 216, 220, 223, 226, 231, 233, 239, 243, 246, 249, 252, 261, 264, 271, 281, 285, 291, 303, 307, 313, 327, 330, 331, 451, 456, 884, 906, 919, 977, 978, 1104], "zero": [7, 32, 38, 147, 153, 169, 171, 172, 174, 184, 194, 202, 204, 207, 220, 226, 231, 233, 236, 239, 243, 246, 261, 285, 335, 357, 366, 384, 709, 719, 723, 761, 773, 788, 833, 862, 877, 884, 908, 928, 949, 955, 958, 961, 964, 969, 970, 1036], "two": [7, 12, 17, 29, 32, 34, 35, 36, 38, 42, 44, 54, 69, 85, 106, 123, 139, 141, 144, 145, 150, 151, 152, 153, 166, 171, 172, 173, 179, 183, 184, 189, 194, 195, 197, 199, 201, 202, 204, 207, 208, 210, 212, 213, 214, 218, 220, 221, 224, 226, 229, 230, 231, 233, 234, 239, 240, 242, 243, 245, 247, 248, 249, 261, 263, 264, 267, 269, 270, 271, 279, 281, 283, 284, 285, 289, 290, 291, 295, 298, 307, 311, 312, 313, 319, 321, 327, 335, 341, 344, 353, 354, 365, 372, 402, 408, 410, 411, 414, 416, 417, 420, 421, 423, 425, 428, 430, 434, 439, 440, 442, 443, 444, 445, 454, 457, 470, 472, 482, 486, 487, 506, 516, 518, 538, 546, 549, 555, 571, 576, 578, 595, 618, 660, 661, 662, 663, 664, 700, 706, 709, 710, 712, 719, 722, 724, 752, 754, 755, 800, 802, 805, 867, 869, 889, 899, 901, 906, 907, 908, 925, 928, 929, 936, 946, 947, 955, 960, 969, 974, 984, 994, 1002, 1008, 1011, 1014, 1019, 1022, 1023, 1029, 1032, 1035, 1046, 1048, 1050, 1056, 1059, 1061, 1062, 1063, 1066, 1068, 1069, 1072, 1073, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1095, 1098, 1099, 1105, 1107, 1113, 1121, 1134, 1140, 1153, 1163, 1168], "58": [7, 154, 161, 184, 189, 194, 199, 201, 204, 207, 210, 216, 220, 223, 226, 231, 233, 239, 243, 246, 249, 252, 261, 264, 271, 281, 285, 291, 303, 307, 313, 330, 335, 340, 342, 444, 908, 977, 978, 988, 1104, 1105], "59": [7, 161, 184, 189, 194, 199, 201, 204, 207, 210, 216, 220, 223, 226, 231, 233, 239, 243, 246, 249, 252, 261, 264, 271, 281, 285, 291, 303, 307, 313, 327, 330, 342, 978, 979, 988, 1104], "three": [7, 12, 32, 36, 38, 43, 63, 110, 111, 119, 152, 164, 171, 172, 183, 184, 187, 188, 194, 199, 201, 202, 204, 210, 218, 220, 223, 226, 231, 233, 236, 239, 243, 246, 249, 261, 264, 269, 270, 271, 273, 279, 280, 281, 285, 290, 291, 303, 307, 313, 335, 353, 422, 597, 642, 835, 844, 847, 862, 899, 906, 908, 928, 960, 969, 1004, 1014, 1032, 1036, 1046, 1048, 1050, 1062, 1068, 1099, 1100, 1154, 1168], "60": [7, 63, 106, 161, 184, 189, 194, 199, 201, 204, 207, 210, 216, 220, 223, 226, 231, 233, 239, 243, 246, 249, 251, 252, 261, 264, 268, 271, 281, 285, 291, 303, 307, 313, 329, 330, 486, 487, 488, 500, 501, 502, 509, 844, 906, 907, 908, 1002, 1104, 1105], "61": [7, 63, 161, 172, 184, 189, 194, 199, 201, 204, 207, 210, 216, 223, 226, 231, 233, 239, 243, 246, 252, 261, 264, 271, 281, 285, 291, 303, 307, 313, 327, 330, 335, 340, 1104, 1105], "62": [7, 161, 184, 189, 194, 199, 201, 204, 207, 210, 216, 220, 223, 226, 231, 233, 239, 243, 246, 249, 252, 261, 264, 268, 271, 281, 285, 291, 303, 307, 313, 330, 844, 1057, 1104], "63": [7, 161, 184, 189, 194, 199, 201, 204, 207, 210, 216, 223, 226, 231, 233, 239, 243, 246, 249, 252, 261, 264, 268, 271, 281, 285, 291, 303, 307, 313, 327, 330, 335, 340, 1057, 1104], "k": [7, 29, 153, 172, 174, 184, 187, 199, 201, 204, 207, 211, 212, 223, 226, 231, 233, 236, 239, 246, 249, 261, 264, 270, 271, 281, 291, 301, 303, 305, 307, 313, 336, 337, 356, 484, 617, 660, 722, 739, 755, 862, 909, 944, 1098, 1101, 1107, 1114, 1133], "v": [7, 20, 23, 31, 32, 88, 112, 122, 133, 147, 151, 158, 172, 175, 178, 184, 188, 190, 192, 196, 198, 199, 202, 203, 204, 209, 211, 212, 213, 214, 220, 223, 224, 226, 227, 229, 230, 232, 238, 241, 242, 244, 247, 249, 253, 260, 261, 264, 267, 272, 280, 282, 286, 290, 291, 297, 303, 307, 313, 316, 321, 335, 432, 456, 461, 482, 508, 542, 560, 617, 637, 660, 664, 668, 673, 674, 675, 682, 683, 684, 685, 686, 691, 694, 695, 696, 702, 708, 709, 710, 733, 736, 738, 740, 751, 754, 755, 764, 769, 772, 774, 779, 783, 785, 789, 793, 794, 795, 797, 799, 802, 804, 806, 810, 811, 813, 817, 820, 823, 828, 832, 835, 836, 839, 862, 864, 891, 898, 921, 927, 929, 937, 939, 953, 956, 959, 961, 969, 970, 976, 1019, 1042, 1135, 1136, 1148, 1150, 1167, 1169], "65": [7, 184, 189, 194, 199, 201, 204, 207, 210, 216, 220, 223, 226, 231, 233, 239, 243, 246, 249, 252, 261, 264, 268, 271, 281, 285, 291, 303, 307, 313, 327, 330, 650, 964, 1104, 1105], "item": [7, 151, 171, 173, 184, 189, 194, 199, 201, 204, 207, 210, 211, 215, 216, 220, 223, 224, 226, 231, 233, 236, 239, 243, 246, 249, 251, 255, 256, 258, 261, 264, 269, 271, 281, 285, 291, 303, 307, 313, 329, 420, 424, 426, 445, 709, 752, 754, 755, 969, 970, 1004, 1005, 1006, 1012, 1038, 1045, 1048, 1050, 1088, 1133], "66": [7, 154, 161, 184, 189, 194, 199, 201, 204, 207, 210, 216, 223, 226, 231, 233, 239, 243, 246, 249, 252, 261, 264, 271, 281, 285, 291, 303, 307, 313, 330, 640, 1057, 1104, 1105], "": [7, 8, 14, 20, 23, 31, 35, 37, 38, 40, 43, 44, 45, 48, 55, 59, 61, 62, 63, 65, 66, 78, 89, 104, 108, 109, 112, 114, 119, 126, 130, 131, 137, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 168, 171, 172, 173, 175, 177, 178, 180, 181, 183, 184, 187, 189, 190, 194, 195, 199, 201, 202, 203, 204, 205, 207, 210, 212, 213, 216, 217, 220, 223, 224, 226, 227, 229, 230, 231, 233, 236, 237, 239, 243, 246, 249, 252, 255, 256, 258, 261, 264, 267, 268, 269, 270, 271, 273, 276, 277, 278, 279, 280, 281, 285, 288, 291, 293, 295, 298, 301, 302, 303, 305, 307, 309, 313, 315, 316, 320, 321, 329, 330, 332, 335, 338, 339, 353, 355, 368, 370, 376, 381, 402, 403, 406, 415, 420, 422, 424, 425, 426, 427, 428, 432, 443, 444, 445, 447, 448, 450, 452, 453, 456, 457, 460, 461, 462, 464, 465, 466, 467, 470, 471, 482, 484, 485, 487, 488, 492, 503, 505, 516, 517, 518, 519, 522, 528, 530, 531, 539, 542, 545, 546, 548, 551, 554, 557, 564, 566, 567, 570, 571, 574, 575, 577, 578, 587, 597, 607, 608, 618, 625, 627, 632, 634, 637, 638, 640, 644, 647, 651, 661, 662, 664, 666, 668, 671, 672, 673, 674, 677, 681, 682, 688, 697, 700, 702, 705, 709, 710, 712, 714, 718, 719, 720, 722, 724, 732, 734, 735, 736, 739, 741, 743, 744, 745, 746, 751, 753, 754, 755, 761, 770, 773, 775, 780, 786, 788, 798, 807, 810, 822, 827, 828, 829, 830, 833, 834, 837, 839, 840, 844, 845, 846, 848, 852, 854, 856, 858, 859, 860, 862, 864, 865, 881, 884, 885, 887, 888, 890, 891, 893, 894, 895, 899, 902, 906, 907, 908, 909, 910, 917, 918, 919, 920, 922, 923, 924, 925, 926, 928, 929, 931, 932, 933, 934, 935, 936, 938, 940, 942, 943, 945, 946, 947, 951, 952, 955, 957, 960, 961, 962, 964, 965, 966, 968, 970, 972, 973, 974, 979, 988, 990, 991, 992, 993, 994, 995, 997, 998, 999, 1002, 1003, 1005, 1006, 1007, 1011, 1012, 1019, 1023, 1024, 1025, 1028, 1032, 1033, 1039, 1042, 1045, 1046, 1049, 1050, 1057, 1062, 1069, 1080, 1087, 1088, 1089, 1091, 1099, 1106, 1108, 1109, 1112, 1113, 1116, 1123, 1124, 1125, 1126, 1127, 1128, 1133, 1134, 1139, 1142, 1144, 1145, 1148, 1153, 1155, 1158, 1171], "rot": [7, 204, 215], "gruen": [7, 204], "blau": [7, 204, 215], "67": [7, 161, 172, 184, 194, 199, 201, 204, 207, 210, 216, 223, 226, 231, 233, 239, 243, 246, 249, 252, 261, 264, 271, 281, 285, 291, 303, 307, 313, 330, 335, 340, 444, 509, 964, 1045, 1057, 1104, 1105], "69": [7, 61, 156, 161, 184, 189, 194, 199, 201, 204, 207, 210, 216, 220, 223, 226, 231, 233, 239, 243, 246, 249, 252, 261, 264, 271, 281, 285, 291, 303, 307, 313, 330, 1104, 1105, 1124], "schwarz": [7, 204, 215], "70": [7, 61, 153, 161, 184, 189, 191, 194, 199, 201, 204, 207, 210, 216, 223, 226, 231, 233, 239, 243, 246, 249, 252, 261, 264, 268, 271, 281, 285, 291, 303, 307, 313, 330, 444, 509, 906, 907, 908, 1002, 1104, 1105, 1133], "add": [7, 23, 42, 44, 49, 65, 112, 119, 121, 131, 133, 135, 146, 147, 151, 152, 153, 157, 158, 162, 166, 171, 180, 183, 184, 187, 190, 199, 201, 202, 204, 207, 210, 212, 216, 220, 223, 224, 226, 231, 236, 239, 243, 246, 249, 255, 256, 261, 264, 267, 271, 275, 281, 285, 291, 296, 298, 303, 307, 313, 316, 335, 341, 383, 384, 423, 424, 432, 445, 446, 452, 455, 462, 464, 465, 481, 482, 486, 491, 492, 503, 511, 518, 520, 538, 552, 562, 575, 576, 578, 580, 649, 650, 651, 660, 668, 688, 699, 710, 718, 732, 734, 768, 770, 771, 775, 782, 790, 792, 802, 815, 818, 828, 901, 906, 907, 908, 936, 960, 962, 964, 970, 975, 988, 990, 997, 998, 1020, 1024, 1032, 1050, 1055, 1122, 1133, 1134, 1140], "71": [7, 161, 184, 189, 194, 199, 201, 204, 207, 210, 216, 223, 226, 231, 233, 239, 243, 246, 249, 252, 261, 264, 271, 281, 285, 291, 303, 307, 313, 330, 335, 340, 977, 978, 1104, 1105], "72": [7, 161, 184, 189, 194, 199, 201, 204, 207, 210, 216, 223, 226, 231, 233, 239, 243, 246, 249, 252, 261, 264, 268, 271, 281, 285, 291, 303, 307, 313, 327, 330, 335, 340, 570, 893, 988, 1057, 1104, 1105], "remov": [7, 57, 99, 109, 114, 119, 120, 157, 158, 171, 173, 184, 199, 204, 210, 216, 224, 226, 231, 233, 239, 243, 246, 250, 251, 257, 264, 266, 267, 281, 285, 287, 288, 291, 302, 303, 307, 313, 447, 448, 466, 480, 508, 509, 510, 511, 512, 513, 514, 515, 516, 518, 525, 526, 527, 532, 536, 555, 560, 590, 596, 613, 646, 668, 721, 732, 733, 734, 750, 753, 754, 755, 763, 780, 790, 798, 821, 828, 829, 830, 831, 832, 835, 836, 849, 850, 852, 854, 855, 856, 857, 859, 860, 866, 867, 868, 869, 871, 872, 874, 876, 882, 898, 909, 919, 921, 927, 929, 932, 937, 939, 942, 953, 956, 959, 961, 978, 980, 981, 982, 983, 984, 985, 986, 987, 988, 992, 1002, 1022, 1032, 1047, 1048, 1049, 1082], "73": [7, 161, 172, 184, 194, 199, 201, 204, 207, 210, 216, 223, 226, 231, 233, 239, 243, 246, 252, 261, 264, 271, 281, 285, 291, 303, 307, 313, 327, 330, 1104], "74": [7, 154, 156, 161, 184, 194, 199, 201, 204, 207, 210, 216, 223, 226, 231, 233, 239, 243, 246, 249, 252, 261, 264, 271, 281, 285, 291, 303, 307, 313, 330, 884, 893, 1057, 1104, 1105], "75": [7, 161, 184, 194, 199, 201, 204, 207, 210, 212, 216, 220, 223, 226, 231, 233, 239, 243, 246, 249, 252, 261, 264, 271, 281, 285, 291, 303, 307, 313, 330, 444, 1104, 1105], "sum": [7, 38, 63, 184, 204, 208, 209, 223, 224, 226, 229, 231, 239, 242, 243, 246, 249, 264, 271, 313, 393, 408, 423, 425, 426, 428, 492, 518, 538, 562, 576, 578, 591, 595, 643, 657, 739, 741, 743, 745, 755, 961, 1019, 1035, 1118], "100": [7, 32, 112, 150, 151, 156, 166, 170, 171, 184, 194, 201, 204, 207, 210, 216, 220, 223, 226, 231, 233, 236, 239, 242, 243, 246, 249, 251, 252, 261, 264, 267, 268, 269, 271, 275, 281, 285, 291, 302, 303, 307, 313, 330, 331, 335, 340, 393, 399, 400, 442, 445, 458, 467, 500, 501, 509, 528, 590, 591, 592, 593, 594, 596, 597, 598, 599, 613, 660, 677, 698, 773, 812, 858, 861, 884, 901, 940, 962, 964, 968, 969, 977, 978, 1003, 1035, 1039, 1057, 1088, 1133], "5050": [7, 184, 204, 226, 239, 246, 271, 313], "bestimmen": [7, 204], "maximum": [7, 29, 144, 184, 194, 195, 197, 199, 202, 204, 207, 208, 214, 218, 220, 221, 223, 224, 226, 230, 231, 233, 234, 236, 239, 240, 242, 243, 245, 247, 248, 263, 264, 270, 271, 283, 284, 285, 289, 290, 311, 312, 319, 331, 383, 656, 734, 755, 763, 839, 899, 964, 970, 1042, 1059, 1061, 1062, 1063, 1066, 1069, 1072, 1073, 1079, 1080, 1081, 1082, 1083, 1084, 1098, 1099, 1103, 1104, 1105, 1106, 1128, 1163], "zwei": [7, 64, 160, 170, 178, 184, 196, 199, 201, 204, 207, 220, 223, 231, 236, 239, 243, 249, 271, 291, 299, 303, 307, 330, 526, 617, 618, 619, 620, 889, 1150, 1167], "inlin": [7, 131, 172, 178, 190, 204, 220, 249, 252, 254, 276, 303, 307, 313, 403, 425, 428, 549, 564, 578, 617, 654, 706, 724, 739, 741, 743, 744, 745, 746, 753, 996, 1075], "ohn": [7, 23, 168, 170, 178, 204, 207, 824, 890, 1149, 1169, 1170, 1171], "funktion": [7, 23, 174, 178, 184, 195, 196, 197, 201, 204, 207, 210, 231, 233, 236, 239, 271, 303, 330, 1163], "666": [7, 42, 50, 107, 120, 122, 170, 171, 184, 194, 199, 201, 204, 207, 210, 216, 220, 223, 226, 231, 233, 236, 239, 243, 246, 249, 252, 261, 264, 271, 281, 285, 291, 303, 307, 313, 326, 327, 328, 330, 331, 366, 446, 465, 520, 521, 522, 523, 524, 528, 529, 530, 531, 533, 534, 536, 543, 555, 562, 566, 575, 577, 600, 601, 602, 603, 604, 606, 609, 617, 620, 640, 644, 673, 675, 682, 684, 685, 686, 690, 710, 714, 717, 719, 724, 727, 739, 741, 743, 749, 750, 751, 760, 761, 995, 999, 1041, 1042, 1045, 1145], "var1": [7, 194, 204, 1065], "var2": [7, 194, 204, 1065], "6712": [7, 204, 226], "isn": [7, 150, 166, 204, 270, 273, 343, 357, 408, 595, 599, 638, 661, 688, 708, 906, 1044, 1140], "fehler": [7, 178, 184, 204, 335, 340], "link": [7, 13, 17, 27, 32, 44, 65, 103, 104, 114, 120, 125, 144, 147, 148, 150, 151, 157, 158, 159, 160, 161, 162, 168, 170, 178, 184, 191, 204, 227, 229, 257, 258, 266, 267, 275, 280, 287, 288, 293, 309, 335, 348, 349, 398, 411, 417, 421, 425, 430, 434, 439, 440, 445, 448, 450, 451, 456, 466, 480, 503, 508, 509, 510, 511, 512, 513, 514, 515, 518, 538, 545, 546, 560, 575, 662, 668, 676, 700, 710, 711, 752, 753, 754, 755, 763, 764, 768, 769, 772, 780, 783, 792, 793, 802, 804, 806, 811, 817, 820, 823, 832, 882, 884, 889, 898, 907, 914, 944, 947, 949, 976, 977, 978, 979, 981, 982, 983, 984, 986, 988, 994, 1099, 1127, 1137, 1140, 1147, 1148, 1155], "\u212c": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 187, 188, 190, 191, 192, 193, 195, 197, 198, 205, 208, 211, 212, 213, 214, 218, 221, 224, 227, 229, 230, 234, 237, 240, 242, 245, 251, 255, 256, 257, 258, 259, 266, 267, 269, 276, 277, 278, 279, 280, 287, 288, 293, 294, 295, 298, 301, 302, 305, 306, 309, 310, 315, 316, 317, 320, 321, 322, 323, 324, 326, 335, 342, 343, 344, 345, 346, 347, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 411, 412, 413, 415, 416, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 435, 436, 437, 438, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 481, 482, 489, 490, 491, 492, 493, 495, 496, 497, 503, 504, 505, 506, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 584, 585, 587, 588, 595, 596, 597, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 625, 627, 629, 631, 632, 634, 635, 636, 637, 638, 640, 641, 644, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 663, 664, 665, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 681, 682, 687, 688, 697, 698, 699, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 717, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 734, 735, 736, 739, 741, 743, 744, 745, 746, 753, 757, 758, 760, 761, 763, 765, 766, 768, 770, 771, 773, 779, 780, 782, 784, 786, 788, 790, 792, 794, 796, 798, 800, 804, 805, 807, 809, 810, 812, 815, 816, 818, 819, 821, 822, 824, 826, 827, 828, 833, 834, 837, 838, 839, 840, 841, 842, 844, 845, 846, 847, 858, 859, 860, 861, 862, 863, 864, 865, 881, 883, 884, 885, 886, 887, 888, 889, 890, 891, 893, 894, 895, 900, 901, 902, 903, 906, 909, 915, 916, 917, 918, 919, 920, 922, 923, 924, 925, 926, 927, 928, 931, 932, 933, 934, 935, 938, 940, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 954, 955, 957, 958, 960, 962, 963, 964, 976, 977, 978, 979, 984, 988, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1002, 1004, 1007, 1008, 1010, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1055, 1056, 1057, 1060, 1061, 1062, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1108, 1109, 1111, 1112, 1113, 1117, 1118, 1119, 1121, 1122, 1123, 1124, 1125, 1129, 1133, 1134, 1135, 1136, 1163], "\u2145": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 187, 188, 190, 191, 192, 193, 195, 197, 198, 205, 208, 211, 212, 213, 214, 218, 221, 224, 227, 229, 230, 234, 237, 240, 242, 245, 251, 255, 256, 257, 258, 259, 266, 267, 269, 276, 277, 278, 279, 280, 287, 288, 293, 294, 295, 298, 301, 302, 305, 306, 309, 310, 315, 316, 317, 320, 321, 322, 323, 324, 326, 335, 342, 343, 344, 345, 346, 347, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 411, 412, 413, 415, 416, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 435, 436, 437, 438, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 481, 482, 489, 490, 491, 492, 493, 495, 496, 497, 503, 504, 505, 506, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 584, 585, 587, 588, 595, 596, 597, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 625, 627, 629, 631, 632, 634, 635, 636, 637, 638, 640, 641, 644, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 663, 664, 665, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 681, 682, 687, 688, 697, 698, 699, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 717, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 734, 735, 736, 739, 741, 743, 744, 745, 746, 753, 757, 758, 760, 761, 763, 765, 766, 768, 770, 771, 773, 779, 780, 782, 784, 786, 788, 790, 792, 794, 796, 798, 800, 804, 805, 807, 809, 810, 812, 815, 816, 818, 819, 821, 822, 824, 826, 827, 828, 833, 834, 837, 838, 839, 840, 841, 842, 844, 845, 846, 847, 858, 859, 860, 861, 862, 863, 864, 865, 881, 883, 884, 885, 886, 887, 888, 889, 890, 891, 893, 894, 895, 900, 901, 902, 903, 906, 909, 915, 916, 917, 918, 919, 920, 922, 923, 924, 925, 926, 927, 928, 931, 932, 933, 934, 935, 938, 940, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 954, 955, 957, 958, 960, 962, 963, 964, 976, 977, 978, 979, 984, 988, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1002, 1004, 1007, 1008, 1010, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1055, 1056, 1057, 1060, 1061, 1062, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1108, 1109, 1111, 1112, 1113, 1117, 1118, 1119, 1121, 1122, 1123, 1124, 1125, 1129, 1133, 1134, 1135, 1136, 1163], "\u212d": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 187, 188, 190, 191, 192, 193, 195, 197, 198, 205, 208, 211, 212, 213, 214, 218, 221, 224, 227, 229, 230, 234, 237, 240, 242, 245, 251, 255, 256, 257, 258, 259, 266, 267, 269, 276, 277, 278, 279, 280, 287, 288, 293, 294, 295, 298, 301, 302, 305, 306, 309, 310, 315, 316, 317, 320, 321, 322, 323, 324, 326, 335, 342, 343, 344, 345, 346, 347, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 411, 412, 413, 415, 416, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 435, 436, 437, 438, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 481, 482, 489, 490, 491, 492, 493, 495, 496, 497, 503, 504, 505, 506, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 584, 585, 587, 588, 595, 596, 597, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 625, 627, 629, 631, 632, 634, 635, 636, 637, 638, 640, 641, 644, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 663, 664, 665, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 681, 682, 687, 688, 697, 698, 699, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 717, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 734, 735, 736, 739, 741, 743, 744, 745, 746, 753, 757, 758, 760, 761, 763, 765, 766, 768, 770, 771, 773, 779, 780, 782, 784, 786, 788, 790, 792, 794, 796, 798, 800, 804, 805, 807, 809, 810, 812, 815, 816, 818, 819, 821, 822, 824, 826, 827, 828, 833, 834, 837, 838, 839, 840, 841, 842, 844, 845, 846, 847, 858, 859, 860, 861, 862, 863, 864, 865, 881, 883, 884, 885, 886, 887, 888, 889, 890, 891, 893, 894, 895, 900, 901, 902, 903, 906, 909, 915, 916, 917, 918, 919, 920, 922, 923, 924, 925, 926, 927, 928, 931, 932, 933, 934, 935, 938, 940, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 954, 955, 957, 958, 960, 962, 963, 964, 976, 977, 978, 979, 984, 988, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1002, 1004, 1007, 1008, 1010, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1055, 1056, 1057, 1060, 1061, 1062, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1108, 1109, 1111, 1112, 1113, 1117, 1118, 1119, 1121, 1122, 1123, 1124, 1125, 1129, 1133, 1134, 1135, 1136, 1163], "\u2102": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 187, 188, 190, 191, 192, 193, 195, 197, 198, 205, 208, 211, 212, 213, 214, 218, 221, 224, 227, 229, 230, 234, 237, 240, 242, 245, 251, 255, 256, 257, 258, 259, 266, 267, 269, 276, 277, 278, 279, 280, 287, 288, 293, 294, 295, 298, 301, 302, 305, 306, 309, 310, 315, 316, 317, 320, 321, 322, 323, 324, 326, 335, 342, 343, 344, 345, 346, 347, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 411, 412, 413, 415, 416, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 435, 436, 437, 438, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 481, 482, 489, 490, 491, 492, 493, 495, 496, 497, 503, 504, 505, 506, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 584, 585, 587, 588, 595, 596, 597, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 625, 627, 629, 631, 632, 634, 635, 636, 637, 638, 640, 641, 644, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 663, 664, 665, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 681, 682, 687, 688, 697, 698, 699, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 717, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 734, 735, 736, 739, 741, 743, 744, 745, 746, 753, 757, 758, 760, 761, 763, 765, 766, 768, 770, 771, 773, 779, 780, 782, 784, 786, 788, 790, 792, 794, 796, 798, 800, 804, 805, 807, 809, 810, 812, 815, 816, 818, 819, 821, 822, 824, 826, 827, 828, 833, 834, 837, 838, 839, 840, 841, 842, 844, 845, 846, 847, 858, 859, 860, 861, 862, 863, 864, 865, 881, 883, 884, 885, 886, 887, 888, 889, 890, 891, 893, 894, 895, 900, 901, 902, 903, 906, 909, 915, 916, 917, 918, 919, 920, 922, 923, 924, 925, 926, 927, 928, 931, 932, 933, 934, 935, 938, 940, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 954, 955, 957, 958, 960, 962, 963, 964, 976, 977, 978, 979, 984, 988, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1002, 1004, 1007, 1008, 1010, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1055, 1056, 1057, 1060, 1061, 1062, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1108, 1109, 1111, 1112, 1113, 1117, 1118, 1119, 1121, 1122, 1123, 1124, 1125, 1129, 1133, 1134, 1135, 1136, 1163], "\u2146": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 187, 188, 190, 191, 192, 193, 195, 197, 198, 205, 208, 211, 212, 213, 214, 218, 221, 224, 227, 229, 230, 234, 237, 240, 242, 245, 251, 255, 256, 257, 258, 259, 266, 267, 269, 276, 277, 278, 279, 280, 287, 288, 293, 294, 295, 298, 301, 302, 305, 306, 309, 310, 315, 316, 317, 320, 321, 322, 323, 324, 326, 335, 342, 343, 344, 345, 346, 347, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 411, 412, 413, 415, 416, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 435, 436, 437, 438, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 481, 482, 489, 490, 491, 492, 493, 495, 496, 497, 503, 504, 505, 506, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 584, 585, 587, 588, 595, 596, 597, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 625, 627, 629, 631, 632, 634, 635, 636, 637, 638, 640, 641, 644, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 663, 664, 665, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 681, 682, 687, 688, 697, 698, 699, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 717, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 734, 735, 736, 739, 741, 743, 744, 745, 746, 753, 757, 758, 760, 761, 763, 765, 766, 768, 770, 771, 773, 779, 780, 782, 784, 786, 788, 790, 792, 794, 796, 798, 800, 804, 805, 807, 809, 810, 812, 815, 816, 818, 819, 821, 822, 824, 826, 827, 828, 833, 834, 837, 838, 839, 840, 841, 842, 844, 845, 846, 847, 858, 859, 860, 861, 862, 863, 864, 865, 881, 883, 884, 885, 886, 887, 888, 889, 890, 891, 893, 894, 895, 900, 901, 902, 903, 906, 909, 915, 916, 917, 918, 919, 920, 922, 923, 924, 925, 926, 927, 928, 931, 932, 933, 934, 935, 938, 940, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 954, 955, 957, 958, 960, 962, 963, 964, 976, 977, 978, 979, 984, 988, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1002, 1004, 1007, 1008, 1010, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1055, 1056, 1057, 1060, 1061, 1062, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1108, 1109, 1111, 1112, 1113, 1117, 1118, 1119, 1121, 1122, 1123, 1124, 1125, 1129, 1133, 1134, 1135, 1136, 1163], "\u03dd": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 187, 188, 190, 191, 192, 193, 195, 197, 198, 205, 208, 211, 212, 213, 214, 218, 221, 224, 227, 229, 230, 234, 237, 240, 242, 245, 251, 255, 256, 257, 258, 259, 266, 267, 269, 276, 277, 278, 279, 280, 287, 288, 293, 294, 295, 298, 301, 302, 305, 306, 309, 310, 315, 316, 317, 320, 321, 322, 323, 324, 326, 335, 342, 343, 344, 345, 346, 347, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 411, 412, 413, 415, 416, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 435, 436, 437, 438, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 481, 482, 489, 490, 491, 492, 493, 495, 496, 497, 503, 504, 505, 506, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 584, 585, 587, 588, 595, 596, 597, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 625, 627, 629, 631, 632, 634, 635, 636, 637, 638, 640, 641, 644, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 663, 664, 665, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 681, 682, 687, 688, 697, 698, 699, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 717, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 734, 735, 736, 739, 741, 743, 744, 745, 746, 753, 757, 758, 760, 761, 763, 765, 766, 768, 770, 771, 773, 779, 780, 782, 784, 786, 788, 790, 792, 794, 796, 798, 800, 804, 805, 807, 809, 810, 812, 815, 816, 818, 819, 821, 822, 824, 826, 827, 828, 833, 834, 837, 838, 839, 840, 841, 842, 844, 845, 846, 847, 858, 859, 860, 861, 862, 863, 864, 865, 881, 883, 884, 885, 886, 887, 888, 889, 890, 891, 893, 894, 895, 900, 901, 902, 903, 906, 909, 915, 916, 917, 918, 919, 920, 922, 923, 924, 925, 926, 927, 928, 931, 932, 933, 934, 935, 938, 940, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 954, 955, 957, 958, 960, 962, 963, 964, 976, 977, 978, 979, 984, 988, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1002, 1004, 1007, 1008, 1010, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1055, 1056, 1057, 1060, 1061, 1062, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1108, 1109, 1111, 1112, 1113, 1117, 1118, 1119, 1121, 1122, 1123, 1124, 1125, 1129, 1133, 1134, 1135, 1136, 1163], "\u2130": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 187, 188, 190, 191, 192, 193, 195, 197, 198, 205, 208, 211, 212, 213, 214, 218, 221, 224, 227, 229, 230, 234, 237, 240, 242, 245, 251, 255, 256, 257, 258, 259, 266, 267, 269, 276, 277, 278, 279, 280, 287, 288, 293, 294, 295, 298, 301, 302, 305, 306, 309, 310, 315, 316, 317, 320, 321, 322, 323, 324, 326, 335, 342, 343, 344, 345, 346, 347, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 411, 412, 413, 415, 416, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 435, 436, 437, 438, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 481, 482, 489, 490, 491, 492, 493, 495, 496, 497, 503, 504, 505, 506, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 584, 585, 587, 588, 595, 596, 597, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 625, 627, 629, 631, 632, 634, 635, 636, 637, 638, 640, 641, 644, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 663, 664, 665, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 681, 682, 687, 688, 697, 698, 699, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 717, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 734, 735, 736, 739, 741, 743, 744, 745, 746, 753, 757, 758, 760, 761, 763, 765, 766, 768, 770, 771, 773, 779, 780, 782, 784, 786, 788, 790, 792, 794, 796, 798, 800, 804, 805, 807, 809, 810, 812, 815, 816, 818, 819, 821, 822, 824, 826, 827, 828, 833, 834, 837, 838, 839, 840, 841, 842, 844, 845, 846, 847, 858, 859, 860, 861, 862, 863, 864, 865, 881, 883, 884, 885, 886, 887, 888, 889, 890, 891, 893, 894, 895, 900, 901, 902, 903, 906, 909, 915, 916, 917, 918, 919, 920, 922, 923, 924, 925, 926, 927, 928, 931, 932, 933, 934, 935, 938, 940, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 954, 955, 957, 958, 960, 962, 963, 964, 976, 977, 978, 979, 984, 988, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1002, 1004, 1007, 1008, 1010, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1055, 1056, 1057, 1060, 1061, 1062, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1108, 1109, 1111, 1112, 1113, 1117, 1118, 1119, 1121, 1122, 1123, 1124, 1125, 1129, 1133, 1134, 1135, 1136, 1163], "\u2147": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 187, 188, 190, 191, 192, 193, 195, 197, 198, 205, 208, 211, 212, 213, 214, 218, 221, 224, 227, 229, 230, 234, 237, 240, 242, 245, 251, 255, 256, 257, 258, 259, 266, 267, 269, 276, 277, 278, 279, 280, 287, 288, 293, 294, 295, 298, 301, 302, 305, 306, 309, 310, 315, 316, 317, 320, 321, 322, 323, 324, 326, 335, 342, 343, 344, 345, 346, 347, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 411, 412, 413, 415, 416, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 435, 436, 437, 438, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 481, 482, 489, 490, 491, 492, 493, 495, 496, 497, 503, 504, 505, 506, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 584, 585, 587, 588, 595, 596, 597, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 625, 627, 629, 631, 632, 634, 635, 636, 637, 638, 640, 641, 644, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 663, 664, 665, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 681, 682, 687, 688, 697, 698, 699, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 717, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 734, 735, 736, 739, 741, 743, 744, 745, 746, 753, 757, 758, 760, 761, 763, 765, 766, 768, 770, 771, 773, 779, 780, 782, 784, 786, 788, 790, 792, 794, 796, 798, 800, 804, 805, 807, 809, 810, 812, 815, 816, 818, 819, 821, 822, 824, 826, 827, 828, 833, 834, 837, 838, 839, 840, 841, 842, 844, 845, 846, 847, 858, 859, 860, 861, 862, 863, 864, 865, 881, 883, 884, 885, 886, 887, 888, 889, 890, 891, 893, 894, 895, 900, 901, 902, 903, 906, 909, 915, 916, 917, 918, 919, 920, 922, 923, 924, 925, 926, 927, 928, 931, 932, 933, 934, 935, 938, 940, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 954, 955, 957, 958, 960, 962, 963, 964, 976, 977, 978, 979, 984, 988, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1002, 1004, 1007, 1008, 1010, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1055, 1056, 1057, 1060, 1061, 1062, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1108, 1109, 1111, 1112, 1113, 1117, 1118, 1119, 1121, 1122, 1123, 1124, 1125, 1129, 1133, 1134, 1135, 1136, 1163], "\u2131": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 187, 188, 190, 191, 192, 193, 195, 197, 198, 205, 208, 211, 212, 213, 214, 218, 221, 224, 227, 229, 230, 234, 237, 240, 242, 245, 251, 255, 256, 257, 258, 259, 266, 267, 269, 276, 277, 278, 279, 280, 287, 288, 293, 294, 295, 298, 301, 302, 305, 306, 309, 310, 315, 316, 317, 320, 321, 322, 323, 324, 326, 335, 342, 343, 344, 345, 346, 347, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 411, 412, 413, 415, 416, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 435, 436, 437, 438, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 481, 482, 489, 490, 491, 492, 493, 495, 496, 497, 503, 504, 505, 506, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 584, 585, 587, 588, 595, 596, 597, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 625, 627, 629, 631, 632, 634, 635, 636, 637, 638, 640, 641, 644, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 663, 664, 665, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 681, 682, 687, 688, 697, 698, 699, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 717, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 734, 735, 736, 739, 741, 743, 744, 745, 746, 753, 757, 758, 760, 761, 763, 765, 766, 768, 770, 771, 773, 779, 780, 782, 784, 786, 788, 790, 792, 794, 796, 798, 800, 804, 805, 807, 809, 810, 812, 815, 816, 818, 819, 821, 822, 824, 826, 827, 828, 833, 834, 837, 838, 839, 840, 841, 842, 844, 845, 846, 847, 858, 859, 860, 861, 862, 863, 864, 865, 881, 883, 884, 885, 886, 887, 888, 889, 890, 891, 893, 894, 895, 900, 901, 902, 903, 906, 909, 915, 916, 917, 918, 919, 920, 922, 923, 924, 925, 926, 927, 928, 931, 932, 933, 934, 935, 938, 940, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 954, 955, 957, 958, 960, 962, 963, 964, 976, 977, 978, 979, 984, 988, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1002, 1004, 1007, 1008, 1010, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1055, 1056, 1057, 1060, 1061, 1062, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1108, 1109, 1111, 1112, 1113, 1117, 1118, 1119, 1121, 1122, 1123, 1124, 1125, 1129, 1133, 1134, 1135, 1136, 1163], "\u02c7": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 187, 188, 190, 191, 192, 193, 195, 197, 198, 205, 208, 211, 212, 213, 214, 218, 221, 224, 227, 229, 230, 234, 237, 240, 242, 245, 251, 255, 256, 257, 258, 259, 266, 267, 269, 276, 277, 278, 279, 280, 287, 288, 293, 294, 295, 298, 301, 302, 305, 306, 309, 310, 315, 316, 317, 320, 321, 322, 323, 324, 326, 335, 342, 343, 344, 345, 346, 347, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 411, 412, 413, 415, 416, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 435, 436, 437, 438, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 481, 482, 489, 490, 491, 492, 493, 495, 496, 497, 503, 504, 505, 506, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 584, 585, 587, 588, 595, 596, 597, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 625, 627, 629, 631, 632, 634, 635, 636, 637, 638, 640, 641, 644, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 663, 664, 665, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 681, 682, 687, 688, 697, 698, 699, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 717, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 734, 735, 736, 739, 741, 743, 744, 745, 746, 753, 757, 758, 760, 761, 763, 765, 766, 768, 770, 771, 773, 779, 780, 782, 784, 786, 788, 790, 792, 794, 796, 798, 800, 804, 805, 807, 809, 810, 812, 815, 816, 818, 819, 821, 822, 824, 826, 827, 828, 833, 834, 837, 838, 839, 840, 841, 842, 844, 845, 846, 847, 858, 859, 860, 861, 862, 863, 864, 865, 881, 883, 884, 885, 886, 887, 888, 889, 890, 891, 893, 894, 895, 900, 901, 902, 903, 906, 909, 915, 916, 917, 918, 919, 920, 922, 923, 924, 925, 926, 927, 928, 931, 932, 933, 934, 935, 938, 940, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 954, 955, 957, 958, 960, 962, 963, 964, 976, 977, 978, 979, 984, 988, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1002, 1004, 1007, 1008, 1010, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1055, 1056, 1057, 1060, 1061, 1062, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1108, 1109, 1111, 1112, 1113, 1117, 1118, 1119, 1121, 1122, 1123, 1124, 1125, 1129, 1133, 1134, 1135, 1136, 1163], "\u210f": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 187, 188, 190, 191, 192, 193, 195, 197, 198, 205, 208, 211, 212, 213, 214, 218, 221, 224, 227, 229, 230, 234, 237, 240, 242, 245, 251, 255, 256, 257, 258, 259, 266, 267, 269, 276, 277, 278, 279, 280, 287, 288, 293, 294, 295, 298, 301, 302, 305, 306, 309, 310, 315, 316, 317, 320, 321, 322, 323, 324, 326, 335, 342, 343, 344, 345, 346, 347, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 411, 412, 413, 415, 416, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 435, 436, 437, 438, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 481, 482, 489, 490, 491, 492, 493, 495, 496, 497, 503, 504, 505, 506, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 584, 585, 587, 588, 595, 596, 597, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 625, 627, 629, 631, 632, 634, 635, 636, 637, 638, 640, 641, 644, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 663, 664, 665, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 681, 682, 687, 688, 697, 698, 699, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 717, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 734, 735, 736, 739, 741, 743, 744, 745, 746, 753, 757, 758, 760, 761, 763, 765, 766, 768, 770, 771, 773, 779, 780, 782, 784, 786, 788, 790, 792, 794, 796, 798, 800, 804, 805, 807, 809, 810, 812, 815, 816, 818, 819, 821, 822, 824, 826, 827, 828, 833, 834, 837, 838, 839, 840, 841, 842, 844, 845, 846, 847, 858, 859, 860, 861, 862, 863, 864, 865, 881, 883, 884, 885, 886, 887, 888, 889, 890, 891, 893, 894, 895, 900, 901, 902, 903, 906, 909, 915, 916, 917, 918, 919, 920, 922, 923, 924, 925, 926, 927, 928, 931, 932, 933, 934, 935, 938, 940, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 954, 955, 957, 958, 960, 962, 963, 964, 976, 977, 978, 979, 984, 988, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1002, 1004, 1007, 1008, 1010, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1055, 1056, 1057, 1060, 1061, 1062, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1108, 1109, 1111, 1112, 1113, 1117, 1118, 1119, 1121, 1122, 1123, 1124, 1125, 1129, 1133, 1134, 1135, 1136, 1163], "\u210b": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 187, 188, 190, 191, 192, 193, 195, 197, 198, 205, 208, 211, 212, 213, 214, 218, 221, 224, 227, 229, 230, 234, 237, 240, 242, 245, 251, 255, 256, 257, 258, 259, 266, 267, 269, 276, 277, 278, 279, 280, 287, 288, 293, 294, 295, 298, 301, 302, 305, 306, 309, 310, 315, 316, 317, 320, 321, 322, 323, 324, 326, 335, 342, 343, 344, 345, 346, 347, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 411, 412, 413, 415, 416, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 435, 436, 437, 438, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 481, 482, 489, 490, 491, 492, 493, 495, 496, 497, 503, 504, 505, 506, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 584, 585, 587, 588, 595, 596, 597, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 625, 627, 629, 631, 632, 634, 635, 636, 637, 638, 640, 641, 644, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 663, 664, 665, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 681, 682, 687, 688, 697, 698, 699, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 717, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 734, 735, 736, 739, 741, 743, 744, 745, 746, 753, 757, 758, 760, 761, 763, 765, 766, 768, 770, 771, 773, 779, 780, 782, 784, 786, 788, 790, 792, 794, 796, 798, 800, 804, 805, 807, 809, 810, 812, 815, 816, 818, 819, 821, 822, 824, 826, 827, 828, 833, 834, 837, 838, 839, 840, 841, 842, 844, 845, 846, 847, 858, 859, 860, 861, 862, 863, 864, 865, 881, 883, 884, 885, 886, 887, 888, 889, 890, 891, 893, 894, 895, 900, 901, 902, 903, 906, 909, 915, 916, 917, 918, 919, 920, 922, 923, 924, 925, 926, 927, 928, 931, 932, 933, 934, 935, 938, 940, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 954, 955, 957, 958, 960, 962, 963, 964, 976, 977, 978, 979, 984, 988, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1002, 1004, 1007, 1008, 1010, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1055, 1056, 1057, 1060, 1061, 1062, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1108, 1109, 1111, 1112, 1113, 1117, 1118, 1119, 1121, 1122, 1123, 1124, 1125, 1129, 1133, 1134, 1135, 1136, 1163], "\u2111": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 187, 188, 190, 191, 192, 193, 195, 197, 198, 205, 208, 211, 212, 213, 214, 218, 221, 224, 227, 229, 230, 234, 237, 240, 242, 245, 251, 255, 256, 257, 258, 259, 266, 267, 269, 276, 277, 278, 279, 280, 287, 288, 293, 294, 295, 298, 301, 302, 305, 306, 309, 310, 315, 316, 317, 320, 321, 322, 323, 324, 326, 335, 342, 343, 344, 345, 346, 347, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 411, 412, 413, 415, 416, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 435, 436, 437, 438, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 481, 482, 489, 490, 491, 492, 493, 495, 496, 497, 503, 504, 505, 506, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 584, 585, 587, 588, 595, 596, 597, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 625, 627, 629, 631, 632, 634, 635, 636, 637, 638, 640, 641, 644, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 663, 664, 665, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 681, 682, 687, 688, 697, 698, 699, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 717, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 734, 735, 736, 739, 741, 743, 744, 745, 746, 753, 757, 758, 760, 761, 763, 765, 766, 768, 770, 771, 773, 779, 780, 782, 784, 786, 788, 790, 792, 794, 796, 798, 800, 804, 805, 807, 809, 810, 812, 815, 816, 818, 819, 821, 822, 824, 826, 827, 828, 833, 834, 837, 838, 839, 840, 841, 842, 844, 845, 846, 847, 858, 859, 860, 861, 862, 863, 864, 865, 881, 883, 884, 885, 886, 887, 888, 889, 890, 891, 893, 894, 895, 900, 901, 902, 903, 906, 909, 915, 916, 917, 918, 919, 920, 922, 923, 924, 925, 926, 927, 928, 931, 932, 933, 934, 935, 938, 940, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 954, 955, 957, 958, 960, 962, 963, 964, 976, 977, 978, 979, 984, 988, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1002, 1004, 1007, 1008, 1010, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1055, 1056, 1057, 1060, 1061, 1062, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1108, 1109, 1111, 1112, 1113, 1117, 1118, 1119, 1121, 1122, 1123, 1124, 1125, 1129, 1133, 1134, 1135, 1136, 1163], "\u2148": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 187, 188, 190, 191, 192, 193, 195, 197, 198, 205, 208, 211, 212, 213, 214, 218, 221, 224, 227, 229, 230, 234, 237, 240, 242, 245, 251, 255, 256, 257, 258, 259, 266, 267, 269, 276, 277, 278, 279, 280, 287, 288, 293, 294, 295, 298, 301, 302, 305, 306, 309, 310, 315, 316, 317, 320, 321, 322, 323, 324, 326, 335, 342, 343, 344, 345, 346, 347, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 411, 412, 413, 415, 416, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 435, 436, 437, 438, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 481, 482, 489, 490, 491, 492, 493, 495, 496, 497, 503, 504, 505, 506, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 584, 585, 587, 588, 595, 596, 597, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 625, 627, 629, 631, 632, 634, 635, 636, 637, 638, 640, 641, 644, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 663, 664, 665, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 681, 682, 687, 688, 697, 698, 699, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 717, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 734, 735, 736, 739, 741, 743, 744, 745, 746, 753, 757, 758, 760, 761, 763, 765, 766, 768, 770, 771, 773, 779, 780, 782, 784, 786, 788, 790, 792, 794, 796, 798, 800, 804, 805, 807, 809, 810, 812, 815, 816, 818, 819, 821, 822, 824, 826, 827, 828, 833, 834, 837, 838, 839, 840, 841, 842, 844, 845, 846, 847, 858, 859, 860, 861, 862, 863, 864, 865, 881, 883, 884, 885, 886, 887, 888, 889, 890, 891, 893, 894, 895, 900, 901, 902, 903, 906, 909, 915, 916, 917, 918, 919, 920, 922, 923, 924, 925, 926, 927, 928, 931, 932, 933, 934, 935, 938, 940, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 954, 955, 957, 958, 960, 962, 963, 964, 976, 977, 978, 979, 984, 988, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1002, 1004, 1007, 1008, 1010, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1055, 1056, 1057, 1060, 1061, 1062, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1108, 1109, 1111, 1112, 1113, 1117, 1118, 1119, 1121, 1122, 1123, 1124, 1125, 1129, 1133, 1134, 1135, 1136, 1163], "\u2110": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 187, 188, 190, 191, 192, 193, 195, 197, 198, 205, 208, 211, 212, 213, 214, 218, 221, 224, 227, 229, 230, 234, 237, 240, 242, 245, 251, 255, 256, 257, 258, 259, 266, 267, 269, 276, 277, 278, 279, 280, 287, 288, 293, 294, 295, 298, 301, 302, 305, 306, 309, 310, 315, 316, 317, 320, 321, 322, 323, 324, 326, 335, 342, 343, 344, 345, 346, 347, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 411, 412, 413, 415, 416, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 435, 436, 437, 438, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 481, 482, 489, 490, 491, 492, 493, 495, 496, 497, 503, 504, 505, 506, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 584, 585, 587, 588, 595, 596, 597, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 625, 627, 629, 631, 632, 634, 635, 636, 637, 638, 640, 641, 644, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 663, 664, 665, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 681, 682, 687, 688, 697, 698, 699, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 717, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 734, 735, 736, 739, 741, 743, 744, 745, 746, 753, 757, 758, 760, 761, 763, 765, 766, 768, 770, 771, 773, 779, 780, 782, 784, 786, 788, 790, 792, 794, 796, 798, 800, 804, 805, 807, 809, 810, 812, 815, 816, 818, 819, 821, 822, 824, 826, 827, 828, 833, 834, 837, 838, 839, 840, 841, 842, 844, 845, 846, 847, 858, 859, 860, 861, 862, 863, 864, 865, 881, 883, 884, 885, 886, 887, 888, 889, 890, 891, 893, 894, 895, 900, 901, 902, 903, 906, 909, 915, 916, 917, 918, 919, 920, 922, 923, 924, 925, 926, 927, 928, 931, 932, 933, 934, 935, 938, 940, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 954, 955, 957, 958, 960, 962, 963, 964, 976, 977, 978, 979, 984, 988, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1002, 1004, 1007, 1008, 1010, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1055, 1056, 1057, 1060, 1061, 1062, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1108, 1109, 1111, 1112, 1113, 1117, 1118, 1119, 1121, 1122, 1123, 1124, 1125, 1129, 1133, 1134, 1135, 1136, 1163], "\u2124": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 187, 188, 190, 191, 192, 193, 195, 197, 198, 205, 208, 211, 212, 213, 214, 218, 221, 224, 227, 229, 230, 234, 237, 240, 242, 245, 251, 255, 256, 257, 258, 259, 266, 267, 269, 276, 277, 278, 279, 280, 287, 288, 293, 294, 295, 298, 301, 302, 305, 306, 309, 310, 315, 316, 317, 320, 321, 322, 323, 324, 326, 335, 342, 343, 344, 345, 346, 347, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 411, 412, 413, 415, 416, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 435, 436, 437, 438, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 481, 482, 489, 490, 491, 492, 493, 495, 496, 497, 503, 504, 505, 506, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 584, 585, 587, 588, 595, 596, 597, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 625, 627, 629, 631, 632, 634, 635, 636, 637, 638, 640, 641, 644, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 663, 664, 665, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 681, 682, 687, 688, 697, 698, 699, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 717, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 734, 735, 736, 739, 741, 743, 744, 745, 746, 753, 757, 758, 760, 761, 763, 765, 766, 768, 770, 771, 773, 779, 780, 782, 784, 786, 788, 790, 792, 794, 796, 798, 800, 804, 805, 807, 809, 810, 812, 815, 816, 818, 819, 821, 822, 824, 826, 827, 828, 833, 834, 837, 838, 839, 840, 841, 842, 844, 845, 846, 847, 858, 859, 860, 861, 862, 863, 864, 865, 881, 883, 884, 885, 886, 887, 888, 889, 890, 891, 893, 894, 895, 900, 901, 902, 903, 906, 909, 915, 916, 917, 918, 919, 920, 922, 923, 924, 925, 926, 927, 928, 931, 932, 933, 934, 935, 938, 940, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 954, 955, 957, 958, 960, 962, 963, 964, 976, 977, 978, 979, 984, 988, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1002, 1004, 1007, 1008, 1010, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1055, 1056, 1057, 1060, 1061, 1062, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1108, 1109, 1111, 1112, 1113, 1117, 1118, 1119, 1121, 1122, 1123, 1124, 1125, 1129, 1133, 1134, 1135, 1136, 1163], "\u2112": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 187, 188, 190, 191, 192, 193, 195, 197, 198, 205, 208, 211, 212, 213, 214, 218, 221, 224, 227, 229, 230, 234, 237, 240, 242, 245, 251, 255, 256, 257, 258, 259, 266, 267, 269, 276, 277, 278, 279, 280, 287, 288, 293, 294, 295, 298, 301, 302, 305, 306, 309, 310, 315, 316, 317, 320, 321, 322, 323, 324, 326, 335, 342, 343, 344, 345, 346, 347, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 411, 412, 413, 415, 416, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 435, 436, 437, 438, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 481, 482, 489, 490, 491, 492, 493, 495, 496, 497, 503, 504, 505, 506, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 584, 585, 587, 588, 595, 596, 597, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 625, 627, 629, 631, 632, 634, 635, 636, 637, 638, 640, 641, 644, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 663, 664, 665, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 681, 682, 687, 688, 697, 698, 699, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 717, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 734, 735, 736, 739, 741, 743, 744, 745, 746, 753, 757, 758, 760, 761, 763, 765, 766, 768, 770, 771, 773, 779, 780, 782, 784, 786, 788, 790, 792, 794, 796, 798, 800, 804, 805, 807, 809, 810, 812, 815, 816, 818, 819, 821, 822, 824, 826, 827, 828, 833, 834, 837, 838, 839, 840, 841, 842, 844, 845, 846, 847, 858, 859, 860, 861, 862, 863, 864, 865, 881, 883, 884, 885, 886, 887, 888, 889, 890, 891, 893, 894, 895, 900, 901, 902, 903, 906, 909, 915, 916, 917, 918, 919, 920, 922, 923, 924, 925, 926, 927, 928, 931, 932, 933, 934, 935, 938, 940, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 954, 955, 957, 958, 960, 962, 963, 964, 976, 977, 978, 979, 984, 988, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1002, 1004, 1007, 1008, 1010, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1055, 1056, 1057, 1060, 1061, 1062, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1108, 1109, 1111, 1112, 1113, 1117, 1118, 1119, 1121, 1122, 1123, 1124, 1125, 1129, 1133, 1134, 1135, 1136, 1163], "\u2133": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 187, 188, 190, 191, 192, 193, 195, 197, 198, 205, 208, 211, 212, 213, 214, 218, 221, 224, 227, 229, 230, 234, 237, 240, 242, 245, 251, 255, 256, 257, 258, 259, 266, 267, 269, 276, 277, 278, 279, 280, 287, 288, 293, 294, 295, 298, 301, 302, 305, 306, 309, 310, 315, 316, 317, 320, 321, 322, 323, 324, 326, 335, 342, 343, 344, 345, 346, 347, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 411, 412, 413, 415, 416, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 435, 436, 437, 438, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 481, 482, 489, 490, 491, 492, 493, 495, 496, 497, 503, 504, 505, 506, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 584, 585, 587, 588, 595, 596, 597, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 625, 627, 629, 631, 632, 634, 635, 636, 637, 638, 640, 641, 644, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 663, 664, 665, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 681, 682, 687, 688, 697, 698, 699, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 717, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 734, 735, 736, 739, 741, 743, 744, 745, 746, 753, 757, 758, 760, 761, 763, 765, 766, 768, 770, 771, 773, 779, 780, 782, 784, 786, 788, 790, 792, 794, 796, 798, 800, 804, 805, 807, 809, 810, 812, 815, 816, 818, 819, 821, 822, 824, 826, 827, 828, 833, 834, 837, 838, 839, 840, 841, 842, 844, 845, 846, 847, 858, 859, 860, 861, 862, 863, 864, 865, 881, 883, 884, 885, 886, 887, 888, 889, 890, 891, 893, 894, 895, 900, 901, 902, 903, 906, 909, 915, 916, 917, 918, 919, 920, 922, 923, 924, 925, 926, 927, 928, 931, 932, 933, 934, 935, 938, 940, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 954, 955, 957, 958, 960, 962, 963, 964, 976, 977, 978, 979, 984, 988, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1002, 1004, 1007, 1008, 1010, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1055, 1056, 1057, 1060, 1061, 1062, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1108, 1109, 1111, 1112, 1113, 1117, 1118, 1119, 1121, 1122, 1123, 1124, 1125, 1129, 1133, 1134, 1135, 1136, 1163], "\u2115": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 187, 188, 190, 191, 192, 193, 195, 197, 198, 205, 208, 211, 212, 213, 214, 218, 221, 224, 227, 229, 230, 234, 237, 240, 242, 245, 251, 255, 256, 257, 258, 259, 266, 267, 269, 276, 277, 278, 279, 280, 287, 288, 293, 294, 295, 298, 301, 302, 305, 306, 309, 310, 315, 316, 317, 320, 321, 322, 323, 324, 326, 335, 342, 343, 344, 345, 346, 347, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 411, 412, 413, 415, 416, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 435, 436, 437, 438, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 481, 482, 489, 490, 491, 492, 493, 495, 496, 497, 503, 504, 505, 506, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 584, 585, 587, 588, 595, 596, 597, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 625, 627, 629, 631, 632, 634, 635, 636, 637, 638, 640, 641, 644, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 663, 664, 665, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 681, 682, 687, 688, 697, 698, 699, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 717, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 734, 735, 736, 739, 741, 743, 744, 745, 746, 753, 757, 758, 760, 761, 763, 765, 766, 768, 770, 771, 773, 779, 780, 782, 784, 786, 788, 790, 792, 794, 796, 798, 800, 804, 805, 807, 809, 810, 812, 815, 816, 818, 819, 821, 822, 824, 826, 827, 828, 833, 834, 837, 838, 839, 840, 841, 842, 844, 845, 846, 847, 858, 859, 860, 861, 862, 863, 864, 865, 881, 883, 884, 885, 886, 887, 888, 889, 890, 891, 893, 894, 895, 900, 901, 902, 903, 906, 909, 915, 916, 917, 918, 919, 920, 922, 923, 924, 925, 926, 927, 928, 931, 932, 933, 934, 935, 938, 940, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 954, 955, 957, 958, 960, 962, 963, 964, 976, 977, 978, 979, 984, 988, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1002, 1004, 1007, 1008, 1010, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1055, 1056, 1057, 1060, 1061, 1062, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1108, 1109, 1111, 1112, 1113, 1117, 1118, 1119, 1121, 1122, 1123, 1124, 1125, 1129, 1133, 1134, 1135, 1136, 1163], "\u2134": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 187, 188, 190, 191, 192, 193, 195, 197, 198, 205, 208, 211, 212, 213, 214, 218, 221, 224, 227, 229, 230, 234, 237, 240, 242, 245, 251, 255, 256, 257, 258, 259, 266, 267, 269, 276, 277, 278, 279, 280, 287, 288, 293, 294, 295, 298, 301, 302, 305, 306, 309, 310, 315, 316, 317, 320, 321, 322, 323, 324, 326, 335, 342, 343, 344, 345, 346, 347, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 411, 412, 413, 415, 416, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 435, 436, 437, 438, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 481, 482, 489, 490, 491, 492, 493, 495, 496, 497, 503, 504, 505, 506, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 584, 585, 587, 588, 595, 596, 597, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 625, 627, 629, 631, 632, 634, 635, 636, 637, 638, 640, 641, 644, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 663, 664, 665, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 681, 682, 687, 688, 697, 698, 699, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 717, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 734, 735, 736, 739, 741, 743, 744, 745, 746, 753, 757, 758, 760, 761, 763, 765, 766, 768, 770, 771, 773, 779, 780, 782, 784, 786, 788, 790, 792, 794, 796, 798, 800, 804, 805, 807, 809, 810, 812, 815, 816, 818, 819, 821, 822, 824, 826, 827, 828, 833, 834, 837, 838, 839, 840, 841, 842, 844, 845, 846, 847, 858, 859, 860, 861, 862, 863, 864, 865, 881, 883, 884, 885, 886, 887, 888, 889, 890, 891, 893, 894, 895, 900, 901, 902, 903, 906, 909, 915, 916, 917, 918, 919, 920, 922, 923, 924, 925, 926, 927, 928, 931, 932, 933, 934, 935, 938, 940, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 954, 955, 957, 958, 960, 962, 963, 964, 976, 977, 978, 979, 984, 988, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1002, 1004, 1007, 1008, 1010, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1055, 1056, 1057, 1060, 1061, 1062, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1108, 1109, 1111, 1112, 1113, 1117, 1118, 1119, 1121, 1122, 1123, 1124, 1125, 1129, 1133, 1134, 1135, 1136, 1163], "\u210c": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 187, 188, 190, 191, 192, 193, 195, 197, 198, 205, 208, 211, 212, 213, 214, 218, 221, 224, 227, 229, 230, 234, 237, 240, 242, 245, 251, 255, 256, 257, 258, 259, 266, 267, 269, 276, 277, 278, 279, 280, 287, 288, 293, 294, 295, 298, 301, 302, 305, 306, 309, 310, 315, 316, 317, 320, 321, 322, 323, 324, 326, 335, 342, 343, 344, 345, 346, 347, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 411, 412, 413, 415, 416, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 435, 436, 437, 438, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 481, 482, 489, 490, 491, 492, 493, 495, 496, 497, 503, 504, 505, 506, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 584, 585, 587, 588, 595, 596, 597, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 625, 627, 629, 631, 632, 634, 635, 636, 637, 638, 640, 641, 644, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 663, 664, 665, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 681, 682, 687, 688, 697, 698, 699, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 717, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 734, 735, 736, 739, 741, 743, 744, 745, 746, 753, 757, 758, 760, 761, 763, 765, 766, 768, 770, 771, 773, 779, 780, 782, 784, 786, 788, 790, 792, 794, 796, 798, 800, 804, 805, 807, 809, 810, 812, 815, 816, 818, 819, 821, 822, 824, 826, 827, 828, 833, 834, 837, 838, 839, 840, 841, 842, 844, 845, 846, 847, 858, 859, 860, 861, 862, 863, 864, 865, 881, 883, 884, 885, 886, 887, 888, 889, 890, 891, 893, 894, 895, 900, 901, 902, 903, 906, 909, 915, 916, 917, 918, 919, 920, 922, 923, 924, 925, 926, 927, 928, 931, 932, 933, 934, 935, 938, 940, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 954, 955, 957, 958, 960, 962, 963, 964, 976, 977, 978, 979, 984, 988, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1002, 1004, 1007, 1008, 1010, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1055, 1056, 1057, 1060, 1061, 1062, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1108, 1109, 1111, 1112, 1113, 1117, 1118, 1119, 1121, 1122, 1123, 1124, 1125, 1129, 1133, 1134, 1135, 1136, 1163], "\u2119": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 187, 188, 190, 191, 192, 193, 195, 197, 198, 205, 208, 211, 212, 213, 214, 218, 221, 224, 227, 229, 230, 234, 237, 240, 242, 245, 251, 255, 256, 257, 258, 259, 266, 267, 269, 276, 277, 278, 279, 280, 287, 288, 293, 294, 295, 298, 301, 302, 305, 306, 309, 310, 315, 316, 317, 320, 321, 322, 323, 324, 326, 335, 342, 343, 344, 345, 346, 347, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 411, 412, 413, 415, 416, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 435, 436, 437, 438, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 481, 482, 489, 490, 491, 492, 493, 495, 496, 497, 503, 504, 505, 506, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 584, 585, 587, 588, 595, 596, 597, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 625, 627, 629, 631, 632, 634, 635, 636, 637, 638, 640, 641, 644, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 663, 664, 665, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 681, 682, 687, 688, 697, 698, 699, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 717, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 734, 735, 736, 739, 741, 743, 744, 745, 746, 753, 757, 758, 760, 761, 763, 765, 766, 768, 770, 771, 773, 779, 780, 782, 784, 786, 788, 790, 792, 794, 796, 798, 800, 804, 805, 807, 809, 810, 812, 815, 816, 818, 819, 821, 822, 824, 826, 827, 828, 833, 834, 837, 838, 839, 840, 841, 842, 844, 845, 846, 847, 858, 859, 860, 861, 862, 863, 864, 865, 881, 883, 884, 885, 886, 887, 888, 889, 890, 891, 893, 894, 895, 900, 901, 902, 903, 906, 909, 915, 916, 917, 918, 919, 920, 922, 923, 924, 925, 926, 927, 928, 931, 932, 933, 934, 935, 938, 940, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 954, 955, 957, 958, 960, 962, 963, 964, 976, 977, 978, 979, 984, 988, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1002, 1004, 1007, 1008, 1010, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1055, 1056, 1057, 1060, 1061, 1062, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1108, 1109, 1111, 1112, 1113, 1117, 1118, 1119, 1121, 1122, 1123, 1124, 1125, 1129, 1133, 1134, 1135, 1136, 1163], "\u210d": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 187, 188, 190, 191, 192, 193, 195, 197, 198, 205, 208, 211, 212, 213, 214, 218, 221, 224, 227, 229, 230, 234, 237, 240, 242, 245, 251, 255, 256, 257, 258, 259, 266, 267, 269, 276, 277, 278, 279, 280, 287, 288, 293, 294, 295, 298, 301, 302, 305, 306, 309, 310, 315, 316, 317, 320, 321, 322, 323, 324, 326, 335, 342, 343, 344, 345, 346, 347, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 411, 412, 413, 415, 416, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 435, 436, 437, 438, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 481, 482, 489, 490, 491, 492, 493, 495, 496, 497, 503, 504, 505, 506, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 584, 585, 587, 588, 595, 596, 597, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 625, 627, 629, 631, 632, 634, 635, 636, 637, 638, 640, 641, 644, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 663, 664, 665, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 681, 682, 687, 688, 697, 698, 699, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 717, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 734, 735, 736, 739, 741, 743, 744, 745, 746, 753, 757, 758, 760, 761, 763, 765, 766, 768, 770, 771, 773, 779, 780, 782, 784, 786, 788, 790, 792, 794, 796, 798, 800, 804, 805, 807, 809, 810, 812, 815, 816, 818, 819, 821, 822, 824, 826, 827, 828, 833, 834, 837, 838, 839, 840, 841, 842, 844, 845, 846, 847, 858, 859, 860, 861, 862, 863, 864, 865, 881, 883, 884, 885, 886, 887, 888, 889, 890, 891, 893, 894, 895, 900, 901, 902, 903, 906, 909, 915, 916, 917, 918, 919, 920, 922, 923, 924, 925, 926, 927, 928, 931, 932, 933, 934, 935, 938, 940, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 954, 955, 957, 958, 960, 962, 963, 964, 976, 977, 978, 979, 984, 988, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1002, 1004, 1007, 1008, 1010, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1055, 1056, 1057, 1060, 1061, 1062, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1108, 1109, 1111, 1112, 1113, 1117, 1118, 1119, 1121, 1122, 1123, 1124, 1125, 1129, 1133, 1134, 1135, 1136, 1163], "\u211a": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 187, 188, 190, 191, 192, 193, 195, 197, 198, 205, 208, 211, 212, 213, 214, 218, 221, 224, 227, 229, 230, 234, 237, 240, 242, 245, 251, 255, 256, 257, 258, 259, 266, 267, 269, 276, 277, 278, 279, 280, 287, 288, 293, 294, 295, 298, 301, 302, 305, 306, 309, 310, 315, 316, 317, 320, 321, 322, 323, 324, 326, 335, 342, 343, 344, 345, 346, 347, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 411, 412, 413, 415, 416, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 435, 436, 437, 438, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 481, 482, 489, 490, 491, 492, 493, 495, 496, 497, 503, 504, 505, 506, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 584, 585, 587, 588, 595, 596, 597, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 625, 627, 629, 631, 632, 634, 635, 636, 637, 638, 640, 641, 644, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 663, 664, 665, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 681, 682, 687, 688, 697, 698, 699, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 717, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 734, 735, 736, 739, 741, 743, 744, 745, 746, 753, 757, 758, 760, 761, 763, 765, 766, 768, 770, 771, 773, 779, 780, 782, 784, 786, 788, 790, 792, 794, 796, 798, 800, 804, 805, 807, 809, 810, 812, 815, 816, 818, 819, 821, 822, 824, 826, 827, 828, 833, 834, 837, 838, 839, 840, 841, 842, 844, 845, 846, 847, 858, 859, 860, 861, 862, 863, 864, 865, 881, 883, 884, 885, 886, 887, 888, 889, 890, 891, 893, 894, 895, 900, 901, 902, 903, 906, 909, 915, 916, 917, 918, 919, 920, 922, 923, 924, 925, 926, 927, 928, 931, 932, 933, 934, 935, 938, 940, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 954, 955, 957, 958, 960, 962, 963, 964, 976, 977, 978, 979, 984, 988, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1002, 1004, 1007, 1008, 1010, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1055, 1056, 1057, 1060, 1061, 1062, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1108, 1109, 1111, 1112, 1113, 1117, 1118, 1119, 1121, 1122, 1123, 1124, 1125, 1129, 1133, 1134, 1135, 1136, 1163], "\u211c": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 187, 188, 190, 191, 192, 193, 195, 197, 198, 205, 208, 211, 212, 213, 214, 218, 221, 224, 227, 229, 230, 234, 237, 240, 242, 245, 251, 255, 256, 257, 258, 259, 266, 267, 269, 276, 277, 278, 279, 280, 287, 288, 293, 294, 295, 298, 301, 302, 305, 306, 309, 310, 315, 316, 317, 320, 321, 322, 323, 324, 326, 335, 342, 343, 344, 345, 346, 347, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 411, 412, 413, 415, 416, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 435, 436, 437, 438, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 481, 482, 489, 490, 491, 492, 493, 495, 496, 497, 503, 504, 505, 506, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 584, 585, 587, 588, 595, 596, 597, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 625, 627, 629, 631, 632, 634, 635, 636, 637, 638, 640, 641, 644, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 663, 664, 665, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 681, 682, 687, 688, 697, 698, 699, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 717, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 734, 735, 736, 739, 741, 743, 744, 745, 746, 753, 757, 758, 760, 761, 763, 765, 766, 768, 770, 771, 773, 779, 780, 782, 784, 786, 788, 790, 792, 794, 796, 798, 800, 804, 805, 807, 809, 810, 812, 815, 816, 818, 819, 821, 822, 824, 826, 827, 828, 833, 834, 837, 838, 839, 840, 841, 842, 844, 845, 846, 847, 858, 859, 860, 861, 862, 863, 864, 865, 881, 883, 884, 885, 886, 887, 888, 889, 890, 891, 893, 894, 895, 900, 901, 902, 903, 906, 909, 915, 916, 917, 918, 919, 920, 922, 923, 924, 925, 926, 927, 928, 931, 932, 933, 934, 935, 938, 940, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 954, 955, 957, 958, 960, 962, 963, 964, 976, 977, 978, 979, 984, 988, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1002, 1004, 1007, 1008, 1010, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1055, 1056, 1057, 1060, 1061, 1062, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1108, 1109, 1111, 1112, 1113, 1117, 1118, 1119, 1121, 1122, 1123, 1124, 1125, 1129, 1133, 1134, 1135, 1136, 1163], "\u211b": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 187, 188, 190, 191, 192, 193, 195, 197, 198, 205, 208, 211, 212, 213, 214, 218, 221, 224, 227, 229, 230, 234, 237, 240, 242, 245, 251, 255, 256, 257, 258, 259, 266, 267, 269, 276, 277, 278, 279, 280, 287, 288, 293, 294, 295, 298, 301, 302, 305, 306, 309, 310, 315, 316, 317, 320, 321, 322, 323, 324, 326, 335, 342, 343, 344, 345, 346, 347, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 411, 412, 413, 415, 416, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 435, 436, 437, 438, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 481, 482, 489, 490, 491, 492, 493, 495, 496, 497, 503, 504, 505, 506, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 584, 585, 587, 588, 595, 596, 597, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 625, 627, 629, 631, 632, 634, 635, 636, 637, 638, 640, 641, 644, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 663, 664, 665, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 681, 682, 687, 688, 697, 698, 699, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 717, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 734, 735, 736, 739, 741, 743, 744, 745, 746, 753, 757, 758, 760, 761, 763, 765, 766, 768, 770, 771, 773, 779, 780, 782, 784, 786, 788, 790, 792, 794, 796, 798, 800, 804, 805, 807, 809, 810, 812, 815, 816, 818, 819, 821, 822, 824, 826, 827, 828, 833, 834, 837, 838, 839, 840, 841, 842, 844, 845, 846, 847, 858, 859, 860, 861, 862, 863, 864, 865, 881, 883, 884, 885, 886, 887, 888, 889, 890, 891, 893, 894, 895, 900, 901, 902, 903, 906, 909, 915, 916, 917, 918, 919, 920, 922, 923, 924, 925, 926, 927, 928, 931, 932, 933, 934, 935, 938, 940, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 954, 955, 957, 958, 960, 962, 963, 964, 976, 977, 978, 979, 984, 988, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1002, 1004, 1007, 1008, 1010, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1055, 1056, 1057, 1060, 1061, 1062, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1108, 1109, 1111, 1112, 1113, 1117, 1118, 1119, 1121, 1122, 1123, 1124, 1125, 1129, 1133, 1134, 1135, 1136, 1163], "\u211d": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 187, 188, 190, 191, 192, 193, 195, 197, 198, 205, 208, 211, 212, 213, 214, 218, 221, 224, 227, 229, 230, 234, 237, 240, 242, 245, 251, 255, 256, 257, 258, 259, 266, 267, 269, 276, 277, 278, 279, 280, 287, 288, 293, 294, 295, 298, 301, 302, 305, 306, 309, 310, 315, 316, 317, 320, 321, 322, 323, 324, 326, 335, 342, 343, 344, 345, 346, 347, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 411, 412, 413, 415, 416, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 435, 436, 437, 438, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 481, 482, 489, 490, 491, 492, 493, 495, 496, 497, 503, 504, 505, 506, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 584, 585, 587, 588, 595, 596, 597, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 625, 627, 629, 631, 632, 634, 635, 636, 637, 638, 640, 641, 644, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 663, 664, 665, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 681, 682, 687, 688, 697, 698, 699, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 717, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 734, 735, 736, 739, 741, 743, 744, 745, 746, 753, 757, 758, 760, 761, 763, 765, 766, 768, 770, 771, 773, 779, 780, 782, 784, 786, 788, 790, 792, 794, 796, 798, 800, 804, 805, 807, 809, 810, 812, 815, 816, 818, 819, 821, 822, 824, 826, 827, 828, 833, 834, 837, 838, 839, 840, 841, 842, 844, 845, 846, 847, 858, 859, 860, 861, 862, 863, 864, 865, 881, 883, 884, 885, 886, 887, 888, 889, 890, 891, 893, 894, 895, 900, 901, 902, 903, 906, 909, 915, 916, 917, 918, 919, 920, 922, 923, 924, 925, 926, 927, 928, 931, 932, 933, 934, 935, 938, 940, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 954, 955, 957, 958, 960, 962, 963, 964, 976, 977, 978, 979, 984, 988, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1002, 1004, 1007, 1008, 1010, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1055, 1056, 1057, 1060, 1061, 1062, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1108, 1109, 1111, 1112, 1113, 1117, 1118, 1119, 1121, 1122, 1123, 1124, 1125, 1129, 1133, 1134, 1135, 1136, 1163], "\u03f5": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 187, 188, 190, 191, 192, 193, 195, 197, 198, 205, 208, 211, 212, 213, 214, 218, 221, 224, 227, 229, 230, 234, 237, 240, 242, 245, 251, 255, 256, 257, 258, 259, 266, 267, 269, 276, 277, 278, 279, 280, 287, 288, 293, 294, 295, 298, 301, 302, 305, 306, 309, 310, 315, 316, 317, 320, 321, 322, 323, 324, 326, 335, 342, 343, 344, 345, 346, 347, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 411, 412, 413, 415, 416, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 435, 436, 437, 438, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 481, 482, 489, 490, 491, 492, 493, 495, 496, 497, 503, 504, 505, 506, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 584, 585, 587, 588, 595, 596, 597, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 625, 627, 629, 631, 632, 634, 635, 636, 637, 638, 640, 641, 644, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 663, 664, 665, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 681, 682, 687, 688, 697, 698, 699, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 717, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 734, 735, 736, 739, 741, 743, 744, 745, 746, 753, 757, 758, 760, 761, 763, 765, 766, 768, 770, 771, 773, 779, 780, 782, 784, 786, 788, 790, 792, 794, 796, 798, 800, 804, 805, 807, 809, 810, 812, 815, 816, 818, 819, 821, 822, 824, 826, 827, 828, 833, 834, 837, 838, 839, 840, 841, 842, 844, 845, 846, 847, 858, 859, 860, 861, 862, 863, 864, 865, 881, 883, 884, 885, 886, 887, 888, 889, 890, 891, 893, 894, 895, 900, 901, 902, 903, 906, 909, 915, 916, 917, 918, 919, 920, 922, 923, 924, 925, 926, 927, 928, 931, 932, 933, 934, 935, 938, 940, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 954, 955, 957, 958, 960, 962, 963, 964, 976, 977, 978, 979, 984, 988, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1002, 1004, 1007, 1008, 1010, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1055, 1056, 1057, 1060, 1061, 1062, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1108, 1109, 1111, 1112, 1113, 1117, 1118, 1119, 1121, 1122, 1123, 1124, 1125, 1129, 1133, 1134, 1135, 1136, 1163], "\u03d5": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 187, 188, 190, 191, 192, 193, 195, 197, 198, 205, 208, 211, 212, 213, 214, 218, 221, 224, 227, 229, 230, 234, 237, 240, 242, 245, 251, 255, 256, 257, 258, 259, 266, 267, 269, 276, 277, 278, 279, 280, 287, 288, 293, 294, 295, 298, 301, 302, 305, 306, 309, 310, 315, 316, 317, 320, 321, 322, 323, 324, 326, 335, 342, 343, 344, 345, 346, 347, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 411, 412, 413, 415, 416, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 435, 436, 437, 438, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 481, 482, 489, 490, 491, 492, 493, 495, 496, 497, 503, 504, 505, 506, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 584, 585, 587, 588, 595, 596, 597, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 625, 627, 629, 631, 632, 634, 635, 636, 637, 638, 640, 641, 644, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 663, 664, 665, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 681, 682, 687, 688, 697, 698, 699, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 717, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 734, 735, 736, 739, 741, 743, 744, 745, 746, 753, 757, 758, 760, 761, 763, 765, 766, 768, 770, 771, 773, 779, 780, 782, 784, 786, 788, 790, 792, 794, 796, 798, 800, 804, 805, 807, 809, 810, 812, 815, 816, 818, 819, 821, 822, 824, 826, 827, 828, 833, 834, 837, 838, 839, 840, 841, 842, 844, 845, 846, 847, 858, 859, 860, 861, 862, 863, 864, 865, 881, 883, 884, 885, 886, 887, 888, 889, 890, 891, 893, 894, 895, 900, 901, 902, 903, 906, 909, 915, 916, 917, 918, 919, 920, 922, 923, 924, 925, 926, 927, 928, 931, 932, 933, 934, 935, 938, 940, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 954, 955, 957, 958, 960, 962, 963, 964, 976, 977, 978, 979, 984, 988, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1002, 1004, 1007, 1008, 1010, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1055, 1056, 1057, 1060, 1061, 1062, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1108, 1109, 1111, 1112, 1113, 1117, 1118, 1119, 1121, 1122, 1123, 1124, 1125, 1129, 1133, 1134, 1135, 1136, 1163], "\u03c5": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 187, 188, 190, 191, 192, 193, 195, 197, 198, 205, 208, 211, 212, 213, 214, 218, 221, 224, 227, 229, 230, 234, 237, 240, 242, 245, 251, 255, 256, 257, 258, 259, 266, 267, 269, 276, 277, 278, 279, 280, 287, 288, 293, 294, 295, 298, 301, 302, 305, 306, 309, 310, 315, 316, 317, 320, 321, 322, 323, 324, 326, 335, 342, 343, 344, 345, 346, 347, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 411, 412, 413, 415, 416, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 435, 436, 437, 438, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 481, 482, 489, 490, 491, 492, 493, 495, 496, 497, 503, 504, 505, 506, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 584, 585, 587, 588, 595, 596, 597, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 625, 627, 629, 631, 632, 634, 635, 636, 637, 638, 640, 641, 644, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 663, 664, 665, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 681, 682, 687, 688, 697, 698, 699, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 717, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 734, 735, 736, 739, 741, 743, 744, 745, 746, 753, 757, 758, 760, 761, 763, 765, 766, 768, 770, 771, 773, 779, 780, 782, 784, 786, 788, 790, 792, 794, 796, 798, 800, 804, 805, 807, 809, 810, 812, 815, 816, 818, 819, 821, 822, 824, 826, 827, 828, 833, 834, 837, 838, 839, 840, 841, 842, 844, 845, 846, 847, 858, 859, 860, 861, 862, 863, 864, 865, 881, 883, 884, 885, 886, 887, 888, 889, 890, 891, 893, 894, 895, 900, 901, 902, 903, 906, 909, 915, 916, 917, 918, 919, 920, 922, 923, 924, 925, 926, 927, 928, 931, 932, 933, 934, 935, 938, 940, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 954, 955, 957, 958, 960, 962, 963, 964, 976, 977, 978, 979, 984, 988, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1002, 1004, 1007, 1008, 1010, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1055, 1056, 1057, 1060, 1061, 1062, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1108, 1109, 1111, 1112, 1113, 1117, 1118, 1119, 1121, 1122, 1123, 1124, 1125, 1129, 1133, 1134, 1135, 1136, 1163], "\u03b5": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 187, 188, 190, 191, 192, 193, 195, 197, 198, 205, 208, 211, 212, 213, 214, 218, 221, 224, 227, 229, 230, 234, 237, 240, 242, 245, 251, 255, 256, 257, 258, 259, 266, 267, 269, 276, 277, 278, 279, 280, 287, 288, 293, 294, 295, 298, 301, 302, 305, 306, 309, 310, 315, 316, 317, 320, 321, 322, 323, 324, 326, 335, 342, 343, 344, 345, 346, 347, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 411, 412, 413, 415, 416, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 435, 436, 437, 438, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 481, 482, 489, 490, 491, 492, 493, 495, 496, 497, 503, 504, 505, 506, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 584, 585, 587, 588, 595, 596, 597, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 625, 627, 629, 631, 632, 634, 635, 636, 637, 638, 640, 641, 644, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 663, 664, 665, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 681, 682, 687, 688, 697, 698, 699, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 717, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 734, 735, 736, 739, 741, 743, 744, 745, 746, 753, 757, 758, 760, 761, 763, 765, 766, 768, 770, 771, 773, 779, 780, 782, 784, 786, 788, 790, 792, 794, 796, 798, 800, 804, 805, 807, 809, 810, 812, 815, 816, 818, 819, 821, 822, 824, 826, 827, 828, 833, 834, 837, 838, 839, 840, 841, 842, 844, 845, 846, 847, 858, 859, 860, 861, 862, 863, 864, 865, 881, 883, 884, 885, 886, 887, 888, 889, 890, 891, 893, 894, 895, 900, 901, 902, 903, 906, 909, 915, 916, 917, 918, 919, 920, 922, 923, 924, 925, 926, 927, 928, 931, 932, 933, 934, 935, 938, 940, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 954, 955, 957, 958, 960, 962, 963, 964, 976, 977, 978, 979, 984, 988, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1002, 1004, 1007, 1008, 1010, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1055, 1056, 1057, 1060, 1061, 1062, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1108, 1109, 1111, 1112, 1113, 1117, 1118, 1119, 1121, 1122, 1123, 1124, 1125, 1129, 1133, 1134, 1135, 1136, 1163], "\u03f0": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 187, 188, 190, 191, 192, 193, 195, 197, 198, 205, 208, 211, 212, 213, 214, 218, 221, 224, 227, 229, 230, 234, 237, 240, 242, 245, 251, 255, 256, 257, 258, 259, 266, 267, 269, 276, 277, 278, 279, 280, 287, 288, 293, 294, 295, 298, 301, 302, 305, 306, 309, 310, 315, 316, 317, 320, 321, 322, 323, 324, 326, 335, 342, 343, 344, 345, 346, 347, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 411, 412, 413, 415, 416, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 435, 436, 437, 438, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 481, 482, 489, 490, 491, 492, 493, 495, 496, 497, 503, 504, 505, 506, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 584, 585, 587, 588, 595, 596, 597, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 625, 627, 629, 631, 632, 634, 635, 636, 637, 638, 640, 641, 644, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 663, 664, 665, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 681, 682, 687, 688, 697, 698, 699, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 717, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 734, 735, 736, 739, 741, 743, 744, 745, 746, 753, 757, 758, 760, 761, 763, 765, 766, 768, 770, 771, 773, 779, 780, 782, 784, 786, 788, 790, 792, 794, 796, 798, 800, 804, 805, 807, 809, 810, 812, 815, 816, 818, 819, 821, 822, 824, 826, 827, 828, 833, 834, 837, 838, 839, 840, 841, 842, 844, 845, 846, 847, 858, 859, 860, 861, 862, 863, 864, 865, 881, 883, 884, 885, 886, 887, 888, 889, 890, 891, 893, 894, 895, 900, 901, 902, 903, 906, 909, 915, 916, 917, 918, 919, 920, 922, 923, 924, 925, 926, 927, 928, 931, 932, 933, 934, 935, 938, 940, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 954, 955, 957, 958, 960, 962, 963, 964, 976, 977, 978, 979, 984, 988, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1002, 1004, 1007, 1008, 1010, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1055, 1056, 1057, 1060, 1061, 1062, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1108, 1109, 1111, 1112, 1113, 1117, 1118, 1119, 1121, 1122, 1123, 1124, 1125, 1129, 1133, 1134, 1135, 1136, 1163], "\u03c6": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 187, 188, 190, 191, 192, 193, 195, 197, 198, 205, 208, 211, 212, 213, 214, 218, 221, 224, 227, 229, 230, 234, 237, 240, 242, 245, 251, 255, 256, 257, 258, 259, 266, 267, 269, 276, 277, 278, 279, 280, 287, 288, 293, 294, 295, 298, 301, 302, 305, 306, 309, 310, 315, 316, 317, 320, 321, 322, 323, 324, 326, 335, 342, 343, 344, 345, 346, 347, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 411, 412, 413, 415, 416, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 435, 436, 437, 438, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 481, 482, 489, 490, 491, 492, 493, 495, 496, 497, 503, 504, 505, 506, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 584, 585, 587, 588, 595, 596, 597, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 625, 627, 629, 631, 632, 634, 635, 636, 637, 638, 640, 641, 644, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 663, 664, 665, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 681, 682, 687, 688, 697, 698, 699, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 717, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 734, 735, 736, 739, 741, 743, 744, 745, 746, 753, 757, 758, 760, 761, 763, 765, 766, 768, 770, 771, 773, 779, 780, 782, 784, 786, 788, 790, 792, 794, 796, 798, 800, 804, 805, 807, 809, 810, 812, 815, 816, 818, 819, 821, 822, 824, 826, 827, 828, 833, 834, 837, 838, 839, 840, 841, 842, 844, 845, 846, 847, 858, 859, 860, 861, 862, 863, 864, 865, 881, 883, 884, 885, 886, 887, 888, 889, 890, 891, 893, 894, 895, 900, 901, 902, 903, 906, 909, 915, 916, 917, 918, 919, 920, 922, 923, 924, 925, 926, 927, 928, 931, 932, 933, 934, 935, 938, 940, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 954, 955, 957, 958, 960, 962, 963, 964, 976, 977, 978, 979, 984, 988, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1002, 1004, 1007, 1008, 1010, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1055, 1056, 1057, 1060, 1061, 1062, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1108, 1109, 1111, 1112, 1113, 1117, 1118, 1119, 1121, 1122, 1123, 1124, 1125, 1129, 1133, 1134, 1135, 1136, 1163], "\u03d6": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 187, 188, 190, 191, 192, 193, 195, 197, 198, 205, 208, 211, 212, 213, 214, 218, 221, 224, 227, 229, 230, 234, 237, 240, 242, 245, 251, 255, 256, 257, 258, 259, 266, 267, 269, 276, 277, 278, 279, 280, 287, 288, 293, 294, 295, 298, 301, 302, 305, 306, 309, 310, 315, 316, 317, 320, 321, 322, 323, 324, 326, 335, 342, 343, 344, 345, 346, 347, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 411, 412, 413, 415, 416, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 435, 436, 437, 438, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 481, 482, 489, 490, 491, 492, 493, 495, 496, 497, 503, 504, 505, 506, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 584, 585, 587, 588, 595, 596, 597, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 625, 627, 629, 631, 632, 634, 635, 636, 637, 638, 640, 641, 644, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 663, 664, 665, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 681, 682, 687, 688, 697, 698, 699, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 717, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 734, 735, 736, 739, 741, 743, 744, 745, 746, 753, 757, 758, 760, 761, 763, 765, 766, 768, 770, 771, 773, 779, 780, 782, 784, 786, 788, 790, 792, 794, 796, 798, 800, 804, 805, 807, 809, 810, 812, 815, 816, 818, 819, 821, 822, 824, 826, 827, 828, 833, 834, 837, 838, 839, 840, 841, 842, 844, 845, 846, 847, 858, 859, 860, 861, 862, 863, 864, 865, 881, 883, 884, 885, 886, 887, 888, 889, 890, 891, 893, 894, 895, 900, 901, 902, 903, 906, 909, 915, 916, 917, 918, 919, 920, 922, 923, 924, 925, 926, 927, 928, 931, 932, 933, 934, 935, 938, 940, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 954, 955, 957, 958, 960, 962, 963, 964, 976, 977, 978, 979, 984, 988, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1002, 1004, 1007, 1008, 1010, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1055, 1056, 1057, 1060, 1061, 1062, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1108, 1109, 1111, 1112, 1113, 1117, 1118, 1119, 1121, 1122, 1123, 1124, 1125, 1129, 1133, 1134, 1135, 1136, 1163], "\u03f1": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 187, 188, 190, 191, 192, 193, 195, 197, 198, 205, 208, 211, 212, 213, 214, 218, 221, 224, 227, 229, 230, 234, 237, 240, 242, 245, 251, 255, 256, 257, 258, 259, 266, 267, 269, 276, 277, 278, 279, 280, 287, 288, 293, 294, 295, 298, 301, 302, 305, 306, 309, 310, 315, 316, 317, 320, 321, 322, 323, 324, 326, 335, 342, 343, 344, 345, 346, 347, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 411, 412, 413, 415, 416, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 435, 436, 437, 438, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 481, 482, 489, 490, 491, 492, 493, 495, 496, 497, 503, 504, 505, 506, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 584, 585, 587, 588, 595, 596, 597, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 625, 627, 629, 631, 632, 634, 635, 636, 637, 638, 640, 641, 644, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 663, 664, 665, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 681, 682, 687, 688, 697, 698, 699, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 717, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 734, 735, 736, 739, 741, 743, 744, 745, 746, 753, 757, 758, 760, 761, 763, 765, 766, 768, 770, 771, 773, 779, 780, 782, 784, 786, 788, 790, 792, 794, 796, 798, 800, 804, 805, 807, 809, 810, 812, 815, 816, 818, 819, 821, 822, 824, 826, 827, 828, 833, 834, 837, 838, 839, 840, 841, 842, 844, 845, 846, 847, 858, 859, 860, 861, 862, 863, 864, 865, 881, 883, 884, 885, 886, 887, 888, 889, 890, 891, 893, 894, 895, 900, 901, 902, 903, 906, 909, 915, 916, 917, 918, 919, 920, 922, 923, 924, 925, 926, 927, 928, 931, 932, 933, 934, 935, 938, 940, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 954, 955, 957, 958, 960, 962, 963, 964, 976, 977, 978, 979, 984, 988, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1002, 1004, 1007, 1008, 1010, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1055, 1056, 1057, 1060, 1061, 1062, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1108, 1109, 1111, 1112, 1113, 1117, 1118, 1119, 1121, 1122, 1123, 1124, 1125, 1129, 1133, 1134, 1135, 1136, 1163], "\u03c2": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 187, 188, 190, 191, 192, 193, 195, 197, 198, 205, 208, 211, 212, 213, 214, 218, 221, 224, 227, 229, 230, 234, 237, 240, 242, 245, 251, 255, 256, 257, 258, 259, 266, 267, 269, 276, 277, 278, 279, 280, 287, 288, 293, 294, 295, 298, 301, 302, 305, 306, 309, 310, 315, 316, 317, 320, 321, 322, 323, 324, 326, 335, 342, 343, 344, 345, 346, 347, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 411, 412, 413, 415, 416, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 435, 436, 437, 438, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 481, 482, 489, 490, 491, 492, 493, 495, 496, 497, 503, 504, 505, 506, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 584, 585, 587, 588, 595, 596, 597, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 625, 627, 629, 631, 632, 634, 635, 636, 637, 638, 640, 641, 644, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 663, 664, 665, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 681, 682, 687, 688, 697, 698, 699, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 717, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 734, 735, 736, 739, 741, 743, 744, 745, 746, 753, 757, 758, 760, 761, 763, 765, 766, 768, 770, 771, 773, 779, 780, 782, 784, 786, 788, 790, 792, 794, 796, 798, 800, 804, 805, 807, 809, 810, 812, 815, 816, 818, 819, 821, 822, 824, 826, 827, 828, 833, 834, 837, 838, 839, 840, 841, 842, 844, 845, 846, 847, 858, 859, 860, 861, 862, 863, 864, 865, 881, 883, 884, 885, 886, 887, 888, 889, 890, 891, 893, 894, 895, 900, 901, 902, 903, 906, 909, 915, 916, 917, 918, 919, 920, 922, 923, 924, 925, 926, 927, 928, 931, 932, 933, 934, 935, 938, 940, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 954, 955, 957, 958, 960, 962, 963, 964, 976, 977, 978, 979, 984, 988, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1002, 1004, 1007, 1008, 1010, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1055, 1056, 1057, 1060, 1061, 1062, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1108, 1109, 1111, 1112, 1113, 1117, 1118, 1119, 1121, 1122, 1123, 1124, 1125, 1129, 1133, 1134, 1135, 1136, 1163], "\u03d1": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 187, 188, 190, 191, 192, 193, 195, 197, 198, 205, 208, 211, 212, 213, 214, 218, 221, 224, 227, 229, 230, 234, 237, 240, 242, 245, 251, 255, 256, 257, 258, 259, 266, 267, 269, 276, 277, 278, 279, 280, 287, 288, 293, 294, 295, 298, 301, 302, 305, 306, 309, 310, 315, 316, 317, 320, 321, 322, 323, 324, 326, 335, 342, 343, 344, 345, 346, 347, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 411, 412, 413, 415, 416, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 435, 436, 437, 438, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 481, 482, 489, 490, 491, 492, 493, 495, 496, 497, 503, 504, 505, 506, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 584, 585, 587, 588, 595, 596, 597, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 625, 627, 629, 631, 632, 634, 635, 636, 637, 638, 640, 641, 644, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 663, 664, 665, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 681, 682, 687, 688, 697, 698, 699, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 717, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 734, 735, 736, 739, 741, 743, 744, 745, 746, 753, 757, 758, 760, 761, 763, 765, 766, 768, 770, 771, 773, 779, 780, 782, 784, 786, 788, 790, 792, 794, 796, 798, 800, 804, 805, 807, 809, 810, 812, 815, 816, 818, 819, 821, 822, 824, 826, 827, 828, 833, 834, 837, 838, 839, 840, 841, 842, 844, 845, 846, 847, 858, 859, 860, 861, 862, 863, 864, 865, 881, 883, 884, 885, 886, 887, 888, 889, 890, 891, 893, 894, 895, 900, 901, 902, 903, 906, 909, 915, 916, 917, 918, 919, 920, 922, 923, 924, 925, 926, 927, 928, 931, 932, 933, 934, 935, 938, 940, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 954, 955, 957, 958, 960, 962, 963, 964, 976, 977, 978, 979, 984, 988, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1002, 1004, 1007, 1008, 1010, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1055, 1056, 1057, 1060, 1061, 1062, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1108, 1109, 1111, 1112, 1113, 1117, 1118, 1119, 1121, 1122, 1123, 1124, 1125, 1129, 1133, 1134, 1135, 1136, 1163], "\u2128": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 187, 188, 190, 191, 192, 193, 195, 197, 198, 205, 208, 211, 212, 213, 214, 218, 221, 224, 227, 229, 230, 234, 237, 240, 242, 245, 251, 255, 256, 257, 258, 259, 266, 267, 269, 276, 277, 278, 279, 280, 287, 288, 293, 294, 295, 298, 301, 302, 305, 306, 309, 310, 315, 316, 317, 320, 321, 322, 323, 324, 326, 335, 342, 343, 344, 345, 346, 347, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 411, 412, 413, 415, 416, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 435, 436, 437, 438, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 481, 482, 489, 490, 491, 492, 493, 495, 496, 497, 503, 504, 505, 506, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 584, 585, 587, 588, 595, 596, 597, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 625, 627, 629, 631, 632, 634, 635, 636, 637, 638, 640, 641, 644, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 663, 664, 665, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 681, 682, 687, 688, 697, 698, 699, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 717, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 734, 735, 736, 739, 741, 743, 744, 745, 746, 753, 757, 758, 760, 761, 763, 765, 766, 768, 770, 771, 773, 779, 780, 782, 784, 786, 788, 790, 792, 794, 796, 798, 800, 804, 805, 807, 809, 810, 812, 815, 816, 818, 819, 821, 822, 824, 826, 827, 828, 833, 834, 837, 838, 839, 840, 841, 842, 844, 845, 846, 847, 858, 859, 860, 861, 862, 863, 864, 865, 881, 883, 884, 885, 886, 887, 888, 889, 890, 891, 893, 894, 895, 900, 901, 902, 903, 906, 909, 915, 916, 917, 918, 919, 920, 922, 923, 924, 925, 926, 927, 928, 931, 932, 933, 934, 935, 938, 940, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 954, 955, 957, 958, 960, 962, 963, 964, 976, 977, 978, 979, 984, 988, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1002, 1004, 1007, 1008, 1010, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1055, 1056, 1057, 1060, 1061, 1062, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1108, 1109, 1111, 1112, 1113, 1117, 1118, 1119, 1121, 1122, 1123, 1124, 1125, 1129, 1133, 1134, 1135, 1136, 1163], "mittwoch": [8, 195, 197, 205], "00": [8, 112, 153, 154, 156, 161, 166, 174, 178, 186, 187, 188, 190, 191, 192, 193, 195, 197, 199, 201, 203, 205, 208, 212, 218, 220, 226, 236, 239, 240, 267, 268, 275, 276, 278, 328, 436, 444, 458, 713, 735, 738, 742, 753, 829, 830, 884, 906, 907, 908, 960, 979, 988, 1026, 1133], "tectrain": [8, 11, 174, 186, 195, 197, 205, 208, 211, 212, 213, 214, 218, 230, 242, 353], "html": [8, 17, 18, 23, 39, 40, 148, 157, 170, 178, 195, 205, 208, 211, 215, 218, 221, 224, 227, 243, 274, 330, 640, 758, 773, 779, 862, 884, 970, 974, 1045, 1111], "download": [8, 17, 63, 65, 106, 139, 150, 156, 158, 162, 166, 171, 174, 183, 190, 195, 203, 205, 208, 211, 212, 213, 218, 221, 224, 234, 237, 240, 242, 245, 248, 251, 260, 263, 270, 274, 281, 298, 326, 355, 445, 448, 509, 510, 511, 512, 513, 514, 515, 518, 519, 564, 649, 651, 655, 656, 678, 679, 680, 683, 684, 685, 686, 688, 689, 690, 691, 692, 693, 694, 695, 696, 710, 712, 862, 864, 884, 886, 899, 906, 907, 908, 918, 984, 990, 1024, 1057, 1069, 1078, 1088, 1089, 1091, 1102, 1104, 1106, 1128], "repositori": [8, 23, 77, 97, 109, 112, 133, 138, 147, 154, 157, 165, 169, 178, 180, 187, 188, 198, 203, 205, 208, 212, 213, 214, 218, 221, 224, 229, 230, 234, 237, 240, 242, 245, 251, 259, 267, 277, 278, 280, 284, 290, 294, 295, 298, 302, 306, 310, 312, 316, 320, 334, 335, 340, 508, 525, 560, 755, 802, 1142, 1147], "kurssprach": [8, 195, 205, 214, 230, 242], "kurs": [8, 23, 148, 165, 186, 197, 205, 214, 230, 242, 1147, 1148, 1149, 1157, 1164, 1171], "viel": [8, 23, 169, 174, 178, 184, 195, 205, 214, 220, 230, 231, 242, 261, 1150, 1151, 1157, 1165, 1166], "spezifisch": [8, 195, 205, 214, 230, 242, 1148, 1167, 1170], "unterrichtet": [8, 195, 205, 214, 230, 242], "themenreihenfolg": [8, 195, 205, 214, 230, 242], "herdt": [8, 144, 205, 214, 230, 242], "skriptum": [8, 195, 205, 214, 230, 242, 1163], "\u00fcbernommen": [8, 195, 205, 214, 230, 242], "etwa": [8, 23, 159, 160, 169, 174, 184, 186, 195, 205, 207, 214, 230, 242, 353, 1148, 1150, 1157, 1163, 1164, 1166, 1171], "allgemein": [8, 195, 205, 214, 230, 242, 1163], "allgemeinen": [8, 195, 199, 205, 214, 230, 242, 1166], "dadurch": [8, 195, 205, 214, 230, 242, 353, 1150, 1170], "verwirrend": [8, 195, 205, 214, 230, 242, 1163], "weswegen": [8, 195, 205, 214, 230, 242], "vielen": [8, 23, 169, 194, 205, 214, 230, 242, 353, 1157, 1159], "f\u00e4llen": [8, 23, 195, 205, 214, 230, 242], "ausnahmen": [8, 195, 205, 214, 230, 242], "gemacht": [8, 23, 159, 165, 195, 205, 214, 230, 242, 1163, 1171], "kursstruktur": [8, 205], "sieh": [8, 23, 168, 169, 170, 174, 178, 184, 195, 197, 200, 205, 214, 230, 242, 353, 1148, 1149, 1163], "jjj": [8, 125, 148, 192, 197, 205, 227, 275, 280, 344, 757, 758, 759, 763, 771], "hello": [8, 29, 63, 90, 144, 162, 184, 190, 194, 195, 197, 201, 205, 207, 208, 212, 214, 216, 218, 220, 221, 224, 226, 229, 230, 231, 233, 234, 240, 241, 242, 243, 245, 246, 248, 250, 263, 264, 270, 273, 281, 283, 284, 289, 290, 303, 311, 312, 313, 319, 321, 322, 323, 324, 325, 326, 330, 331, 335, 370, 373, 377, 388, 397, 404, 410, 414, 417, 421, 430, 434, 439, 440, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458, 567, 570, 640, 662, 668, 671, 688, 693, 694, 695, 696, 700, 752, 754, 755, 759, 762, 764, 767, 769, 772, 779, 783, 787, 793, 799, 804, 806, 811, 814, 817, 820, 823, 829, 830, 833, 834, 866, 868, 873, 874, 881, 898, 909, 931, 955, 976, 977, 978, 988, 990, 992, 993, 994, 1001, 1008, 1009, 1010, 1011, 1015, 1023, 1027, 1028, 1034, 1037, 1039, 1043, 1044, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1110, 1113, 1114, 1120, 1124, 1127, 1149, 1163], "py": [8, 17, 21, 32, 40, 63, 65, 135, 147, 166, 170, 171, 174, 182, 183, 184, 187, 188, 190, 192, 202, 205, 211, 217, 220, 224, 226, 227, 230, 231, 234, 236, 237, 239, 240, 242, 243, 249, 251, 263, 269, 270, 271, 279, 280, 284, 285, 290, 301, 302, 307, 320, 335, 444, 702, 906, 962, 964, 997, 998, 999, 1000, 1002, 1003, 1004, 1007, 1008, 1010, 1012, 1013, 1019, 1020, 1026, 1027, 1029, 1035, 1041, 1042, 1046, 1052, 1054, 1055, 1056, 1057, 1061, 1062, 1064, 1065, 1067, 1069, 1074, 1078, 1080, 1082, 1084, 1085, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1102, 1103, 1108, 1116, 1121, 1122, 1133, 1134], "swap": [8, 29, 153, 189, 195, 205, 207, 214, 226, 229, 230, 242, 247, 248, 257, 266, 267, 287, 288, 410, 414, 417, 421, 430, 434, 439, 440, 538, 662, 700, 752, 754, 755, 788, 832, 843, 844, 898, 1030, 1059, 1061, 1062, 1063, 1064, 1066, 1098, 1163, 1167], "exercis": [8, 29, 78, 93, 97, 102, 104, 106, 114, 115, 126, 129, 130, 131, 148, 170, 178, 183, 190, 191, 195, 197, 202, 205, 208, 214, 218, 221, 224, 225, 227, 230, 234, 237, 240, 242, 245, 247, 248, 257, 259, 266, 270, 272, 273, 287, 288, 292, 306, 310, 320, 321, 322, 323, 324, 326, 334, 337, 340, 348, 349, 366, 373, 388, 397, 404, 410, 414, 417, 421, 430, 434, 439, 440, 459, 467, 507, 528, 529, 530, 531, 533, 534, 535, 540, 560, 627, 628, 642, 662, 700, 728, 754, 755, 756, 763, 825, 829, 830, 832, 836, 843, 853, 855, 857, 882, 892, 898, 914, 937, 939, 948, 956, 975, 982, 1023, 1024, 1058, 1087, 1098, 1099, 1133, 1153, 1156, 1158, 1163, 1168], "greet": [8, 29, 184, 195, 205, 208, 214, 220, 221, 230, 231, 233, 239, 240, 242, 245, 248, 263, 264, 331, 454, 755, 977, 978, 984, 994, 1059, 1061, 1063, 1066, 1098, 1163], "depend": [8, 13, 28, 29, 63, 78, 114, 131, 144, 147, 148, 151, 152, 158, 162, 181, 183, 195, 205, 208, 213, 214, 220, 221, 226, 227, 230, 236, 239, 240, 242, 245, 248, 263, 280, 288, 294, 310, 335, 350, 358, 374, 376, 384, 387, 403, 420, 432, 438, 442, 446, 450, 453, 457, 460, 467, 473, 507, 519, 545, 547, 555, 635, 661, 709, 732, 753, 755, 761, 814, 825, 832, 836, 843, 846, 857, 882, 892, 899, 907, 925, 977, 988, 992, 994, 1001, 1023, 1024, 1026, 1059, 1063, 1072, 1098, 1127, 1128, 1158, 1160, 1163], "time": [8, 29, 36, 38, 43, 53, 63, 73, 76, 85, 89, 98, 110, 111, 112, 114, 115, 119, 126, 131, 141, 150, 151, 152, 153, 155, 156, 158, 171, 172, 175, 183, 187, 189, 190, 191, 195, 201, 203, 205, 208, 210, 212, 213, 214, 220, 221, 223, 226, 227, 230, 231, 239, 240, 242, 245, 246, 248, 249, 263, 264, 267, 270, 271, 273, 276, 277, 279, 280, 281, 285, 288, 298, 301, 302, 305, 307, 312, 313, 321, 342, 353, 370, 378, 392, 398, 401, 424, 426, 431, 432, 435, 436, 437, 438, 442, 447, 458, 460, 461, 464, 470, 519, 549, 562, 569, 571, 612, 613, 667, 674, 688, 702, 710, 712, 723, 730, 734, 753, 755, 773, 775, 779, 780, 782, 794, 800, 802, 804, 817, 820, 823, 827, 833, 834, 835, 841, 842, 846, 862, 893, 898, 899, 906, 907, 908, 918, 928, 934, 935, 936, 940, 943, 944, 946, 949, 952, 958, 960, 961, 962, 963, 964, 969, 991, 992, 998, 1002, 1008, 1011, 1012, 1023, 1024, 1025, 1028, 1035, 1038, 1041, 1042, 1059, 1061, 1063, 1066, 1098, 1104, 1113, 1118, 1128, 1158, 1163, 1169], "dai": [8, 12, 29, 152, 153, 155, 161, 164, 170, 171, 175, 189, 195, 205, 208, 214, 216, 225, 230, 239, 240, 242, 245, 248, 263, 271, 275, 298, 341, 343, 344, 353, 443, 448, 449, 460, 481, 755, 819, 858, 923, 960, 1001, 1023, 1030, 1039, 1059, 1061, 1063, 1066, 1098, 1099, 1106, 1127, 1154, 1155, 1156, 1158, 1163, 1168], "hen": [8, 205], "vehikelkauf": [8, 205], "datentypen": [8, 174, 178, 195, 196, 202, 205, 236, 254, 336, 1150, 1163, 1170], "\u00fcbersicht": [8, 195, 205, 208, 218, 221, 224], "git": [8, 13, 23, 61, 65, 72, 73, 74, 78, 114, 115, 130, 134, 138, 143, 155, 157, 165, 178, 179, 180, 183, 200, 202, 203, 205, 227, 229, 240, 251, 256, 258, 276, 277, 278, 341, 342, 348, 349, 445, 506, 517, 580, 755, 777, 802, 803, 862, 901, 906, 990, 991, 1055, 1142, 1147], "scm": [8, 61, 154, 178, 205, 775], "com": [8, 13, 20, 23, 37, 42, 44, 50, 85, 106, 112, 114, 133, 135, 147, 156, 157, 158, 162, 166, 178, 179, 180, 181, 187, 188, 191, 192, 200, 205, 207, 213, 227, 229, 239, 251, 256, 258, 264, 267, 270, 271, 276, 277, 278, 280, 284, 290, 294, 295, 298, 302, 306, 310, 312, 316, 334, 335, 340, 346, 355, 503, 517, 538, 580, 600, 601, 602, 603, 604, 606, 607, 608, 609, 612, 621, 640, 722, 802, 803, 862, 901, 906, 909, 917, 918, 990, 1055, 1113, 1117, 1118, 1119, 1121, 1122, 1123, 1124], "pep": [8, 147, 195, 205, 277, 279, 280, 301, 302], "The": [8, 13, 17, 29, 30, 40, 49, 53, 57, 59, 62, 63, 65, 78, 84, 90, 99, 106, 107, 108, 109, 110, 111, 114, 116, 117, 118, 119, 120, 122, 124, 125, 130, 131, 134, 144, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 163, 166, 167, 168, 171, 172, 174, 175, 179, 180, 181, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 202, 203, 205, 208, 211, 214, 218, 219, 220, 221, 224, 225, 226, 229, 230, 233, 234, 236, 237, 239, 242, 243, 245, 248, 250, 253, 255, 256, 257, 258, 260, 263, 266, 269, 270, 273, 276, 278, 280, 283, 284, 286, 287, 289, 290, 306, 308, 311, 312, 313, 319, 321, 322, 323, 324, 325, 326, 332, 335, 336, 337, 338, 340, 341, 352, 353, 354, 357, 359, 367, 373, 381, 383, 385, 386, 387, 388, 393, 397, 401, 404, 410, 414, 417, 420, 421, 424, 430, 432, 434, 439, 443, 445, 447, 460, 461, 462, 465, 466, 471, 480, 481, 482, 484, 486, 488, 503, 506, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 520, 522, 525, 527, 560, 561, 563, 567, 568, 570, 579, 580, 581, 582, 583, 586, 589, 597, 605, 611, 615, 624, 627, 628, 633, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 661, 662, 665, 669, 671, 676, 681, 687, 700, 701, 710, 711, 712, 716, 725, 732, 733, 737, 740, 749, 752, 753, 755, 756, 763, 765, 775, 777, 780, 796, 802, 804, 807, 825, 827, 829, 830, 831, 832, 835, 836, 839, 840, 843, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 859, 861, 864, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 877, 878, 880, 892, 898, 902, 906, 907, 908, 921, 923, 927, 929, 932, 933, 934, 935, 937, 939, 942, 946, 947, 949, 950, 953, 956, 959, 960, 961, 970, 973, 974, 977, 980, 981, 982, 983, 984, 985, 986, 987, 990, 991, 992, 993, 994, 995, 999, 1001, 1002, 1005, 1006, 1009, 1010, 1011, 1013, 1014, 1015, 1022, 1024, 1026, 1028, 1029, 1036, 1040, 1043, 1047, 1048, 1050, 1051, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1106, 1107, 1109, 1110, 1113, 1114, 1116, 1120, 1122, 1127, 1130, 1133, 1135, 1137, 1140, 1150, 1152, 1153, 1154, 1156, 1163], "zen": [8, 154, 195, 205, 233, 244, 277, 677], "corei": [8, 172, 183, 186, 187, 190, 192, 195, 197, 203, 205, 208, 211, 218, 221, 224, 234, 237, 248, 251, 260, 284, 290, 335, 340, 1100, 1118, 1119, 1121, 1122, 1123, 1124, 1126, 1136], "schaefer": [8, 192, 195, 197, 203, 205], "youtub": [8, 20, 158, 172, 183, 186, 188, 190, 192, 195, 197, 205, 212, 279, 280, 301, 305, 321], "channel": [8, 126, 156, 172, 195, 205, 899, 907, 969], "trainer": [8, 12, 23, 24, 59, 62, 158, 177, 178, 183, 195, 205, 256, 258, 276, 447, 449, 517, 564, 712, 907, 1001, 1008, 1023, 1024, 1099, 1114, 1126, 1127, 1133, 1153, 1158], "hacker": [8, 195, 205, 1158], "schier": [8, 195, 205], "anzahl": [8, 195, 205], "sehr": [8, 23, 37, 159, 160, 174, 178, 184, 186, 194, 195, 199, 205, 236, 353, 1148, 1150, 1157, 1160, 1163, 1164, 1166, 1171], "guten": [8, 174, 184, 186, 195, 205, 239, 243, 353, 1152], "tutori": [8, 158, 172, 183, 186, 191, 195, 203, 205, 211, 212, 214, 221, 224, 234, 237, 260, 290, 302, 321, 335, 340, 862, 908, 1052, 1054, 1118, 1119, 1121, 1122, 1123, 1124, 1126, 1136], "stil": [8, 195, 205], "besser": [8, 23, 159, 170, 194, 195, 205, 215, 1163], "ander": [8, 174, 184, 195, 205, 215, 223, 236, 330, 335, 340, 344, 353, 828, 1148, 1149, 1152, 1157, 1160, 1165, 1169, 1170], "auswahl": [8, 195, 205], "einleitung": [9, 206], "datatyp": [9, 29, 90, 144, 183, 187, 190, 195, 196, 197, 200, 202, 206, 208, 209, 214, 218, 219, 221, 222, 224, 225, 227, 228, 229, 230, 232, 234, 235, 240, 241, 242, 244, 245, 247, 250, 260, 262, 265, 272, 280, 282, 286, 292, 302, 304, 306, 308, 314, 321, 322, 323, 324, 325, 326, 335, 340, 374, 381, 566, 595, 663, 755, 969, 1001, 1006, 1008, 1009, 1010, 1011, 1015, 1023, 1034, 1043, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1110, 1113, 1114, 1120, 1127, 1163], "number": [9, 24, 27, 29, 36, 53, 57, 59, 62, 63, 68, 78, 80, 82, 84, 85, 110, 111, 112, 115, 119, 121, 130, 141, 144, 150, 152, 153, 156, 158, 161, 162, 166, 169, 171, 174, 180, 183, 187, 190, 193, 194, 195, 197, 202, 203, 206, 208, 209, 211, 214, 218, 220, 221, 223, 224, 226, 227, 230, 232, 233, 234, 236, 239, 240, 242, 244, 245, 247, 248, 249, 251, 256, 258, 260, 263, 264, 270, 271, 276, 277, 278, 279, 280, 281, 283, 284, 285, 289, 290, 293, 301, 302, 305, 306, 307, 309, 311, 312, 313, 319, 321, 326, 335, 342, 353, 358, 360, 362, 364, 366, 367, 368, 374, 378, 380, 381, 392, 403, 419, 423, 428, 432, 436, 442, 444, 454, 472, 473, 481, 506, 514, 516, 519, 521, 532, 538, 565, 585, 593, 596, 603, 619, 644, 653, 656, 665, 677, 703, 710, 712, 753, 755, 761, 763, 770, 773, 782, 784, 796, 798, 804, 812, 816, 827, 835, 842, 868, 887, 889, 891, 893, 895, 907, 918, 919, 922, 926, 927, 928, 933, 934, 935, 936, 955, 960, 961, 969, 970, 974, 976, 979, 999, 1000, 1002, 1004, 1005, 1006, 1016, 1028, 1029, 1030, 1035, 1036, 1046, 1047, 1048, 1050, 1051, 1059, 1062, 1063, 1066, 1069, 1070, 1072, 1073, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1094, 1098, 1099, 1100, 1103, 1108, 1126, 1128, 1133, 1146, 1155, 1158, 1163], "integ": [9, 38, 75, 76, 88, 169, 171, 173, 188, 189, 190, 192, 196, 200, 206, 209, 213, 220, 223, 224, 226, 229, 232, 235, 236, 237, 239, 244, 247, 253, 265, 272, 285, 292, 304, 308, 314, 335, 358, 359, 364, 374, 377, 379, 380, 381, 392, 403, 405, 407, 408, 419, 420, 424, 430, 434, 439, 440, 481, 482, 485, 503, 538, 566, 592, 595, 643, 657, 661, 662, 664, 700, 703, 729, 752, 754, 755, 761, 936, 946, 947, 948, 955, 995, 1008, 1011, 1039, 1045, 1051, 1077, 1121, 1123, 1150, 1154, 1169], "string": [9, 29, 42, 50, 58, 90, 97, 106, 119, 120, 148, 153, 178, 188, 189, 190, 192, 195, 196, 199, 202, 206, 208, 209, 211, 212, 214, 218, 219, 221, 222, 224, 225, 227, 228, 229, 230, 232, 234, 235, 238, 240, 241, 242, 244, 245, 247, 250, 253, 255, 256, 258, 260, 262, 263, 265, 269, 270, 272, 273, 275, 283, 284, 286, 289, 290, 292, 301, 302, 304, 305, 306, 308, 311, 312, 314, 315, 316, 319, 320, 321, 322, 323, 324, 325, 326, 331, 335, 340, 346, 359, 362, 366, 373, 382, 388, 397, 403, 404, 410, 414, 417, 421, 426, 430, 434, 439, 440, 444, 452, 463, 467, 469, 484, 486, 487, 488, 491, 493, 496, 497, 498, 500, 501, 502, 503, 519, 520, 521, 526, 537, 538, 546, 552, 555, 561, 563, 566, 567, 570, 585, 587, 604, 607, 608, 609, 613, 616, 617, 618, 619, 620, 621, 624, 628, 639, 641, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 660, 662, 663, 664, 666, 668, 669, 673, 688, 692, 694, 695, 696, 697, 700, 702, 704, 705, 709, 719, 720, 721, 722, 724, 736, 752, 753, 754, 755, 834, 925, 936, 940, 943, 947, 955, 960, 969, 973, 1000, 1001, 1004, 1012, 1021, 1023, 1028, 1036, 1050, 1057, 1058, 1059, 1064, 1069, 1072, 1073, 1074, 1077, 1080, 1083, 1084, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1111, 1112, 1113, 1114, 1116, 1119, 1150, 1163], "compound": [9, 29, 90, 144, 187, 190, 195, 196, 197, 206, 208, 214, 218, 219, 221, 222, 224, 225, 227, 228, 230, 232, 234, 235, 240, 241, 242, 244, 245, 247, 248, 250, 262, 263, 270, 273, 280, 282, 283, 284, 286, 289, 290, 292, 301, 302, 304, 305, 306, 308, 311, 312, 319, 321, 322, 323, 324, 325, 326, 335, 358, 389, 408, 755, 1001, 1008, 1009, 1010, 1011, 1015, 1023, 1056, 1057, 1058, 1059, 1067, 1068, 1069, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1110, 1113, 1114, 1120, 1127, 1163], "list": [9, 27, 29, 37, 63, 90, 99, 114, 135, 144, 147, 148, 151, 158, 162, 173, 178, 180, 183, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 199, 202, 203, 206, 208, 209, 211, 214, 218, 219, 221, 222, 224, 225, 227, 228, 229, 230, 232, 234, 235, 236, 241, 242, 244, 245, 247, 248, 250, 252, 256, 257, 260, 262, 263, 265, 266, 267, 270, 272, 273, 276, 277, 278, 282, 283, 284, 286, 287, 288, 289, 290, 292, 301, 302, 304, 305, 306, 307, 311, 312, 314, 319, 320, 327, 330, 332, 335, 339, 340, 341, 353, 411, 417, 421, 422, 430, 434, 436, 438, 439, 440, 444, 445, 448, 457, 464, 466, 467, 506, 508, 516, 519, 552, 554, 556, 560, 564, 565, 570, 595, 611, 624, 628, 647, 657, 662, 665, 700, 708, 714, 719, 732, 733, 752, 753, 754, 755, 756, 764, 768, 769, 772, 779, 780, 783, 793, 804, 806, 810, 811, 817, 820, 823, 828, 829, 830, 831, 832, 835, 836, 842, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 866, 869, 870, 873, 874, 876, 877, 878, 879, 880, 882, 890, 898, 907, 927, 929, 931, 937, 939, 947, 949, 953, 956, 959, 961, 976, 978, 993, 997, 1000, 1001, 1004, 1005, 1006, 1019, 1021, 1023, 1024, 1030, 1031, 1036, 1037, 1038, 1039, 1042, 1048, 1050, 1051, 1052, 1057, 1059, 1069, 1072, 1073, 1074, 1075, 1079, 1080, 1081, 1082, 1083, 1084, 1090, 1092, 1095, 1097, 1098, 1099, 1100, 1105, 1108, 1118, 1121, 1125, 1135, 1140, 1147, 1150, 1163, 1164], "arrai": [9, 97, 108, 114, 174, 195, 196, 201, 206, 208, 212, 213, 215, 221, 229, 234, 239, 248, 251, 255, 256, 276, 284, 290, 358, 367, 373, 377, 388, 397, 404, 414, 417, 421, 423, 425, 426, 429, 430, 434, 439, 440, 518, 521, 544, 552, 555, 593, 594, 596, 598, 600, 603, 604, 609, 613, 625, 645, 652, 653, 654, 655, 656, 657, 660, 662, 700, 708, 723, 739, 752, 754, 755, 773, 834, 839, 955, 1032, 1036, 1048, 1100, 1103, 1105, 1128, 1163], "javascript": [9, 23, 149, 184, 194, 206, 215, 239, 244, 995, 1041], "std": [9, 42, 50, 58, 106, 108, 109, 110, 111, 114, 119, 120, 123, 162, 178, 179, 206, 254, 267, 276, 278, 446, 447, 452, 460, 463, 465, 467, 469, 474, 481, 484, 486, 487, 488, 491, 492, 493, 496, 497, 498, 499, 500, 501, 502, 503, 506, 508, 509, 514, 516, 518, 519, 520, 522, 523, 524, 525, 536, 538, 546, 556, 560, 563, 564, 566, 571, 572, 573, 577, 585, 587, 591, 592, 593, 594, 595, 600, 601, 602, 603, 604, 606, 607, 608, 612, 613, 615, 618, 619, 620, 621, 624, 625, 628, 629, 631, 632, 635, 637, 638, 639, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655, 657, 662, 664, 667, 668, 669, 670, 671, 673, 674, 675, 677, 678, 679, 680, 682, 683, 684, 685, 686, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 700, 702, 704, 705, 707, 712, 715, 718, 722, 725, 727, 733, 737, 739, 740, 741, 743, 749, 751, 752, 754, 755, 906, 940, 943, 947, 955, 957, 969, 973, 1105, 1140, 1145, 1153], "vector": [9, 13, 106, 108, 110, 111, 114, 119, 120, 123, 178, 206, 212, 229, 255, 256, 269, 275, 276, 278, 316, 465, 467, 491, 492, 508, 509, 516, 522, 523, 524, 525, 536, 554, 556, 560, 564, 566, 571, 576, 600, 602, 603, 604, 606, 609, 611, 624, 628, 642, 644, 645, 652, 653, 654, 655, 657, 663, 664, 668, 673, 674, 675, 682, 683, 684, 685, 686, 688, 708, 709, 712, 740, 749, 751, 755, 973, 1029, 1107, 1124, 1145], "dictionari": [9, 29, 63, 90, 173, 183, 188, 189, 190, 192, 195, 196, 197, 200, 202, 206, 208, 209, 214, 218, 219, 221, 222, 224, 225, 227, 228, 230, 232, 234, 235, 238, 241, 242, 244, 245, 247, 248, 250, 253, 260, 262, 263, 265, 270, 272, 273, 277, 279, 280, 282, 283, 284, 286, 289, 290, 292, 295, 298, 301, 302, 304, 305, 306, 308, 311, 312, 314, 319, 335, 340, 343, 709, 755, 1001, 1004, 1008, 1009, 1010, 1011, 1014, 1015, 1019, 1023, 1057, 1059, 1067, 1072, 1077, 1078, 1083, 1086, 1087, 1088, 1090, 1092, 1093, 1098, 1100, 1108, 1118, 1125, 1127, 1163], "valu": [9, 58, 84, 108, 114, 115, 119, 120, 130, 131, 151, 153, 155, 166, 168, 170, 171, 172, 184, 188, 190, 192, 194, 199, 201, 206, 207, 208, 210, 211, 212, 213, 215, 216, 218, 220, 221, 223, 224, 226, 227, 229, 231, 233, 234, 236, 239, 243, 246, 248, 249, 260, 261, 264, 267, 269, 271, 281, 284, 285, 290, 291, 303, 307, 313, 316, 321, 329, 335, 357, 362, 364, 366, 367, 377, 380, 381, 382, 390, 392, 393, 401, 403, 405, 406, 411, 422, 426, 428, 430, 434, 439, 440, 444, 447, 452, 454, 457, 462, 465, 467, 481, 482, 484, 487, 491, 493, 496, 498, 499, 501, 512, 513, 514, 516, 519, 526, 538, 555, 564, 565, 566, 569, 575, 578, 616, 618, 620, 621, 662, 664, 665, 671, 673, 682, 688, 691, 694, 695, 696, 700, 709, 720, 734, 749, 752, 754, 755, 758, 761, 780, 782, 784, 786, 802, 812, 834, 847, 898, 907, 928, 936, 938, 939, 941, 942, 943, 946, 949, 955, 958, 969, 970, 973, 974, 993, 995, 997, 1000, 1004, 1008, 1010, 1012, 1019, 1030, 1031, 1032, 1040, 1042, 1045, 1047, 1048, 1052, 1057, 1060, 1065, 1067, 1070, 1077, 1079, 1100, 1103, 1105, 1108, 1111, 1112, 1118, 1119, 1122, 1123, 1124, 1140], "map": [9, 32, 34, 42, 59, 62, 106, 108, 109, 119, 120, 153, 160, 178, 184, 198, 200, 202, 206, 208, 209, 211, 212, 215, 223, 224, 226, 241, 255, 256, 258, 264, 276, 278, 285, 304, 315, 335, 438, 463, 467, 496, 500, 501, 502, 508, 519, 525, 554, 556, 560, 615, 618, 619, 620, 621, 624, 628, 657, 660, 664, 668, 674, 700, 719, 720, 721, 723, 754, 755, 786, 798, 960, 969, 970, 1018, 1022, 1031, 1032, 1051, 1107, 1157, 1167], "mathematisch": [9, 206, 264], "mengen": [9, 195, 196, 206, 1163], "while": [9, 13, 29, 53, 54, 63, 90, 144, 155, 157, 158, 166, 172, 183, 187, 188, 190, 191, 192, 193, 195, 196, 197, 199, 201, 202, 203, 206, 207, 208, 210, 211, 214, 215, 216, 218, 220, 221, 224, 225, 226, 229, 230, 232, 234, 235, 237, 238, 240, 241, 242, 243, 245, 247, 248, 250, 260, 263, 264, 270, 272, 273, 277, 279, 283, 284, 285, 289, 290, 291, 301, 302, 303, 305, 311, 312, 314, 319, 321, 322, 323, 324, 325, 326, 327, 335, 338, 340, 358, 360, 364, 366, 368, 375, 380, 382, 396, 397, 403, 404, 408, 410, 414, 417, 418, 421, 423, 425, 430, 432, 434, 439, 440, 450, 462, 467, 481, 488, 506, 555, 591, 595, 596, 599, 601, 603, 606, 621, 644, 650, 660, 662, 673, 688, 689, 690, 696, 700, 721, 732, 734, 749, 752, 754, 755, 779, 782, 790, 792, 802, 804, 810, 811, 817, 820, 823, 835, 839, 846, 898, 899, 906, 907, 919, 924, 925, 926, 927, 934, 943, 949, 954, 955, 958, 960, 966, 969, 973, 988, 993, 1001, 1002, 1003, 1004, 1008, 1011, 1023, 1024, 1028, 1033, 1038, 1050, 1056, 1057, 1058, 1059, 1063, 1069, 1071, 1072, 1073, 1075, 1079, 1080, 1081, 1082, 1083, 1084, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1106, 1107, 1110, 1114, 1127, 1150, 1154, 1156, 1158, 1163], "function": [9, 21, 29, 38, 50, 59, 62, 63, 78, 80, 82, 90, 97, 110, 111, 114, 115, 131, 144, 148, 151, 153, 162, 170, 183, 184, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 199, 202, 203, 206, 208, 209, 211, 212, 214, 218, 219, 221, 222, 224, 225, 226, 227, 229, 230, 232, 234, 235, 236, 237, 240, 241, 242, 244, 245, 246, 250, 253, 254, 261, 263, 265, 267, 269, 270, 272, 273, 276, 278, 279, 280, 281, 283, 284, 286, 289, 290, 291, 297, 304, 306, 307, 314, 320, 330, 331, 337, 338, 340, 353, 357, 358, 364, 367, 371, 372, 373, 378, 383, 387, 388, 396, 397, 398, 399, 401, 403, 408, 410, 411, 414, 415, 416, 417, 419, 421, 422, 423, 425, 430, 432, 434, 436, 439, 440, 443, 451, 457, 465, 470, 482, 503, 507, 508, 519, 522, 523, 524, 525, 527, 536, 549, 555, 560, 564, 567, 570, 572, 573, 574, 575, 581, 586, 589, 591, 605, 611, 615, 624, 627, 628, 635, 638, 641, 642, 643, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 662, 664, 665, 668, 669, 677, 680, 686, 688, 697, 698, 699, 700, 702, 704, 705, 710, 716, 720, 722, 723, 733, 739, 741, 743, 744, 745, 752, 753, 754, 755, 766, 769, 772, 773, 779, 783, 786, 790, 793, 796, 802, 804, 806, 811, 817, 818, 820, 821, 822, 823, 832, 835, 836, 898, 906, 919, 921, 927, 928, 929, 936, 937, 939, 944, 945, 946, 952, 953, 955, 956, 959, 961, 974, 976, 984, 994, 1001, 1004, 1005, 1006, 1007, 1015, 1023, 1025, 1028, 1029, 1033, 1035, 1056, 1057, 1058, 1059, 1062, 1065, 1066, 1069, 1070, 1071, 1072, 1077, 1080, 1081, 1083, 1084, 1085, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1105, 1110, 1116, 1129, 1133, 1145, 1153, 1154, 1155, 1163], "xx": [10, 220, 251, 285, 291, 307, 313], "yy": 10, "kur": [11, 23, 169, 171, 174, 186, 353, 1148, 1149, 1150, 1151, 1152, 1157, 1159, 1160, 1166, 1167, 1169], "fand": [11, 186, 353], "team": [11, 112, 115, 131, 158, 163, 166, 167, 178, 186, 187, 188, 203, 212, 237, 279, 353, 841, 847, 854, 856, 1002, 1099, 1147, 1155], "statt": [11, 23, 186, 353, 1164, 1165, 1171], "wurd": [11, 160, 174, 178, 184, 186, 195, 335, 340, 353, 1152, 1163, 1164, 1170], "\u00fcber": [11, 23, 159, 160, 165, 169, 170, 174, 178, 186, 195, 196, 200, 209, 214, 240, 336, 353, 1147, 1157, 1163, 1164, 1169, 1170], "meinen": [11, 23, 186, 214, 230, 242, 353], "partner": [11, 23, 186, 353, 1147], "durat": [12, 27, 156, 166, 415, 449, 519, 730, 734, 735, 1001, 1023, 1099, 1127, 1155, 1156, 1158, 1168], "each": [12, 40, 63, 76, 106, 110, 111, 120, 123, 151, 152, 153, 166, 172, 190, 191, 203, 220, 223, 226, 236, 239, 243, 276, 278, 285, 320, 326, 332, 335, 340, 408, 433, 436, 438, 462, 470, 503, 517, 518, 574, 660, 735, 740, 753, 790, 798, 802, 829, 835, 856, 860, 862, 906, 907, 908, 946, 950, 958, 992, 1004, 1007, 1012, 1018, 1078, 1099, 1105, 1107, 1108, 1109, 1124, 1128, 1158, 1168], "about": [12, 23, 29, 30, 39, 42, 43, 44, 45, 46, 49, 63, 65, 68, 75, 80, 83, 84, 90, 97, 112, 114, 131, 139, 144, 145, 147, 151, 152, 153, 155, 158, 166, 175, 179, 180, 183, 187, 188, 189, 190, 191, 192, 195, 202, 203, 208, 211, 212, 213, 214, 218, 220, 221, 224, 227, 228, 229, 230, 232, 234, 236, 237, 239, 240, 242, 244, 245, 248, 257, 260, 262, 263, 265, 266, 267, 273, 277, 278, 283, 284, 287, 289, 290, 292, 301, 302, 305, 306, 311, 312, 314, 316, 319, 321, 322, 323, 324, 325, 326, 335, 337, 340, 346, 376, 381, 390, 392, 420, 423, 424, 426, 432, 436, 438, 442, 456, 462, 555, 564, 565, 588, 595, 661, 670, 674, 675, 705, 709, 714, 723, 724, 753, 755, 771, 773, 802, 812, 821, 829, 830, 848, 865, 899, 906, 907, 908, 919, 923, 929, 944, 961, 969, 995, 1001, 1002, 1004, 1011, 1012, 1019, 1023, 1031, 1042, 1050, 1057, 1058, 1059, 1069, 1072, 1080, 1081, 1083, 1084, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1107, 1113, 1114, 1115, 1116, 1120, 1128, 1133, 1142, 1155, 1156, 1163, 1168], "book": [12, 29, 32, 147, 151, 156, 166, 167, 178, 187, 212, 234, 270, 279, 280, 353, 443, 449, 862, 1001, 1023, 1099, 1114, 1127, 1154, 1156, 1158, 1168], "separ": [12, 38, 78, 103, 104, 114, 151, 178, 180, 190, 210, 223, 229, 239, 243, 246, 249, 264, 267, 270, 271, 273, 281, 285, 293, 307, 309, 313, 365, 403, 424, 444, 447, 454, 466, 470, 480, 508, 509, 510, 511, 512, 513, 514, 515, 518, 538, 555, 560, 585, 706, 734, 753, 755, 770, 771, 804, 838, 842, 847, 893, 895, 898, 908, 944, 960, 976, 978, 981, 982, 983, 984, 986, 994, 999, 1056, 1073, 1078, 1099, 1108, 1140, 1150, 1155, 1168], "requir": [12, 13, 27, 37, 39, 42, 61, 89, 108, 112, 114, 143, 147, 151, 152, 153, 156, 158, 162, 171, 179, 181, 183, 187, 191, 199, 210, 213, 224, 227, 229, 231, 236, 237, 251, 267, 276, 278, 279, 302, 346, 357, 390, 420, 422, 445, 454, 457, 465, 485, 487, 507, 516, 519, 538, 587, 600, 616, 653, 664, 670, 671, 677, 680, 685, 686, 710, 717, 745, 746, 899, 907, 908, 919, 924, 960, 962, 969, 988, 993, 1001, 1014, 1023, 1024, 1042, 1051, 1052, 1055, 1108, 1114, 1127, 1128, 1133, 1135, 1136, 1142, 1154, 1156, 1158, 1168, 1171], "particip": [12, 156, 158, 180, 183, 267, 298, 503, 901, 1024, 1038, 1058, 1168], "should": [12, 37, 43, 45, 55, 57, 77, 80, 112, 115, 116, 119, 130, 131, 147, 152, 153, 156, 158, 162, 166, 173, 179, 183, 187, 212, 213, 227, 233, 239, 243, 267, 302, 305, 307, 321, 326, 341, 342, 356, 381, 403, 418, 428, 432, 442, 447, 454, 460, 465, 470, 471, 473, 474, 482, 519, 563, 570, 572, 668, 671, 673, 677, 688, 732, 761, 780, 792, 794, 798, 802, 827, 846, 862, 869, 874, 906, 907, 908, 915, 934, 950, 961, 999, 1008, 1012, 1020, 1031, 1065, 1069, 1078, 1106, 1116, 1128, 1133, 1134, 1168], "fluent": [12, 290, 336, 337, 1100, 1168], "target": [12, 17, 40, 63, 108, 152, 154, 162, 203, 212, 294, 310, 337, 426, 429, 445, 448, 449, 455, 458, 471, 575, 755, 775, 777, 782, 802, 864, 929, 954, 978, 979, 988, 990, 997, 1001, 1008, 1010, 1023, 1107, 1114, 1127, 1135, 1158], "audienc": [12, 151, 153, 183, 188, 305, 1001, 1023, 1055, 1114, 1127, 1153, 1158], "english": [12, 29, 106, 144, 171, 190, 197, 208, 218, 221, 230, 234, 240, 242, 245, 247, 248, 263, 270, 275, 283, 284, 289, 290, 302, 311, 312, 319, 333, 334, 335, 340, 449, 755, 1001, 1023, 1059, 1069, 1072, 1073, 1075, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1098, 1099, 1113, 1114, 1127], "german": [12, 14, 449, 1001, 1023, 1099, 1113, 1114, 1116, 1127], "see": [12, 13, 23, 27, 29, 31, 42, 43, 45, 46, 50, 53, 55, 57, 63, 65, 77, 78, 85, 89, 99, 106, 112, 114, 115, 117, 119, 120, 121, 122, 123, 125, 126, 129, 130, 131, 136, 137, 139, 144, 147, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 166, 168, 171, 172, 173, 181, 183, 187, 188, 197, 202, 203, 207, 210, 212, 213, 218, 220, 223, 224, 226, 227, 229, 230, 236, 239, 243, 248, 251, 260, 264, 267, 269, 273, 275, 276, 277, 278, 280, 284, 285, 293, 294, 302, 306, 309, 310, 317, 321, 326, 335, 338, 339, 341, 346, 349, 354, 357, 366, 367, 368, 370, 376, 393, 406, 412, 415, 425, 431, 444, 445, 450, 454, 455, 456, 457, 461, 462, 465, 466, 467, 475, 476, 477, 478, 479, 483, 486, 487, 503, 506, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 526, 527, 536, 537, 538, 546, 552, 555, 560, 562, 563, 564, 565, 570, 572, 573, 578, 579, 581, 596, 600, 613, 627, 631, 632, 634, 635, 647, 651, 653, 654, 656, 660, 663, 668, 670, 671, 672, 673, 675, 682, 688, 702, 703, 705, 708, 709, 710, 712, 714, 718, 719, 720, 721, 722, 723, 732, 734, 739, 741, 743, 744, 745, 746, 750, 753, 756, 758, 761, 763, 765, 766, 768, 770, 771, 773, 775, 777, 780, 782, 788, 790, 792, 794, 796, 798, 802, 805, 809, 810, 816, 818, 828, 829, 830, 834, 837, 840, 841, 858, 862, 863, 865, 866, 868, 871, 873, 889, 899, 906, 907, 908, 929, 932, 934, 935, 936, 940, 943, 945, 947, 950, 957, 969, 973, 976, 977, 978, 979, 984, 986, 989, 990, 991, 992, 993, 994, 997, 998, 999, 1000, 1001, 1004, 1012, 1013, 1016, 1017, 1019, 1022, 1024, 1026, 1029, 1037, 1040, 1041, 1042, 1052, 1055, 1058, 1067, 1071, 1074, 1085, 1096, 1097, 1103, 1105, 1108, 1113, 1114, 1116, 1118, 1121, 1122, 1123, 1127, 1130, 1133, 1138, 1140, 1145, 1155, 1156, 1158, 1168], "also": [12, 13, 23, 27, 31, 57, 63, 65, 112, 115, 117, 120, 122, 123, 125, 126, 129, 130, 147, 152, 153, 155, 156, 158, 159, 161, 162, 163, 170, 172, 173, 174, 175, 178, 180, 181, 183, 184, 187, 193, 195, 213, 220, 226, 236, 237, 239, 243, 249, 255, 256, 258, 267, 269, 276, 277, 278, 284, 285, 294, 302, 306, 310, 321, 353, 444, 445, 450, 455, 462, 471, 481, 484, 486, 487, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 526, 527, 537, 562, 563, 564, 565, 570, 572, 578, 596, 613, 616, 631, 632, 634, 660, 668, 671, 672, 673, 675, 688, 699, 702, 705, 708, 709, 710, 712, 714, 718, 720, 723, 724, 732, 734, 739, 744, 745, 746, 753, 792, 802, 807, 828, 840, 846, 847, 862, 866, 868, 871, 873, 893, 899, 909, 918, 919, 932, 936, 940, 947, 957, 978, 979, 986, 991, 993, 995, 997, 998, 999, 1001, 1004, 1012, 1016, 1022, 1024, 1028, 1031, 1041, 1042, 1045, 1055, 1067, 1071, 1074, 1085, 1105, 1106, 1114, 1118, 1121, 1122, 1123, 1127, 1130, 1133, 1155, 1157, 1163, 1164, 1168], "train": [12, 13, 14, 23, 29, 30, 32, 37, 65, 106, 134, 146, 147, 152, 156, 163, 164, 166, 174, 175, 178, 179, 180, 183, 186, 210, 220, 226, 236, 239, 269, 276, 278, 281, 293, 309, 343, 353, 445, 447, 448, 449, 450, 451, 453, 454, 456, 458, 460, 461, 462, 463, 464, 465, 467, 469, 472, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 516, 518, 521, 522, 523, 524, 526, 528, 529, 530, 531, 533, 534, 535, 536, 537, 560, 640, 720, 753, 756, 758, 761, 766, 771, 777, 780, 788, 909, 915, 917, 918, 919, 940, 943, 966, 969, 973, 1000, 1001, 1003, 1023, 1024, 1052, 1055, 1058, 1102, 1103, 1106, 1107, 1114, 1127, 1138, 1142, 1147, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171], "sourc": [13, 23, 28, 30, 39, 61, 65, 68, 73, 86, 110, 111, 114, 131, 150, 151, 152, 153, 156, 157, 158, 162, 166, 168, 169, 171, 172, 179, 192, 197, 202, 220, 226, 234, 236, 239, 243, 248, 256, 258, 260, 263, 264, 267, 288, 295, 398, 399, 402, 437, 446, 447, 448, 450, 451, 452, 453, 455, 456, 457, 466, 517, 520, 521, 635, 668, 671, 677, 682, 688, 718, 770, 800, 803, 814, 846, 862, 863, 895, 936, 976, 977, 979, 980, 982, 986, 988, 990, 991, 992, 993, 994, 1031, 1087, 1096, 1135, 1142, 1148, 1158, 1165], "under": [13, 21, 35, 55, 123, 126, 130, 150, 151, 153, 158, 179, 190, 192, 302, 353, 467, 482, 519, 838, 839, 906, 907, 908, 909, 910, 911, 918, 919, 961, 976, 1000, 1007, 1014, 1048, 1133], "why": [13, 24, 28, 45, 50, 65, 66, 69, 114, 131, 147, 151, 152, 157, 163, 183, 187, 188, 190, 192, 203, 212, 232, 270, 273, 279, 280, 301, 315, 335, 338, 339, 342, 356, 368, 374, 381, 384, 402, 413, 418, 419, 424, 428, 431, 438, 443, 481, 504, 563, 578, 596, 609, 635, 638, 654, 660, 661, 677, 708, 724, 727, 740, 751, 770, 782, 798, 802, 833, 839, 842, 899, 952, 955, 973, 988, 990, 998, 999, 1002, 1048, 1050, 1100, 1105, 1115, 1123], "appli": [13, 76, 83, 148, 153, 192, 210, 269, 275, 302, 313, 385, 420, 426, 444, 575, 675, 710, 775, 802, 842, 845, 862, 906, 907, 932, 993, 1119], "websit": [13, 23, 152, 166, 1129, 1142], "contain": [13, 17, 29, 35, 38, 61, 106, 107, 108, 110, 111, 112, 114, 147, 148, 154, 157, 162, 166, 171, 173, 178, 179, 181, 183, 184, 187, 190, 192, 210, 212, 213, 220, 226, 236, 237, 239, 243, 250, 251, 254, 255, 256, 269, 276, 285, 302, 320, 321, 330, 337, 338, 344, 346, 383, 402, 416, 436, 438, 444, 446, 447, 451, 465, 481, 503, 506, 508, 517, 518, 519, 525, 526, 527, 560, 561, 563, 571, 580, 597, 600, 613, 624, 628, 642, 651, 656, 657, 663, 668, 708, 720, 723, 749, 750, 751, 753, 755, 758, 763, 771, 773, 775, 796, 798, 802, 822, 829, 830, 833, 842, 844, 867, 868, 869, 874, 881, 906, 907, 908, 915, 936, 944, 945, 960, 970, 976, 979, 984, 988, 993, 1000, 1002, 1007, 1024, 1046, 1049, 1055, 1057, 1069, 1078, 1082, 1097, 1100, 1102, 1106, 1108, 1111, 1113, 1118, 1128, 1129, 1133, 1139, 1140, 1152, 1153], "give": [13, 27, 40, 53, 59, 62, 110, 111, 119, 144, 148, 150, 151, 153, 158, 161, 172, 175, 179, 180, 187, 192, 203, 211, 243, 248, 260, 276, 278, 306, 354, 368, 369, 384, 400, 403, 411, 436, 442, 444, 447, 462, 514, 516, 532, 549, 585, 600, 646, 654, 677, 706, 802, 828, 835, 853, 855, 907, 908, 927, 928, 940, 943, 962, 964, 969, 970, 976, 979, 988, 997, 1000, 1023, 1040, 1052, 1100, 1104, 1105, 1128, 1133, 1135, 1153, 1156, 1158], "structur": [13, 29, 65, 78, 89, 108, 119, 151, 166, 188, 202, 229, 230, 237, 239, 240, 242, 245, 248, 251, 254, 263, 270, 273, 280, 284, 290, 294, 295, 298, 302, 306, 310, 312, 316, 335, 339, 341, 343, 358, 368, 376, 381, 410, 412, 416, 417, 421, 430, 433, 434, 439, 440, 444, 445, 449, 457, 464, 482, 507, 517, 536, 585, 618, 651, 660, 662, 700, 752, 754, 755, 790, 792, 796, 800, 802, 822, 858, 889, 925, 931, 947, 952, 970, 1040, 1042, 1082, 1088, 1125, 1127, 1134, 1141, 1153], "much": [13, 27, 35, 38, 63, 80, 119, 123, 125, 129, 150, 151, 152, 153, 158, 161, 166, 175, 181, 183, 187, 188, 189, 191, 213, 224, 226, 227, 229, 231, 237, 251, 252, 255, 256, 258, 270, 273, 279, 280, 301, 302, 305, 315, 316, 338, 370, 381, 392, 428, 432, 442, 457, 482, 561, 571, 577, 596, 617, 637, 660, 661, 670, 671, 675, 688, 700, 701, 702, 706, 708, 710, 720, 724, 743, 744, 746, 754, 755, 758, 773, 780, 788, 790, 796, 798, 802, 841, 842, 891, 899, 902, 905, 907, 919, 961, 970, 973, 974, 976, 978, 988, 995, 998, 999, 1012, 1013, 1018, 1019, 1022, 1031, 1048, 1100, 1106, 1107, 1133, 1135, 1153], "like": [13, 21, 27, 28, 30, 39, 43, 45, 55, 59, 62, 63, 65, 77, 78, 114, 115, 119, 120, 122, 125, 126, 129, 131, 144, 150, 151, 152, 153, 155, 156, 158, 161, 162, 166, 171, 174, 175, 179, 180, 181, 183, 187, 189, 192, 202, 203, 210, 212, 213, 220, 226, 227, 229, 230, 236, 239, 252, 254, 256, 258, 264, 267, 269, 270, 273, 276, 278, 302, 305, 321, 326, 338, 346, 367, 370, 374, 396, 398, 403, 408, 420, 424, 432, 435, 442, 448, 452, 454, 457, 460, 461, 462, 482, 506, 516, 517, 518, 519, 520, 532, 538, 546, 549, 555, 564, 567, 570, 574, 575, 576, 578, 599, 616, 625, 632, 634, 637, 640, 641, 650, 651, 659, 660, 663, 664, 670, 671, 688, 706, 708, 709, 719, 720, 723, 724, 730, 744, 746, 751, 753, 756, 758, 760, 763, 771, 773, 775, 780, 786, 792, 794, 796, 798, 802, 807, 815, 818, 822, 830, 833, 834, 838, 839, 841, 844, 862, 864, 867, 869, 874, 891, 899, 900, 902, 906, 907, 908, 909, 918, 919, 923, 927, 929, 932, 936, 942, 944, 945, 963, 970, 974, 976, 978, 979, 992, 995, 997, 999, 1002, 1004, 1012, 1017, 1022, 1024, 1026, 1028, 1030, 1032, 1036, 1040, 1042, 1045, 1046, 1049, 1052, 1054, 1057, 1065, 1068, 1078, 1079, 1082, 1088, 1089, 1090, 1091, 1092, 1094, 1099, 1102, 1105, 1107, 1108, 1116, 1118, 1119, 1124, 1133, 1134, 1135, 1140, 1142, 1153, 1158], "topic": [13, 16, 27, 28, 29, 59, 62, 69, 78, 90, 97, 106, 114, 144, 148, 153, 157, 158, 171, 175, 188, 191, 192, 193, 195, 203, 208, 218, 221, 227, 237, 239, 240, 255, 256, 260, 278, 280, 284, 306, 321, 322, 323, 324, 326, 334, 335, 340, 341, 346, 348, 349, 352, 354, 538, 579, 581, 640, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 753, 802, 804, 814, 825, 832, 834, 836, 843, 848, 852, 854, 856, 857, 882, 892, 905, 907, 910, 911, 913, 929, 979, 988, 989, 993, 1001, 1006, 1023, 1024, 1028, 1055, 1057, 1058, 1059, 1069, 1072, 1080, 1083, 1084, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1103, 1107, 1113, 1127, 1130, 1133, 1137, 1155, 1156, 1163], "other": [13, 27, 29, 33, 39, 40, 51, 53, 59, 62, 63, 78, 80, 82, 110, 111, 112, 130, 133, 139, 151, 152, 153, 154, 155, 158, 162, 166, 175, 179, 183, 187, 188, 190, 191, 192, 203, 211, 220, 226, 227, 236, 239, 243, 264, 285, 292, 293, 302, 305, 309, 321, 338, 342, 346, 366, 372, 381, 390, 408, 411, 422, 438, 442, 445, 447, 453, 454, 457, 458, 459, 465, 546, 561, 563, 564, 570, 572, 573, 576, 577, 578, 588, 616, 638, 661, 670, 671, 702, 706, 718, 720, 722, 724, 735, 736, 740, 753, 755, 773, 792, 794, 828, 835, 838, 839, 855, 860, 862, 864, 884, 901, 906, 907, 908, 911, 915, 918, 927, 928, 934, 935, 947, 952, 955, 961, 970, 974, 976, 978, 988, 995, 997, 999, 1008, 1011, 1012, 1013, 1016, 1019, 1022, 1026, 1028, 1029, 1030, 1031, 1037, 1038, 1042, 1044, 1046, 1048, 1049, 1062, 1078, 1105, 1109, 1112, 1114, 1116, 1133, 1145, 1153, 1155, 1156, 1158, 1168], "exampl": [13, 17, 24, 29, 39, 40, 65, 78, 87, 112, 114, 115, 131, 144, 145, 147, 150, 151, 152, 153, 158, 161, 162, 166, 170, 171, 172, 175, 179, 183, 187, 189, 191, 202, 210, 212, 216, 220, 223, 226, 227, 229, 235, 236, 237, 240, 241, 242, 244, 248, 251, 260, 267, 269, 270, 273, 277, 279, 280, 284, 285, 293, 295, 298, 301, 302, 305, 309, 315, 323, 326, 335, 343, 346, 359, 365, 366, 367, 375, 381, 433, 445, 456, 457, 458, 465, 469, 471, 481, 482, 484, 486, 506, 507, 519, 538, 574, 576, 578, 587, 596, 603, 641, 650, 668, 677, 682, 697, 698, 702, 703, 707, 710, 714, 720, 724, 753, 755, 761, 773, 780, 802, 829, 830, 834, 839, 859, 862, 872, 884, 891, 899, 906, 907, 908, 909, 918, 922, 929, 932, 933, 934, 935, 936, 944, 951, 970, 973, 975, 976, 977, 978, 979, 980, 986, 992, 993, 994, 995, 998, 999, 1000, 1004, 1011, 1018, 1021, 1023, 1024, 1025, 1027, 1035, 1040, 1049, 1055, 1057, 1073, 1078, 1096, 1097, 1098, 1106, 1107, 1113, 1115, 1121, 1122, 1127, 1132, 1140, 1142, 1155, 1156], "here": [13, 14, 63, 68, 73, 74, 77, 78, 80, 81, 85, 106, 112, 119, 137, 139, 148, 150, 151, 153, 154, 156, 157, 158, 161, 162, 166, 171, 173, 179, 180, 181, 183, 187, 189, 192, 202, 203, 207, 210, 211, 212, 213, 218, 221, 229, 230, 234, 237, 239, 243, 256, 258, 260, 264, 267, 269, 273, 276, 278, 285, 288, 303, 317, 321, 326, 332, 335, 338, 339, 341, 354, 357, 422, 424, 431, 438, 453, 454, 460, 462, 482, 487, 498, 501, 504, 506, 517, 519, 521, 536, 538, 546, 560, 563, 564, 567, 573, 579, 581, 585, 597, 625, 631, 651, 653, 654, 660, 671, 677, 682, 688, 698, 702, 707, 710, 712, 718, 720, 723, 732, 745, 756, 770, 775, 777, 780, 792, 798, 802, 828, 862, 899, 901, 906, 907, 908, 915, 919, 926, 932, 936, 942, 947, 960, 969, 973, 974, 985, 988, 992, 994, 997, 998, 999, 1000, 1012, 1015, 1019, 1024, 1027, 1028, 1035, 1041, 1051, 1052, 1058, 1079, 1082, 1099, 1105, 1106, 1107, 1108, 1113, 1133, 1135, 1138, 1142, 1156, 1158], "discuss": [13, 42, 50, 114, 183, 187, 188, 190, 192, 227, 237, 273, 277, 278, 301, 316, 335, 339, 342, 343, 346, 348, 349, 353, 455, 543, 546, 549, 552, 555, 558, 728, 734, 782, 815, 862, 969, 973, 1002, 1140, 1142, 1145, 1156], "over": [13, 33, 34, 35, 38, 42, 61, 65, 89, 97, 119, 120, 131, 144, 147, 148, 150, 151, 153, 155, 156, 161, 171, 175, 183, 187, 189, 190, 191, 202, 207, 210, 212, 213, 220, 225, 226, 227, 229, 232, 235, 263, 267, 270, 273, 279, 280, 296, 301, 305, 316, 320, 335, 338, 381, 392, 393, 408, 422, 442, 452, 460, 470, 484, 561, 567, 595, 613, 625, 653, 660, 708, 709, 727, 749, 802, 899, 903, 907, 909, 915, 936, 950, 958, 961, 976, 988, 990, 995, 998, 1035, 1048, 1052], "lwn": [13, 39, 168, 782, 794, 812, 1148], "attribut": [13, 148, 151, 153, 168, 187, 201, 207, 211, 220, 223, 226, 231, 233, 238, 239, 243, 246, 249, 253, 254, 261, 264, 268, 271, 281, 285, 291, 303, 307, 313, 328, 330, 339, 346, 420, 436, 438, 450, 465, 732, 753, 834, 840, 861, 865, 932, 944, 945, 962, 963, 970, 974, 998, 999, 1012, 1014, 1025, 1051, 1105, 1169], "sharealik": 13, "cc": [13, 23, 32, 133, 169, 177, 178, 179, 256, 445, 467, 516, 518, 519, 539, 542, 545, 546, 548, 549, 551, 552, 554, 555, 557, 580, 718, 719, 724, 780, 968, 969, 972, 973, 978, 1139, 1140, 1142, 1144, 1145], "BY": [13, 23, 35, 688], "sa": [13, 23, 32, 960], "don": [13, 24, 58, 61, 78, 84, 114, 119, 126, 139, 144, 150, 151, 152, 153, 156, 157, 158, 166, 181, 183, 187, 191, 202, 203, 213, 220, 224, 226, 227, 229, 236, 239, 291, 303, 343, 367, 408, 420, 423, 424, 426, 432, 438, 442, 444, 461, 518, 546, 552, 561, 562, 577, 578, 585, 595, 631, 638, 668, 671, 673, 688, 702, 703, 715, 724, 729, 734, 770, 775, 794, 802, 807, 837, 862, 864, 869, 875, 886, 899, 902, 906, 907, 911, 919, 923, 924, 925, 926, 945, 946, 947, 952, 973, 974, 979, 1000, 1008, 1010, 1024, 1027, 1031, 1055, 1109, 1115, 1122, 1128, 1139, 1145], "t": [13, 24, 43, 50, 58, 61, 63, 65, 78, 84, 114, 119, 126, 130, 139, 144, 148, 150, 152, 153, 156, 157, 158, 161, 162, 166, 168, 170, 181, 183, 184, 187, 190, 191, 194, 199, 201, 202, 203, 207, 213, 216, 220, 223, 224, 226, 227, 229, 231, 233, 236, 237, 239, 243, 246, 249, 252, 258, 261, 264, 269, 270, 271, 273, 275, 281, 285, 291, 303, 306, 307, 313, 321, 327, 329, 330, 332, 343, 355, 357, 358, 360, 366, 367, 377, 392, 398, 400, 403, 408, 418, 420, 422, 423, 424, 426, 432, 438, 442, 444, 447, 461, 514, 516, 518, 538, 546, 552, 561, 562, 564, 571, 577, 578, 585, 587, 588, 595, 599, 631, 638, 660, 661, 663, 668, 670, 671, 673, 677, 678, 679, 680, 688, 691, 702, 703, 708, 714, 715, 718, 719, 720, 722, 724, 727, 729, 732, 734, 761, 770, 775, 782, 794, 796, 802, 807, 819, 822, 828, 829, 830, 837, 839, 862, 863, 864, 868, 869, 875, 881, 884, 886, 899, 902, 906, 907, 908, 911, 915, 919, 923, 924, 925, 926, 933, 945, 946, 947, 952, 962, 969, 970, 973, 974, 976, 977, 979, 988, 991, 994, 1000, 1001, 1008, 1010, 1012, 1020, 1024, 1027, 1030, 1031, 1032, 1038, 1044, 1048, 1050, 1051, 1052, 1055, 1057, 1104, 1109, 1113, 1115, 1122, 1128, 1139, 1140, 1145, 1155], "want": [13, 17, 27, 29, 30, 45, 50, 61, 63, 78, 84, 115, 120, 125, 126, 130, 133, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 166, 171, 174, 179, 183, 187, 190, 191, 202, 203, 210, 213, 220, 227, 231, 233, 267, 269, 270, 273, 295, 321, 332, 346, 368, 380, 396, 424, 436, 438, 442, 446, 447, 462, 465, 486, 505, 514, 519, 538, 549, 562, 567, 570, 578, 603, 638, 654, 668, 673, 688, 709, 714, 720, 722, 723, 724, 741, 753, 758, 777, 802, 807, 837, 839, 841, 844, 859, 862, 863, 881, 899, 902, 906, 907, 908, 919, 923, 924, 925, 926, 931, 945, 960, 962, 963, 964, 973, 976, 978, 988, 990, 992, 995, 996, 997, 998, 999, 1000, 1001, 1003, 1007, 1014, 1019, 1023, 1030, 1039, 1042, 1052, 1056, 1058, 1094, 1099, 1109, 1113, 1114, 1116, 1118, 1122, 1133, 1135, 1136, 1140, 1153, 1158], "anybodi": [13, 65, 151, 156, 183, 202, 203, 425, 934, 945, 1145], "monei": [13, 152, 155, 158, 226, 841, 1057], "my": [13, 17, 24, 28, 32, 39, 59, 62, 63, 65, 97, 112, 133, 139, 150, 151, 152, 154, 155, 157, 158, 161, 162, 166, 179, 183, 187, 190, 203, 210, 237, 251, 253, 267, 277, 332, 335, 340, 353, 432, 443, 465, 519, 555, 573, 584, 638, 720, 740, 753, 786, 798, 802, 804, 830, 837, 852, 854, 859, 865, 886, 899, 906, 908, 910, 911, 918, 919, 924, 925, 926, 935, 970, 1012, 1031, 1054, 1094, 1116, 1133, 1153], "without": [13, 150, 151, 152, 153, 161, 162, 187, 231, 295, 316, 368, 392, 399, 425, 428, 432, 437, 442, 453, 465, 470, 482, 549, 555, 561, 567, 631, 638, 660, 661, 662, 688, 700, 706, 708, 709, 714, 720, 726, 727, 734, 752, 754, 755, 773, 786, 802, 841, 842, 884, 908, 910, 919, 945, 964, 969, 970, 974, 997, 998, 1001, 1002, 1004, 1011, 1013, 1015, 1017, 1019, 1026, 1031, 1048, 1133, 1135, 1153, 1158], "modif": [13, 55, 106, 131, 166, 229, 368, 370, 376, 381, 412, 442, 465, 470, 517, 575, 735, 753, 775, 802, 847, 863, 884, 1011, 1031, 1048, 1109, 1145], "back": [13, 29, 32, 63, 66, 112, 152, 153, 156, 162, 187, 189, 191, 216, 224, 229, 240, 242, 260, 275, 295, 298, 418, 433, 484, 509, 538, 558, 578, 592, 597, 635, 668, 682, 717, 724, 736, 755, 770, 775, 784, 802, 804, 833, 865, 899, 906, 919, 960, 970, 976, 995, 1002, 1015, 1019, 1031, 1059, 1093, 1094, 1095, 1098, 1124], "m": [13, 23, 32, 38, 61, 135, 137, 152, 153, 154, 156, 158, 161, 166, 179, 184, 189, 194, 203, 207, 216, 217, 218, 220, 224, 239, 243, 249, 251, 256, 268, 303, 313, 331, 335, 336, 337, 342, 356, 444, 467, 513, 516, 517, 518, 519, 555, 580, 688, 710, 719, 770, 771, 777, 780, 812, 839, 841, 862, 906, 919, 964, 1017, 1054, 1055, 1062, 1087, 1088, 1105, 1115, 1128, 1133, 1135, 1140], "lawyer": 13, "understand": [13, 114, 150, 151, 153, 157, 158, 161, 162, 166, 175, 183, 187, 212, 239, 270, 273, 276, 278, 279, 280, 295, 298, 301, 305, 337, 346, 374, 422, 431, 438, 470, 506, 647, 668, 677, 698, 709, 802, 841, 847, 899, 1019, 1057, 1100, 1105, 1106, 1123, 1153, 1154, 1155], "permit": [13, 153, 158, 203, 267, 332, 543, 564, 571, 906, 917, 961, 1025, 1125], "exactli": [13, 78, 151, 153, 175, 181, 210, 280, 326, 360, 400, 506, 517, 595, 671, 708, 802, 908, 933, 934, 974, 992, 1108, 1127], "gnu": [13, 162, 167, 203, 212, 332, 338, 354, 439, 440, 445, 447, 570, 719, 755, 782, 803, 862, 977, 978, 988, 990, 992, 1151, 1155], "free": [13, 32, 157, 162, 178, 203, 332, 415, 429, 467, 544, 564, 570, 572, 632, 651, 652, 654, 655, 671, 698, 717, 718, 719, 738, 766, 773, 804, 924, 925, 926, 938, 961, 974, 976, 1106, 1116, 1125, 1150], "document": [13, 24, 40, 42, 65, 78, 86, 114, 119, 148, 151, 153, 155, 162, 163, 169, 172, 179, 191, 203, 209, 210, 218, 220, 225, 226, 227, 229, 236, 239, 243, 256, 258, 260, 269, 276, 278, 281, 302, 304, 318, 321, 326, 335, 342, 343, 418, 419, 422, 429, 445, 446, 447, 448, 450, 453, 454, 455, 456, 457, 458, 470, 517, 536, 577, 581, 595, 596, 640, 651, 653, 663, 668, 675, 677, 682, 698, 699, 705, 707, 710, 712, 719, 720, 721, 723, 730, 731, 732, 734, 736, 749, 753, 773, 775, 798, 802, 803, 810, 814, 828, 834, 841, 848, 852, 854, 856, 886, 887, 888, 890, 891, 893, 894, 902, 906, 907, 908, 942, 949, 957, 990, 992, 993, 997, 999, 1000, 1004, 1008, 1010, 1012, 1018, 1035, 1045, 1046, 1096, 1108, 1111, 1118, 1119, 1122, 1124, 1131, 1134, 1141, 1142, 1161, 1162], "ago": [13, 153, 157, 213, 827], "wa": [13, 37, 53, 65, 78, 112, 120, 126, 131, 147, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 166, 168, 170, 171, 172, 174, 178, 179, 184, 186, 187, 190, 194, 200, 201, 207, 210, 213, 216, 217, 227, 229, 231, 233, 240, 243, 252, 264, 271, 277, 280, 285, 303, 315, 335, 340, 353, 356, 403, 428, 448, 552, 560, 561, 570, 571, 616, 645, 652, 653, 654, 655, 656, 657, 664, 668, 671, 726, 753, 755, 777, 784, 792, 798, 837, 859, 889, 891, 899, 908, 935, 955, 974, 999, 1031, 1105, 1119, 1122, 1128, 1133, 1135, 1138, 1148, 1150, 1151, 1152, 1153, 1165, 1171], "debian": [13, 78, 139, 140, 141, 158, 162, 166, 168, 180, 191, 203, 288, 332, 353, 532, 755, 802, 901, 978, 990, 1135, 1140], "resolut": [13, 241, 243, 425, 673, 735, 780, 812, 908], "us": [13, 14, 17, 21, 24, 39, 40, 45, 48, 54, 59, 61, 62, 63, 65, 68, 70, 71, 74, 77, 78, 81, 82, 84, 85, 86, 88, 89, 97, 106, 107, 114, 115, 116, 118, 119, 120, 121, 122, 125, 126, 129, 130, 131, 143, 144, 146, 147, 148, 150, 151, 153, 154, 157, 161, 163, 166, 168, 171, 175, 177, 178, 180, 183, 187, 189, 190, 202, 203, 208, 211, 218, 220, 221, 223, 224, 227, 228, 230, 234, 236, 237, 239, 243, 246, 248, 249, 251, 256, 258, 260, 264, 267, 269, 270, 271, 273, 275, 276, 277, 278, 279, 280, 281, 284, 285, 290, 293, 298, 301, 302, 305, 306, 307, 309, 313, 315, 316, 320, 321, 326, 332, 335, 338, 340, 341, 344, 353, 364, 367, 368, 371, 372, 373, 376, 378, 387, 388, 390, 392, 393, 397, 398, 399, 402, 403, 404, 406, 410, 411, 414, 417, 421, 425, 426, 430, 432, 433, 434, 438, 439, 440, 442, 444, 445, 447, 452, 453, 454, 455, 458, 460, 461, 463, 464, 467, 470, 471, 472, 474, 481, 484, 485, 486, 504, 506, 507, 509, 510, 511, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 532, 536, 537, 538, 539, 542, 545, 548, 551, 554, 557, 562, 564, 565, 569, 570, 573, 575, 577, 578, 579, 581, 582, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 604, 607, 608, 609, 613, 616, 617, 618, 619, 620, 621, 625, 631, 634, 635, 637, 638, 641, 642, 644, 645, 647, 649, 650, 651, 652, 653, 654, 655, 657, 659, 660, 662, 663, 664, 665, 667, 669, 671, 675, 677, 682, 688, 690, 697, 698, 700, 702, 703, 705, 707, 710, 715, 719, 720, 721, 722, 724, 726, 730, 732, 735, 739, 740, 749, 752, 753, 754, 755, 760, 761, 763, 765, 768, 770, 771, 773, 775, 777, 780, 782, 786, 788, 790, 794, 796, 798, 802, 803, 805, 807, 815, 816, 818, 821, 822, 828, 829, 830, 833, 837, 838, 841, 842, 844, 846, 848, 854, 859, 862, 864, 867, 868, 869, 871, 881, 887, 889, 893, 898, 899, 902, 903, 905, 909, 910, 911, 918, 919, 922, 928, 929, 932, 933, 934, 936, 940, 942, 943, 945, 947, 948, 949, 951, 952, 955, 957, 958, 961, 962, 965, 968, 969, 970, 972, 973, 974, 976, 979, 986, 987, 990, 991, 992, 993, 994, 998, 1001, 1002, 1004, 1005, 1006, 1007, 1008, 1011, 1012, 1017, 1019, 1021, 1023, 1024, 1025, 1027, 1031, 1033, 1035, 1039, 1040, 1041, 1042, 1045, 1048, 1050, 1052, 1055, 1057, 1060, 1061, 1062, 1065, 1066, 1067, 1071, 1073, 1076, 1077, 1078, 1079, 1083, 1085, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1099, 1100, 1102, 1103, 1105, 1106, 1107, 1108, 1109, 1112, 1113, 1116, 1118, 1119, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1133, 1136, 1139, 1140, 1142, 1144, 1145, 1153, 1155, 1156, 1158], "gfdl": 13, "becaus": [13, 17, 38, 61, 66, 80, 112, 145, 150, 151, 153, 162, 166, 175, 183, 187, 189, 203, 213, 220, 226, 236, 239, 360, 381, 420, 429, 432, 435, 442, 444, 453, 462, 465, 482, 516, 519, 562, 563, 570, 573, 613, 635, 654, 710, 718, 721, 771, 782, 800, 802, 841, 881, 899, 906, 907, 908, 917, 928, 929, 932, 935, 949, 955, 970, 973, 974, 997, 1000, 1026, 1056, 1113, 1128, 1135, 1140, 1153], "too": [13, 27, 53, 56, 63, 80, 126, 151, 153, 158, 167, 180, 183, 199, 210, 212, 229, 239, 243, 246, 255, 256, 258, 269, 271, 279, 280, 285, 301, 303, 315, 316, 377, 422, 432, 442, 456, 462, 561, 575, 682, 684, 688, 700, 701, 702, 708, 714, 720, 743, 753, 754, 755, 800, 802, 807, 834, 899, 908, 909, 915, 932, 945, 962, 978, 997, 998, 999, 1002, 1048, 1052, 1129, 1153], "restrict": [13, 152, 181, 191, 420, 425, 454, 462, 469, 504, 585, 753, 800, 829, 830, 918, 1113], "articl": [13, 166, 168, 782, 794, 812, 906, 908, 988], "describ": [13, 65, 107, 114, 118, 148, 150, 151, 152, 153, 156, 158, 161, 162, 177, 203, 239, 243, 251, 277, 285, 288, 332, 465, 474, 520, 539, 542, 545, 548, 551, 554, 557, 710, 724, 802, 812, 835, 862, 908, 913, 965, 968, 972, 977, 985, 991, 992, 1021, 1105, 1139, 1142, 1144], "pretti": [13, 152, 153, 175, 189, 193, 212, 229, 239, 432, 447, 595, 652, 727, 995, 1125], "same": [13, 17, 24, 28, 31, 39, 40, 43, 44, 65, 119, 131, 151, 152, 153, 155, 157, 158, 161, 162, 166, 171, 172, 173, 175, 183, 184, 189, 192, 203, 211, 215, 220, 226, 229, 236, 237, 239, 242, 243, 261, 270, 273, 279, 280, 285, 301, 302, 303, 313, 322, 323, 332, 339, 364, 368, 379, 380, 381, 398, 399, 403, 408, 411, 420, 422, 426, 428, 432, 433, 436, 437, 447, 465, 469, 472, 473, 484, 503, 504, 512, 516, 536, 538, 545, 547, 561, 564, 570, 573, 576, 595, 598, 604, 613, 616, 617, 618, 642, 653, 661, 666, 673, 675, 677, 680, 682, 706, 707, 710, 722, 723, 724, 730, 770, 771, 775, 780, 782, 784, 792, 794, 800, 802, 818, 834, 840, 846, 862, 863, 865, 889, 899, 906, 907, 908, 909, 918, 919, 925, 931, 945, 946, 947, 960, 964, 970, 974, 976, 992, 998, 999, 1002, 1007, 1008, 1011, 1013, 1017, 1019, 1035, 1037, 1040, 1045, 1047, 1048, 1049, 1082, 1090, 1092, 1106, 1108, 1109, 1112, 1113, 1116, 1118, 1121, 1122, 1123, 1133, 1135, 1140], "issu": [13, 151, 154, 161, 162, 213, 278, 279, 280, 301, 316, 355, 368, 426, 938, 964, 973, 990, 1008], "how": [13, 23, 24, 37, 42, 45, 50, 65, 70, 71, 75, 77, 78, 81, 82, 84, 85, 86, 87, 88, 91, 104, 112, 114, 119, 126, 137, 139, 147, 148, 151, 154, 156, 157, 158, 162, 163, 166, 171, 173, 175, 179, 180, 186, 187, 188, 189, 190, 191, 192, 203, 208, 210, 211, 212, 218, 220, 221, 223, 224, 226, 227, 229, 232, 234, 237, 248, 251, 255, 256, 260, 267, 270, 273, 275, 276, 277, 278, 279, 280, 284, 290, 293, 295, 301, 302, 305, 306, 309, 321, 337, 338, 342, 353, 368, 374, 399, 406, 408, 409, 420, 422, 424, 426, 431, 435, 442, 444, 446, 453, 467, 473, 503, 506, 514, 517, 538, 555, 562, 570, 571, 574, 585, 595, 634, 638, 644, 654, 660, 682, 719, 722, 723, 724, 734, 749, 750, 756, 763, 765, 766, 780, 792, 802, 807, 818, 829, 830, 835, 842, 862, 881, 889, 895, 899, 906, 907, 908, 916, 924, 925, 926, 929, 932, 935, 936, 942, 955, 958, 961, 962, 964, 969, 973, 974, 986, 988, 990, 992, 1005, 1006, 1023, 1024, 1027, 1041, 1044, 1058, 1096, 1097, 1100, 1105, 1106, 1119, 1121, 1122, 1125, 1133, 1136, 1142, 1145, 1155, 1156, 1158], "do": [13, 27, 32, 40, 43, 45, 50, 58, 59, 62, 63, 78, 83, 85, 89, 91, 97, 114, 115, 122, 126, 130, 131, 134, 150, 151, 152, 153, 154, 155, 156, 157, 158, 162, 166, 167, 168, 170, 171, 172, 175, 179, 180, 183, 187, 188, 191, 201, 202, 203, 211, 213, 220, 223, 227, 229, 231, 233, 234, 237, 239, 242, 243, 249, 251, 253, 256, 258, 267, 270, 273, 302, 303, 321, 323, 330, 332, 335, 337, 371, 390, 392, 393, 395, 396, 397, 402, 403, 404, 410, 411, 414, 417, 420, 421, 428, 430, 434, 439, 440, 442, 444, 446, 462, 467, 470, 473, 481, 482, 503, 505, 517, 538, 546, 552, 555, 561, 563, 575, 579, 581, 582, 585, 622, 635, 638, 652, 653, 654, 662, 668, 673, 677, 699, 700, 706, 710, 712, 718, 719, 720, 722, 723, 724, 751, 752, 754, 755, 775, 779, 790, 794, 798, 800, 802, 827, 831, 832, 835, 839, 842, 846, 847, 856, 858, 863, 867, 869, 898, 899, 902, 906, 907, 908, 910, 911, 917, 919, 923, 924, 925, 926, 927, 928, 934, 945, 946, 948, 952, 958, 960, 961, 964, 966, 969, 974, 992, 993, 995, 997, 999, 1000, 1001, 1004, 1013, 1023, 1024, 1025, 1028, 1031, 1035, 1041, 1042, 1055, 1057, 1076, 1100, 1106, 1107, 1114, 1115, 1122, 1125, 1133, 1140, 1142, 1158], "choos": [13, 27, 150, 151, 162, 175, 183, 555, 802, 899, 906, 908, 991, 1024, 1031, 1044, 1106, 1113, 1135], "altogeth": [13, 161, 210, 279, 280, 301, 671, 810, 1002], "have": [13, 27, 28, 30, 37, 43, 50, 65, 69, 80, 82, 84, 102, 110, 111, 114, 115, 119, 123, 126, 129, 131, 133, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 166, 171, 172, 173, 175, 179, 180, 181, 183, 187, 190, 191, 202, 203, 208, 210, 211, 212, 213, 220, 223, 224, 226, 227, 234, 239, 243, 246, 256, 258, 260, 267, 269, 270, 273, 276, 277, 279, 280, 284, 285, 305, 306, 321, 326, 335, 338, 340, 367, 368, 372, 381, 400, 402, 422, 424, 427, 428, 432, 436, 438, 443, 445, 448, 452, 453, 457, 460, 461, 462, 466, 469, 470, 482, 503, 506, 516, 519, 528, 555, 561, 565, 569, 571, 573, 578, 579, 581, 582, 613, 619, 635, 642, 647, 653, 654, 655, 659, 660, 664, 672, 675, 677, 688, 697, 702, 706, 707, 709, 712, 715, 719, 720, 723, 724, 750, 766, 770, 771, 773, 775, 780, 782, 794, 802, 805, 810, 818, 827, 835, 839, 841, 844, 845, 847, 854, 869, 889, 899, 906, 907, 908, 909, 911, 915, 917, 919, 923, 924, 926, 931, 936, 938, 944, 952, 969, 973, 974, 977, 978, 986, 990, 991, 994, 995, 997, 1000, 1008, 1012, 1013, 1017, 1027, 1030, 1031, 1035, 1042, 1049, 1060, 1064, 1074, 1079, 1095, 1100, 1105, 1107, 1108, 1109, 1113, 1116, 1118, 1122, 1125, 1128, 1133, 1135, 1140, 1142, 1155, 1156], "idea": [13, 14, 150, 151, 211, 224, 233, 243, 276, 278, 279, 280, 295, 298, 305, 426, 650, 672, 710, 718, 802, 899, 934, 944, 964, 988, 999, 1023, 1031, 1158], "choosealicens": 13, "appear": [13, 112, 151, 152, 153, 154, 155, 156, 157, 158, 161, 171, 175, 179, 181, 183, 184, 203, 212, 239, 279, 280, 301, 357, 400, 403, 447, 448, 465, 536, 577, 720, 740, 798, 802, 810, 826, 906, 907, 908, 919, 977, 999, 1071, 1072, 1082, 1091, 1117, 1122], "help": [13, 29, 150, 151, 153, 154, 162, 166, 184, 203, 207, 212, 220, 226, 231, 233, 236, 239, 243, 246, 249, 251, 264, 271, 276, 280, 285, 303, 307, 313, 326, 330, 335, 353, 403, 424, 426, 428, 429, 438, 447, 564, 567, 573, 660, 673, 708, 718, 720, 773, 841, 901, 906, 991, 1023, 1026, 1052, 1055, 1125, 1133, 1140, 1155], "happen": [13, 27, 110, 111, 112, 115, 130, 150, 151, 153, 166, 183, 187, 191, 210, 229, 293, 309, 340, 408, 420, 424, 428, 442, 447, 567, 584, 656, 688, 702, 705, 727, 765, 798, 802, 819, 834, 835, 839, 908, 932, 934, 944, 949, 973, 1011, 1012, 1051, 1065, 1068, 1082, 1099, 1105, 1133, 1142, 1155], "clone": [13, 61, 77, 109, 114, 133, 143, 153, 154, 157, 178, 180, 183, 200, 212, 213, 229, 256, 258, 288, 295, 298, 335, 340, 503, 506, 580, 775, 802, 803, 906, 990, 991], "jfasch": [13, 40, 43, 61, 106, 112, 114, 131, 133, 147, 148, 154, 155, 156, 161, 162, 166, 170, 179, 180, 181, 184, 187, 200, 210, 220, 223, 226, 227, 229, 231, 236, 239, 246, 249, 251, 256, 258, 264, 267, 269, 270, 271, 276, 277, 278, 280, 281, 284, 285, 290, 294, 295, 298, 302, 306, 307, 310, 312, 313, 316, 334, 335, 340, 343, 445, 447, 448, 450, 451, 453, 454, 456, 458, 467, 503, 517, 518, 519, 520, 538, 580, 640, 718, 719, 720, 753, 775, 777, 802, 828, 829, 830, 833, 834, 837, 839, 844, 847, 858, 863, 864, 865, 881, 884, 886, 887, 891, 893, 895, 906, 909, 917, 918, 919, 924, 930, 932, 933, 934, 955, 960, 976, 977, 978, 979, 988, 990, 991, 992, 993, 994, 997, 999, 1000, 1003, 1027, 1046, 1052, 1055, 1078, 1121, 1122, 1133, 1135], "home": [13, 32, 40, 42, 43, 50, 61, 65, 100, 112, 133, 147, 148, 152, 154, 155, 156, 158, 162, 166, 179, 180, 181, 184, 203, 210, 220, 223, 224, 226, 231, 236, 239, 246, 249, 251, 256, 258, 264, 267, 269, 271, 281, 285, 307, 313, 343, 438, 445, 447, 448, 450, 451, 453, 454, 456, 458, 467, 517, 518, 519, 520, 580, 640, 673, 718, 719, 720, 753, 755, 777, 802, 828, 829, 830, 832, 837, 839, 841, 842, 844, 847, 852, 854, 856, 858, 859, 862, 863, 865, 866, 867, 868, 869, 873, 876, 879, 882, 884, 886, 887, 893, 898, 909, 910, 915, 917, 918, 955, 957, 973, 976, 977, 978, 988, 990, 991, 992, 993, 994, 997, 1000, 1003, 1052, 1078, 1087, 1121, 1122, 1133, 1135], "built": [13, 28, 114, 121, 150, 151, 153, 154, 157, 162, 179, 184, 186, 187, 195, 196, 208, 211, 220, 226, 231, 234, 236, 237, 239, 243, 251, 260, 264, 267, 269, 284, 293, 302, 306, 309, 313, 370, 374, 398, 419, 445, 453, 456, 457, 481, 503, 616, 673, 729, 734, 771, 775, 777, 802, 906, 908, 919, 977, 978, 979, 984, 992, 997, 1000, 1004, 1020, 1035, 1051, 1100, 1106, 1107, 1124, 1133, 1135, 1136, 1151, 1155, 1163], "wonder": [13, 770, 788, 815, 1002], "gener": [13, 23, 24, 29, 39, 65, 68, 69, 78, 80, 81, 109, 110, 111, 144, 148, 151, 155, 158, 163, 170, 173, 183, 187, 188, 190, 191, 192, 193, 202, 210, 218, 219, 220, 224, 225, 227, 228, 229, 230, 232, 234, 235, 236, 240, 241, 242, 243, 248, 249, 263, 265, 269, 278, 283, 285, 289, 290, 292, 304, 306, 311, 312, 314, 316, 319, 338, 341, 358, 368, 370, 376, 381, 392, 402, 420, 426, 429, 431, 432, 435, 445, 446, 447, 451, 506, 508, 514, 517, 525, 560, 567, 571, 587, 595, 596, 599, 650, 668, 671, 698, 712, 718, 724, 732, 782, 784, 786, 805, 835, 846, 862, 899, 901, 906, 919, 944, 973, 974, 976, 979, 990, 991, 997, 998, 999, 1001, 1019, 1025, 1027, 1028, 1029, 1035, 1039, 1056, 1057, 1058, 1059, 1072, 1098, 1100, 1107, 1109, 1110, 1112, 1113, 1122, 1128, 1133, 1156, 1157, 1164], "content": [13, 27, 39, 49, 50, 57, 63, 112, 183, 190, 191, 192, 203, 211, 229, 231, 239, 261, 267, 307, 327, 402, 405, 407, 520, 563, 613, 621, 709, 804, 807, 828, 829, 830, 844, 847, 849, 850, 884, 887, 895, 907, 911, 934, 976, 1031, 1050, 1056, 1069, 1099, 1119, 1135, 1168], "which": [13, 14, 17, 28, 57, 68, 78, 80, 83, 89, 110, 111, 115, 130, 136, 143, 144, 147, 148, 150, 151, 152, 153, 154, 156, 157, 158, 162, 166, 171, 173, 179, 180, 181, 183, 187, 189, 191, 203, 210, 212, 220, 224, 226, 227, 239, 242, 243, 251, 252, 269, 270, 273, 275, 280, 285, 298, 302, 315, 353, 371, 376, 377, 383, 387, 408, 420, 432, 442, 443, 444, 445, 447, 450, 452, 453, 460, 462, 473, 503, 504, 505, 506, 509, 511, 512, 513, 514, 515, 517, 532, 543, 549, 562, 569, 571, 575, 577, 585, 632, 642, 646, 647, 653, 654, 656, 665, 671, 672, 710, 714, 715, 723, 724, 736, 743, 751, 753, 755, 771, 780, 802, 804, 822, 828, 835, 839, 841, 844, 845, 846, 847, 853, 855, 858, 862, 875, 886, 889, 898, 899, 902, 906, 907, 908, 919, 928, 929, 932, 934, 936, 937, 939, 944, 949, 956, 958, 960, 961, 969, 974, 977, 982, 990, 994, 997, 999, 1001, 1011, 1012, 1016, 1024, 1028, 1031, 1040, 1071, 1090, 1092, 1095, 1097, 1113, 1115, 1116, 1118, 1121, 1135, 1140, 1153], "differ": [13, 35, 38, 59, 62, 69, 76, 81, 85, 88, 138, 150, 151, 156, 158, 162, 172, 179, 183, 187, 199, 223, 224, 267, 269, 275, 276, 278, 285, 303, 315, 321, 356, 368, 376, 381, 382, 398, 399, 402, 420, 426, 428, 432, 442, 444, 461, 462, 506, 517, 519, 538, 545, 546, 555, 564, 565, 569, 575, 577, 578, 587, 591, 596, 635, 638, 642, 664, 677, 680, 707, 722, 735, 739, 753, 775, 780, 794, 800, 802, 822, 827, 833, 837, 838, 840, 859, 884, 899, 902, 906, 908, 915, 926, 934, 936, 949, 958, 960, 961, 981, 986, 991, 993, 994, 999, 1012, 1019, 1027, 1040, 1044, 1049, 1050, 1051, 1109, 1118, 1135, 1136, 1156, 1158], "so": [13, 17, 23, 32, 37, 39, 49, 55, 66, 112, 115, 120, 138, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 166, 170, 171, 172, 173, 174, 175, 179, 180, 181, 183, 184, 195, 196, 201, 209, 211, 212, 213, 222, 223, 224, 253, 267, 275, 277, 281, 293, 305, 309, 321, 330, 335, 338, 353, 367, 371, 372, 380, 382, 398, 408, 409, 411, 420, 424, 426, 428, 429, 433, 443, 445, 448, 450, 455, 456, 460, 482, 484, 503, 519, 532, 571, 578, 582, 595, 618, 625, 634, 641, 650, 699, 709, 714, 717, 718, 720, 735, 761, 763, 766, 771, 775, 777, 780, 802, 815, 827, 841, 842, 844, 846, 852, 854, 856, 862, 866, 873, 899, 905, 906, 907, 908, 911, 913, 915, 923, 926, 929, 934, 936, 944, 962, 964, 973, 976, 977, 978, 979, 990, 992, 993, 1002, 1003, 1007, 1019, 1024, 1026, 1031, 1048, 1050, 1052, 1054, 1064, 1068, 1074, 1078, 1105, 1108, 1116, 1123, 1126, 1133, 1135, 1139, 1140, 1142, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1155, 1157, 1163, 1166, 1171], "ye": [13, 32, 50, 61, 153, 154, 157, 162, 203, 332, 618, 727, 829, 830, 847, 849, 850, 908, 919, 976, 1044, 1077], "realli": [13, 21, 43, 50, 53, 55, 56, 65, 131, 152, 153, 154, 156, 158, 172, 183, 187, 190, 461, 677, 714, 724, 736, 755, 794, 907, 908, 919, 942, 1100, 1107, 1113], "great": [13, 78, 156, 158, 213, 233, 243, 442, 561, 576, 732, 802, 907, 1153, 1158], "static": [13, 23, 65, 97, 103, 104, 110, 111, 114, 151, 153, 155, 157, 158, 168, 178, 212, 213, 220, 226, 229, 236, 239, 243, 267, 276, 278, 285, 335, 341, 404, 410, 414, 417, 419, 421, 428, 430, 432, 434, 439, 440, 445, 450, 451, 455, 457, 466, 480, 488, 500, 501, 502, 503, 504, 508, 509, 510, 511, 512, 513, 514, 515, 518, 525, 527, 546, 555, 560, 564, 567, 578, 583, 586, 589, 605, 609, 611, 615, 624, 627, 628, 645, 652, 653, 654, 655, 656, 657, 662, 671, 700, 702, 704, 705, 709, 720, 723, 729, 734, 739, 740, 741, 743, 744, 745, 746, 752, 753, 754, 755, 761, 780, 798, 802, 804, 898, 944, 947, 949, 951, 960, 966, 973, 977, 978, 979, 981, 982, 983, 984, 986, 1111, 1145, 1148, 1150, 1151, 1152], "It": [13, 21, 39, 43, 45, 55, 59, 62, 78, 120, 126, 130, 139, 150, 151, 152, 153, 156, 157, 158, 161, 162, 171, 173, 175, 179, 180, 184, 189, 190, 203, 212, 213, 220, 226, 229, 236, 239, 243, 251, 256, 258, 267, 270, 273, 276, 302, 315, 348, 349, 365, 376, 380, 398, 403, 426, 428, 442, 460, 465, 470, 473, 482, 484, 506, 509, 510, 517, 518, 564, 644, 656, 673, 674, 710, 720, 755, 766, 802, 829, 830, 841, 844, 859, 898, 899, 907, 908, 929, 934, 936, 937, 939, 952, 956, 961, 977, 978, 988, 993, 998, 1000, 1011, 1019, 1023, 1024, 1057, 1073, 1078, 1082, 1085, 1091, 1106, 1112, 1124, 1133, 1134, 1153, 1155, 1156, 1158], "let": [13, 17, 42, 59, 62, 63, 115, 119, 151, 152, 153, 156, 157, 158, 161, 166, 173, 174, 175, 180, 181, 213, 227, 231, 233, 239, 243, 270, 273, 275, 277, 280, 295, 298, 306, 424, 432, 442, 444, 446, 453, 456, 460, 462, 464, 469, 482, 488, 505, 516, 517, 519, 522, 538, 552, 562, 563, 575, 579, 581, 582, 632, 638, 644, 650, 660, 677, 705, 709, 714, 718, 771, 775, 794, 802, 810, 837, 846, 859, 864, 899, 906, 907, 919, 932, 934, 935, 949, 958, 960, 976, 978, 988, 991, 992, 998, 1000, 1004, 1041, 1048, 1050, 1057, 1065, 1087, 1095, 1100, 1107, 1108, 1113, 1116, 1133, 1153], "me": [13, 23, 32, 37, 59, 62, 114, 145, 150, 151, 152, 153, 156, 157, 158, 161, 162, 166, 179, 180, 181, 183, 187, 210, 212, 213, 237, 288, 306, 335, 424, 426, 427, 442, 445, 549, 573, 638, 673, 714, 720, 775, 837, 864, 899, 907, 908, 919, 923, 976, 979, 988, 1004, 1007, 1048, 1100, 1104, 1134], "focu": [13, 154, 158, 161, 175, 183, 187, 270, 273, 431, 435, 467, 659, 688, 899, 907, 909, 1024, 1107, 1127, 1156], "myself": [13, 147, 148, 158, 179, 187, 202, 218, 775, 837, 859, 864, 881], "ey": [13, 32, 37, 236, 239, 249, 271, 313, 1035], "toward": [13, 183, 341, 424, 484, 613], "consist": [13, 27, 183, 198, 239, 305, 326, 343, 357, 360, 398, 400, 438, 509, 517, 562, 862, 936, 970, 1024, 1025, 1028, 1069, 1078, 1102, 1123], "won": [13, 130, 161, 162, 239, 269, 321, 355, 422, 447, 516, 518, 564, 714, 720, 770, 782, 907, 919, 926, 979, 1001, 1050], "break": [13, 36, 38, 144, 174, 183, 184, 189, 196, 202, 203, 211, 223, 226, 232, 233, 236, 239, 242, 243, 246, 249, 264, 271, 285, 313, 327, 392, 396, 397, 404, 410, 414, 417, 421, 424, 428, 430, 432, 434, 439, 440, 442, 603, 634, 644, 646, 653, 662, 688, 696, 700, 721, 734, 740, 752, 754, 755, 792, 924, 925, 934, 960, 966, 973, 1004, 1012, 1050, 1113], "move": [13, 54, 63, 99, 114, 126, 135, 139, 148, 152, 162, 180, 188, 191, 202, 213, 229, 254, 257, 266, 267, 278, 287, 288, 318, 320, 335, 338, 442, 443, 456, 500, 509, 538, 563, 564, 571, 572, 573, 574, 576, 622, 668, 688, 700, 712, 716, 719, 721, 722, 725, 732, 733, 734, 751, 752, 754, 755, 771, 804, 826, 829, 830, 831, 832, 865, 866, 867, 868, 871, 872, 873, 874, 876, 882, 898, 899, 923, 924, 961, 994, 1031, 1129, 1152, 1153, 1154, 1161, 1162], "around": [13, 24, 37, 59, 62, 98, 114, 119, 122, 151, 152, 153, 158, 162, 172, 183, 187, 211, 237, 248, 255, 256, 258, 278, 306, 315, 316, 381, 456, 470, 472, 481, 506, 562, 658, 661, 663, 713, 715, 754, 755, 802, 807, 934, 949, 970, 973, 994, 1000, 1016, 1020, 1022, 1044, 1096, 1100, 1102, 1106, 1107, 1118, 1119, 1122], "last": [13, 59, 62, 112, 114, 147, 151, 152, 153, 168, 173, 183, 184, 190, 202, 203, 210, 218, 220, 223, 226, 227, 236, 239, 249, 264, 269, 271, 285, 307, 326, 332, 339, 341, 408, 426, 590, 592, 593, 594, 595, 599, 602, 691, 694, 695, 696, 753, 755, 802, 862, 865, 868, 884, 893, 895, 898, 926, 931, 939, 948, 953, 955, 960, 975, 986, 997, 998, 999, 1000, 1004, 1008, 1012, 1013, 1019, 1020, 1025, 1033, 1041, 1042, 1046, 1048, 1051, 1052, 1062, 1089, 1095, 1097, 1108, 1113, 1121, 1122, 1134, 1141, 1171], "least": [13, 24, 37, 59, 62, 65, 81, 153, 161, 175, 179, 181, 183, 190, 191, 210, 212, 213, 227, 229, 239, 243, 269, 273, 275, 285, 287, 356, 374, 380, 381, 394, 420, 423, 424, 432, 448, 460, 532, 617, 660, 710, 712, 719, 724, 727, 736, 765, 798, 800, 834, 899, 901, 909, 947, 970, 974, 995, 1004, 1008, 1024, 1025, 1035, 1058, 1106, 1141], "ha": [13, 21, 24, 27, 28, 43, 45, 53, 56, 63, 78, 110, 111, 112, 115, 122, 125, 126, 130, 138, 148, 150, 151, 152, 153, 154, 155, 156, 158, 161, 162, 166, 171, 173, 175, 179, 180, 183, 187, 189, 190, 191, 201, 203, 207, 208, 210, 211, 213, 220, 223, 226, 229, 231, 233, 234, 236, 239, 243, 246, 249, 252, 260, 261, 264, 267, 268, 269, 270, 271, 273, 275, 276, 278, 281, 284, 285, 291, 293, 302, 303, 306, 307, 309, 313, 316, 318, 321, 328, 330, 332, 341, 355, 364, 367, 377, 380, 381, 390, 393, 401, 402, 409, 415, 416, 419, 423, 425, 426, 432, 438, 442, 444, 447, 453, 455, 456, 457, 458, 460, 461, 462, 465, 470, 471, 474, 482, 487, 501, 503, 513, 536, 546, 561, 563, 564, 565, 566, 569, 570, 571, 574, 575, 578, 585, 595, 616, 617, 634, 635, 638, 647, 648, 653, 654, 656, 665, 667, 670, 673, 682, 683, 684, 688, 697, 698, 699, 702, 710, 718, 720, 723, 724, 726, 732, 736, 753, 755, 756, 766, 771, 796, 798, 800, 802, 812, 815, 816, 818, 822, 829, 833, 834, 835, 837, 839, 840, 841, 847, 858, 860, 865, 891, 899, 905, 906, 907, 908, 917, 919, 922, 928, 934, 944, 946, 947, 949, 957, 958, 960, 961, 962, 963, 970, 974, 976, 990, 992, 993, 995, 997, 998, 999, 1002, 1004, 1007, 1012, 1013, 1014, 1022, 1024, 1027, 1030, 1031, 1035, 1040, 1041, 1045, 1062, 1082, 1097, 1099, 1100, 1106, 1107, 1108, 1109, 1113, 1121, 1122, 1124, 1126, 1133, 1135, 1140, 1142, 1153, 1155, 1156, 1158, 1161, 1162], "extens": [13, 14, 23, 28, 32, 37, 40, 146, 161, 183, 210, 212, 220, 226, 236, 239, 321, 402, 442, 470, 561, 699, 753, 756, 827, 839, 976, 1007, 1024, 1027, 1128, 1133], "interfac": [13, 53, 56, 72, 73, 74, 78, 80, 82, 85, 106, 115, 116, 117, 118, 119, 120, 122, 124, 125, 126, 130, 131, 147, 148, 151, 168, 170, 171, 178, 187, 213, 227, 229, 241, 259, 260, 267, 276, 294, 306, 310, 324, 325, 335, 336, 337, 341, 344, 353, 354, 442, 448, 449, 454, 459, 460, 461, 462, 465, 466, 472, 480, 484, 486, 487, 508, 512, 514, 538, 560, 585, 633, 635, 657, 699, 706, 707, 723, 724, 739, 740, 754, 755, 898, 899, 904, 906, 908, 942, 976, 998, 1112, 1152, 1157, 1158, 1164, 1167, 1170], "lot": [13, 65, 69, 92, 97, 148, 150, 151, 153, 158, 162, 180, 183, 187, 203, 280, 319, 338, 374, 423, 428, 432, 438, 452, 555, 632, 755, 786, 796, 802, 831, 832, 841, 862, 898, 907, 924, 976, 991, 1019, 1024, 1046, 1102, 1154], "littl": [13, 27, 44, 153, 155, 158, 161, 162, 171, 183, 211, 220, 226, 227, 229, 236, 239, 261, 267, 278, 353, 403, 431, 432, 443, 572, 575, 578, 634, 640, 720, 723, 758, 899, 901, 907, 955, 977, 1047, 1116], "maintain": [13, 28, 30, 54, 70, 80, 148, 150, 151, 158, 180, 189, 210, 212, 220, 224, 226, 236, 239, 248, 335, 349, 428, 442, 610, 660, 671, 780, 802, 810, 812, 814, 945, 976, 977, 978, 980, 986, 991, 992, 993, 994, 1042, 1105, 1155], "packag": [13, 21, 23, 29, 32, 61, 97, 104, 114, 134, 140, 141, 147, 152, 166, 181, 183, 184, 187, 188, 190, 197, 202, 208, 210, 211, 212, 218, 220, 224, 226, 227, 230, 234, 236, 237, 239, 240, 242, 245, 248, 251, 269, 279, 280, 284, 288, 293, 298, 302, 305, 306, 309, 312, 335, 336, 337, 338, 342, 353, 354, 445, 447, 450, 451, 755, 775, 898, 906, 907, 978, 983, 986, 1001, 1024, 1031, 1053, 1054, 1056, 1057, 1058, 1059, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1106, 1110, 1114, 1115, 1116, 1121, 1122, 1132, 1133, 1134, 1136, 1137, 1142, 1155], "virtual": [13, 29, 69, 80, 106, 107, 123, 126, 131, 147, 153, 156, 158, 178, 183, 187, 198, 202, 218, 234, 237, 240, 251, 256, 258, 260, 267, 276, 277, 278, 279, 280, 284, 295, 298, 301, 302, 305, 306, 312, 316, 342, 353, 354, 457, 461, 463, 466, 467, 472, 474, 480, 484, 489, 491, 492, 493, 496, 497, 498, 499, 500, 501, 508, 518, 558, 560, 585, 632, 633, 634, 657, 699, 707, 718, 720, 724, 754, 755, 761, 833, 838, 841, 900, 906, 908, 917, 926, 942, 960, 970, 1024, 1027, 1053, 1054, 1055, 1098, 1100, 1101, 1102, 1106, 1114, 1116, 1127, 1130, 1133, 1152, 1159, 1168], "environ": [13, 21, 29, 65, 75, 78, 97, 104, 114, 139, 147, 151, 162, 166, 187, 193, 202, 203, 208, 218, 221, 224, 234, 237, 240, 251, 257, 260, 266, 279, 280, 284, 287, 288, 295, 298, 301, 302, 305, 306, 312, 336, 337, 348, 349, 467, 487, 501, 516, 517, 518, 519, 580, 718, 719, 755, 832, 836, 840, 841, 862, 863, 882, 898, 899, 939, 956, 961, 977, 986, 987, 988, 993, 995, 1007, 1027, 1029, 1053, 1054, 1055, 1098, 1100, 1101, 1102, 1106, 1107, 1114, 1116, 1127, 1128, 1130, 1133, 1134, 1140, 1144, 1146], "repo": [13, 112, 133, 162, 166, 178, 181, 192, 321, 326, 335, 339, 340, 528, 529, 530, 531, 533, 534, 535, 775, 802, 804, 990, 1142], "creat": [13, 17, 21, 24, 39, 42, 44, 54, 59, 61, 62, 63, 77, 99, 101, 102, 109, 114, 118, 119, 134, 137, 144, 147, 151, 152, 153, 155, 158, 161, 162, 166, 168, 170, 171, 172, 187, 188, 189, 190, 191, 192, 203, 208, 216, 221, 226, 227, 229, 234, 236, 239, 243, 248, 251, 256, 257, 258, 266, 267, 275, 278, 279, 280, 284, 285, 287, 288, 290, 295, 298, 302, 305, 306, 335, 340, 359, 436, 438, 444, 445, 458, 460, 462, 465, 466, 467, 480, 481, 482, 486, 488, 489, 503, 506, 508, 509, 510, 511, 512, 513, 514, 515, 516, 518, 519, 520, 560, 562, 565, 576, 616, 618, 634, 649, 652, 654, 663, 665, 688, 702, 705, 714, 720, 721, 733, 734, 740, 750, 751, 753, 754, 755, 758, 761, 765, 766, 771, 773, 775, 777, 780, 786, 798, 802, 831, 832, 833, 834, 835, 836, 842, 844, 845, 849, 850, 851, 853, 855, 857, 860, 866, 867, 869, 871, 872, 873, 874, 876, 882, 898, 906, 907, 908, 910, 911, 912, 914, 915, 917, 919, 921, 927, 928, 929, 936, 937, 938, 939, 944, 945, 946, 952, 953, 956, 959, 960, 961, 968, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 991, 992, 997, 998, 1000, 1002, 1004, 1008, 1012, 1013, 1014, 1016, 1030, 1031, 1040, 1041, 1042, 1051, 1054, 1055, 1056, 1068, 1076, 1077, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1100, 1102, 1103, 1104, 1106, 1109, 1112, 1116, 1125, 1133, 1135, 1136, 1155], "popul": [13, 153, 157, 243, 276, 758], "yourself": [13, 151, 158, 162, 173, 229, 387, 563, 580, 585, 807, 864, 947, 970, 1023, 1158], "root": [13, 38, 63, 80, 114, 133, 150, 156, 158, 161, 162, 173, 178, 179, 180, 187, 191, 201, 223, 229, 239, 243, 246, 249, 264, 267, 271, 281, 285, 307, 313, 320, 321, 326, 355, 422, 431, 435, 438, 447, 455, 461, 519, 581, 637, 753, 766, 802, 803, 804, 833, 837, 839, 858, 862, 874, 875, 881, 884, 886, 887, 888, 890, 891, 893, 899, 906, 907, 908, 910, 911, 915, 924, 929, 934, 942, 962, 976, 979, 988, 990, 999, 1078, 1087, 1088, 1125, 1133], "activ": [13, 156, 166, 168, 191, 251, 660, 782, 784, 788, 796, 837, 839, 894, 1054, 1133, 1135], "txt": [13, 33, 42, 44, 112, 114, 119, 131, 146, 153, 169, 170, 174, 177, 178, 179, 180, 181, 210, 212, 217, 220, 229, 230, 239, 251, 261, 295, 298, 326, 327, 367, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458, 503, 516, 517, 518, 519, 520, 539, 542, 545, 546, 548, 551, 554, 557, 651, 753, 773, 828, 829, 830, 842, 846, 856, 866, 867, 868, 869, 873, 874, 881, 902, 906, 907, 908, 942, 965, 968, 972, 977, 978, 988, 999, 1046, 1069, 1087, 1135, 1136, 1139, 1142, 1144], "fedorish": [13, 775, 919, 1116], "your": [13, 43, 65, 102, 109, 114, 130, 150, 151, 153, 154, 155, 156, 157, 158, 161, 162, 166, 167, 180, 183, 186, 187, 191, 203, 211, 212, 229, 237, 243, 256, 258, 260, 267, 270, 273, 315, 321, 332, 341, 343, 387, 422, 430, 432, 434, 439, 440, 442, 451, 461, 465, 486, 503, 506, 517, 519, 520, 577, 651, 652, 654, 655, 662, 668, 676, 700, 752, 754, 755, 777, 794, 802, 807, 828, 829, 830, 832, 839, 841, 842, 851, 852, 853, 854, 855, 856, 857, 863, 866, 867, 868, 869, 871, 880, 898, 899, 906, 908, 910, 911, 915, 919, 934, 936, 988, 991, 1002, 1013, 1019, 1024, 1028, 1069, 1083, 1087, 1088, 1100, 1105, 1116, 1126, 1128, 1133, 1134, 1135, 1142, 1158], "mileag": [13, 256, 258, 1116, 1133], "might": [13, 27, 59, 61, 62, 112, 120, 125, 130, 150, 151, 152, 154, 156, 158, 161, 162, 166, 179, 181, 183, 191, 212, 220, 226, 231, 236, 239, 270, 273, 276, 302, 321, 346, 418, 432, 442, 447, 456, 457, 462, 465, 486, 519, 569, 578, 697, 707, 720, 721, 722, 753, 777, 788, 792, 798, 802, 844, 899, 906, 907, 908, 919, 924, 933, 955, 962, 973, 988, 991, 999, 1008, 1011, 1024, 1102, 1116, 1133, 1136, 1140], "vari": [13, 220, 226, 236, 239, 243, 256, 258, 279, 280, 301, 305, 358, 432, 616, 735, 802, 908, 993, 1112, 1116, 1133, 1153], "dnf": [13, 61, 122, 147, 154, 162, 166, 180, 355, 448, 455, 532, 775, 803, 901, 919, 978, 990, 1116, 1140, 1142], "pandoc": 13, "graphviz": [13, 451, 978], "dia": [13, 223, 281, 884, 1057], "gtest": [13, 44, 65, 114, 178, 179, 180, 181, 355, 460, 461, 462, 464, 465, 467, 469, 482, 484, 485, 509, 510, 511, 512, 513, 514, 515, 516, 518, 519, 520, 521, 522, 523, 524, 526, 528, 529, 530, 531, 533, 534, 535, 536, 537, 555, 562, 563, 564, 575, 576, 578, 579, 580, 581, 582, 640, 665, 667, 670, 671, 672, 703, 709, 714, 718, 719, 720, 721, 723, 736, 749, 750, 751, 753, 755, 1138], "devel": [13, 122, 147, 162, 180, 448, 450, 455, 775, 1140, 1142], "markdown": [13, 23, 330, 1055], "handl": [13, 21, 29, 46, 74, 119, 145, 151, 171, 183, 187, 188, 190, 192, 198, 211, 213, 218, 220, 224, 227, 228, 236, 241, 248, 260, 267, 277, 284, 285, 295, 298, 306, 311, 319, 335, 340, 342, 348, 349, 356, 396, 403, 408, 424, 428, 448, 508, 538, 560, 575, 585, 618, 622, 644, 653, 654, 655, 688, 690, 717, 720, 732, 733, 754, 755, 761, 765, 784, 796, 832, 835, 836, 898, 906, 921, 923, 924, 925, 926, 927, 928, 929, 931, 934, 936, 937, 939, 947, 953, 956, 959, 961, 964, 970, 973, 1001, 1019, 1024, 1025, 1040, 1050, 1098, 1100, 1152, 1158, 1167], "jupyt": [13, 166, 171, 172, 174, 183, 184, 186, 194, 234, 236, 237, 239, 240, 269, 270, 273, 274, 280, 284, 290, 295, 298, 302, 306, 312, 335, 340, 884, 1024, 1102, 1103, 1107, 1163], "notebook": [13, 32, 166, 170, 171, 172, 174, 183, 186, 194, 227, 234, 237, 239, 240, 242, 245, 248, 251, 260, 263, 269, 270, 273, 274, 280, 284, 290, 295, 298, 302, 306, 312, 313, 320, 340, 1024, 1102, 1107, 1163], "those": [13, 24, 78, 112, 123, 144, 151, 152, 158, 161, 166, 181, 183, 187, 192, 210, 212, 213, 220, 224, 229, 230, 231, 233, 239, 243, 275, 276, 277, 278, 280, 295, 320, 332, 335, 341, 346, 367, 422, 432, 442, 444, 446, 447, 448, 461, 462, 465, 466, 532, 575, 597, 638, 641, 648, 663, 698, 714, 722, 724, 753, 768, 771, 802, 829, 830, 846, 847, 899, 906, 907, 908, 973, 992, 993, 994, 995, 999, 1000, 1001, 1007, 1012, 1023, 1064, 1074, 1095, 1105, 1113, 1114, 1119, 1121, 1133, 1155, 1156, 1158], "funki": [13, 17, 153], "graph": [13, 29, 78, 87, 131, 221, 234, 248, 251, 284, 290, 335, 342, 437, 451, 457, 978, 992, 993, 1100, 1106], "histor": [13, 24, 78, 153, 175, 368, 381, 426, 659, 761, 840, 919, 974, 1091, 1145], "baggag": [13, 368, 381, 659, 974, 1091], "convert": [13, 17, 29, 42, 144, 172, 202, 210, 216, 220, 223, 226, 229, 233, 236, 239, 240, 243, 260, 285, 295, 298, 313, 320, 381, 403, 428, 438, 446, 451, 461, 516, 631, 638, 672, 673, 755, 756, 936, 976, 1015, 1057, 1059, 1064, 1071, 1074, 1093, 1094, 1095, 1098, 1113], "draw": [13, 148, 191, 302, 343, 378, 514, 712, 759, 763, 771, 792, 815], "svg": [13, 148], "ani": [13, 39, 45, 49, 131, 135, 144, 147, 150, 151, 152, 153, 156, 158, 162, 166, 171, 175, 186, 189, 191, 203, 210, 212, 220, 226, 236, 239, 243, 254, 255, 256, 264, 280, 285, 302, 315, 321, 342, 343, 376, 420, 428, 442, 465, 470, 512, 513, 514, 515, 519, 520, 532, 549, 567, 570, 596, 634, 642, 647, 660, 663, 665, 682, 688, 706, 707, 710, 719, 720, 721, 723, 724, 732, 753, 760, 761, 773, 775, 794, 802, 812, 819, 829, 830, 839, 842, 849, 850, 853, 854, 855, 862, 874, 884, 899, 906, 907, 908, 911, 934, 945, 949, 969, 995, 997, 998, 999, 1000, 1004, 1011, 1012, 1019, 1022, 1031, 1036, 1038, 1049, 1050, 1055, 1079, 1081, 1096, 1107, 1123, 1127, 1128, 1140, 1153, 1158], "That": [13, 84, 98, 99, 112, 114, 115, 119, 123, 150, 151, 152, 153, 156, 161, 162, 166, 175, 183, 187, 190, 229, 253, 257, 259, 273, 276, 278, 346, 410, 411, 414, 417, 421, 430, 434, 439, 440, 448, 461, 462, 472, 484, 486, 488, 504, 506, 519, 566, 570, 652, 662, 700, 726, 732, 733, 752, 754, 755, 829, 830, 832, 833, 835, 836, 838, 839, 848, 851, 852, 853, 854, 855, 856, 857, 862, 898, 899, 907, 910, 911, 912, 913, 914, 917, 935, 939, 953, 959, 961, 986, 987, 998, 1024, 1031, 1090, 1092, 1097, 1126, 1133, 1143, 1153], "sloppili": [13, 932], "track": [13, 112, 154, 158, 166, 190, 210, 220, 226, 236, 239, 719, 775, 802, 803, 807, 839, 1011], "opentrain": [13, 22, 28, 135, 148, 188, 195, 213, 343, 354, 1133, 1163], "recip": [13, 39, 143, 147, 151, 152, 336, 337, 422, 587], "sphinx": [14, 17, 23, 39, 65, 147, 148, 163, 341, 756, 1133], "togeth": [14, 24, 43, 50, 104, 106, 110, 111, 119, 123, 141, 158, 161, 162, 166, 171, 181, 183, 187, 191, 203, 212, 229, 256, 258, 275, 276, 278, 293, 302, 305, 309, 343, 353, 399, 432, 433, 509, 519, 538, 560, 578, 579, 581, 582, 732, 734, 766, 779, 802, 829, 830, 888, 889, 907, 908, 938, 952, 976, 982, 986, 988, 991, 995, 1073, 1106, 1126, 1128, 1136, 1138, 1140, 1153, 1155], "form": [14, 29, 153, 158, 171, 175, 199, 220, 226, 227, 236, 239, 276, 278, 354, 419, 435, 474, 482, 484, 523, 524, 536, 634, 756, 802, 807, 810, 834, 884, 908, 1035, 1054, 1057, 1090, 1092, 1095, 1096, 1102, 1108, 1128, 1133, 1153], "short": [14, 32, 35, 43, 106, 131, 151, 158, 166, 179, 183, 187, 190, 191, 192, 202, 203, 220, 224, 225, 226, 231, 234, 236, 237, 241, 259, 275, 276, 277, 278, 279, 280, 358, 374, 376, 381, 385, 386, 411, 420, 466, 480, 508, 520, 560, 565, 569, 755, 798, 804, 807, 841, 862, 887, 906, 908, 919, 926, 936, 958, 963, 996, 1010, 1033, 1036, 1052, 1124, 1133, 1135, 1153], "video": [14, 22, 145, 154, 156, 158, 169, 183, 186, 187, 190, 195, 208, 211, 212, 234, 278, 281, 284, 443, 710, 899, 907, 1100, 1107, 1116], "explain": [14, 63, 65, 97, 119, 145, 150, 156, 162, 175, 183, 187, 189, 213, 224, 229, 231, 233, 234, 242, 243, 280, 320, 350, 353, 422, 432, 552, 842, 862, 865, 899, 908, 964, 1047, 1100, 1133, 1158], "case": [14, 24, 43, 97, 104, 106, 109, 112, 117, 120, 150, 151, 152, 155, 158, 161, 162, 166, 172, 175, 187, 189, 191, 193, 213, 226, 227, 233, 239, 243, 246, 255, 256, 258, 259, 267, 270, 273, 285, 302, 305, 315, 343, 365, 372, 391, 393, 424, 426, 444, 447, 450, 459, 466, 470, 473, 508, 516, 517, 519, 525, 527, 546, 560, 567, 577, 616, 622, 642, 654, 660, 677, 688, 700, 707, 710, 718, 732, 741, 743, 753, 754, 755, 775, 802, 815, 818, 830, 834, 837, 844, 858, 874, 891, 898, 899, 908, 918, 919, 925, 936, 955, 960, 974, 981, 983, 986, 988, 990, 992, 999, 1000, 1030, 1031, 1042, 1046, 1069, 1108, 1124, 1133, 1141, 1156], "netide": 14, "f\u00f6rderantrag": 14, "miscellan": [14, 29, 90, 134, 195, 208, 211, 218, 221, 222, 224, 230, 232, 234, 235, 240, 241, 242, 245, 248, 250, 258, 263, 265, 269, 270, 273, 283, 284, 286, 289, 292, 306, 311, 314, 316, 319, 321, 322, 323, 324, 325, 326, 335, 343, 354, 466, 480, 508, 509, 510, 511, 512, 513, 514, 515, 518, 525, 527, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 669, 700, 716, 725, 733, 740, 752, 754, 755, 756, 898, 928, 929, 934, 937, 939, 953, 956, 1001, 1023, 1053, 1057, 1058, 1059, 1069, 1072, 1080, 1081, 1083, 1084, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1101, 1102, 1106, 1107, 1113, 1116, 1120, 1127, 1130, 1137, 1152, 1153, 1154, 1163], "s5": [16, 23, 147, 970, 974, 1167], "slide": [16, 23, 24, 27, 37, 147, 148, 151, 169, 176, 178, 183, 187, 191, 192, 193, 202, 203, 212, 213, 229, 255, 256, 267, 346, 349, 354, 555, 814, 971, 975, 1072, 1113, 1149, 1150, 1151, 1159, 1160, 1166, 1167, 1169, 1170, 1171], "work": [16, 24, 27, 40, 42, 43, 44, 57, 61, 71, 78, 80, 98, 99, 104, 106, 109, 115, 117, 130, 131, 133, 136, 137, 147, 148, 150, 151, 152, 154, 156, 157, 158, 161, 162, 166, 175, 179, 180, 181, 190, 191, 193, 203, 208, 210, 212, 220, 221, 224, 226, 227, 229, 234, 236, 239, 243, 248, 257, 260, 266, 267, 269, 270, 273, 280, 281, 284, 285, 287, 288, 290, 321, 335, 340, 341, 343, 348, 349, 354, 355, 399, 400, 420, 422, 432, 442, 444, 445, 447, 448, 450, 451, 453, 454, 456, 458, 461, 462, 465, 466, 467, 480, 506, 508, 509, 510, 511, 512, 513, 514, 515, 516, 518, 519, 555, 560, 580, 609, 616, 649, 651, 653, 661, 663, 665, 708, 714, 718, 719, 720, 724, 726, 733, 751, 754, 755, 756, 765, 770, 780, 782, 786, 800, 802, 807, 810, 824, 828, 829, 830, 831, 832, 835, 836, 837, 839, 841, 846, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 862, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 882, 884, 886, 895, 898, 899, 907, 911, 915, 919, 921, 926, 927, 929, 932, 935, 937, 939, 944, 953, 956, 958, 959, 961, 974, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 991, 993, 999, 1000, 1003, 1022, 1025, 1026, 1027, 1046, 1052, 1054, 1055, 1077, 1087, 1088, 1100, 1107, 1116, 1118, 1119, 1121, 1122, 1124, 1133, 1142, 1153, 1158, 1159, 1165], "progress": [16, 147, 354, 756, 864, 1142], "web": [16, 23, 72, 74, 78, 134, 148, 158, 187, 190, 211, 214, 260, 284, 306, 755, 1100, 1107, 1113, 1116], "note": [16, 32, 36, 40, 44, 60, 63, 112, 114, 126, 130, 134, 136, 150, 151, 153, 158, 171, 172, 183, 202, 210, 212, 223, 224, 226, 251, 280, 285, 302, 305, 306, 326, 327, 444, 448, 450, 454, 484, 532, 555, 564, 565, 571, 576, 635, 677, 697, 698, 699, 710, 712, 718, 719, 720, 722, 761, 802, 819, 829, 830, 889, 907, 925, 936, 988, 1041, 1044, 1046, 1050, 1105, 1116, 1118, 1121, 1140], "screencast": [16, 23, 134, 1100], "written": [16, 42, 43, 78, 106, 115, 122, 150, 151, 156, 166, 189, 239, 337, 399, 402, 418, 426, 428, 432, 445, 482, 572, 638, 651, 671, 756, 841, 928, 935, 970, 977, 978, 986, 1018, 1025, 1055, 1155], "draft": [16, 29, 183, 754, 755, 898, 1052, 1098, 1099, 1114], "convers": [17, 190, 202, 209, 212, 213, 220, 225, 226, 229, 232, 235, 236, 241, 244, 247, 265, 276, 278, 282, 286, 292, 304, 308, 312, 314, 335, 359, 374, 388, 397, 404, 410, 414, 417, 421, 428, 430, 434, 439, 440, 444, 481, 543, 631, 635, 659, 661, 662, 664, 700, 752, 754, 755, 805, 1050, 1067, 1071, 1074, 1085], "old": [17, 29, 120, 148, 151, 153, 156, 181, 191, 223, 224, 239, 271, 281, 285, 310, 354, 377, 416, 437, 442, 465, 538, 591, 598, 603, 618, 650, 656, 659, 664, 665, 706, 724, 735, 759, 765, 775, 794, 899, 907, 963, 1039, 1045, 1057, 1078, 1124, 1154], "latex": [17, 23, 24, 538], "beamer": [17, 23, 24], "To": [17, 29, 45, 46, 47, 51, 55, 56, 61, 78, 102, 112, 120, 134, 150, 151, 153, 155, 166, 175, 179, 183, 198, 210, 220, 226, 236, 239, 240, 243, 247, 255, 256, 258, 260, 280, 295, 298, 302, 368, 371, 426, 438, 462, 507, 520, 616, 630, 641, 657, 659, 700, 716, 750, 754, 755, 775, 779, 790, 802, 831, 837, 898, 899, 906, 907, 912, 914, 927, 936, 992, 1001, 1015, 1059, 1065, 1088, 1093, 1094, 1095, 1098, 1106, 1113], "put": [17, 58, 69, 80, 123, 126, 144, 150, 151, 152, 179, 187, 302, 305, 444, 448, 452, 453, 516, 560, 646, 670, 706, 732, 771, 779, 792, 794, 819, 899, 907, 936, 961, 976, 991, 994, 999, 1057, 1138], "more": [17, 21, 27, 29, 43, 45, 59, 62, 65, 69, 78, 82, 90, 97, 101, 106, 114, 115, 118, 119, 122, 131, 144, 148, 151, 152, 155, 156, 158, 161, 162, 164, 166, 172, 173, 175, 180, 183, 187, 188, 189, 190, 191, 192, 193, 195, 197, 202, 203, 208, 210, 211, 212, 213, 214, 218, 221, 224, 225, 227, 228, 229, 230, 232, 233, 234, 237, 240, 241, 242, 244, 245, 247, 251, 255, 256, 257, 258, 262, 265, 266, 276, 277, 278, 285, 287, 288, 292, 294, 302, 306, 310, 314, 315, 316, 321, 322, 323, 324, 325, 326, 338, 340, 346, 353, 354, 365, 370, 374, 377, 381, 391, 392, 393, 402, 404, 410, 411, 414, 417, 421, 422, 427, 428, 430, 432, 434, 436, 437, 438, 439, 440, 444, 447, 449, 450, 453, 466, 473, 480, 482, 486, 487, 498, 503, 508, 516, 518, 538, 555, 560, 564, 568, 617, 631, 632, 633, 645, 646, 647, 648, 649, 650, 652, 653, 654, 655, 656, 657, 659, 662, 669, 670, 681, 688, 697, 700, 701, 709, 710, 712, 714, 716, 717, 719, 720, 723, 725, 733, 734, 740, 752, 753, 754, 755, 758, 761, 773, 775, 780, 786, 788, 790, 794, 796, 798, 802, 828, 833, 838, 862, 865, 895, 899, 901, 905, 906, 907, 908, 919, 925, 928, 931, 934, 945, 947, 958, 962, 964, 970, 974, 976, 977, 978, 986, 988, 992, 993, 994, 1000, 1002, 1004, 1008, 1009, 1010, 1011, 1015, 1018, 1019, 1023, 1024, 1026, 1030, 1031, 1042, 1053, 1056, 1057, 1058, 1059, 1069, 1071, 1072, 1078, 1080, 1081, 1083, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1105, 1106, 1107, 1109, 1110, 1113, 1114, 1116, 1119, 1123, 1127, 1128, 1130, 1132, 1134, 1135, 1137, 1142, 1146, 1153, 1155, 1156, 1163], "precis": [17, 183, 187, 243, 260, 284, 306, 313, 358, 376, 640, 735, 802, 1045, 1100], "restructuredtext": [17, 23, 32, 33, 34, 35, 36, 38, 756], "turn": [17, 75, 110, 111, 151, 153, 156, 161, 162, 183, 187, 203, 212, 229, 275, 335, 432, 447, 448, 484, 509, 510, 667, 682, 858, 899, 906, 907, 908, 976, 978, 982, 992, 1000, 1005, 1006, 1016, 1018, 1126], "rst2s5": 17, "tool": [17, 32, 61, 68, 114, 158, 162, 167, 183, 191, 193, 203, 213, 239, 257, 266, 281, 286, 287, 304, 335, 338, 340, 353, 354, 355, 400, 435, 437, 438, 442, 634, 688, 706, 755, 826, 832, 833, 846, 898, 908, 919, 922, 977, 978, 986, 990, 1024, 1025, 1028, 1055, 1119, 1127, 1151, 1153, 1155, 1157, 1164], "thi": [17, 24, 28, 29, 30, 31, 39, 40, 43, 44, 45, 50, 53, 54, 57, 59, 61, 62, 63, 65, 69, 77, 78, 84, 85, 89, 90, 97, 104, 106, 109, 110, 111, 112, 114, 123, 131, 134, 141, 145, 148, 150, 151, 152, 154, 155, 156, 157, 166, 168, 170, 171, 173, 175, 177, 178, 179, 180, 183, 187, 188, 189, 190, 191, 192, 193, 203, 210, 212, 213, 220, 223, 224, 226, 229, 231, 233, 234, 236, 239, 242, 243, 249, 252, 256, 258, 260, 267, 275, 276, 278, 280, 285, 295, 298, 302, 303, 305, 313, 316, 318, 321, 326, 335, 338, 341, 353, 354, 356, 360, 367, 368, 381, 390, 391, 415, 419, 420, 422, 423, 424, 426, 431, 432, 442, 446, 447, 452, 453, 454, 458, 464, 472, 473, 484, 486, 488, 506, 508, 517, 518, 521, 522, 523, 524, 525, 526, 527, 528, 532, 533, 536, 537, 538, 539, 542, 545, 546, 548, 549, 551, 552, 554, 555, 557, 560, 562, 563, 564, 566, 567, 570, 572, 573, 575, 578, 583, 586, 589, 591, 593, 594, 597, 605, 609, 611, 615, 617, 622, 624, 625, 627, 628, 632, 635, 638, 642, 644, 645, 646, 647, 648, 649, 650, 652, 653, 654, 655, 656, 657, 660, 669, 670, 671, 682, 688, 690, 691, 694, 695, 696, 697, 698, 699, 700, 705, 708, 710, 712, 713, 716, 718, 720, 722, 723, 724, 725, 732, 733, 734, 735, 739, 740, 752, 753, 754, 755, 756, 761, 766, 771, 775, 777, 784, 798, 802, 807, 814, 822, 829, 830, 833, 834, 841, 844, 846, 847, 856, 858, 859, 862, 867, 869, 899, 904, 905, 906, 907, 908, 911, 918, 919, 925, 932, 933, 934, 935, 936, 940, 943, 952, 955, 964, 965, 968, 969, 972, 974, 977, 978, 980, 986, 988, 989, 990, 991, 992, 994, 995, 996, 997, 998, 1001, 1004, 1006, 1008, 1010, 1012, 1019, 1022, 1023, 1024, 1026, 1028, 1035, 1038, 1040, 1041, 1042, 1045, 1046, 1048, 1050, 1051, 1052, 1056, 1072, 1087, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1113, 1114, 1115, 1116, 1117, 1118, 1122, 1125, 1127, 1128, 1133, 1135, 1138, 1139, 1140, 1142, 1144, 1145, 1153, 1155, 1156, 1158, 1161, 1162, 1168], "sens": [17, 78, 153, 155, 172, 175, 180, 183, 202, 457, 465, 482, 567, 578, 585, 632, 660, 673, 763, 802, 841, 908, 932, 955, 962, 969, 1019, 1049, 1105, 1156], "entir": [17, 24, 30, 80, 110, 111, 144, 148, 151, 152, 153, 156, 162, 166, 175, 180, 187, 190, 208, 211, 212, 220, 234, 237, 240, 243, 255, 256, 258, 260, 270, 277, 280, 284, 290, 295, 298, 302, 306, 312, 372, 401, 405, 412, 415, 420, 428, 436, 444, 462, 668, 699, 719, 802, 829, 830, 835, 859, 864, 873, 881, 899, 906, 908, 911, 917, 934, 945, 978, 1007, 1011, 1025, 1030, 1031, 1048, 1050, 1069, 1100, 1133, 1136, 1139, 1156], "site": [17, 23, 27, 39, 61, 65, 134, 147, 148, 151, 163, 166, 178, 179, 180, 184, 210, 220, 226, 236, 239, 302, 577, 723, 841, 1104, 1121, 1122, 1128, 1135, 1142], "massag": [17, 32, 141, 162, 180, 256, 258, 756, 906, 978], "itself": [17, 27, 119, 122, 131, 151, 153, 179, 183, 189, 220, 226, 236, 239, 285, 313, 324, 370, 402, 438, 447, 453, 481, 482, 504, 519, 565, 572, 631, 708, 723, 732, 735, 777, 780, 802, 822, 828, 829, 830, 844, 862, 891, 961, 974, 988, 1016, 1019, 1024, 1045, 1085, 1126, 1142], "upon": [17, 27, 69, 97, 153, 154, 183, 187, 191, 198, 237, 269, 276, 295, 298, 315, 424, 442, 470, 522, 538, 577, 595, 718, 735, 775, 908, 974, 1062, 1126, 1133, 1153], "you": [17, 21, 43, 58, 59, 62, 109, 112, 114, 115, 119, 120, 122, 125, 126, 130, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 166, 167, 171, 172, 173, 175, 179, 180, 183, 187, 189, 190, 191, 203, 208, 210, 211, 212, 213, 220, 223, 226, 227, 229, 233, 234, 236, 237, 239, 243, 251, 260, 267, 270, 273, 276, 278, 280, 284, 306, 315, 321, 326, 332, 335, 338, 340, 343, 366, 367, 380, 396, 422, 426, 442, 484, 503, 504, 505, 506, 510, 513, 516, 517, 519, 552, 563, 564, 570, 575, 578, 579, 581, 582, 596, 617, 625, 632, 638, 646, 647, 651, 668, 674, 702, 712, 723, 750, 751, 753, 775, 777, 794, 802, 807, 828, 829, 830, 833, 834, 837, 841, 842, 848, 852, 854, 856, 862, 863, 864, 866, 867, 868, 869, 873, 874, 899, 902, 906, 907, 908, 909, 910, 911, 913, 915, 918, 919, 923, 925, 929, 934, 936, 944, 945, 946, 947, 948, 952, 976, 977, 978, 979, 981, 984, 988, 991, 992, 995, 1000, 1001, 1010, 1012, 1023, 1024, 1028, 1031, 1044, 1050, 1057, 1066, 1068, 1083, 1087, 1088, 1097, 1100, 1106, 1113, 1116, 1122, 1133, 1134, 1135, 1142, 1145, 1153, 1158], "view": [17, 63, 156, 157, 161, 172, 174, 187, 189, 255, 256, 260, 267, 315, 316, 353, 370, 372, 435, 662, 700, 709, 711, 754, 755, 829, 830, 839, 846, 899, 908, 910, 1031, 1099, 1153, 1156, 1158], "state": [17, 45, 114, 119, 147, 158, 163, 183, 191, 213, 220, 223, 226, 236, 237, 239, 375, 392, 424, 442, 509, 510, 514, 515, 562, 668, 702, 732, 760, 798, 819, 833, 891, 901, 945, 949, 960, 961, 998, 1004], "rather": [17, 65, 85, 126, 130, 131, 151, 153, 154, 155, 156, 157, 158, 161, 162, 166, 175, 179, 183, 187, 203, 212, 230, 231, 305, 321, 346, 358, 400, 432, 433, 442, 460, 511, 512, 513, 514, 515, 520, 555, 562, 564, 578, 585, 596, 616, 641, 647, 661, 682, 732, 734, 775, 802, 807, 839, 841, 887, 899, 906, 907, 908, 910, 917, 922, 945, 946, 973, 977, 992, 1017, 1024, 1027, 1035, 1075, 1076, 1079, 1090, 1092, 1107, 1114, 1135, 1140, 1153, 1155], "huge": [17, 157, 162, 172, 473, 709, 780, 798, 1023, 1025, 1129], "tabl": [17, 39, 63, 65, 131, 144, 148, 150, 183, 189, 190, 207, 215, 220, 226, 227, 229, 230, 233, 234, 236, 239, 246, 251, 285, 354, 358, 373, 387, 388, 392, 393, 397, 404, 410, 414, 417, 421, 430, 434, 439, 440, 640, 662, 700, 709, 752, 754, 755, 841, 1048, 1057, 1089, 1091, 1112, 1113], "isnot": 17, "big": [17, 104, 148, 151, 152, 158, 183, 187, 207, 213, 227, 234, 237, 280, 306, 335, 381, 426, 438, 517, 567, 597, 660, 724, 922, 1100, 1112, 1168], "fat": [17, 148, 150, 154, 158, 227, 654, 724, 833, 1112], "sai": [17, 24, 65, 66, 106, 123, 131, 139, 150, 151, 152, 153, 155, 156, 157, 158, 161, 162, 166, 171, 172, 183, 187, 224, 229, 251, 270, 273, 277, 279, 280, 301, 302, 321, 335, 426, 432, 438, 448, 458, 462, 471, 482, 488, 503, 505, 517, 546, 555, 564, 574, 622, 635, 647, 656, 660, 688, 692, 694, 695, 696, 698, 703, 710, 713, 714, 719, 761, 775, 802, 841, 844, 846, 881, 899, 906, 908, 919, 923, 934, 936, 946, 958, 969, 973, 979, 988, 991, 992, 998, 1002, 1024, 1040, 1052, 1057, 1087, 1108, 1142, 1156], "file": [17, 27, 29, 34, 35, 36, 38, 40, 44, 47, 50, 53, 54, 55, 56, 68, 78, 80, 85, 90, 91, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 114, 115, 119, 120, 126, 130, 135, 138, 143, 144, 147, 148, 150, 151, 152, 153, 156, 157, 162, 166, 170, 173, 175, 177, 178, 179, 180, 182, 183, 185, 187, 188, 190, 191, 192, 193, 198, 200, 201, 202, 203, 208, 211, 212, 213, 216, 217, 218, 221, 222, 224, 225, 226, 227, 229, 230, 231, 233, 234, 236, 237, 240, 241, 242, 243, 245, 247, 250, 251, 255, 256, 257, 260, 264, 266, 269, 270, 272, 273, 279, 280, 282, 286, 287, 291, 293, 294, 301, 302, 305, 306, 308, 309, 310, 314, 320, 321, 322, 323, 324, 325, 332, 335, 336, 337, 338, 339, 340, 346, 348, 349, 353, 364, 367, 368, 398, 399, 401, 402, 403, 404, 410, 414, 417, 421, 425, 430, 434, 436, 438, 439, 440, 443, 445, 447, 449, 450, 451, 456, 457, 460, 466, 480, 503, 504, 506, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 539, 542, 545, 547, 548, 551, 554, 557, 560, 565, 567, 579, 580, 581, 582, 588, 640, 644, 651, 654, 662, 677, 700, 706, 710, 720, 733, 752, 753, 754, 755, 758, 763, 764, 768, 769, 771, 772, 779, 780, 783, 793, 798, 804, 806, 809, 811, 817, 818, 820, 823, 826, 827, 828, 831, 832, 834, 835, 836, 838, 839, 841, 842, 844, 845, 846, 847, 848, 849, 850, 852, 853, 854, 855, 858, 860, 861, 862, 866, 870, 871, 872, 873, 874, 876, 879, 882, 887, 890, 895, 898, 899, 902, 906, 907, 908, 909, 911, 912, 914, 915, 921, 922, 925, 926, 927, 936, 939, 940, 943, 944, 950, 953, 956, 959, 961, 965, 967, 968, 969, 972, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 990, 992, 993, 994, 999, 1000, 1001, 1004, 1007, 1012, 1015, 1018, 1023, 1027, 1029, 1031, 1042, 1048, 1051, 1052, 1058, 1059, 1069, 1072, 1083, 1084, 1087, 1090, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1105, 1113, 1114, 1125, 1128, 1133, 1134, 1135, 1136, 1139, 1141, 1144, 1150, 1155, 1157, 1158, 1159, 1166, 1167, 1168, 1170], "rst": [17, 23, 32, 34, 35, 36, 38, 114, 135, 147, 170, 177, 182, 185, 191, 239, 249, 313, 343, 539, 542, 545, 548, 551, 554, 557, 965, 968, 972, 1139, 1144], "render": [17, 40, 156], "dure": [17, 27, 45, 46, 104, 106, 141, 150, 151, 152, 153, 157, 158, 162, 166, 171, 183, 187, 239, 338, 401, 405, 406, 420, 432, 437, 481, 488, 514, 517, 598, 616, 673, 712, 798, 802, 807, 834, 840, 906, 908, 917, 978, 992, 993, 1012, 1025, 1027, 1042, 1126, 1133], "regular": [17, 151, 175, 186, 200, 216, 223, 224, 231, 250, 251, 253, 255, 256, 265, 284, 285, 314, 360, 426, 444, 575, 577, 709, 753, 790, 802, 847, 881, 884, 886, 895, 908, 919, 969, 970, 1012, 1042, 1044, 1100], "process": [17, 28, 61, 63, 65, 73, 78, 80, 97, 99, 110, 111, 114, 156, 161, 168, 175, 181, 183, 190, 191, 193, 227, 257, 266, 279, 280, 287, 301, 337, 338, 345, 350, 403, 409, 438, 447, 466, 480, 508, 509, 510, 511, 512, 513, 514, 515, 518, 560, 727, 733, 753, 754, 755, 764, 769, 772, 774, 779, 783, 785, 788, 789, 792, 793, 794, 795, 797, 799, 802, 806, 807, 808, 811, 813, 816, 817, 819, 820, 822, 823, 829, 830, 831, 832, 833, 836, 837, 838, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 861, 863, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 882, 898, 907, 910, 911, 912, 913, 914, 917, 921, 922, 923, 927, 928, 929, 931, 932, 934, 936, 937, 939, 944, 945, 946, 953, 958, 959, 961, 962, 963, 970, 973, 974, 976, 978, 980, 981, 982, 983, 984, 985, 986, 987, 993, 994, 1003, 1011, 1024, 1025, 1079, 1145, 1158, 1167, 1168], "mean": [17, 29, 73, 74, 110, 111, 114, 119, 151, 153, 156, 158, 172, 174, 175, 187, 207, 210, 211, 224, 226, 239, 243, 270, 285, 293, 301, 305, 309, 320, 321, 358, 379, 380, 381, 403, 422, 427, 432, 486, 564, 572, 575, 576, 642, 688, 710, 714, 722, 723, 755, 761, 777, 837, 844, 847, 849, 850, 858, 899, 906, 907, 908, 935, 942, 958, 962, 964, 992, 995, 1004, 1019, 1027, 1030, 1044, 1045, 1050, 1078, 1098, 1101, 1105, 1107, 1108, 1114, 1119, 1140, 1155, 1158], "specif": [17, 63, 112, 154, 220, 226, 227, 236, 239, 285, 291, 302, 321, 355, 403, 420, 432, 462, 509, 512, 514, 517, 663, 706, 720, 753, 761, 775, 798, 802, 828, 838, 899, 906, 908, 922, 928, 944, 945, 970, 976, 988, 999, 1007, 1008, 1109, 1125, 1133, 1168, 1169], "markup": [17, 39], "class": [17, 21, 29, 42, 44, 55, 58, 63, 69, 70, 73, 74, 85, 92, 97, 106, 107, 108, 110, 111, 114, 115, 119, 120, 122, 123, 125, 126, 130, 131, 158, 169, 170, 171, 173, 178, 187, 188, 189, 190, 192, 194, 195, 207, 211, 213, 220, 223, 224, 226, 227, 231, 235, 237, 238, 241, 243, 246, 249, 251, 253, 255, 256, 258, 263, 264, 268, 270, 271, 273, 277, 278, 279, 280, 282, 283, 284, 285, 289, 291, 301, 302, 303, 305, 306, 307, 311, 313, 315, 316, 319, 321, 323, 329, 330, 337, 338, 339, 346, 372, 418, 442, 444, 452, 460, 461, 462, 463, 464, 466, 467, 469, 470, 474, 480, 481, 482, 484, 485, 487, 488, 489, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 518, 519, 525, 527, 532, 538, 546, 549, 552, 558, 560, 561, 562, 563, 565, 566, 567, 568, 569, 570, 573, 574, 576, 578, 583, 585, 586, 589, 595, 604, 605, 611, 615, 621, 624, 627, 628, 633, 634, 635, 637, 638, 642, 643, 645, 646, 647, 648, 649, 650, 652, 653, 654, 655, 656, 657, 664, 665, 666, 667, 668, 669, 670, 673, 677, 682, 684, 685, 686, 688, 690, 691, 694, 695, 696, 697, 698, 699, 700, 702, 703, 705, 707, 714, 716, 719, 720, 723, 724, 725, 732, 733, 734, 739, 740, 741, 743, 745, 749, 750, 751, 752, 754, 755, 757, 899, 906, 907, 908, 940, 942, 943, 997, 999, 1001, 1007, 1008, 1009, 1010, 1011, 1014, 1015, 1020, 1021, 1022, 1023, 1025, 1028, 1030, 1031, 1039, 1059, 1086, 1087, 1088, 1093, 1095, 1098, 1113, 1127, 1133, 1134, 1145, 1153, 1163], "handout": [17, 114], "warn": [17, 32, 40, 131, 147, 162, 203, 213, 264, 276, 332, 343, 368, 392, 423, 424, 426, 447, 461, 516, 518, 562, 566, 617, 661, 673, 755, 771, 777, 780, 839, 898, 928, 939, 953, 975, 999, 1050, 1128], "produc": [17, 108, 171, 173, 212, 226, 420, 432, 437, 688, 694, 696, 732, 734, 919, 949, 950, 968, 976, 979, 992, 1005, 1006, 1039, 1042, 1044, 1108], "error": [17, 21, 27, 29, 46, 65, 88, 97, 115, 119, 120, 130, 147, 150, 151, 152, 153, 156, 157, 166, 170, 173, 181, 184, 187, 190, 197, 208, 212, 218, 220, 223, 227, 228, 229, 233, 236, 239, 243, 246, 248, 251, 260, 261, 264, 267, 270, 273, 284, 285, 298, 303, 320, 335, 340, 342, 346, 365, 368, 370, 377, 381, 395, 396, 402, 408, 409, 411, 424, 425, 426, 429, 446, 447, 448, 450, 451, 452, 453, 456, 463, 467, 486, 487, 488, 500, 508, 519, 538, 555, 560, 562, 564, 565, 569, 570, 571, 572, 573, 575, 577, 585, 588, 593, 635, 637, 638, 647, 654, 661, 664, 668, 670, 671, 672, 673, 677, 697, 698, 699, 707, 710, 712, 714, 719, 720, 722, 733, 734, 736, 753, 754, 755, 758, 765, 780, 790, 794, 798, 802, 818, 832, 835, 836, 842, 845, 898, 899, 907, 909, 921, 923, 924, 925, 926, 927, 928, 936, 937, 939, 947, 953, 955, 956, 959, 960, 961, 969, 973, 974, 978, 979, 988, 993, 999, 1029, 1030, 1041, 1042, 1046, 1050, 1052, 1059, 1072, 1098, 1100, 1107, 1128, 1133, 1135, 1140, 1153], "output": [17, 23, 33, 40, 51, 53, 55, 56, 61, 63, 85, 86, 107, 125, 130, 131, 147, 153, 155, 156, 157, 170, 173, 179, 191, 192, 203, 212, 220, 226, 229, 230, 236, 239, 267, 320, 335, 340, 358, 359, 364, 365, 366, 367, 371, 403, 437, 438, 444, 445, 446, 486, 488, 503, 518, 521, 522, 523, 524, 536, 538, 546, 549, 575, 625, 643, 644, 657, 705, 710, 718, 755, 760, 815, 826, 833, 842, 845, 846, 847, 858, 862, 884, 888, 889, 894, 895, 899, 909, 920, 928, 931, 934, 942, 945, 946, 950, 970, 973, 974, 976, 1006, 1045, 1050, 1051, 1061, 1062, 1064, 1065, 1066, 1067, 1069, 1074, 1080, 1082, 1084, 1089, 1090, 1091, 1092, 1103, 1106, 1107, 1112, 1116, 1125, 1128, 1141, 1148, 1164], "must": [17, 39, 43, 44, 110, 111, 114, 120, 154, 158, 173, 179, 183, 184, 186, 187, 190, 194, 195, 208, 210, 212, 220, 226, 227, 234, 236, 237, 239, 260, 285, 302, 358, 375, 378, 392, 400, 418, 420, 435, 442, 444, 448, 454, 465, 470, 471, 484, 487, 488, 501, 502, 516, 519, 522, 523, 524, 536, 546, 572, 573, 575, 577, 587, 588, 622, 635, 642, 649, 656, 664, 665, 667, 668, 688, 712, 714, 726, 730, 755, 780, 786, 794, 800, 807, 829, 830, 846, 856, 864, 898, 909, 915, 918, 928, 929, 932, 937, 939, 947, 956, 958, 960, 970, 976, 979, 994, 999, 1000, 1017, 1022, 1028, 1041, 1042, 1044, 1045, 1047, 1050, 1079, 1100, 1134, 1145], "role": [17, 39, 65, 154, 158, 438, 519, 899], "somewher": [17, 172, 191, 203, 210, 243, 255, 256, 320, 332, 403, 420, 422, 442, 467, 488, 555, 688, 945, 1002, 1027, 1113], "top": [17, 28, 32, 34, 35, 38, 39, 50, 150, 151, 153, 154, 166, 172, 174, 175, 191, 193, 220, 226, 229, 236, 239, 445, 805, 814, 899, 919, 958, 960, 999, 1007, 1029, 1075, 1079, 1153, 1157, 1159, 1164], "insid": [17, 35, 39, 42, 50, 114, 119, 131, 150, 151, 179, 181, 203, 220, 226, 236, 239, 256, 276, 278, 293, 302, 309, 320, 335, 364, 368, 378, 396, 399, 401, 402, 420, 425, 444, 506, 517, 522, 570, 576, 578, 734, 753, 763, 773, 841, 871, 881, 906, 908, 931, 945, 964, 990, 995, 998, 1007, 1044, 1050, 1118, 1121, 1125, 1136, 1155, 1158], "ideal": [17, 162, 178, 220, 226, 236, 239, 256, 258, 431, 447, 458, 465, 513, 634, 688, 761, 780, 798, 802, 895, 915, 979, 1019, 1021], "slideshow": [17, 23, 230, 242, 269, 279, 290, 298, 301, 305, 311, 312, 319, 759, 762, 764, 767, 769, 772, 774, 781, 783, 785, 787, 789, 791, 793, 795, 797, 799, 801, 806, 808, 811, 813, 817, 820, 823, 1043, 1130, 1137], "manual": [17, 61, 63, 115, 125, 126, 130, 148, 158, 166, 189, 190, 220, 221, 226, 229, 236, 239, 269, 271, 366, 367, 370, 377, 415, 420, 444, 561, 603, 653, 660, 671, 697, 709, 710, 740, 741, 743, 744, 754, 755, 757, 758, 761, 802, 829, 830, 899, 906, 907, 929, 932, 945, 947, 949, 990, 992, 997, 1005, 1006, 1010, 1014, 1055], "theme": [17, 65, 327, 1031, 1050], "url": [17, 148, 155, 157, 166, 178, 517, 998, 1055], "_static": 17, "ui": [17, 32, 158, 381, 640], "default": [17, 23, 58, 61, 97, 110, 111, 112, 114, 122, 123, 151, 152, 157, 158, 162, 168, 179, 188, 190, 192, 199, 201, 212, 220, 223, 226, 229, 232, 235, 236, 239, 243, 246, 249, 254, 257, 264, 266, 267, 271, 275, 276, 278, 281, 285, 287, 288, 307, 313, 316, 328, 335, 381, 392, 424, 432, 438, 444, 445, 447, 450, 454, 457, 463, 466, 480, 482, 491, 492, 508, 518, 560, 562, 563, 568, 569, 572, 573, 597, 616, 617, 633, 638, 640, 642, 645, 646, 647, 648, 650, 652, 653, 654, 655, 656, 657, 660, 661, 668, 669, 698, 700, 716, 725, 730, 732, 733, 734, 739, 740, 745, 752, 754, 755, 798, 826, 829, 830, 832, 844, 857, 862, 881, 893, 894, 898, 899, 901, 906, 907, 909, 915, 918, 932, 936, 942, 945, 947, 949, 961, 973, 975, 977, 979, 990, 1019, 1021, 1027, 1046, 1048, 1050, 1055, 1091, 1108, 1118, 1121, 1123, 1128, 1133, 1135, 1153], "given": [17, 39, 59, 62, 69, 81, 102, 106, 107, 110, 111, 136, 151, 153, 156, 158, 162, 172, 220, 226, 236, 239, 243, 267, 275, 276, 278, 285, 313, 321, 368, 383, 426, 485, 514, 517, 519, 538, 562, 631, 642, 667, 753, 763, 773, 784, 802, 839, 844, 853, 855, 862, 884, 906, 986, 998, 1085, 1094, 1100, 1102, 1108, 1119, 1122, 1156, 1168], "path": [17, 21, 97, 99, 114, 120, 139, 140, 147, 156, 179, 183, 191, 194, 211, 222, 223, 224, 228, 231, 235, 236, 239, 257, 266, 267, 287, 288, 291, 293, 294, 309, 310, 313, 320, 321, 326, 328, 335, 340, 402, 438, 444, 446, 449, 450, 452, 466, 480, 508, 509, 510, 511, 512, 513, 514, 515, 518, 519, 520, 560, 585, 717, 733, 754, 755, 766, 780, 792, 802, 828, 829, 830, 831, 832, 835, 836, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 862, 863, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 882, 898, 918, 921, 927, 928, 929, 937, 938, 939, 953, 955, 956, 957, 959, 961, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 990, 997, 1007, 1024, 1027, 1088, 1128, 1133, 1135, 1143, 1155], "commit": [17, 46, 77, 112, 133, 154, 157, 165, 166, 208, 212, 213, 224, 227, 237, 343, 775, 1100, 1109, 1112, 1133, 1165], "place": [17, 55, 114, 126, 139, 148, 152, 153, 155, 156, 157, 158, 166, 171, 180, 184, 207, 223, 229, 239, 275, 276, 358, 374, 396, 403, 420, 443, 452, 456, 460, 484, 486, 500, 519, 532, 577, 591, 593, 594, 605, 616, 624, 627, 628, 638, 657, 723, 726, 734, 750, 753, 755, 780, 802, 831, 852, 853, 854, 855, 906, 907, 915, 961, 991, 993, 1002, 1032, 1041, 1045, 1047, 1065, 1122, 1135], "_download": 17, "7a046b2e956b892f20b3485964f7b2cf": 17, "rel": [17, 78, 99, 114, 151, 158, 187, 203, 224, 257, 266, 267, 287, 288, 353, 466, 480, 508, 509, 510, 511, 512, 513, 514, 515, 518, 560, 677, 682, 733, 754, 755, 802, 829, 830, 831, 832, 835, 836, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 882, 898, 906, 918, 921, 927, 929, 937, 939, 953, 956, 959, 961, 978, 980, 981, 982, 983, 984, 985, 986, 987, 993, 1104, 1105, 1112, 1125], "up": [17, 21, 27, 32, 34, 35, 38, 43, 45, 53, 78, 112, 123, 126, 130, 141, 148, 150, 151, 152, 154, 156, 158, 161, 166, 170, 171, 202, 208, 213, 218, 220, 224, 226, 236, 239, 251, 256, 258, 267, 276, 302, 315, 320, 338, 342, 348, 349, 416, 423, 432, 433, 438, 442, 446, 447, 467, 516, 517, 518, 519, 532, 555, 579, 580, 581, 582, 585, 632, 637, 702, 705, 718, 719, 732, 753, 761, 765, 770, 771, 773, 784, 786, 794, 798, 802, 803, 841, 862, 863, 881, 894, 899, 901, 906, 907, 908, 915, 925, 958, 964, 969, 974, 976, 979, 988, 997, 1000, 1011, 1015, 1021, 1044, 1057, 1061, 1078, 1083, 1095, 1100, 1105, 1108, 1116, 1128, 1134, 1140, 1145, 1156], "uri": 17, "well": [17, 42, 65, 151, 153, 156, 157, 158, 162, 175, 179, 187, 210, 212, 239, 275, 277, 285, 293, 302, 309, 321, 381, 403, 432, 442, 470, 510, 516, 519, 520, 543, 563, 567, 578, 592, 660, 667, 674, 697, 710, 720, 724, 827, 846, 862, 895, 902, 907, 908, 919, 932, 934, 952, 976, 978, 991, 999, 1000, 1003, 1007, 1010, 1014, 1017, 1020, 1031, 1035, 1045, 1103, 1105, 1113, 1129, 1155], "blah": [19, 23, 39, 62, 65, 133, 151, 154, 173, 184, 191, 194, 199, 207, 210, 216, 220, 226, 227, 229, 231, 236, 239, 246, 249, 261, 268, 271, 281, 285, 303, 313, 327, 328, 335, 343, 346, 426, 673, 736, 753, 758, 766, 925, 926, 969, 970, 995, 1030, 1036, 1055, 1116], "watch": [20, 32, 152, 153, 154, 172, 179, 183, 187, 188, 192, 278, 280, 284, 443, 710, 899, 907, 943, 1003, 1024, 1126], "w5g8k7a2gbg": 20, "bore": [20, 212, 234, 248, 264, 290, 862, 970, 974, 1031, 1100], "good": [20, 27, 29, 43, 97, 114, 148, 150, 151, 152, 153, 158, 166, 175, 183, 187, 190, 208, 211, 212, 220, 224, 229, 230, 231, 233, 234, 237, 243, 258, 260, 270, 273, 276, 278, 284, 285, 306, 315, 354, 377, 381, 422, 426, 428, 436, 437, 442, 465, 466, 480, 508, 509, 510, 511, 512, 513, 514, 515, 518, 525, 527, 543, 560, 564, 568, 569, 583, 586, 589, 605, 611, 615, 618, 624, 627, 628, 633, 637, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 669, 671, 700, 711, 716, 722, 725, 731, 733, 735, 740, 743, 752, 754, 755, 759, 761, 794, 802, 807, 827, 841, 845, 895, 899, 907, 908, 932, 934, 951, 960, 963, 964, 970, 973, 999, 1012, 1030, 1031, 1042, 1045, 1047, 1050, 1062, 1072, 1099, 1100, 1107, 1126, 1155], "j2hzby8e4yq": 20, "pov": 20, "classmethod": [21, 264], "staticmethod": [21, 264], "member": [21, 35, 38, 43, 57, 63, 110, 111, 114, 166, 172, 173, 174, 184, 189, 211, 229, 241, 254, 269, 276, 285, 316, 339, 411, 420, 427, 464, 506, 508, 511, 514, 538, 552, 560, 562, 563, 565, 566, 567, 568, 574, 578, 579, 581, 583, 616, 617, 621, 642, 645, 648, 649, 650, 652, 653, 654, 655, 656, 657, 660, 668, 672, 673, 682, 688, 698, 714, 720, 751, 753, 755, 763, 768, 770, 790, 798, 802, 815, 821, 828, 829, 830, 845, 846, 847, 848, 849, 850, 856, 891, 895, 906, 934, 988, 1049, 1125, 1145], "final": [21, 38, 42, 61, 78, 106, 147, 173, 183, 187, 190, 210, 212, 220, 226, 227, 236, 241, 254, 260, 284, 306, 316, 444, 517, 519, 584, 585, 634, 660, 671, 700, 754, 755, 765, 796, 802, 829, 830, 895, 907, 908, 976, 993, 997, 1010, 1062, 1078, 1100, 1153], "exec": [21, 29, 158, 183, 192, 223, 237, 238, 246, 253, 265, 269, 271, 279, 280, 281, 285, 292, 301, 305, 312, 314, 755, 890, 895, 928, 931, 952, 976, 1001, 1098, 1166], "dict": [21, 170, 183, 184, 188, 199, 201, 202, 207, 210, 224, 225, 226, 227, 230, 232, 235, 236, 237, 241, 247, 261, 264, 271, 281, 285, 291, 296, 303, 307, 313, 327, 330, 335, 660, 997, 1000, 1012, 1013, 1022, 1048], "There": [21, 45, 55, 57, 65, 68, 81, 97, 123, 148, 150, 152, 153, 154, 155, 158, 162, 163, 179, 180, 184, 186, 187, 190, 194, 195, 208, 213, 229, 232, 233, 234, 237, 243, 270, 273, 276, 277, 278, 279, 280, 301, 302, 316, 321, 356, 366, 372, 381, 396, 399, 420, 422, 429, 432, 443, 444, 448, 457, 462, 487, 488, 538, 546, 563, 568, 613, 638, 656, 657, 669, 671, 677, 700, 705, 716, 720, 724, 725, 733, 752, 754, 755, 775, 802, 807, 833, 862, 899, 906, 907, 952, 962, 973, 974, 1025, 1031, 1042, 1100, 1109, 1134, 1140], "half": [21, 36, 151, 152, 153, 213, 428, 447, 800, 841, 907, 960, 997], "heart": [21, 32, 38, 141, 447, 841, 1106], "split": [21, 148, 171, 174, 207, 211, 216, 217, 220, 223, 224, 226, 231, 235, 241, 249, 252, 264, 269, 271, 285, 291, 307, 314, 326, 335, 420, 444, 466, 538, 997, 1106], "pimp": 21, "elabor": [21, 162, 227, 237, 422, 445, 907], "namespac": [21, 183, 220, 226, 233, 236, 239, 243, 254, 264, 467, 469, 484, 520, 521, 522, 523, 524, 526, 536, 537, 555, 577, 585, 590, 591, 592, 593, 594, 600, 601, 603, 604, 607, 608, 609, 613, 627, 644, 650, 651, 660, 675, 697, 707, 710, 732, 734, 735, 906, 940, 943, 955, 957, 1007], "__init__": [21, 63, 147, 170, 171, 182, 184, 187, 189, 207, 210, 211, 223, 224, 226, 233, 236, 239, 243, 249, 252, 261, 264, 271, 281, 285, 303, 307, 444, 997, 998, 999, 1007, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1133], "__all__": [21, 239, 243], "etc": [21, 23, 29, 63, 90, 100, 114, 140, 144, 148, 152, 156, 165, 168, 169, 173, 180, 187, 190, 194, 195, 197, 200, 201, 208, 209, 211, 212, 214, 218, 221, 223, 224, 226, 230, 231, 234, 240, 241, 242, 243, 245, 246, 248, 250, 253, 263, 264, 267, 270, 271, 273, 281, 283, 284, 286, 289, 290, 306, 307, 311, 312, 313, 319, 321, 322, 323, 324, 325, 326, 335, 340, 343, 353, 376, 381, 437, 447, 455, 469, 552, 640, 702, 708, 735, 753, 755, 761, 775, 802, 814, 824, 832, 834, 837, 839, 842, 844, 845, 846, 847, 858, 862, 865, 876, 879, 881, 882, 884, 886, 887, 888, 889, 890, 891, 893, 895, 898, 908, 909, 910, 918, 919, 922, 923, 924, 929, 935, 944, 955, 969, 970, 974, 976, 997, 999, 1001, 1008, 1009, 1010, 1011, 1015, 1023, 1034, 1043, 1046, 1050, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1110, 1113, 1114, 1120, 1125, 1127, 1148, 1149, 1157, 1159, 1163, 1164, 1167, 1169], "user": [21, 23, 29, 31, 47, 53, 63, 65, 84, 101, 102, 110, 111, 114, 120, 135, 137, 147, 148, 150, 151, 152, 153, 155, 156, 158, 166, 173, 179, 182, 183, 184, 187, 191, 198, 207, 210, 212, 214, 223, 229, 231, 236, 237, 239, 240, 242, 243, 246, 249, 251, 260, 261, 264, 267, 270, 271, 273, 281, 285, 288, 295, 296, 298, 302, 307, 313, 315, 320, 332, 335, 344, 400, 431, 442, 444, 445, 447, 452, 460, 470, 487, 488, 508, 522, 538, 560, 563, 564, 570, 577, 621, 625, 644, 646, 647, 648, 649, 656, 657, 673, 677, 709, 720, 733, 754, 755, 761, 763, 773, 775, 800, 802, 815, 816, 829, 830, 832, 836, 840, 841, 842, 846, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 862, 886, 890, 893, 898, 899, 900, 909, 915, 922, 927, 928, 929, 932, 934, 937, 939, 944, 953, 956, 957, 959, 961, 962, 973, 976, 990, 992, 993, 994, 997, 1014, 1015, 1052, 1059, 1061, 1062, 1066, 1078, 1079, 1085, 1090, 1092, 1095, 1097, 1098, 1111, 1116, 1119, 1123, 1126, 1135, 1142, 1153], "import": [21, 29, 63, 65, 139, 147, 153, 158, 161, 171, 172, 173, 174, 183, 184, 187, 189, 190, 195, 199, 201, 202, 203, 211, 215, 216, 217, 222, 223, 224, 226, 231, 233, 236, 239, 243, 246, 249, 252, 255, 256, 261, 264, 268, 269, 270, 271, 273, 275, 281, 285, 291, 296, 299, 303, 307, 313, 328, 330, 358, 374, 444, 447, 448, 585, 602, 668, 706, 720, 723, 755, 784, 802, 844, 862, 899, 902, 906, 915, 927, 954, 964, 975, 996, 997, 998, 1000, 1008, 1010, 1012, 1018, 1019, 1022, 1028, 1029, 1030, 1031, 1032, 1033, 1035, 1040, 1044, 1052, 1053, 1054, 1055, 1088, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1105, 1106, 1108, 1111, 1112, 1114, 1116, 1117, 1118, 1119, 1121, 1122, 1123, 1124, 1125, 1127, 1128, 1130, 1133, 1134, 1137, 1140, 1158, 1163], "pythonpath": [21, 40, 61, 183, 269, 1007, 1055], "goto": [21, 397, 404, 410, 414, 417, 421, 430, 434, 439, 440, 662, 700, 752, 754, 755, 973], "orgi": [21, 452, 664], "perspect": [21, 38, 158, 180], "alwai": [21, 43, 65, 80, 112, 147, 148, 153, 163, 180, 187, 210, 232, 243, 269, 270, 273, 315, 327, 335, 340, 358, 376, 402, 403, 415, 427, 428, 432, 433, 435, 436, 452, 453, 472, 482, 512, 561, 567, 577, 596, 599, 655, 660, 664, 675, 699, 708, 712, 715, 719, 724, 761, 780, 798, 802, 807, 828, 862, 863, 906, 907, 908, 922, 928, 934, 962, 973, 978, 988, 993, 999, 1027, 1031, 1045, 1100, 1105, 1106, 1107, 1133, 1134, 1153], "valgrind": [21, 97, 178, 212, 353, 430, 434, 435, 437, 439, 440, 467, 532, 542, 544, 552, 555, 570, 705, 718, 719, 755, 1150, 1151], "supervis": [21, 1107], "hack": [21, 53, 59, 62, 97, 131, 145, 148, 166, 174, 178, 183, 187, 188, 212, 213, 227, 229, 237, 248, 255, 256, 257, 258, 266, 278, 279, 287, 288, 295, 298, 302, 315, 316, 335, 339, 343, 344, 346, 353, 354, 402, 445, 466, 467, 480, 506, 508, 509, 510, 511, 512, 513, 514, 515, 518, 525, 527, 538, 580, 595, 596, 616, 658, 669, 700, 701, 702, 706, 718, 733, 753, 754, 755, 756, 832, 857, 858, 898, 939, 986, 1024, 1120, 1126, 1133, 1152, 1153, 1167], "someth": [21, 43, 55, 66, 72, 73, 74, 78, 83, 84, 87, 119, 126, 144, 150, 151, 153, 154, 156, 158, 162, 166, 172, 179, 183, 191, 199, 201, 202, 203, 213, 223, 227, 234, 249, 252, 276, 278, 295, 298, 315, 330, 393, 394, 408, 462, 484, 517, 519, 555, 566, 570, 575, 578, 585, 609, 653, 654, 655, 665, 668, 682, 712, 720, 722, 723, 749, 750, 751, 755, 763, 775, 779, 790, 798, 802, 804, 807, 822, 874, 898, 899, 902, 906, 907, 908, 923, 924, 932, 934, 935, 947, 958, 960, 961, 973, 988, 995, 997, 998, 1000, 1004, 1021, 1028, 1030, 1035, 1045, 1051, 1082, 1107, 1158], "malloc": [21, 178, 415, 416, 429, 544, 788, 922, 974, 976, 1150], "seomth": 21, "cleanup": [21, 151, 170, 346, 561, 637, 673, 717, 974, 997, 1134], "obviou": [21, 57, 158, 166, 172, 233, 243, 270, 273, 332, 403, 422, 444, 519, 561, 668, 677, 718, 724, 740, 928, 970, 995, 1031, 1042, 1156], "lead": [21, 110, 111, 119, 151, 153, 157, 158, 175, 212, 239, 243, 267, 285, 305, 362, 370, 380, 452, 642, 654, 802, 828, 841, 907, 960, 969, 970, 988, 1015, 1041, 1052, 1062, 1113, 1127], "sever": [21, 87, 114, 151, 211, 212, 400, 469, 474, 648, 659, 800, 858, 899, 999, 1025, 1036], "duplic": [21, 42, 49, 97, 115, 119, 130, 171, 184, 229, 237, 247, 269, 320, 362, 364, 425, 426, 469, 528, 536, 549, 570, 577, 588, 666, 723, 755, 809, 845, 898, 934, 937, 939, 956, 1082, 1133, 1135], "when": [21, 28, 30, 43, 63, 65, 75, 80, 110, 111, 122, 126, 131, 138, 139, 148, 150, 151, 152, 153, 156, 158, 166, 168, 180, 183, 189, 212, 213, 220, 224, 226, 227, 229, 236, 237, 239, 242, 243, 256, 258, 267, 275, 276, 278, 285, 293, 309, 316, 321, 326, 335, 346, 353, 360, 368, 370, 376, 381, 392, 399, 403, 418, 423, 424, 425, 426, 427, 432, 442, 444, 447, 450, 454, 457, 458, 461, 462, 466, 486, 488, 519, 520, 564, 566, 567, 570, 578, 600, 616, 631, 632, 635, 637, 642, 644, 649, 653, 655, 660, 663, 665, 667, 668, 671, 688, 702, 707, 710, 715, 719, 720, 723, 727, 730, 732, 734, 753, 770, 773, 780, 784, 796, 798, 800, 802, 816, 835, 837, 841, 844, 846, 858, 862, 884, 895, 907, 908, 915, 919, 923, 924, 928, 931, 932, 950, 952, 958, 961, 962, 964, 969, 973, 974, 976, 978, 993, 997, 998, 999, 1004, 1008, 1011, 1017, 1019, 1024, 1027, 1030, 1031, 1033, 1035, 1040, 1041, 1042, 1052, 1091, 1108, 1113, 1118, 1128, 1133, 1135, 1142, 1153, 1155, 1156], "void": [21, 42, 44, 55, 58, 107, 119, 123, 125, 126, 130, 153, 154, 162, 194, 212, 224, 335, 357, 358, 360, 364, 366, 368, 372, 378, 382, 396, 398, 399, 400, 401, 403, 406, 408, 409, 412, 415, 416, 418, 419, 425, 426, 429, 445, 452, 461, 462, 463, 467, 469, 473, 482, 491, 492, 496, 497, 500, 501, 502, 504, 516, 518, 519, 520, 543, 555, 562, 564, 565, 566, 567, 570, 571, 572, 573, 574, 575, 577, 578, 585, 591, 595, 604, 617, 631, 634, 635, 638, 640, 641, 650, 652, 660, 661, 666, 670, 673, 674, 688, 690, 691, 693, 694, 695, 696, 698, 699, 702, 703, 704, 705, 706, 707, 709, 710, 712, 717, 718, 719, 720, 722, 724, 727, 729, 732, 734, 736, 753, 763, 766, 773, 780, 782, 784, 786, 788, 796, 798, 807, 812, 816, 822, 839, 859, 920, 924, 925, 926, 928, 938, 945, 947, 949, 951, 955, 960, 966, 969, 970, 973, 974, 976, 988, 992, 994, 1145], "f": [21, 31, 38, 43, 63, 109, 114, 137, 152, 153, 154, 162, 174, 184, 189, 190, 195, 196, 199, 201, 207, 208, 210, 211, 217, 219, 220, 223, 224, 226, 230, 232, 233, 236, 239, 243, 246, 248, 250, 252, 260, 261, 264, 268, 271, 276, 281, 285, 290, 292, 299, 303, 307, 314, 327, 329, 331, 346, 372, 377, 387, 389, 398, 401, 406, 425, 426, 428, 432, 436, 444, 461, 567, 571, 587, 661, 667, 673, 674, 703, 724, 727, 761, 766, 828, 839, 846, 862, 881, 888, 890, 891, 906, 907, 908, 909, 931, 962, 964, 969, 984, 988, 991, 995, 997, 998, 999, 1000, 1012, 1014, 1016, 1017, 1020, 1021, 1022, 1041, 1042, 1050, 1057, 1062, 1095, 1097, 1100, 1108, 1133, 1163], "alloc": [21, 122, 153, 154, 171, 173, 212, 220, 223, 226, 236, 239, 261, 370, 399, 415, 420, 423, 426, 429, 467, 551, 553, 567, 569, 570, 577, 596, 601, 608, 613, 624, 628, 632, 657, 668, 671, 705, 710, 719, 720, 724, 753, 755, 758, 761, 763, 788, 790, 804, 807, 839, 845, 924, 925, 926, 946, 1006, 1057], "variabl": [21, 29, 87, 89, 90, 97, 104, 110, 111, 147, 152, 153, 162, 166, 170, 172, 173, 179, 183, 184, 187, 188, 189, 190, 192, 195, 196, 197, 202, 203, 208, 209, 211, 212, 214, 218, 221, 222, 224, 225, 226, 229, 230, 232, 234, 240, 241, 242, 243, 245, 247, 248, 250, 254, 257, 262, 263, 264, 266, 267, 270, 273, 276, 280, 282, 283, 284, 286, 287, 288, 289, 290, 296, 301, 302, 303, 305, 306, 308, 311, 312, 314, 319, 321, 322, 323, 324, 325, 326, 335, 337, 338, 357, 359, 360, 368, 373, 381, 388, 392, 393, 396, 397, 398, 402, 404, 405, 408, 410, 414, 415, 417, 418, 420, 421, 422, 428, 429, 430, 432, 434, 439, 440, 446, 448, 452, 454, 473, 481, 487, 496, 501, 506, 547, 552, 567, 575, 576, 583, 595, 635, 642, 657, 662, 668, 671, 673, 700, 702, 714, 733, 751, 752, 753, 754, 755, 771, 790, 802, 832, 833, 836, 839, 863, 882, 898, 939, 944, 947, 951, 952, 953, 958, 976, 986, 987, 988, 993, 995, 997, 1000, 1001, 1007, 1008, 1009, 1010, 1011, 1015, 1023, 1027, 1029, 1034, 1038, 1040, 1042, 1043, 1046, 1051, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1066, 1067, 1068, 1069, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1107, 1110, 1113, 1114, 1120, 1122, 1127, 1128, 1154, 1156, 1163, 1169], "filenam": [21, 42, 50, 55, 58, 150, 170, 174, 199, 217, 220, 223, 224, 226, 231, 236, 239, 249, 264, 267, 280, 281, 285, 313, 327, 444, 503, 506, 520, 753, 802, 828, 829, 891, 929, 932, 933, 934, 935, 936, 940, 943, 969, 997, 1007, 1052, 1057, 1069, 1078, 1080, 1084, 1090, 1092], "getenv": [21, 501, 957], "fopen": 21, "read": [21, 29, 43, 47, 53, 55, 56, 57, 73, 74, 83, 85, 114, 150, 151, 152, 153, 154, 156, 158, 161, 162, 166, 179, 183, 187, 188, 190, 192, 198, 208, 211, 218, 221, 224, 226, 227, 229, 231, 237, 239, 240, 245, 246, 248, 251, 258, 259, 260, 263, 267, 269, 271, 277, 281, 283, 284, 285, 288, 289, 290, 307, 311, 312, 313, 315, 316, 319, 320, 321, 322, 323, 324, 325, 335, 339, 341, 346, 365, 366, 373, 381, 388, 397, 404, 410, 414, 417, 418, 420, 421, 422, 424, 426, 429, 430, 434, 438, 439, 440, 443, 459, 466, 487, 503, 508, 519, 520, 543, 549, 560, 563, 564, 566, 569, 572, 575, 621, 625, 644, 647, 659, 662, 669, 677, 700, 714, 722, 749, 752, 753, 754, 755, 761, 775, 786, 802, 804, 828, 829, 830, 833, 839, 844, 845, 846, 847, 849, 850, 853, 862, 863, 895, 898, 902, 906, 907, 908, 915, 920, 922, 923, 925, 926, 929, 932, 935, 937, 938, 939, 940, 942, 943, 950, 952, 956, 960, 966, 969, 970, 973, 974, 993, 999, 1000, 1015, 1018, 1020, 1028, 1036, 1058, 1059, 1069, 1078, 1088, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1106, 1108, 1116, 1123, 1166], "onli": [21, 29, 42, 43, 89, 108, 110, 111, 114, 115, 119, 122, 131, 141, 147, 148, 150, 151, 153, 154, 155, 156, 157, 158, 161, 162, 166, 171, 172, 179, 183, 187, 189, 190, 208, 210, 213, 220, 223, 226, 229, 230, 231, 233, 236, 237, 239, 240, 242, 243, 248, 250, 251, 252, 263, 264, 267, 269, 270, 276, 280, 283, 285, 289, 290, 293, 302, 309, 311, 319, 326, 329, 343, 350, 360, 366, 368, 369, 370, 372, 377, 378, 380, 385, 392, 393, 396, 398, 400, 401, 402, 403, 419, 420, 424, 425, 426, 427, 428, 437, 442, 444, 445, 447, 448, 451, 453, 456, 457, 461, 462, 463, 465, 473, 481, 482, 484, 486, 487, 488, 500, 501, 516, 517, 520, 523, 524, 538, 549, 562, 563, 564, 565, 567, 569, 571, 572, 575, 577, 578, 584, 598, 600, 616, 617, 621, 631, 632, 634, 638, 642, 646, 647, 654, 656, 660, 667, 671, 673, 677, 682, 688, 698, 702, 705, 709, 710, 714, 715, 719, 720, 726, 728, 730, 732, 734, 739, 743, 745, 746, 755, 758, 760, 763, 766, 771, 782, 788, 798, 802, 807, 810, 815, 819, 827, 828, 829, 830, 837, 840, 844, 846, 847, 852, 858, 862, 863, 884, 891, 899, 900, 901, 906, 907, 908, 909, 919, 924, 925, 928, 930, 931, 932, 936, 938, 942, 944, 947, 952, 955, 958, 960, 961, 962, 963, 969, 970, 973, 974, 976, 977, 988, 992, 993, 997, 998, 999, 1002, 1008, 1012, 1014, 1017, 1019, 1020, 1025, 1026, 1027, 1028, 1030, 1031, 1032, 1033, 1035, 1036, 1040, 1045, 1046, 1050, 1052, 1055, 1059, 1064, 1072, 1074, 1075, 1078, 1079, 1083, 1085, 1098, 1100, 1105, 1106, 1107, 1109, 1112, 1121, 1125, 1126, 1133, 1139, 1140, 1142, 1145, 1153, 1155, 1158, 1170], "bullshit": [21, 65, 195, 207, 243, 447, 710, 1163], "everyon": [21, 65, 151, 156, 166, 187, 442, 647, 698, 849, 850, 860, 962], "get": [21, 55, 63, 97, 110, 111, 139, 140, 147, 148, 151, 153, 154, 161, 162, 170, 183, 184, 187, 189, 194, 201, 202, 203, 210, 212, 213, 220, 223, 226, 227, 229, 232, 233, 236, 239, 246, 252, 256, 258, 261, 264, 267, 271, 281, 285, 291, 303, 307, 313, 330, 335, 338, 340, 355, 381, 426, 435, 458, 462, 467, 482, 491, 496, 573, 580, 652, 660, 670, 688, 694, 714, 715, 718, 719, 720, 721, 723, 736, 745, 753, 755, 763, 768, 775, 802, 804, 818, 821, 835, 837, 841, 842, 862, 898, 908, 915, 918, 924, 925, 926, 939, 941, 946, 963, 970, 974, 991, 997, 1010, 1013, 1019, 1023, 1031, 1048, 1118, 1125, 1135, 1140, 1145, 1158], "point": [21, 34, 36, 38, 40, 61, 89, 97, 106, 109, 112, 114, 150, 151, 152, 153, 155, 156, 157, 158, 161, 162, 166, 171, 172, 173, 174, 178, 183, 187, 188, 189, 190, 192, 210, 212, 213, 220, 223, 226, 229, 236, 239, 244, 247, 269, 278, 285, 302, 303, 305, 321, 341, 342, 343, 346, 357, 358, 359, 364, 370, 372, 374, 376, 380, 402, 405, 408, 411, 412, 415, 416, 426, 428, 457, 462, 465, 472, 473, 481, 504, 506, 518, 538, 539, 540, 563, 565, 567, 569, 570, 571, 573, 574, 576, 579, 583, 594, 595, 603, 618, 619, 632, 637, 638, 657, 660, 663, 665, 667, 671, 677, 688, 710, 714, 719, 723, 735, 753, 755, 798, 802, 831, 839, 841, 845, 846, 862, 899, 900, 908, 918, 922, 925, 928, 961, 974, 977, 990, 994, 995, 996, 998, 1002, 1010, 1036, 1040, 1042, 1045, 1107, 1109, 1111, 1113, 1133, 1135, 1142, 1145, 1150, 1154], "unobvi": [21, 802], "best": [21, 30, 39, 48, 57, 119, 151, 152, 153, 162, 175, 232, 368, 400, 422, 429, 432, 433, 442, 521, 565, 570, 634, 699, 712, 732, 790, 792, 794, 798, 800, 839, 862, 884, 900, 907, 908, 944, 958, 962, 990, 1004, 1010, 1047, 1052, 1054, 1111, 1121], "resourc": [21, 80, 97, 110, 111, 151, 153, 156, 168, 178, 213, 229, 270, 273, 278, 315, 316, 338, 346, 474, 538, 552, 563, 567, 568, 632, 657, 668, 669, 671, 700, 705, 716, 717, 719, 720, 725, 732, 733, 752, 754, 755, 786, 788, 796, 835, 839, 840, 907, 924, 925, 926, 944, 958, 961, 997, 1050], "leaki": 21, "erron": [21, 429, 1062], "worst": [21, 151, 400, 908, 960, 973, 1153, 1156], "extract": [21, 29, 55, 97, 140, 144, 211, 237, 240, 245, 248, 260, 263, 283, 284, 289, 290, 311, 312, 319, 384, 403, 507, 508, 538, 549, 560, 753, 755, 802, 815, 828, 990, 1015, 1037, 1059, 1093, 1094, 1095, 1096, 1098, 1106], "common": [21, 24, 143, 151, 208, 224, 225, 237, 243, 248, 403, 412, 443, 518, 596, 723, 739, 743, 753, 827, 899, 900, 908, 932, 969, 999, 1004, 1005, 1006, 1022, 1031, 1032, 1036, 1042, 1046, 1049, 1100, 1108, 1109, 1133, 1156], "hm": [21, 32, 63, 191, 201, 220, 223, 226, 233, 327, 792, 818, 819, 926, 1019, 1104, 1135, 1140, 1142], "end": [21, 23, 32, 37, 42, 106, 145, 150, 153, 154, 156, 158, 161, 183, 184, 189, 190, 195, 199, 203, 223, 224, 226, 227, 229, 239, 243, 246, 249, 263, 264, 285, 291, 298, 303, 326, 327, 364, 367, 371, 392, 408, 420, 424, 425, 426, 428, 431, 432, 435, 465, 487, 488, 496, 497, 500, 501, 502, 552, 555, 567, 591, 593, 595, 596, 597, 599, 600, 602, 603, 604, 606, 607, 609, 613, 616, 620, 621, 627, 644, 660, 688, 691, 695, 702, 708, 709, 710, 712, 717, 718, 731, 732, 794, 800, 802, 818, 845, 846, 847, 862, 890, 894, 895, 906, 908, 924, 925, 926, 928, 934, 950, 969, 1002, 1022, 1026, 1028, 1035, 1038, 1042, 1046, 1050, 1121, 1123, 1125, 1128, 1163, 1166], "sketch": [21, 119, 131, 148, 154, 183, 190, 191, 203, 212, 213, 280, 302, 339, 343, 405, 406, 416, 428, 660, 759, 771, 969], "clearest": 21, "ach": 21, "bad": [21, 43, 120, 147, 150, 153, 160, 175, 183, 208, 214, 230, 231, 233, 242, 243, 258, 279, 280, 301, 315, 381, 424, 428, 442, 584, 650, 700, 711, 718, 736, 754, 755, 770, 782, 807, 810, 919, 920, 945, 947, 951, 952, 973, 992, 997, 999, 1012, 1013, 1024, 1031, 1042, 1072, 1100, 1153], "earliest": 21, "noth": [21, 43, 63, 119, 141, 150, 151, 153, 156, 161, 166, 180, 191, 210, 223, 249, 302, 356, 395, 402, 426, 444, 451, 555, 634, 668, 675, 688, 702, 705, 770, 780, 798, 800, 834, 884, 899, 907, 908, 923, 925, 947, 969, 974, 1000, 1007, 1019, 1040, 1042, 1048, 1133, 1140, 1142], "jump": [21, 45, 104, 150, 392, 396, 555, 702, 705, 712, 841, 894, 973, 1108], "outest": 21, "level": [21, 78, 151, 152, 162, 220, 226, 236, 239, 260, 293, 309, 346, 370, 396, 402, 442, 445, 447, 448, 454, 462, 470, 681, 682, 753, 784, 786, 798, 805, 814, 838, 899, 906, 915, 919, 978, 986, 999, 1007, 1019, 1040, 1050, 1075, 1079, 1109, 1112, 1122, 1128, 1155], "cleanup_stage1": 21, "screenplai": [22, 60, 144, 153, 174, 178, 230, 242, 251, 269, 277, 279, 290, 298, 301, 302, 305, 306, 311, 312, 319, 335, 443, 459, 467, 538, 541, 544, 547, 550, 553, 556, 559, 595, 596, 616, 759, 762, 767, 772, 776, 778, 814, 817, 820, 823, 967, 971, 975, 1043, 1130, 1137, 1141, 1143, 1146], "dies": [23, 159, 160, 165, 168, 169, 170, 178, 184, 194, 195, 199, 207, 214, 231, 233, 239, 240, 243, 335, 340, 353, 1148, 1150, 1151, 1152, 1157, 1163, 1164, 1166, 1170, 1171], "einreichungsunterlagen": 23, "diesem": [23, 160, 194, 1150, 1167], "formular": 23, "projekten": [23, 1164, 1165], "mehrer": [23, 1157], "projektpartn": 23, "muss": [23, 174, 184, 194, 199, 240, 335, 340, 1148, 1150, 1157, 1164], "federf\u00fchrend": 23, "auftreten": 23, "projektleitung": 23, "projektabwicklung": 23, "seiten": 23, "f\u00f6rdergeb": 23, "erfolgtausschlie\u00dflich": 23, "federf\u00fchrenden": 23, "antragstel": 23, "s\u00e4mtlich": 23, "weiterenprojektpartn": 23, "innen": 23, "zus\u00e4tzlich": [23, 159], "anzugeben": 23, "aufteilung": 23, "f\u00f6rdersumm": 23, "erfolgen": [23, 165, 195], "soll": [23, 160, 186, 215, 254, 1147], "punkt": [23, 160, 170, 186, 196, 240], "erfolgreichemf\u00f6rderantrag": 23, "anschluss": 23, "f\u00f6rdervertrag": 23, "erstellt": 23, "derzuerkannten": 23, "\u00fcberweisungen": 23, "f\u00f6rderraten": 23, "anteil": 23, "dieprojektpartn": 23, "fall": [23, 160, 169, 183, 186, 194, 199, 243, 254, 384, 392, 510, 682, 688, 784, 942, 943, 960, 1102, 1122], "allenprojektpartn": 23, "unterschreiben": 23, "verbindlich": 23, "vereinbart": 23, "privatperson": 23, "organis": [23, 212], "uni": 23, "contemporari": 23, "open": [23, 34, 35, 38, 39, 42, 48, 49, 54, 63, 68, 114, 131, 150, 151, 154, 158, 166, 168, 172, 174, 188, 190, 192, 201, 210, 211, 213, 217, 220, 223, 224, 226, 231, 234, 239, 246, 249, 251, 264, 267, 269, 271, 276, 278, 281, 285, 307, 313, 327, 342, 381, 442, 444, 450, 768, 796, 804, 829, 830, 838, 839, 841, 844, 846, 887, 906, 915, 923, 924, 929, 932, 934, 935, 938, 940, 943, 944, 966, 969, 973, 976, 993, 999, 1000, 1069, 1095, 1097, 1108, 1133, 1148, 1165, 1166], "wer": [23, 159], "unser": [23, 187, 195, 1148], "motiv": [23, 28, 97, 841, 860, 958, 1005, 1006], "300": [23, 170, 172, 184, 220, 223, 226, 231, 233, 239, 243, 246, 264, 285, 291, 307, 313, 327, 358, 360, 362, 378, 402, 590, 591, 592, 593, 594, 596, 597, 598, 599, 613, 775], "zeichen": [23, 233], "lebe": 23, "einerseit": [23, 165], "kleineren": 23, "gr\u00f6\u00dferen": [23, 1165], "andererseit": [23, 165], "haupts\u00e4chlich": [23, 195, 1163], "unternehmen": 23, "halt": [23, 110, 111, 194, 223, 239, 246, 249, 264, 271, 281, 285, 307, 313, 835, 893, 908], "bringen": [23, 1148], "schulungsunterlagen": [23, 1147], "wartbarkeit": 23, "nichtverf\u00fcgbarkeit": 23, "problem": [23, 45, 57, 80, 107, 114, 119, 139, 151, 158, 167, 170, 172, 174, 175, 181, 183, 184, 187, 188, 190, 192, 203, 207, 212, 229, 231, 237, 251, 256, 258, 269, 273, 276, 277, 279, 280, 288, 293, 294, 302, 305, 309, 310, 315, 316, 321, 342, 353, 381, 392, 402, 403, 406, 420, 426, 428, 444, 449, 473, 488, 532, 538, 573, 587, 600, 632, 635, 659, 732, 748, 754, 755, 802, 841, 901, 962, 986, 988, 992, 997, 1002, 1004, 1007, 1008, 1019, 1031, 1045, 1095, 1100, 1102, 1106, 1125, 1133, 1134, 1148, 1155, 1156], "darstellt": 23, "wen": 23, "nutzen": [23, 1166], "400": [23, 148, 153, 170, 184, 194, 223, 226, 268, 285, 303, 444, 613, 1057, 1060], "stellen": [23, 165], "kursverlauf": 23, "vorhandenem": 23, "zusammen": [23, 1147], "bereiten": [23, 194], "kursergebniss": 23, "editoren": 23, "kreieren": 23, "warten": 23, "kursmateri": 23, "endbenutz": 23, "konsumieren": 23, "usecas": [23, 919, 1022], "gel\u00f6st": [23, 184], "500": [23, 194, 201, 220, 223, 226, 268, 313, 613, 899, 926, 1057, 1060], "hierarchisch": 23, "gruppierung": 23, "einzelthemen": 23, "zuwenig": 23, "bauen": [23, 1150, 1160, 1169], "aufeinand": [23, 889], "explizit": [23, 168, 178, 184, 194, 254, 281, 1150, 1151, 1167], "abh\u00e4ngigkeitsbeziehungen": [23, 1160], "fehlen": 23, "extrem": [23, 151, 210, 231, 239, 246, 249, 271, 335, 340, 403, 442, 595, 664, 712, 802, 829, 830, 1112, 1148, 1160], "verringert": 23, "zusammenarbeit": [23, 1147], "trainern": 23, "fehlend": [23, 170], "aggregierbarkeit": 23, "bzw": [23, 159, 168, 174, 178, 200, 353, 1157, 1164, 1166], "referenzierbarkeit": 23, "fremdunterlagen": 23, "analog": [23, 184, 969, 1118], "librari": [23, 63, 71, 74, 78, 85, 97, 103, 104, 106, 108, 110, 111, 114, 131, 151, 153, 162, 170, 172, 174, 179, 180, 181, 188, 190, 192, 211, 213, 220, 226, 236, 239, 243, 255, 256, 267, 269, 293, 294, 309, 310, 316, 336, 337, 338, 353, 354, 357, 358, 367, 375, 398, 415, 425, 432, 438, 448, 449, 453, 454, 456, 457, 466, 480, 503, 506, 508, 509, 510, 511, 512, 513, 514, 515, 518, 520, 527, 546, 560, 561, 605, 611, 615, 623, 624, 625, 627, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 677, 682, 708, 733, 753, 754, 755, 780, 832, 835, 836, 898, 919, 920, 921, 926, 927, 929, 936, 937, 939, 944, 947, 953, 956, 959, 961, 973, 976, 977, 978, 979, 981, 982, 983, 984, 986, 988, 1023, 1025, 1040, 1042, 1045, 1112, 1129, 1142, 1150, 1152, 1154, 1155, 1166, 1168], "anfangen": 23, "geben": [23, 1151, 1152], "trainingsunterlagen": 23, "ging": [23, 159, 353], "funktioniert": [23, 184, 233], "projektergebni": 23, "basiert": [23, 254, 1148, 1151, 1160, 1167], "popul\u00e4ren": 23, "dokumentationstool": 23, "gestaltet": [23, 178, 1147, 1157], "eigentlich": [23, 170, 184, 1148, 1151], "kern": 23, "begleitet": [23, 186], "meinem": [23, 160, 169, 195, 890, 1163], "eigenen": [23, 1157, 1164], "quasi": [23, 174, 178], "spin": [23, 732, 805, 839], "off": [23, 115, 122, 150, 152, 153, 156, 161, 172, 183, 203, 246, 381, 384, 423, 431, 432, 447, 453, 454, 509, 510, 515, 555, 635, 688, 723, 796, 807, 833, 858, 886, 899, 906, 908, 934, 943, 952, 962, 969, 1028, 1046, 1080, 1105, 1158], "anwendbar": [23, 1170], "klarer": 23, "bezug": [23, 240], "f\u00f6rdervoraussetzung": 23, "bitt": [23, 159, 178, 184, 194, 195, 1147, 1163], "gehen": 23, "folgenden": [23, 178, 353, 890], "ausschlie\u00dflich": 23, "jene": 23, "aspekt": [23, 1149, 1157, 1164, 1167], "klaren": 23, "mehrwert": 23, "technologi": [23, 223, 960, 976, 1057], "infrastruktur": [23, 1148, 1157, 1164], "sozial": 23, "gesellschaft": 23, "umwelt": 23, "wirtschaftlich": [23, 186], "wissenschaftlich": 23, "kooperationen": 23, "regionalpolitik": 23, "framework": [23, 78, 168, 178, 187, 213, 229, 458, 517, 906, 908, 1126, 1133, 1134, 1169, 1171], "jeglich": [23, 1157], "art": [23, 32, 45, 988, 1156], "konsistenzgecheckt": 23, "crossreferenc": 23, "webseiten": 23, "hinweg": [23, 195, 1163], "erm\u00f6glicht": [23, 186, 353], "gesellschaftlich": 23, "\u00f6ffentlich": [23, 165, 1147], "verf\u00fcgbarkeit": 23, "erleichterung": 23, "machen": [23, 159, 170, 174, 184, 233, 330, 353, 1148, 1151, 1152, 1157, 1171], "commun": [23, 63, 72, 73, 74, 78, 81, 83, 87, 112, 136, 139, 151, 166, 175, 183, 198, 267, 302, 332, 341, 342, 418, 462, 733, 734, 754, 755, 761, 802, 814, 835, 898, 899, 906, 907, 908, 923, 928, 939, 944, 953, 960, 963, 969, 974, 1008, 1096, 1099, 1116, 1153, 1156, 1158, 1167, 1168], "trainerinnen": 23, "kann": [23, 37, 159, 160, 168, 174, 178, 184, 194, 207, 214, 254, 307, 335, 340, 353, 1147, 1148, 1150, 1152, 1157, 1164, 1165, 1166, 1169, 1171], "sch\u00f6pfen": 23, "trainerinnenn": 23, "gegeneinand": 23, "genau": [23, 168, 170, 184, 330, 890, 1150, 1167, 1169, 1170], "die_der": 23, "adressat_in": 23, "je": [23, 32, 160, 194], "konkret": 23, "eingrenzen": 23, "desto": 23, "dieser": [23, 37, 159, 178, 194, 246, 330, 353, 1147, 1148, 1149, 1157, 1159, 1160, 1166, 1167], "adressat_innen": 23, "ber\u00fccksichtigen": 23, "wahrscheinlich": [23, 174, 1157, 1164], "deshalb": 23, "nachhaltig": 23, "wirkung": 23, "weil": [23, 170, 184, 186, 207, 246, 303, 353, 1148, 1150, 1152], "speziellen": 23, "konzepten": 23, "unterschiedlich": [23, 195, 240, 1163], "zielgruppen": 23, "beziehung": [23, 178], "zueinand": 23, "stehen": [23, 184, 1169], "anbieter_innen": 23, "nachfrager_innen": 23, "drei": [23, 159, 170, 178, 184, 194, 199, 201, 220, 223, 231, 233, 236, 239, 246, 249, 264, 271, 281, 285, 291, 303, 307, 330], "angeben": 23, "m\u00f6glichst": 23, "erheblich": 23, "ihrer": [23, 231, 335, 340, 1157, 1164], "jeweiligen": [23, 1147], "sein": [23, 160, 168, 169, 186, 194, 195, 207, 233, 271, 1148, 1150, 1163, 1164, 1166, 1169, 1170, 1171], "dann": [23, 160, 170, 178, 184, 195, 233, 239, 240, 246, 281, 353, 1148, 1160, 1163, 1171], "einzelnen": 23, "aussieht": [23, 1149], "erst": [23, 178, 194, 207, 233, 240, 246, 264, 303, 330, 1148, 1150], "bestandteil": [23, 1169], "n": [23, 35, 38, 40, 50, 63, 111, 153, 162, 170, 171, 172, 178, 184, 194, 199, 201, 202, 210, 212, 215, 216, 217, 220, 223, 224, 226, 229, 231, 233, 236, 239, 243, 246, 249, 261, 264, 271, 275, 281, 285, 303, 307, 313, 326, 327, 328, 330, 335, 357, 358, 360, 364, 366, 368, 370, 372, 377, 380, 390, 392, 398, 399, 403, 408, 416, 420, 425, 444, 445, 452, 519, 552, 571, 577, 595, 641, 642, 645, 646, 648, 649, 652, 653, 654, 655, 656, 657, 665, 667, 682, 755, 780, 816, 835, 839, 849, 859, 862, 875, 891, 893, 894, 908, 920, 922, 923, 924, 925, 926, 932, 933, 935, 960, 966, 970, 973, 976, 982, 988, 992, 994, 1019, 1020, 1022, 1037, 1039, 1044, 1045, 1050, 1051, 1095, 1097, 1133, 1145], "l\u00f6sen": 23, "wollen": [23, 37, 199, 353, 1152, 1157, 1160, 1164, 1166], "hilfestellung": 23, "abgrenzung": 23, "organisationen": 23, "privatpersonen": 23, "bestimmt": 23, "branch": [23, 50, 54, 61, 112, 143, 154, 157, 166, 270, 273, 396, 437, 438, 745, 775, 802, 804, 814, 906, 908, 1035, 1165, 1171], "gruppen": 23, "staatlich": 23, "verwaltung": 23, "privat": [23, 57, 102, 107, 114, 153, 165, 166, 178, 180, 187, 188, 191, 211, 224, 229, 241, 260, 276, 278, 298, 334, 335, 340, 452, 456, 461, 463, 467, 469, 474, 484, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 506, 546, 552, 561, 565, 567, 569, 570, 572, 573, 574, 576, 578, 588, 603, 604, 621, 631, 633, 634, 646, 657, 660, 663, 664, 666, 667, 670, 671, 682, 684, 685, 686, 688, 690, 691, 694, 695, 696, 697, 703, 704, 705, 718, 719, 720, 723, 724, 732, 734, 739, 741, 743, 745, 755, 796, 831, 832, 837, 851, 857, 898, 915, 1020, 1128, 1145, 1167], "verein": 23, "npo": 23, "wissenschaft": 23, "universit\u00e4t": 23, "fachhochschulen": 23, "richtungen": 23, "regionen": 23, "stadt": [23, 216], "land": [23, 450, 740], "bezirk": 23, "gemeinden": 23, "interessensgruppen": 23, "selbstvermarkter_innen": 23, "landwirtschaft": 23, "handwerk": 23, "u": [23, 32, 34, 35, 36, 38, 42, 53, 59, 62, 114, 133, 153, 156, 161, 171, 181, 184, 187, 189, 195, 212, 223, 227, 231, 233, 236, 239, 261, 268, 285, 305, 380, 411, 436, 720, 771, 777, 812, 839, 847, 858, 859, 861, 862, 886, 899, 906, 908, 927, 964, 973, 976, 986, 994, 1031, 1033, 1057, 1108, 1112, 1116, 1128, 1133, 1140, 1156, 1163], "altersgrupp": 23, "genderspezifisch": 23, "frauen": 23, "region": [23, 151, 758, 786], "grupp": [23, 199, 344, 890], "sch\u00fcler_innen": 23, "lehrer_innen": 23, "thematisch": 23, "deutsch": [23, 215, 333, 334, 1147], "fl\u00fcchtling": 23, "posit": [23, 29, 63, 112, 158, 184, 187, 188, 190, 192, 194, 199, 207, 211, 220, 227, 231, 236, 237, 239, 246, 249, 260, 263, 270, 273, 275, 277, 279, 280, 283, 285, 289, 291, 295, 298, 301, 302, 305, 306, 307, 313, 321, 366, 403, 416, 555, 596, 603, 612, 613, 736, 755, 862, 899, 907, 923, 924, 928, 969, 997, 998, 1001, 1042, 1043, 1045, 1046, 1047, 1098, 1113, 1121, 1135, 1140], "zielgruppentyp": 23, "350": [23, 223, 226, 271, 285, 313, 1057], "bereitet": 23, "vor": [23, 159, 160, 174, 184, 196, 231, 1160, 1169], "lt": [23, 32, 35, 36, 153, 158, 170, 173, 178, 179, 184, 189, 194, 199, 201, 207, 210, 215, 220, 223, 226, 231, 233, 236, 239, 243, 246, 249, 252, 261, 264, 268, 271, 281, 285, 291, 303, 307, 313, 329, 330, 331, 508, 525, 527, 560, 605, 611, 615, 624, 627, 628, 657, 755], "zielvorgaben": 23, "basierend": [23, 170, 1147, 1152], "existierendem": 23, "f\u00fchrt": [23, 160, 1167], "jederzeit": [23, 165, 174, 353], "\u00fcberblick": [23, 174, 178, 240, 254, 353, 354, 1147, 1155, 1157, 1163, 1164, 1167, 1169], "behaltend": 23, "behandelten": 23, "fragen": [23, 186, 202, 335, 340, 353, 1147, 1157, 1164], "antworten": [23, 186], "info": [23, 161, 268, 269, 432, 436, 437, 438, 444, 445, 447, 570, 719, 777, 907, 947, 977, 978, 1133], "bed\u00fcrfni": [23, 159], "schulungsagenden": 23, "erstellen": [23, 353, 1152, 1157], "zeitaufw\u00e4ndig": 23, "fehlertr\u00e4chtig": 23, "vom": [23, 64, 159, 168, 169, 170, 184, 194, 195, 214, 239, 243, 1157, 1163, 1164, 1171], "erwartet": [23, 160, 184], "w\u00e4hrend": [23, 1147], "einzugehen": [23, 186, 1170], "geplanten": [23, 1147], "verlassen": [23, 824], "birgt": 23, "chao": [23, 860, 1031], "teilnehmerinnen": 23, "\u00fcbersichtlich": 23, "nachbearbeitung": 23, "hinterlassen": [23, 159], "absch\u00e4tzung": 23, "zielgruppengr\u00f6\u00df": 23, "affinem": 23, "background": [23, 162, 255, 256, 258, 315, 316, 658, 662, 688, 700, 727, 752, 754, 755, 777, 840, 907, 945, 954, 960, 1008], "inklus": [23, 171, 184, 194, 207, 1147, 1152, 1157], "betroffen": 23, "eu": [23, 32], "20000": [23, 150, 226], "erkennung": 23, "abstand": 23, "erfordert": [23, 1157], "vgl": [23, 184, 1167, 1170], "frosch": 23, "wassergla": 23, "selbst": [23, 37, 174, 184, 194, 824, 1147, 1148, 1157, 1160, 1166, 1171], "umstellung": 23, "zus\u00e4tzlichen": 23, "bedeutet": [23, 315], "besten": [23, 174, 240, 1150], "einsatz": [23, 1148], "erw\u00e4gung": 23, "ziehen": 23, "angegebenen": 23, "erheblichen": [23, 1150], "bed\u00fcrfnissen": 23, "kenntni": 23, "erlangt": 23, "mitgli": 23, "editor": [23, 30, 63, 166, 183, 321, 887, 1024, 1028, 1107, 1126], "verfasst": 23, "identisch": 23, "obig": 23, "behebt": 23, "inkonsistenzen": 23, "baut": [23, 1148, 1166], "neue": [23, 184, 194, 226, 254, 303, 330, 353, 1167], "verliert": [23, 1171], "aufbaubeziehungen": 23, "verlangt": [23, 1147], "grundlag": 23, "folienmateri": 23, "meist": [23, 1166], "powerpoint": [23, 30], "propriet\u00e4r": 23, "formaten": 23, "praktisch": [23, 170, 1147], "unm\u00f6glich": 23, "macht": [23, 168, 170, 174, 178, 184, 190, 194, 236, 240, 330, 1150, 1157, 1164, 1171], "artefakttypen": 23, "livehack": [23, 24, 60, 114, 144, 170, 176, 178, 187, 188, 195, 214, 227, 229, 230, 242, 251, 256, 258, 259, 267, 270, 277, 279, 284, 290, 295, 298, 301, 302, 305, 306, 311, 312, 319, 335, 353, 443, 459, 466, 538, 753, 755, 767, 804, 1043, 1130, 1137, 1163], "st\u00fcckwerk": 23, "trainerin": 23, "oben": [23, 120, 159, 184, 195, 201, 1163], "zielt": 23, "darauf": [23, 159, 170, 1147, 1150], "transpar": [23, 29, 37, 786, 788, 838, 1113], "wiederzuverwenden": 23, "sodass": [23, 37, 178, 1166, 1171], "aufgebrochen": 23, "schwer": [23, 174, 184, 353, 1157, 1164, 1169], "abzusch\u00e4tzen": 23, "abzielt": 23, "weg": [23, 159, 160, 170, 174, 186, 199, 214, 254, 353, 1148, 1150, 1151, 1152, 1164], "dorthin": 23, "m\u00fcssen": [23, 184, 335, 340, 1157, 1164], "unterst\u00fctzt": [23, 1171], "kursf\u00fchrung": [23, 353], "fragt": [23, 160], "unklarheiten": 23, "weist": [23, 159], "etwaig": 23, "verwandt": [23, 1150], "hin": [23, 353], "plausibl": [23, 153], "realistisch": 23, "bzgl": 23, "kursdauer": 23, "strukturierten": [23, 195], "langweiligen": 23, "tatsachen": 23, "entsprechend": 23, "hunderttausend": 23, "allerd": [23, 184, 186, 1151, 1152, 1166, 1171], "keinen": [23, 159, 303, 1150], "einfluss": 23, "wahl": [23, 1171], "gespr\u00e4ch": 23, "betroffenen": 23, "assoziieren": 23, "metadaten": 23, "setzt": [23, 168, 1148, 1157], "vorau": 23, "beziehungen": 23, "passt": [23, 194, 195, 1163], "ganz": [23, 159, 160, 169, 170, 174, 184, 186, 200, 201, 215, 232, 233, 353, 1151, 1152, 1166], "gut": [23, 159, 160, 184, 195, 353, 671, 1147, 1163], "y": [23, 111, 133, 162, 171, 172, 174, 201, 210, 216, 217, 223, 224, 226, 227, 239, 249, 252, 261, 264, 271, 281, 285, 291, 307, 313, 381, 387, 405, 408, 411, 412, 416, 428, 432, 444, 506, 516, 562, 563, 564, 565, 567, 569, 570, 571, 572, 573, 574, 576, 578, 580, 581, 588, 595, 603, 642, 663, 664, 665, 667, 682, 684, 685, 686, 703, 714, 723, 770, 771, 802, 803, 835, 849, 862, 864, 875, 881, 906, 907, 908, 982, 990, 996, 1054, 1057, 1105], "algorithmen": [23, 254, 1152], "automatisch": [23, 1167, 1171], "berechnen": 23, "semiautomatisch": 23, "kursnavig": 23, "nachbereitung": 23, "plaintext": 23, "artefakt": [23, 1152], "text": [23, 27, 39, 40, 60, 147, 161, 172, 183, 186, 191, 192, 199, 211, 212, 217, 224, 231, 233, 251, 254, 257, 264, 266, 285, 287, 377, 451, 755, 832, 894, 898, 925, 976, 1024, 1031, 1037, 1046, 1055, 1078, 1112, 1119, 1124, 1126, 1160], "restrukturierung": 23, "o": [23, 29, 32, 38, 63, 78, 85, 90, 97, 98, 100, 107, 110, 111, 114, 126, 130, 133, 144, 151, 153, 154, 161, 162, 170, 174, 178, 188, 190, 191, 192, 194, 199, 201, 202, 208, 211, 212, 216, 218, 221, 222, 223, 224, 227, 228, 229, 230, 235, 236, 240, 241, 242, 243, 245, 247, 250, 252, 254, 257, 261, 263, 266, 267, 268, 270, 271, 273, 276, 277, 280, 282, 283, 284, 286, 287, 289, 291, 301, 303, 305, 306, 311, 312, 313, 319, 320, 321, 322, 323, 324, 325, 326, 335, 340, 342, 353, 355, 357, 373, 388, 397, 403, 404, 408, 410, 414, 417, 420, 421, 430, 432, 434, 436, 437, 439, 440, 444, 445, 451, 456, 470, 497, 508, 519, 560, 578, 662, 700, 726, 732, 733, 734, 752, 753, 754, 755, 770, 771, 779, 780, 802, 809, 828, 829, 830, 831, 832, 833, 835, 836, 838, 839, 847, 859, 862, 866, 867, 869, 870, 873, 874, 876, 882, 890, 891, 895, 898, 899, 906, 907, 919, 929, 932, 933, 934, 935, 936, 939, 944, 945, 953, 956, 959, 960, 961, 970, 976, 977, 978, 982, 984, 988, 992, 993, 994, 997, 999, 1001, 1002, 1003, 1007, 1023, 1026, 1029, 1031, 1037, 1045, 1052, 1057, 1058, 1059, 1069, 1072, 1080, 1083, 1084, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1105, 1113, 1114, 1128, 1133, 1140, 1150, 1157, 1170], "konsistent": 23, "referenzierung": 23, "fremdmateri": 23, "speisekart": 23, "unterst\u00fctzung": 23, "themenauswahl": [23, 1147], "korrekt": [23, 1150], "vorbereitet": [23, 353], "ma\u00dfnahmen": 23, "sicherstellung": 23, "geplant": 23, "beispielsweis": [23, 165, 1170], "rahmen": 23, "webplattform": 23, "entsteht": 23, "erh\u00f6hung": 23, "sichtbarkeit": [23, 1150, 1167], "aktuel": 23, "inhalt": [23, 184, 186, 216, 336, 824, 1147, 1171], "wartung": 23, "performanceverbesserungen": 23, "plane": [23, 172, 174, 1102], "kein": [23, 169, 170, 174, 184, 194, 201, 216, 252, 271, 330, 353, 1165], "impactmein": 23, "sicherzustellen": 23, "erkl\u00e4rung": [23, 208], "erkl\u00e4ren": [23, 1150], "gew\u00fcnscht": [23, 184], "erreicht": [23, 159, 160, 1164], "hatt": [23, 159, 160, 174, 184, 186], "button": [23, 114, 150, 158, 237, 899], "gew\u00e4hlt": [23, 159, 160], "dzugeh\u00f6rig": 23, "textfeld": 23, "l\u00e4sst": [23, 1166], "bearbeiten": 23, "daher": [23, 1171], "konvertiert": 23, "unten": [23, 120, 160, 174, 184, 1148], "beschriebenen": 23, "kan\u00e4len": 23, "promot": [23, 155], "angab": 23, "quellen": 23, "literatur": [23, 212, 575], "lightweight": [23, 141, 166, 183, 187, 203, 237, 239, 251, 663, 721, 724, 1100, 1112, 1153], "daringfirebal": 23, "project": [23, 24, 29, 30, 38, 42, 53, 59, 62, 65, 68, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 130, 133, 141, 147, 151, 152, 156, 157, 158, 163, 170, 172, 174, 180, 183, 187, 190, 197, 202, 211, 230, 234, 237, 240, 267, 270, 277, 284, 316, 339, 340, 346, 348, 353, 354, 424, 431, 435, 443, 445, 446, 447, 450, 451, 453, 455, 458, 459, 460, 466, 506, 507, 516, 519, 579, 581, 582, 726, 755, 802, 841, 897, 899, 901, 906, 907, 918, 936, 976, 977, 978, 991, 992, 1053, 1059, 1086, 1088, 1098, 1099, 1101, 1102, 1106, 1114, 1116, 1130, 1132, 1136, 1137, 1142], "docutil": [23, 32, 34, 35, 36, 38], "sourceforg": 23, "io": [23, 32, 55, 63, 91, 126, 130, 151, 155, 157, 172, 174, 188, 190, 191, 192, 193, 200, 202, 203, 211, 212, 225, 241, 257, 264, 266, 272, 287, 288, 302, 308, 314, 323, 335, 338, 340, 342, 357, 561, 753, 755, 779, 798, 799, 814, 832, 835, 843, 898, 907, 908, 961, 969, 990, 997, 1050, 1149, 1157, 1159, 1164, 1166, 1170], "generatoren": [23, 174, 241, 353], "staticgen": 23, "learn": [23, 29, 65, 68, 70, 75, 77, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 134, 151, 153, 171, 172, 174, 183, 187, 191, 212, 221, 301, 305, 321, 336, 338, 442, 706, 755, 844, 899, 907, 961, 1023, 1024, 1098, 1102, 1106, 1114, 1135], "moodl": [23, 106, 109, 110, 111, 114, 158, 339, 341, 342, 643, 657, 755, 832, 836, 851, 857, 876, 882, 898, 983, 986], "schoologi": 23, "eduongo": 23, "produkt": 23, "dienstleistungen": 23, "recherch": [23, 174], "hinblick": [23, 1159], "ihnen": [23, 160, 889, 1147, 1157, 1164], "nennen": 23, "beschreiben": 23, "st\u00e4rken": [23, 1150], "schw\u00e4chen": [23, 1152], "konkurrierenden": 23, "relevant": [23, 174, 353, 1170], "anbiet": 23, "ziel": [23, 1148, 1164], "allumfassend": 23, "eh": [23, 32, 184, 194, 199, 207, 233, 239, 243, 246, 291, 313], "vielmehr": 23, "bietet": [23, 165, 168, 1166], "beim": [23, 159, 160, 170, 174, 184, 1150], "verfassen": 23, "kernthema": 23, "zwischen": [23, 168, 184, 194, 201, 207, 353, 1150, 1151, 1152, 1164, 1171], "benutz": [23, 1167], "vorgaben": 23, "existiert": [23, 184, 196], "wald": 23, "dass": [23, 159, 160, 168, 170, 174, 178, 184, 195, 199, 201, 215, 335, 340, 353, 1147, 1150, 1151, 1152, 1157, 1163, 1164, 1167, 1171], "beisteuert": 23, "eben": [23, 165, 168, 194], "\u00fcbergreifend": 23, "definiert": [23, 170, 184, 1147, 1150], "ansatz": 23, "mir": [23, 159, 160, 174, 184, 195, 199, 231, 335, 340, 353, 1150, 1163], "verfolgt": [23, 1164], "essentiel": 23, "gesundheit": 23, "unterlagen": [23, 147, 214, 230, 242, 353], "licht": 23, "lesen": [23, 168, 169, 170, 184, 196, 335, 340], "einig": [23, 160, 171, 186, 353, 1150, 1157], "plugin": [23, 153, 470, 707, 990], "helfen": 23, "lieblo": 23, "halbherzig": 23, "On": [23, 97, 101, 106, 109, 110, 111, 114, 133, 151, 153, 166, 187, 203, 213, 229, 245, 247, 255, 256, 258, 261, 267, 273, 276, 315, 335, 420, 426, 435, 438, 470, 508, 516, 605, 624, 628, 657, 660, 700, 708, 727, 754, 755, 780, 803, 807, 832, 835, 836, 898, 900, 906, 908, 915, 919, 920, 923, 927, 934, 937, 939, 956, 964, 974, 979, 986, 987, 991, 1029, 1116, 1120, 1135, 1153], "zentral": [23, 147], "ergebni": [23, 236], "niemand": 23, "doc": [23, 37, 39, 65, 115, 126, 130, 155, 157, 170, 171, 173, 203, 211, 218, 220, 226, 235, 236, 239, 243, 246, 261, 304, 320, 332, 335, 340, 343, 344, 355, 555, 758, 773, 779, 782, 862, 884, 942, 1045, 1111], "show": [23, 24, 27, 29, 43, 58, 63, 114, 123, 126, 131, 150, 151, 153, 154, 158, 179, 187, 190, 191, 203, 212, 220, 226, 229, 236, 237, 239, 267, 279, 280, 293, 301, 309, 315, 316, 320, 321, 339, 341, 342, 343, 346, 405, 445, 447, 456, 487, 503, 509, 555, 644, 740, 765, 784, 786, 818, 829, 830, 862, 884, 887, 889, 891, 899, 901, 906, 907, 908, 927, 958, 960, 964, 969, 973, 986, 988, 996, 1035, 1052, 1054, 1105, 1106, 1128, 1135, 1142, 1155], "revealj": 23, "option": [23, 31, 78, 145, 151, 152, 153, 157, 161, 166, 170, 175, 191, 203, 227, 239, 243, 251, 254, 255, 256, 264, 269, 273, 285, 293, 294, 302, 305, 309, 310, 315, 335, 355, 364, 365, 381, 392, 393, 432, 445, 448, 449, 457, 458, 464, 491, 519, 740, 755, 771, 822, 826, 829, 830, 838, 890, 908, 909, 911, 919, 932, 936, 970, 978, 1034, 1052, 1055, 1128, 1135, 1142, 1150, 1155, 1168], "webslid": 23, "tv": [23, 32, 158], "sicht": [23, 169, 240, 1150], "entscheidend": 23, "usp": 23, "vorteilhaft": 23, "unterscheidet": [23, 1150], "600": [23, 220, 226, 613], "kernfeatur": 23, "inbeziehungsetzen": 23, "dessen": [23, 169, 184, 281, 353, 1148, 1152, 1165], "versagen": 23, "implementierung": 23, "solcher": [23, 168, 184], "featur": [23, 29, 42, 46, 55, 56, 78, 80, 112, 114, 131, 156, 158, 168, 179, 184, 187, 188, 190, 192, 197, 202, 211, 220, 226, 229, 236, 237, 239, 240, 242, 243, 282, 315, 337, 353, 354, 430, 434, 439, 440, 442, 443, 445, 634, 659, 662, 669, 676, 687, 701, 711, 712, 716, 720, 725, 733, 751, 752, 754, 755, 794, 802, 899, 907, 908, 928, 960, 970, 977, 978, 994, 1008, 1009, 1010, 1011, 1015, 1018, 1025, 1037, 1038, 1053, 1056, 1057, 1058, 1059, 1072, 1083, 1086, 1087, 1088, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1101, 1102, 1103, 1106, 1110, 1114, 1116, 1118, 1127, 1130, 1132, 1133, 1137, 1148, 1150, 1151, 1153, 1157, 1164], "indem": [23, 194, 336, 1157], "foku": [23, 353], "schulbetrieb": 23, "legen": [23, 889], "ferner": 23, "schwere": 23, "abh\u00e4ngigkeiten": [23, 1160], "fett": [23, 184, 201], "datenbanken": [23, 207, 353], "webserv": [23, 907], "hintergrund": [23, 194], "redaktionel": 23, "arbeit": [23, 174, 1148], "offlin": 23, "laptop": [23, 152, 154, 161, 918], "zug": 23, "erledigen": [23, 1148], "einschr\u00e4nkung": 23, "geserv": 23, "erarbeitet": [23, 1147], "sinn": [23, 178, 1150], "prinzip": [23, 1167, 1169, 1171], "kostenlo": 23, "genutzt": [23, 168], "weiterentwickelt": [23, 1152, 1157], "f\u00f6rderbedingungen": 23, "projektseit": 23, "ver\u00f6ffentlichen": 23, "nachvollziehbar": 23, "strukturieren": 23, "f\u00f6rderzusag": 23, "hinwei": 23, "verpflichtend": 23, "gesondert": 23, "erw\u00e4hnen": 23, "projektzwischenbericht": 23, "projektzusammenfassung": 23, "projektendbericht": 23, "entwicklerdokument": 23, "anwenderdokument": 23, "dienstleistungsbeschreibung": 23, "abh\u00e4ngig": 23, "dokument": [23, 169, 184, 195, 216, 231, 243, 303, 330, 1165], "externkommunik": 23, "erreichung": 23, "nachhaltigkeit": 23, "projektergebnistyp": 23, "haupteigenschaften": 23, "funktionalit\u00e4t": [23, 184], "sourcecod": [23, 168], "bestehend": 23, "unabh\u00e4ngigem": 23, "unitgetestetem": 23, "core": [23, 59, 62, 150, 151, 153, 154, 183, 186, 190, 195, 208, 223, 234, 237, 239, 246, 249, 264, 268, 271, 281, 285, 307, 313, 358, 370, 415, 459, 460, 467, 472, 486, 487, 518, 570, 575, 668, 698, 718, 773, 777, 802, 839, 877, 893, 958, 961, 962, 973, 974, 990, 1057, 1100, 1105, 1118, 1119, 1121, 1122, 1133, 1168], "reih": [23, 165, 178, 186], "direct": [23, 37, 39, 63, 114, 130, 148, 151, 212, 270, 273, 321, 392, 403, 438, 451, 578, 724, 761, 838, 895, 922, 924, 940, 942, 943, 978, 992, 1019, 1105, 1113, 1122, 1155, 1158], "generierten": 23, "kursagenda": 23, "graphen": 23, "lizenz": 23, "gpl": [23, 570, 719, 758], "pypi": [23, 134, 147, 183, 187, 202, 218, 234, 260, 1127, 1128, 1133], "installierbar": 23, "paket": [23, 168, 1148], "generiert": [23, 184], "readthedoc": [23, 32, 39], "gehostet": 23, "verf\u00fcgbar": [23, 962, 1160], "obigen": 23, "bisherigen": [23, 1152], "aktuellen": [23, 194], "bereich": [23, 174, 353], "umfeld": 23, "projektantrag": 23, "bisher": [23, 147, 1147], "softwarebasi": 23, "grundlegend": [23, 196, 1152, 1157, 1164, 1166, 1169], "semiprofessionel": 23, "visualisierung": 23, "plan": [23, 42, 61, 150, 174, 183, 218, 227, 237, 302, 334, 335, 339, 343, 349, 442, 558, 668, 726, 802, 1133, 1140], "kurz": [23, 159, 160, 184, 186, 195, 200, 215, 240, 1149, 1163, 1166], "lebensl\u00e4uf": 23, "projektbeteiligten": 23, "sowi": [23, 1160], "ver\u00f6ffentlichungen": 23, "b\u00fccher": 23, "fachartikel": 23, "patent": 23, "vortr\u00e4g": 23, "gebiet": [23, 160, 1169], "projektinhalt": 23, "verdeutlichen": [23, 1148], "teamleitung": 23, "softwareprojekt": 23, "stefan": [23, 169], "walkner": 23, "1983": [23, 561], "hallein": 23, "master": [23, 61, 133, 154, 157, 166, 336, 337, 798, 802, 891, 903], "scienc": [23, 28, 78, 158, 172, 183, 187, 192, 221, 290, 304, 337, 561, 614, 1025, 1104, 1105, 1106, 1107], "salzburg": 23, "consult": [23, 59, 62, 148, 151, 164, 202, 220, 226, 236, 239, 243, 341, 467], "isamberth": 23, "adnet": 23, "2000": [23, 207, 210, 226, 231, 243, 264, 444, 470, 962], "2002": [23, 226, 570, 719], "divers": [23, 175, 1149], "2005": [23, 561], "2007": 23, "entwicklungsleit": 23, "nextsens": 23, "2016": [23, 186, 187, 208, 211, 226, 234, 260, 267, 275, 284, 306, 1100], "programmiererfahrung": [23, 1157, 1164, 1171], "bash": [23, 99, 114, 148, 158, 167, 191, 201, 203, 223, 231, 239, 246, 249, 257, 264, 266, 267, 271, 278, 281, 285, 287, 307, 313, 335, 336, 337, 340, 342, 354, 466, 480, 508, 509, 510, 511, 512, 513, 514, 515, 518, 560, 710, 713, 733, 753, 754, 755, 825, 829, 830, 831, 832, 834, 835, 836, 837, 839, 840, 843, 844, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 862, 863, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 887, 892, 893, 898, 921, 924, 927, 929, 931, 934, 937, 939, 940, 953, 955, 956, 959, 961, 976, 978, 980, 981, 982, 983, 984, 985, 986, 987, 990, 997, 1078, 1148, 1159], "davon": [23, 159, 170, 1150, 1169], "teamleit": 23, "m\u00f6chten": [23, 1171], "ggf": 23, "kennenlernen": 23, "knackig": [23, 147], "darstellung": 23, "handelnden": 23, "personen": 23, "sendung": 23, "minuten": [23, 890], "millionen": 23, "ihren": [23, 184, 196], "antrag": 23, "nochmal": 23, "vorgelesen": 23, "bekommen": [23, 178, 353, 1147, 1160], "un": [23, 178, 186, 353, 780, 886, 1019, 1148], "hintergrundmusik": 23, "windger\u00e4usch": 23, "gerad": [23, 160, 194, 195, 353, 1150, 1163], "f\u00f6rdern": 23, "sollen": 23, "animiert": 23, "produktvideo": 23, "interessieren": 23, "sicher": [23, 170, 174], "mindesten": [23, 170], "vier": [23, 170, 184, 194, 199, 201, 216, 220, 223, 231, 233, 236, 243, 249, 261, 264, 268, 271, 281, 291, 303, 307, 330, 1157, 1170], "monat": 23, "einreichschluss": 23, "uneingeschr\u00e4nkt": 23, "aufrufbar": 23, "youtu": [23, 713, 717], "hobyb1zukdi": 23, "projektrisiken": 23, "sehen": [23, 160], "wenig": [23, 169, 184, 254, 353, 1148], "pflegen": 23, "frontalen": 23, "vortragsstil": 23, "starker": 23, "paradigmenwechsel": 23, "wechsel": 23, "jahrelang": 23, "gewohnten": 23, "verfahrensweisen": 23, "abrupt": 23, "gro\u00dfer": 23, "monolithisch": 23, "zerhacken": 23, "welchen": 23, "bewerten": 23, "messen": 23, "zielerreichung": 23, "kriterium": 23, "arbeitserleichterung": 23, "minimal": [23, 184], "erfolg": [23, 1150], "mindestkriterien": 23, "positiven": 23, "projekterfolg": 23, "jedenfal": 23, "abgedeckt": 23, "ausgezeichnet": 23, "kriterien": [23, 165, 178, 890], "angestrebten": 23, "ausgezeichneten": 23, "anerkennen": 23, "gesteigerten": 23, "effekt": [23, 184, 195, 1163, 1171], "bekundet": 23, "medien": [23, 1170], "berichtet": 23, "migrat": [23, 178], "zehn": [23, 194], "migrieren": 23, "verwenden": [23, 165, 178, 184, 190, 194, 199, 1170], "untereinand": 23, "zutun": 23, "zusammenzuarbeiten": 23, "kooperationspartner_innen": 23, "dienstleister_innen": 23, "mitwirkend": 23, "zielgruppenvertreter_innen": 23, "werbeagentur": 23, "schaar": 23, "logo": 23, "webdesign": 23, "wof\u00fcr": 23, "arbeitsstunden": 23, "geld": 23, "allem": [23, 159, 174, 184, 353, 1169], "eingesetzt": [23, 1148, 1165], "basisarbeit": 23, "workflow": [23, 112, 178, 212, 227, 775, 970, 1165], "datenstrukturen": [23, 196, 214, 235, 1152], "zeitgem\u00e4\u00df": 23, "interakt": [23, 1050], "know": [23, 42, 59, 62, 65, 69, 80, 84, 131, 148, 150, 151, 152, 153, 156, 157, 158, 166, 171, 172, 175, 179, 180, 183, 187, 191, 202, 203, 210, 213, 270, 273, 277, 302, 337, 368, 370, 376, 381, 398, 408, 420, 422, 424, 426, 430, 431, 432, 434, 438, 439, 440, 442, 451, 457, 461, 462, 474, 511, 519, 546, 562, 564, 570, 572, 576, 595, 632, 635, 638, 659, 660, 662, 671, 673, 675, 698, 700, 709, 718, 720, 724, 734, 752, 754, 755, 757, 773, 780, 802, 841, 862, 899, 902, 906, 908, 919, 924, 926, 935, 945, 973, 994, 1002, 1007, 1008, 1019, 1024, 1027, 1030, 1031, 1050, 1057, 1095, 1099, 1133, 1158], "welchem": [23, 170], "umfang": 23, "sachressourcen": 23, "ben\u00f6tigt": [23, 195, 196, 1163], "zugekauft": 23, "backendprogrammierung": 23, "programmiersprach": [23, 1149, 1152, 1164, 1166], "200": [23, 147, 148, 170, 172, 184, 201, 203, 210, 217, 220, 223, 226, 231, 233, 239, 243, 246, 249, 261, 264, 268, 275, 285, 291, 303, 307, 313, 327, 332, 590, 591, 592, 593, 594, 596, 597, 598, 599, 613, 667, 780, 960, 1074], "stunden": 23, "webprogrammierung": 23, "css": [23, 148, 149], "150": [23, 170, 184, 194, 201, 210, 220, 223, 226, 231, 233, 239, 243, 246, 249, 252, 261, 264, 281, 285, 291, 303, 307, 313, 660], "kreativarbeit": 23, "erreichen": [23, 1164, 1167], "pers\u00f6nlich": [23, 353], "freund": 23, "ebenfal": [23, 1165], "t\u00e4tig": 23, "mich": [23, 159, 174, 194, 202, 353, 1147], "ermutigt": 23, "\u00fcberhaupt": [23, 1157, 1164, 1171], "starten": [23, 1169], "repr\u00e4sent": 23, "post": [23, 66, 93, 147, 151, 153, 155, 156, 157, 158, 161, 212, 227, 276, 368, 382, 466, 562, 899, 968, 970, 973, 1099], "facebookseit": 23, "relevanten": 23, "foren": 23, "linkedin": 23, "typisch": [23, 195, 1150], "projektbeginn": 23, "abschluss": [23, 160, 335], "oktob": 23, "projektdau": 23, "\u00fcberschreiten": 23, "mitarbeiter_innen": 23, "stundenanzahl": 23, "jeweilig": 23, "stundens\u00e4tz": 23, "senior": 23, "junior": 23, "programmierer_in": 23, "designer_in": 23, "contentmanager_in": 23, "projektmanager_in": 23, "assistenz": 23, "administr": [23, 158, 839, 906, 915, 922, 961], "sachbearbeiter_in": 23, "social": [23, 45, 462, 469, 473, 486, 487, 488, 491, 497, 500, 501, 502], "media": [23, 78, 168, 802, 907], "spzialist_in": 23, "firmeneigent\u00fcmer_innen": 23, "gesellschafter_innen": 23, "vereinsfunktion\u00e4r_innen": 23, "betr\u00e4gt": 23, "f\u00f6rderbar": 23, "stundensatz": 23, "brutto": 23, "nachweislich": 23, "angestellt": 23, "projektmitarbeiter_innen": 23, "errechnet": 23, "vollzeitvertrag": 23, "jahresstundenteil": 23, "1720": [23, 226], "teilzeitbesch\u00e4ftigten": 23, "aliquot": 23, "reduziert": [23, 174], "dienstgeberanteil": 23, "faktor": 23, "ber\u00fccksichtigt": 23, "kalkul": 23, "jahresbruttogehalt": 23, "hohe": 23, "risiko": 23, "h\u00f6herer": 23, "eigenmittelanteil": 23, "bedingung": 23, "festgelegt": 23, "erh\u00f6hen": 23, "gemeinkosten": 23, "gef\u00f6rdert": 23, "antr\u00e4gen": 23, "diplomarbeiten": 23, "betrag": 23, "8000": [23, 226], "frontendprogrammierung": 23, "4500": [23, 226], "sachkosten": 23, "projektbedingt": 23, "betriebskosten": 23, "unmittelbar": 23, "projektt\u00e4tigkeit": 23, "entstehen": [23, 327], "leistungen": 23, "reisen": 23, "gliedern": 23, "rechnung": [23, 160, 268], "enthalten": 23, "umsatzsteu": 23, "darf": [23, 335], "kostenabrechnung": 23, "f\u00f6rdernehmer_in": 23, "vorsteuerabzugsberechtigt": 23, "13500": [23, 226], "beantragt": 23, "differenz": [23, 246], "aufgliedern": 23, "eigenmittel": 23, "f\u00f6rderungseinrichtungen": 23, "fremdmittel": 23, "kredit": 23, "leas": 23, "pro": [23, 187, 739, 890, 993], "bono": 23, "beitrag": 23, "restfinanzierung": 23, "gesamtbetrag": 23, "ber\u00fccksichtigten": 23, "einzelkosten": 23, "achtung": 23, "gesamtprojektkosten": 23, "h\u00f6her": 23, "auszuf\u00fcllen": 23, "leer": [23, 201, 207, 215, 271], "bleiben": [23, 160, 184, 194, 1157, 1164, 1167], "reich": [23, 184], "nein": [23, 195, 201, 207, 252, 261, 1163], "neben": [23, 174], "antr\u00e4g": 23, "oderstipendium": 23, "laufenden": 23, "call": [23, 32, 42, 50, 63, 66, 110, 111, 120, 130, 147, 150, 151, 152, 153, 154, 156, 161, 168, 171, 173, 181, 187, 189, 210, 218, 220, 226, 231, 234, 236, 241, 243, 248, 249, 252, 267, 269, 271, 284, 285, 293, 302, 307, 309, 335, 340, 342, 353, 357, 364, 368, 369, 372, 383, 399, 401, 405, 411, 412, 415, 425, 428, 429, 437, 445, 448, 460, 467, 471, 486, 487, 488, 504, 508, 513, 516, 517, 519, 520, 532, 546, 560, 564, 567, 570, 572, 576, 585, 631, 632, 635, 637, 638, 642, 644, 649, 656, 664, 665, 673, 677, 688, 691, 694, 695, 696, 697, 707, 710, 718, 723, 724, 732, 733, 734, 736, 739, 754, 755, 756, 770, 780, 782, 784, 788, 790, 792, 794, 796, 798, 800, 802, 807, 810, 816, 821, 822, 828, 832, 835, 836, 837, 838, 840, 842, 845, 846, 859, 862, 898, 902, 910, 920, 921, 924, 925, 926, 927, 929, 931, 937, 938, 939, 944, 945, 952, 953, 955, 956, 959, 960, 961, 970, 973, 974, 976, 978, 995, 997, 998, 999, 1004, 1010, 1012, 1013, 1014, 1016, 1017, 1019, 1020, 1021, 1041, 1042, 1046, 1048, 1051, 1052, 1057, 1075, 1079, 1100, 1105, 1113, 1116, 1121, 1122, 1134, 1135, 1136, 1155, 1159, 1167, 1168, 1170], "weiteren": 23, "stipendium": 23, "imlaufenden": 23, "habe": [23, 159, 160, 169, 174, 190, 353], "zuge": 23, "projektantragsstellung": 23, "rundschreiben": 23, "expert": [23, 28, 155, 156, 161, 519, 841, 862, 908, 1104], "group": [23, 29, 101, 102, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 130, 131, 144, 166, 171, 183, 188, 190, 199, 202, 203, 210, 216, 223, 231, 240, 243, 249, 252, 264, 278, 285, 288, 291, 313, 335, 348, 349, 353, 364, 389, 432, 433, 508, 538, 755, 802, 829, 830, 832, 835, 836, 837, 848, 849, 850, 851, 852, 853, 854, 855, 857, 858, 884, 888, 889, 890, 891, 895, 898, 906, 918, 919, 927, 928, 929, 934, 937, 939, 953, 956, 961, 974, 997, 1078, 1133], "wirtschaftkamm": 23, "nehmen": [23, 160, 1149], "larg": [24, 30, 38, 78, 153, 156, 158, 183, 202, 203, 212, 223, 229, 270, 273, 411, 420, 422, 426, 432, 433, 472, 697, 706, 753, 796, 802, 976, 1000, 1002, 1004, 1024, 1031, 1057, 1078, 1114, 1118, 1122, 1140], "amount": [24, 106, 110, 111, 151, 152, 153, 156, 162, 183, 190, 218, 268, 269, 432, 444, 575, 697, 698, 833, 835, 919, 936, 1024], "pdf": [24, 37, 176, 178, 183, 187, 190, 191, 193, 243, 257, 266, 267, 287, 288, 310, 334, 335, 338, 340, 343, 354, 862, 884, 885, 908, 940, 978, 1072, 1149, 1150, 1151, 1159, 1160, 1166, 1167, 1169, 1170, 1171], "Not": [24, 43, 47, 53, 80, 109, 153, 154, 155, 158, 161, 183, 186, 187, 227, 229, 230, 231, 244, 253, 280, 284, 372, 381, 403, 415, 418, 420, 426, 442, 445, 508, 525, 527, 560, 567, 569, 571, 576, 577, 645, 657, 677, 688, 692, 694, 695, 696, 714, 721, 724, 730, 735, 753, 755, 765, 773, 780, 784, 786, 900, 938, 958, 960, 962, 964, 974, 997, 999, 1004, 1005, 1006, 1007, 1017, 1019, 1031, 1040, 1045, 1100, 1104, 1109, 1123, 1125, 1141, 1153], "satisfi": [24, 32, 187, 461, 577, 665, 677, 710], "colleagu": [24, 28, 162, 203, 422, 634, 1002, 1019, 1031], "aren": [24, 148, 233, 243, 673, 863, 952, 962], "either": [24, 39, 42, 43, 151, 153, 161, 162, 267, 270, 273, 420, 487, 660, 668, 671, 732, 829, 830, 859, 862, 894, 908, 999, 1066, 1116, 1153], "nobodi": [24, 43, 151, 153, 172, 183, 223, 239, 246, 249, 264, 271, 281, 285, 307, 313, 423, 425, 562, 603, 675, 757, 829, 830, 839, 854, 856, 862, 863, 915, 923, 1052, 1106, 1136, 1142], "doe": [24, 38, 45, 48, 49, 61, 69, 78, 83, 84, 110, 111, 112, 114, 131, 147, 150, 151, 152, 155, 156, 157, 158, 161, 162, 166, 171, 179, 183, 187, 189, 201, 210, 213, 226, 243, 246, 252, 270, 271, 273, 276, 278, 280, 302, 315, 335, 346, 362, 368, 376, 380, 381, 382, 383, 390, 399, 400, 409, 412, 415, 416, 418, 420, 422, 424, 426, 431, 432, 433, 436, 437, 438, 442, 444, 445, 446, 450, 456, 457, 460, 462, 465, 470, 474, 482, 484, 486, 512, 513, 514, 515, 516, 519, 520, 543, 552, 555, 562, 563, 564, 567, 570, 572, 573, 575, 578, 601, 608, 616, 622, 631, 634, 635, 641, 642, 649, 660, 665, 666, 668, 675, 677, 697, 699, 707, 708, 710, 714, 718, 719, 720, 723, 724, 726, 730, 731, 736, 751, 753, 765, 766, 770, 771, 773, 780, 794, 802, 807, 818, 828, 837, 841, 842, 844, 847, 895, 899, 906, 907, 908, 919, 924, 925, 927, 931, 934, 945, 949, 952, 958, 960, 961, 970, 974, 976, 977, 978, 979, 984, 988, 992, 993, 995, 997, 998, 999, 1000, 1002, 1004, 1013, 1017, 1019, 1020, 1024, 1027, 1030, 1048, 1049, 1050, 1069, 1077, 1079, 1106, 1108, 1109, 1111, 1118, 1119, 1122, 1123, 1124, 1126, 1128, 1133, 1153, 1155], "even": [24, 29, 59, 62, 78, 112, 139, 151, 152, 153, 158, 162, 172, 173, 183, 187, 190, 191, 195, 197, 202, 208, 210, 211, 213, 214, 223, 227, 230, 231, 234, 237, 240, 242, 243, 245, 248, 249, 260, 270, 273, 284, 285, 303, 306, 313, 399, 408, 422, 428, 432, 460, 465, 561, 569, 572, 618, 665, 707, 710, 717, 726, 753, 755, 794, 802, 839, 858, 899, 907, 924, 925, 958, 960, 961, 977, 996, 1008, 1019, 1045, 1048, 1059, 1062, 1063, 1098, 1100, 1121, 1128, 1135, 1155, 1163], "tech": [24, 45, 150], "although": [24, 29, 78, 126, 130, 151, 153, 157, 162, 173, 183, 189, 213, 233, 243, 353, 516, 660, 661, 702, 724, 841, 844, 915, 995, 1000, 1057, 1106], "gain": [24, 158, 270, 273, 432, 802, 841], "incred": 24, "momentum": 24, "expect": [24, 38, 50, 150, 153, 199, 220, 226, 227, 236, 239, 246, 271, 285, 303, 305, 307, 409, 447, 462, 505, 570, 635, 688, 697, 710, 775, 786, 899, 907, 908, 947, 964, 973, 1019, 1029, 1042, 1072, 1082, 1105, 1139, 1140, 1143], "context": [24, 29, 59, 62, 110, 111, 151, 172, 175, 187, 190, 192, 194, 201, 232, 236, 237, 239, 243, 246, 252, 260, 264, 269, 279, 280, 281, 284, 291, 295, 298, 301, 302, 305, 306, 313, 353, 419, 481, 482, 496, 564, 570, 698, 719, 753, 755, 764, 769, 772, 774, 779, 782, 783, 784, 785, 788, 789, 793, 794, 795, 797, 798, 799, 806, 807, 808, 810, 811, 812, 813, 816, 817, 820, 822, 823, 835, 839, 898, 899, 922, 962, 973, 974, 1001, 1010, 1098, 1109], "defin": [24, 53, 115, 119, 122, 123, 126, 129, 131, 144, 154, 171, 173, 188, 190, 192, 194, 199, 207, 210, 211, 213, 220, 224, 226, 229, 233, 236, 239, 243, 251, 253, 264, 275, 285, 302, 303, 315, 330, 341, 362, 367, 372, 377, 378, 381, 398, 399, 400, 401, 402, 403, 416, 424, 425, 426, 428, 432, 445, 446, 451, 452, 453, 470, 474, 482, 503, 504, 516, 538, 546, 563, 564, 565, 567, 569, 570, 572, 573, 576, 577, 578, 585, 588, 609, 613, 634, 641, 660, 661, 670, 671, 672, 673, 674, 677, 697, 702, 706, 715, 718, 723, 724, 746, 761, 763, 775, 839, 859, 899, 900, 908, 919, 926, 944, 966, 976, 978, 992, 994, 998, 1000, 1002, 1014, 1019, 1031, 1041, 1096, 1109, 1113, 1145, 1153, 1155, 1158], "solv": [24, 45, 80, 89, 114, 148, 151, 152, 181, 183, 187, 188, 190, 192, 203, 208, 221, 229, 234, 237, 248, 251, 273, 277, 284, 288, 290, 293, 305, 309, 321, 402, 444, 453, 659, 733, 740, 754, 755, 802, 841, 898, 939, 953, 986, 988, 990, 1019, 1095, 1100, 1106, 1155, 1156], "provid": [24, 27, 37, 58, 65, 68, 151, 153, 154, 155, 157, 158, 161, 162, 166, 179, 220, 226, 227, 236, 239, 243, 277, 293, 309, 418, 447, 452, 453, 462, 473, 481, 634, 697, 724, 802, 838, 841, 881, 907, 908, 915, 929, 961, 970, 1002, 1011, 1029, 1042, 1105, 1127, 1135, 1155], "depth": [24, 183, 187, 208, 220, 226, 236, 237, 239, 422, 722, 1004, 1100, 1104, 1105], "repres": [24, 151, 153, 175, 220, 226, 236, 239, 243, 264, 275, 321, 431, 465, 482, 484, 571, 753, 773, 798, 835, 838, 906, 908, 936, 1031, 1057, 1095, 1099, 1118, 1125, 1158], "own": [24, 28, 40, 43, 65, 110, 111, 151, 152, 154, 155, 161, 166, 179, 183, 229, 253, 258, 267, 277, 302, 315, 316, 422, 428, 443, 457, 465, 482, 487, 551, 552, 561, 651, 652, 654, 655, 669, 673, 676, 688, 698, 700, 712, 720, 735, 753, 754, 755, 802, 835, 837, 838, 847, 849, 850, 858, 859, 881, 891, 906, 907, 919, 926, 944, 949, 960, 961, 973, 992, 999, 1016, 1021, 1022, 1024, 1107, 1140, 1155, 1156, 1158], "yield": [24, 29, 170, 171, 184, 187, 188, 190, 199, 211, 218, 224, 228, 230, 232, 233, 239, 243, 248, 250, 260, 263, 264, 271, 279, 280, 281, 284, 285, 290, 292, 303, 306, 307, 313, 403, 472, 481, 688, 691, 694, 695, 696, 755, 997, 1001, 1003, 1004, 1006, 1025, 1035, 1056, 1057, 1058, 1059, 1072, 1083, 1098, 1110], "multipl": [24, 35, 36, 59, 62, 76, 106, 110, 111, 151, 152, 154, 168, 183, 187, 190, 210, 211, 212, 224, 226, 243, 278, 302, 358, 360, 364, 365, 368, 377, 379, 382, 391, 398, 402, 420, 425, 438, 443, 450, 482, 496, 509, 564, 577, 635, 642, 655, 682, 688, 710, 712, 719, 727, 730, 734, 735, 753, 755, 771, 773, 779, 783, 784, 792, 793, 794, 802, 804, 806, 807, 810, 811, 817, 820, 823, 835, 838, 839, 842, 844, 849, 850, 895, 898, 907, 928, 944, 949, 969, 982, 1019, 1030, 1031, 1044, 1045, 1050, 1100, 1125], "artifact": [24, 157, 161, 175, 180, 293, 309, 438, 763, 976, 977, 978, 988, 1142, 1155], "complet": [24, 42, 63, 78, 114, 115, 130, 147, 150, 151, 172, 183, 191, 199, 208, 221, 224, 227, 234, 248, 249, 251, 278, 284, 290, 295, 302, 315, 320, 321, 402, 419, 432, 445, 457, 509, 518, 563, 564, 638, 707, 722, 753, 796, 802, 829, 830, 840, 902, 908, 923, 960, 997, 1001, 1023, 1024, 1100, 1105, 1106, 1108, 1114, 1116, 1127, 1128, 1145, 1153], "prepar": [27, 112, 114, 129, 147, 150, 183, 240, 335, 353, 466, 507, 538, 600, 637, 969, 993, 1096, 1105, 1134], "base": [27, 29, 30, 42, 45, 53, 78, 80, 97, 107, 114, 126, 131, 143, 151, 153, 154, 166, 173, 178, 183, 184, 187, 190, 191, 194, 198, 201, 203, 213, 227, 229, 232, 236, 237, 241, 246, 248, 254, 261, 264, 269, 271, 275, 276, 277, 278, 279, 280, 285, 290, 301, 302, 303, 305, 306, 307, 313, 316, 331, 335, 339, 346, 368, 376, 403, 420, 438, 443, 444, 462, 466, 471, 472, 474, 481, 506, 518, 522, 538, 549, 591, 593, 594, 595, 596, 598, 599, 603, 635, 637, 638, 640, 682, 699, 700, 707, 712, 719, 723, 735, 739, 741, 743, 745, 749, 752, 754, 755, 775, 782, 786, 798, 802, 804, 853, 855, 895, 899, 958, 970, 974, 976, 977, 990, 991, 993, 1001, 1008, 1010, 1015, 1016, 1056, 1062, 1078, 1098, 1107, 1108, 1122, 1152, 1153, 1156], "exist": [27, 38, 46, 47, 53, 55, 56, 109, 110, 111, 144, 147, 157, 162, 191, 203, 210, 276, 280, 320, 332, 335, 338, 420, 442, 444, 460, 465, 485, 488, 508, 519, 525, 527, 560, 570, 618, 653, 655, 664, 718, 753, 755, 802, 829, 830, 835, 837, 844, 853, 855, 864, 868, 869, 881, 898, 906, 908, 919, 924, 928, 934, 937, 939, 956, 963, 970, 988, 992, 993, 998, 999, 1008, 1013, 1048, 1050, 1068, 1109, 1117, 1118, 1128, 1133, 1135], "navig": [27, 1125], "through": [27, 34, 38, 61, 73, 78, 104, 148, 150, 151, 153, 158, 162, 166, 179, 183, 187, 189, 192, 203, 211, 212, 213, 218, 224, 277, 279, 280, 295, 298, 301, 306, 342, 346, 353, 372, 392, 411, 431, 435, 448, 457, 488, 510, 513, 579, 581, 582, 631, 632, 635, 638, 660, 675, 677, 702, 710, 714, 720, 724, 773, 800, 833, 841, 889, 899, 907, 908, 917, 970, 973, 974, 999, 1004, 1007, 1022, 1024, 1027, 1062, 1107, 1153, 1154, 1158], "deviat": [27, 158, 171, 179, 188, 212, 243, 353, 802], "after": [27, 43, 147, 148, 151, 152, 153, 158, 161, 171, 180, 183, 190, 203, 210, 220, 226, 236, 239, 242, 243, 249, 264, 269, 276, 278, 285, 313, 321, 360, 368, 369, 402, 422, 429, 448, 450, 486, 487, 510, 517, 569, 572, 585, 620, 668, 670, 671, 673, 682, 688, 735, 753, 780, 784, 790, 842, 845, 862, 863, 895, 906, 946, 964, 969, 970, 973, 976, 995, 997, 999, 1024, 1025, 1029, 1065, 1078, 1096, 1104, 1113, 1125, 1134, 1135, 1140], "writeup": [27, 162, 988], "what": [27, 28, 43, 44, 46, 47, 48, 51, 55, 56, 57, 58, 59, 62, 65, 69, 78, 83, 86, 87, 97, 98, 99, 104, 107, 114, 119, 120, 126, 131, 148, 150, 151, 152, 153, 154, 155, 156, 157, 162, 166, 170, 171, 172, 173, 174, 175, 177, 179, 183, 184, 187, 188, 189, 190, 191, 192, 193, 202, 210, 212, 213, 227, 228, 229, 238, 243, 251, 257, 267, 270, 273, 277, 279, 280, 293, 298, 301, 309, 313, 315, 316, 320, 321, 327, 335, 338, 340, 342, 343, 346, 357, 365, 370, 380, 381, 383, 396, 405, 408, 415, 418, 420, 422, 423, 426, 427, 428, 432, 436, 438, 443, 444, 447, 452, 454, 461, 463, 465, 486, 487, 497, 503, 505, 514, 517, 538, 539, 542, 545, 548, 551, 554, 555, 557, 567, 570, 572, 573, 574, 575, 576, 578, 585, 588, 595, 631, 638, 647, 665, 668, 671, 677, 682, 688, 698, 709, 710, 718, 719, 720, 724, 727, 731, 733, 734, 739, 751, 753, 754, 755, 763, 766, 770, 773, 775, 780, 798, 805, 810, 815, 828, 829, 830, 832, 833, 835, 836, 838, 839, 841, 842, 844, 846, 847, 848, 851, 852, 853, 854, 855, 856, 857, 862, 877, 878, 880, 898, 899, 906, 907, 908, 910, 911, 912, 913, 914, 925, 926, 932, 933, 934, 935, 937, 939, 944, 945, 946, 947, 948, 953, 956, 959, 961, 962, 964, 965, 968, 969, 970, 972, 974, 977, 986, 987, 991, 993, 994, 995, 997, 999, 1001, 1002, 1005, 1006, 1010, 1011, 1019, 1023, 1024, 1042, 1048, 1052, 1057, 1060, 1068, 1095, 1099, 1107, 1109, 1116, 1125, 1133, 1135, 1139, 1140, 1142, 1144, 1155, 1158], "collect": [27, 29, 147, 150, 152, 195, 202, 211, 217, 218, 235, 237, 238, 239, 251, 260, 262, 269, 277, 279, 280, 284, 295, 298, 301, 302, 305, 306, 320, 431, 438, 549, 595, 710, 719, 731, 755, 802, 833, 905, 986, 997, 1001, 1007, 1015, 1049, 1055, 1059, 1088, 1093, 1095, 1098, 1099, 1114, 1127, 1128, 1133, 1135, 1163], "question": [27, 29, 32, 35, 36, 38, 102, 114, 153, 158, 166, 171, 183, 187, 189, 211, 212, 213, 223, 224, 226, 227, 229, 249, 335, 342, 349, 377, 406, 412, 424, 443, 446, 450, 454, 507, 571, 631, 638, 726, 730, 755, 780, 794, 810, 829, 830, 832, 851, 857, 881, 898, 906, 908, 919, 923, 939, 958, 959, 992, 1000, 1001, 1004, 1009, 1098, 1100], "ask": [27, 151, 156, 158, 166, 183, 186, 187, 252, 284, 335, 342, 442, 461, 462, 484, 503, 555, 567, 578, 699, 721, 858, 913, 915, 1019, 1100], "answer": [27, 45, 155, 158, 171, 183, 187, 189, 190, 213, 224, 231, 303, 313, 342, 446, 450, 507, 631, 638, 640, 710, 715, 734, 766, 810, 829, 830, 835, 847, 849, 850, 853, 855, 906, 908, 915, 919, 958, 961, 992, 999, 1000, 1004, 1011, 1028, 1031, 1100], "cover": [27, 78, 81, 115, 144, 158, 175, 183, 187, 191, 193, 211, 212, 224, 237, 276, 278, 306, 442, 461, 746, 906, 908, 990, 999, 1001, 1024, 1072, 1095, 1100, 1104, 1105, 1127, 1133, 1156, 1158], "been": [27, 59, 62, 112, 150, 151, 152, 153, 155, 156, 157, 162, 166, 171, 172, 183, 191, 220, 226, 236, 239, 270, 273, 275, 285, 302, 332, 341, 401, 415, 416, 445, 456, 465, 482, 538, 697, 756, 798, 816, 822, 827, 837, 841, 845, 865, 899, 906, 908, 919, 928, 938, 949, 974, 977, 978, 995, 1002, 1040, 1135, 1153, 1155, 1156], "further": [27, 148, 150, 157, 161, 177, 226, 258, 273, 302, 315, 316, 343, 408, 419, 457, 519, 539, 542, 545, 548, 551, 554, 557, 669, 700, 745, 754, 755, 773, 796, 802, 884, 909, 945, 965, 968, 972, 1007, 1139, 1144, 1158], "inform": [27, 28, 29, 106, 150, 153, 154, 156, 161, 170, 171, 172, 174, 179, 199, 220, 226, 236, 239, 264, 279, 280, 301, 305, 306, 419, 429, 436, 437, 447, 456, 724, 753, 761, 773, 837, 862, 895, 899, 906, 908, 910, 942, 998, 1026, 1100, 1108, 1113, 1128, 1135], "internet": [27, 65, 78, 150, 152, 155, 156, 158, 179, 191, 199, 227, 240, 279, 280, 295, 301, 305, 332, 444, 899, 900, 902, 960, 1000, 1156, 1170], "subtract": [27, 220, 243, 275, 379, 482, 496, 710, 861, 961, 1011, 1019, 1031], "known": [27, 147, 152, 163, 203, 220, 226, 236, 239, 256, 258, 276, 293, 309, 332, 378, 380, 392, 399, 426, 432, 597, 773, 862, 991, 1107, 1155, 1156], "calcul": [27, 82, 85, 153, 187, 211, 220, 243, 378, 380, 388, 397, 404, 410, 414, 417, 421, 430, 434, 439, 440, 481, 511, 516, 518, 662, 667, 700, 727, 752, 754, 755, 944, 961, 1002, 1004, 1075, 1107, 1112, 1133], "minimum": [27, 63, 243, 682, 802, 997, 1103, 1104, 1105, 1106], "come": [27, 43, 78, 110, 111, 112, 120, 126, 130, 147, 148, 150, 151, 152, 153, 156, 157, 158, 161, 162, 173, 179, 180, 183, 203, 229, 256, 258, 269, 276, 277, 302, 315, 326, 332, 356, 358, 359, 375, 402, 438, 445, 482, 516, 598, 635, 638, 643, 657, 709, 712, 714, 724, 734, 755, 770, 802, 833, 835, 839, 845, 858, 862, 899, 906, 907, 908, 934, 960, 988, 999, 1000, 1004, 1022, 1023, 1024, 1025, 1031, 1042, 1050, 1052, 1057, 1062, 1080, 1091, 1108, 1111, 1116, 1129, 1156], "she": [27, 210, 635, 668, 837, 839, 1044, 1052], "who": [27, 29, 45, 119, 148, 151, 155, 158, 162, 181, 183, 229, 239, 264, 295, 353, 428, 432, 442, 447, 470, 487, 519, 640, 710, 720, 775, 802, 810, 829, 830, 837, 841, 847, 858, 899, 907, 908, 923, 934, 976, 993, 995, 1001, 1023, 1099, 1114, 1126, 1133, 1153, 1156, 1158], "repetit": [27, 264, 862, 1153], "prone": [27, 377, 565, 575, 595, 668, 712, 790, 978, 1046, 1140, 1153], "possibl": [27, 59, 61, 62, 106, 112, 114, 131, 133, 138, 141, 150, 151, 158, 161, 166, 173, 183, 187, 203, 213, 220, 226, 229, 231, 236, 237, 239, 256, 258, 267, 276, 279, 280, 285, 302, 306, 316, 367, 378, 381, 398, 411, 418, 424, 428, 432, 433, 436, 442, 448, 457, 460, 462, 465, 470, 474, 482, 484, 519, 552, 562, 564, 565, 570, 577, 578, 596, 613, 654, 660, 661, 668, 682, 686, 699, 710, 718, 719, 720, 724, 780, 807, 837, 846, 871, 900, 901, 906, 907, 917, 920, 949, 997, 998, 999, 1007, 1012, 1020, 1022, 1031, 1040, 1045, 1047, 1048, 1050, 1099, 1100, 1109, 1121], "abl": [27, 28, 30, 43, 150, 151, 153, 154, 156, 158, 166, 183, 203, 210, 292, 422, 428, 454, 461, 465, 519, 667, 677, 829, 830, 847, 853, 855, 856, 899, 907, 908, 934, 970, 1001, 1112, 1158], "fix": [27, 46, 63, 65, 76, 107, 130, 147, 151, 164, 166, 187, 208, 213, 223, 224, 229, 248, 251, 278, 279, 280, 301, 335, 360, 383, 426, 442, 444, 450, 487, 520, 532, 543, 555, 561, 580, 596, 646, 653, 674, 755, 770, 775, 779, 782, 783, 803, 804, 810, 811, 817, 820, 823, 846, 898, 902, 922, 932, 963, 973, 993, 995, 998, 1025, 1057, 1100], "inconsist": [27, 562, 1123], "easi": [27, 68, 119, 139, 151, 153, 154, 155, 156, 157, 158, 162, 171, 172, 175, 187, 233, 243, 316, 381, 396, 422, 438, 660, 677, 719, 739, 782, 784, 788, 800, 807, 841, 906, 907, 908, 935, 952, 970, 979, 993, 1019, 1023, 1031, 1040, 1042, 1106, 1133, 1134, 1158], "plain": [27, 122, 153, 213, 346, 538, 574, 577, 656, 709, 724, 805, 907, 998, 1011], "happi": [27, 65, 156, 183, 426, 570, 1105], "clear": [27, 43, 151, 153, 158, 170, 203, 213, 242, 303, 336, 337, 403, 428, 432, 447, 457, 463, 469, 576, 631, 664, 682, 719, 802, 810, 838, 841, 862, 922, 996, 1011, 1031, 1033, 1104, 1105, 1135], "front": [27, 78, 148, 158, 183, 239, 285, 432, 613, 732, 1156], "later": [27, 80, 115, 130, 150, 151, 154, 161, 172, 183, 305, 358, 362, 368, 370, 372, 428, 432, 438, 445, 564, 565, 567, 579, 581, 582, 616, 671, 702, 705, 761, 763, 765, 770, 786, 788, 798, 805, 844, 906, 928, 944, 945, 947, 958, 962, 1012, 1020, 1030, 1033, 1035, 1113, 1119], "menu": [27, 147, 191, 802, 1148], "mine": [28, 150, 151, 154, 162, 179, 183, 187, 353, 552, 802], "hi": [28, 45, 166, 171, 183, 187, 190, 208, 234, 237, 425, 514, 1012, 1100], "data": [28, 29, 49, 70, 73, 78, 89, 108, 110, 111, 124, 131, 151, 152, 153, 154, 158, 161, 170, 172, 174, 183, 187, 188, 192, 200, 202, 207, 217, 220, 221, 226, 227, 229, 236, 239, 243, 249, 264, 268, 269, 270, 271, 273, 276, 278, 279, 280, 285, 290, 293, 295, 298, 304, 307, 309, 313, 337, 338, 353, 367, 381, 388, 397, 404, 410, 411, 414, 416, 417, 421, 426, 430, 431, 433, 434, 439, 440, 443, 450, 466, 480, 508, 509, 510, 511, 512, 513, 514, 515, 518, 519, 525, 527, 536, 560, 561, 563, 567, 570, 583, 586, 588, 589, 600, 605, 611, 615, 624, 627, 628, 633, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 662, 666, 669, 700, 712, 716, 724, 725, 733, 734, 740, 752, 753, 754, 755, 757, 760, 761, 792, 796, 800, 807, 815, 833, 839, 844, 846, 854, 900, 902, 906, 907, 908, 909, 919, 923, 925, 933, 938, 944, 947, 950, 952, 964, 988, 997, 999, 1004, 1008, 1011, 1024, 1025, 1036, 1038, 1039, 1040, 1048, 1059, 1087, 1088, 1098, 1102, 1103, 1104, 1106, 1108, 1109, 1113, 1114, 1118, 1119, 1122, 1124, 1125, 1128, 1133, 1154, 1155, 1169], "convinc": [28, 381], "him": [28, 183, 187, 190, 208, 211, 234, 260, 284, 306, 709, 949, 1100], "wai": [28, 43, 50, 59, 62, 63, 65, 80, 81, 141, 147, 148, 150, 153, 158, 162, 163, 166, 172, 175, 179, 184, 186, 187, 189, 190, 191, 194, 195, 203, 208, 211, 223, 224, 229, 232, 233, 234, 236, 237, 241, 243, 251, 255, 256, 269, 270, 273, 277, 279, 280, 301, 302, 323, 327, 377, 381, 385, 386, 396, 402, 418, 419, 420, 428, 444, 445, 452, 462, 464, 465, 469, 485, 487, 506, 516, 520, 532, 538, 546, 562, 563, 570, 575, 578, 616, 618, 644, 650, 661, 677, 698, 708, 720, 724, 758, 771, 780, 794, 796, 802, 829, 830, 838, 844, 846, 849, 850, 899, 907, 908, 919, 926, 934, 960, 963, 973, 974, 978, 984, 988, 999, 1011, 1016, 1022, 1025, 1026, 1029, 1040, 1044, 1045, 1047, 1050, 1052, 1057, 1085, 1100, 1118, 1126, 1133, 1140, 1158], "go": [28, 40, 42, 59, 61, 62, 63, 65, 80, 97, 125, 130, 148, 151, 154, 155, 157, 158, 180, 183, 190, 194, 203, 212, 213, 229, 270, 273, 275, 305, 338, 442, 444, 462, 503, 664, 702, 714, 720, 732, 755, 763, 766, 770, 802, 804, 833, 845, 862, 864, 898, 899, 906, 907, 934, 937, 939, 944, 952, 956, 976, 979, 993, 1024, 1058], "relev": [28, 153, 226, 251, 368, 457, 519, 724, 802, 815, 906, 907, 999, 1099, 1115, 1128], "part": [28, 43, 80, 92, 106, 114, 144, 151, 152, 153, 154, 156, 158, 161, 172, 175, 183, 190, 191, 192, 213, 239, 251, 270, 273, 285, 337, 344, 358, 381, 415, 442, 465, 470, 484, 505, 519, 562, 660, 732, 753, 773, 780, 802, 822, 829, 830, 862, 897, 899, 906, 907, 908, 909, 924, 976, 1023, 1024, 1037, 1042, 1044, 1090, 1092, 1106, 1107, 1118, 1119, 1121, 1122, 1123, 1124, 1143], "natur": [28, 38, 75, 151, 153, 158, 183, 237, 243, 285, 353, 358, 376, 420, 461, 462, 614, 616, 660, 720, 907, 1035], "straighforward": 28, "approach": [28, 35, 38, 150, 151, 190, 294, 310, 360, 444, 448, 449, 457, 718, 745, 755, 841, 907, 960, 962, 1117], "would": [28, 57, 104, 107, 131, 150, 152, 153, 155, 156, 162, 171, 173, 180, 183, 187, 189, 202, 213, 226, 239, 243, 278, 280, 316, 392, 411, 418, 420, 431, 432, 446, 447, 450, 457, 460, 518, 532, 536, 570, 574, 576, 578, 625, 632, 641, 665, 671, 710, 720, 732, 751, 753, 802, 805, 829, 830, 853, 855, 858, 884, 907, 908, 918, 919, 935, 944, 952, 973, 992, 993, 997, 999, 1000, 1020, 1031, 1035, 1039, 1042, 1048, 1052, 1057, 1078, 1105, 1108, 1118, 1125], "copi": [28, 36, 42, 50, 70, 97, 99, 101, 102, 114, 118, 122, 126, 130, 141, 143, 147, 151, 152, 153, 154, 157, 162, 166, 172, 178, 181, 191, 198, 201, 213, 223, 229, 235, 239, 243, 246, 249, 255, 256, 257, 258, 261, 266, 267, 271, 275, 276, 278, 285, 287, 288, 291, 303, 316, 338, 368, 370, 382, 388, 397, 402, 404, 406, 410, 411, 414, 417, 421, 430, 434, 439, 440, 455, 487, 488, 501, 502, 503, 508, 525, 537, 538, 540, 549, 554, 556, 558, 560, 561, 562, 568, 578, 579, 581, 582, 591, 595, 605, 613, 622, 624, 627, 628, 640, 642, 648, 651, 654, 657, 662, 663, 664, 668, 669, 670, 688, 700, 702, 712, 716, 720, 721, 725, 733, 751, 752, 753, 754, 755, 777, 782, 802, 803, 818, 828, 829, 830, 831, 832, 833, 842, 862, 868, 869, 871, 872, 873, 874, 876, 882, 898, 909, 912, 914, 919, 931, 936, 937, 938, 939, 946, 947, 952, 956, 969, 986, 987, 988, 990, 992, 993, 997, 998, 1032, 1047, 1050, 1113, 1117, 1122, 1135, 1140, 1142, 1153, 1165], "dumb": [28, 45, 171, 202, 320, 773, 947, 949], "reason": [28, 61, 131, 138, 153, 166, 172, 183, 212, 231, 332, 415, 422, 424, 426, 432, 435, 448, 460, 579, 581, 582, 616, 660, 703, 722, 770, 786, 798, 802, 853, 855, 952, 960, 961, 974, 988, 993, 1031, 1040, 1042, 1105], "ar": [28, 32, 43, 45, 47, 53, 55, 56, 57, 58, 59, 61, 62, 63, 65, 68, 78, 80, 81, 89, 106, 108, 109, 110, 111, 112, 119, 126, 131, 135, 138, 144, 145, 148, 150, 153, 154, 155, 157, 158, 161, 162, 166, 167, 168, 171, 172, 173, 175, 179, 181, 183, 187, 188, 189, 190, 191, 192, 203, 210, 211, 212, 213, 220, 223, 224, 226, 227, 229, 230, 232, 234, 235, 236, 237, 239, 243, 247, 251, 256, 258, 260, 267, 269, 270, 273, 275, 276, 277, 278, 280, 285, 288, 293, 297, 302, 303, 306, 307, 309, 316, 320, 321, 322, 326, 332, 335, 337, 338, 340, 341, 357, 359, 360, 362, 365, 367, 368, 370, 372, 375, 376, 379, 380, 381, 387, 390, 393, 398, 399, 402, 406, 408, 409, 411, 412, 413, 418, 419, 420, 422, 423, 426, 429, 432, 435, 442, 443, 445, 447, 450, 451, 456, 457, 460, 461, 462, 472, 482, 484, 487, 506, 509, 516, 517, 518, 519, 520, 523, 527, 532, 536, 546, 552, 555, 562, 563, 564, 565, 567, 570, 571, 574, 575, 576, 578, 585, 588, 595, 596, 597, 600, 610, 616, 617, 622, 625, 632, 634, 635, 637, 638, 642, 648, 649, 650, 651, 655, 661, 663, 664, 665, 668, 671, 672, 673, 677, 682, 699, 702, 703, 708, 709, 710, 712, 714, 718, 719, 720, 721, 723, 724, 726, 729, 731, 735, 736, 753, 755, 757, 758, 761, 771, 773, 775, 780, 786, 788, 790, 794, 796, 798, 800, 802, 807, 821, 828, 829, 830, 833, 835, 837, 838, 840, 841, 842, 844, 845, 847, 848, 853, 855, 862, 863, 865, 875, 880, 884, 886, 889, 899, 900, 906, 907, 908, 909, 915, 917, 919, 922, 924, 925, 928, 929, 936, 942, 944, 945, 947, 949, 950, 952, 955, 961, 962, 963, 964, 969, 973, 974, 976, 977, 978, 979, 982, 984, 988, 990, 991, 993, 994, 995, 997, 999, 1000, 1002, 1004, 1008, 1011, 1012, 1013, 1014, 1018, 1020, 1023, 1024, 1027, 1028, 1029, 1030, 1031, 1033, 1036, 1040, 1048, 1050, 1051, 1052, 1054, 1062, 1067, 1095, 1099, 1100, 1105, 1106, 1107, 1108, 1109, 1112, 1113, 1114, 1116, 1118, 1119, 1122, 1124, 1125, 1127, 1133, 1135, 1136, 1139, 1140, 1143, 1155, 1156, 1158], "need": [28, 43, 45, 46, 47, 51, 55, 56, 61, 63, 104, 115, 117, 119, 122, 131, 151, 152, 153, 156, 158, 162, 166, 167, 172, 183, 190, 191, 193, 203, 213, 227, 229, 251, 295, 323, 335, 365, 367, 370, 390, 398, 399, 418, 424, 425, 431, 435, 437, 438, 442, 445, 447, 450, 452, 455, 457, 461, 462, 484, 514, 516, 517, 518, 519, 549, 555, 561, 562, 577, 597, 617, 631, 638, 642, 671, 677, 706, 720, 723, 729, 734, 736, 741, 755, 761, 775, 777, 790, 794, 798, 802, 841, 845, 858, 863, 899, 900, 901, 902, 906, 907, 908, 915, 919, 925, 926, 929, 932, 943, 947, 958, 979, 988, 992, 993, 994, 998, 1003, 1016, 1024, 1025, 1027, 1030, 1039, 1044, 1055, 1056, 1105, 1106, 1113, 1127, 1135, 1156], "mechan": [28, 32, 89, 138, 151, 152, 175, 183, 187, 198, 213, 267, 460, 638, 949, 970, 1008, 1100, 1128, 1153, 1158, 1168], "where": [28, 53, 89, 109, 112, 114, 131, 136, 137, 147, 150, 151, 152, 153, 154, 156, 158, 161, 166, 171, 172, 179, 180, 183, 184, 187, 210, 211, 212, 213, 220, 223, 226, 227, 229, 236, 239, 243, 251, 260, 267, 285, 293, 302, 306, 309, 335, 340, 341, 376, 380, 390, 398, 399, 401, 402, 403, 416, 420, 431, 433, 443, 453, 466, 473, 504, 506, 517, 532, 538, 555, 574, 635, 638, 642, 660, 718, 719, 723, 796, 800, 802, 814, 844, 845, 859, 862, 865, 886, 891, 899, 906, 907, 908, 915, 920, 926, 928, 931, 934, 935, 951, 961, 962, 969, 973, 974, 977, 988, 992, 993, 1000, 1002, 1004, 1007, 1029, 1031, 1041, 1082, 1100, 1107, 1112, 1133, 1155, 1158], "could": [28, 50, 57, 110, 111, 114, 119, 126, 130, 147, 148, 151, 152, 156, 158, 162, 172, 181, 183, 189, 203, 212, 213, 223, 233, 239, 267, 277, 279, 280, 298, 301, 313, 353, 381, 425, 446, 448, 461, 462, 486, 519, 570, 578, 642, 654, 660, 673, 674, 682, 697, 707, 722, 756, 773, 802, 815, 841, 859, 907, 908, 915, 926, 932, 969, 1031, 1082, 1096, 1112, 1122, 1128, 1140, 1153], "exchang": [28, 78, 180, 223, 313, 442, 470, 486, 516, 670, 671, 773, 846, 964, 1057, 1065], "meta": [28, 39, 143, 158, 802, 814, 862], "retriev": [28, 162, 688, 802, 1004, 1052], "check": [28, 29, 38, 88, 97, 104, 112, 119, 136, 150, 151, 153, 154, 155, 156, 157, 162, 166, 171, 183, 187, 191, 195, 220, 226, 229, 236, 239, 243, 267, 280, 320, 343, 346, 368, 383, 392, 394, 395, 400, 408, 415, 419, 427, 429, 445, 509, 510, 532, 543, 555, 562, 570, 577, 578, 595, 616, 654, 670, 671, 682, 719, 753, 755, 775, 777, 782, 802, 818, 819, 821, 898, 899, 906, 907, 929, 934, 940, 943, 947, 977, 978, 983, 986, 988, 995, 1024, 1029, 1042, 1052, 1055, 1059, 1061, 1063, 1079, 1085, 1098, 1128, 1133, 1142, 1153, 1163], "everyth": [28, 42, 43, 98, 114, 126, 144, 151, 157, 158, 175, 183, 187, 191, 202, 210, 228, 229, 257, 266, 267, 270, 273, 287, 288, 302, 305, 346, 353, 370, 390, 393, 418, 432, 438, 442, 503, 561, 562, 564, 571, 575, 580, 585, 635, 677, 706, 710, 726, 733, 753, 754, 755, 771, 780, 800, 804, 807, 832, 835, 836, 838, 839, 863, 884, 898, 899, 900, 906, 907, 908, 925, 927, 928, 939, 952, 953, 959, 961, 964, 974, 996, 1002, 1007, 1011, 1107, 1122, 1166, 1167, 1168, 1170], "clearli": [28, 43, 117, 166, 183, 420, 667, 688, 715, 802, 821, 935, 1000, 1031, 1052, 1155], "intersphinx": [28, 148], "spinx": 28, "possibli": [29, 77, 85, 121, 151, 183, 444, 578, 654, 668, 677, 682, 697, 709, 719, 731, 732, 847, 884, 907, 955, 990, 1116], "arrang": [29, 84, 110, 111, 155, 298, 519, 724, 835, 895], "subgroup": [29, 35, 38, 538], "refer": [29, 66, 90, 97, 110, 111, 114, 120, 150, 156, 157, 171, 173, 178, 187, 190, 192, 195, 196, 207, 208, 210, 212, 213, 218, 221, 222, 224, 225, 227, 228, 229, 234, 235, 236, 239, 243, 245, 247, 248, 250, 254, 262, 263, 265, 270, 272, 273, 277, 278, 280, 283, 284, 286, 289, 290, 292, 293, 301, 302, 304, 305, 306, 309, 311, 316, 319, 321, 322, 323, 324, 325, 326, 335, 399, 405, 412, 451, 508, 516, 525, 527, 538, 560, 561, 562, 563, 578, 579, 581, 582, 583, 586, 589, 605, 611, 615, 624, 627, 628, 629, 637, 642, 645, 648, 649, 652, 653, 654, 655, 656, 657, 668, 688, 700, 701, 709, 712, 716, 720, 725, 733, 752, 753, 754, 755, 761, 762, 764, 766, 769, 772, 779, 783, 793, 802, 806, 811, 814, 817, 820, 823, 845, 875, 884, 898, 899, 906, 907, 931, 970, 976, 992, 995, 1000, 1001, 1023, 1050, 1051, 1057, 1058, 1059, 1069, 1072, 1080, 1081, 1083, 1084, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1113, 1114, 1133, 1135, 1153, 1154, 1155, 1163], "veri": [29, 35, 37, 38, 150, 151, 153, 172, 183, 187, 190, 192, 203, 208, 211, 234, 237, 260, 284, 306, 346, 353, 374, 381, 391, 392, 412, 428, 429, 431, 437, 444, 447, 462, 549, 560, 573, 588, 606, 634, 663, 664, 702, 705, 708, 719, 722, 740, 802, 807, 812, 840, 841, 900, 905, 907, 908, 925, 926, 942, 947, 962, 976, 1004, 1012, 1028, 1031, 1035, 1036, 1042, 1046, 1050, 1055, 1100, 1107, 1108, 1129, 1138, 1145, 1153], "unawar": [29, 166, 183, 190], "simpli": [29, 61, 119, 145, 151, 154, 156, 158, 162, 166, 175, 239, 240, 279, 280, 301, 302, 381, 423, 465, 503, 570, 579, 581, 582, 631, 641, 652, 688, 709, 710, 715, 720, 734, 780, 834, 847, 906, 928, 932, 976, 992, 1000], "interest": [29, 112, 152, 153, 166, 172, 183, 191, 335, 447, 462, 999, 1001, 1119], "catalog": [29, 1156], "chapter": [29, 42, 131, 203, 212, 220, 226, 236, 239, 240, 538, 862], "subchapt": 29, "cluster_python": [29, 90, 208, 321, 322, 323, 324, 325, 326, 335, 755, 1001, 1008, 1009, 1010, 1011, 1015, 1023, 1034, 1043, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1101, 1102, 1106, 1107, 1110, 1113, 1114, 1116, 1120, 1127, 1130, 1132, 1137], "cluster_python_exercis": [29, 208, 335, 755, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098], "cluster_python_exercises_csv": [29, 755, 1056, 1057, 1058, 1059, 1098], "csv": [29, 44, 51, 53, 54, 55, 56, 78, 106, 119, 121, 124, 187, 190, 199, 202, 208, 212, 213, 216, 218, 220, 221, 224, 225, 227, 231, 234, 237, 239, 245, 246, 249, 264, 268, 269, 271, 274, 275, 279, 280, 286, 291, 295, 298, 301, 303, 307, 313, 443, 755, 844, 847, 862, 884, 1012, 1015, 1018, 1052, 1059, 1093, 1094, 1095, 1096, 1098, 1100, 1103, 1104, 1105, 1106, 1114], "databas": [29, 42, 43, 55, 78, 148, 170, 171, 190, 212, 218, 223, 224, 227, 229, 230, 233, 237, 251, 279, 280, 301, 326, 462, 463, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 755, 858, 889, 910, 1018, 1057, 1059, 1078, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1114, 1118, 1129, 1145], "cluster_python_exercises_legaci": [29, 208, 335, 755, 1059, 1067, 1068, 1069, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1098], "legaci": [29, 208, 335, 465, 755, 1059, 1067, 1068, 1069, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1098, 1148], "cluster_python_exercises_userdb": [29, 755, 1059, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098], "seri": [29, 100, 152, 223, 227, 268, 269, 270, 271, 273, 275, 277, 302, 307, 313, 422, 443, 472, 755, 911, 1025, 1057, 1059, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1105, 1114, 1119, 1120, 1121, 1123, 1124, 1168], "cluster_python_exercises_herdt": [29, 755, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1098], "cluster_python_exercises_sensor": [29, 755, 1059, 1086, 1087, 1088, 1098], "sensor": [29, 69, 72, 73, 74, 78, 81, 84, 97, 106, 109, 114, 115, 116, 118, 119, 120, 121, 122, 124, 129, 131, 178, 187, 191, 227, 248, 259, 267, 276, 279, 280, 295, 298, 301, 305, 316, 335, 339, 341, 459, 464, 466, 474, 480, 481, 484, 485, 489, 495, 498, 504, 508, 509, 510, 511, 512, 513, 514, 525, 528, 529, 530, 531, 532, 533, 534, 535, 560, 568, 633, 670, 719, 720, 721, 744, 746, 755, 802, 898, 905, 937, 939, 956, 1012, 1059, 1087, 1098, 1164], "And": [29, 97, 99, 102, 103, 104, 106, 114, 124, 151, 152, 153, 155, 158, 181, 187, 190, 210, 213, 218, 220, 229, 231, 240, 248, 255, 256, 257, 259, 260, 262, 263, 265, 266, 269, 273, 283, 284, 286, 287, 289, 294, 303, 308, 310, 311, 314, 319, 443, 449, 455, 459, 466, 468, 480, 494, 508, 509, 510, 511, 512, 513, 514, 515, 518, 521, 525, 537, 538, 560, 568, 590, 598, 603, 613, 616, 624, 628, 634, 657, 669, 700, 701, 702, 711, 716, 723, 725, 733, 740, 743, 752, 753, 754, 755, 825, 831, 832, 835, 836, 840, 844, 852, 854, 856, 857, 866, 867, 868, 869, 870, 871, 872, 873, 874, 876, 882, 892, 898, 905, 912, 914, 921, 927, 929, 934, 937, 939, 943, 953, 956, 959, 961, 964, 976, 978, 980, 981, 982, 983, 984, 987, 999, 1001, 1006, 1009, 1010, 1011, 1015, 1016, 1040, 1056, 1057, 1058, 1059, 1072, 1083, 1093, 1094, 1095, 1098, 1110, 1114, 1120, 1127, 1153], "acquisit": [29, 119, 151, 178, 279, 280, 295, 298, 301, 302, 305, 552, 755, 1055, 1059, 1087, 1088, 1098], "cluster_python_bas": [29, 90, 208, 321, 322, 323, 324, 325, 326, 335, 755, 1001, 1008, 1009, 1010, 1011, 1015, 1023, 1034, 1043, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1110, 1113, 1114, 1120, 1127], "fundament": [29, 59, 62, 73, 90, 174, 183, 186, 188, 190, 192, 195, 197, 202, 205, 208, 211, 214, 224, 230, 234, 242, 245, 321, 322, 323, 324, 325, 326, 335, 353, 354, 442, 472, 755, 780, 1001, 1008, 1009, 1010, 1011, 1015, 1034, 1043, 1048, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1110, 1113, 1114, 1120, 1127, 1128], "cluster_python_draft": [29, 755, 1053, 1098], "cluster_python_misc": [29, 90, 208, 321, 322, 323, 324, 325, 326, 335, 755, 1001, 1023, 1053, 1057, 1058, 1059, 1069, 1072, 1080, 1083, 1084, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1101, 1102, 1106, 1107, 1113, 1114, 1116, 1120, 1127, 1130, 1137], "cluster_python_misc_panda": [29, 755, 1098, 1114, 1120], "panda": [29, 172, 183, 202, 208, 221, 234, 248, 251, 269, 272, 284, 301, 303, 305, 308, 312, 314, 353, 444, 755, 1024, 1098, 1100, 1103, 1106, 1114], "cluster_python_misc_ai": [29, 755, 1098, 1101, 1102, 1106, 1107, 1114], "machin": [29, 102, 110, 111, 114, 143, 153, 158, 172, 187, 203, 210, 211, 220, 221, 224, 226, 236, 239, 293, 301, 305, 309, 334, 338, 358, 374, 376, 384, 392, 420, 424, 438, 519, 520, 755, 802, 829, 830, 835, 838, 841, 891, 898, 912, 913, 914, 915, 917, 918, 919, 961, 976, 979, 986, 1000, 1098, 1102, 1106, 1114, 1155], "artifici": [29, 187, 212, 270, 301, 305, 420, 654, 755, 919, 992, 1098, 1102, 1106, 1107, 1114], "intellig": [29, 151, 187, 227, 263, 270, 273, 283, 289, 301, 305, 341, 755, 773, 997, 1001, 1098, 1102, 1106, 1107, 1114], "cluster_python_advanc": [29, 755, 1001, 1008, 1009, 1010, 1011, 1015, 1053, 1056, 1057, 1058, 1059, 1072, 1083, 1086, 1087, 1088, 1093, 1094, 1095, 1096, 1097, 1098, 1101, 1102, 1106, 1110, 1114, 1116, 1127, 1130, 1132, 1137], "cluster_python_advanced_oo": [29, 755, 1001, 1008, 1009, 1010, 1011, 1015, 1059, 1086, 1087, 1088, 1093, 1095, 1098, 1127], "object": [29, 63, 70, 73, 74, 78, 90, 97, 103, 104, 106, 107, 108, 110, 111, 112, 114, 115, 119, 120, 123, 131, 144, 166, 168, 171, 173, 178, 183, 190, 199, 201, 202, 207, 210, 211, 213, 216, 218, 220, 223, 224, 227, 228, 229, 230, 231, 235, 236, 241, 242, 244, 246, 249, 253, 261, 265, 267, 268, 270, 271, 273, 275, 278, 281, 285, 291, 297, 303, 307, 313, 316, 322, 324, 325, 328, 330, 335, 336, 337, 338, 372, 398, 425, 443, 445, 450, 451, 455, 456, 457, 462, 464, 466, 471, 480, 482, 488, 506, 508, 509, 510, 511, 512, 513, 514, 515, 516, 518, 519, 525, 527, 532, 538, 552, 560, 561, 563, 565, 568, 569, 571, 573, 574, 579, 581, 582, 583, 585, 586, 589, 605, 611, 615, 616, 617, 624, 627, 628, 631, 632, 634, 637, 638, 642, 643, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 660, 668, 669, 671, 672, 682, 688, 700, 702, 704, 705, 709, 710, 715, 716, 718, 720, 721, 724, 725, 731, 733, 734, 739, 740, 745, 749, 750, 752, 753, 754, 755, 845, 898, 976, 977, 978, 981, 982, 983, 984, 986, 992, 995, 997, 998, 1000, 1001, 1004, 1008, 1009, 1010, 1011, 1012, 1014, 1016, 1018, 1019, 1021, 1023, 1024, 1025, 1031, 1040, 1042, 1048, 1049, 1059, 1086, 1087, 1088, 1093, 1095, 1098, 1105, 1119, 1121, 1123, 1124, 1125, 1127, 1133, 1153, 1154, 1156, 1158], "orient": [29, 70, 73, 74, 78, 97, 114, 131, 171, 190, 202, 211, 213, 218, 224, 227, 230, 241, 242, 251, 253, 265, 270, 273, 276, 278, 316, 322, 324, 325, 335, 336, 337, 370, 443, 466, 480, 508, 509, 510, 511, 512, 513, 514, 515, 516, 518, 525, 527, 560, 561, 568, 583, 586, 589, 605, 611, 615, 624, 627, 628, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 669, 700, 716, 724, 725, 733, 740, 752, 754, 755, 1001, 1008, 1009, 1010, 1011, 1025, 1059, 1086, 1087, 1088, 1093, 1095, 1098, 1127, 1133, 1154, 1156], "cluster_python_advanced_multithread": [29, 755, 1001, 1008, 1009, 1010, 1011, 1098], "cluster_python_db": [29, 755, 1056, 1058, 1059, 1098, 1110], "cluster_python_swdev": [29, 755, 1053, 1098, 1101, 1102, 1106, 1114, 1116, 1127, 1130, 1132, 1137], "cluster_python_swdev_pytest": [29, 755, 1098, 1127, 1132], "pytest": [29, 227, 237, 240, 248, 251, 260, 269, 277, 279, 284, 295, 298, 301, 302, 305, 306, 343, 444, 755, 1088, 1096, 1097, 1098, 1127], "python_python_5550_xml_etre": [29, 755, 1098], "xml": [29, 119, 147, 148, 298, 755, 1098, 1114], "elementtre": [29, 251, 755, 1098, 1114], "etre": [29, 251, 755, 1098, 1114], "python_basics_python_0220_for": [29, 90, 208, 321, 322, 323, 324, 325, 326, 335, 755, 1001, 1023, 1056, 1057, 1058, 1059, 1069, 1072, 1073, 1075, 1079, 1080, 1081, 1082, 1083, 1084, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1110, 1114], "loop": [29, 32, 34, 38, 42, 59, 62, 89, 90, 97, 110, 111, 114, 119, 123, 131, 139, 144, 151, 166, 175, 187, 190, 192, 195, 196, 197, 200, 208, 210, 211, 212, 214, 218, 221, 224, 229, 230, 232, 234, 235, 240, 242, 244, 245, 247, 248, 250, 260, 263, 270, 273, 280, 283, 284, 289, 290, 298, 302, 306, 311, 312, 314, 316, 319, 321, 322, 323, 324, 325, 326, 327, 335, 340, 358, 361, 364, 373, 376, 388, 395, 396, 397, 404, 410, 414, 417, 418, 421, 422, 430, 434, 439, 440, 507, 508, 549, 560, 591, 596, 653, 660, 662, 688, 700, 723, 734, 752, 754, 755, 790, 800, 805, 819, 833, 835, 839, 846, 902, 924, 925, 926, 934, 960, 964, 970, 973, 974, 1001, 1002, 1005, 1006, 1011, 1023, 1056, 1057, 1058, 1059, 1061, 1063, 1069, 1071, 1072, 1073, 1075, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1110, 1114, 1116, 1152, 1153, 1154, 1163], "gt": [29, 32, 35, 36, 53, 55, 56, 72, 73, 74, 87, 90, 115, 116, 117, 118, 120, 122, 123, 124, 125, 130, 140, 170, 173, 184, 189, 194, 201, 207, 208, 210, 215, 220, 223, 226, 231, 233, 236, 239, 243, 246, 249, 252, 261, 264, 268, 271, 281, 285, 291, 303, 307, 313, 321, 322, 323, 324, 325, 326, 329, 330, 335, 373, 388, 397, 404, 410, 414, 417, 421, 430, 434, 439, 440, 449, 466, 480, 508, 509, 510, 511, 512, 513, 514, 515, 518, 525, 527, 560, 568, 583, 586, 589, 605, 611, 615, 624, 627, 628, 633, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 662, 669, 676, 700, 701, 711, 716, 725, 733, 740, 752, 754, 755, 759, 762, 764, 767, 769, 772, 774, 778, 779, 781, 783, 785, 787, 793, 795, 797, 799, 806, 808, 811, 813, 817, 820, 823, 825, 829, 830, 831, 832, 835, 836, 843, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 882, 892, 898, 905, 910, 911, 912, 913, 914, 921, 927, 929, 937, 939, 941, 953, 956, 959, 961, 978, 980, 981, 982, 983, 984, 985, 986, 987, 1001, 1008, 1009, 1010, 1011, 1015, 1023, 1034, 1043, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1101, 1102, 1106, 1110, 1113, 1114, 1116, 1120, 1127, 1130, 1132, 1137, 1138], "python_basics_python_0450_dictionari": [29, 90, 755, 1001, 1023, 1059, 1072, 1083, 1098], "python_advanced_modul": [29, 755, 1001, 1053, 1056, 1057, 1058, 1059, 1093, 1094, 1095, 1096, 1097, 1098, 1101, 1102, 1106, 1110, 1114, 1116, 1127, 1130, 1132, 1137], "python_exercises_csv_csv_modul": [29, 755, 1057, 1058, 1059, 1098], "python_basics_python_0139_commandline_argv": [29, 90, 208, 335, 755, 1023, 1053, 1056, 1057, 1058, 1059, 1061, 1062, 1063, 1064, 1066, 1067, 1069, 1072, 1073, 1074, 1075, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098], "argument": [29, 57, 63, 90, 97, 114, 144, 150, 153, 156, 170, 171, 184, 187, 199, 208, 211, 218, 220, 224, 226, 227, 229, 230, 232, 234, 236, 237, 240, 241, 242, 243, 245, 248, 263, 264, 267, 270, 273, 277, 279, 280, 283, 284, 285, 289, 290, 298, 301, 302, 305, 306, 307, 311, 312, 319, 335, 357, 358, 403, 410, 414, 417, 421, 430, 434, 439, 440, 444, 506, 538, 562, 572, 573, 662, 677, 697, 700, 710, 722, 752, 753, 754, 755, 760, 761, 862, 884, 898, 932, 934, 936, 939, 956, 994, 997, 1001, 1023, 1025, 1026, 1043, 1051, 1053, 1056, 1057, 1058, 1059, 1061, 1062, 1063, 1064, 1066, 1067, 1069, 1071, 1072, 1073, 1074, 1075, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1111, 1133, 1135], "sy": [29, 32, 90, 115, 126, 130, 152, 169, 171, 173, 174, 199, 201, 202, 208, 211, 217, 220, 224, 226, 231, 234, 236, 239, 240, 242, 243, 245, 246, 248, 261, 263, 264, 269, 270, 273, 279, 283, 284, 285, 289, 290, 301, 305, 307, 311, 312, 319, 320, 321, 328, 335, 431, 444, 503, 519, 520, 755, 757, 761, 782, 859, 888, 899, 906, 907, 908, 924, 925, 926, 928, 932, 933, 934, 935, 936, 938, 940, 942, 943, 957, 964, 966, 969, 973, 990, 1000, 1007, 1022, 1023, 1042, 1050, 1052, 1053, 1056, 1057, 1058, 1059, 1061, 1062, 1063, 1064, 1066, 1067, 1069, 1071, 1072, 1073, 1074, 1075, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1125, 1133, 1148], "argv": [29, 42, 50, 90, 153, 170, 171, 174, 184, 202, 208, 211, 212, 217, 220, 224, 226, 229, 230, 234, 236, 239, 240, 242, 245, 248, 263, 269, 270, 273, 279, 283, 284, 289, 290, 301, 305, 311, 312, 319, 320, 328, 335, 409, 444, 445, 467, 506, 755, 906, 932, 933, 934, 935, 936, 940, 943, 957, 964, 973, 994, 1000, 1007, 1023, 1052, 1053, 1056, 1057, 1058, 1059, 1061, 1062, 1063, 1064, 1066, 1067, 1069, 1071, 1072, 1073, 1074, 1075, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1140, 1145], "python_misc_csv": [29, 755, 1057, 1058, 1059, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1114], "python_advanced_python_1010_generators_yield": [29, 755, 1001, 1056, 1057, 1058, 1059, 1072, 1083, 1098, 1110], "python_exercises_csv_csv_db": [29, 755, 1056, 1058, 1059, 1098], "sqlite3": [29, 85, 187, 218, 224, 230, 237, 755, 1058, 1059, 1098, 1109, 1110, 1114], "python_db_sqlite3": [29, 755, 1056, 1058, 1059, 1098, 1110], "dbapi": [29, 187, 218, 230, 755, 1056, 1058, 1059, 1098, 1110], "python_exercises_legacy_uniq_gener": [29, 755, 1059, 1072, 1083, 1098], "uniq": [29, 170, 171, 188, 190, 202, 208, 218, 221, 224, 230, 234, 240, 242, 245, 263, 270, 283, 284, 289, 290, 306, 311, 312, 319, 536, 755, 895, 1059, 1069, 1072, 1073, 1080, 1081, 1084, 1098], "python_exercises_legacy_uniq_funct": [29, 208, 755, 1059, 1069, 1072, 1073, 1080, 1081, 1082, 1083, 1084, 1098], "python_exercises_legacy_passwd": [29, 755, 1059, 1072, 1083, 1098], "pars": [29, 170, 207, 208, 218, 219, 221, 224, 230, 234, 239, 240, 242, 248, 251, 279, 284, 301, 305, 321, 326, 339, 755, 1053, 1059, 1072, 1083, 1098, 1100, 1125], "passwd": [29, 100, 101, 114, 191, 201, 210, 223, 224, 226, 230, 231, 234, 239, 240, 242, 246, 248, 249, 257, 264, 266, 267, 271, 281, 285, 287, 288, 307, 313, 753, 755, 832, 834, 837, 839, 842, 844, 846, 857, 876, 879, 881, 882, 884, 887, 889, 893, 895, 898, 899, 909, 910, 918, 919, 923, 924, 929, 935, 955, 969, 997, 999, 1046, 1050, 1059, 1072, 1083, 1098, 1128], "python_exercises_legacy_for_prim": [29, 208, 755, 1059, 1069, 1072, 1073, 1075, 1079, 1080, 1081, 1082, 1083, 1084, 1098], "prime": [29, 38, 170, 171, 190, 194, 195, 197, 202, 208, 214, 218, 230, 234, 237, 242, 248, 263, 270, 283, 284, 289, 290, 311, 312, 319, 420, 755, 1059, 1069, 1072, 1073, 1075, 1080, 1081, 1082, 1083, 1084, 1098, 1163], "python_exercises_legacy_while_prim": [29, 208, 755, 1059, 1069, 1072, 1073, 1075, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1098], "python_basics_python_0225_rang": [29, 90, 208, 755, 1001, 1023, 1056, 1057, 1058, 1059, 1069, 1072, 1073, 1075, 1079, 1080, 1081, 1082, 1083, 1084, 1098, 1110], "python_exercises_legacy_function_prim": [29, 208, 755, 1059, 1069, 1072, 1073, 1079, 1080, 1081, 1082, 1083, 1084, 1098], "python_basics_python_0150_datatypes_overview_compound": [29, 90, 208, 321, 322, 323, 324, 325, 326, 335, 755, 1001, 1008, 1009, 1010, 1011, 1015, 1023, 1056, 1057, 1058, 1059, 1067, 1068, 1069, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1110, 1113, 1114, 1120, 1127], "python_basics_python_0270_funct": [29, 90, 208, 755, 1001, 1023, 1043, 1056, 1057, 1058, 1059, 1069, 1072, 1073, 1075, 1079, 1080, 1081, 1082, 1083, 1084, 1090, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1110], "python_exercises_legacy_max_numbers_funct": [29, 208, 755, 1059, 1069, 1072, 1073, 1075, 1079, 1080, 1081, 1082, 1083, 1084, 1098], "determin": [29, 102, 114, 144, 150, 174, 179, 181, 189, 190, 195, 197, 202, 208, 214, 218, 220, 221, 224, 230, 234, 240, 242, 245, 247, 248, 263, 270, 283, 284, 289, 290, 311, 312, 319, 638, 672, 673, 710, 755, 810, 832, 851, 852, 853, 854, 855, 856, 857, 894, 898, 907, 925, 962, 963, 993, 1059, 1061, 1062, 1063, 1066, 1069, 1072, 1073, 1079, 1080, 1081, 1082, 1083, 1084, 1098, 1128, 1163], "python_exercises_legacy_revert": [29, 208, 755, 1059, 1069, 1072, 1080, 1083, 1098], "revert": [29, 130, 151, 208, 755, 780, 798, 960, 1019, 1059, 1069, 1072, 1083, 1098], "line": [29, 34, 35, 36, 38, 63, 112, 120, 147, 148, 151, 153, 156, 166, 170, 173, 174, 187, 191, 201, 203, 207, 208, 210, 211, 216, 217, 220, 221, 223, 224, 226, 227, 229, 230, 231, 234, 236, 237, 239, 240, 242, 243, 246, 248, 249, 251, 252, 263, 264, 269, 270, 271, 273, 277, 281, 283, 284, 285, 289, 290, 291, 303, 307, 311, 313, 319, 326, 335, 358, 364, 365, 373, 377, 380, 382, 388, 397, 399, 404, 410, 414, 417, 421, 426, 430, 433, 434, 436, 439, 440, 444, 447, 450, 457, 487, 488, 638, 641, 644, 662, 700, 752, 754, 755, 771, 775, 782, 784, 802, 829, 830, 833, 842, 844, 846, 868, 889, 891, 893, 894, 895, 899, 903, 906, 907, 908, 950, 960, 991, 997, 1002, 1003, 1027, 1044, 1048, 1050, 1051, 1052, 1057, 1059, 1072, 1078, 1083, 1097, 1098, 1100, 1103, 1108, 1113, 1134], "python_exercises_legacy_wc": [29, 208, 755, 1059, 1069, 1072, 1080, 1083, 1084, 1098], "word": [29, 43, 65, 144, 151, 171, 179, 183, 187, 190, 197, 202, 208, 212, 218, 221, 229, 230, 234, 237, 239, 240, 242, 245, 247, 248, 255, 256, 258, 263, 270, 277, 283, 284, 285, 289, 290, 302, 311, 312, 315, 316, 319, 335, 340, 365, 418, 460, 465, 538, 638, 716, 725, 733, 754, 755, 842, 844, 891, 963, 1059, 1069, 1072, 1073, 1075, 1079, 1080, 1081, 1082, 1083, 1085, 1098], "charact": [29, 153, 169, 194, 199, 203, 208, 212, 216, 223, 229, 239, 246, 249, 267, 270, 285, 291, 307, 358, 359, 365, 373, 376, 382, 383, 388, 397, 404, 410, 414, 417, 420, 421, 425, 427, 430, 434, 439, 440, 625, 662, 700, 752, 753, 754, 755, 764, 769, 772, 779, 783, 793, 796, 804, 806, 811, 817, 818, 820, 823, 842, 844, 862, 884, 898, 906, 961, 1011, 1030, 1044, 1045, 1046, 1050, 1052, 1059, 1062, 1069, 1072, 1080, 1083, 1098, 1113, 1140], "python_basics_python_0500_fil": [29, 90, 208, 321, 322, 323, 324, 325, 326, 335, 755, 1001, 1023, 1057, 1058, 1059, 1069, 1072, 1080, 1083, 1084, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1114], "python_exercises_legacy_max_numb": [29, 208, 755, 1059, 1069, 1072, 1073, 1074, 1075, 1079, 1080, 1081, 1082, 1083, 1084, 1098], "python_exercises_legacy_python_0350_exercis": [29, 208, 755, 1059, 1069, 1072, 1080, 1081, 1083, 1084, 1098], "right": [29, 34, 35, 36, 38, 42, 63, 80, 84, 119, 144, 150, 151, 153, 156, 171, 191, 202, 203, 208, 213, 218, 231, 233, 239, 243, 251, 264, 277, 285, 321, 327, 359, 379, 380, 381, 387, 398, 428, 458, 509, 517, 564, 579, 581, 582, 660, 672, 688, 714, 719, 724, 736, 755, 763, 782, 786, 802, 821, 844, 845, 847, 862, 917, 947, 997, 1019, 1030, 1036, 1059, 1069, 1072, 1080, 1083, 1084, 1098], "justifi": [29, 171, 183, 208, 218, 239, 285, 359, 726, 755, 1024, 1059, 1069, 1072, 1080, 1083, 1084, 1098], "python_exercises_legacy_join_funct": [29, 208, 755, 1059, 1069, 1072, 1073, 1080, 1081, 1083, 1084, 1098], "join": [29, 35, 63, 162, 190, 208, 210, 211, 216, 218, 220, 223, 224, 226, 231, 235, 241, 249, 264, 271, 281, 285, 291, 307, 314, 320, 329, 444, 537, 660, 721, 727, 732, 734, 755, 945, 950, 973, 1059, 1069, 1072, 1080, 1081, 1083, 1084, 1098, 1133], "python_basics_python_0150_datatypes_overview": [29, 90, 208, 321, 322, 323, 324, 325, 326, 335, 755, 1001, 1008, 1009, 1010, 1011, 1015, 1023, 1034, 1043, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1110, 1113, 1114, 1120, 1127], "python_exercises_legacy_mixed_list_execut": [29, 208, 755, 1059, 1069, 1072, 1073, 1074, 1075, 1076, 1079, 1080, 1081, 1082, 1083, 1084, 1098], "execut": [29, 44, 63, 108, 110, 111, 114, 144, 147, 151, 153, 161, 162, 166, 171, 178, 183, 190, 197, 203, 208, 218, 220, 221, 224, 226, 234, 236, 239, 263, 270, 283, 284, 289, 290, 293, 294, 309, 310, 311, 312, 319, 320, 321, 328, 335, 357, 358, 392, 394, 398, 420, 425, 429, 438, 446, 449, 450, 462, 481, 484, 491, 498, 503, 517, 546, 570, 585, 688, 753, 755, 800, 802, 828, 829, 830, 837, 839, 844, 849, 850, 858, 862, 909, 918, 947, 960, 974, 976, 977, 978, 979, 982, 986, 988, 992, 994, 1000, 1004, 1008, 1011, 1024, 1034, 1035, 1038, 1057, 1059, 1069, 1072, 1073, 1074, 1075, 1079, 1080, 1081, 1082, 1083, 1084, 1098, 1109, 1112, 1141, 1143, 1155, 1166, 1167], "python_exercises_legacy_mixed_list_interact": [29, 208, 755, 1059, 1069, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1098], "interact": [29, 63, 85, 125, 126, 130, 147, 158, 190, 191, 197, 208, 218, 220, 221, 224, 226, 234, 236, 239, 244, 263, 264, 270, 283, 284, 289, 290, 292, 311, 312, 319, 755, 862, 910, 915, 918, 928, 990, 1025, 1059, 1068, 1069, 1072, 1073, 1074, 1075, 1076, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1098, 1105, 1113], "interpret": [29, 63, 147, 153, 171, 172, 183, 187, 190, 197, 208, 211, 218, 220, 221, 224, 226, 234, 236, 239, 243, 259, 260, 263, 269, 270, 283, 284, 285, 289, 290, 292, 301, 302, 306, 311, 312, 319, 335, 420, 455, 459, 466, 470, 480, 494, 508, 560, 755, 802, 886, 908, 929, 976, 977, 1024, 1025, 1026, 1027, 1057, 1059, 1068, 1069, 1072, 1073, 1074, 1075, 1076, 1079, 1080, 1081, 1082, 1083, 1084, 1098, 1100, 1113, 1135, 1156], "python_basics_python_0120_helloworld": [29, 90, 208, 321, 322, 323, 324, 325, 326, 335, 755, 1001, 1008, 1009, 1010, 1011, 1015, 1023, 1034, 1043, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1110, 1113, 1114, 1120, 1127], "world": [29, 78, 90, 121, 144, 147, 148, 151, 156, 162, 181, 190, 194, 195, 197, 201, 208, 212, 214, 216, 218, 220, 221, 224, 226, 229, 230, 231, 233, 234, 240, 241, 242, 243, 245, 246, 248, 251, 263, 264, 270, 273, 283, 284, 289, 290, 303, 311, 312, 313, 319, 321, 322, 323, 324, 325, 326, 330, 335, 368, 373, 377, 388, 397, 404, 410, 414, 417, 421, 430, 434, 439, 440, 445, 450, 458, 481, 486, 488, 659, 662, 700, 726, 734, 752, 754, 755, 759, 762, 764, 767, 769, 772, 779, 783, 787, 793, 799, 804, 806, 811, 814, 817, 820, 823, 840, 853, 865, 898, 936, 947, 962, 963, 976, 988, 990, 992, 993, 994, 1001, 1008, 1009, 1010, 1011, 1015, 1023, 1027, 1028, 1034, 1037, 1039, 1043, 1044, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1105, 1110, 1113, 1114, 1120, 1127, 1149, 1153, 1163], "python_basics_python_0140_vari": [29, 90, 208, 321, 322, 323, 324, 325, 326, 335, 755, 1001, 1008, 1009, 1010, 1011, 1015, 1023, 1034, 1043, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1110, 1113, 1114, 1120, 1127], "python_basics_python_0160_boolean": [29, 90, 208, 321, 322, 323, 324, 325, 326, 335, 755, 1001, 1023, 1034, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1069, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1110, 1114], "boolean": [29, 58, 84, 90, 171, 172, 188, 190, 192, 195, 196, 197, 208, 214, 218, 221, 222, 224, 225, 226, 230, 232, 234, 235, 240, 241, 242, 244, 245, 247, 248, 263, 270, 273, 283, 284, 289, 290, 311, 312, 314, 319, 321, 322, 323, 324, 325, 326, 335, 340, 364, 387, 403, 755, 949, 1001, 1023, 1031, 1034, 1035, 1046, 1056, 1057, 1058, 1059, 1061, 1062, 1063, 1064, 1065, 1066, 1069, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1110, 1112, 1114, 1163], "python_exercises_legacy_python_1011_generators_yield": [29, 755, 1059, 1072, 1098], "fibonacci": [29, 171, 174, 190, 211, 224, 263, 277, 279, 280, 284, 290, 301, 302, 305, 667, 689, 755, 1004, 1005, 1006, 1059, 1072, 1098], "python_exercises_legacy_distil": [29, 208, 755, 1059, 1069, 1072, 1083, 1098], "elimin": [29, 58, 144, 208, 230, 237, 239, 240, 242, 248, 263, 270, 283, 289, 290, 311, 319, 487, 532, 660, 723, 741, 755, 895, 1002, 1059, 1072, 1083, 1098], "empti": [29, 38, 42, 48, 50, 151, 154, 161, 169, 189, 191, 208, 220, 223, 230, 231, 237, 239, 240, 242, 243, 246, 248, 249, 252, 263, 264, 269, 270, 271, 281, 283, 285, 289, 290, 307, 311, 313, 319, 330, 364, 416, 555, 564, 565, 569, 579, 581, 597, 598, 616, 634, 654, 660, 709, 719, 720, 732, 753, 755, 765, 802, 829, 830, 842, 846, 856, 893, 902, 915, 949, 969, 1007, 1048, 1059, 1072, 1073, 1077, 1083, 1098], "comment": [29, 34, 35, 36, 38, 44, 144, 153, 188, 208, 209, 211, 224, 230, 232, 236, 237, 240, 242, 247, 248, 263, 270, 272, 283, 289, 290, 311, 319, 335, 358, 403, 422, 450, 487, 488, 516, 755, 907, 1045, 1059, 1072, 1083, 1098, 1113], "python_basics_python_0210_indexing_sl": [29, 90, 755, 1023, 1059, 1072, 1083, 1098, 1114, 1120], "python_basics_python_0170_if": [29, 90, 208, 321, 322, 323, 324, 325, 326, 335, 755, 1001, 1023, 1034, 1056, 1057, 1058, 1059, 1061, 1062, 1063, 1064, 1066, 1069, 1072, 1073, 1074, 1075, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1110, 1114], "statement": [29, 54, 90, 110, 111, 171, 183, 187, 188, 189, 190, 195, 197, 202, 208, 211, 212, 214, 218, 221, 224, 230, 234, 240, 242, 245, 248, 254, 260, 263, 270, 273, 277, 279, 280, 283, 284, 289, 290, 295, 298, 301, 302, 305, 306, 311, 312, 319, 321, 322, 323, 324, 325, 326, 335, 340, 357, 360, 364, 377, 390, 392, 393, 396, 397, 402, 404, 410, 414, 417, 421, 424, 430, 434, 439, 440, 616, 642, 661, 662, 700, 752, 754, 755, 763, 835, 875, 961, 982, 996, 999, 1001, 1002, 1007, 1011, 1013, 1023, 1030, 1033, 1035, 1042, 1053, 1056, 1057, 1058, 1059, 1061, 1062, 1063, 1064, 1066, 1069, 1072, 1073, 1074, 1075, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1101, 1102, 1106, 1110, 1114, 1116, 1127, 1130, 1133, 1137, 1163], "python_exercises_legacy_cmdline_digit": [29, 208, 335, 755, 1059, 1067, 1069, 1072, 1073, 1075, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1098], "digit": [29, 144, 170, 171, 190, 197, 202, 208, 218, 221, 230, 234, 239, 240, 242, 243, 245, 247, 248, 263, 270, 283, 284, 285, 289, 290, 302, 311, 312, 313, 319, 320, 340, 366, 375, 755, 1059, 1069, 1072, 1073, 1075, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1098], "python_basics_python_0193_whil": [29, 90, 208, 321, 322, 323, 324, 325, 326, 335, 755, 1001, 1023, 1056, 1057, 1058, 1059, 1061, 1063, 1069, 1072, 1073, 1075, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1110, 1114], "python_exercises_legacy_dict_keyerror": [29, 755, 1059, 1068, 1072, 1098], "python_basics_python_0300_str": [29, 90, 208, 321, 322, 323, 324, 325, 326, 335, 755, 1001, 1023, 1057, 1058, 1059, 1069, 1072, 1080, 1081, 1083, 1084, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1113, 1114], "python_basics_python_0320_strings_method": [29, 90, 208, 321, 322, 323, 324, 325, 326, 335, 755, 1001, 1023, 1057, 1058, 1059, 1069, 1072, 1080, 1081, 1083, 1084, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1113, 1114], "method": [29, 42, 43, 54, 55, 57, 63, 65, 69, 70, 73, 90, 97, 106, 107, 110, 111, 119, 125, 126, 130, 131, 156, 187, 188, 189, 190, 192, 195, 208, 209, 211, 213, 218, 221, 222, 224, 229, 230, 232, 234, 235, 238, 240, 241, 242, 243, 245, 248, 250, 260, 263, 265, 269, 270, 273, 275, 277, 278, 279, 280, 283, 284, 286, 289, 290, 292, 295, 298, 301, 302, 304, 305, 306, 308, 311, 312, 314, 316, 319, 321, 322, 323, 324, 325, 326, 335, 339, 340, 416, 442, 462, 464, 466, 470, 480, 487, 488, 506, 508, 513, 518, 519, 520, 525, 527, 532, 538, 551, 553, 560, 561, 562, 565, 574, 586, 588, 589, 605, 611, 615, 621, 624, 627, 628, 631, 632, 633, 634, 637, 642, 643, 645, 648, 649, 652, 653, 654, 655, 656, 657, 660, 669, 682, 699, 700, 703, 707, 716, 724, 725, 733, 734, 739, 740, 746, 749, 750, 752, 753, 754, 755, 763, 765, 770, 771, 780, 782, 792, 804, 815, 947, 997, 998, 1001, 1004, 1008, 1012, 1013, 1014, 1015, 1016, 1020, 1023, 1028, 1037, 1040, 1057, 1058, 1059, 1069, 1072, 1080, 1081, 1083, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1105, 1109, 1113, 1114, 1119, 1122, 1124, 1156, 1163, 1170], "python_basics_python_0310_strings_format": [29, 90, 208, 755, 1023, 1059, 1069, 1072, 1080, 1081, 1083, 1084, 1098], "python_exercises_userdb_user_class_person": [29, 755, 1059, 1093, 1095, 1098], "awai": [29, 63, 77, 84, 150, 151, 152, 156, 175, 191, 212, 218, 226, 260, 263, 283, 284, 289, 295, 298, 311, 319, 324, 456, 719, 755, 841, 862, 973, 997, 1015, 1059, 1093, 1098], "raw": [29, 63, 126, 196, 199, 202, 207, 219, 222, 231, 235, 241, 255, 256, 260, 262, 263, 267, 269, 283, 284, 289, 292, 295, 298, 302, 311, 319, 320, 330, 356, 444, 445, 451, 474, 481, 519, 599, 720, 755, 838, 1015, 1031, 1036, 1052, 1059, 1093, 1098], "python_exercises_userdb_user_json": [29, 755, 1059, 1093, 1094, 1095, 1096, 1098], "json": [29, 78, 85, 92, 114, 119, 122, 148, 184, 190, 200, 214, 218, 219, 227, 228, 236, 239, 240, 244, 247, 253, 262, 295, 297, 298, 300, 302, 305, 355, 755, 1015, 1059, 1093, 1094, 1095, 1098, 1116, 1129], "python_exercises_userdb_userdb_modul": [29, 755, 1059, 1093, 1094, 1095, 1096, 1097, 1098], "refactor": [29, 43, 55, 126, 148, 237, 240, 245, 248, 260, 263, 279, 283, 284, 289, 290, 311, 312, 319, 403, 443, 460, 707, 755, 763, 769, 779, 783, 793, 804, 806, 811, 817, 820, 823, 898, 1015, 1059, 1093, 1094, 1095, 1096, 1098], "both": [29, 54, 63, 85, 114, 115, 117, 123, 126, 130, 141, 151, 153, 158, 171, 183, 189, 210, 226, 229, 237, 240, 243, 245, 248, 260, 263, 275, 283, 284, 289, 290, 311, 312, 319, 436, 442, 444, 445, 470, 516, 518, 538, 570, 578, 651, 707, 718, 755, 773, 796, 802, 841, 942, 946, 950, 963, 986, 992, 999, 1012, 1015, 1019, 1026, 1033, 1040, 1044, 1049, 1059, 1062, 1065, 1071, 1093, 1094, 1095, 1096, 1098, 1106, 1133, 1140, 1153], "Into": [29, 97, 229, 234, 237, 240, 245, 248, 260, 263, 269, 283, 284, 289, 290, 311, 312, 319, 373, 388, 397, 403, 404, 410, 414, 417, 421, 430, 434, 438, 439, 440, 507, 508, 560, 645, 646, 647, 648, 649, 650, 652, 653, 654, 655, 656, 657, 662, 700, 752, 754, 755, 990, 1015, 1059, 1093, 1094, 1095, 1096, 1098], "python_advanced_oo_namedtupl": [29, 755, 1001, 1015, 1059, 1093, 1095, 1098], "namedtupl": [29, 187, 195, 202, 217, 218, 220, 226, 236, 239, 260, 277, 279, 280, 284, 295, 298, 301, 302, 305, 306, 755, 1001, 1015, 1059, 1093, 1095, 1098, 1118, 1163], "python_exercises_userdb_mqtt_publish_csv": [29, 755, 1059, 1093, 1094, 1098], "mqtt": [29, 112, 118, 119, 121, 124, 200, 202, 216, 218, 227, 240, 241, 245, 279, 280, 295, 298, 301, 341, 344, 346, 755, 1015, 1055, 1059, 1093, 1096, 1098, 1114], "publish": [29, 112, 122, 155, 157, 166, 227, 239, 240, 260, 302, 332, 341, 343, 755, 1015, 1059, 1093, 1096, 1098, 1100, 1131], "python_exercises_userdb_csvdictread": [29, 755, 1059, 1089, 1090, 1093, 1094, 1095, 1096, 1097, 1098], "dictread": [29, 202, 223, 224, 237, 240, 245, 248, 260, 263, 283, 284, 289, 290, 307, 311, 312, 319, 755, 1015, 1057, 1059, 1093, 1094, 1095, 1096, 1097, 1098], "python_exercises_userdb_csvread": [29, 755, 1059, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098], "reader": [29, 148, 223, 237, 240, 245, 248, 260, 263, 283, 284, 289, 290, 311, 312, 319, 425, 444, 467, 755, 846, 1012, 1015, 1042, 1059, 1089, 1090, 1093, 1094, 1095, 1096, 1097, 1098], "python_exercises_userdb_csvdictreader_funct": [29, 755, 1059, 1090, 1093, 1094, 1095, 1096, 1097, 1098], "python_exercises_userdb_csvreader_funct": [29, 755, 1059, 1092, 1093, 1098], "python_exercises_herdt_while_even_numb": [29, 755, 1059, 1061, 1063, 1098], "python_exercises_herdt_username_password": [29, 755, 1059, 1061, 1063, 1066, 1098], "usernam": [29, 166, 195, 203, 224, 332, 755, 829, 837, 846, 909, 919, 1046, 1059, 1061, 1063, 1078, 1098, 1163], "password": [29, 158, 161, 166, 191, 195, 203, 224, 332, 335, 340, 755, 837, 859, 899, 909, 910, 915, 1059, 1061, 1063, 1078, 1098, 1111, 1163], "python_exercises_herdt_max_numb": [29, 755, 1059, 1061, 1062, 1063, 1064, 1066, 1098], "python_exercises_herdt_swap": [29, 755, 1059, 1061, 1062, 1063, 1064, 1065, 1066, 1098], "python_exercises_herdt_greet": [29, 755, 1059, 1061, 1062, 1063, 1066, 1098], "python_exercises_herdt_boolean": [29, 755, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1098], "express": [29, 59, 62, 170, 186, 187, 189, 190, 200, 210, 219, 224, 225, 227, 231, 250, 251, 253, 254, 255, 256, 259, 260, 265, 284, 285, 290, 303, 314, 358, 360, 364, 368, 377, 378, 380, 381, 382, 385, 387, 390, 392, 393, 395, 397, 403, 404, 410, 414, 417, 421, 430, 434, 439, 440, 444, 459, 468, 480, 481, 484, 488, 494, 495, 508, 516, 560, 562, 640, 662, 673, 677, 682, 700, 752, 754, 755, 862, 895, 976, 996, 1006, 1012, 1033, 1035, 1042, 1044, 1059, 1061, 1062, 1063, 1064, 1065, 1066, 1096, 1097, 1098, 1100, 1121, 1152, 1153, 1154], "python_exercises_sensors_project_setup": [29, 755, 1059, 1086, 1087, 1088, 1098], "setup": [29, 106, 114, 126, 135, 139, 148, 166, 178, 182, 183, 221, 223, 239, 246, 249, 251, 256, 258, 264, 267, 271, 281, 285, 307, 313, 332, 335, 340, 341, 426, 459, 473, 484, 486, 500, 514, 517, 519, 520, 653, 655, 755, 770, 796, 893, 898, 906, 908, 923, 925, 936, 973, 977, 981, 983, 986, 987, 997, 1004, 1012, 1055, 1059, 1086, 1098, 1134, 1144, 1146], "python_exercises_sensors_sensor_const": [29, 755, 1059, 1086, 1087, 1088, 1098], "python_advanced_oo_method": [29, 755, 1001, 1015, 1059, 1086, 1087, 1088, 1098], "python_basics_python_0460_set": [29, 90, 755, 1023, 1098], "python_basics_python_0110_blahblah": [29, 90, 208, 321, 322, 323, 324, 325, 326, 335, 755, 1001, 1008, 1009, 1010, 1011, 1015, 1023, 1034, 1043, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1110, 1113, 1114, 1120, 1127], "blahblah": [29, 90, 190, 195, 197, 208, 214, 218, 221, 224, 230, 234, 240, 241, 242, 244, 245, 247, 248, 250, 263, 270, 273, 283, 284, 289, 290, 311, 312, 314, 319, 321, 322, 323, 324, 325, 326, 335, 755, 1001, 1008, 1009, 1010, 1011, 1015, 1023, 1034, 1043, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1110, 1113, 1114, 1120, 1127, 1163], "python_basics_python_0125_run": [29, 90, 208, 335, 755, 1023, 1053, 1056, 1057, 1058, 1059, 1061, 1062, 1063, 1064, 1066, 1067, 1069, 1072, 1073, 1074, 1075, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098], "run": [29, 42, 59, 62, 63, 90, 97, 108, 110, 111, 126, 141, 144, 147, 150, 151, 152, 153, 154, 157, 158, 161, 162, 170, 182, 183, 190, 191, 203, 208, 212, 213, 218, 223, 231, 239, 240, 243, 246, 249, 251, 256, 263, 264, 267, 270, 271, 273, 281, 283, 284, 285, 289, 290, 294, 303, 307, 310, 311, 312, 313, 319, 320, 335, 338, 360, 378, 420, 423, 431, 432, 436, 437, 449, 450, 462, 467, 486, 487, 488, 516, 518, 519, 520, 542, 569, 582, 591, 603, 660, 718, 719, 753, 755, 775, 790, 800, 802, 803, 812, 835, 837, 839, 840, 841, 842, 858, 859, 862, 863, 893, 906, 907, 908, 909, 917, 919, 927, 929, 945, 958, 960, 961, 962, 964, 969, 974, 976, 979, 984, 986, 988, 992, 997, 1008, 1011, 1023, 1024, 1026, 1053, 1056, 1057, 1058, 1059, 1061, 1062, 1063, 1064, 1066, 1067, 1069, 1072, 1073, 1074, 1075, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1102, 1116, 1128, 1134, 1139, 1140, 1145, 1158], "python_basics_python_0130_syntax_etc": [29, 90, 208, 321, 322, 323, 324, 325, 326, 335, 755, 1001, 1008, 1009, 1010, 1011, 1015, 1023, 1034, 1043, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1110, 1113, 1114, 1120, 1127], "syntax": [29, 68, 90, 144, 174, 183, 190, 191, 193, 195, 196, 197, 202, 208, 209, 214, 218, 221, 224, 230, 231, 234, 236, 240, 241, 242, 245, 248, 250, 261, 263, 270, 272, 273, 283, 284, 286, 289, 290, 311, 312, 314, 315, 319, 321, 322, 323, 324, 325, 326, 335, 482, 561, 562, 665, 682, 709, 722, 755, 890, 996, 998, 999, 1000, 1001, 1008, 1009, 1010, 1011, 1015, 1023, 1025, 1034, 1042, 1043, 1045, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1110, 1113, 1114, 1120, 1127, 1153, 1163], "python_basics_python_0250_refs_flat_deep_copi": [29, 90, 208, 321, 322, 323, 324, 325, 326, 335, 755, 1001, 1023, 1057, 1058, 1059, 1069, 1072, 1080, 1081, 1083, 1084, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1113, 1114], "mutabl": [29, 90, 183, 187, 188, 190, 192, 195, 196, 202, 208, 209, 218, 221, 222, 224, 225, 226, 227, 232, 234, 235, 238, 241, 245, 247, 248, 250, 253, 263, 265, 270, 272, 273, 277, 279, 280, 282, 283, 284, 286, 289, 290, 292, 301, 302, 304, 305, 306, 308, 311, 314, 319, 321, 322, 323, 324, 325, 326, 335, 710, 755, 1001, 1023, 1032, 1036, 1057, 1058, 1059, 1069, 1072, 1080, 1081, 1083, 1084, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1113, 1114, 1163], "python_basics_python_0200_sequential_typ": [29, 90, 208, 321, 322, 323, 324, 325, 326, 335, 755, 1001, 1023, 1056, 1057, 1058, 1059, 1069, 1072, 1073, 1075, 1079, 1080, 1081, 1082, 1083, 1084, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1110, 1113, 1114, 1120], "sequenti": [29, 63, 90, 106, 108, 187, 188, 190, 192, 195, 196, 197, 200, 208, 213, 218, 221, 224, 229, 230, 232, 234, 242, 244, 245, 248, 252, 260, 263, 270, 273, 276, 278, 280, 281, 283, 284, 289, 290, 301, 302, 305, 306, 311, 312, 314, 316, 319, 321, 322, 323, 324, 325, 326, 335, 340, 433, 508, 521, 525, 560, 595, 605, 613, 624, 628, 657, 755, 906, 908, 938, 1001, 1006, 1023, 1056, 1057, 1058, 1059, 1069, 1072, 1073, 1075, 1079, 1080, 1081, 1082, 1083, 1084, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1110, 1113, 1114, 1120, 1163], "python_basics_instal": [29, 90, 755, 1023, 1098], "python_misc_encod": [29, 90, 208, 321, 322, 323, 324, 325, 326, 335, 755, 1001, 1023, 1057, 1058, 1059, 1069, 1072, 1080, 1083, 1084, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1113, 1114], "encod": [29, 43, 90, 170, 187, 188, 190, 192, 208, 211, 218, 220, 223, 226, 227, 230, 236, 237, 239, 245, 247, 250, 264, 268, 269, 271, 284, 285, 292, 302, 303, 305, 306, 308, 313, 320, 321, 322, 323, 324, 325, 326, 340, 444, 755, 1001, 1023, 1031, 1036, 1050, 1057, 1058, 1059, 1069, 1072, 1080, 1083, 1084, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1108, 1114, 1116], "python_basics_python_0400_list": [29, 90, 755, 1023, 1098], "python_basics_python_1000_function_object": [29, 90, 755, 1023, 1098], "python_drafts_setuptool": [29, 755, 1053, 1098], "setuptool": [29, 61, 147, 260, 295, 305, 755, 1053, 1098, 1135], "python_swdev_pip": [29, 755, 1053, 1098, 1101, 1102, 1106, 1114, 1116, 1127, 1130, 1137], "python_swdev_venv": [29, 755, 1053, 1098, 1101, 1102, 1106, 1114, 1116, 1127, 1137], "python_drafts_argpars": [29, 755, 1053, 1098], "argpars": [29, 227, 248, 279, 301, 305, 321, 755, 1053, 1098], "python_drafts_matplotlib": [29, 755, 1053, 1098], "matplotlib": [29, 183, 202, 221, 222, 234, 248, 249, 251, 253, 284, 303, 308, 312, 314, 344, 755, 996, 1053, 1098, 1100, 1106], "python_misc_mqtt": [29, 755, 1098, 1114, 1116], "python_misc_import": [29, 755, 1053, 1098, 1101, 1102, 1106, 1114, 1116, 1127, 1130, 1137], "incomplet": [29, 181, 220, 226, 236, 239, 243, 453, 560, 635, 740, 755, 905, 1053, 1098, 1101, 1102, 1106, 1114, 1116, 1127, 1130, 1137, 1138], "python_misc_vscod": [29, 755, 1098, 1114], "visual": [29, 78, 104, 178, 183, 187, 188, 190, 192, 203, 212, 213, 218, 221, 234, 240, 248, 251, 263, 267, 270, 273, 277, 283, 284, 289, 290, 311, 312, 319, 335, 340, 355, 755, 841, 907, 978, 1024, 1057, 1098, 1114], "studio": [29, 104, 178, 183, 187, 188, 190, 192, 203, 212, 213, 218, 221, 234, 240, 248, 263, 267, 270, 273, 277, 283, 284, 289, 290, 311, 312, 319, 335, 340, 355, 755, 841, 1024, 1098, 1114], "python_misc_pandas_mod_col": [29, 755, 1098, 1114, 1120], "ad": [29, 32, 33, 39, 85, 115, 119, 131, 157, 161, 162, 163, 166, 171, 191, 203, 213, 269, 270, 273, 277, 302, 319, 332, 383, 402, 424, 451, 461, 465, 470, 579, 581, 582, 617, 671, 707, 745, 746, 755, 771, 906, 908, 958, 962, 963, 998, 1016, 1031, 1050, 1098, 1114, 1120, 1121, 1125, 1134], "modifi": [29, 42, 75, 88, 110, 111, 115, 119, 129, 131, 153, 158, 166, 169, 171, 191, 210, 267, 269, 270, 273, 277, 278, 279, 280, 301, 302, 319, 346, 361, 363, 369, 406, 418, 425, 442, 444, 446, 455, 465, 467, 470, 486, 487, 507, 516, 519, 520, 522, 523, 524, 536, 549, 552, 562, 569, 572, 573, 575, 578, 590, 642, 646, 648, 651, 654, 668, 682, 705, 710, 722, 733, 735, 749, 750, 753, 754, 755, 775, 790, 810, 829, 830, 842, 847, 898, 911, 915, 920, 939, 947, 953, 991, 992, 998, 1000, 1011, 1032, 1075, 1079, 1097, 1098, 1114, 1120, 1122, 1165, 1169], "column": [29, 63, 144, 153, 156, 171, 174, 220, 239, 268, 269, 270, 271, 273, 277, 302, 303, 307, 313, 319, 433, 444, 755, 842, 847, 858, 1057, 1069, 1081, 1098, 1105, 1108, 1114, 1120], "python_misc_pandas_bas": [29, 755, 1098, 1114, 1120], "datafram": [29, 269, 270, 271, 273, 277, 280, 302, 307, 319, 444, 755, 1098, 1103, 1106, 1114, 1117, 1119, 1120, 1121, 1123, 1124], "python_misc_pandas_iloc": [29, 755, 1098, 1114, 1120], "select": [29, 63, 150, 151, 153, 157, 210, 215, 223, 240, 270, 273, 302, 319, 381, 403, 755, 802, 846, 903, 908, 942, 943, 962, 965, 967, 970, 990, 1057, 1098, 1103, 1112, 1114, 1120, 1122, 1133, 1141, 1168, 1170], "row": [29, 152, 174, 190, 210, 223, 227, 229, 231, 243, 268, 269, 270, 273, 277, 290, 302, 303, 307, 313, 319, 391, 433, 755, 842, 947, 999, 1018, 1038, 1057, 1089, 1091, 1098, 1105, 1108, 1112, 1114, 1118, 1119, 1120, 1124], "iloc": [29, 270, 271, 273, 275, 277, 302, 307, 319, 444, 755, 1098, 1114, 1118, 1120, 1123], "python_misc_pandas_index": [29, 755, 1098, 1114, 1120], "python_misc_pandas_filt": [29, 755, 1098, 1114, 1120], "python_misc_pandas_loc": [29, 755, 1098, 1114, 1120], "loc": [29, 171, 264, 268, 269, 270, 271, 273, 275, 277, 302, 319, 419, 755, 947, 1010, 1098, 1114, 1117, 1118, 1119, 1120, 1121], "python_misc_pandas_add_row": [29, 755, 1098, 1114, 1120], "python_misc_ai_machine_learning_intro": [29, 755, 1098, 1101, 1102, 1106, 1107, 1114], "concept": [29, 78, 97, 98, 99, 114, 151, 161, 175, 183, 187, 189, 191, 193, 203, 254, 257, 266, 267, 270, 287, 301, 305, 337, 338, 353, 356, 403, 426, 466, 480, 508, 509, 510, 511, 512, 513, 514, 515, 518, 560, 602, 659, 700, 710, 733, 754, 755, 825, 829, 830, 831, 832, 835, 841, 843, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 882, 892, 898, 910, 911, 912, 913, 914, 921, 927, 929, 937, 939, 943, 953, 956, 959, 961, 978, 980, 981, 982, 983, 984, 985, 986, 987, 1030, 1038, 1048, 1098, 1101, 1102, 1106, 1113, 1114, 1116, 1168], "terminologi": [29, 98, 99, 114, 157, 175, 187, 222, 257, 266, 267, 270, 287, 301, 305, 393, 466, 480, 508, 509, 510, 511, 512, 513, 514, 515, 518, 560, 575, 733, 754, 755, 825, 829, 830, 831, 832, 835, 843, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 882, 891, 892, 898, 910, 911, 912, 913, 914, 921, 927, 929, 937, 939, 953, 956, 959, 960, 961, 975, 978, 980, 981, 982, 983, 984, 985, 986, 987, 1098, 1101, 1102, 1106, 1114, 1171], "python_misc_ai_k_mean": [29, 755, 1098, 1101, 1102, 1114], "python_misc_ai_linear_regress": [29, 755, 1098, 1101, 1102, 1106, 1114], "linear": [29, 172, 174, 184, 187, 189, 207, 215, 270, 301, 305, 411, 433, 585, 710, 755, 838, 907, 973, 1035, 1098, 1101, 1102, 1107, 1114], "regress": [29, 187, 239, 270, 301, 305, 755, 1098, 1101, 1102, 1107, 1114], "python_advanced_iteration_gener": [29, 755, 1001, 1098], "comprehens": [29, 63, 68, 171, 172, 184, 187, 190, 196, 210, 211, 212, 219, 224, 225, 227, 228, 229, 232, 235, 241, 244, 260, 263, 265, 272, 277, 283, 284, 289, 290, 301, 302, 304, 305, 306, 311, 312, 314, 319, 705, 755, 773, 790, 798, 1001, 1006, 1098, 1119], "python_advanced_decor": [29, 755, 1001, 1098], "decor": [29, 59, 62, 171, 183, 186, 187, 202, 211, 227, 237, 251, 306, 459, 466, 480, 494, 508, 560, 755, 997, 1001, 1012, 1019, 1020, 1022, 1043, 1098, 1100, 1133, 1156], "python_advanced_stararg": [29, 755, 1001, 1098], "keyword": [29, 39, 63, 135, 146, 184, 187, 188, 189, 190, 192, 211, 213, 227, 232, 237, 239, 260, 263, 264, 270, 273, 277, 279, 280, 283, 285, 289, 295, 298, 301, 302, 305, 306, 335, 402, 432, 575, 576, 578, 596, 647, 707, 755, 951, 997, 998, 999, 1001, 1025, 1041, 1043, 1055, 1098, 1111, 1150, 1152], "python_advanced_closur": [29, 755, 1001, 1098], "closur": [29, 59, 62, 63, 170, 183, 187, 195, 196, 211, 224, 227, 237, 270, 273, 302, 306, 704, 755, 998, 1001, 1041, 1043, 1098, 1163], "python_advanced_comprehens": [29, 755, 1001, 1098], "python_advanced_context_mgr": [29, 755, 1001, 1098], "python_advanced_except": [29, 755, 1001, 1098], "python_advanced_oo_classes_and_dict": [29, 755, 1001, 1008, 1009, 1010, 1011, 1015, 1059, 1086, 1087, 1088, 1093, 1095, 1098, 1127], "python_advanced_exec": [29, 755, 1001, 1098], "python_advanced_oo_inherit": [29, 755, 1001, 1008, 1009, 1010, 1011, 1015, 1098, 1127], "inherit": [29, 65, 69, 73, 106, 131, 168, 178, 187, 211, 224, 241, 243, 276, 277, 278, 279, 280, 284, 301, 302, 305, 306, 316, 344, 466, 480, 508, 516, 518, 558, 560, 561, 585, 634, 637, 657, 699, 740, 754, 755, 794, 834, 837, 840, 861, 863, 970, 999, 1001, 1009, 1010, 1011, 1012, 1015, 1017, 1020, 1098, 1127, 1169], "python_advanced_oo_abc": [29, 755, 1001, 1015, 1098], "abstract": [29, 78, 84, 187, 227, 259, 276, 277, 278, 279, 280, 301, 302, 305, 306, 339, 403, 442, 444, 459, 466, 470, 472, 474, 480, 482, 494, 508, 518, 560, 595, 634, 635, 712, 743, 755, 835, 839, 908, 923, 1001, 1015, 1098, 1156, 1158], "abc": [29, 32, 170, 184, 187, 189, 194, 199, 201, 207, 210, 212, 216, 220, 223, 226, 227, 231, 233, 236, 239, 243, 246, 249, 252, 260, 261, 264, 271, 277, 279, 280, 281, 285, 291, 295, 298, 301, 302, 303, 305, 306, 307, 313, 322, 330, 444, 518, 587, 608, 625, 627, 743, 755, 1001, 1015, 1031, 1098], "duck": [29, 32, 186, 187, 241, 260, 277, 279, 280, 284, 301, 302, 305, 306, 316, 459, 518, 660, 662, 700, 708, 709, 714, 720, 740, 745, 752, 754, 755, 1001, 1008, 1015, 1098, 1100, 1105, 1153], "python_advanced_oo_str_repr": [29, 755, 1001, 1015, 1098], "str": [29, 170, 173, 184, 194, 199, 201, 202, 207, 210, 212, 220, 223, 226, 231, 233, 236, 239, 243, 246, 249, 252, 260, 261, 263, 264, 268, 269, 270, 271, 273, 275, 277, 279, 280, 281, 283, 284, 285, 289, 291, 295, 296, 298, 299, 301, 302, 303, 305, 306, 307, 311, 313, 319, 320, 326, 329, 330, 331, 335, 408, 426, 444, 493, 498, 579, 580, 581, 582, 697, 709, 755, 999, 1001, 1013, 1015, 1016, 1019, 1028, 1030, 1031, 1042, 1046, 1050, 1057, 1065, 1067, 1098, 1113, 1119, 1124, 1125], "repr": [29, 201, 220, 226, 236, 239, 243, 246, 249, 260, 263, 264, 270, 273, 277, 279, 280, 283, 284, 285, 289, 295, 296, 298, 301, 302, 305, 306, 311, 319, 755, 999, 1001, 1015, 1016, 1098], "python_advanced_oo_constructor": [29, 755, 1001, 1008, 1009, 1010, 1011, 1015, 1098, 1127], "constructor": [29, 43, 53, 56, 70, 97, 110, 111, 114, 119, 122, 125, 126, 130, 131, 178, 184, 190, 210, 211, 213, 224, 229, 237, 241, 260, 263, 265, 270, 273, 276, 277, 278, 279, 280, 281, 283, 284, 289, 295, 298, 301, 302, 305, 306, 311, 316, 319, 337, 338, 339, 412, 466, 480, 506, 508, 511, 514, 518, 519, 538, 547, 553, 560, 561, 562, 568, 585, 616, 632, 633, 642, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 660, 668, 669, 670, 672, 698, 700, 716, 719, 720, 721, 725, 730, 731, 732, 733, 734, 740, 752, 754, 755, 761, 763, 794, 947, 1001, 1008, 1009, 1010, 1011, 1013, 1015, 1016, 1017, 1031, 1098, 1127, 1133, 1145, 1153], "python_advanced_oo_operator_overload": [29, 755, 1001, 1015, 1098], "overload": [29, 97, 170, 178, 187, 213, 241, 276, 277, 278, 279, 280, 301, 305, 306, 308, 315, 428, 508, 516, 525, 527, 560, 562, 583, 586, 587, 589, 595, 605, 611, 615, 616, 624, 627, 628, 642, 643, 645, 646, 648, 649, 650, 652, 653, 654, 655, 656, 657, 668, 669, 673, 700, 716, 725, 733, 752, 754, 755, 761, 1001, 1015, 1098, 1119, 1152], "python_advanced_oo_properti": [29, 755, 1001, 1015, 1098], "properti": [29, 40, 171, 187, 211, 224, 241, 243, 260, 264, 277, 279, 280, 284, 294, 295, 298, 301, 302, 305, 306, 310, 339, 448, 449, 450, 455, 458, 755, 1001, 1015, 1098, 1139, 1142], "python_advanced_multithreading_mutex": [29, 755, 1001, 1009, 1010, 1011, 1098], "race": [29, 72, 73, 74, 78, 87, 151, 169, 229, 255, 256, 258, 267, 278, 279, 280, 301, 302, 305, 315, 343, 344, 350, 419, 429, 538, 710, 726, 733, 754, 755, 779, 783, 804, 806, 811, 815, 817, 820, 823, 898, 928, 938, 939, 944, 952, 953, 959, 1001, 1009, 1011, 1098, 1158, 1168, 1169], "condit": [29, 72, 73, 74, 78, 87, 89, 130, 151, 162, 169, 210, 229, 249, 255, 256, 258, 267, 278, 279, 280, 301, 302, 305, 315, 343, 344, 350, 358, 360, 364, 387, 388, 390, 391, 393, 395, 397, 404, 410, 414, 417, 419, 421, 429, 430, 434, 439, 440, 447, 452, 453, 454, 538, 555, 644, 662, 700, 710, 720, 726, 733, 734, 752, 754, 755, 779, 783, 804, 806, 811, 815, 817, 819, 820, 823, 898, 928, 934, 938, 939, 944, 952, 953, 955, 959, 1001, 1009, 1011, 1034, 1035, 1050, 1098, 1104, 1119, 1158, 1168, 1169], "mutex": [29, 72, 73, 74, 76, 78, 87, 89, 169, 198, 229, 254, 255, 256, 258, 267, 278, 279, 280, 301, 302, 305, 315, 343, 344, 350, 538, 727, 729, 731, 732, 733, 754, 755, 779, 783, 800, 804, 805, 806, 811, 817, 820, 821, 823, 898, 939, 944, 949, 952, 953, 1001, 1009, 1011, 1098, 1153, 1158, 1169], "python_advanced_multithreading_bas": [29, 755, 1001, 1008, 1009, 1010, 1011, 1098], "python_advanced_multithreading_exam_quest": [29, 755, 1001, 1009, 1011, 1098], "exam": [29, 96, 97, 106, 212, 228, 257, 266, 287, 337, 349, 755, 832, 898, 939, 959, 1001, 1009, 1098], "python_db_dbapi2": [29, 755, 1056, 1058, 1059, 1098, 1110], "python_db_postgr": [29, 755, 1098, 1110], "postgresql": [29, 755, 1098, 1109, 1110], "python_swdev_unittest": [29, 755, 1098, 1127], "unittest": [29, 65, 114, 147, 148, 164, 167, 178, 180, 183, 186, 187, 197, 200, 211, 213, 218, 260, 269, 280, 325, 335, 343, 344, 353, 354, 753, 755, 1042, 1098, 1100, 1127, 1138], "python_swdev_pytest_intro": [29, 755, 1098, 1127, 1132], "By": [29, 51, 53, 151, 153, 158, 162, 166, 178, 184, 220, 226, 227, 229, 236, 237, 239, 240, 244, 248, 251, 255, 256, 258, 260, 269, 277, 279, 280, 284, 295, 298, 301, 302, 305, 315, 316, 343, 375, 402, 425, 428, 645, 646, 648, 649, 652, 654, 656, 657, 700, 701, 752, 754, 755, 771, 844, 893, 906, 942, 961, 977, 988, 1012, 1019, 1096, 1097, 1098, 1107, 1127, 1132], "As": [30, 46, 68, 80, 114, 148, 151, 153, 158, 162, 168, 180, 183, 187, 218, 231, 293, 309, 338, 355, 393, 424, 427, 503, 505, 519, 570, 575, 577, 578, 655, 775, 802, 828, 837, 906, 907, 915, 917, 934, 962, 970, 992, 998, 1019, 1024, 1028, 1085, 1089, 1102, 1143, 1155], "follow": [30, 39, 43, 78, 106, 107, 109, 117, 120, 141, 150, 151, 153, 154, 155, 156, 158, 166, 171, 175, 179, 180, 183, 187, 191, 192, 203, 220, 226, 236, 237, 239, 243, 252, 256, 258, 275, 276, 278, 284, 285, 332, 354, 356, 359, 376, 377, 390, 393, 420, 422, 424, 426, 431, 432, 435, 443, 445, 450, 460, 461, 464, 465, 481, 482, 484, 485, 486, 487, 488, 506, 509, 510, 513, 514, 516, 517, 518, 519, 520, 532, 538, 564, 579, 580, 581, 582, 635, 642, 644, 649, 651, 652, 655, 656, 659, 677, 710, 749, 750, 753, 763, 765, 771, 802, 828, 829, 830, 835, 837, 839, 841, 853, 855, 856, 862, 866, 874, 875, 899, 906, 907, 908, 929, 932, 933, 934, 935, 944, 961, 970, 974, 976, 982, 984, 986, 988, 990, 991, 992, 995, 999, 1000, 1004, 1011, 1030, 1044, 1052, 1057, 1060, 1065, 1069, 1071, 1075, 1078, 1079, 1082, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1122, 1126, 1135, 1156], "version": [30, 61, 150, 154, 156, 157, 158, 161, 164, 166, 167, 179, 180, 181, 183, 190, 199, 201, 210, 211, 220, 224, 226, 230, 236, 239, 246, 251, 254, 263, 269, 275, 276, 277, 278, 285, 328, 343, 403, 442, 443, 445, 446, 448, 455, 458, 555, 652, 654, 655, 702, 706, 718, 750, 775, 777, 794, 802, 803, 818, 862, 906, 907, 977, 978, 988, 990, 991, 993, 1024, 1025, 1031, 1055, 1128, 1135, 1136, 1142, 1148], "control": [30, 45, 59, 62, 63, 86, 115, 117, 123, 124, 130, 131, 150, 157, 164, 166, 169, 180, 183, 188, 190, 191, 192, 193, 202, 203, 218, 221, 234, 239, 245, 259, 316, 336, 337, 338, 340, 343, 381, 395, 396, 442, 445, 459, 466, 509, 510, 513, 519, 561, 755, 775, 800, 802, 807, 862, 898, 900, 901, 905, 906, 908, 924, 973, 978, 997, 1000, 1008, 1020, 1033, 1035, 1119, 1134, 1136, 1154, 1164, 1170], "done": [30, 42, 46, 47, 50, 53, 55, 56, 57, 63, 75, 84, 87, 91, 102, 110, 111, 116, 118, 121, 124, 126, 131, 138, 143, 147, 148, 150, 152, 153, 155, 156, 157, 158, 161, 166, 171, 172, 175, 179, 183, 190, 212, 227, 231, 237, 239, 255, 256, 258, 270, 273, 280, 285, 303, 321, 327, 338, 344, 359, 360, 408, 415, 416, 418, 420, 431, 442, 444, 445, 446, 450, 484, 503, 517, 520, 562, 574, 575, 603, 617, 625, 630, 654, 655, 657, 660, 667, 688, 691, 695, 696, 706, 712, 720, 724, 732, 734, 755, 761, 771, 773, 792, 794, 802, 804, 829, 830, 834, 835, 837, 838, 846, 858, 881, 899, 900, 902, 907, 908, 924, 925, 926, 936, 950, 958, 964, 973, 977, 978, 986, 990, 992, 999, 1002, 1003, 1004, 1022, 1031, 1042, 1050, 1051, 1052, 1055, 1058, 1079, 1112, 1133, 1158], "No": [30, 43, 63, 80, 141, 147, 151, 153, 157, 158, 166, 193, 210, 226, 227, 243, 269, 346, 366, 368, 382, 398, 402, 409, 420, 425, 437, 442, 446, 447, 450, 452, 455, 456, 457, 458, 470, 516, 555, 565, 566, 578, 585, 595, 610, 613, 631, 649, 659, 661, 664, 668, 671, 675, 719, 720, 727, 734, 780, 782, 784, 786, 800, 802, 807, 819, 838, 844, 846, 849, 850, 865, 873, 881, 884, 900, 902, 908, 922, 929, 934, 935, 944, 945, 947, 949, 958, 962, 970, 973, 979, 993, 995, 1012, 1019, 1025, 1028, 1031, 1032, 1040, 1044, 1048, 1050, 1107, 1108, 1112, 1113, 1122, 1125, 1133, 1135, 1141], "proprietari": 30, "accept": [30, 32, 60, 130, 153, 179, 275, 442, 444, 710, 720, 722, 770, 902, 928, 998, 1022, 1168, 1170], "proven": [30, 431, 435, 579, 581, 582, 671], "difficult": [30, 68, 210, 387, 405, 555, 788, 800, 962], "ffmpeg": 31, "video4linux2": 31, "640x480": 31, "dev": [31, 63, 100, 122, 151, 152, 162, 168, 169, 179, 180, 223, 229, 239, 246, 249, 264, 267, 271, 276, 278, 281, 285, 307, 313, 341, 431, 450, 514, 755, 757, 758, 760, 766, 773, 782, 796, 798, 802, 815, 832, 833, 842, 844, 845, 862, 876, 879, 882, 884, 898, 901, 906, 907, 908, 931, 938, 958, 961, 964, 966, 969, 970, 990, 1140, 1142, 1158], "video0": 31, "500k": 31, "matroska": 31, "mk": [31, 32], "disabl": [31, 151, 154, 156, 162, 220, 226, 236, 239, 403, 794, 800, 805, 807, 962, 1128, 1148], "audio": [31, 134, 139, 153, 158, 755, 1157], "appar": [31, 57, 61, 63, 65, 66, 153, 155, 156, 158, 162, 212, 223, 275, 447, 461, 632, 677, 688, 720, 770, 906, 964, 1113], "next": [31, 39, 42, 63, 98, 114, 147, 152, 153, 158, 166, 171, 173, 184, 189, 191, 199, 203, 210, 216, 220, 223, 224, 226, 229, 231, 233, 236, 239, 243, 249, 255, 256, 261, 264, 271, 281, 285, 291, 303, 307, 313, 320, 327, 341, 375, 393, 395, 416, 444, 482, 486, 500, 510, 519, 555, 592, 668, 681, 688, 690, 712, 792, 802, 821, 846, 862, 894, 906, 908, 928, 938, 958, 977, 1003, 1004, 1007, 1035, 1038, 1105, 1141], "mention": [31, 151, 152, 179, 183, 187, 213, 237, 279, 280, 301, 302, 306, 505, 519, 703, 814, 907, 995, 1100, 1116], "frame": [31, 145, 156, 168, 190, 220, 226, 236, 239, 269, 275, 307, 415, 428, 432, 482, 673, 900, 901, 1118], "size": [31, 100, 109, 119, 150, 152, 153, 170, 172, 178, 220, 221, 226, 229, 234, 236, 239, 243, 248, 251, 267, 284, 285, 290, 335, 366, 383, 388, 397, 404, 408, 410, 414, 415, 417, 420, 421, 423, 428, 429, 430, 432, 434, 439, 440, 462, 463, 469, 508, 520, 521, 525, 526, 527, 528, 529, 533, 534, 537, 543, 555, 560, 562, 566, 570, 575, 579, 581, 582, 595, 596, 597, 598, 603, 608, 609, 613, 617, 619, 620, 625, 627, 654, 656, 662, 665, 666, 671, 682, 683, 684, 686, 700, 710, 719, 723, 724, 732, 739, 752, 753, 754, 755, 761, 773, 788, 798, 818, 827, 832, 833, 839, 846, 876, 879, 882, 884, 890, 894, 898, 902, 907, 928, 930, 969, 970, 976, 993, 996, 1100, 1113], "input": [31, 40, 68, 86, 122, 171, 172, 173, 174, 184, 187, 190, 192, 214, 220, 226, 229, 236, 239, 242, 243, 264, 267, 335, 340, 364, 365, 371, 395, 403, 426, 431, 443, 521, 522, 523, 524, 536, 575, 625, 644, 667, 753, 773, 828, 846, 877, 895, 899, 909, 925, 928, 940, 942, 943, 950, 1006, 1021, 1050, 1062, 1066, 1067, 1079, 1082, 1085, 1091, 1094, 1102, 1103, 1106, 1107, 1164], "rate": [31, 161, 183, 243, 302, 424, 821, 960], "hz": [31, 812], "bitrat": [31, 901], "If": [31, 43, 45, 47, 53, 55, 56, 57, 89, 112, 114, 150, 151, 152, 153, 156, 157, 158, 166, 167, 175, 183, 220, 226, 233, 236, 239, 243, 251, 256, 258, 267, 273, 285, 302, 335, 340, 381, 390, 420, 432, 452, 454, 460, 510, 516, 517, 532, 562, 567, 631, 638, 654, 655, 668, 673, 719, 723, 724, 732, 734, 755, 775, 780, 794, 802, 807, 819, 828, 837, 841, 844, 862, 863, 871, 874, 898, 899, 906, 907, 908, 909, 915, 929, 937, 939, 947, 952, 956, 969, 991, 992, 1004, 1012, 1014, 1024, 1031, 1039, 1041, 1052, 1077, 1105, 1108, 1122, 1134, 1153], "instead": [31, 58, 63, 119, 131, 144, 150, 151, 152, 153, 171, 172, 180, 212, 229, 231, 239, 269, 285, 320, 341, 346, 383, 432, 460, 503, 506, 520, 582, 598, 654, 656, 673, 677, 719, 720, 734, 770, 771, 780, 833, 862, 884, 907, 949, 969, 976, 978, 988, 994, 1025, 1071, 1083, 1095, 1119, 1140], "stdout": [31, 131, 170, 203, 207, 211, 220, 226, 236, 239, 249, 257, 264, 266, 267, 287, 288, 302, 320, 328, 330, 335, 339, 341, 631, 755, 826, 828, 832, 843, 844, 887, 890, 893, 898, 928, 973, 1000, 1050, 1052, 1057, 1062, 1066, 1069, 1084, 1116, 1125, 1159], "hold": [31, 119, 150, 152, 171, 187, 189, 190, 210, 237, 358, 370, 390, 462, 592, 647, 654, 705, 710, 724, 732, 736, 766, 800, 804, 805, 899, 906, 962, 1000, 1013, 1035, 1083, 1105], "mplayer": [31, 281], "stdin": [31, 42, 203, 211, 220, 226, 229, 236, 239, 328, 335, 367, 373, 388, 397, 404, 410, 414, 417, 421, 430, 434, 439, 440, 662, 700, 752, 754, 755, 828, 844, 845, 877, 928, 1048, 1050, 1051, 1062, 1113, 1125, 1159], "unicod": [32, 34, 35, 36, 38, 211, 220, 224, 226, 236, 239, 261, 285, 370, 1030, 1036, 1050, 1113], "sphinxemojicod": 32, "pip": [32, 61, 135, 147, 183, 187, 208, 237, 251, 928, 1024, 1054, 1055, 1087, 1100, 1116, 1127, 1128, 1129, 1133, 1135, 1136], "conf": [32, 65, 152, 154, 156, 455, 802, 908, 1000], "grimac": 32, "astonish": 32, "rolling_ey": 32, "face_with_raised_eyebrow": 32, "flush": [32, 264, 519, 761, 773], "innoc": [32, 157, 425, 726, 841, 975, 1019], "kiss": 32, "kissing_heart": 32, "middle_fing": 32, "metal": [32, 78, 80, 87, 89, 151, 353, 899, 907, 908], "muscl": 32, "nerd": [32, 862], "ok_hand": 32, "penguin": 32, "pig": [32, 420], "point_up": 32, "sleep": [32, 63, 151, 226, 255, 256, 279, 280, 301, 321, 393, 402, 732, 755, 779, 782, 784, 794, 804, 807, 811, 817, 819, 820, 823, 898, 899, 907, 936, 940, 943, 958, 960, 961, 964, 969, 1008], "sunglass": 32, "think": [32, 42, 43, 69, 151, 152, 166, 189, 213, 315, 403, 424, 425, 428, 514, 518, 565, 585, 660, 668, 670, 719, 829, 830, 833, 923, 969, 1031], "thumbsdown": 32, "thumbsup": 32, "wink": 32, "1_tone1": 32, "1_tone2": 32, "1_tone3": 32, "1_tone4": 32, "1_tone5": 32, "1st_place_med": 32, "2nd_place_med": 32, "3rd_place_med": 32, "8ball": 32, "abacu": 32, "abcd": [32, 201, 207, 223, 243, 285], "ac": [32, 161, 199], "accordion": 32, "adhesive_bandag": 32, "admission_ticket": 32, "adult": [32, 1020], "adult_dark_skin_ton": 32, "adult_light_skin_ton": 32, "adult_medium_dark_skin_ton": 32, "adult_medium_light_skin_ton": 32, "adult_medium_skin_ton": 32, "adult_tone1": 32, "adult_tone2": 32, "adult_tone3": 32, "adult_tone4": 32, "adult_tone5": 32, "ae": [32, 161], "aerial_tramwai": 32, "af": [32, 161], "afghanistan": 32, "ai": [32, 187, 1107, 1114], "airplan": [32, 899], "airplane_arriv": 32, "airplane_departur": 32, "airplane_smal": 32, "aland_island": 32, "alarm_clock": 32, "albania": 32, "alemb": 32, "algeria": 32, "alien": 32, "ambul": 32, "american_samoa": 32, "amphora": 32, "anatomical_heart": 32, "anchor": 32, "andorra": 32, "angel": [32, 275], "angel_tone1": 32, "angel_tone2": 32, "angel_tone3": 32, "angel_tone4": 32, "angel_tone5": 32, "anger": 32, "anger_right": 32, "angola": 32, "angri": 32, "anguilla": 32, "anguish": 32, "ant": 32, "antarctica": 32, "antigua_barbuda": 32, "ao": 32, "appl": [32, 976, 1042], "aq": 32, "aquariu": 32, "archeri": 32, "argentina": 32, "ari": [32, 35, 38], "armenia": 32, "arrow_backward": 32, "arrow_double_down": 32, "arrow_double_up": 32, "arrow_down": 32, "arrow_down_smal": 32, "arrow_forward": 32, "arrow_heading_down": 32, "arrow_heading_up": 32, "arrow_left": 32, "arrow_lower_left": 32, "arrow_lower_right": 32, "arrow_right": 32, "arrow_right_hook": 32, "arrow_up": 32, "arrow_up_down": 32, "arrow_up_smal": 32, "arrow_upper_left": 32, "arrow_upper_right": 32, "arrows_clockwis": 32, "arrows_counterclockwis": 32, "articulated_lorri": 32, "artificial_satellit": 32, "artist": 32, "artist_dark_skin_ton": 32, "artist_light_skin_ton": 32, "artist_medium_dark_skin_ton": 32, "artist_medium_light_skin_ton": 32, "artist_medium_skin_ton": 32, "artist_tone1": 32, "artist_tone2": 32, "artist_tone3": 32, "artist_tone4": 32, "artist_tone5": 32, "aruba": 32, "ascens": 32, "astronaut": 32, "astronaut_dark_skin_ton": 32, "astronaut_light_skin_ton": 32, "astronaut_medium_dark_skin_ton": 32, "astronaut_medium_light_skin_ton": 32, "astronaut_medium_skin_ton": 32, "astronaut_tone1": 32, "astronaut_tone2": 32, "astronaut_tone3": 32, "astronaut_tone4": 32, "astronaut_tone5": 32, "athletic_sho": 32, "atm": 32, "atom": [32, 65, 76, 88, 174, 229, 254, 255, 256, 258, 267, 278, 315, 316, 538, 670, 719, 732, 733, 754, 755, 764, 769, 772, 774, 779, 782, 783, 785, 788, 789, 793, 794, 795, 797, 799, 804, 807, 808, 811, 812, 813, 817, 820, 822, 823, 898, 938, 948, 949, 1011, 1153], "atom_symbol": 32, "australia": 32, "austria": [32, 151, 353], "auto_rickshaw": 32, "avocado": 32, "aw": 32, "ax": [32, 172, 996], "az": 32, "azerbaijan": 32, "ba": [32, 161], "babi": 32, "baby_bottl": 32, "baby_chick": 32, "baby_symbol": 32, "baby_tone1": 32, "baby_tone2": 32, "baby_tone3": 32, "baby_tone4": 32, "baby_tone5": 32, "back_of_hand": 32, "back_of_hand_tone1": 32, "back_of_hand_tone2": 32, "back_of_hand_tone3": 32, "back_of_hand_tone4": 32, "back_of_hand_tone5": 32, "bacon": 32, "badger": 32, "badminton": 32, "bagel": 32, "baggage_claim": 32, "baguette_bread": 32, "bahama": 32, "bahrain": 32, "balance_scal": 32, "bald": 32, "ballet_sho": 32, "balloon": 32, "ballot_box": 32, "ballot_box_with_ballot": 32, "ballot_box_with_check": 32, "bamboo": 32, "banana": 32, "bangbang": 32, "bangladesh": 32, "banjo": 32, "bank": [32, 444], "bar_chart": 32, "barbado": 32, "barber": 32, "basebal": 32, "basket": 32, "basketbal": 32, "basketball_man": 32, "basketball_play": 32, "basketball_player_tone1": 32, "basketball_player_tone2": 32, "basketball_player_tone3": 32, "basketball_player_tone4": 32, "basketball_player_tone5": 32, "basketball_woman": 32, "bat": [32, 1135], "bath": 32, "bath_tone1": 32, "bath_tone2": 32, "bath_tone3": 32, "bath_tone4": 32, "bath_tone5": 32, "bathtub": 32, "batteri": [32, 89, 183, 335, 899, 1023, 1024, 1025, 1051, 1129], "bb": [32, 143, 154, 906], "bd": [32, 161], "beach": 32, "beach_umbrella": 32, "beach_with_umbrella": 32, "bear": [32, 947, 1123], "bearded_person": 32, "bearded_person_dark_skin_ton": 32, "bearded_person_light_skin_ton": 32, "bearded_person_medium_dark_skin_ton": 32, "bearded_person_medium_light_skin_ton": 32, "bearded_person_medium_skin_ton": 32, "bearded_person_tone1": 32, "bearded_person_tone2": 32, "bearded_person_tone3": 32, "bearded_person_tone4": 32, "bearded_person_tone5": 32, "beaver": 32, "bed": 32, "bee": 32, "beer": [32, 422], "beetl": 32, "belaru": 32, "belgium": 32, "beliz": 32, "bell": [32, 1019, 1022], "bell_pepp": 32, "bellhop": 32, "bellhop_bel": 32, "benin": 32, "bento": 32, "bermuda": 32, "beverage_box": 32, "bf": [32, 161], "bg": [32, 444], "bh": 32, "bhutan": 32, "bicyclist": 32, "bicyclist_tone1": 32, "bicyclist_tone2": 32, "bicyclist_tone3": 32, "bicyclist_tone4": 32, "bicyclist_tone5": 32, "bike": 32, "biking_man": 32, "biking_woman": 32, "bikini": 32, "billed_cap": 32, "biohazard": 32, "biohazard_sign": 32, "bird": 32, "birthdai": [32, 192, 650], "bison": [32, 162, 782, 906, 990], "bj": 32, "bl": 32, "black_cat": 32, "black_circl": 32, "black_flag": 32, "black_heart": 32, "black_jok": 32, "black_large_squar": 32, "black_medium_small_squar": 32, "black_medium_squar": 32, "black_nib": 32, "black_small_squar": 32, "black_square_button": 32, "blond": 32, "haired_man": 32, "haired_man_dark_skin_ton": 32, "haired_man_light_skin_ton": 32, "haired_man_medium_dark_skin_ton": 32, "haired_man_medium_light_skin_ton": 32, "haired_man_medium_skin_ton": 32, "haired_man_tone1": 32, "haired_man_tone2": 32, "haired_man_tone3": 32, "haired_man_tone4": 32, "haired_man_tone5": 32, "haired_woman": 32, "haired_woman_dark_skin_ton": 32, "haired_woman_light_skin_ton": 32, "haired_woman_medium_dark_skin_ton": 32, "haired_woman_medium_light_skin_ton": 32, "haired_woman_medium_skin_ton": 32, "haired_woman_tone1": 32, "haired_woman_tone2": 32, "haired_woman_tone3": 32, "haired_woman_tone4": 32, "haired_woman_tone5": 32, "blond_haired_person": 32, "blond_haired_person_tone1": 32, "blond_haired_person_tone2": 32, "blond_haired_person_tone3": 32, "blond_haired_person_tone4": 32, "blond_haired_person_tone5": 32, "blonde_man": 32, "blonde_woman": 32, "blossom": 32, "blowfish": 32, "blue_book": 32, "blue_car": 32, "blue_circl": 32, "blue_heart": 32, "blue_squar": 32, "blueberri": 32, "blush": 32, "bm": 32, "bn": 32, "bo": [32, 1013], "boar": 32, "boat": 32, "bolivia": 32, "bomb": 32, "bone": 32, "bookmark": [32, 1112], "bookmark_tab": 32, "boom": [32, 688, 705], "boomerang": 32, "boot": [32, 141, 152, 154, 158, 170, 271, 438, 735, 775, 780, 798, 802, 812, 840, 906, 907, 908, 1148], "bosnia_herzegovina": 32, "botswana": 32, "bottle_with_popping_cork": 32, "bouquet": 32, "bouvet_island": 32, "bow": 32, "bow_and_arrow": 32, "bow_tone1": 32, "bow_tone2": 32, "bow_tone3": 32, "bow_tone4": 32, "bow_tone5": 32, "bowing_man": 32, "bowing_woman": 32, "bowl_with_spoon": 32, "bowl": 32, "boxing_glov": 32, "boi": 32, "boy_tone1": 32, "boy_tone2": 32, "boy_tone3": 32, "boy_tone4": 32, "boy_tone5": 32, "bq": 32, "br": [32, 249, 307], "brain": [32, 59, 62], "brazil": 32, "bread": 32, "breast_feed": 32, "breast_feeding_dark_skin_ton": 32, "breast_feeding_light_skin_ton": 32, "breast_feeding_medium_dark_skin_ton": 32, "breast_feeding_medium_light_skin_ton": 32, "breast_feeding_medium_skin_ton": 32, "breast_feeding_tone1": 32, "breast_feeding_tone2": 32, "breast_feeding_tone3": 32, "breast_feeding_tone4": 32, "breast_feeding_tone5": 32, "brick": [32, 150, 163], "bride_with_veil": 32, "bride_with_veil_tone1": 32, "bride_with_veil_tone2": 32, "bride_with_veil_tone3": 32, "bride_with_veil_tone4": 32, "bride_with_veil_tone5": 32, "bridge_at_night": 32, "briefcas": 32, "brief": [32, 436, 862], "british_indian_ocean_territori": 32, "british_virgin_island": 32, "broccoli": 32, "broken_heart": 32, "broom": 32, "brown_circl": 32, "brown_heart": 32, "brown_squar": 32, "brunei": 32, "bt": 32, "bubble_tea": 32, "bucket": [32, 773], "bug": [32, 46, 55, 56, 107, 152, 153, 154, 194, 213, 229, 240, 344, 400, 402, 403, 418, 423, 425, 429, 442, 447, 452, 543, 545, 547, 555, 561, 562, 565, 570, 632, 635, 688, 698, 717, 734, 755, 792, 920, 951, 960, 961, 993, 1013, 1014, 1028, 1031], "building_construct": 32, "bulb": 32, "bulgaria": 32, "bullettrain_front": 32, "bullettrain_sid": 32, "burkina_faso": 32, "burrito": 32, "burundi": 32, "bu": [32, 81, 115, 198, 223, 239, 246, 248, 249, 264, 267, 271, 281, 285, 307, 313, 460, 474, 489, 503, 519, 520, 755, 773, 798, 862, 898, 900, 905, 906, 907, 936, 942, 998, 1099, 1157, 1164, 1168, 1170], "business_suit_levit": 32, "busstop": 32, "bust_in_silhouett": 32, "busts_in_silhouett": 32, "butter": 32, "butterfli": 32, "bv": 32, "bw": 32, "bz": 32, "cactu": 32, "cake": 32, "calendar": 32, "calendar_spir": 32, "call_m": 32, "call_me_hand": 32, "call_me_hand_tone1": 32, "call_me_hand_tone2": 32, "call_me_hand_tone3": 32, "call_me_hand_tone4": 32, "call_me_hand_tone5": 32, "call_me_tone1": 32, "call_me_tone2": 32, "call_me_tone3": 32, "call_me_tone4": 32, "call_me_tone5": 32, "cambodia": 32, "camel": 32, "camera": [32, 33, 131, 156, 158, 907], "camera_flash": 32, "camera_with_flash": 32, "cameroon": 32, "camp": 32, "canada": 32, "canary_island": 32, "cancer": 32, "candl": 32, "candi": 32, "canned_food": 32, "cano": 32, "cape_verd": 32, "capital_abcd": 32, "capricorn": 32, "car": [32, 269, 444, 899], "card_box": 32, "card_file_box": 32, "card_index": 32, "card_index_divid": 32, "caribbean_netherland": 32, "carousel_hors": 32, "carpentry_saw": 32, "carrot": 32, "cartwheel": 32, "cartwheel_tone1": 32, "cartwheel_tone2": 32, "cartwheel_tone3": 32, "cartwheel_tone4": 32, "cartwheel_tone5": 32, "cat2": 32, "cat": [32, 153, 157, 191, 203, 257, 266, 267, 269, 287, 288, 320, 321, 420, 444, 519, 755, 760, 765, 782, 802, 818, 829, 830, 832, 833, 842, 844, 846, 874, 881, 889, 890, 892, 893, 895, 898, 899, 906, 907, 908, 909, 933, 935, 936, 940, 964, 970, 973, 1159], "cayman_island": 32, "cd": [32, 61, 137, 154, 155, 157, 158, 161, 162, 166, 179, 180, 213, 223, 243, 251, 256, 258, 321, 335, 340, 445, 517, 520, 580, 775, 777, 802, 803, 826, 828, 829, 830, 833, 839, 847, 852, 854, 862, 886, 899, 906, 907, 915, 928, 977, 978, 990, 991, 1055], "central_african_republ": 32, "ceuta_melilla": 32, "cf": [32, 313, 828, 945], "cg": 32, "ch": 32, "chad": 32, "chain": [32, 144, 150, 161, 171, 233, 250, 422, 807, 955], "chair": [32, 183], "champagn": 32, "champagne_glass": 32, "chart": [32, 197, 212, 221, 234, 248, 251, 284, 290, 1100, 1107], "chart_with_downwards_trend": 32, "chart_with_upwards_trend": 32, "checkered_flag": 32, "chees": 32, "cheese_wedg": 32, "cherri": 32, "cherry_blossom": 32, "chess_pawn": 32, "chestnut": 32, "chicken": 32, "child": [32, 99, 168, 257, 266, 267, 287, 288, 753, 755, 832, 834, 836, 837, 848, 851, 852, 853, 854, 855, 856, 857, 866, 867, 868, 871, 873, 874, 898, 910, 911, 912, 913, 914, 939, 945, 952, 957, 974, 986, 987, 1017, 1125], "child_dark_skin_ton": 32, "child_light_skin_ton": 32, "child_medium_dark_skin_ton": 32, "child_medium_light_skin_ton": 32, "child_medium_skin_ton": 32, "child_tone1": 32, "child_tone2": 32, "child_tone3": 32, "child_tone4": 32, "child_tone5": 32, "children_cross": 32, "chile": 32, "china": 32, "chipmunk": 32, "chocolate_bar": 32, "chopstick": 32, "christmas_island": 32, "christmas_tre": 32, "church": 32, "ci": [32, 1133], "cinema": 32, "circus_t": 32, "city_dusk": 32, "city_sunris": 32, "city_sunset": 32, "cityscap": 32, "ck": 32, "cl": [32, 239, 264, 1016, 1017], "clamp": 32, "clap": 32, "clap_tone1": 32, "clap_tone2": 32, "clap_tone3": 32, "clap_tone4": 32, "clap_tone5": 32, "clapper": 32, "classical_build": 32, "clinking_glass": 32, "clipboard": 32, "clipperton_island": 32, "clock1030": 32, "clock10": 32, "clock1130": 32, "clock11": 32, "clock1230": 32, "clock12": 32, "clock130": 32, "clock1": 32, "clock230": 32, "clock2": 32, "clock330": 32, "clock3": 32, "clock430": 32, "clock4": 32, "clock530": 32, "clock5": 32, "clock630": 32, "clock6": 32, "clock730": 32, "clock7": 32, "clock830": 32, "clock8": 32, "clock930": 32, "clock9": 32, "clock": [32, 226, 227, 431, 906], "closed_book": 32, "closed_lock_with_kei": 32, "closed_umbrella": 32, "cloud": [32, 101, 158, 203, 227, 334, 335, 338, 663, 665, 915, 1104, 1105, 1128], "cloud_lightn": 32, "cloud_rain": 32, "cloud_snow": 32, "cloud_tornado": 32, "cloud_with_lightn": 32, "cloud_with_lightning_and_rain": 32, "cloud_with_rain": 32, "cloud_with_snow": 32, "cloud_with_tornado": 32, "clown": 32, "clown_fac": 32, "club": [32, 38], "cm": 32, "cn": [32, 161], "coat": 32, "cockroach": 32, "cocktail": 32, "coconut": [32, 275], "cocos_island": 32, "coffe": [32, 154, 635, 906], "coffin": 32, "coin": 32, "cold_fac": 32, "cold_sweat": 32, "colombia": 32, "comet": 32, "comoro": 32, "compass": 32, "compress": [32, 112, 152, 166, 257, 266, 267, 287, 755, 826, 832, 898, 986, 987, 988, 991], "computer_mous": 32, "confetti_bal": 32, "confound": 32, "confus": [32, 151, 155, 183, 212, 377, 385, 431, 578, 588, 664, 675, 1042, 1126], "congo": 32, "congo_brazzavil": 32, "congo_kinshasa": 32, "congratul": 32, "construct": [32, 183, 189, 270, 273, 380, 393, 403, 432, 442, 546, 597, 616, 617, 673, 721, 1014, 1021, 1038, 1049], "construction_sit": 32, "construction_work": 32, "construction_worker_man": 32, "construction_worker_tone1": 32, "construction_worker_tone2": 32, "construction_worker_tone3": 32, "construction_worker_tone4": 32, "construction_worker_tone5": 32, "construction_worker_woman": 32, "control_knob": 32, "convenience_stor": 32, "cook": [32, 267], "cook_dark_skin_ton": 32, "cook_island": 32, "cook_light_skin_ton": 32, "cook_medium_dark_skin_ton": 32, "cook_medium_light_skin_ton": 32, "cook_medium_skin_ton": 32, "cook_tone1": 32, "cook_tone2": 32, "cook_tone3": 32, "cook_tone4": 32, "cook_tone5": 32, "cooki": [32, 784, 798], "cool": [32, 65, 137, 152, 153, 156, 158, 166, 171, 172, 183, 184, 187, 202, 267, 280, 353, 438, 444, 472, 481, 618, 660, 661, 677, 680, 699, 709, 712, 734, 802, 858, 908, 993, 997, 1000, 1017, 1036, 1050, 1100, 1107, 1112, 1153], "cop": 32, "cop_tone1": 32, "cop_tone2": 32, "cop_tone3": 32, "cop_tone4": 32, "cop_tone5": 32, "copyright": [32, 36, 162, 203, 220, 226, 236, 239, 264, 328, 332, 570, 719, 1026], "corn": 32, "costa_rica": 32, "cote_divoir": 32, "couch": 32, "couch_and_lamp": 32, "coupl": [32, 43, 131, 150, 151, 152, 153, 158, 171, 183, 187, 356, 393, 427, 432, 708, 895, 930, 949], "couple_mm": 32, "couple_with_heart": 32, "couple_with_heart_dark_skin_ton": 32, "couple_with_heart_light_skin_ton": 32, "couple_with_heart_man_man": 32, "couple_with_heart_man_man_dark_skin_ton": 32, "couple_with_heart_man_man_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_man_man_dark_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_man_man_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_man_man_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_man_man_light_skin_ton": 32, "couple_with_heart_man_man_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_man_man_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_man_man_light_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_man_man_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_man_man_medium_dark_skin_ton": 32, "couple_with_heart_man_man_medium_dark_skin_tone_dark_skin_ton": 32, "couple_with_heart_man_man_medium_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_man_man_medium_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_man_man_medium_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_man_man_medium_light_skin_ton": 32, "couple_with_heart_man_man_medium_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_man_man_medium_light_skin_tone_light_skin_ton": 32, "couple_with_heart_man_man_medium_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_man_man_medium_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_man_man_medium_skin_ton": 32, "couple_with_heart_man_man_medium_skin_tone_dark_skin_ton": 32, "couple_with_heart_man_man_medium_skin_tone_light_skin_ton": 32, "couple_with_heart_man_man_medium_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_man_man_medium_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_man_man_tone1": 32, "couple_with_heart_man_man_tone1_tone2": 32, "couple_with_heart_man_man_tone1_tone3": 32, "couple_with_heart_man_man_tone1_tone4": 32, "couple_with_heart_man_man_tone1_tone5": 32, "couple_with_heart_man_man_tone2": 32, "couple_with_heart_man_man_tone2_tone1": 32, "couple_with_heart_man_man_tone2_tone3": 32, "couple_with_heart_man_man_tone2_tone4": 32, "couple_with_heart_man_man_tone2_tone5": 32, "couple_with_heart_man_man_tone3": 32, "couple_with_heart_man_man_tone3_tone1": 32, "couple_with_heart_man_man_tone3_tone2": 32, "couple_with_heart_man_man_tone3_tone4": 32, "couple_with_heart_man_man_tone3_tone5": 32, "couple_with_heart_man_man_tone4": 32, "couple_with_heart_man_man_tone4_tone1": 32, "couple_with_heart_man_man_tone4_tone2": 32, "couple_with_heart_man_man_tone4_tone3": 32, "couple_with_heart_man_man_tone4_tone5": 32, "couple_with_heart_man_man_tone5": 32, "couple_with_heart_man_man_tone5_tone1": 32, "couple_with_heart_man_man_tone5_tone2": 32, "couple_with_heart_man_man_tone5_tone3": 32, "couple_with_heart_man_man_tone5_tone4": 32, "couple_with_heart_medium_dark_skin_ton": 32, "couple_with_heart_medium_light_skin_ton": 32, "couple_with_heart_medium_skin_ton": 32, "couple_with_heart_mm": 32, "couple_with_heart_person_person_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_person_person_dark_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_person_person_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_person_person_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_person_person_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_person_person_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_person_person_light_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_person_person_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_person_person_medium_dark_skin_tone_dark_skin_ton": 32, "couple_with_heart_person_person_medium_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_person_person_medium_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_person_person_medium_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_person_person_medium_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_person_person_medium_light_skin_tone_light_skin_ton": 32, "couple_with_heart_person_person_medium_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_person_person_medium_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_person_person_medium_skin_tone_dark_skin_ton": 32, "couple_with_heart_person_person_medium_skin_tone_light_skin_ton": 32, "couple_with_heart_person_person_medium_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_person_person_medium_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_person_person_tone1_tone2": 32, "couple_with_heart_person_person_tone1_tone3": 32, "couple_with_heart_person_person_tone1_tone4": 32, "couple_with_heart_person_person_tone1_tone5": 32, "couple_with_heart_person_person_tone2_tone1": 32, "couple_with_heart_person_person_tone2_tone3": 32, "couple_with_heart_person_person_tone2_tone4": 32, "couple_with_heart_person_person_tone2_tone5": 32, "couple_with_heart_person_person_tone3_tone1": 32, "couple_with_heart_person_person_tone3_tone2": 32, "couple_with_heart_person_person_tone3_tone4": 32, "couple_with_heart_person_person_tone3_tone5": 32, "couple_with_heart_person_person_tone4_tone1": 32, "couple_with_heart_person_person_tone4_tone2": 32, "couple_with_heart_person_person_tone4_tone3": 32, "couple_with_heart_person_person_tone4_tone5": 32, "couple_with_heart_person_person_tone5_tone1": 32, "couple_with_heart_person_person_tone5_tone2": 32, "couple_with_heart_person_person_tone5_tone3": 32, "couple_with_heart_person_person_tone5_tone4": 32, "couple_with_heart_tone1": 32, "couple_with_heart_tone2": 32, "couple_with_heart_tone3": 32, "couple_with_heart_tone4": 32, "couple_with_heart_tone5": 32, "couple_with_heart_woman_man": 32, "couple_with_heart_woman_man_dark_skin_ton": 32, "couple_with_heart_woman_man_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_man_dark_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_man_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_man_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_man_light_skin_ton": 32, "couple_with_heart_woman_man_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_man_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_man_light_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_man_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_man_medium_dark_skin_ton": 32, "couple_with_heart_woman_man_medium_dark_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_man_medium_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_man_medium_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_man_medium_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_man_medium_light_skin_ton": 32, "couple_with_heart_woman_man_medium_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_man_medium_light_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_man_medium_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_man_medium_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_man_medium_skin_ton": 32, "couple_with_heart_woman_man_medium_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_man_medium_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_man_medium_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_man_medium_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_man_tone1": 32, "couple_with_heart_woman_man_tone1_tone2": 32, "couple_with_heart_woman_man_tone1_tone3": 32, "couple_with_heart_woman_man_tone1_tone4": 32, "couple_with_heart_woman_man_tone1_tone5": 32, "couple_with_heart_woman_man_tone2": 32, "couple_with_heart_woman_man_tone2_tone1": 32, "couple_with_heart_woman_man_tone2_tone3": 32, "couple_with_heart_woman_man_tone2_tone4": 32, "couple_with_heart_woman_man_tone2_tone5": 32, "couple_with_heart_woman_man_tone3": 32, "couple_with_heart_woman_man_tone3_tone1": 32, "couple_with_heart_woman_man_tone3_tone2": 32, "couple_with_heart_woman_man_tone3_tone4": 32, "couple_with_heart_woman_man_tone3_tone5": 32, "couple_with_heart_woman_man_tone4": 32, "couple_with_heart_woman_man_tone4_tone1": 32, "couple_with_heart_woman_man_tone4_tone2": 32, "couple_with_heart_woman_man_tone4_tone3": 32, "couple_with_heart_woman_man_tone4_tone5": 32, "couple_with_heart_woman_man_tone5": 32, "couple_with_heart_woman_man_tone5_tone1": 32, "couple_with_heart_woman_man_tone5_tone2": 32, "couple_with_heart_woman_man_tone5_tone3": 32, "couple_with_heart_woman_man_tone5_tone4": 32, "couple_with_heart_woman_woman": 32, "couple_with_heart_woman_woman_dark_skin_ton": 32, "couple_with_heart_woman_woman_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_woman_dark_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_woman_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_woman_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_woman_light_skin_ton": 32, "couple_with_heart_woman_woman_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_woman_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_woman_light_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_woman_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_woman_medium_dark_skin_ton": 32, "couple_with_heart_woman_woman_medium_dark_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_woman_medium_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_woman_medium_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_woman_medium_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_woman_medium_light_skin_ton": 32, "couple_with_heart_woman_woman_medium_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_woman_medium_light_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_woman_medium_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_woman_medium_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_woman_medium_skin_ton": 32, "couple_with_heart_woman_woman_medium_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_woman_medium_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_woman_medium_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_woman_medium_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_woman_tone1": 32, "couple_with_heart_woman_woman_tone1_tone2": 32, "couple_with_heart_woman_woman_tone1_tone3": 32, "couple_with_heart_woman_woman_tone1_tone4": 32, "couple_with_heart_woman_woman_tone1_tone5": 32, "couple_with_heart_woman_woman_tone2": 32, "couple_with_heart_woman_woman_tone2_tone1": 32, "couple_with_heart_woman_woman_tone2_tone3": 32, "couple_with_heart_woman_woman_tone2_tone4": 32, "couple_with_heart_woman_woman_tone2_tone5": 32, "couple_with_heart_woman_woman_tone3": 32, "couple_with_heart_woman_woman_tone3_tone1": 32, "couple_with_heart_woman_woman_tone3_tone2": 32, "couple_with_heart_woman_woman_tone3_tone4": 32, "couple_with_heart_woman_woman_tone3_tone5": 32, "couple_with_heart_woman_woman_tone4": 32, "couple_with_heart_woman_woman_tone4_tone1": 32, "couple_with_heart_woman_woman_tone4_tone2": 32, "couple_with_heart_woman_woman_tone4_tone3": 32, "couple_with_heart_woman_woman_tone4_tone5": 32, "couple_with_heart_woman_woman_tone5": 32, "couple_with_heart_woman_woman_tone5_tone1": 32, "couple_with_heart_woman_woman_tone5_tone2": 32, "couple_with_heart_woman_woman_tone5_tone3": 32, "couple_with_heart_woman_woman_tone5_tone4": 32, "couple_with_heart_ww": 32, "couple_ww": 32, "couplekiss": 32, "couplekiss_man_man": 32, "couplekiss_man_woman": 32, "couplekiss_mm": 32, "couplekiss_woman_woman": 32, "couplekiss_ww": 32, "cow2": 32, "cow": 32, "cowboi": 32, "cowboy_hat_fac": 32, "cp": [32, 99, 114, 152, 154, 157, 191, 193, 257, 266, 267, 287, 288, 335, 340, 755, 802, 829, 830, 831, 832, 833, 862, 866, 867, 869, 870, 873, 874, 876, 882, 898, 906, 918, 929, 990, 1159], "cr": [32, 1050], "crab": 32, "crayon": 32, "credit_card": 32, "crescent_moon": 32, "cricket": 32, "cricket_bat_bal": 32, "cricket_gam": 32, "croatia": 32, "crocodil": 32, "croissant": 32, "cross": [32, 38, 65, 103, 104, 106, 122, 150, 163, 187, 281, 293, 294, 309, 310, 336, 337, 338, 466, 480, 508, 509, 510, 511, 512, 513, 514, 515, 518, 519, 520, 560, 733, 754, 755, 832, 835, 836, 898, 921, 927, 929, 936, 937, 939, 953, 956, 959, 961, 978, 982, 983, 984, 985, 987, 990, 1155], "crossed_fing": 32, "crossed_flag": 32, "crossed_sword": 32, "crown": 32, "cruise_ship": 32, "cry": [32, 151], "crying_cat_fac": 32, "crystal_bal": 32, "cu": 32, "cuba": 32, "cucumb": 32, "cup_with_straw": 32, "cupcak": 32, "cupid": 32, "curacao": 32, "curling_ston": 32, "curly_hair": 32, "curly_loop": 32, "currency_exchang": 32, "curri": [32, 212], "custard": 32, "cut_of_meat": 32, "cw": 32, "cx": 32, "cy": 32, "cyclon": 32, "cypru": 32, "cz": 32, "czech_republ": 32, "dagger": [32, 38], "dagger_knif": 32, "dancer": 32, "dancer_tone1": 32, "dancer_tone2": 32, "dancer_tone3": 32, "dancer_tone4": 32, "dancer_tone5": 32, "dancing_men": 32, "dancing_women": 32, "dango": 32, "dark_sunglass": 32, "dart": 32, "dash": [32, 34, 35, 38, 604], "date": [32, 112, 148, 154, 162, 166, 183, 189, 219, 251, 267, 269, 312, 348, 349, 444, 803, 995, 1089, 1091, 1095, 1097, 1104, 1109], "deaf_man": 32, "deaf_man_dark_skin_ton": 32, "deaf_man_light_skin_ton": 32, "deaf_man_medium_dark_skin_ton": 32, "deaf_man_medium_light_skin_ton": 32, "deaf_man_medium_skin_ton": 32, "deaf_man_tone1": 32, "deaf_man_tone2": 32, "deaf_man_tone3": 32, "deaf_man_tone4": 32, "deaf_man_tone5": 32, "deaf_person": 32, "deaf_person_dark_skin_ton": 32, "deaf_person_light_skin_ton": 32, "deaf_person_medium_dark_skin_ton": 32, "deaf_person_medium_light_skin_ton": 32, "deaf_person_medium_skin_ton": 32, "deaf_person_tone1": 32, "deaf_person_tone2": 32, "deaf_person_tone3": 32, "deaf_person_tone4": 32, "deaf_person_tone5": 32, "deaf_woman": 32, "deaf_woman_dark_skin_ton": 32, "deaf_woman_light_skin_ton": 32, "deaf_woman_medium_dark_skin_ton": 32, "deaf_woman_medium_light_skin_ton": 32, "deaf_woman_medium_skin_ton": 32, "deaf_woman_tone1": 32, "deaf_woman_tone2": 32, "deaf_woman_tone3": 32, "deaf_woman_tone4": 32, "deaf_woman_tone5": 32, "deciduous_tre": 32, "deer": 32, "denmark": 32, "department_stor": 32, "derelict_hous": 32, "derelict_house_build": 32, "desert": 32, "desert_island": 32, "desktop": [32, 139, 151, 156, 212, 281, 884, 961, 1157, 1164], "desktop_comput": 32, "detective_tone1": 32, "detective_tone2": 32, "detective_tone3": 32, "detective_tone4": 32, "detective_tone5": 32, "dg": 32, "diamond_shape_with_a_dot_insid": 32, "diamond": [32, 34, 38, 211, 224], "diego_garcia": 32, "digit_eight": 32, "digit_f": 32, "digit_four": 32, "digit_nin": 32, "digit_on": 32, "digit_seven": 32, "digit_six": 32, "digit_thre": 32, "digit_two": 32, "digit_zero": 32, "disappoint": 32, "disappointed_reliev": 32, "disguised_fac": 32, "divid": [32, 35, 36, 38, 243, 1107], "diving_mask": 32, "diya_lamp": 32, "dizzi": 32, "dizzy_fac": 32, "dj": 32, "djibouti": 32, "dk": 32, "dm": 32, "dna": 32, "do_not_litt": 32, "dodo": 32, "dog2": 32, "dog": [32, 420], "dollar": [32, 36], "doll": 32, "dolphin": 32, "dominica": 32, "dominican_republ": 32, "door": [32, 229, 538, 792, 1010], "double_vertical_bar": 32, "doughnut": 32, "dove": 32, "dove_of_peac": 32, "dragon": [32, 97, 213, 229, 276, 278, 316, 538, 562, 563, 568, 657, 669, 671, 700, 705, 716, 720, 725, 733, 752, 754, 755, 973], "dragon_fac": 32, "dress": [32, 148], "dromedary_camel": 32, "drool": 32, "drooling_fac": 32, "drop_of_blood": 32, "droplet": 32, "drum": 32, "drum_with_drumstick": 32, "dumpl": 32, "dvd": 32, "dz": 32, "mail": [32, 148, 223, 239, 246, 249, 264, 271, 281, 285, 307, 313, 893, 1113, 1147], "ea": [32, 161], "eagl": [32, 223, 1057], "ear": 32, "ear_of_ric": 32, "ear_tone1": 32, "ear_tone2": 32, "ear_tone3": 32, "ear_tone4": 32, "ear_tone5": 32, "ear_with_hearing_aid": 32, "ear_with_hearing_aid_dark_skin_ton": 32, "ear_with_hearing_aid_light_skin_ton": 32, "ear_with_hearing_aid_medium_dark_skin_ton": 32, "ear_with_hearing_aid_medium_light_skin_ton": 32, "ear_with_hearing_aid_medium_skin_ton": 32, "ear_with_hearing_aid_tone1": 32, "ear_with_hearing_aid_tone2": 32, "ear_with_hearing_aid_tone3": 32, "ear_with_hearing_aid_tone4": 32, "ear_with_hearing_aid_tone5": 32, "earth_africa": 32, "earth_america": 32, "earth_asia": 32, "ec": [32, 97, 161, 203, 332, 335, 340, 343, 352, 755, 831, 832, 862, 898], "ecuador": 32, "ee": [32, 161], "eg": [32, 35, 119], "egg": [32, 61, 1044], "eggplant": 32, "egypt": 32, "eight": [32, 123, 153, 171, 184, 194, 202, 231, 233, 335, 908, 1113], "eight_pointed_black_star": 32, "eight_spoked_asterisk": 32, "eject": 32, "eject_symbol": 32, "el_salvador": 32, "electric_plug": 32, "eleph": 32, "elev": 32, "elf": [32, 159, 162, 194, 210, 220, 450, 546, 945, 976, 977, 993, 1027, 1167], "elf_dark_skin_ton": 32, "elf_light_skin_ton": 32, "elf_medium_dark_skin_ton": 32, "elf_medium_light_skin_ton": 32, "elf_medium_skin_ton": 32, "elf_tone1": 32, "elf_tone2": 32, "elf_tone3": 32, "elf_tone4": 32, "elf_tone5": 32, "england": 32, "envelop": [32, 802], "envelope_with_arrow": 32, "equatorial_guinea": 32, "er": [32, 160, 169, 184, 186, 194, 231, 1148, 1149, 1150], "eritrea": 32, "estonia": 32, "et": [32, 97, 570, 719, 922, 977, 978, 1019], "ethiopia": 32, "euro": [32, 486, 487, 488, 500, 501, 502], "european_castl": 32, "european_post_offic": 32, "european_union": 32, "evergreen_tre": 32, "exclam": [32, 36], "expecting_woman": 32, "expecting_woman_tone1": 32, "expecting_woman_tone2": 32, "expecting_woman_tone3": 32, "expecting_woman_tone4": 32, "expecting_woman_tone5": 32, "exploding_head": 32, "expressionless": 32, "eye_in_speech_bubbl": 32, "eye_speech_bubbl": 32, "eyeglass": 32, "face_exh": 32, "face_in_cloud": 32, "face_palm": 32, "face_palm_tone1": 32, "face_palm_tone2": 32, "face_palm_tone3": 32, "face_palm_tone4": 32, "face_palm_tone5": 32, "face_vomit": 32, "face_with_cowboy_hat": 32, "face_with_hand_over_mouth": 32, "face_with_head_bandag": 32, "face_with_monocl": 32, "face_with_rolling_ey": 32, "face_with_spiral_ey": 32, "face_with_symbols_over_mouth": 32, "face_with_thermomet": 32, "facepalm": 32, "facepalm_tone1": 32, "facepalm_tone2": 32, "facepalm_tone3": 32, "facepalm_tone4": 32, "facepalm_tone5": 32, "factori": [32, 106, 211, 224, 259, 278, 344, 459, 466, 480, 494, 508, 560, 755, 928, 1156], "factory_work": 32, "factory_worker_dark_skin_ton": 32, "factory_worker_light_skin_ton": 32, "factory_worker_medium_dark_skin_ton": 32, "factory_worker_medium_light_skin_ton": 32, "factory_worker_medium_skin_ton": 32, "factory_worker_tone1": 32, "factory_worker_tone2": 32, "factory_worker_tone3": 32, "factory_worker_tone4": 32, "factory_worker_tone5": 32, "fairi": 32, "fairy_dark_skin_ton": 32, "fairy_light_skin_ton": 32, "fairy_medium_dark_skin_ton": 32, "fairy_medium_light_skin_ton": 32, "fairy_medium_skin_ton": 32, "fairy_tone1": 32, "fairy_tone2": 32, "fairy_tone3": 32, "fairy_tone4": 32, "fairy_tone5": 32, "falafel": 32, "falkland_island": 32, "fallen_leaf": 32, "famili": [32, 175, 902, 908], "family_man_boi": 32, "family_man_boy_boi": 32, "family_man_girl": 32, "family_man_girl_boi": 32, "family_man_girl_girl": 32, "family_man_man_boi": 32, "family_man_man_boy_boi": 32, "family_man_man_girl": 32, "family_man_man_girl_boi": 32, "family_man_man_girl_girl": 32, "family_man_woman_boi": 32, "family_man_woman_boy_boi": 32, "family_man_woman_girl": 32, "family_man_woman_girl_boi": 32, "family_man_woman_girl_girl": 32, "family_mmb": 32, "family_mmbb": 32, "family_mmg": 32, "family_mmgb": 32, "family_mmgg": 32, "family_mwbb": 32, "family_mwg": 32, "family_mwgb": 32, "family_mwgg": 32, "family_woman_boi": 32, "family_woman_boy_boi": 32, "family_woman_girl": 32, "family_woman_girl_boi": 32, "family_woman_girl_girl": 32, "family_woman_woman_boi": 32, "family_woman_woman_boy_boi": 32, "family_woman_woman_girl": 32, "family_woman_woman_girl_boi": 32, "family_woman_woman_girl_girl": 32, "family_wwb": 32, "family_wwbb": 32, "family_wwg": 32, "family_wwgb": 32, "family_wwgg": 32, "farmer": 32, "farmer_dark_skin_ton": 32, "farmer_light_skin_ton": 32, "farmer_medium_dark_skin_ton": 32, "farmer_medium_light_skin_ton": 32, "farmer_medium_skin_ton": 32, "farmer_tone1": 32, "farmer_tone2": 32, "farmer_tone3": 32, "farmer_tone4": 32, "farmer_tone5": 32, "faroe_island": 32, "fast_forward": 32, "fax": 32, "fear": [32, 269, 936], "feather": 32, "feet": 32, "female_detect": 32, "female_sign": 32, "fencer": 32, "fenc": 32, "ferris_wheel": 32, "ferri": 32, "fi": [32, 932, 940, 955], "field_hockei": 32, "fiji": 32, "file_cabinet": 32, "file_fold": 32, "film_fram": 32, "film_projector": 32, "film_strip": 32, "fingers_cross": 32, "fingers_crossed_tone1": 32, "fingers_crossed_tone2": 32, "fingers_crossed_tone3": 32, "fingers_crossed_tone4": 32, "fingers_crossed_tone5": 32, "finland": 32, "fire": [32, 43, 63, 422], "fire_engin": 32, "fire_extinguish": 32, "firecrack": 32, "firefight": 32, "firefighter_dark_skin_ton": 32, "firefighter_light_skin_ton": 32, "firefighter_medium_dark_skin_ton": 32, "firefighter_medium_light_skin_ton": 32, "firefighter_medium_skin_ton": 32, "firefighter_tone1": 32, "firefighter_tone2": 32, "firefighter_tone3": 32, "firefighter_tone4": 32, "firefighter_tone5": 32, "firework": 32, "first_plac": 32, "first_place_med": 32, "first_quarter_moon": 32, "first_quarter_moon_with_fac": 32, "fish": [32, 34, 1135], "fish_cak": 32, "fishing_pole_and_fish": 32, "fist": 32, "fist_left": 32, "fist_oncom": 32, "fist_rais": 32, "fist_right": 32, "fist_tone1": 32, "fist_tone2": 32, "fist_tone3": 32, "fist_tone4": 32, "fist_tone5": 32, "five": [32, 36, 63, 151, 171, 184, 194, 202, 223, 233, 239, 249, 264, 285, 303, 307, 315, 335, 353, 1057, 1099], "fj": 32, "fk": 32, "flag_ac": 32, "flag_ad": 32, "flag_a": 32, "flag_af": 32, "flag_ag": 32, "flag_ai": 32, "flag_al": 32, "flag_am": 32, "flag_ao": 32, "flag_aq": 32, "flag_ar": 32, "flag_at": 32, "flag_au": 32, "flag_aw": 32, "flag_ax": 32, "flag_az": 32, "flag_ba": 32, "flag_bb": 32, "flag_bd": 32, "flag_b": 32, "flag_bf": 32, "flag_bg": 32, "flag_bh": 32, "flag_bi": 32, "flag_bj": 32, "flag_bl": 32, "flag_black": 32, "flag_bm": 32, "flag_bn": 32, "flag_bo": 32, "flag_bq": 32, "flag_br": 32, "flag_bt": 32, "flag_bv": 32, "flag_bw": 32, "flag_bz": 32, "flag_ca": 32, "flag_cc": 32, "flag_cd": 32, "flag_cf": 32, "flag_cg": 32, "flag_ch": 32, "flag_ci": 32, "flag_ck": 32, "flag_cl": 32, "flag_cm": 32, "flag_cn": 32, "flag_co": 32, "flag_cp": 32, "flag_cr": 32, "flag_cu": 32, "flag_cv": 32, "flag_cw": 32, "flag_cx": 32, "flag_cz": 32, "flag_d": 32, "flag_dg": 32, "flag_dj": 32, "flag_dk": 32, "flag_dm": 32, "flag_do": 32, "flag_dz": 32, "flag_ea": 32, "flag_ec": 32, "flag_e": 32, "flag_eg": 32, "flag_eh": 32, "flag_er": 32, "flag_": 32, "flag_et": 32, "flag_eu": 32, "flag_fi": 32, "flag_fj": 32, "flag_fk": 32, "flag_fm": 32, "flag_fo": 32, "flag_fr": 32, "flag_ga": 32, "flag_gb": 32, "flag_gd": 32, "flag_g": 32, "flag_gf": 32, "flag_gg": 32, "flag_gh": 32, "flag_gi": 32, "flag_gl": 32, "flag_gm": 32, "flag_gn": 32, "flag_gp": 32, "flag_gq": 32, "flag_gr": 32, "flag_gt": 32, "flag_gu": 32, "flag_gw": 32, "flag_hk": 32, "flag_hm": 32, "flag_hn": 32, "flag_hr": 32, "flag_ht": 32, "flag_hu": 32, "flag_ic": 32, "flag_id": 32, "flag_i": 32, "flag_il": 32, "flag_im": 32, "flag_in": 32, "flag_io": 32, "flag_iq": 32, "flag_ir": 32, "flag_it": 32, "flag_j": 32, "flag_jm": 32, "flag_jo": 32, "flag_jp": 32, "flag_k": 32, "flag_kg": 32, "flag_kh": 32, "flag_ki": 32, "flag_km": 32, "flag_kn": 32, "flag_kp": 32, "flag_kr": 32, "flag_kw": 32, "flag_kz": 32, "flag_la": 32, "flag_lb": 32, "flag_lc": 32, "flag_li": 32, "flag_lk": 32, "flag_lr": 32, "flag_l": 32, "flag_lt": 32, "flag_lu": 32, "flag_lv": 32, "flag_ma": 32, "flag_mc": 32, "flag_md": 32, "flag_m": 32, "flag_mf": 32, "flag_mg": 32, "flag_mh": 32, "flag_mk": 32, "flag_ml": 32, "flag_mm": 32, "flag_mn": 32, "flag_mo": 32, "flag_mp": 32, "flag_mq": 32, "flag_mr": 32, "flag_mt": 32, "flag_mu": 32, "flag_mv": 32, "flag_mw": 32, "flag_mx": 32, "flag_mi": 32, "flag_mz": 32, "flag_na": 32, "flag_nc": 32, "flag_n": 32, "flag_nf": 32, "flag_ng": 32, "flag_ni": 32, "flag_nl": 32, "flag_no": 32, "flag_np": 32, "flag_nr": 32, "flag_nu": 32, "flag_nz": 32, "flag_om": 32, "flag_pa": 32, "flag_p": 32, "flag_pf": 32, "flag_pg": 32, "flag_ph": 32, "flag_pk": 32, "flag_pl": 32, "flag_pm": 32, "flag_pn": 32, "flag_pr": 32, "flag_pt": 32, "flag_pw": 32, "flag_pi": 32, "flag_qa": 32, "flag_r": 32, "flag_ro": 32, "flag_ru": 32, "flag_rw": 32, "flag_sa": 32, "flag_sb": 32, "flag_sc": 32, "flag_sd": 32, "flag_s": 32, "flag_sg": 32, "flag_sh": 32, "flag_si": 32, "flag_sj": 32, "flag_sk": 32, "flag_sl": 32, "flag_sm": 32, "flag_sn": 32, "flag_so": 32, "flag_sr": 32, "flag_ss": 32, "flag_st": 32, "flag_sv": 32, "flag_sx": 32, "flag_sz": 32, "flag_ta": 32, "flag_tc": 32, "flag_td": 32, "flag_tf": 32, "flag_tg": 32, "flag_th": 32, "flag_tj": 32, "flag_tk": 32, "flag_tl": 32, "flag_tm": 32, "flag_tn": 32, "flag_to": 32, "flag_tr": 32, "flag_tt": 32, "flag_tv": 32, "flag_tw": 32, "flag_tz": 32, "flag_ua": 32, "flag_ug": 32, "flag_um": 32, "flag_u": 32, "flag_ui": 32, "flag_uz": 32, "flag_va": 32, "flag_vc": 32, "flag_v": 32, "flag_vg": 32, "flag_vi": 32, "flag_vn": 32, "flag_vu": 32, "flag_wf": 32, "flag_whit": 32, "flag_w": 32, "flag_xk": 32, "flag_y": 32, "flag_yt": 32, "flag_za": 32, "flag_zm": 32, "flag_zw": 32, "flag": [32, 48, 151, 153, 168, 179, 190, 220, 226, 229, 233, 236, 239, 264, 267, 278, 280, 294, 310, 328, 447, 448, 449, 454, 457, 643, 657, 734, 755, 761, 770, 784, 807, 810, 812, 900, 902, 931, 932, 933, 935, 949, 970, 974, 1035], "flame": [32, 154], "flamingo": 32, "flan": 32, "flashlight": 32, "flatbread": 32, "fleur": 32, "li": [32, 147, 243, 596], "fleur_de_li": 32, "flight_arriv": 32, "flight_departur": 32, "floppy_disk": 32, "flower_playing_card": 32, "fly": [32, 828, 899], "flying_disc": 32, "flying_sauc": 32, "fm": 32, "fo": 32, "fog": 32, "foggi": 32, "fondu": 32, "foot": [32, 69, 396, 864], "foot_dark_skin_ton": 32, "foot_light_skin_ton": 32, "foot_medium_dark_skin_ton": 32, "foot_medium_light_skin_ton": 32, "foot_medium_skin_ton": 32, "foot_tone1": 32, "foot_tone2": 32, "foot_tone3": 32, "foot_tone4": 32, "foot_tone5": 32, "footbal": 32, "footprint": [32, 183, 1024], "fork_and_knif": 32, "fork_and_knife_with_pl": 32, "fork_knife_pl": 32, "fortune_cooki": 32, "fountain": 32, "fountain_pen": 32, "four": [32, 35, 65, 150, 155, 171, 183, 184, 187, 194, 201, 202, 210, 226, 231, 233, 243, 246, 249, 260, 264, 267, 281, 284, 285, 291, 306, 307, 313, 335, 802, 868, 1038, 1046, 1099, 1100, 1108, 1133, 1156], "four_leaf_clov": 32, "fox": [32, 420], "fox_fac": 32, "fr": [32, 162], "frame_photo": 32, "frame_with_pictur": 32, "framed_pictur": 32, "franc": 32, "french_bread": 32, "french_guiana": 32, "french_polynesia": 32, "french_southern_territori": 32, "fried_egg": 32, "fried_shrimp": 32, "fri": 32, "frog": 32, "frowning2": 32, "frown": [32, 35, 69, 1153], "frowning_fac": 32, "frowning_man": 32, "frowning_woman": 32, "fuelpump": 32, "full_moon": 32, "full_moon_with_fac": 32, "funeral_urn": 32, "ga": 32, "gabon": 32, "gambia": 32, "game_di": 32, "garlic": 32, "gay_pride_flag": 32, "gb": [32, 930], "gd": 32, "ge": [32, 35], "gear": 32, "gem": 32, "gemini": 32, "geni": 32, "georgia": 32, "germani": [32, 151, 152, 353], "gf": 32, "gg": [32, 35, 38], "gh": [32, 147, 1122], "ghana": 32, "ghost": 32, "gi": [32, 147, 234], "gibraltar": 32, "gift": [32, 187, 218], "gift_heart": 32, "giraff": 32, "girl": 32, "girl_tone1": 32, "girl_tone2": 32, "girl_tone3": 32, "girl_tone4": 32, "girl_tone5": 32, "gl": [32, 35], "glass_of_milk": 32, "globe_with_meridian": 32, "glove": 32, "gm": 32, "gn": 32, "goal": [32, 42, 68, 151, 270, 273, 320, 444, 454, 723, 741, 829, 830, 992, 1001], "goal_net": 32, "goat": 32, "goggl": 32, "golf": 32, "golfer": 32, "golfing_man": 32, "golfing_woman": 32, "gorilla": 32, "gp": 32, "gq": 32, "gr": [32, 291, 307, 1113], "grandma": 32, "grandma_tone1": 32, "grandma_tone2": 32, "grandma_tone3": 32, "grandma_tone4": 32, "grandma_tone5": 32, "grape": 32, "great_britain": 32, "greec": 32, "green_appl": 32, "green_book": 32, "green_circl": 32, "green_heart": 32, "green_salad": 32, "green_squar": 32, "greenland": 32, "grenada": 32, "grey_exclam": 32, "grey_quest": 32, "grin": 32, "gu": 32, "guadeloup": 32, "guam": 32, "guard": [32, 213, 229, 452, 731, 732, 734], "guard_tone1": 32, "guard_tone2": 32, "guard_tone3": 32, "guard_tone4": 32, "guard_tone5": 32, "guardsman": 32, "guardsman_tone1": 32, "guardsman_tone2": 32, "guardsman_tone3": 32, "guardsman_tone4": 32, "guardsman_tone5": 32, "guardswoman": 32, "guatemala": 32, "guernsei": 32, "guide_dog": 32, "guinea": 32, "guinea_bissau": 32, "guitar": 32, "gun": 32, "guyana": 32, "gw": 32, "gy": 32, "haircut": 32, "haircut_man": 32, "haircut_tone1": 32, "haircut_tone2": 32, "haircut_tone3": 32, "haircut_tone4": 32, "haircut_tone5": 32, "haircut_woman": 32, "haiti": 32, "hamburg": 32, "hammer": [32, 151, 227, 267, 782, 792], "hammer_and_pick": 32, "hammer_and_wrench": 32, "hammer_pick": 32, "hamster": 32, "hand": [32, 147, 159, 166, 171, 178, 187, 202, 213, 229, 248, 275, 343, 370, 381, 400, 402, 465, 484, 552, 563, 579, 581, 582, 708, 846, 862, 907, 908, 924, 952, 986, 1004, 1019, 1026, 1153, 1159, 1171], "hand_splai": 32, "hand_splayed_tone1": 32, "hand_splayed_tone2": 32, "hand_splayed_tone3": 32, "hand_splayed_tone4": 32, "hand_splayed_tone5": 32, "hand_with_index_and_middle_finger_cross": 32, "hand_with_index_and_middle_fingers_crossed_tone1": 32, "hand_with_index_and_middle_fingers_crossed_tone2": 32, "hand_with_index_and_middle_fingers_crossed_tone3": 32, "hand_with_index_and_middle_fingers_crossed_tone4": 32, "hand_with_index_and_middle_fingers_crossed_tone5": 32, "handbag": 32, "handbal": 32, "handball_tone1": 32, "handball_tone2": 32, "handball_tone3": 32, "handball_tone4": 32, "handball_tone5": 32, "handshak": [32, 732], "handshake_tone1": 32, "handshake_tone2": 32, "handshake_tone3": 32, "handshake_tone4": 32, "handshake_tone5": 32, "hankei": 32, "hash": [32, 183, 189, 190, 201, 207, 220, 226, 227, 230, 234, 236, 239, 243, 264, 271, 285, 335, 455, 802, 1048, 1128], "hatched_chick": 32, "hatching_chick": 32, "head_bandag": 32, "headphon": 32, "headston": 32, "health_work": 32, "health_worker_dark_skin_ton": 32, "health_worker_light_skin_ton": 32, "health_worker_medium_dark_skin_ton": 32, "health_worker_medium_light_skin_ton": 32, "health_worker_medium_skin_ton": 32, "health_worker_tone1": 32, "health_worker_tone2": 32, "health_worker_tone3": 32, "health_worker_tone4": 32, "health_worker_tone5": 32, "hear_no_evil": 32, "heart_decor": 32, "heart_exclam": 32, "heart_ey": 32, "heart_eyes_cat": 32, "heart_on_fir": 32, "heartbeat": 32, "heartpuls": 32, "heavy_check_mark": 32, "heavy_division_sign": 32, "heavy_dollar_sign": 32, "heavy_heart_exclam": 32, "heavy_heart_exclamation_mark_orna": 32, "heavy_minus_sign": 32, "heavy_multiplication_x": 32, "heavy_plus_sign": 32, "hedgehog": 32, "helicopt": 32, "helmet_with_cross": 32, "helmet_with_white_cross": 32, "herb": 32, "hibiscu": 32, "high_bright": 32, "high_heel": 32, "hiking_boot": 32, "hindu_templ": 32, "hippopotamu": 32, "hk": 32, "hn": 32, "hocho": 32, "hockei": 32, "hole": [32, 229, 755, 898, 928, 937, 938, 939, 956, 969], "hondura": 32, "honey_pot": 32, "hong_kong": 32, "hook": [32, 34, 38, 202, 220, 226, 236, 239, 269, 302, 436, 471, 727, 761], "hors": 32, "horse_rac": 32, "horse_racing_tone1": 32, "horse_racing_tone2": 32, "horse_racing_tone3": 32, "horse_racing_tone4": 32, "horse_racing_tone5": 32, "hospit": 32, "hot_dog": 32, "hot_fac": 32, "hot_pepp": 32, "hotdog": 32, "hotel": [32, 156, 353], "hotspr": 32, "hourglass": 32, "hourglass_flowing_sand": 32, "house_abandon": 32, "house_build": 32, "house_with_garden": 32, "hr": 32, "ht": 32, "hu": [32, 326, 327, 344], "hug": 32, "hugging_fac": 32, "hungari": 32, "hush": 32, "hut": 32, "ic": [32, 381, 462, 491, 1152], "ice_cream": 32, "ice_cub": 32, "ice_hockei": 32, "ice_sk": 32, "icecream": 32, "iceland": 32, "id": [32, 42, 46, 107, 110, 111, 153, 156, 166, 170, 173, 183, 184, 194, 201, 207, 220, 223, 226, 233, 236, 237, 239, 246, 249, 253, 261, 264, 271, 277, 281, 285, 291, 296, 303, 308, 313, 330, 451, 486, 487, 488, 500, 501, 502, 519, 766, 798, 800, 822, 829, 830, 835, 837, 846, 847, 848, 858, 865, 886, 888, 889, 900, 906, 908, 915, 934, 944, 986, 1013, 1024, 1040, 1078, 1089, 1090, 1091, 1092, 1095, 1096, 1097, 1106, 1108, 1126, 1169], "ideograph_advantag": 32, "ie": 32, "il": [32, 161], "imp": 32, "inbox_trai": 32, "incoming_envelop": 32, "india": [32, 211, 260, 284, 306, 1100], "indonesia": 32, "infin": [32, 119, 190, 239, 312, 1005, 1006], "information_desk_person": 32, "information_desk_person_tone1": 32, "information_desk_person_tone2": 32, "information_desk_person_tone3": 32, "information_desk_person_tone4": 32, "information_desk_person_tone5": 32, "\u2139": 32, "information_sourc": 32, "interrobang": 32, "iphon": 32, "iq": 32, "ir": [32, 862], "iran": 32, "iraq": 32, "ireland": 32, "island": 32, "isle_of_man": 32, "israel": [32, 211, 260, 1100], "itali": 32, "izakaya_lantern": 32, "jack_o_lantern": 32, "jamaica": 32, "japan": 32, "japanese_castl": 32, "japanese_goblin": 32, "japanese_ogr": 32, "jean": 32, "jersei": 32, "jigsaw": 32, "jm": 32, "jo": [32, 194, 207, 220, 223, 233, 236, 239, 243, 246, 285, 291], "jordan": 32, "joi": 32, "joy_cat": 32, "joystick": 32, "jp": 32, "judg": 32, "judge_dark_skin_ton": 32, "judge_light_skin_ton": 32, "judge_medium_dark_skin_ton": 32, "judge_medium_light_skin_ton": 32, "judge_medium_skin_ton": 32, "judge_tone1": 32, "judge_tone2": 32, "judge_tone3": 32, "judge_tone4": 32, "judge_tone5": 32, "juggler": 32, "juggler_tone1": 32, "juggler_tone2": 32, "juggler_tone3": 32, "juggler_tone4": 32, "juggler_tone5": 32, "juggl": 32, "juggling_tone1": 32, "juggling_tone2": 32, "juggling_tone3": 32, "juggling_tone4": 32, "juggling_tone5": 32, "kaaba": 32, "kangaroo": 32, "karate_uniform": 32, "kayak": 32, "kazakhstan": 32, "ke": 32, "kenya": 32, "key2": 32, "keyboard": [32, 335, 844, 894], "keycap_ten": 32, "kg": 32, "kh": 32, "ki": [32, 192], "kick_scoot": 32, "kimono": 32, "kiribati": 32, "kiss_dark_skin_ton": 32, "kiss_light_skin_ton": 32, "kiss_man_man_dark_skin_ton": 32, "kiss_man_man_dark_skin_tone_light_skin_ton": 32, "kiss_man_man_dark_skin_tone_medium_dark_skin_ton": 32, "kiss_man_man_dark_skin_tone_medium_light_skin_ton": 32, "kiss_man_man_dark_skin_tone_medium_skin_ton": 32, "kiss_man_man_light_skin_ton": 32, "kiss_man_man_light_skin_tone_dark_skin_ton": 32, "kiss_man_man_light_skin_tone_medium_dark_skin_ton": 32, "kiss_man_man_light_skin_tone_medium_light_skin_ton": 32, "kiss_man_man_light_skin_tone_medium_skin_ton": 32, "kiss_man_man_medium_dark_skin_ton": 32, "kiss_man_man_medium_dark_skin_tone_dark_skin_ton": 32, "kiss_man_man_medium_dark_skin_tone_light_skin_ton": 32, "kiss_man_man_medium_dark_skin_tone_medium_light_skin_ton": 32, "kiss_man_man_medium_dark_skin_tone_medium_skin_ton": 32, "kiss_man_man_medium_light_skin_ton": 32, "kiss_man_man_medium_light_skin_tone_dark_skin_ton": 32, "kiss_man_man_medium_light_skin_tone_light_skin_ton": 32, "kiss_man_man_medium_light_skin_tone_medium_dark_skin_ton": 32, "kiss_man_man_medium_light_skin_tone_medium_skin_ton": 32, "kiss_man_man_medium_skin_ton": 32, "kiss_man_man_medium_skin_tone_dark_skin_ton": 32, "kiss_man_man_medium_skin_tone_light_skin_ton": 32, "kiss_man_man_medium_skin_tone_medium_dark_skin_ton": 32, "kiss_man_man_medium_skin_tone_medium_light_skin_ton": 32, "kiss_man_man_tone1": 32, "kiss_man_man_tone1_tone2": 32, "kiss_man_man_tone1_tone3": 32, "kiss_man_man_tone1_tone4": 32, "kiss_man_man_tone1_tone5": 32, "kiss_man_man_tone2": 32, "kiss_man_man_tone2_tone1": 32, "kiss_man_man_tone2_tone3": 32, "kiss_man_man_tone2_tone4": 32, "kiss_man_man_tone2_tone5": 32, "kiss_man_man_tone3": 32, "kiss_man_man_tone3_tone1": 32, "kiss_man_man_tone3_tone2": 32, "kiss_man_man_tone3_tone4": 32, "kiss_man_man_tone3_tone5": 32, "kiss_man_man_tone4": 32, "kiss_man_man_tone4_tone1": 32, "kiss_man_man_tone4_tone2": 32, "kiss_man_man_tone4_tone3": 32, "kiss_man_man_tone4_tone5": 32, "kiss_man_man_tone5": 32, "kiss_man_man_tone5_tone1": 32, "kiss_man_man_tone5_tone2": 32, "kiss_man_man_tone5_tone3": 32, "kiss_man_man_tone5_tone4": 32, "kiss_medium_dark_skin_ton": 32, "kiss_medium_light_skin_ton": 32, "kiss_medium_skin_ton": 32, "kiss_mm": 32, "kiss_person_person_dark_skin_tone_light_skin_ton": 32, "kiss_person_person_dark_skin_tone_medium_dark_skin_ton": 32, "kiss_person_person_dark_skin_tone_medium_light_skin_ton": 32, "kiss_person_person_dark_skin_tone_medium_skin_ton": 32, "kiss_person_person_light_skin_tone_dark_skin_ton": 32, "kiss_person_person_light_skin_tone_medium_dark_skin_ton": 32, "kiss_person_person_light_skin_tone_medium_light_skin_ton": 32, "kiss_person_person_light_skin_tone_medium_skin_ton": 32, "kiss_person_person_medium_dark_skin_tone_dark_skin_ton": 32, "kiss_person_person_medium_dark_skin_tone_light_skin_ton": 32, "kiss_person_person_medium_dark_skin_tone_medium_light_skin_ton": 32, "kiss_person_person_medium_dark_skin_tone_medium_skin_ton": 32, "kiss_person_person_medium_light_skin_tone_dark_skin_ton": 32, "kiss_person_person_medium_light_skin_tone_light_skin_ton": 32, "kiss_person_person_medium_light_skin_tone_medium_dark_skin_ton": 32, "kiss_person_person_medium_light_skin_tone_medium_skin_ton": 32, "kiss_person_person_medium_skin_tone_dark_skin_ton": 32, "kiss_person_person_medium_skin_tone_light_skin_ton": 32, "kiss_person_person_medium_skin_tone_medium_dark_skin_ton": 32, "kiss_person_person_medium_skin_tone_medium_light_skin_ton": 32, "kiss_person_person_tone1_tone2": 32, "kiss_person_person_tone1_tone3": 32, "kiss_person_person_tone1_tone4": 32, "kiss_person_person_tone1_tone5": 32, "kiss_person_person_tone2_tone1": 32, "kiss_person_person_tone2_tone3": 32, "kiss_person_person_tone2_tone4": 32, "kiss_person_person_tone2_tone5": 32, "kiss_person_person_tone3_tone1": 32, "kiss_person_person_tone3_tone2": 32, "kiss_person_person_tone3_tone4": 32, "kiss_person_person_tone3_tone5": 32, "kiss_person_person_tone4_tone1": 32, "kiss_person_person_tone4_tone2": 32, "kiss_person_person_tone4_tone3": 32, "kiss_person_person_tone4_tone5": 32, "kiss_person_person_tone5_tone1": 32, "kiss_person_person_tone5_tone2": 32, "kiss_person_person_tone5_tone3": 32, "kiss_person_person_tone5_tone4": 32, "kiss_tone1": 32, "kiss_tone2": 32, "kiss_tone3": 32, "kiss_tone4": 32, "kiss_tone5": 32, "kiss_woman_man": 32, "kiss_woman_man_dark_skin_ton": 32, "kiss_woman_man_dark_skin_tone_light_skin_ton": 32, "kiss_woman_man_dark_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_man_dark_skin_tone_medium_light_skin_ton": 32, "kiss_woman_man_dark_skin_tone_medium_skin_ton": 32, "kiss_woman_man_light_skin_ton": 32, "kiss_woman_man_light_skin_tone_dark_skin_ton": 32, "kiss_woman_man_light_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_man_light_skin_tone_medium_light_skin_ton": 32, "kiss_woman_man_light_skin_tone_medium_skin_ton": 32, "kiss_woman_man_medium_dark_skin_ton": 32, "kiss_woman_man_medium_dark_skin_tone_dark_skin_ton": 32, "kiss_woman_man_medium_dark_skin_tone_light_skin_ton": 32, "kiss_woman_man_medium_dark_skin_tone_medium_light_skin_ton": 32, "kiss_woman_man_medium_dark_skin_tone_medium_skin_ton": 32, "kiss_woman_man_medium_light_skin_ton": 32, "kiss_woman_man_medium_light_skin_tone_dark_skin_ton": 32, "kiss_woman_man_medium_light_skin_tone_light_skin_ton": 32, "kiss_woman_man_medium_light_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_man_medium_light_skin_tone_medium_skin_ton": 32, "kiss_woman_man_medium_skin_ton": 32, "kiss_woman_man_medium_skin_tone_dark_skin_ton": 32, "kiss_woman_man_medium_skin_tone_light_skin_ton": 32, "kiss_woman_man_medium_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_man_medium_skin_tone_medium_light_skin_ton": 32, "kiss_woman_man_tone1": 32, "kiss_woman_man_tone1_tone2": 32, "kiss_woman_man_tone1_tone3": 32, "kiss_woman_man_tone1_tone4": 32, "kiss_woman_man_tone1_tone5": 32, "kiss_woman_man_tone2": 32, "kiss_woman_man_tone2_tone1": 32, "kiss_woman_man_tone2_tone3": 32, "kiss_woman_man_tone2_tone4": 32, "kiss_woman_man_tone2_tone5": 32, "kiss_woman_man_tone3": 32, "kiss_woman_man_tone3_tone1": 32, "kiss_woman_man_tone3_tone2": 32, "kiss_woman_man_tone3_tone4": 32, "kiss_woman_man_tone3_tone5": 32, "kiss_woman_man_tone4": 32, "kiss_woman_man_tone4_tone1": 32, "kiss_woman_man_tone4_tone2": 32, "kiss_woman_man_tone4_tone3": 32, "kiss_woman_man_tone4_tone5": 32, "kiss_woman_man_tone5": 32, "kiss_woman_man_tone5_tone1": 32, "kiss_woman_man_tone5_tone2": 32, "kiss_woman_man_tone5_tone3": 32, "kiss_woman_man_tone5_tone4": 32, "kiss_woman_woman_dark_skin_ton": 32, "kiss_woman_woman_dark_skin_tone_light_skin_ton": 32, "kiss_woman_woman_dark_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_woman_dark_skin_tone_medium_light_skin_ton": 32, "kiss_woman_woman_dark_skin_tone_medium_skin_ton": 32, "kiss_woman_woman_light_skin_ton": 32, "kiss_woman_woman_light_skin_tone_dark_skin_ton": 32, "kiss_woman_woman_light_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_woman_light_skin_tone_medium_light_skin_ton": 32, "kiss_woman_woman_light_skin_tone_medium_skin_ton": 32, "kiss_woman_woman_medium_dark_skin_ton": 32, "kiss_woman_woman_medium_dark_skin_tone_dark_skin_ton": 32, "kiss_woman_woman_medium_dark_skin_tone_light_skin_ton": 32, "kiss_woman_woman_medium_dark_skin_tone_medium_light_skin_ton": 32, "kiss_woman_woman_medium_dark_skin_tone_medium_skin_ton": 32, "kiss_woman_woman_medium_light_skin_ton": 32, "kiss_woman_woman_medium_light_skin_tone_dark_skin_ton": 32, "kiss_woman_woman_medium_light_skin_tone_light_skin_ton": 32, "kiss_woman_woman_medium_light_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_woman_medium_light_skin_tone_medium_skin_ton": 32, "kiss_woman_woman_medium_skin_ton": 32, "kiss_woman_woman_medium_skin_tone_dark_skin_ton": 32, "kiss_woman_woman_medium_skin_tone_light_skin_ton": 32, "kiss_woman_woman_medium_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_woman_medium_skin_tone_medium_light_skin_ton": 32, "kiss_woman_woman_tone1": 32, "kiss_woman_woman_tone1_tone2": 32, "kiss_woman_woman_tone1_tone3": 32, "kiss_woman_woman_tone1_tone4": 32, "kiss_woman_woman_tone1_tone5": 32, "kiss_woman_woman_tone2": 32, "kiss_woman_woman_tone2_tone1": 32, "kiss_woman_woman_tone2_tone3": 32, "kiss_woman_woman_tone2_tone4": 32, "kiss_woman_woman_tone2_tone5": 32, "kiss_woman_woman_tone3": 32, "kiss_woman_woman_tone3_tone1": 32, "kiss_woman_woman_tone3_tone2": 32, "kiss_woman_woman_tone3_tone4": 32, "kiss_woman_woman_tone3_tone5": 32, "kiss_woman_woman_tone4": 32, "kiss_woman_woman_tone4_tone1": 32, "kiss_woman_woman_tone4_tone2": 32, "kiss_woman_woman_tone4_tone3": 32, "kiss_woman_woman_tone4_tone5": 32, "kiss_woman_woman_tone5": 32, "kiss_woman_woman_tone5_tone1": 32, "kiss_woman_woman_tone5_tone2": 32, "kiss_woman_woman_tone5_tone3": 32, "kiss_woman_woman_tone5_tone4": 32, "kiss_ww": 32, "kissing_cat": 32, "kissing_closed_ey": 32, "kissing_smiling_ey": 32, "kite": 32, "kiwi": 32, "kiwi_fruit": 32, "kiwifruit": 32, "km": [32, 172, 174], "kn": 32, "knife": [32, 761, 928, 1153], "knot": 32, "koala": 32, "koko": 32, "korea": 32, "kosovo": 32, "kp": 32, "kr": 32, "kuwait": 32, "kw": [32, 220, 226, 236, 239], "ky": 32, "kyrgyzstan": 32, "kz": 32, "la": 32, "lab_coat": 32, "label": [32, 39, 40, 58, 172, 174, 221, 234, 248, 251, 284, 290, 392, 397, 404, 410, 414, 417, 421, 424, 430, 434, 439, 440, 661, 662, 700, 752, 754, 755, 782, 1100, 1107, 1119, 1122], "lacross": 32, "ladder": 32, "lady_beetl": 32, "lao": 32, "large_blue_circl": 32, "large_blue_diamond": 32, "large_orange_diamond": 32, "last_quarter_moon": 32, "last_quarter_moon_with_fac": 32, "latin_cross": 32, "latvia": 32, "laugh": 32, "lb": 32, "lc": [32, 188], "leafy_green": 32, "leav": [32, 49, 65, 148, 151, 152, 158, 161, 191, 220, 243, 280, 346, 564, 566, 575, 576, 591, 593, 594, 750, 753, 765, 770, 780, 802, 907, 932, 952, 1040, 1113], "lebanon": 32, "ledger": 32, "left_facing_fist": 32, "left_facing_fist_tone1": 32, "left_facing_fist_tone2": 32, "left_facing_fist_tone3": 32, "left_facing_fist_tone4": 32, "left_facing_fist_tone5": 32, "left_fist": 32, "left_fist_tone1": 32, "left_fist_tone2": 32, "left_fist_tone3": 32, "left_fist_tone4": 32, "left_fist_tone5": 32, "left_luggag": 32, "left_right_arrow": 32, "left_speech_bubbl": 32, "leftwards_arrow_with_hook": 32, "leg": [32, 35], "leg_dark_skin_ton": 32, "leg_light_skin_ton": 32, "leg_medium_dark_skin_ton": 32, "leg_medium_light_skin_ton": 32, "leg_medium_skin_ton": 32, "leg_tone1": 32, "leg_tone2": 32, "leg_tone3": 32, "leg_tone4": 32, "leg_tone5": 32, "lemon": 32, "leo": [32, 326, 327, 344], "leopard": 32, "lesotho": 32, "level_slid": 32, "levit": 32, "levitate_tone1": 32, "levitate_tone2": 32, "levitate_tone3": 32, "levitate_tone4": 32, "levitate_tone5": 32, "liar": 32, "liberia": 32, "libra": 32, "libya": 32, "liechtenstein": 32, "lifter": 32, "lifter_tone1": 32, "lifter_tone2": 32, "lifter_tone3": 32, "lifter_tone4": 32, "lifter_tone5": 32, "light_rail": 32, "linked_paperclip": 32, "lion": 32, "lion_fac": 32, "lip": 32, "lipstick": 32, "lithuania": 32, "lizard": 32, "lk": 32, "llama": 32, "lobster": 32, "lock": [32, 151, 153, 183, 187, 220, 226, 229, 236, 239, 255, 256, 258, 267, 288, 301, 302, 315, 344, 418, 458, 538, 721, 727, 730, 732, 733, 750, 754, 755, 792, 800, 805, 810, 839, 915, 947, 952, 954, 962, 969, 1010, 1100, 1153, 1165, 1168], "lock_with_ink_pen": 32, "lollipop": 32, "long_drum": 32, "loud_sound": 32, "loudspeak": 32, "love_hotel": 32, "love_lett": 32, "love_you_gestur": 32, "love_you_gesture_dark_skin_ton": 32, "love_you_gesture_light_skin_ton": 32, "love_you_gesture_medium_dark_skin_ton": 32, "love_you_gesture_medium_light_skin_ton": 32, "love_you_gesture_medium_skin_ton": 32, "love_you_gesture_tone1": 32, "love_you_gesture_tone2": 32, "love_you_gesture_tone3": 32, "love_you_gesture_tone4": 32, "love_you_gesture_tone5": 32, "low_bright": 32, "lower_left_ballpoint_pen": 32, "lower_left_crayon": 32, "lower_left_fountain_pen": 32, "lower_left_paintbrush": 32, "lr": 32, "lu": 32, "luggag": 32, "lung": 32, "luxembourg": 32, "lv": 32, "ly": 32, "lying_fac": 32, "ma": 32, "macau": 32, "macedonia": 32, "madagascar": 32, "mag": 32, "mag_right": 32, "mage": 32, "mage_dark_skin_ton": 32, "mage_light_skin_ton": 32, "mage_medium_dark_skin_ton": 32, "mage_medium_light_skin_ton": 32, "mage_medium_skin_ton": 32, "mage_tone1": 32, "mage_tone2": 32, "mage_tone3": 32, "mage_tone4": 32, "mage_tone5": 32, "magic_wand": 32, "magnet": 32, "mahjong": 32, "mailbox": 32, "mailbox_clos": 32, "mailbox_with_mail": 32, "mailbox_with_no_mail": 32, "malawi": 32, "malaysia": 32, "maldiv": 32, "male_danc": 32, "male_dancer_tone1": 32, "male_dancer_tone2": 32, "male_dancer_tone3": 32, "male_dancer_tone4": 32, "male_dancer_tone5": 32, "male_detect": 32, "male_sign": 32, "mali": 32, "malta": 32, "mammoth": 32, "man_artist": 32, "man_artist_dark_skin_ton": 32, "man_artist_light_skin_ton": 32, "man_artist_medium_dark_skin_ton": 32, "man_artist_medium_light_skin_ton": 32, "man_artist_medium_skin_ton": 32, "man_artist_tone1": 32, "man_artist_tone2": 32, "man_artist_tone3": 32, "man_artist_tone4": 32, "man_artist_tone5": 32, "man_astronaut": 32, "man_astronaut_dark_skin_ton": 32, "man_astronaut_light_skin_ton": 32, "man_astronaut_medium_dark_skin_ton": 32, "man_astronaut_medium_light_skin_ton": 32, "man_astronaut_medium_skin_ton": 32, "man_astronaut_tone1": 32, "man_astronaut_tone2": 32, "man_astronaut_tone3": 32, "man_astronaut_tone4": 32, "man_astronaut_tone5": 32, "man_bald": 32, "man_bald_dark_skin_ton": 32, "man_bald_light_skin_ton": 32, "man_bald_medium_dark_skin_ton": 32, "man_bald_medium_light_skin_ton": 32, "man_bald_medium_skin_ton": 32, "man_bald_tone1": 32, "man_bald_tone2": 32, "man_bald_tone3": 32, "man_bald_tone4": 32, "man_bald_tone5": 32, "man_beard": 32, "man_bik": 32, "man_biking_dark_skin_ton": 32, "man_biking_light_skin_ton": 32, "man_biking_medium_dark_skin_ton": 32, "man_biking_medium_light_skin_ton": 32, "man_biking_medium_skin_ton": 32, "man_biking_tone1": 32, "man_biking_tone2": 32, "man_biking_tone3": 32, "man_biking_tone4": 32, "man_biking_tone5": 32, "man_bouncing_bal": 32, "man_bouncing_ball_dark_skin_ton": 32, "man_bouncing_ball_light_skin_ton": 32, "man_bouncing_ball_medium_dark_skin_ton": 32, "man_bouncing_ball_medium_light_skin_ton": 32, "man_bouncing_ball_medium_skin_ton": 32, "man_bouncing_ball_tone1": 32, "man_bouncing_ball_tone2": 32, "man_bouncing_ball_tone3": 32, "man_bouncing_ball_tone4": 32, "man_bouncing_ball_tone5": 32, "man_bow": 32, "man_bowing_dark_skin_ton": 32, "man_bowing_light_skin_ton": 32, "man_bowing_medium_dark_skin_ton": 32, "man_bowing_medium_light_skin_ton": 32, "man_bowing_medium_skin_ton": 32, "man_bowing_tone1": 32, "man_bowing_tone2": 32, "man_bowing_tone3": 32, "man_bowing_tone4": 32, "man_bowing_tone5": 32, "man_cartwheel": 32, "man_cartwheeling_dark_skin_ton": 32, "man_cartwheeling_light_skin_ton": 32, "man_cartwheeling_medium_dark_skin_ton": 32, "man_cartwheeling_medium_light_skin_ton": 32, "man_cartwheeling_medium_skin_ton": 32, "man_cartwheeling_tone1": 32, "man_cartwheeling_tone2": 32, "man_cartwheeling_tone3": 32, "man_cartwheeling_tone4": 32, "man_cartwheeling_tone5": 32, "man_climb": 32, "man_climbing_dark_skin_ton": 32, "man_climbing_light_skin_ton": 32, "man_climbing_medium_dark_skin_ton": 32, "man_climbing_medium_light_skin_ton": 32, "man_climbing_medium_skin_ton": 32, "man_climbing_tone1": 32, "man_climbing_tone2": 32, "man_climbing_tone3": 32, "man_climbing_tone4": 32, "man_climbing_tone5": 32, "man_construction_work": 32, "man_construction_worker_dark_skin_ton": 32, "man_construction_worker_light_skin_ton": 32, "man_construction_worker_medium_dark_skin_ton": 32, "man_construction_worker_medium_light_skin_ton": 32, "man_construction_worker_medium_skin_ton": 32, "man_construction_worker_tone1": 32, "man_construction_worker_tone2": 32, "man_construction_worker_tone3": 32, "man_construction_worker_tone4": 32, "man_construction_worker_tone5": 32, "man_cook": 32, "man_cook_dark_skin_ton": 32, "man_cook_light_skin_ton": 32, "man_cook_medium_dark_skin_ton": 32, "man_cook_medium_light_skin_ton": 32, "man_cook_medium_skin_ton": 32, "man_cook_tone1": 32, "man_cook_tone2": 32, "man_cook_tone3": 32, "man_cook_tone4": 32, "man_cook_tone5": 32, "man_curly_hair": 32, "man_curly_haired_dark_skin_ton": 32, "man_curly_haired_light_skin_ton": 32, "man_curly_haired_medium_dark_skin_ton": 32, "man_curly_haired_medium_light_skin_ton": 32, "man_curly_haired_medium_skin_ton": 32, "man_curly_haired_tone1": 32, "man_curly_haired_tone2": 32, "man_curly_haired_tone3": 32, "man_curly_haired_tone4": 32, "man_curly_haired_tone5": 32, "man_danc": 32, "man_dancing_tone1": 32, "man_dancing_tone2": 32, "man_dancing_tone3": 32, "man_dancing_tone4": 32, "man_dancing_tone5": 32, "man_dark_skin_tone_beard": 32, "man_detect": 32, "man_detective_dark_skin_ton": 32, "man_detective_light_skin_ton": 32, "man_detective_medium_dark_skin_ton": 32, "man_detective_medium_light_skin_ton": 32, "man_detective_medium_skin_ton": 32, "man_detective_tone1": 32, "man_detective_tone2": 32, "man_detective_tone3": 32, "man_detective_tone4": 32, "man_detective_tone5": 32, "man_elf": 32, "man_elf_dark_skin_ton": 32, "man_elf_light_skin_ton": 32, "man_elf_medium_dark_skin_ton": 32, "man_elf_medium_light_skin_ton": 32, "man_elf_medium_skin_ton": 32, "man_elf_tone1": 32, "man_elf_tone2": 32, "man_elf_tone3": 32, "man_elf_tone4": 32, "man_elf_tone5": 32, "man_facepalm": 32, "man_facepalming_dark_skin_ton": 32, "man_facepalming_light_skin_ton": 32, "man_facepalming_medium_dark_skin_ton": 32, "man_facepalming_medium_light_skin_ton": 32, "man_facepalming_medium_skin_ton": 32, "man_facepalming_tone1": 32, "man_facepalming_tone2": 32, "man_facepalming_tone3": 32, "man_facepalming_tone4": 32, "man_facepalming_tone5": 32, "man_factory_work": 32, "man_factory_worker_dark_skin_ton": 32, "man_factory_worker_light_skin_ton": 32, "man_factory_worker_medium_dark_skin_ton": 32, "man_factory_worker_medium_light_skin_ton": 32, "man_factory_worker_medium_skin_ton": 32, "man_factory_worker_tone1": 32, "man_factory_worker_tone2": 32, "man_factory_worker_tone3": 32, "man_factory_worker_tone4": 32, "man_factory_worker_tone5": 32, "man_fairi": 32, "man_fairy_dark_skin_ton": 32, "man_fairy_light_skin_ton": 32, "man_fairy_medium_dark_skin_ton": 32, "man_fairy_medium_light_skin_ton": 32, "man_fairy_medium_skin_ton": 32, "man_fairy_tone1": 32, "man_fairy_tone2": 32, "man_fairy_tone3": 32, "man_fairy_tone4": 32, "man_fairy_tone5": 32, "man_farm": 32, "man_farmer_dark_skin_ton": 32, "man_farmer_light_skin_ton": 32, "man_farmer_medium_dark_skin_ton": 32, "man_farmer_medium_light_skin_ton": 32, "man_farmer_medium_skin_ton": 32, "man_farmer_tone1": 32, "man_farmer_tone2": 32, "man_farmer_tone3": 32, "man_farmer_tone4": 32, "man_farmer_tone5": 32, "man_feeding_babi": 32, "man_feeding_baby_dark_skin_ton": 32, "man_feeding_baby_light_skin_ton": 32, "man_feeding_baby_medium_dark_skin_ton": 32, "man_feeding_baby_medium_light_skin_ton": 32, "man_feeding_baby_medium_skin_ton": 32, "man_feeding_baby_tone1": 32, "man_feeding_baby_tone2": 32, "man_feeding_baby_tone3": 32, "man_feeding_baby_tone4": 32, "man_feeding_baby_tone5": 32, "man_firefight": 32, "man_firefighter_dark_skin_ton": 32, "man_firefighter_light_skin_ton": 32, "man_firefighter_medium_dark_skin_ton": 32, "man_firefighter_medium_light_skin_ton": 32, "man_firefighter_medium_skin_ton": 32, "man_firefighter_tone1": 32, "man_firefighter_tone2": 32, "man_firefighter_tone3": 32, "man_firefighter_tone4": 32, "man_firefighter_tone5": 32, "man_frown": 32, "man_frowning_dark_skin_ton": 32, "man_frowning_light_skin_ton": 32, "man_frowning_medium_dark_skin_ton": 32, "man_frowning_medium_light_skin_ton": 32, "man_frowning_medium_skin_ton": 32, "man_frowning_tone1": 32, "man_frowning_tone2": 32, "man_frowning_tone3": 32, "man_frowning_tone4": 32, "man_frowning_tone5": 32, "man_geni": 32, "man_gesturing_no": 32, "man_gesturing_no_dark_skin_ton": 32, "man_gesturing_no_light_skin_ton": 32, "man_gesturing_no_medium_dark_skin_ton": 32, "man_gesturing_no_medium_light_skin_ton": 32, "man_gesturing_no_medium_skin_ton": 32, "man_gesturing_no_tone1": 32, "man_gesturing_no_tone2": 32, "man_gesturing_no_tone3": 32, "man_gesturing_no_tone4": 32, "man_gesturing_no_tone5": 32, "man_gesturing_ok": 32, "man_gesturing_ok_dark_skin_ton": 32, "man_gesturing_ok_light_skin_ton": 32, "man_gesturing_ok_medium_dark_skin_ton": 32, "man_gesturing_ok_medium_light_skin_ton": 32, "man_gesturing_ok_medium_skin_ton": 32, "man_gesturing_ok_tone1": 32, "man_gesturing_ok_tone2": 32, "man_gesturing_ok_tone3": 32, "man_gesturing_ok_tone4": 32, "man_gesturing_ok_tone5": 32, "man_getting_face_massag": 32, "man_getting_face_massage_dark_skin_ton": 32, "man_getting_face_massage_light_skin_ton": 32, "man_getting_face_massage_medium_dark_skin_ton": 32, "man_getting_face_massage_medium_light_skin_ton": 32, "man_getting_face_massage_medium_skin_ton": 32, "man_getting_face_massage_tone1": 32, "man_getting_face_massage_tone2": 32, "man_getting_face_massage_tone3": 32, "man_getting_face_massage_tone4": 32, "man_getting_face_massage_tone5": 32, "man_getting_haircut": 32, "man_getting_haircut_dark_skin_ton": 32, "man_getting_haircut_light_skin_ton": 32, "man_getting_haircut_medium_dark_skin_ton": 32, "man_getting_haircut_medium_light_skin_ton": 32, "man_getting_haircut_medium_skin_ton": 32, "man_getting_haircut_tone1": 32, "man_getting_haircut_tone2": 32, "man_getting_haircut_tone3": 32, "man_getting_haircut_tone4": 32, "man_getting_haircut_tone5": 32, "man_golf": 32, "man_golfing_dark_skin_ton": 32, "man_golfing_light_skin_ton": 32, "man_golfing_medium_dark_skin_ton": 32, "man_golfing_medium_light_skin_ton": 32, "man_golfing_medium_skin_ton": 32, "man_golfing_tone1": 32, "man_golfing_tone2": 32, "man_golfing_tone3": 32, "man_golfing_tone4": 32, "man_golfing_tone5": 32, "man_guard": 32, "man_guard_dark_skin_ton": 32, "man_guard_light_skin_ton": 32, "man_guard_medium_dark_skin_ton": 32, "man_guard_medium_light_skin_ton": 32, "man_guard_medium_skin_ton": 32, "man_guard_tone1": 32, "man_guard_tone2": 32, "man_guard_tone3": 32, "man_guard_tone4": 32, "man_guard_tone5": 32, "man_health_work": 32, "man_health_worker_dark_skin_ton": 32, "man_health_worker_light_skin_ton": 32, "man_health_worker_medium_dark_skin_ton": 32, "man_health_worker_medium_light_skin_ton": 32, "man_health_worker_medium_skin_ton": 32, "man_health_worker_tone1": 32, "man_health_worker_tone2": 32, "man_health_worker_tone3": 32, "man_health_worker_tone4": 32, "man_health_worker_tone5": 32, "man_in_business_suit_levit": 32, "man_in_business_suit_levitating_dark_skin_ton": 32, "man_in_business_suit_levitating_light_skin_ton": 32, "man_in_business_suit_levitating_medium_dark_skin_ton": 32, "man_in_business_suit_levitating_medium_light_skin_ton": 32, "man_in_business_suit_levitating_medium_skin_ton": 32, "man_in_business_suit_levitating_tone1": 32, "man_in_business_suit_levitating_tone2": 32, "man_in_business_suit_levitating_tone3": 32, "man_in_business_suit_levitating_tone4": 32, "man_in_business_suit_levitating_tone5": 32, "man_in_lotus_posit": 32, "man_in_lotus_position_dark_skin_ton": 32, "man_in_lotus_position_light_skin_ton": 32, "man_in_lotus_position_medium_dark_skin_ton": 32, "man_in_lotus_position_medium_light_skin_ton": 32, "man_in_lotus_position_medium_skin_ton": 32, "man_in_lotus_position_tone1": 32, "man_in_lotus_position_tone2": 32, "man_in_lotus_position_tone3": 32, "man_in_lotus_position_tone4": 32, "man_in_lotus_position_tone5": 32, "man_in_manual_wheelchair": 32, "man_in_manual_wheelchair_dark_skin_ton": 32, "man_in_manual_wheelchair_light_skin_ton": 32, "man_in_manual_wheelchair_medium_dark_skin_ton": 32, "man_in_manual_wheelchair_medium_light_skin_ton": 32, "man_in_manual_wheelchair_medium_skin_ton": 32, "man_in_manual_wheelchair_tone1": 32, "man_in_manual_wheelchair_tone2": 32, "man_in_manual_wheelchair_tone3": 32, "man_in_manual_wheelchair_tone4": 32, "man_in_manual_wheelchair_tone5": 32, "man_in_motorized_wheelchair": 32, "man_in_motorized_wheelchair_dark_skin_ton": 32, "man_in_motorized_wheelchair_light_skin_ton": 32, "man_in_motorized_wheelchair_medium_dark_skin_ton": 32, "man_in_motorized_wheelchair_medium_light_skin_ton": 32, "man_in_motorized_wheelchair_medium_skin_ton": 32, "man_in_motorized_wheelchair_tone1": 32, "man_in_motorized_wheelchair_tone2": 32, "man_in_motorized_wheelchair_tone3": 32, "man_in_motorized_wheelchair_tone4": 32, "man_in_motorized_wheelchair_tone5": 32, "man_in_steamy_room": 32, "man_in_steamy_room_dark_skin_ton": 32, "man_in_steamy_room_light_skin_ton": 32, "man_in_steamy_room_medium_dark_skin_ton": 32, "man_in_steamy_room_medium_light_skin_ton": 32, "man_in_steamy_room_medium_skin_ton": 32, "man_in_steamy_room_tone1": 32, "man_in_steamy_room_tone2": 32, "man_in_steamy_room_tone3": 32, "man_in_steamy_room_tone4": 32, "man_in_steamy_room_tone5": 32, "man_in_tuxedo": 32, "man_in_tuxedo_dark_skin_ton": 32, "man_in_tuxedo_light_skin_ton": 32, "man_in_tuxedo_medium_dark_skin_ton": 32, "man_in_tuxedo_medium_light_skin_ton": 32, "man_in_tuxedo_medium_skin_ton": 32, "man_in_tuxedo_tone1": 32, "man_in_tuxedo_tone2": 32, "man_in_tuxedo_tone3": 32, "man_in_tuxedo_tone4": 32, "man_in_tuxedo_tone5": 32, "man_judg": 32, "man_judge_dark_skin_ton": 32, "man_judge_light_skin_ton": 32, "man_judge_medium_dark_skin_ton": 32, "man_judge_medium_light_skin_ton": 32, "man_judge_medium_skin_ton": 32, "man_judge_tone1": 32, "man_judge_tone2": 32, "man_judge_tone3": 32, "man_judge_tone4": 32, "man_judge_tone5": 32, "man_juggl": 32, "man_juggling_dark_skin_ton": 32, "man_juggling_light_skin_ton": 32, "man_juggling_medium_dark_skin_ton": 32, "man_juggling_medium_light_skin_ton": 32, "man_juggling_medium_skin_ton": 32, "man_juggling_tone1": 32, "man_juggling_tone2": 32, "man_juggling_tone3": 32, "man_juggling_tone4": 32, "man_juggling_tone5": 32, "man_kneel": 32, "man_kneeling_dark_skin_ton": 32, "man_kneeling_light_skin_ton": 32, "man_kneeling_medium_dark_skin_ton": 32, "man_kneeling_medium_light_skin_ton": 32, "man_kneeling_medium_skin_ton": 32, "man_kneeling_tone1": 32, "man_kneeling_tone2": 32, "man_kneeling_tone3": 32, "man_kneeling_tone4": 32, "man_kneeling_tone5": 32, "man_lifting_weight": 32, "man_lifting_weights_dark_skin_ton": 32, "man_lifting_weights_light_skin_ton": 32, "man_lifting_weights_medium_dark_skin_ton": 32, "man_lifting_weights_medium_light_skin_ton": 32, "man_lifting_weights_medium_skin_ton": 32, "man_lifting_weights_tone1": 32, "man_lifting_weights_tone2": 32, "man_lifting_weights_tone3": 32, "man_lifting_weights_tone4": 32, "man_lifting_weights_tone5": 32, "man_light_skin_tone_beard": 32, "man_mag": 32, "man_mage_dark_skin_ton": 32, "man_mage_light_skin_ton": 32, "man_mage_medium_dark_skin_ton": 32, "man_mage_medium_light_skin_ton": 32, "man_mage_medium_skin_ton": 32, "man_mage_tone1": 32, "man_mage_tone2": 32, "man_mage_tone3": 32, "man_mage_tone4": 32, "man_mage_tone5": 32, "man_mechan": 32, "man_mechanic_dark_skin_ton": 32, "man_mechanic_light_skin_ton": 32, "man_mechanic_medium_dark_skin_ton": 32, "man_mechanic_medium_light_skin_ton": 32, "man_mechanic_medium_skin_ton": 32, "man_mechanic_tone1": 32, "man_mechanic_tone2": 32, "man_mechanic_tone3": 32, "man_mechanic_tone4": 32, "man_mechanic_tone5": 32, "man_medium_dark_skin_tone_beard": 32, "man_medium_light_skin_tone_beard": 32, "man_medium_skin_tone_beard": 32, "man_mountain_bik": 32, "man_mountain_biking_dark_skin_ton": 32, "man_mountain_biking_light_skin_ton": 32, "man_mountain_biking_medium_dark_skin_ton": 32, "man_mountain_biking_medium_light_skin_ton": 32, "man_mountain_biking_medium_skin_ton": 32, "man_mountain_biking_tone1": 32, "man_mountain_biking_tone2": 32, "man_mountain_biking_tone3": 32, "man_mountain_biking_tone4": 32, "man_mountain_biking_tone5": 32, "man_office_work": 32, "man_office_worker_dark_skin_ton": 32, "man_office_worker_light_skin_ton": 32, "man_office_worker_medium_dark_skin_ton": 32, "man_office_worker_medium_light_skin_ton": 32, "man_office_worker_medium_skin_ton": 32, "man_office_worker_tone1": 32, "man_office_worker_tone2": 32, "man_office_worker_tone3": 32, "man_office_worker_tone4": 32, "man_office_worker_tone5": 32, "man_pilot": 32, "man_pilot_dark_skin_ton": 32, "man_pilot_light_skin_ton": 32, "man_pilot_medium_dark_skin_ton": 32, "man_pilot_medium_light_skin_ton": 32, "man_pilot_medium_skin_ton": 32, "man_pilot_tone1": 32, "man_pilot_tone2": 32, "man_pilot_tone3": 32, "man_pilot_tone4": 32, "man_pilot_tone5": 32, "man_playing_handbal": 32, "man_playing_handball_dark_skin_ton": 32, "man_playing_handball_light_skin_ton": 32, "man_playing_handball_medium_dark_skin_ton": 32, "man_playing_handball_medium_light_skin_ton": 32, "man_playing_handball_medium_skin_ton": 32, "man_playing_handball_tone1": 32, "man_playing_handball_tone2": 32, "man_playing_handball_tone3": 32, "man_playing_handball_tone4": 32, "man_playing_handball_tone5": 32, "man_playing_water_polo": 32, "man_playing_water_polo_dark_skin_ton": 32, "man_playing_water_polo_light_skin_ton": 32, "man_playing_water_polo_medium_dark_skin_ton": 32, "man_playing_water_polo_medium_light_skin_ton": 32, "man_playing_water_polo_medium_skin_ton": 32, "man_playing_water_polo_tone1": 32, "man_playing_water_polo_tone2": 32, "man_playing_water_polo_tone3": 32, "man_playing_water_polo_tone4": 32, "man_playing_water_polo_tone5": 32, "man_police_offic": 32, "man_police_officer_dark_skin_ton": 32, "man_police_officer_light_skin_ton": 32, "man_police_officer_medium_dark_skin_ton": 32, "man_police_officer_medium_light_skin_ton": 32, "man_police_officer_medium_skin_ton": 32, "man_police_officer_tone1": 32, "man_police_officer_tone2": 32, "man_police_officer_tone3": 32, "man_police_officer_tone4": 32, "man_police_officer_tone5": 32, "man_pout": 32, "man_pouting_dark_skin_ton": 32, "man_pouting_light_skin_ton": 32, "man_pouting_medium_dark_skin_ton": 32, "man_pouting_medium_light_skin_ton": 32, "man_pouting_medium_skin_ton": 32, "man_pouting_tone1": 32, "man_pouting_tone2": 32, "man_pouting_tone3": 32, "man_pouting_tone4": 32, "man_pouting_tone5": 32, "man_raising_hand": 32, "man_raising_hand_dark_skin_ton": 32, "man_raising_hand_light_skin_ton": 32, "man_raising_hand_medium_dark_skin_ton": 32, "man_raising_hand_medium_light_skin_ton": 32, "man_raising_hand_medium_skin_ton": 32, "man_raising_hand_tone1": 32, "man_raising_hand_tone2": 32, "man_raising_hand_tone3": 32, "man_raising_hand_tone4": 32, "man_raising_hand_tone5": 32, "man_red_hair": 32, "man_red_haired_dark_skin_ton": 32, "man_red_haired_light_skin_ton": 32, "man_red_haired_medium_dark_skin_ton": 32, "man_red_haired_medium_light_skin_ton": 32, "man_red_haired_medium_skin_ton": 32, "man_red_haired_tone1": 32, "man_red_haired_tone2": 32, "man_red_haired_tone3": 32, "man_red_haired_tone4": 32, "man_red_haired_tone5": 32, "man_rowing_boat": 32, "man_rowing_boat_dark_skin_ton": 32, "man_rowing_boat_light_skin_ton": 32, "man_rowing_boat_medium_dark_skin_ton": 32, "man_rowing_boat_medium_light_skin_ton": 32, "man_rowing_boat_medium_skin_ton": 32, "man_rowing_boat_tone1": 32, "man_rowing_boat_tone2": 32, "man_rowing_boat_tone3": 32, "man_rowing_boat_tone4": 32, "man_rowing_boat_tone5": 32, "man_run": 32, "man_running_dark_skin_ton": 32, "man_running_light_skin_ton": 32, "man_running_medium_dark_skin_ton": 32, "man_running_medium_light_skin_ton": 32, "man_running_medium_skin_ton": 32, "man_running_tone1": 32, "man_running_tone2": 32, "man_running_tone3": 32, "man_running_tone4": 32, "man_running_tone5": 32, "man_scientist": 32, "man_scientist_dark_skin_ton": 32, "man_scientist_light_skin_ton": 32, "man_scientist_medium_dark_skin_ton": 32, "man_scientist_medium_light_skin_ton": 32, "man_scientist_medium_skin_ton": 32, "man_scientist_tone1": 32, "man_scientist_tone2": 32, "man_scientist_tone3": 32, "man_scientist_tone4": 32, "man_scientist_tone5": 32, "man_shrug": 32, "man_shrugging_dark_skin_ton": 32, "man_shrugging_light_skin_ton": 32, "man_shrugging_medium_dark_skin_ton": 32, "man_shrugging_medium_light_skin_ton": 32, "man_shrugging_medium_skin_ton": 32, "man_shrugging_tone1": 32, "man_shrugging_tone2": 32, "man_shrugging_tone3": 32, "man_shrugging_tone4": 32, "man_shrugging_tone5": 32, "man_sing": 32, "man_singer_dark_skin_ton": 32, "man_singer_light_skin_ton": 32, "man_singer_medium_dark_skin_ton": 32, "man_singer_medium_light_skin_ton": 32, "man_singer_medium_skin_ton": 32, "man_singer_tone1": 32, "man_singer_tone2": 32, "man_singer_tone3": 32, "man_singer_tone4": 32, "man_singer_tone5": 32, "man_stand": 32, "man_standing_dark_skin_ton": 32, "man_standing_light_skin_ton": 32, "man_standing_medium_dark_skin_ton": 32, "man_standing_medium_light_skin_ton": 32, "man_standing_medium_skin_ton": 32, "man_standing_tone1": 32, "man_standing_tone2": 32, "man_standing_tone3": 32, "man_standing_tone4": 32, "man_standing_tone5": 32, "man_stud": 32, "man_student_dark_skin_ton": 32, "man_student_light_skin_ton": 32, "man_student_medium_dark_skin_ton": 32, "man_student_medium_light_skin_ton": 32, "man_student_medium_skin_ton": 32, "man_student_tone1": 32, "man_student_tone2": 32, "man_student_tone3": 32, "man_student_tone4": 32, "man_student_tone5": 32, "man_superhero": 32, "man_superhero_dark_skin_ton": 32, "man_superhero_light_skin_ton": 32, "man_superhero_medium_dark_skin_ton": 32, "man_superhero_medium_light_skin_ton": 32, "man_superhero_medium_skin_ton": 32, "man_superhero_tone1": 32, "man_superhero_tone2": 32, "man_superhero_tone3": 32, "man_superhero_tone4": 32, "man_superhero_tone5": 32, "man_supervillain": 32, "man_supervillain_dark_skin_ton": 32, "man_supervillain_light_skin_ton": 32, "man_supervillain_medium_dark_skin_ton": 32, "man_supervillain_medium_light_skin_ton": 32, "man_supervillain_medium_skin_ton": 32, "man_supervillain_tone1": 32, "man_supervillain_tone2": 32, "man_supervillain_tone3": 32, "man_supervillain_tone4": 32, "man_supervillain_tone5": 32, "man_surf": 32, "man_surfing_dark_skin_ton": 32, "man_surfing_light_skin_ton": 32, "man_surfing_medium_dark_skin_ton": 32, "man_surfing_medium_light_skin_ton": 32, "man_surfing_medium_skin_ton": 32, "man_surfing_tone1": 32, "man_surfing_tone2": 32, "man_surfing_tone3": 32, "man_surfing_tone4": 32, "man_surfing_tone5": 32, "man_swim": 32, "man_swimming_dark_skin_ton": 32, "man_swimming_light_skin_ton": 32, "man_swimming_medium_dark_skin_ton": 32, "man_swimming_medium_light_skin_ton": 32, "man_swimming_medium_skin_ton": 32, "man_swimming_tone1": 32, "man_swimming_tone2": 32, "man_swimming_tone3": 32, "man_swimming_tone4": 32, "man_swimming_tone5": 32, "man_teach": 32, "man_teacher_dark_skin_ton": 32, "man_teacher_light_skin_ton": 32, "man_teacher_medium_dark_skin_ton": 32, "man_teacher_medium_light_skin_ton": 32, "man_teacher_medium_skin_ton": 32, "man_teacher_tone1": 32, "man_teacher_tone2": 32, "man_teacher_tone3": 32, "man_teacher_tone4": 32, "man_teacher_tone5": 32, "man_technologist": 32, "man_technologist_dark_skin_ton": 32, "man_technologist_light_skin_ton": 32, "man_technologist_medium_dark_skin_ton": 32, "man_technologist_medium_light_skin_ton": 32, "man_technologist_medium_skin_ton": 32, "man_technologist_tone1": 32, "man_technologist_tone2": 32, "man_technologist_tone3": 32, "man_technologist_tone4": 32, "man_technologist_tone5": 32, "man_tipping_hand": 32, "man_tipping_hand_dark_skin_ton": 32, "man_tipping_hand_light_skin_ton": 32, "man_tipping_hand_medium_dark_skin_ton": 32, "man_tipping_hand_medium_light_skin_ton": 32, "man_tipping_hand_medium_skin_ton": 32, "man_tipping_hand_tone1": 32, "man_tipping_hand_tone2": 32, "man_tipping_hand_tone3": 32, "man_tipping_hand_tone4": 32, "man_tipping_hand_tone5": 32, "man_tone1": 32, "man_tone1_beard": 32, "man_tone2": 32, "man_tone2_beard": 32, "man_tone3": 32, "man_tone3_beard": 32, "man_tone4": 32, "man_tone4_beard": 32, "man_tone5": 32, "man_tone5_beard": 32, "man_vampir": 32, "man_vampire_dark_skin_ton": 32, "man_vampire_light_skin_ton": 32, "man_vampire_medium_dark_skin_ton": 32, "man_vampire_medium_light_skin_ton": 32, "man_vampire_medium_skin_ton": 32, "man_vampire_tone1": 32, "man_vampire_tone2": 32, "man_vampire_tone3": 32, "man_vampire_tone4": 32, "man_vampire_tone5": 32, "man_walk": 32, "man_walking_dark_skin_ton": 32, "man_walking_light_skin_ton": 32, "man_walking_medium_dark_skin_ton": 32, "man_walking_medium_light_skin_ton": 32, "man_walking_medium_skin_ton": 32, "man_walking_tone1": 32, "man_walking_tone2": 32, "man_walking_tone3": 32, "man_walking_tone4": 32, "man_walking_tone5": 32, "man_wearing_turban": 32, "man_wearing_turban_dark_skin_ton": 32, "man_wearing_turban_light_skin_ton": 32, "man_wearing_turban_medium_dark_skin_ton": 32, "man_wearing_turban_medium_light_skin_ton": 32, "man_wearing_turban_medium_skin_ton": 32, "man_wearing_turban_tone1": 32, "man_wearing_turban_tone2": 32, "man_wearing_turban_tone3": 32, "man_wearing_turban_tone4": 32, "man_wearing_turban_tone5": 32, "man_white_hair": 32, "man_white_haired_dark_skin_ton": 32, "man_white_haired_light_skin_ton": 32, "man_white_haired_medium_dark_skin_ton": 32, "man_white_haired_medium_light_skin_ton": 32, "man_white_haired_medium_skin_ton": 32, "man_white_haired_tone1": 32, "man_white_haired_tone2": 32, "man_white_haired_tone3": 32, "man_white_haired_tone4": 32, "man_white_haired_tone5": 32, "man_with_chinese_cap": 32, "man_with_chinese_cap_tone1": 32, "man_with_chinese_cap_tone2": 32, "man_with_chinese_cap_tone3": 32, "man_with_chinese_cap_tone4": 32, "man_with_chinese_cap_tone5": 32, "man_with_gua_pi_mao": 32, "man_with_gua_pi_mao_tone1": 32, "man_with_gua_pi_mao_tone2": 32, "man_with_gua_pi_mao_tone3": 32, "man_with_gua_pi_mao_tone4": 32, "man_with_gua_pi_mao_tone5": 32, "man_with_probing_can": 32, "man_with_probing_cane_dark_skin_ton": 32, "man_with_probing_cane_light_skin_ton": 32, "man_with_probing_cane_medium_dark_skin_ton": 32, "man_with_probing_cane_medium_light_skin_ton": 32, "man_with_probing_cane_medium_skin_ton": 32, "man_with_probing_cane_tone1": 32, "man_with_probing_cane_tone2": 32, "man_with_probing_cane_tone3": 32, "man_with_probing_cane_tone4": 32, "man_with_probing_cane_tone5": 32, "man_with_turban": 32, "man_with_turban_tone1": 32, "man_with_turban_tone2": 32, "man_with_turban_tone3": 32, "man_with_turban_tone4": 32, "man_with_turban_tone5": 32, "man_with_veil": 32, "man_with_veil_dark_skin_ton": 32, "man_with_veil_light_skin_ton": 32, "man_with_veil_medium_dark_skin_ton": 32, "man_with_veil_medium_light_skin_ton": 32, "man_with_veil_medium_skin_ton": 32, "man_with_veil_tone1": 32, "man_with_veil_tone2": 32, "man_with_veil_tone3": 32, "man_with_veil_tone4": 32, "man_with_veil_tone5": 32, "man_zombi": 32, "mango": 32, "mans_sho": 32, "mantelpiece_clock": 32, "mantlepiece_clock": 32, "manual_wheelchair": 32, "maple_leaf": 32, "marshall_island": 32, "martial_arts_uniform": 32, "martiniqu": 32, "mask": [32, 172, 243, 384, 798, 849, 850, 861, 944, 973, 975], "massage_man": 32, "massage_tone1": 32, "massage_tone2": 32, "massage_tone3": 32, "massage_tone4": 32, "massage_tone5": 32, "massage_woman": 32, "mate": [32, 237, 854], "mauritania": 32, "mauritiu": 32, "mayott": 32, "mc": [32, 154, 269, 444], "md": [32, 135, 355, 803], "meat_on_bon": 32, "mechanic_dark_skin_ton": 32, "mechanic_light_skin_ton": 32, "mechanic_medium_dark_skin_ton": 32, "mechanic_medium_light_skin_ton": 32, "mechanic_medium_skin_ton": 32, "mechanic_tone1": 32, "mechanic_tone2": 32, "mechanic_tone3": 32, "mechanic_tone4": 32, "mechanic_tone5": 32, "mechanical_arm": 32, "mechanical_leg": 32, "medal": 32, "medal_militari": 32, "medal_sport": 32, "medical_symbol": 32, "mega": [32, 997], "melon": 32, "memo": 32, "men_holding_hands_dark_skin_ton": 32, "men_holding_hands_dark_skin_tone_light_skin_ton": 32, "men_holding_hands_dark_skin_tone_medium_dark_skin_ton": 32, "men_holding_hands_dark_skin_tone_medium_light_skin_ton": 32, "men_holding_hands_dark_skin_tone_medium_skin_ton": 32, "men_holding_hands_light_skin_ton": 32, "men_holding_hands_light_skin_tone_dark_skin_ton": 32, "men_holding_hands_light_skin_tone_medium_dark_skin_ton": 32, "men_holding_hands_light_skin_tone_medium_light_skin_ton": 32, "men_holding_hands_light_skin_tone_medium_skin_ton": 32, "men_holding_hands_medium_dark_skin_ton": 32, "men_holding_hands_medium_dark_skin_tone_dark_skin_ton": 32, "men_holding_hands_medium_dark_skin_tone_light_skin_ton": 32, "men_holding_hands_medium_dark_skin_tone_medium_light_skin_ton": 32, "men_holding_hands_medium_dark_skin_tone_medium_skin_ton": 32, "men_holding_hands_medium_light_skin_ton": 32, "men_holding_hands_medium_light_skin_tone_dark_skin_ton": 32, "men_holding_hands_medium_light_skin_tone_light_skin_ton": 32, "men_holding_hands_medium_light_skin_tone_medium_dark_skin_ton": 32, "men_holding_hands_medium_light_skin_tone_medium_skin_ton": 32, "men_holding_hands_medium_skin_ton": 32, "men_holding_hands_medium_skin_tone_dark_skin_ton": 32, "men_holding_hands_medium_skin_tone_light_skin_ton": 32, "men_holding_hands_medium_skin_tone_medium_dark_skin_ton": 32, "men_holding_hands_medium_skin_tone_medium_light_skin_ton": 32, "men_holding_hands_tone1": 32, "men_holding_hands_tone1_tone2": 32, "men_holding_hands_tone1_tone3": 32, "men_holding_hands_tone1_tone4": 32, "men_holding_hands_tone1_tone5": 32, "men_holding_hands_tone2": 32, "men_holding_hands_tone2_tone1": 32, "men_holding_hands_tone2_tone3": 32, "men_holding_hands_tone2_tone4": 32, "men_holding_hands_tone2_tone5": 32, "men_holding_hands_tone3": 32, "men_holding_hands_tone3_tone1": 32, "men_holding_hands_tone3_tone2": 32, "men_holding_hands_tone3_tone4": 32, "men_holding_hands_tone3_tone5": 32, "men_holding_hands_tone4": 32, "men_holding_hands_tone4_tone1": 32, "men_holding_hands_tone4_tone2": 32, "men_holding_hands_tone4_tone3": 32, "men_holding_hands_tone4_tone5": 32, "men_holding_hands_tone5": 32, "men_holding_hands_tone5_tone1": 32, "men_holding_hands_tone5_tone2": 32, "men_holding_hands_tone5_tone3": 32, "men_holding_hands_tone5_tone4": 32, "men_with_bunny_ears_parti": 32, "men_wrestl": 32, "mending_heart": 32, "menorah": 32, "men": [32, 382, 438, 561], "mermaid": 32, "mermaid_dark_skin_ton": 32, "mermaid_light_skin_ton": 32, "mermaid_medium_dark_skin_ton": 32, "mermaid_medium_light_skin_ton": 32, "mermaid_medium_skin_ton": 32, "mermaid_tone1": 32, "mermaid_tone2": 32, "mermaid_tone3": 32, "mermaid_tone4": 32, "mermaid_tone5": 32, "merman": 32, "merman_dark_skin_ton": 32, "merman_light_skin_ton": 32, "merman_medium_dark_skin_ton": 32, "merman_medium_light_skin_ton": 32, "merman_medium_skin_ton": 32, "merman_tone1": 32, "merman_tone2": 32, "merman_tone3": 32, "merman_tone4": 32, "merman_tone5": 32, "merperson": 32, "merperson_dark_skin_ton": 32, "merperson_light_skin_ton": 32, "merperson_medium_dark_skin_ton": 32, "merperson_medium_light_skin_ton": 32, "merperson_medium_skin_ton": 32, "merperson_tone1": 32, "merperson_tone2": 32, "merperson_tone3": 32, "merperson_tone4": 32, "merperson_tone5": 32, "metal_tone1": 32, "metal_tone2": 32, "metal_tone3": 32, "metal_tone4": 32, "metal_tone5": 32, "metro": 32, "mexico": 32, "mf": [32, 223, 1057], "mg": 32, "mh": 32, "microb": 32, "micronesia": 32, "microphone2": 32, "microphon": [32, 156, 158], "microscop": 32, "middle_finger_tone1": 32, "middle_finger_tone2": 32, "middle_finger_tone3": 32, "middle_finger_tone4": 32, "middle_finger_tone5": 32, "military_helmet": 32, "military_med": 32, "milk": 32, "milk_glass": 32, "milky_wai": 32, "minibu": 32, "minidisc": 32, "mirror": 32, "ml": 32, "mm": [32, 443], "mn": 32, "mo": [32, 552], "mobile_phon": 32, "mobile_phone_off": 32, "moldova": 32, "monaco": 32, "money_mouth": 32, "money_mouth_fac": 32, "money_with_w": 32, "moneybag": 32, "mongolia": 32, "monkei": 32, "monkey_fac": 32, "monorail": 32, "montenegro": 32, "montserrat": 32, "moon": 32, "moon_cak": 32, "morocco": 32, "mortar_board": 32, "mosqu": 32, "mosquito": 32, "mother_christma": 32, "mother_christmas_tone1": 32, "mother_christmas_tone2": 32, "mother_christmas_tone3": 32, "mother_christmas_tone4": 32, "mother_christmas_tone5": 32, "motor_boat": 32, "motor_scoot": 32, "motorbik": 32, "motorboat": 32, "motorcycl": 32, "motorized_wheelchair": 32, "motorwai": 32, "mount_fuji": 32, "mountain": 32, "mountain_bicyclist": 32, "mountain_bicyclist_tone1": 32, "mountain_bicyclist_tone2": 32, "mountain_bicyclist_tone3": 32, "mountain_bicyclist_tone4": 32, "mountain_bicyclist_tone5": 32, "mountain_biking_man": 32, "mountain_biking_woman": 32, "mountain_cablewai": 32, "mountain_railwai": 32, "mountain_snow": 32, "mouse2": 32, "mous": [32, 151, 156, 862, 1038, 1046], "mouse_three_button": 32, "mouse_trap": 32, "movie_camera": 32, "moyai": 32, "mozambiqu": 32, "mp": [32, 38], "mq": [32, 968, 969], "mr": [32, 114, 220, 231, 239, 243, 1062], "mrs_clau": 32, "mrs_claus_tone1": 32, "mrs_claus_tone2": 32, "mrs_claus_tone3": 32, "mrs_claus_tone4": 32, "mrs_claus_tone5": 32, "mt": [32, 344, 972, 973], "mu": [32, 243], "muscle_tone1": 32, "muscle_tone2": 32, "muscle_tone3": 32, "muscle_tone4": 32, "muscle_tone5": 32, "mushroom": 32, "musical_keyboard": 32, "musical_not": 32, "musical_scor": 32, "mute": 32, "mv": [32, 99, 114, 191, 193, 257, 266, 267, 287, 288, 335, 340, 755, 775, 832, 869, 882, 898, 1159], "mw": 32, "mx": 32, "mx_clau": 32, "mx_claus_dark_skin_ton": 32, "mx_claus_light_skin_ton": 32, "mx_claus_medium_dark_skin_ton": 32, "mx_claus_medium_light_skin_ton": 32, "mx_claus_medium_skin_ton": 32, "mx_claus_tone1": 32, "mx_claus_tone2": 32, "mx_claus_tone3": 32, "mx_claus_tone4": 32, "mx_claus_tone5": 32, "myanmar": 32, "mz": 32, "na": [32, 220, 223, 226, 239, 246, 264], "nail_car": 32, "nail_care_tone1": 32, "nail_care_tone2": 32, "nail_care_tone3": 32, "nail_care_tone4": 32, "nail_care_tone5": 32, "name_badg": 32, "namibia": 32, "national_park": 32, "nauru": 32, "nauseated_fac": 32, "nazar_amulet": 32, "nc": [32, 191, 193, 266, 287, 288, 364, 925], "ne": [32, 562, 580, 582, 940], "neckti": 32, "negative_squared_cross_mark": 32, "nepal": 32, "nerd_fac": 32, "nesting_dol": 32, "netherland": [32, 152, 1025], "neutral_fac": 32, "new_caledonia": 32, "new_moon": 32, "new_moon_with_fac": 32, "new_zealand": 32, "newspaper2": 32, "newspap": [32, 43], "newspaper_rol": 32, "next_track": 32, "next_track_button": 32, "nf": [32, 223, 239, 246, 249, 264, 271, 281, 285, 307, 313, 919], "ng": [32, 152, 163, 267, 755, 898, 977, 979, 986, 987, 988], "ni": 32, "nicaragua": 32, "niger": 32, "nigeria": 32, "night_with_star": 32, "nine": [32, 171, 184, 194, 202, 220, 231, 335], "ninja_dark_skin_ton": 32, "ninja_light_skin_ton": 32, "ninja_medium_dark_skin_ton": 32, "ninja_medium_light_skin_ton": 32, "ninja_medium_skin_ton": 32, "ninja_tone1": 32, "ninja_tone2": 32, "ninja_tone3": 32, "ninja_tone4": 32, "ninja_tone5": 32, "niue": 32, "nl": [32, 364], "no_bel": 32, "no_bicycl": 32, "no_entri": 32, "no_entry_sign": 32, "no_good": 32, "no_good_man": 32, "no_good_tone1": 32, "no_good_tone2": 32, "no_good_tone3": 32, "no_good_tone4": 32, "no_good_tone5": 32, "no_good_woman": 32, "no_mobile_phon": 32, "no_mouth": 32, "no_pedestrian": 32, "no_smok": 32, "non": [32, 78, 114, 115, 129, 131, 133, 147, 153, 154, 161, 178, 191, 213, 231, 239, 243, 248, 267, 276, 278, 285, 307, 398, 420, 438, 454, 457, 508, 551, 553, 560, 562, 565, 573, 577, 578, 617, 632, 667, 673, 714, 718, 719, 734, 740, 754, 755, 788, 794, 807, 818, 839, 842, 844, 884, 909, 910, 918, 936, 951, 955, 962, 970, 995, 999, 1011, 1012, 1035, 1048, 1068, 1085, 1121, 1122, 1127, 1141, 1156], "potable_wat": 32, "norfolk_island": 32, "north_korea": 32, "northern_mariana_island": 32, "norwai": 32, "nose": 32, "nose_tone1": 32, "nose_tone2": 32, "nose_tone3": 32, "nose_tone4": 32, "nose_tone5": 32, "notebook_with_decorative_cov": 32, "notepad_spir": 32, "np": [32, 174, 201, 269, 303, 444, 1103, 1122], "nr": [32, 199, 243, 761], "nu": 32, "nut_and_bolt": 32, "nz": 32, "o2": [32, 432], "ocean": 32, "octagonal_sign": 32, "octopu": 32, "oden": 32, "office_work": 32, "office_worker_dark_skin_ton": 32, "office_worker_light_skin_ton": 32, "office_worker_medium_dark_skin_ton": 32, "office_worker_medium_light_skin_ton": 32, "office_worker_medium_skin_ton": 32, "office_worker_tone1": 32, "office_worker_tone2": 32, "office_worker_tone3": 32, "office_worker_tone4": 32, "office_worker_tone5": 32, "oil": 32, "oil_drum": 32, "ok": [32, 53, 65, 120, 150, 152, 153, 157, 166, 183, 199, 229, 269, 331, 372, 408, 426, 428, 458, 467, 517, 518, 519, 564, 572, 575, 580, 585, 595, 647, 654, 665, 673, 688, 707, 710, 719, 720, 736, 816, 907, 934, 952, 979, 990, 1008, 1011, 1024, 1140], "ok_hand_tone1": 32, "ok_hand_tone2": 32, "ok_hand_tone3": 32, "ok_hand_tone4": 32, "ok_hand_tone5": 32, "ok_man": 32, "ok_woman": 32, "ok_woman_tone1": 32, "ok_woman_tone2": 32, "ok_woman_tone3": 32, "ok_woman_tone4": 32, "ok_woman_tone5": 32, "old_kei": 32, "older_adult": 32, "older_adult_dark_skin_ton": 32, "older_adult_light_skin_ton": 32, "older_adult_medium_dark_skin_ton": 32, "older_adult_medium_light_skin_ton": 32, "older_adult_medium_skin_ton": 32, "older_adult_tone1": 32, "older_adult_tone2": 32, "older_adult_tone3": 32, "older_adult_tone4": 32, "older_adult_tone5": 32, "older_man": 32, "older_man_tone1": 32, "older_man_tone2": 32, "older_man_tone3": 32, "older_man_tone4": 32, "older_man_tone5": 32, "older_woman": 32, "older_woman_tone1": 32, "older_woman_tone2": 32, "older_woman_tone3": 32, "older_woman_tone4": 32, "older_woman_tone5": 32, "oliv": [32, 215], "om": [32, 698], "om_symbol": 32, "oman": 32, "oncoming_automobil": 32, "oncoming_bu": 32, "oncoming_police_car": 32, "oncoming_taxi": 32, "one_piece_swimsuit": 32, "onion": 32, "open_file_fold": 32, "open_hand": 32, "open_hands_tone1": 32, "open_hands_tone2": 32, "open_hands_tone3": 32, "open_hands_tone4": 32, "open_hands_tone5": 32, "open_mouth": 32, "open_umbrella": 32, "ophiuchu": 32, "orange_book": 32, "orange_circl": 32, "orange_heart": 32, "orange_squar": 32, "orangutan": 32, "orthodox_cross": 32, "otter": 32, "outbox_trai": 32, "owl": 32, "ox": 32, "oyster": 32, "pa": [32, 220, 226, 236, 239, 408, 592, 594, 595], "paella": 32, "page_facing_up": 32, "page_with_curl": 32, "pager": [32, 894], "paintbrush": 32, "pakistan": 32, "palau": 32, "palestinian_territori": 32, "palm_tre": 32, "palms_up_togeth": 32, "palms_up_together_dark_skin_ton": 32, "palms_up_together_light_skin_ton": 32, "palms_up_together_medium_dark_skin_ton": 32, "palms_up_together_medium_light_skin_ton": 32, "palms_up_together_medium_skin_ton": 32, "palms_up_together_tone1": 32, "palms_up_together_tone2": 32, "palms_up_together_tone3": 32, "palms_up_together_tone4": 32, "palms_up_together_tone5": 32, "panama": 32, "pancak": 32, "panda_fac": 32, "paperclip": 32, "papua_new_guinea": 32, "parachut": 32, "paraguai": 32, "parasol_on_ground": 32, "park": 32, "parrot": 32, "part_alternation_mark": 32, "partly_sunni": 32, "partying_fac": 32, "passenger_ship": 32, "passport_control": 32, "pause_button": 32, "paw_print": 32, "pe": 32, "peac": 32, "peace_symbol": 32, "peach": 32, "peacock": 32, "peanut": 32, "pear": 32, "pen": 32, "pen_ballpoint": 32, "pen_fountain": 32, "pencil2": 32, "pencil": 32, "pensiv": 32, "people_holding_hand": 32, "people_holding_hands_dark_skin_ton": 32, "people_holding_hands_dark_skin_tone_light_skin_ton": 32, "people_holding_hands_dark_skin_tone_medium_dark_skin_ton": 32, "people_holding_hands_dark_skin_tone_medium_light_skin_ton": 32, "people_holding_hands_dark_skin_tone_medium_skin_ton": 32, "people_holding_hands_light_skin_ton": 32, "people_holding_hands_light_skin_tone_dark_skin_ton": 32, "people_holding_hands_light_skin_tone_medium_dark_skin_ton": 32, "people_holding_hands_light_skin_tone_medium_light_skin_ton": 32, "people_holding_hands_light_skin_tone_medium_skin_ton": 32, "people_holding_hands_medium_dark_skin_ton": 32, "people_holding_hands_medium_dark_skin_tone_dark_skin_ton": 32, "people_holding_hands_medium_dark_skin_tone_light_skin_ton": 32, "people_holding_hands_medium_dark_skin_tone_medium_light_skin_ton": 32, "people_holding_hands_medium_dark_skin_tone_medium_skin_ton": 32, "people_holding_hands_medium_light_skin_ton": 32, "people_holding_hands_medium_light_skin_tone_dark_skin_ton": 32, "people_holding_hands_medium_light_skin_tone_light_skin_ton": 32, "people_holding_hands_medium_light_skin_tone_medium_dark_skin_ton": 32, "people_holding_hands_medium_light_skin_tone_medium_skin_ton": 32, "people_holding_hands_medium_skin_ton": 32, "people_holding_hands_medium_skin_tone_dark_skin_ton": 32, "people_holding_hands_medium_skin_tone_light_skin_ton": 32, "people_holding_hands_medium_skin_tone_medium_dark_skin_ton": 32, "people_holding_hands_medium_skin_tone_medium_light_skin_ton": 32, "people_holding_hands_tone1": 32, "people_holding_hands_tone1_tone2": 32, "people_holding_hands_tone1_tone3": 32, "people_holding_hands_tone1_tone4": 32, "people_holding_hands_tone1_tone5": 32, "people_holding_hands_tone2": 32, "people_holding_hands_tone2_tone1": 32, "people_holding_hands_tone2_tone3": 32, "people_holding_hands_tone2_tone4": 32, "people_holding_hands_tone2_tone5": 32, "people_holding_hands_tone3": 32, "people_holding_hands_tone3_tone1": 32, "people_holding_hands_tone3_tone2": 32, "people_holding_hands_tone3_tone4": 32, "people_holding_hands_tone3_tone5": 32, "people_holding_hands_tone4": 32, "people_holding_hands_tone4_tone1": 32, "people_holding_hands_tone4_tone2": 32, "people_holding_hands_tone4_tone3": 32, "people_holding_hands_tone4_tone5": 32, "people_holding_hands_tone5": 32, "people_holding_hands_tone5_tone1": 32, "people_holding_hands_tone5_tone2": 32, "people_holding_hands_tone5_tone3": 32, "people_holding_hands_tone5_tone4": 32, "people_hug": 32, "people_with_bunny_ears_parti": 32, "people_wrestl": 32, "performing_art": 32, "persever": 32, "person_bald": 32, "person_bik": 32, "person_biking_tone1": 32, "person_biking_tone2": 32, "person_biking_tone3": 32, "person_biking_tone4": 32, "person_biking_tone5": 32, "person_bouncing_bal": 32, "person_bouncing_ball_tone1": 32, "person_bouncing_ball_tone2": 32, "person_bouncing_ball_tone3": 32, "person_bouncing_ball_tone4": 32, "person_bouncing_ball_tone5": 32, "person_bow": 32, "person_bowing_tone1": 32, "person_bowing_tone2": 32, "person_bowing_tone3": 32, "person_bowing_tone4": 32, "person_bowing_tone5": 32, "person_climb": 32, "person_climbing_dark_skin_ton": 32, "person_climbing_light_skin_ton": 32, "person_climbing_medium_dark_skin_ton": 32, "person_climbing_medium_light_skin_ton": 32, "person_climbing_medium_skin_ton": 32, "person_climbing_tone1": 32, "person_climbing_tone2": 32, "person_climbing_tone3": 32, "person_climbing_tone4": 32, "person_climbing_tone5": 32, "person_curly_hair": 32, "person_dark_skin_tone_bald": 32, "person_dark_skin_tone_curly_hair": 32, "person_dark_skin_tone_red_hair": 32, "person_dark_skin_tone_white_hair": 32, "person_doing_cartwheel": 32, "person_doing_cartwheel_tone1": 32, "person_doing_cartwheel_tone2": 32, "person_doing_cartwheel_tone3": 32, "person_doing_cartwheel_tone4": 32, "person_doing_cartwheel_tone5": 32, "person_facepalm": 32, "person_facepalming_tone1": 32, "person_facepalming_tone2": 32, "person_facepalming_tone3": 32, "person_facepalming_tone4": 32, "person_facepalming_tone5": 32, "person_feeding_babi": 32, "person_feeding_baby_dark_skin_ton": 32, "person_feeding_baby_light_skin_ton": 32, "person_feeding_baby_medium_dark_skin_ton": 32, "person_feeding_baby_medium_light_skin_ton": 32, "person_feeding_baby_medium_skin_ton": 32, "person_feeding_baby_tone1": 32, "person_feeding_baby_tone2": 32, "person_feeding_baby_tone3": 32, "person_feeding_baby_tone4": 32, "person_feeding_baby_tone5": 32, "person_fenc": 32, "person_frown": 32, "person_frowning_tone1": 32, "person_frowning_tone2": 32, "person_frowning_tone3": 32, "person_frowning_tone4": 32, "person_frowning_tone5": 32, "person_gesturing_no": 32, "person_gesturing_no_tone1": 32, "person_gesturing_no_tone2": 32, "person_gesturing_no_tone3": 32, "person_gesturing_no_tone4": 32, "person_gesturing_no_tone5": 32, "person_gesturing_ok": 32, "person_gesturing_ok_tone1": 32, "person_gesturing_ok_tone2": 32, "person_gesturing_ok_tone3": 32, "person_gesturing_ok_tone4": 32, "person_gesturing_ok_tone5": 32, "person_getting_haircut": 32, "person_getting_haircut_tone1": 32, "person_getting_haircut_tone2": 32, "person_getting_haircut_tone3": 32, "person_getting_haircut_tone4": 32, "person_getting_haircut_tone5": 32, "person_getting_massag": 32, "person_getting_massage_tone1": 32, "person_getting_massage_tone2": 32, "person_getting_massage_tone3": 32, "person_getting_massage_tone4": 32, "person_getting_massage_tone5": 32, "person_golf": 32, "person_golfing_dark_skin_ton": 32, "person_golfing_light_skin_ton": 32, "person_golfing_medium_dark_skin_ton": 32, "person_golfing_medium_light_skin_ton": 32, "person_golfing_medium_skin_ton": 32, "person_golfing_tone1": 32, "person_golfing_tone2": 32, "person_golfing_tone3": 32, "person_golfing_tone4": 32, "person_golfing_tone5": 32, "person_in_bed_dark_skin_ton": 32, "person_in_bed_light_skin_ton": 32, "person_in_bed_medium_dark_skin_ton": 32, "person_in_bed_medium_light_skin_ton": 32, "person_in_bed_medium_skin_ton": 32, "person_in_bed_tone1": 32, "person_in_bed_tone2": 32, "person_in_bed_tone3": 32, "person_in_bed_tone4": 32, "person_in_bed_tone5": 32, "person_in_lotus_posit": 32, "person_in_lotus_position_dark_skin_ton": 32, "person_in_lotus_position_light_skin_ton": 32, "person_in_lotus_position_medium_dark_skin_ton": 32, "person_in_lotus_position_medium_light_skin_ton": 32, "person_in_lotus_position_medium_skin_ton": 32, "person_in_lotus_position_tone1": 32, "person_in_lotus_position_tone2": 32, "person_in_lotus_position_tone3": 32, "person_in_lotus_position_tone4": 32, "person_in_lotus_position_tone5": 32, "person_in_manual_wheelchair": 32, "person_in_manual_wheelchair_dark_skin_ton": 32, "person_in_manual_wheelchair_light_skin_ton": 32, "person_in_manual_wheelchair_medium_dark_skin_ton": 32, "person_in_manual_wheelchair_medium_light_skin_ton": 32, "person_in_manual_wheelchair_medium_skin_ton": 32, "person_in_manual_wheelchair_tone1": 32, "person_in_manual_wheelchair_tone2": 32, "person_in_manual_wheelchair_tone3": 32, "person_in_manual_wheelchair_tone4": 32, "person_in_manual_wheelchair_tone5": 32, "person_in_motorized_wheelchair": 32, "person_in_motorized_wheelchair_dark_skin_ton": 32, "person_in_motorized_wheelchair_light_skin_ton": 32, "person_in_motorized_wheelchair_medium_dark_skin_ton": 32, "person_in_motorized_wheelchair_medium_light_skin_ton": 32, "person_in_motorized_wheelchair_medium_skin_ton": 32, "person_in_motorized_wheelchair_tone1": 32, "person_in_motorized_wheelchair_tone2": 32, "person_in_motorized_wheelchair_tone3": 32, "person_in_motorized_wheelchair_tone4": 32, "person_in_motorized_wheelchair_tone5": 32, "person_in_steamy_room": 32, "person_in_steamy_room_dark_skin_ton": 32, "person_in_steamy_room_light_skin_ton": 32, "person_in_steamy_room_medium_dark_skin_ton": 32, "person_in_steamy_room_medium_light_skin_ton": 32, "person_in_steamy_room_medium_skin_ton": 32, "person_in_steamy_room_tone1": 32, "person_in_steamy_room_tone2": 32, "person_in_steamy_room_tone3": 32, "person_in_steamy_room_tone4": 32, "person_in_steamy_room_tone5": 32, "person_in_tuxedo": 32, "person_in_tuxedo_tone1": 32, "person_in_tuxedo_tone2": 32, "person_in_tuxedo_tone3": 32, "person_in_tuxedo_tone4": 32, "person_in_tuxedo_tone5": 32, "person_juggl": 32, "person_juggling_tone1": 32, "person_juggling_tone2": 32, "person_juggling_tone3": 32, "person_juggling_tone4": 32, "person_juggling_tone5": 32, "person_kneel": 32, "person_kneeling_dark_skin_ton": 32, "person_kneeling_light_skin_ton": 32, "person_kneeling_medium_dark_skin_ton": 32, "person_kneeling_medium_light_skin_ton": 32, "person_kneeling_medium_skin_ton": 32, "person_kneeling_tone1": 32, "person_kneeling_tone2": 32, "person_kneeling_tone3": 32, "person_kneeling_tone4": 32, "person_kneeling_tone5": 32, "person_lifting_weight": 32, "person_lifting_weights_tone1": 32, "person_lifting_weights_tone2": 32, "person_lifting_weights_tone3": 32, "person_lifting_weights_tone4": 32, "person_lifting_weights_tone5": 32, "person_light_skin_tone_bald": 32, "person_light_skin_tone_curly_hair": 32, "person_light_skin_tone_red_hair": 32, "person_light_skin_tone_white_hair": 32, "person_medium_dark_skin_tone_bald": 32, "person_medium_dark_skin_tone_curly_hair": 32, "person_medium_dark_skin_tone_red_hair": 32, "person_medium_dark_skin_tone_white_hair": 32, "person_medium_light_skin_tone_bald": 32, "person_medium_light_skin_tone_curly_hair": 32, "person_medium_light_skin_tone_red_hair": 32, "person_medium_light_skin_tone_white_hair": 32, "person_medium_skin_tone_bald": 32, "person_medium_skin_tone_curly_hair": 32, "person_medium_skin_tone_red_hair": 32, "person_medium_skin_tone_white_hair": 32, "person_mountain_bik": 32, "person_mountain_biking_tone1": 32, "person_mountain_biking_tone2": 32, "person_mountain_biking_tone3": 32, "person_mountain_biking_tone4": 32, "person_mountain_biking_tone5": 32, "person_playing_handbal": 32, "person_playing_handball_tone1": 32, "person_playing_handball_tone2": 32, "person_playing_handball_tone3": 32, "person_playing_handball_tone4": 32, "person_playing_handball_tone5": 32, "person_playing_water_polo": 32, "person_playing_water_polo_tone1": 32, "person_playing_water_polo_tone2": 32, "person_playing_water_polo_tone3": 32, "person_playing_water_polo_tone4": 32, "person_playing_water_polo_tone5": 32, "person_pout": 32, "person_pouting_tone1": 32, "person_pouting_tone2": 32, "person_pouting_tone3": 32, "person_pouting_tone4": 32, "person_pouting_tone5": 32, "person_raising_hand": 32, "person_raising_hand_tone1": 32, "person_raising_hand_tone2": 32, "person_raising_hand_tone3": 32, "person_raising_hand_tone4": 32, "person_raising_hand_tone5": 32, "person_red_hair": 32, "person_rowing_boat": 32, "person_rowing_boat_tone1": 32, "person_rowing_boat_tone2": 32, "person_rowing_boat_tone3": 32, "person_rowing_boat_tone4": 32, "person_rowing_boat_tone5": 32, "person_run": 32, "person_running_tone1": 32, "person_running_tone2": 32, "person_running_tone3": 32, "person_running_tone4": 32, "person_running_tone5": 32, "person_shrug": 32, "person_shrugging_tone1": 32, "person_shrugging_tone2": 32, "person_shrugging_tone3": 32, "person_shrugging_tone4": 32, "person_shrugging_tone5": 32, "person_stand": 32, "person_standing_dark_skin_ton": 32, "person_standing_light_skin_ton": 32, "person_standing_medium_dark_skin_ton": 32, "person_standing_medium_light_skin_ton": 32, "person_standing_medium_skin_ton": 32, "person_standing_tone1": 32, "person_standing_tone2": 32, "person_standing_tone3": 32, "person_standing_tone4": 32, "person_standing_tone5": 32, "person_surf": 32, "person_surfing_tone1": 32, "person_surfing_tone2": 32, "person_surfing_tone3": 32, "person_surfing_tone4": 32, "person_surfing_tone5": 32, "person_swim": 32, "person_swimming_tone1": 32, "person_swimming_tone2": 32, "person_swimming_tone3": 32, "person_swimming_tone4": 32, "person_swimming_tone5": 32, "person_tipping_hand": 32, "person_tipping_hand_tone1": 32, "person_tipping_hand_tone2": 32, "person_tipping_hand_tone3": 32, "person_tipping_hand_tone4": 32, "person_tipping_hand_tone5": 32, "person_tone1_bald": 32, "person_tone1_curly_hair": 32, "person_tone1_red_hair": 32, "person_tone1_white_hair": 32, "person_tone2_bald": 32, "person_tone2_curly_hair": 32, "person_tone2_red_hair": 32, "person_tone2_white_hair": 32, "person_tone3_bald": 32, "person_tone3_curly_hair": 32, "person_tone3_red_hair": 32, "person_tone3_white_hair": 32, "person_tone4_bald": 32, "person_tone4_curly_hair": 32, "person_tone4_red_hair": 32, "person_tone4_white_hair": 32, "person_tone5_bald": 32, "person_tone5_curly_hair": 32, "person_tone5_red_hair": 32, "person_tone5_white_hair": 32, "person_walk": 32, "person_walking_tone1": 32, "person_walking_tone2": 32, "person_walking_tone3": 32, "person_walking_tone4": 32, "person_walking_tone5": 32, "person_wearing_turban": 32, "person_wearing_turban_tone1": 32, "person_wearing_turban_tone2": 32, "person_wearing_turban_tone3": 32, "person_wearing_turban_tone4": 32, "person_wearing_turban_tone5": 32, "person_white_hair": 32, "person_with_bal": 32, "person_with_ball_tone1": 32, "person_with_ball_tone2": 32, "person_with_ball_tone3": 32, "person_with_ball_tone4": 32, "person_with_ball_tone5": 32, "person_with_blond_hair": 32, "person_with_blond_hair_tone1": 32, "person_with_blond_hair_tone2": 32, "person_with_blond_hair_tone3": 32, "person_with_blond_hair_tone4": 32, "person_with_blond_hair_tone5": 32, "person_with_pouting_fac": 32, "person_with_pouting_face_tone1": 32, "person_with_pouting_face_tone2": 32, "person_with_pouting_face_tone3": 32, "person_with_pouting_face_tone4": 32, "person_with_pouting_face_tone5": 32, "person_with_probing_can": 32, "person_with_probing_cane_dark_skin_ton": 32, "person_with_probing_cane_light_skin_ton": 32, "person_with_probing_cane_medium_dark_skin_ton": 32, "person_with_probing_cane_medium_light_skin_ton": 32, "person_with_probing_cane_medium_skin_ton": 32, "person_with_probing_cane_tone1": 32, "person_with_probing_cane_tone2": 32, "person_with_probing_cane_tone3": 32, "person_with_probing_cane_tone4": 32, "person_with_probing_cane_tone5": 32, "person_with_veil": 32, "person_with_veil_tone1": 32, "person_with_veil_tone2": 32, "person_with_veil_tone3": 32, "person_with_veil_tone4": 32, "person_with_veil_tone5": 32, "peru": 32, "petri_dish": 32, "pf": [32, 154, 736], "pg": [32, 436], "ph": 32, "philippin": 32, "phone": 32, "pick": [32, 78, 144, 154, 161, 212, 446, 519, 958, 988, 993], "pickup_truck": 32, "pie": 32, "pig2": 32, "pig_nos": 32, "pill": 32, "pilot": 32, "pilot_dark_skin_ton": 32, "pilot_light_skin_ton": 32, "pilot_medium_dark_skin_ton": 32, "pilot_medium_light_skin_ton": 32, "pilot_medium_skin_ton": 32, "pilot_tone1": 32, "pilot_tone2": 32, "pilot_tone3": 32, "pilot_tone4": 32, "pilot_tone5": 32, "pinched_fing": 32, "pinched_fingers_dark_skin_ton": 32, "pinched_fingers_light_skin_ton": 32, "pinched_fingers_medium_dark_skin_ton": 32, "pinched_fingers_medium_light_skin_ton": 32, "pinched_fingers_medium_skin_ton": 32, "pinched_fingers_tone1": 32, "pinched_fingers_tone2": 32, "pinched_fingers_tone3": 32, "pinched_fingers_tone4": 32, "pinched_fingers_tone5": 32, "pinching_hand": 32, "pinching_hand_dark_skin_ton": 32, "pinching_hand_light_skin_ton": 32, "pinching_hand_medium_dark_skin_ton": 32, "pinching_hand_medium_light_skin_ton": 32, "pinching_hand_medium_skin_ton": 32, "pinching_hand_tone1": 32, "pinching_hand_tone2": 32, "pinching_hand_tone3": 32, "pinching_hand_tone4": 32, "pinching_hand_tone5": 32, "pineappl": [32, 275], "ping_pong": 32, "pirate_flag": 32, "pisc": 32, "pitcairn_island": 32, "pizza": 32, "pi\u00f1ata": 32, "pk": 32, "pl": 32, "placard": 32, "place_of_worship": 32, "plate_with_cutleri": 32, "play_or_pause_button": 32, "play_paus": 32, "pleading_fac": 32, "plunger": 32, "pm": [32, 38], "pn": 32, "point_down": 32, "point_down_tone1": 32, "point_down_tone2": 32, "point_down_tone3": 32, "point_down_tone4": 32, "point_down_tone5": 32, "point_left": 32, "point_left_tone1": 32, "point_left_tone2": 32, "point_left_tone3": 32, "point_left_tone4": 32, "point_left_tone5": 32, "point_right": 32, "point_right_tone1": 32, "point_right_tone2": 32, "point_right_tone3": 32, "point_right_tone4": 32, "point_right_tone5": 32, "point_up_2": 32, "point_up_2_tone1": 32, "point_up_2_tone2": 32, "point_up_2_tone3": 32, "point_up_2_tone4": 32, "point_up_2_tone5": 32, "point_up_tone1": 32, "point_up_tone2": 32, "point_up_tone3": 32, "point_up_tone4": 32, "point_up_tone5": 32, "poland": 32, "polar_bear": 32, "police_car": 32, "police_offic": 32, "police_officer_tone1": 32, "police_officer_tone2": 32, "police_officer_tone3": 32, "police_officer_tone4": 32, "police_officer_tone5": 32, "policeman": 32, "policewoman": 32, "poo": 32, "poodl": 32, "poop": 32, "popcorn": 32, "portug": 32, "post_offic": 32, "postal_horn": 32, "postbox": 32, "potato": 32, "potted_pl": 32, "pouch": 32, "poultry_leg": 32, "pound": [32, 36], "pound_symbol": 32, "pouting_cat": 32, "pouting_man": 32, "pouting_woman": 32, "pr": [32, 35, 239, 254], "prai": 32, "pray_tone1": 32, "pray_tone2": 32, "pray_tone3": 32, "pray_tone4": 32, "pray_tone5": 32, "prayer_bead": 32, "pregnant_woman": 32, "pregnant_woman_tone1": 32, "pregnant_woman_tone2": 32, "pregnant_woman_tone3": 32, "pregnant_woman_tone4": 32, "pregnant_woman_tone5": 32, "pretzel": 32, "previous_track": 32, "previous_track_button": 32, "princ": 32, "prince_tone1": 32, "prince_tone2": 32, "prince_tone3": 32, "prince_tone4": 32, "prince_tone5": 32, "princess": 32, "princess_tone1": 32, "princess_tone2": 32, "princess_tone3": 32, "princess_tone4": 32, "princess_tone5": 32, "printer": 32, "probing_can": 32, "projector": 32, "p": [32, 38, 63, 114, 131, 147, 151, 152, 156, 157, 163, 179, 191, 193, 194, 210, 223, 239, 243, 269, 271, 368, 402, 408, 411, 412, 415, 416, 420, 491, 516, 517, 519, 520, 562, 564, 567, 572, 573, 574, 575, 576, 578, 580, 581, 595, 603, 663, 666, 667, 670, 672, 675, 684, 685, 686, 688, 690, 691, 694, 695, 696, 702, 704, 705, 714, 718, 723, 734, 750, 753, 766, 802, 821, 829, 830, 839, 862, 864, 881, 884, 891, 901, 909, 918, 925, 936, 945, 960, 973, 988, 995, 997, 1057, 1135, 1159], "pt": [32, 722, 833, 960], "pud": 32, "puerto_rico": 32, "punch": 32, "punch_tone1": 32, "punch_tone2": 32, "punch_tone3": 32, "punch_tone4": 32, "punch_tone5": 32, "purple_circl": 32, "purple_heart": 32, "purple_squar": 32, "purs": 32, "pushpin": 32, "put_litter_in_its_plac": 32, "pw": 32, "qa": 32, "qatar": 32, "rabbit2": 32, "rabbit": 32, "raccoon": 32, "race_car": 32, "racehors": 32, "racing_car": 32, "racing_motorcycl": 32, "radio": 32, "radio_button": 32, "radioact": 32, "radioactive_sign": 32, "rage": 32, "railroad_track": 32, "railway_car": 32, "railway_track": 32, "rainbow": 32, "rainbow_flag": 32, "raised_back_of_hand": 32, "raised_back_of_hand_tone1": 32, "raised_back_of_hand_tone2": 32, "raised_back_of_hand_tone3": 32, "raised_back_of_hand_tone4": 32, "raised_back_of_hand_tone5": 32, "raised_hand": 32, "raised_hand_tone1": 32, "raised_hand_tone2": 32, "raised_hand_tone3": 32, "raised_hand_tone4": 32, "raised_hand_tone5": 32, "raised_hand_with_fingers_splai": 32, "raised_hand_with_fingers_splayed_tone1": 32, "raised_hand_with_fingers_splayed_tone2": 32, "raised_hand_with_fingers_splayed_tone3": 32, "raised_hand_with_fingers_splayed_tone4": 32, "raised_hand_with_fingers_splayed_tone5": 32, "raised_hand_with_part_between_middle_and_ring_fing": 32, "raised_hand_with_part_between_middle_and_ring_fingers_tone1": 32, "raised_hand_with_part_between_middle_and_ring_fingers_tone2": 32, "raised_hand_with_part_between_middle_and_ring_fingers_tone3": 32, "raised_hand_with_part_between_middle_and_ring_fingers_tone4": 32, "raised_hand_with_part_between_middle_and_ring_fingers_tone5": 32, "raised_hands_tone1": 32, "raised_hands_tone2": 32, "raised_hands_tone3": 32, "raised_hands_tone4": 32, "raised_hands_tone5": 32, "raising_hand": 32, "raising_hand_man": 32, "raising_hand_tone1": 32, "raising_hand_tone2": 32, "raising_hand_tone3": 32, "raising_hand_tone4": 32, "raising_hand_tone5": 32, "raising_hand_woman": 32, "ram": [32, 153, 154, 158, 276, 802, 838, 840, 924], "ramen": 32, "rat": 32, "razor": 32, "re": [32, 38, 63, 112, 119, 121, 153, 158, 190, 199, 202, 203, 213, 216, 223, 224, 226, 231, 233, 239, 243, 249, 251, 252, 261, 264, 268, 284, 285, 291, 313, 335, 340, 398, 444, 445, 454, 462, 487, 517, 564, 570, 688, 710, 771, 807, 816, 821, 863, 952, 973, 988, 992, 997, 1002, 1021, 1044, 1095, 1100], "receipt": 32, "record_button": 32, "recycl": 32, "red_car": 32, "red_circl": 32, "red_envelop": 32, "red_hair": 32, "red_squar": 32, "regional_indicator_a": 32, "regional_indicator_b": 32, "regional_indicator_c": 32, "regional_indicator_d": 32, "regional_indicator_": 32, "regional_indicator_f": 32, "regional_indicator_g": 32, "regional_indicator_h": 32, "regional_indicator_i": 32, "regional_indicator_j": 32, "regional_indicator_k": 32, "regional_indicator_l": 32, "regional_indicator_m": 32, "regional_indicator_n": 32, "regional_indicator_o": 32, "regional_indicator_p": 32, "regional_indicator_q": 32, "regional_indicator_r": 32, "regional_indicator_t": 32, "regional_indicator_u": 32, "regional_indicator_v": 32, "regional_indicator_w": 32, "regional_indicator_x": 32, "regional_indicator_z": 32, "regist": [32, 36, 38, 151, 161, 169, 194, 198, 226, 239, 285, 321, 384, 418, 469, 497, 518, 520, 527, 758, 765, 773, 780, 786, 798, 889, 906, 922, 926, 1027, 1116], "relax": 32, "reliev": [32, 57], "reminder_ribbon": 32, "repeat": [32, 43, 100, 114, 131, 141, 157, 212, 267, 342, 432, 444, 580, 755, 802, 832, 862, 866, 870, 873, 876, 881, 882, 898, 911, 938, 1035], "repeat_on": 32, "rescue_worker_helmet": 32, "restroom": 32, "reunion": 32, "reversed_hand_with_middle_finger_extend": 32, "reversed_hand_with_middle_finger_extended_tone1": 32, "reversed_hand_with_middle_finger_extended_tone2": 32, "reversed_hand_with_middle_finger_extended_tone3": 32, "reversed_hand_with_middle_finger_extended_tone4": 32, "reversed_hand_with_middle_finger_extended_tone5": 32, "revolving_heart": 32, "rewind": [32, 327, 710], "rhino": 32, "rhinocero": 32, "ribbon": 32, "rice": 32, "rice_bal": 32, "rice_crack": 32, "rice_scen": 32, "right_anger_bubbl": 32, "right_facing_fist": 32, "right_facing_fist_tone1": 32, "right_facing_fist_tone2": 32, "right_facing_fist_tone3": 32, "right_facing_fist_tone4": 32, "right_facing_fist_tone5": 32, "right_fist": 32, "right_fist_tone1": 32, "right_fist_tone2": 32, "right_fist_tone3": 32, "right_fist_tone4": 32, "right_fist_tone5": 32, "ring": [32, 35, 38, 862], "ringed_planet": 32, "ro": 32, "robot": [32, 239], "robot_fac": 32, "rock": [32, 280, 442, 992, 994, 1129], "rocket": [32, 158], "rofl": 32, "roll_ey": 32, "roll_of_pap": 32, "rolled_up_newspap": 32, "roller_coast": 32, "roller_sk": 32, "rolling_on_the_floor_laugh": 32, "romania": 32, "rooster": 32, "rosett": 32, "rotating_light": 32, "round_pushpin": 32, "rowboat": 32, "rowboat_tone1": 32, "rowboat_tone2": 32, "rowboat_tone3": 32, "rowboat_tone4": 32, "rowboat_tone5": 32, "rowing_man": 32, "rowing_woman": 32, "ru": 32, "rugby_footbal": 32, "runner": [32, 44, 1140, 1171], "runner_tone1": 32, "runner_tone2": 32, "runner_tone3": 32, "runner_tone4": 32, "runner_tone5": 32, "running_man": 32, "running_shirt_with_sash": 32, "running_woman": 32, "russia": [32, 1113], "rw": [32, 61, 63, 152, 153, 162, 170, 239, 249, 451, 753, 758, 766, 833, 844, 847, 858, 861, 881, 884, 899, 906, 907, 908, 910, 919, 930, 933, 934, 942, 970, 976, 977, 978, 988, 990, 991, 1027, 1055], "rwanda": 32, "safety_pin": 32, "safety_vest": 32, "sagittariu": 32, "sailboat": 32, "saint_martin": 32, "sake": 32, "salad": 32, "salt": [32, 858], "samoa": 32, "san_marino": 32, "sandal": 32, "sandwich": 32, "santa": 32, "santa_tone1": 32, "santa_tone2": 32, "santa_tone3": 32, "santa_tone4": 32, "santa_tone5": 32, "sao_tome_princip": 32, "sari": 32, "satellit": 32, "satellite_orbit": 32, "saudi": 32, "saudi_arabia": 32, "saudiarabia": 32, "sauropod": 32, "saxophon": 32, "sb": [32, 268], "sc": [32, 35], "scale": [32, 78, 183, 229, 243, 432, 906, 979, 992], "scarf": 32, "school": [32, 243, 503, 538, 1122, 1154], "school_satchel": 32, "scientist": [32, 183, 1024, 1105, 1106, 1107, 1114], "scientist_dark_skin_ton": 32, "scientist_light_skin_ton": 32, "scientist_medium_dark_skin_ton": 32, "scientist_medium_light_skin_ton": 32, "scientist_medium_skin_ton": 32, "scientist_tone1": 32, "scientist_tone2": 32, "scientist_tone3": 32, "scientist_tone4": 32, "scientist_tone5": 32, "scissor": 32, "scooter": 32, "scorpion": 32, "scorpiu": 32, "scotland": 32, "scream": [32, 212, 862], "scream_cat": 32, "screwdriv": 32, "scroll": [32, 157, 503], "sd": [32, 223, 239, 243, 246, 249, 264, 271, 281, 285, 307, 313, 802], "se": [32, 567], "seal": 32, "seat": 32, "second_plac": 32, "second_place_med": 32, "secret": [32, 647, 668, 915, 999, 1111], "see_no_evil": 32, "seedl": 32, "selfi": 32, "selfie_tone1": 32, "selfie_tone2": 32, "selfie_tone3": 32, "selfie_tone4": 32, "selfie_tone5": 32, "seneg": 32, "serbia": 32, "service_dog": 32, "seven": [32, 36, 84, 171, 184, 194, 202, 231, 335, 1067, 1078], "sewing_needl": 32, "seychel": 32, "sg": 32, "sh": [32, 61, 158, 162, 251, 775, 829, 830, 847, 908, 930, 940, 1087], "shaking_hand": 32, "shaking_hands_tone1": 32, "shaking_hands_tone2": 32, "shaking_hands_tone3": 32, "shaking_hands_tone4": 32, "shaking_hands_tone5": 32, "shallow_pan_of_food": 32, "shamrock": 32, "shark": 32, "shaved_ic": 32, "sheep": 32, "shelled_peanut": 32, "shield": [32, 151], "shinto_shrin": 32, "ship": [32, 156], "shirt": [32, 43, 148], "shit": [32, 210], "shop": [32, 275], "shopping_bag": 32, "shopping_cart": 32, "shopping_trollei": 32, "shower": 32, "shrimp": 32, "shrug": 32, "shrug_tone1": 32, "shrug_tone2": 32, "shrug_tone3": 32, "shrug_tone4": 32, "shrug_tone5": 32, "shushing_fac": 32, "si": 32, "sick": [32, 466], "sierra_leon": 32, "sign_of_the_horn": 32, "sign_of_the_horns_tone1": 32, "sign_of_the_horns_tone2": 32, "sign_of_the_horns_tone3": 32, "sign_of_the_horns_tone4": 32, "sign_of_the_horns_tone5": 32, "signal_strength": 32, "singapor": 32, "singer": 32, "singer_dark_skin_ton": 32, "singer_light_skin_ton": 32, "singer_medium_dark_skin_ton": 32, "singer_medium_light_skin_ton": 32, "singer_medium_skin_ton": 32, "singer_tone1": 32, "singer_tone2": 32, "singer_tone3": 32, "singer_tone4": 32, "singer_tone5": 32, "sint_maarten": 32, "six": [32, 171, 184, 194, 202, 220, 335, 1035], "six_pointed_star": 32, "sj": 32, "sk": 32, "skateboard": 32, "skeleton": [32, 154, 166, 445, 831], "ski": 32, "skier": 32, "skull": 32, "skull_and_crossbon": 32, "skull_crossbon": 32, "skunk": 32, "sl": [32, 327, 960], "sled": 32, "sleeping_accommod": 32, "sleeping_b": 32, "sleepi": 32, "sleuth_or_spi": 32, "sleuth_or_spy_tone1": 32, "sleuth_or_spy_tone2": 32, "sleuth_or_spy_tone3": 32, "sleuth_or_spy_tone4": 32, "sleuth_or_spy_tone5": 32, "slight_frown": 32, "slight_smil": 32, "slightly_frowning_fac": 32, "slightly_smiling_fac": 32, "slot_machin": 32, "sloth": 32, "slovakia": 32, "slovenia": [32, 218], "sm": 32, "small_airplan": 32, "small_blue_diamond": 32, "small_orange_diamond": 32, "small_red_triangl": 32, "small_red_triangle_down": 32, "smile": [32, 35], "smile_cat": 32, "smilei": [32, 63], "smiley_cat": 32, "smiling_face_with_3_heart": 32, "smiling_face_with_tear": 32, "smiling_imp": 32, "smirk": 32, "smirk_cat": 32, "smoke": 32, "sn": 32, "snail": 32, "snake": 32, "sneez": 32, "sneezing_fac": 32, "snow_capped_mountain": 32, "snowboard": 32, "snowboarder_dark_skin_ton": 32, "snowboarder_light_skin_ton": 32, "snowboarder_medium_dark_skin_ton": 32, "snowboarder_medium_light_skin_ton": 32, "snowboarder_medium_skin_ton": 32, "snowboarder_tone1": 32, "snowboarder_tone2": 32, "snowboarder_tone3": 32, "snowboarder_tone4": 32, "snowboarder_tone5": 32, "snowflak": 32, "snowman2": 32, "snowman": 32, "snowman_with_snow": 32, "sob": 32, "soccer": 32, "sock": 32, "softbal": 32, "solomon_island": 32, "somalia": 32, "soon": [32, 152, 153, 158, 567, 654, 802, 908, 960, 974, 1116], "sound": [32, 59, 62, 150, 154, 157, 158, 227, 724, 844, 899, 907, 908, 1134], "south_africa": 32, "south_georgia_south_sandwich_island": 32, "south_sudan": 32, "space_invad": 32, "spade": [32, 38], "spaghetti": [32, 119, 432, 443], "spain": 32, "sparkl": 32, "sparkler": 32, "sparkling_heart": 32, "speak_no_evil": 32, "speaker": [32, 740], "speaking_head": 32, "speaking_head_in_silhouett": 32, "speech_balloon": 32, "speech_left": 32, "speedboat": 32, "spider": 32, "spider_web": 32, "spiral_calendar": 32, "spiral_calendar_pad": 32, "spiral_note_pad": 32, "spiral_notepad": 32, "spong": 32, "spoon": 32, "sports_med": 32, "spy": 32, "spy_tone1": 32, "spy_tone2": 32, "spy_tone3": 32, "spy_tone4": 32, "spy_tone5": 32, "squeeze_bottl": 32, "squid": 32, "sr": [32, 223, 1057], "sri_lanka": 32, "st": [32, 217, 444, 970, 972, 973], "st_barthelemi": 32, "st_helena": 32, "st_kitts_nevi": 32, "st_lucia": 32, "st_pierre_miquelon": 32, "st_vincent_grenadin": 32, "stadium": 32, "star2": 32, "star": [32, 38, 604, 908, 990], "star_and_cresc": 32, "star_of_david": 32, "star_struck": 32, "station": 32, "statue_of_liberti": 32, "steam_locomot": 32, "stethoscop": 32, "stew": 32, "stop_button": 32, "stop_sign": 32, "stopwatch": 32, "straight_rul": 32, "strawberri": 32, "stuck_out_tongu": 32, "stuck_out_tongue_closed_ey": 32, "stuck_out_tongue_winking_ey": 32, "student": [32, 101, 106, 114, 131, 158, 251, 320, 321, 326, 327, 335, 1000, 1135], "student_dark_skin_ton": 32, "student_light_skin_ton": 32, "student_medium_dark_skin_ton": 32, "student_medium_light_skin_ton": 32, "student_medium_skin_ton": 32, "student_tone1": 32, "student_tone2": 32, "student_tone3": 32, "student_tone4": 32, "student_tone5": 32, "studio_microphon": 32, "stuffed_flatbread": 32, "stuffed_pita": 32, "sudan": 32, "sun_behind_large_cloud": 32, "sun_behind_rain_cloud": 32, "sun_behind_small_cloud": 32, "sun_with_fac": 32, "sunflow": 32, "sunni": [32, 109, 270, 273, 508, 519, 525, 527, 560, 755, 955, 999], "sunris": 32, "sunrise_over_mountain": 32, "superhero": 32, "superhero_dark_skin_ton": 32, "superhero_light_skin_ton": 32, "superhero_medium_dark_skin_ton": 32, "superhero_medium_light_skin_ton": 32, "superhero_medium_skin_ton": 32, "superhero_tone1": 32, "superhero_tone2": 32, "superhero_tone3": 32, "superhero_tone4": 32, "superhero_tone5": 32, "supervillain": 32, "supervillain_dark_skin_ton": 32, "supervillain_light_skin_ton": 32, "supervillain_medium_dark_skin_ton": 32, "supervillain_medium_light_skin_ton": 32, "supervillain_medium_skin_ton": 32, "supervillain_tone1": 32, "supervillain_tone2": 32, "supervillain_tone3": 32, "supervillain_tone4": 32, "supervillain_tone5": 32, "surfer": 32, "surfer_tone1": 32, "surfer_tone2": 32, "surfer_tone3": 32, "surfer_tone4": 32, "surfer_tone5": 32, "surfing_man": 32, "surfing_woman": 32, "surinam": 32, "sushi": 32, "suspension_railwai": 32, "sv": [32, 486, 487], "swan": 32, "swaziland": 32, "sweat": 32, "sweat_drop": 32, "sweat_smil": 32, "sweden": 32, "sweet_potato": 32, "swimmer": 32, "swimmer_tone1": 32, "swimmer_tone2": 32, "swimmer_tone3": 32, "swimmer_tone4": 32, "swimmer_tone5": 32, "swimming_man": 32, "swimming_woman": 32, "switzerland": 32, "sx": 32, "symbol": [32, 33, 38, 114, 162, 191, 212, 220, 226, 229, 236, 239, 257, 266, 267, 287, 288, 373, 388, 397, 404, 410, 414, 417, 421, 424, 425, 430, 434, 439, 440, 662, 700, 706, 752, 753, 754, 755, 758, 777, 780, 802, 832, 847, 862, 882, 884, 898, 907, 1007], "synagogu": 32, "syria": 32, "syring": 32, "sz": [32, 153, 156], "t_rex": 32, "ta": 32, "table_tenni": 32, "taco": 32, "tada": 32, "taiwan": 32, "tajikistan": 32, "takeout_box": 32, "tamal": 32, "tanabata_tre": 32, "tangerin": 32, "tanzania": 32, "tauru": 32, "taxi": 32, "tc": 32, "td": [32, 215], "tea": 32, "teacher": [32, 106, 156, 448, 450, 829, 830, 988], "teacher_dark_skin_ton": 32, "teacher_light_skin_ton": 32, "teacher_medium_dark_skin_ton": 32, "teacher_medium_light_skin_ton": 32, "teacher_medium_skin_ton": 32, "teacher_tone1": 32, "teacher_tone2": 32, "teacher_tone3": 32, "teacher_tone4": 32, "teacher_tone5": 32, "teapot": 32, "technologist": 32, "technologist_dark_skin_ton": 32, "technologist_light_skin_ton": 32, "technologist_medium_dark_skin_ton": 32, "technologist_medium_light_skin_ton": 32, "technologist_medium_skin_ton": 32, "technologist_tone1": 32, "technologist_tone2": 32, "technologist_tone3": 32, "technologist_tone4": 32, "technologist_tone5": 32, "teddy_bear": 32, "telephon": 32, "telephone_receiv": 32, "telescop": 32, "ten": [32, 153, 174, 194, 233, 239, 893], "tenni": 32, "tent": 32, "test_tub": 32, "tf": [32, 246, 828, 997], "tg": 32, "th": [32, 187, 215, 366, 408, 517, 595, 1037, 1046], "thailand": 32, "thermomet": [32, 69, 82, 84, 85, 178, 187, 239, 259, 339, 341, 342, 344, 459, 466, 469, 471, 480, 481, 494, 508, 548, 549, 557, 560, 635, 638, 755, 908], "thermometer_fac": 32, "thinking_fac": 32, "third_plac": 32, "third_place_med": 32, "thong_sand": 32, "thought_balloon": 32, "thread": [32, 59, 62, 65, 83, 89, 91, 156, 168, 169, 178, 183, 187, 198, 220, 226, 227, 229, 236, 239, 254, 255, 256, 258, 267, 276, 278, 302, 315, 316, 345, 348, 349, 350, 438, 467, 484, 498, 561, 702, 710, 719, 721, 728, 730, 733, 734, 754, 755, 784, 794, 800, 814, 822, 898, 920, 939, 947, 949, 950, 952, 954, 958, 959, 961, 972, 973, 974, 1010, 1011, 1100, 1142, 1152, 1153, 1154, 1156, 1168, 1169, 1170], "three_button_mous": 32, "thumbdown": 32, "thumbdown_tone1": 32, "thumbdown_tone2": 32, "thumbdown_tone3": 32, "thumbdown_tone4": 32, "thumbdown_tone5": 32, "thumbsdown_tone1": 32, "thumbsdown_tone2": 32, "thumbsdown_tone3": 32, "thumbsdown_tone4": 32, "thumbsdown_tone5": 32, "thumbsup_tone1": 32, "thumbsup_tone2": 32, "thumbsup_tone3": 32, "thumbsup_tone4": 32, "thumbsup_tone5": 32, "thumbup": 32, "thumbup_tone1": 32, "thumbup_tone2": 32, "thumbup_tone3": 32, "thumbup_tone4": 32, "thumbup_tone5": 32, "thunder_cloud_and_rain": 32, "thunder_cloud_rain": 32, "ticket": 32, "tiger2": 32, "tiger": 32, "timer": [32, 59, 62, 65, 114, 175, 276, 423, 735, 755, 779, 804, 811, 817, 820, 821, 823, 835, 838, 898, 907, 923, 927, 939, 958, 964, 966, 974, 1167, 1170], "timer_clock": 32, "timor_lest": 32, "tipping_hand_man": 32, "tipping_hand_woman": 32, "tired_fac": 32, "tj": 32, "tk": 32, "tl": [32, 156], "tm": 32, "tn": [32, 191], "togo": 32, "toilet": [32, 229, 538, 792, 1010], "tokelau": 32, "tokyo_tow": 32, "tomato": 32, "tone1": 32, "tone2": 32, "tone3": 32, "tone4": 32, "tone5": 32, "tonga": 32, "tongu": [32, 1153], "toolbox": [32, 172], "tooth": 32, "toothbrush": 32, "tophat": 32, "tornado": 32, "tr": [32, 215], "track_next": 32, "track_previ": 32, "trackbal": 32, "tractor": 32, "traffic_light": 32, "train2": 32, "tram": 32, "transgender_flag": 32, "transgender_symbol": 32, "triangular_flag_on_post": 32, "triangular_rul": 32, "trident": 32, "trinidad_tobago": 32, "tristan_da_cunha": 32, "triumph": 32, "trolleybu": 32, "trophi": 32, "tropical_drink": 32, "tropical_fish": 32, "truck": 32, "trumpet": 32, "tt": 32, "tulip": 32, "tumbler_glass": 32, "tunisia": 32, "turkei": 32, "turkmenistan": 32, "turks_caicos_island": 32, "turtl": 32, "tuvalu": 32, "tuxedo_tone1": 32, "tuxedo_tone2": 32, "tuxedo_tone3": 32, "tuxedo_tone4": 32, "tuxedo_tone5": 32, "tw": 32, "twisted_rightwards_arrow": 32, "two_heart": 32, "two_men_holding_hand": 32, "two_women_holding_hand": 32, "tz": 32, "u5272": 32, "u5408": 32, "u55b6": 32, "u6307": 32, "u6708": 32, "u6709": 32, "u6e80": 32, "u7121": 32, "u7533": 32, "u7981": 32, "u7a7a": 32, "ua": [32, 218, 227, 302], "ug": 32, "uganda": 32, "ukrain": 32, "umbrella2": 32, "umbrella": 32, "umbrella_on_ground": 32, "unamus": 32, "underag": 32, "unicorn": 32, "unicorn_fac": 32, "united_arab_emir": 32, "united_n": 32, "united_st": 32, "unlock": [32, 730, 732, 734, 794, 800, 947, 1165], "upside_down": 32, "upside_down_fac": 32, "urn": 32, "uruguai": 32, "us_virgin_island": 32, "uz": 32, "uzbekistan": 32, "v_tone1": 32, "v_tone2": 32, "v_tone3": 32, "v_tone4": 32, "v_tone5": 32, "va": [32, 270, 273], "vampir": 32, "vampire_dark_skin_ton": 32, "vampire_light_skin_ton": 32, "vampire_medium_dark_skin_ton": 32, "vampire_medium_light_skin_ton": 32, "vampire_medium_skin_ton": 32, "vampire_tone1": 32, "vampire_tone2": 32, "vampire_tone3": 32, "vampire_tone4": 32, "vampire_tone5": 32, "vanuatu": 32, "vatican_c": 32, "vc": [32, 133, 157], "ve": [32, 151, 153, 844, 1134], "venezuela": 32, "vertical_traffic_light": 32, "vg": 32, "vh": 32, "vi": [32, 736], "vibration_mod": 32, "video_camera": 32, "video_gam": 32, "vietnam": 32, "violin": 32, "virgo": 32, "vn": 32, "volcano": 32, "volleybal": 32, "vu": 32, "vulcan": 32, "vulcan_salut": 32, "vulcan_tone1": 32, "vulcan_tone2": 32, "vulcan_tone3": 32, "vulcan_tone4": 32, "vulcan_tone5": 32, "waffl": 32, "wale": 32, "walk": [32, 150, 170, 183, 279, 280, 301, 342, 353, 660, 677, 846, 908, 1012], "walking_man": 32, "walking_tone1": 32, "walking_tone2": 32, "walking_tone3": 32, "walking_tone4": 32, "walking_tone5": 32, "walking_woman": 32, "wallis_futuna": 32, "waning_crescent_moon": 32, "waning_gibbous_moon": 32, "wastebasket": 32, "water_buffalo": 32, "water_polo": 32, "water_polo_tone1": 32, "water_polo_tone2": 32, "water_polo_tone3": 32, "water_polo_tone4": 32, "water_polo_tone5": 32, "watermelon": [32, 275], "wave": [32, 34, 38, 267, 284], "wave_tone1": 32, "wave_tone2": 32, "wave_tone3": 32, "wave_tone4": 32, "wave_tone5": 32, "waving_black_flag": 32, "waving_white_flag": 32, "wavy_dash": 32, "waxing_crescent_moon": 32, "waxing_gibbous_moon": 32, "wc": [32, 211, 212, 229, 249, 373, 388, 397, 404, 410, 414, 417, 421, 430, 434, 439, 440, 444, 662, 700, 752, 754, 755, 842, 845, 895, 909, 1084], "weari": 32, "wed": [32, 210], "weight_lift": 32, "weight_lifter_tone1": 32, "weight_lifter_tone2": 32, "weight_lifter_tone3": 32, "weight_lifter_tone4": 32, "weight_lifter_tone5": 32, "weight_lifting_man": 32, "weight_lifting_woman": 32, "western_sahara": 32, "wf": 32, "whale2": 32, "whale": 32, "wheel_of_dharma": 32, "wheelchair": 32, "whiski": 32, "white_check_mark": 32, "white_circl": 32, "white_flag": 32, "white_flow": 32, "white_frowning_fac": 32, "white_hair": 32, "white_heart": 32, "white_large_squar": 32, "white_medium_small_squar": 32, "white_medium_squar": 32, "white_small_squar": 32, "white_square_button": 32, "white_sun_behind_cloud": 32, "white_sun_behind_cloud_with_rain": 32, "white_sun_cloud": 32, "white_sun_rain_cloud": 32, "white_sun_small_cloud": 32, "white_sun_with_small_cloud": 32, "wilted_flow": 32, "wilted_ros": 32, "wind_blowing_fac": 32, "wind_chim": 32, "wind_fac": 32, "wine_glass": 32, "wolf": 32, "woman": 32, "woman_and_man_holding_hands_dark_skin_ton": 32, "woman_and_man_holding_hands_dark_skin_tone_light_skin_ton": 32, "woman_and_man_holding_hands_dark_skin_tone_medium_dark_skin_ton": 32, "woman_and_man_holding_hands_dark_skin_tone_medium_light_skin_ton": 32, "woman_and_man_holding_hands_dark_skin_tone_medium_skin_ton": 32, "woman_and_man_holding_hands_light_skin_ton": 32, "woman_and_man_holding_hands_light_skin_tone_dark_skin_ton": 32, "woman_and_man_holding_hands_light_skin_tone_medium_dark_skin_ton": 32, "woman_and_man_holding_hands_light_skin_tone_medium_light_skin_ton": 32, "woman_and_man_holding_hands_light_skin_tone_medium_skin_ton": 32, "woman_and_man_holding_hands_medium_dark_skin_ton": 32, "woman_and_man_holding_hands_medium_dark_skin_tone_dark_skin_ton": 32, "woman_and_man_holding_hands_medium_dark_skin_tone_light_skin_ton": 32, "woman_and_man_holding_hands_medium_dark_skin_tone_medium_light_skin_ton": 32, "woman_and_man_holding_hands_medium_dark_skin_tone_medium_skin_ton": 32, "woman_and_man_holding_hands_medium_light_skin_ton": 32, "woman_and_man_holding_hands_medium_light_skin_tone_dark_skin_ton": 32, "woman_and_man_holding_hands_medium_light_skin_tone_light_skin_ton": 32, "woman_and_man_holding_hands_medium_light_skin_tone_medium_dark_skin_ton": 32, "woman_and_man_holding_hands_medium_light_skin_tone_medium_skin_ton": 32, "woman_and_man_holding_hands_medium_skin_ton": 32, "woman_and_man_holding_hands_medium_skin_tone_dark_skin_ton": 32, "woman_and_man_holding_hands_medium_skin_tone_light_skin_ton": 32, "woman_and_man_holding_hands_medium_skin_tone_medium_dark_skin_ton": 32, "woman_and_man_holding_hands_medium_skin_tone_medium_light_skin_ton": 32, "woman_and_man_holding_hands_tone1": 32, "woman_and_man_holding_hands_tone1_tone2": 32, "woman_and_man_holding_hands_tone1_tone3": 32, "woman_and_man_holding_hands_tone1_tone4": 32, "woman_and_man_holding_hands_tone1_tone5": 32, "woman_and_man_holding_hands_tone2": 32, "woman_and_man_holding_hands_tone2_tone1": 32, "woman_and_man_holding_hands_tone2_tone3": 32, "woman_and_man_holding_hands_tone2_tone4": 32, "woman_and_man_holding_hands_tone2_tone5": 32, "woman_and_man_holding_hands_tone3": 32, "woman_and_man_holding_hands_tone3_tone1": 32, "woman_and_man_holding_hands_tone3_tone2": 32, "woman_and_man_holding_hands_tone3_tone4": 32, "woman_and_man_holding_hands_tone3_tone5": 32, "woman_and_man_holding_hands_tone4": 32, "woman_and_man_holding_hands_tone4_tone1": 32, "woman_and_man_holding_hands_tone4_tone2": 32, "woman_and_man_holding_hands_tone4_tone3": 32, "woman_and_man_holding_hands_tone4_tone5": 32, "woman_and_man_holding_hands_tone5": 32, "woman_and_man_holding_hands_tone5_tone1": 32, "woman_and_man_holding_hands_tone5_tone2": 32, "woman_and_man_holding_hands_tone5_tone3": 32, "woman_and_man_holding_hands_tone5_tone4": 32, "woman_artist": 32, "woman_artist_dark_skin_ton": 32, "woman_artist_light_skin_ton": 32, "woman_artist_medium_dark_skin_ton": 32, "woman_artist_medium_light_skin_ton": 32, "woman_artist_medium_skin_ton": 32, "woman_artist_tone1": 32, "woman_artist_tone2": 32, "woman_artist_tone3": 32, "woman_artist_tone4": 32, "woman_artist_tone5": 32, "woman_astronaut": 32, "woman_astronaut_dark_skin_ton": 32, "woman_astronaut_light_skin_ton": 32, "woman_astronaut_medium_dark_skin_ton": 32, "woman_astronaut_medium_light_skin_ton": 32, "woman_astronaut_medium_skin_ton": 32, "woman_astronaut_tone1": 32, "woman_astronaut_tone2": 32, "woman_astronaut_tone3": 32, "woman_astronaut_tone4": 32, "woman_astronaut_tone5": 32, "woman_bald": 32, "woman_bald_dark_skin_ton": 32, "woman_bald_light_skin_ton": 32, "woman_bald_medium_dark_skin_ton": 32, "woman_bald_medium_light_skin_ton": 32, "woman_bald_medium_skin_ton": 32, "woman_bald_tone1": 32, "woman_bald_tone2": 32, "woman_bald_tone3": 32, "woman_bald_tone4": 32, "woman_bald_tone5": 32, "woman_beard": 32, "woman_bik": 32, "woman_biking_dark_skin_ton": 32, "woman_biking_light_skin_ton": 32, "woman_biking_medium_dark_skin_ton": 32, "woman_biking_medium_light_skin_ton": 32, "woman_biking_medium_skin_ton": 32, "woman_biking_tone1": 32, "woman_biking_tone2": 32, "woman_biking_tone3": 32, "woman_biking_tone4": 32, "woman_biking_tone5": 32, "woman_bouncing_bal": 32, "woman_bouncing_ball_dark_skin_ton": 32, "woman_bouncing_ball_light_skin_ton": 32, "woman_bouncing_ball_medium_dark_skin_ton": 32, "woman_bouncing_ball_medium_light_skin_ton": 32, "woman_bouncing_ball_medium_skin_ton": 32, "woman_bouncing_ball_tone1": 32, "woman_bouncing_ball_tone2": 32, "woman_bouncing_ball_tone3": 32, "woman_bouncing_ball_tone4": 32, "woman_bouncing_ball_tone5": 32, "woman_bow": 32, "woman_bowing_dark_skin_ton": 32, "woman_bowing_light_skin_ton": 32, "woman_bowing_medium_dark_skin_ton": 32, "woman_bowing_medium_light_skin_ton": 32, "woman_bowing_medium_skin_ton": 32, "woman_bowing_tone1": 32, "woman_bowing_tone2": 32, "woman_bowing_tone3": 32, "woman_bowing_tone4": 32, "woman_bowing_tone5": 32, "woman_cartwheel": 32, "woman_cartwheeling_dark_skin_ton": 32, "woman_cartwheeling_light_skin_ton": 32, "woman_cartwheeling_medium_dark_skin_ton": 32, "woman_cartwheeling_medium_light_skin_ton": 32, "woman_cartwheeling_medium_skin_ton": 32, "woman_cartwheeling_tone1": 32, "woman_cartwheeling_tone2": 32, "woman_cartwheeling_tone3": 32, "woman_cartwheeling_tone4": 32, "woman_cartwheeling_tone5": 32, "woman_climb": 32, "woman_climbing_dark_skin_ton": 32, "woman_climbing_light_skin_ton": 32, "woman_climbing_medium_dark_skin_ton": 32, "woman_climbing_medium_light_skin_ton": 32, "woman_climbing_medium_skin_ton": 32, "woman_climbing_tone1": 32, "woman_climbing_tone2": 32, "woman_climbing_tone3": 32, "woman_climbing_tone4": 32, "woman_climbing_tone5": 32, "woman_construction_work": 32, "woman_construction_worker_dark_skin_ton": 32, "woman_construction_worker_light_skin_ton": 32, "woman_construction_worker_medium_dark_skin_ton": 32, "woman_construction_worker_medium_light_skin_ton": 32, "woman_construction_worker_medium_skin_ton": 32, "woman_construction_worker_tone1": 32, "woman_construction_worker_tone2": 32, "woman_construction_worker_tone3": 32, "woman_construction_worker_tone4": 32, "woman_construction_worker_tone5": 32, "woman_cook": 32, "woman_cook_dark_skin_ton": 32, "woman_cook_light_skin_ton": 32, "woman_cook_medium_dark_skin_ton": 32, "woman_cook_medium_light_skin_ton": 32, "woman_cook_medium_skin_ton": 32, "woman_cook_tone1": 32, "woman_cook_tone2": 32, "woman_cook_tone3": 32, "woman_cook_tone4": 32, "woman_cook_tone5": 32, "woman_curly_hair": 32, "woman_curly_haired_dark_skin_ton": 32, "woman_curly_haired_light_skin_ton": 32, "woman_curly_haired_medium_dark_skin_ton": 32, "woman_curly_haired_medium_light_skin_ton": 32, "woman_curly_haired_medium_skin_ton": 32, "woman_curly_haired_tone1": 32, "woman_curly_haired_tone2": 32, "woman_curly_haired_tone3": 32, "woman_curly_haired_tone4": 32, "woman_curly_haired_tone5": 32, "woman_dark_skin_tone_beard": 32, "woman_detect": 32, "woman_detective_dark_skin_ton": 32, "woman_detective_light_skin_ton": 32, "woman_detective_medium_dark_skin_ton": 32, "woman_detective_medium_light_skin_ton": 32, "woman_detective_medium_skin_ton": 32, "woman_detective_tone1": 32, "woman_detective_tone2": 32, "woman_detective_tone3": 32, "woman_detective_tone4": 32, "woman_detective_tone5": 32, "woman_elf": 32, "woman_elf_dark_skin_ton": 32, "woman_elf_light_skin_ton": 32, "woman_elf_medium_dark_skin_ton": 32, "woman_elf_medium_light_skin_ton": 32, "woman_elf_medium_skin_ton": 32, "woman_elf_tone1": 32, "woman_elf_tone2": 32, "woman_elf_tone3": 32, "woman_elf_tone4": 32, "woman_elf_tone5": 32, "woman_facepalm": 32, "woman_facepalming_dark_skin_ton": 32, "woman_facepalming_light_skin_ton": 32, "woman_facepalming_medium_dark_skin_ton": 32, "woman_facepalming_medium_light_skin_ton": 32, "woman_facepalming_medium_skin_ton": 32, "woman_facepalming_tone1": 32, "woman_facepalming_tone2": 32, "woman_facepalming_tone3": 32, "woman_facepalming_tone4": 32, "woman_facepalming_tone5": 32, "woman_factory_work": 32, "woman_factory_worker_dark_skin_ton": 32, "woman_factory_worker_light_skin_ton": 32, "woman_factory_worker_medium_dark_skin_ton": 32, "woman_factory_worker_medium_light_skin_ton": 32, "woman_factory_worker_medium_skin_ton": 32, "woman_factory_worker_tone1": 32, "woman_factory_worker_tone2": 32, "woman_factory_worker_tone3": 32, "woman_factory_worker_tone4": 32, "woman_factory_worker_tone5": 32, "woman_fairi": 32, "woman_fairy_dark_skin_ton": 32, "woman_fairy_light_skin_ton": 32, "woman_fairy_medium_dark_skin_ton": 32, "woman_fairy_medium_light_skin_ton": 32, "woman_fairy_medium_skin_ton": 32, "woman_fairy_tone1": 32, "woman_fairy_tone2": 32, "woman_fairy_tone3": 32, "woman_fairy_tone4": 32, "woman_fairy_tone5": 32, "woman_farm": 32, "woman_farmer_dark_skin_ton": 32, "woman_farmer_light_skin_ton": 32, "woman_farmer_medium_dark_skin_ton": 32, "woman_farmer_medium_light_skin_ton": 32, "woman_farmer_medium_skin_ton": 32, "woman_farmer_tone1": 32, "woman_farmer_tone2": 32, "woman_farmer_tone3": 32, "woman_farmer_tone4": 32, "woman_farmer_tone5": 32, "woman_feeding_babi": 32, "woman_feeding_baby_dark_skin_ton": 32, "woman_feeding_baby_light_skin_ton": 32, "woman_feeding_baby_medium_dark_skin_ton": 32, "woman_feeding_baby_medium_light_skin_ton": 32, "woman_feeding_baby_medium_skin_ton": 32, "woman_feeding_baby_tone1": 32, "woman_feeding_baby_tone2": 32, "woman_feeding_baby_tone3": 32, "woman_feeding_baby_tone4": 32, "woman_feeding_baby_tone5": 32, "woman_firefight": 32, "woman_firefighter_dark_skin_ton": 32, "woman_firefighter_light_skin_ton": 32, "woman_firefighter_medium_dark_skin_ton": 32, "woman_firefighter_medium_light_skin_ton": 32, "woman_firefighter_medium_skin_ton": 32, "woman_firefighter_tone1": 32, "woman_firefighter_tone2": 32, "woman_firefighter_tone3": 32, "woman_firefighter_tone4": 32, "woman_firefighter_tone5": 32, "woman_frown": 32, "woman_frowning_dark_skin_ton": 32, "woman_frowning_light_skin_ton": 32, "woman_frowning_medium_dark_skin_ton": 32, "woman_frowning_medium_light_skin_ton": 32, "woman_frowning_medium_skin_ton": 32, "woman_frowning_tone1": 32, "woman_frowning_tone2": 32, "woman_frowning_tone3": 32, "woman_frowning_tone4": 32, "woman_frowning_tone5": 32, "woman_geni": 32, "woman_gesturing_no": 32, "woman_gesturing_no_dark_skin_ton": 32, "woman_gesturing_no_light_skin_ton": 32, "woman_gesturing_no_medium_dark_skin_ton": 32, "woman_gesturing_no_medium_light_skin_ton": 32, "woman_gesturing_no_medium_skin_ton": 32, "woman_gesturing_no_tone1": 32, "woman_gesturing_no_tone2": 32, "woman_gesturing_no_tone3": 32, "woman_gesturing_no_tone4": 32, "woman_gesturing_no_tone5": 32, "woman_gesturing_ok": 32, "woman_gesturing_ok_dark_skin_ton": 32, "woman_gesturing_ok_light_skin_ton": 32, "woman_gesturing_ok_medium_dark_skin_ton": 32, "woman_gesturing_ok_medium_light_skin_ton": 32, "woman_gesturing_ok_medium_skin_ton": 32, "woman_gesturing_ok_tone1": 32, "woman_gesturing_ok_tone2": 32, "woman_gesturing_ok_tone3": 32, "woman_gesturing_ok_tone4": 32, "woman_gesturing_ok_tone5": 32, "woman_getting_face_massag": 32, "woman_getting_face_massage_dark_skin_ton": 32, "woman_getting_face_massage_light_skin_ton": 32, "woman_getting_face_massage_medium_dark_skin_ton": 32, "woman_getting_face_massage_medium_light_skin_ton": 32, "woman_getting_face_massage_medium_skin_ton": 32, "woman_getting_face_massage_tone1": 32, "woman_getting_face_massage_tone2": 32, "woman_getting_face_massage_tone3": 32, "woman_getting_face_massage_tone4": 32, "woman_getting_face_massage_tone5": 32, "woman_getting_haircut": 32, "woman_getting_haircut_dark_skin_ton": 32, "woman_getting_haircut_light_skin_ton": 32, "woman_getting_haircut_medium_dark_skin_ton": 32, "woman_getting_haircut_medium_light_skin_ton": 32, "woman_getting_haircut_medium_skin_ton": 32, "woman_getting_haircut_tone1": 32, "woman_getting_haircut_tone2": 32, "woman_getting_haircut_tone3": 32, "woman_getting_haircut_tone4": 32, "woman_getting_haircut_tone5": 32, "woman_golf": 32, "woman_golfing_dark_skin_ton": 32, "woman_golfing_light_skin_ton": 32, "woman_golfing_medium_dark_skin_ton": 32, "woman_golfing_medium_light_skin_ton": 32, "woman_golfing_medium_skin_ton": 32, "woman_golfing_tone1": 32, "woman_golfing_tone2": 32, "woman_golfing_tone3": 32, "woman_golfing_tone4": 32, "woman_golfing_tone5": 32, "woman_guard": 32, "woman_guard_dark_skin_ton": 32, "woman_guard_light_skin_ton": 32, "woman_guard_medium_dark_skin_ton": 32, "woman_guard_medium_light_skin_ton": 32, "woman_guard_medium_skin_ton": 32, "woman_guard_tone1": 32, "woman_guard_tone2": 32, "woman_guard_tone3": 32, "woman_guard_tone4": 32, "woman_guard_tone5": 32, "woman_health_work": 32, "woman_health_worker_dark_skin_ton": 32, "woman_health_worker_light_skin_ton": 32, "woman_health_worker_medium_dark_skin_ton": 32, "woman_health_worker_medium_light_skin_ton": 32, "woman_health_worker_medium_skin_ton": 32, "woman_health_worker_tone1": 32, "woman_health_worker_tone2": 32, "woman_health_worker_tone3": 32, "woman_health_worker_tone4": 32, "woman_health_worker_tone5": 32, "woman_in_lotus_posit": 32, "woman_in_lotus_position_dark_skin_ton": 32, "woman_in_lotus_position_light_skin_ton": 32, "woman_in_lotus_position_medium_dark_skin_ton": 32, "woman_in_lotus_position_medium_light_skin_ton": 32, "woman_in_lotus_position_medium_skin_ton": 32, "woman_in_lotus_position_tone1": 32, "woman_in_lotus_position_tone2": 32, "woman_in_lotus_position_tone3": 32, "woman_in_lotus_position_tone4": 32, "woman_in_lotus_position_tone5": 32, "woman_in_manual_wheelchair": 32, "woman_in_manual_wheelchair_dark_skin_ton": 32, "woman_in_manual_wheelchair_light_skin_ton": 32, "woman_in_manual_wheelchair_medium_dark_skin_ton": 32, "woman_in_manual_wheelchair_medium_light_skin_ton": 32, "woman_in_manual_wheelchair_medium_skin_ton": 32, "woman_in_manual_wheelchair_tone1": 32, "woman_in_manual_wheelchair_tone2": 32, "woman_in_manual_wheelchair_tone3": 32, "woman_in_manual_wheelchair_tone4": 32, "woman_in_manual_wheelchair_tone5": 32, "woman_in_motorized_wheelchair": 32, "woman_in_motorized_wheelchair_dark_skin_ton": 32, "woman_in_motorized_wheelchair_light_skin_ton": 32, "woman_in_motorized_wheelchair_medium_dark_skin_ton": 32, "woman_in_motorized_wheelchair_medium_light_skin_ton": 32, "woman_in_motorized_wheelchair_medium_skin_ton": 32, "woman_in_motorized_wheelchair_tone1": 32, "woman_in_motorized_wheelchair_tone2": 32, "woman_in_motorized_wheelchair_tone3": 32, "woman_in_motorized_wheelchair_tone4": 32, "woman_in_motorized_wheelchair_tone5": 32, "woman_in_steamy_room": 32, "woman_in_steamy_room_dark_skin_ton": 32, "woman_in_steamy_room_light_skin_ton": 32, "woman_in_steamy_room_medium_dark_skin_ton": 32, "woman_in_steamy_room_medium_light_skin_ton": 32, "woman_in_steamy_room_medium_skin_ton": 32, "woman_in_steamy_room_tone1": 32, "woman_in_steamy_room_tone2": 32, "woman_in_steamy_room_tone3": 32, "woman_in_steamy_room_tone4": 32, "woman_in_steamy_room_tone5": 32, "woman_in_tuxedo": 32, "woman_in_tuxedo_dark_skin_ton": 32, "woman_in_tuxedo_light_skin_ton": 32, "woman_in_tuxedo_medium_dark_skin_ton": 32, "woman_in_tuxedo_medium_light_skin_ton": 32, "woman_in_tuxedo_medium_skin_ton": 32, "woman_in_tuxedo_tone1": 32, "woman_in_tuxedo_tone2": 32, "woman_in_tuxedo_tone3": 32, "woman_in_tuxedo_tone4": 32, "woman_in_tuxedo_tone5": 32, "woman_judg": 32, "woman_judge_dark_skin_ton": 32, "woman_judge_light_skin_ton": 32, "woman_judge_medium_dark_skin_ton": 32, "woman_judge_medium_light_skin_ton": 32, "woman_judge_medium_skin_ton": 32, "woman_judge_tone1": 32, "woman_judge_tone2": 32, "woman_judge_tone3": 32, "woman_judge_tone4": 32, "woman_judge_tone5": 32, "woman_juggl": 32, "woman_juggling_dark_skin_ton": 32, "woman_juggling_light_skin_ton": 32, "woman_juggling_medium_dark_skin_ton": 32, "woman_juggling_medium_light_skin_ton": 32, "woman_juggling_medium_skin_ton": 32, "woman_juggling_tone1": 32, "woman_juggling_tone2": 32, "woman_juggling_tone3": 32, "woman_juggling_tone4": 32, "woman_juggling_tone5": 32, "woman_kneel": 32, "woman_kneeling_dark_skin_ton": 32, "woman_kneeling_light_skin_ton": 32, "woman_kneeling_medium_dark_skin_ton": 32, "woman_kneeling_medium_light_skin_ton": 32, "woman_kneeling_medium_skin_ton": 32, "woman_kneeling_tone1": 32, "woman_kneeling_tone2": 32, "woman_kneeling_tone3": 32, "woman_kneeling_tone4": 32, "woman_kneeling_tone5": 32, "woman_lifting_weight": 32, "woman_lifting_weights_dark_skin_ton": 32, "woman_lifting_weights_light_skin_ton": 32, "woman_lifting_weights_medium_dark_skin_ton": 32, "woman_lifting_weights_medium_light_skin_ton": 32, "woman_lifting_weights_medium_skin_ton": 32, "woman_lifting_weights_tone1": 32, "woman_lifting_weights_tone2": 32, "woman_lifting_weights_tone3": 32, "woman_lifting_weights_tone4": 32, "woman_lifting_weights_tone5": 32, "woman_light_skin_tone_beard": 32, "woman_mag": 32, "woman_mage_dark_skin_ton": 32, "woman_mage_light_skin_ton": 32, "woman_mage_medium_dark_skin_ton": 32, "woman_mage_medium_light_skin_ton": 32, "woman_mage_medium_skin_ton": 32, "woman_mage_tone1": 32, "woman_mage_tone2": 32, "woman_mage_tone3": 32, "woman_mage_tone4": 32, "woman_mage_tone5": 32, "woman_mechan": 32, "woman_mechanic_dark_skin_ton": 32, "woman_mechanic_light_skin_ton": 32, "woman_mechanic_medium_dark_skin_ton": 32, "woman_mechanic_medium_light_skin_ton": 32, "woman_mechanic_medium_skin_ton": 32, "woman_mechanic_tone1": 32, "woman_mechanic_tone2": 32, "woman_mechanic_tone3": 32, "woman_mechanic_tone4": 32, "woman_mechanic_tone5": 32, "woman_medium_dark_skin_tone_beard": 32, "woman_medium_light_skin_tone_beard": 32, "woman_medium_skin_tone_beard": 32, "woman_mountain_bik": 32, "woman_mountain_biking_dark_skin_ton": 32, "woman_mountain_biking_light_skin_ton": 32, "woman_mountain_biking_medium_dark_skin_ton": 32, "woman_mountain_biking_medium_light_skin_ton": 32, "woman_mountain_biking_medium_skin_ton": 32, "woman_mountain_biking_tone1": 32, "woman_mountain_biking_tone2": 32, "woman_mountain_biking_tone3": 32, "woman_mountain_biking_tone4": 32, "woman_mountain_biking_tone5": 32, "woman_office_work": 32, "woman_office_worker_dark_skin_ton": 32, "woman_office_worker_light_skin_ton": 32, "woman_office_worker_medium_dark_skin_ton": 32, "woman_office_worker_medium_light_skin_ton": 32, "woman_office_worker_medium_skin_ton": 32, "woman_office_worker_tone1": 32, "woman_office_worker_tone2": 32, "woman_office_worker_tone3": 32, "woman_office_worker_tone4": 32, "woman_office_worker_tone5": 32, "woman_pilot": 32, "woman_pilot_dark_skin_ton": 32, "woman_pilot_light_skin_ton": 32, "woman_pilot_medium_dark_skin_ton": 32, "woman_pilot_medium_light_skin_ton": 32, "woman_pilot_medium_skin_ton": 32, "woman_pilot_tone1": 32, "woman_pilot_tone2": 32, "woman_pilot_tone3": 32, "woman_pilot_tone4": 32, "woman_pilot_tone5": 32, "woman_playing_handbal": 32, "woman_playing_handball_dark_skin_ton": 32, "woman_playing_handball_light_skin_ton": 32, "woman_playing_handball_medium_dark_skin_ton": 32, "woman_playing_handball_medium_light_skin_ton": 32, "woman_playing_handball_medium_skin_ton": 32, "woman_playing_handball_tone1": 32, "woman_playing_handball_tone2": 32, "woman_playing_handball_tone3": 32, "woman_playing_handball_tone4": 32, "woman_playing_handball_tone5": 32, "woman_playing_water_polo": 32, "woman_playing_water_polo_dark_skin_ton": 32, "woman_playing_water_polo_light_skin_ton": 32, "woman_playing_water_polo_medium_dark_skin_ton": 32, "woman_playing_water_polo_medium_light_skin_ton": 32, "woman_playing_water_polo_medium_skin_ton": 32, "woman_playing_water_polo_tone1": 32, "woman_playing_water_polo_tone2": 32, "woman_playing_water_polo_tone3": 32, "woman_playing_water_polo_tone4": 32, "woman_playing_water_polo_tone5": 32, "woman_police_offic": 32, "woman_police_officer_dark_skin_ton": 32, "woman_police_officer_light_skin_ton": 32, "woman_police_officer_medium_dark_skin_ton": 32, "woman_police_officer_medium_light_skin_ton": 32, "woman_police_officer_medium_skin_ton": 32, "woman_police_officer_tone1": 32, "woman_police_officer_tone2": 32, "woman_police_officer_tone3": 32, "woman_police_officer_tone4": 32, "woman_police_officer_tone5": 32, "woman_pout": 32, "woman_pouting_dark_skin_ton": 32, "woman_pouting_light_skin_ton": 32, "woman_pouting_medium_dark_skin_ton": 32, "woman_pouting_medium_light_skin_ton": 32, "woman_pouting_medium_skin_ton": 32, "woman_pouting_tone1": 32, "woman_pouting_tone2": 32, "woman_pouting_tone3": 32, "woman_pouting_tone4": 32, "woman_pouting_tone5": 32, "woman_raising_hand": 32, "woman_raising_hand_dark_skin_ton": 32, "woman_raising_hand_light_skin_ton": 32, "woman_raising_hand_medium_dark_skin_ton": 32, "woman_raising_hand_medium_light_skin_ton": 32, "woman_raising_hand_medium_skin_ton": 32, "woman_raising_hand_tone1": 32, "woman_raising_hand_tone2": 32, "woman_raising_hand_tone3": 32, "woman_raising_hand_tone4": 32, "woman_raising_hand_tone5": 32, "woman_red_hair": 32, "woman_red_haired_dark_skin_ton": 32, "woman_red_haired_light_skin_ton": 32, "woman_red_haired_medium_dark_skin_ton": 32, "woman_red_haired_medium_light_skin_ton": 32, "woman_red_haired_medium_skin_ton": 32, "woman_red_haired_tone1": 32, "woman_red_haired_tone2": 32, "woman_red_haired_tone3": 32, "woman_red_haired_tone4": 32, "woman_red_haired_tone5": 32, "woman_rowing_boat": 32, "woman_rowing_boat_dark_skin_ton": 32, "woman_rowing_boat_light_skin_ton": 32, "woman_rowing_boat_medium_dark_skin_ton": 32, "woman_rowing_boat_medium_light_skin_ton": 32, "woman_rowing_boat_medium_skin_ton": 32, "woman_rowing_boat_tone1": 32, "woman_rowing_boat_tone2": 32, "woman_rowing_boat_tone3": 32, "woman_rowing_boat_tone4": 32, "woman_rowing_boat_tone5": 32, "woman_run": 32, "woman_running_dark_skin_ton": 32, "woman_running_light_skin_ton": 32, "woman_running_medium_dark_skin_ton": 32, "woman_running_medium_light_skin_ton": 32, "woman_running_medium_skin_ton": 32, "woman_running_tone1": 32, "woman_running_tone2": 32, "woman_running_tone3": 32, "woman_running_tone4": 32, "woman_running_tone5": 32, "woman_scientist": 32, "woman_scientist_dark_skin_ton": 32, "woman_scientist_light_skin_ton": 32, "woman_scientist_medium_dark_skin_ton": 32, "woman_scientist_medium_light_skin_ton": 32, "woman_scientist_medium_skin_ton": 32, "woman_scientist_tone1": 32, "woman_scientist_tone2": 32, "woman_scientist_tone3": 32, "woman_scientist_tone4": 32, "woman_scientist_tone5": 32, "woman_shrug": 32, "woman_shrugging_dark_skin_ton": 32, "woman_shrugging_light_skin_ton": 32, "woman_shrugging_medium_dark_skin_ton": 32, "woman_shrugging_medium_light_skin_ton": 32, "woman_shrugging_medium_skin_ton": 32, "woman_shrugging_tone1": 32, "woman_shrugging_tone2": 32, "woman_shrugging_tone3": 32, "woman_shrugging_tone4": 32, "woman_shrugging_tone5": 32, "woman_sing": 32, "woman_singer_dark_skin_ton": 32, "woman_singer_light_skin_ton": 32, "woman_singer_medium_dark_skin_ton": 32, "woman_singer_medium_light_skin_ton": 32, "woman_singer_medium_skin_ton": 32, "woman_singer_tone1": 32, "woman_singer_tone2": 32, "woman_singer_tone3": 32, "woman_singer_tone4": 32, "woman_singer_tone5": 32, "woman_stand": 32, "woman_standing_dark_skin_ton": 32, "woman_standing_light_skin_ton": 32, "woman_standing_medium_dark_skin_ton": 32, "woman_standing_medium_light_skin_ton": 32, "woman_standing_medium_skin_ton": 32, "woman_standing_tone1": 32, "woman_standing_tone2": 32, "woman_standing_tone3": 32, "woman_standing_tone4": 32, "woman_standing_tone5": 32, "woman_stud": 32, "woman_student_dark_skin_ton": 32, "woman_student_light_skin_ton": 32, "woman_student_medium_dark_skin_ton": 32, "woman_student_medium_light_skin_ton": 32, "woman_student_medium_skin_ton": 32, "woman_student_tone1": 32, "woman_student_tone2": 32, "woman_student_tone3": 32, "woman_student_tone4": 32, "woman_student_tone5": 32, "woman_superhero": 32, "woman_superhero_dark_skin_ton": 32, "woman_superhero_light_skin_ton": 32, "woman_superhero_medium_dark_skin_ton": 32, "woman_superhero_medium_light_skin_ton": 32, "woman_superhero_medium_skin_ton": 32, "woman_superhero_tone1": 32, "woman_superhero_tone2": 32, "woman_superhero_tone3": 32, "woman_superhero_tone4": 32, "woman_superhero_tone5": 32, "woman_supervillain": 32, "woman_supervillain_dark_skin_ton": 32, "woman_supervillain_light_skin_ton": 32, "woman_supervillain_medium_dark_skin_ton": 32, "woman_supervillain_medium_light_skin_ton": 32, "woman_supervillain_medium_skin_ton": 32, "woman_supervillain_tone1": 32, "woman_supervillain_tone2": 32, "woman_supervillain_tone3": 32, "woman_supervillain_tone4": 32, "woman_supervillain_tone5": 32, "woman_surf": 32, "woman_surfing_dark_skin_ton": 32, "woman_surfing_light_skin_ton": 32, "woman_surfing_medium_dark_skin_ton": 32, "woman_surfing_medium_light_skin_ton": 32, "woman_surfing_medium_skin_ton": 32, "woman_surfing_tone1": 32, "woman_surfing_tone2": 32, "woman_surfing_tone3": 32, "woman_surfing_tone4": 32, "woman_surfing_tone5": 32, "woman_swim": 32, "woman_swimming_dark_skin_ton": 32, "woman_swimming_light_skin_ton": 32, "woman_swimming_medium_dark_skin_ton": 32, "woman_swimming_medium_light_skin_ton": 32, "woman_swimming_medium_skin_ton": 32, "woman_swimming_tone1": 32, "woman_swimming_tone2": 32, "woman_swimming_tone3": 32, "woman_swimming_tone4": 32, "woman_swimming_tone5": 32, "woman_teach": 32, "woman_teacher_dark_skin_ton": 32, "woman_teacher_light_skin_ton": 32, "woman_teacher_medium_dark_skin_ton": 32, "woman_teacher_medium_light_skin_ton": 32, "woman_teacher_medium_skin_ton": 32, "woman_teacher_tone1": 32, "woman_teacher_tone2": 32, "woman_teacher_tone3": 32, "woman_teacher_tone4": 32, "woman_teacher_tone5": 32, "woman_technologist": 32, "woman_technologist_dark_skin_ton": 32, "woman_technologist_light_skin_ton": 32, "woman_technologist_medium_dark_skin_ton": 32, "woman_technologist_medium_light_skin_ton": 32, "woman_technologist_medium_skin_ton": 32, "woman_technologist_tone1": 32, "woman_technologist_tone2": 32, "woman_technologist_tone3": 32, "woman_technologist_tone4": 32, "woman_technologist_tone5": 32, "woman_tipping_hand": 32, "woman_tipping_hand_dark_skin_ton": 32, "woman_tipping_hand_light_skin_ton": 32, "woman_tipping_hand_medium_dark_skin_ton": 32, "woman_tipping_hand_medium_light_skin_ton": 32, "woman_tipping_hand_medium_skin_ton": 32, "woman_tipping_hand_tone1": 32, "woman_tipping_hand_tone2": 32, "woman_tipping_hand_tone3": 32, "woman_tipping_hand_tone4": 32, "woman_tipping_hand_tone5": 32, "woman_tone1": 32, "woman_tone1_beard": 32, "woman_tone2": 32, "woman_tone2_beard": 32, "woman_tone3": 32, "woman_tone3_beard": 32, "woman_tone4": 32, "woman_tone4_beard": 32, "woman_tone5": 32, "woman_tone5_beard": 32, "woman_vampir": 32, "woman_vampire_dark_skin_ton": 32, "woman_vampire_light_skin_ton": 32, "woman_vampire_medium_dark_skin_ton": 32, "woman_vampire_medium_light_skin_ton": 32, "woman_vampire_medium_skin_ton": 32, "woman_vampire_tone1": 32, "woman_vampire_tone2": 32, "woman_vampire_tone3": 32, "woman_vampire_tone4": 32, "woman_vampire_tone5": 32, "woman_walk": 32, "woman_walking_dark_skin_ton": 32, "woman_walking_light_skin_ton": 32, "woman_walking_medium_dark_skin_ton": 32, "woman_walking_medium_light_skin_ton": 32, "woman_walking_medium_skin_ton": 32, "woman_walking_tone1": 32, "woman_walking_tone2": 32, "woman_walking_tone3": 32, "woman_walking_tone4": 32, "woman_walking_tone5": 32, "woman_wearing_turban": 32, "woman_wearing_turban_dark_skin_ton": 32, "woman_wearing_turban_light_skin_ton": 32, "woman_wearing_turban_medium_dark_skin_ton": 32, "woman_wearing_turban_medium_light_skin_ton": 32, "woman_wearing_turban_medium_skin_ton": 32, "woman_wearing_turban_tone1": 32, "woman_wearing_turban_tone2": 32, "woman_wearing_turban_tone3": 32, "woman_wearing_turban_tone4": 32, "woman_wearing_turban_tone5": 32, "woman_white_hair": 32, "woman_white_haired_dark_skin_ton": 32, "woman_white_haired_light_skin_ton": 32, "woman_white_haired_medium_dark_skin_ton": 32, "woman_white_haired_medium_light_skin_ton": 32, "woman_white_haired_medium_skin_ton": 32, "woman_white_haired_tone1": 32, "woman_white_haired_tone2": 32, "woman_white_haired_tone3": 32, "woman_white_haired_tone4": 32, "woman_white_haired_tone5": 32, "woman_with_headscarf": 32, "woman_with_headscarf_dark_skin_ton": 32, "woman_with_headscarf_light_skin_ton": 32, "woman_with_headscarf_medium_dark_skin_ton": 32, "woman_with_headscarf_medium_light_skin_ton": 32, "woman_with_headscarf_medium_skin_ton": 32, "woman_with_headscarf_tone1": 32, "woman_with_headscarf_tone2": 32, "woman_with_headscarf_tone3": 32, "woman_with_headscarf_tone4": 32, "woman_with_headscarf_tone5": 32, "woman_with_probing_can": 32, "woman_with_probing_cane_dark_skin_ton": 32, "woman_with_probing_cane_light_skin_ton": 32, "woman_with_probing_cane_medium_dark_skin_ton": 32, "woman_with_probing_cane_medium_light_skin_ton": 32, "woman_with_probing_cane_medium_skin_ton": 32, "woman_with_probing_cane_tone1": 32, "woman_with_probing_cane_tone2": 32, "woman_with_probing_cane_tone3": 32, "woman_with_probing_cane_tone4": 32, "woman_with_probing_cane_tone5": 32, "woman_with_turban": 32, "woman_with_veil": 32, "woman_with_veil_dark_skin_ton": 32, "woman_with_veil_light_skin_ton": 32, "woman_with_veil_medium_dark_skin_ton": 32, "woman_with_veil_medium_light_skin_ton": 32, "woman_with_veil_medium_skin_ton": 32, "woman_with_veil_tone1": 32, "woman_with_veil_tone2": 32, "woman_with_veil_tone3": 32, "woman_with_veil_tone4": 32, "woman_with_veil_tone5": 32, "woman_zombi": 32, "womans_cloth": 32, "womans_flat_sho": 32, "womans_hat": 32, "women_holding_hands_dark_skin_ton": 32, "women_holding_hands_dark_skin_tone_light_skin_ton": 32, "women_holding_hands_dark_skin_tone_medium_dark_skin_ton": 32, "women_holding_hands_dark_skin_tone_medium_light_skin_ton": 32, "women_holding_hands_dark_skin_tone_medium_skin_ton": 32, "women_holding_hands_light_skin_ton": 32, "women_holding_hands_light_skin_tone_dark_skin_ton": 32, "women_holding_hands_light_skin_tone_medium_dark_skin_ton": 32, "women_holding_hands_light_skin_tone_medium_light_skin_ton": 32, "women_holding_hands_light_skin_tone_medium_skin_ton": 32, "women_holding_hands_medium_dark_skin_ton": 32, "women_holding_hands_medium_dark_skin_tone_dark_skin_ton": 32, "women_holding_hands_medium_dark_skin_tone_light_skin_ton": 32, "women_holding_hands_medium_dark_skin_tone_medium_light_skin_ton": 32, "women_holding_hands_medium_dark_skin_tone_medium_skin_ton": 32, "women_holding_hands_medium_light_skin_ton": 32, "women_holding_hands_medium_light_skin_tone_dark_skin_ton": 32, "women_holding_hands_medium_light_skin_tone_light_skin_ton": 32, "women_holding_hands_medium_light_skin_tone_medium_dark_skin_ton": 32, "women_holding_hands_medium_light_skin_tone_medium_skin_ton": 32, "women_holding_hands_medium_skin_ton": 32, "women_holding_hands_medium_skin_tone_dark_skin_ton": 32, "women_holding_hands_medium_skin_tone_light_skin_ton": 32, "women_holding_hands_medium_skin_tone_medium_dark_skin_ton": 32, "women_holding_hands_medium_skin_tone_medium_light_skin_ton": 32, "women_holding_hands_tone1": 32, "women_holding_hands_tone1_tone2": 32, "women_holding_hands_tone1_tone3": 32, "women_holding_hands_tone1_tone4": 32, "women_holding_hands_tone1_tone5": 32, "women_holding_hands_tone2": 32, "women_holding_hands_tone2_tone1": 32, "women_holding_hands_tone2_tone3": 32, "women_holding_hands_tone2_tone4": 32, "women_holding_hands_tone2_tone5": 32, "women_holding_hands_tone3": 32, "women_holding_hands_tone3_tone1": 32, "women_holding_hands_tone3_tone2": 32, "women_holding_hands_tone3_tone4": 32, "women_holding_hands_tone3_tone5": 32, "women_holding_hands_tone4": 32, "women_holding_hands_tone4_tone1": 32, "women_holding_hands_tone4_tone2": 32, "women_holding_hands_tone4_tone3": 32, "women_holding_hands_tone4_tone5": 32, "women_holding_hands_tone5": 32, "women_holding_hands_tone5_tone1": 32, "women_holding_hands_tone5_tone2": 32, "women_holding_hands_tone5_tone3": 32, "women_holding_hands_tone5_tone4": 32, "women_with_bunny_ears_parti": 32, "women_wrestl": 32, "women": 32, "wood": 32, "woozy_fac": 32, "world_map": 32, "worm": [32, 455], "worri": [32, 423], "worship_symbol": 32, "wrench": 32, "wrestler": 32, "wrestlers_tone1": 32, "wrestlers_tone2": 32, "wrestlers_tone3": 32, "wrestlers_tone4": 32, "wrestlers_tone5": 32, "wrestl": 32, "wrestling_tone1": 32, "wrestling_tone2": 32, "wrestling_tone3": 32, "wrestling_tone4": 32, "wrestling_tone5": 32, "writing_hand": 32, "writing_hand_tone1": 32, "writing_hand_tone2": 32, "writing_hand_tone3": 32, "writing_hand_tone4": 32, "writing_hand_tone5": 32, "w": [32, 40, 187, 191, 194, 216, 220, 226, 236, 239, 246, 267, 281, 336, 337, 356, 444, 579, 640, 847, 861, 907, 908, 942, 997, 1037, 1050, 1095, 1097, 1125, 1128, 1133], "xk": 32, "yarn": 32, "yawning_fac": 32, "yellow_circl": 32, "yellow_heart": 32, "yellow_squar": 32, "yemen": 32, "yen": [32, 36], "yin_yang": 32, "yo_yo": 32, "yt": 32, "yum": 32, "za": [32, 291, 375], "zambia": 32, "zany_fac": 32, "zap": 32, "zebra": 32, "zimbabw": 32, "zipper_mouth": 32, "zipper_mouth_fac": 32, "zm": 32, "zombi": 32, "zw": 32, "zzz": 32, "sheet": [33, 65, 152, 191, 203, 339, 341, 342, 688, 862, 906, 907], "layout": [33, 147, 168, 241, 420, 433, 1133], "emoji": 33, "sphinxemoji": 33, "mmlalia": 33, "mathml": 33, "alias": [33, 376, 863], "entiti": [33, 151, 384, 398, 425, 442, 462, 470, 577, 771, 960, 1113], "isoamsa": 33, "mathemat": [33, 243, 1049], "arrow": [33, 35, 36, 38, 73, 74, 862, 992], "isoamsr": 33, "relat": [33, 69, 139, 172, 183, 187, 208, 212, 267, 280, 388, 397, 404, 408, 410, 414, 417, 421, 430, 434, 439, 440, 447, 562, 662, 700, 717, 740, 752, 753, 754, 755, 770, 779, 827, 905, 960, 970, 1100, 1133, 1134], "isonum": 33, "binari": [33, 42, 50, 54, 55, 58, 76, 87, 88, 147, 151, 157, 211, 212, 220, 224, 226, 227, 229, 234, 236, 239, 249, 343, 387, 420, 432, 600, 677, 739, 780, 794, 802, 847, 976, 979, 992, 1004, 1031, 1036, 1113], "sphinxish": 33, "send": [33, 101, 114, 131, 133, 148, 151, 162, 187, 188, 190, 191, 192, 193, 226, 227, 246, 248, 249, 267, 288, 335, 340, 484, 826, 842, 858, 901, 902, 906, 915, 925, 973, 975, 1096, 1113], "v4l": [33, 131], "ssh": [33, 97, 101, 102, 114, 131, 133, 148, 158, 162, 191, 223, 239, 246, 249, 257, 264, 266, 271, 281, 285, 287, 307, 313, 321, 334, 335, 341, 342, 348, 349, 353, 519, 520, 755, 828, 829, 830, 837, 884, 893, 898, 899, 910, 911, 936, 986, 987, 988, 1157, 1159, 1164], "taken": [34, 35, 36, 38, 40, 73, 74, 118, 150, 154, 155, 162, 211, 422, 454, 519, 528, 575, 730, 805, 827, 837, 862, 976, 1027, 1113], "definit": [34, 35, 36, 38, 107, 122, 131, 147, 151, 153, 154, 156, 158, 171, 180, 183, 184, 189, 203, 210, 212, 276, 278, 294, 310, 335, 356, 357, 358, 388, 397, 400, 403, 404, 410, 414, 417, 421, 427, 428, 429, 430, 432, 433, 434, 439, 440, 447, 449, 453, 461, 462, 484, 506, 546, 564, 565, 566, 571, 572, 578, 579, 581, 590, 593, 594, 616, 642, 651, 662, 672, 688, 700, 702, 715, 719, 723, 752, 754, 755, 780, 802, 863, 907, 908, 976, 995, 1002, 1008, 1013, 1024, 1028, 1041, 1042, 1045, 1109, 1123, 1140, 1150, 1153], "includ": [34, 35, 36, 38, 44, 107, 143, 153, 158, 162, 166, 168, 179, 183, 190, 202, 203, 212, 213, 220, 224, 226, 227, 229, 236, 239, 243, 264, 278, 285, 294, 306, 310, 332, 343, 357, 358, 360, 364, 366, 368, 399, 400, 415, 420, 423, 425, 429, 436, 445, 446, 448, 449, 450, 452, 457, 460, 461, 462, 463, 464, 465, 467, 469, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 506, 509, 510, 511, 512, 513, 514, 515, 516, 518, 519, 520, 521, 522, 523, 524, 526, 528, 529, 530, 531, 533, 534, 535, 536, 537, 546, 552, 555, 562, 563, 564, 566, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 587, 590, 591, 592, 593, 594, 595, 597, 598, 599, 600, 601, 603, 604, 607, 608, 609, 613, 617, 618, 619, 620, 621, 627, 631, 632, 635, 637, 638, 640, 644, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 663, 665, 667, 670, 671, 672, 673, 675, 677, 678, 679, 680, 683, 684, 685, 686, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 702, 703, 704, 705, 707, 709, 710, 712, 714, 718, 719, 720, 721, 722, 723, 724, 727, 729, 732, 734, 735, 736, 739, 741, 743, 745, 749, 750, 751, 753, 755, 761, 766, 771, 773, 780, 782, 784, 786, 788, 790, 794, 796, 798, 807, 812, 816, 819, 822, 839, 859, 862, 868, 895, 900, 902, 906, 922, 924, 925, 926, 928, 931, 932, 933, 934, 935, 938, 940, 943, 951, 955, 957, 960, 966, 969, 973, 976, 979, 988, 991, 992, 994, 996, 1024, 1025, 1050, 1051, 1123, 1129, 1135, 1140, 1142, 1145, 1155], "substitut": [34, 35, 36, 38, 106, 131, 203, 239, 285, 332, 426, 442, 446, 677, 919, 1112], "angzarr": 34, "0237c": 34, "angl": [34, 36, 38, 1156], "WITH": [34, 35, 38, 925], "downward": [34, 35, 36, 38, 454], "zigzag": 34, "cirmid": 34, "02aef": 34, "vertic": [34, 35, 36, 38, 377], "circl": [34, 35, 38, 213, 538, 842], "abov": [34, 35, 38, 78, 114, 119, 151, 153, 154, 155, 156, 158, 162, 166, 170, 189, 192, 203, 212, 220, 226, 236, 239, 243, 302, 346, 393, 416, 426, 436, 462, 482, 484, 506, 509, 510, 519, 520, 545, 555, 572, 573, 577, 578, 597, 641, 703, 763, 796, 802, 812, 829, 830, 846, 874, 906, 907, 908, 932, 936, 962, 969, 992, 1000, 1031, 1045, 1116, 1122, 1133, 1140], "cudarrl": 34, "02938": 34, "side": [34, 171, 193, 267, 276, 372, 381, 422, 484, 516, 555, 579, 581, 582, 732, 782, 786, 841, 862, 910, 1000, 1033, 1079, 1105, 1107, 1116], "arc": 34, "clockwis": [34, 38], "cudarrr": 34, "02935": 34, "rightward": [34, 35, 36, 38], "THEN": 34, "curv": [34, 35], "cularr": 34, "021b6": [34, 38], "anticlockwis": [34, 38], "semicircl": [34, 38], "cularrp": 34, "0293d": 34, "plu": [34, 35, 36, 38, 65, 152, 158, 220, 226, 236, 239, 252, 393, 520, 546, 578, 580, 582, 802, 928], "curarr": 34, "021b7": [34, 38], "curarrm": 34, "0293c": 34, "minu": [34, 35, 36, 38, 231, 580, 723], "darr": [34, 36], "021a1": 34, "head": [34, 38, 40, 61, 112, 152, 154, 157, 191, 193, 203, 257, 266, 275, 287, 288, 732, 755, 832, 888, 889, 892, 895, 898, 923, 924, 991, 1057], "021d3": [34, 38], "doubl": [34, 35, 36, 38, 120, 123, 213, 229, 233, 239, 343, 358, 376, 377, 378, 381, 400, 420, 429, 461, 467, 472, 474, 481, 490, 492, 493, 498, 499, 500, 501, 502, 503, 506, 514, 516, 518, 519, 520, 531, 562, 564, 570, 572, 573, 577, 581, 613, 640, 664, 667, 670, 673, 677, 682, 683, 684, 685, 698, 717, 718, 720, 723, 732, 739, 741, 743, 744, 745, 746, 802, 862, 906, 1000, 1020, 1044, 1121], "darr2": 34, "021ca": [34, 38], "pair": [34, 38, 101, 102, 119, 120, 166, 208, 218, 221, 224, 229, 233, 234, 239, 246, 248, 260, 261, 284, 290, 463, 467, 470, 520, 538, 616, 617, 618, 621, 663, 709, 710, 714, 755, 766, 771, 898, 910, 911, 912, 914, 994, 1004, 1048, 1100, 1111, 1128], "ddarr": 34, "ddotrahd": 34, "02911": 34, "dot": [34, 35, 36, 38, 155, 436, 451, 456, 884, 978], "stem": [34, 771], "dfisht": 34, "0297f": 34, "down": [34, 35, 38, 150, 151, 154, 179, 256, 294, 310, 341, 362, 403, 448, 449, 460, 467, 509, 516, 517, 518, 519, 538, 580, 613, 638, 660, 677, 702, 719, 755, 770, 771, 802, 848, 894, 901, 908, 976, 979, 1140, 1145], "tail": [34, 38, 152, 191, 193, 203, 257, 266, 287, 288, 732, 755, 790, 832, 889, 892, 895, 898, 1125], "dhar": 34, "02965": 34, "harpoon": [34, 38], "barb": [34, 38], "left": [34, 35, 36, 38, 63, 84, 110, 111, 119, 150, 151, 153, 171, 202, 213, 239, 285, 379, 380, 387, 393, 465, 509, 516, 562, 565, 569, 577, 578, 635, 642, 668, 844, 845, 862, 906, 915, 934, 976, 1004, 1008, 1019, 1020, 1031, 1045, 1099, 1105, 1123], "besid": [34, 35, 38, 166], "dharl": 34, "021c3": [34, 38], "leftward": [34, 35, 36, 38], "dharr": 34, "021c2": [34, 38], "dlarr": 34, "02199": [34, 38], "south": [34, 38], "west": [34, 38, 160], "drarr": 34, "02198": [34, 38], "east": [34, 38], "duarr": 34, "021f5": [34, 38], "OF": [34, 35, 38, 154, 710], "upward": [34, 36, 38], "duhar": 34, "0296f": [34, 38], "dzigrarr": 34, "027ff": 34, "long": [34, 35, 38, 53, 126, 150, 151, 152, 153, 154, 158, 161, 179, 183, 191, 203, 220, 224, 226, 229, 236, 239, 247, 275, 335, 353, 364, 374, 376, 377, 381, 385, 386, 413, 420, 422, 431, 435, 437, 438, 457, 462, 519, 564, 565, 570, 575, 640, 710, 719, 729, 739, 741, 743, 745, 753, 761, 773, 782, 784, 800, 802, 807, 812, 816, 841, 862, 884, 908, 919, 925, 928, 958, 966, 995, 1002, 1042, 1052, 1100, 1107, 1118, 1125, 1153], "squiggl": 34, "erarr": 34, "02971": 34, "equal": [34, 35, 36, 38, 153, 175, 187, 203, 210, 213, 239, 243, 275, 276, 285, 297, 313, 358, 364, 380, 387, 392, 403, 428, 431, 508, 514, 521, 525, 560, 605, 624, 628, 655, 657, 723, 755, 837, 841, 895, 919, 958, 962, 963, 1031, 1085, 1140], "sign": [34, 35, 36, 38, 154, 161, 166, 229, 374, 376, 384, 428, 442, 466, 640, 703, 775, 1031, 1045, 1105, 1150, 1151], "harr": 34, "021d4": [34, 38], "02194": [34, 38], "harrcir": 34, "02948": 34, "small": [34, 38, 43, 106, 150, 152, 153, 183, 203, 207, 263, 302, 312, 356, 428, 432, 465, 517, 562, 674, 719, 899, 900, 906, 938, 970, 1023, 1046, 1112, 1140], "harrw": 34, "021ad": [34, 38], "hoarr": 34, "021ff": 34, "imof": 34, "022b7": 34, "imag": [34, 35, 38, 145, 147, 150, 151, 152, 153, 161, 174, 236, 239, 243, 261, 335, 341, 438, 444, 451, 570, 780, 802, 899, 1102, 1107], "laarr": 34, "021da": [34, 38], "tripl": [34, 35, 38, 59, 62], "larr": [34, 36], "0219e": [34, 38], "larr2": 34, "021c7": [34, 38], "larrbf": 34, "0291f": 34, "bar": [34, 35, 36, 38, 157, 178, 198, 221, 234, 239, 248, 251, 281, 284, 285, 290, 303, 307, 313, 344, 444, 509, 724, 998, 1040, 1100], "TO": [34, 35, 38, 1055], "black": [34, 38, 156, 207, 215, 227, 230, 616, 988], "larrf": 34, "0291d": 34, "larrhk": 34, "021a9": [34, 38], "larrlp": 34, "021ab": [34, 38], "larrpl": 34, "02939": 34, "larrsim": 34, "02973": 34, "tild": [34, 35, 38], "larrtl": 34, "021a2": [34, 38], "latail": 34, "0291b": 34, "02919": 34, "lbarr": 34, "0290e": 34, "0290c": 34, "ldca": 34, "02936": 34, "ldrdhar": 34, "02967": 34, "ldrushar": 34, "0294b": 34, "ldsh": 34, "021b2": 34, "tip": [34, 38, 208, 218, 221, 224, 248, 260, 284, 290, 1100], "lfisht": 34, "0297c": 34, "lhar": 34, "02962": 34, "lhard": 34, "021bd": [34, 38], "lharu": 34, "021bc": [34, 38], "lharul": 34, "0296a": 34, "llarr": 34, "llhard": 34, "0296b": 34, "below": [34, 35, 38, 122, 129, 147, 151, 152, 153, 156, 158, 162, 171, 183, 192, 210, 243, 256, 302, 367, 369, 436, 443, 454, 487, 501, 509, 510, 516, 519, 654, 656, 670, 682, 702, 703, 719, 723, 732, 734, 750, 751, 753, 775, 796, 837, 841, 845, 862, 899, 908, 929, 973, 976, 1140], "loarr": 34, "021fd": 34, "lrarr": 34, "021c6": [34, 38], "lrarr2": 34, "lrhar": 34, "021cb": [34, 38], "lrhar2": 34, "lrhard": 34, "0296d": 34, "lsh": [34, 38], "021b0": [34, 38], "lurdshar": 34, "0294a": 34, "luruhar": 34, "02966": 34, "02905": 34, "021a6": [34, 38], "midcir": 34, "02af0": 34, "mumap": 34, "022b8": [34, 38], "multimap": [34, 38, 276, 538, 615, 624, 628, 657, 755], "nearhk": 34, "02924": 34, "north": [34, 38], "nearr": 34, "021d7": 34, "02197": [34, 38], "nesear": 34, "02928": [34, 38], "AND": [34, 35, 38, 364, 380, 403, 566, 890, 1019], "nharr": 34, "021ce": [34, 38], "stroke": [34, 38], "021ae": [34, 38], "nlarr": 34, "021cd": [34, 38], "0219a": [34, 38], "nrarr": 34, "021cf": [34, 38], "0219b": [34, 38], "nrarrc": 34, "02933": 34, "00338": [34, 38], "directli": [34, 40, 119, 147, 166, 252, 277, 321, 460, 577, 646, 773, 786, 798, 805, 816, 908, 918, 922, 976, 999, 1019, 1027, 1090, 1092, 1119], "slash": [34, 38, 886, 970], "nrarrw": 34, "0219d": [34, 38], "nvharr": 34, "02904": 34, "nvlarr": 34, "02902": 34, "nvrarr": 34, "02903": 34, "nwarhk": 34, "02923": 34, "nwarr": 34, "021d6": 34, "02196": [34, 38], "nwnear": 34, "02927": 34, "olarr": 34, "021ba": [34, 38], "orarr": 34, "021bb": [34, 38], "origof": 34, "022b6": 34, "origin": [34, 35, 38, 61, 63, 112, 133, 148, 154, 156, 161, 166, 172, 184, 216, 220, 226, 229, 231, 236, 239, 264, 275, 280, 284, 285, 287, 288, 290, 294, 302, 306, 310, 312, 316, 402, 418, 462, 465, 516, 563, 571, 572, 573, 601, 652, 653, 655, 656, 714, 718, 721, 723, 734, 775, 802, 803, 826, 829, 830, 845, 859, 997, 1102, 1113, 1135], "raarr": 34, "021db": [34, 38], "rarr": [34, 36], "021a0": [34, 38], "rarr2": 34, "021c9": [34, 38], "rarrap": 34, "02975": 34, "almost": [34, 35, 38, 59, 62, 153, 166, 175, 212, 381, 429, 431, 452, 567, 632, 660, 708, 724, 970], "rarrbf": 34, "02920": 34, "rarrc": 34, "rarrf": 34, "0291e": 34, "rarrhk": 34, "021aa": [34, 38], "rarrlp": 34, "021ac": [34, 38], "rarrpl": 34, "02945": 34, "rarrsim": 34, "02974": 34, "rarrtl": 34, "02916": 34, "021a3": [34, 38], "rarrw": 34, "ratail": 34, "0291c": 34, "0291a": 34, "rbarr": 34, "02910": [34, 38], "0290f": [34, 38], "0290d": [34, 38], "rdca": 34, "02937": 34, "rdldhar": 34, "02969": 34, "rdsh": 34, "021b3": 34, "rfisht": 34, "0297d": 34, "rhar": 34, "02964": 34, "rhard": 34, "021c1": [34, 38], "rharu": 34, "021c0": [34, 38], "rharul": 34, "0296c": 34, "rlarr": 34, "021c4": [34, 38], "rlarr2": 34, "rlhar": 34, "021cc": [34, 38], "rlhar2": 34, "roarr": 34, "021fe": 34, "rrarr": 34, "rsh": [34, 38, 578, 909], "021b1": [34, 38], "ruluhar": 34, "02968": 34, "searhk": 34, "02925": [34, 38], "searr": 34, "021d8": 34, "seswar": 34, "02929": [34, 38], "simrarr": 34, "02972": 34, "slarr": 34, "02190": [34, 36, 38], "srarr": 34, "02192": [34, 36, 38], "swarhk": 34, "02926": [34, 38], "swarr": 34, "021d9": 34, "swnwar": 34, "0292a": 34, "uarr": [34, 36], "0219f": 34, "021d1": [34, 38], "uarr2": 34, "021c8": [34, 38], "uarrocir": 34, "02949": 34, "udarr": 34, "021c5": [34, 38], "udhar": 34, "0296e": [34, 38], "ufisht": 34, "0297e": 34, "uhar": 34, "02963": 34, "uharl": 34, "021bf": [34, 38], "uharr": 34, "021be": [34, 38], "uuarr": 34, "varr": 34, "021d5": [34, 38], "02195": [34, 38], "xharr": 34, "027fa": [34, 38], "027f7": [34, 38], "xlarr": 34, "027f8": [34, 38], "027f5": [34, 38], "xmap": 34, "027fc": [34, 38], "xrarr": 34, "027f9": [34, 38], "027f6": [34, 38], "zigrarr": 34, "021dd": 34, "ap": [35, 932], "02a70": 35, "approxim": [35, 38, 153, 249], "OR": [35, 38, 226, 364, 380, 403, 420, 890, 1019], "0224a": [35, 38], "apid": 35, "0224b": 35, "asymp": 35, "02248": [35, 38], "barv": 35, "02ae7": 35, "tack": [35, 38], "overbar": 35, "bcong": 35, "0224c": [35, 38], "bepsi": 35, "003f6": [35, 38], "greek": [35, 38], "revers": [35, 36, 38, 196, 223, 229, 246, 264, 271, 276, 285, 291, 313, 361, 538, 545, 546, 605, 609, 624, 628, 657, 702, 755, 757, 796, 835, 899, 960, 1047, 1080], "lunat": [35, 38], "epsilon": [35, 38], "bowti": 35, "022c8": 35, "bsim": 35, "0223d": [35, 38], "bsime": 35, "022cd": [35, 38], "bsolhsub": 35, "0005c": [35, 36], "02282": [35, 38], "solidu": [35, 36], "subset": [35, 38, 239, 979, 992, 1049], "bump": 35, "0224e": [35, 38], "geometr": [35, 38, 243], "equival": [35, 38, 78, 92, 106, 109, 239, 389, 393, 408, 413, 574, 651, 826, 828, 863, 895, 928, 1008, 1030, 1040, 1050], "02aae": 35, "bumpi": 35, "0224f": [35, 38], "between": [35, 38, 69, 89, 103, 126, 151, 152, 153, 155, 161, 162, 172, 187, 199, 212, 220, 223, 226, 231, 233, 236, 239, 243, 246, 261, 264, 271, 285, 290, 303, 313, 316, 321, 331, 365, 368, 381, 403, 408, 415, 428, 433, 442, 453, 474, 484, 506, 514, 578, 595, 654, 710, 720, 724, 735, 756, 757, 761, 807, 833, 834, 839, 899, 906, 936, 946, 960, 961, 962, 963, 970, 974, 1008, 1019, 1029, 1031, 1042, 1106, 1158], "cire": 35, "02257": [35, 38], "colon": [35, 36, 38, 1078], "02237": [35, 38], "proport": [35, 38, 152], "02a74": 35, "02254": [35, 38], "congdot": 35, "02a6d": 35, "congruent": [35, 38], "csub": 35, "02acf": 35, "close": [35, 54, 131, 156, 162, 171, 183, 201, 210, 211, 224, 231, 255, 256, 258, 281, 285, 313, 315, 316, 408, 442, 447, 520, 538, 688, 716, 725, 733, 754, 755, 845, 906, 924, 925, 926, 928, 929, 931, 932, 933, 934, 935, 938, 940, 943, 969, 973, 997, 1109, 1166], "csube": 35, "02ad1": 35, "csup": 35, "02ad0": 35, "superset": [35, 38, 1049, 1152], "csupe": 35, "02ad2": 35, "cuepr": 35, "022de": [35, 38], "cuesc": 35, "022df": [35, 38], "succe": [35, 38, 780, 881, 910, 999], "cupr": 35, "0227c": [35, 38], "dashv": 35, "02ae4": [35, 38], "turnstil": [35, 38], "022a3": [35, 38], "easter": [35, 203], "02a6e": 35, "asterisk": [35, 36, 38], "ecir": 35, "02256": [35, 38], "IN": [35, 38, 155], "ecolon": 35, "02255": [35, 38], "eddot": 35, "02a77": [35, 38], "edot": 35, "02251": [35, 38], "efdot": 35, "02252": [35, 38], "THE": [35, 38, 925], "02a9a": 35, "greater": [35, 36, 38, 106, 114, 278, 380, 508, 514, 522, 525, 560, 702, 755, 788, 1031], "than": [35, 36, 38, 43, 65, 68, 106, 112, 114, 122, 130, 131, 147, 151, 152, 156, 158, 161, 162, 166, 183, 187, 190, 194, 203, 210, 213, 220, 226, 231, 233, 236, 239, 243, 270, 273, 278, 302, 305, 321, 380, 381, 400, 402, 431, 432, 433, 444, 445, 447, 453, 460, 508, 516, 522, 525, 560, 564, 576, 579, 581, 582, 647, 660, 671, 697, 710, 734, 755, 758, 773, 788, 794, 798, 802, 862, 887, 891, 899, 907, 917, 918, 925, 928, 945, 973, 977, 992, 993, 1008, 1013, 1030, 1031, 1075, 1079, 1109, 1116, 1119, 1135, 1153], "02a96": [35, 38], "slant": [35, 38], "egsdot": 35, "02a98": 35, "el": [35, 199, 210, 246], "02a99": 35, "less": [35, 36, 38, 59, 62, 78, 147, 151, 152, 153, 158, 162, 212, 226, 243, 257, 266, 267, 273, 287, 288, 358, 380, 381, 385, 428, 431, 462, 514, 618, 638, 664, 710, 712, 734, 755, 773, 775, 802, 832, 846, 862, 889, 892, 893, 895, 898, 928, 1013, 1031, 1050, 1128, 1129, 1142, 1153, 1159], "02a95": [35, 38], "elsdot": 35, "02a97": 35, "equest": 35, "0225f": [35, 38], "equivdd": 35, "02a78": 35, "erdot": 35, "02253": [35, 38], "esdot": 35, "02250": [35, 38], "limit": [35, 38, 63, 151, 152, 168, 190, 220, 226, 236, 239, 285, 381, 423, 616, 660, 802, 839, 944, 963, 1005, 1006, 1031, 1104, 1126], "esim": 35, "02a73": 35, "02242": [35, 38], "fork": [35, 43, 130, 153, 168, 172, 755, 761, 762, 764, 769, 772, 779, 783, 793, 806, 811, 817, 820, 823, 898, 931, 944, 952, 970, 1166], "022d4": [35, 38], "pitchfork": [35, 38], "forkv": 35, "02ad9": 35, "02322": 35, "gap": 35, "02a86": [35, 38], "02267": [35, 38], "gel": 35, "02a8c": [35, 38], "022db": [35, 38], "02a7e": [35, 38], "gescc": 35, "02aa9": 35, "gesdot": 35, "02a80": 35, "gesdoto": 35, "02a82": 35, "gesdotol": 35, "02a84": 35, "gesl": 35, "0fe00": [35, 38], "02a94": 35, "022d9": [35, 38], "02277": [35, 38], "gla": 35, "02aa5": 35, "gle": 35, "02a92": 35, "glj": 35, "02aa4": 35, "overlap": [35, 239, 243, 285, 753, 786, 1011], "gsdot": 35, "022d7": [35, 38], "gsim": 35, "02273": [35, 38], "gsime": 35, "02a8e": 35, "similar": [35, 59, 62, 120, 151, 153, 183, 187, 191, 193, 224, 237, 251, 383, 390, 461, 488, 517, 518, 549, 561, 570, 688, 723, 724, 750, 751, 773, 788, 802, 846, 992, 994, 1100], "gsiml": 35, "02a90": 35, "0226b": [35, 38], "gtcc": 35, "02aa7": 35, "gtcir": 35, "02a7a": 35, "gtdot": 35, "gtquest": 35, "02a7c": 35, "mark": [35, 36, 38, 210, 251, 336, 337, 377, 399, 699, 707, 818, 1008, 1010, 1128], "gtrarr": 35, "02978": 35, "homtht": 35, "0223b": 35, "homothet": 35, "lap": 35, "02a85": [35, 38], "lat": 35, "02aab": 35, "larger": [35, 68, 78, 183, 190, 213, 230, 243, 293, 309, 429, 432, 444, 482, 562, 579, 581, 773, 822, 844, 906, 908, 973, 993, 1006, 1155], "late": [35, 151, 153, 276, 278, 723, 724, 908, 964, 1008, 1025, 1042, 1156], "02aad": 35, "ldot": 35, "022d6": [35, 38], "le": [35, 482], "02266": [35, 38], "02a8b": [35, 38], "022da": [35, 38], "02a7d": [35, 38], "lescc": 35, "02aa8": 35, "lesdot": 35, "02a7f": 35, "lesdoto": 35, "02a81": 35, "lesdotor": 35, "02a83": 35, "lesg": 35, "02a93": 35, "lg": [35, 291, 307, 1113], "02276": [35, 38], "lge": 35, "02a91": 35, "ll": [35, 38, 59, 62, 114, 150, 151, 152, 154, 156, 158, 161, 166, 167, 179, 181, 191, 193, 207, 236, 239, 267, 270, 273, 503, 517, 579, 581, 582, 802, 828, 899, 908, 919, 934, 981, 984, 990, 1023, 1116], "022d8": 35, "lsim": 35, "02272": [35, 38], "lsime": 35, "02a8d": 35, "lsimg": 35, "02a8f": 35, "0226a": [35, 38], "ltcc": 35, "02aa6": 35, "ltcir": 35, "02a79": 35, "ltdot": 35, "ltlarr": 35, "02976": 35, "ltquest": 35, "02a7b": 35, "ltrie": 35, "022b4": [35, 38], "normal": [35, 38, 88, 139, 151, 153, 158, 166, 169, 174, 183, 243, 420, 447, 452, 457, 576, 578, 818, 834, 839, 960, 974, 1027, 1106, 1119, 1133, 1145], "mcomma": 35, "02a29": 35, "comma": [35, 36, 189, 202, 223, 303, 1108], "mddot": 35, "0223a": 35, "mid": 35, "02223": [35, 38], "mlcp": 35, "02adb": 35, "transvers": 35, "intersect": [35, 38, 207, 231, 303, 1049], "model": [35, 112, 254, 269, 275, 278, 419, 1031, 1103, 1106, 1125], "022a7": 35, "mstpo": 35, "0223e": 35, "invert": [35, 36, 63, 183, 942], "lazi": [35, 220, 226, 236, 239, 372, 719], "02abb": 35, "0227a": [35, 38], "prap": 35, "02ab7": [35, 38], "prcue": 35, "pre": [35, 153, 183, 212, 382, 564, 566, 570, 616, 617, 618, 668, 709, 710, 862, 1024, 1039, 1112], "02ab3": 35, "02aaf": [35, 38], "singl": [35, 36, 38, 44, 59, 62, 63, 84, 106, 110, 111, 114, 119, 122, 131, 133, 151, 153, 171, 210, 211, 220, 224, 226, 232, 233, 236, 239, 243, 267, 358, 364, 376, 377, 389, 435, 438, 442, 444, 447, 473, 486, 571, 625, 699, 710, 718, 720, 731, 761, 771, 773, 835, 837, 838, 839, 862, 867, 868, 869, 871, 887, 899, 907, 911, 947, 958, 960, 961, 970, 973, 977, 979, 982, 988, 992, 993, 994, 1007, 1044, 1045, 1052, 1067, 1073, 1106, 1113, 1121, 1124, 1128, 1133, 1134, 1141], "prsim": 35, "0227e": [35, 38], "prurel": 35, "022b0": 35, "ratio": [35, 243], "02236": 35, "rtrie": 35, "022b5": [35, 38], "AS": [35, 38, 925], "rtriltri": 35, "029ce": 35, "triangl": [35, 38, 538], "samalg": 35, "02210": [35, 38], "coproduct": [35, 38], "02abc": 35, "0227b": [35, 38], "scap": 35, "02ab8": [35, 38], "sccue": 35, "0227d": [35, 38], "sce": 35, "02ab4": 35, "02ab0": [35, 38], "scsim": 35, "0227f": [35, 38], "sdote": 35, "02a66": 35, "sfrown": 35, "simg": 35, "02a9e": 35, "02aa0": 35, "siml": 35, "02a9d": 35, "02a9f": 35, "smid": 35, "02323": 35, "smt": 35, "02aaa": 35, "smaller": [35, 229, 243, 358, 420, 429, 444, 994], "smte": 35, "02aac": 35, "spar": [35, 269, 444], "02225": [35, 38], "parallel": [35, 38, 59, 62, 72, 73, 74, 78, 91, 157, 180, 183, 187, 189, 224, 279, 280, 301, 452, 732, 755, 792, 794, 802, 805, 838, 846, 947, 958, 961, 1008, 1010, 1011, 1095, 1100, 1157, 1158, 1165, 1169], "sqsub": 35, "0228f": [35, 38], "squar": [35, 36, 38, 63, 171, 184, 194, 210, 216, 223, 226, 231, 233, 239, 243, 252, 264, 278, 285, 303, 307, 313, 470, 581, 1002, 1051, 1054, 1121], "sqsube": 35, "02291": [35, 38], "sqsup": 35, "02290": [35, 38], "sqsupe": 35, "02292": [35, 38], "ssmile": 35, "sub": [35, 227, 239, 285, 465, 482, 562, 998, 1037, 1046, 1052, 1142], "022d0": [35, 38], "sube": 35, "02ac5": [35, 38], "subedot": 35, "02ac3": 35, "submult": 35, "02ac1": 35, "subplu": 35, "02abf": 35, "subrarr": 35, "02979": 35, "subsim": 35, "02ac7": 35, "subsub": 35, "02ad5": 35, "subsup": 35, "02ad3": 35, "sup": [35, 932], "022d1": [35, 38], "supdsub": 35, "02ad8": 35, "supe": 35, "02ac6": [35, 38], "supedot": 35, "02ac4": 35, "suphsol": 35, "02283": [35, 38], "0002f": [35, 36], "suphsub": 35, "02ad7": 35, "suplarr": 35, "0297b": 35, "supmult": 35, "02ac2": 35, "supplu": 35, "02ac0": 35, "supsim": 35, "02ac8": 35, "supsub": 35, "02ad4": 35, "supsup": 35, "02ad6": 35, "thkap": 35, "thksim": 35, "0223c": [35, 38], "topfork": 35, "02ada": 35, "tee": [35, 846], "trie": 35, "0225c": [35, 38], "delta": [35, 38, 112, 166, 216], "twixt": 35, "0226c": [35, 38], "vbar": 35, "02aeb": 35, "02ae8": 35, "underbar": 35, "vbarv": 35, "02ae9": 35, "vdash": 35, "022ab": 35, "022a9": 35, "022a8": [35, 38], "022a2": [35, 38], "vdashl": 35, "02ae6": 35, "veebar": 35, "022bb": 35, "xor": [35, 1019], "vltri": 35, "022b2": [35, 38], "vprop": 35, "0221d": [35, 38], "vrtri": 35, "022b3": [35, 38], "vvdash": 35, "022aa": 35, "\u00bd": 36, "\u00bc": 36, "\u215b": 36, "\u00be": 36, "\u215c": 36, "\u215d": 36, "\u215e": 36, "_": [36, 39, 63, 171, 172, 207, 220, 223, 224, 226, 233, 236, 239, 246, 249, 261, 285, 307, 327, 375, 444, 574, 697, 792, 862, 964, 990, 1008, 1010], "\u00b5": 36, "\u03c9": 36, "\u00aa": 36, "\u00ba": 36, "\u00b9": 36, "\u00b2": 36, "\u00b3": 36, "amp": [36, 223], "00026": 36, "ampersand": [36, 673], "apo": 36, "00027": 36, "apostroph": 36, "ast": [36, 482], "0002a": 36, "brvbar": 36, "000a6": 36, "broken": [36, 418, 419, 688, 794, 807, 1012, 1078, 1108], "bsol": 36, "cent": 36, "000a2": 36, "0003a": 36, "0002c": 36, "commat": 36, "00040": 36, "commerci": [36, 158, 780, 841], "AT": 36, "000a9": 36, "curren": 36, "000a4": 36, "currenc": [36, 269, 444], "02193": [36, 38], "deg": 36, "000b0": 36, "degre": [36, 461, 472, 503, 614, 908, 1025], "000f7": [36, 38], "00024": 36, "0003d": 36, "excl": 36, "00021": 36, "frac12": 36, "000bd": 36, "vulgar": 36, "fraction": [36, 243, 321], "ONE": [36, 661], "frac14": 36, "000bc": 36, "quarter": 36, "frac18": 36, "0215b": 36, "eighth": 36, "frac34": 36, "000be": 36, "frac38": 36, "0215c": 36, "frac58": 36, "0215d": 36, "frac78": 36, "0215e": 36, "0003e": 36, "horbar": 36, "02015": 36, "horizont": [36, 377], "hyphen": 36, "02010": 36, "iexcl": 36, "000a1": 36, "iquest": 36, "000bf": 36, "laquo": 36, "000ab": 36, "quotat": [36, 38], "lcub": 36, "0007b": [36, 38], "curli": [36, 38], "bracket": [36, 38, 1028], "ldquo": 36, "0201c": [36, 38], "lowbar": 36, "0005f": 36, "low": [36, 115, 147, 194, 223, 243, 260, 370, 402, 438, 442, 447, 470, 493, 506, 509, 510, 514, 718, 720, 784, 798, 838, 906, 962, 978, 1057, 1155], "lpar": 36, "00028": 36, "parenthesi": 36, "lsqb": 36, "0005b": [36, 38], "lsquo": 36, "02018": [36, 38], "0003c": 36, "micro": [36, 220, 226, 236, 239], "000b5": 36, "middot": 36, "000b7": [36, 38], "middl": [36, 38, 39, 63, 161, 172, 227, 243, 295, 298, 422, 442, 509, 538, 780, 899, 909, 915, 976, 1010], "nbsp": 36, "000a0": [36, 38], "NO": [36, 38, 162, 203, 332, 641, 908, 973], "space": [36, 38, 63, 78, 99, 110, 111, 114, 147, 151, 152, 153, 158, 171, 174, 198, 212, 239, 257, 264, 266, 267, 285, 287, 288, 326, 337, 338, 346, 365, 384, 386, 405, 466, 471, 480, 484, 508, 509, 510, 511, 512, 513, 514, 515, 518, 560, 569, 578, 613, 733, 754, 755, 763, 800, 815, 829, 830, 831, 832, 836, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 876, 877, 878, 879, 880, 882, 898, 907, 910, 911, 912, 913, 914, 921, 925, 926, 927, 928, 929, 937, 939, 944, 952, 953, 955, 956, 959, 961, 969, 976, 978, 980, 981, 982, 983, 984, 985, 986, 987, 993, 1008, 1011, 1045], "000ac": 36, "NOT": [36, 38, 181, 364, 403, 448, 487, 488, 501, 502, 773, 890, 1119], "num": [36, 156, 170, 171, 184, 194, 210, 224, 226, 231, 233, 239, 243, 261, 264, 303, 307, 408, 593, 595, 677, 678, 679, 680, 689, 709, 739, 741, 743, 745, 890, 895, 1003, 1108], "00023": 36, "ohm": 36, "02126": 36, "ordf": 36, "000aa": 36, "feminin": 36, "ordin": [36, 239, 246, 249, 285, 291, 307, 313, 1113], "indic": [36, 202, 220, 226, 231, 236, 239, 275, 616, 763], "ordm": 36, "000ba": 36, "masculin": 36, "para": 36, "000b6": 36, "pilcrow": 36, "percnt": 36, "00025": 36, "percent": [36, 243], "period": [36, 84, 123, 126, 168, 191, 436, 569, 735, 812, 899, 907, 926, 936, 958, 960, 973, 1128], "0002e": 36, "full": [36, 124, 131, 169, 214, 218, 264, 381, 396, 424, 429, 532, 543, 578, 682, 719, 732, 755, 841, 846, 907, 949, 955, 1000, 1019, 1052, 1108, 1116], "stop": [36, 145, 156, 212, 239, 276, 278, 280, 285, 303, 313, 320, 447, 487, 501, 796, 899, 974, 999, 1122, 1140], "0002b": 36, "plusmn": 36, "000b1": [36, 38], "000a3": 36, "quest": 36, "0003f": 36, "quot": [36, 171, 219, 222, 226, 233, 239, 247, 377, 827, 890, 891, 909, 1044], "00022": 36, "raquo": 36, "000bb": 36, "rcub": 36, "0007d": [36, 38], "rdquo": 36, "0201d": [36, 38], "reg": 36, "000ae": [36, 38], "rpar": 36, "00029": 36, "rsqb": 36, "0005d": [36, 38], "rsquo": 36, "02019": [36, 38], "sect": 36, "000a7": 36, "section": [36, 38, 88, 151, 155, 156, 157, 166, 175, 188, 212, 270, 273, 276, 353, 546, 564, 646, 731, 792, 794, 862, 905, 906, 922, 976, 977, 978, 980, 986, 992, 993, 994, 1133], "semi": [36, 271, 305, 474, 718, 944, 995], "0003b": 36, "semicolon": [36, 447, 1108], "shy": 36, "000ad": 36, "soft": [36, 148, 342, 800], "sol": 36, "sung": 36, "0266a": 36, "sup1": 36, "000b9": 36, "superscript": 36, "sup2": 36, "000b2": 36, "sup3": 36, "000b3": 36, "000d7": 36, "trade": 36, "02122": 36, "02191": [36, 38], "verbar": 36, "0007c": [36, 38], "000a5": 36, "lorem": 37, "ipsum": 37, "h\u00f6dlmoser": 37, "anywai": [37, 43, 53, 61, 150, 152, 153, 162, 181, 183, 203, 212, 213, 239, 384, 432, 438, 442, 448, 564, 570, 579, 581, 582, 660, 668, 671, 675, 709, 710, 720, 794, 802, 841, 862, 952, 1008, 1119, 1133], "hmm": [37, 148, 157, 170, 181, 549, 682, 973], "annoi": [37, 43, 321, 444, 660, 1133], "thing": [37, 40, 42, 43, 49, 100, 126, 144, 150, 151, 153, 154, 155, 156, 157, 158, 162, 171, 175, 179, 182, 183, 187, 191, 203, 220, 226, 227, 229, 236, 239, 249, 302, 312, 324, 382, 398, 402, 426, 432, 435, 442, 466, 470, 538, 545, 546, 562, 564, 571, 576, 578, 600, 660, 682, 699, 723, 732, 753, 761, 766, 798, 802, 827, 841, 846, 895, 899, 900, 927, 932, 955, 960, 976, 988, 992, 993, 999, 1013, 1027, 1050, 1140, 1158], "thin": [37, 38], "border": 37, "anfrag": [37, 1149, 1150, 1151, 1152, 1157, 1159, 1160, 1164, 1165, 1166, 1167, 1169, 1170, 1171], "dauer": [37, 1149, 1150, 1151, 1152, 1157, 1159, 1160, 1164, 1165, 1166, 1167, 1169, 1170, 1171], "tage": [37, 176, 178, 186, 352, 1149, 1150, 1151, 1152, 1157, 1159, 1160, 1164, 1166, 1167, 1169, 1170, 1171], "sysprog": [37, 147, 148, 267, 354, 755, 809, 814, 898, 939, 940, 943, 1166, 1167, 1169, 1170], "catcher": 37, "somehow": [37, 42, 120, 126, 130, 135, 152, 305, 576, 810, 1128, 1129], "einf\u00fchrungskur": [37, 1149, 1166, 1167, 1169, 1170], "richtet": [37, 1151, 1166], "kennen": [37, 336, 1166], "lernen": [37, 1166], "zusammenh\u00e4ng": [37, 1166], "grundpfeil": [37, 1166], "erkl\u00e4rt": [37, 171, 174, 178, 1150, 1166, 1170, 1171], "bild": [37, 174, 1166], "orientieren": [37, 1166], "zurechtfinden": [37, 336, 1166], "somedai": 37, "better": [37, 57, 61, 65, 130, 145, 147, 148, 152, 156, 162, 163, 173, 183, 184, 186, 187, 189, 190, 191, 194, 195, 208, 212, 218, 220, 221, 223, 224, 229, 230, 231, 233, 234, 237, 240, 243, 248, 252, 260, 267, 280, 284, 290, 361, 373, 381, 388, 397, 402, 403, 404, 410, 414, 417, 421, 422, 430, 432, 434, 439, 440, 443, 447, 452, 453, 458, 460, 538, 565, 573, 587, 600, 617, 640, 652, 655, 660, 662, 700, 712, 723, 752, 754, 755, 802, 881, 907, 908, 928, 944, 947, 973, 974, 1002, 1013, 1031, 1045, 1057, 1096, 1097, 1100, 1105, 1107, 1112, 1118, 1133, 1142], "yet": [37, 78, 141, 151, 158, 161, 171, 173, 240, 241, 251, 264, 302, 399, 432, 460, 469, 482, 484, 519, 520, 532, 538, 631, 734, 802, 819, 829, 830, 907, 915, 919, 973, 1000, 1030, 1057, 1124, 1133, 1142], "redefin": 37, "wrap": [37, 63, 210, 248, 302, 481, 720, 726, 802, 1125], "look": [37, 42, 43, 45, 59, 62, 65, 82, 89, 102, 114, 119, 126, 131, 144, 145, 150, 151, 152, 153, 154, 156, 158, 161, 166, 171, 179, 183, 187, 190, 202, 208, 212, 237, 267, 270, 273, 276, 277, 295, 298, 302, 316, 320, 353, 416, 424, 432, 438, 442, 444, 447, 448, 455, 503, 518, 519, 532, 549, 575, 587, 599, 651, 664, 688, 720, 726, 727, 756, 761, 771, 798, 802, 829, 830, 834, 838, 841, 852, 854, 859, 866, 874, 889, 900, 906, 907, 915, 932, 942, 969, 970, 993, 997, 1007, 1024, 1027, 1065, 1069, 1078, 1100, 1107, 1108, 1119, 1135, 1153, 1156], "mdbootstrap": 37, "jqueri": 37, "icon": 37, "longrightarrow": 38, "rightarrow": 38, "doubleleftrightarrow": 38, "02220": 38, "applyfunct": 38, "02061": 38, "applic": [38, 63, 78, 94, 126, 136, 151, 156, 168, 181, 203, 298, 302, 305, 332, 353, 428, 431, 438, 519, 596, 599, 667, 708, 840, 900, 907, 919, 944, 1107], "approx": [38, 1088, 1133], "approxeq": 38, "assign": [38, 97, 171, 172, 173, 178, 184, 194, 201, 209, 220, 223, 226, 229, 231, 235, 236, 241, 243, 247, 271, 275, 276, 278, 303, 308, 335, 341, 342, 364, 381, 387, 388, 397, 404, 410, 411, 414, 417, 421, 426, 428, 430, 434, 439, 440, 474, 481, 487, 488, 496, 501, 502, 564, 565, 568, 575, 631, 640, 647, 657, 661, 662, 664, 668, 675, 698, 700, 705, 714, 720, 751, 752, 754, 755, 906, 908, 947, 958, 961, 963, 1040, 1051, 1122, 1124], "backcong": 38, "backepsilon": 38, "backprim": 38, "02035": 38, "backsim": 38, "backsimeq": 38, "backslash": [38, 377, 886, 1044], "02216": 38, "barwedg": 38, "02305": 38, "02235": 38, "bernoulli": 38, "0212c": 38, "bigcap": 38, "022c2": 38, "bigcirc": 38, "025ef": 38, "bigcup": 38, "022c3": 38, "union": [38, 207, 215, 231, 303, 420, 737, 740, 743, 744, 745, 746, 754, 755, 1049, 1154], "bigodot": 38, "02a00": 38, "bigoplu": 38, "02a01": 38, "bigotim": 38, "02a02": 38, "bigsqcup": 38, "02a06": 38, "bigstar": 38, "02605": 38, "bigtriangledown": 38, "025bd": 38, "white": [38, 275, 366], "bigtriangleup": 38, "025b3": 38, "biguplu": 38, "02a04": 38, "bigve": 38, "022c1": 38, "logic": [38, 115, 153, 324, 372, 388, 397, 402, 404, 410, 414, 417, 421, 426, 430, 434, 439, 440, 467, 484, 662, 700, 752, 754, 755, 1119], "bigwedg": 38, "022c0": 38, "bkarow": 38, "blacklozeng": 38, "029eb": 38, "lozeng": 38, "blacksquar": 38, "025aa": 38, "blacktriangl": 38, "025b4": 38, "blacktriangledown": 38, "025be": 38, "blacktriangleleft": 38, "025c2": 38, "blacktriangleright": 38, "025b8": 38, "bot": [38, 1133], "022a5": 38, "boxminu": 38, "0229f": 38, "boxplu": 38, "0229e": 38, "boxtim": 38, "022a0": 38, "breve": 38, "002d8": 38, "bullet": [38, 153, 1107], "02022": 38, "bumpeq": 38, "capitaldifferentiald": 38, "02145": 38, "struck": 38, "ital": 38, "d": [38, 85, 97, 107, 114, 151, 152, 153, 154, 170, 173, 181, 184, 189, 194, 199, 201, 207, 210, 213, 216, 217, 221, 223, 224, 226, 231, 233, 236, 239, 243, 246, 249, 261, 264, 267, 271, 280, 281, 284, 285, 291, 299, 303, 307, 313, 327, 329, 330, 335, 358, 365, 366, 368, 372, 399, 403, 432, 442, 444, 458, 465, 470, 564, 570, 577, 631, 632, 637, 638, 640, 644, 670, 707, 719, 720, 732, 734, 775, 796, 810, 826, 829, 830, 839, 841, 845, 846, 859, 862, 863, 884, 888, 890, 895, 901, 906, 907, 908, 920, 925, 973, 976, 998, 1000, 1026, 1032, 1037, 1039, 1040, 1044, 1045, 1048, 1068], "caylei": 38, "0212d": 38, "letter": [38, 65, 375, 1030], "cedilla": 38, "000b8": 38, "centerdot": 38, "checkmark": 38, "02713": 38, "circeq": 38, "circlearrowleft": 38, "circlearrowright": 38, "circledast": 38, "0229b": 38, "circledcirc": 38, "0229a": 38, "circleddash": 38, "0229d": 38, "circledot": 38, "02299": 38, "circledr": 38, "024c8": 38, "latin": [38, 230, 291, 307], "circleminu": 38, "02296": 38, "circleplu": 38, "02295": 38, "circletim": 38, "02297": 38, "clockwisecontourintegr": 38, "02232": 38, "contour": 38, "closecurlydoublequot": 38, "closecurlyquot": 38, "clubsuit": 38, "02663": 38, "suit": [38, 44, 97, 119, 147, 187, 256, 260, 343, 420, 429, 460, 461, 462, 464, 465, 467, 469, 482, 484, 485, 503, 516, 517, 518, 519, 520, 579, 580, 581, 582, 671, 672, 709, 718, 719, 749, 750, 751, 753, 1134, 1141, 1156, 1171], "coloneq": 38, "complement": [38, 106, 381], "02201": 38, "complex": [38, 69, 151, 162, 166, 183, 189, 209, 226, 231, 233, 239, 243, 247, 249, 264, 271, 285, 313, 335, 356, 399, 411, 426, 735, 906, 907, 931, 947, 970, 1031, 1040, 1146, 1156], "02102": 38, "02261": 38, "ident": [38, 235, 285, 297, 555, 1019, 1021, 1040], "contourintegr": 38, "0222e": 38, "counterclockwisecontourintegr": 38, "02233": 38, "cupcap": 38, "0224d": 38, "curlyeqprec": 38, "curlyeqsucc": 38, "curlyve": 38, "022ce": 38, "curlywedg": 38, "022cf": 38, "curvearrowleft": 38, "curvearrowright": 38, "dbkarow": 38, "ddagger": 38, "02021": 38, "ddotseq": 38, "02207": 38, "nabla": 38, "diacriticalacut": 38, "000b4": 38, "acut": 38, "accent": 38, "diacriticaldot": 38, "002d9": 38, "diacriticaldoubleacut": 38, "002dd": 38, "diacriticalgrav": 38, "00060": 38, "grave": 38, "diacriticaltild": 38, "002dc": 38, "022c4": 38, "diamondsuit": 38, "02666": 38, "differentiald": 38, "02146": 38, "digamma": 38, "003dd": 38, "div": [38, 432, 482], "divideontim": 38, "022c7": 38, "doteq": 38, "doteqdot": 38, "dotequ": 38, "dotminu": 38, "02238": 38, "dotplu": 38, "02214": 38, "dotsquar": 38, "022a1": 38, "doublebarwedg": 38, "02306": 38, "doublecontourintegr": 38, "0222f": 38, "surfac": [38, 183, 838, 906, 907, 1105, 1107], "doubledot": 38, "000a8": 38, "diaeresi": 38, "doubledownarrow": 38, "doubleleftarrow": 38, "021d0": 38, "doubleleftte": 38, "doublelongleftarrow": 38, "doublelongleftrightarrow": 38, "doublelongrightarrow": 38, "doublerightarrow": 38, "021d2": 38, "doublerightte": 38, "doubleuparrow": 38, "doubleupdownarrow": 38, "doubleverticalbar": 38, "downarrow": 38, "downarrowuparrow": 38, "downdownarrow": 38, "downharpoonleft": 38, "downharpoonright": 38, "downleftvector": 38, "downrightvector": 38, "downte": 38, "022a4": 38, "downteearrow": 38, "021a7": 38, "drbkarow": 38, "02208": 38, "emptyset": 38, "02205": 38, "eqcirc": 38, "eqcolon": 38, "eqsim": 38, "eqslantgtr": 38, "eqslantless": 38, "equaltild": 38, "equilibrium": 38, "02203": 38, "THERE": [38, 566], "02130": 38, "exponential": 38, "02147": 38, "fallingdotseq": 38, "foral": [38, 1051], "02200": 38, "FOR": [38, 162, 184, 191], "fouriertrf": 38, "02131": 38, "geq": 38, "02265": 38, "geqq": 38, "geqslant": 38, "ggg": 38, "gnapprox": 38, "02a8a": 38, "gneq": 38, "02a88": 38, "gneqq": 38, "02269": 38, "BUT": 38, "greaterequ": 38, "greaterequalless": 38, "greaterfullequ": 38, "greaterless": 38, "greaterslantequ": 38, "greatertild": 38, "gtrapprox": 38, "gtrdot": 38, "gtreqless": 38, "gtreqqless": 38, "gtrless": 38, "gtrsim": 38, "gvertneqq": 38, "hacek": 38, "002c7": 38, "caron": 38, "hbar": 38, "0210f": 38, "planck": 38, "constant": [38, 212, 220, 226, 229, 230, 231, 236, 239, 243, 281, 302, 364, 372, 373, 378, 388, 392, 397, 404, 410, 414, 417, 421, 430, 434, 439, 440, 505, 612, 662, 673, 700, 710, 712, 752, 754, 755], "heartsuit": 38, "02665": 38, "hilbertspac": 38, "0210b": 38, "h": [38, 42, 44, 97, 114, 123, 126, 127, 128, 129, 131, 153, 158, 174, 177, 179, 184, 190, 194, 199, 212, 213, 220, 223, 224, 231, 233, 243, 256, 267, 278, 313, 316, 357, 358, 360, 364, 366, 368, 376, 399, 400, 402, 408, 415, 423, 425, 429, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 460, 461, 462, 463, 464, 465, 467, 469, 472, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 509, 510, 511, 512, 513, 514, 515, 516, 518, 519, 520, 521, 522, 523, 524, 526, 528, 529, 530, 531, 533, 534, 535, 536, 537, 539, 545, 546, 548, 549, 552, 555, 557, 562, 563, 564, 565, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 640, 649, 650, 651, 652, 653, 654, 655, 656, 665, 667, 670, 671, 672, 688, 689, 692, 703, 706, 709, 710, 714, 718, 719, 720, 721, 723, 732, 734, 736, 739, 741, 743, 744, 745, 746, 749, 750, 751, 753, 761, 766, 770, 771, 773, 780, 782, 784, 786, 788, 790, 794, 796, 798, 807, 812, 815, 816, 819, 821, 822, 828, 839, 846, 859, 862, 884, 890, 900, 902, 906, 922, 924, 925, 926, 928, 929, 931, 932, 933, 934, 935, 938, 940, 943, 957, 960, 964, 966, 968, 969, 973, 974, 976, 977, 978, 979, 984, 988, 991, 992, 994, 1037, 1052, 1128, 1135, 1140, 1142, 1145], "hksearow": 38, "hkswarow": 38, "hookleftarrow": 38, "hookrightarrow": 38, "hslash": 38, "humpdownhump": 38, "humpequ": 38, "iiiint": 38, "02a0c": 38, "quadrupl": 38, "iiint": 38, "0222d": 38, "02111": 38, "imaginaryi": 38, "02148": 38, "imaglin": 38, "02110": 38, "imagpart": 38, "impli": [38, 724, 1128], "02124": 38, "0222b": 38, "interc": 38, "022ba": 38, "intercal": 38, "intprod": 38, "02a3c": 38, "interior": 38, "invisiblecomma": 38, "02063": 38, "invis": [38, 488], "invisibletim": 38, "02062": 38, "langl": 38, "02329": 38, "laplacetrf": 38, "02112": 38, "lbrace": 38, "lbrack": 38, "leftanglebracket": 38, "leftarrow": 38, "leftarrowbar": 38, "021e4": 38, "leftarrowrightarrow": 38, "leftarrowtail": 38, "leftceil": 38, "02308": 38, "ceil": [38, 211, 224, 243, 313], "leftdoublebracket": 38, "0301a": 38, "leftdownvector": 38, "leftfloor": 38, "0230a": 38, "leftharpoondown": 38, "leftharpoonup": 38, "leftleftarrow": 38, "leftrightarrow": 38, "leftrightharpoon": 38, "leftrightsquigarrow": 38, "leftte": 38, "leftteearrow": 38, "021a4": 38, "leftthreetim": 38, "022cb": 38, "semidirect": 38, "lefttriangl": 38, "lefttriangleequ": 38, "leftupvector": 38, "leftvector": 38, "leq": 38, "02264": 38, "leqq": 38, "leqslant": 38, "lessapprox": 38, "lessdot": 38, "lesseqgtr": 38, "lesseqqgtr": 38, "lessequalgreat": 38, "lessfullequ": 38, "lessgreat": 38, "lessgtr": 38, "lesssim": 38, "lessslantequ": 38, "lesstild": 38, "llcorner": 38, "0231e": 38, "bottom": [38, 198, 302, 503, 516, 800, 862, 881, 899, 999], "corner": [38, 212, 275, 353, 365, 445, 457, 516, 732], "lleftarrow": 38, "lmoustach": 38, "023b0": 38, "upper": [38, 184, 207, 231, 233, 239, 249, 264, 271, 285, 307, 320, 329, 358, 362, 378, 402, 961, 1061], "lower": [38, 153, 207, 220, 226, 231, 236, 239, 243, 249, 264, 285, 320, 329, 358, 362, 378, 402, 462, 606, 962, 970, 1019, 1124], "lnapprox": 38, "02a89": 38, "lneq": 38, "02a87": 38, "lneqq": 38, "02268": 38, "longleftarrow": 38, "longleftrightarrow": 38, "longmapsto": 38, "looparrowleft": 38, "looparrowright": 38, "lowerleftarrow": 38, "lowerrightarrow": 38, "025ca": 38, "lrcorner": 38, "0231f": 38, "lvertneqq": 38, "maltes": 38, "02720": 38, "mapsto": 38, "measuredangl": 38, "02221": 38, "measur": [38, 97, 119, 122, 131, 153, 243, 276, 280, 302, 312, 428, 435, 481, 485, 507, 508, 509, 510, 511, 512, 513, 514, 518, 519, 560, 638, 739, 755, 761, 828, 837, 928, 969, 993, 1105, 1107], "mellintrf": 38, "02133": 38, "minusplu": 38, "02213": 38, "napprox": 38, "02249": 38, "0266e": 38, "music": [38, 153, 281], "02115": 38, "nearrow": 38, "negativemediumspac": 38, "0200b": 38, "width": [38, 220, 226, 229, 230, 236, 239, 261, 269, 285, 358, 381, 470, 555, 579, 899, 970, 1045, 1108, 1157, 1164], "negativethickspac": 38, "negativethinspac": 38, "negativeverythinspac": 38, "nestedgreatergreat": 38, "nestedlessless": 38, "nexist": 38, "02204": 38, "ngeq": 38, "02271": 38, "neither": [38, 171, 460, 487, 501, 671, 847, 849, 850, 932, 1041], "nor": [38, 171, 227, 487, 501, 571, 671, 847, 849, 850, 899, 919, 932, 1041], "ngeqq": 38, "ngeqslant": 38, "ngtr": 38, "0226f": 38, "nleftarrow": 38, "nleftrightarrow": 38, "nleq": 38, "02270": 38, "nleqq": 38, "nleqslant": 38, "nless": 38, "0226e": 38, "nonbreakingspac": 38, "notcongru": 38, "02262": 38, "notdoubleverticalbar": 38, "02226": 38, "notel": 38, "02209": 38, "notequ": 38, "02260": 38, "notequaltild": 38, "notexist": 38, "notgreat": 38, "notgreaterequ": 38, "notgreaterfullequ": 38, "notgreatergreat": 38, "notgreaterless": 38, "02279": 38, "notgreaterslantequ": 38, "notgreatertild": 38, "02275": 38, "nothumpdownhump": 38, "notlefttriangl": 38, "022ea": 38, "notlefttriangleequ": 38, "022ec": 38, "notless": 38, "notlessequ": 38, "notlessgreat": 38, "02278": 38, "notlessless": 38, "notlessslantequ": 38, "notlesstild": 38, "02274": 38, "notpreced": 38, "02280": 38, "notprecedesequ": 38, "notprecedesslantequ": 38, "022e0": 38, "notreverseel": 38, "0220c": 38, "notrighttriangl": 38, "022eb": 38, "notrighttriangleequ": 38, "022ed": 38, "notsquaresubsetequ": 38, "022e2": 38, "notsquaresupersetequ": 38, "022e3": 38, "notsubset": 38, "020d2": 38, "notsubsetequ": 38, "02288": 38, "notsucce": 38, "02281": 38, "notsucceedsequ": 38, "notsucceedsslantequ": 38, "022e1": 38, "notsuperset": 38, "notsupersetequ": 38, "02289": 38, "nottild": 38, "02241": 38, "nottildeequ": 38, "02244": 38, "asymptot": 38, "nottildefullequ": 38, "02247": 38, "actual": [38, 42, 43, 48, 61, 153, 156, 161, 166, 183, 210, 220, 226, 229, 236, 239, 243, 270, 273, 275, 305, 338, 462, 472, 631, 638, 660, 718, 761, 899, 907, 931, 974, 997, 1013, 1022, 1055, 1103, 1105, 1107, 1126, 1140], "nottildetild": 38, "notverticalbar": 38, "02224": 38, "nparallel": 38, "nprec": 38, "npreceq": 38, "nrightarrow": 38, "nshortmid": 38, "nshortparallel": 38, "nsimeq": 38, "nsubset": 38, "nsubseteq": 38, "nsubseteqq": 38, "nsucc": 38, "nsucceq": 38, "nsupset": 38, "nsupseteq": 38, "nsupseteqq": 38, "ntriangleleft": 38, "ntrianglelefteq": 38, "ntriangleright": 38, "ntrianglerighteq": 38, "nwarrow": 38, "oint": 38, "opencurlydoublequot": 38, "opencurlyquot": 38, "orderof": 38, "02134": 38, "partiald": 38, "02202": 38, "partial": [38, 277, 306, 780, 1104], "differenti": [38, 69, 654, 722, 802, 847, 906, 1031, 1099, 1113], "plusminu": 38, "poincareplan": 38, "0210c": 38, "prec": 38, "precapprox": 38, "preccurlyeq": 38, "precedesequ": 38, "precedesslantequ": 38, "precedestild": 38, "preceq": 38, "precnapprox": 38, "02ab9": 38, "precneqq": 38, "02ab5": 38, "precnsim": 38, "022e8": 38, "precsim": 38, "02119": 38, "propto": 38, "quaternion": 38, "0210d": 38, "questeq": 38, "rangl": 38, "0232a": 38, "0211a": 38, "q": [38, 114, 191, 243, 402, 408, 562, 580, 581, 595, 723, 839, 862, 894, 969, 1128], "rbrace": 38, "rbrack": 38, "0211c": 38, "realin": 38, "0211b": 38, "realpart": 38, "real": [38, 73, 115, 121, 125, 126, 129, 130, 142, 158, 161, 166, 169, 171, 187, 208, 221, 226, 227, 234, 236, 239, 243, 248, 251, 261, 269, 275, 284, 290, 302, 321, 382, 431, 438, 452, 458, 464, 481, 503, 511, 512, 513, 514, 515, 519, 561, 562, 567, 682, 697, 715, 718, 763, 802, 839, 840, 862, 899, 907, 919, 960, 1046, 1100, 1103, 1105, 1134, 1153, 1156], "0211d": 38, "reverseel": 38, "0220b": 38, "reverseequilibrium": 38, "reverseupequilibrium": 38, "rightanglebracket": 38, "rightarrowbar": 38, "021e5": 38, "rightarrowleftarrow": 38, "rightarrowtail": 38, "rightceil": 38, "02309": 38, "rightdoublebracket": 38, "0301b": 38, "rightdownvector": 38, "rightfloor": 38, "0230b": 38, "rightharpoondown": 38, "rightharpoonup": 38, "rightleftarrow": 38, "rightleftharpoon": 38, "rightrightarrow": 38, "rightsquigarrow": 38, "rightte": 38, "rightteearrow": 38, "rightthreetim": 38, "022cc": 38, "righttriangl": 38, "righttriangleequ": 38, "rightupvector": 38, "rightvector": 38, "risingdotseq": 38, "rmoustach": 38, "023b1": 38, "rrightarrow": 38, "searrow": 38, "setminu": 38, "shortdownarrow": 38, "shortleftarrow": 38, "shortmid": 38, "shortparallel": 38, "shortrightarrow": 38, "shortuparrow": 38, "simeq": 38, "02243": 38, "smallcircl": 38, "02218": 38, "smallsetminu": 38, "spadesuit": 38, "02660": 38, "sqrt": [38, 211, 224, 313, 562, 564, 572, 573, 581, 667, 682, 683, 684, 685, 686, 723], "0221a": 38, "sqsubset": 38, "sqsubseteq": 38, "sqsupset": 38, "sqsupseteq": 38, "025a1": 38, "squareintersect": 38, "02293": 38, "cap": [38, 223, 1057], "squaresubset": 38, "squaresubsetequ": 38, "squaresuperset": 38, "squaresupersetequ": 38, "squareunion": 38, "02294": 38, "cup": [38, 281], "022c6": 38, "straightepsilon": 38, "003f5": 38, "straightphi": 38, "003d5": 38, "phi": 38, "subseteq": 38, "02286": 38, "subseteqq": 38, "subsetequ": 38, "subsetneq": 38, "0228a": 38, "subsetneqq": 38, "02acb": 38, "succ": 38, "succapprox": 38, "succcurlyeq": 38, "succeedsequ": 38, "succeedsslantequ": 38, "succeedstild": 38, "succeq": 38, "succnapprox": 38, "02aba": 38, "succneqq": 38, "02ab6": 38, "succnsim": 38, "022e9": 38, "succsim": 38, "suchthat": 38, "02211": 38, "summat": 38, "supersetequ": 38, "02287": 38, "supset": 38, "supseteq": 38, "supseteqq": 38, "supsetneq": 38, "0228b": 38, "supsetneqq": 38, "02acc": 38, "swarrow": 38, "therefor": [38, 141, 151], "02234": 38, "thickapprox": 38, "thicksim": 38, "thinspac": 38, "02009": 38, "tildeequ": 38, "tildefullequ": 38, "02245": 38, "tildetild": 38, "toea": 38, "tosa": 38, "025b5": 38, "triangledown": 38, "025bf": 38, "triangleleft": 38, "025c3": 38, "trianglelefteq": 38, "triangleq": 38, "triangleright": 38, "025b9": 38, "trianglerighteq": 38, "tripledot": 38, "020db": 38, "combin": [38, 85, 108, 110, 111, 154, 172, 203, 259, 387, 398, 403, 420, 428, 459, 468, 480, 494, 508, 560, 595, 634, 712, 755, 784, 842, 844, 846, 862, 884, 895, 932, 933, 935, 982, 1035, 1050, 1066, 1119, 1153], "twoheadleftarrow": 38, "twoheadrightarrow": 38, "ulcorn": 38, "0231c": 38, "unionplu": 38, "0228e": 38, "multiset": 38, "uparrow": 38, "uparrowdownarrow": 38, "updownarrow": 38, "upequilibrium": 38, "upharpoonleft": 38, "upharpoonright": 38, "upperleftarrow": 38, "upperrightarrow": 38, "upsilon": 38, "003c5": 38, "upte": 38, "upteearrow": 38, "021a5": 38, "upuparrow": 38, "urcorn": 38, "0231d": 38, "varepsilon": 38, "003b5": 38, "varkappa": 38, "003f0": 38, "kappa": 38, "varnoth": 38, "varphi": 38, "003c6": 38, "varpi": 38, "003d6": 38, "varpropto": 38, "varrho": 38, "003f1": 38, "rho": 38, "varsigma": 38, "003c2": 38, "sigma": [38, 243], "varsubsetneq": 38, "variant": [38, 195, 211, 224, 254, 255, 256, 315, 358, 374, 491, 555, 708, 712, 714, 737, 740, 743, 754, 755, 780, 1160, 1163], "varsubsetneqq": 38, "varsupsetneq": 38, "varsupsetneqq": 38, "vartheta": 38, "003d1": 38, "theta": 38, "vartriangleleft": 38, "vartriangleright": 38, "vee": 38, "02228": 38, "vert": 38, "02016": 38, "verticalbar": 38, "verticaltild": 38, "02240": 38, "wreath": 38, "verythinspac": 38, "0200a": 38, "hair": 38, "wedg": 38, "02227": 38, "wp": 38, "02118": 38, "wr": 38, "zeetrf": 38, "02128": 38, "restructured text": 39, "cheat sheet": 39, "restructur": 39, "guid": [39, 135, 156, 166, 187, 212, 355, 435, 513, 665, 773, 788, 841], "author": [39, 154, 161, 239, 578, 775, 906, 1055, 1109], "overridden": [39, 381, 632, 699, 1133], "titl": [39, 40, 147, 157, 221, 234, 239, 248, 251, 284, 285, 290, 1016, 1100, 1105], "favorit": [39, 183, 187, 190, 208, 212, 234, 237, 321, 802, 908, 960, 1024, 1100], "__": [39, 168, 170, 178, 285, 713, 717, 1020], "ref": [39, 114, 166, 255, 256, 660, 675, 719, 750], "uniqu": [39, 166, 213, 255, 256, 258, 519, 538, 720, 732, 750, 752, 754, 755, 908, 922, 936, 995, 1048, 1052, 1122], "across": [39, 43, 151, 158, 168, 220, 226, 236, 239, 269, 278, 302, 353, 381, 401, 425, 460, 465, 484, 547, 723, 734, 753, 829, 830, 841, 859, 906, 908, 928, 936, 970, 1031, 1042, 1109], "tree": [39, 42, 100, 102, 114, 141, 143, 152, 154, 157, 162, 166, 179, 180, 187, 211, 224, 227, 230, 234, 267, 295, 298, 411, 433, 438, 450, 482, 517, 519, 616, 619, 755, 777, 780, 794, 804, 827, 829, 830, 832, 846, 862, 863, 870, 874, 876, 882, 891, 898, 907, 912, 914, 919, 939, 947, 956, 979, 984, 1004, 1016, 1107, 1125, 1133, 1135], "_dummi": 39, "dummi": [39, 157, 341, 342, 782, 821, 1140], "One": [39, 43, 59, 62, 63, 76, 80, 82, 97, 106, 151, 153, 162, 179, 190, 211, 229, 250, 251, 276, 321, 335, 346, 362, 402, 415, 424, 427, 436, 438, 443, 449, 454, 460, 519, 538, 546, 561, 580, 585, 595, 600, 665, 699, 724, 734, 802, 807, 833, 835, 838, 846, 862, 906, 907, 908, 932, 944, 949, 960, 961, 969, 974, 979, 1011, 1035, 1108, 1109, 1113, 1118, 1155, 1169], "a_footnot": 39, "footer": 39, "block": [39, 98, 110, 111, 150, 151, 152, 153, 191, 193, 211, 218, 220, 224, 226, 236, 239, 248, 251, 260, 281, 284, 302, 320, 335, 340, 344, 358, 360, 378, 397, 403, 404, 410, 414, 417, 421, 429, 430, 432, 434, 439, 440, 467, 567, 570, 662, 688, 700, 719, 730, 731, 732, 733, 734, 752, 753, 754, 755, 788, 804, 814, 818, 832, 833, 835, 836, 838, 839, 884, 898, 907, 931, 938, 939, 944, 949, 953, 954, 959, 961, 969, 970, 973, 975, 997, 999, 1025, 1028, 1035, 1038, 1100], "rubric": 39, "nbsphinx": 40, "capabl": [40, 78, 151, 152, 158, 729, 802, 828, 891, 899, 907, 960, 1126, 1156], "nice": [40, 148, 151, 168, 191, 213, 278, 437, 438, 458, 506, 573, 660, 821, 828, 901, 907, 958, 1021, 1057, 1105, 1107, 1116, 1122, 1136], "few": [40, 115, 151, 152, 153, 154, 157, 158, 183, 187, 220, 356, 426, 677, 802, 840, 999, 1003, 1134, 1158], "keep": [40, 43, 110, 111, 152, 153, 166, 175, 187, 190, 194, 210, 243, 316, 321, 346, 370, 426, 432, 433, 642, 682, 794, 802, 807, 826, 841, 844, 900, 952, 988, 991, 1011, 1028, 1105, 1106, 1153], "mind": [40, 120, 151, 152, 359, 726, 1028], "though": [40, 43, 45, 53, 68, 150, 151, 156, 158, 161, 162, 166, 167, 172, 179, 183, 187, 189, 190, 208, 211, 213, 224, 226, 227, 229, 234, 237, 251, 260, 269, 270, 273, 284, 305, 306, 321, 362, 372, 381, 393, 398, 460, 461, 462, 465, 474, 482, 484, 517, 518, 519, 538, 562, 564, 565, 569, 572, 575, 578, 579, 581, 582, 595, 596, 631, 638, 660, 668, 670, 677, 682, 688, 705, 709, 714, 719, 720, 723, 730, 741, 743, 756, 757, 761, 780, 794, 833, 840, 841, 844, 847, 881, 895, 899, 906, 907, 908, 918, 926, 928, 955, 960, 962, 964, 970, 979, 997, 999, 1000, 1003, 1008, 1010, 1017, 1019, 1027, 1031, 1044, 1069, 1100, 1107, 1108, 1121, 1128, 1129, 1133, 1135, 1153, 1156], "toplevel": [40, 44, 109, 114, 131, 179, 212, 261, 446, 448, 452, 453, 454, 456, 503, 775, 803, 828, 997, 1142], "begin": [40, 42, 43, 112, 116, 117, 118, 122, 124, 125, 130, 131, 133, 150, 151, 161, 189, 210, 211, 223, 226, 239, 243, 255, 256, 260, 277, 285, 306, 352, 358, 366, 378, 381, 402, 408, 425, 426, 428, 458, 465, 555, 565, 578, 591, 593, 595, 596, 597, 599, 600, 602, 603, 604, 606, 607, 608, 609, 613, 616, 627, 660, 675, 688, 691, 695, 702, 708, 709, 712, 726, 755, 828, 862, 886, 894, 920, 928, 1004, 1028, 1050, 1100, 1134], "deeper": [40, 152, 183, 270, 273, 447, 955], "trail": [40, 155, 239, 281, 285, 303, 326, 327], "underscor": [40, 375, 1000, 1007, 1020, 1030], "ipynb": [40, 170, 190, 200, 202, 239, 249, 270, 274, 280, 284, 290, 295, 298, 302, 306, 312, 313, 1102, 1106], "labels_": [40, 172, 174], "result": [40, 78, 115, 120, 130, 144, 153, 162, 168, 170, 190, 194, 210, 220, 226, 229, 236, 239, 243, 252, 261, 281, 285, 365, 381, 416, 423, 425, 426, 432, 462, 487, 491, 578, 606, 667, 673, 682, 710, 773, 918, 964, 992, 1004, 1019, 1033, 1039, 1051, 1108], "cluster": [40, 174, 1102, 1107], "membership": [40, 172, 189, 190, 232, 474, 1032, 1049], "sequenc": [40, 106, 109, 144, 171, 172, 174, 184, 190, 211, 213, 222, 224, 225, 226, 229, 232, 236, 239, 243, 261, 276, 278, 285, 291, 357, 411, 462, 508, 523, 524, 525, 560, 605, 624, 628, 644, 657, 665, 712, 755, 961, 1004, 1005, 1006, 1022, 1031, 1032, 1037, 1039, 1042, 1046, 1047, 1070, 1082, 1113, 1156], "bring": [40, 45, 112, 120, 131, 144, 151, 153, 161, 162, 183, 187, 190, 193, 229, 267, 270, 273, 276, 278, 302, 305, 343, 348, 349, 353, 538, 577, 616, 640, 651, 659, 798, 802, 814, 906, 907, 908, 977, 1024, 1072, 1095, 1113, 1153, 1156], "bigplan": [40, 174, 1102], "686": [40, 172, 226, 990], "unknown": [40, 269, 444, 740, 758, 907, 1013], "cmd": [40, 157, 796, 821, 1135], "color": [40, 156, 174, 884, 1102, 1128], "tmp": [40, 133, 147, 152, 154, 157, 194, 207, 210, 226, 231, 239, 243, 246, 249, 251, 256, 258, 261, 264, 271, 281, 285, 291, 307, 313, 367, 409, 432, 445, 450, 451, 458, 519, 520, 640, 717, 736, 780, 802, 824, 828, 833, 842, 846, 847, 860, 861, 862, 864, 866, 867, 869, 871, 874, 881, 884, 885, 890, 911, 918, 929, 930, 932, 933, 935, 960, 966, 997, 998, 999, 1004, 1012, 1013, 1019, 1020, 1041, 1042, 1046, 1050, 1056, 1112, 1121, 1122, 1134, 1135], "craft": [41, 53, 237, 279, 280, 442, 487, 724, 756], "tar": [42, 61, 109, 114, 138, 147, 162, 191, 193, 257, 266, 267, 287, 288, 438, 755, 802, 824, 825, 827, 832, 898, 984, 986, 987, 988, 990, 991, 997, 1055, 1135, 1159], "xz": [42, 61, 154, 162, 267, 431, 984, 988, 990, 991], "push": [42, 77, 133, 155, 157, 166, 169, 212, 227, 237, 294, 310, 341, 403, 448, 449, 460, 484, 594, 597, 732, 755, 802, 944, 962, 1075, 1079, 1133], "cmakelist": [42, 44, 112, 114, 119, 131, 177, 178, 179, 180, 181, 212, 229, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458, 503, 516, 517, 518, 519, 520, 539, 542, 545, 546, 548, 551, 554, 557, 651, 965, 968, 972, 977, 978, 1139, 1142, 1144], "src": [42, 151, 152, 154, 212, 226, 256, 258, 264, 341, 370, 382, 432, 456, 457, 467, 503, 506, 516, 517, 518, 519, 521, 580, 597, 718, 719, 828, 846, 890, 1050, 1055, 1133], "load": [42, 43, 53, 56, 63, 75, 88, 150, 161, 162, 169, 170, 174, 190, 198, 199, 215, 216, 220, 226, 236, 239, 243, 246, 252, 261, 278, 279, 280, 296, 299, 301, 302, 418, 438, 450, 733, 754, 755, 758, 759, 761, 762, 764, 767, 769, 770, 772, 777, 779, 782, 783, 787, 793, 796, 798, 799, 802, 804, 806, 811, 814, 817, 820, 823, 838, 898, 907, 908, 939, 947, 953, 976, 993, 1100, 1118, 1158, 1167, 1169], "store": [42, 57, 63, 75, 88, 106, 119, 123, 150, 152, 169, 171, 179, 180, 210, 213, 220, 278, 279, 280, 301, 302, 366, 418, 462, 644, 688, 702, 705, 712, 733, 739, 741, 745, 754, 755, 768, 802, 841, 854, 898, 915, 939, 947, 953, 977, 995, 999, 1000, 1004, 1048, 1078, 1112, 1128, 1169], "search": [42, 51, 53, 106, 144, 146, 147, 151, 172, 175, 181, 183, 189, 190, 199, 210, 211, 213, 216, 220, 223, 224, 226, 229, 230, 231, 234, 236, 239, 252, 261, 264, 268, 271, 276, 281, 285, 291, 293, 309, 313, 402, 429, 432, 444, 508, 519, 521, 525, 560, 605, 610, 624, 628, 645, 657, 755, 780, 844, 862, 894, 955, 977, 990, 1007, 1036, 1106, 1133, 1155], "payload": [42, 763, 790, 900, 902], "primari": [42, 151, 162, 183, 269, 270, 273, 436, 800, 829, 830, 837, 839, 1078], "insert": [42, 63, 109, 112, 145, 150, 166, 170, 187, 189, 194, 224, 226, 229, 231, 233, 239, 243, 246, 264, 285, 291, 303, 335, 399, 416, 420, 436, 463, 469, 491, 497, 508, 525, 526, 527, 538, 555, 560, 596, 597, 610, 620, 621, 645, 653, 654, 655, 657, 664, 671, 673, 688, 709, 751, 753, 755, 780, 786, 796, 798, 802, 862, 906, 919, 950, 960, 1032, 1047, 1048, 1056, 1112, 1133], "const": [42, 58, 70, 97, 107, 109, 110, 111, 114, 119, 178, 213, 229, 276, 278, 315, 370, 378, 382, 400, 402, 408, 416, 428, 430, 432, 434, 439, 440, 445, 461, 462, 463, 464, 465, 467, 469, 484, 485, 491, 492, 493, 496, 497, 498, 500, 501, 502, 508, 512, 516, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 536, 537, 538, 546, 551, 553, 555, 560, 562, 563, 564, 565, 567, 569, 570, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 588, 589, 595, 599, 601, 602, 603, 604, 605, 611, 615, 617, 620, 621, 624, 627, 628, 631, 634, 635, 638, 640, 641, 642, 645, 646, 649, 650, 652, 653, 654, 655, 656, 657, 664, 666, 667, 668, 669, 670, 671, 672, 673, 682, 683, 684, 685, 686, 688, 690, 691, 694, 695, 696, 697, 698, 700, 702, 703, 704, 705, 707, 708, 710, 712, 716, 718, 719, 720, 721, 722, 725, 733, 734, 736, 741, 745, 749, 750, 751, 752, 753, 754, 755, 758, 761, 766, 782, 784, 788, 796, 798, 812, 816, 822, 920, 928, 932, 933, 934, 935, 938, 940, 943, 945, 947, 949, 957, 963, 966, 969, 970, 974, 994, 1012, 1088, 1111, 1145, 1151, 1152], "care": [42, 46, 48, 80, 131, 150, 151, 153, 156, 158, 183, 191, 223, 326, 358, 381, 390, 392, 408, 432, 433, 456, 487, 488, 563, 577, 595, 638, 709, 710, 714, 723, 745, 746, 749, 756, 780, 792, 794, 802, 807, 828, 829, 830, 907, 915, 919, 931, 944, 952, 978, 1000, 1024, 1028, 1040, 1047, 1050, 1051, 1057, 1080, 1104, 1112, 1125, 1135], "dump": [42, 151, 170, 199, 215, 216, 226, 239, 243, 246, 252, 261, 296, 299, 302, 467, 486, 487, 570, 575, 698, 718, 840, 973, 974], "db": [42, 50, 161, 187, 212, 213, 214, 218, 224, 237, 252, 448, 462, 463, 469, 491, 497, 652, 653, 654, 655, 656, 724, 1056], "pull": [42, 44, 50, 63, 77, 114, 115, 130, 155, 166, 203, 212, 213, 227, 320, 343, 444, 448, 460, 577, 660, 775, 802, 1004, 1007, 1124], "paramet": [42, 58, 63, 110, 111, 119, 126, 150, 153, 158, 168, 171, 178, 179, 183, 188, 189, 190, 192, 194, 202, 203, 207, 210, 211, 212, 213, 220, 224, 226, 229, 230, 232, 235, 236, 239, 246, 249, 270, 271, 273, 275, 321, 326, 335, 357, 366, 368, 372, 383, 387, 402, 403, 408, 410, 411, 414, 417, 421, 422, 428, 430, 434, 439, 440, 443, 445, 450, 506, 516, 522, 538, 552, 562, 564, 567, 571, 574, 575, 578, 582, 587, 588, 642, 648, 662, 665, 672, 688, 700, 702, 707, 720, 732, 752, 754, 755, 760, 761, 768, 782, 805, 810, 815, 818, 821, 822, 842, 844, 907, 922, 945, 955, 970, 978, 991, 995, 1000, 1014, 1017, 1022, 1029, 1045, 1052, 1057, 1067, 1073, 1075, 1079, 1085, 1094, 1105, 1108, 1111, 1118, 1121, 1122, 1124, 1149, 1150], "entri": [42, 120, 148, 152, 153, 157, 215, 226, 357, 457, 473, 616, 618, 638, 790, 828, 841, 845, 846, 847, 884, 890, 922, 928, 942, 993, 1000, 1048, 1111, 1142], "o_creat": [42, 755, 898, 928, 929, 933, 937, 939, 956, 969], "o_trunc": [42, 48, 928], "o_wronli": [42, 755, 898, 928, 929, 931, 932, 933, 937, 938, 939, 940, 943, 956, 969], "0666": [42, 861, 932, 933, 969], "assert": [42, 46, 187, 211, 224, 236, 239, 253, 269, 302, 304, 444, 467, 609, 650, 653, 655, 661, 734, 926, 938, 940, 943, 969, 973, 974, 1012, 1088, 1095, 1096, 1097, 1133, 1139, 1140, 1142, 1150], "ing": [42, 934], "mode": [42, 101, 114, 154, 166, 168, 203, 211, 220, 223, 224, 226, 236, 239, 243, 246, 264, 267, 271, 285, 288, 302, 432, 508, 560, 733, 754, 755, 761, 794, 800, 828, 829, 830, 832, 835, 836, 839, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 862, 898, 901, 908, 922, 927, 928, 929, 937, 939, 953, 956, 959, 961, 969, 970, 1025, 1027, 1128], "binaryus": 42, "hton": [42, 925], "arpa": [42, 925], "inet": [42, 168, 925], "again": [42, 99, 114, 150, 151, 153, 156, 158, 162, 166, 167, 179, 183, 187, 189, 190, 191, 203, 212, 237, 242, 251, 257, 260, 266, 267, 284, 287, 290, 306, 335, 336, 337, 340, 341, 346, 353, 354, 403, 444, 466, 470, 480, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 555, 560, 562, 564, 577, 578, 582, 592, 671, 682, 724, 732, 733, 750, 753, 754, 755, 822, 825, 829, 830, 831, 832, 835, 836, 843, 846, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 892, 898, 908, 915, 918, 921, 923, 925, 926, 927, 929, 934, 937, 939, 940, 949, 953, 955, 956, 959, 961, 970, 978, 980, 981, 982, 983, 984, 985, 986, 987, 997, 1017, 1022, 1040, 1045, 1050, 1100, 1118, 1121, 1153], "od": [42, 239], "hardwir": [42, 63, 316, 763, 924, 1017], "enter": [42, 110, 111, 123, 184, 191, 220, 225, 226, 236, 239, 248, 249, 251, 252, 269, 302, 303, 320, 335, 340, 360, 555, 578, 637, 671, 677, 688, 720, 780, 802, 818, 835, 858, 960, 961, 1035, 1087], "joerg": [42, 50, 133, 170, 184, 185, 187, 188, 190, 192, 199, 203, 207, 210, 216, 223, 226, 229, 231, 233, 236, 239, 243, 246, 249, 252, 261, 264, 271, 278, 280, 281, 285, 291, 296, 303, 307, 313, 329, 332, 427, 454, 462, 469, 503, 519, 521, 537, 575, 609, 621, 640, 650, 651, 652, 653, 655, 672, 829, 830, 837, 839, 844, 858, 874, 887, 893, 918, 955, 1013, 1014, 1016, 1017, 1018, 1020, 1021, 1029, 1051, 1055, 1078, 1095, 1108, 1117, 1118, 1119, 1121, 1122, 1123, 1124], "huber": [42, 233, 239, 1108], "caro": [42, 223, 233, 236, 243, 246, 249, 252, 261, 264, 271, 285, 303, 313, 462, 469, 521, 537, 609, 621, 653, 655, 1016, 1018, 1038, 1089, 1091, 1095, 1097, 1117, 1118, 1119, 1121, 1122, 1123, 1124], "johanna": [42, 223, 233, 236, 243, 246, 264, 271, 285, 303, 313, 462, 521, 537, 609, 621, 1038, 1089, 1091, 1095, 1097, 1117, 1118, 1119, 1121, 1122, 1123, 1124], "bodi": [42, 50, 55, 110, 111, 157, 357, 358, 360, 364, 393, 403, 432, 522, 555, 564, 565, 569, 572, 642, 660, 661, 664, 723, 1004, 1134], "compil": [42, 43, 65, 103, 104, 108, 110, 111, 114, 152, 153, 162, 171, 178, 179, 180, 199, 213, 216, 229, 236, 252, 261, 264, 267, 268, 276, 285, 291, 293, 309, 313, 316, 343, 355, 368, 377, 378, 387, 390, 392, 399, 400, 409, 411, 418, 421, 424, 425, 426, 427, 428, 430, 431, 432, 434, 435, 436, 437, 439, 440, 444, 448, 451, 453, 456, 457, 460, 466, 480, 482, 487, 488, 501, 502, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 546, 552, 555, 560, 562, 565, 567, 571, 573, 577, 588, 616, 635, 642, 647, 649, 660, 661, 662, 663, 665, 667, 668, 670, 671, 673, 675, 677, 682, 685, 688, 697, 698, 700, 706, 709, 710, 712, 714, 718, 719, 752, 754, 755, 770, 771, 786, 898, 906, 977, 978, 981, 982, 983, 984, 986, 1000, 1025, 1030, 1042, 1044, 1140, 1142, 1150, 1151, 1153, 1154, 1155, 1166], "still": [42, 54, 61, 139, 145, 150, 151, 152, 153, 161, 162, 171, 172, 173, 213, 223, 229, 267, 269, 326, 346, 355, 406, 418, 444, 447, 453, 506, 528, 549, 552, 570, 571, 592, 598, 631, 646, 671, 688, 705, 709, 714, 718, 719, 721, 722, 723, 765, 770, 802, 805, 845, 859, 881, 906, 907, 908, 958, 960, 962, 973, 995, 1003, 1006, 1012, 1025, 1028, 1031, 1055, 1091, 1114, 1122, 1142, 1150], "funni": [42, 44, 50, 100, 114, 183, 267, 465, 755, 832, 870, 876, 882, 898, 977], "temp": [42, 44, 239, 344, 718, 719, 720], "got": [42, 45, 151, 161, 213, 285, 307, 402, 674, 928, 1001], "overwritten": [42, 47, 53, 55, 56, 597, 755, 929, 1007], "suspect": [42, 153, 155], "inmem": 42, "loos": [42, 43, 187, 203, 356, 381, 428, 792], "foolishli": 42, "main": [42, 50, 63, 107, 123, 144, 153, 156, 157, 162, 190, 212, 224, 236, 237, 239, 256, 267, 275, 278, 280, 293, 295, 298, 302, 309, 335, 355, 357, 358, 360, 364, 366, 368, 369, 383, 398, 399, 400, 402, 406, 418, 425, 429, 432, 433, 436, 438, 444, 445, 447, 451, 467, 481, 486, 487, 488, 503, 504, 506, 514, 516, 518, 519, 538, 546, 549, 552, 566, 570, 571, 573, 575, 577, 578, 580, 590, 591, 592, 593, 594, 597, 598, 599, 600, 601, 603, 604, 607, 608, 609, 613, 617, 618, 619, 620, 621, 627, 631, 632, 635, 637, 638, 644, 649, 650, 651, 652, 653, 654, 655, 656, 660, 665, 675, 678, 679, 680, 683, 684, 685, 686, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 702, 704, 705, 707, 710, 712, 718, 719, 721, 722, 723, 724, 727, 732, 734, 753, 763, 770, 771, 773, 802, 839, 841, 859, 906, 908, 909, 922, 924, 925, 926, 932, 933, 934, 935, 940, 943, 944, 946, 950, 955, 957, 960, 961, 966, 969, 970, 973, 976, 984, 988, 994, 1008, 1011, 1026, 1090, 1092, 1140, 1145, 1158], "chang": [42, 45, 46, 47, 51, 55, 56, 77, 80, 114, 116, 123, 129, 130, 150, 153, 155, 156, 157, 158, 161, 162, 166, 174, 187, 203, 212, 243, 251, 342, 381, 418, 420, 424, 427, 428, 432, 442, 445, 460, 505, 511, 516, 517, 519, 520, 571, 596, 653, 707, 732, 753, 755, 775, 780, 828, 837, 839, 841, 859, 868, 871, 886, 899, 901, 906, 907, 918, 922, 943, 973, 976, 991, 1007, 1031, 1040, 1079, 1090, 1092, 1095, 1118, 1122, 1136, 1153], "errorhandl": 42, "just": [42, 46, 63, 69, 84, 108, 121, 122, 126, 141, 150, 151, 152, 153, 154, 155, 157, 158, 162, 166, 173, 175, 179, 183, 190, 213, 224, 227, 252, 293, 302, 309, 323, 364, 383, 408, 411, 420, 438, 442, 447, 457, 462, 503, 506, 516, 518, 519, 520, 543, 562, 563, 564, 570, 573, 574, 575, 578, 597, 625, 632, 638, 642, 646, 660, 667, 671, 673, 674, 688, 703, 706, 720, 722, 724, 739, 753, 760, 765, 773, 775, 782, 786, 792, 794, 802, 818, 841, 862, 865, 866, 895, 899, 907, 908, 923, 925, 926, 932, 933, 935, 944, 945, 955, 962, 970, 988, 995, 998, 999, 1002, 1004, 1022, 1023, 1029, 1030, 1031, 1038, 1042, 1050, 1051, 1105, 1106, 1113, 1118, 1119, 1123, 1124, 1129, 1133, 1145, 1155], "silent": [42, 65, 233, 243, 664, 906], "truncat": [42, 239, 285, 358, 379, 481, 844, 928, 1050], "faschingb": 42, "echo": [42, 152, 203, 239, 267, 321, 519, 644, 775, 784, 802, 829, 830, 833, 834, 842, 846, 856, 865, 868, 872, 881, 899, 901, 906, 907, 908, 909, 929, 931, 940, 942, 943, 955, 958, 964, 973, 1135], "success": [42, 180, 220, 226, 236, 239, 419, 448, 677, 730, 780, 784, 874, 1066], "failur": [42, 43, 220, 226, 236, 239, 251, 256, 285, 320, 428, 438, 444, 458, 516, 520, 1133, 1134, 1141, 1142, 1145], "renam": [42, 50, 57, 63, 66, 99, 112, 114, 144, 210, 257, 266, 267, 287, 288, 555, 707, 755, 770, 771, 832, 869, 882, 898, 994, 1112], "most": [43, 44, 57, 59, 62, 65, 87, 112, 147, 150, 151, 153, 154, 157, 162, 173, 175, 181, 183, 187, 189, 211, 220, 223, 226, 227, 236, 237, 239, 243, 249, 269, 271, 285, 305, 306, 307, 320, 356, 364, 393, 396, 403, 418, 420, 426, 431, 432, 436, 437, 447, 461, 474, 517, 577, 578, 616, 668, 712, 717, 720, 726, 780, 788, 802, 807, 827, 829, 830, 833, 840, 864, 895, 899, 906, 908, 920, 928, 934, 947, 962, 970, 973, 974, 976, 997, 998, 999, 1004, 1011, 1012, 1013, 1019, 1020, 1028, 1030, 1031, 1032, 1035, 1038, 1041, 1042, 1046, 1048, 1051, 1052, 1057, 1099, 1100, 1109, 1113, 1117, 1121, 1122, 1127, 1129, 1133, 1134, 1140, 1155, 1156, 1158], "somebodi": [43, 158, 166, 179, 213, 370, 427, 448, 546, 570, 622, 682, 688, 699, 730, 792, 810, 964], "concis": [43, 150, 183, 187, 237, 306, 336, 337, 447, 802, 1100], "longer": [43, 166, 964, 1025, 1153], "necessari": [43, 61, 130, 144, 152, 158, 162, 171, 180, 194, 210, 213, 270, 273, 305, 306, 360, 370, 402, 442, 444, 448, 460, 506, 565, 569, 637, 663, 664, 698, 708, 720, 732, 798, 802, 837, 906, 908, 909, 924, 962, 973, 993, 1020, 1027, 1031, 1055, 1112, 1133], "gosh": [43, 147, 381, 426, 428, 622, 705, 952, 997, 998, 1004, 1031], "hungarian": [43, 422], "notat": [43, 178, 218, 234, 239, 244, 285, 422, 735, 907, 1013], "userdb": [43, 47, 48, 51, 53, 54, 56, 57, 213, 215, 229, 237, 284, 295, 298, 645, 653, 654, 655, 657, 755, 1089, 1090, 1091, 1092, 1097], "bolt": [43, 213], "onto": [43, 59, 62, 112, 120, 123, 161, 172, 213, 229, 302, 484, 566, 643, 657, 720, 755, 802, 887, 899, 907, 926, 958, 981, 988], "unclear": [43, 509, 974], "semant": [43, 49, 81, 151, 175, 255, 256, 258, 276, 315, 413, 427, 428, 482, 563, 616, 622, 661, 668, 700, 716, 719, 720, 721, 722, 725, 733, 752, 754, 755, 761, 766, 794, 973, 974, 1031, 1109, 1153], "backingstor": [43, 53, 56, 755], "mangl": [43, 210, 211, 224, 241, 1025], "prefix": [43, 61, 147, 162, 220, 224, 226, 236, 239, 285, 328, 574, 604, 660, 802, 988, 990, 997, 1019, 1020, 1045, 1052, 1135], "m_": 43, "enough": [43, 154, 158, 175, 183, 233, 243, 276, 285, 346, 370, 461, 637, 906, 919, 947, 977, 999, 1016, 1024, 1045, 1113, 1118, 1125, 1127, 1134, 1155], "take": [43, 48, 86, 102, 110, 111, 115, 120, 122, 144, 145, 150, 151, 152, 155, 156, 157, 158, 161, 166, 168, 171, 172, 174, 179, 183, 184, 189, 190, 191, 211, 224, 229, 231, 239, 243, 249, 273, 312, 320, 321, 326, 335, 365, 402, 405, 422, 424, 431, 433, 437, 438, 442, 443, 445, 460, 461, 484, 485, 487, 488, 506, 516, 519, 532, 538, 552, 564, 571, 575, 578, 580, 618, 642, 660, 665, 672, 673, 682, 710, 712, 718, 722, 732, 745, 746, 765, 792, 802, 828, 829, 830, 906, 936, 964, 988, 994, 998, 1002, 1024, 1040, 1041, 1057, 1064, 1067, 1069, 1073, 1074, 1075, 1078, 1079, 1080, 1082, 1084, 1094, 1099, 1107, 1108, 1113, 1118, 1128, 1135], "dogmat": [43, 229, 353, 1113], "switch": [43, 45, 54, 58, 59, 62, 110, 111, 112, 114, 115, 116, 117, 118, 122, 123, 124, 126, 152, 156, 158, 170, 171, 212, 220, 226, 236, 237, 239, 316, 321, 322, 324, 341, 344, 347, 377, 391, 395, 397, 404, 410, 414, 417, 419, 421, 430, 434, 437, 439, 440, 444, 447, 460, 474, 508, 509, 510, 560, 621, 661, 662, 700, 741, 743, 752, 754, 755, 782, 800, 807, 816, 819, 821, 835, 839, 899, 902, 960, 993, 1150, 1154], "bool": [43, 50, 53, 55, 56, 125, 130, 194, 201, 223, 226, 229, 231, 233, 236, 239, 246, 249, 264, 268, 269, 271, 275, 285, 313, 452, 454, 521, 522, 526, 528, 533, 562, 564, 578, 579, 580, 581, 582, 600, 603, 609, 618, 665, 677, 678, 679, 680, 688, 691, 695, 702, 732, 734, 736, 755, 815, 822, 960, 966, 973, 1031, 1057, 1119, 1124], "wear": [43, 148, 152], "incorrect": [43, 220, 226, 236, 239, 243, 381, 400, 1125], "metaphor": 43, "But": [43, 151, 152, 153, 156, 167, 203, 212, 302, 364, 370, 399, 402, 408, 411, 424, 426, 432, 442, 561, 562, 570, 575, 576, 577, 595, 613, 631, 632, 670, 673, 709, 718, 722, 724, 740, 754, 755, 784, 786, 802, 812, 829, 830, 884, 898, 906, 907, 908, 915, 929, 937, 939, 944, 952, 956, 979, 993, 995, 1016, 1019, 1025, 1105, 1108, 1119], "support": [43, 78, 120, 152, 154, 158, 162, 171, 175, 187, 199, 201, 220, 223, 226, 231, 233, 236, 239, 243, 246, 261, 264, 271, 303, 313, 331, 400, 424, 438, 444, 561, 562, 564, 668, 720, 724, 739, 749, 753, 758, 794, 884, 906, 907, 908, 918, 970, 976, 1004, 1012, 1019, 1025, 1042, 1055, 1105, 1107, 1122, 1140], "copy_process": 43, "law": [43, 203, 332, 375, 420, 999, 1124], "tdd": [43, 114, 182, 187, 197, 237, 279, 295, 298, 302, 316, 354, 1133], "until": [43, 55, 97, 98, 99, 102, 105, 110, 111, 114, 119, 126, 130, 139, 141, 151, 153, 155, 157, 202, 211, 223, 242, 260, 280, 306, 392, 398, 423, 426, 520, 580, 644, 688, 694, 732, 734, 770, 790, 800, 810, 812, 818, 835, 839, 846, 862, 874, 881, 923, 924, 925, 926, 949, 963, 970, 974, 1003, 1004, 1025, 1033, 1035, 1100], "fail": [43, 44, 147, 151, 153, 161, 162, 166, 178, 183, 213, 239, 256, 288, 320, 346, 445, 448, 458, 462, 467, 469, 516, 647, 668, 670, 677, 682, 736, 753, 755, 780, 802, 881, 898, 908, 929, 934, 937, 939, 954, 955, 956, 973, 993, 997, 999, 1008, 1050, 1066, 1122, 1134, 1135, 1139, 1141, 1143], "suffici": [43, 116, 166, 171, 183, 321, 569, 597, 638, 642, 653, 661, 775, 884, 974, 1022, 1024, 1052, 1134], "pass": [43, 44, 48, 55, 57, 58, 63, 110, 111, 171, 179, 183, 188, 189, 190, 192, 199, 210, 212, 216, 220, 226, 229, 231, 233, 236, 239, 243, 246, 249, 251, 252, 256, 261, 264, 269, 270, 273, 281, 285, 303, 320, 346, 366, 368, 370, 381, 402, 406, 409, 411, 428, 458, 460, 465, 467, 506, 516, 517, 518, 519, 521, 522, 562, 572, 573, 579, 580, 581, 582, 591, 642, 648, 672, 702, 710, 715, 719, 722, 749, 750, 751, 768, 805, 846, 906, 932, 935, 946, 955, 978, 995, 997, 998, 999, 1000, 1012, 1013, 1014, 1016, 1022, 1040, 1042, 1050, 1052, 1088, 1117, 1133, 1140], "current": [43, 99, 109, 114, 119, 137, 139, 152, 153, 154, 156, 158, 161, 162, 166, 191, 213, 220, 226, 236, 239, 257, 264, 266, 267, 285, 287, 288, 327, 346, 349, 354, 403, 436, 444, 460, 462, 466, 480, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 560, 650, 654, 719, 720, 733, 740, 754, 755, 771, 802, 810, 824, 828, 829, 830, 831, 832, 835, 836, 837, 839, 845, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 862, 863, 866, 867, 868, 869, 870, 871, 872, 873, 874, 876, 877, 878, 879, 880, 882, 884, 886, 898, 907, 921, 927, 928, 929, 937, 939, 944, 946, 953, 956, 959, 960, 961, 978, 980, 981, 982, 983, 984, 985, 986, 987, 993, 998, 1003, 1024, 1027, 1035, 1038, 1159], "initi": [43, 45, 63, 110, 111, 112, 114, 125, 133, 150, 151, 154, 158, 166, 168, 178, 183, 187, 192, 198, 207, 211, 212, 222, 223, 224, 239, 243, 246, 249, 254, 264, 271, 276, 278, 281, 285, 298, 307, 313, 358, 360, 367, 411, 416, 426, 430, 434, 436, 439, 440, 462, 464, 482, 487, 488, 501, 502, 506, 508, 509, 510, 511, 512, 513, 516, 538, 552, 555, 560, 564, 565, 566, 568, 573, 575, 577, 579, 581, 596, 597, 598, 603, 616, 621, 642, 647, 649, 650, 651, 656, 657, 671, 682, 700, 708, 719, 720, 722, 734, 752, 754, 755, 760, 763, 765, 766, 773, 780, 788, 798, 802, 829, 830, 838, 863, 893, 907, 908, 923, 926, 944, 947, 960, 969, 970, 976, 1011, 1014, 1044, 1105, 1109, 1153, 1158], "mess": [43, 151, 237, 256, 258, 313, 315, 316, 662, 700, 754, 755, 1031, 1044, 1134], "roughli": [43, 65, 153, 158, 302, 431, 827, 960, 969], "took": [43, 150, 157, 187, 1065], "our": [43, 53, 59, 62, 70, 77, 104, 114, 125, 126, 130, 131, 133, 152, 153, 155, 157, 162, 166, 173, 187, 202, 203, 212, 213, 227, 229, 267, 278, 280, 316, 335, 428, 431, 442, 453, 461, 465, 470, 482, 486, 503, 514, 519, 653, 656, 775, 782, 802, 906, 907, 932, 935, 960, 970, 974, 976, 988, 991, 994, 1000, 1097, 1105, 1108], "craftsmanship": [43, 45], "anoth": [43, 63, 78, 112, 150, 151, 152, 153, 157, 158, 161, 162, 166, 173, 175, 180, 183, 189, 190, 213, 220, 226, 229, 236, 241, 243, 249, 264, 267, 270, 273, 276, 302, 372, 390, 391, 405, 413, 425, 432, 443, 460, 461, 464, 469, 484, 487, 488, 501, 502, 506, 511, 520, 572, 575, 576, 578, 660, 665, 688, 712, 720, 724, 734, 740, 745, 746, 790, 802, 828, 829, 830, 835, 844, 846, 858, 895, 906, 908, 918, 919, 933, 947, 949, 961, 969, 974, 991, 994, 995, 998, 999, 1016, 1023, 1031, 1047, 1051, 1056, 1108, 1116, 1122, 1125, 1133, 1156], "isol": [43, 54, 181, 183, 187, 237, 251, 906, 960, 961, 1011, 1100, 1112, 1128, 1144, 1146], "wrong": [43, 78, 151, 153, 276, 381, 403, 422, 638, 724, 775, 932, 947, 961, 995, 999, 1011, 1030, 1094, 1105], "oracl": [43, 1109], "conduct": [43, 1133], "serious": 43, "safeti": [43, 229, 424, 427, 430, 434, 439, 440, 443, 538, 661, 731, 755, 761, 899, 973, 974, 997], "architectur": [43, 108, 148, 158, 210, 352, 376, 403, 420, 443, 724, 763, 899, 926, 976, 977, 986, 988, 1156], "treat": [43, 81, 243, 368, 398, 844], "them": [43, 63, 66, 110, 111, 144, 148, 150, 151, 153, 156, 157, 158, 161, 162, 166, 171, 172, 173, 180, 183, 187, 188, 190, 192, 208, 210, 213, 224, 248, 251, 260, 280, 290, 302, 398, 420, 451, 462, 466, 482, 518, 579, 581, 582, 635, 642, 644, 647, 660, 710, 724, 802, 828, 834, 835, 841, 844, 869, 881, 908, 915, 960, 961, 970, 973, 976, 977, 988, 993, 998, 999, 1000, 1001, 1022, 1024, 1046, 1078, 1081, 1100, 1106, 1113, 1124, 1140], "carefulli": [43, 153, 166, 428, 487, 677, 1106], "independ": [43, 63, 231, 243, 370, 403, 575, 886, 900, 908, 978], "self": [43, 59, 62, 63, 151, 152, 162, 170, 171, 178, 184, 187, 189, 207, 210, 211, 223, 224, 226, 233, 236, 241, 243, 249, 252, 264, 271, 281, 285, 291, 303, 307, 436, 444, 562, 564, 668, 670, 671, 705, 718, 724, 730, 763, 794, 798, 957, 993, 997, 998, 999, 1008, 1012, 1013, 1016, 1017, 1018, 1019, 1020, 1021, 1031, 1121, 1122, 1134, 1139, 1140, 1142, 1153], "valid": [43, 150, 153, 161, 239, 242, 285, 346, 401, 408, 424, 428, 587, 595, 619, 654, 668, 705, 708, 734, 815, 1030, 1031, 1045, 1046, 1062, 1067, 1121, 1122, 1128], "first": [43, 53, 61, 63, 87, 119, 141, 148, 150, 153, 154, 156, 157, 158, 162, 166, 171, 181, 183, 190, 210, 223, 224, 231, 233, 237, 239, 243, 267, 269, 280, 285, 302, 320, 326, 332, 356, 364, 387, 402, 403, 408, 416, 432, 433, 444, 445, 446, 447, 448, 450, 451, 452, 453, 455, 456, 458, 508, 549, 555, 560, 562, 568, 570, 574, 593, 594, 595, 599, 618, 621, 653, 655, 660, 682, 689, 690, 709, 710, 712, 749, 750, 751, 755, 769, 772, 779, 783, 793, 802, 804, 806, 811, 817, 820, 823, 840, 841, 842, 847, 858, 862, 868, 884, 886, 889, 893, 895, 898, 899, 906, 907, 925, 929, 949, 957, 960, 963, 969, 977, 978, 992, 993, 994, 995, 999, 1000, 1004, 1011, 1013, 1017, 1025, 1026, 1027, 1028, 1030, 1031, 1040, 1041, 1044, 1050, 1051, 1057, 1080, 1089, 1095, 1097, 1106, 1108, 1116, 1134, 1140, 1153, 1158], "debug": [43, 151, 152, 180, 210, 220, 226, 236, 239, 290, 294, 310, 335, 340, 353, 403, 429, 432, 436, 437, 438, 446, 448, 449, 465, 543, 688, 705, 755, 760, 782, 784, 844, 862, 928, 952, 973, 1050, 1128, 1151, 1154, 1159, 1168], "fact": [43, 53, 151, 152, 183, 302, 400, 408, 432, 442, 802, 847, 932, 970, 1109], "hard": [43, 70, 78, 85, 114, 119, 126, 130, 141, 151, 153, 156, 157, 162, 167, 172, 179, 183, 190, 212, 227, 233, 243, 257, 266, 267, 287, 288, 302, 381, 400, 429, 442, 470, 546, 753, 755, 802, 832, 838, 841, 882, 884, 898, 901, 907, 988, 997, 999, 1019, 1036, 1050, 1102, 1123, 1153, 1169], "principl": [43, 53, 54, 83, 106, 131, 147, 153, 162, 277, 278, 279, 280, 443, 466, 467, 755, 802, 906, 908, 919, 979, 1108], "mayb": [43, 45, 57, 58, 61, 63, 78, 114, 119, 141, 144, 151, 152, 153, 156, 157, 166, 179, 183, 210, 226, 227, 277, 278, 279, 280, 295, 338, 341, 343, 344, 445, 464, 465, 466, 498, 551, 552, 622, 670, 751, 907, 991, 1013, 1142], "overview": [43, 98, 114, 147, 158, 175, 191, 193, 208, 212, 224, 257, 258, 266, 270, 273, 276, 278, 287, 288, 304, 349, 353, 466, 480, 508, 509, 510, 511, 512, 513, 514, 515, 518, 560, 580, 676, 687, 700, 711, 733, 754, 755, 825, 829, 830, 831, 832, 835, 836, 843, 845, 846, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 862, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 882, 892, 898, 910, 911, 912, 913, 914, 921, 922, 925, 927, 929, 937, 939, 953, 956, 959, 961, 978, 980, 981, 982, 983, 984, 985, 986, 987, 991, 1023, 1100, 1153, 1154, 1156, 1158], "respons": [43, 53, 56, 89, 126, 131, 136, 150, 161, 166, 214, 442, 484, 498, 506, 564, 572, 720, 755, 798, 810, 907, 908, 931, 960, 961, 1027, 1107, 1158], "googl": [44, 146, 151, 158, 160, 172, 175, 178, 179, 183, 184, 187, 208, 213, 355, 517, 718, 719, 891, 1025, 1100, 1140, 1142, 1171], "cloner": 44, "init": [44, 133, 150, 152, 168, 172, 249, 256, 258, 366, 393, 491, 492, 514, 517, 545, 562, 580, 598, 757, 765, 770, 790, 792, 804, 838, 890, 974], "cpp": [44, 50, 97, 112, 114, 115, 116, 117, 118, 119, 122, 123, 162, 177, 187, 212, 213, 229, 256, 267, 276, 278, 355, 446, 447, 448, 453, 460, 461, 462, 464, 465, 467, 469, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 500, 501, 502, 507, 509, 510, 511, 512, 513, 514, 515, 516, 518, 519, 520, 521, 522, 523, 524, 526, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 562, 563, 564, 565, 566, 570, 571, 573, 575, 576, 577, 578, 579, 580, 581, 582, 590, 591, 592, 593, 594, 597, 598, 599, 600, 601, 603, 604, 607, 608, 609, 613, 617, 618, 619, 620, 621, 627, 631, 632, 635, 637, 638, 640, 644, 649, 650, 651, 652, 653, 654, 655, 656, 660, 665, 667, 670, 671, 672, 675, 677, 682, 688, 697, 698, 699, 702, 703, 704, 705, 706, 707, 709, 710, 712, 714, 718, 719, 720, 721, 722, 723, 732, 734, 736, 739, 741, 743, 745, 749, 750, 751, 753, 906, 936, 940, 943, 955, 957, 960, 976], "assert_eq": [44, 460, 462, 465, 469, 482, 509, 510, 516, 519, 520, 521, 522, 523, 524, 526, 528, 529, 530, 533, 534, 535, 536, 537, 555, 562, 563, 564, 575, 576, 578, 579, 580, 581, 582, 640, 665, 667, 670, 671, 672, 703, 714, 718, 719, 720, 721, 723, 736, 749, 750, 751, 753, 1140, 1145], "test_f": [44, 484, 519, 520, 753, 1145], "simplefixtur": 44, "public": [44, 55, 101, 102, 107, 114, 119, 123, 126, 148, 161, 166, 203, 211, 224, 252, 257, 266, 267, 275, 281, 287, 288, 332, 335, 340, 416, 452, 453, 454, 456, 461, 463, 467, 469, 472, 473, 474, 484, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 506, 519, 520, 532, 546, 552, 561, 562, 563, 565, 566, 567, 569, 570, 571, 572, 573, 574, 576, 577, 578, 585, 588, 603, 604, 621, 631, 632, 634, 635, 637, 638, 646, 647, 652, 654, 655, 660, 663, 664, 665, 666, 667, 670, 671, 673, 682, 684, 685, 686, 688, 690, 691, 694, 695, 696, 697, 698, 699, 703, 704, 705, 707, 718, 719, 720, 723, 724, 732, 734, 739, 741, 743, 745, 753, 755, 766, 770, 831, 832, 837, 851, 857, 898, 910, 911, 912, 913, 914, 919, 1020, 1025, 1145], "myfirstsuit": 44, "test_find": 44, "wtf": [44, 53, 114, 189, 220, 225, 226, 229, 231, 249, 288, 555, 570, 755, 898, 923, 927, 939, 973, 975, 998], "tallk": 44, "morph": [44, 63, 178, 187, 212, 213, 278, 540, 552, 555, 558, 564, 660, 712, 804, 1002], "fixtur": [44, 178, 187, 279, 280, 295, 301, 302, 305, 306, 316, 343, 473, 484, 520, 755, 1138, 1171], "trivial": [44, 151, 162, 293, 309, 382, 398, 555, 572, 668, 673, 724, 807, 815, 908, 924, 960, 1155], "tempfil": [44, 997], "crap": [44, 152, 227, 269, 428, 444, 447, 622, 661, 740, 908, 973], "null": [44, 63, 152, 153, 154, 169, 194, 210, 223, 239, 246, 249, 264, 271, 281, 285, 307, 313, 357, 370, 377, 405, 416, 426, 431, 444, 519, 575, 674, 760, 766, 773, 798, 833, 842, 844, 845, 862, 877, 884, 926, 931, 938, 945, 947, 949, 951, 957, 960, 961, 966, 969, 973], "deriv": [44, 107, 115, 130, 173, 227, 239, 306, 322, 346, 520, 538, 564, 634, 635, 637, 638, 699, 707, 739, 999, 1012, 1145], "seminar": [45, 134], "psycho": 45, "rule": [45, 152, 158, 183, 233, 239, 243, 276, 315, 343, 358, 377, 379, 380, 381, 396, 402, 420, 431, 432, 433, 435, 443, 445, 470, 482, 487, 588, 634, 668, 671, 675, 677, 697, 723, 724, 841, 862, 923, 999, 1022, 1030, 1031, 1041, 1050, 1113, 1160], "dont": [45, 243, 442, 775], "scenario": [45, 153, 166, 175, 183, 187, 365, 486, 638, 732, 961, 962, 969], "robert": [45, 470], "martin": [45, 442, 443, 470], "someon": [45, 183, 224, 239, 246, 249, 280, 342, 577, 732, 794, 859, 865, 886, 908, 932, 976, 1024], "mistak": [45, 151, 157, 158, 208, 224, 248, 906, 1100, 1113], "kill": [45, 152, 153, 229, 862, 916, 945, 964, 973, 974, 1003, 1159], "peopl": [45, 63, 148, 151, 153, 155, 156, 158, 166, 171, 183, 212, 246, 353, 442, 470, 488, 677, 802, 841, 1008, 1024, 1052, 1107, 1109], "polit": [45, 710], "thei": [45, 55, 65, 78, 112, 139, 150, 151, 152, 153, 154, 155, 156, 157, 158, 162, 171, 173, 175, 179, 191, 213, 220, 224, 226, 229, 236, 239, 243, 285, 293, 309, 346, 372, 378, 398, 426, 429, 432, 438, 442, 443, 447, 456, 461, 462, 482, 487, 488, 516, 518, 538, 555, 565, 570, 596, 600, 632, 660, 661, 664, 671, 672, 719, 720, 726, 761, 775, 794, 802, 827, 837, 841, 863, 899, 906, 907, 908, 919, 944, 973, 974, 979, 994, 1004, 1012, 1019, 1022, 1072, 1095, 1102, 1105, 1106, 1113, 1116, 1119, 1133, 1139, 1155, 1158], "regul": 45, "ethic": 45, "everi": [45, 53, 59, 62, 63, 78, 89, 110, 111, 120, 144, 151, 157, 187, 210, 239, 280, 367, 424, 438, 442, 465, 470, 486, 505, 506, 575, 585, 637, 659, 661, 666, 753, 773, 786, 802, 827, 835, 837, 839, 840, 856, 863, 865, 907, 922, 957, 960, 973, 974, 993, 995, 1004, 1040, 1058, 1069, 1080, 1106, 1140, 1155], "particular": [45, 112, 150, 162, 183, 411, 436, 462, 486, 538, 753, 848, 1023, 1024], "electr": 45, "seem": [45, 139, 150, 152, 153, 172, 277, 461, 906, 908, 973, 1155], "adher": [45, 844], "immedi": [45, 63, 151, 152, 157, 158, 229, 270, 273, 276, 278, 321, 403, 613, 727, 732, 784, 794, 798, 899, 949, 958, 961, 963, 1044, 1140], "survei": [45, 172], "had": [45, 112, 150, 152, 153, 157, 158, 162, 166, 171, 183, 187, 216, 218, 237, 372, 411, 482, 549, 561, 646, 660, 796, 829, 830, 841, 866, 906, 919, 990, 1024, 1031, 1050, 1119, 1123], "life": [45, 125, 130, 147, 158, 163, 166, 169, 171, 179, 567, 697, 718, 733, 754, 755, 802, 841, 898, 939, 953, 959, 1025, 1046, 1103], "accomplish": [45, 57, 78, 191, 277, 279, 280, 428, 443, 906], "befor": [45, 115, 119, 126, 130, 147, 151, 152, 154, 155, 156, 158, 161, 166, 171, 187, 190, 194, 212, 239, 255, 256, 258, 279, 280, 285, 301, 302, 303, 306, 313, 315, 360, 368, 369, 378, 398, 447, 519, 549, 555, 594, 620, 635, 661, 673, 688, 700, 705, 706, 716, 720, 721, 726, 727, 732, 734, 735, 753, 754, 755, 766, 780, 790, 796, 802, 828, 864, 899, 908, 947, 962, 964, 976, 999, 1004, 1022, 1065, 1090, 1092, 1096, 1105, 1118, 1122, 1125, 1134, 1135, 1141], "formal": [45, 161, 175, 212, 213, 302, 305, 509, 1134], "googletest": [45, 65, 97, 178, 180, 181, 213, 256, 258, 293, 309, 458, 467, 503, 516, 518, 519, 580, 718, 719, 720, 753, 755, 756, 1140, 1142, 1155], "messag": [45, 119, 146, 148, 156, 157, 166, 169, 175, 181, 189, 190, 216, 220, 223, 226, 236, 239, 246, 249, 264, 271, 279, 280, 281, 285, 307, 313, 323, 335, 340, 443, 446, 448, 467, 572, 588, 647, 677, 682, 702, 704, 705, 714, 724, 732, 755, 777, 802, 835, 839, 844, 898, 920, 939, 949, 953, 1028, 1042, 1052, 1094, 1135, 1139, 1141, 1167, 1168, 1169], "saniti": [45, 434, 439, 440, 443, 447, 451, 577, 662, 700, 752, 754, 755], "perform": [45, 151, 157, 166, 168, 190, 209, 210, 239, 280, 307, 341, 382, 385, 408, 415, 420, 428, 431, 432, 435, 438, 439, 440, 446, 555, 595, 613, 616, 638, 659, 673, 715, 755, 786, 964, 981, 991, 992, 1050, 1133, 1151, 1154], "delici": [45, 53], "fearlessli": [45, 53], "backlog": [45, 46, 47, 51, 55, 56, 755], "Or": [45, 46, 47, 51, 55, 56, 115, 130, 151, 258, 315, 427, 443, 546, 674, 700, 711, 754, 755, 893, 919, 929, 955, 1030, 1044, 1121, 1125], "Will": [45, 46, 47, 51, 55, 56, 151, 184, 243, 321, 755, 763, 976, 1042, 1128, 1142, 1148, 1167], "high": [46, 53, 115, 172, 212, 226, 243, 442, 470, 493, 506, 510, 514, 718, 720, 735, 784, 796, 800, 812, 821], "speed": [46, 53, 141, 146, 151, 220, 224, 226, 236, 239, 243, 307, 433, 723, 796, 802, 962, 964, 1104, 1105], "hype": [46, 740], "we": [46, 47, 50, 51, 55, 56, 59, 61, 62, 68, 115, 119, 123, 126, 129, 130, 131, 133, 141, 150, 151, 153, 154, 155, 156, 157, 158, 162, 166, 167, 170, 171, 172, 173, 174, 175, 179, 180, 183, 187, 188, 189, 190, 191, 193, 202, 203, 210, 211, 212, 213, 217, 220, 223, 224, 226, 227, 229, 256, 258, 260, 267, 270, 273, 275, 277, 279, 280, 298, 302, 305, 306, 321, 338, 341, 342, 346, 357, 372, 383, 390, 398, 411, 420, 422, 426, 428, 431, 436, 443, 445, 453, 454, 460, 461, 462, 465, 467, 469, 472, 481, 482, 486, 487, 503, 504, 505, 506, 514, 517, 518, 519, 549, 555, 564, 576, 600, 631, 635, 652, 653, 654, 655, 656, 660, 671, 682, 688, 714, 715, 720, 723, 734, 755, 763, 766, 770, 771, 775, 777, 780, 798, 802, 804, 810, 818, 829, 830, 844, 845, 859, 865, 866, 881, 899, 906, 907, 908, 915, 919, 924, 925, 926, 932, 933, 934, 935, 947, 960, 969, 986, 990, 991, 992, 1000, 1019, 1024, 1050, 1052, 1056, 1058, 1087, 1094, 1095, 1096, 1100, 1105, 1106, 1107, 1108, 1115, 1116, 1122, 1125, 1141, 1142, 1158], "did": [46, 152, 153, 155, 157, 158, 161, 162, 170, 179, 183, 190, 275, 422, 426, 442, 467, 505, 653, 722, 724, 750, 775, 780, 802, 841, 899, 910, 919, 1000, 1153], "consequ": [46, 150, 151, 270, 273, 402, 423, 426, 427, 470, 932, 1019, 1119, 1153], "unsign": [46, 126, 224, 229, 374, 376, 384, 413, 416, 420, 428, 474, 489, 504, 518, 519, 520, 570, 640, 641, 650, 698, 732, 734, 739, 741, 743, 745, 753, 758, 761, 766, 773, 782, 784, 786, 792, 798, 807, 812, 816, 928, 969, 970, 1150, 1151], "introduc": [46, 58, 78, 97, 212, 229, 237, 278, 293, 309, 424, 432, 444, 460, 465, 487, 505, 506, 507, 508, 538, 560, 646, 755, 821, 973, 1002, 1028, 1042, 1107, 1155], "throw": [46, 119, 155, 158, 229, 462, 486, 487, 491, 497, 498, 500, 501, 502, 520, 538, 616, 654, 696, 717, 720, 731, 734, 1145], "notfounderror": 46, "cbda1e98040d084c31ff6e83f04d78dbebf5c1c2": 46, "cluster_clean_cod": [46, 47, 51, 53, 55, 56, 755], "cluster_clean_code_bug": [46, 47, 53, 55, 56, 755], "clean_code_bugs_find_error": [46, 47, 53, 755], "twice": [47, 53, 55, 56, 57, 151, 364, 403, 425, 445, 668, 671, 730, 755, 822, 862, 899, 915, 947, 992], "crash": [47, 53, 63, 110, 111, 149, 151, 152, 153, 156, 208, 210, 220, 226, 236, 239, 353, 393, 400, 486, 570, 597, 642, 718, 755, 960, 974, 1100], "found": [47, 53, 108, 109, 120, 138, 147, 150, 162, 171, 183, 216, 220, 223, 226, 229, 231, 233, 236, 239, 249, 264, 271, 285, 293, 303, 307, 309, 313, 321, 335, 429, 438, 448, 450, 458, 496, 500, 501, 502, 508, 519, 521, 525, 526, 527, 555, 560, 600, 603, 606, 616, 620, 621, 645, 653, 655, 657, 665, 750, 755, 773, 834, 837, 844, 891, 908, 976, 979, 988, 993, 999, 1007, 1016, 1046, 1078, 1104, 1107, 1143, 1155], "clean_code_bugs_overwrite_store_content_on_read": [47, 53, 55, 56, 755], "clean_code_bugs_overwrite_existing_fil": [47, 53, 55, 56, 755], "explicitli": [48, 152, 153, 157, 183, 223, 233, 243, 276, 380, 381, 399, 437, 443, 487, 564, 567, 575, 616, 665, 668, 671, 724, 736, 833, 961, 970, 998, 1008, 1027, 1113, 1121], "solut": [48, 65, 114, 156, 158, 166, 167, 175, 177, 183, 202, 212, 213, 218, 221, 224, 229, 234, 240, 256, 259, 270, 279, 280, 284, 290, 315, 316, 402, 403, 406, 425, 428, 446, 459, 486, 508, 538, 560, 566, 567, 587, 624, 626, 628, 635, 649, 657, 672, 677, 682, 708, 724, 748, 754, 755, 863, 864, 881, 944, 949, 962, 963, 979, 1004, 1040, 1071, 1083, 1113, 1156], "force_overwrit": 48, "descriptor": [48, 151, 175, 207, 239, 243, 264, 285, 303, 342, 567, 761, 782, 818, 838, 844, 845, 902, 924, 925, 926, 970], "mani": [49, 53, 56, 59, 62, 89, 131, 151, 153, 157, 158, 175, 180, 183, 199, 210, 231, 241, 246, 267, 271, 275, 276, 278, 284, 303, 321, 342, 346, 370, 382, 384, 393, 408, 422, 424, 429, 444, 445, 457, 458, 461, 464, 469, 472, 511, 538, 585, 595, 614, 616, 635, 647, 659, 660, 668, 688, 709, 714, 722, 730, 755, 761, 763, 780, 788, 794, 798, 802, 828, 838, 839, 841, 842, 895, 907, 925, 926, 945, 955, 958, 973, 974, 976, 986, 995, 997, 999, 1004, 1013, 1023, 1028, 1031, 1034, 1038, 1046, 1050, 1052, 1056, 1105, 1107, 1108, 1109, 1113, 1122, 1140, 1153, 1156], "overwrit": [49, 109, 486, 487, 500, 508, 525, 527, 560, 570, 616, 618, 647, 755, 802, 864, 869, 881, 933, 1048], "present": [49, 61, 131, 148, 154, 158, 162, 166, 171, 184, 239, 285, 293, 302, 309, 454, 566, 798, 802, 837, 908, 919, 938, 999, 1082, 1122, 1155], "continu": [50, 53, 63, 89, 99, 106, 110, 111, 112, 115, 131, 144, 152, 161, 162, 174, 183, 184, 187, 196, 201, 202, 203, 232, 237, 243, 249, 259, 332, 396, 397, 403, 404, 410, 414, 417, 421, 426, 430, 434, 439, 440, 442, 444, 447, 448, 465, 579, 581, 582, 642, 662, 670, 700, 750, 751, 752, 753, 754, 755, 899, 901, 905, 911, 934, 935, 973, 974, 979, 990, 997, 1004, 1008, 1041, 1044, 1062, 1107, 1122, 1140], "expected_cont": 50, "fill": [50, 153, 154, 166, 188, 239, 240, 285, 384, 660, 664, 709, 719, 773, 798, 802, 868, 925, 1002], "strategi": [50, 223, 418, 907, 1057, 1133], "hurri": [50, 403], "read_fil": 50, "compar": [50, 114, 211, 213, 224, 239, 280, 285, 381, 423, 437, 438, 447, 516, 562, 719, 910, 945, 1042, 1047, 1071, 1075, 1105], "binaryfil": 50, "doesn": [50, 153, 156, 264, 313, 398, 400, 403, 418, 432, 714, 761, 822, 829, 830, 864, 868, 881, 977, 988, 1044], "belong": [50, 180, 183, 370, 390, 416, 443, 538, 562, 576, 578, 847, 855, 934, 1015, 1029], "test_write_csv": 50, "test_read_csv": [50, 1097], "ah": [50, 59, 62, 157, 173, 210, 212, 226, 617, 976, 1052, 1116], "altern": [51, 53, 55, 56, 63, 65, 68, 78, 83, 130, 150, 151, 158, 184, 203, 229, 290, 377, 454, 562, 571, 585, 596, 599, 668, 717, 723, 743, 755, 802, 841, 862, 902, 906, 908, 920, 928, 934, 945, 951, 969, 976, 1024, 1044, 1047, 1121, 1125, 1128, 1135, 1145, 1148, 1164, 1165, 1167, 1170], "cluster_clean_code_featur": [51, 53, 55, 56, 755], "clean_code_features_other_index": [51, 53, 755], "clean_code_features_csv": [51, 53, 55, 56, 755], "establish": [53, 71, 191, 203, 267, 279, 280, 301, 305, 332, 442, 802, 960, 1156], "were": [53, 112, 130, 144, 151, 153, 157, 166, 183, 187, 353, 402, 458, 561, 570, 571, 597, 664, 703, 829, 830, 908, 935, 990, 998, 1022, 1031, 1050, 1055, 1113, 1119, 1153], "occas": [53, 89, 152, 719], "ourselv": [53, 183, 899], "gather": [53, 158, 190, 279, 280, 301, 302, 305, 320, 436, 438, 1084], "wreak": [53, 110, 111, 418, 642], "havoc": [53, 110, 111, 418, 642], "shoehorn": 53, "violat": [53, 131, 151, 442, 470, 698, 720, 816, 960, 974], "nearli": [53, 183, 189, 420, 952], "solid": [53, 147, 163, 276, 278, 443, 470, 1151, 1152, 1166, 1167, 1169, 1170], "chanc": [53, 151, 153, 188, 422, 442, 757, 802, 927, 1158], "cluster_clean_code_refactor": [53, 55, 56, 755], "clean_code_refactoring_backingstore_interfac": [53, 56, 755], "clean_code_refactoring_backingstore_monolith": [53, 55, 56, 755], "clean_code_refactoring_pass_store_in_ctor": [53, 56, 755], "clean_code_refactoring_store_enum_switch": [53, 55, 56, 755], "now": [54, 61, 112, 150, 151, 152, 153, 154, 155, 157, 158, 166, 170, 179, 189, 199, 216, 223, 229, 233, 243, 251, 271, 275, 296, 321, 322, 335, 398, 411, 426, 431, 456, 462, 469, 482, 487, 509, 510, 517, 576, 600, 603, 609, 613, 621, 664, 715, 720, 735, 736, 760, 780, 802, 810, 812, 818, 834, 837, 899, 906, 907, 908, 934, 935, 943, 988, 990, 995, 998, 1013, 1016, 1040, 1095, 1105, 1107, 1125, 1134, 1153], "violatin": 54, "respect": [54, 59, 62, 65, 144, 152, 166, 213, 275, 277, 327, 374, 422, 442, 487, 505, 564, 571, 634, 668, 719, 720, 833, 841, 906, 960, 974, 1019], "mainli": [55, 151, 187, 276, 285, 616, 753, 942, 1002], "bugfix": 55, "ongo": [55, 112, 962], "scene": [55, 976, 1019], "pleas": [55, 114, 152, 153, 156, 158, 162, 179, 183, 187, 188, 190, 191, 192, 193, 203, 229, 256, 258, 267, 288, 326, 368, 402, 432, 520, 577, 579, 580, 581, 582, 841, 899, 907, 908, 923, 952, 970, 978, 979, 1024, 1126], "wait": [55, 72, 73, 74, 78, 83, 87, 126, 130, 140, 151, 152, 153, 154, 155, 157, 198, 302, 321, 632, 660, 727, 735, 755, 779, 794, 800, 804, 807, 810, 812, 835, 838, 846, 898, 899, 925, 927, 931, 943, 955, 958, 961, 968, 970, 973, 1048, 1116, 1140, 1158, 1166], "unnecessarili": [55, 69, 970], "conflict": [55, 75, 77, 112, 115, 130, 278, 279, 280, 301, 368, 419, 571, 661, 733, 754, 755, 758, 761, 771, 898, 907, 939, 947, 953, 973, 1007, 1136], "rip": [55, 154, 444, 503, 960, 1115], "detail": [55, 84, 148, 153, 156, 161, 165, 166, 178, 184, 198, 209, 210, 212, 213, 220, 226, 236, 240, 241, 243, 247, 269, 280, 335, 442, 447, 470, 507, 517, 519, 567, 719, 780, 862, 906, 908, 962, 994, 1102, 1142, 1151], "instanc": [55, 57, 107, 110, 111, 122, 158, 199, 207, 211, 220, 223, 224, 231, 233, 238, 241, 243, 246, 261, 264, 271, 285, 303, 313, 331, 346, 460, 465, 473, 484, 486, 487, 488, 500, 501, 502, 505, 518, 631, 642, 649, 654, 702, 705, 763, 768, 771, 969, 970, 997, 999, 1013, 1014, 1016, 1019, 1042], "its": [55, 57, 59, 62, 65, 84, 87, 108, 110, 111, 126, 145, 150, 151, 152, 153, 155, 156, 157, 158, 161, 162, 168, 173, 175, 179, 180, 181, 183, 203, 210, 211, 213, 220, 224, 226, 236, 239, 243, 252, 267, 269, 270, 273, 276, 278, 285, 302, 326, 337, 368, 390, 401, 403, 418, 420, 422, 429, 431, 453, 461, 465, 484, 487, 488, 503, 504, 505, 506, 511, 516, 519, 561, 562, 563, 565, 567, 572, 602, 642, 660, 672, 682, 708, 727, 753, 766, 775, 780, 802, 807, 829, 830, 833, 835, 839, 844, 849, 850, 862, 863, 884, 886, 907, 910, 911, 918, 928, 929, 934, 949, 955, 958, 960, 961, 962, 970, 992, 997, 999, 1002, 1007, 1012, 1016, 1022, 1030, 1040, 1042, 1047, 1051, 1057, 1105, 1107, 1126, 1133, 1135, 1153, 1155, 1156, 1158], "replac": [55, 63, 97, 119, 156, 201, 212, 220, 223, 224, 226, 227, 229, 236, 239, 271, 285, 302, 320, 362, 377, 418, 444, 507, 508, 560, 593, 594, 653, 660, 688, 705, 719, 734, 740, 753, 755, 805, 908, 948, 960, 974, 998], "symptom": [57, 161], "mismatch": [57, 544], "onc": [57, 115, 150, 152, 153, 156, 157, 158, 161, 166, 171, 172, 320, 338, 360, 385, 394, 402, 432, 445, 461, 462, 463, 467, 472, 484, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 517, 519, 577, 595, 596, 650, 691, 702, 712, 730, 739, 741, 743, 744, 745, 746, 753, 763, 766, 798, 899, 908, 950, 973, 974, 993, 999, 1000, 1001, 1035, 1056, 1065, 1078, 1109, 1112, 1135], "sync": [57, 131, 152, 223, 239, 246, 249, 264, 271, 281, 285, 307, 313, 418, 422, 802, 893], "imho": [57, 699], "forbidden": [58, 420], "accord": [58, 63, 114, 126, 150, 153, 239, 651, 846, 862, 895, 899, 907, 908], "uncl": [58, 353], "bob": [58, 239, 353, 442], "enum": [58, 212, 213, 316, 377, 392, 430, 434, 439, 440, 444, 447, 662, 700, 741, 743, 752, 754, 755, 761, 763, 771, 960, 1153], "born": [59, 62, 840, 1025], "bound": [59, 62, 63, 229, 233, 264, 276, 291, 419, 429, 434, 439, 440, 544, 572, 574, 576, 594, 673, 755, 840, 844, 900, 961, 964, 1017, 1038, 1061, 1121], "employe": [59, 62, 178, 210, 1016], "year": [59, 62, 150, 151, 152, 153, 157, 162, 183, 223, 229, 271, 275, 442, 561, 645, 646, 648, 649, 652, 653, 654, 655, 656, 657, 659, 706, 755, 1057], "emploi": [59, 62, 152, 162, 187, 403, 802], "configur": [59, 61, 62, 63, 68, 73, 78, 82, 84, 85, 86, 104, 112, 114, 119, 125, 126, 130, 131, 136, 137, 150, 152, 153, 156, 158, 181, 191, 257, 266, 267, 276, 287, 288, 294, 295, 298, 302, 310, 335, 341, 445, 449, 450, 452, 453, 465, 467, 472, 509, 510, 511, 519, 755, 775, 782, 802, 816, 832, 833, 834, 837, 846, 882, 895, 898, 899, 907, 919, 926, 940, 942, 970, 977, 978, 990, 1000, 1070, 1108, 1112, 1121, 1128, 1156], "pattern": [59, 62, 82, 106, 131, 147, 148, 164, 167, 186, 187, 213, 216, 239, 278, 343, 352, 354, 442, 459, 460, 461, 462, 464, 465, 467, 469, 470, 471, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 508, 560, 723, 724, 755, 756, 862, 891, 958, 1005, 1006, 1140, 1160], "led": [59, 62, 72, 73, 74, 78, 91, 116, 117, 118, 123, 124, 131, 169, 191, 267, 321, 344, 509, 755, 761, 899, 907], "hei": [59, 62, 151, 191, 243, 577, 578, 837, 923, 1045, 1113], "reinvent": [59, 62, 211, 260, 1100], "wheel": [59, 62, 115, 135, 147, 804, 839, 934, 1128], "admit": [59, 62, 158], "notori": [59, 62], "fun": [59, 62, 121, 151, 156, 209, 211, 247, 276, 353, 466, 703, 802, 841, 899, 906, 907, 1004, 1016, 1028, 1044, 1099, 1100, 1127, 1134, 1153], "live": [59, 62, 70, 97, 98, 114, 119, 148, 152, 156, 174, 178, 183, 187, 192, 203, 211, 212, 213, 214, 227, 229, 237, 248, 255, 256, 257, 258, 260, 266, 268, 269, 276, 277, 278, 279, 280, 284, 287, 288, 302, 306, 315, 316, 335, 339, 343, 344, 346, 353, 354, 355, 415, 432, 444, 445, 450, 466, 471, 480, 482, 484, 506, 508, 509, 510, 511, 512, 513, 514, 515, 518, 525, 527, 538, 595, 596, 616, 658, 669, 700, 701, 702, 719, 733, 753, 754, 755, 756, 766, 802, 832, 835, 836, 841, 857, 858, 898, 939, 1007, 1024, 1057, 1100, 1126, 1134, 1152, 1153, 1167], "session": [59, 62, 147, 156, 158, 176, 183, 187, 191, 195, 220, 226, 236, 239, 251, 255, 256, 258, 269, 277, 341, 804, 833, 834, 916, 927, 1088, 1100, 1126, 1133, 1163], "simpl": [59, 62, 72, 74, 75, 78, 86, 112, 138, 147, 151, 155, 156, 158, 161, 162, 166, 171, 175, 178, 179, 183, 187, 190, 213, 229, 231, 233, 239, 243, 295, 298, 356, 357, 364, 403, 405, 419, 422, 429, 444, 445, 446, 447, 448, 452, 453, 455, 465, 563, 570, 571, 609, 637, 645, 646, 648, 649, 652, 653, 654, 655, 656, 657, 677, 710, 720, 729, 755, 761, 775, 782, 794, 802, 804, 812, 838, 891, 899, 900, 906, 907, 936, 942, 944, 947, 962, 970, 973, 977, 978, 979, 984, 1000, 1004, 1024, 1025, 1033, 1052, 1100, 1106, 1108, 1124, 1139, 1140], "thu": [59, 62, 151, 152, 153, 189, 387, 462, 775, 780, 822, 829, 932, 1112, 1158], "techniqu": [59, 62, 69, 70, 71, 422, 432, 518, 642, 902], "usag": [59, 62, 65, 80, 106, 115, 131, 153, 158, 203, 213, 224, 237, 251, 276, 278, 279, 301, 316, 321, 341, 353, 403, 428, 429, 436, 447, 451, 457, 466, 467, 480, 506, 507, 508, 560, 570, 577, 578, 596, 631, 633, 634, 637, 638, 657, 659, 671, 682, 688, 702, 709, 740, 754, 755, 804, 839, 862, 891, 894, 909, 940, 943, 958, 994, 999, 1002, 1052, 1094, 1096, 1128, 1135, 1142, 1153], "At": [59, 62, 126, 151, 152, 155, 158, 162, 166, 183, 187, 213, 223, 227, 229, 263, 367, 396, 400, 432, 460, 718, 794, 995, 1012, 1100], "flow": [59, 62, 152, 183, 188, 190, 191, 192, 193, 197, 202, 203, 218, 221, 234, 245, 336, 337, 338, 340, 376, 396, 404, 410, 414, 417, 421, 430, 432, 434, 439, 440, 662, 700, 709, 752, 754, 755, 973, 1008, 1033, 1035, 1042, 1119, 1154], "event": [59, 62, 63, 86, 122, 154, 175, 211, 220, 224, 226, 236, 239, 267, 279, 280, 438, 688, 732, 738, 742, 755, 770, 771, 779, 804, 805, 817, 818, 819, 820, 823, 835, 839, 898, 902, 927, 939, 942, 958, 961, 962, 966, 970, 1011, 1116, 1125, 1158, 1167, 1169, 1170], "save": [59, 62, 63, 85, 147, 150, 151, 163, 171, 174, 220, 226, 236, 239, 270, 273, 276, 384, 386, 660, 691, 694, 695, 696, 846, 864, 918, 927, 964, 993, 997, 1003, 1013, 1046, 1105, 1135, 1153], "schedul": [59, 62, 63, 65, 99, 110, 111, 114, 151, 168, 191, 193, 257, 266, 267, 287, 348, 349, 460, 466, 480, 508, 509, 510, 511, 512, 513, 514, 515, 518, 560, 733, 754, 755, 784, 794, 800, 807, 822, 829, 830, 831, 832, 836, 838, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 876, 877, 878, 879, 880, 882, 898, 910, 911, 912, 913, 914, 921, 927, 929, 937, 939, 944, 953, 955, 956, 960, 964, 978, 980, 981, 982, 983, 984, 985, 986, 987, 1112, 1148, 1158, 1159, 1169], "overhead": [59, 62, 432, 438, 549, 558, 723, 724], "usual": [59, 62, 84, 108, 114, 151, 152, 158, 161, 166, 171, 181, 183, 243, 277, 293, 309, 358, 398, 399, 425, 438, 442, 448, 450, 455, 460, 474, 482, 488, 517, 562, 578, 619, 673, 708, 709, 723, 732, 735, 753, 761, 773, 775, 780, 790, 796, 798, 802, 816, 818, 822, 838, 840, 844, 863, 899, 900, 907, 928, 942, 960, 961, 976, 977, 978, 979, 988, 997, 998, 999, 1000, 1004, 1007, 1010, 1011, 1017, 1019, 1021, 1022, 1024, 1027, 1033, 1038, 1099, 1106, 1107, 1113, 1135, 1136, 1142, 1155], "exhibit": [59, 62, 229, 654, 908, 929, 934], "glitch": [59, 62, 153, 158, 907, 908], "caus": [59, 62, 151, 154, 166, 220, 226, 236, 239, 243, 908, 955, 960, 1122], "hiccup": [59, 62, 158, 269, 978], "twist": [59, 62, 786], "amazingli": [59, 62, 846], "submiss": 60, "submit": [60, 109, 796], "linuxtag": [60, 190, 306, 904], "pure": [61, 69, 122, 158, 335, 398, 471, 634, 660, 699, 724, 841, 1031, 1153], "local": [61, 151, 152, 154, 157, 166, 179, 183, 184, 191, 192, 196, 212, 213, 227, 229, 230, 236, 239, 242, 243, 264, 267, 279, 281, 290, 293, 301, 302, 305, 306, 309, 311, 312, 319, 321, 335, 368, 372, 396, 398, 415, 453, 457, 466, 480, 482, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 560, 567, 585, 668, 671, 673, 702, 755, 775, 802, 807, 829, 830, 834, 884, 898, 906, 908, 909, 910, 911, 917, 919, 925, 936, 944, 986, 988, 995, 998, 1043, 1128, 1155, 1156, 1169], "easili": [61, 131, 145, 152, 158, 321, 377, 396, 429, 442, 461, 634, 710, 784, 800, 928, 958, 964, 994, 1007, 1039, 1153], "guess": [61, 233, 243, 269, 422, 427, 677, 915, 970], "autotool": [61, 162], "portabl": [61, 175, 370, 432, 727, 944, 951, 970, 974, 1031, 1109], "archiv": [61, 103, 104, 114, 162, 163, 191, 193, 257, 266, 267, 287, 438, 451, 457, 466, 480, 508, 509, 510, 511, 512, 513, 514, 515, 518, 560, 755, 832, 862, 898, 978, 981, 983, 984, 986, 987, 988, 993, 997, 1128], "m4": 61, "macro": [61, 229, 294, 310, 362, 373, 376, 388, 397, 404, 410, 414, 417, 421, 424, 430, 434, 439, 440, 448, 449, 453, 454, 457, 662, 700, 706, 752, 754, 755, 771, 790, 804, 844, 922, 928, 934, 944, 978, 1050, 1140, 1145, 1150, 1154], "stock": [61, 223, 224, 1056, 1057], "sudo": [61, 101, 114, 122, 147, 154, 156, 158, 166, 180, 191, 229, 257, 266, 267, 276, 278, 287, 288, 448, 455, 532, 755, 832, 857, 859, 898, 899, 908, 962, 990, 1135], "pwd": [61, 109, 112, 179, 256, 258, 335, 340, 451, 517, 519, 580, 777, 780, 829, 830, 839, 884, 886, 899, 977, 978, 991, 993, 1133], "pub": [61, 154, 191, 775, 915, 1094], "lib": [61, 114, 147, 156, 162, 190, 210, 213, 223, 239, 246, 249, 264, 271, 278, 281, 285, 307, 313, 450, 516, 780, 792, 798, 802, 893, 908, 973, 977, 979, 988, 990, 1128, 1135], "remot": [61, 102, 104, 154, 156, 158, 166, 203, 212, 259, 321, 459, 480, 494, 508, 560, 755, 775, 802, 803, 807, 828, 831, 898, 907, 909, 912, 913, 914, 917, 925, 988, 1000, 1156, 1157, 1164], "v0": 61, "v1": [61, 269, 467, 482, 664], "v2": [61, 63, 158, 178, 269, 467, 482, 664], "autotooleri": 61, "autogen": 61, "step": [61, 63, 150, 151, 157, 158, 162, 166, 187, 226, 229, 230, 256, 258, 271, 275, 280, 303, 358, 360, 362, 378, 402, 444, 447, 464, 507, 517, 555, 580, 585, 718, 802, 829, 830, 976, 984, 1121, 1122, 1134], "noconfigur": 61, "suppress": [61, 157, 203, 436, 461, 570, 719, 881, 1128], "absorb": [61, 144, 189, 441, 443, 671, 1057], "Be": [61, 97, 229, 276, 278, 316, 321, 375, 408, 517, 538, 563, 568, 630, 657, 669, 671, 700, 702, 705, 716, 725, 733, 752, 754, 755, 828, 973, 988], "awar": [61, 321, 419, 452, 962], "enabl": [61, 150, 156, 183, 191, 212, 220, 226, 236, 239, 267, 277, 381, 432, 458, 465, 487, 543, 800, 802, 807, 854, 899, 903, 907, 919, 962, 986, 990, 1000, 1158], "mkdir": [61, 100, 114, 137, 152, 157, 161, 179, 180, 256, 258, 267, 335, 340, 517, 519, 520, 580, 753, 755, 802, 829, 830, 831, 832, 866, 867, 868, 869, 870, 873, 874, 876, 882, 898, 915, 919, 969, 988, 990, 991, 997], "dist": [61, 135, 723, 1055], "406332": 61, "apr": [61, 63, 210, 220, 249, 328, 977, 978, 991], "transfer": [61, 151, 213, 216, 293, 309, 321, 438, 520, 570, 671, 773, 802, 815, 816, 828, 829, 830, 889, 909, 915, 918, 1116, 1153, 1155], "scp": [61, 97, 101, 114, 137, 162, 191, 257, 266, 267, 287, 288, 519, 520, 755, 775, 829, 830, 898, 909, 910, 911, 912, 914, 919, 936, 986, 987, 988], "192": [61, 184, 191, 223, 226, 231, 233, 236, 239, 243, 246, 249, 261, 264, 271, 281, 285, 291, 303, 307, 313, 341, 775, 837, 919, 1170], "168": [61, 184, 191, 194, 201, 210, 223, 226, 231, 233, 236, 239, 243, 246, 249, 252, 261, 264, 281, 285, 291, 303, 307, 313, 341, 775, 837, 919, 988, 1170], "82": [61, 161, 170, 184, 194, 199, 201, 207, 210, 216, 223, 226, 231, 233, 239, 243, 246, 249, 252, 261, 264, 271, 281, 285, 291, 303, 307, 313, 330, 1057, 1104, 1105], "prerequisit": [61, 104, 229, 775, 906, 1027], "apt": [61, 122, 162, 166, 180, 229, 276, 278, 532, 782, 901, 906, 908, 919, 978, 990, 1135, 1140], "python3": [61, 63, 86, 135, 147, 162, 171, 184, 190, 210, 220, 226, 236, 239, 243, 954, 964, 990, 1000, 1027, 1121, 1122, 1128, 1135], "along": [61, 152, 158, 211, 224, 353, 402, 472, 753, 847, 955, 976, 1007], "omit": [61, 63, 157, 166, 171, 220, 226, 236, 239, 240, 243, 313, 339, 383, 420, 432, 444, 464, 638, 660, 707, 780, 796, 845, 906, 907, 908, 915, 931, 932, 936, 947, 997, 1000, 1052, 1133], "bind": [61, 131, 152, 254, 276, 278, 306, 316, 380, 387, 618, 660, 673, 700, 724, 725, 727, 733, 754, 755, 902, 976, 1008, 1012, 1031, 1042, 1119, 1153, 1168, 1170], "cxx": [61, 148, 445, 460, 461, 462, 463, 464, 465, 467, 469, 472, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 516, 518, 521, 522, 523, 524, 526, 528, 529, 530, 531, 533, 534, 535, 536, 537, 753, 977, 978], "xf": [61, 162, 828, 990], "ld_library_path": [61, 450, 993], "gpiod": [61, 63, 782], "py3": [61, 135, 147, 1055], "aarch64": [61, 162, 988], "multi": [63, 1106, 1113], "chmod": [63, 158, 335, 829, 830, 847, 852, 854, 856, 859, 911, 915], "snippet": [63, 171, 190, 312, 320, 625, 907, 1000], "subdirectori": [63, 131, 157, 166, 178, 180, 203, 294, 310, 445, 449, 450, 503, 517, 755, 777, 828, 829, 830, 842, 852, 854, 871, 886, 890, 907, 908, 988, 1088, 1140], "stuff": [63, 70, 78, 100, 114, 123, 150, 153, 157, 166, 171, 183, 187, 190, 203, 212, 213, 234, 248, 267, 269, 290, 321, 339, 438, 444, 546, 593, 753, 755, 761, 770, 802, 832, 862, 870, 876, 882, 898, 906, 936, 997, 999, 1055, 1095, 1100, 1102, 1133], "stuff_complet": 63, "strace": [63, 97, 151, 153, 353, 760, 765, 818, 925, 931, 944, 960, 969, 1166], "pid": [63, 151, 153, 154, 437, 821, 834, 838, 840, 944, 960, 963, 969, 973, 974], "4677": 63, "11hello": 63, "clock_gettime64": 63, "clock_monoton": [63, 735, 926, 960], "tv_sec": [63, 960], "164646": 63, "tv_nsec": [63, 960], "833862215": 63, "_newselect": 63, "tv_usec": 63, "500000": [63, 901, 907, 1105], "unfinish": [63, 153], "4679": 63, "resum": [63, 690, 691, 694, 695, 696, 798, 960], "timeout": [63, 730, 732, 734, 925, 1128], "mi": [63, 231], "845864201": 63, "4678": [63, 226], "fd": [63, 161, 223, 267, 520, 761, 906, 920, 924, 925, 926, 928, 932, 933, 934, 935, 938, 940, 943, 966, 969, 973, 1057], "fourth": 63, "involv": [63, 78, 151, 154, 158, 161, 213, 267, 279, 280, 301, 341, 418, 426, 432, 438, 503, 570, 572, 661, 773, 802, 899, 977, 986, 988], "occasion": [63, 139, 166, 183, 212, 229, 428, 442, 452, 654, 802, 846, 1024, 1038, 1114], "due": [63, 158, 183, 460, 724, 1128], "weird": [63, 267, 312, 428, 698, 736, 761, 786, 955, 973], "gil": [63, 183, 187, 279, 280, 301, 302, 305, 1100], "jitter": [63, 962, 964], "heavi": [63, 175, 183, 470, 908, 1024, 1158], "usr": [63, 151, 152, 156, 162, 171, 174, 179, 181, 203, 210, 211, 220, 223, 226, 236, 239, 243, 246, 249, 264, 269, 271, 281, 285, 307, 313, 332, 335, 445, 447, 448, 450, 451, 455, 677, 710, 720, 753, 775, 802, 828, 834, 846, 858, 890, 893, 906, 908, 954, 964, 973, 976, 977, 978, 979, 988, 991, 993, 1000, 1003, 1027, 1088, 1103, 1116, 1128, 1135, 1142], "env": [63, 147, 152, 174, 269, 954, 964, 1027, 1054, 1088, 1103, 1116], "hello_left": 63, "hello_right": 63, "rjust": [63, 171, 239, 285], "hello_middl": 63, "center": [63, 174, 216, 231, 233, 239, 243, 264, 271, 285, 303, 307, 313, 329, 436, 516], "t1": [63, 170, 233, 243, 264, 268, 285, 307, 945], "t2": [63, 170, 226, 233, 243, 264, 307, 945], "t3": 63, "async": [63, 151, 183, 187, 220, 226, 236, 237, 239, 302, 306, 688, 952, 975, 1100, 1168], "await": [63, 302], "epoll_wait": 63, "201": [63, 154, 184, 201, 210, 223, 226, 231, 233, 236, 239, 243, 246, 264, 271, 281, 285, 291, 303, 307, 313], "multiplex": [63, 907, 926, 960, 1170], "create_task": 63, "sysf": [63, 114, 115, 116, 118, 124, 125, 148, 198, 267, 322, 323, 519, 755, 758, 759, 804, 898, 899, 906, 908, 939, 940, 943, 1157, 1164], "unmaintain": [63, 257, 266, 267, 310, 354, 978, 1042, 1150], "immun": [63, 577, 735], "hotplug": [63, 906], "reset": [63, 150, 467, 469, 719, 720, 721, 753, 1122, 1169], "pullup": 63, "pulldown": 63, "rpi": [63, 133, 162, 321, 802, 803, 906], "hope": [63, 151, 153, 156, 158, 162], "major": [63, 156, 169, 220, 226, 236, 239, 276, 278, 442, 446, 577, 761, 768, 833, 961, 1025, 1031, 1046], "releas": [63, 154, 180, 294, 310, 403, 449, 720, 731, 732, 734, 755, 761, 775, 899, 906, 949, 954, 990, 993, 1025, 1134, 1165], "ton": [63, 718, 841, 903, 928, 960, 964, 1153], "bartosz": 63, "golaszewski": 63, "gpiochip0": [63, 782, 942], "ioctl": [63, 267, 424, 768, 770, 796, 804, 805, 810, 816, 902, 906], "crw": [63, 766, 833, 884, 906, 907, 908], "254": [63, 172, 223, 226, 231, 233, 236, 243, 246, 264, 271, 281, 285, 291, 307], "request": [63, 93, 98, 115, 130, 152, 153, 156, 213, 215, 240, 246, 302, 443, 462, 484, 498, 667, 668, 671, 672, 760, 804, 928, 943, 1133], "request_lin": 63, "consum": [63, 131, 153, 156, 173, 223, 302, 436, 453, 482, 732, 734, 827, 835, 842, 949, 950, 961, 966, 968, 970, 973, 1000, 1022, 1031, 1057, 1112, 1158], "mytest": 63, "config": [63, 97, 119, 120, 140, 141, 147, 152, 154, 156, 162, 170, 264, 281, 285, 339, 346, 355, 519, 720, 755, 775, 803, 884, 906, 907, 908, 915, 990, 1000, 1128], "lineset": 63, "set_valu": [63, 734], "all_io": 63, "transform": [63, 66, 171, 186, 187, 190, 192, 202, 207, 208, 210, 211, 218, 229, 231, 234, 237, 260, 267, 269, 278, 284, 302, 315, 320, 432, 523, 524, 536, 538, 591, 645, 646, 647, 648, 649, 650, 652, 653, 654, 655, 656, 657, 688, 712, 755, 986, 1006, 1050, 1083, 1100], "ntime": [63, 1010], "task": [63, 77, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 130, 166, 208, 221, 234, 248, 251, 254, 284, 290, 339, 342, 344, 345, 348, 349, 350, 353, 755, 829, 830, 847, 889, 898, 906, 909, 924, 939, 945, 958, 959, 961, 962, 1100, 1133], "interv": [63, 89, 119, 190, 220, 226, 227, 236, 239, 243, 264, 302, 339, 504, 506, 519, 520, 660, 734, 735, 926, 936, 960, 964], "none": [63, 126, 135, 147, 150, 151, 156, 161, 170, 172, 184, 194, 201, 202, 211, 216, 217, 220, 223, 226, 232, 233, 236, 239, 243, 246, 252, 261, 264, 268, 269, 271, 281, 285, 291, 303, 307, 313, 330, 422, 423, 444, 447, 567, 653, 655, 925, 942, 970, 997, 1000, 1022, 1048, 1055, 1125, 1140], "itertool": [63, 248, 250, 302, 1004], "cram": [63, 144, 181, 770, 960, 997, 1113], "goe": [63, 65, 85, 112, 122, 154, 156, 171, 276, 432, 467, 532, 635, 655, 664, 714, 766, 802, 844, 845, 931, 958, 964, 974, 977, 984, 1027, 1030, 1050], "stuff_raw": 63, "mod": [63, 239, 264, 284, 780], "sidewai": [63, 187, 190, 245, 348, 349, 1005, 1006], "numpi": [63, 183, 187, 202, 221, 227, 234, 269, 275, 303, 305, 308, 444, 1024, 1099, 1103, 1106, 1114, 1118, 1128, 1135], "transpos": [63, 862], "col": 63, "tolist": 63, "outsid": [63, 239, 471, 484, 564, 572, 577, 719, 720, 792, 863, 945, 961, 1000], "instanti": [63, 123, 210, 339, 462, 473, 487, 488, 501, 502, 503, 506, 588, 617, 635, 656, 682, 688, 710, 723, 724, 1012, 1013, 1103], "coro": [63, 688, 690, 691, 693, 694, 695, 696], "cannot": [63, 110, 111, 147, 151, 152, 153, 158, 162, 173, 174, 180, 181, 183, 190, 210, 243, 270, 273, 307, 321, 398, 399, 402, 403, 422, 424, 426, 429, 432, 450, 453, 465, 488, 516, 555, 564, 567, 569, 572, 573, 596, 631, 632, 634, 635, 637, 638, 642, 661, 664, 667, 673, 699, 709, 710, 714, 720, 722, 732, 734, 798, 802, 807, 822, 839, 844, 847, 858, 873, 881, 917, 961, 970, 992, 993, 994, 998, 1000, 1012, 1017, 1024, 1032, 1033, 1039, 1040, 1050, 1119, 1121, 1122, 1133, 1158], "stuff_raw2": 63, "05": [63, 97, 114, 154, 161, 166, 210, 245, 268, 275, 286, 295, 298, 334, 352, 451, 1104], "runtimeerror": [63, 174, 210, 264, 320, 997, 999], "reus": [63, 112, 166, 172, 992, 1042], "alreadi": [63, 80, 114, 123, 151, 152, 154, 162, 173, 175, 183, 187, 243, 270, 273, 415, 426, 432, 464, 484, 486, 497, 500, 519, 536, 616, 755, 761, 775, 782, 790, 800, 802, 805, 822, 898, 906, 907, 908, 915, 928, 929, 931, 936, 937, 939, 956, 991, 997, 1024, 1050, 1128, 1133, 1135, 1142], "bare": [63, 78, 80, 87, 89, 108, 133, 151, 353, 899, 907], "create_coro": 63, "ctor": [63, 178, 187, 236, 285, 516, 538, 546, 563, 566, 567, 570, 580, 582, 617, 640, 664, 665, 667, 671, 672, 697, 705, 720, 736, 821], "nest": [63, 147, 211, 224, 233, 243, 250, 254, 271, 281, 366, 395, 396, 422, 682, 734, 749, 807, 997, 1040], "_blink": 63, "coro_cr": 63, "creator": [63, 145, 162], "create_factory_for_blink": 63, "blinkfunc": 63, "blink_func": 63, "stuff_decorator_stage1": 63, "stage1": 63, "stararg": [63, 998, 1001, 1022], "func": [63, 210, 220, 226, 236, 239, 270, 284, 522, 591, 660, 675, 682, 723, 998, 1002], "becom": [63, 68, 78, 89, 92, 122, 126, 130, 151, 153, 179, 191, 270, 273, 293, 295, 298, 309, 381, 411, 413, 420, 423, 444, 460, 464, 503, 664, 719, 720, 721, 802, 839, 858, 891, 907, 908, 915, 958, 961, 962, 997, 1003, 1033, 1134, 1140, 1155, 1156], "obsolet": [63, 183, 1024], "prog": [63, 224, 320], "demo": [63, 97, 98, 112, 114, 122, 131, 151, 174, 178, 183, 186, 188, 191, 192, 195, 203, 210, 218, 221, 224, 227, 229, 234, 240, 257, 260, 263, 266, 267, 287, 288, 335, 353, 445, 446, 450, 451, 455, 458, 506, 514, 644, 721, 755, 832, 835, 836, 857, 858, 898, 927, 969, 978, 1024, 1106, 1139, 1159, 1163], "opposit": [63, 155, 396, 908, 961, 1113], "futur": [63, 114, 129, 158, 223, 243, 255, 256, 258, 267, 315, 326, 348, 349, 420, 484, 654, 688, 730, 732, 733, 754, 755, 812, 1153], "steig": [64, 159], "normalweg": 64, "w\u00e4r": 64, "umst\u00e4nden": [64, 1148, 1152, 1167], "renat": 64, "beschreibung": [64, 195, 197, 205, 208, 211, 212, 214, 230, 242, 890], "bergfex": 64, "reden": 64, "sie": [64, 159, 165, 170, 174, 231, 236, 303, 330, 336, 353, 824, 889, 1147, 1149, 1150, 1151, 1157, 1167, 1169, 1170, 1171], "tagen": [64, 1157], "wir": [64, 169, 174, 178, 184, 186, 194, 195, 200, 214, 233, 239, 246, 299, 353, 621, 1148, 1163, 1164], "w\u00fcrden": 64, "denk": [64, 159, 215, 1167], "beiden": [64, 170, 184, 231, 239, 246], "h\u00fctten": [64, 160], "schlafen": 64, "hochk\u00f6nig": 65, "cite": [65, 158, 172, 183, 305], "complain": [65, 153, 162, 166, 180, 382, 555, 570, 571, 777, 805, 915], "subrepo": 65, "whole": [65, 230, 242, 243, 245, 248, 251, 260, 263, 302, 320, 444, 673, 682, 724, 777, 780, 802, 847, 929, 998, 1069, 1156], "subtitl": 65, "fight": [65, 841], "against": [65, 153, 162, 203, 211, 223, 224, 402, 444, 448, 452, 503, 519, 735, 775, 777, 782, 786, 794, 837, 934, 979, 984, 994, 1008, 1066, 1133, 1158], "fake": [65, 906], "simplest": [65, 189, 251, 445, 462, 595, 602, 709, 730, 807, 837, 891, 955, 988, 1026, 1031, 1133, 1141], "unprofession": [65, 155], "populist": 65, "gtest_discover_test": 65, "robust": 65, "sentenc": 65, "implicitli": [65, 207, 212, 223, 409, 459, 567, 575, 665, 673, 765, 932, 997, 1029, 1113], "gtest_add_test": 65, "scan": [65, 220, 243, 246, 313, 906, 908], "primit": [65, 151, 195, 196, 276, 1006, 1153, 1163], "sort": [65, 85, 106, 108, 138, 151, 178, 184, 192, 196, 211, 213, 223, 224, 229, 231, 233, 234, 239, 247, 261, 264, 271, 276, 285, 291, 313, 432, 433, 436, 437, 447, 538, 596, 614, 624, 628, 657, 698, 702, 710, 723, 732, 734, 755, 842, 846, 884, 895, 908, 999, 1047, 1048, 1102, 1128], "port": [65, 122, 147, 148, 153, 158, 163, 223, 257, 266, 287, 288, 302, 321, 353, 755, 835, 841, 889, 898, 909, 914, 918, 936, 1057, 1112, 1116, 1128, 1157, 1164], "trap": [65, 152, 213, 415, 420, 438, 566, 1152, 1154], "hehe": [65, 183, 190], "html_sidebar": 65, "rtd": [65, 148], "linkcheck": 65, "admonit": 65, "matrix": [65, 172, 174, 275, 342, 344, 433], "thoma": [65, 145], "cokela": 65, "ablog": 65, "couldn": [65, 158, 162, 187, 190, 1038], "figur": [65, 114, 137, 143, 148, 156, 157, 172, 227, 996], "piec": [65, 78, 144, 152, 422, 538, 590, 907, 938], "especi": [65, 86, 92, 112, 122, 152, 156, 175, 183, 267, 335, 353, 355, 381, 392, 422, 442, 664, 777, 908], "feed": [65, 84, 148, 1105], "blog_baseurl": 65, "nicer": [65, 962], "pour": [65, 460, 828], "tag": [65, 154, 156, 159, 160, 184, 200, 202, 244, 447, 455, 775, 990, 993, 1165], "resolv": [66, 77, 112, 162, 166, 220, 223, 226, 229, 236, 239, 246, 249, 264, 271, 281, 285, 307, 313, 399, 425, 574, 919, 976, 979, 1104, 1105], "buildenviron": 66, "resolve_refer": 66, "builder": [66, 223, 1057], "get_and_resolve_doctre": 66, "apply_post_transform": 66, "addnod": 66, "docstr": [66, 147, 207, 210, 220, 226, 232, 244, 247, 250, 272, 304, 335, 1028], "emit": [66, 84, 487, 488, 844], "doctre": 66, "increasingli": 68, "whose": [68, 162, 220, 226, 236, 239, 275, 285, 348, 349, 482, 552, 655, 656, 899, 1000, 1133, 1140], "mainten": [68, 377, 403, 422, 993], "easier": [68, 80, 85, 92, 172, 213, 444, 470, 575, 659, 802, 1153], "never": [68, 110, 111, 151, 152, 153, 158, 171, 233, 239, 243, 285, 303, 381, 402, 418, 429, 432, 442, 460, 482, 561, 642, 720, 741, 743, 745, 841, 899, 922, 947, 977], "simpler": [68, 162, 213, 277, 280, 360, 419, 453, 599, 798, 802, 907, 919], "wors": [68, 139, 154, 239, 428, 444, 682, 924, 1136], "makefil": [68, 97, 213, 256, 258, 445, 456, 771, 775, 803, 804, 981, 984, 986, 993, 994], "everytbodi": 69, "runtim": [69, 151, 162, 184, 188, 212, 236, 239, 357, 378, 426, 436, 437, 450, 455, 486, 487, 500, 514, 549, 558, 598, 616, 617, 660, 702, 709, 723, 724, 945, 976, 1012, 1030, 1042, 1106, 1107], "dispatch": [69, 302, 549, 558, 634, 637, 638, 739, 740, 741, 743, 754, 755], "hell": [69, 203, 237, 428, 461, 674, 705, 727, 792, 827, 952, 1113], "destructor": [69, 70, 97, 106, 122, 131, 213, 229, 250, 276, 278, 316, 337, 338, 466, 480, 508, 518, 532, 538, 547, 553, 560, 561, 562, 563, 568, 570, 585, 633, 634, 645, 646, 647, 648, 649, 650, 652, 653, 654, 655, 656, 657, 669, 673, 700, 716, 725, 731, 733, 736, 740, 752, 754, 755, 763, 794, 807, 819, 1145], "opportun": [69, 158, 161, 171, 183, 202, 432, 651, 1013, 1156], "shoot": [69, 864], "oneself": [69, 1158], "encapsul": [70, 73, 211, 224, 229, 276, 278, 302, 321, 442, 462, 466, 480, 506, 508, 509, 510, 511, 512, 513, 514, 515, 518, 525, 527, 538, 560, 561, 583, 586, 589, 605, 611, 615, 624, 627, 628, 633, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 660, 669, 700, 716, 725, 733, 740, 752, 754, 755, 771, 804, 970, 1025, 1154], "hide": [70, 212, 224, 280, 1025], "fanci": [70, 1045, 1106, 1126], "whatnot": [70, 227, 732, 802, 899, 907, 925, 955], "boost": [71, 229, 455, 458, 538, 688, 963, 1171], "feel": [71, 151, 153, 162, 183, 555, 652, 654, 655, 660, 944, 962, 1024], "cluster_ecpropos": [72, 73, 74, 87, 755], "cluster_ecproposal_ec1": [72, 73, 74, 87, 755], "cluster_ecproposal_ec1_cxx": [72, 73, 74, 87, 755], "cluster_ecproposal_ec1_mt": [72, 73, 74, 87, 755], "cluster_ecproposal_ec1_linux": [72, 73, 74, 755], "cluster_ecproposal_ec2": [72, 74, 755], "cluster_ecproposal_ec2_python": [72, 74, 755], "ecproposal_ec1_git": [72, 73, 74, 755], "ecproposal_ec1_cxx_build": [72, 73, 74, 87, 755], "ecproposal_ec1_cxx_ifac": [72, 73, 74, 755], "ecproposal_ec1_cxx_oo_bas": [72, 73, 74, 755], "ecproposal_ec1_cxx_unittest": [72, 73, 74, 755], "ecproposal_ec1_mt_exercise_mt_rac": [72, 73, 74, 87, 755], "ex": [72, 73, 74, 78, 87, 139, 211, 224, 532, 549, 710, 755, 847, 862, 1135], "ecproposal_ec1_mt_wait": [72, 73, 74, 87, 755], "ecproposal_ec1_mt_lock": [72, 73, 74, 87, 755], "avoid": [72, 73, 74, 78, 87, 151, 158, 166, 243, 368, 403, 481, 516, 518, 528, 562, 566, 617, 755, 800, 891, 907, 1154], "semaphor": [72, 73, 74, 76, 78, 87, 89, 146, 175, 176, 198, 220, 226, 236, 239, 353, 732, 755, 794, 949, 1158, 1168], "ecproposal_ec1_mt_exercise_mt_race_fix": [72, 73, 74, 87, 755], "ecproposal_ec1_linux_exercise_avg_sensor": [72, 73, 74, 755], "averag": [72, 73, 74, 78, 84, 85, 187, 223, 227, 243, 278, 302, 465, 481, 511, 518, 755, 964, 1057], "ecproposal_ec1_linux_exercise_sensor": [72, 73, 74, 755], "temperatur": [72, 73, 74, 78, 82, 91, 94, 97, 114, 115, 116, 117, 122, 123, 124, 131, 187, 220, 267, 302, 315, 316, 341, 344, 359, 361, 363, 461, 467, 472, 493, 507, 508, 509, 510, 511, 512, 513, 514, 518, 519, 520, 531, 549, 560, 638, 670, 739, 741, 743, 745, 755, 802, 898, 905, 937, 939, 956, 1012, 1088, 1103, 1104, 1105, 1106], "ecproposal_ec1_linux_dev_mgmt": [72, 73, 74, 755], "ecproposal_ec1_linux_exercise_avg_sensor_parallel": [72, 73, 74, 755], "ecproposal_ec1_linux_exercise_led_displai": [72, 73, 74, 755], "displai": [72, 73, 74, 78, 115, 124, 131, 156, 220, 226, 236, 239, 264, 267, 269, 271, 276, 281, 285, 307, 313, 344, 436, 509, 755, 837, 884, 893, 906, 960, 1135], "ecproposal_ec1_linux_gpio": [72, 73, 74, 755], "ecproposal_ec1_linux_bas": [72, 73, 74, 755], "ecproposal_ec2_python_flask": [72, 74, 755], "ecproposal_ec2_python_exercise_avg_displai": [72, 74, 755], "ecproposal_ec2_python_exercise_sensor": [72, 74, 755], "ecproposal_ec2_python_bas": [72, 74, 755], "ecproposal_ec2_python_web_sensor": [72, 74, 755], "qualiti": [73, 158, 212, 275, 907, 1127], "assur": 73, "characterist": 73, "polymorph": [74, 106, 114, 115, 129, 210, 211, 224, 276, 278, 280, 295, 298, 444, 466, 480, 508, 560, 633, 634, 637, 638, 657, 718, 723, 739, 740, 741, 754, 755, 1153, 1156], "concurr": [74, 183, 187, 237, 306, 710, 792, 1008, 1100], "increment": [75, 169, 212, 226, 229, 252, 275, 360, 364, 368, 388, 397, 404, 408, 410, 414, 417, 421, 430, 434, 439, 440, 538, 555, 662, 700, 752, 754, 755, 834, 946, 947, 948, 969, 970, 1008], "lossi": 75, "access": [76, 78, 88, 110, 111, 119, 148, 152, 153, 154, 156, 158, 171, 181, 191, 198, 210, 220, 223, 226, 229, 236, 239, 246, 249, 264, 267, 271, 281, 285, 295, 307, 312, 313, 321, 335, 338, 340, 372, 411, 432, 433, 471, 487, 512, 513, 514, 515, 538, 561, 573, 575, 578, 579, 581, 582, 596, 621, 635, 642, 645, 648, 649, 652, 653, 654, 655, 656, 657, 671, 688, 703, 707, 719, 755, 760, 770, 773, 779, 790, 798, 802, 804, 820, 835, 838, 847, 849, 850, 873, 898, 908, 917, 918, 924, 928, 932, 934, 938, 942, 946, 960, 961, 969, 974, 995, 1000, 1007, 1008, 1011, 1030, 1037, 1039, 1052, 1068, 1104, 1121, 1135, 1158], "flavor": [76, 87, 151, 445, 709, 714], "stash": 77, "suffic": [77, 158, 370, 420], "purpos": [77, 78, 80, 119, 129, 144, 152, 156, 162, 183, 202, 220, 226, 236, 239, 251, 264, 338, 366, 444, 456, 563, 595, 635, 724, 802, 835, 844, 907, 929, 934, 955, 976, 994, 1024, 1105, 1134, 1157, 1164], "unifi": [78, 126, 190, 588], "intention": [78, 212, 285, 675], "power": [78, 89, 150, 152, 167, 172, 212, 229, 336, 337, 338, 356, 368, 369, 411, 420, 802, 812, 819, 833, 899, 903, 906, 907, 908, 927, 942, 960, 964, 1001, 1019, 1023, 1025, 1031, 1036, 1048, 1123], "being": [78, 81, 115, 139, 151, 154, 155, 161, 175, 183, 189, 210, 239, 243, 302, 316, 335, 381, 408, 425, 461, 464, 549, 573, 616, 718, 720, 724, 726, 732, 753, 784, 798, 802, 837, 919, 934, 960, 1007, 1014, 1024, 1027, 1104, 1142, 1145, 1158], "address": [78, 99, 106, 110, 111, 114, 115, 151, 153, 154, 155, 158, 191, 198, 203, 210, 212, 213, 229, 231, 257, 266, 267, 278, 287, 288, 332, 337, 338, 346, 399, 401, 410, 414, 417, 420, 421, 429, 430, 434, 439, 440, 460, 466, 471, 474, 480, 482, 484, 489, 508, 509, 510, 511, 512, 513, 514, 515, 518, 519, 560, 570, 575, 662, 672, 673, 700, 714, 733, 752, 754, 755, 782, 786, 798, 800, 829, 830, 831, 832, 835, 836, 838, 842, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 876, 877, 878, 879, 880, 882, 898, 900, 902, 907, 908, 910, 911, 912, 913, 914, 919, 921, 925, 927, 929, 936, 937, 939, 944, 952, 953, 955, 956, 959, 961, 969, 976, 978, 980, 981, 982, 983, 984, 985, 986, 987, 993, 1008, 1011, 1104, 1105, 1124, 1133], "crucial": [78, 151, 175, 435, 597], "mmu": [78, 151, 773, 816, 839, 960], "sophist": [78, 220, 461, 482, 519, 656], "permiss": [78, 97, 100, 101, 102, 114, 186, 187, 191, 193, 203, 210, 226, 246, 257, 266, 281, 284, 287, 302, 321, 330, 335, 336, 337, 338, 340, 508, 560, 646, 733, 753, 754, 755, 761, 802, 829, 830, 832, 835, 836, 839, 845, 848, 852, 853, 854, 855, 856, 858, 859, 860, 864, 876, 879, 881, 882, 884, 898, 899, 909, 912, 914, 915, 918, 919, 924, 927, 928, 929, 932, 934, 935, 937, 939, 953, 956, 959, 961, 962, 974, 999, 1100, 1128, 1135, 1159, 1168], "nativ": [78, 97, 104, 114, 150, 156, 158, 184, 220, 256, 258, 276, 342, 755, 802, 898, 977, 981, 983, 986, 1109, 1112, 1118], "varieti": [78, 438, 838, 976, 1156], "storag": [78, 156, 161, 445, 673, 802, 838, 899, 907, 924, 944, 1169], "underli": [78, 211, 218, 234, 243, 284, 335, 340, 710, 908, 1100, 1105, 1109], "platform": [78, 158, 211, 220, 224, 226, 236, 239, 243, 251, 269, 328, 337, 355, 782, 802, 907, 908, 942, 960, 1088, 1133, 1135], "offer": [78, 151, 161, 202, 277, 396, 573, 577], "popular": [78, 162, 175, 179, 391, 668, 827, 908, 960, 976, 992, 1018, 1102, 1108, 1116, 1129, 1156], "often": [78, 89, 150, 151, 152, 153, 183, 233, 243, 270, 273, 293, 309, 377, 387, 408, 447, 462, 474, 588, 710, 802, 862, 938, 1004, 1024, 1038, 1155, 1156], "appropri": [78, 116, 126, 138, 144, 151, 161, 166, 171, 203, 243, 377, 391, 403, 518, 724, 798, 906, 918, 969, 1106, 1112, 1156], "prototyp": [78, 321, 368, 460, 522, 555, 671, 802, 899, 907, 920, 997, 1112], "higher": [78, 151, 162, 220, 226, 236, 239, 753, 800, 899, 961, 963, 970, 978, 986, 1112, 1155], "fulli": [78, 155, 158, 162, 187, 424, 519, 970], "distribut": [78, 156, 161, 166, 178, 183, 203, 213, 231, 243, 332, 460, 506, 514, 727, 773, 802, 840, 841, 962, 1024], "en": [78, 156, 168, 178, 239, 267, 640], "vogu": 78, "serial": [78, 150, 151, 161, 191, 226, 227, 239, 835, 837, 1157, 1164], "groundwork": 78, "lai": 78, "instruct": [78, 150, 154, 158, 181, 212, 267, 276, 278, 432, 503, 719, 734, 948, 960, 991, 1088], "consolid": [78, 183], "makeri": 78, "everybodi": [78, 156, 277, 424, 470, 564, 603, 646, 833, 1027, 1031, 1133, 1153], "clarifi": 78, "earli": [78, 150, 183, 187, 192, 277, 807, 819, 834, 962, 995, 1012, 1050, 1155], "matter": [78, 150, 155, 156, 158, 166, 183, 189, 191, 362, 406, 438, 445, 452, 462, 562, 563, 575, 578, 664, 703, 710, 720, 722, 777, 802, 804, 847, 858, 900, 906, 908, 919, 999, 1024, 1125, 1135, 1145, 1156], "rewrit": [78, 80, 151, 444], "translat": [78, 91, 92, 171, 184, 202, 239, 243, 246, 249, 285, 709, 1067], "flask": [78, 93, 148, 187, 190, 998], "network": [78, 110, 111, 137, 146, 147, 148, 151, 158, 168, 169, 191, 193, 198, 223, 239, 246, 249, 260, 264, 266, 267, 271, 281, 285, 287, 302, 307, 313, 337, 353, 354, 438, 471, 755, 756, 779, 819, 835, 837, 838, 840, 898, 901, 902, 907, 908, 909, 919, 923, 924, 927, 928, 939, 958, 1164, 1168], "oppos": [80, 114, 150, 190, 224, 231, 241, 276, 403, 447, 452, 549, 886, 900, 907, 915, 949, 962, 969, 974, 993, 1019, 1030, 1031, 1113, 1121], "ahead": [80, 166, 442, 1014], "optimz": 80, "donald": [80, 431], "knuth": [80, 431], "prematur": [80, 431, 435], "optim": [80, 152, 264, 276, 307, 418, 434, 435, 439, 440, 447, 755, 786, 1112, 1152, 1154], "evil": [80, 229, 372, 422, 431, 435, 447, 575], "knowledg": [81, 85, 270, 273, 276, 519, 653, 655, 802, 900, 908, 1001, 1023, 1127], "onewir": [81, 85, 97, 106, 114, 115, 116, 124, 131, 267, 278, 315, 335, 338, 507, 508, 560, 755, 898, 905, 906, 937, 939, 956], "protocol": [81, 143, 156, 189, 190, 200, 222, 225, 227, 228, 232, 235, 238, 241, 250, 263, 265, 270, 273, 279, 280, 282, 283, 286, 289, 301, 302, 304, 305, 306, 308, 312, 314, 341, 344, 376, 384, 471, 484, 760, 889, 900, 902, 906, 908, 909, 917, 918, 938, 997, 1001, 1005, 1012], "aspect": [81, 119, 183, 187, 213, 237, 276, 278, 306, 467, 833, 906, 908, 1100, 1127, 1133, 1158], "regard": [81, 158, 183, 321, 862, 1024, 1031, 1129, 1133], "filesystem": [81, 85, 106, 114, 150, 153, 162, 191, 193, 203, 254, 335, 340, 519, 754, 755, 802, 828, 907, 919, 935, 942, 960, 979, 1133, 1159, 1164, 1166, 1170], "hwmon": [81, 85, 115, 341, 344], "composit": [82, 106, 118, 121, 131, 187, 213, 259, 277, 278, 295, 459, 466, 480, 494, 508, 560, 755, 1004, 1156], "mock": [82, 114, 115, 129, 130, 131, 277, 279, 280, 301, 305, 316, 322, 324, 508, 509, 510, 511, 513, 549, 560, 755, 1140], "pin": [84, 130, 267, 321, 899, 903, 906, 907], "light": [84, 161, 841, 1023, 1133], "linearli": [84, 243, 602, 838], "cold": [84, 202], "hot": [84, 153, 433, 436, 784], "queri": [84, 1032], "said": [84, 110, 111, 153, 166, 183, 270, 273, 280, 482, 595, 642, 726, 732, 763, 899, 907, 908, 919, 946, 961, 1004, 1024, 1044, 1113, 1126], "ds18s20": [85, 341, 1133], "datasheet": [85, 136, 798, 899, 908], "lm73": [85, 267, 341, 344, 755, 898, 905, 908], "ti": [85, 150, 442, 520, 564, 721], "hoc": [85, 213, 402], "report": [85, 115, 118, 124, 131, 150, 153, 154, 166, 168, 170, 346, 428, 438, 561, 920, 955, 1140, 1142], "experi": [85, 139, 158, 183, 442, 447, 546, 907, 908, 1134], "subsystem": [86, 97, 98, 103, 104, 114, 169, 191, 198, 203, 240, 256, 258, 260, 266, 267, 276, 278, 279, 295, 301, 755, 780, 798, 812, 832, 836, 838, 898, 899, 906, 907, 908, 942, 958, 999, 1133, 1157, 1158, 1164], "deprec": [86, 130, 280, 629, 928, 942, 1153], "foremost": 87, "osen": [87, 89, 161, 726, 753, 960], "recurs": [87, 88, 187, 211, 220, 226, 236, 239, 730, 794, 807, 846, 847, 862, 874, 884, 891, 911, 918, 955, 1036, 1040, 1153], "mother": [88, 108, 167, 229, 538, 1017, 1153], "protect": [88, 151, 153, 203, 211, 223, 276, 278, 383, 402, 500, 501, 561, 564, 575, 631, 633, 634, 657, 732, 755, 786, 794, 800, 839, 881, 907, 948, 949, 960, 1008, 1011, 1020, 1145, 1158], "critic": [88, 151, 161, 438, 731, 792, 794, 1128], "kind": [88, 151, 153, 161, 166, 171, 183, 187, 220, 226, 227, 236, 237, 239, 251, 267, 279, 280, 301, 305, 467, 519, 567, 614, 664, 673, 718, 732, 833, 899, 906, 907, 1008, 1100, 1126, 1127, 1158], "poll": [89, 157, 168, 794, 796, 819, 942, 947, 949, 966, 970, 1157, 1164, 1168, 1170], "second": [89, 150, 153, 154, 158, 170, 183, 189, 210, 216, 220, 224, 226, 236, 239, 243, 269, 271, 321, 356, 366, 420, 436, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 496, 500, 501, 502, 506, 509, 519, 555, 570, 618, 620, 621, 660, 689, 690, 709, 720, 721, 734, 735, 749, 750, 751, 812, 839, 844, 847, 907, 926, 929, 936, 960, 969, 973, 977, 978, 992, 993, 994, 1044, 1052, 1128, 1140, 1153], "readi": [89, 150, 899, 1133], "rare": [89, 156, 173, 187, 445, 455, 517, 519, 570, 668, 719, 884, 906, 923, 1035, 1039, 1052, 1134], "btw": [89, 155, 161, 183, 189, 203, 210, 230, 233, 335, 419, 771, 837, 1089, 1091], "increas": [89, 153, 432, 899, 962, 964, 992, 1156], "tight": [89, 175, 376, 734, 805, 1125], "bui": [89, 151, 461], "bigger": [89, 151, 183, 432, 1106], "avail": [89, 122, 126, 131, 150, 151, 153, 154, 156, 162, 166, 175, 179, 183, 203, 212, 220, 226, 236, 239, 293, 301, 302, 305, 309, 354, 446, 448, 453, 457, 462, 487, 488, 688, 724, 730, 734, 775, 802, 807, 834, 858, 899, 903, 906, 907, 958, 961, 962, 979, 990, 995, 1000, 1007, 1031, 1049, 1050, 1099, 1108, 1125, 1128, 1135, 1136, 1155, 1158], "intro": [93, 114, 130, 131, 148, 178, 202, 212, 221, 234, 235, 248, 251, 270, 273, 278, 284, 290, 302, 560, 660, 668, 688, 712, 755, 898, 922, 939, 941, 943, 1100, 1154, 1156, 1168], "rout": [93, 187, 998], "jinja2": 93, "ss2022": [96, 755, 831, 832, 898], "ws2022": 96, "lab": [96, 106, 114, 335], "vo": [97, 106, 114, 341], "ku": [97, 105, 106, 114], "g1": [97, 755, 831, 832, 898], "g2": [97, 335, 755, 831, 832, 898], "08": [97, 99, 105, 114, 154, 161, 162, 163, 217, 220, 245, 249, 275, 313, 352, 456, 899, 906, 908, 930, 991, 1104], "cont": [97, 114, 221, 284], "command": [97, 99, 112, 114, 147, 150, 155, 161, 191, 203, 208, 218, 220, 226, 227, 234, 236, 239, 248, 251, 257, 259, 266, 267, 284, 287, 288, 321, 335, 340, 353, 403, 424, 435, 447, 457, 458, 459, 466, 480, 484, 494, 508, 517, 560, 570, 719, 733, 754, 755, 802, 828, 829, 830, 831, 832, 835, 836, 837, 839, 840, 841, 842, 844, 846, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 864, 865, 866, 867, 869, 870, 871, 873, 874, 876, 877, 878, 880, 882, 890, 895, 898, 907, 908, 909, 910, 911, 918, 922, 927, 929, 937, 939, 953, 955, 956, 959, 960, 961, 962, 976, 977, 984, 988, 992, 1052, 1100, 1128, 1135, 1142, 1156], "wsl": [97, 98, 103, 104, 114, 240, 260, 266, 279, 295, 301, 755, 832, 836, 898, 979, 986, 987, 991], "homework": [97, 102, 105, 114, 153], "sshf": [97, 101, 114, 257, 266, 267, 287, 288, 342, 755, 898, 909, 914, 979, 988], "toolchain": [97, 103, 104, 106, 108, 114, 122, 146, 163, 178, 180, 267, 353, 444, 445, 451, 466, 480, 508, 509, 510, 511, 512, 513, 514, 515, 518, 519, 520, 560, 733, 754, 755, 803, 832, 835, 836, 898, 921, 927, 929, 936, 937, 939, 953, 956, 959, 961, 978, 979, 980, 981, 984, 992, 993, 994, 1025, 1148, 1150, 1151, 1152, 1160, 1166, 1168], "bashrc": [97, 104, 114, 150, 162, 223, 257, 266, 267, 281, 287, 288, 755, 832, 834, 882, 884, 898, 918, 988, 990], "studi": [97, 104, 212, 255, 256, 258, 259, 267, 315, 459, 466, 660, 700, 754, 755, 898, 981, 983, 986], "ds18b20": [97, 114, 116, 131, 267, 315, 335, 755, 898, 905, 936], "slave": [97, 114, 116, 131, 267, 315, 755, 898, 903, 905, 936], "redirect": [97, 100, 114, 152, 155, 191, 193, 203, 220, 226, 236, 239, 257, 266, 267, 287, 320, 335, 340, 755, 829, 830, 831, 832, 846, 866, 867, 869, 870, 873, 874, 876, 882, 895, 898, 928, 1050, 1149, 1159, 1166], "pipe": [97, 151, 156, 158, 171, 191, 193, 203, 257, 266, 267, 269, 287, 320, 335, 340, 753, 755, 832, 839, 844, 884, 889, 898, 928, 972, 973, 974, 988, 1050, 1149, 1159, 1166], "06": [97, 106, 114, 161, 192, 236, 255, 268, 275, 292, 295, 298, 334, 352, 444, 455, 538, 753, 1027, 1104], "past": [97, 151, 155, 156, 213, 229, 408, 593, 595, 599, 602, 606, 671, 775, 777, 841, 1095, 1099, 1150], "2p": [97, 104], "3p": [97, 104], "5p": [97, 104], "pointer": [97, 108, 114, 123, 131, 154, 178, 254, 315, 327, 336, 337, 338, 353, 366, 368, 370, 411, 412, 414, 415, 417, 419, 420, 421, 430, 434, 439, 440, 474, 519, 532, 549, 554, 556, 561, 562, 564, 572, 579, 581, 590, 594, 598, 602, 603, 606, 612, 616, 629, 662, 669, 670, 671, 698, 700, 705, 707, 709, 714, 719, 721, 724, 725, 733, 736, 739, 743, 745, 750, 751, 752, 754, 755, 761, 768, 773, 784, 790, 819, 822, 920, 946, 974, 1050, 1150, 1151, 1152, 1153, 1154, 1156], "exit": [97, 114, 147, 151, 153, 181, 202, 220, 226, 229, 236, 239, 261, 267, 302, 328, 353, 357, 409, 451, 458, 467, 570, 637, 717, 719, 755, 765, 770, 804, 898, 908, 924, 925, 926, 928, 929, 934, 936, 939, 940, 956, 966, 973, 974, 993, 999, 1007, 1008, 1026, 1029, 1042, 1052, 1062, 1079, 1128, 1135], "statu": [97, 114, 115, 124, 131, 147, 152, 154, 166, 220, 226, 229, 236, 239, 251, 261, 267, 353, 357, 409, 447, 451, 458, 637, 753, 755, 804, 818, 898, 929, 934, 936, 939, 956, 960, 973, 993, 1029, 1055, 1114], "yai": [97, 147, 223, 231, 233, 246, 252, 271, 281, 313, 603, 654, 660, 955], "ol": [97, 114, 229, 276, 278, 285, 344, 466, 480, 508, 509, 510, 511, 512, 513, 514, 515, 518, 525, 527, 560, 564, 568, 583, 586, 589, 605, 611, 615, 624, 627, 628, 633, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 669, 700, 712, 716, 722, 725, 733, 740, 743, 752, 754, 755, 895, 970, 1045, 1050, 1072], "randomsensor": [97, 131, 467, 472, 481, 493, 507, 508, 514, 518, 528, 529, 530, 531, 533, 534, 560, 718, 719, 720, 721, 755, 1012], "rectangl": [97, 144, 470, 538, 567, 583, 657, 755], "mystr": [97, 177, 229], "point3d": [97, 583, 657, 755], "cuboid": [97, 583, 657, 755], "hierarchi": [99, 106, 110, 111, 119, 187, 188, 190, 192, 210, 211, 224, 227, 239, 257, 266, 267, 287, 288, 298, 346, 433, 460, 461, 462, 465, 466, 480, 481, 485, 487, 508, 518, 560, 755, 832, 835, 836, 837, 848, 851, 852, 853, 854, 855, 856, 857, 862, 868, 874, 881, 898, 910, 911, 912, 913, 914, 939, 957, 986, 987], "parent": [99, 109, 110, 111, 153, 166, 168, 257, 266, 267, 287, 288, 753, 755, 782, 832, 834, 835, 836, 837, 838, 847, 848, 851, 852, 853, 854, 855, 856, 857, 865, 866, 867, 868, 869, 871, 873, 874, 875, 886, 898, 910, 911, 912, 913, 914, 939, 945, 986, 987], "login": [99, 114, 131, 156, 158, 191, 203, 257, 334, 335, 755, 829, 830, 832, 833, 834, 836, 838, 839, 840, 848, 851, 852, 853, 854, 855, 856, 857, 863, 898, 899, 907, 910, 911, 912, 913, 914, 915, 917, 919, 936, 986, 987, 1078, 1148, 1157, 1164], "bourn": [99, 114, 167, 191, 193, 257, 266, 267, 287, 335, 336, 337, 340, 353, 354, 466, 480, 508, 509, 510, 511, 512, 513, 514, 515, 518, 560, 733, 753, 754, 755, 825, 829, 830, 831, 832, 835, 836, 843, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 892, 898, 921, 927, 929, 937, 939, 940, 953, 956, 959, 961, 978, 980, 981, 982, 983, 984, 985, 986, 987], "verifi": [100, 102, 114, 126, 130, 139, 161, 167, 179, 191, 203, 267, 346, 555, 573, 755, 832, 837, 866, 869, 870, 873, 876, 882, 898, 911, 912, 914, 1066, 1103, 1106, 1128], "joke": [100, 151], "mostli": [100, 237, 353, 358, 364, 376, 392, 422, 431, 576, 617, 719, 724, 770, 838, 841, 862, 928, 955, 958, 979, 1155], "secur": [101, 114, 154, 156, 158, 203, 223, 229, 257, 266, 287, 334, 755, 829, 830, 835, 837, 840, 858, 862, 898, 899, 909, 910, 911, 912, 913, 917, 928, 936, 986, 987, 993, 995, 1027, 1057], "account": [101, 110, 111, 114, 156, 158, 178, 183, 187, 188, 223, 229, 239, 246, 249, 264, 268, 269, 271, 281, 285, 307, 313, 335, 340, 365, 438, 444, 642, 660, 775, 906, 919, 1024, 1104], "authent": [101, 114, 191, 203, 212, 257, 266, 267, 287, 288, 332, 335, 755, 829, 830, 898, 909, 910, 911, 912, 913, 914, 919, 1066], "ownership": [101, 114, 178, 213, 267, 288, 302, 508, 528, 532, 538, 560, 673, 715, 718, 719, 733, 754, 755, 829, 830, 832, 835, 836, 839, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 898, 927, 928, 929, 937, 939, 953, 956, 959, 961, 1153, 1156], "setuid": [101, 114, 191, 257, 266, 267, 287, 288, 755, 832, 837, 857, 898], "quick": [102, 114, 183, 190, 208, 212, 218, 227, 234, 248, 260, 290, 487, 724, 889, 899, 1100, 1126], "credenti": [102, 114, 158, 251, 755, 830, 831, 832, 837, 851, 852, 853, 854, 855, 856, 857, 898, 915, 944, 997], "share": [102, 103, 106, 110, 111, 114, 133, 146, 151, 153, 158, 162, 166, 175, 176, 178, 179, 181, 184, 203, 213, 220, 223, 226, 236, 239, 243, 246, 249, 254, 255, 256, 258, 264, 267, 271, 281, 285, 294, 307, 310, 313, 315, 332, 353, 354, 398, 425, 426, 432, 438, 445, 449, 456, 457, 461, 473, 518, 538, 546, 660, 721, 723, 724, 732, 734, 752, 754, 755, 780, 784, 800, 807, 831, 832, 835, 841, 851, 854, 855, 857, 893, 898, 907, 931, 944, 946, 952, 958, 964, 976, 979, 986, 988, 1008, 1011, 1142, 1157, 1158, 1166, 1168], "adjust": [102, 141, 145, 755, 802, 898, 907, 912, 914, 970, 977], "ubuntu": [103, 122, 152, 158, 162, 166, 178, 179, 180, 181, 191, 256, 258, 267, 353, 755, 841, 898, 901, 919, 978, 979, 986, 987, 991, 1135, 1140], "zoom": [103, 104, 114, 158, 167, 183, 267, 281, 353, 445, 466, 480, 508, 509, 510, 511, 512, 513, 514, 515, 518, 560, 755, 884, 898, 978, 981, 982, 983, 984, 986, 1147], "recap": [104, 114, 187, 191, 200, 229, 276, 277, 304, 335, 556, 1006], "endeavor": 104, "hoop": [104, 841, 973], "doze": [104, 157, 212, 213, 226, 335, 342, 420, 753, 841, 886, 1044, 1050, 1135], "pictur": [104, 148, 151, 172, 183, 187, 280, 281, 432, 438, 517, 814, 862, 864, 884, 899, 918, 922, 1168], "fit": [104, 162, 167, 172, 174, 376, 381, 461, 585, 660, 682, 761, 802, 899, 1103, 1105, 1114], "theori": [106, 187, 405, 432, 1105], "Of": [106, 114, 131, 153, 156, 186, 187, 237, 255, 256, 258, 260, 267, 276, 278, 316, 352, 466, 480, 508, 518, 560, 593, 633, 634, 644, 657, 740, 752, 754, 755, 831, 846, 893, 898, 936, 939, 941, 1006, 1100, 1113, 1156], "ece20": [106, 109, 503, 519, 580, 829, 830, 837], "uml": [106, 131, 259, 277, 279, 280, 466, 480, 508, 518, 560, 755], "foundat": [106, 234, 264, 466, 480, 508, 560, 755, 802, 1164], "adapt": [106, 131, 154, 187, 259, 277, 459, 466, 468, 469, 480, 484, 494, 498, 508, 560, 724, 755, 907, 908, 1156], "syllabu": [106, 343], "vote": 106, "beurteilungsschema": 106, "grade": [106, 109, 114, 131, 339, 349, 1133], "total": [106, 109, 112, 153, 162, 166, 170, 223, 239, 249, 256, 431, 436, 444, 458, 467, 482, 516, 517, 518, 519, 570, 580, 719, 884, 886, 899, 906, 907, 908, 919, 942, 970, 977, 978, 979, 988, 991, 1055, 1057, 1140], "compos": [106, 118, 119, 133, 167, 229, 302, 370, 462, 641, 802, 990, 993, 1002, 1016, 1062, 1113], "practic": [106, 224, 233, 243, 405, 442, 595, 634, 671, 706, 713, 906, 932, 974, 1108, 1153, 1156], "theoret": [106, 337, 356, 727], "semest": [106, 109, 339, 341], "addition": [106, 150, 153, 381, 465, 482], "deliv": [106, 151, 902, 973, 974], "variou": [106, 153, 229, 255, 256, 718, 732, 734, 802, 834, 1158], "weight": [106, 174, 183, 427, 796, 908, 1024], "decid": [106, 152, 153, 158, 183, 237, 431, 461, 522, 536, 600, 798, 802, 822, 906, 1007, 1024], "excerpt": [106, 187, 190, 337, 338, 1057, 1114], "w1": [106, 114, 115, 128, 267, 316, 503, 519, 520, 936], "soup": [106, 148, 445, 447, 448, 450, 451, 453, 454, 456, 458, 460, 461, 462, 463, 464, 465, 467, 469, 472, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 516, 518, 521, 522, 523, 524, 526, 528, 529, 530, 531, 533, 534, 535, 536, 537, 640, 720, 753, 940, 943, 1000, 1003, 1052, 1133, 1142], "armv8": [106, 162, 267, 520, 977, 990, 991], "rpi4": [106, 162, 267, 520, 977, 990, 991], "gnueabihf": [106, 162, 267, 520, 802, 977, 988, 990, 991], "shape": [106, 144, 172, 174, 213, 275, 276, 307, 508, 538, 560, 580, 660, 755, 802, 928, 1105, 1108, 1118], "algorithm": [106, 152, 161, 172, 220, 226, 234, 236, 239, 247, 249, 255, 256, 276, 285, 432, 508, 525, 549, 556, 560, 587, 598, 600, 601, 603, 604, 607, 608, 624, 627, 628, 657, 702, 710, 712, 723, 727, 755, 1079, 1102, 1106], "find_if": [106, 108, 213, 229, 276, 315, 602, 605, 624, 628, 645, 654, 657, 723, 755], "customiz": [106, 276, 605, 624, 628, 657, 755], "binary_search": [106, 108, 213, 229, 276, 605, 624, 628, 657, 755], "associ": [106, 162, 180, 188, 190, 192, 208, 213, 267, 270, 273, 276, 278, 316, 379, 380, 388, 393, 397, 404, 410, 414, 417, 421, 430, 434, 439, 440, 508, 509, 525, 527, 560, 595, 624, 628, 657, 660, 662, 688, 700, 752, 754, 755, 761, 768, 826, 900, 928, 1000, 1030, 1031, 1032, 1048, 1050, 1107, 1156], "hour": [106, 156, 158, 183, 187, 220, 242, 260, 271, 284, 306, 341, 1062, 1100, 1107], "sent": [106, 151, 152, 191, 296, 438, 484, 842, 950, 970, 974, 1116], "015": 106, "voluntari": 106, "odd": [106, 114, 243, 278, 420, 508, 522, 525, 560, 755, 907, 1002, 1004], "char": [107, 153, 169, 212, 229, 239, 285, 358, 365, 370, 371, 374, 376, 377, 378, 381, 382, 395, 400, 403, 408, 409, 416, 420, 426, 427, 429, 445, 463, 467, 497, 501, 506, 520, 521, 552, 567, 570, 571, 575, 585, 625, 640, 641, 655, 671, 673, 698, 705, 722, 736, 753, 758, 761, 766, 782, 784, 796, 822, 906, 920, 924, 925, 928, 932, 933, 934, 935, 938, 940, 943, 957, 960, 966, 969, 970, 973, 994, 1039, 1045, 1111, 1140, 1145], "cout": [107, 119, 162, 446, 452, 467, 481, 486, 487, 488, 500, 501, 502, 503, 506, 514, 518, 519, 546, 564, 566, 571, 573, 577, 590, 591, 592, 593, 594, 597, 598, 599, 600, 601, 602, 603, 604, 606, 607, 608, 609, 613, 617, 618, 619, 620, 621, 627, 631, 632, 635, 637, 638, 641, 644, 651, 654, 660, 665, 675, 677, 678, 679, 680, 683, 684, 685, 686, 688, 689, 690, 692, 693, 694, 695, 696, 697, 702, 704, 705, 707, 708, 710, 712, 721, 722, 723, 724, 732, 734, 735, 739, 741, 743, 745, 845, 906, 940, 943, 955, 957, 969, 973, 1140], "endl": [107, 162, 446, 467, 481, 486, 487, 488, 500, 501, 502, 503, 506, 514, 518, 519, 546, 564, 566, 571, 573, 577, 578, 585, 590, 591, 592, 593, 594, 597, 598, 599, 600, 601, 602, 603, 604, 606, 607, 608, 609, 613, 617, 618, 619, 620, 621, 627, 631, 632, 635, 637, 638, 641, 644, 651, 654, 660, 675, 677, 678, 679, 680, 683, 684, 685, 686, 688, 689, 690, 692, 693, 694, 695, 696, 697, 702, 704, 705, 707, 708, 710, 712, 721, 722, 723, 724, 732, 734, 735, 739, 741, 743, 745, 906, 940, 943, 955, 957, 969, 973, 1140], "constitut": 107, "_id": 107, "objectcontain": 107, "add_object": 107, "_contain": [107, 710], "push_back": [107, 491, 492, 555, 596, 597, 598, 603, 606, 609, 613, 617, 664, 665, 668, 673, 732, 973, 1145], "fragment": [107, 433, 1004, 1140], "iostream": [107, 220, 226, 236, 239, 467, 481, 486, 487, 488, 496, 500, 501, 502, 503, 506, 514, 518, 546, 564, 566, 571, 573, 577, 578, 590, 591, 592, 593, 594, 597, 598, 599, 600, 601, 603, 604, 607, 608, 609, 613, 617, 618, 619, 620, 621, 627, 631, 632, 635, 637, 638, 644, 650, 651, 652, 653, 654, 655, 660, 665, 675, 678, 679, 680, 683, 684, 685, 686, 688, 689, 690, 692, 693, 694, 695, 696, 697, 702, 704, 705, 707, 710, 712, 721, 722, 723, 724, 732, 734, 739, 741, 743, 745, 753, 906, 940, 943, 947, 955, 957, 969, 973, 974, 1140], "my_vector": 107, "sysroot": [108, 162, 977, 991], "intel": [108, 136, 140, 154, 755, 976], "header": [108, 147, 179, 213, 229, 254, 284, 293, 294, 309, 310, 402, 403, 404, 410, 414, 417, 421, 425, 430, 434, 439, 440, 444, 449, 450, 451, 456, 457, 467, 588, 662, 677, 682, 700, 706, 752, 754, 755, 846, 903, 908, 977, 979, 988, 1057, 1090, 1094, 1095, 1097, 1105, 1108, 1155], "match": [108, 150, 157, 186, 199, 216, 223, 224, 226, 231, 239, 249, 251, 252, 261, 264, 284, 285, 291, 302, 313, 400, 444, 519, 673, 677, 697, 710, 714, 837, 846, 919, 979, 999, 1045, 1100, 1140], "linker": [108, 110, 111, 146, 178, 293, 309, 399, 425, 432, 436, 437, 448, 455, 577, 588, 802, 976, 979, 982, 986, 993, 1150, 1151, 1152, 1155, 1160, 1166], "uniquifi": [109, 278, 508, 525, 560, 755], "lookup": [109, 120, 171, 188, 201, 220, 226, 231, 236, 239, 253, 285, 427, 482, 508, 525, 527, 560, 675, 755, 1012, 1041, 1048, 1078, 1113, 1122, 1170], "leak": [109, 153, 415, 429, 467, 487, 488, 508, 525, 527, 528, 544, 552, 555, 560, 561, 567, 632, 706, 717, 719, 755, 1000], "sure": [109, 150, 151, 152, 153, 154, 156, 157, 158, 161, 162, 191, 203, 210, 227, 229, 269, 332, 426, 461, 462, 465, 484, 487, 488, 517, 543, 640, 714, 750, 802, 907, 908, 929, 933, 988, 1000, 1156], "gz": [109, 147, 802, 803, 826, 827, 828, 1055, 1135], "whatev": [109, 120, 126, 130, 150, 151, 153, 158, 174, 189, 249, 321, 438, 484, 563, 663, 688, 753, 867, 869, 919, 924, 960, 962, 1030, 1097, 1105, 1112, 1113, 1135], "quiz": [110, 111, 114, 643, 657, 755, 832, 836, 851, 857, 876, 882, 898, 983, 986], "servic": [110, 111, 147, 156, 157, 158, 191, 223, 239, 246, 249, 264, 271, 281, 285, 307, 313, 438, 444, 727, 794, 800, 805, 835, 838, 889, 908, 917, 919, 926, 962, 1029], "owner": [110, 111, 152, 191, 335, 340, 720, 761, 802, 835, 849, 850, 858, 884, 919, 947], "dimension": [110, 111, 172, 682, 835, 1105, 1106], "identifi": [110, 111, 152, 161, 220, 226, 236, 239, 285, 381, 403, 424, 426, 436, 651, 760, 800, 835, 906, 908, 1046, 1107], "pthread": [110, 111, 151, 162, 168, 220, 226, 236, 239, 726, 732, 835, 944, 949, 952, 960, 974, 979], "timeslic": [110, 111, 151, 835, 958, 963], "suspend": [110, 111, 151, 152, 688, 690, 730, 798, 833, 835, 846, 949, 974], "favor": [110, 111, 835, 961, 1153], "fair": [110, 111, 151, 800, 835, 961, 963], "ensur": [110, 111, 239, 462, 510, 835], "evenli": [110, 111, 231, 835], "cpu": [110, 111, 121, 150, 151, 154, 158, 161, 184, 194, 198, 278, 346, 350, 418, 419, 431, 433, 438, 596, 727, 734, 755, 773, 786, 800, 807, 812, 822, 833, 835, 838, 842, 898, 906, 907, 908, 922, 939, 947, 949, 959, 960, 961, 962, 963, 1010, 1027, 1158], "infinit": [110, 111, 151, 171, 190, 220, 224, 226, 229, 231, 236, 239, 247, 280, 284, 393, 411, 418, 835, 839, 958, 961, 1004, 1005, 1006, 1035, 1070], "illus": [110, 111, 835, 839, 958, 961, 1158], "action": [110, 111, 161, 190, 246, 445, 451, 563, 642, 861, 862, 923, 928, 960, 973, 975, 1107, 1128], "undefin": [110, 111, 212, 374, 381, 408, 451, 569, 577, 601, 608, 613, 637, 642, 673, 702, 973], "behavior": [110, 111, 119, 151, 153, 156, 188, 210, 212, 239, 381, 601, 608, 613, 642, 673, 690, 835, 929, 933, 974, 977, 997, 1002, 1019], "declar": [110, 111, 211, 212, 224, 229, 357, 373, 388, 397, 402, 404, 410, 411, 414, 417, 418, 421, 424, 425, 426, 430, 432, 434, 439, 440, 445, 565, 575, 635, 642, 651, 652, 662, 673, 682, 698, 700, 720, 752, 754, 755, 908, 928, 932, 934, 935, 961, 1142], "promis": [110, 111, 153, 255, 256, 258, 267, 315, 368, 426, 484, 552, 564, 573, 642, 688, 690, 691, 694, 695, 732, 733, 754, 755, 973, 1025, 1153], "caller": [110, 111, 153, 229, 368, 370, 406, 412, 436, 438, 575, 642, 654, 671, 720, 722, 727, 730, 794, 805, 945, 949, 1000, 1079], "uniniti": [110, 111, 429, 555, 562, 564, 565, 566, 569, 642, 757], "guarante": [110, 111, 151, 189, 220, 239, 420, 465, 642, 766, 773, 907, 908, 961, 962, 970, 997], "contigu": [110, 111, 433, 596, 613, 642, 788, 938, 1121], "vec": [110, 111, 562, 564, 571, 578, 579, 580, 581, 582, 642], "carri": [112, 153, 158, 173, 424, 456, 465, 482, 753, 906, 963, 976, 999], "norm": [112, 229, 1113], "meantim": [112, 467, 923], "fresh": [112, 152], "made": [112, 119, 130, 144, 145, 150, 151, 152, 154, 157, 158, 162, 166, 203, 218, 243, 267, 302, 335, 367, 405, 406, 408, 411, 442, 462, 466, 482, 488, 688, 786, 802, 833, 834, 839, 899, 906, 932, 938, 943, 961, 979, 1004, 1011, 1021, 1057, 1105], "arbitrari": [112, 151, 172, 239, 243, 362, 378, 396, 432, 447, 585, 612, 613, 665, 723, 735, 761, 903, 928, 932, 960, 1000, 1036, 1050, 1078], "sinc": [112, 133, 162, 168, 213, 219, 250, 331, 432, 435, 564, 572, 573, 603, 616, 659, 660, 688, 709, 714, 720, 735, 753, 802, 906, 919, 926, 932, 935, 947, 962, 969, 1030, 1154], "whichev": 112, "enumer": [112, 166, 172, 174, 184, 190, 195, 196, 200, 202, 208, 209, 211, 232, 236, 241, 247, 261, 265, 282, 285, 304, 314, 377, 424, 444, 661, 763, 798, 908, 1163], "pack": [112, 162, 166, 212, 517, 538, 828, 862, 900, 902], "unpack": [112, 166, 170, 190, 196, 200, 202, 207, 211, 215, 220, 223, 228, 232, 233, 239, 244, 246, 250, 251, 262, 267, 269, 272, 281, 285, 303, 306, 308, 314, 316, 320, 335, 700, 754, 755, 802, 828, 900, 902, 906, 977, 984, 990, 991, 1030, 1048, 1153], "kib": [112, 166], "222": [112, 184, 223, 226, 231, 233, 239, 243, 246, 249, 261, 264, 281, 285, 291, 307, 313, 451], "addit": [112, 153, 171, 183, 210, 239, 242, 320, 379, 426, 447, 481, 482, 496, 518, 564, 576, 582, 653, 802, 839, 915, 1019, 1031, 1047, 1049, 1128], "checkout": [112, 133, 143, 154, 166, 180, 775, 802, 803, 1165], "previou": [112, 155, 171, 302, 503, 555, 571, 653, 862, 894, 934, 1001, 1003, 1023, 1025, 1069, 1127], "9bfda12": 112, "mosquitto": [112, 223, 227, 239, 246, 249, 264, 271, 281, 285, 307, 313, 1094, 1116], "client": [112, 122, 133, 156, 158, 169, 214, 218, 246, 260, 442, 470, 471, 484, 723, 724, 902, 915, 917, 925, 970, 1112, 1128], "smoothli": 112, "forward": [112, 166, 229, 255, 256, 257, 266, 287, 288, 315, 373, 388, 397, 403, 404, 410, 414, 417, 421, 430, 434, 439, 440, 625, 662, 669, 700, 710, 752, 754, 755, 802, 862, 886, 894, 898, 899, 909, 914, 1153], "diverg": [112, 960], "00aea42": 112, "delet": [112, 178, 190, 220, 239, 254, 264, 285, 316, 330, 429, 460, 463, 502, 519, 528, 532, 544, 552, 567, 570, 629, 632, 637, 660, 670, 671, 672, 700, 705, 717, 718, 719, 720, 736, 745, 754, 755, 780, 810, 839, 1109, 1135, 1152, 1153], "footnot": [112, 154, 156, 157, 158, 161, 162, 167, 174, 180, 183, 186, 270, 273, 461, 488, 532, 579, 581, 582, 595, 625, 644, 771, 773, 834, 841, 856, 906, 907, 908, 929, 932, 992, 1024, 1027, 1057, 1091, 1106, 1153, 1156], "term": [112, 119, 151, 153, 175, 203, 243, 276, 278, 332, 432, 575, 578, 642, 720, 723, 835, 908, 927, 961, 973, 1105, 1140], "ss2023": 113, "ws2023": [113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 130, 755], "firstnam": [114, 131, 184, 210, 223, 231, 233, 236, 239, 243, 246, 249, 251, 252, 261, 264, 271, 285, 291, 296, 303, 321, 326, 462, 463, 491, 497, 506, 507, 520, 575, 621, 647, 651, 653, 655, 672, 829, 830, 866, 867, 869, 871, 874, 1000, 1013, 1014, 1016, 1017, 1018, 1020, 1021, 1029, 1089, 1090, 1091, 1092, 1095, 1096, 1097, 1108, 1117, 1118, 1119, 1121, 1122, 1123, 1124], "lastnam": [114, 131, 184, 213, 223, 229, 231, 233, 236, 239, 243, 246, 249, 251, 252, 264, 271, 285, 291, 296, 303, 321, 326, 462, 463, 491, 497, 506, 507, 520, 575, 621, 645, 647, 651, 654, 657, 672, 755, 829, 830, 866, 867, 869, 871, 874, 1000, 1013, 1014, 1016, 1017, 1018, 1020, 1021, 1029, 1089, 1090, 1091, 1092, 1095, 1096, 1097, 1108, 1117, 1118, 1119, 1121, 1122, 1123, 1124], "bouncem": [114, 131, 519, 520, 829, 830], "procf": [114, 191, 193, 267, 755, 840, 898, 939, 956, 1157, 1164], "umask": [114, 257, 266, 267, 287, 288, 335, 340, 755, 832, 857, 881, 898, 932, 944], "diff": [114, 207, 226, 562, 564, 1019, 1159], "raspi": [114, 147, 281, 335, 341, 755, 779, 802, 803, 804, 806, 811, 817, 820, 823, 898, 900, 901, 902, 903, 906, 907, 908, 990, 991], "spirit": [114, 396], "readm": [114, 135, 170, 276, 278, 906, 907], "modular": [114, 183, 188, 190, 218, 237, 269, 337, 338, 368, 445, 976, 1003], "plc": 114, "sallok": 114, "constantsensor_nopoli": [114, 131, 508, 514, 560, 755], "randomsensor_nopoli": [114, 131, 508, 560, 755], "ece21": [114, 130, 131], "labexam": 114, "hysteresis_nopoli": [114, 115, 131, 508, 509, 560, 755], "upload": [114, 157, 862, 1055, 1127], "j": [114, 148, 156, 162, 199, 214, 216, 226, 231, 233, 236, 239, 243, 246, 249, 261, 264, 271, 285, 291, 303, 307, 382, 385, 402, 426, 433, 482, 575, 664, 675, 723, 812, 828, 984, 988, 1004, 1113, 1119], "bz2": [114, 152, 438, 802, 824, 827, 997], "influenc": [114, 977, 1153], "felber": 114, "vscode": [114, 181, 341, 355, 884], "folder": [114, 157], "comprehend": [114, 237, 381, 387, 973], "workspacefold": 114, "suppli": [114, 153, 191, 520, 522, 566, 761, 802, 818, 837, 899, 903, 906, 908, 923, 932, 1061], "cpprefer": [114, 600, 601, 602, 603, 604, 606, 607, 608, 609, 612, 621, 640], "averagingsensor_nopoli": [114, 131, 508, 560, 755], "toolcas": [114, 126, 131, 276, 278, 677], "mocksensor_nopoli": [114, 131, 508, 509, 510, 511, 560, 755], "specifi": [114, 151, 168, 239, 251, 285, 376, 444, 453, 506, 509, 514, 517, 566, 646, 660, 675, 699, 710, 802, 862, 919, 932, 936, 962, 974, 1027, 1042, 1050, 1054, 1071, 1090, 1092, 1121, 1123, 1128], "hint": [114, 126, 166, 239, 251, 280, 359, 462, 522, 532, 536, 647, 829, 830, 842, 911, 960], "target_link_librari": [114, 179, 448, 450, 451, 452, 453, 457, 503, 539, 542, 548, 554, 557, 972, 977, 978, 1139, 1142, 1144], "inter": [114, 151, 169, 175, 961, 1157, 1164, 1167, 1169], "likewis": [114, 226, 549, 580, 828, 847, 918, 934, 984, 1105, 1142], "ledstripedisplay_nopoli": [114, 131, 508, 560, 755], "somewhat": [115, 171, 212, 432, 465], "02131d959eaa": [115, 503, 519, 520, 936], "heat": [115, 259, 459, 466, 510, 519, 755, 908, 1104, 1105], "hwmon2": [115, 906], "temp1_input": [115, 906, 908], "boilingpot": [115, 117], "hysteresi": [115, 125, 129, 130, 131, 316, 344, 510], "knob": [115, 1028], "steer": 115, "desir": [115, 156, 220, 226, 236, 239, 377, 381, 392, 514, 564, 566, 572, 654, 800, 933, 935, 1107], "hardcod": [115, 152, 339, 538, 761, 765, 1066], "ledstripedisplai": [115, 125, 126, 129, 130], "unreason": 115, "cluster_fh2021": [115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 130, 755], "fh2021_boiling_pot": [115, 116, 117, 118, 124, 130, 755], "fh2021_switch_interfac": [115, 116, 117, 118, 123, 124, 125, 130, 755], "fh2021_sysfs_gpio_switch": [115, 116, 118, 124, 130, 755], "termin": [119, 150, 152, 156, 170, 181, 203, 249, 251, 267, 270, 273, 276, 278, 280, 357, 360, 364, 367, 370, 377, 389, 395, 418, 438, 444, 456, 460, 486, 487, 519, 538, 567, 688, 694, 721, 727, 818, 837, 840, 844, 845, 846, 862, 884, 894, 895, 928, 946, 950, 955, 960, 972, 973, 974, 1029, 1031, 1035, 1050, 1062, 1079, 1107, 1113, 1116, 1164], "style": [119, 147, 151, 156, 220, 226, 229, 236, 239, 278, 428, 443, 444, 538, 563, 564, 569, 603, 637, 640, 651, 660, 665, 696, 712, 737, 740, 744, 745, 746, 754, 755, 770, 819, 942, 1028, 1069, 1094, 1105], "reusabl": 119, "compon": [119, 211, 224, 316, 435, 886, 961], "dedic": [119, 151, 152, 183, 188, 237, 267, 270, 273, 428, 444, 770, 840, 841, 906, 907, 908, 942, 944, 978, 996, 1007, 1040, 1156], "constrain": [119, 840], "decoupl": [119, 227, 460, 960], "sink": [119, 121, 124, 279, 280, 295, 298, 301, 305, 755], "datalogg": [119, 280, 302], "target_include_directori": [119, 453, 454, 456, 457], "announc": [119, 342, 453, 454, 631, 906, 907], "anyon": [119, 151, 552, 773], "node": [119, 144, 156, 161, 171, 416, 436, 453, 616, 758, 761, 765, 771, 780, 992, 1116, 1133], "startlog": 119, "uint16_t": [119, 376], "special": [119, 144, 151, 198, 231, 233, 239, 243, 267, 357, 409, 470, 481, 484, 487, 488, 532, 555, 560, 673, 675, 729, 751, 828, 839, 844, 900, 922, 928, 950, 974, 993, 998, 1017, 1019, 1027, 1036, 1038, 1042, 1102, 1107, 1138, 1158, 1159], "unif": [119, 561], "leftov": 119, "gettim": 119, "defer": [119, 151, 442, 800, 822], "timestamp": [119, 216, 226, 246, 275, 279, 280, 301, 303, 305, 307, 313, 444, 724, 763, 864, 884, 918, 969], "sinkfil": 119, "sinkmock": 119, "usabl": [119, 239, 285, 386, 465, 516, 671, 909], "sensorconfig": [119, 131, 306], "sensorvalu": [119, 120, 122, 481, 495], "runtime_error": [119, 486, 487, 498, 500, 501, 502, 520, 734], "prebuilt": [119, 906], "order": [119, 138, 144, 150, 156, 157, 161, 162, 171, 183, 184, 187, 189, 220, 226, 231, 241, 243, 246, 276, 293, 309, 361, 387, 398, 420, 432, 447, 462, 481, 536, 538, 545, 547, 610, 656, 753, 757, 773, 786, 802, 891, 899, 906, 908, 924, 963, 988, 1004, 1024, 1072, 1082, 1155], "acquisitionloop": [119, 302, 306], "n_iter": 119, "doit": [119, 223, 467], "write_measur": [119, 302], "mockingsink": 119, "receiv": [119, 152, 171, 226, 229, 267, 296, 368, 484, 575, 673, 761, 773, 794, 802, 862, 899, 902, 908, 915, 923, 928, 950, 958, 973, 974, 997, 1000, 1050, 1081, 1096, 1113], "yaml": 119, "ini": [119, 135, 156, 170, 343, 346, 1133], "fh2021_datalogg": [119, 120, 121, 122, 124, 755], "predecessor": [120, 122, 237, 245, 251, 295, 298], "sinklogg": [120, 122], "csvsink": [120, 302], "logfil": [120, 152, 190, 844, 895], "linksoben": 120, "rechtsunten": 120, "addmeasur": 120, "rememb": [120, 156, 157, 172, 179, 189, 210, 387, 420, 470, 596, 597, 631, 634, 671, 672, 720, 798, 802, 844, 859, 862, 881, 906, 915, 917, 998, 1064, 1074], "csvname": [120, 224, 269, 444], "valuenam": 120, "_config": 120, "sensor_valu": 120, "getmeasur": 120, "rotat": [120, 152, 899, 924], "backup": [120, 157, 191, 445, 831, 833, 915, 1118], "fh2021_datalogger_csv_sink": [120, 124, 755], "struct": [122, 154, 178, 212, 213, 229, 403, 408, 414, 415, 416, 417, 420, 421, 424, 426, 428, 430, 434, 439, 440, 462, 467, 484, 519, 520, 564, 565, 570, 572, 574, 575, 595, 645, 646, 647, 648, 649, 650, 652, 653, 654, 655, 656, 657, 660, 662, 663, 664, 665, 672, 688, 691, 693, 694, 695, 696, 700, 705, 723, 724, 734, 736, 743, 744, 746, 752, 753, 754, 755, 761, 763, 766, 768, 770, 771, 773, 786, 790, 792, 794, 796, 798, 804, 805, 810, 812, 815, 819, 821, 822, 900, 902, 906, 925, 926, 938, 949, 960, 963, 969, 970, 973, 974, 1154], "sensor_config": 122, "getallmeasur": 122, "localhost": [122, 1111, 1116], "1883": [122, 1116], "transport": [122, 175, 227, 229, 517, 734, 1096, 1116], "sensor1": [122, 261, 467, 739, 741, 743, 745, 746], "sensor2": [122, 467, 739, 741, 743, 745, 746], "api": [122, 151, 158, 175, 198, 212, 239, 346, 350, 755, 758, 765, 773, 780, 784, 796, 898, 939, 951, 959, 962, 970, 1055, 1111, 1129, 1157, 1158], "burden": [122, 444, 577, 1002, 1134], "handmad": 122, "fedora": [122, 147, 156, 162, 163, 166, 180, 267, 532, 755, 759, 762, 764, 767, 769, 772, 779, 781, 782, 783, 787, 793, 799, 803, 806, 811, 817, 820, 823, 858, 862, 898, 901, 978, 979, 986, 987, 988, 991, 1116, 1140], "mosquitto_new": 122, "mosquitto_connect": 122, "mosquitto_destroi": 122, "prohibit": [122, 572], "wide": [122, 158, 162, 358, 359, 834, 915, 970, 976], "boil": [121, 122, 125, 130, 755, 802], "pot": [121, 122, 125, 130, 755], "iot": [117, 122, 124, 125, 130, 131, 227, 267, 755], "broadcast": [122, 732, 900, 907, 949, 974, 1170], "flexibl": [122, 259, 453, 459, 473, 480, 494, 508, 560, 606, 755, 945, 960, 976, 977, 978, 993, 994, 1045, 1148], "fh2021_datalogger_mqtt_sink": [122, 124, 755], "logger": [124, 131, 280, 298, 302, 305, 724, 755], "pwm": [117, 118, 123, 124, 131, 267, 276, 755, 802, 898, 899, 905, 942, 1157, 1164], "fh2021_pwm_displai": [117, 123, 124, 126, 755], "fh2021_libgpiod_switch": [124, 125, 755], "mockswitch": [125, 129, 130], "libgpiodswitch": 125, "set_stat": [125, 130, 316], "pca9685": [126, 131, 267, 755, 898, 899, 905], "pwmchip0": [126, 899, 907], "pwm0": [126, 899, 907], "danc": [126, 157, 519, 822, 992], "phase": [126, 199, 486, 500, 970, 1004], "cumbersom": [126, 153, 155, 190, 573, 596, 664, 708, 758, 944, 970, 1140], "percentagedisplai": 126, "show_percentag": [123, 126], "round": [126, 151, 218, 223, 233, 243, 259, 264, 313, 315, 459, 466, 467, 469, 471, 480, 481, 494, 508, 560, 755, 963, 1169], "hood": [126, 153, 976], "percentag": [123, 126, 436], "pwmdisplai": 126, "bit": [126, 130, 145, 150, 151, 153, 156, 158, 161, 162, 183, 184, 187, 194, 213, 224, 226, 227, 233, 257, 260, 266, 267, 270, 273, 287, 288, 306, 330, 335, 340, 346, 358, 364, 370, 376, 381, 388, 397, 404, 405, 410, 414, 417, 420, 421, 430, 434, 439, 440, 503, 517, 578, 662, 697, 700, 710, 720, 752, 753, 754, 755, 798, 802, 821, 832, 833, 857, 859, 861, 898, 899, 900, 902, 907, 909, 932, 960, 977, 986, 996, 1036, 1100, 1113, 1148, 1153], "pwm5": 126, "visibl": [126, 130, 166, 192, 212, 278, 321, 368, 370, 372, 396, 398, 429, 430, 434, 439, 440, 504, 653, 755, 773, 906, 908, 970, 1041, 1069, 1109], "10000000": [126, 153, 226, 384, 946, 1002, 1010], "set_percentag": 126, "duti": [126, 899, 907], "duty_cycl": [126, 899, 907], "unbuff": 126, "automat": [126, 130, 139, 153, 155, 157, 158, 166, 201, 203, 207, 213, 220, 226, 236, 239, 243, 276, 278, 372, 381, 408, 425, 428, 432, 444, 473, 474, 563, 566, 631, 635, 673, 702, 740, 754, 755, 758, 773, 802, 906, 908, 935, 997, 1050, 1057, 1062], "serv": [129, 155, 157, 393, 1106, 1134, 1168], "ground": [129, 907, 908], "mocksensor": [129, 131], "upstream": [130, 154, 157, 162, 166, 780], "sysfsgpioswitch": 130, "wherea": 130, "gpio20": 130, "voltag": [130, 899, 906], "constructur": 130, "proid": 130, "lifecycl": 130, "avg": [131, 239, 425, 464, 481, 492, 511, 518, 739, 741, 743, 745], "random": [131, 169, 171, 187, 199, 211, 223, 224, 227, 231, 233, 236, 239, 244, 246, 249, 271, 280, 313, 330, 335, 378, 465, 467, 472, 481, 507, 518, 528, 529, 530, 531, 533, 534, 535, 565, 718, 833, 908, 919, 938, 966, 1000, 1012, 1035, 1107, 1116], "lifetim": [131, 152, 210, 212, 229, 241, 373, 388, 397, 404, 410, 414, 415, 417, 421, 430, 434, 439, 440, 474, 567, 650, 662, 673, 700, 752, 754, 755, 995], "averagingsensor": [131, 464, 492], "overrid": [131, 147, 211, 224, 239, 254, 316, 461, 467, 469, 474, 489, 491, 492, 493, 495, 496, 498, 520, 634, 635, 699, 700, 739, 754, 755, 997, 1012, 1145], "scheme": [131, 239, 285, 302, 305, 576, 995, 999], "constantsensor": [131, 464, 467, 472, 484, 485, 493, 505, 512, 518, 528, 529, 530, 531, 533, 534, 670, 718, 719, 720, 721, 1012, 1088], "outlook": [115, 119, 131, 841], "w1sensor": [131, 504, 505, 506, 507, 519], "meet": [131, 156, 158, 183, 420, 846, 988, 1001], "liskow": [131, 470], "segreg": [131, 442], "invers": [131, 243, 350, 442, 460, 467, 766, 961, 962, 1169], "gcc": [131, 152, 153, 179, 199, 201, 220, 226, 236, 239, 328, 355, 357, 381, 398, 402, 420, 423, 424, 426, 436, 437, 445, 447, 546, 594, 597, 729, 802, 803, 839, 859, 924, 925, 926, 932, 933, 934, 935, 944, 947, 977, 988, 990, 991, 992, 993, 994, 1026, 1142, 1148], "cycl": [131, 213, 248, 442, 444, 688, 719, 733, 754, 755, 898, 899, 907, 939, 953, 959], "todai": [131, 152, 203, 211, 227, 260, 277, 293, 306, 309, 344, 370, 1100, 1155, 1158], "minut": [131, 151, 157, 158, 183, 187, 190, 227, 908, 1100, 1116], "suppos": [131, 166, 187, 243, 320, 484, 780, 802, 819, 841, 899, 947, 1094, 1133], "deploi": [131, 163, 191, 335, 340, 460, 792, 829, 830, 907, 908, 913, 915, 919], "leddisplai": 131, "pwmcontrol": 131, "dir": [133, 184, 203, 211, 224, 233, 236, 243, 261, 264, 284, 285, 303, 320, 328, 409, 444, 445, 451, 456, 847, 977, 978, 990, 1013, 1128, 1135], "wo": [133, 159, 169, 170, 178, 184, 186, 353, 1150, 1151, 1169], "jf": [133, 144, 158, 195, 196, 254, 271, 335, 340, 354, 484, 498, 777, 1117, 1118, 1119, 1121, 1122, 1123, 1124, 1158, 1163], "aon": 133, "biz": 133, "svn": [133, 147, 167, 213, 353, 354], "recommend": [133, 162, 183, 191, 203, 236, 432, 585, 616, 802, 862, 907, 1055, 1109, 1117], "lokalen": 133, "fetch": [133, 152, 166, 802, 945, 973], "myremot": 133, "orig": [133, 154, 201], "stia": 133, "improv": [134, 432, 435, 447, 703, 718, 753, 995], "stack": [134, 172, 173, 174, 181, 195, 196, 214, 220, 223, 226, 236, 239, 246, 249, 264, 271, 281, 285, 307, 313, 426, 432, 482, 566, 597, 717, 835, 839, 907, 932, 944, 1163], "hang": [134, 194, 562, 805, 828], "seo": [134, 814], "blog": [134, 147, 151, 154, 161, 166, 722], "i2": [134, 136, 141, 246, 281, 755], "kontron": [134, 143, 755], "smarc": [134, 143, 755], "proper": [135, 151, 179, 418, 777, 802, 934, 1019], "manifest": [135, 988, 1136], "cfg": [135, 143], "author_email": 135, "classifi": [135, 1055, 1102], "tox": 135, "travi": 135, "yml": 135, "upgrad": [135, 139, 140, 170, 755, 1128, 1135], "zip": [135, 143, 147, 211, 231, 237, 251, 264, 314, 862, 868, 884], "zipfil": [135, 211], "99": [135, 161, 170, 184, 194, 201, 207, 210, 216, 223, 226, 231, 233, 236, 239, 243, 246, 249, 252, 261, 264, 268, 271, 281, 285, 291, 303, 307, 313, 330, 335, 340, 436, 963, 1039, 1074, 1104], "999": [135, 223, 226, 239, 246, 249, 264, 271, 281, 285, 307, 313], "whl": [135, 147, 1055, 1128], "uninstal": [135, 450, 1128, 1133], "pypa": 135, "sampleproject": 135, "devicetre": [136, 907], "connect": [123, 136, 151, 158, 171, 191, 203, 224, 267, 296, 332, 340, 341, 416, 734, 833, 895, 899, 900, 907, 908, 917, 922, 928, 942, 1109, 1111, 1116, 1128, 1156, 1168, 1170], "signal": [136, 147, 148, 176, 278, 353, 436, 734, 755, 773, 794, 839, 898, 899, 907, 939, 944, 952, 960, 961, 966, 970, 1159, 1166, 1167, 1170], "audio_mck": 136, "i2s0_ck": 136, "i2s0_lrck": 136, "i2s0_sdout": 136, "alsa": [136, 154], "tlv320dac3203irg": 136, "tlv320dac3203": 136, "drive": [136, 269, 422, 510, 907, 928, 1107], "suggest": [136, 150, 151, 153, 155, 157, 158, 166, 175, 183, 190, 191, 192, 193, 256, 258, 276, 278, 396, 1024, 1052, 1133], "tlv320aic32x4": 136, "compat": [136, 156, 172, 275, 571, 661, 677, 753, 758, 777, 979, 1025, 1048, 1113, 1128, 1129], "tlv320aic31xxsw": 136, "tlv320aic31xx": 136, "wget": [137, 156, 158, 162, 281, 988, 990], "cdimag": 137, "amd64": [137, 203, 332, 376], "iso": [137, 211, 229, 230, 246, 249, 269, 291, 303, 307, 356, 444, 561, 577, 826], "netinst": 137, "img": [137, 172, 174, 431, 802, 906], "qcow2": 137, "virtualdebian": 137, "30g": [137, 158], "kvm": [137, 154], "hda": 137, "cdrom": 137, "2048": [137, 161, 226], "nic": 137, "sic": [137, 162], "box": [137, 141, 183, 899, 906, 1024], "deliveri": [138, 142, 151, 972, 975], "outcom": [139, 187, 192, 278, 802, 861, 862, 984, 1056], "dirti": [139, 140, 153, 167, 402, 467, 755], "forget": [139, 144, 151, 152, 153, 227, 367, 370, 415, 444, 1109, 1115, 1134, 1153], "graphic": [139, 437, 837, 838, 907], "plug": [139, 152, 154, 466], "monitor": [139, 154, 168], "4k": [139, 153, 960, 969], "dual": [139, 141], "gnome": [139, 151, 156, 223, 239, 246, 249, 264, 271, 281, 285, 307, 313, 438, 802, 837, 893, 961], "applianc": [139, 153, 438], "x11": 139, "wayland": [139, 156], "benchmark": 139, "glxgear": 139, "su": [139, 990], "pect": 139, "cluster_project_xxx": [140, 755], "project_xxx_dirty_upgrad": [140, 755], "project_xxx_yocto_kernel": [140, 755], "bsp": [140, 755], "project_xxx_debian_config": [140, 755], "project_xxx_audio_chip": [140, 755], "chip": [140, 169, 223, 755, 899, 903, 906, 924, 926, 960, 1057], "bringup": [140, 141, 755], "project_xxx_hardware_bringup": [140, 755], "project_xxx_debian_kernel_packag": [140, 755], "finish": [140, 183, 202, 727, 755, 812, 1011], "project_xxx_wait_hardwar": [140, 755], "shot": [141, 158, 396, 660, 734, 753], "dac": 141, "massacr": [141, 170, 229, 335, 396, 402, 428, 452, 660, 1007], "distro": [141, 450, 1031, 1142], "bootload": [141, 150, 161, 438, 838, 906, 908], "oldconfig": [141, 152, 775, 782, 802, 803], "qemu": [141, 223, 239, 246, 249, 264, 271, 281, 285, 307, 313], "grub": [141, 161], "stabl": [141, 158, 162, 442, 780, 802, 841, 960, 992, 994, 1055, 1129], "yoctoproject": 143, "v5": [143, 154], "bsp_smarc": 143, "sxal4_smarc": 143, "sxal_r1": 143, "0_combin": 143, "sxal4_5": 143, "sxal4": 143, "inc": [143, 154, 275, 419, 456, 457, 729, 947, 1010], "filesextrapaths_prepend": 143, "thisdir": 143, "linux_vers": 143, "linux_version_extens": 143, "linux_kernel_typ": 143, "kbranch": 143, "kmeta": 143, "lic_files_chksum": 143, "md5": 143, "bbea815ee2795b2f4230826c0c6b8814": 143, "srcrev_machine_pn": 143, "3604bc07c035939266d78d65084c6cd54ffc6d56": 143, "srcrev_meta_pn": 143, "8d42b14fe517ef036dc4e7b290f16d142f4f1d39": 143, "src_uri": 143, "bareclon": 143, "cach": [143, 147, 152, 278, 281, 418, 432, 437, 438, 596, 613, 884, 961, 1128, 1135, 1151], "destsuffix": 143, "scc": 143, "pv": 143, "srcpv": 143, "include_patch": 143, "patch": [143, 162, 163, 962, 990, 1148], "compatible_machin": 143, "therebi": [144, 183, 668, 893, 973, 1019, 1057], "simplifi": 144, "fine": [144, 153, 158, 187, 447, 448, 563, 675, 677, 782, 812, 919, 923, 991, 1008, 1020, 1029, 1035, 1050, 1113], "grain": [144, 158, 444, 447, 812, 1020, 1035], "surround": [144, 661, 702, 714], "cut": [144, 172, 190, 203, 243, 257, 266, 287, 288, 381, 416, 755, 792, 832, 846, 892, 895, 898, 908], "linewis": 144, "wherev": [144, 360], "obs studio": 145, "video edit": 145, "screen record": 145, "These": [145, 153, 155, 156, 220, 226, 236, 239, 447, 460, 775, 802, 906, 978], "offici": [145, 187, 188, 191, 192, 193, 198, 560, 990, 1138], "jonathan": [145, 336, 337, 1148], "himself": [145, 908], "paus": [145, 153, 960, 973], "meanwhil": 145, "freez": [145, 1128, 1136], "photo": 145, "length": [145, 207, 210, 220, 226, 236, 239, 268, 275, 285, 307, 313, 444, 516, 567, 579, 640, 773, 786, 798, 900, 902, 928, 938, 970, 1105, 1113, 1117, 1124], "grab": [145, 899, 907], "neil": 146, "patel": 146, "insight": [146, 150, 447, 988, 1127], "consol": [146, 203, 837, 840, 895, 1079, 1159], "crawlabl": 146, "dn": [146, 155, 158, 223, 239, 246, 249, 264, 271, 281, 285, 307, 313, 1170], "domain": [146, 147, 157, 158, 163, 428, 442, 454, 961, 1099, 1102, 1168, 1170], "ipc": [146, 147, 148, 151, 352, 354, 753, 755, 898, 939, 967, 1168], "queue": [146, 147, 152, 161, 162, 169, 175, 195, 196, 198, 227, 255, 256, 258, 267, 279, 280, 301, 302, 305, 315, 484, 733, 754, 755, 796, 804, 822, 835, 839, 898, 939, 949, 953, 1163, 1167, 1168, 1169], "pydbu": 147, "openh": [147, 148, 169, 210], "traceback": [147, 173, 220, 226, 236, 239, 249, 269, 271, 285, 307, 997, 998, 999, 1004, 1012, 1013, 1019, 1020, 1041, 1042, 1046, 1048, 1051, 1052, 1113, 1121, 1122, 1134], "recent": [147, 150, 153, 158, 173, 181, 220, 226, 236, 239, 249, 269, 271, 285, 307, 356, 802, 881, 997, 998, 999, 1004, 1012, 1013, 1019, 1020, 1041, 1042, 1046, 1048, 1051, 1052, 1113, 1121, 1122, 1134], "oh_test": 147, "easysuit": 147, "oh_dbus_easysuit": 147, "easysuite_error": 147, "error_suit": 147, "dbusheatingerror": 147, "modulenotfounderror": [147, 264, 269, 999], "research": [147, 150, 151, 264, 1106], "pygobject": 147, "714": [147, 226], "kb": [147, 153, 1135], "venv": [147, 184, 210, 220, 226, 236, 237, 239, 251, 281, 342, 343, 884, 1054, 1087, 1100, 1115, 1121, 1122, 1127, 1133, 1135, 1136], "standalon": [147, 420, 673, 973, 1140], "ss_9wmug": 147, "__env_pip__": 147, "ignor": [147, 168, 180, 239, 285, 346, 382, 402, 432, 454, 462, 594, 597, 660, 675, 688, 710, 760, 844, 907, 932, 974, 997, 1128], "9lrqmi4l": 147, "overlai": [147, 802, 906, 907], "locat": [147, 148, 152, 157, 162, 183, 220, 226, 236, 239, 243, 293, 309, 335, 353, 405, 418, 426, 432, 460, 482, 575, 595, 671, 719, 777, 802, 906, 907, 908, 928, 946, 970, 977, 997, 1104, 1121, 1155], "pycairo": 147, "cwd": [147, 517, 753, 828, 839, 865, 884, 886, 890, 978], "821": [147, 226], "py2": 147, "344": [147, 226, 239, 271, 285, 303, 313], "517": [147, 226, 271], "tmpabab356k_in_process": 147, "build_wheel": 147, "tmpt1yod7mc": 147, "o4u45fjc": 147, "pycairo_33865a19ad6b4a719885f07926efe16d": 147, "bdist_wheel": [147, 1055], "build_pi": 147, "x86_64": [147, 154, 156, 203, 210, 332, 355, 381, 519, 580, 775, 780, 979, 988], "cairo": 147, "pyi": 147, "build_ext": 147, "pkg": 147, "perhap": [147, 243, 771, 1108], "pkg_config_path": 147, "gobject": 147, "introspect": [147, 960], "cp39": 147, "linux_x86_64": 147, "lib64": [147, 179, 184, 210, 220, 226, 236, 239, 243, 438, 448, 450, 455, 976, 979, 993, 1000, 1121, 1122, 1128, 1142], "_vendor": 147, "pep517": 147, "in_process": 147, "_in_process": 147, "tmpf2wjv23h": 147, "4rtfumdz": 147, "pygobject_beef4432e2454eb0b7facc57fadf42b8": 147, "pygtkcompat": 147, "generictreemodel": 147, "_signalhelp": 147, "_propertyhelp": 147, "_ossighelp": 147, "_option": 147, "_gtktemplat": 147, "_error": [147, 491], "_constant": 147, "keysym": 147, "pango": 147, "gio": 147, "gdkpixbuf": 147, "gdk": 147, "glib": 147, "gimarshallingtest": 147, "tmp56g_ixbz": 147, "bvay4iv4": 147, "pygobject_6777f13e15934fb2b13139399b143557": 147, "todo": [147, 192, 227, 255, 256, 348, 349, 518, 660, 756], "summari": [147, 188, 467, 570, 719, 1133], "c1": [147, 161, 465, 579, 664], "misc": [147, 148, 170, 171, 538, 771, 815, 1152], "w3school": 147, "howto": [147, 148, 773], "howto_css_image_transpar": 147, "asp": 147, "titelseit": 147, "mitt": 147, "howto_js_read_mor": 147, "subdir": [147, 753, 997], "gegen": [147, 1148], "clutter": [147, 180], "404": [147, 157, 226, 233, 271, 285, 303], "prio": [147, 189, 962, 963, 969], "beagleboard": [147, 152, 163], "repair": [147, 163, 223], "nand": [147, 163], "40w": [147, 163], "suck": [147, 148, 163], "disk": [147, 150, 151, 154, 158, 163, 431, 838, 839, 859, 888, 923, 924, 993, 1050, 1148], "contact": [147, 1155], "ssl": [147, 158, 1128], "certif": [147, 158, 161, 208, 1128], "070": [147, 660], "fortgeschritten": [147, 354, 1150], "700": [147, 226, 613, 721, 915], "lf": [147, 210, 498, 1050], "descr": [147, 231, 307], "050": [147, 660, 972, 973], "080": [147, 640, 660], "020": [147, 226, 267, 640, 660, 968, 969, 972, 973], "060": [147, 148, 187, 343, 660], "_hidden": 147, "010": [147, 313, 660, 861, 965, 966, 968, 969, 972, 973], "190": [147, 184, 201, 210, 223, 226, 231, 233, 236, 239, 243, 246, 249, 252, 261, 264, 271, 281, 285, 291, 303, 307], "propos": [147, 428, 506], "030": [147, 660, 670, 720, 968, 969, 972, 973], "040": [147, 313, 660, 968, 969, 972, 973], "central": [148, 180, 213, 302, 305, 356, 400, 460, 753, 993, 1038, 1050, 1156], "rstjinja": 148, "105": [148, 170, 184, 194, 199, 201, 207, 220, 223, 226, 231, 233, 239, 243, 246, 249, 252, 261, 264, 271, 281, 285, 291, 303, 307, 313, 330, 335, 340, 964], "110": [148, 155, 170, 184, 194, 201, 207, 216, 220, 223, 226, 231, 233, 239, 243, 246, 249, 261, 264, 268, 271, 281, 285, 291, 303, 307, 313, 330, 500, 501, 660, 861, 968, 969], "cxx_class_templ": [148, 560, 755], "cxx_dynamic_memori": [148, 560, 755], "cxx_global_initi": [148, 560, 755], "cxx_inheritance_virtu": [148, 560, 755], "cxx_ownership_raii": [148, 560, 755], "cxx_stl_container_intro": [148, 560, 755], "cxx_templates_vs_interfac": [148, 560, 755], "maj": [148, 759], "min": [148, 264, 759, 1105], "cdev": [148, 758, 759, 761, 765, 766, 771], "fop": [148, 759, 766], "devtmpf": [148, 758, 759, 804], "dynam": [148, 178, 186, 187, 220, 226, 236, 237, 239, 282, 353, 417, 421, 430, 434, 439, 440, 450, 481, 518, 549, 558, 560, 567, 632, 634, 637, 638, 657, 662, 671, 700, 724, 739, 740, 741, 752, 754, 755, 759, 764, 769, 772, 774, 779, 783, 793, 797, 799, 804, 806, 811, 817, 820, 823, 828, 839, 898, 947, 949, 958, 976, 977, 1016, 1030, 1051, 1100, 1154, 1158], "sysprog_ev": 148, "sysprog_ipc": 148, "sysprog_sign": 148, "unittest_gtest_bas": [148, 755, 1138], "unittest_gtest_fixtur": [148, 755, 1138], "brows": [148, 150, 166, 841, 907], "blender": 148, "corda": 148, "figclass": 148, "homebrain": [148, 269, 281, 884, 885], "literalinclud": 148, "within": [148, 153, 229, 239, 285, 353, 509, 510, 514, 519, 564, 635, 698, 766, 899, 1011, 1028, 1040, 1124], "045": [148, 267, 313], "tex": 148, "055": 148, "056": 148, "910": [148, 226, 884], "glt": 148, "virtmem": 148, "fart": 148, "ungern": 148, "lost": [148, 158, 223, 229, 429, 538, 660, 719, 915, 949, 952, 969, 1011, 1133, 1134, 1140], "he": [148, 152, 166, 174, 183, 187, 190, 203, 208, 211, 213, 234, 237, 260, 279, 280, 284, 301, 306, 673, 675, 710, 713, 917, 950, 963, 974, 1016, 1044, 1100, 1126], "subscrib": [148, 227, 239], "friend": [150, 151, 198, 219, 255, 256, 258, 267, 278, 315, 316, 438, 501, 578, 733, 734, 754, 755, 773, 794, 899, 1142], "alia": [150, 155, 203, 229, 414, 417, 421, 430, 434, 439, 440, 448, 662, 700, 752, 754, 755, 862, 863, 990], "rm": [150, 152, 156, 157, 191, 193, 335, 340, 909, 919, 1135], "rf": [150, 152, 862, 872, 1135], "creativ": [150, 228], "variat": [150, 722, 807, 844], "thereof": [150, 267, 275, 465, 582, 1016], "happili": [150, 151, 229, 428, 577], "stage3": 150, "decad": [150, 158, 175, 802, 906, 908, 919, 998, 1156], "busybox": [150, 151], "initramf": [150, 827], "resid": [150, 153], "flash": [150, 153, 158, 438, 840, 899, 960], "correct": [150, 158, 162, 190, 210, 212, 223, 335, 381, 418, 422, 423, 430, 433, 434, 439, 440, 442, 470, 538, 570, 635, 637, 638, 670, 715, 718, 726, 755, 845, 849, 850, 874, 906, 907, 908, 961, 1003, 1011, 1105, 1128], "eras": [150, 497, 555, 616, 721, 749, 859], "hit": [150, 152, 153, 172, 175, 213, 753, 862, 891, 894, 1128], "sole": 150, "liter": [150, 173, 189, 194, 201, 211, 219, 220, 224, 231, 236, 239, 243, 246, 255, 256, 264, 271, 285, 303, 307, 313, 315, 327, 331, 335, 362, 370, 377, 426, 481, 496, 516, 660, 673, 802, 974, 1031, 1044, 1048], "told": [150, 153, 448, 487, 899], "reboot": [150, 152, 169, 802, 863, 906, 907, 908], "fatal": [150, 178, 446, 456, 802, 1141], "saw": [150, 153, 183, 212, 346, 383, 564, 932, 934], "115200": 150, "8n1": 150, "remaind": [150, 151, 154, 156, 179, 183, 267, 780, 802, 899, 907, 978], "recov": [150, 170], "fauxpa": 150, "explan": [150, 153, 179, 183, 190, 213, 244, 304, 335, 436, 457, 538, 802, 833, 899, 907, 934, 964, 969, 1103, 1106, 1135], "annot": [150, 211, 260, 300, 437, 561, 1100], "beagl": 150, "omap": 150, "rom": 150, "stage": [150, 166, 212, 1107], "processor": [150, 151, 210, 211, 224, 376, 420, 613, 724, 802, 807, 944, 961, 976], "sram": 150, "dram": 150, "latter": [150, 153, 960, 1000, 1040, 1107], "abil": [150, 660], "press": [150, 782, 819, 862, 899], "wrote": [150, 153, 343, 1153], "board": [150, 152, 802, 906], "ones": [150, 166, 173, 175, 239, 277, 285, 364, 432, 907, 908, 1033, 1117], "revis": [150, 154, 157, 254, 561, 659, 1153], "slightli": [150, 162, 183, 212, 229, 230, 538, 1028], "season": 150, "c4": [150, 161], "valuabl": [150, 436, 829, 830, 992, 994, 1000], "c3": [150, 154, 161], "angstrom": 150, "mlo": 150, "ift": 150, "fdisk": [150, 1148], "obvoiusli": 150, "fat32": [150, 802], "fat16": 150, "partit": [150, 151, 152, 239, 285, 802], "mount": [150, 152, 267, 341, 758, 802, 833, 942, 969, 970, 979, 988, 990], "sector": [150, 223, 1057], "intend": [150, 156, 157, 158, 168, 203, 220, 226, 236, 239, 447, 775, 907, 934, 935, 1055], "slot": [150, 938, 1019], "partli": [150, 152, 424], "meaning": [150, 158, 784], "scr": 150, "omap3": 150, "mmc1": 150, "arch": [150, 154, 782, 802, 803, 906], "mach": [150, 212, 217, 233], "omap2": 150, "omap3beagl": 150, "Near": 150, "notic": [150, 151, 153, 166, 220, 226, 236, 239, 428, 447, 448, 505, 751, 842, 946, 948, 1008, 1122], "offset": [150, 753, 773, 931, 993], "128k": 150, "0x80000": 150, "byte": [150, 153, 166, 168, 170, 220, 226, 236, 239, 246, 249, 264, 285, 291, 307, 313, 320, 335, 358, 366, 376, 377, 408, 411, 420, 423, 429, 433, 467, 562, 567, 570, 575, 582, 595, 719, 753, 816, 833, 839, 862, 893, 900, 906, 923, 924, 925, 928, 930, 932, 933, 934, 935, 958, 961, 966, 969, 973, 1025, 1031, 1036, 1050, 1113], "reli": [150, 183, 709, 812, 1031], "ecc": [150, 154], "nandecc": 150, "hw": 150, "80000": 150, "0x0": [150, 906], "0x60000": 150, "unlik": [150, 203, 254, 724, 731, 899, 1039, 1118, 1158], "intermedi": [150, 171, 465, 976, 1025], "nevertheless": [150, 151, 158, 270, 273, 802], "0x20000": 150, "fatload": 150, "80200000": 150, "20392": 150, "131072": [150, 760], "40000": 150, "0x40000": 150, "60000": 150, "incarn": [150, 158, 402, 708], "choic": [150, 151, 152, 175, 211, 224, 243, 432, 442, 452, 517, 565, 634, 719, 906, 960, 988, 1116], "finger": [150, 161, 432, 841, 899], "sw": [150, 515], "0x1e0000": 150, "1e0000": 150, "0x240000": 150, "275928": 150, "1966080": 150, "prompt": [150, 158, 161, 171, 203, 214, 242, 251, 834, 862, 864, 915, 1025, 1026, 1062, 1066, 1079, 1085, 1135], "280000": 150, "400000": [150, 907, 1105], "month": [151, 213, 223, 271, 275, 377], "met": [151, 424, 908], "microcontrol": [151, 393, 899, 907, 960], "clue": 151, "minim": [151, 153, 162, 171, 426, 432, 585, 884, 988, 999], "vxwork": 151, "ce": [151, 161, 990], "quit": [151, 153, 156, 278, 403, 418, 420, 638, 653, 803, 862, 863, 894, 899, 907, 950, 973, 988], "blob": [151, 267, 278, 355, 538, 802], "presenc": [151, 153, 454, 1158], "probabl": [151, 157, 183, 243, 273, 327, 453, 458, 563, 668, 802, 814, 862, 908, 960, 1036, 1050, 1113, 1116], "sooner": [151, 166, 428, 805], "chose": [151, 162, 229, 654, 886, 919, 988], "opinion": [151, 162, 183, 237, 753, 841, 1008], "stori": [151, 152, 153, 157, 158, 162, 179, 180, 212, 275, 413, 546, 564, 578, 777, 780, 803, 841, 902, 919], "unless": [151, 233, 239, 243, 285, 632, 665, 828, 884, 945, 1031, 1050, 1121], "hire": 151, "cheap": [151, 153, 445, 575, 668, 673, 709, 710, 807, 1153], "misl": 151, "posix": [151, 153, 176, 726, 733, 735, 754, 755, 839, 898, 928, 939, 945, 949, 951, 959, 967, 1050, 1167, 1168], "tell": [151, 152, 153, 156, 157, 158, 166, 180, 227, 425, 596, 828, 908, 976], "pitfal": [151, 235, 255, 256, 258, 315, 316, 335, 596, 675, 700, 701, 702, 720, 754, 755, 899, 1153], "seen": [151, 153, 158, 171, 184, 212, 368, 387, 425, 460, 470, 773, 798, 827, 947, 1107, 1111, 1145], "didn": [151, 152, 153, 162, 183, 187, 203, 213, 237, 306, 802, 881, 933, 1050, 1052, 1100, 1104], "rtoss": 151, "commonli": [151, 220, 243, 270, 273, 474, 735, 753, 788, 822, 864, 928, 976, 1125], "tear": [151, 256, 467, 516, 517, 518, 519, 580, 719, 771, 976, 1140], "notif": [151, 156, 175, 732, 903, 974], "dread": 151, "segment": [151, 153, 400, 509, 575, 698, 718, 960, 970], "fault": [151, 153, 348, 349, 400, 575, 718, 960], "arriv": [151, 794, 819, 958, 973], "handler": [151, 220, 226, 236, 239, 278, 285, 298, 436, 782, 784, 812, 944, 960, 972, 975], "pai": [151, 275, 431, 454, 833], "attent": [151, 207, 223, 231, 366, 387, 389, 418, 437, 447, 597, 602, 671, 702, 705, 794, 962, 997, 1123, 1145], "safe": [151, 220, 226, 227, 236, 239, 249, 428, 668, 710, 712, 720, 734, 915, 920, 944, 947, 952, 975], "pthread_": 151, "trick": [151, 208, 218, 221, 224, 248, 260, 284, 290, 403, 1100], "asynchron": [151, 220, 226, 236, 239, 306, 321, 923, 940, 943, 973, 974], "sigwait": [151, 973], "sigwaitinfo": 151, "sigtimedwait": 151, "caught": [151, 220, 226, 236, 239, 435, 585], "synchron": [151, 223, 229, 239, 246, 249, 264, 271, 279, 280, 281, 285, 301, 302, 305, 307, 313, 727, 733, 754, 755, 893, 898, 923, 939, 945, 946, 953, 959, 960, 970, 972, 975, 1158], "signalfd": [151, 928, 966, 1167, 1168], "Its": [151, 153, 156, 516, 891, 961], "emb": 151, "among": [151, 175, 183, 220, 226, 236, 239, 425, 719, 847, 906, 928, 934, 958, 974, 1024, 1108, 1109, 1133, 1156], "epol": [151, 942, 966, 970, 1168, 1170], "err": [151, 190, 210, 275, 316, 519, 616, 660, 662, 700, 708, 720, 752, 754, 755, 766, 796, 798, 833, 900, 902, 906, 1019, 1122], "naiv": [151, 171, 226, 229, 293, 309, 420, 453, 462, 554, 556, 570, 637, 718, 751, 810, 944, 964, 975, 1005, 1006, 1107, 1112, 1145, 1155], "intra": 151, "oss": 151, "synchronis": [151, 944, 1169], "pthread_mutex_init": [151, 732, 947], "critical_sect": 151, "closest": [151, 668], "pendant": [151, 555, 761], "expir": [151, 812, 926, 958, 960, 974], "sometim": [151, 166, 243, 392, 408, 432, 569, 659, 833, 840, 933, 945, 990, 996, 1027, 1133], "setitim": 151, "timer_cr": [151, 960], "drawback": [151, 402, 419, 424, 429, 473, 596, 915], "unfortun": [151, 152, 175, 212, 487, 899, 1118], "straightforward": [151, 230, 682, 720, 770, 1002, 1019, 1037, 1105], "nanosleep": [151, 734, 960], "timerfd_cr": [151, 926, 928, 1167, 1168], "conjunct": 151, "emul": [151, 256, 258, 276, 420, 429, 435], "stupid": [151, 153, 210, 226, 229, 231, 377, 402, 408, 426, 432, 442, 668, 723, 819, 881, 923, 1004, 1050], "screw": [151, 622], "otherwis": [151, 152, 237, 239, 243, 280, 285, 313, 326, 381, 392, 418, 428, 578, 616, 673, 702, 709, 724, 730, 773, 786, 794, 802, 810, 829, 830, 915, 944, 949, 955, 970, 999, 1028, 1031, 1048, 1050, 1069, 1080, 1145], "millisecond": [151, 220, 226, 236, 239, 721, 735, 810, 907], "etern": 151, "nowadai": [151, 153, 155, 156, 212, 279, 280, 301, 358, 376, 777, 812, 837, 840, 928, 974, 1113], "imagin": [151, 153, 422, 427, 428, 460, 473, 802, 841, 858, 899, 908, 947, 974], "moder": [151, 158, 218], "tri": [151, 152, 153, 162, 166, 172, 183, 231, 346, 517, 647, 730, 753, 899, 908, 961, 1153], "achiev": [151, 210, 243, 638, 958, 1011], "albeit": [151, 482, 708, 955, 1036, 1153], "lose": [151, 202, 213, 233, 236, 239, 249, 313, 1035], "wealth": 151, "socket": [151, 169, 190, 260, 753, 755, 835, 838, 898, 923, 927, 928, 939, 970, 974, 1128, 1167, 1168, 1170], "uart": [151, 424, 835], "previous": [151, 220, 226, 236, 239, 243, 974, 1153], "regardless": [151, 403, 907], "surpris": [151, 153, 267, 426, 631, 995, 1019], "alon": [151, 152, 153, 166, 276, 278, 432, 436, 677, 1040, 1107, 1158], "advantag": [151, 424, 575], "consid": [151, 153, 183, 187, 211, 220, 226, 236, 237, 239, 243, 267, 285, 306, 396, 423, 424, 432, 484, 638, 862, 906, 961, 1016, 1024, 1100, 1127, 1128, 1155], "regularli": [151, 429], "buffer": [151, 239, 264, 279, 280, 285, 301, 305, 364, 493, 498, 673, 818, 846, 920, 923, 924, 925, 926, 934, 973, 1050], "ttys0": 151, "stream": [151, 156, 158, 198, 224, 239, 264, 561, 578, 846, 900, 958, 1004, 1125, 1170], "eventfd": [151, 928, 966, 1167, 1168], "complic": [151, 152, 161, 190, 233, 243, 374, 393, 432, 457, 588, 671, 677, 697, 761, 798, 900, 908, 973, 976, 1004, 1116, 1155, 1158], "infrastructur": [117, 118, 124, 131, 151, 437, 758, 970], "unregist": [151, 469], "callback": [151, 187, 220, 226, 236, 239, 344, 688, 812, 821, 1116], "comfort": [151, 203, 338, 712, 906, 1125], "excit": 151, "hundr": [151, 153, 158, 261, 264, 928], "panel": 151, "deal": [151, 227, 426, 572, 802, 908, 1029, 1102, 1113, 1153, 1158], "touch": [151, 157, 183, 220, 226, 236, 239, 444, 847, 856, 861, 906, 929, 935, 1158], "stai": [151, 175, 187, 218, 973], "harder": [151, 724, 909], "buggi": [151, 570, 698, 710, 960], "examin": [151, 153, 428, 578, 719, 745, 862, 955], "debugg": [151, 220, 226, 236, 237, 239, 465, 1151, 1166], "gdb": [151, 203, 353, 1151], "remain": [151, 152, 162, 171, 184, 231, 239, 285, 523, 524, 536, 565, 613, 619, 650, 656, 661, 723, 731, 784, 915, 963, 974, 976, 1075, 1078, 1079, 1082, 1090, 1092, 1108, 1142], "spidev": 151, "bluntli": 151, "whether": [151, 171, 239, 243, 264, 275, 285, 367, 431, 522, 567, 600, 753, 798, 907, 1079, 1085, 1128], "deadlin": 151, "howev": [151, 161, 180, 243, 461, 775, 777, 899, 942, 944], "sched_setschedul": [151, 168, 963], "pthread_attr_setschedparam": [151, 963], "runnabl": [151, 800, 961, 962, 963], "prioriti": [151, 168, 239, 794, 800, 802, 804, 839, 961, 962, 970, 1169], "anymor": [151, 157, 162, 175, 212, 229, 444, 448, 577, 671, 673, 682, 706, 719, 720, 724, 837, 906, 949, 960, 962, 993, 1031, 1033, 1122], "potenti": [151, 445, 575, 682, 730, 919, 999, 1011, 1056], "harm": [151, 396, 424, 720, 722, 999], "polici": [151, 156, 168, 444, 460, 634, 638, 780, 961, 962, 1169], "sched_fifo": [151, 962, 963, 1148], "sched_rr": [151, 153, 963, 1148], "robin": [151, 218, 963, 1169], "manner": [151, 402, 802, 906], "troubl": 151, "trigger": [151, 346, 784, 788, 906, 1019, 1109], "certain": [151, 183, 190, 423, 428, 486, 509, 510, 688, 710, 798, 833, 846, 949, 976, 1024], "circumst": [151, 961], "deadlock": [151, 538, 730, 731, 794, 807, 947, 961, 962], "inspect": [151, 153, 220, 226, 236, 239, 257, 266, 277, 287, 302, 755, 832, 898, 919], "deploy": [151, 183, 187, 208, 294, 310, 449, 455, 755, 777, 1100], "uclibc": 151, "investig": 151, "spend": [151, 158, 172, 183, 187, 208, 211, 234, 260, 284, 306, 431, 1100], "browser": [152, 158, 170, 181, 214], "significantli": [152, 973], "decreas": [152, 153, 420, 862, 964], "week": [152, 167, 422], "forth": [152, 433, 833, 906, 919, 1031], "spare": 152, "volum": 152, "undertak": 152, "indirectli": [152, 719], "pocket": 152, "purchas": [152, 243], "corsair": 152, "120": [152, 170, 184, 194, 201, 216, 220, 223, 226, 231, 233, 236, 239, 243, 246, 249, 261, 264, 271, 281, 285, 291, 303, 307, 313, 579, 660, 968, 969], "overhaul": 152, "reserv": [152, 158, 175, 187, 223, 239, 264, 285, 375, 597, 766, 798, 858, 963, 1057], "livecd": 152, "ssd": [152, 431, 924], "vanish": 152, "gone": [152, 173, 223, 688, 720, 782, 805, 863, 952], "nowher": [152, 291, 530], "depart": 152, "unusu": 152, "cope": 152, "bet": 152, "themselv": [152, 402, 442, 482], "aggress": 152, "harddisk": 152, "treatment": [152, 243, 862, 993], "proud": 152, "120g": 152, "fresher": 152, "plenti": [152, 154, 436], "4g": [152, 153], "shouldn": [152, 660, 802, 1048], "hibern": 152, "fstab": 152, "room": [152, 158, 187, 302, 462, 613, 796, 908, 1113, 1156], "swapon": 152, "sda1": 152, "swapoff": 152, "overal": 152, "mitig": [152, 796], "temporari": [152, 161, 178, 220, 226, 229, 236, 239, 279, 280, 301, 305, 447, 519, 520, 668, 672, 673, 688, 702, 710, 753, 846, 976, 1002, 1083], "perfect": [152, 158, 166, 212, 260, 315, 356, 613, 669, 700, 723, 754, 755, 1002, 1055, 1100, 1131, 1153], "portag": [152, 802, 891], "openoffic": 152, "tmpdir": [152, 277, 306, 444, 519, 753, 997, 1095, 1097, 1133], "500m": 152, "2g": 152, "6g": 152, "throwawai": 152, "1tb": 152, "sdc1": [152, 833], "mnt": [152, 833, 841, 970], "emerg": 152, "umount": 152, "runnung": 152, "offend": [152, 154, 156, 166, 487, 960], "candid": [152, 171, 212, 432, 677, 697, 710, 999, 1071], "destin": [152, 383, 450, 555, 596, 671, 918, 925], "app": [152, 156, 960, 1112], "admin": [152, 158, 335, 913, 917], "cron": [152, 845, 1029], "rc": [152, 899], "grep": [152, 156, 162, 191, 193, 203, 257, 266, 287, 288, 755, 821, 826, 832, 837, 839, 844, 846, 858, 889, 892, 895, 898, 906, 908, 909, 945, 955, 960, 1116, 1157, 1159, 1164], "tune": [152, 153, 162, 432, 829, 830, 852, 854, 856, 863, 911, 1028], "exce": [152, 187, 763, 960, 970], "20m": [152, 899, 958], "compresscmd": 152, "bzip2": [152, 162, 191, 193, 827, 828, 990], "compressopt": 152, "compressext": 152, "missingok": 152, "sharedscript": 152, "postrot": 152, "reload": [152, 191], "endscript": 152, "adjac": [152, 342, 719, 773], "sda": [152, 906, 908], "cfq": 152, "noop": [152, 901], "believ": [152, 158, 899, 908, 936], "r5": 152, "menuconfig": [152, 162, 802, 906, 990], "xorg": [152, 156], "emerge_log_dir": 152, "unionf": 152, "fuse": [152, 154, 909, 919], "persist": [152, 168, 372, 376, 384, 454, 863, 907], "held": [153, 295, 298, 353, 760, 794, 807], "compani": [153, 156, 157, 158, 193, 203, 243, 269, 280, 295, 442, 460, 461, 841, 1055, 1102], "z\u00fcrich": [153, 352], "hardcor": 153, "attitud": [153, 158, 277], "began": 153, "dive": [153, 270, 273, 1114], "inevit": [153, 353, 712], "came": [153, 220, 224, 226, 236, 239, 859, 865, 906, 1031, 1083, 1153], "mb": [153, 840], "heap": [153, 415, 467, 567, 570, 622, 702, 719, 763, 788], "128": [153, 156, 170, 184, 194, 201, 207, 210, 216, 220, 223, 226, 229, 231, 233, 236, 239, 243, 246, 249, 261, 264, 271, 281, 285, 291, 303, 307, 313, 431, 575, 906, 934, 991, 1113], "dead": [153, 162, 432], "attempt": [153, 158, 181, 239, 354, 668, 670, 740, 1128], "reject": [153, 166], "proof": [153, 175, 420, 431, 435, 465, 549], "evid": 153, "fortun": [153, 158, 432, 444, 673, 1105], "overnight": [153, 218], "night": [153, 187], "instinct": 153, "defens": [153, 374, 375], "grow": [153, 596, 839, 992], "growth": [153, 223, 1057], "handi": [153, 1164], "tricki": 153, "alloca": 153, "essenti": [153, 180, 229, 276, 278, 650], "stdio": [153, 212, 224, 357, 358, 360, 364, 366, 368, 399, 425, 445, 571, 577, 839, 859, 906, 924, 925, 926, 928, 929, 932, 933, 934, 935, 947, 960, 966, 969, 973, 974, 976, 979, 988, 992, 994, 1050], "unistd": [153, 423, 520, 552, 859, 906, 922, 924, 925, 926, 928, 931, 932, 933, 934, 935, 938, 940, 943, 957, 960, 966, 969, 973], "stdlib": [153, 415, 429, 906, 924, 925, 926, 957, 966, 973], "size_t": [153, 415, 428, 463, 543, 552, 555, 598, 603, 609, 613, 619, 640, 654, 666, 671, 682, 683, 684, 685, 686, 749, 750, 751, 753, 761, 788, 920, 928, 938, 970, 973], "stack_growth": 153, "argc": [153, 409, 467, 506, 906, 932, 933, 934, 935, 940, 943, 957, 973, 994, 1140, 1145], "mem": [153, 169, 552, 766], "fprintf": [153, 390, 403, 920, 960, 994], "stderr": [153, 202, 211, 220, 226, 236, 239, 249, 257, 266, 267, 287, 288, 328, 335, 390, 403, 447, 755, 832, 843, 844, 898, 920, 928, 960, 994, 1029, 1042, 1050, 1159], "atoi": [153, 936], "printf": [153, 162, 212, 224, 357, 358, 360, 366, 368, 372, 398, 399, 402, 403, 425, 445, 571, 577, 839, 859, 922, 926, 966, 973, 974, 976, 988, 992, 994, 1039, 1045], "getpid": [153, 973], "memset": [153, 925, 960, 969, 973], "24299": 153, "vsz": 153, "rss": 153, "3944": [153, 226], "986": [153, 223, 226, 239, 246, 249, 264, 271, 281, 285, 307, 313, 893], "188": [153, 184, 201, 210, 223, 226, 231, 233, 236, 239, 243, 246, 261, 264, 271, 281, 285, 291, 303, 307], "320": [153, 226, 236, 239, 264, 271, 285, 291, 303], "exact": [153, 203, 243, 332, 396, 707, 724, 775, 777, 1128], "glibc": [153, 782, 988, 990, 991, 1148], "presum": 153, "assum": [153, 239, 243, 285, 426, 573, 734, 780, 862, 906, 908, 919, 991, 1060, 1135], "writabl": [153, 426, 847, 862, 934], "eater": [153, 964], "1k": 153, "furthermor": 153, "188k": 153, "anyth": [153, 157, 158, 183, 210, 226, 230, 253, 275, 276, 342, 442, 453, 457, 474, 509, 584, 653, 673, 749, 750, 751, 899, 911, 919, 923, 929, 958, 992, 997, 998, 999, 1042, 1050, 1105, 1122, 1126], "proce": [153, 161, 240, 273, 341, 519], "million": [153, 189, 460, 638, 802, 1002], "24908": 153, "4800": [153, 226], "1200": [153, 226, 613, 1122], "1044": [153, 226], "1376": [153, 226], "grown": [153, 156], "reflect": [153, 802, 961, 991, 992, 1019], "greedi": 153, "24960": 153, "8mb": 153, "barrier": [153, 418, 719, 734, 786], "ulimit": [153, 839], "8192": [153, 226, 403, 839], "8000000": 153, "25018": 153, "11632": [153, 226], "2908": [153, 226], "7876": [153, 226], "8236": [153, 226], "demand": [153, 156, 173, 273, 426, 802, 853, 855, 1004, 1039], "magic": [153, 155, 409, 444, 688, 761, 802, 1004, 1133], "bother": [153, 919, 923], "pthread_attr_setstacks": 153, "2mb": 153, "rlimit_stack": 153, "pthread_creat": [153, 945, 960], "nthread": 153, "act": [153, 210, 527, 597, 908, 919, 922, 974, 1010], "shut": [153, 770, 802], "sit": [153, 229, 341, 472, 846, 906, 907, 917, 919, 923, 973, 1116], "stack_limit": 153, "thread_func": 153, "arg": [153, 170, 184, 210, 211, 220, 224, 226, 236, 237, 239, 243, 249, 264, 285, 303, 445, 761, 945, 997, 1001, 1022, 1029, 1052, 1142, 1148], "pthread_attr_t": [153, 945, 963], "attr": [153, 168, 945, 947, 949, 963, 969, 970], "pthread_attr_init": 153, "ld": [153, 451, 455, 546, 564, 637, 780, 802, 829, 830, 847, 860, 884, 966, 976, 977, 988, 993], "strerror": [153, 226, 920, 929, 960, 973], "p_attr": 153, "pthread_t": [153, 945, 960, 963], "rv": [153, 199, 261], "31524": 153, "825840": 153, "206460": 153, "819936": 153, "1404": [153, 226], "800mb": 153, "writeabl": [153, 858, 881], "worth": [153, 802, 908, 1028, 1099, 1153, 1168], "physic": [153, 156, 191, 198, 279, 280, 301, 305, 433, 638, 786, 838, 907, 926, 930, 960, 961], "eaten": 153, "field": [153, 156, 158, 170, 175, 181, 217, 224, 231, 239, 249, 252, 269, 271, 275, 285, 327, 346, 359, 741, 743, 837, 842, 861, 895, 1046, 1057, 1078, 1107, 1108], "alleg": 153, "wast": [153, 161, 162, 428, 715, 732, 1113], "moment": [153, 187, 428, 460, 462, 656, 705], "771": [153, 226, 313], "766604": 153, "aha": [153, 173, 184, 320, 765, 782, 907, 1113, 1140], "hasn": [153, 156, 157, 166, 796, 819, 1030], "effect": [153, 157, 178, 336, 337, 372, 422, 432, 484, 631, 757, 786, 858, 863, 906, 918, 919, 961, 975, 1000, 1012, 1033, 1079, 1107, 1127, 1135], "4096": [153, 170, 226, 753, 829, 830, 899, 906, 907, 908, 919, 942, 969], "1026": [153, 226], "invalid": [153, 194, 201, 231, 236, 237, 239, 243, 246, 264, 271, 278, 285, 303, 307, 313, 331, 346, 429, 487, 498, 501, 555, 570, 653, 654, 655, 668, 671, 677, 718, 720, 734, 760, 949, 1052], "insist": [153, 183, 577, 1142], "pthread_stack_min": 153, "16384": [153, 158, 226, 906, 907, 908], "1125": 153, "7840": [153, 226], "1960": [153, 226], "1936": [153, 226], "risk": [153, 460, 899, 917, 962, 1027], "512": [153, 226, 271, 303, 433, 839], "513": [153, 226, 271, 719], "2212": [153, 226], "4210920": 153, "1052730": 153, "4205016": 153, "4576": [153, 226], "misunderstand": [153, 728], "obvious": [153, 154, 156, 162, 174, 358, 422, 426, 453, 482, 546, 572, 578, 616, 631, 632, 660, 671, 705, 709, 714, 753, 800, 802, 815, 838, 839, 845, 859, 907, 908, 918, 934, 935, 962, 974, 976, 992, 1013, 1016, 1155], "overcommit": 153, "kept": [153, 158, 183, 189, 403, 418, 839, 900, 976, 1004], "plai": [153, 161, 203, 420, 438, 802, 899, 1017, 1020, 1107], "stutter": 153, "4353": 153, "red": [153, 154, 199, 201, 207, 215, 227, 230, 243, 275, 328, 616, 899, 1026, 1116], "chili": 153, "pepper": 153, "overli": [153, 845, 1003], "adob": 153, "riddanc": 153, "8462": [153, 226], "3284640": 153, "821160": 153, "3278736": 153, "3064580": 153, "lie": [153, 710], "constraint": [153, 161, 677, 680, 682, 908], "800": [153, 194, 226, 613, 1060], "4000000": 153, "11338": [153, 226], "900": [153, 226, 613], "12156": [153, 226], "shrink": [153, 596], "inadvert": 153, "3mb": 153, "nois": 153, "henc": [153, 158, 519, 573, 617, 924, 928, 976], "14386": [153, 226], "child_stack": 153, "0x7f5813f22ff0": 153, "clone_vm": 153, "clone_f": 153, "clone_fil": 153, "clone_sigha": 153, "14413": 153, "mmap": [153, 968, 970, 1167], "8392704": 153, "prot_read": [153, 969], "prot_writ": [153, 969], "map_priv": [153, 969], "map_anonym": 153, "map_stack": 153, "0x7fd14f9af000": 153, "mprotect": 153, "0x7fd14f1ae000": 153, "prot_non": 153, "placehold": [153, 488, 520, 675, 724, 908], "proc": [153, 223, 239, 246, 249, 264, 271, 281, 285, 307, 313, 765, 782, 784, 786, 802, 803, 928, 945, 969, 973, 1166], "7fd14f1af000": 153, "7fd14f9af000": 153, "00000000": 153, "7fd14f9b0000": 153, "topmost": [153, 1133], "pseudo": [153, 171], "redund": [153, 403, 432], "smap": 153, "7fd14f1ae000": 153, "pss": 153, "shared_clean": 153, "shared_dirti": 153, "private_clean": 153, "private_dirti": 153, "referenc": [153, 171, 194, 302, 305, 459, 577, 719, 720, 721, 936, 1142], "anonym": [153, 462, 775, 969], "anonhugepag": 153, "kernelpages": 153, "mmupages": 153, "miss": [153, 172, 179, 181, 183, 199, 226, 231, 236, 243, 302, 305, 335, 392, 437, 438, 446, 448, 456, 518, 549, 570, 661, 697, 777, 780, 926, 960, 978, 1001], "shallow": [153, 223, 235, 663], "extent": [153, 183, 190, 203, 332, 423, 428, 802, 976, 1024], "8k": [153, 846], "swamp": 153, "panic": [153, 166, 810, 862], "meaningless": 153, "global": [153, 154, 172, 178, 183, 187, 192, 196, 199, 212, 220, 223, 226, 229, 230, 236, 239, 242, 253, 256, 264, 276, 279, 281, 285, 290, 294, 301, 305, 306, 310, 311, 312, 319, 330, 335, 381, 398, 404, 410, 414, 417, 421, 425, 428, 430, 434, 435, 439, 440, 448, 449, 454, 467, 473, 482, 516, 517, 518, 519, 560, 567, 580, 662, 700, 703, 718, 719, 729, 752, 754, 755, 771, 908, 944, 947, 951, 952, 954, 976, 997, 1000, 1008, 1010, 1043, 1057, 1100, 1128, 1136, 1140], "dig": [153, 155], "thorough": [153, 162, 1023, 1107, 1126, 1168], "counter": [153, 236, 360, 366, 367, 376, 432, 437, 438, 562, 671, 969], "delai": [153, 220, 226, 236, 239, 907], "substanti": 153, "overcom": [153, 302, 335, 422], "beforehand": 153, "mlock": [153, 1167], "mlockal": [153, 1167], "contradictori": 153, "lengthi": 153, "felt": 153, "lucki": [153, 570], "agre": [153, 183, 187, 341, 470, 961, 1106], "glad": 153, "outdat": [154, 162, 802, 1128], "halfwai": 154, "procedur": [154, 162, 368, 712, 899, 1057], "thunderbolt": 154, "hdmi": 154, "unplug": 154, "oop": [154, 1152], "feb": [154, 199, 201, 203, 332, 377, 884, 942, 988], "derefer": [154, 575], "0000000000000080": 154, "supervisor": 154, "error_cod": 154, "0x0000": 154, "pgd": 154, "p4d": 154, "0000": [154, 239, 285, 908], "smp": [154, 203, 210, 332], "pti": 154, "281": [154, 223, 226, 231, 233, 236, 239, 243, 246, 264, 271, 285, 291, 303, 313], "comm": 154, "kworker": 154, "taint": 154, "fc31": 154, "asustek": 154, "zenbook": 154, "ux391ua": 154, "bio": 154, "204": [154, 184, 210, 223, 226, 231, 233, 236, 239, 243, 246, 249, 261, 264, 271, 285, 291, 303, 307, 313, 467], "workqueu": [154, 755, 779, 804, 817, 820, 898], "ucsi_connector_chang": 154, "typec_ucsi": 154, "0010": 154, "ucsi_displayport_remove_partn": 154, "0xa": 154, "0x20": [154, 792], "c7": [154, 161, 1128], "83": [154, 161, 170, 184, 194, 199, 201, 207, 210, 216, 220, 223, 226, 231, 233, 236, 239, 243, 246, 249, 252, 261, 264, 268, 271, 281, 285, 291, 303, 307, 313, 330, 753, 803, 1104, 1105], "5b": [154, 161], "e9": [154, 161], "6d": [154, 161, 359, 360], "f3": [154, 161], "3d": [154, 161, 172], "fb": [154, 161], "2e": [154, 161, 664], "0f": [154, 161], "1f": [154, 161], "84": [154, 161, 170, 184, 194, 199, 201, 207, 210, 216, 220, 223, 226, 231, 233, 236, 239, 243, 246, 249, 252, 261, 264, 271, 281, 285, 291, 303, 307, 313, 330, 335, 340, 1104, 1105], "90": [154, 161, 170, 194, 199, 201, 207, 210, 216, 223, 226, 231, 233, 239, 243, 246, 249, 252, 261, 264, 268, 271, 281, 285, 291, 303, 307, 313, 330, 444, 1104, 1105, 1133], "85": [154, 161, 170, 184, 194, 199, 201, 207, 210, 216, 223, 226, 231, 233, 239, 243, 246, 249, 252, 261, 264, 268, 271, 281, 285, 291, 303, 307, 313, 330, 977, 978, 1104, 1105, 1140], "ff": [154, 161, 353, 742, 908], "8b": 154, "78": [154, 161, 184, 194, 199, 201, 207, 210, 216, 223, 226, 231, 233, 239, 243, 246, 252, 261, 264, 268, 271, 281, 285, 291, 303, 307, 313, 330, 516, 1104, 1105], "c6": 154, "rsp": [154, 223, 1057], "0018": 154, "ffff9daa002d3df8": 154, "eflag": 154, "00010202": 154, "rax": 154, "0000000000000008": 154, "rbx": 154, "ffff901f4ce35710": 154, "rcx": 154, "0000000000003c7d": 154, "rdx": 154, "0000000000003c7c": 154, "rsi": [154, 862], "0000000000000001": 154, "rdi": 154, "rbp": 154, "0000000000000000": [154, 994], "r08": 154, "ffffffffbc7dbe60": 154, "r09": 154, "ffff9daa002d3cf0": 154, "r10": 154, "ffff901f54951a18": 154, "r11": 154, "ffff901f56a68a78": 154, "r12": 154, "r13": 154, "r14": 154, "ffff901f4ce35860": 154, "r15": 154, "ffff901f4ce355d8": 154, "ffff901f56a00000": 154, "knlg": 154, "cr0": 154, "0000000080050033": 154, "cr2": 154, "cr3": 154, "000000028fbbc003": 154, "cr4": 154, "00000000003606f0": 154, "trace": [154, 173, 220, 226, 236, 239, 447, 792], "ucsi_unregister_altmod": 154, "0x77": 154, "0x90": [154, 792], "ucsi_unregister_partn": 154, "0x13": 154, "0x30": [154, 384], "0x247": 154, "0x340": 154, "process_one_work": 154, "0x1b5": 154, "0x360": 154, "worker_thread": 154, "0x50": 154, "0x3c0": 154, "kthread": 154, "0xf9": 154, "0x130": 154, "kthread_park": 154, "ret_from_fork": 154, "0x35": 154, "0x40": [154, 907], "cdc_ether": 154, "usbnet": 154, "r8152": 154, "mii": 154, "rc_cec": 154, "typec_displayport": 154, "uinput": 154, "rfcomm": 154, "ccm": 154, "xt_checksum": 154, "xt_masquerad": 154, "nf_nat_tftp": 154, "nf_conntrack_tftp": 154, "tun": [154, 159, 174, 178, 194, 201, 240, 1150, 1151, 1152], "bridg": 154, "stp": 154, "llc": 154, "nf_conntrack_netbios_n": 154, "nf_conntrack_broadcast": 154, "xt_ct": 154, "ip6t_reject": 154, "nf_reject_ipv6": 154, "ip6t_rpfilt": 154, "ipt_reject": 154, "nf_reject_ipv4": 154, "xt_conntrack": 154, "ebtable_nat": 154, "ebtable_brout": 154, "ip6table_nat": 154, "ip6table_mangl": 154, "ip6table_raw": 154, "ip6table_secur": 154, "iptable_nat": 154, "nf_nat": 154, "iptable_mangl": 154, "iptable_raw": 154, "iptable_secur": 154, "nf_conntrack": 154, "nf_defrag_ipv6": 154, "nf_defrag_ipv4": 154, "libcrc32c": 154, "ip_set": 154, "nfnetlink": 154, "ebtable_filt": 154, "ebtabl": 154, "ip6table_filt": 154, "ip6_tabl": 154, "iptable_filt": 154, "cmac": 154, "bnep": 154, "sunrpc": 154, "vfat": [154, 802, 833], "snd_hda_codec_hdmi": 154, "snd_soc_skl": 154, "snd_soc_sst_ipc": 154, "snd_soc_sst_dsp": 154, "snd_hda_ext_cor": 154, "x86_pkg_temp_therm": 154, "intel_powerclamp": 154, "snd_soc_acpi_intel_match": 154, "coretemp": 154, "snd_soc_acpi": 154, "kvm_intel": 154, "snd_soc_cor": 154, "snd_hda_codec_realtek": 154, "snd_hda_codec_gener": 154, "snd_compress": 154, "ledtrig_audio": 154, "ac97_bu": 154, "snd_pcm_dmaengin": 154, "iwlmvm": 154, "snd_hda_intel": 154, "snd_intel_dspcfg": 154, "irqbypass": 154, "snd_hda_codec": 154, "uvcvideo": 154, "mac80211": 154, "btusb": 154, "itco_wdt": 154, "btrtl": 154, "crct10dif_pclmul": 154, "videobuf2_vmalloc": 154, "itco_vendor_support": 154, "videobuf2_memop": 154, "mei_hdcp": 154, "btbcm": 154, "btintel": 154, "crc32_pclmul": 154, "intel_rapl_msr": 154, "snd_hda_cor": 154, "videobuf2_v4l2": 154, "libarc4": 154, "ghash_clmulni_intel": 154, "videobuf2_common": 154, "snd_hwdep": 154, "intel_cst": 154, "bluetooth": [154, 1157, 1170], "snd_seq": 154, "asus_nb_wmi": 154, "iwlwifi": 154, "videodev": 154, "snd_seq_devic": 154, "intel_uncor": 154, "asus_wmi": 154, "snd_pcm": 154, "intel_rapl_perf": 154, "cdc_acm": 154, "sparse_keymap": 154, "wmi_bmof": 154, "ecdh_gener": 154, "cfg80211": 154, "intel_wmi_thunderbolt": 154, "pcspkr": 154, "snd_timer": 154, "snd": 154, "i2c_i801": 154, "soundcor": 154, "joydev": 154, "idma64": 154, "intel_xhci_usb_role_switch": 154, "mei_m": 154, "ucsi_acpi": 154, "processor_thermal_devic": 154, "intel_rapl_common": 154, "mei": [154, 226], "intel_soc_dts_iosf": 154, "intel_pch_therm": 154, "typec": 154, "int3403_therm": 154, "int340x_thermal_zon": 154, "int3400_therm": 154, "acpi_thermal_rel": 154, "acpi_pad": 154, "binfmt_misc": 154, "ip_tabl": 154, "rfkill": 154, "i915": 154, "i2c_algo_bit": 154, "drm_kms_helper": 154, "hid_multitouch": 154, "drm": 154, "nvme": 154, "crc32c_intel": 154, "nvme_cor": 154, "serio_raw": 154, "wmi": 154, "i2c_hid": 154, "76d248e576fee192": 154, "deferenc": 154, "dp": 154, "ness": [154, 190, 275], "ucsi": 154, "displayport": 154, "linu": [154, 794, 802], "typec_altmod": 154, "alt": [154, 184, 862, 890, 1150, 1157, 1164], "ucsi_dp": 154, "typec_altmode_get_drvdata": 154, "271": [154, 223, 226, 231, 233, 239, 264, 271, 285, 291, 313], "bugzilla": 154, "1785972": 154, "john": [154, 432], "stebbin": 154, "roundtrip": 154, "wiki": [154, 168, 279, 280, 301, 305, 775, 802], "explod": [154, 777, 1039], "jwboyer": [154, 775], "f31": 154, "quiet": [154, 187, 1128], "4382f76bc8ef9fce5e7e96d4cdb0c073564ad249": 154, "josh": 154, "boyer": 154, "fedoraproject": [154, 775], "mon": 154, "rpmdevtool": [154, 775], "koji": 154, "rpmdev": 154, "setuptre": 154, "spec": [154, 239, 775, 798], "srpm": 154, "unam": [154, 775, 780, 798, 802, 803], "correspond": [154, 166, 239, 357, 400, 907, 984, 992, 1031, 1067, 1102, 1128], "kenrel": 154, "ivh": [154, 156], "crypto": 154, "ccp": 154, "sha": 154, "drop": [154, 166, 302, 463, 482, 491, 712, 719, 721, 821, 969, 974], "edit": [154, 156, 157, 166, 198, 203, 239, 267, 356, 516, 775, 802, 907, 1055, 1126, 1166], "zips": 154, "ko": [154, 771, 780, 802], "endif": [154, 400, 402, 403, 445, 447, 452, 453, 546, 555, 564, 570, 572, 573, 613, 671, 672, 718, 734, 976, 992, 994, 1142], "buildid": [154, 775, 977], "primary_target": 154, "825": [154, 226], "asoc": 154, "patch601": 154, "patch999": 154, "roedel": [154, 517, 520, 978, 991, 1087, 1135], "patienc": [154, 183, 1024], "oldpackag": 154, "uefi": [154, 161], "market": [155, 158, 223, 267, 275, 1057], "intent": [155, 157, 161, 162, 465, 720, 724, 775, 932, 934, 935], "remark": 155, "organ": [155, 180, 398, 433, 444, 472, 613, 838, 924, 991], "numer": [155, 172, 188, 190, 192, 226, 236, 239, 243, 275, 285, 447, 619, 919], "enforc": [155, 213, 420, 442, 577, 761, 908], "cname": [155, 157], "propag": [155, 374, 432, 448, 453, 456, 457, 638, 688, 909], "1100": [155, 220, 226, 243, 613], "3600": [155, 226], "185": [155, 184, 201, 223, 226, 231, 233, 239, 243, 246, 249, 252, 261, 264, 271, 281, 285, 291, 303, 307, 313], "199": [155, 184, 201, 223, 226, 231, 233, 236, 239, 243, 246, 264, 271, 281, 285, 291, 303, 307, 313, 802, 1057], "109": [155, 170, 184, 194, 199, 201, 207, 220, 223, 226, 231, 233, 239, 243, 246, 249, 261, 264, 268, 271, 281, 285, 291, 303, 307, 313, 330, 335, 340], "153": [155, 170, 184, 194, 201, 210, 223, 226, 231, 233, 239, 243, 246, 249, 252, 261, 264, 281, 285, 291, 303, 307, 313, 342], "111": [155, 170, 172, 184, 194, 201, 207, 223, 226, 231, 233, 236, 239, 243, 246, 249, 261, 264, 268, 271, 281, 285, 291, 303, 307, 313, 330], "108": [155, 170, 184, 194, 201, 207, 210, 216, 223, 226, 231, 233, 236, 239, 243, 246, 249, 261, 264, 268, 271, 281, 285, 291, 303, 307, 313, 330], "strip": [155, 174, 183, 217, 219, 220, 223, 231, 235, 236, 241, 243, 249, 252, 264, 271, 281, 285, 291, 307, 313, 335, 344, 976, 977, 979, 988, 1007, 1080, 1125], "breviti": 155, "fqdn": 155, "qualifi": [155, 426, 572, 573, 710], "surf": 155, "consequenti": [155, 158, 161, 189, 833, 906, 996, 1017, 1142], "microsoft team": 156, "chrome": 156, "google chrom": 156, "confer": [156, 158, 187, 211, 234, 260, 306, 740], "virtual classroom": 156, "classroom": [156, 158], "remote train": 156, "dr": [156, 991], "chromium": [156, 191], "frequent": [156, 158, 166, 183, 243, 887, 907, 1024, 1045], "face": [156, 158, 183, 233, 243, 726], "travel": [156, 862], "corona": [156, 158, 183], "viru": [156, 158], "conferenc": 156, "dramat": 156, "march": 156, "spent": [156, 431, 735, 998, 1106], "weston": 156, "shown": [123, 156, 189, 326, 884, 970, 1113], "invest": [156, 158, 162, 243], "smooth": 156, "layer": [156, 256, 258, 276, 761, 833, 907, 919, 929, 938], "cornercas": 156, "hover": 156, "sharer": 156, "gdm": [156, 223, 239, 246, 249, 264, 271, 281, 285, 307, 313, 837, 893], "daemon": [156, 203, 223, 239, 246, 249, 264, 271, 281, 285, 307, 313, 438, 837, 840, 887, 888, 891, 893, 909, 917, 922, 924, 954, 1010], "uncom": [156, 487, 488, 682, 906], "waylanden": 156, "defaultsess": 156, "deb": [156, 288], "5153": 156, "thank": [156, 237, 264, 674, 710, 784, 944, 1105], "marjan": 156, "javorka": 156, "fashion": 156, "efl": [156, 821, 909, 960], "61762": 156, "1670": [156, 226], "80": [156, 161, 170, 184, 194, 199, 201, 207, 210, 216, 220, 223, 226, 231, 233, 239, 243, 246, 249, 252, 261, 264, 268, 271, 281, 285, 291, 303, 307, 313, 330, 436, 509, 884, 960, 990, 1002, 1057, 1104, 1105, 1133], "947213": 156, "61764": 156, "98775": 156, "zygot": 156, "sandbox": [156, 183, 187, 237, 251, 269, 1100, 1135, 1136], "61800": 156, "239615": 156, "gpu": 156, "sharedarraybuff": 156, "sparerendererforsiteperprocess": 156, "prefer": [156, 233, 243, 376, 432, 474, 578, 665, 673, 677, 794, 846, 1052], "kaaaaaaaaacaaabaaqaaaaaaaaaaagaaaaaaaaaaaaaiaaaaaaaaaagaaaaaaaaa": 156, "token": [156, 213, 229, 362, 402, 837, 950, 1055, 1150], "4327801531638606376": 156, "61825": 156, "420846": 156, "autoplai": 156, "gestur": 156, "12993561460135093079": 156, "asar": 156, "agent": [156, 915, 1107], "mozilla": [156, 281, 884], "applewebkit": 156, "537": [156, 226, 313], "khtml": 156, "gecko": 156, "microsoftteam": 156, "preview": [156, 241, 294, 310, 449, 755], "3497": 156, "safari": 156, "webview": 156, "preload": 156, "preload_notif": 156, "fff": 156, "eyjjci5jb21wyw55ijoirwxly3ryb24ilcjjci5kdw1wcyi6iiisimnylmvuywjszwqiomzhbhnllcjjci5wcm9kdwn0ijoirwxly3ryb24ilcjjci5zzxnzaw9uijoiiiwiy3iudxjsijoiiiwiy3iudmvyc2lvbii6iny0ljiumtiifq": 156, "raster": 156, "v8_context_snapshot_data": 156, "v8_natives_data": 156, "101": [156, 170, 184, 194, 201, 207, 216, 223, 226, 231, 233, 236, 239, 243, 246, 252, 261, 264, 271, 281, 285, 291, 303, 307, 313, 330, 335, 340, 1035, 1104, 1105], "msteam": 156, "notificationsmanag": 156, "61973": 156, "790018": 156, "432557619363765409": 156, "mainwindow": 156, "62033": 156, "1259666": 156, "5585537623314398260": 156, "pluginhost": 156, "wish": [156, 158, 166, 187, 436, 445, 584, 651, 732, 1023, 1118, 1119, 1135], "insan": [156, 295, 833], "killal": [156, 964, 974], "63500": 156, "298385": 156, "63502": 156, "blood": 156, "pressur": [156, 220], "rise": [156, 510, 784, 942, 943, 960], "wipe": 156, "logout": 156, "pop": [156, 169, 231, 233, 246, 261, 271, 281, 291, 303, 403, 594, 597, 732, 1022, 1047], "morn": [156, 192, 202, 220, 229, 231, 237, 306, 1062], "webassembli": 156, "blow": 156, "water": [156, 275], "tab": [156, 157, 170, 239, 267, 285, 326, 377, 802, 862, 1044, 1069, 1159], "firefox": [156, 438, 945, 974, 1112], "dom": [156, 215], "gave": [156, 158, 171, 183, 904, 1105], "3987": 156, "132": [156, 170, 172, 184, 194, 201, 210, 223, 226, 231, 233, 236, 239, 243, 246, 249, 261, 264, 281, 285, 291, 303, 307, 313], "plagu": 156, "invent": [156, 370, 402, 462, 484, 485, 1155, 1156], "game": [156, 223, 239, 246, 249, 264, 271, 281, 285, 302, 307, 313, 858, 922, 1038], "pornwatch": 156, "teamview": 156, "webpag": 157, "properli": [157, 656, 734, 802, 988], "retrospect": 157, "jekyl": 157, "bend": [157, 514], "companion": [157, 275], "pollut": [157, 403, 426, 432, 465, 661, 978], "distinguish": [157, 571, 724, 834, 988], "handwritten": [157, 255, 256, 258, 315, 316, 570, 670, 700, 701, 702, 718, 754, 755], "remind": 157, "pile": [157, 166, 472, 974], "incomprehens": [157, 237, 634, 740, 1153], "blame": [157, 908], "technic": [157, 158, 180, 316, 457, 461, 561, 616, 660, 1004, 1113, 1145], "nojekyl": 157, "eof": [157, 207, 210, 229, 230, 246, 327, 364, 365, 366, 367, 380, 644, 804, 818, 924, 925, 928, 934, 966, 973, 1026], "doctyp": 157, "constel": 157, "machineri": [157, 279, 280, 301, 305], "eventu": [157, 166, 435, 942, 991], "click": [157, 158], "cri": [157, 723], "haven": [157, 158, 183, 538, 899, 906], "subdomain": 157, "afterthough": 157, "preserv": [157, 168, 189, 246, 420, 829, 830, 864, 918, 1125], "_build": 157, "restor": [157, 166, 173, 220, 226, 236, 239, 775, 974, 997], "shini": 157, "nervous": 157, "marketinges": [157, 267], "familiar": [157, 183, 239, 337, 338, 727, 907, 1024], "big blue button": 158, "strongli": [158, 220, 226, 236, 239, 270, 273, 316, 518, 616, 662, 700, 752, 754, 755, 1153], "shame": 158, "pursu": 158, "collabor": [158, 168, 175, 180, 187, 260], "moreov": 158, "focus": 158, "teach": [158, 183, 353], "trust": [158, 161, 223, 279, 280, 301, 668, 915, 917, 1057, 1128, 1145], "benefit": [158, 270, 273, 276, 278, 426, 1095], "beat": [158, 233, 243, 740, 1099], "talent": [158, 353], "whiteboard": [158, 969], "chat": 158, "breakout": [158, 906], "stabil": [158, 467, 908, 1129], "thousand": [158, 264, 313, 833], "curiou": [158, 1100], "curious": 158, "licens": [158, 264, 454, 758, 1026, 1055], "lgpl": 158, "blindsid": 158, "govern": [158, 788, 928], "html5": 158, "exception": [158, 908], "modern": [158, 162, 164, 175, 178, 183, 190, 212, 234, 448, 722, 755, 762, 764, 769, 772, 779, 783, 793, 804, 806, 811, 817, 820, 823, 898, 976, 995, 1025, 1100, 1126, 1154, 1156], "heavili": [158, 180, 183, 267, 269, 353, 518, 713, 802, 899, 908, 1024], "webrtc": 158, "pain": [158, 802, 979, 988], "death": [158, 210, 974], "firewal": [158, 191, 917], "busi": [158, 302, 442, 452, 577, 807, 819, 831, 866, 868, 873, 874], "indefinit": [158, 650], "vm": [158, 338], "encrypt": [158, 837, 858, 909, 917, 918, 919, 1078, 1116], "bbb": [158, 170, 231, 249], "provis": 158, "gcp": 158, "expertis": [158, 519], "n1": [158, 184, 243], "accordingli": [158, 191, 506, 516, 519, 549, 906, 908, 993, 1028, 1031, 1125], "500gb": 158, "10gb": 158, "spars": [158, 233, 243, 580, 582, 798], "mandatori": [158, 908, 1025], "issuanc": 158, "udp": [158, 900, 902, 1168, 1170], "32768": 158, "clickabl": 158, "7443": 158, "755": [158, 226, 335, 847, 1027], "xenial": 158, "220": [158, 184, 199, 210, 220, 223, 226, 231, 233, 239, 243, 246, 261, 264, 271, 281, 285, 291, 303, 307, 313], "hostnam": [158, 1128], "certbot": 158, "greenlight": 158, "letsencrypt": 158, "minor": [131, 158, 162, 220, 226, 236, 239, 269, 761, 768, 833], "docker": [158, 162], "bundl": [158, 181, 1112, 1128], "rake": 158, "succesfulli": 158, "screenshot": [158, 181, 335], "tryout": [158, 908], "kid": [158, 203, 221, 321], "layman": 158, "knew": [158, 187, 675, 993], "reproduc": [158, 161, 277, 429, 908], "thought": [158, 403, 715, 802, 1113], "fred": [158, 900, 1000], "dixon": 158, "leader": 158, "aka": [158, 203, 226, 229, 231, 251, 538, 722], "canva": 158, "bradlei": 158, "schreffler": 158, "upfront": 158, "far": [158, 183, 191, 212, 218, 226, 229, 269, 372, 387, 408, 409, 411, 422, 426, 431, 456, 585, 595, 660, 723, 780, 844, 908, 1002, 1024, 1105, 1153], "exhaust": [158, 958, 961, 1004], "heard": 158, "tast": [158, 362, 578, 634, 660, 703, 723], "era": 158, "budget": [158, 207], "advertis": [158, 713], "viabl": 158, "shout": [158, 702, 705], "loud": [158, 381, 596, 664, 702, 708, 709], "gmunden": [159, 353], "traunse": 159, "hike": [159, 160, 187], "bergsteigen": [159, 160], "climb": [159, 160, 187, 218], "klettern": [159, 160], "outdoor": [159, 160], "donnerstag": 159, "geistigen": 159, "ersch\u00f6pfung": 159, "k\u00f6rperlich": 159, "erfahren": [159, 160, 353, 1151], "dazu": [159, 168, 169, 174, 178, 195, 335, 340, 353, 1149, 1163, 1171], "ausgesucht": [159, 160], "zwar": [159, 1148, 1152, 1164], "lo": [159, 160, 201, 239, 275, 514, 782, 1012], "gmundner": [159, 187], "h\u00fctte": [159, 160, 187], "n\u00e4chsten": 159, "naturfreundesteig": 159, "zusammenfassung": [159, 165], "wunsch": 159, "vollend": 159, "erf\u00fcllt": 159, "unversichert": 159, "unmarkiert": 159, "leicht": [159, 195, 1148, 1163, 1169, 1170], "panik": 159, "geraten": 159, "h\u00e4nde": [159, 160], "braucht": [159, 160], "fingern\u00e4gel": 159, "z\u00e4hne": 159, "mitunt": [159, 160, 1160], "verkoffert": 159, "augen": [159, 246], "offenhalten": 159, "jeder": [159, 1147, 1150, 1151, 1170], "spur": 159, "folgen": [159, 195, 196, 1150, 1163], "fr\u00fcher": [159, 240], "umdrehen": 159, "sackgass": 159, "erweist": 159, "vielleicht": [159, 184, 195, 246, 1152, 1163], "weggehen": 159, "stirnlamp": 159, "mitnehmen": 159, "war": [159, 169, 174, 176, 184, 195, 199, 353, 442, 1148, 1150, 1152, 1163, 1169, 1170], "sch\u00f6nsten": 159, "jemal": 159, "zuletzt": 159, "traumhaften": 159, "gegend": 159, "immer": [159, 160, 174, 178, 184, 186, 199, 271, 1148, 1152, 1159, 1169], "griffweit": 159, "erscheint": 159, "paar": [159, 169, 184, 186, 194, 201, 233, 335, 340, 1148, 1171], "eindr\u00fcck": 159, "m\u00fcder": 159, "abklatsch": 159, "erinnerungen": 159, "hirn": 159, "eingebrannt": 159, "einstieg": [159, 195, 1163], "traunsteinstra\u00df": 159, "hundert": [159, 170, 243], "meter": 159, "s\u00fcdlich": 159, "hoisn": [159, 187], "wirt": [159, 187], "markiert": [159, 160], "wanderweg": [159, 160], "wegweisern": [159, 160], "bergauf": [159, 160], "kupp": 159, "klamm": 159, "einsteigt": 159, "bergab": 159, "touristisch": 159, "erschlossen": 159, "trifft": 159, "familien": 159, "kindern": [159, 1164], "rechter": 159, "felsstock": 159, "adlerhorst": 159, "sieht": [159, 170, 174, 184], "rau": [159, 233], "touristenzon": 159, "rauf": 159, "schart": 159, "durchschnaufen": 159, "einstellen": 159, "gen\u00fcsslich": 159, "h\u00f6henmet": 159, "verspeisen": 159, "steinmanderl": 159, "verfehlen": 159, "erkennbar": [159, 170, 1166], "kamm": 159, "r\u00fcber": 159, "traunsteinfelsen": 159, "erstreckt": [159, 160], "sch\u00f6nste": 159, "teil": [159, 169, 178, 186, 1148, 1150], "meditativ": 159, "wundersch\u00f6n": [159, 160], "steil": 159, "voll": 159, "zecken": 159, "schon": [159, 160, 169, 184, 186, 194, 224, 353, 1150, 1152, 1157, 1164, 1166, 1169], "bl\u00fcht": 159, "rinnen": 159, "leichtest": [159, 170], "dahin": [159, 1148], "wieder": [159, 184, 186, 194, 199, 201, 215, 1150, 1164], "vertun": 159, "manderl": 159, "aufstellen": 159, "nachwelt": 159, "nemesi": 159, "bergverr\u00fcckten": 159, "gleich": [159, 170, 184, 194, 195, 199, 201, 233, 281, 313, 330, 1148, 1163, 1170], "schl\u00fcsselstel": 159, "quert": 159, "latschen": 159, "\u00f6fter": [159, 160], "festhalten": 159, "gel\u00e4nd": 159, "einsam": 159, "bohrhaken": 159, "verrotteten": 159, "schuhband": 159, "festh\u00e4lt": 159, "runterfallen": 159, "glaub": [159, 168, 169], "stell": [159, 184, 215], "umgehen": [159, 1157], "querung": 159, "hierher": 159, "st\u00fcck": 159, "reinzum\u00fcnden": 159, "scheint": [159, 168], "gibt": [159, 160, 165, 168, 170, 171, 174, 184, 195, 196, 207, 233, 330, 1147, 1148, 1149, 1150, 1152, 1157, 1163, 1169], "foto": [159, 864], "mittendrin": 159, "besch\u00e4ftigt": 159, "hose": 159, "kacken": 159, "gesagt": [159, 174, 184, 194, 353, 1148], "manderln": 159, "aufnahmen": 159, "zunehmenden": 159, "sonnenuntergang": 159, "unvergesslich": 159, "nacht": [159, 160], "geworden": 159, "halten": [159, 160], "zumindest": [159, 184, 1150], "hinauf": 159, "stund": [159, 889, 1171], "gekostet": 159, "exklus": [159, 184, 194], "schneck": 159, "j\u00e4gerbrot": 159, "schein": 159, "ausstieg": 159, "hernlersteig": 159, "m\u00fcndet": 159, "gmundnerh\u00fctt": 159, "gem\u00fctlich": [159, 160], "nett": [159, 160, 174, 285, 353, 1157, 1164], "wirtsleut": 159, "h\u00fcttenruh": 159, "ansitzen": 159, "schweinsbraten": 159, "reinkommt": 159, "k\u00fcche": 159, "geputzt": 159, "backerbsen": 159, "morgen": [159, 239, 243], "hochnebel": 159, "blick": [159, 160, 1149], "flugzeug": 159, "gipfel": [159, 160], "dolin": 159, "nebel": 159, "dabei": [159, 170, 174, 210, 353, 1147], "verziehen": 159, "r\u00fcckweg": 159, "hoisnwirt": 159, "miesweg": 159, "karibik": 159, "steiner alpen": 160, "kamni\u0161ke alp": 160, "kamni\u0161ko savinjskih alp": 160, "alten": [160, 1152], "tradit": [160, 223, 226, 428, 443, 579, 581, 582, 584, 604, 844, 908, 1047, 1078, 1167], "bleiburg": [160, 218], "k\u00e4rnten": [160, 353], "umliegenden": 160, "bergen": 160, "interessantesten": 160, "2558m": [160, 218], "steiner": 160, "alpen": 160, "davor": [160, 202], "gekannt": 160, "nun": [160, 178, 184, 207, 214, 239, 621], "gesehen": [160, 184, 190, 224], "steht": [160, 184, 194, 195, 1160, 1163], "fest": 160, "n\u00e4chste": [160, 178], "jahr": [160, 184], "\u00fcberschreitung": 160, "soweit": [160, 1157, 1164], "h\u00f6chst": 160, "interessant": [160, 1149], "steinhaufen": 160, "unge\u00fcbt": 160, "verloren": [160, 199, 202], "h\u00f6henangst": 160, "schauen": [160, 195, 1163], "helm": 160, "schaden": 160, "schottersurf": 160, "kommen": [160, 165, 233, 335, 340, 353, 890], "ihr": [160, 165, 169, 174, 184, 824, 1147, 1149, 1151, 1152, 1157, 1164, 1170], "artikel": [160, 168], "rein": [160, 170, 195, 1163, 1164], "ins": [160, 169, 353, 729, 1148, 1164], "eisenkappel": 160, "seebergsattel": 160, "openstreetmap": 160, "klein": [160, 169, 170, 174, 1148, 1150, 1151], "dorf": 160, "uhren": 160, "stehengeblieben": 160, "scheinen": 160, "parkplatz": 160, "geparkt": 160, "wissend": 160, "hinten": 160, "tal": 160, "beginnt": [160, 194, 1171], "ahnen": 160, "stetig": 160, "verzagen": 160, "eingang": [160, 1148], "kar": 160, "pl\u00f6tzlich": 160, "freundlich": 160, "vorhanden": [160, 1157, 1164], "fr\u00fchst\u00fcck": 160, "lager": [160, 275], "respektvol": 160, "erklimmenden": 160, "zieht": 160, "haltend": 160, "wand": 160, "wiederum": [160, 184], "gilt": [160, 174, 215, 353], "mittlerweil": [160, 1148, 1165], "akzeptiert": 160, "deswegen": [160, 194, 199, 1150], "schliesslich": [160, 1148], "stehend": 160, "denn": [160, 184, 194, 1169, 1171], "hinaufkomm": 160, "passiert": [160, 184, 201], "anf\u00e4ngern": 160, "geschehen": 160, "jung": [160, 353], "izola": 160, "slowenien": 160, "stellten": 160, "ankam": 160, "ob": [160, 168, 194, 1152, 1171], "beantwortet": 160, "adoptivs\u00f6hn": 160, "gewonnen": 160, "nachbarberg": 160, "ko\u010dna": 160, "sichtlich": 160, "spa\u00df": [160, 240, 1166], "abstieg": 160, "erweitert": 160, "rund": 160, "fertig": [160, 194, 211, 239, 681, 688], "empfehl": [160, 1148], "runterzugehen": 160, "raufgekommen": 160, "ostseitigen": 160, "westseitig": 160, "sch\u00f6ner": [160, 184], "langen": 160, "grat": 160, "felst\u00fcrm": 160, "daf\u00fcr": [160, 178, 184, 194, 195, 1148], "anstrengend": 160, "200m": 160, "pulverhangerl": 160, "zur\u00fcck": [160, 184, 196, 1157, 1164], "wohlverdient": 160, "la\u0161ko": 160, "geschmack": 160, "schroff": 160, "selektiv": 160, "jedermann": 160, "kett": 160, "2000m": 160, "umschlossen": 160, "gletschergeformten": 160, "karen": 160, "steilen": 160, "w\u00e4nden": 160, "ost": 160, "richtung": [160, 1159], "schlafm\u00f6glichkeiten": 160, "biwak": 160, "einladung": 160, "\u00fcberquerung": 160, "dringend": 160, "f\u00e4llig": [160, 353], "fu\u00dfnoten": [160, 1147], "belieben": 160, "gummi": 160, "reifen": 160, "fahren": 160, "mehrplatzlag": 160, "reserviert": 160, "h\u00fcttenschl\u00e4fer": 160, "ohrenst\u00f6psel": 160, "f\u00e4lle": 160, "eingetreten": 160, "fassen": [160, 239], "typ": [160, 196, 207, 217, 890, 1112], "geschnarcht": 160, "geschrien": 160, "modules sign": 161, "secure boot": 161, "shim": 161, "dell xps 13": 161, "unresolv": [161, 777, 780, 976], "upset": [161, 713], "tendenc": 161, "vendor": [161, 162, 458, 460, 519, 798, 802, 906, 936], "efi": 161, "implementor": [161, 255, 256, 258, 315, 316, 662, 700, 709, 754, 755, 761, 1133, 1153], "shine": 161, "stuck": 161, "cryptographi": 161, "third": [161, 198, 210, 239, 285, 448, 576, 578, 689, 690, 780, 782, 847, 889, 932], "parti": [161, 166, 466, 578, 773, 780, 928, 969, 1116], "signatur": [161, 207, 239, 243, 264, 285, 564, 660, 707, 723, 724, 970], "openssl": [161, 858], "req": 161, "x509": 161, "newkei": 161, "rsa": [161, 915], "keyout": 161, "xps13": 161, "priv": [161, 796], "outform": 161, "36500": [161, 519], "subj": 161, "passphras": [161, 191, 915], "expiri": 161, "0x2": 161, "97": [161, 170, 184, 194, 199, 201, 207, 210, 223, 226, 231, 233, 236, 239, 243, 246, 252, 261, 264, 271, 281, 285, 291, 303, 307, 313, 330, 335, 340, 436, 1104], "e5": 161, "ef": 161, "88": [161, 170, 184, 194, 199, 201, 207, 210, 212, 216, 223, 226, 231, 233, 236, 239, 243, 246, 249, 252, 261, 264, 268, 271, 281, 285, 291, 303, 307, 313, 330, 335, 340, 438, 1044, 1104, 1105, 1140], "3a": 161, "b3": 161, "9c": 161, "1b": 161, "a4": 161, "d7": 161, "sha256withrsaencrypt": 161, "issuer": [161, 462], "sep": [161, 162, 190, 210, 223, 226, 231, 239, 243, 246, 264, 285, 303, 444, 641, 884, 906, 908, 919, 976], "gmt": 161, "aug": [161, 226, 899, 907], "2121": 161, "subject": [161, 445, 763, 800, 1133], "rsaencrypt": 161, "modulu": [161, 220, 226, 236, 239], "b5": 161, "2d": [161, 213, 578, 1045], "5c": 161, "6f": [161, 964], "b0": 161, "95": [161, 170, 184, 194, 199, 201, 207, 210, 216, 220, 223, 226, 231, 233, 236, 239, 243, 246, 249, 252, 261, 264, 268, 271, 281, 285, 291, 303, 307, 313, 330, 1104, 1105], "f6": 161, "9e": 161, "9d": 161, "0d": 161, "bc": [161, 782, 906], "f5": 161, "6e": 161, "fe": [161, 444], "94": [161, 170, 194, 199, 201, 207, 210, 216, 223, 226, 231, 233, 239, 243, 246, 249, 252, 261, 264, 271, 281, 285, 291, 303, 307, 313, 330, 487, 488, 1104], "2b": [161, 908], "e6": 161, "b2": 161, "a0": [161, 907], "f8": 161, "7d": 161, "1c": 161, "2c": 161, "9f": 161, "4d": [161, 1045], "86": [161, 170, 184, 194, 199, 201, 207, 210, 216, 223, 226, 231, 233, 239, 243, 246, 249, 252, 261, 264, 271, 281, 285, 291, 303, 307, 313, 330, 1104, 1105], "e3": [161, 481], "dd": [161, 833, 862, 1148], "7b": 161, "3f": 161, "aa": 161, "b8": 161, "a5": [161, 907], "d5": 161, "0b": 161, "81": [161, 170, 172, 184, 194, 199, 201, 207, 210, 212, 216, 223, 226, 231, 233, 239, 243, 246, 249, 252, 261, 264, 268, 271, 281, 285, 291, 303, 307, 313, 330, 978, 1002, 1104, 1105], "d1": [161, 233, 296, 635], "e8": 161, "dc": [161, 462], "c5": 161, "d2": [161, 233, 296, 635], "c2": [161, 465, 579, 664], "0a": [161, 364], "a1": [161, 223, 268, 1057], "e1": [161, 211, 224, 481, 661], "89": [161, 170, 184, 194, 199, 201, 207, 210, 216, 220, 223, 226, 231, 233, 236, 239, 243, 246, 249, 252, 261, 264, 268, 271, 281, 285, 291, 303, 307, 313, 330, 436, 906, 907, 908, 978, 1104, 1105], "4c": 161, "4a": 161, "77": [161, 184, 192, 194, 199, 201, 203, 207, 210, 216, 220, 223, 226, 231, 233, 239, 243, 246, 249, 252, 261, 264, 271, 281, 285, 291, 303, 307, 313, 330, 332, 335, 340, 1104, 1105], "a9": 161, "68": [161, 184, 189, 194, 199, 201, 207, 210, 216, 220, 223, 226, 231, 233, 239, 243, 246, 249, 252, 261, 264, 271, 281, 285, 291, 303, 307, 313, 327, 330, 884, 1104, 1105], "b6": 161, "a8": 161, "9b": 161, "d8": 161, "7f": [161, 908], "e2": [161, 211, 224, 481, 661], "a3": 161, "79": [161, 184, 194, 199, 201, 207, 210, 216, 220, 223, 226, 231, 233, 239, 243, 246, 249, 252, 261, 264, 268, 271, 281, 285, 291, 303, 307, 313, 330, 335, 340, 1104, 1105], "f4": 161, "96": [161, 170, 184, 194, 199, 201, 207, 210, 220, 223, 226, 231, 233, 239, 243, 246, 249, 252, 261, 264, 268, 271, 281, 285, 291, 303, 307, 313, 330, 436, 977, 978, 1104, 1105], "4f": [161, 1045], "1d": 161, "7e": 161, "4e": 161, "0e": 161, "d9": 161, "8c": 161, "d3": [161, 635], "c8": 161, "f7": 161, "8e": 161, "d6": 161, "3b": 161, "1e": 161, "4b": [161, 908, 964], "5e": [161, 1031], "5f": [161, 736], "7c": 161, "expon": [161, 1031], "65537": 161, "0x10001": 161, "x509v3": 161, "98": [161, 170, 184, 194, 201, 207, 210, 216, 223, 226, 231, 233, 236, 239, 243, 246, 249, 252, 261, 264, 271, 281, 285, 291, 303, 307, 313, 330, 335, 340, 561, 598, 978], "0c": [161, 908], "keyid": 161, "c0": 161, "8f": 161, "b1": 161, "b7": 161, "9a": 161, "fa": 161, "7a": 161, "df": [161, 187, 303, 307, 313, 444], "a6": 161, "c9": 161, "76": [161, 184, 194, 199, 201, 207, 210, 212, 216, 223, 226, 231, 233, 239, 243, 246, 249, 252, 261, 264, 268, 271, 281, 285, 291, 303, 307, 313, 330, 335, 340, 455, 456, 720, 753, 1057, 1104, 1105], "f0": 161, "b4": 161, "f9": 161, "eb": 161, "f1": 161, "6c": [161, 908], "2f": [161, 360, 1045], "5a": 161, "e0": 161, "d0": 161, "93": [161, 170, 184, 194, 199, 201, 207, 210, 216, 220, 223, 226, 231, 233, 239, 243, 246, 252, 261, 264, 271, 281, 285, 291, 303, 307, 313, 330, 1104], "8d": 161, "2a": 161, "fc": [161, 461, 462], "1a": 161, "b9": 161, "cb": [161, 625], "miidbtccae2gawibagiuarax5e9vn4g6eclb5bocbruks9cwdqyjkozihvcnaqel": 161, "bqawetepma0ga1ueawwgamzhc2nomcaxdtixmdkwnzeyntc1nloydzixmjewode0": 161, "mti1nzu2wjarmq8wdqydvqqddazqzmfzy2gwggeima0gcsqgsib3dqebaquaa4ib": 161, "dwawggekaoibaqc1lvzqb2aw15x2nlvnnmth6qxdnq1xvokb9vbu6zx": 161, "wl72mzqr": 161, "5rkvwabpeph9hcwdnwcm9mjnhupdexi": 161, "hmszvaowukuzi2kflrpvc": 161, "79gwnr4": 161, "jc": 161, "xdlzwnekcnuhsogjwxxttbydsghpd8q": 161, "valspcvotvjdokib4eyxnavjbdjdldd": 161, "rb8ueftirkn5abigzdoortik9jy1v2ocui5zqu8dkg4vph4mtkp": 161, "nb3kgq7zt5ym": 161, "b8ce2f": 161, "ettmprmfi94x": 161, "7i5tuqrbsylistict": 161, "rf1kw6": 161, "zuzvmwyow9cyzwc5rar": 161, "ys0exg3v": 161, "hyjl7vaxa23rb": 161, "xyiuztxqunxragmbaagjuzbrmb0ga1uddgqwbbqk": 161, "p1jr3huijl4otbwyvngmdz1idzafbgnvhsmegdawgbqkp1jr3huijl4otbwyvngm": 161, "dz1idzapbgnvhrmbaf8ebtadaqh": 161, "ma0gcsqgsib3dqebcwuaa4ibaqa5yke5gyfa": 161, "h49rsbdpobkbr5rv0hz693pljj02mn9hprusmgbygdujyx6odqbzcfah8ko0": 161, "xra": 161, "kdtflvc7uuvwtp": 161, "envqn8vx6twkd0r7maeyze8q6w2y1p1xcbrbwhmhemi": 161, "tjjadwenms9xosesipxkduey9oa6ep6indatkyt2lrw5tyagfocnxyiniybsvdtw": 161, "yqfvxbjphkw": 161, "dintokuzmazeiq3j0hi8o789xdyxlf2snsdshq5huaz67c5brli": 161, "ahemjzbycfiiq65b5x": 161, "y7aq": 161, "eg70tffm4fd8iys4tyxajdhcarqvfpdxazkhx": 161, "rk": 161, "b3lljngstu2g": 161, "mokutil": 161, "mokmanag": 161, "bloodi": [161, 973, 1113], "fan": [161, 183, 187, 213, 237, 306, 1100], "highest": [161, 220, 226, 236, 239, 285, 387, 432, 907, 963], "melt": 161, "7390": [161, 226], "cross develop": 162, "raspberry pi": [162, 899, 900, 901, 902, 903, 906, 907, 908], "crosstool-ng": 162, "c++": [162, 164, 1152, 1153, 1154, 1156], "sadli": [162, 213, 426, 771, 906, 940, 943, 977, 999], "linaro": [162, 755, 898, 986, 987], "libstdc": [162, 988, 990], "unsatisfi": 162, "libpthread": [162, 979], "feedback": [162, 178, 181, 190, 191, 192], "thankfulli": 162, "gperf": [162, 990], "flex": [162, 782, 906, 990], "texinfo": [162, 990], "help2man": [162, 990], "libtool": [162, 990], "ncurs": [162, 775], "unzip": [162, 803, 990], "rsync": [162, 990], "diffutil": 162, "libncurses5": [162, 990], "gawk": [162, 990], "util": [162, 169, 190, 459, 465, 484, 498, 613, 668, 671, 673, 753, 990, 997, 1128], "ct": [162, 990], "zlib": [162, 990], "extra": [162, 184, 194, 220, 393, 454, 546, 717, 802], "prior": [162, 828, 844, 869, 906, 976, 992, 1046], "bootstrap": [162, 990, 1135], "latest": [162, 758, 773, 779, 1128], "yann": 162, "morin": 162, "warranti": [162, 203, 332], "merchant": 162, "chosen": [162, 447, 899, 906, 908, 934, 938, 958, 962, 1106, 1119], "rpi3": 162, "armv7": 162, "rpi2": 162, "23179": 162, "libc": [162, 976, 993], "glibc_2": [162, 976], "ldd": [162, 448, 450, 993], "0xb6e06000": 162, "invok": [162, 192, 211, 224, 321, 326, 462, 564, 576, 635, 665, 955, 977, 1014, 1026, 1027, 1052], "rpt2": 162, "rpi1": 162, "deb10u1": 162, "quirk": [162, 899], "werror": [162, 368, 381, 424, 447, 462, 469, 753, 770, 771, 1142], "behind": [162, 202, 381, 432, 462, 484, 594, 802, 917, 976, 1019, 1117], "glibcxx_3": 162, "libgcc_": 162, "downgrad": 162, "cmake_find_root_path": [162, 977], "cmake_sysroot": [162, 977], "viewpoint": 162, "bye": [162, 688, 692, 694, 695, 696, 1113], "relocat": 162, "fragil": 162, "sdk": 162, "buildroot": 162, "encount": [162, 191, 239, 243, 907, 908, 934], "ct_prefix": 162, "categori": [163, 175, 444, 1102], "crosstool": [163, 267, 755, 898, 977, 979, 986, 987, 988], "1399": 163, "dell": 163, "xp": [163, 442], "grintovec": [163, 218], "plan\u0161arsko": 163, "jezero": 163, "\u010de\u0161ka": [163, 218], "ko\u010da": [163, 218], "traunstein": [163, 187, 353], "zierlersteig": [163, 187], "bigbluebutton": [163, 167, 1147], "consumpt": 163, "buildmanag": 164, "embeddedentwicklung": 164, "anpassungen": 164, "paketen": 164, "rootfilesystem": [164, 979], "dient": 165, "vermarktung": 165, "referenz": [165, 254], "kursteilnehm": [165, 353], "beendigung": 165, "entstandenen": 165, "zur\u00fcckgreifen": 165, "finden": [165, 169, 178, 1147], "sofern": 165, "kund": [165, 178], "w\u00fcnscht": 165, "abstufungen": 165, "\u00f6ffentlichkeit": [165, 1164], "besprochen": 165, "hierbei": 165, "anwendung": [165, 1169], "g\u00e4nzlich": 165, "abgesehen": 165, "ausdr\u00fccklich": 165, "zustimmt": 165, "namen": [165, 184, 194, 243, 303, 890, 1171], "individuen": 165, "prinzipiel": 165, "erw\u00e4hnt": [165, 178], "erlaubni": 165, "sollten": [165, 233, 271], "vorgehen": [165, 251, 1164, 1171], "anbietet": 165, "nie": [165, 174, 186, 353, 1152], "zug\u00e4nglich": 165, "onlinekursen": 165, "m\u00f6glichkeit": [165, 168, 186, 1150, 1169, 1170], "\u00fcbungsmateri": 165, "zustimmen": 165, "einzeln": [165, 178], "keinesfal": 165, "ver\u00f6ffentlicht": 165, "verschiedenst": 165, "m\u00f6glichkeiten": [165, 178, 1166, 1169], "entstanden": [165, 178, 186], "nichtsdestotrotz": [165, 1150], "verf\u00fcgung": [165, 184, 1152, 1169], "accompani": [166, 187, 276, 278, 1103, 1158], "privaci": [166, 183, 187, 188], "guidelin": [166, 183, 302, 908], "certainli": [166, 934], "redhat": [166, 288, 438], "gitk": [166, 862], "traine": [166, 193], "respositori": [166, 178], "user1": 166, "user2": 166, "user3": 166, "untrack": 166, "beast": 166, "similarli": 166, "unstag": 166, "accident": [166, 575, 707, 786, 829, 830, 869, 933, 1041], "7434a5b": 166, "100755": 166, "cowork": 166, "employ": [166, 442], "favourit": 166, "869": [166, 226, 313], "124": [166, 170, 184, 191, 194, 201, 207, 210, 220, 223, 226, 231, 233, 236, 239, 243, 246, 249, 261, 264, 271, 281, 285, 291, 303, 307, 313, 1057], "a4b9666": 166, "bf5bb75": 166, "went": [166, 187], "retri": [166, 920, 1019, 1128], "noon": [166, 306, 962, 1050], "lack": [166, 422, 447, 519, 653, 655, 908, 988], "unavoid": 166, "her": [166, 170, 195, 239, 242, 655, 837, 858, 1066, 1108, 1163], "confid": 166, "merg": [166, 212, 804, 962, 1048, 1165], "gentl": [167, 1154], "histori": [167, 175, 211, 229, 255, 256, 258, 260, 306, 315, 316, 381, 658, 662, 664, 700, 752, 754, 755, 761, 804, 833, 839, 890, 1100, 1106, 1112, 1155, 1159, 1166], "tinker": 167, "solder": 167, "sysv": [168, 977], "grace": [168, 280, 727], "sigterm": [168, 973, 974], "sigkil": 168, "beeinflussen": 168, "shutdown": [168, 223, 239, 246, 249, 264, 271, 281, 285, 307, 313, 316, 343, 780, 893, 970, 1008], "herausgefunden": [168, 174, 353], "nachfolgend": [168, 1148], "manpag": 168, "verhindern": 168, "genehm": 168, "systemd": [168, 223, 239, 246, 249, 264, 271, 281, 285, 307, 313, 802, 840, 893, 908, 973, 1148], "inhibit": [168, 315, 660, 698], "children": [168, 436], "vererbt": 168, "attributen": 168, "setprior": 168, "execv": [168, 931, 976], "sched_reset_on_fork": 168, "ORed": 168, "privileg": [168, 223, 239, 246, 249, 264, 271, 281, 285, 307, 313, 858, 893], "playback": 168, "prevent": [168, 171, 220, 226, 229, 236, 239, 267, 418, 424, 428, 839, 928, 933, 962, 973, 999, 1011, 1041], "evad": 168, "rlimit_rttim": 168, "getr": 168, "anstel": 168, "prozessen": 168, "teilen": 168, "prozess": [168, 336, 1157, 1159, 1166, 1167, 1170], "startenden": 168, "gestarteten": 168, "weitergegeben": 168, "ausser": [168, 195, 330, 1163], "unterbunden": 168, "pthread_attr_setinheritsch": 168, "pthread_inherit_sch": 168, "pthread_explicit_sch": 168, "newli": [168, 424], "sowa": [168, 174, 353, 1148], "\u00e4hnlich": [168, 199], "wikipedia": [168, 229, 432, 575, 908, 919, 963, 995, 1113], "filter_driv": 168, "offenbar": [168, 184, 353, 1150], "miser": [168, 613], "netzwerkdrivern": 168, "hoher": 168, "interruptlast": 168, "verbessern": 168, "n\u00f6tig": [168, 1159], "diesbez\u00fcglich": 168, "\u00fcberlegt": 168, "schaltet": 168, "netzwerkdriv": 168, "30107": 168, "linuxfound": 168, "workgroup": 168, "napi": [168, 198, 796], "implementationen": 168, "libmodbu": 168, "freemodbu": 168, "konfiguriert": [168, 169], "jumbo": 168, "jumbo_fram": 168, "mtu": [168, 901], "1500": [168, 226], "eth0": 168, "9000": [168, 226], "ifconfig": [168, 796], "abgelegt": 168, "konfigur": [168, 170], "ifac": [168, 487, 501, 724], "vorsicht": [168, 194, 890], "routern": 168, "fragmentieren": 168, "tracerout": 168, "netzwerkverbindung": 168, "g\u00fcte": 168, "wissen": [168, 353, 1150, 1157], "sar": 168, "sysstat": 168, "schmerzvol": 168, "netter": 168, "ausprogrammiert": 169, "konflikt": [169, 1165], "parallelen": [169, 1169], "demonstr": [169, 171, 191, 263, 514, 563, 1102, 1106, 1145], "mutter": [169, 353, 354, 1169], "aller": [169, 178, 353, 354, 1148, 1169], "danach": [169, 1147], "hilf": [169, 194, 335, 340, 1159], "gefixt": 169, "kommunk": 169, "variablen": [169, 170, 195, 196, 199, 202, 207, 235, 253, 254, 327, 330, 336, 1149, 1159, 1160, 1163], "frontal": 169, "vorgef\u00fchrt": 169, "diskuss": [169, 178, 200, 353], "dank": [169, 174, 353, 1148], "beispielcod": 169, "h\u00e4ndisch": [169, 1151], "zweier": [169, 195, 1163], "bewundern": 169, "k\u00f6nnt": 169, "euch": 169, "erinnern": [169, 353], "blinken": 169, "liess": 169, "irgendwo": [169, 243], "hatten": [169, 174, 353], "edg": [169, 213, 784, 942, 943], "kleinen": 169, "empf": 169, "unbedingt": [169, 184, 1148], "beispielprogramm": 169, "horcht": 169, "gesprochen": 169, "ausf\u00fchrlich": [169, 254], "schamlos": 169, "eigenwerbung": 169, "\u00fcberbleibsel": 169, "ehemaligen": 169, "socketcan": [169, 900, 901], "absorbiert": 169, "worden": [169, 178, 1148], "enth\u00e4lt": [169, 184], "schnuckelig": 169, "aufzeichnen": 169, "replai": [169, 901], "folien": [169, 178, 186, 1147], "freitag": [169, 1148], "kerneldrivertag": 169, "sorri": [169, 175, 841], "emanuel": 169, "beispieldriv": 169, "han": 169, "findet": 169, "angeboten": [169, 1147], "promin": [169, 717, 798], "implementiert": [169, 184, 215, 1157, 1171], "gute": [169, 186, 1157, 1164], "anfang": [169, 170, 178], "mcp2515": [169, 802], "angesprochen": [169, 186], "fortgeschrittener": [169, 186], "einpflegt": 169, "agiert": 169, "mcp251x": 169, "at91": 169, "soc": [169, 906, 907, 908, 942], "deinem": 169, "stecker": 169, "verbaut": 169, "at91_can": 169, "lacht": 169, "zeilenweisen": 170, "nutzdaten": [170, 223], "extrahieren": [170, 197], "wollend": [170, 1164], "spalt": 170, "offensichtlich": [170, 1151], "separiert": 170, "felder": 170, "antwort": [170, 271, 313], "stdtype": 170, "gscheitesten": 170, "aufeinanderfolgend": 170, "whitespac": [170, 231, 239, 285, 366, 1046, 1069, 1125], "nimmt": [170, 195, 207, 231, 233, 239, 271, 1150, 1163], "tupl": [170, 183, 188, 190, 192, 196, 200, 202, 208, 209, 211, 215, 218, 221, 222, 224, 225, 227, 228, 232, 234, 235, 236, 241, 244, 247, 248, 250, 260, 262, 265, 268, 269, 272, 282, 284, 286, 290, 291, 303, 306, 308, 314, 316, 320, 335, 491, 700, 754, 755, 1004, 1022, 1023, 1030, 1031, 1036, 1045, 1048, 1077, 1100, 1121, 1122, 1153], "weiss": [170, 174, 184, 303, 1166, 1171], "rauskommen": 170, "aaa": [170, 231, 243, 249, 285], "tbbb": 170, "tccc": 170, "feld0": 170, "feld1": 170, "feld2": 170, "ccc": [170, 249], "optional": [170, 1150], "splittet": 170, "bearbeitet": [170, 1170], "manuel": [170, 194, 199], "ddd": 170, "eee": 170, "maxsplit": [170, 239, 285, 444], "restfield": 170, "len": [170, 171, 172, 174, 184, 194, 199, 201, 202, 207, 210, 211, 215, 216, 220, 223, 226, 231, 233, 236, 239, 243, 246, 249, 261, 264, 271, 281, 285, 292, 303, 307, 313, 327, 330, 444, 798, 902, 1003, 1016, 1029, 1031, 1037, 1039, 1046, 1048, 1050, 1051, 1095, 1113, 1117, 1121, 1124], "10101010": 170, "switchnumb": 170, "rsplit": [170, 239, 285, 444, 1046], "l1": [170, 173, 184, 201, 207, 210, 220, 223, 226, 231, 233, 239, 243, 246, 249, 252, 261, 264, 268, 271, 281, 285, 291, 303, 307, 313, 482], "l2": [170, 173, 184, 201, 207, 210, 215, 220, 223, 226, 233, 239, 243, 246, 249, 252, 261, 264, 268, 271, 281, 285, 291, 303, 307, 313], "\u00e4nderung": [170, 184, 1171], "87": [170, 184, 194, 199, 201, 207, 210, 216, 223, 226, 231, 233, 239, 243, 246, 249, 252, 261, 264, 271, 281, 285, 291, 303, 307, 313, 330, 335, 340, 1057, 1104, 1105], "zeigen": [170, 889], "dasselb": 170, "objekt": [170, 184, 194, 285], "140070310441600": 170, "ver\u00e4ndert": 170, "91": [170, 184, 194, 199, 201, 207, 210, 216, 220, 223, 226, 231, 233, 236, 239, 243, 246, 252, 261, 264, 271, 281, 285, 291, 303, 307, 313, 330, 335, 340, 1104, 1105], "140070371015728": 170, "92": [170, 171, 194, 199, 201, 203, 207, 210, 216, 223, 226, 231, 233, 236, 239, 243, 246, 249, 252, 261, 264, 271, 281, 285, 291, 303, 307, 313, 330, 335, 340, 886, 1104, 1105], "attributeerror": [170, 184, 220, 226, 231, 233, 236, 239, 243, 246, 249, 252, 261, 264, 268, 271, 281, 285, 291, 303, 307, 313, 999, 1012, 1013, 1020], "gottseidank": 170, "alternativ": 170, "aufruf": [170, 184, 190, 194, 239, 331], "paaren": 170, "keyerror": [170, 173, 184, 194, 201, 210, 220, 223, 226, 231, 233, 236, 239, 246, 249, 261, 264, 271, 281, 285, 291, 303, 307, 313, 330, 999, 1048, 1122], "nix": [170, 171, 184, 202, 210, 231, 233, 236, 261, 281, 313, 330, 520], "umstaendlich": 170, "102": [170, 184, 194, 199, 201, 207, 216, 220, 223, 226, 231, 233, 236, 239, 243, 246, 249, 252, 261, 264, 268, 271, 281, 285, 291, 303, 307, 313, 330, 335, 340], "103": [170, 184, 194, 201, 207, 216, 223, 226, 231, 233, 236, 239, 243, 246, 249, 252, 261, 264, 271, 281, 285, 291, 303, 307, 313, 330], "104": [170, 172, 184, 194, 199, 201, 207, 220, 223, 226, 231, 233, 236, 239, 243, 246, 249, 252, 261, 264, 271, 281, 285, 291, 303, 307, 313, 330, 1057], "106": [170, 184, 194, 199, 201, 207, 210, 216, 220, 223, 226, 231, 233, 236, 239, 243, 246, 249, 261, 264, 268, 271, 281, 285, 291, 303, 307, 313, 330, 884], "setdefault": [170, 211, 231, 246, 261, 264, 271, 281, 285, 291, 303, 307, 313, 1048], "107": [170, 184, 194, 199, 201, 203, 207, 210, 223, 226, 231, 233, 239, 243, 246, 249, 261, 264, 271, 281, 285, 291, 303, 307, 313, 330, 332, 431], "meinvoelligsinnlosertyp": 170, "sinnlose_addit": 170, "sinnlobj": 170, "112": [170, 184, 191, 194, 199, 201, 207, 216, 220, 223, 226, 231, 233, 239, 243, 246, 249, 261, 264, 268, 271, 281, 285, 291, 303, 307, 313, 330, 884], "113": [170, 184, 194, 199, 201, 207, 210, 220, 223, 226, 231, 233, 239, 243, 246, 249, 252, 261, 264, 268, 271, 281, 285, 291, 303, 307, 313, 467], "__main__": [170, 174, 184, 189, 207, 210, 220, 223, 224, 226, 231, 233, 236, 239, 243, 246, 249, 252, 264, 271, 281, 285, 291, 303, 307, 313, 330, 335, 1000, 1003, 1007, 1013, 1021, 1128, 1134], "0x7f64a8934890": 170, "114": [170, 172, 184, 194, 201, 207, 216, 220, 223, 226, 231, 233, 239, 243, 246, 249, 261, 264, 271, 281, 285, 291, 303, 307, 313], "115": [170, 184, 194, 199, 201, 207, 220, 223, 226, 231, 233, 239, 243, 246, 249, 261, 264, 271, 281, 285, 291, 303, 307, 313], "116": [170, 184, 194, 201, 207, 216, 220, 223, 226, 231, 233, 236, 239, 243, 246, 249, 261, 264, 271, 281, 285, 291, 303, 307, 313], "nochwenigersinnvol": 170, "der_absolute_unsinn": 170, "super": [170, 186, 187, 194, 208, 210, 211, 226, 234, 237, 241, 260, 264, 275, 284, 306, 481, 997, 999, 1016, 1100, 1107], "unsinn": 170, "uebertreibs_jetzt_bitt": 170, "117": [170, 184, 194, 201, 207, 220, 223, 226, 231, 233, 236, 239, 243, 246, 249, 261, 264, 271, 281, 285, 291, 303, 307, 313], "118": [170, 184, 194, 201, 216, 220, 223, 226, 231, 233, 236, 239, 243, 246, 249, 261, 264, 271, 281, 285, 291, 303, 307, 313, 884, 1057], "0x7f64a894a790": 170, "119": [170, 184, 194, 201, 203, 210, 223, 226, 231, 233, 239, 243, 246, 249, 261, 264, 271, 281, 285, 291, 303, 307, 313, 332], "121": [170, 172, 184, 194, 201, 207, 210, 216, 223, 226, 231, 233, 239, 243, 246, 249, 261, 264, 271, 281, 285, 291, 303, 307, 313], "1335": 170, "122": [170, 172, 184, 194, 199, 201, 207, 210, 220, 223, 226, 231, 233, 236, 239, 243, 246, 249, 261, 264, 271, 281, 285, 291, 303, 307, 313, 978], "819508": 170, "123": [170, 184, 194, 201, 202, 207, 210, 216, 220, 223, 226, 231, 233, 236, 239, 243, 246, 249, 261, 264, 271, 281, 285, 291, 303, 307, 313, 377, 901, 1057, 1064, 1134], "uptim": 170, "timedelta": [170, 189, 216, 218, 271], "358": [170, 226, 271, 285, 303, 313, 438], "125": [170, 194, 199, 201, 207, 210, 220, 223, 226, 231, 233, 239, 243, 246, 249, 261, 264, 271, 281, 285, 291, 303, 307, 313], "irgendwann_einmal_gewesen": 170, "834972": 170, "126": [170, 184, 194, 199, 201, 207, 210, 223, 226, 231, 233, 236, 239, 243, 246, 249, 261, 264, 281, 285, 291, 303, 307, 313], "datetime_from_batteri": 170, "840837": 170, "127": [170, 184, 194, 199, 201, 207, 210, 216, 223, 226, 231, 233, 239, 243, 246, 249, 261, 264, 281, 285, 291, 303, 307, 313, 917, 925], "846889": 170, "woher": [170, 233], "ausschauen": 170, "sinnlo": [170, 233], "sinnlos": [170, 207, 285], "repraesent": 170, "129": [170, 184, 194, 201, 203, 210, 220, 223, 226, 231, 233, 236, 239, 243, 246, 249, 252, 261, 264, 271, 281, 285, 291, 303, 307, 313, 332], "130": [170, 184, 194, 201, 216, 223, 226, 231, 233, 236, 239, 243, 246, 249, 261, 264, 271, 275, 281, 285, 291, 303, 307, 313, 660, 775, 1044], "completedprocess": [170, 239, 249], "returncod": [170, 239, 249], "erfolgreich": 170, "beendet": [170, 1169], "schau": 170, "du": [170, 184, 239, 246, 252, 925, 930], "verwendest": 170, "anzuzeigen": 170, "cell": [170, 183, 899, 1024, 1105], "gesendet": 170, "ausf\u00fchrt": 170, "krieg": 170, "131": [170, 184, 194, 201, 210, 216, 223, 226, 231, 233, 239, 243, 246, 249, 261, 264, 281, 285, 291, 303, 307, 313, 710], "capture_output": [170, 249], "ndrwxrwxr": [170, 249], "mar": [170, 239, 377, 829, 830, 833, 847, 859, 881, 884, 886, 910, 924, 934, 976, 979, 988], "2607": 170, "33768": 170, "ndrwxr": 170, "xr": [170, 455, 829, 830, 847, 849, 850, 858, 859, 884, 899, 906, 907, 908, 976, 988, 990, 991, 1027], "switchzeug": 170, "keiner": [170, 184, 303, 1152], "seinen": [170, 184], "formuliert": [170, 178], "logisch": [170, 194], "irgendwa": [170, 216, 231, 233], "konverti": 170, "musst": 170, "dich": 170, "festlegen": 170, "133": [170, 184, 194, 201, 223, 226, 231, 233, 239, 243, 246, 249, 261, 264, 271, 281, 285, 291, 303, 307, 313], "stdout_as_utf8": 170, "utf": [170, 211, 220, 223, 224, 226, 230, 236, 239, 249, 271, 285, 291, 303, 307, 313, 1031, 1050, 1097], "134": [170, 184, 194, 201, 210, 223, 226, 231, 233, 236, 239, 243, 246, 249, 252, 261, 264, 281, 285, 291, 303, 307, 313, 719], "135": [170, 184, 194, 201, 210, 223, 226, 231, 233, 239, 243, 246, 249, 252, 261, 264, 281, 285, 291, 303, 307, 313], "drwxrwxr": [170, 249, 884, 942, 977, 978, 979, 988, 990], "drwxr": [170, 829, 830, 847, 884, 899, 906, 907, 908, 988, 990], "136": [170, 172, 184, 194, 201, 210, 223, 226, 231, 233, 236, 239, 243, 246, 249, 261, 264, 281, 285, 291, 303, 307, 313, 456], "fuer": [170, 231, 236, 243], "listdir": [170, 277, 281, 313, 342, 444], "ipynb_checkpoint": [170, 249, 313], "gitignor": [170, 445, 978], "137": [170, 181, 184, 194, 201, 223, 226, 231, 233, 236, 239, 243, 246, 249, 252, 261, 264, 281, 285, 291, 303, 307, 313], "rekurs": 170, "iterieren": [170, 174, 184, 199, 207], "dirpath": 170, "dirnam": [170, 223, 226, 277, 444, 519, 753, 1133], "checkpoint": [170, 220, 226, 236, 239], "itg": 170, "scope": [170, 178, 184, 195, 196, 199, 230, 242, 255, 256, 258, 267, 279, 290, 301, 305, 306, 311, 312, 315, 319, 335, 372, 378, 482, 532, 552, 565, 567, 576, 661, 702, 714, 717, 732, 733, 754, 755, 998, 1043, 1153, 1163, 1167], "getter": [170, 573, 621], "setter": [170, 210, 1020], "fibo": [170, 171, 190, 210, 224, 688, 690, 1003], "listcomprehens": 170, "generatorexpress": [170, 171], "switchdb": 170, "schema": [170, 251, 562, 1056], "michi": 170, "pyexec": 170, "ifadminstatu": 170, "ifdescr": 170, "iflastchang": 170, "snmpenginetim": 170, "ifoperstatu": 170, "fein": [170, 194], "helferlein": 170, "hochtrabend": 170, "nennt": 170, "funktional": 170, "138": [170, 184, 194, 201, 210, 223, 226, 231, 233, 239, 243, 246, 249, 261, 264, 281, 285, 291, 303, 307, 313, 1057], "139": [170, 184, 194, 201, 210, 223, 226, 231, 233, 239, 243, 246, 249, 261, 264, 281, 285, 291, 303, 307, 313], "140": [170, 184, 194, 201, 210, 223, 226, 231, 233, 236, 239, 243, 246, 249, 252, 261, 264, 268, 281, 285, 291, 303, 307, 313, 660], "l_quadrat": 170, "141": [170, 184, 194, 201, 223, 226, 231, 233, 239, 243, 246, 249, 252, 261, 264, 281, 285, 291, 303, 307, 313, 377, 884], "kompliziert": [170, 184, 236, 239, 261, 1148, 1167], "anm": 170, "versionen": [170, 240], "aufgebaut": 170, "rausnehmen": 170, "konfigurationsfil": 170, "configpars": 170, "142": [170, 184, 194, 201, 210, 223, 226, 231, 233, 239, 243, 246, 249, 261, 264, 268, 281, 285, 291, 303, 307, 313, 919, 964], "143": [170, 184, 194, 201, 210, 223, 226, 231, 233, 236, 239, 243, 246, 249, 252, 261, 264, 281, 285, 291, 303, 307, 313], "liste_als_str": 170, "144": [170, 184, 194, 201, 210, 217, 223, 226, 231, 233, 236, 239, 243, 246, 249, 252, 261, 264, 271, 281, 285, 291, 303, 307, 313, 456], "145": [170, 184, 194, 201, 210, 223, 226, 231, 233, 236, 239, 243, 246, 249, 252, 261, 264, 281, 285, 291, 303, 307, 313, 1118], "herbert": 170, "146": [170, 184, 194, 201, 210, 223, 226, 231, 233, 239, 243, 246, 249, 252, 261, 264, 281, 285, 291, 303, 307, 313], "heraussen": 170, "147": [170, 184, 194, 201, 210, 223, 226, 231, 233, 236, 239, 243, 246, 249, 261, 264, 281, 285, 291, 303, 307, 313, 837], "148": [170, 184, 194, 201, 210, 223, 226, 231, 233, 239, 243, 246, 249, 252, 261, 264, 281, 285, 291, 303, 307, 313, 579], "149": [170, 184, 194, 201, 223, 226, 231, 233, 236, 239, 243, 246, 249, 252, 261, 264, 281, 285, 291, 303, 307, 313], "151": [170, 184, 194, 201, 210, 223, 226, 231, 233, 239, 243, 246, 249, 252, 261, 264, 281, 285, 291, 303, 307, 313, 342], "152": [170, 184, 194, 201, 210, 223, 226, 231, 233, 239, 243, 246, 249, 261, 264, 281, 285, 291, 303, 307, 313, 342], "mein_dict": 170, "gerhard": 170, "175": [170, 184, 201, 210, 223, 226, 231, 233, 236, 239, 243, 246, 249, 261, 264, 285, 291, 303, 307, 313], "154": [170, 184, 194, 201, 210, 223, 226, 231, 233, 239, 243, 246, 249, 261, 264, 281, 285, 291, 303, 307, 313, 884], "dict_as_json_str": 170, "155": [170, 184, 194, 201, 210, 223, 226, 231, 233, 236, 239, 243, 246, 249, 252, 261, 264, 281, 285, 291, 303, 307, 313, 342], "gelesenes_dict_von_json": 170, "nahm": 171, "woch": [171, 191, 353, 354, 1148], "anspruch": 171, "platz": 171, "gesammelten": 171, "notizen": 171, "schnell": [171, 174, 194, 215, 240, 1151], "sachen": [171, 197], "is_prim": [171, 194, 197, 202, 1079], "divisor": [171, 202, 753, 1071], "unmodifi": [171, 184, 220, 231, 465, 516, 562, 576, 906, 908, 999, 1012, 1082], "randomnumb": 171, "howmani": 171, "randrang": [171, 199, 223, 231, 233, 236, 239, 243, 246, 249, 271, 313, 330, 1000, 1035], "prev": [171, 792], "cur": [171, 291, 382], "fibonum": 171, "tend": [171, 270, 273, 280, 432, 775, 841, 991], "input_list_str": 171, "input_list": [171, 246, 1082], "__n": [171, 753], "__lt__": [171, 233, 236, 239, 243, 261, 264, 285, 303], "rh": [171, 220, 224, 239, 370, 412, 428, 482, 496, 562, 576, 578, 702], "__le__": [171, 233, 236, 239, 243, 261, 264, 285, 303, 1019], "__eq__": [171, 233, 236, 239, 243, 261, 264, 285, 303, 1019], "__iadd__": 171, "iadd": 171, "__add__": [171, 236, 239, 243, 261, 285, 303, 1019], "new_numb": [171, 226], "__radd__": [171, 236, 243, 261, 1019], "radd": 171, "lh": [171, 220, 224, 370, 412, 428, 482, 496, 552, 562, 576, 578, 702, 833], "makesnosens": 171, "__number": 171, "input_numb": 171, "numnber": 171, "list_of_squar": 171, "shorter": [171, 1007, 1018, 1050, 1099], "compehens": 171, "effort": [171, 243, 277, 425, 426, 443, 907], "local_assign": 171, "read_global_vari": 171, "enclos": [171, 239, 395], "local_shadows_glob": 171, "explicit_global_assign": 171, "creation": [171, 280, 302, 726, 728, 733, 754, 755, 861, 898, 928, 939, 944, 953, 959, 970, 979, 1041, 1050, 1051, 1135], "captur": [171, 254, 255, 256, 258, 278, 315, 316, 320, 335, 700, 701, 704, 754, 755, 899, 995, 1153], "create_funct": 171, "inner_funct": 171, "whic": 171, "f_one": 171, "f_two": 171, "launch": [171, 187], "discov": [171, 183, 190], "area": [171, 180, 213, 243, 798, 907, 1164, 1170], "scikit": [172, 174, 221, 1135], "manipul": [172, 447, 596, 719, 753, 800, 906, 919, 928, 963, 975, 1038, 1056], "appreci": [172, 223, 841, 1057], "beauti": [172, 186, 187, 190, 208, 210, 211, 218, 229, 233, 234, 237, 243, 260, 284, 335, 408, 538, 596, 944, 1001, 1050, 1057, 1100], "spectral": [172, 1102], "mat": 172, "scipi": [172, 174, 202, 221, 1135], "loadmat": [172, 174], "sklearn": [172, 174, 1103, 1105, 1135], "pixel": 172, "rgb": [172, 174, 344], "dimens": [172, 174, 1105, 1156], "xkcd": 172, "schafer": [172, 183, 186, 187, 190, 208, 211, 218, 221, 224, 234, 237, 248, 251, 260, 284, 290, 335, 340, 1100, 1118, 1119, 1121, 1122, 1123, 1124, 1126, 1136], "keith": [172, 183, 187, 208, 221, 234, 248, 251, 284, 290, 1100], "galli": [172, 183, 187, 208, 221, 234, 248, 251, 284, 290, 1100], "sci": 172, "kit": [172, 344], "spyder": [172, 183, 1024], "pycharm": [172, 183, 277, 1024], "retain": [172, 401, 1042], "invoc": [172, 482], "comparison": [172, 189, 212, 226, 229, 239, 247, 285, 377, 381, 387, 538, 702, 1033, 1075], "misfeatur": 172, "png": [172, 174, 451, 978, 1102], "imgfil": 172, "veggi": [172, 174, 1102], "pillow": [172, 174], "welcom": 172, "cooper": [172, 727], "477x686": 172, "imgarrai": [172, 174], "ndim": [172, 1105], "477": [172, 226, 271], "dtype": [172, 174, 268, 271, 275, 307, 313, 1105, 1118, 1119, 1121, 1122, 1123, 1124], "uint8": 172, "255": [172, 207, 223, 226, 231, 233, 236, 239, 243, 246, 264, 271, 281, 285, 291, 303, 307, 313, 955], "172": [172, 184, 201, 223, 226, 231, 233, 236, 239, 243, 246, 249, 252, 261, 264, 271, 281, 285, 291, 303, 307, 313, 427], "nrow": [172, 174], "ncol": [172, 174], "reshap": [172, 174, 208, 221, 234, 248, 251, 284, 290, 1100, 1103, 1105], "irrelev": [172, 189, 194, 227, 377, 419, 442, 847, 1031, 1113], "colorspac": 172, "mpl_toolkit": 172, "mplot3d": 172, "axes3d": 172, "pyplot": [172, 201, 220, 249, 252, 303, 307, 313, 996, 1054, 1105], "plt": [172, 201, 220, 249, 252, 303, 307, 313, 996, 1054, 1105], "fig": 172, "add_subplot": 172, "set_xlabel": 172, "set_ylabel": 172, "set_zlabel": 172, "ndindex": 172, "scatter": [172, 773], "rgb_linear": 172, "n_cluster": [172, 174], "copy_x": 172, "max_it": 172, "n_init": 172, "n_job": 172, "precompute_dist": 172, "random_st": [172, 1103, 1105], "tol": 172, "verbos": [172, 179, 447, 720, 828, 862, 864, 1035, 1128], "cluster_cent": 172, "int32": [172, 428], "327222": 172, "cluster_centers_": [172, 174], "20529747": 172, "50360681": 172, "3796182": 172, "94408609": 172, "75471018": 172, "53133237": 172, "226": [172, 184, 203, 223, 226, 231, 233, 236, 239, 243, 246, 249, 264, 271, 281, 285, 291, 303, 307, 332], "64913628": 172, "76939951": 172, "92569235": 172, "71464963": 172, "47333306": 172, "60640492": 172, "8888303": 172, "92275244": 172, "84313209": 172, "157": [172, 184, 194, 201, 223, 226, 231, 233, 239, 243, 246, 249, 261, 264, 281, 285, 291, 303, 307, 313], "30685398": 172, "43988931": 172, "03959132": 172, "225": [172, 184, 223, 226, 231, 233, 239, 243, 246, 249, 264, 271, 285, 291, 307, 313, 451, 1057], "55934051": 172, "182": [172, 184, 201, 223, 226, 231, 233, 236, 239, 243, 246, 252, 261, 264, 281, 285, 291, 303, 307, 313], "98255893": 172, "3232048": 172, "241": [172, 223, 226, 231, 233, 236, 239, 246, 249, 264, 281, 285, 291, 307, 1057], "37322907": 172, "159": [172, 184, 194, 201, 223, 226, 231, 233, 236, 239, 243, 246, 249, 261, 264, 281, 285, 291, 303, 307, 313], "54158234": 172, "51775529": 172, "idx": [172, 174, 239], "cube": 172, "concaten": [172, 174, 211, 223, 224, 231, 239, 285, 313, 329, 377, 443, 887, 1036, 1044], "axi": [172, 174, 275, 1121, 1122], "reduced_img": [172, 174], "fromarrai": [172, 174], "float": [173, 184, 188, 190, 192, 194, 201, 202, 207, 210, 220, 223, 224, 226, 229, 231, 233, 236, 239, 244, 247, 261, 264, 269, 281, 285, 291, 302, 304, 307, 313, 330, 331, 358, 359, 360, 364, 374, 376, 377, 381, 411, 420, 425, 444, 472, 481, 587, 588, 677, 736, 906, 964, 974, 1012, 1030, 1045, 1052, 1057, 1150, 1154], "franziska": [173, 174], "baseexcept": [173, 210, 239, 243, 264, 999], "callabl": [173, 187, 223, 236, 246, 249, 264, 271, 281, 285, 292, 660, 702, 724, 732, 1013, 1014, 1051], "forev": [173, 402, 403], "rescu": [173, 231, 575, 596, 718, 720, 802, 997], "pooh": [173, 588], "hex": [173, 184, 194, 201, 216, 226, 236, 249, 261, 264, 271, 281, 291, 307, 313, 330, 346, 519, 908, 1045], "0x7f03d41165f0": 173, "nonexist": 173, "react": [173, 188, 190, 192, 293, 309, 424, 585, 906, 923, 999, 1155], "ensu": 173, "catch": [173, 213, 229, 252, 278, 320, 346, 462, 469, 491, 508, 525, 527, 560, 586, 589, 605, 611, 615, 620, 624, 627, 628, 645, 652, 653, 654, 655, 656, 657, 688, 696, 734, 736, 753, 755, 974], "jessa": [173, 194, 201, 223, 252, 303], "verdammt": [173, 335], "ipython": [173, 210, 220, 226, 236, 239, 264, 281, 884], "bd3a1af9b474": 173, "issubclass": [173, 210, 226, 239, 264], "rais": [173, 174, 188, 190, 192, 210, 211, 220, 224, 226, 227, 231, 233, 236, 237, 239, 243, 251, 252, 285, 302, 320, 346, 997, 1004, 1010, 1020, 1046, 1048, 1121, 1122], "bummer": [173, 226, 734, 1044], "peter": [173, 196, 233, 243, 326, 327, 1037], "paul": [173, 326, 327, 1037], "mari": [173, 1037], "pet": 173, "perfectli": [173, 229], "bloh": [173, 210], "blech": [173, 281, 673, 1116], "range_iter": [173, 184, 199, 216, 223, 231, 233, 236, 239, 249, 261, 264, 271, 281], "0x7f03d402e570": 173, "stopiter": [173, 184, 199, 210, 216, 220, 223, 226, 231, 233, 236, 239, 243, 249, 261, 264, 271, 281, 285, 291, 303, 307, 313, 688, 696, 999, 1004], "beantwortung": [174, 353], "herrschaft": [174, 353], "gestellt": [174, 184, 353, 1152], "schulungsr\u00e4umen": [174, 353], "platzhirsch": [174, 353], "schlagen": [174, 353], "spass": [174, 353, 1157, 1159, 1164], "unglaublich": [174, 353], "lustig": [174, 195, 353, 1148, 1159], "vermittelt": [174, 353, 1169], "gelernt": [174, 353, 1157], "anwend": [174, 353], "beachten": [174, 195, 353, 1163], "zudem": [174, 353], "kursleit": [174, 353], "sympathisch": [174, 353], "kompet": [174, 353], "w\u00fcrde": [174, 184, 353], "weiterempfehlen": [174, 353], "wiederholen": [174, 353], "christoph": [174, 216, 353], "jemand": [174, 353], "lassen": [174, 184, 195, 353, 1151, 1157, 1163, 1167, 1171], "bevor": [174, 1157, 1164, 1171], "anf\u00e4ngerthemen": 174, "vorbei": [174, 233, 239, 1160], "herumzureiten": 174, "gehackt": [174, 214], "zeug": [174, 303, 1166], "chef": 174, "vorgespr\u00e4ch": 174, "\u00fcbungsbeispiel": [174, 184], "mitgegeben": 174, "ausgehend": [174, 195, 353], "spektralbild": 174, "sagt": [174, 231], "verwend": [174, 207, 353], "clusteringalgorithmu": 174, "kategorisieren": 174, "abgebildeten": 174, "st\u00fccke": [174, 178], "erkennen": [174, 1152], "hab": 174, "erlaubt": [174, 184, 1148], "kursvorbereitung": 174, "appet": 174, "reduzieren": 174, "farbredukt": 174, "farben": 174, "bilddaten": 174, "interoperiert": 174, "nahtlo": [174, 1157, 1164], "zufal": [174, 200, 1151], "alpha": [174, 239, 285, 1055], "ausgangsbild": 174, "abzuschneiden": 174, "restoren": 174, "algorithmu": [174, 194, 239, 243, 246], "reduc": [174, 388, 397, 404, 410, 414, 417, 421, 430, 434, 439, 440, 460, 662, 700, 752, 754, 755, 908, 1102], "acht": [174, 194, 195, 239, 271, 291, 1163], "\u00fcberschaubar": 174, "ausdrucksst\u00e4rk": 174, "bemerkbar": 174, "wegschneiden": 174, "pil": 174, "kmean": 174, "nrgba": 174, "disregard": [174, 381], "arbitrarili": [174, 761, 934, 938, 997], "linear_rgb": 174, "rgba": 174, "ergeben": 174, "testprogramm": 174, "imndata": 174, "teilzeitmitarbeiterin": 174, "studiert": 174, "folgendem": [174, 216, 1171], "bekackten": 174, "inputformat": 174, "parsen": [174, 199], "zwischendurch": 174, "gruppenarbeit": 174, "h2o": 174, "dat": 174, "mass": [174, 280], "0000000e": 174, "2662399e": 174, "5994910e": 174, "4391972e": 174, "0048070e": 174, "0078250e": 174, "hessian": 174, "hartre": 174, "bohr": 174, "kamu": 174, "05054e": 174, "61610e": 174, "00000e": 174, "20781e": 174, "08051e": 174, "83024e": 174, "06829e": 174, "42629e": 174, "65256e": 174, "52600e": 174, "69570e": 174, "91733e": 174, "04388e": 174, "34292e": 174, "04780e": 174, "63758e": 174, "19019e": 174, "41217e": 174, "11622e": 174, "21912e": 174, "11752e": 174, "04198e": 174, "36702e": 174, "14839e": 174, "71613e": 174, "96373e": 174, "40456e": 174, "21369e": 174, "24236e": 174, "60956e": 174, "84350e": 174, "29686e": 174, "92365e": 174, "einigen": [174, 195, 353], "runden": [174, 184], "nachdenken": 174, "einigerma\u00dfen": 174, "zufrieden": 174, "load_dat": 174, "matrix_lin": 174, "readlin": [174, 201, 203, 210, 211, 223, 224, 230, 239, 246, 271, 281, 307, 313, 327, 862, 1050], "vergeigt": 174, "matrix_el": 174, "unnecessari": [174, 372, 402], "triangular": 174, "max": [174, 184, 202, 207, 220, 226, 229, 231, 233, 236, 241, 246, 264, 386, 402, 538, 587, 839, 900, 1105], "row_no": 174, "__name__": [174, 210, 211, 224, 233, 239, 243, 264, 281, 285, 328, 335, 998, 1000, 1003, 1007], "bildverarbeitung": 174, "ahnung": [174, 216], "beeeeeep": 175, "broad": [175, 461, 1107, 1153, 1154], "responsibl": [175, 961, 1133], "sane": [175, 346, 839, 1108, 1133], "interfer": [175, 432, 445, 907], "paradigm": [175, 838, 846, 899, 907, 1168], "breakag": [175, 782], "nontrivi": [175, 183, 187, 337, 1024, 1127], "inappropri": [175, 359, 364, 465, 760], "conclus": [175, 183, 190, 800], "awkward": 175, "encourag": [175, 761], "hear": 175, "predat": [175, 765, 891, 970], "doubt": [175, 220, 226, 236, 239, 243, 719, 1031], "schulungsbeschreibung": [176, 1147], "drehbuch": 176, "workshop": 176, "infolgedessen": 176, "virtuel": [176, 240, 1157, 1167, 1168], "konzipiert": [176, 186, 353], "add_subdirectori": [177, 452, 456, 968, 1142], "group1": 177, "group2": 177, "montag": [178, 186, 187, 208, 212, 1148], "vorbereitung": [178, 353, 1150], "mitbringen": 178, "teilzunehmen": 178, "stattfinden": [178, 254], "folgt": 178, "hierzu": 178, "privatheitsrichtlinien": 178, "bauanleitung": 178, "ausprobieren": 178, "willkommen": 178, "schulungsbeschreibungen": 178, "raii": [178, 280, 560, 755], "stl": [178, 344, 408, 521, 522, 523, 524, 526, 528, 529, 530, 531, 533, 534, 535, 536, 537, 560, 561, 599, 603, 625, 627, 628, 642, 657, 668, 755, 1152, 1153, 1154], "scott": [178, 667, 722], "meyer": [178, 470, 722], "primer": [178, 1140], "sonstig": 178, "argh": [178, 403, 654, 682, 999, 1128, 1140], "kursanforderung": 178, "erg\u00e4nzend": 178, "lasst": 178, "testgetrieben": 178, "testcas": [178, 1134], "aufgab": [178, 184, 214, 1160], "hacken": 178, "diskutieren": 178, "niederschrift": 178, "geschehenen": 178, "geh\u00f6renden": 178, "privaten": 178, "verl\u00e4uft": 178, "ansehen": 178, "clonen": 178, "wann": [178, 186], "zugeh\u00f6rigen": 178, "entspricht": 178, "unbetr\u00e4chtlich": 178, "gcc5": 178, "laufen": [178, 1148], "darau": [178, 186], "installationsanleitung": 178, "benutzung": [178, 335, 340], "zuerst": [178, 1171], "aggreg": [178, 433, 444, 562, 814, 1118, 1140], "klassen": [178, 184, 190, 336, 1152], "konstruktoren": [178, 202, 254, 336, 1152], "methoden": [178, 184, 196, 330, 1152], "referenzen": [178, 184, 195, 196, 254, 1152, 1163], "klass": [178, 207, 303], "\u00e4quival": 178, "\u00fcbergab": 178, "langsam": [178, 184, 233], "ausbauen": 178, "dynmem": 178, "demonstrieren": 178, "alloziert": [178, 184, 201], "konstruktor": 178, "destruktor": 178, "vermeiden": [178, 184, 1169], "dtor": [178, 460, 546, 632, 637, 668, 671, 705], "ausflug": [178, 194, 235], "capac": [178, 613], "\u00fcbung": [178, 195, 196, 1163], "handgestrickt": 178, "fallen": [178, 1151, 1152], "lustvol": 178, "erleiden": 178, "teufel": [178, 1151], "smart": [178, 254, 276, 315, 336, 337, 338, 353, 442, 519, 629, 669, 670, 700, 720, 725, 733, 752, 754, 755, 1153, 1156], "shared_ptr": [178, 213, 229, 255, 256, 258, 276, 278, 315, 316, 474, 538, 629, 660, 669, 700, 715, 721, 722, 725, 733, 752, 754, 755, 1153], "unique_ptr": [178, 213, 229, 255, 256, 258, 276, 278, 315, 316, 460, 467, 474, 500, 501, 538, 629, 668, 669, 700, 715, 718, 725, 733, 751, 752, 753, 754, 755, 1153], "demonstriert": 178, "vorgriff": 178, "sortieren": [178, 1152], "employeerecord": 178, "parametrisierbarem": 178, "koordinatentyp": 178, "102ff": 178, "arten": [178, 1150], "containern": 178, "pointerarithmetik": 178, "wiederholung": [178, 195, 202, 238, 1163], "iteratoren": [178, 241], "laufzeitverhalten": [178, 196], "verbesserungen": 178, "gegen\u00fcb": [178, 1150], "6ff": 178, "lambda": [178, 210, 211, 224, 226, 229, 241, 254, 261, 278, 281, 286, 303, 307, 444, 538, 603, 675, 700, 705, 710, 712, 724, 727, 732, 754, 755, 995, 1152, 1153, 1154], "gegen\u00fcberstellung": 178, "sort_algorithm_reverse_lambda": 178, "vererbung": [178, 1152], "fallstudi": 178, "livegehackt": 178, "angebunden": 178, "komplex": [178, 231, 233, 239, 246, 271, 1169], "aufbauen": 178, "vergleichbaren": 178, "anbinden": 178, "wurden": [178, 186], "eigen": [178, 197, 1152, 1157, 1164, 1169, 1170], "kapitel": [178, 335, 340, 1150], "behandelt": [178, 1147], "vorbeigehen": 178, "dcmake_cxx_flag": 179, "dcmake_install_prefix": [179, 450], "libgtest": [179, 180, 276, 278, 1140, 1142], "claim": [179, 370, 579, 581, 582, 837, 930], "simlp": 179, "concret": [179, 187, 213, 276, 460, 467, 472, 487, 549, 635, 637, 732, 739, 1012, 1107], "find_packag": [179, 181, 1142], "add_execut": [179, 445, 451, 457, 503, 539, 542, 545, 548, 551, 554, 557, 651, 965, 972, 977, 978, 1139, 1142, 1144], "add_test": [179, 458, 542, 1139, 1142], "emphasi": 179, "ultim": [179, 210, 230, 570, 735, 907], "luke": [179, 239, 1142], "thetoplevel": 179, "findgtest": [179, 181, 1142], "gtest_root": 179, "dgtest_root": 179, "paranoidli": 179, "bitrot": [180, 1142], "var": [180, 184, 223, 239, 246, 249, 264, 271, 281, 285, 307, 313, 496, 802, 834, 864, 884, 889, 890, 893, 990], "libgmock": [180, 276, 278], "gmock": [180, 1140], "dcmake_build_typ": [180, 447], "loudli": [180, 570, 805, 915], "flathub": 181, "appstream": 181, "visualstudio": [181, 240, 355], "flatpakref": 181, "stone": 181, "snap": 181, "hate": [181, 564], "textual": [181, 183, 517], "findpackagehandlestandardarg": 181, "gtest_librari": 181, "gtest_include_dir": 181, "gtest_main_librari": 181, "378": [181, 223, 226, 233, 271, 313, 1057], "_fphsa_failure_messag": 181, "197": [181, 184, 201, 210, 223, 226, 231, 233, 236, 239, 243, 246, 252, 264, 281, 285, 291, 303, 307, 313], "find_package_handle_standard_arg": 181, "occur": [181, 243, 362, 377, 382, 383, 429, 453, 536, 730, 800, 862, 891, 961, 1045, 1046, 1050, 1158], "gessmann": 181, "cpoint_demo": 181, "cmakefil": [181, 445, 451, 456, 977, 978], "cmakeoutput": 181, "sigh": [181, 213, 519, 722, 1091], "jail": 181, "dict_extensions_suit": 182, "thing_suit": 182, "xsv": 182, "dict_extens": 182, "wednesdai": [183, 191, 273], "thursdai": [183, 187], "publicli": [183, 552], "freedom": [183, 432, 638], "spontan": 183, "cost": 183, "agil": [183, 197, 442, 1127], "methodologi": 183, "formul": [183, 279, 444, 677, 735, 925, 1156], "diadact": [183, 1024], "anaconda": [183, 277, 1024], "dictat": [183, 293, 309, 381, 420, 970, 1024, 1025, 1109, 1126, 1128, 1155], "volumin": [183, 1024], "nodepad": [183, 1024], "configurabilti": [183, 1126], "eclips": [183, 1024, 1116], "pydev": [183, 1024], "seemingli": [183, 187, 976, 1024, 1100], "strang": [183, 906, 1024], "emac": [183, 203, 281, 862, 884, 976, 1024, 1126], "immutabilii": 183, "crisi": 183, "slept": 183, "lunch": 183, "squeez": 183, "Such": [183, 258, 262, 315, 700, 710, 716, 752, 755, 976, 1133], "takeawai": 183, "nonverb": 183, "antenna": 183, "Being": [183, 845, 886, 908, 1040], "stubborn": 183, "greybeard": 183, "distutil": 183, "azur": 183, "devop": [183, 1023], "heavyweight": [183, 341, 724], "reach": [183, 231, 644, 719, 741, 743, 761, 766, 833, 934, 1045], "afternoon": [183, 306], "simplic": [183, 482, 833, 900, 923, 997], "paral": 183, "imposs": [183, 243, 428, 464, 688, 699, 800, 952], "expand": [183, 239, 285, 402, 403, 905, 934, 976, 978], "entertain": [183, 187, 208, 211, 234, 260, 284, 306, 1100], "david": [183, 186, 187, 195, 208, 211, 234, 260, 275, 279, 280, 284, 301, 305, 306, 336, 337, 668, 717], "beazlei": [183, 186, 187, 195, 208, 211, 234, 260, 279, 280, 284, 301, 305, 306, 336, 337], "freelanc": 183, "raymond": [183, 186, 187, 190, 194, 195, 208, 211, 218, 234, 237, 260, 284, 306], "hetting": [183, 186, 187, 190, 194, 195, 208, 211, 218, 234, 237, 260, 284, 306], "bias": 183, "humor": [183, 906, 1045], "emphas": [183, 190, 212, 555, 757, 765, 782, 1128], "dissect": [183, 187, 275, 705, 1004, 1100], "multiprocess": [183, 187, 237, 279, 280, 306, 1100, 1157, 1164, 1168], "truli": [183, 187, 1100], "chri": [183, 187, 208, 1100], "wilcox": [183, 187, 208, 1100], "frontier": [183, 187, 260, 284, 306, 1100], "whop": [183, 187, 260, 284, 306, 991, 1100, 1107], "simul": [183, 341, 342, 519], "covid": 183, "apart": [183, 243, 280, 395, 661, 900, 1002], "ipykernel_launch": [184, 236, 239], "57bd7d77": 184, "6e54": 184, "4dcd": 184, "b7a8": 184, "452f82f88569": 184, "welt": [184, 194, 207, 330, 353, 1148, 1169], "doku": [184, 194, 261], "aeh": 184, "__doc__": [184, 207, 210, 220, 223, 226, 231, 233, 236, 239, 243, 246, 249, 252, 261, 264, 271, 285, 303, 307, 313, 328, 330, 1000, 1028, 1051], "interaktiven": 184, "modu": 184, "formatierung": [184, 194, 254], "\u00fcbernimmt": 184, "nachdem": [184, 194], "welch": [184, 224], "hamma": 184, "bieten": [184, 1167], "sech": [184, 194, 207, 239, 246, 271, 285], "zurueck": [184, 243, 281], "objektidentit\u00e4t": [184, 202], "0x7fe9d8578dc0": 184, "referenzieren": 184, "wechselt": 184, "zeigt": [184, 194, 1164], "identit\u00e4t": 184, "0x7fe9c4454d90": 184, "listen": [184, 190, 195, 196, 200, 235, 254, 307, 335, 786, 901, 917, 1116, 1163, 1168, 1170], "ausdrucksstark": 184, "trotzdem": [184, 1157, 1164], "lesbar": [184, 233], "beid": [184, 199, 215, 1171], "modifizieren": 184, "modifik": 184, "sichtbar": [184, 353], "gerechnet": 184, "valueerror": [184, 194, 210, 216, 223, 231, 233, 236, 239, 243, 246, 249, 252, 264, 271, 285, 303, 307, 313, 999, 1046], "typeerror": [184, 220, 223, 226, 231, 233, 236, 239, 243, 246, 249, 261, 264, 271, 281, 285, 303, 307, 313, 329, 998, 999, 1012, 1019, 1042, 1051, 1122], "gel\u00f6scht": 184, "retten": 184, "uff": 184, "140641996429568": 184, "\u00e4ndern": [184, 196, 1171], "erzeugt": [184, 194], "operanden": 184, "unver\u00e4ndert": 184, "new_l": [184, 239, 1032], "140641996429632": 184, "hurra": [184, 201, 264], "killerfeatur": 184, "abcabc": [184, 223], "sequentiel": [184, 194, 233, 238, 1152], "suche": 184, "Suche": [184, 196, 207, 215, 233], "umst\u00e4ndlich": [184, 194], "andrea": [184, 185, 243, 681, 688], "pfeifer": 184, "gefundener_us": 184, "glauben": 184, "klammern": 184, "begrenz": 184, "interpretiert": 184, "overriden": 184, "ausdruck": 184, "evaluierungsreihenfolg": 184, "9223372036854775808": 184, "einstellig": 184, "schreibt": [184, 890, 1171], "datenmengen": 184, "abzulegen": 184, "sucht": 184, "solchen": [184, 194], "vorstellungsvermoegen": 184, "milliarden": 184, "sebastian": 184, "hugo": [184, 226], "machma": 184, "behandeln": 184, "nichtvorhandensein": 184, "ausnahm": 184, "regel": 184, "mim": 184, "victor": 184, "festzustellen": 184, "evaluiert": 184, "aufgerufen": 184, "operand": [184, 201, 220, 223, 249, 379, 380, 381, 387, 578, 579, 581, 582, 677, 710, 1019, 1033], "bereit": [184, 195, 1147, 1152, 1163], "gesamtergebni": 184, "jaja": [184, 239], "rechten": 184, "sparen": 184, "potschert": [184, 196, 199, 202, 226, 233, 246, 313], "berechnung": [184, 233], "summ": [184, 207, 233, 239, 243, 246, 271, 296], "einzig": [184, 488, 502, 1166, 1169], "iteriert": [184, 194], "bildet": [184, 239], "primitiveren": 184, "intelligenteren": 184, "0x7fe9c43c3c90": 184, "letzt": [184, 199, 244], "schleif": [184, 195, 196, 200, 1163], "jede": [184, 335, 340, 1147, 1170, 1171], "selb": [184, 194], "k\u00fcrzer": 184, "vergleicht": 184, "objektidentit\u00e4ten": 184, "objektinhalt": 184, "modifiziert": 184, "kopieren": [184, 335, 340, 1152], "vermeintlich": 184, "modifiktionen": 184, "sch\u00fctzen": 184, "l3": [184, 201, 233, 239, 249, 261, 271, 281, 291, 313, 482], "kopi": [184, 233], "klar": [184, 194, 1148], "geschachtelt": [184, 195, 196, 1163], "gleicher": 184, "referenziert": [184, 194], "erachtet": 184, "ersparst": 184, "kopien": 184, "ran": [184, 256, 306, 450, 467, 516, 517, 518, 519, 580, 719, 993, 1140], "parametern": [184, 207], "beliebigen": [184, 890], "definieren": 184, "vergleichbar": 184, "unterst\u00fctzen": 184, "ihn": [184, 243], "\u00e4pfel": 184, "birnen": 184, "verglichen": 184, "hingegen": [184, 194, 1166], "php": [184, 214, 230, 722], "falschem": 184, "uebergeben": 184, "vergleich": [184, 207, 215, 244, 254], "aepfeln": 184, "140641996137808": 184, "add_to_list": 184, "__defaults__": [184, 233, 243, 264, 285, 1042], "meine_list": [184, 194], "defaultwert": 184, "benutzt": [184, 1157], "allerhand": 184, "seiteneffekten": 184, "aufpassen": 184, "ewig": 184, "existierend": 184, "unf\u00e4ll": 184, "wechselwirkungen": 184, "eventuellen": 184, "globalen": [184, 194], "156": [184, 194, 201, 223, 226, 231, 233, 236, 239, 243, 246, 249, 261, 264, 281, 285, 291, 303, 307, 313], "erzwingt": 184, "158": [184, 194, 201, 210, 223, 226, 231, 233, 236, 239, 243, 246, 249, 252, 261, 264, 268, 281, 285, 291, 303, 307, 313], "160": [184, 194, 201, 210, 223, 226, 231, 233, 239, 243, 246, 261, 264, 275, 281, 285, 291, 303, 307, 313, 449, 755], "gesucht": 184, "genauer": 184, "n\u00e4chst\u00e4u\u00dferen": 184, "162": [184, 194, 201, 223, 226, 231, 233, 236, 239, 243, 246, 249, 261, 264, 281, 285, 291, 303, 307, 313], "nirgend": 184, "163": [184, 194, 201, 217, 223, 226, 231, 233, 239, 243, 246, 249, 261, 264, 281, 285, 291, 303, 307, 313], "gibtsnetglob": 184, "gibtsnet": 184, "164": [184, 194, 201, 210, 223, 226, 231, 233, 239, 243, 246, 249, 261, 264, 281, 285, 291, 303, 307, 313], "nameerror": [184, 199, 233, 239, 264, 285, 291, 999, 1041], "aufgabenstellung": 184, "kandidat": 184, "ersten": [184, 186, 199, 291, 327, 1149, 1169, 1171], "unsportlich": 184, "zweiten": [184, 186, 291], "unnachhaltig": 184, "dritten": [184, 291], "gelegenheit": 184, "gab": [184, 186], "erz\u00e4hlen": [184, 1150], "165": [184, 194, 201, 223, 226, 231, 233, 236, 239, 243, 246, 249, 261, 264, 271, 281, 285, 291, 303, 307, 313, 1057], "seq": [184, 202, 264, 792, 964, 1002], "fromkei": [184, 230, 235, 247], "166": [184, 194, 201, 223, 226, 231, 233, 239, 243, 246, 261, 264, 281, 285, 291, 303, 307, 313], "167": [184, 194, 201, 223, 226, 231, 233, 236, 239, 243, 246, 249, 261, 264, 271, 281, 285, 291, 303, 307, 313], "xxx": [184, 201, 223, 231, 233, 239, 249, 271, 303, 307, 313, 329, 331, 411, 487], "kksvjhbsk": 184, "sgkysdudsvvc": 184, "dict_kei": [184, 252, 281, 1048], "diesmal": 184, "169": [184, 194, 201, 210, 223, 226, 231, 233, 236, 239, 243, 246, 252, 261, 264, 281, 285, 291, 303, 307, 313], "170": [184, 201, 210, 217, 223, 226, 231, 233, 236, 239, 243, 246, 249, 261, 264, 281, 285, 291, 303, 307, 313], "irgendein": [184, 216], "171": [184, 201, 203, 210, 223, 226, 231, 233, 239, 243, 246, 249, 252, 261, 264, 281, 285, 291, 303, 307, 313, 332], "sonst": [184, 194, 231, 233, 246], "kategori": 184, "number_str": 184, "173": [184, 201, 223, 226, 231, 233, 236, 239, 243, 246, 249, 261, 264, 271, 281, 285, 291, 303, 307, 313, 893], "ihm": [184, 186, 195], "174": [184, 201, 223, 226, 231, 233, 236, 239, 243, 246, 252, 261, 264, 281, 285, 291, 303, 307, 313, 884], "176": [184, 201, 223, 226, 231, 233, 236, 239, 243, 246, 249, 261, 264, 285, 291, 303, 307, 313], "177": [184, 201, 223, 226, 231, 233, 239, 243, 246, 249, 261, 264, 281, 285, 291, 303, 307, 313], "178": [184, 201, 210, 223, 226, 231, 233, 239, 243, 246, 252, 261, 264, 281, 285, 291, 303, 307, 313], "179": [184, 191, 201, 223, 226, 231, 233, 236, 239, 243, 246, 249, 252, 261, 264, 271, 281, 285, 291, 303, 307, 313], "180": [184, 201, 223, 226, 231, 233, 236, 239, 243, 246, 249, 252, 261, 264, 271, 281, 285, 291, 303, 307, 313, 444, 786], "181": [184, 201, 223, 226, 231, 233, 239, 243, 246, 261, 264, 271, 281, 285, 291, 303, 307, 313, 444], "heisst": [184, 196, 200, 201, 1151, 1157], "sequenz": 184, "kopiert": 184, "unterschi": [184, 201, 207, 231], "sobald": [184, 186], "183": [184, 201, 210, 223, 226, 231, 233, 239, 243, 246, 249, 252, 261, 264, 271, 281, 285, 291, 303, 307, 313], "\u00fcbergeben": 184, "184": [184, 201, 223, 226, 231, 233, 236, 239, 243, 246, 252, 261, 264, 271, 281, 285, 291, 303, 307, 313], "it1": 184, "it2": 184, "multipli": [184, 211, 224, 243, 285, 667], "n2": [184, 243], "combined_iter": 184, "186": [184, 201, 210, 223, 226, 231, 233, 236, 239, 243, 246, 249, 252, 261, 264, 271, 281, 285, 291, 303, 307, 313], "schlecht": 184, "simplen": 184, "transformationen": 184, "generieren": 184, "quadratzahlen": [184, 233], "187": [184, 223, 226, 231, 233, 239, 243, 246, 249, 252, 261, 264, 271, 281, 285, 291, 303, 307], "quadrat": 184, "naeherung": 184, "performant": 184, "gen_squar": 184, "189": [184, 201, 223, 226, 231, 233, 236, 239, 243, 246, 252, 261, 264, 281, 285, 291, 303, 307], "syntaktisch": [184, 207], "191": [184, 201, 210, 223, 226, 231, 233, 239, 243, 246, 249, 252, 261, 264, 281, 285, 291, 303, 307], "genexpr": [184, 210, 303, 313], "0x7fe9c43f2900": 184, "193": [184, 201, 210, 223, 226, 231, 233, 239, 243, 246, 249, 261, 264, 271, 281, 285, 291, 303, 307, 313], "194": [184, 201, 210, 223, 226, 231, 233, 236, 239, 243, 246, 252, 261, 264, 271, 285, 291, 303, 307, 313], "195": [184, 201, 223, 226, 231, 233, 236, 239, 243, 246, 252, 264, 285, 291, 303, 307, 313], "indent": [184, 199, 217, 224, 230, 239, 240, 390, 1022, 1025, 1035, 1125], "196": [184, 201, 210, 223, 226, 231, 233, 236, 239, 243, 246, 252, 261, 264, 271, 281, 285, 291, 303, 307, 313], "userlist": 184, "nochwa": [184, 233, 271], "dropdown": 184, "dropdownlist": 184, "fehleranf\u00e4llig": 184, "198": [184, 201, 210, 223, 226, 231, 233, 236, 239, 243, 246, 252, 264, 271, 281, 285, 291, 303, 307, 313], "202": [184, 201, 210, 220, 223, 226, 231, 233, 236, 239, 243, 246, 249, 261, 264, 271, 285, 291, 303, 307, 444, 467], "203": [184, 201, 210, 212, 223, 226, 231, 233, 236, 239, 243, 246, 261, 264, 285, 291, 303, 307, 313], "205": [184, 210, 223, 226, 231, 233, 236, 239, 243, 246, 249, 261, 264, 281, 285, 291, 303, 307, 313], "206": [184, 223, 226, 231, 233, 239, 243, 246, 249, 261, 264, 285, 291, 303, 307, 313], "207": [184, 210, 223, 226, 231, 233, 239, 243, 246, 249, 264, 285, 291, 307, 313], "208": [184, 223, 226, 231, 233, 239, 243, 246, 249, 264, 285, 291, 303, 307, 313], "209": [184, 210, 223, 226, 231, 233, 239, 243, 246, 249, 261, 264, 285, 291, 303, 307, 313], "user_a": 184, "user_b": 184, "n\u00e4herung": 184, "nackten": [184, 1150], "210": [184, 210, 223, 226, 231, 233, 239, 243, 246, 264, 271, 285, 291, 303, 307, 313], "hantiert": [184, 1151], "anderem": [184, 1157, 1164], "211": [184, 210, 223, 226, 231, 233, 239, 243, 246, 249, 261, 264, 281, 285, 291, 307, 313], "reviewten": 184, "funktionsaufruf": [184, 246], "sonder": 184, "stackoverflowprogrammierung": 184, "entgegenwirken": 184, "ausholen": 184, "212": [184, 210, 223, 226, 231, 233, 236, 239, 243, 246, 249, 261, 264, 285, 291, 303, 313], "veloc": [184, 210, 331, 1042], "length_m": [184, 210, 331, 1042], "time_": [184, 210, 331, 1042], "213": [184, 223, 226, 231, 233, 236, 239, 243, 246, 249, 261, 264, 285, 291, 313], "spiel": 184, "214": [184, 223, 226, 231, 233, 239, 243, 246, 249, 261, 264, 285, 291, 303, 313], "liegen": 184, "positionel": 184, "215": [184, 223, 226, 231, 233, 239, 243, 246, 249, 261, 264, 271, 285, 291, 313], "param": [184, 194, 207, 224, 252, 285, 673, 722, 723, 907, 963], "216": [184, 210, 223, 226, 231, 233, 239, 243, 246, 261, 264, 271, 285, 291, 303, 307, 313], "217": [184, 223, 226, 231, 233, 236, 239, 243, 246, 249, 264, 271, 281, 285, 291, 303, 307, 313], "218": [184, 223, 226, 231, 233, 236, 239, 243, 246, 249, 261, 264, 271, 281, 285, 291, 303, 307, 313], "219": [184, 210, 223, 226, 231, 233, 239, 243, 246, 249, 261, 264, 281, 285, 291, 303, 313], "entpacken": 184, "positionellen": 184, "221": [184, 210, 223, 226, 231, 233, 239, 243, 246, 249, 261, 264, 271, 281, 285, 291, 303, 307], "kwarg": [184, 210, 237, 239, 243, 264, 285, 997, 1001, 1022], "explizi": 184, "rauskletzeln": 184, "223": [184, 223, 226, 231, 233, 236, 239, 243, 246, 249, 264, 271, 285, 291, 303, 307, 313, 1113], "celebrate_another_birthdai": 184, "224": [184, 223, 226, 231, 233, 236, 239, 243, 246, 249, 264, 271, 285, 291, 307, 313], "227": [184, 223, 226, 231, 233, 239, 243, 246, 249, 264, 271, 281, 285, 291, 303, 313], "228": [184, 223, 226, 231, 233, 236, 239, 243, 246, 249, 264, 271, 285, 291, 303, 313], "zeiterfassung": 185, "__pycache__": [185, 211, 224], "supp": 185, "cpython": [185, 210, 220, 226, 236, 239], "pyc": 185, "dienstag": 186, "anleitung": 186, "offen": [186, 353, 1147], "vorwissen": [186, 1152], "konkreten": [186, 353], "aufgabenstellungen": 186, "dienstgeb": 186, "mitgebracht": 186, "quickstart": [186, 1158], "vorgetragen": 186, "wenngleich": [186, 353, 1157, 1167, 1169, 1170], "un\u00fcblichen": 186, "reihenfolg": [186, 1148], "verbrachten": 186, "firmenprojekt": 186, "entspringenden": 186, "festgehalten": 186, "empfehlungen": 186, "weitergehen": 186, "k\u00f6nnte": [186, 1171], "idiomat": [186, 187, 190, 208, 211, 218, 234, 237, 260, 284, 1100], "lieblingsphras": 186, "bringt": [186, 1150, 1169], "forgiv": [186, 187, 284, 1100], "eafp": [186, 187, 284, 1100], "begriff": [186, 200], "viertelstund": 186, "regex": [186, 199, 224, 226, 251, 252, 261, 284, 291, 1044, 1100], "unumg\u00e4nglich": [186, 1165], "textuel": 186, "analysieren": 186, "hero": [186, 187, 208, 211, 234, 260, 284, 306, 1100], "unterhaltsamen": 186, "keynot": [186, 187, 208, 211, 234, 237, 260, 284, 306, 1100], "konferenz": 186, "pydata": [186, 187, 208, 211, 234, 260, 284, 306, 1100], "chicago": [186, 187, 208, 211, 234, 260, 284, 306, 1100], "witzig": 186, "kommt": [186, 201, 211, 214, 240, 1160, 1169, 1171], "selten": 186, "l\u00e4nge": 186, "ganzen": [186, 195, 1163], "abend": 186, "totalschaden": 186, "\u00fcbertragen": 186, "jedem": 186, "angemeldet": 186, "experienc": [187, 276, 278, 305, 353, 1028, 1158], "machinelearn": 187, "fuzzi": [187, 226], "improvis": 187, "shall": 187, "jango": 187, "rush": 187, "strong": [187, 237, 380, 1107, 1109], "claus": [187, 190, 220, 226, 236, 241, 263, 682, 1002, 1035, 1038], "whet": [187, 270], "appetit": [187, 270], "get_temperatur": [187, 239, 302, 461, 464, 465, 467, 472, 474, 484, 485, 490, 492, 493, 495, 498, 499, 503, 506, 511, 512, 513, 514, 518, 519, 520, 531, 549, 670, 718, 719, 720, 721, 739, 741, 743, 744, 745, 746, 1012, 1088], "__dict__": [187, 207, 210, 211, 223, 224, 233, 236, 239, 243, 252, 264, 281, 285, 303, 1013, 1019], "con": [187, 739, 887, 993], "fiction": 187, "get_temperature_celsiu": 187, "competitor": 187, "eana": 187, "get_temperature_fahrenheit": 187, "eanaadapt": 187, "unserthermomet": 187, "revisit": [187, 229, 237, 260, 278, 302, 595], "shift": [187, 228, 420, 432, 564, 613, 907, 1019], "visitor": [187, 736, 744, 746], "gang": [187, 1156], "idiom": [187, 561, 698], "classic": [187, 419, 470, 561, 740, 754, 755, 794, 1156], "travers": [187, 433, 706, 718, 999, 1004, 1040], "convolut": 187, "__call__": [187, 233, 243, 264, 285, 291, 998], "__str__": [187, 210, 211, 224, 233, 236, 239, 243, 261, 264, 285, 302, 303, 346, 999], "__repr__": [187, 233, 236, 239, 243, 261, 264, 285, 303], "poor": [187, 229, 373, 388, 397, 404, 410, 414, 417, 421, 430, 434, 439, 440, 662, 700, 752, 754, 755, 792, 899, 929, 974], "deleg": [187, 316, 570, 700, 754, 755, 1153], "deck": [187, 212, 538], "sensordata": 187, "sensordata_test": 187, "historydata": 187, "slowli": [187, 555, 660, 784, 899], "csvreport": 187, "csv2sqlite3": 187, "frontend": [187, 571, 976, 994, 1129], "flaskerl": 187, "reiter": [187, 208, 227, 229, 234, 237, 343, 572, 1100], "phrase": [187, 190, 208, 231, 233, 234, 237, 239, 264, 829, 830, 1017, 1100], "impress": [187, 418], "brought": [187, 432, 1008], "cloth": 187, "extraordinari": 187, "mondai": [188, 190, 192, 193, 218, 267, 273, 276, 278], "preliminari": [188, 190, 191, 192, 193], "homogen": [188, 353], "versu": [188, 190, 192], "immut": [188, 190, 192, 194, 195, 202, 209, 211, 222, 223, 224, 226, 232, 238, 241, 247, 253, 262, 270, 272, 273, 286, 303, 307, 314, 330, 402, 1023, 1030, 1031, 1032, 1036, 1163], "datastructur": [188, 212, 230, 1036], "exercise4": 188, "uh2ebfw8oym": [188, 192], "f26namfjggw": 188, "5qqq3yzbkp8": 188, "ugharkscop9uthgcoaec": 188, "pairwis": [189, 223, 577], "vale": 189, "bewar": [189, 381, 906, 974, 1105, 1107], "cheaper": [189, 432, 579, 581, 582, 660], "memorywis": 189, "johann": 189, "syntact": [189, 210, 389, 532, 572, 660, 712], "sugar": [189, 660, 712], "allow": [189, 190, 210, 239, 375, 442, 647, 720, 753, 784, 807, 1062, 1133, 1153], "retval": [189, 428, 618, 945], "dlc": 189, "msg1": 189, "readabl": [189, 233, 243, 277, 368, 399, 403, 423, 424, 425, 432, 442, 444, 503, 617, 638, 653, 661, 664, 699, 710, 712, 718, 723, 724, 837, 847, 853, 858, 862, 884, 909, 976, 1002, 1021, 1042, 1050, 1052, 1071], "0x7f41f5ff26a0": 189, "msglist": 189, "0x7f41f5ff4160": 189, "0x7f41f5ff41c0": 189, "291130": 189, "now_timestamp": 189, "1603884859": 189, "3412576": 189, "fromtimestamp": 189, "341258": 189, "372": [189, 226, 233, 271], "45259": 189, "microsecond": [189, 423, 839], "programmverweis": 190, "xy": [190, 233, 236, 271, 580, 1040], "zab": 190, "eventcodefil": 190, "definedlisaev": 190, "event_id": 190, "bla": [190, 313], "blubb": 190, "verbessert": 190, "stringformatierung": 190, "ctype": 190, "headerfil": [190, 890], "lst": [190, 226, 844, 1148], "callbackfunc": 190, "datetim": [190, 211, 217, 218, 219, 224, 272, 275, 312, 313, 1057], "observ": [190, 259, 277, 320, 459, 466, 480, 483, 494, 508, 560, 755, 1005, 1006, 1112, 1156], "longish": 190, "resurrect": [190, 445, 862], "outputsequ": 190, "resist": 190, "uncondition": [190, 805, 999], "suitabl": [190, 239, 285, 775, 899, 948, 1012, 1021], "analysi": [190, 432, 740, 1102, 1105, 1118], "cp1252": [190, 1094, 1095, 1097], "csvlog": 190, "csv_reader": 190, "recv": [190, 191, 902], "tuesdai": [191, 273, 288], "246": [191, 223, 226, 231, 233, 236, 239, 246, 264, 281, 285, 291, 313, 1113], "corpor": [191, 264], "commandin": [191, 193], "comress": [191, 193], "gzip": [191, 193, 257, 266, 287, 288, 755, 802, 825, 827, 828, 832, 898, 986, 987, 1159], "diagnos": [191, 193, 336, 337, 1157, 1164], "netstat": [191, 193, 266, 287, 288, 1116, 1157, 1164], "netcat": [191, 193, 266, 287, 288], "subshel": [191, 193, 203], "telnetd": 191, "insecur": [191, 915], "proto": 191, "foreign": [191, 267, 403], "34490": 191, "56062": 191, "sshd": [191, 223, 239, 246, 249, 264, 271, 281, 285, 307, 313, 834, 838, 840, 893, 909, 919], "systemctl": [191, 990, 1116], "freedesktop": 191, "systemd1": 191, "quickli": [191, 278, 293, 305, 306, 309, 338, 402, 462, 907, 1155], "unprivileg": 191, "putti": [191, 203, 332], "puttygen": 191, "id_rsa": [191, 915], "authorized_kei": [191, 915], "trivia": 191, "hoorai": [191, 236, 249, 271, 1035], "idiot": 191, "blinker": 191, "briana": 191, "mac": [191, 208, 224, 862, 1026, 1100, 1136], "wakeup": [192, 229, 306, 346, 350, 732, 755, 798, 898, 907, 926, 939, 949, 959, 961], "patrick": 192, "1996": [192, 226], "wagna": 192, "gernot": 192, "1982": [192, 226], "birthplac": 192, "txt2json": 192, "equip": [193, 267, 343, 899, 1157, 1164], "wobei": 194, "deppert": [194, 207, 330], "sidestep": 194, "builtin_function_or_method": [194, 264, 291, 313], "sozusagen": 194, "genauso": [194, 1147], "aufrufen": [194, 890], "zaehler": 194, "initialwert": 194, "zaehlen": 194, "naechsten": 194, "schleifendurchlauf": 194, "locker": [194, 800], "mein_integ": 194, "1024": [194, 226, 833, 839, 862, 924], "sch\u00fctzt": 194, "passen": [194, 261], "gehandhabt": 194, "1267650600228229401496703205376": [194, 220, 223, 231, 243, 249, 271], "hoch": 194, "rechnen": [194, 335, 340], "tut": [194, 303, 330, 1150], "ausschliesslich": [194, 1159], "ganzzahldivis": 194, "ganzzahligen": 194, "resultat": 194, "gleichen": [194, 1157, 1170], "vorrang": 194, "ghi": [194, 233], "viert": 194, "nwelt": 194, "nwie": 194, "linefe": [194, 203, 224, 231, 364, 365, 1044, 1050, 1080, 1125], "bedeutung": [194, 1152, 1159], "unangetastet": 194, "glump": 194, "nebenlaeufigkeitsdemo": 194, "ebenlaeufigkeitsdemo": 194, "l\u00f6sung": [194, 207, 216, 353, 901], "formatierungsm\u00f6glichkeit": 194, "pfx_var1": 194, "pfx_var2": 194, "ausgab": [194, 1150], "notwendig": [194, 1149, 1165, 1166], "abzubrechen": 194, "ignorieren": [194, 195, 201, 1163], "gefunden": [194, 264, 890], "value1": [194, 1060], "501": [194, 226, 1060], "value2": [194, 1060], "799": [194, 223, 226, 1057, 1060], "value3": [194, 1060], "sprachen": [194, 195, 1150, 1163], "neg": [194, 239, 243, 313, 381, 423, 428, 640, 780, 893, 1140], "indiz": 194, "erscheinen": 194, "komisch": 194, "bequem": 194, "mapping_t": 194, "f\u00fcnf": [194, 1157], "sieben": [194, 207, 233, 618], "neun": 194, "explicit": [194, 213, 220, 224, 233, 241, 243, 378, 387, 415, 428, 432, 445, 487, 488, 501, 502, 538, 564, 566, 567, 591, 617, 660, 661, 670, 677, 682, 690, 697, 702, 717, 720, 773, 928, 942, 974, 994, 995, 1025, 1028, 1031, 1108, 1121], "implicit": [194, 220, 233, 243, 368, 374, 378, 543, 659, 661, 677, 862, 931, 1017, 1031], "primzahlen": 194, "checken": 194, "primzahl": [194, 195, 1163], "checkenden": 194, "zahl": [194, 201, 207, 232, 233, 236, 246, 330], "probier": 194, "gach": [194, 233], "teiler": 194, "teiler_kandidaten": 194, "prim": 194, "gleichema\u00dfen": 194, "vollst\u00e4ndigkeit": 194, "halber": 194, "startend": [194, 233], "schrittweit": 194, "0x7f24f2ac0e50": 194, "ablegen": 194, "0x7f24f2ac0e70": 194, "arschlangsam": 194, "num_comparison": 194, "datenstruktur": [194, 215], "suchen": [194, 215, 889, 1152, 1159], "einf\u00fcgen": [194, 1157], "optimiert": [194, 207], "perfekt": 194, "einitreten": 194, "himmi": 194, "list_reverseiter": [194, 223, 246, 271], "0x7f24ec31d190": 194, "bricht": 194, "beinhart": 194, "liefert": [194, 1159], "lieber": 194, "zweit": [194, 207, 233, 264, 303, 330, 1157], "po": [194, 233, 239, 243, 264, 269, 281, 285, 307, 313, 444, 520, 613, 640], "wirklichkeit": 194, "ordin\u00e4r": 194, "alternativen": 194, "fruit": 194, "gemma": 194, "divisor_candid": 194, "161": [194, 201, 223, 226, 231, 233, 236, 239, 243, 246, 249, 261, 264, 281, 285, 291, 303, 307, 313], "wegen": 194, "dogma": 194, "zugewiesen": 194, "meine_vari": 194, "eine_vari": [194, 271, 281, 313], "angelegt": 194, "streng": 194, "obigem": 194, "dazusagen": 194, "noch_eine_globale_vari": 194, "increment_diese_vari": 194, "offiziel": [195, 197, 205, 208, 211, 212, 214, 230, 242], "leitfaden": 195, "kommentar": [195, 196, 207, 271, 330, 1163], "platziert": [195, 215], "hackereien": 195, "gleicherma\u00dfen": 195, "sogenannten": 195, "semantik": [195, 196, 1163], "sprach": [195, 196, 1150, 1151, 1152, 1163, 1164, 1171], "standarddatentypen": [195, 196, 1163], "literal": [195, 196, 254, 1163], "python2": [195, 233, 1163], "endg\u00fcltig": [195, 1163], "rausl\u00f6schen": [195, 1163], "konstanten": [195, 196, 1163], "typen": [195, 201, 1159, 1163, 1169], "operatoren": [195, 196, 890, 1152, 1163], "angeschnitten": [195, 1163], "vertiefung": [195, 211, 1163], "nocheinm": [195, 353, 1163], "ausdr\u00fcck": [195, 196, 254, 1163], "operatorrangfolgen": [195, 196, 1163], "grundlegenden": [195, 336, 1159, 1163], "sprachelementen": [195, 1163], "rede": [195, 1163], "syntaxdiagramm": [195, 1163], "gespritzt": [195, 1163], "gesamt": [195, 1163], "sperrig": [195, 1163], "n\u00fctzt": [195, 1163], "menschlich": [195, 1163], "abzubilden": [195, 1163], "tabel": [195, 1163], "anweisungen": [195, 196, 1163], "gro\u00dfen": [195, 1163], "fisch": [195, 1163], "instruktiv": [195, 1163], "bedingungen": [195, 196, 1149, 1163], "verzweigungen": [195, 196, 1163], "bedingt": [195, 196, 1150, 1163], "anweisung": [195, 196, 1163], "formulierungen": [195, 1163], "mehrfach": [195, 196, 1163], "fallauswahl": [195, 196, 1163], "benutzereingaben": [195, 1163], "\u00fcberpr\u00fcfen": [195, 1163], "schleifenkonstrukt": [195, 1163], "weitgehend": [195, 1163], "unserem": [195, 1163], "vehikel": [195, 1163], "hilfreich": [195, 1159, 1163], "klarstellung": [195, 1163], "fu\u00dfgesteuert": [195, 196, 1163], "z\u00e4hlergesteuert": [195, 196, 1163], "auslassen": [195, 1163], "kopfgesteuert": [195, 196, 1163], "gewinnt": [195, 1163], "konsol": [195, 1163], "anzeigen": [195, 1159, 1163], "voraussetzung": [195, 1163], "ausblick": [195, 1163], "schnell\u00fcbersicht": [195, 196, 1163], "sprunganweisungen": [195, 196, 1163], "endlosschleifen": [195, 196, 1163], "naja": [195, 1163], "reinschauen": [195, 1163], "mager": [195, 1163], "ausgelassen": [195, 1163], "eindimensional": [195, 196, 1163], "gefolgt": [195, 233, 1163], "zeichenketten": [195, 196, 1163], "tupel": [195, 196, 199, 1163], "besonder": [195, 196, 1163], "stapel": [195, 196, 1163], "schlangen": [195, 196, 1163], "tempo": [195, 1163], "schauma": [195, 201, 1163], "fallt": [195, 1163], "gscheit": [195, 202, 313, 1163], "gemeinsam": [195, 1147, 1149, 1163, 1166], "dr\u00fcber": [195, 1163], "vielzahl": [195, 1163, 1167, 1170], "l\u00f6sungsm\u00f6glichkeiten": [195, 1163], "eingegangen": [195, 1147, 1163, 1167], "pythonischst": [195, 1163], "bestritten": [195, 1163], "unterprogramm": [195, 196, 1163], "parameter\u00fcbergab": [195, 196, 1163], "r\u00fcckgabewert": [195, 196, 1163], "inner": [195, 196, 216, 444, 998, 1163], "standardbibliotheken": [195, 196, 1163], "funktionalit\u00e4ten": [195, 196, 1163], "berechnet": [195, 231, 239, 1163], "satz": 195, "gepr\u00e4gt": 195, "konferenzen": 195, "definitiv": 195, "sehenswert": 195, "anf\u00e4nger": [195, 1166], "hochinteress": 195, "sprachelement": 196, "elementar": 196, "beliebig": [196, 231, 1164], "gro\u00df": [196, 1169], "vergleichsoperatoren": 196, "strichrechnung": 196, "modulo": [196, 207, 220, 226, 231, 239, 330, 379, 1019, 1031], "un\u00e4rer": 196, "negat": [196, 220, 243, 891, 1019, 1031, 1049], "konvertierungen": [196, 1150], "pr\u00e4zendenzregeln": 196, "vertauschen": [196, 207, 330], "kontrollstrukturen": [196, 232, 1150], "verzweigung": 196, "schleifen": [196, 254, 1149], "versuch": [196, 208], "hybrid": [196, 634], "supergscheit": 196, "prozeduren": 196, "funktionen": [196, 200, 254, 336, 1149, 1150, 1152, 1160], "funktionspoint": 196, "funktionsobjekt": 196, "primzahlenbeispiel": 196, "laufzeitfehl": 196, "lokal": [196, 207, 253, 254, 1170], "zuweisen": 196, "fehlerfal": 196, "anschliessend": 197, "interaktiv": 197, "uebungen": 197, "idealerweis": [197, 271], "ueblichen": 197, "negoti": 198, "deiniti": [198, 780, 1158], "unload": [198, 782, 796, 798, 1158], "synchronizt": 198, "spinlock": [198, 755, 779, 794, 800, 804, 806, 810, 811, 817, 820, 821, 823, 898, 962, 1158], "rcu": 198, "halv": 198, "softirq": 198, "tasklet": [198, 800], "irss": 198, "kmalloc": [198, 755, 764, 769, 772, 773, 774, 779, 783, 792, 793, 797, 799, 806, 811, 814, 817, 820, 823, 898], "dma": [198, 755, 779, 797, 799, 841, 898, 923, 924, 925, 1158], "coher": [198, 773], "20201125": [199, 201], "unbekannten": 199, "lookup_t": [199, 202, 330], "12345": [199, 231, 243, 271, 1134], "noch_eine_list": 199, "gesamte_list": 199, "vorl\u00e4ufig": 199, "letz": 199, "indented_text": 199, "nebenbei": [199, 201, 330], "eine_zum_sterben_verurteilte_vari": 199, "ein_set": 199, "sequenzen": 199, "grottenlangsam": 199, "subscript": [199, 233, 303, 408, 595, 616, 620, 1121], "multiple_return_valu": 199, "xyz": [199, 201, 207, 226, 233, 264], "mein_formatierter_str": 199, "my_rang": [199, 239, 285, 291, 313], "retlist": 199, "zeichenkett": 199, "funktionieren": [199, 1152, 1170], "my_list": [199, 210, 252], "airms_eth": 199, "simplizistisch": 199, "bl\u00f6d": 199, "i_oder_v": 199, "iv": 199, "rms_eth": 199, "vorcompilieren": 199, "acirms_eth": 199, "my_regex": 199, "zeilennumm": 199, "dazuhaben": 199, "meine_zu_sendenden_daten": 199, "345": [199, 220, 226, 239, 271, 303, 313], "234": [199, 223, 226, 231, 233, 236, 239, 243, 246, 249, 264, 281, 285, 291, 303, 307, 313, 330], "meine_zu_sendenden_daten_in_string_form": 199, "ueblicherweis": 199, "ueber": 199, "verschickt": 199, "empfangen": [199, 214], "geschrieben": [199, 1170], "empfaeng": 199, "empfangenen": 199, "natuerlich": 199, "zurueckkonvertieren": 199, "meine_empfangenen_daten_python_form": 199, "gegangen": [199, 252], "wurscht": [199, 239, 313, 890], "returnwerten": 200, "containerdatentypen": 200, "untypisiert": 200, "zeilen": [201, 243, 1159], "neiner": 201, "nund": [201, 220], "nb": 201, "stoppt": 201, "newlin": [201, 203, 216, 239, 264, 281, 326, 357, 364, 377, 1028, 1044], "ndrin": 201, "drin": [201, 202, 207, 243, 271, 281, 330, 335], "zuviel": [201, 1152], "mischt": 201, "unsupport": [201, 223, 249, 1019], "140546731085392": 201, "0x7fd395fb0e50": 201, "0x7fd3900395b0": 201, "new_t": [201, 1032], "0x7fd390052800": 201, "667": [201, 223, 226, 246, 252, 555], "2923750584022716461": 201, "529344067295497451": 201, "unhash": [201, 261, 271, 285, 313], "fuenf": [201, 223, 233, 261, 271, 285, 303, 330], "verschluckt": 201, "6000000": 201, "elementen": [201, 215], "nonetyp": [201, 211, 225, 226, 281, 291, 303], "_io": [201, 220, 223, 226, 236, 239, 271, 285, 327, 804], "textiowrapp": [201, 220, 223, 226, 236, 239, 271, 285, 327, 997], "oi": 201, "456": [201, 202, 226, 233, 271, 377], "hansi": [201, 239, 243, 246], "linspac": [201, 307], "11111111": 201, "22222222": 201, "33333333": 201, "44444444": 201, "55555556": 201, "66666667": 201, "77777778": 201, "88888889": 201, "sin": 201, "8961922": 201, "79522006": 201, "19056796": 201, "96431712": 201, "66510151": 201, "37415123": 201, "99709789": 201, "51060568": 201, "54402111": 201, "plot": [201, 220, 249, 252, 303, 307, 313, 996, 1054, 1106, 1107], "line2d": [201, 249, 252, 303, 307, 313], "0x7fd35cd3ef40": 201, "splev": 201, "splrep": 201, "spline": 201, "represent": [201, 220, 239, 706, 812, 906, 907], "spl": 201, "evalu": [201, 220, 225, 231, 241, 360, 380, 385, 387, 395, 402, 403, 481, 482, 495, 496, 667, 677, 845, 862, 999, 1033, 1035, 1042, 1140], "x2": [201, 243], "y2": 201, "0x7fd341a486d0": 201, "speicher": [202, 1150, 1157, 1164], "sch\u00fctze": 202, "gemischten": 202, "operationen": [202, 1169], "interpol": [202, 243, 1105], "lag": 202, "gib": [202, 281], "depp": [202, 231], "ret_l": 202, "uniq_l": 202, "read_excel": [202, 1105], "invit": [203, 634], "effici": [203, 248, 302, 392, 431, 433, 435, 596, 600, 610, 613, 715, 846, 893, 895, 1004, 1107, 1118, 1121, 1158], "expans": [203, 890, 891, 1149], "ecdsa": [203, 332], "fingerprint": [203, 332, 910, 961], "sha256": [203, 332, 910], "in22o4vcd400x0bb4flcb5": [203, 332], "vqnrvkvoirgfqq6mapo": [203, 332], "perman": [203, 332], "individu": [203, 332, 384, 442], "sat": [203, 332], "straight": [203, 682, 1122], "startung": 203, "standpoint": 203, "suboptim": [203, 252], "pwned": 203, "hidden": [203, 473, 668, 775, 976], "clumsi": [203, 229, 230, 270, 273, 458, 462, 562, 570, 578, 591, 618, 660, 723, 996, 997, 1013, 1014, 1121, 1153], "clumsier": 203, "dumpbin": 203, "hmoe": 203, "frcoll": 203, "bunch": [203, 724, 829, 988, 1012], "oom": [203, 223, 239, 246, 249, 264, 271, 281, 285, 307, 313, 1003], "killer": [203, 223, 239, 246, 249, 264, 271, 281, 285, 307, 313, 1037], "amoc": 203, "snapshot": [203, 702, 735, 840, 988], "tinkernut": 203, "raspberi": 203, "awesom": [203, 1133], "tunnel": [203, 269, 909, 917, 928], "centric": [203, 1158], "virtualbox": [203, 841], "cygwin": [203, 256, 258, 276, 841], "assort": 203, "nano": 203, "univers": [203, 278, 519, 928, 1025, 1158], "scripe": 203, "voellig": 207, "wohl": [207, 291, 1150, 1171], "selbsterklaerend": 207, "printet": 207, "builtin": [207, 213, 220, 226, 227, 236, 239, 243, 264, 285, 302, 303, 313, 862, 1000], "accur": [207, 239, 243, 264, 285, 437], "__weakref__": [207, 223, 233, 236, 239, 243, 252, 264, 285, 303], "weak": [207, 239, 243, 264, 285, 303, 721, 1107], "_abc": [207, 220, 226, 236, 239], "_1": [207, 723, 724], "a123": 207, "vernichten": 207, "laufzeit": 207, "140032702361168": 207, "refcount": [207, 719, 721, 997, 1153], "dezim": 207, "oktal": 207, "0o755": [207, 243, 330], "493": [207, 226, 243], "0b11": [207, 243, 246], "sql": [207, 218, 230, 1109, 1112], "0b11111111": 207, "ordnung": 207, "uhrzeit": 207, "vormittag": 207, "6666666666666666": [207, 243], "nda": [207, 261], "python_dir": 207, "jan": [207, 236, 239, 326, 327, 344, 377, 766, 858, 884, 942, 976, 990, 1027], "lowercas": [207, 239, 285, 862, 909, 1045, 1062, 1067], "140032636418048": 207, "ein_iterierbares_d": 207, "extraw\u00fcrschtl": 207, "sex": [207, 220, 242, 243, 1062], "diver": 207, "translation_t": [207, 243, 246, 249], "bag": [207, 255, 256, 258, 445, 455, 752, 754, 755, 970, 1032], "green": [207, 243, 484, 519, 520, 580, 899], "blue": [207, 215, 223, 243, 1057], "mengenoperationen": 207, "set1": 207, "set2": 207, "symm_diff": 207, "lisa": 207, "eugeni": [207, 210], "okan": 207, "mcguir": 207, "sinner": 207, "vornam": [207, 215, 216], "nachnam": [207, 215, 216], "persnr": 207, "personalnumm": 207, "5000": [207, 220, 226, 1016], "4000": [207, 226], "3000": [207, 220, 226, 246, 285], "15000": [207, 226], "uppercas": [207, 239, 285, 862, 1045, 1062], "verfuegbar": 207, "restlichen": 207, "gehaelt": 207, "konstant": [207, 215, 238], "unexpect": [207, 422], "pcap": [208, 228], "certifi": 208, "math": [208, 211, 221, 223, 224, 226, 234, 243, 248, 251, 284, 290, 313, 562, 564, 1025, 1100], "statist": [208, 221, 234, 243, 248, 251, 284, 290, 436, 964, 1084, 1100, 1105, 1133], "undo": [208, 862, 1100], "brad": [208, 1100], "traversi": [208, 1100], "evaluierung": 209, "eval": [209, 237, 238, 247, 265, 279, 280, 285, 292, 301, 304, 305, 1021], "openfil": 210, "hanld": 210, "soemth": [210, 816], "zf": 210, "namelist": 210, "zipdemo": 210, "extracted_nam": 210, "isinst": [210, 211, 224, 226, 239, 252, 264, 1019, 1122], "superclass": [210, 211, 224, 239], "subclass": [210, 211, 224, 239, 243, 999, 1016], "class1": 210, "class2": 210, "salari": 210, "selina": 210, "orgl": 210, "8010": [210, 226, 444], "birth": [210, 236, 249, 562, 753, 1089, 1090, 1091, 1092, 1095, 1096, 1097], "1622102062": 210, "4778333": 210, "019427776336669922": 210, "009679079055786133": 210, "daniel": [210, 213, 326, 327, 344], "ortner": 210, "num_employe": 210, "__first": 210, "__last": 210, "__address": 210, "_person__first": 210, "_person__last": 210, "_person__address": 210, "_first": 210, "_last": 210, "_address": 210, "do_debug": 210, "val": [210, 239, 723, 907], "ueberhaupt": 210, "l_float": 210, "0x7fd9881b04a0": 210, "functool": [210, 277], "wrapper": [210, 239, 249, 254, 291, 313, 465, 663, 688, 922, 970, 998, 1019, 1102], "komplexen": 210, "testfil": 210, "nzeil": [210, 239, 307], "seek": [210, 285, 327], "nth_fibo": 210, "accomod": 210, "0x7fd9801cec10": 210, "0x7fd9801b8d60": 210, "0x7fd9801b4900": 210, "0x7fd98014cd40": 210, "gen": [210, 285], "sequenceno": 210, "kv_pair": 210, "permissionerror": [210, 226, 246, 264, 281, 999], "deni": [210, 226, 246, 281, 487, 501, 845, 881, 909, 917, 929, 934, 935, 999, 1128], "eacc": 210, "filenotfounderror": [210, 226, 264, 999], "64bit": 210, "utc": 210, "python_implement": [210, 211, 224], "python_version_tupl": [210, 211, 224], "python39": 210, "dynload": 210, "isfil": [210, 320, 444], "isdir": [210, 444], "my_path": 210, "hopefulli": 210, "the_except": 210, "__class__": [210, 233, 236, 239, 243, 252, 261, 264, 285, 303], "__bases__": [210, 211, 224, 241], "distrust": 210, "guido": [210, 1124], "incompet": 210, "precondit": [210, 831], "abdefg": 210, "beg": [210, 403, 1000], "bdefg": 210, "stringifi": 210, "0x7ffa9c2ac3a0": 210, "formatstr": 210, "ding": [210, 240, 969], "formatierter_str": 210, "oserror": [211, 239, 264, 999], "errno": [211, 224, 226, 246, 281, 428, 780, 929, 944, 973, 974, 991, 999, 1128], "assertionerror": [211, 236, 252, 264, 303, 999, 1012, 1133, 1134], "jjjj": [211, 348, 349, 441], "line_count": 211, "aud": 211, "qualifii": [211, 224], "trunc": [211, 224], "hypot": [211, 224], "seed": [211, 224, 243, 514], "ascii": [211, 224, 239, 246, 249, 264, 285, 291, 307, 313, 364, 367, 370, 376, 1030, 1031, 1044, 1050, 1108], "codepoint": [211, 224], "escap": [211, 224, 239, 261, 357, 1108], "ord": [211, 224, 243, 264, 1039], "chr": [211, 224, 264], "isxxx": [211, 224], "rfind": [211, 224, 239, 285, 291, 1046], "grammar": [211, 224], "instrospect": [211, 224], "hasattr": [211, 224, 239, 252, 264, 1013, 1019], "__module__": [211, 223, 224, 233, 236, 239, 243, 252, 264, 285, 303], "bytearrai": [211, 224, 239, 264], "histogram": [211, 212, 229, 373, 388, 397, 404, 410, 414, 417, 421, 430, 434, 439, 440, 548, 549, 557, 662, 700, 752, 754, 755], "defaultdict": [211, 237, 238, 262], "make_histogram": [211, 549, 558], "fileobj": 211, "stringio": [211, 239], "8859": [211, 229, 230, 246, 249, 269, 291, 303, 307, 444], "pycon": [211, 237, 260, 284, 306, 1100], "2017": [211, 237, 260, 306, 570, 668, 719, 1100], "metaprogram": [211, 238, 260, 677, 1012, 1100, 1154], "contract": [211, 213, 260, 1100], "evolut": [211, 260, 306, 862, 1100], "unauthor": [211, 260, 306, 1100], "biographi": [211, 260, 306, 1100], "lesson": [211, 260, 306, 332, 338, 443, 706, 992, 1100], "evolv": [211, 260, 306, 703, 1100], "assembli": [211, 260, 284, 306, 976, 978, 1100, 1155], "revolv": [211, 237, 306, 1100, 1106], "mro": [211, 237, 241, 306, 1100], "cpa": 212, "fahr": [212, 358, 360], "tomorrow": [212, 227, 342, 343], "correctli": [212, 302, 321, 420, 906, 929, 1052, 1108], "consecut": [212, 383, 712, 895], "becam": [212, 298], "44ff": 212, "gig": 212, "upcom": 212, "msi": 212, "wswitch": [212, 424, 661, 771], "wall": [212, 226, 227, 381, 431, 447, 735, 770, 771, 1142], "77ff": 212, "skip": [212, 239, 327, 445, 447, 777, 907, 977, 978, 999, 1135], "89ff": 212, "alongsid": [212, 796], "num_us": 212, "199ff": 212, "204ff": 212, "208ff": 212, "220ff": 212, "222ff": 212, "db_get_user_at_index": 212, "298ff": 212, "strcpy": [212, 229, 370, 416, 552, 567, 570, 671, 705, 902, 960], "strlen": [212, 370, 395, 423, 567, 570, 671, 705, 940, 943, 973], "bahavior": 212, "dest": [212, 370], "strtol": 212, "stringif": [212, 1150], "db_error_str": 212, "sexi": [212, 952], "caleb": 212, "discret": [213, 243, 302, 430, 434, 439, 440, 662, 700, 752, 754, 755], "bleed": 213, "rect": [213, 411, 538], "sphere": [213, 538], "preprocessor": [213, 229, 377, 404, 410, 414, 417, 421, 426, 430, 434, 439, 440, 659, 662, 700, 752, 754, 755, 976, 1140, 1154], "julia": 213, "yesterdai": [213, 229, 237, 277], "distanc": [213, 564, 572, 573, 593, 710, 723], "has_lastnam": 213, "botton": 213, "mingw": [213, 256, 258, 276, 342, 355, 841], "resembl": 213, "tortur": 213, "functor": [213, 255, 256, 258, 315, 316, 604, 700, 701, 754, 755], "rudimentarili": [213, 1029, 1103], "gotten": [213, 736], "recourc": 213, "outright": [213, 269, 418, 1004, 1035], "geniu": [213, 269, 595, 1004, 1035], "livehackingli": 213, "zuordnung": [214, 230, 242], "bissl": 214, "commandlineargument": [214, 1149], "stoff": 214, "summenbeispiel": 214, "showcas": 214, "datenbank": 214, "formulieren": 214, "verbindung": [214, 1147, 1157, 1164, 1170], "schicken": [214, 1147], "schickman": 214, "muessen": 214, "verwandlen": 214, "fractal": [214, 230], "schatzi": 215, "zeitkomplexit\u00e4t": 215, "foreach": 215, "assozi": [215, 1152], "color_transl": 215, "gelb": 215, "yellow": 215, "hashtabl": [215, 1122], "englisch": [215, 1147], "sack": 215, "my_color": 215, "her_color": 215, "pink": 215, "gr\u00fcn": 215, "beig": 215, "vereiningungsmeng": 215, "schnittmeng": 215, "symmetrisch": 215, "differenzmeng": 215, "sei": 215, "gewesen": 215, "waer": [215, 291], "1037190666": [215, 231, 233, 239, 243, 246, 249, 252, 462, 469, 486, 487, 488, 500, 501, 502, 621, 1013], "6666010185": 215, "schwarzbauer": 215, "json_string_fuer_den_brows": 215, "response_dict": 215, "svnr": [215, 223, 226, 233, 239, 243, 246, 249, 251, 252, 291, 463, 469, 491, 497, 1013, 1117], "pprint": [215, 217, 224, 226, 261, 1000, 1108], "formatieren": 215, "endlich": 215, "transfer_string_in_php_am_serv": 215, "u00f6rg": 215, "transfer_string_in_js_am_brows": 215, "response_dict_am_brows": 215, "verwandeln": [215, 1166], "schlussendlich": 215, "geeignet": [215, 1148], "platzieren": 215, "meine_t": 215, "sozialversicherungsnumm": 215, "simmer": 216, "mein_str": 216, "sq": [216, 223, 226, 233, 243, 264, 285, 303, 307], "docu": 216, "nmehrzeilig": 216, "nvon": 216, "mehrzeilig": 216, "deppertem": 216, "irrelevant": 216, "quargel": [216, 217], "190666": 216, "inkorrekt": 216, "geburtsdatum": 216, "endswith": [216, 231, 233, 239, 249, 264, 268, 271, 285, 291, 307, 313, 1046], "sss": 216, "isalpha": [216, 220, 231, 233, 239, 243, 264, 285, 291, 313, 1046], "isidentifi": [216, 220, 233, 239, 249, 264, 285, 291, 1046], "islow": [216, 239, 249, 264, 285, 1046], "arg1": 216, "arg2": 216, "arg3": 216, "abcblah": 216, "blahabcbcabcc": 216, "lah": 216, "rstrip": [216, 220, 224, 231, 235, 236, 239, 249, 264, 281, 285, 291, 307, 326, 335], "lstrip": [216, 231, 235, 239, 264, 285, 291, 335], "wieviel": [216, 1157, 1164], "995237": 216, "datestr": 216, "dt": [216, 313, 802, 906], "strptime": [216, 217, 218, 224, 313], "uuid": 216, "msg_aussi": 216, "sea": [216, 231, 264, 331, 681], "oida": [216, 233, 236, 285, 447], "msgid": 216, "uuid4": 216, "345654325678": 216, "json_aussi": 216, "6563515ef0824d42b459389cefd09127": 216, "json_eini": 216, "sender": [216, 974], "msg_eini": 216, "sauberestextfil": 217, "12345678": 217, "2270": [217, 226], "20333": 217, "360": [217, 226, 303, 313], "91011121": 217, "30333": 217, "36756788": 217, "1112": [217, 226], "1244": [217, 226], "31333": 217, "45011121": 217, "44444": 217, "340": [217, 226, 233, 239, 271, 285, 313], "sauber": 217, "read_sauberes_text_fil": 217, "item1": [217, 313], "item13": 217, "werk": 217, "lort": 217, "charg": [217, 466, 473, 486, 487, 488, 500, 501, 502], "sonderbestandsnumm": 217, "materialkurztext": 217, "lagerplatz": 217, "verfueg_bestand": 217, "bme": 217, "we_datum": 217, "verf\u00fcg": 217, "bestand": 217, "datum": [217, 1107], "api2": 218, "opc": [218, 227, 302], "rrdtool": 218, "rrd": 218, "subprocess": [218, 234, 239, 248, 250, 260, 284, 320, 335, 340, 1100], "commmon": [220, 403], "140576769461632": 220, "simplicit": 220, "inputfil": [220, 444], "450": [220, 226, 233, 268, 271], "paragraph": [220, 457], "highli": [220, 353, 519], "pathnam": [220, 226, 236, 239, 761, 928, 932, 1044], "displayhook": [220, 226, 236, 239, 328], "excepthook": [220, 226, 236, 239, 328], "uncaught": [220, 226, 236, 239, 538], "systemexit": [220, 226, 236, 239, 261, 264, 328, 999], "behav": [220, 226, 229, 236, 239, 517, 538, 664, 719, 720, 750, 818, 844, 964], "last_typ": [220, 226, 236, 239, 328], "last_valu": [220, 226, 236, 239, 328, 688, 691, 694, 695, 696], "last_traceback": [220, 226, 236, 239, 328], "builtin_module_nam": [220, 226, 236, 239, 328], "pertain": [220, 226, 236, 239], "exec_prefix": [220, 226, 236, 239, 328], "float_info": [220, 226, 236, 239, 328], "float_repr_styl": [220, 226, 236, 239, 328], "hash_info": [220, 226, 236, 239, 328], "hexvers": [220, 226, 236, 239, 328], "int_info": [220, 226, 236, 239, 328], "maxsiz": [220, 226, 236, 239, 328], "largest": [220, 226, 236, 239, 420], "maxunicod": [220, 226, 236, 239, 328], "thread_info": [220, 226, 236, 239, 328], "version_info": [220, 226, 236, 239, 328], "__stdin__": [220, 226, 236, 239, 328], "__stdout__": [220, 226, 236, 239, 328], "__stderr__": [220, 226, 236, 239, 328], "__displayhook__": [220, 226, 236, 239, 328], "__excepthook__": [220, 226, 236, 239, 328], "screen": [220, 226, 236, 239, 838, 844, 862], "exc_info": [220, 226, 236, 239, 328], "getdlopenflag": [220, 226, 236, 239, 328], "dlopen": [220, 226, 236, 239, 1167], "getprofil": [220, 226, 236, 239, 328], "profil": [220, 226, 236, 239, 353, 431, 437, 440, 755, 802, 834, 1151, 1154], "getrefcount": [220, 226, 236, 239, 246, 328], "getrecursionlimit": [220, 226, 236, 239, 328], "getsizeof": [220, 226, 236, 239, 261, 264, 307, 328], "gettrac": [220, 226, 236, 239, 328], "setdlopenflag": [220, 226, 236, 239, 328], "setprofil": [220, 226, 236, 239, 328], "setrecursionlimit": [220, 226, 236, 239, 328], "settrac": [220, 226, 236, 239, 328], "__breakpointhook__": [220, 226, 236, 239, 328], "breakpointhook": [220, 226, 236, 239, 328], "breakpoint": [220, 226, 236, 239, 264], "exctyp": [220, 226, 236, 239], "__unraisablehook__": [220, 226, 236, 239, 328], "unraisablehook": [220, 226, 236, 239, 328], "unrais": [220, 226, 236, 239], "exc_typ": [220, 226, 236, 239, 997], "exc_valu": [220, 226, 236, 239, 997], "exc_traceback": [220, 226, 236, 239, 997], "err_msg": [220, 226, 236, 239], "addaudithook": [220, 226, 236, 239, 328], "audit": [220, 226, 236, 239, 328], "call_trac": [220, 226, 236, 239, 328], "afterward": [220, 226, 236, 239, 382, 432, 569, 719, 720, 721, 734, 798, 970, 1134], "older": [220, 226, 236, 239, 827, 970], "get_asyncgen_hook": [220, 226, 236, 239, 328], "firstit": [220, 226, 236, 239], "get_coroutine_origin_tracking_depth": [220, 226, 236, 239, 328], "coroutin": [220, 226, 236, 239, 315, 690, 691, 693, 694, 695, 696, 700, 754, 755, 1100], "getallocatedblock": [220, 226, 236, 239, 328], "getdefaultencod": [220, 226, 236, 239, 285, 328], "getfilesystemencodeerror": [220, 226, 236, 239, 328], "getfilesystemencod": [220, 226, 236, 239, 328], "getswitchinterv": [220, 226, 236, 239, 328], "setswitchinterv": [220, 226, 236, 239, 328], "is_fin": [220, 226, 236, 239, 328], "set_asyncgen_hook": [220, 226, 236, 239, 328], "set_coroutine_origin_tracking_depth": [220, 226, 236, 239, 328], "cr_origin": [220, 226, 236, 239], "rtld_global": [220, 226, 236, 239], "rtld_xxx": [220, 226, 236, 239], "rtld_lazi": [220, 226, 236, 239], "frequenc": [220, 226, 236, 239, 243, 279, 280, 301, 305, 321, 346, 350, 755, 898, 899, 907, 939, 959, 961], "uninterrupt": [220, 226, 236, 239, 794], "workload": [220, 226, 236, 239], "typic": [220, 226, 236, 239, 267, 277, 293, 305, 309, 403, 443, 447, 464, 488, 517, 644, 773, 822, 847, 977, 1022, 1032, 1153, 1155], "005": [220, 226, 236, 239], "abiflag": [220, 226, 236, 239, 328], "api_vers": [220, 226, 236, 239, 328], "1013": [220, 226, 236, 239], "ipyk": 220, "base_exec_prefix": [220, 226, 236, 239, 328], "base_prefix": [220, 226, 236, 239, 328], "_ast": [220, 226, 236, 239], "_codec": [220, 226, 236, 239], "_collect": [220, 226, 236, 239], "_f": [220, 226, 236, 239], "byteord": [220, 226, 236, 239, 261, 328, 900], "foundati": [220, 226, 236, 239], "emati": [220, 226, 236, 239], "ipykernel": [220, 226, 236, 239, 264], "zmqshelldisplayhook": [220, 226, 236, 239], "dont_write_bytecod": [220, 226, 236, 239, 328], "opt": [220, 226, 236, 239, 409], "ation": [220, 226, 236, 239], "7976931348623157e": [220, 226, 236, 239], "308": [220, 226, 233, 236, 239, 281, 291, 303, 313], "max_": [220, 226, 236, 239], "epsilo": [220, 226, 236, 239], "2305843009213693": [220, 226, 236, 239], "iphash2": [220, 226, 236, 239], "50922736": 220, "cache_tag": [220, 226, 236, 239], "xv": [220, 226, 236, 239], "bits_per_digit": [220, 226, 236, 239], "sizeof_digit": [220, 226, 236, 239], "syntaxerror": [220, 231, 236, 243, 264, 999], "eol": [220, 243], "9223372036854775807": [220, 226, 236, 239, 753], "1114111": [220, 226, 236, 239], "meta_path": [220, 226, 236, 239, 328], "_frozen_importlib": [220, 226, 236, 239, 264], "builtinimport": [220, 226, 236, 239, 264], "_fro": [220, 226, 236, 239], "homepa": 220, "path_hook": [220, 226, 236, 239, 328], "zipimport": [220, 226, 236, 239], "filefind": [220, 226, 236, 239], "path_importer_cach": [220, 226, 236, 239, 328], "jfa": [220, 226, 236, 239], "platlibdir": [220, 226, 236, 239, 328], "ps1": [220, 226, 236, 239, 328, 1135], "ps2": [220, 226, 236, 239, 328], "ps3": [220, 226, 236, 239, 328], "pycache_prefix": [220, 226, 236, 239, 328], "outstream": [220, 226, 236, 239], "versio": [220, 226, 236, 239], "202103": 220, "releaselev": [220, 226, 236, 239], "warnopt": [220, 226, 236, 239, 328], "isdigit": [220, 231, 239, 243, 264, 271, 285, 291, 1046], "pp": [220, 271, 408, 595], "list_of_str": 220, "tensorflow": 221, "kesselfal": 221, "rettenbachklamm": 221, "hochtor": 221, "hochschwab": 221, "_a": [223, 239, 264], "_123": 223, "140575811317328": 223, "140575811316208": 223, "0xffffffff": [223, 224, 381], "4294967296": [223, 231], "0x48": [223, 906], "330": [223, 226, 239, 264, 271, 285, 303, 313], "332": [223, 226, 239, 271, 285, 303], "333": [223, 226, 239, 271, 285, 313, 331], "334": [223, 226, 239, 271, 313], "dstr": 223, "777": [223, 226, 313], "aliv": [223, 401, 952, 995], "bcd": 223, "dusan": 223, "alex": [223, 237, 1017], "mist": [223, 271], "span": [223, 249, 252, 254, 261, 285, 358, 377, 401, 777], "141592653589793": [223, 226], "roll": [223, 242, 263, 279, 280, 1035, 1150], "dice": [223, 242, 263, 279, 280, 1035], "win": [223, 239, 249, 313, 893, 960, 1035], "rnd": [223, 246], "convention": 223, "wise": [223, 267, 426, 570, 642, 673, 753, 755, 770, 780, 800, 898, 939, 999], "resultset": [223, 226, 1112], "sbin": [223, 239, 246, 249, 264, 271, 281, 285, 307, 313, 834, 838, 840, 887, 893, 924, 934], "nologin": [223, 239, 246, 249, 264, 271, 281, 285, 307, 313, 887, 893, 924, 934], "adm": [223, 239, 246, 249, 264, 271, 281, 285, 307, 313, 888, 891, 893], "lp": [223, 239, 246, 249, 264, 271, 281, 285, 307, 313, 893], "spool": [223, 239, 246, 249, 264, 271, 281, 285, 307, 313, 893], "lpd": [223, 239, 246, 249, 264, 271, 281, 285, 307, 313, 893], "ftp": [223, 239, 246, 249, 264, 271, 281, 285, 307, 313, 889, 990], "65534": [223, 239, 246, 249, 264, 271, 281, 285, 307, 313], "apach": [223, 239, 246, 249, 264, 271, 281, 285, 307, 313], "httpd": [223, 239, 246, 249, 264, 271, 281, 285, 307, 313], "coredump": [223, 239, 246, 249, 264, 271, 281, 285, 307, 313, 893, 973], "997": [223, 226, 239, 246, 249, 264, 271, 281, 285, 307, 313], "dumper": [223, 239, 246, 249, 264, 271, 281, 285, 307, 313, 893], "998": [223, 226, 239, 246, 249, 264, 271, 281, 285, 307, 313], "996": [223, 226, 239, 246, 249, 264, 271, 281, 285, 307, 313], "timesync": [223, 239, 246, 249, 264, 271, 281, 285, 307, 313, 893], "995": [223, 226, 239, 246, 249, 264, 271, 281, 285, 307, 313], "tss": [223, 239, 246, 249, 264, 271, 281, 285, 307, 313], "tpm": [223, 239, 246, 249, 264, 271, 281, 285, 307, 313], "dbu": [223, 239, 246, 249, 264, 271, 281, 285, 307, 313, 840], "polkitd": [223, 239, 246, 249, 264, 271, 281, 285, 307, 313, 840], "994": [223, 226, 239, 246, 249, 264, 271, 281, 285, 307, 313], "avahi": [223, 239, 246, 249, 264, 271, 281, 285, 307, 313, 840], "mdn": [223, 239, 246, 249, 264, 271, 281, 285, 307, 313], "unbound": [223, 239, 246, 249, 264, 271, 281, 285, 307, 313, 1031], "992": [223, 226, 239, 246, 249, 264, 271, 281, 285, 307, 313], "dnsmasq": [223, 239, 246, 249, 264, 271, 281, 285, 307, 313, 840], "991": [223, 226, 239, 246, 249, 264, 271, 281, 285, 307, 313], "dhcp": [223, 239, 246, 249, 264, 271, 281, 285, 307, 313], "nm": [223, 239, 246, 249, 264, 271, 281, 285, 307, 313, 438, 571, 802, 988, 994], "openconnect": [223, 239, 246, 249, 264, 271, 281, 285, 307, 313], "993": [223, 226, 239, 246, 249, 264, 271, 281, 285, 307, 313], "989": [223, 226, 239, 246, 249, 264, 271, 281, 285, 307, 313], "networkmanag": [223, 239, 246, 249, 264, 271, 281, 285, 307, 313, 438, 840], "usbmuxd": [223, 239, 246, 249, 264, 271, 281, 285, 307, 313], "gluster": [223, 239, 246, 249, 264, 271, 281, 285, 307, 313], "988": [223, 226, 239, 246, 249, 264, 271, 281, 285, 307, 313], "glusterf": [223, 239, 246, 249, 264, 271, 281, 285, 307, 313], "rtkit": [223, 239, 246, 249, 264, 271, 281, 285, 307, 313], "realtimekit": [223, 239, 246, 249, 264, 271, 281, 285, 307, 313], "pipewir": [223, 239, 246, 249, 264, 271, 281, 285, 307, 313], "987": [223, 226, 239, 246, 249, 264, 271, 281, 285, 307, 313], "geoclu": [223, 239, 246, 249, 264, 271, 281, 285, 307, 313], "990": [223, 226, 239, 246, 249, 264, 271, 281, 285, 307, 313], "chroni": [223, 239, 246, 249, 264, 271, 281, 285, 307, 313], "984": [223, 226, 239, 246, 249, 264, 271, 281, 285, 307, 313, 893], "saslauth": [223, 239, 246, 249, 264, 271, 281, 285, 307, 313], "saslauthd": [223, 239, 246, 249, 264, 271, 281, 285, 307, 313], "radvd": [223, 239, 246, 249], "rpc": [223, 239, 246, 249, 264, 271, 281, 285, 307, 313], "rpcbind": [223, 239, 246, 249, 264, 271, 281, 285, 307, 313], "openvpn": [223, 239, 246, 249, 264, 271, 281, 285, 307, 313], "982": [223, 226, 239, 246, 249, 264, 271, 281, 285, 307, 313, 893], "981": [223, 226, 239, 246, 249], "spawn": [223, 239, 246, 249, 264, 271, 281, 285, 302, 307, 313], "colord": [223, 239, 246, 249, 264, 271, 281, 285, 307, 313], "985": [223, 226, 239, 246, 249, 264, 271, 281, 285, 307, 313, 893], "rpcuser": [223, 239, 246, 249, 264, 271, 281, 285, 307, 313], "abrt": [223, 239, 246, 249, 264, 271, 281, 285, 307, 313, 840, 893], "flatpak": [223, 239, 246, 249, 264, 271, 281, 285, 288, 307, 313, 893], "979": [223, 226, 239, 246, 249], "helper": [223, 239, 243, 246, 249, 264, 271, 281, 285, 307, 313, 376, 570, 634, 682, 723, 796, 893, 1125, 1128], "983": [223, 226, 239, 246, 249, 264, 271, 281, 285, 307, 313, 893], "978": [223, 226, 239, 246, 249, 264, 271, 281, 285, 307, 313, 893], "vboxadd": [223, 239, 246, 249, 264, 271, 281, 285, 307, 313, 893], "tcpdump": [223, 239, 246, 249, 264, 271, 281, 285, 307, 313, 893], "974": [223, 226, 239, 246, 249], "broker": [223, 227, 239, 246, 249, 264, 271, 281, 285, 302, 307, 313, 840, 1094], "mappingproxi": [223, 239, 252], "229": [223, 226, 231, 233, 239, 243, 246, 264, 271, 281, 285, 291, 303, 307, 313], "230": [223, 226, 231, 233, 236, 239, 243, 246, 249, 264, 271, 281, 285, 291, 303, 307, 313], "231": [223, 226, 231, 233, 236, 239, 243, 246, 264, 271, 285, 291, 307, 313, 486, 487, 488, 500, 501, 502], "232": [223, 226, 231, 233, 236, 239, 243, 246, 249, 264, 285, 291, 307, 313], "233": [223, 226, 231, 233, 239, 243, 246, 249, 264, 271, 281, 285, 291, 307, 313], "inputlist": [223, 1002], "ret": [223, 226, 231, 444, 682, 966, 1002, 1047], "235": [223, 226, 231, 233, 236, 239, 243, 246, 249, 264, 271, 281, 285, 291, 303, 307], "236": [223, 226, 231, 233, 236, 239, 243, 246, 249, 264, 285, 291, 303, 307, 313, 429], "237": [223, 226, 231, 233, 239, 243, 246, 249, 264, 281, 285, 291, 307, 313], "238": [223, 226, 231, 233, 236, 239, 243, 246, 249, 264, 271, 281, 285, 291, 303, 307, 313], "239": [223, 226, 231, 233, 239, 243, 246, 264, 271, 281, 285, 291, 303, 307, 313], "240": [223, 226, 231, 233, 236, 239, 243, 246, 249, 264, 281, 285, 291, 307, 313], "242": [223, 226, 231, 233, 236, 239, 246, 249, 264, 281, 285, 291, 303, 307, 313], "243": [223, 226, 231, 233, 239, 246, 249, 264, 281, 285, 291, 303, 313], "244": [223, 226, 231, 233, 236, 239, 246, 249, 264, 285, 291, 303, 313], "245": [223, 226, 231, 233, 246, 264, 281, 285, 291, 303, 313], "247": [223, 226, 231, 233, 239, 243, 246, 264, 281, 285, 291, 307, 313], "248": [223, 226, 231, 233, 236, 243, 246, 264, 271, 281, 285, 291, 303, 307, 313], "249": [223, 226, 231, 233, 239, 243, 246, 249, 264, 271, 285, 291, 303, 307, 313], "250": [223, 226, 231, 233, 239, 243, 246, 249, 264, 271, 275, 281, 285, 291, 313, 891], "251": [223, 226, 231, 233, 236, 239, 243, 246, 264, 271, 281, 285, 291, 303, 307], "252": [223, 226, 231, 233, 236, 243, 246, 264, 271, 281, 285, 291, 303, 307, 313, 1113], "253": [223, 226, 231, 233, 236, 239, 246, 249, 264, 271, 285, 291, 307], "256": [223, 226, 231, 233, 239, 246, 249, 264, 271, 281, 285, 291, 307, 313, 367, 575, 1102, 1113], "257": [223, 226, 231, 233, 236, 239, 243, 246, 249, 264, 271, 281, 285, 291, 313], "258": [223, 226, 231, 233, 236, 239, 243, 246, 264, 271, 281, 285, 291], "0x7fda5444e6a0": 223, "259": [223, 226, 231, 233, 236, 239, 246, 264, 271, 281, 285, 291, 313], "260": [223, 226, 231, 233, 236, 239, 246, 264, 271, 281, 285, 291, 303, 313], "261": [223, 226, 231, 233, 239, 243, 249, 264, 271, 281, 285, 291], "262": [223, 226, 231, 233, 239, 249, 264, 271, 281, 285, 291, 303, 313], "263": [223, 226, 231, 233, 239, 243, 246, 249, 264, 271, 281, 285, 291, 303], "264": [223, 226, 231, 233, 236, 239, 246, 249, 264, 271, 285, 291, 303, 313], "265": [223, 226, 231, 233, 239, 246, 264, 271, 285, 291, 303, 313], "266": [223, 226, 231, 233, 236, 239, 243, 249, 264, 285, 291], "267": [223, 226, 231, 233, 236, 239, 246, 249, 264, 271, 285, 291, 303], "268": [223, 226, 231, 233, 239, 246, 249, 264, 271, 285, 291, 313], "269": [223, 226, 231, 233, 236, 239, 243, 246, 264, 271, 281, 285, 291, 978], "270": [223, 226, 231, 233, 239, 243, 246, 264, 271, 281, 285, 291, 303, 313], "other_map": 223, "272": [223, 226, 231, 233, 236, 239, 243, 246, 264, 271, 281, 285, 291, 303], "273": [223, 226, 231, 233, 239, 243, 264, 271, 285, 291, 313, 510, 528, 529, 530, 531, 533, 534, 741, 743, 745, 1012], "274": [223, 226, 231, 233, 236, 239, 243, 246, 264, 271, 281, 285, 291, 313], "140575811316304": 223, "275": [223, 226, 231, 233, 239, 243, 246, 264, 271, 281, 285, 291, 303], "276": [223, 226, 231, 233, 236, 246, 264, 271, 281, 285, 291, 303], "277": [223, 226, 231, 233, 236, 239, 243, 246, 264, 281, 285, 291, 313], "278": [223, 226, 231, 233, 239, 246, 264, 271, 285, 291, 303, 313], "279": [223, 226, 231, 233, 236, 239, 243, 246, 264, 271, 285, 291, 303], "280": [223, 226, 231, 233, 236, 239, 243, 264, 271, 285, 291, 303, 977, 978], "140575692459008": 223, "282": [223, 226, 231, 233, 236, 239, 243, 246, 264, 271, 285, 291, 303], "283": [223, 226, 231, 233, 236, 239, 243, 246, 264, 285, 291], "284": [223, 226, 231, 233, 239, 243, 246, 264, 268, 291, 303, 313], "elementwis": 223, "285": [223, 226, 231, 233, 236, 239, 264, 271, 285, 291, 303], "286": [223, 226, 231, 233, 236, 239, 243, 264, 285, 291, 303], "287": [223, 226, 231, 233, 236, 239, 243, 246, 264, 271, 291, 303, 313], "140575692438848": 223, "288": [223, 226, 231, 233, 239, 243, 246, 264, 271, 285, 291, 303, 313], "140575692448960": 223, "289": [223, 226, 231, 233, 239, 264, 271, 285, 291, 303, 313], "290": [223, 226, 231, 233, 239, 264, 271, 285, 291], "292": [223, 226, 231, 239, 243, 264, 271, 281, 285], "293": [223, 226, 231, 233, 239, 264, 271, 281, 285, 291], "295": [223, 226, 231, 233, 239, 243, 264, 271, 281, 285], "296": [223, 226, 231, 233, 239, 264, 271, 281, 285, 291], "298": [223, 226, 231, 239, 243, 264, 271, 281, 285, 291, 313], "deep": [223, 235, 303, 677, 682, 964], "301": [223, 226, 231, 236, 239, 243, 264, 271, 281, 285, 291, 303], "302": [223, 226, 233, 239, 243, 264, 271, 285, 291, 303, 1057], "deepcopi": [223, 233, 246, 271, 291, 303, 1040], "303": [223, 226, 233, 236, 239, 271, 285, 291, 303, 313, 978], "304": [223, 226, 233, 236, 239, 243, 303], "305": [223, 226, 236, 239, 264, 281, 285, 291, 303], "314": [223, 226, 233, 236, 239, 264, 271, 281, 285, 291, 313], "315": [223, 226, 239, 264, 285, 291, 313], "rdr": [223, 224, 307, 444, 467, 1108], "delimit": [223, 224, 239, 268, 269, 285, 307, 313, 591, 888, 1028, 1108], "fund_nam": [223, 224, 1057], "fund_isin": [223, 224, 1057], "fund_tick": [223, 224, 1057], "as_of_d": [223, 224, 1057], "fund_in_univers": [223, 224, 1057], "fund_of_fund": [223, 224, 1057], "fund_holdings_count": [223, 224, 1057], "fund_holding_funds_count": [223, 224, 1057], "american": [223, 229, 643, 657, 755, 1057, 1113], "fund": [223, 1057], "balanc": [223, 227, 411, 1057], "us0240711020": [223, 1057], "abalx": [223, 1057], "20210103": [223, 1057], "084": [223, 1057], "dodg": [223, 1057], "cox": [223, 1057], "us2562011047": [223, 1057], "dodbx": [223, 1057], "410": [223, 226, 271, 285, 1057], "us2562191062": [223, 1057], "dodgx": [223, 1057], "franklin": [223, 1057], "incom": [223, 239, 302, 1057, 1116], "us3534963000": [223, 1057], "fkinx": [223, 1057], "america": [223, 1057], "us3998741066": [223, 1057], "agthx": [223, 1057], "price": [223, 243, 437, 460, 1057], "us7414791092": [223, 1057], "prgfx": [223, 1057], "fidel": [223, 1057], "puritan": [223, 1057], "us3163451079": [223, 1057], "fpurx": [223, 1057], "contrafund": [223, 1057], "us3160711095": [223, 1057], "fcntx": [223, 1057], "363": [223, 226, 271, 285, 303, 313, 1057], "us77954m1053": [223, 1057], "prwcx": [223, 1057], "westburi": [223, 1057], "us6804141090": [223, 1057], "owlsx": [223, 1057], "us1401931035": [223, 1057], "caibx": [223, 1057], "582": [223, 226, 1057], "harbor": [223, 1057], "institut": [223, 224, 473, 488, 1057], "us4115115044": [223, 1057], "hacax": [223, 1057], "us77954q1067": [223, 1057], "trbcx": [223, 1057], "dreyfu": [223, 1057], "treasuri": [223, 1057], "cash": [223, 1057], "inst": [223, 1057], "us2619411083": [223, 1057], "dirxx": [223, 1057], "blackrock": [223, 1057], "us09251t5092": [223, 1057], "malox": [223, 1057], "us3163453059": [223, 1057], "flpsx": [223, 1057], "liquid": [223, 1057], "us09248u5517": [223, 1057], "tttxx": [223, 1057], "dfa": [223, 1057], "portfolio": [223, 243, 1057], "us2332038841": [223, 1057], "dfgbx": [223, 1057], "feder": [223, 1057], "herm": [223, 1057], "us60934n6821": [223, 1057], "utixx": [223, 1057], "oakmark": [223, 1057], "investor": [223, 243, 1057], "us4138382027": [223, 1057], "oakix": [223, 1057], "asset": [223, 1057], "us00767h4939": [223, 1057], "787": [223, 226, 1057], "fpa": [223, 1057], "crescent": [223, 1057], "us30254t7596": [223, 1057], "fpacx": [223, 1057], "us3534968058": [223, 1057], "fcisx": [223, 1057], "us5529836943": [223, 1057], "meiix": [223, 1057], "goldman": [223, 1057], "sach": [223, 1057, 1171], "instrument": [223, 435, 437, 906, 1057], "us38142b5003": [223, 1057], "ftixx": [223, 1057], "schwab": [223, 1057], "us8085098551": [223, 1057], "swppx": [223, 1057], "508": [223, 226, 271, 303, 1057], "templeton": [223, 1057], "bond": [223, 1057], "advisor": [223, 1057], "us8802084009": [223, 1057], "tgbax": [223, 1057], "us32008f6060": [223, 1057], "sgiix": [223, 1057], "ishar": [223, 1057], "etf": [223, 1057], "us4642872000": [223, 1057], "ivv": [223, 1057], "507": [223, 226, 303, 1057], "vanguard": [223, 1057], "admir": [223, 1057], "us9229087104": [223, 1057], "vfiax": [223, 1057], "510": [223, 226, 303, 313, 1057], "us9229087286": [223, 1057], "vtsax": [223, 1057], "370": [223, 226, 271, 285, 313, 1057], "spdr": [223, 1057], "midcap": [223, 1057], "us78467y1073": [223, 1057], "mdy": [223, 1057], "dow": [223, 1057], "jone": [223, 336, 337, 1057], "industri": [223, 802, 1057], "us78467x1090": [223, 1057], "health": [223, 1057], "us81369y2090": [223, 1057], "xlv": [223, 1057], "discretionari": [223, 1057], "us81369y4070": [223, 1057], "xly": [223, 1057], "energi": [223, 1057], "us81369y5069": [223, 1057], "xle": [223, 1057], "financi": [223, 1057], "us81369y6059": [223, 1057], "xlf": [223, 1057], "us81369y8030": [223, 1057], "xlk": [223, 1057], "invesco": [223, 1057], "qqq": [223, 1057], "us46090e1038": [223, 1057], "us2562061034": [223, 1057], "dodfx": [223, 1057], "msci": [223, 1057], "eaf": [223, 1057], "us4642874659": [223, 1057], "efa": [223, 1057], "897": [223, 226, 1057], "jpmorgan": [223, 1057], "sec": [223, 458, 960, 1057, 1128], "mny": [223, 1057], "mkt": [223, 1057], "us4812a28358": [223, 1057], "jtsxx": [223, 1057], "eql": [223, 1057], "wght": [223, 1057], "us46137v3574": [223, 1057], "us4812a03757": [223, 1057], "cjtxx": [223, 1057], "us00143w8753": [223, 1057], "odvyx": [223, 1057], "dividend": [223, 1057], "us78464a7634": [223, 1057], "sdy": [223, 1057], "equiti": [223, 1057], "us2332033719": [223, 1057], "dfiex": [223, 1057], "888": [223, 226, 1057], "edgewood": [223, 1057], "us0075w07594": [223, 1057], "egfix": [223, 1057], "prudenti": [223, 1057], "us00767h7585": [223, 1057], "r6": [223, 1057], "us55273h3536": [223, 1057], "meikx": [223, 1057], "327": [223, 226, 239, 264, 271, 281, 313], "328": [223, 226, 233, 239, 271], "geschieht": [224, 353, 889], "wunder": 224, "groesser": 224, "jave": 224, "shorthand": [224, 368, 881, 1013], "lin": 224, "lout": 224, "faster": [224, 243, 302, 420, 432, 964, 970], "outputlist": 224, "getus": [224, 1078], "userdatabas": [224, 1078], "userid": [224, 236], "groupid": 224, "loginshel": 224, "userrecord": 224, "dens": [224, 233, 243], "pratic": 224, "_fix_float_numb": 224, "fieldnam": [224, 1108], "_fix_bool": 224, "elif": [224, 231, 307, 366, 403, 444, 1019, 1034, 1035], "_fix_dat": 224, "read_stock": [224, 1057], "csvfile": [224, 1012], "converted_record": 224, "dbname": [224, 1111], "stmt": 224, "predefin": [224, 934, 969, 974, 1146], "circuit": [225, 231, 241, 907, 1033, 1157, 1164], "windows_path": [226, 231], "festplatt": [226, 1167], "eue": [226, 303, 330], "lehrer": 226, "50923504": 226, "202107": 226, "140106795875920": 226, "140106669190640": 226, "669": [226, 243], "140106669191024": 226, "0j": 226, "copied_l": [226, 233], "140106669249856": 226, "copied_t": 226, "tuple_containing_one_el": 226, "tran": 226, "satan": [226, 236], "queen": [226, 246, 1089, 1091, 1095, 1097, 1108], "10000000000": [226, 281, 330], "prod": 226, "resultset_to_local_db": 226, "my_local_db": 226, "basenam": 226, "normalized_path": 226, "normpath": [226, 233, 1007], "291": [226, 231, 239, 264, 281, 291, 303, 313, 436], "294": [226, 231, 239, 264, 281, 285, 291], "297": [226, 231, 233, 239, 243, 285, 313], "299": [226, 231, 236, 239, 243, 264, 271, 281, 285, 291, 313], "306": [226, 236, 243, 264, 281, 285, 291, 303, 313], "307": [226, 233, 239, 264, 281, 285, 291, 303, 313], "309": [226, 233, 236, 239, 271, 281, 285, 291, 303, 307], "310": [226, 233, 236, 239, 285, 291, 303, 381], "311": [226, 233, 264, 285, 291, 313], "312": [226, 233, 239, 264, 271, 281, 291, 313], "313": [226, 233, 239, 271, 285, 291, 313], "316": [226, 233, 236, 239, 264, 285, 303, 313], "317": [226, 233, 236, 264, 271, 281, 285, 303, 313], "318": [226, 236, 239, 271, 285, 313], "319": [226, 233, 236, 239, 264, 281, 285, 303, 313], "321": [226, 236, 239, 271, 281, 285, 291, 303], "322": [226, 236, 239, 271, 291, 303, 313], "323": [226, 233, 236, 239, 264, 285, 291, 303, 313], "324": [226, 236, 239, 264, 281, 285, 291, 303, 313, 519], "325": [226, 233, 239, 271, 281, 291, 313], "326": [226, 233, 239, 264, 281, 291, 303, 313], "329": [226, 239, 264, 271, 303], "331": [226, 233, 239, 264, 285], "335": [226, 233, 239, 271, 285, 313], "336": [226, 233, 239, 285, 313, 451], "337": [226, 239, 271, 285, 313], "338": [226, 233, 271, 285, 313], "339": [226, 233, 239, 285, 313], "341": [226, 233, 239, 271, 285, 303, 313], "342": [226, 233, 239, 271, 291, 313], "343": [226, 239, 271, 285, 303], "346": [226, 239, 285, 303, 313, 617, 618, 619, 620], "347": [226, 271, 285, 303, 313], "348": [226, 239, 303, 313], "349": [226, 239, 285, 303, 313, 431], "351": [226, 233, 239, 285, 313], "352": [226, 233, 239, 271, 285, 313], "353": [226, 233, 239, 271, 285, 313], "354": [226, 239, 285, 313, 465], "355": [226, 271, 285, 313], "356": [226, 246, 285, 303], "357": [226, 271, 285, 303, 313], "359": [226, 285, 313], "361": [226, 285, 303, 313], "362": [226, 271, 285, 303, 313], "364": [226, 285], "365": [226, 303], "366": [226, 271, 285], "367": [226, 285, 303, 313], "368": [226, 285, 313], "369": [226, 271, 285, 313], "371": [226, 271, 313], "373": [226, 233, 271, 303, 313], "374": [226, 233, 285, 303], "375": [226, 233, 243, 271, 285, 303, 313, 431], "376": [226, 271, 285, 303, 313], "377": [226, 233, 271, 285, 303, 313], "379": [226, 271, 285, 303, 313], "380": [226, 271, 285, 303], "381": [226, 233, 271, 285], "382": [226, 271, 285, 303], "383": [226, 233, 271, 275, 303, 313], "384": [226, 271, 285, 303, 313], "385": [226, 271, 285, 303], "386": [226, 271, 285, 303], "387": 226, "388": [226, 271, 285, 303], "389": [226, 303], "390": [226, 285, 303], "391": [226, 271, 303], "392": [226, 271], "393": [226, 233, 271, 285, 303], "394": [226, 233, 271, 285, 303], "395": [226, 233, 271, 285, 303, 313], "396": [226, 233, 271, 847], "397": [226, 233, 285, 303], "398": [226, 233, 285], "399": [226, 233, 285, 303], "401": [226, 233, 271, 285], "402": [226, 271, 303], "403": [226, 233, 285, 303], "405": [226, 285], "406": [226, 233, 271, 285, 303], "407": [226, 271, 285, 303], "408": [226, 233, 271, 285, 303], "409": [226, 233, 271, 285, 303, 313], "411": [226, 233, 271, 285, 313], "412": [226, 285], "413": [226, 233, 271, 285], "414": [226, 233, 271, 285, 303], "415": [226, 285, 303], "416": [226, 233, 271, 303], "417": [226, 233, 271, 285], "418": [226, 233, 271, 303], "419": [226, 233, 271, 285, 303], "420": [226, 233, 271, 285, 303], "421": [226, 233, 271, 285, 303], "422": [226, 233, 313], "423": [226, 271, 285, 303, 753], "424": [226, 233, 271, 285], "425": [226, 271], "426": [226, 303], "427": [226, 233, 271, 303], "428": [226, 233, 271, 303], "429": [226, 271, 303], "430": [226, 233, 271, 303], "431": [226, 271, 303, 313, 753], "432": [226, 233, 271, 303], "433": [226, 271, 303, 313], "434": [226, 271], "435": 226, "436": [226, 271, 303], "437": [226, 233, 271, 303, 313], "438": [226, 233, 303], "439": [226, 271], "440": [226, 233, 271], "441": [226, 233, 271], "442": [226, 233, 271, 313], "443": [226, 233, 303], "444": [226, 233, 303], "445": [226, 233, 303, 313], "446": [226, 271], "447": [226, 233, 271, 303, 313], "448": [226, 271], "449": [226, 233], "451": [226, 233, 303], "452": [226, 233, 271], "453": [226, 233, 303], "454": [226, 233, 271], "455": [226, 233], "457": 226, "458": [226, 271], "459": [226, 313], "460": [226, 271], "461": [226, 271], "462": [226, 271], "463": 226, "464": [226, 271], "465": [226, 271, 275, 313], "466": [226, 271], "467": [226, 271, 313], "468": [226, 271], "469": [226, 271, 720], "470": [226, 271], "471": [226, 271, 313], "472": [226, 271], "473": 226, "474": [226, 271], "475": [226, 271], "476": [226, 271, 313], "478": 226, "479": [226, 271], "480": [226, 271], "481": [226, 271], "482": [226, 271, 313], "483": [226, 271, 313], "484": 226, "485": 226, "486": [226, 271], "487": [226, 271], "488": [226, 271], "489": 226, "490": [226, 884], "491": 226, "492": 226, "494": [226, 271], "495": 226, "496": 226, "497": [226, 271], "498": [226, 271], "499": 226, "502": [226, 271], "503": 226, "504": [226, 271], "505": [226, 239, 271], "506": [226, 271], "509": [226, 303], "511": [226, 303, 313], "514": 226, "515": [226, 271, 719], "516": [226, 271], "518": [226, 271], "519": 226, "520": [226, 271], "521": [226, 271, 738, 742], "522": 226, "523": 226, "524": [226, 271], "525": [226, 271], "526": 226, "527": 226, "528": 226, "529": [226, 313], "530": 226, "531": [226, 271], "532": [226, 753], "533": 226, "534": 226, "535": 226, "536": [226, 884], "538": 226, "539": 226, "540": [226, 313], "541": 226, "542": 226, "543": 226, "544": [226, 313], "545": [226, 313], "546": 226, "547": 226, "548": [226, 275], "549": 226, "550": 226, "551": 226, "552": [226, 313], "553": [226, 313], "554": [226, 886], "555": 226, "556": [226, 313], "557": 226, "558": 226, "559": 226, "560": 226, "561": 226, "562": 226, "563": 226, "564": 226, "565": 226, "566": 226, "567": 226, "568": 226, "569": 226, "570": 226, "571": 226, "572": 226, "573": 226, "574": 226, "575": 226, "576": 226, "577": 226, "578": 226, "579": 226, "580": 226, "581": 226, "583": [226, 313], "584": 226, "585": 226, "586": 226, "587": 226, "588": [226, 307], "589": 226, "590": 226, "591": [226, 313], "592": 226, "593": 226, "594": [226, 313], "595": 226, "596": [226, 990], "597": 226, "598": 226, "599": 226, "601": 226, "602": 226, "603": 226, "604": 226, "605": 226, "606": 226, "607": [226, 313], "608": 226, "609": [226, 313], "610": [226, 884], "611": 226, "612": [226, 847], "613": 226, "614": 226, "615": [226, 313], "616": 226, "617": 226, "618": 226, "619": 226, "620": 226, "621": 226, "622": 226, "623": 226, "624": 226, "625": [226, 243], "626": 226, "627": 226, "628": 226, "629": 226, "630": 226, "631": 226, "632": 226, "633": 226, "634": 226, "635": 226, "636": 226, "637": 226, "638": 226, "639": 226, "640": [226, 570], "641": 226, "642": 226, "643": 226, "644": [226, 1027], "645": 226, "646": 226, "647": 226, "648": 226, "649": 226, "650": [226, 313], "651": 226, "652": 226, "653": 226, "654": 226, "655": [226, 313], "656": 226, "657": [226, 313], "658": 226, "659": 226, "660": 226, "661": 226, "662": 226, "663": 226, "665": [226, 313], "668": [226, 313, 1031], "670": 226, "671": [226, 313], "672": 226, "673": 226, "674": 226, "675": 226, "676": 226, "677": 226, "678": 226, "679": 226, "680": [226, 313], "681": [226, 313], "682": [226, 884], "683": 226, "684": 226, "685": 226, "687": 226, "688": 226, "689": 226, "690": 226, "691": 226, "692": 226, "693": 226, "694": 226, "695": [226, 313], "696": 226, "697": [226, 313], "698": [226, 884, 924], "699": 226, "701": [226, 313], "702": 226, "703": [226, 279, 280, 301], "704": 226, "705": 226, "706": [226, 313], "707": 226, "708": [226, 239], "709": 226, "710": [226, 570], "711": 226, "712": 226, "713": 226, "715": [226, 644], "716": [226, 313], "717": 226, "718": 226, "719": 226, "720": 226, "721": 226, "722": 226, "723": 226, "724": 226, "725": 226, "726": 226, "727": [226, 313], "728": 226, "729": 226, "730": [226, 268], "731": 226, "732": 226, "733": 226, "734": 226, "735": 226, "736": 226, "737": 226, "738": 226, "739": 226, "740": 226, "741": 226, "742": 226, "743": 226, "744": 226, "745": 226, "746": [226, 313, 978], "747": 226, "748": 226, "749": 226, "750": 226, "751": 226, "752": 226, "753": 226, "754": 226, "756": 226, "757": 226, "758": 226, "759": 226, "760": 226, "761": 226, "762": 226, "763": 226, "764": 226, "765": 226, "766": 226, "767": 226, "768": [226, 313], "769": 226, "770": [226, 313], "772": 226, "773": 226, "774": [226, 313], "775": 226, "776": 226, "778": 226, "779": 226, "780": 226, "781": [226, 313], "782": [226, 275], "783": 226, "784": 226, "785": 226, "786": 226, "788": [226, 313], "789": [226, 233], "790": 226, "791": [226, 719], "792": 226, "793": 226, "794": 226, "795": 226, "796": 226, "797": 226, "798": 226, "801": [226, 268], "802": 226, "803": 226, "804": [226, 313], "805": 226, "806": 226, "807": 226, "808": 226, "809": [226, 307], "810": 226, "811": [226, 313], "812": [226, 313], "813": [226, 313], "814": 226, "815": [226, 243], "816": [226, 249, 313], "817": 226, "818": 226, "819": 226, "820": 226, "822": 226, "823": 226, "824": 226, "826": 226, "827": [226, 313], "828": [226, 275, 313], "829": 226, "830": 226, "831": 226, "832": 226, "833": 226, "834": 226, "835": 226, "836": 226, "837": 226, "838": 226, "839": [226, 313], "840": 226, "841": 226, "842": 226, "843": 226, "844": [226, 313], "845": 226, "846": 226, "847": 226, "848": 226, "849": 226, "850": 226, "851": 226, "852": 226, "853": 226, "854": 226, "855": 226, "856": 226, "857": 226, "858": 226, "859": 226, "860": 226, "861": 226, "862": [226, 313], "863": 226, "864": 226, "865": 226, "866": 226, "867": 226, "868": 226, "870": 226, "871": 226, "872": 226, "873": 226, "874": [226, 467], "875": 226, "876": 226, "877": [226, 313], "878": 226, "879": [226, 431], "880": 226, "881": [226, 313], "882": 226, "883": [226, 313], "884": 226, "885": 226, "886": 226, "887": [226, 313], "889": 226, "890": 226, "891": [226, 313], "892": 226, "893": 226, "894": 226, "895": 226, "896": 226, "898": [226, 313], "899": 226, "901": 226, "902": [226, 884], "903": 226, "904": 226, "905": 226, "906": 226, "907": 226, "908": 226, "909": [226, 313], "911": 226, "912": 226, "913": 226, "914": 226, "915": 226, "916": 226, "917": [226, 275], "918": [226, 313], "919": 226, "920": 226, "921": [226, 313], "922": [226, 313], "923": 226, "924": 226, "925": 226, "926": [226, 313], "927": 226, "928": 226, "929": [226, 313], "930": 226, "931": 226, "932": 226, "933": [226, 313], "934": 226, "935": [226, 313], "936": 226, "937": 226, "938": 226, "939": [226, 313], "940": [226, 313], "941": [226, 313], "942": 226, "943": 226, "944": 226, "945": 226, "946": [226, 313], "947": 226, "948": 226, "949": [226, 313], "950": 226, "951": [226, 307], "952": 226, "953": 226, "954": 226, "955": 226, "956": 226, "957": 226, "958": 226, "959": 226, "960": 226, "961": 226, "962": 226, "963": 226, "964": [226, 313], "965": [226, 1121, 1122], "966": [226, 1121, 1122], "967": [226, 313, 1121, 1122], "968": [226, 1121, 1122], "969": [226, 1121, 1122], "970": 226, "971": [226, 313], "972": 226, "973": 226, "975": 226, "976": [226, 264, 271, 281, 285, 307, 313], "977": [226, 264, 271, 281, 285, 307, 313, 893], "timeaxi": 226, "myrang": 226, "1002": [226, 617, 618, 619, 620, 847], "1004": 226, "1006": 226, "1008": 226, "1010": 226, "1012": 226, "1014": 226, "1016": 226, "1018": 226, "1020": [226, 829, 830, 837], "1022": 226, "1028": 226, "1030": 226, "1032": 226, "1034": 226, "1036": 226, "1038": 226, "1040": 226, "1042": [226, 964], "1046": 226, "1048": 226, "1050": 226, "1052": 226, "1054": 226, "1056": 226, "1058": 226, "1060": 226, "1062": 226, "1064": 226, "1066": 226, "1068": [226, 275], "1070": [226, 275], "1072": [226, 275], "1074": 226, "1076": 226, "1078": 226, "1080": 226, "1082": 226, "1084": 226, "1086": 226, "1088": 226, "1090": 226, "1092": 226, "1094": 226, "1096": 226, "1098": 226, "1102": 226, "1104": 226, "1106": 226, "1108": 226, "1110": 226, "1114": 226, "1116": 226, "1118": 226, "1120": 226, "1122": 226, "1124": 226, "1126": 226, "1128": 226, "1130": 226, "1132": 226, "1134": 226, "1136": 226, "1138": 226, "1140": 226, "1142": 226, "1144": 226, "1146": 226, "1148": 226, "1150": 226, "1152": [226, 1122], "1154": [226, 1122], "1156": 226, "1158": 226, "1160": 226, "1162": 226, "1164": 226, "1166": 226, "1168": 226, "1170": 226, "1172": 226, "1174": 226, "1176": 226, "1178": 226, "1180": 226, "1182": 226, "1184": 226, "1186": 226, "1188": 226, "1190": 226, "1192": 226, "1194": 226, "1196": 226, "1198": 226, "1202": [226, 1122], "1204": [226, 1122], "1206": 226, "1208": 226, "1210": 226, "1212": 226, "1214": 226, "1216": 226, "1218": 226, "1220": 226, "1222": 226, "1224": 226, "1226": 226, "1228": 226, "1230": 226, "1232": 226, "1236": 226, "1238": 226, "1240": 226, "1242": 226, "1246": 226, "1248": 226, "1250": 226, "1252": 226, "1254": [226, 486, 487, 488, 500, 501, 502], "1256": 226, "1258": 226, "1260": [226, 451], "1262": 226, "1264": 226, "1266": 226, "1268": 226, "1270": 226, "1272": 226, "1274": 226, "1276": 226, "1278": 226, "1280": 226, "1282": 226, "1284": 226, "1286": 226, "1288": 226, "1290": 226, "1292": 226, "1294": 226, "1296": 226, "1298": 226, "1300": 226, "1302": 226, "1304": 226, "1306": 226, "1308": 226, "1310": 226, "1312": 226, "1314": 226, "1316": 226, "1318": 226, "1320": 226, "1322": 226, "1324": 226, "1326": 226, "1328": 226, "1330": 226, "1332": 226, "1334": 226, "1336": 226, "1338": 226, "1340": 226, "1342": 226, "1344": 226, "1346": 226, "1348": 226, "1350": 226, "1352": [226, 934], "1354": 226, "1356": 226, "1358": 226, "1360": 226, "1362": 226, "1364": 226, "1366": 226, "1368": 226, "1370": 226, "1372": 226, "1374": 226, "1378": 226, "1380": 226, "1382": 226, "1384": 226, "1386": 226, "1388": 226, "1390": 226, "1392": [226, 467], "1394": 226, "1396": 226, "1398": 226, "1400": 226, "1402": 226, "1406": 226, "1408": 226, "1410": 226, "1412": 226, "1414": 226, "1416": [226, 1045], "1418": 226, "1420": 226, "1422": 226, "1424": 226, "1426": 226, "1428": 226, "1430": 226, "1432": 226, "1434": 226, "1436": 226, "1438": 226, "1440": 226, "1442": 226, "1444": 226, "1446": 226, "1448": 226, "1450": [226, 1121], "1452": [226, 1121], "1454": [226, 1121], "1456": 226, "1458": 226, "1460": 226, "1462": 226, "1464": 226, "1466": 226, "1468": 226, "1470": 226, "1472": 226, "1474": 226, "1476": 226, "1478": 226, "1480": 226, "1482": 226, "1484": 226, "1486": 226, "1488": 226, "1490": 226, "1492": 226, "1494": 226, "1496": 226, "1498": 226, "1502": 226, "1504": 226, "1506": 226, "1508": 226, "1510": 226, "1512": 226, "1514": 226, "1516": 226, "1518": [226, 1121], "1520": [226, 1121], "1522": [226, 1121], "1524": 226, "1526": 226, "1528": 226, "1530": 226, "1532": 226, "1534": 226, "1536": [226, 976], "1538": 226, "1540": 226, "1542": 226, "1544": 226, "1546": 226, "1548": 226, "1550": 226, "1552": 226, "1554": 226, "1556": 226, "1558": [226, 845], "1560": 226, "1562": 226, "1564": 226, "1566": 226, "1568": 226, "1570": 226, "1572": 226, "1574": 226, "1576": 226, "1578": 226, "1580": 226, "1582": 226, "1584": 226, "1586": 226, "1588": 226, "1590": 226, "1592": 226, "1594": 226, "1596": 226, "1598": 226, "1600": 226, "1602": 226, "1604": [226, 970], "1606": 226, "1608": 226, "1610": 226, "1612": 226, "1614": 226, "1616": 226, "1618": 226, "1620": 226, "1622": 226, "1624": 226, "1626": 226, "1628": 226, "1630": 226, "1632": 226, "1634": [226, 486, 487], "1636": 226, "1638": 226, "1640": 226, "1642": 226, "1644": 226, "1646": 226, "1648": 226, "1650": 226, "1652": 226, "1654": 226, "1656": 226, "1658": 226, "1660": 226, "1662": 226, "1664": 226, "1666": 226, "1668": 226, "1672": 226, "1674": 226, "1676": 226, "1678": 226, "1680": 226, "1682": 226, "1684": 226, "1686": 226, "1688": [226, 977, 978], "1690": 226, "1692": 226, "1694": 226, "1696": 226, "1698": 226, "1700": 226, "1702": 226, "1704": 226, "1706": [226, 988], "1708": 226, "1710": 226, "1712": 226, "1714": 226, "1716": 226, "1718": 226, "1722": 226, "1724": 226, "1726": 226, "1728": 226, "1730": 226, "1732": 226, "1734": 226, "1736": 226, "1738": 226, "1740": 226, "1742": 226, "1744": 226, "1746": 226, "1748": 226, "1750": 226, "1752": 226, "1754": 226, "1756": 226, "1758": 226, "1760": 226, "1762": 226, "1764": [226, 285], "1766": 226, "1768": 226, "1770": 226, "1772": 226, "1774": 226, "1776": 226, "1778": 226, "1780": 226, "1782": 226, "1784": 226, "1786": 226, "1788": 226, "1790": 226, "1792": 226, "1794": 226, "1796": 226, "1798": 226, "1800": [226, 976], "1802": 226, "1804": 226, "1806": 226, "1808": 226, "1810": 226, "1812": 226, "1814": 226, "1816": 226, "1818": 226, "1820": 226, "1822": 226, "1824": 226, "1826": 226, "1828": 226, "1830": 226, "1832": 226, "1834": 226, "1836": 226, "1838": 226, "1840": 226, "1842": 226, "1844": 226, "1846": 226, "1848": 226, "1850": 226, "1852": 226, "1854": 226, "1856": 226, "1858": 226, "1860": 226, "1862": 226, "1864": 226, "1866": 226, "1868": 226, "1870": 226, "1872": 226, "1874": 226, "1876": 226, "1878": 226, "1880": 226, "1882": 226, "1884": 226, "1886": 226, "1888": 226, "1890": 226, "1892": 226, "1894": 226, "1896": 226, "1898": 226, "1900": [226, 236, 1089, 1091, 1095, 1097], "1902": 226, "1904": 226, "1906": 226, "1908": 226, "1910": 226, "1912": 226, "1914": 226, "1916": 226, "1918": 226, "1920": 226, "1922": 226, "1924": 226, "1926": 226, "1928": 226, "1930": 226, "1932": 226, "1934": 226, "1938": 226, "1940": 226, "1942": 226, "1944": 226, "1946": 226, "1948": 226, "1950": 226, "1952": 226, "1954": [226, 1055], "1956": [226, 1025], "1958": 226, "1962": 226, "1964": 226, "1968": [226, 396], "1970": [226, 735], "1972": 226, "1974": 226, "1976": 226, "1978": [226, 356], "1980": [226, 561, 976], "1984": 226, "1986": [226, 1089, 1091, 1095, 1097], "1988": [226, 356, 470], "1990": [226, 561], "1992": 226, "1994": 226, "2004": 226, "2024": [226, 352], "2026": 226, "2028": 226, "2030": 226, "2032": 226, "2034": 226, "2036": 226, "2038": 226, "2040": 226, "2042": 226, "2044": 226, "2046": 226, "2050": 226, "2052": 226, "2054": 226, "2056": 226, "2058": 226, "2060": 226, "2062": 226, "2064": 226, "2066": 226, "2068": 226, "2070": 226, "2072": 226, "2074": 226, "2076": 226, "2078": 226, "2080": 226, "2082": 226, "2084": 226, "2086": 226, "2088": 226, "2090": 226, "2092": 226, "2094": 226, "2096": 226, "2098": 226, "2100": 226, "2102": 226, "2104": 226, "2106": 226, "2108": 226, "2110": 226, "2112": 226, "2114": 226, "2116": 226, "2118": 226, "2120": 226, "2122": 226, "2124": 226, "2126": 226, "2128": 226, "2130": 226, "2132": 226, "2134": 226, "2136": 226, "2138": 226, "2140": 226, "2142": 226, "2144": 226, "2146": 226, "2148": 226, "2150": 226, "2152": 226, "2154": 226, "2156": 226, "2158": 226, "2160": 226, "2162": 226, "2164": 226, "2166": 226, "2168": 226, "2170": 226, "2172": 226, "2174": 226, "2176": 226, "2178": 226, "2180": 226, "2182": 226, "2184": 226, "2186": 226, "2188": 226, "2190": 226, "2192": 226, "2194": 226, "2196": [226, 753], "2198": 226, "2200": 226, "2202": 226, "2204": 226, "2206": 226, "2208": 226, "2210": 226, "2214": 226, "2216": 226, "2218": 226, "2220": 226, "2222": 226, "2224": 226, "2226": 226, "2228": 226, "2230": 226, "2232": 226, "2234": 226, "2236": 226, "2238": 226, "2240": 226, "2242": 226, "2244": 226, "2246": 226, "2248": 226, "2250": 226, "2252": 226, "2254": 226, "2256": 226, "2258": 226, "2260": 226, "2262": 226, "2264": 226, "2266": 226, "2268": 226, "2272": 226, "2274": 226, "2276": 226, "2278": 226, "2280": 226, "2282": 226, "2284": 226, "2286": 226, "2288": 226, "2290": 226, "2292": 226, "2294": 226, "2296": 226, "2298": 226, "2300": 226, "2302": 226, "2304": 226, "2306": 226, "2308": 226, "2310": 226, "2312": 226, "2314": 226, "2316": 226, "2318": 226, "2320": 226, "2322": 226, "2324": 226, "2326": 226, "2328": 226, "2330": 226, "2332": [226, 884], "2334": 226, "2336": 226, "2338": 226, "2340": 226, "2342": 226, "2344": 226, "2346": 226, "2348": 226, "2350": 226, "2352": 226, "2354": 226, "2356": 226, "2358": 226, "2360": 226, "2362": 226, "2364": 226, "2366": 226, "2368": 226, "2370": 226, "2372": 226, "2374": 226, "2376": 226, "2378": 226, "2380": 226, "2382": 226, "2384": 226, "2386": 226, "2388": 226, "2390": 226, "2392": 226, "2394": 226, "2396": 226, "2398": 226, "2400": 226, "2402": 226, "2404": 226, "2406": 226, "2408": 226, "2410": 226, "2412": 226, "2414": 226, "2416": 226, "2418": 226, "2420": 226, "2422": 226, "2424": 226, "2426": 226, "2428": 226, "2430": 226, "2432": 226, "2434": 226, "2436": 226, "2438": 226, "2440": [226, 307, 313], "2442": 226, "2444": 226, "2446": 226, "2448": 226, "2450": 226, "2452": 226, "2454": 226, "2456": 226, "2458": 226, "2460": [226, 710], "2462": 226, "2464": 226, "2466": 226, "2468": 226, "2470": 226, "2472": 226, "2474": 226, "2476": 226, "2478": 226, "2480": 226, "2482": 226, "2484": 226, "2486": 226, "2488": 226, "2490": 226, "2492": 226, "2494": 226, "2496": 226, "2498": 226, "2500": 226, "2502": 226, "2504": 226, "2506": 226, "2508": 226, "2510": 226, "2512": 226, "2514": 226, "2516": 226, "2518": 226, "2520": 226, "2522": 226, "2524": 226, "2526": 226, "2528": 226, "2530": 226, "2532": 226, "2534": 226, "2536": 226, "2538": 226, "2540": 226, "2542": 226, "2544": 226, "2546": 226, "2548": 226, "2550": 226, "2552": 226, "2554": 226, "2556": 226, "2558": 226, "2560": 226, "2562": 226, "2564": 226, "2566": 226, "2568": 226, "2570": 226, "2572": 226, "2574": 226, "2576": 226, "2578": 226, "2580": 226, "2582": 226, "2584": 226, "2586": 226, "2588": 226, "2590": 226, "2592": 226, "2594": 226, "2596": 226, "2598": 226, "2600": 226, "2602": 226, "2604": 226, "2606": 226, "2608": 226, "2610": 226, "2612": 226, "2614": 226, "2616": 226, "2618": 226, "2620": 226, "2622": 226, "2624": 226, "2626": 226, "2628": 226, "2630": 226, "2632": 226, "2634": 226, "2636": 226, "2638": 226, "2640": [226, 285], "2642": 226, "2644": 226, "2646": 226, "2648": 226, "2650": 226, "2652": 226, "2654": 226, "2656": 226, "2658": 226, "2660": 226, "2662": 226, "2664": 226, "2666": 226, "2668": 226, "2670": 226, "2672": 226, "2674": 226, "2676": 226, "2678": 226, "2680": 226, "2682": 226, "2684": 226, "2686": 226, "2688": 226, "2690": 226, "2692": 226, "2694": 226, "2696": 226, "2698": 226, "2700": 226, "2702": 226, "2704": 226, "2706": 226, "2708": 226, "2710": 226, "2712": 226, "2714": 226, "2716": 226, "2718": 226, "2720": 226, "2722": 226, "2724": 226, "2726": 226, "2728": 226, "2730": [226, 281], "2732": 226, "2734": 226, "2736": 226, "2738": 226, "2740": 226, "2742": 226, "2744": 226, "2746": [226, 884, 910, 934], "2748": [226, 246, 264, 271, 303, 307, 313], "2750": 226, "2752": 226, "2754": 226, "2756": 226, "2758": 226, "2760": 226, "2762": 226, "2764": 226, "2766": 226, "2768": 226, "2770": 226, "2772": 226, "2774": 226, "2776": 226, "2778": 226, "2780": 226, "2782": 226, "2784": 226, "2786": 226, "2788": 226, "2790": 226, "2792": 226, "2794": 226, "2796": 226, "2798": 226, "2800": [226, 269, 444], "2802": [226, 444], "2804": 226, "2806": 226, "2808": 226, "2810": 226, "2812": 226, "2814": 226, "2816": 226, "2818": 226, "2820": 226, "2822": 226, "2824": 226, "2826": 226, "2828": [226, 438], "2830": 226, "2832": 226, "2834": 226, "2836": 226, "2838": 226, "2840": 226, "2842": 226, "2844": 226, "2846": 226, "2848": 226, "2850": 226, "2852": 226, "2854": 226, "2856": 226, "2858": 226, "2860": 226, "2862": 226, "2864": 226, "2866": 226, "2868": 226, "2870": 226, "2872": 226, "2874": 226, "2876": 226, "2878": 226, "2880": 226, "2882": 226, "2884": 226, "2886": 226, "2888": 226, "2890": 226, "2892": 226, "2894": 226, "2896": 226, "2898": 226, "2900": 226, "2902": 226, "2904": 226, "2906": 226, "2910": 226, "2912": 226, "2914": 226, "2916": 226, "2918": 226, "2920": 226, "2922": 226, "2924": 226, "2926": 226, "2928": 226, "2930": 226, "2932": 226, "2934": 226, "2936": 226, "2938": 226, "2940": 226, "2942": 226, "2944": 226, "2946": 226, "2948": 226, "2950": 226, "2952": 226, "2954": 226, "2956": 226, "2958": 226, "2960": 226, "2962": 226, "2964": 226, "2966": 226, "2968": 226, "2970": 226, "2972": 226, "2974": 226, "2976": 226, "2978": 226, "2980": 226, "2982": 226, "2984": 226, "2986": 226, "2988": 226, "2990": 226, "2992": 226, "2994": 226, "2996": 226, "2998": 226, "3002": 226, "3004": 226, "3006": 226, "3008": 226, "3010": 226, "3012": 226, "3014": 226, "3016": 226, "3018": 226, "3020": 226, "3022": 226, "3024": 226, "3026": 226, "3028": 226, "3030": 226, "3032": 226, "3034": 226, "3036": 226, "3038": 226, "3040": 226, "3042": 226, "3044": 226, "3046": 226, "3048": 226, "3050": 226, "3052": 226, "3054": 226, "3056": 226, "3058": 226, "3060": 226, "3062": 226, "3064": 226, "3066": 226, "3068": 226, "3070": 226, "3072": 226, "3074": 226, "3076": 226, "3078": 226, "3080": 226, "3082": 226, "3084": 226, "3086": 226, "3088": 226, "3090": 226, "3092": 226, "3094": 226, "3096": 226, "3098": 226, "3100": 226, "3102": 226, "3104": 226, "3106": 226, "3108": 226, "3110": [226, 275], "3112": 226, "3114": 226, "3116": 226, "3118": 226, "3120": 226, "3122": 226, "3124": 226, "3126": 226, "3128": 226, "3130": 226, "3132": 226, "3134": 226, "3136": 226, "3138": 226, "3140": 226, "3142": 226, "3144": 226, "3146": 226, "3148": 226, "3150": 226, "3152": 226, "3154": 226, "3156": 226, "3158": 226, "3160": 226, "3162": 226, "3164": 226, "3166": 226, "3168": 226, "3170": 226, "3172": 226, "3174": 226, "3176": 226, "3178": 226, "3180": 226, "3182": 226, "3184": 226, "3186": 226, "3188": 226, "3190": 226, "3192": 226, "3194": 226, "3196": 226, "3198": 226, "3200": 226, "3202": 226, "3204": 226, "3206": 226, "3208": 226, "3210": 226, "3212": 226, "3214": 226, "3216": 226, "3218": 226, "3220": 226, "3222": 226, "3224": 226, "3226": 226, "3228": 226, "3230": 226, "3232": 226, "3234": 226, "3236": 226, "3238": 226, "3240": 226, "3242": 226, "3244": 226, "3246": 226, "3248": 226, "3250": 226, "3252": 226, "3254": 226, "3256": 226, "3258": 226, "3260": 226, "3262": 226, "3264": 226, "3266": 226, "3268": 226, "3270": 226, "3272": 226, "3274": 226, "3276": 226, "3278": 226, "3280": 226, "3282": 226, "3284": 226, "3286": 226, "3288": 226, "3290": 226, "3292": 226, "3294": 226, "3296": 226, "3298": 226, "3300": 226, "3302": 226, "3304": 226, "3306": 226, "3308": 226, "3310": 226, "3312": 226, "3314": 226, "3316": 226, "3318": 226, "3320": 226, "3322": 226, "3324": 226, "3326": 226, "3328": 226, "3330": 226, "3332": 226, "3334": 226, "3336": 226, "3338": 226, "3340": 226, "3342": 226, "3344": 226, "3346": 226, "3348": 226, "3350": 226, "3352": 226, "3354": 226, "3356": 226, "3358": 226, "3360": 226, "3362": 226, "3364": 226, "3366": 226, "3368": 226, "3370": 226, "3372": 226, "3374": 226, "3376": 226, "3378": 226, "3380": 226, "3382": 226, "3384": 226, "3386": 226, "3388": 226, "3390": 226, "3392": 226, "3394": 226, "3396": 226, "3398": 226, "3400": 226, "3402": 226, "3404": 226, "3406": 226, "3408": 226, "3410": 226, "3412": 226, "3414": 226, "3416": 226, "3418": 226, "3420": 226, "3422": 226, "3424": 226, "3426": 226, "3428": 226, "3430": 226, "3432": 226, "3434": 226, "3436": 226, "3438": 226, "3440": 226, "3442": 226, "3444": 226, "3446": 226, "3448": 226, "3450": 226, "3452": 226, "3454": 226, "3456": 226, "3458": 226, "3460": 226, "3462": 226, "3464": 226, "3466": 226, "3468": 226, "3470": 226, "3472": 226, "3474": 226, "3476": 226, "3478": 226, "3480": 226, "3482": 226, "3484": 226, "3486": 226, "3488": 226, "3490": 226, "3492": 226, "3494": 226, "3496": 226, "3498": 226, "3500": 226, "3502": 226, "3504": 226, "3506": 226, "3508": 226, "3510": 226, "3512": 226, "3514": 226, "3516": 226, "3518": 226, "3520": 226, "3522": 226, "3524": 226, "3526": 226, "3528": 226, "3530": 226, "3532": 226, "3534": 226, "3536": 226, "3538": 226, "3540": 226, "3542": 226, "3544": 226, "3546": 226, "3548": 226, "3550": 226, "3552": 226, "3554": 226, "3556": 226, "3558": 226, "3560": 226, "3562": 226, "3564": 226, "3566": 226, "3568": 226, "3570": 226, "3572": 226, "3574": 226, "3576": 226, "3578": 226, "3580": 226, "3582": 226, "3584": 226, "3586": 226, "3588": 226, "3590": 226, "3592": 226, "3594": 226, "3596": 226, "3598": 226, "3602": 226, "3604": 226, "3606": 226, "3608": 226, "3610": 226, "3612": 226, "3614": 226, "3616": 226, "3618": 226, "3620": [226, 1122], "3622": [226, 1122], "3624": [226, 1122], "3626": 226, "3628": 226, "3630": 226, "3632": 226, "3634": 226, "3636": 226, "3638": 226, "3640": 226, "3642": 226, "3644": 226, "3646": 226, "3648": 226, "3650": 226, "3652": 226, "3654": 226, "3656": 226, "3658": 226, "3660": 226, "3662": 226, "3664": 226, "3666": 226, "3668": 226, "3670": 226, "3672": 226, "3674": 226, "3676": 226, "3678": 226, "3680": 226, "3682": 226, "3684": 226, "3686": 226, "3688": 226, "3690": 226, "3692": 226, "3694": 226, "3696": 226, "3698": 226, "3700": 226, "3702": 226, "3704": 226, "3706": 226, "3708": 226, "3710": 226, "3712": 226, "3714": 226, "3716": 226, "3718": 226, "3720": 226, "3722": [226, 931], "3724": 226, "3726": 226, "3728": 226, "3730": 226, "3732": 226, "3734": 226, "3736": 226, "3738": 226, "3740": 226, "3742": 226, "3744": 226, "3746": 226, "3748": 226, "3750": 226, "3752": 226, "3754": 226, "3756": 226, "3758": 226, "3760": 226, "3762": 226, "3764": 226, "3766": 226, "3768": 226, "3770": [226, 275], "3772": 226, "3774": 226, "3776": 226, "3778": 226, "3780": 226, "3782": 226, "3784": 226, "3786": 226, "3788": 226, "3790": 226, "3792": 226, "3794": 226, "3796": 226, "3798": 226, "3800": 226, "3802": 226, "3804": 226, "3806": 226, "3808": 226, "3810": 226, "3812": 226, "3814": 226, "3816": 226, "3818": 226, "3820": 226, "3822": 226, "3824": 226, "3826": 226, "3828": 226, "3830": 226, "3832": 226, "3834": 226, "3836": 226, "3838": 226, "3840": 226, "3842": 226, "3844": 226, "3846": 226, "3848": 226, "3850": 226, "3852": 226, "3854": 226, "3856": 226, "3858": 226, "3860": 226, "3862": 226, "3864": 226, "3866": 226, "3868": 226, "3870": 226, "3872": 226, "3874": [226, 1122], "3876": [226, 1122], "3878": [226, 1122], "3880": 226, "3882": 226, "3884": 226, "3886": 226, "3888": 226, "3890": 226, "3892": 226, "3894": 226, "3896": 226, "3898": 226, "3900": 226, "3902": 226, "3904": 226, "3906": 226, "3908": 226, "3910": 226, "3912": 226, "3914": 226, "3916": 226, "3918": 226, "3920": 226, "3922": 226, "3924": 226, "3926": 226, "3928": 226, "3930": 226, "3932": 226, "3934": 226, "3936": 226, "3938": 226, "3940": 226, "3942": 226, "3946": 226, "3948": 226, "3950": 226, "3952": 226, "3954": 226, "3956": 226, "3958": 226, "3960": 226, "3962": 226, "3964": 226, "3966": 226, "3968": 226, "3970": 226, "3972": 226, "3974": 226, "3976": 226, "3978": 226, "3980": 226, "3982": 226, "3984": 226, "3986": 226, "3988": 226, "3990": 226, "3992": 226, "3994": 226, "3996": 226, "3998": 226, "4002": 226, "4004": 226, "4006": 226, "4008": 226, "4010": 226, "4012": 226, "4014": 226, "4016": 226, "4018": 226, "4020": 226, "4022": 226, "4024": 226, "4026": 226, "4028": 226, "4030": 226, "4032": 226, "4034": 226, "4036": 226, "4038": 226, "4040": 226, "4042": 226, "4044": 226, "4046": 226, "4048": 226, "4050": 226, "4052": 226, "4054": 226, "4056": 226, "4058": 226, "4060": 226, "4062": 226, "4064": 226, "4066": 226, "4068": 226, "4070": 226, "4072": 226, "4074": 226, "4076": 226, "4078": 226, "4080": 226, "4082": 226, "4084": 226, "4086": 226, "4088": 226, "4090": 226, "4092": 226, "4094": 226, "4098": 226, "4100": 226, "4102": 226, "4104": 226, "4106": 226, "4108": 226, "4110": 226, "4112": 226, "4114": 226, "4116": 226, "4118": 226, "4120": 226, "4122": 226, "4124": 226, "4126": 226, "4128": 226, "4130": 226, "4132": 226, "4134": 226, "4136": 226, "4138": 226, "4140": 226, "4142": 226, "4144": 226, "4146": 226, "4148": 226, "4150": 226, "4152": 226, "4154": 226, "4156": 226, "4158": 226, "4160": 226, "4162": 226, "4164": 226, "4166": 226, "4168": 226, "4170": 226, "4172": 226, "4174": 226, "4176": 226, "4178": 226, "4180": 226, "4182": 226, "4184": 226, "4186": 226, "4188": 226, "4190": 226, "4192": 226, "4194": 226, "4196": 226, "4198": 226, "4200": 226, "4202": 226, "4204": 226, "4206": 226, "4208": 226, "4210": 226, "4212": 226, "4214": 226, "4216": 226, "4218": 226, "4220": 226, "4222": 226, "4224": 226, "4226": 226, "4228": 226, "4230": 226, "4232": 226, "4234": 226, "4236": 226, "4238": 226, "4240": 226, "4242": 226, "4244": 226, "4246": 226, "4248": 226, "4250": 226, "4252": 226, "4254": 226, "4256": 226, "4258": 226, "4260": 226, "4262": 226, "4264": 226, "4266": 226, "4268": 226, "4270": 226, "4272": 226, "4274": 226, "4276": 226, "4278": 226, "4280": 226, "4282": 226, "4284": 226, "4286": 226, "4288": 226, "4290": 226, "4292": 226, "4294": 226, "4296": 226, "4298": 226, "4300": 226, "4302": 226, "4304": 226, "4306": 226, "4308": 226, "4310": 226, "4312": 226, "4314": 226, "4316": 226, "4318": 226, "4320": 226, "4322": 226, "4324": 226, "4326": 226, "4328": 226, "4330": 226, "4332": 226, "4334": 226, "4336": 226, "4338": 226, "4340": 226, "4342": 226, "4344": 226, "4346": 226, "4348": 226, "4350": 226, "4352": 226, "4354": 226, "4356": 226, "4358": 226, "4360": 226, "4362": 226, "4364": [226, 1000], "4366": 226, "4368": 226, "4370": 226, "4372": 226, "4374": 226, "4376": 226, "4378": 226, "4380": 226, "4382": 226, "4384": 226, "4386": 226, "4388": 226, "4390": 226, "4392": 226, "4394": 226, "4396": 226, "4398": 226, "4400": 226, "4402": 226, "4404": 226, "4406": 226, "4408": 226, "4410": 226, "4412": 226, "4414": 226, "4416": 226, "4418": 226, "4420": 226, "4422": 226, "4424": 226, "4426": 226, "4428": 226, "4430": 226, "4432": 226, "4434": 226, "4436": 226, "4438": 226, "4440": 226, "4442": 226, "4444": 226, "4446": 226, "4448": 226, "4450": 226, "4452": 226, "4454": 226, "4456": 226, "4458": 226, "4460": 226, "4462": 226, "4464": 226, "4466": 226, "4468": 226, "4470": 226, "4472": 226, "4474": 226, "4476": 226, "4478": 226, "4480": 226, "4482": 226, "4484": 226, "4486": 226, "4488": 226, "4490": 226, "4492": 226, "4494": 226, "4496": 226, "4498": 226, "4502": 226, "4504": 226, "4506": 226, "4508": 226, "4510": 226, "4512": 226, "4514": 226, "4516": 226, "4518": 226, "4520": 226, "4522": 226, "4524": 226, "4526": 226, "4528": 226, "4530": 226, "4532": 226, "4534": 226, "4536": 226, "4538": 226, "4540": 226, "4542": 226, "4544": 226, "4546": 226, "4548": 226, "4550": 226, "4552": 226, "4554": 226, "4556": 226, "4558": 226, "4560": 226, "4562": 226, "4564": 226, "4566": 226, "4568": 226, "4570": 226, "4572": 226, "4574": 226, "4578": 226, "4580": 226, "4582": 226, "4584": 226, "4586": 226, "4588": 226, "4590": 226, "4592": 226, "4594": 226, "4596": 226, "4598": 226, "4600": 226, "4602": 226, "4604": 226, "4606": 226, "4608": 226, "4610": 226, "4612": 226, "4614": 226, "4616": 226, "4618": 226, "4620": 226, "4622": 226, "4624": 226, "4626": 226, "4628": [226, 239], "4630": [226, 438], "4632": 226, "4634": 226, "4636": 226, "4638": 226, "4640": 226, "4642": 226, "4644": 226, "4646": 226, "4648": 226, "4650": 226, "4652": 226, "4654": 226, "4656": 226, "4658": 226, "4662": 226, "4664": 226, "4666": 226, "4668": 226, "4670": 226, "4672": 226, "4674": 226, "4676": 226, "4680": 226, "4682": 226, "4684": 226, "4686": 226, "4688": 226, "4690": 226, "4692": 226, "4694": 226, "4696": 226, "4698": 226, "4700": 226, "4702": 226, "4704": 226, "4706": 226, "4708": 226, "4710": 226, "4712": 226, "4714": 226, "4716": 226, "4718": 226, "4720": 226, "4722": 226, "4724": 226, "4726": 226, "4728": 226, "4730": 226, "4732": 226, "4734": 226, "4736": 226, "4738": 226, "4740": 226, "4742": 226, "4744": 226, "4746": 226, "4748": 226, "4750": 226, "4752": 226, "4754": 226, "4756": 226, "4758": 226, "4760": 226, "4762": 226, "4764": 226, "4766": 226, "4768": 226, "4770": 226, "4772": 226, "4774": 226, "4776": 226, "4778": 226, "4780": 226, "4782": 226, "4784": 226, "4786": 226, "4788": 226, "4790": 226, "4792": 226, "4794": 226, "4796": 226, "4798": 226, "4802": 226, "4804": 226, "4806": 226, "4808": 226, "4810": 226, "4812": 226, "4814": 226, "4816": 226, "4818": 226, "4820": 226, "4822": 226, "4824": 226, "4826": 226, "4828": 226, "4830": 226, "4832": 226, "4834": 226, "4836": 226, "4838": 226, "4840": 226, "4842": 226, "4844": 226, "4846": 226, "4848": 226, "4850": 226, "4852": 226, "4854": 226, "4856": 226, "4858": 226, "4860": 226, "4862": 226, "4864": 226, "4866": [226, 236], "4868": 226, "4870": 226, "4872": 226, "4874": 226, "4876": 226, "4878": 226, "4880": 226, "4882": [226, 847], "4884": 226, "4886": 226, "4888": 226, "4890": 226, "4892": 226, "4894": 226, "4896": 226, "4898": 226, "4900": 226, "4902": 226, "4904": 226, "4906": 226, "4908": 226, "4910": 226, "4912": 226, "4914": 226, "4916": 226, "4918": 226, "4920": 226, "4922": 226, "4924": 226, "4926": [226, 239], "4928": 226, "4930": 226, "4932": 226, "4934": 226, "4936": 226, "4938": 226, "4940": 226, "4942": 226, "4944": 226, "4946": 226, "4948": 226, "4950": [226, 243], "4952": 226, "4954": 226, "4956": 226, "4958": 226, "4960": 226, "4962": 226, "4964": 226, "4966": 226, "4968": 226, "4970": 226, "4972": 226, "4974": 226, "4976": 226, "4978": 226, "4980": 226, "4982": 226, "4984": 226, "4986": 226, "4988": 226, "4990": 226, "4992": 226, "4994": 226, "4996": 226, "4998": 226, "5002": 226, "5004": 226, "5006": 226, "5008": 226, "5010": 226, "5012": 226, "5014": 226, "5016": 226, "5018": 226, "5020": 226, "5022": 226, "5024": 226, "5026": 226, "5028": 226, "5030": 226, "5032": 226, "5034": 226, "5036": 226, "5038": 226, "5040": 226, "5042": 226, "5044": 226, "5046": 226, "5048": 226, "5052": 226, "5054": 226, "5056": 226, "5058": 226, "5060": 226, "5062": 226, "5064": 226, "5066": 226, "5068": 226, "5070": 226, "5072": 226, "5074": 226, "5076": 226, "5078": 226, "5080": [226, 884], "5082": 226, "5084": 226, "5086": 226, "5088": 226, "5090": 226, "5092": 226, "5094": 226, "5096": 226, "5098": 226, "5100": 226, "5102": 226, "5104": 226, "5106": 226, "5108": 226, "5110": 226, "5112": 226, "5114": 226, "5116": 226, "5118": 226, "5120": 226, "5122": 226, "5124": 226, "5126": 226, "5128": 226, "5130": 226, "5132": 226, "5134": 226, "5136": 226, "5138": 226, "5140": 226, "5142": 226, "5144": 226, "5146": 226, "5148": 226, "5150": 226, "5152": 226, "5154": 226, "5156": 226, "5158": 226, "5160": 226, "5162": 226, "5164": 226, "5166": 226, "5168": 226, "5170": 226, "5172": 226, "5174": 226, "5176": 226, "5178": 226, "5180": 226, "5182": 226, "5184": 226, "5186": 226, "5188": 226, "5190": 226, "5192": 226, "5194": 226, "5196": 226, "5198": 226, "5200": 226, "5202": 226, "5204": 226, "5206": 226, "5208": 226, "5210": 226, "5212": 226, "5214": 226, "5216": 226, "5218": 226, "5220": 226, "5222": 226, "5224": 226, "5226": 226, "5228": 226, "5230": 226, "5232": 226, "5234": 226, "5236": 226, "5238": 226, "5240": 226, "5242": 226, "5244": 226, "5246": 226, "5248": 226, "5250": 226, "5252": 226, "5254": 226, "5256": 226, "5258": 226, "5260": 226, "5262": 226, "5264": 226, "5266": 226, "5268": 226, "5270": 226, "5272": 226, "5274": 226, "5276": 226, "5278": 226, "5280": 226, "5282": 226, "5284": 226, "5286": 226, "5288": 226, "5290": 226, "5292": 226, "5294": 226, "5296": 226, "5298": 226, "5300": 226, "5302": 226, "5304": 226, "5306": 226, "5308": 226, "5310": 226, "5312": 226, "5314": 226, "5316": 226, "5318": 226, "5320": 226, "5322": 226, "5324": 226, "5326": 226, "5328": 226, "5330": 226, "5332": 226, "5334": 226, "5336": 226, "5338": 226, "5340": 226, "5342": 226, "5344": 226, "5346": 226, "5348": 226, "5350": 226, "5352": 226, "5354": 226, "5356": 226, "5358": 226, "5360": 226, "5362": [226, 269, 444], "5364": 226, "5366": 226, "5368": 226, "5370": 226, "5372": 226, "5374": 226, "5376": 226, "5378": 226, "5380": 226, "5382": 226, "5384": 226, "5386": 226, "5388": 226, "5390": 226, "5392": 226, "5394": 226, "5396": 226, "5398": 226, "5400": 226, "5402": 226, "5404": 226, "5406": 226, "5408": 226, "5410": [226, 438], "5412": 226, "5414": 226, "5416": 226, "5418": 226, "5420": 226, "5422": 226, "5424": 226, "5426": 226, "5428": 226, "5430": 226, "5432": 226, "5434": 226, "5436": 226, "5438": 226, "5440": 226, "5442": 226, "5444": 226, "5446": 226, "5448": 226, "5450": 226, "5452": 226, "5454": 226, "5456": 226, "5458": 226, "5460": 226, "5462": 226, "5464": 226, "5466": 226, "5468": 226, "5470": 226, "5472": 226, "5474": 226, "5476": 226, "5478": 226, "5480": 226, "5482": 226, "5484": 226, "5486": 226, "5488": 226, "5490": 226, "5492": 226, "5494": 226, "5496": 226, "5498": 226, "5500": 226, "5502": 226, "5504": 226, "5506": 226, "5508": 226, "5510": 226, "5512": 226, "5514": 226, "5516": 226, "5518": 226, "5520": 226, "5522": 226, "5524": 226, "5526": 226, "5528": 226, "5530": 226, "5532": 226, "5534": 226, "5536": 226, "5538": 226, "5540": 226, "5542": 226, "5544": 226, "5546": 226, "5548": 226, "5550": 226, "5552": 226, "5554": 226, "5556": 226, "5558": 226, "5560": 226, "5562": 226, "5564": 226, "5566": 226, "5568": 226, "5570": 226, "5572": 226, "5574": 226, "5576": 226, "5578": 226, "5580": 226, "5582": 226, "5584": 226, "5586": 226, "5588": 226, "5590": 226, "5592": 226, "5594": 226, "5596": 226, "5598": 226, "5600": 226, "5602": 226, "5604": 226, "5606": 226, "5608": 226, "5610": 226, "5612": 226, "5614": 226, "5616": 226, "5618": 226, "5620": 226, "5622": 226, "5624": 226, "5626": 226, "5628": 226, "5630": 226, "5632": 226, "5634": 226, "5636": 226, "5638": 226, "5640": 226, "5642": 226, "5644": 226, "5646": 226, "5648": 226, "5650": 226, "5652": 226, "5654": 226, "5656": 226, "5658": 226, "5660": 226, "5662": 226, "5664": 226, "5666": 226, "5668": 226, "5670": 226, "5672": 226, "5674": 226, "5676": 226, "5678": [226, 917], "5680": 226, "5682": 226, "5684": 226, "5686": 226, "5688": 226, "5690": 226, "5692": 226, "5694": 226, "5696": 226, "5698": 226, "5700": 226, "5702": 226, "5704": 226, "5706": 226, "5708": 226, "5710": 226, "5712": 226, "5714": 226, "5716": 226, "5718": 226, "5720": 226, "5722": 226, "5724": 226, "5726": 226, "5728": 226, "5730": 226, "5732": 226, "5734": 226, "5736": 226, "5738": 226, "5740": 226, "5742": 226, "5744": 226, "5746": 226, "5748": 226, "5750": 226, "5752": 226, "5754": 226, "5756": 226, "5758": 226, "5760": 226, "5762": 226, "5764": 226, "5766": 226, "5768": 226, "5770": 226, "5772": 226, "5774": 226, "5776": 226, "5778": 226, "5780": 226, "5782": 226, "5784": 226, "5786": 226, "5788": 226, "5790": 226, "5792": 226, "5794": 226, "5796": 226, "5798": 226, "5800": 226, "5802": 226, "5804": 226, "5806": 226, "5808": 226, "5810": 226, "5812": 226, "5814": 226, "5816": 226, "5818": 226, "5820": 226, "5822": 226, "5824": 226, "5826": 226, "5828": 226, "5830": 226, "5832": [226, 236], "5834": 226, "5836": 226, "5838": 226, "5840": 226, "5842": 226, "5844": 226, "5846": 226, "5848": 226, "5850": 226, "5852": 226, "5854": 226, "5856": 226, "5858": 226, "5860": 226, "5862": 226, "5864": 226, "5866": 226, "5868": 226, "5870": 226, "5872": 226, "5874": 226, "5876": 226, "5878": 226, "5880": 226, "5882": 226, "5884": 226, "5886": 226, "5888": 226, "5890": 226, "5892": 226, "5894": 226, "5896": 226, "5898": 226, "5900": 226, "5902": 226, "5904": 226, "5906": 226, "5908": 226, "5910": 226, "5912": 226, "5914": 226, "5916": 226, "5918": 226, "5920": 226, "5922": 226, "5924": 226, "5926": 226, "5928": 226, "5930": 226, "5932": 226, "5934": 226, "5936": 226, "5938": 226, "5940": 226, "5942": 226, "5944": 226, "5946": 226, "5948": 226, "5950": 226, "5952": 226, "5954": 226, "5956": 226, "5958": 226, "5960": 226, "5962": 226, "5964": 226, "5966": 226, "5968": 226, "5970": 226, "5972": 226, "5974": 226, "5976": 226, "5978": 226, "5980": 226, "5982": 226, "5984": 226, "5986": 226, "5988": 226, "5990": 226, "5992": 226, "5994": 226, "5996": 226, "5998": 226, "6000": [226, 1016], "6002": 226, "6004": 226, "6006": 226, "6008": 226, "6010": 226, "6012": 226, "6014": 226, "6016": 226, "6018": 226, "6020": 226, "6022": 226, "6024": 226, "6026": 226, "6028": 226, "6030": 226, "6032": 226, "6034": 226, "6036": 226, "6038": 226, "6040": 226, "6042": 226, "6044": 226, "6046": 226, "6048": 226, "6050": 226, "6052": 226, "6054": 226, "6056": 226, "6058": 226, "6060": 226, "6062": 226, "6064": 226, "6066": 226, "6068": 226, "6070": 226, "6072": 226, "6074": 226, "6076": 226, "6078": 226, "6080": 226, "6082": 226, "6084": 226, "6086": 226, "6088": 226, "6090": 226, "6092": 226, "6094": 226, "6096": 226, "6098": 226, "6100": 226, "6102": 226, "6104": 226, "6106": 226, "6108": 226, "6110": 226, "6112": 226, "6114": 226, "6116": 226, "6118": 226, "6120": 226, "6122": 226, "6124": 226, "6126": 226, "6128": 226, "6130": 226, "6132": 226, "6134": 226, "6136": 226, "6138": 226, "6140": 226, "6142": 226, "6144": 226, "6146": 226, "6148": 226, "6150": 226, "6152": 226, "6154": 226, "6156": 226, "6158": 226, "6160": 226, "6162": 226, "6164": 226, "6166": 226, "6168": 226, "6170": 226, "6172": 226, "6174": 226, "6176": 226, "6178": 226, "6180": 226, "6182": 226, "6184": 226, "6186": 226, "6188": 226, "6190": 226, "6192": 226, "6194": 226, "6196": 226, "6198": 226, "6200": 226, "6202": 226, "6204": 226, "6206": 226, "6208": 226, "6210": 226, "6212": 226, "6214": 226, "6216": 226, "6218": 226, "6220": 226, "6222": 226, "6224": 226, "6226": 226, "6228": 226, "6230": 226, "6232": 226, "6234": 226, "6236": 226, "6238": 226, "6240": 226, "6242": 226, "6244": 226, "6246": 226, "6248": 226, "6250": 226, "6252": 226, "6254": 226, "6256": 226, "6258": 226, "6260": 226, "6262": 226, "6264": 226, "6266": 226, "6268": 226, "6270": 226, "6272": 226, "6274": 226, "6276": 226, "6278": 226, "6280": 226, "6282": 226, "6284": 226, "6286": 226, "6288": 226, "6290": 226, "6292": 226, "6294": 226, "6296": 226, "6298": 226, "6300": 226, "6302": 226, "6304": 226, "6306": 226, "6308": 226, "6310": 226, "6312": 226, "6314": 226, "6316": 226, "6318": 226, "6320": 226, "6322": 226, "6324": 226, "6326": 226, "6328": 226, "6330": 226, "6332": 226, "6334": 226, "6336": 226, "6338": 226, "6340": 226, "6342": 226, "6344": 226, "6346": 226, "6348": 226, "6350": 226, "6352": 226, "6354": 226, "6356": 226, "6358": 226, "6360": 226, "6362": 226, "6364": 226, "6366": 226, "6368": 226, "6370": 226, "6372": 226, "6374": 226, "6376": 226, "6378": 226, "6380": 226, "6382": 226, "6384": 226, "6386": 226, "6388": 226, "6390": 226, "6392": 226, "6394": 226, "6396": 226, "6398": 226, "6400": 226, "6402": 226, "6404": 226, "6406": 226, "6408": 226, "6410": 226, "6412": 226, "6414": 226, "6416": 226, "6418": 226, "6420": 226, "6422": 226, "6424": 226, "6426": 226, "6428": 226, "6430": 226, "6432": 226, "6434": 226, "6436": 226, "6438": 226, "6440": 226, "6442": 226, "6444": 226, "6446": 226, "6448": 226, "6450": 226, "6452": 226, "6454": 226, "6456": 226, "6458": 226, "6460": 226, "6462": 226, "6464": 226, "6466": 226, "6468": 226, "6470": 226, "6472": 226, "6474": 226, "6476": 226, "6478": 226, "6480": 226, "6482": 226, "6484": 226, "6486": 226, "6488": 226, "6490": 226, "6492": 226, "6494": 226, "6496": 226, "6498": 226, "6500": 226, "6502": 226, "6504": 226, "6506": 226, "6508": 226, "6510": 226, "6512": 226, "6514": 226, "6516": 226, "6518": 226, "6520": 226, "6522": 226, "6524": 226, "6526": 226, "6528": 226, "6530": 226, "6532": 226, "6534": 226, "6536": 226, "6538": 226, "6540": 226, "6542": 226, "6544": 226, "6546": 226, "6548": 226, "6550": 226, "6552": 226, "6554": 226, "6556": 226, "6558": 226, "6560": 226, "6562": 226, "6564": 226, "6566": 226, "6568": 226, "6570": 226, "6572": 226, "6574": 226, "6576": 226, "6578": 226, "6580": 226, "6582": 226, "6584": 226, "6586": 226, "6588": 226, "6590": 226, "6592": 226, "6594": 226, "6596": 226, "6598": 226, "6600": 226, "6602": 226, "6604": 226, "6606": 226, "6608": 226, "6610": 226, "6612": 226, "6614": 226, "6616": 226, "6618": 226, "6620": 226, "6622": 226, "6624": 226, "6626": 226, "6628": 226, "6630": 226, "6632": 226, "6634": 226, "6636": 226, "6638": 226, "6640": 226, "6642": 226, "6644": 226, "6646": 226, "6648": 226, "6650": 226, "6652": 226, "6654": 226, "6656": 226, "6658": 226, "6660": 226, "6662": 226, "6664": 226, "6666": 226, "6668": 226, "6670": 226, "6672": 226, "6674": 226, "6676": 226, "6678": 226, "6680": 226, "6682": 226, "6684": 226, "6686": 226, "6688": 226, "6690": 226, "6692": 226, "6694": 226, "6696": 226, "6698": 226, "6700": 226, "6702": 226, "6704": 226, "6706": 226, "6708": 226, "6710": 226, "6714": 226, "6716": [226, 249], "6718": 226, "6720": 226, "6722": 226, "6724": 226, "6726": 226, "6728": 226, "6730": 226, "6732": 226, "6734": 226, "6736": 226, "6738": 226, "6740": 226, "6742": 226, "6744": 226, "6746": 226, "6748": 226, "6750": 226, "6752": 226, "6754": 226, "6756": 226, "6758": 226, "6760": 226, "6762": 226, "6764": 226, "6766": 226, "6768": 226, "6770": 226, "6772": 226, "6774": 226, "6776": 226, "6778": 226, "6780": 226, "6782": 226, "6784": 226, "6786": 226, "6788": 226, "6790": 226, "6792": 226, "6794": 226, "6796": 226, "6798": 226, "6800": 226, "6802": 226, "6804": 226, "6806": 226, "6808": 226, "6810": 226, "6812": 226, "6814": 226, "6816": 226, "6818": 226, "6820": 226, "6822": 226, "6824": 226, "6826": 226, "6828": 226, "6830": 226, "6832": 226, "6834": 226, "6836": 226, "6838": 226, "6840": 226, "6842": 226, "6844": 226, "6846": 226, "6848": 226, "6850": 226, "6852": 226, "6854": 226, "6856": 226, "6858": [226, 275], "6860": 226, "6862": 226, "6864": 226, "6866": 226, "6868": 226, "6870": 226, "6872": 226, "6874": 226, "6876": 226, "6878": 226, "6880": 226, "6882": 226, "6884": 226, "6886": 226, "6888": 226, "6890": 226, "6892": 226, "6894": 226, "6896": 226, "6898": 226, "6900": 226, "6902": 226, "6904": 226, "6906": 226, "6908": 226, "6910": 226, "6912": 226, "6914": 226, "6916": 226, "6918": 226, "6920": 226, "6922": 226, "6924": 226, "6926": 226, "6928": 226, "6930": 226, "6932": 226, "6934": 226, "6936": 226, "6938": 226, "6940": 226, "6942": 226, "6944": 226, "6946": 226, "6948": 226, "6950": 226, "6952": 226, "6954": 226, "6956": 226, "6958": 226, "6960": 226, "6962": 226, "6964": 226, "6966": 226, "6968": 226, "6970": 226, "6972": 226, "6974": 226, "6976": 226, "6978": 226, "6980": 226, "6982": 226, "6984": 226, "6986": 226, "6988": 226, "6990": 226, "6992": 226, "6994": 226, "6996": 226, "6998": 226, "7000": 226, "7002": 226, "7004": 226, "7006": 226, "7008": 226, "7010": 226, "7012": 226, "7014": 226, "7016": 226, "7018": 226, "7020": 226, "7022": 226, "7024": 226, "7026": 226, "7028": 226, "7030": 226, "7032": 226, "7034": 226, "7036": 226, "7038": 226, "7040": 226, "7042": 226, "7044": 226, "7046": 226, "7048": 226, "7050": 226, "7052": 226, "7054": 226, "7056": 226, "7058": 226, "7060": 226, "7062": 226, "7064": 226, "7066": 226, "7068": 226, "7070": 226, "7072": 226, "7074": 226, "7076": 226, "7078": 226, "7080": 226, "7082": 226, "7084": 226, "7086": 226, "7088": 226, "7090": 226, "7092": 226, "7094": 226, "7096": 226, "7098": 226, "7100": 226, "7102": 226, "7104": 226, "7106": 226, "7108": 226, "7110": 226, "7112": 226, "7114": 226, "7116": 226, "7118": 226, "7120": 226, "7122": 226, "7124": 226, "7126": 226, "7128": 226, "7130": 226, "7132": 226, "7134": 226, "7136": 226, "7138": 226, "7140": 226, "7142": 226, "7144": 226, "7146": 226, "7148": 226, "7150": 226, "7152": 226, "7154": 226, "7156": 226, "7158": 226, "7160": 226, "7162": 226, "7164": 226, "7166": 226, "7168": 226, "7170": 226, "7172": 226, "7174": 226, "7176": 226, "7178": 226, "7180": 226, "7182": 226, "7184": 226, "7186": 226, "7188": 226, "7190": 226, "7192": 226, "7194": 226, "7196": 226, "7198": 226, "7200": 226, "7202": 226, "7204": 226, "7206": 226, "7208": 226, "7210": 226, "7212": 226, "7214": 226, "7216": 226, "7218": 226, "7220": 226, "7222": 226, "7224": 226, "7226": 226, "7228": 226, "7230": 226, "7232": 226, "7234": 226, "7236": 226, "7238": 226, "7240": 226, "7242": 226, "7244": 226, "7246": 226, "7248": 226, "7250": 226, "7252": 226, "7254": 226, "7256": 226, "7258": 226, "7260": 226, "7262": 226, "7264": 226, "7266": 226, "7268": 226, "7270": 226, "7272": 226, "7274": 226, "7276": 226, "7278": 226, "7280": 226, "7282": 226, "7284": 226, "7286": 226, "7288": 226, "7290": 226, "7292": 226, "7294": 226, "7296": 226, "7298": 226, "7300": 226, "7302": 226, "7304": 226, "7306": 226, "7308": 226, "7310": 226, "7312": 226, "7314": 226, "7316": 226, "7318": 226, "7320": 226, "7322": 226, "7324": 226, "7326": 226, "7328": 226, "7330": 226, "7332": 226, "7334": 226, "7336": 226, "7338": 226, "7340": 226, "7342": 226, "7344": 226, "7346": 226, "7348": 226, "7350": 226, "7352": 226, "7354": 226, "7356": 226, "7358": 226, "7360": 226, "7362": 226, "7364": 226, "7366": 226, "7368": 226, "7370": 226, "7372": 226, "7374": 226, "7376": 226, "7378": 226, "7380": 226, "7382": 226, "7384": 226, "7386": 226, "7388": 226, "7392": 226, "7394": 226, "7396": 226, "7398": 226, "7400": 226, "7402": 226, "7404": 226, "7406": 226, "7408": 226, "7410": 226, "7412": 226, "7414": 226, "7416": 226, "7418": 226, "7420": 226, "7422": 226, "7424": 226, "7426": 226, "7428": 226, "7430": 226, "7432": 226, "7434": 226, "7436": 226, "7438": 226, "7440": 226, "7442": 226, "7444": 226, "7446": 226, "7448": 226, "7450": 226, "7452": 226, "7454": 226, "7456": 226, "7458": 226, "7460": 226, "7462": 226, "7464": 226, "7466": 226, "7468": 226, "7470": 226, "7472": 226, "7474": 226, "7476": 226, "7478": 226, "7480": 226, "7482": 226, "7484": 226, "7486": 226, "7488": 226, "7490": 226, "7492": 226, "7494": 226, "7496": 226, "7498": 226, "7500": 226, "7502": 226, "7504": 226, "7506": 226, "7508": 226, "7510": 226, "7512": 226, "7514": 226, "7516": 226, "7518": 226, "7520": 226, "7522": 226, "7524": 226, "7526": 226, "7528": 226, "7530": 226, "7532": 226, "7534": 226, "7536": 226, "7538": 226, "7540": 226, "7542": 226, "7544": 226, "7546": 226, "7548": 226, "7550": 226, "7552": 226, "7554": 226, "7556": 226, "7558": 226, "7560": 226, "7562": 226, "7564": 226, "7566": 226, "7568": 226, "7570": 226, "7572": 226, "7574": 226, "7576": 226, "7578": 226, "7580": 226, "7582": 226, "7584": 226, "7586": 226, "7588": 226, "7590": 226, "7592": 226, "7594": 226, "7596": 226, "7598": 226, "7600": 226, "7602": 226, "7604": 226, "7606": 226, "7608": 226, "7610": 226, "7612": 226, "7614": 226, "7616": 226, "7618": 226, "7620": 226, "7622": 226, "7624": 226, "7626": 226, "7628": 226, "7630": 226, "7632": 226, "7634": 226, "7636": 226, "7638": 226, "7640": 226, "7642": 226, "7644": 226, "7646": 226, "7648": 226, "7650": 226, "7652": 226, "7654": 226, "7656": 226, "7658": 226, "7660": 226, "7662": 226, "7664": 226, "7666": 226, "7668": 226, "7670": 226, "7672": 226, "7674": 226, "7676": 226, "7678": 226, "7680": 226, "7682": 226, "7684": 226, "7686": 226, "7688": 226, "7690": 226, "7692": 226, "7694": 226, "7696": 226, "7698": 226, "7700": 226, "7702": 226, "7704": 226, "7706": 226, "7708": 226, "7710": 226, "7712": 226, "7714": 226, "7716": 226, "7718": 226, "7720": 226, "7722": 226, "7724": 226, "7726": 226, "7728": 226, "7730": 226, "7732": 226, "7734": 226, "7736": 226, "7738": 226, "7740": 226, "7742": 226, "7744": 226, "7746": 226, "7748": 226, "7750": 226, "7752": 226, "7754": 226, "7756": 226, "7758": 226, "7760": 226, "7762": 226, "7764": 226, "7766": 226, "7768": 226, "7770": 226, "7772": 226, "7774": 226, "7776": 226, "7778": 226, "7780": 226, "7782": 226, "7784": 226, "7786": 226, "7788": 226, "7790": 226, "7792": 226, "7794": 226, "7796": 226, "7798": 226, "7800": 226, "7802": 226, "7804": 226, "7806": 226, "7808": 226, "7810": 226, "7812": 226, "7814": 226, "7816": 226, "7818": 226, "7820": 226, "7822": 226, "7824": 226, "7826": 226, "7828": 226, "7830": 226, "7832": 226, "7834": 226, "7836": 226, "7838": 226, "7842": 226, "7844": 226, "7846": 226, "7848": 226, "7850": 226, "7852": 226, "7854": 226, "7856": 226, "7858": 226, "7860": 226, "7862": 226, "7864": 226, "7866": 226, "7868": 226, "7870": 226, "7872": 226, "7874": 226, "7878": 226, "7880": 226, "7882": 226, "7884": 226, "7886": 226, "7888": 226, "7890": 226, "7892": 226, "7894": 226, "7896": 226, "7898": 226, "7900": 226, "7902": 226, "7904": 226, "7906": 226, "7908": 226, "7910": 226, "7912": 226, "7914": 226, "7916": 226, "7918": 226, "7920": 226, "7922": 226, "7924": 226, "7926": 226, "7928": 226, "7930": 226, "7932": 226, "7934": 226, "7936": 226, "7938": 226, "7940": 226, "7942": 226, "7944": 226, "7946": 226, "7948": 226, "7950": 226, "7952": 226, "7954": 226, "7956": 226, "7958": 226, "7960": 226, "7962": 226, "7964": 226, "7966": 226, "7968": 226, "7970": 226, "7972": 226, "7974": 226, "7976": 226, "7978": 226, "7980": 226, "7982": 226, "7984": 226, "7986": 226, "7988": 226, "7990": 226, "7992": 226, "7994": 226, "7996": 226, "7998": 226, "8002": 226, "8004": 226, "8006": 226, "8008": 226, "8012": 226, "8014": 226, "8016": 226, "8018": 226, "8022": 226, "8024": 226, "8026": 226, "8028": 226, "8030": 226, "8032": 226, "8034": 226, "8036": 226, "8038": 226, "8040": 226, "8042": 226, "8044": 226, "8046": 226, "8048": 226, "8050": 226, "8052": 226, "8054": 226, "8056": 226, "8058": 226, "8060": 226, "8062": 226, "8064": 226, "8066": 226, "8068": 226, "8070": 226, "8072": 226, "8074": 226, "8076": 226, "8078": 226, "8080": 226, "8082": 226, "8084": 226, "8086": 226, "8088": 226, "8090": 226, "8092": 226, "8094": 226, "8096": 226, "8098": 226, "8100": 226, "8102": [226, 977, 978], "8104": 226, "8106": 226, "8108": 226, "8110": 226, "8112": 226, "8114": 226, "8116": 226, "8118": 226, "8120": 226, "8122": 226, "8124": 226, "8126": 226, "8128": 226, "8130": 226, "8132": 226, "8134": 226, "8136": 226, "8138": 226, "8140": 226, "8142": 226, "8144": 226, "8146": 226, "8148": 226, "8150": 226, "8152": 226, "8154": 226, "8156": 226, "8158": 226, "8160": 226, "8162": 226, "8164": 226, "8166": 226, "8168": 226, "8170": 226, "8172": 226, "8174": 226, "8176": 226, "8178": 226, "8180": 226, "8182": 226, "8184": 226, "8186": 226, "8188": 226, "8190": 226, "8194": 226, "8196": 226, "8198": 226, "8200": 226, "8202": 226, "8204": 226, "8206": 226, "8208": 226, "8210": 226, "8212": 226, "8214": 226, "8216": 226, "8218": 226, "8220": 226, "8222": 226, "8224": 226, "8226": 226, "8228": 226, "8230": 226, "8232": 226, "8234": 226, "8238": 226, "8240": 226, "8242": 226, "8244": 226, "8246": 226, "8248": 226, "8250": 226, "8252": 226, "8254": 226, "8256": 226, "8258": 226, "8260": [226, 802], "8262": 226, "8264": 226, "8266": 226, "8268": 226, "8270": 226, "8272": 226, "8274": 226, "8276": 226, "8278": 226, "8280": 226, "8282": 226, "8284": 226, "8286": 226, "8288": 226, "8290": 226, "8292": 226, "8294": 226, "8296": 226, "8298": 226, "8300": 226, "8302": 226, "8304": 226, "8306": 226, "8308": 226, "8310": 226, "8312": 226, "8314": 226, "8316": 226, "8318": 226, "8320": 226, "8322": 226, "8324": 226, "8326": 226, "8328": 226, "8330": 226, "8332": 226, "8334": 226, "8336": 226, "8338": 226, "8340": 226, "8342": 226, "8344": 226, "8346": 226, "8348": 226, "8350": 226, "8352": 226, "8354": 226, "8356": 226, "8358": 226, "8360": 226, "8362": 226, "8364": 226, "8366": 226, "8368": 226, "8370": 226, "8372": 226, "8374": 226, "8376": 226, "8378": 226, "8380": 226, "8382": 226, "8384": 226, "8386": 226, "8388": 226, "8390": 226, "8392": 226, "8394": 226, "8396": 226, "8398": 226, "8400": 226, "8402": 226, "8404": 226, "8406": 226, "8408": 226, "8410": 226, "8412": 226, "8414": 226, "8416": 226, "8418": 226, "8420": 226, "8422": 226, "8424": 226, "8426": 226, "8428": 226, "8430": 226, "8432": 226, "8434": 226, "8436": 226, "8438": 226, "8440": 226, "8442": 226, "8444": 226, "8446": 226, "8448": 226, "8450": 226, "8452": 226, "8454": 226, "8456": 226, "8458": 226, "8460": 226, "8464": 226, "8466": 226, "8468": 226, "8470": 226, "8472": 226, "8474": 226, "8476": 226, "8478": 226, "8480": 226, "8482": 226, "8484": 226, "8486": 226, "8488": 226, "8490": 226, "8492": 226, "8494": 226, "8496": 226, "8498": 226, "8500": 226, "8502": 226, "8504": 226, "8506": 226, "8508": 226, "8510": 226, "8512": 226, "8514": 226, "8516": 226, "8518": 226, "8520": 226, "8522": 226, "8524": 226, "8526": 226, "8528": 226, "8530": 226, "8532": 226, "8534": 226, "8536": 226, "8538": 226, "8540": 226, "8542": 226, "8544": 226, "8546": 226, "8548": 226, "8550": 226, "8552": 226, "8554": 226, "8556": 226, "8558": 226, "8560": 226, "8562": 226, "8564": 226, "8566": 226, "8568": 226, "8570": 226, "8572": 226, "8574": 226, "8576": 226, "8578": 226, "8580": 226, "8582": 226, "8584": 226, "8586": 226, "8588": 226, "8590": 226, "8592": 226, "8594": 226, "8596": 226, "8598": 226, "8600": 226, "8602": 226, "8604": 226, "8606": 226, "8608": 226, "8610": 226, "8612": 226, "8614": 226, "8616": 226, "8618": 226, "8620": 226, "8622": 226, "8624": 226, "8626": 226, "8628": 226, "8630": 226, "8632": 226, "8634": 226, "8636": 226, "8638": 226, "8640": 226, "8642": 226, "8644": 226, "8646": 226, "8648": 226, "8650": 226, "8652": 226, "8654": 226, "8656": 226, "8658": 226, "8660": 226, "8662": 226, "8664": 226, "8666": 226, "8668": 226, "8670": 226, "8672": 226, "8674": 226, "8676": 226, "8678": 226, "8680": 226, "8682": 226, "8684": 226, "8686": 226, "8688": 226, "8690": 226, "8692": 226, "8694": 226, "8696": 226, "8698": 226, "8700": 226, "8702": 226, "8704": 226, "8706": 226, "8708": 226, "8710": 226, "8712": 226, "8714": 226, "8716": 226, "8718": 226, "8720": 226, "8722": 226, "8724": 226, "8726": 226, "8728": 226, "8730": 226, "8732": 226, "8734": 226, "8736": 226, "8738": 226, "8740": 226, "8742": 226, "8744": 226, "8746": 226, "8748": 226, "8750": 226, "8752": 226, "8754": 226, "8756": 226, "8758": 226, "8760": 226, "8762": 226, "8764": 226, "8766": 226, "8768": 226, "8770": 226, "8772": 226, "8774": 226, "8776": 226, "8778": 226, "8780": 226, "8782": 226, "8784": 226, "8786": 226, "8788": 226, "8790": 226, "8792": 226, "8794": 226, "8796": 226, "8798": 226, "8800": 226, "8802": 226, "8804": 226, "8806": 226, "8808": 226, "8810": 226, "8812": 226, "8814": 226, "8816": 226, "8818": 226, "8820": 226, "8822": 226, "8824": 226, "8826": 226, "8828": 226, "8830": 226, "8832": 226, "8834": 226, "8836": 226, "8838": 226, "8840": 226, "8842": 226, "8844": 226, "8846": 226, "8848": 226, "8850": 226, "8852": 226, "8854": 226, "8856": 226, "8858": 226, "8860": 226, "8862": 226, "8864": 226, "8866": 226, "8868": 226, "8870": 226, "8872": 226, "8874": 226, "8876": 226, "8878": 226, "8880": 226, "8882": 226, "8884": 226, "8886": 226, "8888": 226, "8890": 226, "8892": 226, "8894": 226, "8896": 226, "8898": 226, "8900": 226, "8902": 226, "8904": 226, "8906": 226, "8908": 226, "8910": 226, "8912": 226, "8914": 226, "8916": 226, "8918": 226, "8920": 226, "8922": 226, "8924": 226, "8926": 226, "8928": 226, "8930": 226, "8932": 226, "8934": 226, "8936": 226, "8938": 226, "8940": 226, "8942": 226, "8944": 226, "8946": 226, "8948": 226, "8950": 226, "8952": 226, "8954": 226, "8956": 226, "8958": 226, "8960": 226, "8962": 226, "8964": 226, "8966": 226, "8968": 226, "8970": 226, "8972": 226, "8974": 226, "8976": 226, "8978": 226, "8980": 226, "8982": 226, "8984": 226, "8986": 226, "8988": 226, "8990": 226, "8992": 226, "8994": 226, "8996": 226, "8998": 226, "9002": 226, "9004": 226, "9006": 226, "9008": 226, "9010": 226, "9012": 226, "9014": 226, "9016": 226, "9018": 226, "9020": 226, "9022": 226, "9024": 226, "9026": 226, "9028": 226, "9030": 226, "9032": 226, "9034": 226, "9036": 226, "9038": 226, "9040": 226, "9042": 226, "9044": 226, "9046": 226, "9048": 226, "9050": 226, "9052": 226, "9054": 226, "9056": 226, "9058": 226, "9060": 226, "9062": 226, "9064": 226, "9066": 226, "9068": 226, "9070": 226, "9072": 226, "9074": 226, "9076": 226, "9078": 226, "9080": 226, "9082": 226, "9084": 226, "9086": 226, "9088": 226, "9090": 226, "9092": 226, "9094": 226, "9096": 226, "9098": 226, "9100": 226, "9102": 226, "9104": 226, "9106": 226, "9108": 226, "9110": 226, "9112": 226, "9114": 226, "9116": 226, "9118": 226, "9120": 226, "9122": 226, "9124": 226, "9126": 226, "9128": 226, "9130": 226, "9132": 226, "9134": 226, "9136": 226, "9138": 226, "9140": 226, "9142": 226, "9144": 226, "9146": 226, "9148": 226, "9150": 226, "9152": 226, "9154": 226, "9156": 226, "9158": 226, "9160": 226, "9162": 226, "9164": 226, "9166": 226, "9168": 226, "9170": 226, "9172": 226, "9174": 226, "9176": 226, "9178": 226, "9180": 226, "9182": 226, "9184": 226, "9186": 226, "9188": 226, "9190": 226, "9192": 226, "9194": 226, "9196": 226, "9198": 226, "9200": 226, "9202": 226, "9204": 226, "9206": 226, "9208": 226, "9210": 226, "9212": 226, "9214": 226, "9216": 226, "9218": 226, "9220": 226, "9222": 226, "9224": 226, "9226": 226, "9228": 226, "9230": 226, "9232": 226, "9234": 226, "9236": 226, "9238": 226, "9240": 226, "9242": 226, "9244": 226, "9246": 226, "9248": 226, "9250": 226, "9252": 226, "9254": 226, "9256": 226, "9258": 226, "9260": 226, "9262": 226, "9264": 226, "9266": 226, "9268": 226, "9270": 226, "9272": 226, "9274": 226, "9276": 226, "9278": 226, "9280": 226, "9282": 226, "9284": 226, "9286": 226, "9288": 226, "9290": 226, "9292": 226, "9294": 226, "9296": 226, "9298": 226, "9300": 226, "9302": 226, "9304": 226, "9306": 226, "9308": 226, "9310": 226, "9312": 226, "9314": 226, "9316": 226, "9318": 226, "9320": 226, "9322": 226, "9324": 226, "9326": 226, "9328": 226, "9330": 226, "9332": 226, "9334": 226, "9336": 226, "9338": 226, "9340": 226, "9342": 226, "9344": 226, "9346": 226, "9348": 226, "9350": 226, "9352": 226, "9354": 226, "9356": 226, "9358": 226, "9360": 226, "9362": 226, "9364": 226, "9366": 226, "9368": 226, "9370": 226, "9372": 226, "9374": 226, "9376": 226, "9378": 226, "9380": 226, "9382": 226, "9384": 226, "9386": 226, "9388": 226, "9390": 226, "9392": 226, "9394": [226, 862], "9396": 226, "9398": 226, "9400": 226, "9402": 226, "9404": 226, "9406": 226, "9408": 226, "9410": 226, "9412": 226, "9414": 226, "9416": 226, "9418": 226, "9420": 226, "9422": 226, "9424": 226, "9426": 226, "9428": 226, "9430": 226, "9432": 226, "9434": 226, "9436": 226, "9438": 226, "9440": 226, "9442": 226, "9444": 226, "9446": 226, "9448": 226, "9450": 226, "9452": 226, "9454": 226, "9456": 226, "9458": 226, "9460": 226, "9462": 226, "9464": 226, "9466": 226, "9468": 226, "9470": 226, "9472": 226, "9474": 226, "9476": 226, "9478": 226, "9480": 226, "9482": 226, "9484": 226, "9486": 226, "9488": 226, "9490": 226, "9492": 226, "9494": 226, "9496": 226, "9498": 226, "9500": 226, "9502": 226, "9504": 226, "9506": 226, "9508": 226, "9510": 226, "9512": 226, "9514": 226, "9516": 226, "9518": 226, "9520": 226, "9522": 226, "9524": 226, "9526": 226, "9528": 226, "9530": 226, "9532": 226, "9534": 226, "9536": 226, "9538": 226, "9540": 226, "9542": 226, "9544": 226, "9546": 226, "9548": 226, "9550": 226, "9552": 226, "9554": 226, "9556": 226, "9558": 226, "9560": 226, "9562": 226, "9564": 226, "9566": 226, "9568": 226, "9570": 226, "9572": 226, "9574": 226, "9576": 226, "9578": 226, "9580": 226, "9582": 226, "9584": 226, "9586": 226, "9588": 226, "9590": 226, "9592": 226, "9594": 226, "9596": 226, "9598": 226, "9600": 226, "9602": 226, "9604": 226, "9606": 226, "9608": 226, "9610": 226, "9612": 226, "9614": 226, "9616": 226, "9618": 226, "9620": 226, "9622": 226, "9624": 226, "9626": 226, "9628": 226, "9630": 226, "9632": 226, "9634": 226, "9636": 226, "9638": 226, "9640": 226, "9642": 226, "9644": 226, "9646": 226, "9648": 226, "9650": 226, "9652": 226, "9654": 226, "9656": 226, "9658": 226, "9660": 226, "9662": 226, "9664": 226, "9666": 226, "9668": 226, "9670": 226, "9672": 226, "9674": 226, "9676": 226, "9678": 226, "9680": 226, "9682": 226, "9684": 226, "9686": 226, "9688": 226, "9690": 226, "9692": 226, "9694": 226, "9696": 226, "9698": 226, "9700": 226, "9702": 226, "9704": 226, "9706": 226, "9708": 226, "9710": 226, "9712": 226, "9714": 226, "9716": 226, "9718": 226, "9720": 226, "9722": 226, "9724": 226, "9726": 226, "9728": 226, "9730": 226, "9732": 226, "9734": 226, "9736": 226, "9738": 226, "9740": 226, "9742": 226, "9744": 226, "9746": 226, "9748": 226, "9750": 226, "9752": 226, "9754": 226, "9756": 226, "9758": 226, "9760": 226, "9762": 226, "9764": 226, "9766": 226, "9768": [226, 236], "9770": 226, "9772": 226, "9774": 226, "9776": 226, "9778": 226, "9780": 226, "9782": 226, "9784": 226, "9786": 226, "9788": 226, "9790": 226, "9792": 226, "9794": 226, "9796": 226, "9798": 226, "9800": 226, "9802": 226, "9804": 226, "9806": 226, "9808": 226, "9810": 226, "9812": 226, "9814": 226, "9816": 226, "9818": 226, "9820": 226, "9822": 226, "9824": 226, "9826": 226, "9828": 226, "9830": 226, "9832": 226, "9834": 226, "9836": 226, "9838": 226, "9840": 226, "9842": 226, "9844": 226, "9846": 226, "9848": 226, "9850": 226, "9852": 226, "9854": 226, "9856": 226, "9858": 226, "9860": 226, "9862": 226, "9864": 226, "9866": 226, "9868": 226, "9870": 226, "9872": 226, "9874": 226, "9876": 226, "9878": 226, "9880": 226, "9882": 226, "9884": 226, "9886": 226, "9888": 226, "9890": 226, "9892": 226, "9894": 226, "9896": 226, "9898": 226, "9900": 226, "9902": 226, "9904": 226, "9906": 226, "9908": 226, "9910": 226, "9912": 226, "9914": 226, "9916": 226, "9918": 226, "9920": 226, "9922": 226, "9924": 226, "9926": 226, "9928": 226, "9930": 226, "9932": 226, "9934": 226, "9936": 226, "9938": 226, "9940": 226, "9942": 226, "9944": 226, "9946": 226, "9948": 226, "9950": 226, "9952": 226, "9954": 226, "9956": 226, "9958": 226, "9960": 226, "9962": 226, "9964": 226, "9966": 226, "9968": 226, "9970": 226, "9972": 226, "9974": 226, "9976": 226, "9978": 226, "9980": 226, "9982": 226, "9984": 226, "9986": 226, "9988": 226, "9990": 226, "9992": 226, "9994": 226, "9996": 226, "9998": 226, "10002": 226, "10004": 226, "10006": 226, "10008": 226, "10010": 226, "10012": 226, "10014": 226, "10016": 226, "10018": 226, "10020": 226, "10022": 226, "10024": 226, "10026": 226, "10028": 226, "10030": 226, "10032": 226, "10034": 226, "10036": 226, "10038": 226, "10040": 226, "10042": 226, "10044": 226, "10046": 226, "10048": 226, "10050": 226, "10052": 226, "10054": 226, "10056": 226, "10058": 226, "10060": 226, "10062": 226, "10064": 226, "10066": 226, "10068": 226, "10070": 226, "10072": 226, "10074": 226, "10076": 226, "10078": 226, "10080": 226, "10082": 226, "10084": 226, "10086": 226, "10088": 226, "10090": 226, "10092": 226, "10094": 226, "10096": 226, "10098": 226, "10100": 226, "10102": 226, "10104": 226, "10106": 226, "10108": 226, "10110": 226, "10112": 226, "10114": 226, "10116": 226, "10118": 226, "10120": 226, "10122": 226, "10124": 226, "10126": 226, "10128": 226, "10130": 226, "10132": 226, "10134": 226, "10136": 226, "10138": 226, "10140": 226, "10142": 226, "10144": 226, "10146": 226, "10148": 226, "10150": 226, "10152": 226, "10154": 226, "10156": 226, "10158": 226, "10160": 226, "10162": 226, "10164": 226, "10166": 226, "10168": 226, "10170": 226, "10172": 226, "10174": 226, "10176": 226, "10178": 226, "10180": 226, "10182": 226, "10184": 226, "10186": 226, "10188": 226, "10190": 226, "10192": 226, "10194": 226, "10196": 226, "10198": 226, "10200": 226, "10202": 226, "10204": 226, "10206": 226, "10208": 226, "10210": 226, "10212": 226, "10214": 226, "10216": 226, "10218": 226, "10220": 226, "10222": 226, "10224": 226, "10226": [226, 275], "10228": 226, "10230": 226, "10232": 226, "10234": 226, "10236": 226, "10238": 226, "10240": 226, "10242": 226, "10244": 226, "10246": 226, "10248": 226, "10250": 226, "10252": 226, "10254": 226, "10256": 226, "10258": 226, "10260": 226, "10262": 226, "10264": 226, "10266": 226, "10268": 226, "10270": 226, "10272": 226, "10274": 226, "10276": 226, "10278": 226, "10280": 226, "10282": 226, "10284": 226, "10286": 226, "10288": 226, "10290": 226, "10292": 226, "10294": 226, "10296": 226, "10298": 226, "10300": 226, "10302": 226, "10304": 226, "10306": 226, "10308": 226, "10310": 226, "10312": 226, "10314": 226, "10316": 226, "10318": 226, "10320": 226, "10322": 226, "10324": 226, "10326": 226, "10328": 226, "10330": 226, "10332": 226, "10334": 226, "10336": 226, "10338": 226, "10340": 226, "10342": 226, "10344": 226, "10346": 226, "10348": 226, "10350": 226, "10352": 226, "10354": 226, "10356": 226, "10358": 226, "10360": 226, "10362": 226, "10364": 226, "10366": 226, "10368": 226, "10370": 226, "10372": 226, "10374": 226, "10376": 226, "10378": 226, "10380": 226, "10382": 226, "10384": 226, "10386": 226, "10388": 226, "10390": 226, "10392": 226, "10394": 226, "10396": 226, "10398": 226, "10400": 226, "10402": 226, "10404": 226, "10406": 226, "10408": 226, "10410": 226, "10412": 226, "10414": 226, "10416": 226, "10418": 226, "10420": 226, "10422": 226, "10424": 226, "10426": 226, "10428": 226, "10430": 226, "10432": 226, "10434": 226, "10436": 226, "10438": 226, "10440": 226, "10442": 226, "10444": 226, "10446": 226, "10448": 226, "10450": 226, "10452": 226, "10454": 226, "10456": 226, "10458": 226, "10460": 226, "10462": 226, "10464": 226, "10466": 226, "10468": 226, "10470": 226, "10472": 226, "10474": 226, "10476": 226, "10478": 226, "10480": 226, "10482": 226, "10484": 226, "10486": 226, "10488": 226, "10490": 226, "10492": 226, "10494": 226, "10496": 226, "10498": 226, "10500": 226, "10502": 226, "10504": 226, "10506": 226, "10508": 226, "10510": 226, "10512": 226, "10514": 226, "10516": 226, "10518": 226, "10520": 226, "10522": 226, "10524": 226, "10526": 226, "10528": 226, "10530": 226, "10532": 226, "10534": 226, "10536": 226, "10538": 226, "10540": 226, "10542": 226, "10544": 226, "10546": 226, "10548": 226, "10550": 226, "10552": [226, 988], "10554": 226, "10556": 226, "10558": 226, "10560": 226, "10562": 226, "10564": 226, "10566": 226, "10568": 226, "10570": 226, "10572": 226, "10574": 226, "10576": 226, "10578": 226, "10580": 226, "10582": 226, "10584": 226, "10586": 226, "10588": 226, "10590": 226, "10592": 226, "10594": 226, "10596": 226, "10598": 226, "10600": 226, "10602": 226, "10604": 226, "10606": 226, "10608": 226, "10610": 226, "10612": 226, "10614": 226, "10616": 226, "10618": 226, "10620": 226, "10622": 226, "10624": 226, "10626": 226, "10628": 226, "10630": 226, "10632": 226, "10634": 226, "10636": 226, "10638": 226, "10640": 226, "10642": 226, "10644": 226, "10646": 226, "10648": 226, "10650": 226, "10652": 226, "10654": 226, "10656": 226, "10658": 226, "10660": 226, "10662": 226, "10664": 226, "10666": 226, "10668": 226, "10670": 226, "10672": 226, "10674": 226, "10676": 226, "10678": 226, "10680": 226, "10682": 226, "10684": 226, "10686": 226, "10688": 226, "10690": 226, "10692": 226, "10694": 226, "10696": 226, "10698": 226, "10700": 226, "10702": 226, "10704": 226, "10706": 226, "10708": 226, "10710": 226, "10712": 226, "10714": 226, "10716": 226, "10718": 226, "10720": 226, "10722": 226, "10724": 226, "10726": 226, "10728": 226, "10730": 226, "10732": 226, "10734": 226, "10736": 226, "10738": 226, "10740": 226, "10742": 226, "10744": 226, "10746": 226, "10748": 226, "10750": 226, "10752": 226, "10754": 226, "10756": 226, "10758": 226, "10760": 226, "10762": 226, "10764": 226, "10766": 226, "10768": 226, "10770": 226, "10772": 226, "10774": 226, "10776": 226, "10778": 226, "10780": 226, "10782": 226, "10784": 226, "10786": 226, "10788": 226, "10790": 226, "10792": 226, "10794": 226, "10796": 226, "10798": 226, "10800": 226, "10802": 226, "10804": 226, "10806": 226, "10808": 226, "10810": 226, "10812": 226, "10814": 226, "10816": 226, "10818": 226, "10820": 226, "10822": 226, "10824": 226, "10826": 226, "10828": 226, "10830": 226, "10832": 226, "10834": 226, "10836": 226, "10838": 226, "10840": 226, "10842": 226, "10844": 226, "10846": 226, "10848": 226, "10850": 226, "10852": 226, "10854": 226, "10856": 226, "10858": 226, "10860": 226, "10862": 226, "10864": 226, "10866": 226, "10868": 226, "10870": 226, "10872": 226, "10874": 226, "10876": 226, "10878": 226, "10880": 226, "10882": 226, "10884": 226, "10886": 226, "10888": 226, "10890": 226, "10892": 226, "10894": 226, "10896": 226, "10898": 226, "10900": 226, "10902": 226, "10904": 226, "10906": 226, "10908": 226, "10910": 226, "10912": 226, "10914": 226, "10916": 226, "10918": 226, "10920": 226, "10922": 226, "10924": 226, "10926": 226, "10928": 226, "10930": 226, "10932": 226, "10934": 226, "10936": 226, "10938": 226, "10940": 226, "10942": 226, "10944": 226, "10946": 226, "10948": 226, "10950": 226, "10952": 226, "10954": 226, "10956": 226, "10958": 226, "10960": 226, "10962": 226, "10964": 226, "10966": 226, "10968": 226, "10970": 226, "10972": 226, "10974": 226, "10976": 226, "10978": 226, "10980": 226, "10982": 226, "10984": 226, "10986": 226, "10988": 226, "10990": 226, "10992": 226, "10994": 226, "10996": 226, "10998": 226, "11000": 226, "11002": 226, "11004": 226, "11006": 226, "11008": 226, "11010": 226, "11012": 226, "11014": 226, "11016": 226, "11018": 226, "11020": 226, "11022": 226, "11024": 226, "11026": 226, "11028": 226, "11030": 226, "11032": 226, "11034": 226, "11036": 226, "11038": 226, "11040": 226, "11042": 226, "11044": 226, "11046": 226, "11048": 226, "11050": 226, "11052": 226, "11054": 226, "11056": 226, "11058": 226, "11060": 226, "11062": 226, "11064": 226, "11066": 226, "11068": 226, "11070": 226, "11072": 226, "11074": 226, "11076": 226, "11078": 226, "11080": 226, "11082": 226, "11084": 226, "11086": 226, "11088": 226, "11090": 226, "11092": 226, "11094": 226, "11096": 226, "11098": 226, "11100": 226, "11102": 226, "11104": 226, "11106": 226, "11108": 226, "11110": 226, "11112": 226, "11114": 226, "11116": 226, "11118": 226, "11120": 226, "11122": 226, "11124": 226, "11126": 226, "11128": 226, "11130": 226, "11132": 226, "11134": 226, "11136": 226, "11138": 226, "11140": 226, "11142": 226, "11144": 226, "11146": 226, "11148": 226, "11150": 226, "11152": 226, "11154": 226, "11156": 226, "11158": 226, "11160": 226, "11162": 226, "11164": 226, "11166": 226, "11168": 226, "11170": 226, "11172": 226, "11174": 226, "11176": 226, "11178": 226, "11180": 226, "11182": 226, "11184": 226, "11186": 226, "11188": 226, "11190": 226, "11192": 226, "11194": 226, "11196": 226, "11198": 226, "11200": 226, "11202": 226, "11204": 226, "11206": 226, "11208": 226, "11210": 226, "11212": 226, "11214": 226, "11216": 226, "11218": 226, "11220": 226, "11222": 226, "11224": 226, "11226": 226, "11228": 226, "11230": 226, "11232": 226, "11234": 226, "11236": 226, "11238": 226, "11240": 226, "11242": 226, "11244": 226, "11246": 226, "11248": 226, "11250": 226, "11252": 226, "11254": 226, "11256": 226, "11258": 226, "11260": 226, "11262": 226, "11264": 226, "11266": 226, "11268": 226, "11270": 226, "11272": 226, "11274": 226, "11276": 226, "11278": 226, "11280": 226, "11282": 226, "11284": 226, "11286": 226, "11288": 226, "11290": 226, "11292": 226, "11294": 226, "11296": 226, "11298": 226, "11300": 226, "11302": 226, "11304": 226, "11306": 226, "11308": 226, "11310": 226, "11312": 226, "11314": 226, "11316": 226, "11318": 226, "11320": 226, "11322": 226, "11324": 226, "11326": 226, "11328": 226, "11330": 226, "11332": 226, "11334": 226, "11336": 226, "11340": 226, "11342": 226, "11344": 226, "11346": 226, "11348": [226, 275], "11350": 226, "11352": 226, "11354": 226, "11356": 226, "11358": 226, "11360": 226, "11362": 226, "11364": 226, "11366": 226, "11368": 226, "11370": 226, "11372": 226, "11374": 226, "11376": 226, "11378": 226, "11380": 226, "11382": 226, "11384": 226, "11386": 226, "11388": 226, "11390": 226, "11392": 226, "11394": 226, "11396": 226, "11398": 226, "11400": 226, "11402": 226, "11404": 226, "11406": 226, "11408": 226, "11410": 226, "11412": 226, "11414": 226, "11416": 226, "11418": 226, "11420": 226, "11422": 226, "11424": 226, "11426": 226, "11428": 226, "11430": 226, "11432": 226, "11434": 226, "11436": 226, "11438": 226, "11440": 226, "11442": 226, "11444": 226, "11446": 226, "11448": 226, "11450": 226, "11452": 226, "11454": 226, "11456": 226, "11458": 226, "11460": 226, "11462": 226, "11464": 226, "11466": 226, "11468": 226, "11470": 226, "11472": 226, "11474": 226, "11476": 226, "11478": 226, "11480": 226, "11482": 226, "11484": 226, "11486": 226, "11488": 226, "11490": 226, "11492": 226, "11494": 226, "11496": 226, "11498": 226, "11500": 226, "11502": 226, "11504": 226, "11506": 226, "11508": 226, "11510": 226, "11512": 226, "11514": 226, "11516": 226, "11518": 226, "11520": 226, "11522": 226, "11524": 226, "11526": 226, "11528": 226, "11530": 226, "11532": 226, "11534": 226, "11536": 226, "11538": 226, "11540": 226, "11542": 226, "11544": 226, "11546": 226, "11548": 226, "11550": 226, "11552": 226, "11554": 226, "11556": 226, "11558": 226, "11560": 226, "11562": 226, "11564": 226, "11566": 226, "11568": 226, "11570": 226, "11572": 226, "11574": 226, "11576": 226, "11578": 226, "11580": 226, "11582": 226, "11584": 226, "11586": 226, "11588": 226, "11590": 226, "11592": 226, "11594": 226, "11596": 226, "11598": 226, "11600": 226, "11602": 226, "11604": 226, "11606": 226, "11608": 226, "11610": 226, "11612": 226, "11614": 226, "11616": 226, "11618": 226, "11620": 226, "11622": 226, "11624": 226, "11626": 226, "11628": 226, "11630": 226, "11634": 226, "11636": 226, "11638": 226, "11640": 226, "11642": 226, "11644": 226, "11646": 226, "11648": 226, "11650": 226, "11652": 226, "11654": 226, "11656": 226, "11658": 226, "11660": 226, "11662": 226, "11664": 226, "11666": 226, "11668": 226, "11670": 226, "11672": 226, "11674": 226, "11676": 226, "11678": 226, "11680": 226, "11682": 226, "11684": 226, "11686": 226, "11688": 226, "11690": 226, "11692": 226, "11694": 226, "11696": 226, "11698": 226, "11700": 226, "11702": 226, "11704": 226, "11706": 226, "11708": 226, "11710": 226, "11712": 226, "11714": 226, "11716": 226, "11718": 226, "11720": 226, "11722": 226, "11724": 226, "11726": 226, "11728": 226, "11730": 226, "11732": 226, "11734": 226, "11736": 226, "11738": 226, "11740": 226, "11742": 226, "11744": 226, "11746": 226, "11748": 226, "11750": 226, "11752": 226, "11754": 226, "11756": 226, "11758": 226, "11760": 226, "11762": 226, "11764": 226, "11766": 226, "11768": 226, "11770": 226, "11772": 226, "11774": 226, "11776": 226, "11778": 226, "11780": 226, "11782": 226, "11784": 226, "11786": 226, "11788": 226, "11790": 226, "11792": 226, "11794": 226, "11796": 226, "11798": 226, "11800": 226, "11802": 226, "11804": 226, "11806": 226, "11808": 226, "11810": 226, "11812": 226, "11814": 226, "11816": 226, "11818": 226, "11820": 226, "11822": 226, "11824": 226, "11826": 226, "11828": 226, "11830": 226, "11832": 226, "11834": 226, "11836": 226, "11838": 226, "11840": 226, "11842": 226, "11844": 226, "11846": 226, "11848": 226, "11850": 226, "11852": 226, "11854": 226, "11856": 226, "11858": 226, "11860": 226, "11862": 226, "11864": 226, "11866": 226, "11868": 226, "11870": 226, "11872": 226, "11874": 226, "11876": 226, "11878": 226, "11880": 226, "11882": 226, "11884": 226, "11886": 226, "11888": 226, "11890": 226, "11892": 226, "11894": 226, "11896": 226, "11898": 226, "11900": 226, "11902": 226, "11904": 226, "11906": 226, "11908": 226, "11910": 226, "11912": 226, "11914": 226, "11916": 226, "11918": 226, "11920": 226, "11922": 226, "11924": 226, "11926": 226, "11928": 226, "11930": 226, "11932": 226, "11934": 226, "11936": 226, "11938": 226, "11940": 226, "11942": 226, "11944": 226, "11946": 226, "11948": 226, "11950": 226, "11952": 226, "11954": 226, "11956": 226, "11958": 226, "11960": 226, "11962": 226, "11964": 226, "11966": 226, "11968": 226, "11970": 226, "11972": 226, "11974": 226, "11976": 226, "11978": 226, "11980": 226, "11982": 226, "11984": 226, "11986": 226, "11988": 226, "11990": 226, "11992": 226, "11994": 226, "11996": 226, "11998": 226, "12000": 226, "12002": 226, "12004": 226, "12006": 226, "12008": 226, "12010": 226, "12012": 226, "12014": 226, "12016": 226, "12018": 226, "12020": 226, "12022": 226, "12024": 226, "12026": 226, "12028": 226, "12030": 226, "12032": 226, "12034": 226, "12036": 226, "12038": 226, "12040": 226, "12042": 226, "12044": 226, "12046": 226, "12048": 226, "12050": 226, "12052": 226, "12054": 226, "12056": 226, "12058": 226, "12060": 226, "12062": 226, "12064": 226, "12066": 226, "12068": 226, "12070": 226, "12072": 226, "12074": 226, "12076": 226, "12078": 226, "12080": 226, "12082": 226, "12084": 226, "12086": 226, "12088": 226, "12090": 226, "12092": 226, "12094": 226, "12096": 226, "12098": 226, "12100": 226, "12102": 226, "12104": 226, "12106": 226, "12108": 226, "12110": 226, "12112": 226, "12114": 226, "12116": 226, "12118": 226, "12120": 226, "12122": 226, "12124": 226, "12126": 226, "12128": 226, "12130": 226, "12132": 226, "12134": 226, "12136": 226, "12138": 226, "12140": 226, "12142": 226, "12144": 226, "12146": 226, "12148": 226, "12150": 226, "12152": 226, "12154": 226, "12158": 226, "12160": 226, "12162": 226, "12164": 226, "12166": 226, "12168": 226, "12170": 226, "12172": 226, "12174": 226, "12176": 226, "12178": 226, "12180": 226, "12182": 226, "12184": 226, "12186": 226, "12188": 226, "12190": 226, "12192": 226, "12194": 226, "12196": 226, "12198": 226, "12200": 226, "12202": 226, "12204": 226, "12206": 226, "12208": 226, "12210": 226, "12212": 226, "12214": 226, "12216": 226, "12218": 226, "12220": 226, "12222": 226, "12224": 226, "12226": 226, "12228": 226, "12230": 226, "12232": 226, "12234": 226, "12236": 226, "12238": 226, "12240": 226, "12242": 226, "12244": 226, "12246": 226, "12248": 226, "12250": 226, "12252": 226, "12254": 226, "12256": 226, "12258": 226, "12260": 226, "12262": 226, "12264": 226, "12266": 226, "12268": 226, "12270": 226, "12272": 226, "12274": 226, "12276": 226, "12278": 226, "12280": 226, "12282": 226, "12284": 226, "12286": 226, "12288": 226, "12290": 226, "12292": 226, "12294": 226, "12296": 226, "12298": 226, "12300": 226, "12302": 226, "12304": 226, "12306": 226, "12308": 226, "12310": 226, "12312": 226, "12314": 226, "12316": 226, "12318": 226, "12320": 226, "12322": 226, "12324": 226, "12326": 226, "12328": 226, "12330": 226, "12332": 226, "12334": 226, "12336": 226, "12338": 226, "12340": 226, "12342": 226, "12344": 226, "12346": 226, "12348": 226, "12350": 226, "12352": 226, "12354": 226, "12356": 226, "12358": 226, "12360": 226, "12362": 226, "12364": 226, "12366": 226, "12368": 226, "12370": 226, "12372": 226, "12374": 226, "12376": 226, "12378": 226, "12380": 226, "12382": 226, "12384": 226, "12386": 226, "12388": 226, "12390": 226, "12392": 226, "12394": 226, "12396": 226, "12398": 226, "12400": 226, "12402": 226, "12404": 226, "12406": 226, "12408": 226, "12410": 226, "12412": 226, "12414": 226, "12416": 226, "12418": 226, "12420": 226, "12422": 226, "12424": 226, "12426": 226, "12428": 226, "12430": 226, "12432": 226, "12434": 226, "12436": 226, "12438": 226, "12440": 226, "12442": 226, "12444": 226, "12446": 226, "12448": 226, "12450": 226, "12452": 226, "12454": 226, "12456": 226, "12458": 226, "12460": 226, "12462": 226, "12464": 226, "12466": 226, "12468": 226, "12470": 226, "12472": 226, "12474": 226, "12476": 226, "12478": 226, "12480": 226, "12482": 226, "12484": 226, "12486": 226, "12488": 226, "12490": 226, "12492": 226, "12494": 226, "12496": 226, "12498": 226, "12500": 226, "12502": 226, "12504": 226, "12506": 226, "12508": 226, "12510": 226, "12512": 226, "12514": 226, "12516": 226, "12518": 226, "12520": 226, "12522": 226, "12524": 226, "12526": 226, "12528": 226, "12530": 226, "12532": 226, "12534": 226, "12536": 226, "12538": 226, "12540": 226, "12542": 226, "12544": 226, "12546": 226, "12548": 226, "12550": 226, "12552": 226, "12554": 226, "12556": 226, "12558": 226, "12560": 226, "12562": 226, "12564": 226, "12566": 226, "12568": 226, "12570": 226, "12572": 226, "12574": 226, "12576": 226, "12578": 226, "12580": 226, "12582": 226, "12584": 226, "12586": 226, "12588": 226, "12590": 226, "12592": 226, "12594": 226, "12596": 226, "12598": 226, "12600": 226, "12602": 226, "12604": 226, "12606": 226, "12608": 226, "12610": 226, "12612": 226, "12614": 226, "12616": 226, "12618": 226, "12620": 226, "12622": 226, "12624": 226, "12626": 226, "12628": 226, "12630": 226, "12632": 226, "12634": 226, "12636": 226, "12638": 226, "12640": 226, "12642": 226, "12644": 226, "12646": 226, "12648": 226, "12650": 226, "12652": 226, "12654": 226, "12656": 226, "12658": 226, "12660": 226, "12662": 226, "12664": 226, "12666": 226, "12668": 226, "12670": 226, "12672": 226, "12674": 226, "12676": 226, "12678": 226, "12680": 226, "12682": 226, "12684": 226, "12686": 226, "12688": 226, "12690": 226, "12692": 226, "12694": 226, "12696": 226, "12698": 226, "12700": 226, "12702": 226, "12704": 226, "12706": 226, "12708": 226, "12710": 226, "12712": 226, "12714": 226, "12716": 226, "12718": 226, "12720": 226, "12722": 226, "12724": 226, "12726": 226, "12728": 226, "12730": 226, "12732": 226, "12734": 226, "12736": 226, "12738": 226, "12740": 226, "12742": 226, "12744": 226, "12746": 226, "12748": 226, "12750": 226, "12752": 226, "12754": 226, "12756": 226, "12758": 226, "12760": 226, "12762": 226, "12764": 226, "12766": 226, "12768": 226, "12770": 226, "12772": 226, "12774": 226, "12776": 226, "12778": 226, "12780": 226, "12782": 226, "12784": 226, "12786": 226, "12788": 226, "12790": 226, "12792": 226, "12794": 226, "12796": 226, "12798": 226, "12800": 226, "12802": 226, "12804": 226, "12806": 226, "12808": 226, "12810": 226, "12812": 226, "12814": 226, "12816": 226, "12818": 226, "12820": 226, "12822": 226, "12824": 226, "12826": 226, "12828": 226, "12830": 226, "12832": 226, "12834": 226, "12836": 226, "12838": 226, "12840": 226, "12842": 226, "12844": 226, "12846": 226, "12848": 226, "12850": 226, "12852": 226, "12854": 226, "12856": 226, "12858": 226, "12860": 226, "12862": 226, "12864": 226, "12866": 226, "12868": 226, "12870": 226, "12872": 226, "12874": 226, "12876": 226, "12878": 226, "12880": 226, "12882": 226, "12884": 226, "12886": 226, "12888": 226, "12890": 226, "12892": 226, "12894": 226, "12896": 226, "12898": 226, "12900": 226, "12902": 226, "12904": 226, "12906": 226, "12908": 226, "12910": 226, "12912": 226, "12914": 226, "12916": 226, "12918": 226, "12920": 226, "12922": 226, "12924": 226, "12926": 226, "12928": 226, "12930": 226, "12932": 226, "12934": 226, "12936": 226, "12938": 226, "12940": 226, "12942": 226, "12944": 226, "12946": 226, "12948": 226, "12950": 226, "12952": 226, "12954": 226, "12956": 226, "12958": 226, "12960": 226, "12962": 226, "12964": 226, "12966": 226, "12968": 226, "12970": 226, "12972": 226, "12974": 226, "12976": 226, "12978": 226, "12980": 226, "12982": 226, "12984": 226, "12986": 226, "12988": 226, "12990": 226, "12992": 226, "12994": 226, "12996": 226, "12998": 226, "13000": 226, "13002": 226, "13004": 226, "13006": 226, "13008": 226, "13010": 226, "13012": 226, "13014": 226, "13016": 226, "13018": 226, "13020": 226, "13022": 226, "13024": 226, "13026": 226, "13028": 226, "13030": 226, "13032": 226, "13034": 226, "13036": 226, "13038": 226, "13040": 226, "13042": 226, "13044": 226, "13046": 226, "13048": 226, "13050": 226, "13052": 226, "13054": 226, "13056": 226, "13058": 226, "13060": 226, "13062": 226, "13064": 226, "13066": 226, "13068": 226, "13070": 226, "13072": 226, "13074": 226, "13076": 226, "13078": 226, "13080": 226, "13082": 226, "13084": 226, "13086": 226, "13088": 226, "13090": 226, "13092": 226, "13094": 226, "13096": 226, "13098": 226, "13100": 226, "13102": 226, "13104": 226, "13106": 226, "13108": 226, "13110": 226, "13112": 226, "13114": 226, "13116": 226, "13118": 226, "13120": 226, "13122": 226, "13124": 226, "13126": 226, "13128": 226, "13130": 226, "13132": 226, "13134": 226, "13136": 226, "13138": 226, "13140": 226, "13142": 226, "13144": 226, "13146": 226, "13148": 226, "13150": 226, "13152": 226, "13154": 226, "13156": 226, "13158": 226, "13160": 226, "13162": 226, "13164": 226, "13166": 226, "13168": 226, "13170": 226, "13172": 226, "13174": 226, "13176": 226, "13178": 226, "13180": 226, "13182": 226, "13184": 226, "13186": 226, "13188": 226, "13190": 226, "13192": 226, "13194": 226, "13196": 226, "13198": 226, "13200": 226, "13202": 226, "13204": 226, "13206": 226, "13208": 226, "13210": 226, "13212": 226, "13214": 226, "13216": 226, "13218": 226, "13220": 226, "13222": 226, "13224": 226, "13226": 226, "13228": 226, "13230": 226, "13232": 226, "13234": 226, "13236": 226, "13238": 226, "13240": 226, "13242": 226, "13244": 226, "13246": 226, "13248": 226, "13250": 226, "13252": 226, "13254": 226, "13256": 226, "13258": 226, "13260": 226, "13262": 226, "13264": 226, "13266": 226, "13268": 226, "13270": 226, "13272": 226, "13274": 226, "13276": 226, "13278": 226, "13280": 226, "13282": 226, "13284": 226, "13286": 226, "13288": 226, "13290": 226, "13292": 226, "13294": 226, "13296": 226, "13298": 226, "13300": 226, "13302": 226, "13304": 226, "13306": 226, "13308": 226, "13310": 226, "13312": 226, "13314": 226, "13316": 226, "13318": 226, "13320": 226, "13322": 226, "13324": 226, "13326": 226, "13328": 226, "13330": 226, "13332": 226, "13334": 226, "13336": 226, "13338": 226, "13340": 226, "13342": 226, "13344": 226, "13346": 226, "13348": 226, "13350": 226, "13352": 226, "13354": 226, "13356": 226, "13358": 226, "13360": 226, "13362": 226, "13364": 226, "13366": 226, "13368": 226, "13370": 226, "13372": 226, "13374": 226, "13376": 226, "13378": 226, "13380": 226, "13382": 226, "13384": 226, "13386": 226, "13388": 226, "13390": 226, "13392": 226, "13394": 226, "13396": 226, "13398": 226, "13400": 226, "13402": 226, "13404": 226, "13406": 226, "13408": 226, "13410": 226, "13412": 226, "13414": 226, "13416": 226, "13418": 226, "13420": 226, "13422": 226, "13424": 226, "13426": 226, "13428": 226, "13430": 226, "13432": 226, "13434": 226, "13436": 226, "13438": 226, "13440": 226, "13442": 226, "13444": 226, "13446": 226, "13448": 226, "13450": 226, "13452": 226, "13454": 226, "13456": 226, "13458": 226, "13460": 226, "13462": 226, "13464": 226, "13466": 226, "13468": 226, "13470": 226, "13472": 226, "13474": 226, "13476": 226, "13478": 226, "13480": 226, "13482": 226, "13484": 226, "13486": 226, "13488": 226, "13490": 226, "13492": 226, "13494": 226, "13496": 226, "13498": 226, "13502": 226, "13504": 226, "13506": 226, "13508": 226, "13510": 226, "13512": 226, "13514": 226, "13516": 226, "13518": 226, "13520": 226, "13522": 226, "13524": 226, "13526": 226, "13528": 226, "13530": 226, "13532": 226, "13534": 226, "13536": 226, "13538": 226, "13540": 226, "13542": 226, "13544": 226, "13546": 226, "13548": 226, "13550": 226, "13552": 226, "13554": 226, "13556": 226, "13558": 226, "13560": 226, "13562": 226, "13564": 226, "13566": 226, "13568": 226, "13570": 226, "13572": 226, "13574": 226, "13576": 226, "13578": 226, "13580": 226, "13582": 226, "13584": 226, "13586": 226, "13588": 226, "13590": 226, "13592": 226, "13594": 226, "13596": 226, "13598": 226, "13600": 226, "13602": 226, "13604": 226, "13606": 226, "13608": 226, "13610": 226, "13612": 226, "13614": 226, "13616": 226, "13618": 226, "13620": 226, "13622": 226, "13624": 226, "13626": 226, "13628": 226, "13630": 226, "13632": 226, "13634": 226, "13636": 226, "13638": 226, "13640": 226, "13642": 226, "13644": 226, "13646": 226, "13648": 226, "13650": 226, "13652": 226, "13654": 226, "13656": 226, "13658": 226, "13660": 226, "13662": 226, "13664": 226, "13666": 226, "13668": 226, "13670": 226, "13672": 226, "13674": 226, "13676": 226, "13678": 226, "13680": 226, "13682": 226, "13684": 226, "13686": 226, "13688": 226, "13690": 226, "13692": 226, "13694": 226, "13696": 226, "13698": 226, "13700": 226, "13702": 226, "13704": 226, "13706": 226, "13708": 226, "13710": 226, "13712": 226, "13714": 226, "13716": 226, "13718": 226, "13720": 226, "13722": 226, "13724": 226, "13726": 226, "13728": 226, "13730": 226, "13732": 226, "13734": 226, "13736": 226, "13738": 226, "13740": 226, "13742": 226, "13744": 226, "13746": 226, "13748": 226, "13750": 226, "13752": 226, "13754": 226, "13756": 226, "13758": 226, "13760": 226, "13762": 226, "13764": 226, "13766": 226, "13768": 226, "13770": 226, "13772": 226, "13774": 226, "13776": 226, "13778": 226, "13780": 226, "13782": 226, "13784": 226, "13786": 226, "13788": 226, "13790": 226, "13792": 226, "13794": 226, "13796": 226, "13798": 226, "13800": 226, "13802": 226, "13804": 226, "13806": 226, "13808": 226, "13810": 226, "13812": 226, "13814": 226, "13816": 226, "13818": 226, "13820": 226, "13822": 226, "13824": 226, "13826": 226, "13828": 226, "13830": 226, "13832": 226, "13834": 226, "13836": 226, "13838": 226, "13840": 226, "13842": 226, "13844": 226, "13846": 226, "13848": 226, "13850": 226, "13852": 226, "13854": 226, "13856": 226, "13858": 226, "13860": 226, "13862": 226, "13864": 226, "13866": 226, "13868": 226, "13870": 226, "13872": 226, "13874": 226, "13876": 226, "13878": 226, "13880": 226, "13882": 226, "13884": 226, "13886": 226, "13888": 226, "13890": 226, "13892": 226, "13894": 226, "13896": 226, "13898": 226, "13900": 226, "13902": 226, "13904": 226, "13906": 226, "13908": 226, "13910": 226, "13912": 226, "13914": 226, "13916": 226, "13918": 226, "13920": 226, "13922": 226, "13924": 226, "13926": 226, "13928": 226, "13930": 226, "13932": 226, "13934": 226, "13936": 226, "13938": 226, "13940": 226, "13942": 226, "13944": 226, "13946": 226, "13948": 226, "13950": 226, "13952": 226, "13954": 226, "13956": 226, "13958": 226, "13960": [226, 945], "13962": 226, "13964": 226, "13966": 226, "13968": 226, "13970": 226, "13972": 226, "13974": 226, "13976": 226, "13978": 226, "13980": 226, "13982": 226, "13984": 226, "13986": 226, "13988": 226, "13990": 226, "13992": 226, "13994": 226, "13996": 226, "13998": 226, "14000": 226, "14002": 226, "14004": 226, "14006": 226, "14008": 226, "14010": 226, "14012": 226, "14014": 226, "14016": 226, "14018": 226, "14020": 226, "14022": 226, "14024": 226, "14026": 226, "14028": 226, "14030": 226, "14032": 226, "14034": 226, "14036": 226, "14038": 226, "14040": 226, "14042": 226, "14044": 226, "14046": 226, "14048": 226, "14050": 226, "14052": 226, "14054": 226, "14056": 226, "14058": 226, "14060": 226, "14062": 226, "14064": 226, "14066": 226, "14068": 226, "14070": 226, "14072": 226, "14074": 226, "14076": 226, "14078": 226, "14080": 226, "14082": 226, "14084": 226, "14086": 226, "14088": 226, "14090": 226, "14092": 226, "14094": 226, "14096": 226, "14098": 226, "14100": 226, "14102": 226, "14104": 226, "14106": 226, "14108": 226, "14110": 226, "14112": 226, "14114": 226, "14116": 226, "14118": 226, "14120": 226, "14122": 226, "14124": 226, "14126": 226, "14128": 226, "14130": 226, "14132": 226, "14134": 226, "14136": 226, "14138": 226, "14140": 226, "14142": 226, "14144": 226, "14146": 226, "14148": 226, "14150": 226, "14152": 226, "14154": 226, "14156": 226, "14158": 226, "14160": 226, "14162": 226, "14164": 226, "14166": 226, "14168": 226, "14170": 226, "14172": 226, "14174": 226, "14176": 226, "14178": 226, "14180": 226, "14182": 226, "14184": 226, "14186": 226, "14188": 226, "14190": 226, "14192": 226, "14194": 226, "14196": 226, "14198": 226, "14200": 226, "14202": 226, "14204": 226, "14206": 226, "14208": 226, "14210": 226, "14212": 226, "14214": 226, "14216": 226, "14218": 226, "14220": 226, "14222": 226, "14224": 226, "14226": 226, "14228": 226, "14230": 226, "14232": 226, "14234": 226, "14236": 226, "14238": 226, "14240": 226, "14242": 226, "14244": 226, "14246": 226, "14248": 226, "14250": 226, "14252": 226, "14254": 226, "14256": 226, "14258": 226, "14260": 226, "14262": 226, "14264": 226, "14266": 226, "14268": 226, "14270": 226, "14272": 226, "14274": 226, "14276": 226, "14278": 226, "14280": 226, "14282": 226, "14284": 226, "14286": 226, "14288": 226, "14290": 226, "14292": 226, "14294": 226, "14296": 226, "14298": 226, "14300": 226, "14302": 226, "14304": 226, "14306": 226, "14308": 226, "14310": 226, "14312": 226, "14314": 226, "14316": 226, "14318": 226, "14320": 226, "14322": 226, "14324": 226, "14326": 226, "14328": 226, "14330": 226, "14332": 226, "14334": 226, "14336": 226, "14338": 226, "14340": 226, "14342": 226, "14344": 226, "14346": 226, "14348": 226, "14350": 226, "14352": 226, "14354": 226, "14356": 226, "14358": 226, "14360": 226, "14362": 226, "14364": 226, "14366": 226, "14368": 226, "14370": 226, "14372": 226, "14374": 226, "14376": 226, "14378": 226, "14380": 226, "14382": 226, "14384": 226, "14388": 226, "14390": 226, "14392": 226, "14394": 226, "14396": 226, "14398": 226, "14400": 226, "14402": 226, "14404": 226, "14406": 226, "14408": 226, "14410": 226, "14412": 226, "14414": 226, "14416": 226, "14418": 226, "14420": 226, "14422": 226, "14424": 226, "14426": 226, "14428": 226, "14430": 226, "14432": 226, "14434": 226, "14436": 226, "14438": 226, "14440": 226, "14442": 226, "14444": 226, "14446": 226, "14448": 226, "14450": 226, "14452": 226, "14454": 226, "14456": 226, "14458": 226, "14460": 226, "14462": 226, "14464": 226, "14466": 226, "14468": 226, "14470": 226, "14472": 226, "14474": 226, "14476": 226, "14478": 226, "14480": 226, "14482": 226, "14484": 226, "14486": 226, "14488": 226, "14490": 226, "14492": 226, "14494": 226, "14496": 226, "14498": 226, "14500": 226, "14502": 226, "14504": 226, "14506": 226, "14508": 226, "14510": 226, "14512": 226, "14514": 226, "14516": 226, "14518": 226, "14520": 226, "14522": 226, "14524": 226, "14526": 226, "14528": 226, "14530": 226, "14532": 226, "14534": 226, "14536": 226, "14538": 226, "14540": 226, "14542": 226, "14544": 226, "14546": 226, "14548": 226, "14550": 226, "14552": 226, "14554": 226, "14556": 226, "14558": 226, "14560": 226, "14562": 226, "14564": 226, "14566": 226, "14568": 226, "14570": 226, "14572": 226, "14574": 226, "14576": 226, "14578": 226, "14580": 226, "14582": 226, "14584": 226, "14586": 226, "14588": 226, "14590": 226, "14592": 226, "14594": 226, "14596": 226, "14598": 226, "14600": 226, "14602": 226, "14604": 226, "14606": 226, "14608": 226, "14610": 226, "14612": 226, "14614": 226, "14616": 226, "14618": 226, "14620": 226, "14622": 226, "14624": 226, "14626": 226, "14628": 226, "14630": 226, "14632": 226, "14634": 226, "14636": 226, "14638": 226, "14640": 226, "14642": 226, "14644": 226, "14646": 226, "14648": 226, "14650": 226, "14652": 226, "14654": 226, "14656": 226, "14658": 226, "14660": 226, "14662": 226, "14664": 226, "14666": 226, "14668": 226, "14670": 226, "14672": 226, "14674": 226, "14676": 226, "14678": 226, "14680": 226, "14682": 226, "14684": 226, "14686": 226, "14688": 226, "14690": 226, "14692": 226, "14694": 226, "14696": 226, "14698": 226, "14700": 226, "14702": 226, "14704": 226, "14706": 226, "14708": 226, "14710": 226, "14712": 226, "14714": 226, "14716": 226, "14718": 226, "14720": 226, "14722": 226, "14724": 226, "14726": 226, "14728": 226, "14730": 226, "14732": 226, "14734": 226, "14736": 226, "14738": 226, "14740": 226, "14742": 226, "14744": 226, "14746": 226, "14748": 226, "14750": 226, "14752": 226, "14754": 226, "14756": 226, "14758": 226, "14760": 226, "14762": 226, "14764": 226, "14766": 226, "14768": 226, "14770": 226, "14772": 226, "14774": 226, "14776": 226, "14778": 226, "14780": 226, "14782": 226, "14784": 226, "14786": 226, "14788": 226, "14790": 226, "14792": 226, "14794": 226, "14796": 226, "14798": 226, "14800": 226, "14802": 226, "14804": 226, "14806": 226, "14808": 226, "14810": 226, "14812": 226, "14814": 226, "14816": 226, "14818": 226, "14820": 226, "14822": 226, "14824": 226, "14826": 226, "14828": 226, "14830": 226, "14832": 226, "14834": 226, "14836": 226, "14838": 226, "14840": 226, "14842": 226, "14844": 226, "14846": 226, "14848": 226, "14850": 226, "14852": 226, "14854": 226, "14856": 226, "14858": 226, "14860": 226, "14862": 226, "14864": 226, "14866": 226, "14868": 226, "14870": 226, "14872": 226, "14874": 226, "14876": 226, "14878": 226, "14880": 226, "14882": [226, 561], "14884": 226, "14886": 226, "14888": 226, "14890": 226, "14892": 226, "14894": 226, "14896": 226, "14898": 226, "14900": 226, "14902": 226, "14904": 226, "14906": 226, "14908": 226, "14910": 226, "14912": 226, "14914": 226, "14916": 226, "14918": 226, "14920": 226, "14922": 226, "14924": 226, "14926": 226, "14928": 226, "14930": 226, "14932": 226, "14934": 226, "14936": 226, "14938": 226, "14940": 226, "14942": 226, "14944": 226, "14946": 226, "14948": 226, "14950": 226, "14952": 226, "14954": 226, "14956": 226, "14958": 226, "14960": 226, "14962": 226, "14964": 226, "14966": 226, "14968": 226, "14970": 226, "14972": 226, "14974": 226, "14976": 226, "14978": 226, "14980": 226, "14982": 226, "14984": 226, "14986": 226, "14988": 226, "14990": [226, 275], "14992": 226, "14994": 226, "14996": 226, "14998": 226, "15002": 226, "15004": 226, "15006": 226, "15008": 226, "15010": 226, "15012": 226, "15014": 226, "15016": 226, "15018": 226, "15020": 226, "15022": 226, "15024": 226, "15026": 226, "15028": 226, "15030": 226, "15032": 226, "15034": 226, "15036": 226, "15038": 226, "15040": 226, "15042": 226, "15044": 226, "15046": 226, "15048": 226, "15050": 226, "15052": 226, "15054": 226, "15056": 226, "15058": 226, "15060": 226, "15062": 226, "15064": 226, "15066": 226, "15068": 226, "15070": 226, "15072": 226, "15074": 226, "15076": 226, "15078": 226, "15080": 226, "15082": 226, "15084": 226, "15086": 226, "15088": 226, "15090": 226, "15092": 226, "15094": 226, "15096": 226, "15098": 226, "15100": 226, "15102": 226, "15104": 226, "15106": 226, "15108": 226, "15110": 226, "15112": 226, "15114": 226, "15116": 226, "15118": 226, "15120": 226, "15122": 226, "15124": 226, "15126": 226, "15128": 226, "15130": 226, "15132": 226, "15134": 226, "15136": 226, "15138": 226, "15140": 226, "15142": 226, "15144": 226, "15146": 226, "15148": 226, "15150": 226, "15152": 226, "15154": 226, "15156": 226, "15158": 226, "15160": 226, "15162": 226, "15164": 226, "15166": 226, "15168": 226, "15170": 226, "15172": 226, "15174": 226, "15176": 226, "15178": 226, "15180": 226, "15182": 226, "15184": 226, "15186": 226, "15188": 226, "15190": 226, "15192": 226, "15194": 226, "15196": 226, "15198": 226, "15200": 226, "15202": 226, "15204": 226, "15206": 226, "15208": 226, "15210": 226, "15212": 226, "15214": 226, "15216": 226, "15218": 226, "15220": 226, "15222": 226, "15224": 226, "15226": 226, "15228": 226, "15230": 226, "15232": 226, "15234": 226, "15236": 226, "15238": 226, "15240": 226, "15242": 226, "15244": [226, 990], "15246": 226, "15248": 226, "15250": 226, "15252": 226, "15254": 226, "15256": 226, "15258": 226, "15260": 226, "15262": 226, "15264": 226, "15266": 226, "15268": 226, "15270": 226, "15272": 226, "15274": 226, "15276": 226, "15278": 226, "15280": 226, "15282": 226, "15284": 226, "15286": 226, "15288": 226, "15290": 226, "15292": 226, "15294": 226, "15296": 226, "15298": 226, "15300": 226, "15302": 226, "15304": 226, "15306": 226, "15308": 226, "15310": 226, "15312": 226, "15314": 226, "15316": 226, "15318": 226, "15320": 226, "15322": 226, "15324": 226, "15326": 226, "15328": 226, "15330": 226, "15332": 226, "15334": 226, "15336": 226, "15338": 226, "15340": 226, "15342": 226, "15344": 226, "15346": 226, "15348": 226, "15350": 226, "15352": 226, "15354": 226, "15356": 226, "15358": 226, "15360": 226, "15362": 226, "15364": 226, "15366": 226, "15368": 226, "15370": 226, "15372": 226, "15374": 226, "15376": 226, "15378": 226, "15380": 226, "15382": 226, "15384": 226, "15386": 226, "15388": 226, "15390": 226, "15392": 226, "15394": 226, "15396": 226, "15398": 226, "15400": 226, "15402": 226, "15404": 226, "15406": 226, "15408": 226, "15410": 226, "15412": 226, "15414": 226, "15416": 226, "15418": 226, "15420": 226, "15422": 226, "15424": 226, "15426": 226, "15428": 226, "15430": 226, "15432": 226, "15434": 226, "15436": 226, "15438": 226, "15440": 226, "15442": 226, "15444": 226, "15446": 226, "15448": 226, "15450": 226, "15452": 226, "15454": 226, "15456": 226, "15458": 226, "15460": 226, "15462": 226, "15464": 226, "15466": 226, "15468": 226, "15470": 226, "15472": 226, "15474": 226, "15476": 226, "15478": 226, "15480": 226, "15482": 226, "15484": 226, "15486": 226, "15488": 226, "15490": 226, "15492": 226, "15494": 226, "15496": 226, "15498": 226, "15500": 226, "15502": 226, "15504": 226, "15506": 226, "15508": 226, "15510": 226, "15512": 226, "15514": 226, "15516": 226, "15518": 226, "15520": 226, "15522": 226, "15524": 226, "15526": 226, "15528": 226, "15530": 226, "15532": 226, "15534": 226, "15536": 226, "15538": 226, "15540": 226, "15542": 226, "15544": 226, "15546": 226, "15548": 226, "15550": 226, "15552": 226, "15554": 226, "15556": 226, "15558": 226, "15560": 226, "15562": 226, "15564": 226, "15566": 226, "15568": 226, "15570": 226, "15572": 226, "15574": 226, "15576": 226, "15578": 226, "15580": 226, "15582": 226, "15584": 226, "15586": 226, "15588": 226, "15590": 226, "15592": 226, "15594": 226, "15596": 226, "15598": 226, "15600": 226, "15602": 226, "15604": 226, "15606": 226, "15608": 226, "15610": 226, "15612": 226, "15614": 226, "15616": 226, "15618": 226, "15620": 226, "15622": 226, "15624": 226, "15626": 226, "15628": 226, "15630": 226, "15632": 226, "15634": 226, "15636": 226, "15638": 226, "15640": 226, "15642": 226, "15644": 226, "15646": 226, "15648": 226, "15650": 226, "15652": 226, "15654": 226, "15656": 226, "15658": 226, "15660": 226, "15662": 226, "15664": 226, "15666": 226, "15668": 226, "15670": 226, "15672": 226, "15674": 226, "15676": 226, "15678": 226, "15680": 226, "15682": 226, "15684": 226, "15686": 226, "15688": 226, "15690": 226, "15692": 226, "15694": 226, "15696": 226, "15698": 226, "15700": 226, "15702": 226, "15704": 226, "15706": 226, "15708": 226, "15710": 226, "15712": 226, "15714": 226, "15716": 226, "15718": 226, "15720": 226, "15722": 226, "15724": 226, "15726": 226, "15728": 226, "15730": 226, "15732": 226, "15734": 226, "15736": 226, "15738": 226, "15740": 226, "15742": 226, "15744": 226, "15746": 226, "15748": 226, "15750": 226, "15752": 226, "15754": 226, "15756": 226, "15758": 226, "15760": 226, "15762": 226, "15764": 226, "15766": 226, "15768": 226, "15770": 226, "15772": 226, "15774": 226, "15776": 226, "15778": 226, "15780": 226, "15782": 226, "15784": 226, "15786": 226, "15788": 226, "15790": 226, "15792": 226, "15794": 226, "15796": 226, "15798": 226, "15800": 226, "15802": 226, "15804": 226, "15806": 226, "15808": 226, "15810": 226, "15812": 226, "15814": 226, "15816": 226, "15818": 226, "15820": 226, "15822": 226, "15824": 226, "15826": 226, "15828": 226, "15830": 226, "15832": 226, "15834": 226, "15836": 226, "15838": 226, "15840": 226, "15842": 226, "15844": 226, "15846": 226, "15848": 226, "15850": 226, "15852": 226, "15854": 226, "15856": 226, "15858": 226, "15860": 226, "15862": 226, "15864": 226, "15866": 226, "15868": 226, "15870": 226, "15872": 226, "15874": 226, "15876": 226, "15878": 226, "15880": 226, "15882": 226, "15884": 226, "15886": 226, "15888": 226, "15890": 226, "15892": 226, "15894": 226, "15896": 226, "15898": 226, "15900": 226, "15902": 226, "15904": 226, "15906": 226, "15908": 226, "15910": 226, "15912": 226, "15914": 226, "15916": 226, "15918": 226, "15920": 226, "15922": 226, "15924": 226, "15926": 226, "15928": 226, "15930": 226, "15932": 226, "15934": 226, "15936": 226, "15938": 226, "15940": 226, "15942": 226, "15944": 226, "15946": 226, "15948": 226, "15950": 226, "15952": 226, "15954": 226, "15956": 226, "15958": 226, "15960": 226, "15962": 226, "15964": 226, "15966": 226, "15968": 226, "15970": 226, "15972": 226, "15974": 226, "15976": 226, "15978": 226, "15980": 226, "15982": 226, "15984": 226, "15986": 226, "15988": 226, "15990": 226, "15992": 226, "15994": 226, "15996": 226, "15998": 226, "16000": 226, "16002": 226, "16004": 226, "16006": 226, "16008": 226, "16010": 226, "16012": 226, "16014": 226, "16016": 226, "16018": 226, "16020": 226, "16022": 226, "16024": 226, "16026": 226, "16028": 226, "16030": 226, "16032": 226, "16034": 226, "16036": 226, "16038": 226, "16040": 226, "16042": 226, "16044": 226, "16046": 226, "16048": 226, "16050": 226, "16052": 226, "16054": 226, "16056": 226, "16058": 226, "16060": 226, "16062": 226, "16064": 226, "16066": 226, "16068": 226, "16070": 226, "16072": 226, "16074": 226, "16076": 226, "16078": 226, "16080": 226, "16082": 226, "16084": 226, "16086": 226, "16088": 226, "16090": 226, "16092": 226, "16094": 226, "16096": 226, "16098": 226, "16100": 226, "16102": 226, "16104": 226, "16106": 226, "16108": 226, "16110": 226, "16112": 226, "16114": 226, "16116": 226, "16118": 226, "16120": 226, "16122": 226, "16124": 226, "16126": 226, "16128": 226, "16130": 226, "16132": 226, "16134": 226, "16136": 226, "16138": 226, "16140": 226, "16142": 226, "16144": 226, "16146": 226, "16148": 226, "16150": 226, "16152": 226, "16154": 226, "16156": 226, "16158": 226, "16160": 226, "16162": 226, "16164": 226, "16166": 226, "16168": 226, "16170": 226, "16172": 226, "16174": 226, "16176": 226, "16178": 226, "16180": 226, "16182": 226, "16184": 226, "16186": 226, "16188": 226, "16190": 226, "16192": 226, "16194": 226, "16196": 226, "16198": 226, "16200": 226, "16202": 226, "16204": 226, "16206": 226, "16208": 226, "16210": 226, "16212": 226, "16214": 226, "16216": 226, "16218": 226, "16220": 226, "16222": 226, "16224": 226, "16226": 226, "16228": 226, "16230": 226, "16232": 226, "16234": 226, "16236": 226, "16238": 226, "16240": 226, "16242": 226, "16244": 226, "16246": 226, "16248": 226, "16250": 226, "16252": 226, "16254": 226, "16256": 226, "16258": 226, "16260": 226, "16262": 226, "16264": 226, "16266": 226, "16268": 226, "16270": 226, "16272": 226, "16274": 226, "16276": 226, "16278": 226, "16280": 226, "16282": 226, "16284": 226, "16286": 226, "16288": 226, "16290": 226, "16292": 226, "16294": 226, "16296": 226, "16298": 226, "16300": 226, "16302": 226, "16304": 226, "16306": 226, "16308": 226, "16310": 226, "16312": 226, "16314": 226, "16316": 226, "16318": 226, "16320": 226, "16322": 226, "16324": 226, "16326": 226, "16328": 226, "16330": 226, "16332": 226, "16334": 226, "16336": 226, "16338": 226, "16340": 226, "16342": 226, "16344": 226, "16346": 226, "16348": 226, "16350": 226, "16352": 226, "16354": 226, "16356": 226, "16358": 226, "16360": 226, "16362": 226, "16364": 226, "16366": 226, "16368": 226, "16370": 226, "16372": 226, "16374": 226, "16376": 226, "16378": 226, "16380": 226, "16382": 226, "16386": 226, "16388": 226, "16390": 226, "16392": 226, "16394": 226, "16396": 226, "16398": 226, "16400": 226, "16402": 226, "16404": 226, "16406": 226, "16408": 226, "16410": 226, "16412": 226, "16414": 226, "16416": 226, "16418": 226, "16420": 226, "16422": 226, "16424": 226, "16426": 226, "16428": 226, "16430": 226, "16432": 226, "16434": 226, "16436": 226, "16438": 226, "16440": 226, "16442": 226, "16444": 226, "16446": 226, "16448": 226, "16450": 226, "16452": 226, "16454": 226, "16456": 226, "16458": 226, "16460": 226, "16462": 226, "16464": 226, "16466": 226, "16468": 226, "16470": 226, "16472": 226, "16474": 226, "16476": 226, "16478": 226, "16480": 226, "16482": 226, "16484": 226, "16486": 226, "16488": 226, "16490": 226, "16492": 226, "16494": 226, "16496": 226, "16498": 226, "16500": 226, "16502": 226, "16504": 226, "16506": 226, "16508": 226, "16510": 226, "16512": 226, "16514": 226, "16516": 226, "16518": 226, "16520": 226, "16522": 226, "16524": 226, "16526": 226, "16528": 226, "16530": 226, "16532": 226, "16534": 226, "16536": 226, "16538": 226, "16540": 226, "16542": 226, "16544": 226, "16546": 226, "16548": 226, "16550": 226, "16552": 226, "16554": 226, "16556": 226, "16558": 226, "16560": 226, "16562": 226, "16564": 226, "16566": 226, "16568": 226, "16570": 226, "16572": 226, "16574": 226, "16576": 226, "16578": 226, "16580": 226, "16582": 226, "16584": 226, "16586": 226, "16588": 226, "16590": 226, "16592": 226, "16594": 226, "16596": 226, "16598": 226, "16600": 226, "16602": 226, "16604": 226, "16606": 226, "16608": 226, "16610": 226, "16612": 226, "16614": 226, "16616": 226, "16618": 226, "16620": 226, "16622": 226, "16624": 226, "16626": 226, "16628": 226, "16630": 226, "16632": 226, "16634": 226, "16636": 226, "16638": 226, "16640": 226, "16642": 226, "16644": 226, "16646": 226, "16648": 226, "16650": 226, "16652": 226, "16654": 226, "16656": 226, "16658": 226, "16660": 226, "16662": 226, "16664": 226, "16666": 226, "16668": 226, "16670": 226, "16672": 226, "16674": 226, "16676": 226, "16678": 226, "16680": 226, "16682": 226, "16684": 226, "16686": 226, "16688": 226, "16690": 226, "16692": 226, "16694": 226, "16696": 226, "16698": 226, "16700": 226, "16702": 226, "16704": 226, "16706": 226, "16708": 226, "16710": 226, "16712": 226, "16714": 226, "16716": 226, "16718": 226, "16720": 226, "16722": 226, "16724": 226, "16726": 226, "16728": 226, "16730": 226, "16732": 226, "16734": 226, "16736": 226, "16738": 226, "16740": 226, "16742": 226, "16744": 226, "16746": 226, "16748": 226, "16750": 226, "16752": 226, "16754": 226, "16756": 226, "16758": 226, "16760": 226, "16762": 226, "16764": 226, "16766": 226, "16768": 226, "16770": 226, "16772": 226, "16774": 226, "16776": 226, "16778": 226, "16780": 226, "16782": 226, "16784": 226, "16786": 226, "16788": 226, "16790": 226, "16792": 226, "16794": 226, "16796": 226, "16798": 226, "16800": 226, "16802": 226, "16804": 226, "16806": 226, "16808": 226, "16810": 226, "16812": 226, "16814": 226, "16816": 226, "16818": 226, "16820": 226, "16822": 226, "16824": 226, "16826": 226, "16828": 226, "16830": 226, "16832": 226, "16834": 226, "16836": 226, "16838": 226, "16840": 226, "16842": 226, "16844": 226, "16846": 226, "16848": 226, "16850": 226, "16852": 226, "16854": 226, "16856": 226, "16858": 226, "16860": 226, "16862": 226, "16864": 226, "16866": 226, "16868": 226, "16870": 226, "16872": 226, "16874": 226, "16876": 226, "16878": 226, "16880": 226, "16882": 226, "16884": 226, "16886": 226, "16888": 226, "16890": 226, "16892": 226, "16894": 226, "16896": 226, "16898": 226, "16900": 226, "16902": 226, "16904": 226, "16906": 226, "16908": 226, "16910": 226, "16912": 226, "16914": 226, "16916": 226, "16918": 226, "16920": 226, "16922": 226, "16924": 226, "16926": 226, "16928": 226, "16930": 226, "16932": 226, "16934": 226, "16936": 226, "16938": 226, "16940": 226, "16942": 226, "16944": 226, "16946": 226, "16948": 226, "16950": 226, "16952": 226, "16954": 226, "16956": 226, "16958": 226, "16960": 226, "16962": 226, "16964": 226, "16966": 226, "16968": 226, "16970": 226, "16972": 226, "16974": 226, "16976": 226, "16978": 226, "16980": 226, "16982": 226, "16984": 226, "16986": 226, "16988": 226, "16990": 226, "16992": 226, "16994": 226, "16996": 226, "16998": 226, "17000": 226, "17002": 226, "17004": 226, "17006": 226, "17008": 226, "17010": 226, "17012": 226, "17014": 226, "17016": 226, "17018": 226, "17020": 226, "17022": 226, "17024": 226, "17026": 226, "17028": 226, "17030": 226, "17032": 226, "17034": 226, "17036": 226, "17038": 226, "17040": 226, "17042": 226, "17044": 226, "17046": 226, "17048": 226, "17050": 226, "17052": 226, "17054": 226, "17056": 226, "17058": 226, "17060": 226, "17062": 226, "17064": 226, "17066": 226, "17068": 226, "17070": 226, "17072": 226, "17074": 226, "17076": 226, "17078": 226, "17080": 226, "17082": 226, "17084": 226, "17086": 226, "17088": 226, "17090": 226, "17092": 226, "17094": 226, "17096": 226, "17098": 226, "17100": 226, "17102": 226, "17104": 226, "17106": 226, "17108": 226, "17110": 226, "17112": 226, "17114": 226, "17116": 226, "17118": 226, "17120": 226, "17122": 226, "17124": 226, "17126": [226, 275], "17128": 226, "17130": 226, "17132": 226, "17134": 226, "17136": 226, "17138": 226, "17140": 226, "17142": 226, "17144": 226, "17146": 226, "17148": 226, "17150": 226, "17152": 226, "17154": 226, "17156": 226, "17158": 226, "17160": 226, "17162": 226, "17164": 226, "17166": 226, "17168": 226, "17170": 226, "17172": 226, "17174": 226, "17176": 226, "17178": 226, "17180": 226, "17182": 226, "17184": 226, "17186": 226, "17188": 226, "17190": 226, "17192": 226, "17194": 226, "17196": 226, "17198": 226, "17200": 226, "17202": 226, "17204": 226, "17206": 226, "17208": 226, "17210": 226, "17212": 226, "17214": 226, "17216": 226, "17218": 226, "17220": 226, "17222": 226, "17224": 226, "17226": 226, "17228": 226, "17230": 226, "17232": 226, "17234": 226, "17236": 226, "17238": 226, "17240": 226, "17242": 226, "17244": 226, "17246": 226, "17248": 226, "17250": 226, "17252": 226, "17254": 226, "17256": 226, "17258": 226, "17260": 226, "17262": 226, "17264": 226, "17266": 226, "17268": 226, "17270": 226, "17272": 226, "17274": 226, "17276": 226, "17278": 226, "17280": 226, "17282": 226, "17284": 226, "17286": 226, "17288": 226, "17290": 226, "17292": 226, "17294": 226, "17296": 226, "17298": 226, "17300": 226, "17302": 226, "17304": 226, "17306": 226, "17308": 226, "17310": 226, "17312": 226, "17314": 226, "17316": 226, "17318": 226, "17320": 226, "17322": 226, "17324": 226, "17326": 226, "17328": 226, "17330": 226, "17332": 226, "17334": 226, "17336": 226, "17338": 226, "17340": 226, "17342": 226, "17344": 226, "17346": 226, "17348": 226, "17350": 226, "17352": 226, "17354": 226, "17356": 226, "17358": 226, "17360": 226, "17362": 226, "17364": 226, "17366": 226, "17368": 226, "17370": 226, "17372": 226, "17374": 226, "17376": 226, "17378": 226, "17380": 226, "17382": 226, "17384": 226, "17386": 226, "17388": 226, "17390": 226, "17392": 226, "17394": 226, "17396": 226, "17398": 226, "17400": 226, "17402": 226, "17404": 226, "17406": 226, "17408": 226, "17410": 226, "17412": 226, "17414": 226, "17416": 226, "17418": 226, "17420": 226, "17422": 226, "17424": 226, "17426": 226, "17428": 226, "17430": 226, "17432": 226, "17434": 226, "17436": 226, "17438": 226, "17440": 226, "17442": 226, "17444": 226, "17446": 226, "17448": 226, "17450": 226, "17452": 226, "17454": 226, "17456": 226, "17458": 226, "17460": 226, "17462": 226, "17464": 226, "17466": 226, "17468": 226, "17470": 226, "17472": 226, "17474": 226, "17476": 226, "17478": 226, "17480": 226, "17482": 226, "17484": 226, "17486": 226, "17488": 226, "17490": 226, "17492": 226, "17494": 226, "17496": 226, "17498": 226, "17500": 226, "17502": 226, "17504": 226, "17506": 226, "17508": 226, "17510": 226, "17512": 226, "17514": 226, "17516": 226, "17518": 226, "17520": 226, "17522": 226, "17524": 226, "17526": 226, "17528": 226, "17530": 226, "17532": 226, "17534": 226, "17536": 226, "17538": 226, "17540": 226, "17542": 226, "17544": 226, "17546": 226, "17548": 226, "17550": 226, "17552": 226, "17554": 226, "17556": 226, "17558": 226, "17560": 226, "17562": 226, "17564": 226, "17566": 226, "17568": 226, "17570": 226, "17572": 226, "17574": 226, "17576": 226, "17578": 226, "17580": 226, "17582": 226, "17584": 226, "17586": 226, "17588": 226, "17590": 226, "17592": 226, "17594": 226, "17596": 226, "17598": 226, "17600": 226, "17602": 226, "17604": 226, "17606": 226, "17608": 226, "17610": 226, "17612": 226, "17614": 226, "17616": 226, "17618": 226, "17620": 226, "17622": 226, "17624": 226, "17626": 226, "17628": 226, "17630": 226, "17632": 226, "17634": 226, "17636": 226, "17638": 226, "17640": 226, "17642": 226, "17644": 226, "17646": 226, "17648": 226, "17650": 226, "17652": 226, "17654": 226, "17656": 226, "17658": 226, "17660": 226, "17662": 226, "17664": 226, "17666": 226, "17668": 226, "17670": 226, "17672": 226, "17674": 226, "17676": 226, "17678": 226, "17680": 226, "17682": 226, "17684": 226, "17686": 226, "17688": 226, "17690": 226, "17692": 226, "17694": 226, "17696": 226, "17698": 226, "17700": 226, "17702": 226, "17704": 226, "17706": 226, "17708": 226, "17710": 226, "17712": 226, "17714": 226, "17716": 226, "17718": 226, "17720": 226, "17722": 226, "17724": 226, "17726": 226, "17728": 226, "17730": 226, "17732": 226, "17734": 226, "17736": 226, "17738": 226, "17740": 226, "17742": 226, "17744": 226, "17746": 226, "17748": 226, "17750": 226, "17752": 226, "17754": 226, "17756": 226, "17758": 226, "17760": 226, "17762": 226, "17764": 226, "17766": 226, "17768": 226, "17770": 226, "17772": 226, "17774": 226, "17776": 226, "17778": 226, "17780": 226, "17782": 226, "17784": 226, "17786": 226, "17788": 226, "17790": 226, "17792": 226, "17794": 226, "17796": 226, "17798": 226, "17800": 226, "17802": 226, "17804": 226, "17806": 226, "17808": 226, "17810": 226, "17812": 226, "17814": 226, "17816": 226, "17818": 226, "17820": 226, "17822": 226, "17824": 226, "17826": 226, "17828": 226, "17830": 226, "17832": 226, "17834": 226, "17836": 226, "17838": 226, "17840": 226, "17842": 226, "17844": 226, "17846": 226, "17848": 226, "17850": 226, "17852": 226, "17854": 226, "17856": 226, "17858": 226, "17860": 226, "17862": 226, "17864": 226, "17866": 226, "17868": 226, "17870": 226, "17872": 226, "17874": 226, "17876": 226, "17878": 226, "17880": 226, "17882": 226, "17884": 226, "17886": 226, "17888": 226, "17890": 226, "17892": 226, "17894": 226, "17896": 226, "17898": 226, "17900": 226, "17902": 226, "17904": 226, "17906": 226, "17908": 226, "17910": 226, "17912": 226, "17914": 226, "17916": 226, "17918": 226, "17920": 226, "17922": 226, "17924": 226, "17926": 226, "17928": 226, "17930": 226, "17932": 226, "17934": 226, "17936": 226, "17938": 226, "17940": 226, "17942": 226, "17944": 226, "17946": 226, "17948": 226, "17950": 226, "17952": 226, "17954": 226, "17956": 226, "17958": 226, "17960": 226, "17962": 226, "17964": 226, "17966": 226, "17968": 226, "17970": 226, "17972": 226, "17974": 226, "17976": 226, "17978": 226, "17980": 226, "17982": 226, "17984": 226, "17986": 226, "17988": 226, "17990": 226, "17992": 226, "17994": 226, "17996": 226, "17998": 226, "18000": [226, 908], "18002": 226, "18004": 226, "18006": 226, "18008": 226, "18010": 226, "18012": 226, "18014": 226, "18016": 226, "18018": 226, "18020": 226, "18022": 226, "18024": 226, "18026": 226, "18028": 226, "18030": 226, "18032": 226, "18034": 226, "18036": 226, "18038": 226, "18040": 226, "18042": 226, "18044": 226, "18046": 226, "18048": 226, "18050": 226, "18052": 226, "18054": 226, "18056": 226, "18058": 226, "18060": 226, "18062": 226, "18064": 226, "18066": 226, "18068": 226, "18070": 226, "18072": 226, "18074": 226, "18076": 226, "18078": 226, "18080": 226, "18082": 226, "18084": 226, "18086": 226, "18088": 226, "18090": 226, "18092": 226, "18094": 226, "18096": 226, "18098": 226, "18100": 226, "18102": 226, "18104": 226, "18106": 226, "18108": 226, "18110": 226, "18112": 226, "18114": 226, "18116": 226, "18118": 226, "18120": 226, "18122": 226, "18124": 226, "18126": 226, "18128": 226, "18130": 226, "18132": 226, "18134": 226, "18136": 226, "18138": 226, "18140": 226, "18142": 226, "18144": 226, "18146": 226, "18148": 226, "18150": 226, "18152": 226, "18154": 226, "18156": 226, "18158": 226, "18160": 226, "18162": 226, "18164": 226, "18166": 226, "18168": 226, "18170": 226, "18172": 226, "18174": 226, "18176": 226, "18178": 226, "18180": 226, "18182": 226, "18184": 226, "18186": 226, "18188": 226, "18190": 226, "18192": 226, "18194": 226, "18196": 226, "18198": 226, "18200": 226, "18202": 226, "18204": 226, "18206": 226, "18208": 226, "18210": 226, "18212": 226, "18214": 226, "18216": 226, "18218": 226, "18220": 226, "18222": 226, "18224": 226, "18226": 226, "18228": 226, "18230": 226, "18232": 226, "18234": 226, "18236": 226, "18238": 226, "18240": 226, "18242": 226, "18244": 226, "18246": 226, "18248": 226, "18250": 226, "18252": 226, "18254": 226, "18256": 226, "18258": 226, "18260": 226, "18262": 226, "18264": 226, "18266": 226, "18268": 226, "18270": 226, "18272": 226, "18274": 226, "18276": 226, "18278": 226, "18280": 226, "18282": 226, "18284": 226, "18286": 226, "18288": 226, "18290": 226, "18292": 226, "18294": 226, "18296": 226, "18298": 226, "18300": 226, "18302": 226, "18304": 226, "18306": 226, "18308": 226, "18310": 226, "18312": 226, "18314": 226, "18316": 226, "18318": 226, "18320": 226, "18322": 226, "18324": 226, "18326": 226, "18328": 226, "18330": 226, "18332": 226, "18334": 226, "18336": 226, "18338": 226, "18340": 226, "18342": 226, "18344": 226, "18346": 226, "18348": 226, "18350": 226, "18352": 226, "18354": 226, "18356": 226, "18358": 226, "18360": 226, "18362": 226, "18364": 226, "18366": 226, "18368": 226, "18370": 226, "18372": 226, "18374": 226, "18376": 226, "18378": 226, "18380": 226, "18382": 226, "18384": [226, 976], "18386": 226, "18388": 226, "18390": 226, "18392": 226, "18394": 226, "18396": 226, "18398": 226, "18400": 226, "18402": 226, "18404": 226, "18406": 226, "18408": 226, "18410": 226, "18412": 226, "18414": 226, "18416": 226, "18418": 226, "18420": 226, "18422": 226, "18424": 226, "18426": 226, "18428": 226, "18430": 226, "18432": 226, "18434": 226, "18436": 226, "18438": 226, "18440": 226, "18442": 226, "18444": 226, "18446": 226, "18448": 226, "18450": 226, "18452": 226, "18454": 226, "18456": 226, "18458": 226, "18460": 226, "18462": 226, "18464": 226, "18466": 226, "18468": 226, "18470": 226, "18472": 226, "18474": 226, "18476": 226, "18478": 226, "18480": 226, "18482": 226, "18484": 226, "18486": 226, "18488": 226, "18490": 226, "18492": 226, "18494": 226, "18496": 226, "18498": 226, "18500": 226, "18502": 226, "18504": 226, "18506": 226, "18508": 226, "18510": 226, "18512": 226, "18514": 226, "18516": 226, "18518": 226, "18520": 226, "18522": 226, "18524": 226, "18526": 226, "18528": 226, "18530": 226, "18532": 226, "18534": 226, "18536": 226, "18538": 226, "18540": 226, "18542": 226, "18544": 226, "18546": 226, "18548": 226, "18550": 226, "18552": 226, "18554": 226, "18556": 226, "18558": 226, "18560": 226, "18562": 226, "18564": 226, "18566": 226, "18568": 226, "18570": 226, "18572": 226, "18574": 226, "18576": 226, "18578": 226, "18580": 226, "18582": 226, "18584": 226, "18586": 226, "18588": 226, "18590": 226, "18592": 226, "18594": 226, "18596": 226, "18598": 226, "18600": 226, "18602": 226, "18604": 226, "18606": 226, "18608": 226, "18610": 226, "18612": 226, "18614": 226, "18616": 226, "18618": 226, "18620": 226, "18622": 226, "18624": 226, "18626": 226, "18628": 226, "18630": 226, "18632": 226, "18634": 226, "18636": 226, "18638": 226, "18640": 226, "18642": 226, "18644": 226, "18646": 226, "18648": 226, "18650": 226, "18652": 226, "18654": 226, "18656": 226, "18658": 226, "18660": 226, "18662": 226, "18664": 226, "18666": 226, "18668": 226, "18670": 226, "18672": 226, "18674": 226, "18676": 226, "18678": 226, "18680": 226, "18682": 226, "18684": 226, "18686": 226, "18688": 226, "18690": 226, "18692": 226, "18694": 226, "18696": 226, "18698": 226, "18700": 226, "18702": 226, "18704": 226, "18706": 226, "18708": 226, "18710": 226, "18712": 226, "18714": 226, "18716": 226, "18718": 226, "18720": 226, "18722": 226, "18724": 226, "18726": 226, "18728": 226, "18730": 226, "18732": 226, "18734": 226, "18736": 226, "18738": 226, "18740": 226, "18742": 226, "18744": 226, "18746": 226, "18748": 226, "18750": 226, "18752": 226, "18754": 226, "18756": 226, "18758": 226, "18760": 226, "18762": 226, "18764": 226, "18766": 226, "18768": 226, "18770": 226, "18772": 226, "18774": 226, "18776": 226, "18778": 226, "18780": 226, "18782": 226, "18784": 226, "18786": 226, "18788": 226, "18790": 226, "18792": 226, "18794": 226, "18796": 226, "18798": 226, "18800": 226, "18802": 226, "18804": 226, "18806": 226, "18808": 226, "18810": 226, "18812": 226, "18814": 226, "18816": 226, "18818": 226, "18820": 226, "18822": 226, "18824": 226, "18826": 226, "18828": 226, "18830": 226, "18832": 226, "18834": 226, "18836": 226, "18838": 226, "18840": 226, "18842": 226, "18844": 226, "18846": 226, "18848": 226, "18850": 226, "18852": 226, "18854": 226, "18856": 226, "18858": 226, "18860": 226, "18862": 226, "18864": 226, "18866": 226, "18868": 226, "18870": 226, "18872": 226, "18874": 226, "18876": 226, "18878": 226, "18880": 226, "18882": 226, "18884": 226, "18886": 226, "18888": 226, "18890": 226, "18892": 226, "18894": 226, "18896": 226, "18898": 226, "18900": 226, "18902": 226, "18904": 226, "18906": 226, "18908": 226, "18910": 226, "18912": 226, "18914": 226, "18916": 226, "18918": 226, "18920": 226, "18922": 226, "18924": 226, "18926": 226, "18928": 226, "18930": 226, "18932": 226, "18934": 226, "18936": 226, "18938": 226, "18940": 226, "18942": 226, "18944": 226, "18946": 226, "18948": 226, "18950": 226, "18952": 226, "18954": 226, "18956": 226, "18958": 226, "18960": 226, "18962": 226, "18964": 226, "18966": 226, "18968": 226, "18970": 226, "18972": 226, "18974": 226, "18976": 226, "18978": 226, "18980": 226, "18982": 226, "18984": 226, "18986": 226, "18988": 226, "18990": 226, "18992": 226, "18994": 226, "18996": 226, "18998": 226, "19000": 226, "19002": 226, "19004": 226, "19006": 226, "19008": 226, "19010": 226, "19012": 226, "19014": 226, "19016": 226, "19018": 226, "19020": 226, "19022": 226, "19024": 226, "19026": 226, "19028": 226, "19030": 226, "19032": 226, "19034": 226, "19036": 226, "19038": 226, "19040": 226, "19042": 226, "19044": 226, "19046": 226, "19048": 226, "19050": 226, "19052": 226, "19054": 226, "19056": 226, "19058": 226, "19060": 226, "19062": 226, "19064": 226, "19066": 226, "19068": 226, "19070": 226, "19072": 226, "19074": 226, "19076": 226, "19078": 226, "19080": 226, "19082": 226, "19084": 226, "19086": 226, "19088": 226, "19090": 226, "19092": 226, "19094": 226, "19096": 226, "19098": 226, "19100": 226, "19102": 226, "19104": 226, "19106": 226, "19108": 226, "19110": 226, "19112": 226, "19114": 226, "19116": 226, "19118": 226, "19120": 226, "19122": 226, "19124": 226, "19126": 226, "19128": 226, "19130": 226, "19132": 226, "19134": 226, "19136": 226, "19138": 226, "19140": 226, "19142": 226, "19144": 226, "19146": 226, "19148": 226, "19150": 226, "19152": 226, "19154": 226, "19156": 226, "19158": 226, "19160": 226, "19162": 226, "19164": 226, "19166": 226, "19168": 226, "19170": 226, "19172": 226, "19174": 226, "19176": 226, "19178": 226, "19180": 226, "19182": 226, "19184": 226, "19186": 226, "19188": 226, "19190": 226, "19192": 226, "19194": 226, "19196": 226, "19198": 226, "19200": 226, "19202": 226, "19204": 226, "19206": 226, "19208": 226, "19210": 226, "19212": 226, "19214": 226, "19216": 226, "19218": 226, "19220": 226, "19222": 226, "19224": 226, "19226": 226, "19228": 226, "19230": 226, "19232": 226, "19234": 226, "19236": 226, "19238": 226, "19240": 226, "19242": 226, "19244": 226, "19246": 226, "19248": 226, "19250": 226, "19252": 226, "19254": 226, "19256": 226, "19258": 226, "19260": 226, "19262": 226, "19264": 226, "19266": 226, "19268": 226, "19270": 226, "19272": 226, "19274": 226, "19276": 226, "19278": 226, "19280": 226, "19282": 226, "19284": 226, "19286": 226, "19288": 226, "19290": 226, "19292": 226, "19294": 226, "19296": 226, "19298": 226, "19300": 226, "19302": 226, "19304": 226, "19306": 226, "19308": 226, "19310": 226, "19312": 226, "19314": 226, "19316": 226, "19318": 226, "19320": 226, "19322": 226, "19324": 226, "19326": 226, "19328": 226, "19330": 226, "19332": 226, "19334": 226, "19336": 226, "19338": 226, "19340": 226, "19342": 226, "19344": 226, "19346": 226, "19348": 226, "19350": 226, "19352": 226, "19354": 226, "19356": 226, "19358": 226, "19360": 226, "19362": 226, "19364": 226, "19366": 226, "19368": 226, "19370": 226, "19372": 226, "19374": 226, "19376": 226, "19378": 226, "19380": 226, "19382": 226, "19384": 226, "19386": 226, "19388": 226, "19390": 226, "19392": 226, "19394": 226, "19396": 226, "19398": 226, "19400": 226, "19402": 226, "19404": 226, "19406": 226, "19408": 226, "19410": 226, "19412": 226, "19414": 226, "19416": 226, "19418": 226, "19420": 226, "19422": 226, "19424": 226, "19426": 226, "19428": 226, "19430": 226, "19432": 226, "19434": 226, "19436": 226, "19438": 226, "19440": 226, "19442": 226, "19444": 226, "19446": 226, "19448": 226, "19450": 226, "19452": 226, "19454": 226, "19456": 226, "19458": 226, "19460": 226, "19462": 226, "19464": 226, "19466": 226, "19468": 226, "19470": 226, "19472": 226, "19474": 226, "19476": 226, "19478": 226, "19480": 226, "19482": 226, "19484": 226, "19486": 226, "19488": 226, "19490": 226, "19492": 226, "19494": 226, "19496": 226, "19498": 226, "19500": 226, "19502": 226, "19504": 226, "19506": 226, "19508": 226, "19510": 226, "19512": 226, "19514": 226, "19516": 226, "19518": 226, "19520": 226, "19522": 226, "19524": 226, "19526": 226, "19528": 226, "19530": 226, "19532": 226, "19534": 226, "19536": 226, "19538": 226, "19540": 226, "19542": 226, "19544": 226, "19546": 226, "19548": 226, "19550": 226, "19552": 226, "19554": 226, "19556": 226, "19558": 226, "19560": 226, "19562": 226, "19564": 226, "19566": 226, "19568": 226, "19570": 226, "19572": 226, "19574": 226, "19576": 226, "19578": 226, "19580": 226, "19582": 226, "19584": 226, "19586": 226, "19588": 226, "19590": 226, "19592": 226, "19594": 226, "19596": 226, "19598": 226, "19600": 226, "19602": 226, "19604": 226, "19606": 226, "19608": 226, "19610": 226, "19612": 226, "19614": 226, "19616": 226, "19618": 226, "19620": 226, "19622": 226, "19624": 226, "19626": 226, "19628": 226, "19630": 226, "19632": 226, "19634": 226, "19636": 226, "19638": 226, "19640": 226, "19642": 226, "19644": 226, "19646": 226, "19648": 226, "19650": 226, "19652": 226, "19654": 226, "19656": 226, "19658": 226, "19660": 226, "19662": 226, "19664": 226, "19666": 226, "19668": 226, "19670": 226, "19672": 226, "19674": 226, "19676": 226, "19678": 226, "19680": 226, "19682": 226, "19684": 226, "19686": 226, "19688": 226, "19690": 226, "19692": 226, "19694": 226, "19696": 226, "19698": 226, "19700": 226, "19702": 226, "19704": 226, "19706": 226, "19708": 226, "19710": 226, "19712": 226, "19714": 226, "19716": 226, "19718": 226, "19720": 226, "19722": 226, "19724": 226, "19726": 226, "19728": 226, "19730": 226, "19732": 226, "19734": 226, "19736": 226, "19738": 226, "19740": 226, "19742": 226, "19744": 226, "19746": 226, "19748": 226, "19750": 226, "19752": 226, "19754": 226, "19756": 226, "19758": 226, "19760": 226, "19762": 226, "19764": 226, "19766": 226, "19768": 226, "19770": 226, "19772": 226, "19774": 226, "19776": 226, "19778": 226, "19780": 226, "19782": 226, "19784": 226, "19786": 226, "19788": 226, "19790": 226, "19792": 226, "19794": 226, "19796": 226, "19798": 226, "19800": 226, "19802": 226, "19804": 226, "19806": 226, "19808": 226, "19810": 226, "19812": 226, "19814": 226, "19816": 226, "19818": 226, "19820": 226, "19822": 226, "19824": 226, "19826": 226, "19828": 226, "19830": 226, "19832": 226, "19834": 226, "19836": 226, "19838": 226, "19840": 226, "19842": 226, "19844": 226, "19846": 226, "19848": 226, "19850": 226, "19852": 226, "19854": 226, "19856": 226, "19858": 226, "19860": 226, "19862": 226, "19864": 226, "19866": 226, "19868": 226, "19870": 226, "19872": 226, "19874": 226, "19876": 226, "19878": 226, "19880": 226, "19882": 226, "19884": 226, "19886": 226, "19888": 226, "19890": 226, "19892": 226, "19894": 226, "19896": 226, "19898": 226, "19900": 226, "19902": 226, "19904": 226, "19906": 226, "19908": 226, "19910": 226, "19912": 226, "19914": 226, "19916": 226, "19918": 226, "19920": 226, "19922": 226, "19924": 226, "19926": 226, "19928": 226, "19930": 226, "19932": 226, "19934": 226, "19936": 226, "19938": 226, "19940": 226, "19942": 226, "19944": 226, "19946": 226, "19948": 226, "19950": 226, "19952": 226, "19954": 226, "19956": 226, "19958": 226, "19960": 226, "19962": 226, "19964": 226, "19966": 226, "19968": 226, "19970": 226, "19972": 226, "19974": 226, "19976": 226, "19978": 226, "19980": 226, "19982": 226, "19984": 226, "19986": 226, "19988": 226, "19990": 226, "19992": 226, "19994": 226, "19996": 226, "19998": 226, "l_to_send": 226, "json_to_send": 226, "json_receiv": 226, "l_receiv": 226, "sine": [226, 267, 284], "140106668681968": 226, "wallclock_axi": 226, "1638538131": 226, "1975703": 226, "2978473": 226, "3981225": 226, "498449": 226, "5987027": 226, "698947": 226, "7996597": 226, "899947": 226, "1638538132": 226, "0001943": 226, "1010473": 226, "0b10110": 226, "0x16": [226, 792], "0b1011": [226, 261], "bit_3": 226, "0b00001": 226, "0b1": [226, 243, 313], "0b1000": [226, 243], "0b11110": 226, "bitwis": [226, 387, 420, 928, 932, 1019], "num1": [226, 243], "0b110101101": 226, "num2": [226, 243], "0b101110100": 226, "0b100100100": 226, "0b111111101": 226, "0b1010": 226, "0b10100": [226, 243], "1fuzzi2fuzzi3fuzzi4": 226, "0b11011001": 226, "abcdef": [226, 233, 239, 243], "cde": 226, "lexic": [226, 447, 753], "indexerror": [226, 243, 246, 264, 303, 335, 999, 1052, 1121], "auer": 226, "aue": 226, "zerodivisionerror": [226, 239, 264, 999], "lst1": 226, "lst2": 226, "toc": 227, "treeset": 227, "searchabl": [227, 230], "diesel": 227, "vibrat": 227, "lighter": 227, "sensorrandom": 227, "sensorsin": 227, "sensorconst": 227, "wild": [227, 229, 234, 269], "yesterai": 227, "deseri": [227, 239], "decod": [227, 239, 246, 249, 285, 291, 302, 305, 307, 313, 1050, 1096], "swallow": [227, 833, 999], "walkthrough": [227, 229, 234, 1168], "1h": 227, "exchangeformat": 227, "test_mqtt_format": 227, "parser": [227, 239, 293, 309, 346, 674, 1052, 1155], "mosquitto_sub": [227, 1116], "writer": [227, 761, 846], "deserializeerror": 227, "dangl": [227, 390, 561, 575], "fahrenheit": [229, 358, 360, 373, 388, 397, 404, 410, 414, 417, 421, 430, 434, 439, 440, 461, 662, 700, 752, 754, 755], "nonconst": [229, 573], "getchar": [229, 364, 366, 371, 380], "dry": 229, "verif": [229, 1105], "umlaut": [229, 230, 320, 1031, 1113], "\u00f6": [229, 249, 1113], "canari": 229, "asid": [229, 398, 399, 411, 673, 961], "brainfuck": 229, "nok": [229, 710, 955], "singli": [229, 417, 421, 430, 434, 439, 440, 662, 700, 752, 754, 755], "typedef": [229, 414, 417, 421, 430, 434, 439, 440, 660, 662, 700, 708, 724, 752, 754, 755, 822, 970], "commonplac": [229, 1158], "boundari": [229, 239, 285, 420, 734, 900], "neighborhood": 229, "signed": [229, 374, 423], "unsigned": 229, "excurs": [229, 464, 1099], "pointerarith": 229, "lower_bound": [229, 276, 315, 600, 605, 624, 628, 657, 755], "for_each": [229, 276, 605, 624, 628, 657, 708, 755], "diagram": [229, 464, 482, 484, 815, 899, 906, 908], "search_by_lastnam": [229, 653, 654, 655], "const_iter": [229, 555, 599, 602, 603, 604, 606, 621, 660, 675, 708, 709], "calloper": [229, 538], "exc": [229, 538], "ostream": [229, 538, 564, 724, 753, 1140], "paint": [229, 643, 657, 755], "reverse_copi": [229, 276, 538, 605, 624, 628, 657, 755], "cin": [229, 607, 625, 627, 643, 657, 755], "accumul": [229, 538], "raci": [229, 538], "wsl2": [229, 256, 258, 276, 278, 342], "libsqlite3": [229, 448], "libboost": 229, "libgtk": 229, "prosaic": 229, "roman": 229, "mad": [229, 422], "wxwidget": 229, "lieb": [230, 291, 307], "gr\u00fc\u00dfe": [230, 291, 307], "utf8": 230, "distil": [230, 290, 321, 997, 1069], "4j": 231, "unlimitxdeadbeef": [231, 233, 239, 285, 291, 330, 519], "3735928559": [231, 233, 239, 243, 285, 291, 330], "0b10010011": 231, "ippi": 231, "0b0101": 231, "0101": 231, "teifl": 231, "fun1": 231, "fun2": 231, "ipykernel_165524": 231, "729327466": 231, "nsecond": [231, 1044], "rline": 231, "carriag": [231, 377, 1044], "neuer": 231, "ordner": 231, "euer": 231, "regex_str": [231, 249], "calim": 231, "yaaai": 231, "needl": [231, 1038, 1046], "haystack": [231, 1038, 1046], "finit": [231, 280, 392, 891], "haystack_s": 231, "0x7fe07c0cdf90": 231, "list_iter": [231, 249, 303, 313], "0x7fe07c0cd7f0": 231, "unicode_code_point": 231, "l_new": 231, "ijk": 231, "mengenlehr": 231, "s1": [231, 239, 243, 246, 249, 264, 271, 281, 291, 303, 313, 464, 481, 511, 570, 664, 670, 718, 739, 741, 743, 745, 1049], "s2": [231, 239, 243, 246, 249, 264, 271, 281, 291, 303, 313, 464, 481, 511, 570, 664, 670, 718, 739, 741, 743, 1049], "gunnar": 231, "liam": 231, "maximumum": 231, "variable2": 231, "maximum2": 231, "mrmr": 231, "einser": 231, "square_numb": [231, 1047], "squares_gener": 231, "other_d": [231, 264], "nove": 231, "isspac": [231, 233, 236, 239, 264, 285, 313, 1046], "buchhaltung": [231, 862, 884, 885], "startswith": [231, 239, 268, 269, 271, 285, 444, 1046, 1119], "buch": [231, 1150], "oooo": 231, "isupp": [231, 239, 249, 285, 1046], "zz": 231, "traurig": 231, "substr": [231, 233, 239, 249, 264, 271, 285, 303, 307, 313, 1140], "gid": [231, 239, 307, 753, 829, 830, 837, 839, 847, 919, 934, 1078], "count_byt": 231, "nbyte": 231, "2691": [231, 753, 858], "miscellanea": [232, 922], "brace": [232, 239, 285, 364, 387, 390, 402, 462, 555, 564, 596, 598, 603, 616, 617, 660, 700, 709, 752, 754, 755, 1028, 1031], "hour_of_dai": 232, "ein_str": 233, "ein_anderer_str": 233, "fghjgfgh": 233, "dfghgfgh": 233, "do_someth": [233, 252, 330, 393, 395, 403, 418, 432, 717, 1028], "komplett": 233, "returnwert": [233, 1150], "sinnloser": 233, "weis": [233, 1171], "vorgenommen": 233, "obacht": 233, "140672599989840": 233, "140672464974720": 233, "hoechst": [233, 271], "rechnern": 233, "100000": [233, 249, 673, 907, 1105], "": [233, 249], "exponenti": [233, 1031, 1045], "__annotations__": [233, 243, 264, 285, 299, 1000], "__closure__": [233, 243, 264, 285], "__code__": [233, 243, 264, 285], "__delattr__": [233, 236, 239, 243, 261, 264, 285, 303], "__dir__": [233, 236, 243, 261, 264, 285, 303], "__format__": [233, 236, 239, 243, 261, 264, 285, 303], "__ge__": [233, 236, 239, 243, 261, 264, 285, 303, 1019], "__get__": [233, 243, 264, 285], "__getattribute__": [233, 236, 239, 243, 261, 264, 285, 303], "__globals__": [233, 243, 264, 285], "__gt__": [233, 236, 239, 243, 261, 264, 285, 303], "__hash__": [233, 236, 239, 243, 261, 264, 285, 303, 313], "__init_subclass__": [233, 236, 243, 261, 264, 285, 303], "__kwdefaults__": [233, 243, 264, 285], "__ne__": [233, 236, 239, 243, 261, 264, 285, 303, 1019], "__new__": [233, 236, 239, 243, 261, 264, 285, 303], "__qualname__": [233, 243, 264, 285], "__reduce__": [233, 236, 239, 243, 261, 264, 285, 303], "__reduce_ex__": [233, 236, 243, 261, 264, 285, 303], "__setattr__": [233, 236, 239, 243, 261, 264, 285, 303], "__sizeof__": [233, 236, 239, 243, 261, 264, 285, 303], "__subclasshook__": [233, 236, 243, 261, 264, 285, 303], "karteikart": 233, "my_formatted_person": 233, "123425041997": 233, "caros_str": 233, "joergs_str": 233, "0x7ff0dc48b490": 233, "next_po": 233, "tim": [233, 243, 326, 327], "ugli": [233, 243, 257, 266, 267, 280, 287, 288, 359, 364, 538, 755, 827, 832, 857, 858, 898, 997, 998], "flat": [233, 243, 411, 437, 438, 969, 970], "puriti": [233, 243], "silenc": [233, 243, 403, 845], "ambigu": [233, 243, 390, 425, 426, 427, 574, 674, 862], "refus": [233, 243, 252, 454, 775, 828, 899, 915, 974], "temptat": [233, 243], "dutch": [233, 243], "honk": [233, 243], "wahr": 233, "falsch": [233, 246, 1157], "kriegt": 233, "nachkommastellen": 233, "moeglichkeit": 233, "f_str": 233, "punkt_po": 233, "nachkomma_str": 233, "praezedenz": 233, "wandel": 233, "vorn": 233, "anhaengen": 233, "wuenschen": 233, "wuerd": 233, "appendleft": 233, "extendleft": 233, "relem": 233, "popleft": 233, "sorted_l": 233, "sorted_t": 233, "sorted_": 233, "subtext": 233, "ssissippi": 233, "140672464726576": 233, "copied_text": 233, "140672464784832": 233, "140672464784064": 233, "140672599989872": 233, "140672464751872": 233, "140672464768512": 233, "140672464594880": 233, "jkl": 233, "suesser": [233, 239, 246, 249, 252, 268], "sechser_gewuerfelt": 233, "n_tri": [233, 236, 271, 313, 1035], "versag": [233, 271], "eva": [233, 285, 1038], "xrang": [233, 1039], "0x7ff0dc48bed0": 233, "hann": 233, "gruess": 233, "gott": [233, 264, 353], "fill_in_us": 233, "scho": 233, "my_db": 233, "uniq_dict": 233, "konfigurierbaren": 233, "startwert": 233, "ausgibt": 233, "sqnum": 233, "0x7ff014b01820": 233, "xslx": 233, "yz": 233, "lret": 233, "ochwa": 233, "followup": [131, 234, 295, 298, 505, 1089], "unbalanc": 234, "geospati": 234, "gdal": 234, "sweigart": [234, 248, 290, 1100], "datenypen": 235, "libarari": 235, "chainmap": 235, "dequ": [235, 732], "suchalgorithmen": 235, "51139385": 236, "77397a312b47": 236, "50924272": [236, 239], "20210728": [236, 239, 1026], "eine_komplizierte_funkt": 236, "endeffekt": 236, "zusammenzuzaehlen": 236, "tarnt": 236, "vergeblich": 236, "komplexitaet": 236, "zahl_als_str": 236, "bledsinn": 236, "try_no": 236, "blahblahblah": 236, "cxyxyyyyxi": 236, "table_str": 236, "table_dict": 236, "139769175732912": 236, "139769175738624": 236, "satan_str": 236, "satan_int": 236, "result_of_print": 236, "result_of_evald_print": 236, "code_str": [236, 246], "compiled_cod": 236, "woswasi": [236, 243], "0x7f1e91eb42f0": 236, "philipp": [236, 243, 246, 264, 271, 285, 303, 313, 462, 537, 609, 621, 653, 655, 1089, 1091, 1095, 1097, 1117, 1118, 1119, 1121, 1122, 1123, 1124], "lastnma": 236, "0x7f1e8c0fe2e0": 236, "__abs__": [236, 243, 261], "__and__": [236, 243, 303, 1019], "__bool__": [236, 243, 261], "__ceil__": [236, 243, 261], "__divmod__": [236, 243, 261], "__float__": [236, 243, 261, 285], "__floor__": [236, 243, 261], "__floordiv__": [236, 243, 261, 1019], "__getnewargs__": [236, 239, 243, 261, 285], "__index__": [236, 243], "__int__": [236, 243, 261, 285, 302], "__invert__": [236, 243], "__lshift__": [236, 243, 1019], "__mod__": [236, 239, 243, 261, 285, 1019], "__mul__": [236, 239, 243, 261, 285, 1019], "__neg__": [236, 243, 261], "__or__": [236, 243, 303, 1019], "__pos__": [236, 243, 261], "__pow__": [236, 243, 261, 1019], "__rand__": [236, 243, 303], "__rdivmod__": [236, 243, 261], "__rfloordiv__": [236, 243, 261], "__rlshift__": [236, 243], "__rmod__": [236, 239, 243, 261, 285], "__rmul__": [236, 239, 243, 261, 285], "__ror__": [236, 243, 303], "__round__": [236, 243, 261], "__rpow__": [236, 243, 261], "__rrshift__": [236, 243, 1019], "__rshift__": [236, 243, 1019], "__rsub__": [236, 243, 261, 303, 307, 1019], "__rtruediv__": [236, 243, 261], "__rxor__": [236, 243, 303], "__sub__": [236, 243, 261, 303, 307, 1019], "__truediv__": [236, 243, 261, 1019], "__trunc__": [236, 243, 261], "__xor__": [236, 243, 303, 1019], "as_integer_ratio": [236, 243, 261], "bit_length": [236, 243], "conjug": [236, 243, 261], "denomin": [236, 243], "from_byt": [236, 243], "to_byt": [236, 243], "0x7f1e8c0b3130": 236, "int_list": 236, "0x7f1e8c0fe340": 236, "0x7f1e8c0fe760": 236, "u1": 236, "u2": 236, "type_of_us": 236, "scrambl": 236, "hansj\u00f6rg": [236, 444], "gr\u00f6jsnah": 236, "class_str": 236, "1997": [236, 246, 1025, 1089, 1091, 1095, 1097], "0x7f1e8c1c2e50": 236, "joleckmi": 236, "cmdline": 237, "excess": [237, 393], "provocantli": 237, "pybai": [237, 306, 1100], "suchzeit": 238, "everywher": [238, 253, 423, 438, 454, 664, 814, 952, 1038], "d_as_str": 239, "received_d": 239, "1939": 239, "145415": 239, "bytes_or_buff": [239, 285], "expos": [239, 285, 552, 638, 833, 899, 907, 908, 942], "strict": [239, 259, 285, 303, 459, 473, 480, 494, 508, 560, 755, 1049, 1129], "__contains__": [239, 285, 303], "format_spec": [239, 264, 285], "getattr": [239, 243, 264, 285, 1013], "__getitem__": [239, 285, 1121, 1122], "__iter__": [239, 285, 303, 1004], "__len__": [239, 285, 303], "casefold": [239, 285], "caseless": [239, 285], "fillchar": [239, 285], "pad": [239, 285, 1045], "occurr": [239, 285, 367], "codec": [239, 246, 249, 285, 291, 307, 313, 1113], "unicodeencodeerror": [239, 246, 249, 264, 285, 291, 307, 999, 1113], "xmlcharrefreplac": [239, 285], "register_error": [239, 285], "suffix": [239, 285], "expandtab": [239, 264, 285, 313], "tabsiz": [239, 285], "lowest": [239, 285, 387, 393, 962, 963, 1050], "format_map": [239, 285], "isalnum": [239, 285, 1046], "alphabet": [239, 285, 367, 422, 444, 846, 1113], "isascii": [239, 285], "007f": [239, 285], "isdecim": [239, 285], "iskeyword": [239, 249, 285], "isnumer": [239, 285], "isprint": [239, 285, 367, 395], "printabl": [239, 285, 367, 999], "istitl": [239, 285], "uncas": [239, 285], "pq": [239, 285], "ljust": [239, 285], "removeprefix": [239, 285], "removesuffix": [239, 285], "rindex": [239, 285, 1046], "rpartit": [239, 285], "discard": [239, 285, 303, 426, 572, 573, 710, 844, 845], "splitlin": [239, 285], "keepend": [239, 285], "swapcas": [239, 285], "titlecas": [239, 285], "lookuperror": [239, 264, 285, 999], "untouch": [239, 285, 802], "zfill": [239, 285], "maketran": [239, 285], "numerischen": 239, "ecma": 239, "3rd": [239, 761], "interchang": [239, 642, 724, 1113], "marshal": 239, "pickl": [239, 243], "simplejson": 239, "foo": [239, 271, 281, 285, 303, 307, 313, 532, 673, 706, 724, 736, 999, 1040], "baz": 239, "u1234": 239, "sort_kei": 239, "getvalu": 239, "compact": [239, 393], "mydict": 239, "obj": [239, 264, 307, 500, 770, 771, 780, 1013, 1021, 1121, 1122], "x08ar": 239, "as_complex": 239, "dct": 239, "__complex__": 239, "object_hook": 239, "2j": 239, "parse_float": 239, "encode_complex": 239, "serializ": 239, "1j": 239, "jsonencod": 239, "iterencod": 239, "scanner": 239, "jsondecodeerror": 239, "jsondecod": 239, "msg": [239, 252, 313, 378, 463, 467, 966, 968, 969, 973, 995, 998, 999], "unformat": 239, "lineno": [239, 246, 313], "colno": 239, "delattr": [239, 243, 264], "setattr": [239, 243, 264, 1013], "__setstate__": [239, 243], "with_traceback": [239, 243], "tb": [239, 243], "__traceback__": [239, 243], "__cause__": [239, 243], "__context__": [239, 243], "__suppress_context__": [239, 243], "parse_int": 239, "parse_const": 239, "object_pairs_hook": 239, "nan": [239, 271, 1105, 1117], "num_str": 239, "_w": 239, "0x7f99fff1bb70": 239, "raw_decod": 239, "extran": 239, "skipkei": 239, "ensure_ascii": 239, "check_circular": 239, "allow_nan": 239, "recogn": [239, 588, 908, 1156], "sensibl": 239, "circular": 239, "recursionerror": [239, 264, 999], "compliant": [239, 1012], "item_separ": 239, "key_separ": 239, "_one_shot": 239, "chunk": [239, 335, 423, 796, 934, 1102, 1113], "bigobject": 239, "mysocket": 239, "fp": 239, "inf": 239, "complianc": 239, "ippolito": 239, "redivi": 239, "140299267714496": 239, "140299267930496": 239, "schweissparameter_aussi": 239, "strom_ma": 239, "200004": 239, "spannung_v": 239, "aufs_kabel": 239, "maschine_112": 239, "kabel": [239, 243], "vom_kabel": 239, "schweissparameter_eini": 239, "strom_a": 239, "hal": 239, "2c445fb3": 239, "6ca4": 239, "b9d9": 239, "7cfbbff55326": 239, "doesnt_exist": 239, "_a666": 239, "140299402960464": 239, "0b10000000000000000000000000000000000000000000000000000000000000000": [239, 243, 264, 281], "140299327492352": 239, "func_fals": 239, "func_tru": 239, "sex_opt": 239, "140298898107648": 239, "t_mit_einem_el": 239, "supi": 239, "squares_map": 239, "squares_set": 239, "numtri": 239, "even_numb": [239, 303], "mississppi": 239, "xxxx": 239, "nbin": [239, 246, 271, 285, 307], "ndaemon": [239, 246, 271, 285, 307], "nadm": [239, 246, 271, 285, 307], "nlp": [239, 246, 271, 285, 307], "nsync": [239, 246, 271, 285, 307], "nshutdown": [239, 246, 271, 285, 307], "nhalt": [239, 246, 271, 285, 307], "nmail": [239, 246, 271, 285, 307], "noper": [239, 246, 271, 285, 307], "ngame": [239, 246, 271, 285, 307], "nftp": [239, 246, 271, 285, 307], "nnobodi": [239, 246, 271, 285, 307], "napach": [239, 246, 271, 285, 307], "nsystemd": [239, 246, 271, 285, 307], "ntss": [239, 246, 271, 285, 307], "ndbu": [239, 246, 271, 285, 307], "npolkitd": [239, 246, 271, 285, 307], "navahi": [239, 246, 271, 285, 307], "nunbound": [239, 246, 271, 285, 307], "ndnsmasq": [239, 246, 271, 285, 307], "nnm": [239, 246, 271, 285, 307], "nusbmuxd": [239, 246, 271, 285, 307], "ngluster": [239, 246, 271, 285, 307], "nrtkit": [239, 246, 271, 285, 307], "npipewir": [239, 246, 271, 285, 307], "ngeoclu": [239, 246, 271, 285, 307], "nchroni": [239, 246, 271, 285, 307], "nsaslauth": [239, 246, 271, 285, 307], "nradvd": [239, 246], "nrpc": [239, 246, 271, 285, 307], "nqemu": [239, 246, 271, 285, 307], "nopenvpn": [239, 246, 271, 285, 307], "ncolord": [239, 246, 271, 285, 307, 924], "nrpcuser": [239, 246, 271, 285, 307], "nabrt": [239, 246, 271, 285, 307], "nflatpak": [239, 246, 271, 285, 307], "ngdm": [239, 246, 271, 285, 307], "ngnome": [239, 246, 271, 285, 307], "nvboxadd": [239, 246, 271, 285, 307], "nsshd": [239, 246, 271, 285, 307], "ntcpdump": [239, 246, 271, 285, 307], "njfasch": [239, 246, 271, 285, 307], "nmosquitto": [239, 246, 271, 285, 307], "nsomeon": [239, 246], "1001": [239, 246, 249, 617, 618, 619, 620, 847, 859, 890, 919], "move_to_end": 239, "thermometera": 239, "thermometerb": 239, "get_average_temperatur": 239, "th_list": 239, "ipykernel_9164": 239, "859664274": 239, "2942790015": 239, "0x7fac83797be0": 239, "basisklass": 239, "level2_1": 239, "l21": 239, "level2_2": 239, "level3": 239, "jedi": 239, "blueey": 239, "droid": 239, "r2d2": 239, "derivednoctor": 239, "dnoctor": 239, "derivedctorcallingsup": 239, "derivedctorcallingbasector": 239, "__firstnam": 239, "__lastnam": 239, "_user__firstnam": 239, "_user__lastnam": 239, "lightsab": 239, "padawan": 239, "arithmeticerror": [239, 264, 999], "waaah": 239, "abgebrannt": 239, "puh": 239, "intakt": 239, "is_even": [239, 243, 313, 677, 678, 679, 680], "0x7fac81f52df0": 239, "0x7fac81cb5700": 239, "progamm": 239, "tumpfback": 239, "och": 239, "umpfback": 239, "rt": [239, 755, 779, 783, 793, 804, 806, 811, 814, 817, 820, 823, 898], "wholefil": 239, "notepad": 240, "betreiben": [240, 1157, 1164, 1165], "unterschiedlichen": 240, "sinnvol": 240, "umgebungen": 240, "unausweichlich": 240, "installationsverzeichni": 240, "verzeichniss": [240, 1159], "ausf\u00fchren": 240, "hernimmt": 240, "wei\u00df": 240, "rennt": 240, "ordereddict": 241, "__mro__": 241, "udemi": 241, "successor": [242, 387], "repeatedli": [242, 617, 1112], "kantenlaeng": 243, "ipykernel_101004": 243, "2437887948": 243, "0x10": [243, 246, 451], "0b1111111111111111111111111111111111111111111111111111111111111111": [243, 264, 281, 285, 313], "1267650600228229401496703205381": 243, "735611673": 243, "ndigit": [243, 264, 313, 366], "0b101": 243, "0b100": [243, 246], "register_statu": 243, "0b1001000": 243, "0b00001000": 243, "strom": [243, 313], "liegt_strom_an": 243, "0b00111110": 243, "ever": [243, 303, 442, 451, 482, 841, 907, 1030, 1153], "deadbeef": [243, 519, 901], "gross": 243, "doktor": 243, "jawui": 243, "akademik": 243, "ndef": [243, 313], "tdef": [243, 264], "geh": 243, "hochkomplex": 243, "verendet": 243, "euler": 243, "sche": 243, "dokumentiern": 243, "koennt": 243, "varianc": 243, "fmean": 243, "geometric_mean": 243, "harmonic_mean": 243, "harmon": 243, "median": 243, "median_low": 243, "median_high": 243, "median_group": 243, "50th": 243, "percentil": 243, "multimod": 243, "quantil": 243, "centr": 243, "nearest": [243, 485, 1107], "doctest": 243, "ellipsi": [243, 264], "8333333333": 243, "8333": 243, "spread": 243, "pvarianc": 243, "pstdev": 243, "stdev": [243, 962, 964], "38961843444": 243, "recalcul": 243, "statisticserror": 243, "normaldist": 243, "x1": 243, "unchang": [243, 661, 993], "jointli": 243, "rescal": 243, "cdf": 243, "cumul": [243, 436], "inv_cdf": 243, "coeffici": 243, "ovl": 243, "agreement": 243, "densiti": 243, "8035050657330205": 243, "dx": 243, "quartil": 243, "decil": 243, "zscore": 243, "score": 243, "from_sampl": 243, "readonli": 243, "dataset": [243, 1103, 1105, 1118, 1120, 1122, 1124], "subcontrari": 243, "reciproc": 243, "quantiti": [243, 275, 1107], "earn": 243, "5625": 243, "midpoint": 243, "estim": 243, "nomin": 243, "taught": [243, 1023, 1158], "aabbbbbbbbcc": 243, "aabbbbccddddeeffffgg": 243, "986893273527251": 243, "0th": 243, "100th": 243, "xbar": 243, "0810874155219827": 243, "3720238095238095": 243, "01875": 243, "gesamter_gruss": 243, "excelsheet": 243, "hinters": 243, "gabali": 243, "helen": 243, "fischer": 243, "sssklndkfgv": 243, "fosvh": 243, "worl": [243, 246, 1037], "lowr": 243, "dlrow": [243, 1037], "olleh": [243, 1037], "even_numbers_fun": 243, "even_numbers_gen": 243, "evennum": 243, "even_filt": 243, "tausend": 243, "1234250497": [243, 246, 249, 252, 462, 469, 621], "1234250597": 243, "users_json_str": 243, "liest": 243, "kontrah": 243, "verwandelt": 243, "gelesenes_ding_wieder_als_dict": 243, "schatz": 243, "erich": 243, "koxi": 243, "hatkeinenwert": 243, "fn": [243, 427, 444, 753, 1124], "ul": [243, 381], "ln": [243, 427], "1st": [244, 1142], "einschub": 244, "filterketten": 244, "datensatz": 244, "letzten": 244, "recapitul": 245, "naeherungsverfahren": 246, "addieren": 246, "140606563548752": 246, "wirklich": [246, 1148], "0o10": 246, "teilbar": 246, "00001": 246, "abd": [246, 587], "i1": [246, 281], "140606428182128": 246, "140606428182896": 246, "2345010101": 246, "elizabeth": [246, 1089, 1091, 1095, 1097, 1108], "1901": 246, "evi": 246, "maxim": [246, 442, 908], "wuerfeln": 246, "freuen": 246, "sechser": 246, "faellt": 246, "jammern": 246, "versuch_numm": 246, "versuchen": 246, "jammert": 246, "hlo": [246, 1037], "output_list": [246, 1082], "nullt": 246, "34567654567": 246, "gsd": 246, "another_t": 246, "symmetisch": 246, "netzwerkkommunik": 246, "request_to_send": 246, "request_str_to_send": 246, "1651046407": 246, "3633313": 246, "cabl": [246, 833], "request_str_from_c": 246, "request_from_c": 246, "1651046335": 246, "8477345": 246, "139909434561408": 246, "139909544402512": 246, "139909544402544": 246, "139909543772528": 246, "139909433666288": 246, "roo": [246, 285, 893], "xf6": [246, 249, 291, 1031, 1113], "joerg_latin": 246, "xf6rg": [246, 249, 291, 303, 307, 1113], "j\u0456rg": [246, 249, 291, 307, 1113], "cyclic": 248, "140616191009600": 249, "140616191012720": 249, "140116274372176": 249, "0x7f6f5cc2de50": 249, "0x7f6f5cc2df30": 249, "18446744073709551617": 249, "multi_dict": 249, "ipykernel_189565": 249, "1743780635": 249, "140115753096128": 249, "ntri": 249, "bytes_joerg": 249, "bytes_joerg_iso_latin_1": 249, "bytes_joerg_utf_32": 249, "xff": [249, 291, 307], "xfe": [249, 291, 307], "x00": [249, 291, 307, 906], "x00j": [249, 291], "x00r": [249, 291], "x00g": [249, 291], "bytes_joerg_utf_16": 249, "xfej": 249, "bytes_joerg_utf_8": 249, "xc3": [249, 285, 291, 307, 1031, 1113], "xb6rg": [249, 285, 291, 307, 1113], "iso_latin_1": 249, "russian": 249, "bytes_received_by_russian": 249, "2435": 249, "010d": 249, "0000000666": 249, "ssi": 249, "garbag": [249, 437, 444, 460, 719, 731, 908, 935, 997], "ipykernel_4000": 249, "3227798639": 249, "ahja": 249, "24000": 249, "24500": 249, "25000": 249, "25500": 249, "26000": 249, "26500": 249, "__del__": 249, "whe": 249, "13397": 249, "116985": 249, "120725": 249, "118110": 249, "0x7fe3a392aa30": 249, "test_person_bas": 251, "pluggi": [251, 269, 1088, 1133], "rootdir": [251, 269, 802, 1088, 1133], "test_persondb_bas": 251, "test_pytest_demo": 251, "xfail": [251, 1133], "test_persondb": 251, "test_duplicate_svnr": 251, "test_update_sunnycas": 251, "test_update_notexist": 251, "test_update_exact_dupl": 251, "former": [251, 1040], "persondb": 251, "sqlite": [251, 448, 1056, 1109], "ics_demand": 251, "maco": [251, 335, 340], "woe": 251, "homebrew": 251, "brew": 251, "flaviocop": 251, "str_mit_666": 252, "140240419976192": 252, "140240419593568": 252, "aclass": 252, "almostempti": 252, "beenther": 252, "kuckucksei": 252, "chirp": 252, "some_bullshit": 252, "bad_thing_happen": 252, "do_some_bullshit": 252, "boah": [252, 313], "python_cod": 252, "a_global_vari": 252, "globale_vari": 252, "140240513015376": 252, "140240513014256": 252, "140240419270768": 252, "140240419271792": 252, "storesanintegerandmodifiesit": 252, "the_int": 252, "my_int": 252, "saiami": 252, "storesalistandmodifiesit": 252, "the_list": 252, "append_someth": 252, "salami": 252, "compute_squar": 252, "satanicerror": 252, "jess": 252, "invalidsvnr": 252, "rex_lin": 252, "json_str": [252, 1096], "python_l": 252, "0x7f8c0551f490": 252, "behandlung": 254, "kurzer": 254, "reicht": [254, 1148], "unwichtig": 254, "weggelassen": 254, "\u00fc": [254, 1113], "jeden": 254, "teilnehmer\u00fcbung": 254, "kernsprach": 254, "rvalu": [254, 276, 316, 563, 668, 700, 710, 716, 719, 720, 721, 722, 725, 733, 752, 754, 755, 1152, 1153, 1154], "constexpr": [254, 255, 256, 276, 278, 316, 700, 710, 734, 753, 754, 755, 1153], "uniform": [254, 255, 256, 258, 315, 442, 462, 564, 596, 616, 617, 660, 700, 709, 752, 754, 755, 1012, 1153], "initialisierung": [254, 1169], "infer": 254, "speichermodel": 254, "atomar": [254, 1151, 1169], "standardbibliothek": 254, "regu\u00e4r": 254, "trait": 254, "zufallszahlen": 254, "zeitbibliothek": 254, "sprachsyntax": 254, "deduct": [254, 675, 677], "erweiterungen": 254, "ge\u00e4ndert": 254, "definitionen": 254, "bibliothek": 254, "zusatzvari": 254, "constinit": 254, "modularisierung": [254, 336, 1150], "versionierung": 254, "routinen": 254, "synchronisierung": 254, "werkzeug": [254, 1150, 1157, 1159, 1164, 1167], "kalend": [254, 1147], "zeitzonen": 254, "zus\u00e4tz": 254, "chrono": [254, 255, 256, 258, 267, 315, 467, 660, 721, 732, 733, 737, 754, 755], "initializer_list": [255, 256, 258, 315, 316, 463, 464, 491, 492, 660, 662, 700, 754, 755], "handwrit": [255, 256, 258, 315, 700, 716, 754, 755], "weak_ptr": [255, 256, 258, 315, 316, 716, 752, 754, 755], "boilerpl": [255, 256, 258, 294, 310, 315, 316, 449, 700, 701, 702, 720, 754, 755, 978, 1149], "condition_vari": [255, 256, 258, 267, 315, 733, 754, 755, 1153], "emplace_back": [255, 256, 596], "cref": [255, 256], "interoper": [256, 258, 276, 278], "wazoo": [256, 258, 276, 278], "anviron": [256, 258], "submodul": [256, 258, 517, 580], "chdir": [256, 258], "gtest_main": [256, 467, 516, 518, 519, 539, 542, 554, 580, 718, 719, 1139, 1144], "dummy_suit": 256, "sticki": [257, 266, 267, 287, 288, 335, 340, 755, 832, 857, 898], "insod": 258, "lvalu": [258, 315, 316, 668, 669, 672, 700, 710, 716, 720, 725, 733, 752, 754, 755], "afterword": [258, 315, 316, 669, 700, 754, 755], "ain": [258, 442, 1027], "singleton": [259, 459, 460, 466, 480, 494, 508, 560, 755, 1156], "inflex": [259, 362, 459, 473, 480, 486, 487, 494, 508, 560, 755], "proxi": [259, 277, 279, 280, 301, 305, 341, 459, 466, 468, 469, 480, 494, 508, 560, 755, 1128, 1156], "serverthread": [259, 484, 498], "my_si": [261, 1007], "function_returns_two_valu": 261, "140134238766608": 261, "sizeof": [261, 366, 376, 387, 408, 415, 416, 420, 423, 543, 555, 567, 595, 661, 723, 902, 920, 924, 925, 926, 932, 933, 934, 935, 960, 966, 969, 973, 1039], "__getformat__": 261, "__setformat__": 261, "fromhex": 261, "0b0010": 261, "0b1001": 261, "key_list": 261, "key_tupl": 261, "evil_list": 261, "evil_list_2": 261, "neinem": 261, "nviel": 261, "doze_path": [261, 264], "compiled_regex": 261, "l_json": 261, "l_json_sent": 261, "received_data": 261, "0x7f73869f06c0": 261, "create_avg_item": 261, "ninetynin": 261, "koppel": 263, "netzwerk": [263, 336, 1157, 1167, 1170], "condens": [263, 443], "nprint": 264, "noption": 264, "nfile": 264, "nsep": 264, "nend": 264, "nflush": 264, "forcibli": 264, "didact": [264, 353, 356, 579, 581, 582, 1156], "fullnam": [264, 271, 1016, 1020], "nerst": 264, "nzweit": [264, 330], "andere_list": 264, "neue_list": 264, "140323934455312": 264, "140323934455344": 264, "140323934455376": 264, "140323852147712": 264, "140323933649904": 264, "140323833601584": 264, "frozenset": [264, 281, 302], "__builtins__": [264, 285, 1000], "gr\u00fc\u00df": 264, "nocheinprogramm": 264, "ocheinprogramm": 264, "dfghgfdfghj": 264, "jhghgh": 264, "matchstr": 264, "compiled_match": 264, "tprint": 264, "num_ss": 264, "isi": [264, 521, 537, 1117], "strippeditem": 264, "yet_another_d": 264, "s3": [264, 271, 481], "s4": 264, "isdisjoint": [264, 271, 303, 1049], "nnoteworthi": 264, "nil": 264, "__package__": [264, 328, 1000], "__loader__": [264, 328, 1000], "__spec__": [264, 328, 1000], "modulespec": 264, "loader": [264, 432, 450, 455, 976, 993, 1167], "__build_class__": 264, "__import__": 264, "dont_inherit": 264, "_feature_vers": 264, "divmod": 264, "raw_input": 264, "ipkernel": 264, "ipythonkernel": 264, "0x7f9fb16abcd0": 264, "class_or_tupl": 264, "aiter": 264, "async_iter": 264, "anext": 264, "oct": [264, 884, 906, 908], "pow": [264, 572, 573, 723], "exp": [264, 496], "notimpl": [264, 303, 307, 1019], "memoryview": 264, "__debug__": 264, "stopasynciter": [264, 999], "generatorexit": [264, 999], "keyboardinterrupt": [264, 280, 999], "importerror": [264, 999], "environmenterror": [264, 1128], "ioerror": [264, 1134], "eoferror": [264, 999], "notimplementederror": [264, 999], "unboundlocalerror": [264, 999], "indentationerror": [264, 999], "taberror": [264, 999], "unicodeerror": [264, 999], "unicodedecodeerror": [264, 307, 313, 999], "unicodetranslateerror": [264, 999], "floatingpointerror": [264, 999], "overflowerror": [264, 999], "systemerror": [264, 999], "referenceerror": [264, 999], "memoryerror": [264, 999], "buffererror": [264, 999], "userwarn": [264, 999], "encodingwarn": [264, 999], "deprecationwarn": [264, 999], "pendingdeprecationwarn": [264, 999], "syntaxwarn": [264, 999], "runtimewarn": [264, 999], "futurewarn": [264, 999, 1117], "importwarn": [264, 999], "unicodewarn": [264, 999], "byteswarn": [264, 999], "resourcewarn": [264, 999], "connectionerror": [264, 999], "blockingioerror": [264, 999], "brokenpipeerror": [264, 999], "childprocesserror": [264, 999], "connectionabortederror": [264, 999], "connectionrefusederror": [264, 999], "connectionreseterror": [264, 999], "fileexistserror": [264, 999], "isadirectoryerror": [264, 999], "notadirectoryerror": [264, 999], "interruptederror": [264, 999], "processlookuperror": [264, 999], "timeouterror": [264, 999], "closefd": 264, "beopen": 264, "1995": [264, 470, 1089, 1091, 1095, 1097], "nation": [264, 906], "1991": [264, 1025], "sticht": 264, "centrum": 264, "amsterdam": [264, 1025], "credit": [264, 773, 1026], "cwi": 264, "cnri": 264, "zope": 264, "cast": [264, 387, 543, 631, 638, 761], "execfil": 264, "_pydev_imp": 264, "_pydev_execfil": 264, "glob": [264, 419, 890, 947, 995, 1010, 1140], "runfil": 264, "_pydev_bundl": 264, "pydev_umd": 264, "wdir": 264, "__ipython__": 264, "exclud": [264, 438, 565], "transient": 264, "display_id": 264, "get_ipython": 264, "interactiveshel": 264, "zmqshell": 264, "zmqinteractiveshel": 264, "0x7f9fb1516200": 264, "config_fil": 264, "srcdir": 264, "dstdir": 264, "dst": [264, 382, 432, 521, 562, 581, 590, 591, 597, 1050], "untrust": 267, "lan": 267, "programmat": [267, 488, 899, 907, 955, 975, 1125], "stty": 267, "termio": 267, "ioctl_tti": 267, "setseri": 267, "tty": [267, 833, 888, 960, 966, 990], "tty_io": 267, "bidirection": 267, "nake": 267, "tiocgseri": 267, "tiocsseri": 267, "async_low_lat": 267, "cfmakeraw": 267, "ttyusb0": [267, 833], "low_lat": 267, "serial_struct": 267, "bidir": 267, "advantec": 267, "nonetheless": [267, 270, 273, 302, 677, 1140], "mycat": 267, "mimick": [267, 718], "make_realtim": 267, "interfaceri": 267, "cif": 267, "samba": 267, "automationadmin": 267, "gsc": 267, "pd": [268, 269, 271, 275, 303, 444, 1103, 1105, 1117, 1118, 1119, 1121, 1122, 1123, 1124], "read_csv": [268, 269, 275, 303, 307, 313, 444, 1103, 1105], "txn": 268, "iso8859": 268, "time_book": [268, 269, 444], "time_valuta": [268, 269, 444], "at66666666666666": 268, "bezahlung": [268, 269, 271, 444], "kart": [268, 269, 271, 444], "eur": [268, 269, 444], "95111243": [268, 444], "abbuchung": [268, 444], "onlinebank": [268, 444], "gutschrift": 268, "000000144919": 268, "339099446722187": 268, "000": [268, 303, 307, 313, 444, 861, 899], "card_pay": 268, "filt": 268, "9325008697": 268, "339099446790254": 268, "og": [268, 432], "237811001182": 268, "auszahlung": 268, "200075787001": 268, "tzb": 268, "anl": 268, "347159strom": 268, "200004871820": 268, "200004876265": 268, "200004848862": 268, "200004871863": 268, "dauerauftrag": 268, "qsnng6xau": 268, "00121672661": 268, "120016487112": [268, 444], "bx": 268, "000009219": 268, "entgelt": 268, "nichtdurchf\u00fchrung": 268, "032300005522384": 268, "saldo": 268, "messtechnik": 268, "602674240071": 268, "0004325259000023": 268, "oeamtc": 268, "mitgliedschaft": 268, "re_liv": 268, "billa": [268, 271, 444], "rew": 268, "dankt": [268, 269, 271, 444], "pipe_stag": 269, "max_colwidth": 269, "max_column": 269, "max_row": 269, "039": 269, "consolut": 269, "insuffici": [269, 674], "categor": [269, 443, 1107], "fuction": 269, "filt_uncat": 269, "uncat_row": 269, "unspecif": [269, 346, 780], "useless": [269, 668, 726, 846, 893, 949, 1021], "food": [269, 275], "luxuri": 269, "categorize_card_pay": 269, "jet": 269, "uncertainti": 269, "categorize_v1": 269, "categorize_v2": 269, "secondari": 269, "test_categori": [269, 444], "test_bas": [269, 1088], "000009258": 269, "k002": [269, 444], "impos": [270, 273], "hurt": [270, 273, 381], "strength": [270, 273, 408, 1023], "overengin": [270, 273, 381, 442, 443, 1148, 1156], "140480285361680": 271, "0xffffffffffffffff": [271, 291, 307], "0x10000000000000000": [271, 291, 307], "140479638276224": 271, "140480203220736": 271, "140480210406176": 271, "7940943354778932823": 271, "0x7fc4189e7c90": 271, "28800": 271, "237988": 271, "produce_dai": 271, "374557": 271, "l_mal_2": 271, "140480285361712": 271, "140479638477760": 271, "140479638427520": 271, "l4": 271, "l5": 271, "140480202528192": 271, "140479638428736": 271, "140480203212992": 271, "l6": 271, "140479598069936": 271, "is_old": 271, "ipykernel_370861": 271, "4290492544": 271, "abc123": 271, "0x7fc4189e5030": 271, "yyi": [271, 313], "lichtenberg": [271, 462, 621, 653, 655, 1089, 1091, 1095, 1097, 1117, 1118, 1119, 1121, 1122, 1123, 1124], "persons2": [271, 1117, 1118], "set_index": [271, 1122], "sort_valu": 271, "inplac": [271, 275, 915, 1118], "flt": [271, 1119], "isin": [271, 1119], "reset_index": 271, "dropna": 271, "value_count": [271, 275], "int64": [271, 275, 1124], "conversiosn": 272, "9am": 273, "woven": [273, 277], "pipelin": [273, 353, 827, 842, 845, 846, 895, 909, 988], "accountid": 275, "accountdescript": 275, "accountparentid": 275, "storeid": 275, "storedescript": 275, "locationid": 275, "locationdescript": 275, "productid": 275, "productdescript": 275, "sales_managerid": 275, "dateyear": 275, "datequart": 275, "datemonth": 275, "datedai": 275, "categoryvers": 275, "categorycategori": 275, "categorytyp": 275, "valueunit": 275, "original_sales_pric": 275, "sale": 275, "st43": 275, "franchescini": 275, "ct14": 275, "salem": 275, "pd23": 275, "ipa": 275, "sm1": 275, "20144": 275, "201412": 275, "1779": 275, "763910": 275, "usd": 275, "st35": 275, "pd2": 275, "pepsi": 275, "sm4": 275, "201410": 275, "957113": 275, "st98": 275, "walter": 275, "pd24": 275, "amber": 275, "20142": 275, "201406": 275, "449395": 275, "st188": 275, "arrowhead": 275, "ct1": 275, "pd19": 275, "sm8": 275, "20164": 275, "201611": 275, "078689": 275, "st107": 275, "spire": 275, "ct5": 275, "san": 275, "jose": 275, "pd15": 275, "juic": 275, "sm5": 275, "20154": 275, "201512": 275, "303679": 275, "quantity_sold": 275, "sold": 275, "st4": 275, "gstore": 275, "ct13": 275, "portland": 275, "pd26": 275, "wine": 275, "000000": [275, 1105], "1069": 275, "st49": 275, "bai": 275, "depot": 275, "ct4": 275, "sacramento": 275, "pd27": 275, "20151": 275, "201501": 275, "592904": 275, "discount": 275, "st36": 275, "pricelow": 275, "arena": [275, 738], "ct10": 275, "reno": 275, "pd22": 275, "sm3": 275, "20162": 275, "201605": 275, "4351": 275, "045830": 275, "1071": 275, "st7": 275, "street": [275, 868], "pd16": 275, "7905": 275, "590606": 275, "pd12": 275, "lemonad": 275, "20153": 275, "201507": 275, "1073": 275, "modified_model": 275, "sales_managerdescript": 275, "janet": 275, "buri": 275, "nanci": 275, "miller": 275, "setp": 275, "nan_field": 275, "bitfield": 275, "bitfi": 275, "nan_column": 275, "gabriel": [275, 706], "walton": 275, "carl": 275, "jjjjj": 275, "ref_t": 275, "datetime64": 275, "damn": 275, "ref_2015_12_04": 275, "flt_before_2015_12_04": 275, "rows_before_2015_12_04": 275, "st119": 275, "ct2": 275, "francisco": 275, "pd11": 275, "orang": [275, 1042], "pulp": 275, "sm7": 275, "kiran": 275, "raj": 275, "201503": 275, "226847": 275, "13627": 275, "793342": 275, "3427": 275, "896898": 275, "15569": 275, "353983": 275, "float64": [275, 307, 313, 1105], "1957": 275, "740301": 275, "572676": 275, "686587": 275, "289381": 275, "flt_product_pd2": 275, "flt_2015": 275, "flt_only_sold": 275, "flt_combin": 275, "st139": 275, "farlo": 275, "ct15": 275, "eugen": 275, "sm11": 275, "jame": 275, "frank": 275, "201511": 275, "st178": 275, "rai": 275, "ct8": 275, "beverli": 275, "hill": 275, "201508": 275, "facet": [276, 278, 616], "rich": [276, 278, 1118, 1127], "toolset": [276, 278, 634], "conceptu": [276, 278, 433, 773, 780, 918], "undergon": [276, 278], "revolut": [276, 278], "odr": [276, 706], "explor": [276, 907], "rodata": [276, 993], "unspecifi": [276, 387, 474, 546, 973, 974], "bookkeep": [277, 443], "fewer": 277, "love": [277, 1095], "closer": 277, "augment": [277, 802, 1114], "test_blah": 277, "monkeypatch": [277, 279, 280, 295, 301, 302, 305], "contextlib": 277, "chatgpt": 278, "ludwig": 278, "registri": [278, 527], "memleak": 278, "jason": [279, 280, 301], "brownle": [279, 280, 301], "contriv": [279, 280, 301, 465, 1000, 1035], "subthread": [279, 280], "introductori": [279, 280, 301, 306, 755, 898, 939, 1106, 1107, 1153], "mindset": [279, 280, 301, 305, 802], "develp": 279, "10am": 280, "reopen": 280, "drei_millionen_int": 281, "3_000_000": 281, "odd_numb": [281, 1004], "odd_numbers_func": 281, "ret_num": 281, "0x7f32ccc4c610": 281, "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000": [281, 330], "139855258515840": 281, "139856078033344": 281, "139856078226432": 281, "139856160540176": 281, "i3": 281, "i4": 281, "nope": [281, 955], "0101010101010": 281, "bash_logout": [281, 884], "bash_profil": [281, 884], "thunderbird": [281, 864, 884], "gnupg": [281, 884], "hst": 281, "gitconfig": [281, 884], "pki": [281, 884], "daham": 281, "20230403": 281, "222915": 281, "bash_histori": [281, 884], "python_histori": [281, 884], "lesshst": [281, 884], "139855258795072": 281, "139855260513728": 281, "139856085569920": 281, "doppelt": 281, "gemoppelt": 281, "trag": 281, "exakt": 281, "paarweis": 281, "read_lines_of_fil": 281, "0x7f32c7d8d390": 281, "nohead": [284, 1094, 1095, 1097], "userdb_csv": [284, 1095, 1096, 1097], "interleav": 284, "dosometh": 285, "0x7fe7fbf80df0": 285, "140634424624656": 285, "140634424623536": 285, "0o644": 285, "0b01110101": 285, "setting_blah": 285, "setting_foo": 285, "config_context": 285, "140634341074320": 285, "140634424624688": 285, "140634341076688": 285, "140634341077776": 285, "140634343012864": 285, "140634341099856": 285, "ipykernel_61373": 285, "1125713270": 285, "1234567876543234567654321234565432123456": 285, "140634281233520": 285, "140634341798400": 285, "140634341995008": 285, "140634341576640": 285, "140634341773312": 285, "140634281802304": 285, "global_vari": 285, "bar2": 285, "bar3": 285, "bar4": 285, "bar5": 285, "bar6": 285, "0x7fe7f869b7d0": 285, "0x7fe7f869b920": 285, "0x7fe7f869bbc0": 285, "punctuat": 285, "abcabcabcabcabc": [285, 313], "rex": 285, "cba": [285, 625], "another_d": 285, "rb": 285, "30000": 285, "coreutil": 288, "autopoint": 288, "rpm": [288, 455], "fcntl": [288, 906, 924, 928, 932, 933, 934, 935, 940, 943, 966, 969, 973], "luciano": [290, 336, 337, 1100], "ramalho": [290, 336, 337, 1100], "140640823526928": 291, "0x7fe97e53c610": 291, "140640823526960": 291, "140640741310912": 291, "140640741034048": 291, "140640741341184": 291, "wasjetzt": 291, "140640722624768": 291, "140640722715136": 291, "l1_copi": 291, "my_funky_gener": 291, "meine_dumme_sequenz": 291, "0x7fe9785083a0": 291, "0x7fe98c21bce0": 291, "greeter": [291, 446, 447, 448, 452, 453, 992], "0x7fe9796976d0": 291, "140640740502720": 291, "140640722823952": 291, "140640741119552": 291, "l_copi": 291, "140640741312256": 291, "140640722734080": 291, "140640722760768": 291, "140640722739712": 291, "140640741402496": 291, "owher": 291, "0000042": [291, 1045], "bled": 291, "xfc": [291, 307, 1031, 1113], "xdfe": [291, 307, 1113], "gr\u045c\u043fe": [291, 307, 1113], "\u795d\u597d": [291, 307], "big5": [291, 307, 1113], "xaf": [291, 307], "xac": [291, 307], "xa6n": [291, 307], "unterschrift": 291, "illeg": [291, 424, 1113], "multibyt": [291, 370, 1113], "xe7": [291, 307, 1113], "xa5": [291, 307, 1113], "x9d": [291, 307, 1113], "xe5": [291, 307, 1113], "xbd": [291, 307, 1113], "incorpor": [293, 309, 1155], "tradition": [293, 309, 710, 901, 1022, 1155], "lexer": [293, 309, 1155], "aris": [293, 309, 473, 1155], "compili": [293, 309, 1155], "rant": [294, 310, 449, 755, 1123], "blacklist": [294, 310, 448, 449, 454, 457, 755], "acquaint": [295, 298], "data_to_send": 296, "data_receiv": 296, "user_receiv": [296, 1096], "140048588115008": 296, "140048588341376": 296, "d_str": [299, 640], "uebertragen": 299, "d_str_receiv": 299, "d_receiv": 299, "ala": [302, 305, 487, 578, 858, 924, 964, 1128], "frozendict": [302, 303], "filesensor": 302, "sergei": 302, "test_acquisition_loop": 302, "test_mock_csv_sink": 302, "mymockedth": 302, "nonloc": [302, 1041], "millcelsiu": 302, "acquisition_loop_util": 302, "ont": 302, "necessarili": [302, 408, 438, 595, 753, 788, 802, 839, 919, 1017, 1135, 1142], "10m": [302, 964], "acquir": [302, 344, 734, 807, 949, 954, 963], "slower": [302, 432, 839], "packet": [302, 484, 796, 902, 925, 958], "transmit": 302, "datatim": 302, "read_measur": 302, "fourier": 302, "fft": 302, "011": [302, 313], "ifft": 302, "print_": 303, "0x7f0b165fdf00": 303, "dos_path": [303, 330], "vernuenftigen": 303, "__class_getitem__": 303, "__iand__": 303, "__ior__": 303, "__isub__": 303, "__ixor__": 303, "difference_upd": 303, "intersection_upd": 303, "issubset": 303, "issuperset": 303, "symmetric_differ": 303, "symmetric_difference_upd": 303, "hallohallohallohallohallo": 303, "139685905188368": 303, "139685905188400": 303, "0x7f0b14487be0": 303, "fasschingbau": 303, "139685602274352": 303, "139685561461616": 303, "139685561690240": 303, "139685561316032": 303, "139685595970464": 303, "139685561151488": 303, "30000000": 303, "my_iter": 303, "my_print": [303, 1022], "my_arg": [303, 997], "even_squar": [303, 313], "squares_fun": 303, "squares_gen": 303, "0x7f0aefb94f20": 303, "0x7f0aefb955b0": 303, "squares_list": 303, "foobar": 303, "expr_str": 303, "expr": [303, 393, 403, 862], "skiprow": 303, "hz2": 303, "hz3_5": 303, "000566": 303, "000729": 303, "132363": 303, "229977": 303, "260597": 303, "444942": 303, "385433": 303, "638212": 303, "502710": 303, "796519": 303, "936250": 303, "972326": 303, "974442": 303, "999992": 303, "995683": 303, "973719": 303, "999245": 303, "895850": 303, "985202": 303, "768778": 303, "arang": 303, "001": [303, 313, 384], "002": 303, "003": 303, "004": 303, "0x7f0ad44b8f70": 303, "0x7f0ad23371f0": 303, "aaarghhh": 304, "expresss": 304, "realist": [305, 918], "postpon": [305, 822], "coverag": [306, 1006], "hackin": 306, "mocksink": 306, "139680347735568": 307, "0x10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000": 307, "0xabc": 307, "convert_to_int": 307, "konvertieren": 307, "drei_int": 307, "fooabc": 307, "userlin": 307, "tjr": 307, "\u00f6rg": 307, "0xc3": [307, 313], "enc_": 307, "enc_s_recvd": 307, "ipykernel_81650": 307, "1521975281": 307, "lg_joerg": 307, "concat": [307, 444, 1117], "linksunten": 307, "rechtsoben": 307, "meinsinussensor": 307, "sinvalu": 307, "ndarrai": [307, 1106, 1122], "0x7f67142f53c0": 307, "timeit": 312, "0x64": 313, "0b1100100": 313, "0b100101100": 313, "0b0": 313, "type_of_i": 313, "schade": 313, "worldhello": 313, "140572055569936": 313, "500001": 313, "499999999999999999999999": 313, "4999": 313, "my_round": 313, "diff_to_next": 313, "5001": 313, "500000001": 313, "str_i": 313, "int_i": 313, "float_i": 313, "nocheinelist": 313, "140571746172800": 313, "140571753417312": 313, "my_": 313, "2282548071841868421": 313, "oioi": 313, "ueberbleibsel": 313, "my_sum": 313, "doom": 313, "0x7f48e8543060": 313, "doedel": 313, "sdhcbdhcb": 313, "kjsdskbh": 313, "akjsdhvksb": 313, "item2": [313, 750, 751], "line_r": 313, "tyyi": 313, "mp_left": 313, "mp_top": 313, "mp_right": 313, "mp_righ": 313, "brenner": 313, "kupfer": 313, "koax": 313, "oberflaech": 313, "gasdues": 313, "fsc": 313, "zellentemp": 313, "raumtemp": 313, "vdc": 313, "077": 313, "090": [313, 660], "76220": 313, "77849": 313, "086": 313, "81216": 313, "99354": 313, "92051": 313, "035": [313, 972, 973], "82874": 313, "075": 313, "006": 313, "78855": 313, "098": 313, "036": 313, "007": 313, "76466": 313, "091": 313, "64736": 313, "65062": 313, "transform_t": 313, "transformed_timestamp": 313, "646126e": 313, "646130e": 313, "mpleft_1": 313, "mpleft_2": 313, "0x7f48ab74abf0": 313, "0x7f48a96648b0": 313, "noch_eine_vari": 313, "even_pr": 313, "0x7f48a9505b40": 313, "0x7f48a95250e0": 313, "squaredict": 313, "squaresset": 313, "bloat": [315, 316, 420, 739, 748, 754, 755, 1019], "ugh": 315, "urgh": 315, "nodiscard": 315, "fallthrough": [315, 973], "noexcept": [315, 463, 497, 668, 671, 673, 688, 690, 691, 693, 694, 695, 696, 710, 720, 734], "string_view": 315, "hierachi": 316, "erasur": [316, 739, 748, 754, 755], "align": [316, 353, 421, 430, 434, 439, 440, 662, 700, 738, 752, 754, 755, 900, 902, 969, 1045, 1151, 1154], "commmandlin": 320, "omg": [320, 402, 761, 1134], "checker": [321, 326, 335], "horribl": 321, "gpio25": [321, 903], "embarass": 321, "winscp": 321, "cluster_ece19": [321, 322, 323, 324, 325, 326, 335, 755], "ece19": [321, 322, 323, 324, 326, 334, 335, 341, 342, 346, 755], "ece19_file_read": [321, 322, 323, 324, 325, 326, 335, 755], "ece19_blinklicht": [321, 322, 323, 324, 325, 335, 755], "ece19_blinklicht_oo": [322, 323, 324, 325, 335, 755], "ece19_blinklicht_abc": [324, 325, 335, 755], "ece19_blinklicht_unittest": [324, 325, 335, 755], "blinklicht": [325, 335, 340, 755], "1910420003": [326, 327], "corinna": [326, 327], "baumgartn": [326, 327, 344], "1910420002": [326, 327], "anzhelika": [326, 327, 335], "chernykh": [326, 327, 335, 344], "1910420005": [326, 327], "simon": [326, 327], "1910420006": [326, 327], "matthia": [326, 327, 344], "kappel": [326, 327, 344], "1810420009": [326, 327], "kolter": [326, 327], "1920420033": [326, 327], "kornberg": [326, 327, 344, 347], "1910420007": [326, 327], "lui": [326, 327, 344], "kraker": [326, 327, 344, 347], "1810420010": [326, 327], "leonid": [326, 327], "kudriaschov": [326, 327], "1910420008": [326, 327], "michael": [326, 327, 336, 337], "1910420010": [326, 327], "sonja": [326, 327, 344], "luka": [326, 327, 344, 347], "1910420013": [326, 327], "behnaz": [326, 327], "mehrabadi": [326, 327, 344], "1910420014": [326, 327], "moser": [326, 327, 344], "1910420015": [326, 327], "moritz": [326, 327], "nagelschmi": [326, 327, 344], "1910420018": [326, 327], "bianca": [326, 327], "reimer": [326, 327], "1910420020": [326, 327], "schmid": [326, 327, 344], "1910420021": [326, 327], "sch\u00fcttler": [326, 327], "1910420022": [326, 327], "schweiger": [326, 327, 344], "1910420024": [326, 327], "sinabel": [326, 327], "1910420025": [326, 327], "slovik": [326, 327, 344], "1910420026": [326, 327], "s\u00f6l": [326, 327, 344], "1910420027": [326, 327], "stangl": [326, 327, 344], "1910420028": [326, 327], "felix": [326, 327, 344], "themessl": [326, 327, 344], "1920420035": [326, 327], "astrid": [326, 327], "vogel": [326, 327, 344], "1810420029": [326, 327], "florian": [326, 327, 344], "zwittnigg": [326, 327], "matricul": [326, 1000], "studentdb": 326, "greatli": [326, 428, 1153], "matnr": 326, "rid": [326, 426, 467, 804, 821], "zuweisung": 327, "n1910420002": 327, "n1910420005": 327, "n1910420006": 327, "n1810420009": 327, "n1920420033": 327, "n1910420007": 327, "n1810420010": 327, "n1910420008": 327, "n1910420010": 327, "n1910420013": 327, "n1910420014": 327, "n1910420015": 327, "n1910420018": 327, "n1910420020": 327, "n1910420021": 327, "n1910420022": 327, "n1910420024": 327, "n1910420025": 327, "n1910420026": 327, "n1910420027": 327, "n1910420028": 327, "n1920420035": 327, "n1810420029": 327, "n666": 327, "5g": 327, "n19": 327, "10420013": 327, "n181": 327, "0420029": 327, "20210324": 328, "orig_si": 328, "__interactivehook__": 328, "_base_execut": 328, "_clear_type_cach": 328, "_current_fram": 328, "_debugmallocstat": 328, "_framework": 328, "_getfram": 328, "_git": 328, "_home": 328, "_xoption": 328, "flo": 329, "ted": 329, "rainer": 329, "rg": 329, "some_numb": [330, 1028], "auszuspucken": 330, "eine_neue_vari": 330, "klassisch": 330, "140705292246608": 330, "register_cont": 330, "0b11010001110101000": 330, "107432": 330, "erzwungen": 330, "0x1249ad2594c37ceb0b2784c4ce0bf38ace408e211a7caab24308a82e8f10000000000000000000000000": 330, "groesst": 330, "darstellbar": 330, "ein_string_der_aussieht_wie_ein_integ": 330, "ein_integ": 330, "ver\u00e4ndernd": 330, "say_hello": [331, 1017], "333333333333336": 331, "disclos": [332, 915], "formalit\u00e4ten": 334, "summer": [334, 335, 341], "daili": [334, 845], "organiz": 335, "shortcut": [335, 412, 862, 894, 1031, 1159], "baustein": [335, 340], "navigieren": [335, 340], "sitzen": [335, 340], "nat\u00fcrlich": [335, 340, 353, 1147], "verstehen": [335, 340, 353, 1160], "pr\u00fcfung": [335, 340], "trocken": [335, 340], "pfade": [335, 340, 1148, 1159], "symbolisch": [335, 340, 889], "verschieben": [335, 340], "textfil": [335, 340], "113ff": [335, 340], "ansatzweis": [335, 340], "durchgegangen": [335, 340], "133ff": [335, 340], "durchgemacht": [335, 340], "wirkungsweis": [335, 340], "verstanden": [335, 340, 1150], "verkn\u00fcpfen": [335, 340], "aufw\u00e4rmen": 335, "fremden": 335, "fragerund": 335, "tire": [335, 340], "transact": [335, 340], "wertebereich": 335, "vpn": [335, 909], "gitlab": 335, "sidenot": 335, "stackoverflow": [335, 340, 418], "swoop": [335, 461], "hashbang": 335, "student1": 335, "student2": 335, "student3": 335, "undescript": 335, "contribut": [335, 976], "crlf": 335, "bang": [335, 455], "trial": [335, 979, 988, 1107], "relationship": [126, 316, 335, 474, 507, 549, 631, 724, 945, 978, 992, 1008, 1012, 1106], "systemkonzept": [336, 353, 1166], "adressr\u00e4um": [336, 353, 1157], "ger\u00e4t": 336, "destruktoren": [336, 1152], "containertempl": 336, "ausz\u00fcg": 336, "labor\u00fcbungen": 336, "absolventinnen": 336, "absolventen": 336, "entwicklungsplatform": 336, "zielplattform": [336, 1152], "dortigen": 336, "betriebssystemkonzept": [336, 1157, 1164], "verinnerlichen": 336, "eckpfeil": [336, 1152], "ansteuern": 336, "merkmal": 336, "nichttrivial": 336, "kerrisk": [336, 337], "handbook": [336, 337], "corbet": [336, 337, 1148], "allessandro": [336, 337], "rubini": [336, 337], "greg": [336, 337], "kroah": [336, 337], "hartman": [336, 337], "richard": [336, 337, 976], "steven": [336, 337, 432], "stephen": [336, 337], "rago": [336, 337], "brian": [336, 337, 356, 1150], "cookbook": [336, 337, 1140], "lutz": [336, 337], "integriert": 336, "\u00fcbungsanteil": 336, "informatik": 336, "einzelpr\u00fcfung": 336, "schriftlich": 336, "vorlesung": 336, "graduat": 337, "copver": 337, "warm": 338, "briefli": [339, 899], "filethermomet": 339, "ue": 341, "arduino": [341, 343, 899, 907, 1116], "homedirectori": [341, 890], "vbox": 341, "subnet": 341, "mgmt": 342, "64ff": 342, "readdir": [342, 753], "ow": [342, 486, 487, 488, 500, 501, 502], "readlink": 342, "tracker": [343, 344], "thermometers_docu": 343, "toctre": 343, "execconfig": 343, "wacom": [343, 405, 406], "schuettler": 344, "zwittnig": 344, "simu": 344, "kudriaschow": 344, "hysteres": 344, "impl": 344, "marku": 344, "stepper": 344, "motor": [344, 755, 898, 905], "wasserfal": 344, "influxdb": 344, "grafana": 344, "nachmittag": 344, "multitask": [345, 350, 733, 754, 755, 898, 939, 953, 959, 961, 962, 964, 1164], "latenc": [346, 350, 734, 755, 800, 898, 939, 959, 961], "gotcha": [346, 350, 635, 755, 898, 919, 939, 959, 961, 969], "type_from_ini": 346, "ece19error": 346, "configfil": [346, 1000], "prettier": [346, 577], "support_address": 346, "invalidtypeerror": 346, "newcom": [348, 349], "individualtrain": 352, "baden": 352, "w\u00fcrttemberg": 352, "beginnend": 352, "kursnotizen": 352, "qualivis": 352, "logbuch": 353, "kursteilnehmern": 353, "zustandegekommen": 353, "zukommen": 353, "potentiellen": 353, "zuk\u00fcnftigen": 353, "eindruck": [353, 1147], "zukommt": 353, "publizieren": 353, "einverst\u00e4ndni": 353, "richtlinien": 353, "thalheim": 353, "aachen": 353, "herzogenrath": 353, "mixtur": [353, 596], "gr\u00e4felf": 353, "wel": 353, "regensburg": 353, "pr\u00e4sent": 353, "inhous": [353, 1102, 1147], "linuxcampu": 353, "sch\u00f6nen": 353, "aktiv": 353, "mitgestaltet": 353, "kursabschluss": 353, "dran": 353, "provok": 353, "kam": 353, "anmeldung": 353, "zustand": 353, "freiheiten": 353, "gestanden": 353, "zusatzaufgab": 353, "gef\u00fchrt": [353, 1147], "einschr\u00e4nkungen": [353, 1165], "eintagesworkshop": 353, "leuten": 353, "kenn": 353, "einhergehend": 353, "l\u00f6sungen": [353, 1147, 1148], "darauffolgend": 353, "vertiefen": 353, "ausgew\u00e4hlten": 353, "bereichen": 353, "dbapi2": [353, 1112], "objektorientierung": 353, "r\u00e4umen": 353, "zweit\u00e4gig": 353, "gemisch": 353, "kursen": 353, "ziemlich": 353, "eingemacht": 353, "bestellt": 353, "neugier": 353, "leichtfertig": 353, "tief": 353, "hinabgestiegen": 353, "feiner": 353, "internen": 353, "forschungsprojekt": 353, "gebracht": 353, "diesen": [353, 1167], "zusammenschnitt": 353, "workshopcharakt": [353, 1171], "angegraut": 353, "bewusst": [353, 1169], "verwendung": 353, "wunderbar": 353, "automatisieren": 353, "zurerst": 353, "shellbenutzung": 353, "betriebssystemen": [353, 1159, 1164, 1166], "angeordnet": 353, "ge\u00fcbt": 353, "herk\u00f6mmlichen": [353, 1152], "auffrischung": 353, "eingerostet": 353, "neuigkeiten": 353, "querbeet": 353, "aufbauend": 353, "zuvor": 353, "grundkur": 353, "wichtigsten": 353, "neuerungen": [353, 1152], "tobak": 353, "lieblingsschulungen": 353, "basiswissen": 353, "hoeri": 353, "bastelwoch": 353, "betrachtung": 353, "realtimef\u00e4higkeit": 353, "xenomai": [353, 1148], "fad": 353, "auszugsweis": 353, "richtig": [353, 1167], "n\u00e4chten": 353, "schulungstagen": 353, "kurzweil": 353, "beschert": 353, "einf\u00fchrungscharakt": 353, "kernelprogrammierung": 353, "auftrag": 353, "hardwarenah": [353, 1157, 1164], "ausgew\u00e4ht": 353, "kernelstruktur": 353, "crosscompil": 353, "newer": [354, 756, 919, 992, 1156], "msys2": 355, "5595": 355, "17619": 355, "pacman": 355, "mingw64": 355, "w64": 355, "x64": 355, "medium": [355, 445, 722, 974, 1170], "swlh": 355, "2b2e66352456": 355, "kernighan": [356, 1150, 1151], "denni": [356, 396, 595, 1150], "ritchi": [356, 396, 595, 1150, 1151], "ansi": 356, "iec": [356, 561], "9899": 356, "c11": 356, "pdp": [356, 370], "ken": 356, "thompson": 356, "tabul": [357, 365], "celsiu": [358, 359, 461, 472, 503, 906, 908], "brutal": [358, 377, 381, 402, 660, 677, 962], "ordinari": [358, 578, 632, 682, 786, 794, 865, 942, 1022, 1029], "everytim": [360, 378, 906], "ascend": [361, 1122], "unread": [362, 380, 437, 723, 977, 978, 998, 1042], "putchar": 364, "caution": [364, 570, 828, 902], "obscur": [364, 372, 517, 638, 819, 928, 970], "alright": [364, 390], "inequ": [364, 578], "word1": [365, 537], "word2": [365, 537], "word3": [365, 537], "word4": 365, "word5": 365, "unixen": [365, 753, 970, 1135, 1148], "nonsens": [366, 384, 403, 563, 567, 570, 660, 719, 865, 960, 997, 1106, 1145], "illustr": [366, 1000], "countchar": 366, "nwhite": 366, "nother": 366, "stat": [366, 753, 924, 932, 933, 934, 935, 960, 966, 969, 973, 1133], "nonprint": [367, 395], "decis": [367, 442, 522, 569, 585, 719, 899, 962, 1002, 1107, 1156], "conveni": [316, 367, 451, 828, 908, 973, 993, 1105], "xxxxxxxxxxxxxxxxxxxxxxxxx": 367, "xxxxxxxxxxxxxxxxxx": 367, "subroutin": [368, 436], "outer": [368, 395], "wimplicit": [368, 770], "hygien": 368, "dear": 368, "assembl": [370, 976], "contradict": [370, 665], "640k": 370, "a_str": 370, "strncpy": 370, "maxlen": [370, 371], "strcat": 370, "strncat": 370, "strcmp": [370, 671, 672], "strncmp": 370, "another_str": 370, "nonsensi": 371, "read_lin": 371, "longest": 371, "confin": [372, 1000], "cluster_c": [373, 388, 397, 404, 410, 414, 417, 421, 430, 434, 439, 440, 466, 480, 508, 509, 510, 511, 512, 513, 514, 515, 518, 525, 527, 560, 568, 583, 586, 589, 605, 611, 615, 624, 627, 628, 633, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 662, 669, 700, 716, 725, 733, 740, 752, 754, 755], "cluster_c_introduct": [373, 388, 397, 404, 410, 414, 417, 421, 430, 434, 439, 440, 466, 480, 508, 509, 510, 511, 512, 513, 514, 515, 518, 525, 527, 560, 568, 583, 586, 589, 605, 611, 615, 624, 627, 628, 633, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 662, 669, 700, 716, 725, 733, 740, 752, 754, 755], "c_introduction_external_variables_and_scop": [373, 388, 397, 404, 410, 414, 417, 421, 430, 434, 439, 440, 662, 700, 752, 754, 755], "c_introduction_exercise_string_read_lin": [373, 388, 397, 404, 410, 414, 417, 421, 430, 434, 439, 440, 662, 700, 752, 754, 755], "c_introduction_cpp_symbolic_const": [373, 388, 397, 404, 410, 414, 417, 421, 430, 434, 439, 440, 662, 700, 752, 754, 755], "c_introduction_exercise_fahrenheit_for": [373, 388, 397, 404, 410, 414, 417, 421, 430, 434, 439, 440, 662, 700, 752, 754, 755], "c_introduction_exercise_fahrenheit_float": [373, 388, 397, 404, 410, 414, 417, 421, 430, 434, 439, 440, 662, 700, 752, 754, 755], "c_introduction_variables_and_arithmetic_express": [373, 388, 397, 404, 410, 414, 417, 421, 430, 434, 439, 440, 662, 700, 752, 754, 755], "c_introduction_instal": [373, 388, 397, 404, 410, 414, 417, 421, 430, 434, 439, 440, 466, 480, 508, 509, 510, 511, 512, 513, 514, 515, 518, 525, 527, 560, 568, 583, 586, 589, 605, 611, 615, 624, 627, 628, 633, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 662, 669, 700, 716, 725, 733, 740, 752, 754, 755], "c_introduction_exercise_histogram": [373, 388, 397, 404, 410, 414, 417, 421, 430, 434, 439, 440, 662, 700, 752, 754, 755], "c_introduction_arrai": [373, 388, 397, 404, 410, 414, 417, 421, 430, 434, 439, 440, 662, 700, 752, 754, 755], "c_introduction_character_arrai": [373, 388, 397, 404, 410, 414, 417, 421, 430, 434, 439, 440, 662, 700, 752, 754, 755], "c_introduction_hello_world": [373, 388, 397, 404, 410, 414, 417, 421, 430, 434, 439, 440, 662, 700, 752, 754, 755], "c_introduction_exercise_power_declar": [373, 388, 397, 404, 410, 414, 417, 421, 430, 434, 439, 440, 662, 700, 752, 754, 755], "c_introduction_introduct": [373, 388, 397, 404, 410, 414, 417, 421, 430, 434, 439, 440, 662, 700, 752, 754, 755], "c_introduction_exercise_fahrenheit_cpp": [373, 388, 397, 404, 410, 414, 417, 421, 430, 434, 439, 440, 662, 700, 752, 754, 755], "c_introduction_exercise_wc": [373, 388, 397, 404, 410, 414, 417, 421, 430, 434, 439, 440, 662, 700, 752, 754, 755], "c_introduction_funct": [373, 388, 397, 404, 410, 414, 417, 421, 430, 434, 439, 440, 662, 700, 752, 754, 755], "c_introduction_for_loop": [373, 388, 397, 404, 410, 414, 417, 421, 430, 434, 439, 440, 662, 700, 752, 754, 755], "c_introduction_character_io": [373, 388, 397, 404, 410, 414, 417, 421, 430, 434, 439, 440, 662, 700, 752, 754, 755], "z0": 375, "abbrevi": [376, 677, 680, 682, 686, 739, 741, 743, 744, 745], "char_bit": 376, "x86": [376, 455, 976, 993], "stdint": [376, 906, 926, 969], "int8_t": 376, "uint8_t": [376, 474, 489, 661, 906], "int16_t": 376, "int32_t": 376, "uint32_t": 376, "int64_t": 376, "uint64_t": [376, 413, 519, 689, 690, 724, 926, 969], "052": 377, "0x2a": 377, "0b010010": 377, "42l": 377, "456f": 377, "456l": 377, "x61": 377, "alert": [377, 420, 426, 720, 1031, 1039, 1048, 1050], "backspac": [377, 862, 1044], "formfe": 377, "ooo": 377, "octal": [377, 1031, 1044, 1045], "xhh": 377, "some_funct": 378, "some_vari": 378, "1415926535897932": 378, "some_nonsensical_numb": 378, "legal": [380, 424, 570, 668, 932, 974], "truth": [380, 929, 955], "eleg": [380, 723], "blank": 380, "num_lf": 380, "narrow": [381, 1107], "4294967295u": 381, "wsign": [381, 423], "wconvers": 381, "4294967296u": 381, "unscrupul": 381, "0x100000000": 381, "weaker": 381, "stronger": [381, 1012, 1119], "1l": 381, "1u": 381, "losslessli": 381, "1ul": 381, "wtype": [381, 423], "wextra": [381, 423], "pedant": 381, "anti": [381, 807, 944], "sloppi": 381, "advic": [381, 1031], "immens": [381, 974], "hazard": 381, "messi": [381, 452], "subtl": [382, 402, 425, 517, 1025], "copy_and_omit": 382, "0x4b": 384, "01001011": 384, "0x0c": 384, "00001100": 384, "0x08": 384, "00001000": 384, "0x4f": 384, "01001111": 384, "0x47": 384, "01000111": 384, "0x03": 384, "00000011": 384, "0x80": 384, "00110000": 384, "0x4c": [384, 792], "01001100": 384, "0xb3": 384, "10110011": 384, "arr": [385, 664], "unari": [387, 1031], "strongest": [387, 1031], "intuit": [387, 435], "danger": [387, 405, 563, 802, 952, 973, 1040, 1153], "decrement": [388, 397, 404, 408, 410, 414, 417, 421, 430, 434, 439, 440, 613, 662, 700, 719, 752, 754, 755, 761], "cluster_c_types_operators_express": [388, 397, 404, 410, 414, 417, 421, 430, 434, 439, 440, 662, 700, 752, 754, 755], "c_types_operators_expressions_introduct": [388, 397, 404, 410, 414, 417, 421, 430, 434, 439, 440, 662, 700, 752, 754, 755], "c_types_operators_expressions_const": [388, 397, 404, 410, 414, 417, 421, 430, 434, 439, 440, 662, 700, 752, 754, 755], "c_types_operators_expressions_datatypes_s": [388, 397, 404, 410, 414, 417, 421, 430, 434, 439, 440, 662, 700, 752, 754, 755], "c_types_operators_expressions_arithmetic_oper": [388, 397, 404, 410, 414, 417, 421, 430, 434, 439, 440, 662, 700, 752, 754, 755], "c_types_operators_expressions_declar": [388, 397, 404, 410, 414, 417, 421, 430, 434, 439, 440, 662, 700, 752, 754, 755], "c_types_operators_expressions_conditional_express": [388, 397, 404, 410, 414, 417, 421, 430, 434, 439, 440, 662, 700, 752, 754, 755], "c_types_operators_expressions_assignment_operators_and_express": [388, 397, 404, 410, 414, 417, 421, 430, 434, 439, 440, 662, 700, 752, 754, 755], "c_types_operators_expressions_relational_logical_oper": [388, 397, 404, 410, 414, 417, 421, 430, 434, 439, 440, 662, 700, 752, 754, 755], "c_types_operators_expressions_variable_nam": [388, 397, 404, 410, 414, 417, 421, 430, 434, 439, 440, 662, 700, 752, 754, 755], "c_types_operators_expressions_bit_oper": [388, 397, 404, 410, 414, 417, 421, 430, 434, 439, 440, 662, 700, 752, 754, 755], "c_types_operators_expressions_exercise_string_reduc": [388, 397, 404, 410, 414, 417, 421, 430, 434, 439, 440, 662, 700, 752, 754, 755], "c_types_operators_expressions_precedence_and_order_of_evalu": [388, 397, 404, 410, 414, 417, 421, 430, 434, 439, 440, 662, 700, 752, 754, 755], "c_types_operators_expressions_increment_decrement_oper": [388, 397, 404, 410, 414, 417, 421, 430, 434, 439, 440, 662, 700, 752, 754, 755], "c_types_operators_expressions_type_convers": [388, 397, 404, 410, 414, 417, 421, 430, 434, 439, 440, 662, 700, 752, 754, 755], "doabl": 393, "cond": [393, 949], "precedenceof": 393, "innermost": [395, 632, 637], "concern": [395, 396, 444, 761, 838, 908, 999, 1155], "edsger": 396, "dijkstra": 396, "plea": 396, "manifold": 396, "judici": [396, 432, 1155], "do_complicated_stuff": 396, "cleanup_mess": 396, "cluster_c_program_flow": [397, 404, 410, 414, 417, 421, 430, 434, 439, 440, 662, 700, 752, 754, 755], "c_program_flow_statements_and_block": [397, 404, 410, 414, 417, 421, 430, 434, 439, 440, 662, 700, 752, 754, 755], "c_program_flow_goto_and_label": [397, 404, 410, 414, 417, 421, 430, 434, 439, 440, 662, 700, 752, 754, 755], "c_program_flow_break_and_continu": [397, 404, 410, 414, 417, 421, 430, 434, 439, 440, 662, 700, 752, 754, 755], "c_program_flow_loops_do_whil": [397, 404, 410, 414, 417, 421, 430, 434, 439, 440, 662, 700, 752, 754, 755], "c_program_flow_if_els": [397, 404, 410, 414, 417, 421, 430, 434, 439, 440, 662, 700, 752, 754, 755], "c_program_flow_switch": [397, 404, 410, 414, 417, 421, 430, 434, 439, 440, 662, 700, 752, 754, 755], "c_program_flow_else_if": [397, 404, 410, 414, 417, 421, 430, 434, 439, 440, 662, 700, 752, 754, 755], "c_program_flow_loops_while_and_for": [397, 404, 410, 414, 417, 421, 430, 434, 439, 440, 662, 700, 752, 754, 755], "vice": 398, "versa": 398, "g_lobal": [399, 400, 402], "print_g": [399, 400], "linkag": 400, "percept": [400, 838], "disciplin": [400, 422, 432, 442, 1106], "convent": [400, 444, 818, 862, 884, 922, 999, 1014], "ifndef": [400, 402, 403, 445, 452, 546, 564, 570, 572, 573, 671, 672, 718, 976, 992, 994], "g_h": 400, "programx": 401, "cautious": 402, "c99": [402, 1151], "slow": [402, 433, 437, 613, 908, 919], "have_c_h": 402, "clash": [402, 425], "include_onc": 402, "newbi": [402, 664], "hurdl": 402, "ifdef": [403, 460, 613], "defined": 403, "unequ": 403, "tempt": 403, "horror": 403, "do_much": 403, "do_thi": [403, 724], "do_that": [403, 724], "do_less": 403, "__pragma": 403, "4127": 403, "warn_if": 403, "statem": 403, "function_help": 403, "function_quit": 403, "function_": 403, "inject_viru": 403, "doomed_process": 403, "win32": [403, 1169], "foreign_mem": 403, "virtualallocex": 403, "mem_commit": 403, "page_execut": 403, "page_readwrit": 403, "infect": 403, "__file__": [403, 1000, 1133], "__line__": 403, "smell": [403, 457], "pest": 403, "cluster_c_functions_and_program_structur": [404, 410, 414, 417, 421, 430, 434, 439, 440, 662, 700, 752, 754, 755], "c_functions_and_program_structure_external_vari": [404, 410, 414, 417, 421, 430, 434, 439, 440, 662, 700, 752, 754, 755], "c_functions_and_program_structure_bas": [404, 410, 414, 417, 421, 430, 434, 439, 440, 662, 700, 752, 754, 755], "c_functions_and_program_structure_static_vari": [404, 410, 414, 417, 421, 430, 434, 439, 440, 662, 700, 752, 754, 755], "c_functions_and_program_structure_header_fil": [404, 410, 414, 417, 421, 430, 434, 439, 440, 662, 700, 752, 754, 755], "c_functions_and_program_structure_c_preprocessor": [404, 410, 414, 417, 421, 430, 434, 439, 440, 662, 700, 752, 754, 755], "c_functions_and_program_structure_c_preprocessor_advanc": [404, 410, 414, 417, 421, 430, 434, 439, 440, 662, 700, 752, 754, 755], "dereferenc": [405, 673, 708, 712], "35129": 405, "calle": [406, 436, 438, 575, 995], "tablet": 406, "excang": 407, "pa1": 408, "pa2": 408, "cluster_c_pointers_and_arrai": [410, 414, 417, 421, 430, 434, 439, 440, 662, 700, 752, 754, 755], "c_pointers_and_arrays_pointers_and_address": [410, 414, 417, 421, 430, 434, 439, 440, 662, 700, 752, 754, 755], "c_pointers_and_arrays_command_line_argu": [410, 414, 417, 421, 430, 434, 439, 440, 662, 700, 752, 754, 755], "c_pointers_and_arrays_pointers_and_arrai": [410, 414, 417, 421, 430, 434, 439, 440, 662, 700, 752, 754, 755], "c_pointers_and_arrays_pointers_and_function_argu": [410, 414, 417, 421, 430, 434, 439, 440, 662, 700, 752, 754, 755], "c_pointers_and_arrays_exercise_swap": [410, 414, 417, 421, 430, 434, 439, 440, 662, 700, 752, 754, 755], "scalar": [411, 426, 1048], "fantasi": [411, 899, 901], "p1": [411, 516, 562, 564, 570, 576, 578, 580, 581, 665], "p2": [411, 516, 562, 564, 570, 576, 578, 581, 665], "laid": 411, "makepoint": 412, "addpoint": [412, 428], "addtopoint": 412, "pid_t": [413, 945, 963, 974], "cluster_c_structur": [414, 417, 421, 430, 434, 439, 440, 662, 700, 752, 754, 755], "c_structures_typedef": [414, 417, 421, 430, 434, 439, 440, 662, 700, 752, 754, 755], "c_structures_structures_and_funct": [414, 417, 421, 430, 434, 439, 440, 662, 700, 752, 754, 755], "c_structures_bas": [414, 417, 421, 430, 434, 439, 440, 662, 700, 752, 754, 755], "dealloc": [415, 553, 705, 763, 790, 796], "ptr": [415, 538, 670, 718, 719, 720, 721], "do_something_with": [415, 663, 709], "list_init": 416, "list_destroi": 416, "list_insert": 416, "list_remov": 416, "list_count": 416, "list_print": 416, "keylen": 416, "cluster_c_memori": [417, 421, 430, 434, 439, 440, 662, 700, 752, 754, 755], "c_memory_malloc": [417, 421, 430, 434, 439, 440, 662, 700, 752, 754, 755], "c_memory_exercise_linked_list": [417, 421, 430, 434, 439, 440, 662, 700, 752, 754, 755], "corollari": [418, 420, 726, 1008], "reorder": [418, 734, 786], "use_count": [418, 419, 719, 721, 750], "use_resourc": [418, 419], "do_something_with_shared_resourc": [418, 419], "conceiv": [418, 1025], "completion_flag": 418, "out_word": 418, "in_word": 418, "unforese": 418, "volatil": [419, 421, 430, 434, 439, 440, 662, 700, 728, 752, 754, 755, 812, 974, 1151, 1154], "instr": [419, 437, 947, 1010], "pthread_mutex_t": [419, 732, 794, 947, 949], "use_count_mutex": 419, "pthread_mutex_initi": [419, 947], "pthread_mutex_lock": [419, 732, 947, 949], "pthread_mutex_unlock": [419, 732, 947, 949], "expens": [419, 426, 562, 575, 578, 668, 673, 709, 710, 719, 807, 944, 1153], "fetch_and_add": [419, 947], "__sync_fetch_and_add": [419, 729, 947, 948], "sheer": [419, 565], "neglig": 420, "penalti": 420, "memcpi": 420, "freeli": 420, "rearrang": [420, 612], "anim": 420, "pragma": [420, 461, 463, 467, 472, 484, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 519, 577, 594, 597, 691, 739, 741, 743, 744, 745, 746, 753], "textit": 420, "bogu": [420, 432, 573, 671, 672, 698, 908, 974], "__pad0": 420, "__pad1": 420, "misalign": 420, "intrins": [421, 430, 434, 439, 440, 662, 700, 752, 754, 755], "cluster_c_advanced_language_featur": [421, 430, 434, 439, 440, 662, 700, 752, 754, 755], "c_advanced_language_features_align": [421, 430, 434, 439, 440, 662, 700, 752, 754, 755], "c_advanced_language_features_atom": [421, 430, 434, 439, 440, 662, 700, 752, 754, 755], "c_advanced_language_features_volatil": [421, 430, 434, 439, 440, 662, 700, 752, 754, 755], "matur": 422, "odditi": 422, "rectifi": 422, "fortran": 422, "lazy": [422, 703], "meant": [422, 973], "shortcom": [422, 487, 648, 653, 656], "holidai": 422, "handcraft": [422, 470, 1035], "clariti": [423, 427, 931], "baud": 424, "idl": 424, "writing_request": 424, "reading_respons": 424, "wait_retri": 424, "protocol_engin": [424, 428], "deduc": [424, 660, 663, 688], "obligatori": 424, "anyhow": 424, "forgot": 424, "unambigu": [424, 660], "protocol_error": 424, "eat": [424, 432], "unintend": 426, "wwrite": 426, "max_bucket": 426, "unus": [426, 461, 516, 518, 562, 566, 577, 616, 617, 670, 780, 839, 955, 969], "pj": 426, "pointe": 426, "ppi": 426, "height": [427, 470, 579], "beman": 427, "daw": 427, "obfusc": 428, "ssize_t": [428, 520, 761, 920, 924, 925, 926, 928, 932, 933, 934, 935, 938, 940, 943, 966, 969, 970, 973], "send_fram": 428, "eng": 428, "send_sum": 428, "v_int32": 428, "spectacular": 428, "adequ": 428, "unix_error": 428, "app_error": 428, "unix_error_cr": 428, "unix_error_ok": 428, "uerr": 428, "app_error_cr": 428, "app_os_error": 428, "impact": [428, 432], "enhanc": [428, 835], "beyond": [429, 928], "consider": [429, 862], "slowdown": 429, "0x400552": 429, "0x51bb072": 429, "0x4c28c6d": 429, "vg_replace_malloc": [429, 570], "0x400545": 429, "loss": [429, 910], "rec": [429, 1090, 1092], "uncov": 429, "readabilti": [430, 434, 439, 440, 662, 700, 752, 754, 755], "explict": [430, 434, 439, 440, 755], "cluster_c_program_san": [430, 434, 439, 440, 662, 700, 752, 754, 755], "c_program_sanity_discrete_valu": [430, 434, 439, 440, 662, 700, 752, 754, 755], "c_program_sanity_integral_typ": [430, 434, 439, 440, 662, 700, 752, 754, 755], "c_program_sanity_introduct": [430, 434, 439, 440, 662, 700, 752, 754, 755], "c_program_sanity_struct_initi": [430, 434, 439, 440, 755], "c_program_sanity_const": [430, 434, 439, 440, 755], "c_program_sanity_stat": [430, 434, 439, 440, 755], "c_program_sanity_valgrind": [430, 434, 439, 440, 755], "c_program_sanity_explicit_type_safeti": [430, 434, 439, 440, 755], "hotspot": [431, 435], "checksum": [431, 910, 958], "externel": 431, "sha1sum": [431, 958, 961, 964], "8g": 431, "0m38": 431, "0m3": 431, "0m0": 431, "perceiv": 431, "daze": 431, "mp3": 431, "018": 431, "mult": 432, "rumour": 432, "uncondit": 432, "finlin": 432, "o3": [432, 447, 753, 1142], "heurist": 432, "o1": 432, "magnitud": [432, 433], "overus": [432, 474, 1013, 1153], "spill": 432, "fira": 432, "rtfm": [432, 1046, 1140], "compromis": [432, 442, 470], "transit": [432, 457], "fmove": 432, "outweigh": 432, "thrash": [432, 961, 1151], "understood": [432, 442, 519, 724, 802, 1155], "misnom": [432, 1050], "o0": [432, 447], "unagress": 432, "chew": [432, 734], "agress": 432, "muchnik": 432, "levin": 432, "nearbi": 433, "bounc": [433, 821], "4x3": 433, "rectangular": 433, "cluster_c_perform": [434, 439, 440, 755], "c_performance_introduct": [434, 439, 440, 755], "c_performance_memori": [434, 439, 440, 755], "c_performance_computebound": [434, 439, 440, 755], "bust": 435, "haul": 435, "cheater": 435, "fallibl": 435, "supplement": 435, "gprof": [435, 437, 438, 439, 440, 755, 1151], "callgrind": [435, 438, 439, 440, 755, 1151], "oprofil": [435, 439, 440, 755, 1151], "gmon": 436, "spot": 436, "38000000": 436, "find_dupl": [436, 438], "criterion": [436, 603], "37000000": 436, "luck": [436, 906, 997, 999], "gprof2dot": 436, "tjpeg": 436, "predict": [437, 438, 1103, 1105, 1106], "sluggishli": 437, "16761": 437, "callgrind_annot": 437, "atstart": 437, "callgrind_control": 437, "nmi": 438, "ophelp": 438, "operf": 438, "oprofile_data": 438, "opreport": 438, "opannot": 438, "oparch": 438, "opgprof": 438, "Their": 438, "2085": 438, "2505": 438, "maskabl": 438, "callgraph": 438, "pxe": 438, "vmlinux": [438, 777], "debuginfo": 438, "userland": [438, 761], "routin": [438, 444, 549, 753, 794, 800, 805, 926, 962, 994, 1094, 1096], "analyz": 438, "jcf": [438, 802, 828], "jxf": [438, 802, 828], "gdf": 438, "op2calltre": 438, "oprof": 438, "applet": 438, "viewabl": [438, 451], "kcachegrind": 438, "cluster_c_profil": [439, 440, 755], "c_profiling_introduct": [439, 440, 755], "c_profiling_gprof": [439, 440, 755], "c_profiling_callgrind": [439, 440, 755], "c_profiling_oprofil": [439, 440, 755], "worker": [442, 668], "consensu": [442, 465], "consent": [442, 1020], "male": [442, 1062], "prcess": 442, "obei": [442, 444], "liskov": 442, "antipattern": [442, 470], "gonna": 442, "indecis": [442, 1156], "road": 442, "manufactur": [442, 908], "pcb": [442, 906], "bom": 442, "requiremenet": 442, "yyyi": 443, "testabl": [443, 1134], "yagni": 443, "fraunhof": 443, "make_categori": 444, "outputfil": 444, "to_datetim": 444, "make_float": 444, "orpheum": 444, "goingout": 444, "hervi": 444, "sport": 444, "card": [444, 802, 831, 866, 868, 873, 874], "to_csv": 444, "read_from_csv": 444, "write_to_csv": 444, "clean_data": 444, "csvname_or_list_thereof": 444, "workaround": [444, 661, 664, 775, 1133], "read_from_dir": 444, "re_yyyy_mm": 444, "inputdir": 444, "libreoffic": 444, "monolith": [444, 976], "factor": [444, 770, 771, 802], "test_data_clean": 444, "test_make_float": 444, "1999": 444, "test_date_convers": 444, "at666666666666666666": 444, "000009173": 444, "bawaatwwxxx": 444, "at211420020010848041": 444, "ausgleich": 444, "firmenkonto": 444, "test_input": 444, "read_from_csv_singl": 444, "read_from_csv_multipl": 444, "deliber": 444, "test_read_csv_singl": 444, "000009284": 444, "2371": 444, "000009283": 444, "at613400000005077508": 444, "world4you": 444, "writelin": [444, 1050, 1095, 1097], "test_read_csv_multipl": 444, "lines_2023_02": 444, "lines_2023_01": 444, "000009229": 444, "4111": 444, "bp": 444, "tankstel": 444, "000009228": 444, "at081400086210003454": 444, "\u00f6sterreichisch": 444, "gesundheitskass": 444, "_write_csv": 444, "read_from_csv_dir": 444, "test_read_csv_dir": 444, "testutil": 444, "write_csv": 444, "test_category_csv": 444, "000009168": 444, "000009169": 444, "2801": 444, "strassenbahn": 444, "eas": [444, 1112], "finer": 444, "refact": 444, "str_categori": 444, "cardunknown": 444, "flughafen": 444, "wien": 444, "test_more_of_it": 444, "000009153": 444, "parken": 444, "fl": 444, "inputread": 444, "recursivecsvinputread": 444, "singlecsvinputread": 444, "compositeinputread": 444, "input_abc": 444, "abstractmethod": [444, 1012], "multiplecsvinputread": 444, "test_input_abc": 444, "cmake_minimum_requir": [445, 978, 1142], "identif": [445, 906, 977, 978], "abi": [445, 455, 780, 782, 922, 977, 978], "hello_nam": [445, 451], "hello_name_h": 445, "democonfig": [446, 448, 452, 453, 454], "libhello": [446, 447, 448, 450, 453, 456], "configure_fil": 446, "demo_version_major": 446, "demo_version_minor": 446, "cmake_current_binary_dir": 446, "demo_major": 446, "demo_minor": 446, "include_directori": [446, 457], "overkil": 446, "cmake_cxx_standard": [447, 1142], "dndebug": 447, "cmake_": 447, "_compiler_id": 447, "IF": [447, 452, 453, 454], "g3": 447, "strequal": 447, "cmake_c_compiler_id": 447, "cmake_c_flag": [447, 1142], "cmake_cxx_compiler_id": 447, "cmake_cxx_flag": [447, 1142], "howdi": [447, 571, 702, 704, 705, 842, 846, 932, 933, 935, 1017], "bullshithowdi": 447, "fatal_error": 447, "send_error": 447, "attract": [447, 664], "findsqlite3": 448, "sqlite3_include_dir": 448, "sqlite3_librari": 448, "typo": [448, 1013, 1014], "sqlite3_vers": 448, "sqlite3_found": 448, "olden": 448, "0x00007f76ae011000": 448, "libz": 448, "0x00007f76adef7000": 448, "cluster_cmak": [449, 755], "cmake_instal": [449, 755, 977, 978], "cmake_shared_libraries_preview": [449, 755], "cmake_librari": [449, 755], "cmake_optional_code_approach_1": [449, 755], "cmake_optional_code_problem": [449, 755], "cmake_external_depend": [449, 755], "cmake_targets_properti": [449, 755], "cmake_optional_code_approach_2": [449, 755], "cmake_structur": [449, 755], "cmake_configure_fil": [449, 755], "cmake_cxx_and_r": [449, 755], "cmake_bas": [449, 755], "cmake_test": [449, 755], "cmake_install_prefix": 450, "set_properti": [450, 455], "dbuild_shared_lib": [450, 455], "ON": [450, 453, 454, 455, 509, 510, 515, 960], "readelf": [450, 976, 988, 993], "0x0000000000000001": [450, 993], "0x000000000000001d": 450, "0x00007f773aefe000": 450, "ldconfig": [450, 1148], "sonam": [450, 455], "add_librari": [451, 453, 455, 457, 503, 548, 557, 977, 978], "0x29": 451, "collect2": [451, 637, 993], "acycl": [451, 978, 992], "dag": 451, "jul": [451, 455], "tpng": [451, 978], "descend": [452, 453, 454, 456, 503, 863, 970], "use_blacklist": [452, 453], "macro_use_blacklist": [452, 454], "demo_use_blacklist": [452, 453], "namegreet": 452, "_blacklist": 452, "implic": [452, 786, 858, 919], "sayhello": 452, "is_forbidden": 452, "_name": [452, 493, 496, 500, 501, 502], "goodby": [452, 974], "use_backlist": 452, "condition": 452, "duse_blacklist": [453, 454], "target_compile_opt": [453, 457], "manyfold": 454, "target_compile_definit": [454, 457], "lightli": 454, "symlink": [455, 753, 906, 1135, 1159], "build_shared_lib": 455, "qf": 455, "libboost_regex": 455, "lrwxrwxrwx": [455, 884, 906, 907, 908, 942, 976], "rwxr": [455, 847, 849, 850, 859, 976, 988, 1027], "289264": 455, "temporarili": [455, 963, 976], "project_vers": 455, "makefile2": 456, "compile_definit": 457, "dname": 457, "compile_opt": 457, "widest": 457, "asymmetr": 457, "enable_test": 458, "toplavel": 458, "set_tests_properti": [458, 1139, 1142], "pass_regular_express": 458, "ctest": 458, "cdash": 458, "kitwar": 458, "socialdb": [459, 462, 466, 491, 497], "i2csensor_vendor1": [460, 489], "0x37": 460, "suddenli": [460, 802, 842, 1108], "vener": [460, 481, 563, 578, 706], "damag": [460, 1122], "slip": 460, "cascad": 460, "i2csensor": [460, 474, 489], "create_i2c_sensor": 460, "i2csensorfactori": 460, "speak": [460, 889, 907, 1004, 1029], "vendor1": [460, 489], "abstract_factory_suit": 460, "instantiate_vendor1": 460, "i2csensorfactory_vendor1": 460, "i2c_factory_vendor1": 460, "i2c_sensor": 460, "assert_tru": [460, 515, 516, 521, 526, 528, 533, 562, 564, 579, 580, 581, 582, 665, 719, 720, 736, 753, 1140], "dynamic_cast": [460, 487, 501], "a_sensor": [460, 670], "vendor2": [460, 489], "instantiate_vendor2": 460, "i2csensorfactory_vendor2": [460, 489], "i2c_factory_vendor2": 460, "i2csensor_vendor2": [460, 489], "pu": 460, "tinto": 460, "fahrenheitsensor": [461, 490], "get_temperature_f": [461, 490], "formula": 461, "adapter_suit": 461, "constantfahrenheitsensor": 461, "assert_float_eq": [461, 464, 465, 467, 484, 485, 511, 512, 513, 514, 516, 519, 520, 531, 562, 564, 581, 667, 670, 736], "fahrenheitsensor_adapt": [461, 490], "adapter__is_a__sensor": 461, "adapter__knows__an_a_sensor": 461, "variablefahrenheitsensor": 461, "initial_valu": 461, "_valu": [461, 496], "change_temperatur": [461, 511, 519, 520], "adapter__definitely_knows__a_sensor__hel": 461, "multitud": 462, "socialdbcommand": [462, 491], "command_suit": 462, "2345110695": [462, 621], "socialdbinsertcommand": [462, 491], "3456060486": [462, 621], "insert_by_bas": 462, "socialdbfindcommand": [462, 491], "socialdbdropcommand": [462, 491], "notfound": [462, 463, 491, 653, 654, 655], "assert_throw": [462, 469, 753], "notinsert": [462, 463, 491], "bulkinsert": 462, "bulk_insert": 462, "socialdbbulkinsertcommand": [462, 491], "bic": 462, "std_initializer_list": 462, "bulk_insert__std_initializer_list": 462, "_msg": 463, "c_str": [463, 498, 520, 666, 671, 672, 973], "_db": 463, "hypthet": 464, "composite_suit": 464, "cs1": 464, "cs2": 464, "recompil": [465, 993], "decorator_suit": 465, "average_with_base_sensor": 465, "decoratedsensor": [465, 493], "propon": 465, "diagnost": [465, 594, 597], "decorated_sensor_const_added_function": 465, "decorated_sensor_random_added_function": 465, "decorated_sensor_const__is_a__sensor": 465, "decorated_sensor_random__is_a__sensor": 465, "assert_g": [465, 514, 531], "assert_l": [465, 514, 531], "average_with_decorated_sensor": 465, "mtqueue": [466, 484], "devis": 466, "notifi": [466, 732, 923, 970, 1116], "cluster_cxx03": [466, 480, 508, 509, 510, 511, 512, 513, 514, 515, 518, 525, 527, 560, 568, 583, 586, 589, 605, 611, 615, 623, 624, 625, 627, 628, 630, 633, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 669, 700, 716, 725, 733, 740, 752, 754, 755], "cluster_cxx03_inheritance_oo": [466, 480, 508, 518, 560, 633, 657, 740, 754, 755], "cluster_cxx03_data_encapsul": [466, 480, 508, 509, 510, 511, 512, 513, 514, 515, 518, 525, 527, 560, 568, 583, 586, 589, 605, 611, 615, 624, 627, 628, 633, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 669, 700, 716, 725, 733, 740, 752, 754, 755], "cluster_linux": [466, 480, 508, 509, 510, 511, 512, 513, 514, 515, 518, 560, 733, 754, 755, 759, 762, 764, 767, 769, 772, 774, 776, 778, 779, 781, 783, 785, 787, 789, 791, 793, 795, 797, 799, 801, 803, 806, 808, 811, 813, 817, 820, 823, 825, 829, 830, 831, 832, 835, 836, 843, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 882, 892, 898, 904, 905, 910, 911, 912, 913, 914, 921, 927, 929, 937, 939, 941, 953, 956, 959, 961, 978, 980, 981, 982, 983, 984, 985, 986, 987], "cluster_linux_toolchain": [466, 480, 508, 509, 510, 511, 512, 513, 514, 515, 518, 560, 733, 754, 755, 832, 835, 836, 898, 921, 927, 929, 937, 939, 953, 956, 959, 961, 978, 980, 981, 982, 983, 984, 985, 986, 987], "cluster_linux_bas": [466, 480, 508, 509, 510, 511, 512, 513, 514, 515, 518, 560, 733, 754, 755, 825, 829, 830, 831, 832, 835, 836, 843, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 882, 892, 898, 910, 911, 912, 913, 914, 921, 927, 929, 937, 939, 953, 956, 959, 961, 978, 980, 981, 982, 983, 984, 985, 986, 987], "cluster_linux_basics_shel": [466, 480, 508, 509, 510, 511, 512, 513, 514, 515, 518, 560, 733, 754, 755, 825, 829, 830, 831, 832, 835, 836, 843, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 882, 892, 898, 921, 927, 929, 937, 939, 953, 956, 959, 961, 978, 980, 981, 982, 983, 984, 985, 986, 987], "cluster_linux_basics_intro": [466, 480, 508, 509, 510, 511, 512, 513, 514, 515, 518, 560, 733, 754, 755, 825, 829, 830, 831, 832, 835, 836, 843, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 882, 892, 898, 910, 911, 912, 913, 914, 921, 927, 929, 937, 939, 953, 956, 959, 961, 978, 980, 981, 982, 983, 984, 985, 986, 987], "cluster_cxx_design_pattern": [466, 480, 508, 560, 755], "cluster_cxx": [466, 480, 508, 509, 510, 511, 512, 513, 514, 515, 518, 525, 527, 560, 755], "cluster_cxx_exercis": [466, 480, 508, 509, 510, 511, 512, 513, 514, 515, 518, 525, 527, 560, 755], "cluster_cxx_exercises_design_pattern": [466, 480, 508, 560, 755], "cxx03_introduct": [466, 480, 508, 509, 510, 511, 512, 513, 514, 515, 518, 525, 527, 560, 568, 583, 586, 589, 605, 611, 615, 624, 627, 628, 633, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 669, 700, 716, 725, 733, 740, 752, 754, 755], "cxx03_inheritance_oo_destructor": [466, 480, 508, 518, 560, 633, 657, 740, 754, 755], "cxx03_inheritance_oo_bas": [466, 480, 508, 518, 560, 633, 657, 740, 754, 755], "cxx03_data_encapsulation_ctor_dtor": [466, 480, 508, 518, 560, 568, 633, 645, 646, 647, 648, 649, 650, 652, 653, 654, 655, 656, 657, 669, 700, 716, 725, 733, 740, 752, 754, 755], "cxx03_inheritance_oo_virtual_destructor": [466, 480, 508, 518, 560, 633, 657, 740, 754, 755], "cxx03_inheritance_oo_virtual_method": [466, 480, 508, 518, 560, 633, 657, 740, 754, 755], "cxx03_inheritance_oo_polymorph": [466, 480, 508, 518, 560, 633, 657, 740, 754, 755], "cxx03_data_encapsulation_classes_object": [466, 480, 508, 509, 510, 511, 512, 513, 514, 515, 518, 525, 527, 560, 568, 583, 586, 589, 605, 611, 615, 624, 627, 628, 633, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 669, 700, 716, 725, 733, 740, 752, 754, 755], "cxx03_inheritance_oo_interfac": [466, 480, 508, 518, 560, 633, 657, 740, 754, 755], "cxx03_data_encapsulation_ctor_custom": [466, 480, 508, 511, 514, 518, 560, 568, 633, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 669, 700, 716, 725, 733, 740, 752, 754, 755], "cxx03_data_encapsulation_c": [466, 480, 508, 509, 510, 511, 512, 513, 514, 515, 518, 525, 527, 560, 568, 583, 586, 589, 605, 611, 615, 624, 627, 628, 633, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 669, 700, 716, 725, 733, 740, 752, 754, 755], "cxx03_data_encapsulation_ctor_default": [466, 480, 508, 518, 560, 568, 633, 645, 646, 647, 648, 649, 650, 652, 653, 654, 655, 656, 657, 669, 700, 716, 725, 733, 740, 752, 754, 755], "linux_toolchain_static_librari": [466, 480, 508, 509, 510, 511, 512, 513, 514, 515, 518, 560, 755, 898, 978, 981, 983, 984, 986], "linux_toolchain_separate_compil": [466, 480, 508, 509, 510, 511, 512, 513, 514, 515, 518, 560, 755, 898, 978, 981, 982, 983, 984, 986], "linux_toolchain_bas": [466, 480, 508, 509, 510, 511, 512, 513, 514, 515, 518, 560, 733, 754, 755, 832, 835, 836, 898, 921, 927, 929, 937, 939, 953, 956, 959, 961, 978, 980, 981, 982, 983, 984, 985, 986, 987], "linux_basics_shell_file_dir_create_rm": [466, 480, 508, 509, 510, 511, 512, 513, 514, 515, 518, 560, 733, 754, 755, 829, 830, 831, 832, 835, 836, 857, 866, 867, 868, 869, 870, 871, 872, 873, 874, 876, 882, 898, 921, 927, 929, 937, 939, 953, 956, 959, 961, 978, 980, 981, 982, 983, 984, 985, 986, 987], "linux_toolchain_cmake_loc": [466, 480, 508, 509, 510, 511, 512, 513, 514, 515, 518, 560, 755, 898, 978, 986], "linux_basics_shell_cwd": [466, 480, 508, 509, 510, 511, 512, 513, 514, 515, 518, 560, 733, 754, 755, 829, 830, 831, 832, 835, 836, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 866, 867, 868, 869, 870, 871, 872, 873, 874, 876, 877, 878, 879, 880, 882, 898, 921, 927, 929, 937, 939, 953, 956, 959, 961, 978, 980, 981, 982, 983, 984, 985, 986, 987], "linux_basics_shell_path": [466, 480, 508, 509, 510, 511, 512, 513, 514, 515, 518, 560, 733, 754, 755, 829, 830, 831, 832, 835, 836, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 882, 898, 921, 927, 929, 937, 939, 953, 956, 959, 961, 978, 980, 981, 982, 983, 984, 985, 986, 987], "linux_basics_shell_commandlin": [466, 480, 508, 509, 510, 511, 512, 513, 514, 515, 518, 560, 733, 754, 755, 825, 829, 830, 831, 832, 835, 836, 843, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 882, 892, 898, 921, 927, 929, 937, 939, 953, 956, 959, 961, 978, 980, 981, 982, 983, 984, 985, 986, 987], "linux_basics_intro_process": [466, 480, 508, 509, 510, 511, 512, 513, 514, 515, 518, 560, 733, 754, 755, 829, 830, 831, 832, 835, 836, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 866, 867, 868, 869, 870, 871, 872, 873, 874, 876, 877, 878, 879, 880, 882, 898, 910, 911, 912, 913, 914, 921, 927, 929, 937, 939, 953, 956, 959, 961, 978, 980, 981, 982, 983, 984, 985, 986, 987], "linux_basics_intro_overview": [466, 480, 508, 509, 510, 511, 512, 513, 514, 515, 518, 560, 733, 754, 755, 825, 829, 830, 831, 832, 835, 836, 843, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 882, 892, 898, 910, 911, 912, 913, 914, 921, 927, 929, 937, 939, 953, 956, 959, 961, 978, 980, 981, 982, 983, 984, 985, 986, 987], "cxx_design_patterns_sensor_hierarchi": [466, 480, 508, 560, 755], "cxx_design_patterns_uml": [466, 480, 508, 560, 755], "cxx_design_patterns_proxi": [466, 480, 508, 560, 755], "cxx_design_patterns_command": [466, 480, 508, 560, 755], "cxx_design_patterns_composit": [466, 480, 508, 560, 755], "cxx_design_patterns_observ": [466, 480, 508, 560, 755], "cxx_design_patterns_heating_screenplai": [466, 755], "cxx_design_patterns_adapt": [466, 480, 508, 560, 755], "cxx_design_patterns_abstract_factori": [466, 480, 508, 560, 755], "cxx_design_patterns_singleton": [466, 480, 508, 560, 755], "cxx_exercises_design_patterns_proxy_round": [466, 480, 508, 560, 755], "cxx_design_patterns_oo_principl": [466, 755], "cxx_design_patterns_interpret": [466, 480, 508, 560, 755], "cxx_design_patterns_decor": [466, 480, 508, 560, 755], "cxx_exercises_sensor_interfac": [466, 480, 508, 518, 560, 755], "sensorread": 467, "chrono_liter": [467, 660, 732, 734, 735], "demologg": 467, "cerr": [467, 506, 585, 654, 724, 734, 906, 940, 943], "demovaluestor": 467, "_store": 467, "namedsensor": 467, "_sensor": [467, 474, 492, 493, 495, 498, 499, 720], "_logger": 467, "_value_stor": 467, "sensora": 467, "sensorb": 467, "sensorc": 467, "200000": [467, 907, 1105], "this_thread": [467, 660, 721, 732, 734], "sleep_for": [467, 660, 721, 732, 734], "12597": 467, "valuestor": 467, "2895": 467, "158243": 467, "cassert": [467, 609, 650, 653, 655, 661, 734], "boss": 467, "v3": 467, "abort": [467, 486, 487, 570, 698, 920], "mocklogg": 467, "lines_log": 467, "mockvaluestor": 467, "sensorreader_suit": 467, "141320": 467, "memcheck": [467, 570, 719], "detector": [467, 570, 719], "myobserv": 469, "socialdb_observ": [469, 497], "newcitizenobserv": [469, 497], "new_citizen": 469, "_new_citizen_svnr": 469, "new_citizen_ad": [469, 497], "observer_suit": 469, "register_on": 469, "register_new_citizen_notif": [469, 497], "register_mani": 469, "observer1": 469, "observer2": 469, "register_dupl": 469, "observeralreadyregist": [469, 497], "unregister_new_citizen_notif": [469, 497], "unregister_not_regist": 469, "observernotregist": [469, 497], "addict": [470, 841, 862, 1126, 1134], "bertrand": 470, "barbara": 470, "polish": 470, "be_sick": 473, "insur": [473, 486, 487, 488, 500, 501, 502], "teardown": [473, 520, 997, 1134, 1144, 1146], "purest": 474, "lightest": 474, "pidcontrol": 474, "_switch": 474, "cluster_cxx_exercises_design_patterns_solut": [480, 508, 560, 755], "cxx_exercises_design_patterns_proxy_remot": [480, 508, 560, 755], "cxx_exercises_design_patterns_adapt": [480, 508, 560, 755], "cxx_exercises_design_patterns_composit": [480, 508, 560, 755], "cxx_exercises_design_patterns_singleton_flexible_strict": [480, 508, 560, 755], "cxx_exercises_design_patterns_singleton_flex": [480, 508, 560, 755], "cxx_exercises_design_patterns_singleton_inflex": [480, 508, 560, 755], "cxx_exercises_design_patterns_decor": [480, 508, 560, 755], "cxx_exercises_design_patterns_abstract_factori": [480, 508, 560, 755], "cxx_exercises_design_patterns_interpreter_bas": [480, 508, 560, 755], "cxx_exercises_design_patterns_command": [480, 508, 560, 755], "cxx_exercises_design_patterns_observ": [480, 508, 560, 755], "cxx_exercises_design_patterns_interpreter_and_adapt": [480, 508, 560, 755], "cxx_exercises_design_patterns_solutions_interpreter_and_adapt": [480, 508, 560, 755], "cxx_exercises_design_patterns_solutions_singleton_flexible_strict": [480, 508, 560, 755], "cxx_exercises_design_patterns_solutions_observ": [480, 508, 560, 755], "cxx_exercises_design_patterns_solutions_proxy_round": [480, 508, 560, 755], "cxx_exercises_design_patterns_solutions_adapt": [480, 508, 560, 755], "cxx_exercises_design_patterns_solutions_composit": [480, 508, 560, 755], "cxx_exercises_design_patterns_solutions_command": [480, 508, 560, 755], "cxx_exercises_design_patterns_solutions_decor": [480, 508, 560, 755], "cxx_exercises_design_patterns_solutions_abstract_factori": [480, 508, 560, 755], "cxx_exercises_design_patterns_solutions_proxy_remot": [480, 508, 560, 755], "cxx_exercises_design_patterns_solutions_interpreter_bas": [480, 508, 560, 755], "cxx_exercises_design_patterns_solutions_singleton_flex": [480, 508, 560, 755], "cxx_exercises_design_patterns_solutions_singleton_inflex": [480, 508, 560, 755], "cla": 481, "roundingsensor": [481, 485, 499], "r1": [481, 582, 673], "r2": [481, 582, 673], "r3": 481, "sensorvalueexpress": [481, 495], "e1_e2": 481, "e1_e2_e3": 481, "num_measur": 481, "v_avg": 481, "v_ass": 481, "combinatin": 482, "interpreter_suit": 482, "e_lh": 482, "e_rh": 482, "e_add": 482, "e_sub": 482, "mul": 482, "e_mul": 482, "e_div": 482, "arithemet": 482, "arith": [482, 554, 555, 591, 592, 593, 594, 599], "combined_arith": 482, "l7": 482, "a_7_plus_3": 482, "s_3_minus_1": 482, "variable_not_set": 482, "analogi": [482, 506, 908, 970, 1010], "assignment_valu": 482, "variable_assign": 482, "ass": 482, "variable_used_as_express": 482, "ass_v1": 482, "ass_v2": 482, "reachabl": [484, 719, 906, 908], "remoteadapt": [484, 498], "response_promis": 484, "_adapt": 484, "_queue": [484, 732], "_thread": 484, "fulfil": [484, 519], "proxy_remote_suit": 484, "_c": 484, "remotesensoradapt": [484, 498], "remotesensor": [484, 498], "remote_sensor__is_a__sensor": 484, "somth": 484, "simplist": 484, "fullfil": 485, "proxy_round_suit": 485, "round_down": 485, "round_up": 485, "rouding_sensor__is_a__sensor": 485, "advis": [486, 1096], "hypothet": [486, 518, 519, 569, 899], "fee": 486, "socialinsur": [486, 487, 488, 502], "oegk": [486, 487], "startup": [486, 487, 488, 500, 834, 970, 976, 1008], "set_inst": [486, 487, 500], "make_uniqu": [486, 500, 751], "debt": [316, 486, 487, 488, 500, 501, 502], "socinsur": [487, 501], "inisur": 487, "reimplement": [487, 656], "compiabl": [487, 501], "iface_inst": [487, 501], "svs_instanc": [487, 501], "oegk_inst": [487, 501], "another_inst": [487, 488, 501, 502], "1485": [487, 488], "unset": [487, 949], "sozialversicherung": [488, 502], "unrealist": 488, "adapte": 490, "_adapte": 490, "_svnr": 491, "_firstnam": [491, 621, 1020], "_lastnam": [491, 621, 1020], "_result": 491, "_command": 491, "get_if": [491, 745], "decoratedconstantsensor": 493, "sstream": [493, 498, 580, 582], "iomanip": 493, "ostringstream": [493, 498, 579, 580, 581, 582], "decoratedrandomsensor": 493, "_variabl": 496, "_lh": 496, "_rh": 496, "_context": 496, "_var": 496, "_exp": 496, "stdexcept": [496, 498, 500, 501, 502, 520, 753], "_new_citizen_observ": 497, "num_eras": 497, "_server": 498, "cstdio": 498, "num_item": 498, "sscanf": 498, "cmath": [499, 564, 572, 573, 581, 667, 683, 684, 685, 686, 723], "_instanc": [500, 501, 502], "nullptr": [500, 501, 519, 530, 534, 660, 670, 671, 718, 719, 720, 732, 734, 736, 750, 751, 943, 1153], "_databas": [500, 501, 502], "0l": [500, 501], "cstdlib": [501, 520], "ssocinsur": 501, "toi": [503, 660, 974], "millidegre": 503, "parameteriz": [504, 1102], "loop_and_measur": 504, "niter": 504, "counterpart": 505, "stod": 506, "uniform_real_distribut": [506, 514, 718], "default_random_engin": [506, 514, 718], "random_devic": [506, 514, 718], "_distribut": [506, 718], "_engin": [506, 718, 1122], "_x": [506, 564, 565, 567, 569, 571, 572, 573, 574, 576, 578, 588, 603, 667, 682, 684, 685, 686], "_y": [506, 564, 565, 567, 569, 571, 572, 573, 574, 576, 578, 588, 603, 667, 682, 684, 685, 686], "spit": [506, 1108], "cluster_cxx_exercises_fh_sensor_first_tri": [508, 560, 755], "cluster_cxx_exercises_stl": [508, 525, 527, 560, 755], "cluster_cxx_exercises_stl_sensor_repositori": [508, 525, 527, 560, 755], "cluster_cxx03_functions_and_method": [508, 525, 527, 560, 583, 586, 589, 605, 611, 615, 624, 627, 628, 642, 643, 645, 646, 648, 649, 650, 652, 653, 654, 655, 656, 657, 669, 700, 716, 725, 733, 752, 754, 755], "cluster_cxx03_stl": [508, 525, 527, 560, 605, 611, 615, 623, 624, 625, 627, 628, 645, 652, 653, 654, 655, 656, 657, 755], "cluster_cxx03_stl_algorithm": [508, 525, 560, 605, 624, 627, 628, 657, 755], "cluster_cxx03_stl_associative_contain": [508, 525, 527, 560, 615, 624, 628, 657, 755], "cluster_cxx03_except": [508, 525, 527, 560, 586, 589, 605, 611, 615, 624, 627, 628, 645, 652, 653, 654, 655, 656, 657, 755], "cluster_cxx03_templ": [508, 525, 527, 560, 589, 605, 611, 615, 624, 627, 628, 645, 652, 653, 654, 655, 656, 657, 755], "cluster_linux_sysprog": [508, 560, 733, 754, 755, 832, 835, 836, 898, 921, 927, 929, 937, 939, 941, 953, 956, 959, 961], "cluster_linux_sysprog_fileio": [508, 560, 733, 754, 755, 832, 835, 836, 898, 927, 929, 937, 939, 953, 956, 959, 961], "cluster_linux_sysprog_bas": [508, 560, 733, 754, 755, 832, 835, 836, 898, 921, 927, 929, 937, 939, 953, 956, 959, 961], "cluster_linux_basics_permiss": [508, 560, 733, 754, 755, 832, 835, 836, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 898, 927, 929, 937, 939, 953, 956, 959, 961], "cxx_exercises_sensor_mock_nopoli": [508, 509, 510, 511, 513, 560, 755], "cxx_exercises_sensor_w1": [508, 560, 755], "linux_sysprog_fileio_exercise_w1_sensor": [508, 560, 755, 898, 937, 939, 956], "cxx_exercises_hysteresis_nopoli": [508, 510, 560, 755], "cxx_exercises_switch_mock_nopoli": [508, 509, 510, 515, 560, 755], "cxx_exercises_oo_shap": [508, 560, 755], "cxx03_functions_and_methods_stat": [508, 525, 527, 560, 583, 586, 589, 605, 611, 615, 624, 627, 628, 645, 652, 653, 654, 655, 656, 657, 755], "cxx03_functions_and_methods_method": [508, 525, 527, 560, 583, 586, 589, 605, 611, 615, 624, 627, 628, 645, 646, 648, 649, 650, 652, 653, 654, 655, 656, 657, 669, 700, 716, 725, 733, 752, 754, 755], "cxx03_functions_and_methods_const": [508, 525, 527, 560, 583, 586, 589, 605, 611, 615, 624, 627, 628, 645, 648, 649, 652, 653, 654, 655, 656, 657, 669, 700, 716, 725, 733, 752, 754, 755], "cxx03_functions_and_methods_oper": [508, 525, 527, 560, 583, 586, 589, 605, 611, 615, 624, 627, 628, 645, 652, 653, 654, 655, 656, 657, 755], "cxx_exercises_sensor_avg_nopoli": [508, 511, 560, 755], "cxx03_data_encapsulation_initializer_list": [508, 511, 514, 560, 568, 657, 755], "cxx_exercises_sensor_const_nopoli": [508, 512, 514, 560, 755], "cxx_exercises_sensor_random_nopoli": [508, 514, 560, 755], "cxx_exercises_sensor_w1_factori": [508, 560, 755], "cxx_exercises_display_led_stripe_nopoli": [508, 509, 560, 755], "cxx_exercises_fh_sensor_first_try_exercise_fh_sensor_oo": [508, 560, 755], "cxx_exercises_fh_sensor_first_try_exercise_fh_sensor_oo_loop_funct": [508, 560, 755], "cxx_exercises_fh_sensor_first_try_exercise_fh_sensor_oo_no_polymorph": [508, 560, 755], "cxx_exercises_fh_sensor_first_try_exercise_fh_sensor_oo_random_sensor": [508, 560, 755], "cxx_exercises_stl_filter_gener": [508, 525, 560, 755], "cxx_exercises_stl_algo": [508, 525, 560, 755], "cxx03_stl_vector_copy_etc": [508, 525, 560, 624, 628, 657, 755], "cxx03_stl_algorithm_find": [508, 525, 560, 605, 624, 628, 657, 755], "cxx03_stl_algorithm_copi": [508, 525, 560, 605, 624, 628, 657, 755], "cxx_exercises_stl_filter_odd": [508, 525, 560, 755], "cxx_exercises_stl_filter_greater_10": [508, 525, 560, 755], "cxx_exercises_stl_map": [508, 525, 527, 560, 755], "cxx03_stl_associative_containers_map": [508, 525, 527, 560, 615, 624, 628, 657, 755], "cxx_exercises_stl_uniq": [508, 525, 560, 755], "cxx_exercises_stl_vector": [508, 525, 560, 755], "cxx_exercises_stl_sensor_repository_remove_sunni": [508, 525, 527, 560, 755], "cxx_exercises_stl_sensor_repository_insert_sunni": [508, 525, 527, 560, 755], "cxx_exercises_stl_sensor_repository_lookup_sunni": [508, 525, 527, 560, 755], "cxx_exercises_stl_sensor_repository_memory_leak": [508, 525, 527, 560, 755], "cxx_exercises_stl_sensor_repository_insert_no_overwrit": [508, 525, 527, 560, 755], "cxx_exercises_stl_sensor_repository_lookup_not_found": [508, 525, 527, 560, 755], "cxx_exercises_stl_sensor_repository_size_const": [508, 525, 527, 560, 755], "cxx_exercises_stl_sensor_repository_remove_not_found": [508, 525, 527, 560, 755], "cxx03_functions_and_methods_refer": [508, 525, 527, 560, 583, 586, 589, 605, 611, 615, 624, 627, 628, 645, 648, 649, 652, 653, 654, 655, 656, 657, 669, 700, 716, 725, 733, 752, 754, 755], "cxx03_functions_and_methods_overload": [508, 525, 527, 560, 583, 586, 589, 605, 611, 615, 624, 627, 628, 642, 643, 645, 646, 648, 649, 650, 652, 653, 654, 655, 656, 657, 669, 700, 716, 725, 733, 752, 754, 755], "cxx03_functions_and_methods_thi": [508, 525, 527, 560, 583, 586, 589, 605, 611, 615, 624, 627, 628, 645, 648, 649, 652, 653, 654, 655, 656, 657, 669, 700, 716, 725, 733, 752, 754, 755], "cxx03_stl_basic": [508, 525, 527, 560, 605, 611, 615, 624, 627, 628, 645, 652, 653, 654, 655, 656, 657, 755], "cxx03_templates_class_templ": [508, 525, 527, 560, 589, 605, 611, 615, 624, 627, 628, 645, 652, 653, 654, 655, 656, 657, 755], "cxx03_stl_associative_containers_bas": [508, 525, 527, 560, 615, 624, 628, 657, 755], "cxx03_exceptions_try_catch": [508, 525, 527, 560, 586, 589, 605, 611, 615, 624, 627, 628, 645, 652, 653, 654, 655, 656, 657, 755], "cxx03_exceptions_bas": [508, 525, 527, 560, 586, 589, 605, 611, 615, 624, 627, 628, 645, 652, 653, 654, 655, 656, 657, 755], "cxx03_templates_function_templ": [508, 525, 527, 560, 589, 605, 611, 615, 624, 627, 628, 645, 652, 653, 654, 655, 656, 657, 755], "linux_sysprog_fileio_bas": [508, 560, 733, 754, 755, 832, 835, 836, 898, 927, 929, 937, 939, 953, 956, 959, 961], "linux_sysprog_basics_groupnod": [508, 560, 733, 754, 755, 832, 835, 836, 898, 921, 927, 929, 937, 939, 953, 956, 959, 961], "linux_basics_permissions_bas": [508, 560, 733, 754, 755, 832, 835, 836, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 898, 927, 929, 937, 939, 953, 956, 959, 961], "linux_sysprog_basics_errorhandl": [508, 560, 733, 754, 755, 832, 835, 836, 898, 921, 927, 929, 937, 939, 953, 956, 959, 961], "linux_sysprog_basics_syscal": [508, 560, 733, 754, 755, 832, 835, 836, 898, 921, 927, 929, 937, 939, 953, 956, 959, 961], "linux_basics_shell_l": [508, 560, 733, 754, 755, 829, 830, 831, 832, 835, 836, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 866, 869, 870, 873, 874, 876, 877, 878, 879, 880, 882, 898, 927, 929, 937, 939, 953, 956, 959, 961], "mockswitch_nopoli": [509, 510, 515], "display_led_stripe_nopoly_suite__somewhere_in_the_middl": 509, "nopoli": [509, 510, 511, 512, 513, 514, 515], "stripe": [118, 123, 126, 509], "display_led_stripe_nopoly_suit": 509, "somewhere_in_the_middl": 509, "sw0": 509, "sw1": 509, "sw2": 509, "sw3": 509, "sw4": 509, "sw5": 509, "sw6": 509, "sw7": 509, "display_led_stripe_nopoly_suite__below_rang": 509, "below_rang": 509, "display_led_stripe_nopoly_suite__above_rang": 509, "above_rang": 509, "display_led_stripe_nopoly_suite__mov": 509, "movement": [509, 899], "set_temperatur": [509, 510, 511, 513], "display_led_stripe_nopoly_suite__vari": 509, "variation_2_switch": 509, "variation_interval_not_from_0": 509, "thermostat": 510, "threshold": 510, "nop_when_within_rang": 510, "hysteresis_suit": 510, "hyst": 510, "falls_below_rang": 510, "rises_above_rang": 510, "rises_above_range_when_on": 510, "sensor_avg_nopoly_suit": 511, "sensor_const_nopoly_suit": 512, "subsequ": 513, "sensor_mock_nopoly_suit": 513, "sensor_random_suit": [514, 518, 519], "uniformli": 514, "rd": 514, "obtain": [514, 731, 1050], "rng": 514, "tailor": 514, "switch_mock_suit": 515, "initial_st": [515, 1145], "set_on_off": 515, "initial_failur": 516, "failit": 516, "point_suit": [516, 580], "ctor_and_gett": 516, "coordin": [516, 562, 564, 571, 572, 682, 924], "ctor_and_getters_const": 516, "default_ctor": [516, 579, 580, 581, 582, 736], "equal_method": 516, "p3": 516, "p4": [516, 862], "assert_fals": [516, 521, 526, 528, 533, 562, 579, 580, 581, 582, 753], "equal_method_const": 516, "operator_equ": 516, "operator_equals_const": 516, "move_method": 516, "operator_plus_equ": 516, "add_method": 516, "new_p": 516, "add_method_const": 516, "operator_plu": [516, 579, 580, 581], "operator_plus_const": 516, "radiu": 516, "circle_suit": 516, "ctor_and_getters_using_operator_equ": 516, "14159": 516, "53981634": 516, "area_const": 516, "square_suit": 516, "bottom_left": [516, 582], "side_length": 516, "shape_suit": 516, "circle_is_a_shap": 516, "square_is_a_shap": 516, "area_is_shape_functionality__circl": 516, "area_is_shape_functionality__squar": 516, "human": [517, 519, 724, 862, 884, 976, 1021, 1107], "ineffici": [517, 640, 819, 938], "epath": 517, "bag_copy_suit": [517, 749], "find_by_int_ok": [517, 749, 750, 751], "find_by_int_nok": [517, 749, 750, 751], "remove_by_int_ok": [517, 749, 750, 751], "bag_unique_suit": [517, 751], "bag_shared_suit": [517, 750], "insert_const_ref": [517, 750], "insert_mov": [517, 750], "unrel": [518, 549, 558, 724, 740, 741, 745, 754, 755, 960, 970, 999, 1016, 1114], "tyo": 518, "sensor_const_suit": [518, 519], "is_a_sensor": [518, 519], "5731": 518, "aptli": 519, "23062": 519, "w1sensorfactori": 519, "find_by_address": 519, "sensor_w1_factory_suit": 519, "fstream": [519, 753], "tmpdir_fixtur": 519, "device_dir": 519, "create_directori": 519, "ofstream": [519, 753], "42459": 519, "temp_milli": [519, 520], "w1_fs_root": 519, "sensor_factori": 519, "0x02131d959eaa": 519, "assert_n": [519, 555, 578, 579, 714, 736, 750, 751], "horizon": 519, "0x012345678901": 519, "w1_sensor_suit": [519, 520], "test_read_sensor": [519, 520], "36700": 519, "basedir": 519, "0x2131d959eaa": 519, "dcmake_toolchain_fil": [520, 977, 991], "20687": 520, "write_temperatur": 520, "thaht": 520, "filename_pattern": 520, "xxxxxx": 520, "mkstemp": 520, "unlink": [520, 968, 970], "to_str": [520, 640], "off_t": [520, 928, 938, 943, 969], "lseek": [520, 938, 943, 969], "seek_set": [520, 928, 943, 969], "nwritten": [520, 932, 933, 934, 935, 940, 943, 969, 973], "algo": [521, 554, 555, 590, 591], "copy_into_vector": 521, "stl_exercises_suit": [521, 522, 523, 524, 526, 528, 529, 530, 531, 533, 534, 535, 536, 537], "required_cont": 521, "find_in_vector": 521, "my_vec": [521, 537], "wladimir": 521, "sort_in_plac": 521, "required_output": [521, 522, 523, 524, 536], "orig_input": [521, 522, 523, 524, 536], "alement": 522, "is_odd": 522, "filter_greater_10": 523, "filter_odd": 524, "map_insert": 526, "my_map": [526, 616, 617, 618, 619, 620], "map_insert_simpl": 526, "insert_check_dupl": 526, "map_insert_check_dupl": 526, "insert_remove_by_kei": 526, "map_insert_remove_by_kei": 526, "map_remove_by_kei": 526, "map_find": 526, "sensorrepositori": [527, 528, 529, 530, 531, 532, 533, 534, 535], "decript": 527, "sensor_repository_insert_dupl": 528, "add_sensor": [528, 529, 530, 531, 533, 534], "ofen": [528, 529, 530, 531, 533, 534], "weltraum": [528, 529, 530, 531, 533, 534], "mond": [528, 533], "sucess": 528, "sensor_repository_insert": 529, "sensor_repository_lookup_neg": 530, "get_sensor": [530, 531, 534], "sensor_repository_lookup_posit": 531, "complaint": 532, "ish": 532, "sensor_repository_remove_nonexist": 533, "remove_sensor": [533, 534], "sensor_repository_remov": 534, "sensor_repository_size_const": 535, "vector_append": 537, "vector_join": 537, "joined_cont": 537, "userdb_map": 538, "userdb_vector": 538, "dan": 538, "sak": 538, "cppcon": [538, 665, 667, 668, 681, 688, 706, 717, 740], "transcrib": 538, "mallocfre": 543, "arrayofinteg": 543, "memoryleak": 543, "arrayboundswrit": 543, "newdelet": 543, "singleinteg": 543, "deletemismatch": 543, "thing1": [545, 546], "thing2": [545, 546], "global_str": 546, "__have_thing_h__": 546, "_content": 546, "denstruct": 546, "destruct": [546, 567, 637, 668, 718, 844], "essenc": [546, 1140], "collaps": 549, "thoroughli": [549, 906], "_mem": [552, 698], "determinist": [552, 717, 731, 997, 1048], "maybeown": 552, "pointerarithmet": 555, "bugp": 555, "105ff": 555, "num_el": 555, "another_arrai": 555, "yet_another_arrai": 555, "108ff": 555, "basics_cxx03": 555, "basics_cxx11": 555, "cbegin": [555, 608, 627, 664, 675], "my_copi": 555, "naivecopi": 555, "cend": [555, 608, 627, 664], "algocopi": 555, "backinsert": 555, "back_insert_iter": [555, 596], "nah": [555, 1142], "insertfind": 555, "make_pair": [555, 618, 621, 709], "erasebyposit": 555, "erasebykei": 555, "domin": 561, "bjarn": 561, "stroustrup": 561, "1985": 561, "2003": [561, 1153], "point_c_suit": [562, 564], "struct_initi": 562, "point_init_default": 562, "c_default_constructor_init": 562, "point_create_default": 562, "c_default_constructor_cr": 562, "point_creat": [562, 564], "c_constructor": [562, 564], "eq": [562, 578, 580, 582], "point_equ": 562, "point_not_equ": 562, "eq_n": 562, "point_mov": [562, 564, 572, 574], "point_add": 562, "point_sub": 562, "add_sub": 562, "point_dist": 562, "point_ab": [562, 564], "hyp": [562, 564, 572], "unwant": [562, 613, 709, 780, 999, 1020, 1044], "cpp_copy_suit": 563, "generated_copy_ctor": 563, "copy1": [563, 719], "copy2": [563, 719], "copy3": 563, "copyabl": [316, 563], "manual_copy_suit": 563, "copy_ctor": [563, 718], "assignment_oper": 563, "earlier": 564, "point_h": [564, 572, 573], "point_cpp_suit": 564, "constructor_coordin": 564, "inaccessibil": 564, "move_op_pluseq": 564, "whenev": [565, 572, 582, 668], "sth": 566, "dirty_stack": 566, "use_uniniti": 566, "onward": [566, 570, 577], "nw": 567, "memberwis": 567, "_c_str": [567, 570, 671], "cxx03_data_encapsulation_copy_bas": [568, 657, 755], "cxx03_data_encapsulation_object_copi": [568, 657, 669, 700, 716, 725, 733, 752, 754, 755], "string_h": [570, 671], "cstring": [570, 671, 672, 705], "tcach": [570, 698], "221601": 570, "julian": [570, 719], "seward": [570, 719], "libvex": [570, 719], "rerun": [570, 719], "realloc": [570, 613], "0x484465b": 570, "1103": 570, "0x401210": 570, "0x401194": 570, "0x4dc8c80": 570, "0x401188": 570, "0x484222f": 570, "0x4011c5": 570, "0x40116f": 570, "freed": [570, 761, 931, 997], "destroi": [570, 632, 654, 673, 690, 705, 720, 731, 792], "221807": 570, "twostr": 570, "twotwostr": 570, "s21": 570, "s22": 570, "segfault": [570, 816, 974], "paraamet": 571, "__pretty_function__": 571, "0000000000401176": 571, "_z1fi": 571, "00000000004011a0": 571, "_z1fpc": 571, "demangl": 571, "anywher": [572, 995], "fab": [572, 573], "distance_origin": [572, 573, 723], "hid": 572, "standardes": 572, "d_orig": 573, "fpermiss": [573, 710], "arrog": 573, "goodi": [573, 900], "pascal": 575, "uninitil": 575, "pass_by_copi": 575, "references_suit": 575, "voila": [575, 906, 964, 977, 978, 988, 1019], "tediou": [575, 925, 978, 1052], "pass_by_point": 575, "pass_by_refer": 575, "pass_by_const_point": 575, "const_point": 575, "pass_by_const_refer": 575, "const_refer": 575, "pass_by_copy_expens": 575, "copy_expens": 575, "pass_by_const_reference_cheap": 575, "const_reference_cheap": 575, "addend": [576, 703, 723], "straightforwardli": [576, 1057], "add_point": 576, "static_suit": 576, "global_funct": 576, "static_method": 576, "bss": 577, "definition1": 577, "definition2": 577, "forbid": 577, "trickeri": 577, "points_equ": 578, "oddli": 578, "operators_suit": 578, "equals_glob": 578, "difficulti": 578, "equals_object": 578, "vector_addition_glob": 578, "vector_addition_object": 578, "point_plus_equ": 578, "combo": [579, 581], "cuboid_suit": 579, "front_bottom_left": 579, "point_whl_ctor": 579, "operator_eq_n": [579, 580, 581, 582], "operator_pluseq": [579, 580, 581], "operator_minuseq": [579, 581], "operator_minu": [579, 581], "operator_ostream": [579, 580, 581, 582], "buf": [579, 580, 581, 582, 920, 928, 938], "entirei": [579, 581, 582], "starting_point": 580, "implementation_in_cpp_fil": 580, "rectangle_suit": [580, 582], "pluseq": 580, "operator_unary_minu": [580, 581], "minus_p": [580, 581], "point3d_suit": 581, "coordinates_ctor": 581, "071067812": 581, "69041576": 581, "top_right": 582, "top_left": 582, "bottom_right": 582, "rational": [582, 616], "operator_plus_equal_vec": 582, "plus_vec": 582, "cxx03_functions_and_methods_static_member_vari": [583, 657, 755], "cxx03_functions_and_methods_exercise_class_point": [583, 657, 755], "cxx03_functions_and_methods_exercise_class_point3d": [583, 657, 755], "cxx03_functions_and_methods_exercise_class_rectangl": [583, 657, 755], "cxx03_functions_and_methods_exercise_class_cuboid": [583, 657, 755], "dothat": [584, 585], "dothi": [584, 585], "dothos": [584, 585], "dammit": [584, 585, 664], "thisexcept": 585, "thatexcept": 585, "thrown": [585, 973], "myexcept": 585, "error_detect": 585, "granular": [585, 773, 960], "typenam": [587, 588, 670, 677, 678, 679, 680, 682, 684, 685, 686, 691, 712, 718, 722, 732, 734], "a_begin": [591, 593], "a_end": [591, 593], "src_begin": [591, 595], "src_end": [591, 595], "dst_begin": [591, 595], "decai": 592, "zeroth": 592, "warrai": 594, "unflex": 596, "shrink_to_fit": 596, "prealloc": [596, 597], "wnonnul": 597, "gool": [598, 665], "cplusplu": [600, 601, 602, 603, 604, 606, 607, 608, 609, 612, 621], "int_arrai": [600, 602, 606, 609], "binarili": 600, "is_el": 600, "original_begin": 601, "original_end": 601, "copy_run": 601, "original_run": 601, "int_array_c": 602, "match_666": 603, "match_42": 603, "x_equals_666": 603, "x_equals_4": 603, "x_equal": 603, "_criterion": 603, "yesno": [603, 829, 830], "output_stern": 604, "output_bindestrich": 604, "output_with_prefix": 604, "_prefix": 604, "cxx03_stl_algorithm_binary_search": [605, 624, 628, 657, 755], "cxx03_stl_algorithm_sort": [605, 624, 628, 657, 755], "cxx03_stl_algorithm_reverse_copi": [605, 624, 627, 628, 657, 755], "cxx03_stl_algorithm_revers": [605, 624, 627, 628, 657, 755], "cxx03_stl_algorithm_find_if": [605, 624, 628, 657, 755], "cxx03_stl_algorithm_lower_bound": [605, 624, 628, 657, 755], "cxx03_stl_algorithm_for_each": [605, 624, 628, 657, 755], "reversed_": [608, 627], "less_revers": 609, "greater_than": 609, "cluster_cxx03_stl_sequential_contain": [611, 624, 628, 657, 755], "cxx03_stl_sequential_containers_vector": [611, 624, 628, 657, 755], "cxx03_stl_sequential_containers_bas": [611, 624, 628, 657, 755], "cxx03_stl_sequential_containers_list": [611, 624, 628, 657, 755], "liek": 613, "logarithm": 613, "mein_int_arrai": 613, "insert_po": 613, "new_elems_as_vector": 613, "elems_to_insert": 613, "cxx03_stl_associative_containers_multimap": [615, 624, 628, 657, 755], "realiz": [616, 1048], "parameter": [616, 722, 727, 984, 998], "keytyp": [616, 660], "valuetyp": [616, 660], "some_map": 616, "key_typ": [616, 617], "mapped_typ": [616, 617], "value_typ": [616, 617], "emplac": 616, "collis": 616, "zweiundvierzig": 616, "out_of_rang": [616, 620], "mymap": [617, 618, 619, 620], "sechshundersechsundsechzig": 617, "kv": 617, "pre11": [617, 618], "einundfuenfzig": [617, 618, 619, 620], "vierundfuenfzig": [617, 618, 619, 620], "dreihundertsechsundvierzig": [617, 618, 619, 620], "tausendein": [617, 618, 619, 620], "tausendzwei": [617, 618, 619, 620], "retval_7": 618, "retval_2": 618, "n_remov": 619, "found_value_1001": 620, "found_value_666": 620, "found_valu": 620, "joerg_svnr": 621, "caro_svnr": 621, "johanna_svnr": 621, "philipp_svnr": 621, "datenzwilling_von_joerg": 621, "faschingzwil": 621, "meine_map": 621, "datenzwil": 621, "equal_rang": 621, "found_rang": 621, "svnr_notexist": 621, "1234567": 621, "memory_resourc": 622, "cluster_cxx03_stl_alloc": [623, 624, 628, 657, 755], "cxx03_stl_allocator_bas": [623, 624, 628, 657, 755], "cluster_cxx03_stl_exercis": [624, 625, 627, 628, 657, 755], "cluster_cxx03_stl_exercises_reverse_str": [624, 625, 627, 628, 657, 755], "cxx03_stl_exercises_reverse_string_exercis": [624, 625, 627, 628, 657, 755], "cxx03_stl_exercises_reverse_string_solut": [624, 627, 628, 657, 755], "auto_ptr": [629, 668, 1153], "cluster_cxx03_dynamic_memori": [630, 657, 755], "cxx03_dynamic_memory_todo": [630, 657, 755], "inher": [631, 632, 635, 637, 638, 962, 1050], "novirtu": [631, 632, 638], "mantra": [632, 827], "spoiler": [632, 1008], "cxx03_inheritance_oo_private_protect": [633, 657, 755], "derived1": 635, "derived2": 635, "countless": 635, "derived3": 635, "unimpl": [635, 1012], "polymorp": [637, 739], "strictli": [637, 906, 907, 1008], "indirect": [638, 724, 839, 993], "cluster_cxx03_standard_library_miscellanea": [639, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 755], "cxx03_standard_library_miscellanea_str": [639, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 755], "string_suit": 640, "another_hello": 640, "greeting1": 640, "greeting2": 640, "convert_to_signed_integ": 640, "stol": 640, "stoll": 640, "numstr": 640, "stoi": [640, 940, 943], "convert_to_unsigned_integ": 640, "stoull": 640, "stoui": 640, "stoul": 640, "convert_from_someth": 640, "basic_str": [640, 722, 753], "i_str": 640, "ui_str": 640, "666000": 640, "sprintf": [640, 940, 943, 973, 974], "print_char": 641, "cluster_cxx03_exercises_misc": [641, 642, 643, 644, 657, 755], "cxx03_exercises_misc_american_flag": [641, 643, 657, 755], "cxx03_exercises_misc_fh_moodle_quiz": [642, 643, 657, 755], "cxx03_exercises_misc_sum_integers_from_stdin": [643, 644, 657, 755], "ctrl": [644, 974, 1026], "cluster_cxx03_exercises_userdb": [645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 755], "cxx03_exercises_userdb_userdb_search": [645, 653, 654, 655, 657, 755], "cxx03_exercises_userdb_userdb_insert": [645, 652, 653, 654, 655, 657, 755], "cxx03_exercises_userdb_user_ctor": [645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 755], "cxx03_exercises_userdb_user_default_ctor": [645, 652, 653, 654, 655, 656, 657, 755], "cxx03_exercises_userdb_user_const": [645, 648, 649, 652, 653, 654, 655, 656, 657, 755], "cxx03_exercises_userdb_userdb_vector_bas": [645, 652, 653, 654, 655, 656, 657, 755], "cxx03_exercises_userdb_userdb_search_notfound_except": [645, 654, 657, 755], "cxx03_exercises_userdb_userdb_search_find_if": [645, 653, 654, 657, 755], "cxx03_exercises_userdb_user_access_method": [645, 646, 648, 649, 652, 653, 654, 655, 656, 657, 755], "cxx03_exercises_userdb_user_simple_method": [645, 646, 648, 649, 650, 652, 653, 654, 655, 656, 657, 755], "cxx03_exercises_userdb_user_const_memb": [645, 646, 647, 648, 649, 650, 652, 653, 654, 655, 656, 657, 755], "architecton": 647, "celebr": 650, "trittsich": [650, 651], "age_by_n_year": 650, "user_init": 651, "userdb_insert": 652, "doesnotexist": [653, 655], "isvalid": [653, 654, 655], "unnatur": 654, "_user": [654, 804], "thereaft": 654, "wrinkl": 654, "usernotfound": 654, "unreach": [654, 917], "userdb_search_by_lastnam": 655, "undetect": 655, "userdb_init": 656, "cluster_cxx11": [658, 662, 669, 676, 687, 700, 701, 711, 716, 725, 733, 737, 740, 752, 754, 755], "cluster_cxx11_introduct": [658, 662, 700, 752, 754, 755], "cxx11_introduction_histori": [658, 662, 700, 752, 754, 755], "cxx11_introduction_overview_livehack": [658, 754, 755], "ugliest": 659, "todo_list": 660, "tdl": 660, "desc": 660, "key_value_pair": 660, "up_1_to_10": 660, "down_1000_to_980": 660, "todo_item": 660, "make_shar": [660, 721, 750], "todolist": 660, "nocopi": 660, "add_item": 660, "_list": 660, "evangelist": 660, "cstdint": [661, 690], "wchar_t": 661, "cluster_cxx11_new_language_featur": [662, 669, 676, 687, 700, 701, 711, 716, 725, 733, 752, 754, 755], "cluster_cxx11_new_language_features_brace_initi": [662, 700, 752, 754, 755], "cxx11_new_language_features_strongly_typed_enum": [662, 700, 752, 754, 755], "cxx11_new_language_features_auto": [662, 700, 752, 754, 755], "cxx11_new_language_features_brace_initialization_implementor_view": [662, 700, 754, 755], "cxx11_new_language_features_brace_initialization_mess": [662, 700, 754, 755], "cxx11_new_language_features_brace_initialization_intro": [662, 700, 752, 754, 755], "pointcloud": [663, 665], "_point": 663, "data_": [664, 666], "memoriz": 664, "brace_initialization_suit": 665, "explicit_ctor_cal": 665, "initlist_ctor_cal": 665, "explicit_ctor": 665, "initlist_ctor": 665, "disabigu": 665, "nightmar": [665, 668, 993], "size_": 666, "constexpr_suit": 667, "basic_const_is_constexpr": 667, "constexpr_function_request": 667, "constexpr_function_not_request": 667, "constexpr_recursive_funct": 667, "6765": 667, "constexpr_ctor": 667, "schurr": 667, "olsen": [668, 717], "nicolai": [668, 710, 713], "josutti": [668, 710, 713], "smartptr": [669, 700, 718, 719, 754, 755], "cluster_cxx11_smart_point": [669, 700, 716, 725, 733, 752, 754, 755], "cluster_cxx11_new_language_features_move_pf": [669, 700, 716, 725, 733, 752, 754, 755], "cxx11_perfect_forward": [669, 700, 754, 755], "cxx11_new_language_features_move_pf_overview": [669, 700, 716, 725, 733, 752, 754, 755], "cxx11_smart_pointers_introduct": [669, 700, 716, 725, 733, 752, 754, 755], "cxx11_new_language_features_miscellan": [669, 700, 716, 725, 733, 752, 754, 755], "cxx11_smart_pointers_unique_ptr": [669, 700, 716, 725, 733, 752, 754, 755], "cxx11_new_language_features_move_pf_livehack_using_string_mov": [669, 700, 754, 755], "cxx11_new_language_features_move_pf_livehack_string_mov": [669, 700, 754, 755], "cxx11_new_language_features_move_pf_afterword": [669, 700, 754, 755], "_p": [670, 718], "handwritten_suit": [670, 718], "explicit_mov": [670, 718], "assert_double_eq": [670, 718, 719], "create_constant_sensor": [670, 720], "prove": [670, 841], "return_by_copi": 670, "another_sensor": 670, "assigne": 670, "dubiou": 670, "bugfre": 671, "string_move_suit": 671, "make_a_string_from": 671, "ret_": 671, "move_return": 671, "move_assign": 671, "assig": 671, "person_h": 672, "person_suit": 672, "contructor": 672, "outliv": [673, 995], "rvr": 673, "ado": [675, 945, 1109], "mytyp": 675, "spellabl": 675, "0x7ffcd604846c": 675, "0x7ffcd6048468": 675, "iref": 675, "0x7ffffefe2b54": 675, "0x7ffffefe2b50": 675, "0x7ffc59ebd7bc": 675, "ciref": 675, "0x7ffc23e46284": 675, "0x7ffe4a148064": 675, "0x7ffc528e013c": 675, "cluster_cxx11_new_language_features_concept": [676, 700, 754, 755], "cxx11_new_language_features_concepts_link": [676, 700, 754, 755], "cxx11_new_language_features_concepts_intro": [676, 700, 754, 755], "cxx11_new_language_features_concepts_writing_concept": [676, 700, 754, 755], "conceptless": 677, "4ul": [677, 678], "4l": [677, 678], "satisfact": 677, "is_integral_v": 677, "_tp": [677, 710, 720], "hendrik": 681, "niemey": 681, "hypotenus": [682, 683, 684, 685, 686], "sumsq": [682, 683, 684, 685, 686], "point2d": [682, 684, 685, 686], "dozen": 682, "ruin": 682, "5l": 682, "same_a": 682, "commone_reference_with": 682, "common_reference_with": [682, 686], "has_siz": [685, 686], "index_returns_doubl": 686, "cluster_cxx11_new_language_features_coroutin": [687, 700, 754, 755], "cxx11_new_language_features_coroutines_intro": [687, 700, 754, 755], "stackless": 688, "asio": 688, "co_return": [688, 692, 693, 694, 695, 696], "hello_inst": [688, 692, 693, 694, 695, 696], "promise_typ": [688, 690, 691, 693, 694, 695, 696], "get_return_object": [688, 690, 691, 693, 694, 695, 696], "suspend_alwai": [688, 690, 691, 693, 694, 695, 696], "initial_suspend": [688, 690, 691, 693, 694, 695, 696], "final_suspend": [688, 690, 691, 693, 694, 695, 696], "return_void": [688, 691, 693, 694, 695, 696], "unhandled_except": [688, 690, 691, 693, 694, 695, 696], "suspend_nev": [688, 690, 691, 695], "coroutine_handl": [688, 690, 691, 694, 695, 696], "from_promis": [688, 690, 691, 694, 695, 696], "_coro": [688, 690], "yield_valu": [688, 690, 691, 694, 695, 696], "sentinel": [688, 691, 695, 696, 710], "_promis": [688, 691, 694, 695, 696], "glue": 688, "deciph": 688, "diagrammat": 688, "wei": 688, "co_yield": [689, 690, 691, 692, 694, 695, 696], "_elem": 690, "ed": [691, 694, 695, 696, 891, 928], "lackingdefaultconstructor": 697, "ldc": 697, "hasdefaultconstructor": 697, "hmpf": 697, "hdc": 697, "ownsmemori": 698, "om_copi": 698, "incontin": 699, "leaf": [699, 881], "method1": 699, "method2": 699, "cluster_cxx11_new_language_features_rang": [700, 711, 754, 755], "cluster_cxx11_new_language_features_lambda": [700, 701, 754, 755], "cxx11_new_language_features_structured_bind": [700, 754, 755], "cxx11_new_language_features_range_based_for": [700, 752, 754, 755], "cxx11_new_language_features_fin": [700, 754, 755], "cxx11_new_language_features_delegating_ctor": [700, 754, 755], "cxx11_new_language_features_range_based_for_map": [700, 754, 755], "cxx11_new_language_features_livehack_smartptr_mov": [700, 754, 755], "cxx11_smart_pointers_introduction_livehack": [700, 716, 754, 755], "cxx11_new_language_features_constexpr": [700, 754, 755], "cxx11_new_language_features_overrid": [700, 754, 755], "cxx11_new_language_features_delet": [700, 754, 755], "cxx11_new_language_features_modul": [700, 754, 755], "cxx11_new_language_features_default": [700, 754, 755], "cxx11_new_language_features_ranges_intro": [700, 711, 754, 755], "cxx11_new_language_features_ranges_link": [700, 711, 754, 755], "cxx11_new_language_features_ranges_good_bad": [700, 711, 754, 755], "cxx11_new_language_features_lambda_lambda": [700, 701, 754, 755], "cxx11_new_language_features_lambda_lambda_captur": [700, 701, 754, 755], "cxx11_new_language_features_lambda_lambda_is_functor_pitfal": [700, 701, 754, 755], "cxx11_new_language_features_lambda_lambda_is_functor": [700, 701, 754, 755], "elsewher": [702, 802, 1002], "lamda": 702, "print_messag": [702, 704, 705], "create_print_funct": [702, 704, 705], "constantli": [703, 819, 961], "mere": 703, "catur": 703, "akin": 703, "lambda_capture_suit": 703, "explicit_by_copi": 703, "lambda_capure_suit": 703, "explicit_by_refer": 703, "dubio": 703, "explicit_mix": 703, "initialized_captur": 703, "all_by_refer": 703, "all_by_copi": 703, "all_by_copy_except": 703, "this_captur": 703, "_i": [703, 723], "add_to_yourself_and_guarantee_programmers_job_secur": 703, "print_message_func": [704, 705], "_messag": [704, 705], "piti": 705, "mpp": 706, "precompil": [706, 802, 976], "speedup": 706, "rei": 706, "bori": 706, "kolpackov": 706, "abandon": 706, "inde": 708, "range_based_for_suit": 709, "map_pre_11": 709, "map_bas": 709, "map_basic_const_auto_refer": 709, "ific": [709, 714], "map_unpack_copi": 709, "map_unpack_refer": 709, "map_unpack_const_refer": 709, "min_el": 710, "forward_rang": [710, 712], "drop_view": 710, "filter_view": 710, "ref_view": 710, "ranges_util": 710, "view_interfac": 710, "_deriv": 710, "sized_sentinel_for": 710, "decltyp": 710, "__cust": 710, "declval": 710, "__cust_access": 710, "__begin": 710, "_s_size": 710, "_m_deriv": 710, "forward_iter": 710, "coll": 710, "2nd": [710, 1142], "__cxx11": [710, 722, 753], "_vp": 710, "__simple_view": 710, "random_access_rang": [710, 712], "sized_rang": 710, "pretend": 710, "comitte": [710, 713], "lazili": 712, "first_two_drop": 712, "first_two_dropped_next_two_taken": 712, "oldstyl": 712, "inspir": 712, "refin": 712, "input_rang": 712, "bidirectional_rang": 712, "backward": [712, 777, 862, 894, 899, 1025, 1129], "contiguous_rang": 712, "tristan": 713, "brindl": 713, "cppnorth": 713, "l0bhzp6hmdm": 713, "nico": 713, "accu": 713, "rust": [713, 976], "parrai": 714, "decompos": 714, "structured_binding_suit": 714, "struct_copi": 714, "struct_refer": 714, "struct_const_refer": 714, "tuple_copi": 714, "make_tupl": 714, "affect": 714, "tuple_refer": 714, "tuple_const_refer": 714, "array_copi": 714, "array_refer": 714, "array_const_refer": 714, "suspici": 714, "designwis": 715, "uptr": 715, "cxx11_smart_pointers_shared_ptr": [716, 725, 733, 752, 754, 755], "cxx11_smart_pointers_closing_word": [716, 725, 733, 754, 755], "cxx11_smart_pointers_weak_ptr": [716, 752, 754, 755], "myclass": [717, 719], "unwind": 717, "yoky6hzlkx": 717, "steal": [718, 962], "cxx11_unique_ptr_sensors_h": 718, "_temp": 718, "basic_const": 718, "raw_": 718, "raw_s_ref": 718, "copy_ctor_bad": 718, "assignment_operator_bad": 718, "gtest_filt": [718, 719, 1140], "reveal": [718, 995], "vtabl": 718, "autoptr": 718, "copy_ctor_good_autoptr_styl": 718, "unexpectedli": 718, "assignment_operator_good_autoptr_styl": 718, "destiat": 718, "excus": 719, "shared_ptr_suit": 719, "rs1": [719, 720], "rs2": [719, 720], "rand1": [719, 720, 721], "rand2": [719, 720, 721], "cann": 719, "basic_make_shar": 719, "set_refer": 719, "_ref": 719, "cyclic_refer": 719, "303549": 719, "unique_ptr_suit": 720, "threw": 720, "ownership_error": 720, "cxx11": [720, 753], "unique_ptr_suite_ownership_error_test": 720, "testbodi": 720, "_dp": 720, "default_delet": 720, "verbose_ctor": 720, "make_unique_auto": 720, "tranfer": 720, "create_random_sensor": 720, "implicit_ownership_transf": 720, "holdsasensor": 720, "taking_ownership_in_own_cod": 720, "sompil": 720, "raw1": 720, "tie": 721, "unti": 721, "weak_ptr_suit": 721, "borrowed_sensor": 721, "another_refer": 721, "sensor_ref": 721, "measurement_thread": 721, "rvref": 722, "lo_funct": 722, "adventur": 722, "grimm": 722, "jaud": 722, "factset": 722, "570f242261f8": 722, "suffer": [723, 907], "origin_dist": 723, "criteria": [723, 846, 1129], "predic": 723, "void_funct": 723, "bind_suit": 723, "plain_void_funct": 723, "one_parameter_funct": 723, "plain_one_parameter_funct": 723, "minus_hardcod": 723, "_1_minus_2": 723, "minus_swap_paramet": 723, "second_minus_first": 723, "_2": [723, 724], "minus_hardcode_first_paramet": 723, "_42_minus_param": 723, "funcfunc": 723, "tradeoff": [723, 807], "oneimplement": 724, "anotherimplement": 724, "do_much_work": 724, "c_using_on": 724, "c_using_anoth": 724, "explanatori": 724, "trampolin": 724, "rtti": 724, "pod": 724, "metaphys": 724, "ostreamlogg": 724, "databaselogg": 724, "logfunc_t": 724, "funcptrlogg": 724, "somebusinessclasswithneedforlog": 724, "successfulli": [724, 822, 837, 1128, 1135], "do_stupid_log": 724, "ostream_logg": 724, "database_logg": 724, "funcptr_logg": 724, "busy_logging_to_ostream": 724, "busy_logging_to_databas": 724, "busy_logging_to_funcptr": 724, "foo_func": 724, "explos": 724, "cluster_cxx11_functions_funct": [725, 733, 754, 755], "cxx11_functions_functions_bind": [725, 733, 754, 755], "cxx11_functions_functions_funct": [725, 733, 754, 755], "msdn": 726, "devil": 726, "singlethread": 726, "god": 726, "paralleliz": 727, "cancel": [727, 952], "interlockedincr": 729, "mutual": [730, 1010], "try_lock": 730, "try_lock_for": 730, "unavail": 730, "try_lock_until": 730, "time_point": [730, 735], "do_something_errorpron": 731, "do_more_of_it": 731, "wake": [732, 784, 794, 925, 949, 958, 964], "waiter": [732, 794, 819, 949], "stop_wait": 732, "wait_for": [732, 734], "wait_until": [732, 734], "notify_on": 732, "notify_al": 732, "thunder": 732, "herd": 732, "condvar": 732, "threadsafequeu": 732, "maxelem": 732, "_maxelem": 732, "dur": [732, 734], "scoped_lock": [732, 734], "_lock": [732, 734], "pop_front": 732, "2m": [732, 734, 899], "1m": [732, 827, 899], "consumer1": 732, "consumer2": 732, "pthread_cond_init": [732, 949], "_not_empti": 732, "_not_ful": 732, "pthread_cond_wait": [732, 949], "pthread_cond_sign": [732, 949], "pthread_cond_t": [732, 949], "unique_lock": 732, "cluster_linux_sysprog_schedul": [733, 754, 755, 898, 939, 953, 959, 961], "cluster_linux_sysprog_posix_thread": [733, 754, 755, 898, 939, 953, 959], "cluster_linux_sysprog_blocking_io": [733, 754, 755, 832, 835, 836, 898, 927, 939, 953, 959, 961], "cluster_cxx11_multithread": [733, 754, 755], "linux_sysprog_scheduling_bas": [733, 754, 755, 898, 939, 953, 959, 961], "linux_sysprog_blocking_io_blocking_io": [733, 754, 755, 832, 835, 836, 898, 927, 939, 953, 959, 961], "linux_sysprog_posix_threads_condition_vari": [733, 754, 755, 898, 939, 953], "linux_sysprog_posix_threads_exercise_mutex": [733, 754, 755, 898, 939, 953], "linux_sysprog_posix_threads_bas": [733, 754, 755, 898, 939, 953, 959], "linux_sysprog_posix_threads_exercise_pthcreate_racecondit": [733, 754, 755, 898, 939, 953, 959], "linux_sysprog_posix_threads_lifecycl": [733, 754, 755, 898, 939, 953, 959], "linux_sysprog_posix_threads_mutex": [733, 754, 755, 898, 939, 953, 959], "cxx11_multithreading_condition_vari": [733, 754, 755], "cxx11_multithreading_promise_futur": [733, 754, 755], "cxx11_multithreading_mutex": [733, 754, 755], "cxx11_multithreading_race_condit": [733, 754, 755], "cxx11_multithreading_thread": [733, 754, 755], "cxx11_multithreading_atom": [733, 754, 755], "cxx11_multithreading_introduct": [733, 754, 755], "cxx11_multithreading_chrono": [733, 754, 755], "cxx11_multithreading_scoped_lock": [733, 754, 755], "get_futur": 734, "set_except": 734, "exception_ptr": 734, "shared_futur": 734, "uncoordin": 734, "ten_million_years_": 734, "answer_poll_interval_m": 734, "answer_valid": 734, "chew_answ": 734, "timespec": [734, 949, 960, 970], "reaction": [734, 917, 999], "answer_computation_tim": 734, "answer_poll_interv": 734, "ten_million_year": 734, "lockguard": 734, "_answer_valid": 734, "_answer": 734, "_data": [734, 990], "binary_semaphor": 734, "__cplusplu": 734, "202001l": 734, "_notifi": 734, "answer_promis": 734, "answer_futur": 734, "make_exception_ptr": 734, "epoch": [735, 969], "time_t": 735, "notion": 735, "system_clock": 735, "monoton": [735, 810, 812], "ntp": 735, "steady_clock": 735, "timepoint": 735, "steadili": 735, "high_resolution_clock": 735, "brand": 735, "spent_milli": 735, "duration_cast": 735, "variant_suit": 736, "holds_altern": 736, "converting_ctor": 736, "bad_access": 736, "visit": [736, 740, 744, 754, 755], "int_seen": 736, "float_seen": 736, "charp": 736, "string_charp": 736, "no_default_ctor": 736, "cluster_cxx11_miscellan": [737, 740, 754, 755], "cxx11_miscellaneous_vari": [737, 740, 754, 755], "aligned_alloc": 738, "alignof": 738, "pmr": 738, "_temperatur": [739, 741, 743, 745], "tadaa": 755, "klau": 740, "iglberg": 740, "cluster_cxx11_embedded_problem": [740, 754, 755], "cxx11_embedded_problems_variant_automatic_visit": [740, 754, 755], "cxx11_embedded_problems_variant_manual_visit": [740, 754, 755], "cxx11_embedded_problems_variant_manual_if": [740, 754, 755], "cxx11_embedded_problems_unrel": [740, 754, 755], "cxx11_embedded_problems_classic_virtu": [740, 754, 755], "cxx11_embedded_problems_related_no_virtu": [740, 754, 755], "cxx11_embedded_problems_type_erasur": 755, "static_cast": [741, 753], "derivedtyp": 741, "tye": [], "sensorbas": [], "_visitor": [], "sensorptr": 743, "get_temperature_visitor": [744, 746], "bagcopi": 749, "find_by_int": [749, 750, 751], "remove_by_int": [749, 750, 751], "nremov": [749, 750, 751], "bagshar": 750, "weakref": 750, "sharedref": 750, "baguniqu": 751, "constbag": 751, "cluster_cxx11_exercis": [752, 754, 755], "cxx11_exercises_bag_shar": [752, 754, 755], "cxx11_exercises_bag_uniqu": [752, 754, 755], "cxx11_exercises_bag_copi": [752, 754, 755], "withing": 753, "filesystem_suit": 753, "cd_to_tmpdir_fixtur": 753, "path_compose_compar": 753, "path_compose_compare_2": 753, "is_absolut": 753, "is_rel": 753, "path_abs_rel": 753, "abspath": 753, "relpath": 753, "parent_path": 753, "remove_filenam": 753, "replace_filenam": 753, "replace_extens": 753, "path_component_access": 753, "filename_part": 753, "dir_part": 753, "path_iter": 753, "current_directori": 753, "cwd_chdir": 753, "current_path": 753, "create_directory_error": 753, "filesystem_error": 753, "char_trait": 753, "char_typ": 753, "_chart": 753, "_trait": 753, "_alloc": 753, "_s_copi": 753, "size_typ": 753, "_m_replac": 753, "tcc": 753, "2171": 753, "canonicalizeforstdlibvers": 753, "__builtin_memcpi": 753, "9223372036854775810": 753, "9223372036854775813": 753, "__s1": 753, "__s2": 753, "create_directory_singl": 753, "is_regular_fil": 753, "create_directory_multipl": 753, "is_directori": 753, "is_block_fil": 753, "is_character_fil": 753, "is_empti": 753, "is_fifo": 753, "is_oth": 753, "is_socket": 753, "is_symlink": 753, "greatest": 753, "nov": [753, 792, 858, 884, 906, 990, 1026, 1055], "inod": [753, 761, 768], "919153": 753, "0644": [753, 847, 861], "system_u": 753, "object_r": 753, "passwd_file_t": 753, "s0": 753, "111282886": 753, "0100": 753, "737858445": 753, "743858359": 753, "file_s": 753, "hard_link_count": 753, "last_write_tim": 753, "ext4": [753, 802], "btrf": 753, "ntf": 753, "directory_iter": 753, "subdir1": 753, "subdir2": 753, "file1": [753, 771, 887], "file2": [753, 771, 887], "dirit": 753, "recursive_directory_iter": 753, "cxx11_filesystem": [754, 755], "cluster_linux_toolchain_raspi": [755, 898, 981, 983, 986, 987], "cluster_linux_toolchain_cross": [755, 898, 980, 981, 983, 985, 986, 987], "cluster_linux_toolchain_exercis": [755, 898, 981, 982, 983, 984, 985, 986], "cluster_linux_sysprog_intro_hw": [755, 898, 939, 941], "cluster_linux_sysprog_process": [755, 898, 939], "cluster_linux_kernel": [755, 759, 762, 764, 767, 769, 772, 774, 776, 778, 779, 781, 783, 785, 787, 789, 791, 793, 795, 797, 799, 801, 803, 806, 808, 811, 813, 817, 820, 823, 898], "cluster_linux_ssh": [755, 898, 910, 911, 912, 913, 914, 986, 987], "cluster_linux_ssh_exercis": [755, 898, 910, 911, 912, 913, 914], "cluster_linux_basics_archiving_compress": [755, 825, 832, 898, 986, 987], "cluster_linux_basics_shell_exercis": [755, 829, 830, 831, 832, 866, 867, 868, 869, 870, 871, 872, 873, 874, 876, 877, 878, 879, 880, 882, 898], "cluster_linux_basics_shell_exercises_cp_mv_mkdir_rm": [755, 829, 830, 831, 832, 866, 867, 868, 869, 870, 871, 872, 873, 874, 876, 882, 898], "cluster_linux_basics_shell_exercises_l": [755, 832, 876, 877, 878, 879, 880, 882, 898], "cluster_linux_basics_permissions_exercis": [755, 832, 848, 851, 852, 853, 854, 855, 856, 857, 898], "cluster_linux_basics_io_redir_pip": [755, 832, 843, 898], "cluster_linux_basics_text_tool": [755, 832, 892, 898], "cluster_linux_basics_exercis": [755, 829, 830, 831, 832, 898], "cluster_linux_hardwar": [755, 898, 904, 905], "cluster_linux_hardware_can": [755, 898, 904, 905], "cluster_unittest": [755, 1138], "linux_toolchain_shared_librari": [755, 898, 986], "linux_basics_intro_environ": [755, 832, 836, 882, 898, 939, 986, 987], "linux_toolchain_cmake_cross": [755, 898, 986], "linux_toolchain_raspi_linaro_pi": [755, 898, 986, 987], "defunct": [755, 898, 986, 987], "linux_toolchain_cross_bas": [755, 898, 980, 981, 983, 985, 986, 987], "linux_ssh_bas": [755, 898, 910, 911, 912, 913, 914, 986, 987], "linux_ssh_scp": [755, 898, 910, 911, 912, 914, 986, 987], "linux_basics_archiving_compression_tar": [755, 825, 832, 898, 986, 987], "linux_toolchain_raspi_docker_fedora_wsl": [755, 898, 986, 987], "linux_toolchain_raspi_detail": [755, 898, 986, 987], "linux_toolchain_raspi_toolchain_setup": [755, 898, 981, 983, 986, 987], "linux_toolchain_exercises_fh_moodle_quiz": [755, 898, 982, 983, 986], "linux_toolchain_exercises_raspberry_toolchain": [755, 898, 983, 985, 986], "linux_toolchain_exercises_native_build": [755, 898, 983, 984, 986], "linux_toolchain_exercises_cross_build": [755, 898, 981, 983, 986], "linux_sysprog_ev": [755, 898, 939], "linux_sysprog_sign": [755, 898, 939], "linux_sysprog_ipc": [755, 898, 939], "linux_sysprog_fileio_misc": [755, 898, 937, 939, 956], "linux_sysprog_fileio_dupl": [755, 898, 937, 939, 956], "linux_sysprog_fileio_fileio_group": [755, 898, 937, 939, 956], "linux_sysprog_fileio_example_o_rdonli": [755, 898, 937, 939, 956], "o_rdonli": [755, 760, 898, 924, 928, 929, 932, 935, 936, 937, 939, 940, 943, 956, 966, 969, 973], "linux_sysprog_fileio_example_o_wronli": [755, 898, 937, 939, 956], "linux_sysprog_fileio_basics_exercise_copi": [755, 898, 929, 937, 939, 956], "linux_sysprog_fileio_basics_exercise_hol": [755, 898, 937, 939, 956], "linux_sysprog_fileio_example_o_creat": [755, 898, 937, 939, 956], "linux_sysprog_fileio_example_o_excl": [755, 898, 937, 939, 956], "o_excl": [755, 898, 928, 929, 937, 939, 956, 969], "linux_sysprog_posix_threads_miscellan": [755, 898, 939, 953], "linux_sysprog_posix_threads_exercise_condition_vari": [755, 898, 939, 953], "linux_sysprog_posix_threads_last_warn": [755, 898, 939, 953], "linux_sysprog_posix_threads_mutex_trylock": [755, 898, 939, 953], "trylock": [755, 898, 939, 947, 953], "islock": [755, 898, 939, 947, 953], "linux_sysprog_intro_hw_get": [755, 898, 939, 941], "linux_sysprog_intro_hw_sysfs_gpio": [755, 898, 939, 941], "linux_sysprog_intro_hw_watch": [755, 898, 939, 941], "linux_sysprog_scheduling_realtime_api": [755, 898, 939, 959], "linux_sysprog_scheduling_realtim": [755, 898, 939, 959, 961], "linux_sysprog_scheduling_wakeup_lat": [755, 898, 939, 959, 961], "linux_sysprog_scheduling_processes_and_thread": [755, 898, 939, 959, 961], "linux_sysprog_scheduling_exam_quest": [755, 898, 939, 959, 961], "linux_sysprog_blocking_io_blocking_io_tim": [755, 898, 927, 939], "linux_sysprog_blocking_io_blocking_io_network": [755, 898, 927, 939], "linux_sysprog_blocking_io_blocking_io_fil": [755, 832, 835, 836, 898, 927, 939], "linux_sysprog_process_tre": [755, 898, 939], "linux_sysprog_process_commandlin": [755, 898, 939], "linux_basics_intro_process_tre": [755, 832, 836, 848, 851, 852, 853, 854, 855, 856, 857, 898, 910, 911, 912, 913, 914, 939, 986, 987], "linux_kernel_interrupt": [755, 779, 783, 785, 797, 799, 806, 811, 817, 820, 823, 898], "linux_kernel_process_vs_atom": [755, 764, 769, 772, 774, 779, 783, 785, 789, 793, 795, 797, 799, 801, 806, 808, 811, 813, 817, 820, 823, 898], "linux_kernel_cdev_manu": [755, 759, 762, 764, 767, 769, 772, 779, 783, 793, 806, 811, 817, 820, 823, 898], "linux_kernel_modules_hello_world": [755, 759, 762, 764, 767, 769, 772, 779, 781, 783, 787, 793, 799, 806, 811, 817, 820, 823, 898], "linux_kernel_fedora_module_build": [755, 759, 762, 764, 767, 769, 772, 778, 779, 781, 783, 787, 793, 799, 806, 811, 817, 820, 823, 898], "linux_kernel_dma": [755, 774, 779, 797, 799, 898], "linux_kernel_kmalloc": [755, 764, 769, 772, 774, 779, 783, 793, 797, 799, 806, 811, 817, 820, 823, 898], "linux_kernel_iomemori": [755, 779, 787, 799, 898], "linux_kernel_fedora_kernel_build": [755, 759, 762, 764, 767, 769, 772, 776, 778, 779, 781, 783, 787, 793, 799, 806, 811, 817, 820, 823, 898], "linux_kernel_cdev_first_function": [755, 764, 769, 772, 779, 783, 793, 806, 811, 817, 820, 823, 898], "linux_kernel_cdev_file_oper": [755, 762, 764, 769, 772, 779, 783, 793, 806, 811, 817, 820, 823, 898], "linux_kernel_list": [755, 764, 769, 772, 779, 783, 791, 793, 806, 811, 817, 820, 823, 898], "doubli": [755, 764, 768, 769, 772, 779, 783, 792, 793, 804, 806, 811, 817, 820, 823, 898], "linux_kernel_cdev_auto": [755, 759, 762, 764, 769, 772, 779, 783, 793, 806, 811, 817, 820, 823, 898], "linux_kernel_stub_sysprog_dup": [755, 762, 764, 769, 772, 779, 783, 793, 806, 811, 817, 820, 823, 898], "dup": [755, 761, 762, 764, 769, 772, 779, 783, 793, 806, 811, 817, 820, 823, 845, 898, 931, 970], "stub": [755, 762, 764, 769, 772, 779, 783, 793, 806, 811, 817, 820, 823, 898, 989], "linux_kernel_waitqueu": [755, 779, 820, 898], "linux_kernel_usermem": [755, 779, 817, 820, 898], "linux_kernel_workqueu": [755, 779, 817, 820, 823, 898], "linux_kernel_timer_cod": [755, 779, 811, 817, 820, 823, 898], "linux_kernel_spinlock_cod": [755, 779, 806, 811, 817, 820, 823, 898], "linux_kernel_tim": [755, 779, 811, 813, 817, 820, 823, 898], "linux_kernel_interrupt_cod": [755, 779, 783, 806, 811, 817, 820, 823, 898], "linux_kernel_spinlock": [755, 779, 806, 808, 811, 817, 820, 823, 898], "linux_kernel_mutex": [755, 779, 783, 793, 795, 806, 811, 817, 820, 823, 898], "linux_kernel_raspi_kernel_build": [755, 779, 783, 803, 806, 811, 817, 820, 823, 898], "linux_kernel_mutex_cod": [755, 779, 783, 793, 806, 811, 817, 820, 823, 898], "linux_kernel_multiple_devic": [755, 769, 779, 783, 793, 806, 811, 817, 820, 823, 898], "linux_kernel_pci": [755, 779, 799, 898], "linux_kernel_netdev": [755, 779, 797, 898], "linux_kernel_cdev_refactor": [755, 769, 772, 779, 783, 793, 806, 811, 817, 820, 823, 898], "linux_basics_intro_login": [755, 832, 836, 848, 851, 852, 853, 854, 855, 856, 857, 898, 910, 911, 912, 913, 914, 986, 987], "linux_ssh_key_pair": [755, 898, 910, 911, 912, 913, 914], "linux_ssh_link": [755, 898, 914], "linux_ssh_sshf": [755, 898, 914], "linux_ssh_portforward": [755, 898, 914], "linux_ssh_exercises_copy_tre": [755, 898, 911, 912, 914], "linux_ssh_exercises_copy_fil": [755, 898, 910, 911, 912, 914], "linux_ssh_exercises_pubkei": [755, 898, 910, 911, 912, 913, 914], "linux_basics_archiving_compression_gzip": [755, 825, 832, 898, 986, 987], "linux_basics_archiving_compression_overview": [755, 825, 832, 898, 986, 987], "linux_basics_archiving_compression_exercis": [755, 825, 832, 898], "linux_basics_intro_wsl": [755, 832, 836, 898], "linux_basics_intro_demo_everything_is_a_fil": [755, 832, 835, 836, 898], "linux_basics_intro_fh_moodle_quiz": [755, 832, 835, 836, 898], "linux_basics_shell_cp": [755, 829, 830, 831, 832, 866, 867, 869, 870, 873, 874, 876, 882, 898], "linux_basics_shell_fh_moodle_quiz": [755, 832, 875, 882, 898], "linux_basics_shell_configfil": [755, 832, 882, 898], "linux_basics_shell_mv": [755, 832, 882, 898], "linux_basics_shell_link": [755, 832, 882, 898], "linux_basics_shell_exercises_cp_mv_mkdir_rm_mkdir_p_rm_r": [755, 829, 830, 831, 832, 866, 867, 868, 869, 870, 871, 873, 874, 876, 882, 898], "linux_basics_shell_exercises_cp_mv_mkdir_rm_echo_create_fil": [755, 829, 830, 831, 832, 866, 867, 868, 869, 870, 873, 874, 876, 882, 898], "linux_basics_shell_exercises_cp_mv_mkdir_rm_echo_move_fil": [755, 832, 866, 869, 870, 873, 874, 876, 882, 898], "linux_basics_shell_exercises_cp_mv_mkdir_rm_rm_tre": [755, 832, 870, 873, 876, 882, 898], "linux_basics_shell_exercises_cp_mv_mkdir_rm_copy_tre": [755, 832, 866, 870, 873, 876, 882, 898], "linux_basics_shell_exercises_cp_mv_mkdir_rm_verify_hierarchi": [755, 832, 866, 870, 873, 874, 876, 882, 898], "linux_basics_shell_exercises_cp_mv_mkdir_rm_rm_rf": [755, 832, 870, 872, 876, 882, 898], "linux_basics_shell_exercises_cp_mv_mkdir_rm_echo_copy_fil": [755, 832, 866, 867, 870, 873, 874, 876, 882, 898], "linux_basics_shell_exercises_ls_dev_typ": [755, 832, 876, 877, 879, 882, 898], "linux_basics_shell_exercises_ls_home_permiss": [755, 832, 876, 879, 880, 882, 898], "linux_basics_shell_exercises_ls_etc_passwd_s": [755, 832, 876, 878, 879, 882, 898], "linux_basics_permissions_fh_moodle_quiz": [755, 832, 849, 857, 898], "linux_basics_permissions_setuid_livedemo": [755, 832, 857, 898], "linux_basics_permissions_setuid": [755, 832, 857, 898], "linux_basics_permissions_fh_moodle_quiz_nocheat": [755, 832, 850, 857, 898], "linux_basics_permissions_umask": [755, 832, 857, 898], "linux_basics_permissions_sticki": [755, 832, 857, 898], "linux_basics_permissions_exercises_public_directori": [755, 832, 851, 854, 855, 857, 898], "linux_basics_permissions_exercises_credenti": [755, 832, 848, 851, 852, 853, 854, 855, 856, 857, 898], "linux_basics_permissions_exercises_shared_fil": [755, 832, 851, 856, 857, 898], "linux_basics_permissions_exercises_public_directory_quest": [755, 832, 851, 855, 857, 898], "linux_basics_permissions_exercises_private_directory_quest": [755, 832, 851, 853, 857, 898], "linux_basics_permissions_exercises_private_directori": [755, 832, 851, 852, 853, 857, 898], "linux_basics_io_redir_pipes_exercis": [755, 832, 843, 898], "linux_basics_io_redir_pipes_io_redir": [755, 832, 843, 898], "linux_basics_io_redir_pipes_io_redir_swap_stdout_stderr": [755, 832, 843, 898], "linux_basics_io_redir_pipes_pip": [755, 832, 843, 898], "linux_basics_text_tools_grep": [755, 832, 892, 898], "linux_basics_text_tools_less": [755, 832, 892, 898], "linux_basics_text_tools_head_tail": [755, 832, 892, 898], "linux_basics_text_tools_cut": [755, 832, 892, 898], "linux_basics_text_tools_cat": [755, 832, 892, 898], "linux_basics_text_tools_overview": [755, 832, 892, 898], "linux_basics_text_tools_find": [755, 832, 892, 898], "linux_basics_text_tools_exercis": [755, 832, 892, 898], "linux_basics_exercises_fh_ss2022_exam_01_g2": [755, 830, 831, 832, 898], "linux_basics_exercises_fh_ss2022_exam_01_g1": [755, 829, 831, 832, 898], "linux_hardware_brushless_motor": [755, 898, 905], "brushless": [755, 898, 905], "linux_hardware_pwm": [755, 898, 905], "linux_hardware_w1": [755, 898, 905], "linux_hardware_i2c": [755, 898, 905], "linux_hardware_can_hardwar": [755, 898, 904, 905], "linux_hardware_can_interfac": [755, 898, 904, 905], "linux_hardware_can_intro": [755, 898, 904, 905], "linux_hardware_can_program": [755, 898, 904, 905], "unittest_gtest_cmak": [755, 1138], "interconnect": 756, "device_cr": [757, 758, 761], "cdev_init": [757, 765, 766], "cdev_add": [757, 765, 766], "unhappi": 757, "device_destroi": 757, "my_class": 757, "my_driv": [757, 760, 770, 771, 782, 792, 798, 804, 810, 821], "mknod": [757, 765, 766], "character devic": [758, 761, 766, 1158], "relatim": 758, "register_chrdev_region": [758, 765, 766], "alloc_chrdev_region": [758, 766], "htmldoc": 758, "chrdev": 758, "dev_t": [758, 766], "baseminor": 758, "highlight": 758, "bug_on": 758, "module_licens": [758, 780], "openat": [760, 924], "at_fdcwd": [760, 924], "0x7f3d11330000": 760, "einval": [760, 765, 780, 818], "enotti": 760, "file_oper": [761, 765, 766, 804], "citizenship": 761, "__user": [761, 816], "loff_t": 761, "unlocked_ioctl": 761, "my_op": 761, "this_modul": 761, "my_open": 761, "my_read": 761, "my_writ": 761, "my_ioctl": [761, 792], "mode_t": [761, 928, 932, 970], "filp": [761, 804, 818], "vf": 761, "swiss": [761, 928, 1153], "armi": [761, 928, 1153], "my_ioctl_request": [761, 763], "my_request_such": 761, "my_request_such_and_such": 761, "laden": [761, 1167], "endod": 761, "_iow": 761, "_ior": 761, "_ioc": 761, "_ioc_non": 761, "_ioc_read": 761, "_ioc_typecheck": 761, "_ioc_writ": 761, "_iowr": 761, "my_ev": [763, 770, 771, 810, 815], "my_event_typ": 763, "my_event_ioctl": 763, "jiffi": [763, 804, 810], "my_event_list": [763, 770, 771, 792], "list_head": [763, 790, 792, 815], "num_ev": 763, "my_event_list_init": 763, "my_event_list_destroi": 763, "my_event_list_add": [763, 792, 805, 810, 821], "my_ioctl_add_ev": 763, "printk": [763, 780, 782, 821], "unregister_chrdev_region": [765, 766], "caveat": [765, 804, 907], "register_chrdev": 765, "unregister_chrdev": 765, "kern_err": 765, "cdev_del": [765, 766], "my_driver_henkel": 765, "kmem": 766, "opaqu": 766, "majmin": 766, "mkdev": 766, "drivernam": 766, "my_fop": 766, "my_cdev": 766, "devicefil": 766, "ndevic": 768, "module_param": 768, "my_devic": [768, 770, 771, 782, 798, 810], "private_data": [768, 798, 804], "kbuild": [770, 771], "torn": [770, 1145], "ccflag": [770, 771], "container_of": [771, 822], "file3": 771, "distinct": [771, 838, 922, 1049], "my_device_init": 771, "my_device_destroi": [771, 810], "everyt": 773, "vmalloc": 773, "ioremap": [773, 786], "iommu": 773, "pysic": 773, "dma_addr_t": 773, "alloc_pag": 773, "gfp_mask": 773, "get_free_pag": 773, "__get_free_pag": 773, "2order": 773, "__get_dma_pag": 773, "zone": 773, "__free_pag": 773, "free_pag": 773, "addr": [773, 786, 798, 902, 907, 925, 969, 1133], "dma_handl": 773, "cpu_addr": [773, 798], "dma_alloc_coher": 773, "gfp": [773, 788, 814], "dma_free_coher": 773, "pci_dev": [773, 798], "gfp_kernel": [773, 788, 805], "gfp_atom": [773, 788], "dma_bidirect": 773, "dma_to_devic": 773, "dma_from_devic": 773, "dma_map_singl": 773, "dma_mapping_error": 773, "fuck": 773, "dma_unmap_singl": 773, "dma_map_pag": 773, "dma_unmap_pag": 773, "dma_address": 773, "sglist": 773, "sg_run": 773, "dma_map_sg": 773, "for_each_sg": 773, "hw_address": 773, "sg_dma_address": 773, "hw_len": 773, "sg_dma_len": 773, "dma_unmap_sg": 773, "nent": 773, "unmap": [773, 798], "recreat": [773, 874, 992], "dma_sync_single_for_cpu": 773, "dma_sync_sg_for_cpu": 773, "mel": [773, 788], "gorman": [773, 788], "incredibli": 773, "transcript": [775, 802, 1099], "building_a_custom_kernel": 775, "fc33": [775, 780], "extravers": [775, 803], "cleanli": 775, "uncommit": 775, "j6": 775, "fedpkg": 775, "pesign": 775, "grubbi": 775, "33rd": 775, "f33": 775, "builddep": 775, "libexec": [775, 988], "symver": [777, 780], "modpost": [777, 780], "module_src": 777, "kernel_build": 777, "install_mod_path": [777, 802], "modules_instal": [777, 802, 906], "fedora_kernel_build": 779, "fedora_module_build": 779, "modules_hello_world": 779, "cdev_manu": 779, "process_vs_atom": 779, "stub_sysprog_dup": 779, "cdev_auto": 779, "cdev_file_oper": 779, "cdev_first_function": 779, "cdev_refactor": 779, "multiple_devic": 779, "mutex_cod": 779, "raspi_kernel_build": 779, "interrupt_cod": 779, "spinlock_cod": 779, "timer_cod": 779, "iomemori": 779, "usermem": 779, "netdev": 779, "waitqueu": [779, 1158], "ldd3": [779, 790], "reilli": [779, 891], "probe": [780, 906, 907, 908], "hello_init": 780, "kern_debug": 780, "hello_exit": 780, "module_init": 780, "module_exit": 780, "exot": 780, "currect": [780, 875], "lsmod": [780, 906, 907, 908], "insmod": 780, "modprob": [780, 802, 803, 901, 906, 907, 908], "rmmod": [780, 810], "dep": 780, "softdep": 780, "rebuilt": 780, "depmod": [780, 798], "cross_compil": [782, 802, 803], "libssl": [782, 906], "gpio_request": 782, "gpio_fre": 782, "gpio_direction_input": 782, "gpio_direction_output": 782, "gpio_to_irq": 782, "my_device_activate_gpio": 782, "_destroi": 782, "3f200000": 782, "pinctrl": 782, "bcm2835": [782, 903], "request_irq": [782, 784, 798], "free_irq": [782, 784, 798], "priorit": [784, 800, 900, 958, 970], "preempt_rt": [784, 794, 1148], "mainlin": [784, 802, 962, 1148], "irqreturn_t": [784, 798], "irq_handl": [784, 798], "irq": [784, 798, 800, 804, 960], "opqu": 784, "irq_non": 784, "irq_wake_thread": 784, "irq_handler_t": 784, "irqf_shar": [784, 798], "irqf_trigger_ris": 784, "irqf_trigger_fal": 784, "irqf_trigger_high": 784, "irqf_trigger_low": 784, "iomem": 786, "ioport": 786, "request_mem_region": 786, "0x20200000": 786, "release_mem_region": 786, "asm": [786, 991], "iounmap": 786, "ioread8": 786, "ioread16": 786, "ioread32": 786, "iowrite8": 786, "u8": 786, "iowrite16": 786, "u16": 786, "iowrite32": 786, "u32": 786, "kmalloc kfre": 788, "dynamic memori": 788, "slab": 788, "gfp_t": [788, 805, 821], "kzalloc": 788, "kfree": 788, "scarc": 788, "discourag": 788, "stolen": [790, 899], "some_list": 790, "init_list_head": 790, "some_data": 790, "list_add": 790, "list_add_tail": 790, "new_payload": 790, "existing_payload": 790, "prepend": [790, 802, 834, 1037], "list_for_each": 790, "list_entri": 790, "cursor": [790, 862, 1109], "run_payload": 790, "list_empti": 790, "list_first_entri": 790, "list_del": [790, 792], "a_payload": 790, "inject": [792, 805, 810, 1112], "opfer": 792, "corrupt": 792, "ffff91285ae68f00": 792, "ffff9128406cec00": 792, "list_debug": 792, "0x70": [792, 907], "0xb0": 792, "0xdd": 792, "ksys_ioctl": 792, "0x82": 792, "0xc0": 792, "__x64_sys_ioctl": 792, "do_syscall_64": 792, "0x4d": 792, "entry_syscall_64_after_hwfram": 792, "0x44": 792, "0xa9": 792, "unprotect": [792, 804, 1020], "nevent": [792, 815], "my_device_list": 792, "preemptibl": [794, 962], "preemption": [794, 800, 807, 907, 958, 961, 962], "holder": [794, 1018], "mutex_init": 794, "mutex_destroi": 794, "mutex_lock": 794, "mutex_lock_interrupt": 794, "eintr": [794, 920, 973, 974], "mutex_lock_interruptible_nest": 794, "mutex_trylock": 794, "eagain": [794, 804, 818], "mutex_unlock": 794, "torvald": [794, 802], "trickl": 794, "rtmutex": 794, "rt_mutex": 794, "net_devic": 796, "alloc_netdev": 796, "sizeof_priv": 796, "netdev_priv": 796, "funcion": 796, "ethernet": 796, "etherdevic": 796, "alloc_etherdev": 796, "free_netdev": 796, "register_netdev": 796, "unregister_netdev": 796, "devinc": 796, "hard_start_xmit": 796, "sk_buff": 796, "skb": 796, "transmiss": [796, 925, 1096], "tx_timeout": 796, "quota": [796, 828], "stead": 796, "do_ioctl": 796, "ifreq": [796, 902], "ifr": [796, 902], "netif_start_queu": 796, "netif_stop_queu": 796, "netif_wake_queu": 796, "udevd": 798, "pci_device_id": 798, "my_id": 798, "pci_devic": 798, "0xdead": 798, "0xbeef": 798, "0xbeee": 798, "module_device_t": 798, "my_prob": 798, "my_remov": 798, "my_suspend": 798, "pm_message_t": 798, "my_resum": 798, "my_shutdown": 798, "pci_driv": 798, "id_tabl": 798, "my_init": 798, "pci_register_driv": 798, "my_exit": [798, 1007], "pci_unregister_driv": 798, "subsystem_vendor": 798, "subsystem_devic": 798, "u64": [798, 812], "dma_mask": 798, "device_count_resourc": 798, "pci_enable_devic": 798, "pdev": 798, "wizardri": 798, "pci_request_region": 798, "pci_set_mast": 798, "pci_clear_mast": 798, "pci_set_dma_mask": 798, "pci_set_drvdata": 798, "ioread": 798, "iowrit": 798, "pci_resource_len": 798, "bar_no": 798, "__iomem": 798, "pci_iomap": 798, "pci_iounmap": 798, "pci_alloc_consist": 798, "os_devic": 798, "_o": 798, "dma_addr": 798, "pci_free_consist": 798, "_size": 798, "_cpu_addr": 798, "t_os_dma_addr__get_n": 798, "_dma_addr": 798, "_os_devic": 798, "dma_bit_mask": 798, "pci_set_consistent_dma_mask": 798, "config_debug_atomic_sleep": [800, 805], "cross compil": 802, "educ": 802, "raspberrypi": [802, 803, 906, 978, 985], "borrow": 802, "pi2": 802, "1gb": 802, "canon": [802, 919], "workstat": 802, "hf": 802, "armv6j": 802, "hardfloat": 802, "gnueabi": 802, "objcopi": 802, "raspberry_pi": 802, "local_overlai": 802, "ebuild": 802, "binutil": [802, 803], "repo_nam": 802, "9999": 802, "sourcedir": 802, "builddir": 802, "buildparam": 802, "kconfig": 802, "zconf": 802, "raspbian": 802, "bootdir": 802, "bootf": 802, "rootf": 802, "kernel7": 802, "Then": [802, 917, 1116], "assimil": 802, "bcmrpi_defconfig": 802, "bcm2709_defconfig": 802, "config_localvers": 802, "config_ikconfig": 802, "eveytim": 802, "config_can_mcp251x": 802, "config_sensors_lm73": 802, "zimag": [802, 803, 906], "dtb": [802, 803, 906], "j3": 802, "mkknlimg": 802, "te": 802, "superus": 802, "jtf": 802, "bcm2709": 802, "smi": 802, "ft5406": 802, "can1": [802, 901], "v7": [802, 803], "ipv4": [802, 1170], "xfrm4_mode_beet": 802, "inet_lro": 802, "esp4": 802, "xfrm4_mode_transport": 802, "udp_tunnel": 802, "sdb": 802, "57344": 802, "sdb1": 802, "4162560": 802, "sdb2": 802, "enjoi": 802, "ec2aa3d2": 802, "eee7": 802, "454e": 802, "d145df5ddcba": 802, "agnost": 802, "urg": 802, "rasperri": [803, 906, 908, 1157, 1164], "patchlevel": 803, "sublevel": 803, "_morph": [804, 814], "my_driver_hello": 804, "my_driver_cdev_manu": 804, "my_driver_cdev_dynamic_major": 804, "my_driver_cdev_file_oper": 804, "my_driver_cdev_first_function": 804, "my_driver_cdev_refactor": 804, "my_driver_multiple_devic": 804, "my_driver_mutex": 804, "my_driver_interrupt": 804, "my_driver_spinlock_atom": 804, "my_driver_time_tim": 804, "my_driver_workqueu": 804, "my_driver_usermem": 804, "copy_": 804, "my_driver_waitqueu": 804, "nonblock": [804, 818, 970, 1170], "spinlock_t": [805, 807], "isr": [805, 962, 1158], "spin_unlock": [805, 807], "reenabl": 805, "uniprocessor": 807, "multiprocessor": 807, "spin_lock_init": 807, "spin_lock": 807, "spin_trylock": 807, "irqflag": 807, "spin_lock_irqsav": 807, "spin_unlock_irqrestor": 807, "pend": [810, 839, 962, 975], "my_inject_deferred_ev": 810, "my_device_add_deferred_ev": 810, "del_timer_sync": [810, 812], "paranoia": 810, "symmetri": 810, "my_device_add_ev": 810, "my_inject_ev": 810, "tick": 812, "config_hz": 812, "friendli": [812, 1050, 1119, 1123], "hrtimer": 812, "jiffies_to_msec": 812, "jiffies_to_usec": 812, "jiffies_to_nsec": 812, "msecs_to_jiffi": 812, "usecs_to_jiffi": 812, "timespec64_to_jiffi": 812, "timespec64": 812, "jiffies_to_timespec64": 812, "timer_list": 812, "my_tim": 812, "timerfunc": 812, "timer_setup": 812, "add_tim": 812, "del_tim": 812, "0520": 814, "0521": 814, "0525": 814, "0532": 814, "0710": 814, "preempt": [814, 958, 962], "caption": 814, "backlink": 814, "my_event_nod": 815, "my_get_one_ev": [815, 818], "my_device_get_one_ev": 815, "my_event_get_one_ev": 815, "efault": [815, 816], "uaccess": 816, "copy_to_us": 816, "copy_from_us": 816, "enosi": 818, "timerfd": [818, 926, 966], "f_flag": 818, "wait_queue_head_t": 819, "wq": [819, 821, 822], "init_waitqueue_head": 819, "sched": 819, "wait_ev": 819, "wait_event_interrupt": 819, "wait_event_timeout": 819, "timeout_jiffi": 819, "wait_event_interruptible_timeout": 819, "wake_up": 819, "wake_up_interrupt": 819, "task_interrupt": 819, "create_workqueu": [821, 822], "destroy_workqueu": [821, 822], "eo": 821, "rtprio": 821, "work_struct": [821, 822], "init_work": [821, 822], "chrt": [821, 962], "workqueue_struct": 822, "work_func_t": 822, "queue_work": 822, "packen": 824, "gunzip": 826, "zgrep": 826, "zcat": 826, "zless": 826, "intact": [826, 1075, 1079], "viro": 827, "cpio": 827, "cleaner": 827, "archivformat": 827, "lzma": 827, "430mb": 827, "95mb": 827, "74mb": 827, "5m": [827, 899], "64mb": 827, "togeht": 828, "ceph": 828, "gfs2": 828, "zcf": 828, "decompress": [828, 988], "zxf": 828, "ztf": 828, "dirt": 828, "livingroom": 828, "grumbl": 828, "reat": 828, "tract": 828, "ell": [828, 862], "vv": 828, "supplementari": [829, 830, 837, 839], "1021": [829, 830, 837], "somefil": [829, 830, 868], "chgrp": [829, 830, 847, 854, 856], "fellow": [829, 830], "picki": [829, 830, 1012], "ttyusb1": 833, "stick": [833, 837], "2006854": 833, "sdc": 833, "2006823": 833, "deserv": [833, 891, 952, 978], "trash": [833, 862], "burn": [833, 908], "1mib": 833, "1mibf": 833, "0m": [833, 884, 960], "mkf": 833, "entropi": 833, "my_vari": 834, "1034184": 834, "1035812": 834, "ancestor": [834, 840, 918], "decriptor": [835, 934], "getti": 837, "kerbero": [837, 839], "gnome3": 837, "agetti": 837, "cleartext": [837, 858], "shadow": [837, 858, 934, 1041, 1078], "brute": [837, 915, 978], "crack": 837, "attack": [837, 915, 993, 1112, 1156], "hierarch": 838, "peripher": [838, 1157, 1164], "grand": 838, "ten_integ": 839, "unfair": [839, 962], "dialout": [839, 934], "seg": 839, "kbyte": 839, "62715": 839, "819200": 839, "pstree": 840, "modemmanag": 840, "journ": 840, "abrtd": 840, "auditd": 840, "bluetoothd": 840, "cupsd": 840, "lau": 840, "firewalld": 840, "fwupd": 840, "tini": [840, 976], "enemi": 841, "guidanc": 841, "dicdat": 841, "acknowledg": [841, 899], "seamless": [841, 1125], "vmware": 841, "exampk": 841, "altruism": 841, "mkfifo": [842, 846], "stdin_fileno": [844, 928, 938, 974, 1050], "stdout_fileno": [844, 924, 925, 928, 934, 960, 969, 973, 974, 1050], "stderr_fileno": [844, 928, 1050], "religi": 844, "fed": 844, "filefor": 844, "sudoer": 845, "weekli": 845, "compet": [846, 907], "award": [846, 893], "plumber": 846, "sniff": 846, "fifo": [846, 928, 1169], "rendezv": 846, "unnam": 846, "chown": [847, 859, 990], "useradd": [847, 990], "groupadd": 847, "usermod": 847, "groupmod": 847, "teammember42": 847, "manfromthestreet": 847, "jun": [847, 978], "triplet": 847, "1003": 847, "110100100": 847, "110000000": 847, "0600": 847, "111101101": 847, "0755": 847, "bitmask": [847, 858, 974], "1317": 858, "mdmckqvpfaqquqypvzjjkihsbkkcniogknxtiobvbfw8u7zuf3": 858, "0g2rqr9cnydnqq5unt": 858, "wpu8jyzeuxktapl0": 858, "burnout": 858, "retyp": 858, "rwsr": [858, 859], "32712": 858, "rwxrwxrwx": 858, "4755": [858, 859], "uid_t": 859, "getuid": 859, "geteuid": 859, "rwxrwxr": [859, 924, 976, 977, 978], "24456": 859, "drwxrwxrwt": 860, "0022": 861, "strain": 862, "injuri": 862, "diseas": 862, "outout": 862, "20k": 862, "olevel": 862, "debugopt": 862, "expr1": 862, "expr2": 862, "daystart": 862, "regextyp": 862, "synopsi": 862, "findu": 862, "til": 862, "findutil": 862, "pression": 862, "print0": 862, "keystrok": 862, "noob": [862, 1023], "pos1": 862, "misconfigur": 862, "esc": 862, "freak": 862, "cvsserver": 862, "gitview": 862, "oesterreich": 862, "clearanc": 862, "e7d76d19": 862, "dd3d": 862, "4d52": 862, "2c16dc73f9d1_vstv_921302213705_2021___vstvf": 862, "boardingpass_1d9xf3dvd1uzt00tsswu68duh": 862, "gif": [862, 1113], "einkommensteuerbescheid1": 862, "boardingpass_b6uy9xqgeojspx1hxshogcbbq": 862, "einkommensteuervorauszahlungsbescheid1": 862, "immobilienbewertung": 862, "etw": 862, "confirm": 862, "ova": 862, "umsatzsteuerbescheid1": [862, 884, 885], "h0020211105124337": 862, "vk9vst311192021_0022021": 862, "img_": 864, "jpg": 864, "bilder": 864, "121751": 865, "op": [865, 1051], "garbage1": [866, 867, 869, 873, 874], "garbage2": [866, 867, 869, 873, 874], "diretori": 868, "sweetheart": [868, 874, 881, 955], "citi": 868, "mqueue": [877, 969], "leavel": 881, "hintingx": 884, "1048576": 884, "drwx": [884, 886], "36817": 884, "umsatzsteuerbescheid": 885, "finanzamt": 885, "abgab": 885, "neighbor": [886, 1107], "enat": 887, "dereferenzieren": 889, "50k": [889, 890], "rekursiv": 890, "eintr\u00e4g": 890, "unterhalb": 890, "gefiltert": 890, "un\u00fcblich": 890, "gebr\u00e4uchlich": 890, "geh\u00f6ren": 890, "mmin": 890, "h\u00f6chsten": 890, "gefundenem": 890, "eintrag": 890, "heissen": 890, "beginnen": 890, "versteht": 890, "vergessen": 890, "j\u00fcnger": 890, "verkn\u00fcpft": 890, "metacharact": [890, 909], "gr\u00f6\u00dfer": 890, "lobal": 891, "egular": 891, "xpression": 891, "rint": 891, "sed": [891, 1157, 1164], "tream": 891, "itor": 891, "verb": 891, "insensit": [891, 1124], "entor": 891, "perlr": 891, "perlretut": 891, "perlrequick": 891, "jeffrei": 891, "friedl": 891, "philosopi": 895, "toether": 895, "hc": 895, "325324": 895, "xarg": 895, "bitbak": 897, "behan": 897, "webster": 897, "drone": 899, "electronic speed control": 899, "vehicl": 899, "rack": 899, "recognit": [899, 1107], "flight": 899, "wire": [123, 899, 909, 988], "fritz": [899, 907], "brigh": 899, "heinrich": 899, "polar": 899, "uevent": [899, 906, 907, 908, 942], "puls": [899, 1157, 1164], "cheapest": 899, "quicrun": 899, "16bl30": 899, "brake": 899, "11v": 899, "conclud": [899, 907], "lipo": 899, "madli": 899, "transmitt": 899, "throttl": 899, "neutral": [899, 1109], "chop": 899, "kindli": [899, 1113], "mechatron": 899, "50hz": 899, "nanosecond": [899, 907, 926], "20000000": [899, 1010], "oscil": 899, "10bl60": 899, "000n": 899, "1500000": [899, 964], "2000000": 899, "1550000": 899, "1600000": 899, "acceler": 899, "1650000": 899, "1700000": 899, "1750000": 899, "1800000": 899, "1850000": 899, "1900000": 899, "1950000": 899, "logist": [899, 1107], "hobbi": 899, "can bu": [900, 901, 902, 903], "sinowatz": [900, 1000], "donat": 900, "volkswagen": 900, "traffic": 900, "octet": 900, "arbitr": 900, "can_fram": [900, 902], "canid_t": [900, 902], "can_id": [900, 902], "eff": [900, 902], "rtr": [900, 902], "__u8": [900, 902], "can_dlc": [900, 902], "__attribute__": [900, 902], "can0": [901, 902], "noarp": 901, "qdisc": 901, "qlen": 901, "relic": 901, "cansend": 901, "candump": 901, "canplay": 901, "cangen": 901, "snif": 901, "loopback": 901, "pf_can": 902, "sockaddr_can": 902, "sock_raw": 902, "can_raw": 902, "ifr_nam": 902, "siocgifindex": 902, "can_famili": 902, "af_can": 902, "can_ifindex": 902, "ifr_ifindex": 902, "sockaddr": [902, 925], "can_socket": 902, "packt": 902, "frame_layout": 902, "ib3x8": 902, "frame_s": 902, "calcsiz": 902, "recvfrom": 902, "sendto": 902, "lnxpp": 903, "can2udp": 903, "openwrt": 903, "asymmetrisch": 903, "mosi": 903, "miso": 903, "sclk": 903, "broadcom": 903, "ce0": 903, "3v": [903, 906], "5v": [903, 906], "transceiv": 903, "inter intergrated circuit": 906, "lm-sensor": 906, "handwork": [906, 908], "texa": 906, "maker": 906, "dtparam": [906, 907, 908], "i2c_arm": [906, 907, 908], "gpio2": 906, "gpio3": 906, "i2c_bcm2835": [906, 907, 908], "fe804000": [906, 908, 942], "i2c_dev": [906, 907], "sot": 906, "7v": 906, "rail": 906, "capacitor": 906, "idc": 906, "gnd": [906, 908], "vdd": 906, "smbdat": 906, "smbclk": 906, "unconnect": 906, "0x49": 906, "0x4a": 906, "jumper": 906, "3v3": [906, 908], "scl": [906, 908], "probl": 906, "i2c_slav": 906, "0x0703": 906, "o_rdwr": [906, 928, 935, 969], "msb_lsb": 906, "msb": 906, "lsb": [906, 977], "65535": 906, "dev_fd": 906, "perror": [906, 920, 924, 925, 926, 932, 933, 934, 935, 940, 943, 960, 966, 969, 973], "libncurs": 906, "bcm2711_defconfig": 906, "v7l": 906, "semiconductor": 906, "j4": 906, "kernel7l": 906, "new_devic": [906, 908], "0048": 906, "modalia": 906, "preinstal": 906, "hwmon0": 906, "thermal": 906, "thermal_zone0": 906, "hwmon1": [906, 908], "temp1_max": 906, "temp1_max_alarm": 906, "temp1_min": 906, "temp1_min_alarm": 906, "update_interv": 906, "milli": [906, 908], "22000": 906, "randomli": [906, 908], "nomenclatur": 906, "pulse width modul": 907, "resistor": 907, "bright": 907, "potentiomet": 907, "ssop": 907, "0b1000000": 907, "buse": [907, 908], "i2cdetect": [907, 908], "charactr": 907, "pca": 907, "simultan": [907, 973], "peculiar": 907, "pca9685a": 907, "nxp": 907, "dtoverlai": [907, 908], "pwm_pca9685": 907, "regmap_i2c": 907, "3f804000": 907, "0040": [907, 942], "npwm": 907, "unexport": [907, 942], "butt": [907, 988], "intercept": [907, 999], "dim": 907, "300000": [907, 1105], "fade": 907, "800000": [907, 1105], "600000": [907, 1105], "50000": 907, "apolog": 907, "kenel": 907, "devlop": 907, "pleasur": 907, "cornerston": 908, "unstabl": 908, "parasit": 908, "bitbang": 908, "gpiopin": 908, "profession": 908, "addon": 908, "pinout": 908, "01144fe43baa": 908, "w1_bus_master8": 908, "w1_bus_master1": 908, "breadboard": [116, 118, 908, 1157, 1164], "amaz": 908, "400000000000": 908, "800000000000": 908, "behalf": [908, 922, 976], "ad0": 908, "ad1": 908, "ad2": 908, "vcc": 908, "0x18": 908, "0b0011000": 908, "shortli": [908, 999], "execstart": 908, "36864": 908, "w1_bus_master2": 908, "w1_bus_master3": 908, "w1_bus_master4": 908, "w1_bus_master5": 908, "w1_bus_master6": 908, "w1_bus_master7": 908, "busno": 908, "abtract": 908, "prepackag": 908, "afford": 908, "alarm": [908, 972, 975], "conv_tim": 908, "w1_slave_driv": 908, "eeprom": 908, "ext_pow": 908, "w1_slave": 908, "22750": 908, "crc": 908, "rpi_volt": 908, "isa": 908, "in0": 908, "cpu_therm": 908, "temp1": 908, "w1_slave_temp": 908, "reliabl": 908, "radiou": 908, "disappear": 908, "0c4000000000": 908, "0x28": 908, "dalla": [908, 936], "02131d9920aa": 908, "5d": 908, "011432f138f9": 908, "misbehavior": 908, "instabl": 908, "pump": 908, "nuclear": 908, "plant": 908, "ssh-keygen": [909, 915], "password authent": [909, 915], "key based authent": [909, 915], "remote login": [909, 915], "unencrypt": 909, "rlogin": 909, "telnet": 909, "nsa": 909, "primarili": [909, 1002, 1121], "sftp": 909, "portno": 909, "unabl": 909, "propaget": 909, "sha256sum": 910, "72c18232434d0551af75f964ea66ae5d9271faba895f40a929fb17f19d7ab44c": 910, "mitm": 915, "uncomfort": 915, "keygen": 915, "safeguard": 915, "unrespons": 916, "port forward": 917, "portforward": 917, "secure copi": [917, 918], "hmmm": 917, "whateer": 917, "mydocu": 918, "recus": 918, "mobil": 918, "bandwidth": 918, "mediat": 918, "descriptiotn": 918, "file system": 919, "network file system": 919, "smb": 919, "crawl": 919, "debianish": 919, "mountpoint": 919, "grant": 919, "idmap": 919, "errnum": 920, "strerror_r": 920, "buflen": 920, "cleanest": 920, "_r": 920, "reentrant": 920, "syscal": 922, "getaddrinfo": 922, "ri": 924, "nbytes_read": [924, 925, 926], "24608": 924, "1024root": 924, "nager": 924, "698nager": 924, "gatewai": 925, "peer": [925, 928], "netinet": 925, "af_inet": 925, "sock_stream": 925, "sockaddr_in": 925, "sin_famili": 925, "sin_port": 925, "inet_aton": 925, "sin_addr": 925, "ipproto_ip": 925, "sa_famili": 925, "inet_addr": 925, "10hallo": 925, "16thi": 925, "ong": 925, "14ong": 925, "timerfd_settim": 926, "itimerspec": [926, 960], "nasti": [927, 960], "ingenu": 928, "smae": 928, "o_append": 928, "o_cloexec": 928, "sigpip": [928, 974], "whenc": 928, "seek_cur": 928, "seek_end": 928, "occupi": [928, 930, 931], "status": 929, "srcfile": 929, "dstfile": 929, "1073741825": 930, "0k": 930, "texttt": 931, "dup2": 931, "oldfd": 931, "newfd": 931, "o_": 931, "bytes_to_writ": [932, 933, 935], "wxr": 932, "o_tmpfil": 932, "speci": 932, "pli": 932, "nread": [934, 940, 943, 966, 969, 973], "thats": [934, 935], "litter": 935, "misspel": 935, "24625": 936, "24562": 936, "pread": 938, "pwrite": 938, "readv": 938, "writev": 938, "uio": 938, "iovec": 938, "iov": 938, "iovcnt": 938, "preadv": 938, "pwritev": 938, "ftruncat": [938, 969, 970], "filedescriptor": 938, "gpio26": [940, 942, 943], "subtre": 942, "fe200000": 942, "gpiochip488": 942, "gpiochip504": 942, "active_low": 942, "fd_set": [943, 966], "exc_fd": 943, "fd_zero": [943, 966], "nreadi": 943, "fd_isset": [943, 966], "eek": 943, "intens": 944, "ppid": 944, "tid": 944, "tsd": 944, "spezif": 944, "_reentrant": 944, "lpthread": [944, 960, 979], "start_routin": 945, "pthread_exit": 945, "pthread_cancel": 945, "pthread_attr_setdetachst": 945, "detachst": 945, "pthread_create_detach": 945, "pthread_detach": 945, "pthread_self": 945, "pthread_equ": 945, "30650": 945, "13961": 945, "correl": 945, "gettid": 945, "pthread_mutexattr_t": [947, 963], "pthread_mutex_destroi": 947, "pthread_mutex_trylock": 947, "global_mutex": 947, "pthread_mutexattr_settyp": 947, "pthread_mutex_norm": 947, "pthread_mutex_errorcheck": 947, "pthread_mutex_recurs": 947, "pthread_mutex_default": 947, "pthread_cond_destroi": 949, "pthread_cond_broadcast": 949, "parlanc": 949, "set_autoreset_ev": 949, "ev": 949, "is_set": 949, "wait_autoreset_ev": 949, "acquiriert": 949, "autoreset": 949, "spuriou": 949, "woken": 949, "pthread_condattr_t": 949, "pthread_cond_initi": 949, "pthread_cond_timedwait": 949, "abstim": 949, "use_glob": 951, "pthread_once_t": 951, "global_onc": 951, "pthread_once_init": 951, "init_glob": 951, "pthread_onc": 951, "once_control": 951, "init_routin": 951, "pthread_key_cr": 951, "__thread": 951, "pthread_atfork": 952, "legales": 952, "lock_rac": 954, "succeed": [954, 1140], "foreground": [955, 1008], "huh": 955, "paradox": 955, "setenv": 957, "putenv": 957, "unsetenv": 957, "clearenv": 957, "customvar": 957, "timesl": 958, "starv": 958, "throughput": 958, "sha1": [958, 961, 977], "voluntarili": [958, 961], "lrt": 960, "app_statu": 960, "tick_count": 960, "update_statu": 960, "sigact": [960, 973, 974], "sa_handl": [960, 973, 974], "sigrtmin": 960, "sigev": [960, 970], "sev": 960, "sigev_notifi": 960, "sigev_sign": 960, "sigev_signo": 960, "timer_t": 960, "tspec": 960, "nsec": 960, "timer_settim": 960, "show_statu": 960, "freerto": [960, 963], "syncron": 960, "update_status_func": 960, "initial_t": 960, "interval_t": 960, "show_status_func": 960, "update_task": 960, "show_task": 960, "231765": 960, "225819": 960, "5635": 960, "lwp": 960, "231766": 960, "231767": 960, "tracer": 960, "restart_syscal": 960, "clock_nanosleep": 960, "clock_realtim": 960, "500000000": 960, "033": 960, "7m": 960, "flash_func": 960, "is_revers": 960, "flash_task": 960, "flasher": 960, "indepen": 960, "toggl": 960, "fore": [960, 1010], "particularli": 961, "suscept": 961, "renic": 962, "din": 962, "44300": 962, "echtzeitbetrieb": 962, "betrieb": 962, "rechensystem": 962, "verarbeitung": 962, "anfallend": 962, "st\u00e4ndig": 962, "derart": 962, "betriebsbereit": 962, "da\u00df": 962, "verarbeitungsergebniss": 962, "innerhalb": [962, 1170], "vorgegebenen": 962, "zeitspann": 962, "000014": 962, "013914m": 962, "91410827636698u": 962, "000002": [962, 964], "002382m": 962, "3820173632900326u": 962, "intrus": 962, "controversi": 962, "sched_oth": 963, "relinquish": 963, "sched_param": 963, "sched_getschedul": 963, "sched_prior": 963, "pthread_setschedparam": 963, "pthread_getschedparam": 963, "predefini": 963, "pthread_attr_setschedpolici": 963, "spoken": 963, "pthread_mutexattr_setprotocol": 963, "pthread_prio_inherit": 963, "pthread_prio_protect": 963, "risen": 963, "pthread_mutexattr_setprioceil": 963, "000105": 964, "105247m": 964, "24749755859354u": 964, "000015": 964, "014643m": 964, "64260525619006u": 964, "105u": 964, "000067": 964, "067263m": 964, "2626495361326u": 964, "000003": 964, "002883m": 964, "8827592917392217u": 964, "ondemand": 964, "governor": 964, "cpufreq": 964, "scaling_governor": 964, "cpuinfo_cur_freq": 964, "067036m": 964, "03615188598611u": 964, "000001": 964, "001257m": 964, "2571678380193383u": 964, "000065": 964, "065188m": 964, "188407897949u": 964, "002376m": 964, "3758434034066656u": 964, "001042": 964, "042438m": 964, "4375534057617u": 964, "000017": 964, "017123m": 964, "123423079175748u": 964, "000143": 964, "142646m": 964, "6458358764593u": 964, "000005": 964, "004995m": 964, "994855006705264u": 964, "_syse": 966, "exit_failur": 966, "consume_fd": 966, "random_fd": 966, "tty_fd": 966, "nfd": 966, "ttys4": 966, "in_fd": 966, "eof_detect": 966, "shm": [968, 969, 970], "099": 968, "sem": [968, 969, 970], "shared memori": 969, "message queu": 969, "mman": 969, "fstat": 969, "st_size": 969, "map_fail": 969, "shm_open": [969, 970], "tmpf": [969, 970], "resiz": 969, "4095": 969, "weigh": 969, "map_shar": 969, "counter_loc": 969, "sem_t": [969, 970], "sem_open": 969, "sem_fail": 969, "sem_wait": 969, "sem_post": 969, "mq_attr": [969, 970], "mq_maxmsg": [969, 970], "mq_msgsize": [969, 970], "mqd_t": [969, 970], "mq_open": 969, "mq_send": 969, "mq_receiv": 969, "shm_unlink": 970, "overtak": 970, "mq_overview": 970, "oflag": 970, "mq_flag": 970, "mqde": 970, "msg_ptr": 970, "msg_len": 970, "msg_prio": 970, "sevp": 970, "disturb": [970, 973], "elegantli": 970, "qsize": 970, "signo": 970, "notify_pid": 970, "goiven": 970, "sem_overview": 970, "sem_trywait": 970, "sem_timedwait": 970, "abs_timeout": 970, "shm_close": 970, "shm_overview": 970, "051": [972, 973], "segv": [973, 974], "mortem": [973, 1099], "core_pattern": 973, "termination_handl": 973, "sigint": [973, 974], "sig_atomic_t": [973, 974], "term_act": 973, "alarm_handl": 973, "alarm_act": 973, "sigset_t": [973, 975], "termination_sign": 973, "sigemptyset": [973, 974], "sigaddset": [973, 974], "sigquit": 973, "sigprocmask": [973, 974], "sig_block": 973, "impolit": 973, "sig": [973, 974], "consume_pip": 973, "pipenam": 973, "puzzl": 973, "pthread_sigmask": [973, 974], "sigtstp": 974, "sigalrm": [974, 975], "sigchld": 974, "abnorm": 974, "sigabrt": 974, "sigsegv": 974, "sigbu": 974, "sigil": 974, "sigfp": 974, "unblock": 974, "oldset": 974, "sigpend": 974, "sigfillset": 974, "signum": 974, "sigdelset": 974, "sigismemb": 974, "sigsetop": 974, "recept": 974, "sa_mask": 974, "sa_flag": 974, "oldact": 974, "sig_ign": 974, "sig_dfl": 974, "sighandler_t": 974, "_exit": 974, "barebon": 975, "louder": 975, "stallman": 976, "risc": 976, "llvm": 976, "24360": 976, "hello_h": [976, 992, 994], "24416": 976, "linkabl": [976, 1112, 1167], "0000000000401040": 976, "_start": 976, "0000000000401000": 976, "_init": 976, "00000000004011b8": 976, "_fini": 976, "crt": 976, "crt1": 976, "crti": 976, "crtn": 976, "0000000000404000": 976, "_global_offset_table_": 976, "reloc": 976, "1762320": 976, "0000000000401126": 976, "1224008": 976, "greetdemo": 977, "cmake_system_nam": 977, "toolchain_base_dir": [977, 991], "cmake_c_compil": 977, "cmake_cxx_compil": 977, "find_xxx": 977, "cmake_find_root_path_mode_program": 977, "cmake_find_root_path_mode_librari": 977, "cmake_find_root_path_mode_includ": 977, "toolchian": 977, "cmake_toolchain_fil": 977, "libgreet": [977, 978, 984, 993, 994], "13921": [977, 978], "cmakecach": [977, 978], "26192": [977, 978], "27920": [977, 978], "8503": [977, 978], "eabi5": 977, "armhf": 977, "5db807d9b005b19e1e0c957755fa7ca7b771edcb": 977, "debug_info": 977, "armv7l": 979, "challeng": 979, "metadistribut": 979, "miniumum": 979, "realiti": 979, "rasberri": 981, "clickabout": 986, "workabl": 988, "tarbal": 988, "lastest": 988, "x86_64_arm": 988, "precompos": 988, "uncompress": 988, "73812": 988, "1107168": 988, "1481768": 988, "1968456": 988, "1091864": 988, "1030432": 988, "1221816": 988, "lynxbe": 990, "y3p9kn7mjei": 990, "cli": 990, "containerd": 990, "dockerhub": 990, "hub": 990, "sh_18_04": 990, "78683068": 990, "1292296": 990, "70mb": 991, "73018472": 991, "auxvec": 991, "bitsperlong": 991, "bpf_perf_ev": 991, "rapidli": 992, "phoni": [992, 993, 994], "origaniz": 993, "relink": 993, "0x2e20": 993, "vdso": 993, "0x00007fffe9fa7000": 993, "0x00007f75ca289000": 993, "0x00007f75ca46d000": 993, "r_x86_64_32": 993, "fpic": 993, "whom": 994, "hello_flex": 994, "hello_flexible_h": 994, "cq": 994, "lisp": 995, "create_f": 995, "create_print": 995, "print_blah": 995, "print_someth": 995, "sytax": 996, "432x288": 996, "shutil": 997, "tarfil": 997, "temporarydirectori": 997, "tmpd": 997, "tarnam": 997, "expandvar": 997, "contrain": 997, "__enter__": 997, "__exit__": 997, "openforread": 997, "ipykernel_25062": 997, "2037535577": 997, "myprint": 997, "orig_print": 997, "exc_val": 997, "exc_tb": 997, "myarg": 997, "total_ord": 998, "ipykernel_25080": 998, "2840657929": 998, "a_vari": 999, "dec": [999, 1044], "fallback": [999, 1019], "baseexceptiongroup": 999, "exceptiongroup": 999, "subtyp": 999, "maybe_fail": 999, "ipykernel_25098": 999, "104829323": 999, "lone": 999, "4008457068": 999, "mysubsystemerror": 999, "reallybaderror": 999, "someothererror": 999, "definitelybad": 999, "evenwors": 999, "collapsingtheworld": 999, "errorcod": 999, "__cached__": 1000, "_frozen_importlib_extern": 1000, "sourcefileload": 1000, "0x7fd0b231d4b0": 1000, "blindli": 1000, "ansibl": 1000, "matno": 1000, "conffil": 1000, "confcod": 1000, "confdict": 1000, "8103": 1000, "object ori": [1001, 1156], "keyword argu": 1001, "starstararg": [1001, 1022], "for loop": 1001, "iterator protocol": 1001, "operator overload": 1001, "drawn": 1002, "cnt": 1002, "inputrang": 1002, "disgust": 1002, "gentli": 1002, "smarter": 1002, "nolimit": 1003, "fibo_numb": 1003, "jerki": 1003, "max_numb": 1003, "satisfactori": 1003, "python_1010_generators_yield": 1003, "glossari": 1004, "ipykernel_25122": 1004, "4235178104": 1004, "breadth": 1004, "subnamespac": 1007, "mysupermodul": 1007, "mysuperfunct": 1007, "subpackage1": 1007, "module1": 1007, "module2": 1007, "subpackage2": 1007, "disambigu": 1007, "increment_background": [1008, 1010], "background_integ": 1008, "foreground_integ": 1008, "runn": 1008, "backgroundincrement": 1008, "uncool": 1008, "14784035": 1010, "quack": 1012, "mockup": 1012, "33531576640593": 1012, "301541903167205": 1012, "04286166247334": 1012, "61691861803947": 1012, "15111834116003": 1012, "__next__": 1012, "brokensensor": 1012, "gettemperatur": 1012, "ipykernel_25250": 1012, "2792400554": 1012, "71536506": 1012, "152158437": 1012, "1134347102": 1012, "refect": 1013, "ipykernel_25268": 1013, "1242235954": 1013, "4119786358": 1013, "emp": 1016, "add_employe": 1016, "mgr": 1016, "isold": [1016, 1017, 1117], "haubentauch": [1016, 1017, 1020, 1117], "parentcl": 1016, "funnili": 1016, "make_child": 1017, "parent1": 1017, "parent2": 1017, "vvv": 1017, "father": 1017, "vvvvvv": 1017, "tabular": 1018, "someclass": 1018, "persons_from_csv": 1018, "person_dict": 1018, "operators object oriented program": 1019, "behaivor": 1019, "number2": 1019, "int2": 1019, "ipykernel_25360": 1019, "3709071117": 1019, "151628379": 1019, "whistl": [1019, 1022], "symmetr": [1019, 1049], "commut": 1019, "452733317": 1019, "summar": 1019, "ipykernel_25378": 1020, "2144392361": 1020, "attrnam": 1020, "meier": 1020, "3124626440": 1020, "1226798660": 1020, "expicitli": 1021, "0x7f7217b74a90": 1021, "toolkit": 1023, "marker": 1025, "eighti": 1025, "monti": 1025, "incompat": [1025, 1031, 1039, 1050], "benevol": 1025, "bdfl": [1025, 1109], "overse": 1025, "januari": 1025, "dropbox": 1025, "awk": 1027, "sensit": 1030, "throughout": 1030, "0o01234": 1031, "14159265359": [1031, 1045], "3e12": 1031, "afterthought": 1031, "\u00e4\u00f6\u00fc": 1031, "xa4": 1031, "xb6": 1031, "xbc": 1031, "xe4": 1031, "compel": 1031, "codebas": 1031, "ancient": 1031, "sequencish": 1035, "sixtim": 1035, "seen_sixey": 1035, "blahblahblahblahblah": 1036, "aah": 1037, "a_list": 1037, "a_tupl": 1037, "hlow": 1037, "hlowrd": 1037, "straw": [1038, 1046], "heritag": 1039, "139991214867984": 1040, "139991214868016": 1040, "139991214868240": 1040, "139990904469888": 1040, "139990904585600": 1040, "ipykernel_25460": 1041, "723444260": 1041, "globvar": 1041, "parameterizab": 1042, "ipykernel_25478": 1042, "3939188879": 1042, "3571579993": 1042, "program_exit": 1042, "exitstatu": 1042, "spam": [1044, 1107], "x58": 1044, "07d": 1045, "0x": 1045, "5x": 1045, "0x2f": 1045, "4x": 1045, "0x002f": 1045, "5o": 1045, "0o31": 1045, "04d": 1045, "0042": 1045, "05d": 1045, "00042": 1045, "thistl": 1046, "thorn": 1046, "ipykernel_25532": 1046, "677815794": 1046, "annoy": 1046, "sqn": 1047, "defval": 1048, "iterkei": 1048, "keyiter": 1048, "0x7ff2e8753418": 1048, "unord": 1049, "tunabl": 1050, "shoudn": 1050, "0x7fca2c785b70": 1051, "tof": 1051, "outputfilenam": 1052, "argumentpars": 1052, "add_argu": 1052, "parse_arg": 1052, "ou": 1052, "ylabel": [1054, 1105], "xmin": 1054, "xmax": 1054, "ymin": 1054, "ymax": 1054, "twine": 1055, "lotsa": [1055, 1128], "long_descript": 1055, "long_description_content_typ": 1055, "beta": 1055, "osi": 1055, "approv": 1055, "package_dir": 1055, "python_requir": 1055, "install_requir": 1055, "paho": [1055, 1116], "pyproject": 1055, "toml": 1055, "backend": 1055, "build_meta": 1055, "yadda": 1055, "sdist": 1055, "python_course_2022_11_07": 1055, "12549": 1055, "BE": 1055, "mydb": 1056, "hardli": 1057, "femal": 1062, "miracl": [1065, 1082], "previouslin": 1069, "ifi": 1082, "uniqifi": 1083, "sensor_const": 1088, "test_sensor_const": 1088, "ii": [1089, 1091, 1095, 1097, 1108], "user_record": [1090, 1092], "read_csv_head": [1090, 1097], "read_csv_nohead": [1092, 1096, 1097], "csvfilenam": 1094, "test_noheader_person": 1095, "read_noheader_person": 1095, "test_must_not_use_global_variables_as_return_object": 1095, "filename1": 1095, "noheader1": 1095, "filename2": 1095, "noheader2": 1095, "users1": 1095, "users2": 1095, "test_header_person": 1095, "read_header_person": 1095, "test_user_json_person": 1095, "userdb_json": [1095, 1096], "test_person_to_json": 1095, "joerg_sent": 1095, "to_json_person": 1095, "joerg_receiv": 1095, "from_json_person": 1095, "envis": [1096, 1154], "user_json": 1096, "to_json": 1096, "test_user_json": 1096, "test_user_to_json": 1096, "user_s": 1096, "json_user_s": 1096, "from_json": 1096, "test_nohead": 1097, "test_head": 1097, "lectur": [1099, 1168], "unsupervis": [1102, 1107], "conveyor": 1102, "belt": 1102, "linear_regress": [1103, 1106], "model_select": [1103, 1105], "train_test_split": [1103, 1105], "linear_model": [1103, 1105], "linearregress": [1103, 1105], "history_data": [1103, 1104, 1105, 1106], "inputfeatur": [1103, 1105], "outputfeatur": [1103, 1105], "input_train": [1103, 1105], "input_test": [1103, 1105], "output_train": [1103, 1105], "output_test": [1103, 1105], "test_siz": [1103, 1105], "output_predict": [1103, 1105], "visualcross": 1104, "york": [1104, 1105], "wind": [1104, 1105], "chill": [1104, 1105], "precipit": [1104, 1105], "snow": [1104, 1105], "gust": [1104, 1105], "humid": [1104, 1105], "rain": 1104, "cloudi": 1104, "995833": 1105, "688889": 1105, "287500": 1105, "327273": 1105, "012222": 1105, "690278": 1105, "470769": 1105, "369444": 1105, "513421": 1105, "946106": 1105, "574023": 1105, "313256": 1105, "994536": 1105, "070695": 1105, "025980": 1105, "302423": 1105, "214825": 1105, "665492": 1105, "900000": 1105, "700000": 1105, "090000": 1105, "050000": 1105, "377500": 1105, "750000": 1105, "950000": 1105, "650000": 1105, "330000": 1105, "325000": 1105, "850000": 1105, "425000": 1105, "825000": 1105, "715000": 1105, "470000": 1105, "970000": 1105, "multidimension": 1105, "xlabel": 1105, "coef_": 1105, "80189231": 1105, "intercept_": 1105, "95355086": 1105, "609608": 1105, "571879": 1105, "736988": 1105, "170933": 1105, "798254": 1105, "189739": 1105, "180394": 1105, "449230": 1105, "661530": 1105, "057745": 1105, "850176": 1105, "284120": 1105, "685067": 1105, "weather": [1106, 1107], "splice": [1106, 1107], "cute": 1106, "paper": 1106, "aspir": [1106, 1133], "dilig": 1107, "bite": 1107, "forecast": 1107, "agi": 1107, "asi": 1107, "forest": 1107, "predictor": 1107, "accuraci": 1107, "classif": 1107, "unlabel": 1107, "reinforc": 1107, "reward": 1107, "bay": 1107, "sepp": 1108, "tupleunpack": 1108, "spell": 1108, "redundantli": 1108, "quotechar": 1108, "spreadsheet": 1108, "odbc": 1109, "mysql": 1109, "informix": 1109, "berkeleydb": 1109, "mongodb": 1109, "rollback": 1109, "initd": 1111, "psycopg": 1111, "libpq": 1111, "conninfo": 1111, "psycopg2": 1111, "schwammerldb": 1111, "android": 1112, "schwammerln": 1112, "giftig": 1112, "geniessbar": 1112, "dbm": 1112, "steinpilz": 1112, "roehren": 1112, "speisetaeubl": 1112, "lamellen": 1112, "speitaeubl": 1112, "eierschwammerl": 1112, "teufelsroehrl": 1112, "overcod": 1113, "512119": 1113, "european": 1113, "steroid": 1113, "htmlhelp": 1113, "charset": 1113, "latin1": 1113, "chines": 1113, "enc": 1113, "0xfc": 1113, "0xdf": 1113, "0xf6": 1113, "\u00df": 1113, "cyril": 1113, "received_enc": 1113, "lg_enc": 1113, "bye_enc": 1113, "artificial intellig": 1114, "postgr": 1114, "mssql": 1114, "data sci": 1114, "ecosystem": 1114, "antp": 1116, "53767": 1116, "tcp6": 1116, "mosquitto_pub": 1116, "easiest": 1116, "message_receiv": 1116, "userdata": 1116, "on_messag": 1116, "loop_forev": 1116, "mosqitto_pub": 1116, "styrian": 1116, "esp": 1116, "666608091972": 1117, "ignore_index": 1117, "new_person": 1117, "saskia": 1117, "456710042003": 1117, "irrevers": 1118, "ipykernel_25938": 1121, "3315724720": 1121, "maybe_cal": [1121, 1122], "apply_if_cal": [1121, 1122], "_getitem_axi": [1121, 1122], "_is_scalar_access": [1121, 1122], "1519": 1121, "_validate_integ": 1121, "1521": 1121, "_ix": 1121, "len_axi": 1121, "_get_axi": 1121, "1451": 1121, "1453": 1121, "rangeindex": 1122, "get_loc": 1122, "toler": 1122, "3621": 1122, "casted_kei": 1122, "_lib": 1122, "pyx": 1122, "indexengin": 1122, "hashtable_class_help": 1122, "pxi": 1122, "pyobjecthasht": 1122, "get_item": 1122, "ipykernel_25971": 1122, "1471010945": 1122, "thru": 1122, "1201": 1122, "_validate_kei": 1122, "_get_label": 1122, "1203": 1122, "_get_slice_axi": 1122, "slice_obj": 1122, "1151": 1122, "5667": 1122, "1153": 1122, "1155": 1122, "_handle_lowerdim_multi_index_axis0": 1122, "tup": 1122, "drop_level": 1122, "new_index": 1122, "3875": 1122, "3877": 1122, "3623": 1122, "3625": 1122, "listlik": 1122, "_check_indexing_error": 1122, "sort_index": 1122, "multiindex": 1122, "contrari": 1123, "lower_email": 1124, "rentner": 1124, "is_palindrom": 1124, "facto": [1125, 1149], "subel": 1125, "attrib": 1125, "getroot": 1125, "package manag": 1127, "project manag": [1127, 1155], "unit test": 1127, "virtual environ": 1127, "affin": 1127, "witch": 1128, "gnore": 1128, "ackup": 1128, "bort": 1128, "cert": 1128, "pem": 1128, "pythonhost": 1128, "e17846ef3601dcb6f118ea447439650e0c35cb4fe60274fbe24214156df2": 1128, "cp38": 1128, "manylinux2010_x86_64": 1128, "ext": 1128, "argcomplet": 1128, "asn1crypto": 1128, "ensurepip": [1129, 1135], "test_project": 1133, "test_soup": 1133, "test_task": 1133, "stringent": 1133, "discoveri": 1133, "syndrom": [1133, 1134, 1140], "test_person_point": 1133, "deselect": 1133, "tweak": [131, 1133], "test_": 1133, "test_simpl": 1133, "test_trivi": 1133, "test_trivial_but_fail": 1133, "___________________________": 1133, "____________________________": 1133, "test_stat": 1133, "implementation_point": 1133, "implementor1": 1133, "implementor2": 1133, "documentation_point": 1133, "integration_point": 1133, "implementation_perc": 1133, "documentation_perc": 1133, "integration_perc": 1133, "total_perc": 1133, "total_point": 1133, "gathered_point": 1133, "test_another_task_aspect": 1133, "pathlib": 1133, "test_ini_file_pars": 1133, "my_test_fil": 1133, "mytestcas": 1134, "runtest": 1134, "assertequ": 1134, "texttestrunn": 1134, "__db": 1134, "create_databas": 1134, "fill_test_data": 1134, "remove_databas": 1134, "testfeature1": 1134, "testfeature2": 1134, "testsuit": 1134, "addtest": 1134, "testload": 1134, "loadtestsfromtestcas": 1134, "testsometh": 1134, "failif": 1134, "failunless": 1134, "failunlessequ": 1134, "failifequ": 1134, "failunlessalmostequ": 1134, "failunlessrais": 1134, "env_dir": 1135, "my_venv": 1135, "csh": 1135, "easy_instal": 1135, "pip3": 1135, "powershel": 1135, "joblib": 1135, "threadpoolctl": 1135, "deactiv": 1135, "my_recreated_venv": 1135, "persuad": 1135, "will_fail": [1139, 1142], "initgoogletest": [1140, 1145], "run_all_test": [1140, 1145], "lgtest": [1140, 1142], "onesuit": 1140, "test1": 1140, "test2": 1140, "anothersuit": 1140, "postive_pattern": 1140, "negative_pattern": 1140, "gtest_list_test": 1140, "faildemo": 1140, "failisfat": 1140, "assertdemo": 1140, "assertisfat": 1140, "expect_": 1140, "expectdemo": 1140, "expectisnonfat": 1140, "expect_tru": 1140, "expect_eq": 1140, "0x58": 1140, "0x55": 1140, "assert_": 1141, "repoqueri": 1142, "dpkg": 1142, "listfil": 1142, "joergfaschingbau": 1142, "cmake_compiler_is_gnucc": 1142, "ggdb": 1142, "googlebenchmark": 1142, "predef": [1144, 1145], "predefinedtestenviron": 1145, "paranoidtest": 1145, "untechn": 1145, "thefixtur": 1145, "testthatmodifiesst": 1145, "complexfixtur": 1145, "first_n": 1145, "sometest": 1145, "egal": 1147, "welcher": 1147, "schulungstyp": 1147, "problemlo": 1147, "verifiziert": 1147, "formlos": 1147, "anliegen": 1147, "umgehend": 1147, "setzen": 1147, "besprechen": 1147, "gestaltung": 1147, "schl\u00fcssigkeit": 1147, "chronologisch": 1147, "gehaltenen": 1147, "querzulesen": 1147, "roter": 1147, "faden": 1147, "ablaufen": 1147, "\u00e4nderungen": 1147, "kursgeschehen": 1147, "passieren": 1147, "detailliert": 1147, "kosten": 1147, "terminen": 1147, "inhouseschulungen": 1147, "buchenden": 1147, "terminisiert": 1147, "zustandekommt": 1147, "zeitlich": 1147, "\u00f6rtlich": 1147, "flexibel": [1147, 1148], "zul\u00e4sst": 1147, "besond": 1147, "onlineschulungen": 1147, "erwiesen": 1147, "dedizierten": 1147, "implementieren": [1147, 1152], "instruktionen": [1147, 1151], "datenschutzrichtlinien": 1147, "genug": 1147, "durchweg": 1147, "wahlweis": 1147, "offenen": 1147, "anmelden": 1147, "inhouseschulung": 1147, "exklusiv": 1147, "\u00fcblicherweis": 1147, "firmenstandort": 1147, "basteln": [1147, 1164], "schwierig": 1147, "z\u00fcgig": 1148, "uhr": 1148, "punktlandung": 1148, "mbr": 1148, "bootet": 1148, "nachs\u00e4tz": 1148, "wahllos": 1148, "reinen": [1148, 1164], "gebastelt": 1148, "leichtfertigerweis": 1148, "richtigerweis": 1148, "multilib": 1148, "ausgestattet": [1148, 1157, 1164, 1171], "l\u00e4uft": 1148, "seltsamerweis": 1148, "dar\u00fcber": 1148, "zeitersparnisgr\u00fcnden": 1148, "hinweggeholfen": 1148, "vorcompilierten": 1148, "statisch": [1148, 1166], "gelinkten": 1148, "christof": 1148, "sourcen": 1148, "crosszucompilieren": 1148, "gescheitert": 1148, "ungl\u00fccklichen": 1148, "umstand": 1148, "schulungsrechn": 1148, "neu": 1148, "aufzusetzen": 1148, "kompil": 1148, "verschwunden": 1148, "buildscript": 1148, "konnt": 1148, "kreativen": 1148, "wiederhergestellt": 1148, "v\u00f6llig": 1148, "sinnfrei": 1148, "distributionen": 1148, "compilieren": [1148, 1150], "architekturen": 1148, "versucht": [1148, 1149, 1151], "richtigen": 1148, "leben": [1148, 1164], "anzuwenden": 1148, "leut": 1148, "anzusehen": 1148, "wort": [1148, 1150], "gefallen": 1148, "hart": 1148, "garantien": 1148, "durchau": 1148, "gerechtfertigt": 1148, "gesch\u00fctz": 1148, "auffahren": 1148, "enthaltenen": 1148, "n\u00fctzen": 1148, "stichwort": [1148, 1157, 1164], "mittelweg": 1148, "diffundieren": 1148, "aufruft": 1148, "startet": 1148, "ausgekl\u00fcgelt": 1148, "funktionsweis": 1148, "jeher": 1148, "kennt": [1148, 1170], "gewaltig": 1148, "geschichtsbelastet": 1148, "tr\u00e4gt": 1148, "intelligent": [1148, 1157, 1164], "trotz": 1148, "behauptungen": 1148, "gar": 1148, "lieblingsseit": 1148, "linuxthemen": 1148, "zentrisch": 1148, "bourne shel": [1149, 1159], "\u00fcbel": 1149, "sprechen": [1149, 1157, 1164], "vollst\u00e4ndig": 1149, "shellprogrammierung": 1149, "ruf": 1149, "schmutzigen": 1149, "stattdessen": 1149, "hauch": 1149, "pervers": 1149, "\u00e4sthetik": 1149, "verpassen": 1149, "geschicht": 1149, "kram": 1149, "environmentvariablen": 1149, "kontrollkonstrukt": [1149, 1150], "hauptteil": 1149, "stringmanipul": 1149, "obskur": 1149, "konstrukt": [1149, 1159], "auskommt": 1149, "umgang": [1149, 1159], "vorausgesetzt": [1149, 1151, 1152, 1160, 1166, 1167, 1169, 1170], "bibel": 1150, "hinzuf\u00fcgen": 1150, "erfind": 1150, "tickt": 1150, "wozu": 1150, "grenzen": 1150, "vorlag": 1150, "didaktik": 1150, "erg\u00e4nzt": 1150, "kontext": 1150, "heutigen": 1150, "dienen": 1150, "sprachkern": 1150, "unterrichten": 1150, "standardlibrari": 1150, "zugunsten": 1150, "bequemeren": 1150, "verzichten": 1150, "sprachdesign": 1150, "geachtet": 1150, "isoliert": 1150, "abseit": [1150, 1152, 1170], "mitbringt": 1150, "h\u00e4lt": 1150, "eignet": 1150, "hervorragend": [1150, 1157, 1165, 1170], "systemprogrammierung": 1150, "weglassen": 1150, "programmiert": [1150, 1152], "dementsprechend": [1150, 1170], "sinngem\u00e4ss": 1150, "aufgeteilt": 1150, "manipulieren": [1150, 1159], "maschineninstruktionen": 1150, "ausgef\u00fchrt": [1150, 1151], "geschwindigkeitsvorteil": 1150, "interpretierten": 1150, "nachteil": 1150, "verst\u00e4ndni": [1150, 1159, 1169], "speicherverwaltung": [1150, 1152, 1167], "integral": 1150, "zusammengesetzt": 1150, "speicherlayout": 1150, "wenigst": 1150, "worin": 1150, "programmstrukturierung": 1150, "deklar": 1150, "beliebtest": 1150, "unmeng": 1150, "flexibilit\u00e4t": [1150, 1167], "einbringen": 1150, "unbeliebtest": 1150, "fehlerm\u00f6glichkeiten": 1150, "verkettet": 1150, "fehlerszenarien": [1150, 1170], "absturz": 1150, "dahinsiechen": 1150, "debugginghilfen": 1150, "typumwandlungen": 1150, "hauptkritikpunkt": 1150, "sorglos": 1150, "integertypen": 1150, "breit": [1150, 1157], "regelwerk": 1150, "historisch": 1150, "aufarbeitung": 1150, "historischem": 1150, "ballast": 1150, "compileroptionen": 1150, "pr\u00e4prozessor": [1150, 1151], "leid": 1150, "grundz\u00fcgen": 1150, "gezeigt": [1150, 1159, 1164], "compilierung": 1150, "heutzutag": 1150, "wegzudenken": [1150, 1157], "damal": [1150, 1152], "programmen": [1150, 1151, 1166], "separat": 1150, "verbinden": 1150, "spielt": 1150, "archivieren": 1150, "linken": 1150, "programmgesundheit": 1150, "bedeutungen": 1150, "optimierungsm\u00f6glichkeiten": 1150, "memoryfehlern": 1150, "verwalten": 1150, "formatiert": 1150, "_und_": 1150, "komfort": 1150, "m\u00e4chtige": [1150, 1167], "jedoch": [1150, 1157, 1164, 1170], "weit": 1150, "fehlerimmunit\u00e4t": 1150, "allein": 1150, "verdienen": 1150, "erw\u00e4hnung": 1150, "stringbearbeitung": 1150, "heutig": 1150, "eigenwillig": 1150, "f\u00fclle": 1150, "erleichtern": 1150, "lauern": [1150, 1169], "gefahren": [1150, 1169, 1170], "sprachumfang": 1151, "angeht": 1151, "compiliert": 1151, "maschinencod": 1151, "pointern": 1151, "sofort": 1151, "beipflichten": 1151, "einmal": [1151, 1166, 1167, 1171], "beinharten": 1151, "typenkonvertierungen": 1151, "aufgesessen": 1151, "beleuchtet": [1151, 1169], "beschrittenen": 1151, "dunklen": 1151, "ecken": 1151, "widmet": 1151, "intensiv": 1151, "fehlersuch": 1151, "erkl\u00e4rungen": 1151, "sprachdefinit": 1151, "greifbar": 1151, "verdacht": 1151, "manch": 1151, "typkonversionen": 1151, "l\u00fccken": 1151, "typensystem": [1151, 1152], "techniken": [1151, 1157], "typensicherheit": 1151, "dunkl": 1151, "unn\u00f6tig": 1151, "programmhygien": 1151, "wege": 1151, "sauberen": 1151, "weisen": 1151, "optimierungstechniken": 1151, "anwenden": 1151, "optimierung": 1151, "erschweren": 1151, "lesbarkeit": 1151, "memoryzugriff": 1151, "ur": 1151, "beziehungsweis": 1151, "hardwareunterst\u00fctzung": 1151, "Ins": 1151, "kenntniss": [1151, 1152, 1160, 1166, 1167, 1169, 1170], "urspr\u00fcnglich": 1152, "erfunden": 1152, "leichter": 1152, "handhabbar": 1152, "erm\u00f6glichen": [1152, 1167], "ressourcenverwaltung": 1152, "kontrolliert": 1152, "mainstream": 1152, "einzug": 1152, "hie\u00df": 1152, "treffend": 1152, "seitdem": 1152, "vereinzelt": 1152, "soviel": 1152, "dampflokomot": 1152, "stellt": [1152, 1170], "vielfalt": 1152, "sprachkonstrukt": 1152, "genial": 1152, "gewagt": 1152, "behaupten": 1152, "anbelangt": 1152, "sprachmittel": 1152, "wichtigst": 1152, "n\u00e4mlich": 1152, "reichlich": [1152, 1157, 1164], "umstieg": 1152, "erw\u00e4gen": 1152, "embeddedbetriebssystem": 1152, "einsetzen": 1152, "vielerort": 1152, "m\u00f6glich": [1152, 1157], "datenkapselung": 1152, "objekten": 1152, "fallstrick": 1152, "korrektheit": 1152, "100ste": 1152, "strukturiert": 1152, "fehlerbehandlung": 1152, "generisch": 1152, "mechanismen": [1152, 1167, 1169, 1171], "mehrfachvererbung": 1152, "teilweis": 1152, "kapiteln": 1152, "unterschied": 1152, "erl\u00e4utert": [1152, 1157], "c++ 11": 1153, "enjoy": 1153, "overrrid": 1153, "coolest": 1153, "optinion": 1153, "oneshot": 1153, "communict": 1153, "unlearn": 1153, "inventor": 1154, "weren": 1155, "intricaci": 1155, "interdepend": 1155, "rudimentari": 1155, "graviti": 1156, "vocabulari": 1156, "confront": 1156, "reusab": 1156, "nicknam": 1156, "zentrum": [1157, 1164], "vollwertig": 1157, "selben": 1157, "betriessystemkonzept": 1157, "jahrzehnten": 1157, "bew\u00e4hrt": 1157, "automot": 1157, "sektor": 1157, "vertreten": 1157, "altbew\u00e4hrten": 1157, "konsequ": [1157, 1167], "ausbaut": 1157, "hardwareschnittstellen": 1157, "echtzeitf\u00e4higkeit": 1157, "dahint": 1157, "rundet": 1157, "hardwarebastelworkshop": 1157, "embeddedprogrammier": [1157, 1164], "l\u00e4nger": [1157, 1164], "normalen": [1157, 1164], "dateisystem": [1157, 1164], "versagt": [1157, 1164], "teuer": [1157, 1164], "erkauft": [1157, 1164], "elektronik": [1157, 1164], "testen": [1157, 1164, 1171], "hostsoftwar": [1157, 1164], "architekten": [1157, 1164], "plattformzusammensetzung": [1157, 1164], "entscheiden": [1157, 1164, 1171], "rechtfertigen": [1157, 1164], "logik": [1157, 1164], "steck": [1157, 1164], "beantworten": [1157, 1164, 1171], "eingeladen": [1157, 1164], "l\u00f6tmateri": [1157, 1164], "mitzubringen": [1157, 1164], "bastelei": 1157, "erfolgt": 1157, "vorhandenen": [1157, 1164, 1171], "minicomputern": 1157, "prototypen": 1157, "desktopbetriebssystem": [1157, 1164], "verh\u00e4ltniss": [1157, 1164], "512mb": [1157, 1164], "m\u00fchsam": [1157, 1164], "produktivsystem": [1157, 1164], "ohnehin": [1157, 1164], "unangebracht": [1157, 1164], "anf\u00e4ng": [1157, 1164], "filesystemen": [1157, 1164], "durchzuf\u00fchren": 1157, "filedeskriptoren": [1157, 1159], "getrennt": 1157, "abl\u00e4uf": 1157, "adressraum": 1157, "sorgfalt": 1157, "bloss": 1157, "gef\u00e4chert": 1157, "gewissen": 1157, "szenarien": 1157, "steuerungen": 1157, "gef\u00e4hrlich": 1157, "umfangreich": 1157, "hauptthema": 1157, "dennoch": 1157, "n\u00fctzlich": 1157, "haub": 1157, "schalten": [1157, 1164], "ausg\u00e4ngen": [1157, 1164], "abfragen": [1157, 1164], "eing\u00e4ngen": [1157, 1164], "sowohl": [1157, 1164], "dumm": [1157, 1164], "ereignisgesteuert": [1157, 1164], "mikrocontrollern": [1157, 1164], "aufgaben": [1157, 1164], "temperaturmessung": [1157, 1164], "expandierung": [1157, 1164], "ausgelagert": [1157, 1164, 1167], "dediziert": [1157, 1164], "angesteuert": [1157, 1164], "gegeben": [1157, 1164, 1166, 1167], "driverframework": 1157, "netzwerkstack": [1157, 1164], "einpasst": [1157, 1164], "schnittstellen": [1157, 1167], "implementationssprachen": 1157, "hardwareerfahrung": [1157, 1164], "linux kernel": 1158, "kernel driv": [1158, 1168], "wait queu": 1158, "block devic": 1158, "interrupt handl": 1158, "dose": 1158, "curios": 1158, "userpac": 1158, "massiv": 1158, "vital": 1158, "einblick": 1159, "gingen": 1159, "vieler": 1159, "demosess": 1159, "vertrackt": 1159, "entmystifiziert": 1159, "gef\u00fcrchteten": 1159, "erlernt": 1159, "inbetriebsetz": 1159, "hardwareingenieur": 1159, "angehend": 1159, "administratoren": 1159, "editieren": 1159, "bl\u00e4ttern": 1159, "textdateien": 1159, "schnittstel": 1159, "kombinationen": 1159, "kombin": 1159, "abschweifen": 1159, "programmierkenntniss": 1159, "zwingend": [1159, 1166], "make gnu": 1160, "gnu mak": 1160, "build manag": 1160, "seiner": [1160, 1167, 1171], "m\u00e4chtigen": 1160, "daran": 1160, "wendet": 1160, "interessiert": 1160, "gr\u00f6\u00dfere": 1160, "gebaut": 1160, "komplizierten": 1160, "griff": 1160, "regeln": 1160, "selbstdefiniert": 1160, "gewiss": [1160, 1165, 1167], "fertigkeit": 1160, "hemmenhofen": 1164, "gleichnamigen": 1164, "gerufen": 1164, "produktivem": 1164, "n\u00e4herzubringen": 1164, "spielekonsumenten": 1164, "kinder": 1164, "enden": 1164, "erstem": 1164, "breiteren": 1164, "drauf": 1164, "vorhandensein": 1164, "basisinfrastruktur": 1164, "vielem": 1164, "hervorragenden": 1164, "gestandenen": 1164, "obwohl": [1164, 1167], "sprachunabh\u00e4ngig": 1164, "brauchen": 1164, "computerspielen": 1164, "spielerischen": 1164, "f\u00fchren": 1164, "w\u00e4hlt": 1164, "lm": 1164, "netzwerkprotokol": [1164, 1170], "behaupt": 1165, "allen": 1165, "gro\u00dfkopferten": 1165, "kommerziellen": 1165, "systemen": 1165, "perforc": 1165, "etabliert": 1165, "erh\u00e4ltlich": 1165, "nachfolg": 1165, "abgel\u00f6st": 1165, "prim\u00e4r": 1165, "publikum": 1165, "sekund\u00e4r": 1165, "versionieren": 1165, "arbeitsweis": 1165, "bereinigung": 1165, "strategien": 1165, "programmierern": 1165, "vertrautheit": 1165, "vorteil": [1165, 1166], "umsteig": 1166, "\u00e4rgerni": 1166, "schl\u00e4gt": 1166, "ausgekl\u00fcgeltst": 1166, "systemcal": [1166, 1167, 1170], "sogenannt": 1166, "inspizieren": 1166, "grundprinzip": [1166, 1170], "sammlung": [1166, 1167], "ausf\u00fchrbar": 1166, "bedient": 1166, "handhabung": 1166, "gew\u00f6hnungsbed\u00fcrftig": 1166, "filedescriptoren": 1166, "lowlevel": 1166, "tiefen": 1167, "steigen": 1167, "alltagsprogrammier": 1167, "normalerweis": 1167, "verborgen": 1167, "hochperformant": 1167, "anwendungen": 1167, "modernen": [1167, 1169], "bertriebssystemen": 1167, "sogenanntem": 1167, "virtuellen": 1167, "speicherbereich": 1167, "instanzen": 1167, "desselben": 1167, "hauptspeich": 1167, "speicherzugriff": 1167, "schutzmechanismen": 1167, "miteinand": 1167, "kommunizieren": [1167, 1170], "semaphoren": 1167, "steinalt": 1167, "\u00fcberlebt": 1167, "keinesweg": 1167, "fehlerfrei": 1167, "benutzen": 1167, "verpasst": 1167, "beruht": 1167, "ladbar": 1167, "ressourcenschonung": 1167, "wasserdichten": 1167, "upgradepfad": 1167, "grundkenntni": [1167, 1169, 1170], "memory manag": 1168, "tcp-ip": 1168, "unverst\u00e4ndlich": 1169, "ungeachtet": 1169, "effizient": 1169, "propagiert": 1169, "soliden": 1169, "unbedacht": 1169, "handeln": 1169, "lebenszyklu": 1169, "gestartet": 1169, "versuchung": 1169, "gewalt": 1169, "terminieren": 1169, "konsequenzen": 1169, "joinabl": 1169, "detach": 1169, "eigenschaften": 1169, "racecondit": 1169, "vermeidung": 1169, "\u00fcberal": 1169, "vermutet": 1169, "integeroperationen": 1169, "kommunikationsmechanismen": 1169, "werkzeugkasten": 1169, "kommunikationskan\u00e4l": 1169, "niemal": 1169, "reihen": 1169, "traditionellen": 1169, "aufgenommen": 1169, "codebasi": 1169, "verzweigt": 1169, "ansehnlich": 1169, "realtimef\u00e4higkeiten": 1169, "priorit\u00e4ten": 1169, "f\u00fcgt": 1170, "benutzend": 1170, "programmierparadigma": 1170, "dar": 1170, "beschr\u00e4nkt": 1170, "streamverbindungen": 1170, "verbindungsaufnahm": 1170, "datagramm": 1170, "verbindungslos": 1170, "adressfamilien": 1170, "auffassung": 1170, "adress": 1170, "endpoint": 1170, "nummern": 1170, "adressen": 1170, "verbindungen": 1170, "hilfsfunktionen": 1170, "adresskonvertierung": 1170, "ipv6": 1170, "\u00e4quivalent": 1170, "ungleich": 1170, "ressourcenschonend": 1170, "pfadnamen": 1170, "bedienbar": 1170, "mittlerweis": 1170, "eingepasst": 1170, "angenehm": 1170, "umzugehen": 1170, "widmen": 1170, "verbundenen": 1170, "auszusetzen": 1170, "reagiert": 1170, "gelesen": 1170, "eventgetrieben": 1170, "knopfdruck": 1171, "abnimmt": 1171, "zahlreichen": 1171, "abgeklopft": 1171, "angst": 1171, "kaputtmachen": 1171, "konstruktiv": 1171, "einfachheit": 1171, "klarzumachen": 1171, "umzusetzen": 1171, "anstatt": 1171, "auszustatten": 1171, "gedanken": 1171, "erkannt": 1171, "entscheidung": 1171, "verbockt": 1171, "softwareentwickl": 1171, "jedwed": 1171, "stabilen": 1171, "abliefern": 1171, "entscheidungstr\u00e4g": 1171, "vorgesetzt": 1171, "schl\u00fcssige": 1171, "kan\u00e4l": 1171, "etablieren": 1171, "unittestframework": 1171, "tragen": 1171, "schwerf\u00e4llig": 1171, "halben": 1171, "\u00fcbrige": 1171, "zurechtzufinden": 1171, "vortragend": 1171, "aufgrund": 1171, "aufwarten": 1171, "beibringen": 1171, "\u00fcppigen": 1171, "verbergen": 1171, "pr\u00e4ferierten": 1171, "vortragenden": 1171, "kochtopf": [], "powercontrol": 316, "temperaturecontrol": 316, "get_target_temperatur": 316, "_run": 316, "kochtopftemperaturecontrol": 316, "get_current_temperatur": 316, "boilingpot_suit": 117, "status_report": 117, "percentage_displai": 117, "fh2021_boiling_pot_displai": [117, 124], "fh2021_display_infrastructur": [117, 123, 124], "logger_suit": 119, "loggerbasictest": 119, "sensor_values_suit": 119, "sensor_config_suit": 119, "duplicate_sensor": 119, "src_demo": [123, 126], "pwm_control": 126, "standup": 131, "heis": [738, 742], "crtp": 740, "fh2021_sensor_w1": 124, "fh2021_sensor_interfac": [115, 116, 118, 124], "acrobat": [116, 118], "fh2021_boiling_pot_integr": [], "fh2021_boiling_pot_basic_integr": 124, "fh2021_boiling_pot_full_integr": 124, "fh2021_datalogger_integr": 124, "tassk": []}, "objects": {}, "objtypes": {}, "objnames": {}, "titleterms": {"kontakt": 0, "navig": [0, 862], "googl": 0, "map": [0, 7, 131, 199, 204, 207, 210, 213, 229, 239, 303, 330, 526, 527, 555, 616, 617, 708, 709, 773, 919], "streetview": 0, "curriculum": [1, 73, 74], "vita": 1, "\u00fcber": [2, 184, 194, 199, 207, 215], "mich": [2, 201], "projekt": [3, 23], "au": 3, "selbstst\u00e4ndig": 3, "t\u00e4tigkeit": 3, "nichtselbstst\u00e4ndig": 3, "skill": [4, 148], "angebot": 5, "In": [5, 32, 45, 65, 112, 156, 158, 159, 161, 191, 194, 255, 256, 258, 277, 279, 302, 315, 353, 444, 446, 452, 453, 514, 519, 521, 562, 566, 577, 578, 579, 580, 581, 582, 607, 664, 668, 672, 702, 703, 709, 722, 780, 829, 830, 837, 893, 943, 976, 978, 992, 999, 1040, 1153], "hous": 5, "schulungen": [5, 1147], "zu": [5, 23, 177, 194], "meiner": 5, "person": [5, 252, 473, 672], "schwerpunk": 5, "c": [5, 7, 67, 68, 69, 70, 71, 97, 107, 108, 110, 111, 114, 148, 162, 177, 178, 194, 204, 212, 213, 229, 254, 255, 256, 258, 259, 267, 276, 278, 315, 316, 317, 338, 344, 353, 362, 402, 403, 440, 447, 452, 459, 466, 508, 514, 525, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 564, 570, 571, 575, 576, 577, 589, 595, 597, 634, 642, 657, 659, 660, 661, 664, 665, 697, 698, 702, 709, 710, 718, 727, 732, 736, 754, 902, 922, 940, 943, 1045, 1150, 1151, 1152, 1153, 1154, 1156], "python": [5, 8, 11, 59, 60, 62, 63, 90, 95, 144, 171, 174, 183, 184, 186, 187, 188, 190, 192, 194, 197, 199, 202, 208, 209, 211, 214, 216, 218, 221, 222, 223, 224, 225, 227, 228, 230, 233, 234, 237, 240, 242, 245, 247, 248, 249, 250, 251, 253, 255, 256, 258, 260, 261, 262, 263, 264, 265, 270, 272, 273, 277, 279, 280, 281, 282, 283, 284, 285, 286, 289, 290, 291, 292, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 311, 312, 313, 314, 315, 316, 318, 319, 335, 338, 340, 353, 660, 688, 702, 709, 902, 904, 1001, 1004, 1008, 1023, 1024, 1025, 1027, 1029, 1031, 1039, 1050, 1053, 1098, 1099, 1100, 1113, 1114, 1116, 1126, 1127, 1128, 1129, 1130, 1161, 1162], "linux": [5, 79, 80, 81, 97, 110, 111, 114, 151, 156, 164, 166, 167, 169, 176, 191, 193, 198, 203, 257, 266, 267, 287, 288, 338, 340, 353, 355, 779, 831, 832, 835, 841, 898, 900, 904, 905, 906, 908, 921, 939, 962, 1148, 1158, 1159, 1166, 1167, 1168, 1169, 1170], "schulungsstil": 5, "preis": 5, "cours": [6, 11, 12, 59, 60, 62, 63, 78, 144, 146, 167, 203, 212, 256, 258, 266, 295, 298, 337, 443, 1099, 1155, 1158], "materi": [6, 24, 28, 30, 174, 176, 191, 212, 334, 349, 350, 354, 443, 1098, 1099, 1120], "einleitung": [7, 204], "datatyp": [7, 194, 199, 201, 204, 207, 216, 220, 223, 226, 231, 233, 239, 243, 246, 248, 249, 261, 263, 264, 270, 271, 273, 281, 283, 284, 285, 289, 290, 291, 301, 303, 305, 307, 311, 312, 313, 319, 330, 358, 408, 411, 1002, 1031, 1032, 1036], "number": [7, 204, 207, 210, 231, 243, 246, 330, 688, 758, 765, 766, 929, 1003, 1019, 1022, 1031, 1039, 1040, 1061, 1064, 1074, 1075, 1117, 1121, 1122, 1145], "integ": [7, 184, 194, 199, 204, 207, 231, 233, 243, 246, 252, 264, 271, 291, 303, 307, 313, 330, 376, 423, 428, 644, 1010, 1031, 1040], "string": [7, 170, 171, 177, 184, 194, 201, 204, 207, 210, 215, 216, 220, 223, 226, 231, 233, 236, 239, 243, 246, 248, 249, 252, 261, 264, 268, 271, 285, 291, 303, 307, 313, 327, 329, 330, 357, 370, 371, 377, 383, 447, 625, 626, 627, 640, 671, 672, 1031, 1044, 1045, 1046, 1081, 1124], "compound": [7, 194, 204, 216, 220, 223, 226, 231, 233, 239, 243, 246, 249, 261, 281, 285, 291, 303, 307, 411, 1032], "list": [7, 11, 23, 170, 171, 184, 194, 201, 204, 207, 210, 215, 216, 220, 223, 226, 231, 233, 239, 243, 246, 249, 261, 264, 271, 281, 285, 291, 303, 313, 416, 447, 514, 538, 555, 569, 612, 660, 673, 710, 763, 790, 791, 792, 814, 884, 996, 999, 1002, 1003, 1012, 1032, 1040, 1047, 1076, 1077, 1128], "arrai": [7, 172, 194, 204, 357, 366, 370, 408, 410, 420, 433, 543, 595, 597, 605, 649, 664, 675, 714], "javascript": [7, 204, 243], "std": [7, 107, 131, 204, 213, 229, 255, 256, 258, 315, 316, 462, 521, 526, 527, 537, 555, 578, 579, 580, 581, 582, 590, 596, 597, 598, 599, 609, 616, 617, 627, 640, 653, 656, 660, 663, 665, 672, 708, 709, 710, 714, 716, 719, 720, 721, 723, 724, 729, 730, 731, 732, 734, 735, 736, 738, 744, 745, 746, 750, 753], "vector": [7, 107, 204, 521, 537, 555, 562, 578, 596, 597, 598, 599, 613, 656, 665, 710, 738, 955], "java": [7, 204], "dictionari": [7, 170, 184, 194, 199, 201, 204, 207, 215, 216, 220, 223, 226, 231, 233, 236, 239, 243, 246, 249, 252, 261, 264, 271, 281, 285, 291, 303, 307, 313, 330, 996, 1000, 1013, 1032, 1048, 1068, 1095], "kei": [7, 161, 204, 252, 330, 619, 620, 862, 913, 915], "valu": [7, 63, 189, 204, 275, 276, 330, 368, 424, 581, 940, 962, 1033], "set": [7, 38, 63, 189, 194, 199, 204, 207, 215, 216, 220, 223, 226, 231, 233, 239, 243, 246, 249, 261, 264, 271, 281, 285, 291, 303, 307, 313, 858, 859, 974, 996, 1032, 1049, 1087, 1112, 1122], "mathematisch": [7, 204], "mengen": [7, 194, 204], "while": [7, 171, 184, 194, 204, 223, 231, 233, 236, 239, 246, 249, 271, 313, 393, 394, 800, 805, 806, 1035, 1061, 1085], "function": [7, 43, 158, 171, 189, 194, 204, 207, 210, 213, 216, 220, 223, 231, 233, 239, 243, 248, 249, 252, 255, 256, 258, 260, 264, 271, 277, 285, 295, 296, 298, 301, 302, 303, 305, 311, 312, 313, 315, 316, 319, 335, 368, 370, 375, 402, 404, 406, 407, 412, 444, 445, 504, 538, 562, 571, 576, 578, 583, 587, 603, 660, 667, 670, 671, 672, 673, 682, 712, 724, 725, 763, 764, 826, 920, 922, 960, 995, 997, 998, 1000, 1002, 1003, 1022, 1039, 1041, 1042, 1043, 1051, 1073, 1075, 1079, 1082, 1090, 1092, 1124], "basic": [8, 63, 70, 90, 116, 150, 162, 171, 183, 188, 190, 191, 192, 193, 197, 198, 202, 203, 212, 221, 224, 227, 234, 240, 245, 248, 251, 257, 263, 266, 270, 273, 280, 283, 284, 285, 287, 288, 289, 290, 291, 292, 295, 298, 301, 302, 303, 305, 306, 307, 311, 312, 313, 314, 319, 330, 353, 398, 402, 405, 411, 438, 445, 461, 462, 516, 519, 584, 589, 592, 595, 596, 598, 602, 605, 616, 622, 631, 667, 675, 709, 714, 718, 719, 720, 721, 753, 765, 766, 767, 828, 831, 832, 835, 845, 884, 895, 900, 909, 921, 928, 936, 944, 976, 998, 999, 1052, 1054, 1088, 1107, 1118, 1119, 1139, 1140, 1141, 1159, 1162], "2021": [8, 11, 113, 195, 197, 200, 202, 203, 205, 208, 211, 212, 213, 214, 218, 221, 223, 224, 226, 227, 229, 327, 328, 335, 338, 339, 340, 341, 342, 343, 344, 353], "xx": 8, "yy": 8, "train": [8, 24, 25, 26, 27, 28, 144, 148, 158, 167, 172, 187, 188, 190, 191, 192, 193, 195, 197, 198, 202, 205, 208, 211, 212, 213, 214, 218, 221, 230, 234, 237, 240, 242, 245, 248, 251, 260, 263, 270, 273, 354, 1099, 1105], "inform": [8, 39, 136, 146, 158, 183, 186, 187, 188, 190, 191, 192, 193, 195, 197, 198, 202, 205, 208, 211, 212, 213, 214, 218, 221, 230, 234, 237, 240, 242, 245, 248, 251, 260, 263, 270, 273, 326, 335, 438, 722, 1029, 1099], "\u00fcberblick": [8, 195, 205, 214, 230, 242, 1152], "log": [8, 105, 135, 152, 187, 188, 191, 192, 200, 202, 203, 205, 208, 212, 214, 218, 221, 230, 242, 251, 335, 348, 349, 829, 830, 837], "tag": [8, 178, 197, 201, 205, 208, 214, 230, 242, 243], "1": [8, 19, 23, 37, 73, 78, 97, 107, 114, 153, 156, 168, 176, 178, 183, 187, 188, 190, 191, 192, 194, 195, 197, 202, 203, 205, 208, 212, 213, 214, 218, 221, 224, 227, 230, 234, 242, 267, 270, 273, 276, 277, 278, 279, 280, 284, 288, 290, 295, 301, 302, 305, 306, 316, 334, 336, 337, 344, 351, 353, 356, 357, 358, 360, 364, 368, 377, 379, 380, 381, 382, 386, 387, 390, 393, 399, 400, 401, 402, 403, 406, 408, 412, 416, 418, 420, 423, 424, 425, 426, 428, 429, 431, 432, 438, 452, 462, 465, 467, 503, 565, 567, 574, 585, 588, 595, 597, 678, 683, 724, 729, 735, 749, 750, 761, 766, 773, 784, 794, 862, 901, 902, 908, 917, 931, 944, 945, 947, 949, 951, 952, 963, 970, 974, 977, 978, 994, 1002, 1007, 1028, 1030, 1031, 1037, 1040, 1045, 1046, 1048, 1049, 1050, 1051, 1113, 1124, 1125, 1148], "2": [8, 19, 23, 37, 74, 78, 97, 107, 114, 153, 156, 178, 183, 184, 187, 188, 190, 191, 192, 194, 197, 201, 202, 203, 205, 208, 212, 213, 214, 218, 221, 223, 224, 227, 230, 234, 242, 267, 270, 273, 276, 277, 278, 279, 280, 284, 288, 295, 301, 302, 305, 306, 312, 316, 349, 351, 353, 356, 357, 358, 360, 364, 368, 377, 379, 380, 381, 382, 386, 387, 390, 393, 399, 400, 402, 403, 406, 408, 412, 416, 418, 420, 423, 424, 425, 426, 428, 429, 431, 432, 438, 453, 462, 465, 467, 503, 552, 565, 567, 574, 585, 588, 595, 597, 679, 684, 724, 729, 735, 749, 750, 766, 773, 794, 862, 901, 902, 908, 917, 931, 944, 945, 947, 949, 951, 952, 963, 970, 974, 977, 978, 990, 994, 1002, 1007, 1028, 1030, 1031, 1037, 1039, 1040, 1046, 1048, 1049, 1050, 1051, 1109, 1111, 1112, 1113, 1124, 1125], "live": [8, 42, 44, 45, 170, 173, 195, 205, 208, 218, 267, 560, 600, 601, 603, 604, 607, 608, 609, 621, 660, 671, 704, 705, 732, 734, 833, 859, 923, 941], "hack": [8, 42, 44, 45, 170, 173, 195, 205, 208, 218, 267, 270, 274, 277, 280, 306, 560, 600, 601, 603, 604, 607, 608, 609, 621, 660, 671, 704, 705, 732, 734, 860, 941], "jupyt": [8, 9, 40, 195, 196, 200, 201, 202, 205, 206, 208, 209, 218, 219, 221, 222, 224, 225, 228, 230, 232, 235, 238, 241, 244, 247, 249, 250, 253, 262, 265, 268, 272, 281, 282, 286, 292, 297, 300, 303, 304, 307, 308, 314, 330, 1105, 1106], "notebook": [8, 9, 40, 190, 195, 196, 200, 201, 202, 205, 206, 208, 209, 211, 218, 219, 221, 222, 224, 225, 226, 228, 230, 232, 235, 238, 241, 244, 247, 249, 250, 253, 262, 265, 268, 272, 281, 282, 286, 292, 297, 300, 303, 304, 307, 308, 314, 330, 335, 1103, 1105, 1106], "link": [8, 23, 39, 135, 154, 172, 183, 186, 188, 190, 192, 195, 197, 202, 203, 205, 214, 218, 221, 224, 230, 237, 248, 251, 284, 290, 340, 342, 416, 418, 667, 681, 688, 706, 713, 717, 779, 790, 791, 841, 862, 883, 901, 908, 916, 992, 993, 1024, 1054, 1055, 1100, 1116, 1118, 1119, 1121, 1122, 1123, 1124, 1131, 1136], "programmierung": [9, 11, 170, 195, 196, 205, 206, 214, 230, 232, 242, 244, 353], "grundlagen": [9, 11, 183, 194, 195, 196, 205, 206, 208, 209, 214, 218, 222, 225, 228, 230, 232, 242, 244, 247, 250, 253, 262, 265, 286, 353], "detail": [10, 78, 203, 207, 239, 246, 278, 330, 352, 428, 506, 596, 1030], "content": [11, 24, 37, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 166, 175, 179, 180, 210, 337, 441, 543, 546, 552, 555, 561, 643, 720, 831, 851, 864, 870, 876, 879, 896, 904, 905, 912, 921, 937, 939, 941, 956, 966, 969, 983, 1003, 1058, 1059, 1063, 1072, 1086, 1093, 1140, 1142, 1145, 1153, 1156, 1158], "anhand": [11, 194, 214, 230, 242, 353, 1159], "von": [11, 23, 165, 170, 174, 177, 184, 194, 201, 214, 215, 230, 242, 330, 353, 1159], "12": [11, 23, 45, 115, 116, 119, 126, 131, 174, 193, 194, 198, 205, 213, 226, 227, 229, 260, 311, 312, 313, 316, 335, 340, 344, 346, 353], "und": [11, 23, 164, 168, 184, 194, 195, 199, 201, 205, 207, 210, 214, 230, 233, 239, 242, 246, 252, 336, 353, 378, 387, 1152, 1163], "13": [11, 23, 41, 45, 161, 183, 194, 195, 205, 258, 267, 270, 271, 273, 353], "4": [11, 23, 107, 153, 178, 187, 190, 194, 202, 203, 205, 208, 212, 213, 230, 242, 267, 344, 353, 358, 416, 420, 426, 462, 465, 567, 685, 1002], "templat": [12, 131, 212, 229, 278, 525, 538, 539, 540, 541, 557, 558, 559, 587, 588, 589, 595, 628, 674, 677, 682, 684, 712, 744], "descript": [12, 59, 62, 373, 388, 397, 404, 410, 414, 417, 421, 430, 434, 439, 440, 473, 560, 568, 583, 586, 589, 625, 630, 639, 641, 644, 646, 647, 648, 649, 650, 651, 652, 653, 655, 656, 658, 700, 701, 725, 733, 737, 748, 752, 754, 896, 904, 905, 959], "sidebar": [12, 37], "metadata": [12, 255, 256, 258, 884], "about": [13, 107, 148, 167, 226, 231, 243, 261, 264, 270, 274, 291, 298, 313, 455, 665, 702, 891, 992, 1044, 1047, 1048, 1049], "thi": [13, 32, 37, 115, 119, 120, 122, 125, 126, 130, 135, 153, 158, 159, 161, 162, 172, 181, 574, 588, 703, 821, 900, 923, 976, 993, 1000, 1002], "site": [13, 28, 32, 135, 155, 157, 181], "licens": 13, "gplv3": 13, "github": [13, 112, 131, 155, 157, 187, 188, 200, 208, 335, 503, 517, 1100], "sphinx": [13, 40, 66, 157], "instal": [13, 61, 122, 154, 158, 162, 166, 179, 180, 183, 208, 212, 213, 293, 309, 335, 340, 355, 450, 777, 919, 974, 985, 990, 991, 1024, 1054, 1055, 1087, 1100, 1116, 1133, 1135, 1140, 1142, 1155], "instruct": [13, 419, 729, 947, 977, 994], "pip": [13, 284], "venv": [13, 284], "work": [13, 17, 65, 97, 112, 114, 134, 139, 153, 187, 218, 256, 258, 275, 276, 277, 278, 342, 436, 437, 438, 517, 588, 753, 821, 822, 858, 861, 865, 990], "progress": [13, 17, 134], "more": [13, 153, 171, 184, 223, 226, 231, 239, 243, 246, 248, 260, 261, 263, 264, 267, 269, 270, 273, 279, 280, 283, 284, 289, 290, 291, 298, 301, 305, 311, 312, 313, 319, 335, 358, 364, 387, 403, 405, 419, 429, 445, 455, 457, 567, 577, 580, 587, 600, 606, 660, 702, 703, 707, 724, 810, 839, 840, 841, 845, 846, 891, 918, 960, 997, 999, 1001, 1044, 1047, 1048, 1049, 1099, 1108, 1133, 1145], "opentrain": [14, 23], "draft": [15, 748, 896, 1053], "topic": [15, 21, 73, 74, 98, 99, 101, 102, 103, 104, 147, 183, 187, 190, 211, 212, 213, 224, 229, 248, 251, 267, 270, 273, 276, 277, 301, 305, 315, 316, 325, 339, 343, 344, 353, 373, 388, 397, 404, 410, 414, 417, 421, 430, 434, 439, 440, 466, 509, 510, 511, 512, 513, 514, 515, 518, 560, 568, 583, 586, 589, 605, 611, 615, 623, 628, 630, 633, 639, 657, 658, 662, 669, 676, 687, 700, 701, 711, 716, 725, 733, 737, 748, 752, 754, 755, 756, 779, 899, 914, 932, 934, 953, 959, 980, 986, 987, 1002, 1007, 1015, 1053, 1102, 1106, 1110, 1114, 1116, 1120, 1132, 1138], "miscellan": [16, 133, 144, 148, 167, 171, 191, 220, 231, 233, 239, 249, 255, 256, 260, 264, 267, 276, 279, 280, 285, 290, 291, 301, 302, 305, 312, 313, 315, 538, 560, 639, 643, 674, 737, 938, 949, 951, 1046, 1114], "s5": [17, 18, 148], "integr": [17, 116, 118, 121, 664, 680], "web": [17, 93, 94, 149], "slide": [17, 18, 30, 45, 171, 338, 350, 970, 974], "implement": [17, 115, 119, 120, 122, 123, 125, 126, 130, 131, 239, 302, 315, 321, 327, 467, 474, 484, 489, 499, 500, 501, 502, 506, 514, 519, 520, 564, 565, 570, 576, 578, 636, 660, 671, 760, 763, 782, 818, 997, 1003, 1019, 1078], "note": [17, 37, 61, 133, 166, 321, 460, 847], "todo": [17, 148, 177, 180, 191, 197, 322, 323, 324, 341, 443, 538, 539, 542, 545, 548, 551, 554, 557, 759, 763, 771, 803, 965, 968, 972, 1115, 1139, 1144], "test": [18, 37, 42, 43, 44, 45, 50, 71, 115, 119, 120, 122, 123, 125, 126, 130, 162, 183, 213, 237, 248, 251, 260, 269, 270, 273, 274, 275, 279, 280, 293, 295, 298, 301, 302, 305, 309, 343, 349, 353, 444, 458, 467, 487, 503, 517, 519, 520, 580, 763, 782, 815, 907, 936, 988, 991, 1055, 1088, 1095, 1096, 1097, 1105, 1133, 1134, 1138, 1140, 1142, 1145, 1155, 1171], "level": [19, 432], "head": [19, 37, 790, 893, 1108], "imag": [19, 172, 191, 990], "screencast": [20, 145], "written": [21, 114, 563, 566], "new": [21, 123, 131, 147, 213, 229, 255, 256, 258, 315, 316, 353, 506, 543, 659, 660, 700, 736, 754, 782, 815, 1117], "write": [21, 42, 50, 58, 150, 506, 543, 570, 682, 697, 720, 760, 928, 935, 1020, 1050, 1056, 1125], "netide": [22, 23], "f\u00f6rderantrag": [22, 23], "daten": [23, 207, 215], "antragsteller_in": 23, "allgemein": 23, "projektnam": 23, "untertitel": 23, "3": [23, 97, 107, 114, 131, 153, 178, 187, 188, 190, 191, 192, 193, 194, 197, 202, 203, 208, 212, 213, 214, 216, 218, 223, 224, 227, 230, 234, 242, 249, 267, 270, 273, 276, 278, 279, 280, 284, 288, 290, 301, 302, 303, 305, 306, 312, 316, 353, 358, 408, 412, 416, 420, 426, 428, 429, 431, 432, 462, 465, 467, 503, 567, 680, 750, 931, 947, 951, 952, 1002, 1031, 1039, 1045, 1050], "allgemeinverst\u00e4ndlich": 23, "kurzbeschreibung": 23, "de": [23, 260, 353, 828], "anschlussf\u00f6rderung": 23, "die": [23, 53, 159, 177, 215, 1160], "besonder": [23, 194], "bedeutung": 23, "ihr": 23, "f\u00fcr": [23, 178, 184, 194, 353, 1151], "da": [23, 174, 184, 201, 210, 243], "internet": 23, "internetnutzung": 23, "IN": 23, "\u00f6sterreich": 23, "zielgrupp": 23, "projektziel": 23, "5": [23, 153, 171, 178, 183, 184, 186, 194, 212, 213, 215, 267, 344, 353, 416, 426, 462, 465, 686, 829, 830], "l\u00f6sung": [23, 184], "beschreibung": 23, "der": [23, 194, 199, 215, 336, 353, 1148], "probleml\u00f6sung": 23, "wesentlich": 23, "element": [23, 194, 231, 249, 251, 521, 523, 524, 528, 616, 618, 619, 1036], "ein": [23, 184, 215, 1159, 1164], "nachhaltigen": 23, "impact": 23, "nach": [23, 251], "projektend": 23, "6": [23, 131, 194, 195, 215, 216, 249, 353, 416, 426, 462, 465, 1045, 1163], "umfeldanalys": 23, "wa": [23, 183, 199, 649, 740], "ist": [23, 184], "stand": 23, "technik": 23, "method": [23, 207, 210, 220, 231, 233, 236, 239, 249, 264, 276, 285, 291, 303, 307, 313, 327, 329, 337, 516, 552, 564, 571, 572, 573, 576, 578, 580, 583, 635, 638, 646, 650, 718, 719, 720, 721, 722, 744, 761, 796, 798, 812, 1017, 1019, 1045, 1046, 1047, 1134], "wissen": 23, "welch": 23, "ander": [23, 170, 336], "l\u00f6sungen": 23, "vorhaben": 23, "den": [23, 159, 199, 215], "genannten": 23, "problemen": 23, "gibt": [23, 194], "e": [23, 435, 719], "schon": 23, "7": [23, 187, 194, 195, 215, 353, 416, 426, 1163], "alleinstellungsmerkm": 23, "8": [23, 194, 195, 214, 215, 353, 416, 426, 908, 1113, 1163], "projektergebniss": 23, "erforderlich": 23, "lizenzen": 23, "dritter": 23, "9": [23, 187, 188, 194, 195, 215, 353, 416, 426, 1002, 1148, 1163], "erfolgreich": 23, "projektabschluss": 23, "sonstigen": 23, "aktivit\u00e4ten": 23, "im": [23, 194, 220, 233, 246, 249, 264, 271, 285, 291, 303, 307, 353, 1040], "projektbereich": 23, "angaben": 23, "zur": [23, 165, 184, 194], "fachlichen": 23, "eignung": 23, "mitarbeiterinnen": 23, "projektkernteam": 23, "erfahrung": 23, "vorgesehenen": 23, "projektleiterin": 23, "zum": [23, 170, 215], "maxim": 23, "min\u00fctigen": 23, "video": [23, 24, 31, 202, 260, 290, 306, 668], "risiken": 23, "erfolgskriterien": 23, "am": [23, 184, 243, 353], "angestrebt": 23, "jahr": 23, "10": [23, 45, 99, 100, 131, 137, 168, 171, 176, 187, 190, 194, 229, 230, 257, 258, 259, 260, 261, 275, 298, 299, 301, 302, 304, 335, 339, 340, 341, 345, 353, 416, 523, 829, 830], "umsetzung": 23, "einj\u00e4hrig": 23, "wichtig": 23, "partner_innen": 23, "arbeitsschwerpunkt": 23, "ressourcen": 23, "nutzer_innen": 23, "kommunikationskan\u00e4l": 23, "11": [23, 45, 115, 119, 126, 130, 131, 169, 174, 192, 193, 194, 223, 224, 229, 254, 258, 260, 263, 264, 298, 305, 306, 307, 308, 309, 310, 311, 312, 313, 342, 343, 353, 416, 538, 661, 664, 697, 698, 709, 718, 754], "projekttermin": 23, "termin": [23, 833, 945, 1008], "projektstart": 23, "kosten": 23, "finanzierung": 23, "projektkosten": 23, "personalkosten": 23, "sonstig": 23, "gesamtkosten": 23, "wir": [23, 199, 215], "beantragen": 23, "folgend": 23, "f\u00f6rderung": 23, "restlichen": 23, "werden": [23, 194], "finanziert": 23, "durch": [23, 184], "sonderprei": 23, "14": [23, 45, 115, 116, 119, 126, 131, 174, 183, 194, 195, 198, 212, 254, 353], "erg\u00e4nzend": 23, "transparenz": 23, "mehrfachantr\u00e4g": 23, "nutzung": 23, "whataventur": 23, "plattform": 23, "eingereicht": 23, "teil": 23, "einer": [23, 174, 183, 194, 353], "schulischen": 23, "verpflichtung": 23, "z": 23, "b": 23, "htl": 23, "diplomarbeit": 23, "wie": [23, 201, 207], "haben": [23, 184], "sie": [23, 184], "erfahren": 23, "mehrfachnennungen": 23, "m\u00f6glich": 23, "16": [23, 213, 237, 251, 263, 264, 353, 1002, 1148], "datenschutz": 23, "screenplai": [24, 63, 320, 444, 540, 543, 546, 549, 552, 555, 558, 590, 591, 592, 593, 594, 597, 598, 599, 617, 618, 619, 620, 757, 760, 765, 770, 775, 777, 815, 818, 821, 966, 969, 973, 1041, 1128, 1135, 1140, 1142, 1145], "The": [24, 39, 43, 45, 61, 100, 112, 115, 149, 162, 194, 210, 213, 216, 223, 240, 249, 252, 267, 275, 277, 279, 285, 288, 295, 298, 301, 302, 305, 307, 315, 316, 356, 364, 365, 402, 403, 418, 425, 426, 435, 436, 440, 441, 450, 518, 519, 571, 595, 616, 617, 639, 659, 660, 668, 673, 675, 677, 702, 720, 723, 734, 754, 798, 828, 837, 838, 845, 862, 865, 876, 879, 882, 884, 893, 895, 899, 915, 917, 919, 920, 922, 928, 936, 940, 955, 957, 964, 976, 978, 979, 988, 989, 997, 998, 1000, 1004, 1008, 1016, 1019, 1023, 1025, 1027, 1034, 1039, 1045, 1087, 1108, 1115, 1124, 1134, 1155], "problem": [24, 400, 422, 445, 446, 454, 460, 461, 462, 465, 471, 518, 519, 661, 673, 677, 697, 698, 707, 723, 736, 740, 758, 792, 839, 858, 917, 919, 923, 978, 993, 994, 998, 1012, 1107, 1129, 1136], "And": [24, 42, 61, 63, 112, 117, 118, 131, 162, 258, 261, 264, 267, 270, 275, 276, 277, 278, 279, 280, 285, 288, 290, 293, 295, 298, 301, 302, 305, 306, 307, 309, 313, 315, 316, 376, 420, 444, 445, 447, 450, 451, 456, 457, 458, 464, 467, 473, 481, 482, 487, 495, 501, 516, 563, 564, 570, 575, 591, 595, 596, 597, 599, 617, 632, 633, 637, 640, 665, 671, 673, 675, 688, 705, 708, 709, 710, 712, 713, 718, 730, 732, 734, 736, 750, 766, 824, 828, 829, 830, 834, 837, 843, 845, 881, 893, 895, 900, 904, 910, 911, 922, 935, 957, 985, 986, 988, 990, 991, 992, 993, 995, 1000, 1004, 1005, 1008, 1012, 1013, 1014, 1019, 1020, 1021, 1022, 1086, 1087, 1088, 1096, 1108, 1113, 1118, 1119, 1121, 1122, 1123, 1133, 1155], "me": [24, 155, 315, 934], "open": [24, 139, 164, 280, 470, 760, 761, 925, 928, 931, 933, 970, 997, 1050], "sourc": [24, 40, 154, 164, 180, 445, 463, 758, 761, 763, 766, 768, 771, 775, 780, 782, 792, 794, 802, 805, 810, 929, 978, 1055, 1113], "walk": [24, 267, 335], "through": [24, 267, 335], "us": [25, 26, 27, 28, 29, 30, 31, 32, 38, 42, 152, 156, 158, 162, 172, 173, 179, 181, 191, 210, 212, 213, 226, 229, 361, 363, 366, 381, 396, 418, 428, 436, 437, 446, 448, 462, 465, 482, 503, 603, 627, 648, 656, 668, 672, 673, 709, 723, 734, 744, 745, 746, 894, 906, 907, 908, 944, 960, 977, 978, 988, 989, 995, 997, 1000, 1003, 1013, 1022, 1128, 1134, 1135], "case": [25, 26, 27, 28, 29, 30, 212, 392, 396, 467, 529, 531, 534, 708, 709, 929, 933, 934, 935, 987, 995, 1022, 1134, 1140], "custom": [25, 139, 142, 155, 325, 564, 565, 579, 585, 609, 663, 1122, 1124, 1140], "subtract": [25, 562], "known": [25, 150], "calcul": [26, 210, 385, 464, 1020], "minimum": [26, 780], "durat": 26, "trainer": [27, 166], "editor": [27, 203], "end": [27, 674], "user": [27, 42, 46, 213, 215, 353, 566, 645, 650, 651, 652, 653, 654, 655, 766, 834, 835, 837, 838, 839, 847, 848, 859, 919, 999, 1089, 1091, 1093, 1094, 1096, 1128], "audienc": [27, 1155], "from": [28, 29, 31, 38, 40, 42, 43, 45, 57, 100, 112, 131, 137, 143, 162, 172, 180, 181, 189, 229, 239, 267, 270, 275, 284, 302, 353, 371, 393, 399, 441, 444, 587, 590, 631, 640, 644, 670, 671, 710, 770, 775, 816, 821, 906, 918, 936, 960, 969, 976, 1018, 1055, 1095, 1099, 1100, 1105, 1107, 1148], "other": [28, 38, 52, 210, 279, 291, 337, 668, 780, 802, 847, 1007], "menu": 29, "choos": 29, "show": 30, "plain": [30, 603, 631, 632, 660], "text": [30, 288, 402, 889, 892, 895, 1050, 1125], "file": [30, 31, 42, 48, 172, 174, 210, 220, 223, 239, 246, 248, 249, 263, 267, 271, 281, 283, 284, 285, 288, 289, 290, 307, 311, 312, 313, 319, 326, 327, 342, 400, 444, 446, 452, 467, 546, 577, 760, 761, 762, 770, 802, 829, 830, 833, 851, 856, 857, 863, 864, 867, 868, 869, 877, 881, 884, 885, 889, 892, 894, 910, 918, 919, 923, 924, 928, 929, 930, 931, 932, 933, 934, 935, 937, 938, 942, 966, 970, 976, 977, 991, 997, 1026, 1050, 1055, 1056, 1057, 1078, 1080, 1089, 1091, 1108, 1140], "send": [31, 970, 974], "A": [31, 45, 63, 112, 126, 131, 151, 162, 229, 255, 256, 258, 270, 274, 275, 276, 277, 279, 284, 315, 316, 353, 359, 368, 398, 425, 443, 444, 447, 461, 481, 495, 503, 506, 516, 521, 536, 562, 577, 578, 587, 596, 626, 637, 638, 651, 660, 665, 673, 675, 702, 705, 718, 721, 723, 829, 830, 833, 847, 858, 881, 885, 918, 920, 924, 925, 926, 929, 932, 933, 934, 935, 942, 955, 960, 963, 976, 989, 990, 993, 994, 995, 998, 1003, 1022, 1025, 1087, 1113, 1118, 1121, 1124, 1125, 1133], "v4l": 31, "camera": 31, "devic": [31, 63, 81, 97, 114, 757, 758, 759, 760, 761, 762, 765, 766, 767, 768, 769, 770, 792, 796, 797, 798, 833, 906, 908, 966], "output": [31, 50, 120, 172, 184, 326, 458, 641, 844, 1002, 1105, 1140], "over": [31, 223, 231, 233, 753, 908, 1038, 1039], "ssh": [31, 203, 267, 288, 332, 340, 909, 912, 913, 914, 915, 916, 917, 918, 919], "captur": [31, 702, 703, 705], "To": [31, 37, 39, 42, 44, 53, 148, 246, 275, 315, 466, 467, 482, 503, 629, 640, 660, 664, 673, 675, 677, 688, 702, 710, 718, 720, 722, 723, 734, 773, 814, 816, 829, 830, 910, 911, 918, 978, 988, 990, 995, 997, 998, 1018, 1019, 1096, 1117, 1118, 1124], "plai": [31, 63, 688], "remot": [31, 97, 112, 114, 133, 471, 484, 498, 829, 830, 910, 911, 915, 918, 919], "system": [31, 153, 226, 267, 288, 342, 353, 374, 438, 635, 726, 851, 857, 919, 921, 922, 923, 928, 939, 957, 960, 963, 1029, 1128, 1148, 1166, 1167, 1168, 1169, 1170], "emoji": 32, "code": [32, 41, 43, 45, 107, 181, 182, 184, 185, 208, 224, 277, 279, 280, 293, 309, 353, 422, 432, 442, 443, 444, 446, 452, 453, 454, 459, 463, 539, 542, 545, 548, 551, 554, 557, 587, 672, 720, 740, 763, 764, 768, 769, 770, 771, 772, 782, 783, 792, 793, 804, 805, 806, 810, 811, 934, 965, 968, 972, 992, 993, 994, 1095, 1096, 1097, 1100, 1103, 1106, 1113, 1126, 1135, 1139, 1144, 1155], "sphinxemoji": 32, "setup": [32, 63, 78, 109, 154, 158, 180, 187, 188, 190, 191, 192, 213, 263, 269, 270, 273, 276, 278, 280, 283, 284, 288, 289, 290, 311, 312, 319, 458, 516, 518, 899, 907, 915, 926, 990, 991, 1024, 1087, 1088, 1135, 1145], "most": [32, 38, 63, 675, 1128], "here": [32, 152, 467, 918], "all": [32, 38, 53, 63, 207, 210, 229, 275, 305, 316, 353, 634, 660, 668, 703, 723, 821, 839, 976, 992, 1010, 1098], "recip": 33, "isoamsa": 34, "txt": [34, 35, 36, 38], "ad": [34, 35, 36, 155, 992, 1117, 1124], "mathemat": [34, 35, 36], "symbol": [34, 35, 36, 362, 377, 438, 883, 976], "arrow": 34, "isoamsr": 35, "relat": [35, 167, 270, 273, 380, 741], "isonum": 36, "binari": [36, 482, 1050], "oper": [36, 171, 184, 194, 207, 223, 226, 229, 236, 239, 243, 246, 260, 275, 295, 307, 330, 364, 379, 380, 381, 384, 385, 387, 388, 393, 405, 516, 538, 563, 564, 570, 578, 618, 718, 726, 732, 760, 761, 762, 844, 923, 960, 1019, 1029, 1031, 1033, 1049, 1119], "layout": [37, 239, 411], "page": [37, 94, 155, 157, 773, 862, 894, 922], "admonit": 37, "i": [37, 45, 152, 153, 170, 210, 220, 226, 231, 236, 239, 246, 248, 249, 281, 285, 288, 290, 327, 339, 364, 390, 437, 443, 461, 516, 535, 562, 569, 631, 637, 638, 673, 675, 698, 702, 707, 710, 719, 723, 727, 731, 775, 786, 807, 822, 833, 837, 838, 843, 844, 845, 858, 868, 881, 908, 918, 919, 920, 923, 924, 925, 926, 927, 928, 931, 933, 935, 937, 938, 955, 958, 976, 993, 995, 1000, 1050, 1107, 1121, 1145], "an": [37, 155, 226, 279, 294, 301, 305, 310, 331, 335, 353, 449, 454, 564, 673, 688, 763, 881, 907, 918, 923, 960, 993, 1004, 1013, 1040, 1042, 1135, 1153], "tip": 37, "hint": [37, 484, 514], "import": [37, 162, 170, 210, 220, 229, 335, 569, 974, 999, 1007, 1115], "attent": [37, 1042], "caution": [37, 638], "error": [37, 43, 162, 226, 279, 280, 301, 302, 305, 403, 428, 462, 584, 594, 595, 679, 682, 844, 908, 920, 929, 933, 934, 935, 1012, 1068], "danger": [37, 370, 731, 859], "blech": 37, "titl": 37, "blah": 37, "kursdaten": [37, 1149, 1150, 1151, 1152, 1157, 1159, 1160, 1164, 1165, 1166, 1167, 1169, 1170, 1171], "local": [37, 39, 97, 112, 114, 133, 171, 194, 401, 433, 450, 471, 915, 918, 951, 978, 1041, 1135], "bleh": 37, "do": [37, 42, 148, 210, 252, 315, 394, 431, 450, 461, 660, 792, 814, 829, 830, 845, 976], "mmlalia": 38, "mathml": 38, "alias": 38, "entiti": [38, 945], "restructuredtext": 39, "cheat": [39, 335], "sheet": [39, 335], "further": [39, 136, 175, 211, 212, 234, 326, 335, 432, 668, 722, 1029], "document": [39, 157, 207, 223, 303, 330, 600, 601, 602, 603, 604, 606, 607, 608, 609, 612, 613, 616, 621, 766, 782, 784, 788, 790, 812, 816, 819, 829, 830, 833, 837, 844, 845, 846, 847, 862, 863, 864, 865, 881, 884, 885, 918, 920, 922, 924, 925, 926, 928, 931, 932, 933, 934, 935, 938, 976, 977, 1028, 1052, 1062, 1125, 1133, 1140], "extern": [39, 293, 309, 321, 399, 448, 577, 777, 778, 907, 993, 1063, 1155], "section": 39, "refer": [39, 148, 151, 194, 220, 223, 226, 233, 246, 249, 255, 256, 258, 261, 264, 268, 271, 276, 279, 285, 291, 303, 315, 368, 406, 433, 575, 669, 672, 673, 675, 702, 703, 705, 714, 719, 721, 722, 750, 751, 809, 1040], "That": [39, 252, 255, 256, 258, 275, 302, 407, 465, 562, 569, 660, 663, 673, 702, 720, 721, 802, 837, 908, 918, 923, 924, 927, 995, 1022, 1142], "we": [39, 42, 45, 53, 315, 442, 444, 792, 821, 988, 1140], "anoth": [39, 239, 442, 960, 992], "contain": [39, 131, 229, 249, 275, 278, 316, 538, 554, 555, 556, 595, 596, 610, 611, 614, 615, 616, 660, 664, 712, 790, 990], "abov": 39, "footnot": 39, "sphinxish": 40, "run": [40, 137, 156, 458, 517, 580, 810, 899, 924, 925, 926, 990, 991, 1027, 1103, 1106, 1133], "seminar": 41, "clean": [41, 43, 45, 217, 277, 279, 280, 353, 443, 444], "2022": [41, 98, 99, 100, 101, 102, 103, 104, 229, 230, 231, 234, 237, 240, 242, 245, 248, 251, 254, 257, 258, 259, 260, 261, 263, 264, 345, 346, 347, 353], "04": [41, 104, 156, 229, 240, 242, 245, 278, 279, 280, 281, 282, 316, 335, 353, 990], "agenda": [41, 187, 188, 190, 191, 192, 193, 198, 202, 203, 240, 245, 257, 266, 270, 273, 279, 283, 287, 289, 293, 295, 301, 305, 309, 311, 315, 319, 348, 349, 1155], "timelin": 41, "befor": [42, 63, 139, 172, 295, 298, 718, 1140], "formal": [42, 364], "unit": [42, 43, 45, 71, 183, 213, 251, 260, 270, 273, 343, 503, 519, 580, 1088, 1138], "initi": [42, 220, 255, 256, 258, 315, 316, 366, 378, 427, 514, 545, 546, 547, 562, 569, 580, 617, 640, 660, 662, 663, 664, 665, 709, 731, 736, 796, 807, 819, 949, 951], "structur": [42, 43, 131, 144, 148, 171, 234, 255, 256, 258, 260, 282, 293, 304, 308, 309, 315, 396, 404, 411, 414, 420, 456, 503, 538, 709, 714, 734, 770, 798, 994, 1007, 1133, 1140, 1155], "snippet": [42, 44, 50], "userdb": [42, 46, 49, 50, 55, 58, 212, 538, 652, 656], "bin": 42, "binaryfil": 42, "cpp": [42, 452, 503, 506, 678, 679, 680, 683, 684, 685, 686, 689, 690, 692, 693, 694, 695, 696], "extend": [42, 207, 580, 1016], "read": [42, 49, 50, 58, 210, 217, 326, 327, 337, 371, 432, 444, 467, 668, 710, 760, 818, 924, 928, 934, 936, 1050, 1056, 1057, 1089, 1090, 1091, 1092, 1105, 1125], "iter": [42, 173, 184, 189, 194, 199, 201, 207, 210, 215, 216, 220, 223, 226, 231, 233, 236, 239, 248, 249, 260, 261, 263, 264, 270, 273, 277, 281, 283, 284, 285, 289, 290, 302, 303, 307, 311, 312, 313, 319, 327, 595, 596, 619, 660, 688, 695, 708, 709, 710, 753, 790, 1002, 1004, 1005, 1006, 1018, 1038, 1039, 1048], "bug": [42, 47, 53, 381, 546, 710], "faschingbau": [42, 155], "As": [42, 465, 482, 673, 712, 908, 942, 976, 1013, 1142], "last": [42, 381, 402, 403, 432, 585, 588, 724, 952, 974, 1140], "name": [42, 43, 120, 220, 223, 239, 375, 413, 571, 660, 802, 846, 864, 970, 1041, 1052], "wrap": [42, 183, 428, 660, 998], "up": [42, 153, 183, 217, 260, 278, 279, 301, 340, 428, 660, 1013], "what": [42, 45, 49, 53, 158, 161, 226, 236, 390, 431, 442, 566, 635, 654, 660, 672, 673, 702, 723, 771, 792, 802, 818, 822, 837, 845, 863, 902, 915, 918, 919, 923, 924, 927, 931, 963, 976, 988, 992, 1000, 1004, 1008, 1051, 1121, 1124], "have": [42, 45, 442, 792, 988, 993], "messag": [43, 151, 152, 441, 447, 950, 969, 970, 1116, 1140], "book": [43, 45, 198, 248, 290, 356, 441, 1100], "survei": [43, 442], "comment": [43, 207, 231, 246, 271, 330, 1028, 1069], "format": [43, 50, 210, 216, 231, 291, 1045, 1097], "object": [43, 184, 189, 226, 233, 239, 243, 251, 252, 260, 263, 264, 276, 277, 279, 280, 283, 284, 289, 295, 296, 298, 301, 302, 305, 306, 311, 319, 323, 442, 460, 465, 545, 546, 547, 562, 564, 567, 570, 572, 576, 578, 633, 635, 649, 664, 667, 670, 673, 719, 970, 993, 994, 999, 1007, 1013, 1015, 1017, 1051, 1118, 1122], "data": [43, 119, 120, 121, 122, 171, 173, 199, 208, 234, 248, 251, 260, 284, 301, 302, 303, 305, 376, 420, 423, 444, 568, 572, 595, 714, 837, 951, 1018, 1086, 1100, 1105, 1107], "handl": [43, 226, 229, 239, 251, 270, 273, 278, 279, 280, 301, 302, 305, 346, 454, 462, 584, 920, 999, 1052], "boundari": [43, 1113], "class": [43, 184, 210, 229, 233, 236, 239, 252, 260, 276, 281, 295, 298, 447, 465, 472, 473, 490, 491, 503, 506, 520, 539, 540, 541, 564, 571, 572, 577, 579, 580, 581, 582, 588, 603, 631, 632, 651, 660, 661, 663, 671, 672, 704, 718, 758, 998, 1012, 1013, 1016, 1017, 1018, 1019], "switch": [44, 125, 129, 130, 131, 392, 424, 515], "googletest": [44, 179, 517, 1138], "git": [44, 77, 112, 131, 133, 154, 162, 166, 208, 212, 213, 267, 335, 340, 353, 775, 1100], "submodul": 44, "establish": [44, 45, 991], "demo": [44, 123, 269, 270, 277, 448, 467, 704, 719, 833, 859, 923, 958, 962], "straightforward": [44, 184], "main": [44, 112, 409, 500, 501, 502, 739, 741, 743, 745, 992], "convers": [44, 207, 223, 231, 233, 239, 243, 246, 264, 275, 281, 285, 291, 303, 307, 313, 330, 381, 408, 632, 640, 1031, 1045], "fix": [44, 154, 162, 255, 256, 258, 275, 327, 570, 688, 734, 792, 793, 805, 806], "shortcom": 44, "softwar": [45, 131, 180, 277, 442, 443, 908, 981, 984, 1157], "craft": [45, 277, 443], "09": [45, 131, 156, 211, 221, 229, 295, 296, 297, 298, 299, 300, 353], "00": 45, "15": [45, 194, 200, 237, 270, 273, 283, 284, 285, 335, 342, 347, 353, 829, 830], "introductori": [45, 267, 688, 941], "word": [45, 246, 402, 403, 432, 435, 585, 588, 715, 724, 862, 1067, 1084], "engin": [45, 248, 908], "disciplin": 45, "coffe": 45, "break": [45, 194, 231, 395, 1035, 1038], "project": [45, 109, 112, 124, 131, 155, 171, 212, 213, 227, 251, 256, 258, 260, 276, 278, 279, 280, 293, 295, 298, 301, 302, 305, 306, 309, 341, 342, 343, 347, 349, 442, 444, 503, 508, 517, 518, 580, 1087, 1127, 1133, 1155, 1158], "enter": [45, 63, 223, 595, 638, 673, 699, 708, 722, 805, 894, 962, 992, 1000, 1012, 1013, 1108, 1113, 1118], "framework": 45, "lunch": 45, "cornerston": 45, "45": 45, "keep": [45, 156, 864], "small": 45, "23": [45, 192, 218, 234, 240, 258, 266, 276, 287, 288, 353], "59": 45, "extrem": 45, "program": [45, 50, 63, 93, 123, 167, 183, 189, 210, 213, 229, 239, 251, 252, 260, 263, 267, 277, 279, 280, 283, 284, 285, 289, 295, 298, 301, 302, 305, 306, 311, 319, 342, 353, 357, 358, 360, 396, 397, 398, 404, 430, 435, 440, 442, 447, 467, 500, 501, 502, 506, 562, 723, 739, 741, 743, 745, 763, 815, 847, 858, 859, 900, 902, 921, 936, 939, 940, 943, 955, 965, 973, 976, 1008, 1015, 1024, 1025, 1027, 1029, 1076, 1088, 1099, 1126, 1154, 1166, 1167, 1168, 1169, 1170], "session": 45, "find": [46, 136, 154, 172, 462, 521, 602, 620, 749, 890, 1142], "crash": [46, 154], "If": [46, 49, 566, 660, 675, 818, 932, 933, 999, 1124], "Not": [46, 63, 65, 115, 119, 120, 122, 125, 126, 130, 162, 243, 252, 528, 530, 533, 602, 638, 654, 660, 682, 697, 698, 710, 719, 792, 818, 858, 929, 932, 933, 934, 935, 955, 976, 993, 1003, 1118, 1140], "found": [46, 530, 533, 602, 654, 1142], "state": [46, 152, 212, 688, 805, 807], "exist": [48, 65, 123, 148, 528, 929, 932, 933, 935, 1016, 1124], "ar": [48, 151, 152, 231, 233, 246, 296, 428, 444, 566, 572, 660, 688, 960, 970, 998, 1007, 1019, 1123, 1142], "overwritten": 48, "done": [49, 112, 115, 119, 127, 128, 129, 316, 466, 629, 723], "twice": 49, "altern": [50, 669], "csv": [50, 120, 131, 223, 240, 248, 251, 260, 263, 283, 284, 285, 289, 290, 305, 311, 312, 319, 444, 1056, 1057, 1058, 1089, 1090, 1091, 1092, 1097, 1108], "frontend": 50, "featur": [51, 53, 63, 263, 279, 280, 281, 283, 284, 289, 301, 305, 316, 421, 444, 700, 1001, 1016, 1035, 1105, 1107], "search": [52, 600, 602, 603, 606, 616, 620, 640, 653, 654, 655, 891, 993, 1046, 1128], "By": [52, 179, 243, 275, 368, 575, 619, 650, 653, 655, 677, 688, 699, 702, 703, 705, 710, 714, 722, 749, 750, 751, 999, 1032, 1121, 1122, 1123, 1133], "index": [52, 194, 212, 231, 243, 291, 433, 686, 902, 1037, 1122, 1128, 1129, 1130], "backlog": 53, "need": [53, 327, 467, 682, 684, 960, 1108], "chang": [53, 112, 847, 858, 865], "Or": [53, 444, 452, 453, 467, 671, 710, 922, 1013, 1118], "Will": 53, "refactor": [53, 56, 444, 520, 770, 771, 772, 810, 1090, 1092, 1097], "after": [53, 187, 218, 394, 821, 837, 1016], "backingstor": [54, 55, 57], "ha": [54, 55, 685], "too": [54, 55, 438, 453, 660, 704, 727], "mani": [54, 55, 239, 432, 454, 710, 739, 741, 743, 745, 884, 964], "respons": [54, 55, 215, 470], "interfac": [54, 69, 86, 123, 127, 129, 191, 239, 278, 316, 322, 453, 457, 467, 470, 474, 482, 493, 500, 501, 516, 518, 548, 549, 550, 557, 558, 559, 634, 761, 833, 901, 902, 905, 907, 1012, 1109], "load": [57, 172, 419, 455, 780, 781, 906, 948, 1010], "constructor": [57, 189, 239, 255, 256, 258, 264, 315, 516, 546, 552, 563, 564, 565, 566, 567, 569, 570, 579, 580, 581, 582, 649, 664, 665, 666, 671, 673, 697, 717, 718, 1014], "bool": 58, "realli": [58, 660, 722], "submiss": [59, 62, 109], "pointless": [59, 60, 62, 63, 1019], "blink": [59, 60, 62, 63, 335], "With": [59, 60, 62, 63, 97, 114, 181, 212, 259, 275, 277, 279, 301, 305, 353, 437, 445, 466, 481, 495, 517, 588, 670, 723, 736, 828, 829, 830, 891, 894, 899, 904, 930, 993, 1041, 1121, 1123, 1134, 1135, 1138], "asyncio": [59, 60, 62, 63], "libgpiod": [59, 60, 61, 62, 63, 125], "raspberri": [59, 60, 62, 63, 162, 191, 321, 353, 782, 803, 899, 903, 906, 981, 985, 987, 989, 1164], "pi": [59, 60, 61, 62, 63, 162, 191, 353, 782, 802, 803, 899, 906, 988, 989, 1164], "biographi": [59, 62], "abstract": [59, 62, 260, 295, 298, 460, 475, 489, 838, 924, 925, 926, 1012], "fedora": [61, 154, 161, 775, 776, 777, 778, 990], "prepar": [61, 154, 172, 187, 188, 190, 191, 192, 193, 203, 212, 227, 256, 258, 266, 503, 580, 802], "tarbal": [61, 162], "On": [61, 63, 112, 212, 246, 248, 270, 274, 275, 279, 301, 305, 355, 517, 519, 564, 595, 596, 600, 606, 709, 734, 845, 924, 925, 926, 931, 936, 940, 963, 990, 1055], "build": [61, 68, 152, 154, 162, 179, 180, 213, 231, 445, 447, 455, 503, 517, 579, 580, 581, 582, 770, 775, 776, 777, 778, 780, 802, 803, 906, 924, 925, 926, 936, 977, 978, 981, 984, 988, 989, 990, 992, 993, 994, 1048, 1142, 1160], "present": 63, "start": [63, 229, 255, 256, 258, 353, 467, 670, 682, 993, 1116, 1140], "point": [63, 243, 246, 516, 562, 564, 572, 578, 580, 581, 582, 588, 670, 682, 734, 829, 830, 988, 1031], "greet": [63, 302, 1062], "multipl": [63, 112, 189, 403, 444, 445, 768, 769, 770, 864, 918, 976, 997, 999, 1036, 1118, 1121, 1134], "background": [63, 156, 158, 561, 659], "thread": [63, 151, 153, 162, 279, 280, 344, 538, 660, 726, 727, 732, 944, 945, 946, 951, 953, 960, 963, 1008], "charact": [63, 357, 364, 367, 370, 377, 757, 758, 759, 760, 761, 762, 765, 766, 767, 1084], "base": [63, 162, 231, 239, 255, 256, 258, 260, 295, 298, 315, 465, 631, 632, 660, 673, 688, 708, 709, 994, 999, 1012], "gpio": [63, 86, 130, 131, 169, 191, 321, 322, 323, 324, 335, 782, 783, 906, 908, 940, 941, 942], "entir": [63, 275, 775, 777, 862, 918], "matrix": 63, "off": [63, 212], "bring": [63, 133, 340, 634], "togeth": [63, 450, 634, 864], "modular": [63, 229, 398], "bit": [63, 284, 384, 847, 858, 860, 1025, 1027], "row": [63, 275, 1117, 1121, 1122, 1123], "coroutin": [63, 258, 687, 688], "enough": [63, 562, 638], "sequenc": [63, 220, 223, 231, 263, 270, 273, 283, 284, 289, 290, 311, 312, 319, 377, 536, 600, 606, 1003, 1036, 1044], "loop": [63, 171, 173, 184, 194, 199, 231, 233, 243, 246, 249, 255, 256, 258, 277, 279, 301, 305, 313, 315, 360, 393, 394, 432, 504, 708, 943, 1004, 1035, 1038], "forev": 63, "strip": [63, 216, 233, 239, 327], "down": [63, 453], "factori": [63, 460, 475, 489, 519], "turn": [63, 1003], "Into": [63, 112, 273, 295, 298, 301, 371, 467, 504, 521, 597, 651, 660, 704, 1090, 1092, 1097], "anti": [63, 732, 734], "clumsi": [63, 734], "decor": [63, 210, 260, 270, 273, 277, 279, 280, 295, 301, 302, 305, 465, 479, 493, 998], "wrapper": [63, 122], "final": [63, 239, 255, 256, 258, 315, 699, 837, 841, 999], "playground": 63, "cycl": [63, 115, 119, 120, 122, 125, 126, 130, 945], "fast": [63, 189], "forward": [63, 258, 369, 433, 722, 917], "ani": [63, 275, 461, 516, 955], "cancel": 63, "goodby": 63, "hochk\u00f6nig": 64, "k\u00f6nigsjodl": 64, "klettersteig": 64, "tour": [64, 260, 660], "werfen": 64, "ostpreussenh\u00fctt": 64, "matrashau": 64, "blog": [65, 148], "articl": [65, 158, 159, 161, 162], "yet": [65, 239], "revisit": [65, 360, 428, 671], "post": [65, 163, 172, 969], "pending_xref": 66, "cmake": [68, 179, 180, 212, 267, 293, 294, 309, 310, 353, 445, 447, 449, 453, 503, 517, 936, 977, 978, 991, 1142, 1143, 1155], "oo": [70, 108, 131, 184, 210, 213, 229, 236, 239, 248, 251, 255, 256, 258, 260, 270, 273, 276, 278, 295, 298, 302, 306, 315, 316, 344, 470, 507, 516, 538, 1008], "graph": [72, 73, 74, 436, 438, 643, 755, 803, 1058, 1059, 1063, 1072, 1086, 1093], "embed": [73, 74, 78, 96, 97, 107, 108, 113, 114, 132, 169, 178, 267, 276, 278, 316, 317, 334, 336, 337, 349, 351, 353, 740, 1156, 1157], "comput": [73, 74, 78, 96, 107, 108, 113, 132, 332, 334, 336, 337, 349, 351, 431, 432, 516, 829, 830, 838], "current": [73, 74, 465, 736, 753, 865], "depend": [73, 74, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 130, 180, 293, 295, 309, 321, 322, 323, 324, 326, 448, 449, 451, 452, 456, 466, 470, 480, 503, 508, 525, 527, 538, 546, 605, 611, 615, 623, 625, 628, 633, 641, 642, 644, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 662, 669, 676, 687, 711, 716, 740, 779, 780, 829, 830, 831, 835, 849, 850, 851, 870, 875, 876, 879, 912, 914, 921, 927, 929, 937, 939, 941, 953, 956, 978, 980, 982, 983, 986, 987, 993, 1008, 1010, 1056, 1057, 1060, 1061, 1062, 1064, 1065, 1066, 1067, 1068, 1069, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1102, 1106, 1110, 1113, 1116, 1120, 1132, 1138, 1155], "ex": [75, 76, 82, 83, 84, 85, 91, 92], "race": [75, 76, 88, 728, 792, 793, 800, 946, 947, 1010], "condit": [75, 76, 88, 386, 394, 403, 728, 732, 792, 793, 800, 946, 947, 949, 950, 1010], "avoid": [76, 88], "goal": [76, 82, 83, 84, 85, 87, 88, 89, 91, 136, 138, 139, 141, 172, 276, 278, 1153, 1156], "outcom": [76, 82, 83, 84, 85, 190, 298, 337], "introduct": [77, 80, 171, 255, 256, 258, 270, 273, 277, 278, 288, 293, 294, 309, 310, 315, 316, 338, 353, 356, 373, 431, 435, 449, 466, 474, 561, 658, 664, 708, 717, 726, 782, 802, 836, 999, 1133, 1153, 1155, 1166], "2019": [78, 171, 174, 353], "overview": [78, 131, 167, 267, 279, 280, 303, 315, 350, 354, 670, 677, 688, 712, 718, 732, 734, 739, 741, 743, 744, 745, 746, 753, 773, 827, 838, 864, 895, 906, 907, 908, 909, 944, 976, 998, 1102, 1106], "knowledg": [78, 1155], "transfer": [78, 720], "unix": [80, 110, 111, 175, 340, 356, 418, 428, 464, 1027], "hardwar": [81, 84, 85, 131, 139, 142, 267, 418, 903, 905, 906, 908, 941, 1157], "manag": [81, 153, 201, 231, 251, 260, 270, 273, 276, 277, 279, 295, 298, 301, 302, 305, 342, 343, 347, 442, 570, 630, 718, 812, 813, 978, 997, 1016, 1127, 1157], "averag": [82, 83, 91, 464, 492, 739, 741, 743, 745], "sensor": [82, 83, 85, 91, 92, 94, 127, 128, 278, 302, 315, 460, 461, 465, 467, 472, 490, 492, 493, 499, 503, 505, 506, 507, 518, 519, 520, 527, 718, 739, 741, 743, 745, 906, 908, 936, 1086, 1088], "parallel": 83, "led": [84, 126, 335], "temperatur": [84, 85, 92, 126, 503, 506, 906, 908, 936], "displai": [84, 91, 117, 118, 123, 126], "sysf": [86, 130, 131, 191, 321, 335, 907, 941, 942], "gpiod": 86, "multithread": [87, 169, 229, 255, 256, 258, 267, 301, 302, 305, 315, 343, 350, 732, 733, 973, 1008, 1009, 1011, 1169], "semaphor": [88, 151, 734, 969, 970], "mutex": [88, 151, 419, 730, 734, 792, 793, 794, 795, 807, 808, 947, 948, 963, 1010], "commun": [89, 248, 484, 732, 949, 970], "wait": [89, 142, 732, 734, 818, 819, 820, 949, 969], "someth": [89, 184, 562, 660, 734, 818, 819, 820, 1038], "simpl": [93, 189, 458, 562, 572, 587, 638, 650, 805, 807, 833, 847, 976, 993, 998, 1018, 1048, 1125, 1133], "2020": [96, 156, 176, 178, 183, 184, 186, 187, 188, 190, 192, 193, 198, 353], "ss2022": [97, 105, 829, 830], "block": [97, 114, 389, 585, 923, 924, 925, 926, 927, 974], "cross": [97, 108, 114, 162, 267, 782, 802, 977, 979, 980, 981, 986, 988, 989, 991, 1148], "develop": [97, 108, 114, 115, 119, 120, 122, 125, 126, 130, 131, 183, 198, 212, 215, 237, 248, 251, 267, 270, 272, 273, 276, 277, 278, 279, 280, 301, 302, 305, 317, 338, 353, 779, 979, 980, 986, 1156, 1157, 1158, 1171], "03": [98, 99, 100, 101, 102, 103, 131, 200, 203, 208, 227, 229, 237, 240, 257, 270, 271, 273, 276, 277, 293, 335, 353, 660, 661], "08": [98, 218, 221, 229, 242, 353], "homework": [98, 99, 100, 101, 104], "until": 100, "21": [100, 101, 240, 328, 335, 353], "exercis": [100, 109, 144, 166, 171, 172, 184, 187, 188, 192, 200, 201, 203, 212, 213, 223, 229, 246, 251, 255, 256, 258, 260, 263, 267, 271, 276, 278, 279, 283, 284, 289, 290, 291, 295, 298, 301, 302, 305, 311, 312, 319, 325, 327, 335, 341, 359, 361, 363, 365, 367, 369, 371, 383, 407, 416, 460, 461, 462, 464, 465, 466, 468, 469, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 536, 537, 538, 568, 579, 580, 581, 582, 583, 624, 625, 626, 633, 641, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 722, 749, 750, 751, 752, 824, 831, 842, 848, 851, 852, 854, 856, 866, 867, 868, 869, 870, 871, 872, 873, 874, 876, 877, 878, 879, 880, 889, 910, 911, 912, 913, 929, 930, 936, 970, 974, 981, 983, 984, 985, 986, 1015, 1056, 1057, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097], "creat": [100, 112, 133, 145, 150, 154, 157, 179, 180, 517, 660, 727, 822, 828, 829, 830, 847, 852, 854, 856, 864, 868, 870, 881, 913, 930, 932, 933, 935, 969, 970, 988, 990, 995, 1087, 1105, 1107], "copi": [100, 184, 233, 268, 315, 383, 521, 555, 563, 570, 575, 590, 596, 597, 601, 608, 660, 671, 673, 698, 703, 705, 709, 714, 718, 719, 749, 816, 864, 866, 867, 870, 910, 911, 918, 929, 1040, 1118], "move": [100, 255, 256, 258, 276, 315, 316, 516, 562, 578, 669, 670, 671, 672, 673, 718, 720, 750, 782, 862, 869, 870, 885], "remov": [100, 249, 453, 533, 534, 616, 619, 749, 870, 873, 881, 970], "l": [100, 879, 884], "command": [100, 462, 477, 491, 780, 847, 858, 862, 879, 884, 899, 990], "22": [102, 190, 197, 202, 289, 290, 291, 305, 306, 307, 308, 353], "24": [102, 124, 131, 197, 229, 259, 279, 280, 281, 282, 301, 302, 304, 305, 306, 307, 308, 353], "ku": 102, "28": [103, 171, 188, 229, 277, 341, 353], "01": [104, 109, 221, 227, 229, 230, 231, 260, 266, 311, 312, 313, 335, 345, 346, 353, 829, 830], "ws2022": [106, 107, 108], "plan": [106, 131, 240, 338], "evolut": 106, "fh": [107, 108, 112, 132, 503, 504, 505, 506, 507, 579, 580, 581, 582, 642, 835, 849, 850, 875, 982], "joanneum": [107, 108, 132], "2023": [107, 108, 109, 110, 111, 115, 116, 119, 126, 130, 131, 258, 266, 267, 270, 271, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 316, 317, 353], "question": [107, 108, 139, 210, 350, 444, 458, 503, 642, 835, 849, 850, 853, 855, 875, 961, 982, 1011], "inherit": [107, 170, 210, 239, 260, 295, 298, 474, 548, 549, 550, 631, 632, 633, 636, 660, 931, 1008, 1016], "memori": [107, 153, 175, 201, 408, 411, 415, 417, 419, 426, 433, 532, 542, 543, 544, 570, 629, 630, 773, 786, 787, 788, 789, 815, 816, 817, 835, 839, 969, 970, 1157, 1167], "leak": [107, 532, 543, 570, 720], "ye": [108, 1113], "No": [108, 152, 191, 482, 660, 677, 723, 999, 1124, 1140], "lab": 109, "exam": [109, 110, 111, 114, 211, 224, 226, 335, 350, 516, 829, 830, 831, 961, 1011], "17": [109, 131, 223, 224, 226, 230, 231, 237, 254, 261, 267, 283, 284, 285, 353, 577], "ss2023": [110, 111, 114], "06": [110, 111, 211, 212, 229, 258, 289, 290, 291, 316, 335, 353], "30": [110, 111, 169, 178, 188, 193, 240, 353], "handout": 110, "concept": [110, 111, 258, 288, 315, 676, 677, 680, 681, 682, 685, 686, 712, 836, 1107], "toolchain": [110, 111, 162, 213, 293, 309, 802, 976, 977, 982, 983, 985, 986, 987, 988, 989, 990, 991, 1155], "solv": [111, 948, 1107, 1129, 1136], "our": [112, 179, 908], "ece21": 112, "fork": [112, 131, 809], "pull": [112, 131, 467], "request": [112, 131, 444, 761, 763, 782, 784, 942], "upstream": [112, 131, 133], "sync": [112, 773], "onli": [112, 249, 275, 408, 675, 723, 775, 1069], "onc": [112, 335], "updat": [112, 131, 156], "It": [112, 154, 183, 275, 339, 408, 634, 858, 919, 932, 933, 976], "Its": [112, 1013], "fetch": 112, "your": [112, 175, 268, 269, 423, 682, 848], "clone": [112, 162, 166, 179, 517], "merg": 112, "push": [112, 453], "finish": [114, 138, 147, 213, 821], "iot": 118, "boil": [115, 116, 117, 118, 124, 131], "pot": [115, 116, 117, 118, 124, 131], "begin": [115, 317, 319, 356, 710], "standup": [115, 116, 117, 118, 119, 123, 126, 130], "record": [115, 116, 117, 118, 119, 123, 126, 130, 194, 1094, 1096], "20": [115, 119, 126, 130, 131, 240, 254, 258, 276, 278, 289, 290, 291, 315, 327, 335, 353, 990], "requir": [115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 130, 217, 248, 295, 298, 337, 448, 460, 481, 484, 503, 504, 505, 509, 510, 511, 512, 513, 514, 515, 682, 929, 936, 1056, 1057, 1078, 1087, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097], "futur": [115, 119, 120, 122, 125, 126, 130, 344, 734], "part": [115, 119, 120, 122, 125, 126, 130, 240, 1142], "Of": [115, 119, 120, 122, 125, 126, 130, 275, 284, 295, 298, 319, 445, 516, 562, 594, 595, 635, 673, 705, 710, 720, 722, 732, 749, 750, 751, 829, 830, 837, 929, 940, 964, 978, 999, 1002, 1022, 1118, 1124], "logger": [119, 120, 121, 122, 467], "sink": [120, 122, 131, 302], "column": [120, 275, 1118, 1119, 1121, 1122, 1123, 1124], "configur": [120, 155, 157, 162, 446, 863, 901, 906, 908, 943], "mqtt": [122, 131, 239, 302, 305, 1094, 1116], "mosquitto": 122, "ws2023": [124, 131], "group": [124, 212, 213, 227, 260, 267, 279, 280, 295, 298, 301, 302, 305, 306, 341, 373, 388, 397, 404, 410, 414, 417, 421, 430, 434, 439, 440, 560, 568, 583, 586, 589, 630, 639, 658, 700, 701, 725, 733, 737, 748, 752, 754, 839, 847, 856, 896, 904, 905, 959], "task": [124, 131, 341, 960], "via": [126, 131, 159, 160, 332, 908], "pwm": [126, 907], "control": [126, 248, 263, 270, 273, 283, 284, 289, 290, 311, 312, 319, 467, 688, 899, 907], "05": [131, 208, 211, 242, 248, 251, 254, 257, 283, 284, 285, 287, 288, 327, 328, 335, 353], "vo": 131, "recap": [131, 199, 212, 213, 227, 260, 280, 295, 298, 302, 303, 555, 717, 976, 1002], "polymorph": [131, 213, 316, 509, 510, 511, 512, 513, 514, 515, 518, 635, 724, 742], "collabor": 131, "necessarili": 131, "first": [131, 184, 213, 357, 507, 723, 763, 764, 798, 1135], "round": [131, 485, 499], "organiz": 131, "design": [131, 259, 277, 279, 280, 295, 298, 316, 353, 370, 427, 442, 466, 470, 480, 633, 1156], "At": 131, "larg": 131, "datalogg": [124, 131], "07": [131, 213, 229, 260, 293, 294, 335, 339, 353], "renam": [131, 885], "graz": [132, 174, 176, 183, 221, 353], "branch": [133, 390], "track": [133, 992], "submit": [133, 821, 822], "appli": [133, 154, 1124], "patch": [133, 154], "packag": [135, 138, 156, 162, 179, 260, 277, 295, 301, 328, 802, 981, 984, 1007, 1055, 1127, 1128, 1129, 1130, 1131, 1135], "pypi": [135, 208, 248, 1055, 1100, 1129, 1131], "audio": [136, 140], "chip": [136, 907], "bringup": [136, 139, 908], "get": [137, 150, 180, 231, 316, 734, 790, 815, 940], "debian": [137, 138], "kernel": [137, 138, 139, 143, 152, 154, 198, 353, 438, 766, 775, 776, 777, 778, 779, 780, 794, 796, 802, 803, 835, 838, 903, 906, 1158], "config": [137, 802], "within": 137, "qemu": 137, "extract": [137, 143, 210, 504, 1090, 1092, 1097, 1105], "boot": [137, 150, 161, 353, 838], "etc": [138, 199, 207, 210, 239, 249, 252, 285, 878, 906, 934, 1028, 1078], "yocto": [139, 143, 897], "everyth": [139, 167, 226, 450, 833, 844, 923], "like": [139, 315, 562, 955], "i2": 140, "kontron": 140, "smarc": 140, "modul": [140, 184, 208, 210, 248, 249, 261, 277, 284, 301, 302, 328, 335, 438, 453, 517, 706, 770, 775, 777, 778, 780, 781, 796, 802, 907, 1007, 1097, 1100, 1108, 1134, 1142], "dirti": 141, "upgrad": 141, "path": [141, 162, 210, 220, 226, 233, 456, 753, 834, 886, 988, 993, 1087, 1142], "step": [141, 462, 465, 467, 503, 595, 688, 749, 750, 977, 978, 992, 1012, 1037], "intel": 143, "bsp": 143, "improv": 144, "beginn": [144, 208, 220, 243, 248, 260, 284, 1099, 1100], "split": [144, 170, 233, 239, 313, 327, 1046, 1105], "openshot": 145, "seo": [146, 147], "sitemap": 146, "meta": [146, 147], "stack": [147, 153, 194, 215, 415, 673], "hang": 147, "dbu": [147, 467], "stuff": [147, 316, 335, 428, 838, 872], "extens": 148, "rest": [148, 210, 305, 316, 928], "style": [148, 391, 442, 562, 664, 718, 736, 1045], "convert": [148, 171, 275, 1018, 1096], "rst": 148, "exampl": [148, 233, 239, 243, 331, 364, 368, 403, 405, 425, 428, 464, 503, 588, 613, 664, 665, 683, 684, 685, 686, 712, 721, 826, 844, 846, 847, 895, 919, 923, 928, 931, 949, 974, 997, 1012, 1032, 1042, 1045, 1046, 1047, 1048, 1069, 1111, 1119, 1124, 1133, 1134], "add": [148, 269, 454, 458, 516, 763, 810, 821, 973, 1016, 1117], "miss": [148, 260, 664, 932], "past": [148, 403], "learn": [149, 270, 337, 1101, 1107], "beagleboard": 150, "how": [150, 153, 161, 183, 213, 231, 372, 411, 436, 437, 438, 572, 710, 720, 845, 858, 861, 1004, 1107], "repair": 150, "nand": 150, "also": [150, 409, 833, 838, 839, 844, 845, 924, 925, 926, 928, 955, 958, 962, 964, 1043, 1107], "40w": 150, "x": [150, 213, 552], "loader": 150, "u": [150, 919], "bootabl": 150, "mmc": 150, "sd": [150, 191], "card": [150, 191, 269, 830], "port": [151, 917], "There": [151, 231, 442, 570, 726, 818, 908, 918, 923, 934, 935], "": [151, 166, 191, 384, 408, 442, 562, 654, 660, 663, 723, 766, 771, 790, 802, 818, 847, 863, 915, 963, 976, 1004, 1008, 1051], "alwai": [151, 231, 251, 698, 933], "better": [151, 359, 444, 812, 1022, 1113], "wai": [151, 210, 231, 239, 432, 964, 1008, 1027], "process": [151, 153, 172, 267, 288, 800, 801, 834, 835, 839, 840, 955, 956, 957, 960, 964], "signal": [151, 175, 418, 732, 949, 972, 973, 974, 975], "aren": 151, "t": [151, 208, 710, 1100], "queue": [151, 194, 732, 819, 950, 969, 970], "timer": [151, 810, 812, 813, 926, 960], "poll": [151, 732, 734], "event": [151, 763, 782, 792, 810, 811, 815, 943, 949, 965, 967], "dispatch": [151, 744, 745, 746], "interrupt": [151, 782, 783, 784, 785, 798, 807, 943, 960], "realtim": [151, 153, 346, 350, 353, 794, 962, 963, 1148, 1157], "save": [152, 720], "solid": [152, 442], "disk": [152, 191, 833], "life": [152, 721, 945], "gentoo": [152, 802], "rant": [152, 172, 447, 978], "swap": [152, 246, 407, 723, 845, 1065], "tmpf": 152, "instanc": [152, 210, 236, 239], "syslog": 152, "var": 152, "mountpoint": 152, "logrot": 152, "o": [152, 210, 220, 226, 233, 234, 239, 246, 248, 249, 281, 285, 288, 290, 327, 364, 786, 843, 844, 845, 868, 881, 923, 924, 925, 926, 927, 928, 937, 938, 958, 1050], "schedul": [152, 288, 345, 346, 350, 835, 839, 945, 958, 959, 961, 962, 963], "ram": 152, "thing": [152, 213, 234, 255, 256, 258], "left": [152, 384, 575], "why": [153, 154, 162, 231, 442, 470, 562, 565, 569, 570, 717, 723, 747, 775, 821, 846, 900, 907, 915, 919, 944, 997, 1042], "p": 153, "suck": [153, 782], "count": [153, 719, 809, 845, 1084], "consumpt": 153, "conclus": [153, 807, 899, 907], "pthread": 153, "experi": 153, "100": 153, "default": [153, 184, 231, 233, 255, 256, 258, 315, 331, 516, 564, 566, 567, 579, 580, 581, 582, 649, 697, 718, 736, 861, 974, 1042, 1122], "eat": 153, "limit": [153, 1003], "than": [153, 523, 1019], "my": [153, 156, 252, 357, 358, 444, 770, 841, 858], "could": [153, 721], "take": [153, 409, 720, 1022], "doe": [153, 588, 845, 858, 861, 929, 932, 933], "differ": [153, 184, 408, 593, 595, 864, 918], "rpm": [154, 156, 181, 775], "prerequisit": [154, 162, 180, 279, 301, 305, 337, 777, 1055], "rpmbuild": 154, "directori": [154, 179, 180, 342, 444, 445, 517, 753, 829, 830, 847, 852, 853, 854, 855, 864, 865, 866, 873, 880, 881, 884, 885, 890, 918, 929, 977, 978, 997, 1133], "download": [154, 200, 202, 335, 340, 354, 520, 988, 991, 1147], "For": [154, 156, 162, 240, 243, 267, 270, 272, 273, 276, 278, 317, 353, 365, 490, 564, 575, 660, 688, 709, 734, 837, 923, 988, 989, 990, 1000, 1018, 1087, 1156], "domain": [155, 175, 273, 735], "subdomain": 155, "www": 155, "apex": 155, "microsoft": 156, "team": 156, "screen": [156, 894], "share": [156, 450, 455, 715, 719, 722, 750, 829, 830, 856, 969, 970, 992, 993, 1167], "x11": 156, "reviv": 156, "meh": 156, "annoy": 156, "re": [156, 999], "regist": [156, 432], "itself": 156, "autostart": 156, "browser": [156, 215], "recommend": [156, 187, 337, 1134, 1155], "deploi": 157, "gener": [157, 161, 171, 180, 184, 189, 216, 223, 226, 231, 233, 239, 258, 260, 264, 270, 273, 277, 279, 280, 284, 291, 293, 301, 302, 303, 305, 309, 313, 393, 522, 563, 566, 570, 688, 689, 691, 692, 697, 755, 908, 915, 942, 977, 978, 1002, 1003, 1004, 1005, 1006, 1031, 1070, 1083, 1155], "public": [157, 210, 457, 564, 829, 830, 854, 855, 915], "repo": [157, 179], "jfasch": [157, 859], "home": [157, 834, 864, 880, 919], "time": [157, 166, 170, 275, 448, 735, 810, 811, 839, 951, 1062], "deploy": [157, 293, 309, 450, 802, 1155], "bigbluebutton": 158, "onlin": [158, 167, 1147], "tl": 158, "dr": 158, "host": [158, 203, 802, 990], "check": [158, 458, 482, 847, 908, 949, 985, 1046, 1066], "els": [158, 226, 233, 239, 249, 279, 301, 305, 366, 390, 391, 392, 569, 584, 885, 902, 915, 999, 1035, 1038], "traunstein": 159, "zierlersteig": 159, "kaltenbachwildni": 159, "anstieg": 159, "auf": [159, 200], "zierlerberg": 159, "rinn": 159, "abstieg": 159, "grintovec": 160, "plan\u0161arsko": 160, "jezero": 160, "\u010de\u0161ka": 160, "ko\u010da": 160, "anreis": 160, "hinauf": 160, "runter": 160, "zusammenfassung": 160, "brick": 161, "1399": 161, "dell": 161, "xp": 161, "happen": 161, "virtualbox": 161, "secur": [161, 191, 267, 288, 332, 914, 918], "enrol": 161, "machin": [161, 191, 212, 270, 332, 910, 911, 936, 1101, 1107], "owner": [161, 847], "mok": 161, "pair": [161, 660, 913, 915], "stage": 161, "reboot": 161, "diagnost": [161, 906], "crosstool": [162, 989, 990], "ng": [162, 989, 990], "prebuilt": [162, 1124], "repositori": [162, 166, 349, 517, 527], "releas": [162, 447, 784, 794, 1010], "glibc": 162, "version": [162, 444, 447, 450, 660, 688, 932], "gcc": [162, 419, 432, 976], "simplest": [162, 688, 693, 731, 996, 1019, 1134, 1140], "stdio": 162, "h": [162, 691, 894], "iostream": 162, "distribut": [162, 1055], "afterword": [162, 668], "schulung": [164, 184], "entwicklung": 164, "beratung": 164, "richtlinien": 165, "ver\u00f6ffentlichung": 165, "kursmateri": 165, "window": [166, 203, 220, 276, 278, 355, 841], "workflow": [166, 213], "conflict": [166, 948, 1010], "individu": 167, "languag": [167, 183, 213, 229, 255, 256, 258, 263, 283, 284, 289, 315, 316, 353, 421, 440, 700, 955, 1001, 1023, 1025], "qualivis": [168, 353], "z\u00fcrich": [168, 353], "2013": [168, 353, 1148], "fragen": [168, 201], "antworten": 168, "kursnotizen": 169, "2015": [169, 353], "userspac": [169, 761, 763, 815, 816, 817, 906, 907, 943], "can": [169, 190, 213, 248, 409, 461, 465, 516, 575, 660, 720, 900, 901, 902, 904], "bu": [169, 190, 467, 901, 904, 908], "driver": [169, 198, 269, 353, 779, 780, 798, 906, 1158], "beispiel": [169, 184, 243, 890], "heizungssteuerung": 169, "k\u00f6nnen": [170, 194, 207], "viel": 170, "mutabl": [170, 173, 184, 194, 201, 207, 220, 223, 231, 233, 236, 239, 246, 249, 252, 264, 271, 281, 285, 291, 303, 307, 313, 1040, 1042], "immut": [170, 173, 184, 201, 207, 220, 231, 236, 239, 246, 252, 261, 268, 271, 285, 313, 573, 1040], "kann": [170, 215], "man": [170, 215, 862], "nicht": [170, 184, 194], "oft": 170, "genug": 170, "wiederholen": 170, "hart": 170, "indizieren": 170, "weich": 170, "nettfragen": 170, "shortcut": [170, 1018, 1048], "objektorientiert": 170, "date": [170, 216, 275, 340], "delta": 170, "datetim": [170, 189, 210, 216, 271], "bissl": 170, "potschert": [170, 194], "schreiben": [170, 194], "scho": 170, "formen": 170, "represent": [170, 1021], "__str__": [170, 1016, 1021], "subprocess": [170, 249], "enumer": [170, 194, 199, 201, 207, 210, 231, 239, 246, 264, 281, 303, 313], "zip": [170, 210, 313], "comprehens": [170, 194, 216, 223, 226, 231, 233, 239, 243, 264, 270, 271, 273, 303, 313, 996, 1002, 1047], "exec": [170, 236, 252, 260, 264, 291, 313, 1000], "eval": [170, 171, 207, 236, 246, 264, 291, 303], "umgebend": 170, "context": [170, 231, 270, 273, 277, 800, 801, 821, 997, 1000], "eigen": 170, "json": [170, 192, 199, 215, 216, 226, 243, 246, 252, 260, 261, 296, 299, 1096], "individualtrain": [171, 186, 353], "tage": [171, 353], "beginnend": [171, 353], "inhalt": [171, 174, 973, 1150], "51": 171, "58": 171, "94": [171, 184], "121": 171, "famou": [171, 435], "overload": [171, 229, 239, 260, 295, 307, 538, 564, 571, 578, 718, 1019, 1021], "getter": [171, 516, 572], "setter": 171, "listcomprehens": 171, "express": [171, 184, 199, 216, 223, 249, 252, 264, 313, 386, 388, 464, 482, 496, 667, 891, 1002, 1060, 1119], "global": [171, 184, 194, 252, 302, 372, 378, 399, 401, 415, 452, 545, 546, 547, 576, 577, 578, 920, 995, 1041], "scope": [171, 194, 302, 731, 734, 995, 1041], "variabl": [171, 194, 207, 210, 220, 223, 231, 239, 246, 249, 261, 281, 285, 307, 313, 330, 358, 372, 375, 378, 399, 401, 407, 426, 482, 546, 573, 577, 703, 732, 834, 920, 949, 950, 957, 1030, 1041, 1065], "closur": [171, 194, 260, 277, 279, 280, 295, 301, 305, 702, 995, 997], "between": [171, 581, 1105], "walkthrough": 172, "reduc": [172, 383], "eight": 172, "color": 172, "pil": 172, "numpi": [172, 174, 201, 208, 248, 251, 270, 273, 284, 290, 302, 307, 319, 353, 1100, 1105], "cluster": 172, "excurs": [172, 248, 702], "matplotlib": [172, 201, 220, 252, 290, 307, 313, 1054, 1105], "now": [172, 184], "come": [172, 208, 450, 644, 976, 1100], "let": 172, "kmean": 172, "result": [172, 436, 1112], "properti": [172, 210, 239, 456, 457, 1020], "center": 172, "restor": 172, "alpha": 172, "back": [172, 613, 1096], "rgba": 172, "random": [173, 210, 243, 248, 493, 506, 514, 1120], "type": [173, 199, 223, 226, 236, 239, 246, 255, 256, 258, 260, 261, 275, 277, 295, 298, 299, 303, 315, 331, 374, 376, 377, 381, 388, 413, 423, 428, 447, 457, 566, 595, 616, 617, 660, 661, 664, 675, 677, 714, 736, 740, 742, 743, 773, 782, 877, 884, 947, 997, 999, 1012, 1019, 1042, 1107], "except": [173, 210, 226, 229, 236, 239, 251, 252, 260, 270, 273, 277, 278, 295, 298, 311, 319, 346, 538, 585, 586, 654, 703, 710, 734, 999], "demonstr": 173, "dict": [173, 223, 231, 233, 239, 246, 1018], "access": [173, 212, 366, 419, 420, 564, 572, 580, 646, 736, 739, 741, 743, 744, 745, 746, 753, 786, 815, 816, 817, 1013, 1020, 1047, 1048], "indic": [173, 201], "slice": [173, 184, 199, 210, 233, 239, 243, 264, 285, 291, 839, 1037, 1121, 1123], "protocol": [173, 184, 199, 220, 223, 226, 231, 233, 236, 239, 249, 264, 277, 281, 285, 303, 307, 313, 688, 899, 963, 1004, 1006], "standardthemen": 174, "hauptthema": 174, "numerik": 174, "lesen": [174, 194], "mat": 174, "l\u00f6sen": 174, "uni": 174, "\u00fcbung": [174, 177, 194], "propos": 175, "posix": [175, 732, 944, 953, 966, 968, 969, 970, 971], "ipc": [175, 176, 353, 966, 968, 969, 970, 971, 1167], "virtual": [175, 248, 269, 548, 549, 550, 635, 637, 638, 739, 740, 741, 743, 744, 745, 746, 747, 773, 835, 839, 901, 969, 1087, 1135, 1136, 1137, 1167], "socket": [175, 902, 925], "applic": [175, 960], "compani": 175, "thought": 175, "handgestrickt": 177, "um": 177, "fallen": 177, "lustvol": 177, "erleiden": 177, "programmier": 178, "baden": [178, 353], "w\u00fcrttemberg": [178, 353], "kursinform": 178, "kursaufbau": 178, "kursverlauf": [178, 186], "hand": 179, "privat": [179, 210, 239, 457, 564, 636, 698, 829, 830, 852, 853], "makefil": [180, 517, 770, 780, 977, 978, 992], "argh": 181, "visual": [181, 208, 224, 436, 451, 1100, 1126, 1135], "studio": [181, 208, 224, 1100, 1126, 1135], "flatpak": 181, "issu": [181, 995], "m": 181, "bei": [183, 194, 353], "firma": [183, 353], "environ": [183, 248, 256, 258, 267, 269, 276, 277, 278, 342, 834, 957, 1024, 1087, 1135, 1136, 1137, 1145], "driven": [183, 212, 237, 248, 251, 279, 280, 301, 302, 305, 353, 965, 1171], "dai": [183, 187, 188, 190, 191, 192, 202, 203, 212, 213, 218, 221, 223, 224, 227, 234, 267, 270, 273, 276, 277, 278, 279, 280, 284, 288, 290, 295, 301, 302, 305, 306, 312, 316, 709, 1062, 1153], "advanc": [183, 187, 190, 199, 202, 211, 227, 237, 240, 251, 260, 263, 273, 279, 280, 281, 282, 283, 284, 289, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 315, 316, 353, 421, 1099, 1100, 1161], "18": [184, 186, 212, 231, 251, 263, 264, 278, 294, 335, 353, 990], "19": [184, 186, 190, 224, 240, 334, 335, 349, 351, 353], "sy": [184, 210, 833, 1029], "multilin": [184, 216, 220, 313, 330, 1044], "docstr": [184, 231, 243, 246, 249, 271, 303, 330], "datentypen": [184, 194, 201, 214, 230, 242], "ausflug": [184, 233], "variablen": [184, 194, 201, 214, 230, 233, 242, 252], "deren": 184, "unterbau": 184, "zuweisung": 184, "mit": [184, 194, 199, 212, 353, 890, 1148, 1164], "hilf": 184, "tupl": [184, 189, 194, 199, 201, 207, 210, 220, 223, 226, 231, 233, 239, 243, 246, 249, 255, 256, 258, 261, 264, 271, 281, 285, 307, 313, 315, 329, 330, 660, 709, 714, 1032, 1040, 1108], "unpack": [184, 189, 194, 199, 201, 210, 226, 231, 243, 249, 255, 256, 258, 261, 271, 307, 313, 315, 329, 330, 660, 709, 714, 988, 1108], "unendlich": 184, "breit": 184, "divis": [184, 194], "floor": [184, 194], "konvertierung": 184, "konstruktoren": [184, 201], "welchen": 184, "typ": [184, 194], "typen": 184, "besser": 184, "laufzeitverhalten": [184, 194], "geeigneter": 184, "datenstrukturen": [184, 194, 195, 215, 233, 1163], "boolean": [184, 194, 220, 223, 231, 233, 239, 243, 246, 313, 380, 464, 1033, 1060, 1119], "short": [184, 223, 239, 380, 474, 782], "circuit": [184, 223, 239, 380], "evalu": [184, 223, 239], "warum": [184, 194], "sind": [184, 194], "mehr": [184, 199], "rang": [184, 189, 194, 201, 210, 216, 220, 223, 231, 233, 236, 243, 246, 249, 255, 256, 258, 261, 271, 285, 291, 302, 315, 594, 595, 660, 688, 708, 709, 710, 711, 712, 713, 1002, 1039, 1054], "foli": 184, "161": 184, "shallow": [184, 233, 1040], "deep": [184, 233, 1040], "dem": [184, 1164], "deepcopi": 184, "funktionen": [184, 194, 195, 199, 1163], "gotcha": [184, 780, 810, 964], "paramet": [184, 231, 233, 277, 331, 370, 406, 409, 412, 426, 444, 448, 673, 677, 712, 723, 802, 932, 977, 1042, 1112], "90": 184, "ff": 184, "lokal": [184, 194, 252], "92": 184, "uniq": [184, 1082, 1083], "punkt": [184, 194], "zusammengefasst": 184, "hier": 184, "sch\u00f6nere": 184, "al": [184, 194, 243], "comprens": 184, "125": 184, "lesbarkeit": 184, "perform": [184, 207, 434, 710], "review": [184, 213], "pprint": 184, "praktisch": 184, "debug": [184, 447, 800, 998], "datentransform": 184, "127ff": 184, "complet": [184, 538, 862], "collect": [184, 233, 236, 261, 976, 1018, 1118, 1131], "namedtupl": [184, 1018], "parameter\u00fcbergab": [184, 194], "variabel": 184, "lang": 184, "argumentlisten": 184, "erst": 184, "klass": 184, "weiterf\u00fchrend": [186, 208], "workspac": [187, 188, 190, 192], "core": [187, 224, 267, 977], "special": [187, 306, 886], "tutori": [187, 190, 202, 208, 218, 248, 251, 284, 1100], "parti": [187, 218], "v": [189, 194, 201, 207, 210, 231, 236, 239, 243, 246, 252, 268, 271, 281, 285, 296, 329, 330, 368, 377, 389, 392, 396, 398, 447, 450, 557, 558, 559, 573, 719, 727, 742, 780, 800, 801, 807, 808, 922, 958, 1028, 1031, 1039, 1050, 1128], "return": [189, 252, 412, 670, 671, 673, 688], "orient": [189, 239, 252, 260, 263, 264, 277, 279, 280, 283, 284, 289, 295, 298, 301, 302, 305, 306, 311, 319, 323, 442, 562, 633, 1015], "addit": [190, 562, 578, 640, 1016], "brought": 190, "thoma": 190, "cloud": [191, 316, 332], "particip": 191, "desk": 191, "interlud": [191, 782], "bloodi": 191, "wild": [191, 240, 295, 298, 301], "watchdog": 191, "support": [191, 203, 663, 798], "25": [192, 202, 211, 218, 229, 234, 245, 287, 288, 295, 296, 297, 300, 353], "grundlegend": [194, 195, 1163], "sprachelement": [194, 195, 1163], "syntax": [194, 201, 207, 239, 249, 271, 285, 313, 330, 703, 712, 1028], "semantik": 194, "einr\u00fcckung": 194, "ihren": 194, "\u00e4ndern": 194, "kommentar": 194, "sprach": 194, "standarddatentypen": 194, "elementar": [194, 195, 1163], "beliebig": 194, "gro\u00df": 194, "vergleichsoperatoren": 194, "pr\u00e4zedenz": 194, "vor": 194, "strichrechnung": 194, "modulo": 194, "un\u00e4rer": 194, "negat": [194, 1119], "erzwingen": 194, "auch": 194, "zeichenketten": 194, "raw": [194, 201, 216, 220, 233, 239, 261, 291, 1013, 1044, 1095], "f": [194, 216, 231, 249, 291, 313, 1045], "konvertierungen": 194, "pr\u00e4zendenzregeln": 194, "literal": 194, "primit": [194, 726, 1002], "konstanten": 194, "operatoren": 194, "ausdr\u00fcck": 194, "operatorrangfolgen": 194, "\u00fcbungen": [194, 1147], "zwei": 194, "vertauschen": 194, "kontrollstrukturen": [194, 195, 214, 230, 231, 242, 1163], "anweisungen": 194, "folgen": 194, "bedingungen": 194, "verzweigungen": 194, "bedingt": 194, "anweisung": 194, "verzweigung": [194, 195, 1163], "geschachtelt": 194, "mehrfach": 194, "fallauswahl": 194, "schleifen": [194, 195, 1163], "z\u00e4hlergesteuert": 194, "kopfgesteuert": 194, "schleif": [194, 199], "fu\u00dfgesteuert": 194, "jf": 194, "continu": [194, 229, 231, 270, 278, 280, 302, 312, 395, 1035, 1038], "sequenti": [194, 199, 231, 243, 313, 602, 603, 610, 611, 1002, 1036], "schnell\u00fcbersicht": 194, "sprunganweisungen": 194, "endlosschleifen": 194, "ben\u00f6tigt": 194, "Suche": 194, "eindimensional": 194, "tupel": 194, "listen": [194, 199, 233, 330], "sort": [194, 246, 521, 600, 605, 606, 609, 1122], "revers": [194, 607, 608, 625, 626, 627, 1019], "stapel": 194, "schlangen": 194, "versuch": 194, "zur\u00fcck": 194, "hybrid": 194, "supergscheit": 194, "methoden": [194, 195, 1163], "prozeduren": [194, 195, 1163], "funktionspoint": 194, "so": [194, 207, 210, 220, 252, 276, 442, 562, 660, 673, 675, 702, 1121], "heisst": [194, 199], "funktionsobjekt": 194, "primzahlenbeispiel": 194, "funktion": 194, "laufzeitfehl": 194, "existiert": 194, "zuweisen": 194, "fehlerfal": 194, "peter": 194, "unterprogramm": 194, "wert": 194, "referenzen": 194, "r\u00fcckgabewert": 194, "oder": [194, 336, 1148], "inner": [194, 995], "standardbibliotheken": 194, "built": [194, 277, 566, 664, 780, 999], "funktionalit\u00e4ten": 194, "struktur": 195, "herdt": [195, 1163], "kapitel": [195, 1163], "ganz": [199, 231], "kurz": 199, "mehreren": 199, "returnwerten": 199, "bzw": [199, 336], "containerdatentypen": 199, "untypisiert": 199, "l\u00f6schen": 199, "begriff": 199, "zufal": 199, "regular": [199, 212, 213, 249, 252, 264, 313, 891], "hallo": 201, "speicher": 201, "sch\u00fctze": 201, "ich": 201, "davor": 201, "aber": 201, "gemischten": 201, "wiederholung": [201, 236], "objektidentit\u00e4t": 201, "statement": [201, 210, 389, 403, 995, 997, 1010, 1028, 1034, 1112, 1115], "operationen": 201, "verloren": 201, "interpol": 201, "mittel": [201, 207], "scipi": 201, "shell": [203, 267, 288, 332, 353, 834, 845, 847, 863, 875, 876, 882, 914, 931, 940, 955, 1149], "script": [203, 288, 353, 909, 940, 1007, 1026, 1149], "29": [203, 277, 311, 312, 313, 335, 343, 353], "assign": [207, 233, 239, 246, 307, 330, 385, 482, 563, 569, 570, 670, 671, 673, 718, 995, 1030, 1037, 1041, 1117], "fun": [207, 246, 260, 1030], "arithmet": [207, 212, 231, 243, 330, 358, 379, 408, 482, 496, 555, 578, 591, 592, 596, 599, 1019, 1031], "complex": [207, 246, 330, 1145], "nur": 207, "sum": [207, 644], "weiter": 207, "dynamisch": 207, "evaluierung": 207, "scienc": [208, 234, 248, 251, 284, 301, 302, 303, 305, 1100], "don": [208, 710, 1100], "batteri": [208, 330, 1046, 1100], "confer": [208, 284, 1100], "talk": [208, 284, 900, 906, 907, 1100], "zipfil": 210, "One": [210, 249, 275, 327, 384, 403, 442, 444, 577, 710, 723, 815, 900, 918, 951, 976, 992], "member": [210, 239, 564, 569, 570, 572, 577, 646, 647, 664, 736], "attribut": [210, 236, 252, 315, 839, 942, 1013, 1020, 1125], "protect": [210, 636, 710, 792], "posit": [210, 562, 993, 1022, 1052], "keyword": [210, 231, 255, 256, 258, 315, 331, 425, 426, 995, 1022, 1042], "argument": [210, 231, 239, 260, 295, 331, 409, 929, 955, 998, 1022, 1029, 1042, 1052], "mix": [210, 223, 291, 703, 1076, 1077], "yield": [210, 226, 231, 249, 277, 291, 1002, 1005], "filter": [210, 239, 268, 269, 275, 303, 313, 522, 523, 524, 710, 1119], "nonetyp": [210, 223], "none": [210, 231], "recurs": [210, 411, 570, 667, 753, 864], "fibonacci": [210, 688, 690, 1003, 1070], "sever": 210, "same": [210, 546, 571, 577, 702, 1041, 1134], "oserror": 210, "errno": [210, 920], "platform": [210, 906], "assert": [210, 252, 303], "assertionerror": 210, "27": [211, 229, 245, 295, 296, 297, 300, 309, 310, 353], "predefin": [211, 403, 1145], "stream": [211, 773, 844, 1050], "pcap": [211, 224, 226], "syllabu": [211, 224], "programmieren": [212, 353], "tool": [212, 285, 288, 303, 337, 827, 892, 895, 906, 1160], "massacr": 212, "kick": 212, "encapsul": [212, 428, 568, 734], "flow": [212, 242, 248, 263, 270, 273, 283, 284, 289, 290, 311, 312, 319, 397], "pointer": [212, 213, 229, 255, 256, 258, 276, 278, 316, 405, 406, 408, 410, 426, 538, 555, 570, 574, 575, 591, 592, 593, 595, 596, 599, 619, 660, 675, 715, 716, 717, 718, 720], "standard": [212, 224, 229, 233, 248, 276, 278, 284, 376, 423, 447, 525, 585, 595, 628, 639, 641, 668, 844, 928, 1050, 1100, 1142], "librari": [212, 224, 229, 248, 276, 278, 284, 370, 445, 450, 451, 455, 525, 585, 595, 628, 639, 668, 922, 993, 994, 1100, 1167], "stl": [212, 538, 554, 555, 556, 587, 595, 596, 624], "kid": 213, "recapitul": 213, "some": [213, 231, 236, 275, 278, 288, 703, 734], "jump": [213, 408], "complic": [213, 487, 992], "Be": [213, 461, 465, 466, 570, 575, 629, 721, 726], "toolbox": 213, "databas": [213, 305, 645, 780, 1056, 1058, 1093, 1109, 1110, 1112], "gtest": [213, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146], "smart": [213, 229, 255, 256, 258, 278, 316, 538, 715, 716, 717, 718], "datenbank": 215, "showcas": 215, "full": [118, 215], "kommt": 215, "db": 215, "aufgab": 215, "formulieren": 215, "damit": 215, "dies": 215, "http": [215, 303], "verbindung": 215, "client": [215, 498, 1116], "schicken": 215, "jetzt": 215, "schickman": 215, "weg": 215, "vom": [215, 353], "server": [215, 1116], "php": 215, "j": 215, "empfangen": 215, "nun": 215, "muessen": 215, "verwandlen": 215, "liter": [216, 330, 482, 734, 735], "quot": [216, 220, 246, 1108], "friend": [216, 730], "sinc": [216, 249, 255, 256, 258, 577, 1045], "pars": [216, 1029, 1052, 1078], "sap": [217, 270, 272, 273, 274, 275, 318, 353], "export": 217, "solut": [217, 400, 422, 445, 454, 460, 461, 462, 465, 466, 471, 480, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 570, 597, 627, 664, 666, 673, 697, 698, 707, 740, 839, 858, 917, 919, 923, 992, 994, 1010, 1136], "terminologi": [220, 288, 836, 974, 1107], "31": [221, 229, 237, 353], "numer": [221, 319], "ai": 221, "mountain": 221, "io": [223, 239, 267, 271, 307, 313, 431, 786, 787, 842, 942], "common": [223, 432, 444, 610, 1003, 1012], "wtf": [223, 926, 974], "creativ": [226, 828, 1016], "shift": [226, 384, 578], "sampl": [226, 723, 804, 859, 1057, 1078, 1099, 1133, 1158], "hmmm": 227, "02": [229, 234, 248, 267, 347, 353, 841], "undefin": [229, 1041], "behavior": [229, 712], "again": [229, 277, 288, 572, 659, 882, 1019, 1149], "26": [229, 259, 266, 279, 280, 281, 282, 301, 302, 304, 335, 353], "repeat": [229, 874], "quickli": 229, "algorithm": [229, 246, 270, 278, 315, 316, 408, 521, 538, 555, 590, 591, 595, 596, 605, 609, 1105, 1107], "functor": [229, 538, 603, 702, 704, 705, 723], "unifi": 229, "model": [229, 1105, 1107], "uml": [229, 474], "todai": [229, 995], "associ": [229, 387, 474, 614, 615], "dynam": [229, 260, 279, 280, 281, 301, 305, 415, 542, 543, 544, 596, 629, 630, 742, 758, 788, 789, 993, 1013, 1022], "alloc": [229, 315, 432, 552, 597, 622, 623, 630, 738, 740, 773, 796, 938, 1002], "week": 229, "zahl": 231, "miscellanea": 231, "brace": [231, 255, 256, 258, 315, 316, 662, 663, 664, 665, 1119], "singl": [231, 445, 470, 918, 976, 1140], "hour_of_dai": 231, "membership": [231, 1036], "best": 231, "intro": [233, 267, 335, 554, 555, 556, 942, 996], "doc": [233, 303], "ident": [233, 296], "datenypen": 233, "libarari": 233, "chainmap": 233, "dequ": 233, "suchalgorithmen": 233, "pitfal": [233, 276, 279, 331, 566, 635, 660, 688, 705], "fromkei": [233, 246], "join": [233, 239, 313, 1046, 1073], "lstrip": [233, 327], "rstrip": [233, 327], "sequentiel": 236, "konstant": 236, "suchzeit": 236, "metaprogram": 236, "everywher": [236, 252, 570, 1000], "defaultdict": [236, 261], "hello": [239, 249, 357, 692, 780, 781, 1026], "world": [239, 357, 364, 780, 781, 1026], "blahblah": [239, 243, 246, 249, 313, 595, 1025], "commandlin": [239, 267, 305, 321, 326, 409, 437, 444, 862, 917, 940, 974, 1029, 1052], "lifetim": [239, 372, 401, 705, 719, 727, 1109], "preview": [239, 455], "explicit": [239, 366, 562, 574, 665, 703, 705, 718, 731, 1010], "max": 239, "iteratoren": 239, "generatoren": 239, "ordereddict": 239, "duck": [239, 255, 256, 258, 295, 298, 315, 675, 743, 1012], "resolut": 239, "order": [239, 546, 999, 1019], "mro": 239, "super": 239, "__bases__": 239, "__mro__": 239, "self": [239, 570, 1014], "call": [239, 402, 406, 432, 436, 438, 538, 805, 922, 928, 957, 963, 1022], "mangl": [239, 571], "udemi": 239, "claus": [239, 279, 301, 305, 999], "lambda": [239, 255, 256, 258, 285, 315, 316, 660, 701, 702, 703, 704, 723], "oppos": 239, "discuss": [242, 279, 280, 341, 366, 368, 732, 805, 810, 818], "chart": 242, "interact": [243, 291, 1026, 1077], "1st": 243, "explan": [243, 303], "preced": [243, 246, 387, 1031], "float": [243, 246, 303, 1031], "einschub": 243, "vergleich": 243, "filterketten": 243, "zen": 243, "datensatz": 243, "notat": 243, "letzt": 243, "letzten": 243, "infinit": [246, 1003], "long": [246, 660], "comparison": [246, 562, 609, 753, 827, 1019, 1031], "digit": [246, 335, 1067], "english": [246, 337, 1067], "determin": [246, 848, 1064, 1074, 1075], "maximum": [246, 1064, 1074, 1075], "two": [246, 407, 500, 501, 562, 581, 665, 970, 1064, 1065, 1074, 1075], "out": [246, 279, 280, 467, 565, 594, 595, 964, 978, 995, 1037], "duplic": [246, 445, 587, 931], "encod": [246, 248, 249, 260, 270, 290, 291, 307, 335, 1113], "nest": [249, 398, 411], "itertool": 249, "chain": [249, 805], "destructor": [249, 546, 552, 567, 632, 637, 717], "prient": 251, "next": [251, 431, 696, 1140], "standesregist": 251, "sqlite3": [251, 448, 1056, 1112], "xml": [251, 1125], "tree": [251, 775, 802, 840, 866, 873, 911, 918, 957], "projektabschlusstag": 251, "id": [252, 280, 307, 839, 859, 919, 945, 957, 1148], "anyth": 252, "defin": [252, 454, 566, 703, 999], "own": [252, 444, 672, 682, 839], "lookup": [252, 530, 531], "vorbesprechung": 254, "legend": 254, "neuerungen": 254, "seit": 254, "2011": [254, 255, 256, 258, 353], "ausblick": 254, "thank": [255, 256, 258], "you": [255, 256, 258, 675], "readablil": [255, 256, 258], "writabl": [255, 256, 258, 929], "err": [255, 256, 258, 315, 619, 675, 709, 714], "bind": [255, 256, 258, 315, 709, 714, 722, 723, 1112], "auto": [255, 256, 258, 315, 660, 675, 708, 709, 949, 1134], "without": [255, 256, 258, 315, 576, 597, 671, 675, 938], "simpli": [255, 256, 258, 316, 919], "deserv": [255, 256, 258], "ag": [255, 256, 258, 650], "overrid": [255, 256, 258, 315, 707], "delet": [255, 256, 258, 315, 543, 612, 698, 862], "strongli": [255, 256, 258, 315, 661], "enum": [255, 256, 258, 315, 424, 661, 770], "deleg": [255, 256, 258, 315, 666], "nullptr": [255, 256, 258, 315, 674], "rvalu": [255, 256, 258, 315, 669, 672, 673], "skeleton": [256, 258, 276, 278, 580, 829, 830], "perfect": [258, 382, 424, 722], "view": [258, 663, 710, 712, 713, 766, 828], "architectur": [259, 353, 442, 660, 699, 802], "pattern": [259, 277, 279, 280, 353, 466, 480, 1003, 1156], "mondai": 259, "tuesdai": 259, "wednesdai": 259, "forc": [260, 381], "front": [260, 279, 301, 1013], "seri": [260, 263, 283, 284, 289, 290, 311, 312, 319, 538, 1086, 1093, 1118], "piec": 260, "go": [260, 931, 1108], "kickoff": [260, 279, 280, 295, 298, 302, 305], "livehack": [260, 269, 444, 467, 669, 765, 1041, 1128, 1135], "Such": [261, 640], "noob": 263, "wsl": [267, 276, 278, 841, 990], "quick": 267, "permiss": [267, 288, 847, 849, 850, 851, 857, 861, 880, 911], "uart": [267, 833], "susi": 267, "untold": [267, 270, 276, 277, 280, 316], "whet": [268, 269], "appetit": [268, 269], "panda": [268, 270, 271, 273, 275, 277, 290, 302, 307, 313, 319, 1105, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124], "regex": 268, "pipelin": 269, "categori": 269, "payment": 269, "select": [269, 275, 277, 899, 906, 966, 1118, 1119, 1121, 1123, 1140], "uncategor": 269, "dataset": [270, 274, 275, 1104, 1106], "origin": [270, 273, 587, 704, 705, 812, 1108], "automat": [270, 273, 293, 309, 378, 401, 697, 744, 1155], "cleanup": [270, 273, 810, 821], "conversiosn": 271, "outlook": [273, 315], "specif": [273, 951, 1088], "usecas": 275, "drop": [275, 462, 710], "nan": 275, "datafram": [275, 1105, 1118, 1122], "isna": 275, "to_datetim": 275, "dated": 275, "workabl": 275, "usag": [275, 280, 315, 411, 415, 438, 454, 458, 503, 518, 564, 601, 602, 608, 635, 663, 667, 675, 719, 720, 721, 761, 805, 845, 884, 901, 908, 932, 976, 1054], "modifi": [275, 419, 426, 503, 948, 1010, 1040, 1124], "increas": 275, "price": 275, "particular": 275, "store": [275, 419, 467, 948, 1010], "readabl": [275, 422, 734, 934], "combin": [275, 385, 481, 482, 495], "prefer": [276, 278], "ubuntu": [276, 278, 990], "under": [276, 278, 864, 924, 997], "unsupport": 276, "heavi": [276, 278, 838], "weight": [276, 278], "resourc": [276, 337, 570, 630, 718, 731, 798], "r": [276, 881, 918], "littl": [276, 393, 444, 1025], "concurr": 276, "far": [276, 727, 1107], "fact": [277, 784, 846, 1013, 1016], "fixtur": [277, 519, 753, 1133, 1134, 1144, 1145, 1146], "omin": [277, 998], "warm": 278, "resolv": 278, "cont": 278, "d": [278, 467], "insid": [279, 280, 572, 577, 672, 673], "construct": [279, 301, 305, 1018, 1035], "emphasi": [279, 301, 305], "recoveri": [279, 280, 301, 302, 305], "broader": 279, "sens": 279, "morn": [280, 284, 288, 290, 302, 312, 316], "pytest": [280, 1132, 1133], "awaken": [284, 312], "bash": [288, 353, 882, 1149], "bourn": [288, 882, 1149], "inspect": [288, 889, 892], "wakeup": [288, 290, 316, 962, 964], "redirect": [288, 842, 843, 844, 845, 868, 881, 931], "pipe": [288, 712, 828, 842, 843, 845, 846, 893, 895], "archiv": [288, 824, 825, 827, 828, 990, 991, 994], "compress": [288, 824, 825, 827, 828], "network": [288, 484, 796, 797, 900, 925, 1170], "least": [288, 1140], "day2": 290, "interpret": [291, 436, 468, 481, 482, 495, 496, 1077], "len": 291, "abl": 291, "callabl": [291, 723], "summer": [295, 298, 338], "sandbox": [295, 298], "equal": [296, 516, 562, 578, 579, 580, 581, 582, 602, 1019], "spoiler": 298, "annot": 299, "multiprocess": 301, "idea": 301, "veri": [302, 707, 738, 1125], "leftov": 302, "yesterdai": 302, "ifi": 302, "toolcas": [302, 315, 678, 679, 680], "arg": [302, 998], "kwarg": [302, 998], "includ": [302, 402, 456, 1046], "receiv": [302, 970], "udp": 302, "datagram": [302, 900], "compositesink": 302, "timestamp": [302, 810], "org": [303, 335], "aaarghhh": 303, "expresss": 303, "constexpr": [315, 667], "constinit": 315, "constev": 315, "want": [315, 635, 660, 671, 675, 698, 770, 775, 933, 1016], "erasur": [315, 740, 742], "classic": [316, 724, 739], "semant": [316, 669, 670, 671, 672, 673, 970], "still": [316, 465, 660, 997, 1002], "2024": 319, "checker": 320, "blinklicht": [321, 322, 323, 324], "electron": [321, 899], "aspect": 321, "circuitri": 321, "header": [321, 400, 446, 452, 577, 906, 1089], "pinout": [321, 906], "unittest": [324, 1134, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1171], "ece19": 325, "g2": [327, 830], "big": [327, 353, 790], "swoop": 327, "size": [327, 376, 535, 685, 878], "chunk": 327, "line": [327, 371, 403, 565, 845, 862, 1028, 1069, 1080, 1084], "str": [327, 1021], "byte": 329, "btw": 330, "wertebereich": 330, "sidenot": [331, 1042], "pure": [331, 635, 637, 1042], "beauti": [331, 438, 833, 908, 1042], "login": [332, 837, 909], "formalit\u00e4ten": 333, "ec": [334, 349, 351, 829, 830], "daili": 335, "pass": [335, 575], "fail": [335, 933, 1133, 1140, 1142], "reiter": 335, "argpars": [335, 1029, 1052], "deutsch": [336, 353], "lehrinhalt": 336, "lernergebniss": 336, "lv": 336, "empfohlen": [336, 1149, 1151, 1152, 1157, 1159, 1160, 1164, 1165, 1166, 1167, 1169, 1170, 1171], "verpflichtend": 336, "fachliteratur": 336, "lernressourcen": 336, "instrument": 336, "art": 336, "vermittlung": 336, "voraussetzungen": 336, "begleitbedingungen": 336, "pr\u00fcfungsmethod": 336, "beurteilungskriterien": 336, "mode": [337, 447, 847, 899, 932, 1026, 1050], "deliveri": [337, 973, 974], "co": 337, "requisit": 337, "assess": 337, "criteria": [337, 958], "whose": 339, "fault": 339, "newcom": 340, "jjjj": 343, "sidewai": [344, 577, 723, 734, 998, 1003], "bisher": 353, "gehalten": 353, "entwickl": 353, "fortgeschritten": [353, 1151], "wiener": 353, "neustadt": 353, "einf\u00fchrung": [353, 1150, 1152, 1159], "ober\u00f6sterreich": 353, "pictur": [353, 790], "obersteiermark": 353, "korn": 353, "salzburg": 353, "ausgew\u00e4hlt": 353, "themen": 353, "2018": 353, "raum": 353, "n\u00fcrnberg": 353, "oberb\u00fcren": 353, "schweiz": 353, "2017": 353, "m\u00fcnchen": [353, 1148], "lowlevel": 353, "refresh": 353, "programmiererstandpunkt": 353, "2016": 353, "wien": 353, "workshop": 353, "bodenseo": 353, "hemmenhofen": 353, "bodense": 353, "systemnah": 353, "2014": 353, "mathia": 353, "kettner": 353, "siemen": 353, "braunschweig": 353, "intermedi": [353, 493, 995, 1012], "scratch": [353, 1148], "lpd": 353, "hannov": 353, "unter": 353, "k\u00f6ln": 353, "projektverwaltung": 353, "subvers": [353, 1165], "lka": 353, "niedersachsen": 353, "konfigur": 353, "gnu": [353, 436, 976, 1160], "make": [353, 450, 517, 659, 698, 786, 829, 830, 977, 978, 1160], "2012": 353, "hamburg": 353, "fehlerdiagnos": 353, "polizei": 353, "stia": 353, "admont": 353, "bi": 353, "2010": 353, "softwareentwicklung": 353, "darmstadt": 353, "ulm": 353, "bundeswehr": 353, "wildflecken": 353, "cool": [356, 1045], "gui": 356, "Their": [356, 376], "hobbi": 356, "histori": [356, 561, 659, 766, 970, 995, 1025, 1104], "second": [358, 360], "fahrenheit": [359, 361, 363, 490], "tabl": [359, 361, 363, 516, 1019], "simplif": 360, "constant": [362, 377, 402, 432, 493], "preprocessor": [362, 402, 403], "macro": [363, 402, 403, 452, 761, 782], "outsid": 364, "cat": [364, 887], "poor": [364, 365], "wc": 365, "definit": [366, 368, 370, 378, 396, 398, 399, 402, 454, 577, 660, 739, 741, 743, 745, 761, 962, 1039], "memset": 366, "histogram": 367, "nonsens": 368, "signatur": 368, "declar": [368, 369, 398, 399, 400, 577], "mistak": 370, "stdin": [371, 895, 909], "variant": [376, 465, 471, 660, 736, 744, 745, 746, 970], "qualifi": 376, "width": [376, 408, 582, 595, 907, 1037], "escap": [377, 1044], "logic": 380, "implicit": [381, 720], "sign": 381, "truncat": [381, 938], "propag": 381, "unsign": 381, "compil": [381, 398, 403, 419, 420, 445, 446, 447, 563, 566, 570, 699, 720, 782, 802, 976, 979, 988, 992], "warn": [381, 387, 403, 952, 974], "cast": 381, "increment": [382, 595, 688, 1010], "decrement": [382, 595], "confus": [382, 1031, 1119], "manipul": [384, 720, 938, 974], "bitwis": [384, 1119], "AND": 384, "OR": 384, "xor": 384, "right": [384, 1081], "invert": [384, 1118], "complement": 384, "summari": [387, 562, 723, 802, 828, 993, 1013, 1121, 1123], "true": [390, 465, 575, 1122], "fals": 390, "truth": 390, "option": [390, 437, 452, 453, 454, 828, 862, 864, 884, 891, 906, 918, 1108], "matter": 391, "distinct": 392, "purpos": [393, 942], "closer": 393, "comma": 393, "infam": 393, "idiom": 393, "bodi": 394, "goto": 396, "label": [396, 1123], "monolith": [398, 445, 467, 520], "separ": [398, 399, 445, 467, 732, 886, 992], "static": [401, 425, 516, 576, 577, 742, 992, 993, 994, 1017], "visibl": [401, 425], "replac": [402, 505, 747], "inlin": [402, 432, 565, 577], "guard": 402, "rule": [403, 442, 563, 566, 577, 665, 673, 710, 840], "span": 403, "stringif": [403, 1021], "token": 403, "address": [405, 773, 816, 839, 906, 960, 1119], "arbitrari": [408, 595, 998, 1022], "see": [409, 833, 838, 839, 844, 845, 924, 925, 926, 928, 955, 958, 962, 964, 1043, 1107], "struct": [411, 412, 427, 562, 651, 714], "typedef": 413, "alia": 413, "singli": 416, "volatil": [418, 863], "lie": 418, "valid": 418, "handler": [418, 973, 974], "intrins": 419, "atom": [419, 729, 734, 800, 801, 805, 806, 821, 947], "builtin": 419, "align": 420, "unalign": 420, "pad": 420, "saniti": [422, 430, 444], "readabilti": 422, "shoot": 422, "offens": 422, "unobvi": 422, "ambigu": [422, 428, 665], "smell": 422, "know": 423, "size_t": 423, "discret": 424, "tradit": [424, 442, 1022], "approach": [424, 452, 453, 454], "wishlist": 424, "close": [424, 470, 715, 970], "somewhat": 425, "contriv": 425, "hoorai": 425, "correct": [426, 573, 707], "const": [426, 535, 552, 572, 573, 575, 647, 648, 660, 675, 709, 714], "non": [426, 509, 510, 511, 512, 513, 514, 515, 552, 572, 736, 741, 1140], "good": [427, 452, 453, 562, 577, 595, 664, 673, 682, 683, 710, 712], "old": [427, 577, 595, 660, 673, 682, 683, 712], "c99": 427, "explict": 428, "safeti": [428, 444], "scheme": 428, "artifici": [428, 1101], "valgrind": [429, 543], "action": [429, 974], "optim": [431, 432, 433], "bound": [431, 432, 543, 958], "unnecessari": 432, "peephol": 432, "subexpress": 432, "elimin": [432, 720, 740, 1069], "strength": 432, "reduct": 432, "fold": 432, "invari": 432, "unrol": 432, "tail": [432, 893], "cpu": [432, 839, 958, 964], "cach": [433, 454, 710], "multidimension": 433, "thrash": 433, "profil": [435, 436, 438, 439], "donald": 435, "knuth": 435, "toni": 435, "hoar": 435, "larri": 435, "wall": 435, "practic": 435, "brian": 435, "w": 435, "kernighan": 435, "rob": 435, "pike": 435, "gprof": 436, "flat": 436, "callgrind": 437, "analysi": 437, "per": [437, 770, 810, 1145], "kcachegrind": 437, "oprofil": 438, "much": [438, 453, 704, 997], "wide": 438, "offlin": 438, "graphic": 438, "accomplish": 442, "disclaim": [442, 841], "principl": [442, 470], "yagni": 442, "uncl": 443, "bob": 443, "typic": [444, 840, 944, 960], "bookkeep": 444, "effort": 444, "spaghetti": 444, "concaten": [444, 1117], "input": [444, 844, 1002, 1105], "yyyi": 444, "mm": 444, "where": [444, 450, 838, 976], "testabl": 444, "explicitli": [444, 703, 720], "categor": 444, "net": 444, "place": [444, 521, 566, 607, 829, 830, 1040], "overengin": [444, 577], "boilerpl": [445, 704, 798], "execut": [445, 451, 847, 993, 999, 1007, 1027, 1076, 1140, 1142], "consist": [445, 773], "paus": 447, "diagram": 447, "cmake_build_typ": 447, "k": [447, 1102], "printf": [447, 564], "popular": [447, 834], "find_packag": 448, "prefix": [450, 998], "target": [450, 451, 453, 456, 457, 519, 936, 977, 1155], "runpath": 450, "abi": 450, "blacklist": [452, 453], "flag": [452, 641, 788, 928, 1045], "libhello": 452, "bad": [452, 453, 710, 771], "target_compile_definit": 453, "backlist": 453, "availablil": 453, "use_blacklist": 454, "normal": 455, "subdirectori": 456, "reorgan": 456, "i2c": [460, 906, 908], "subhierarchi": 460, "instanti": [460, 467, 616, 677, 736, 768], "adapt": [461, 467, 476, 481, 483, 490, 495, 723], "must": [461, 935], "adapte": 461, "asensor": 461, "real": [461, 569, 660, 721, 859], "measur": [461, 504, 735, 962, 964], "motiv": [462, 465, 481, 482, 578, 661, 664, 666, 675, 677, 702, 708, 822, 1004, 1014, 1020], "insert": [462, 528, 529, 612, 613, 616, 617, 618, 652, 722, 749, 750, 790], "bulk": 462, "6a": 462, "initializer_list": [462, 663, 665], "socialdb": 463, "composit": [123, 464, 474, 478, 492, 753], "filesystem": [464, 753, 970], "thermomet": [464, 484, 485, 498, 499, 518], "aggreg": [465, 474, 664], "conret": 465, "realiz": 465, "situat": [465, 919], "constantsensor": 465, "decoratedconstantsensor": 465, "randomsensor": [465, 506], "decoratedrandomsensor": 465, "verifi": [465, 874, 908, 910, 1105], "hold": [465, 1018], "studi": [467, 708, 709, 987], "heat": 467, "dbuslogg": 467, "dbusvaluestor": 467, "either": 467, "stop": [467, 718], "help": [467, 862, 894, 1128, 1135], "observ": [469, 497, 1004], "which": [470, 935, 976], "liskov": 470, "substitut": [470, 575], "segreg": 470, "invers": [470, 963], "proxi": [471, 481, 484, 485, 495, 498, 499], "foundat": 472, "hierarchi": [472, 585, 840, 999], "hypothet": [472, 1019], "singleton": [473, 486, 487, 488, 500, 501, 502], "connector": 474, "uniniti": [482, 575], "flexibl": [486, 487, 500, 501], "strict": [487, 501], "inflex": [488, 502], "i2csensorfactori": 489, "concret": [489, 500, 501], "i2csensorfactory_vendor1": 489, "stub": [498, 809], "socialinsur": [500, 501], "oegk": [500, 501], "sv": [500, 501], "introduc": [503, 564, 710], "relationship": [503, 637, 638, 1105], "onewir": [128, 503, 519, 520, 908, 936], "firstnam": 503, "lastnam": [503, 653, 655], "w1sensor": [503, 520], "answer": [503, 702], "try": [507, 585, 718, 999], "ledstripedisplay_nopoli": 509, "cover": [509, 510, 511, 512, 513, 514, 515, 518], "hysteresis_nopoli": 510, "averagingsensor_nopoli": 511, "constantsensor_nopoli": 512, "mocksensor_nopoli": 513, "randomsensor_nopoli": 514, "mock": 515, "shape": [516, 862], "procedur": 516, "circl": 516, "area": [516, 582], "squar": 516, "massag": 517, "sub": 517, "notfound": 519, "find_is_const": 519, "isol": [519, 1109, 1145], "realiti": 519, "pc": 519, "greater": 523, "odd": 524, "overwrit": 528, "sunni": [529, 531, 534, 929, 933, 934, 935], "uniquifi": 536, "transcript": 538, "malloc": 543, "free": 543, "mismatch": [543, 919], "across": [546, 739, 741, 743, 745], "ownership": [551, 552, 553, 720, 847], "raii": [551, 552, 553, 731], "dealloc": 552, "naiv": [555, 576, 627, 818, 973, 1003, 1118], "ol": [562, 709], "look": [562, 924, 925, 926], "distanc": [562, 581], "length": 562, "manual": [563, 566, 570, 723, 745, 746, 862, 922, 940, 943, 1004], "specifi": [564, 929], "otherwis": 564, "lifecycl": 567, "dragon": [570, 726], "memberwis": 570, "straighforward": 570, "correctli": 570, "underli": [571, 661], "mechan": 571, "just": 571, "pollut": 573, "hidden": [574, 884], "cannot": 575, "easili": 575, "odr": 577, "litt": 577, "defnit": 577, "ostream": [578, 579, 580, 581, 582], "cout": 578, "cuboid": 579, "upon": [579, 581, 582], "point3d": [579, 581], "surfac": 579, "volum": [579, 990], "unari": [580, 581], "rectangl": [581, 582], "coordin": [581, 582], "absolut": [581, 753, 886, 1099], "height": 582, "catch": [585, 999], "throw": [585, 736], "spirit": [595, 719, 720, 721], "pre": [597, 664], "destin": [597, 929], "back_insert_iter": 597, "binary_search": 600, "intellig": [600, 606, 1006, 1101], "find_if": [603, 653], "customiz": 603, "for_each": 604, "lower_bound": 606, "reverse_copi": [608, 627], "characterist": [610, 613], "modif": [613, 992], "fill": [616, 1112], "definin": 617, "subscript": 618, "eras": 619, "multimap": 621, "deriv": [631, 632], "larger": [635, 994, 1002], "substr": [640, 1046], "paint": 641, "american": 641, "onto": 641, "moodl": [642, 835, 849, 850, 875, 982], "quiz": [642, 835, 849, 850, 875, 982], "cin": 644, "n": 650, "year": 650, "transform": [651, 723, 750, 1002], "wrong": [654, 734, 929], "great": [659, 960], "around": [660, 688], "school": 660, "item": [660, 722, 749, 750, 751, 997, 1003], "inevit": 660, "union": [660, 736], "consider": [660, 960], "uniform": 662, "implementor": 663, "direct": [663, 773], "inconsist": 664, "heap": 664, "refus": 664, "narrow": 664, "mess": [665, 1113], "realist": [665, 1000, 1133], "int": [665, 955], "nicolai": 665, "josutti": 665, "complain": 665, "said": 668, "guidelin": 668, "well": 668, "smartptr": 670, "lvalu": [673, 722], "wish": [673, 1012], "theori": 673, "Ones": 673, "sai": [675, 864], "decai": 675, "chosen": 677, "rescu": [677, 702, 724, 978, 998, 1019, 1124], "syntact": [677, 998], "variat": [677, 709, 714, 802], "conceptless": [678, 679], "fulfil": 682, "has_siz": 682, "index_returns_doubl": 682, "func": 683, "ret": 686, "doubl": 686, "foreword": 688, "prototyp": 688, "examp": 688, "explain": 688, "drive": [688, 899], "anatomi": [688, 780], "resum": 688, "suspens": 688, "caller": 688, "co_yield": 688, "mimick": 688, "fibo": 689, "suspend": [694, 695, 696], "decis": [699, 958], "cleanli": 699, "care": 702, "handwritten": [704, 705], "proggi": 704, "morph": 704, "possibl": 705, "temporari": [705, 997, 1133], "made": 705, "hard": [707, 883], "aris": 707, "gool": 709, "prevent": [709, 720], "accident": [709, 750], "dangl": 710, "easi": [710, 727], "constraint": 710, "dogmat": 710, "sigh": 710, "storag": [712, 951], "abbrevi": 712, "avail": [712, 761], "compat": 714, "unique_ptr": [716, 719, 720], "shared_ptr": [716, 719, 750], "handwrit": 718, "ctor": 718, "auto_ptr": 718, "mayb": 718, "uniqu": [719, 751], "But": [719, 741, 933], "juggl": 719, "make_shar": 719, "cyclic": 719, "chanc": 720, "leakag": 720, "keystrok": 720, "make_uniqu": 720, "acknowledg": 720, "prove": 720, "weak_ptr": [721, 750], "borrow": 721, "invalid": 721, "univers": 722, "dual": 722, "bag": [722, 749, 750, 751], "null": 723, "pointlessli": 723, "hardcod": [723, 766], "placehold": 723, "upsid": 724, "technic": 724, "downsid": 724, "joinabl": 727, "detach": [727, 945], "cornercas": 727, "recursive_mutex": 730, "timed_mutex": 730, "recursive_timed_mutex": 730, "lock": [731, 734, 794, 807], "unlock": [731, 807], "consid": 731, "acquisit": [731, 1086], "lock_guard": 731, "condition_vari": 732, "safe": [732, 974], "predic": [732, 949], "concern": 732, "promis": 734, "chrono": [734, 735], "utterli": 734, "becom": [734, 994], "readi": 734, "minim": 734, "pro": 734, "clock": 735, "sleep": [735, 800, 805, 806], "bad_variant_access": 736, "accessor": 736, "get_if": 736, "fundament": [736, 1023], "incomplet": [738, 1115], "bloat": 740, "tadaa": [], "unrel": 743, "visit": 746, "rel": [753, 886, 1007], "compon": 753, "creation": [753, 834, 945, 946], "create_directori": 753, "entri": 753, "classif": 753, "is_xxx": 753, "directory_entri": 753, "modern": [757, 758, 759, 1153], "slideshow": [758, 761, 763, 766, 768, 771, 773, 780, 782, 784, 786, 788, 790, 792, 794, 796, 798, 800, 805, 807, 810, 812, 816, 819, 822, 970, 974, 1042, 1129, 1136], "hook": 760, "necessari": 760, "ioctl": [760, 761, 763, 782, 815, 928], "vtabl": 761, "kernelspac": 761, "_io": [761, 782], "major": [765, 766], "minor": [765, 766], "space": [766, 816, 835, 838, 839, 960], "hair": 770, "pretti": 770, "wswitch": 770, "dma": [773, 774, 798], "physic": 773, "scatterlist": 773, "when": 775, "explod": 775, "loadabl": 780, "init": [780, 798, 840, 1148], "exit": [780, 909, 945, 955], "unload": 780, "raspi": [782, 783, 919], "legaci": [782, 1072], "api": [782, 812, 944, 963], "my_activate_gpio": 782, "servic": [784, 840, 1116], "routin": [784, 798], "reserv": 786, "kmalloc": [788, 789, 805], "doubli": [790, 791], "node": [790, 931], "empti": [790, 881, 1013, 1069], "consequ": 792, "rt": [794, 795], "mutual": [794, 807], "exclus": [794, 807], "registr": 796, "layer": 796, "util": [796, 901], "pci": [798, 799], "foremost": 798, "probe": 798, "bar": 798, "rasperri": 802, "crossdev": 802, "artifact": [802, 1102], "bootload": 802, "jjj": 803, "mainten": 804, "spinlock": [805, 807, 808], "spin_lock": 805, "irq": 805, "spin_lock_irqsav": 805, "spin_unlock_irqrestor": 805, "ah": [805, 1113], "bulletproof": 807, "dup": 809, "defer": [810, 821], "jiffi": 812, "wheel": [812, 1055], "get_one_ev": 815, "copy_to_us": 815, "noth": 818, "o_nonblock": 818, "wake": 819, "workqueu": [821, 822, 823], "did": 821, "destroi": [822, 1135], "gzip": 826, "tar": 828, "etiquett": 828, "Being": 828, "g1": 829, "lot": [829, 830], "precondit": [829, 830], "credenti": [829, 848], "backup": [829, 830, 864], "busi": 830, "ok": [833, 955], "serial": 833, "pseudo": 833, "partit": 833, "proc": 833, "authent": [837, 915], "prompt": 837, "verif": [837, 1088], "success": 837, "imperson": 837, "uid": [839, 858, 859], "parent": [840, 957], "child": 840, "subsystem": 841, "0": [841, 955, 1109, 1148], "stdout": [845, 895, 909, 931], "stderr": 845, "trick": [845, 1044], "teacher": 847, "constel": 847, "root": [847, 859], "octal": 847, "tune": [847, 962, 1108], "setuid": [858, 859], "passwd": [858, 878, 934, 1078], "sudo": 858, "password": [858, 1066], "chmod": [858, 1027], "toi": 858, "effect": [859, 974, 1013], "ugli": 860, "sticki": 860, "umask": 861, "edit": 862, "tabul": 862, "filenam": 862, "bashrc": [863, 864], "cp": 864, "similar": 864, "its": [864, 1108], "pwd": 865, "cd": 865, "mkdir": [871, 881], "funni": 872, "dev": 877, "touch": 881, "rm": 881, "rmdir": 881, "mv": 885, "somewher": 885, "cut": [888, 1037], "durchsuchen": 890, "optionen": 890, "verkn\u00fcpfungen": 890, "grep": 891, "less": [894, 995, 1019], "brushless": 899, "motor": 899, "speed": 899, "esc": 899, "fwd": 899, "rev": 899, "calibr": 899, "exchang": 900, "packet": 900, "vcan": 901, "frame": [902, 1117], "mcp2515": 903, "schemat": 903, "solder": 903, "spi": 903, "lm73": 906, "slave": [906, 908], "master": [906, 908], "enabl": [906, 908], "bcm2835": 906, "datasheet": 906, "connect": [906, 925, 1112], "i2cdetect": 906, "detect": 906, "hwmon": [906, 908], "monitor": [906, 908], "pca9685": 907, "puls": 907, "wire": [907, 908], "ds18b20": 908, "alter": 908, "w1": 908, "attach": 908, "pin": [908, 942], "ds2482": 908, "800": 908, "channel": 908, "announc": 908, "hotplug": 908, "lm": 908, "caveat": [908, 1109], "topologi": 908, "symptom": 908, "statu": [117, 909, 945, 955], "adjust": [911, 988], "wear": 915, "admin": 915, "hat": 915, "scp": 918, "sshf": 919, "mount": 919, "logdata": 919, "unmount": 919, "fusermount": 919, "umount": 919, "helper": [920, 1119], "simplic": [924, 925, 926], "watch": 924, "strace": 924, "supervis": 924, "descriptor": [928, 931, 938], "filedescriptor": 928, "offset": [928, 938], "lseek": 928, "hole": 930, "o_creat": 932, "bogu": 932, "o_excl": 933, "alreadi": 933, "o_rdonli": 934, "even": [934, 935, 1061], "o_wronli": 935, "writeabl": 935, "implicitli": 935, "scatter": 938, "gather": 938, "retriev": 940, "wise": 941, "legal": 944, "pthread_join": 945, "synchron": [947, 973], "win32": 949, "reset": 949, "trylock": 954, "islock": 954, "argc": 955, "char": 955, "argv": [955, 1029], "procf": 957, "pid": 957, "ppid": 957, "getpid": 957, "getppid": 957, "multitask": 958, "fair": [958, 962], "runnabl": [958, 964], "bare": 960, "metal": 960, "hm": 960, "awai": [960, 1095], "stabil": 960, "latenc": [962, 964], "nice": 962, "inexact": 962, "immedi": 962, "preempt_rt": 962, "polici": 963, "prioriti": 963, "runn": 963, "frequenc": 964, "scale": 964, "mysteri": 964, "remain": 964, "sysprog": [965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975], "mmap": 969, "segment": 969, "produc": [969, 1003], "consum": 969, "mq_open": 970, "mq_send": 970, "mq_receiv": 970, "mq_close": 970, "mq_unlink": 970, "notif": 970, "mq_notifi": 970, "mqueue": 970, "sem_open": 970, "sem_wait": 970, "sem_post": 970, "sem_clos": 970, "sem_unlink": 970, "barebon": 973, "alarm": 973, "louder": 973, "innoc": 973, "sigalrm": 973, "programmat": 974, "mask": 974, "pend": 974, "sigset_t": 974, "async": 974, "seem": 976, "nm": 976, "agnost": 977, "goodi": 978, "nativ": [979, 984], "sysroot": [979, 988], "linaro": 988, "defunct": 988, "patienc": 988, "against": [988, 993, 1019], "docker": 990, "autoconf": 990, "71": 990, "zoom": 992, "rememb": 992, "reloc": 993, "independ": 993, "pic": 993, "runtim": 993, "versu": 993, "def": 995, "reach": 995, "theoret": 995, "nonloc": 995, "hood": 997, "monkeypatch": 997, "print": [997, 1022], "contextlib": 997, "contextmanag": 997, "involv": 997, "prefixprint": 997, "mind": 998, "sugar": 998, "functool": [998, 1019], "rais": 999, "regardless": 999, "coverag": 1002, "infin": 1003, "form": 1007, "daemon": 1008, "mother": 1010, "acquir": 1010, "abc": 1012, "late": 1012, "abtract": 1012, "interrelationship": 1015, "salari": 1016, "introspect": 1016, "isinst": 1016, "issubclass": 1016, "classmethod": 1017, "staticmethod": 1017, "_make": 1018, "_asdict": 1018, "dunder": 1019, "compar": 1019, "incompat": 1019, "lotsa": 1019, "magic": 1019, "__gt__": 1019, "term": 1019, "__lt__": 1019, "total_ord": 1019, "them": 1019, "readonli": 1020, "repr": 1021, "__repr__": 1021, "suppli": 1022, "ultim": 1022, "guido": 1025, "van": 1025, "rossum": 1025, "hash": 1027, "bang": 1027, "she": 1027, "doze": 1027, "registri": 1027, "indent": 1028, "cosmet": 1029, "rudimentari": 1029, "python2": 1031, "unicod": 1031, "esoter": 1035, "delimit": 1044, "interv": 1052, "axi": 1054, "setuptool": 1055, "manifest": 1055, "publish": [1055, 1094, 1116], "usernam": 1066, "prime": [1071, 1079, 1085], "strategi": 1078, "revert": 1080, "justifi": 1081, "activ": 1087, "dictread": [1089, 1090, 1108], "cp1252": [1089, 1091], "reader": [1091, 1092, 1108], "nohead": 1091, "both": 1097, "interrel": 1098, "product": 1099, "david": 1100, "beazlei": 1100, "raymond": 1100, "hetting": 1100, "mean": 1102, "linear": [1103, 1105, 1106], "regress": [1103, 1105, 1106], "weather": 1104, "ndarrai": 1105, "plot": 1105, "splice": 1105, "mankind": 1107, "god": 1107, "insan": 1108, "scsv": 1108, "dbapi": [1109, 1111, 1112], "transact": 1109, "postgresql": 1111, "postgr": 1111, "cursor": 1112, "queri": 1112, "ascii": 1113, "iso": 1113, "latin": 1113, "8859": 1113, "lieb": 1113, "gr\u00fc\u00dfe": 1113, "j\u00f6rg": 1113, "\u795d\u597d": 1113, "utf": 1113, "decod": 1113, "broker": 1116, "subscrib": 1116, "payload": 1116, "append": 1117, "deprec": 1117, "bitmap": 1119, "neat": 1119, "iloc": [1121, 1122], "Then": 1121, "inplac": 1122, "loc": [1122, 1123], "hiccup": 1123, "inclus": 1123, "lowercas": 1124, "email": 1124, "normalized_email": 1124, "ing": 1124, "elementtre": 1125, "etre": 1125, "sax": 1125, "dom": 1125, "invoc": 1128, "subcommand": 1128, "upload": 1131, "pythonpath": 1133, "mark": 1133, "expect": [1133, 1142], "recogn": 1134, "meat": 1134, "freez": 1135, "recreat": 1135, "fatal": 1140, "failur": 1140, "assert_": 1140, "suit": 1140, "teardown": 1145, "organisatorisch": 1147, "buchung": 1147, "kursablauf": 1147, "kursgestaltung": 1147, "unterlagen": 1147, "grub": 1148, "97": 1148, "bauen": 1148, "prozess": 1148, "verschieden": 1148, "zielpublikum": [1149, 1151, 1152, 1157, 1159, 1164, 1165, 1171], "kursinhalt": [1149, 1151, 1152, 1157, 1159, 1160, 1164, 1165, 1166, 1167, 1169, 1170, 1171], "vorkenntniss": [1149, 1151, 1152, 1157, 1159, 1160, 1164, 1165, 1166, 1167, 1169, 1170, 1171], "three": 1153, "prior": 1155, "beispielen": 1159, "mutter": 1160, "aller": 1160, "woch": 1164, "svn": 1165, "kochtopf": 316, "roundup": 316, "report": 117, "infrastructur": 123, "crtp": 742, "percentagedisplai": 123, "breadboard": 123, "acrobat": 123, "peripher": [124, 131]}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "nbsphinx": 3, "sphinx": 60}, "alltitles": {"Kontakt": [[0, "kontakt"]], "Navigation": [[0, "navigation"]], "Google Maps": [[0, "google-maps"]], "Google Streetview": [[0, "google-streetview"]], "Curriculum Vitae": [[1, "curriculum-vitae"]], "\u00dcber Mich": [[2, "uber-mich"]], "Projekte": [[3, "projekte"]], "Projekte aus selbstst\u00e4ndiger T\u00e4tigkeit": [[3, "projekte-aus-selbststandiger-tatigkeit"]], "Projekte aus nichtselbstst\u00e4ndiger T\u00e4tigkeit": [[3, "projekte-aus-nichtselbststandiger-tatigkeit"]], "Skills": [[4, "skills"], [148, "skills"]], "Angebot: In-House Schulungen": [[5, "angebot-in-house-schulungen"]], "Zu meiner Person": [[5, "zu-meiner-person"]], "Schwerpunke": [[5, "schwerpunke"]], "C/C++": [[5, "c-c"]], "Python": [[5, "python"], [95, "python"], [335, "python"], [340, "python"]], "Linux": [[5, "linux"], [79, "linux"], [166, "linux"], [898, "linux"]], "Schulungsstil": [[5, "schulungsstil"]], "Preise": [[5, "preise"]], "Course Material": [[6, "course-material"], [443, "course-material"], [1099, "course-material"]], "Einleitung": [[7, "Einleitung"], [204, "Einleitung"]], "Datatypes": [[7, "Datatypes"], [201, "Datatypes"], [204, "Datatypes"], [207, "Datatypes"], [220, "Datatypes"], [223, "Datatypes"], [231, "Datatypes"], [233, "Datatypes"], [239, "Datatypes"], [243, "Datatypes"], [246, "Datatypes"], [249, "Datatypes"], [263, "datatypes"], [270, "datatypes"], [273, "datatypes"], [281, "Datatypes"], [283, "datatypes"], [284, "datatypes"], [285, "Datatypes"], [289, "datatypes"], [290, "datatypes"], [307, "Datatypes"], [311, "datatypes"], [312, "datatypes"], [319, "datatypes"], [330, "Datatypes"], [1031, "datatypes"]], "Numbers": [[7, "Numbers"], [204, "Numbers"], [207, "Numbers"], [231, "Numbers"], [330, "Numbers"], [1031, "numbers"]], "Integer Numbers": [[7, "Integer-Numbers"], [204, "Integer-Numbers"], [1031, "integer-numbers"]], "Strings": [[7, "Strings"], [201, "Strings"], [204, "Strings"], [207, "Strings"], [216, "Strings"], [220, "Strings"], [220, "id3"], [223, "Strings"], [231, "Strings"], [243, "Strings"], [261, "Strings"], [264, "Strings"], [264, "id1"], [264, "id3"], [271, "Strings"], [307, "Strings"], [330, "Strings"]], "Compound Datatypes": [[7, "Compound-Datatypes"], [204, "Compound-Datatypes"], [216, "Compound-Datatypes"], [220, "Compound-Datatypes"], [223, "Compound-Datatypes"], [226, "Compound-Datatypes"], [231, "Compound-Datatypes"], [233, "Compound-Datatypes"], [239, "Compound-Datatypes"], [243, "Compound-Datatypes"], [246, "Compound-Datatypes"], [249, "Compound-Datatypes"], [261, "Compound-Datatypes"], [285, "Compound-Datatypes"], [291, "Compound-Datatypes"], [303, "Compound-Datatypes"], [307, "Compound-Datatypes"], [1032, "compound-datatypes"]], "Lists (Array in JavaScript, std::vector<> in C++, Array in Java)": [[7, "Lists-(Array-in-JavaScript,-std::vector<>-in-C++,-Array-in-Java)"], [204, "Lists-(Array-in-JavaScript,-std::vector<>-in-C++,-Array-in-Java)"]], "Dictionary (Key/Value Map in Javascript)": [[7, "Dictionary-(Key/Value-Map-in-Javascript)"], [204, "Dictionary-(Key/Value-Map-in-Javascript)"]], "Set: mathematische Mengen": [[7, "Set:-mathematische-Mengen"], [204, "Set:-mathematische-Mengen"]], "while": [[7, "while"], [204, "while"], [223, "while"], [239, "while"], [271, "while"]], "Functions": [[7, "Functions"], [43, "functions"], [204, "Functions"], [207, "Functions"], [220, "Functions"], [231, "Functions"], [233, "Functions"], [239, "Functions"], [243, "Functions"], [248, "functions"], [264, "Functions"], [271, "Functions"], [285, "Functions"], [301, "functions"], [305, "functions"], [311, "functions"], [312, "functions"], [313, "Functions"], [319, "functions"], [368, "functions"], [368, "id1"], [1043, "functions"]], "Python Basics (2021-xx-xx - 2021-yy-yy)": [[8, "python-basics-2021-xx-xx-2021-yy-yy"]], "Training Information": [[8, null], [187, null], [188, null], [190, null], [191, null], [192, null], [193, null], [195, null], [197, null], [198, null], [202, null], [205, null], [208, null], [211, null], [212, null], [213, null], [214, null], [218, null], [221, null], [230, null], [234, null], [237, null], [240, null], [242, null], [245, null], [248, null], [251, null], [260, null], [263, null], [270, null], [273, null]], "\u00dcberblick": [[8, "uberblick"], [195, "uberblick"], [205, "uberblick"], [214, "uberblick"], [230, "uberblick"], [242, "uberblick"]], "Log": [[8, "log"], [135, "log"], [187, "log"], [188, "log"], [191, "log"], [192, "log"], [200, "log"], [202, "log"], [203, "log"], [205, "log"], [208, "log"], [212, "log"], [214, "log"], [218, "log"], [221, "log"], [230, "log"], [242, "log"], [251, "log"]], "Tag 1": [[8, "tag-1"], [178, "tag-1"], [197, "tag-1"], [205, "tag-1"], [208, "tag-1"], [214, "tag-1"], [230, "tag-1"], [242, "tag-1"]], "Tag 2": [[8, "tag-2"], [178, "tag-2"], [197, "tag-2"], [205, "tag-2"], [208, "tag-2"], [214, "tag-2"], [230, "tag-2"], [242, "tag-2"]], "Live-Hacking (Jupyter Notebook)": [[8, "live-hacking-jupyter-notebook"], [195, "live-hacking-jupyter-notebook"], [205, "live-hacking-jupyter-notebook"], [208, "live-hacking-jupyter-notebook"], [218, "live-hacking-jupyter-notebook"]], "Links": [[8, "links"], [39, "links"], [135, "links"], [172, "Links"], [183, "links"], [188, "links"], [190, "links"], [192, "links"], [195, "links"], [202, "links"], [203, "links"], [205, "links"], [214, "links"], [218, "links"], [221, "links"], [224, "links"], [230, "links"], [237, "links"], [248, "links"], [251, "links"], [284, "links"], [290, "links"], [340, "links"], [418, "links"], [667, "links"], [688, "links"], [706, "links"], [717, "links"], [841, "links"], [862, "links"], [901, null], [908, "links"], [1054, null], [1055, "links"], [1116, "links"], [1118, "links"], [1119, "links"], [1121, "links"], [1122, "links"], [1123, "links"], [1124, "links"], [1136, "links"], [1024, null], [779, "links"]], "Programmierung Grundlagen (Jupyter Notebook)": [[9, "programmierung-grundlagen-jupyter-notebook"], [196, "programmierung-grundlagen-jupyter-notebook"], [206, "programmierung-grundlagen-jupyter-notebook"], [232, "programmierung-grundlagen-jupyter-notebook"], [244, "programmierung-grundlagen-jupyter-notebook"]], "Details": [[10, "details"], [78, "details"], [352, "details"]], "Course List": [[11, "course-list"]], "Contents": [[11, null], [24, null], [146, null], [148, null], [150, null], [151, null], [152, null], [153, null], [154, null], [155, null], [156, null], [157, null], [166, null], [175, null], [179, "contents"], [180, null], [441, "contents"], [543, null], [546, null], [552, null], [555, null], [643, "id1"], [831, "id1"], [851, "id1"], [870, "id1"], [876, "id1"], [879, "id1"], [896, "id1"], [904, "id1"], [905, "id1"], [912, "id1"], [921, "id1"], [937, "id1"], [939, "id1"], [941, "id1"], [956, "id1"], [966, null], [969, null], [983, "id1"], [1003, null], [1058, "id1"], [1059, "id1"], [1063, "id1"], [1072, "id1"], [1086, "id1"], [1093, "id1"], [1140, null], [1145, null], [1153, "contents"], [1156, "contents"], [1142, null]], "Programmierung Grundlagen, anhand von Python (12. und 13.4.2021)": [[11, "programmierung-grundlagen-anhand-von-python-12-und-13-4-2021"], [353, "programmierung-grundlagen-anhand-von-python-12-und-13-4-2021"]], "Templates for Course Descriptions": [[12, "templates-for-course-descriptions"]], "Sidebar: Course Metadata": [[12, "sidebar-course-metadata"]], "About This Site": [[13, "about-this-site"]], "License: GPLv3": [[13, "license-gplv3"]], "Github": [[13, "github"], [335, "github"]], "Sphinx": [[13, "sphinx"], [66, "sphinx"]], "Installation Instructions": [[13, "installation-instructions"]], "pip and venv": [[13, null]], "Work in Progress": [[13, "work-in-progress"], [134, "work-in-progress"]], "More": [[13, "more"]], "OpenTraining": [[14, "opentraining"]], "Draft Topics": [[15, "draft-topics"]], "Miscellaneous": [[16, "miscellaneous"], [133, "miscellaneous"], [144, "miscellaneous"], [171, "miscellaneous"], [191, "miscellaneous"], [255, "miscellaneous"], [256, "miscellaneous"], [276, "miscellaneous"], [290, "miscellaneous"], [301, "miscellaneous"], [302, "miscellaneous"], [305, "miscellaneous"], [312, "miscellaneous"], [315, "miscellaneous"], [538, "miscellaneous"], [538, "id1"], [674, "miscellaneous"], [938, "miscellaneous"], [951, "miscellaneous"], [737, "miscellaneous"]], "S5 Integration": [[17, "s5-integration"]], "Work in Progress: S5 Web Slides": [[17, "work-in-progress-s5-web-slides"]], "Implementation Notes": [[17, "implementation-notes"], [321, "implementation-notes"]], "Todo": [[17, "id1"], [148, null], [148, null], [148, null], [148, null], [148, null], [148, null], [148, null], [148, null], [148, null], [148, null], [148, null], [148, null], [148, null], [148, null], [148, null], [148, null], [148, null], [148, null], [148, null], [177, "id1"], [180, "id2"], [180, "id3"], [443, "todo"], [539, "id1"], [542, "id1"], [545, "id1"], [548, "id1"], [551, "id1"], [554, "id1"], [557, "id1"], [759, "id1"], [763, "id1"], [771, "id2"], [965, "id1"], [968, "id1"], [972, "id1"], [1139, "id1"], [1144, "id1"]], "S5 Slide Tests": [[18, "s5-slide-tests"]], "Level 1 Heading": [[19, "level-1-heading"]], "Level 2 Heading": [[19, "level-2-heading"]], "Level 2 Heading, Image": [[19, "level-2-heading-image"]], "Screencasts": [[20, "screencasts"]], "Topics to be Written": [[21, "topics-to-be-written"]], "New Topics to Write": [[21, "new-topics-to-write"]], "Netidee F\u00f6rderantrag": [[22, "netidee-forderantrag"]], "Netidee F\u00f6rderantrag: OpenTraining": [[23, "netidee-forderantrag-opentraining"]], "1. DATEN ANTRAGSTELLER_IN": [[23, "daten-antragsteller-in"]], "2. ALLGEMEINES": [[23, "allgemeines"]], "2.1 Projektname": [[23, "projektname"]], "2.2 Projekt-Untertitel": [[23, "projekt-untertitel"]], "2.3 Allgemeinverst\u00e4ndliche KURZbeschreibung des Projektes": [[23, "allgemeinverstandliche-kurzbeschreibung-des-projektes"]], "2.4 Anschlussf\u00f6rderung": [[23, "anschlussforderung"]], "3. DIE BESONDERE BEDEUTUNG IHRES PROJEKTES F\u00dcR DAS INTERNET (DIE INTERNETNUTZUNG) IN \u00d6STERREICH?": [[23, "die-besondere-bedeutung-ihres-projektes-fur-das-internet-die-internetnutzung-in-osterreich"]], "4. ZIELGRUPPE UND PROJEKTZIEL": [[23, "zielgruppe-und-projektziel"]], "5. L\u00d6SUNG": [[23, "losung"]], "5.1 Beschreibung der Probleml\u00f6sung": [[23, "beschreibung-der-problemlosung"]], "5.2 Wesentliche Elemente eines nachhaltigen Impact NACH netidee Projektende": [[23, "wesentliche-elemente-eines-nachhaltigen-impact-nach-netidee-projektende"]], "6. UMFELDANALYSE": [[23, "umfeldanalyse"]], "6.1 Was ist der Stand der Technik / Methode / des Wissens?": [[23, "was-ist-der-stand-der-technik-methode-des-wissens"]], "6.2 Welche andere L\u00f6sungen/Vorhaben zu den genannten Problemen gibt es schon?": [[23, "welche-andere-losungen-vorhaben-zu-den-genannten-problemen-gibt-es-schon"]], "7. ALLEINSTELLUNGSMERKMAL": [[23, "alleinstellungsmerkmal"]], "8. PROJEKTERGEBNISSE": [[23, "projektergebnisse"]], "8.1 Liste der Projektergebnisse": [[23, "liste-der-projektergebnisse"]], "8.2 Erforderliche Lizenzen Dritter": [[23, "erforderliche-lizenzen-dritter"]], "9. ERFOLGREICHER PROJEKTABSCHLUSS": [[23, "erfolgreicher-projektabschluss"]], "9.1 Ihre sonstigen Aktivit\u00e4ten im Projektbereich": [[23, "ihre-sonstigen-aktivitaten-im-projektbereich"]], "9.2 Angaben zur fachlichen Eignung der MitarbeiterInnen im Projektkernteam": [[23, "angaben-zur-fachlichen-eignung-der-mitarbeiterinnen-im-projektkernteam"]], "9.3 Erfahrung des/der vorgesehenen ProjektleiterIn": [[23, "erfahrung-des-der-vorgesehenen-projektleiterin"]], "9.4 Link zum maximal 2-min\u00fctigen Video des Projektkernteams": [[23, "link-zum-maximal-2-minutigen-video-des-projektkernteams"]], "9.5 Risiken": [[23, "risiken"]], "9.6 Erfolgskriterien am netidee-Projektende": [[23, "erfolgskriterien-am-netidee-projektende"]], "9.7 Angestrebter Impact 3 Jahre nach netidee-Projektende": [[23, "angestrebter-impact-3-jahre-nach-netidee-projektende"]], "10. UMSETZUNG (EINJ\u00c4HRIGES NETIDEE PROJEKT)": [[23, "umsetzung-einjahriges-netidee-projekt"]], "10.1 Wichtige Partner_innen": [[23, "wichtige-partner-innen"]], "10.2 Arbeitsschwerpunkte": [[23, "arbeitsschwerpunkte"]], "10.3 Wesentliche Ressourcen": [[23, "wesentliche-ressourcen"]], "10.4 Nutzer_innen-Kommunikationskan\u00e4le": [[23, "nutzer-innen-kommunikationskanale"]], "11. PROJEKTTERMINE": [[23, "projekttermine"]], "11.1 Termine Projektstart - Projektende": [[23, "termine-projektstart-projektende"]], "Projektstart": [[23, "projektstart"]], "12. KOSTEN UND FINANZIERUNG": [[23, "kosten-und-finanzierung"]], "12.1 Projektkosten": [[23, "projektkosten"]], "Personalkosten": [[23, "personalkosten"]], "Sonstige Kosten": [[23, "sonstige-kosten"]], "Gesamtkosten in \u20ac": [[23, "gesamtkosten-in"]], "12.2 Wir beantragen folgende netidee-F\u00f6rderung": [[23, "wir-beantragen-folgende-netidee-forderung"]], "13.3 Die restlichen Kosten werden finanziert durch": [[23, "die-restlichen-kosten-werden-finanziert-durch"]], "13. SONDERPREIS": [[23, "sonderpreis"]], "14. ERG\u00c4NZENDE ANGABEN": [[23, "erganzende-angaben"]], "14.1 Transparenz Mehrfachantr\u00e4ge": [[23, "transparenz-mehrfachantrage"]], "14.2 Nutzung der WhatAVenture-Plattform": [[23, "nutzung-der-whataventure-plattform"]], "14.3 Das eingereichte Projekt ist Teil einer schulischen Verpflichtung (z.B. HTL Diplomarbeit)": [[23, "das-eingereichte-projekt-ist-teil-einer-schulischen-verpflichtung-z-b-htl-diplomarbeit"]], "14.4 Wie haben Sie von der netidee erfahren? (Mehrfachnennungen m\u00f6glich)": [[23, "wie-haben-sie-von-der-netidee-erfahren-mehrfachnennungen-moglich"]], "16. DATENSCHUTZ": [[23, "datenschutz"]], "Video Screenplay": [[24, "video-screenplay"]], "The Problem And Me": [[24, "the-problem-and-me"]], "Open Source Training Material": [[24, "open-source-training-material"]], "Walk-Through": [[24, "walk-through"]], "Use Case: Custom Training, Subtract Known": [[25, "use-case-custom-training-subtract-known"]], "Use Case: Calculate Minimum Training Duration": [[26, "use-case-calculate-minimum-training-duration"]], "Use Cases": [[27, "use-cases"]], "Trainer": [[27, "trainer"]], "Editor": [[27, "editor"]], "End User (Training Audience)": [[27, "end-user-training-audience"]], "Use Case: Use Training Material From Other Sites": [[28, "use-case-use-training-material-from-other-sites"]], "Use Case: Menu to Choose From": [[29, "use-case-menu-to-choose-from"]], "Use Case: Slide Show Material as Plain-Text Files": [[30, "use-case-slide-show-material-as-plain-text-files"]], "Sending A V4L Camera Device Output Over SSH": [[31, "sending-a-v4l-camera-device-output-over-ssh"]], "Capture Video To File": [[31, "capture-video-to-file"]], "Play Video From Remote System, Using SSH": [[31, "play-video-from-remote-system-using-ssh"]], "Emoji Codes (sphinxemoji)": [[32, "emoji-codes-sphinxemoji"]], "Setup": [[32, "setup"], [263, "setup"], [270, "setup"], [273, "setup"], [283, "setup"], [284, "setup"], [288, "setup"], [289, "setup"], [290, "setup"], [311, "setup"], [312, "setup"], [319, "setup"], [899, "setup"], [1135, "setup"], [1024, "setup"]], "Most Used Here In This Site": [[32, "most-used-here-in-this-site"]], "All Codes": [[32, "all-codes"]], "Recipes": [[33, "recipes"]], "isoamsa.txt: Added Mathematical Symbols: Arrows": [[34, "isoamsa-txt-added-mathematical-symbols-arrows"]], "isoamsr.txt: Added Mathematical Symbols: Relations": [[35, "isoamsr-txt-added-mathematical-symbols-relations"]], "isonum.txt: Added Mathematical Symbols: Binary Operators": [[36, "isonum-txt-added-mathematical-symbols-binary-operators"]], "Layout Test Page": [[37, "layout-test-page"]], "Admonitions": [[37, "admonitions"]], "Admonition": [[37, "admonition"]], "This is an .. admonition::": [[37, null]], "Tip": [[37, "tip"]], "Note": [[37, "note"]], "Hint": [[37, "hint"]], "Important": [[37, "important"]], "Attention": [[37, "attention"]], "Caution": [[37, "caution"]], "Error": [[37, "error"]], "Danger": [[37, "danger"]], "Sidebar": [[37, "sidebar"]], "Blech Sidebar Title Blah": [[37, null]], "Sidebar \u201cKursdaten\u201d": [[37, "sidebar-kursdaten"]], "Kursdaten": [[37, null], [1149, null], [1150, null], [1151, null], [1152, null], [1157, null], [1159, null], [1160, null], [1164, null], [1165, null], [1166, null], [1167, null], [1169, null], [1170, null], [1171, null]], "Local Content": [[37, "local-content"]], "Local Heading 1": [[37, "local-heading-1"], [37, "id3"]], "Local Heading 1.1": [[37, "local-heading-1-1"], [37, "id4"]], "Local Heading 1.2": [[37, "local-heading-1-2"], [37, "id5"]], "Local Heading 2": [[37, "local-heading-2"], [37, "id6"]], "Sidebar with Local Content": [[37, "sidebar-with-local-content"]], "Bleh Content Blah": [[37, null]], "To Do": [[37, "to-do"]], "mmlalias.txt: MathML aliases for entities from other sets": [[38, "mmlalias-txt-mathml-aliases-for-entities-from-other-sets"]], "Most used": [[38, "id1"]], "All": [[38, "id2"]], "reStructuredText Cheat Sheet": [[39, "restructuredtext-cheat-sheet"]], "Further Information": [[39, "further-information"], [136, "further-information"], [211, "further-information"], [212, "further-information"], [234, "further-information"], [326, "further-information"], [335, "further-information"], [722, "further-information"]], "Local Documents": [[39, "local-documents"]], "External Links": [[39, "external-links"]], "Section References": [[39, "section-references"]], "Section That We Refer To": [[39, "section-that-we-refer-to"]], "Another Section Contains a Link To The Referred Section Above": [[39, "another-section-contains-a-link-to-the-referred-section-above"]], "Footnotes": [[39, "footnotes"]], "Sphinxish": [[40, "sphinxish"]], "Jupyter Notebooks": [[40, "jupyter-notebooks"]], "Running Sphinx From Source": [[40, "running-sphinx-from-source"]], "Seminar on \u201cClean Code\u201d (2022-04-13)": [[41, "seminar-on-clean-code-2022-04-13"]], "Seminar Agenda and Timeline": [[41, "seminar-agenda-and-timeline"]], "Live Hacking Before (Formal) Unit Testing": [[42, "live-hacking-before-formal-unit-testing"]], "Initial Structure": [[42, "initial-structure"]], "Snippets": [[42, null], [42, null], [42, null], [42, null], [42, null], [42, null], [44, null], [44, null], [50, null], [50, null]], "User": [[42, "user"]], "UserDB": [[42, "userdb"]], "bin/userdb-write-binaryfile.cpp": [[42, "bin-userdb-write-binaryfile-cpp"]], "Extend UserDB To Write": [[42, "extend-userdb-to-write"]], "Extend UserDB To Read From File, And Iterate": [[42, "extend-userdb-to-read-from-file-and-iterate"]], "Bug: Use \u201cFaschingbauer\u201d As Last Name": [[42, "bug-use-faschingbauer-as-last-name"]], "Wrap Up: What Do We Have?": [[42, "wrap-up-what-do-we-have"]], "Clean Code: Messages From The Book": [[43, "clean-code-messages-from-the-book"]], "Survey": [[43, null], [442, null]], "Names": [[43, "names"]], "Comments": [[43, "comments"]], "Formatting": [[43, "formatting"]], "Objects and Data Structures": [[43, "objects-and-data-structures"]], "Error Handling": [[43, "error-handling"], [920, "error-handling"]], "Boundaries": [[43, "boundaries"]], "Unit Tests": [[43, "unit-tests"], [519, "unit-tests"]], "Classes": [[43, "classes"], [210, "Classes"], [295, "classes"]], "Live Hacking: Switch To googletest": [[44, "live-hacking-switch-to-googletest"]], "Git Submodule": [[44, "git-submodule"]], "Establish Tests: Demo": [[44, "establish-tests-demo"]], "Straightforward main() Conversion": [[44, "straightforward-main-conversion"]], "Fix Shortcomings": [[44, "fix-shortcomings"]], "Is Software A Craft? Software Is A Craft!": [[45, "is-software-a-craft-software-is-a-craft"]], "09:00-09:15 Introductory Words": [[45, "introductory-words"]], "09:15-10:00 Software Engineering: A Discipline? (What Have We Established?)": [[45, "software-engineering-a-discipline-what-have-we-established"]], "10:00-10:15 Coffee Break": [[45, "coffee-break"]], "10:15-11:00 Establishing \u201cThe Project\u201d (Live Hacking, Slides)": [[45, "establishing-the-project-live-hacking-slides"]], "11:00-12:00 Enter Unit Testing Frameworks": [[45, "enter-unit-testing-frameworks"]], "12:00-13:00 Lunch Break": [[45, "lunch-break"]], "13:00-14:00 Cornerstones From The \u201cClean Code\u201d Book": [[45, "cornerstones-from-the-clean-code-book"]], "14:00-14:45 Keeping Code Clean In The Small": [[45, "keeping-code-clean-in-the-small"]], "14:45-15:00 Coffee Break": [[45, "id1"]], "15:00-23:59 \u201cExtreme Programming\u201d Session": [[45, "extreme-programming-session"]], "UserDB::find() Crashes If User Not Found": [[46, "userdb-find-crashes-if-user-not-found"]], "State": [[46, "state"]], "Bugs": [[47, "bugs"], [53, "bugs"]], "Existing Files Are Overwritten": [[48, "existing-files-are-overwritten"]], "UserDB::read(): What If Done Twice?": [[49, "userdb-read-what-if-done-twice"]], "UserDB: Alternative Output Format - CSV": [[50, "userdb-alternative-output-format-csv"]], "Write CSV: Test": [[50, "write-csv-test"]], "Write CSV: Frontend Program": [[50, "write-csv-frontend-program"], [50, "id1"]], "Read CSV: Test": [[50, "read-csv-test"]], "Features": [[51, "features"]], "Search By Other Indexes": [[52, "search-by-other-indexes"]], "Backlog: What Needs To Change, Or We Will All Die": [[53, "backlog-what-needs-to-change-or-we-will-all-die"]], "Refactoring After Featuritis": [[53, "refactoring-after-featuritis"]], "BackingStore Has Too Many Responsibilities \u27f6 Interface": [[54, "backingstore-has-too-many-responsibilities-longrightarrow-interface"]], "UserDB Has Too Many Responsibilities \u27f6 BackingStore": [[55, "userdb-has-too-many-responsibilities-longrightarrow-backingstore"]], "BackingStore": [[55, "backingstore"]], "Refactoring": [[56, "refactoring"], [520, "refactoring"], [810, "refactoring"]], "Load From BackingStore in Constructor": [[57, "load-from-backingstore-in-constructor"]], "UserDB::{read,write}(): bool, Really?": [[58, "userdb-read-write-bool-really"]], "Submission: Pointless Blinking With Python, asyncio, and libgpiod (and a Raspberry Pi of Course)": [[59, "submission-pointless-blinking-with-python-asyncio-and-libgpiod-and-a-raspberry-pi-of-course"], [62, "submission-pointless-blinking-with-python-asyncio-and-libgpiod-and-a-raspberry-pi-of-course"]], "Biography": [[59, "biography"], [62, "biography"]], "Abstract": [[59, "abstract"], [62, "abstract"]], "Description": [[59, "description"], [62, "description"], [473, "description"], [625, "description"], [641, "description"], [644, "description"], [646, "description"], [647, "description"], [648, "description"], [649, "description"], [650, "description"], [651, "description"], [652, "description"], [653, "description"], [655, "description"], [656, "description"]], "Pointless Blinking With Python, asyncio, and libgpiod (and a Raspberry Pi of Course)": [[60, "pointless-blinking-with-python-asyncio-and-libgpiod-and-a-raspberry-pi-of-course"]], "Installation Notes": [[61, "installation-notes"]], "libgpiod": [[61, "libgpiod"]], "Fedora: Prepare Tarballs": [[61, "fedora-prepare-tarballs"]], "On The Pi: Build And Install": [[61, "on-the-pi-build-and-install"]], "Hochk\u00f6nig": [[64, "hochkonig"]], "K\u00f6nigsjodler (Klettersteig)": [[64, "konigsjodler-klettersteig"]], "Tour: Werfen - Ostpreussenh\u00fctte - Matrashaus - Werfen": [[64, "tour-werfen-ostpreussenhutte-matrashaus-werfen"]], "Blog": [[65, "blog"], [148, "blog"]], "Articles": [[65, "articles"]], "In the Works": [[65, "in-the-works"]], "Not Yet in the Works": [[65, "not-yet-in-the-works"]], "Revisit Existing Posts": [[65, "revisit-existing-posts"]], "pending_xref": [[66, "pending-xref"]], "C++": [[67, "c"], [110, "c"], [111, "c"], [148, "c"], [657, "c"]], "C++: Building with CMake": [[68, "c-building-with-cmake"]], "C++: Interfaces": [[69, "c-interfaces"]], "C++: OO Basics": [[70, "c-oo-basics"]], "C++: Unit Testing": [[71, "c-unit-testing"]], "Graph": [[72, "graph"], [643, "graph"], [803, "graph"], [1058, "graph"], [1059, "graph"], [1063, "graph"], [1072, "graph"], [1086, "graph"], [1093, "graph"]], "Embedded Computing 1": [[73, "embedded-computing-1"], [78, "embedded-computing-1"]], "Current Curriculum": [[73, "current-curriculum"], [74, "current-curriculum"]], "Topics": [[73, "topics"], [74, "topics"], [98, "topics"], [99, "topics"], [101, "topics"], [102, "topics"], [103, "topics"], [104, "topics"], [147, "topics"], [183, "topics"], [183, "id2"], [211, "topics"], [248, "topics"], [251, null], [339, "topics"], [343, "topics"], [440, "topics"], [568, "topics"], [605, "topics"], [611, "topics"], [615, "topics"], [623, "topics"], [628, "topics"], [633, "topics"], [657, "topics"], [658, "topics"], [662, "topics"], [669, "topics"], [676, "topics"], [687, "topics"], [700, "topics"], [701, "topics"], [711, "topics"], [716, "topics"], [748, "topics"], [752, "topics"], [754, "topics"], [756, "topics"], [914, "topics"], [932, null], [934, null], [934, null], [980, "topics"], [986, "topics"], [987, "topics"], [1007, null], [1015, "topics"], [1110, "topics"], [1120, "topics"], [1132, "topics"], [373, "topics"], [388, "topics"], [397, "topics"], [404, "topics"], [410, "topics"], [414, "topics"], [417, "topics"], [421, "topics"], [430, "topics"], [434, "topics"], [439, "topics"], [560, "topics"], [583, "topics"], [586, "topics"], [589, "topics"], [630, "topics"], [639, "topics"], [725, "topics"], [733, "topics"], [737, "topics"], [953, "topics"], [959, "topics"], [1138, "topics"]], "Dependency Graph": [[73, "dependency-graph"], [74, "dependency-graph"]], "Embedded Computing 2": [[74, "embedded-computing-2"], [78, "embedded-computing-2"]], "EX: Race Conditions": [[75, "ex-race-conditions"]], "EX: Avoiding Race Condition": [[76, "ex-avoiding-race-condition"]], "Goals": [[76, "goals"], [82, "goals"], [83, "goals"], [84, "goals"], [85, "goals"], [87, "goals"], [88, "goals"], [89, "goals"], [91, "goals"]], "Outcome": [[76, "outcome"], [82, "outcome"], [83, "outcome"], [84, "outcome"], [85, "outcome"], [190, "outcome"]], "Git Introduction": [[77, "git-introduction"]], "Embedded Computing 2019": [[78, "embedded-computing-2019"]], "Overview": [[78, "overview"], [670, "overview"], [718, "overview"], [732, "overview"], [734, "overview"], [739, "overview"], [741, "overview"], [743, "overview"], [744, "overview"], [745, "overview"], [746, "overview"], [753, "overview"], [827, "overview"], [838, "overview"], [895, "overview"], [906, "overview"], [907, "overview"], [908, "overview"], [908, "id1"], [909, "overview"], [944, "overview"]], "Knowledge Transferred": [[78, "knowledge-transferred"]], "Course Setup": [[78, "course-setup"]], "Introduction to Linux and Unix": [[80, "introduction-to-linux-and-unix"]], "Linux Hardware Device Management": [[81, "linux-hardware-device-management"]], "EX: Averaging Sensor": [[82, "ex-averaging-sensor"]], "EX: Averaging Sensor (parallel)": [[83, "ex-averaging-sensor-parallel"]], "EX: LED Temperature Display": [[84, "ex-led-temperature-display"]], "Hardware": [[84, "hardware"], [85, "hardware"]], "EX: Temperature Sensors": [[85, "ex-temperature-sensors"], [92, "ex-temperature-sensors"]], "GPIO": [[86, "gpio"]], "sysfs Interface": [[86, "sysfs-interface"]], "gpiod Interface": [[86, "gpiod-interface"]], "Multithreading": [[87, "multithreading"], [169, "multithreading"], [229, "multithreading"], [255, "multithreading"], [256, "multithreading"], [258, "multithreading"], [301, "multithreading"], [302, "multithreading"], [305, "multithreading"], [315, "multithreading"], [343, "multithreading"], [350, "multithreading"], [973, "multithreading"], [1009, "multithreading"], [733, "multithreading"]], "Avoiding Race Conditions: Semaphore/Mutex": [[88, "avoiding-race-conditions-semaphore-mutex"]], "Communication: Waiting for Something": [[89, "communication-waiting-for-something"]], "Python Basics": [[90, "python-basics"]], "EX: Averaging Sensor, Display": [[91, "ex-averaging-sensor-display"]], "Simple Web Programming": [[93, "simple-web-programming"]], "Sensors Web Pages": [[94, "sensors-web-pages"]], "Embedded Computing 2020": [[96, "embedded-computing-2020"]], "SS2022": [[97, "ss2022"]], "Block 1: Linux, and Working With Remote/Embedded Devices": [[97, "block-1-linux-and-working-with-remote-embedded-devices"], [114, "block-1-linux-and-working-with-remote-embedded-devices"]], "Block 2: C on Linux: Local and Cross Development": [[97, "block-2-c-on-linux-local-and-cross-development"], [114, "block-2-c-on-linux-local-and-cross-development"]], "Block 3: C++": [[97, "block-3-c"], [114, "block-3-c"]], "2022-03-08": [[98, "id1"]], "Homework": [[98, "homework"], [99, "homework"], [101, "homework"], [104, "homework"]], "2022-03-10": [[99, "id1"]], "2022-03-10 (Homework until 2022-03-21)": [[100, "homework-until-2022-03-21"]], "From Exercises: Create/Copy/Move/Remove": [[100, "from-trainings-material-soup-linux-basics-shell-exercises-cp-mv-mkdir-rm-group"]], "From  Exercises: The ls Command": [[100, "from-trainings-material-soup-linux-basics-shell-exercises-ls-group"]], "2022-03-21": [[101, "id1"]], "2022-03-22, 2022-03-24 (KU)": [[102, "ku"]], "2022-03-28": [[103, "id1"]], "2022-04-01": [[104, "id1"]], "SS2022: Logs": [[105, "ss2022-logs"]], "WS2022": [[106, "ws2022"]], "Plan: Evolution": [[106, "plan-evolution"]], "FH Joanneum (Embedded Computing): WS2022/2023 (Questions About Code)": [[107, "fh-joanneum-embedded-computing-ws2022-2023-questions-about-code"]], "Question 1: C++ Inheritance": [[107, "question-1-c-inheritance"]], "Question 2: C++ Inheritance": [[107, "question-2-c-inheritance"]], "Question 3: Memory Leak": [[107, "question-3-memory-leak"]], "Question 4: std::vector": [[107, "question-4-std-vector"]], "FH Joanneum (Embedded Computing): WS2022/2023 (Yes/No Questions)": [[108, "fh-joanneum-embedded-computing-ws2022-2023-yes-no-questions"]], "Cross Development": [[108, "cross-development"], [267, "cross-development"], [979, "cross-development"], [980, "cross-development"]], "C++, OO": [[108, "c-oo"]], "Lab Exam 2023-01-17": [[109, "lab-exam-2023-01-17"]], "Project Setup": [[109, "project-setup"], [518, "project-setup"], [1087, "project-setup"]], "Exercises": [[109, "exercises"], [166, "exercises"], [171, "exercises"], [203, "exercises"], [213, "exercises"], [213, "id1"], [213, "id3"], [271, "Exercises"], [276, "exercises"], [295, "exercises"], [295, "id1"], [298, "exercises"], [302, "exercises"], [471, "exercises"], [473, "exercises"], [480, "exercises"], [508, "exercises"], [525, "exercises"], [527, "exercises"], [568, "exercises"], [633, "exercises"], [657, "exercises"], [752, "exercises"], [986, "exercises"], [1015, "exercises"], [1059, "exercises"], [583, "exercises"]], "Exam Submission": [[109, "exam-submission"]], "SS2023: Exam 2023-06-30 (Handout)": [[110, "ss2023-exam-2023-06-30-handout"]], "UNIX/Linux Concepts": [[110, "unix-linux-concepts"], [111, "unix-linux-concepts"]], "Toolchain": [[110, "toolchain"], [111, "toolchain"]], "SS2023: Exam 2023-06-30 (Solved)": [[111, "ss2023-exam-2023-06-30-solved"]], "Working with Git In Our FH-ECE21 Project": [[112, "working-with-git-in-our-fh-ece21-project"]], "Forks And Pull Requests": [[112, "forks-and-pull-requests"]], "Multiple Pull Requests: Pulling Upstream Changes (\u201cSyncing\u201d A Fork)": [[112, "multiple-pull-requests-pulling-upstream-changes-syncing-a-fork"]], "Creating A Remote for Upstream (Done Only Once)": [[112, "creating-a-remote-for-upstream-done-only-once"]], "Updating The Fork (\u201cSyncing\u201d It From Its Upstream)": [[112, "updating-the-fork-syncing-it-from-its-upstream"]], "Fetch upstream Into Your Clone": [[112, "fetch-upstream-into-your-clone"]], "Merge upstream/main Into Local main": [[112, "merge-upstream-main-into-local-main"]], "Push Into Fork On Github": [[112, "push-into-fork-on-github"]], "Embedded Computing 2021": [[113, "embedded-computing-2021"]], "SS2023": [[114, "ss2023"]], "Finish: Written Exam": [[114, "finish-written-exam"]], "Embedded Computing (FH Joanneum Graz)": [[132, "embedded-computing-fh-joanneum-graz"]], "Git Notes": [[133, "git-notes"]], "Bring Local Branch Upstream": [[133, "bring-local-branch-upstream"]], "Create Remote Tracking Branch": [[133, "create-remote-tracking-branch"]], "Create, Submit, Apply Patches": [[133, "create-submit-apply-patches"]], "Packaging this Site on PyPI": [[135, "packaging-this-site-on-pypi"]], "Audio Chip Bringup": [[136, "audio-chip-bringup"]], "Goal": [[136, "goal"], [138, "goal"], [139, "goal"], [141, "goal"], [276, "goal"], [278, "goal"], [1153, "goal"], [1156, "goal"]], "Findings": [[136, "findings"]], "Get Debian 10 Kernel Config": [[137, "get-debian-10-kernel-config"]], "Run Debian within Qemu": [[137, "run-debian-within-qemu"]], "Extract Kernel Config from /boot": [[137, "extract-kernel-config-from-boot"]], "Finish: Debian Kernel Package etc.": [[138, "finish-debian-kernel-package-etc"]], "Yocto Kernel Bringup on Customer Hardware": [[139, "yocto-kernel-bringup-on-customer-hardware"]], "Open Questions: Everything Works Like Before?": [[139, "open-questions-everything-works-like-before"]], "I2S Audio for a Kontron SMARC Module": [[140, "i2s-audio-for-a-kontron-smarc-module"]], "Dirty Upgrade Path": [[141, "dirty-upgrade-path"]], "Steps": [[141, "steps"]], "Wait for Customer Hardware": [[142, "wait-for-customer-hardware"]], "Extract Kernel from Intel Yocto BSP": [[143, "extract-kernel-from-intel-yocto-bsp"]], "Python Training Improvements": [[144, "python-training-improvements"]], "Beginner Course": [[144, "beginner-course"]], "Exercise Structure": [[144, "exercise-structure"]], "Split Exercises": [[144, "split-exercises"]], "Creating Screencasts": [[145, "creating-screencasts"]], "OpenShot": [[145, "openshot"]], "SEO": [[146, "seo"]], "Sitemap": [[146, "sitemap"]], "Meta Information": [[146, "meta-information"]], "Courses": [[146, "courses"]], "Stacks (Hanging)": [[147, "stacks-hanging"]], "DBus (New Topic)": [[147, "dbus-new-topic"]], "Finish Meta/SEO and Stuff": [[147, "finish-meta-seo-and-stuff"]], "Structure": [[148, "structure"], [503, "structure"], [131, "structure"]], "Miscellaneous To Do": [[148, "miscellaneous-to-do"]], "Extensions": [[148, "extensions"]], "reST Todos": [[148, "rest-todos"]], "Styling": [[148, "styling"]], "Convert to RST/S5": [[148, "convert-to-rst-s5"]], "Examples": [[148, "examples"], [464, "examples"], [664, "examples"], [712, "examples"], [826, "examples"], [928, null]], "Convert Existing Content": [[148, "convert-existing-content"]], "Add Missing": [[148, "add-missing"]], "References, Past Trainings": [[148, "references-past-trainings"]], "About": [[148, "about"]], "Learning The Web": [[149, "learning-the-web"]], "Beagleboard: How to Repair NAND (also known as 40W)": [[150, "beagleboard-how-to-repair-nand-also-known-as-40w"]], "Basics": [[150, "basics"], [221, "basics"], [248, "basics"], [263, "basics"], [283, "basics"], [284, "basics"], [284, "id1"], [289, "basics"], [290, "basics"], [290, "id1"], [311, "basics"], [319, "basics"], [330, "Basics"], [398, "basics"], [584, "basics"], [596, "basics"], [616, "basics"], [714, "basics"], [828, "basics"], [944, "basics"], [1052, "basics"]], "Getting X-Loader and U-Boot": [[150, "getting-x-loader-and-u-boot"]], "Creating a Bootable MMC/SD card": [[150, "creating-a-bootable-mmc-sd-card"]], "Repairing the NAND": [[150, "repairing-the-nand"]], "Writing X-Loader to NAND": [[150, "writing-x-loader-to-nand"]], "Writing U-Boot to NAND": [[150, "writing-u-boot-to-nand"]], "Porting to Linux (There\u2019s Always A Better Way)": [[151, "porting-to-linux-there-s-always-a-better-way"]], "Processes are Threads": [[151, "processes-are-threads"]], "Signals Aren\u2019t Messages": [[151, "signals-aren-t-messages"]], "References": [[151, null], [151, null], [151, null], [223, "References"], [226, "References"], [575, "references"]], "Message Queues aren\u2019t Message Queues": [[151, "message-queues-aren-t-message-queues"]], "Semaphores and Mutexes": [[151, "semaphores-and-mutexes"]], "Timers": [[151, "timers"]], "Polling": [[151, "polling"]], "Event Dispatching": [[151, "event-dispatching"]], "Interrupts": [[151, "interrupts"], [785, "interrupts"]], "Realtime": [[151, "realtime"], [962, "realtime"], [1148, "realtime"]], "Saving Solid State Disk Life (Gentoo)": [[152, "saving-solid-state-disk-life-gentoo"]], "Rant": [[152, "rant"], [172, "Rant"], [978, null]], "No Swap": [[152, "no-swap"]], "tmpfs instances here and there": [[152, "tmpfs-instances-here-and-there"]], "Syslog, /var/log/messages": [[152, "syslog-var-log-messages"]], "Mountpoint for messages": [[152, "mountpoint-for-messages"]], "Logrotate": [[152, "logrotate"]], "Kernel I/O Scheduler": [[152, "kernel-i-o-scheduler"]], "Use RAM for the Kernel Build": [[152, "use-ram-for-the-kernel-build"]], "Things that are left": [[152, "things-that-are-left"]], "\u201cWhy ps Sucks\u201d or \u201cCounting Memory Consumption\u201d": [[153, "why-ps-sucks-or-counting-memory-consumption"]], "Process Stack Management": [[153, "process-stack-management"]], "Conclusion": [[153, "conclusion"], [153, "id1"], [899, "conclusion"], [907, "conclusion"]], "Thread (pthread) Stack Management": [[153, "thread-pthread-stack-management"]], "Experiment #1: 100 default threads, eating no stack": [[153, "experiment-1-100-default-threads-eating-no-stack"]], "Experiment #2: 100 default threads, eating up stack": [[153, "experiment-2-100-default-threads-eating-up-stack"]], "Experiment #3: 100 threads with limited stack": [[153, "experiment-3-100-threads-with-limited-stack"]], "Experiment #4: more threads than my system could take (eat no stack)": [[153, "experiment-4-more-threads-than-my-system-could-take-eat-no-stack"]], "Experiment #5: more threads than my system could take (eat stack)": [[153, "experiment-5-more-threads-than-my-system-could-take-eat-stack"]], "How does this work?": [[153, "how-does-this-work"]], "Realtime is different": [[153, "realtime-is-different"]], "Patching and Building the Fedora Kernel": [[154, "patching-and-building-the-fedora-kernel"]], "Why?": [[154, "why"], [915, "why"], [997, "why"]], "Find Kernel Source (Git), Fix It, and Create Patch": [[154, "find-kernel-source-git-fix-it-and-create-patch"]], "Link": [[154, null], [154, null]], "Prepare the RPM Build": [[154, "prepare-the-rpm-build"]], "Install Prerequisites": [[154, "install-prerequisites"]], "Setup rpmbuild Directory": [[154, "setup-rpmbuild-directory"]], "Download and Install Source RPM For Crashing Kernel": [[154, "download-and-install-source-rpm-for-crashing-kernel"]], "Apply the Patch": [[154, "apply-the-patch"]], "Build the Kernel RPMs": [[154, "build-the-kernel-rpms"]], "Install Kernel": [[154, "install-kernel"]], "Adding a Custom Domain to a Github Pages Project Site": [[155, "adding-a-custom-domain-to-a-github-pages-project-site"]], "Configure a Subdomain, www.faschingbauer.me": [[155, "configure-a-subdomain-www-faschingbauer-me"]], "Configure an Apex Domain, faschingbauer.me": [[155, "configure-an-apex-domain-faschingbauer-me"]], "Using Microsoft Teams on Linux": [[156, "using-microsoft-teams-on-linux"]], "Screen Sharing: X11 Revival": [[156, "screen-sharing-x11-revival"]], "RPM Package (Meh!)": [[156, "rpm-package-meh"]], "Updated on 2020-04-09": [[156, null]], "Annoyance #1: Keeps Running in Background": [[156, "annoyance-1-keeps-running-in-background"]], "Annoyance #2: (Re)Registers Itself For Autostart": [[156, "annoyance-2-re-registers-itself-for-autostart"]], "Run In Browser (My Recommendation)": [[156, "run-in-browser-my-recommendation"]], "Deploying Sphinx Generated Documentation to Github Pages": [[157, "deploying-sphinx-generated-documentation-to-github-pages"]], "Create \u201cSite Publication Repo\u201d": [[157, "create-site-publication-repo"]], "Configure Github Pages for jfasch-home-pages": [[157, "configure-github-pages-for-jfasch-home-pages"]], "Time for Deployment": [[157, "time-for-deployment"]], "Using BigBlueButton for Online Training": [[158, "using-bigbluebutton-for-online-training"]], "In this Article": [[158, null], [159, null], [161, null]], "TL;DR": [[158, "tl-dr"]], "Background Information": [[158, "background-information"]], "Hosting Setup": [[158, "hosting-setup"]], "BigBlueButton Installation": [[158, "bigbluebutton-installation"]], "Functionality Check": [[158, "functionality-check"]], "What Else?": [[158, "what-else"], [902, "what-else"], [915, "what-else"]], "Traunstein via Zierlersteig": [[159, "traunstein-via-zierlersteig"]], "Kaltenbachwildnis": [[159, "kaltenbachwildnis"]], "Anstieg auf den Zierlerberg": [[159, "anstieg-auf-den-zierlerberg"]], "Die Rinne": [[159, "die-rinne"]], "Abstieg": [[159, "abstieg"]], "Grintovec (via Plan\u0161arsko Jezero, \u010ce\u0161ka Ko\u010da)": [[160, "grintovec-via-plansarsko-jezero-ceska-koca"]], "Anreise": [[160, "anreise"]], "\u010ce\u0161ka Ko\u010da": [[160, "ceska-koca"]], "Hinauf": [[160, "hinauf"]], "Runter": [[160, "runter"]], "Zusammenfassung": [[160, "zusammenfassung"]], "How to Brick a \u20ac1399 Dell XPS 13": [[161, "how-to-brick-a-1399-dell-xps-13"]], "What Happened?": [[161, "what-happened"]], "VirtualBox, Fedora, and Secure Boot": [[161, "virtualbox-fedora-and-secure-boot"]], "Enrolling Machine Owner Key (MOK)": [[161, "enrolling-machine-owner-key-mok"]], "Generate Key Pair": [[161, "generate-key-pair"]], "Stage Key for Enrollment": [[161, "stage-key-for-enrollment"]], "Reboot, Brick": [[161, "reboot-brick"]], "Diagnostics": [[161, "diagnostics"]], "Building A Cross Toolchain For The Raspberry Pi, Using crosstool-ng": [[162, "building-a-cross-toolchain-for-the-raspberry-pi-using-crosstool-ng"], [989, "building-a-cross-toolchain-for-the-raspberry-pi-using-crosstool-ng"]], "Why This Article? Why Not Use A Prebuilt Toolchain?": [[162, "why-this-article-why-not-use-a-prebuilt-toolchain"]], "Installing crosstool-ng": [[162, "installing-crosstool-ng"]], "Prerequisites": [[162, "prerequisites"], [1055, "prerequisites"]], "Installing From Cloned Git Repository": [[162, "installing-from-cloned-git-repository"]], "Installing From Release Tarball": [[162, "installing-from-release-tarball"]], "PATH, And Basic Test": [[162, "path-and-basic-test"]], "Configure Toolchain Build": [[162, "configure-toolchain-build"]], "Base Configuration For The Raspberry": [[162, "base-configuration-for-the-raspberry"]], "Important: glibc Version": [[162, "important-glibc-version"]], "The Error": [[162, "the-error"], [162, "id4"]], "The Fix": [[162, "the-fix"], [162, "id5"]], "Important: GCC Version": [[162, "important-gcc-version"]], "Toolchain Build/Install": [[162, "toolchain-build-install"]], "Test": [[162, "test"], [782, "test"]], "Simplest: C, <stdio.h>": [[162, "simplest-c-stdio-h"]], "C++, <iostream>": [[162, "c-iostream"]], "C++, <thread>": [[162, "c-thread"]], "Packaging/Distributing The Toolchain": [[162, "packaging-distributing-the-toolchain"]], "Afterword": [[162, "afterword"]], "Posts": [[163, "posts"]], "Linux und Open Source": [[164, "linux-und-open-source"]], "Schulung": [[164, "schulung"]], "Entwicklung": [[164, "entwicklung"]], "Beratung": [[164, "beratung"]], "Richtlinien zur Ver\u00f6ffentlichung von Kursmaterial": [[165, "richtlinien-zur-veroffentlichung-von-kursmaterial"]], "Installing Git": [[166, "installing-git"]], "Windows": [[166, "windows"]], "Workflow": [[166, "workflow"]], "Cloning the Repository": [[166, "cloning-the-repository"]], "Exercise Time": [[166, "exercise-time"]], "Conflicts": [[166, "conflicts"]], "Trainer\u2019s Notes": [[166, "trainer-s-notes"]], "Courses: Overview": [[167, "courses-overview"]], "Online Trainings": [[167, null]], "Individual Trainings": [[167, null]], "Everything About Linux": [[167, "everything-about-linux"]], "Programming Languages": [[167, "programming-languages"]], "Miscellaneous but Related": [[167, "miscellaneous-but-related"]], "Qualivision, Z\u00fcrich, 1.10.2013": [[168, "qualivision-zurich-1-10-2013"]], "Fragen und Antworten": [[168, "fragen-und-antworten"]], "Kursnotizen: Linux Embedded 2015-11-30": [[169, "kursnotizen-linux-embedded-2015-11-30"]], "GPIOs in Userspace": [[169, "gpios-in-userspace"]], "CAN Bus": [[169, "can-bus"], [190, "can-bus"]], "Driver Beispiele": [[169, "driver-beispiele"]], "Heizungssteuerung": [[169, "heizungssteuerung"]], "Live Hacking": [[170, "Live-Hacking"], [600, "live-hacking"], [601, "live-hacking"], [603, "live-hacking"], [604, "live-hacking"], [607, "live-hacking"], [608, "live-hacking"], [609, "live-hacking"], [621, "live-hacking"]], "Strings k\u00f6nnen viel: split()": [[170, "Strings-k\u00f6nnen-viel:-split()"]], "Mutability, Immutability: kann man nicht oft genug wiederholen": [[170, "Mutability,-Immutability:-kann-man-nicht-oft-genug-wiederholen"]], "Dictionaries": [[170, "Dictionaries"], [199, "Dictionaries"], [271, "Dictionaries"], [285, "Dictionaries"], [330, "Dictionaries"], [1048, "dictionaries"]], "\u201cHartes\u201d Indizieren \u2026": [[170, "\u201cHartes\u201d-Indizieren-\u2026"]], "\u201cWeiches\u201d Nettfragen \u2026": [[170, "\u201cWeiches\u201d-Nettfragen-\u2026"]], "Shortcuts": [[170, "Shortcuts"]], "Objektorientierte Programmierung": [[170, "Objektorientierte-Programmierung"]], "Inheritance": [[170, "Inheritance"], [210, "Inheritance"], [1016, "inheritance"]], "Date and Time and Time Deltas - datetime": [[170, "Date-and-Time-and-Time-Deltas---datetime"]], "Bissl potschert zum Schreiben is scho \u2026 (andere Formen von import)": [[170, "Bissl-potschert-zum-Schreiben-is-scho-\u2026-(andere-Formen-von-import)"]], "String Representations: __str__()": [[170, "String-Representations:-__str__()"]], "subprocess": [[170, "subprocess"], [249, "subprocess"]], "enumerate(), zip()": [[170, "enumerate(),-zip()"]], "List Comprehension": [[170, "List-Comprehension"], [194, "List-Comprehension"], [233, "List-Comprehension"], [303, "List-Comprehension"], [313, "List-Comprehension"], [1002, "list-comprehension"], [1047, "list-comprehension"]], "exec(), eval()": [[170, "exec(),-eval()"]], "Umgebender Context": [[170, "Umgebender-Context"]], "Eigener Context": [[170, "Eigener-Context"]], "json": [[170, "json"], [246, "json"]], "Project": [[171, "project"], [131, "project"], [131, "id3"], [131, "id5"], [131, "id7"], [131, "id9"], [131, "id11"], [131, "id13"]], "Python Individualtraining (5 Tage, beginnend 28.10.2019)": [[171, "python-individualtraining-5-tage-beginnend-28-10-2019"], [353, "python-individualtraining-5-tage-beginnend-28-10-2019"]], "Inhalt": [[171, null], [174, null], [973, null], [1150, "inhalt"]], "Slide 51, \u201cExercises: Basics\u201d": [[171, "slide-51-exercises-basics"]], "Slide 58, \u201cExercises: While Loop\u201d": [[171, "slide-58-exercises-while-loop"]], "Slide 94, \u201cExercises: Lists, Loops, Functions\u201d": [[171, "slide-94-exercises-lists-loops-functions"]], "Slide 121, \u201cExercises: Strings\u201d": [[171, "slide-121-exercises-strings"]], "Famous Generator Introduction": [[171, "famous-generator-introduction"]], "eval(): Convert a String into a Python Data Structure": [[171, "eval-convert-a-string-into-a-python-data-structure"]], "Operator Overloading": [[171, "operator-overloading"], [229, "operator-overloading"], [239, "Operator-Overloading"], [260, "operator-overloading"], [295, "operator-overloading"], [538, "operator-overloading"], [564, "operator-overloading"], [578, "operator-overloading"], [1019, "operator-overloading"]], "Getters and Setters": [[171, "getters-and-setters"]], "More on Listcomprehensions and Generator Expressions": [[171, "more-on-listcomprehensions-and-generator-expressions"]], "More on Local and Global Scope and Global Variables": [[171, "more-on-local-and-global-scope-and-global-variables"]], "Closures: Between Local and Global": [[171, "closures-between-local-and-global"]], "Goals of this Training": [[172, "Goals-of-this-Training"]], "Exercise": [[172, "Exercise"], [213, "exercise"], [255, "exercise"], [255, "id1"], [256, "exercise"], [258, "exercise"], [267, "exercise"], [276, "exercise"], [298, "exercise"], [335, "exercise"], [341, "exercise"], [460, "exercise"], [461, "exercise"], [462, "exercise"], [464, "exercise"], [465, "exercise"], [468, "exercise"], [469, "exercise"], [654, "exercise"]], "Walkthrough: Reduce Image to Eight Colors": [[172, "Walkthrough:-Reduce-Image-to-Eight-Colors"]], "Load Image from File: PIL": [[172, "Load-Image-from-File:-PIL"]], "Image as NumPy Array": [[172, "Image-as-NumPy-Array"]], "Preparation before Clustering": [[172, "Preparation-before-Clustering"]], "Excursion: matplotlib": [[172, "Excursion:-matplotlib"]], "Now Comes the Clustering": [[172, "Now-Comes-the-Clustering"]], "Let KMeans find eight clusters \u2026": [[172, "Let-KMeans-find-eight-clusters-\u2026"]], "Use the result: output-properties": [[172, "Use-the-result:-output-properties"]], "Clusters be their Centers": [[172, "Clusters-be-their-Centers"]], "Post Processing: Restore Alpha, Back into RGBA": [[172, "Post-Processing:-Restore-Alpha,-Back-into-RGBA"]], "Random Live Hacking": [[173, "Random-Live-Hacking"]], "Data Types": [[173, "Data-Types"], [303, "Data-Types"]], "Mutable, Immutable": [[173, "Mutable,-Immutable"]], "Exception, demonstrated using dict access": [[173, "Exception,-demonstrated-using-dict-access"]], "Indices and Slicing": [[173, "Indices-and-Slicing"]], "for loops": [[173, "for-loops"]], "Iterator protocol": [[173, "Iterator-protocol"], [236, "Iterator-protocol"]], "Python (12.11.2019 - 14.11.2019 in Graz)": [[174, "python-12-11-2019-14-11-2019-in-graz"]], "Material": [[174, null], [176, null], [334, null]], "Standardthemen": [[174, "standardthemen"]], "Das Hauptthema: Numerik, NumPy": [[174, "das-hauptthema-numerik-numpy"]], "Lesen von .mat Files": [[174, "lesen-von-mat-files"]], "L\u00f6sen einer Uni-\u00dcbung": [[174, "losen-einer-uni-ubung"]], "Proposal": [[175, "proposal"]], "Signals": [[175, "signals"]], "Posix IPC (and Virtual Memory)": [[175, "posix-ipc-and-virtual-memory"]], "Unix Domain Sockets": [[175, "unix-domain-sockets"]], "Application in your Company": [[175, "application-in-your-company"]], "Further Thoughts": [[175, "further-thoughts"]], "IPC in Linux (10.1.2020 in Graz)": [[176, "ipc-in-linux-10-1-2020-in-graz"]], "\u00dcbung: handgestrickter String, um die Fallen von C++ lustvoll zu erleiden": [[177, "ubung-handgestrickter-string-um-die-fallen-von-c-lustvoll-zu-erleiden"]], "C++ f\u00fcr Embedded C Programmierer (30.3.2020 - 3.4.2020 Baden W\u00fcrttemberg)": [[178, "c-fur-embedded-c-programmierer-30-3-2020-3-4-2020-baden-wurttemberg"]], "Kursinformation": [[178, null]], "Kursaufbau": [[178, "kursaufbau"]], "Kursverlauf": [[178, "kursverlauf"], [186, "kursverlauf"]], "Tag 3": [[178, "tag-3"], [197, "tag-3"], [208, "tag-3"], [230, "tag-3"], [242, "tag-3"]], "Tag 4": [[178, "tag-4"], [208, "tag-4"], [230, "tag-4"], [242, "tag-4"]], "Tag 5": [[178, "tag-5"]], "Installing googletest By Hand": [[179, "installing-googletest-by-hand"]], "Clone googletest Repo": [[179, "clone-googletest-repo"]], "Create Build Directory": [[179, "create-build-directory"], [180, "create-build-directory"], [517, "create-build-directory"]], "CMake, Build and Install": [[179, "cmake-build-and-install"]], "Build Packages to Use Our Private googletest Install": [[179, "build-packages-to-use-our-private-googletest-install"]], "Software Setup, Build": [[180, "software-setup-build"]], "Getting the Source": [[180, "getting-the-source"]], "Install Prerequisites and Dependencies": [[180, "install-prerequisites-and-dependencies"]], "Generate Makefile Build from CMake Sources": [[180, "generate-makefile-build-from-cmake-sources"]], "Argh: Using This Site With Visual Studio Code": [[181, "argh-using-this-site-with-visual-studio-code"]], "Flatpak": [[181, "flatpak"]], "Issues": [[181, "issues"]], "RPM From M$": [[181, "rpm-from-m"]], "Code": [[182, "code"], [185, "code"]], "Python Grundlagen (13.5.2020 - 14.5.2020 bei einer Firma in Graz)": [[183, "python-grundlagen-13-5-2020-14-5-2020-bei-einer-firma-in-graz"]], "Information": [[183, null], [186, null]], "Environment": [[183, "environment"], [834, "environment"]], "Unit Testing and Test Driven Development": [[183, "unit-testing-and-test-driven-development"]], "Python Installation": [[183, "python-installation"], [1024, "python-installation"]], "Programming Environment": [[183, "programming-environment"], [267, "programming-environment"], [1024, "programming-environment"]], "Day 1: Language Basics": [[183, "day-1-language-basics"]], "Day 2: Advanced Topics": [[183, "day-2-advanced-topics"]], "Wrap-Up": [[183, "wrap-up"]], "How Was It?": [[183, "how-was-it"]], "Python Schulung 18. und 19.5.2020": [[184, "Python-Schulung-18.-und-19.5.2020"]], "Das sys Modul": [[184, "Das-sys-Modul"]], "Multiline Strings und Docstrings": [[184, "Multiline-Strings-und-Docstrings"]], "Datentypen (Ausflug)": [[184, "Datentypen-(Ausflug)"]], "Variablen und deren Unterbau": [[184, "Variablen-und-deren-Unterbau"]], "Ausflug \u201cPythonic\u201d: Zuweisung mit Hilfe von \u201cTuple Unpacking\u201d": [[184, "Ausflug-\u201cPythonic\u201d:-Zuweisung-mit-Hilfe-von-\u201cTuple-Unpacking\u201d"]], "Mutability am Beispiel list": [[184, "Mutability-am-Beispiel-list"]], "Integers haben unendliche Breite": [[184, "Integers-haben-unendliche-Breite"]], "Division und Floor Division": [[184, "Division-und-Floor-Division"]], "Konvertierung durch Konstruktoren": [[184, "Konvertierung-durch-Konstruktoren"]], "Welchen Typ haben Typen?": [[184, "Welchen-Typ-haben-Typen?"]], "list und Mutability": [[184, "list-und-Mutability"]], "Tuple und Immutability": [[184, "Tuple-und-Immutability"]], "Besseres Laufzeitverhalten durch Geeignetere Datenstrukturen": [[184, "Besseres-Laufzeitverhalten-durch-Geeignetere-Datenstrukturen"]], "Boolean: Short Circuit Evaluation": [[184, "Boolean:-Short-Circuit-Evaluation"]], "while Loops, und warum sie nicht Pythonic sind": [[184, "while-Loops,-und-warum-sie-nicht-Pythonic-sind"]], "Mehr \u00fcber range(): Iterator Protocol (Folie 161)": [[184, "Mehr-\u00fcber-range():-Iterator-Protocol-(Folie-161)"]], "Mutability, Shallow und Deep Copy": [[184, "Mutability,-Shallow-und-Deep-Copy"]], "Shallow Copy mit dem Slice-Operator": [[184, "Shallow-Copy-mit-dem-Slice-Operator"]], "Deep Copy (copy.deepcopy())": [[184, "Deep-Copy-(copy.deepcopy())"]], "Funktionen": [[184, "Funktionen"]], "Funktionen sind \u201cFirst Class Objects\u201d": [[184, "Funktionen-sind-\u201cFirst-Class-Objects\u201d"]], "Gotcha: Mutable Default Parameters (Folie 90 ff.)": [[184, "Gotcha:-Mutable-Default-Parameters-(Folie-90-ff.)"]], "Globale und lokale Variablen (Folie 92)": [[184, "Globale-und-lokale-Variablen-(Folie-92)"]], "Exercise: uniq() (Folie 94, Punkt 2)": [[184, "Exercise:-uniq()-(Folie-94,-Punkt-2)"]], "Zusammengefasst: hier eine \u201csch\u00f6nere\u201d L\u00f6sung": [[184, "Zusammengefasst:-hier-eine-\u201csch\u00f6nere\u201d-L\u00f6sung"]], "Funktionen als Parameter": [[184, "Funktionen-als-Parameter"]], "List Comprensions (Folie 125)": [[184, "List-Comprensions-(Folie-125)"]], "Generator Expressions: Lesbarkeit und Performance": [[184, "Generator-Expressions:-Lesbarkeit-und-Performance"]], "Code Review": [[184, "Code-Review"]], "pprint() ist praktisch f\u00fcr Debug-Output": [[184, "pprint()-ist-praktisch-f\u00fcr-Debug-Output"]], "Straightforward Datentransformation": [[184, "Straightforward-Datentransformation"]], "Ausflug: More on Dictionaries (Folie 127ff.)": [[184, "Ausflug:-More-on-Dictionaries-(Folie-127ff.)"]], "Now for something completely different: collections.namedtuple": [[184, "Now-for-something-completely-different:-collections.namedtuple"]], "Mehr zur Parameter\u00fcbergabe: variabel lange Argumentlisten": [[184, "Mehr-zur-Parameter\u00fcbergabe:-variabel-lange-Argumentlisten"]], "OO: eine erste Klasse": [[184, "OO:-eine-erste-Klasse"]], "Python Individualtraining (18.5.2020 - 19.5.2020)": [[186, "python-individualtraining-18-5-2020-19-5-2020"], [353, "python-individualtraining-18-5-2020-19-5-2020"]], "Weiterf\u00fchrende Links": [[186, "weiterfuhrende-links"]], "Python Advanced (7.9.2020 - 10.9.2020)": [[187, "python-advanced-7-9-2020-10-9-2020"], [353, "python-advanced-7-9-2020-10-9-2020"]], "Preparation": [[187, "preparation"], [188, "preparation"], [190, "preparation"], [191, "preparation"], [192, "preparation"], [193, "preparation"], [580, "preparation"]], "Workspace Setup": [[187, "workspace-setup"], [188, "workspace-setup"], [190, "workspace-setup"], [192, "workspace-setup"]], "Github for Exercises": [[187, "github-for-exercises"], [188, "github-for-exercises"]], "Agenda": [[187, "agenda"], [188, "agenda"], [190, "agenda"], [191, "agenda"], [192, "agenda"], [193, "agenda"], [198, "agenda"], [202, "agenda"], [203, "agenda"], [240, "agenda"], [245, "agenda"], [257, "agenda"], [266, "agenda"], [287, "agenda"], [295, "agenda"], [1155, "agenda"]], "Advanced Core Python Topics": [[187, "advanced-core-python-topics"]], "Special Topics": [[187, "special-topics"]], "Day 1": [[187, "day-1"], [188, "day-1"], [190, "day-1"], [191, "day-1"], [192, "day-1"], [202, "day-1"], [203, "day-1"], [212, "day-1"], [213, "day-1"], [218, "day-1"], [221, "day-1"], [224, "day-1"], [227, "day-1"], [234, "day-1"], [276, "day-1"], [277, "day-1"], [278, "day-1"], [284, "day-1"], [288, "day-1"], [290, "day-1"], [295, "day-1"], [302, "day-1"]], "Day 2": [[187, "day-2"], [188, "day-2"], [190, "day-2"], [191, "day-2"], [192, "day-2"], [202, "day-2"], [203, "day-2"], [212, "day-2"], [213, "day-2"], [218, "day-2"], [221, "day-2"], [223, "Day-2"], [224, "day-2"], [227, "day-2"], [234, "day-2"], [267, "day-2"], [276, "day-2"], [278, "day-2"], [284, "day-2"], [288, "day-2"], [295, "day-2"], [302, "day-2"]], "Day 3": [[187, "day-3"], [188, "day-3"], [190, "day-3"], [191, "day-3"], [192, "day-3"], [202, "day-3"], [203, "day-3"], [212, "day-3"], [213, "day-3"], [218, "day-3"], [223, "Day-3"], [224, "day-3"], [227, "day-3"], [234, "day-3"], [267, "day-3"], [270, "day-3"], [276, "day-3"], [278, "day-3"], [284, "day-3"], [288, "day-3"], [290, "day-3"], [302, "day-3"]], "Day 4": [[187, "day-4"], [190, "day-4"], [202, "day-4"], [203, "day-4"], [212, "day-4"], [213, "day-4"], [267, "day-4"]], "Recommended Tutorials": [[187, "recommended-tutorials"]], "After Work Party": [[187, "after-work-party"], [218, "after-work-party"]], "Python Basics (28.9.2020 - 30.9.2020)": [[188, "python-basics-28-9-2020-30-9-2020"], [353, "python-basics-28-9-2020-30-9-2020"]], "Iterables": [[189, "Iterables"]], "set constructor": [[189, "set-constructor"]], "Fast vs.\u00a0Simple": [[189, "Fast-vs.\u00a0Simple"]], "for, Iterables, range and Generators": [[189, "for,-Iterables,-range-and-Generators"]], "Tuples, Tuple Unpacking, Returning Multiple Values from Functions": [[189, "Tuples,-Tuple-Unpacking,-Returning-Multiple-Values-from-Functions"]], "Object Oriented Programming": [[189, "Object-Oriented-Programming"], [239, "Object-Oriented-Programming"], [252, "Object-Oriented-Programming"], [263, "object-oriented-programming"], [277, "object-oriented-programming"], [279, "object-oriented-programming"], [280, "object-oriented-programming"], [283, "object-oriented-programming"], [284, "object-oriented-programming"], [289, "object-oriented-programming"], [295, "object-oriented-programming"], [298, "object-oriented-programming"], [301, "object-oriented-programming"], [302, "object-oriented-programming"], [305, "object-oriented-programming"], [311, "object-oriented-programming"], [319, "object-oriented-programming"], [442, "object-oriented-programming"], [1015, "object-oriented-programming"]], "datetime": [[189, "datetime"], [216, "datetime"], [271, "datetime"]], "Python Basic and Advanced (19.10.2020 - 22.10.2020)": [[190, "python-basic-and-advanced-19-10-2020-22-10-2020"]], "Additional Topics, brought in by Thomas": [[190, "additional-topics-brought-in-by-thomas"]], "Notebook": [[190, "notebook"], [211, "notebook"], [226, "Notebook"], [335, "notebook"]], "Tutorials": [[190, "tutorials"], [218, "tutorials"]], "Linux on Raspberry Pi": [[191, "linux-on-raspberry-pi"]], "Cloud Machine": [[191, "cloud-machine"]], "Raspberry on Participant\u2019s Desks": [[191, "raspberry-on-participant-s-desks"]], "Basic security": [[191, "basic-security"]], "Interlude: SD Card Setup (No Bloody Disk Imager)": [[191, "interlude-sd-card-setup-no-bloody-disk-imager"]], "GPIO, using sysfs interface": [[191, "gpio-using-sysfs-interface"]], "In the Wild: Watchdog": [[191, "in-the-wild-watchdog"]], "TODO": [[191, "todo"], [322, "todo"], [323, "todo"], [324, "todo"], [1115, "todo"]], "Support Material": [[191, "support-material"]], "Python Basics (23.11.2020 - 25.11.2020)": [[192, "python-basics-23-11-2020-25-11-2020"], [353, "python-basics-23-11-2020-25-11-2020"]], "Exercise: JSON": [[192, "exercise-json"]], "Linux Basics (30.11.2020 - 3.12.2020)": [[193, "linux-basics-30-11-2020-3-12-2020"], [353, "linux-basics-30-11-2020-3-12-2020"]], "6 Grundlegende Sprachelemente": [[194, "6-Grundlegende-Sprachelemente"]], "6.1 Syntax und Semantik": [[194, "6.1-Syntax-und-Semantik"]], "Zur Syntax mit der Einr\u00fcckung \u2026": [[194, "Zur-Syntax-mit-der-Einr\u00fcckung-\u2026"]], "In Python k\u00f6nnen Variablen ihren Typ \u00e4ndern": [[194, "In-Python-k\u00f6nnen-Variablen-ihren-Typ-\u00e4ndern"]], "Kommentare": [[194, "Kommentare"]], "6.2 Grundlegende Elemente einer Sprache": [[194, "6.2-Grundlegende-Elemente-einer-Sprache"]], "6.3 Standarddatentypen (elementare Datentypen)": [[194, "6.3-Standarddatentypen-(elementare-Datentypen)"]], "Integers sind beliebig gro\u00df": [[194, "Integers-sind-beliebig-gro\u00df"]], "Vergleichsoperatoren": [[194, "Vergleichsoperatoren"]], "Operator Pr\u00e4zedenz: Punkt vor Strichrechnung": [[194, "Operator-Pr\u00e4zedenz:-Punkt-vor-Strichrechnung"]], "Floor Division": [[194, "Floor-Division"]], "Modulo Operator: %": [[194, "Modulo-Operator:-%"]], "(Un\u00e4rer) Negations Operator": [[194, "(Un\u00e4rer)-Negations-Operator"]], "Operator Pr\u00e4zedenz erzwingen": [[194, "Operator-Pr\u00e4zedenz-erzwingen"]], "Strings gibts auch (Zeichenketten)": [[194, "Strings-gibts-auch-(Zeichenketten)"]], "Raw Strings": [[194, "Raw-Strings"], [216, "Raw-Strings"], [233, "Raw-Strings"], [239, "Raw-Strings"], [261, "Raw-Strings"], [291, "Raw-Strings"], [1044, "raw-strings"]], "f-Strings": [[194, "f-Strings"], [313, "f-Strings"]], "Konvertierungen": [[194, "Konvertierungen"]], "Boolean": [[194, "Boolean"], [220, "Boolean"], [223, "Boolean"], [231, "Boolean"], [233, "Boolean"], [243, "Boolean"], [246, "Boolean"], [1033, "boolean"]], "Pr\u00e4zendenzregeln: and vor or": [[194, "Pr\u00e4zendenzregeln:-and-vor-or"]], "6.4 Literale f\u00fcr primitive Datentypen": [[194, "6.4-Literale-f\u00fcr-primitive-Datentypen"]], "6.5 Variablen und Konstanten": [[194, "6.5-Variablen-und-Konstanten"]], "6.6 Operatoren": [[194, "6.6-Operatoren"]], "6.7 Ausdr\u00fccke und Operatorrangfolgen": [[194, "6.7-Ausdr\u00fccke-und-Operatorrangfolgen"]], "6.8 \u00dcbungen": [[194, "6.8-\u00dcbungen"]], "Zwei Variablen vertauschen": [[194, "Zwei-Variablen-vertauschen"]], "Zwei Variablen vertauschen mit Tuple Unpacking": [[194, "Zwei-Variablen-vertauschen-mit-Tuple-Unpacking"]], "\u00dcbung 1, 5.": [[194, "\u00dcbung-1,-5."]], "7 Kontrollstrukturen": [[194, "7-Kontrollstrukturen"]], "7.1 Anweisungen und Folgen": [[194, "7.1-Anweisungen-und-Folgen"]], "7.2 Bedingungen und Kontrollstrukturen": [[194, "7.2-Bedingungen-und-Kontrollstrukturen"]], "7.3 Grundlagen zu Verzweigungen": [[194, "7.3-Grundlagen-zu-Verzweigungen"]], "7.4 Bedingte Anweisung": [[194, "7.4-Bedingte-Anweisung"]], "7.5 Verzweigung": [[194, "7.5-Verzweigung"]], "7.6 Geschachtelte Verzweigung": [[194, "7.6-Geschachtelte-Verzweigung"]], "7.7 Mehrfache Verzweigung (Fallauswahl)": [[194, "7.7-Mehrfache-Verzweigung-(Fallauswahl)"]], "7.8 Schleifen": [[194, "7.8-Schleifen"]], "7.9 Z\u00e4hlergesteuerte Schleifen (Iteration)": [[194, "7.9-Z\u00e4hlergesteuerte-Schleifen-(Iteration)"]], "7.10 Kopfgesteuerte bedingte Schleife": [[194, "7.10-Kopfgesteuerte-bedingte-Schleife"]], "7.11 Fu\u00dfgesteuerte bedingte Schleife": [[194, "7.11-Fu\u00dfgesteuerte-bedingte-Schleife"]], "(jf) break und continue": [[194, "(jf)-break-und-continue"]], "(jf) Sequential Datatypes": [[194, "(jf)-Sequential-Datatypes"]], "(jf) for Loops": [[194, "(jf)-for-Loops"]], "Iteration mit Dictionaries": [[194, "Iteration-mit-Dictionaries"]], "(jf) The range() Function": [[194, "(jf)-The-range()-Function"]], "7.12 Schnell\u00fcbersicht": [[194, "7.12-Schnell\u00fcbersicht"]], "7.13 Sprunganweisungen": [[194, "7.13-Sprunganweisungen"]], "7.14 Endlosschleifen": [[194, "7.14-Endlosschleifen"]], "7.15 \u00dcbungen": [[194, "7.15-\u00dcbungen"]], "8 Elementare Datenstrukturen": [[194, "8-Elementare-Datenstrukturen"]], "8.1 Warum werden Datenstrukturen ben\u00f6tigt?": [[194, "8.1-Warum-werden-Datenstrukturen-ben\u00f6tigt?"]], "(jf) Compound Datatypes": [[194, "(jf)-Compound-Datatypes"]], "(jf) References, (Im)mutability": [[194, "(jf)-References,-(Im)mutability"]], "(jf) Laufzeitverhalten bei der Suche (der in Operator)": [[194, "(jf)-Laufzeitverhalten-bei-der-Suche-(der-in-Operator)"]], "Liste": [[194, "Liste"]], "Set": [[194, "Set"], [215, "Set"], [216, "Set"], [220, "Set"], [220, "id1"], [223, "Set"], [226, "Set"], [226, "id1"], [233, "Set"], [246, "Set"], [249, "Set"], [261, "Set"], [264, "Set"], [264, "id5"], [271, "Set"], [281, "Set"], [285, "Set"], [303, "Set"], [307, "Set"]], "8.2 Arrays": [[194, "8.2-Arrays"]], "8.3 Eindimensionale Arrays": [[194, "8.3-Eindimensionale-Arrays"]], "8.4 Records": [[194, "8.4-Records"]], "8.5 Zeichenketten": [[194, "8.5-Zeichenketten"]], "8.6 Tupel und Listen": [[194, "8.6-Tupel-und-Listen"]], "sorted, reversed": [[194, "sorted,-reversed"]], "8.7 Dictionaries": [[194, "8.7-Dictionaries"]], "(jf) Records in Python": [[194, "(jf)-Records-in-Python"]], "8.8 Mengen": [[194, "8.8-Mengen"]], "8.9 Besondere Datenstrukturen anhand von Stapel (Stack) und Schlangen (Queue)": [[194, "8.9-Besondere-Datenstrukturen-anhand-von-Stapel-(Stack)-und-Schlangen-(Queue)"]], "8.10 \u00dcbungen": [[194, "8.10-\u00dcbungen"]], "\u00dcbung 1": [[194, "\u00dcbung-1"]], "Versuch 1: in und index()": [[194, "Versuch-1:-in-und-index()"]], "Versuch 2: Zur\u00fcck zu while \u2026": [[194, "Versuch-2:-Zur\u00fcck-zu-while-\u2026"]], "Versuch 3: hybrid potschert mit for": [[194, "Versuch-3:-hybrid-potschert-mit-for"]], "Versuch 4: supergscheit mit for und enumerate()": [[194, "Versuch-4:-supergscheit-mit-for-und-enumerate()"]], "9 Methoden, Prozeduren und Funktionen": [[194, "9-Methoden,-Prozeduren-und-Funktionen"]], "Funktionspointer (so heissts in C): Funktionsobjekte (Python)": [[194, "Funktionspointer-(so-heissts-in-C):-Funktionsobjekte-(Python)"]], "(jf) Primzahlenbeispiel mit Funktion": [[194, "(jf)-Primzahlenbeispiel-mit-Funktion"]], "(jf) Local vs.\u00a0Global Scope": [[194, "(jf)-Local-vs.\u00a0Global-Scope"]], "Laufzeitfehler: Variable existiert nicht": [[194, "Laufzeitfehler:-Variable-existiert-nicht"]], "Lokale Variable": [[194, "Lokale-Variable"]], "Globale Variable (lesen)": [[194, "Globale-Variable-(lesen)"]], "Globale Variable (schreiben/zuweisen)": [[194, "Globale-Variable-(schreiben/zuweisen)"]], "Fehlerfall von Peter": [[194, "Fehlerfall-von-Peter"]], "9.1 Unterprogramme": [[194, "9.1-Unterprogramme"]], "9.2 Parameter\u00fcbergabe": [[194, "9.2-Parameter\u00fcbergabe"]], "9.3 Parameter\u00fcbergabe als Wert": [[194, "9.3-Parameter\u00fcbergabe-als-Wert"]], "9.4 Parameter\u00fcbergabe \u00fcber Referenzen": [[194, "9.4-Parameter\u00fcbergabe-\u00fcber-Referenzen"]], "9.5 R\u00fcckgabewerte von Funktionen oder Methoden": [[194, "9.5-R\u00fcckgabewerte-von-Funktionen-oder-Methoden"]], "9.6 Innere Funktionen - Closures": [[194, "9.6-Innere-Funktionen---Closures"]], "9.7 Standardbibliotheken und Built-in-Funktionalit\u00e4ten": [[194, "9.7-Standardbibliotheken-und-Built-in-Funktionalit\u00e4ten"]], "9.8 \u00dcbungen": [[194, "9.8-\u00dcbungen"]], "Programmierung Grundlagen (13. und 14.1.2021)": [[195, "programmierung-grundlagen-13-und-14-1-2021"]], "Struktur": [[195, "struktur"]], "Herdt Kapitel 6: Grundlegende Sprachelemente": [[195, "herdt-kapitel-6-grundlegende-sprachelemente"], [1163, "herdt-kapitel-6-grundlegende-sprachelemente"]], "Herdt Kapitel 7: Kontrollstrukturen": [[195, "herdt-kapitel-7-kontrollstrukturen"], [1163, "herdt-kapitel-7-kontrollstrukturen"]], "Verzweigung": [[195, "verzweigung"], [1163, "verzweigung"]], "Schleifen": [[195, "schleifen"], [1163, "schleifen"]], "Herdt Kapitel 8: Elementare Datenstrukturen": [[195, "herdt-kapitel-8-elementare-datenstrukturen"], [1163, "herdt-kapitel-8-elementare-datenstrukturen"]], "Herdt Kapitel 9: Methoden, Prozeduren und Funktionen": [[195, "herdt-kapitel-9-methoden-prozeduren-und-funktionen"], [1163, "herdt-kapitel-9-methoden-prozeduren-und-funktionen"]], "Python Basics (22.2.2021 - 24.2.2021)": [[197, "python-basics-22-2-2021-24-2-2021"], [353, "python-basics-22-2-2021-24-2-2021"]], "Links (ToDo)": [[197, "links-todo"]], "Linux Kernel Driver Development Basics (14.12.2020)": [[198, "linux-kernel-driver-development-basics-14-12-2020"]], "Books": [[198, "books"], [248, "books"], [290, "books"], [1100, "books"]], "Python Advanced": [[199, "Python-Advanced"]], "Data Types Recap": [[199, "Data-Types-Recap"]], "Sequential Datatypes": [[199, "Sequential-Datatypes"], [231, "Sequential-Datatypes"], [243, "Sequential-Datatypes"], [313, "Sequential-Datatypes"], [1036, "sequential-datatypes"], [1036, "id1"]], "Slicing etc.": [[199, "Slicing-etc."]], "Mapping Types (Dictionary, und mehr)": [[199, "Mapping-Types-(Dictionary,-und-mehr)"]], "Sets": [[199, "Sets"], [199, "id1"], [207, "Sets"], [1049, "sets"]], "for Schleife, ganz kurz": [[199, "for-Schleife,-ganz-kurz"]], "Tuple": [[199, "Tuple"], [223, "Tuple"], [226, "Tuple"], [233, "Tuple"], [246, "Tuple"], [249, "Tuple"], [261, "Tuple"]], "Funktionen mit mehreren Returnwerten (bzw. Tuple Unpacking)": [[199, "Funktionen-mit-mehreren-Returnwerten-(bzw.-Tuple-Unpacking)"]], "Iteration \u00fcber Containerdatentypen": [[199, "Iteration-\u00fcber-Containerdatentypen"]], "Listen": [[199, "Listen"], [233, "Listen"], [330, "Listen"]], "Was heisst \u201cUntypisiert\u201d?": [[199, "Was-heisst-\u201cUntypisiert\u201d?"]], "Wir l\u00f6schen den Integer": [[199, "Wir-l\u00f6schen-den-Integer"]], "Iterator Protocol, for Loops": [[199, "Iterator-Protocol,-for-Loops"]], "Iterable: Der Begriff": [[199, "Iterable:-Der-Begriff"]], "Zufall": [[199, "Zufall"]], "Regular Expressions": [[199, "Regular-Expressions"], [252, "Regular-Expressions"], [264, "Regular-Expressions"], [313, "Regular-Expressions"], [891, "regular-expressions"]], "enumerate()": [[199, "enumerate()"], [207, "enumerate()"], [210, "enumerate()"], [246, "enumerate()"], [264, "enumerate()"], [281, "enumerate()"], [303, "enumerate()"]], "JSON": [[199, "JSON"], [216, "JSON"], [226, "JSON"], [252, "JSON"], [261, "JSON"], [296, "JSON"], [299, "JSON"]], "2021-03-15": [[200, "id1"]], "Exercises (auf Github)": [[200, "exercises-auf-github"]], "Jupyter Notebook": [[200, "jupyter-notebook"], [202, "jupyter-notebook"], [219, "jupyter-notebook"], [221, "jupyter-notebook"], [224, "jupyter-notebook"], [230, "jupyter-notebook"], [235, "jupyter-notebook"], [238, "jupyter-notebook"], [241, "jupyter-notebook"], [330, "Jupyter-Notebook"], [1106, "jupyter-notebook"]], "Download": [[200, null], [202, null]], "Hallo Jupyter Notebook": [[201, "Hallo-Jupyter-Notebook"]], "Syntax": [[201, "Syntax"], [271, "Syntax"], [313, "Syntax"], [330, "Syntax"], [330, "id1"]], "Raw strings": [[201, "Raw-strings"]], "Variablen": [[201, "Variablen"], [233, "Variablen"]], "Tuple Unpacking": [[201, "Tuple-Unpacking"], [243, "Tuple-Unpacking"], [261, "Tuple-Unpacking"], [271, "Tuple-Unpacking"], [307, "Tuple-Unpacking"], [313, "Tuple-Unpacking"], [329, "Tuple-Unpacking"], [330, "Tuple-Unpacking"], [330, "id2"]], "Speicher, Memory Management": [[201, "Speicher,-Memory-Management"]], "Mutable vs.\u00a0Immutable": [[201, "Mutable-vs.\u00a0Immutable"], [252, "Mutable-vs.\u00a0Immutable"]], "Wie sch\u00fctze ich mich davor?": [[201, "Wie-sch\u00fctze-ich-mich-davor?"]], "Aber!!!!": [[201, "Aber!!!!"]], "Dictionary": [[201, "Dictionary"], [207, "Dictionary"], [215, "Dictionary"], [216, "Dictionary"], [220, "Dictionary"], [220, "id2"], [223, "Dictionary"], [226, "Dictionary"], [226, "id2"], [233, "Dictionary"], [246, "Dictionary"], [249, "Dictionary"], [261, "Dictionary"], [264, "Dictionary"], [264, "id4"], [271, "Dictionary"], [281, "Dictionary"], [285, "Dictionary"], [291, "Dictionary"], [303, "Dictionary"], [307, "Dictionary"]], "Exercise: Liste von gemischten Datentypen": [[201, "Exercise:-Liste-von-gemischten-Datentypen"]], "Konstruktoren": [[201, "Konstruktoren"]], "Tag 2: Wiederholung, Fragen": [[201, "Tag-2:-Wiederholung,-Fragen"]], "for und range()": [[201, "for-und-range()"]], "Objektidentit\u00e4t": [[201, "Objektidentit\u00e4t"]], "Das with Statement": [[201, "Das-with-Statement"], [210, "Das-with-Statement"]], "Tuple Unpacking, Dictionary Iteration": [[201, "Tuple-Unpacking,-Dictionary-Iteration"]], "String Operationen": [[201, "String-Operationen"]], "enumerate(), und verlorene Indices": [[201, "enumerate(),-und-verlorene-Indices"]], "NumPy, matplotlib": [[201, "NumPy,-matplotlib"]], "Interpolation mittels scipy": [[201, "Interpolation-mittels-scipy"]], "Python Basic and Advanced (22.3.2021 - 25.3.2021)": [[202, "python-basic-and-advanced-22-3-2021-25-3-2021"]], "(Tutorial) Videos": [[202, "tutorial-videos"]], "Linux Basics, Shell Scripting (2021-03-29)": [[203, "linux-basics-shell-scripting-2021-03-29"]], "Course Details": [[203, null]], "Course Preparation": [[203, "course-preparation"], [256, "course-preparation"], [258, "course-preparation"], [266, "course-preparation"]], "SSH": [[203, "ssh"], [340, "ssh"]], "Linux and/or Shell on Windows Host": [[203, "linux-and-or-shell-on-windows-host"]], "Editor Support for Shell Scripting": [[203, "editor-support-for-shell-scripting"]], "Programmierung Grundlagen (12. und 13.4.2021)": [[205, "programmierung-grundlagen-12-und-13-4-2021"]], "Syntax etc.": [[207, "Syntax-etc."], [239, "Syntax-etc."], [285, "Syntax-etc."], [1028, "syntax-etc"]], "Comments vs.\u00a0Documentation": [[207, "Comments-vs.\u00a0Documentation"]], "Variables": [[207, "Variables"], [220, "Variables"], [223, "Variables"], [239, "Variables"], [249, "Variables"], [281, "Variables"], [285, "Variables"], [307, "Variables"], [313, "Variables"], [330, "Variables"], [1030, "variables"]], "Assignment Fun": [[207, "Assignment-Fun"], [246, "Assignment-Fun"], [1030, "assignment-fun"]], "Assignment Details": [[207, "Assignment-Details"], [239, "Assignment-Details"], [246, "Assignment-Details"], [330, "Assignment-Details"], [1030, "assignment-details"]], "Operators": [[207, "Operators"], [243, "Operators"]], "Integer Arithmetic": [[207, "Integer-Arithmetic"]], "String Methods": [[207, "String-Methods"], [329, "String-Methods"]], "Datatype Conversions": [[207, "Datatype-Conversions"], [231, "Datatype-Conversions"], [233, "Datatype-Conversions"], [239, "Datatype-Conversions"], [243, "Datatype-Conversions"], [246, "Datatype-Conversions"], [264, "Datatype-Conversions"], [281, "Datatype-Conversions"], [285, "Datatype-Conversions"], [291, "Datatype-Conversions"], [303, "Datatype-Conversions"], [307, "Datatype-Conversions"], [313, "Datatype-Conversions"], [330, "Datatype-Conversions"], [1031, "datatype-conversions"]], "Strings k\u00f6nnen alles!": [[207, "Strings-k\u00f6nnen-alles!"]], "Complex Datatypes": [[207, "Complex-Datatypes"], [330, "Complex-Datatypes"]], "List (mutable)": [[207, "List-(mutable)"], [220, "List-(mutable)"], [313, "List-(mutable)"]], "extend()? Iterable?": [[207, "extend()?-Iterable?"]], "Tuple (wie Liste, nur immutable)": [[207, "Tuple-(wie-Liste,-nur-immutable)"]], "in Operator": [[207, "in-Operator"], [246, "in-Operator"]], "Iteration \u00fcber Daten: mittels for": [[207, "Iteration-\u00fcber-Daten:-mittels-for"]], "enumerate(), sum(), map(), und so weiter": [[207, "enumerate(),-sum(),-map(),-und-so-weiter"]], "sum()": [[207, "sum()"]], "map()": [[207, "map()"], [210, "map()"]], "list() function": [[207, "list()-function"]], "Performance: in Operator, und list und set": [[207, "Performance:-in-Operator,-und-list-und-set"]], "Dynamische Evaluierung: eval()": [[207, "Dynamische-Evaluierung:-eval()"]], "Python Grundlagen (2021-05-03 - 2021-05-05)": [[208, "python-grundlagen-2021-05-03-2021-05-05"], [353, "python-grundlagen-2021-05-03-2021-05-05"]], "Weiterf\u00fchrende Information": [[208, "weiterfuhrende-information"]], "Visual Studio Code": [[208, "visual-studio-code"], [224, "visual-studio-code"], [1100, "visual-studio-code"]], "Python Beginner Tutorials": [[208, "python-beginner-tutorials"], [248, "python-beginner-tutorials"], [1100, "python-beginner-tutorials"]], "NumPy and Data Science Tutorials": [[208, "numpy-and-data-science-tutorials"], [248, "numpy-and-data-science-tutorials"], [251, "numpy-and-data-science-tutorials"], [284, "numpy-and-data-science-tutorials"], [1100, "numpy-and-data-science-tutorials"]], "PyPI (Installing Modules that don\u2019t come as Batteries)": [[208, "pypi-installing-modules-that-don-t-come-as-batteries"], [1100, "pypi-installing-modules-that-don-t-come-as-batteries"]], "Git, and Github": [[208, "git-and-github"], [1100, "git-and-github"]], "Conference Talks": [[208, "conference-talks"], [284, "conference-talks"], [1100, "conference-talks"]], "Python Grundlagen (Jupyter Notebook)": [[209, "python-grundlagen-jupyter-notebook"], [222, "python-grundlagen-jupyter-notebook"], [225, "python-grundlagen-jupyter-notebook"], [228, "python-grundlagen-jupyter-notebook"], [247, "python-grundlagen-jupyter-notebook"], [250, "python-grundlagen-jupyter-notebook"], [253, "python-grundlagen-jupyter-notebook"], [262, "python-grundlagen-jupyter-notebook"], [265, "python-grundlagen-jupyter-notebook"], [286, "python-grundlagen-jupyter-notebook"]], "import zipfile": [[210, "import-zipfile"]], "Read Contents \u2026": [[210, "Read-Contents-\u2026"]], "Extract One Member": [[210, "Extract-One-Member"]], "All in One, Using with": [[210, "All-in-One,-Using-with"]], "Functionality: Methods": [[210, "Functionality:-Methods"]], "Class Attributes vs.\u00a0Instance Attributes (not Variables)": [[210, "Class-Attributes-vs.\u00a0Instance-Attributes-(not-Variables)"]], "Instance Attributes": [[210, "Instance-Attributes"]], "Class Attributes": [[210, "Class-Attributes"]], "Public, Protected, Private": [[210, "Public,-Protected,-Private"]], "Properties": [[210, "Properties"], [239, "Properties"], [457, "properties"], [1020, "properties"]], "Functions, Positional and Keyword Arguments": [[210, "Functions,-Positional-and-Keyword-Arguments"]], "Positional Arguments": [[210, "Positional-Arguments"]], "Keyword Arguments": [[210, "Keyword-Arguments"], [231, "Keyword-Arguments"], [331, "Keyword-Arguments"], [1042, "keyword-arguments"]], "Mixing Positional and Keyword Arguments": [[210, "Mixing-Positional-and-Keyword-Arguments"]], "The range() Function": [[210, "The-range()-Function"], [216, "The-range()-Function"], [223, "The-range()-Function"]], "Functional Programming, Iteration, yield, map(), filter(), \u2026": [[210, "Functional-Programming,-Iteration,-yield,-map(),-filter(),-\u2026"]], "Iterable": [[210, "Iterable"], [226, "Iterable"]], "list(), and iterable?": [[210, "list(),-and-iterable?"]], "Tuple Unpacking and the Rest": [[210, "Tuple-Unpacking-and-the-Rest"]], "Decorators, etc.": [[210, "Decorators,-etc."]], "NoneType and None": [[210, "NoneType-and-None"]], "File I/O": [[210, "File-I/O"], [239, "File-I/O"], [246, "File-I/O"], [249, "File-I/O"], [281, "File-I/O"], [285, "File-I/O"], [327, "File-I/O"], [937, "file-i-o"], [1050, "file-i-o"]], "Iteration, yield, Recursion": [[210, "Iteration,-yield,-Recursion"]], "Recursion": [[210, "Recursion"]], "Iteratively Calculating Fibonacci Numbers -> yield": [[210, "Iteratively-Calculating-Fibonacci-Numbers-->-yield"]], "map(), filter(), zip(), enumerate() \u2026": [[210, "map(),-filter(),-zip(),-enumerate()-\u2026"]], "map(), and several other ways to do the same": [[210, "map(),-and-several-other-ways-to-do-the-same"]], "zip()": [[210, "zip()"]], "filter(), and several other methods to do the same": [[210, "filter(),-and-several-other-methods-to-do-the-same"]], "OSError, errno": [[210, "OSError,-errno"]], "The platform Module, sys.path": [[210, "The-platform-Module,-sys.path"]], "os.path": [[210, "os.path"], [226, "os.path"], [233, "os.path"]], "Exceptions und so (assert())": [[210, "Exceptions-und-so-(assert())"]], "AssertionError": [[210, "AssertionError"]], "Random Questions": [[210, "Random-Questions"]], "Slicing": [[210, "Slicing"], [233, "Slicing"], [239, "Slicing"], [264, "Slicing"], [285, "Slicing"], [1121, "slicing"]], "OO": [[210, "OO"], [278, "oo"], [344, "oo"], [538, "oo"]], "String Formatting": [[210, "String-Formatting"], [216, "String-Formatting"], [1045, "string-formatting"]], "import datetime": [[210, "import-datetime"]], "Python Advanced (2021-05-25 - 2021-05-27)": [[211, "python-advanced-2021-05-25-2021-05-27"]], "Predefined streams": [[211, "predefined-streams"]], "PCAP Exam Syllabus": [[211, "pcap-exam-syllabus"], [224, "pcap-exam-syllabus"]], "2021-06-09": [[211, "id1"]], "Programmieren mit C (2021-06-14 - 2021-06-18)": [[212, "programmieren-mit-c-2021-06-14-2021-06-18"], [353, "programmieren-mit-c-2021-06-14-2021-06-18"]], "Preparation: Tools": [[212, "preparation-tools"]], "State machine": [[212, "state-machine"]], "Regular Course Topics": [[212, "regular-course-topics"]], "Development Tools (Git & CMake) Installation Massacre": [[212, "development-tools-git-cmake-installation-massacre"]], "Regular Course Material": [[212, "regular-course-material"], [212, "id1"]], "Group Project Kick-Off :-)": [[212, "group-project-kick-off"]], "Exercise: Encapsulate Index Access to userdb": [[212, "exercise-encapsulate-index-access-to-userdb"]], "Group Project (Use Case Driven Course Flow :-) )": [[212, "group-project-use-case-driven-course-flow"]], "Day 5": [[212, "day-5"], [213, "day-5"], [267, "day-5"]], "Pointer Recap": [[212, "pointer-recap"]], "On With Group Project": [[212, "on-with-group-project"]], "C++ Basics": [[212, "c-basics"]], "Pointers, Pointer Arithmetic, and the Standard Template Library (STL)": [[212, "pointers-pointer-arithmetic-and-the-standard-template-library-stl"]], "The C++ Programming Language (2021-07-12 - 2021-07-16)": [[213, "the-c-programming-language-2021-07-12-2021-07-16"]], "Setup for the new kids": [[213, "setup-for-the-new-kids"]], "Recapitulate some C": [[213, "recapitulate-some-c"]], "Group project review": [[213, "group-project-review"]], "Jump into C++": [[213, "jump-into-c"]], "Regular Topics": [[213, "regular-topics"], [213, "id2"], [213, "id4"]], "Toolchain: C/C++ Build (How Complicated Can Things Be?)": [[213, "toolchain-c-c-build-how-complicated-can-things-be"]], "Exercises: Using the C++ Toolbox": [[213, "exercises-using-the-c-toolbox"]], "Finish First \u201cUser Database\u201d Functionality": [[213, "finish-first-user-database-functionality"]], "Unit Testing": [[213, "unit-testing"], [270, "unit-testing"], [273, "unit-testing"], [343, "unit-testing"]], "GTest Installation": [[213, "gtest-installation"]], "Git Workflows": [[213, "git-workflows"]], "Day X": [[213, "day-x"]], "Smart Pointers, Recap": [[213, "smart-pointers-recap"]], "std::map": [[213, "std-map"], [616, "std-map"]], "OO, and Polymorphism": [[213, "oo-and-polymorphism"]], "Programmierung Grundlagen, anhand von Python (2. und 3.8.2021)": [[214, "programmierung-grundlagen-anhand-von-python-2-und-3-8-2021"], [353, "programmierung-grundlagen-anhand-von-python-2-und-3-8-2021"]], "Variablen und Datentypen": [[214, "variablen-und-datentypen"], [230, "variablen-und-datentypen"], [242, "variablen-und-datentypen"]], "Kontrollstrukturen": [[214, "kontrollstrukturen"], [230, "kontrollstrukturen"], [231, "Kontrollstrukturen"], [242, "kontrollstrukturen"]], "Datenstrukturen": [[215, "Datenstrukturen"]], "List": [[215, "List"], [216, "List"], [223, "List"], [226, "List"], [246, "List"], [249, "List"], [261, "List"], [264, "List"], [291, "List"], [303, "List"], [1128, "list"]], "Iteration": [[215, "Iteration"], [215, "id1"], [216, "Iteration"], [216, "id1"], [226, "Iteration"], [249, "Iteration"], [261, "Iteration"], [303, "Iteration"]], "User Datenbank: Showcase Full Stack Development": [[215, "User-Datenbank:-Showcase-Full-Stack-Development"]], "5: Response kommt von der DB": [[215, "5:-Response-kommt-von-der-DB"]], "6: Aufgabe: Formulieren eines JSON Strings, damit man diese Daten \u00fcber die HTTP Verbindung zum Client/Browser schicken kann.": [[215, "6:-Aufgabe:-Formulieren-eines-JSON-Strings,-damit-man-diese-Daten-\u00fcber-die-HTTP-Verbindung-zum-Client/Browser-schicken-kann."]], "7. Jetzt schickman weg: vom Server (PHP) zum Browser (JS)": [[215, "7.-Jetzt-schickman-weg:-vom-Server-(PHP)-zum-Browser-(JS)"]], "8. in JS JSON string empfangen": [[215, "8.-in-JS-JSON-string-empfangen"]], "9. Nun muessen wir den JSON-String in JS verwandlen": [[215, "9.-Nun-muessen-wir-den-JSON-String-in-JS-verwandlen"]], "Iterable?": [[216, "Iterable?"]], "List Comprehension, Generator Expression": [[216, "List-Comprehension,-Generator-Expression"]], "Literals": [[216, "Literals"], [482, "literals"]], "Quoting?": [[216, "Quoting?"], [220, "Quoting?"]], "Multiline Strings": [[216, "Multiline-Strings"], [220, "Multiline-Strings"], [313, "Multiline-Strings"], [1044, "multiline-strings"]], "Functionality": [[216, "Functionality"], [826, "functionality"]], "strip() and friends": [[216, "strip()-and-friends"]], "f-Strings (since Python 3.6)": [[216, "f-Strings-(since-Python-3.6)"]], "Parsing date formats": [[216, "Parsing-date-formats"]], "Read a Cleaned-Up SAP Export": [[217, "read-a-cleaned-up-sap-export"]], "Requirement": [[217, "requirement"], [481, "requirement"], [503, "requirement"], [504, "requirement"], [505, "requirement"], [509, "requirement"], [510, "requirement"], [511, "requirement"], [512, "requirement"], [513, "requirement"], [514, "requirement"], [929, "requirement"], [936, "requirement"], [1056, "requirement"], [1057, "requirement"], [1078, "requirement"], [1089, "requirement"], [1090, "requirement"], [1091, "requirement"], [1092, "requirement"], [1094, "requirement"], [1095, "requirement"], [1096, "requirement"], [1097, "requirement"]], "Solution": [[217, "solution"], [460, "solution"], [462, "solution"], [465, "solution"], [1136, "solution"]], "Python Grundlagen (2021-08-23 - 2021-08-25)": [[218, "python-grundlagen-2021-08-23-2021-08-25"]], "Initial Terminology": [[220, "Initial-Terminology"]], "Sequence": [[220, "Sequence"]], "Tuple (immutable)": [[220, "Tuple-(immutable)"], [313, "Tuple-(immutable)"]], "References, (Im)mutability": [[220, "References,-(Im)mutability"], [233, "References,-(Im)mutability"], [246, "References,-(Im)mutability"], [249, "References,-(Im)mutability"], [264, "References,-(Im)mutability"], [271, "References,-(Im)mutability"], [285, "References,-(Im)mutability"], [291, "References,-(Im)mutability"], [291, "id1"], [303, "References,-(Im)mutability"], [1040, "references-im-mutability"]], "Iteration, for, and range()": [[220, "Iteration,-for,-and-range()"]], "Iterator Protocol (not so important for beginners)": [[220, "Iterator-Protocol-(not-so-important-for-beginners)"]], "Iteration, and Compound Datatypes": [[220, "Iteration,-and-Compound-Datatypes"]], "List and Tuple": [[220, "List-and-Tuple"]], "matplotlib": [[220, "matplotlib"], [252, "matplotlib"]], "File I/O, and Strings": [[220, "File-I/O,-and-Strings"]], "Raw strings: Windows path names": [[220, "Raw-strings:-Windows-path-names"]], "Miscellaneous String Methods": [[220, "Miscellaneous-String-Methods"], [231, "Miscellaneous-String-Methods"], [233, "Miscellaneous-String-Methods"], [239, "Miscellaneous-String-Methods"], [249, "Miscellaneous-String-Methods"], [264, "Miscellaneous-String-Methods"], [285, "Miscellaneous-String-Methods"], [291, "Miscellaneous-String-Methods"], [313, "Miscellaneous-String-Methods"], [1046, "miscellaneous-string-methods"]], "Python Basics (2021-08-31 - 2021-09-01)": [[221, "python-basics-2021-08-31-2021-09-01"], [353, "python-basics-2021-08-31-2021-09-01"]], "Numerics, and AI": [[221, "numerics-and-ai"]], "Mountains near Graz": [[221, "mountains-near-graz"]], "2021-11-17": [[223, "2021-11-17"]], "Enter Tuples": [[223, "Enter-Tuples"]], "Datatype Conversions, Type Names": [[223, "Datatype-Conversions,-Type-Names"]], "NoneType": [[223, "NoneType"]], "Short Circuit Evaluation of Boolean Expression": [[223, "Short-Circuit-Evaluation-of-Boolean-Expression"]], "Exercise: Mixed List": [[223, "Exercise:-Mixed-List"]], "Python Documentation": [[223, "Python-Documentation"]], "for": [[223, "for"], [285, "for"], [330, "for"]], "Iteration over Compound Datatypes": [[223, "Iteration-over-Compound-Datatypes"], [233, "Iteration-over-Compound-Datatypes"]], "File IO": [[223, "File-IO"], [239, "File-IO"], [267, "file-io"], [271, "File-IO"], [307, "File-IO"], [313, "File-IO"]], "Generators, Iterator Protocol, for": [[223, "Generators,-Iterator-Protocol,-for"]], "Common Sequence Operation": [[223, "Common-Sequence-Operation"]], "Comprehensions": [[223, "Comprehensions"], [226, "Comprehensions"], [239, "Comprehensions"], [271, "Comprehensions"], [303, "Comprehensions"]], "List, Iterable? WTF?": [[223, "List,-Iterable?-WTF?"]], "Dict and iterable": [[223, "Dict-and-iterable"]], "More on Lists": [[223, "More-on-Lists"], [231, "More-on-Lists"], [246, "More-on-Lists"]], "More on Dictionaries": [[223, "More-on-Dictionaries"], [231, "More-on-Dictionaries"]], "References, Mutability": [[223, "References,-Mutability"]], "CSV": [[223, "CSV"], [240, "csv"], [248, "csv"], [285, "CSV"]], "Python Basics (2021-11-17 - 2021-11-19)": [[224, "python-basics-2021-11-17-2021-11-19"], [353, "python-basics-2021-11-17-2021-11-19"]], "Python (Core Topics)": [[224, "python-core-topics"]], "Python Standard Library": [[224, "python-standard-library"]], "More About Strings": [[226, "More-About-Strings"], [243, "More-About-Strings"], [291, "More-About-Strings"], [313, "More-About-Strings"], [1044, "more-about-strings"]], "List, Tuple": [[226, "List,-Tuple"], [281, "List,-Tuple"], [285, "List,-Tuple"]], "Tuple Unpacking: What Else": [[226, "Tuple-Unpacking:-What-Else"]], "Iterator Protocol": [[226, "Iterator-Protocol"], [233, "Iterator-Protocol"], [264, "Iterator-Protocol"], [281, "Iterator-Protocol"], [285, "Iterator-Protocol"], [313, "Iterator-Protocol"]], "yield": [[226, "yield"], [249, "yield"]], "Everything is an Object of a Type": [[226, "Everything-is-an-Object-of-a-Type"]], "Generators, used more creatively": [[226, "Generators,-used-more-creatively"]], "Exception Handling and Exception Types": [[226, "Exception-Handling-and-Exception-Types"]], "2021-12-17": [[226, "2021-12-17"]], "Shift Operators": [[226, "Shift-Operators"]], "PCAP Sample Exam": [[226, "PCAP-Sample-Exam"]], "System Errors": [[226, "System-Errors"]], "Python Advanced (2021-12-01 - 2021-12-03)": [[227, "python-advanced-2021-12-01-2021-12-03"], [353, "python-advanced-2021-12-01-2021-12-03"]], "Basics Recap": [[227, "basics-recap"], [280, "basics-recap"]], "Group Project Preparation": [[227, "group-project-preparation"]], "Hmmm?": [[227, "hmmm"]], "C/C++ Programming (2021-12-06 - 2021-12-10, 2022-01-24 - 2022-02-04)": [[229, "c-c-programming-2021-12-06-2021-12-10-2022-01-24-2022-02-04"], [353, "c-c-programming-2021-12-06-2021-12-10-2022-01-24-2022-02-04"]], "2021-12-06": [[229, "id1"]], "2021-12-07": [[229, "id2"]], "2021-12-08": [[229, "id3"]], "2021-12-09": [[229, "id4"]], "2022-01-24": [[229, "id5"]], "Undefined Behavior": [[229, "undefined-behavior"]], "Modularization": [[229, "modularization"], [398, "modularization"]], "2022-01-25": [[229, "id6"]], "C++ and OO (Classes)": [[229, "c-and-oo-classes"]], "Modularization (again)": [[229, "modularization-again"]], "2022-01-26": [[229, "id7"]], "Modularization: Repeating Important Topics (Quickly)": [[229, "modularization-repeating-important-topics-quickly"]], "Classes (continued)": [[229, "classes-continued"]], "2022-01-27": [[229, "id8"]], "2022-01-28": [[229, "id9"]], "Standard Template Library: Container Templates": [[229, "standard-template-library-container-templates"]], "2022-01-31": [[229, "id10"]], "2022-02-01": [[229, "id11"]], "Algorithms": [[229, "algorithms"], [605, "algorithms"]], "Functors": [[229, "functors"]], "Unified Modeling Language (UML)": [[229, "unified-modeling-language-uml"]], "Exercise (Using All From Today)": [[229, "exercise-using-all-from-today"]], "2022-02-02": [[229, "id12"]], "Associative Container: std::map": [[229, "associative-container-std-map"]], "Exceptions, and Exception Handling": [[229, "exceptions-and-exception-handling"]], "2022-02-03": [[229, "id13"]], "2022-02-04": [[229, "id14"]], "C++11: A New Language": [[229, "c-11-a-new-language"]], "Dynamic Allocation, Smart Pointers": [[229, "dynamic-allocation-smart-pointers"]], "2022-02-07: Start of Exercise Week": [[229, "start-of-exercise-week"]], "Programmierung Grundlagen, anhand von Python (2022-01-17 - 2022-01-10)": [[230, "programmierung-grundlagen-anhand-von-python-2022-01-17-2022-01-10"], [353, "programmierung-grundlagen-anhand-von-python-2022-01-17-2022-01-10"]], "2022-01-17": [[231, "2022-01-17"]], "Variables and Datatypes": [[231, "Variables-and-Datatypes"]], "Comments vs Docstrings": [[231, "Comments-vs-Docstrings"]], "Integer (Ganze Zahl)": [[231, "Integer-(Ganze-Zahl)"]], "Integer Numbers: Arithmetic": [[231, "Integer-Numbers:-Arithmetic"], [243, "Integer-Numbers:-Arithmetic"], [1031, "integer-numbers-arithmetic"]], "Some Methods": [[231, "Some-Methods"]], "String Formatting: f-Strings": [[231, "String-Formatting:-f-Strings"]], "More about Strings": [[231, "More-about-Strings"]], "if": [[231, "if"], [271, "if"]], "2022-01-18": [[231, "2022-01-18"]], "Miscellanea": [[231, "Miscellanea"]], "Braces: Single Element Tuples?": [[231, "Braces:-Single-Element-Tuples?"]], "Ranges -> range() (hour_of_day)": [[231, "Ranges-->-range()-(hour_of_day)"]], "while Loops": [[231, "while-Loops"], [233, "while-Loops"], [246, "while-Loops"], [313, "while-Loops"], [1035, "while-loops"], [1035, "id1"]], "break and continue": [[231, "break-and-continue"], [395, "break-and-continue"], [395, "id1"], [1035, "break-and-continue"]], "yield, Generator, Iteration Protocol": [[231, "yield,-Generator,-Iteration-Protocol"]], "Sequence Membership": [[231, "Sequence-Membership"], [1036, "sequence-membership"]], "list (mutable)": [[231, "list-(mutable)"]], "tuple (immutable)": [[231, "tuple-(immutable)"]], "dict (mutable)": [[231, "dict-(mutable)"]], "set (mutable)": [[231, "set-(mutable)"]], "Why Index Based Iteration is not Always the Best Way to Iterate": [[231, "Why-Index-Based-Iteration-is-not-Always-the-Best-Way-to-Iterate"]], "How to get Indexes if There are None? (enumerate(), and Tuple Unpacking)": [[231, "How-to-get-Indexes-if-There-are-None?-(enumerate(),-and-Tuple-Unpacking)"]], "Default Parameters": [[231, "Default-Parameters"], [233, "Default-Parameters"], [331, "Default-Parameters"], [1042, "default-parameters"]], "List Comprehensions": [[231, "List-Comprehensions"], [243, "List-Comprehensions"]], "Iteration over Dictionaries": [[231, "Iteration-over-Dictionaries"]], "Building Dictionaries": [[231, "Building-Dictionaries"], [1048, "building-dictionaries"]], "More on Sets": [[231, "More-on-Sets"]], "with: Context Managers": [[231, "with:-Context-Managers"]], "Strings Intro": [[233, "Strings-Intro"]], "Doc Strings": [[233, "Doc-Strings"]], "Object Identity": [[233, "Object-Identity"]], "Integers": [[233, "Integers"], [243, "Integers"], [246, "Integers"], [264, "Integers"], [271, "Integers"], [291, "Integers"], [307, "Integers"], [313, "Integers"]], "Variablen? Datenypen?": [[233, "Variablen?-Datenypen?"]], "Objects, Classes": [[233, "Objects,-Classes"]], "Python Standard Libarary Examples": [[233, "Python-Standard-Libarary-Examples"]], "collections": [[233, "collections"]], "ChainMap": [[233, "ChainMap"]], "deque": [[233, "deque"]], "Suchalgorithmen und Datenstrukturen (Ausflug)": [[233, "Suchalgorithmen-und-Datenstrukturen-(Ausflug)"]], "Slice Assignment": [[233, "Slice-Assignment"], [1037, "slice-assignment"]], "Lists are mutable": [[233, "Lists-are-mutable"]], "Shallow copy and deep copy": [[233, "Shallow-copy-and-deep-copy"]], "else": [[233, "else"], [239, "else"]], "for Loops, range()": [[233, "for-Loops,-range()"]], "Default Parameters: Pitfalls": [[233, "Default-Parameters:-Pitfalls"]], "dict.fromkeys()": [[233, "dict.fromkeys()"], [246, "dict.fromkeys()"]], "Generators": [[233, "Generators"], [239, "Generators"], [279, "generators"], [280, "generators"], [284, "generators"], [301, "generators"], [305, "generators"]], "join, split": [[233, "join,-split"]], "strip, lstrip, rstrip": [[233, "strip,-lstrip,-rstrip"]], "Python Basics (2022-02-23 - 2022-02-25)": [[234, "python-basics-2022-02-23-2022-02-25"], [353, "python-basics-2022-02-23-2022-02-25"]], "Data Structures": [[234, "data-structures"]], "OS Things": [[234, "os-things"]], "Data Science": [[234, "data-science"], [302, "data-science"], [303, "Data-Science"]], "Wiederholung": [[236, "Wiederholung"]], "Mutable/Immutable": [[236, "Mutable/Immutable"]], "Attribute": [[236, "Attribute"]], "Sequentielle vs.\u00a0Konstante Suchzeit": [[236, "Sequentielle-vs.\u00a0Konstante-Suchzeit"]], "Exceptions": [[236, "Exceptions"], [252, "Exceptions"], [277, "exceptions"], [311, "exceptions"], [319, "exceptions"], [538, "exceptions"], [585, "exceptions"], [586, "exceptions"]], "for vs.\u00a0while, range()": [[236, "for-vs.\u00a0while,-range()"]], "String Methods (some)": [[236, "String-Methods-(some)"]], "eval()": [[236, "eval()"], [246, "eval()"], [303, "eval()"]], "exec()": [[236, "exec()"], [252, "exec()"], [313, "exec()"]], "Dictionary Iteration": [[236, "Dictionary-Iteration"]], "Classes, Attributes, OO": [[236, "Classes,-Attributes,-OO"]], "Types and Instances": [[236, "Types-and-Instances"]], "Metaprogramming? Types? What is a Type?": [[236, "Metaprogramming?-Types?-What-is-a-Type?"]], "OO Everywhere": [[236, "OO-Everywhere"]], "Dictionary Operations": [[236, "Dictionary-Operations"]], "collections.defaultdict": [[236, "collections.defaultdict"], [261, "collections.defaultdict"]], "Python Advanced (2022-03-15 - 2022-03-17, 2022-03-31)": [[237, "python-advanced-2022-03-15-2022-03-17-2022-03-31"]], "2022-03-15": [[237, "id1"]], "2022-03-16": [[237, "id2"]], "Test Driven Development": [[237, "test-driven-development"], [279, "test-driven-development"], [301, "test-driven-development"], [302, "test-driven-development"]], "2022-03-17": [[237, "id3"]], "2022-03-31": [[237, "id4"]], "Hello World": [[239, "Hello-World"], [357, "hello-world"], [1026, "hello-world"]], "Blahblah": [[239, "Blahblah"], [595, "blahblah"], [1025, "blahblah"]], "Object Oriented?": [[239, "Object-Oriented?"]], "MQTT": [[239, "MQTT"], [305, "mqtt"], [1116, "mqtt"]], "Commandline Arguments": [[239, "Commandline-Arguments"], [409, "commandline-arguments"], [409, "id1"]], "Object Lifetime": [[239, "Object-Lifetime"]], "Boolean, Short Circuit Evaluation": [[239, "Boolean,-Short-Circuit-Evaluation"]], "More String Methods": [[239, "More-String-Methods"], [239, "id1"]], "Dictionary Preview": [[239, "Dictionary-Preview"]], "list: Mutable": [[239, "list:-Mutable"]], "list(): explicit constructor": [[239, "list():-explicit-constructor"]], "tuple: Immutable": [[239, "tuple:-Immutable"]], "dict: Mutable": [[239, "dict:-Mutable"]], "set: Mutable": [[239, "set:-Mutable"]], "List comprehension": [[239, "List-comprehension"]], "DIctionary Comprehension": [[239, "DIctionary-Comprehension"]], "Set Comprehension": [[239, "Set-Comprehension"], [303, "Set-Comprehension"], [313, "Set-Comprehension"], [996, "set-comprehension"]], "max": [[239, "max"]], "for, enumerate()": [[239, "for,-enumerate()"]], "Iteratoren, Generatoren": [[239, "Iteratoren,-Generatoren"]], "Generatoren": [[239, "Generatoren"]], "split und join": [[239, "split-und-join"]], "strip()": [[239, "strip()"]], "dict vs.\u00a0OrderedDict": [[239, "dict-vs.\u00a0OrderedDict"]], "Duck Typing": [[239, "Duck-Typing"], [1012, "duck-typing"]], "Interfaces": [[239, "Interfaces"], [634, "interfaces"]], "Implementation Inheritance": [[239, "Implementation-Inheritance"]], "Method Resolution Order (MRO), and super()": [[239, "Method-Resolution-Order-(MRO),-and-super()"]], "__bases__": [[239, "__bases__"]], "__mro__": [[239, "__mro__"]], "Object Layout (self)": [[239, "Object-Layout-(self)"]], "More from OO": [[239, "More-from-OO"]], "Calling Base Class Constructor (Many Ways)": [[239, "Calling-Base-Class-Constructor-(Many-Ways)"]], "Name Mangling (\u201cprivate\u201d Members)": [[239, "Name-Mangling-(\u201cprivate\u201d-Members)"]], "Yet Another Example From Udemy": [[239, "Yet-Another-Example-From-Udemy"]], "Exception Handling": [[239, "Exception-Handling"], [270, "exception-handling"], [273, "exception-handling"], [278, "exception-handling"], [346, "exception-handling"], [999, "exception-handling"]], "Order of except Clauses": [[239, "Order-of-except-Clauses"]], "finally": [[239, "finally"]], "lambda": [[239, "lambda"]], "map(), filter()": [[239, "map(),-filter()"], [303, "map(),-filter()"]], "Generators, Iteration Protocol": [[239, "Generators,-Iteration-Protocol"]], "Class Variables (as Opposed to Instance Variables)": [[239, "Class-Variables-(as-Opposed-to-Instance-Variables)"]], "Python (2022-03-23, 2022-03-30, 2022-04-19 - 2022-03-21)": [[240, "python-2022-03-23-2022-03-30-2022-04-19-2022-03-21"], [353, "python-2022-03-23-2022-03-30-2022-04-19-2022-03-21"]], "2022-03-23: Basics": [[240, "basics"]], "2022-03-30: Basics": [[240, "id1"]], "2022-04-19, 2022-04-20, 2022-04-21: Advanced": [[240, "advanced"]], "Plan For The Wild Part": [[240, "plan-for-the-wild-part"]], "Programmierung Grundlagen, anhand von Python (2022-04-05 - 2022-04-08)": [[242, "programmierung-grundlagen-anhand-von-python-2022-04-05-2022-04-08"], [353, "programmierung-grundlagen-anhand-von-python-2022-04-05-2022-04-08"]], "Discussion: Flow Charts?": [[242, "discussion-flow-charts"]], "BlahBlah": [[243, "BlahBlah"], [246, "BlahBlah"], [249, "BlahBlah"], [313, "BlahBlah"]], "Interactive": [[243, "Interactive"]], "For Beginners": [[243, "For-Beginners"]], "Not For Beginners?": [[243, "Not-For-Beginners?"]], "Strings, 1st Explanation": [[243, "Strings,-1st-Explanation"]], "Operator Precedence": [[243, "Operator-Precedence"], [246, "Operator-Precedence"], [1031, "operator-precedence"]], "Floating Point Numbers": [[243, "Floating-Point-Numbers"], [1031, "floating-point-numbers"]], "Docstrings": [[243, "Docstrings"], [249, "Docstrings"], [330, "Docstrings"]], "Einschub: String-Vergleich vs.\u00a0Integer-Vergleich": [[243, "Einschub:-String-Vergleich-vs.\u00a0Integer-Vergleich"]], "Random Numbers": [[243, "Random-Numbers"]], "Indexing and Slicing": [[243, "Indexing-and-Slicing"], [291, "Indexing-and-Slicing"], [1037, "indexing-and-slicing"]], "for Loops": [[243, "for-Loops"], [313, "for-Loops"], [360, "for-loops"], [1038, "for-loops"]], "range()": [[243, "range()"], [271, "range()"]], "Filterketten": [[243, "Filterketten"]], "Zen": [[243, "Zen"]], "Compound Datatypes By Example: List, Tuple": [[243, "Compound-Datatypes-By-Example:-List,-Tuple"], [1032, "compound-datatypes-by-example-list-tuple"]], "Compound Datatypes By Example: Dictionary": [[243, "Compound-Datatypes-By-Example:-Dictionary"], [1032, "compound-datatypes-by-example-dictionary"]], "Datensatz als Dictionary?": [[243, "Datensatz-als-Dictionary?"]], "JSON (Javascript Object Notation)": [[243, "JSON-(Javascript-Object-Notation)"]], "Compound Datatypes By Example: Set": [[243, "Compound-Datatypes-By-Example:-Set"], [1032, "compound-datatypes-by-example-set"]], "Das Letzte Beispiel am Letzten Tag": [[243, "Das-Letzte-Beispiel-am-Letzten-Tag"]], "Python Basics (2022-04-25 - 2022-04-27)": [[245, "python-basics-2022-04-25-2022-04-27"], [353, "python-basics-2022-04-25-2022-04-27"]], "Strings und Quotes": [[246, "Strings-und-Quotes"]], "Comments vs.\u00a0Docstrings": [[246, "Comments-vs.\u00a0Docstrings"]], "Variables and Types": [[246, "Variables-and-Types"]], "Swap": [[246, "Swap"]], "Integers are Infinitely long": [[246, "Integers-are-Infinitely-long"]], "Floating Point Comparison": [[246, "Floating-Point-Comparison"]], "Mutability/Immutability": [[246, "Mutability/Immutability"]], "Exercise: Digit To English Word": [[246, "Exercise:-Digit-To-English-Word"]], "Exercise: Determine Maximum of Two Numbers": [[246, "Exercise:-Determine-Maximum-of-Two-Numbers"], [1064, "exercise-determine-maximum-of-two-numbers"], [1074, "exercise-determine-maximum-of-two-numbers"]], "Ranges": [[246, "Ranges"], [711, "ranges"]], "Exercise: Sort out Duplicates": [[246, "Exercise:-Sort-out-Duplicates"]], "Algorithmic Complexity": [[246, "Algorithmic-Complexity"]], "More On Dictionaries": [[246, "More-On-Dictionaries"]], "More On Sets": [[246, "More-On-Sets"]], "eval(), json": [[246, "eval(),-json"]], "Encoding": [[246, "Encoding"], [270, "encoding"], [291, "Encoding"], [307, "Encoding"], [307, "id1"], [335, "encoding"], [1113, "encoding"]], "Python (2022-05-02 - 2022-05-05)": [[248, "python-2022-05-02-2022-05-05"], [353, "python-2022-05-02-2022-05-05"]], "Control Flow and Iteration": [[248, "control-flow-and-iteration"]], "Encoding, Strings, and File I/O": [[248, "encoding-strings-and-file-i-o"]], "Excursion: CAN Communication, OO, Modules": [[248, "excursion-can-communication-oo-modules"]], "Modules": [[248, "modules"], [261, "Modules"], [302, "modules"], [335, "modules"], [706, "modules"], [1007, "modules"]], "CSV, Functions": [[248, "csv-functions"]], "PyPI, Virtual Environments": [[248, "pypi-virtual-environments"]], "Requirements Engineering, Test Driven Development": [[248, "requirements-engineering-test-driven-development"]], "More On DataTypes": [[248, "more-on-datatypes"]], "Random Topics": [[248, "random-topics"]], "Standard Library": [[248, "standard-library"]], "Hello Jupyter Notebook": [[249, "Hello-Jupyter-Notebook"]], "Syntax etc": [[249, "Syntax-etc"]], "Mutability": [[249, "Mutability"], [281, "Mutability"]], "Removing Elements": [[249, "Removing-Elements"], [616, "removing-elements"]], "Nested Lists?": [[249, "Nested-Lists?"]], "while loops, and else": [[249, "while-loops,-and-else"]], "for loops (and else)": [[249, "for-loops-(and-else)"]], "The range() Function, Iterator Protocol": [[249, "The-range()-Function,-Iterator-Protocol"]], "Encoding, and String": [[249, "Encoding,-and-String"]], "Regular Expression": [[249, "Regular-Expression"]], "f-Strings (since Python 3.6 !!)": [[249, "f-Strings-(since-Python-3.6-!!)"]], "Tuples Containing Only One Element": [[249, "Tuples-Containing-Only-One-Element"]], "Iterables, Lists, and the itertools Modules": [[249, "Iterables,-Lists,-and-the-itertools-Modules"]], "itertools.chain()": [[249, "itertools.chain()"]], "Destructor?": [[249, "Destructor?"]], "Tuple Unpacking on Dictionaries": [[249, "Tuple-Unpacking-on-Dictionaries"]], "Python Advanced (2022-05-16 - 2022-05-18)": [[251, "python-advanced-2022-05-16-2022-05-18"], [353, "python-advanced-2022-05-16-2022-05-18"]], "Project Management": [[251, "project-management"], [302, "project-management"], [342, "project-management"], [343, "project-management"], [347, "project-management"]], "Unit Testing, Test Driven Development": [[251, "unit-testing-test-driven-development"]], "Object Priented Programming": [[251, "object-priented-programming"]], "OO: next exercise (CSV as always \ud83d\ude44)": [[251, "oo-next-exercise-csv-as-always-rolling-eyes"]], "Exercise: Exception Handling": [[251, "exercise-exception-handling"]], "Standesregister nach SQLite3": [[251, "standesregister-nach-sqlite3"]], "XML/Element Tree": [[251, "xml-element-tree"]], "Projektabschlusstag": [[251, "projektabschlusstag"]], "Basic Python": [[251, "basic-python"], [1162, "basic-python"]], "Assert": [[252, "Assert"]], "The id() function": [[252, "The-id()-function"]], "class Person": [[252, "class-Person"]], "Functions That Do Not Return Anything": [[252, "Functions-That-Do-Not-Return-Anything"]], "Classes, Attributes, und so (Dictionaries Everywhere!)": [[252, "Classes,-Attributes,-und-so-(Dictionaries-Everywhere!)"]], "Globale, lokale, und Class Variablen": [[252, "Globale,-lokale,-und-Class-Variablen"]], "Defining my Own Exceptions": [[252, "Defining-my-Own-Exceptions"]], "Dictionary Lookup, keys() etc.": [[252, "Dictionary-Lookup,-keys()-etc."]], "Integers, Strings, und so": [[252, "Integers,-Strings,-und-so"]], "Vorbesprechung 2022-05-11": [[254, "vorbesprechung-2022-05-11"]], "Legende": [[254, "legende"]], "Neuerungen in C++ seit 2011": [[254, "neuerungen-in-c-seit-2011"]], "Neuerungen in C++ 14": [[254, "neuerungen-in-c-14"]], "Neuerungen in C++ 17": [[254, "neuerungen-in-c-17"]], "Neuerungen in C++ 20 (Ausblick)": [[254, "neuerungen-in-c-20-ausblick"]], "C++: A New Language Starting In 2011": [[255, "c-a-new-language-starting-in-2011"], [256, "c-a-new-language-starting-in-2011"]], "Metadata": [[255, "metadata"], [256, "metadata"], [258, "metadata"], [884, "metadata"]], "Introduction": [[255, "introduction"], [256, "introduction"], [258, "introduction"], [277, "introduction"], [278, "introduction"], [356, "introduction"], [435, "introduction"], [466, "introduction"], [561, "introduction"], [658, "introduction"], [717, "introduction"], [802, "introduction"], [999, "introduction"], [373, "introduction"]], "Pythonicity (Thank You: Readablility and Writability)": [[255, "pythonicity-thank-you-readablility-and-writability"], [256, "pythonicity-thank-you-readablility-and-writability"], [258, "pythonicity-thank-you-readablility-and-writability"]], "Range Based for Loops": [[255, "range-based-for-loops"], [256, "range-based-for-loops"], [258, "range-based-for-loops"], [315, "range-based-for-loops"]], "Tuple Unpacking (err, Structured Binding)": [[255, "tuple-unpacking-err-structured-binding"], [256, "tuple-unpacking-err-structured-binding"], [258, "tuple-unpacking-err-structured-binding"], [315, "tuple-unpacking-err-structured-binding"]], "Duck Typing (err, auto) Without A Duck": [[255, "duck-typing-err-auto-without-a-duck"], [256, "duck-typing-err-auto-without-a-duck"], [258, "duck-typing-err-auto-without-a-duck"], [315, "duck-typing-err-auto-without-a-duck"]], "Things That Simply Deserved Fixing Since Ages": [[255, "things-that-simply-deserved-fixing-since-ages"], [256, "things-that-simply-deserved-fixing-since-ages"], [258, "things-that-simply-deserved-fixing-since-ages"]], "Brace Initialization": [[255, "brace-initialization"], [256, "brace-initialization"], [258, "brace-initialization"], [315, "brace-initialization"], [316, "brace-initialization"]], "New OO keywords: override, final, default, delete": [[255, "new-oo-keywords-override-final-default-delete"], [256, "new-oo-keywords-override-final-default-delete"], [258, "new-oo-keywords-override-final-default-delete"], [315, "new-oo-keywords-override-final-default-delete"]], "Strongly Typed enum": [[255, "strongly-typed-enum"], [256, "strongly-typed-enum"], [258, "strongly-typed-enum"], [315, "strongly-typed-enum"], [661, "strongly-typed-enum"]], "Delegating Constructor": [[255, "delegating-constructor"], [256, "delegating-constructor"], [258, "delegating-constructor"], [315, "delegating-constructor"], [666, "delegating-constructor"]], "nullptr": [[255, "nullptr"], [256, "nullptr"], [258, "nullptr"], [315, "nullptr"], [674, "nullptr"]], "Smart Pointers": [[255, "smart-pointers"], [256, "smart-pointers"], [258, "smart-pointers"], [278, "smart-pointers"], [538, "smart-pointers"], [316, "smart-pointers"]], "Moving, \u201cRValue References\u201d": [[255, "moving-rvalue-references"], [256, "moving-rvalue-references"]], "Functions (std::bind<>, std::function<>, Lambdas)": [[255, "functions-std-bind-std-function-lambdas"], [256, "functions-std-bind-std-function-lambdas"], [258, "functions-std-bind-std-function-lambdas"]], "Work Environment": [[256, "work-environment"], [258, "work-environment"], [276, "work-environment"], [277, "work-environment"], [278, "work-environment"], [342, "work-environment"]], "Skeleton Project": [[256, "skeleton-project"], [258, "skeleton-project"], [580, "skeleton-project"]], "Linux Basics (2022-10-03 - 2022-10-05)": [[257, "linux-basics-2022-10-03-2022-10-05"], [353, "linux-basics-2022-10-03-2022-10-05"]], "C++: A New Language Starting In 2011 (2022-10-11 - 2022-10-13)": [[258, "c-a-new-language-starting-in-2011-2022-10-11-2022-10-13"], [353, "c-a-new-language-starting-in-2011-2022-10-11-2022-10-13"]], "Moving, \u201cRValue References\u201d, And Perfect Forwarding": [[258, "moving-rvalue-references-and-perfect-forwarding"]], "News in C++20 (2023-06-13)": [[258, "news-in-c-20-2023-06-13"]], "Coroutines and C++23 Generators": [[258, "coroutines-and-c-23-generators"]], "Ranges And Views": [[258, "ranges-and-views"]], "Concepts": [[258, "concepts"], [315, "concepts"], [676, "concepts"]], "Design- and Architectural Patterns With C++ (2022-10-24 - 2022-10-26)": [[259, "design-and-architectural-patterns-with-c-2022-10-24-2022-10-26"], [353, "design-and-architectural-patterns-with-c-2022-10-24-2022-10-26"]], "Monday": [[259, "monday"]], "Tuesday": [[259, "tuesday"]], "Wednesday": [[259, "wednesday"]], "Python: Tour-De-Force (2022-11-07 - 2022-11-10, 2022-12-01)": [[260, "python-tour-de-force-2022-11-07-2022-11-10-2022-12-01"]], "Up Front: Project Management": [[260, "up-front-project-management"], [279, "up-front-project-management"], [301, "up-front-project-management"]], "Object Oriented Programming: Classes": [[260, "object-oriented-programming-classes"]], "Exercise Series: CSV": [[260, "exercise-series-csv"]], "Missing Pieces: Encoding, Unit Testing": [[260, "missing-pieces-encoding-unit-testing"]], "Exercise Series: CSV, JSON": [[260, "exercise-series-csv-json"]], "Iteration, Generators": [[260, "iteration-generators"]], "Going Dynamic: type(), exec()": [[260, "going-dynamic-type-exec"]], "More OO: Inheritance, Abstract Base Classes": [[260, "more-oo-inheritance-abstract-base-classes"]], "Group Project Kickoff": [[260, "group-project-kickoff"], [280, "group-project-kickoff"], [302, "group-project-kickoff"], [305, "group-project-kickoff"]], "Data Structures Recap": [[260, "data-structures-recap"]], "Miscellaneous Livehacking": [[260, "miscellaneous-livehacking"]], "Function Arguments, Closures, Decorators": [[260, "function-arguments-closures-decorators"], [295, "function-arguments-closures-decorators"]], "Exceptions, with": [[260, "exceptions-with"], [295, "exceptions-with"], [298, "exceptions-with"]], "Package Management": [[260, "package-management"]], "Videos": [[260, "videos"], [306, "videos"]], "Beginner": [[260, "beginner"], [284, "beginner"]], "Advanced": [[260, "advanced"], [284, "advanced"]], "Fun": [[260, "fun"]], "Python (2022-10-17)": [[261, "Python-(2022-10-17)"]], "Tuple Unpacking, Lists Iteration, And Such": [[261, "Tuple-Unpacking,-Lists-Iteration,-And-Such"]], "Variables, Types": [[261, "Variables,-Types"]], "Immutable? References?": [[261, "Immutable?-References?"]], "And range()?": [[261, "And-range()?"]], "More About Dictionaries": [[261, "More-About-Dictionaries"], [261, "id1"], [264, "More-About-Dictionaries"], [291, "More-About-Dictionaries"], [313, "More-About-Dictionaries"], [1048, "more-about-dictionaries"]], "More About Lists": [[261, "More-About-Lists"], [264, "More-About-Lists"], [291, "More-About-Lists"], [313, "More-About-Lists"], [1047, "more-about-lists"]], "Python (2022-11-16 - 2022-11-18)": [[263, "python-2022-11-16-2022-11-18"], [264, "Python-(2022-11-16---2022-11-18)"], [353, "python-2022-11-16-2022-11-18"]], "Control Flow, Sequences, Iteration": [[263, "control-flow-sequences-iteration"], [270, "control-flow-sequences-iteration"], [273, "control-flow-sequences-iteration"], [283, "control-flow-sequences-iteration"], [284, "control-flow-sequences-iteration"], [289, "control-flow-sequences-iteration"], [290, "control-flow-sequences-iteration"], [290, "id2"], [311, "control-flow-sequences-iteration"], [312, "control-flow-sequences-iteration"], [319, "control-flow-sequences-iteration"]], "More Datatypes": [[263, "more-datatypes"], [270, "more-datatypes"], [273, "more-datatypes"], [283, "more-datatypes"], [284, "more-datatypes"], [284, "id2"], [289, "more-datatypes"], [290, "more-datatypes"], [311, "more-datatypes"], [312, "more-datatypes"], [319, "more-datatypes"], [358, "more-datatypes"]], "Exercise Series: CSV Files": [[263, "exercise-series-csv-files"], [283, "exercise-series-csv-files"], [284, "exercise-series-csv-files"], [289, "exercise-series-csv-files"], [290, "exercise-series-csv-files"], [311, "exercise-series-csv-files"], [312, "exercise-series-csv-files"], [319, "exercise-series-csv-files"]], "Advanced Language Features": [[263, "advanced-language-features"], [283, "advanced-language-features"], [284, "advanced-language-features"], [289, "advanced-language-features"], [421, "advanced-language-features"]], "Noob Exercises": [[263, "noob-exercises"]], "Object Oriented": [[264, "Object-Oriented"]], "Lists and Tuples": [[264, "Lists-and-Tuples"]], "for, and Iteration, and Generators": [[264, "for,-and-Iteration,-and-Generators"]], "Lists, Dictionaries, Generators, Constructors": [[264, "Lists,-Dictionaries,-Generators,-Constructors"]], "And Lists? Mutable!": [[264, "And-Lists?-Mutable!"]], "Tuples?": [[264, "Tuples?"]], "set": [[264, "set"]], "More About Sets": [[264, "More-About-Sets"], [291, "More-About-Sets"], [1049, "more-about-sets"]], "Comprehensions (List, Dictionary, Set)": [[264, "Comprehensions-(List,-Dictionary,-Set)"], [313, "Comprehensions-(List,-Dictionary,-Set)"], [996, "comprehensions-list-dictionary-set"]], "Generator Expressions": [[264, "Generator-Expressions"]], "eval and exec": [[264, "eval-and-exec"]], "Linux Basics (2023-01-23 - 2023-01-26)": [[266, "linux-basics-2023-01-23-2023-01-26"], [353, "linux-basics-2023-01-23-2023-01-26"]], "Embedded Linux Systems Programming (2023-02-13 - 2023-02-17)": [[267, "embedded-linux-systems-programming-2023-02-13-2023-02-17"], [353, "embedded-linux-systems-programming-2023-02-13-2023-02-17"]], "WSL For Core Linux Topics": [[267, "wsl-for-core-linux-topics"]], "Cross Development For Hardware Topics": [[267, "cross-development-for-hardware-topics"]], "Day 1: Overview": [[267, "day-1-overview"]], "Introductory Live Hacking": [[267, "introductory-live-hacking"]], "The Shell": [[267, "the-shell"]], "Processes Quick Walk-Through": [[267, "processes-quick-walk-through"]], "Permissions": [[267, "permissions"]], "Development: CMake Quick Intro, And Git Quick Intro": [[267, "development-cmake-quick-intro-and-git-quick-intro"]], "UART": [[267, "uart"]], "SUSI": [[267, "susi"]], "Secure Shell (SSH)": [[267, "secure-shell-ssh"]], "Miscellaneous Hardware": [[267, "miscellaneous-hardware"]], "Group Exercise": [[267, "group-exercise"]], "Untold": [[267, "untold"], [277, "untold"], [280, "untold"]], "More From The Commandline": [[267, "more-from-the-commandline"]], "Multithreading (And C++)": [[267, "multithreading-and-c"]], "Whetting Your Appetite (Jupyter Notebook)": [[268, "Whetting-Your-Appetite-(Jupyter-Notebook)"]], "Filter in Pandas": [[268, "Filter-in-Pandas"]], "Copy vs Reference": [[268, "Copy-vs-Reference"]], "Immutable": [[268, "Immutable"]], "String": [[268, "String"]], "Regex": [[268, "Regex"]], "Testing": [[269, "testing"], [120, "testing"], [122, "testing"], [125, "testing"], [126, "testing"], [130, "testing"], [115, "testing"], [119, "testing"]], "Whetting Your Appetite (Livehacking Demo)": [[269, "whetting-your-appetite-livehacking-demo"]], "Pipeline Driver": [[269, "pipeline-driver"]], "Virtual Environment Setup": [[269, "virtual-environment-setup"]], "Filter: Add Category: card-payment": [[269, "filter-add-category-card-payment"]], "Filter: Select Uncategorized": [[269, "filter-select-uncategorized"]], "More Categories": [[269, "more-categories"]], "Python For SAP Developers (2023-03-13 - 2023-03-15)": [[270, "python-for-sap-developers-2023-03-13-2023-03-15"], [353, "python-for-sap-developers-2023-03-13-2023-03-15"]], "Day 1 (Basics)": [[270, "day-1-basics"]], "Demo": [[270, "demo"]], "Day 2 (Basics, Continued)": [[270, "day-2-basics-continued"]], "Pandas": [[270, "pandas"], [271, "Pandas"], [273, "pandas"], [277, "pandas"], [302, "pandas"], [1120, "pandas"]], "Hacking About On A SAP Test Dataset": [[270, "hacking-about-on-a-sap-test-dataset"], [274, "hacking-about-on-a-sap-test-dataset"]], "Untold (From Original Agenda)": [[270, "untold-from-original-agenda"]], "OO Introduction": [[270, "oo-introduction"], [273, "oo-introduction"]], "Context Managers (Automatic Cleanup)": [[270, "context-managers-automatic-cleanup"], [273, "context-managers-automatic-cleanup"]], "Iteration, Generators, Comprehensions": [[270, "iteration-generators-comprehensions"], [273, "iteration-generators-comprehensions"]], "Decorators, and Related Topics": [[270, "decorators-and-related-topics"], [273, "decorators-and-related-topics"]], "Machine Learning: Pandas, NumPy, And Algorithms": [[270, "machine-learning-pandas-numpy-and-algorithms"]], "2023-03-13": [[271, "2023-03-13"]], "Comment vs Docstring": [[271, "Comment-vs-Docstring"]], "Mutable? Immutable?": [[271, "Mutable?-Immutable?"]], "Lists": [[271, "Lists"], [271, "id2"], [285, "Lists"]], "Tuples": [[271, "Tuples"]], "DataType Conversiosn": [[271, "DataType-Conversiosn"]], "String, File IO Exercise": [[271, "String,-File-IO-Exercise"]], "Python For SAP Developers (Jupyter Notebook)": [[272, "python-for-sap-developers-jupyter-notebook"]], "Original Agenda: Python For SAP Developers (2023-03-13 - 2023-03-15)": [[273, "original-agenda-python-for-sap-developers-2023-03-13-2023-03-15"]], "Day 1: Basics": [[273, "day-1-basics"], [306, "day-1-basics"]], "Day 2: Outlook Into Advanced Python": [[273, "day-2-outlook-into-advanced-python"]], "Day 3: Domain Specifics": [[273, "day-3-domain-specifics"]], "NumPy": [[273, "numpy"], [302, "numpy"]], "Some Usecases On A Test Dataset From SAP": [[275, "Some-Usecases-On-A-Test-Dataset-From-SAP"]], "Dropping Columns That Contain Only NaN Values": [[275, "Dropping-Columns-That-Contain-Only-NaN-Values"]], "DataFrame.isna()": [[275, "DataFrame.isna()"]], "DataFrame.all() (and any())": [[275, "DataFrame.all()-(and-any())"]], "Column Selection": [[275, "Column-Selection"]], "Dropping Columns": [[275, "Dropping-Columns"]], "Fixing Date Values/Columns, And Operating With Date And Time": [[275, "Fixing-Date-Values/Columns,-And-Operating-With-Date-And-Time"]], "pandas.to_datetime()": [[275, "pandas.to_datetime()"]], "Converting The Entire DateDATE Column To A Workable Type (And Working With It)": [[275, "Converting-The-Entire-DateDATE-Column-To-A-Workable-Type-(And-Working-With-It)"]], "Conversion": [[275, "Conversion"]], "Usage: A Filter": [[275, "Usage:-A-Filter"]], "Modify Rows: Increase All Prices Of One Particular Store By 10%": [[275, "Modify-Rows:-Increase-All-Prices-Of-One-Particular-Store-By-10%"]], "Filter Readability: Combining Filters": [[275, "Filter-Readability:-Combining-Filters"]], "C++ For Embedded Developers (2023-03-20 - 2023-03-23)": [[276, "c-for-embedded-developers-2023-03-20-2023-03-23"]], "Preferred: Ubuntu under Windows (WSL)": [[276, "preferred-ubuntu-under-windows-wsl"], [278, "preferred-ubuntu-under-windows-wsl"]], "Unsupported Environments": [[276, "unsupported-environments"]], "Skeleton Project Setup": [[276, "skeleton-project-setup"], [278, "skeleton-project-setup"]], "Classes, Objects, Methods": [[276, "classes-objects-methods"]], "Heavy Weight OO \ud83d\udcaa": [[276, "heavy-weight-oo-muscle"], [278, "heavy-weight-oo-muscle"]], "Resource Management Pitfalls": [[276, "resource-management-pitfalls"]], "R-Value References/Moving, And Managed Pointers": [[276, "r-value-references-moving-and-managed-pointers"]], "A Little Concurrency": [[276, "a-little-concurrency"]], "Untold So Far": [[276, "untold-so-far"]], "C++ Standard Library": [[276, "c-standard-library"]], "Miscellaneous Topics": [[276, "miscellaneous-topics"]], "Clean Code Development With Python (2023-03-28 - 2023-03-29)": [[277, "clean-code-development-with-python-2023-03-28-2023-03-29"]], "Clean Code?": [[277, "clean-code"], [279, "clean-code"], [280, "clean-code"]], "Demo Hacking": [[277, "demo-hacking"]], "Python Development: Select Topics": [[277, "python-development-select-topics"]], "Built-In Types: Facts": [[277, "built-in-types-facts"]], "for Loops, And The Iterator Protocol": [[277, "for-loops-and-the-iterator-protocol"]], "Day 2: Clean Code? (Software Development: A Craft)": [[277, "day-2-clean-code-software-development-a-craft"]], "Closures, And Function Parameters": [[277, "closures-and-function-parameters"]], "Generators (Again), yield Fixtures, And yield Context Managers": [[277, "generators-again-yield-fixtures-and-yield-context-managers"]], "Decorators (The Ominous @)": [[277, "decorators-the-ominous"]], "Modules And Packages": [[277, "modules-and-packages"], [301, "modules-and-packages"]], "Design Patterns": [[277, "design-patterns"]], "C++ For Embedded Developers (2023-04-18 - 2023-04-20)": [[278, "c-for-embedded-developers-2023-04-18-2023-04-20"], [353, "c-for-embedded-developers-2023-04-18-2023-04-20"]], "Some Details": [[278, "some-details"]], "Standard Template Library": [[278, "standard-template-library"], [628, "standard-template-library"]], "Warm-Up": [[278, "warm-up"]], "Sensor Exercise, Resolved": [[278, "sensor-exercise-resolved"]], "OO, Cont\u2019d": [[278, "oo-cont-d"]], "Smart Pointers (Continued)": [[278, "smart-pointers-continued"]], "Exercises: Containers And Algorithms": [[278, "exercises-containers-and-algorithms"]], "Exercises: OO And Interfaces": [[278, "exercises-oo-and-interfaces"]], "Agenda: Python Advanced (2023-04-24 - 2023-04-26)": [[279, "agenda-python-advanced-2023-04-24-2023-04-26"]], "Day 1: Python Inside Out": [[279, "day-1-python-inside-out"], [280, "day-1-python-inside-out"]], "Exercise Prerequisites": [[279, "exercise-prerequisites"], [301, "exercise-prerequisites"]], "References And Other Pitfalls": [[279, "references-and-other-pitfalls"]], "Looping Constructs (With An Emphasis On The else Clause)": [[279, "looping-constructs-with-an-emphasis-on-the-else-clause"], [301, "looping-constructs-with-an-emphasis-on-the-else-clause"], [305, "looping-constructs-with-an-emphasis-on-the-else-clause"]], "Closures, Decorators And More": [[279, "closures-decorators-and-more"], [280, "closures-decorators-and-more"], [301, "closures-decorators-and-more"], [305, "closures-decorators-and-more"]], "Dynamic Features": [[279, "dynamic-features"], [280, "dynamic-features"], [281, "Dynamic-Features"], [301, "dynamic-features"], [305, "dynamic-features"]], "Error Handling And Recovery": [[279, "error-handling-and-recovery"], [280, "error-handling-and-recovery"], [301, "error-handling-and-recovery"], [302, "error-handling-and-recovery"], [305, "error-handling-and-recovery"]], "Miscellaneous Threading": [[279, "miscellaneous-threading"], [280, "miscellaneous-threading"]], "Day 2: Clean Code (In A Broader Sense), Group Project Kickoff": [[279, "day-2-clean-code-in-a-broader-sense-group-project-kickoff"]], "Group Project: Discussion": [[279, "group-project-discussion"]], "Design Patterns Overview": [[279, "design-patterns-overview"], [280, "design-patterns-overview"]], "Day 3: Group Project": [[279, "day-3-group-project"], [280, "day-3-group-project"]], "Python Advanced (2023-04-24 - 2023-04-26)": [[280, "python-advanced-2023-04-24-2023-04-26"], [353, "python-advanced-2023-04-24-2023-04-26"]], "Day 2: Object Oriented Programming, And Miscellaneous Discussion": [[280, "day-2-object-oriented-programming-and-miscellaneous-discussion"]], "Morning Opening": [[280, "morning-opening"]], "Object Oriented Programming (Continued)": [[280, "object-oriented-programming-continued"]], "Project Setup (IDE Usage?)": [[280, "project-setup-ide-usage"]], "Continue Hacking": [[280, "continue-hacking"]], "Test Driven Development, pytest": [[280, "test-driven-development-pytest"]], "Jupyter Notebook: Python Advanced (2023-04-24 - 2023-04-26)": [[281, "Jupyter-Notebook:-Python-Advanced-(2023-04-24---2023-04-26)"]], "is vs.\u00a0==": [[281, "is-vs.\u00a0=="]], "Compound DataTypes": [[281, "Compound-DataTypes"]], "class": [[281, "class"]], "Jupyter Notebook (Structure): Python Advanced (2023-04-24 - 2023-04-26)": [[282, "jupyter-notebook-structure-python-advanced-2023-04-24-2023-04-26"]], "Agenda: Python Basics (2023-05-15 - 2023-05-17)": [[283, "agenda-python-basics-2023-05-15-2023-05-17"]], "Python Basics (2023-05-15 - 2023-05-17)": [[284, "python-basics-2023-05-15-2023-05-17"], [285, "Python-Basics-(2023-05-15---2023-05-17)"], [353, "python-basics-2023-05-15-2023-05-17"]], "Morning Awakening": [[284, "morning-awakening"]], "A Bit Of venv, A Bit Of pip": [[284, "a-bit-of-venv-a-bit-of-pip"]], "Modules from Standard Library": [[284, "modules-from-standard-library"], [1100, "modules-from-standard-library"]], "Immutable vs.\u00a0Mutable": [[285, "Immutable-vs.\u00a0Mutable"]], "The range Function": [[285, "The-range-Function"], [1039, "the-range-function"]], "Lambda, And Functional Programming Tools": [[285, "Lambda,-And-Functional-Programming-Tools"]], "Agenda: Linux Basics (2023-05-23 - 2023-05-25)": [[287, "agenda-linux-basics-2023-05-23-2023-05-25"]], "Linux Basics (2023-05-23 - 2023-05-25)": [[288, "linux-basics-2023-05-23-2023-05-25"], [353, "linux-basics-2023-05-23-2023-05-25"]], "Introduction: Concepts and Terminology": [[288, "introduction-concepts-and-terminology"], [836, "introduction-concepts-and-terminology"]], "The Shell (Bash - \u201cBourne Again Shell\u201d)": [[288, "the-shell-bash-bourne-again-shell"], [288, "id1"], [882, "the-shell-bash-bourne-again-shell"]], "Tools: Inspecting Text Files": [[288, "tools-inspecting-text-files"], [892, "tools-inspecting-text-files"]], "File System Permissions": [[288, "file-system-permissions"], [288, "id2"], [857, "file-system-permissions"]], "Morning Wakeup": [[288, "morning-wakeup"], [290, "morning-wakeup"], [316, "morning-wakeup"]], "I/O Redirection And Pipes": [[288, "i-o-redirection-and-pipes"], [843, "i-o-redirection-and-pipes"]], "Archiving and Compression": [[288, "archiving-and-compression"], [825, "archiving-and-compression"], [827, "archiving-and-compression"]], "Networking": [[288, "networking"]], "Processes And Scheduling": [[288, "processes-and-scheduling"]], "SSH: Secure Shell": [[288, "ssh-secure-shell"], [914, "ssh-secure-shell"]], "Shell Scripting (at least some of it)": [[288, "shell-scripting-at-least-some-of-it"]], "Agenda: Python Basics (2023-06-20 - 2023-06-22)": [[289, "agenda-python-basics-2023-06-20-2023-06-22"]], "Python Basics (2023-06-20 - 2023-06-22)": [[290, "python-basics-2023-06-20-2023-06-22"], [291, "Python-Basics-(2023-06-20---2023-06-22)"], [353, "python-basics-2023-06-20-2023-06-22"]], "Day2": [[290, "day2"]], "File I/O, And Encoding": [[290, "file-i-o-and-encoding"]], "Python Videos": [[290, "python-videos"]], "NumPy, Pandas, Matplotlib": [[290, "numpy-pandas-matplotlib"]], "DataTypes": [[291, "DataTypes"], [313, "DataTypes"]], "(Im)mutable?": [[291, "(Im)mutable?"]], "Exercise: Mixed List, Interactive Interpreter": [[291, "Exercise:-Mixed-List,-Interactive-Interpreter"]], "len(), range(), for": [[291, "len(),-range(),-for"]], "Generators, yield": [[291, "Generators,-yield"]], "Other -ables: Callable": [[291, "Other--ables:-Callable"]], "exec() (and eval())": [[291, "exec()-(and-eval())"]], "Formatting (f-Strings)": [[291, "Formatting-(f-Strings)"]], "Python Basics (Jupyter Notebook)": [[292, "python-basics-jupyter-notebook"], [314, "python-basics-jupyter-notebook"]], "Agenda: CMake (2023-07-03)": [[293, "agenda-cmake-2023-07-03"]], "Toolchain Introduction": [[293, "toolchain-introduction"], [309, "toolchain-introduction"], [1155, "toolchain-introduction"]], "Project Structure, Dependencies": [[293, "project-structure-dependencies"], [309, "project-structure-dependencies"], [1155, "project-structure-dependencies"]], "External Dependencies": [[293, "external-dependencies"], [309, "external-dependencies"], [448, "external-dependencies"], [1155, "external-dependencies"]], "Code Generators": [[293, "code-generators"], [309, "code-generators"], [1155, "code-generators"]], "Automatic Testing": [[293, "automatic-testing"], [309, "automatic-testing"], [1155, "automatic-testing"]], "Installation And Deployment": [[293, "installation-and-deployment"], [309, "installation-and-deployment"], [1155, "installation-and-deployment"]], "CMake: An Introduction (2023-07-18)": [[294, "cmake-an-introduction-2023-07-18"], [353, "cmake-an-introduction-2023-07-18"]], "Python Advanced (2023-09-25 - 2023-09-27)": [[295, "python-advanced-2023-09-25-2023-09-27"], [296, "Python-Advanced-(2023-09-25---2023-09-27)"], [353, "python-advanced-2023-09-25-2023-09-27"]], "Recap Of Python Basics Course (Before Summer)": [[295, "recap-of-python-basics-course-before-summer"], [298, "recap-of-python-basics-course-before-summer"]], "Project Management: Requirements, Sandboxing, Testing": [[295, "project-management-requirements-sandboxing-testing"], [298, "project-management-requirements-sandboxing-testing"]], "Into The Wild: Group Project Kickoff": [[295, "into-the-wild-group-project-kickoff"], [298, "into-the-wild-group-project-kickoff"]], "OO Design: Duck Typing, Inheritance, And Abstract Base Classes": [[295, "oo-design-duck-typing-inheritance-and-abstract-base-classes"], [298, "oo-design-duck-typing-inheritance-and-abstract-base-classes"]], "Package And Dependency Management": [[295, "package-and-dependency-management"]], "Equality vs.\u00a0Identity": [[296, "Equality-vs.\u00a0Identity"]], "Functions Are Objects": [[296, "Functions-Are-Objects"]], "Python Advanced, Jupyter Notebook (2023-09-25 - 2023-09-27)": [[297, "python-advanced-jupyter-notebook-2023-09-25-2023-09-27"], [300, "python-advanced-jupyter-notebook-2023-09-25-2023-09-27"]], "Python Advanced (2023-10-09 - 2023-10-11)": [[298, "python-advanced-2023-10-09-2023-10-11"], [353, "python-advanced-2023-10-09-2023-10-11"]], "Classes: Basics": [[298, "classes-basics"]], "Classes: More": [[298, "classes-more"]], "Spoiler: Group Project Outcome": [[298, "spoiler-group-project-outcome"]], "More About Functions": [[298, "more-about-functions"]], "Python Advanced (2023-10-09 - 2023-10-09)": [[299, "Python-Advanced-(2023-10-09---2023-10-09)"]], "Type Annotations": [[299, "Type-Annotations"]], "Agenda: Python Advanced (2023-10-24 - 2023-10-26)": [[301, "agenda-python-advanced-2023-10-24-2023-10-26"]], "Day 1: Basic Python": [[301, "day-1-basic-python"], [305, "day-1-basic-python"]], "Datatypes, Datatypes": [[301, "datatypes-datatypes"], [305, "datatypes-datatypes"]], "Day 2: Advanced Python Features": [[301, "day-2-advanced-python-features"]], "Multiprocessing": [[301, "multiprocessing"]], "Day 3: Into The Wild": [[301, "day-3-into-the-wild"]], "Data Science Topics": [[301, "data-science-topics"], [305, "data-science-topics"]], "Group Project: An Idea": [[301, "group-project-an-idea"]], "Python Advanced (2023-10-24 - 2023-10-26)": [[302, "python-advanced-2023-10-24-2023-10-26"], [353, "python-advanced-2023-10-24-2023-10-26"]], "Python Basics Recap": [[302, "python-basics-recap"], [303, "Python-Basics-Recap"]], "The Very Basics": [[302, "the-very-basics"]], "range(), And Iteration In General": [[302, "range-and-iteration-in-general"]], "Leftovers From Yesterday": [[302, "leftovers-from-yesterday"]], "Object Oriented Programming, Continued": [[302, "object-oriented-programming-continued"], [302, "id1"]], "Group Project, OO-ified": [[302, "group-project-oo-ified"]], "Decorator Toolcase: *args, **kwargs": [[302, "decorator-toolcase-args-kwargs"]], "Morning Greeting": [[302, "morning-greeting"]], "Decorator Toolcase, Continued (Including Function Scoping and global)": [[302, "decorator-toolcase-continued-including-function-scoping-and-global"]], "Sensor Implementation That Receives UDP Datagrams": [[302, "sensor-implementation-that-receives-udp-datagrams"]], "CompositeSink": [[302, "compositesink"]], "MQTT Sink Implementation": [[302, "mqtt-sink-implementation"]], "Timestamps?": [[302, "timestamps"]], "Jupyter Notebook: Python Advanced": [[303, "Jupyter-Notebook:-Python-Advanced"]], "Jupyter Notebook Explanation": [[303, "Jupyter-Notebook-Explanation"]], "Integers and Floats": [[303, "Integers-and-Floats"]], "Strings: String Methods, Docstrings, \u2026": [[303, "Strings:-String-Methods,-Docstrings,-\u2026"]], "Python Documentation Overview: https://docs.python.org/3/": [[303, "Python-Documentation-Overview:-https://docs.python.org/3/"]], "assert": [[303, "assert"]], "Iteration, Generators, Iterator Protocol": [[303, "Iteration,-Generators,-Iterator-Protocol"]], "AAARGHHH": [[303, "AAARGHHH"]], "Generator Expresssions": [[303, "Generator-Expresssions"]], "Dictionary Comprehension": [[303, "Dictionary-Comprehension"], [313, "Dictionary-Comprehension"], [996, "dictionary-comprehension"]], "Functional Tools": [[303, "Functional-Tools"]], "filter()": [[303, "filter()"], [313, "filter()"]], "Jupyter Notebook (Structure): Python Advanced (2023-10-24 - 2023-10-26)": [[304, "jupyter-notebook-structure-python-advanced-2023-10-24-2023-10-26"]], "Agenda: Python Advanced (2023-11-22 - 2023-11-24)": [[305, "agenda-python-advanced-2023-11-22-2023-11-24"]], "Exercise Prerequisites: The Commandline": [[305, "exercise-prerequisites-the-commandline"]], "Day 2: Group Project Kickoff, Advanced Topics": [[305, "day-2-group-project-kickoff-advanced-topics"]], "Project Management, Test Driven Development": [[305, "project-management-test-driven-development"]], "Day 3: More Advanced Topics (All The Rest, And More)": [[305, "day-3-more-advanced-topics-all-the-rest-and-more"]], "CSV And Databases": [[305, "csv-and-databases"]], "Python Advanced (2023-11-22 - 2023-22-24)": [[306, "python-advanced-2023-11-22-2023-22-24"]], "Day 2: Group Project, And Object Oriented Programming": [[306, "day-2-group-project-and-object-oriented-programming"]], "Day 3: OO, Hacking, Python Specials": [[306, "day-3-oo-hacking-python-specials"]], "Jupyter Notebook: Python Advanced (2023-11-22 - 2023-11-24)": [[307, "Jupyter-Notebook:-Python-Advanced-(2023-11-22---2023-11-24)"]], "Assignment, And IDs": [[307, "Assignment,-And-IDs"]], "(Im)Mutability": [[307, "(Im)Mutability"]], "Operator Overloading (Basics)": [[307, "Operator-Overloading-(Basics)"]], "And Iterables? The Iterator Protocol!": [[307, "And-Iterables?-The-Iterator-Protocol!"]], "Methods": [[307, "Methods"], [572, "methods"], [719, "methods"], [720, "methods"], [721, "methods"], [1017, "methods"]], "numpy, pandas, matplotlib": [[307, "numpy,-pandas,-matplotlib"]], "Jupyter Notebook (Structure): Python Advanced (2023-11-22 - 2023-11-24)": [[308, "jupyter-notebook-structure-python-advanced-2023-11-22-2023-11-24"]], "Agenda: CMake (2023-11-27)": [[309, "agenda-cmake-2023-11-27"]], "CMake: An Introduction (2023-11-27)": [[310, "cmake-an-introduction-2023-11-27"], [353, "cmake-an-introduction-2023-11-27"]], "Agenda: Python Basics (2023-11-29 - 2023-12-01)": [[311, "agenda-python-basics-2023-11-29-2023-12-01"]], "Python Basics (2023-11-29 - 2023-12-01)": [[312, "python-basics-2023-11-29-2023-12-01"], [313, "Python-Basics-(2023-11-29---2023-12-01)"], [353, "python-basics-2023-11-29-2023-12-01"]], "Day 2, Morning Awakening": [[312, "day-2-morning-awakening"]], "Control Flow, Sequences, Iteration (Continued)": [[312, "control-flow-sequences-iteration-continued"]], "Day 3, Morning Awakening": [[312, "day-3-morning-awakening"]], "Dictionary (mutable)": [[313, "Dictionary-(mutable)"]], "Set (mutable)": [[313, "Set-(mutable)"]], "Boolean (immutable)": [[313, "Boolean-(immutable)"]], "split() and join()": [[313, "split()-and-join()"]], "Pythonicity (enumerate())": [[313, "Pythonicity-(enumerate())"]], "pandas, matplotlib": [[313, "pandas,-matplotlib"]], "Generator Expression": [[313, "Generator-Expression"]], "zip(), And Dictionaries": [[313, "zip(),-And-Dictionaries"]], "Agenda: C++: Advanced Topics": [[315, "agenda-c-advanced-topics"]], "Introduction: A New Language To Me": [[315, "introduction-a-new-language-to-me"]], "constexpr, constinit, consteval": [[315, "constexpr-constinit-consteval"]], "Functions: std::function<>, Lambdas": [[315, "functions-std-function-lambdas"], [316, "functions-std-function-lambdas"]], "Moving, RValue References: Do We Want To Copy Sensors?": [[315, "moving-rvalue-references-do-we-want-to-copy-sensors"]], "Moving: Usage": [[315, "moving-usage"]], "Moving: Implementation": [[315, "moving-implementation"]], "Type Erasure": [[315, "type-erasure"]], "Allocators": [[315, "allocators"], [623, "allocators"], [740, "allocators"]], "C++ Pythonic Toolcase": [[315, "c-pythonic-toolcase"]], "Outlook In >=20": [[315, "outlook-in-20"]], "Attributes And The Like": [[315, "attributes-and-the-like"]], "<algorithm> Overview": [[315, "algorithm-overview"]], "Miscellaneous Miscellaneous": [[315, "miscellaneous-miscellaneous"]], "C++ For Embedded Developers (Beginning of 2023)": [[317, "c-for-embedded-developers-beginning-of-2023"]], "Python/SAP": [[318, "python-sap"]], "Agenda: Python Basics (Beginning Of 2024)": [[319, "agenda-python-basics-beginning-of-2024"]], "Numerics: Pandas, NumPy": [[319, "numerics-pandas-numpy"]], "Screenplay Checker": [[320, "screenplay-checker"]], "Dependencies": [[321, "dependencies"], [322, "dependencies"], [323, "dependencies"], [324, "dependencies"], [326, "dependencies"], [449, "dependencies"], [466, "dependencies"], [480, "dependencies"], [508, "dependencies"], [525, "dependencies"], [527, "dependencies"], [538, "dependencies"], [605, "dependencies"], [611, "dependencies"], [615, "dependencies"], [623, "dependencies"], [625, "dependencies"], [628, "dependencies"], [633, "dependencies"], [641, "dependencies"], [642, "dependencies"], [644, "dependencies"], [646, "dependencies"], [647, "dependencies"], [648, "dependencies"], [649, "dependencies"], [650, "dependencies"], [651, "dependencies"], [652, "dependencies"], [653, "dependencies"], [654, "dependencies"], [655, "dependencies"], [656, "dependencies"], [662, "dependencies"], [669, "dependencies"], [676, "dependencies"], [687, "dependencies"], [711, "dependencies"], [716, "dependencies"], [829, "dependencies"], [830, "dependencies"], [831, "dependencies"], [835, "dependencies"], [849, "dependencies"], [850, "dependencies"], [851, "dependencies"], [870, "dependencies"], [875, "dependencies"], [876, "dependencies"], [879, "dependencies"], [912, "dependencies"], [914, "dependencies"], [921, "dependencies"], [927, "dependencies"], [929, "dependencies"], [937, "dependencies"], [939, "dependencies"], [941, "dependencies"], [956, "dependencies"], [980, "dependencies"], [982, "dependencies"], [983, "dependencies"], [986, "dependencies"], [987, "dependencies"], [1008, "dependencies"], [1010, "dependencies"], [1056, "dependencies"], [1057, "dependencies"], [1060, "dependencies"], [1061, "dependencies"], [1062, "dependencies"], [1064, "dependencies"], [1065, "dependencies"], [1066, "dependencies"], [1067, "dependencies"], [1068, "dependencies"], [1069, "dependencies"], [1073, "dependencies"], [1074, "dependencies"], [1075, "dependencies"], [1076, "dependencies"], [1077, "dependencies"], [1079, "dependencies"], [1080, "dependencies"], [1081, "dependencies"], [1082, "dependencies"], [1083, "dependencies"], [1084, "dependencies"], [1085, "dependencies"], [1087, "dependencies"], [1088, "dependencies"], [1089, "dependencies"], [1090, "dependencies"], [1091, "dependencies"], [1092, "dependencies"], [1094, "dependencies"], [1095, "dependencies"], [1096, "dependencies"], [1097, "dependencies"], [1110, "dependencies"], [1113, "dependencies"], [1116, "dependencies"], [1120, "dependencies"], [1132, "dependencies"], [740, "dependencies"], [117, "dependencies"], [120, "dependencies"], [122, "dependencies"], [125, "dependencies"], [126, "dependencies"], [130, "dependencies"], [123, "dependencies"], [115, "dependencies"], [119, "dependencies"], [116, "dependencies"], [118, "dependencies"], [121, "dependencies"], [953, "dependencies"], [1138, "dependencies"], [124, "dependencies"]], "GPIO: Blinklicht": [[321, "gpio-blinklicht"]], "Commandline": [[321, "commandline"], [326, "commandline"], [862, "commandline"]], "sysfs GPIO": [[321, "sysfs-gpio"]], "Electronic Aspect": [[321, "electronic-aspect"]], "External Circuitry": [[321, "external-circuitry"]], "Raspberry Header Pinout": [[321, "raspberry-header-pinout"]], "GPIO: Blinklicht Interface": [[322, "gpio-blinklicht-interface"]], "GPIO: Object Oriented Blinklicht": [[323, "gpio-object-oriented-blinklicht"]], "GPIO: Blinklicht Unittests": [[324, "gpio-blinklicht-unittests"]], "ECE19: Exercises and Custom Topics": [[325, "ece19-exercises-and-custom-topics"]], "Reading a File": [[326, "reading-a-file"], [924, "reading-a-file"]], "Output": [[326, "output"]], "2021-05-20 (G2)": [[327, "2021-05-20-(G2)"]], "Reading File in One Big Swoop": [[327, "Reading-File-in-One-Big-Swoop"]], "Reading File in Fixed Sized Chunks": [[327, "Reading-File-in-Fixed-Sized-Chunks"]], "Reading File Line by Line": [[327, "Reading-File-Line-by-Line"]], "Iterating a File": [[327, "Iterating-a-File"]], "String Methods (Needed to Implement the Exercise)": [[327, "String-Methods-(Needed-to-Implement-the-Exercise)"]], "str.strip(), str.rstrip(), str.lstrip()": [[327, "str.strip(),-str.rstrip(),-str.lstrip()"]], "str.split()": [[327, "str.split()"]], "2021-05-21": [[328, "2021-05-21"], [335, "id11"]], "Modules and Packages": [[328, "Modules-and-Packages"], [1007, "modules-and-packages"]], "Strings vs.\u00a0Bytes": [[329, "Strings-vs.\u00a0Bytes"]], "Batteries": [[330, "Batteries"]], "Key Value Map": [[330, "Key-Value-Map"]], "Comments vs Documentation": [[330, "Comments-vs-Documentation"]], "Multiline String (btw.)": [[330, "Multiline-String-(btw.)"]], "Integer Numbers (Literals)": [[330, "Integer-Numbers-(Literals)"]], "Arithmetic Operators": [[330, "Arithmetic-Operators"], [379, "arithmetic-operators"], [1019, "arithmetic-operators"]], "Wertebereich von Integers": [[330, "Wertebereich-von-Integers"]], "An Example": [[331, "An-Example"], [1042, "an-example"]], "Sidenote: Pure Beauty": [[331, "Sidenote:-Pure-Beauty"], [1042, "sidenote-pure-beauty"]], "Parameters and Types": [[331, "Parameters-and-Types"], [1042, "parameters-and-types"]], "Pitfalls": [[331, "Pitfalls"]], "Cloud Computer, SSH Login": [[332, "cloud-computer-ssh-login"]], "Machine, Logins": [[332, "machine-logins"]], "Login via Secure Shell (SSH)": [[332, "login-via-secure-shell-ssh"]], "Formalit\u00e4ten": [[333, "formalitaten"]], "Embedded Computing 1 (ECE 19)": [[334, "embedded-computing-1-ece-19"]], "Daily Log": [[335, "daily-log"]], "2021-03-04": [[335, "id1"]], "2021-03-05": [[335, "id2"]], "Cheat Sheets": [[335, null]], "2021-03-18": [[335, "id3"]], "2021-03-26": [[335, "id4"]], "2021-04-15": [[335, "id5"]], "2021-04-21": [[335, "id6"]], "Git Intro": [[335, "git-intro"]], "Download and Installation": [[335, null], [340, null]], "2021-04-29": [[335, "id7"]], "2021-05-10": [[335, "id8"]], "Org Stuff": [[335, "org-stuff"]], "Python: Functions": [[335, "python-functions"]], "2021-05-12": [[335, "id9"]], "Python: Walk-Through Passing and Failing an Exam": [[335, "python-walk-through-passing-and-failing-an-exam"]], "2021-05-{19,20}": [[335, "id10"]], "Reiterating on Exercise": [[335, "reiterating-on-exercise"]], "import argparse": [[335, "import-argparse"]], "Exercise digit (Once More)": [[335, "exercise-digit-once-more"]], "2021-06-01": [[335, "id12"]], "sysfs GPIO: Blinking an LED": [[335, "sysfs-gpio-blinking-an-led"]], "2021-06-07": [[335, "id13"]], "Embedded Computing 1 (Deutsch)": [[336, "embedded-computing-1-deutsch"]], "Lehrinhalte": [[336, "lehrinhalte"]], "Lernergebnisse der LV": [[336, "lernergebnisse-der-lv"]], "Empfohlene oder verpflichtende Fachliteratur und andere Lernressourcen bzw. \u2013instrumente": [[336, "empfohlene-oder-verpflichtende-fachliteratur-und-andere-lernressourcen-bzw-instrumente"]], "Art der Vermittlung": [[336, "art-der-vermittlung"]], "Voraussetzungen und Begleitbedingungen": [[336, "voraussetzungen-und-begleitbedingungen"]], "Pr\u00fcfungsmethode und Beurteilungskriterien": [[336, "prufungsmethode-und-beurteilungskriterien"]], "Embedded Computing 1 (English)": [[337, "embedded-computing-1-english"]], "Course Content": [[337, "course-content"]], "Learning Outcome": [[337, "learning-outcome"]], "Recommended or Required Reading and Other Learning Resources / Tools": [[337, "recommended-or-required-reading-and-other-learning-resources-tools"]], "Mode of delivery": [[337, "mode-of-delivery"]], "Prerequisites and Co-Requisites": [[337, "prerequisites-and-co-requisites"]], "Assessment Methods and Criteria": [[337, "assessment-methods-and-criteria"]], "Plan for Summer 2021": [[338, "plan-for-summer-2021"]], "Linux Introduction": [[338, "linux-introduction"]], "Slides": [[338, null], [338, null], [338, null]], "C/C++ Development": [[338, "c-c-development"]], "Python Development": [[338, "python-development"]], "2021-10-07": [[339, "id1"]], "Whose Fault It Is": [[339, "whose-fault-it-is"]], "2021-10-12 (Bringing Newcomers Up-to-Date)": [[340, "bringing-newcomers-up-to-date"]], "Linux/UNIX": [[340, "linux-unix"]], "Git": [[340, "git"]], "2021-10-28": [[341, "id1"]], "Group Project": [[341, "group-project"]], "Discussion of Tasks": [[341, "discussion-of-tasks"]], "TODOs": [[341, "todos"]], "2021-11-15": [[342, "id1"]], "Systems Programming: Files, Directories, Links \u2026": [[342, "systems-programming-files-directories-links"]], "2021-11-29": [[343, "id1"]], "jjjj": [[343, "jjjj"]], "2021-12-1{4,5}": [[344, "id1"]], "Future Topics": [[344, "future-topics"]], "Threading": [[344, "threading"]], "C++ Sideways": [[344, "c-sideways"]], "2022-01-10": [[345, "id1"]], "Scheduling": [[345, "scheduling"], [958, "scheduling"], [959, "scheduling"]], "2022-01-12": [[346, "id1"]], "Scheduling and Realtime": [[346, "scheduling-and-realtime"], [350, "scheduling-and-realtime"]], "2022-02-15": [[347, "id1"]], "Agenda/Log": [[348, "agenda-log"], [349, "agenda-log"]], "Embedded Computing 2 (ECE 19)": [[349, "embedded-computing-2-ece-19"]], "Project Repository": [[349, "project-repository"]], "Test Material": [[349, "test-material"]], "Exam Material Overview": [[350, "exam-material-overview"]], "Questions": [[350, "questions"], [350, "id1"], [642, "questions"], [835, "questions"], [849, "questions"], [850, "questions"], [875, "questions"], [982, "questions"]], "Slide Material": [[350, "slide-material"], [350, "id2"]], "Embedded Computing 1+2, ECE 19": [[351, "embedded-computing-1-2-ece-19"]], "C++: Advanced Topics (2023-12-04 - 2023-12-06)": [[353, "c-advanced-topics-2023-12-04-2023-12-06"], [316, "c-advanced-topics-2023-12-04-2023-12-06"]], "Bisher Gehaltene": [[353, "bisher-gehaltene"]], "Python Advanced (2023-11-22 - 2023-11-24)": [[353, "python-advanced-2023-11-22-2023-11-24"]], "Clean Code Development With Python (2023-03-28 - 2023-03-30)": [[353, "clean-code-development-with-python-2023-03-28-2023-03-30"]], "C++ For Embedded Developers (2023-03-20 - 2023-03-22)": [[353, "c-for-embedded-developers-2023-03-20-2023-03-22"]], "Python (2022-11-07 - 2022-11-10, 2022-12-01)": [[353, "python-2022-11-07-2022-11-10-2022-12-01"]], "C++: A New Language Starting In 2011 (2022-07-26 - 2022-07-27)": [[353, "c-a-new-language-starting-in-2011-2022-07-26-2022-07-27"]], "C++: A New Language Starting In 2011 (2022-06-14 - 2022-06-15)": [[353, "c-a-new-language-starting-in-2011-2022-06-14-2022-06-15"]], "Python Advanced (2022-03-15 - 2022-03-17)": [[353, "python-advanced-2022-03-15-2022-03-17"]], "Python Basics (2021-08-23 - 2021-08-25)": [[353, "python-basics-2021-08-23-2021-08-25"]], "Programmieren mit C++ (2021-07-12 - 2021-07-16)": [[353, "programmieren-mit-c-2021-07-12-2021-07-16"]], "Linux Basics, Shell Scripting (2019-03-29 - 1.4.2021)": [[353, "linux-basics-shell-scripting-2019-03-29-1-4-2021"]], "Python (22.3.2021 - 25.3.2021)": [[353, "python-22-3-2021-25-3-2021"]], "Python Advanced (15.3.2021 - 17.3.2021)": [[353, "python-advanced-15-3-2021-17-3-2021"]], "Linux Kernel Driver Development Basics (8.3.2021 - 12.3.2020)": [[353, "linux-kernel-driver-development-basics-8-3-2021-12-3-2020"]], "Programmierung Grundlagen, anhand von Python (13. und 14.1.2021)": [[353, "programmierung-grundlagen-anhand-von-python-13-und-14-1-2021"]], "Linux und Raspberry Pi (3.11.2020, 4.11.2020, 17.11.2020)": [[353, "linux-und-raspberry-pi-3-11-2020-4-11-2020-17-11-2020"]], "Python Basics (19.10.2020 - 22.10.2020)": [[353, "python-basics-19-10-2020-22-10-2020"]], "Python Advanced (13.5.2020 - 14.5.2020 bei einer Firma in Graz)": [[353, "python-advanced-13-5-2020-14-5-2020-bei-einer-firma-in-graz"]], "C++ f\u00fcr Embedded-Entwickler (30.3.2020 - 4.4.2020, bei einer Firma in Baden-W\u00fcrttemberg)": [[353, "c-fur-embedded-entwickler-30-3-2020-4-4-2020-bei-einer-firma-in-baden-wurttemberg"]], "IPC in Linux (10.1.2020, bei einer Firma in Graz)": [[353, "ipc-in-linux-10-1-2020-bei-einer-firma-in-graz"]], "Python/NumPy (12.11.2019 - 13.11.2019 in Graz)": [[353, "python-numpy-12-11-2019-13-11-2019-in-graz"]], "Python Advanced (9.10.2019 - 10.10.2019 bei einer Firma in Graz)": [[353, "python-advanced-9-10-2019-10-10-2019-bei-einer-firma-in-graz"]], "C f\u00fcr Fortgeschrittene (30.9.2019 - 4.10.2019 in Wiener Neustadt)": [[353, "c-fur-fortgeschrittene-30-9-2019-4-10-2019-in-wiener-neustadt"]], "Einf\u00fchrung in Raspberry Pi (8.7.2019 - 10.7.2019 in Graz)": [[353, "einfuhrung-in-raspberry-pi-8-7-2019-10-7-2019-in-graz"]], "Python Basics (24.6.2019 - 27.6.2019, bei einer Firma in Ober\u00f6sterreich)": [[353, "python-basics-24-6-2019-27-6-2019-bei-einer-firma-in-oberosterreich"]], "Linux Basics (13.6.2019 - 19.6.2019, bei einer Firma in Ober\u00f6sterreich)": [[353, "linux-basics-13-6-2019-19-6-2019-bei-einer-firma-in-oberosterreich"]], "Python Basics (3.6.2019 - 6.6.2019, bei einer Firma in Ober\u00f6sterreich)": [[353, "python-basics-3-6-2019-6-6-2019-bei-einer-firma-in-oberosterreich"]], "Linux Big Picture (27.5.2019 - 29.5.2019, bei einer Firma in Baden-W\u00fcrttemberg)": [[353, "linux-big-picture-27-5-2019-29-5-2019-bei-einer-firma-in-baden-wurttemberg"]], "Python Basics (23.5.2019 - 24.5.2019, bei einer Firma in der Obersteiermark)": [[353, "python-basics-23-5-2019-24-5-2019-bei-einer-firma-in-der-obersteiermark"]], "Korn Shell Scripting (20.5.2019 - 22.5.2019 bei einer Firma in Salzburg)": [[353, "korn-shell-scripting-20-5-2019-22-5-2019-bei-einer-firma-in-salzburg"]], "Linux Basics (13.5.2019 - 15.5.2019, bei einer Firma in Ober\u00f6sterreich)": [[353, "linux-basics-13-5-2019-15-5-2019-bei-einer-firma-in-oberosterreich"]], "C: Ausgew\u00e4hlte Themen (17.12.2018 - 19.12.2018 in Graz)": [[353, "c-ausgewahlte-themen-17-12-2018-19-12-2018-in-graz"]], "Python Basics (1.10.2018 - 4.10.2018, bei einer Firma in Ober\u00f6sterreich)": [[353, "python-basics-1-10-2018-4-10-2018-bei-einer-firma-in-oberosterreich"]], "Linux Basics, Shell Scripting (16.7.2018 - 20.7.2018, bei einer Firma in Ober\u00f6sterreich)": [[353, "linux-basics-shell-scripting-16-7-2018-20-7-2018-bei-einer-firma-in-oberosterreich"]], "Advanced C on Linux (9.7.2018 - 11.7.2018, Raum N\u00fcrnberg)": [[353, "advanced-c-on-linux-9-7-2018-11-7-2018-raum-nurnberg"]], "Linux f\u00fcr Fortgeschrittene (12.3.2018 - 16.3.2018, Oberb\u00fcren/Schweiz)": [[353, "linux-fur-fortgeschrittene-12-3-2018-16-3-2018-oberburen-schweiz"]], "Linux und Python (11.9.2017 - 13.9.2017, bei einer Firma im Raum M\u00fcnchen)": [[353, "linux-und-python-11-9-2017-13-9-2017-bei-einer-firma-im-raum-munchen"]], "Linux Lowlevel Programming (28.8.2017 - 30.8.2017, Raum N\u00fcrnberg)": [[353, "linux-lowlevel-programming-28-8-2017-30-8-2017-raum-nurnberg"]], "C Refresher (23.8.2017 - 24.8.2017, Raum N\u00fcrnberg)": [[353, "c-refresher-23-8-2017-24-8-2017-raum-nurnberg"]], "C++11: Ausgew\u00e4hlte Themen (6.6.2017 - 8.6.2017 bei einer Firma in Graz)": [[353, "c-11-ausgewahlte-themen-6-6-2017-8-6-2017-bei-einer-firma-in-graz"]], "Linux vom Programmiererstandpunkt (30.12.2016 in Wien)": [[353, "linux-vom-programmiererstandpunkt-30-12-2016-in-wien"]], "Embedded Linux anhand des Raspberry Pi (17.10.2016 - 21.10.2016 bei einer Firma in Baden-W\u00fcrttemberg)": [[353, "embedded-linux-anhand-des-raspberry-pi-17-10-2016-21-10-2016-bei-einer-firma-in-baden-wurttemberg"]], "Linux vom Programmiererstandpunkt (20.9.2016 in Wien)": [[353, "linux-vom-programmiererstandpunkt-20-9-2016-in-wien"]], "C for Advanced Users (5.7.2016 - 6.7.2016, Raum N\u00fcrnberg)": [[353, "c-for-advanced-users-5-7-2016-6-7-2016-raum-nurnberg"]], "Einf\u00fchrung in C++ (22.2.2016 - 26.2.2016 bei einer Firma in Graz)": [[353, "einfuhrung-in-c-22-2-2016-26-2-2016-bei-einer-firma-in-graz"]], "Advanced Python Workshop (20.2.2017 - 23.2.2017, bei einer Firma in Ober\u00f6sterreich)": [[353, "advanced-python-workshop-20-2-2017-23-2-2017-bei-einer-firma-in-oberosterreich"]], "Embedded Linux (30.11.2015 - 4.12.2015, Bodenseo, Hemmenhofen am Bodensee)": [[353, "embedded-linux-30-11-2015-4-12-2015-bodenseo-hemmenhofen-am-bodensee"]], "Linux Kernel, Realtime (17.11.2015 - 19.11.2015 bei einer Firma in Graz)": [[353, "linux-kernel-realtime-17-11-2015-19-11-2015-bei-einer-firma-in-graz"]], "Linux Basics (3.11.2015 - 5.11.2015 bei einer Firma in Graz)": [[353, "linux-basics-3-11-2015-5-11-2015-bei-einer-firma-in-graz"]], "Einf\u00fchrung in Python (5.10.2015 - 6.10.2015 in Wien)": [[353, "einfuhrung-in-python-5-10-2015-6-10-2015-in-wien"]], "Linux Basics, Systemnahe Programmierung (27.7.2015 - 31.7.2015, bei einer Firma in Ober\u00f6sterreich)": [[353, "linux-basics-systemnahe-programmierung-27-7-2015-31-7-2015-bei-einer-firma-in-oberosterreich"]], "Design Patterns and Test Driven Development (1.7.2015 - 3.7.2015, Raum N\u00fcrnberg)": [[353, "design-patterns-and-test-driven-development-1-7-2015-3-7-2015-raum-nurnberg"]], "C for Advanced Users (9.12.2014 - 11.12.2014, Raum N\u00fcrnberg)": [[353, "c-for-advanced-users-9-12-2014-11-12-2014-raum-nurnberg"]], "Python (1.6.2015 - 3.6.2015, Mathias Kettner in M\u00fcnchen)": [[353, "python-1-6-2015-3-6-2015-mathias-kettner-in-munchen"]], "Linux Basics, Kernel, Git (9.3.2015 - 13.3.2015, Siemens Braunschweig)": [[353, "linux-basics-kernel-git-9-3-2015-13-3-2015-siemens-braunschweig"]], "Embedded Linux (28.1.2015 - 30.1.2015, bei einer Firma im Raum M\u00fcnchen)": [[353, "embedded-linux-28-1-2015-30-1-2015-bei-einer-firma-im-raum-munchen"]], "C for Intermediate Users (9.12.2014 - 11.12.2014, Raum N\u00fcrnberg)": [[353, "c-for-intermediate-users-9-12-2014-11-12-2014-raum-nurnberg"]], "Linux from Scratch (1.12.2014 - 5.12.2014 LPD Hannover)": [[353, "linux-from-scratch-1-12-2014-5-12-2014-lpd-hannover"]], "Einf\u00fchrung in C++ (7.10.2014 - 10.10.2014 in Wien)": [[353, "einfuhrung-in-c-7-10-2014-10-10-2014-in-wien"]], "Systemnahe Programmierung unter Linux (14.4.2014 - 17.4.2014 in K\u00f6ln)": [[353, "systemnahe-programmierung-unter-linux-14-4-2014-17-4-2014-in-koln"]], "Einf\u00fchrung in C++ (3.3.2014 - 14.3.2014 in Wien)": [[353, "einfuhrung-in-c-3-3-2014-14-3-2014-in-wien"]], "Projektverwaltung mit Subversion und CMake (24.2.2014 - 27.2.2014 in Wien)": [[353, "projektverwaltung-mit-subversion-und-cmake-24-2-2014-27-2-2014-in-wien"]], "Einf\u00fchrung in Python (23.6.2014 - 26.6.2014, LKA Niedersachsen)": [[353, "einfuhrung-in-python-23-6-2014-26-6-2014-lka-niedersachsen"]], "Linux: Boot-Konfiguration und Systemnahe Programmierung (27.5.2014 - 30.5.2014 in Graz)": [[353, "linux-boot-konfiguration-und-systemnahe-programmierung-27-5-2014-30-5-2014-in-graz"]], "Einf\u00fchrung in C (11.11.2013 - 22.11.2013 in Wien)": [[353, "einfuhrung-in-c-11-11-2013-22-11-2013-in-wien"]], "Linux Basics (28.10.2013 - 31.10.2013 in Wien)": [[353, "linux-basics-28-10-2013-31-10-2013-in-wien"]], "Linux Basics, Embedded Linux (14.10.2013 - 15.10.2013 bei einer Firma im Raum M\u00fcnchen)": [[353, "linux-basics-embedded-linux-14-10-2013-15-10-2013-bei-einer-firma-im-raum-munchen"]], "Shell/Bash Scripting (7.10.2013 - 9.10.2013, bei einer Firma in Ober\u00f6sterreich)": [[353, "shell-bash-scripting-7-10-2013-9-10-2013-bei-einer-firma-in-oberosterreich"]], "Alles Linux (1.10.2013 - 4.10.2013, QualiVision in Z\u00fcrich)": [[353, "alles-linux-1-10-2013-4-10-2013-qualivision-in-zurich"]], "Linux from Scratch (16.9.2013 - 20.9.2013, Mathias Kettner in M\u00fcnchen)": [[353, "linux-from-scratch-16-9-2013-20-9-2013-mathias-kettner-in-munchen"]], "Linux Basics (2.7.2013 - 4.7.2013, bei einer Firma in Ober\u00f6sterreich)": [[353, "linux-basics-2-7-2013-4-7-2013-bei-einer-firma-in-oberosterreich"]], "Linux - Einf\u00fchrung und Programmierung (27.5.2013 - 29.5.2013, bei einer Firma im Raum M\u00fcnchen)": [[353, "linux-einfuhrung-und-programmierung-27-5-2013-29-5-2013-bei-einer-firma-im-raum-munchen"]], "GNU Make (23.4.2013 in Graz)": [[353, "gnu-make-23-4-2013-in-graz"]], "Linux Basics & Embedded (14.1.2013 - 18.1.2013, bei einer Firma in Ober\u00f6sterreich)": [[353, "linux-basics-embedded-14-1-2013-18-1-2013-bei-einer-firma-in-oberosterreich"]], "Linux Systemnah, Embedded, C++ (26.11.2012 - 28.11.2012, bei einer Firma in Hamburg)": [[353, "linux-systemnah-embedded-c-26-11-2012-28-11-2012-bei-einer-firma-in-hamburg"]], "Fehlerdiagnose unter Linux (19.11.2012 - 21.11.2012, Polizei Niedersachsen in Hannover)": [[353, "fehlerdiagnose-unter-linux-19-11-2012-21-11-2012-polizei-niedersachsen-in-hannover"]], "Systemnahe Programmierung unter Linux (29.10.2012 - 30.10.2012, bei einer Firma im Raum M\u00fcnchen)": [[353, "systemnahe-programmierung-unter-linux-29-10-2012-30-10-2012-bei-einer-firma-im-raum-munchen"]], "Einf\u00fchrung in Python (15.10.2012 - 17.10.2012, Mathias Kettner in M\u00fcnchen)": [[353, "einfuhrung-in-python-15-10-2012-17-10-2012-mathias-kettner-in-munchen"]], "Einf\u00fchrung in Python (25.9.2012 - 27.9.2012, STIA in Admont)": [[353, "einfuhrung-in-python-25-9-2012-27-9-2012-stia-in-admont"]], "Linux Systemnah (13.2.2012 bis 15.2.2012, bei einer Firma in Z\u00fcrich)": [[353, "linux-systemnah-13-2-2012-bis-15-2-2012-bei-einer-firma-in-zurich"]], "Einf\u00fchrung in Python (24.1.2012 - 26.1.2012, Mathias Kettner in M\u00fcnchen)": [[353, "einfuhrung-in-python-24-1-2012-26-1-2012-mathias-kettner-in-munchen"]], "Linux Systemnah (19.9.2011 - 22.9.2011, bei einer Firma in Ober\u00f6sterreich)": [[353, "linux-systemnah-19-9-2011-22-9-2011-bei-einer-firma-in-oberosterreich"]], "Linux Basics (13.9.2011 - 15.9.2011, bei einer Firma in Ober\u00f6sterreich)": [[353, "linux-basics-13-9-2011-15-9-2011-bei-einer-firma-in-oberosterreich"]], "Linux Systemnah (4.7.2011 - 7.7.2011, Bodenseo, Hemmenhofen am Bodensee)": [[353, "linux-systemnah-4-7-2011-7-7-2011-bodenseo-hemmenhofen-am-bodensee"]], "Linux Systemnah (14.2.2011 - 18.2.2011, Bodenseo, Hemmenhofen am Bodensee)": [[353, "linux-systemnah-14-2-2011-18-2-2011-bodenseo-hemmenhofen-am-bodensee"]], "Linux from Scratch (12.12.2010 - 17.12.2010, Mathias Kettner in M\u00fcnchen)": [[353, "linux-from-scratch-12-12-2010-17-12-2010-mathias-kettner-in-munchen"]], "Softwareentwicklung unter Linux (6.12.2010 - 10.12.2010, bei einer Firma in Darmstadt)": [[353, "softwareentwicklung-unter-linux-6-12-2010-10-12-2010-bei-einer-firma-in-darmstadt"]], "Softwareentwicklung unter Linux (24.11.2010 - 26.11.2010, bei einer Firma im Raum Ulm)": [[353, "softwareentwicklung-unter-linux-24-11-2010-26-11-2010-bei-einer-firma-im-raum-ulm"]], "Linux Kernel (25.10.2010 - 26.10.2010, Deutsche Bundeswehr in Wildflecken)": [[353, "linux-kernel-25-10-2010-26-10-2010-deutsche-bundeswehr-in-wildflecken"]], "Softwareentwicklung unter Linux (20.10.2010 - 24.10.2010, Mathias Kettner)": [[353, "softwareentwicklung-unter-linux-20-10-2010-24-10-2010-mathias-kettner"]], "Training Material: Overview and Download": [[354, "training-material-overview-and-download"]], "Installation": [[355, "installation"], [919, "installation"], [1054, "installation"], [1116, "installation"], [1140, "installation"], [122, "installation"]], "On Windows": [[355, "on-windows"]], "On Linux": [[355, "on-linux"]], "The Book (1)": [[356, "the-book-1"]], "The Book (2)": [[356, "the-book-2"]], "The Beginning": [[356, "the-beginning"]], "Cool Guys and Their Hobby": [[356, "cool-guys-and-their-hobby"]], "History of UNIX": [[356, "history-of-unix"]], "My First Program (1)": [[357, "my-first-program-1"]], "My First Program (2)": [[357, "my-first-program-2"]], "Character Arrays - Strings": [[357, "character-arrays-strings"]], "Variables and Arithmetic": [[358, "variables-and-arithmetic"]], "My Second Program (1)": [[358, "my-second-program-1"]], "My Second Program (2)": [[358, "my-second-program-2"]], "My Second Program (3)": [[358, "my-second-program-3"]], "My Second Program (4)": [[358, "my-second-program-4"]], "Exercise: A Better Fahrenheit Table": [[359, "exercise-a-better-fahrenheit-table"]], "for: Loop Simplification (1)": [[360, "for-loop-simplification-1"]], "for: Loop Simplification (2)": [[360, "for-loop-simplification-2"]], "Second Program, revisited": [[360, "second-program-revisited"]], "Exercise: Fahrenheit Table Using for": [[361, "exercise-fahrenheit-table-using-for"]], "Symbolic Constants": [[362, "symbolic-constants"]], "C Preprocessor: Symbolic Constants": [[362, "c-preprocessor-symbolic-constants"]], "Exercise: Fahrenheit Table Using Macros": [[363, "exercise-fahrenheit-table-using-macros"]], "Character I/O": [[364, "character-i-o"]], "The Outside World": [[364, "the-outside-world"]], "cat for the Poor (1)": [[364, "cat-for-the-poor-1"]], "cat for the Poor (2)": [[364, "cat-for-the-poor-2"]], "More Examples \u2026": [[364, "more-examples"]], "More Examples - if": [[364, "more-examples-if"]], "if, Formally": [[364, "if-formally"]], "Operators, Formally": [[364, "operators-formally"]], "Exercise: wc For The Poor": [[365, "exercise-wc-for-the-poor"]], "Arrays": [[366, "arrays"]], "Array Definition, Explicit Initialization": [[366, "array-definition-explicit-initialization"]], "Array Access": [[366, "array-access"]], "Discussion: Initialization": [[366, "discussion-initialization"]], "Discussion: if, else": [[366, "discussion-if-else"]], "Array Initializer": [[366, "array-initializer"]], "Discussion: Initializer": [[366, "discussion-initializer"]], "Initialization using memset()": [[366, "initialization-using-memset"]], "Discussion: memset()": [[366, "discussion-memset"]], "Exercise: Character Histogram": [[367, "exercise-character-histogram"]], "A Nonsensical Example": [[368, "a-nonsensical-example"]], "Function Signature": [[368, "function-signature"]], "Discussion": [[368, "discussion"]], "Definition vs. Declaration (1)": [[368, "definition-vs-declaration-1"]], "Definition vs. Declaration (2)": [[368, "definition-vs-declaration-2"]], "By Value / By Reference": [[368, "by-value-by-reference"]], "Exercise: Forward Declaration": [[369, "exercise-forward-declaration"]], "Character Arrays": [[370, "character-arrays"]], "Strings: Mistake by Design?": [[370, "strings-mistake-by-design"]], "Strings: Definition": [[370, "strings-definition"]], "Strings: Library Functions": [[370, "strings-library-functions"]], "Strings as Parameters": [[370, "strings-as-parameters"]], "Strings: Dangers": [[370, "strings-dangers"]], "Exercise: Read Line Into String from stdin": [[371, "exercise-read-line-into-string-from-stdin"]], "Lifetime of Variables": [[372, "lifetime-of-variables"]], "Lifetime": [[372, "lifetime"]], "Global Variables": [[372, "global-variables"], [546, "global-variables"]], "Global Variables: How?": [[372, "global-variables-how"]], "Type System": [[374, "type-system"]], "Variable Names": [[375, "variable-names"]], "Variable- and Function Names": [[375, "variable-and-function-names"]], "Data Types, Sizes": [[376, "data-types-sizes"]], "Standard Data Types And Their Sizes": [[376, "standard-data-types-and-their-sizes"]], "Integer Variants (\u201cQualifiers\u201d)": [[376, "integer-variants-qualifiers"]], "Widths": [[376, "widths"]], "Constants": [[377, "constants"]], "Constants and Types": [[377, "constants-and-types"]], "Character Constants: Escape Sequences": [[377, "character-constants-escape-sequences"]], "String Constants": [[377, "string-constants"]], "Character vs. String Constants": [[377, "character-vs-string-constants"]], "Symbolic Constants (1)": [[377, "symbolic-constants-1"]], "Symbolic Constants (2)": [[377, "symbolic-constants-2"]], "Variable Definitions": [[378, "variable-definitions"]], "Definitions und Initialization": [[378, "definitions-und-initialization"]], "Initialization of Automatic Variables": [[378, "initialization-of-automatic-variables"]], "Initialization of Global Variables": [[378, "initialization-of-global-variables"]], "Arithmetic Operators (1)": [[379, "arithmetic-operators-1"]], "Arithmetic Operators (2)": [[379, "arithmetic-operators-2"]], "Relational and Logical Operators": [[380, "relational-and-logical-operators"]], "Relational Operators (1)": [[380, "relational-operators-1"]], "Relational Operators (2)": [[380, "relational-operators-2"]], "Logical (Boolean) Operators": [[380, "logical-boolean-operators"]], "Boolean Operators: Short-Circuit": [[380, "boolean-operators-short-circuit"]], "Type Conversions": [[381, "type-conversions"]], "Implicit Type Conversions": [[381, "implicit-type-conversions"]], "Sign Bugs": [[381, "sign-bugs"]], "Truncation": [[381, "truncation"]], "Sign Propagation": [[381, "sign-propagation"]], "Conversion Using Operators": [[381, "conversion-using-operators"]], "Conversion and unsigned (1)": [[381, "conversion-and-unsigned-1"]], "Conversion and unsigned (2)": [[381, "conversion-and-unsigned-2"]], "Compiler Warnings": [[381, "compiler-warnings"]], "Last Warning": [[381, "last-warning"], [952, "last-warning"]], "Forced Conversion - Cast": [[381, "forced-conversion-cast"]], "Increment, Decrement": [[382, "increment-decrement"]], "Confusion: ++, --": [[382, "confusion"]], "Confused to perfection (1)": [[382, "confused-to-perfection-1"]], "Confused to perfection (2)": [[382, "confused-to-perfection-2"]], "Exercise: Copy and Reduce String": [[383, "exercise-copy-and-reduce-string"]], "Bit-Operators": [[384, "bit-operators"]], "Bit Manipulation": [[384, "bit-manipulation"]], "Bitwise AND and OR": [[384, "bitwise-and-and-or"]], "Bitwise XOR": [[384, "bitwise-xor"]], "Shift Left": [[384, "shift-left"]], "Shift Right": [[384, "shift-right"]], "Inverting (\u201cOne\u2019s-Complement\u201d)": [[384, "inverting-one-s-complement"]], "Assignment with Calculation": [[385, "assignment-with-calculation"]], "Combined Operators": [[385, "combined-operators"]], "?: - Conditional Expression": [[386, "conditional-expression"]], "?: - Conditional Expression (1)": [[386, "conditional-expression-1"]], "?: - Conditional Expression (2)": [[386, "conditional-expression-2"]], "Precedence, Associativity": [[387, "precedence-associativity"]], "Summary: Operators": [[387, "summary-operators"]], "Operators: Precedence und Associativity (1)": [[387, "operators-precedence-und-associativity-1"]], "Operators: Precedence und Associativity (2)": [[387, "operators-precedence-und-associativity-2"]], "More Warnings": [[387, "more-warnings"]], "Statements and Blocks": [[389, "statements-and-blocks"]], "Statement vs. Block": [[389, "statement-vs-block"]], "if - else": [[390, "if-else"]], "Branches": [[390, "branches"]], "True or False? What is Truth?": [[390, "true-or-false-what-is-truth"]], "else is optional (1)": [[390, "else-is-optional-1"]], "else is optional (2)": [[390, "else-is-optional-2"]], "else - if": [[391, "else-if"]], "Style Matters": [[391, "style-matters"]], "switch": [[392, "switch"], [392, "id1"]], "Case Distinctions": [[392, "case-distinctions"]], "if - else if vs. switch": [[392, "if-else-if-vs-switch"]], "Loops: while and for": [[393, "loops-while-and-for"]], "while: general purpose loop": [[393, "while-general-purpose-loop"]], "From while to for (1)": [[393, "from-while-to-for-1"]], "From while to for (2)": [[393, "from-while-to-for-2"]], "for, a Little Closer": [[393, "for-a-little-closer"]], "Comma Operator": [[393, "comma-operator"]], "for: Infamous Idioms": [[393, "for-infamous-idioms"]], "Loops: do - while": [[394, "loops-do-while"]], "do - while: Condition After Body": [[394, "do-while-condition-after-body"]], "goto and Labels": [[396, "goto-and-labels"]], "Structured Programming vs. goto": [[396, "structured-programming-vs-goto"]], "goto: Definition": [[396, "goto-definition"]], "goto: Use Cases": [[396, "goto-use-cases"]], "Nesting": [[398, "nesting"]], "Declaration vs. Definition": [[398, "declaration-vs-definition"]], "A Monolithic Program": [[398, "a-monolithic-program"]], "Separate Compilation": [[398, "separate-compilation"]], "Extern/Global Variables": [[399, "extern-global-variables"]], "Variables: Declaration and Definition": [[399, "variables-declaration-and-definition"]], "Variables: Separating Declaration from Definition (1)": [[399, "variables-separating-declaration-from-definition-1"]], "Variables: Separating Declaration from Definition (2)": [[399, "variables-separating-declaration-from-definition-2"]], "Header Files": [[400, "header-files"]], "Declarations: Problems (1)": [[400, "declarations-problems-1"]], "Declarations: Problems (2)": [[400, "declarations-problems-2"]], "Declarations: Solutions": [[400, "declarations-solutions"]], "Static Variables": [[401, "static-variables"]], "Lifetime and Visibility (1)": [[401, "lifetime-and-visibility-1"]], "Automatic Variables": [[401, "automatic-variables"]], "Local static Variable": [[401, "local-static-variable"]], "Global static Variable": [[401, "global-static-variable"]], "Global Variable": [[401, "global-variable"], [1041, "global-variable"]], "C Preprocessor: Basics": [[402, "c-preprocessor-basics"]], "#include": [[402, "include"]], "Macros: Text Replacement": [[402, "macros-text-replacement"]], "Macros: Constant Definition": [[402, "macros-constant-definition"]], "Macros: Inline Replacement as Function Call (1)": [[402, "macros-inline-replacement-as-function-call-1"]], "Macros: Inline Replacement as Function Call (2)": [[402, "macros-inline-replacement-as-function-call-2"]], "Include Guards (1)": [[402, "include-guards-1"]], "Include Guards (2)": [[402, "include-guards-2"]], "The C Preprocessor: Last Words": [[402, "the-c-preprocessor-last-words"], [403, "the-c-preprocessor-last-words"]], "C Preprocessor: More": [[403, "c-preprocessor-more"]], "Conditional Compilation: Rules": [[403, "conditional-compilation-rules"]], "Conditional Compilation: Examples": [[403, "conditional-compilation-examples"]], "Conditional Compilation: Last Words": [[403, "conditional-compilation-last-words"]], "Macros: Spanning Multiple Lines": [[403, "macros-spanning-multiple-lines"]], "Macros: Multiple Statements as One Statement (1)": [[403, "macros-multiple-statements-as-one-statement-1"]], "Macros: Multiple Statements as One Statement (2)": [[403, "macros-multiple-statements-as-one-statement-2"]], "Stringification (1)": [[403, "stringification-1"]], "Stringification (2)": [[403, "stringification-2"]], "Token Pasting (1)": [[403, "token-pasting-1"]], "Token Pasting (2)": [[403, "token-pasting-2"]], "Warnings and Errors": [[403, "warnings-and-errors"]], "Predefined Macros (1)": [[403, "predefined-macros-1"]], "Pointers and Addresses": [[405, "pointers-and-addresses"]], "Pointers: Basics": [[405, "pointers-basics"]], "Pointer: Operators": [[405, "pointer-operators"]], "More Examples": [[405, "more-examples"]], "Pointers as Function Parameters": [[406, "pointers-as-function-parameters"]], "Call by Reference (1)": [[406, "call-by-reference-1"]], "Call by Reference (2)": [[406, "call-by-reference-2"]], "Exercise: Function That Swaps Two Variables": [[407, "exercise-function-that-swaps-two-variables"]], "Pointers and Arrays": [[408, "pointers-and-arrays"], [410, "pointers-and-arrays"]], "It\u2019s Only Memory": [[408, "it-s-only-memory"]], "Conversion Array \u27f6 Pointer": [[408, "conversion-array-longrightarrow-pointer"]], "Pointer Arithmetic (1)": [[408, "pointer-arithmetic-1"]], "Pointer Arithmetic (2)": [[408, "pointer-arithmetic-2"]], "Pointer Arithmetic (3)": [[408, "pointer-arithmetic-3"]], "Pointer Arithmetic: Difference": [[408, "pointer-arithmetic-difference"]], "Pointer Arithmetic: Array Algorithms": [[408, "pointer-arithmetic-array-algorithms"]], "Pointer Arithmetic: Jump Width? (1)": [[408, "pointer-arithmetic-jump-width-1"]], "Pointer Arithmetic: Jump Width? (2)": [[408, "pointer-arithmetic-jump-width-2"]], "Pointer Arithmetic: Arbitrary Datatypes": [[408, "pointer-arithmetic-arbitrary-datatypes"]], "See also": [[409, null], [833, null], [838, null], [838, null], [839, null], [839, null], [839, null], [844, null], [845, null], [928, null], [955, null], [958, null], [962, null], [964, null], [1043, null]], "main() Can Take Parameters": [[409, "main-can-take-parameters"]], "struct: Basics": [[411, "struct-basics"]], "struct: Compound Datatypes": [[411, "struct-compound-datatypes"]], "struct: How?": [[411, "struct-how"]], "Usage": [[411, "usage"], [601, "usage"], [608, "usage"]], "Nested Structures": [[411, "nested-structures"]], "Memory Layout": [[411, "memory-layout"]], "Recursive Structures?": [[411, "recursive-structures"]], "struct: Functions": [[412, "struct-functions"]], "Parameters and Return (1)": [[412, "parameters-and-return-1"]], "Parameters and Return (2)": [[412, "parameters-and-return-2"]], "Parameters and Return (3)": [[412, "parameters-and-return-3"]], "typedef: Type Alias": [[413, "typedef-type-alias"]], "Alias for Type Names": [[413, "alias-for-type-names"]], "Dynamic Memory": [[415, "dynamic-memory"], [415, "id1"]], "Stack and Global Memory": [[415, "stack-and-global-memory"]], "Dynamic Memory - Usage": [[415, "dynamic-memory-usage"]], "Singly Linked List": [[416, "singly-linked-list"]], "Exercises (1)": [[416, "exercises-1"]], "Exercises (2)": [[416, "exercises-2"]], "Exercises (3)": [[416, "exercises-3"]], "Exercises (4)": [[416, "exercises-4"]], "Exercises (5)": [[416, "exercises-5"]], "Exercises (6)": [[416, "exercises-6"]], "Exercises (7)": [[416, "exercises-7"]], "Exercises (8)": [[416, "exercises-8"]], "Exercises (9)": [[416, "exercises-9"]], "Exercises (10)": [[416, "exercises-10"]], "Exercises (11)": [[416, "exercises-11"]], "Volatile": [[418, "volatile"]], "volatile: The Lie (1)": [[418, "volatile-the-lie-1"]], "volatile: The Lie (2)": [[418, "volatile-the-lie-2"]], "volatile: Valid Use: Hardware": [[418, "volatile-valid-use-hardware"]], "volatile: Valid Use: Unix Signal Handlers": [[418, "volatile-valid-use-unix-signal-handlers"]], "Compiler Intrinsics": [[419, "compiler-intrinsics"]], "Atomic Memory Access": [[419, "atomic-memory-access"]], "Atomic Memory Access: Load/Modify/Store": [[419, "atomic-memory-access-load-modify-store"]], "Load/Modify/Store: Mutex": [[419, "load-modify-store-mutex"]], "Atomic Instructions": [[419, "atomic-instructions"], [947, "atomic-instructions"]], "More GCC \u201cBuiltins\u201d": [[419, "more-gcc-builtins"]], "Alignment": [[420, "alignment"]], "Data Alignment": [[420, "data-alignment"]], "Data Alignment, Compilers": [[420, "data-alignment-compilers"]], "Unaligned Data Access (1)": [[420, "unaligned-data-access-1"]], "Unaligned Data Access (2)": [[420, "unaligned-data-access-2"]], "Padding (1)": [[420, "padding-1"]], "Padding (2)": [[420, "padding-2"]], "Padding (3)": [[420, "padding-3"]], "Padding (4)": [[420, "padding-4"]], "Structure Alignment (1)": [[420, "structure-alignment-1"]], "Structure Alignment (2)": [[420, "structure-alignment-2"]], "And Arrays? (1)": [[420, "and-arrays-1"]], "And Arrays? (2)": [[420, "and-arrays-2"]], "And Arrays? (3)": [[420, "and-arrays-3"]], "Sanity and Readabilty": [[422, "sanity-and-readabilty"]], "Shooting Offense: Unobvious Solution": [[422, "shooting-offense-unobvious-solution"]], "Shooting Offense: Unobvious Problem": [[422, "shooting-offense-unobvious-problem"]], "Shooting Offenses": [[422, "shooting-offenses"]], "Ambiguity": [[422, "ambiguity"]], "Readability": [[422, "readability"]], "Code Smells": [[422, "code-smells"]], "Know Your Integers": [[423, "know-your-integers"]], "Standard Data Types: size_t (1)": [[423, "standard-data-types-size-t-1"]], "Standard Data Types: size_t (2)": [[423, "standard-data-types-size-t-2"]], "Discrete Values - enum": [[424, "discrete-values-enum"], [424, "id1"]], "Discrete Values": [[424, "discrete-values"]], "Discrete Values - Traditional Approach (1)": [[424, "discrete-values-traditional-approach-1"]], "Discrete Values - Traditional Approach (2)": [[424, "discrete-values-traditional-approach-2"]], "Discrete Values - Wishlist": [[424, "discrete-values-wishlist"]], "Discrete Values - enum and switch": [[424, "discrete-values-enum-and-switch"], [424, "id2"]], "Discrete Values - Close to Perfection": [[424, "discrete-values-close-to-perfection"]], "Visibility - static": [[425, "visibility-static"]], "Visibility": [[425, "visibility"]], "A Somewhat Contrived Example (1)": [[425, "a-somewhat-contrived-example-1"]], "A Somewhat Contrived Example (2)": [[425, "a-somewhat-contrived-example-2"]], "The static Keyword (Hooray!)": [[425, "the-static-keyword-hooray"]], "Correctness - const": [[426, "correctness-const"]], "Non-Modifiable Memory (1)": [[426, "non-modifiable-memory-1"]], "Non-Modifiable Memory (2)": [[426, "non-modifiable-memory-2"]], "The const Keyword (1)": [[426, "the-const-keyword-1"]], "The const Keyword (2)": [[426, "the-const-keyword-2"]], "const Variables": [[426, "const-variables"]], "const Parameters (1)": [[426, "const-parameters-1"]], "const Parameters (2)": [[426, "const-parameters-2"]], "Pointers, Pointers, Pointers \u2026 (1)": [[426, "pointers-pointers-pointers-1"]], "Pointers, Pointers, Pointers \u2026 (2)": [[426, "pointers-pointers-pointers-2"]], "Pointers, Pointers, Pointers \u2026 (3)": [[426, "pointers-pointers-pointers-3"]], "Pointers, Pointers, Pointers \u2026 (4)": [[426, "pointers-pointers-pointers-4"]], "Pointers, Pointers, Pointers \u2026 (5)": [[426, "pointers-pointers-pointers-5"]], "Pointers, Pointers, Pointers \u2026 (6)": [[426, "pointers-pointers-pointers-6"]], "Pointers, Pointers, Pointers \u2026 (7)": [[426, "pointers-pointers-pointers-7"]], "Pointers, Pointers, Pointers \u2026 (8)": [[426, "pointers-pointers-pointers-8"]], "Pointers, Pointers, Pointers \u2026 (9)": [[426, "pointers-pointers-pointers-9"]], "Struct Initialization": [[427, "struct-initialization"]], "Good Old Struct Initialization": [[427, "good-old-struct-initialization"]], "C99 Designated Initializer": [[427, "c99-designated-initializer"]], "Explict Type Safety": [[428, "explict-type-safety"]], "Integer Types Are Ambiguous": [[428, "integer-types-are-ambiguous"]], "Example: Ambiguous Error Schemes (1)": [[428, "example-ambiguous-error-schemes-1"]], "Example: Ambiguous Error Schemes (2)": [[428, "example-ambiguous-error-schemes-2"]], "Example: Ambiguous Error Schemes (3)": [[428, "example-ambiguous-error-schemes-3"]], "Artificial Integer Type Safety": [[428, "artificial-integer-type-safety"]], "Error Schemes, Revisited": [[428, "error-schemes-revisited"]], "Error Schemes: Encapsulating Unix Details": [[428, "error-schemes-encapsulating-unix-details"]], "Error Schemes: Using Encapsulated Stuff": [[428, "error-schemes-using-encapsulated-stuff"]], "Wrap-Up: Artificial Type Safety": [[428, "wrap-up-artificial-type-safety"]], "valgrind": [[429, "valgrind"]], "Valgrind": [[429, "id1"]], "Valgrind in Action (1)": [[429, "valgrind-in-action-1"]], "Valgrind in Action (2)": [[429, "valgrind-in-action-2"]], "Valgrind in Action (3)": [[429, "valgrind-in-action-3"]], "Valgrind: more \u2026": [[429, "valgrind-more"]], "Optimization": [[431, "optimization"]], "Optimization - Introduction": [[431, "optimization-introduction"]], "Compute Bound or IO Bound? (1)": [[431, "compute-bound-or-io-bound-1"]], "Compute Bound or IO Bound? (2)": [[431, "compute-bound-or-io-bound-2"]], "Compute Bound or IO Bound? (3)": [[431, "compute-bound-or-io-bound-3"]], "What to do Next?": [[431, "what-to-do-next"]], "Optimizations: Compute Bound Code": [[432, "optimizations-compute-bound-code"]], "Many Ways of Optimization": [[432, "many-ways-of-optimization"]], "Unnecessary Optimizations": [[432, "unnecessary-optimizations"]], "Inlining (1)": [[432, "inlining-1"]], "Inlining (2)": [[432, "inlining-2"]], "Inlining (3)": [[432, "inlining-3"]], "Register Allocation (1)": [[432, "register-allocation-1"]], "Register Allocation (2)": [[432, "register-allocation-2"]], "Peephole Optimization": [[432, "peephole-optimization"]], "Peephole Optimization: Common Subexpression Elimination": [[432, "peephole-optimization-common-subexpression-elimination"]], "Peephole Optimization: Strength Reduction": [[432, "peephole-optimization-strength-reduction"]], "Peephole Optimization: Constant Folding": [[432, "peephole-optimization-constant-folding"]], "Loop Invariants": [[432, "loop-invariants"]], "Loop Unrolling": [[432, "loop-unrolling"]], "Tail Call Optimization": [[432, "tail-call-optimization"]], "CPU Optimization, Last Words": [[432, "cpu-optimization-last-words"]], "GCC: Optimization \u201cLevels\u201d": [[432, "gcc-optimization-levels"]], "Further Reading": [[432, "further-reading"]], "Optimizations: Memory Optimizations": [[433, "optimizations-memory-optimizations"]], "Memory: Caches": [[433, "memory-caches"]], "Locality of reference": [[433, "locality-of-reference"]], "Multidimensional Arrays": [[433, "multidimensional-arrays"]], "Multidimensional Arrays: Cache Thrashing": [[433, "multidimensional-arrays-cache-thrashing"]], "Multidimensional Arrays: Forward Indexing": [[433, "multidimensional-arrays-forward-indexing"]], "Profiling - Famous Words": [[435, "profiling-famous-words"]], "Donald E. Knuth": [[435, null]], "Tony Hoare": [[435, null]], "Larry Wall": [[435, null]], "The Practice of Programming, Brian W. Kernighan and\n             Rob Pike": [[435, null]], "Profiling - Introduction": [[435, "profiling-introduction"]], "GNU Profiler - gprof": [[436, "gnu-profiler-gprof"]], "gprof - How it Works": [[436, "gprof-how-it-works"]], "Using gprof": [[436, "using-gprof"]], "gprof: Flat Profile": [[436, "gprof-flat-profile"]], "gprof: Call Graph": [[436, "gprof-call-graph"]], "gprof: Interpreting The Results": [[436, "gprof-interpreting-the-results"]], "gprof: Visualization": [[436, "gprof-visualization"]], "callgrind": [[437, "callgrind"]], "callgrind - How it Works": [[437, "callgrind-how-it-works"]], "callgrind - How it is Used": [[437, "callgrind-how-it-is-used"]], "callgrind - Analysis Per Commandline": [[437, "callgrind-analysis-per-commandline"]], "callgrind - Analysis With kcachegrind": [[437, "callgrind-analysis-with-kcachegrind"]], "callgrind - Useful Options": [[437, "callgrind-useful-options"]], "oprofile": [[438, "oprofile"]], "oprofile - How it Works": [[438, "oprofile-how-it-works"]], "oprofile - Basic Usage (1)": [[438, "oprofile-basic-usage-1"]], "oprofile - Basic Usage (2)": [[438, "oprofile-basic-usage-2"]], "oprofile - Too Much Information": [[438, "oprofile-too-much-information"]], "oprofile - Call Graph": [[438, "oprofile-call-graph"]], "oprofile - Kernel Symbols (1)": [[438, "oprofile-kernel-symbols-1"]], "oprofile - Kernel Symbols (2)": [[438, "oprofile-kernel-symbols-2"]], "oprofile - Kernel Modules": [[438, "oprofile-kernel-modules"]], "oprofile - System-Wide Profiling": [[438, "oprofile-system-wide-profiling"]], "oprofile - Offline Profiling": [[438, "oprofile-offline-profiling"]], "oprofile - Graphical Beauty": [[438, "oprofile-graphical-beauty"]], "The C Programming Language": [[440, "the-c-programming-language"]], "Group Description": [[440, "group-description"], [568, "group-description"], [658, "group-description"], [700, "group-description"], [701, "group-description"], [748, "group-description"], [752, "group-description"], [754, "group-description"], [896, "group-description"], [904, "group-description"], [905, "group-description"], [373, "group-description"], [388, "group-description"], [397, "group-description"], [404, "group-description"], [410, "group-description"], [414, "group-description"], [417, "group-description"], [421, "group-description"], [430, "group-description"], [434, "group-description"], [439, "group-description"], [560, "group-description"], [583, "group-description"], [586, "group-description"], [589, "group-description"], [630, "group-description"], [639, "group-description"], [725, "group-description"], [733, "group-description"], [737, "group-description"], [959, "group-description"]], "Messages From The Book": [[441, "messages-from-the-book"]], "What\u2019s There? What Have We Accomplished?": [[442, "what-s-there-what-have-we-accomplished"]], "Rules? Why Rules?": [[442, "rules-why-rules"]], "Coding Style": [[442, "coding-style"]], "Disclaimer": [[442, null]], "Design Principles: SOLID": [[442, "design-principles-solid"]], "Another One: YAGNI": [[442, "another-one-yagni"]], "Architecture": [[442, "architecture"]], "Project Management: Traditional": [[442, "project-management-traditional"]], "Project Management: Software": [[442, "project-management-software"]], "So What?": [[442, "so-what"]], "Is Software A Craft? Software Is A Craft! \u27f6 Clean Code": [[443, "is-software-a-craft-software-is-a-craft-longrightarrow-clean-code"]], "Uncle Bob": [[443, "uncle-bob"]], "A Typical Project (Livehacking Screenplay: My Own Bookkeeping Effort)": [[444, "a-typical-project-livehacking-screenplay-my-own-bookkeeping-effort"]], "Spaghetti Version": [[444, "spaghetti-version"]], "A Little Better: Functions (And Commandline Parameters)": [[444, "a-little-better-functions-and-commandline-parameters"]], "Feature Request: Concatenate Input Data From Multiple CSV Files": [[444, "feature-request-concatenate-input-data-from-multiple-csv-files"]], "Feature Request: Concatenate Input Data From YYYY-MM.csv Files": [[444, "feature-request-concatenate-input-data-from-yyyy-mm-csv-files"]], "Where Are We? Questions!": [[444, "where-are-we-questions"]], "Testability: Input Cleaning": [[444, "testability-input-cleaning"]], "Testability: Reading Input (One Or Multiple Files, Explicitly)": [[444, "testability-reading-input-one-or-multiple-files-explicitly"]], "Test Sanity: Common Code": [[444, "test-sanity-common-code"]], "Testability: Reading Input From Directory": [[444, "testability-reading-input-from-directory"]], "Testability: Categorization": [[444, "testability-categorization"]], "Safety Net In Place \u27f6 Refactoring Categorization": [[444, "safety-net-in-place-longrightarrow-refactoring-categorization"]], "Refactoring Input Reading (\u27f6 Overengineering)": [[444, "refactoring-input-reading-longrightarrow-overengineering"]], "Basics: Boilerplate, And Executables": [[445, "basics-boilerplate-and-executables"]], "Single Monolithic Executable": [[445, "single-monolithic-executable"]], "Building With CMake": [[445, "building-with-cmake"]], "Building With CMake: Separate Source And Build Directories": [[445, "building-with-cmake-separate-source-and-build-directories"]], "Executables Consisting Of Multiple Sources": [[445, "executables-consisting-of-multiple-sources"]], "Problem: Duplicate Compilation": [[445, "problem-duplicate-compilation"]], "Problem: More Functionality": [[445, "problem-more-functionality"]], "Solution: Libraries": [[445, "solution-libraries"], [994, "solution-libraries"]], "\u201cConfigured\u201d Header Files": [[446, "configured-header-files"]], "Problem": [[446, "problem"], [454, "problem"], [460, "problem"], [461, "problem"], [462, "problem"], [465, "problem"], [471, "problem"], [519, "problem"], [792, "problem"], [923, "problem"]], "Configured Files": [[446, "configured-files"]], "Use In Compiled Code": [[446, "use-in-compiled-code"]], "C++, Debug/Release, CMake \u201cProgramming\u201d, Rants": [[447, "c-debug-release-cmake-programming-rants"]], "Pause": [[447, "pause"]], "Class Diagram": [[447, "class-diagram"]], "C++ Standard Version": [[447, "c-standard-version"]], "Debug Vs. Release Builds: CMAKE_BUILD_TYPE": [[447, "debug-vs-release-builds-cmake-build-type"]], "Compiler Type": [[447, "compiler-type"]], "Strings And Lists": [[447, "strings-and-lists"]], "MESSAGE() (A.k.a printf() Debugging)": [[447, "message-a-k-a-printf-debugging"]], "MESSAGE(): Popular \u201cModes\u201d": [[447, "message-popular-modes"]], "FIND_PACKAGE()": [[448, "find-package"]], "FIND_PACKAGE(... REQUIRED)": [[448, "find-package-required"]], "SQLite3 Parameters": [[448, "sqlite3-parameters"]], "Using SQLite3 Parameters": [[448, "using-sqlite3-parameters"]], "Demo Time": [[448, "demo-time"]], "CMake: An Introduction": [[449, "cmake-an-introduction"]], "Installation (\u201cDeployment\u201d)": [[450, "installation-deployment"]], "\u201cPrefix\u201d: Where Everything Comes Together": [[450, "prefix-where-everything-comes-together"]], "Installing Targets": [[450, "installing-targets"]], "Doing The Installation (make install)": [[450, "doing-the-installation-make-install"]], "And Shared Libraries?": [[450, "and-shared-libraries"]], "Shared Libraries: Installed Vs. Local (RUNPATH)": [[450, "shared-libraries-installed-vs-local-runpath"]], "Shared Libraries: ABI Versions": [[450, "shared-libraries-abi-versions"]], "Libraries, And Dependencies": [[451, "libraries-and-dependencies"]], "Libraries And Executables": [[451, "libraries-and-executables"]], "Targets And Dependencies": [[451, "targets-and-dependencies"]], "Visualizing Dependencies": [[451, "visualizing-dependencies"]], "Optional Code, Approach 1: Optional blacklist, C Macro  (Global Flags)": [[452, "optional-code-approach-1-optional-blacklist-c-macro-global-flags"]], "Optional blacklist, C Macro": [[452, "optional-blacklist-c-macro"]], "Optional Dependency In libhello": [[452, "optional-dependency-in-libhello"]], "Optional Dependency In libhello Header File": [[452, "optional-dependency-in-libhello-header-file"]], "Optional Dependency In libhello CPP File": [[452, "optional-dependency-in-libhello-cpp-file"]], "Good Or Bad?": [[452, "good-or-bad"], [453, "good-or-bad"]], "Optional Code, Approach 2: Pushing Optionality Down In Module Interface": [[453, "optional-code-approach-2-pushing-optionality-down-in-module-interface"]], "Remove Too Much CMake Optionality": [[453, "remove-too-much-cmake-optionality"]], "TARGET_COMPILE_DEFINITIONS() (backlist Availablility)": [[453, "target-compile-definitions-backlist-availablility"]], "Push Optionality Down In blacklist (\u27f6 INTERFACE Targets)": [[453, "push-optionality-down-in-blacklist-longrightarrow-interface-targets"]], "Optional Code: Problem Definition, OPTION()": [[454, "optional-code-problem-definition-option"]], "Solution: Add An Option": [[454, "solution-add-an-option"]], "Define Option USE_BLACKLIST; Option Usage, Cache": [[454, "define-option-use-blacklist-option-usage-cache"]], "Option Handling: Many Approaches": [[454, "option-handling-many-approaches"]], "Shared Libraries (Preview)": [[455, "shared-libraries-preview"]], "\u201cNormal\u201d Libraries": [[455, "normal-libraries"]], "Building Shared Libraries": [[455, "building-shared-libraries"]], "More About Loading": [[455, "more-about-loading"]], "Structure - Subdirectories, Dependencies, and Include Paths": [[456, "structure-subdirectories-dependencies-and-include-paths"]], "Reorganization": [[456, "reorganization"]], "Dependencies, And Target Properties": [[456, "dependencies-and-target-properties"]], "Targets, Properties, And More": [[457, "targets-properties-and-more"]], "Target Types": [[457, "target-types"]], "Properties: PRIVATE, PUBLIC, INTERFACE?": [[457, "properties-private-public-interface"]], "Running Tests": [[458, "running-tests"], [1133, "running-tests"]], "Setup And Usage": [[458, "setup-and-usage"]], "Add Simple Test": [[458, "add-simple-test"]], "Checking Test Output": [[458, "checking-test-output"]], "Questionability": [[458, "questionability"]], "C++ Code": [[459, "c-code"]], "Requirements": [[460, "requirements"], [484, "requirements"], [515, "requirements"], [117, "requirements"], [120, "requirements"], [122, "requirements"], [125, "requirements"], [126, "requirements"], [130, "requirements"], [123, "requirements"], [115, "requirements"], [119, "requirements"], [116, "requirements"], [118, "requirements"], [121, "requirements"]], "Abstract Factory": [[460, "abstract-factory"]], "I2C Sensor Subhierarchy": [[460, "i2c-sensor-subhierarchy"]], "Problem: I2C Sensor Instantiation": [[460, "problem-i2c-sensor-instantiation"]], "Solution: Factory Objects": [[460, "solution-factory-objects"]], "Notes": [[460, "notes"]], "Adapter": [[461, "adapter"]], "Solution: Adaptation": [[461, "solution-adaptation"]], "Basic Adaptation": [[461, "basic-adaptation"]], "Adapter Must Be-A Sensor": [[461, "adapter-must-be-a-sensor"]], "Adaptee Can Be-Any ASensor": [[461, "adaptee-can-be-any-asensor"]], "Adapter Is Doing Real Measurements": [[461, "adapter-is-doing-real-measurements"]], "Command": [[462, "command"]], "Motivation": [[462, "motivation"], [465, "motivation"], [481, "motivation"], [482, "motivation"], [578, "motivation"], [675, "motivation"], [677, "motivation"], [702, "motivation"], [708, "motivation"], [1014, "motivation"], [1020, "motivation"]], "Step 1: Basic insert()": [[462, "step-1-basic-insert"]], "Step 2: Basic find()": [[462, "step-2-basic-find"]], "Step 3: drop()": [[462, "step-3-drop"]], "Step 4: Handle find() Errors": [[462, "step-4-handle-find-errors"]], "Step 5: Handle insert() Errors": [[462, "step-5-handle-insert-errors"]], "Step 6: Bulk Insert?": [[462, "step-6-bulk-insert"]], "Step 6a: Bulk Insert Using std::initializer_list?": [[462, "step-6a-bulk-insert-using-std-initializer-list"]], "SocialDB Source Code": [[463, "socialdb-source-code"]], "Composite": [[464, "composite"]], "Unix Filesystem": [[464, "unix-filesystem"]], "Boolean Expressions": [[464, "boolean-expressions"]], "Thermometers, And Average Calculation": [[464, "thermometers-and-average-calculation"]], "Decorator": [[465, "decorator"]], "Variant 1: Aggregate Base Class Objects": [[465, "variant-1-aggregate-base-class-objects"]], "Variant 2: Aggregate Conrete Class Objects": [[465, "variant-2-aggregate-conrete-class-objects"]], "Step 1: Realize Current Situation": [[465, "step-1-realize-current-situation"]], "Step 2: Decorate ConstantSensor \u27f6 DecoratedConstantSensor": [[465, "step-2-decorate-constantsensor-longrightarrow-decoratedconstantsensor"]], "Step 3: Decorate RandomSensor \u27f6 DecoratedRandomSensor": [[465, "step-3-decorate-randomsensor-longrightarrow-decoratedrandomsensor"]], "Step 4: Verify That DecoratedConstantSensor Can Be Used As Sensor": [[465, "step-4-verify-that-decoratedconstantsensor-can-be-used-as-sensor"]], "Step 5: Verify That DecoratedRandomSensor Can Be Used As Sensor": [[465, "step-5-verify-that-decoratedrandomsensor-can-be-used-as-sensor"]], "Step 6: Verify That Current Situation Still Holds True": [[465, "step-6-verify-that-current-situation-still-holds-true"]], "Design Patterns With C++": [[466, "design-patterns-with-c"]], "Topics/Exercises": [[466, "topics-exercises"]], "Solutions": [[466, "solutions"], [480, "solutions"], [494, "solutions"]], "To Be Done": [[466, "to-be-done"]], "Case Study/Livehacking: Heating Control (Reading Sensors)": [[467, "case-study-livehacking-heating-control-reading-sensors"]], "Step 1: Monolithic": [[467, "step-1-monolithic"]], "Step 2: And D-Bus? \u27f6 Interfaces": [[467, "step-2-and-d-bus-longrightarrow-interfaces"]], "Step 3: Start D-Bus Implementation": [[467, "step-3-start-d-bus-implementation"]], "Pull Demo Logger/Store Out Into Separate Files": [[467, "pull-demo-logger-store-out-into-separate-files"]], "Adapter: DBusLogger": [[467, "adapter-dbuslogger"]], "Adapter: DBusValueStore": [[467, "adapter-dbusvaluestore"]], "Demo Program To Instantiate Either Demo Or DBus": [[467, "demo-program-to-instantiate-either-demo-or-dbus"]], "Stop Here, Need Help": [[467, "stop-here-need-help"]], "Tests": [[467, "tests"], [487, "tests"]], "Interpreter": [[468, "interpreter"]], "Observer": [[469, "observer"]], "OO Design Principles": [[470, "oo-design-principles"]], "Principles: Why? Which?": [[470, "principles-why-which"]], "Single Responsibility": [[470, "single-responsibility"]], "Open/Closed": [[470, "open-closed"]], "Liskov Substitution": [[470, "liskov-substitution"]], "Interface Segregation": [[470, "interface-segregation"]], "Dependency Inversion": [[470, "dependency-inversion"]], "Proxy": [[471, "proxy"]], "Solution: Proxy": [[471, "solution-proxy"]], "Local Variant": [[471, "local-variant"]], "Remote Variant": [[471, "remote-variant"]], "Exercise Foundation: Sensor Hierarchy": [[472, "exercise-foundation-sensor-hierarchy"]], "Hypothetical": [[472, "hypothetical"]], "Class Hierarchy": [[472, "class-hierarchy"]], "Singleton": [[473, "singleton"]], "And class Person?": [[473, "and-class-person"]], "UML Short Introduction": [[474, "uml-short-introduction"]], "Interface": [[474, "interface"]], "Interface Implementation, Inheritance": [[474, "interface-implementation-inheritance"]], "Connectors: Association, Aggregation, Composition": [[474, "connectors-association-aggregation-composition"]], "Association": [[474, "association"]], "Aggregation": [[474, "aggregation"]], "Composition": [[474, "composition"]], "Exercise: Abstract Factory": [[475, "exercise-abstract-factory"]], "Exercise: Adapter": [[476, "exercise-adapter"], [483, "exercise-adapter"]], "Exercise: Command": [[477, "exercise-command"]], "Exercise: Composite": [[478, "exercise-composite"]], "Exercise: Decorator": [[479, "exercise-decorator"]], "Exercises: Design Patterns": [[480, "exercises-design-patterns"]], "Exercise: Interpreter Combined With Adapter (And A Proxy)": [[481, "exercise-interpreter-combined-with-adapter-and-a-proxy"]], "Exercise: Arithmetic Expression Interpreter": [[482, "exercise-arithmetic-expression-interpreter"]], "Expression Interface": [[482, "expression-interface"]], "Arithmetic (Binary) Expressions": [[482, "arithmetic-binary-expressions"]], "Check: Combined Arithmetic Expressions": [[482, "check-combined-arithmetic-expressions"]], "And Variables?": [[482, "and-variables"]], "No Uninitialized Variables!!": [[482, "no-uninitialized-variables"]], "Assigning To Variables": [[482, "assigning-to-variables"]], "Using Variables As Expressions": [[482, "using-variables-as-expressions"]], "Exercise: Proxy (Remote Thermometer)": [[484, "exercise-proxy-remote-thermometer"]], "Network Communication": [[484, "network-communication"]], "Implementation Hints": [[484, "implementation-hints"]], "Exercise: Proxy (Rounding Thermometer)": [[485, "exercise-proxy-rounding-thermometer"]], "Exercise: Singleton (Flexible)": [[486, "exercise-singleton-flexible"]], "Exercise: Singleton (Flexible And Strict)": [[487, "exercise-singleton-flexible-and-strict"]], "Complications": [[487, "complications"]], "Exercise: Singleton (Inflexible)": [[488, "exercise-singleton-inflexible"]], "Solution: Abstract Factory": [[489, "solution-abstract-factory"]], "I2CSensorFactory Abstract Factory": [[489, "i2csensorfactory-abstract-factory"]], "Concrete Factory Implementations": [[489, "concrete-factory-implementations"]], "I2CSensorFactory_Vendor1": [[489, "i2csensorfactory-vendor1"], [489, "id1"]], "Solution: Adapter": [[490, "solution-adapter"]], "Adapter Class For Fahrenheit Sensors": [[490, "adapter-class-for-fahrenheit-sensors"]], "Solution: Command": [[491, "solution-command"]], "Command Classes": [[491, "command-classes"]], "Solution: Composite": [[492, "solution-composite"]], "Averaging (Composite) Sensor": [[492, "averaging-composite-sensor"]], "Solution: Decorator": [[493, "solution-decorator"]], "Decorated Sensor (Intermediate Interface)": [[493, "decorated-sensor-intermediate-interface"]], "Decorated Constant Sensor": [[493, "decorated-constant-sensor"]], "Decorated Random Sensor": [[493, "decorated-random-sensor"]], "Solution: Interpreter Combined With Adapter (And A Proxy)": [[495, "solution-interpreter-combined-with-adapter-and-a-proxy"]], "Solution: Arithmetic Expression Interpreter": [[496, "solution-arithmetic-expression-interpreter"]], "Solution: Observer": [[497, "solution-observer"]], "Solution: Proxy (Remote Thermometer)": [[498, "solution-proxy-remote-thermometer"]], "Client (Proxy) Thermometer": [[498, "client-proxy-thermometer"]], "Remote Stub": [[498, "remote-stub"]], "Solution: Proxy (Rounding Thermometer)": [[499, "solution-proxy-rounding-thermometer"]], "Rounding Sensor (Proxy) Implementation": [[499, "rounding-sensor-proxy-implementation"]], "Solution: Singleton (Flexible)": [[500, "solution-singleton-flexible"]], "Main Program": [[500, "main-program"], [501, "main-program"], [502, "main-program"], [739, "main-program"], [741, "main-program"], [743, "main-program"], [745, "main-program"]], "SocialInsurance Interface": [[500, "socialinsurance-interface"], [501, "socialinsurance-interface"]], "Two Concrete Implementations": [[500, "two-concrete-implementations"], [501, "two-concrete-implementations"]], "OEGK": [[500, "oegk"], [501, "oegk"]], "SVS": [[500, "svs"], [501, "svs"]], "Solution: Singleton (Flexible And Strict)": [[501, "solution-singleton-flexible-and-strict"]], "Solution: Singleton (Inflexible)": [[502, "solution-singleton-inflexible"]], "Singleton Implementation": [[502, "singleton-implementation"]], "Exercise (FH): Introducing a Sensor Class": [[503, "exercise-fh-introducing-a-sensor-class"]], "Github Project": [[503, "github-project"]], "CMake Build": [[503, "cmake-build"], [936, "cmake-build"]], "Dependencies/Usage Relationships": [[503, "dependencies-usage-relationships"]], "Onewire Sensor Usage: Example/Unit-Test": [[503, "onewire-sensor-usage-example-unit-test"]], "Step 1: Preparation": [[503, "step-1-preparation"]], "Step 2: Modify onewire-temperature-<firstname>-<lastname>.cpp To Use class W1Sensor": [[503, "step-2-modify-onewire-temperature-firstname-lastname-cpp-to-use-class-w1sensor"]], "Step 3: Answer A Question": [[503, "step-3-answer-a-question"]], "Exercise (FH): Extract Measurement Loop Into Function": [[504, "exercise-fh-extract-measurement-loop-into-function"]], "Exercise (FH): Replace Sensor": [[505, "exercise-fh-replace-sensor"]], "Exercise (FH): Write A Sensor Class: RandomSensor": [[506, "exercise-fh-write-a-sensor-class-randomsensor"]], "New Sensor Class: RandomSensor": [[506, "new-sensor-class-randomsensor"]], "Implementation Details": [[506, "implementation-details"]], "New Program: random-temperature.cpp": [[506, "new-program-random-temperature-cpp"]], "FH Sensor OO (First Try)": [[507, "fh-sensor-oo-first-try"]], "C++ Exercises": [[508, "c-exercises"]], "Exercise Projects": [[508, "exercise-projects"]], "Exercise: LEDStripeDisplay_nopoly (Non-Polymorphic)": [[509, "exercise-ledstripedisplay-nopoly-non-polymorphic"]], "Topics Covered": [[509, "topics-covered"], [510, "topics-covered"], [511, "topics-covered"], [512, "topics-covered"], [513, "topics-covered"], [514, "topics-covered"], [515, "topics-covered"], [518, "topics-covered"]], "Exercise: Hysteresis_nopoly (Non-Polymorphic)": [[510, "exercise-hysteresis-nopoly-non-polymorphic"]], "Exercise: AveragingSensor_nopoly (Non-Polymorphic)": [[511, "exercise-averagingsensor-nopoly-non-polymorphic"]], "Exercise: ConstantSensor_nopoly (Non-Polymorphic)": [[512, "exercise-constantsensor-nopoly-non-polymorphic"]], "Exercise: MockSensor_nopoly (Non-Polymorphic)": [[513, "exercise-mocksensor-nopoly-non-polymorphic"]], "Exercise: RandomSensor_nopoly (Non-Polymorphic)": [[514, "exercise-randomsensor-nopoly-non-polymorphic"]], "Implementation Hint: Randomicity In C++": [[514, "implementation-hint-randomicity-in-c"]], "Implementation Hint: Initializer Lists": [[514, "implementation-hint-initializer-lists"]], "Exercise: Mocking Switch (Non-Polymorphic)": [[515, "exercise-mocking-switch-non-polymorphic"]], "OO Basics, Interfaces (Shapes)": [[516, "oo-basics-interfaces-shapes"]], "Exercise Table": [[516, "exercise-table"]], "Setup, Exam Procedure": [[516, "setup-exam-procedure"]], "Point": [[516, "point"]], "Point: Constructor and Getter Methods": [[516, "point-constructor-and-getter-methods"]], "Point: Default Constructor": [[516, "point-default-constructor"]], "Point: Static Method: equal()": [[516, "point-static-method-equal"]], "Point: operator==()": [[516, "point-operator"]], "Point: Method: move()": [[516, "point-method-move"]], "Point: operator+=()": [[516, "point-suite-operator-plus-equals"]], "Point: Static Method: add()": [[516, "point-static-method-add"]], "Point: operator+()": [[516, "point-suite-operator-plus"]], "Circle": [[516, "circle"]], "Circle: Constructor": [[516, "circle-constructor"]], "Circle: operator==()": [[516, "circle-operator"]], "Circle: Method: area()": [[516, "circle-method-area"]], "Square": [[516, "square"]], "Square: Constructor": [[516, "square-constructor"]], "Square: operator==()": [[516, "square-operator"]], "Square: Method: area()": [[516, "square-method-area"]], "Interface: Shape": [[516, "interface-shape"]], "Interface: Circle And Square Is-A Shape": [[516, "interface-circle-and-square-is-a-shape"]], "Interface: Can Compute Area Of Any Shape": [[516, "interface-can-compute-area-of-any-shape"]], "Working On Exercise Projects": [[517, "working-on-exercise-projects"]], "Clone Github Repository": [[517, "clone-github-repository"]], "Massage googletest Sub-Module": [[517, "massage-googletest-sub-module"]], "Build Directory: Create Makefiles With cmake": [[517, "build-directory-create-makefiles-with-cmake"]], "Build Directory: Build With make": [[517, "build-directory-build-with-make"]], "Build Directory: Run Tests": [[517, "build-directory-run-tests"]], "Exercise: Sensor Interface": [[518, "exercise-sensor-interface"]], "Problem: Polymorphic Thermometer Usage": [[518, "problem-polymorphic-thermometer-usage"]], "The Exercise": [[518, "the-exercise"]], "Implementation": [[519, "implementation"], [120, "implementation"], [122, "implementation"], [125, "implementation"], [126, "implementation"], [130, "implementation"], [115, "implementation"], [119, "implementation"]], "Exercise: OneWire Sensor Factory": [[519, "exercise-onewire-sensor-factory"]], "Fixture": [[519, "fixture"], [753, "fixture"]], "basic": [[519, "basic"]], "notfound": [[519, "notfound"]], "find_is_const": [[519, "find-is-const"]], "Testing In Isolation": [[519, "testing-in-isolation"]], "Testing In Reality": [[519, "testing-in-reality"]], "On The PC": [[519, "on-the-pc"]], "On The Target": [[519, "on-the-target"]], "Exercise: OneWire Sensor Class": [[520, "exercise-onewire-sensor-class"]], "Download Monolithic Sensor Implementation": [[520, "download-monolithic-sensor-implementation"]], "Test Monolithic Implementation": [[520, "test-monolithic-implementation"]], "class W1Sensor": [[520, "class-w1sensor"]], "Exercise: Algorithms": [[521, "exercise-algorithms"]], "Copy Into std::vector": [[521, "copy-into-std-vector"]], "Find Element In std::vector": [[521, "find-element-in-std-vector"]], "Sort In-Place": [[521, "sort-in-place"]], "Sort Into A Copy": [[521, "sort-into-a-copy"]], "Exercise: Generic Filter": [[522, "exercise-generic-filter"]], "Exercise: Filter Elements Greater Than 10": [[523, "exercise-filter-elements-greater-than-10"]], "Exercise: Filter Odd Elements": [[524, "exercise-filter-odd-elements"]], "C++ Exercises: Standard Template Library": [[525, "c-exercises-standard-template-library"]], "Exercise: std::map<>": [[526, "exercise-std-map"]], "Exercises: Sensor Repository (std::map)": [[527, "exercises-sensor-repository-std-map"]], "Insert - Not Overwriting Existing Elements": [[528, "insert-not-overwriting-existing-elements"]], "Insert - Sunny Case": [[529, "insert-sunny-case"]], "Lookup - Not Found": [[530, "lookup-not-found"]], "Lookup - Sunny Case": [[531, "lookup-sunny-case"]], "Memory Leaks?": [[532, "memory-leaks"]], "Remove - Not Found": [[533, "remove-not-found"]], "Remove - Sunny Case": [[534, "remove-sunny-case"]], ".size() Is const": [[535, "size-is-const"]], "Exercise: Uniquify A Sequence": [[536, "exercise-uniquify-a-sequence"]], "Exercise: std::vector<>": [[537, "exercise-std-vector"]], "C++: TODO List": [[538, "c-todo-list"]], "Structural": [[538, "structural"]], "STL, Containers and Algorithms": [[538, "stl-containers-and-algorithms"]], "Templates/Overloading": [[538, "templates-overloading"]], "Functors: Overloading the Function Call Operator": [[538, "functors-overloading-the-function-call-operator"]], "Threads": [[538, "threads"]], "C++ >= 11": [[538, "c-11"]], "UserDB Exercise": [[538, "userdb-exercise"]], "Complete Transcription of C++11": [[538, "complete-transcription-of-c-11"]], "Exercise series": [[538, "exercise-series"]], "Code: C++: Class Templates": [[539, "code-c-class-templates"]], "Screenplay: C++: Class Templates": [[540, "screenplay-c-class-templates"]], "C++: Class Templates": [[541, "c-class-templates"]], "Code: C++: Dynamic Memory": [[542, "code-c-dynamic-memory"]], "Screenplay: C++: Dynamic Memory": [[543, "screenplay-c-dynamic-memory"]], "C: malloc()/free()": [[543, "c-malloc-free"]], "valgrind: Memory Leak": [[543, "valgrind-memory-leak"]], "valgrind: Array Bounds Write": [[543, "valgrind-array-bounds-write"]], "C++: new, delete": [[543, "c-new-delete"]], "C++: new, delete on Arrays": [[543, "c-new-delete-on-arrays"]], "valgrind: delete Mismatch": [[543, "valgrind-delete-mismatch"]], "C++: Dynamic Memory": [[544, "c-dynamic-memory"]], "Code: C++: Global Objects Initialization": [[545, "code-c-global-objects-initialization"]], "Screenplay: C++: Global Objects Initialization": [[546, "screenplay-c-global-objects-initialization"]], "Constructor and Destructor Order in Same File": [[546, "constructor-and-destructor-order-in-same-file"]], "Constructor and Destructor Order Across Files": [[546, "constructor-and-destructor-order-across-files"]], "Constructor and Destructor Order Across Files: Dependencies, Bugs": [[546, "constructor-and-destructor-order-across-files-dependencies-bugs"]], "C++: Global Objects Initialization": [[547, "c-global-objects-initialization"]], "Code: C++: Inheritance, Interfaces, virtual": [[548, "code-c-inheritance-interfaces-virtual"]], "Screenplay: C++: Inheritance, Interfaces, virtual": [[549, "screenplay-c-inheritance-interfaces-virtual"]], "C++: Inheritance, Interfaces, virtual": [[550, "c-inheritance-interfaces-virtual"]], "Code: C++: Ownership/RAII": [[551, "code-c-ownership-raii"]], "Screenplay: C++: Ownership/RAII": [[552, "screenplay-c-ownership-raii"]], "Allocate in Constructor": [[552, "allocate-in-constructor"]], "Deallocate in Destructor - Ownership": [[552, "deallocate-in-destructor-ownership"]], "Ownership: 2 x non-const": [[552, "ownership-2-x-non-const"]], "Ownership: const Method": [[552, "ownership-const-method"]], "Ownership: 2 x const": [[552, "ownership-2-x-const"]], "C++: Ownership/RAII": [[553, "c-ownership-raii"]], "Code: C++: STL Containers (Intro)": [[554, "code-c-stl-containers-intro"]], "Screenplay: C++: STL Containers (Intro)": [[555, "screenplay-c-stl-containers-intro"]], "Pointer Arithmetics Recap": [[555, "pointer-arithmetics-recap"]], "Container: std::vector": [[555, "container-std-vector"]], "Algorithm: std::vector and Naive Copy": [[555, "algorithm-std-vector-and-naive-copy"]], "Algorithm: std::vector and std::copy<>": [[555, "algorithm-std-vector-and-std-copy"]], "Container: std::list": [[555, "container-std-list"]], "Container: std::map": [[555, "container-std-map"]], "C++: STL Containers (Intro)": [[556, "c-stl-containers-intro"]], "Code: C++: Templates vs. Interfaces": [[557, "code-c-templates-vs-interfaces"]], "Screenplay: C++: Templates vs. Interfaces": [[558, "screenplay-c-templates-vs-interfaces"]], "C++: Templates vs. Interfaces": [[559, "c-templates-vs-interfaces"]], "Background": [[561, "background"]], "History": [[561, "history"], [995, "history"]], "Content": [[561, "content"]], "Object Oriented Programming In Good Ol\u2019 C": [[562, "object-oriented-programming-in-good-ol-c"]], "C Is Simple, So Why C++?": [[562, "c-is-simple-so-why-c"]], "struct point: Something That Looks Like A Point": [[562, "struct-point-something-that-looks-like-a-point"]], "Good Style: Explicit Initialization Functions": [[562, "good-style-explicit-initialization-functions"]], "Comparison Functions: (In)Equality": [[562, "comparison-functions-in-equality"]], "Moving Points": [[562, "moving-points"]], "Vector Addition and Subtraction": [[562, "vector-addition-and-subtraction"]], "Distance Of Two Points": [[562, "distance-of-two-points"]], "Length Of A Point\u2019s Position Vector": [[562, "length-of-a-point-s-position-vector"]], "Summary: Is C Good Enough?": [[562, "summary-is-c-good-enough"]], "Copy Constructor, Assignment Operator": [[563, "copy-constructor-assignment-operator"]], "Compiler Generated Copy Constructor": [[563, "compiler-generated-copy-constructor"]], "Rule": [[563, null], [566, null], [665, "rule"]], "Manually Written Copy Constructor And Assignment Operator": [[563, "manually-written-copy-constructor-and-assignment-operator"]], "Classes and Objects": [[564, "classes-and-objects"]], "Introducing C++: class point": [[564, "introducing-c-class-point"]], "Access Specifiers: public And private": [[564, "access-specifiers-public-and-private"]], "Default Constructor": [[564, "default-constructor"], [566, "default-constructor"], [579, "default-constructor"], [580, "default-constructor"], [581, "default-constructor"], [582, "default-constructor"]], "Custom Constructor: Usage": [[564, "custom-constructor-usage"]], "Custom Constructor: Implementation": [[564, "custom-constructor-implementation"]], "Access Methods For Otherwise Private Members": [[564, "access-methods-for-otherwise-private-members"]], "Methods: Operations On An Object": [[564, "methods-operations-on-an-object"]], "And printf()?!": [[564, "and-printf"]], "Custom Constructor": [[565, "custom-constructor"], [579, "custom-constructor"]], "Constructors: why? (1)": [[565, "constructors-why-1"]], "Constructors: why? (2)": [[565, "constructors-why-2"]], "Constructors: Implementation - Inline": [[565, "constructors-implementation-inline"]], "Constructors: Implementation - Out-of-Line": [[565, "constructors-implementation-out-of-line"]], "Compiler Generated Default Constructor": [[566, "compiler-generated-default-constructor"]], "Compiler Generated Default Constructor: Pitfall: Built-In Types": [[566, "compiler-generated-default-constructor-pitfall-built-in-types"]], "Manually Written Default Constructor": [[566, "manually-written-default-constructor"]], "What If User-Defined Constructors Are In Place?": [[566, "what-if-user-defined-constructors-are-in-place"]], "More Constructors, Destructors": [[567, "more-constructors-destructors"]], "Default Constructor (1)": [[567, "default-constructor-1"]], "Default Constructor (2)": [[567, "default-constructor-2"]], "Object Lifecycle - Destructor": [[567, "object-lifecycle-destructor"]], "Destructors (1)": [[567, "destructors-1"]], "Destructors (2)": [[567, "destructors-2"]], "Destructors (3)": [[567, "destructors-3"]], "Destructors (4)": [[567, "destructors-4"]], "Data Encapsulation": [[568, "data-encapsulation"]], "Constructors: Member Initialization": [[569, "constructors-member-initialization"]], "Member Initialization? Assignment?": [[569, "member-initialization-assignment"]], "Real Initialization: Initializer List": [[569, "real-initialization-initializer-list"]], "Why Is That Important?": [[569, "why-is-that-important"]], "Why Else Is That Important?": [[569, "why-else-is-that-important"]], "Object Copy (And Resource Management): There Be Dragons": [[570, "object-copy-and-resource-management-there-be-dragons"]], "Copy in C": [[570, "copy-in-c"]], "Copy Constructor": [[570, "copy-constructor"]], "Pointer Members, And Compiler Generated Copy": [[570, "pointer-members-and-compiler-generated-copy"]], "Why? Dragons Everywhere!": [[570, "why-dragons-everywhere"]], "Solution: Write Copy Constructor Manually": [[570, "solution-write-copy-constructor-manually"]], "Copy Constructor: Recursive/Memberwise": [[570, "copy-constructor-recursive-memberwise"]], "Assignment Operator": [[570, "assignment-operator"]], "Assignment Operator and Pointer Members: Memory Leak": [[570, "assignment-operator-and-pointer-members-memory-leak"]], "Assignment Operator and Pointer Members: Memory Leak, Straighforward Fix": [[570, "assignment-operator-and-pointer-members-memory-leak-straighforward-fix"]], "Assignment Operator and Pointer Members: Self-Assignment": [[570, "assignment-operator-and-pointer-members-self-assignment"]], "Assignment Operator: Self Assignment, Correctly Implemented": [[570, "assignment-operator-self-assignment-correctly-implemented"]], "Overloading": [[571, "overloading"]], "Functions in C": [[571, "functions-in-c"]], "Functions in C++ \u2014 Overloading": [[571, "functions-in-c-overloading"]], "Underlying Mechanism: Name Mangling": [[571, "underlying-mechanism-name-mangling"]], "Overloading Class Methods: Just The Same": [[571, "overloading-class-methods-just-the-same"]], "Objects - Data and Methods": [[572, "objects-data-and-methods"]], "class point Again": [[572, "class-point-again"]], "Simple Methods: Access Methods (\u201cGetters\u201d)": [[572, "simple-methods-access-methods-getters"]], "How Are Members Accessed Inside Methods?": [[572, "how-are-members-accessed-inside-methods"]], "const Methods": [[572, "const-methods"], [573, "const-methods"]], "Non const Methods": [[572, "non-const-methods"]], "const": [[573, "const"]], "const: Immutable Variable": [[573, "const-immutable-variable"]], "const Correctness vs. Pollution": [[573, "const-correctness-vs-pollution"]], "this": [[574, "this"]], "Hidden Pointer: this (1)": [[574, "hidden-pointer-this-1"]], "Hidden Pointer: this (2)": [[574, "hidden-pointer-this-2"]], "Explicit this Pointer": [[574, "explicit-this-pointer"]], "Pass By Copy/Reference": [[575, "pass-by-copy-reference"]], "Pointers Can Be Left Uninitialized": [[575, "pointers-can-be-left-uninitialized"]], "References Cannot (Easily) Be Left Uninitialized": [[575, "references-cannot-easily-be-left-uninitialized"]], "Copy? Reference? C? Pointers!": [[575, "copy-reference-c-pointers"]], "C++: True References": [[575, "c-true-references"]], "And const? Pointers?": [[575, "and-const-pointers"]], "const References": [[575, "const-references"]], "const Reference: Substitute For \u201cPass by Copy\u201d": [[575, "const-reference-substitute-for-pass-by-copy"]], "static Methods": [[576, "static-methods"]], "Methods without Object": [[576, "methods-without-object"]], "Naive Implementation: Global Function": [[576, "naive-implementation-global-function"]], "C++: static Method": [[576, "c-static-method"]], "static Member Variables": [[577, "static-member-variables"]], "Good Old C: extern Global Variables": [[577, "good-old-c-extern-global-variables"]], "ODR: One Definition Rule": [[577, "odr-one-definition-rule"]], "(A Litte) More Overengineered: Declaration In Header File": [[577, "a-litte-more-overengineered-declaration-in-header-file"]], "Same Inside A Class: static Member Variable": [[577, "same-inside-a-class-static-member-variable"]], "Sideway: Definition In A Header File?": [[577, "sideway-definition-in-a-header-file"]], "static inline Member Defnition (Since C++17)": [[577, "static-inline-member-defnition-since-c-17"]], "Implementing (In)Equality": [[578, "implementing-in-equality"]], "Implementing (In)Equality: Global Function": [[578, "implementing-in-equality-global-function"]], "Implementing (In)Equality: Object Method": [[578, "implementing-in-equality-object-method"]], "Implementing Arithmetic: + (Vector Addition)": [[578, "implementing-arithmetic-vector-addition"]], "Implementing Arithmetic: + (Vector Addition): Global Function": [[578, "implementing-arithmetic-vector-addition-global-function"]], "Implementing Arithmetic: + (Vector Addition): Object Method": [[578, "implementing-arithmetic-vector-addition-object-method"]], "Implementing Arithmetic: += (Moving A Point)": [[578, "implementing-arithmetic-moving-a-point"]], "Implementing ostream Shift: std::cout << ...": [[578, "implementing-ostream-shift-std-cout"]], "Exercise (FH): class cuboid": [[579, "exercise-fh-class-cuboid"]], "Building class cuboid Upon class point3d": [[579, "building-class-cuboid-upon-class-point3d"]], "(In-)Equality": [[579, "in-equality"], [580, "in-equality"], [581, "in-equality"], [582, "in-equality"]], "+=": [[579, "id2"], [580, "id1"], [581, "id2"], [582, "id2"]], "-=": [[579, "id4"], [581, "id4"]], "+": [[579, "id6"], [580, "id2"], [581, "id6"], [582, "id3"]], "-": [[579, "id8"], [581, "id8"]], "<< (std::ostream)": [[579, "std-ostream"], [580, "std-ostream"], [581, "std-ostream"], [582, "std-ostream"]], "Surface": [[579, "surface"]], "Volume": [[579, "volume"]], "Exercise (FH): class point": [[580, "exercise-fh-class-point"]], "Initial Build": [[580, "initial-build"]], "Initial Test Run": [[580, "initial-test-run"]], "Extending class point: More Unit Tests": [[580, "extending-class-point-more-unit-tests"]], "Access Methods": [[580, "access-methods"]], "Unary -": [[580, "unary"], [581, "unary"]], "Exercise (FH): class point3d": [[581, "exercise-fh-class-point3d"]], "Building class rectangle Upon class point": [[581, "building-class-rectangle-upon-class-point"], [582, "building-class-rectangle-upon-class-point"]], "Coordinates": [[581, "coordinates"], [582, "coordinates"]], "Absolute Value": [[581, "absolute-value"]], "Distance Between Two Points": [[581, "distance-between-two-points"]], "Exercise (FH): class rectangle": [[582, "exercise-fh-class-rectangle"]], "Width, Height, Area": [[582, "width-height-area"]], "Error Handling: if - else if - else": [[584, "error-handling-if-else-if-else"]], "try - catch": [[585, "try-catch"]], "try - Block": [[585, "try-block"]], "catch - Block": [[585, "catch-block"]], "Standard Library: Exception-Hierarchy": [[585, "standard-library-exception-hierarchy"]], "Custom Exceptions (1)": [[585, "custom-exceptions-1"]], "Custom Exceptions (2)": [[585, "custom-exceptions-2"]], "Throwing Exceptions - throw": [[585, "throwing-exceptions-throw"]], "Last Words": [[585, "last-words"], [588, "last-words"]], "Function Templates": [[587, "function-templates"]], "Origin: Duplicated Code": [[587, "origin-duplicated-code"]], "A simple Function-Template": [[587, "a-simple-function-template"]], "More Templates from the STL": [[587, "more-templates-from-the-stl"]], "Class Templates": [[588, "class-templates"]], "Does This Work With Classes?": [[588, "does-this-work-with-classes"]], "Example: point as a Class Template (1)": [[588, "example-point-as-a-class-template-1"]], "Example: point as a Class Template (2)": [[588, "example-point-as-a-class-template-2"]], "Screenplay: std::copy<>() From <algorithm>": [[590, "screenplay-std-copy-from-algorithm"]], "Screenplay: Pointer Arithmetic, And Algorithms": [[591, "screenplay-pointer-arithmetic-and-algorithms"]], "Screenplay: Pointer Arithmetic Basics": [[592, "screenplay-pointer-arithmetic-basics"]], "Screenplay: Pointer Difference": [[593, "screenplay-pointer-difference"]], "Screenplay: Out Of Range Errors": [[594, "screenplay-out-of-range-errors"]], "Standard Template Library: Basics": [[595, "standard-template-library-basics"]], "Containers, Iterators, Algorithms": [[595, "containers-iterators-algorithms"]], "Pointer Increment and Decrement": [[595, "pointer-increment-and-decrement"]], "Out Of Range Errors (The Spirit Of C)": [[595, "out-of-range-errors-the-spirit-of-c"]], "Pointer Difference": [[595, "pointer-difference"]], "Step Width? (1)": [[595, "step-width-1"]], "Step Width? (2)": [[595, "step-width-2"]], "And Arbitrary Data Types?": [[595, "and-arbitrary-data-types"]], "Enter Algorithms (On Good Old C Arrays)": [[595, "enter-algorithms-on-good-old-c-arrays"]], "STL Algorithms": [[595, "stl-algorithms"]], "STL Containers": [[595, "stl-containers"]], "std::vector (And std::copy())": [[596, "std-vector-and-std-copy"]], "Dynamicity Details": [[596, "dynamicity-details"]], "STL Iterators: Pointer Arithmetic On A std::vector<>": [[596, "stl-iterators-pointer-arithmetic-on-a-std-vector"]], "Algorithms And Containers : std::copy": [[596, "algorithms-and-containers-std-copy"]], "Screenplay: std::vector And std::copy()": [[597, "screenplay-std-vector-and-std-copy"]], "std::vector<> Into C Array": [[597, "std-vector-into-c-array"]], "Copying Into std::vector (Without Allocation)": [[597, "copying-into-std-vector-without-allocation"]], "Solution 1: Pre-allocate Destination": [[597, "solution-1-pre-allocate-destination"]], "Solution 2: std::back_insert_iterator": [[597, "solution-2-std-back-insert-iterator"]], "Screenplay: std::vector Basics": [[598, "screenplay-std-vector-basics"]], "Screenplay: std::vector, And Pointer Arithmetics": [[599, "screenplay-std-vector-and-pointer-arithmetics"]], "Documentation": [[600, null], [601, null], [602, null], [603, null], [604, null], [606, null], [607, null], [608, null], [609, null], [612, null], [613, null], [616, null], [621, null], [766, null], [766, null], [782, null], [784, "documentation"], [784, null], [788, "documentation"], [790, null], [790, null], [790, null], [816, "documentation"], [819, "documentation"], [829, null], [830, null], [833, null], [837, null], [837, null], [844, null], [845, null], [846, null], [846, null], [846, null], [847, null], [862, null], [862, null], [862, null], [863, null], [864, null], [865, null], [881, null], [881, null], [881, null], [884, null], [885, null], [918, null], [920, null], [922, null], [924, null], [925, null], [926, null], [928, null], [928, null], [928, null], [928, null], [928, null], [928, null], [931, null], [932, null], [933, null], [934, null], [934, null], [935, null], [938, null], [938, null], [938, null], [938, null], [976, null], [976, null], [977, null], [1052, null], [1062, null], [1140, "documentation"]], "binary_search<>: On Sorted Sequence": [[600, "binary-search-on-sorted-sequence"]], "More Intelligent Search": [[600, "more-intelligent-search"], [606, "more-intelligent-search"]], "copy<>": [[601, "copy"]], "find<>: Sequential Search, by Equality": [[602, "find-sequential-search-by-equality"]], "Basic Usage": [[602, "basic-usage"], [721, "basic-usage"], [884, "basic-usage"], [1054, "basic-usage"]], "Not Found?": [[602, "not-found"]], "find_if<>: Sequential Search, Customizable": [[603, "find-if-sequential-search-customizable"]], "if, Using a Plain Function": [[603, "if-using-a-plain-function"]], "if, Using a Functor Class": [[603, "if-using-a-functor-class"]], "for_each<>": [[604, "for-each"]], "Basic Algorithms": [[605, "basic-algorithms"]], "Sorted Arrays": [[605, "sorted-arrays"]], "lower_bound<>: On Sorted Sequence": [[606, "lower-bound-on-sorted-sequence"]], "reverse<>: Reversing In-Place": [[607, "reverse-reversing-in-place"]], "reverse_copy<>: Copying and Reversing": [[608, "reverse-copy-copying-and-reversing"]], "sort<>": [[609, "sort"]], "Algorithm: std::sort": [[609, "algorithm-std-sort"]], "Algorithm: std::sort, custom comparison": [[609, "algorithm-std-sort-custom-comparison"]], "Sequential Containers": [[610, "sequential-containers"], [611, "sequential-containers"]], "Common Characteristics": [[610, "common-characteristics"]], "list<>": [[612, "list"]], "Insertion and Deletion": [[612, "insertion-and-deletion"]], "vector<>": [[613, "vector"]], "Characteristics": [[613, "characteristics"]], "Modification at the Back": [[613, "modification-at-the-back"]], "Insertion": [[613, "insertion"]], "Example": [[613, "example"], [1069, "example"]], "Associative Containers": [[614, "associative-containers"], [615, "associative-containers"]], "Type Instantiation": [[616, "type-instantiation"]], "Filling The Container": [[616, "filling-the-container"]], "Inserting Elements": [[616, "inserting-elements"]], "Searching": [[616, "searching"], [640, "searching"]], "Screenplay: std::map Initialization And Inserting": [[617, "screenplay-std-map-initialization-and-inserting"]], "Definining The Type": [[617, "definining-the-type"]], "Initialization": [[617, "initialization"], [640, "initialization"]], "Screenplay: Inserting Elements": [[618, "screenplay-inserting-elements"]], "Subscript Operator": [[618, "subscript-operator"]], "insert()": [[618, "insert"]], "Screenplay: Removing (Erasing) Elements": [[619, "screenplay-removing-erasing-elements"]], "By Pointer (Err, Iterator)": [[619, "by-pointer-err-iterator"]], "By Key": [[619, "by-key"]], "Screenplay: Searching": [[620, "screenplay-searching"]], "find(key)": [[620, "find-key"]], "[key]": [[620, "key"]], "at(key)": [[620, "at-key"]], "multimap<>": [[621, "multimap"]], "Allocator Basics": [[622, "allocator-basics"]], "STL: Exercises": [[624, "stl-exercises"]], "Exercise: Reverse a String": [[625, "exercise-reverse-a-string"]], "Exercise: Reverse A String": [[626, "exercise-reverse-a-string"]], "Solution: Reverse a String": [[627, "solution-reverse-a-string"]], "Naive": [[627, "naive"]], "Using std::reverse<>": [[627, "using-std-reverse"]], "Using std::reverse_copy<>": [[627, "using-std-reverse-copy"]], "Dynamic Memory (To Be Done)": [[629, "dynamic-memory-to-be-done"]], "Inheritance Basics": [[631, "inheritance-basics"]], "Plain (Base) Class": [[631, "plain-base-class"], [632, "plain-base-class"]], "Inheriting (Deriving) From Base": [[631, "inheriting-deriving-from-base"]], "Derived is-a Base?": [[631, "derived-is-a-base"]], "Destructors And Inheritance": [[632, "destructors-and-inheritance"]], "Derived Class, And Destructor": [[632, "derived-class-and-destructor"]], "And Base Class Conversion?": [[632, "and-base-class-conversion"]], "Inheritance And Object Oriented Design": [[633, "inheritance-and-object-oriented-design"]], "C++ \u201cInterfaces\u201d": [[634, "c-interfaces"]], "Bringing It All Together": [[634, "bringing-it-all-together"]], "Polymorphic Usage Of Objects": [[635, "polymorphic-usage-of-objects"]], "What Larger Systems Want": [[635, "what-larger-systems-want"]], "Pitfall \u27f6 Pure Virtual Methods": [[635, "pitfall-longrightarrow-pure-virtual-methods"]], "Pure Virtual Method": [[635, "pure-virtual-method"]], "Inheritance: private, protected (Implementation Inheritance)": [[636, "inheritance-private-protected-implementation-inheritance"]], "Virtual Destructors": [[637, "virtual-destructors"]], "Is-A Relationships And Destructors": [[637, "is-a-relationships-and-destructors"]], "Pure Virtual Destructor?": [[637, "pure-virtual-destructor"]], "Virtual Methods": [[638, "virtual-methods"]], "Simple Is-A Relationship Is Not Enough": [[638, "simple-is-a-relationship-is-not-enough"]], "Enter virtual": [[638, "enter-virtual"]], "Caution: virtual": [[638, "caution-virtual"]], "std::string": [[640, "std-string"]], "Addition, And Such": [[640, "addition-and-such"]], "Conversion From String": [[640, "conversion-from-string"]], "Conversion To String": [[640, "conversion-to-string"]], "Substrings": [[640, "substrings"]], "Exercise: Paint the American Flag Onto Standard Output": [[641, "exercise-paint-the-american-flag-onto-standard-output"]], "FH/Moodle Quiz: C++": [[642, "fh-moodle-quiz-c"]], "Exercises: Miscellaneous": [[643, "exercises-miscellaneous"]], "Exercise: Sum of Integers Coming From cin": [[644, "exercise-sum-of-integers-coming-from-cin"]], "Exercises: User Database": [[645, "exercises-user-database"]], "Exercise: Access Methods for Members": [[646, "exercise-access-methods-for-members"]], "Exercise: const Members": [[647, "exercise-const-members"]], "Exercise: Use const": [[648, "exercise-use-const"]], "Exercise: Default Constructor (was: Arrays of Objects)": [[649, "exercise-default-constructor-was-arrays-of-objects"]], "Exercise: Simple Method (Users Age By n Years)": [[650, "exercise-simple-method-users-age-by-n-years"]], "Exercise: Transform struct User Into A Class": [[651, "exercise-transform-struct-user-into-a-class"]], "Exercise: Insert a User into UserDB": [[652, "exercise-insert-a-user-into-userdb"]], "Exercise: Search a User By Lastname (std::find_if)": [[653, "exercise-search-a-user-by-lastname-std-find-if"]], "Exercise: Search, \u201cUser Not Found\u201d Exception": [[654, "exercise-search-user-not-found-exception"]], "What\u2019s Wrong?": [[654, "what-s-wrong"]], "Exercise: Search a User By Lastname": [[655, "exercise-search-a-user-by-lastname"]], "Exercise: Use std::vector in UserDB": [[656, "exercise-use-std-vector-in-userdb"]], "History, Background": [[659, "history-background"]], "Make C++ Great Again": [[659, "make-c-great-again"]], "The \u201cNew\u201d C++": [[659, "the-new-c"]], "A Live-Hacked Tour Around The New C++": [[660, "a-live-hacked-tour-around-the-new-c"]], "C++03 To-Do List Version": [[660, "c-03-to-do-list-version"]], "Real Container Initialization": [[660, "real-container-initialization"]], "Long iterator Type Names \u27f6 auto": [[660, "long-iterator-type-names-longrightarrow-auto"]], "More auto: Unpacking std::pair": [[660, "more-auto-unpacking-std-pair"]], "Pitfall: Plain auto Creates Copy \u27f6 const auto&": [[660, "pitfall-plain-auto-creates-copy-longrightarrow-const-auto"]], "Iterators Are So Old-School: Range Based For": [[660, "iterators-are-so-old-school-range-based-for"]], "Still Too Old-School: Want Python\u2019s Tuple Unpacking": [[660, "still-too-old-school-want-python-s-tuple-unpacking"]], "What If To-Do List Items Can Really Do Something? \u27f6 Functions": [[660, "what-if-to-do-list-items-can-really-do-something-longrightarrow-functions"]], "Function Pointers Are Old-School \u27f6 std::function": [[660, "function-pointers-are-old-school-longrightarrow-std-function"]], "Definitely Not Old-School: Lambda": [[660, "definitely-not-old-school-lambda"]], "Inevitable: Threads": [[660, "inevitable-threads"]], "Unions? std::variant!": [[660, "unions-std-variant"]], "Wrapping All That Into A Class": [[660, "wrapping-all-that-into-a-class"]], "Architectural Considerations: No Implementation Inheritance Wanted": [[660, "architectural-considerations-no-implementation-inheritance-wanted"]], "Wrapping Up: Initializer": [[660, "wrapping-up-initializer"]], "C++03 enum Types: Motivation": [[661, "c-03-enum-types-motivation"]], "C++03 enum Types: Problems": [[661, "c-03-enum-types-problems"]], "C++11 enum class": [[661, "c-11-enum-class"]], "C++11 enum class: Underlying Type": [[661, "c-11-enum-class-underlying-type"]], "Brace Initialization (Uniform Initialization)": [[662, "brace-initialization-uniform-initialization"]], "std::initializer_list: Brace Initialization, Implementor\u2019s View": [[663, "std-initializer-list-brace-initialization-implementor-s-view"]], "std::initializer_list": [[663, "std-initializer-list"]], "Direct Usage": [[663, "direct-usage"]], "Custom Class That Supports Brace Initialization": [[663, "custom-class-that-supports-brace-initialization"]], "Brace Initialization: Introduction": [[664, "brace-initialization-introduction"]], "Motivation: Inconsistent Initialization Styles": [[664, "motivation-inconsistent-initialization-styles"]], "Motivation: Integral Types Initialization": [[664, "motivation-integral-types-initialization"]], "Motivation: Aggregate Initialization": [[664, "motivation-aggregate-initialization"]], "Motivation: Object Initialization/Constructor": [[664, "motivation-object-initialization-constructor"]], "Motivation: Container Initialization (Missing Pre C++11)": [[664, "motivation-container-initialization-missing-pre-c-11"]], "Motivation: Member Array Initialization": [[664, "motivation-member-array-initialization"]], "Motivation: Heap Array Initialization": [[664, "motivation-heap-array-initialization"]], "Solution: Brace Initialization In C++11": [[664, "solution-brace-initialization-in-c-11"]], "Good: Refuses To Narrow Built-In Types": [[664, "good-refuses-to-narrow-built-in-types"]], "Brace Initialization: A Mess": [[665, "brace-initialization-a-mess"]], "Explicit Constructor And Brace Initialization": [[665, "explicit-constructor-and-brace-initialization"]], "Ambiguity: Explicit And std::initializer_list Constructor": [[665, "ambiguity-explicit-and-std-initializer-list-constructor"]], "Realistic Example: std::vector: Two int (Explicit)": [[665, "realistic-example-std-vector-two-int-explicit"]], "Realistic Example: std::vector: Two int (std::initializer_list)": [[665, "realistic-example-std-vector-two-int-std-initializer-list"]], "Nicolai Josuttis, Complaining About C++": [[665, "nicolai-josuttis-complaining-about-c"]], "Delegating Constructor: Motivation": [[666, "delegating-constructor-motivation"]], "Delegating Constructor: Solution": [[666, "delegating-constructor-solution"]], "constexpr": [[667, "constexpr"]], "Basic Usage: Expressions": [[667, "basic-usage-expressions"]], "constexpr Functions": [[667, "constexpr-functions"]], "Recursive constexpr": [[667, "recursive-constexpr"]], "constexpr Objects": [[667, "constexpr-objects"]], "Afterword, Further Reading": [[668, "afterword-further-reading"]], "Uses In The Standard Library": [[668, "uses-in-the-standard-library"]], "Other Uses": [[668, "other-uses"]], "All Said \u27f6 Guidelines": [[668, "all-said-longrightarrow-guidelines"]], "Further Reading (Well, Videos \ud83d\ude09)": [[668, "further-reading-well-videos-wink"]], "Move Semantics, Rvalue References": [[669, "move-semantics-rvalue-references"]], "Alternative Livehacking": [[669, "alternative-livehacking"]], "Starting Point": [[670, "starting-point"], [63, "starting-point"]], "SmartPtr With Move Semantics": [[670, "smartptr-with-move-semantics"]], "Return SmartPtr Object From Function": [[670, "return-smartptr-object-from-function"]], "Assign SmartPtr Object \u27f6 Moved": [[670, "assign-smartptr-object-longrightarrow-moved"]], "Implementing Move Semantics (class String, Live Hacked)": [[671, "implementing-move-semantics-class-string-live-hacked"]], "Copy Semantics, Revisited": [[671, "copy-semantics-revisited"]], "class String, Without Copy": [[671, "class-string-without-copy"]], "Return From Function: Copy (Or Move) Wanted": [[671, "return-from-function-copy-or-move-wanted"]], "Move Constructor? Move?": [[671, "move-constructor-move"]], "Implementing Move Constructor": [[671, "implementing-move-constructor"]], "And Move Assignment?": [[671, "and-move-assignment"]], "Implementing Move Assignment": [[671, "implementing-move-assignment"]], "Using Move Semantics In Own Code": [[672, "using-move-semantics-in-own-code"]], "Using String: class Person": [[672, "using-string-class-person"]], "What?": [[672, "what"], [845, "what"]], "Using Rvalue References Inside Function: std::move": [[672, "using-rvalue-references-inside-function-std-move"]], "Templates end with \u201c>>\u201d": [[674, "templates-end-with"]], "Duck Typing (Err, auto) Without A Duck": [[675, "duck-typing-err-auto-without-a-duck"]], "Most Basic Usage": [[675, "most-basic-usage"]], "auto Is Only The Basic Type": [[675, "auto-is-only-the-basic-type"]], "If You Want Reference, Say So!": [[675, "if-you-want-reference-say-so"]], "If You Want Const-Reference, Say So!": [[675, "if-you-want-const-reference-say-so"]], "If You Want Pointer, Say So!": [[675, "if-you-want-pointer-say-so"]], "And Arrays? Decay To Pointers!": [[675, "and-arrays-decay-to-pointers"]], "Concepts: Overview": [[677, "concepts-overview"]], "No Problem: Template Instantiation Chosen By Parameter Type": [[677, "no-problem-template-instantiation-chosen-by-parameter-type"]], "Problem: Template Instantiation Chosen By Parameter Type": [[677, "problem-template-instantiation-chosen-by-parameter-type"]], "Concepts To The Rescue": [[677, "concepts-to-the-rescue"]], "Syntactic Variations": [[677, "syntactic-variations"]], "toolcase-1-conceptless.cpp": [[678, "toolcase-1-conceptless-cpp"]], "toolcase-2-conceptless-error.cpp": [[679, "toolcase-2-conceptless-error-cpp"]], "toolcase-3-concept-integral.cpp": [[680, "toolcase-3-concept-integral-cpp"]], "Concepts: Links": [[681, "concepts-links"]], "Writing Your Own Concepts": [[682, "writing-your-own-concepts"]], "Starting Point: Good Old Function": [[682, "starting-point-good-old-function"]], "Need Template": [[682, "need-template"]], "Error: Requirement Not Fulfilled": [[682, "error-requirement-not-fulfilled"]], "Concept: has_size": [[682, "concept-has-size"]], "Concept: index_returns_double": [[682, "concept-index-returns-double"]], "example-1-good-old-func.cpp": [[683, "example-1-good-old-func-cpp"]], "example-2-need-template.cpp": [[684, "example-2-need-template-cpp"]], "example-4-concept-has-size.cpp": [[685, "example-4-concept-has-size-cpp"]], "example-5-concept-index-ret-double.cpp": [[686, "example-5-concept-index-ret-double-cpp"]], "Coroutines": [[687, "coroutines"]], "Coroutines: An Overview": [[688, "coroutines-an-overview"]], "Foreword": [[688, "foreword"]], "Prototypical Introductory Exampe: Fibonacci Numbers": [[688, "prototypical-introductory-exampe-fibonacci-numbers"]], "Step By Step: Simplest": [[688, "step-by-step-simplest"]], "Simplest: Incremental Fixing And Explaining": [[688, "simplest-incremental-fixing-and-explaining"]], "Driving Coroutines: Coroutine Anatomy": [[688, "driving-coroutines-coroutine-anatomy"]], "Driving Coroutines: Resuming": [[688, "driving-coroutines-resuming"]], "Suspension: Returning Control To Caller (co_yield)": [[688, "suspension-returning-control-to-caller-co-yield"]], "Playing Around: Iteration, Mimicking Python Iterator Protocol": [[688, "playing-around-iteration-mimicking-python-iterator-protocol"]], "Playing Around: Iteration, Range-Based-For": [[688, "playing-around-iteration-range-based-for"]], "Playing Around: Generic Generator": [[688, "playing-around-generic-generator"]], "Playing Around: Fibonacci Numbers, Generator Version": [[688, "playing-around-fibonacci-numbers-generator-version"]], "Pitfalls: Coroutines Are Stateful!": [[688, "pitfalls-coroutines-are-stateful"]], "fibo-generator.cpp": [[689, "fibo-generator-cpp"]], "fibonacci.cpp": [[690, "fibonacci-cpp"]], "generator.h": [[691, "generator-h"]], "generator-hello.cpp": [[692, "generator-hello-cpp"]], "simplest.cpp": [[693, "simplest-cpp"]], "suspend.cpp": [[694, "suspend-cpp"]], "suspend-iter.cpp": [[695, "suspend-iter-cpp"]], "suspend-next.cpp": [[696, "suspend-next-cpp"]], "= default": [[697, "default"]], "Problem: Default Constructor Not Automatically Generated": [[697, "problem-default-constructor-not-automatically-generated"]], "C++ < 11 Solution: Write Default Constructor \ud83d\ude20 \ud83d\udc4e": [[697, "c-11-solution-write-default-constructor-angry-thumbsdown"]], "C++ >= 11 Solution: = default": [[697, "c-11-solution-default"]], "= delete": [[698, "delete"]], "Problem: Copy Is Not Always Wanted": [[698, "problem-copy-is-not-always-wanted"]], "C++ < 11 Solution: Make Copy private": [[698, "c-11-solution-make-copy-private"]], "C++ >= 11 Solution: = delete Copy": [[698, "c-11-solution-delete-copy"]], "final": [[699, "final"]], "Architectural Decisions": [[699, "architectural-decisions"]], "Enter final: Architectural Cleanliness By Compiler": [[699, "enter-final-architectural-cleanliness-by-compiler"]], "New Language Features": [[700, "new-language-features"]], "Lambda": [[701, "lambda"], [702, "lambda"]], "Lambda To The Rescue": [[702, "lambda-to-the-rescue"]], "Excursion: Python Closures": [[702, "excursion-python-closures"]], "Same In C++: Capturing": [[702, "same-in-c-capturing"]], "So What Is That? (Answer: A Functor)": [[702, "so-what-is-that-answer-a-functor"]], "Capturing By Reference \u27f6 Careful!": [[702, "capturing-by-reference-longrightarrow-careful"]], "More About Capturing": [[702, "more-about-capturing"]], "Lambda: More Capturing": [[703, "lambda-more-capturing"]], "More Capture Syntax": [[703, "more-capture-syntax"]], "Capturing Explicitly, By Copy": [[703, "capturing-explicitly-by-copy"]], "Capturing Explicitly, By Reference": [[703, "capturing-explicitly-by-reference"]], "Mixed Explicit Capture": [[703, "mixed-explicit-capture"]], "Define Variables In Capture": [[703, "define-variables-in-capture"]], "Capturing All By Reference": [[703, "capturing-all-by-reference"]], "Capturing All By Copy": [[703, "capturing-all-by-copy"]], "Capturing All By Copy, Except Some By Reference": [[703, "capturing-all-by-copy-except-some-by-reference"]], "Capturing this": [[703, "capturing-this"]], "Live Hacking: Handwritten Functors (Too Much Boilerplate)": [[704, "live-hacking-handwritten-functors-too-much-boilerplate"]], "Original Lambda Demo Proggy": [[704, "original-lambda-demo-proggy"]], "Morph Lambda Into Handwritten Functor Class": [[704, "morph-lambda-into-handwritten-functor-class"]], "Live Hacking: Handwritten Functors, And Capturing By Reference (Pitfalls)": [[705, "live-hacking-handwritten-functors-and-capturing-by-reference-pitfalls"]], "Original, Handwritten Functor (By Copy)": [[705, "original-handwritten-functor-by-copy"]], "Possible Pitfall: Capturing A Reference": [[705, "possible-pitfall-capturing-a-reference"]], "Lifetime Of Temporary, Made Explicit": [[705, "lifetime-of-temporary-made-explicit"]], "Lifetime Of Temporary, Made Explicit \u27f6 \ud83d\ude91": [[705, "lifetime-of-temporary-made-explicit-longrightarrow-ambulance"]], "override": [[707, "override"]], "Correct Overriding \u2026": [[707, "correct-overriding"]], "\u2026 Is Very Hard": [[707, "is-very-hard"]], "More Problems Arise": [[707, "more-problems-arise"]], "Solution: override": [[707, "solution-override"]], "Range Based for Loops: Introduction": [[708, "range-based-for-loops-introduction"]], "Enter Range Based for Loops": [[708, "enter-range-based-for-loops"]], "Range Based for Loops, And auto": [[708, "range-based-for-loops-and-auto"]], "Case Study: std::map Iteration": [[708, "case-study-std-map-iteration"]], "Case Study: Range Based for On std::map": [[709, "case-study-range-based-for-on-std-map"]], "Gool Ol\u2019 Days: Iteration In C++ < 11": [[709, "gool-ol-days-iteration-in-c-11"]], "Basic C++11 Iteration: Range Based For, auto, And Initialization": [[709, "basic-c-11-iteration-range-based-for-auto-and-initialization"]], "Variation: Preventing Accidental Copy Using const auto&": [[709, "variation-preventing-accidental-copy-using-const-auto"]], "Pythonicity: Tuple Unpacking, err Structured Binding": [[709, "pythonicity-tuple-unpacking-err-structured-binding"]], "Structured Binding - Preventing Accidental Copy": [[709, "structured-binding-preventing-accidental-copy"]], "Ranges And Views: Good Or Bad?": [[710, "ranges-and-views-good-or-bad"]], "Dangling Iterator Protection": [[710, "dangling-iterator-protection"]], "Performance: views::drop Is Easy": [[710, "performance-views-drop-is-easy"]], "Performance: views::filter Is Not Easy": [[710, "performance-views-filter-is-not-easy"]], "Constraints: How To Read?": [[710, "constraints-how-to-read"]], "And drop()? std::vector Is Easy": [[710, "and-drop-std-vector-is-easy"]], "And drop()? std::list Is Not Easy": [[710, "and-drop-std-list-is-not-easy"]], "One Of Many Bugs, Introduced By .begin() Caching": [[710, "one-of-many-bugs-introduced-by-begin-caching"]], "Exceptions From Rules \u27f6 Dogmatic Don\u2019ts (Sigh, C++)": [[710, "exceptions-from-rules-longrightarrow-dogmatic-don-ts-sigh-c"]], "Ranges: Overview": [[712, "ranges-overview"]], "Ranges?": [[712, "ranges"]], "Containers And Views (Storage Behavior)": [[712, "containers-and-views-storage-behavior"]], "Pipe Syntax": [[712, "pipe-syntax"]], "Views As Parameters: Good Old Template": [[712, "views-as-parameters-good-old-template"]], "Views As Parameters: Abbreviated Function Template": [[712, "views-as-parameters-abbreviated-function-template"]], "Views As Parameters: Concepts": [[712, "views-as-parameters-concepts"]], "Available <ranges> Concepts": [[712, "available-ranges-concepts"]], "Ranges And Views: Links": [[713, "ranges-and-views-links"]], "Tuple Unpacking (Err, Structured Binding)": [[714, "tuple-unpacking-err-structured-binding"]], "Variations, Compatible Data Types": [[714, "variations-compatible-data-types"]], "struct: By Copy": [[714, "struct-by-copy"]], "struct: Reference": [[714, "struct-reference"]], "struct: By const Reference": [[714, "struct-by-const-reference"]], "std::tuple: By Copy": [[714, "std-tuple-by-copy"]], "std::tuple: By Reference": [[714, "std-tuple-by-reference"]], "std::tuple: By const Reference": [[714, "std-tuple-by-const-reference"]], "Arrays: By Copy": [[714, "arrays-by-copy"]], "Arrays: By Reference": [[714, "arrays-by-reference"]], "Arrays: By const Reference": [[714, "arrays-by-const-reference"]], "Smart Pointers: Closing Words": [[715, "smart-pointers-closing-words"]], "Shared Pointers: Closing Words": [[715, "shared-pointers-closing-words"]], "Smart Pointers (std::unique_ptr, std::shared_ptr)": [[716, "smart-pointers-std-unique-ptr-std-shared-ptr"]], "Why Smart Pointers?": [[717, "why-smart-pointers"]], "Recap: Constructors and Destructors": [[717, "recap-constructors-and-destructors"]], "(Trying To) Handwrite A Smart Pointer Class in C++ Before C++11": [[718, "trying-to-handwrite-a-smart-pointer-class-in-c-before-c-11"]], "Sensors To Manage": [[718, "sensors-to-manage"]], "Basic Resource Management, Operator Overloading": [[718, "basic-resource-management-operator-overloading"]], "Copy Constructor And Assignment Operator (And Default Ctor)": [[718, "copy-constructor-and-assignment-operator-and-default-ctor"]], "auto_ptr Style": [[718, "auto-ptr-style"]], "Explicit move() Method Maybe?": [[718, "explicit-move-method-maybe"]], "Stop!!!": [[718, "stop"]], "std::shared_ptr": [[719, "std-shared-ptr"]], "Spirit: Not Unique, But Shared (i.e. Reference Counted)": [[719, "spirit-not-unique-but-shared-i-e-reference-counted"]], "std::shared_ptr: Copy": [[719, "std-shared-ptr-copy"]], "std::shared_ptr vs. std::unique_ptr": [[719, "std-shared-ptr-vs-std-unique-ptr"]], "std::shared_ptr: Object Lifetime": [[719, "std-shared-ptr-object-lifetime"]], "std::shared_ptr: Juggling": [[719, "std-shared-ptr-juggling"]], "Demo: Basic Usage": [[719, "demo-basic-usage"]], "Demo: std::make_shared": [[719, "demo-std-make-shared"]], "Demo: Cyclic References": [[719, "demo-cyclic-references"]], "std::unique_ptr": [[720, "std-unique-ptr"]], "The Spirit Of std::unique_ptr": [[720, "the-spirit-of-std-unique-ptr"]], "Basic Usage: Prevent Leaks": [[720, "basic-usage-prevent-leaks"]], "Eliminate Chance Of Leakage \u27f6 Ownership": [[720, "eliminate-chance-of-leakage-longrightarrow-ownership"]], "Saving Keystrokes: std::make_unique<>()": [[720, "saving-keystrokes-std-make-unique"]], "Explicitly Acknowledging Ownership Transfer: std::move()": [[720, "explicitly-acknowledging-ownership-transfer-std-move"]], "Compiler Can Prove: Implicit Ownership Transfer": [[720, "compiler-can-prove-implicit-ownership-transfer"]], "How To Write Code That Can Take Ownership?": [[720, "how-to-write-code-that-can-take-ownership"]], "Manipulating Pointer Content": [[720, "manipulating-pointer-content"]], "std::weak_ptr": [[721, "std-weak-ptr"]], "Spirit: Borrowed Reference That Could Be Invalid": [[721, "spirit-borrowed-reference-that-could-be-invalid"]], "A Real-Life Example": [[721, "a-real-life-example"]], "Perfect Forwarding": [[722, "perfect-forwarding"]], "Universal References? Forwarding References? REALLY?": [[722, "universal-references-forwarding-references-really"]], "Universal Reference? Binds To Lvalues?": [[722, "universal-reference-binds-to-lvalues"]], "Enter Forwarding": [[722, "enter-forwarding"]], "Exercise: Dual insert() Method In Exercise: Bag Of Items, By Shared Reference": [[722, "exercise-dual-insert-method-in-trainings-material-soup-cxx11-exercises-bag-shared"]], "std::bind": [[723, "std-bind"]], "Why? What\u2019s The Problem?": [[723, "why-what-s-the-problem"]], "Sample Program: All Done Manually": [[723, "sample-program-all-done-manually"]], "Sideway: std::transform": [[723, "sideway-std-transform"]], "Sample Program: Using std::transform": [[723, "sample-program-using-std-transform"]], "std::bind: Null Adaptation, Pointlessly": [[723, "std-bind-null-adaptation-pointlessly"]], "std::bind: Adapting One Parameter To No Parameter": [[723, "std-bind-adapting-one-parameter-to-no-parameter"]], "std::bind: Hardcoding Parameters": [[723, "std-bind-hardcoding-parameters"]], "std::bind: Swapping Parameters \u27f6 std::placeholders": [[723, "std-bind-swapping-parameters-longrightarrow-std-placeholders"]], "std::bind: Hardcoding Only First Parameter \u27f6 std::placeholders": [[723, "std-bind-hardcoding-only-first-parameter-longrightarrow-std-placeholders"]], "std::bind: Functor (Is-A Callable)": [[723, "std-bind-functor-is-a-callable"]], "std::bind: Lambda (Is-A Callable)": [[723, "std-bind-lambda-is-a-callable"]], "Sample Program: Using std::transform With std::bind": [[723, "sample-program-using-std-transform-with-std-bind"]], "Summary": [[723, "summary"], [802, "summary"], [802, "id1"], [1121, "summary"], [1123, "summary"]], "std::function": [[724, "std-function"]], "Classic Polymorphism": [[724, "classic-polymorphism"]], "Classic Polymorphism: Upsides": [[724, "classic-polymorphism-upsides"]], "Classic Polymorphism: Technical Downsides": [[724, "classic-polymorphism-technical-downsides"]], "Classic Polymorphism: More Downsides": [[724, "classic-polymorphism-more-downsides"]], "std::function to the Rescue (1)": [[724, "std-function-to-the-rescue-1"]], "std::function to the Rescue (2)": [[724, "std-function-to-the-rescue-2"]], "std::function: Last Words": [[724, "std-function-last-words"]], "Threads Introduction": [[726, "threads-introduction"]], "Operating System Primitives": [[726, "operating-system-primitives"]], "There Be Dragons": [[726, "there-be-dragons"]], "Threads in C++": [[727, "threads-in-c"]], "Creating Threads is Far Too Easy": [[727, "creating-threads-is-far-too-easy"]], "Joinable vs. Detached": [[727, "joinable-vs-detached"]], "Cornercases in Thread Lifetime": [[727, "cornercases-in-thread-lifetime"]], "Race Conditions": [[728, "race-conditions"], [800, "race-conditions"]], "std::atomic": [[729, "std-atomic"]], "Atomic Instructions (1)": [[729, "atomic-instructions-1"]], "Atomic Instructions (2)": [[729, "atomic-instructions-2"]], "std::mutex And Friends": [[730, "std-mutex-and-friends"]], "std::mutex": [[730, "std-mutex"]], "std::recursive_mutex": [[730, "std-recursive-mutex"]], "std::timed_mutex": [[730, "std-timed-mutex"]], "std::recursive_timed_mutex": [[730, "std-recursive-timed-mutex"]], "Scoped Locking": [[731, "scoped-locking"]], "Explicit Unlocking Considered Dangerous": [[731, "explicit-unlocking-considered-dangerous"]], "RAII - Resource Acquisition Is Initialization": [[731, "raii-resource-acquisition-is-initialization"]], "Simplest: std::lock_guard": [[731, "simplest-std-lock-guard"]], "std::condition_variable (Live Hacking Multithreaded Queue)": [[732, "std-condition-variable-live-hacking-multithreaded-queue"]], "Overview: Operations": [[732, "overview-operations"]], "Communication, Polling: Thread-Safe Queue": [[732, "communication-polling-thread-safe-queue"]], "Anti-Polling: Thread-Safe Queue, And POSIX Condition Variables": [[732, "anti-polling-thread-safe-queue-and-posix-condition-variables"]], "Discussion: Signalling And Waiting, Predicates: Separation Of Concerns": [[732, "discussion-signalling-and-waiting-predicates-separation-of-concerns"]], "Thread-Safe Queue, And C++ Condition Variables": [[732, "thread-safe-queue-and-c-condition-variables"]], "std::promise and std::future (And Some std::chrono) (Some Live Hacking)": [[734, "std-promise-and-std-future-and-some-std-chrono-some-live-hacking"]], "Overview: std::promise": [[734, "overview-std-promise"]], "Overview: std::future": [[734, "overview-std-future"]], "Utterly Wrong: Waiting For Something To Become Ready": [[734, "utterly-wrong-waiting-for-something-to-become-ready"]], "Sideways: std::chrono, And Literals": [[734, "sideways-std-chrono-and-literals"]], "Minimal Fix: Use std::mutex": [[734, "minimal-fix-use-std-mutex"]], "Anti-Clumsiness: Scoped Locking": [[734, "anti-clumsiness-scoped-locking"]], "Pro-Readability: Encapsulate": [[734, "pro-readability-encapsulate"]], "Atomics On Structures?": [[734, "atomics-on-structures"]], "Anti-Polling: Semaphore": [[734, "anti-polling-semaphore"]], "Getting To The Point: std::promise And std::future": [[734, "getting-to-the-point-std-promise-and-std-future"]], "And Exceptions?": [[734, "and-exceptions"]], "std::chrono": [[735, "std-chrono"], [735, "id1"]], "Clock Domains": [[735, "clock-domains"]], "Measuring Time (1)": [[735, "measuring-time-1"]], "Measuring Time (2)": [[735, "measuring-time-2"]], "Sleeping, and Literals": [[735, "sleeping-and-literals"]], "New-Style Union: std::variant": [[736, "new-style-union-std-variant"]], "Problems With C Unions, And C++ Types": [[736, "problems-with-c-unions-and-c-types"]], "Instantiation, Default Initialization, Member Access": [[736, "instantiation-default-initialization-member-access"]], "Non-Default Initialization": [[736, "non-default-initialization"]], "Accessing Non-Current Member: std::bad_variant_access": [[736, "accessing-non-current-member-std-bad-variant-access"]], "Non-Throwing Accessor: std::get_if<>": [[736, "non-throwing-accessor-std-get-if"]], "And Non-Fundamental Types?": [[736, "and-non-fundamental-types"]], "Classic Virtual": [[739, "classic-virtual"]], "Sensor Definitions": [[739, "sensor-definitions"], [741, "sensor-definitions"], [743, "sensor-definitions"], [745, "sensor-definitions"]], "Virtual Access": [[739, "virtual-access"], [741, "virtual-access"], [743, "virtual-access"], [744, "virtual-access"], [745, "virtual-access"], [746, "virtual-access"]], "Average Across Many": [[739, "average-across-many"], [741, "average-across-many"], [743, "average-across-many"], [745, "average-across-many"]], "Non-Virtual, But Related": [[741, "non-virtual-but-related"]], "Unrelated (Duck-Typed)": [[743, "unrelated-duck-typed"]], "std::variant (Automatic Virtual Dispatch Using Template Method)": [[744, "std-variant-automatic-virtual-dispatch-using-template-method"]], "std::variant (Manual Virtual Dispatch, Using if)": [[745, "std-variant-manual-virtual-dispatch-using-if"]], "std::variant (Manual Virtual Dispatch, Using std::visit)": [[746, "std-variant-manual-virtual-dispatch-using-std-visit"]], "Drafts": [[748, "drafts"], [896, "drafts"]], "Exercise: Bag Of Items, By Copy": [[749, "exercise-bag-of-items-by-copy"]], "Step 1: Insert, Find": [[749, "step-1-insert-find"]], "Step 2: Remove": [[749, "step-2-remove"]], "Exercise: Bag Of Items, By Shared Reference": [[750, "exercise-bag-of-items-by-shared-reference"]], "Step 1: Transform into std::shared_ptr": [[750, "step-1-transform-into-std-shared-ptr"]], "Step 2: Accidental Move-Insert?": [[750, "step-2-accidental-move-insert"]], "Step 3: Move-Insert, And std::weak_ptr": [[750, "step-3-move-insert-and-std-weak-ptr"]], "Exercise: Bag Of Items, By Unique Reference": [[751, "exercise-bag-of-items-by-unique-reference"]], "std::filesystem": [[753, "std-filesystem"]], "Paths: Composition, Comparison": [[753, "paths-composition-comparison"]], "Absolute and Relative Paths": [[753, "absolute-and-relative-paths"], [886, "absolute-and-relative-paths"]], "Path Component Access": [[753, "path-component-access"]], "Iterating Over Path Components": [[753, "iterating-over-path-components"]], "Current Working Directory": [[753, "current-working-directory"], [865, "current-working-directory"]], "Directory Creation: std::filesystem::create_directory()": [[753, "directory-creation-std-filesystem-create-directory"]], "Directory Creation: std::filesystem::create_directories()": [[753, "directory-creation-std-filesystem-create-directories"]], "Directory Entry Classification: std::filesystem::is_xxx()": [[753, "directory-entry-classification-std-filesystem-is-xxx"]], "Directory Entries: Basics": [[753, "directory-entries-basics"]], "Directory Entries: std::filesystem::directory_entry": [[753, "directory-entries-std-filesystem-directory-entry"]], "Iterating Over Directory Entries": [[753, "iterating-over-directory-entries"]], "Recursive Directory Iteration": [[753, "recursive-directory-iteration"]], "The New C++ (11-\u2026)": [[754, "the-new-c-11"]], "Generated Topic Graph": [[755, "generated-topic-graph"]], "Modern Character Devices (Screenplay)": [[757, "modern-character-devices-screenplay"]], "Modern Character Devices (Slideshow)": [[758, "modern-character-devices-slideshow"]], "Source": [[758, null], [761, null], [763, null], [766, null], [768, null], [771, null], [780, null], [782, null], [792, null], [794, null], [805, null], [810, null]], "Character Devices: Problems": [[758, "character-devices-problems"]], "Dynamic Device Numbers": [[758, "dynamic-device-numbers"]], "Device Classes": [[758, "device-classes"]], "Devices": [[758, "devices"]], "Modern Character Devices": [[759, "modern-character-devices"]], "File Operations on Character Devices (Screenplay)": [[760, "file-operations-on-character-devices-screenplay"]], "Hooks Necessary": [[760, "hooks-necessary"]], "Implement open(), read(), write()": [[760, "implement-open-read-write"]], "ioctl()": [[760, "ioctl"]], "File Operations on Character Devices (Slideshow)": [[761, "file-operations-on-character-devices-slideshow"]], "File Operations: Interface Definition (\u201cvtable\u201d) (1)": [[761, "file-operations-interface-definition-vtable-1"]], "Available Methods": [[761, "available-methods"]], "open(): Userspace": [[761, "open-userspace"]], "open(): Kernelspace": [[761, "open-kernelspace"]], "ioctl(): Userspace": [[761, "ioctl-userspace"]], "ioctl(): Kernelspace": [[761, "ioctl-kernelspace"]], "ioctl(): Requests": [[761, "ioctl-requests"]], "_IO*() Macros": [[761, "io-macros"]], "_IO*() Macros: Usage": [[761, "io-macros-usage"]], "File Operations on Character Devices": [[762, "file-operations-on-character-devices"]], "Coding: First Functionality (Slideshow)": [[763, "coding-first-functionality-slideshow"]], "Implement Event List": [[763, "implement-event-list"]], "Implement ioctl Request to Add an Event": [[763, "implement-ioctl-request-to-add-an-event"]], "Implement a Userspace Test Program": [[763, "implement-a-userspace-test-program"]], "Coding: First Functionality": [[764, "coding-first-functionality"]], "Character Device Basics (Livehacking Screenplay)": [[765, "character-device-basics-livehacking-screenplay"]], "Major and Minor Numbers": [[765, "major-and-minor-numbers"]], "Character Device": [[765, "character-device"]], "Character Device Basics (Slideshow)": [[766, "character-device-basics-slideshow"]], "Major and Minor Numbers: User\u2019s View": [[766, "major-and-minor-numbers-user-s-view"]], "Major and Minor Numbers: Kernel Space": [[766, "major-and-minor-numbers-kernel-space"]], "History: Hardcoded Device Numbers (1)": [[766, "history-hardcoded-device-numbers-1"]], "History: Hardcoded Device Numbers (2)": [[766, "history-hardcoded-device-numbers-2"]], "Character Device (1)": [[766, "character-device-1"]], "Character Device (2)": [[766, "character-device-2"]], "And User Space?": [[766, "and-user-space"]], "Character Device Basics": [[767, "character-device-basics"]], "Coding: Multiple Devices (Slideshow)": [[768, "coding-multiple-devices-slideshow"]], "Instantiate Multiple Devices": [[768, "instantiate-multiple-devices"]], "Coding: Multiple Devices": [[769, "coding-multiple-devices"]], "Coding: Refactoring (Screenplay)": [[770, "coding-refactoring-screenplay"]], "Build Module From Multiple Files": [[770, "build-module-from-multiple-files"]], "Per-Device Structure": [[770, "per-device-structure"]], "Want My Hair Pretty": [[770, "want-my-hair-pretty"]], "Makefile: -Wswitch-enum": [[770, "makefile-wswitch-enum"]], "Coding: Refactoring (Slideshow)": [[771, "coding-refactoring-slideshow"]], "What\u2019s Bad?": [[771, "what-s-bad"]], "Coding: Refactoring": [[772, "coding-refactoring"]], "DMA (Slideshow)": [[773, "dma-slideshow"]], "Address Types": [[773, "address-types"]], "Physical Memory Allocation": [[773, "physical-memory-allocation"]], "DMA Mappings: Overview": [[773, "dma-mappings-overview"]], "Consistent DMA Mappings": [[773, "consistent-dma-mappings"]], "Streaming Mappings: Direction": [[773, "streaming-mappings-direction"]], "Streaming Mappings: To Virtual Address": [[773, "streaming-mappings-to-virtual-address"]], "Streaming Mappings: To Page": [[773, "streaming-mappings-to-page"]], "Streaming Mappings: Scatterlists (1)": [[773, "streaming-mappings-scatterlists-1"]], "Streaming Mappings: Scatterlists (2)": [[773, "streaming-mappings-scatterlists-2"]], "Streaming Mappings: Syncing": [[773, "streaming-mappings-syncing"]], "DMA": [[774, "dma"]], "Building a Fedora Kernel (Screenplay)": [[775, "building-a-fedora-kernel-screenplay"]], "Why Build the Entire Kernel When I Only Want to Build a Module": [[775, "why-build-the-entire-kernel-when-i-only-want-to-build-a-module"]], "Building from \u201cExploded Git Tree\u201d": [[775, "building-from-exploded-git-tree"]], "Building from the RPM Source": [[775, "building-from-the-rpm-source"]], "Fedora: Building the Kernel": [[776, "fedora-building-the-kernel"]], "Fedora: Building External Kernel Modules (Screenplay)": [[777, "fedora-building-external-kernel-modules-screenplay"]], "Prerequisite: Build Entire Kernel": [[777, "prerequisite-build-entire-kernel"]], "Build Modules": [[777, "build-modules"]], "Install Modules": [[777, "install-modules"]], "Fedora: Building External Kernel Modules": [[778, "fedora-building-external-kernel-modules"]], "Module Loading, Hello World (Slideshow)": [[780, "module-loading-hello-world-slideshow"]], "Kernel Driver Anatomy": [[780, "kernel-driver-anatomy"]], "Built-In vs. Loadable Module": [[780, "built-in-vs-loadable-module"]], "Minimum Module Source": [[780, "minimum-module-source"]], "Gotchas: init() and exit()": [[780, "gotchas-init-and-exit"]], "Module Build": [[780, "module-build"]], "Minimum Makefile, Building": [[780, "minimum-makefile-building"]], "Modules: Load/Unload Commands": [[780, "modules-load-unload-commands"]], "Modules: Dependency (and other) Databases": [[780, "modules-dependency-and-other-databases"]], "Module Loading, Hello World": [[781, "module-loading-hello-world"]], "Coding: Raspi GPIO Interrupts (Slideshow)": [[782, "coding-raspi-gpio-interrupts-slideshow"]], "Move to Raspberry Pi, Cross Compiling": [[782, "move-to-raspberry-pi-cross-compiling"]], "Cross Compilation": [[782, "cross-compilation"]], "Cross Compilation Sucks": [[782, "cross-compilation-sucks"]], "Short (Legacy) GPIO API Introduction": [[782, "short-legacy-gpio-api-introduction"]], "Implement New Event Type: Interrupt": [[782, "implement-new-event-type-interrupt"]], "New ioctl: MY_ACTIVATE_GPIO": [[782, "new-ioctl-my-activate-gpio"]], "Interlude: _IO*() Macros": [[782, "interlude-io-macros"]], "Request GPIO": [[782, "request-gpio"]], "Request Interrupt": [[782, "request-interrupt"]], "Coding: Raspi GPIO Interrupts": [[783, "coding-raspi-gpio-interrupts"]], "Interrupts (Slideshow)": [[784, "interrupts-slideshow"]], "Interrupt Facts": [[784, "interrupt-facts"]], "Interrupt Service Routine": [[784, "interrupt-service-routine"]], "Requesting (and Releasing) Interrupts (1)": [[784, "requesting-and-releasing-interrupts-1"]], "IO Memory (Slideshow)": [[786, "io-memory-slideshow"]], "I/O Memory": [[786, "i-o-memory"]], "I/O Memory: Reservation": [[786, "i-o-memory-reservation"]], "Making I/O Memory Accessible": [[786, "making-i-o-memory-accessible"]], "Accessing I/O Memory": [[786, "accessing-i-o-memory"]], "IO Memory": [[787, "io-memory"]], "Dynamic Memory: kmalloc() (Slideshow)": [[788, "dynamic-memory-kmalloc-slideshow"]], "Dynamic Memory: kmalloc()": [[788, "dynamic-memory-kmalloc"], [789, "dynamic-memory-kmalloc"]], "Dynamic Memory: Flags": [[788, "dynamic-memory-flags"]], "Doubly Linked Lists (Slideshow)": [[790, "doubly-linked-lists-slideshow"]], "Big Picture": [[790, "big-picture"]], "List Head": [[790, "list-head"]], "Insert a Node": [[790, "insert-a-node"]], "Iteration, and Getting a Node\u2019s Container": [[790, "iteration-and-getting-a-node-s-container"]], "Emptying a List": [[790, "emptying-a-list"]], "Doubly Linked Lists": [[791, "doubly-linked-lists"]], "Coding: Fix Race Condition (Mutex) (Slideshow)": [[792, "coding-fix-race-condition-mutex-slideshow"]], "What Do We Have?": [[792, "what-do-we-have"]], "Consequences of Not Protecting": [[792, "consequences-of-not-protecting"]], "Protect Event List": [[792, "protect-event-list"]], "Protect Device List": [[792, "protect-device-list"]], "Coding: Fix Race Condition (Mutex)": [[793, "coding-fix-race-condition-mutex"]], "Mutex (and RT Mutex) (Slideshow)": [[794, "mutex-and-rt-mutex-slideshow"]], "Locking in the Kernel": [[794, "locking-in-the-kernel"]], "Mutual Exclusion: Mutex": [[794, "mutual-exclusion-mutex"]], "Mutex: Locking (1)": [[794, "mutex-locking-1"]], "Mutex: Locking (2)": [[794, "mutex-locking-2"]], "Mutex: Releasing": [[794, "mutex-releasing"]], "Realtime Mutex": [[794, "realtime-mutex"]], "Mutex (and RT Mutex)": [[795, "mutex-and-rt-mutex"]], "Network Devices (Slideshow)": [[796, "network-devices-slideshow"]], "Module Initialization: Device Allocation": [[796, "module-initialization-device-allocation"]], "Module Initialization: Device Registration": [[796, "module-initialization-device-registration"]], "Device Methods": [[796, "device-methods"]], "Kernel Networking Layer Utilities": [[796, "kernel-networking-layer-utilities"]], "Network Devices": [[797, "network-devices"]], "PCI (Slideshow)": [[798, "pci-slideshow"]], "First and Foremost": [[798, "first-and-foremost"]], "PCI Driver Methods": [[798, "pci-driver-methods"]], "PCI Driver Structure, and the init() Method": [[798, "pci-driver-structure-and-the-init-method"]], "PCI Device Structure, and the probe() Method": [[798, "pci-device-structure-and-the-probe-method"]], "The probe() Method: Boilerplate": [[798, "the-probe-method-boilerplate"]], "The probe() Method: Interrupt": [[798, "the-probe-method-interrupt"]], "The probe() Method: PCI Resources (BARs)": [[798, "the-probe-method-pci-resources-bars"]], "DMA Support Routines": [[798, "dma-support-routines"]], "PCI": [[799, "pci"]], "Process vs.Atomic Context (Slideshow)": [[800, "process-vs-atomic-context-slideshow"]], "Process Context": [[800, "process-context"]], "Atomic Context": [[800, "atomic-context"]], "Atomic vs. Process Context": [[800, "atomic-vs-process-context"]], "\u201cSleep While Atomic\u201d Debugging": [[800, "sleep-while-atomic-debugging"]], "Process vs.Atomic Context": [[801, "process-vs-atomic-context"]], "Rasperry Pi: Kernel Build": [[802, "rasperry-pi-kernel-build"]], "Cross Toolchain on Host": [[802, "cross-toolchain-on-host"]], "Architecture Name - What\u2019s That?": [[802, "architecture-name-what-s-that"]], "Building a Toolchain with Gentoo\u2019s crossdev": [[802, "building-a-toolchain-with-gentoo-s-crossdev"]], "Other Toolchains": [[802, "other-toolchains"]], "Kernel Source": [[802, "kernel-source"]], "Kernel Compilation": [[802, "kernel-compilation"]], "Parameters for the Build": [[802, "parameters-for-the-build"]], "Preparing the Kernel .config File": [[802, "preparing-the-kernel-config-file"]], "Building the Kernel Artifacts": [[802, "building-the-kernel-artifacts"]], "Packaging": [[802, "packaging"], [1055, "packaging"]], "Bootloader Artifacts": [[802, "bootloader-artifacts"]], "Module Tree": [[802, "module-tree"]], "Deployment": [[802, "deployment"]], "Variation": [[802, "variation"]], "Raspberry Pi: Building the Kernel": [[803, "raspberry-pi-building-the-kernel"]], "Todo jjj": [[803, "todo-jjj"]], "Sample Code Maintenance": [[804, "sample-code-maintenance"]], "Coding: Fix Sleep While Atomic (Slideshow)": [[805, "coding-fix-sleep-while-atomic-slideshow"]], "Simple Spinlock Usage: spin_lock()": [[805, "simple-spinlock-usage-spin-lock"]], "Discuss Call Chain, IRQ State": [[805, "discuss-call-chain-irq-state"]], "Enter spin_lock_irqsave(), spin_unlock_irqrestore()": [[805, "enter-spin-lock-irqsave-spin-unlock-irqrestore"]], "Ah, kmalloc()": [[805, "ah-kmalloc"]], "Coding: Fix Sleep While Atomic": [[806, "coding-fix-sleep-while-atomic"]], "Spinlock (vs. Mutex) (Slideshow)": [[807, "spinlock-vs-mutex-slideshow"]], "Mutual Exclusion: Spinlock": [[807, "mutual-exclusion-spinlock"]], "Spinlock Initialization": [[807, "spinlock-initialization"]], "Simple Lock/Unlock": [[807, "simple-lock-unlock"]], "Simple is not Bulletproof: Interrupt State": [[807, "simple-is-not-bulletproof-interrupt-state"]], "Mutual Exclusion: Conclusion": [[807, "mutual-exclusion-conclusion"]], "Spinlock (vs. Mutex)": [[808, "spinlock-vs-mutex"]], "dup(), fork(), and Reference Counting (Stub)": [[809, "dup-fork-and-reference-counting-stub"]], "Coding: Timed Event (Slideshow)": [[810, "coding-timed-event-slideshow"]], "Per-Event Timestamp": [[810, "per-event-timestamp"]], "Discussion: Deferred Events": [[810, "discussion-deferred-events"]], "Add Timer": [[810, "add-timer"]], "Gotcha: Cleanup Running Timer": [[810, "gotcha-cleanup-running-timer"]], "More Gotchas": [[810, "more-gotchas"]], "Coding: Timed Event": [[811, "coding-timed-event"]], "Timer Management (Slideshow)": [[812, "timer-management-slideshow"]], "Original Timer API": [[812, "original-timer-api"]], "jiffies": [[812, "jiffies"]], "\u201cTimer Wheel\u201d Methods": [[812, "timer-wheel-methods"]], "Better Documentation": [[812, "better-documentation"]], "Timer Management": [[813, "timer-management"]], "To Do List": [[814, "to-do-list"]], "Accessing Userspace Memory (Screenplay)": [[815, "accessing-userspace-memory-screenplay"]], "New ioctl: GET_ONE_EVENT": [[815, "new-ioctl-get-one-event"]], "Getting One Event": [[815, "getting-one-event"]], "copy_to_user()": [[815, "copy-to-user"]], "Userspace Test Program": [[815, "userspace-test-program"]], "Accessing Userspace Memory (Slideshow)": [[816, "accessing-userspace-memory-slideshow"]], "Address Spaces": [[816, "address-spaces"]], "Copying To and From Userspace": [[816, "copying-to-and-from-userspace"]], "Accessing Userspace Memory": [[817, "accessing-userspace-memory"]], "Waiting for Something (Screenplay)": [[818, "waiting-for-something-screenplay"]], "read() Not Implemented": [[818, "read-not-implemented"]], "Implementing read() Naively": [[818, "implementing-read-naively"]], "Discussion: What If Nothing\u2019s There?": [[818, "discussion-what-if-nothing-s-there"]], "Implementing O_NONBLOCK": [[818, "implementing-o-nonblock"]], "Waiting for Something (Slideshow)": [[819, "waiting-for-something-slideshow"]], "Waiting for Something": [[819, "waiting-for-something"], [820, "waiting-for-something"]], "Wait Queues: Initializing": [[819, "wait-queues-initializing"]], "Wait Queue: Waiting": [[819, "wait-queue-waiting"]], "Wait Queue: Waking": [[819, "wait-queue-waking"]], "Workqueue (Screenplay)": [[821, "workqueue-screenplay"]], "Add Workqueue": [[821, "add-workqueue"]], "Submit/Defer Work From Atomic Context": [[821, "submit-defer-work-from-atomic-context"]], "Cleanup (Why We Did This, After All)": [[821, "cleanup-why-we-did-this-after-all"]], "Finish": [[821, "finish"]], "Workqueue (Slideshow)": [[822, "workqueue-slideshow"]], "Workqueue: Motivation": [[822, "workqueue-motivation"]], "Creating/Destroying a Workqueue": [[822, "creating-destroying-a-workqueue"]], "What is Work?": [[822, "what-is-work"]], "Submitting Work": [[822, "submitting-work"]], "Workqueue": [[823, "workqueue"]], "Exercises: Archiving And Compression": [[824, "exercises-archiving-and-compression"]], "gzip": [[826, "gzip"]], "Compression Tools: Comparison": [[827, "compression-tools-comparison"]], "tar": [[828, "tar"]], "Creating And Viewing Archives": [[828, "creating-and-viewing-archives"]], "(De)Compression": [[828, "de-compression"]], "Etiquette": [[828, "etiquette"]], "Option Summary": [[828, "option-summary"]], "Being Creative With The Pipe": [[828, "being-creative-with-the-pipe"]], "Exam (ECE/SS2022/G1): Do A Lot With Files And Directories": [[829, "exam-ece-ss2022-g1-do-a-lot-with-files-and-directories"]], "Precondition: Logged-In To Remote/Exam Computer": [[829, "precondition-logged-in-to-remote-exam-computer"], [830, "precondition-logged-in-to-remote-exam-computer"]], "Create Exam Skeleton (5 Points)": [[829, "create-exam-skeleton-5-points"], [830, "create-exam-skeleton-5-points"]], "Create Credentials Files (10 Points)": [[829, "create-credentials-files-10-points"]], "Public Place (10 Points)": [[829, "public-place-10-points"], [830, "public-place-10-points"]], "Private Place (10 Points)": [[829, "private-place-10-points"], [830, "private-place-10-points"]], "Shared File in Public Place (10 Points)": [[829, "shared-file-in-public-place-10-points"], [830, "shared-file-in-public-place-10-points"]], "Make A Backup Of ~/exam-01 (15 Points)": [[829, "make-a-backup-of-exam-01-15-points"], [830, "make-a-backup-of-exam-01-15-points"]], "Exam (ECE/SS2022/G2): Do A Lot With Files And Directories": [[830, "exam-ece-ss2022-g2-do-a-lot-with-files-and-directories"]], "Create Business Cards (10 Points)": [[830, "create-business-cards-10-points"]], "Exercises/Exams: Linux Basics": [[831, "exercises-exams-linux-basics"]], "Linux Basics": [[832, "linux-basics"]], "Everything Is A File (Live Demo)": [[833, "everything-is-a-file-live-demo"]], "Simple is beautiful": [[833, "simple-is-beautiful"]], "Ok: a File is a File": [[833, "ok-a-file-is-a-file"]], "Is a Serial Interface (UART) a File?": [[833, "is-a-serial-interface-uart-a-file"]], "Pseudo Terminals": [[833, "pseudo-terminals"]], "Disks and Partitions": [[833, "disks-and-partitions"]], "/proc and /sys": [[833, "proc-and-sys"]], "Pseudo Devices": [[833, "pseudo-devices"]], "Environment (Variables)": [[834, "environment-variables"]], "Shell: Environment Variables, And Process Creation": [[834, "shell-environment-variables-and-process-creation"]], "Popular Environment Variables: HOME, SHELL, USER": [[834, "popular-environment-variables-home-shell-user"]], "Popular Environment Variables: PATH": [[834, "popular-environment-variables-path"]], "FH/Moodle Quiz: Linux Basics": [[835, "fh-moodle-quiz-linux-basics"]], "User Space, Kernel Space": [[835, "user-space-kernel-space"]], "Processes, Scheduling, and Virtual Memory": [[835, "processes-scheduling-and-virtual-memory"]], "Login? What Is That?": [[837, "login-what-is-that"]], "Authentication: Prompting The User For Login Data": [[837, "authentication-prompting-the-user-for-login-data"]], "Authentication: Verification Of Login Data": [[837, "authentication-verification-of-login-data"]], "And After Successful Authentication?": [[837, "and-after-successful-authentication"]], "Impersonation": [[837, "impersonation"]], "Logged In, Finally": [[837, "logged-in-finally"]], "User Space, Kernel Space?": [[838, "user-space-kernel-space"]], "User Space: Abstractions": [[838, "user-space-abstractions"]], "Kernel: Where The Heavy Stuff Is": [[838, "kernel-where-the-heavy-stuff-is"]], "Booting a Computer": [[838, "booting-a-computer"]], "Processes, Scheduling, Address Spaces": [[839, "processes-scheduling-address-spaces"]], "Problem: Owning the CPU?": [[839, "problem-owning-the-cpu"]], "Solution: Scheduling (Time Slices)": [[839, "solution-scheduling-time-slices"]], "Problem: Owning all Memory?": [[839, "problem-owning-all-memory"]], "Solution: Virtual Memory": [[839, "solution-virtual-memory"]], "Process Attributes: User ID (UID)": [[839, "process-attributes-user-id-uid"]], "Process Attributes: Groups": [[839, "process-attributes-groups"]], "Processes: More Attributes": [[839, "processes-more-attributes"]], "Process Hierarchy (Parent, Child Process)": [[840, "process-hierarchy-parent-child-process"]], "More Process Rules": [[840, "more-process-rules"]], "Typical Process Tree": [[840, "typical-process-tree"]], "Services, init": [[840, "services-init"]], "Windows Subsystem for Linux (WSL)": [[841, "windows-subsystem-for-linux-wsl"]], "Disclaimer!": [[841, null]], "More Links": [[841, "more-links"]], "My $0.02": [[841, "my-0-02"]], "WSL, Finally": [[841, "wsl-finally"]], "Exercises: IO-Redirection, Pipes": [[842, "exercises-io-redirection-pipes"]], "I/O Redirection": [[844, "i-o-redirection"]], "Standard I/O Streams": [[844, "standard-i-o-streams"]], "I/O Redirection Operators": [[844, "i-o-redirection-operators"]], "Example: Standard Output Redirection": [[844, "example-standard-output-redirection"]], "Example: Standard Input Redirection": [[844, "example-standard-input-redirection"]], "Example: Standard Error Redirection": [[844, "example-standard-error-redirection"]], "Example: Everything Redirection": [[844, "example-everything-redirection"]], "I/O Redirection: Swap stdout And stderr": [[845, "i-o-redirection-swap-stdout-and-stderr"]], "Basic Pipe Usage": [[845, "basic-pipe-usage"]], "Basic Pipe Usage: What The Shell Does": [[845, "basic-pipe-usage-what-the-shell-does"]], "And How Do I Count Lines On stderr?": [[845, "and-how-do-i-count-lines-on-stderr"]], "More Tricks": [[845, "more-tricks"]], "Pipes": [[846, "pipes"]], "Why Pipes?": [[846, "why-pipes"]], "Pipe Facts": [[846, "pipe-facts"]], "Pipe Examples": [[846, "pipe-examples"]], "More Pipe Examples": [[846, "more-pipe-examples"]], "Named Pipes": [[846, "named-pipes"]], "Permissions: Mode, User and Group Ownership": [[847, "permissions-mode-user-and-group-ownership"]], "Owner and Permissions": [[847, "owner-and-permissions"]], "A Simple Example": [[847, "a-simple-example"]], "Teacher\u2019s note: create that constellation (as root)": [[847, null]], "Permission Check: User": [[847, "permission-check-user"]], "Permission Check: Group": [[847, "permission-check-group"]], "Permission Check: Others": [[847, "permission-check-others"]], "Programs: Execute Permissions": [[847, "programs-execute-permissions"]], "Directory Permissions": [[847, "directory-permissions"]], "Permission Bits, octal": [[847, "permission-bits-octal"]], "Shell Commands: Tuning Permissions": [[847, "shell-commands-tuning-permissions"]], "Shell Commands: Changing User/Group Ownership": [[847, "shell-commands-changing-user-group-ownership"]], "Exercise: Determine Your User Credentials": [[848, "exercise-determine-your-user-credentials"]], "FH/Moodle Quiz: Permissions": [[849, "fh-moodle-quiz-permissions"], [850, "fh-moodle-quiz-permissions"]], "Exercises: File System Permissions": [[851, "exercises-file-system-permissions"]], "Exercise: Create Private Directory": [[852, "exercise-create-private-directory"]], "Question: Private Directory": [[853, "question-private-directory"]], "Exercise: Create Public Directory": [[854, "exercise-create-public-directory"]], "Question: Public Directory": [[855, "question-public-directory"]], "Exercise: Create Group-Shared File": [[856, "exercise-create-group-shared-file"]], "SetUID Programs: passwd, sudo, \u2026": [[858, "setuid-programs-passwd-sudo"]], "Problem: Change My Password": [[858, "problem-change-my-password"]], "Solution: Set-UID Bit": [[858, "solution-set-uid-bit"]], "Set-UID: How Does It Work?": [[858, "set-uid-how-does-it-work"]], "Command: chmod": [[858, "command-chmod"]], "Set-UID Is Not A Toy!": [[858, "set-uid-is-not-a-toy"]], "SetUID: Live Demo": [[859, "setuid-live-demo"]], "Real and Effective User ID": [[859, "real-and-effective-user-id"]], "Sample Program": [[859, "sample-program"]], "Set-UID jfasch?": [[859, "set-uid-jfasch"]], "Set-UID root? Danger!": [[859, "set-uid-root-danger"]], "Ugly Hack: Sticky Bit": [[860, "ugly-hack-sticky-bit"]], "Sticky Bit": [[860, "sticky-bit"]], "Default Permissions: umask": [[861, "default-permissions-umask"]], "Default Permissions - umask": [[861, "id1"]], "umask: How Does it Work?": [[861, "umask-how-does-it-work"]], "Shape (1)": [[862, "shape-1"]], "Shape (2)": [[862, "shape-2"]], "Options": [[862, "options"], [891, "options"]], "Help and Manual": [[862, "help-and-manual"]], "Man Pages: Navigation": [[862, "man-pages-navigation"]], "Commandline Editing: Moving, Deleting": [[862, "commandline-editing-moving-deleting"]], "Commandline Editing: Entire Words": [[862, "commandline-editing-entire-words"]], "Commandline Editing: Entire Lines": [[862, "commandline-editing-entire-lines"]], "The Tabulator Key: Command Completion": [[862, "the-tabulator-key-command-completion"]], "The Tabulator Key: Filename Completion": [[862, "the-tabulator-key-filename-completion"]], "Shell Configuration File: ~/.bashrc": [[863, "shell-configuration-file-bashrc"]], "What\u2019s Volatile?": [[863, "what-s-volatile"]], "Copying: cp": [[864, "copying-cp"]], "Option Overview": [[864, "option-overview"]], "Creating backup copy of, say, .bashrc in the home directory": [[864, "creating-backup-copy-of-say-bashrc-in-the-home-directory"]], "Similar: copy a file into a different directory, under a different name": [[864, "similar-copy-a-file-into-a-different-directory-under-a-different-name"]], "Similar: copy a file into a different directory, keeping its name": [[864, "similar-copy-a-file-into-a-different-directory-keeping-its-name"]], "Copy multiple files into a directory": [[864, "copy-multiple-files-into-a-directory"]], "Copying a directory, together with its contents \u27f6 recursive copy": [[864, "copying-a-directory-together-with-its-contents-longrightarrow-recursive-copy"]], "Current Working Directory: pwd": [[865, "current-working-directory-pwd"]], "Changing The Current Working Directory: cd": [[865, "changing-the-current-working-directory-cd"]], "Exercise: Copy Directory Tree": [[866, "exercise-copy-directory-tree"]], "Exercise: Copy Files": [[867, "exercise-copy-files"]], "Exercise: Create Files (I/O Redirection)": [[868, "exercise-create-files-i-o-redirection"]], "Exercise: Move Files": [[869, "exercise-move-files"]], "Exercises: Create/Copy/Move/Remove": [[870, "exercises-create-copy-move-remove"]], "Exercise: mkdir": [[871, "exercise-mkdir"]], "Exercise: Funny Stuff": [[872, "exercise-funny-stuff"]], "Exercise: Remove Directory Tree": [[873, "exercise-remove-directory-tree"]], "Exercise: Verify, Repeat": [[874, "exercise-verify-repeat"]], "FH/Moodle Quiz: Shell": [[875, "fh-moodle-quiz-shell"]], "The Shell - Exercises": [[876, "the-shell-exercises"]], "Exercise: File Types in /dev": [[877, "exercise-file-types-in-dev"]], "Exercise: Size of /etc/passwd": [[878, "exercise-size-of-etc-passwd"]], "Exercises: The ls Command": [[879, "exercises-the-ls-command"]], "Exercise: Permissions of Home Directory": [[880, "exercise-permissions-of-home-directory"]], "Creating And Removing Files and Directories": [[881, "creating-and-removing-files-and-directories"]], "Creating a Directory: mkdir": [[881, "creating-a-directory-mkdir"]], "Creating a File: I/O redirection": [[881, "creating-a-file-i-o-redirection"]], "Creating an Empty File: touch": [[881, "creating-an-empty-file-touch"]], "Removing A File: rm": [[881, "removing-a-file-rm"]], "Removing A Directory: rmdir, rm -r": [[881, "removing-a-directory-rmdir-rm-r"]], "Symbolic Links, Hard Links": [[883, "symbolic-links-hard-links"]], "Directory Listings: The ls Command": [[884, "directory-listings-the-ls-command"]], "Many Options": [[884, "many-options"]], "Hidden Files": [[884, "hidden-files"]], "File Types": [[884, "file-types"]], "Moving and Renaming: mv": [[885, "moving-and-renaming-mv"]], "Renaming A File (or Directory)": [[885, "renaming-a-file-or-directory"]], "Moving a File to Somewhere Else": [[885, "moving-a-file-to-somewhere-else"]], "Moving a Directory to Somewhere Else": [[885, "moving-a-directory-to-somewhere-else"]], "Path Separator": [[886, "path-separator"]], "Relative Paths": [[886, "relative-paths"]], "Absolute Paths": [[886, "absolute-paths"]], "Special Paths": [[886, "special-paths"]], "cat": [[887, "cat"], [887, "id1"]], "cut": [[888, "cut"], [888, "id1"]], "Exercises: Inspecting Text Files": [[889, "exercises-inspecting-text-files"]], "find": [[890, "find"]], "Directories durchsuchen mit find": [[890, "directories-durchsuchen-mit-find"]], "find: Optionen": [[890, "find-optionen"]], "find: Beispiele": [[890, "find-beispiele"]], "find: Verkn\u00fcpfungen": [[890, "find-verknupfungen"]], "find: Verkn\u00fcpfungen: Beispiele": [[890, "find-verknupfungen-beispiele"]], "grep": [[891, "grep"]], "Searching With grep": [[891, "searching-with-grep"]], "More About Regular Expressions": [[891, "more-about-regular-expressions"]], "head And tail": [[893, "head-and-tail"]], "head": [[893, "head"]], "tail": [[893, "tail"]], "head And tail In The Pipe": [[893, "head-and-tail-in-the-pipe"]], "less": [[894, "less"]], "Paging Files Using less": [[894, "paging-files-using-less"]], "Help Screen (Enter With h)": [[894, "help-screen-enter-with-h"]], "stdin, stdout, And The Pipe": [[895, "stdin-stdout-and-the-pipe"]], "stdin, stdout: Examples": [[895, "stdin-stdout-examples"]], "Pipe: Examples": [[895, "pipe-examples"]], "Basics Text Tools": [[895, "basics-text-tools"]], "Yocto": [[897, "yocto"]], "Controlling a Brushless Motor With Raspberry Pi": [[899, "controlling-a-brushless-motor-with-raspberry-pi"]], "Topic": [[899, null]], "Electronic Speed Controller (ESC)": [[899, "electronic-speed-controller-esc"]], "Select Running Mode: \u201cFwd/Rev\u201d": [[899, "select-running-mode-fwd-rev"]], "The \u201cCommand Protocol\u201d, and Calibration": [[899, "the-command-protocol-and-calibration"]], "Driving the Motor": [[899, "driving-the-motor"]], "CAN/Linux Basics": [[900, "can-linux-basics"]], "Why This Talk?": [[900, "why-this-talk"]], "Network Programming: Datagram Exchange": [[900, "network-programming-datagram-exchange"]], "And CAN?": [[900, "and-can"]], "One CAN Network Packet \u2026": [[900, "one-can-network-packet"]], "CAN Interfaces": [[901, "can-interfaces"]], "CAN-Interface: Configuration": [[901, "can-interface-configuration"]], "CAN Utils": [[901, "can-utils"]], "CAN Utils: Usage (1)": [[901, "can-utils-usage-1"]], "CAN Utils: Usage (2)": [[901, "can-utils-usage-2"]], "vcan: Virtual CAN-Bus": [[901, "vcan-virtual-can-bus"]], "Programming": [[902, "programming"]], "CAN Programming": [[902, "can-programming"]], "CAN in C - Socket, Interface Index": [[902, "can-in-c-socket-interface-index"]], "CAN in Python - Socket, Interface Index": [[902, "can-in-python-socket-interface-index"]], "CAN in C - Frames (1)": [[902, "can-in-c-frames-1"]], "CAN in C - Frames (2)": [[902, "can-in-c-frames-2"]], "CAN in Python - Frames": [[902, "can-in-python-frames"]], "Hardware, Kernel": [[903, "hardware-kernel"]], "MCP2515: Schematic": [[903, "mcp2515-schematic"]], "MCP2515: Soldering": [[903, "mcp2515-soldering"]], "MCP2515: SPI": [[903, "mcp2515-spi"]], "MCP2515: Raspberry": [[903, "mcp2515-raspberry"]], "CAN Bus With Linux And Python": [[904, "can-bus-with-linux-and-python"]], "Linux Hardware Interfaces": [[905, "linux-hardware-interfaces"]], "Linux and I2C (using LM73 Temperature Sensor as Slave)": [[906, "linux-and-i2c-using-lm73-temperature-sensor-as-slave"]], "Configuring I2C Master": [[906, "configuring-i2c-master"]], "Enable I2C, Load BCM2835 Platform Driver": [[906, "enable-i2c-load-bcm2835-platform-driver"]], "Raspberry Pi GPIO header pinout": [[906, null]], "Enable Userspace I2C": [[906, "enable-userspace-i2c"]], "Slave Device: LM73": [[906, "slave-device-lm73"]], "Datasheet etc.": [[906, null]], "Optional: Address Selection": [[906, "optional-address-selection"]], "Connecting LM73 to Raspberry Pi": [[906, "connecting-lm73-to-raspberry-pi"]], "i2c-tools/i2cdetect: Diagnostics, Detecting Devices": [[906, "i2c-tools-i2cdetect-diagnostics-detecting-devices"]], "Using the Device: Talking I2C from Userspace": [[906, "using-the-device-talking-i2c-from-userspace"]], "Using the Device: hwmon - Hardware Monitoring": [[906, "using-the-device-hwmon-hardware-monitoring"]], "Building the Kernel, Enabling LM73": [[906, "building-the-kernel-enabling-lm73"]], "Loading the Driver": [[906, "loading-the-driver"]], "Hardware Monitoring (hwmon) Devices": [[906, "hardware-monitoring-hwmon-devices"]], "PWM Userspace Interface (using PCA9685)": [[907, "pwm-userspace-interface-using-pca9685"]], "Pulse Width Modulation (PWM)": [[907, "pulse-width-modulation-pwm"]], "Why An External PWM Controller?": [[907, "why-an-external-pwm-controller"]], "Wiring, Setup, and Testing": [[907, "wiring-setup-and-testing"]], "Talk to Chip Using the sysfs Interface": [[907, "talk-to-chip-using-the-sysfs-interface"]], "Linux and OneWire (using DS18B20 Temperature Sensor as Slave)": [[908, "linux-and-onewire-using-ds18b20-temperature-sensor-as-slave"]], "Master Device, Alterative 1: w1-gpio - OneWire Master in Software": [[908, "master-device-alterative-1-w1-gpio-onewire-master-in-software"]], "Wiring: Attach OneWire Device to GPIO Pin": [[908, "wiring-attach-onewire-device-to-gpio-pin"]], "Master Device, Alterative 2: DS2482 - I2C OneWire Master in Hardware": [[908, "master-device-alterative-2-ds2482-i2c-onewire-master-in-hardware"]], "DS2482-800: 8-Channel 1-Wire Master": [[908, null]], "Wiring: Attach DS2482-800 via I2C": [[908, "wiring-attach-ds2482-800-via-i2c"]], "Configure Software": [[908, "configure-software"]], "Enable I2C, and Check": [[908, "enable-i2c-and-check"]], "Verify That Our Device Is There": [[908, "verify-that-our-device-is-there"]], "Announce (\u201cHotplug\u201d) DS2482 to Linux": [[908, "announce-hotplug-ds2482-to-linux"]], "Wiring: Attach OneWire Device to DS2482-800": [[908, "wiring-attach-onewire-device-to-ds2482-800"]], "Over-Engineering? Beauty?": [[908, "over-engineering-beauty"]], "Hardware Bringup": [[908, "hardware-bringup"]], "Device Usage": [[908, "device-usage"]], "Slave Device: DS18B20 Temperature Sensor": [[908, "slave-device-ds18b20-temperature-sensor"]], "Using the Device": [[908, "using-the-device"]], "As a Generic OneWire Device": [[908, "as-a-generic-onewire-device"]], "As a Hardware Monitoring (hwmon) Device": [[908, "as-a-hardware-monitoring-hwmon-device"]], "lm-sensors": [[908, "lm-sensors"]], "OneWire Caveats": [[908, "onewire-caveats"]], "Bus Topology": [[908, "bus-topology"]], "Error Symptoms": [[908, "error-symptoms"]], "SSH: Basics": [[909, "ssh-basics"]], "Login": [[909, "login"]], "Exit Status, stdin, stdout: Scripting": [[909, "exit-status-stdin-stdout-scripting"]], "Exercise: Copy a File To Remote Machine, And Verify": [[910, "exercise-copy-a-file-to-remote-machine-and-verify"]], "Exercise: Copy a Tree To Remote Machine (And Adjust Permissions)": [[911, "exercise-copy-a-tree-to-remote-machine-and-adjust-permissions"]], "Exercises: SSH": [[912, "exercises-ssh"]], "Exercise: Create SSH Key Pair": [[913, "exercise-create-ssh-key-pair"]], "SSH: Public Key Authentication": [[915, "ssh-public-key-authentication"]], "Local Setup, Key Generation": [[915, "local-setup-key-generation"]], "Key Pair?": [[915, "key-pair"]], "Remote Setup (Wearing The Remote Admin\u2019s Hat)": [[915, "remote-setup-wearing-the-remote-admin-s-hat"]], "SSH: Links": [[916, "ssh-links"]], "SSH: Port Forwarding": [[917, "ssh-port-forwarding"]], "Port Forwarding - The Problem (1)": [[917, "port-forwarding-the-problem-1"]], "Port Forwarding - The Problem (2)": [[917, "port-forwarding-the-problem-2"]], "Port Forwarding - The Solution (1)": [[917, "port-forwarding-the-solution-1"]], "Port Forwarding - The Solution (2)": [[917, "port-forwarding-the-solution-2"]], "Port Forwarding - The Commandline": [[917, "port-forwarding-the-commandline"]], "SSH: Secure Copy (scp)": [[918, "ssh-secure-copy-scp"]], "What Is That?": [[918, "what-is-that"]], "Copy Single File From Local To Remote": [[918, "copy-single-file-from-local-to-remote"]], "Copy Single File from Remote To Local": [[918, "copy-single-file-from-remote-to-local"]], "Copy An Entire Directory Tree (-r)": [[918, "copy-an-entire-directory-tree-r"]], "Copy Multiple File From Here To There": [[918, "copy-multiple-file-from-here-to-there"]], "Copy From One Remote To A Different Remote": [[918, "copy-from-one-remote-to-a-different-remote"]], "More Options": [[918, "more-options"]], "SSH File System (sshfs)": [[919, "ssh-file-system-sshfs"]], "What Is It?": [[919, "what-is-it"]], "Why Is It?": [[919, "why-is-it"]], "Example Situation: The Raspi": [[919, "example-situation-the-raspi"]], "Mounting Remote  $HOME/logdata": [[919, "mounting-remote-home-logdata"]], "Unmounting: fusermount -u, or Simply umount": [[919, "unmounting-fusermount-u-or-simply-umount"]], "User ID Mismatch: Problem": [[919, "user-id-mismatch-problem"]], "User ID Mismatch: Solution (User Mapping)": [[919, "user-id-mismatch-solution-user-mapping"]], "The errno Variable": [[920, "the-errno-variable"]], "errno Is A Global Variable": [[920, "errno-is-a-global-variable"]], "Helper Functions": [[920, "helper-functions"]], "Linux Systems Programming: Basics": [[921, "linux-systems-programming-basics"]], "System Calls vs. Library Functions": [[922, "system-calls-vs-library-functions"]], "System Calls": [[922, "system-calls"]], "System Calls And The C-Library": [[922, "system-calls-and-the-c-library"]], "Library Function Or System Call?": [[922, "library-function-or-system-call"]], "Manual Pages": [[922, "manual-pages"]], "Blocking I/O: What is That? (\u201cEverything is a file\u201d)": [[923, "blocking-i-o-what-is-that-everything-is-a-file"]], "Examples/Live Demos": [[923, null]], "Solution: This Is What An Operating System Is There For": [[923, "solution-this-is-what-an-operating-system-is-there-for"]], "Blocking I/O (On A File): What is That?": [[924, "blocking-i-o-on-a-file-what-is-that"]], "See Also": [[924, null], [925, null], [926, null], [1107, "see-also"]], "Abstractions": [[924, "abstractions"], [925, "abstractions"], [926, "abstractions"]], "Simplicity": [[924, "simplicity"], [925, "simplicity"], [926, "simplicity"]], "Build, Run, Look": [[924, "build-run-look"], [925, "build-run-look"], [926, "build-run-look"]], "Watch: Run Under strace Supervision": [[924, "watch-run-under-strace-supervision"]], "Blocking I/O: On A Network Socket": [[925, "blocking-i-o-on-a-network-socket"]], "Opening a Network Connection": [[925, "opening-a-network-connection"]], "Blocking I/O: On A Timer? WTF?": [[926, "blocking-i-o-on-a-timer-wtf"]], "Setup A Timer": [[926, "setup-a-timer"]], "Blocking I/O: What Is That?": [[927, "blocking-i-o-what-is-that"]], "File I/O: Basics": [[928, "file-i-o-basics"]], "File Descriptors": [[928, "file-descriptors"]], "Standard Filedescriptors": [[928, "standard-filedescriptors"]], "File I/O: System Calls": [[928, "file-i-o-system-calls"]], "open()": [[928, "open"]], "open() Flags": [[928, "open-flags"]], "read()": [[928, "read"]], "write()": [[928, "write"]], "File Offset: lseek()": [[928, "file-offset-lseek"]], "The Rest: ioctl()": [[928, "the-rest-ioctl"]], "Exercise: Copy A File": [[929, "exercise-copy-a-file"]], "Sunny Case: Source File Exists, Destination Does Not Exist": [[929, "sunny-case-source-file-exists-destination-does-not-exist"]], "Error: Wrong Number Of Arguments Specified": [[929, "error-wrong-number-of-arguments-specified"]], "Error: Source File Does Not Exist": [[929, "error-source-file-does-not-exist"]], "Error: Destination File Exists": [[929, "error-destination-file-exists"]], "Error: Destination Directory Not Writable": [[929, "error-destination-directory-not-writable"]], "Exercise: Create File With Hole": [[930, "exercise-create-file-with-hole"]], "Duplicating (Whats Going On?)": [[931, "duplicating-whats-going-on"]], "File Descriptors, Open File, I-Node": [[931, "file-descriptors-open-file-i-node"]], "File Descriptors and Inheritance": [[931, "file-descriptors-and-inheritance"]], "Duplicating File Descriptors": [[931, "duplicating-file-descriptors"]], "Example: Shell Stdout-Redirection (1)": [[931, "example-shell-stdout-redirection-1"]], "Example: Shell Stdout-Redirection (2)": [[931, "example-shell-stdout-redirection-2"]], "Example: Shell Stdout-Redirection (3)": [[931, "example-shell-stdout-redirection-3"]], "O_CREAT: Creating A File": [[932, "o-creat-creating-a-file"]], "Creating A File If It Does Not Exist (Bogus Version)": [[932, "creating-a-file-if-it-does-not-exist-bogus-version"]], "Bogus O_CREAT Usage: Mode Parameter Missing": [[932, "bogus-o-creat-usage-mode-parameter-missing"]], "Creating A File If It Does Not Exist": [[932, "creating-a-file-if-it-does-not-exist"]], "O_EXCL: Creating A File, But Failing If It Already Exists": [[933, "o-excl-creating-a-file-but-failing-if-it-already-exists"]], "Is \u201cCreate or Open\u201d Always Wanted?": [[933, "is-create-or-open-always-wanted"]], "Sunny Case: File Does Not Exist": [[933, "sunny-case-file-does-not-exist"]], "Error: File Exists": [[933, "error-file-exists"]], "O_RDONLY: Reading a File": [[934, "o-rdonly-reading-a-file"]], "Me and /etc/passwd": [[934, "me-and-etc-passwd"]], "Code: Reading A File": [[934, "code-reading-a-file"]], "Sunny Case: Reading /etc/passwd": [[934, "sunny-case-reading-etc-passwd"]], "Error: File Not Readable": [[934, "error-file-not-readable"]], "Error: File Not Even There": [[934, "error-file-not-even-there"]], "O_WRONLY: Writing A File (Which Must Exist)": [[935, "o-wronly-writing-a-file-which-must-exist"]], "Writing (And Not Creating) A File": [[935, "writing-and-not-creating-a-file"]], "Error: File Not Writeable": [[935, "error-file-not-writeable"]], "Error: File Not Even There \u27f6 Not Implicitly Created": [[935, "error-file-not-even-there-longrightarrow-not-implicitly-created"]], "Sunny Case: File Exists, And Is Writeable": [[935, "sunny-case-file-exists-and-is-writeable"]], "Exercise: Read Temperature From Onewire Sensor": [[936, "exercise-read-temperature-from-onewire-sensor"]], "Onewire Basics": [[936, "onewire-basics"]], "Program": [[936, "program"], [1088, "program"]], "Test On The Target Machine": [[936, "test-on-the-target-machine"]], "I/O without Offset Manipulation": [[938, "i-o-without-offset-manipulation"]], "Scatter/Gather I/O": [[938, "scatter-gather-i-o"]], "Scatter/Gather I/O, without Offset Manipulation": [[938, "scatter-gather-i-o-without-offset-manipulation"]], "Truncating Files": [[938, "truncating-files"]], "File Descriptors - Allocation": [[938, "file-descriptors-allocation"]], "Linux Systems Programming": [[939, "linux-systems-programming"], [1168, "linux-systems-programming"]], "Get Value Of GPIO": [[940, "get-value-of-gpio"]], "Retrieving Value Manually, On The Commandline": [[940, "retrieving-value-manually-on-the-commandline"]], "Shell Script": [[940, "shell-script"]], "C Program": [[940, "c-program"]], "Introductory Live Hacking, Hardware-Wise (sysfs GPIO)": [[941, "introductory-live-hacking-hardware-wise-sysfs-gpio"]], "Intro: sysfs GPIO": [[942, "intro-sysfs-gpio"]], "sysfs?": [[942, "sysfs"]], "General Purpose IO (GPIO)": [[942, "general-purpose-io-gpio"]], "Requesting A GPIO Pin": [[942, "requesting-a-gpio-pin"]], "GPIO Attributes As Files": [[942, "gpio-attributes-as-files"]], "Interrupts In Userspace": [[943, "interrupts-in-userspace"]], "Manual Configuration": [[943, "manual-configuration"]], "C Program: Configuration, Event Loop": [[943, "c-program-configuration-event-loop"]], "Why Threads?": [[944, "why-threads"]], "Typical Uses": [[944, "typical-uses"]], "Legal (1)": [[944, "legal-1"]], "Legal (2)": [[944, "legal-2"]], "POSIX Thread API": [[944, "posix-thread-api"]], "Thread Life Cycle": [[945, "thread-life-cycle"], [945, "id1"]], "Thread Creation": [[945, "thread-creation"]], "Thread Termination (1)": [[945, "thread-termination-1"]], "Thread Termination (2)": [[945, "thread-termination-2"]], "Exit Status, pthread_join()": [[945, "exit-status-pthread-join"]], "Detached Threads": [[945, "detached-threads"]], "Thread ID": [[945, "thread-id"]], "Scheduled Entities (1)": [[945, "scheduled-entities-1"]], "Scheduled Entities (2)": [[945, "scheduled-entities-2"]], "Thread Creation, Race Condition": [[946, "thread-creation-race-condition"]], "Synchronization": [[947, "synchronization"]], "Race Conditions (1)": [[947, "race-conditions-1"]], "Race Conditions (2)": [[947, "race-conditions-2"]], "Mutex (1)": [[947, "mutex-1"]], "Mutex (2)": [[947, "mutex-2"]], "Mutex (3)": [[947, "mutex-3"]], "Mutex Types": [[947, "mutex-types"]], "Mutex: Solve Load/Modify/Store Conflict": [[948, "mutex-solve-load-modify-store-conflict"]], "Communication: Condition Variable": [[949, "communication-condition-variable"]], "Condition Variable (1)": [[949, "condition-variable-1"]], "Condition Variable (2)": [[949, "condition-variable-2"]], "Condition Variable: wait()": [[949, "condition-variable-wait"]], "Condition Variable: signal()": [[949, "condition-variable-signal"]], "Example: WIN32 Auto Reset Event (1)": [[949, "example-win32-auto-reset-event-1"]], "Example: WIN32 Auto Reset Event (2)": [[949, "example-win32-auto-reset-event-2"]], "Condition Variable: Checking the Predicate": [[949, "condition-variable-checking-the-predicate"]], "Condition Variable: Initialization": [[949, "condition-variable-initialization"]], "Condition Variable: Miscellaneous": [[949, "condition-variable-miscellaneous"]], "Condition Variable: Message Queue": [[950, "condition-variable-message-queue"]], "One-Time Initialization (1)": [[951, "one-time-initialization-1"]], "One-Time Initialization (2)": [[951, "one-time-initialization-2"]], "One-Time Initialization (3)": [[951, "one-time-initialization-3"]], "Thread Specific Data, Thread Local Storage": [[951, "thread-specific-data-thread-local-storage"]], "Last Warning (1)": [[952, "last-warning-1"]], "Last Warning (2)": [[952, "last-warning-2"]], "Last Warning (3)": [[952, "last-warning-3"]], "Trylock/islocked": [[954, "trylock-islocked"]], "Process: Arguments, Exit Status": [[955, "process-arguments-exit-status"]], "The Shell: A Program Like Any Program": [[955, "the-shell-a-program-like-any-program"]], "The Shell: A Programming Language": [[955, "the-shell-a-programming-language"]], "Exit Status": [[955, "exit-status"]], "Exit Status: 0 is \u201cOK\u201d": [[955, "exit-status-0-is-ok"]], "Exit Status: != 0 is \u201cNot OK\u201d": [[955, "exit-status-0-is-not-ok"]], "Argument Vector (int argc, char** argv)": [[955, "argument-vector-int-argc-char-argv"]], "Processes": [[956, "processes"]], "The Process Tree (And Environment, And procfs)": [[957, "the-process-tree-and-environment-and-procfs"]], "Process ID (PID) And Parent Process ID (PPID)": [[957, "process-id-pid-and-parent-process-id-ppid"]], "System Calls: getpid(), getppid()": [[957, "system-calls-getpid-getppid"]], "Environment Variables": [[957, "environment-variables"]], "Scheduling (and Multitasking)": [[958, "scheduling-and-multitasking"]], "Fairness Criteria": [[958, "fairness-criteria"]], "CPU bound vs. I/O bound": [[958, "cpu-bound-vs-i-o-bound"]], "Demo: I/O vs CPU bound": [[958, "demo-i-o-vs-cpu-bound"]], "Scheduling Decision, Runnability": [[958, "scheduling-decision-runnability"]], "Tasks": [[960, "tasks"], [124, "tasks"], [131, "tasks"]], "Tasks? Processes? Threads?": [[960, "tasks-processes-threads"]], "A Typical Bare Metal Application": [[960, "a-typical-bare-metal-application"]], "Hm. Need Another Timer Interrupt!": [[960, "hm-need-another-timer-interrupt"]], "Away From Interrupts: Use An Operating System": [[960, "away-from-interrupts-use-an-operating-system"]], "Tasks?": [[960, "id1"]], "Threads Are Great: More Functionality": [[960, "threads-are-great-more-functionality"]], "Are Threads Great?": [[960, "are-threads-great"]], "Stability Considerations": [[960, "stability-considerations"]], "Processes, Address Spaces": [[960, "processes-address-spaces"]], "Stabilizing": [[960, "stabilizing"]], "Scheduling: Exam Questions": [[961, "scheduling-exam-questions"]], "Wakeup Latency, and Fair Scheduling": [[962, "wakeup-latency-and-fair-scheduling"]], "Nice Value: Inexact Tuning": [[962, "nice-value-inexact-tuning"]], "Enter Realtime: Definition": [[962, "enter-realtime-definition"]], "Realtime on Linux": [[962, "realtime-on-linux"]], "Demo: Measuring Wakeup Latency": [[962, "demo-measuring-wakeup-latency"]], "Immediately?": [[962, "immediately"]], "Immediately! \u27f6 PREEMPT_RT": [[962, "immediately-longrightarrow-preempt-rt"]], "Realtime API": [[963, "realtime-api"]], "Scheduling Policies": [[963, "scheduling-policies"]], "Scheduling Priorities": [[963, "scheduling-priorities"]], "What\u2019s Runnning On A System?": [[963, "what-s-runnning-on-a-system"]], "Scheduling: System Calls": [[963, "scheduling-system-calls"]], "Scheduling: Threads (1)": [[963, "scheduling-threads-1"]], "Scheduling: Threads (2)": [[963, "scheduling-threads-2"]], "Priority Inversion": [[963, "priority-inversion"]], "Priority Inversion: Mutex Protocols (1)": [[963, "priority-inversion-mutex-protocols-1"]], "Wakeup Latency, CPU Frequency (Gotcha)": [[964, "wakeup-latency-cpu-frequency-gotcha"]], "Measuring Wakeup Latency": [[964, "measuring-wakeup-latency"]], "Many Runnable Processes (Gotcha: CPU Frequency Scaling)": [[964, "many-runnable-processes-gotcha-cpu-frequency-scaling"]], "CPU Frequency Scaling Out Of The Way": [[964, "cpu-frequency-scaling-out-of-the-way"]], "Mysteries Remaining": [[964, "mysteries-remaining"]], "Code: Sysprog: Event Driven Programming": [[965, "code-sysprog-event-driven-programming"]], "Screenplay: Sysprog: POSIX IPC": [[966, "screenplay-sysprog-posix-ipc"], [969, "screenplay-sysprog-posix-ipc"]], "select on Device Files": [[966, "select-on-device-files"]], "Sysprog: Events": [[967, "sysprog-events"]], "Code: Sysprog: POSIX IPC": [[968, "code-sysprog-posix-ipc"]], "Virtual Memory, mmap()": [[969, "virtual-memory-mmap"]], "POSIX Shared Memory": [[969, "posix-shared-memory"]], "Create Shared Memory Segment": [[969, "create-shared-memory-segment"]], "Produce into Shared Memory": [[969, "produce-into-shared-memory"]], "Consume from Shared Memory": [[969, "consume-from-shared-memory"]], "POSIX Semaphores": [[969, "posix-semaphores"]], "Create Semaphore": [[969, "create-semaphore"]], "Wait": [[969, "wait"]], "Post": [[969, "post"]], "POSIX Message Queues": [[969, "posix-message-queues"]], "Create": [[969, "create"]], "Produce": [[969, "produce"]], "Consume": [[969, "consume"]], "Slides: Sysprog: POSIX IPC": [[970, "slides-sysprog-posix-ipc"]], "Slideshow": [[970, null], [974, null]], "History: Two IPC Variants": [[970, "history-two-ipc-variants"]], "Object Names": [[970, "object-names"]], "File Semantics": [[970, "file-semantics"]], "Message Queues": [[970, "message-queues"]], "Open/Create: mq_open()": [[970, "open-create-mq-open"]], "Sending/Receiving: mq_send(), mq_receive()": [[970, "sending-receiving-mq-send-mq-receive"]], "Closing/Removing: mq_close(), mq_unlink()": [[970, "closing-removing-mq-close-mq-unlink"]], "Notification: mq_notify()": [[970, "notification-mq-notify"]], "Message Queues are Files": [[970, "message-queues-are-files"]], "Message Queue Filesystem: mqueue": [[970, "message-queue-filesystem-mqueue"]], "Semaphores": [[970, "semaphores"]], "Open/Create: sem_open()": [[970, "open-create-sem-open"]], "Communication: sem_wait(), sem_post()": [[970, "communication-sem-wait-sem-post"]], "Closing/Removing: sem_close(), ``sem_unlink()": [[970, "closing-removing-sem-close-sem-unlink"]], "Semaphores are Files": [[970, "semaphores-are-files"]], "Shared Memory (1)": [[970, "shared-memory-1"]], "Shared Memory (2)": [[970, "shared-memory-2"]], "Exercise: POSIX Message Queues": [[970, "exercise-posix-message-queues"]], "Sysprog: POSIX IPC": [[971, "sysprog-posix-ipc"]], "Code: Sysprog: Signals": [[972, "code-sysprog-signals"]], "Screenplay: Sysprog: Signals": [[973, "screenplay-sysprog-signals"]], "Barebones Naive Program": [[973, "barebones-naive-program"]], "Signal Handler": [[973, "signal-handler"]], "Alarm": [[973, "alarm"]], "Alarm (Louder)": [[973, "alarm-louder"]], "Synchronous Delivery": [[973, "synchronous-delivery"]], "Innocent Multithreaded Program": [[973, "innocent-multithreaded-program"]], "Add SIGALRM": [[973, "add-sigalrm"]], "Slides: Sysprog: Signals": [[974, "slides-sysprog-signals"]], "Example Signals": [[974, "example-signals"]], "Terminology": [[974, "terminology"]], "Default Actions": [[974, "default-actions"]], "Important Signals": [[974, "important-signals"]], "Sending, Commandline": [[974, "sending-commandline"]], "Sending Signals, Programmatically": [[974, "sending-signals-programmatically"]], "Warning!": [[974, "warning"]], "Blocking Signals: Signal Mask": [[974, "blocking-signals-signal-mask"]], "Signal Mask Manipulation": [[974, "signal-mask-manipulation"]], "Pending Signals": [[974, "pending-signals"]], "Signal Set: sigset_t": [[974, "signal-set-sigset-t"]], "Signal Handlers": [[974, "signal-handlers"]], "Installing a Signal Handler (1)": [[974, "installing-a-signal-handler-1"]], "Installing a Signal Handler (2)": [[974, "installing-a-signal-handler-2"]], "Effects of Signal Delivery": [[974, "effects-of-signal-delivery"]], "Last Warning!": [[974, "last-warning"]], "WTF Async Signal Safe?": [[974, "wtf-async-signal-safe"]], "Exercise: Signals": [[974, "exercise-signals"]], "Sysprog: Signals": [[975, "sysprog-signals"]], "Toolchain: Basics": [[976, "toolchain-basics"]], "GCC - GNU Compiler Collection": [[976, "gcc-gnu-compiler-collection"]], "All-In-One Usage: Single File": [[976, "all-in-one-usage-single-file"]], "All-In-One Usage: Multiple Files": [[976, "all-in-one-usage-multiple-files"]], "This Is Not As Simple As It Seems!": [[976, "this-is-not-as-simple-as-it-seems"]], "What\u2019s In A Program? \u27f6 Symbols (nm)": [[976, "what-s-in-a-program-longrightarrow-symbols-nm"]], "Overview: Where Do Which Symbols Come From (\u27f6 The Toolchain)": [[976, "overview-where-do-which-symbols-come-from-longrightarrow-the-toolchain"]], "Recap: Toolchain": [[976, "recap-toolchain"]], "CMake: Cross Build": [[977, "cmake-cross-build"]], "Cross Build: Parameters": [[977, "cross-build-parameters"]], "Core Build Instructions: Target Agnostic": [[977, "core-build-instructions-target-agnostic"]], "Toolchain Files": [[977, "toolchain-files"]], "Step 1: Generate Makefile in Build Directory": [[977, "step-1-generate-makefile-in-build-directory"]], "Step 2: Build Using make": [[977, "step-2-build-using-make"], [978, "step-2-build-using-make"]], "CMake: Local Build": [[978, "cmake-local-build"]], "make: Problems": [[978, "make-problems"]], "CMake To The Rescue": [[978, "cmake-to-the-rescue"]], "Out-Of-Source Build": [[978, "out-of-source-build"]], "Step 1: Generate Makefile In Build Directory": [[978, "step-1-generate-makefile-in-build-directory"]], "Goodie: Dependency Management": [[978, "goodie-dependency-management"]], "Native Compilation": [[979, "native-compilation"]], "Cross?": [[979, "cross"]], "The sysroot": [[979, "the-sysroot"]], "Exercise: Build Software Package (Cross, Raspberry)": [[981, "exercise-build-software-package-cross-raspberry"]], "FH/Moodle Quiz: Toolchain": [[982, "fh-moodle-quiz-toolchain"]], "Exercises: Toolchain": [[983, "exercises-toolchain"]], "Exercise: Build Software Package (Native)": [[984, "exercise-build-software-package-native"]], "Exercise: Install And Check Raspberry Toolchain": [[985, "exercise-install-and-check-raspberry-toolchain"]], "Toolchain, And Cross Development": [[986, "toolchain-and-cross-development"]], "Case Study: Raspberry Toolchain": [[987, "case-study-raspberry-toolchain"]], "Linaro Toolchain For The Pi (Defunct)": [[988, "linaro-toolchain-for-the-pi-defunct"]], "Download And Unpack Linaro Toolchain": [[988, "download-and-unpack-linaro-toolchain"]], "Create a sysroot": [[988, "create-a-sysroot"]], "Patience!": [[988, null]], "Test Cross Build": [[988, "test-cross-build"]], "What We Have": [[988, "what-we-have"]], "Use Cross Compiler To Build Against sysroot": [[988, "use-cross-compiler-to-build-against-sysroot"]], "Adjust $PATH To Point To Toolchain": [[988, "adjust-path-to-point-to-toolchain"]], "Building A Toolchain On Fedora For Ubuntu 18.04 (WSL)": [[990, "building-a-toolchain-on-fedora-for-ubuntu-18-04-wsl"]], "Install And Run Docker": [[990, "install-and-run-docker"]], "Create Ubuntu Images (18.04 and 20.04)": [[990, "create-ubuntu-images-18-04-and-20-04"]], "Create Docker Volume": [[990, "create-docker-volume"]], "Container Work": [[990, "container-work"]], "Command To Run Container On Volumes": [[990, "command-to-run-container-on-volumes"]], "Setup container": [[990, "setup-container"]], "Install autoconf 2.71": [[990, "install-autoconf-2-71"]], "Install crosstool-ng": [[990, "install-crosstool-ng"]], "Build Toolchain": [[990, "build-toolchain"]], "crosstool-ng Toolchain Build": [[990, "crosstool-ng-toolchain-build"]], "Create Toolchain Archive": [[990, "create-toolchain-archive"]], "Install Toolchain On Host": [[990, "install-toolchain-on-host"]], "Cross Toolchain Setup": [[991, "cross-toolchain-setup"]], "Download And Install Toolchain Archive": [[991, "download-and-install-toolchain-archive"]], "Establish CMake Toolchain File": [[991, "establish-cmake-toolchain-file"]], "Test Run": [[991, "test-run"]], "Zooming In: Separate Compilation, and Linking Statically": [[992, "zooming-in-separate-compilation-and-linking-statically"]], "Remember: All-In-One Build \u2026": [[992, "remember-all-in-one-build"]], "Adding Another main(): What About Shared Code?": [[992, "adding-another-main-what-about-shared-code"]], "Solution: Separate Compilation And Linking Steps": [[992, "solution-separate-compilation-and-linking-steps"]], "Complication: Modification Tracking": [[992, "complication-modification-tracking"]], "Enter Makefiles": [[992, "enter-makefiles"]], "Shared Libraries (Shared Objects)": [[993, "shared-libraries-shared-objects"]], "Problems With Static Libraries": [[993, "problems-with-static-libraries"]], "And Dynamic Libraries?": [[993, "and-dynamic-libraries"]], "Relocations": [[993, "relocations"]], "Building A Shared Library: Position Independent Code (PIC)": [[993, "building-a-shared-library-position-independent-code-pic"]], "Linking Executables Against Shared Libraries": [[993, "linking-executables-against-shared-libraries"]], "And Build Dependencies?": [[993, "and-build-dependencies"]], "And Runtime Dependencies?": [[993, "and-runtime-dependencies"]], "And Starting An Executable Having External Dependencies?": [[993, "and-starting-an-executable-having-external-dependencies"]], "This Is Not Simple: Library Search Path": [[993, "this-is-not-simple-library-search-path"]], "Summary: Static Versus Dynamic Libraries": [[993, "summary-static-versus-dynamic-libraries"]], "Object Code Archives/Static Libraries": [[994, "object-code-archives-static-libraries"]], "Code Bases Become Larger (1)": [[994, "code-bases-become-larger-1"]], "Code Bases Become Larger (2)": [[994, "code-bases-become-larger-2"]], "Problem: Structure": [[994, "problem-structure"]], "Build Instructions: Building A Library": [[994, "build-instructions-building-a-library"]], "Closures": [[995, "closures"]], "Today": [[995, "today"]], "def is a Statement": [[995, "def-is-a-statement"]], "Functions That Create Functions": [[995, "functions-that-create-functions"]], "Inner Function Reaches Out To Global Scope": [[995, "inner-function-reaches-out-to-global-scope"]], "And Intermediate Scope? \u27f6 Closure": [[995, "and-intermediate-scope-longrightarrow-closure"]], "A Less Theoretical \u201cUse Case\u201d": [[995, "a-less-theoretical-use-case"]], "Scope Issues: Assignment to Global Scope (global Keyword)": [[995, "scope-issues-assignment-to-global-scope-global-keyword"]], "Scope Issues: Assignment to Intermediate Scope (nonlocal Keyword)": [[995, "scope-issues-assignment-to-intermediate-scope-nonlocal-keyword"]], "Intro": [[996, "intro"]], "Simplest: List Comprehension": [[996, "simplest-list-comprehension"]], "Context Managers: The with Statement": [[997, "context-managers-the-with-statement"]], "Example: Open File": [[997, "example-open-file"]], "Example: Temporary Directory": [[997, "example-temporary-directory"]], "Example: Multiple with Items": [[997, "example-multiple-with-items"]], "Under The Hood: Context Manager": [[997, "under-the-hood-context-manager"]], "Example: Monkeypatching The print Function": [[997, "example-monkeypatching-the-print-function"]], "Still Much Typing \u27f6 @contextlib.contextmanager": [[997, "still-much-typing-longrightarrow-contextlib-contextmanager"]], "More Involved: Using Closures To Implement PrefixPrint": [[997, "more-involved-using-closures-to-implement-prefixprint"]], "Decorators": [[998, "decorators"]], "The Ominous \u201c@\u201d": [[998, "the-ominous"]], "Decorators Overview": [[998, "decorators-overview"]], "A Simple Minded Function": [[998, "a-simple-minded-function"]], "Decorator Basics": [[998, "decorator-basics"]], "Decorators are Syntactic Sugar": [[998, "decorators-are-syntactic-sugar"]], "Problem: Arbitrary Function Arguments": [[998, "problem-arbitrary-function-arguments"]], "*args, **kwargs To The Rescue": [[998, "args-kwargs-to-the-rescue"]], "Sideways: functools.wraps": [[998, "sideways-functools-wraps"]], "Class Decorator: debug() with prefix": [[998, "class-decorator-debug-with-prefix"]], "Basic Exception Handling: try, except": [[999, "basic-exception-handling-try-except"]], "Catching Exceptions By Type": [[999, "catching-exceptions-by-type"]], "Exception Objects": [[999, "exception-objects"]], "Catching Multiple Exception Types: Exception List": [[999, "catching-multiple-exception-types-exception-list"]], "Catching Multiple Exception Types: Multiple except Clauses": [[999, "catching-multiple-exception-types-multiple-except-clauses"]], "Catching Multiple Exception Types: By Base Type": [[999, "catching-multiple-exception-types-by-base-type"]], "Important: Order Of except Clauses": [[999, "important-order-of-except-clauses"]], "Built-In Exception Hierarchy": [[999, "built-in-exception-hierarchy"]], "Raising Exceptions": [[999, "raising-exceptions"]], "Re-Raising Exceptions": [[999, "re-raising-exceptions"]], "User-Defined Exceptions": [[999, "user-defined-exceptions"]], "User-Defined Exceptions: More": [[999, "user-defined-exceptions-more"]], "else: Executed If No Exception": [[999, "else-executed-if-no-exception"]], "finally: Executed Regardless Of Exception": [[999, "finally-executed-regardless-of-exception"]], "The exec() Function": [[1000, "the-exec-function"]], "Dictionaries Everywhere: Context": [[1000, "dictionaries-everywhere-context"]], "Enter exec()": [[1000, "enter-exec"]], "exec(), and Context": [[1000, "exec-and-context"]], "And What Is This Used For, Realistically?": [[1000, "and-what-is-this-used-for-realistically"]], "Python: More Language Features": [[1001, "python-more-language-features"]], "Iteration, Comprehensions, and Generators": [[1002, "iteration-comprehensions-and-generators"]], "Coverage Of This Topic": [[1002, "coverage-of-this-topic"]], "for Recap: Sequential Datatypes": [[1002, "for-recap-sequential-datatypes"]], "Primitive Transformation [1,2,3,4] \u27f6 [1,4,9,16]": [[1002, "primitive-transformation-1-2-3-4-longrightarrow-1-4-9-16"]], "Larger Input List (Still Allocated)": [[1002, "larger-input-list-still-allocated"]], "Input List \u27f6 range": [[1002, "input-list-longrightarrow-range"]], "Output List \u27f6 yield": [[1002, "output-list-longrightarrow-yield"]], "Generator Function \u27f6 Generator Expression": [[1002, "generator-function-longrightarrow-generator-expression"]], "Implementing A Fibonacci Number Generator": [[1003, "implementing-a-fibonacci-number-generator"]], "Fibonacci Numbers: Naive List": [[1003, "fibonacci-numbers-naive-list"]], "Fibonacci Numbers: Naive List, Limited": [[1003, "fibonacci-numbers-naive-list-limited"]], "Sideway: Infinity by Not Using Functions": [[1003, "sideway-infinity-by-not-using-functions"]], "Fibonacci Numbers: Function Producing Infinite Sequence": [[1003, "fibonacci-numbers-function-producing-infinite-sequence"]], "Common Pattern: Turn List into Generated Items": [[1003, "common-pattern-turn-list-into-generated-items"]], "The Iterator Protocol": [[1004, "the-iterator-protocol"], [1004, "id1"]], "Iteration in Python": [[1004, "iteration-in-python"]], "What\u2019s an Iterator?": [[1004, "what-s-an-iterator"]], "What\u2019s an Iterable?": [[1004, "what-s-an-iterable"]], "The Iterator Protocol: Manual Iteration": [[1004, "the-iterator-protocol-manual-iteration"]], "The Iterator Protocol, And The for Loop": [[1004, "the-iterator-protocol-and-the-for-loop"]], "Generators: Motivation": [[1004, "generators-motivation"]], "Generators: How?": [[1004, "generators-how"]], "Observations": [[1004, "observations"]], "Iteration, Generators, And yield": [[1005, "iteration-generators-and-yield"]], "Iterating Intelligently: Generators, and the Iterator Protocol": [[1006, "iterating-intelligently-generators-and-the-iterator-protocol"]], "Modules are Objects": [[1007, "modules-are-objects"]], "Other Forms (1)": [[1007, "other-forms-1"]], "Other Forms (2)": [[1007, "other-forms-2"]], "Packages": [[1007, "packages"]], "Executing Modules as Scripts": [[1007, "executing-modules-as-scripts"]], "Package Structure": [[1007, "package-structure"]], "Relative Imports (1)": [[1007, "relative-imports-1"]], "Relative Imports (2)": [[1007, "relative-imports-2"]], "Multithreading (Python)": [[1008, "multithreading-python"]], "What\u2019s a Thread?": [[1008, "what-s-a-thread"]], "Threads: The Pythonic Way": [[1008, "threads-the-pythonic-way"]], "Threads: The OO Way - Inheritance": [[1008, "threads-the-oo-way-inheritance"]], "And Program Termination?": [[1008, "and-program-termination"]], "Daemon Threads": [[1008, "daemon-threads"]], "Race Conditions, and Mutexes": [[1010, "race-conditions-and-mutexes"]], "Mother of All Race conditions: Integer Increment": [[1010, "mother-of-all-race-conditions-integer-increment"]], "Load Modify Store Conflict": [[1010, "load-modify-store-conflict"]], "Solution: Mutex (Explicit Acquire/Release)": [[1010, "solution-mutex-explicit-acquire-release"]], "Solution: Mutex (with Statement)": [[1010, "solution-mutex-with-statement"]], "Multithreading: Exam Questions": [[1011, "multithreading-exam-questions"]], "Abstract Base Classes (abc), And Duck Typing": [[1012, "abstract-base-classes-abc-and-duck-typing"]], "Duck Typing: Examples": [[1012, "duck-typing-examples"]], "Duck Typing Problem: Late Errors": [[1012, "duck-typing-problem-late-errors"]], "Intermediate Step: Common Base Class (\u201cInterface\u201d)": [[1012, "intermediate-step-common-base-class-interface"]], "Enter Abstract Base Classes: Wish List": [[1012, "enter-abstract-base-classes-wish-list"]], "Abtract Base Class": [[1012, "abtract-base-class"]], "Classes And Dictionaries": [[1013, "classes-and-dictionaries"]], "Facts Up-Front": [[1013, "facts-up-front"]], "Using Raw Dictionaries As Objects": [[1013, "using-raw-dictionaries-as-objects"]], "Enter Classes: An Empty Class, And Its Effects": [[1013, "enter-classes-an-empty-class-and-its-effects"]], "Attributes": [[1013, "attributes"], [1125, "attributes"]], "Summary: Classes Or Raw Dictionaries": [[1013, "summary-classes-or-raw-dictionaries"]], "Dynamic Attribute Access": [[1013, "dynamic-attribute-access"]], "Constructor": [[1014, "constructor"]], "And self?": [[1014, "and-self"]], "Interrelationships": [[1015, "interrelationships"]], "Extending Existing Classes": [[1016, "extending-existing-classes"]], "Additional Feature: Salary": [[1016, "additional-feature-salary"]], "Want Manager": [[1016, "want-manager"]], "Introspecting Inheritance: isinstance(), issubclass()": [[1016, "introspecting-inheritance-isinstance-issubclass"]], "isinstance()": [[1016, "isinstance"]], "issubclass()": [[1016, "issubclass"]], "Add __str__(), Creatively, After The Fact": [[1016, "add-str-creatively-after-the-fact"]], "Object Methods": [[1017, "object-methods"]], "Class Methods (@classmethod)": [[1017, "class-methods-classmethod"]], "Static Methods (@staticmethod)": [[1017, "static-methods-staticmethod"]], "collections.namedtuple": [[1018, "collections-namedtuple"]], "Shortcut For Simple Data-Holding Classes": [[1018, "shortcut-for-simple-data-holding-classes"]], "Constructing From Iterable: _make()": [[1018, "constructing-from-iterable-make"]], "Convert To dict: _asdict()": [[1018, "convert-to-dict-asdict"]], "Operators Are \u201cDunder\u201d Methods": [[1019, "operators-are-dunder-methods"]], "Hypothetical And Pointless class Number": [[1019, "hypothetical-and-pointless-class-number"]], "Simplest: Equality Comparison (==)": [[1019, "simplest-equality-comparison"]], "Comparing Against Incompatible Types? (Lotsa Magic!)": [[1019, "comparing-against-incompatible-types-lotsa-magic"]], "Ordering: Less-Than (<) Operator": [[1019, "ordering-less-than-operator"]], "Ordering Magic, Again: __gt__ in terms of __lt__": [[1019, "ordering-magic-again-gt-in-terms-of-lt"]], "Table: Comparison Operators": [[1019, "table-comparison-operators"]], "@functools.total_ordering To The Rescue": [[1019, "functools-total-ordering-to-the-rescue"]], "Arithmetic Operators, Reverse Operations": [[1019, "arithmetic-operators-reverse-operations"]], "Table: Operators And The Methods To Implement Them": [[1019, "table-operators-and-the-methods-to-implement-them"]], "Readonly Attributes": [[1020, "readonly-attributes"]], "And Write Access?": [[1020, "and-write-access"]], "Calculated Attributes": [[1020, "calculated-attributes"]], "str() And repr()": [[1021, "str-and-repr"]], "Stringification And Representation": [[1021, "stringification-and-representation"]], "Overloading str() And repr(): __str__(), __repr__()": [[1021, "overloading-str-and-repr-str-repr"]], "Positional and Keyword Arguments": [[1022, "positional-and-keyword-arguments"]], "Traditional Function Call": [[1022, "traditional-function-call"]], "Supplying Function Arguments Dynamically": [[1022, "supplying-function-arguments-dynamically"]], "Functions That Takes Arbitrary Number Of Positional Arguments": [[1022, "functions-that-takes-arbitrary-number-of-positional-arguments"]], "Functions That Take Arbitrary Keyword Arguments": [[1022, "functions-that-take-arbitrary-keyword-arguments"]], "And Arbitrary Positional And Keyword Arguments?": [[1022, "and-arbitrary-positional-and-keyword-arguments"]], "Ultimate Dynamicity: Arbitrary Positional And Keyword Arguments": [[1022, "ultimate-dynamicity-arbitrary-positional-and-keyword-arguments"]], "Use Case: A Better print()": [[1022, "use-case-a-better-print"]], "The Python Programming Language": [[1025, "the-python-programming-language"]], "A Little Bit of History": [[1025, "a-little-bit-of-history"]], "Guido Van Rossum": [[1025, "guido-van-rossum"]], "Hello World: Interactive Mode": [[1026, "hello-world-interactive-mode"]], "Hello World: Script Files": [[1026, "hello-world-script-files"]], "Running Python Programs": [[1027, "running-python-programs"]], "The UNIX Way: Executable Bit, chmod": [[1027, "the-unix-way-executable-bit-chmod"]], "The UNIX Way: Hash-Bang (She-Bang)": [[1027, "the-unix-way-hash-bang-she-bang"]], "The UNIX Way: Running": [[1027, "the-unix-way-running"]], "The Doze Way: Registry": [[1027, "the-doze-way-registry"]], "Syntax: Indentation (1)": [[1028, "syntax-indentation-1"]], "Syntax: Indentation (2)": [[1028, "syntax-indentation-2"]], "Syntax: Statements and Lines": [[1028, "syntax-statements-and-lines"]], "Comments vs. Documentation": [[1028, "comments-vs-documentation"]], "Commandline Arguments (sys.argv)": [[1029, "commandline-arguments-sys-argv"]], "Operating Systems and Programs": [[1029, "operating-systems-and-programs"]], "Commandline Arguments in Python": [[1029, "commandline-arguments-in-python"]], "Cosmetics: Rudimentary Argument Parsing": [[1029, "cosmetics-rudimentary-argument-parsing"]], "Further information: argparse": [[1029, null]], "Variables (1)": [[1030, "variables-1"]], "Variables (2)": [[1030, "variables-2"]], "Integer Numbers: Comparison": [[1031, "integer-numbers-comparison"]], "Numbers: Python2 vs. Python 3 (1)": [[1031, "numbers-python2-vs-python-3-1"]], "Numbers: Python2 vs. Python 3 (2)": [[1031, "numbers-python2-vs-python-3-2"]], "Strings: Python 2": [[1031, "strings-python-2"]], "Strings: Python 2 \u2014 Confusion": [[1031, "strings-python-2-confusion"]], "Strings: Python 2 - unicode (1)": [[1031, "strings-python-2-unicode-1"]], "Strings: Python 2 \u2014 unicode (2)": [[1031, "strings-python-2-unicode-2"]], "Strings: Python 3": [[1031, "strings-python-3"]], "Python 3, Generally": [[1031, "python-3-generally"]], "Boolean Values": [[1033, "boolean-values"]], "Boolean Operators": [[1033, "boolean-operators"]], "The if Statement": [[1034, "the-if-statement"], [1034, "id1"]], "Looping Constructs": [[1035, "looping-constructs"]], "Esoteric Feature: while/else": [[1035, "esoteric-feature-while-else"]], "Sequence Elements": [[1036, "sequence-elements"]], "Sequence Multiplication": [[1036, "sequence-multiplication"]], "Indexing (1)": [[1037, "indexing-1"]], "Indexing (2)": [[1037, "indexing-2"]], "Slicing: Cutting Out": [[1037, "slicing-cutting-out"]], "Slicing: Step Width": [[1037, "slicing-step-width"]], "Iteration over \u2026 Something": [[1038, "iteration-over-something"]], "break, continue, else": [[1038, "break-continue-else"]], "Iteration over Numbers: range()": [[1039, "iteration-over-numbers-range"]], "range(): Definition": [[1039, "range-definition"]], "range(): Python 2 vs. Python 3": [[1039, "range-python-2-vs-python-3"]], "Immutability: Numbers": [[1040, "immutability-numbers"]], "Modifying An Integer In-Place? (Immutability)": [[1040, "modifying-an-integer-in-place-immutability"]], "Immutability: Tuples": [[1040, "immutability-tuples"]], "Mutability: Lists (1)": [[1040, "mutability-lists-1"]], "Mutability: Lists (2)": [[1040, "mutability-lists-2"]], "Shallow Copy": [[1040, "shallow-copy"]], "Deep Copy": [[1040, "deep-copy"]], "Functions: Global and Local Scope (Livehacking Screenplay)": [[1041, "functions-global-and-local-scope-livehacking-screenplay"]], "Undefined Variable": [[1041, "undefined-variable"]], "Local Variable": [[1041, "local-variable"]], "Local and Global Variable With Same Name": [[1041, "local-and-global-variable-with-same-name"]], "Assignment to Global Variable: global": [[1041, "assignment-to-global-variable-global"]], "Functions (Slideshow)": [[1042, "functions-slideshow"]], "Why Functions?": [[1042, "why-functions"]], "Mutable Default Parameters: Attention!": [[1042, "mutable-default-parameters-attention"]], "String Delimiters": [[1044, "string-delimiters"]], "Escape Sequences": [[1044, "escape-sequences"]], "More String Tricks": [[1044, "more-string-tricks"]], "C-Style Formatting (1)": [[1045, "c-style-formatting-1"]], "C-Style Formatting: Conversions": [[1045, "c-style-formatting-conversions"]], "C-Style Formatting: Flags": [[1045, "c-style-formatting-flags"]], "C-Style Formatting: Examples": [[1045, "c-style-formatting-examples"]], "The format Method": [[1045, "the-format-method"]], "Cool Since 3.6: f-Strings": [[1045, "cool-since-3-6-f-strings"]], "Batteries Included: Checks": [[1046, "batteries-included-checks"]], "Batteries Included: Search": [[1046, "batteries-included-search"]], "Substring Search: Examples": [[1046, "substring-search-examples"]], "Split and Join (1)": [[1046, "split-and-join-1"]], "Split and Join (2)": [[1046, "split-and-join-2"]], "List Access": [[1047, "list-access"]], "List Methods: Examples": [[1047, "list-methods-examples"]], "Dictionary Access": [[1048, "dictionary-access"]], "Examples: Simple Access": [[1048, "examples-simple-access"]], "Examples: Shortcuts": [[1048, "examples-shortcuts"]], "Dictionary Iteration (1)": [[1048, "dictionary-iteration-1"]], "Dictionary Iteration (2)": [[1048, "dictionary-iteration-2"]], "Operations on Sets (1)": [[1049, "operations-on-sets-1"]], "Operations on Sets (2)": [[1049, "operations-on-sets-2"]], "Python 2 vs. Python 3": [[1050, "python-2-vs-python-3"]], "Opening Files": [[1050, "opening-files"]], "Reading Files": [[1050, "reading-files"]], "Reading Files: Pythonic": [[1050, "reading-files-pythonic"]], "Writing Files (1)": [[1050, "writing-files-1"]], "Writing Files (2)": [[1050, "writing-files-2"]], "File Modes": [[1050, "file-modes"]], "Text vs. Binary Mode": [[1050, "text-vs-binary-mode"]], "Standard Streams": [[1050, "standard-streams"]], "Function Objects": [[1051, "function-objects"]], "What\u2019s a Function?": [[1051, "what-s-a-function"]], "Function Objects?": [[1051, "id1"]], "Function Objects! (1)": [[1051, "function-objects-1"]], "Function Objects! (2)": [[1051, "function-objects-2"]], "Commandline Parsing with argparse": [[1052, "commandline-parsing-with-argparse"]], "Handling Positional Arguments": [[1052, "handling-positional-arguments"]], "Handling Named Arguments: --interval \u2026": [[1052, "handling-named-arguments-interval"]], "Python: Draft Topics": [[1053, "python-draft-topics"]], "Matplotlib": [[1054, "matplotlib"]], "Axis Ranges": [[1054, "axis-ranges"]], "Package Installation (setuptools)": [[1055, "package-installation-setuptools"]], "Files": [[1055, "files"]], "Test \u201cInstallation\u201d": [[1055, "test-installation"]], "Source Distribution": [[1055, "source-distribution"]], "Manifest": [[1055, "manifest"]], "Installing From Wheel File": [[1055, "installing-from-wheel-file"]], "Publishing On PyPI": [[1055, "publishing-on-pypi"]], "Exercise: Read CSV File, Write into Sqlite3 Database": [[1056, "exercise-read-csv-file-write-into-sqlite3-database"]], "Exercise: Read CSV File": [[1057, "exercise-read-csv-file"]], "Sample CSV File": [[1057, "sample-csv-file"]], "CSV and Databases": [[1058, "csv-and-databases"]], "Exercise: Boolean Expressions": [[1060, "exercise-boolean-expressions"]], "Exercise: Even Numbers (while)": [[1061, "exercise-even-numbers-while"]], "Exercise: Greeting, Depending on Time of Day": [[1062, "exercise-greeting-depending-on-time-of-day"]], "Exercises (External)": [[1063, "exercises-external"]], "Exercise: Swap Two Variables": [[1065, "exercise-swap-two-variables"]], "Exercise: Username/Password Check": [[1066, "exercise-username-password-check"]], "Exercise: Digit to English Word": [[1067, "exercise-digit-to-english-word"]], "Exercise: Dictionary: Errors?": [[1068, "exercise-dictionary-errors"]], "Exercise: Eliminate Empty/Comment-Only Lines": [[1069, "exercise-eliminate-empty-comment-only-lines"]], "Exercise: Generator: Fibonacci": [[1070, "exercise-generator-fibonacci"]], "Exercise: Primeness (for)": [[1071, "exercise-primeness-for"]], "Exercises (Legacy)": [[1072, "exercises-legacy"]], "Exercise: Functions: join()": [[1073, "exercise-functions-join"]], "Exercise: Determine Maximum of Two Numbers (Function)": [[1075, "exercise-determine-maximum-of-two-numbers-function"]], "Exercise: Mixed List (Executable Program)": [[1076, "exercise-mixed-list-executable-program"]], "Exercise: Mixed List (Interactive Interpreter)": [[1077, "exercise-mixed-list-interactive-interpreter"]], "Exercise: Parsing /etc/passwd": [[1078, "exercise-parsing-etc-passwd"]], "Sample /etc/passwd file": [[1078, null]], "Implementation Strategy": [[1078, "implementation-strategy"]], "Exercise: Primeness (Function)": [[1079, "exercise-primeness-function"]], "Exercise: Reverting Lines of a File": [[1080, "exercise-reverting-lines-of-a-file"]], "Exercise: String (Right-Justify)": [[1081, "exercise-string-right-justify"]], "Exercise: Function: uniq()": [[1082, "exercise-function-uniq"]], "Exercise: Generator: uniq()": [[1083, "exercise-generator-uniq"]], "Exercise: Counting Lines, Words, Characters": [[1084, "exercise-counting-lines-words-characters"]], "Exercise: Primeness (while)": [[1085, "exercise-primeness-while"]], "Sensors, And Data Acquisition (Exercise Series)": [[1086, "sensors-and-data-acquisition-exercise-series"]], "Setting Paths": [[1087, "setting-paths"]], "Create (And Activate) A Virtual Environment For The Project": [[1087, "create-and-activate-a-virtual-environment-for-the-project"]], "Install Requirements": [[1087, "install-requirements"]], "Exercise: Basic \u201cSensor\u201d": [[1088, "exercise-basic-sensor"]], "Specification, And Setup": [[1088, "specification-and-setup"]], "Verification": [[1088, "verification"]], "Unit Test": [[1088, "unit-test"]], "Exercise: Read CSV File (csv.dictreader)": [[1089, "exercise-read-csv-file-csv-dictreader"]], "Users-header-cp1252.csv": [[1089, "id1"]], "Exercise: Refactoring - Extract CSV Reading Into Function (csv.dictreader)": [[1090, "exercise-refactoring-extract-csv-reading-into-function-csv-dictreader"]], "Exercise: Read CSV File (csv.reader)": [[1091, "exercise-read-csv-file-csv-reader"]], "Users-noheader-cp1252.csv": [[1091, "id2"]], "Exercise: Refactoring - Extract CSV Reading Into Function (csv.reader)": [[1092, "exercise-refactoring-extract-csv-reading-into-function-csv-reader"]], "User Database (Exercise Series)": [[1093, "user-database-exercise-series"]], "Exercise: MQTT: Publish User Records": [[1094, "exercise-mqtt-publish-user-records"]], "Exercise: Away From Raw Dictionaries": [[1095, "exercise-away-from-raw-dictionaries"]], "Test Code": [[1095, "test-code"], [1096, "test-code"], [1097, "test-code"]], "Exercise: Convert User Record To JSON And Back": [[1096, "exercise-convert-user-record-to-json-and-back"]], "Exercise: Refactoring - Extract Both CSV Formats Into Module": [[1097, "exercise-refactoring-extract-both-csv-formats-into-module"]], "Python: All Material, Interrelated": [[1098, "python-all-material-interrelated"]], "Python Programming: From Absolute Beginner to Advanced Productivity": [[1099, "python-programming-from-absolute-beginner-to-advanced-productivity"]], "Sample Trainings": [[1099, "sample-trainings"]], "More Information": [[1099, "more-information"]], "Python Links": [[1100, "python-links"]], "Advanced Python": [[1100, "advanced-python"], [1161, "advanced-python"]], "David Beazley": [[1100, "david-beazley"]], "Raymond Hettinger": [[1100, "raymond-hettinger"]], "Machine Learning, Artificial Intelligence": [[1101, "machine-learning-artificial-intelligence"]], "K-Means": [[1102, "k-means"]], "Topic Overview": [[1102, "topic-overview"], [1106, "topic-overview"]], "Artifacts": [[1102, "artifacts"]], "Topic Dependencies": [[1102, "topic-dependencies"], [1106, "topic-dependencies"]], "Linear Regression: Running Code (no Notebook!)": [[1103, "linear-regression-running-code-no-notebook"]], "Weather History Dataset": [[1104, "weather-history-dataset"]], "Linear Regression: Jupyter Notebook": [[1105, "Linear-Regression:-Jupyter-Notebook"]], "pandas.DataFrame": [[1105, "pandas.DataFrame"]], "Reading Data": [[1105, "Reading-Data"]], "Relationship Between pandas.DataFrame and numpy.ndarray": [[1105, "Relationship-Between-pandas.DataFrame-and-numpy.ndarray"]], "Extracting Input and Output Features from a pandas.DataFrame": [[1105, "Extracting-Input-and-Output-Features-from-a-pandas.DataFrame"]], "Plotting with matplotlib": [[1105, "Plotting-with-matplotlib"]], "Data Splicing: Split into Training and Test Data": [[1105, "Data-Splicing:-Split-into-Training-and-Test-Data"]], "Creating the Model: Algorithm + Training Data": [[1105, "Creating-the-Model:-Algorithm-+-Training-Data"]], "Verify the Model": [[1105, "Verify-the-Model"]], "Linear Regression": [[1106, "linear-regression"]], "Running Code": [[1106, "running-code"]], "Dataset": [[1106, "dataset"]], "Machine Learning: Concepts and Terminology": [[1107, "machine-learning-concepts-and-terminology"]], "How Far Is Mankind from Creating God": [[1107, "how-far-is-mankind-from-creating-god"]], "Basic Terminology: Algorithm and Model": [[1107, "basic-terminology-algorithm-and-model"]], "Basic Terminology: Features and Data": [[1107, "basic-terminology-features-and-data"]], "Types of Machine Learning": [[1107, "types-of-machine-learning"]], "Problems Solved": [[1107, "problems-solved"], [1129, "problems-solved"], [1136, "problems-solved"]], "CSV Files": [[1108, "csv-files"]], "CSV in its Origins": [[1108, "csv-in-its-origins"]], "The csv Module: csv.reader": [[1108, "the-csv-module-csv-reader"]], "And Tuple Unpacking?": [[1108, "and-tuple-unpacking"]], "Going Insane: CSV? SCSV?": [[1108, "going-insane-csv-scsv"]], "More Tuning Needed: Quoting": [[1108, "more-tuning-needed-quoting"]], "Tuning Options": [[1108, "tuning-options"]], "And Headings?": [[1108, "and-headings"]], "Enter csv.DictReader": [[1108, "enter-csv-dictreader"]], "DBAPI 2": [[1109, "dbapi-2"]], "Database Interfaces": [[1109, "database-interfaces"]], "DBAPI 2.0": [[1109, "dbapi-2-0"]], "Caveat: Transaction Lifetime": [[1109, "caveat-transaction-lifetime"]], "Caveat: Isolation": [[1109, "caveat-isolation"]], "Databases": [[1110, "databases"]], "DBAPI 2: PostgreSQL": [[1111, "dbapi-2-postgresql"]], "DBAPI 2 Example: Postgres": [[1111, "dbapi-2-example-postgres"]], "DBAPI 2: sqlite3": [[1112, "dbapi-2-sqlite3"]], "SQLite3": [[1112, "sqlite3"]], "SQLite3 Connection": [[1112, "sqlite3-connection"]], "SQLite3: Cursors and Statements": [[1112, "sqlite3-cursors-and-statements"]], "SQLite3: Filling the Database": [[1112, "sqlite3-filling-the-database"]], "SQLite3: Queries - Result Set": [[1112, "sqlite3-queries-result-set"]], "SQLite3: Bind Parameters": [[1112, "sqlite3-bind-parameters"]], "ASCII": [[1113, "ascii"]], "ISO Latin 1 (ISO-8859-1)": [[1113, "iso-latin-1-iso-8859-1"]], "And Python?": [[1113, "and-python"]], "Liebe Gr\u00fc\u00dfe, J\u00f6rg": [[1113, "liebe-grusze-jorg"]], "A Better Encoding for Liebe Gr\u00fc\u00dfe, J\u00f6rg: ISO-8859-1": [[1113, "a-better-encoding-for-liebe-grusze-jorg-iso-8859-1"]], "Encoding Mess": [[1113, "encoding-mess"]], "And \u795d\u597d, J\u00f6rg? (1)": [[1113, "and-jorg-1"]], "And \u795d\u597d, J\u00f6rg? (2)": [[1113, "and-jorg-2"]], "Enter UTF-8": [[1113, "enter-utf-8"]], "Boundary Code": [[1113, "boundary-code"]], "Ah Yes: decode()": [[1113, "ah-yes-decode"]], "And Source Encoding?": [[1113, "and-source-encoding"]], "Python: Miscellaneous Topics": [[1114, "python-miscellaneous-topics"]], "The import Statement (incomplete)": [[1115, "the-import-statement-incomplete"]], "Server/Broker": [[1116, "server-broker"]], "Client": [[1116, "client"]], "Starting the Service": [[1116, "starting-the-service"]], "Publishing a Message in Python": [[1116, "publishing-a-message-in-python"]], "Subscribing a Topic in Python": [[1116, "subscribing-a-topic-in-python"]], "Message Payload?": [[1116, "message-payload"]], "Pandas: Adding Rows": [[1117, "pandas-adding-rows"]], "Add Rows: Assign To New Row Number": [[1117, "add-rows-assign-to-new-row-number"]], "Add Rows: append() (Deprecated)": [[1117, "add-rows-append-deprecated"]], "Add Rows: Concatenating Frames": [[1117, "add-rows-concatenating-frames"]], "Pandas: Basics (DataFrame And Series)": [[1118, "pandas-basics-dataframe-and-series"]], "Naive: Objects, And Collections Of Objects": [[1118, "naive-objects-and-collections-of-objects"]], "Inverted: Objects, And Collections Of Objects (\u27f6 DataFrame)": [[1118, "inverted-objects-and-collections-of-objects-longrightarrow-dataframe"]], "Enter pandas, DataFrame, Series": [[1118, "enter-pandas-dataframe-series"]], "Selecting A Column \u27f6 Series": [[1118, "selecting-a-column-longrightarrow-series"]], "Selecting Multiple Columns": [[1118, "selecting-multiple-columns"]], "To Copy Or Not To Copy": [[1118, "to-copy-or-not-to-copy"]], "Pandas: Filters": [[1119, "pandas-filters"]], "Basic Filter Example": [[1119, "basic-filter-example"]], "Filter? Bitmap!": [[1119, "filter-bitmap"]], "Confusion: Filter/Column Addressing": [[1119, "confusion-filter-column-addressing"]], "Column Selection And Filters": [[1119, "column-selection-and-filters"]], "Boolean Expressions: Bitwise Operators! Braces!": [[1119, "boolean-expressions-bitwise-operators-braces"]], "Negation: ~": [[1119, "negation"]], "Neat Helpers": [[1119, "neat-helpers"]], "Random Material": [[1120, "random-material"]], "Pandas: Selecting Rows (And Columns) With iloc[]": [[1121, "pandas-selecting-rows-and-columns-with-iloc"]], "Row By Number: iloc[]": [[1121, "row-by-number-iloc"]], "So What Is A Row, Then?": [[1121, "so-what-is-a-row-then"]], "Selecting Multiple Rows": [[1121, "selecting-multiple-rows"]], "Selecting Rows And Columns": [[1121, "selecting-rows-and-columns"]], "Pandas: Indexes": [[1122, "pandas-indexes"]], "Default Index: Row Number": [[1122, "default-index-row-number"]], "Setting Custom Index": [[1122, "setting-custom-index"]], "Setting Custom Index, inplace=True": [[1122, "setting-custom-index-inplace-true"]], "Custom Index, And loc[]": [[1122, "custom-index-and-loc"]], "Custom Index, And iloc[]": [[1122, "custom-index-and-iloc"]], "Sorting DataFrame Object By Index Column": [[1122, "sorting-dataframe-object-by-index-column"]], "Pandas: Selecting Rows (And Columns) With loc[]": [[1123, "pandas-selecting-rows-and-columns-with-loc"]], "Rows (And Columns) By Label": [[1123, "rows-and-columns-by-label"]], "Hiccup: Slices Are Inclusive": [[1123, "hiccup-slices-are-inclusive"]], "Column Selection By Label": [[1123, "column-selection-by-label"]], "Columns By Slicing: Inclusive": [[1123, "columns-by-slicing-inclusive"]], "Pandas: Adding/Modifying Columns": [[1124, "pandas-adding-modifying-columns"]], "Example 1: Lowercasing A Column Of Strings": [[1124, "example-1-lowercasing-a-column-of-strings"]], "Example 1: Modifying The email Column": [[1124, "example-1-modifying-the-email-column"]], "Example 2: Adding A normalized_email Column": [[1124, "example-2-adding-a-normalized-email-column"]], "What If No Prebuilt Functionality Exists? apply() To The Rescue!": [[1124, "what-if-no-prebuilt-functionality-exists-apply-to-the-rescue"]], "apply() -ing Custom Functions": [[1124, "apply-ing-custom-functions"]], "XML: ElementTree (etree)": [[1125, "xml-elementtree-etree"]], "SAX and DOM": [[1125, "sax-and-dom"]], "ElementTree": [[1125, "elementtree"]], "A Very Simple Document": [[1125, "a-very-simple-document"]], "Text (1)": [[1125, "text-1"]], "Text (2)": [[1125, "text-2"]], "Writing XML Documents": [[1125, "writing-xml-documents"]], "Reading XML Documents": [[1125, "reading-xml-documents"]], "Visual Studio Code for Python Programming": [[1126, "visual-studio-code-for-python-programming"]], "Python: Project/Package Management": [[1127, "python-project-package-management"]], "Python Package Index (Livehacking Screenplay)": [[1128, "python-package-index-livehacking-screenplay"]], "Invocation": [[1128, "invocation"]], "Help": [[1128, "help"]], "Most Used Subcommands": [[1128, "most-used-subcommands"]], "Subcommand Help": [[1128, "subcommand-help"]], "System vs. User": [[1128, "system-vs-user"]], "Search": [[1128, "search"]], "Python Package Index (Slideshow)": [[1129, "python-package-index-slideshow"]], "Python Package Index (PyPI)": [[1129, "python-package-index-pypi"]], "Python Package Index": [[1130, "python-package-index"]], "Packaging, PyPI Upload (Link Collection)": [[1131, "packaging-pypi-upload-link-collection"]], "PyTest": [[1132, "pytest"]], "pytest Introduction, By Example": [[1133, "pytest-introduction-by-example"]], "Sample Project Structure": [[1133, "sample-project-structure"]], "pytest: Installation, Documentation": [[1133, "pytest-installation-documentation"]], "And PYTHONPATH?": [[1133, "and-pythonpath"]], "A Simple Test": [[1133, "a-simple-test"]], "Failing Tests": [[1133, "failing-tests"]], "A More Realistic Example": [[1133, "a-more-realistic-example"]], "Fixtures": [[1133, "fixtures"]], "Temporary Test Directory": [[1133, "temporary-test-directory"]], "Marking Tests as Expected to Fail": [[1133, "marking-tests-as-expected-to-fail"]], "The unittest Module": [[1134, "the-unittest-module"]], "Simplest Example": [[1134, "simplest-example"]], "Using a Fixture": [[1134, "using-a-fixture"]], "Multiple Test Cases With Same Fixture": [[1134, "multiple-test-cases-with-same-fixture"]], "Auto Recognizing Test Methods": [[1134, "auto-recognizing-test-methods"]], "The Meat of a Test": [[1134, "the-meat-of-a-test"]], "Recommendations": [[1134, "recommendations"]], "Virtual Environments (Livehacking Screenplay)": [[1135, "virtual-environments-livehacking-screenplay"]], "First: Help": [[1135, "first-help"]], "Local Package Installation": [[1135, "local-package-installation"]], "Freezing an Environment": [[1135, "freezing-an-environment"]], "Destroying an Environment": [[1135, "destroying-an-environment"]], "Recreating an Environment": [[1135, "recreating-an-environment"]], "Using Virtual Environments With Visual Studio Code": [[1135, "using-virtual-environments-with-visual-studio-code"]], "Virtual Environments (Slideshow)": [[1136, "virtual-environments-slideshow"]], "Virtual Environments (Links)": [[1136, "virtual-environments-links"]], "Virtual Environments": [[1137, "virtual-environments"]], "Code: Unittest: GTest Basics": [[1139, "code-unittest-gtest-basics"]], "Screenplay: Unittest: GTest Basics": [[1140, "screenplay-unittest-gtest-basics"]], "Before We Start": [[1140, "before-we-start"]], "Simplest Test: No Test": [[1140, "simplest-test-no-test"]], "Next Simplest: Single File": [[1140, "next-simplest-single-file"]], "Executing Tests Selectively": [[1140, "executing-tests-selectively"]], "Fatal Failure": [[1140, "fatal-failure"]], "FAIL()": [[1140, "fail"]], "ASSERT_*()": [[1140, "assert"]], "Non-Fatal Failure": [[1140, "non-fatal-failure"]], "Custom Message Output": [[1140, "custom-message-output"]], "Last Not Least: Structure": [[1140, "last-not-least-structure"]], "Test Cases and Suites": [[1140, "test-cases-and-suites"]], "Unittest: GTest Basics": [[1141, "unittest-gtest-basics"]], "Unittest: GTest and CMake": [[1143, "unittest-gtest-and-cmake"]], "Code: Unittest: GTest Fixtures": [[1144, "code-unittest-gtest-fixtures"]], "Screenplay: Unittest: GTest Fixtures": [[1145, "screenplay-unittest-gtest-fixtures"]], "Predefined Environment for a Number of Tests": [[1145, "predefined-environment-for-a-number-of-tests"]], "Environment is Isolated Per Test": [[1145, "environment-is-isolated-per-test"]], "More Complex Environment: SetUp(), TearDown()": [[1145, "more-complex-environment-setup-teardown"]], "Unittest: GTest Fixtures": [[1146, "unittest-gtest-fixtures"]], "Organisatorisches: Buchung, Kursablauf": [[1147, "organisatorisches-buchung-kursablauf"]], "Online Schulungen": [[1147, null]], "Buchung": [[1147, "buchung"]], "Kursgestaltung": [[1147, "kursgestaltung"]], "\u00dcbungen": [[1147, "ubungen"]], "Unterlagen & Download": [[1147, "unterlagen-download"]], "Linux from Scratch, 16.9.2013, M\u00fcnchen": [[1148, "linux-from-scratch-16-9-2013-munchen"]], "GRUB 0.97": [[1148, "grub-0-97"]], "Cross Systeme Bauen": [[1148, "cross-systeme-bauen"]], "Init, oder der Prozess mit der ID 1": [[1148, "init-oder-der-prozess-mit-der-id-1"]], "Verschiedenes": [[1148, "verschiedenes"]], "Shell Scripting/Bourne Again Shell (Bash)": [[1149, "shell-scripting-bourne-again-shell-bash"]], "Zielpublikum": [[1149, "zielpublikum"], [1151, "zielpublikum"], [1152, "zielpublikum"], [1157, "zielpublikum"], [1159, "zielpublikum"], [1164, "zielpublikum"], [1165, "zielpublikum"], [1171, "zielpublikum"]], "Kursinhalt": [[1149, "kursinhalt"], [1151, "kursinhalt"], [1152, "kursinhalt"], [1157, "kursinhalt"], [1159, "kursinhalt"], [1160, "kursinhalt"], [1164, "kursinhalt"], [1165, "kursinhalt"], [1166, "kursinhalt"], [1167, "kursinhalt"], [1169, "kursinhalt"], [1170, "kursinhalt"], [1171, "kursinhalt"]], "Empfohlene Vorkenntnisse": [[1149, "empfohlene-vorkenntnisse"], [1151, "empfohlene-vorkenntnisse"], [1152, "empfohlene-vorkenntnisse"], [1157, "empfohlene-vorkenntnisse"], [1159, "empfohlene-vorkenntnisse"], [1160, "empfohlene-vorkenntnisse"], [1164, "empfohlene-vorkenntnisse"], [1165, "empfohlene-vorkenntnisse"], [1166, "empfohlene-vorkenntnisse"], [1167, "empfohlene-vorkenntnisse"], [1169, "empfohlene-vorkenntnisse"], [1170, "empfohlene-vorkenntnisse"], [1171, "empfohlene-vorkenntnisse"]], "C: Einf\u00fchrung": [[1150, "c-einfuhrung"]], "C f\u00fcr Fortgeschrittene": [[1151, "c-fur-fortgeschrittene"]], "C++: Einf\u00fchrung und \u00dcberblick": [[1152, "c-einfuhrung-und-uberblick"]], "An Introduction to Modern C++, In Three Days": [[1153, "an-introduction-to-modern-c-in-three-days"]], "C and C++ Programming": [[1154, "c-and-c-programming"]], "CMake": [[1155, "cmake"]], "The Course": [[1155, null]], "Target Audience": [[1155, "target-audience"]], "Recommended Prior Knowledge": [[1155, "recommended-prior-knowledge"]], "Design Patterns For Embedded C++ Developers": [[1156, "design-patterns-for-embedded-c-developers"]], "Embedded Software Development: Hardware, Realtime, and Memory Management": [[1157, "embedded-software-development-hardware-realtime-and-memory-management"]], "Linux Kernel Driver Development": [[1158, "linux-kernel-driver-development"], [779, "linux-kernel-driver-development"]], "Course Contents": [[1158, "course-contents"]], "Sample Project": [[1158, "sample-project"]], "Linux Basics: Eine Einf\u00fchrung Anhand von Beispielen": [[1159, "linux-basics-eine-einfuhrung-anhand-von-beispielen"]], "GNU Make: Die Mutter aller Build Tools": [[1160, "gnu-make-die-mutter-aller-build-tools"]], "Herdt": [[1163, "herdt"]], "Eine Woche mit dem Raspberry Pi": [[1164, "eine-woche-mit-dem-raspberry-pi"]], "Subversion (SVN)": [[1165, "subversion-svn"]], "Linux Systems Programming: Introduction": [[1166, "linux-systems-programming-introduction"]], "Linux Systems Programming: Virtual Memory, IPC, Shared Libraries": [[1167, "linux-systems-programming-virtual-memory-ipc-shared-libraries"]], "Linux Systems Programming: Multithreading": [[1169, "linux-systems-programming-multithreading"]], "Linux Systems Programming: Network Programming": [[1170, "linux-systems-programming-network-programming"]], "Unittesting and Test Driven Development": [[1171, "unittesting-and-test-driven-development"]], "Lvalues, Rvalues, And Moving": [[673, "lvalues-rvalues-and-moving"]], "Return Object Problem: Reference To Stack-Based Object": [[673, "return-object-problem-reference-to-stack-based-object"]], "Return Object Problem: Solution: Copy": [[673, "return-object-problem-solution-copy"]], "Move Semantics: Wish List": [[673, "move-semantics-wish-list"]], "Theory: Lvalues": [[673, "theory-lvalues"]], "Theory: Rvalues": [[673, "theory-rvalues"]], "Lvalue References (The Good Old Ones)": [[673, "lvalue-references-the-good-old-ones"]], "Rvalue References: So What Is That?": [[673, "rvalue-references-so-what-is-that"]], "Rvalue References As Function Parameters": [[673, "rvalue-references-as-function-parameters"]], "Use Of Rvalue References Parameter Inside A Function: Is An Lvalue": [[673, "use-of-rvalue-references-parameter-inside-a-function-is-an-lvalue"]], "Enter Move Constructor And Move Assignment": [[673, "enter-move-constructor-and-move-assignment"]], "Rules": [[673, null]], "Day 1: Introduction: C++, A New Language": [[316, "day-1-introduction-c-a-new-language"]], "Pythonicity": [[316, "pythonicity"]], "New OO Features": [[316, "new-oo-features"]], "Day 2: Simply Getting Stuff Done": [[316, "day-2-simply-getting-stuff-done"]], "Classic Polymorphism: Interfaces": [[316, "classic-polymorphism-interfaces"]], "Move Semantics": [[316, "move-semantics"]], "Day 3: All The Rest": [[316, "day-3-all-the-rest"]], "Interfaces, And OO Design: Kochtopf And The Cloud": [[316, "interfaces-and-oo-design-kochtopf-and-the-cloud"]], "Moving, Roundup": [[316, "moving-roundup"]], "Containers And Algorithms": [[316, "containers-and-algorithms"]], "And Embedded?": [[316, "and-embedded"]], "Still Untold": [[316, "still-untold"]], "std::vector<>: Allocators (Very Incomplete)": [[738, "std-vector-allocators-very-incomplete"]], "Embedded Problems? Code Bloat? Type Erasure? Solutions?": [[740, "embedded-problems-code-bloat-type-erasure-solutions"]], "Type Erasure (Was: Eliminating virtual)": [[740, "type-erasure-was-eliminating-virtual"]], "Type Erasure (Static vs. Dynamic Polymorphism), CRTP": [[742, "type-erasure-static-vs-dynamic-polymorphism-crtp"]], "CRTP": [[742, "crtp"]], "Why Replace virtual?": [[747, "why-replace-virtual"]], "Screenplay: Unittest: GTest and CMake": [[1142, "screenplay-unittest-gtest-and-cmake"]], "Installed: to be found in Standard Paths": [[1142, "installed-to-be-found-in-standard-paths"]], "CMake: \u201cFind Modules\u201d": [[1142, "cmake-find-modules"]], "Executing Tests As Part of Build": [[1142, "executing-tests-as-part-of-build"]], "Tests That Are Expected to Fail": [[1142, "tests-that-are-expected-to-fail"]], "Standup Records": [[117, "standup-records"], [126, "standup-records"], [130, "standup-records"], [123, "standup-records"], [115, "standup-records"], [119, "standup-records"], [116, "standup-records"], [118, "standup-records"]], "Boiling Pot: Display, And Status Reporting": [[117, "boiling-pot-display-and-status-reporting"]], "Future (Not Part Of This Development Cycle)": [[120, "future-not-part-of-this-development-cycle"], [122, "future-not-part-of-this-development-cycle"], [125, "future-not-part-of-this-development-cycle"], [126, "future-not-part-of-this-development-cycle"], [130, "future-not-part-of-this-development-cycle"], [115, "future-not-part-of-this-development-cycle"], [119, "future-not-part-of-this-development-cycle"]], "Data Logger: CSV Sink": [[120, "data-logger-csv-sink"]], "Column name configuration": [[120, "column-name-configuration"]], "output()": [[120, "output"]], "Data Logger: MQTT Sink": [[122, "data-logger-mqtt-sink"]], "MQTT Implementation: mosquitto": [[122, "mqtt-implementation-mosquitto"]], "Wrapper": [[122, "wrapper"]], "libgpiod Switch": [[125, "libgpiod-switch"]], "2023-11-20": [[126, "id1"], [130, "id1"], [115, "id1"], [119, "id1"]], "2023-12-14": [[126, "id2"], [115, "id2"], [119, "id2"], [116, "id1"]], "Temperature Display: LED Via A PWM Controller": [[126, "temperature-display-led-via-a-pwm-controller"]], "SysFS GPIO Switch": [[130, "sysfs-gpio-switch"], [131, "sysfs-gpio-switch"]], "Display Interface/Infrastructure": [[123, "display-interface-infrastructure"]], "New Interface PercentageDisplay": [[123, "new-interface-percentagedisplay"]], "Existing Implementations": [[123, "existing-implementations"]], "Composite Display": [[123, "composite-display"]], "Testing: Breadboard Acrobatics, Demo Program": [[123, "testing-breadboard-acrobatics-demo-program"]], "(DONE) Boiling Pot (The Beginning)": [[115, "done-boiling-pot-the-beginning"]], "(DONE) Data Logger": [[119, "done-data-logger"]], "(DONE) Sensor Interface": [[127, "done-sensor-interface"]], "(DONE) Onewire Sensor": [[128, "done-onewire-sensor"]], "(DONE) Switch Interface": [[129, "done-switch-interface"]], "Boiling Pot: Basic Integration": [[116, "boiling-pot-basic-integration"]], "Boiling Pot: Full Integration (Display And IoT)": [[118, "boiling-pot-full-integration-display-and-iot"]], "Data Logger: Integration": [[121, "data-logger-integration"]], "Types, Operators, Expressions": [[388, "types-operators-expressions"]], "Program Flow": [[397, "program-flow"]], "Functions and Program Structure": [[404, "functions-and-program-structure"]], "Structures": [[414, "structures"]], "Memory": [[417, "memory"]], "Program Sanity": [[430, "program-sanity"]], "Performance": [[434, "performance"]], "Profiling": [[439, "profiling"]], "C++: Miscellaneous Live-Hacking": [[560, "c-miscellaneous-live-hacking"]], "Functions and Methods": [[583, "functions-and-methods"]], "C++ Template Basics": [[589, "c-template-basics"]], "Dynamic Memory Allocation, Resource Management": [[630, "dynamic-memory-allocation-resource-management"]], "The Standard Library: Miscellaneous Topics": [[639, "the-standard-library-miscellaneous-topics"]], "Functions, Functions": [[725, "functions-functions"]], "Topics and Dependencies": [[779, "topics-and-dependencies"]], "POSIX Threads": [[953, "posix-threads"]], "Python: The Language Fundamentals": [[1023, "python-the-language-fundamentals"]], "Unit Testing With googletest": [[1138, "unit-testing-with-googletest"]], "WS2023/24: Group Project - Tasks": [[124, "ws2023-24-group-project-tasks"]], "Datalogger": [[124, "datalogger"], [131, "datalogger"]], "Boiling Pot": [[124, "boiling-pot"], [131, "boiling-pot"]], "Peripherals": [[124, "peripherals"], [131, "peripherals"]], "Screenplay: Pointless Blinking With Python, asyncio, and libgpiod (and a Raspberry Pi of Course)": [[63, "screenplay-pointless-blinking-with-python-asyncio-and-libgpiod-and-a-raspberry-pi-of-course"]], "Setup Before Presentation": [[63, "setup-before-presentation"]], "Greeting": [[63, "greeting"]], "Multiple Background Threads": [[63, "multiple-background-threads"]], "Enter asyncio": [[63, "enter-asyncio"]], "Character Device Based GPIO": [[63, "character-device-based-gpio"]], "GPIO Device": [[63, "gpio-device"]], "Most Basic Feature: Setting GPIO Values": [[63, "most-basic-feature-setting-gpio-values"]], "Entire Matrix On/Off": [[63, "entire-matrix-on-off"]], "Bringing All Together": [[63, "bringing-all-together"]], "Modularize": [[63, "modularize"]], "Play A Bit: Blink Entire Rows": [[63, "play-a-bit-blink-entire-rows"]], "Coroutines?": [[63, "coroutines"]], "Not Enough: sequence()": [[63, "not-enough-sequence"]], "Looping: forever()": [[63, "looping-forever"]], "A Stripped-Down Program (\u27f6 Factory)": [[63, "a-stripped-down-program-longrightarrow-factory"]], "Turn blink() Into A Factory": [[63, "turn-blink-into-a-factory"]], "Anti-Clumsy Decorator: blink() Wrapper": [[63, "anti-clumsy-decorator-blink-wrapper"]], "@program, Finally": [[63, "program-finally"]], "Playground: cycle()": [[63, "playground-cycle"]], "Fast Forward: any(), And Cancellation": [[63, "fast-forward-any-and-cancellation"]], "Playground: on()": [[63, "playground-on"]], "Goodbye": [[63, "goodbye"]], "WS2023/24": [[131, "ws2023-24"]], "2023-10-05 (6 VO)": [[131, "vo"]], "OO: Recap": [[131, "oo-recap"]], "Plan \ud83d\udcaa": [[131, "plan-muscle"]], "OO: Polymorphism": [[131, "oo-polymorphism"]], "Git Collaboration (via Github, but not necessarily): Forks And Pull Request": [[131, "git-collaboration-via-github-but-not-necessarily-forks-and-pull-request"]], "Tasks, First Round": [[131, "tasks-first-round"]], "2023-11-03 (6 VO)": [[131, "id1"]], "Organizational": [[131, "organizational"]], "OO: Design?": [[131, "oo-design"]], "Hardware Overview": [[131, "hardware-overview"]], "2023-11-09 (3 VO)": [[131, "id2"]], "2023-11-10 (3 VO)": [[131, "id4"]], "2023-11-17 (3 VO)": [[131, "id6"]], "OO, And Software Development At Large": [[131, "oo-and-software-development-at-large"]], "Updating A Fork From Upstream": [[131, "updating-a-fork-from-upstream"]], "2023-11-20 (6 VO)": [[131, "id8"]], "Container Templates (std::map)": [[131, "container-templates-std-map"]], "New Tasks: MQTT And CSV Sink Implementations": [[131, "new-tasks-mqtt-and-csv-sink-implementations"]], "Datalogger Pull Request": [[131, "datalogger-pull-request"]], "Boiling Pot, Switches": [[131, "boiling-pot-switches"]], "2023-12-07 (6 VO)": [[131, "id10"]], "Renames": [[131, "renames"]], "2023-12-14 (6 VO)": [[131, "id12"]]}, "indexentries": {}})